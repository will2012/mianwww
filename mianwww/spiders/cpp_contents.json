[{"contents": ["\u4e00\u3001\u8bf7\u586b\u5199BOOL , float, \u6307\u9488\u53d8\u91cf \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\u3002\uff0810\u5206\uff09", "\n\u63d0\u793a\uff1a\u8fd9\u91cc\u201c\u96f6\u503c\u201d\u53ef\u4ee5\u662f0, 0.0 , FALSE\u6216\u8005\u201c\u7a7a\u6307\u9488\u201d\u3002\u4f8b\u5982 int \u53d8\u91cf n", "\n\u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\u4e3a\uff1a", "\nif ( n == 0 )", "\nif ( n != 0 )", "\n\u4ee5\u6b64\u7c7b\u63a8\u3002", "\n\u8bf7\u5199\u51fa BOOL flag \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\uff1a", "\n\u8bf7\u5199\u51fa float x \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\uff1a", "\n\u8bf7\u5199\u51fa char *p \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\uff1a", "\n\u4e8c\u3001\u4ee5\u4e0b\u4e3aWindows NT\u4e0b\u768432\u4f4dC++\u7a0b\u5e8f\uff0c\u8bf7\u8ba1\u7b97sizeof\u7684\u503c\uff0810\u5206\uff09", "\nchar str[] = \u201cHello\u201d ;", "\nchar *p = str ;", "\nint n = 10;", "\n\u8bf7\u8ba1\u7b97", "\nsizeof (str ) =", "\nsizeof ( p ) =", "\nsizeof ( n ) = void Func ( char str[100])", "\n{", "\n\u8bf7\u8ba1\u7b97", "\nsizeof( str ) =", "\n}", "\nvoid *p = malloc( 100 );", "\n\u8bf7\u8ba1\u7b97", "\nsizeof ( p ) =", "\u4e09\u3001\u7b80\u7b54\u9898\uff0825\u5206\uff09", "\n1\u3001\u5934\u6587\u4ef6\u4e2d\u7684 ifndef/define/endif \u5e72\u4ec0\u4e48\u7528\uff1f", "\n2\u3001#include \u548c #include \u201cfilename.h\u201d \u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n3\u3001const \u6709\u4ec0\u4e48\u7528\u9014\uff1f\uff08\u8bf7\u81f3\u5c11\u8bf4\u660e\u4e24\u79cd\uff09", "\n4\u3001\u5728C++ \u7a0b\u5e8f\u4e2d\u8c03\u7528\u88ab C\u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u7684\u51fd\u6570\uff0c\u4e3a\u4ec0\u4e48\u8981\u52a0 extern \u201cC\u201d\u58f0\u660e\uff1f", "\n5\u3001\u8bf7\u7b80\u8ff0\u4ee5\u4e0b\u4e24\u4e2afor\u5faa\u73af\u7684\u4f18\u7f3a\u70b9", "\n// \u7b2c\u4e00\u4e2a", "\nfor (i=0; i", "\n{", "\nif (condition)", "\nDoSomething();", "\nelse", "\nDoOtherthing();", "\n} // \u7b2c\u4e8c\u4e2a", "\nif (condition)", "\n{", "\nfor (i=0; i", "\nDoSomething();", "\n}", "\nelse", "\n{", "\nfor (i=0; i", "\nDoOtherthing();", "\n}", "\n\u4f18\u70b9\uff1a", "\n\u7f3a\u70b9\uff1a", "\n\u4f18\u70b9\uff1a", "\n\u7f3a\u70b9\uff1a", "\n\u56db\u3001\u6709\u5173\u5185\u5b58\u7684\u601d\u8003\u9898\uff0820\u5206\uff09", "\nvoid GetMemory(char *p)", "\n{", "\np = (char *)malloc(100);", "\n}", "\nvoid Test(void)", "\n{", "\nchar *str = NULL;", "\nGetMemory(str);", "\nstrcpy(str, \u201chello world\u201d);", "\nprintf(str);", "\n}", "\n\u8bf7\u95ee\u8fd0\u884cTest\u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n\u7b54\uff1a", "char *GetMemory(void)", "{ ", "char p[] = \u201chello world\u201d;", "return p;", "}", "void Test(void)", "{", "char *str = NULL;", "str = GetMemory(); ", "printf(str);", "}", "\n\u8bf7\u95ee\u8fd0\u884cTest\u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\u7b54\uff1a", "Void GetMemory2(char **p, int num)", "\n{", "\n*p = (char *)malloc(num);", "\n}", "\nvoid Test(void)", "\n{", "\nchar *str = NULL;", "\nGetMemory(&str, 100);", "\nstrcpy(str, \u201chello\u201d);", "\nprintf(str);", "\n}", "\n\u8bf7\u95ee\u8fd0\u884cTest\u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n\u7b54\uff1a", "\nvoid Test(void)", "\n{", "\nchar *str = (char *) malloc(100);", "\nstrcpy(str, \u201chello\u201d);", "\nfree(str);", "\nif(str != NULL)", "\n{", "\nstrcpy(str, \u201cworld\u201d);", "\nprintf(str);", "\n}", "\n}", "\n\u8bf7\u95ee\u8fd0\u884cTest\u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\u7b54\uff1a", "\n\u4e94\u3001\u7f16\u5199strcpy\u51fd\u6570\uff0810\u5206\uff09", "\n\u5df2\u77e5strcpy\u51fd\u6570\u7684\u539f\u578b\u662f", "\nchar *strcpy(char *strDest, const char *strSrc);", "\n\u5176\u4e2dstrDest\u662f\u76ee\u7684\u5b57\u7b26\u4e32\uff0cstrSrc\u662f\u6e90\u5b57\u7b26\u4e32\u3002", "\n\uff081\uff09\u4e0d\u8c03\u7528C++/C\u7684\u5b57\u7b26\u4e32\u5e93\u51fd\u6570\uff0c\u8bf7\u7f16\u5199\u51fd\u6570 strcpy", "\n\uff082\uff09strcpy\u80fd\u628astrSrc\u7684\u5185\u5bb9\u590d\u5236\u5230strDest\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u8981char * \u7c7b\u578b\u7684\u8fd4\u56de\u503c\uff1f", "\n\u516d\u3001\u7f16\u5199\u7c7bString\u7684\u6784\u9020\u51fd\u6570\u3001\u6790\u6784\u51fd\u6570\u548c\u8d4b\u503c\u51fd\u6570\uff0825\u5206\uff09", "\n\u5df2\u77e5\u7c7bString\u7684\u539f\u578b\u4e3a\uff1a", "\nclass String", "\n{", "\npublic:", "\nString(const char *str = NULL); // \u666e\u901a\u6784\u9020\u51fd\u6570", "\nString(const String &other); // \u62f7\u8d1d\u6784\u9020\u51fd\u6570", "\n~ String(void); // \u6790\u6784\u51fd\u6570", "\nString & operate =(const String &other); // \u8d4b\u503c\u51fd\u6570", "\nprivate:", "\nchar *m_data; // \u7528\u4e8e\u4fdd\u5b58\u5b57\u7b26\u4e32", "\n};", "\n\u8bf7\u7f16\u5199String\u7684\u4e0a\u8ff04\u4e2a\u51fd\u6570\u3002"], "title": "\u676d\u5dde-\u6052\u534e\u7f51\u7edcVC++\u9762\u8bd5\u9898"},
{"contents": ["1.\u7528\u4f60\u719f\u6089\u7684\u8bed\u8a00\u63cf\u8ff0\u5e76\u6784\u9020\u4e00\u4e2a\u57fa\u4e8e\u5b57\u7b26\u4e32\u8282\u70b9\u7684\u4e8c\u53c9\u6811\uff0c\u5e76\u8bf4\u660e\u5982\u4f55\u5b9e\u73b0\u901a\u8fc7\u5173\u952e\u8bcd\u5bf9\u8282\u70b9\u8fdb\u884c\u6a21\u7cca\u67e5\u8be2\u3002", "2.\u5728\u5206\u6790\u67d0\u4e2aC++\u6e90\u6587\u4ef6\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6709\u8fd9\u6837\u4e00\u884c\u53d8\u91cf\u5b9a\u4e49\u5f0f\uff1a", "\n    int t_from=20,t_to=12,t_length=120,i_count,t_usetime;", "\n    \u73b0\u5728\u4f60\u5e76\u4e0d\u77e5\u9053\u8fd9\u884c\u4e00\u5171\u5b9a\u4e49\u4e86\u591a\u5c11\u4e2a\u53d8\u91cf\uff0c\u4ee5\u53ca\u54ea\u4e9b\u53d8\u91cf\u8fdb\u884c\u4e86\u521d\u59cb\u503c\u8bbe\u5b9a\uff0c\u8981\u6c42\u4ece\u8be5\u8bed\u53e5\u4e2d\u89e3\u6790\u51fa\u6240\u6709\u4ee5\u201ct_\u201d\u5f00\u5934\u7684\u53d8\u91cf\u540d\uff0c\u5e76\u4e14\u5982\u679c\u8be5\u53d8\u91cf\u8d4b\u4e88\u4e86\u521d\u59cb\u503c\u7684\u8bdd\u4e5f\u9700\u8981\u63d0\u53d6\u51fa\u6765\uff0c\u8bf7\u6784\u9020\u4e00\u4e2a\u65b9\u6cd5\u6765\u5b9e\u73b0\u8be5\u8981\u6c42\u3002", "3.\u5982\u679c\u73b0\u5728\u4ea4\u7ed9\u4f60\u4e00\u4e2a\u6807\u51c6\u7684Windows\u52a8\u6001\u5e93mylib.dll\uff0c\u5df2\u77e5\u5b83\u91c7\u7528C++\u8bed\u8a00\u7f16\u7a0b\u5b9e\u73b0\uff0c\u63d0\u4f9b\u4e86\u82e5\u5e72\u4e2a\u529f\u80fd\u63a5\u53e3\uff0c\u6309\u7167\u4f60\u7684\u7ecf\u9a8c\u548c\u5224\u65ad\uff0c\u4f60\u8ba4\u4e3a\u662f\u5426\u6709\u65b9\u6cd5\u901a\u8fc7\u5de5\u5177\u6216\u8005\u7f16\u7a0b\u7684\u65b9\u5f0f\u83b7\u5f97\u8fd9\u4e9b\u529f\u80fd\u63a5\u53e3\u53ca\u5176\u53c2\u6570\u4fe1\u606f\uff0c\u5982\u679c\u6709\uff0c\u8bf7\u5bf9\u8be5\u65b9\u6cd5\u8fdb\u884c\u63cf\u8ff0\u3002", "4.\u5728\u4e00\u4e2aVC\u7f16\u5199\u7684\u5bf9\u8bdd\u6846\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u5bf9\u8bdd\u6846\u7684OnInitDialog\u4e8b\u4ef6\u51fd\u6570\u91cc\u9762\u6700\u540e\u6709\u8fd9\u4e48\u4e00\u6bb5\u7a0b\u5e8f\uff1a", "\n    int scx = ::GetSystemMetrics(SM_CXSCREEN);", "\n    int scy = ::GetSystemMetrics(SM_CYSCREEN);", "\n    CRect myrect;", "\n    GetWindowRect(&myrect);", "\n    int fromx = (scx \u2013 myrect.Width())/2;", "\n    int fromy = (scy \u2013 myrect.Height())/2;", "\n    SetWindowPos(NULL,fromx,fromy,myrect.Width(),myrect.Height(),SWP_NOZORDER);", "\n    \u8bf7\u63cf\u8ff0\u5176\u4f5c\u7528\uff0c\u4f60\u89c9\u5f97\u8fd9\u6bb5\u7a0b\u5e8f\u5728\u65b9\u5f0f\u3001\u6548\u7387\u4e0a\u662f\u5426\u80fd\u8fdb\u884c\u63d0\u9ad8\uff0c\u5982\u679c\u80fd\uff0c\u8bf7\u8bf4\u660e\u65b9\u6cd5\u3002", "5.\u5c31\u4f60\u6240\u719f\u6089\u7684\u65b9\u6cd5\u63cf\u8ff0Windows\u5e73\u53f0\u4e0b\u7684\u97f3\u9891\u6570\u636e\u91c7\u96c6\u8fc7\u7a0b\uff0c\u5982\u679c\u53ef\u4ee5\uff0c\u8bf7\u5217\u51fa\u5173\u952e\u4ee3\u7801\u3002"], "title": "\u5317\u4eac-\u534e\u7f8e\u8fc5\u8fbeC/VC++\u5de5\u7a0b\u5e08\u7b14\u8bd5\u8bd5\u9898"},
{"contents": ["\u8bd5\u9898\u4e00\uff1a", "\n\u6d4b\u8bd5\u5185\u5bb9\uff1a", "\n        1\u3001\u7528MapInfo Professional\u65b0\u5efa\u4e00\u4e2a\u5305\u542b\u81f3\u5c112\u4e2a\u5b57\u6bb5\u7684\u56fe\u5c42\u6587\u4ef6", "\n           A.tab\uff1b\uff085\uff09", "\n        2\u3001\u7528MapInfo Professional\u5728A.tab\u4e2d\u6dfb\u52a0\u4e24\u4e2a\u6298\u7ebf\u5bf9\u8c61Line1", "\n           \u548cLine2\uff0c\u8981\u6c42\u8fd9\u4e24\u4e2a\u5bf9\u8c61\u7684\u8282\u70b9\u6570\u90fd\u4e0d\u5c11\u4e8e5\u4e2a\uff0cLine1\u548cLine2\u5fc5", "\n           \u987b\u76f8\u4ea4\uff1b\uff085\uff09", "\n        3\u3001\u7528MapX + VB( or VC )\u7f16\u5199\u4e00\u6bb5\u7a0b\u5e8f\uff0c\u5728\u7a0b\u5e8f\u4e2d\u5b9e\u73b0\uff1a", "\n              3.1\u3001\u6253\u5f00A.tab\u5e76\u663e\u793a\u5728mapx\u63a7\u4ef6\u4e2d \uff1b\uff0810\uff09", "\n              3.2\u3001\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7269\u7406\u56fe\u5c42\u6587\u4ef6B.tab\uff0cB.tab\u4e0eA.tab\u5728\u540c\u4e00\u4e2a", "\n                   \u76ee\u5f55\u4e0b\uff1b\uff0815\uff09", "\n              3.3\u3001\u5c06Line1\u548cLine2\u5728\u4ea4\u70b9\u5904\u5404\u81ea\u622a\u65ad\uff0c\u751f\u62104\u4e2a\u65b0\u7684\u6298\u7ebf\u5bf9\u8c61", "\n                   Line1_1\u3001Line1_2\u3001Line2_1\u3001Line2_2\uff1b\uff0835\uff09", "\n              3.4\u3001\u5c06\u622a\u65ad\u4ea7\u751f\u76844\u6761\u65b0\u7ebf\u6bb5\u6dfb\u52a0\u5230B\u4e0a\uff0c\u5e76\u5c06\u8fd9\u4e9b\u7ebf\u6bb5\u6309\u5b83\u4eec\u5728", "\n                   B\u4e0a\u7684\u751f\u6210\u987a\u5e8f\u6807\u4e0a\u5e8f\u53f7\uff0c\u8981\u6c42\u5728\u56fe\u4e0a\u80fd\u770b\u5230\u6807\u6ce8\uff1b\uff0830\uff09", "\u8bd5\u9898\u4e8c\uff1a", "\n\u6d4b\u8bd5\u5185\u5bb9\uff1a", "\n        1\u3001\u7528MapInfo Professional\u65b0\u5efa\u4e00\u4e2a\u5305\u542b\u81f3\u5c112\u4e2a\u5b57\u6bb5\u7684\u56fe\u5c42\u6587\u4ef6", "\n           A.tab\uff0c\u5176\u4e2d\u4e00\u4e2a\u5b57\u6bb5\u4e3aName\uff08Char 50\uff09\uff0c\u5e76\u5728\u56fe\u5c42\u4e2d\u521b\u5efa\u81f3\u5c1110\u4e2a", "\n           \u5bf9\u8c61\uff1b\uff085\uff09", "\n        2\u3001\u7528Access\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6570\u636e\u5e93A.mdb\uff0c\u5728A.mdb\u4e2d\u521b\u5efa\u4e00\u4e2a\u5305\u542b\u81f3\u5c112", "\n           \u4e2a\u5b57\u6bb5\u7684\u8868T\uff0c\u5176\u4e2d\u4e00\u4e2a\u5b57\u6bb5\u4e3aName\uff08Char 50\uff09\uff0c\u53e6\u4e00\u4e2a\u5b57\u6bb5\u4e3a", "\n           Value\uff08Numeric\uff09\uff1b\uff085\uff09", "\n        3\u3001\u5728T\u4e2d\u6dfb\u52a0\u81f3\u5c1110\u6761\u8bb0\u5f55\uff0c\u6bcf\u6761\u8bb0\u5f55\u7684Name\u503c\u5e94\u4e0eA\u4e2d\u7684Name\u503c\u76f8\u5bf9", "\n           \u5e94\uff0c\u6bcf\u6761\u8bb0\u5f55\u7684Value\u503c\u53ef\u4ee5\u4efb\u53d60-100\u4e2d\u7684\u6574\u6570\uff0c\u4f46\u4e0d\u5141\u8bb8\u91cd\u590d\uff1b", "\n           \uff085\uff09", "\n        4\u3001\u7528MapX + VB( or VC )\u7f16\u5199\u4e00\u6bb5\u7a0b\u5e8f\uff0c\u5728\u7a0b\u5e8f\u4e2d\u5b9e\u73b0\uff1a", "\n              4.1\u3001\u6253\u5f00A.tab\u5e76\u663e\u793a\u5728mapx\u63a7\u4ef6\u4e2d \uff1b\uff0810\uff09", "\n              4.2\u3001\u901a\u8fc7ADO\u8fde\u63a5T\u5e76\u663e\u793a\u5728Grid\u6216List\u7b49\u5176\u5b83\u63a7\u4ef6", "\n                   \u4e2d\uff1b\uff0810\uff09", "\n              4.3\u3001\u5728\u754c\u9762\u4e0a\u5b9e\u73b0\u7531\u7528\u6237\u81ea\u5b9a\u4e49\u67e5\u8be2\u6761\u4ef6Value > xx\uff0cxx\u4e3a100", "\n                   \u4ee5\u5185\u7684\u6574\u6570\uff0c\u7136\u540e\u7531\u7528\u6237\u5728\u5730\u56fe\u4e0a\u5355\u51fb\u9f20\u6807\u6216\u662f\u62c9\u6846\uff0c\u6309\u7528", "\n                   \u6237\u8f93\u5165\u7684\u6761\u4ef6\u53ca\u9f20\u6807\u9009\u5b9a\u7684\u8303\u56f4\u67e5\u8be2\u56fe\u5c42A\u4e0a\u6240\u6709\u6ee1\u8db3\u6761\u4ef6", "\n                   \u7684\u5bf9\u8c61\uff1b\uff08\u5b9e\u73b0\u5355\u51fb+20 \uff0c\u5b9e\u73b0\u62c9\u6846+25\uff09", "\n              4.4\u3001\u4ee5MessageBox\u7684\u5f62\u5f0f\uff0c\u663e\u793a\u6240\u6709\u7b26\u5408\u6761\u4ef6\u7684\u5bf9\u8c61\u7684\u5730\u7406\u5c5e", "\n                   \u6027\uff0c\u5305\u62ec\u5bf9\u8c61\u7684Name\u3001\u7c7b\u578b\uff08\u70b9|\u7ebf|\u9762\uff09\u3001\u5750\u6807\uff08\u5982\u679c\u5bf9\u8c61", "\n                   \u975e\u70b9\u7c7b\u578b\uff0c\u53d6\u7b2c\u4e00\u4e2a\u8282\u70b9\u5750\u6807\u5373\u53ef\uff09\uff0820\uff09\uff1b", "\n              4.5\u3001\u4ee5MessageBox\u7684\u5f62\u5f0f\uff0c\u663e\u793a\u6240\u6709\u7b26\u5408\u6761\u4ef6\u7684\u5bf9\u8c61\u7684\u6765\u81ea\u8868T", "\n                   \u7684Name\u548cValue\u503c\uff1b\uff0820\uff09"], "title": "\u4e0a\u6d77C++\u7b14\u8bd5\u9898"},
{"contents": ["1\u3001\u5c40\u90e8\u53d8\u91cf\u80fd\u5426\u548c\u5168\u5c40\u53d8\u91cf\u91cd\u540d\uff1f", "\n\ue615\ue615\u7b54\uff1a\u5c40\u90e8\u53d8\u91cf\u53ef\u4ee5\u4e0e\u5168\u5c40\u53d8\u91cf\u540c\u540d\uff0c\u5728\u51fd\u6570\u5185\u5f15\u7528\u8fd9\u4e2a\u53d8\u91cf\u65f6\uff0c\u4f1a\u7528\u5230\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u800c\u4e0d\u4f1a\u7528\u5230\u5168\u5c40\u53d8\u91cf\u3002\u5bf9\u4e8e\u6709\u4e9b\u7f16\u8bd1\u5668\u800c\u8a00\uff0c\u5728\u540c\u4e00\u4e2a\u51fd\u6570\u5185\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u6bd4\u5982\u5728\u4e24\u4e2a\u5faa\u73af\u4f53\u5185\u90fd\u5b9a\u4e49\u4e00\u4e2a\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u800c\u90a3\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u5c31\u5728\u90a3\u4e2a\u5faa\u73af\u4f53\u5185", "\n\ue615\ue615", "\n\ue615\ue6152\u3001\u5982\u4f55\u5f15\u7528\u4e00\u4e2a\u5df2\u7ecf\u5b9a\u4e49\u8fc7\u7684\u5168\u5c40\u53d8\u91cf\uff1f", "\n\ue615\ue615\u7b54\uff1a\u53ef\u4ee5\u7528\u5f15\u7528\u5934\u6587\u4ef6\u7684\u65b9\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u7528extern\u5173\u952e\u5b57\uff0c\u5982\u679c\u7528\u5f15\u7528\u5934\u6587\u4ef6\u65b9\u5f0f\u6765\u5f15\u7528\u67d0\u4e2a\u5728\u5934\u6587\u4ef6\u4e2d\u58f0\u660e\u7684\u5168\u5c40\u53d8\u7406\uff0c\u5047\u5b9a\u4f60\u5c06\u90a3\u4e2a\u53d8\u5199\u9519\u4e86\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4\u4f1a\u62a5\u9519\uff0c\u5982\u679c\u4f60\u7528extern\u65b9\u5f0f\u5f15\u7528\u65f6\uff0c\u5047\u5b9a\u4f60\u72af\u4e86\u540c\u6837\u7684\u9519\u8bef\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4\u4e0d\u4f1a\u62a5\u9519\uff0c\u800c\u5728\u8fde\u63a5\u671f\u95f4\u62a5\u9519\u3002\uff08\u4e0d\u8981\u95ee\u6211\u4ec0\u4e48\u662f\u7f16\u8bd1\u671f\u95f4\uff0c\u4ec0\u4e48\u662f\u8fde\u63a5\u671f\u95f4\uff0c\u8bf7\u81ea\u5df1\u67e5\u8d44\u6599\uff09", "\n\ue615\ue615", "\n\ue615\ue615", "\n\ue615\ue6153\u3001\u5168\u5c40\u53d8\u91cf\u5b9a\u4e49\u5728\u53ef\u88ab\u591a\u4e2a.C\u6587\u4ef6\u5305\u542b\u7684\u5934\u6587\u4ef6\u4e2d\u53ef\u4e0d\u53ef\u4ee5\uff1f\u4e3a\u4ec0\u4e48\uff1f", "\n\ue615\ue615\u7b54\uff1a\u53ef\u4ee5\uff0c\u4f46\u8981\u52a0static", "\n\ue615\ue615", "\n\ue615\ue6154\u3001\u8bed\u53e5for( \uff1b1 \uff1b)\u6709\u4ec0\u4e48\u95ee\u9898\uff1f\u5b83\u662f\u4ec0\u4e48\u610f\u601d\uff1f", "\n\ue615\ue615\u7b54\uff1a\u6b7b\u5faa\u73af\uff0c\u540cwhile(1)\uff0c\u8fd9\u79cd\u5199\u6cd5\u5e76\u4e0d\u89c4\u8303\uff0c\u53ef\u8bfb\u6027\u5dee\uff0c\u4e00\u822c\u4e0d\u7528", "\n\ue615\ue615", "\n\ue615\ue6155\u3001do\u2026\u2026while\u548cwhile\u2026\u2026do\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\ue615\ue615\u7b54\uff1a\u524d\u4e00\u4e2a\u5faa\u73af\u4e00\u904d\u518d\u5224\u65ad\uff0c\u540e\u4e00\u4e2a\u5224\u65ad\u4ee5\u540e\u518d\u5faa\u73af", "\n\ue615\ue615", "\n\ue615\ue6156\u3001\u8bf7\u5199\u51fa\u4e0b\u5217\u4ee3\u7801\u7684\u8f93\u51fa\u5185\u5bb9", "\n\ue615\ue615#include", "\n\ue615\ue615main()", "\n\ue615\ue615{", "\n\ue615\ue615int a,b,c,d;", "\n\ue615\ue615a=10;", "\n\ue615\ue615b=a++;", "\n\ue615\ue615c=++a;", "\n\ue615\ue615d=10*a++;", "\n\ue615\ue615printf(\u201cb\uff0cc\uff0cd\uff1a%d\uff0c%d\uff0c%d\u201d\uff0cb\uff0cc\uff0cd\uff09;", "\n\ue615\ue615return 0;", "\n\ue615\ue615}", "\n\ue615\ue615\u7b54\uff1a10\uff0c12\uff0c120", "\n\ue615\ue615", "\n\ue615\ue6157.static\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\ue615\ue615\u53ea\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4e2d\u4f7f\u7528\u7684\u51fd\u6570\u5e94\u8be5\u8bf4\u660e\u4e3a\u5185\u90e8\u51fd\u6570(static)\uff0c\u5185\u90e8\u51fd\u6570\u5e94\u8be5\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4e2d\u8bf4\u660e\u548c\u5b9a\u4e49\u3002\u5bf9\u4e8e\u53ef\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4ee5\u5916\u4f7f\u7528\u7684\u51fd\u6570\uff0c\u5e94\u8be5\u5728\u4e00\u4e2a\u5934\u6587\u4ef6\u4e2d\u8bf4\u660e\uff0c\u8981\u4f7f\u7528\u8fd9\u4e9b\u51fd\u6570\u7684\u6e90\u6587\u4ef6\u8981\u5305\u542b\u8fd9\u4e2a\u5934\u6587\u4ef6\u3002", "\n\ue615\ue615", "\n\ue615\ue6158.static\u5168\u5c40\u53d8\u91cf\u4e0e\u666e\u901a\u7684\u5168\u5c40\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\ue615\ue615\u5168\u5c40\u53d8\u91cf(\u5916\u90e8\u53d8\u91cf)\u7684\u8bf4\u660e\u4e4b\u524d\u518d\u51a0\u4ee5static \u5c31\u6784\u6210\u4e86\u9759\u6001\u7684\u5168\u5c40\u53d8\u91cf\u3002\u5168\u5c40\u53d8\u91cf\u672c\u8eab\u5c31\u662f\u9759\u6001\u5b58\u50a8\u65b9\u5f0f\uff0c \u9759\u6001\u5168\u5c40\u53d8\u91cf\u5f53\u7136\u4e5f\u662f\u9759\u6001\u5b58\u50a8\u65b9\u5f0f\u3002", "\n\ue615\ue615\u8fd9\u4e24\u8005\u5728\u5b58\u50a8\u65b9\u5f0f\u4e0a\u5e76\u65e0\u4e0d\u540c\u3002\u8fd9\u4e24\u8005\u7684\u533a\u522b\u867d\u5728\u4e8e\u975e\u9759\u6001\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u662f\u6574\u4e2a\u6e90\u7a0b\u5e8f\uff0c \u5f53\u4e00\u4e2a\u6e90\u7a0b\u5e8f\u7531\u591a\u4e2a\u6e90\u6587\u4ef6\u7ec4\u6210\u65f6\uff0c\u975e\u9759\u6001\u7684\u5168\u5c40\u53d8\u91cf\u5728\u5404\u4e2a\u6e90\u6587\u4ef6\u4e2d\u90fd\u662f\u6709\u6548\u7684\u3002 \u800c\u9759\u6001\u5168\u5c40\u53d8\u91cf\u5219\u9650\u5236\u4e86\u5176\u4f5c\u7528\u57df\uff0c \u5373\u53ea\u5728\u5b9a\u4e49\u8be5\u53d8\u91cf\u7684\u6e90\u6587\u4ef6\u5185\u6709\u6548\uff0c \u5728\u540c\u4e00\u6e90\u7a0b\u5e8f\u7684\u5176\u5b83\u6e90\u6587\u4ef6\u4e2d\u4e0d\u80fd\u4f7f\u7528\u5b83\u3002\u7531\u4e8e\u9759\u6001\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u5c40\u9650\u4e8e\u4e00\u4e2a\u6e90\u6587\u4ef6\u5185\uff0c\u53ea\u80fd\u4e3a\u8be5\u6e90\u6587\u4ef6\u5185\u7684\u51fd\u6570\u516c\u7528\uff0c \u56e0\u6b64\u53ef\u4ee5\u907f\u514d\u5728\u5176\u5b83\u6e90\u6587\u4ef6\u4e2d\u5f15\u8d77\u9519\u8bef\u3002\u4ece\u4ee5\u4e0a\u5206\u6790\u53ef\u4ee5\u770b\u51fa\uff0c \u628a\u5c40\u90e8\u53d8\u91cf\u6539\u53d8\u4e3a\u9759\u6001\u53d8\u91cf\u540e\u662f\u6539\u53d8\u4e86\u5b83\u7684\u5b58\u50a8\u65b9\u5f0f\u5373\u6539\u53d8\u4e86\u5b83\u7684\u751f\u5b58\u671f\u3002\u628a\u5168\u5c40\u53d8\u91cf\u6539\u53d8\u4e3a\u9759\u6001\u53d8\u91cf\u540e\u662f\u6539\u53d8\u4e86\u5b83\u7684\u4f5c\u7528\u57df\uff0c \u9650\u5236\u4e86\u5b83\u7684\u4f7f\u7528\u8303\u56f4\u3002", "\n\ue615\ue615", "\n\ue615\ue6159.\u7a0b\u5e8f\u7684\u5c40\u90e8\u53d8\u91cf\u5b58\u5728\u4e8e\uff08\u6808\uff09\u4e2d\uff0c\u5168\u5c40\u53d8\u91cf\u5b58\u5728\u4e8e\uff08\u9759\u6001\u533a \uff09\u4e2d\uff0c\u52a8\u6001\u7533\u8bf7\u6570\u636e\u5b58\u5728\u4e8e\uff08\u5806 \uff09\u4e2d\u3002", "\n\ue615\ue615", "\n\ue615\ue61510.\u8bbe\u6709\u4ee5\u4e0b\u8bf4\u660e\u548c\u5b9a\u4e49\uff1a", "\n\ue615\ue615typedef union {long i; int k[5]; char c;} DATE;", "\n\ue615\ue615struct data { int cat; DATE cow; double dog;} too;", "\n\ue615\ue615DATE max;", "\n\ue615\ue615\u5219\u8bed\u53e5 printf(\u201c%d\u201d,sizeof(struct date)+sizeof(max));\u7684\u6267\u884c\u7ed3\u679c\u662f\uff1a___52____", "\n\ue615\ue615", "\n\ue615\ue61511.\u961f\u5217\u548c\u6808\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\ue615\ue615\u961f\u5217\u5148\u8fdb\u5148\u51fa\uff0c\u6808\u540e\u8fdb\u5148\u51fa", "\n\ue615\ue615", "\n\ue615\ue61512.\u5199\u51fa\u4e0b\u5217\u4ee3\u7801\u7684\u8f93\u51fa\u5185\u5bb9", "\n\ue615\ue615#include", "\n\ue615\ue615int inc(int a)", "\n\ue615\ue615{", "\n\ue615\ue615return(++a);", "\n\ue615\ue615}", "\n\ue615\ue615int multi(int*a,int*b,int*c)", "\n\ue615\ue615{", "\n\ue615\ue615return(*c=*a**b);", "\n\ue615\ue615}", "\n\ue615\ue615typedef int(FUNC1)(int in);", "\n\ue615\ue615typedef int(FUNC2) (int*,int*,int*);", "\n\ue615\ue615", "\n\ue615\ue615void show(FUNC2 fun,int arg1, int*arg2)", "\n\ue615\ue615{", "\n\ue615\ue615INCp=&inc;", "\n\ue615\ue615int temp =p(arg1);", "\n\ue615\ue615fun(&temp,&arg1, arg2);", "\n\ue615\ue615printf(\u201c%d\\n\u201d,*arg2);", "\n\ue615\ue615}", "\n\ue615\ue615", "\n\ue615\ue615main()", "\n\ue615\ue615{", "\n\ue615\ue615int a;", "\n\ue615\ue615show(multi,10,&a);", "\n\ue615\ue615return 0;", "\n\ue615\ue615}", "\n\ue615\ue615", "\n\ue615\ue615\u7ffb\u8bd1\u4e00\u4e0b", "\n\ue615\ue615==================================", "\n\ue615\ue615#include", "\n\ue615\ue615using namespace std;", "\n\ue615\ue615", "\n\ue615\ue615// \u8fd4\u56dea + 1", "\n\ue615\ue615int inc(int a){", "\n\ue615\ue615return a+1;", "\n\ue615\ue615}", "\n\ue615\ue615// out = a*b", "\n\ue615\ue615int multi(int& a, int& b, int& out){", "\n\ue615\ue615return out = a*b;", "\n\ue615\ue615}", "\n\ue615\ue615", "\n\ue615\ue615// \u5b9a\u4e49\u4e24\u79cd\u51fd\u6570,FUNC1\u5bf9\u5e94inc, FUNC2\u5bf9\u5e94 multi", "\n\ue615\ue615typedef int(FUNC1) (int in);", "\n\ue615\ue615typedef int(FUNC2) (int&,int&,int&);", "\n\ue615\ue615", "\n\ue615\ue615// \u8be1\u5f02\u7684\u51fd\u6570,\u8fd9\u662f\u6a21\u7ccaC\u5927\u8d5b\u4e48\u2026", "\n\ue615\ue615void show( FUNC2* func, int num, int& out ){", "\n\ue615\ue615FUNC1* pInc = inc;//\u539f\u6587\u8fd9\u53e5\u5199\u9519\u4e86\u2026orz\u2026 INC\u6839\u672c\u6ca1\u5b9a\u4e49", "\n\ue615\ue615int numAdd1 = pInc( num );", "\n\ue615\ue615// \u7b49\u4ef7\u4e8e numAdd1 = inc( num );", "\n\ue615\ue615// \u7ed3\u679c num\u4ecd\u7136\u662f10, numAdd1 = 11", "\n\ue615\ue615", "\n\ue615\ue615// \u8c03\u7528func\u51fd\u6570,\u53ef\u4ee5\u770b\u5230, main\u4e2d\u4f20\u7ed9func\u7684\u662f multi.", "\n\ue615\ue615// \u6240\u4ee5\u8c03\u7528\u7684\u662f multi( 11, 10, out ), out = 110", "\n\ue615\ue615func( numAdd1, num, out );", "\n\ue615\ue615cout\n\ue615\ue615", "\n\ue615\ue615int main(){", "\n\ue615\ue615int a;", "\n\ue615\ue615show(multi,10, a);", "\n\ue615\ue615return 0;", "\n\ue615\ue615}", "\n\ue615\ue615==================================", "\n\ue615\ue615", "\n\ue615\ue61513.\u8bf7\u627e\u51fa\u4e0b\u9762\u4ee3\u7801\u4e2d\u7684\u6240\u4ee5\u9519\u8bef", "\n\ue615\ue615\u8bf4\u660e\uff1a\u4ee5\u4e0b\u4ee3\u7801\u662f\u628a\u4e00\u4e2a\u5b57\u7b26\u4e32\u5012\u5e8f\uff0c\u5982\u201cabcd\u201d\u5012\u5e8f\u540e\u53d8\u4e3a\u201cdcba\u201d", "\n\ue615\ue615==================================", "\n\ue615\ue615main(){", "\n\ue615\ue615char*src=\u201dhello,world\u201d;", "\n\ue615\ue615char* dest=NULL;", "\n\ue615\ue615", "\n\ue615\ue615int len=strlen(src);", "\n\ue615\ue615dest=(char*)malloc(len);//!1 \u5c11\u5206\u914d\u4e86\u4e00\u5b57\u8282. strlen\u8ba1\u6570\u4e0d\u5305\u62ec\\0", "\n\ue615\ue615", "\n\ue615\ue615char* d = dest;", "\n\ue615\ue615char* s = src[len];//!2 \u4e24\u4e2a\u9519\u8bef. \u5e94\u8be5\u4e3a &src[ len-1 ]", "\n\ue615\ue615while( len\u2013 != 0 )", "\n\ue615\ue615d++=s\u2013;//!3 *d++ = *s\u2013;", "\n\ue615\ue615//!4 \u5c3e\u90e8\u8981\\0,\u5e94\u52a0\u4e0a *d = 0;", "\n\ue615\ue615", "\n\ue615\ue615printf(\u201c%s\u201d,dest);", "\n\ue615\ue615return 0;", "\n\ue615\ue615}", "\n\ue615\ue615==================================", "\n\ue615\ue615", "\n\ue615\ue615\u4fee\u6b63\u540e\u7684\u7b54\u6848:", "\n\ue615\ue615==================================", "\n\ue615\ue615int main(){", "\n\ue615\ue615char* src = \u201chello,world\u201d;", "\n\ue615\ue615", "\n\ue615\ue615int len = strlen(src);", "\n\ue615\ue615char* dest = (char*)malloc(len+1);.", "\n\ue615\ue615", "\n\ue615\ue615char* d = dest;", "\n\ue615\ue615char* s = &src[len-1];", "\n\ue615\ue615while( len\u2013 != 0 )", "\n\ue615\ue615*d++=*s\u2013;", "\n\ue615\ue615*d = 0;", "\n\ue615\ue615", "\n\ue615\ue615printf(\u201c%s\u201d,dest);", "\n\ue615\ue615return 0;", "\n\ue615\ue615}", "\n\ue615\ue615=================================="], "title": "\u676d\u5dde-\u6613\u4eba\u7f51\u7edcVC\u9762\u8bd5\u9898"},
{"contents": ["\u95ee\u7b54\u9898\uff1a", "\n1\uff0e\u5b9e\u73b0\u53cc\u5411\u94fe\u8868\u5220\u9664\u4e00\u4e2a\u8282\u70b9P\uff0c\u5728\u8282\u70b9P\u540e\u63d2\u5165\u4e00\u4e2a\u8282\u70b9\uff0c\u5199\u51fa\u8fd9\u4e24\u4e2a\u51fd\u6570\u3002 ", "2\uff0e\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u5c06\u5176\u4e2d\u7684\\t\u90fd\u8f6c\u6362\u62104\u4e2a\u7a7a\u683c\u3002 ", "3\uff0eWindows\u7a0b\u5e8f\u7684\u5165\u53e3\u662f\u54ea\u91cc\uff1f\u5199\u51faWindows\u6d88\u606f\u673a\u5236\u7684\u6d41\u7a0b\u3002 ", "4\uff0e\u5982\u4f55\u5b9a\u4e49\u548c\u5b9e\u73b0\u4e00\u4e2a\u7c7b\u7684\u6210\u5458\u51fd\u6570\u4e3a\u56de\u8c03\u51fd\u6570\uff1f ", "5\uff0eC++\u91cc\u9762\u662f\u4e0d\u662f\u6240\u6709\u7684\u52a8\u4f5c\u90fd\u662fmain()\u5f15\u8d77\u7684\uff1f\u5982\u679c\u4e0d\u662f\uff0c\u8bf7\u4e3e\u4f8b\u3002 ", "6\uff0eC++\u91cc\u9762\u5982\u4f55\u58f0\u660econst void f(void)\u51fd\u6570\u4e3aC\u7a0b\u5e8f\u4e2d\u7684\u5e93\u51fd\u6570\uff1f ", "7\uff0e\u4e0b\u5217\u54ea\u4e24\u4e2a\u662f\u7b49\u540c\u7684 ", "int b; ", "A const int* a = &b; ", "B const* int a = &b; ", "C const int* const a = &b; ", "D int const* const a = &b; ", "8\uff0e\u5185\u8054\u51fd\u6570\u5728\u7f16\u8bd1\u65f6\u662f\u5426\u505a\u53c2\u6570\u7c7b\u578b\u68c0\u67e5\uff1f ", "void g(base & b){ ", "b.play; ", "} ", "void main(){ ", "son s; ", "g(s); ", "return; ", "} ", "\u7a0b\u5e8f\u8bbe\u8ba1", "\n1.\uff08\u53ef\u4ee5\u7528\u81ea\u7136\u8bed\u8a00\u6765\u63cf\u8ff0\uff0c\u4e0d\u7f16\u7a0b\uff09\uff1aC/C++\u6e90\u4ee3\u7801\u4e2d\uff0c\u68c0\u67e5\u82b1\u62ec\u5f27\uff08\u662f\u201d\uff08\u201d\u4e0e", "\n\u201c\uff09\u201d\uff0c\u201d{\u201c\u4e0e\u201d}\u201d\uff09\u662f\u5426\u5339\u914d\uff0c\u82e5\u4e0d\u5339\u914d\uff0c\u5219\u8f93\u51fa\u4e0d\u5339\u914d\u82b1\u62ec\u5f27\u6240\u5728\u7684\u884c\u4e0e\u5217\u3002", "2\uff0c\u5de7\u6392\u6570\u5b57\uff0c\u5c061,2,\u2026,19,20\u8fd920\u4e2a\u6570\u5b57\u6392\u6210\u4e00\u6392\uff0c\u4f7f\u5f97\u76f8\u90bb\u7684\u4e24\u4e2a\u6570\u5b57\u4e4b\u548c\u4e3a\u4e00\u4e2a\u7d20\u6570\uff0c\u4e14", "\n\u9996\u5c3e\u4e24\u6570\u5b57\u4e4b\u548c\u4e5f\u4e3a\u4e00\u4e2a\u7d20\u6570\u3002\u7f16\u7a0b\u6253\u5370\u51fa\u6240\u6709\u7684\u6392\u6cd5\u3002", "3\uff0c\u6253\u5370\u4e00\u4e2aN*N\u7684\u65b9\u9635\uff0cN\u4e3a\u6bcf\u8fb9\u5b57\u7b26\u7684\u4e2a\u6570\uff08 3\u3008N\u300820 \uff09\uff0c\u8981\u6c42\u6700\u5916\u5c42\u4e3a\u201dX\u201d\uff0c\u7b2c\u4e8c\u5c42\u4e3a\u201dY\u201d\uff0c\u4ece\u7b2c\u4e09\u5c42\u8d77\u6bcf\u5c42\u4f9d\u6b21\u6253\u5370\u6570\u5b570\uff0c1\uff0c2\uff0c3\uff0c\u2026", "\n\u4f8b\u5b50\uff1a\u5f53N =5\uff0c\u6253\u5370\u51fa\u4e0b\u9762\u7684\u56fe\u5f62\uff1a", "\n X X X X X", "\n X Y Y Y X", "\n X Y 0 Y X", "\n X Y Y Y X", "\n X X X X X "], "title": "\u676d\u5dde-VC\u4ebf\u6052\u79d1\u6280"},
{"contents": ["A. (C/C++\u7a0b\u5e8f\u5458) \u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\u5b8c\u6210\u4ee5\u4e0b\u529f\u80fd\uff1a", "\n       \u2013 \u4ece\u78c1\u76d8\u4e0a\u8bfb\u5165\u4e00\u4e2a\u6587\u4ef6\uff0c\u8fd9\u4e2a\u6587\u4ef6\u53ef\u80fd\u662f\u4e00\u4e2aHTML\u683c\u5f0f\u7684\u6587\u4ef6\u6216\u8005\u5176\u4ed6\u683c\u5f0f\u7684", "\n       \u2013  parse\u6b64\u6587\u4ef6\u4e2d\u53ef\u80fd\u5305\u542b\u7684RSS\u94fe\u63a5 \uff08\u53ef\u80fd0\u6216\u591a\u4e2a\uff09\u3002", "\n       \u2013 \u5217\u51fa\u627e\u5230\u7684RSS\u94fe\u63a5", "       \u6ce8\u610f\uff1a\u8bf7\u4e0d\u8981\u4f7f\u7528\u4efb\u4f55Parse HTML, XML, RSS\u76f8\u5173\u7684\u5e93\uff0c\u76f4\u63a5\u5199C/C++\u4ee3\u7801\u6765\u5904\u7406\u8bfb\u5165\u7684\u5185\u5bb9\u3002\u8bf7\u6ce8\u610f\u4ee3\u7801\u7684\u98ce\u683c\uff0c\u6587\u4ef6\u7684\u5206\u5e03\u5b89\u6392\u3001\u6587\u4ef6\u540d\u3001\u53d8\u91cf\u3001\u6837\u5f0f\u7b49\u7684\u547d\u540d\u3001\u9875\u9762\u7684\u7f8e\u89c2\u7b49\uff0c\u8fd9\u4e9b\u90fd\u5c06\u5f71\u54cd\u60a8\u7684\u5f97\u5206\u3002", "\n       \u63d0\u793a\uff1a1\u3001\u6ce8\u610f\u5404\u79cd\u5f02\u5e38\u60c5\u51b5\u7684\u5904\u7406\u3002 2\u3001\u6ce8\u610f\u4ee3\u7801\u7684\u7b80\u6d01\u548c\u6548\u7387\u3002"], "title": "\u5357\u4eac-uu zone C/C++\u7a0b\u5e8f\u5458\u9762\u8bd5\u9898"},
{"contents": ["\u5e7f\u5dde\u8fd0\u901a", "\n1.MFC\u4e2d\u6700\u4e3b\u8981\u6839\u57fa\u7c7b\uff08\uff09\uff0c\u7a97\u53e3\u7c7b\u7684\u57fa\u7c7b\uff08\uff09", "\n2.\u57fa\u4e8eMFC\u7684WIN32\u53ef\u6267\u884c\u5e94\u7528\u7a0b\u5e8f\uff0c\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u4ece\uff08\uff09\u7c7b\u6d3e\u751f\u7684\u7c7b\u7684\u5bf9\u8c61\u3002", "\n3.\u6240\u6709COM\u7ec4\u4ef6\u90fd\u5fc5\u987b\u5b9e\u73b0\u7684\u4e00\u4e2a\u63a5\u53e3\u662f\uff1a", "\n4.\u4e00\u4e2aCOM\u7ec4\u4ef6\uff0c\u5982\u679c\u8981\u652f\u6301\u81ea\u52a8\u5316\uff0c\u5fc5\u987b\u5b9e\u73b0\u7684\u63a5\u53e3\u3002", "\n5.MFC\u4e2d\u7684\u7c7b\uff0c\u4ece\uff08\uff09\u7c7b\u6d3e\u751f\u7684\u7c7b\u90fd\u53ef\u4ee5\u6709\u6d88\u606f\u6620\u5c04\uff0c\u8bf7\u5217\u4e3e\u4e00\u4e2a\uff08\u6216\u591a\u4e2a\uff09\u53ea\u80fd\u6536\u5230WM_COMMAND\u6d88\u606f\u7684\u7c7b\uff1a\uff08\uff09\u3002", "\n6.\u5728\u591a\u7ebf\u7a0b\u5e94\u7528\u4e2d\uff0c\u4e3a\u4f7f\u7ebf\u7a0b\u95f4\u7684\u67d0\u4e9b\u64cd\u4f5c\u540c\u6b65\uff0c\u4e00\u822c\u4f7f\u7528____\u540c\u6b65\u5bf9\u8c61\u3002\u8bf7\u5217\u4e3e\u5728\u5e94\u7528\u6b64\u5bf9\u8c61\u65f6\u8981\u7528\u7684API\u51fd\u6570\uff08\uff09\u3002", "\n7.STL\u6709\u54ea\u4e9b\u6478\u677f\u7c7b\uff08\uff09", "\n8.\u4f7f\u7528Windows API\u8bbe\u7f6e\u4e00\u4e2a\u7a97\u53e3\u7684\u6587\u672c\uff0c\u662f\u54ea\u4e00\u4e2aAPI\u51fd\u6570\uff08\uff09\u3002", "\n9.\u7ebf\u7a0b\u6709\u54ea\u4e9b\u7c7b\u578b\uff0c\u5982\u4f55\u521b\u5efa\uff1f\u5982\u4f55\u7ec8\u6b62\uff1f", "\n10.\u5982\u4f55\u5b9a\u4e49\u4e00\u4e2a\u81ea\u5b9a\u4e49\u6d88\u606f\uff0c\u5e76\u5728\u7a0b\u5e8f\u4e2d\u54cd\u5e94\u5b83\uff1f", "\n11.\u4ece\u4e00\u4e2aDLL\u4e2d\u5bfc\u51fa\u51fd\u6570\u7684\u65b9\u6cd5\u6709\u54ea\u51e0\u79cd\uff1f", "\n12.\u6709\u7ec4\u4ef6A\uff0c\u5b83\u7684\u5934\u6587\u4ef6\u5305\u62ec\u5982\u4e0b\u5185\u5bb9\uff1a", "\n   DEFINE_GUID(DIID_IENoteBook, 0x5D32DE27, 0x1A02,0x49AC,0xAF,0x2B,0x9A,0\u00d718,0\u00d795,0x5D, 0xCB,0\u00d745);", "\n   DEFINE_GUID(CLSID_Document, 0xCC6D602E, 0xE64D, 0x42B9, 0xA6, 0\u00d754,0\u00d757, 0\u00d790,0\u00d769, 0xD1, 0\u00d744, 0xAC);", "\n   IENoteBook:public IDispatch", "\n   {", "\n     //\u5176\u5b83\u7565", "\n     virtual HRESULT STDMETHOD(ALLTYPE AddHtmlPage())=0;", "\n   }", "\n  \u8bf7\u6839\u636e\u4ee5\u4e0a\u7684\u63a5\u53e3\u58f0\u660e\uff0c\u5199\u4e00\u6bb5\u4ee3\u7801\uff0c\u5f97\u5230\u4e00\u4e2aIENoteBook\u7684\u63a5\u53e3\uff0c \u518d\u8c03\u7528\u4ed6\u7684\u65b9\u6cd5AddHtmlPage(),\u7136\u540e\u518d\u91ca\u653e\u6b64\u63a5\u53e3\u3002", "13.\u5982\u679c\u4f7f\u7528WinSock\u63a5\u53e3\u6765\u7f16\u5199\u7f51\u7edc\u5e94\u7528\u7a0b\u5e8f\uff0c\u8bf7\u5206\u522b\u5199\u51fa\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u7684\u7a0b\u5e8f\u6d41\u7a0b\uff08\u4ee5\u8c03\u7528\u54ea\u4e9b\u501f\u53e3\u51fd\u6570\u8868\u793a\uff09\u3002"], "title": "\u5317\u4eac-\u5e7f\u5dde\u8fd0\u901a\u5317\u4eac\u5206\u516c\u53f8\u9762\u8bd5\u9898"},
{"contents": ["\u7f16\u5199\u7c7bString\u7684\u6784\u9020\u51fd\u6570\u3001\u6790\u6784\u51fd\u6570\u548c\u8d4b\u503c\u51fd\u6570\uff0c\u5df2\u77e5\u7c7bString\u7684\u539f\u578b\u4e3a\uff1a", "\nclass String", "\n{", "\n\u3000public:", "\n\u3000\u3000String(const char *str = NULL); // \u666e\u901a\u6784\u9020\u51fd\u6570", "\n\u3000\u3000String(const String &other); // \u62f7\u8d1d\u6784\u9020\u51fd\u6570", "\n\u3000\u3000~ String(void); // \u6790\u6784\u51fd\u6570", "\n\u3000\u3000String & operate =(const String &other); // \u8d4b\u503c\u51fd\u6570", "\n\u3000private:", "\n\u3000\u3000char *m_data; // \u7528\u4e8e\u4fdd\u5b58\u5b57\u7b26\u4e32", "\n}; ", "\u89e3\u7b54\uff1a", "\n //\u666e\u901a\u6784\u9020\u51fd\u6570", "\nString::String(const char *str)", "\n{", "\n\u3000if(str==NULL)", "\n\u3000{", "\n\u3000\u3000m_data = new char[1]; // \u5f97\u5206\u70b9\uff1a\u5bf9\u7a7a\u5b57\u7b26\u4e32\u81ea\u52a8\u7533\u8bf7\u5b58\u653e\u7ed3\u675f\u6807\u5fd7\u2019\\0\u2032\u7684\u7a7a", "\n\u3000\u3000//\u52a0\u5206\u70b9\uff1a\u5bf9m_data\u52a0NULL \u5224\u65ad", "\n\u3000\u3000*m_data = \u2018\\0\u2032;", "\n\u3000}", "\n\u3000else", "\n\u3000{", "\n\u3000\u3000int length = strlen(str);", "\n\u3000\u3000m_data = new char[length+1]; // \u82e5\u80fd\u52a0 NULL \u5224\u65ad\u5219\u66f4\u597d", "\n\u3000\u3000strcpy(m_data, str);", "\n\u3000}", "\n}", "\n// String\u7684\u6790\u6784\u51fd\u6570", "\nString::~String(void)", "\n{", "\n\u3000delete [] m_data; // \u6216delete m_data;", "\n}", "\n//\u62f7\u8d1d\u6784\u9020\u51fd\u6570", "\nString::String(const String &other) \u3000\u3000\u3000// \u5f97\u5206\u70b9\uff1a\u8f93\u5165\u53c2\u6570\u4e3aconst\u578b", "\n{", "\n\u3000int length = strlen(other.m_data);", "\n\u3000m_data = new char[length+1]; \u3000\u3000\u3000\u3000//\u52a0\u5206\u70b9\uff1a\u5bf9m_data\u52a0NULL \u5224\u65ad", "\n\u3000strcpy(m_data, other.m_data);", "\n}", "\n//\u8d4b\u503c\u51fd\u6570", "\nString & String::operate =(const String &other) // \u5f97\u5206\u70b9\uff1a\u8f93\u5165\u53c2\u6570\u4e3aconst\u578b", "\n{", "\n\u3000if(this == &other) \u3000\u3000//\u5f97\u5206\u70b9\uff1a\u68c0\u67e5\u81ea\u8d4b\u503c", "\n\u3000\u3000return *this;", "\n\u3000delete [] m_data; \u3000\u3000\u3000\u3000//\u5f97\u5206\u70b9\uff1a\u91ca\u653e\u539f\u6709\u7684\u5185\u5b58\u8d44\u6e90", "\n\u3000int length = strlen( other.m_data );", "\n\u3000m_data = new char[length+1]; \u3000//\u52a0\u5206\u70b9\uff1a\u5bf9m_data\u52a0NULL \u5224\u65ad", "\n\u3000strcpy( m_data, other.m_data );", "\n\u3000return *this; \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000//\u5f97\u5206\u70b9\uff1a\u8fd4\u56de\u672c\u5bf9\u8c61\u7684\u5f15\u7528", "\n}"], "title": "\u7f16\u5199\u7c7bString\u7684\u6784\u9020\u51fd\u6570\u3001\u6790\u6784\u51fd\u6570\u548c\u8d4b\u503c\u51fd\u6570"},
{"contents": ["int strlen( const char *str ) //\u8f93\u5165\u53c2\u6570const", "\n{", "\n\u3000assert( strt != NULL ); //\u65ad\u8a00\u5b57\u7b26\u4e32\u5730\u5740\u975e0", "\n\u3000int len;", "\n\u3000while( (*str++) != \u2018\\0\u2032 )", "\n\u3000{", "\n\u3000\u3000len++;", "\n\u3000}", "\n\u3000return len;", "\n} "], "title": "\u91cd\u5199strlen\u51fd\u6570\uff08\u4e0d\u4f7f\u7528\u6807\u51c6\u5e93\u51fd\u6570\uff09"},
{"contents": ["char * strcpy( char *strDest, const char *strSrc )", "\n{", "\n\u3000assert( (strDest != NULL) && (strSrc != NULL) );", "\n\u3000char *address = strDest;", "\n\u3000while( (*strDest++ = * strSrc++) != \u2018\\0\u2019 );", "\n\u3000\u3000return address;", "\n} "], "title": "\u4e0d\u4f7f\u7528\u5e93\u51fd\u6570\uff0c\u7f16\u5199strcpy\u51fd\u6570"},
{"contents": ["#include ", "void main()", "\n{", "\nchar a[50];memset(a,0,sizeof(a));", "\nint i=0,j;", "\nchar t;", "\ncin.getline(a,50,\u2019\\n\u2019);", "\nfor(i=0,j=strlen(a)-1;i", "\n{", "\nt=a[i];", "\na[i]=a[j];", "\na[j]=t;", "\n}", "\ncout\n}"], "title": "\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5c06\u5176\u9006\u5e8f\u540e\u8f93\u51fa\u3002\uff08\u4f7f\u7528C++\uff0c\u4e0d\u5efa\u8bae\u7528\u4f2a\u7801\uff09"},
{"contents": ["1.\u662f\u4e0d\u662f\u4e00\u4e2a\u7236\u7c7b\u5199\u4e86\u4e00\u4e2avirtual \u51fd\u6570\uff0c\u5982\u679c\u5b50\u7c7b\u8986\u76d6\u5b83\u7684\u51fd\u6570\u4e0d\u52a0virtual ,\u4e5f\u80fd\u5b9e\u73b0\u591a\u6001?", "\nvirtual\u4fee\u9970\u7b26\u4f1a\u88ab\u9690\u5f62\u7ee7\u627f\u7684\u3002", "\nprivate \u4e5f\u88ab\u96c6\u6210\uff0c\u53ea\u4e8b\u6d3e\u751f\u7c7b\u6ca1\u6709\u8bbf\u95ee\u6743\u9650\u800c\u5df2", "\nvirtual\u53ef\u52a0\u53ef\u4e0d\u52a0", "\n\u5b50\u7c7b\u7684\u7a7a\u95f4\u91cc\u6709\u7236\u7c7b\u7684\u6240\u6709\u53d8\u91cf(static\u9664\u5916)", "\n\u540c\u4e00\u4e2a\u51fd\u6570\u53ea\u5b58\u5728\u4e00\u4e2a\u5b9e\u4f53(inline\u9664\u5916)", "\n\u5b50\u7c7b\u8986\u76d6\u5b83\u7684\u51fd\u6570\u4e0d\u52a0virtual ,\u4e5f\u80fd\u5b9e\u73b0\u591a\u6001\u3002", "\n\u5728\u5b50\u7c7b\u7684\u7a7a\u95f4\u91cc\uff0c\u6709\u7236\u7c7b\u7684\u79c1\u6709\u53d8\u91cf\u3002\u79c1\u6709\u53d8\u91cf\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\u3002", "\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n2.\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5c06\u5176\u9006\u5e8f\u540e\u8f93\u51fa\u3002\uff08\u4f7f\u7528C++\uff0c\u4e0d\u5efa\u8bae\u7528\u4f2a\u7801\uff09", "\n#include ", "void main()", "\n{", "\n  char a[50];memset(a,0,sizeof(a));", "\n  int i=0,j;", "\n  char t;", "\n  cin.getline(a,50,\u2019\\n\u2019);", "\n  for(i=0,j=strlen(a)-1;i", "\n  {", "\n   t=a[i];", "\n      a[i]=a[j];", "\n   a[j]=t;", "\n  }", "\n  cout\n}", "\n//\u7b2c\u4e8c\u79cd", "\nstring str;", "\ncin>>str;", "\nstr.replace;", "\ncout\n\u6216\u8005\u76f4\u63a5\u7528STL\u91cc\u73b0\u6210\u7684\u7b97\u6cd5\uff0c\u66f4\u7701\u4e8b\uff0c\u563f\u563f", "\n#include ", "--------------------------------------------------------------------------", "\n3.\u8bf7\u7b80\u5355\u63cf\u8ff0Windows\u5185\u5b58\u7ba1\u7406\u7684\u65b9\u6cd5\u3002", "\n\u5185\u5b58\u7ba1\u7406\u662f\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u91cd\u8981\u90e8\u5206\uff0c\u4e24\u4e09\u53e5\u8bdd\u6050\u6015\u8c01\u4e5f\u8bf4\u4e0d\u6e05\u695a\u5427\uff5e\uff5e", "\n\u6211\u5148\u8bf4\u4e2a\u5927\u6982\uff0c\u5e0c\u671b\u80fd\u591f\u629b\u7816\u5f15\u7389\u5427", "\n\u5f53\u7a0b\u5e8f\u8fd0\u884c\u65f6\u9700\u8981\u4ece\u5185\u5b58\u4e2d\u8bfb\u51fa\u8fd9\u6bb5\u7a0b\u5e8f\u7684\u4ee3\u7801\u3002\u4ee3\u7801\u7684\u4f4d\u7f6e\u5fc5\u987b\u5728\u7269\u7406\u5185\u5b58\u4e2d\u624d\u80fd\u88ab\u8fd0\u884c\uff0c\u7531\u4e8e\u73b0\u5728\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u6709\u975e\u5e38\u591a\u7684\u7a0b\u5e8f\u8fd0\u884c\u7740\uff0c\u5185\u5b58\u4e2d\u4e0d\u80fd\u591f\u5b8c\u5168\u653e\u4e0b\uff0c\u6240\u4ee5\u5f15\u51fa\u4e86\u865a\u62df\u5185\u5b58\u7684\u6982\u5ff5\u3002\u628a\u54ea\u4e9b\u4e0d\u5e38\u7528\u7684\u7a0b\u5e8f\u7247\u65ad\u5c31\u653e\u5165\u865a\u62df\u5185\u5b58\uff0c\u5f53\u9700\u8981\u7528\u5230\u5b83\u7684\u65f6\u5019\u5728load\u5165\u4e3b\u5b58\uff08\u7269\u7406\u5185\u5b58\uff09\u4e2d\u3002\u8fd9\u4e2a\u5c31\u662f\u5185\u5b58\u7ba1\u7406\u6240\u8981\u505a\u7684\u4e8b\u3002\u5185\u5b58\u7ba1\u7406\u8fd8\u6709\u53e6\u5916\u4e00\u4ef6\u4e8b\u9700\u8981\u505a\uff1a\u8ba1\u7b97\u7a0b\u5e8f\u7247\u6bb5\u5728\u4e3b\u5b58\u4e2d\u7684\u7269\u7406\u4f4d\u7f6e\uff0c\u4ee5\u4fbfCPU\u8c03\u5ea6\u3002", "\n\u5185\u5b58\u7ba1\u7406\u6709\u5757\u5f0f\u7ba1\u7406\uff0c\u9875\u5f0f\u7ba1\u7406\uff0c\u6bb5\u5f0f\u548c\u6bb5\u9875\u5f0f\u7ba1\u7406\u3002\u73b0\u5728\u5e38\u7528\u6bb5\u9875\u5f0f\u7ba1\u7406", "\n\u5757\u5f0f\u7ba1\u7406\uff1a\u628a\u4e3b\u5b58\u5206\u4e3a\u4e00\u5927\u5757\u3001\u4e00\u5927\u5757\u7684\uff0c\u5f53\u6240\u9700\u7684\u7a0b\u5e8f\u7247\u65ad\u4e0d\u5728\u4e3b\u5b58\u65f6\u5c31\u5206\u914d\u4e00\u5757\u4e3b\u5b58\u7a7a\u95f4\uff0c\u628a\u7a0b \u5e8f\u7247\u65adload\u5165\u4e3b\u5b58\uff0c\u5c31\u7b97\u6240\u9700\u7684\u7a0b\u5e8f\u7247\u5ea6\u53ea\u6709\u51e0\u4e2a\u5b57\u8282\u4e5f\u53ea\u80fd\u628a\u8fd9\u4e00\u5757\u5206\u914d\u7ed9\u5b83\u3002\u8fd9\u6837\u4f1a\u9020\u6210\u5f88\u5927\u7684\u6d6a\u8d39\uff0c\u5e73\u5747\u6d6a\u8d39\u4e8650\uff05\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u4f46\u65f6\u6613\u4e8e\u7ba1\u7406\u3002", "\n\u9875\u5f0f\u7ba1\u7406\uff1a\u628a\u4e3b\u5b58\u5206\u4e3a\u4e00\u9875\u4e00\u9875\u7684\uff0c\u6bcf\u4e00\u9875\u7684\u7a7a\u95f4\u8981\u6bd4\u4e00\u5757\u4e00\u5757\u7684\u7a7a\u95f4\u5c0f\u5f88\u591a\uff0c\u663e\u7136\u8fd9\u79cd\u65b9\u6cd5\u7684\u7a7a\u95f4\u5229\u7528\u7387\u8981\u6bd4\u5757\u5f0f\u7ba1\u7406\u9ad8\u5f88\u591a\u3002", "\n\u6bb5\u5f0f\u7ba1\u7406\uff1a\u628a\u4e3b\u5b58\u5206\u4e3a\u4e00\u6bb5\u4e00\u6bb5\u7684\uff0c\u6bcf\u4e00\u6bb5\u7684\u7a7a\u95f4\u53c8\u8981\u6bd4\u4e00\u9875\u4e00\u9875\u7684\u7a7a\u95f4\u5c0f\u5f88\u591a\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5728\u7a7a\u95f4\u5229\u7528\u7387\u4e0a\u53c8\u6bd4\u9875\u5f0f\u7ba1\u7406\u9ad8\u5f88\u591a\uff0c\u4f46\u662f\u4e5f\u6709\u53e6\u5916\u4e00\u4e2a\u7f3a\u70b9\u3002\u4e00\u4e2a\u7a0b\u5e8f\u7247\u65ad\u53ef\u80fd\u4f1a\u88ab\u5206\u4e3a\u51e0\u5341\u6bb5\uff0c\u8fd9\u6837\u5f88\u591a\u65f6\u95f4\u5c31\u4f1a\u88ab\u6d6a\u8d39\u5728\u8ba1\u7b97\u6bcf\u4e00\u6bb5\u7684\u7269\u7406\u5730\u5740\u4e0a\uff08\u8ba1\u7b97\u673a\u6700\u8017\u65f6\u95f4\u7684\u5927\u5bb6\u90fd\u77e5\u9053\u662fI/O\u5427\uff09\u3002", "\n\u6bb5\u9875\u5f0f\u7ba1\u7406\uff1a\u7ed3\u5408\u4e86\u6bb5\u5f0f\u7ba1\u7406\u548c\u9875\u5f0f\u7ba1\u7406\u7684\u4f18\u70b9\u3002\u628a\u4e3b\u5b58\u5206\u4e3a\u82e5\u5e72\u9875\uff0c\u6bcf\u4e00\u9875\u53c8\u5206\u4e3a\u82e5\u5e72\u6bb5\u3002\u597d\u5904\u5c31\u5f88\u660e\u663e\uff0c\u4e0d\u7528\u6211\u591a\u8bf4\u4e86\u5427\u3002", "\n\u5404\u79cd\u5185\u5b58\u7ba1\u7406\u90fd\u6709\u5b83\u81ea\u5df1\u7684\u65b9\u6cd5\u6765\u8ba1\u7b97\u51fa\u7a0b\u5e8f\u7247\u65ad\u5728\u4e3b\u5b58\u4e2d\u7684\u7269\u7406\u5730\u5740\uff0c\u5176\u5b9e\u90fd\u5f88\u76f8\u4f3c\u3002", "\n\u8fd9\u53ea\u662f\u4e00\u4e2a\u5927\u6982\u800c\u5df2\uff0c\u4e0d\u8db3\u4ee5\u8bf4\u660e\u5185\u5b58\u7ba1\u7406\u7684\u76ae\u6bdb\u3002\u65e0\u8bba\u54ea\u4e00\u672c\u64cd\u4f5c\u7cfb\u7edf\u4e66\u4e0a\u90fd\u6709\u8be6\u7ec6\u7684\u8bb2\u89e3", "--------------------------------------------------------------------------", "\n4.", "\n#include \"stdafx.h\"", "\n#define SQR(X) X*X", "\nint main(int argc, char* argv[])", "\n{", "\n int a = 10;", "\n int k = 2;", "\n int m = 1;", "\n a /= SQR(k+m)/SQR(k+m);", "\n printf(\"%d\\n\",a);", "\n return 0;", "\n}", "\n\u8fd9\u9053\u9898\u76ee\u7684\u7ed3\u679c\u662f\u4ec0\u4e48\u554a?", "\ndefine \u53ea\u662f\u5b9a\u4e49\u800c\u5df2\uff0c\u5728\u7f16\u62e9\u65f6\u53ea\u662f\u7b80\u5355\u4ee3\u6362X*X\u800c\u5df2\uff0c\u5e76\u4e0d\u7ecf\u8fc7\u7b97\u672f\u6cd5\u5219\u7684", "\na /= (k+m)*(k+m)/(k+m)*(k+m);", "\n=>a /= (k+m)*1*(k+m);", "\n=>a = a/9;", "\n=>a = 1;", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n5.", "\nconst \u7b26\u53f7\u5e38\u91cf\uff1b", "\n(1)const char *p", "\n(2)char const *p", "\n(3)char * const p", "\n\u8bf4\u660e\u4e0a\u9762\u4e09\u79cd\u63cf\u8ff0\u7684\u533a\u522b\uff1b", "\u5982\u679cconst\u4f4d\u4e8e\u661f\u53f7\u7684\u5de6\u4fa7\uff0c\u5219const\u5c31\u662f\u7528\u6765\u4fee\u9970\u6307\u9488\u6240\u6307\u5411\u7684\u53d8\u91cf\uff0c\u5373\u6307\u9488\u6307\u5411\u4e3a\u5e38\u91cf\uff1b", "\n\u5982\u679cconst\u4f4d\u4e8e\u661f\u53f7\u7684\u53f3\u4fa7\uff0cconst\u5c31\u662f\u4fee\u9970\u6307\u9488\u672c\u8eab\uff0c\u5373\u6307\u9488\u672c\u8eab\u662f\u5e38\u91cf\u3002", "\n(1)const char *p", "\n\u4e00\u4e2a\u6307\u5411char\u7c7b\u578b\u7684const\u5bf9\u8c61\u6307\u9488\uff0cp\u4e0d\u662f\u5e38\u91cf,\u6211\u4eec\u53ef\u4ee5\u4fee\u6539p\u7684\u503c\uff0c\u4f7f\u5176\u6307\u5411\u4e0d\u540c\u7684char\uff0c\u4f46\u662f\u4e0d\u80fd\u6539\u53d8\u5b83\u6307\u5411\u975echar\u5bf9\u8c61\uff0c\u5982\uff1a", "\nconst char *p;", "\nchar c1=\u2019a';", "\nchar c2=\u2019b';", "\np=&c1;//ok", "\np=&c2;//ok", "\n*p=c1;//error", "\n(2)char const *p", "\n(3)char * const p", "\n\u8fd9\u4e24\u4e2a\u597d\u8c61\u662f\u4e00\u6837\u7684\uff0c\u6b64\u65f6*p\u53ef\u4ee5\u4fee\u6539\uff0c\u800cp\u4e0d\u80fd\u4fee\u6539\u3002", "\n\u9519\uff01const char *p\u5e94\u8be5\u4e0echar const *p\u662f\u4e00\u6837\u7684\u624d\u5bf9\uff01\u6b64\u65f6*p\u4e0d\u53ef\u4fee\u6539\uff0c\u800cp\u662f\u53ef\u4ee5\u4fee\u6539\u7684\uff01", "\n(4)const char * const p", "\n\u8fd9\u79cd\u662f\u5730\u5740\u53ca\u6307\u5411\u5bf9\u8c61\u90fd\u4e0d\u80fd\u4fee\u6539\u3002", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n6.\u4e0b\u9762\u662fC\u8bed\u8a00\u4e2d\u4e24\u79cdif\u8bed\u53e5\u5224\u65ad\u65b9\u5f0f\u3002\u8bf7\u95ee\u54ea\u79cd\u5199\u6cd5\u66f4\u597d\uff1f\u4e3a\u4ec0\u4e48\uff1f", "\n int n;", "\n if (n == 10) // \u7b2c\u4e00\u79cd\u5224\u65ad\u65b9\u5f0f", "\n if (10 == n) // \u7b2c\u4e8c\u79cd\u5224\u65ad\u65b9\u5f0f", "\n\u5982\u679c\u5c11\u4e86\u4e2a=\u53f7,\u7f16\u8bd1\u65f6\u5c31\u4f1a\u62a5\u9519,\u51cf\u5c11\u4e86\u51fa\u9519\u7684\u53ef\u80fd\u884c,\u53ef\u4ee5\u68c0\u6d4b\u51fa\u662f\u5426\u5c11\u4e86=", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n7.\u4e0b\u9762\u7684\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1f", "\nvoid DoSomeThing(\u2026)", "\n{", "\n char* p;", "\n \u2026", "\n p = malloc(1024);  // \u5206\u914d1K\u7684\u7a7a\u95f4", "\n if (NULL == p)", "\n  return;", "\n \u2026", "\n p = realloc(p, 2048); // \u7a7a\u95f4\u4e0d\u591f\uff0c\u91cd\u65b0\u5206\u914d\u52302K", "\n if (NULL == p)", "\n  return;", "\n \u2026", "\n}", "\nA:", "\np = malloc(1024);     \u5e94\u8be5\u5199\u6210\uff1a p = (char *) malloc(1024);", "\n        \u6ca1\u6709\u91ca\u653ep\u7684\u7a7a\u95f4\uff0c\u9020\u6210\u5185\u5b58\u6cc4\u6f0f\u3002", "\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n8.\u4e0b\u9762\u7684\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1f\u5e76\u8bf7\u7ed9\u51fa\u6b63\u786e\u7684\u5199\u6cd5\u3002", "\nvoid DoSomeThing(char* p)", "\n{", "\n char str[16];", "\n int n;", "\n assert(NULL != p);", "\n sscanf(p, \u201c%s%d\u201d, str, n);", "\n if (0 == strcmp(str, \u201csomething\u201d))", "\n {", "\n  \u2026", "\n }", "\n}", "\nA:", "\nsscanf(p, \u201c%s%d\u201d, str, n);   \u8fd9\u53e5\u8be5\u5199\u6210\uff1a sscanf(p, \u201c%s%d\u201d, str, &n);", "\n\u7531\u4e8estr\u6709\u9650\uff0c\u5982\u679c\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u8fc7\u5927\uff0c\u4f1a\u5f15\u53d1\u5806\u6808\u6ea2\u51fa\uff01\uff01\uff01", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n9.\u4e0b\u9762\u4ee3\u7801\u6709\u4ec0\u4e48\u9519\u8bef?", "\nVoid test1()", "\n{", "\n char string[10];", "\n char *str1=\u201d0123456789\u2033;", "\n strcpy(string, str1);", "\n}", "\n\u6570\u7ec4\u8d8a\u754c", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n10.\u4e0b\u9762\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898?", "\nVoid test2()", "\n{", "\n  char string[10], str1[10];", "\n  for(i=0; i\n  {", "\n     str1[i] ='a';", "\n  }", "\n  strcpy(string, str1);", "\n}", "\n\u6570\u7ec4\u8d8a\u754c\uff08\u4ee5\u2019/0\u2019\u4e3a\u62f7\u8d1d\u754c\u9650\uff09", "\n--------------------------------------------------------------------------", "\n11.\u4e0b\u9762\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898?", "\nVoid test3(char* str1)", "\n{", "\n  char string[10];", "\n  if(strlen(str1)\n  {", "\n    strcpy(string, str1);", "\n  }", "\n}", "\n==\u6570\u7ec4\u8d8a\u754c", "\n==strcpy\u62f7\u8d1d\u7684\u7ed3\u675f\u6807\u5fd7\u662f\u67e5\u627e\u5b57\u7b26\u4e32\u4e2d\u7684\\0 \u56e0\u6b64\u5982\u679c\u5b57\u7b26\u4e32\u4e2d\u6ca1\u6709\u9047\u5230\\0\u7684\u8bdd \u4f1a\u4e00\u76f4\u590d\u5236\uff0c\u76f4\u5230\u9047\u5230\\0,\u4e0a\u9762\u7684123\u90fd\u56e0\u6b64\u4ea7\u751f\u8d8a\u754c\u7684\u60c5\u51b5", "\u5efa\u8bae\u4f7f\u7528 strncpy \u548c memcpy", "\n--------------------------------------------------------------------------", "\n12.\u4e0b\u9762\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898?", "\n#define MAX_SRM 256", "\nDSN get_SRM_no()", "\n{", "\n  static int SRM_no; //\u662f\u4e0d\u662f\u8fd9\u91cc\u6ca1\u8d4b\u521d\u503c\uff1f", "\n  int I;", "\n  for(I=0;I", "\n  {", "\n    SRM_no %= MAX_SRM;", "\n    if(MY_SRM.state==IDLE)", "\n    {", "\n      break;", "\n    }", "\n  }", "\n  if(I>=MAX_SRM)", "\n    return (NULL_SRM);", "\n  else", "\n    return SRM_no;", "\n}", "\n\u7cfb\u7edf\u4f1a\u521d\u59cb\u5316static int\u53d8\u91cf\u4e3a0,\u4f46\u8be5\u503c\u4f1a\u4e00\u76f4\u4fdd\u5b58,\u6240\u8c13\u7684\u4e0d\u53ef\u91cd\u5165\u2026", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n13.\u5199\u51fa\u8fd0\u884c\u7ed3\u679c:", "\n{// test1", "\n    char str[] = \u201cworld\u201d; cout \n    char *p    = str;     cout \n    char i     = 10;      cout \n    void *pp   = malloc(10);  cout \n}", "\n6\uff1a4\uff1a1\uff1a4", "\n\u51fa\u81ea\u6797\u9510\u535a\u58eb\u7684\u300a\u9ad8\u8d28\u91cfC++\u7f16\u7a0b\u300b\uff0c\u9762\u8bd5\u65f6\u89c1\u8fc7N\u591a\u6b21\u4e86\uff0c\u6bd4\u8f83\u7ecf\u5178\u7684\u9898\u76ee\u3002", "\n--------------------------------------------------------------------------", "\n14.\u5199\u51fa\u8fd0\u884c\u7ed3\u679c:", "\n{// test2", "\n    union V {", "\n struct X {", "\n  unsigned char s1:2;", "\n  unsigned char s2:3;", "\n  unsigned char s3:3;", "\n } x;", "\n unsigned char c;", "\n    } v;", "\n    v.c = 100;", "\n    printf(\"%d\", v.x.s3);", "\n}", "\n\u76ee\u524d\u8fd9\u4e2a\u95ee\u9898\u7f51\u4e0a\u6d41\u884c\u7684\u7b54\u6848\u6709\u4e09\u4e2a\uff1a1, 3, 4\uff0c\u5728\u672c\u4eba\u7684\u673a\u5668\u4e0a\u7ed3\u679c\u4e3a3\uff08VC7\uff09", "\nstruct X\u7684\u4f4d\u5360\u7528\u987a\u5e8f\u4e3a\uff1a\u4f4e2\u4f4d\uff0c\u4e2d3\u4f4d\uff0c\u9ad83\u4f4d\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0cunion V\u7684\u5b9e\u9645\u5185\u5bb9\u4e3a0110 0100", "\ns3\u5360\u7528\u9ad83\u4f4d\uff0c\u53d6\u503c011\uff0c\u5341\u8fdb\u5236\u4e3a3\u3002", "\n\u518d\u8865\u5145\u4e00\u4e0b\uff0c\u5360\u7528\u4e0d\u6ee18\u4f4d\u65f6\uff0c\u4f1a\u622a\u53d6\u4f4eN\u4f4d\uff0c\u5982\u622a\u53d6s2\u7684\u4f4e3\u4f4d\u653e\u5165X\u7684\u4e2d\u95f43\u4f4d\u4e2d\u3002", "\n--------------------------------------------------------------------------", "\n15.\u7528C++\u5199\u4e2a\u7a0b\u5e8f\uff0c\u5982\u4f55\u5224\u65ad\u4e00\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u662f16\u4f4d\u8fd8\u662f32\u4f4d\u7684\uff1f\u4e0d\u80fd\u7528sizeof()\u51fd\u6570", "\nA1:", "\n16\u4f4d\u7684\u7cfb\u7edf\u4e0b\uff0c", "\nint i = 65536;", "\ncout \nint i = 65535;", "\ncout \n32\u4f4d\u7684\u7cfb\u7edf\u4e0b\uff0c", "\nint i = 65536;", "\ncout \nint i = 65535;", "\ncout \nA2:", "\nint a = ~0;", "\nif( a>65536 )", "\n{", "\n    cout\n}", "\nelse", "\n{", "\n    cout\n}", "\n\u4e5f\u662f\u6bd4\u8f83\u7ecf\u5178\u7684\u9898\u76ee\u4e86\uff01\u9762\u8bd5\u51fa\u73b0\u7387\u8f83\u9ad8\uff01", "\n--------------------------------------------------------------------------", "\n16.C\u548cC++\u6709\u4ec0\u4e48\u4e0d\u540c?", "\n\u4ece\u673a\u5236\u4e0a\uff1ac\u662f\u9762\u5411\u8fc7\u7a0b\u7684\uff08\u4f46c\u4e5f\u53ef\u4ee5\u7f16\u5199\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\uff09\uff1bc++\u662f\u9762\u5411\u5bf9\u8c61\u7684\uff0c\u63d0\u4f9b\u4e86\u7c7b\u3002\u4f46\u662f\uff0c", "\nc++\u7f16\u5199\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u6bd4c\u5bb9\u6613", "\n\u4ece\u9002\u7528\u7684\u65b9\u5411\uff1ac\u9002\u5408\u8981\u6c42\u4ee3\u7801\u4f53\u79ef\u5c0f\u7684\uff0c\u6548\u7387\u9ad8\u7684\u573a\u5408\uff0c\u5982\u5d4c\u5165\u5f0f\uff1bc++\u9002\u5408\u66f4\u4e0a\u5c42\u7684\uff0c\u590d\u6742\u7684\uff1b  llinux\u6838\u5fc3\u5927\u90e8\u5206\u662fc\u5199\u7684\uff0c\u56e0\u4e3a\u5b83\u662f\u7cfb\u7edf\u8f6f\u4ef6\uff0c\u6548\u7387\u8981\u6c42\u6781\u9ad8\u3002", "\n\u4ece\u540d\u79f0\u4e0a\u4e5f\u53ef\u4ee5\u770b\u51fa\uff0cc++\u6bd4c\u591a\u4e86+\uff0c\u8bf4\u660ec++\u662fc\u7684\u8d85\u96c6\uff1b\u90a3\u4e3a\u4ec0\u4e48\u4e0d\u53ebc+\u800c\u53ebc++\u5462\uff0c\u662f\u56e0\u4e3ac++\u6bd4", "\nc\u6765\u8bf4\u6269\u5145\u7684\u4e1c\u897f\u592a\u591a\u4e86\uff0c\u6240\u4ee5\u5c31\u5728c\u540e\u9762\u653e\u4e0a\u4e24\u4e2a+\uff1b\u4e8e\u662f\u5c31\u6210\u4e86c++", "\nC\u8bed\u8a00\u662f\u7ed3\u6784\u5316\u7f16\u7a0b\u8bed\u8a00\uff0cC++\u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u8bed\u8a00\u3002", "\nC++\u4fa7\u91cd\u4e8e\u5bf9\u8c61\u800c\u4e0d\u662f\u8fc7\u7a0b\uff0c\u4fa7\u91cd\u4e8e\u7c7b\u7684\u8bbe\u8ba1\u800c\u4e0d\u662f\u903b\u8f91\u7684\u8bbe\u8ba1\u3002", "\n--------------------------------------------------------------------------", "\n17.\u5728\u4e0d\u7528\u7b2c\u4e09\u65b9\u53c2\u6570\u7684\u60c5\u51b5\u4e0b\uff0c\u4ea4\u6362\u4e24\u4e2a\u53c2\u6570\u7684\u503c", "\n#include ", "char t:4;\u5c31\u662f4bit\u7684\u5b57\u7b26\u53d8\u91cf\uff0c\u540c\u6837", "\nunsigned short i:8;\u5c31\u662f8bit\u7684\u65e0\u7b26\u53f7\u77ed\u6574\u5f62\u53d8\u91cf", "\n\u5c1a\u672a\u9a8c\u8bc1", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n19.int i=10, j=10, k=3; k*=i+j; k\u6700\u540e\u7684\u503c\u662f?", "\n60", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n20.\u8fdb\u7a0b\u95f4\u901a\u4fe1\u7684\u65b9\u5f0f\u6709?", "\n\u8fdb\u7a0b\u95f4\u901a\u4fe1\u7684\u65b9\u5f0f\u6709 \u5171\u4eab\u5185\u5b58\uff0c \u7ba1\u9053 \uff0cSocket \uff0c\u6d88\u606f\u961f\u5217 , DDE\u7b49", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n21.", "\nstruct A", "\n{", "\nchar t:4;", "\nchar k:4;", "\nunsigned short i:8;", "\nunsigned long m;", "\n}", "\nsizeof(A)=?\uff08\u4e0d\u8003\u8651\u8fb9\u754c\u5bf9\u9f50\uff09", "\n7", "\nstruct CELL             // Declare CELL bit field", "\n{", "\n   unsigned character  : 8;  // 00000000 ????????", "\n   unsigned foreground : 3;  // 00000??? 00000000", "\n   unsigned intensity  : 1;  // 0000?000 00000000", "\n   unsigned background : 3;  // 0???0000 00000000", "\n   unsigned blink      : 1;  // ?0000000 00000000", "\n} screen[25][80];       // Array of bit fields", "\n\u4e8c\u3001\u4f4d\u7ed3\u6784", "\n    \u4f4d\u7ed3\u6784\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u7ed3\u6784, \u5728\u9700\u6309\u4f4d\u8bbf\u95ee\u4e00\u4e2a\u5b57\u8282\u6216\u5b57\u7684\u591a\u4e2a\u4f4d\u65f6, \u4f4d\u7ed3\u6784", "\n\u6bd4\u6309\u4f4d\u8fd0\u7b97\u7b26\u66f4\u52a0\u65b9\u4fbf\u3002", "\n    \u4f4d\u7ed3\u6784\u5b9a\u4e49\u7684\u4e00\u822c\u5f62\u5f0f\u4e3a:", "\n     struct\u4f4d\u7ed3\u6784\u540d{", "\n          \u6570\u636e\u7c7b\u578b \u53d8\u91cf\u540d: \u6574\u578b\u5e38\u6570;", "\n          \u6570\u636e\u7c7b\u578b \u53d8\u91cf\u540d: \u6574\u578b\u5e38\u6570;", "\n     } \u4f4d\u7ed3\u6784\u53d8\u91cf;", "\n    \u5176\u4e2d: \u6570\u636e\u7c7b\u578b\u5fc5\u987b\u662fint(unsigned\u6216signed)\u3002 \u6574\u578b\u5e38\u6570\u5fc5\u987b\u662f\u975e\u8d1f\u7684\u6574", "\n\u6570, \u8303\u56f4\u662f0~15, \u8868\u793a\u4e8c\u8fdb\u5236\u4f4d\u7684\u4e2a\u6570, \u5373\u8868\u793a\u6709\u591a\u5c11\u4f4d\u3002", "\n    \u53d8\u91cf\u540d\u662f\u9009\u62e9\u9879, \u53ef\u4ee5\u4e0d\u547d\u540d, \u8fd9\u6837\u89c4\u5b9a\u662f\u4e3a\u4e86\u6392\u5217\u9700\u8981\u3002", "\n    \u4f8b\u5982: \u4e0b\u9762\u5b9a\u4e49\u4e86\u4e00\u4e2a\u4f4d\u7ed3\u6784\u3002", "\n     struct{", "\n          unsigned incon: 8;  /*incon\u5360\u7528\u4f4e\u5b57\u8282\u76840~7\u51718\u4f4d*/", "\n          unsigned txcolor: 4;/*txcolor\u5360\u7528\u9ad8\u5b57\u8282\u76840~3\u4f4d\u51714\u4f4d*/", "\n          unsigned bgcolor: 3;/*bgcolor\u5360\u7528\u9ad8\u5b57\u8282\u76844~6\u4f4d\u51713\u4f4d*/", "\n          unsigned blink: 1;  /*blink\u5360\u7528\u9ad8\u5b57\u8282\u7684\u7b2c7\u4f4d*/", "\n     }ch;", "\n    \u4f4d\u7ed3\u6784\u6210\u5458\u7684\u8bbf\u95ee\u4e0e\u7ed3\u6784\u6210\u5458\u7684\u8bbf\u95ee\u76f8\u540c\u3002", "\n    \u4f8b\u5982: \u8bbf\u95ee\u4e0a\u4f8b\u4f4d\u7ed3\u6784\u4e2d\u7684bgcolor\u6210\u5458\u53ef\u5199\u6210:", "\n      ch.bgcolor ", "    \u6ce8\u610f:", "\n    1. \u4f4d\u7ed3\u6784\u4e2d\u7684\u6210\u5458\u53ef\u4ee5\u5b9a\u4e49\u4e3aunsigned, \u4e5f\u53ef\u5b9a\u4e49\u4e3asigned,  \u4f46\u5f53\u6210\u5458\u957f", "\n\u5ea6\u4e3a1\u65f6, \u4f1a\u88ab\u8ba4\u4e3a\u662funsigned\u7c7b\u578b\u3002\u56e0\u4e3a\u5355\u4e2a\u4f4d\u4e0d\u53ef\u80fd\u5177\u6709\u7b26\u53f7\u3002", "\n    2. \u4f4d\u7ed3\u6784\u4e2d\u7684\u6210\u5458\u4e0d\u80fd\u4f7f\u7528\u6570\u7ec4\u548c\u6307\u9488, \u4f46\u4f4d\u7ed3\u6784\u53d8\u91cf\u53ef\u4ee5\u662f\u6570\u7ec4\u548c\u6307\u9488,", "\n\u5982\u679c\u662f\u6307\u9488, \u5176\u6210\u5458\u8bbf\u95ee\u65b9\u5f0f\u540c\u7ed3\u6784\u6307\u9488\u3002", "\n    3. \u4f4d\u7ed3\u6784\u603b\u957f\u5ea6(\u4f4d\u6570), \u662f\u5404\u4e2a\u4f4d\u6210\u5458\u5b9a\u4e49\u7684\u4f4d\u6570\u4e4b\u548c,  \u53ef\u4ee5\u8d85\u8fc7\u4e24\u4e2a\u5b57", "\n\u8282\u3002", "\n    4. \u4f4d\u7ed3\u6784\u6210\u5458\u53ef\u4ee5\u4e0e\u5176\u5b83\u7ed3\u6784\u6210\u5458\u4e00\u8d77\u4f7f\u7528\u3002", "\n    \u4f8b\u5982:", "\n     struct info{", "\n          char name[8];", "\n          int age;", "\n          struct addr address;", "\n          float pay;", "\n          unsigned state: 1;", "\n          unsigned pay: 1;", "\n          }workers;", "\n    \u4e0a\u4f8b\u7684\u7ed3\u6784\u5b9a\u4e49\u4e86\u5173\u4e8e\u4e00\u4e2a\u5de5\u4eba\u7684\u4fe1\u606f\u3002\u5176\u4e2d\u6709\u4e24\u4e2a\u4f4d\u7ed3\u6784\u6210\u5458, \u6bcf\u4e2a\u4f4d\u7ed3", "\n\u6784\u6210\u5458\u53ea\u6709\u4e00\u4f4d, \u56e0\u6b64\u53ea\u5360\u4e00\u4e2a\u5b57\u8282\u4f46\u4fdd\u5b58\u4e86\u4e24\u4e2a\u4fe1\u606f, \u8be5\u5b57\u8282\u4e2d\u7b2c\u4e00\u4f4d\u8868\u793a\u5de5", "\n\u4eba\u7684\u72b6\u6001, \u7b2c\u4e8c\u4f4d\u8868\u793a\u5de5\u8d44\u662f\u5426\u5df2\u53d1\u653e\u3002\u7531\u6b64\u53ef\u89c1\u4f7f\u7528\u4f4d\u7ed3\u6784\u53ef\u4ee5\u8282\u7701\u5b58\u8d2e\u7a7a\u95f4\u3002", "\n\u548c\u4e0a\u9762\u7684\u90a3\u4e2a\u5dee\u4e0d\u591a", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n22.\u4e0b\u9762\u7684\u51fd\u6570\u5b9e\u73b0\u5728\u4e00\u4e2a\u56fa\u5b9a\u7684\u6570\u4e0a\u52a0\u4e0a\u4e00\u4e2a\u6570\uff0c\u6709\u4ec0\u4e48\u9519\u8bef\uff0c\u6539\u6b63", "\nint add_n(int n)", "\n{", "\n  static int i=100;", "\n  i+=n;", "\n  return i;", "\n}", "\n\u7b54:", "\n\u56e0\u4e3astatic\u4f7f\u5f97i\u7684\u503c\u4f1a\u4fdd\u7559\u4e0a\u6b21\u7684\u503c\u3002", "\n\u53bb\u6389static\u5c31\u53ef\u4e86", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n23.\u4e0b\u9762\u7684\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898?", "\nclass A", "\n{", "\npublic:", "\n  A() { p=this; }", "\n  ~A() { if(p!=NULL) { delete p; p=NULL; } }", "\n  A* p;", "\n};", "\n\u7b54:", "\n\u4f1a\u5f15\u8d77\u65e0\u9650\u9012\u5f52", "\n\u7531\u4e8eA\u5bf9\u8c61\u6790\u6784\u4f1a\u8c03\u7528~A(), \u4f46\u662f\u5728delete p\u65f6\u53c8\u4f1a\u8c03\u7528~A()\uff1b\u7531\u4e8ep!=NULL\uff0c\u4f1a\u5f15\u8d77\u65e0\u9650\u9012\u5f52\u3002", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n24.", "\nunion a {", "\n int a_int1;", "\n double a_double;", "\n int a_int2;", "\n};", "\ntypedef struct", "\n{", "\n a a1;", "\n char y;", "\n} b;", "\nclass c", "\n{", "\n double c_double;", "\n b b1;", "\n a a2;", "\n};", "\n\u8f93\u51facout\n\u7b54:", "\nVC6\u73af\u5883\u4e0b\u5f97\u51fa\u7684\u7ed3\u679c\u662f32", "\n\u53e6:", "\n\u5728VC6.0+win2k\u4e0b\u505a\u8fc7\u8bd5\u9a8c:", "\nshort - 2", "\nint-4", "\nfloat-4", "\ndouble-8", "\n\u6307\u9488-4", "\nsizeof(union)\uff0c\u4ee5\u7ed3\u6784\u91cc\u9762size\u6700\u5927\u7684\u4e3aunion\u7684size", "\n\u5173\u4e8eunion\u548cstruct\u5728\u5185\u5b58\u4e2d\u7684\u5e03\u5c40\u53ca\u957f\u5ea6\u589e\u52a0\u7684\u65b9\u5f0f\uff0cMSDN\u91cc\u6709\u8be6\u7ec6\u7684\u8bf4\u660e\u3002", "\n\u89e3\u6790C\u8bed\u8a00\u4e2d\u7684sizeof", "\n\u4e00\u3001sizeof\u7684\u6982\u5ff5\u3000", "\n\u3000\u3000sizeof\u662fC\u8bed\u8a00\u7684\u4e00\u79cd\u5355\u76ee\u64cd\u4f5c\u7b26\uff0c\u5982C\u8bed\u8a00\u7684\u5176\u4ed6\u64cd\u4f5c\u7b26++\u3001--\u7b49\u3002\u5b83\u5e76\u4e0d\u662f\u51fd\u6570\u3002sizeof\u64cd\u4f5c\u7b26\u4ee5\u5b57\u8282\u5f62\u5f0f\u7ed9\u51fa\u4e86\u5176\u64cd\u4f5c\u6570\u7684\u5b58\u50a8\u5927\u5c0f\u3002\u64cd\u4f5c\u6570\u53ef\u4ee5\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\u6216\u62ec\u5728\u62ec\u53f7\u5185\u7684\u7c7b\u578b\u540d\u3002\u64cd\u4f5c\u6570\u7684\u5b58\u50a8\u5927\u5c0f\u7531\u64cd\u4f5c\u6570\u7684\u7c7b\u578b\u51b3\u5b9a\u3002\u3000", "\n\u4e8c\u3001sizeof\u7684\u4f7f\u7528\u65b9\u6cd5\u3000", "\n\u3000\u30001\u3001\u7528\u4e8e\u6570\u636e\u7c7b\u578b\u3000", "\n\u3000\u3000sizeof\u4f7f\u7528\u5f62\u5f0f\uff1asizeof\uff08type\uff09\u3000", "\n\u3000\u3000\u6570\u636e\u7c7b\u578b\u5fc5\u987b\u7528\u62ec\u53f7\u62ec\u4f4f\u3002\u5982sizeof\uff08int\uff09\u3002\u3000", "\n\u3000\u30002\u3001\u7528\u4e8e\u53d8\u91cf\u3000", "\n\u3000\u3000sizeof\u4f7f\u7528\u5f62\u5f0f\uff1asizeof\uff08var_name\uff09\u6216sizeof\u3000var_name\u3000", "\n\u3000\u3000\u53d8\u91cf\u540d\u53ef\u4ee5\u4e0d\u7528\u62ec\u53f7\u62ec\u4f4f\u3002\u5982sizeof\u3000(var_name)\uff0csizeof\u3000var_name\u7b49\u90fd\u662f\u6b63\u786e\u5f62\u5f0f\u3002\u5e26\u62ec\u53f7\u7684\u7528\u6cd5\u66f4\u666e\u904d\uff0c\u5927\u591a\u6570\u7a0b\u5e8f\u5458\u91c7\u7528\u8fd9\u79cd\u5f62\u5f0f\u3002\u3000", "\n\u3000\u3000\u6ce8\u610f\uff1asizeof\u64cd\u4f5c\u7b26\u4e0d\u80fd\u7528\u4e8e\u51fd\u6570\u7c7b\u578b\uff0c\u4e0d\u5b8c\u5168\u7c7b\u578b\u6216\u4f4d\u5b57\u6bb5\u3002\u4e0d\u5b8c\u5168\u7c7b\u578b\u6307\u5177\u6709\u672a\u77e5\u5b58\u50a8\u5927\u5c0f\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5982\u672a\u77e5\u5b58\u50a8\u5927\u5c0f\u7684\u6570\u7ec4\u7c7b\u578b\u3001\u672a\u77e5\u5185\u5bb9\u7684\u7ed3\u6784\u6216\u8054\u5408\u7c7b\u578b\u3001void\u7c7b\u578b\u7b49\u3002", "\n\u3000\u3000\u5982sizeof(max)\u82e5\u6b64\u65f6\u53d8\u91cfmax\u5b9a\u4e49\u4e3aint\u3000max()\uff1bsizeof(char_v)\u3000\u82e5\u6b64\u65f6char_v\u5b9a\u4e49\u4e3achar\u3000char_v\u3000[MAX]\u4e14MAX\u672a\u77e5\uff0csizeof(void)\u90fd\u4e0d\u662f\u6b63\u786e\u5f62\u5f0f\u3002\u3000", "\n\u4e09\u3001sizeof\u7684\u7ed3\u679c\u3000", "\n\u3000\u3000sizeof\u64cd\u4f5c\u7b26\u7684\u7ed3\u679c\u7c7b\u578b\u662fsize_t\uff0c\u5b83\u5728\u5934\u6587\u4ef6", "\n\u4e2dtypedef\u4e3aunsigned\u3000int\u7c7b\u578b\u3002\u8be5\u7c7b\u578b\u4fdd\u8bc1\u80fd\u5bb9\u7eb3\u5b9e\u73b0\u6240\u5efa\u7acb\u7684\u6700\u5927\u5bf9\u8c61\u7684\u5b57\u8282\u5927\u5c0f\u3002\u3000", "\n\u3000\u30001\u3001\u82e5\u64cd\u4f5c\u6570\u5177\u6709\u7c7b\u578bchar\u3001unsigned\u3000char\u6216signed\u3000char\uff0c\u5176\u7ed3\u679c\u7b49\u4e8e1\u3002\u3000", "\n\u3000\u3000ANSI\u3000C\u6b63\u5f0f\u89c4\u5b9a\u5b57\u7b26\u7c7b\u578b\u4e3a1\u5b57\u8282\u3002\u3000", "\n\u3000\u30002\u3001int\u3001unsigned\u3000int\u3000\u3001short\u3000int\u3001unsigned\u3000short\u3000\u3001long\u3000int\u3000\u3001unsigned\u3000long\u3000\u3001float\u3001double\u3001long\u3000double\u7c7b\u578b\u7684sizeof\u3000\u5728ANSI\u3000C\u4e2d\u6ca1\u6709\u5177\u4f53\u89c4\u5b9a\uff0c\u5927\u5c0f\u4f9d\u8d56\u4e8e\u5b9e\u73b0\uff0c\u4e00\u822c\u53ef\u80fd\u5206\u522b\u4e3a2\u30012\u30012\u30012\u30014\u30014\u30014\u30018\u300110\u3002\u3000", "\n\u3000\u30003\u3001\u5f53\u64cd\u4f5c\u6570\u662f\u6307\u9488\u65f6\uff0csizeof\u4f9d\u8d56\u4e8e\u7f16\u8bd1\u5668\u3002\u4f8b\u5982Microsoft\u3000C/C++7.0\u4e2d\uff0cnear\u7c7b\u6307\u9488\u5b57\u8282\u6570\u4e3a2\uff0cfar\u3001huge\u7c7b\u6307\u9488\u5b57\u8282\u6570\u4e3a4\u3002\u4e00\u822cUnix\u7684\u6307\u9488\u5b57\u8282\u6570\u4e3a4\u3002\u3000", "\n\u3000\u30004\u3001\u5f53\u64cd\u4f5c\u6570\u5177\u6709\u6570\u7ec4\u7c7b\u578b\u65f6\uff0c\u5176\u7ed3\u679c\u662f\u6570\u7ec4\u7684\u603b\u5b57\u8282\u6570\u3002\u3000", "\n\u3000\u30005\u3001\u8054\u5408\u7c7b\u578b\u64cd\u4f5c\u6570\u7684sizeof\u662f\u5176\u6700\u5927\u5b57\u8282\u6210\u5458\u7684\u5b57\u8282\u6570\u3002\u7ed3\u6784\u7c7b\u578b\u64cd\u4f5c\u6570\u7684sizeof\u662f\u8fd9\u79cd\u7c7b\u578b\u5bf9\u8c61\u7684\u603b\u5b57\u8282\u6570\uff0c\u5305\u62ec\u4efb\u4f55\u57ab\u8865\u5728\u5185\u3002\u3000", "\n\u3000\u3000\u8ba9\u6211\u4eec\u770b\u5982\u4e0b\u7ed3\u6784\uff1a\u3000", "\n\u3000\u3000struct\u3000{char\u3000b;\u3000double\u3000x;}\u3000a;\u3000", "\n\u3000\u3000\u5728\u67d0\u4e9b\u673a\u5668\u4e0asizeof\uff08a\uff09=12\uff0c\u800c\u4e00\u822csizeof\uff08char\uff09+\u3000sizeof\uff08double\uff09=9\u3002\u3000", "\n\u3000\u3000\u8fd9\u662f\u56e0\u4e3a\u7f16\u8bd1\u5668\u5728\u8003\u8651\u5bf9\u9f50\u95ee\u9898\u65f6\uff0c\u5728\u7ed3\u6784\u4e2d\u63d2\u5165\u7a7a\u4f4d\u4ee5\u63a7\u5236\u5404\u6210\u5458\u5bf9\u8c61\u7684\u5730\u5740\u5bf9\u9f50\u3002\u5982double\u7c7b\u578b\u7684\u7ed3\u6784\u6210\u5458x\u8981\u653e\u5728\u88ab4\u6574\u9664\u7684\u5730\u5740\u3002\u3000", "\n\u3000\u30006\u3001\u5982\u679c\u64cd\u4f5c\u6570\u662f\u51fd\u6570\u4e2d\u7684\u6570\u7ec4\u5f62\u53c2\u6216\u51fd\u6570\u7c7b\u578b\u7684\u5f62\u53c2\uff0csizeof\u7ed9\u51fa\u5176\u6307\u9488\u7684\u5927\u5c0f\u3002\u3000", "\n\u56db\u3001sizeof\u4e0e\u5176\u4ed6\u64cd\u4f5c\u7b26\u7684\u5173\u7cfb\u3000", "\n\u3000\u3000sizeof\u7684\u4f18\u5148\u7ea7\u4e3a2\u7ea7\uff0c\u6bd4/\u3001%\u7b493\u7ea7\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u9ad8\u3002\u5b83\u53ef\u4ee5\u4e0e\u5176\u4ed6\u64cd\u4f5c\u7b26\u4e00\u8d77\u7ec4\u6210\u8868\u8fbe\u5f0f\u3002\u5982i*sizeof\uff08int\uff09\uff1b\u5176\u4e2di\u4e3aint\u7c7b\u578b\u53d8\u91cf\u3002\u3000", "\n\u4e94\u3001sizeof\u7684\u4e3b\u8981\u7528\u9014\u3000", "\n\u3000\u30001\u3001sizeof\u64cd\u4f5c\u7b26\u7684\u4e00\u4e2a\u4e3b\u8981\u7528\u9014\u662f\u4e0e\u5b58\u50a8\u5206\u914d\u548cI/O\u7cfb\u7edf\u90a3\u6837\u7684\u4f8b\u7a0b\u8fdb\u884c\u901a\u4fe1\u3002\u4f8b\u5982\uff1a\u3000", "\n\u3000\u3000void\u3000*malloc\uff08size_t\u3000size\uff09,\u3000", "\n\u3000\u3000size_t\u3000fread(void\u3000*\u3000ptr,size_t\u3000size,size_t\u3000nmemb,FILE\u3000*\u3000stream)\u3002\u3000", "\n\u3000\u30002\u3001sizeof\u7684\u53e6\u4e00\u4e2a\u7684\u4e3b\u8981\u7528\u9014\u662f\u8ba1\u7b97\u6570\u7ec4\u4e2d\u5143\u7d20\u7684\u4e2a\u6570\u3002\u4f8b\u5982\uff1a\u3000", "\n\u3000\u3000void\u3000*\u3000memset\uff08void\u3000*\u3000s,int\u3000c,sizeof(s)\uff09\u3002\u3000", "\n\u516d\u3001\u5efa\u8bae\u3000", "\n\u3000\u3000\u7531\u4e8e\u64cd\u4f5c\u6570\u7684\u5b57\u8282\u6570\u5728\u5b9e\u73b0\u65f6\u53ef\u80fd\u51fa\u73b0\u53d8\u5316\uff0c\u5efa\u8bae\u5728\u6d89\u53ca\u5230\u64cd\u4f5c\u6570\u5b57\u8282\u5927\u5c0f\u65f6\u7528sizeof\u6765\u4ee3\u66ff\u5e38\u91cf\u8ba1\u7b97\u3002", "=============================================================", "\n\u672c\u6587\u4e3b\u8981\u5305\u62ec\u4e8c\u4e2a\u90e8\u5206\uff0c\u7b2c\u4e00\u90e8\u5206\u91cd\u70b9\u4ecb\u7ecd\u5728VC\u4e2d\uff0c\u600e\u4e48\u6837\u91c7\u7528sizeof\u6765\u6c42\u7ed3\u6784\u7684\u5927\u5c0f\uff0c\u4ee5\u53ca\u5bb9\u6613\u51fa\u73b0\u7684\u95ee\u9898\uff0c\u5e76\u7ed9\u51fa\u89e3\u51b3\u95ee\u9898\u7684\u65b9\u6cd5\uff0c\u7b2c\u4e8c\u90e8\u5206\u603b\u7ed3\u51faVC\u4e2dsizeof\u7684\u4e3b\u8981\u7528\u6cd5\u3002", "\n1\u3001 sizeof\u5e94\u7528\u5728\u7ed3\u6784\u4e0a\u7684\u60c5\u51b5", "\n\u8bf7\u770b\u4e0b\u9762\u7684\u7ed3\u6784\uff1a", "\nstruct MyStruct", "\n{", "\ndouble dda1;", "\nchar dda;", "\nint type", "\n};", "\n\u5bf9\u7ed3\u6784MyStruct\u91c7\u7528sizeof\u4f1a\u51fa\u73b0\u4ec0\u4e48\u7ed3\u679c\u5462\uff1fsizeof(MyStruct)\u4e3a\u591a\u5c11\u5462\uff1f\u4e5f\u8bb8\u4f60\u4f1a\u8fd9\u6837\u6c42\uff1a", "\nsizeof(MyStruct)=sizeof(double)+sizeof(char)+sizeof(int)=13", "\n\u4f46\u662f\u5f53\u5728VC\u4e2d\u6d4b\u8bd5\u4e0a\u9762\u7ed3\u6784\u7684\u5927\u5c0f\u65f6\uff0c\u4f60\u4f1a\u53d1\u73b0sizeof(MyStruct)\u4e3a16\u3002\u4f60\u77e5\u9053\u4e3a\u4ec0\u4e48\u5728VC\u4e2d\u4f1a\u5f97\u51fa\u8fd9\u6837\u4e00\u4e2a\u7ed3\u679c\u5417\uff1f", "\n\u5176\u5b9e\uff0c\u8fd9\u662fVC\u5bf9\u53d8\u91cf\u5b58\u50a8\u7684\u4e00\u4e2a\u7279\u6b8a\u5904\u7406\u3002\u4e3a\u4e86\u63d0\u9ad8CPU\u7684\u5b58\u50a8\u901f\u5ea6\uff0cVC\u5bf9\u4e00\u4e9b\u53d8\u91cf\u7684\u8d77\u59cb\u5730\u5740\u505a\u4e86\"\u5bf9\u9f50\"\u5904\u7406\u3002\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cVC\u89c4\u5b9a\u5404\u6210\u5458\u53d8\u91cf\u5b58\u653e\u7684\u8d77\u59cb\u5730\u5740\u76f8\u5bf9\u4e8e\u7ed3\u6784\u7684\u8d77\u59cb\u5730\u5740\u7684\u504f\u79fb\u91cf\u5fc5\u987b\u4e3a\u8be5\u53d8\u91cf\u7684\u7c7b\u578b\u6240\u5360\u7528\u7684\u5b57\u8282\u6570\u7684\u500d\u6570\u3002\u4e0b\u9762\u5217\u51fa\u5e38\u7528\u7c7b\u578b\u7684\u5bf9\u9f50\u65b9\u5f0f(vc6.0,32\u4f4d\u7cfb\u7edf)\u3002", "\n\u7c7b\u578b", "\n\u5bf9\u9f50\u65b9\u5f0f\uff08\u53d8\u91cf\u5b58\u653e\u7684\u8d77\u59cb\u5730\u5740\u76f8\u5bf9\u4e8e\u7ed3\u6784\u7684\u8d77\u59cb\u5730\u5740\u7684\u504f\u79fb\u91cf\uff09", "\nChar", "\n\u504f\u79fb\u91cf\u5fc5\u987b\u4e3asizeof(char)\u53731\u7684\u500d\u6570", "\nint", "\n\u504f\u79fb\u91cf\u5fc5\u987b\u4e3asizeof(int)\u53734\u7684\u500d\u6570", "\nfloat", "\n\u504f\u79fb\u91cf\u5fc5\u987b\u4e3asizeof(float)\u53734\u7684\u500d\u6570", "\ndouble", "\n\u504f\u79fb\u91cf\u5fc5\u987b\u4e3asizeof(double)\u53738\u7684\u500d\u6570", "\nShort", "\n\u504f\u79fb\u91cf\u5fc5\u987b\u4e3asizeof(short)\u53732\u7684\u500d\u6570 ", "\u5404\u6210\u5458\u53d8\u91cf\u5728\u5b58\u653e\u7684\u65f6\u5019\u6839\u636e\u5728\u7ed3\u6784\u4e2d\u51fa\u73b0\u7684\u987a\u5e8f\u4f9d\u6b21\u7533\u8bf7\u7a7a\u95f4\uff0c\u540c\u65f6\u6309\u7167\u4e0a\u9762\u7684\u5bf9\u9f50\u65b9\u5f0f\u8c03\u6574\u4f4d\u7f6e\uff0c\u7a7a\u7f3a\u7684\u5b57\u8282VC\u4f1a\u81ea\u52a8\u586b\u5145\u3002\u540c\u65f6VC\u4e3a\u4e86\u786e\u4fdd\u7ed3\u6784\u7684\u5927\u5c0f\u4e3a\u7ed3\u6784\u7684\u5b57\u8282\u8fb9\u754c\u6570\uff08\u5373\u8be5\u7ed3\u6784\u4e2d\u5360\u7528\u6700\u5927\u7a7a\u95f4\u7684\u7c7b\u578b\u6240\u5360\u7528\u7684\u5b57\u8282\u6570\uff09\u7684\u500d\u6570\uff0c\u6240\u4ee5\u5728\u4e3a\u6700\u540e\u4e00\u4e2a\u6210\u5458\u53d8\u91cf\u7533\u8bf7\u7a7a\u95f4\u540e\uff0c\u8fd8\u4f1a\u6839\u636e\u9700\u8981\u81ea\u52a8\u586b\u5145\u7a7a\u7f3a\u7684\u5b57\u8282\u3002", "\n\u4e0b\u9762\u7528\u524d\u9762\u7684\u4f8b\u5b50\u6765\u8bf4\u660eVC\u5230\u5e95\u600e\u4e48\u6837\u6765\u5b58\u653e\u7ed3\u6784\u7684\u3002", "\nstruct MyStruct", "\n{", "\ndouble dda1;", "\nchar dda;", "\nint type", "\n}\uff1b", "\n\u4e3a\u4e0a\u9762\u7684\u7ed3\u6784\u5206\u914d\u7a7a\u95f4\u7684\u65f6\u5019\uff0cVC\u6839\u636e\u6210\u5458\u53d8\u91cf\u51fa\u73b0\u7684\u987a\u5e8f\u548c\u5bf9\u9f50\u65b9\u5f0f\uff0c\u5148\u4e3a\u7b2c\u4e00\u4e2a\u6210\u5458dda1\u5206\u914d\u7a7a\u95f4\uff0c\u5176\u8d77\u59cb\u5730\u5740\u8ddf\u7ed3\u6784\u7684\u8d77\u59cb\u5730\u5740\u76f8\u540c\uff08\u521a\u597d\u504f\u79fb\u91cf0\u521a\u597d\u4e3asizeof(double)\u7684\u500d\u6570\uff09\uff0c\u8be5\u6210\u5458\u53d8\u91cf\u5360\u7528sizeof(double)=8\u4e2a\u5b57\u8282\uff1b\u63a5\u4e0b\u6765\u4e3a\u7b2c\u4e8c\u4e2a\u6210\u5458dda\u5206\u914d\u7a7a\u95f4\uff0c\u8fd9\u65f6\u4e0b\u4e00\u4e2a\u53ef\u4ee5\u5206\u914d\u7684\u5730\u5740\u5bf9\u4e8e\u7ed3\u6784\u7684\u8d77\u59cb\u5730\u5740\u7684\u504f\u79fb\u91cf\u4e3a8\uff0c\u662fsizeof(char)\u7684\u500d\u6570\uff0c\u6240\u4ee5\u628adda\u5b58\u653e\u5728\u504f\u79fb\u91cf\u4e3a8\u7684\u5730\u65b9\u6ee1\u8db3\u5bf9\u9f50\u65b9\u5f0f\uff0c\u8be5\u6210\u5458\u53d8\u91cf\u5360\u7528sizeof(char)=1\u4e2a\u5b57\u8282\uff1b\u63a5\u4e0b\u6765\u4e3a\u7b2c\u4e09\u4e2a\u6210\u5458type\u5206\u914d\u7a7a\u95f4\uff0c\u8fd9\u65f6\u4e0b\u4e00\u4e2a\u53ef\u4ee5\u5206\u914d\u7684\u5730\u5740\u5bf9\u4e8e\u7ed3\u6784\u7684\u8d77\u59cb\u5730\u5740\u7684\u504f\u79fb\u91cf\u4e3a9\uff0c\u4e0d\u662fsizeof(int)=4\u7684\u500d\u6570\uff0c\u4e3a\u4e86\u6ee1\u8db3\u5bf9\u9f50\u65b9\u5f0f\u5bf9\u504f\u79fb\u91cf\u7684\u7ea6\u675f\u95ee\u9898\uff0cVC\u81ea\u52a8\u586b\u51453\u4e2a\u5b57\u8282\uff08\u8fd9\u4e09\u4e2a\u5b57\u8282\u6ca1\u6709\u653e\u4ec0\u4e48\u4e1c\u897f\uff09\uff0c\u8fd9\u65f6\u4e0b\u4e00\u4e2a\u53ef\u4ee5\u5206\u914d\u7684\u5730\u5740\u5bf9\u4e8e\u7ed3\u6784\u7684\u8d77\u59cb\u5730\u5740\u7684\u504f\u79fb\u91cf\u4e3a12\uff0c\u521a\u597d\u662fsizeof(int)=4\u7684\u500d\u6570\uff0c\u6240\u4ee5\u628atype\u5b58\u653e\u5728\u504f\u79fb\u91cf\u4e3a12\u7684\u5730\u65b9\uff0c\u8be5\u6210\u5458\u53d8\u91cf\u5360\u7528sizeof(int)=4\u4e2a\u5b57\u8282\uff1b\u8fd9\u65f6\u6574\u4e2a\u7ed3\u6784\u7684\u6210\u5458\u53d8\u91cf\u5df2\u7ecf\u90fd\u5206\u914d\u4e86\u7a7a\u95f4\uff0c\u603b\u7684\u5360\u7528\u7684\u7a7a\u95f4\u5927\u5c0f\u4e3a\uff1a8+1+3+4=16\uff0c\u521a\u597d\u4e3a\u7ed3\u6784\u7684\u5b57\u8282\u8fb9\u754c\u6570\uff08\u5373\u7ed3\u6784\u4e2d\u5360\u7528\u6700\u5927\u7a7a\u95f4\u7684\u7c7b\u578b\u6240\u5360\u7528\u7684\u5b57\u8282\u6570sizeof(double)=8\uff09\u7684\u500d\u6570\uff0c\u6240\u4ee5\u6ca1\u6709\u7a7a\u7f3a\u7684\u5b57\u8282\u9700\u8981\u586b\u5145\u3002\u6240\u4ee5\u6574\u4e2a\u7ed3\u6784\u7684\u5927\u5c0f\u4e3a\uff1asizeof(MyStruct)=8+1+3+4=16\uff0c\u5176\u4e2d\u67093\u4e2a\u5b57\u8282\u662fVC\u81ea\u52a8\u586b\u5145\u7684\uff0c\u6ca1\u6709\u653e\u4efb\u4f55\u6709\u610f\u4e49\u7684\u4e1c\u897f\u3002", "\n\u4e0b\u9762\u518d\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u4ea4\u6362\u4e00\u4e0b\u4e0a\u9762\u7684MyStruct\u7684\u6210\u5458\u53d8\u91cf\u7684\u4f4d\u7f6e\uff0c\u4f7f\u5b83\u53d8\u6210\u4e0b\u9762\u7684\u60c5\u51b5\uff1a", "\nstruct MyStruct", "\n{", "\nchar dda;", "\ndouble dda1;", "\nint type", "\n}\uff1b", "\n\u8fd9\u4e2a\u7ed3\u6784\u5360\u7528\u7684\u7a7a\u95f4\u4e3a\u591a\u5927\u5462\uff1f\u5728VC6.0\u73af\u5883\u4e0b\uff0c\u53ef\u4ee5\u5f97\u5230sizeof(MyStruc)\u4e3a24\u3002\u7ed3\u5408\u4e0a\u9762\u63d0\u5230\u7684\u5206\u914d\u7a7a\u95f4\u7684\u4e00\u4e9b\u539f\u5219\uff0c\u5206\u6790\u4e0bVC\u600e\u4e48\u6837\u4e3a\u4e0a\u9762\u7684\u7ed3\u6784\u5206\u914d\u7a7a\u95f4\u7684\u3002\uff08\u7b80\u5355\u8bf4\u660e\uff09", "\nstruct MyStruct", "\n{", "\n  char dda;//\u504f\u79fb\u91cf\u4e3a0\uff0c\u6ee1\u8db3\u5bf9\u9f50\u65b9\u5f0f\uff0cdda\u5360\u75281\u4e2a\u5b57\u8282\uff1b", "\ndouble dda1;//\u4e0b\u4e00\u4e2a\u53ef\u7528\u7684\u5730\u5740\u7684\u504f\u79fb\u91cf\u4e3a1\uff0c\u4e0d\u662fsizeof(double)=8", "\n             //\u7684\u500d\u6570\uff0c\u9700\u8981\u8865\u8db37\u4e2a\u5b57\u8282\u624d\u80fd\u4f7f\u504f\u79fb\u91cf\u53d8\u4e3a8\uff08\u6ee1\u8db3\u5bf9\u9f50", "\n             //\u65b9\u5f0f\uff09\uff0c\u56e0\u6b64VC\u81ea\u52a8\u586b\u51457\u4e2a\u5b57\u8282\uff0cdda1\u5b58\u653e\u5728\u504f\u79fb\u91cf\u4e3a8", "\n             //\u7684\u5730\u5740\u4e0a\uff0c\u5b83\u5360\u75288\u4e2a\u5b57\u8282\u3002", "\nint type\uff1b//\u4e0b\u4e00\u4e2a\u53ef\u7528\u7684\u5730\u5740\u7684\u504f\u79fb\u91cf\u4e3a16\uff0c\u662fsizeof(int)=4\u7684\u500d", "\n           //\u6570\uff0c\u6ee1\u8db3int\u7684\u5bf9\u9f50\u65b9\u5f0f\uff0c\u6240\u4ee5\u4e0d\u9700\u8981VC\u81ea\u52a8\u586b\u5145\uff0ctype\u5b58", "\n           //\u653e\u5728\u504f\u79fb\u91cf\u4e3a16\u7684\u5730\u5740\u4e0a\uff0c\u5b83\u5360\u75284\u4e2a\u5b57\u8282\u3002", "\n}\uff1b//\u6240\u6709\u6210\u5458\u53d8\u91cf\u90fd\u5206\u914d\u4e86\u7a7a\u95f4\uff0c\u7a7a\u95f4\u603b\u7684\u5927\u5c0f\u4e3a1+7+8+4=20\uff0c\u4e0d\u662f\u7ed3\u6784", "\n   //\u7684\u8282\u8fb9\u754c\u6570\uff08\u5373\u7ed3\u6784\u4e2d\u5360\u7528\u6700\u5927\u7a7a\u95f4\u7684\u7c7b\u578b\u6240\u5360\u7528\u7684\u5b57\u8282\u6570sizeof", "\n   //(double)=8\uff09\u7684\u500d\u6570\uff0c\u6240\u4ee5\u9700\u8981\u586b\u51454\u4e2a\u5b57\u8282\uff0c\u4ee5\u6ee1\u8db3\u7ed3\u6784\u7684\u5927\u5c0f\u4e3a", "\n   //sizeof(double)=8\u7684\u500d\u6570\u3002 ", "\u6240\u4ee5\u8be5\u7ed3\u6784\u603b\u7684\u5927\u5c0f\u4e3a\uff1asizeof(MyStruc)\u4e3a1+7+8+4+4=24\u3002\u5176\u4e2d\u603b\u7684\u67097+4=11\u4e2a\u5b57\u8282\u662fVC\u81ea\u52a8\u586b\u5145\u7684\uff0c\u6ca1\u6709\u653e\u4efb\u4f55\u6709\u610f\u4e49\u7684\u4e1c\u897f\u3002 ", "VC\u5bf9\u7ed3\u6784\u7684\u5b58\u50a8\u7684\u7279\u6b8a\u5904\u7406\u786e\u5b9e\u63d0\u9ad8CPU\u5b58\u50a8\u53d8\u91cf\u7684\u901f\u5ea6\uff0c\u4f46\u662f\u6709\u65f6\u5019\u4e5f\u5e26\u6765\u4e86\u4e00\u4e9b\u9ebb\u70e6\uff0c\u6211\u4eec\u4e5f\u5c4f\u853d\u6389\u53d8\u91cf\u9ed8\u8ba4\u7684\u5bf9\u9f50\u65b9\u5f0f\uff0c\u81ea\u5df1\u53ef\u4ee5\u8bbe\u5b9a\u53d8\u91cf\u7684\u5bf9\u9f50\u65b9\u5f0f\u3002", "\nVC\u4e2d\u63d0\u4f9b\u4e86#pragma pack(n)\u6765\u8bbe\u5b9a\u53d8\u91cf\u4ee5n\u5b57\u8282\u5bf9\u9f50\u65b9\u5f0f\u3002n\u5b57\u8282\u5bf9\u9f50\u5c31\u662f\u8bf4\u53d8\u91cf\u5b58\u653e\u7684\u8d77\u59cb\u5730\u5740\u7684\u504f\u79fb\u91cf\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\u7b2c\u4e00\u3001\u5982\u679cn\u5927\u4e8e\u7b49\u4e8e\u8be5\u53d8\u91cf\u6240\u5360\u7528\u7684\u5b57\u8282\u6570\uff0c\u90a3\u4e48\u504f\u79fb\u91cf\u5fc5\u987b\u6ee1\u8db3\u9ed8\u8ba4\u7684\u5bf9\u9f50\u65b9\u5f0f\uff0c\u7b2c\u4e8c\u3001\u5982\u679cn\u5c0f\u4e8e\u8be5\u53d8\u91cf\u7684\u7c7b\u578b\u6240\u5360\u7528\u7684\u5b57\u8282\u6570\uff0c\u90a3\u4e48\u504f\u79fb\u91cf\u4e3an\u7684\u500d\u6570\uff0c\u4e0d\u7528\u6ee1\u8db3\u9ed8\u8ba4\u7684\u5bf9\u9f50\u65b9\u5f0f\u3002\u7ed3\u6784\u7684\u603b\u5927\u5c0f\u4e5f\u6709\u4e2a\u7ea6\u675f\u6761\u4ef6\uff0c\u5206\u4e0b\u9762\u4e24\u79cd\u60c5\u51b5\uff1a\u5982\u679cn\u5927\u4e8e\u6240\u6709\u6210\u5458\u53d8\u91cf\u7c7b\u578b\u6240\u5360\u7528\u7684\u5b57\u8282\u6570\uff0c\u90a3\u4e48\u7ed3\u6784\u7684\u603b\u5927\u5c0f\u5fc5\u987b\u4e3a\u5360\u7528\u7a7a\u95f4\u6700\u5927\u7684\u53d8\u91cf\u5360\u7528\u7684\u7a7a\u95f4\u6570\u7684\u500d\u6570\uff1b", "\n\u5426\u5219\u5fc5\u987b\u4e3an\u7684\u500d\u6570\u3002\u4e0b\u9762\u4e3e\u4f8b\u8bf4\u660e\u5176\u7528\u6cd5\u3002", "\n#pragma pack(push) //\u4fdd\u5b58\u5bf9\u9f50\u72b6\u6001", "\n#pragma pack(4)//\u8bbe\u5b9a\u4e3a4\u5b57\u8282\u5bf9\u9f50", "\nstruct test", "\n{", "\n  char m1;", "\n  double m4;", "\n  int  m3;", "\n};", "\n#pragma pack(pop)//\u6062\u590d\u5bf9\u9f50\u72b6\u6001", "\n\u4ee5\u4e0a\u7ed3\u6784\u7684\u5927\u5c0f\u4e3a16\uff0c\u4e0b\u9762\u5206\u6790\u5176\u5b58\u50a8\u60c5\u51b5\uff0c\u9996\u5148\u4e3am1\u5206\u914d\u7a7a\u95f4\uff0c\u5176\u504f\u79fb\u91cf\u4e3a0\uff0c\u6ee1\u8db3\u6211\u4eec\u81ea\u5df1\u8bbe\u5b9a\u7684\u5bf9\u9f50\u65b9\u5f0f\uff084\u5b57\u8282\u5bf9\u9f50\uff09\uff0cm1\u5360\u75281\u4e2a\u5b57\u8282\u3002\u63a5\u7740\u5f00\u59cb\u4e3am4\u5206\u914d\u7a7a\u95f4\uff0c\u8fd9\u65f6\u5176\u504f\u79fb\u91cf\u4e3a1\uff0c\u9700\u8981\u8865\u8db33\u4e2a\u5b57\u8282\uff0c\u8fd9\u6837\u4f7f\u504f\u79fb\u91cf\u6ee1\u8db3\u4e3an=4\u7684\u500d\u6570\uff08\u56e0\u4e3asizeof(double)\u5927\u4e8en\uff09,m4\u5360\u75288\u4e2a\u5b57\u8282\u3002\u63a5\u7740\u4e3am3\u5206\u914d\u7a7a\u95f4\uff0c\u8fd9\u65f6\u5176\u504f\u79fb\u91cf\u4e3a12\uff0c\u6ee1\u8db3\u4e3a4\u7684\u500d\u6570\uff0cm3\u5360\u75284\u4e2a\u5b57\u8282\u3002\u8fd9\u65f6\u5df2\u7ecf\u4e3a\u6240\u6709\u6210\u5458\u53d8\u91cf\u5206\u914d\u4e86\u7a7a\u95f4\uff0c\u5171\u5206\u914d\u4e8616\u4e2a\u5b57\u8282\uff0c\u6ee1\u8db3\u4e3an\u7684\u500d\u6570\u3002\u5982\u679c\u628a\u4e0a\u9762\u7684#pragma pack(4)\u6539\u4e3a#pragma pack(16)\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u7ed3\u6784\u7684\u5927\u5c0f\u4e3a24\u3002\uff08\u8bf7\u8bfb\u8005\u81ea\u5df1\u5206\u6790\uff09", "\n2\u3001 sizeof\u7528\u6cd5\u603b\u7ed3", "\n\u5728VC\u4e2d\uff0csizeof\u6709\u7740\u8bb8\u591a\u7684\u7528\u6cd5\uff0c\u800c\u4e14\u5f88\u5bb9\u6613\u5f15\u8d77\u4e00\u4e9b\u9519\u8bef\u3002\u4e0b\u9762\u6839\u636esizeof\u540e\u9762\u7684\u53c2\u6570\u5bf9sizeof\u7684\u7528\u6cd5\u505a\u4e2a\u603b\u7ed3\u3002", "\nA\uff0e  \u53c2\u6570\u4e3a\u6570\u636e\u7c7b\u578b\u6216\u8005\u4e3a\u4e00\u822c\u53d8\u91cf\u3002\u4f8b\u5982sizeof(int),sizeof(long)\u7b49\u7b49\u3002\u8fd9\u79cd\u60c5\u51b5\u8981\u6ce8\u610f\u7684\u662f\u4e0d\u540c\u7cfb\u7edf\u7cfb\u7edf\u6216\u8005\u4e0d\u540c\u7f16\u8bd1\u5668\u5f97\u5230\u7684\u7ed3\u679c\u53ef\u80fd\u662f\u4e0d\u540c\u7684\u3002\u4f8b\u5982int\u7c7b\u578b\u572816\u4f4d\u7cfb\u7edf\u4e2d\u53602\u4e2a\u5b57\u8282\uff0c\u572832\u4f4d\u7cfb\u7edf\u4e2d\u53604\u4e2a\u5b57\u8282\u3002", "\nB\uff0e  \u53c2\u6570\u4e3a\u6570\u7ec4\u6216\u6307\u9488\u3002\u4e0b\u9762\u4e3e\u4f8b\u8bf4\u660e.", "\nint a[50];  //sizeof(a)=4*50=200; \u6c42\u6570\u7ec4\u6240\u5360\u7684\u7a7a\u95f4\u5927\u5c0f", "\nint *a=new int[50];// sizeof(a)=4; a\u4e3a\u4e00\u4e2a\u6307\u9488\uff0csizeof(a)\u662f\u6c42\u6307\u9488", "\n                   //\u7684\u5927\u5c0f,\u572832\u4f4d\u7cfb\u7edf\u4e2d\uff0c\u5f53\u7136\u662f\u53604\u4e2a\u5b57\u8282\u3002", "\nC\uff0e  \u53c2\u6570\u4e3a\u7ed3\u6784\u6216\u7c7b\u3002Sizeof\u5e94\u7528\u5728\u7c7b\u548c\u7ed3\u6784\u7684\u5904\u7406\u60c5\u51b5\u662f\u76f8\u540c\u7684\u3002\u4f46\u6709\u4e24\u70b9\u9700\u8981\u6ce8\u610f\uff0c\u7b2c\u4e00\u3001\u7ed3\u6784\u6216\u8005\u7c7b\u4e2d\u7684\u9759\u6001\u6210\u5458\u4e0d\u5bf9\u7ed3\u6784\u6216\u8005\u7c7b\u7684\u5927\u5c0f\u4ea7\u751f\u5f71\u54cd\uff0c\u56e0\u4e3a\u9759\u6001\u53d8\u91cf\u7684\u5b58\u50a8\u4f4d\u7f6e\u4e0e\u7ed3\u6784\u6216\u8005\u7c7b\u7684\u5b9e\u4f8b\u5730\u5740\u65e0\u5173\u3002", "\n\u7b2c\u4e8c\u3001\u6ca1\u6709\u6210\u5458\u53d8\u91cf\u7684\u7ed3\u6784\u6216\u7c7b\u7684\u5927\u5c0f\u4e3a1\uff0c\u56e0\u4e3a\u5fc5\u987b\u4fdd\u8bc1\u7ed3\u6784\u6216\u7c7b\u7684\u6bcf\u4e00", "\n\u4e2a\u5b9e\u4f8b\u5728\u5185\u5b58\u4e2d\u90fd\u6709\u552f\u4e00\u7684\u5730\u5740\u3002", "\n\u4e0b\u9762\u4e3e\u4f8b\u8bf4\u660e\uff0c", "\nClass Test{int a;static double c};//sizeof(Test)=4.", "\nTest *s;//sizeof(s)=4,s\u4e3a\u4e00\u4e2a\u6307\u9488\u3002", "\nClass test1{ };//sizeof(test1)=1;", "\nD\uff0e  \u53c2\u6570\u4e3a\u5176\u4ed6\u3002\u4e0b\u9762\u4e3e\u4f8b\u8bf4\u660e\u3002", "\n   int func(char s[5]);", "\n   {", "\n     cout\n                     //\u6570\u7684\u53c2\u6570\u5728\u4f20\u9012\u7684\u65f6\u5019\u7cfb\u7edf\u5904\u7406\u4e3a\u4e00\u4e2a\u6307\u9488\uff0c\u6240", "\n                     //\u4ee5sizeof(s)\u5b9e\u9645\u4e0a\u4e3a\u6c42\u6307\u9488\u7684\u5927\u5c0f\u3002", "\n     return 1;", "\n}", "\nsizeof(func(\"1234\"))=4//\u56e0\u4e3afunc\u7684\u8fd4\u56de\u7c7b\u578b\u4e3aint\uff0c\u6240\u4ee5\u76f8\u5f53\u4e8e", "\n                     //\u6c42sizeof(int). ", "\u4ee5\u4e0a\u4e3asizeof\u7684\u57fa\u672c\u7528\u6cd5\uff0c\u5728\u5b9e\u9645\u7684\u4f7f\u7528\u4e2d\u8981\u6ce8\u610f\u5206\u6790VC\u7684\u5206\u914d\u53d8\u91cf\u7684\u5206\u914d\u7b56\u7565\uff0c\u8fd9\u6837\u7684\u8bdd\u53ef\u4ee5\u907f\u514d\u4e00\u4e9b\u9519\u8bef\u3002 ", "--------------------------------------------------------------------------", "\n25.i\u6700\u540e\u7b49\u4e8e\u591a\u5c11?", "\nint i = 1;", "\nint j = i++;", "\nif((i>j++) && (i++ == j)) i+=j;", "\n\u7b54:", "\ni = 5", "\n\u672a\u9a8c\u8bc1\uff0c\u672c\u4eba\u8ba4\u4e3a\u8fd9\u79cd\u9898\u76ee\u6ca1\u6709\u4efb\u4f55\u5b9e\u9645\u610f\u4e49\uff01", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n26.", "\nunsigned short array[]={1,2,3,4,5,6,7};", "\nint i = 3;", "\n*(array + i) = ?", "\n\u7b54:", "\n4", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n27.", "\nclass A", "\n{", "\n  virtual void func1()\uff1b", "\n  void func2();", "\n}", "\nClass B: class A", "\n{", "\n  void func1(){cout \n  virtual void func2(){cout \n}", "\nA, A\u4e2d\u7684func1\u548cB\u4e2d\u7684func2\u90fd\u662f\u865a\u51fd\u6570.", "\nB, A\u4e2d\u7684func1\u548cB\u4e2d\u7684func2\u90fd\u4e0d\u662f\u865a\u51fd\u6570.", "\nC, A\u4e2d\u7684func2\u662f\u865a\u51fd\u6570.\uff0cB\u4e2d\u7684func1\u4e0d\u662f\u865a\u51fd\u6570.", "\nD, A\u4e2d\u7684func2\u4e0d\u662f\u865a\u51fd\u6570\uff0cB\u4e2d\u7684func1\u662f\u865a\u51fd\u6570.", "\n\u7b54:", "\nA", "\n--------------------------------------------------------------------------", "\n28.", "\n\u6570\u636e\u5e93\uff1a\u62bd\u51fa\u90e8\u95e8\uff0c\u5e73\u5747\u5de5\u8d44\uff0c\u8981\u6c42\u6309\u90e8\u95e8\u7684\u5b57\u7b26\u4e32\u987a\u5e8f\u6392\u5e8f\uff0c\u4e0d\u80fd\u542b\u6709\"human resource\"\u90e8\u95e8\uff0c", "\nemployee\u7ed3\u6784\u5982\u4e0b\uff1aemployee_id, employee_name, depart_id,depart_name,wage", "\n\u7b54:", "\nselect depart_name, avg(wage)", "\nfrom employee", "\nwhere depart_name  \u2018human resource\u2019", "\ngroup by depart_name", "\norder by depart_name", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n29.", "\n\u7ed9\u5b9a\u5982\u4e0bSQL\u6570\u636e\u5e93\uff1aTest(num INT(4)) \u8bf7\u7528\u4e00\u6761SQL\u8bed\u53e5\u8fd4\u56denum\u7684\u6700\u5c0f\u503c\uff0c\u4f46\u4e0d\u8bb8\u4f7f\u7528\u7edf\u8ba1\u529f\u80fd\uff0c\u5982MIN\uff0cMAX\u7b49", "\n\u7b54:", "\nselect top 1 num", "\nfrom Test", "\norder by num desc", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n30.", "\n\u8f93\u51fa\u4e0b\u9762\u7a0b\u5e8f\u7ed3\u679c\u3002", "\n#include ", "   pa=&a;", "\n   pb=&b;", "\n   pc=&c; ", "   a.print();", "\n   b.print();", "\n   c.print(); ", "   pa->print();", "\n   pb->print();", "\n   pc->print(); ", "   print(a);", "\n   print(b);", "\n   print(c);", "\n}", "\nA::print()", "\nB::print()", "\nC::print()", "\nA::print()", "\nB::print()", "\nC::print()", "\nA::print()", "\nA::print()", "\nA::print()", "\nC++\u662f\u6839\u636e\u5185\u5b58\u4e2d\u7684\u5177\u4f53\u7c7b\u5bf9\u8c61\u6a21\u578b\u6765\u5224\u65ad\u4f7f\u7528\u54ea\u4e2a\u865a\u51fd\u6570\u7684\uff0c\u8bb0\u4f4f\u8fd9\u4e2a\u5c31\u884c\u4e86\uff01", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n31.", "\n\u8bd5\u7f16\u5199\u51fd\u6570\u5224\u65ad\u8ba1\u7b97\u673a\u7684\u5b57\u8282\u5b58\u50a8\u987a\u5e8f\u662f\u5347\u5e8f(little endian)\u8fd8\u662f\u964d\u5e8f(bigendian)", "\n\u7b54:", "\nbool IsBigendian()", "\n{", "\n unsigned short usData = 0\u00d71122;", "\n unsigned char  *pucData = (unsigned char*)&usData;", "\n return (*pucData == 0\u00d722);", "\n}", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n32.\u7b80\u8ff0Critical Section\u548cMutex\u7684\u4e0d\u540c\u70b9", "\n\u7b54:", "\n\u5bf9\u51e0\u79cd\u540c\u6b65\u5bf9\u8c61\u7684\u603b\u7ed3", "\n1.Critical Section", "\nA.\u901f\u5ea6\u5feb", "\nB.\u4e0d\u80fd\u7528\u4e8e\u4e0d\u540c\u8fdb\u7a0b", "\nC.\u4e0d\u80fd\u8fdb\u884c\u8d44\u6e90\u7edf\u8ba1(\u6bcf\u6b21\u53ea\u53ef\u4ee5\u6709\u4e00\u4e2a\u7ebf\u7a0b\u5bf9\u5171\u4eab\u8d44\u6e90\u8fdb\u884c\u5b58\u53d6)", "\n2.Mutex", "\nA.\u901f\u5ea6\u6162", "\nB.\u53ef\u7528\u4e8e\u4e0d\u540c\u8fdb\u7a0b", "\nC.\u4e0d\u80fd\u8fdb\u884c\u8d44\u6e90\u7edf\u8ba1", "\n3.Semaphore", "\nA.\u901f\u5ea6\u6162", "\nB.\u53ef\u7528\u4e8e\u4e0d\u540c\u8fdb\u7a0b", "\nC.\u53ef\u8fdb\u884c\u8d44\u6e90\u7edf\u8ba1(\u53ef\u4ee5\u8ba9\u4e00\u4e2a\u6216\u8d85\u8fc7\u4e00\u4e2a\u7ebf\u7a0b\u5bf9\u5171\u4eab\u8d44\u6e90\u8fdb\u884c\u5b58\u53d6)", "\n4.Event", "\nA.\u901f\u5ea6\u6162", "\nB.\u53ef\u7528\u4e8e\u4e0d\u540c\u8fdb\u7a0b", "\nC.\u53ef\u8fdb\u884c\u8d44\u6e90\u7edf\u8ba1", "\n\u6709\u5173\u4e8e\u4e34\u754c\u533a\u548c\u4e92\u65a5\u5bf9\u8c61\u7684\u5185\u5bb9\u53ef\u53c2\u89c1\u300aWindows \u7a0b\u5e8f\u8bbe\u8ba1\u300b\u53ca\u300aWindows \u6838\u5fc3\u7f16\u7a0b\u300b\u7b49\u3002", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n33.\u4e00\u4e2a\u6570\u636e\u5e93\u4e2d\u6709\u4e24\u4e2a\u8868:", "\n\u4e00\u5f20\u8868\u4e3aCustomer\uff0c\u542b\u5b57\u6bb5ID,Name;", "\n\u4e00\u5f20\u8868\u4e3aOrder\uff0c\u542b\u5b57\u6bb5ID,CustomerID\uff08\u8fde\u5411Customer\u4e2dID\u7684\u5916\u952e\uff09,Revenue\uff1b", "\n\u5199\u51fa\u6c42\u6bcf\u4e2aCustomer\u7684Revenue\u603b\u548c\u7684SQL\u8bed\u53e5\u3002", "\n\u5efa\u8868", "\ncreate table customer", "\n(", "\nID int primary key,Name char(10)", "\n)", "\ngo", "\ncreate table [order]", "\n(", "\nID int primary key,CustomerID  int foreign key references customer(id) , Revenue float", "\n)", "\ngo", "\n\u2013\u67e5\u8be2", "\nselect Customer.ID, sum( isnull([Order].Revenue,0) )", "\nfrom customer full join [order]", "\non( [order].customerid=customer.id )", "\ngroup by customer.id", "\n\u6655\uff0c\u4e0d\u662f\u8bf4C++\u7684\u9762\u8bd5\u9898\u5417\uff1f\u600e\u4e48\u8fd9\u4e48\u591a\u6570\u636e\u5e93\u7684\u554a\uff1f\u8fd9\u4e2a\u6ca1\u770b =_=||", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n34.\u8bf7\u6307\u51fa\u4e0b\u5217\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\u5e76\u4e14\u4fee\u6539", "\nvoid GetMemory(char *p){", "\n  p=(char *)malloc(100);", "\n}", "\nvoid Test(void){", "\n  char *str=NULL;", "\n  GetMemory=(str);", "\n  strcpy(str,\u201dhello world\u201d);", "\n  printf(str);", "\n}", "\nA:\u9519\u8bef\u2013\u53c2\u6570\u7684\u503c\u6539\u53d8\u540e\uff0c\u4e0d\u4f1a\u4f20\u56de", "\nGetMemory\u5e76\u4e0d\u80fd\u4f20\u9012\u52a8\u6001\u5185\u5b58\uff0cTest\u51fd\u6570\u4e2d\u7684 str\u4e00\u76f4\u90fd\u662f NULL\u3002", "\nstrcpy(str, \u201chello world\u201d);\u5c06\u4f7f\u7a0b\u5e8f\u5d29\u6e83\u3002", "\n\u4fee\u6539\u5982\u4e0b:", "\nchar *GetMemory(){", "\n  char *p=(char *)malloc(100);", "\n  return p;", "\n}", "\nvoid Test(void){", "\n  char *str=NULL;  //\u5185\u5b58\u6cc4\u9732", "\n  str=GetMemory(){", "\n  strcpy(str,\u201dhello world\u201d);", "\n  printf(str);", "\n}", "\n\u65b9\u6cd5\u4e8c:void GetMemory2(char **p)\u53d8\u4e3a\u4e8c\u7ea7\u6307\u9488.", "\nvoid GetMemory2(char **p, int num)", "\n{", "\n *p = (char *)malloc(sizeof(char) * num);", "\n}", "\n\u300a\u9ad8\u8d28\u91cfC++\u7f16\u7a0b\u300b", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n35.\u7a0b\u5e8f\u6539\u9519", "\nclass mml", "\n{", "\n  private:", "\n    static unsigned int x;", "\n  public:", "\n    mml(){ x++; }", "\n    mml(static unsigned int &) {x++;}", "\n    ~mml{x\u2013;}", "\n  pulic:", "\n    virtual mon() {} = 0;", "\n    static unsigned int mmc(){return x;}", "\n    \u2026\u2026                      ", "};", "\nclass nnl:public mml", "\n{", "\n  private:", "\n    static unsigned int y;", "\n  public:", "\n    nnl(){ x++; }", "\n    nnl(static unsigned int &) {x++;}", "\n    ~nnl{x\u2013;}", "\n  public:", "\n    virtual mon() {};", "\n     static unsigned int nnc(){return y;}", "\n    \u2026\u2026", "\n};", "\n\u4ee3\u7801\u7247\u65ad:", "\nmml* pp = new nnl;", "\n\u2026\u2026\u2026.", "\ndelete pp;", "A:", "\n\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u5e94\u8be5\u4e3a\u865a\u51fd\u6570", "\nvirtual ~mml{x\u2013;}", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n36.101\u4e2a\u786c\u5e01100\u771f\u30011\u5047\uff0c\u771f\u5047\u533a\u522b\u5728\u4e8e\u91cd\u91cf\u3002\u8bf7\u7528\u65e0\u781d\u7801\u5929\u5e73\u79f0\u4e24\u6b21\u7ed9\u51fa\u771f\u5e01\u91cd\u8fd8\u662f\u5047\u5e01\u91cd\u7684\u7ed3\u8bba\u3002", "\n\u7b54:", "\n101\u4e2a\u5148\u53d6\u51fa2\u5806,", "\n33,33", "\n\u7b2c\u4e00\u6b21\u79f0,\u5982\u679c\u4e0d\u76f8\u7b49,\u8bf4\u660e\u6709\u4e00\u5806\u91cd\u6216\u8f7b", "\n\u90a3\u4e48\u628a\u91cd\u7684\u90a3\u5806\u62ff\u4e0b\u6765,\u518d\u653e\u53e6\u591635\u4e2a\u4e2d\u768433", "\n\u5982\u679c\u76f8\u7b49,\u8bf4\u660e\u5047\u7684\u91cd,\u5982\u679c\u4e0d\u76f8\u7b49,\u65b0\u653e\u4e0a\u53bb\u7684\u8fd8\u662f\u91cd\u7684\u8bdd,\u8bf4\u660e\u5047\u7684\u8f7b(\u4e0d\u53ef\u80fd\u65b0\u653e\u4e0a\u53bb\u7684\u8f7b)", "\n\u7b2c\u4e00\u6b21\u79f0,\u5982\u679c\u76f8\u7b49\u7684\u8bdd\uff0c\u8fd966\u4e2a\u80af\u5b9a\u90fd\u662f\u771f\u7684,\u4ece\u8fd966\u4e2a\u4e2d\u53d6\u51fa35\u4e2a\u6765,\u4e0e\u5269\u4e0b\u7684\u6ca1\u79f0\u8fc7\u768435\u4e2a\u6bd4", "\n\u4e0b\u9762\u5c31\u4e0d\u7528\u8bf4\u4e86", "\n\u65b9\u6cd5\u4e8c:", "\n\u7b2c3\u9898\u4e5f\u53ef\u4ee5\u62ffA(50),B(50)\u6bd4\u4e00\u4e0b\uff0c\u4e00\u6837\u7684\u8bdd\u62ff\u5269\u4e0b\u7684\u4e00\u4e2a\u548c\u771f\u7684\u6bd4\u4e00\u4e0b\u3002", "\n\u5982\u679c\u4e0d\u4e00\u6837\uff0c\u5c31\u62ff\u5176\u4e2d\u7684\u4e00\u5806\u3002\u6bd4\u5982A(50)\u518d\u5206\u6210\u4e24\u580625\u6bd4\u4e00\u4e0b\uff0c\u4e00\u6837\u7684\u8bdd\u5c31\u5728", "\nB(50)\u4e2d\uff0c\u4e0d\u4e00\u6837\u5c31\u5728A(50)\u4e2d\uff0c\u7ed3\u5408\u7b2c\u4e00\u6b21\u7684\u7ed3\u679c\u5c31\u77e5\u9053\u4e86\u3002", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n37.static\u53d8\u91cf\u548cstatic \u51fd\u6570\u5404\u6709\u4ec0\u4e48\u7279\u70b9\uff1f", "\n\u7b54:", "\nstatic\u53d8\u91cf\uff1a\u5728\u7a0b\u5e8f\u8fd0\u884c\u671f\u5185\u4e00\u76f4\u6709\u6548\uff0c\u5982\u679c\u5b9a\u4e49\u5728\u51fd\u6570\u5916\uff0c\u5219\u5728\u7f16\u8bd1\u5355\u5143\u5185\u53ef\u89c1\uff0c\u5982\u679c\u5728\u51fd\u6570\u5185\uff0c\u5728\u5728\u5b9a\u4e49\u7684block\u5185\u53ef\u89c1\uff1b", "\nstatic\u51fd\u6570\uff1a\u5728\u7f16\u8bd1\u5355\u5143\u5185\u53ef\u89c1\uff1b", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n38.\u7528C \u5199\u4e00\u4e2a\u8f93\u5165\u7684\u6574\u6570,\u5012\u7740\u8f93\u51fa\u6574\u6570\u7684\u51fd\u6570,\u8981\u6c42\u7528\u9012\u5f52\u65b9\u6cd5 ;", "\n\u7b54:", "\nvoid fun( int a )", "\n{", "\n printf( \u201c%d\u201d, a%10 );", "\n a /= 10;", "\n if( a \n fun( a );", "\n}", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n39.\u5199\u51fa\u7a0b\u5e8f\u7ed3\u679c:", "\nvoid Func(char str[100])", "\n{", "\n  printf(\u201c%d\\n\u201d, sizeof(str));", "\n}", "\n\u7b54:", "\n4", "\n\u5206\u6790:", "\n\u6307\u9488\u957f\u5ea6", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n40.int id[sizeof(unsigned long)];", "\n    \u8fd9\u4e2a\u5bf9\u5417\uff1f\u4e3a\u4ec0\u4e48??", "\n\u7b54:", "\n\u5bf9", "\n\u8fd9\u4e2a sizeof\u662f\u7f16\u8bd1\u65f6\u8fd0\u7b97\u7b26\uff0c\u7f16\u8bd1\u65f6\u5c31\u786e\u5b9a\u4e86", "\n\u53ef\u4ee5\u770b\u6210\u548c\u673a\u5668\u6709\u5173\u7684\u5e38\u91cf\u3002"], "title": "\u7f51\u4e0a\u6d41\u4f20\u7684C++\u9762\u8bd5\u9898"},
{"contents": ["\u4f8b\u5982{2\uff0c4\uff0c3\uff0c4\uff0c7}\u4e2d\uff0c\u7b2c\u4e00\u5927\u7684\u6570\u662f7\uff0c\u4f4d\u7f6e\u57284\u3002\u7b2c\u4e8c\u5927\u3001\u7b2c\u4e09\u5927\u7684\u6570\u90fd\u662f4\uff0c\u4f4d\u7f6e\u57281\u30013\u968f\u4fbf\u8f93\u51fa\u54ea\u4e00\u4e2a\u5747\u53ef\u3002\u51fd\u6570\u63a5\u53e3\u4e3a\uff1aint find_orderk(const int* narry,const int n,const int k)", "\n\u8981\u6c42\u7b97\u6cd5\u590d\u6742\u5ea6\u4e0d\u80fd\u662fO(n^2\uff09", "\n//\u5feb\u901f\u6392\u5e8f", "\n#include", "return0;", "\n}"], "title": "\u5199\u4e00\u6bb5\u7a0b\u5e8f\uff0c\u627e\u51fa\u6570\u7ec4\u4e2d\u7b2ck\u5927\u5c0f\u7684\u6570\uff0c\u8f93\u51fa\u6570\u6240\u5728\u7684\u4f4d\u7f6e\u3002"},
{"contents": ["New Topic (Press Shift-Enter to insert a line break. Press Enter to add a paragraph return.) Linklist *unio(Linklist *p,Linklist *q){", "\nlinklist *R,*pa,*qa,*ra;", "\npa=p;", "\nqa=q;", "\nR=ra=p;", "\nwhile(pa->next!=NULL&&qa->next!=NULL){", "\nif(pa->data>qa->data){", "\nra->next=qa;", "\nqa=qa->next;", "\n}", "\nelse{", "\nra->next=pa;", "\npa=pa->next;", "\n}", "\n}", "\nif(pa->next!=NULL)", "\nra->next=pa;", "\nif(qa->next!=NULL)", "\nra->next==qa;", "\nreturn R;", "\n}"], "title": "\u7ebf\u5f62\u8868a\u3001b\u4e3a\u4e24\u4e2a\u6709\u5e8f\u5347\u5e8f\u7684\u7ebf\u5f62\u8868\uff0c\u7f16\u5199\u4e00\u7a0b\u5e8f\uff0c\u4f7f\u4e24\u4e2a\u6709\u5e8f\u7ebf\u5f62\u8868\u5408\u5e76\u6210\u4e00\u4e2a\u6709\u5e8f\u5347\u5e8f\u7ebf\u5f62\u8868h"},
{"contents": ["\u6c42\u51fa1->1000\u91cc,\u80fd\u88ab5\u6574\u9664\u7684\u6570\u7684\u4e2a\u6570n1,\u80fd\u88ab25\u6574\u9664\u7684\u6570\u7684\u4e2a\u6570n2,\u80fd\u88ab125\u6574\u9664\u7684\u6570\u7684\u4e2a\u6570n3,", "\n\u80fd\u88ab625\u6574\u9664\u7684\u6570\u7684\u4e2a\u6570n4.", "\n1000!\u672b\u5c3e\u7684\u96f6\u7684\u4e2a\u6570= n1+n2+n3+n4;", "\n#include"], "title": "\u6c421000\uff01\u7684\u672a\u5c3e\u6709\u51e0\u4e2a0\uff08\u7528\u7d20\u6570\u76f8\u4e58\u7684\u65b9\u6cd5\u6765\u505a\uff0c\u598272=2*2*2*3*3\uff09;"},
{"contents": ["template"], "title": "\u5b9e\u73b0\u53cc\u5411\u94fe\u8868\u5220\u9664\u4e00\u4e2a\u8282\u70b9P\uff0c\u5728\u8282\u70b9P\u540e\u63d2\u5165\u4e00\u4e2a\u8282\u70b9\uff0c\u5199\u51fa\u8fd9\u4e24\u4e2a\u51fd\u6570;"},
{"contents": ["1. Coalescing\u505a\u4e86\u4ec0\u4e48\uff1f", "\n\u89e3\u7b54\uff1aCoalescing\u9488\u5bf9\u4e8e\u5b57\u5178\u7ba1\u7406\u7684tablespace\u8fdb\u884c\u788e\u7247\u6574\u7406\uff0c\u5c06\u4e34\u8fd1\u7684\u5c0fextents\u5408\u5e76\u6210\u5355\u4e2a\u7684\u5927extent.", "2. TEMPORARY tablespace\u548cPERMANENT tablespace \u7684\u533a\u522b\u662f\uff1f", "\n\u89e3\u7b54\uff1aA temporary tablespace \u7528\u4e8e\u4e34\u65f6\u5bf9\u8c61\u4f8b\u5982\u6392\u5e8f\u7ed3\u6784\u800c permanent tablespaces\u7528\u6765\u5b58\u50a8\u90a3\u4e9b\u2019\u771f\u5b9e\u2019\u7684\u5bf9\u8c61(\u4f8b\u5982\u8868\uff0c\u56de\u6eda\u6bb5\u7b49)", "3. \u521b\u5efa\u6570\u636e\u5e93\u65f6\u81ea\u52a8\u5efa\u7acb\u7684tablespace\u540d\u79f0\uff1f", "\n\u89e3\u7b54\uff1aSYSTEM tablespace.", "4. \u521b\u5efa\u7528\u6237\u65f6\uff0c\u9700\u8981\u8d4b\u4e88\u65b0\u7528\u6237\u4ec0\u4e48\u6743\u9650\u624d\u80fd\u4f7f\u5b83\u8054\u4e0a\u6570\u636e\u5e93\u3002", "\n\u89e3\u7b54\uff1aCONNECT", "5. \u5982\u4f55\u5728tablespace\u91cc\u589e\u52a0\u6570\u636e\u6587\u4ef6\uff1f", "\n\u89e3\u7b54\uff1aALTER TABLESPACE ADD DATAFILE SIZE ", "6. \u5982\u4f55\u53d8\u52a8\u6570\u636e\u6587\u4ef6\u7684\u5927\u5c0f\uff1f", "\u89e3\u7b54\uff1aALTER DATABASE DATAFILE RESIZE ;", "7. \u54ea\u4e2aVIEW\u7528\u6765\u68c0\u67e5\u6570\u636e\u6587\u4ef6\u7684\u5927\u5c0f\uff1f", "\n\u89e3\u7b54\uff1a DBA_DATA_FILES", "8. \u54ea\u4e2aVIEW\u7528\u6765\u5224\u65adtablespace\u7684\u5269\u4f59\u7a7a\u95f4", "\n\u89e3\u7b54\uff1aDBA_FREE_SPACE", "9. \u5982\u4f55\u5224\u65ad\u8c01\u5f80\u8868\u91cc\u589e\u52a0\u4e86\u4e00\u6761\u7eaa\u5f55\uff1f", "\n\u89e3\u7b54\uff1aauditing ", "10. \u5982\u4f55\u91cd\u6784\u7d22\u5f15\uff1f", "\n\u89e3\u7b54\uff1a ALTER INDEX REBUILD;", "11. \u89e3\u91ca\u4ec0\u4e48\u662fPartitioning\uff08\u5206\u533a\uff09\u4ee5\u53ca\u5b83\u7684\u4f18\u70b9\u3002", "\n\u89e3\u7b54\uff1aPartition\u5c06\u5927\u8868\u548c\u7d22\u5f15\u5206\u5272\u6210\u66f4\u5c0f\uff0c\u6613\u4e8e\u7ba1\u7406\u7684\u5206\u533a\u3002", "12. \u4f60\u521a\u521a\u7f16\u8bd1\u4e86\u4e00\u4e2aPL/SQL Package\u4f46\u662f\u6709\u9519\u8bef\u62a5\u9053\uff0c\u5982\u4f55\u663e\u793a\u51fa\u9519\u4fe1\u606f\uff1f", "\n\u89e3\u7b54\uff1aSHOW ERRORS", "13. \u5982\u4f55\u641c\u96c6\u8868\u7684\u5404\u79cd\u72b6\u6001\u6570\u636e\uff1f", "\n\u89e3\u7b54\uff1a ANALYZE", "\nThe ANALYZE command.", "14. \u5982\u4f55\u542f\u52a8SESSION\u7ea7\u522b\u7684TRACE", "\n\u89e3\u7b54: DBMS_SESSION.SET_SQL_TRACE", "\nALTER SESSION SET SQL_TRACE = TRUE;", "15. IMPORT\u548cSQL*LOADER \u8fd92\u4e2a\u5de5\u5177\u7684\u4e0d\u540c\u70b9", "\n\u89e3\u7b54\uff1a\u8fd9\u4e24\u4e2aORACLE\u5de5\u5177\u90fd\u662f\u7528\u6765\u5c06\u6570\u636e\u5bfc\u5165\u6570\u636e\u5e93\u7684\u3002", "\n\u533a\u522b\u662f\uff1aIMPORT\u5de5\u5177\u53ea\u80fd\u5904\u7406\u7531\u53e6\u4e00\u4e2aORACLE\u5de5\u5177EXPORT\u751f\u6210", "\n\u7684\u6570\u636e\u3002\u800cSQL*LOADER\u53ef\u4ee5\u5bfc\u5165\u4e0d\u540c\u7684ASCII\u683c\u5f0f\u7684\u6570\u636e\u6e90", "16\u3002\u7528\u4e8e\u7f51\u7edc\u8fde\u63a5\u76842\u4e2a\u6587\u4ef6\uff1f", "\n\u89e3\u7b54\uff1a TNSNAMES.ORA and SQLNET.ORA"], "title": "\u676d\u5dde-ORACLE\u6d59\u6c5f\u76ca\u548c\u7535\u529b\u79d1\u6280\u4fe1\u606f\u6709\u9650\u516c\u53f8"},
{"contents": ["int IsReverseStr(char *aStr)", "\n{", "\nint i,j;", "\nint found=1;", "\nif(aStr==NULL)", "\nreturn -1;", "\nj=strlen(aStr);", "\nfor(i=0;i", "\nif(*(aStr+i)!=*(aStr+j-i-1))", "\n{", "\nfound=0;", "\nbreak;", "\n}", "\nreturn found;", "\n}"], "title": "\u5224\u65ad\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u4e0d\u662f\u56de\u6587"},
{"contents": ["#include", "main()", "\n{", "\nchar *str1=malloc(256);", "\nchar *str2=malloc(256);", "\nchar *comman=NULL;", "\ngets(str1);", "\ngets(str2);", "\nif(strlen(str1)>strlen(str2)) //\u5c06\u77ed\u7684\u5b57\u7b26\u4e32\u653e\u524d\u9762", "\ncomman=commanstring(str2, str1);", "\nelse", "\ncomman=commanstring(str1, str2);", "\nprintf(\u201cthe longest comman string is: %s\\n\u201d, comman);", "\n} "], "title": "\u7ed9\u5b9a\u5b57\u7b26\u4e32A\u548cB,\u8f93\u51faA\u548cB\u4e2d\u7684\u6700\u5927\u516c\u5171\u5b50\u4e32\u3002"},
{"contents": ["char* test3(long num) {", "\nchar* buffer = (char*)malloc(11);", "\nbuffer[0] = \u20190\u2032;", "\nbuffer[1] = \u2018x\u2019;", "\nbuffer[10] = \u2018\\0\u2032;", "\nchar* temp = buffer + 2;", "\nfor (int i=0; i \ntemp[i] = (char)(num>28);", "\ntemp[i] = temp[i] >= 0 ? temp[i] : temp[i] + 16;", "\ntemp[i] = temp[i] \n}", "\nreturn buffer;", "\n} "], "title": "\u628a\u5341\u8fdb\u5236\u6570(long\u578b)\u5206\u522b\u4ee5\u4e8c\u8fdb\u5236\u548c\u5341\u516d\u8fdb\u5236\u5f62\u5f0f\u8f93\u51fa\uff0c\u4e0d\u80fd\u4f7f\u7528printf\u7cfb\u5217\u5e93\u51fd\u6570"},
{"contents": ["Josephu\u95ee\u9898\u4e3a\uff1a\u8bbe\u7f16\u53f7\u4e3a1\uff0c2\uff0c\u2026n\u7684n\u4e2a\u4eba\u56f4\u5750\u4e00\u5708\uff0c\u7ea6\u5b9a\u7f16\u53f7\u4e3ak\uff081\n\u6570\u7ec4\u5b9e\u73b0\uff1a", "\n#include ", "\u94fe\u8868\u5b9e\u73b0\uff1a", "\n#include "], "title": "Josephu \u95ee\u9898(\u5c0f\u5b69\u51fa\u5217\u95ee\u9898)"},
{"contents": ["#include ", "FILE *fp1;", "\nFILE *fp2;", "\nfp1 = fopen(\u201ca.txt\u201d,\u201dr\u201d);", "\nif(fp1 == NULL)", "\n{printf(\u201cerror1\u2033);", "\n    exit(-1);", "\n}", "\n    fp2 = fopen(\u201cb.txt\u201d,\u201dw\u201d);", "\nif(fp2 == NULL)", "\n{printf(\u201cerror2\u2033);", "\n    exit(-1);", "\n}", "\nint i = 0;", "\n    int j = 0;", "\nwhile(fscanf(fp1,\u201d%d\u201d,&a[i]) != EOF)", "\n{", "\ni++;", "\nj++;", "\nif(i >= MAX)", "\n{", "\nMAX = 2 * MAX;", "\nb = (int*)realloc(a,MAX * sizeof(int));", "\nif(b == NULL)", "\n{", "\nprintf(\u201cerror3\u2033);", "\nexit(-1);", "\n}", "\na = b;", "\n}", "\n}", "\nfor(;\u2013j >= 0;)", "\n   fprintf(fp2,\u201d%d\\n\u201d,a[j]);", "\nfclose(fp1);", "\nfclose(fp2);", "\nreturn 0; ", "}"], "title": "\u8bfb\u6587\u4ef6file1.txt\u7684\u5185\u5bb9,\u8f93\u51fa\u5230file2.txt"},
{"contents": ["int getlen(char *s){", "\n    int n;", "\n    for(n = 0; *s != \u2018\\0\u2032; s++)", "\n           n++;", "\n    return n;", "\n}", "\nvoid reverse(char s[])", "\n{", "\n   int c,i,j;", "\n   for(i = 0,j = getlen(s) \u2013 1; i \n       c = s[i];", "\n       s[i] = s[j];", "\n       s[j] = c;", "\n   }", "\n}", "\nvoid itoa(int n,char s[])", "\n{", "\n   int i,sign;", "\n   if((sign = n) \n        n = -n;", "\n   i = 0;", "\n   do{/*\u4ee5\u53cd\u5e8f\u751f\u6210\u6570\u5b57*/", "\n      s[i++] = n%10 + '0';/*get next number*/", "\n   }while((n /= 10) > 0);/*delete the number*/", "\n   if(sign \n      s[i++] = \u2018-\u2019;", "\n   s[i] = \u2018\\0\u2032;", "\n   reverse(s);", "\n}"], "title": "\u4e0d\u7528\u5e93\u51fd\u6570,\u7528C\u8bed\u8a00\u5b9e\u73b0\u5c06\u4e00\u6574\u578b\u6570\u5b57\u8f6c\u5316\u4e3a\u5b57\u7b26\u4e32"},
{"contents": ["A1:", "\n16\u4f4d\u7684\u7cfb\u7edf\u4e0b\uff0c", "\nint i = 65536;", "\ncout \nint i = 65535;", "\ncout \n32\u4f4d\u7684\u7cfb\u7edf\u4e0b\uff0c", "\nint i = 65536;", "\ncout \nint i = 65535;", "\ncout \nA2:", "\nint a = ~0;", "\nif( a>65536 )", "\n{", "\n    cout\n}", "\nelse", "\n{", "\n    cout\n}"], "title": "\u7528C++\u5199\u4e2a\u7a0b\u5e8f\uff0c\u5982\u4f55\u5224\u65ad\u4e00\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u662f16\u4f4d\u8fd8\u662f32\u4f4d\u7684\uff1f\u4e0d\u80fd\u7528sizeof()\u51fd\u6570"},
{"contents": ["\u00b7 \u88c5\u7bb1\u4e0e\u62c6\u7bb1\u7684\u64cd\u4f5c", "\n\u00b7 \u91cd\u8f7d\u4e0e\u91cd\u5199\u7684\u610f\u4e49", "\n\u00b7 \u591a\u6001\u7684\u7406\u89e3\u4ee5\u53ca\u5bf9\u5e94\u7684\u4e00\u79cd\u8bbe\u8ba1\u6a21\u5f0f", "\n\u00b7 .net \u4e0b\u8de8\u5e73\u53f0\u8c03\u7528\u7684\u65b9\u6cd5", "\n\u00b7 \u62bd\u8c61\u7c7b\u4e0e\u63a5\u53e3\u7684\u533a\u522b", "\n\u00b7 The difference between C++ and C#", "\n\u00b7 Describe the design patterns you\u2019ve appliedto project.", "\n\u00b7 Introduce P2P and Chord algorithm.", "\n\u00b7 c++\u6307\u9488", "\n\u00b7 c++\u865a\u6784\u51fd\u6570", "\n\u00b7 \u6570\u636e\u5e93sql\u8bed\u53e5", "\n\u00b7 \u5199\u4e00\u4e2a\u56de\u6587\u5224\u65ad\u51fd\u6570", "\n\u00b7 c#\u53d8\u91cf\u521d\u59cb\u5316\u95ee\u9898"], "title": "Jr.C++/C#\u5f00\u53d1\u5de5\u7a0b\u5e08\u9762\u8bd5\u9898"},
{"contents": ["\u00b7 The high-level description for the project \u2018SITTool\u2019", "\n\u00b7 Are you comfortable for working on C++ as youare good at Java?", "\n\u00b7 Differences between Java & C++", "\n\u00b7 Why do we need MQ", "\n\u00b7 Override and Polymorphism", "\n\u00b7 Java Thread and synchronized", "\n\u00b7 Web, Struts2.0 framework", "\n\u00b7 Are you willing to work overtime?", "\n\u00b7 If you are a Shanghainese, how do you handlethe relationship with your team mates who are from other parts of China?Do you think the differences in culture have any impact?", "\n\u00b7 If you fail to deliver a report to a customerin time and then the customer becomes very angry and argues with you, how areyou going to handle it?", "\n\u00b7 List the differences between Class String andClass StringBuffer in Java.", "\n\u00b7 Describe two concepts in OO which areoverload and overwrite.", "\n\u00b7 Create a table in a database.", "\n\u00b7 Describe the generic type introduced in Java1.5.", "\n\u00b7 Explain the meaning of \u2018final\u2019 method inJava."], "title": "Java C++ interview questions \u9762\u8bd5\u9898"},
{"contents": [], "title": "C++\u3001\u6570\u636e\u7ed3\u6784\u7b14\u8bd5\u9898"},
{"contents": ["151.\u7b80\u8ff0\u9700\u6c42\u5206\u6790\u7684\u8fc7\u7a0b\u548c\u610f\u4e49", "\u00a0", "152.\u7f51\u72b6\u3001\u5c42\u6b21\u6570\u636e\u6a21\u578b\u4e0e\u5173\u7cfb\u6570\u636e\u6a21\u578b\u7684\u6700\u5927\u7684\u533a\u522b\u662f\u4ec0\u672b", "\u00a0", "153.\u8f6f\u4ef6\u8d28\u91cf\u4fdd\u8bc1\u4f53\u7cfb\u662f\u4ec0\u672b \u56fd\u5bb6\u6807\u51c6\u4e2d\u4e0e\u8d28\u91cf\u4fdd\u8bc1\u7ba1\u7406\u76f8\u5173\u7684\u51e0\u4e2a\u6807\u51c6\u662f\u4ec0\u672b \u7f16\u53f7\u548c\u5168\u79f0\u662f\u4ec0\u672b\u53f7\u548c\u5168\u79f0\u662f\u4ec0\u672b", "\u00a0", "153\u6587\u4ef6\u683c\u5f0f\u7cfb\u7edf\u6709\u54ea\u51e0\u79cd\u7c7b\u578b\uff1f\u5206\u522b\u8bf4\u8bf4win95\u3001win98\u3001winMe\u3001w2k\u3001winNT\u3001winXP\u5206\u522b\u652f\u6301\u90a3\u4e9b\u6587\u4ef6\u7cfb\u7edf", "\u00a0", "154\uff0e\u6211\u73b0\u5728\u6709\u4e2a\u7a0b\u5e8f\uff0c\u53d1\u73b0\u5728WIN98\u4e0a\u8fd0\u884c\u5f97\u5f88\u6162\uff0c\u600e\u4e48\u5224\u522b\u662f\u7a0b\u5e8f\u5b58\u5728\u95ee\u9898\u8fd8\u662f\u8f6f\u786c\u4ef6\u7cfb\u7edf\u5b58\u5728\u95ee\u9898\uff1f", "\n155\uff0e\u6709\u5173P2P\u70b9\u5bf9\u70b9\u6587\u4ef6\u4f20\u8f93\u7684\u539f\u7406", "\u00a0", "156.\u4e00\u53f0\u8ba1\u7b97\u673a\u7684IP\u662f192.168.10.71\u5b50\u7f51\u63a9\u7801255.255.255.64\u4e0e192.168.10.201\u662f\u540c\u4e00\u5c40\u57df\u7f51\u5417?", "\n157.internet\u4e2de-mail\u534f\u4eea,IE\u7684\u534f\u4eea,NAT\u662f\u4ec0\u4e48,\u6709\u4ec0\u4e48\u597d\u5904,\u80fd\u5e26\u6765\u4ec0\u4e48\u95ee\u9898?DNS\u662f\u4ec0\u4e48,\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684?", "\n158.PROXY\u662f\u5982\u4f55\u5de5\u4f5c\u7684?", "\n169.win2k\u7cfb\u7edf\u5185AT\u547d\u4ee4\u5b8c\u6210\u4ec0\u4e48\u529f\u80fd,Messenger\u670d\u52a1\u662f\u505a\u4ec0\u4e48,\u600e\u4e48\u4f7f\u7528?", "\n170\u8fdb\u7a0b,\u7ebf\u7a0b\u7684\u5b9a\u4e49\u53ca\u533a\u522b", "\n171,32\u4f4d\u64cd\u4f5c\u7cfb\u7edf\u5185,1\u8fdb\u7a0b\u5730\u5740\u7a7a\u95f4\u591a\u5927,\u8fdb\u7a0b\u7a7a\u95f4\u4e0e\u7269\u7406\u5185\u5b58\u6709\u4ec0\u4e48\u5173\u7cfb?", "\n172.\u7f51\u7edc\u653b\u51fb\u5e38\u7528\u7684\u624b\u6bb5,\u9632\u706b\u5899\u5982\u4f55\u4fdd\u8bc1\u5b89\u5168.", "\n173.\u5982\u4f55\u914d\u9759\u6001IP,\u5982\u4f55\u6d4b\u7f51\u7edc\u51852\u53f0\u8ba1\u7b97\u673a\u901a\u4e0d\u901a,PING\u4e00\u6b21\u8fd4\u51e0\u4e2a\u6570\u636e\u5305?", "\n174.WIN9X\u4e0eWINNT\u4ee5\u4e0a\u64cd\u4f5c\u7cfb\u7edf\u6709\u201d\u670d\u52a1\u201d\u5417,\u670d\u52a1\u662f\u4ec0\u4e48,\u5982\u4f55\u505c\u6b62\u670d\u52a1?", "\n175.AD\u5728WIN2KSERVER\u4e0a\u5efa\u9700\u4ec0\u4e48\u6587\u4ef6\u683c\u5f0f,AD\u662f\u4ec0\u4e48?XP\u591a\u7528\u6237\u4e0b\u201d\u6ce8\u9500\u201d\u4e0e\u201d\u5207\u6362\u201d\u7684\u533a\u522b.", "176\uff0eUDP\u53ef\u4ee5\u8de8\u7f51\u6bb5\u53d1\u9001\u5417?", "177.\u6700\u7b80\u5355\u7684\u786e\u8ba4\u8fdc\u7a0b\u8ba1\u7b97\u673a(win2K\u4ee5\u4e0a)\u67d0\u4e2a\u76d1\u542c\u7aef\u53e3\u662f\u6b63\u5e38\u5efa\u7acb\u7684?", "178. \u627e\u9519", "\u00a0", "void test1()", "{", "char string[10];", "char* str1=\u201d0123456789\u2033;", "strcpy(string, str1);", "}", "\u00a0", "\u7b54\uff1a\u8868\u9762\u4e0a\u5e76\u4e14\u7f16\u8bd1\u90fd\u4e0d\u4f1a\u9519\u8bef\u3002\u4f46\u5982\u679cstring\u6570\u7ec4\u539f\u610f\u8868\u793a\u7684\u662f\u5b57\u7b26\u4e32\u7684\u8bdd\uff0c\u90a3\u8fd9\u4e2a\u8d4b\u503c\u5c31\u6ca1\u6709\u8fbe\u5230\u610f\u56fe\u3002\u6700\u597d\u5b9a\u4e49\u4e3achar string[11]\uff0c\u8fd9\u6837\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u53ef\u4ee5\u5b58\u50a8\u5b57\u7b26\u4e32\u7ed3\u5c3e\u7b26\u2019\\0\u2032;", "\u00a0", "\u00a0", "void test2()", "{", "char string[10], str1[10];", "for(int I=0; I<10;I++)", "{", "str1[I] =\u2019a';", "}", "strcpy(string, str1);", "}", "\u00a0", "\u7b54\uff1astrcpy\u4f7f\u7528\u9519\u8bef\uff0cstrcpy\u53ea\u6709\u9047\u5230\u5b57\u7b26\u4e32\u672b\u5c3e\u7684\u2019\\0\u2032\u624d\u4f1a\u7ed3\u675f\uff0c\u800cstr1\u5e76\u6ca1\u6709\u7ed3\u5c3e\u6807\u5fd7\uff0c\u5bfc\u81f4strcpy\u51fd\u6570\u8d8a\u754c\u8bbf\u95ee\uff0c\u4e0d\u59a8\u8ba9str1[9]=\u2019\\0\u2032\uff0c\u8fd9\u6837\u5c31\u6b63\u5e38\u4e86\u3002", "\u00a0", "\u00a0", "void test3(char* str1)", "{", "char string[10];", "if(strlen(str1)<=10)", "{", "strcpy(string, str1);", "}", "}", "\u00a0", "\u7b54\uff1a\u8fd9\u53c8\u4f1a\u51fa\u73b0\u7b2c\u4e00\u9053\u6539\u9519\u9898\u7684\u9519\u8bef\u4e86\u3002strlen(str1)\u7b97\u51fa\u6765\u7684\u503c\u662f\u4e0d\u5305\u542b\u7ed3\u5c3e\u7b26\u2019\\0\u2032\u7684\uff0c\u5982\u679cstr1\u521a\u597d\u4e3a10\u4e2a\u5b57\u7b26\uff0b1\u7ed3\u5c3e\u7b26\uff0cstring\u5c31\u5f97\u4e0d\u5230\u7ed3\u5c3e\u7b26\u4e86\u3002\u53ef\u5c06strlen(str1)<=10\u6539\u4e3astrlen(str1)<10\u3002", "\u00a0", "179. \u627e\u9519", "\u00a0", "#define MAX_SRM 256", "\u00a0", "DSN get_SRM_no()", "{", "static int SRM_no;", "int I;", "for(I=0;I<MAX_SRM;I++,SRM_no++)", "{", "SRM_no %= MAX_SRM;", "if(MY_SRM.state==IDLE)", "{", "break;", "}", "}", "if(I>=MAX_SRM)", "return (NULL_SRM);", "else", "return SRM_no;", "}", "\u00a0", "\u7b54\uff1a\u6211\u4e0d\u77e5\u9053\u8fd9\u6bb5\u4ee3\u7801\u7684\u5177\u4f53\u529f\u80fd\uff0c\u4f46\u660e\u663e\u6709\u4e24\u4e2a\u9519\u8bef", "1\uff0cSRM_no\u6ca1\u6709\u8d4b\u521d\u503c", "2\uff0c\u7531\u4e8estatic\u7684\u58f0\u660e\uff0c\u4f7f\u8be5\u51fd\u6570\u6210\u4e3a\u4e0d\u53ef\u91cd\u5165\uff08\u5373\u4e0d\u53ef\u9884\u6d4b\u7ed3\u679c\uff09\u51fd\u6570\uff0c\u56e0\u4e3aSRM_no\u53d8\u91cf\u653e\u5728\u7a0b\u5e8f\u7684\u5168\u5c40\u5b58\u50a8\u533a\u4e2d\uff0c\u6bcf\u6b21\u8c03\u7528\u7684\u65f6\u5019\u8fd8\u53ef\u4ee5\u4fdd\u6301\u539f\u6765\u7684\u8d4b\u503c\u3002\u8fd9\u91cc\u5e94\u8be5\u53bb\u6389static\u58f0\u660e\u3002", "\u00a0", "180. \u5199\u51fa\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u679c", "\u00a0", "int sum(int a)", "{", "auto int c=0;", "static int b=3;", "c+=1;", "b+=2;", "return(a+b+c);", "}", "void main()", "{", "int I;", "int a=2;", "for(I=0;I<5;I++)", "{", "printf(\u201c%d,\u201d, sum(a));", "}", "}", "\u00a0", "\u7b54\uff1a8,10,12,14,16", "\u8be5\u9898\u6bd4\u8f83\u7b80\u5355\u3002\u53ea\u8981\u6ce8\u610fb\u58f0\u660e\u4e3astatic\u9759\u6001\u5168\u5c40\u53d8\u91cf\uff0c\u5176\u503c\u5728\u4e0b\u6b21\u8c03\u7528\u65f6\u662f\u53ef\u4ee5\u4fdd\u6301\u4f4f\u539f\u6765\u7684\u8d4b\u503c\u7684\u5c31\u53ef\u4ee5\u3002", "\u00a0", "\u00a0", "\u00a0", "181.", "\u00a0", "int func(int a)", "{", "int b;", "switch(a)", "{", "case 1: b=30;", "case 2: b=20;", "case 3: b=16;", "default: b=0;", "}", "return b;", "}", "\u00a0", "\u5219func(1)=?", "\u7b54\uff1afunc(1)=0\uff0c\u56e0\u4e3a\u6ca1\u6709break\u8bed\u53e5\uff0cswitch\u4e2d\u4f1a\u4e00\u76f4\u8ba1\u7b97\u5230b=0\u3002\u8fd9\u662f\u63d0\u9192\u6211\u4eec\u4e0d\u8981\u5fd8\u4e86break\u3002\u5475\u5475\u3002", "\u00a0", "182:", "\u00a0", "int a[3];", "a[0]=0; a[1]=1; a[2]=2;", "int *p, *q;", "p=a;", "q=&a[2];", "\u00a0", "\u5219a[q-p]=?", "\u7b54\uff1aa[q-p]=a[2]=2;\u8fd9\u9898\u662f\u8981\u544a\u8bc9\u6211\u4eec\u6307\u9488\u7684\u8fd0\u7b97\u7279\u70b9", "\u00a0", "183.", "\u5b9a\u4e49 int **a[3][4], \u5219\u53d8\u91cf\u5360\u6709\u7684\u5185\u5b58\u7a7a\u95f4\u4e3a\uff1a_____", "\u7b54\uff1a\u6b64\u5904\u5b9a\u4e49\u7684\u662f\u6307\u5411\u6307\u9488\u7684\u6307\u9488\u6570\u7ec4\uff0c\u5bf9\u4e8e32\u4f4d\u7cfb\u7edf\uff0c\u6307\u9488\u5360\u5185\u5b58\u7a7a\u95f44\u5b57\u8282\uff0c\u56e0\u6b64\u603b\u7a7a\u95f4\u4e3a3\u00d74\u00d74\uff1d48\u3002", "\u00a0", "184.", "\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u8981\u6c42\u8f93\u5165\u5e74\u6708\u65e5\u65f6\u5206\u79d2\uff0c\u8f93\u51fa\u8be5\u5e74\u6708\u65e5\u65f6\u5206\u79d2\u7684\u4e0b\u4e00\u79d2\u3002\u5982\u8f93\u51652004\u5e7412\u670831\u65e523\u65f659\u520659\u79d2\uff0c\u5219\u8f93\u51fa2005\u5e741\u67081\u65e50\u65f60\u52060\u79d2\u3002", "\u7b54\uff1a", "\u00a0", "/*\u8f93\u5165\u5e74\u6708\u65e5\u65f6\u5206\u79d2\uff0c\u8f93\u51fa\u5e74\u6708\u65e5\u65f6\u5206\u79d2\u7684\u4e0b\u4e00\u79d2\uff0c\u8f93\u51fa\u4ecd\u7136\u5728\u539f\u5185\u5b58\u7a7a\u95f4*/", "bool NextMinute(int *nYear,int *nMonth,int *nDate,int *nHour,int *nMinute,int *nSecond)", "{", "if(*nYear<0 || *nMonth>12 || *nMonth<0 || *nHour>23 || *nHour<0 || *nMinute<0 || *nMinute>59 || *nSecond<0 || *nSecond>59) return false;", "int nDays;", "switch(*nMonth)", "{", "case 1:", "case 3:", "case 5:", "case 7:", "case 8:", "case 10:", "case 12:", "nDays=31;", "break;", "case 2:// \u5224\u65ad\u95f0\u5e74", "if(*nYear%400==0||*nYear%100!=0&&*nYear%4==0)", "{", "nDays=29;", "}", "else", "{", "nDays=28;", "}", "break;", "default:", "nDays=30;", "break;", "}", "if(*nDate<0 || *nDate>nDays) return false;", "\u00a0", "(*nSecond)++;\u00a0 // \u79d2\u52a01", "if(*nSecond>=60)\u00a0 // \u79d2\u6ee160\uff0c\u505a\u51fa\u7279\u6b8a\u5904\u7406\uff0c\u4e0b\u9762\u65f6\uff0c\u65e5\uff0c\u6708\u7b49\u7c7b\u540c", "{", "*nSecond=0;", "(*nMinute)++;", "if(*nMinute>=60)", "{", "*nMinute=0;", "(*nHour)++;", "if(*nHour>=24)", "{", "*nHour=0;", "(*nDate)++;", "if(*nDate>nDays)", "{", "*nDate=1;", "(*nMonth)++;", "if(*nMonth>12)", "{", "*nMonth=1;", "(*nYear)++;", "}", "}", "}", "}", "}", "return true;", "}", "/*\u793a\u4f8b\u53ef\u8fd0\u884c\u4ee3\u7801*/", "void main()", "{", "int nYear=2004,nMonth=12,nDate=31,nHour=23,nMinute=59,nSecond=59;", "bool res = NextMinute(&nYear,&nMonth,&nDate,&nHour,&nMinute,&nSecond);", "if(res)", "printf(\u201cThe result:%d-%d-%d %d:%d:%d\u201d,nYear,nMonth,nDate,nHour,nMinute,nSecond);", "else", "printf(\u201cInput error!\\n\u201d);", "}", "\u00a0", "185\uff0e \u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u5224\u5b9a\u8fd0\u7b97\u73af\u5883\uff0816\u4f4d\u4ee5\u4e0a\u5b57\u957f\uff09\u662flittle-endian\u8fd8\u662fbig-endian", "\u00a0", "186\uff0e \u64cd\u4f5c\u7cfb\u7edf\u7684\u4e3b\u8981\u7ec4\u6210\u90e8\u5206\uff1f", "\u00a0", "187\uff0e\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u8fdb\u7a0b\u8c03\u5ea6\u7b56\u7565\u6709\u54ea\u51e0\u79cd\uff1f", "\u00a0", "188\uff0e\u8fdb\u7a0b\u95f4\u4e3b\u8981\u7684\u901a\u8baf\u65b9\u5f0f\uff1f", "\u00a0", "189\uff0e\u5199\u51fa\u8fdb\u7a0b\u7684\u4e3b\u8981\u72b6\u6001\uff1f", "\u00a0", "190\uff0e\u4ee5\u592a\u7f51\u7269\u7406\u5730\u5740\u548cIP\u5730\u5740\u8f6c\u6362\u91c7\u7528\u4ec0\u4e48\u534f\u8bae\uff1f", "\u00a0", "191\uff0eIP\u5730\u5740\u7684\u7f16\u7801\u5206\u4e3a\u54ea\u4e24\u90e8\u5206\uff1f", "\u00a0", "192\uff0e\u5199\u51fa\u4ee5\u592a\u7f51\u6570\u636e\u5e27\u683c\u5f0f", "\u00a0", "/193\uff0e8031\u548c8051\u7684\u4e3b\u8981\u533a\u522b\uff1f", "\u00a0", "\u00a0", "194\uff0eC++\u4e2d\u7684\u7a7a\u7c7b\uff0c\u9ed8\u8ba4\u4ea7\u751f\u54ea\u4e9b\u7c7b\u6210\u5458\u51fd\u6570\uff1f", "\u00a0", "\u00a0", "\u5206\u6790\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u6267\u884c\u7ed3\u679c", "#include<iostream.h>", "class base", "{", "public:", "base(){cout<< \u201cconstructing base class\u201d<<endl;}", "~base(){cout<<\u201ddestructing base class\u201d<<endl;}", "};", "class subs:public base", "{", "public:", "subs(){cout<<\u201dconstructing sub class\u201d<<endl;}", "~subs(){cout<<\u201ddestructing sub class\u201d<<endl;}", "};", "void main()", "{", "subs s;", "}", "\u00a0", "195.\u6307\u51fa\u4e0b\u9762\u7a0b\u5e8f\u7684\u9519\u8bef", "#define SIZE 5", "struct String", "{", "char *pData;", "};", "void\u00a0 main()", "{", "char *pData;", "};", "void\u00a0 main()", "{", "char acValue1[SIZE]={\u2018H\u2019,\u2019E\u2019,\u2019L\u2019,\u2019L\u2019,\u2019O\u2019};", "char acValue2[SIZE]={\u2018W\u2019,\u2019O\u2019,\u2019L\u2019,\u2019D\u2019};", "struct String a,b,c;", "a.pData=malloc(SIZE*sizeof(char));", "memcpy(a.pData,acValuel,SIZE);", "b.pData=malloc(SIZE*sizeof(char));", "mempcpy(b.pData,acValue2,SIZE);", "b=a;", "free(a.pData);", "c=b;", "}", "\u00a0", "\u00a0", "196.\u6307\u51fa\u4e0b\u9762\u4e24\u6bb5\u7a0b\u5e8f\u7684\u533a\u522b", "\u3010", "\u3011", "main()", "{", "int loop=1;", "int arr[10];", "int i=0;", "while(loop<5)", "{", "for(;i<=10;i++)", "{", "arr[i]=1;", "}", "loop++;", "}", "}", "\u3010", "\u3011", "main()", "{", "int arr[10];", "int loop=1;", "int i=0;", "while(loop<5)", "{", "for(i=0;i<=10;i++)", "{", "arr[i]=1;", "}", "loop++;", "}", "}", "\u00a0", "197.\u6307\u51fa\u4e0b\u9762\u7a0b\u5e8f\u7684\u9519\u8bef\uff08\u51fd\u6570GetValue\u8fd4\u56de\u00a0unsigned char\u7c7b\u578b\u7684\u503c\uff09", "#define\u00a0 MAXNUM\u00a0 400;", "unsigned char uclndex,uclnputVar,aucArray[MAXNUM];", "for(ucIndx =0;ucIndex<=MAXNUM;ucIndex++)", "{", "aucArray[ucIndex]=aucArray[ucIndex]+1;", "}", "ucInputVar=GetValue();", "for(ucIndex=0;ucIndex>(ucInputVar-1);ucIndex++)", "{", "aucArray[ucIndex]=aucArray[ucIndex]*2+1;", "}", "\u00a0", "198.\u4ec0\u4e48\u662fcom\u548cActiveX\uff0c\u7b80\u8ff0DCOM\u3002", "\n\u7b54\uff1aCOM\uff08Component Object Mode\uff09\u5373\u7ec4\u4ef6\u5bf9\u8c61\u6a21\u578b\uff0c\u662f\u7ec4\u4ef6\u4e4b\u95f4\u76f8\u4e92\u63a5\u53e3\u7684\u89c4\u8303\u3002\u5176\u4f5c\u7528\u662f\u4f7f\u5404\u79cd\u8f6f\u4ef6\u6784\u4ef6\u548c\u5e94\u7528\u8f6f\u4ef6\u80fd\u591f\u7528\u4e00\u79cd\u7edf\u4e00\u7684\u6807\u51c6\u65b9\u5f0f\u8fdb\u884c\u4ea4\u4e92\u3002COM\u4e0d\u662f\u4e00\u79cd\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\uff0c\u800c\u662f\u4e00\u79cd\u4e0e\u6e90\u4ee3\u7801\u65e0\u5173\u7684\u4e8c\u8fdb\u5236\u6807\u51c6\u3002", "\nActiveX\u662fMicrosoft\u63d0\u51fa\u7684\u4e00\u5957\u57fa\u4e8eCOM\u7684\u6784\u4ef6\u6280\u672f\u6807\u51c6\uff0c\u5b9e\u9645\u4e0a\u662f\u5bf9\u8c61\u5d4c\u5165\u4e0e\u70bc\u63a5\uff08OLE\uff09\u7684\u65b0\u7248\u672c\u3002\u57fa\u4e8e\u5206\u5e03\u5f0f\u73af\u5883\u4e0b\u7684COM\u88ab\u79f0\u4f5cDCOM(Distribute COM\uff0c\u5206\u5e03\u5f0f\u7ec4\u4ef6\u5bf9\u8c61\u6a21\u578b)\uff0c\u5b83\u5b9e\u73b0\u4e86COM\u5bf9\u8c61\u4e0e\u8fdc\u7a0b\u8ba1\u7b97\u673a\u4e0a\u7684\u53e6\u4e00\u4e2a\u5bf9\u8c61\u4e4b\u95f4\u76f4\u63a5\u8fdb\u884c\u4ea4\u4e92\u3002DCOM\u89c4\u8303\u5b9a\u4e49\u4e86\u5206\u6563\u5bf9\u8c61\u521b\u5efa\u548c\u5bf9\u8c61\u95f4\u901a\u4fe1\u7684\u673a\u5236\uff0cDCOM\u662fActiveX\u7684\u57fa\u7840\uff0c\u56e0\u4e3aActiveX\u4e3b\u8981\u662f\u9488\u5bf9Internet\u5e94\u7528\u5f00\u53d1\uff08\u76f8\u6bd4OLE\uff09\u7684\u6280\u672f\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u7528\u4e8e\u666e\u901a\u7684\u684c\u9762\u5e94\u7528\u7a0b\u5e8f\u3002", "199.\u5217\u51fa3\u4e2a\u5e38\u7528\u7f51\u7edc\u534f\u8bae\u4f7f\u7528\u7684\u7aef\u53e3\u3002", "\n\u7b54\uff1aHTTP\u534f\u8bae\u752880\u7aef\u53e3\uff0cFTP\u534f\u8bae\u752821\u7aef\u53e3\uff0cPOP3\u534f\u8bae\u7528110\u7aef\u53e3", "\u00a0", "199\u00a0 \u4ec0\u4e48\u662fODBC?", "\n\u7b54\uff1aODBC(Open Database Connectivity\uff0c\u5f00\u653e\u6570\u636e\u5e93\u4e92\u8fde)\u662f\u5fae\u8f6f\u516c\u53f8\u5f00\u653e\u670d\u52a1\u7ed3\u6784(WOSA\uff0cWindows Open Services Architecture)\u4e2d\u6709\u5173\u6570\u636e\u5e93\u7684\u4e00\u4e2a\u7ec4\u6210\u90e8\u5206\uff0c\u5b83\u5efa\u7acb\u4e86\u4e00\u7ec4\u89c4\u8303\uff0c\u5e76\u63d0\u4f9b\u4e86\u4e00\u7ec4\u5bf9\u6570\u636e\u5e93\u8bbf\u95ee\u7684\u6807\u51c6API\uff08\u5e94\u7528\u7a0b\u5e8f\u7f16\u7a0b\u63a5\u53e3\uff09\u3002ODBC\u7684\u6700\u5927\u4f18\u70b9\u662f\u80fd\u4ee5\u7edf\u4e00\u7684\u65b9\u5f0f(\u7528\u5b83\u63d0\u4f9b\u7684API\u8bbf\u95ee\u6570\u636e\u5e93)\u5904\u7406\u6240\u6709\u7684\u6570\u636e\u5e93\u3002", "200\u00a0 \u7ed3\u6784\u5316\u7f16\u7a0b\u548cgoto\u8bed\u53e5\u7684\u533a\u522b\u548c\u5173\u7cfb\uff1f", "\n\u7b54\uff1a\u7ed3\u6784\u5316\u7f16\u7a0b\u8bbe\u8ba1\u601d\u60f3\u91c7\u7528\u4e86\u6a21\u5757\u5206\u89e3\u4e0e\u529f\u80fd\u62bd\u8c61\u548c\u81ea\u9876\u5411\u4e0b\u3001\u5206\u800c\u6cbb\u4e4b\u7684\u65b9\u6cd5\uff0c\u4ece\u800c\u6709\u6548\u5730\u5c06\u4e00\u4e2a\u8f83\u590d\u6742\u7684\u7a0b\u5e8f\u7cfb\u7edf\u8bbe\u8ba1\u4efb\u52a1\u5206\u89e3\u6210\u8bb8\u591a\u6613\u4e8e\u63a7\u5236\u548c\u5904\u7406\u7684\u5b50\u7a0b\u5e8f\uff0c\u4fbf\u4e8e\u5f00\u53d1\u548c\u7ef4\u62a4\u3002goto\u8bed\u53e5\u53ef\u4ee5\u5b9e\u73b0\u65e0\u6761\u4ef6\u8df3\u8f6c\uff0c\u6539\u53d8\u7a0b\u5e8f\u6d41\u5411\uff0c\u7834\u574f\u7ed3\u6784\u5316\u7f16\u7a0b\u8bbe\u8ba1\u98ce\u683c\u3002\u4f46goto\u8bed\u53e5\u5728\u7ed3\u6784\u5316\u7f16\u7a0b\u4e2d\u5e76\u975e\u4e0d\u53ef\u4f7f\u7528\uff0c\u53ea\u662f\u8981\u53d7\u5230\u9650\u5236\u7684\u4f7f\u7528\u3002"], "title": "C++\u5f00\u53d1\u5de5\u7a0b\u5e08\u9762\u8bd5\u9898\u5e93 150~200\u9053"},
{"contents": ["301\uff0e \u4ee5\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1f", "cout << (true?1:\u201d1\u2033) << endl;", "\u7b54\uff1a\u4e09\u5143\u8868\u8fbe\u5f0f\u201c\uff1f:\u201d\u95ee\u53f7\u540e\u9762\u7684\u4e24\u4e2a\u64cd\u4f5c\u6570\u5fc5\u987b\u4e3a\u540c\u4e00\u7c7b\u578b\u3002", "\u00a0", "302\uff0e\u4ee5\u4e0b\u4ee3\u7801\u80fd\u591f\u7f16\u8bd1\u901a\u8fc7\u5417\uff0c\u4e3a\u4ec0\u4e48\uff1f", "unsigned int const size1 = 2;", "char str1[ size1 ];", "unsigned int temp = 0;", "cin >> temp;", "unsigned int const size2 = temp;", "char str2[ size2 ];", "\u7b54\uff1astr2\u5b9a\u4e49\u51fa\u9519\uff0csize2\u975e\u7f16\u8bd1\u5668\u671f\u95f4\u5e38\u91cf\uff0c\u800c\u6570\u7ec4\u5b9a\u4e49\u8981\u6c42\u957f\u5ea6\u5fc5\u987b\u4e3a\u7f16\u8bd1\u671f\u5e38\u91cf\u3002", "\u00a0", "303\uff0e\u4ee5\u4e0b\u53cd\u5411\u904d\u5386array\u6570\u7ec4\u7684\u65b9\u6cd5\u6709\u4ec0\u4e48\u9519\u8bef\uff1f", "vector array;", "array.push_back( 1 );", "array.push_back( 2 );", "array.push_back( 3 );", "for( vector::size_type i=array.size()-1; i>=0; \u2013i ) // \u53cd\u5411\u904d\u5386array\u6570\u7ec4", "{", "cout << array[i] << endl;", "}", "\u00a0", "\u7b54\uff1a\u9996\u5148\u6570\u7ec4\u5b9a\u4e49\u6709\u8bef\uff0c\u5e94\u52a0\u4e0a\u7c7b\u578b\u53c2\u6570\uff1avector<int> array\u3002\u5176\u6b21vector::size_type\u88ab\u5b9a\u4e49\u4e3aunsigned int\uff0c\u5373\u65e0\u7b26\u53f7\u6570\uff0c\u8fd9\u6837\u505a\u4e3a\u5faa\u73af\u53d8\u91cf\u7684i\u4e3a0\u65f6\u518d\u51cf1\u5c31\u4f1a\u53d8\u6210\u6700\u5927\u7684\u6574\u6570\uff0c\u5bfc\u81f4\u5faa\u73af\u5931\u53bb\u63a7\u5236\u3002", "\u00a0", "304. \u4ee5\u4e0b\u4ee3\u7801\u4e2d\u7684\u8f93\u51fa\u8bed\u53e5\u8f93\u51fa0\u5417\uff0c\u4e3a\u4ec0\u4e48\uff1f", "struct CLS", "{", "int m_i;", "CLS( int i ) : m_i(i) {}", "CLS()", "{", "CLS(0);", "}", "};", "CLS obj;", "cout << obj.m_i << endl;", "\u7b54\uff1a\u4e0d\u80fd\u3002\u5728\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u5185\u90e8\u518d\u8c03\u7528\u5e26\u53c2\u7684\u6784\u9020\u51fd\u6570\u5c5e\u7528\u6237\u884c\u4e3a\u800c\u975e\u7f16\u8bd1\u5668\u884c\u4e3a\uff0c\u4ea6\u5373\u4ec5\u6267\u884c\u51fd\u6570\u8c03\u7528\uff0c\u800c\u4e0d\u4f1a\u6267\u884c\u5176\u540e\u7684\u521d\u59cb\u5316\u8868\u8fbe\u5f0f\u3002\u53ea\u6709\u5728\u751f\u6210\u5bf9\u8c61\u65f6\uff0c\u521d\u59cb\u5316\u8868\u8fbe\u5f0f\u624d\u4f1a\u968f\u76f8\u5e94\u7684\u6784\u9020\u51fd\u6570\u4e00\u8d77\u8c03\u7528\u3002"], "title": "C++\u7b14\u8bd5\u9898\u5e93\u4e4b\u7f16\u7a0b\u3001\u95ee\u7b54\u9898 300~305\u9053"},
{"contents": ["101. \u7f16\u5199strcat\u51fd\u6570(6\u5206)", "\u5df2\u77e5strcat\u51fd\u6570\u7684\u539f\u578b\u662fchar *strcat (char *strDest, const char *strSrc);", "\u5176\u4e2dstrDest \u662f\u76ee\u7684\u5b57\u7b26\u4e32\uff0cstrSrc \u662f\u6e90\u5b57\u7b26\u4e32\u3002", "\uff081\uff09\u4e0d\u8c03\u7528C++/C \u7684\u5b57\u7b26\u4e32\u5e93\u51fd\u6570\uff0c\u8bf7\u7f16\u5199\u51fd\u6570 strcat", "\u7b54\uff1a", "VC\u6e90\u7801\uff1a", "char * __cdecl strcat (char * dst, const char * src)", "{", "char * cp = dst;", "while( *cp )", "cp++; /* find end of dst */", "while( *cp++ = *src++ ) ; /* Copy src to end of dst */", "return( dst ); /* return dst */", "}", "\uff082\uff09strcat\u80fd\u628astrSrc \u7684\u5185\u5bb9\u8fde\u63a5\u5230strDest\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u8981char * \u7c7b\u578b\u7684\u8fd4\u56de\u503c\uff1f", "\u7b54\uff1a\u65b9\u4fbf\u8d4b\u503c\u7ed9\u5176\u4ed6\u53d8\u91cf", "\u00a0", "102.MFC\u4e2dCString\u662f\u7c7b\u578b\u5b89\u5168\u7c7b\u4e48\uff1f", "\u7b54\uff1a\u4e0d\u662f\uff0c\u5176\u5b83\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u5230CString\u53ef\u4ee5\u4f7f\u7528CString\u7684\u6210\u5458\u51fd\u6570Format\u6765\u8f6c\u6362", "\u00a0", "103.C++\u4e2d\u4e3a\u4ec0\u4e48\u7528\u6a21\u677f\u7c7b\u3002", "\u7b54\uff1a(1)\u53ef\u7528\u6765\u521b\u5efa\u52a8\u6001\u589e\u957f\u548c\u51cf\u5c0f\u7684\u6570\u636e\u7ed3\u6784", "\uff082\uff09\u5b83\u662f\u7c7b\u578b\u65e0\u5173\u7684\uff0c\u56e0\u6b64\u5177\u6709\u5f88\u9ad8\u7684\u53ef\u590d\u7528\u6027\u3002", "\uff083\uff09\u5b83\u5728\u7f16\u8bd1\u65f6\u800c\u4e0d\u662f\u8fd0\u884c\u65f6\u68c0\u67e5\u6570\u636e\u7c7b\u578b\uff0c\u4fdd\u8bc1\u4e86\u7c7b\u578b\u5b89\u5168", "\uff084\uff09\u5b83\u662f\u5e73\u53f0\u65e0\u5173\u7684\uff0c\u53ef\u79fb\u690d\u6027", "\uff085\uff09\u53ef\u7528\u4e8e\u57fa\u672c\u6570\u636e\u7c7b\u578b", "\u00a0", "104.CSingleLock\u662f\u5e72\u4ec0\u4e48\u7684\u3002", "\u7b54\uff1a\u540c\u6b65\u591a\u4e2a\u7ebf\u7a0b\u5bf9\u4e00\u4e2a\u6570\u636e\u7c7b\u7684\u540c\u65f6\u8bbf\u95ee", "\u00a0", "105.NEWTEXTMETRIC \u662f\u4ec0\u4e48\u3002", "\u7b54\uff1a\u7269\u7406\u5b57\u4f53\u7ed3\u6784\uff0c\u7528\u6765\u8bbe\u7f6e\u5b57\u4f53\u7684\u9ad8\u5bbd\u5927\u5c0f", "\u00a0", "106.\u7a0b\u5e8f\u4ec0\u4e48\u65f6\u5019\u5e94\u8be5\u4f7f\u7528\u7ebf\u7a0b\uff0c\u4ec0\u4e48\u65f6\u5019\u5355\u7ebf\u7a0b\u6548\u7387\u9ad8\u3002", "\u7b54\uff1a1\uff0e\u8017\u65f6\u7684\u64cd\u4f5c\u4f7f\u7528\u7ebf\u7a0b\uff0c\u63d0\u9ad8\u5e94\u7528\u7a0b\u5e8f\u54cd\u5e94", "2\uff0e\u5e76\u884c\u64cd\u4f5c\u65f6\u4f7f\u7528\u7ebf\u7a0b\uff0c\u5982C/S\u67b6\u6784\u7684\u670d\u52a1\u5668\u7aef\u5e76\u53d1\u7ebf\u7a0b\u54cd\u5e94\u7528\u6237\u7684\u8bf7\u6c42\u3002", "3\uff0e\u591aCPU\u7cfb\u7edf\u4e2d\uff0c\u4f7f\u7528\u7ebf\u7a0b\u63d0\u9ad8CPU\u5229\u7528\u7387", "4\uff0e\u6539\u5584\u7a0b\u5e8f\u7ed3\u6784\u3002\u4e00\u4e2a\u65e2\u957f\u53c8\u590d\u6742\u7684\u8fdb\u7a0b\u53ef\u4ee5\u8003\u8651\u5206\u4e3a\u591a\u4e2a\u7ebf\u7a0b\uff0c\u6210\u4e3a\u51e0\u4e2a\u72ec\u7acb\u6216\u534a\u72ec", "\u7acb\u7684\u8fd0\u884c\u90e8\u5206\uff0c\u8fd9\u6837\u7684\u7a0b\u5e8f\u4f1a\u5229\u4e8e\u7406\u89e3\u548c\u4fee\u6539\u3002", "\u5176\u4ed6\u60c5\u51b5\u90fd\u4f7f\u7528\u5355\u7ebf\u7a0b\u3002", "\u00a0", "107.Windows\u662f\u5185\u6838\u7ea7\u7ebf\u7a0b\u4e48\u3002", "\u7b54\uff1a\u89c1\u4e0b\u4e00\u9898", "\u00a0", "108.Linux\u6709\u5185\u6838\u7ea7\u7ebf\u7a0b\u4e48\u3002", "\u7b54\uff1a\u7ebf\u7a0b\u901a\u5e38\u88ab\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u4ee3\u7801\u7684\u4e0d\u540c\u6267\u884c\u8def\u7ebf\u3002\u4ece\u5b9e\u73b0\u65b9\u5f0f\u4e0a\u5212\u5206\uff0c\u7ebf\u7a0b\u6709\u4e24", "\u79cd\u7c7b\u578b\uff1a\u201c\u7528\u6237\u7ea7\u7ebf\u7a0b\u201d\u548c\u201c\u5185\u6838\u7ea7\u7ebf\u7a0b\u201d\u3002 \u7528\u6237\u7ebf\u7a0b\u6307\u4e0d\u9700\u8981\u5185\u6838\u652f\u6301\u800c\u5728\u7528\u6237\u7a0b\u5e8f", "\u4e2d\u5b9e\u73b0\u7684\u7ebf\u7a0b\uff0c\u5176\u4e0d\u4f9d\u8d56\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u6838\u5fc3\uff0c\u5e94\u7528\u8fdb\u7a0b\u5229\u7528\u7ebf\u7a0b\u5e93\u63d0\u4f9b\u521b\u5efa\u3001\u540c\u6b65\u3001\u8c03\u5ea6", "\u548c\u7ba1\u7406\u7ebf\u7a0b\u7684\u51fd\u6570\u6765\u63a7\u5236\u7528\u6237\u7ebf\u7a0b\u3002\u8fd9\u79cd\u7ebf\u7a0b\u751a\u81f3\u5728\u8c61 DOS \u8fd9\u6837\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u4e5f\u53ef\u5b9e\u73b0", "\uff0c\u4f46\u7ebf\u7a0b\u7684\u8c03\u5ea6\u9700\u8981\u7528\u6237\u7a0b\u5e8f\u5b8c\u6210\uff0c\u8fd9\u6709\u4e9b\u7c7b\u4f3c Windows 3.x \u7684\u534f\u4f5c\u5f0f\u591a\u4efb\u52a1\u3002\u53e6\u5916\u4e00", "\u79cd\u5219\u9700\u8981\u5185\u6838\u7684\u53c2\u4e0e\uff0c\u7531\u5185\u6838\u5b8c\u6210\u7ebf\u7a0b\u7684\u8c03\u5ea6\u3002\u5176\u4f9d\u8d56\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u6838\u5fc3\uff0c\u7531\u5185\u6838\u7684\u5185\u90e8", "\u9700\u6c42\u8fdb\u884c\u521b\u5efa\u548c\u64a4\u9500\uff0c\u8fd9\u4e24\u79cd\u6a21\u578b\u5404\u6709\u5176\u597d\u5904\u548c\u7f3a\u70b9\u3002\u7528\u6237\u7ebf\u7a0b\u4e0d\u9700\u8981\u989d\u5916\u7684\u5185\u6838\u5f00\u652f", "\uff0c\u5e76\u4e14\u7528\u6237\u6001\u7ebf\u7a0b\u7684\u5b9e\u73b0\u65b9\u5f0f\u53ef\u4ee5\u88ab\u5b9a\u5236\u6216\u4fee\u6539\u4ee5\u9002\u5e94\u7279\u6b8a\u5e94\u7528\u7684\u8981\u6c42\uff0c\u4f46\u662f\u5f53\u4e00\u4e2a\u7ebf", "\u7a0b\u56e0 I/O \u800c\u5904\u4e8e\u7b49\u5f85\u72b6\u6001\u65f6\uff0c\u6574\u4e2a\u8fdb\u7a0b\u5c31\u4f1a\u88ab\u8c03\u5ea6\u7a0b\u5e8f\u5207\u6362\u4e3a\u7b49\u5f85\u72b6\u6001\uff0c\u5176\u4ed6\u7ebf\u7a0b\u5f97\u4e0d", "\u5230\u8fd0\u884c\u7684\u673a\u4f1a\uff1b\u800c\u5185\u6838\u7ebf\u7a0b\u5219\u6ca1\u6709\u5404\u4e2a\u9650\u5236\uff0c\u6709\u5229\u4e8e\u53d1\u6325\u591a\u5904\u7406\u5668\u7684\u5e76\u53d1\u4f18\u52bf\uff0c\u4f46\u5374\u5360", "\u7528\u4e86\u66f4\u591a\u7684\u7cfb\u7edf\u5f00\u652f\u3002", "Windows NT\u548cOS/2\u652f\u6301\u5185\u6838\u7ebf\u7a0b\u3002Linux \u652f\u6301\u5185\u6838\u7ea7\u7684\u591a\u7ebf\u7a0b", "\u00a0", "109.C++\u4e2d\u4ec0\u4e48\u6570\u636e\u5206\u914d\u5728\u6808\u6216\u5806\u4e2d\uff0cNew\u5206\u914d\u6570\u636e\u662f\u5728\u8fd1\u5806\u8fd8\u662f\u8fdc\u5806\u4e2d\uff1f", "\u7b54\uff1a\u6808: \u5b58\u653e\u5c40\u90e8\u53d8\u91cf\uff0c\u51fd\u6570\u8c03\u7528\u53c2\u6570,\u51fd\u6570\u8fd4\u56de\u503c\uff0c\u51fd\u6570\u8fd4\u56de\u5730\u5740\u3002\u7531\u7cfb\u7edf\u7ba1\u7406", "\u5806: \u7a0b\u5e8f\u8fd0\u884c\u65f6\u52a8\u6001\u7533\u8bf7\uff0cnew \u548c\u3000malloc\u7533\u8bf7\u7684\u5185\u5b58\u5c31\u5728\u5806\u4e0a", "\u00a0", "110.\u4f7f\u7528\u7ebf\u7a0b\u662f\u5982\u4f55\u9632\u6b62\u51fa\u73b0\u5927\u7684\u6ce2\u5cf0\u3002", "\u7b54\uff1a\u610f\u601d\u662f\u5982\u4f55\u9632\u6b62\u540c\u65f6\u4ea7\u751f\u5927\u91cf\u7684\u7ebf\u7a0b\uff0c\u65b9\u6cd5\u662f\u4f7f\u7528\u7ebf\u7a0b\u6c60\uff0c\u7ebf\u7a0b\u6c60\u5177\u6709\u53ef\u4ee5\u540c\u65f6\u63d0", "\u9ad8\u8c03\u5ea6\u6548\u7387\u548c\u9650\u5236\u8d44\u6e90\u4f7f\u7528\u7684\u597d\u5904\uff0c\u7ebf\u7a0b\u6c60\u4e2d\u7684\u7ebf\u7a0b\u8fbe\u5230\u6700\u5927\u6570\u65f6\uff0c\u5176\u4ed6\u7ebf\u7a0b\u5c31\u4f1a\u6392\u961f", "\u7b49\u5019\u3002", "\u00a0", "111.\u4e00\u822c\u6570\u636e\u5e93\u82e5\u51fa\u73b0\u65e5\u5fd7\u6ee1\u4e86\uff0c\u4f1a\u51fa\u73b0\u4ec0\u4e48\u60c5\u51b5\uff0c\u662f\u5426\u8fd8\u80fd\u4f7f\u7528\uff1f", "\u7b54\uff1a\u53ea\u80fd\u6267\u884c\u67e5\u8be2\u7b49\u8bfb\u64cd\u4f5c\uff0c\u4e0d\u80fd\u6267\u884c\u66f4\u6539\uff0c\u5907\u4efd\u7b49\u5199\u64cd\u4f5c\uff0c\u539f\u56e0\u662f\u4efb\u4f55\u5199\u64cd\u4f5c\u90fd\u8981\u8bb0", "\u5f55\u65e5\u5fd7\u3002\u4e5f\u5c31\u662f\u8bf4\u57fa\u672c\u4e0a\u5904\u4e8e\u4e0d\u80fd\u4f7f\u7528\u7684\u72b6\u6001\u3002", "\u00a0", "112 SQL Server\u662f\u5426\u652f\u6301\u884c\u7ea7\u9501\uff0c\u6709\u4ec0\u4e48\u597d\u5904\uff1f", "\u7b54\uff1a\u652f\u6301\uff0c\u8bbe\u7acb\u5c01\u9501\u673a\u5236\u4e3b\u8981\u662f\u4e3a\u4e86\u5bf9\u5e76\u53d1\u64cd\u4f5c\u8fdb\u884c\u63a7\u5236\uff0c\u5bf9\u5e72\u6270\u8fdb\u884c\u5c01\u9501\uff0c\u4fdd\u8bc1\u6570\u636e", "\u7684\u4e00\u81f4\u6027\u548c\u51c6\u786e\u6027\uff0c\u884c\u7ea7\u5c01\u9501\u786e\u4fdd\u5728\u7528\u6237\u53d6\u5f97\u88ab\u66f4\u65b0\u7684\u884c\u5230\u8be5\u884c\u8fdb\u884c\u66f4\u65b0\u8fd9\u6bb5\u65f6\u95f4\u5185\u4e0d", "\u88ab\u5176\u5b83\u7528\u6237\u6240\u4fee\u6539\u3002\u56e0\u800c\u884c\u7ea7\u9501\u5373\u53ef\u4fdd\u8bc1\u6570\u636e\u7684\u4e00\u81f4\u6027\u53c8\u80fd\u63d0\u9ad8\u6570\u636e\u64cd\u4f5c\u7684\u8ff8\u53d1\u6027\u3002", "113 \u5173\u4e8e\u5185\u5b58\u5bf9\u9f50\u7684\u95ee\u9898\u4ee5\u53casizof()\u7684\u8f93\u51fa", "\u7b54\uff1a\u7f16\u8bd1\u5668\u81ea\u52a8\u5bf9\u9f50\u7684\u539f\u56e0\uff1a\u4e3a\u4e86\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6027\u80fd\uff0c\u6570\u636e\u7ed3\u6784\uff08\u5c24\u5176\u662f\u6808\uff09\u5e94\u8be5\u5c3d\u53ef\u80fd", "\u5730\u5728\u81ea\u7136\u8fb9\u754c\u4e0a\u5bf9\u9f50\u3002\u539f\u56e0\u5728\u4e8e\uff0c\u4e3a\u4e86\u8bbf\u95ee\u672a\u5bf9\u9f50\u7684\u5185\u5b58\uff0c\u5904\u7406\u5668\u9700\u8981\u4f5c\u4e24\u6b21\u5185\u5b58\u8bbf\u95ee", "\uff1b\u7136\u800c\uff0c\u5bf9\u9f50\u7684\u5185\u5b58\u8bbf\u95ee\u4ec5\u9700\u8981\u4e00\u6b21\u8bbf\u95ee\u3002", "\u00a0", "114. int i=10, j=10, k=3; k*=i+j; k\u6700\u540e\u7684\u503c\u662f\uff1f", "\u7b54\uff1a60\uff0c\u6b64\u9898\u8003\u5bdf\u4f18\u5148\u7ea7\uff0c\u5b9e\u9645\u5199\u6210\uff1a k*=(i+j);\uff0c\u8d4b\u503c\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u6700\u4f4e", "\u00a0", "115.\u5bf9\u6570\u636e\u5e93\u7684\u4e00\u5f20\u8868\u8fdb\u884c\u64cd\u4f5c,\u540c\u65f6\u8981\u5bf9\u53e6\u4e00\u5f20\u8868\u8fdb\u884c\u64cd\u4f5c,\u5982\u4f55\u5b9e\u73b0?", "\u7b54\uff1a\u5c06\u64cd\u4f5c\u591a\u4e2a\u8868\u7684\u64cd\u4f5c\u653e\u5165\u5230\u4e8b\u52a1\u4e2d\u8fdb\u884c\u5904\u7406", "\u00a0", "116.TCP/IP \u5efa\u7acb\u8fde\u63a5\u7684\u8fc7\u7a0b?(3-way shake)", "\u7b54\uff1a\u5728TCP/IP\u534f\u8bae\u4e2d\uff0cTCP\u534f\u8bae\u63d0\u4f9b\u53ef\u9760\u7684\u8fde\u63a5\u670d\u52a1\uff0c\u91c7\u7528\u4e09\u6b21\u63e1\u624b\u5efa\u7acb\u4e00\u4e2a\u8fde\u63a5\u3002", "\u7b2c\u4e00\u6b21\u63e1\u624b\uff1a\u5efa\u7acb\u8fde\u63a5\u65f6\uff0c\u5ba2\u6237\u7aef\u53d1\u9001syn\u5305(syn=j)\u5230\u670d\u52a1\u5668\uff0c\u5e76\u8fdb\u5165SYN_SEND\u72b6", "\u6001\uff0c\u7b49\u5f85\u670d\u52a1\u5668\u786e\u8ba4\uff1b", "\u7b2c\u4e8c\u6b21\u63e1\u624b\uff1a\u670d\u52a1\u5668\u6536\u5230syn\u5305\uff0c\u5fc5\u987b\u786e\u8ba4\u5ba2\u6237\u7684SYN\uff08ack=j+1\uff09\uff0c\u540c\u65f6\u81ea\u5df1\u4e5f\u53d1\u9001\u4e00\u4e2a", "SYN\u5305\uff08syn=k\uff09\uff0c\u5373SYN+ACK\u5305\uff0c\u6b64\u65f6\u670d\u52a1\u5668\u8fdb\u5165SYN_RECV\u72b6\u6001\uff1b", "\u7b2c\u4e09\u6b21\u63e1\u624b\uff1a\u5ba2\u6237\u7aef\u6536\u5230\u670d\u52a1\u5668\u7684SYN\uff0bACK\u5305\uff0c\u5411\u670d\u52a1\u5668\u53d1\u9001\u786e\u8ba4\u5305ACK(ack=k+1)", "\uff0c\u6b64\u5305\u53d1\u9001\u5b8c\u6bd5\uff0c\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u8fdb\u5165ESTABLISHED\u72b6\u6001\uff0c\u5b8c\u6210\u4e09\u6b21\u63e1\u624b\u3002", "\u00a0", "117.ICMP\u662f\u4ec0\u4e48\u534f\u8bae,\u5904\u4e8e\u54ea\u4e00\u5c42?", "\u7b54\uff1aInternet\u63a7\u5236\u62a5\u6587\u534f\u8bae\uff0c\u5904\u4e8e\u7f51\u7edc\u5c42\uff08IP\u5c42\uff09", "\u00a0", "118.\u89e6\u53d1\u5668\u600e\u4e48\u5de5\u4f5c\u7684?", "\u7b54\uff1a\u89e6\u53d1\u5668\u4e3b\u8981\u662f\u901a\u8fc7\u4e8b\u4ef6\u8fdb\u884c\u89e6\u53d1\u800c\u88ab\u6267\u884c\u7684\uff0c\u5f53\u5bf9\u67d0\u4e00\u8868\u8fdb\u884c\u8bf8\u5982UPDATE\u3001 INSERT", "\u3001 DELETE \u8fd9\u4e9b\u64cd\u4f5c\u65f6\uff0c\u6570\u636e\u5e93\u5c31\u4f1a\u81ea\u52a8\u6267\u884c\u89e6\u53d1\u5668\u6240\u5b9a\u4e49\u7684SQL \u8bed\u53e5\uff0c\u4ece\u800c\u786e\u4fdd\u5bf9\u6570", "\u636e\u7684\u5904\u7406\u5fc5\u987b\u7b26\u5408\u7531\u8fd9\u4e9bSQL \u8bed\u53e5\u6240\u5b9a\u4e49\u7684\u89c4\u5219\u3002", "\u00a0", "119.winsock\u5efa\u7acb\u8fde\u63a5\u7684\u4e3b\u8981\u5b9e\u73b0\u6b65\u9aa4?", "\u7b54\uff1a\u670d\u52a1\u5668\u7aef\uff1asocker()\u5efa\u7acb\u5957\u63a5\u5b57\uff0c\u7ed1\u5b9a\uff08bind\uff09\u5e76\u76d1\u542c\uff08listen\uff09\uff0c\u7528accept\uff08\uff09", "\u7b49\u5f85\u5ba2\u6237\u7aef\u8fde\u63a5\u3002", "\u5ba2\u6237\u7aef\uff1asocker()\u5efa\u7acb\u5957\u63a5\u5b57\uff0c\u8fde\u63a5\uff08connect\uff09\u670d\u52a1\u5668\uff0c\u8fde\u63a5\u4e0a\u540e\u4f7f\u7528send()\u548crecv\uff08", "\uff09\uff0c\u5728\u5957\u63a5\u5b57\u4e0a\u5199\u8bfb\u6570\u636e\uff0c\u76f4\u81f3\u6570\u636e\u4ea4\u6362\u5b8c\u6bd5\uff0cclosesocket()\u5173\u95ed\u5957\u63a5\u5b57\u3002", "\u670d\u52a1\u5668\u7aef\uff1aaccept\uff08\uff09\u53d1\u73b0\u6709\u5ba2\u6237\u7aef\u8fde\u63a5\uff0c\u5efa\u7acb\u4e00\u4e2a\u65b0\u7684\u5957\u63a5\u5b57\uff0c\u81ea\u8eab\u91cd\u65b0\u5f00\u59cb\u7b49\u5f85\u8fde", "\u63a5\u3002\u8be5\u65b0\u4ea7\u751f\u7684\u5957\u63a5\u5b57\u4f7f\u7528send()\u548crecv\uff08\uff09\u5199\u8bfb\u6570\u636e\uff0c\u76f4\u81f3\u6570\u636e\u4ea4\u6362\u5b8c\u6bd5\uff0cclosesock", "et()\u5173\u95ed\u5957\u63a5\u5b57\u3002", "\u00a0", "120.\u52a8\u6001\u8fde\u63a5\u5e93\u7684\u4e24\u79cd\u65b9\u5f0f?", "\u7b54\uff1a\u8c03\u7528\u4e00\u4e2aDLL\u4e2d\u7684\u51fd\u6570\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a", "1\uff0e\u8f7d\u5165\u65f6\u52a8\u6001\u94fe\u63a5\uff08load-time dynamic linking\uff09\uff0c\u6a21\u5757\u975e\u5e38\u660e\u786e\u8c03\u7528\u67d0\u4e2a\u5bfc\u51fa\u51fd\u6570", "\uff0c\u4f7f\u5f97\u4ed6\u4eec\u5c31\u50cf\u672c\u5730\u51fd\u6570\u4e00\u6837\u3002\u8fd9\u9700\u8981\u94fe\u63a5\u65f6\u94fe\u63a5\u90a3\u4e9b\u51fd\u6570\u6240\u5728DLL\u7684\u5bfc\u5165\u5e93\uff0c\u5bfc\u5165\u5e93\u5411", "\u7cfb\u7edf\u63d0\u4f9b\u4e86\u8f7d\u5165DLL\u65f6\u6240\u9700\u7684\u4fe1\u606f\u53caDLL\u51fd\u6570\u5b9a\u4f4d\u3002", "2\uff0e\u8fd0\u884c\u65f6\u52a8\u6001\u94fe\u63a5\uff08run-time dynamic linking\uff09\uff0c\u8fd0\u884c\u65f6\u53ef\u4ee5\u901a\u8fc7LoadLibrary\u6216Loa", "dLibraryEx\u51fd\u6570\u8f7d\u5165DLL\u3002DLL\u8f7d\u5165\u540e\uff0c\u6a21\u5757\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528GetProcAddress\u83b7\u53d6DLL\u51fd\u6570\u7684", "\u51fa\u53e3\u5730\u5740\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7\u8fd4\u56de\u7684\u51fd\u6570\u6307\u9488\u8c03\u7528DLL\u51fd\u6570\u4e86\u3002\u5982\u6b64\u5373\u53ef\u907f\u514d\u5bfc\u5165\u5e93\u6587\u4ef6\u4e86", "\u3002", "\u00a0", "121.IP\u7ec4\u64ad\u6709\u90a3\u4e9b\u597d\u5904?", "\u7b54\uff1aInternet\u4e0a\u4ea7\u751f\u7684\u8bb8\u591a\u65b0\u7684\u5e94\u7528\uff0c\u7279\u522b\u662f\u9ad8\u5e26\u5bbd\u7684\u591a\u5a92\u4f53\u5e94\u7528\uff0c\u5e26\u6765\u4e86\u5e26\u5bbd\u7684\u6025\u5267", "\u6d88\u8017\u548c\u7f51\u7edc\u62e5\u6324\u95ee\u9898\u3002\u7ec4\u64ad\u662f\u4e00\u79cd\u5141\u8bb8\u4e00\u4e2a\u6216\u591a\u4e2a\u53d1\u9001\u8005\uff08\u7ec4\u64ad\u6e90\uff09\u53d1\u9001\u5355\u4e00\u7684\u6570\u636e\u5305", "\u5230\u591a\u4e2a\u63a5\u6536\u8005\uff08\u4e00\u6b21\u7684\uff0c\u540c\u65f6\u7684\uff09\u7684\u7f51\u7edc\u6280\u672f\u3002\u7ec4\u64ad\u53ef\u4ee5\u5927\u5927\u7684\u8282\u7701\u7f51\u7edc\u5e26\u5bbd\uff0c\u56e0\u4e3a\u65e0", "\u8bba\u6709\u591a\u5c11\u4e2a\u76ee\u6807\u5730\u5740\uff0c\u5728\u6574\u4e2a\u7f51\u7edc\u7684\u4efb\u4f55\u4e00\u6761\u94fe\u8def\u4e0a\u53ea\u4f20\u9001\u5355\u4e00\u7684\u6570\u636e\u5305\u3002\u6240\u4ee5\u8bf4\u7ec4\u64ad", "\u6280\u672f\u7684\u6838\u5fc3\u5c31\u662f\u9488\u5bf9\u5982\u4f55\u8282\u7ea6\u7f51\u7edc\u8d44\u6e90\u7684\u524d\u63d0\u4e0b\u4fdd\u8bc1\u670d\u52a1\u8d28\u91cf\u3002", "\u00a0", "122. \u4ee5\u4e0b\u4ee3\u7801\u4e2d\u7684\u4e24\u4e2asizeof\u7528\u6cd5\u6709\u95ee\u9898\u5417\uff1f[C\u6613]", "void UpperCase( char str[] ) // \u5c06 str \u4e2d\u7684\u5c0f\u5199\u5b57\u6bcd\u8f6c\u6362\u6210\u5927\u5199\u5b57\u6bcd", "{", "for( size_t i=0; i<sizeof(str)/sizeof(str[0]); ++i )", "if( \u2018a\u2019<=str[i] && str[i]<=\u2019z\u2019 )", "str[i] -= (\u2018a\u2019-\u2019A\u2019 );", "}", "char str[] = \u201caBcDe\u201d;", "cout << \u201cstr\u5b57\u7b26\u957f\u5ea6\u4e3a: \u201d << sizeof(str)/sizeof(str[0]) << endl;", "UpperCase( str );", "cout << str << endl;", "\u00a0", "\u7b54\uff1a\u51fd\u6570\u5185\u7684sizeof\u6709\u95ee\u9898\u3002\u6839\u636e\u8bed\u6cd5\uff0csizeof\u5982\u7528\u4e8e\u6570\u7ec4\uff0c\u53ea\u80fd\u6d4b\u51fa\u9759\u6001\u6570\u7ec4\u7684\u5927\u5c0f\uff0c\u65e0\u6cd5\u68c0\u6d4b\u52a8\u6001\u5206\u914d\u7684\u6216\u5916\u90e8\u6570\u7ec4\u5927\u5c0f\u3002\u51fd\u6570\u5916\u7684str\u662f\u4e00\u4e2a\u9759\u6001\u5b9a\u4e49\u7684\u6570\u7ec4\uff0c\u56e0\u6b64\u5176\u5927\u5c0f\u4e3a", "\u00a0", "123\uff0c\u51fd\u6570\u5185\u7684str\u5b9e\u9645\u53ea\u662f\u4e00\u4e2a\u6307\u5411\u5b57\u7b26\u4e32\u7684\u6307\u9488\uff0c\u6ca1\u6709\u4efb\u4f55\u989d\u5916\u7684\u4e0e\u6570\u7ec4\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u56e0\u6b64sizeof\u4f5c\u7528\u4e8e\u4e0a\u53ea\u5c06\u5176\u5f53\u6307\u9488\u770b\uff0c\u4e00\u4e2a\u6307\u9488\u4e3a4\u4e2a\u5b57\u8282\uff0c\u56e0\u6b64\u8fd4\u56de4\u3002", "\u00a0", "\u4e00\u4e2a32\u4f4d\u7684\u673a\u5668,\u8be5\u673a\u5668\u7684\u6307\u9488\u662f\u591a\u5c11\u4f4d", "\u6307\u9488\u662f\u591a\u5c11\u4f4d\u53ea\u8981\u770b\u5730\u5740\u603b\u7ebf\u7684\u4f4d\u6570\u5c31\u884c\u4e86\u300280386\u4ee5\u540e\u7684\u673a\u5b50\u90fd\u662f32\u7684\u6570\u636e\u603b\u7ebf\u3002\u6240\u4ee5\u6307\u9488\u7684\u4f4d\u6570\u5c31\u662f4\u4e2a\u5b57\u8282\u4e86\u3002", "\u00a0", "124.", "main()", "{", "int a[5]={1,2,3,4,5};", "int *ptr=(int *)(&a+1);", "\u00a0", "printf(\u201c%d,%d\u201d,*(a+1),*(ptr-1));", "}", "\u8f93\u51fa\uff1a2,5", "*(a+1\uff09\u5c31\u662fa[1]\uff0c*(ptr-1)\u5c31\u662fa[4],\u6267\u884c\u7ed3\u679c\u662f2\uff0c5", "&a+1\u4e0d\u662f\u9996\u5730\u5740+1\uff0c\u7cfb\u7edf\u4f1a\u8ba4\u4e3a\u52a0\u4e00\u4e2aa\u6570\u7ec4\u7684\u504f\u79fb\uff0c\u662f\u504f\u79fb\u4e86\u4e00\u4e2a\u6570\u7ec4\u7684\u5927\u5c0f\uff08\u672c\u4f8b\u662f5\u4e2aint\uff09", "int *ptr=(int *)(&a+1);", "\u5219ptr\u5b9e\u9645\u662f&(a[5]),\u4e5f\u5c31\u662fa+5", "\u539f\u56e0\u5982\u4e0b\uff1a", "&a\u662f\u6570\u7ec4\u6307\u9488\uff0c\u5176\u7c7b\u578b\u4e3a int (*)[5];", "\u800c\u6307\u9488\u52a01\u8981\u6839\u636e\u6307\u9488\u7c7b\u578b\u52a0\u4e0a\u4e00\u5b9a\u7684\u503c\uff0c", "\u4e0d\u540c\u7c7b\u578b\u7684\u6307\u9488+1\u4e4b\u540e\u589e\u52a0\u7684\u5927\u5c0f\u4e0d\u540c", "a\u662f\u957f\u5ea6\u4e3a5\u7684int\u6570\u7ec4\u6307\u9488\uff0c\u6240\u4ee5\u8981\u52a0 5*sizeof(int)", "\u6240\u4ee5ptr\u5b9e\u9645\u662fa[5]", "\u4f46\u662fprt\u4e0e(&a+1)\u7c7b\u578b\u662f\u4e0d\u4e00\u6837\u7684(\u8fd9\u70b9\u5f88\u91cd\u8981)", "\u6240\u4ee5prt-1\u53ea\u4f1a\u51cf\u53bbsizeof(int*)", "a,&a\u7684\u5730\u5740\u662f\u4e00\u6837\u7684\uff0c\u4f46\u610f\u601d\u4e0d\u4e00\u6837\uff0ca\u662f\u6570\u7ec4\u9996\u5730\u5740\uff0c\u4e5f\u5c31\u662fa[0]\u7684\u5730\u5740\uff0c&a\u662f\u5bf9\u8c61\uff08\u6570\u7ec4\uff09\u9996\u5730\u5740\uff0ca+1\u662f\u6570\u7ec4\u4e0b\u4e00\u5143\u7d20\u7684\u5730\u5740\uff0c\u5373a[1],&a+1\u662f\u4e0b\u4e00\u4e2a\u5bf9\u8c61\u7684\u5730\u5740\uff0c\u5373a[5].", "\u00a0", "\u00a0", "125.\u8bf7\u95ee\u4ee5\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1a", "int\u00a0 main()", "{", "char a;", "char *str=&a;", "strcpy(str,\u201dhello\u201d);", "printf(str);", "return 0;", "}", "\u6ca1\u6709\u4e3astr\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff0c\u5c06\u4f1a\u53d1\u751f\u5f02\u5e38", "\u95ee\u9898\u51fa\u5728\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u590d\u5236\u8fdb\u4e00\u4e2a\u5b57\u7b26\u53d8\u91cf\u6307\u9488\u6240\u6307\u5730\u5740\u3002\u867d\u7136\u53ef\u4ee5\u6b63\u786e\u8f93\u51fa\u7ed3\u679c\uff0c\u4f46\u56e0\u4e3a\u8d8a\u754c\u8fdb\u884c\u5185\u5728\u8bfb\u5199\u800c\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\u3002", "\u00a0", "char* s=\u201dAAA\u201d;", "printf(\u201c%s\u201d,s);", "s[0]=\u2019B\u2019;", "printf(\u201c%s\u201d,s);", "\u6709\u4ec0\u4e48\u9519\uff1f", "\u201cAAA\u201d\u662f\u5b57\u7b26\u4e32\u5e38\u91cf\u3002s\u662f\u6307\u9488\uff0c\u6307\u5411\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5e38\u91cf\uff0c\u6240\u4ee5\u58f0\u660es\u7684\u65f6\u5019\u5c31\u6709\u95ee\u9898\u3002", "cosnt char* s=\u201dAAA\u201d;", "\u7136\u540e\u53c8\u56e0\u4e3a\u662f\u5e38\u91cf\uff0c\u6240\u4ee5\u5bf9\u662fs[0]\u7684\u8d4b\u503c\u64cd\u4f5c\u662f\u4e0d\u5408\u6cd5\u7684\u3002", "\u00a0", "126\u3001\u5173\u952e\u5b57volatile\u6709\u4ec0\u4e48\u542b\u610f\uff1f\u5e76\u4e3e\u51fa\u4e09\u4e2a\u4e0d\u540c\u7684\u4f8b\u5b50\uff1f", "\u63d0\u793a\u7f16\u8bd1\u5668\u5bf9\u8c61\u7684\u503c\u53ef\u80fd\u5728\u7f16\u8bd1\u5668\u672a\u76d1\u6d4b\u5230\u7684\u60c5\u51b5\u4e0b\u6539\u53d8\u3002", "\u00a0", "127\u3001\u5c06\u6811\u5e8f\u5217\u5316 \u8f6c\u5b58\u5728\u6570\u7ec4\u6216 \u94fe\u8868\u4e2d", "\u00a0", "128.\u4e0b\u9762\u54ea\u4e2a\u5b9e\u4f53\u4e0d\u662fSIP\u534f\u8bae\u5b9a\u4e49\u7684\uff08A\uff09\u3002", "A \uff09MGC\u00a0\u00a0\u00a0 B\uff09UA\u00a0\u00a0\u00a0\u00a0 C\uff09proxy\u00a0\u00a0\u00a0\u00a0 D\uff09Redirector", "UA = User Agent \u7528\u6237\u4ee3\u7406,\u6307\u5ba2\u6237\u7aef\u7684\u534f\u8bae\u6808", "PROXY = SIP Proxy ,\u6307SIP\u670d\u52a1\u5668", "Redirector = \u91cd\u5b9a\u5411\u6a21\u5757\u3002\u4e00\u822c\u7528\u4e8e\u8de8\u670d\u52a1\u5668\u901a\u8baf", "129\uff0eVOIP\u4e2d\u672c\u7aef\u4e0e\u5bf9\u7aef\u547c\u53eb\u63a5\u901a\u540e\uff0c\u5c06\u901a\u8bdd\u8f6c\u63a5\u5230\u7b2c\u4e09\u65b9\u79f0\u4e4b\u4e3a\uff08C\uff09\u3002", "A\uff09\u547c\u53eb\u8f6c\u63a5\u00a0\u00a0 B\uff09\u547c\u53eb\u524d\u8f6c\u00a0\u00a0 C\uff09\u547c\u53eb\u8f6c\u79fb\u00a0\u00a0 D\uff09\u4e09\u65b9\u901a\u8bdd", "\u8ddf\u666e\u901a\u7535\u8bdd\u76f8\u540c\uff0cA\uff0cB\u90fd\u662f\u6ca1\u6709\u63a5\u901a\u524d\u5c31\u628a\u547c\u53eb\u8f6c\u63a5\u3002D\u662f\u6307\u4e09\u65b9\u540c\u65f6\u5728\u901a\u8bdd\u3002", "130\uff0eVOIP\u7684\u4e3b\u8981\u4f18\u70b9\u662f\uff08D\uff09", "A\uff09\u4ef7\u683c\u4fbf\u5b9c\u5e76\u4e14\u80fd\u4e3a\u5ba2\u6237\u63d0\u4f9b\u66f4\u597d\u7684\u589e\u503c\u670d\u52a1\u3002", "B\uff09\u8bed\u97f3\u8d28\u91cf\u6bd4\u4f20\u7edf\u7684PSTN\u7535\u8bdd\u597d\u3002", "C\uff09\u901a\u8bdd\u7684\u5b89\u5168\u6027\u548c\u53ef\u9760\u6027\u6709\u66f4\u9ad8\u7684\u4fdd\u969c\u3002", "D\uff09\u4e0d\u9700\u8981\u670d\u52a1\u63d0\u4f9b\u5546\u5c31\u53ef\u4ee5\u4f7f\u7528\u3002", "\u97f3\u8d28\uff0c\u53ef\u9760\u6027\u662f\u4f20\u7edf\u7535\u8bdd\u597d\u3002\u8fd9\u9898\u7684\u95ee\u9898\u5728\u4e8e\uff0c\u589e\u503c\u670d\u52a1\u662f\u6307\u4ec0\u4e48\uff1f\u5982\u662fSP\u5219VOIP\u4e0d\u652f\u6301\u3002\u8fd8\u662f\u670d\u52a1\u5668\u63d0\u4f9b\u5546\u662f\u6307\u4ec0\u4e48\uff1fVOIP\u9700\u8981\u670d\u52a1\u5668\u3002", "131\uff0e\u4e0b\u9762\u54ea\u4e2a\u6280\u672f\u4e0d\u5c5e\u4e8e\u8bed\u97f3\u5904\u7406\u6280\u672f\uff08D\uff09", "A\uff09\u9759\u97f3\u68c0\u6d4b", "B\uff09\u5206\u7ec4\u4e22\u5931\u8865\u507f", "C\uff09\u540c\u58f0\u6d88\u9664", "D\uff09\u7f51\u8def\u7a7f\u8d8a", "D\u662f\u7f51\u7edc\u4f20\u8f93\u7684\u95ee\u9898\uff0c\u4e3b\u8981\u662f\u7a7f\u900fNAT\u7f51\u5173\u3002\u7279\u522b\u662f\u6bd4\u8f83\u590d\u6742\u7684\u7f51\u7edc\u3002", "132\uff0eSIP\u534f\u8bae\u662f\u4f7f\u7528\u4e0b\u9762\u54ea\u79cd\u65b9\u5f0f\u7f16\u89e3\u7801\u7684\uff08\uff09", "A\uff09ASN.1\u00a0\u00a0\u00a0\u00a0 B\uff09BER\u00a0\u00a0\u00a0\u00a0\u00a0 C\uff09ABNF\u00a0\u00a0\u00a0 D\uff09PER", "\u00a0", "\u7f51\u7edc\u5e94\u7528", "133\uff0e\u5728\u4e0d\u540c\u7f51\u7edc\u4e2dMTU\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u7531\u4e8eMTU\u7684\u53d8\u5316\uff0c\u4f1a\u5bfc\u81f4\u90a3\u4e9b\u503c\u4e5f\u76f8\u5e94\u53d1\u751f\u53d8\u5316\uff08A\uff09", "A\uff09IP\u603b\u957f\u5ea6\u5b57\u6bb5", "B\uff09TCP MSS\u5b57\u6bb5", "C\uff09UDP\u957f\u5ea6\u5b57\u6bb5", "D\uff09TCP\u957f\u5ea6\u5b57\u6bb5", "\u5f85\u67e5,MTU\u53d8\u5316\u4f1a\u8ba9IP\u5206\u7247\u6216\u91cd\u7ec4\u3002\u56e0\u6b64\u53d8\u5316\u5c31\u662fIP", "134\uff0e\u4e0b\u5217\u5173\u4e8eTCP\u548cUDP\u7684\u6b63\u786e\u7684\u8bf4\u6cd5\u662f\uff08C\uff09", "A\uff09TCP\u5b9e\u65f6\u6027\u6bd4UDP\u597d", "B\uff09TCP\u6bd4UDP\u6548\u7387\u9ad8", "C\uff09TCP\u9996\u90e8\u6bd4UDP\u7684\u9996\u90e8\u957f", "D\uff09TCP\u5b89\u5168\u6027\u6bd4UDP\u9ad8", "\u5b9e\u65f6\u6027\uff0c\u6548\u7387\u3002\u5b89\u5168\u6027\uff0cTCP\u4e0d\u89c1\u5f97\u6bd4UDP\u9ad8", "135\uff0e\u4e00\u4e2a\u5957\u63a5\u53e3\u5e94\u8be5\u5339\u914d\uff08D\uff09", "A\uff09\u6e90\u76ee\u6807IP", "B\uff09\u6e90\u76ee\u6807IP\u7aef\u53e3", "C\uff09\u76ee\u6807IP\u548c\u76ee\u6807\u7aef\u53e3", "D\uff09\u672c\u5730IP\u548c\u672c\u5730\u7aef\u53e3", "SOCKET\u76f8\u5f53\u4e00IP\u8fde\u63a5\u4e0a\u7528\u7aef\u53e3\u6807\u8bc6\u961f\u5217", "136\uff0eTCP\u670d\u52a1\u5668\u51fa\u73b0\u5f02\u5e38\u5e76\u9a6c\u4e0a\u91cd\u542f\uff0c\u901a\u5e38\u4f1a\u51fa\u73b0\u90a3\u4e9b\u60c5\u51b5\uff08\uff09", "A\uff09socket\u8c03\u7528\u5931\u8d25", "B\uff09bind\u8c03\u7528\u5931\u8d25", "C\uff09listen\u8c03\u7528\u5931\u8d25", "D\uff09select\u8c03\u7528\u5931\u8d25", "\u6b64\u9898\u6709\u95ee\u9898\uff0c\u4e00\u822c\u8f6f\u4ef6\u5f88\u96be\u81ea\u52a8\u91cd\u542f\u3002\u800cTCP\u670d\u52a1\u5668\u53ef\u4ee5\u5728\u4efb\u4f55\u4e00\u4e2a\u9636\u6bb5\u51fa\u95ee\u9898\uff0c\u4e0a\u8ff0\u54ea\u4e00\u4e2a\u90fd\u80fd\u51fa\u73b0\uff0c\u8fd9\u4e2a\u672c\u610f\u5e94\u8be5\u662f\u6307Select.", "\u5e95\u5c42\u5f00\u53d1", "137\uff0e\u5728\u4e00\u53f0\u4ee5\u5b57\u8282\u4e3a\u6700\u5c0f\u5b58\u50a8\u5355\u4f4d\u7684\u673a\u5668\u4e0a\uff0c\u5982\u679c\u628a0\u00d712345678\u5199\u5230\u4ece0\u00d70000\u5f00\u59cb\u7684\u5730\u5740\u4e0a\uff0c\u4e0b\u5217\u5173\u4e8ebig\u2014endian\u548clittle\u2014enddian\u8bf4\u6cd5\u6b63\u786e\u7684\u662f\uff08B\uff09", "A\uff09\u5728big\u2014endian\u6a21\u5f0f\u4e0b\uff0c\u5730\u57400\u00d70000\u52300\u00d70003\u5b58\u50a8\u7684\u6570\u636e\u4f9d\u6b21\u4e3a\uff1a0\u00d756\uff0c0\u00d778\uff0c0\u00d712\uff0c0\u00d734", "B\uff09\u5728big\u2014endian\u6a21\u5f0f\u4e0b\uff0c\u5730\u57400\u00d70000\u52300\u00d70003\u5b58\u50a8\u7684\u6570\u636e\u4f9d\u6b21\u4e3a\uff1a0\u00d712\uff0c0\u00d734\uff0c0\u00d756\uff0c0\u00d778", "C\uff09\u5728little\u2014endian\u6a21\u5f0f\u4e0b\uff0c\u5730\u57400\u00d70000\u52300\u00d70003\u5b58\u50a8\u7684\u6570\u636e\u4f9d\u6b21\u4e3a\uff1a0\u00d734\uff0c0\u00d712\uff0c0\u00d778\uff0c0\u00d756", "D\uff09\u5728little\u2014endian\u6a21\u5f0f\u4e0b\uff0c\u5730\u57400\u00d70000\u52300\u00d70003\u5b58\u50a8\u7684\u6570\u636e\u4f9d\u6b21\u4e3a\uff1a0\u00d756\uff0c0\u00d778\uff0c0\u00d712\uff0c0\u00d734", "\u00a0", "\u00a0", "138\uff0e\u4ee5\u4e0b\u5173\u4e8e\u4ea4\u53c9\u7f16\u8bd1\u5668\u6982\u8ff0\u6b63\u786e\u7684\u662f\uff08A\uff09", "A\uff09\u4ea4\u53c9\u7f16\u8bd1\u5668\u4e00\u822c\u6309\u7167CPU\u7c7b\u578b\u5206\u7c7b\uff0c\u4e0d\u540c\u7684CPU\u5c31\u6709\u4e0d\u540c\u7684\u4ea4\u53c9\u7f16\u8bd1\u5668", "B\uff09\u4ea4\u53c9\u7f16\u8bd1\u5668\u7684\u901f\u5ea6\u6bd4\u5176\u4ed6\u7f16\u8bd1\u5668\u7684\u901f\u5ea6\u8981\u5feb", "C\uff09linux\u5f00\u53d1\u73af\u5883\u4e2d\u7684\u4ea4\u53c9\u7f16\u8bd1\u5668\u4e0d\u662fgcc\u7f16\u8bd1\u5668", "D\uff09\u4ea4\u53c9\u7f16\u8bd1\u5668\u7f16\u8bd1\u51fa\u6765\u7684\u76ee\u6807\u6587\u4ef6\u4e00\u822c\u4e5f\u80fd\u5728\u5f00\u53d1\u673a\uff08\u666e\u901aPC\uff09\u4e0a\u8fd0\u884c", "139\uff0e\u4ee5\u4e0b\u5173\u4e8elinux\u4e0b\u4e2d\u65ad\u7684\u8bf4\u6cd5\u6b63\u786e\u7684\u662f\uff08\uff09", "A\uff09\u4e2d\u65ad\u53ea\u80fd\u7531\u786c\u4ef6\u4ea7\u751f", "B\uff09\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u4e0d\u80fd\u8fd0\u884c\u53c2\u6570\u4f20\u9012", "C\uff09\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u53ef\u4ee5\u5728\u51fd\u6570\u7ed3\u675f\u7684\u65f6\u5019\u8fd4\u56de\u4e00\u4e2a\u503c", "D\uff09\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\u662f\u4e0d\u53ef\u4e2d\u65ad\u7684", "D,B?", "140\uff0e\u4ee5\u4e0b\u5173\u4e8elinux\u4e0b\u7cfb\u7edf\u8c03\u7528\u7684\u8bf4\u6cd5\u9519\u8bef\u7684\u662f\uff08\uff09", "A\uff09\u5e94\u7528\u7a0b\u5e8f\u901a\u8fc7\u7cfb\u7edf\u8c03\u7528\u8bbf\u95ee\u5185\u6838", "B\uff09\u6bcf\u4e2a\u7cfb\u7edf\u8c03\u7528\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u7cfb\u7edf\u8c03\u7528\u53f7", "C\uff09\u7528\u6237\u53ef\u4ee5\u5b9a\u5236\u81ea\u5df1\u7684\u7cfb\u7edf\u8c03\u7528", "D\uff09", "\u53ef\u80fd\u662fA\uff0c\u7cfb\u7edf\u8c03\u7528\u5728\u5185\u6838\u6267\u884c\u3002\u4f46\u8fd9\u91cc\u8bbf\u95ee\u6bd4\u8f83\u6a21\u7cca\u3002", "141\uff0e\u5173\u4e8eSPI\u8bf4\u6cd5\u6b63\u786e\u7684\u662f\uff08\uff09", "A\uff09SPI\u5de5\u4f5c\u5728\u5168\u53cc\u5de5\u6a21\u5f0f\u4e0b", "B\uff09", "C\uff09", "D\uff09SPI\u63a5\u53e3\u4e00\u822c\u5de5\u4f5c\u5728\u4e3b\u4ece\u6a21\u5f0f\u4e0b", "\u00a0", "C\u8bed\u8a00", "142\uff0eChar Test[10];char *pTest=test;\u95ee\uff1a&Test\u5728\u6570\u503c\u4e0a\u7b49\u4e8e\uff08A\uff09", "A\uff09Test\u00a0 \u00a0\u00a0B) Test[0]\u00a0\u00a0\u00a0 C)&pTest\u00a0\u00a0\u00a0\u00a0 D)\u7b26\u53f7\u8868\u67d0\u4e2a\u7b26\u53f7\u7684\u5730\u5740", "&Test\u76f8\u5f53\u4e8e\u4e8c\u7ef4\u6307\u9488\u9996\u6307\u9488\uff0cTEST\u662f\u4e00\u7ef4\u7684\u9996\u6307\u9488", "143\uff0e\u5728\u987a\u5e8f\u8868{3,6,8,10,12,15,16,18,21,25,30}\u4e2d\uff0c\u7528\u4e8c\u5206\u6cd5\u67e5\u627e\u5173\u952e\u7801\u503c11\uff0c\u6240\u96ea\u7684\u5173\u952e\u7801\u6bd4\u8f83\u6b21\u6570\u4e3a\uff08\uff09B?", "A\uff092\u00a0\u00a0 B\uff093\u00a0\u00a0 C\uff094\u00a0\u00a0\u00a0\u00a0 D\uff095", "144\uff0e\u5355\u94fe\u8868\u4e2d\u6bcf\u4e2a\u7ed3\u70b9\u4e2d\u5305\u62ec\u4e00\u4e2a\u6307\u9488link\uff0c\u5b83\u5411\u8be5\u7ed3\u70b9\uff0c\u73b0\u8981\u5c06\u6307\u9488q\u6307\u5411\u7684\u65b0\u7ed3\u70b9\u653e\u5230\u6307\u9488p\u6307\u5411\u7684\u5355\u94fe\u8868\u63a5\u70b9\u4e4b\u540e\uff0c\u4e0b\u9762\u7684\u64cd\u4f5c\u5e8f\u5217\u4e2d\u54ea\u4e00\u4e2a\u662f\u6b63\u786e\u7684\uff08C\uff09", "A\uff09q:=p^.link;p^.link:=q^:link", "B)p^.link:=q^.link;q:=p^.link", "C)q^.link:=p^.link;p^.link:=q", "D)p^.link:=q;q^.link:=p^.link", "145\uff0e\u4ee5\u4e0b\u53d9\u8ff0\u6b63\u786e\u7684\u662f\uff08C\uff09", "A\uff09\u5728C\u7a0b\u5e8f\u4e2d\uff0cmain\u51fd\u6570\u5fc5\u987b\u4f4d\u4e8e\u7a0b\u5e8f\u7684\u6700\u524d\u9762", "B\uff09C\u7a0b\u5e8f\u7684\u6bcf\u884c\u4e2d\u53ea\u80fd\u5199\u4e00\u6761\u8bed\u53e5", "C\uff09C\u8bed\u8a00\u672c\u8eab\u6ca1\u6709\u8f93\u5165\u8f93\u51fa\u8bed\u53e5", "D\uff09\u5728\u5bf9\u4e00\u4e2aC\u7a0b\u5e8f\u8fdb\u884c\u7f16\u8bd1\u7684\u8fc7\u7a0b\u4e2d\uff0c\u53ef\u53d1\u73b0\u6ce8\u91ca\u4e2d\u7684\u62fc\u5199\u9519\u8bef", "146\uff0e\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "Main()", "{", "Char a[]=\u201dprogramming\u201d,b[]=\u201dlanguage\u201d;", "Char *p1,*p2;", "Int i;", "P1=a;p2=b;", "For(i=0;i<7;i++)", "If(*(p1+i)==*(p2+i))", "Printf(\u201c%c\u201d,*(p1+i));", ")", "\u6253\u5370\u51fa\u4ec0\u4e48\uff08\uff09", "\u00a0", "147\uff0e\u8bf7\u7b80\u8ff0\u4ee5\u4e0b\u4e24\u4e2afor\u5faa\u73af\u7684\u4f18\u7f3a\u70b9\uff086\u5206\uff09", "\u00a0", "\u00a0", "\u00a0", "\u00a0", "148\uff0e\u4f4d\u8fd0\u7b97\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u6574\u578b\u53d8\u91cfa\uff0c\uff081\uff09\u7ed9bit3\u7f6e\u6570\uff082\uff09\u6e05\u9664bit3\uff086\u5206\uff09", "a|=(0\u00d71<<3);", "a&=~(0\u00d71<<3);", "149\uff0e\u8bc4\u8ff0\u4e0b\u9762\u7684\u4ee3\u7801\uff086\u5206\uff09", "Main\uff08\uff09", "{", "Int a[100]\uff1b", "Int *p\uff1b", "P=(\uff08unsigned int *\uff09a+1);", "Printf(\u201c0x%x\u201d,*p);", "}", "1.\u6570\u7ec4\u6ca1\u6709\u8d4b\u521d\u503c\uff0c", "2.\u6307\u9488\u7c7b\u578b\u8f6c\u6362\u4e0d\u4e00\u81f4", "3..\u6253\u5370\u4e00\u4e2a\u672a\u8d4b\u503c\u7684\u6574\u6570\u503c,p=a[1]", "\u00a0", "#include <stdio.h>", "main()", "{", "int a[100]={1,2,3};", "unsigned int *p;", "p=((unsigned int *)a+1);", "printf(\u201c%x,%x\\n\u201d,a,p);", "printf(\u201c0x%x\u201d,*p);", "getchar();", "}", "\u00a0", "\u00a0", "150\uff0e\u7f16\u7a0b\u9898\uff1b(10\u5206)", "\u4ece\u952e\u76d8\u8f93\u5165\u4e00\u7ec4\u5b57\u7b26\uff1b", "\u5b57\u6bcd\u6309\u5347\u5e8f\u6392\u5217\uff1b\u5176\u4f59\u7684\u5b57\u7b26\u6309\u5347\u5e8f\u6392\u5217", "\u5b57\u6bcd\u653e\u524d\uff0c\u5176\u4f59\u7684\u653e\u540e", "\u00a0", "\u4f8b\u5982\uff1a\u8f93\u5165\uff1a_@AB-@ab\u00a0 \u7ed3\u679c\uff1aABab-@@_"], "title": "C++\u5f00\u53d1\u5de5\u7a0b\u5e08\u9762\u8bd5\u9898\u5e93 100~150\u9053"},
{"contents": ["\u767e\u95ee\u767e\u7b54 > 2.\u4ee3\u7801\u5206\u6790\u9898 >", "\n\u4ee3\u78011", "\n  #include ", "\u7b54\u6848\u3010", "\n\tconstructor of TEXT", "\n        main() start", "\n\tconstructor of TEXT", "\n     \u3011", "\u767e\u95ee\u767e\u7b54 > 2.\u4ee3\u7801\u5206\u6790\u9898 >", "\n\u4ee3\u78012", "\n#include ", "(*pa)++;", "\ncout\ncout\ncout\n", "pa=&b;", "\n(*pa)++;", "\ncout\ncout\ncout\nreturn 0;", "\n}", "\n\u7b54\u6848\uff1a", "\n\u3010", "\n\t\t\ta=2", "\n\t\t\tb=10", "\n\t\t\t*p=2", "\n\t\t\ta=2", "\n\t\t\tb=11", "\n\t\t\t*p=11", "\n\u3011", "\u767e\u95ee\u767e\u7b54 > 2.\u4ee3\u7801\u5206\u6790\u9898 >", "\n\u4ee3\u78013", "\n#include ", "\u7b54\u6848\uff1a\u3010", "\nsizeof(A)8", "\nsizeof(B)8", "\nsizeof(C)12", "\nsizeof(D)16\u3011", "\u767e\u95ee\u767e\u7b54 > 2.\u4ee3\u7801\u5206\u6790\u9898 >", "\n\u4ee3\u78014", "\n#include ", "\u767e\u95ee\u767e\u7b54 > 2.\u4ee3\u7801\u5206\u6790\u9898 >", "\n\u4ee3\u78015", "\n #include ", "\u7b54\u6848\uff1a\u3010", "\nsizeof(A)\uff1a1", "\nsizeof(B)\uff1a1", "\nsizeof(C)\uff1a1", "\nsizeof(D)\uff1a4", "\nsizeof(E)\uff1a8", "\nsizeof(F)\uff1a4", "\nPS\uff1a\u9759\u6001\u6210\u5458\u7684\u7a7a\u95f4\u4e0d\u5728\u7c7b\u7684\u5b9e\u4f8b\u4e2d\u3002\u800c\u662f\u50cf\u5168\u5c40\u53d8\u91cf\u4e00\u6837\u5728\u9759\u6001\u5b58\u50a8\u533a\u4e2d\uff0c\u88ab\u7c7b\u5171\u4eab\u3002", "\n\u3011", "\u767e\u95ee\u767e\u7b54 > 2.\u4ee3\u7801\u5206\u6790\u9898 >", "\n\u4ee3\u78016", "\n #include ", "\u767e\u95ee\u767e\u7b54 > 2.\u4ee3\u7801\u5206\u6790\u9898 >", "\n\u4ee3\u78017", "\n  int func(x)", "\n{", "\n    int count x = 0;", "\n    while(x)", "\n    {", "\n          countx ++;", "\n          x = x&(x-1);", "\n     }", "\n    return countx;", "\n}", "\n\u5047\u5b9ax = 9999   countx=\uff1f", "\n\u7b54\u6848\uff1a\u30108\u3011", "\u767e\u95ee\u767e\u7b54 > 2.\u4ee3\u7801\u5206\u6790\u9898 >", "\n\u4ee3\u78018", "\ntypedef union {long i; int k[5]; char c;} DATE;", "\nstruct data { int cat; DATE cow; double dog;} too;", "\nDATE max;", "\n\u5219\u8bed\u53e5 printf(\u201c%d\u201d,sizeof(struct date)+sizeof(max));\u7684\u6267\u884c\u7ed3\u679c\u662f\uff1a___", "\n\u7b54\u6848\uff1a\u301052\u3011", "\u767e\u95ee\u767e\u7b54 > 2.\u4ee3\u7801\u5206\u6790\u9898 >", "\n\u4ee3\u78019", "\n#include ", "class B:public A", "\n{", "\npublic:", "\n\tvirtual void doSth(){cout\n};", "\nint main()", "\n{", "\nB b;", "\nreturn 0;", "\n}", "\n\u7b54\u6848\uff1a\u3010I am A\u3011", "\u767e\u95ee\u767e\u7b54 > 2.\u4ee3\u7801\u5206\u6790\u9898 >", "\n\u4ee3\u780110", "\n\u5206\u6790\u4ee5\u4e0b\u4ee3\u7801 \uff0c\u6307\u51fa\u9519\u8bef", "\n       #include", "int main()", "\n{", "\n\t\tint a=1;", "\n\t\tint b=2;", "\n\t\tint &c;", "\n\t\tint &b=a;", "\n\t\t&d=b;", "\n\t\tint* p;", "\n\t\t*p =5;", "\n\t\treturn 0;", "\n}", "\u7b54\u6848\uff1a", "\n     \u9519\u8bef\u2460\uff1a int &c\uff1b", "\n              \u58f0\u660e\u4e00\u4e2a\u5f15\u7528\u7c7b\u578b\u7684\u53d8\u91cfC\uff0c\u4f46\u662f\u6ca1\u6709\u521d\u59cb\u5316\u3002\u5f15\u7528\u7c7b\u578b\u7684\u53d8\u91cf\u5728\u58f0\u660e\u65f6\u540c\u65f6\u5fc5\u987b\u521d\u59cb\u5316\uff1b", "\n         \u2461\uff1a &d=b\uff1b\u5f15\u7528\u53ea\u80fd\u5728\u58f0\u660e\u7684\u65f6\u5019\u88ab\u8d4b\u503c\uff0c\u4ee5\u540e\u90fd\u4e0d\u80fd\u5728\u628a\u8be5\u5f15\u7528\u4f5c\u4e3a\u5176\u4ed6\u53d8\u91cf\u7684\u522b\u540d", "\n         \u2462\uff1a*p=5\uff1bp\u6ca1\u6709\u88ab\u521d\u59cb\u5316\uff0cp\u662f\u4e2a\u91ce\u6307\u9488\uff0c\u5bf9\u91ce\u6307\u9488\u8d4b\u503c\u975e\u5e38\u5371\u9669\uff0c\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u8fd0\u884c\u65f6\u5d29\u6e83\uff1b"], "title": "\u4ee3\u7801\u5206\u6790\u9898"},
{"contents": ["1.\u00a0\u00a0\u00a0 \u6307\u51fa\u4ee5\u4e0b\u53d8\u91cf\u6570\u636e\u5b58\u50a8\u4f4d\u7f6e", "\u5168\u5c40\u53d8\u91cfint(*g_pFun)(int);g_pFun=myFunction;g_pFun\u5b58\u50a8\u7684\u4f4d\u7f6e(A ) \u4e3a\u5168\u5c40\u7684\u51fd\u6570\u6307\u9488", "\u6307\u5411\u7a7a\u95f4\u7684\u4f4d\u7f6e( B) \u6240\u6709\u51fd\u6570\u4ee3\u7801\u4f4d\u4e8eTEXT\u6bb5", "\u51fd\u6570\u5185\u90e8\u53d8\u91cf static int nCount;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ( A) \u9759\u6001\u53d8\u91cf\u603b\u662f\u5728DATA\u6bb5\u6216BSS\u6bb5\u4e2d", "\u51fd\u6570\u5185\u90e8\u53d8\u91cf char p[]=\u201dAAA\u201d;\u00a0 p \u6307\u5411\u7a7a\u95f4\u7684\u4f4d\u7f6e( C) \u5c40\u57df\u53d8\u91cf\u7684\u9759\u6001\u6570\u7ec4,\u7a7a\u95f4\u5728Stack\u4e2d", "\u51fd\u6570\u5185\u90e8\u53d8\u91cf char *p=\u201dAAA\u201d;\u00a0 p \u6307\u5411\u7a7a\u95f4\u7684\u4f4d\u7f6e( E) ,\u201dAAA\u201d\u4e3a\u4e00\u5b57\u7b26\u5e38\u91cf\u7a7a\u95f4,\u4e0d\u540c\u7f16\u8bd1\u5668\u6709\u4e0d\u540c\u5904\u7406\u65b9\u6cd5,\u5927\u90e8\u5206\u4fdd\u5b58\u5728TEXT(\u4ee3\u7801\u6bb5\u4e2d),\u4e5f\u6709\u7f16\u8bd1\u7684rodata\u6bb5\u4e2d", "\u51fd\u6570\u5185\u90e8\u53d8\u91cf char *p=new char; p\u7684\u4f4d\u7f6e(C ) \u6307\u5411\u7a7a\u95f4\u7684\u4f4d\u7f6e(D ) \u6240\u6709malloc\u7a7a\u95f4\u6765\u81ea\u4e8eheap(\u5806)", "A.\u00a0\u00a0\u00a0 \u6570\u636e\u6bb5", "B.\u00a0\u00a0\u00a0 \u4ee3\u7801\u6bb5", "C.\u00a0\u00a0\u00a0 \u5806\u6808", "D.\u00a0\u00a0\u00a0 \u5806", "E.\u00a0\u00a0\u00a0 \u4e0d\u4e00\u5b9a, \u89c6\u60c5\u51b5\u800c\u5b9a", "\u4ee5\u4e0a\u77e5\u8bc6\u53c2\u89c1C\u8bed\u8a00\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u76f8\u5173\u8bfe\u4ef6", "2.\u00a0\u00a0\u00a0 \u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u4e3a ( )", "#include <iostream>", "main( )", "{", "using namespace std;", "int num[5]={1,2,3,4,5};", "cout <<*((int *)(&num+1)-1) <<endl;", "}", "A. 1\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B.2\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C. 3\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D. 4\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 E. 5 \u00a0\u00a0\u00a0\u00a0\u00a0 F. 0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 G. \u672a\u521d\u59cb\u5316\u5185\u5b58,\u65e0\u6cd5\u786e\u5b9a", "\u5728C\u8bed\u8a00\u4e2d,\u4e00\u7ef4\u6570\u7ec4\u540d\u8868\u793a\u6570\u7ec4\u7684\u9996\u5730\u5740,\u800c\u4e14\u662f\u4e00\u4e2a\u6307\u9488.\u5982\u4e0a\u4f8bnum,", "\u5bf9&num,\u8868\u793a\u6307\u9488\u7684\u6307\u9488.\u610f\u5473\u7740\u8fd9\u91cc\u5f3a\u5236\u8f6c\u6362\u4e3a\u4e8c\u7ef4\u6570\u7ec4\u6307\u9488.", "\u8fd9\u6837 &num+1 \u7b49\u540c\u4e8e num[5][1],\u4e3a\u4ee3\u7801\u7a7a\u95f4. (&num+1)-1\u8868\u793a num[4][0].\u5373num[4].\u6240\u4ee5\u8fd9\u91cc\u7b54\u6848\u662fE.", "\u00a0", "\u6269\u5c55\u9898\u76ee:", "*((int *)(num+1)-1)\u00a0\u00a0 \u7684\u503c\u662f\u591a\u5c11?", "Num\u662f\u9996\u6307\u9488,num+1\u662f\u7b2c\u4e8c\u4e2a\u5143\u7d20\u6307\u9488,-1\u540e\u53c8\u53d8\u6210\u9996\u6307\u9488.\u6240\u4ee5\u8fd9\u91cc\u662f\u7b54\u6848\u662fnum[0]\u5373,A.1", "3.\u00a0\u00a0\u00a0 \u4ee5\u4e0b\u54ea\u4e9b\u662f\u7a0b\u5e8f\u95f4\u53ef\u9760\u7684\u901a\u8baf\u65b9\u5f0f( C ),\u54ea\u4e9b\u53ef\u4ee5\u7528\u4e8e\u8de8\u4e3b\u673a\u901a\u8baf( C,D ,F).Windows\u547d\u540d\u7ba1\u9053\u8de8\u673a\u5668\u4e5f\u53ef\u8de8\u673a\u5668.", "A. \u4fe1\u53f7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B. \u7ba1\u9053 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C. TCP\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D. UDP\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 E. PIPE\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 F,.\u4e32\u53e3I/O", "4. class a", "{", "public:", "virtual\u00a0 void\u00a0 funa( );", "virtual\u00a0 void\u00a0 funb( );", "void\u00a0 fun( );", "static\u00a0 void\u00a0 fund( );", "static\u00a0 int\u00a0 si;", "private:", "int\u00a0 i;", "char\u00a0 c;", "};", "\u95ee: \u572832\u4f4d\u7f16\u8bd1\u5668\u9ed8\u8ba4\u60c5\u51b5\u4e0b,sizeof(a)\u7b49\u4e8e( )\u5b57\u8282?", "A. 28\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B. 25\u00a0\u00a0\u00a0\u00a0\u00a0 C.24\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 \u00a0 D. 20\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0E. 16\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 F.12 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 G. 8", "\u7b54\u6848\u5728VC++\u4e0b\u662f 12. \u8fd9\u91cc\u9700\u8981\u8003\u8651\u4e09\u4e2a\u95ee\u9898,\u4e00\u662f\u865a\u51fd\u6570\u8868vtable\u7684\u5165\u53e3\u8868\u5730\u5740,\u4e8c\u662f\u5b57\u8282\u5bf9\u9f50.\u4e09 ,\u9759\u6001\u6210\u5458\u662f\u6240\u6709\u5bf9\u8c61\u5171\u4eab,\u4e0d\u8ba1\u5165sizeof\u7a7a\u95f4.", "\u5728\u5927\u90e8\u5206C++\u7684\u5b9e\u73b0\u4e2d,", "\u7684\u524d4\u4e2aBYTE\u662f\u865a\u51fd\u6570vtable\u8868\u7684\u8fd9\u4e2a\u7c7b\u5165\u53e3\u5730\u5740.\u6240\u4ee5sizeof\u5fc5\u987b\u8981\u52a0\u5165\u8fd9\u4e2a4\u4e2abyte\u7684\u957f\u5ea6,\u9664\u6b64\u5916,\u7c7b\u7684sizoef()\u4e3a\u6240\u6709\u6570\u636e\u6210\u5458\u603b\u7684sizeof\u4e4b\u548c,\u8fd9\u91cc\u662fint i,\u548cchar c.\u5176\u4e2dchar c\u88ab\u5b57\u8282\u5bf9\u9f50\u4e3a4.\u8fd9\u6837\u603b\u957f\u5ea6\u4e3a", "\u00a0", "Sizeof(a) = sizeof(vtable)+size(int)+sizeof(char + pad) = 12;", "\u00a0", "5. 32\u4f4dWindows \u7cfb\u7edf\u6216Linux\u7cfb\u7edf\u4e0b", "struct", "{", "char\u00a0 a;", "char\u00a0 b;", "char\u00a0 c;", "}A;", "struct", "{", "short\u00a0 a;", "short\u00a0 b;", "short\u00a0 c;", "}B;", "struct", "{", "short\u00a0 a;", "long\u00a0 b;", "char\u00a0 c;", "}C;", "printf(\u201c%d,%d,%d\\n\u201d,sizeof(A),sizeof(B),sizeof(C)); \u7684\u6267\u884c\u7ed3\u679c\u4e3a: ( )", "A. 3,6,7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B. 3,6,8\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C. 4,8,12\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D. 3,6,12 \u00a0\u00a0\u00a0\u00a0 E. 4,6,7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 F. 4,8,9", "\u00a0", "C\u8bed\u6cd5\u7684\u5b57\u8282\u5bf9\u9f50\u89c4\u5219\u6709\u4e24\u79cd\u60c5\u51b5\u8981\u5b57\u8282\u5bf9\u9f50, \u5728VC++,gcc\u6d4b\u8bd5\u90fd\u662f\u5982\u6b64", "1)\u00a0\u00a0\u00a0 \u5bf9\u540c\u4e00\u4e2a\u6570\u636e\u7c7b\u578b\uff08short,int,long\uff09\u53d1\u751f\u4e86\u8de8\u6bb5\u5206\u5e03,(\u572832CPU\u91cc,\u5373\u4e00\u4e2a\u6570\u636e\u7c7b\u578b\u5206\u5e03\u5728\u4e24\u4e2a\u6bb5\u4e2d)\u624d\u4f1a\u53d1\u751f\u5b57\u8282\u5bf9\u9f50.", "2)\u00a0\u00a0\u00a0 \u6570\u636e\u7c7b\u578b\u7684\u9996\u90e8\u548c\u5c3e\u90e8\u5fc5\u987b\u6709\u5176\u4e00\u662f\u4e0e4\u5bf9\u9f50.\u800c\u4e14\u8fdd\u53cd\u4e0a\u4e00\u89c4\u5219.", "l\u00a0 Sizeof(A),sizeof(B)\u867d\u7136\u603b\u5b57\u8282\u6570\u4e0d\u80fd\u88ab4\u6574\u9664.\u4f46\u521a\u597d\u6240\u6709\u6570\u636e\u5e73\u5747\u5206\u5e03\u5728\u4ee54\u4e3a\u5355\u4f4d\u7684\u5404\u4e2a\u6bb5\u4e2d.\u6240\u4ee5\u65e0\u9700\u5b57\u8282\u5bf9\u9f50,\u6240\u4ee5\u7ed3\u679c\u662f 3\u548c6", "l\u00a0 struct {char a;char b;char c;char d;char e;}F; \u7684sizoef(F)\u662f\u7b49\u4e8e5.", "l\u00a0 \u7528\u4ee5\u4e0b\u5b9e\u4f8b\u66f4\u52a0\u6e05\u695a", "struct {", "char a[20];", "short b;", "}A;", "struct {", "char a[21];", "short b;", "}B;", "Sizeof(A)=22,sizoef(B)=24.\u56e0\u4e3a\u524d\u8005\u6ca1\u6709\u53d1\u751f\u8de8\u6bb5\u5206\u5e03.\u540e\u8005,\u5982\u679c\u4e0d\u5b57\u8282\u5bf9\u9f50.a[21]\u5360\u7528\u6700\u540e\u4e00\u4e2a\u6bb5\u7684\u9996\u5730\u5740,b\u65e0\u6cd5\u4f5c\u5230\u4e0e\u9996\u90e8\u4e0e\u5c3e\u90e8\u4e0e4\u5bf9\u9f50,\u53ea\u80fd\u5728a[21]\u4e0eb\u4e4b\u95f4\u52a0\u5165\u4e00\u4e2abyte,\u4f7f\u7528b\u7684\u5c3e\u90e8\u4e0e4\u5bf9\u9f50.", "l\u00a0 C\u5c31\u662f\u6bd4\u8f83\u597d\u7406\u89e3.\u8981\u8865\u591a\u4e2a\u621012", "\u00a0", "6.\u00a0\u00a0\u00a0 \u4f9d\u636e\u7a0b\u5e8f,\u4ee5\u4e0b\u9009\u62e9\u4e2d\u90a3\u4e2a\u662f\u5bf9\u7684? (\u00a0 )", "class A", "{", "int\u00a0 m_nA;", "};", "class B", "{", "int\u00a0\u00a0 m_nB;", "};", "class C:public A,public B", "{", "int\u00a0 m_nC;", "};", "void f (void)", "{", "C* pC=new C;", "B* pB=dynamic_cast<B*>(pC);", "A* pA=dynamic_cast<A*>(pC);", "}", "A. pC= =pB,(int)pC= =(int)B\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B. pC= =pB,(int)pC!=(int)pB", "C. pC!=pB,(int)pC= =(int)pB\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D. pC!=pB,(int)pC!=(int)pB", "\u00a0", "\u8fd9\u91cc\u4e3b\u8981\u8003\u591a\u6001..\u5c06\u7a0b\u5e8f\u53d8\u4e3a\u5982\u4e0b\u6bd4\u8f83\u6613\u61c2", "\u00a0", "#include <stdio.h>", "\u00a0", "class A", "{", "public:", "int\u00a0 m_nA;", "};", "class B", "{", "public:", "int\u00a0\u00a0 m_nB;", "};", "class C:public A,public B", "{", "public:", "int\u00a0 m_nC;", "};", "\u00a0", "void f (void)", "{", "C* pC=new C;", "B* pB=dynamic_cast<B*>(pC);", "A* pA=dynamic_cast<A*>(pC);", "}", "\u00a0", "void f1 (void)", "{", "C* pC=new C;", "pC->m_nA = 1;", "pC->m_nB = 2;", "pC->m_nC = 3;", "B* pB=dynamic_cast<B*>(pC);", "A* pA=dynamic_cast<A*>(pC);", "\u00a0", "printf(\u201cA=%x,B=%x,C=%x,iA=%d,iB=%d,iC=%d\\n\u201d,pA,pB,pC,(int)pA,(int)pB,(int)pC);", "}", "\u00a0", "\u00a0", "void test1();", "\u00a0", "int main()", "{", "// test1();", "f1();", "getchar();", "return 0;", "}", "\u4ee5\u4e0a\u7a0b\u5e8f\u8f93\u51fa:", "\u5373C\u4ece,A,B\u7ee7\u627f\u4e0b\u6765,\u7531\u4e0b\u56fe\u53ef\u4ee5\u77e5\u9053 pA=pC.\u800cpB\u5f3a\u5236\u8f6c\u6362\u540e,\u53ea\u80fd\u53d6\u5230C\u4e2dB\u7684\u90e8\u5206.\u6240\u4ee5pB\u5728pC\u5411\u540e\u504f\u79fb4\u4e2aBYTE,(\u5373m_nA)\u7684\u7a7a\u95f4", "\u00a0", "7,\u8bf7\u5199\u51fa\u80fd\u5339\u914d\u201d[10]:dddddd \u201d\u548c\u201d[9]:abcdegf \u201d,\u4e0d\u5339\u914d\u201d[a]:xfdf \u201d\u7684\u6b63\u5219\u8868\u8fbe\u5f0f________,linux\u4e0b\u652f\u6301\u6b63\u5219\u7684\u547d\u4ee4\u6709:___find,grep_________", "8.\u5982\u4e0b\u7a0b\u5e8f:", "int i=1,k=0;", "long *pl=NULL;", "char *pc=NULL;", "if(k++&&i++)", "k++, pl++, pc++;", "if(i++||k++)", "i++, pl++, pc++;", "printf(\u201ci=%d,k=%d,pl=%ld,pc=%ld\\n\u201d,i,k,(long)pl,(long)pc);", "\u00a0", "\u6253\u5370\u7ed3\u679c\u4e3a__i=3,k=1,pl=4,pc=1________", "\u4e3b\u8981\u6d4b\u8bd5\u903b\u8f91\u8868\u8fbe\u5f0f\u7684\u77ed\u8def\u64cd\u4f5c.", "&&\u64cd\u4f5c\u4e2d,\u524d\u4e00\u4e2a\u8868\u8fbe\u5f0f\u4e3a0,\u540e\u4e00\u8868\u8fbe\u5f0f\u4e0d\u6267\u884c", "||\u64cd\u4f5c\u4e2d, \u524d\u4e00\u4e2a\u8868\u8fbe\u5f0f\u4e3a1,\u540e\u4e00\u8868\u8fbe\u5f0f\u4e0d\u6267\u884c", "\u00a0", "9. \u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u4e3a______________", "#include<iostream>", "using std::cout;", "class A", "{", "public:", "void f(void){", "cout<< \u201dA::f\u201d <<\u2019 \u2018;", "}", "virtual void g(void)", "{", "cout <<\u201dA::g\u201d << \u2018 \u2018;", "}", "};", "\u00a0", "class B : public A", "{", "public:", "void f(void)", "{", "cout << \u201cB :: f \u201c << \u2018 \u2018;", "}", "void g(void)", "{", "cout << \u201cB:: g \u201c << \u2018 \u2018;", "}", "\u00a0", "};", "\u00a0", "int main()", "{", "A*\u00a0 pA =new B;", "pA->f();", "pA->g();", "B* pB = (B*)pA;", "pB->f();", "pB->g();", "}", "\u591a\u6001\u4e2d\u865a\u51fd\u6570\u8c03\u7528.", "f()\u4e3a\u975e\u865a\u51fd\u6570,\u8fd9\u6837\u5f3a\u5236\u8f6c\u6362\u540e,\u6267\u884c\u672c\u7c7b\u7684\u540c\u540d\u51fd\u6570.", "G()\u4e3a\u865a\u51fd\u6570,\u6307\u9488\u603b\u662f\u6267\u884c\u865a\u51fd\u6570,\u8fd9\u5c31\u662f\u591a\u6001..", "10.\u4e0b\u5217\u4ee3\u7801\u7684\u4f5c\u7528\u662f\u5220\u9664list lTest \u4e2d\u503c\u4e3a6\u7684\u5143\u7d20:", "list<int> :: iterator Index = ITest .begin();", "for( ;\u00a0 Index != ITest .end();\u00a0 ++ Index)", "{", "if((*Index) = = 6)", "{", "ITest .erase(Index);", "}", "}", "\u8bf7\u95ee\u6709\u4ec0\u4e48\u9519\u8bef____ Index = ITest .erase(Index);____________________,", "STL\u7684\u6e38\u6807\u5904\u7406,erase\u5df2\u7ecf\u5c06Index\u7834\u574f\u6389,\u9700\u8981\u7528\u65b0\u7684Index,\u5426\u5219\u4e0b\u4e00\u5faa\u73af\u7684++Index\u88ab\u7834\u574f\u6389", "\u8bf7\u5199\u51fa\u6b63\u786e\u7684\u4ee3\u7801,\u6216\u8005\u5728\u539f\u4ee3\u7801\u4e0a\u4fee\u6b63.", "\u00a0", "11.\u627e\u9519\u8bef_\u4ee5\u4e0b\u7a0b\u5e8f:", "char* ptr = malloc(100);", "if(!ptr)", "{", "\u2026", "}", "\u2026", "//ptr \u6307\u5411\u7684\u7a7a\u95f4\u4e0d\u591f\u9700\u8981\u91cd\u65b0\u5206\u914d", "ptr = realloc(ptr,200);", "if(!ptr)", "{", "\u2026", "}", "\u2026", "\u8bf7\u95ee\u6709\u4ec0\u4e48\u9519\u8bef___", "__________________,\u8bf7\u5199\u51fa\u6b63\u786e\u7684\u4ee3\u7801,\u6216\u8005\u5728\u539f\u4ee3\u7801\u4e0a\u4fee\u6b63.", "\u00a0", "12.\u4ee5\u4e0b\u4e3awindow NT \u4e0b32 \u4f4dC++\u7a0b\u5e8f,\u8bf7\u586b\u5199\u5982\u4e0b\u503c", "class myclass", "{", "int a ;", "int b;", "};", "char *p = \u201chello\u201d;", "char str[] = \u201cworld\u201d;", "myclass classes[2];", "void *p2= malloc(100);", "\u00a0", "sizeof(p)=_4__", "sizeof(str)=_6_", "sizeof(classes)=_16__", "sizeof(p2)=_4___", "\u00a0", "13.\u76f4\u63a5\u5728\u4ee5\u4e0b\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\u7684\u884c\u6570\u540e\u7684\u586b\u7a7a\u680f\u4e2d\u6253\u53c9", "\u7a0b\u5e8f1:", "int main(void)", "{", "int i=10;_____", "int *const j=&i;_______", "(*j)++;____", "j++;___*_____", "}", "\u7a0b\u5e8f2:", "int main(void)", "{", "int i=20;_____", "const int *j=&i;_________", "*j++;______", "(*j)++;____*____", "}", "\u00a0", "\u4e3b\u8981\u8003const \u51fa\u73b0\u5728*\u524d\u540e\u4e0d\u540c\u542b\u610f,const \u5728*\u540e\u8868\u793a\u6307\u9488\u672c\u8eab\u4e0d\u80fd\u6539,const \u5728*\u524d\u9762\u6307\u9488\u5185\u5bb9\u4e0d\u80fd\u6539,\u7a0b\u5e8f1\u4e2dj\u4e0d\u80fd\u4fee\u6539\u6307\u9488,\u6240\u4ee5j++\u662f\u9519,\u7a0b\u5e8f2,j\u4e0d\u80fd\u6539\u6539\u5185\u5bb9,\u6240\u4ee5", "\u00a0", "14.\u7528C/C++\u4ee3\u7801\u5b9e\u73b0\u4ee5\u4e0b\u8981\u6c42:\u4ece1-100\u4e2d\u6311\u9009\u51fa10\u4e2a\u4e0d\u540c\u7684\u6570\u5b57,\u8bf7\u628a\u53ef\u80fd\u7684\u6240\u6709\u7ec4\u5408\u6253\u5370\u51fa\u6765.", "\u00a0", "15.\u6709\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u5168\u5c40\u6570\u7ec4int a[],\u957f\u5ea6n\u8d85\u8fc72\u768424\u6b21\u65b9,\u5199\u4e00\u4e2a\u9488\u5bf9\u8be5\u6570\u7ec4\u7684\u67e5\u627e\u7b97\u6cd5unsigned search(int value)(\u8fd4\u56de\u503c\u4e0b\u6807),\u63d2\u5165\u7b97\u6cd5insert(int value,unsigned index).\u518d\u6b21\u6ce8\u610f\u8be5\u6570\u7ec4\u7684\u957f\u5ea6\u5f88\u957f.", "\u9898\u76ee\u4e0d\u592a\u6e05,\u53ef\u80fd\u53ef\u4ee5\u628a\u6570\u503c\u672c\u8eab\u4f5c\u4e0b\u6807.\u5e76\u4e14\u6309\u987a\u5e8f\u6392\u5e8f.", "16.\u6709\u4e24\u4e2a\u5355\u5411\u94fe\u8868,\u8868\u5934pHeader1,pHeader2,\u8bf7\u5199\u4e00\u4e2a\u51fd\u6570\u5224\u65ad\u8fd9\u4e24\u4e2a\u94fe\u8868\u662f\u5426\u6709\u4ea4\u53c9.\u5982\u679c\u6709\u4ea4\u53c9,\u7ed9\u51fa\u4ea4\u53c9\u70b9.\u7a0b\u5e8f\u4e0d\u80fd\u6539\u53d8\u94fe\u8868\u7684\u5185\u5bb9,\u53ef\u4ee5\u4f7f\u7528\u989d\u5916\u7684\u7a7a\u95f4,\u65f6\u95f4\u590d\u6742\u5ea6\u5c3d\u91cf\u5c0f,\u6700\u597d\u7ed9\u51fa\u4e24\u79cd\u89e3.(\u53cc\u91cd\u5faa\u73af\u7684\u89e3\u7531\u4e8e\u65f6\u95f4\u590d\u6742\u5ea6\u9ad8\uff0c\u4e0d\u7b97\u6b63\u89e3).", "1.\u79fb\u52a8\u94fe\u8868\u6307\u9488,\u5982\u679c\u6700\u7ec8", "17.\u7f16\u5199\u7a0b\u5e8f,\u5c06\u4e00\u68f5\u6811\u4ece\u6839\u8282\u70b9\u5230\u53f6\u5b50\u7684\u6240\u6709\u6700\u957f\u8def\u5f84\u90fd\u6253\u5370\u51fa\u6765.\u6bd4\u5982\u4e00\u68f5\u6811\u4ece\u8ddf\u5230\u6700\u672b\u7aef\u7684\u53f6\u5b50\u6700\u8fdc\u8981\u7ecf", "\u8fc74\u4e2a\u8282\u70b9,\u90a3\u4e48\u5c31\u628a\u5230\u6240\u6709\u8981\u7ecf\u8fc74\u4e2a\u8282\u70b9\u624d\u80fd\u5230\u8fbe\u7684\u53f6\u5b50\u7684\u641c\u7d22\u8def\u5f84(\u6240\u6709\u9014\u5f84\u8282\u70b9)\u90fd\u5206\u522b\u6253\u5370\u51fa\u6765.", "\u00a0", "18.\u8bf7\u5206\u522b\u5bf9\u4e00\u4e2a\u94fe\u8868\u548c\u4e00\u4e2a\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f,\u5e76\u6307\u51fa\u4f60\u6392\u5e8f\u7684\u7b97\u6cd5\u540d\u79f0\u4ee5\u53ca\u4e3a\u4f55\u9009\u62e9\u8be5\u7b97\u6cd5", "\u6570\u7ec4\u53ef\u7528\u4ea4\u6362\u6cd5\u6392\u5e8f", "\u00a0", "\u00a0", "19.\u6709\u5355\u5411\u94fe\u8868,\u5176\u4e2d\u8282\u70b9\u7ed3\u6784\u4e3aNode{int value;Node *pNext};\u53ea\u77e5\u9053\u6307\u5411\u67d0\u4e2a\u8282\u70b9\u7684\u6307\u9488pCurrent;\u5e76\u4e14\u77e5\u9053\u8be5\u8282\u70b9\u4e0d\u662f\u5c3e\u8282\u70b9,\u6709\u4ec0\u4e48\u529e\u6cd5\u628a\u4ed6\u5220\u9664\u5417?\u8981\u6c42\u4e0d\u65ad\u94fe.", "\u4ece\u94fe\u8868\u5934\u5f00\u59cb,\u627e\u5230pCurrent\u4e0a\u4e00\u4e2a\u7ed3\u70b9pPrev,\u7136\u540e pPrev->pNext = pCurrent->pNext;", "\u00a0", "20.\u95ee\u9898A:\u7528\u4ec0\u4e48\u65b9\u6cd5\u907f\u514dc/c++\u7f16\u7a0b\u4e2d\u7684\u5934\u6587\u4ef6\u91cd\u590d\u5305\u542b?\u95ee\u9898B:\u5047\u8bbe\u89e3\u51b3\u4e86\u91cd\u590d\u5305\u542b\u95ee\u9898,\u4f46\u662f\u53c8\u9700\u8981\u5728\u4e24\u4e2a\u4e0d\u540c\u7684\u5934\u6587\u4ef6\u4e2d\u5f15\u7528\u5404\u7533\u660e\u7684\u7c7b,\u5e94\u8be5\u5982\u4f55\u5904\u7406?\u5177\u4f53\u4ee3\u7801\u5982\u4e0b:", "\u5728\u5934\u6587\u4ef6Man.h\u4e2d", "\u2026.", "Class Cman", "{", "\u2026.", "CFace m_face;", "};", "\u2026.", "\u5728\u5934\u6587\u4ef6Face.h\u4e2d", "\u2026", "Class CFace", "{", "\u2026", "Cman *m_owner;", "};", "\u2026.", "\u8fd9\u6837\u7c7bCMan.CFace\u5c31\u76f8\u4e92\u5f15\u7528\u4e86,\u8be5\u5982\u4f55\u5904\u7406\u5462?", "\u00a0", "1.#ifndef \u2026.", "#define \u2026..", "2.\u7c7b\u7684\u524d\u5411\u58f0\u660e", "\u00a0", "21.\u591a\u7ebf\u7a0b\u548c\u5355\u7ebf\u7a0b\u5404\u81ea\u5206\u522b\u5728\u4ec0\u4e48\u65f6\u5019\u6548\u7387\u66f4\u9ad8?", "\u591a\u7ebf\u7a0b\u5728\u5e76\u53d1,\u5e76\u4e14\u5404\u7ebf\u7a0b\u65e0\u9700\u8bbf\u95ee\u5171\u4eab\u6570\u636e\u60c5\u51b5\u8be6\u7ec6\u6700\u9ad8", "\u5982\u679c\u591a\u7ebf\u7a0b\u8fc7\u4e8e\u9891\u7e41\u5207\u6362,\u6216\u5171\u4eab\u6570\u636e\u5f88\u591a\u60c5\u51b5\u4e0b,\u4f7f\u7528\u5355\u7ebf\u7a0b\u8f83\u597d", "\u00a0", "22.\u5728\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d,\u5bf9\u516c\u5171\u8d44\u6e90(\u6bd4\u5982\u7f13\u51b2\u533a\u7b49)\u7684\u64cd\u4f5c\u548c\u8bbf\u95ee\u7ecf\u5e38\u9700\u8981\u4f7f\u7528\u9501\u6765\u8fdb\u884c\u4fdd\u62a4,\u4f46\u5728\u5927\u5e76\u53d1\u7cfb\u7edf\u4e2d\u8fc7\u591a\u7684\u9501\u4f1a\u5bfc\u81f4\u6548\u7387\u5f88\u4f4e,\u901a\u5e38\u6709\u90a3\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u5c3d\u91cf\u907f\u514d\u6216\u51cf\u5c11\u9501\u7684\u4f7f\u7528?", "\u51cf\u5c11\u9501\u7684\u7c92\u5ea6,\u6bcf\u6b21\u5c3d\u53ef\u80fd\u51cf\u5c11\u9501\u8303\u56f4", "\u91c7\u7528\u961f\u5217\u5904\u7406,\u8fd9\u6837\u65e0\u9700\u4f7f\u7528\u9501.", "23.\u8bf7\u8be6\u7ec6\u9610\u8ff0\u5982\u4f55\u5728release\u7248\u672c(windows\u7a0b\u5e8f\u6216linux\u7a0b\u5e8f\u90fd\u53ef\u4ee5)\u4e2d,\u67e5\u627e\u6bb5\u9519\u8bef\u95ee\u9898.", "\u53ef\u4ee5\u7528\u7f16\u8bd1\u5668\u751f\u6210map\u6587\u4ef6\u6765\u5b9a\u4f4d\u6e90\u7801.\u901a\u8fc7\u5730\u5740\u53cd\u67e5\u6e90\u7801", "\u00a0", "24.\u5047\u8bbe\u4f60\u7f16\u8bd1\u94fe\u63a5release\u7248\u672c\u540e\u5f97\u5230\u4e00\u4e2a\u53ef\u6267\u884c\u7a0b\u5e8f(\u7531\u591a\u4e2acpp\u6587\u4ef6\u548cH\u6587\u4ef6\u7f16\u8bd1),\u7ed3\u679c\u53ef\u6267\u884c\u7a0b\u5e8f\u6587\u4ef6\u975e\u5e38\u5927,\u4f60\u5982\u4f55\u627e\u5230\u9020\u6210\u6587\u4ef6\u592a\u5927\u7684\u53ef\u80fd\u539f\u56e0,\u53ef\u80fd\u7684\u539f\u56e0\u662f\u4ec0\u4e48?", "\u4f7f\u7528\u4e00\u4e2a\u5df2\u7ecf\u521d\u59cb\u5316\u7684\u5de8\u5927\u7684\u5168\u5c40\u6570\u7ec4", "25.\u5728\u7f16\u5199C++\u8d4b\u503c\u8fd0\u7b97\u7b26\u65f6\u6709\u54ea\u4e9b\u8981\u6ce8\u610f\u7684\u5730\u65b9?", "\u8fd4\u56de\u503c,\u53c2\u6570\u6700\u597d\u7528\u5f15\u7528", "\u51cf\u5c11\u53cb\u5143\u51fd\u6570\u4f7f\u7528,\u79fb\u690d\u6709\u95ee\u9898.", "26.\u5047\u8bbe\u4f60\u662f\u53c2\u4e0e\u8bbe\u8ba1\u5ae6\u5a25\u536b\u661f\u7684\u5d4c\u5165\u5f0f\u5355\u677f\u8f6f\u4ef6\u5de5\u7a0b\u5e08,\u5176\u4e2d\u6709\u4e00\u4e2a\u5feb\u901f\u641c\u7d22\u53ef\u80fd\u8981\u7528\u5230\u54c8\u5e0c\u53d8\u6216\u8005\u5e73\u8861\u4e8c\u53c9\u6811,\u8981\u6c42\u4e0d\u7ba1\u4ec0\u4e48\u6761\u4ef6\u4e0b,\u5355\u677f\u5fc5\u987b\u5728\u6307\u5b9a\u7684\u77ed\u65f6\u95f4\u5185\u6709\u8f93\u51fa,\u4f60\u4f1a\u91c7\u53d6\u90a3\u79cd\u7b97\u6cd5?\u4e3a\u4ec0\u4e48\u7528\u8fd9\u79cd\u7b97\u6cd5,\u4e3a\u4ec0\u4e48\u4e0d\u7528\u53e6\u4e00\u79cd\u7b97\u6cd5?", "HASH.HASH\u8bbf\u95ee\u901f\u5ea6\u8f83\u5feb.", "27.strcpy()\u5bb9\u6613\u5f15\u8d77\u7f13\u51b2\u533a\u6ea2\u51fa\u95ee\u9898,\u8bf7\u95ee\u6709\u4ec0\u4e48\u51fd\u6570\u53ef\u4ee5\u66ff\u4ee3\u4ee5\u51cf\u5c11\u98ce\u9669,\u4e3a\u4ec0\u4e48?", "strncpy", "28.\u8bf7\u6307\u51faspinlock,mutex,semaphore,critical section\u7684\u4f5c\u7528\u4e0e\u533a\u522b,\u90fd\u5728\u54ea\u4e9b\u573a\u5408\u4f7f\u7528.", "spin_lock Linux \u5185\u6838\u81ea\u65cb\u9501. Mutex Windows \u4e92\u8d28\u91cf, semaphore \u3000POSIX\u3000,critical section\u3000Windows", "29.\u5728\u54ea\u4e9b\u65b9\u6cd5\u4f7f\u963b\u585e\u6a21\u5f0f\u7684recv\u51fd\u6570\u5728\u6ca1\u6709\u6536\u5230\u6570\u636e\u7684\u60c5\u51b5\u4e0b\u8fd4\u56de(\u4e0d\u80fd\u5c06socket\u4fee\u6539\u4e3a\u975e\u963b\u585e\u6a21\u5f0f)\u8bf7\u63cf\u8ff0\u5f97\u8be6\u7ec6\u70b9.", "\u4f7f\u7528select", "\u00a0", "30.\u67093\u4e2a\u7ea2\u8272\u7403,2\u4e2a\u767d\u8272\u7403,1\u4e2a\u7eff\u8272\u7403.\u53d6\u51fa\u4e24\u4e2a\u4e0d\u540c\u989c\u8272\u7684\u7403\u5c31\u80fd\u53d8\u6210\u4e24\u4e2a\u7b2c\u4e09\u79cd\u989c\u8272\u7684\u7403(\u6bd4\u5982:\u53d6\u51fa1\u7ea2\u7403,1\u767d\u7403,\u5c31\u80fd\u53d8\u62102\u4e2a\u7eff\u7403).\u95ee,\u6700\u5c11\u51e0\u6b21\u53d8\u5316\u80fd\u5c06\u6240\u6709\u7403\u90fd\u53d8\u6210\u540c\u4e00\u989c\u8272,\u8bf4\u660e\u6b65\u9aa4\u548c\u539f\u56e0?", "\u00a0", "31.\u5355\u5411\u94fe\u8868\u7684\u53cd\u8f6c\u662f\u4e00\u4e2a\u7ecf\u5e38\u88ab\u95ee\u5230\u7684\u4e00\u4e2a\u9762\u8bd5\u9898\uff0c\u4e5f\u662f\u4e00\u4e2a\u975e\u5e38\u57fa\u7840\u7684\u95ee\u9898\u3002\u6bd4\u5982\u4e00\u4e2a\u94fe\u8868\u662f\u8fd9\u6837\u7684\uff1a 1->2->3->4->5 \u901a\u8fc7\u53cd\u8f6c\u540e\u6210\u4e3a5->4->3->2->1\u3002", "\u6700\u5bb9\u6613\u60f3\u5230\u7684\u65b9\u6cd5\u904d\u5386\u4e00\u904d\u94fe\u8868\uff0c\u5229\u7528\u4e00\u4e2a\u8f85\u52a9\u6307\u9488\uff0c\u5b58\u50a8\u904d\u5386\u8fc7\u7a0b\u4e2d\u5f53\u524d\u6307\u9488\u6307\u5411\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u7136\u540e\u5c06\u5f53\u524d\u8282\u70b9\u5143\u7d20\u7684\u6307\u9488\u53cd\u8f6c\u540e\uff0c\u5229\u7528\u5df2\u7ecf\u5b58\u50a8\u7684\u6307\u9488\u5f80\u540e\u9762\u7ee7\u7eed\u904d\u5386\u3002\u6e90\u4ee3\u7801\u5982\u4e0b\uff1a", "\u8fd8\u6709\u4e00\u79cd\u5229\u7528\u9012\u5f52\u7684\u65b9\u6cd5\u3002\u8fd9\u79cd\u65b9\u6cd5\u7684\u57fa\u672c\u601d\u60f3\u662f\u5728\u53cd\u8f6c\u5f53\u524d\u8282\u70b9\u4e4b\u524d\u5148\u8c03\u7528\u9012\u5f52\u51fd\u6570\u53cd\u8f6c\u540e\u7eed\u8282\u70b9\u3002\u6e90\u4ee3\u7801\u5982\u4e0b\u3002\u4e0d\u8fc7\u8fd9\u4e2a\u65b9\u6cd5\u6709\u4e00\u4e2a\u7f3a\u70b9\uff0c\u5c31\u662f\u5728\u53cd\u8f6c\u540e\u7684\u6700\u540e\u4e00\u4e2a\u7ed3\u70b9\u4f1a\u5f62\u6210\u4e00\u4e2a\u73af\uff0c\u6240\u4ee5\u5fc5\u987b\u5c06\u51fd\u6570\u7684\u8fd4\u56de\u7684\u8282\u70b9\u7684next\u57df\u7f6e\u4e3aNULL\u3002\u56e0\u4e3a\u8981\u6539\u53d8head\u6307\u9488\uff0c\u6240\u4ee5\u6211\u7528\u4e86\u5f15\u7528\u3002\u7b97\u6cd5\u7684\u6e90\u4ee3\u7801\u5982\u4e0b\uff1a", "class String", "\n{", "\npublic:", "\nString(const char *str = NULL); // \u901a\u7528\u6784\u9020\u51fd\u6570", "\nString(const String &another); // \u62f7\u8d1d\u6784\u9020\u51fd\u6570", "\n~ String(); // \u6790\u6784\u51fd\u6570", "\nString & operater =(const String &rhs); // \u8d4b\u503c\u51fd\u6570", "\nprivate:", "\nchar *m_data; // \u7528\u4e8e\u4fdd\u5b58\u5b57\u7b26\u4e32", "\n};", "\u5c1d\u8bd5\u5199\u51fa\u7c7b\u7684\u6210\u5458\u51fd\u6570\u5b9e\u73b0\u3002", "\u7b54\u6848\uff1a", "String::String(const char *str)", "\n{", "\nif ( str == NULL ) //strlen\u5728\u53c2\u6570\u4e3aNULL\u65f6\u4f1a\u629b\u5f02\u5e38\u624d\u4f1a\u6709\u8fd9\u6b65\u5224\u65ad", "\n{", "\nm_data = new char[1] ;", "\nm_data[0] = \u2018\\0\u2032 ;", "\n}", "\nelse", "\n{", "\nm_data = new char[strlen(str) + 1];", "\nstrcpy(m_data,str);", "\n}", "}", "String::String(const String &another)", "\n{", "\nm_data = new char[strlen(another.m_data) + 1];", "\nstrcpy(m_data,other.m_data);", "\n}", "String& String::operator =(const String &rhs)", "\n{", "\nif ( this == &rhs)", "\nreturn *this ;", "\ndelete []m_data; //\u5220\u9664\u539f\u6765\u7684\u6570\u636e\uff0c\u65b0\u5f00\u4e00\u5757\u5185\u5b58", "\nm_data = new char[strlen(rhs.m_data) + 1];", "\nstrcpy(m_data,rhs.m_data);", "\nreturn *this ;", "\n}", "String::~String()", "\n{", "\ndelete []m_data ;", "\n}", "\n", "\nint func(x)", "\n{", "\nint countx = 0;", "\nwhile(x)", "\n{", "\ncountx ++;", "\nx = x&(x-1);", "\n}", "\nreturn countx;", "\n}", "\u5047\u5b9ax = 9999\u3002 \u7b54\u6848\uff1a8", "\u601d\u8def\uff1a\u5c06x\u8f6c\u5316\u4e3a2\u8fdb\u5236\uff0c\u770b\u542b\u6709\u76841\u7684\u4e2a\u6570\u3002", "\n\u7b54\uff1a\u5f15\u7528\u5c31\u662f\u67d0\u4e2a\u76ee\u6807\u53d8\u91cf\u7684\u201c\u522b\u540d\u201d(alias)\uff0c\u5bf9\u5e94\u7528\u7684\u64cd\u4f5c\u4e0e\u5bf9\u53d8\u91cf\u76f4\u63a5\u64cd\u4f5c\u6548\u679c\u5b8c\u5168\u76f8\u540c\u3002\u7533\u660e\u4e00\u4e2a\u5f15\u7528\u7684\u65f6\u5019\uff0c\u5207\u8bb0\u8981\u5bf9\u5176\u8fdb\u884c\u521d\u59cb\u5316\u3002\u5f15\u7528\u58f0\u660e\u5b8c\u6bd5\u540e\uff0c\u76f8\u5f53\u4e8e\u76ee\u6807\u53d8\u91cf\u540d\u6709\u4e24\u4e2a\u540d\u79f0\uff0c\u5373\u8be5\u76ee\u6807\u539f\u540d\u79f0\u548c\u5f15\u7528\u540d\uff0c\u4e0d\u80fd\u518d\u628a\u8be5\u5f15\u7528\u540d\u4f5c\u4e3a\u5176\u4ed6\u53d8\u91cf\u540d\u7684\u522b\u540d\u3002\u58f0\u660e\u4e00\u4e2a\u5f15\u7528\uff0c\u4e0d\u662f\u65b0\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53d8\u91cf\uff0c\u5b83\u53ea\u8868\u793a\u8be5\u5f15\u7528\u540d\u662f\u76ee\u6807\u53d8\u91cf\u540d\u7684\u4e00\u4e2a\u522b\u540d\uff0c\u5b83\u672c\u8eab\u4e0d\u662f\u4e00\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u56e0\u6b64\u5f15\u7528\u672c\u8eab\u4e0d\u5360\u5b58\u50a8\u5355\u5143\uff0c\u7cfb\u7edf\u4e5f\u4e0d\u7ed9\u5f15\u7528\u5206\u914d\u5b58\u50a8\u5355\u5143\u3002\u4e0d\u80fd\u5efa\u7acb\u6570\u7ec4\u7684\u5f15\u7528\u3002", "\uff081\uff09\u4f20\u9012\u5f15\u7528\u7ed9\u51fd\u6570\u4e0e\u4f20\u9012\u6307\u9488\u7684\u6548\u679c\u662f\u4e00\u6837\u7684\u3002\u8fd9\u65f6\uff0c\u88ab\u8c03\u51fd\u6570\u7684\u5f62\u53c2\u5c31\u6210\u4e3a\u539f\u6765\u4e3b\u8c03\u51fd\u6570\u4e2d\u7684\u5b9e\u53c2\u53d8\u91cf\u6216\u5bf9\u8c61\u7684\u4e00\u4e2a\u522b\u540d\u6765\u4f7f\u7528\uff0c\u6240\u4ee5\u5728\u88ab\u8c03\u51fd\u6570\u4e2d\u5bf9\u5f62\u53c2\u53d8\u91cf\u7684\u64cd\u4f5c\u5c31\u662f\u5bf9\u5176\u76f8\u5e94\u7684\u76ee\u6807\u5bf9\u8c61\uff08\u5728\u4e3b\u8c03\u51fd\u6570\u4e2d\uff09\u7684\u64cd\u4f5c\u3002", "\uff082\uff09\u4f7f\u7528\u5f15\u7528\u4f20\u9012\u51fd\u6570\u7684\u53c2\u6570\uff0c\u5728\u5185\u5b58\u4e2d\u5e76\u6ca1\u6709\u4ea7\u751f\u5b9e\u53c2\u7684\u526f\u672c\uff0c\u5b83\u662f\u76f4\u63a5\u5bf9\u5b9e\u53c2\u64cd\u4f5c\uff1b\u800c\u4f7f\u7528\u4e00\u822c\u53d8\u91cf\u4f20\u9012\u51fd\u6570\u7684\u53c2\u6570\uff0c\u5f53\u53d1\u751f\u51fd\u6570\u8c03\u7528\u65f6\uff0c\u9700\u8981\u7ed9\u5f62\u53c2\u5206\u914d\u5b58\u50a8\u5355\u5143\uff0c\u5f62\u53c2\u53d8\u91cf\u662f\u5b9e\u53c2\u53d8\u91cf\u7684\u526f\u672c\uff1b\u5982\u679c\u4f20\u9012\u7684\u662f\u5bf9\u8c61\uff0c\u8fd8\u5c06\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002\u56e0\u6b64\uff0c\u5f53\u53c2\u6570\u4f20\u9012\u7684\u6570\u636e\u8f83\u5927\u65f6\uff0c\u7528\u5f15\u7528\u6bd4\u7528\u4e00\u822c\u53d8\u91cf\u4f20\u9012\u53c2\u6570\u7684\u6548\u7387\u548c\u6240\u5360\u7a7a\u95f4\u90fd\u597d\u3002", "\uff083\uff09\u4f7f\u7528\u6307\u9488\u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570\u867d\u7136\u4e5f\u80fd\u8fbe\u5230\u4e0e\u4f7f\u7528\u5f15\u7528\u7684\u6548\u679c\uff0c\u4f46\u662f\uff0c\u5728\u88ab\u8c03\u51fd\u6570\u4e2d\u540c\u6837\u8981\u7ed9\u5f62\u53c2\u5206\u914d\u5b58\u50a8\u5355\u5143\uff0c\u4e14\u9700\u8981\u91cd\u590d\u4f7f\u7528\u201d*\u6307\u9488\u53d8\u91cf\u540d\u201d\u7684\u5f62\u5f0f\u8fdb\u884c\u8fd0\u7b97\uff0c\u8fd9\u5f88\u5bb9\u6613\u4ea7\u751f\u9519\u8bef\u4e14\u7a0b\u5e8f\u7684\u9605\u8bfb\u6027\u8f83\u5dee\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u5728\u4e3b\u8c03\u51fd\u6570\u7684\u8c03\u7528\u70b9\u5904\uff0c\u5fc5\u987b\u7528\u53d8\u91cf\u7684\u5730\u5740\u4f5c\u4e3a\u5b9e\u53c2\u3002\u800c\u5f15\u7528\u66f4\u5bb9\u6613\u4f7f\u7528\uff0c\u66f4\u6e05\u6670\u3002", "\u5982\u679c\u65e2\u8981\u5229\u7528\u5f15\u7528\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6548\u7387\uff0c\u53c8\u8981\u4fdd\u62a4\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u6570\u636e\u4e0d\u5728\u51fd\u6570\u4e2d\u88ab\u6539\u53d8\uff0c\u5c31\u5e94\u4f7f\u7528\u5e38\u5f15\u7528\u3002\u5e38\u5f15\u7528\u58f0\u660e\u65b9\u5f0f\uff1aconst \u7c7b\u578b\u6807\u8bc6\u7b26 &\u5f15\u7528\u540d=\u76ee\u6807\u53d8\u91cf\u540d\uff1b", "\u4f8b1", "int a ;", "\nconst int &ra=a;", "\nra=1; //\u9519\u8bef", "\na=1; //\u6b63\u786e", "\u4f8b2", "string foo( );", "\nvoid bar(string & s);", "\u90a3\u4e48\u4e0b\u9762\u7684\u8868\u8fbe\u5f0f\u5c06\u662f\u975e\u6cd5\u7684\uff1a", "bar(foo( ));", "\nbar(\u201chello world\u201d);", "\u539f\u56e0\u5728\u4e8efoo( )\u548c\u201dhello world\u201d\u4e32\u90fd\u4f1a\u4ea7\u751f\u4e00\u4e2a\u4e34\u65f6\u5bf9\u8c61\uff0c\u800c\u5728C++\u4e2d\uff0c\u8fd9\u4e9b\u4e34\u65f6\u5bf9\u8c61\u90fd\u662fconst\u7c7b\u578b\u7684\u3002\u56e0\u6b64\u4e0a\u9762\u7684\u8868\u8fbe\u5f0f\u5c31\u662f\u8bd5\u56fe\u5c06\u4e00\u4e2aconst\u7c7b\u578b\u7684\u5bf9\u8c61\u8f6c\u6362\u4e3a\u975econst\u7c7b\u578b\uff0c\u8fd9\u662f\u975e\u6cd5\u7684\u3002", "\u5f15\u7528\u578b\u53c2\u6570\u5e94\u8be5\u5728\u80fd\u88ab\u5b9a\u4e49\u4e3aconst\u7684\u60c5\u51b5\u4e0b\uff0c\u5c3d\u91cf\u5b9a\u4e49\u4e3aconst \u3002", "\n\u683c\u5f0f\uff1a\u7c7b\u578b\u6807\u8bc6\u7b26 &\u51fd\u6570\u540d\uff08\u5f62\u53c2\u5217\u8868\u53ca\u7c7b\u578b\u8bf4\u660e\uff09{ //\u51fd\u6570\u4f53 }", "\u597d\u5904\uff1a\u5728\u5185\u5b58\u4e2d\u4e0d\u4ea7\u751f\u88ab\u8fd4\u56de\u503c\u7684\u526f\u672c\uff1b\uff08\u6ce8\u610f\uff1a\u6b63\u662f\u56e0\u4e3a\u8fd9\u70b9\u539f\u56e0\uff0c\u6240\u4ee5\u8fd4\u56de\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u5f15\u7528\u662f\u4e0d\u53ef\u53d6\u7684\u3002\u56e0\u4e3a\u968f\u7740\u8be5\u5c40\u90e8\u53d8\u91cf\u751f\u5b58\u671f\u7684\u7ed3\u675f\uff0c\u76f8\u5e94\u7684\u5f15\u7528\u4e5f\u4f1a\u5931\u6548\uff0c\u4ea7\u751fruntime error!", "\u6ce8\u610f\u4e8b\u9879\uff1a", "\uff081\uff09\u4e0d\u80fd\u8fd4\u56de\u5c40\u90e8\u53d8\u91cf\u7684\u5f15\u7528\u3002\u8fd9\u6761\u53ef\u4ee5\u53c2\u7167Effective C++[1]\u7684Item 31\u3002\u4e3b\u8981\u539f\u56e0\u662f\u5c40\u90e8\u53d8\u91cf\u4f1a\u5728\u51fd\u6570\u8fd4\u56de\u540e\u88ab\u9500\u6bc1\uff0c\u56e0\u6b64\u88ab\u8fd4\u56de\u7684\u5f15\u7528\u5c31\u6210\u4e3a\u4e86\u201d\u65e0\u6240\u6307\u201d\u7684\u5f15\u7528\uff0c\u7a0b\u5e8f\u4f1a\u8fdb\u5165\u672a\u77e5\u72b6\u6001\u3002", "\uff082\uff09\u4e0d\u80fd\u8fd4\u56de\u51fd\u6570\u5185\u90e8new\u5206\u914d\u7684\u5185\u5b58\u7684\u5f15\u7528\u3002\u8fd9\u6761\u53ef\u4ee5\u53c2\u7167Effective C++[1]\u7684Item 31\u3002\u867d\u7136\u4e0d\u5b58\u5728\u5c40\u90e8\u53d8\u91cf\u7684\u88ab\u52a8\u9500\u6bc1\u95ee\u9898\uff0c\u53ef\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff08\u8fd4\u56de\u51fd\u6570\u5185\u90e8new\u5206\u914d\u5185\u5b58\u7684\u5f15\u7528\uff09\uff0c\u53c8\u9762\u4e34\u5176\u5b83\u5c34\u5c2c\u5c40\u9762\u3002\u4f8b\u5982\uff0c\u88ab\u51fd\u6570\u8fd4\u56de\u7684\u5f15\u7528\u53ea\u662f\u4f5c\u4e3a\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf\u51fa\u73b0\uff0c\u800c\u6ca1\u6709\u88ab\u8d4b\u4e88\u4e00\u4e2a\u5b9e\u9645\u7684\u53d8\u91cf\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5f15\u7528\u6240\u6307\u5411\u7684\u7a7a\u95f4\uff08\u7531new\u5206\u914d\uff09\u5c31\u65e0\u6cd5\u91ca\u653e\uff0c\u9020\u6210memory leak\u3002", "\uff083\uff09\u53ef\u4ee5\u8fd4\u56de\u7c7b\u6210\u5458\u7684\u5f15\u7528\uff0c\u4f46\u6700\u597d\u662fconst\u3002\u8fd9\u6761\u539f\u5219\u53ef\u4ee5\u53c2\u7167Effective C++[1]\u7684Item 30\u3002\u4e3b\u8981\u539f\u56e0\u662f\u5f53\u5bf9\u8c61\u7684\u5c5e\u6027\u662f\u4e0e\u67d0\u79cd\u4e1a\u52a1\u89c4\u5219\uff08business rule\uff09\u76f8\u5173\u8054\u7684\u65f6\u5019\uff0c\u5176\u8d4b\u503c\u5e38\u5e38\u4e0e\u67d0\u4e9b\u5176\u5b83\u5c5e\u6027\u6216\u8005\u5bf9\u8c61\u7684\u72b6\u6001\u6709\u5173\uff0c\u56e0\u6b64\u6709\u5fc5\u8981\u5c06\u8d4b\u503c\u64cd\u4f5c\u5c01\u88c5\u5728\u4e00\u4e2a\u4e1a\u52a1\u89c4\u5219\u5f53\u4e2d\u3002\u5982\u679c\u5176\u5b83\u5bf9\u8c61\u53ef\u4ee5\u83b7\u5f97\u8be5\u5c5e\u6027\u7684\u975e\u5e38\u91cf\u5f15\u7528\uff08\u6216\u6307\u9488\uff09\uff0c\u90a3\u4e48\u5bf9\u8be5\u5c5e\u6027\u7684\u5355\u7eaf\u8d4b\u503c\u5c31\u4f1a\u7834\u574f\u4e1a\u52a1\u89c4\u5219\u7684\u5b8c\u6574\u6027\u3002", "\uff084\uff09\u6d41\u64cd\u4f5c\u7b26\u91cd\u8f7d\u8fd4\u56de\u503c\u7533\u660e\u4e3a\u201c\u5f15\u7528\u201d\u7684\u4f5c\u7528\uff1a", "\u6d41\u64cd\u4f5c\u7b26<<\u548c>>\uff0c\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u7b26\u5e38\u5e38\u5e0c\u671b\u88ab\u8fde\u7eed\u4f7f\u7528\uff0c\u4f8b\u5982\uff1acout << \u201chello\u201d << endl;\u3000\u56e0\u6b64\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u7b26\u7684\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a\u4ecd\u7136\u652f\u6301\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u7b26\u7684\u6d41\u5f15\u7528\u3002\u53ef\u9009\u7684\u5176\u5b83\u65b9\u6848\u5305\u62ec\uff1a\u8fd4\u56de\u4e00\u4e2a\u6d41\u5bf9\u8c61\u548c\u8fd4\u56de\u4e00\u4e2a\u6d41\u5bf9\u8c61\u6307\u9488\u3002\u4f46\u662f\u5bf9\u4e8e\u8fd4\u56de\u4e00\u4e2a\u6d41\u5bf9\u8c61\uff0c\u7a0b\u5e8f\u5fc5\u987b\u91cd\u65b0\uff08\u62f7\u8d1d\uff09\u6784\u9020\u4e00\u4e2a\u65b0\u7684\u6d41\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fde\u7eed\u7684\u4e24\u4e2a<<\u64cd\u4f5c\u7b26\u5b9e\u9645\u4e0a\u662f\u9488\u5bf9\u4e0d\u540c\u5bf9\u8c61\u7684\uff01\u8fd9\u65e0\u6cd5\u8ba9\u4eba\u63a5\u53d7\u3002\u5bf9\u4e8e\u8fd4\u56de\u4e00\u4e2a\u6d41\u6307\u9488\u5219\u4e0d\u80fd\u8fde\u7eed\u4f7f\u7528<<\u64cd\u4f5c\u7b26\u3002\u56e0\u6b64\uff0c\u8fd4\u56de\u4e00\u4e2a\u6d41\u5bf9\u8c61\u5f15\u7528\u662f\u60df\u4e00\u9009\u62e9\u3002\u8fd9\u4e2a\u552f\u4e00\u9009\u62e9\u5f88\u5173\u952e\uff0c\u5b83\u8bf4\u660e\u4e86\u5f15\u7528\u7684\u91cd\u8981\u6027\u4ee5\u53ca\u65e0\u53ef\u66ff\u4ee3\u6027\uff0c\u4e5f\u8bb8\u8fd9\u5c31\u662fC++\u8bed\u8a00\u4e2d\u5f15\u5165\u5f15\u7528\u8fd9\u4e2a\u6982\u5ff5\u7684\u539f\u56e0\u5427\u3002\u8d4b\u503c\u64cd\u4f5c\u7b26=\u3002\u8fd9\u4e2a\u64cd\u4f5c\u7b26\u8c61\u6d41\u64cd\u4f5c\u7b26\u4e00\u6837\uff0c\u662f\u53ef\u4ee5\u8fde\u7eed\u4f7f\u7528\u7684\uff0c\u4f8b\u5982\uff1ax = j = 10;\u6216\u8005(x=10)=100;\u8d4b\u503c\u64cd\u4f5c\u7b26\u7684\u8fd4\u56de\u503c\u5fc5\u987b\u662f\u4e00\u4e2a\u5de6\u503c\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u88ab\u7ee7\u7eed\u8d4b\u503c\u3002\u56e0\u6b64\u5f15\u7528\u6210\u4e86\u8fd9\u4e2a\u64cd\u4f5c\u7b26\u7684\u60df\u4e00\u8fd4\u56de\u503c\u9009\u62e9\u3002", "\u4f8b3", "\uff03i nclude <iostream.h>", "\nint &put(int n);", "\nint vals[10];", "\nint error=-1;", "\nvoid main()", "\n{", "\nput(0)=10; //\u4ee5put(0)\u51fd\u6570\u503c\u4f5c\u4e3a\u5de6\u503c\uff0c\u7b49\u4ef7\u4e8evals[0]=10;", "\nput(9)=20; //\u4ee5put(9)\u51fd\u6570\u503c\u4f5c\u4e3a\u5de6\u503c\uff0c\u7b49\u4ef7\u4e8evals[9]=20;", "\ncout<<vals[0];", "\ncout<<vals[9];", "\n}", "\nint &put(int n)", "\n{", "\nif (n>=0 && n<=9 ) return vals[n];", "\nelse { cout<<\u201dsubscript error\u201d; return error; }", "\n}", "\uff085\uff09\u5728\u53e6\u5916\u7684\u4e00\u4e9b\u64cd\u4f5c\u7b26\u4e2d\uff0c\u5374\u5343\u4e07\u4e0d\u80fd\u8fd4\u56de\u5f15\u7528\uff1a+-*/ \u56db\u5219\u8fd0\u7b97\u7b26\u3002\u5b83\u4eec\u4e0d\u80fd\u8fd4\u56de\u5f15\u7528\uff0cEffective C++[1]\u7684Item23\u8be6\u7ec6\u7684\u8ba8\u8bba\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\u4e3b\u8981\u539f\u56e0\u662f\u8fd9\u56db\u4e2a\u64cd\u4f5c\u7b26\u6ca1\u6709side effect\uff0c\u56e0\u6b64\uff0c\u5b83\u4eec\u5fc5\u987b\u6784\u9020\u4e00\u4e2a\u5bf9\u8c61\u4f5c\u4e3a\u8fd4\u56de\u503c\uff0c\u53ef\u9009\u7684\u65b9\u6848\u5305\u62ec\uff1a\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\u3001\u8fd4\u56de\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u5f15\u7528\uff0c\u8fd4\u56de\u4e00\u4e2anew\u5206\u914d\u7684\u5bf9\u8c61\u7684\u5f15\u7528\u3001\u8fd4\u56de\u4e00\u4e2a\u9759\u6001\u5bf9\u8c61\u5f15\u7528\u3002\u6839\u636e\u524d\u9762\u63d0\u5230\u7684\u5f15\u7528\u4f5c\u4e3a\u8fd4\u56de\u503c\u7684\u4e09\u4e2a\u89c4\u5219\uff0c\u7b2c2\u30013\u4e24\u4e2a\u65b9\u6848\u90fd\u88ab\u5426\u51b3\u4e86\u3002\u9759\u6001\u5bf9\u8c61\u7684\u5f15\u7528\u53c8\u56e0\u4e3a((a+b) == (c+d))\u4f1a\u6c38\u8fdc\u4e3atrue\u800c\u5bfc\u81f4\u9519\u8bef\u3002\u6240\u4ee5\u53ef\u9009\u7684\u53ea\u5269\u4e0b\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\u4e86\u3002", "\n\u5f15\u7528\u662f\u9664\u6307\u9488\u5916\u53e6\u4e00\u4e2a\u53ef\u4ee5\u4ea7\u751f\u591a\u6001\u6548\u679c\u7684\u624b\u6bb5\u3002\u8fd9\u610f\u5473\u7740\uff0c\u4e00\u4e2a\u57fa\u7c7b\u7684\u5f15\u7528\u53ef\u4ee5\u6307\u5411\u5b83\u7684\u6d3e\u751f\u7c7b\u5b9e\u4f8b\u3002", "\u4f8b4", "Class A; Class B : Class A{\u2026}; B b; A& ref = b;", "\u6307\u9488\u901a\u8fc7\u67d0\u4e2a\u6307\u9488\u53d8\u91cf\u6307\u5411\u4e00\u4e2a\u5bf9\u8c61\u540e\uff0c\u5bf9\u5b83\u6240\u6307\u5411\u7684\u53d8\u91cf\u95f4\u63a5\u64cd\u4f5c\u3002\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u6307\u9488\uff0c\u7a0b\u5e8f\u7684\u53ef\u8bfb\u6027\u5dee\uff1b\u800c\u5f15\u7528\u672c\u8eab\u5c31\u662f\u76ee\u6807\u53d8\u91cf\u7684\u522b\u540d\uff0c\u5bf9\u5f15\u7528\u7684\u64cd\u4f5c\u5c31\u662f\u5bf9\u76ee\u6807\u53d8\u91cf\u7684\u64cd\u4f5c\u3002\u6b64\u5916\uff0c\u5c31\u662f\u4e0a\u9762\u63d0\u5230\u7684\u5bf9\u51fd\u6570\u4f20ref\u548cpointer\u7684\u533a\u522b\u3002", "\u6d41\u64cd\u4f5c\u7b26<<\u548c>>\u3001\u8d4b\u503c\u64cd\u4f5c\u7b26=\u7684\u8fd4\u56de\u503c\u3001\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u7684\u53c2\u6570\u3001\u8d4b\u503c\u64cd\u4f5c\u7b26=\u7684\u53c2\u6570\u3001\u5176\u5b83\u60c5\u51b5\u90fd\u63a8\u8350\u4f7f\u7528\u5f15\u7528\u3002", "\u4ee5\u4e0a 2-8 \u53c2\u8003\uff1ahttp://blog.csdn.net/wfwd/archive/2006/05/30/763551.aspx", "\n1. \u7ed3\u6784\u548c\u8054\u5408\u90fd\u662f\u7531\u591a\u4e2a\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u6210\u5458\u7ec4\u6210, \u4f46\u5728\u4efb\u4f55\u540c\u4e00\u65f6\u523b, \u8054\u5408\u4e2d\u53ea\u5b58\u653e\u4e86\u4e00\u4e2a\u88ab\u9009\u4e2d\u7684\u6210\u5458\uff08\u6240\u6709\u6210\u5458\u5171\u7528\u4e00\u5757\u5730\u5740\u7a7a\u95f4\uff09, \u800c\u7ed3\u6784\u7684\u6240\u6709\u6210\u5458\u90fd\u5b58\u5728\uff08\u4e0d\u540c\u6210\u5458\u7684\u5b58\u653e\u5730\u5740\u4e0d\u540c\uff09\u3002", "\n2. \u5bf9\u4e8e\u8054\u5408\u7684\u4e0d\u540c\u6210\u5458\u8d4b\u503c, \u5c06\u4f1a\u5bf9\u5176\u5b83\u6210\u5458\u91cd\u5199, \u539f\u6765\u6210\u5458\u7684\u503c\u5c31\u4e0d\u5b58\u5728\u4e86, \u800c\u5bf9\u4e8e\u7ed3\u6784\u7684\u4e0d\u540c\u6210\u5458\u8d4b\u503c\u662f\u4e92\u4e0d\u5f71\u54cd\u7684\u3002", "\na)", "\uff03i nclude <stdio.h>", "\nunion", "\n{", "\nint i;", "\nchar x[2];", "\n}a;", "void main()", "\n{", "\na.x[0] = 10;", "\na.x[1] = 1;", "\nprintf(\u201c%d\u201d,a.i);", "\n}", "\n\u7b54\u6848\uff1a266 (\u4f4e\u4f4d\u4f4e\u5730\u5740\uff0c\u9ad8\u4f4d\u9ad8\u5730\u5740\uff0c\u5185\u5b58\u5360\u7528\u60c5\u51b5\u662fOx010A\uff09", "b)", "main()", "\n{", "\nunion{ /*\u5b9a\u4e49\u4e00\u4e2a\u8054\u5408*/", "\nint i;", "\nstruct{ /*\u5728\u8054\u5408\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784*/", "\nchar first;", "\nchar second;", "\n}half;", "\n}number;", "\nnumber.i=0\u00d74241; /*\u8054\u5408\u6210\u5458\u8d4b\u503c*/", "\nprintf(\u201c%c%c\\n\u201d, number.half.first, mumber.half.second);", "\nnumber.half.first=\u2019a'; /*\u8054\u5408\u4e2d\u7ed3\u6784\u6210\u5458\u8d4b\u503c*/", "\nnumber.half.second=\u2019b';", "\nprintf(\u201c%x\\n\u201d, number.i);", "\ngetch();", "\n}", "\n\u7b54\u6848\uff1a AB (0\u00d741\u5bf9\u5e94\u2019A',\u662f\u4f4e\u4f4d\uff1bOx42\u5bf9\u5e94\u2019B',\u662f\u9ad8\u4f4d\uff09", "6261 (number.i\u548cnumber.half\u5171\u7528\u4e00\u5757\u5730\u5740\u7a7a\u95f4\uff09", "\u7b54\u6848\uff1a", "\nchar *strcpy(char *strDest, const char *strSrc)", "\n{", "\nif ( strDest == NULL || strSrc == NULL)", "\nreturn NULL ;", "\nif ( strDest == strSrc)", "\nreturn strDest ;", "\nchar *tempptr = strDest ;", "\nwhile( (*strDest++ = *strSrc++) != \u2018\\0\u2019)", "\nreturn tempptr ;", "\n}", "\n\u7b54\uff1a\u9632\u6b62\u8be5\u5934\u6587\u4ef6\u88ab\u91cd\u590d\u5f15\u7528\u3002", "\n\u7b54\uff1a\u524d\u8005\u662f\u4eceStandard Library\u7684\u8def\u5f84\u5bfb\u627e\u548c\u5f15\u7528file.h\uff0c\u800c\u540e\u8005\u662f\u4ece\u5f53\u524d\u5de5\u4f5c\u8def\u5f84\u641c\u5bfb\u5e76\u5f15\u7528file.h\u3002", "\u9996\u5148\uff0c\u4f5c\u4e3aextern\u662fC/C++\u8bed\u8a00\u4e2d\u8868\u660e\u51fd\u6570\u548c\u5168\u5c40\u53d8\u91cf\u4f5c\u7528\u8303\u56f4\uff08\u53ef\u89c1\u6027\uff09\u7684\u5173\u952e\u5b57\uff0c\u8be5\u5173\u952e\u5b57\u544a\u8bc9\u7f16\u8bd1\u5668\uff0c\u5176\u58f0\u660e\u7684\u51fd\u6570\u548c\u53d8\u91cf\u53ef\u4ee5\u5728\u672c\u6a21\u5757\u6216\u5176\u5b83\u6a21\u5757\u4e2d\u4f7f\u7528\u3002", "\u901a\u5e38\uff0c\u5728\u6a21\u5757\u7684\u5934\u6587\u4ef6\u4e2d\u5bf9\u672c\u6a21\u5757\u63d0\u4f9b\u7ed9\u5176\u5b83\u6a21\u5757\u5f15\u7528\u7684\u51fd\u6570\u548c\u5168\u5c40\u53d8\u91cf\u4ee5\u5173\u952e\u5b57extern\u58f0\u660e\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6a21\u5757B\u6b32\u5f15\u7528\u8be5\u6a21\u5757A\u4e2d\u5b9a\u4e49\u7684\u5168\u5c40\u53d8\u91cf\u548c\u51fd\u6570\u65f6\u53ea\u9700\u5305\u542b\u6a21\u5757A\u7684\u5934\u6587\u4ef6\u5373\u53ef\u3002\u8fd9\u6837\uff0c\u6a21\u5757B\u4e2d\u8c03\u7528\u6a21\u5757A\u4e2d\u7684\u51fd\u6570\u65f6\uff0c\u5728\u7f16\u8bd1\u9636\u6bb5\uff0c\u6a21\u5757B\u867d\u7136\u627e\u4e0d\u5230\u8be5\u51fd\u6570\uff0c\u4f46\u662f\u5e76\u4e0d\u4f1a\u62a5\u9519\uff1b\u5b83\u4f1a\u5728\u8fde\u63a5\u9636\u6bb5\u4e2d\u4ece\u6a21\u5757A\u7f16\u8bd1\u751f\u6210\u7684\u76ee\u6807\u4ee3\u7801\u4e2d\u627e\u5230\u6b64\u51fd\u6570", "extern \u201cC\u201d\u662f\u8fde\u63a5\u7533\u660e(linkage declaration),\u88abextern \u201cC\u201d\u4fee\u9970\u7684\u53d8\u91cf\u548c\u51fd\u6570\u662f\u6309\u7167C\u8bed\u8a00\u65b9\u5f0f\u7f16\u8bd1\u548c\u8fde\u63a5\u7684,\u6765\u770b\u770bC++\u4e2d\u5bf9\u7c7b\u4f3cC\u7684\u51fd\u6570\u662f\u600e\u6837\u7f16\u8bd1\u7684\uff1a", "\u4f5c\u4e3a\u4e00\u79cd\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\uff0cC++\u652f\u6301\u51fd\u6570\u91cd\u8f7d\uff0c\u800c\u8fc7\u7a0b\u5f0f\u8bed\u8a00C\u5219\u4e0d\u652f\u6301\u3002\u51fd\u6570\u88abC++\u7f16\u8bd1\u540e\u5728\u7b26\u53f7\u5e93\u4e2d\u7684\u540d\u5b57\u4e0eC\u8bed\u8a00\u7684\u4e0d\u540c\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u67d0\u4e2a\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a", "void foo( int x, int y );", "\u8be5\u51fd\u6570\u88abC\u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u5728\u7b26\u53f7\u5e93\u4e2d\u7684\u540d\u5b57\u4e3a_foo\uff0c\u800cC++\u7f16\u8bd1\u5668\u5219\u4f1a\u4ea7\u751f\u50cf_foo_int_int\u4e4b\u7c7b\u7684\u540d\u5b57\uff08\u4e0d\u540c\u7684\u7f16\u8bd1\u5668\u53ef\u80fd\u751f\u6210\u7684\u540d\u5b57\u4e0d\u540c\uff0c\u4f46\u662f\u90fd\u91c7\u7528\u4e86\u76f8\u540c\u7684\u673a\u5236\uff0c\u751f\u6210\u7684\u65b0\u540d\u5b57\u79f0\u4e3a\u201cmangled name\u201d\uff09\u3002", "_foo_int_int \u8fd9\u6837\u7684\u540d\u5b57\u5305\u542b\u4e86\u51fd\u6570\u540d\u3001\u51fd\u6570\u53c2\u6570\u6570\u91cf\u53ca\u7c7b\u578b\u4fe1\u606f\uff0cC++\u5c31\u662f\u9760\u8fd9\u79cd\u673a\u5236\u6765\u5b9e\u73b0\u51fd\u6570\u91cd\u8f7d\u7684\u3002\u4f8b\u5982\uff0c\u5728C++\u4e2d\uff0c\u51fd\u6570void foo( int x, int y )\u4e0evoid foo( int x, float y )\u7f16\u8bd1\u751f\u6210\u7684\u7b26\u53f7\u662f\u4e0d\u76f8\u540c\u7684\uff0c\u540e\u8005\u4e3a_foo_int_float\u3002", "\u540c\u6837\u5730\uff0cC++\u4e2d\u7684\u53d8\u91cf\u9664\u652f\u6301\u5c40\u90e8\u53d8\u91cf\u5916\uff0c\u8fd8\u652f\u6301\u7c7b\u6210\u5458\u53d8\u91cf\u548c\u5168\u5c40\u53d8\u91cf\u3002\u7528\u6237\u6240\u7f16\u5199\u7a0b\u5e8f\u7684\u7c7b\u6210\u5458\u53d8\u91cf\u53ef\u80fd\u4e0e\u5168\u5c40\u53d8\u91cf\u540c\u540d\uff0c\u6211\u4eec\u4ee5\u201d.\u201d\u6765\u533a\u5206\u3002\u800c\u672c\u8d28\u4e0a\uff0c\u7f16\u8bd1\u5668\u5728\u8fdb\u884c\u7f16\u8bd1\u65f6\uff0c\u4e0e\u51fd\u6570\u7684\u5904\u7406\u76f8\u4f3c\uff0c\u4e5f\u4e3a\u7c7b\u4e2d\u7684\u53d8\u91cf\u53d6\u4e86\u4e00\u4e2a\u72ec\u4e00\u65e0\u4e8c\u7684\u540d\u5b57\uff0c\u8fd9\u4e2a\u540d\u5b57\u4e0e\u7528\u6237\u7a0b\u5e8f\u4e2d\u540c\u540d\u7684\u5168\u5c40\u53d8\u91cf\u540d\u5b57\u4e0d\u540c\u3002", "\u672a\u52a0extern \u201cC\u201d\u58f0\u660e\u65f6\u7684\u8fde\u63a5\u65b9\u5f0f", "\u5047\u8bbe\u5728C++\u4e2d\uff0c\u6a21\u5757A\u7684\u5934\u6587\u4ef6\u5982\u4e0b\uff1a", "// \u6a21\u5757A\u5934\u6587\u4ef6\u3000moduleA.h", "\n#ifndef MODULE_A_H", "\n#define MODULE_A_H", "\nint foo( int x, int y );", "\n#endif", "\u5728\u6a21\u5757B\u4e2d\u5f15\u7528\u8be5\u51fd\u6570\uff1a", "// \u6a21\u5757B\u5b9e\u73b0\u6587\u4ef6\u3000moduleB.cpp", "\n\uff03i nclude \u201cmoduleA.h\u201d", "\nfoo(2,3);", "\u5b9e\u9645\u4e0a\uff0c\u5728\u8fde\u63a5\u9636\u6bb5\uff0c\u8fde\u63a5\u5668\u4f1a\u4ece\u6a21\u5757A\u751f\u6210\u7684\u76ee\u6807\u6587\u4ef6moduleA.obj\u4e2d\u5bfb\u627e_foo_int_int\u8fd9\u6837\u7684\u7b26\u53f7\uff01", "\u52a0extern \u201cC\u201d\u58f0\u660e\u540e\u7684\u7f16\u8bd1\u548c\u8fde\u63a5\u65b9\u5f0f", "\u52a0extern \u201cC\u201d\u58f0\u660e\u540e\uff0c\u6a21\u5757A\u7684\u5934\u6587\u4ef6\u53d8\u4e3a\uff1a", "// \u6a21\u5757A\u5934\u6587\u4ef6\u3000moduleA.h", "\n#ifndef MODULE_A_H", "\n#define MODULE_A_H", "\nextern \u201cC\u201d int foo( int x, int y );", "\n#endif", "\u5728\u6a21\u5757B\u7684\u5b9e\u73b0\u6587\u4ef6\u4e2d\u4ecd\u7136\u8c03\u7528foo( 2,3 )\uff0c\u5176\u7ed3\u679c\u662f\uff1a", "\n\uff081\uff09\u6a21\u5757A\u7f16\u8bd1\u751f\u6210foo\u7684\u76ee\u6807\u4ee3\u7801\u65f6\uff0c\u6ca1\u6709\u5bf9\u5176\u540d\u5b57\u8fdb\u884c\u7279\u6b8a\u5904\u7406\uff0c\u91c7\u7528\u4e86C\u8bed\u8a00\u7684\u65b9\u5f0f\uff1b", "\uff082\uff09\u8fde\u63a5\u5668\u5728\u4e3a\u6a21\u5757B\u7684\u76ee\u6807\u4ee3\u7801\u5bfb\u627efoo(2,3)\u8c03\u7528\u65f6\uff0c\u5bfb\u627e\u7684\u662f\u672a\u7ecf\u4fee\u6539\u7684\u7b26\u53f7\u540d_foo\u3002", "\u5982\u679c\u5728\u6a21\u5757A\u4e2d\u51fd\u6570\u58f0\u660e\u4e86foo\u4e3aextern \u201cC\u201d\u7c7b\u578b\uff0c\u800c\u6a21\u5757B\u4e2d\u5305\u542b\u7684\u662fextern int foo( int x, int y ) \uff0c\u5219\u6a21\u5757B\u627e\u4e0d\u5230\u6a21\u5757A\u4e2d\u7684\u51fd\u6570\uff1b\u53cd\u4e4b\u4ea6\u7136\u3002", "\u6240\u4ee5\uff0c\u53ef\u4ee5\u7528\u4e00\u53e5\u8bdd\u6982\u62ecextern \u201cC\u201d\u8fd9\u4e2a\u58f0\u660e\u7684\u771f\u5b9e\u76ee\u7684\uff08\u4efb\u4f55\u8bed\u8a00\u4e2d\u7684\u4efb\u4f55\u8bed\u6cd5\u7279\u6027\u7684\u8bde\u751f\u90fd\u4e0d\u662f\u968f\u610f\u800c\u4e3a\u7684\uff0c\u6765\u6e90\u4e8e\u771f\u5b9e\u4e16\u754c\u7684\u9700\u6c42\u9a71\u52a8\u3002\u6211\u4eec\u5728\u601d\u8003\u95ee\u9898\u65f6\uff0c\u4e0d\u80fd\u53ea\u505c\u7559\u5728\u8fd9\u4e2a\u8bed\u8a00\u662f\u600e\u4e48\u505a\u7684\uff0c\u8fd8\u8981\u95ee\u4e00\u95ee\u5b83\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u505a\uff0c\u52a8\u673a\u662f\u4ec0\u4e48\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u66f4\u6df1\u5165\u5730\u7406\u89e3\u8bb8\u591a\u95ee\u9898\uff09\uff1a\u5b9e\u73b0C++\u4e0eC\u53ca\u5176\u5b83\u8bed\u8a00\u7684\u6df7\u5408\u7f16\u7a0b\u3002", "\u660e\u767d\u4e86C++\u4e2dextern \u201cC\u201d\u7684\u8bbe\u7acb\u52a8\u673a\uff0c\u6211\u4eec\u4e0b\u9762\u6765\u5177\u4f53\u5206\u6790extern \u201cC\u201d\u901a\u5e38\u7684\u4f7f\u7528\u6280\u5de7\uff1a", "extern \u201cC\u201d\u7684\u60ef\u7528\u6cd5", "\uff081\uff09\u5728C++\u4e2d\u5f15\u7528C\u8bed\u8a00\u4e2d\u7684\u51fd\u6570\u548c\u53d8\u91cf\uff0c\u5728\u5305\u542bC\u8bed\u8a00\u5934\u6587\u4ef6\uff08\u5047\u8bbe\u4e3acExample.h\uff09\u65f6\uff0c\u9700\u8fdb\u884c\u4e0b\u5217\u5904\u7406\uff1a", "extern \u201cC\u201d", "\n{", "\n\uff03i nclude \u201ccExample.h\u201d", "\n}", "\u800c\u5728C\u8bed\u8a00\u7684\u5934\u6587\u4ef6\u4e2d\uff0c\u5bf9\u5176\u5916\u90e8\u51fd\u6570\u53ea\u80fd\u6307\u5b9a\u4e3aextern\u7c7b\u578b\uff0cC\u8bed\u8a00\u4e2d\u4e0d\u652f\u6301extern \u201cC\u201d\u58f0\u660e\uff0c\u5728.c\u6587\u4ef6\u4e2d\u5305\u542b\u4e86extern \u201cC\u201d\u65f6\u4f1a\u51fa\u73b0\u7f16\u8bd1\u8bed\u6cd5\u9519\u8bef\u3002", "C++\u5f15\u7528C\u51fd\u6570\u4f8b\u5b50\u5de5\u7a0b\u4e2d\u5305\u542b\u7684\u4e09\u4e2a\u6587\u4ef6\u7684\u6e90\u4ee3\u7801\u5982\u4e0b\uff1a", "/* c\u8bed\u8a00\u5934\u6587\u4ef6\uff1acExample.h */", "\n#ifndef C_EXAMPLE_H", "\n#define C_EXAMPLE_H", "\nextern int add(int x,int y);", "\n#endif", "/* c\u8bed\u8a00\u5b9e\u73b0\u6587\u4ef6\uff1acExample.c */", "\n\uff03i nclude \u201ccExample.h\u201d", "\nint add( int x, int y )", "\n{", "\nreturn x + y;", "\n}", "// c++\u5b9e\u73b0\u6587\u4ef6\uff0c\u8c03\u7528add\uff1acppFile.cpp", "\nextern \u201cC\u201d", "\n{", "\n\uff03i nclude \u201ccExample.h\u201d", "\n}", "\nint main(int argc, char* argv[])", "\n{", "\nadd(2,3);", "\nreturn 0;", "\n}", "\u5982\u679cC++\u8c03\u7528\u4e00\u4e2aC\u8bed\u8a00\u7f16\u5199\u7684.DLL\u65f6\uff0c\u5f53\u5305\u62ec.DLL\u7684\u5934\u6587\u4ef6\u6216\u58f0\u660e\u63a5\u53e3\u51fd\u6570\u65f6\uff0c\u5e94\u52a0extern \u201cC\u201d {\u3000}\u3002", "\uff082\uff09\u5728C\u4e2d\u5f15\u7528C++\u8bed\u8a00\u4e2d\u7684\u51fd\u6570\u548c\u53d8\u91cf\u65f6\uff0cC++\u7684\u5934\u6587\u4ef6\u9700\u6dfb\u52a0extern \u201cC\u201d\uff0c\u4f46\u662f\u5728C\u8bed\u8a00\u4e2d\u4e0d\u80fd\u76f4\u63a5\u5f15\u7528\u58f0\u660e\u4e86extern \u201cC\u201d\u7684\u8be5\u5934\u6587\u4ef6\uff0c\u5e94\u8be5\u4ec5\u5c06C\u6587\u4ef6\u4e2d\u5c06C++\u4e2d\u5b9a\u4e49\u7684extern \u201cC\u201d\u51fd\u6570\u58f0\u660e\u4e3aextern\u7c7b\u578b\u3002", "C\u5f15\u7528C++\u51fd\u6570\u4f8b\u5b50\u5de5\u7a0b\u4e2d\u5305\u542b\u7684\u4e09\u4e2a\u6587\u4ef6\u7684\u6e90\u4ee3\u7801\u5982\u4e0b\uff1a", "//C++\u5934\u6587\u4ef6 cppExample.h", "\n#ifndef CPP_EXAMPLE_H", "\n#define CPP_EXAMPLE_H", "\nextern \u201cC\u201d int add( int x, int y );", "\n#endif", "//C++\u5b9e\u73b0\u6587\u4ef6 cppExample.cpp", "\n\uff03i nclude \u201ccppExample.h\u201d", "\nint add( int x, int y )", "\n{", "\nreturn x + y;", "\n}", "/* C\u5b9e\u73b0\u6587\u4ef6 cFile.c", "\n/* \u8fd9\u6837\u4f1a\u7f16\u8bd1\u51fa\u9519\uff1a\uff03i nclude \u201ccExample.h\u201d */", "\nextern int add( int x, int y );", "\nint main( int argc, char* argv[] )", "\n{", "\nadd( 2, 3 );", "\nreturn 0;", "\n}", "\u6d89\u53ca\u5230UML\u4e2d\u7684\u4e00\u4e9b\u6982\u5ff5\uff1a\u5173\u8054\u662f\u8868\u793a\u4e24\u4e2a\u7c7b\u7684\u4e00\u822c\u6027\u8054\u7cfb\uff0c\u6bd4\u5982\u201c\u5b66\u751f\u201d\u548c\u201c\u8001\u5e08\u201d\u5c31\u662f\u4e00\u79cd\u5173\u8054\u5173\u7cfb\uff1b\u805a\u5408\u8868\u793ahas-a\u7684\u5173\u7cfb\uff0c\u662f\u4e00\u79cd\u76f8\u5bf9\u677e\u6563\u7684\u5173\u7cfb\uff0c\u805a\u5408\u7c7b\u4e0d\u9700\u8981\u5bf9\u88ab\u805a\u5408\u7c7b\u8d1f\u8d23\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u7528\u7a7a\u7684\u83f1\u5f62\u8868\u793a\u805a\u5408\u5173\u7cfb\uff1a", "\u4ece\u5b9e\u73b0\u7684\u89d2\u5ea6\u8bb2\uff0c\u805a\u5408\u53ef\u4ee5\u8868\u793a\u4e3a:", "class A {\u2026} class B { A* a; \u2026..}", "\u800c\u7ec4\u5408\u8868\u793acontains-a\u7684\u5173\u7cfb\uff0c\u5173\u8054\u6027\u5f3a\u4e8e\u805a\u5408\uff1a\u7ec4\u5408\u7c7b\u4e0e\u88ab\u7ec4\u5408\u7c7b\u6709\u76f8\u540c\u7684\u751f\u547d\u5468\u671f\uff0c\u7ec4\u5408\u7c7b\u8981\u5bf9\u88ab\u7ec4\u5408\u7c7b\u8d1f\u8d23\uff0c\u91c7\u7528\u5b9e\u5fc3\u7684\u83f1\u5f62\u8868\u793a\u7ec4\u5408\u5173\u7cfb\uff1a", "\u5b9e\u73b0\u7684\u5f62\u5f0f\u662f:", "class A{\u2026} class B{ A a; \u2026}", "\u53c2\u8003\u6587\u7ae0\uff1ahttp://blog.csdn.net/wfwd/archive/2006/05/30/763753.aspx", "http://blog.csdn.net/wfwd/archive/2006/05/30/763760.aspx", "\n1. \u5c01\u88c5\uff1a\u5c06\u5ba2\u89c2\u4e8b\u7269\u62bd\u8c61\u6210\u7c7b\uff0c\u6bcf\u4e2a\u7c7b\u5bf9\u81ea\u8eab\u7684\u6570\u636e\u548c\u65b9\u6cd5\u5b9e\u884cprotection(private, protected,public)", "2. \u7ee7\u627f\uff1a\u5e7f\u4e49\u7684\u7ee7\u627f\u6709\u4e09\u79cd\u5b9e\u73b0\u5f62\u5f0f\uff1a\u5b9e\u73b0\u7ee7\u627f\uff08\u6307\u4f7f\u7528\u57fa\u7c7b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u800c\u65e0\u9700\u989d\u5916\u7f16\u7801\u7684\u80fd\u529b\uff09\u3001\u53ef\u89c6\u7ee7\u627f\uff08\u5b50\u7a97\u4f53\u4f7f\u7528\u7236\u7a97\u4f53\u7684\u5916\u89c2\u548c\u5b9e\u73b0\u4ee3\u7801\uff09\u3001\u63a5\u53e3\u7ee7\u627f\uff08\u4ec5\u4f7f\u7528\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u5b9e\u73b0\u6ede\u540e\u5230\u5b50\u7c7b\u5b9e\u73b0\uff09\u3002\u524d\u4e24\u79cd\uff08\u7c7b\u7ee7\u627f\uff09\u548c\u540e\u4e00\u79cd\uff08\u5bf9\u8c61\u7ec4\u5408=>\u63a5\u53e3\u7ee7\u627f\u4ee5\u53ca\u7eaf\u865a\u51fd\u6570\uff09\u6784\u6210\u4e86\u529f\u80fd\u590d\u7528\u7684\u4e24\u79cd\u65b9\u5f0f\u3002", "3. \u591a\u6001\uff1a\u662f\u5c06\u7236\u5bf9\u8c61\u8bbe\u7f6e\u6210\u4e3a\u548c\u4e00\u4e2a\u6216\u66f4\u591a\u7684\u4ed6\u7684\u5b50\u5bf9\u8c61\u76f8\u7b49\u7684\u6280\u672f\uff0c\u8d4b\u503c\u4e4b\u540e\uff0c\u7236\u5bf9\u8c61\u5c31\u53ef\u4ee5\u6839\u636e\u5f53\u524d\u8d4b\u503c\u7ed9\u5b83\u7684\u5b50\u5bf9\u8c61\u7684\u7279\u6027\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u8fd0\u4f5c\u3002\u7b80\u5355\u7684\u8bf4\uff0c\u5c31\u662f\u4e00\u53e5\u8bdd\uff1a\u5141\u8bb8\u5c06\u5b50\u7c7b\u7c7b\u578b\u7684\u6307\u9488\u8d4b\u503c\u7ed9\u7236\u7c7b\u7c7b\u578b\u7684\u6307\u9488\u3002", "\n\u5e38\u8003\u7684\u9898\u76ee\u3002\u4ece\u5b9a\u4e49\u4e0a\u6765\u8bf4\uff1a", "\u91cd\u8f7d\uff1a\u662f\u6307\u5141\u8bb8\u5b58\u5728\u591a\u4e2a\u540c\u540d\u51fd\u6570\uff0c\u800c\u8fd9\u4e9b\u51fd\u6570\u7684\u53c2\u6570\u8868\u4e0d\u540c\uff08\u6216\u8bb8\u53c2\u6570\u4e2a\u6570\u4e0d\u540c\uff0c\u6216\u8bb8\u53c2\u6570\u7c7b\u578b\u4e0d\u540c\uff0c\u6216\u8bb8\u4e24\u8005\u90fd\u4e0d\u540c\uff09\u3002", "\u91cd\u5199\uff1a\u662f\u6307\u5b50\u7c7b\u91cd\u65b0\u5b9a\u4e49\u590d\u7c7b\u865a\u51fd\u6570\u7684\u65b9\u6cd5\u3002", "\u4ece\u5b9e\u73b0\u539f\u7406\u4e0a\u6765\u8bf4\uff1a", "\u91cd\u8f7d\uff1a\u7f16\u8bd1\u5668\u6839\u636e\u51fd\u6570\u4e0d\u540c\u7684\u53c2\u6570\u8868\uff0c\u5bf9\u540c\u540d\u51fd\u6570\u7684\u540d\u79f0\u505a\u4fee\u9970\uff0c\u7136\u540e\u8fd9\u4e9b\u540c\u540d\u51fd\u6570\u5c31\u6210\u4e86\u4e0d\u540c\u7684\u51fd\u6570\uff08\u81f3\u5c11\u5bf9\u4e8e\u7f16\u8bd1\u5668\u6765\u8bf4\u662f\u8fd9\u6837\u7684\uff09\u3002\u5982\uff0c\u6709\u4e24\u4e2a\u540c\u540d\u51fd\u6570\uff1afunction func(p:integer):integer;\u548cfunction func(p:string):integer;\u3002\u90a3\u4e48\u7f16\u8bd1\u5668\u505a\u8fc7\u4fee\u9970\u540e\u7684\u51fd\u6570\u540d\u79f0\u53ef\u80fd\u662f\u8fd9\u6837\u7684\uff1aint_func\u3001str_func\u3002\u5bf9\u4e8e\u8fd9\u4e24\u4e2a\u51fd\u6570\u7684\u8c03\u7528\uff0c\u5728\u7f16\u8bd1\u5668\u95f4\u5c31\u5df2\u7ecf\u786e\u5b9a\u4e86\uff0c\u662f\u9759\u6001\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u4eec\u7684\u5730\u5740\u5728\u7f16\u8bd1\u671f\u5c31\u7ed1\u5b9a\u4e86\uff08\u65e9\u7ed1\u5b9a\uff09\uff0c\u56e0\u6b64\uff0c\u91cd\u8f7d\u548c\u591a\u6001\u65e0\u5173\uff01", "\u91cd\u5199\uff1a\u548c\u591a\u6001\u771f\u6b63\u76f8\u5173\u3002\u5f53\u5b50\u7c7b\u91cd\u65b0\u5b9a\u4e49\u4e86\u7236\u7c7b\u7684\u865a\u51fd\u6570\u540e\uff0c\u7236\u7c7b\u6307\u9488\u6839\u636e\u8d4b\u7ed9\u5b83\u7684\u4e0d\u540c\u7684\u5b50\u7c7b\u6307\u9488\uff0c\u52a8\u6001\u7684\u8c03\u7528\u5c5e\u4e8e\u5b50\u7c7b\u7684\u8be5\u51fd\u6570\uff0c\u8fd9\u6837\u7684\u51fd\u6570\u8c03\u7528\u5728\u7f16\u8bd1\u671f\u95f4\u662f\u65e0\u6cd5\u786e\u5b9a\u7684\uff08\u8c03\u7528\u7684\u5b50\u7c7b\u7684\u865a\u51fd\u6570\u7684\u5730\u5740\u65e0\u6cd5\u7ed9\u51fa\uff09\u3002\u56e0\u6b64\uff0c\u8fd9\u6837\u7684\u51fd\u6570\u5730\u5740\u662f\u5728\u8fd0\u884c\u671f\u7ed1\u5b9a\u7684\uff08\u665a\u7ed1\u5b9a\uff09\u3002", "\n\u4e3b\u8981\u662f\u4e24\u4e2a\uff1a1. \u9690\u85cf\u5b9e\u73b0\u7ec6\u8282\uff0c\u4f7f\u5f97\u4ee3\u7801\u80fd\u591f\u6a21\u5757\u5316\uff1b\u6269\u5c55\u4ee3\u7801\u6a21\u5757\uff0c\u5b9e\u73b0\u4ee3\u7801\u91cd\u7528\uff1b2. \u63a5\u53e3\u91cd\u7528\uff1a\u4e3a\u4e86\u7c7b\u5728\u7ee7\u627f\u548c\u6d3e\u751f\u7684\u65f6\u5019\uff0c\u4fdd\u8bc1\u4f7f\u7528\u5bb6\u65cf\u4e2d\u4efb\u4e00\u7c7b\u7684\u5b9e\u4f8b\u7684\u67d0\u4e00\u5c5e\u6027\u65f6\u7684\u6b63\u786e\u8c03\u7528\u3002"], "title": "C++\u5f00\u53d1\u5de5\u7a0b\u5e08\u9762\u8bd5\u9898\u5e93 1~50\u9053"},
{"contents": ["201\u4e0b\u9762\u7684\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1f\u5e76\u8bf7\u7ed9\u51fa\u6b63\u786e\u7684\u5199\u6cd5\u3002", "void DoSomeThing(char* p)", "{", "char str[16];", "int n;", "assert(NULL != p);", "sscanf(p, \u201c%s%d\u201d, str, n);", "if (0 == strcmp(str, \u201csomething\u201d))", "{", "}", "}", "A:", "sscanf(p, \u201c%s%d\u201d, str, n);\u00a0\u00a0 \u8fd9\u53e5\u8be5\u5199\u6210\uff1a sscanf(p, \u201c%s%d\u201d, str, &n); \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "202.\u4e0b\u9762\u4ee3\u7801\u6709\u4ec0\u4e48\u9519\u8bef?", "\u00a0", "Void test1()", "{", "\u00a0", "char string[10];", "char *str1=\u201d0123456789\u2033;", "strcpy(string, str1);", "\u00a0", "}", "\u6570\u7ec4\u8d8a\u754c", "\u00a0", "203.\u4e0b\u9762\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898?", "\u00a0", "Void test2()", "\u00a0", "{", "\u00a0", "char string[10], str1[10];", "\u00a0", "for(i=0; i<10;i++)", "{", "str1[i] =\u2019a';", "}", "strcpy(string, str1);", "}", "}", "\u6570\u7ec4\u8d8a\u754c", "\u00a0", "204\u4e0b\u9762\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898?LUPA\u5f00\u6e90\u793e\u533a+j H2B F,c U", "\u00a0", "Void test3(char* str1)", "{", "char string[10];", "if(strlen(str1)<=10)", "{", "strcpy(string, str1);", "}", "}", "==\u6570\u7ec4\u8d8a\u754c", "==strcpy\u62f7\u8d1d\u7684\u7ed3\u675f\u6807\u5fd7\u662f\u67e5\u627e\u5b57\u7b26\u4e32\u4e2d\u7684\\0 \u56e0\u6b64\u5982\u679c\u5b57\u7b26\u4e32\u4e2d\u6ca1\u6709\u9047\u5230\\0\u7684\u8bdd \u4f1a\u4e00\u76f4\u590d\u5236\uff0c\u76f4\u5230\u9047\u5230\\0,\u4e0a\u9762\u7684123\u90fd\u56e0\u6b64\u4ea7\u751f\u8d8a\u754c\u7684\u60c5\u51b5", "\u5efa\u8bae\u4f7f\u7528 strncpy \u548c memcpy", "\u00a0", "205.\u5199\u51fa\u8fd0\u884c\u7ed3\u679c:", "{", "char str[] = \u201cworld\u201d; cout << sizeof(str) << \u201c: \u201c;", "char *p\u00a0\u00a0\u00a0 = str;\u00a0\u00a0\u00a0\u00a0 cout << sizeof(p) << \u201c: \u201c;", "char i\u00a0\u00a0\u00a0\u00a0 = 10;\u00a0\u00a0\u00a0\u00a0\u00a0 cout << sizeof(i) << \u201c: \u201c;", "void *pp\u00a0\u00a0 = malloc(10); cout << sizeof(p) << endl;", "}", "6\uff1a4\uff1a1\uff1a4", "\u00a0", "\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "206.C\u548cC++\u6709\u4ec0\u4e48\u4e0d\u540c?", "\u4ece\u673a\u5236\u4e0a\uff1ac\u662f\u9762\u5411\u8fc7\u7a0b\u7684\uff08\u4f46c\u4e5f\u53ef\u4ee5\u7f16\u5199\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\uff09\uff1bc++\u662f\u9762\u5411\u5bf9\u8c61\u7684\uff0c\u63d0\u4f9b\u4e86\u7c7b\u3002\u4f46\u662f\uff0cc++\u7f16\u5199\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u6bd4c\u5bb9\u6613", "\u4ece\u9002\u7528\u7684\u65b9\u5411\uff1ac\u9002\u5408\u8981\u6c42\u4ee3\u7801\u4f53\u79ef\u5c0f\u7684\uff0c\u6548\u7387\u9ad8\u7684\u573a\u5408\uff0c\u5982\u5d4c\u5165\u5f0f\uff1bc++\u9002\u5408\u66f4\u4e0a\u5c42\u7684\uff0c\u590d\u6742\u7684\uff1b llinux\u6838\u5fc3\u5927\u90e8\u5206\u662fc\u5199\u7684\uff0c\u56e0\u4e3a\u5b83\u662f\u7cfb\u7edf\u8f6f\u4ef6\uff0c\u6548\u7387\u8981\u6c42\u6781\u9ad8\u3002", "\u4ece\u540d\u79f0\u4e0a\u4e5f\u53ef\u4ee5\u770b\u51fa\uff0cc++\u6bd4c\u591a\u4e86+\uff0c\u8bf4\u660ec++\u662fc\u7684\u8d85\u96c6\uff1b\u90a3\u4e3a\u4ec0\u4e48\u4e0d\u53ebc+\u800c\u53ebc++\u5462\uff0c\u662f\u56e0\u4e3ac++\u6bd4", "c\u6765\u8bf4\u6269\u5145\u7684\u4e1c\u897f\u592a\u591a\u4e86\uff0c\u6240\u4ee5\u5c31\u5728c\u540e\u9762\u653e\u4e0a\u4e24\u4e2a+\uff1b\u4e8e\u662f\u5c31\u6210\u4e86c++", "C\u8bed\u8a00\u662f\u7ed3\u6784\u5316\u7f16\u7a0b\u8bed\u8a00\uff0cC++\u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u8bed\u8a00\u3002LUPA\u5f00\u6e90\u793e\u533a } n*r2C/M8f", "C++\u4fa7\u91cd\u4e8e\u5bf9\u8c61\u800c\u4e0d\u662f\u8fc7\u7a0b\uff0c\u4fa7\u91cd\u4e8e\u7c7b\u7684\u8bbe\u8ba1\u800c\u4e0d\u662f\u903b\u8f91\u7684\u8bbe\u8ba1\u3002", "\u00a0", "207\u5728\u4e0d\u7528\u7b2c\u4e09\u65b9\u53c2\u6570\u7684\u60c5\u51b5\u4e0b\uff0c\u4ea4\u6362\u4e24\u4e2a\u53c2\u6570\u7684\u503c", "#include <stdio.h>", "void main()", "{", "int i=60;", "int j=50;", "i=i+j;", "j=i-j;", ")", "i=i-j;", "printf(\u201ci=%d\\n\u201d,i);", "printf(\u201cj=%d\\n\u201d,j);", "}", "\u65b9\u6cd5\u4e8c\uff1a", "i^=j;", "j^=i;", "i^=j;", "\u65b9\u6cd5\u4e09\uff1a", "// \u7528\u52a0\u51cf\u5b9e\u73b0\uff0c\u800c\u4e14\u4e0d\u4f1a\u6ea2\u51fa", "a = a+b-(b=a)", "\u00a0", "208.\u4e0b\u9762\u7684\u51fd\u6570\u5b9e\u73b0\u5728\u4e00\u4e2a\u56fa\u5b9a\u7684\u6570\u4e0a\u52a0\u4e0a\u4e00\u4e2a\u6570\uff0c\u6709\u4ec0\u4e48\u9519\u8bef\uff0c\u6539\u6b63", "\u00a0", "int add_n(int n)", "{", "static int i=100;", "i+=n;", "return i;", "}", "\u7b54:", "\u56e0\u4e3astatic\u4f7f\u5f97i\u7684\u503c\u4f1a\u4fdd\u7559\u4e0a\u6b21\u7684\u503c\u3002", "\u53bb\u6389static\u5c31\u53ef\u4e86", "\u00a0", "209\uff0eunion a {", "int a_int1;", "double a_double;", "int a_int2;", "};", "typedef struct", "{ a a1;", "char y;", "} b;", "\u00a0", "class c", "{", "double c_double;", "b b1;", "a a2;", "};", "\u8f93\u51facout<<sizeof(c)<<endl;\u7684\u7ed3\u679c?", "\u7b54:", "VC6\u73af\u5883\u4e0b\u5f97\u51fa\u7684\u7ed3\u679c\u662f32", "\u6211(sun)\u5728VC6.0+win2k\u4e0b\u505a\u8fc7\u8bd5\u9a8c:", "int-4", "float-4", "double-8", "\u6307\u9488-4", "\u00a0", "\u00a0", "210. unsigned short array[]={1,2,3,4,5,6,7};", "int i = 3;", "*(array + i) = ?", "\u7b54:4", "\u00a0", "211. class A", "{", "virtual void func1()\uff1b", "void func2();", "}", "Class B: class A", "{", "void func1(){cout << \u201cfun1 inclass B\u201d << endl;}", "virtual void func2(){cout << \u201cfun2 inclass B\u201d << endl;}", "}", "A, A\u4e2d\u7684func1\u548cB\u4e2d\u7684func2\u90fd\u662f\u865a\u51fd\u6570.", "B, A\u4e2d\u7684func1\u548cB\u4e2d\u7684func2\u90fd\u4e0d\u662f\u865a\u51fd\u6570.", "C, A\u4e2d\u7684func2\u662f\u865a\u51fd\u6570.\uff0cB\u4e2d\u7684func1\u4e0d\u662f\u865a\u51fd\u6570.", "D, A\u4e2d\u7684func2\u4e0d\u662f\u865a\u51fd\u6570\uff0cB\u4e2d\u7684func1\u662f\u865a\u51fd\u6570.", "\u7b54:", "A", "\u00a0", "212\u8f93\u51fa\u4e0b\u9762\u7a0b\u5e8f\u7ed3\u679c\u3002", "#include <iostream.h>", "class A", "{", "public:", "virtual void print(void)", "{", "cout<<\u201dA::print()\u201d<<endl;", "}", "};", "\u00a0", "class B:public A", "{", "public:", "virtual void print(void)", "{", "cout<<\u201dB::print()\u201d<<endl;", "\u00a0", "};", "};", "class C:public", "{", "public:", "virtual void print(void)", "{", "cout<<\u201dC::print()\u201d<<endl;", "}", "};", "void print(A a)", "{", "a.print();", "}", "\u00a0", "void main(void)", "{", "A a, *pa,*pb,*pc;", "pa=&a;", "pb=&b;", "pc=&c;", "\u00a0", "a.print();", "b.print();", "c.print();", "\u00a0", "a->print();", "pb->print();", "pc->print();", "\u00a0", "print(a);", "print(b);", "print(c);", "}", "A::print()", "A::print()", "\u00a0", "B::print()", "C::print()", "\u00a0", "A::print()", "\u00a0", "B::print()", "\u00a0", "C::print()", "\u00a0", "A::print()", "\u00a0", "\u00a0", "A::print()", "\u00a0", "A::print()", "\u00a0", "\u00a0", "213 C++\u8bed\u8a00\u662f\u5728___ C ______\u8bed\u8a00\u7684\u57fa\u7840\u4e0a\u53d1\u5c55\u8d77\u6765\u7684\u3002", "214 C++\u8bed\u8a00\u7684\u7f16\u8bd1\u5355\u4f4d\u662f\u6269\u5c55\u540d\u4e3a____ .cpp______\u7684____\u7a0b\u5e8f______\u6587\u4ef6\u3002", "215. \u884c\u5c3e\u4f7f\u7528\u6ce8\u91ca\u7684\u5f00\u59cb\u6807\u8bb0\u7b26\u4e3a____ //_____\u3002", "216 \u591a\u884c\u6ce8\u91ca\u7684\u5f00\u59cb\u6807\u8bb0\u7b26\u548c\u7ed3\u675f\u6807\u8bb0\u7b26\u5206\u522b\u4e3a_____ /*_____\u548c___ */_______\u3002", "217. \u7528\u4e8e\u8f93\u51fa\u8868\u8fbe\u5f0f\u503c\u7684\u6807\u51c6\u8f93\u51fa\u6d41\u5bf9\u8c61\u662f____ cout_____\u3002", "218 \u7528\u4e8e\u4ece\u952e\u76d8\u4e0a\u4e3a\u53d8\u91cf\u8f93\u5165\u503c\u7684\u6807\u51c6\u8f93\u5165\u6d41\u5bf9\u8c61\u662f__ cin______\u3002", "219. \u4e00\u4e2a\u5b8c\u6574\u7a0b\u5e8f\u4e2d\u5fc5\u987b\u6709\u4e00\u4e2a\u540d\u4e3a____ main____\u7684\u51fd\u6570\u3002", "220\u4e00\u4e2a\u51fd\u6570\u7684\u51fd\u6570\u4f53\u5c31\u662f\u4e00\u6761____\u590d\u5408_____\u8bed\u53e5\u3002", "221. \u5f53\u6267\u884ccin\u8bed\u53e5\u65f6\uff0c\u4ece\u952e\u76d8\u4e0a\u8f93\u5165\u6bcf\u4e2a\u6570\u636e\u540e\u5fc5\u987b\u63a5\u7740\u8f93\u5165\u4e00\u4e2a___\u7a7a\u767d_____\u7b26\uff0c\u7136\u540e\u624d\u80fd\u7ee7\u7eed\u8f93\u5165\u4e0b\u4e00\u4e2a\u6570\u636e\u3002", "222\u5728C++\u7a0b\u5e8f\u4e2d\u5305\u542b\u4e00\u4e2a\u5934\u6587\u4ef6\u6216\u7a0b\u5e8f\u6587\u4ef6\u7684\u9884\u7f16\u8bd1\u547d\u4ee4\u4e3a____#include ______\u3002", "223. \u7a0b\u5e8f\u4e2d\u7684\u9884\u5904\u7406\u547d\u4ee4\u662f\u6307\u4ee5___#___\u5b57\u7b26\u5f00\u5934\u7684\u547d\u4ee4\u3002", "224. \u4e00\u6761\u8868\u8fbe\u5f0f\u8bed\u53e5\u5fc5\u987b\u4ee5___\u5206\u53f7___\u4f5c\u4e3a\u7ed3\u675f\u7b26\u3002", "225. \u5728#include\u547d\u4ee4\u4e2d\u6240\u5305\u542b\u7684\u5934\u6587\u4ef6\uff0c\u53ef\u4ee5\u662f\u7cfb\u7edf\u5b9a\u4e49\u7684\u5934\u6587\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u662f___\u7528\u6237\uff08\u6216\u7f16\u7a0b\u8005_____\u5b9a\u4e49\u7684\u5934\u6587\u4ef6\u3002", "226. \u4f7f\u7528#include\u547d\u4ee4\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u5934\u6587\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a__\u7a0b\u5e8f____\u6587\u4ef6\u3002", "227\uff0e\u4e00\u4e2a\u51fd\u6570\u5b9a\u4e49\u7531__\u51fd\u6570\u5934______\u548c__\u51fd\u6570\u4f53_____\u4e24\u90e8\u5206\u7ec4\u6210\u3002", "228\uff0e\u82e5\u4e00\u4e2a\u51fd\u6570\u7684\u5b9a\u4e49\u5904\u4e8e\u8c03\u7528\u5b83\u7684\u51fd\u6570\u4e4b\u524d\uff0c\u5219\u5728\u7a0b\u5e8f\u5f00\u59cb\u53ef\u4ee5\u7701\u53bb\u8be5\u51fd\u6570\u7684__\u539f\u578b\uff08\u6216\u58f0\u660e\uff09____\u8bed\u53e5\u3002", "229\uff0eC++\u5934\u6587\u4ef6\u548c\u6e90\u7a0b\u5e8f\u6587\u4ef6\u7684\u6269\u5c55\u540d\u5206\u522b\u4e3a__.h ___\u548c___.cpp ___\u3002", "230\uff0e\u7a0b\u5e8f\u6587\u4ef6\u7684\u7f16\u8bd1\u9519\u8bef\u5206\u4e3a____\u8b66\u544a\uff08warning\uff09____\u548c____\u81f4\u547d(error) ____\u4e24\u7c7b\u3002", "231\uff0e\u5f53\u4f7f\u7528___ void ____\u4fdd\u7559\u5b57\u4f5c\u4e3a\u51fd\u6570\u7c7b\u578b\u65f6\uff0c\u8be5\u51fd\u6570\u4e0d\u8fd4\u56de\u4efb\u4f55\u503c\u3002", "232\uff0e\u5f53\u51fd\u6570\u53c2\u6570\u8868\u7528___ void __\u4fdd\u7559\u5b57\u8868\u793a\u65f6\uff0c\u5219\u8868\u793a\u8be5\u53c2\u6570\u8868\u4e3a\u7a7a\u3002", "233\uff0e\u4ece\u4e00\u6761\u51fd\u6570\u539f\u578b\u8bed\u53e5\u201cint fun1(void);\u201d\u53ef\u77e5\uff0c\u8be5\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b\u4e3a______\uff0c\u8be5\u51fd\u6570\u5e26\u6709______\u4e2a\u53c2\u6570\u3002", "234. \u5f53\u6267\u884ccout\u8bed\u53e5\u8f93\u51faendl\u6570\u636e\u9879\u65f6\uff0c\u5c06\u4f7fC++\u663e\u793a\u8f93\u51fa\u5c4f\u5e55\u4e0a\u7684\u5149\u6807\u4ece\u5f53\u524d\u4f4d\u7f6e\u79fb\u52a8\u5230___\u4e0b\u4e00\u884c_____\u7684\u5f00\u59cb\u4f4d\u7f6e\u3002", "235. \u5047\u5b9ax=5\uff0cy=6\uff0c\u5219\u8868\u8fbe\u5f0fx++*++y\u7684\u503c\u4e3a___35_______\u3002", "236. \u5047\u5b9ax=5\uff0cy=6\uff0c\u5219\u8868\u8fbe\u5f0fx\u2013*\u2013y\u7684\u503c\u4e3a___25_______\u3002", "237. \u5047\u5b9ax=5\uff0cy=6\uff0c\u5219\u6267\u884c\u8868\u8fbe\u5f0fy*=x++\u8ba1\u7b97\u540e\uff0cx\u548cy\u7684\u503c\u5206\u522b\u4e3a___6___\u548c___30 _____\u3002", "238. \u5047\u5b9ax=5\uff0cy=6\uff0c\u5219\u6267\u884c\u8868\u8fbe\u5f0fy+=x\u2013\u8ba1\u7b97\u540e\uff0cx\u548cy\u7684\u503c\u5206\u522b\u4e3a____4__\u548c___11___\u3002", "239. C++\u5e38\u65700\u00d7145\u5bf9\u5e94\u7684\u5341\u8fdb\u5236\u503c\u4e3a___325 ___\u3002", "240. C++\u5e38\u65700345\u5bf9\u5e94\u7684\u5341\u8fdb\u5236\u503c\u4e3a____ 229__\u3002", "241. \u5341\u8fdb\u5236\u5e38\u6570245\u5bf9\u5e94\u7684\u5341\u516d\u8fdb\u5236\u7684C++\u8868\u793a\u4e3a____0xF5___\u3002", "242. \u5341\u8fdb\u5236\u5e38\u6570245\u5bf9\u5e94\u7684\u516b\u8fdb\u5236\u7684C++\u8868\u793a\u4e3a___0365 ___\u3002", "243. signed char\u7c7b\u578b\u7684\u503c\u57df\u8303\u56f4\u662f__-128__\u81f3___+127 __\u4e4b\u95f4\u7684\u6574\u6570\u3002", "244. int\u548cfloat\u7c7b\u578b\u7684\u6570\u636e\u5206\u522b\u5360\u7528___ 4___\u548c____ 4___\u4e2a\u5b57\u8282\u3002", "245. float\u548cdouble\u7c7b\u578b\u7684\u6570\u636e\u5206\u522b\u5360\u7528____ 4___\u548c_____8___\u4e2a\u5b57\u8282\u3002", "246. bool\u548cchar\u7c7b\u578b\u7684\u6570\u636e\u5206\u522b\u5360\u7528_____1____\u548c____1___\u4e2a\u5b57\u8282\u3002", "247. unsigned short int\u548cint\u7c7b\u578b\u7684\u957f\u5ea6\u5206\u522b\u4e3a____ 2___\u548c____4___\u3002", "248. \u5b57\u7b26\u4e32\u201dThis\\\u2019s a book.\\n\u201d\u7684\u957f\u5ea6\u4e3a_____ 15____\u3002", "249. \u5b57\u7b26\u4e32\u201d\\nThis\\\u2019s a pen\\n\\n\u201d\u7684\u957f\u5ea6\u4e3a_____ 15_____\u3002", "250. \u5728C++\u4e2d\u5b58\u50a8\u5b57\u7b26\u4e32\u201dabcdef\u201d\u81f3\u5c11\u9700\u8981___7 _____\u4e2a\u5b57\u8282\u3002", "251. \u5728C++\u4e2d\u5b58\u50a8\u5b57\u7b26\u4e32\u201da+b=c\u201d\u81f3\u5c11\u9700\u8981_____6 ___\u4e2a\u5b57\u8282\u3002", "252. \u5047\u5b9ax\u548cy\u4e3a\u6574\u578b\uff0c\u5176\u503c\u5206\u522b\u4e3a16\u548c5\uff0c\u5219x%y\u548cx/y\u7684\u503c\u5206\u522b\u4e3a___1_______\u548c____3____\u3002", "253. \u5047\u5b9ax\u548cy\u4e3a\u6574\u578b\uff0c\u5176\u503c\u5206\u522b\u4e3a16\u548c5\uff0c\u5219x/y\u548cdouble(x)/y\u7684\u503c\u5206\u522b\u4e3a____3____\u548c___3.2____\u3002", "254. \u5047\u5b9ax\u662f\u4e00\u4e2a\u903b\u8f91\u91cf\uff0c\u5219x && true\u7684\u503c\u4e3a___ x ____\u3002", "255. \u5047\u5b9ax\u662f\u4e00\u4e2a\u903b\u8f91\u91cf\uff0c\u5219x || true\u7684\u503c\u4e3a_____ true(\u62161)_____\u3002", "256. \u5047\u5b9ax\u662f\u4e00\u4e2a\u903b\u8f91\u91cf\uff0c\u5219x && false\u7684\u503c\u4e3a____ false(\u62160) ___\u3002", "257. \u5047\u5b9ax\u662f\u4e00\u4e2a\u903b\u8f91\u91cf\uff0c\u5219x || false\u7684\u503c\u4e3ax\u3002", "258. \u5047\u5b9ax\u662f\u4e00\u4e2a\u903b\u8f91\u91cf\uff0c\u5219!x || false\u7684\u503c\u4e3a____!x ____\u3002", "259. \u5047\u5b9ax\u662f\u4e00\u4e2a\u903b\u8f91\u91cf\uff0c\u5219x && !x\u7684\u503c\u4e3a____ false(\u62160)____\u3002", "260. \u5047\u5b9ax\u662f\u4e00\u4e2a\u903b\u8f91\u91cf\uff0c\u5219x || !x\u7684\u503c\u4e3a____ true(\u62161)___\u3002", "261. \u8bbeenum Printstatus{ready,busy,error}; \u5219 cout<<busy\u7684\u8f93\u51fa\u7ed3\u679c\u662f_____1___\u3002", "262. \u8bbeenum Printstatus{ready=2,busy,error}; \u5219cout<<busy\u7684\u8f93\u51fa\u7ed3\u679c\u662f____3____\u3002", "263. \u5e38\u6570-4.205\u548c6.7E-9\u5206\u522b\u5177\u6709___4_____\u548c____2___\u4f4d\u6709\u6548\u6570\u5b57\u3002", "264. \u679a\u4e3e\u7c7b\u578b\u4e2d\u7684\u6bcf\u4e2a\u679a\u4e3e\u503c\u90fd\u662f\u4e00\u4e2a____\u679a\u4e3e\u5e38\u91cf_____\uff0c\u5b83\u7684\u503c\u4e3a\u4e00\u4e2a___\u6574\u6570____\u3002", "265. \u5e38\u6570100\u548c3.62\u7684\u6570\u636e\u7c7b\u578b\u5206\u522b\u4e3a____ int ___\u548c_____ double ___\u3002", "266. \u82e5x=5, y=10, \u5219\u8ba1\u7b97y*=++x\u8868\u8fbe\u5f0f\u540e\uff0cx\u548cy\u7684\u503c\u5206\u522b\u4e3a___6___\u548c__60 ___\u3002", "267. \u5047\u5b9ax\u548cch\u5206\u522b\u4e3aint\u578b\u548cchar\u578b\uff0c\u5219sizeof(x)\u548csizeof(ch)\u7684\u503c\u5206\u522b\u4e3a__4__\u548c__1__\u3002", "268. \u5047\u5b9ax=10\uff0c\u5219\u8868\u8fbe\u5f0fx<=10?20:30\u7684\u503c\u4e3a__ 20 __\u3002", "269. \u8868\u8fbe\u5f0fsqrt(81)\u548cpow(6,3)\u7684\u503c\u5206\u522b\u4e3a___9 ___\u548c___216___\u3002", "270. \u542b\u968f\u673a\u51fd\u6570\u7684\u8868\u8fbe\u5f0frand()%20\u7684\u503c\u5728___0__\u81f3___ 19 __\u533a\u95f4\u5185\u3002", "271. \u5728switch\u8bed\u53e5\u4e2d\uff0c\u6bcf\u4e2a\u8bed\u53e5\u6807\u53f7\u6240\u542b\u5173\u952e\u5b57case\u540e\u9762\u7684\u8868\u8fbe\u5f0f\u5fc5\u987b\u662f___\u5e38\u91cf___\u3002", "272. \u5728if\u8bed\u53e5\u4e2d\uff0c\u6bcf\u4e2aelse\u5173\u952e\u5b57\u4e0e\u5b83\u524d\u9762\u540c\u5c42\u6b21\u5e76\u4e14\u6700\u63a5\u8fd1\u7684____ if ____\u5173\u952e\u5b57\u76f8\u914d\u5957\u3002", "273. \u4f5c\u4e3a\u8bed\u53e5\u6807\u53f7\u4f7f\u7528\u7684C++\u4fdd\u7559\u5b57case\u548cdefaule\u53ea\u80fd\u7528\u4e8e___ switch ___\u8bed\u53e5\u7684\u5b9a\u4e49\u4f53\u4e2d\u3002", "274. \u6267\u884cswitch\u8bed\u53e5\u65f6\uff0c\u5728\u8fdb\u884c\u4f5c\u4e3a\u6761\u4ef6\u7684\u8868\u8fbe\u5f0f\u6c42\u503c\u540e\uff0c\u5c06\u4ece\u67d0\u4e2a\u5339\u914d\u7684\u6807\u53f7\u4f4d\u7f6e\u8d77\u5411\u4e0b\u6267\u884c\uff0c\u5f53\u78b0\u5230\u4e0b\u4e00\u4e2a\u6807\u53f7\u4f4d\u7f6e\u65f6\uff08\u505c\u6b62/\u4e0d\u505c\u6b62\uff09___\u4e0d\u505c\u6b62__\u6267\u884c\u3002", "275. \u82e5while\u5faa\u73af\u7684\u201c\u5934\u201d\u4e3a\u201cwhile(i++<=10)\u201d\uff0c\u5e76\u4e14i\u7684\u521d\u503c\u4e3a0\uff0c\u540c\u65f6\u5728\u5faa\u73af\u4f53\u4e2d\u4e0d\u4f1a\u4fee\u6539i\u7684\u503c\uff0c\u5219\u5faa\u73af\u4f53\u5c06\u88ab\u91cd\u590d\u6267\u884c__11___\u6b21\u540e\u6b63\u5e38\u7ed3\u675f\u3002", "276. \u82e5do\u5faa\u73af\u7684\u201c\u5c3e\u201d\u4e3a\u201cwhile(++i<10)\u201d\uff0c\u5e76\u4e14i\u7684\u521d\u503c\u4e3a0\uff0c\u540c\u65f6\u5728\u5faa\u73af\u4f53\u4e2d\u4e0d\u4f1a\u4fee\u6539i\u7684\u503c\uff0c\u5219\u5faa\u73af\u4f53\u5c06\u88ab\u91cd\u590d\u6267\u884c___10 ___\u6b21\u540e\u6b63\u5e38\u7ed3\u675f\u3002", "277. \u5f53\u5728\u7a0b\u5e8f\u4e2d\u6267\u884c\u5230break\u8bed\u53e5\u65f6\uff0c\u5c06\u7ed3\u675f\u672c\u5c42\u5faa\u73af\u7c7b\u8bed\u53e5\u6216switch\u8bed\u53e5\u7684\u6267\u884c\u3002", "278. \u5f53\u5728\u7a0b\u5e8f\u4e2d\u6267\u884c\u5230___ continue___\u8bed\u53e5\u65f6\uff0c\u5c06\u7ed3\u675f\u6240\u5728\u5faa\u73af\u8bed\u53e5\u4e2d\u5faa\u73af\u4f53\u7684\u4e00\u6b21\u6267\u884c\u3002", "279. \u5728\u7a0b\u5e8f\u4e2d\u6267\u884c\u5230__ return ___\u8bed\u53e5\u65f6\uff0c\u5c06\u7ed3\u675f\u6240\u5728\u51fd\u6570\u7684\u6267\u884c\u8fc7\u7a0b\uff0c\u8fd4\u56de\u5230\u8c03\u7528\u8be5\u51fd\u6570\u7684\u4f4d\u7f6e\u3002", "280\uff0e\u5728\u7a0b\u5e8f\u6267\u884c\u5b8c____\u4e3b(\u6216main)__\u51fd\u6570\u8c03\u7528\u540e\uff0c\u5c06\u7ed3\u675f\u6574\u4e2a\u7a0b\u5e8f\u7684\u6267\u884c\u8fc7\u7a0b\uff0c\u8fd4\u56de\u5230C++\u96c6\u6210\u5f00\u53d1\u7a97\u53e3\u3002", "281. \u5143\u7d20\u7c7b\u578b\u4e3aint\u7684\u6570\u7ec4a[10]\u5171\u5360\u7528___ 40___\u5b57\u8282\u7684\u5b58\u50a8\u7a7a\u95f4\u3002", "282. \u5143\u7d20\u7c7b\u578b\u4e3adouble\u7684\u4e8c\u7ef4\u6570\u7ec4a[4][6]\u5171\u5360\u7528____192__\u5b57\u8282\u7684\u5b58\u50a8\u7a7a\u95f4\u3002", "283. \u5143\u7d20\u7c7b\u578b\u4e3achar\u7684\u4e8c\u7ef4\u6570\u7ec4a[10][30]\u5171\u5360\u7528___300__\u5b57\u8282\u7684\u5b58\u50a8\u7a7a\u95f4\u3002", "284. \u5b58\u50a8\u5b57\u7b26\u2019a\u2019\u548c\u5b57\u7b26\u4e32\u201da\u201d\u5206\u522b\u9700\u8981\u5360\u7528_____1___\u548c____2 ___\u4e2a\u5b57\u8282\u3002", "\u00a0", "285", "#include \u201cstdafx.h\u201d", "#define SQR(X) X*X", "int main(int argc, char* argv[])", "\uff5b", "int a = 10;", "int k = 2;", "int m = 1;", "a /= SQR(k+m)/SQR(k+m);", "printf(\u201c%d\\n\u201d,a);", "return 0;", "}", "\u8fd9\u9053\u9898\u76ee\u7684\u7ed3\u679c\u662f\u4ec0\u4e48\u554a?", "define \u53ea\u662f\u5b9a\u4e49\u800c\u5df2\uff0c\u5728\u7f16\u62e9\u65f6\u53ea\u662f\u7b80\u5355\u4ee3\u6362X*X\u800c\u5df2\uff0c\u5e76\u4e0d\u7ecf\u8fc7\u7b97\u672f\u6cd5\u5219\u7684", "a /= (k+m)*(k+m)/(k+m)*(k+m);", "=>a /= (k+m)*1*(k+m);", "=>a = a/9;", "=>a = 1;", "\u00a0", "\u00a0", "286. \u4ee5\u9762\u5411\u5bf9\u8c61\u65b9\u6cd5\u6784\u9020\u7684\u7cfb\u7edf\uff0c\u5176\u57fa\u672c\u5355\u4f4d\u662f_____\u5bf9\u8c61___\u3002", "287. \u6bcf\u4e2a\u5bf9\u8c61\u90fd\u662f\u6240\u5c5e\u7c7b\u7684\u4e00\u4e2a__\u5b9e\u4f8b__\u3002", "288. C++\u652f\u6301\u4e24\u79cd\u591a\u6001\u6027\uff1a___\u7f16\u8bd1____\u65f6\u7684\u591a\u6001\u6027\u548c____\u8fd0\u884c__\u65f6\u7684\u591a\u6001\u6027\u3002", "289. \u5728C++\u4e2d\uff0c\u7f16\u8bd1\u65f6\u7684\u591a\u6001\u6027\u662f\u901a\u8fc7___\u91cd\u8f7d___\u5b9e\u73b0\u7684\uff0c\u800c\u8fd0\u884c\u65f6\u7684\u591a\u6001\u6027\u5219\u662f\u901a\u8fc7___\u865a\u51fd\u6570____\u5b9e\u73b0\u7684\u3002", "290. \u5bf9\u4e8e\u7c7b\u4e2d\u5b9a\u4e49\u7684\u4efb\u4f55\u6210\u5458\uff0c\u5176\u9690\u542b\u8bbf\u95ee\u6743\u9650\u4e3a___ private\uff08\u6216\u79c1\u6709\uff09__\u3002", "291. \u5bf9\u4e8e\u7ed3\u6784\u4e2d\u5b9a\u4e49\u7684\u4efb\u4f55\u6210\u5458\uff0c\u5176\u9690\u542b\u8bbf\u95ee\u6743\u9650\u4e3a__ public(\u6216\u516c\u6709)_\u3002", "292. \u82e5\u5728\u7c7b\u7684\u5b9a\u4e49\u4f53\u4e2d\u7ed9\u51fa\u4e86\u4e00\u4e2a\u6210\u5458\u51fd\u6570\u7684\u5b8c\u6574\u5b9a\u4e49\uff0c\u5219\u8be5\u51fd\u6570\u5c5e\u4e8e__\u5185\u8054__\u51fd\u6570\u3002", "293. \u4e3a\u4e86\u907f\u514d\u5728\u8c03\u7528\u6210\u5458\u51fd\u6570\u65f6\u4fee\u6539\u5bf9\u8c61\u4e2d\u7684\u4efb\u4f55\u6570\u636e\u6210\u5458\uff0c\u5219\u5e94\u5728\u5b9a\u4e49\u8be5\u6210\u5458\u51fd\u6570\u65f6\uff0c\u5728\u51fd\u6570\u5934\u7684\u540e\u9762\u52a0\u4e0a__ const __\u5173\u952e\u5b57\u3002", "294. \u82e5\u53ea\u9700\u8981\u901a\u8fc7\u4e00\u4e2a\u6210\u5458\u51fd\u6570\u8bfb\u53d6\u6570\u636e\u6210\u5458\u7684\u503c\uff0c\u800c\u4e0d\u9700\u8981\u4fee\u6539\u5b83\uff0c\u5219\u5e94\u5728\u51fd\u6570\u5934\u7684\u540e\u9762\u52a0\u4e0a__ const __\u5173\u952e\u5b57\u3002", "295\uff0e\u5224\u65ad\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u4e0d\u662f\u56de\u6587", "int IsReverseStr(char *aStr)", "{", "int i,j;", "int found=1;", "if(aStr==NULL)", "return -1;", "j=strlen(aStr);", "for(i=0;i<j/2;i++)", "if(*(aStr+i)!=*(aStr+j-i-1))", "{", "found=0;", "break;", "}", "return found;", "}", "296\uff0e.\u5199\u51fa\u5224\u65adABCD\u56db\u4e2a\u8868\u8fbe\u5f0f\u7684\u662f\u5426\u6b63\u786e, \u82e5\u6b63\u786e, \u5199\u51fa\u7ecf\u8fc7\u8868\u8fbe\u5f0f\u4e2d a\u7684\u503c(3\u5206)", "int a = 4;", "(A)a += (a++); (B) a += (++a) ;(C) (a++) += a;(D) (++a) += (a++);", "a = ?", "\u7b54\uff1aC\u9519\u8bef\uff0c\u5de6\u4fa7\u4e0d\u662f\u4e00\u4e2a\u6709\u6548\u53d8\u91cf\uff0c\u4e0d\u80fd\u8d4b\u503c\uff0c\u53ef\u6539\u4e3a(++a) += a;", "\u6539\u540e\u7b54\u6848\u4f9d\u6b21\u4e3a9,10,10,11", "\u00a0", "\u00a0", "298\uff0e\u52a8\u6001\u8fde\u63a5\u5e93\u7684\u4e24\u79cd\u65b9\u5f0f?", "\u7b54\uff1a\u8c03\u7528\u4e00\u4e2aDLL\u4e2d\u7684\u51fd\u6570\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a", "1\uff0e\u8f7d\u5165\u65f6\u52a8\u6001\u94fe\u63a5\uff08load-time dynamic linking\uff09\uff0c\u6a21\u5757\u975e\u5e38\u660e\u786e\u8c03\u7528\u67d0\u4e2a\u5bfc\u51fa\u51fd\u6570\uff0c\u4f7f\u5f97\u4ed6\u4eec\u5c31\u50cf\u672c\u5730\u51fd\u6570\u4e00\u6837\u3002\u8fd9\u9700\u8981\u94fe\u63a5\u65f6\u94fe\u63a5\u90a3\u4e9b\u51fd\u6570\u6240\u5728DLL\u7684\u5bfc\u5165\u5e93\uff0c\u5bfc\u5165\u5e93\u5411\u7cfb\u7edf\u63d0\u4f9b\u4e86\u8f7d\u5165DLL\u65f6\u6240\u9700\u7684\u4fe1\u606f\u53caDLL\u51fd\u6570\u5b9a\u4f4d\u3002", "2\uff0e\u8fd0\u884c\u65f6\u52a8\u6001\u94fe\u63a5\uff08run-time dynamic linking\uff09\uff0c\u8fd0\u884c\u65f6\u53ef\u4ee5\u901a\u8fc7LoadLibrary\u6216Loa", "dLibraryEx\u51fd\u6570\u8f7d\u5165DLL\u3002DLL\u8f7d\u5165\u540e\uff0c\u6a21\u5757\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528GetProcAddress\u83b7\u53d6DLL\u51fd\u6570\u7684\u51fa\u53e3\u5730\u5740\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7\u8fd4\u56de\u7684\u51fd\u6570\u6307\u9488\u8c03\u7528DLL\u51fd\u6570\u4e86\u3002\u5982\u6b64\u5373\u53ef\u907f\u514d\u5bfc\u5165\u5e93\u6587\u4ef6\u4e86\u3002", "\u00a0", "299\uff0e\u8bf7\u5199\u51fa\u4e0b\u5217\u4ee3\u7801\u7684\u8f93\u51fa\u5185\u5bb9", "#i nclude", "main()", "{", "int a,b,c,d;", "a=10;", "b=a++;", "c=++a;", "d=10*a++;", "printf(\u201cb\uff0cc\uff0cd\uff1a%d\uff0c%d\uff0c%d\u201d\uff0cb\uff0cc\uff0cd\uff09;", "return 0;", "}", "\u7b54 \u300110\uff0c12\uff0c120", "\u00a0", "300\uff0e\u8bbe\u6709\u4ee5\u4e0b\u8bf4\u660e\u548c\u5b9a\u4e49\uff1a", "typedef union {long i; int k[5]; char c;} DATE;", "struct data { int cat; DATE cow; double dog;} too;", "DATE max;", "\u5219\u8bed\u53e5 printf(\u201c%d\u201d,sizeof(struct date)+sizeof(max));\u7684\u6267\u884c\u7ed3\u679c\u662f\uff1f", "\u7b54 \u3001\u7ed3\u679c\u662f\uff1a___52____\u3002DATE\u662f\u4e00\u4e2aunion, \u53d8\u91cf\u516c\u7528\u7a7a\u95f4. \u91cc\u9762\u6700\u5927\u7684\u53d8\u91cf\u7c7b\u578b\u662fint[5], \u5360\u752820\u4e2a\u5b57\u8282. \u6240\u4ee5\u5b83\u7684\u5927\u5c0f\u662f20", "data\u662f\u4e00\u4e2astruct, \u6bcf\u4e2a\u53d8\u91cf\u5206\u5f00\u5360\u7528\u7a7a\u95f4. \u4f9d\u6b21\u4e3aint4 + DATE20 + double8 = 32.", "\u6240\u4ee5\u7ed3\u679c\u662f 20 + 32 = 52.", "\u5f53\u7136\u2026\u5728\u67d0\u4e9b16\u4f4d\u7f16\u8f91\u5668\u4e0b, int\u53ef\u80fd\u662f2\u5b57\u8282,\u90a3\u4e48\u7ed3\u679c\u662f int2 + DATE10 + double8 = 20"], "title": "C++\u7b14\u8bd5\u9898\u5e93\u4e4b\u7f16\u7a0b\u3001\u95ee\u7b54\u9898 200~300\u9053"},
{"contents": ["\u7b54\u6848\uff1a\u90fd\u662f\u5728\u5806(heap)\u4e0a\u8fdb\u884c\u52a8\u6001\u7684\u5185\u5b58\u64cd\u4f5c\u3002\u7528malloc\u51fd\u6570\u9700\u8981\u6307\u5b9a\u5185\u5b58\u5206\u914d\u7684\u5b57\u8282\u6570\u5e76\u4e14\u4e0d\u80fd\u521d\u59cb\u5316\u5bf9\u8c61\uff0cnew \u4f1a\u81ea\u52a8\u8c03\u7528\u5bf9\u8c61\u7684\u6784\u9020\u51fd\u6570\u3002delete \u4f1a\u8c03\u7528\u5bf9\u8c61\u7684destructor\uff0c\u800cfree \u4e0d\u4f1a\u8c03\u7528\u5bf9\u8c61\u7684destructor.", "\u7b54\u6848\uff1a\u5f53\u7c7b\u4e2d\u542b\u6709const\u3001reference \u6210\u5458\u53d8\u91cf\uff1b\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u90fd\u9700\u8981\u521d\u59cb\u5316\u8868\u3002", "\n\u7b54\u6848\uff1a\u4e0d\u662f\u3002\u4e24\u4e2a\u4e0d\u540c\u7c7b\u578b\u7684\u6307\u9488\u4e4b\u95f4\u53ef\u4ee5\u5f3a\u5236\u8f6c\u6362\uff08\u7528reinterpret cast)\u3002C#\u662f\u7c7b\u578b\u5b89\u5168\u7684\u3002", "\n\u7b54\u6848\uff1a\u5168\u5c40\u5bf9\u8c61\u7684\u6784\u9020\u51fd\u6570\u4f1a\u5728main \u51fd\u6570\u4e4b\u524d\u6267\u884c\u3002", "\n1\uff09 \u4ece\u9759\u6001\u5b58\u50a8\u533a\u57df\u5206\u914d\u3002\u5185\u5b58\u5728\u7a0b\u5e8f\u7f16\u8bd1\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u5206\u914d\u597d\uff0c\u8fd9\u5757\u5185\u5b58\u5728\u7a0b\u5e8f\u7684\u6574\u4e2a\u8fd0\u884c\u671f\u95f4\u90fd\u5b58\u5728\u3002\u4f8b\u5982\u5168\u5c40\u53d8\u91cf\uff0cstatic \u53d8\u91cf\u3002", "\n2\uff09 \u5728\u6808\u4e0a\u521b\u5efa\u3002\u5728\u6267\u884c\u51fd\u6570\u65f6\uff0c\u51fd\u6570\u5185\u5c40\u90e8\u53d8\u91cf\u7684\u5b58\u50a8\u5355\u5143\u90fd\u53ef\u4ee5\u5728\u6808\u4e0a\u521b\u5efa\uff0c\u51fd\u6570\u6267\u884c\u7ed3\u675f\u65f6\u8fd9\u4e9b\u5b58\u50a8\u5355\u5143\u81ea\u52a8\u88ab\u91ca\u653e\u3002\u6808\u5185\u5b58\u5206\u914d\u8fd0\u7b97\u5185\u7f6e\u4e8e\u5904\u7406\u5668\u7684\u6307\u4ee4\u96c6\u3002", "\n3\uff09 \u4ece\u5806\u4e0a\u5206\u914d\uff0c\u4ea6\u79f0\u52a8\u6001\u5185\u5b58\u5206\u914d\u3002\u7a0b\u5e8f\u5728\u8fd0\u884c\u7684\u65f6\u5019\u7528malloc \u6216new \u7533\u8bf7\u4efb\u610f\u591a\u5c11\u7684\u5185\u5b58\uff0c\u7a0b\u5e8f\u5458\u81ea\u5df1\u8d1f\u8d23\u5728\u4f55\u65f6\u7528free \u6216delete \u91ca\u653e\u5185\u5b58\u3002\u52a8\u6001\u5185\u5b58\u7684\u751f\u5b58\u671f\u7531\u7a0b\u5e8f\u5458\u51b3\u5b9a\uff0c\u4f7f\u7528\u975e\u5e38\u7075\u6d3b\uff0c\u4f46\u95ee\u9898\u4e5f\u6700\u591a\u3002", "\u7b54\u6848\uff1astruct \u7684\u6210\u5458\u9ed8\u8ba4\u662f\u516c\u6709\u7684\uff0c\u800c\u7c7b\u7684\u6210\u5458\u9ed8\u8ba4\u662f\u79c1\u6709\u7684\u3002struct \u548c class \u5728\u5176\u4ed6\u65b9\u9762\u662f\u529f\u80fd\u76f8\u5f53\u7684\u3002", "\u4ece\u611f\u60c5\u4e0a\u8bb2\uff0c\u5927\u591a\u6570\u7684\u5f00\u53d1\u8005\u611f\u5230\u7c7b\u548c\u7ed3\u6784\u6709\u5f88\u5927\u7684\u5dee\u522b\u3002\u611f\u89c9\u4e0a\u7ed3\u6784\u4ec5\u4ec5\u8c61\u4e00\u5806\u7f3a\u4e4f\u5c01\u88c5\u548c\u529f\u80fd\u7684\u5f00\u653e\u7684\u5185\u5b58\u4f4d\uff0c\u800c\u7c7b\u5c31\u8c61\u6d3b\u7684\u5e76\u4e14\u53ef\u9760\u7684\u793e\u4f1a\u6210\u5458\uff0c\u5b83\u6709\u667a\u80fd\u670d\u52a1\uff0c\u6709\u7262\u56fa\u7684\u5c01\u88c5\u5c4f\u969c\u548c\u4e00\u4e2a\u826f\u597d\u5b9a\u4e49\u7684\u63a5\u53e3\u3002\u65e2\u7136\u5927\u591a\u6570\u4eba\u90fd\u8fd9\u4e48\u8ba4\u4e3a\uff0c\u90a3\u4e48\u53ea\u6709\u5728\u4f60\u7684\u7c7b\u6709\u5f88\u5c11\u7684\u65b9\u6cd5\u5e76\u4e14\u6709\u516c\u6709\u6570\u636e\uff08\u8fd9\u79cd\u4e8b\u60c5\u5728\u826f\u597d\u8bbe\u8ba1\u7684\u7cfb\u7edf\u4e2d\u662f\u5b58\u5728\u7684!\uff09\u65f6\uff0c\u4f60\u4e5f\u8bb8\u5e94\u8be5\u4f7f\u7528 struct \u5173\u952e\u5b57\uff0c\u5426\u5219\uff0c\u4f60\u5e94\u8be5\u4f7f\u7528 class \u5173\u952e\u5b57\u3002", "\u7b54\u6848\uff1a\u80af\u5b9a\u4e0d\u662f\u96f6\u3002\u4e3e\u4e2a\u53cd\u4f8b\uff0c\u5982\u679c\u662f\u96f6\u7684\u8bdd\uff0c\u58f0\u660e\u4e00\u4e2aclass A[10]\u5bf9\u8c61\u6570\u7ec4\uff0c\u800c\u6bcf\u4e00\u4e2a\u5bf9\u8c61\u5360\u7528\u7684\u7a7a\u95f4\u662f\u96f6\uff0c\u8fd9\u65f6\u5c31\u6ca1\u529e\u6cd5\u533a\u5206A[0],A[1]\u2026\u4e86\u3002", "\u7b54\u6848\uff1a\u901a\u7528\u5bc4\u5b58\u5668\u7ed9\u51fa\u7684\u5730\u5740\uff0c\u662f\u6bb5\u5185\u504f\u79fb\u5730\u5740\uff0c\u76f8\u5e94\u6bb5\u5bc4\u5b58\u5668\u5730\u5740*10H+\u901a\u7528\u5bc4\u5b58\u5668\u5185\u5730\u5740\uff0c\u5c31\u5f97\u5230\u4e86\u771f\u6b63\u8981\u8bbf\u95ee\u7684\u5730\u5740\u3002", "\u8bf7\u53c2\u8003\uff1ahttp://blog.csdn.net/wfwd/archive/2006/05/30/763785.aspx\uff0c\u91cd\u70b9\u662fstatic_cast, dynamic_cast\u548creinterpret_cast\u7684\u533a\u522b\u548c\u5e94\u7528\u3002", "\n\u7b54\u6848\uff1a", "\nBOOL : if ( !a ) or if(a)", "\nint : if ( a == 0)", "\nfloat : const EXPRESSION EXP = 0.000001", "\nif ( a < EXP && a >-EXP)", "\npointer : if ( a != NULL) or if(a == NULL)", "\u7b54\u6848\uff1a1\uff09 const \u5e38\u91cf\u6709\u6570\u636e\u7c7b\u578b\uff0c\u800c\u5b8f\u5e38\u91cf\u6ca1\u6709\u6570\u636e\u7c7b\u578b\u3002\u7f16\u8bd1\u5668\u53ef\u4ee5\u5bf9\u524d\u8005\u8fdb\u884c\u7c7b\u578b\u5b89\u5168\u68c0\u67e5\u3002\u800c\u5bf9\u540e\u8005\u53ea\u8fdb\u884c\u5b57\u7b26\u66ff\u6362\uff0c\u6ca1\u6709\u7c7b\u578b\u5b89\u5168\u68c0\u67e5\uff0c\u5e76\u4e14\u5728\u5b57\u7b26\u66ff\u6362\u53ef\u80fd\u4f1a\u4ea7\u751f\u610f\u6599\u4e0d\u5230\u7684\u9519\u8bef\u3002", "\n2\uff09 \u6709\u4e9b\u96c6\u6210\u5316\u7684\u8c03\u8bd5\u5de5\u5177\u53ef\u4ee5\u5bf9const \u5e38\u91cf\u8fdb\u884c\u8c03\u8bd5\uff0c\u4f46\u662f\u4e0d\u80fd\u5bf9\u5b8f\u5e38\u91cf\u8fdb\u884c\u8c03\u8bd5\u3002", "\n\u6570\u7ec4\u8981\u4e48\u5728\u9759\u6001\u5b58\u50a8\u533a\u88ab\u521b\u5efa\uff08\u5982\u5168\u5c40\u6570\u7ec4\uff09\uff0c\u8981\u4e48\u5728\u6808\u4e0a\u88ab\u521b\u5efa\u3002\u6307\u9488\u53ef\u4ee5\u968f\u65f6\u6307\u5411\u4efb\u610f\u7c7b\u578b\u7684\u5185\u5b58\u5757\u3002", "\n(1)\u4fee\u6539\u5185\u5bb9\u4e0a\u7684\u5dee\u522b", "\nchar a[] = \u201chello\u201d;", "\na[0] = \u2018X\u2019;", "\nchar *p = \u201cworld\u201d; // \u6ce8\u610fp \u6307\u5411\u5e38\u91cf\u5b57\u7b26\u4e32", "\np[0] = \u2018X\u2019; // \u7f16\u8bd1\u5668\u4e0d\u80fd\u53d1\u73b0\u8be5\u9519\u8bef\uff0c\u8fd0\u884c\u65f6\u9519\u8bef", "\n(2) \u7528\u8fd0\u7b97\u7b26sizeof \u53ef\u4ee5\u8ba1\u7b97\u51fa\u6570\u7ec4\u7684\u5bb9\u91cf\uff08\u5b57\u8282\u6570\uff09\u3002sizeof(p),p \u4e3a\u6307\u9488\u5f97\u5230\u7684\u662f\u4e00\u4e2a\u6307\u9488\u53d8\u91cf\u7684\u5b57\u8282\u6570\uff0c\u800c\u4e0d\u662fp \u6240\u6307\u7684\u5185\u5b58\u5bb9\u91cf\u3002C++/C \u8bed\u8a00\u6ca1\u6709\u529e\u6cd5\u77e5\u9053\u6307\u9488\u6240\u6307\u7684\u5185\u5b58\u5bb9\u91cf\uff0c\u9664\u975e\u5728\u7533\u8bf7\u5185\u5b58\u65f6\u8bb0\u4f4f\u5b83\u3002\u6ce8\u610f\u5f53\u6570\u7ec4\u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570\u8fdb\u884c\u4f20\u9012\u65f6\uff0c\u8be5\u6570\u7ec4\u81ea\u52a8\u9000\u5316\u4e3a\u540c\u7c7b\u578b\u7684\u6307\u9488\u3002", "\nchar a[] = \u201chello world\u201d;", "\nchar *p = a;", "\ncout<< sizeof(a) << endl; // 12 \u5b57\u8282", "\ncout<< sizeof(p) << endl; // 4 \u5b57\u8282", "\n\u8ba1\u7b97\u6570\u7ec4\u548c\u6307\u9488\u7684\u5185\u5b58\u5bb9\u91cf", "\nvoid Func(char a[100])", "\n{", "\ncout<< sizeof(a) << endl; // 4 \u5b57\u8282\u800c\u4e0d\u662f100 \u5b57\u8282", "\n}", "\n\u7b54\u6848\uff1a", "\na.\u6210\u5458\u51fd\u6570\u88ab\u91cd\u8f7d\u7684\u7279\u5f81\uff1a", "\n\uff081\uff09\u76f8\u540c\u7684\u8303\u56f4\uff08\u5728\u540c\u4e00\u4e2a\u7c7b\u4e2d\uff09\uff1b", "\n\uff082\uff09\u51fd\u6570\u540d\u5b57\u76f8\u540c\uff1b", "\n\uff083\uff09\u53c2\u6570\u4e0d\u540c\uff1b", "\n\uff084\uff09virtual \u5173\u952e\u5b57\u53ef\u6709\u53ef\u65e0\u3002", "\nb.\u8986\u76d6\u662f\u6307\u6d3e\u751f\u7c7b\u51fd\u6570\u8986\u76d6\u57fa\u7c7b\u51fd\u6570\uff0c\u7279\u5f81\u662f\uff1a", "\n\uff081\uff09\u4e0d\u540c\u7684\u8303\u56f4\uff08\u5206\u522b\u4f4d\u4e8e\u6d3e\u751f\u7c7b\u4e0e\u57fa\u7c7b\uff09\uff1b", "\n\uff082\uff09\u51fd\u6570\u540d\u5b57\u76f8\u540c\uff1b", "\n\uff083\uff09\u53c2\u6570\u76f8\u540c\uff1b", "\n\uff084\uff09\u57fa\u7c7b\u51fd\u6570\u5fc5\u987b\u6709virtual \u5173\u952e\u5b57\u3002", "\nc.\u201c\u9690\u85cf\u201d\u662f\u6307\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\u5c4f\u853d\u4e86\u4e0e\u5176\u540c\u540d\u7684\u57fa\u7c7b\u51fd\u6570\uff0c\u89c4\u5219\u5982\u4e0b\uff1a", "\n\uff081\uff09\u5982\u679c\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\u4e0e\u57fa\u7c7b\u7684\u51fd\u6570\u540c\u540d\uff0c\u4f46\u662f\u53c2\u6570\u4e0d\u540c\u3002\u6b64\u65f6\uff0c\u4e0d\u8bba\u6709\u65e0virtual\u5173\u952e\u5b57\uff0c\u57fa\u7c7b\u7684\u51fd\u6570\u5c06\u88ab\u9690\u85cf\uff08\u6ce8\u610f\u522b\u4e0e\u91cd\u8f7d\u6df7\u6dc6\uff09\u3002", "\n\uff082\uff09\u5982\u679c\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\u4e0e\u57fa\u7c7b\u7684\u51fd\u6570\u540c\u540d\uff0c\u5e76\u4e14\u53c2\u6570\u4e5f\u76f8\u540c\uff0c\u4f46\u662f\u57fa\u7c7b\u51fd\u6570\u6ca1\u6709virtual \u5173\u952e\u5b57\u3002\u6b64\u65f6\uff0c\u57fa\u7c7b\u7684\u51fd\u6570\u88ab\u9690\u85cf\uff08\u6ce8\u610f\u522b\u4e0e\u8986\u76d6\u6df7\u6dc6\uff09", "\u7b54\u6848\uff1a", "\ncout << __FILE__ ;", "\ncout<<__LINE__ ;", "\n__FILE__\u548c__LINE__\u662f\u7cfb\u7edf\u9884\u5b9a\u4e49\u5b8f\uff0c\u8fd9\u79cd\u5b8f\u5e76\u4e0d\u662f\u5728\u67d0\u4e2a\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\uff0c\u800c\u662f\u7531\u7f16\u8bd1\u5668\u5b9a\u4e49\u7684\u3002", "\u7b54\u6848\uff1a\u53ef\u4ee5\uff0c\u53ef\u4ee5\u7528_onexit \u6ce8\u518c\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u4f1a\u5728main \u4e4b\u540e\u6267\u884cint fn1(void), fn2(void), fn3(void), fn4 (void);", "\nvoid main( void )", "\n{", "\nString str(\u201czhanglin\u201d);", "\n_onexit( fn1 );", "\n_onexit( fn2 );", "\n_onexit( fn3 );", "\n_onexit( fn4 );", "\nprintf( \u201cThis is executed first.\\n\u201d );", "\n}", "\nint fn1()", "\n{", "\nprintf( \u201cnext.\\n\u201d );", "\nreturn 0;", "\n}", "\nint fn2()", "\n{", "\nprintf( \u201cexecuted \u201d );", "\nreturn 0;", "\n}", "\nint fn3()", "\n{", "\nprintf( \u201cis \u201d );", "\nreturn 0;", "\n}", "\nint fn4()", "\n{", "\nprintf( \u201cThis \u201d );", "\nreturn 0;", "\n}", "\nThe _onexit function is passed the address of a function (func) to be called when the program terminates normally. Successive calls to _onexit create a register of functions that are executed in LIFO (last-in-first-out) order. The functions passed to _onexit cannot take parameters.", "\u7b54\u6848\uff1a", "\n#ifdef __cplusplus", "\ncout<<\u201dc++\u201d;", "\n#else", "\ncout<<\u201dc\u201d;", "\n#endif", "\u7b54\u6848\uff1a", "\uff03i nclude<iostream>", "\uff03i nclude<fstream>", "using namespace std;", "void Order(vector<int>& data) //bubble sort", "\n{", "\nint count = data.size() ;", "\nint tag = false ; // \u8bbe\u7f6e\u662f\u5426\u9700\u8981\u7ee7\u7eed\u5192\u6ce1\u7684\u6807\u5fd7\u4f4d", "\nfor ( int i = 0 ; i < count ; i++)", "\n{", "\nfor ( int j = 0 ; j < count \u2013 i \u2013 1 ; j++)", "\n{", "\nif ( data[j] > data[j+1])", "\n{", "\ntag = true ;", "\nint temp = data[j] ;", "\ndata[j] = data[j+1] ;", "\ndata[j+1] = temp ;", "\n}", "\n}", "\nif ( !tag )", "\nbreak ;", "\n}", "\n}", "void main( void )", "\n{", "\nvector<int>data;", "\nifstream in(\u201cc:\\\\data.txt\u201d);", "\nif ( !in)", "\n{", "\ncout<<\u201dfile error!\u201d;", "\nexit(1);", "\n}", "\nint temp;", "\nwhile (!in.eof())", "\n{", "\nin>>temp;", "\ndata.push_back(temp);", "\n}", "\nin.close(); //\u5173\u95ed\u8f93\u5165\u6587\u4ef6\u6d41", "\nOrder(data);", "\nofstream out(\u201cc:\\\\result.txt\u201d);", "\nif ( !out)", "\n{", "\ncout<<\u201dfile error!\u201d;", "\nexit(1);", "\n}", "\nfor ( i = 0 ; i < data.size() ; i++)", "\nout<<data[i]<<\u201d \u201c;", "\nout.close(); //\u5173\u95ed\u8f93\u51fa\u6587\u4ef6\u6d41", "\n}", "struct Node", "\n{", "\nint data ;", "\nNode *next ;", "\n};", "\ntypedef struct Node Node ;", "(1)\u5df2\u77e5\u94fe\u8868\u7684\u5934\u7ed3\u70b9head,\u5199\u4e00\u4e2a\u51fd\u6570\u628a\u8fd9\u4e2a\u94fe\u8868\u9006\u5e8f ( Intel)", "Node * ReverseList(Node *head) //\u94fe\u8868\u9006\u5e8f", "\n{", "\nif ( head == NULL || head->next == NULL )", "\nreturn head;", "\nNode *p1 = head ;", "\nNode *p2 = p1->next ;", "\nNode *p3 = p2->next ;", "\np1->next = NULL ;", "\nwhile ( p3 != NULL )", "\n{", "\np2->next = p1 ;", "\np1 = p2 ;", "\np2 = p3 ;", "\np3 = p3->next ;", "\n}", "\np2->next = p1 ;", "\nhead = p2 ;", "\nreturn head ;", "\n}", "\n(2)\u5df2\u77e5\u4e24\u4e2a\u94fe\u8868head1 \u548chead2 \u5404\u81ea\u6709\u5e8f\uff0c\u8bf7\u628a\u5b83\u4eec\u5408\u5e76\u6210\u4e00\u4e2a\u94fe\u8868\u4f9d\u7136\u6709\u5e8f\u3002(\u4fdd\u7559\u6240\u6709\u7ed3\u70b9\uff0c\u5373\u4fbf\u5927\u5c0f\u76f8\u540c\uff09", "\nNode * Merge(Node *head1 , Node *head2)", "\n{", "\nif ( head1 == NULL)", "\nreturn head2 ;", "\nif ( head2 == NULL)", "\nreturn head1 ;", "\nNode *head = NULL ;", "\nNode *p1 = NULL;", "\nNode *p2 = NULL;", "\nif ( head1->data < head2->data )", "\n{", "\nhead = head1 ;", "\np1 = head1->next;", "\np2 = head2 ;", "\n}", "\nelse", "\n{", "\nhead = head2 ;", "\np2 = head2->next ;", "\np1 = head1 ;", "\n}", "\nNode *pcurrent = head ;", "\nwhile ( p1 != NULL && p2 != NULL)", "\n{", "\nif ( p1->data <= p2->data )", "\n{", "\npcurrent->next = p1 ;", "\npcurrent = p1 ;", "\np1 = p1->next ;", "\n}", "\nelse", "\n{", "\npcurrent->next = p2 ;", "\npcurrent = p2 ;", "\np2 = p2->next ;", "\n}", "\n}", "\nif ( p1 != NULL )", "\npcurrent->next = p1 ;", "\nif ( p2 != NULL )", "\npcurrent->next = p2 ;", "\nreturn head ;", "\n}", "\n(3)\u5df2\u77e5\u4e24\u4e2a\u94fe\u8868head1 \u548chead2 \u5404\u81ea\u6709\u5e8f\uff0c\u8bf7\u628a\u5b83\u4eec\u5408\u5e76\u6210\u4e00\u4e2a\u94fe\u8868\u4f9d\u7136\u6709\u5e8f\uff0c\u8fd9\u6b21\u8981\u6c42\u7528\u9012\u5f52\u65b9\u6cd5\u8fdb\u884c\u3002 (Autodesk)", "\n\u7b54\u6848\uff1a", "\nNode * MergeRecursive(Node *head1 , Node *head2)", "\n{", "\nif ( head1 == NULL )", "\nreturn head2 ;", "\nif ( head2 == NULL)", "\nreturn head1 ;", "\nNode *head = NULL ;", "\nif ( head1->data < head2->data )", "\n{", "\nhead = head1 ;", "\nhead->next = MergeRecursive(head1->next,head2);", "\n}", "\nelse", "\n{", "\nhead = head2 ;", "\nhead->next = MergeRecursive(head1,head2->next);", "\n}", "\nreturn head ;", "\n}", "\nclass B", "\n{", "\npublic:", "\nB()", "\n{", "\ncout<<\u201ddefault constructor\u201d<<endl;", "\n}", "\n~B()", "\n{", "\ncout<<\u201ddestructed\u201d<<endl;", "\n}", "\nB(int i):data(i) //B(int) works as a converter ( int -> instance of B)", "\n{", "\ncout<<\u201dconstructed by parameter \u201d << data <<endl;", "\n}", "\nprivate:", "\nint data;", "\n};", "B Play( B b)", "\n{", "\nreturn b ;", "\n}", "(1) results:", "\nint main(int argc, char* argv[]) constructed by parameter 5", "\n{ destructed B(5)\u5f62\u53c2\u6790\u6784", "\nB t1 = Play(5); B t2 = Play(t1); \u3000 destructed t1\u5f62\u53c2\u6790\u6784", "\nreturn 0;\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 destructed t2\u3000\u6ce8\u610f\u987a\u5e8f\uff01", "\n} destructed t1", "(2) results:", "\nint main(int argc, char* argv[]) constructed by parameter 5", "\n{ destructed B(5)\u5f62\u53c2\u6790\u6784", "\nB t1 = Play(5); B t2 = Play(10); \u3000 constructed by parameter 10", "\nreturn 0;\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 destructed B(10)\u5f62\u53c2\u6790\u6784", "\n} destructed t2\u3000\u6ce8\u610f\u987a\u5e8f\uff01", "destructed t1", "\n\u7b54\u6848\uff1a", "\nconst int MINNUMBER = -32767 ;", "\nint find_sec_max( int data[] , int count)", "\n{", "\nint maxnumber = data[0] ;", "\nint sec_max = MINNUMBER ;", "\nfor ( int i = 1 ; i < count ; i++)", "\n{", "\nif ( data[i] > maxnumber )", "\n{", "\nsec_max = maxnumber ;", "\nmaxnumber = data[i] ;", "\n}", "\nelse", "\n{", "\nif ( data[i] > sec_max )", "\nsec_max = data[i] ;", "\n}", "\n}", "\nreturn sec_max ;", "\n}", "KMP\u7b97\u6cd5\u6548\u7387\u6700\u597d\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f\uff2f(n+m)\u3002", "\n\u6bd4\u5982\u6709class A : public class B, public class C {}", "\n\u90a3\u4e48A\u7684\u5185\u5b58\u7ed3\u6784\u5927\u81f4\u662f\u600e\u4e48\u6837\u7684\uff1f", "\u8fd9\u4e2a\u662fcompiler-dependent\u7684, \u4e0d\u540c\u7684\u5b9e\u73b0\u5176\u7ec6\u8282\u53ef\u80fd\u4e0d\u540c\u3002", "\n\u5982\u679c\u4e0d\u8003\u8651\u6709\u865a\u51fd\u6570\u3001\u865a\u7ee7\u627f\u7684\u8bdd\u5c31\u76f8\u5f53\u7b80\u5355\uff1b\u5426\u5219\u7684\u8bdd\uff0c\u76f8\u5f53\u590d\u6742\u3002", "\n\u53ef\u4ee5\u53c2\u8003\u300a\u6df1\u5165\u63a2\u7d22C++\u5bf9\u8c61\u6a21\u578b\u300b\uff0c\u6216\u8005\uff1a", "http://blog.csdn.net/wfwd/archive/2006/05/30/763797.aspx", "struct node { char val; node* next;}", "bool check(const node* head) {} //return false : \u65e0\u73af\uff1btrue: \u6709\u73af", "\u4e00\u79cdO\uff08n\uff09\u7684\u529e\u6cd5\u5c31\u662f\uff08\u641e\u4e24\u4e2a\u6307\u9488\uff0c\u4e00\u4e2a\u6bcf\u6b21\u9012\u589e\u4e00\u6b65\uff0c\u4e00\u4e2a\u6bcf\u6b21\u9012\u589e\u4e24\u6b65\uff0c\u5982\u679c\u6709\u73af\u7684\u8bdd\u4e24\u8005\u5fc5\u7136\u91cd\u5408\uff0c\u53cd\u4e4b\u4ea6\u7136\uff09\uff1a", "\nbool check(const node* head)", "\n{", "\nif(head==NULL) return false;", "\nnode *low=head, *fast=head->next;", "\nwhile(fast!=NULL && fast->next!=NULL)", "\n{", "\nlow=low->next;", "\nfast=fast->next->next;", "\nif(low==fast) return true;", "\n}", "\nreturn false;", "\n}", "\n", "74.\u4e0d\u4f7f\u7528\u5e93\u51fd\u6570\uff0c\u7f16\u5199\u51fd\u6570int strcmp(char\u00a0 *source, char *dest)\u76f8\u7b49\u8fd4\u56de0\uff0c\u4e0d\u7b49\u8fd4\u56de-1", "\u00a0", "int StrCmp(char\u00a0 *source, char *dest)", "{", "assert(source\u00a0!=NULL)\u00a0;", "assert(dest!=NULL)\u00a0;", "while(*source= =*dest&&*source&&*dest)", "{", "source++;", "dest++;", "}", "return (*source!=*dest)?-1:0;", "}", "\u00a0", "\u00a0", "\u00a0", "\u00a0", "75.\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u5b9e\u73b0\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7684\u2019\\t\u2019\u66ff\u6362\u6210\u56db\u4e2a\u2019*\u2019\uff0c \u2019\\t\u2019\u4e2a\u6570\u4e0d\u5b9a\u3002\u5982char *p=\u201dht\\thdsf\\t\\ttt\\tfds dfsw\\t ew\\t\u201d,\u66ff\u6362\u540ep=\u201dht****hdsf********tt****fds dfsw**** ew****\u201d\u3002", "char *Replace(char *Sorce)", "{", "char *pTemp=Sorce;", "int iCount=0;", "int iSizeOfSorce=0;", "\u00a0", "while(*pTemp!=\u2019\\0\u2032)", "{", "if(\u2018\\t\u2019==*pTemp)", "iCount++;", "pTemp++;", "}", "iSizeOfSorce=pTemp-Sorce;", "\u00a0", "char *pNewStr=new char[iSizeOfSorce+3*iCount*sizeof(char)+1];", "char *pTempNewStr=pNewStr;", "\u00a0", "pTemp=Sorce;", "while(*pTemp!=\u2019\\0\u2032)", "{", "if(\u2018\\t\u2019==*pTemp)", "{", "for(int iLoop=0; iLoop<4; iLoop++)", "{", "*pTempNewStr=\u2019*';", "pTempNewStr++;", "}", "pTemp++;", "}", "else", "{", "*pTempNewStr=*pTemp;", "pTemp++;", "pTempNewStr++;", "}", "}", "*pTempNewStr=\u2019\\0\u2032;", "\u00a0", "return pNewStr;", "}", "\u00a0", "\u00a0", "\u00a0", "\u00a0", "\u00a0", "\u00a0", "\u00a0", "\u00a0", "\u00a0", "\u00a0", "\u00a0", "77\u3001\u94fe\u8868\u8282\u70b9\u7ed3\u6784\u5982\u4e0b\uff1a", "struct STUDENT", "{", "long num;", "float score;", "STUDENT *pNext;", "};", "\u7f16\u5199\u5b9e\u73b0\u5c06\u4e24\u68f5\u6709\u5e8f\uff08\u6309\u5b66\u53f7\u4ece\u5c0f\u5230\u5927\uff09\u7684\u94fe\u8868\u5408\u5e76\u7684\u51fd\u6570\uff0c\u8981\u6c42\u5408\u5e76\u540e\u7684\u94fe\u8868\u6709\u5e8f\uff08\u6309\u5b66\u53f7\u4ece\u5c0f\u5230\u5927\uff09", "STUDENT *EmergeList(STUDENT *pHead1,STUDENT *pHead2)", "{", "//\u53d6\u5c0f\u8005\u4e3a\u8868\u5934", "STUDENT * pHead;", "STUDENT *p1;", "STUDENT *p2;", "STUDENT *pCur;", "STUDENT *pTemp;", "\u00a0", "if (pHead1->num<= pHead2->num)", "{", "pHead = pHead1;", "p2 = pHead2;", "p1=pHead1->pNext;", "}", "else", "{", "pHead = pHead2;", "p1 = pHead1;", "p2=pHead2->pNext;", "}", "pCur=pHead;", "while(p1!=NULL&&p2!=NULL)", "{", "if(p2->num<p1->num)", "{", "pCur->pNext=p2;", "p2=p2->pNext;", "pCur=pCur->pNext;", "}", "else if(p2->num>p1->num)", "{", "pCur->pNext=p1;", "p1=p1->pNext;", "pCur=pCur->pNext;", "}", "else if(p2->num==p1->num)", "{", "pCur->pNext=p1;", "p1=p1->pNext;", "pCur=pCur->pNext;", "pTemp= p2;", "p2=p2->pNext;", "delete pTemp;", "pTemp = NULL;", "}", "}", "if(NULL==p1)", "{", "pCur->pNext=p2;", "}", "else if(NULL==p2)", "{", "pCur->pNext=p1;", "}", "return pHead;", "}", "\u00a0", "78\u3001\u5c01\u88c5CMyString\u7c7b\uff0c\u8981\u6c42\u58f0\u660e\u548c\u5b9e\u73b0\u5206\u5f00\uff0c\u58f0\u660e\u89c1MyString.h\uff0c\u8be5\u7c7b\u7684\u58f0\u660e\u53ef\u4ee5\u6dfb\u52a0\u5185\u5bb9\uff0c\u5b8c\u6210STLTest\u6587\u4ef6\u5939\u4e0bmain\u6587\u4ef6\u7684\u8981\u6c42\u3002", "\u00a0", "\u53c2\u89c1STLTest Answer\u6587\u4ef6\u5939", "\u00a0", "79.\u8bf7\u4f60\u5206\u522b\u753b\u51faOSI\u7684\u4e03\u5c42\u7f51\u7edc\u7ed3\u6784\u56fe\u548cTCP/IP\u7684\u4e94\u5c42\u7ed3\u6784\u56fe\u3002", "80.\u8bf7\u4f60\u8be6\u7ec6\u5730\u89e3\u91ca\u4e00\u4e0bIP\u534f\u8bae\u7684\u5b9a\u4e49\uff0c\u5728\u54ea\u4e2a\u5c42\u4e0a\u9762\uff1f\u4e3b\u8981\u6709\u4ec0\u4e48\u4f5c\u7528\uff1fTCP\u4e0eUDP\u5462\uff1f", "81.\u8bf7\u95ee\u4ea4\u6362\u673a\u548c\u8def\u7531\u5668\u5404\u81ea\u7684\u5b9e\u73b0\u539f\u7406\u662f\u4ec0\u4e48\uff1f\u5206\u522b\u5728\u54ea\u4e2a\u5c42\u6b21\u4e0a\u9762\u5b9e\u73b0\u7684\uff1f", "82.\u8bf7\u95eeC++\u7684\u7c7b\u548cC\u91cc\u9762\u7684struct\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "83.\u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1f\u662f\u600e\u4e48\u5b9e\u73b0\u7684\uff1f\u64cd\u4f5c\u7cfb\u7edf\u548c\u7f16\u8bd1\u5668\u662f\u600e\u4e48\u77e5\u9053\u7684\uff1f", "\u00a0", "84. \u975eC++\u5185\u5efa\u578b\u522b A \u548c B\uff0c\u5728\u54ea\u51e0\u79cd\u60c5\u51b5\u4e0bB\u80fd\u9690\u5f0f\u8f6c\u5316\u4e3aA\uff1f[C++\u4e2d\u7b49", "a. class B : public A { \u2026\u2026} // B\u516c\u6709\u7ee7\u627f\u81eaA\uff0c\u53ef\u4ee5\u662f\u95f4\u63a5\u7ee7\u627f\u7684", "b. class B { operator A( ); } // B\u5b9e\u73b0\u4e86\u9690\u5f0f\u8f6c\u5316\u4e3aA\u7684\u8f6c\u5316", "c. class A { A( const B& ); } // A\u5b9e\u73b0\u4e86non-explicit\u7684\u53c2\u6570\u4e3aB\uff08\u53ef\u4ee5\u6709\u5176\u4ed6\u5e26\u9ed8\u8ba4\u503c\u7684\u53c2\u6570\uff09\u6784\u9020\u51fd\u6570", "d. A& operator= ( const A& ); // \u8d4b\u503c\u64cd\u4f5c\uff0c\u867d\u4e0d\u662f\u6b63\u5b97\u7684\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\uff0c\u4f46\u4e5f\u53ef\u4ee5\u52c9\u5f3a\u7b97\u4e00\u4e2a", "\u00a0", "85. \u4ee5\u4e0b\u4ee3\u7801\u4e2d\u7684\u4e24\u4e2asizeof\u7528\u6cd5\u6709\u95ee\u9898\u5417\uff1f[C\u6613]", "void UpperCase( char str[] ) // \u5c06 str \u4e2d\u7684\u5c0f\u5199\u5b57\u6bcd\u8f6c\u6362\u6210\u5927\u5199\u5b57\u6bcd", "{", "for( size_t i=0; i<sizeof(str)/sizeof(str[0]); ++i )", "if( \u2018a\u2019<=str[i] && str[i]<=\u2019z\u2019 )", "str[i] -= (\u2018a\u2019-'A\u2019 );", "}", "char str[] = \u201caBcDe\u201d;", "cout << \u201cstr\u5b57\u7b26\u957f\u5ea6\u4e3a: \u201d << sizeof(str)/sizeof(str[0]) << endl;", "UpperCase( str );", "cout << str << endl;", "86. \u4ee5\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1f[C\u96be]", "\u00a0", "void char2Hex( char c ) // \u5c06\u5b57\u7b26\u4ee516\u8fdb\u5236\u8868\u793a", "{", "char ch = c/0\u00d710 + \u20190\u2032; if( ch > \u20199\u2032 ) ch += (\u2018A\u2019-\u20199\u2032-1);", "char cl = c%0\u00d710 + \u20190\u2032; if( cl > \u20199\u2032 ) cl += (\u2018A\u2019-\u20199\u2032-1);", "cout << ch << cl << \u2018 \u2018;", "}", "char str[] = \u201cI love \u4e2d\u56fd\u201d;", "for( size_t i=0; i<strlen(str); ++i )", "char2Hex( str[i] );", "cout << endl;", "\u00a0", "87. \u4ee5\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1f[C++\u6613]", "struct Test", "{", "Test( int ) {}", "Test() {}", "void fun() {}", "};", "void main( void )", "{", "Test a(1);", "a.fun();", "Test b();", "b.fun();", "}", "\u00a0", "\u00a0", "88. \u4ee5\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1f[C++\u6613]", "cout << (true?1:\u201d1\u2033) << endl;", "\u00a0", "\u00a0", "89. \u4ee5\u4e0b\u4ee3\u7801\u80fd\u591f\u7f16\u8bd1\u901a\u8fc7\u5417\uff0c\u4e3a\u4ec0\u4e48\uff1f[C++\u6613]", "\u00a0", "unsigned int const size1 = 2;", "char str1[ size1 ];", "unsigned int temp = 0;", "cin >> temp;", "unsigned int const size2 = temp;", "char str2[ size2 ];", "\u00a0", "90. \u4ee5\u4e0b\u4ee3\u7801\u4e2d\u7684\u8f93\u51fa\u8bed\u53e5\u8f93\u51fa0\u5417\uff0c\u4e3a\u4ec0\u4e48\uff1f[C++\u6613]", "\u00a0", "struct CLS", "{", "int m_i;", "CLS( int i ) : m_i(i) {}", "CLS()", "{", "CLS(0);", "}", "};", "CLS obj;", "cout << obj.m_i << endl;", "\u00a0", "\u00a0", "91. C++\u4e2d\u7684\u7a7a\u7c7b\uff0c\u9ed8\u8ba4\u4ea7\u751f\u54ea\u4e9b\u7c7b\u6210\u5458\u51fd\u6570\uff1f[C++\u6613]", "\u00a0", "\u7b54\uff1a", "class Empty", "{", "public:", "Empty();\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // \u7f3a\u7701\u6784\u9020\u51fd\u6570", "Empty( const Empty& );\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // \u62f7\u8d1d\u6784\u9020\u51fd\u6570", "~Empty();\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // \u6790\u6784\u51fd\u6570", "Empty& operator=( const Empty& ); // \u8d4b\u503c\u8fd0\u7b97\u7b26", "Empty* operator&();\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // \u53d6\u5740\u8fd0\u7b97\u7b26", "const Empty* operator&() const;\u00a0\u00a0\u00a0\u00a0\u00a0 // \u53d6\u5740\u8fd0\u7b97\u7b26 const", "};", "\u00a0", "\u00a0", "92. \u4ee5\u4e0b\u4e24\u6761\u8f93\u51fa\u8bed\u53e5\u5206\u522b\u8f93\u51fa\u4ec0\u4e48\uff1f[C++\u96be]", "\u00a0", "float a =1.0f;", "cout << (int)a << endl;", "cout << (int&)a << endl;", "cout << boolalpha << ( (int)a == (int&)a ) << endl; // \u8f93\u51fa\u4ec0\u4e48\uff1f", "float b =0.0f;", "cout << (int)b << endl;", "cout << (int&)b << endl;", "cout << boolalpha << ( (int)b == (int&)b ) << endl; // \u8f93\u51fa\u4ec0\u4e48\uff1f", "\u00a0", "93. \u4ee5\u4e0b\u53cd\u5411\u904d\u5386array\u6570\u7ec4\u7684\u65b9\u6cd5\u6709\u4ec0\u4e48\u9519\u8bef\uff1f[STL\u6613]", "vector array;", "array.push_back( 1 );", "array.push_back( 2 );", "array.push_back( 3 );", "for( vector::size_type i=array.size()-1; i>=0; \u2013i ) // \u53cd\u5411\u904d\u5386array\u6570\u7ec4", "{", "cout << array[i] << endl;", "}", "\u00a0", "\u00a0", "94. \u4ee5\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1f[STL\u6613]", "typedef vector IntArray;", "IntArray array;", "array.push_back( 1 );", "array.push_back( 2 );", "array.push_back( 2 );", "array.push_back( 3 );", "// \u5220\u9664array\u6570\u7ec4\u4e2d\u6240\u6709\u76842", "for( IntArray::iterator itor=array.begin(); itor!=array.end(); ++itor )", "{", "if( 2 == *itor ) array.erase( itor );", "}", "\u00a0", "95. \u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u5b8c\u6210\u5185\u5b58\u4e4b\u95f4\u7684\u62f7\u8d1d\u3002[\u8003\u8651\u95ee\u9898\u662f\u5426\u5168\u9762]", "\u00a0", "\u7b54\uff1a", "\u00a0", "void* mymemcpy( void *dest, const void *src, size_t count )", "{", "char* pdest = static_cast<char*>( dest );", "const char* psrc = static_cast<const char*>( src );", "if( pdest>psrc && pdest<psrc+cout ) \u80fd\u8003\u8651\u5230\u8fd9\u79cd\u60c5\u51b5\u5c31\u884c\u4e86", "{", "for( size_t i=count-1; i!=-1; \u2013i )", "pdest[i] = psrc[i];", "}", "else", "{", "for( size_t i=0; i<count; ++i )", "pdest[i] = psrc[i];", "}", "return dest;", "}", "\u00a0", "int main( void )", "{", "char str[] = \u201c0123456789\u2033;", "mymemcpy( str+1, str+0, 9 );", "cout << str << endl;", "system( \u201cPause\u201d );", "return 0;", "}", "\u00a0", "\u534e\u4e3aC/C++\u7b14\u8bd5\u9898(\u9644\u7b54\u6848)2008\u5e7402\u670815\u65e5\u661f\u671f\u4e94 18:001.\u5199\u51fa\u5224\u65adABCD\u56db\u4e2a\u8868\u8fbe\u5f0f\u7684\u662f\u5426\u6b63\u786e, \u82e5\u6b63\u786e, \u5199\u51fa\u7ecf\u8fc7\u8868\u8fbe\u5f0f\u4e2d a\u7684\u503c(3\u5206)", "96.int a = 4;", "(A)a += (a++); (B) a += (++a) ;(C) (a++) += a;(D) (++a) += (a++);", "a = ?", "\u7b54\uff1aC\u9519\u8bef\uff0c\u5de6\u4fa7\u4e0d\u662f\u4e00\u4e2a\u6709\u6548\u53d8\u91cf\uff0c\u4e0d\u80fd\u8d4b\u503c\uff0c\u53ef\u6539\u4e3a(++a) += a;", "\u6539\u540e\u7b54\u6848\u4f9d\u6b21\u4e3a9,10,10,11", "\u00a0", "97.\u67d032\u4f4d\u7cfb\u7edf\u4e0b, C++\u7a0b\u5e8f\uff0c\u8bf7\u8ba1\u7b97sizeof \u7684\u503c(5\u5206).", "char str[] = \u201chttp://www.ibegroup.com/\u201d", "char *p = str ;", "int n = 10;", "\u8bf7\u8ba1\u7b97", "sizeof (str ) = \uff1f\uff081\uff09", "sizeof ( p ) = \uff1f\uff082\uff09", "sizeof ( n ) = \uff1f\uff083\uff09", "void Foo ( char str[100]){", "\u8bf7\u8ba1\u7b97", "sizeof( str ) = \uff1f\uff084\uff09", "}", "void *p = malloc( 100 );", "\u8bf7\u8ba1\u7b97", "sizeof ( p ) = \uff1f\uff085\uff09", "\u7b54\uff1a\uff081\uff0917 \uff082\uff094 \uff083\uff09 4 \uff084\uff094 \uff085\uff094", "\u00a0", "98. \u56de\u7b54\u4e0b\u9762\u7684\u95ee\u9898. (4\u5206)", "(1).\u5934\u6587\u4ef6\u4e2d\u7684 ifndef/define/endif \u5e72\u4ec0\u4e48\u7528\uff1f\u9884\u5904\u7406", "\u7b54\uff1a\u9632\u6b62\u5934\u6587\u4ef6\u88ab\u91cd\u590d\u5f15\u7528", "(2). \uff03i nclude \u548c \uff03i nclude \u201cfilename.h\u201d \u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\u7b54\uff1a\u524d\u8005\u7528\u6765\u5305\u542b\u5f00\u53d1\u73af\u5883\u63d0\u4f9b\u7684\u5e93\u5934\u6587\u4ef6\uff0c\u540e\u8005\u7528\u6765\u5305\u542b\u81ea\u5df1\u7f16\u5199\u7684\u5934\u6587\u4ef6\u3002", "(3).\u5728C++ \u7a0b\u5e8f\u4e2d\u8c03\u7528\u88ab C \u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u7684\u51fd\u6570\uff0c\u4e3a\u4ec0\u4e48\u8981\u52a0 extern \u201cC\u201d\u58f0\u660e\uff1f", "\u7b54\uff1a\u51fd\u6570\u548c\u53d8\u91cf\u88abC++\u7f16\u8bd1\u540e\u5728\u7b26\u53f7\u5e93\u4e2d\u7684\u540d\u5b57\u4e0eC\u8bed\u8a00\u7684\u4e0d\u540c\uff0c\u88abextern \u201cC\u201d\u4fee\u9970\u7684\u53d8", "\u91cf\u548c\u51fd\u6570\u662f\u6309\u7167C\u8bed\u8a00\u65b9\u5f0f\u7f16\u8bd1\u548c\u8fde\u63a5\u7684\u3002\u7531\u4e8e\u7f16\u8bd1\u540e\u7684\u540d\u5b57\u4e0d\u540c\uff0cC++\u7a0b\u5e8f\u4e0d\u80fd\u76f4\u63a5\u8c03", "\u7528C \u51fd\u6570\u3002C++\u63d0\u4f9b\u4e86\u4e00\u4e2aC \u8fde\u63a5\u4ea4\u6362\u6307\u5b9a\u7b26\u53f7extern\u201cC\u201d\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002", "(4). switch()\u4e2d\u4e0d\u5141\u8bb8\u7684\u6570\u636e\u7c7b\u578b\u662f?", "\u7b54\uff1a\u5b9e\u578b", "\u00a0", "99. \u56de\u7b54\u4e0b\u9762\u7684\u95ee\u9898(6\u5206)", "(1).Void GetMemory(char **p, int num){", "*p = (char *)malloc(num);", "}", "void Test(void){", "char *str = NULL;", "GetMemory(&str, 100);", "strcpy(str, \u201chello\u201d);", "printf(str);", "}", "\u8bf7\u95ee\u8fd0\u884cTest \u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\u7b54\uff1a\u8f93\u51fa\u201chello\u201d", "(2). void Test(void){", "char *str = (char *) malloc(100);", "strcpy(str, \u201chello\u201d);", "free(str);", "if(str != NULL){", "strcpy(str, \u201cworld\u201d);", "printf(str);", "}", "}", "\u8bf7\u95ee\u8fd0\u884cTest \u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\u7b54\uff1a\u8f93\u51fa\u201cworld\u201d", "\u00a0", "100. char *GetMemory(void){", "char p[] = \u201chello world\u201d;", "return p;", "}", "void Test(void){", "char *str = NULL;", "str = GetMemory();", "printf(str);", "}", "\u8bf7\u95ee\u8fd0\u884cTest \u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\u7b54\uff1a\u65e0\u6548\u7684\u6307\u9488\uff0c\u8f93\u51fa\u4e0d\u786e\u5b9a"], "title": "C++\u5f00\u53d1\u5de5\u7a0b\u5e08\u9762\u8bd5\u9898\u5e93 50~100\u9053"},
{"contents": ["151\u3001\u5199\u51fa\u5224\u65adABCD\u56db\u4e2a\u8868\u8fbe\u5f0f\u7684\u662f\u5426\u6b63\u786e, \u82e5\u6b63\u786e, \u5199\u51fa\u7ecf\u8fc7\u8868\u8fbe\u5f0f\u4e2d a\u7684\u503c", "int a = 4;", "(A)a += (a++); (B) a += (++a) ;(C) (a++) += a;(D) (++a) += (a++);", "a = ?", "\u7b54\uff1aC\u9519\u8bef\uff0c\u5de6\u4fa7\u4e0d\u662f\u4e00\u4e2a\u6709\u6548\u53d8\u91cf\uff0c\u4e0d\u80fd\u8d4b\u503c\uff0c\u53ef\u6539\u4e3a(++a) += a;", "\u6539\u540e\u7b54\u6848\u4f9d\u6b21\u4e3a9,10,10,11", "\u00a0", "152\u3001\u67d032\u4f4d\u7cfb\u7edf\u4e0b, C++\u7a0b\u5e8f\uff0c\u8bf7\u8ba1\u7b97sizeof \u7684\u503c", "char str[] = \u201chttp://www.ibegroup.com/\u201d", "char *p = str ;", "int n = 10;", "\u8bf7\u8ba1\u7b97", "\uff081\uff09sizeof (str ) = \uff1f", "\uff082\uff09sizeof ( p ) = \uff1f", "\uff083\uff09sizeof ( n ) = \uff1f", "void Foo ( char str[100]){", "\u8bf7\u8ba1\u7b97", "sizeof( str ) = \uff1f\uff084\uff09", "}", "void *p = malloc( 100 );", "\u8bf7\u8ba1\u7b97", "sizeof ( p ) = \uff1f\uff085\uff09", "\u7b54\uff1a\uff081\uff0925 \uff082\uff094 \uff083\uff09 4 \uff084\uff094 \uff085\uff094", "\u00a0", "153\u3001 \u56de\u7b54\u4e0b\u9762\u7684\u95ee\u9898", "(1).Void GetMemory(char **p, int num){", "*p = (char *)malloc(num);", "}", "void Test(void){", "char *str = NULL;", "GetMemory(&str, 100);", "strcpy(str, \u201chello\u201d);", "printf(str);", "}", "\u8bf7\u95ee\u8fd0\u884cTest \u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\u7b54\uff1a\u8f93\u51fa\u201chello\u201d", "\u00a0", "154\u3001 void Test(void)", "{", "char *str = (char *) malloc(100);", "strcpy(str, \u201chello\u201d);", "free(str);", "if(str != NULL){", "strcpy(str, \u201cworld\u201d);", "printf(str);", "}", "}", "\u8bf7\u95ee\u8fd0\u884cTest \u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\u7b54\uff1a\u8f93\u51fa\u201cworld\u201d", "\u00a0", "155\u3001 char *GetMemory(void){", "char p[] = \u201chello world\u201d;", "return p;", "}", "void Test(void){", "char *str = NULL;", "str = GetMemory();", "printf(str);", "}", "\u8bf7\u95ee\u8fd0\u884cTest \u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\u7b54\uff1a\u65e0\u6548\u7684\u6307\u9488\uff0c\u8f93\u51fa\u4e0d\u786e\u5b9a", "\u00a0", "VC\u6e90\u7801\uff1a", "char * __cdecl strcat (char * dst, const char * src)", "{", "char * cp = dst;", "while( *cp )", "cp++;", "while( *cp++ = *src++ ) ;", "return( dst );", "}", "\u00a0", "\u00a0", "158\u3001MFC\u4e2dCString\u662f\u7c7b\u578b\u5b89\u5168\u7c7b\u4e48\uff1f", "\u7b54\uff1a\u4e0d\u662f\uff0c\u5176\u5b83\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u5230CString\u53ef\u4ee5\u4f7f\u7528CString\u7684\u6210\u5458\u51fd\u6570Format\u6765\u8f6c\u6362", "\u00a0", "\u00a0", "159.C++\u4e2d\u4ec0\u4e48\u6570\u636e\u5206\u914d\u5728\u6808\u6216\u5806\u4e2d\uff1f", "\u7b54\uff1a\u6808: \u5b58\u653e\u5c40\u90e8\u53d8\u91cf\uff0c\u51fd\u6570\u8c03\u7528\u53c2\u6570,\u51fd\u6570\u8fd4\u56de\u503c\uff0c\u51fd\u6570\u8fd4\u56de\u5730\u5740\u3002\u7531\u7cfb\u7edf\u7ba1\u7406", "\u5806: \u7a0b\u5e8f\u8fd0\u884c\u65f6\u52a8\u6001\u7533\u8bf7\uff0cnew \u548cmalloc\u7533\u8bf7\u7684\u5185\u5b58\u5c31\u5728\u5806\u4e0a", "\u00a0", "\u00a0", "160\u3001\u51fd\u6570\u6a21\u677f\u4e0e\u7c7b\u6a21\u677f\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\u7b54\uff1a\u51fd\u6570\u6a21\u677f\u7684\u5b9e\u4f8b\u5316\u662f\u7531\u7f16\u8bd1\u7a0b\u5e8f\u5728\u5904\u7406\u51fd\u6570\u8c03\u7528\u65f6\u81ea\u52a8\u5b8c\u6210\u7684\uff0c\u800c\u7c7b\u6a21\u677f\u7684\u5b9e\u4f8b\u5316", "\u5fc5\u987b\u7531\u7a0b\u5e8f\u5458\u5728\u7a0b\u5e8f\u4e2d\u663e\u5f0f\u5730\u6307\u5b9a\u3002", "\u00a0", "161\u3001 int i=10, j=10, k=3; k*=i+j; k\u6700\u540e\u7684\u503c\u662f\uff1f", "\u7b54\uff1a60\uff0c\u6b64\u9898\u8003\u5bdf\u4f18\u5148\u7ea7\uff0c\u5b9e\u9645\u5199\u6210\uff1a k*=(i+j);\uff0c\u8d4b\u503c\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u6700\u4f4e", "\u00a0", "\u00a0", "\u00a0", "162\u3001do\u2026\u2026while\u548cwhile\u2026\u2026do\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\u7b54 \u3001\u524d\u4e00\u4e2a\u5faa\u73af\u4e00\u904d\u518d\u5224\u65ad\uff0c\u540e\u4e00\u4e2a\u5224\u65ad\u4ee5\u540e\u518d\u5faa\u73af", "\u00a0", "\u00a0", "163\u3001\u8bf7\u5199\u51fa\u4e0b\u5217\u4ee3\u7801\u7684\u8f93\u51fa\u5185\u5bb9", "#i nclude", "main()", "{", "int a,b,c,d;", "a=10;", "b=a++;", "c=++a;", "d=10*a++;", "printf(\u201cb\uff0cc\uff0cd\uff1a%d\uff0c%d\uff0c%d\u201d\uff0cb\uff0cc\uff0cd\uff09;", "return 0;", "}", "\u7b54 \u300110\uff0c12\uff0c120", "\u00a0", "\u00a0", "164.\u5728c\u8bed\u8a00\u5e93\u51fd\u6570\u4e2d\u5c06\u4e00\u4e2a\u5b57\u7b26\u8f6c\u6362\u6210\u6574\u578b\u7684\u51fd\u6570\u662fatol()\u5417\uff0c\u8fd9\u4e2a\u51fd\u6570\u7684\u539f\u578b\u662f\u4ec0\u4e48\uff1f", "\u7b54 \u3001\u51fd\u6570\u540d: atol", "\u529f \u80fd: \u628a\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u957f\u6574\u578b\u6570", "\u7528 \u6cd5: long atol(const char *nptr);", "\u7a0b\u5e8f\u4f8b:", "\uff03include", "\uff03include", "int main(void)", "{", "long l;", "char *str = \u201c98765432\u2033;", "l = atol(lstr);", "printf(\u201cstring = %s integer = %ld\\n\u201d, str, l);", "return(0);", "}", "\u00a0", "165. \u4ee5\u4e0b\u4e09\u6761\u8f93\u51fa\u8bed\u53e5\u5206\u522b\u8f93\u51fa\u4ec0\u4e48\uff1f", "char str1[] = \u201cabc\u201d;", "char str2[] = \u201cabc\u201d;", "const char str3[] = \u201cabc\u201d;", "const char str4[] = \u201cabc\u201d;", "const char* str5 = \u201cabc\u201d;", "const char* str6 = \u201cabc\u201d;", "cout << boolalpha << ( str1==str2 ) << endl; // \u8f93\u51fa\u4ec0\u4e48\uff1f", "cout << boolalpha << ( str3==str4 ) << endl; // \u8f93\u51fa\u4ec0\u4e48\uff1f", "cout << boolalpha << ( str5==str6 ) << endl; // \u8f93\u51fa\u4ec0\u4e48\uff1f", "\u7b54\uff1a\u5206\u522b\u8f93\u51fafalse,false,true\u3002str1\u548cstr2\u90fd\u662f\u5b57\u7b26\u6570\u7ec4\uff0c\u6bcf\u4e2a\u90fd\u6709\u5176\u81ea\u5df1\u7684\u5b58\u50a8\u533a\uff0c\u5b83\u4eec\u7684\u503c\u5219\u662f\u5404\u5b58\u50a8\u533a\u9996\u5730\u5740\uff0c\u4e0d\u7b49\uff1bstr3\u548cstr4\u540c\u4e0a\uff0c\u53ea\u662f\u6309const\u8bed\u4e49\uff0c\u5b83\u4eec\u6240\u6307\u5411\u7684\u6570\u636e\u533a\u4e0d\u80fd\u4fee\u6539\u3002str5\u548cstr6\u5e76\u975e\u6570\u7ec4\u800c\u662f\u5b57\u7b26\u6307\u9488\uff0c\u5e76\u4e0d\u5206\u914d\u5b58\u50a8\u533a\uff0c\u5176\u540e\u7684\u201cabc\u201d\u4ee5\u5e38\u91cf\u5f62\u5f0f\u5b58\u4e8e\u9759\u6001\u6570\u636e\u533a\uff0c\u800c\u5b83\u4eec\u81ea\u5df1\u4ec5\u662f\u6307\u5411\u8be5\u533a\u9996\u5730\u5740\u7684\u6307\u9488\uff0c\u76f8\u7b49\u3002", "\u00a0", "166 \u4ee5\u4e0b\u4ee3\u7801\u4e2d\u7684\u4e24\u4e2asizeof\u7528\u6cd5\u6709\u95ee\u9898\u5417\uff1f", "void UpperCase( char str[] ) // \u5c06 str \u4e2d\u7684\u5c0f\u5199\u5b57\u6bcd\u8f6c\u6362\u6210\u5927\u5199\u5b57\u6bcd", "{", "for( size_t i=0; i<sizeof(str)/sizeof(str[0]); ++i )", "if( \u2018a\u2019<=str[i] && str[i]<=\u2019z\u2019 )", "str[i] -= (\u2018a\u2019-'A\u2019 );", "}", "char str[] = \u201caBcDe\u201d;", "cout << \u201cstr\u5b57\u7b26\u957f\u5ea6\u4e3a: \u201d << sizeof(str)/sizeof(str[0]) << endl;", "UpperCase( str );", "cout << str << endl;", "\u00a0", "\u7b54\uff1a\u51fd\u6570\u5185\u7684sizeof\u6709\u95ee\u9898\u3002\u6839\u636e\u8bed\u6cd5\uff0csizeof\u5982\u7528\u4e8e\u6570\u7ec4\uff0c\u53ea\u80fd\u6d4b\u51fa\u9759\u6001\u6570\u7ec4\u7684\u5927\u5c0f\uff0c\u65e0\u6cd5\u68c0\u6d4b\u52a8\u6001\u5206\u914d\u7684\u6216\u5916\u90e8\u6570\u7ec4\u5927\u5c0f\u3002\u51fd\u6570\u5916\u7684str\u662f\u4e00\u4e2a\u9759\u6001\u5b9a\u4e49\u7684\u6570\u7ec4\uff0c\u56e0\u6b64\u5176\u5927\u5c0f\u4e3a6\uff0c\u51fd\u6570\u5185\u7684str\u5b9e\u9645\u53ea\u662f\u4e00\u4e2a\u6307\u5411\u5b57\u7b26\u4e32\u7684\u6307\u9488\uff0c\u6ca1\u6709\u4efb\u4f55\u989d\u5916\u7684\u4e0e\u6570\u7ec4\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u56e0\u6b64sizeof\u4f5c\u7528\u4e8e\u4e0a\u53ea\u5c06\u5176\u5f53\u6307\u9488\u770b\uff0c\u4e00\u4e2a\u6307\u9488\u4e3a4\u4e2a\u5b57\u8282\uff0c\u56e0\u6b64\u8fd4\u56de4\u3002", "\u00a0", "167 \u975eC++\u5185\u5efa\u578b\u522b A \u548c B\uff0c\u5728\u54ea\u51e0\u79cd\u60c5\u51b5\u4e0bB\u80fd\u9690\u5f0f\u8f6c\u5316\u4e3aA\uff1f", "\u7b54\uff1a", "a. class B : public A { \u2026\u2026} // B\u516c\u6709\u7ee7\u627f\u81eaA\uff0c\u53ef\u4ee5\u662f\u95f4\u63a5\u7ee7\u627f\u7684", "b. class B { operator A( ); } // B\u5b9e\u73b0\u4e86\u9690\u5f0f\u8f6c\u5316\u4e3aA\u7684\u8f6c\u5316", "c. class A { A( const B& ); } // A\u5b9e\u73b0\u4e86non-explicit\u7684\u53c2\u6570\u4e3aB\uff08\u53ef\u4ee5\u6709\u5176\u4ed6\u5e26\u9ed8\u8ba4\u503c\u7684\u53c2\u6570\uff09\u6784\u9020\u51fd\u6570", "d. A& operator= ( const A& ); // \u8d4b\u503c\u64cd\u4f5c\uff0c\u867d\u4e0d\u662f\u6b63\u5b97\u7684\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\uff0c\u4f46\u4e5f\u53ef\u4ee5\u52c9\u5f3a\u7b97\u4e00\u4e2a", "168.\u4ee5\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1f", "struct Test", "{", "Test( int ) {}", "Test() {}", "void fun() {}", "};", "void main( void )", "{", "Test a(1);", "a.fun();", "Test b();", "b.fun();", "}", "\u00a0", "\u7b54\uff1a\u53d8\u91cfb\u5b9a\u4e49\u51fa\u9519\u3002\u6309\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u5b9a\u4e49\u5bf9\u8c61\uff0c\u4e0d\u9700\u8981\u52a0\u62ec\u53f7\u3002", "\u00a0", "169 \u4ee5\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1f", "cout << (true?1:\u201d1\u2033) << endl;", "\u7b54\uff1a\u4e09\u5143\u8868\u8fbe\u5f0f\u201c\uff1f:\u201d\u95ee\u53f7\u540e\u9762\u7684\u4e24\u4e2a\u64cd\u4f5c\u6570\u5fc5\u987b\u4e3a\u540c\u4e00\u7c7b\u578b\u3002", "\u00a0", "170 \u4ee5\u4e0b\u4ee3\u7801\u80fd\u591f\u7f16\u8bd1\u901a\u8fc7\u5417\uff0c\u4e3a\u4ec0\u4e48\uff1f", "unsigned int const size1 = 2;", "char str1[ size1 ];", "unsigned int temp = 0;", "cin >> temp;", "unsigned int const size2 = temp;", "char str2[ size2 ];", "\u7b54\uff1astr2\u5b9a\u4e49\u51fa\u9519\uff0csize2\u975e\u7f16\u8bd1\u5668\u671f\u95f4\u5e38\u91cf\uff0c\u800c\u6570\u7ec4\u5b9a\u4e49\u8981\u6c42\u957f\u5ea6\u5fc5\u987b\u4e3a\u7f16\u8bd1\u671f\u5e38\u91cf\u3002", "\u00a0", "\u00a0", "171. \u4ee5\u4e0b\u4ee3\u7801\u4e2d\u7684\u8f93\u51fa\u8bed\u53e5\u8f93\u51fa0\u5417\uff0c\u4e3a\u4ec0\u4e48\uff1f", "struct CLS", "{", "int m_i;", "CLS( int i ) : m_i(i) {}", "CLS()", "{", "CLS(0);", "}", "};", "CLS obj;", "cout << obj.m_i << endl;", "\u00a0", "\u7b54\uff1a\u4e0d\u80fd\u3002\u5728\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u5185\u90e8\u518d\u8c03\u7528\u5e26\u53c2\u7684\u6784\u9020\u51fd\u6570\u5c5e\u7528\u6237\u884c\u4e3a\u800c\u975e\u7f16\u8bd1\u5668\u884c\u4e3a\uff0c\u4ea6\u5373\u4ec5\u6267\u884c\u51fd\u6570\u8c03\u7528\uff0c\u800c\u4e0d\u4f1a\u6267\u884c\u5176\u540e\u7684\u521d\u59cb\u5316\u8868\u8fbe\u5f0f\u3002\u53ea\u6709\u5728\u751f\u6210\u5bf9\u8c61\u65f6\uff0c\u521d\u59cb\u5316\u8868\u8fbe\u5f0f\u624d\u4f1a\u968f\u76f8\u5e94\u7684\u6784\u9020\u51fd\u6570\u4e00\u8d77\u8c03\u7528\u3002", "\u00a0", "172 C++\u4e2d\u7684\u7a7a\u7c7b\uff0c\u9ed8\u8ba4\u4ea7\u751f\u54ea\u4e9b\u7c7b\u6210\u5458\u51fd\u6570\uff1f", "\u7b54\uff1a", "class Empty", "{", "public:", "Empty(); // \u7f3a\u7701\u6784\u9020\u51fd\u6570", "Empty( const Empty& ); // \u62f7\u8d1d\u6784\u9020\u51fd\u6570", "~Empty(); // \u6790\u6784\u51fd\u6570", "Empty& operator=( const Empty& ); // \u8d4b\u503c\u8fd0\u7b97\u7b26", "Empty* operator&(); // \u53d6\u5740\u8fd0\u7b97\u7b26", "const Empty* operator&() const; // \u53d6\u5740\u8fd0\u7b97\u7b26 const", "};", "\u00a0", "\u00a0", "173 \u4ee5\u4e0b\u4e24\u6761\u8f93\u51fa\u8bed\u53e5\u5206\u522b\u8f93\u51fa\u4ec0\u4e48\uff1f", "float a =1.0f;", "cout << (int)a << endl;", "cout << (int&)a << endl;", "cout << boolalpha << ( (int)a == (int&)a ) << endl; // \u8f93\u51fa\u4ec0\u4e48\uff1f", "float b =0.0f;", "cout << (int)b << endl;", "cout << (int&)b << endl;", "cout << boolalpha << ( (int)b == (int&)b ) << endl; // \u8f93\u51fa\u4ec0\u4e48\uff1f", "\u00a0", "\u7b54\uff1a\u5206\u522b\u8f93\u51fafalse\u548ctrue\u3002\u6ce8\u610f\u8f6c\u6362\u7684\u5e94\u7528\u3002(int)a\u5b9e\u9645\u4e0a\u662f\u4ee5\u6d6e\u70b9\u6570a\u4e3a\u53c2\u6570\u6784\u9020\u4e86\u4e00\u4e2a\u6574\u578b\u6570\uff0c\u8be5\u6574\u6570\u7684\u503c\u662f1\uff0c(int&)a\u5219\u662f\u544a\u8bc9\u7f16\u8bd1\u5668\u5c06a\u5f53\u4f5c\u6574\u6570\u770b\uff08\u5e76\u6ca1\u6709\u505a\u4efb\u4f55\u5b9e\u8d28\u4e0a\u7684\u8f6c\u6362\uff09\u3002\u56e0\u4e3a1\u4ee5\u6574\u6570\u5f62\u5f0f\u5b58\u653e\u548c\u4ee5\u6d6e\u70b9\u5f62\u5f0f\u5b58\u653e\u5176\u5185\u5b58\u6570\u636e\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u56e0\u6b64\u4e24\u8005\u4e0d\u7b49\u3002\u5bf9b\u7684\u4e24\u79cd\u8f6c\u6362\u610f\u4e49\u540c\u4e0a\uff0c\u4f46\u662f0\u7684\u6574\u6570\u5f62\u5f0f\u548c\u6d6e\u70b9\u5f62\u5f0f\u5176\u5185\u5b58\u6570\u636e\u662f\u4e00\u6837\u7684\uff0c\u56e0\u6b64\u5728\u8fd9\u79cd\u7279\u6b8a\u60c5\u5f62\u4e0b\uff0c\u4e24\u8005\u76f8\u7b49\uff08\u4ec5\u4ec5\u5728\u6570\u503c\u610f\u4e49\u4e0a\uff09\u3002", "\u6ce8\u610f\uff0c\u7a0b\u5e8f\u7684\u8f93\u51fa\u4f1a\u663e\u793a(int&)a=1065353216\uff0c\u8fd9\u4e2a\u503c\u662f\u600e\u4e48\u6765\u7684\u5462\uff1f\u524d\u9762\u5df2\u7ecf\u8bf4\u4e86\uff0c1\u4ee5\u6d6e\u70b9\u6570\u5f62\u5f0f\u5b58\u653e\u5728\u5185\u5b58\u4e2d\uff0c\u6309ieee754\u89c4\u5b9a\uff0c\u5176\u5185\u5bb9\u4e3a0x0000803F\uff08\u5df2\u8003\u8651\u5b57\u8282\u53cd\u5e8f\uff09\u3002\u8fd9\u4e5f\u5c31\u662fa\u8fd9\u4e2a\u53d8\u91cf\u6240\u5360\u636e\u7684\u5185\u5b58\u5355\u5143\u7684\u503c\u3002\u5f53(int&)a\u51fa\u73b0\u65f6\uff0c\u5b83\u76f8\u5f53\u4e8e\u544a\u8bc9\u5b83\u7684\u4e0a\u4e0b\u6587\uff1a\u201c\u628a\u8fd9\u5757\u5730\u5740\u5f53\u505a\u6574\u6570\u770b\u5f85\uff01\u4e0d\u8981\u7ba1\u5b83\u539f\u6765\u662f\u4ec0\u4e48\u3002\u201d\u8fd9\u6837\uff0c\u5185\u5bb90x0000803F\u6309\u6574\u6570\u89e3\u91ca\uff0c\u5176\u503c\u6b63\u597d\u5c31\u662f1065353216\uff08\u5341\u8fdb\u5236\u6570\uff09\u3002", "\u901a\u8fc7\u67e5\u770b\u6c47\u7f16\u4ee3\u7801\u53ef\u4ee5\u8bc1\u5b9e\u201c(int)a\u76f8\u5f53\u4e8e\u91cd\u65b0\u6784\u9020\u4e86\u4e00\u4e2a\u503c\u7b49\u4e8ea\u7684\u6574\u578b\u6570\u201d\u4e4b\u8bf4\uff0c\u800c(int&)\u7684\u4f5c\u7528\u5219\u4ec5\u4ec5\u662f\u8868\u8fbe\u4e86\u4e00\u4e2a\u7c7b\u578b\u4fe1\u606f\uff0c\u610f\u4e49\u5728\u4e8e\u4e3acout<<\u53ca==\u9009\u62e9\u6b63\u786e\u7684\u91cd\u8f7d\u7248", "\u00a0", "\u00a0", "174\u3001\u8bf7\u7b80\u8ff0\u4ee5\u4e0b\u4e24\u4e2afor\u5faa\u73af\u7684\u4f18\u7f3a\u70b9\uff085\u5206\uff09", "\u00a0", "for (i=0; i<N; i++)", "{", "if (condition)", "DoSomething();", "else", "DoOtherthing();", "}", "if (condition)", "{", "for (i=0; i<N; i++)", "DoSomething();", "}", "else", "{", "for (i=0; i<N; i++)", "DoOtherthing();", "}", "\u00a0", "\u4f18\u70b9\uff1a\u7a0b\u5e8f\u7b80\u6d01", "\u7f3a\u70b9\uff1a\u591a\u6267\u884c\u4e86N-1\u6b21\u903b\u8f91\u5224\u65ad\uff0c\u5e76\u4e14\u6253\u65ad\u4e86\u5faa\u73af\u201c\u6d41\u6c34\u7ebf\u201d\u4f5c\u4e1a\uff0c\u4f7f\u5f97\u7f16\u8bd1\u5668\u4e0d\u80fd\u5bf9\u5faa\u73af\u8fdb\u884c\u4f18\u5316\u5904\u7406\uff0c\u964d\u4f4e\u4e86\u6548\u7387\u3002", "\u00a0", "\u4f18\u70b9\uff1a\u5faa\u73af\u7684\u6548\u7387\u9ad8", "\u7f3a\u70b9\uff1a\u7a0b\u5e8f\u4e0d\u7b80\u6d01", "\u00a0", "175", "void GetMemory(char *p)", "{", "p = (char *)malloc(100);", "}", "void Test(void)", "{", "char *str = NULL;", "GetMemory(str);", "strcpy(str, \u201chello world\u201d);", "printf(str);", "}", "\u8bf7\u95ee\u8fd0\u884cTest\u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\u7b54\uff1a\u7a0b\u5e8f\u5d29\u6e83\u3002", "\u56e0\u4e3aGetMemory\u5e76\u4e0d\u80fd\u4f20\u9012\u52a8\u6001\u5185\u5b58\uff0c", "Test\u51fd\u6570\u4e2d\u7684 str\u4e00\u76f4\u90fd\u662f NULL\u3002", "strcpy(str, \u201chello world\u201d);\u5c06\u4f7f\u7a0b\u5e8f\u5d29\u6e83\u3002", "\u00a0", "176", "char *GetMemory(void)", "{", "char p[] = \u201chello world\u201d;", "return p;", "}", "void Test(void)", "{", "char *str = NULL;", "\u00a0", "str = GetMemory();", "printf(str);", "}", "\u8bf7\u95ee\u8fd0\u884cTest\u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\u7b54\uff1a\u53ef\u80fd\u662f\u4e71\u7801\u3002", "\u56e0\u4e3aGetMemory\u8fd4\u56de\u7684\u662f\u6307\u5411\u201c\u6808\u5185\u5b58\u201d\u7684\u6307\u9488\uff0c\u8be5\u6307\u9488\u7684\u5730\u5740\u4e0d\u662f NULL\uff0c\u4f46\u5176\u539f\u73b0\u7684\u5185\u5bb9\u5df2\u7ecf\u88ab\u6e05\u9664\uff0c\u65b0\u5185\u5bb9\u4e0d\u53ef\u77e5\u3002", "\u00a0", "177", "void GetMemory2(char **p, int num)", "{", "*p = (char *)malloc(num);", "}", "void Test(void)", "{", "char *str = NULL;", "GetMemory(&str, 100);", "strcpy(str, \u201chello\u201d);", "printf(str);", "}", "\u8bf7\u95ee\u8fd0\u884cTest\u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\u7b54\uff1a", "\uff081\uff09\u80fd\u591f\u8f93\u51fahello", "\uff082\uff09\u5185\u5b58\u6cc4\u6f0f", "\u00a0", "178", "void Test(void)", "{", "char *str = (char *) malloc(100);", "strcpy(str, \u201chello\u201d);", "free(str);", "if(str != NULL)", "{", "strcpy(str, \u201cworld\u201d);", "printf(str);", "}", "}", "\u8bf7\u95ee\u8fd0\u884cTest\u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\u7b54\uff1a\u7be1\u6539\u52a8\u6001\u5185\u5b58\u533a\u7684\u5185\u5bb9\uff0c\u540e\u679c\u96be\u4ee5\u9884\u6599\uff0c\u975e\u5e38\u5371\u9669\u3002", "\u56e0\u4e3afree(str);\u4e4b\u540e\uff0cstr\u6210\u4e3a\u91ce\u6307\u9488\uff0c", "if(str != NULL)\u8bed\u53e5\u4e0d\u8d77\u4f5c\u7528\u3002", "\u00a0", "179\u3001\u8bf7\u9605\u8bfb\u4ee5\u4e0b\u4e00\u6bb5\u7a0b\u5e8f\uff0c\u5e76\u7ed9\u51fa\u7b54\u6848\u3002", "class A", "{", "public:", "A(){ doSth(); }", "virtual void doSth(){printf(\u201cI am A\u201d);}", "};", "class B:public A", "{", "public:", "virtual void doSth(){ printf(\u201cI am B\u201d);}", "};", "B b;", "\u6267\u884c\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f\u4e3a\u4ec0\u4e48\uff1f", "\u7b54\uff1a\u6267\u884c\u7ed3\u679c\u662fI am A", "\u56e0\u4e3ab\u5bf9\u8c61\u6784\u9020\u65f6\u8c03\u7528\u57fa\u7c7bA\u7684\u6784\u9020\u51fd\u6570A()\uff0c\u5f97\u6b64\u7ed3\u679c\u3002", "\u00a0", "\u00a0", "\u00a0", "180\u00a0 \u5b9e\u73b0\u53cc\u5411\u94fe\u8868\u5220\u9664\u4e00\u4e2a\u8282\u70b9P\uff0c\u5728\u8282\u70b9P\u540e\u63d2\u5165\u4e00\u4e2a\u8282\u70b9\uff0c\u5199\u51fa\u8fd9\u4e24\u4e2a\u51fd\u6570;", "\u7b54\uff1a\u53cc\u5411\u94fe\u8868\u5220\u9664\u4e00\u4e2a\u8282\u70b9P", "template<class type> void list<type>::delnode(int p)", "{", "int k=1;", "listnode<type> *ptr,*t;", "ptr=first;", "\u00a0", "while(ptr->next!=NULL&&k!=p)", "{", "ptr=ptr->next;", "k++;", "}", "t=ptr->next;", "cout<<\u201d\u4f60\u5df2\u7ecf\u5c06\u6570\u636e\u9879 \u201c<<t->data<<\u201d\u5220\u9664\u201d<<endl;", "\u00a0", "ptr->next=ptr->next->next;", "length\u2013;", "delete t;", "}", "\u00a0", "\u5728\u8282\u70b9P\u540e\u63d2\u5165\u4e00\u4e2a\u8282\u70b9\uff1a", "template<class type> bool list<type>::insert(type t,int p)", "{", "listnode<type> *ptr;", "ptr=first;", "\u00a0", "int k=1;", "while(ptr!=NULL&&k<p)", "{", "ptr=ptr->next;", "k++;", "}", "if(ptr==NULL&&k!=p)", "return false;", "else", "{", "listnode<type> *tp;", "tp=new listnode<type>;", "tp->data=t;", "tp->next=ptr->next;", "ptr->next=tp;", "length++;", "return true;", "}", "}", "\u00a0", "\u00a0", "\uff03i nclude<iostream>", "using namespace std;", "\u00a0", "const int n = 8;", "\u00a0", "main()", "{", "int i;", "int j;", "int k;", "\u00a0", "for(i = n; i >= 1; i\u2013)", "{", "for(j = 0; j < n-i+1; j++)", "{", "cout<<\u201d*\u201d;", "for(k=1; k < n-i+1; k++)", "{", "cout<<\u201d.\u201d;", "}", "}", "cout<<endl;", "}", "system(\u201cpause\u201d);", "}", "\u00a0", "\u00a0", "182\u5b8c\u6210\u7a0b\u5e8f\uff0c\u5b9e\u73b0\u5bf9\u6570\u7ec4\u7684\u964d\u5e8f\u6392\u5e8f", "\u00a0", "\uff03include <iostream>", "using namespace std;", "\u00a0", "void sort(int* arr, int n);", "\u00a0", "int main()", "\u00a0", "{", "int array[]={45,56,76,234,1,34,23,2,3};", "sort(array, 9);", "for(int i = 0; i <= 8; i++)//\u66fe\u7ecf\u5728\u8fd9\u513f\u51fa\u754c", "cout<<array[i]<<\u201d \u201c;", "cout<<endl;", "system(\u201cpause\u201d);", "}", "\u00a0", "void sort(int* arr, int n)", "{", "int temp;", "for(int i = 1; i < 9; i++)", "{", "for(int k = 0; k < 9 \u2013 i; k++)//\u66fe\u7ecf\u5728\u8fd9\u513f\u51fa\u754c", "{", "if(arr[k] < arr[k + 1])", "{", "temp = arr[k];", "arr[k] = arr[k + 1];", "arr[k + 1] = temp;", "}", "}", "}", "}", "\u00a0", "183. \u4ee5\u4e0b\u4e24\u6761\u8f93\u51fa\u8bed\u53e5\u5206\u522b\u8f93\u51fa\u4ec0\u4e48\uff1f[C++\u96be]", "float a =1.0f;", "cout << (int)a << endl;", "cout << (int&)a << endl;", "cout << boolalpha << ( (int)a == (int&)a ) << endl; // \u8f93\u51fa\u4ec0\u4e48\uff1f", "float b =0.0f;", "cout << (int)b << endl;", "cout << (int&)b << endl;", "cout << boolalpha << ( (int)b == (int&)b ) << endl; // \u8f93\u51fa\u4ec0\u4e48\uff1f", "1", "1065353216", "boolalpha0", "0", "0", "boolalpha1", "\u00a0", "51. \u4ee5\u4e0b\u53cd\u5411\u904d\u5386array\u6570\u7ec4\u7684\u65b9\u6cd5\u6709\u4ec0\u4e48\u9519\u8bef\uff1f[STL\u6613]", "vector array;", "array.push_back( 1 );", "array.push_back( 2 );", "array.push_back( 3 );", "for( vector::size_type i=array.size()-1; i>=0; \u2013i ) // \u53cd\u5411\u904d\u5386array\u6570\u7ec4", "{", "cout << array[i] << endl;", "}", "\u00a0", "184 \u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u5b8c\u6210\u5185\u5b58\u4e4b\u95f4\u7684\u62f7\u8d1d\u3002[\u8003\u8651\u95ee\u9898\u662f\u5426\u5168\u9762]", "\u7b54\uff1a", "void* mymemcpy( void *dest, const void *src, size_t count )", "{", "char* pdest = static_cast<char*>( dest );", "const char* psrc = static_cast<const char*>( src );", "if( pdest>psrc && pdest<psrc+cout ) \u80fd\u8003\u8651\u5230\u8fd9\u79cd\u60c5\u51b5\u5c31\u884c\u4e86", "{", "for( size_t i=count-1; i!=-1; \u2013i )", "pdest[i] = psrc[i];", "}", "else", "{", "for( size_t i=0; i<count; ++i )", "pdest[i] = psrc[i];", "}", "return dest;", "}", "int main( void )", "{", "char str[] = \u201c0123456789\u2033;", "mymemcpy( str+1, str+0, 9 );", "cout << str << endl;", "\u00a0", "system( \u201cPause\u201d );", "return 0;", "}", "\u00a0", "185 \u5bf9\u4e8eC++\u4e2d\u7c7b(class) \u4e0e\u7ed3\u6784(struct)\u7684\u63cf\u8ff0\u6b63\u786e\u7684\u4e3a:", "A,\u7c7b\u4e2d\u7684\u6210\u5458\u9ed8\u8ba4\u662fprivate\u7684,\u5f53\u662f\u53ef\u4ee5\u58f0\u660e\u4e3apublic,private \u548cprotected,", "\u7ed3\u6784\u4e2d\u5b9a\u4e49\u7684\u6210\u5458\u9ed8\u8ba4\u7684\u90fd\u662fpublic;", "B,\u7ed3\u6784\u4e2d\u4e0d\u5141\u8bb8\u5b9a\u4e49\u6210\u5458\u51fd\u6570,\u5f53\u662f\u7c7b\u4e2d\u53ef\u4ee5\u5b9a\u4e49\u6210\u5458\u51fd\u6570;", "C,\u7ed3\u6784\u5b9e\u4f8b\u4f7f\u7528malloc() \u52a8\u6001\u521b\u5efa,\u7c7b\u5bf9\u8c61\u4f7f\u7528new \u64cd\u4f5c\u7b26\u52a8\u6001\u5206\u914d\u5185\u5b58;", "D,\u7ed3\u6784\u548c\u7c7b\u5bf9\u8c61\u90fd\u5fc5\u987b\u4f7f\u7528new \u521b\u5efa;", "E,\u7ed3\u6784\u4e2d\u4e0d\u53ef\u4ee5\u5b9a\u4e49\u865a\u51fd\u6570,\u5f53\u662f\u7c7b\u4e2d\u53ef\u4ee5\u5b9a\u4e49\u865a\u51fd\u6570.", "F,\u7ed3\u6784\u4e0d\u53ef\u4ee5\u5b58\u5728\u7ee7\u627f\u5173\u7cfb,\u5f53\u662f\u7c7b\u53ef\u4ee5\u5b58\u5728\u7ee7\u627f\u5173\u7cfb.", "\u7b54:A,D,F", "\u00a0", "186.\u4e24\u4e2a\u4e92\u76f8\u72ec\u7acb\u7684\u7c7b:ClassA \u548c ClassB,\u90fd\u5404\u81ea\u5b9a\u4e49\u4e86\u975e\u9759\u6001\u7684\u516c\u6709\u6210\u5458\u51fd\u6570 PublicFunc() \u548c\u975e\u9759\u6001\u7684\u79c1\u6709\u6210\u5458\u51fd\u6570 PrivateFunc();", "\u73b0\u5728\u8981\u5728ClassA \u4e2d\u589e\u52a0\u5b9a\u4e49\u4e00\u4e2a\u6210\u5458\u51fd\u6570ClassA::AdditionalPunction(ClassA a,ClassB b);\u5219\u53ef\u4ee5\u5728AdditionalPunction(ClassA x,ClassB y)\u7684\u5b9e\u73b0\u90e8\u5206(\u51fd\u6570\u529f\u80fd\u4f53\u5185\u90e8)", "\u51fa\u73b0\u7684\u5408\u6cd5\u7684\u8868\u8fbe\u662f\u6700\u5168\u7684\u662f:", "A,x.PrivateFunc();x.PublicFunc();y.PrivateFunc();y.PublicFunc();", "B,x.PrivateFunc();x.PublicFunc();y.PublicFunc();", "C,x.PrivateFunc();y.PrivateFunc();y.PublicFunc();", "D,x.PublicFunc();y.PublicFunc();", "\u7b54:B", "\u00a0", "186.C++\u7a0b\u5e8f\u4e0b\u5217\u8bf4\u6cd5\u6b63\u786e\u7684\u6709:", "A,\u5bf9\u8c03\u7528\u7684\u865a\u51fd\u6570\u548c\u6a21\u677f\u7c7b\u90fd\u8fdb\u884c\u8fdf\u540e\u7f16\u8bd1.", "B,\u57fa\u7c7b\u4e0e\u5b50\u7c7b\u4e2d\u51fd\u6570\u5982\u679c\u8981\u6784\u6210\u865a\u51fd\u6570,\u9664\u4e86\u8981\u6c42\u5728\u57fa\u7c7b\u4e2d\u7528virtual \u58f0\u540d,\u800c\u4e14\u5fc5\u987b\u540d\u5b57\u76f8\u540c\u4e14\u53c2\u6570\u7c7b\u578b\u76f8\u540c\u8fd4\u56de\u7c7b\u578b\u76f8\u540c", "C,\u91cd\u8f7d\u7684\u7c7b\u6210\u5458\u51fd\u6570\u90fd\u5fc5\u987b\u8981:\u6216\u8005\u8fd4\u56de\u7c7b\u578b\u4e0d\u540c,\u6216\u8005\u53c2\u6570\u6570\u76ee\u4e0d\u540c,\u6216\u8005\u53c2\u6570\u5e8f\u5217\u7684\u7c7b\u578b\u4e0d\u540c.", "D,\u9759\u6001\u6210\u5458\u51fd\u6570\u548c\u5185\u8054\u51fd\u6570\u4e0d\u80fd\u662f\u865a\u51fd\u6570,\u53cb\u5458\u51fd\u6570\u548c\u6784\u9020\u51fd\u6570\u4e5f\u4e0d\u80fd\u662f\u865a\u51fd\u6570,\u4f46\u662f\u6790\u6784\u51fd\u6570\u53ef\u4ee5\u662f\u865a\u51fd\u6570.", "\u7b54:A", "***************************************************************************", "\u00a0", "187\u00a0 \u5934\u6587\u4ef6\u7684\u4f5c\u7528\u662f\u4ec0\u4e48?", "\u7b54\uff1a\u4e00\u3001\u901a\u8fc7\u5934\u6587\u4ef6\u6765\u8c03\u7528\u5e93\u529f\u80fd\u3002\u5728\u5f88\u591a\u573a\u5408\uff0c\u6e90\u4ee3\u7801\u4e0d\u4fbf\uff08\u6216\u4e0d\u51c6\uff09\u5411\u7528\u6237\u516c\u5e03\uff0c\u53ea\u8981\u5411\u7528\u6237\u63d0\u4f9b\u5934\u6587\u4ef6\u548c\u4e8c\u8fdb\u5236\u7684\u5e93\u5373\u53ef\u3002\u7528\u6237\u53ea\u9700\u8981\u6309\u7167\u5934\u6587\u4ef6\u4e2d\u7684\u63a5\u53e3\u58f0\u660e\u6765\u8c03\u7528\u5e93\u529f\u80fd\uff0c\u800c\u4e0d\u5fc5\u5173\u5fc3\u63a5\u53e3\u600e\u4e48\u5b9e\u73b0\u7684\u3002\u7f16\u8bd1\u5668\u4f1a\u4ece\u5e93\u4e2d\u63d0\u53d6\u76f8\u5e94\u7684\u4ee3\u7801\u3002", "\u4e8c\u3001\u5934\u6587\u4ef6\u80fd\u52a0\u5f3a\u7c7b\u578b\u5b89\u5168\u68c0\u67e5\u3002\u5982\u679c\u67d0\u4e2a\u63a5\u53e3\u88ab\u5b9e\u73b0\u6216\u88ab\u4f7f\u7528\u65f6\uff0c\u5176\u65b9\u5f0f\u4e0e\u5934\u6587\u4ef6\u4e2d\u7684\u58f0\u660e\u4e0d\u4e00\u81f4\uff0c\u7f16\u8bd1\u5668\u5c31\u4f1a\u6307\u51fa\u9519\u8bef\uff0c\u8fd9\u4e00\u7b80\u5355\u7684\u89c4\u5219\u80fd\u5927\u5927\u51cf\u8f7b\u7a0b\u5e8f\u5458\u8c03\u8bd5\u3001\u6539\u9519\u7684\u8d1f\u62c5\u3002", "\u00a0", "188\u3001\u4ee5\u4e0b\u4e3aWindows NT\u4e0b\u768432\u4f4dC++\u7a0b\u5e8f\uff0c\u8bf7\u8ba1\u7b97sizeof\u7684\u503c\uff0810\u5206\uff09", "\u00a0", "char\u00a0 str[] = \u201cHello\u201d ;", "char\u00a0\u00a0 *p = str ;", "int\u00a0\u00a0\u00a0\u00a0 n = 10;", "\u8bf7\u8ba1\u7b97", "sizeof (str ) =\u00a0 6\u00a0\u00a0 \uff082\u5206\uff09", "sizeof ( p ) =\u00a0\u00a0 4\u00a0\u00a0 \uff082\u5206\uff09", "sizeof ( n ) =\u00a0\u00a0 4\u00a0\u00a0 \uff082\u5206\uff09void Func ( char str[100])", "{", "\u8bf7\u8ba1\u7b97", "sizeof( str ) =\u00a0\u00a0 4\u00a0\u00a0\u00a0\u00a0 \uff082\u5206\uff09", "}", "\u00a0", "void *p = malloc( 100 );", "\u8bf7\u8ba1\u7b97", "sizeof ( p ) =\u00a0 4\u00a0\u00a0\u00a0\u00a0\u00a0 \uff082\u5206\uff09", "\u00a0", "\u00a0", "3\u5199\u51fa\u4e0b\u5217\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u3002", "\u00a0", "unsigned int i=3;", "cout<<i * -1;", "\u00a0", "189.\u5199\u51fa\u4e0b\u5217\u7a0b\u5e8f\u6240\u6709\u53ef\u80fd\u7684\u8fd0\u884c\u7ed3\u679c\u3002", "\u00a0", "int a;", "int b;", "int c;", "\u00a0", "void F1()", "{", "b=a*2;", "a=b;", "}", "\u00a0", "void F2()", "{", "c=a+1;", "a=c;", "}", "\u00a0", "main()", "{", "a=5;", "//Start F1,F2 inparallel", "F1(); F2();", "printf(\u201ca=%d\\n\u201d,a);", "}a=11", "\u00a0", "190\u4e00\u4e2a\u94fe\u8868\u7684\u64cd\u4f5c\uff0c\u6ce8\u610f\u4ee3\u7801\u7684\u5065\u58ee\u548c\u5b89\u5168\u6027\u3002\u8981\u6c42\uff1a", "\uff081\uff09\u589e\u52a0\u4e00\u4e2a\u5143\u7d20\uff1b", "\uff082\uff09\u83b7\u5f97\u5934\u5143\u7d20\uff1b", "\uff083\uff09\u5f39\u51fa\u5934\u5143\u7d20\uff08\u83b7\u5f97\u503c\u5e76\u5220\u9664\uff09\u3002", "\u00a0", "\u00a0", "191.unsigned short array[]={1,2,3,4,5,6,7};", "int i = 3;", "*(array + i) = ?", "\u7b54:", "4", "\u00a0", "192", "class A", "{", "virtual void func1()\uff1b", "void func2();", "}", "Class B: class A", "{", "void func1(){cout << \u201cfun1 inclass B\u201d << endl;}", "virtual void func2(){cout << \u201cfun2 inclass B\u201d << endl;}", "}", "A, A\u4e2d\u7684func1\u548cB\u4e2d\u7684func2\u90fd\u662f\u865a\u51fd\u6570.", "B, A\u4e2d\u7684func1\u548cB\u4e2d\u7684func2\u90fd\u4e0d\u662f\u865a\u51fd\u6570.", "C, A\u4e2d\u7684func2\u662f\u865a\u51fd\u6570.\uff0cB\u4e2d\u7684func1\u4e0d\u662f\u865a\u51fd\u6570.", "D, A\u4e2d\u7684func2\u4e0d\u662f\u865a\u51fd\u6570\uff0cB\u4e2d\u7684func1\u662f\u865a\u51fd\u6570.", "\u00a0", "\u7b54:", "A", "\u00a0", "193\u8f93\u51fa\u4e0b\u9762\u7a0b\u5e8f\u7ed3\u679c\u3002", "#include <iostream.h>", "class A", "{", "public:", "virtual void print(void)", "{", "cout<<\u201dA::print()\u201d<<endl;", "}", "};", "class B:public A", "{", "public:", "virtual void print(void)", "{", "cout<<\u201dB::print()\u201d<<endl;", "};", "};", "class C:public B", "{", "public:", "virtual void print(void)", "{", "cout<<\u201dC::print()\u201d<<endl;", "}", "};", "void print(A a)", "{", "a.print();", "}", "void main(void)", "{", "A a, *pa,*pb,*pc;", "B b;", "C c;", "pa=&a;", "pb=&b;", "pc=&c;", "a.print();", "b.print();", "c.print();", "pa->print();", "pb->print();", "pc->print();", "print(a);", "print(b);", "print(c);", "}", "\u00a0", "A::print()", "A::print()", "B::print()", "C::print()", "A::print()", "B::print()", "C::print()", "A::print()", "A::print()", "A::print()", "\u00a0", "\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "194.\u7a0b\u5e8f\u6539\u9519", "class mml", "{", "private:", "static unsigned int x;", "public:", "mml(){ x++; }", "mml(static unsigned int &) {x++;}", "~mml{x\u2013;}", "pulic:", "virtual mon() {} = 0;", "static unsigned int mmc(){return x;}", "\u2026\u2026", "\u00a0", "};", "class nnl:public mml", "{", "private:", "static unsigned int y;", "public:", "nnl(){ x++; }", "nnl(static unsigned int &) {x++;}", "~nnl{x\u2013;}", "public:", "virtual mon() {};", "static unsigned int nnc(){return y;}", "\u2026\u2026", "};", "\u00a0", "\u4ee3\u7801\u7247\u65ad:", "mml* pp = new nnl;", "\u2026\u2026\u2026.", "delete pp;", "\u00a0", "\u00a0", "A:", "\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u5e94\u8be5\u4e3a\u865a\u51fd\u6570", "virtual ~mml{x\u2013;}", "\u00a0", "\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "195.101\u4e2a\u786c\u5e01100\u771f\u30011\u5047\uff0c\u771f\u5047\u533a\u522b\u5728\u4e8e\u91cd\u91cf\u3002\u8bf7\u7528\u65e0\u781d\u7801\u5929\u5e73\u79f0\u4e24\u6b21\u7ed9\u51fa\u771f\u5e01\u91cd\u8fd8\u662f\u5047\u5e01\u91cd\u7684\u7ed3\u8bba\u3002", "\u7b54:", "101\u4e2a\u5148\u53d6\u51fa2\u5806,", "33,33", "\u7b2c\u4e00\u6b21\u79f0,\u5982\u679c\u4e0d\u76f8\u7b49,\u8bf4\u660e\u6709\u4e00\u5806\u91cd\u6216\u8f7b", "\u90a3\u4e48\u628a\u91cd\u7684\u90a3\u5806\u62ff\u4e0b\u6765,\u518d\u653e\u53e6\u591635\u4e2a\u4e2d\u768433", "\u5982\u679c\u76f8\u7b49,\u8bf4\u660e\u5047\u7684\u91cd,\u5982\u679c\u4e0d\u76f8\u7b49,\u65b0\u653e\u4e0a\u53bb\u7684\u8fd8\u662f\u91cd\u7684\u8bdd,\u8bf4\u660e\u5047\u7684\u8f7b(\u4e0d\u53ef\u80fd\u65b0\u653e\u4e0a\u53bb\u7684\u8f7b)", "\u00a0", "\u7b2c\u4e00\u6b21\u79f0,\u5982\u679c\u76f8\u7b49\u7684\u8bdd\uff0c\u8fd966\u4e2a\u80af\u5b9a\u90fd\u662f\u771f\u7684,\u4ece\u8fd966\u4e2a\u4e2d\u53d6\u51fa35\u4e2a\u6765,\u4e0e\u5269\u4e0b\u7684\u6ca1\u79f0\u8fc7\u768435\u4e2a\u6bd4", "\u4e0b\u9762\u5c31\u4e0d\u7528\u8bf4\u4e86", "\u00a0", "\u65b9\u6cd5\u4e8c:", "\u7b2c3\u9898\u4e5f\u53ef\u4ee5\u62ffA(50),B(50)\u6bd4\u4e00\u4e0b\uff0c\u4e00\u6837\u7684\u8bdd\u62ff\u5269\u4e0b\u7684\u4e00\u4e2a\u548c\u771f\u7684\u6bd4\u4e00\u4e0b\u3002", "\u5982\u679c\u4e0d\u4e00\u6837\uff0c\u5c31\u62ff\u5176\u4e2d\u7684\u4e00\u5806\u3002\u6bd4\u5982A(50)\u518d\u5206\u6210\u4e24\u580625\u6bd4\u4e00\u4e0b\uff0c\u4e00\u6837\u7684\u8bdd\u5c31\u5728", "B(50)\u4e2d\uff0c\u4e0d\u4e00\u6837\u5c31\u5728A(50)\u4e2d\uff0c\u7ed3\u5408\u7b2c\u4e00\u6b21\u7684\u7ed3\u679c\u5c31\u77e5\u9053\u4e86\u3002", "\u00a0", "196\uff0e\u5199\u51fa\u7a0b\u5e8f\u7ed3\u679c:", "void Func(char str[100])", "{", "printf(\u201c%d\\n\u201d, sizeof(str));", "}", "\u00a0", "\u7b54:", "4", "\u5206\u6790:", "\u6307\u9488\u957f\u5ea6", "\u00a0", "197\uff0eint id[sizeof(unsigned long)];", "\u8fd9\u4e2a\u5bf9\u5417\uff1f\u4e3a\u4ec0\u4e48??", "\u7b54:", "\u5bf9", "\u8fd9\u4e2a sizeof\u662f\u7f16\u8bd1\u65f6\u8fd0\u7b97\u7b26\uff0c\u7f16\u8bd1\u65f6\u5c31\u786e\u5b9a\u4e86", "\u53ef\u4ee5\u770b\u6210\u548c\u673a\u5668\u6709\u5173\u7684\u5e38\u91cf\u3002", "\u00a0", "198\u3001 sizeof\u5e94\u7528\u5728\u7ed3\u6784\u4e0a\u7684\u60c5\u51b5", "\u8bf7\u770b\u4e0b\u9762\u7684\u7ed3\u6784\uff1a", "struct MyStruct", "{", "double dda1;", "char dda;", "int type", "};", "\u5bf9\u7ed3\u6784MyStruct\u91c7\u7528sizeof\u4f1a\u51fa\u73b0\u4ec0\u4e48\u7ed3\u679c\u5462\uff1fsizeof(MyStruct)\u4e3a\u591a\u5c11\u5462\uff1f\u4e5f\u8bb8\u4f60\u4f1a\u8fd9\u6837\u6c42\uff1a", "sizeof(MyStruct)=sizeof(double)+sizeof(char)+sizeof(int)=13", "\u4f46\u662f\u5f53\u5728VC\u4e2d\u6d4b\u8bd5\u4e0a\u9762\u7ed3\u6784\u7684\u5927\u5c0f\u65f6\uff0c\u4f60\u4f1a\u53d1\u73b0sizeof(MyStruct)\u4e3a16\u3002\u4f60\u77e5\u9053\u4e3a\u4ec0\u4e48\u5728VC\u4e2d\u4f1a\u5f97\u51fa\u8fd9\u6837\u4e00\u4e2a\u7ed3\u679c\u5417\uff1f", "\u5176\u5b9e\uff0c\u8fd9\u662fVC\u5bf9\u53d8\u91cf\u5b58\u50a8\u7684\u4e00\u4e2a\u7279\u6b8a\u5904\u7406\u3002\u4e3a\u4e86\u63d0\u9ad8CPU\u7684\u5b58\u50a8\u901f\u5ea6\uff0cVC\u5bf9\u4e00\u4e9b\u53d8\u91cf\u7684\u8d77\u59cb\u5730\u5740\u505a\u4e86\u201d\u5bf9\u9f50\u201d\u5904\u7406\u3002\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cVC\u89c4\u5b9a\u5404\u6210\u5458\u53d8\u91cf\u5b58\u653e\u7684\u8d77\u59cb\u5730\u5740\u76f8\u5bf9\u4e8e\u7ed3\u6784\u7684\u8d77\u59cb\u5730\u5740\u7684\u504f\u79fb\u91cf\u5fc5\u987b\u4e3a\u8be5\u53d8\u91cf\u7684\u7c7b\u578b\u6240\u5360\u7528\u7684\u5b57\u8282\u6570\u7684\u500d\u6570\u3002\u4e0b\u9762\u5217\u51fa\u5e38\u7528\u7c7b\u578b\u7684\u5bf9\u9f50\u65b9\u5f0f(vc6.0,32\u4f4d\u7cfb\u7edf)\u3002", "\u7c7b\u578b", "\u5bf9\u9f50\u65b9\u5f0f\uff08\u53d8\u91cf\u5b58\u653e\u7684\u8d77\u59cb\u5730\u5740\u76f8\u5bf9\u4e8e\u7ed3\u6784\u7684\u8d77\u59cb\u5730\u5740\u7684\u504f\u79fb\u91cf\uff09", "Char", "\u504f\u79fb\u91cf\u5fc5\u987b\u4e3asizeof(char)\u53731\u7684\u500d\u6570", "int", "\u504f\u79fb\u91cf\u5fc5\u987b\u4e3asizeof(int)\u53734\u7684\u500d\u6570", "float", "\u504f\u79fb\u91cf\u5fc5\u987b\u4e3asizeof(float)\u53734\u7684\u500d\u6570", "double", "\u504f\u79fb\u91cf\u5fc5\u987b\u4e3asizeof(double)\u53738\u7684\u500d\u6570", "Short", "\u504f\u79fb\u91cf\u5fc5\u987b\u4e3asizeof(short)\u53732\u7684\u500d\u6570", "\u5404\u6210\u5458\u53d8\u91cf\u5728\u5b58\u653e\u7684\u65f6\u5019\u6839\u636e\u5728\u7ed3\u6784\u4e2d\u51fa\u73b0\u7684\u987a\u5e8f\u4f9d\u6b21\u7533\u8bf7\u7a7a\u95f4\uff0c\u540c\u65f6\u6309\u7167\u4e0a\u9762\u7684\u5bf9\u9f50\u65b9\u5f0f\u8c03\u6574\u4f4d\u7f6e\uff0c\u7a7a\u7f3a\u7684\u5b57\u8282VC\u4f1a\u81ea\u52a8\u586b\u5145\u3002\u540c\u65f6VC\u4e3a\u4e86\u786e\u4fdd\u7ed3\u6784\u7684\u5927\u5c0f\u4e3a\u7ed3\u6784\u7684\u5b57\u8282\u8fb9\u754c\u6570\uff08\u5373\u8be5\u7ed3\u6784\u4e2d\u5360\u7528\u6700\u5927\u7a7a\u95f4\u7684\u7c7b\u578b\u6240\u5360\u7528\u7684\u5b57\u8282\u6570\uff09\u7684\u500d?", "\u00a0", "199", "#include \u201cstdafx.h\u201d", "Y n P }2{&k O v H `,o0", "#define SQR(X) X*X", "int main(int argc, char* argv[])", "{", "int a = 10;", "int k = 2;", "int m = 1;", "a /= SQR(k+m)/SQR(k+m);", "printf(\u201c%d\\n\u201d,a);", "return 0;", "}", "\u8fd9\u9053\u9898\u76ee\u7684\u7ed3\u679c\u662f\u4ec0\u4e48\u554a?", "define \u53ea\u662f\u5b9a\u4e49\u800c\u5df2\uff0c\u5728\u7f16\u62e9\u65f6\u53ea\u662f\u7b80\u5355\u4ee3\u6362X*X\u800c\u5df2\uff0c\u5e76\u4e0d\u7ecf\u8fc7\u7b97\u672f\u6cd5\u5219\u7684", "a /= k+m*k+m/k+m*k+m;", "=>a /= (k+m)*1*(k+m);", "=>a = a/9;", "=>a = 1;", "\u00a0", "200.\u4e0b\u9762\u7684\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1f", "\u00a0", "void DoSomeThing(\u2026)", "{", "char* p;", "p = malloc(1024); // \u5206\u914d1K\u7684\u7a7a\u95f4", "2y x", "if (NULL == p)", "return;", "p = realloc(p, 2048); // \u7a7a\u95f4\u4e0d\u591f\uff0c\u91cd\u65b0\u5206\u914d\u52302K", "if (NULL == p)", "return;", "}", "A:", "p = malloc(1024);\u00a0\u00a0\u00a0\u00a0 \u5e94\u8be5\u5199\u6210\uff1a p = (char *) malloc(1024);", "\u6ca1\u6709\u91ca\u653ep\u7684\u7a7a\u95f4\uff0c\u9020\u6210\u5185\u5b58\u6cc4\u6f0f\u3002"], "title": "C++\u7b14\u8bd5\u9898\u5e93\u4e4b\u7f16\u7a0b\u3001\u95ee\u7b54\u9898 150~200\u9053"},
{"contents": ["\u7b54\uff1a", "\u670d\u52a1\u5668\u7aef\uff1asocket()\u5efa\u7acb\u5957\u63a5\u5b57\uff0c\u7ed1\u5b9a\uff08bind\uff09\u5e76\u76d1\u542c\uff08listen\uff09\uff0c\u7528accept\uff08\uff09\u7b49\u5f85\u5ba2\u6237\u7aef\u8fde\u63a5, accept\uff08\uff09\u53d1\u73b0\u6709\u5ba2\u6237\u7aef\u8fde\u63a5\uff0c\u5efa\u7acb\u4e00\u4e2a\u65b0\u7684\u5957\u63a5\u5b57\uff0c\u81ea\u8eab\u91cd\u65b0\u5f00\u59cb\u7b49\u5f85\u8fde\u63a5\u3002\u8be5\u65b0\u4ea7\u751f\u7684\u5957\u63a5\u5b57\u4f7f\u7528send()\u548crecv\uff08\uff09\u5199\u8bfb\u6570\u636e\uff0c\u76f4\u81f3\u6570\u636e\u4ea4\u6362\u5b8c\u6bd5\uff0cclosesocket()\u5173\u95ed\u5957\u63a5\u5b57\u3002", "\u5ba2\u6237\u7aef\uff1asocket()\u5efa\u7acb\u5957\u63a5\u5b57\uff0c\u8fde\u63a5\uff08connect\uff09\u670d\u52a1\u5668\uff0c\u8fde\u63a5\u4e0a\u540e\u4f7f\u7528send()\u548crecv\uff08\uff09\uff0c\u5728\u5957\u63a5\u5b57\u4e0a\u5199\u8bfb\u6570\u636e\uff0c\u76f4\u81f3\u6570\u636e\u4ea4\u6362\u5b8c\u6bd5\uff0cclosesocket()\u5173\u95ed\u5957\u63a5\u5b57\u3002", "\u00a0", "\u7b54\uff1a\u4fe1\u53f7\u91cf\uff0c\u7ba1\u9053\uff0c\u6d88\u606f\uff0c\u5171\u4eab\u5185\u5b58", "\u00a0", "\u7b54\uff1a\u5185\u6838\u5e93\uff0c\u7528\u6237\u754c\u9762\u7ba1\u7406\u5e93\uff0c\u56fe\u5f62\u8bbe\u5907\u754c\u9762\u5e93\u3002", "\u00a0", "\u7b54\uff1a\u586b\u5145\u4e00\u4e2a\u7a97\u53e3\u7c7b\u7ed3\u6784->\u6ce8\u518c\u8fd9\u4e2a\u7a97\u53e3\u7c7b->\u7136\u540e\u518d\u521b\u5efa\u7a97\u53e3->\u663e\u793a\u7a97\u53e3->\u66f4\u65b0\u7a97\u53e3\u3002", "\u00a0", "\u7b54\uff1a1.\u8c03\u7528\u89c4\u5219\u4e0d\u540c\uff1a\u524d\u8005\u662f\u7528DoModal()\u8c03\u7528\uff0c\u540e\u8005\u901a\u8fc7\u5c5e\u6027\u548cShowWindow()\u6765\u663e\u793a\u3002", "2\uff0e\u6a21\u6001\u5bf9\u8bdd\u6846\u5728\u6ca1\u6709\u5173\u95ed\u524d\u7528\u6237\u4e0d\u80fd\u8fdb\u884c\u5176\u4ed6\u64cd\u4f5c\uff0c\u800c\u975e\u6a21\u6001\u5bf9\u8bdd\u6846\u53ef\u4ee5\u3002", "3\uff0e\u975e\u6a21\u6001\u5bf9\u8bdd\u6846\u521b\u5efa\u65f6\u5fc5\u987b\u7f16\u5199\u81ea\u5df1\u7684\u5171\u6709\u6784\u9020\u51fd\u6570\uff0c\u8fd8\u8981\u8c03\u7528Create()\u51fd\u6570\u3002", "\u00a0", "\u7b54\uff1a UpdateData(TRUE),\u00a0 Updatedata(FALSE).", "\u00a0", "\u7b54\uff1a GDI\u662fGraphics Device Interface \u7684\u7f29\u5199\uff0c\u8bd1\u4e3a\uff1a\u56fe\u5f62\u8bbe\u5907\u63a5\u53e3\uff1b\u662f\u4e00\u4e2a\u5728Windows\u5e94\u7528\u7a0b\u5e8f\u4e2d\u6267\u884c\u4e0e\u8bbe\u5907\u65e0\u5173\u7684\u51fd\u6570\u5e93\uff0c\u8fd9\u4e9b\u51fd\u6570\u5728\u4e0d\u540c\u7684\u8f93\u51fa\u8bbe\u5907\u4e0a\u4ea7\u751f\u56fe\u5f62\u4ee5\u53ca\u6587\u5b57\u8f93\u51fa\u3002", "\u00a0", "\u7b54\uff1a", "1.\u7a97\u53e3\u6d88\u606f\uff1a\u4e0e\u7a97\u53e3\u76f8\u5173\u7684\u6d88\u606f\uff0c\u9664WM_COMMAND\u4e4b\u5916\u7684\u6240\u6709\u4ee5WM_\u5f00\u5934\u7684\u6d88\u606f\uff1b", "2.\u547d\u4ee4\u6d88\u606f\uff1b\u7528\u4e8e\u5904\u7406\u7528\u6237\u8bf7\u6c42\uff0c\u4ee5WM_COMMAND\u8868\u793a\u7684\u6d88\u606f\uff1b", "3.\u63a7\u4ef6\u901a\u77e5\u6d88\u606f\uff1a\u7edf\u4e00\u7531WM_NOTIFT\u8868\u793a\uff0c", "4.\u7528\u6237\u81ea\u5b9a\u4e49\u6d88\u606f\u3002", "\u00a0", "\u7b54\uff1a\u4f7f\u7528WM_USER \u548cWM_APP\u4e24\u4e2a\u5b8f\u6765\u81ea\u5b9a\u4e49\u6d88\u606f\uff0c", "\u00a0", "\u7b54\uff1a(1)\u00a0\u00a0 Visual C+\u662f\u4e00\u4e2a\u4ee5C++\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u4e3a\u57fa\u7840\u7684\u3001\u96c6\u6210\u7684\u3001\u53ef\u89c6\u5316\u7684\u7f16\u7a0b\u73af\u5883\uff1b", "(2)\u00a0\u00a0 Win32 API\u662f32\u4f4dWindows\u64cd\u4f5c\u7cfb\u4ee5C/C++\u5f62\u5f0f\u63d0\u4f9b\u7684\u4e00\u7ec4\u5e94\u7528\u7a0b\u5e8f\u63a5\u53e3\uff1b", "(3)\u00a0\u00a0 MFC\u662f\u5bf9Win32 API\u7684\u5c01\u88c5\uff0c\u7b80\u5316\u4e86\u5f00\u53d1\u8fc7\u7a0b\u3002", "\u00a0", "\u7b54\uff1a 1\uff0e\u6210\u5458\u9650\u5b9a\u7b26\u00a0 2\uff0e\u865a\u57fa\u7c7b", "\u00a0", "\u7b54\uff1a\u5728\u591a\u6001\u4e2d\uff0c\u5982\u679c\u7a0b\u5e8f\u5728\u7f16\u8bd1\u9636\u6bb5\u5c31\u80fd\u786e\u5b9a\u5b9e\u9645\u6267\u884c\u52a8\u4f5c\uff0c\u5219\u79f0\u9759\u6001\u5173\u8054\uff0c", "\u5982\u679c\u7b49\u5230\u7a0b\u5e8f\u8fd0\u884c\u624d\u80fd\u786e\u5b9a\u53eb\u52a8\u6001\u5173\u8054\u3002", "\u00a0", "\u7b54\uff1a1.\u4e00\u4e2a\u57fa\u7c7b\u7684\u6307\u9488\u6216\u5f15\u7528\u6307\u5411\u4e00\u4e2a\u6d3e\u751f\u7c7b\u5bf9\u8c61\u00a0 2.\u865a\u51fd\u6570", "\u00a0", "\u7b54\uff1a\u5f53\u4e00\u4e2a\u7c7b\u4e2d\uff0c\u5b58\u5728\u4e00\u4e2a\u6307\u5411\u53e6\u4e00\u4e2a\u7c7b\u5bf9\u8c61\u7684\u6307\u9488\u65f6\uff0c\u5bf9\u6307\u9488\u8fd0\u7b97\u7b26\u8fdb\u884c\u91cd\u8f7d\uff0c\u90a3\u4e48\u5f53\u524d\u7c7b\u5bf9\u8c61\u53ef\u4ee5\u901a\u8fc7\u6307\u9488\u50cf\u8c03\u7528\u81ea\u8eab\u6210\u5458\u4e00\u6837\u8c03\u7528\u53e6\u4e00\u4e2a\u7c7b\u7684\u6210\u5458\u3002", "\u00a0", "\u7b54\uff1a\u5f53\u57fa\u7c7b\u6307\u9488\u6307\u5411\u7528new\u8fd0\u7b97\u7b26\u751f\u6210\u7684\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\uff0cdelete\u57fa\u7c7b\u6307\u9488\u65f6\uff0c\u6d3e\u751f\u7c7b\u90e8\u5206\u6ca1\u6709\u91ca\u653e\u6389\u800c\u9020\u6210\u91ca\u653e\u4e0d\u5f7b\u5e95\u73b0\u8c61\uff0c\u9700\u8981\u865a\u6790\u6784\u51fd\u6570\u3002 \u8865\u5145\uff1a\u865a\u51fd\u6570\u5c31\u662f\u8ba9\u6d3e\u751f\u7c7b\u8c03\u7528\u57fa\u7c7b\u7684\u865a\u51fd\u6570\u3002", "\u00a0", "\u7b54\uff1aCObject", "\u00a0", "\u7b54\uff1a\u5de6\u53f3\u5b50\u6811\u90fd\u662f\u5e73\u8861\u4e8c\u53c9\u6811\uff0c\u800c\u4e14\u5de6\u53f3\u5b50\u6811\u7684\u6df1\u5ea6\u5dee\u503c\u7684\u7ea6\u5bf9\u503c\u4e0d\u5927\u4e8e1\u3002", "\u00a0", "\u7b54\uff1a\u65e0\u9650\u5faa\u73af\uff0c\u548cwhile(1)\u76f8\u540c\u3002", "\u00a0", "\u7b54\uff1a1.\u5438\u6536\u57fa\u7c7b\u6210\u5458\u00a0\u00a0\u00a0 2.\u6539\u9020\u57fa\u7c7b\u6210\u5458\u00a0\u00a0\u00a0 3.\u6dfb\u52a0\u65b0\u6210\u5458", "\u00a0", "\u7b54\uff1a\u5728TCP/IP\u534f\u8bae\u4e2d\uff0cTCP\u534f\u8bae\u63d0\u4f9b\u53ef\u9760\u7684\u8fde\u63a5\u670d\u52a1\uff0c\u91c7\u7528\u4e09\u6b21\u63e1\u624b\u5efa\u7acb\u4e00\u4e2a\u8fde\u63a5\u3002", "\u7b2c\u4e00\u6b21\u63e1\u624b\uff1a\u5efa\u7acb\u8fde\u63a5\u65f6\uff0c\u5ba2\u6237\u7aef\u53d1\u9001\u8fde\u63a5\u8bf7\u6c42\u5230\u670d\u52a1\u5668\uff0c\u5e76\u8fdb\u5165SYN_SEND\u72b6\u6001\uff0c\u7b49\u5f85\u670d\u52a1\u5668\u786e\u8ba4\uff1b", "\u7b2c\u4e8c\u6b21\u63e1\u624b\uff1a\u670d\u52a1\u5668\u6536\u5230\u5ba2\u6237\u7aef\u8fde\u63a5\u8bf7\u6c42\uff0c\u5411\u5ba2\u6237\u7aef\u53d1\u9001\u5141\u8bb8\u8fde\u63a5\u5e94\u7b54\uff0c\u6b64\u65f6\u670d\u52a1\u5668\u8fdb\u5165SYN_RECV\u72b6\u6001\uff1b", "\u7b2c\u4e09\u6b21\u63e1\u624b\uff1a\u5ba2\u6237\u7aef\u6536\u5230\u670d\u52a1\u5668\u7684\u5141\u8bb8\u8fde\u63a5\u5e94\u7b54\uff0c\u5411\u670d\u52a1\u5668\u53d1\u9001\u786e\u8ba4\uff0c\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u8fdb\u5165\u901a\u4fe1\u72b6\u6001\uff0c\u5b8c\u6210\u4e09\u6b21\u63e1\u624b", "\u00a0", "\u7b54\uff1amemset\u7528\u6765\u5bf9\u4e00\u6bb5\u5185\u5b58\u7a7a\u95f4\u5168\u90e8\u8bbe\u7f6e\u4e3a\u67d0\u4e2a\u5b57\u7b26\uff0c\u4e00\u822c\u7528\u5728\u5bf9\u5b9a\u4e49\u7684\u5b57\u7b26\u4e32\u8fdb\u884c\u521d\u59cb\u5316\u4e3a\u2019\\0\u2032\u3002", "memcpy\u7528\u6765\u505a\u5185\u5b58\u62f7\u8d1d\uff0c\u4f60\u53ef\u4ee5\u62ff\u5b83\u62f7\u8d1d\u4efb\u4f55\u6570\u636e\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u53ef\u4ee5\u6307\u5b9a\u62f7\u8d1d\u7684\u6570\u636e\u957f\u5ea6\uff1b", "\u00a0", "\u7b54\uff1aC++\u8bed\u8a00\u652f\u6301\u51fd\u6570\u91cd\u8f7d\uff0cC \u8bed\u8a00\u4e0d\u652f\u6301\u51fd\u6570\u91cd\u8f7d\u3002\u51fd\u6570\u88abC++\u7f16\u8bd1\u540e\u5728\u5e93\u4e2d\u7684\u540d\u5b57", "\u4e0eC \u8bed\u8a00\u7684\u4e0d\u540c\u3002\u5047\u8bbe\u67d0\u4e2a\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a void foo(int x, int y);\u8be5\u51fd\u6570\u88abC \u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u5728\u5e93\u4e2d\u7684\u540d\u5b57\u4e3a_foo \uff0c \u800cC++\u7f16\u8bd1\u5668\u5219\u4f1a\u4ea7\u751f\u50cf_foo_int_int \u4e4b\u7c7b\u7684\u540d\u5b57\u3002C++\u63d0\u4f9b\u4e86C \u8fde\u63a5\u4ea4\u6362\u6307\u5b9a\u7b26\u53f7extern\u201cC\u201d\u6765\u89e3\u51b3\u540d\u5b57\u5339\u914d\u95ee\u9898\u3002", "\u00a0", "\u7b54\uff1a\u5728\u865a\u51fd\u6570\u7684\u540e\u9762\u52a0=0\uff0c\u542b\u6709\u865a\u51fd\u6570\u7684\u7c7b\u79f0\u4e3a\u62bd\u8c61\u7c7b\u3002", "\u00a0", "char *strcpy(char *strDest, const char *strSrc)", "{", "if ( strDest == NULL || strSrc == NULL)", "return NULL ;", "if ( strDest == strSrc)", "return strDest ;", "char *tempptr = strDest ;\u00a0 ", "while( (*strDest++ = *strSrc++) != \u2018\\\\0\u2019) ", ";", "return tempptr ; ", "}", "\u7b54\u6848\uff1a", "// \u666e\u901a\u6784\u9020\u51fd\u6570", "String::String(const char *str)", "{", "if ( str == NULL )\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ", "{", "m_data = new char[1] ;", "m_data[0] = \u201d ;", "}", "else", "{", "m_data = new char[strlen(str) + 1];", "strcpy(m_data,str);", "}", "}", "//\u62f7\u8d1d\u6784\u9020\u51fd\u6570", "String::String(const String &other)", "{", "m_data = new char[strlen(other.m_data) + 1];", "strcpy(m_data,other.m_data);", "}", "//\u8d4b\u503c\u51fd\u6570(\u91cd\u8f7d\u8fd0\u7b97\u7b26)", "String & String::operator =(const String &other)", "{", "if ( this == &other)", "return *this ;", "delete []m_data;", "m_data = new char[strlen(other.m_data) + 1];", "strcpy(m_data,other.m_data);", "return *this ;", "}", "//\u6790\u6784\u51fd\u6570", "String::~ String(void)", "{", "delete []m_data ;", "}", "\u00a0", "\u7b54\u6848\uff1a", "\u6210\u5458\u51fd\u6570\u88ab\u91cd\u8f7d\u7684\u7279\u5f81\uff1a", "\uff081\uff09\u76f8\u540c\u7684\u8303\u56f4\uff08\u5728\u540c\u4e00\u4e2a\u7c7b\u4e2d\uff09\uff1b", "\uff082\uff09\u51fd\u6570\u540d\u5b57\u76f8\u540c\uff1b", "\uff083\uff09\u53c2\u6570\u4e0d\u540c\uff1b", "\uff084\uff09virtual \u5173\u952e\u5b57\u53ef\u6709\u53ef\u65e0\u3002", "\u8986\u76d6\u662f\u6307\u6d3e\u751f\u7c7b\u51fd\u6570\u8986\u76d6\u57fa\u7c7b\u51fd\u6570\uff0c\u7279\u5f81\u662f\uff1a", "\uff081\uff09\u4e0d\u540c\u7684\u8303\u56f4\uff08\u5206\u522b\u4f4d\u4e8e\u6d3e\u751f\u7c7b\u4e0e\u57fa\u7c7b\uff09\uff1b", "\uff082\uff09\u51fd\u6570\u540d\u5b57\u76f8\u540c\uff1b", "\uff083\uff09\u53c2\u6570\u76f8\u540c\uff1b", "\uff084\uff09\u57fa\u7c7b\u51fd\u6570\u5fc5\u987b\u6709virtual \u5173\u952e\u5b57\u3002", "\u201c\u9690\u85cf\u201d\u662f\u6307\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\u5c4f\u853d\u4e86\u4e0e\u5176\u540c\u540d\u7684\u57fa\u7c7b\u51fd\u6570\uff0c\u89c4\u5219\u5982\u4e0b\uff1a", "\uff081\uff09\u5982\u679c\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\u4e0e\u57fa\u7c7b\u7684\u51fd\u6570\u540c\u540d\uff0c\u4f46\u662f\u53c2\u6570\u4e0d\u540c\u3002\u6b64\u65f6\uff0c\u4e0d\u8bba\u6709\u65e0virtual\u5173\u952e\u5b57\uff0c\u57fa\u7c7b\u7684\u51fd\u6570\u5c06\u88ab\u9690\u85cf\uff08\u6ce8\u610f\u522b\u4e0e\u91cd\u8f7d\u6df7\u6dc6\uff09\u3002", "\uff082\uff09\u5982\u679c\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\u4e0e\u57fa\u7c7b\u7684\u51fd\u6570\u540c\u540d\uff0c\u5e76\u4e14\u53c2\u6570\u4e5f\u76f8\u540c\uff0c\u4f46\u662f\u57fa\u7c7b\u51fd\u6570\u6ca1\u6709virtual \u5173\u952e\u5b57\u3002\u6b64\u65f6\uff0c\u57fa\u7c7b\u7684\u51fd\u6570\u88ab\u9690\u85cf\uff08\u6ce8\u610f\u522b\u4e0e\u8986\u76d6\u6df7\u6dc6\uff09", "\u00a0", "\u7b54\u6848\uff1a", "cout << __FILE__ ;", "cout<<__LINE__ ;", "__FILE__\u548c__LINE__\u662f\u7cfb\u7edf\u9884\u5b9a\u4e49\u5b8f\uff0c\u8fd9\u79cd\u5b8f\u5e76\u4e0d\u662f\u5728\u67d0\u4e2a\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\uff0c\u800c\u662f\u7531\u7f16\u8bd1\u5668\u5b9a\u4e49\u7684\u3002", "\u00a0", "\u7b54\u6848\uff1a", "void Order(vector<int> &data) \u00a0//\u5192\u6ce1\u6392\u5e8f", "{", "int count = data.size() ;", "int tag = false ;", "for ( int i = 0 ; i < count ; i++)", "{", "for ( int j = 0 ; j < count \u2013 i \u2013 1 ; j++)", "{", "if ( data[j] > data[j+1])", "{", "tag = true ;", "int temp = data[j] ;", "data[j] = data[j+1] ;", "data[j+1] = temp ;", "}", "}", "if ( !tag )", "break ;", "}", "}", "\u00a0", "void main( void )", "{", "vector<int>data;", "ifstream in(\u201cc:\\\\data.txt\u201d);", "if ( !in)", "{", "cout<<\u201dfile error!\u201d;", "exit(1);", "}", "int temp;", "while (!in.eof())", "{", "in>>temp;", "data.push_back(temp);", "}", "in.close();", "Order(data);", "ofstream out(\u201cc:\\\\result.txt\u201d);", "if ( !out)", "{", "cout<<\u201dfile error!\u201d;", "exit(1);", "}", "for ( i = 0 ; i < data.size() ; i++)", "out<<data[i]<<\u201d \u201c;", "out.close();", "}", "\u00a0", "\u7b54\u6848\uff1a", "Node * ReverseList(Node *head) //\u94fe\u8868\u9006\u5e8f", "{", "if ( head == NULL || head->next == NULL )", "return head;", "Node *p1 = head ;", "Node *p2 = p1->next ;", "Node *p3 = p2->next ;", "p1->next = NULL ;", "while ( p3 != NULL )", "{", "p2->next = p1 ;", "p1 = p2 ;", "p2 = p3 ;", "p3 = p3->next ;", "}", "p2->next = p1 ;", "head = p2 ;", "return head ;", "}", "\u00a0", "\u7b54\u6848\uff1a", "Node * Merge(Node *head1 , Node *head2)", "{", "if ( head1 == NULL)", "return head2 ;", "if ( head2 == NULL)", "return head1 ;", "Node *head = NULL ;", "Node *p1 = NULL;", "Node *p2 = NULL;", "if ( head1->data < head2->data )", "{", "head = head1 ;", "p1 = head1->next;", "p2 = head2 ;", "}", "else", "{", "head = head2 ;", "p2 = head2->next ;", "p1 = head1 ;", "}", "Node *pcurrent = head ;", "while ( p1 != NULL && p2 != NULL)", "{", "if ( p1->data <= p2->data )", "{", "pcurrent->next = p1 ;", "pcurrent = p1 ;", "p1 = p1->next ;", "}", "else", "{", "pcurrent->next = p2 ;", "pcurrent = p2 ;", "p2 = p2->next ;", "}", "}", "if ( p1 != NULL )", "pcurrent->next = p1 ;", "if ( p2 != NULL )", "pcurrent->next = p2 ;", "return head ;", "}", "\u00a0", "132.\u5df2\u77e5\u4e24\u4e2a\u94fe\u8868head1 \u548chead2 \u5404\u81ea\u6709\u5e8f\uff0c\u8bf7\u628a\u5b83\u4eec\u5408\u5e76\u6210\u4e00\u4e2a\u94fe\u8868\u4f9d\u7136\u6709\u5e8f\uff0c\u8fd9\u6b21\u8981\u6c42\u7528\u9012\u5f52\u65b9\u6cd5\u8fdb\u884c\u3002 ( Autodesk)", "\u7b54\u6848\uff1a", "Node * MergeRecursive(Node *head1 , Node *head2)", "{", "if ( head1 == NULL )", "return head2 ;", "if ( head2 == NULL)", "return head1 ;", "Node *head = NULL ;", "if ( head1->data < head2->data )", "{", "head = head1 ;", "head->next = MergeRecursive(head1->next,head2);", "}", "else", "{", "head = head2 ;", "head->next = MergeRecursive(head1,head2->next);", "}", "return head ;", "}", "\u00a0", "133\uff0e\u5206\u6790\u4e00\u4e0b\u8fd9\u6bb5\u7a0b\u5e8f\u7684\u8f93\u51fa (Autodesk)", "class B", "{", "public:", "B()", "{", "cout<<\u201ddefault constructor\u201d<<endl;", "}", "~B()", "{", "cout<<\u201ddestructed\u201d<<endl;", "}", "B(int i):data(i)", "{", "cout<<\u201dconstructed by parameter\u201d << data <<endl;", "}", "private:", "int data;", "};", "B Play( B b)", "{", "return b ;", "}", "int main(int argc, char* argv[])", "{", "B temp = Play(5);", "return 0;", "}", "\u00a0", "133 \u5c06\u201c\u5f15\u7528\u201d\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u6709\u54ea\u4e9b\u7279\u70b9\uff1f", "\u00a0", "\uff081\uff09\u4f20\u9012\u5f15\u7528\u7ed9\u51fd\u6570\u4e0e\u4f20\u9012\u6307\u9488\u7684\u6548\u679c\u662f\u4e00\u6837\u7684\u3002\u8fd9\u65f6\uff0c\u88ab\u8c03\u51fd\u6570\u7684\u5f62\u53c2\u5c31\u6210\u4e3a\u539f\u6765\u4e3b\u8c03\u51fd\u6570\u4e2d\u7684\u5b9e\u53c2\u53d8\u91cf\u6216\u5bf9\u8c61\u7684\u4e00\u4e2a\u522b\u540d\u6765\u4f7f\u7528\uff0c\u6240\u4ee5\u5728\u88ab\u8c03\u51fd\u6570\u4e2d\u5bf9\u5f62\u53c2\u53d8\u91cf\u7684\u64cd\u4f5c\u5c31\u662f\u5bf9\u5176\u76f8\u5e94\u7684\u76ee\u6807\u5bf9\u8c61\uff08\u5728\u4e3b\u8c03\u51fd\u6570\u4e2d\uff09\u7684\u64cd\u4f5c\u3002", "\u00a0", "\uff082\uff09\u4f7f\u7528\u5f15\u7528\u4f20\u9012\u51fd\u6570\u7684\u53c2\u6570\uff0c\u5728\u5185\u5b58\u4e2d\u5e76\u6ca1\u6709\u4ea7\u751f\u5b9e\u53c2\u7684\u526f\u672c\uff0c\u5b83\u662f\u76f4\u63a5\u5bf9\u5b9e\u53c2\u64cd\u4f5c\uff1b\u800c\u4f7f\u7528\u4e00\u822c\u53d8\u91cf\u4f20\u9012\u51fd\u6570\u7684\u53c2\u6570\uff0c\u5f53\u53d1\u751f\u51fd\u6570\u8c03\u7528\u65f6\uff0c\u9700\u8981\u7ed9\u5f62\u53c2\u5206\u914d\u5b58\u50a8\u5355\u5143\uff0c\u5f62\u53c2\u53d8\u91cf\u662f\u5b9e\u53c2\u53d8\u91cf\u7684\u526f\u672c\uff1b\u5982\u679c\u4f20\u9012\u7684\u662f\u5bf9\u8c61\uff0c\u8fd8\u5c06\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002\u56e0\u6b64\uff0c\u5f53\u53c2\u6570\u4f20\u9012\u7684\u6570\u636e\u8f83\u5927\u65f6\uff0c\u7528\u5f15\u7528\u6bd4\u7528\u4e00\u822c\u53d8\u91cf\u4f20\u9012\u53c2\u6570\u7684\u6548\u7387\u548c\u6240\u5360\u7a7a\u95f4\u90fd\u597d\u3002", "\u00a0", "\uff083\uff09\u4f7f\u7528\u6307\u9488\u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570\u867d\u7136\u4e5f\u80fd\u8fbe\u5230\u4e0e\u4f7f\u7528\u5f15\u7528\u7684\u6548\u679c\uff0c\u4f46\u662f\uff0c\u5728\u88ab\u8c03\u51fd\u6570\u4e2d\u540c\u6837\u8981\u7ed9\u5f62\u53c2\u5206\u914d\u5b58\u50a8\u5355\u5143\uff0c\u4e14\u9700\u8981\u91cd\u590d\u4f7f\u7528\u201d*\u6307\u9488\u53d8\u91cf\u540d\u201d\u7684\u5f62\u5f0f\u8fdb\u884c\u8fd0\u7b97\uff0c\u8fd9\u5f88\u5bb9\u6613\u4ea7\u751f\u9519\u8bef\u4e14\u7a0b\u5e8f\u7684\u9605\u8bfb\u6027\u8f83\u5dee\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u5728\u4e3b\u8c03\u51fd\u6570\u7684\u8c03\u7528\u70b9\u5904\uff0c\u5fc5\u987b\u7528\u53d8\u91cf\u7684\u5730\u5740\u4f5c\u4e3a\u5b9e\u53c2\u3002\u800c\u5f15\u7528\u66f4\u5bb9\u6613\u4f7f\u7528\uff0c\u66f4\u6e05\u6670\u3002", "\u00a0", "134. \u4ec0\u4e48\u65f6\u5019\u9700\u8981\u201c\u5f15\u7528\u201d\uff1f", "\u6d41\u64cd\u4f5c\u7b26\uff08<<\u3001>>\uff09\u548c\u8d4b\u503c\u64cd\u4f5c\u7b26\uff08=\uff09\u7684\u8fd4\u56de\u503c\u3001\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u7684\u53c2\u6570\u3001\u8d4b\u503c\u64cd\u4f5c\u7b26\u7684\u53c2\u6570\u3001\u5176\u5b83\u60c5\u51b5\u90fd\u63a8\u8350\u4f7f\u7528\u5f15\u7528\u3002", "\u00a0", "135.\u9762\u5411\u5bf9\u8c61\u7684\u4e09\u4e2a\u57fa\u672c\u7279\u5f81\uff0c\u5e76\u7b80\u5355\u53d9\u8ff0\u4e4b\uff1f", "\u00a0", "1. \u5c01\u88c5\uff1a\u5c06\u5ba2\u89c2\u4e8b\u7269\u62bd\u8c61\u6210\u7c7b\uff0c\u6bcf\u4e2a\u7c7b\u5bf9\u81ea\u8eab\u7684\u6570\u636e\u548c\u65b9\u6cd5\u5b9e\u884cprotection(private, protected,public)", "\u00a0", "2. \u7ee7\u627f\uff1a\u5e7f\u4e49\u7684\u7ee7\u627f\u6709\u4e09\u79cd\u5b9e\u73b0\u5f62\u5f0f\uff1a\u5b9e\u73b0\u7ee7\u627f\uff08\u6307\u4f7f\u7528\u57fa\u7c7b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u800c\u65e0\u9700\u989d\u5916\u7f16\u7801\u7684\u80fd\u529b\uff09\u3001\u53ef\u89c6\u7ee7\u627f\uff08\u5b50\u7a97\u4f53\u4f7f\u7528\u7236\u7a97\u4f53\u7684\u5916\u89c2\u548c\u5b9e\u73b0\u4ee3\u7801\uff09\u3001\u63a5\u53e3\u7ee7\u627f\uff08\u4ec5\u4f7f\u7528\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u5b9e\u73b0\u6ede\u540e\u5230\u5b50\u7c7b\u5b9e\u73b0\uff09\u3002\u524d\u4e24\u79cd\uff08\u7c7b\u7ee7\u627f\uff09\u548c\u540e\u4e00\u79cd\uff08\u5bf9\u8c61\u7ec4\u5408=>\u63a5\u53e3\u7ee7\u627f\u4ee5\u53ca\u7eaf\u865a\u51fd\u6570\uff09\u6784\u6210\u4e86\u529f\u80fd\u590d\u7528\u7684\u4e24\u79cd\u65b9\u5f0f\u3002", "\u00a0", "3. \u591a\u6001\uff1a\u662f\u5c06\u7236\u5bf9\u8c61\u8bbe\u7f6e\u6210\u4e3a\u548c\u4e00\u4e2a\u6216\u66f4\u591a\u7684\u4ed6\u7684\u5b50\u5bf9\u8c61\u76f8\u7b49\u7684\u6280\u672f\uff0c\u8d4b\u503c\u4e4b\u540e\uff0c\u7236\u5bf9\u8c61\u5c31\u53ef\u4ee5\u6839\u636e\u5f53\u524d\u8d4b\u503c\u7ed9\u5b83\u7684\u5b50\u5bf9\u8c61\u7684\u7279\u6027\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u8fd0\u4f5c\u3002\u7b80\u5355\u7684\u8bf4\uff0c\u5c31\u662f\u4e00\u53e5\u8bdd\uff1a\u5141\u8bb8\u5c06\u5b50\u7c7b\u7c7b\u578b\u7684\u6307\u9488\u8d4b\u503c\u7ed9\u7236\u7c7b\u7c7b\u578b\u7684\u6307\u9488\u3002", "\u00a0", "\u00a0", "136.\u6c42\u4e0b\u9762\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff08\u5fae\u8f6f\uff09", "\u00a0", "int func(x)", "{", "int countx = 0;", "while(x)", "{", "countx ++;", "x = x&(x-1);", "}", "return countx;", "}", "\u00a0", "\u5047\u5b9ax = 9999\u3002 \u7b54\u6848\uff1a8", "\u601d\u8def\uff1a\u5c06x\u8f6c\u5316\u4e3a2\u8fdb\u5236\uff0c\u770b\u542b\u6709\u76841\u7684\u4e2a\u6570\u3002", "\u00a0", "137\u3001\u5199\u51fa\u4e0b\u5217\u4ee3\u7801\u7684\u8f93\u51fa\u5185\u5bb9", "\uff03i nclude<stdio.h>", "int inc(int a)", "{", "return(++a);", "}", "int multi(int*a,int*b,int*c)", "{", "return(*c=*a**b);", "}", "typedef int(FUNC1)(int in);", "typedef int(FUNC2) (int*,int*,int*);", "void show(FUNC2 fun,int arg1, int*arg2)", "{", "INCp=&inc;", "int temp =p(arg1);", "fun(&temp,&arg1, arg2);", "printf(\u201c%d\\n\u201d,*arg2);", "}", "main()", "{", "int a;", "show(multi,10,&a);", "return 0;", "}", "\u7b54\uff1a110", "138\u3002\u7f16\u5199\u4e00\u4e2a C \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5728\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u627e\u5230\u53ef\u80fd\u7684\u6700\u957f\u7684\u5b50\u5b57\u7b26\u4e32\uff0c\u4e14\u8be5\u5b57\u7b26\u4e32\u662f\u7531\u540c\u4e00\u5b57\u7b26\u7ec4\u6210\u7684\u3002", "char * search(char *cpSource, char ch)", "{", "char *cpTemp=NULL, *cpDest=NULL;", "int iTemp, iCount=0;", "while(*cpSource)", "{", "if(*cpSource == ch)", "{", "iTemp = 0;", "cpTemp = cpSource;", "while(*cpSource == ch)", "++iTemp, ++cpSource;", "if(iTemp > iCount)", "iCount = iTemp, cpDest = cpTemp;", "if(!*cpSource)", "break;", "}", "++cpSource;", "}", "return cpDest;", "}", "\u00a0", "139\u3002\u8bf7\u7f16\u5199\u4e00\u4e2a C \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5728\u7ed9\u5b9a\u7684\u5185\u5b58\u533a\u57df\u641c\u7d22\u7ed9\u5b9a\u7684\u5b57\u7b26\uff0c\u5e76\u8fd4\u56de\u8be5\u5b57\u7b26\u6240\u5728\u4f4d\u7f6e\u7d22\u5f15\u503c\u3002", "int search(char *cpSource, int n, char ch)", "{", "int i;", "for(i=0; i<n && *(cpSource+i) != ch; ++i);", "return i;", "}", "140.\u4e00\u4e2a\u5355\u5411\u94fe\u8868\uff0c\u4e0d\u77e5\u9053\u5934\u8282\u70b9,\u4e00\u4e2a\u6307\u9488\u6307\u5411\u5176\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\uff0c\u95ee\u5982\u4f55\u5220\u9664\u8fd9\u4e2a\u6307\u9488\u6307\u5411\u7684\u8282\u70b9\uff1f", "\u5c06\u8fd9\u4e2a\u6307\u9488\u6307\u5411\u7684next\u8282\u70b9\u503ccopy\u5230\u672c\u8282\u70b9\uff0c\u5c06next\u6307\u5411next->next,\u5e76\u968f\u540e\u5220\u9664\u539fnext\u6307\u5411\u7684\u8282\u70b9\u3002", "\uff03i nclude <stdio.h>", "\uff03i nclude <string.h>", "\uff03i nclude <dos.h>", "int main()", "{", "char str[] = \u201cABCD1234efgh\u201d;", "int length = strlen(str);", "char * p1 = str;", "char * p2 = str + length \u2013 1;", "while(p1 < p2)", "{", "char c = *p1;", "*p1 = *p2;", "*p2 = c;", "++p1;", "\u2013p2;", "}", "printf(\u201cstr now is %s\\n\u201d,str);", "system(\u201cpause\u201d);", "return 0;", "}", "\u00a0", "142\u3001\u6709\u4e00\u5206\u6570\u5e8f\u5217\uff1a1/2,1/4,1/6,1/8\u2026\u2026\uff0c\u7528\u51fd\u6570\u8c03\u7528\u7684\u65b9\u6cd5\uff0c\u6c42\u6b64\u6570\u5217\u524d20\u9879\u7684\u548c", "\uff03i nclude <stdio.h>", "double getValue()", "{", "double result = 0;", "int i = 2;", "while(i < 42)", "{", "result += 1.0 / i;//\u4e00\u5b9a\u8981\u4f7f\u75281.0\u505a\u9664\u6570\uff0c\u4e0d\u80fd\u75281\uff0c\u5426\u5219\u7ed3\u679c\u5c06\u81ea\u52a8\u8f6c\u5316\u6210\u6574\u6570\uff0c\u53730.000000", "i += 2;", "}", "return result;", "}", "int main()", "{", "printf(\u201cresult is %f\\n\u201d, getValue());", "system(\u201cpause\u201d);", "return 0;", "}", "143\u3001\u6709\u4e00\u4e2a\u6570\u7ec4a[1000]\u5b58\u653e0\u20131000;\u8981\u6c42\u6bcf\u9694\u4e8c\u4e2a\u6570\u5220\u6389\u4e00\u4e2a\u6570\uff0c\u5230\u672b\u5c3e\u65f6\u5faa\u73af\u81f3\u5f00\u5934\u7ee7\u7eed\u8fdb\u884c\uff0c\u6c42\u6700\u540e\u4e00\u4e2a\u88ab\u5220\u6389\u7684\u6570\u7684\u539f\u59cb\u4e0b\u6807\u4f4d\u7f6e\u3002", "\u4ee57\u4e2a\u6570\u4e3a\u4f8b\uff1a", "{0,1,2,3,4,5,6,7} 0\u2013>1\u2013>2\uff08\u5220\u9664\uff09\u2013>3\u2013>4\u2013>5(\u5220\u9664)\u2013>6\u2013>7\u2013>0\uff08\u5220\u9664\uff09\uff0c\u5982\u6b64\u5faa\u73af\u76f4\u5230\u6700\u540e\u4e00\u4e2a\u6570\u88ab\u5220\u9664\u3002", "\u65b9\u6cd51\uff1a\u6570\u7ec4", "\uff03include <iostream>", "using namespace std;", "#define null 1000", "int main()", "{", "int arr[1000];", "for (int i=0;i<1000;++i)", "arr[i]=i;", "int j=0;", "int count=0;", "while(count<999)", "{", "while(arr[j%1000]==null)", "j=(++j)%1000;", "j=(++j)%1000;", "while(arr[j%1000]==null)", "j=(++j)%1000;", "j=(++j)%1000;", "while(arr[j%1000]==null)", "j=(++j)%1000;", "arr[j]=null;", "++count;", "}", "while(arr[j]==null)", "j=(++j)%1000;", "cout<<j<<endl;", "return 0;", "}", "\u65b9\u6cd52\uff1a\u94fe\u8868", "\uff03i nclude<iostream>", "using namespace std;", "#define null 0", "struct node", "{", "int data;", "node* next;", "};", "int main()", "{", "node* head=new node;", "head->data=0;", "head->next=null;", "node* p=head;", "for(int i=1;i<1000;i++)", "{", "node* tmp=new node;", "tmp->data=i;", "tmp->next=null;", "head->next=tmp;", "head=head->next;", "}", "head->next=p;", "while(p!=p->next)", "{", "p->next->next=p->next->next->next;", "p=p->next->next;", "}", "cout<<p->data;", "return 0;", "}", "\u00a0", "\u65b9\u6cd53\uff1a\u901a\u7528\u7b97\u6cd5", "\uff03i nclude <stdio.h>", "#define MAXLINE 1000\u00a0\u00a0 //\u5143\u7d20\u4e2a\u6570", "/*", "MAXLINE\u00a0\u00a0 \u5143\u7d20\u4e2a\u6570", "a[]\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u5143\u7d20\u6570\u7ec4", "R[]\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u6307\u9488\u573a", "suffix\u00a0\u00a0\u00a0 \u4e0b\u6807", "index\u00a0\u00a0\u00a0\u00a0 \u8fd4\u56de\u6700\u540e\u7684\u4e0b\u6807\u5e8f\u53f7", "values\u00a0\u00a0\u00a0 \u8fd4\u56de\u6700\u540e\u7684\u4e0b\u6807\u5bf9\u5e94\u7684\u503c", "start\u00a0\u00a0\u00a0\u00a0 \u4ece\u7b2c\u51e0\u4e2a\u5f00\u59cb", "K\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u95f4\u9694", "*/", "int find_n(int a[],int R[],int K,int& index,int& values,int s=0) {", "int suffix;", "int front_node,current_node;", "suffix=0;", "if(s==0) {", "current_node=0;", "front_node=MAXLINE-1;", "}", "else {", "current_node=s;", "front_node=s-1;", "}", "while(R[front_node]!=front_node) {", "printf(\u201c%d\\n\u201d,a[current_node]);", "R[front_node]=R[current_node];", "if(K==1) {", "current_node=R[front_node];", "continue;", "}", "for(int i=0;i<K;i++){", "front_node=R[front_node];", "}", "current_node=R[front_node];", "}", "index=front_node;", "values=a[front_node];", "return 0;", "}", "int main(void) {", "int a[MAXLINE],R[MAXLINE],suffix,index,values,start,i,K;", "suffix=index=values=start=0;", "K=2;", "for(i=0;i<MAXLINE;i++) {", "a[i]=i;", "R[i]=i+1;", "}", "R[i-1]=0;", "find_n(a,R,K,index,values,2);", "printf(\u201cthe value is %d,%d\\n\u201d,index,values);", "return 0;", "}", "144\u3001\u6307\u51fa\u4e0b\u5217\u7a0b\u5e8f\u6709\u4ec0\u4e48\u9519\u8bef\uff1a", "void test2()", "{", "char string[10], str1[10];", "int i;", "for(i=0; i<10; i++)", "{", "str1[i] = \u2018a\u2019;", "}", "strcpy( string, str1 );", "}", "\u89e3\u7b54\uff1a\u5bf9\u8bd5\u98982\uff0c\u5982\u679c\u9762\u8bd5\u8005\u6307\u51fa\u5b57\u7b26\u6570\u7ec4str1\u4e0d\u80fd\u5728\u6570\u7ec4\u5185\u7ed3\u675f\u53ef\u4ee5\u7ed93\u5206\uff1b\u5982\u679c\u9762\u8bd5\u8005\u6307\u51fastrcpy(string, str1)\u8c03\u7528\u4f7f\u5f97\u4ecestr1\u5185\u5b58\u8d77\u590d\u5236\u5230string\u5185\u5b58\u8d77\u6240\u590d\u5236\u7684\u5b57\u8282\u6570\u5177\u6709\u4e0d\u786e\u5b9a\u6027\u53ef\u4ee5\u7ed97\u5206\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u6307\u51fa\u5e93\u51fd\u6570strcpy\u5de5\u4f5c\u65b9\u5f0f\u7684\u7ed910\u5206\uff1b", "str1\u4e0d\u80fd\u5728\u6570\u7ec4\u5185\u7ed3\u675f:\u56e0\u4e3astr1\u7684\u5b58\u50a8\u4e3a\uff1a{a,a,a,a,a,a,a,a,a,a},\u6ca1\u6709\u2019\\0\u2032(\u5b57\u7b26\u4e32\u7ed3\u675f\u7b26)\uff0c\u6240\u4ee5\u4e0d\u80fd\u7ed3\u675f", "strcpy( char *s1,char *s2)\u4ed6\u7684\u5de5\u4f5c\u539f\u7406\u662f\uff0c\u626b\u63cfs2\u6307\u5411\u7684\u5185\u5b58\uff0c\u9010\u4e2a\u5b57\u7b26\u4ed8\u5230s1\u6240\u6307\u5411\u7684\u5185\u5b58\uff0c\u76f4\u5230\u78b0\u5230\u2019\\0\u2032,\u56e0\u4e3astr1\u7ed3\u5c3e\u6ca1\u6709\u2019\\0\u2032\uff0c\u6240\u4ee5\u5177\u6709\u4e0d\u786e\u5b9a\u6027\uff0c\u4e0d\u77e5\u9053\u4ed6\u540e\u9762\u8fd8\u4f1a\u4ed8\u4ec0\u4e48\u4e1c\u4e1c\u3002", "\u6b63\u786e\u5e94\u5982\u4e0b", "void test2()", "{", "char string[10], str1[10];", "int i;", "for(i=0; i<9; i++)", "{", "str1[i] = \u2018a\u2019+i; //\u628aabcdefghi\u8d4b\u503c\u7ed9\u5b57\u7b26\u6570\u7ec4", "}", "str[i]=\u2019\\0\u2032;//\u52a0\u4e0a\u7ed3\u675f\u7b26", "strcpy( string, str1 );", "}", "145\u3001\u5b9e\u73b0strcmp", "int StrCmp(const char *str1, const char *str2)", "{", "assert(str1 && srt2);", "while(*str1 && *str1++ = = *str2++);", "return *str1-*str2;", "}", "146.\u7b26\u4e32A\u548cB,\u8f93\u51faA\u548cB\u4e2d\u7684\u6700\u5927\u516c\u5171\u5b50\u4e32\u3002", "\u6bd4\u5982A=\u201daocdfe\u201d B=\u201dpmcdfa\u201d \u5219\u8f93\u51fa\u201dcdf\u201d", "*/", "//Author: azhen", "\uff03i nclude<stdio.h>", "\uff03i nclude<stdlib.h>", "\uff03i nclude<string.h>", "char *commanstring(char shortstring[], char longstring[])", "{", "int i, j;", "char *substring=malloc(256);", "if(strstr(longstring, shortstring)!=NULL)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 //\u5982\u679c\u2026\u2026\uff0c\u90a3\u4e48\u8fd4\u56deshortstring", "return shortstring;", "for(i=strlen(shortstring)-1;i>0; i\u2013)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 //\u5426\u5219\uff0c\u5f00\u59cb\u5faa\u73af\u8ba1\u7b97", "{", "for(j=0; j<=strlen(shortstring)-i; j++){", "memcpy(substring, &shortstring[j], i);", "substring[i]=\u2019\\0\u2032;", "if(strstr(longstring, substring)!=NULL)", "return substring;", "}", "}", "return NULL;", "}", "\u00a0", "main()", "{", "char *str1=malloc(256);", "char *str2=malloc(256);", "char *comman=NULL;", "gets(str1);", "gets(str2);", "if(strlen(str1)>strlen(str2))\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u5c06\u77ed\u7684\u5b57\u7b26\u4e32\u653e\u524d\u9762", "comman=commanstring(str2, str1);", "else", "comman=commanstring(str1, str2);", "printf(\u201cthe longest comman string is: %s\\n\u201d, comman);", "}", "\u00a0", "147\u3001\u5199\u4e00\u4e2a\u51fd\u6570\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32str1\u548cstr2\u7684\u5927\u5c0f\uff0c\u82e5\u76f8\u7b49\u8fd4\u56de0\uff0c\u82e5str1\u5927\u4e8e", "str2\u8fd4\u56de1\uff0c\u82e5str1\u5c0f\u4e8estr2\u8fd4\u56de\uff0d1", "int strcmp ( const char * src,const char * dst)", "{", "int ret = 0 ;", "while( ! (ret = *(unsigned char *)src \u2013 *(unsigned char *)dst) && *dst)", "{", "++src;", "++dst;", "}", "if ( ret < 0 )", "ret = -1 ;", "else if ( ret > 0 )", "ret = 1 ;", "return( ret );", "}", "148\u3001\u5224\u65ad\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u4e0d\u662f\u56de\u6587", "int IsReverseStr(char *aStr)", "{", "int i,j;", "int found=1;", "if(aStr==NULL)", "return -1;", "j=strlen(aStr);", "for(i=0;i<j/2;i++)", "if(*(aStr+i)!=*(aStr+j-i-1))", "{", "found=0;", "break;", "}", "return found;", "\u00a0", "149 #include main()", "{", "int c[3][3]={1,2,3,4,5,6,7,8,9};", "for(int i=0;i<3;i++)", "for(int j=0;j<3;j++)", "printf(\u201c%ld\\n\u201d,&c[j]);", "printf(\u201c\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014-\\n\u201d);", "printf(\u201c%ld\\n\u201d,(c+1));", "printf(\u201c%ld\\n\u201d,(*c+1));", "printf(\u201c%ld\\n\u201d,&c[0][0]);", "printf(\u201c%ld\\n\u201d,**c);", "printf(\u201c%ld\\n\u201d,*c[0]);", "if(int(c)==int(*c)) printf(\u201cequl\u201d);", "}", "\u4e3a\u4ec0\u4e48c\uff0c*c\u7684\u503c\u76f8\u7b49\uff0c\uff08c+1\uff09\uff0c\uff08*c+1\uff09\u7684\u503c\u4e0d\u7b49 c\uff0c*c\uff0c**c\uff0c\u4ee3\u8868\u4ec0\u4e48\u610f\u601d\uff1f", "\u53c2\u8003\u7b54\u6848\uff1a", "c\u662f\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u5730\u5740\uff0c*c\u662f\u7b2c\u4e00\u884c\u5143\u7d20\u7684\u9996\u5730\u5740\uff0c\u5176\u5b9e\u7b2c\u4e00\u884c\u5143\u7d20\u7684\u5730\u5740\u5c31\u662f\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u5730\u5740\uff0c\u8fd9\u5bb9\u6613\u7406\u89e3\u3002**c\u662f\u63d0\u9886\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002", "\u4e3a\u4ec0\u4e48c\uff0c*c\u7684\u503c\u76f8\u7b49\uff1f", "int c\u56e0\u4e3a\u76f4\u63a5\u7528c\u8868\u793a\u6570\u7ec4c[0][0] printf(\u201c%ld\\n\u201d,*c[0]);\u8bed\u53e5\u5df2\u5c06\u6307\u9488\u79fb\u5230\u6570\u7ec4\u5934\u3002 int(*c)\u8868\u793ac0\u7684\u503c\u4e3a1\uff0c\u6240\u4ee5\u76f8\u7b49\u3002 \u6570\u7ec4c\u7684\u5b58\u653e\u7a7a\u95f4\u793a\u610f\u5982\u4e0b\uff1a\uff08\u673a\u5668\u4e2d\u662f\u884c\u4f18\u5148\u5b58\u653e\u7684\uff09 c[0][0] c[0][1] c[0][2] c[1][0] c[1][1] c[1][2] c[2][0] c[2][1] c[2][2] c\u662f\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u540d\uff0c\u5b9e\u9645\u4e0a\u5b83\u662f\u4e00\u4e2a\u6307\u9488\u5e38\u91cf\uff0c\u4e0d\u80fd\u8fdb\u884c\u81ea\u52a0\u3001\u81ea\u51cf\u8fd0\u7b97\uff0c\u5373\uff1ac++\u3001c\u2013\u3001++c\u3001\u2013c \u90fd\u662f\u4e0d\u5141\u8bb8\u7684\uff1b", "c\uff1a \u6570\u7ec4\u540d\uff1b\u662f\u4e00\u4e2a\u4e8c\u7ef4\u6307\u9488\uff0c\u5b83\u7684\u503c\u5c31\u662f\u6570\u7ec4\u7684\u9996\u5730\u5740\uff0c\u4e5f\u5373\u7b2c\u4e00\u884c\u5143\u7d20\u7684\u9996\u5730\u5740\uff08\u7b49\u4e8e *c\uff09\uff0c\u4e5f \u7b49\u4e8e\u7b2c\u4e00\u884c\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u5730\u5740\uff08 & c[0][0]\uff09\uff1b\u53ef\u4ee5\u8bf4\u6210\u662f\u4e8c\u7ef4\u6570\u7ec4\u7684\u884c\u6307\u9488\u3002 *c\uff1a \u7b2c\u4e00\u884c\u5143\u7d20\u7684\u9996\u5730\u5740\uff1b\u662f\u4e00\u4e2a\u4e00\u7ef4\u6307\u9488\uff0c\u53ef\u4ee5\u8bf4\u6210\u662f\u4e8c\u7ef4\u6570\u7ec4\u7684\u5217\u6307\u9488\u3002 **c\uff1a\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u503c\uff1b\u5373\uff1ac[0][0] \u6240\u4ee5\uff1a c \u548c *c\u7684\u503c\u662f\u76f8\u7b49\u7684\uff0c\u4f46\u4ed6\u4eec\u4e24\u8005\u4e0d\u80fd\u76f8\u4e92\u8d4b\u503c\uff0c\uff08\u7c7b\u578b\u4e0d\u540c\uff09\uff1b \uff08c + 1\uff09 \uff1ac\u662f\u884c\u6307\u9488\uff0c\uff08c + 1\uff09\u662f\u5728c\u7684\u57fa\u7840\u4e0a\u52a0\u4e0a\u4e8c\u7ef4\u6570\u7ec4\u4e00\u884c\u7684\u5730\u5740\u957f\u5ea6\uff0c\u5373\u4ece&c[0][0] \u53d8\u5230\u4e86&c[1][0]\uff1b \uff08*c + 1\uff09\uff1a*c\u662f\u5217\u6307\u9488\uff0c\uff08*c + 1\uff09\u662f\u5728*c\u7684\u57fa\u7840\u4e0a\u52a0\u4e0a\u4e8c\u6570\u7ec4\u4e00\u4e2a\u5143\u7d20\u7684\u6240\u5360\u7684\u957f\u5ea6\uff0c\u5373\u4ece &c[0][0]\u53d8\u5230\u4e86&c[0][1] \u4ece\u800c\uff08c + 1\uff09\u548c\uff08*c + 1\uff09\u7684\u503c\u5c31\u4e0d\u76f8\u7b49\u4e86", "\u00a0", "150\u3001\u5b9a\u4e49 int **a[3][4], \u5219\u53d8\u91cf\u5360\u6709\u7684\u5185\u5b58\u7a7a\u95f4\u4e3a\uff1a__32___ \u53c2\u8003\u7b54\u6848\uff1a", "int **p; /*16\u4f4d\u4e0bsizeof(p)=2, 32\u4f4d\u4e0bsizeof(p)=4*/", "\u603b\u5171 3*4*sizeof(p)"], "title": "C++\u7b14\u8bd5\u9898\u5e93\u4e4b\u7f16\u7a0b\u3001\u95ee\u7b54\u9898 100~150\u9053"},
{"contents": ["199\u00a0 MFC\u4e2dSendMessage\u548cPostMessage\u7684\u533a\u522b\uff1f", "\n\u7b54\uff1aPostMessage \u548cSendMessage\u7684\u533a\u522b\u4e3b\u8981\u5728\u4e8e\u662f\u5426\u7b49\u5f85\u5e94\u7528\u7a0b\u5e8f\u505a\u51fa\u6d88\u606f\u5904\u7406\u3002PostMessage\u53ea\u662f\u628a\u6d88\u606f\u653e\u5165\u961f\u5217\uff0c\u7136\u540e\u7ee7\u7eed\u6267\u884c\uff1b\u800cSendMessage\u5fc5\u987b\u7b49\u5f85\u5e94\u7528\u7a0b\u5e8f\u5904\u7406\u6d88\u606f\u540e\u624d\u8fd4\u56de\u7ee7\u7eed\u6267\u884c\u3002\u8fd9\u4e24\u4e2a\u51fd\u6570\u7684\u8fd4\u56de\u503c\u4e5f\u4e0d\u540c\uff0cPostMessage\u7684\u8fd4\u56de\u503c\u8868\u793aPostMessage\u51fd\u6570\u6267\u884c\u662f\u5426\u6b63\u786e\uff0c\u800cSendMessage\u7684\u8fd4\u56de\u503c\u8868\u793a\u5176\u4ed6\u7a0b\u5e8f\u5904\u7406\u6d88\u606f\u540e\u7684\u8fd4\u56de\u503c\u3002", "\n202\uff0e\u6539\u9519", "\n#include", "\n#include", "\nclass CBuffer", "\n{", "\nchar * m_pBuffer;", "\nint m_size;", "\npublic:", "\nCBuffer()", "\n{", "\nm_pBuffer=NULL;", "\n}", "\n~CBuffer()", "\n{", "\nFree();", "\n}", "\nvoid Allocte(int size) \uff083\uff09 {", "\nm_size=size;", "\nm_pBuffer= new char[size];", "\n}", "\nprivate:", "\nvoid Free()", "\n{", "\nif(m_pBuffer!=NULL)", "\n{", "\ndelete m_pBuffer;", "\nm_pBuffer=NULL;", "\n}", "\n}", "\npublic:", "\nvoid SaveString(const char* pText) const", "\n{", "\nstrcpy(m_pBuffer, pText);", "\n}", "\nchar* GetBuffer() const", "\n{", "\nreturn m_pBuffer;", "\n}", "\n};", "void main (int argc, char* argv[])", "\n{", "\nCBuffer buffer1;", "\nbuffer1.SaveString(\u201cMicrosoft\u201d);", "\nprintf(buffer1.GetBuffer());", "\n}", "\u7b54\uff1a\u6539\u6b63\u540e", "\n\u4e3b\u8981\u6539\u6b63SaveString\u51fd\u6570", "\n\u5c06", "\nvoid SaveString(const char* pText) const", "\n{", "\nstrcpy(m_pBuffer, pText);", "\n}", "\n\u6539\u4e3a", "\nvoid SaveString(const char* pText) \uff081\uff09", "\n{", "\nAllocte(strlen(pText)+1); \uff082\uff09", "\nstrcpy(m_pBuffer, pText);", "\n}", "\n\u539f\u56e0\uff1a", "\n\uff081\uff09 const\u6210\u5458\u51fd\u6570\u8868\u793a\u4e0d\u4f1a\u4fee\u6539\u6570\u636e\u6210\u5458\uff0c\u800cSaveString\u505a\u4e0d\u5230\uff0c\u53bb\u6389const\u58f0\u660e", "\n\uff082\uff09 m_pBuffer\u6307\u5411NULL\uff0c\u5fc5\u987b\u7528Allocte\u5206\u914d\u7a7a\u95f4\u624d\u80fd\u8d4b\u503c\u3002", "\n\uff083\uff09 \u53e6\u5916\u9700\u8981\u5c06Allocte\u6210\u5458\u51fd\u6570\u58f0\u660e\u4e3a\u79c1\u6709\u6210\u5458\u51fd\u6570\u66f4\u7b26\u5408\u5b9e\u9645", "203.\u4e0b\u6765\u7a0b\u5e8f\u60f3\u6253\u5370\u201cWelcome MSR Asia\u201d\uff0c\u6539\u6b63\u9519\u8bef", "\n#include", "\n#include", "\nchar * GetName (void)", "\n{", "\n//To return \u201cMSR Asia\u201d String", "\nchar name[]=\u201dMSR Asia\u201d;", "\nreturn name;", "\n}", "\nvoid main(int argc, char* argv[])", "\n{", "\nchar name[32];", "\n//Fill in zeros into name", "\nfor(int i=0;i<=32;i++)", "\n{", "\nname[i]=\u2019\\0\u2032;", "\n}", "\n//copy \u201cWelcome\u201d to name", "\nname=\u201dWelcome\u201d;", "\n//Append a blank char", "\nname[8]=\u201d \u201c;", "\n//Append string to name", "\nstrcat(name,GetName());", "\n//print out", "\nprintf(name);", "\n}", "\u7b54\uff1a\u6539\u6b63\u540e\u4e3a", "\n#include", "\n#include", "\nchar * GetName (void)", "\n{", "\n//To return \u201cMSR Asia\u201d String", "\n//char name[]=\u201dMSR Asia\u201d; \uff081\uff09", "\nchar *name=(char *)malloc(strlen(\u201cMSR Asia\u201d)+1);", "\nstrcpy(name,\u201dMSR Asia\u201d);", "\nreturn name;", "\n}", "\nvoid main(int argc, char* argv[])", "\n{", "\nchar name[32];", "\n//Fill in zeros into name", "\nfor(int i=0;i<=32;i++)", "\n{", "\nname[i]=\u2019\\0\u2032;", "\n}", "\n//copy \u201cWelcome\u201d to name", "\n//name=\u201dWelcome\u201d; \uff082\uff09", "\nstrcat(name,\u201dWelcome \u201c);", "\n//Append a blank char", "\n// name[8]=\u2019 \u2018; \uff083\uff09", "\n//Append string to name", "\nchar *p=GetName(); \uff084\uff09", "\nstrcat(name,p);", "\nfree (p);", "\n//print out", "\nprintf(name);", "\n}", "\n\u539f\u56e0\uff1a\uff081\uff09\u5728\u51fd\u6570\u5185\u90e8\u5b9a\u4e49\u7684\u53d8\u91cf\u5728\u51fd\u6570\u7ed3\u675f\u65f6\u5c31\u6e05\u7a7a\u4e86\uff0c\u5fc5\u987b\u52a8\u6001\u5206\u914d\u5185\u5b58", "\n\uff082\uff09\u5b57\u7b26\u4e32\u8d4b\u503c\u8bed\u53e5\u9519\u8bef\uff0c\u5e94\u8be5\u7528strcat", "\n\uff083\uff09\u8be5\u8bed\u53e5\u65e0\u6548\uff0c\u53ef\u53bb\u6389", "\n\uff084\uff09\u5b9a\u4e49\u4e00\u4e2a\u6307\u9488\u6307\u5411\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\uff0c\u7528\u5b8c\u540e\u9700\u7528free\u8bed\u53e5\u91ca\u653e", "\u00a0", "\u00a0", "204\uff0e\u5199\u51fa\u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c", "\n#include", "\nclass A", "\n{", "\npublic:", "\nvoid FuncA()", "\n{", "\nprintf(\u201cFuncA called\\n\u201d);", "\n}", "\nvirtual void FuncB()", "\n{", "\nprintf(\u201cFuncB called\\n\u201d);", "\n}", "\n};", "class B: public A", "\n{", "\npublic:", "\nvoid FuncA()", "\n{", "\nA::FuncA();", "\nprintf(\u201cFuncAB called\\n\u201d);", "\n}", "\nvirtual void FuncB()", "\n{", "\nprintf(\u201cFuncBB called\\n\u201d);", "\n}", "\n};", "void main(void)", "\n{", "\nB b;", "\nA *pa;", "\npa=&b;", "\nA *pa2=new A;", "\nb.FuncA(); \uff081\uff09", "\nb.FuncB(); \uff082\uff09", "\npa->FuncA(); \uff083\uff09", "\npa->FuncB(); \uff084\uff09", "\npa2->FuncA(); \uff085\uff09", "\npa2->FuncB();", "\ndelete pa2;", "\n}", "\n\u7b54\uff1a", "\n1\uff0eb.FuncA(); \u8f93\u51fa", "\nFuncA called", "\nFuncAB called", "\n2\uff0eb.FuncB();\u8f93\u51fa", "\nFuncBB called", "\n\u4e0a\u4e24\u8005\u597d\u7406\u89e3\uff0c\u76f4\u63a5\u8c03\u7528\u7c7bB\u7684\u76f8\u5e94\u6210\u5458\u51fd\u6570", "\n3\uff0epa->FuncA();\u8f93\u51fa", "\nFuncA called \u8c03\u7528\u7c7bA\u7684FuncA()", "\n4\uff0epa->FuncB();\u8f93\u51fa", "\nFuncBB called\u8c03\u7528\u7c7bB\u7684FuncB()\uff0c\u539f\u56e0\u662fC++\u7684\u52a8\u6001\u51b3\u8bae\u673a\u5236\uff0c\u5f53\u57fa\u7c7b\u51fd\u6570\u58f0\u660e\u4e3avirtual\u65f6\uff0c\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684\u57fa\u7c7b\u6307\u9488\u6765\u8c03\u7528\u8be5\u51fd\u6570\u4f1a\u9009\u62e9\u6d3e\u751f\u7c7b\u7684\u5b9e\u73b0\uff0c\u9664\u975e\u6d3e\u751f\u7c7b\u6ca1\u6709\u624d\u8c03\u7528\u57fa\u7c7b\u7684\u865a\u51fd\u6570\u3002\u8fd8\u6709\u4e00\u70b9\u6ce8\u610f\u7684\u662f\uff1a\u6307\u5411\u57fa\u7c7b\u7c7b\u578b\u7684\u6307\u9488\u53ef\u4ee5\u6307\u5411\u57fa\u7c7b\u5bf9\u8c61\u4e5f\u53ef\u4ee5\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff0c\u5982pa=&b;", "\n5. pa2->FuncA();", "\npa2->FuncB();\u8f93\u51fa", "\nFuncA called", "\nFuncB called", "\n\u8fd9\u4e5f\u597d\u7406\u89e3\uff0c\u76f4\u63a5\u8c03\u7528\u7c7bA\u7684\u76f8\u5e94\u6210\u5458\u51fd\u6570", "206\uff0eIn the main() function, after ModifyString(text) is called, what\u2019s the value of \u2018text\u2019?", "\n#include", "\n#include", "\nint FindSubString(char* pch)", "\n{", "\nint count=0;", "\nchar* p1=pch;", "\nwhile(*p1!=\u2019\\0\u2032)", "\n{", "\nif(*p1==p1[1]-1)", "\n{", "\np1++;", "\ncount++;", "\n}", "\nelse", "\n{", "\nbreak;", "\n}", "\n}", "\nint count2=count;", "\nwhile(*p1!=\u2019\\0\u2032)", "\n{", "\nif(*p1==p1[1]+1)", "\n{", "\np1++;", "\ncount2\u2013;", "\n}", "\nelse", "\n{", "\nbreak;", "\n}", "\n}", "\nif(count2==0)", "\nreturn count;", "\nreturn 0;", "\n}", "void ModifyString(char* pText)", "\n{", "\nchar* p1=pText;", "\nchar* p2=p1;", "\nwhile(*p1!=\u2019\\0\u2032)", "\n{", "\nint count=FindSubString(p1);", "\nif(count>0)", "\n{", "\n*p2++=*p1;", "\nsprintf(p2, \u201c%I\u201d, count);", "\nwhile(*p2!= \u2018\\0\u2032)", "\n{", "\np2++;", "\n}", "\np1+=count+count+1;", "\n}", "\nelse", "\n{", "\n*p2++=*p1++;", "\n}", "\n}", "\n}", "\nvoid main(void)", "\n{", "\nchar text[32]=\u201dXYBCDCBABABA\u201d;", "\nModifyString(text);", "\nprintf(text);", "\n}", "\n\u7b54\uff1a\u6211\u4e0d\u77e5\u9053\u8fd9\u4e2a\u7ed3\u6784\u6df7\u4e71\u7684\u7a0b\u5e8f\u5230\u5e95\u60f3\u8003\u5bdf\u4ec0\u4e48\uff0c\u53ea\u80fd\u5c06\u6700\u540e\u8fd0\u884c\u7ed3\u679c\u5199\u51fa\u6765\u662fXYBCDCBAIBAAP", "\u00a0", "207. Programming (Mandatory)", "\nLinked list", "\na. Implement a linked list for integers,which supports the insertafter (insert a node after a specified node) and removeafter (remove the node after a specified node) methods;", "\nb. Implement a method to sort the linked list to descending order.", "\n\u7b54\uff1a\u9898\u76ee\u7684\u610f\u601d\u662f\u5b9e\u73b0\u4e00\u4e2a\u6574\u578b\u94fe\u8868\uff0c\u652f\u6301\u63d2\u5165\uff0c\u5220\u9664\u64cd\u4f5c\uff08\u6709\u7279\u6b8a\u8981\u6c42\uff0c\u90fd\u662f\u5728\u6307\u5b9a\u8282\u70b9\u540e\u8fdb\u884c\u64cd\u4f5c\uff09\uff0c\u5e76\u5199\u4e00\u4e2a\u5bf9\u94fe\u8868\u6570\u636e\u8fdb\u884c\u964d\u5e8f\u6392\u5e8f\u7684\u65b9\u6cd5\u3002", "\n\u90a3\u6211\u4eec\u4e0d\u59a8\u4ee5\u4e00\u4e2a\u7ebf\u6027\u94fe\u8868\u8fdb\u884c\u7f16\u7a0b\u3002", "\n// \u5355\u94fe\u8868\u7ed3\u6784\u4f53\u4e3a", "\ntypedef struct LNode", "\n{", "\nint data;", "\nstruct LNode *next;", "\n}LNode, *pLinkList;", "// \u5355\u94fe\u8868\u7c7b", "\nclass LinkList", "\n{", "\nprivate:", "\npLinkList m_pList;", "\nint m_listLength;", "\npublic:", "\nLinkList();", "\n~LinkList();", "\nbool InsertAfter(int afternode, int data);//\u63d2\u5165", "\nbool RemoveAfter(int removenode);//\u5220\u9664", "\nvoid sort();//\u6392\u5e8f", "\n};", "\u5b9e\u73b0\u65b9\u6cd5", "\n//insert a node after a specified node", "\nbool LinkList::InsertAfter(int afternode, int data)", "\n{", "\nLNode *pTemp = m_pList;", "\nint curPos = -1;", "\nif (afternode > m_listLength ) // \u63d2\u5165\u70b9\u8d85\u8fc7\u603b\u957f\u5ea6", "\n{", "\nreturn false;", "\n}", "\nwhile (pTemp != NULL) // \u627e\u5230\u6307\u5b9a\u7684\u8282\u70b9", "\n{", "\ncurPos++;", "\nif (curPos == afternode)", "\nbreak;", "\npTemp = pTemp->next;", "\n}", "\nif (curPos != afternode) // \u8282\u70b9\u672a\u5bfb\u5230\uff0c\u9519\u8bef\u9000\u51fa", "\n{", "\nreturn false;", "\n}", "\nLNode *newNode = new LNode; // \u5c06\u65b0\u8282\u70b9\u63d2\u5165\u6307\u5b9a\u8282\u70b9\u540e", "\nnewNode->data = data;", "\nnewNode->next = pTemp->next;", "\npTemp->next = newNode;", "\nm_listLength++;", "\nreturn true;", "\n}", "//remove the node after a specified node", "\nbool LinkList::RemoveAfter(int removenode)", "\n{", "\nLNode *pTemp = m_pList;", "\nint curPos=-1;", "\nif (removenode > m_listLength) // \u5220\u9664\u70b9\u8d85\u8fc7\u603b\u957f\u5ea6", "\n{", "\nreturn false;", "\n}", "// \u627e\u5230\u6307\u5b9a\u7684\u8282\u70b9\u540e\u4e00\u4e2a\u8282\u70b9\uff0c\u56e0\u4e3a\u5220\u9664\u7684\u662f\u540e\u4e00\u4e2a\u8282\u70b9", "\nwhile (pTemp != NULL)", "\n{", "\ncurPos++;", "\nif (curPos == removenode+1)", "\nbreak;", "\npTemp = pTemp->next;", "\n}", "\nif (curPos != removenode) // \u8282\u70b9\u672a\u5bfb\u5230\uff0c\u9519\u8bef\u9000\u51fa", "\n{", "\nreturn false;", "\n}", "\nLNode *pDel = NULL; // \u5220\u9664\u8282\u70b9", "\npDel = pTemp->next;", "\npTemp->next = pDel->next;", "\ndelete pDel;", "\nm_listLength\u2013;", "\nreturn true;", "\n}", "//sort the linked list to descending order.", "\nvoid LinkList::sort()", "\n{", "\nif (m_listLength<=1)", "\n{", "\nreturn;", "\n}", "\nLNode *pTemp = m_pList;", "\nint temp;", "\n// \u9009\u62e9\u6cd5\u6392\u5e8f", "\nfor(int i=0;i<M_LISTLENGTH-1;I++)", "\nfor(int j=i+1;j<M_LISTLENGTH;J++)", "\nif (pTemp[i].data<PTEMP[J].DATA)", "\n{", "\ntemp=pTemp[i].data;", "\npTemp[i].data=pTemp[j].data;", "\npTemp[j].data=temp;", "\n}", "\n}", "\n\u524d\u4e24\u4e2a\u51fd\u6570\u5b9e\u73b0\u4e86\u8981\u6c42a\uff0c\u540e\u4e00\u4e2a\u51fd\u6570sort()\u5b9e\u73b0\u4e86\u8981\u6c42b", "\u00a0", "208. Debugging (Mandatory)", "\na. For each of the following recursive methods, enter Y in the answer box if the method terminaters (assume i=5), Otherwise enter N.", "\n\uff08\u9898\u76ee\u610f\u601d\uff1a\u5224\u65ad\u4e0b\u9762\u7684\u9012\u5f52\u51fd\u6570\u662f\u5426\u53ef\u4ee5\u7ed3\u675f\uff09", "\nstatic int f(int i){", "\nreturn f(i-1)*f(i-1);", "\n}", "\nAnsewr: N,\u660e\u663e\u6ca1\u6709\u8fd4\u56de\u6761\u4ef6\u8bed\u53e5\uff0c\u65e0\u9650\u9012\u5f52\u4e86", "static int f(int i){", "\nif(i==0){return 1;}", "\nelse {return f(i-1)*f(i-1);}", "\n}", "\nAnsewr:Y\uff0c\u5f53i\uff1d0\u65f6\u53ef\u7ed3\u675f\u9012\u5f52", "static int f(int i){", "\nif(i==0){return 1;}", "\nelse {return f(i-1)*f(i-2);}", "\n}", "\nAnsewr:N\uff0c\u56e0\u4e3ai=1\u65f6\uff0cf(i-2)=f(-1),\u8fdb\u5165\u4e00\u4e2a\u65e0\u9650\u9012\u5f52\u4e2d", "\u00a0", "\u00a0", "209\uff0e\u7f16\u7a0b", "\n\u5c06\u6574\u6570\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\uff1avoid itoa(int,char);", "\n\u4f8b\u5982itoa(-123,s[])\u5219s=\u201c-123\u201d;", "\n\u7b54\uff1a", "\nchar* itoa(int value, char* string)", "\n{", "\nchar tmp[33];", "\nchar* tp = tmp;", "\nint i;", "\nunsigned v;", "\nchar* sp;", "\n// \u5c06\u503c\u8f6c\u4e3a\u6b63\u503c", "\nif (value < 0)", "\nv = -value;", "\nelse", "\nv = (unsigned)value;", "\n// \u5c06\u6570\u8f6c\u6362\u4e3a\u5b57\u7b26\u653e\u5728\u6570\u7ec4tmp\u4e2d", "\nwhile (v)", "\n{", "\ni = v % 10;", "\nv = v / 10;", "\n*tp++ = i+\u20190\u2032;", "\n}", "\n// \u5c06tmp\u91cc\u7684\u5b57\u7b26\u586b\u5165string\u6307\u9488\u91cc\uff0c\u5e76\u52a0\u4e0a\u8d1f\u53f7\uff08\u5982\u679c\u6709\uff09", "\nsp = string;", "\nif (value < 0)", "\n*sp++ = \u2018-\u2019;", "\nwhile (tp > tmp)", "\n*sp++ = *\u2013tp;", "\n*sp = 0;", "\nreturn string;", "\n}", "\u00a0", "210.\u5b8c\u6210\u4e0b\u5217\u7a0b\u5e8f", "\n*", "\n*.*.", "\n*..*..*..", "\n*\u2026*\u2026*\u2026*\u2026", "\n*\u2026.*\u2026.*\u2026.*\u2026.*\u2026.", "\n*\u2026..*\u2026..*\u2026..*\u2026..*\u2026..*\u2026..", "\n*\u2026\u2026*\u2026\u2026*\u2026\u2026*\u2026\u2026*\u2026\u2026*\u2026\u2026*\u2026\u2026", "\n*\u2026\u2026.*\u2026\u2026.*\u2026\u2026.*\u2026\u2026.*\u2026\u2026.*\u2026\u2026.*\u2026\u2026.*\u2026\u2026.", "\n#include", "\n#define N 8", "\nint main()", "\n{", "\nint i;", "\nint j;", "\nint k;", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014", "\n\u2502 \u2502", "\n\u2502 \u2502", "\n\u2502 \u2502", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014", "\nreturn 0;", "\n}", "\n\u7b54\uff1a#define N 8", "\nint main()", "\n{", "\nint i;", "\nint j;", "\nint k;", "for(i=0;i<N;I++)", "\n{", "\nfor(j=0;j<I+1;J++)", "\n{", "\nprintf(\u201c*\u201d);", "\nfor(k=0;k<I;K++)", "\nprintf(\u201c.\u201d);", "\n}", "\nprintf(\u201c\\n\u201d);", "\n}", "\nreturn 0;", "\n}", "211\uff0e\u4e0b\u5217\u7a0b\u5e8f\u8fd0\u884c\u65f6\u4f1a\u5d29\u6e83\uff0c\u8bf7\u627e\u51fa\u9519\u8bef\u5e76\u6539\u6b63\uff0c\u5e76\u4e14\u8bf4\u660e\u539f\u56e0\u3002", "\n#include \u201cstdio.h\u201d", "\n#include \u201cmalloc.h\u201d", "\ntypedef struct TNode", "\n{", "\nTNode* left;", "\nTNode* right;", "\nint value;", "\n}TNode;", "TNode* root=NULL;", "\nvoid append(int N);", "int main()", "\n{", "\nappend(63);", "\nappend(45);", "\nappend(32);", "\nappend(77);", "\nappend(96);", "\nappend(21);", "\nappend(17); // Again, \u6570\u5b57\u4efb\u610f\u7ed9\u51fa", "\nreturn 0;", "\n}", "void append(int N)", "\n{", "\nTNode* NewNode=(TNode *)malloc(sizeof(TNode));", "\nNewNode->value=N;", "\nNewNode->left=NULL; //\u65b0\u589e", "\nNewNode->right=NULL; //\u65b0\u589e", "\nif(root==NULL)", "\n{", "\nroot=NewNode;", "\nreturn;", "\n}", "\nelse", "\n{", "\nTNode* temp;", "\ntemp=root;", "\nwhile((N>=temp->value && temp->left!=NULL)||(Nvalue && temp-", ">right!=NULL))", "\n{", "\nwhile(N>=temp->value && temp->left!=NULL)", "\ntemp=temp->left;", "\nwhile(Nvalue && temp->right!=NULL)", "\ntemp=temp->right;", "\n}", "\nif(N>=temp->value)", "\ntemp->left=NewNode;", "\nelse", "\ntemp->right=NewNode;", "\nreturn;", "\n}", "\n}", "\u7b54\uff1a\u56e0\u4e3a\u65b0\u8282\u70b9\u7684\u5de6\u53f3\u6307\u9488\u6ca1\u6709\u8d4bNULL\u503c\uff0c\u81f3\u4f7f\u4e0b\u9762\u7684while\u5faa\u73af\u4e0d\u80fd\u6b63\u786e\u7ed3\u675f\u800c\u5bfc\u81f4\u5185\u5b58\u8d8a\u754c\uff0c\u6700\u540e\u5d29\u6e83\uff08\u6ce8\u610f\u7ed3\u675f\u6761\u4ef6\u662ftemp->left!=NULL\u6216temp->right!=NULL\uff09\u3002\u6539\u6b63\u5c31\u662f\u589e\u52a0\u4e24\u6761\u8d4b\u503c\u8bed\u53e5\uff0c\u5982\u4e0a\u6587\u7ea2\u8272\u90e8\u5206\u5b57\u4f53\u5c31\u662f\u65b0\u589e\u7684\u4e24\u6761\u8bed\u53e5\u3002", "\u00a0", "\u00a0", "\u00a0", "212.\u6253\u5370\u5982\u4e0b\u56fe\u6848\uff0c\u517119\u884c\uff0c\u53ea\u80fd\u6709\u4e00\u4e2afor\u5faa\u73af\uff08\u9898\u76ee\u5df2\u7ecf\u63d0\u4f9b\uff09", "\n\ue466\ue466*\ue466\ue466 \ue466\ue466", "\n\ue466\ue466***\ue466\ue466 \ue466\ue466", "\n\ue466\ue466*****\ue466\ue466 \ue466\ue466", "\n\ue466\ue466*******\ue466\ue466 \ue466\ue466", "\n\ue466\ue466*********\ue466\ue466 \ue466\ue466", "\n\ue466\ue466***********", "\n\ue466\ue466*************\ue466\ue466 \ue466\ue466", "\n\ue466\ue466***************\ue466\ue466 \ue466\ue466", "\n\ue466 *****************\ue466\ue466 \ue466\ue466", "\n\ue466\ue466*******************\ue466\ue466\ue466\ue466", "\n\ue466 *****************\ue466\ue466 \ue466\ue466", "\n\ue466\ue466***************\ue466\ue466 \ue466\ue466", "\n\ue466\ue466*************\ue466\ue466 \ue466\ue466", "\n\ue466\ue466***********\ue466\ue466 \ue466\ue466", "\n\ue466\ue466*********\ue466\ue466 \ue466\ue466", "\n\ue466\ue466*******\ue466\ue466 \ue466\ue466", "\n\ue466\ue466*****\ue466\ue466 \ue466\ue466", "\n\ue466\ue466***\ue466\ue466 \ue466\ue466", "\n\ue466\ue466*\ue466\ue466 \ue466\ue466", "\nfor(i=0;i<19;i++)", "\n{", "}", "\n\u7b54\uff1a", "\n#include \u201cstdio.h\u201d", "\nvoid main()", "\n{", "\nfor(int i=0;i<19;i++)", "\n{", "\nint j=0;", "\nwhile (j<19)", "\n{", "\nif (i<=9)", "\n{", "\nif (j<=9)", "\n{", "\nif (i+j>=9)", "\nprintf(\u201c*\u201d);", "\nelse", "\nprintf(\u201d \u201c);", "\n}", "\nelse", "\nif (j-i<=9)", "\nprintf(\u201c*\u201d);", "\nelse", "\nprintf(\u201d \u201c);", "\n}", "\nelse", "\n{", "\nif (j<=9)", "\n{", "\nif (i-j<=9)", "\nprintf(\u201c*\u201d);", "\nelse", "\nprintf(\u201d \u201c);", "\n}", "\nelse", "\nif (j+i<=27)", "\nprintf(\u201c*\u201d);", "\nelse", "\nprintf(\u201d \u201c);", "\n}", "\nj++;", "\n}", "\nprintf(\u201c\\n\u201d);", "\n}", "\n}", "213.stack data \uff08\u6808\uff09\u5b58\u5728\u4e8e", "\nA.rom, B .flash C .eeprom D.ram E .none of the above", "\n\u7b54\uff1aD.ram\u3002\u8fd9\u9898\u7a0d\u5fae\u6d89\u53ca\u5230\u4e00\u70b9\u786c\u4ef6\u77e5\u8bc6\uff0cROM\u7684\u5168\u79f0\u662fRead Only Memory\uff0c\u5373\u53ea\u8bfb\u5b58\u50a8\u5668\uff0cflash \uff0ceeprom\u90fd\u662fROM\u5bb6\u65cf\u7684\u4e00\u5458\uff0cRAM\u662fRandom Access Memory\u7684\u7b80\u79f0\uff0c\u610f\u4e3a\u968f\u673a\u5b58\u53d6\u5b58\u50a8\u5668\uff0c\u4e5f\u5c31\u662f\u5185\u5b58\u4e86\u3002\u4e0d\u7ba1\u662f\u5806\u8fd8\u662f\u6808\u90fd\u662f\u653e\u5728\u5185\u5b58\u91cc\u7684\u3002", "214.", "\nint i;", "\nint x=0\u00d712345678;", "\nunsigned char *p=(unsigned char *)&x;", "\nfor(i=0;i<SIZEOF(X);I++)", "\nprintf(\u201c%2x\u201d,*(p+i));", "\n\u572880x86pc\u673a\u5668\u4e0a\u8fd0\u884c\u7ed3\u679c\uff1f", "\n\u7b54\uff1ax\u5728PC\u673a\u4e0a\u7684\u5185\u5b58\u5b58\u653e\u987a\u5e8f\u4e3a78 56 34 12\uff0c\u9ad8\u5b57\u8282\u5728\u524d\uff0c\u4f4e\u5b57\u8282\u5728\u540e\uff0c\u56e0\u6b64\u8f93\u51fa78563412", "\nSun Sparc Unix\u4e0a\u8fd0\u884c\u7ed3\u679c\uff1f", "\u00a0", "215.", "\nchar a[2][2][3]={{{1,6,3},{5,4,15}},{{3,5,33},{23,12,7}} };", "\nfor(int i=0;i<12;i++)", "\nprintf(\u201c%d \u201c,_______);", "\n\u5728\u7a7a\u683c\u5904\u586b\u4e0a\u5408\u9002\u7684\u8bed\u53e5\uff0c\u987a\u5e8f\u6253\u5370\u51faa\u4e2d\u7684\u6570\u5b57", "\n\u7b54\uff1a*(*(*(a+i/6)+(i/3%2))+i%3)", "\n\u8fd9\u9898\u4e3b\u8981\u662f\u8981\u5c06\u8f93\u51fa\u7684\u5e8f\u53f7\u4f9d\u6b21\u5199\u51fa\u4e00\u4e9b\uff0c\u5982000,001,002,010,011,012,100,101\u2026\u7136\u540e\u627e\u5e8f\u53f7\u53d8\u5316\u89c4\u5f8b", "216.\u8bf7\u7528\u6807\u51c6C\u8bed\u8a00\u5b9e\u73b0\u4e00\u4e2a\u53cc\u5411\u5faa\u73af\u94fe\u8868\u7684\u67e5\u627e\u4e0e\u5220\u9664\u3002", "\ntypedef struct doublecyclelink{", "\nint key;", "\nstruct doublecyclelink *prev;", "\nstruct doublecyclelink *next;", "\n}DoubleCycleLinkT;", "\nDoubleCycleLinkT *findKey(DoubleCycleLinkT *link,int key);", "\n\u904d\u5386\u6574\u4e2a\u53cc\u5411\u5faa\u73af\u94fe\u8868\uff0c\u5c06\u7b2c\u4e00\u4e2a\u4e0ekey\u503c\u76f8\u540c\u7684\u7ed3\u70b9\u79fb\u51fa\u94fe\u8868\uff0c\u5e76\u8fd4\u56de\u3002", "\n\u82e5\u6ca1\u6709\u627e\u5230\u5219\u8fd4\u56deNULL\u3002", "\u7b54\uff1a", "\n\u51fd\u6570\u4e3a", "\nDoubleCycleLinkT *findKey(DoubleCycleLinkT *link,int key)", "\n{", "\nDoubleCycleLinkT *p;", "\np=link->next;", "\nwhile (p->next!=link) // \u94fe\u8868\u7ed3\u5c3e", "\n{", "\nif (p->key==key) // \u67e5\u627e\u5230key\u503c\u76f8\u540c,\u5220\u9664\u8be5\u8282\u70b9,\u5e76\u8fd4\u56de", "\n{", "\np->prev->next=p->next;", "\np->next->prev=p->prev;", "\nfree(p);", "\nreturn link;", "\n}", "\nelse", "\np=p->next; // \u5426\u5219\u67e5\u627e\u4e0b\u4e00\u8282\u70b9", "\n}", "\nif (p->next == link) return NULL; //\u6ca1\u627e\u5230\uff0c\u8fd4\u56deNULL", "}", "217\u3001\u8bf7\u7528\u6807\u51c6C\u8bed\u8a00\u5b9e\u73b0\u4e0b\u5217\u6807\u51c6\u5e93\u51fd\u6570\uff0c\u8bbe\u8ba1\u4e2d\u4e0d\u5f97\u4f7f\u7528\u5176\u4ed6\u5e93\u51fd\u6570\u3002", "\nchar *strstr(char *str1,char *str2);", "\n\u5728\u5b57\u7b26\u4e32str1\u4e2d\uff0c\u5bfb\u627e\u5b57\u4e32str2\uff0c\u82e5\u627e\u5230\u8fd4\u56de\u627e\u5230\u7684\u4f4d\u7f6e\uff0c\u5426\u5219\u8fd4\u56deNULL\u3002", "\n\u7b54\uff1a", "\n\u51fd\u6570\u4e3a", "\nchar * strstr ( const char * str1, const char * str2 )", "\n{", "\nchar *cp = (char *) str1;", "\nchar *s1, *s2;", "\nif ( !*str2 )", "\nreturn((char *)str1);", "\nwhile (*cp)", "\n{", "\ns1 = cp;", "\ns2 = (char *) str2;", "\nwhile ( *s1 && *s2 && !(*s1-*s2) )", "\ns1++, s2++;", "\nif (!*s2)", "\nreturn(cp);", "\ncp++;", "\n}", "\nreturn(NULL);", "\n}", "\u00a0", "218.\u5b9e\u73b0\u53cc\u5411\u94fe\u8868\u5220\u9664\u4e00\u4e2a\u8282\u70b9P\uff0c\u5728\u8282\u70b9P\u540e\u63d2\u5165\u4e00\u4e2a\u8282\u70b9\uff0c\u5199\u51fa\u8fd9\u4e24\u4e2a\u51fd\u6570;", "\n\u7b54\uff1a", "\n\u5047\u8bbe\u7ebf\u6027\u8868\u7684\u53cc\u5411\u94fe\u8868\u5b58\u50a8\u7ed3\u6784", "\ntypedef struct DulNode{", "\nstruct DulNode *prior; //\u524d\u9a71\u6307\u9488", "\nElemType data; //\u6570\u636e", "\nstruct DulNode *next; //\u540e\u7ee7\u6307\u9488", "\n}DulNode,*DuLinkList;", "\n\u5220\u9664\u64cd\u4f5c", "\nStatus ListDelete_DuL(DuLinkList &L,int i,ElemType &e)", "\n{", "\nif(!(p=GetElemP_DuL(L,i)))", "\nreturn ERROR;", "\ne=p->data;", "\np->prior->next=p->next;", "\np->next->prior=p->pror;", "\nfree(p);", "\nreturn OK;", "\n}", "\n\u63d2\u5165\u64cd\u4f5c", "\nStatus ListInsert_DuL(DuLinkList &L,int i,ElemType &e)", "\n{", "\nif(!(p=GetElemP_DuL(L,i)))", "\nreturn ERROR;", "\nif(!(s=(DuLinkList)malloc(sizeof(DuLNode))))", "\nreturn ERROR;", "s->data=e;", "\ns->prior=p->prior;", "\np->prior->next=s;", "\ns->next=p;", "\np->prior=s;", "\nreturn OK;", "\n}", "219.\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u5c06\u5176\u4e2d\u7684\\t\u90fd\u8f6c\u6362\u62104\u4e2a\u7a7a\u683c\u3002", "\n\u7b54\uff1a", "\n\u8be5\u51fd\u6570\u547d\u540d\u4e3aconvert,\u53c2\u6570\u7684\u610f\u4e49\u4e3a\uff1a", "\n*strDest\u76ee\u7684\u5b57\u7b26\u4e32,*strSrc\u6e90\u5b57\u7b26\u4e32,length\u6e90\u5b57\u7b26\u4e32\u7684\u957f\u5ea6", "\n\u51fd\u6570\u5b9e\u73b0\u4e3a\uff1a", "\nchar* convert(char *strDest, const char *strSrc,int length)", "\n{", "\nchar * cp = strDest;", "\nint i=0;", "\nwhile(*strSrc && i", "\n{", "\nif (*strSrc==\u2019\\t\u2019) //\u5c06\\t\u8f6c\u6362\u62104\u4e2a\u7a7a\u683c", "\n{", "\nfor(int j=0;j<4;j++)", "\n*cp++=\u2019 \u2018;", "\n}", "\nelse //\u5426\u5219\u76f4\u63a5\u62f7\u8d1d", "\n*cp++=*strSrc;", "\nstrSrc++;", "\ni++;", "\n}", "\nreturn strDest;", "\n}", "230.Windows\u7a0b\u5e8f\u7684\u5165\u53e3\u662f\u54ea\u91cc\uff1f\u5199\u51faWindows\u6d88\u606f\u673a\u5236\u7684\u6d41\u7a0b\u3002", "\n\u7b54\uff1a", "\nWindows\u7a0b\u5e8f\u7684\u5165\u53e3\u662fWinMain\u51fd\u6570", "\n\u6d88\u606f\u673a\u5236\uff1a\u7cfb\u7edf\u5c06\u4f1a\u7ef4\u62a4\u4e00\u4e2a\u6216\u591a\u4e2a\u6d88\u606f\u961f\u5217\uff0c\u6240\u6709\u4ea7\u751f\u7684\u6d88\u606f\u90fd\u4f1a\u88ab\u653e\u5165\u6216\u662f\u63d2\u5165\u961f\u5217\u4e2d\u3002\u7cfb\u7edf\u4f1a\u5728\u961f\u5217\u4e2d\u53d6\u51fa\u6bcf\u4e00\u6761\u6d88\u606f\uff0c\u6839\u636e\u6d88\u606f\u7684\u63a5\u6536\u53e5\u67c4\u800c\u5c06\u8be5\u6d88\u606f\u53d1\u9001\u7ed9\u62e5\u6709\u8be5\u7a97\u53e3\u7684\u7a0b\u5e8f\u7684\u6d88\u606f\u5faa\u73af\u3002\u6bcf\u4e00\u4e2a\u8fd0\u884c\u7684\u7a0b\u5e8f\u90fd\u6709\u81ea\u5df1\u7684\u6d88\u606f\u5faa\u73af\uff0c\u5728\u5faa\u73af\u4e2d\u5f97\u5230\u5c5e\u4e8e\u81ea\u5df1\u7684\u6d88\u606f\u5e76\u6839\u636e\u63a5\u6536\u7a97\u53e3\u7684\u53e5\u67c4\u8c03\u7528\u76f8\u5e94\u7684\u7a97\u53e3\u8fc7\u7a0b\u3002\u800c\u5728\u6ca1\u6709\u6d88\u606f\u65f6\u6d88\u606f\u5faa\u73af\u5c31\u5c06\u63a7\u5236\u6743\u4ea4\u7ed9\u7cfb\u7edf\u3002", "231.\u5982\u4f55\u5b9a\u4e49\u548c\u5b9e\u73b0\u4e00\u4e2a\u7c7b\u7684\u6210\u5458\u51fd\u6570\u4e3a\u56de\u8c03\u51fd\u6570\uff1f", "\n\u7b54\uff1a", "\n\u6240\u8c13\u7684\u56de\u8c03\u51fd\u6570\uff0c\u5c31\u662f\u9884\u5148\u5728\u7cfb\u7edf\u7684\u5bf9\u51fd\u6570\u8fdb\u884c\u6ce8\u518c\uff0c\u8ba9\u7cfb\u7edf\u77e5\u9053\u8fd9\u4e2a\u51fd\u6570\u7684\u5b58\u5728\uff0c\u4ee5\u540e\uff0c\u5f53\u67d0\u4e2a\u4e8b\u4ef6\u53d1\u751f\u65f6\uff0c\u518d\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u5bf9\u4e8b\u4ef6\u8fdb\u884c\u54cd\u5e94\u3002", "\n\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u7684\u6210\u5458\u51fd\u6570\u65f6\u5728\u8be5\u51fd\u6570\u524d\u52a0CALLBACK\u5373\u5c06\u5176\u5b9a\u4e49\u4e3a\u56de\u8c03\u51fd\u6570\uff0c\u51fd\u6570\u7684\u5b9e\u73b0\u548c\u666e\u901a\u6210\u5458\u51fd\u6570\u6ca1\u6709\u533a\u522b", "\u00a0", "232.C++\u91cc\u9762\u662f\u4e0d\u662f\u6240\u6709\u7684\u52a8\u4f5c\u90fd\u662fmain()\u5f15\u8d77\u7684\uff1f\u5982\u679c\u4e0d\u662f\uff0c\u8bf7\u4e3e\u4f8b\u3002", "\n\u7b54\uff1a\u4e0d\u662f\uff0c\u6bd4\u5982\u4e2d\u65ad\u5f15\u8d77\u7684\u4e2d\u65ad\u5904\u7406\u4e0d\u662f\u76f4\u63a5\u7531main()\u5f15\u8d77\u7684\uff0c\u800c\u662f\u7531\u5916\u90e8\u4e8b\u4ef6\u5f15\u8d77\u7684\u3002", "233.C++\u91cc\u9762\u5982\u4f55\u58f0\u660econst void f(void)\u51fd\u6570\u4e3aC\u7a0b\u5e8f\u4e2d\u7684\u5e93\u51fd\u6570", "\n\u7b54\uff1a\u5728\u8be5\u51fd\u6570\u524d\u6dfb\u52a0extern \u201cC\u201d\u58f0\u660e", "234. \u5185\u8054\u51fd\u6570\u5728\u7f16\u8bd1\u65f6\u662f\u5426\u505a\u53c2\u6570\u7c7b\u578b\u68c0\u67e5", "\n\u7b54\uff1a\u505a\u7c7b\u578b\u68c0\u67e5\uff0c\u56e0\u4e3a\u5185\u8054\u51fd\u6570\u5c31\u662f\u5728\u7a0b\u5e8f\u7f16\u8bd1\u65f6\uff0c\u7f16\u8bd1\u5668\u5c06\u7a0b\u5e8f\u4e2d\u51fa\u73b0\u7684\u5185\u8054\u51fd\u6570\u7684\u8c03\u7528\u8868\u8fbe\u5f0f\u7528\u5185\u8054\u51fd\u6570\u7684\u51fd\u6570\u4f53\u6765\u4ee3\u66ff\u3002", "\n235\uff0e\u8bf7\u4f60\u8be6\u7ec6\u5730\u89e3\u91ca\u4e00\u4e0bIP\u534f\u8bae\u7684\u5b9a\u4e49\uff0c\u5728\u54ea\u4e2a\u5c42\u4e0a\u9762\uff1f\u4e3b\u8981\u6709\u4ec0\u4e48\u4f5c\u7528\uff1fTCP\u4e0eUDP\u5462\uff1f", "\n\u7b54\uff1aIP\u662fInternet Protocol\u7684\u7b80\u79f0\uff0c\u662f\u7f51\u7edc\u5c42\u7684\u4e3b\u8981\u534f\u8bae\uff0c\u4f5c\u7528\u662f\u63d0\u4f9b\u4e0d\u53ef\u9760\u3001\u65e0\u8fde\u63a5\u7684\u6570\u636e\u62a5\u4f20\u9001\u3002TCP\u662fTransmit Control Protocol\uff08\u4f20\u8f93\u63a7\u5236\u534f\u8bae\uff09\u7684\u7f29\u5199\uff0c\u5728\u8fd0\u8f93\u5c42\uff0cTCP\u63d0\u4f9b\u4e00\u79cd\u9762\u5411\u8fde\u63a5\u7684\uff0c\u53ef\u9760\u7684\u5b57\u8282\u6d41\u670d\u52a1\uff1bUDP\u662fUser Datagram Protocol\uff08\u7528\u6237\u6570\u636e\u62a5\u534f\u8bae\uff09\u7684\u7f29\u5199\uff0c\u5728\u8fd0\u8f93\u5c42\uff0cUDP\u63d0\u4f9b\u4e0d\u53ef\u9760\u7684\u4f20\u8f93\u6570\u636e\u670d\u52a1", "236\uff0e\u8bf7\u95ee\u4ea4\u6362\u673a\u548c\u8def\u7531\u5668\u5404\u81ea\u7684\u5b9e\u73b0\u539f\u7406\u662f\u4ec0\u4e48\uff1f\u5206\u522b\u5728\u54ea\u4e2a\u5c42\u6b21\u4e0a\u9762\u5b9e\u73b0\u7684\uff1f", "\n\u7b54\uff1a\u4ea4\u6362\u673a\u5c5e\u4e8e\uff2f\uff33\uff29\u7b2c\u4e8c\u5c42\u5373\u6570\u636e\u94fe\u8def\u5c42\u8bbe\u5907\u3002\u5b83\u6839\u636e\uff2d\uff21\uff23\u5730\u5740\u5bfb\u5740\uff0c\u901a\u8fc7\u7ad9\u8868\u9009\u62e9\u8def\u7531\uff0c\u7ad9\u8868\u7684\u5efa\u7acb\u548c\u7ef4\u62a4\u7531\u4ea4\u6362\u673a\u81ea\u52a8\u8fdb\u884c\u3002\u8def\u7531\u5668\u5c5e\u4e8e\uff2f\uff33\uff29\u7b2c\u4e09\u5c42\u5373\u7f51\u7edc\u5c42\u8bbe\u5907\uff0c\u5b83\u6839\u636e\uff29\uff30\u5730\u5740\u8fdb\u884c\u5bfb\u5740\uff0c\u901a\u8fc7\u8def\u7531\u8868\u8def\u7531\u534f\u8bae\u4ea7\u751f\u3002\u4ea4\u6362\u673a\u6700\u5927\u7684\u597d\u5904\u662f\u5feb\u901f\uff0c\u8def\u7531\u5668\u6700\u5927\u7684\u597d\u5904\u662f\u63a7\u5236\u80fd\u529b\u5f3a\u3002", "237\uff0e\u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1f\u662f\u600e\u4e48\u5b9e\u73b0\u7684\uff1f\u64cd\u4f5c\u7cfb\u7edf\u548c\u7f16\u8bd1\u5668\u662f\u600e\u4e48\u77e5\u9053\u7684\uff1f", "\n\u7b54\uff1a\u4e00\u4e9b\u53d8\u91cf\u5728\u6574\u4e2a\u7a0b\u5e8f\u4e2d\u90fd\u662f\u53ef\u89c1\u7684\uff0c\u5b83\u4eec\u79f0\u4e3a\u5168\u5c40\u53d8\u91cf\u3002\u4e00\u4e9b\u53d8\u91cf\u53ea\u80fd\u5728\u4e00\u4e2a\u51fd\u6570\u4e2d\u53ef\u77e5\uff0c\u79f0\u4e3a\u5c40\u90e8\u53d8\u91cf\u3002\u8fd9\u5c31\u662f\u4ed6\u4eec\u7684\u533a\u522b\u3002", "\n\u5728\u4efb\u4f55\u51fd\u6570\u5916\u9762\u5b9a\u4e49\u7684\u53d8\u91cf\u5c31\u662f\u5168\u5c40\u53d8\u91cf\uff0c\u5728\u51fd\u6570\u5185\u90e8\u5b9a\u4e49\u7684\u53d8\u91cf\u662f\u5c40\u90e8\u53d8\u91cf\uff0c\u8fd9\u662f\u5b83\u4eec\u5728\u7a0b\u5e8f\u4e2d\u7684\u5b9e\u73b0\u8fc7\u7a0b\u3002", "\n\u64cd\u4f5c\u7cfb\u7edf\u548c\u7f16\u8bd1\u5668\u662f\u6839\u636e\u7a0b\u5e8f\u8fd0\u884c\u7684\u5185\u5b58\u533a\u57df\u77e5\u9053\u4ed6\u4eec\u7684\uff0c\u7a0b\u5e8f\u7684\u5168\u5c40\u6570\u636e\u653e\u5728\u6240\u5206\u914d\u5185\u5b58\u7684\u5168\u5c40\u6570\u636e\u533a\uff0c\u7a0b\u5e8f\u7684\u5c40\u90e8\u6570\u636e\u653e\u5728\u6808\u533a\u3002", "238. \u6709\u4e24\u4e2a\u6587\u4ef6a.txt,b.txt.a.txt\u4e2d\u5b58\u50a8\u7684\u662faaaaaa\uff0cb.txt\u4e2d\u5b58\u50a8\u7684\u662fbbb\u3002\u5c06\u4e24\u4e2a\u6587\u4ef6\u5408\u5e76\u6210c.txt\u5982\u679c\u662fa\u5e76b\u7684\u8bdd\u5b58\u50a8\u4e3aabababaaa.\u8981\u662fb\u5e76a\u00a0\u00a0 \u7684\u8bdd\u5c31\u662fbababaaaa.\u7528c\u8bed\u8a00\u7f16\u7a0b\u5b9e\u73b0\u3002", "#include\u00a0\u00a0 \u201cstdio.h\u201d", "void\u00a0\u00a0 fmerge(FILE\u00a0\u00a0 *fa,FILE\u00a0\u00a0 *fb,FILE\u00a0\u00a0 *fc)", "{", "char\u00a0\u00a0 cha,chb;", "cha=fgetc(fa);", "chb=fgetc(fb);", "while\u00a0\u00a0 ((cha!=EOF)&&(chb!=EOF))", "{", "fputc(cha,fc);", "fputc(chb,fc);", "cha=fgetc(fa);", "chb=fgetc(fb);", "}", "while\u00a0\u00a0 (cha!=EOF)", "{", "fputc(cha,fc);", "cha=fgetc(fa);", "}", "while\u00a0\u00a0 (chb!=EOF)", "{", "fputc(chb,fc);", "chb=fgetc(fb);", "}", "}", "int\u00a0\u00a0 main()", "{", "FILE\u00a0\u00a0 *fa,*fb,*fc;", "fa=fopen(\u201ca.txt\u201d,\u201dr\u201d);", "fb=fopen(\u201cb.txt\u201d,\u201dr\u201d);", "fc=fopen(\u201cc.txt\u201d,\u201dw\u201d);", "fmerge(fa,fb,fc);", "fclose(fa);", "fclose(fb);", "fclose(fc);", "return\u00a0\u00a0 0;", "}", "\u00a0", "239.C++:memset ,memcpy \u548cstrcpy \u7684\u6839\u672c\u533a\u522b\uff1f", "\n#include \u201cmemory.h\u201d", "\nmemset\u7528\u6765\u5bf9\u4e00\u6bb5\u5185\u5b58\u7a7a\u95f4\u5168\u90e8\u8bbe\u7f6e\u4e3a\u67d0\u4e2a\u5b57\u7b26\uff0c\u4e00\u822c\u7528\u5728\u5bf9\u5b9a\u4e49\u7684\u5b57\u7b26\u4e32\u8fdb\u884c\u521d\u59cb\u5316\u4e3a\u2018 \u2018\u6216\u2018\\0\u2032\uff1b\u4f8b:char a[100];memset(a, \u2018\\0\u2032, sizeof(a));", "\nmemcpy\u7528\u6765\u505a\u5185\u5b58\u62f7\u8d1d\uff0c\u4f60\u53ef\u4ee5\u62ff\u5b83\u62f7\u8d1d\u4efb\u4f55\u6570\u636e\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u53ef\u4ee5\u6307\u5b9a\u62f7\u8d1d\u7684\u6570\u636e\u957f\u5ea6\uff1b\u4f8b\uff1achar a[100],b[50]; memcpy(b, a, sizeof(b));\u6ce8\u610f\u5982\u7528sizeof(a)\uff0c\u4f1a\u9020\u6210b\u7684\u5185\u5b58\u5730\u5740\u6ea2\u51fa\u3002", "strcpy\u5c31\u53ea\u80fd\u62f7\u8d1d\u5b57\u7b26\u4e32\u4e86\uff0c\u5b83\u9047\u5230\u2019\\0\u2032\u5c31\u7ed3\u675f\u62f7\u8d1d\uff1b\u4f8b\uff1achar a[100],b[50];strcpy(a,b);\u5982\u7528strcpy(b,a)\uff0c\u8981\u6ce8\u610fa\u4e2d\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\uff08\u7b2c\u4e00\u4e2a\u2018\\0\u2032\u4e4b\u524d\uff09\u662f\u5426\u8d85\u8fc750\u4f4d\uff0c\u5982\u8d85\u8fc7\uff0c\u5219\u4f1a\u9020\u6210b\u7684\u5185\u5b58\u5730\u5740\u6ea2\u51fa\u3002", "strcpy", "\n\u539f\u578b\uff1aextern char *strcpy(char *dest,char *src);", "\n\u7528\u6cd5\uff1a#include", "\n\u529f\u80fd\uff1a\u628asrc\u6240\u6307\u7531NULL\u7ed3\u675f\u7684\u5b57\u7b26\u4e32\u590d\u5236\u5230dest\u6240\u6307\u7684\u6570\u7ec4\u4e2d\u3002", "\n\u8bf4\u660e\uff1asrc\u548cdest\u6240\u6307\u5185\u5b58\u533a\u57df\u4e0d\u53ef\u4ee5\u91cd\u53e0\u4e14dest\u5fc5\u987b\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u6765\u5bb9\u7eb3src\u7684\u5b57\u7b26\u4e32\u3002", "\n\u8fd4\u56de\u6307\u5411dest\u7684\u6307\u9488\u3002", "\nmemcpy", "\n\u539f\u578b\uff1aextern void *memcpy(void *dest, void *src, unsigned int count);", "\n\u7528\u6cd5\uff1a#include", "\n\u529f\u80fd\uff1a\u7531src\u6240\u6307\u5185\u5b58\u533a\u57df\u590d\u5236count\u4e2a\u5b57\u8282\u5230dest\u6240\u6307\u5185\u5b58\u533a\u57df\u3002", "\n\u8bf4\u660e\uff1asrc\u548cdest\u6240\u6307\u5185\u5b58\u533a\u57df\u4e0d\u80fd\u91cd\u53e0\uff0c\u51fd\u6570\u8fd4\u56de\u6307\u5411dest\u7684\u6307\u9488\u3002", "\nmemset", "\n\u539f\u578b\uff1aextern void *memset(void *buffer, char c, int count);", "\n\u7528\u6cd5\uff1a#include", "\n\u529f\u80fd\uff1a\u628abuffer\u6240\u6307\u5185\u5b58\u533a\u57df\u7684\u524dcount\u4e2a\u5b57\u8282\u8bbe\u7f6e\u6210\u5b57\u7b26c\u3002", "\n\u8bf4\u660e\uff1a\u8fd4\u56de\u6307\u5411buffer\u7684\u6307\u9488\u3002", "240.ASSERT()\u662f\u5e72\u4ec0\u4e48\u7528\u7684", "ASSERT() \u662f\u4e00\u4e2a\u8c03\u8bd5\u7a0b\u5e8f\u65f6\u7ecf\u5e38\u4f7f\u7528\u7684\u5b8f\uff0c\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u5b83\u8ba1\u7b97\u62ec\u53f7\u5185\u7684\u8868\u8fbe\u5f0f\uff0c\u5982\u679c\u8868\u8fbe\u5f0f\u4e3aFALSE (0), \u7a0b\u5e8f\u5c06\u62a5\u544a\u9519\u8bef\uff0c\u5e76\u7ec8\u6b62\u6267\u884c\u3002\u5982\u679c\u8868\u8fbe\u5f0f\u4e0d\u4e3a0\uff0c\u5219\u7ee7\u7eed\u6267\u884c\u540e\u9762\u7684\u8bed\u53e5\u3002\u8fd9\u4e2a\u5b8f\u901a\u5e38\u539f\u6765\u5224\u65ad\u7a0b\u5e8f\u4e2d\u662f\u5426\u51fa\u73b0\u4e86\u660e\u663e\u975e\u6cd5\u7684\u6570\u636e\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u7ec8\u6b62\u7a0b\u5e8f\u4ee5\u514d\u5bfc\u81f4 \u4e25\u91cd\u540e\u679c\uff0c\u540c\u65f6\u4e5f\u4fbf\u4e8e\u67e5\u627e\u9519\u8bef\u3002\u4f8b\u5982\uff0c\u53d8\u91cfn\u5728\u7a0b\u5e8f\u4e2d\u4e0d\u5e94\u8be5\u4e3a0\uff0c\u5982\u679c\u4e3a0\u53ef\u80fd\u5bfc\u81f4\u9519\u8bef\uff0c\u4f60\u53ef\u4ee5\u8fd9\u6837\u5199\u7a0b\u5e8f\uff1a", "\n\u2026\u2026", "\nASSERT( n != 0);", "\nk = 10/ n;", "\n\u2026\u2026", "\nASSERT\u53ea\u6709\u5728Debug\u7248\u672c\u4e2d\u624d\u6709\u6548\uff0c\u5982\u679c\u7f16\u8bd1\u4e3aRelease\u7248\u672c\u5219\u88ab\u5ffd\u7565\u3002", "\nassert()\u7684\u529f\u80fd\u7c7b\u4f3c\uff0c\u5b83\u662fANSI C\u6807\u51c6\u4e2d\u89c4\u5b9a\u7684\u51fd\u6570\uff0c\u5b83\u4e0eASSERT\u7684\u4e00\u4e2a\u91cd\u8981\u533a\u522b\u662f\u53ef\u4ee5\u7528\u5728Release\u7248\u672c\u4e2d\u3002", "241. \u4e8c\u5206\u67e5\u627e\u7b97\u6cd5\uff1a", "\n1\u3001\u9012\u5f52\u65b9\u6cd5\u5b9e\u73b0\uff1a", "\nint BSearch(elemtype a[],elemtype x,int low,int high)", "\n/*\u5728\u4e0b\u5c4a\u4e3alow\uff0c\u4e0a\u754c\u4e3ahigh\u7684\u6570\u7ec4a\u4e2d\u6298\u534a\u67e5\u627e\u6570\u636e\u5143\u7d20x*/", "\n{", "\nint mid;", "\nif(low>high) return -1;", "\nmid=(low+high)/2;", "\nif(x==a[mid]) return mid;", "\nif(x<a[mid]) return(BSearch(a,x,low,mid-1));", "\nelse return(BSearch(a,x,mid+1,high));", "\n}", "2\u3001\u975e\u9012\u5f52\u65b9\u6cd5\u5b9e\u73b0\uff1a", "\nint BSearch(elemtype a[],keytype key,int n)", "\n{", "\nint low,high,mid;", "\nlow=0;high=n-1;", "\nwhile(low<=high)", "\n{", "\nmid=(low+high)/2;", "\nif(a[mid].key==key) return mid;", "\nelse if(a[mid].key<key) low=mid+1;", "\nelse high=mid-1;", "\n}", "\nreturn -1;", "\n}", "\u00a0", "\u00a0", "242\uff0c\u5199\u51fa\u4e0b\u9762\u4ee3\u7801\u6bb5\u7684\u8f93\u51fa\u7ed3\u679c\uff0c\u5e76\u8bf4\u660e\u7406\u7531:", "char str1[] = \u201cabc\u201d;", "\nchar str2[] = \u201cabc\u201d;", "const char str3[] = \u201cabc\u201d;", "\nconst char str4[] = \u201cabc\u201d;", "const char *str5 = \u201cabc\u201d;", "\nconst char *str6 = \u201cabc\u201d;", "char *str7 = \u201cabc\u201d;", "\nchar *str8 = \u201cabc\u201d;", "\ncout << ( str1 == str2 ) << endl;", "\ncout << ( str3 == str4 ) << endl;", "\ncout << ( str5 == str6 ) << endl;", "\ncout << ( str7 == str8 ) << endl;", "1\uff0c\u00a0 str1,str2,str3,str4\u662f\u6570\u7ec4\u53d8\u91cf\uff0c\u5b83\u4eec\u6709\u5404\u81ea\u7684\u5185\u5b58\u7a7a\u95f4\uff1b", "\n\u800cstr5,str6,str7,str8\u662f\u6307\u9488\uff0c\u5b83\u4eec\u6307\u5411\u76f8\u540c\u7684\u5e38\u91cf\u533a\u57df\u3002", "\n", "\n", "\n243. \u4ee5\u4e0b\u4ee3\u7801\u4e2d\u7684\u4e24\u4e2asizeof\u7528\u6cd5\u6709\u95ee\u9898\u5417\uff1f", "\nvoid UpperCase( char str[] )", "{", "\nfor( size_t i=0; i<sizeof(str)/sizeof(str[0]); ++i )", "\nif( \u2018a\u2019<=str[i] && str[i]<=\u2019z\u2019 )", "\nstr[i] -= (\u2018a\u2019-'A\u2019 );", "\n}", "\nchar str[] = \u201caBcDe\u201d;", "\ncout << \u201cstr\u5b57\u7b26\u957f\u5ea6\u4e3a: \u201d << sizeof(str)/sizeof(str[0]) << endl;", "\nUpperCase( str );", "\ncout << str << endl;", "\u51fd\u6570\u5185\u7684sizeof\u6709\u95ee\u9898\u3002\u6839\u636e\u8bed\u6cd5\uff0csizeof\u5982\u7528\u4e8e\u6570\u7ec4\uff0c\u53ea\u80fd\u6d4b\u51fa\u9759\u6001\u6570\u7ec4\u7684\u5927\u5c0f\uff0c\u65e0\u6cd5\u68c0\u6d4b\u52a8\u6001\u5206\u914d\u7684\u6216\u5916\u90e8\u6570\u7ec4\u5927\u5c0f\u3002\u51fd\u6570\u5916\u7684str\u662f\u4e00\u4e2a\u9759\u6001\u5b9a\u4e49\u7684\u6570\u7ec4\uff0c\u56e0\u6b64\u5176\u5927\u5c0f\u4e3a6\uff0c\u51fd\u6570\u5185\u7684str\u5b9e\u9645\u53ea\u662f\u4e00\u4e2a\u6307\u5411\u5b57\u7b26\u4e32\u7684\u6307\u9488\uff0c\u6ca1\u6709\u4efb\u4f55\u989d\u5916\u7684\u4e0e\u6570\u7ec4\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u56e0\u6b64sizeof\u4f5c\u7528\u4e8e\u4e0a\u53ea\u5c06\u5176\u5f53\u6307\u9488\u770b\uff0c", "\n", "244\uff0c\u4e0b\u9762\u7a0b\u5e8f\u8f93\u51fa\u7ed3\u679c\u662f\u591a\u5c11:", "main()", "\n{", "\nint a[5]={1,2,3,4,5};", "\nint *ptr=(int *)(&a+1);", "\u00a0\u00a0 printf(\u201c%d,%d\u201d,*(a+1),*(ptr-1));", "\n}", "\n2,5", "\n*(a+1\uff09\u5c31\u662fa[1]\uff0c*(ptr-1)\u5c31\u662fa[4],\u6267\u884c\u7ed3\u679c\u662f2\uff0c5", "\n&a+1\u4e0d\u662f\u9996\u5730\u5740+1\uff0c\u7cfb\u7edf\u4f1a\u8ba4\u4e3a\u52a0\u4e00\u4e2aa\u6570\u7ec4\u7684\u504f\u79fb\uff0c\u662f\u504f\u79fb\u4e86\u4e00\u4e2a\u6570\u7ec4\u7684\u5927\u5c0f\uff08\u672c\u4f8b\u662f5\u4e2aint\uff09", "\nint *ptr=(int *)(&a+1);", "\n\u5219ptr\u5b9e\u9645\u662f&(a[5]),\u4e5f\u5c31\u662fa+5", "\n\u539f\u56e0\u5982\u4e0b\uff1a", "\n&a\u662f\u6570\u7ec4\u6307\u9488\uff0c\u5176\u7c7b\u578b\u4e3a int (*)[5];", "\n\u800c\u6307\u9488\u52a01\u8981\u6839\u636e\u6307\u9488\u7c7b\u578b\u52a0\u4e0a\u4e00\u5b9a\u7684\u503c\uff0c", "\n\u4e0d\u540c\u7c7b\u578b\u7684\u6307\u9488+1\u4e4b\u540e\u589e\u52a0\u7684\u5927\u5c0f\u4e0d\u540c", "\na\u662f\u957f\u5ea6\u4e3a5\u7684int\u6570\u7ec4\u6307\u9488\uff0c\u6240\u4ee5\u8981\u52a0 5*sizeof(int)", "\n\u6240\u4ee5ptr\u5b9e\u9645\u662fa[5]", "\n\u4f46\u662fprt\u4e0e(&a+1)\u7c7b\u578b\u662f\u4e0d\u4e00\u6837\u7684(\u8fd9\u70b9\u5f88\u91cd\u8981)", "\n\u6240\u4ee5prt-1\u53ea\u4f1a\u51cf\u53bbsizeof(int*)", "\na,&a\u7684\u5730\u5740\u662f\u4e00\u6837\u7684\uff0c\u4f46\u610f\u601d\u4e0d\u4e00\u6837\uff0ca\u662f\u6570\u7ec4\u9996\u5730\u5740\uff0c\u4e5f\u5c31\u662fa[0]\u7684\u5730\u5740\uff0c&a\u662f\u5bf9\u8c61\uff08\u6570\u7ec4\uff09\u9996\u5730\u5740\uff0ca+1\u662f\u6570\u7ec4\u4e0b\u4e00\u5143\u7d20\u7684\u5730\u5740\uff0c\u5373a[1],&a+1\u662f\u4e0b\u4e00\u4e2a\u5bf9\u8c61\u7684\u5730\u5740\uff0c\u5373a[5].", "\u00a0", "245\uff0c\u8bf7\u95ee\u8fd0\u884cTest\u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\nvoid GetMemory(char *p)", "\n{", "\np = (char *)malloc(100);", "\n}", "\nvoid Test(void)", "\n{", "\nchar *str = NULL;", "\nGetMemory(str);", "\nstrcpy(str, \u201chello world\u201d);", "\nprintf(str);", "\n}", "\u00a0", "\u00a0", "\uff0c\u8bf7\u95ee\u8fd0\u884cTest\u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\nchar *GetMemory(void)", "\n{", "\nchar p[] = \u201chello world\u201d;", "\nreturn p;", "\n}", "\nvoid Test(void)", "\n{", "\nchar *str = NULL;", "\nstr = GetMemory();", "\nprintf(str);", "\n}", "\u00a0", "\uff0c\u8bf7\u95ee\u8fd0\u884cTest\u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\nVoid GetMemory2(char **p, int num)", "\n{", "\n*p = (char *)malloc(num);", "\n}", "\nvoid Test(void)", "\n{", "\nchar *str = NULL;", "\nGetMemory(&str, 100);", "\nstrcpy(str, \u201chello\u201d);", "\nprintf(str);", "\n}", "\u00a0", "\u00a0", "\uff0c\u8bf7\u95ee\u8fd0\u884cTest\u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\nvoid Test(void)", "\n{", "\nchar *str = (char *) malloc(100);", "\nstrcpy(str, \u201chello\u201d);", "\nfree(str);", "\nif(str != NULL)", "\n{", "\nstrcpy(str, \u201cworld\u201d);", "\nprintf(str);", "\n}", "\n}"], "title": "C++\u5f00\u53d1\u5de5\u7a0b\u5e08\u9762\u8bd5\u9898\u5e93 200~250\u9053"},
{"contents": [], "title": "\u5b9a\u4e49\u4e3avolatile\u7684\u53d8\u91cf\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f"},
{"contents": [], "title": "C++\u8bed\u8a00\u4e2d\u7684static\u5173\u952e\u5b57\u7684\u4f5c\u7528\u662f\u4ec0\u4e48\uff1f"},
{"contents": ["\u7b54 \u30011) \u5f15\u7528\u5fc5\u987b\u88ab\u521d\u59cb\u5316\uff0c\u6307\u9488\u4e0d\u5fc5\u3002", "2) \u5f15\u7528\u521d\u59cb\u5316\u4ee5\u540e\u4e0d\u80fd\u88ab\u6539\u53d8\uff0c\u6307\u9488\u53ef\u4ee5\u6539\u53d8\u6240\u6307\u7684\u5bf9\u8c61\u3002", "3) \u4e0d\u5b58\u5728\u6307\u5411\u7a7a\u503c\u7684\u5f15\u7528\uff0c\u4f46\u662f\u5b58\u5728\u6307\u5411\u7a7a\u503c\u7684\u6307\u9488\u3002", "\u00a0", "\u7b54 \u3001\u5728\u7279\u5b9a\u65f6\u95f4\u5185\u5b8c\u6210\u7279\u5b9a\u7684\u4efb\u52a1\uff0c\u5b9e\u65f6\u6027\u4e0e\u53ef\u9760\u6027\u3002", "\u00a0", "\u7b54 \u3001\u5168\u5c40\u53d8\u91cf\u50a8\u5b58\u5728\u9759\u6001\u6570\u636e\u533a\uff0c\u5c40\u90e8\u53d8\u91cf\u5728\u5806\u6808\u4e2d\u3002", "\u00a0", "\u7b54 \u3001\u6ca1\u6709\u56de\u6536\u5783\u573e\u8d44\u6e90", "\u00a0", "\u7b54 \u6784\u9020\u51fd\u6570\uff08constructor\uff09", "\u00a0", "\u7b54 IP\u5730\u5740\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff0c\u7f51\u7edc\u53f7\u548c\u4e3b\u673a\u53f7\u3002", "\u00a0", "\u7b54 \u3001switch\u7684\u53c2\u6570\u4e0d\u80fd\u4e3a\u5b9e\u578b\u3002", "\u00a0", "\u7b54 \u3001", "\uff0c\u5982\u679c\u7528\u5f15\u7528\u5934\u6587\u4ef6\u65b9\u5f0f\u6765\u5f15\u7528\u67d0\u4e2a\u5728\u5934\u6587\u4ef6\u4e2d\u58f0\u660e\u7684\u5168\u5c40\u53d8\u7406\uff0c\u5047\u5b9a\u4f60\u5c06\u90a3\u4e2a\u53d8\u5199\u9519\u4e86\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4\u4f1a\u62a5\u9519\uff0c\u5982\u679c\u4f60\u7528extern\u65b9\u5f0f\u5f15\u7528\u65f6\uff0c\u5047\u5b9a\u4f60\u72af\u4e86\u540c\u6837\u7684\u9519\u8bef\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4\u4e0d\u4f1a\u62a5\u9519\uff0c\u800c\u5728\u8fde\u63a5\u671f\u95f4\u62a5\u9519", "\u00a0", "\u7b54 \u3001c\u7528\u5b8f\u5b9a\u4e49\uff0cc++\u7528inline", "\u7b54\u6848\uff1a\u4e0d\u662f\u3002\u4e24\u4e2a\u4e0d\u540c\u7c7b\u578b\u7684\u6307\u9488\u4e4b\u95f4\u53ef\u4ee5\u5f3a\u5236\u8f6c\u6362\uff08\u7528reinterpret cast)", "\u00a0", "\u7b54\u6848\uff1a\u4e3a1\u3002\u4e3e\u4e2a\u53cd\u4f8b\uff0c\u5982\u679c\u662f\u96f6\u7684\u8bdd\uff0c\u58f0\u660e\u4e00\u4e2aclass A[10]\u5bf9\u8c61\u6570\u7ec4\uff0c\u800c\u6bcf\u4e00\u4e2a\u5bf9\u8c61\u5360\u7528\u7684\u7a7a\u95f4\u662f\u96f6\uff0c\u8fd9\u65f6\u5c31\u6ca1\u529e\u6cd5\u533a\u5206A[0],A[1]\u2026\u4e86\u3002", "\u00a0", "\u7b54\uff1a\u6570\u7ec4\u8981\u4e48\u5728\u9759\u6001\u5b58\u50a8\u533a\u88ab\u521b\u5efa\uff08\u5982\u5168\u5c40\u6570\u7ec4\uff09\uff0c\u8981\u4e48\u5728\u6808\u4e0a\u88ab\u521b\u5efa\u3002\u6307\u9488\u53ef\u4ee5\u968f\u65f6\u6307\u5411\u4efb\u610f\u7c7b\u578b\u7684\u5185\u5b58\u5757\u3002", "(1)\u4fee\u6539\u5185\u5bb9\u4e0a\u7684\u533a\u522b", "char a[] = \u201chello\u201d;", "a[0] = \u2018X\u2019;", "char *p = \u201cworld\u201d; // \u6ce8\u610fp \u6307\u5411\u5e38\u91cf\u5b57\u7b26\u4e32", "p[0] = \u2018X\u2019; // \u7f16\u8bd1\u5668\u4e0d\u80fd\u53d1\u73b0\u8be5\u9519\u8bef\uff0c\u8fd0\u884c\u65f6\u9519\u8bef", "(2) \u7528\u8fd0\u7b97\u7b26sizeof \u53ef\u4ee5\u8ba1\u7b97\u51fa\u6570\u7ec4\u7684\u5bb9\u91cf\uff08\u5b57\u8282\u6570\uff09\u3002sizeof(p),p \u4e3a\u6307\u9488\u5f97\u5230\u7684\u662f\u4e00\u4e2a\u6307\u9488\u53d8\u91cf\u7684\u5b57\u8282\u6570\uff0c\u800c\u4e0d\u662fp \u6240\u6307\u7684\u5185\u5b58\u5bb9\u91cf\u3002", "\u00a0", "\u7b54\uff1a\u6709\u4e09\u79cd\u65b9\u5f0f\uff1a\u503c\u4f20\u9012\u3001\u6307\u9488\u4f20\u9012\u3001\u5f15\u7528\u4f20\u9012", "\u00a0", "\u7b54\uff1a\u5206\u914d\u65b9\u5f0f\u6709\u4e09\u79cd\uff0c", "1\u3001 \u9759\u6001\u5b58\u50a8\u533a\uff0c\u662f\u5728\u7a0b\u5e8f\u7f16\u8bd1\u65f6\u5c31\u5df2\u7ecf\u5206\u914d\u597d\u7684\uff0c\u5728\u6574\u4e2a\u8fd0\u884c\u671f\u95f4\u90fd\u5b58\u5728\uff0c\u5982\u5168\u5c40\u53d8\u91cf\u3001\u5e38\u91cf\u3002", "2\u3001 \u6808\u4e0a\u5206\u914d\uff0c\u51fd\u6570\u5185\u7684\u5c40\u90e8\u53d8\u91cf\u5c31\u662f\u4ece\u8fd9\u5206\u914d\u7684\uff0c\u4f46\u5206\u914d\u7684\u5185\u5b58\u5bb9\u6613\u6709\u9650\u3002", "3\u3001 \u5806\u4e0a\u5206\u914d\uff0c\u4e5f\u79f0\u52a8\u6001\u5206\u914d\uff0c\u5982\u6211\u4eec\u7528new,malloc\u5206\u914d\u5185\u5b58\uff0c\u7528delete,free\u6765\u91ca\u653e\u7684\u5185\u5b58\u3002", "\u00a0", "\u7b54\uff1aExtern \u201cC\u201d\u662f\u7531\uff23\uff0b\uff0b\u63d0\u4f9b\u7684\u4e00\u4e2a\u8fde\u63a5\u4ea4\u6362\u6307\u5b9a\u7b26\u53f7\uff0c\u7528\u4e8e\u544a\u8bc9\uff23\uff0b\uff0b\u8fd9\u6bb5\u4ee3\u7801\u662f\uff23\u51fd\u6570\u3002\u8fd9\u662f\u56e0\u4e3aC++\u7f16\u8bd1\u540e\u5e93\u4e2d\u51fd\u6570\u540d\u4f1a\u53d8\u5f97\u5f88\u957f\uff0c\u4e0eC\u751f\u6210\u7684\u4e0d\u4e00\u81f4\uff0c\u9020\u6210\uff23\uff0b\uff0b\u4e0d\u80fd\u76f4\u63a5\u8c03\u7528C\u51fd\u6570\uff0c\u52a0\u4e0aextren \u201cc\u201d\u540e\uff0cC++\u5c31\u80fd\u76f4\u63a5\u8c03\u7528C\u51fd\u6570\u4e86\u3002", "Extern \u201cC\u201d\u4e3b\u8981\u4f7f\u7528\u6b63\u89c4DLL\u51fd\u6570\u7684\u5f15\u7528\u548c\u5bfc\u51fa \u548c \u5728C++\u5305\u542bC\u51fd\u6570\u6216C\u5934\u6587\u4ef6\u65f6\u4f7f\u7528\u3002\u4f7f\u7528\u65f6\u5728\u524d\u9762\u52a0\u4e0aextern \u201cc\u201d \u5173\u952e\u5b57\u5373\u53ef\u3002\u53ef\u4ee5\u7528\u4e00\u53e5\u8bdd\u6982\u62ecextern \u201cC\u201d\u8fd9\u4e2a\u58f0\u660e\u7684\u771f\u5b9e\u76ee\u7684\uff1a\u5b9e\u73b0C++\u4e0eC\u53ca\u5176\u5b83\u8bed\u8a00\u7684\u6df7\u5408\u7f16\u7a0b\u3002", "\u00a0", "\u00a0", "\u7b54\u6848\uff1a", "\u7ebf\u7a0b\uff1aCreateThread/AfxBeginThread\u7b49", "\u8fdb\u7a0b\uff1aCreateProcess\u7b49", "\u00a0", "\u7b54\u6848\uff1aSendMessage\u662f\u963b\u585e\u7684\uff0c\u7b49\u6d88\u606f\u88ab\u5904\u7406\u540e\uff0c\u4ee3\u7801\u624d\u80fd\u8d70\u5230SendMessage\u7684\u4e0b\u4e00\u884c\u3002PostMessage\u662f\u975e\u963b\u585e\u7684\uff0c\u4e0d\u7ba1\u6d88\u606f\u662f\u5426\u5df2\u88ab\u5904\u7406\uff0c\u4ee3\u7801\u9a6c\u4e0a\u8d70\u5230PostMessage\u7684\u4e0b\u4e00\u884c\u3002", "\u00a0", "69.\u00a0 CMemoryState\u4e3b\u8981\u529f\u80fd\u662f\u4ec0\u4e48", "\u7b54\u6848\uff1a\u67e5\u770b\u5185\u5b58\u4f7f\u7528\u60c5\u51b5\uff0c\u89e3\u51b3\u5185\u5b58\u6cc4\u9732\u95ee\u9898\u3002", "\u00a0", "\u7b54\uff1a\u5bf9\u4e8e#include <filename.h> \uff0c\u7f16\u8bd1\u5668\u4ece\u6807\u51c6\u5e93\u8def\u5f84\u5f00\u59cb\u641c\u7d22 filename.h", "\u5bf9\u4e8e#include \u201cfilename.h\u201d \uff0c\u7f16\u8bd1\u5668\u4ece\u7528\u6237\u7684\u5de5\u4f5c\u8def\u5f84\u5f00\u59cb\u641c\u7d22 filename.h", "\u00a0", "\u7b54\uff1a\u7f16\u8bd1\u65f6\u8f93\u51fa\u4e00\u6761\u9519\u8bef\u4fe1\u606f\uff0c\u5e76\u4e2d\u6b62\u7ee7\u7eed\u7f16\u8bd1\u3002", "\u00a0", "\u7b54\uff1a\u9632\u6b62\u8be5\u5934\u6587\u4ef6\u88ab\u91cd\u590d\u5f15\u7528\u3002", "\u00a0", "\u7b54\uff1a\u5b9a\u4e49\u90e8\u5206\u7684\u6bcf\u4e2a\u5f62\u53c2\u548c\u6574\u4e2a\u8868\u8fbe\u5f0f\u90fd\u5fc5\u987b\u7528\u62ec\u53f7\u62ec\u8d77\u6765\uff0c\u4ee5\u907f\u514d\u4e0d\u53ef\u9884\u6599\u7684\u9519\u8bef\u53d1\u751f", "\u00a0", "\u7b54\uff1a\u6570\u7ec4\u5728\u505a\u5b9e\u53c2\u65f6\u4f1a\u53d8\u6210\u6307\u9488\u7c7b\u578b\u3002", "\u00a0", "(1)\u00a0\u00a0 \u6807\u51c6\u8f93\u5165\u2014-\u952e\u76d8\u2014stdin", "(2)\u00a0\u00a0 \u6807\u51c6\u8f93\u51fa\u2014-\u663e\u793a\u5668\u2014stdout", "(3)\u00a0\u00a0 \u6807\u51c6\u51fa\u9519\u8f93\u51fa\u2014-\u663e\u793a\u5668\u2014stderr", "\u00a0", "(1)\u00a0\u00a0 Char\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u5360\u75288\u4f4d", "(2)\u00a0\u00a0 Int\u00a0 \u00a0\u00a0\u00a0\u00a0\u5360\u752832\u4f4d", "(3)\u00a0\u00a0 Float\u00a0\u00a0 \u00a0\u5360\u752832\u4f4d", "(4)\u00a0\u00a0 Double\u00a0 \u00a0\u5360\u752864\u4f4d", "\u00a0", "\u7b54\uff1astrcpy()\u548cmemcpy()\u90fd\u53ef\u4ee5\u7528\u6765\u62f7\u8d1d\u5b57\u7b26\u4e32\uff0cstrcpy()\u62f7\u8d1d\u4ee5\u2019\\0\u2019\u7ed3\u675f\uff0c\u4f46memcpy()\u5fc5\u987b\u6307\u5b9a\u62f7\u8d1d\u7684\u957f\u5ea6\u3002", "\u00a0", "\u7b54\uff1a(1)\u00a0\u00a0 #define\u662fC\u8bed\u6cd5\u4e2d\u5b9a\u4e49\u7b26\u53f7\u53d8\u91cf\u7684\u65b9\u6cd5\uff0c\u7b26\u53f7\u5e38\u91cf\u53ea\u662f\u7528\u6765\u8868\u8fbe\u4e00\u4e2a\u503c\uff0c\u5728\u7f16\u8bd1\u9636\u6bb5\u7b26\u53f7\u5c31\u88ab\u503c\u66ff\u6362\u4e86\uff0c\u5b83\u6ca1\u6709\u7c7b\u578b\uff1b", "(2)\u00a0\u00a0 Const\u662fC++\u8bed\u6cd5\u4e2d\u5b9a\u4e49\u5e38\u53d8\u91cf\u7684\u65b9\u6cd5\uff0c\u5e38\u53d8\u91cf\u5177\u6709\u53d8\u91cf\u7279\u6027\uff0c\u5b83\u5177\u6709\u7c7b\u578b\uff0c\u5185\u5b58\u4e2d\u5b58\u5728\u4ee5\u5b83\u547d\u540d\u7684\u5b58\u50a8\u5355\u5143\uff0c\u53ef\u4ee5\u7528sizeof\u6d4b\u51fa\u957f\u5ea6\u3002", "\u00a0", "\u7b54\uff1a\u5b57\u7b26\u5e38\u91cf\u662f\u6307\u5355\u4e2a\u5b57\u7b26\uff0c\u5b57\u7b26\u4e32\u5e38\u91cf\u4ee5\u2018\\0\u2019\u7ed3\u675f\uff0c\u4f7f\u7528\u8fd0\u7b97\u7b26sizeof\u8ba1\u7b97\u591a\u5360\u4e00\u5b57\u8282\u7684\u5b58\u50a8\u7a7a\u95f4\u3002", "\u00a0", "\u7b54\uff1a\u5168\u5c40\u53d8\u91cf\u4e5f\u79f0\u4e3a\u5916\u90e8\u53d8\u91cf\uff0c\u5b83\u662f\u5728\u51fd\u6570\u5916\u90e8\u5b9a\u4e49\u7684\u53d8\u91cf\uff0c\u5b83\u5c5e\u4e8e\u4e00\u4e2a\u6e90\u7a0b\u5e8f\u6587\u4ef6\uff0c\u5b83\u4fdd\u5b58\u4e0a\u4e00\u6b21\u88ab\u4fee\u6539\u540e\u7684\u503c\uff0c\u4fbf\u4e8e\u6570\u636e\u5171\u4eab\uff0c\u4f46\u4e0d\u65b9\u4fbf\u7ba1\u7406\uff0c\u6613\u5f15\u8d77\u610f\u60f3\u4e0d\u5230\u7684\u9519\u8bef\u3002", "\u00a0", "\u7b54\uff1a\uff081\uff09\u51fd\u6570\u4f53\u5185static\u53d8\u91cf\u7684\u4f5c\u7528\u8303\u56f4\u4e3a\u8be5\u51fd\u6570\u4f53\uff0c\u4e0d\u540c\u4e8eauto\u53d8\u91cf\uff0c\u8be5\u53d8\u91cf\u7684\u5185\u5b58\u53ea\u88ab\u5206\u914d\u4e00\u6b21\uff0c\u56e0\u6b64\u5176\u503c\u5728\u4e0b\u6b21\u8c03\u7528\u65f6\u4ecd\u7ef4\u6301\u4e0a\u6b21\u7684\u503c\uff1b", "\uff082\uff09\u5728\u6a21\u5757\u5185\u7684static\u5168\u5c40\u53d8\u91cf\u53ef\u4ee5\u88ab\u6a21\u5757\u5185\u6240\u7528\u51fd\u6570\u8bbf\u95ee\uff0c\u4f46\u4e0d\u80fd\u88ab\u6a21\u5757\u5916\u5176\u5b83\u51fd\u6570\u8bbf\u95ee\uff1b", "\uff083\uff09\u5728\u6a21\u5757\u5185\u7684static\u51fd\u6570\u53ea\u53ef\u88ab\u8fd9\u4e00\u6a21\u5757\u5185\u7684\u5176\u5b83\u51fd\u6570\u8c03\u7528\uff0c\u8fd9\u4e2a\u51fd\u6570\u7684\u4f7f\u7528\u8303\u56f4\u88ab\u9650\u5236\u5728\u58f0\u660e\u5b83\u7684\u6a21\u5757\u5185\uff1b", "\uff084\uff09\u5728\u7c7b\u4e2d\u7684static\u6210\u5458\u53d8\u91cf\u5c5e\u4e8e\u6574\u4e2a\u7c7b\u6240\u62e5\u6709\uff0c\u5bf9\u7c7b\u7684\u6240\u6709\u5bf9\u8c61\u53ea\u6709\u4e00\u4efd\u62f7\u8d1d\uff1b", "\uff085\uff09\u5728\u7c7b\u4e2d\u7684static\u6210\u5458\u51fd\u6570\u5c5e\u4e8e\u6574\u4e2a\u7c7b\u6240\u62e5\u6709\uff0c\u8fd9\u4e2a\u51fd\u6570\u4e0d\u63a5\u6536this\u6307\u9488\uff0c\u56e0\u800c\u53ea\u80fd\u8bbf\u95ee\u7c7b\u7684static\u6210\u5458\u53d8\u91cf\u3002", "\u00a0", "\u7b54\uff1a\uff081\uff09\u6b32\u963b\u6b62\u4e00\u4e2a\u53d8\u91cf\u88ab\u6539\u53d8\uff0c\u53ef\u4ee5\u4f7f\u7528const\u5173\u952e\u5b57\u3002\u5728\u5b9a\u4e49\u8be5const\u53d8\u91cf\u65f6\uff0c\u901a\u5e38\u9700\u8981\u5bf9\u5b83\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u56e0\u4e3a\u4ee5\u540e\u5c31\u6ca1\u6709\u673a\u4f1a\u518d\u53bb\u6539\u53d8\u5b83\u4e86\uff1b", "\uff082\uff09\u5bf9\u6307\u9488\u6765\u8bf4\uff0c\u53ef\u4ee5\u6307\u5b9a\u6307\u9488\u672c\u8eab\u4e3aconst\uff0c\u4e5f\u53ef\u4ee5\u6307\u5b9a\u6307\u9488\u6240\u6307\u7684\u6570\u636e\u4e3aconst\uff0c\u6216\u4e8c\u8005\u540c\u65f6\u6307\u5b9a\u4e3aconst\uff1b", "\uff083\uff09\u5728\u4e00\u4e2a\u51fd\u6570\u58f0\u660e\u4e2d\uff0cconst\u53ef\u4ee5\u4fee\u9970\u5f62\u53c2\uff0c\u8868\u660e\u5b83\u662f\u4e00\u4e2a\u8f93\u5165\u53c2\u6570\uff0c\u5728\u51fd\u6570\u5185\u90e8\u4e0d\u80fd\u6539\u53d8\u5176\u503c\uff1b", "\uff084\uff09\u5bf9\u4e8e\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u82e5\u6307\u5b9a\u5176\u4e3aconst\u7c7b\u578b\uff0c\u5219\u8868\u660e\u5176\u662f\u4e00\u4e2a\u5e38\u51fd\u6570\uff0c\u4e0d\u80fd\u4fee\u6539\u7c7b\u7684\u6210\u5458\u53d8\u91cf\uff1b", "\uff085\uff09\u5bf9\u4e8e\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u6709\u65f6\u5019\u5fc5\u987b\u6307\u5b9a\u5176\u8fd4\u56de\u503c\u4e3aconst\u7c7b\u578b\uff0c\u4ee5\u4f7f\u5f97\u5176\u8fd4\u56de\u503c\u4e0d\u4e3a\u201c\u5de6\u503c\u201d\u3002", "\u00a0", "\u7b54\uff1a\u6307\u9488\u662f\u4e00\u4e2a\u53d8\u91cf\uff0c\u8be5\u53d8\u91cf\u4e13\u95e8\u5b58\u653e\u5185\u5b58\u5730\u5740\uff1b", "\u6307\u9488\u53d8\u91cf\u7684\u7c7b\u578b\u53d6\u51b3\u4e8e\u5176\u6307\u5411\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5728\u6240\u6307\u6570\u636e\u7c7b\u578b\u524d\u52a0*", "\u6307\u9488\u53d8\u91cf\u7684\u7279\u70b9\u662f\u5b83\u53ef\u4ee5\u8bbf\u95ee\u6240\u6307\u5411\u7684\u5185\u5b58\u3002", "\u00a0", "\u7b54\uff1a\u5e38\u6307\u9488\u7684\u542b\u4e49\u662f\u8be5\u6307\u9488\u6240\u6307\u5411\u7684\u5730\u5740\u4e0d\u80fd\u53d8\uff0c\u4f46\u8be5\u5730\u5740\u6240\u6307\u5411\u7684\u5185\u5bb9\u53ef\u4ee5\u53d8\u5316\uff0c\u4f7f\u7528\u5e38\u6307\u9488\u53ef\u4ee5\u4fdd\u8bc1\u6211\u4eec\u7684\u6307\u9488\u4e0d\u80fd\u6307\u5411\u5176\u5b83\u7684\u53d8\u91cf\uff0c", "\u6307\u5411\u5e38\u53d8\u91cf\u7684\u6307\u9488\u662f\u6307\u8be5\u6307\u9488\u7684\u53d8\u91cf\u672c\u8eab\u7684\u5730\u5740\u53ef\u4ee5\u53d8\u5316\uff0c\u53ef\u4ee5\u6307\u5411\u5176\u5b83\u7684\u53d8\u91cf\uff0c\u4f46\u662f\u5b83\u6240\u6307\u7684\u5185\u5bb9\u4e0d\u53ef\u4ee5\u88ab\u4fee\u6539\u3002\u6307\u5411\u957f\u53d8\u91cf\u7684\u6307\u9488\u5b9a\u4e49\uff0c", "\u00a0", "\u7b54\uff1a\u51fd\u6570\u6307\u9488\u662f\u6307\u5411\u4e00\u4e2a\u51fd\u6570\u5165\u53e3\u7684\u6307\u9488\uff1b", "\u6307\u9488\u51fd\u6570\u662f\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u6307\u9488\u7c7b\u578b\u3002", "\u00a0", "\u7b54\uff1aDebug\u7248\u672c\u662f\u8c03\u8bd5\u7248\u672c\uff0cRelease\u7248\u672c\u662f\u53d1\u5e03\u7ed9\u7528\u6237\u7684\u6700\u7ec8\u975e\u8c03\u8bd5\u7684\u7248\u672c\uff0c", "\u00a0", "\u7b54\uff1a", "int *p[n];\u2014\u2013\u6307\u9488\u6570\u7ec4\uff0c\u6bcf\u4e2a\u5143\u7d20\u5747\u4e3a\u6307\u5411\u6574\u578b\u6570\u636e\u7684\u6307\u9488\u3002", "int (*)p[n];\u2014p\u4e3a\u6307\u5411\u4e00\u7ef4\u6570\u7ec4\u7684\u6307\u9488\uff0c\u8fd9\u4e2a\u4e00\u7ef4\u6570\u7ec4\u6709n\u4e2a\u6574\u578b\u6570\u636e\u3002", "int *p();\u2014\u2014\u51fd\u6570\u5e26\u56de\u6307\u9488\uff0c\u6307\u9488\u6307\u5411\u8fd4\u56de\u7684\u503c\u3002", "int (*)p();\u2014-p\u4e3a\u6307\u5411\u51fd\u6570\u7684\u6307\u9488\u3002", "\u00a0", "\u7b54\uff1astatic\u51fd\u6570\u5728\u5185\u5b58\u4e2d\u53ea\u6709\u4e00\u4efd\uff0c\u666e\u901a\u51fd\u6570\u5728\u6bcf\u4e2a\u88ab\u8c03\u7528\u4e2d\u7ef4\u6301\u4e00\u4efd\u62f7\u8d1d", "\u00a0", "\u7b54\uff1a1. \u7ed3\u6784\u548c\u8054\u5408\u90fd\u662f\u7531\u591a\u4e2a\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u6210\u5458\u7ec4\u6210, \u4f46\u5728\u4efb\u4f55\u540c\u4e00\u65f6\u523b, \u8054\u5408\u4e2d\u53ea\u5b58\u653e\u4e86\u4e00\u4e2a\u88ab\u9009\u4e2d\u7684\u6210\u5458\uff08\u6240\u6709\u6210\u5458\u5171\u7528\u4e00\u5757\u5730\u5740\u7a7a\u95f4\uff09, \u800c\u7ed3\u6784\u7684\u6240\u6709\u6210\u5458\u90fd\u5b58\u5728\uff08\u4e0d\u540c\u6210\u5458\u7684\u5b58\u653e\u5730\u5740\u4e0d\u540c\uff09\u3002", "2. \u5bf9\u4e8e\u8054\u5408\u7684\u4e0d\u540c\u6210\u5458\u8d4b\u503c, \u5c06\u4f1a\u5bf9\u5176\u5b83\u6210\u5458\u91cd\u5199,\u00a0 \u539f\u6765\u6210\u5458\u7684\u503c\u5c31\u4e0d\u5b58\u5728\u4e86, \u800c\u5bf9\u4e8e\u7ed3\u6784\u7684\u4e0d\u540c\u6210\u5458\u8d4b\u503c\u662f\u4e92\u4e0d\u5f71\u54cd\u7684\u3002", "\u00a0", "\u7b54\uff1astruct \u7684\u6210\u5458\u9ed8\u8ba4\u662f\u516c\u6709\u7684\uff0c\u800c\u7c7b\u7684\u6210\u5458\u9ed8\u8ba4\u662f\u79c1\u6709\u7684\u3002", "\u00a0", "\u7b54\uff1a\u679a\u4e3e\u65b9\u4fbf\u4e00\u6b21\u5b9a\u4e49\u4e00\u7ec4\u5e38\u91cf\uff0c\u4f7f\u7528\u8d77\u6765\u5f88\u65b9\u4fbf\uff1b", "\u00a0", "\u7b54\uff1aASSERT()\u662f\u4e00\u4e2a\u8c03\u8bd5\u7a0b\u5e8f\u65f6\u7ecf\u5e38\u4f7f\u7528\u7684\u5b8f\uff0c\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u5b83\u8ba1\u7b97\u62ec\u53f7\u5185\u7684\u8868\u8fbe\u5f0f\uff0c\u5982\u679c\u8868\u8fbe\u5f0f\u4e3aFALSE (0), \u7a0b\u5e8f\u5c06\u62a5\u544a\u9519\u8bef\uff0c\u5e76\u7ec8\u6b62\u6267\u884c\u3002\u5982\u679c\u8868\u8fbe\u5f0f\u4e0d\u4e3a0\uff0c\u5219\u7ee7\u7eed\u6267\u884c\u540e\u9762\u7684\u8bed\u53e5\u3002\u8fd9\u4e2a\u5b8f\u901a\u5e38\u539f\u6765\u5224\u65ad\u7a0b\u5e8f\u4e2d\u662f\u5426\u51fa\u73b0\u4e86\u660e\u663e\u975e\u6cd5\u7684\u6570\u636e\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u7ec8\u6b62\u7a0b\u5e8f\u4ee5\u514d\u5bfc\u81f4\u4e25\u91cd\u540e\u679c\uff0c\u540c\u65f6\u4e5f\u4fbf\u4e8e\u67e5\u627e\u9519\u8bef\u3002", "\u00a0", "\u7b54\uff1a\u80fd\u3002\u5c40\u90e8\u4f1a\u5c4f\u853d\u5168\u5c40\u3002\u8981\u7528\u5168\u5c40\u53d8\u91cf\uff0c\u9700\u8981\u4f7f\u7528\u201d::\u201d(\u57df\u8fd0\u7b97\u7b26)\u3002", "\u00a0", "\u00a0", "\u7b54\uff1a\u5982\u679c\u65e2\u8981\u5229\u7528\u5f15\u7528\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6548\u7387\uff0c\u53c8\u8981\u4fdd\u62a4\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u6570\u636e\u4e0d\u5728\u51fd\u6570\u4e2d\u88ab\u6539\u53d8\uff0c\u5c31\u5e94\u4f7f\u7528\u5e38\u5f15\u7528\u3002", "\u00a0", "\u7b54\uff1a1.\u00a0\u00a0\u00a0 \u8d77\u4fdd\u62a4\u4f5c\u7528\uff1b", "2.\u00a0\u00a0\u00a0 \u63d0\u9ad8\u7f16\u8bd1\u7684\u6548\u7387\u3002", "\u00a0", "\u7b54\uff1a\u7531\u4e00\u4e0b3\u90e8\u5206\u7ec4\u6210\uff1a", "1.\u00a0\u00a0\u00a0 \u6d88\u606f\u961f\u5217\uff1a\u64cd\u4f5c\u7cfb\u7edf\u8d1f\u8d23\u4e3a\u8fdb\u7a0b\u7ef4\u62a4\u4e00\u4e2a\u6d88\u606f\u961f\u5217\uff0c\u7a0b\u5e8f\u8fd0\u884c\u65f6\u4e0d\u65ad\u4ece\u8be5\u6d88\u606f\u961f\u5217\u4e2d\u83b7\u53d6\u6d88\u606f\u3001\u5904\u7406\u6d88\u606f\uff1b", "2.\u00a0\u00a0\u00a0 \u6d88\u606f\u5faa\u73af\uff1a\u5e94\u7528\u7a0b\u5e8f\u901a\u8fc7\u6d88\u606f\u5faa\u73af\u4e0d\u65ad\u83b7\u53d6\u6d88\u606f\u3001\u5904\u7406\u6d88\u606f\u3002", "3.\u00a0\u00a0\u00a0 \u6d88\u606f\u5904\u7406\uff1a\u6d88\u606f\u5faa\u73af\u8d1f\u8d23\u5c06\u6d88\u606f\u6d3e\u53d1\u5230\u76f8\u5173\u7684\u7a97\u53e3\u4e0a\u4f7f\u7528\u5173\u8054\u7684\u7a97\u53e3\u8fc7\u7a0b\u51fd\u6570\u8fdb\u884c\u5904\u7406\u3002", "\u00a0", "\u7b54\uff1a\u6d88\u606f\u6620\u5c04\u5c31\u662f\u8ba9\u7a0b\u5e8f\u5458\u6307\u5b9aMFC\u7c7b\uff08\u6709\u6d88\u606f\u5904\u7406\u80fd\u529b\u7684\u7c7b\uff09\u5904\u7406\u67d0\u4e2a\u6d88\u606f\u3002\u7136\u540e\u7531\u7a0b\u5e8f\u5458\u5b8c\u6210\u5bf9\u8be5\u5904\u7406\u51fd\u6570\u7684\u7f16\u5199\uff0c\u4ee5\u5b9e\u73b0\u6d88\u606f\u5904\u7406\u529f\u80fd\u3002", "\u00a0", "\u7b54\uff1aTCP\u7684\u5168\u79f0\u4e3a\u4f20\u8f93\u63a7\u5236\u534f\u8bae\u3002\u8fd9\u79cd\u534f\u8bae\u53ef\u4ee5\u63d0\u4f9b\u9762\u5411\u8fde\u63a5\u7684\u3001\u53ef\u9760\u7684\u3001\u70b9\u5230\u70b9\u7684\u901a\u4fe1\u3002", "UDP\u5168\u79f0\u4e3a\u7528\u6237\u62a5\u6587\u534f\u8bae\uff0c\u5b83\u53ef\u4ee5\u63d0\u4f9b\u975e\u8fde\u63a5\u7684\u4e0d\u53ef\u9760\u7684\u70b9\u5230\u591a\u70b9\u7684\u901a\u4fe1\u3002\u7528TCP\u8fd8\u662fUDP\uff0c\u90a3\u8981\u770b\u4f60\u7684\u7a0b\u5e8f\u6ce8\u91cd\u54ea\u4e00\u4e2a\u65b9\u9762\uff1f\u53ef\u9760\u8fd8\u662f\u5feb\u901f\uff1f"], "title": "C++\u7ecf\u5178\u9762\u8bd5\u9898\u5168\u96c6 50~100\u9053 \u90fd\u9644\u5e26\u6709\u53c2\u8003\u7b54\u6848"},
{"contents": [], "title": "\u4ecb\u7ecd\u4e00\u4e0bExtern \u201cC\u201d\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u4ec0\u4e48\uff1f"},
{"contents": [], "title": "\u4ecb\u7ecd\u4e00\u4e0bConst\uff08\u53ea\u8bfb\uff09\u4fee\u9970\u7b26"},
{"contents": ["\u5f15\u7528\uff1a\u4e00\u4e2a\u53d8\u91cf\u7684\u522b\u540d\uff0c\u4e3a\u4ec0\u4e48\u5f15\u5165\u522b\u540d\u5462\uff1f\u539f\u56e0\u662f\u6211\u4eec\u60f3\u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf\uff0c\u4ed6\u5171\u4eab\u53e6\u4e00\u4e2a\u53d8\u91cf\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u4f7f\u7528\u522b\u540d\u65e0\u7591\u662f\u4e00\u4e2a\u597d\u7684\u9009\u62e9\u3002\u53d8\u91cf\u662f\u4ec0\u4e48\uff1f\u662f\u4e00\u4e2a\u5185\u5b58\u7a7a\u95f4\u7684\u540d\u5b57\uff0c\u5982\u679c\u6211\u4eec\u7ed9\u8fd9\u4e2a\u5185\u5b58\u7a7a\u95f4\u5728\u8d77\u53e6\u5916\u4e00\u4e2a\u540d\u5b57\uff0c\u90a3\u5c31\u662f\u80fd\u591f\u5171\u4eab\u8fd9\u4e2a\u5185\u5b58\u4e86\uff0c\u5f15\u7528\uff08\u522b\u540d\uff09\u7684\u7531\u6b64\u800c\u6765\u3002", "\n\u6307\u9488\uff1a\u6307\u5411\u53e6\u4e00\u4e2a\u5185\u5b58\u7a7a\u95f4\u7684\u53d8\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5b83\u6765\u7d22\u5f15\u53e6\u4e00\u4e2a\u5185\u5b58\u7a7a\u95f4\u7684\u5185\u5bb9\uff0c\u672c\u8eab\u6709\u81ea\u5df1\u7684\u5185\u5b58\u7a7a\u95f4\u3002"], "title": "C++ \u6307\u9488\u548c\u5f15\u7528\u7684\u533a\u522b\uff1f"},
{"contents": ["@@1", "\n\u00b7\u7531\u4e8e\u865a\u62df\u673a\u4ece\u7b2c\u4e00\u4e2a\u5339\u914d\u7684catch\u5b50\u53e5\u5904\u7ee7\u7eed\u6267\u884c,\u6240\u4ee5catch\u5b50\u53e5\u8868\u4e2d\u7684\u987a\u5e8f\u662f\u5f88\u91cd\u8981\u7684\u3002\u56e0\u4e3aJava\u4ee3\u7801\u662f\u7ed3\u6784\u5316\u7684,\u56e0\u6b64\u603b\u53ef\u4ee5\u628a\u67d0\u4e2a\u65b9\u6cd5\u7684\u6240\u6709\u7684\u5f02\u5e38\u5904\u7406\u5668\u90fd\u6309\u5e8f\u6392\u5217\u5230\u4e00\u4e2a\u8868\u4e2d,\u5bf9\u4efb\u610f\u53ef\u80fd\u7684\u7a0b\u5e8f\u8ba1\u6570\u5668\u7684\u503c,\u90fd\u53ef\u4ee5\u7528\u7ebf\u6027\u7684\u987a\u5e8f\u627e\u5230\u5408\u9002\u7684\u5f02\u5e38\u5904\u7406\u5757,\u4ee5\u5904\u7406\u5728\u8be5\u7a0b\u5e8f\u8ba1\u6570\u5668\u503c\u4e0b\u53d1\u751f\u7684\u5f02\u5e38\u60c5\u51b5\u3002", "\n\u00b7\u5982\u679c\u627e\u4e0d\u5230\u5339\u914d\u7684catch\u5b50\u53e5,\u90a3\u4e48\u5f53\u524d\u65b9\u6cd5\u5f97\u5230\u4e00\u4e2a\u201d\u672a\u622a\u83b7\u5f02\u5e38\u201d\u7684\u7ed3\u679c\u5e76\u8fd4\u56de\u5230\u5f53\u524d\u65b9\u6cd5\u7684\u8c03\u7528\u8005,\u597d\u50cf\u5f02\u5e38\u521a\u521a\u5728\u5176\u8c03\u7528\u8005\u4e2d\u53d1\u751f\u4e00\u6837\u3002\u5982\u679c\u5728\u8c03\u7528\u8005\u4e2d\u4ecd\u7136\u6ca1\u6709\u627e\u5230\u76f8\u5e94\u7684\u5f02\u5e38\u5904\u7406\u5757,\u90a3\u4e48\u8fd9\u79cd\u9519\u8bef\u4f20\u64ad\u5c06\u88ab\u7ee7\u7eed\u4e0b\u53bb\u3002\u5982\u679c\u9519\u8bef\u88ab\u4f20\u64ad\u5230\u6700\u9876\u5c42,\u90a3\u4e48\u7cfb\u7edf\u5c06\u8c03\u7528\u4e00\u4e2a\u7f3a\u7701\u7684\u5f02\u5e38\u5904\u7406\u5757\u3002", "\n@@2\u00a0", "\u00a0", "\nextern char *strcpy(char *dest,char *src); \u7528\u6cd5\uff1a#include <string.h> \u529f\u80fd\uff1a\u628asrc\u6240\u6307\u00a0", "\u590d\u5236\u5230dest\u6240\u6307\u7684\u6570\u7ec4\u4e2d\u3002 \u8bf4\u660e\uff1asrc\u548cdest\u6240\u6307\u5185\u5b58\u533a\u57df\u4e0d\u53ef\u4ee5\u91cd\u53e0\u4e14dest\u5fc5\u987b\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u6765\u5bb9\u7eb3src\u7684\u5b57\u7b26\u4e32\u3002 \u8fd4\u56de\u6307\u5411dest\u7684\u6307\u9488\u3002 char * strcpy(char * strDest,const char * strSrc)", "\n{", "\nif ((strDest==NULL)||(strSrc==NULL)) //[1]", "\nthrow \u201cInvalid argument(s)\u201d; //[2]", "\nchar * strDestCopy=strDest; //[3]", "\nwhile ((*strDest++=*strSrc++)!=\u2019\\0\u2032); //[4]", "\nreturn strDestCopy;", "\n}", "@@3", "\nJVM\u5728\u6574\u4e2ajdk\u4e2d\u5904\u4e8e\u6700\u5e95\u5c42\uff0c\u8d1f\u8d23\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u7684\u4ea4\u4e92\uff0c\u7528\u6765\u5c4f\u853d\u64cd\u4f5c\u7cfb\u7edf\u73af\u5883\uff0c\u63d0\u4f9b\u4e00\u4e2a\u5b8c\u6574\u7684java\u8fd0\u884c\u73af\u5883\uff0c\u56e0\u6b64\u4e5f\u5c31", "\n\u865a\u62df\u4e86\u8ba1\u7b97\u673a\uff0c\u64cd\u4f5c\u7cfb\u7edf\u88c5\u5165JVM\u662f\u901a\u8fc7jdk\u4e2d\u7684java.exe\u6765\u5b8c\u6210\u7684\uff0c\u901a\u8fc7\u4ee5\u4e0b4\u6b65\uff1a", "\n1\uff0c\u521b\u5efaJVM\u88c5\u5728\u73af\u5883\u548c\u914d\u7f6e", "\n2\uff0c\u88c5\u8f7dJVM.dll", "\n3,\u521d\u59cb\u5316JVM.dll\u5e76\u6302\u8f7d\u5230JNIENV(JNI\u8c03\u7528\u63a5\u53e3)\u5b9e\u4f8b\u3002", "\n4\uff0c\u8c03\u7528JNIENV\u5b9e\u4f8b\uff0c\u88c5\u8f7d\u5e76\u5904\u7406class\u7c7b\u3002", "@@4 volatile", "\n@@5 SIZEOF", "\n@@6 \u51fd\u6570\u6307\u9488\u3001\u6307\u9488\u51fd\u6570\u3001\u6570\u7ec4\u6307\u9488\u3001\u6307\u9488\u6570\u7ec4", "\n@@7 STL = Standard Template Library vector,map", "\n@@8 \u6b63\u5219\u8868\u8fbe\u5f0f", "\n@@9 SQL", "\n@@10 \u6307\u9488\u6570\u7ec4\u3001\u6570\u7ec4\u6307\u9488", "\n@@11 #define Max(a,b) ( a-b)?a:b", "\n@@ 12 ping\u8fc7\u7a0b", "\n@@ 13\u64cd\u4f5c\u7cfb\u7edflru\u5b58\u50a8\u7b97\u6cd5", "\n@@ 14\u6df1\u5ea6\u5e7f\u5ea6", "\n", "\u00a0", "\u00a0", "\n\u5185\u5b58\u6ea2\u51fa\u6307\u4f60\u7533\u8bf7\u4e8610\u4e2a\u5b57\u8282\u7684\u7a7a\u95f4\uff0c\u4f46\u662f\u4f60\u5728\u8fd9\u4e2a\u7a7a\u95f4\u5199\u516511\u6216\u4ee5\u4e0a\u5b57\u8282\u7684\u6570\u636e\uff0c\u5c31\u662f\u6ea2\u51fa\u5185\u5b58\u6cc4\u6f0f\u6307\u4f60\u7528malloc\u6216new\u7533\u8bf7\u4e86\u4e00\u5757\u5185\u5b58\uff0c\u4f46\u662f\u6ca1\u6709\u901a\u8fc7free\u6216delete\u5c06\u5185\u5b58\u91ca\u653e\uff0c\u5bfc\u81f4\u8fd9\u5757\u5185\u5b58\u4e00\u76f4\u5904\u4e8e\u5360\u7528\u72b6\u6001", "\u5185\u5b58\u6cc4\u9732\u662f\u6307\u7a0b\u5e8f\u4e2d\u95f4\u52a8\u6001\u5206\u914d\u4e86\u5185\u5b58\uff0c\u4f46\u662f\u5728\u7a0b\u5e8f\u7ed3\u675f\u65f6\u6ca1\u6709\u91ca\u653e\u8fd9\u90e8\u5206\u5185\u5b58\uff0c\u4ece\u800c\u9020\u6210\u90a3\u4e00\u90e8\u5206\u5185\u5b58\u4e0d\u53ef\u7528\u7684\u60c5\u51b5\uff0c\u91cd\u8d77\u8ba1\u7b97\u673a\u53ef\u4ee5\u89e3\u51b3\uff0c\u4f46\u662f\u4e5f\u6709\u53ef\u80fd\u518d\u6b21\u53d1\u751f\u5185\u5b58\u6cc4\u9732\uff0c\u5185\u5b58\u6cc4\u9732\u548c\u786c\u4ef6\u6ca1\u6709\u5173\u7cfb\uff0c\u5b83\u662f\u7531\u8f6f\u4ef6\u5f15\u8d77\u7684\u3002", "\n\u4e00\u822c\u6211\u4eec\u5e38\u8bf4\u7684\u5185\u5b58\u6cc4\u6f0f\u662f\u6307\u5806\u5185\u5b58\u7684\u6cc4\u6f0f\u3002\u5806\u5185\u5b58\u662f\u6307\u7a0b\u5e8f\u4ece\u5806\u4e2d\u5206\u914d\u7684\uff0c\u5927\u5c0f\u4efb\u610f\u7684\uff08\u5185\u5b58\u5757\u7684\u5927\u5c0f\u53ef\u4ee5\u5728\u7a0b\u5e8f\u8fd0\u884c\u671f\u51b3\u5b9a\uff09\uff0c\u4f7f\u7528\u5b8c\u540e\u5fc5\u987b\u663e\u793a\u91ca\u653e\u7684\u5185\u5b58\u3002\u5e94\u7528\u7a0b\u5e8f\u4e00\u822c\u4f7f\u7528malloc\uff0crealloc\uff0cnew\u7b49\u51fd\u6570\u4ece\u5806\u4e2d\u5206\u914d\u5230\u4e00\u5757\u5185\u5b58\uff0c\u4f7f\u7528\u5b8c\u540e\uff0c\u7a0b\u5e8f\u5fc5\u987b\u8d1f\u8d23\u76f8\u5e94\u7684\u8c03\u7528free\u6216delete\u91ca\u653e\u8be5\u5185\u5b58\u5757\uff0c\u5426\u5219\uff0c\u8fd9\u5757\u5185\u5b58\u5c31\u4e0d\u80fd\u88ab\u518d\u6b21\u4f7f\u7528\uff0c\u6211\u4eec\u5c31\u8bf4\u8fd9\u5757\u5185\u5b58\u6cc4\u6f0f\u4e86\u3002", "\nchar* p = \u201c12345 \u201c;", "printf( \u201c%c \u201c, *p++);", "\nprintf( \u201c%c \u201c, *p++);", "\u4e3a\u4ec0\u4e48\u8f93\u51fa 1, 2, \u800c\u4e0d\u662f 2, 3 \uff1f", "\n\u7b54\uff1a", "\n\u5bf9\u4e8e\u8868\u8fbe\u5f0f\u4e2d\u7684++\u800c\u8a00\uff0c\u8bb0\u4f4f\u4e00\u4e2a\u987a\u5e8f\uff1a", "\u540e\u7f6e++\u5728\u8868\u8fbe\u5f0f\u540e\u6c42\u503c", "\n\u524d\u7f6e++\u5728\u8868\u8fbe\u5f0f\u524d\u6c42\u503c", "\u56e0\u6b64\u9898\u76ee\u53d8\u4e3a\uff1a", "char* p = \u201c12345 \u201c;", "printf( \u201c%c \u201c, *p);", "\np++;", "\nprintf( \u201c%c \u201c, *p);", "\np++;", "\n\u57fa\u7c7b\u6307\u9488\u3001\u6d3e\u751f\u7c7b\u6307\u9488\u4e0e\u4ed6\u4eec\u7684\u5173\u7cfb", "\u57fa\u7c7b\u6307\u9488\u53ef\u4ee5\u6307\u5411\u57fa\u7c7b\u5bf9\u8c61\uff1b", "\n\u6d3e\u751f\u7c7b\u6307\u9488\u53ef\u4ee5\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff1b", "\n\u57fa\u7c7b\u6307\u9488\u53ef\u4ee5\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff08\u65e0\u9700\u5f3a\u5236\u8f6c\u6362\uff09\uff0c\u4f46\u53ea\u80fd\u5f15\u7528\u57fa\u7c7b\u4e2d\u6709\u7684\u6210\u5458\uff1b", "\n\u6d3e\u751f\u7c7b\u6307\u9488\u6307\u5411\u57fa\u7c7b\u5bf9\u8c61\uff0c\u4f1a\u5f15\u53d1\u8bed\u6cd5\u9519\u8bef\u3002\u4f46\u6d3e\u751f\u7c7b\u6307\u9488\u901a\u8fc7\u5f3a\u5236\u8f6c\u6362\u53ef\u6307\u5411\u57fa\u7c7b\u5bf9\u8c61\u3002\u53ef\u662f\u8be5\u52a8\u4f5c\u5f88\u5371\u9669\uff1a\u82e5\u5f15\u7528\u5bf9\u8c61\u4e2d\u4e0d\u6751\u5728\u7684\u6d3e\u751f\u7c7b\u6210\u5458\uff0c\u4f1a\u5f97\u5230\u9519\u8bef\u7684\u7ed3\u679c\u3002", "\n", "\n", "\nmalloc/free\u662fc/C++\u8bed\u8a00\u7684\u6807\u51c6\u5e93\u51fd\u6570\uff1bnew/delete\u662fc++\u7684\u8fd0\u7b97\u7b26\uff0c\u90fd\u53ef\u4ee5\u7528\u7533\u8bf7\u52a8\u6001\u5185\u5b58\u548c\u91ca\u653e\u5185\u5b58\u3002", "\n\u5bf9\u4e8e\u975e\u5185\u90e8\u6570\u636e\u7c7b\u578b\u7684\u5bf9\u8c61\u800c\u8a00\uff0c\u5149\u7528malloc/free\u65e0\u6cd5\u6ee1\u8db3\u52a8\u6001\u5bf9\u8c61\u7684\u8981\u6c42\u3002\u5bf9\u8c61\u5728\u521b\u5efa\u662f\u8981\u81ea\u52a8\u6267\u884cConstructor\u51fd\u6570\uff0c\u5bf9\u8c61\u5728\u6d88\u4ea1\u4e4b\u524d\u8981\u81ea\u52a8\u6267\u884cDestructor\u51fd\u6570\u3002\u7531\u4e8emalloc/free\u662f\u5e93\u51fd\u6570\u4e0d\u662f\u8fd0\u7b97\u7b26\uff0c\u4e0d\u5728\u7f16\u8bd1\u5668\u63a7\u5236\u6743\u9650\u4e4b\u5185\uff0c\u4e0d\u80fd\u591f\u628aConstructor\u53caDestructor\u4efb\u52a1\u52a0\u4e8emalloc/free.", "\n", "\n", "\u00a0", "\na=4*5\u2014\u7ed3\u679ca\u4e3a20", "\n(a=4*5,a*2)\u2014\u7ed3\u679c\u4e3aa*2\uff0c\u537340", "\n\u6240\u4ee5\uff0c\u7ed3\u679c\u662f40", "\n", "\u00a0main()", "\n{", "\nprintf(\u201cHello world !\\n\u201d);", "\nint a = 6;", "\nprintf(\u201c\u2014\u2013%d\\n\u201d,a=(2*44,a*3));", "\nsystem(\u201cpause\u201d);", "\n}", "\na\u8f93\u51fa\u4e3a18\uff1b", "\n", "\nmain()", "\n{", "\nprintf(\u201cHello world !\\n\u201d);", "\nint a;", "\nprintf(\u201c\u2014\u2013%d\\n\u201d,a=(2*44,a*34,a*33,a*3));", "\nsystem(\u201cpause\u201d);", "\n}", "\n\u4e3a\u4ec0\u4e48\u6790\u6784\u51fd\u6570\u8981\u58f0\u660e\u6210virtual", "\n\u5bf9\u8c61\u6784\u9020\u7684\u987a\u5e8f\u662f\u5148\u57fa\u7c7b,\u518d\u6d3e\u751f\u7c7b.", "\n\u6790\u6784\u7684\u987a\u5e8f\u662f\u5148\u6d3e\u751f\u7c7b,\u518d\u57fa\u7c7b.", "\n\u5982\u679c\u57fa\u7c7b\u6ca1\u6709\u865a\u51fd\u6570,\u5219\u4e0d\u5b58\u5728\u591a\u6001,\u5728\u7528\u57fa\u7c7b\u6307\u9488/\u5f15\u7528\u7ed1\u5b9a\u5230\u4e00\u4e2a\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6,\u8be5\u5bf9\u8c61\u5c31\u88ab\u5f53\u6210\u4e86\u57fa\u7c7b\u5bf9\u8c61,\u4e5f\u5c31\u662f\u5bf9\u8c61\u88ab\u622a\u65ad\u4e86.", "\n\u6240\u4ee5delete\u57fa\u7c7b\u6307\u9488\u65f6,\u76f4\u63a5\u8c03\u7528\u57fa\u7c7b\u6790\u6784\u51fd\u6570,\u4ece\u800c\u6d3e\u751f\u7c7b\u5bf9\u8c61\u6ca1\u6709\u5f97\u5230\u91ca\u653e.", "\n\u4e3a\u4e86\u4fdd\u8bc1\u5728\u7ee7\u627f\u5173\u7cfb\u4e2d\u4fdd\u8bc1\u6d3e\u751f\u7c7b\u53ef\u4ee5\u6b63\u786e\u7684\u91ca\u653e,\u6240\u4ee5\u901a\u5e38\u628a\u53ef\u80fd\u8981\u88ab\u7ee7\u627f\u7684\u7c7b\u7684\u6790\u6784\u51fd\u6570\u5199\u6210\u865a\u62df\u51fd\u6570(\u6bcf\u4e2a\u7c7b\u90fd\u4f1a\u6709\u6790\u6784\u51fd\u6570).\u9664\u975e\u4f60\u4fdd\u8bc1\u8be5\u7c7b\u4e0d\u4f1a\u88ab\u7ee7\u627f.", "\n\u800c\u5982\u679c\u6709\u5176\u4ed6\u6210\u5458\u51fd\u6570\u5df2\u7ecf\u662f\u865a\u62df\u51fd\u6570\u4e86,\u90a3\u4e48\u6790\u6784\u51fd\u6570\u662f\u5426\u865a\u62df\u90fd\u65e0\u5173\u7d27\u8981\u4e86.", "\nc++\u51fd\u6570\u8c03\u7528\u524d\u5fc5\u987b\u58f0\u660e\u5417", "\n\u65e0\u8bbaC\u8fd8\u662fC++,\u5728\u51fd\u6570\u8c03\u7528\u4e4b\u524d\u5982\u679c\u51fd\u6570\u6ca1\u6709\u5b9a\u4e49,\u90fd\u8981\u5148\u58f0\u660e!", "\n\u53ef\u80fd\u6709\u7684\u7f16\u8bd1\u5668\u6709\u6240\u8c13\u9690\u5f0f\u58f0\u660e\u7684\u8a9e\u6cd5\u3002\u5c31\u662f\u9ed8\u8ba4\u5730\u8ba4\u4e3a\u90a3\u4e2a\u51fd\u6570\u7684\u53c2\u6570\u5c31\u662f\u4f60\u4f20\u7684\u53c2\u6570\uff0c\u5e76\u4e14\u51fd\u6570\u8fd4\u56de int\u3002\u4e0d\u8fc7\u65e0\u8bba\u5982\u4f55\uff0c\u663e\u5f0f\u58f0\u660e\u90fd\u662f\u4e2a\u597d\u4e60\u60ef\uff0c\u4e0d\u4ec5\u7f16\u8bd1\u5668\u4e0d\u7528\u63e3\u6d4b\u51fd\u6570\u7c7b\u578b\uff0c\u800c\u4e14\u770b\u7684\u4eba\u4e5f\u80fd\u770b\u7684\u6e05\u695a\u4e9b\u3002 \u5417"], "title": "C++\u7b14\u8bd5\u7b14\u8bb0"},
{"contents": ["\u67d0\u516c\u53f8\u7b14\u8bd5\u9898", "#include \u201cstdio.h\u201d", "\nvoid print()", "\n{", "\n*", "\n}", "void main()", "\n{", "\n}", "\u5728*\u53f7\u5904\u52a0\u4e00\u6bb5\u4ee3\u7801,\u4f7f\u7a0b\u5e8f\u6253\u5370\u51fa\u201dhello,world\u201d.", "\u5e84sir\u7684\u89e3\u6cd5\uff1a", "//hello.c by MentalDease", "\n#include \u201cstdio.h\u201d", "void print()", "\n{", "\n#pragma comment(linker, \u201c/entry:print\u201d)", "\n#pragma comment(linker, \u201c/SECTION:.text,REW\u201d )", "\nint mainCRTStartup();", "\nvoid main();", "__asm", "\n{", "\nMOV EAX, OFFSET main", "\nMOV BYTE PTR[EAX], 0xB8 //MOV EAX, 0x", "\nMOV DWORD PTR[EAX+1], OFFSET SHOWSTRING", "\nMOV WORD PTR[EAX+5], 0xE0FF // JMP EAX", "\n}", "mainCRTStartup();", "SHOWSTRING:", "\nprintf (\u201ci am MentalDease\\n\u201d);", "\ngetchar();", "}", "void main()", "\n{", "\n}", "\u5f88\u591a\u8fd0\u884c\u5e93\u51fd\u6570\u662f\u5176\u4ed6\u4ee3\u7801\u6267\u884c\u7684\u57fa\u7840\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5fc5\u987b\u5728\u6267\u884c\u7528\u6237\u4ee3\u7801(\u7a0b\u5e8f\u5f00\u53d1\u8005\u7f16\u5199\u7684\u4ee3\u7801)\u4e4b\u524d\u521d\u59cb\u5316\u8fd0\u884c\u5e93\u3002\u6211\u4eec\u77e5\u9053\u7a0b\u5e8f\u662f\u4ece\u5165\u53e3\u51fd\u6570\u5f00\u59cb\u6267\u884c\u7684\uff0c\u6240\u4ee5\u8981\u5728\u5165\u53e3\u51fd\u6570\u5f00\u59cb\u6216\u8005\u4e4b\u524d\u8c03\u7528\u8fd0\u884c\u5e93\u7684\u521d\u59cb\u5316\u51fd\u6570\u3002", "\u4e8b\u5b9e\u4e0a\uff0c\u7f16\u8bd1\u5668\u4f1a\u4e3a\u6bcf\u4e2a\u6a21\u5757\u81ea\u52a8\u63d2\u5165\u4e00\u4e2a\u5165\u53e3\u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u8fdb\u884c\u597d\u5404\u79cd\u521d\u59cb\u5316\u5de5\u4f5c\u4e4b\u540e\u518d\u8c03\u7528\u7528\u6237\u7684\u5165\u53e3\u51fd\u6570\uff0c\u5728\u7528\u6237\u7684\u5165\u53e3\u51fd\u6570\u8fd4\u56de\u4e4b\u540e\u518d\u8fd0\u884c\u81ea\u5df1\u7684\u6e05\u7406\u51fd\u6570\u3002\u8fd9\u4e2a\u7f16\u8bd1\u5668\u63d2\u5165\u7684\u5165\u53e3\u51fd\u6570\u5373\u79f0\u4e3aCRT\uff08C Run Time\uff09\u5165\u53e3\u51fd\u6570\uff1a", "CRTmainStartUp()", "{", "CRT Init();", "Call main();", "CRT CleanUp();", "}", "\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u94fe\u63a5\u5668\u4f1a\u5c06CRT\u5165\u53e3\u51fd\u6570\u6ce8\u518c\u4e3a\u6a21\u5757\u7684\u5165\u53e3\u3002\u4e0d\u8fc7\u8fde\u63a5\u5668\u652f\u6301\u901a\u8fc7/entry:function \u9009\u9879\u6307\u5b9a\u5176\u4ed6\u51fd\u6570\u4f5c\u4e3a\u5165\u53e3\u3002", "#pragma comment(linker, \u201c/entry:print\u201d)", "\u628a\u7a0b\u5e8f\u7684\u5165\u53e3\u70b9\u8bbe\u4e3aprint\u51fd\u6570", "MainCRTStartup\u662fC\u8fd0\u884c\u671f\u5e93\u7684\u521d\u59cb\u5316\u51fd\u6570\u3002CRT\u5806\u5fc5\u987b\u5728\u7528\u6237\u4ee3\u7801\u8c03\u7528\u4e4b\u524d\u88ab\u521d\u59cb\u5316\u597d\uff0c\u5373\u5728\u5165\u53e3\u51fd\u6570\u4e4b\u524d\u8c03\u7528\u8fd0\u884c\u5e93\u7684\u521d\u59cb\u5316\u51fd\u6570\u3002\u6211\u4eec\u5728\u8bbe\u5b9a\u51fd\u6570\u5165\u53e3\u4e3aprint\u51fd\u6570\u4e4b\u540e\uff0c\u5fc5\u987b\u663e\u793a\u8c03\u7528mainCRTStartup\u3002", "main CRT\u5165\u53e3\uff1amainCRTStartup", "WinMain CRT\u5165\u53e3\uff1aWinMainCRTStartup", "DLL\u6a21\u5757\u7684CRT\u5165\u53e3\u51fd\u6570\u662f _DllMainCRTStartup", "CRT \u6e90\u7801 crt0.c \u4e2d\u5305\u542b\u4e86CRT\u5165\u53e3\u51fd\u6570\u7684\u4ee3\u7801,CRT\u5165\u53e3\u51fd\u6570\u7684\u521d\u59cb\u5316\u5de5\u4f5c\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u9879:", "__security_init_cookie \u521d\u59cb\u5316\u5b89\u5168Cookie", "_heap_init \u521b\u5efa\u548c\u521d\u59cb\u5316CRT\u5806", "_mtinit \u521d\u59cb\u5316\u591a\u7ebf\u7a0b\u652f\u6301", "_ioinit \u521d\u59cb\u5316\u4f4e\u7ea7IO", "_cinit \u521d\u59cb\u5316C\u548cC++\u6570\u636e", "\u2026 \u2026"], "title": "\u8bae\u67d0\u516c\u53f8\u4e00\u7b14\u8bd5\u9898"},
{"contents": ["1. C\u4e2dstatic\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f", "\n\uff081\uff09\u9690\u85cf\u3002 \u5f53\u6211\u4eec\u540c\u65f6\u7f16\u8bd1\u591a\u4e2a\u6587\u4ef6\u65f6\uff0c\u6240\u6709\u672a\u52a0static\u524d\u7f00\u7684\u5168\u5c40\u53d8\u91cf\u548c\u51fd\u6570\u90fd\u5177\u6709\u5168\u5c40\u53ef\u89c1\u6027,\u6545\u4f7f\u7528static\u5728\u4e0d\u540c\u7684\u6587\u4ef6\u4e2d\u5b9a\u4e49\u540c\u540d\u51fd\u6570\u548c\u540c\u540d\u53d8\u91cf\uff0c\u800c\u4e0d\u5fc5\u62c5\u5fc3\u547d\u540d\u51b2\u7a81\u3002", "\n\uff082\uff09static\u7684\u7b2c\u4e8c\u4e2a\u4f5c\u7528\u662f\u4fdd\u6301\u53d8\u91cf\u5185\u5bb9\u7684\u6301\u4e45\u3002\u5b58\u50a8\u5728\u9759\u6001\u6570\u636e\u533a\u7684\u53d8\u91cf\u4f1a\u5728\u7a0b\u5e8f\u521a\u5f00\u59cb\u8fd0\u884c\u65f6\u5c31\u5b8c\u6210\u521d\u59cb\u5316\uff0c\u4e5f\u662f\u552f\u4e00\u7684\u4e00\u6b21\u521d\u59cb\u5316\u3002\u5171\u6709\u4e24\u79cd\u53d8\u91cf\u5b58\u50a8\u5728\u9759\u6001\u5b58\u50a8\u533a\uff1a\u5168\u5c40\u53d8\u91cf\u548cstatic\u53d8\u91cf\u3002", "\n\uff083\uff09static\u7684\u7b2c\u4e09\u4e2a\u4f5c\u7528\u662f\u9ed8\u8ba4\u521d\u59cb\u5316\u4e3a0\u3002\u5176\u5b9e\u5168\u5c40\u53d8\u91cf\u4e5f\u5177\u5907\u8fd9\u4e00\u5c5e\u6027\uff0c\u56e0\u4e3a\u5168\u5c40\u53d8\u91cf\u4e5f\u5b58\u50a8\u5728\u9759\u6001\u6570\u636e\u533a\u3002\u5728\u9759\u6001\u6570\u636e\u533a\uff0c\u5185\u5b58\u4e2d\u6240\u6709\u7684\u5b57\u8282\u9ed8\u8ba4\u503c\u90fd\u662f0\u00d700\uff0c\u67d0\u4e9b\u65f6\u5019\u8fd9\u4e00\u7279\u70b9\u53ef\u4ee5\u51cf\u5c11\u7a0b\u5e8f\u5458\u7684\u5de5\u4f5c\u91cf\u3002", "\n2\uff0eC++\u4e2dconst\u6709\u4ec0\u4e48\u7528\uff1f\u4e0d\u8981\u4e00\u542c\u5230const\u5c31\u8bf4\u662f\u5e38\u91cf\uff0c\u8fd9\u6837\u7ed9\u8003\u5b98\u4e00\u79cd\u5728\u548c\u4e00\u4e2a\u5916\u884c\u4ea4\u8c08\u7684\u611f\u89c9\u3002\u5e94\u8be5\u8bf4const\u4fee\u9970\u7684\u5185\u5bb9\u4e0d\u53ef\u6539\u53d8\u5c31\u884c\u4e86\uff0c \u5b9a\u4e49\u5e38\u91cf\u53ea\u662f\u4e00\u79cd\u4f7f\u7528\u65b9\u5f0f\u800c\u5df2\uff0c\u8fd8\u6709const\u6570\u636e\u6210\u5458\uff0cconst\u53c2\u6570\uff0c const\u8fd4\u56de\u503c\uff0c const\u6210\u5458\u51fd\u6570\u7b49, \u88abconst\u4fee\u9970\u7684\u4e1c\u897f\u90fd\u53d7\u5230\u5f3a\u5236\u4fdd\u62a4\uff0c\u53ef\u4ee5\u9884\u9632\u610f\u5916\u7684\u53d8\u52a8\uff0c\u80fd\u63d0\u9ad8\u7a0b\u5e8f\u7684\u5065\u58ee\u6027\u3002", "3. C\u4e0eC++\u5404\u81ea\u662f\u5982\u4f55\u5b9a\u4e49\u5e38\u91cf\u7684\uff1f\u6709\u4ec0\u4e48\u4e0d\u540c\uff1fC\u4e2d\u662f\u4f7f\u7528\u5b8f#define\u5b9a\u4e49\uff0c C++\u4f7f\u7528\u66f4\u597d\u7684const\u6765\u5b9a\u4e49\u3002", "\n\u533a\u522b\uff1a1\uff09const\u662f\u6709\u6570\u636e\u7c7b\u578b\u7684\u5e38\u91cf\uff0c\u800c\u5b8f\u5e38\u91cf\u6ca1\u6709\uff0c\u7f16\u8bd1\u5668\u53ef\u4ee5\u5bf9\u524d\u8005\u8fdb\u884c\u9759\u6001\u7c7b\u578b\u5b89\u5168\u68c0\u67e5\uff0c\u5bf9\u540e\u8005\u4ec5\u662f\u5b57\u7b26\u66ff\u6362\uff0c\u6ca1\u6709\u7c7b\u578b\u5b89\u5168\u68c0\u67e5\uff0c\u800c\u4e14\u5728\u5b57\u7b26\u66ff\u6362\u65f6\u53ef\u80fd\u4f1a\u4ea7\u751f\u610f\u6599\u4e0d\u5230\u7684\u9519\u8bef\uff08\u8fb9\u9645\u6548\u5e94\uff09\u30022\uff09\u6709\u4e9b\u7f16\u8bd1\u5668\u53ef\u4ee5\u5bf9const\u5e38\u91cf\u8fdb\u884c\u8c03\u8bd5\uff0c \u4e0d\u80fd\u5bf9\u5b8f\u8c03\u8bd5\u3002", "\n4. \u65e2\u7136C++\u4e2d\u6709\u66f4\u597d\u7684const\u4e3a\u4ec0\u4e48\u8fd8\u8981\u4f7f\u7528\u5b8f\uff1fconst\u65e0\u6cd5\u4ee3\u66ff\u5b8f\u4f5c\u4e3a\u536b\u54e8\u6765\u9632\u6b62\u6587\u4ef6\u7684\u91cd\u590d\u5305\u542b\u3002", "\n5. C++\u4e2d\u5f15\u7528\u548c\u6307\u9488\u7684\u533a\u522b?\u5f15\u7528\u662f\u5bf9\u8c61\u7684\u522b\u540d, \u64cd\u4f5c\u5f15\u7528\u5c31\u662f\u64cd\u4f5c\u8fd9\u4e2a\u5bf9\u8c61, \u5fc5\u987b\u5728\u521b\u5efa\u7684\u540c\u65f6\u6709\u6548\u5f97\u521d\u59cb\u5316(\u5f15\u7528\u4e00\u4e2a\u6709\u6548\u7684\u5bf9\u8c61, \u4e0d\u53ef\u4e3aNULL), \u521d\u59cb\u5316\u5b8c\u6bd5\u5c31\u518d\u4e5f\u4e0d\u53ef\u6539\u53d8, \u5f15\u7528\u5177\u6709\u6307\u9488\u7684\u6548\u7387, \u53c8\u5177\u6709\u53d8\u91cf\u4f7f\u7528\u7684\u65b9\u4fbf\u6027\u548c\u76f4\u89c2\u6027, \u5728\u8bed\u8a00\u5c42\u9762\u4e0a\u5f15\u7528\u548c\u5bf9\u8c61\u7684\u7528\u6cd5\u4e00\u6837, \u5728\u4e8c\u8fdb\u5236\u5c42\u9762\u4e0a\u5f15\u7528\u4e00\u822c\u90fd\u662f\u901a\u8fc7\u6307\u9488\u6765\u5b9e\u73b0\u7684, \u53ea\u662f\u7f16\u8bd1\u5668\u5e2e\u6211\u4eec\u5b8c\u6210\u4e86\u8f6c\u6362. \u4e4b\u6240\u4ee5\u4f7f\u7528\u5f15\u7528\u662f\u4e3a\u4e86\u7528\u9002\u5f53\u7684\u5de5\u5177\u505a\u6070\u5982\u5176\u5206\u7684\u4e8b, \u4f53\u73b0\u4e86\u6700\u5c0f\u7279\u6743\u539f\u5219.", "\n6. \u8bf4\u4e00\u8bf4C\u4e0eC++\u7684\u5185\u5b58\u5206\u914d\u65b9\u5f0f\uff1f1\uff09\u4ece\u9759\u6001\u5b58\u50a8\u533a\u57df\u5206\u914d\u3002\u5185\u5b58\u5728\u7a0b\u5e8f\u7f16\u8bd1\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u5206\u914d\u597d\uff0c\u8fd9\u5757\u5185\u5b58\u5728\u7a0b\u5e8f\u7684\u6574\u4e2a\u8fd0\u884c\u671f\u95f4\u90fd\u5b58\u5728\uff0c\u5982\u5168\u5c40\u53d8\u91cf\uff0cstatic\u53d8\u91cf\u30022\uff09\u5728\u6808\u4e0a\u521b\u5efa\u3002\u5728\u6267\u884c\u51fd\u6570\u65f6\uff0c\u51fd\u6570\u5185\u5c40\u90e8\u53d8\u91cf\u7684\u5b58\u50a8\u5355\u5143\u90fd\u53ef\u4ee5\u5728\u6808\u4e0a\u521b\u5efa\uff0c\u51fd\u6570\u6267\u884c\u7ed3\u675f\u65f6\u8fd9\u4e9b\u5b58\u50a8\u5355\u5143\u81ea\u52a8\u88ab\u91ca\u653e\u3002\u6808\u5185\u5b58\u5206\u914d\u8fd0\u7b97\u5185\u7f6e\u4e8e\u5904\u7406\u5668\u7684\u6307\u4ee4\u96c6\u4e2d\uff0c\u6548\u7387\u5f88\u9ad8\uff0c\u4f46\u662f\u5206\u914d\u7684\u5185\u5b58\u5bb9\u91cf\u6709\u9650\u30023\uff09\u4ece\u5806\u4e0a\u5206\u914d\uff08\u52a8\u6001\u5185\u5b58\u5206\u914d\uff09\u7a0b\u5e8f\u5728\u8fd0\u884c\u7684\u65f6\u5019\u7528malloc\u6216new\u7533\u8bf7\u4efb\u610f\u591a\u5c11\u7684\u5185\u5b58\uff0c\u7a0b\u5e8f\u5458\u8d1f\u8d23\u5728\u4f55\u65f6\u7528free\u6216delete\u91ca\u653e\u5185\u5b58\u3002\u52a8\u6001\u5185\u5b58\u7684\u751f\u5b58\u671f\u81ea\u5df1\u51b3\u5b9a\uff0c\u4f7f\u7528\u975e\u5e38\u7075\u6d3b\u3002", "\n7. new/delete \u4e0e malloc()/free() \u7684\u533a\u522b?malloc() \u4e0e free() \u662fC\u8bed\u8a00\u7684\u6807\u51c6\u5e93\u51fd\u6570, new/delete \u662fC++\u7684\u8fd0\u7b97\u7b26, \u4ed6\u4eec\u90fd\u53ef\u4ee5\u7528\u6765\u7533\u8bf7\u548c\u91ca\u653e\u5185\u5b58, malloc()\u548cfree()\u4e0d\u5728\u7f16\u8bd1\u5668\u63a7\u5236\u6743\u9650\u4e4b\u5185, \u4e0d\u80fd\u628a\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u7684\u4efb\u52a1\u5f3a\u52a0\u7ed9\u4ed6\u4eec.", "\n8. #include<a.h>\u548c#include\u201ca.h\u201d \u6709\u4ec0\u4e48\u533a\u522b?\u7b54\uff1a\u5bf9\u4e8e#include <a.h> \uff0c\u7f16\u8bd1\u5668\u4ece\u6807\u51c6\u5e93\u8def\u5f84\u5f00\u59cb\u641c\u7d22 a.h\u5bf9\u4e8e#include \u201ca.h\u201d \uff0c\u7f16\u8bd1\u5668\u4ece\u7528\u6237\u7684\u5de5\u4f5c\u8def\u5f84\u5f00\u59cb\u641c\u7d22 a.h", "\n9. \u5728C++ \u7a0b\u5e8f\u4e2d\u8c03\u7528\u88ab C\u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u7684\u51fd\u6570\uff0c\u4e3a\u4ec0\u4e48\u8981\u52a0 extern \u201cC\u201d\uff1f C++\u8bed\u8a00\u652f\u6301\u51fd\u6570\u91cd\u8f7d\uff0cC\u8bed\u8a00\u4e0d\u652f\u6301\u51fd\u6570\u91cd\u8f7d\u3002\u51fd\u6570\u88abC++\u7f16\u8bd1\u540e\u5728\u5e93\u4e2d\u7684\u540d\u5b57\u4e0eC\u8bed\u8a00\u7684\u4e0d\u540c\u3002\u5047\u8bbe\u67d0\u4e2a\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a void foo(int x, int y);\u8be5\u51fd\u6570\u88abC\u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u5728\u5e93\u4e2d\u7684\u540d\u5b57\u4e3a_foo\uff0c\u800cC++\u7f16\u8bd1\u5668\u5219\u4f1a\u4ea7\u751f\u50cf_foo_int_int\u4e4b\u7c7b\u7684\u540d\u5b57\u3002C++\u63d0\u4f9b\u4e86C\u8fde\u63a5\u4ea4\u6362\u6307\u5b9a\u7b26\u53f7extern\u201cC\u201d\u6765\u89e3\u51b3\u540d\u5b57\u5339\u914d\u95ee\u9898\u3002", "\n10. C++\u4e2d\u7684\u4ec0\u4e48\u662f\u591a\u6001\u6027\uff1f \u662f\u5982\u4f55\u5b9e\u73b0\u7684\uff1f\u591a\u6001\u6027\u662f\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u7ee7\u6570\u636e\u62bd\u8c61\u548c\u7ee7\u627f\u4e4b\u540e\u7684\u7b2c\u4e09\u4e2a\u57fa\u672c\u7279\u5f81\u3002\u5b83\u662f\u5728\u8fd0\u884c\u65f6\u51fa\u73b0\u7684\u591a\u6001\u6027\u901a\u8fc7\u6d3e\u751f\u7c7b\u548c\u865a\u51fd\u6570\u5b9e\u73b0\u3002\u57fa\u7c7b\u548c\u6d3e\u751f\u7c7b\u4e2d\u4f7f\u7528\u540c\u6837\u7684\u51fd\u6570\u540d, \u5b8c\u6210\u4e0d\u540c\u7684\u64cd\u4f5c\u5177\u4f53\u5b9e\u73b0\u76f8\u9694\u79bb\u7684\u53e6\u4e00\u7c7b\u63a5\u53e3\uff0c\u5373\u628a\u201c w h a t\u201d\u4ece\u201ch o w\u201d\u5206\u79bb\u5f00\u6765\u3002\u591a\u6001\u6027\u63d0\u9ad8\u4e86\u4ee3\u7801\u7684\u7ec4\u7ec7\u6027\u548c\u53ef\u8bfb\u6027\uff0c\u865a\u51fd\u6570\u5219\u6839\u636e\u7c7b\u578b\u7684\u4e0d\u540c\u6765\u8fdb\u884c\u4e0d\u540c\u7684\u9694\u79bb\u3002", "\n11. \u4ec0\u4e48\u662f\u52a8\u6001\u7279\u6027?\u5728\u7edd\u5927\u591a\u6570\u60c5\u51b5\u4e0b, \u7a0b\u5e8f\u7684\u529f\u80fd\u662f\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u5c31\u786e\u5b9a\u4e0b\u6765\u7684, \u6211\u4eec\u79f0\u4e4b\u4e3a\u9759\u6001\u7279\u6027. \u53cd\u4e4b, \u5982\u679c\u7a0b\u5e8f\u7684\u529f\u80fd\u662f\u5728\u8fd0\u884c\u65f6\u523b\u624d\u80fd\u786e\u5b9a\u4e0b\u6765\u7684, \u5219\u79f0\u4e4b\u4e3a\u52a8\u6001\u7279\u6027\u3002C++\u4e2d, \u865a\u51fd\u6570\uff0c\u62bd\u8c61\u57fa\u7c7b\uff0c \u52a8\u6001\u7ed1\u5b9a\u548c\u591a\u6001\u6784\u6210\u4e86\u51fa\u8272\u7684\u52a8\u6001\u7279\u6027\u3002", "\n12\uff0e\u4ec0\u4e48\u662f\u5c01\u88c5?C++\u4e2d\u662f\u5982\u4f55\u5b9e\u73b0\u7684\uff1f\u5c01\u88c5\u6765\u6e90\u4e8e\u4fe1\u606f\u9690\u85cf\u7684\u8bbe\u8ba1\u7406\u5ff5\uff0c \u662f\u901a\u8fc7\u7279\u6027\u548c\u884c\u4e3a\u7684\u7ec4\u5408\u6765\u521b\u5efa\u65b0\u6570\u636e\u7c7b\u578b\u8ba9\u63a5\u53e3\u4e0e\u5177\u4f53\u5b9e\u73b0\u76f8\u9694\u79bb\u3002C++\u4e2d\u662f\u901a\u8fc7\u7c7b\u6765\u5b9e\u73b0\u7684, \u4e3a\u4e86\u5c3d\u91cf\u907f\u514d\u67d0\u4e2a\u6a21\u5757\u7684\u884c\u4e3a\u5e72\u6270\u540c\u4e00\u7cfb\u7edf\u4e2d\u7684\u5176\u5b83\u6a21\u5757,\u5e94\u8be5\u8ba9\u6a21\u5757\u4ec5\u4ec5\u516c\u5f00\u5fc5\u987b\u8ba9\u5916\u754c\u77e5\u9053\u7684\u63a5\u53e3.", "\n13. \u4ec0\u4e48\u662fRTTI?RTTI\u4e8b\u6307\u8fd0\u884c\u65f6\u7c7b\u578b\u8bc6\u522b\uff08Run-time type identification\uff09\u5728\u53ea\u6709\u4e00\u4e2a\u6307\u5411\u57fa\u7c7b\u7684\u6307\u9488\u6216\u5f15\u7528\u65f6\u786e\u5b9a\u4e00\u4e2a\u5bf9\u8c61\u7684\u51c6\u786e\u7c7b\u578b\u3002", "\n14. \u4ec0\u4e48\u662f\u62f7\u8d1d\u6784\u9020\u51fd\u6570?\u5b83\u662f\u5355\u4e2a\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\uff0c\u5176\u53c2\u6570\u662f\u4e0e\u5b83\u540c\u5c5e\u4e00\u7c7b\u7684\u5bf9\u8c61\u7684(\u5e38)\u5f15\u7528\uff1b\u7c7b\u5b9a\u4e49\u4e2d\uff0c\u5982\u679c\u672a\u63d0\u4f9b\u81ea\u5df1\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0cC++\u63d0\u4f9b\u4e00\u4e2a\u9ed8\u8ba4\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u8be5\u9ed8\u8ba4\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u5b8c\u6210\u4e00\u4e2a\u6210\u5458\u5230\u4e00\u4e2a\u6210\u5458\u7684\u62f7\u8d1d", "\n15. \u4ec0\u4e48\u662f\u6df1\u6d45\u62f7\u8d1d?\u6d45\u62f7\u8d1d\u662f\u521b\u5efa\u4e86\u4e00\u4e2a\u5bf9\u8c61\u7528\u4e00\u4e2a\u73b0\u6210\u7684\u5bf9\u8c61\u521d\u59cb\u5316\u5b83\u7684\u65f6\u5019\u53ea\u662f\u590d\u5236\u4e86\u6210\u5458(\u7b80\u5355\u8d4b\u503c)\u800c\u6ca1\u6709\u62f7\u8d1d\u5206\u914d\u7ed9\u6210\u5458\u7684\u8d44\u6e90(\u5982\u7ed9\u5176\u6307\u9488\u53d8\u91cf\u6210\u5458\u5206\u914d\u4e86\u52a8\u6001\u5185\u5b58); \u6df1\u62f7\u8d1d\u662f\u5f53\u4e00\u4e2a\u5bf9\u8c61\u521b\u5efa\u65f6\uff0c\u5982\u679c\u5206\u914d\u4e86\u8d44\u6e90\uff0c\u5c31\u9700\u8981\u5b9a\u4e49\u81ea\u5df1\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u4f7f\u4e4b\u4e0d\u4f46\u62f7\u8d1d\u6210\u5458\u4e5f\u62f7\u8d1d\u5206\u914d\u7ed9\u5b83\u7684\u8d44\u6e90.", "\n16\uff0e\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u4f18\u70b9?\u5f00\u53d1\u65f6\u95f4\u77ed, \u6548\u7387\u9ad8, \u53ef\u9760\u6027\u9ad8\u3002\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u7f16\u7801\u5177\u6709\u9ad8\u53ef\u91cd\u7528\u6027\uff0c\u53ef\u4ee5\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5927\u91cf\u91c7\u7528\u6210\u719f\u7684\u7c7b\u5e93\uff08\u5982STL\uff09,\u4ece\u800c\u867d\u77ed\u4e86\u5f00\u53d1\u65f6\u95f4\uff0c\u8f6f\u4ef6\u6613\u4e8e\u7ef4\u62a4\u548c\u5347\u7ea7\u3002"], "title": "c/c++ \u7a0b\u5e8f\u5458\u7b14\u8bd5\u9762\u8bd5\u9898\u578b"},
{"contents": ["\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\nDefaultassignment operator handles assigning one object to another of the same class.Member to member copy (shallow copy)", "\n", "\nThe__inline keyword tells the compiler to substitute the code within the functiondefinition for every instance of a function call. However, substitution occursonly at the compiler\u2019s discretion. For example, the compiler does not inline afunction if its address is taken or if it is too large to inline.", "\n", "\nUsingvirtual destructors, you can destroy objects without knowing their type \u2013 thecorrect destructor for the object is invoked using the virtual functionmechanism. Note that destructors can also be declared as pure virtual functionsfor abstract classes.", "\nifsomeone will derive from your class, and if someone will say \u201cnewDerived\u201d, where \u201cDerived\u201d is derived from your class, and ifsomeone will say delete p, where the actual object\u2019s type is\u201dDerived\u201d but the pointer p\u2019s type is your class.", "\n", "\nMultipleInheritance is the process whereby a child can be derived from more than oneparent class. The advantage of multiple inheritance is that it allows a classto inherit the functionality of more than one base class thus allowing formodeling of complex relationships. The disadvantage of multiple inheritance isthat it can lead to a lot of confusion(ambiguity) when two base classesimplement a method with the same name.", "\n", "\nTheaccess privileges in C++ are private, public and protected. The default accesslevel assigned to members of a class is private. Private members of a class areaccessible only within the class and by friends of the class. Protected membersare accessible by the class itself and it\u2019s sub-classes. Public members of a classcan be accessed by anyone.", "\n", "\n\u2026\u2026\u2026\u2026\u2026\u2026"], "title": "\u4e00\u6b21\u5931\u8d25\u7684\u7b14\u8bd5:java++c++"},
{"contents": ["1.new \u3001 delete \u3001 malloc \u3001 free \u5173\u7cfb", "delete \u4f1a\u8c03\u7528\u5bf9\u8c61\u7684\u6790\u6784\u51fd\u6570 , \u548c new \u5bf9\u5e94 free \u53ea\u4f1a\u91ca\u653e\u5185\u5b58\uff0c new \u8c03\u7528\u6784\u9020\u51fd\u6570\u3002 malloc \u4e0e free \u662f C++/C \u8bed\u8a00\u7684\u6807\u51c6\u5e93\u51fd\u6570\uff0c new/delete \u662f C++ \u7684\u8fd0\u7b97\u7b26\u3002\u5b83\u4eec\u90fd\u53ef\u7528\u4e8e\u7533\u8bf7\u52a8\u6001\u5185\u5b58\u548c\u91ca\u653e\u5185\u5b58\u3002\u5bf9\u4e8e\u975e\u5185\u90e8\u6570\u636e\u7c7b\u578b\u7684\u5bf9\u8c61\u800c\u8a00\uff0c\u5149\u7528 maloc/free \u65e0\u6cd5\u6ee1\u8db3\u52a8\u6001\u5bf9\u8c61\u7684\u8981\u6c42\u3002\u5bf9\u8c61\u5728\u521b\u5efa\u7684\u540c\u65f6\u8981\u81ea\u52a8\u6267\u884c\u6784\u9020\u51fd\u6570\uff0c\u5bf9\u8c61\u5728\u6d88\u4ea1\u4e4b\u524d\u8981\u81ea\u52a8\u6267\u884c\u6790\u6784\u51fd\u6570\u3002\u7531\u4e8e malloc/free \u662f\u5e93\u51fd\u6570\u800c\u4e0d\u662f\u8fd0\u7b97\u7b26\uff0c\u4e0d\u5728\u7f16\u8bd1\u5668\u63a7\u5236\u6743\u9650\u4e4b\u5185\uff0c\u4e0d\u80fd\u591f\u628a\u6267\u884c\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u7684\u4efb\u52a1\u5f3a\u52a0\u4e8e malloc/free \u3002\u56e0\u6b64 C++ \u8bed\u8a00\u9700\u8981\u4e00\u4e2a\u80fd\u5b8c\u6210\u52a8\u6001\u5185\u5b58\u5206\u914d\u548c\u521d\u59cb\u5316\u5de5\u4f5c\u7684\u8fd0\u7b97\u7b26 new \uff0c\u4ee5\u53ca\u4e00\u4e2a\u80fd\u5b8c\u6210\u6e05\u7406\u4e0e\u91ca\u653e\u5185\u5b58\u5de5\u4f5c\u7684\u8fd0\u7b97\u7b26 delete \u3002\u6ce8\u610f new/delete \u4e0d\u662f\u5e93\u51fd\u6570\u3002", "\u603b\u7ed3\uff1anew\u548cdelete\u4f1a\u81ea\u52a8\u8c03\u7528\u5bf9\u8c61\u7684\u6784\u9020\u4e0e\u6790\u6784\u51fd\u6570\u800cmalloc\u4e0efree\u4e0d\u4f1a\uff1b", "new\u548cdelete\u5f0fC++\u8fd0\u7b97\u7b26\uff0c\u800cmalloc\u548cfree\u662fC/C++\u6807\u51c6\u5e93\u51fd\u6570\u3002", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n2.delete \u4e0e delete [] \u533a\u522b", "delete \u53ea\u4f1a\u8c03\u7528\u4e00\u6b21\u6790\u6784\u51fd\u6570\uff0c\u800c delete[] \u4f1a\u8c03\u7528\u6bcf\u4e00\u4e2a\u6210\u5458\u7684\u6790\u6784\u51fd\u6570\u3002\u5728 More Effective C++ \u4e2d\u6709\u66f4\u4e3a\u8be6\u7ec6\u7684\u89e3\u91ca\uff1a\u201c\u5f53 delete \u64cd\u4f5c\u7b26\u7528\u4e8e\u6570\u7ec4\u65f6\uff0c\u5b83\u4e3a\u6bcf\u4e2a\u6570\u7ec4\u5143\u7d20\u8c03\u7528\u6790\u6784\u51fd\u6570\uff0c\u7136\u540e\u8c03\u7528 operatordelete \u6765\u91ca\u653e\u5185\u5b58\u3002\u201d delete \u4e0e New \u914d\u5957\uff0c delete [] \u4e0e new [] \u914d\u5957", "MemTest*mTest1=newMemTest[10];", "MemTest*mTest2=newMemTest;", "int*pInt1=newint[10];", "int*pInt2=newint;", "delete[]pInt1; //-1-", "delete[]pInt2; //-2-", "delete[]mTest1;//-3-", "delete[]mTest2;//-4-", "\u5728 -4- \u5904\u62a5\u9519\u3002", "\u8fd9\u5c31\u8bf4\u660e\uff1a\u5bf9\u4e8e\u5185\u5efa\u7b80\u5355\u6570\u636e\u7c7b\u578b\uff0c delete \u548c delete[] \u529f\u80fd\u662f\u76f8\u540c\u7684\u3002\u5bf9\u4e8e\u81ea\u5b9a\u4e49\u7684\u590d\u6742\u6570\u636e\u7c7b\u578b\uff0c delete \u548c delete[] \u4e0d\u80fd\u4e92\u7528\u3002 delete[] \u5220\u9664\u4e00\u4e2a\u6570\u7ec4\uff0c delete \u5220\u9664\u4e00\u4e2a\u6307\u9488\u7b80\u5355\u6765\u8bf4\uff0c\u7528 new \u5206\u914d\u7684\u5185\u5b58\u7528 delete \u5220\u9664\u7528 new[] \u5206\u914d\u7684\u5185\u5b58\u7528 delete[] \u5220\u9664 delete[] \u4f1a\u8c03\u7528\u6570\u7ec4\u5143\u7d20\u7684\u6790\u6784\u51fd\u6570\u3002\u5185\u90e8\u6570\u636e\u7c7b\u578b\u6ca1\u6709\u6790\u6784\u51fd\u6570\uff0c\u6240\u4ee5\u95ee\u9898\u4e0d\u5927\u3002\u5982\u679c\u4f60\u5728\u7528 delete \u65f6\u6ca1\u7528\u62ec\u53f7\uff0c delete \u5c31\u4f1a\u8ba4\u4e3a\u6307\u5411\u7684\u662f\u5355\u4e2a\u5bf9\u8c61\uff0c\u5426\u5219\uff0c\u5b83\u5c31\u4f1a\u8ba4\u4e3a\u6307\u5411\u7684\u662f\u4e00\u4e2a\u6570\u7ec4\u3002", "\u603b\u7ed3\uff1a delete \u53ea\u4f1a\u8c03\u7528\u4e00\u6b21\u6790\u6784\u51fd\u6570\uff0c\u800c delete[] \u4f1a\u8c03\u7528\u6bcf\u4e00\u4e2a\u6210\u5458\u7684\u6790\u6784\u51fd\u6570\u3002", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n3.C C++ JAVA \u5171\u540c\u70b9\uff0c\u4e0d\u540c\u4e4b\u5904\uff1f", "\u76f8\u540c\u70b9\uff1a\u90fd\u662f\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00", "\n\u4e0d\u540c\u70b9\uff1ac/c++\u662f\u7f16\u8bd1\u578b\u8bed\u8a00\uff0c\u8fd8\u6709\u4e00\u4e9b\u8bed\u8a00\u5b8c\u5168\u662f\u89e3\u91ca\u578b\u7684\uff08\u5982Basie\uff09\uff0c\u800cjava\u65e2\u662f\u7f16\u8bd1\u578b\u7684\u53c8\u662f\u89e3\u91ca\u578b\u7684\u8bed\u8a00", "\nc/c++\u5b58\u5728\u6307\u9488\u8fd0\u7b97\uff0cBasie\u6ca1\u6709\u663e\u793a\u6307\u9488\uff0c\u800cjava\u6709\u6307\u9488\uff0c\u4f46\u53d6\u6d88\u4e86\u6307\u9488\u7684\u8fd0\u7b97", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n4. \u7ee7\u627f\u4f18\u7f3a\u70b9\u3002", "\u7c7b\u7ee7\u627f\u662f\u5728\u7f16\u8bd1\u65f6\u523b\u9759\u6001\u5b9a\u4e49\u7684\uff0c\u4e14\u53ef\u76f4\u63a5\u4f7f\u7528\uff0c\u7c7b\u7ee7\u627f\u53ef\u4ee5\u8f83\u65b9\u4fbf\u5730\u6539\u53d8\u7236\u7c7b\u7684\u5b9e\u73b0\u3002\u4f46\u662f\u7c7b\u7ee7\u627f\u4e5f\u6709\u4e00\u4e9b\u4e0d\u8db3\u4e4b\u5904\u3002\u9996\u5148\uff0c\u56e0\u4e3a\u7ee7\u627f\u5728\u7f16\u8bd1\u65f6\u523b\u5c31\u5b9a\u4e49\u4e86\uff0c\u6240\u4ee5\u65e0\u6cd5\u5728\u8fd0\u884c\u65f6\u523b\u6539\u53d8\u4ece\u7236\u7c7b\u7ee7\u627f\u7684\u5b9e\u73b0\u3002\u66f4\u7cdf\u7684\u662f\uff0c\u7236\u7c7b\u901a\u5e38\u81f3\u5c11\u5b9a\u4e49\u4e86\u5b50\u7c7b\u7684\u90e8\u5206\u884c\u4e3a\uff0c\u7236\u7c7b\u7684\u4efb\u4f55\u6539\u53d8\u90fd\u53ef\u80fd\u5f71\u54cd\u5b50\u7c7b\u7684\u884c\u4e3a\u3002\u5982\u679c\u7ee7\u627f\u4e0b\u6765\u7684\u5b9e\u73b0\u4e0d\u9002\u5408\u89e3\u51b3\u65b0\u7684\u95ee\u9898\uff0c\u5219\u7236\u7c7b\u5fc5\u987b\u91cd\u5199\u6216\u88ab\u5176\u4ed6\u66f4\u9002\u5408\u7684\u7c7b\u66ff\u6362\u3002\u8fd9\u79cd\u4f9d\u8d56\u5173\u7cfb\u9650\u5236\u4e86\u7075\u6d3b\u6027\u5e76\u6700\u7ec8\u9650\u5236\u4e86\u590d\u7528\u6027\u3002", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n5.C++ \u6709\u54ea\u4e9b\u6027\u8d28\uff08\u9762\u5411\u5bf9\u8c61\u7279\u70b9\uff09", "\n\u5c01\u88c5\uff0c\u7ee7\u627f\u548c\u591a\u6001\u3002", "\u5728\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u4e2d\uff0c\u5c01\u88c5\u662f\u5229\u7528\u53ef\u91cd\u7528\u6210\u5206\u6784\u9020\u8f6f\u4ef6\u7cfb\u7edf\u7684\u7279\u6027\uff0c\u5b83\u4e0d\u4ec5\u652f\u6301\u7cfb\u7edf\u7684\u53ef\u91cd\u7528\u6027\uff0c\u800c\u4e14\u8fd8\u6709\u5229\u4e8e\u63d0\u9ad8\u7cfb\u7edf\u7684\u53ef\u6269\u5145\u6027\uff1b\u6d88\u606f\u4f20\u9012\u53ef\u4ee5\u5b9e\u73b0\u53d1\u9001\u4e00\u4e2a\u901a\u7528\u7684\u6d88\u606f\u800c\u8c03\u7528\u4e0d\u540c\u7684\u65b9\u6cd5\uff1b\u5c01\u88c5\u662f\u5b9e\u73b0\u4fe1\u606f\u9690\u853d\u7684\u4e00\u79cd\u6280\u672f\uff0c\u5176\u76ee\u7684\u662f\u4f7f\u7c7b\u7684\u5b9a\u4e49\u548c\u5b9e\u73b0\u5206\u79bb\u3002", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n6. \u5b50\u7c7b\u6790\u6784\u65f6\u8981\u8c03\u7528\u7236\u7c7b\u7684\u6790\u6784\u51fd\u6570\u5417\uff1f", "\n\u6790\u6784\u51fd\u6570\u8c03\u7528\u7684\u6b21\u5e8f\u662f\u5148\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u540e\u57fa\u7c7b\u7684\u6790\u6784\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728\u57fa\u7c7b\u7684\u7684\u6790\u6784\u8c03\u7528\u7684\u65f6\u5019 , \u6d3e\u751f\u7c7b\u7684\u4fe1\u606f\u5df2\u7ecf\u5168\u90e8\u9500\u6bc1\u4e86\u5b9a\u4e49\u4e00\u4e2a\u5bf9\u8c61\u65f6\u5148\u8c03\u7528\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u3001\u7136\u540e\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff1b\u6790\u6784\u7684\u65f6\u5019\u6070\u597d\u76f8\u53cd\uff1a\u5148\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570\u3001\u7136\u540e\u8c03\u7528\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570 JAVA \u65e0\u6790\u6784\u51fd\u6570\u6df1\u62f7\u8d1d\u548c\u6d45\u62f7\u8d1d", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n7. \u591a\u6001\uff0c\u865a\u51fd\u6570\uff0c\u7eaf\u865a\u51fd\u6570", "\u8fd9\u4e48\u4e00\u5927\u5806\u540d\u8bcd\uff0c\u5b9e\u9645\u4e0a\u5c31\u56f4\u7ed5\u4e00\u4ef6\u4e8b\u5c55\u5f00\uff0c\u5c31\u662f\u591a\u6001\uff0c\u5176\u4ed6\u4e09\u4e2a\u540d\u8bcd\u90fd\u662f\u4e3a\u5b9e\u73b0C++\u7684\u591a\u6001\u673a\u5236\u800c\u63d0\u51fa\u7684\u4e00\u4e9b\u89c4\u5219\uff0c\u4e0b\u9762\u5206\u4e24\u90e8\u5206\u4ecb\u7ecd\uff0c\u7b2c\u4e00\u90e8\u5206\u4ecb\u7ecd\u3010\u591a\u6001\u3011\uff0c\u7b2c\u4e8c\u90e8\u5206\u4ecb\u7ecd\u3010\u865a\u51fd\u6570\uff0c\u7eaf\u865a\u51fd\u6570\uff0c\u62bd\u8c61\u7c7b\u3011", "\n\u4e00 \u3010\u591a\u6001\u3011", "\n\u591a\u6001\u7684\u6982\u5ff5 \uff1a\u5173\u4e8e\u591a\u6001\uff0c\u597d\u51e0\u79cd\u8bf4\u6cd5\uff0c\u597d\u7684\u574f\u7684\u90fd\u6709\uff0c\u5206\u522b\u8bf4\u4e00\u4e0b\uff1a", "\n1 \u6307\u540c\u4e00\u4e2a\u51fd\u6570\u7684\u591a\u79cd\u5f62\u6001\u3002", "\n\u4e2a\u4eba\u8ba4\u4e3a\u8fd9\u662f\u4e00\u79cd\u9ad8\u624b\u4e2d\u7684\u9ad8\u624b\u559c\u6b22\u7684\u8bf4\u6cd5\uff0c\u5bf9\u4e8e\u4e00\u822c\u5f00\u53d1\u4eba\u5458\u662f\u4e00\u79cd\u5dee\u7684\u4e0d\u80fd\u518d\u5dee\u7684\u6982\u5ff5\uff0c\u7b80\u76f4\u662f\u5bf9\u4eba\u7684\u8bef\u5bfc\uff0c\u7136\u4eba\u5f88\u5bb9\u6613\u5c31\u9760\u5230\u51fd\u6570\u91cd\u8f7d\u4e0a\u4e86\u3002", "\u4ee5\u4e0b\u662f\u4e2a\u4eba\u8ba4\u4e3a\u89e3\u91ca\u7684\u6bd4\u8f83\u597d\u7684\u4e24\u79cd\u8bf4\u6cd5\uff0c\u610f\u601d\u5927\u4f53\u76f8\u540c\uff1a", "\n2\u591a\u6001\u662f\u5177\u6709\u8868\u73b0\u591a\u79cd\u5f62\u6001\u7684\u80fd\u529b\u7684\u7279\u5f81\uff0c\u5728OO\u4e2d\u662f\u6307\uff0c\u8bed\u8a00\u5177\u6709\u6839\u636e\u5bf9\u8c61\u7684\u7c7b\u578b\u4ee5\u4e0d\u540c\u65b9\u5f0f\u5904\u7406\u4e4b\uff0c\u7279\u522b\u662f\u91cd\u8f7d\u65b9\u6cd5\u548c\u7ee7\u627f\u7c7b\u8fd9\u79cd\u5f62\u5f0f\u7684\u80fd\u529b\u3002", "\n\u8fd9\u79cd\u8bf4\u6cd5\u6709\u70b9\u7ed5\uff0c\u4ed4\u7ec6\u60f3\u60f3\uff0c\u8fd9\u624d\u662fC++\u8981\u544a\u8bc9\u6211\u4eec\u7684\u3002", "3\u591a\u6001\u6027\u662f\u5141\u8bb8\u4f60\u5c06\u7236\u5bf9\u8c61\u8bbe\u7f6e\u6210\u4e3a\u548c\u4e00\u4e2a\u6216\u66f4\u591a\u7684\u4ed6\u7684\u5b50\u5bf9\u8c61\u76f8\u7b49\u7684\u6280\u672f\uff0c\u8d4b\u503c\u4e4b\u540e\uff0c\u7236\u5bf9\u8c61\u5c31\u53ef\u4ee5\u6839\u636e\u5f53\u524d\u8d4b\u503c\u7ed9\u5b83\u7684\u5b50\u5bf9\u8c61\u7684\u7279\u6027\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u8fd0\u4f5c\u3002\u7b80\u5355\u7684\u8bf4\uff0c\u5c31\u662f\u4e00\u53e5\u8bdd\uff1a\u5141\u8bb8\u5c06\u5b50\u7c7b\u7c7b\u578b\u7684\u6307\u9488\u8d4b\u503c\u7ed9\u7236\u7c7b\u7c7b\u578b\u7684\u6307\u9488\u3002\u591a\u6001\u6027\u5728Object Pascal\u548cC++\u4e2d\u90fd\u662f\u901a\u8fc7\u865a\u51fd\u6570\uff08Virtual Function\uff09 \u5b9e\u73b0\u7684\u3002", "\n\u8fd9\u79cd\u8bf4\u6cd5\u770b\u6765\u662f\u53c8\u6613\u61c2\uff0c\u53c8\u5168\u9762\u7684\u4e00\u79cd\uff0c\u5c24\u5176\u662f\u6700\u540e\u4e00\u53e5\uff0c\u76f4\u63a5\u70b9\u51fa\u4e86\u865a\u51fd\u6570\u4e0e\u591a\u6001\u6027\u7684\u5173\u7cfb\uff0c\u5982\u679c\u4f60\u8fd8\u662f\u4e0d\u592a\u61c2\uff0c\u6ca1\u5173\u7cfb\uff0c\u518d\u628a3\u8bfb\u4e24\u904d\uff0c\u6709\u4e2a\u5370\u8c61\uff0c\u5f80\u540e\u770b\u5427\u3002", "\n- \u2013 - \u2013 - \u2013 - \u2013 - \u2013 - \u2013 - \u2013 - \u2013 - \u2013 - \u2013 - \u2013 - \u2013 - \u2013 - \u2013 - \u2013 -", "\n\u4e8c \u3010\u865a\u51fd\u6570\uff0c\u7eaf\u865a\u51fd\u6570\uff0c\u62bd\u8c61\u7c7b\u3011", "\n\u591a\u6001\u624d\u8bf4\u4e86\u4e2a\u6982\u5ff5\uff0c\u6709\u4ec0\u4e48\u7528\u8fd8\u6ca1\u8bf4\u5c31\u8fdb\u5165\u7b2c\u4e8c\u90e8\u5206\u4e86\uff1f\u770b\u770b\u6982\u5ff53\u7684\u6700\u540e\u4e00\u53e5\uff0c\u865a\u51fd\u6570\u5c31\u662f\u4e3a\u591a\u6001\u800c\u751f\u7684\uff0c\u591a\u6001\u7684\u4f5c\u7528\u7684\u4ecb\u7ecd\u548c\u865a\u51fd\u6570\u7b80\u76f4\u5173\u7cfb\u592a\u5927\u4e86\uff0c\u5c31\u653e\u4e00\u8d77\u8bf4\u5427\u3002", "\u591a\u6001\u7684\u4f5c\u7528\uff1a\u7ee7\u627f\u662f\u5b50\u7c7b\u4f7f\u7528\u7236\u7c7b\u7684\u65b9\u6cd5\uff0c\u800c\u591a\u6001\u5219\u662f\u7236\u7c7b\u4f7f\u7528\u5b50\u7c7b\u7684\u65b9\u6cd5\u3002\u8fd9\u662f\u4e00\u53e5\u5927\u767d\u8bdd\uff0c\u591a\u6001\u4ece\u7528\u6cd5\u4e0a\u5c31\u662f\u8981\u7528\u7236\u7c7b(\u786e\u5207\u7684\u8bf4\u662f\u7236\u7c7b\u7684\u5bf9\u8c61\u540d)\u53bb\u8c03\u7528\u5b50\u7c7b\u7684\u65b9\u6cd5\uff0c\u4f8b\u5982\uff1a", "\n\u3010\u4f8b\u4e00\u3011", "\nclass A {", "\npublic:", "\nA() {}", "\n\uff08virtual\uff09 void print() {", "\ncout << \u201cThis is A.\u201d << endl;", "\n}", "\n};", "\nclass B : public A {", "\npublic:", "\nB() {}", "\nvoid print() {", "\ncout << \u201cThis is B.\u201d << endl; \u3000\u3000} \u3000\u3000}; \u3000\u3000int main(int argc, char* argv[]) { \u3000\u3000 B b; A a; a = b;a.print;\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014- make1 // A &a = b; a->print();\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014-make2", "\n//A *a = new B();a->print();\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013make3", "\nreturn 0;", "\n}", "\n\u8fd9\u5c06\u663e\u793a\uff1a", "\nThis is B.", "\n\u5982\u679c\u628avirtual\u53bb\u6389\uff0c\u5c06\u663e\u793a\uff1a", "\nThis is A.", "\n(make1,2,3\u5206\u522b\u662f\u5bf9\u5e94\u517c\u5bb9\u89c4\u5219(\u540e\u9762\u4ecb\u7ecd)\u7684\u4e09\u79cd\u65b9\u5f0f\uff0c\u8c03\u7528\u7ed3\u679c\u662f\u4e00\u6837\u7684)", "\n\u52a0\u4e0avirtual ,\u591a\u6001\u4e86\uff0cB\u4e2d\u7684print\u88ab\u8c03\u7528\u4e86\uff0c\u4e5f\u5c31\u662f\u53ef\u4ee5\u5b9e\u73b0\u7236\u7c7b\u4f7f\u7528\u5b50\u7c7b\u7684\u65b9\u6cd5\u3002", "\n\u5bf9\u591a\u6001\u7684\u4f5c\u7528\u6709\u4e00\u4e2a\u521d\u6b65\u7684\u8ba4\u8bc6\u4e86\u4e4b\u540e\uff0c\u518d\u63d0\u51fa\u66f4\u5b98\u65b9\uff0c\u4e5f\u662f\u66f4\u51c6\u786e\u7684\u5bf9\u591a\u6001\u4f5c\u7528\u7684\u63cf\u8ff0\uff1a", "\n\u591a\u6001\u6027\u4f7f\u5f97\u80fd\u591f\u5229\u7528\u540c\u4e00\u7c7b(\u57fa\u7c7b)\u7c7b\u578b\u7684\u6307\u9488\u6765\u5f15\u7528\u4e0d\u540c\u7c7b\u7684\u5bf9\u8c61,\u4ee5\u53ca\u6839\u636e\u6240\u5f15\u7528\u5bf9\u8c61\u7684\u4e0d\u540c,\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u6267\u884c\u76f8\u540c\u7684\u64cd\u4f5c\u3002\u628a\u4e0d\u540c\u7684\u5b50\u7c7b\u5bf9\u8c61\u90fd\u5f53\u4f5c\u7236\u7c7b\u6765\u770b\uff0c\u53ef\u4ee5\u5c4f\u853d\u4e0d\u540c\u5b50\u7c7b\u5bf9\u8c61\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c\u5199\u51fa\u901a\u7528\u7684\u4ee3\u7801\uff0c\u505a\u51fa\u901a\u7528\u7684\u7f16\u7a0b\uff0c\u4ee5\u9002\u5e94\u9700\u6c42\u7684\u4e0d\u65ad\u53d8\u5316\u3002\u8d4b\u503c\u4e4b\u540e\uff0c\u7236\u5bf9\u8c61\u5c31\u53ef\u4ee5\u6839\u636e\u5f53\u524d\u8d4b\u503c\u7ed9\u5b83\u7684\u5b50\u5bf9\u8c61\u7684\u7279\u6027\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u8fd0\u4f5c(\u4e5f\u5c31\u662f\u53ef\u4ee5\u8c03\u7528\u5b50\u5bf9\u8c61\u4e2d\u5bf9\u7236\u5bf9\u8c61\u7684\u76f8\u5173\u51fd\u6570\u7684\u6539\u8fdb\u65b9\u6cd5)\u3002", "\u90a3\u4e48\u4e0a\u9762\u4f8b\u5b50\u4e2d\u4e3a\u4ec0\u4e48\u53bb\u6389virtual\u5c31\u8c03\u7528\u7684\u4e0d\u662fB\u4e2d\u7684\u65b9\u6cd5\u4e86\u5462\uff0c\u660e\u660e\u628aB\u7684\u5bf9\u8c61\u8d4b\u7ed9\u6307\u9488a\u4e86\u554a\uff0c\u662f\u56e0\u4e3aC++\u5b9a\u4e49\u4e86\u4e00\u7ec4\u5bf9\u8c61\u8d4b\u503c\u7684\u517c\u5bb9\u89c4\u5219\uff0c\u5c31\u662f\u6307\u5728\u516c\u6709\u6d3e\u751f\u7684\u60c5\u51b5\u4e0b\uff0c\u5bf9\u4e8e\u67d0\u4e9b\u573a\u5408\uff0c\u4e00\u4e2a\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u53ef\u4ee5\u4f5c\u4e3a\u57fa\u7c7b\u5bf9\u8c61\u6765\u4f7f\u7528\uff0c\u5177\u4f53\u6765\u8bf4\uff0c\u5c31\u662f\u4e0b\u9762\u4e09\u79cd\u60c5\u5f62\uff1a", "Class A ;", "\nclass B:public A", "1. \u6d3e\u751f\u7684\u5bf9\u8c61\u53ef\u4ee5\u8d4b\u7ed9\u57fa\u7c7b\u7684\u5bf9\u8c61", "\nA a;", "\nB b;", "\na = b;", "\n2. \u6d3e\u751f\u7684\u5bf9\u8c61\u53ef\u4ee5\u521d\u59cb\u5316\u57fa\u7c7b\u7684\u5f15\u7528", "\nB b;", "\nA &a = b;", "\n3. \u6d3e\u751f\u7684\u5bf9\u8c61\u7684\u5730\u5740\u53ef\u4ee5\u8d4b\u7ed9\u6307\u5411\u57fa\u7c7b\u7684\u6307\u9488", "\nB b;", "\nA *a = &b;", "\n\u6216", "\nA *a = new B();", "\n\u7531\u4e0a\u8ff0\u5bf9\u8c61\u8d4b\u503c\u517c\u5bb9\u89c4\u5219\u53ef\u77e5\uff0c\u4e00\u4e2a\u57fa\u7c7b\u7684\u5bf9\u8c61\u53ef\u517c\u5bb9\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\uff0c\u4e00\u4e2a\u57fa\u7c7b\u7684\u6307\u9488\u53ef\u6307\u5411\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\uff0c\u4e00\u4e2a\u57fa\u7c7b\u7684\u5f15\u7528\u53ef\u5f15\u7528\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\uff0c\u4e8e\u662f\u5bf9\u4e8e\u901a\u8fc7\u57fa\u7c7b\u7684\u5bf9\u8c61\u6307\u9488(\u6216\u5f15\u7528)\u5bf9\u6210\u5458\u51fd\u6570\u7684\u8c03\u7528\uff0c\u7f16\u8bd1\u65f6\u65e0\u6cd5\u786e\u5b9a\u5bf9\u8c61\u7684\u7c7b\uff0c\u800c\u53ea\u662f\u5728\u8fd0\u884c\u65f6\u624d\u80fd\u786e\u5b9a\u5e76\u7531\u6b64\u786e\u5b9a\u8c03\u7528\u54ea\u4e2a\u7c7b\u4e2d\u7684\u6210\u5458\u51fd\u6570\u3002", "\n\u770b\u770b\u521a\u624d\u7684\u4f8b\u5b50\uff0c\u6839\u636e\u517c\u5bb9\u89c4\u5219\uff0cB\u7684\u5bf9\u8c61\u6839\u672c\u5c31\u88ab\u5f53\u6210\u4e86A\u7684\u5bf9\u8c61\u6765\u4f7f\u7528\uff0c\u96be\u602aB\u7684\u65b9\u6cd5\u4e0d\u80fd\u88ab\u8c03\u7528\u3002", "\n\u3010\u4f8b\u4e8c\u3011", "\n#include", "\nusing namespace std;", "\nclass A", "\n{", "\npublic:", "\nvoid (virtual) print(){cout << \u201cA print\u201d<", "private:", "\n};", "\nclass B : public A", "\n{", "\npublic:", "\nvoid print(){cout << \u201cB print\u201d< private:", "\n};", "\nvoid test(A &tmpClass)", "\n{", "\ntmpClass.print();", "\n}", "\nint main(void)", "\n{", "\nB b;", "\ntest(b);", "\ngetchar();", "\nreturn 0;", "\n}", "\n\u8fd9\u5c06\u663e\u793a\uff1a", "\nB print", "\n\u5982\u679c\u628avirtual\u53bb\u6389\uff0c\u5c06\u663e\u793a\uff1a", "\nA print", "\n\u90a3\u4e48\uff0c\u4e3a\u4ec0\u4e48\u52a0\u4e86\u4e00\u4e2avirtual\u4ee5\u540e\u5c31\u8fbe\u5230\u8c03\u7528\u7684\u76ee\u7684\u4e86\u5462\uff0c\u591a\u6001\u4e86\u561b~\u90a3\u4e48\u4e3a\u4ec0\u4e48\u52a0\u4e0avirtual\u5c31\u591a\u6001\u4e86\u5462\uff0c\u6211\u4eec\u8fd8\u8981\u4ecb\u7ecd\u4e00\u4e2a\u6982\u5ff5\uff1a\u8054\u7f16", "\n\u51fd\u6570\u7684\u8054\u7f16\uff1a\u5728\u7f16\u8bd1\u6216\u8fd0\u884c\u5c06\u51fd\u6570\u8c03\u7528\u4e0e\u76f8\u5e94\u7684\u51fd\u6570\u4f53\u8fde\u63a5\u5728\u4e00\u8d77\u7684\u8fc7\u7a0b\u3002", "\n1 \u5148\u671f\u8054\u7f16\u6216\u9759\u6001\u8054\u7f16\uff1a\u5728\u7f16\u8bd1\u65f6\u5c31\u80fd\u8fdb\u884c\u51fd\u6570\u8054\u7f16\u79f0\u4e3a\u5148\u671f\u8054\u7f16\u6216\u9759\u6001\u8054\u7f16\u3002", "\n2 \u8fdf\u540e\u8054\u7f16\u6216\u52a8\u6001\u8054\u7f16\uff1a\u5728\u8fd0\u884c\u65f6\u624d\u80fd\u8fdb\u884c\u7684\u8054\u7f16\u79f0\u4e3a\u8fdf\u540e\u8054\u7f16\u6216\u52a8\u6001\u8054\u7f16\u3002", "\n\u90a3\u4e48\u8054\u7f16\u4e0e\u865a\u51fd\u6570\u6709\u4ec0\u4e48\u5173\u7cfb\u5462\uff0c\u5f53\u7136\uff0c\u9020\u6210\u4e0a\u9762\u4f8b\u5b50\u4e2d\u7684\u77db\u76fe\u7684\u539f\u56e0\u5c31\u662f\u4ee3\u7801\u7684\u8054\u7f16\u8fc7\u7a0b\u91c7\u7528\u4e86\u5148\u671f\u8054\u7f16\uff0c\u4f7f\u5f97\u7f16\u8bd1\u65f6\u7cfb\u7edf\u65e0\u6cd5\u786e\u5b9a\u7a76\u7adf\u5e94\u8be5\u8c03\u7528\u57fa\u7c7b\u4e2d\u7684\u51fd\u6570\u8fd8\u662f\u5e94\u8be5\u8c03\u7528\u6d3e\u751f\u7c7b\u4e2d\u7684\u51fd\u6570\uff0c\u8981\u662f\u80fd\u591f\u91c7\u7528\u4e0a\u9762\u8bf4\u7684\u8fdf\u540e\u8054\u7f16\u5c31\u597d\u4e86\uff0c\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u518d\u5224\u65ad\u5230\u5e95\u662f\u54ea\u4e2a\u5bf9\u8c61\uff0c\u6240\u4ee5\uff0cvirtual\u5173\u952e\u5b57\u7684\u4f5c\u7528\u5c31\u662f\u63d0\u793a\u7f16\u8bd1\u5668\u8fdb\u884c\u8fdf\u540e\u8054\u7f16\uff0c\u544a\u8bc9\u8fde\u63a5\u8fc7\u7a0b\uff1a\u201c\u6211\u662f\u4e2a\u865a\u7684\uff0c\u5148\u4e0d\u8981\u8fde\u63a5\u6211\uff0c\u7b49\u8fd0\u884c\u65f6\u518d\u8bf4\u5427\u201d\u3002", "\n\u90a3\u4e48\u4e3a\u4ec0\u4e48\u8fde\u63a5\u7684\u65f6\u5019\u5c31\u77e5\u9053\u5230\u5e95\u662f\u54ea\u4e2a\u5bf9\u8c61\u4e86\u5462\uff0c\u8fd9\u5c31\u5f15\u51fa\u865a\u51fd\u6570\u7684\u539f\u7406\u4e86\uff1a\u5f53\u7f16\u8bd1\u5668\u9047\u5230virtual\u540e\uff0c\u4f1a\u4e3a\u6240\u5728\u7684\u7c7b\u6784\u9020\u4e00\u4e2a\u8868\u548c\u4e00\u4e2a\u6307\u9488\uff0c\u90a3\u4e2a\u8868\u53eb\u505avtbl\uff0c\u6bcf\u4e2a\u7c7b\u90fd\u6709\u81ea\u5df1\u7684vtbl\uff0cvtbl\u7684\u4f5c\u7528\u5c31\u662f\u4fdd\u5b58\u81ea\u5df1\u7c7b\u4e2d\u865a\u51fd\u6570\u7684\u5730\u5740\uff0c\u6211\u4eec\u53ef\u4ee5\u628avtbl\u5f62\u8c61\u5730\u770b\u6210\u4e00\u4e2a\u6570\u7ec4\uff0c\u8fd9\u4e2a\u6570\u7ec4\u7684\u6bcf\u4e2a\u5143\u7d20\u5b58\u653e\u7684\u5c31\u662f\u865a\u51fd\u6570\u7684\u5730\u5740.\u6307\u9488\u53eb\u505avptr\uff0c\u6307\u5411\u90a3\u4e2a\u8868\u3002\u800c\u8fd9\u4e2a\u6307\u9488\u4fdd\u5b58\u5728\u76f8\u5e94\u7684\u5bf9\u8c61\u5f53\u4e2d\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ea\u6709\u521b\u5efa\u4e86\u5bf9\u8c61\u4ee5\u540e\u624d\u80fd\u627e\u5230\u76f8\u5e94\u865a\u51fd\u6570\u7684\u5730\u5740\u3002", "\n\u3010\u6ce8\u610f\u3011", "\n1\u4e3a\u786e\u4fdd\u8fd0\u884c\u65f6\u7684\u591a\u6001\u5b9a\u4e49\u7684\u57fa\u7c7b\u4e0e\u6d3e\u751f\u7c7b\u7684\u865a\u51fd\u6570\u4e0d\u4ec5\u51fd\u6570\u540d\u8981\u76f8\u540c\uff0c\u5176\u8fd4\u56de\u503c\u53ca\u53c2\u6570\u90fd\u5fc5\u987b\u76f8\u540c\uff0c\u5426\u5219\u5373\u4f7f\u52a0\u4e0a\u4e86virtual\uff0c\u7cfb\u7edf\u4e5f\u4e0d\u8fdb\u884c\u8fdf\u540e\u8054\u7f16\u3002", "\n2 \u865a\u51fd\u6570\u5173\u7cfb\u901a\u8fc7\u7ee7\u627f\u5173\u7cfb\u81ea\u52a8\u4f20\u9012\u7ed9\u57fa\u7c7b\u4e2d\u540c\u540d\u7684\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u4e0a\u4f8b\u4e2d\u5982\u679cA\u4e2dprint\u6709virtual,\u90a3\u4e48 B\u4e2d\u7684print\u5373\u4f7f\u4e0d\u52a0virtual,\u4e5f\u88ab\u81ea\u52a8\u8ba4\u4e3a\u662f\u865a\u51fd\u6570\u3002", "\n*3 \u6ca1\u6709\u7ee7\u627f\u5173\u7cfb\uff0c\u591a\u6001\u673a\u5236\u6ca1\u6709\u610f\u4e49\uff0c\u7ee7\u627f\u5fc5\u987b\u662f\u516c\u6709\u7ee7\u627f\u3002", "\n*4\u73b0\u5b9e\u4e2d\uff0c\u8fdc\u4e0d\u53ea\u6211\u4e3e\u7684\u8fd9\u4e24\u4e2a\u4f8b\u5b50\uff0c\u4f46\u662f\u5927\u7684\u539f\u5219\u90fd\u662f\u6211\u524d\u9762\u8bf4\u5230\u7684\u201c\u5982\u679c\u53d1\u73b0\u4e00\u4e2a\u51fd\u6570\u9700\u8981\u5728\u6d3e\u751f\u7c7b\u91cc\u6709\u4e0d\u540c\u7684\u8868\u73b0\uff0c\u90a3\u4e48\u5b83\u5c31\u5e94\u8be5\u662f\u865a\u7684\u201d\u3002\u8fd9\u53e5\u8bdd\u4e5f\u53ef\u4ee5\u53cd\u8fc7\u6765\u8bf4\uff1a\u201c\u5982\u679c\u4f60\u53d1\u73b0\u57fa\u7c7b\u63d0\u4f9b\u4e86\u865a\u51fd\u6570\uff0c\u90a3\u4e48\u4f60\u6700\u597doverride\u5b83\u201d\u3002", "\u7eaf\u865a\u51fd\u6570\uff1a", "\n\u865a\u51fd\u6570\u7684\u4f5c\u7528\u662f\u4e3a\u4e86\u5b9e\u73b0\u5bf9\u57fa\u7c7b\u4e0e\u6d3e\u751f\u7c7b\u4e2d\u7684\u865a\u51fd\u6570\u6210\u5458\u7684\u8fdf\u540e\u8054\u7f16\uff0c\u800c\u7eaf\u865a\u51fd\u6570\u662f\u8868\u660e\u4e0d\u5177\u4f53\u5b9e\u73b0\u7684\u865a\u51fd\u6570\u6210\u5458\uff0c\u5373\u7eaf\u865a\u51fd\u6570\u65e0\u5b9e\u73b0\u4ee3\u7801\u3002\u5176\u4f5c\u7528\u4ec5\u4ec5\u662f\u4e3a\u5176\u6d3e\u751f\u7c7b\u63d0\u8fc7\u4e00\u4e2a\u7edf\u4e00\u7684\u6784\u67b6\uff0c\u5177\u4f53\u5b9e\u73b0\u5728\u6d3e\u751f\u7c7b\u4e2d\u7ed9\u51fa\u3002", "\n\u4e00\u4e2a\u51fd\u6570\u58f0\u660e\u4e3a\u7eaf\u865a\u540e\uff0c\u7eaf\u865a\u51fd\u6570\u7684\u610f\u601d\u662f\uff1a\u6211\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff01\u4e0d\u8981\u628a\u6211\u5b9e\u4f8b\u5316\uff01\u7eaf\u865a\u51fd\u6570\u7528\u6765\u89c4\u8303\u6d3e\u751f\u7c7b\u7684\u884c\u4e3a\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u6240\u8c13\u7684\u201c\u63a5\u53e3\u201d\u3002\u5b83\u544a\u8bc9\u4f7f\u7528\u8005\uff0c\u6211\u7684\u6d3e\u751f\u7c7b\u90fd\u4f1a\u6709\u8fd9\u4e2a\u51fd\u6570\u3002", "\n\u62bd\u8c61\u7c7b\uff1a", "\n\u542b\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u7eaf\u865a\u51fd\u6570\u7684\u7c7b\u79f0\u4e3a\u62bd\u8c61\u7c7b\u3002", "\n\u3010\u4f8b\u4e09\u3011", "\n#include", "using namespace std;", "\nclass A", "\n{", "\npublic:", "\nvirtual float print() = 0;", "\nprotected:", "\nfloat h,w;", "\nprivate:", "\n};", "\nclass B : public A", "\n{", "\npublic:", "\nB(float h0,float w0){h = h0;w = w0;}", "\nfloat print(){return h*w;}", "\nprivate:", "\n};", "\nclass C : public A", "\n{", "\npublic:", "\nC(float h0,float w0){h = h0;w = w0;}", "\nfloat print(){return h*w/2;}", "\nprivate:", "\n};", "int main(void)", "\n{", "\nA *a1,*a2;", "\nB b(1,2);", "\nC c(1,2);", "\na1 = &b;", "\na2 = &c;", "\ncout << a1->print()<print()<print;a2->print\u5c31\u4e0d\u80fd\u7528\u4e86)\uff0c\u7ed9\u591a\u6001\u6027\u9020\u6210\u4e0d\u4fbf\uff0c\u8fd9\u91cc\u8981\u5f3a\u8c03\u7684\u662f\uff0c\u6211\u4eec\u662f\u5e0c\u671b\u7528\u57fa\u7c7b\u7684\u6307\u9488\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u65b9\u6cd5\uff0c\u5e0c\u671b\u7528\u5230\u591a\u6001\u673a\u5236\uff0c\u5982\u679c\u8bfb\u8005\u5e76\u4e0d\u60f3\u7528\u57fa\u7c7b\u6307\u9488\uff0c\u8ba4\u4e3a\u7528b\uff0cc\u6307\u9488\u76f4\u63a5\u8c03\u7528\u66f4\u597d\uff0c\u90a3\u7eaf\u865a\u51fd\u6570\u5c31\u6ca1\u6709\u610f\u4e49\u4e86\uff0c\u591a\u6001\u4e5f\u5c31\u6ca1\u6709\u610f\u4e49\u4e86\uff0c\u4e86\u89e3\u4e00\u4e0b\u591a\u6001\u7684\u597d\u5904\uff0c\u518d\u51b3\u5b9a\u662f\u5426\u7528\u7eaf\u865a\u51fd\u6570\u5427\u3002", "\n\u3010\u6ce8\u610f\u3011", "\n1 \u62bd\u8c61\u7c7b\u5e76\u4e0d\u80fd\u76f4\u63a5\u5b9a\u4e49\u5bf9\u8c61\uff0c\u53ea\u53ef\u4ee5\u5982\u4e0a\u4f8b\u90a3\u6837\u58f0\u660e\u6307\u9488\uff0c\u7528\u6765\u6307\u5411\u57fa\u7c7b\u6d3e\u751f\u7684\u5b50\u7c7b\u7684\u5bf9\u8c61\uff0c\u4e0a\u4f8b\u4e2d\u7684A *a1,*a2;\u8be5\u4e3a A a1,a2;\u662f\u9519\u8bef\u7684\u3002", "\n2 \u4ece\u4e00\u4e2a\u62bd\u8c61\u7c7b\u6d3e\u751f\u7684\u7c7b\u5fc5\u987b\u63d0\u4f9b\u7eaf\u865a\u51fd\u6570\u7684\u4ee3\u7801\u5b9e\u73b0\u6216\u4f9d\u65e7\u6307\u660e\u5176\u4e3a\u6d3e\u751f\u7c7b\uff0c\u5426\u5219\u662f\u9519\u8bef\u7684\u3002", "\n3 \u5f53\u4e00\u4e2a\u7c7b\u6253\u7b97\u88ab\u7528\u4f5c\u5176\u5b83\u7c7b\u7684\u57fa\u7c7b\u65f6\uff0c\u5b83\u7684\u6790\u6784\u51fd\u6570\u5fc5\u987b\u662f\u865a\u7684\u3002", "\n\u3010\u4f8b\u4e09\u3011", "\nclass A", "\n{", "\npublic:", "\nA() { ptra_ = new char[10];}", "\n~A() { delete[] ptra_;} // \u975e\u865a\u6790\u6784\u51fd\u6570", "\nprivate:", "\nchar * ptra_;", "\n};", "class B: public A", "\n{", "\npublic:", "\nB() { ptrb_ = new char[20];}", "\n~B() { delete[] ptrb_;}", "\nprivate:", "\nchar * ptrb_;", "\n};", "void foo()", "\n{", "\nA * a = new B;", "\ndelete a;", "\n}", "\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u7a0b\u5e8f\u4e5f\u8bb8\u4e0d\u4f1a\u8c61\u4f60\u60f3\u8c61\u7684\u90a3\u6837\u8fd0\u884c\uff0c\u5728\u6267\u884cdelete a\u7684\u65f6\u5019\uff0c\u5b9e\u9645\u4e0a\u53ea\u6709A::~A()\u88ab\u8c03\u7528\u4e86\uff0c\u800cB\u7c7b\u7684\u6790\u6784\u51fd\u6570\u5e76\u6ca1\u6709\u88ab\u8c03\u7528\uff01\u8fd9\u662f\u5426\u6709\u70b9\u513f\u53ef\u6015\uff1f \u5982\u679c\u5c06\u4e0a\u9762A::~A()\u6539\u4e3avirtual\uff0c\u5c31\u53ef\u4ee5\u4fdd\u8bc1B::~B()\u4e5f\u5728delete a\u7684\u65f6\u5019\u88ab\u8c03\u7528\u4e86\u3002\u56e0\u6b64\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u90fd\u5fc5\u987b\u662fvirtual\u7684\u3002\u7eaf\u865a\u7684\u6790\u6784\u51fd\u6570\u5e76\u6ca1\u6709\u4ec0\u4e48\u4f5c\u7528\uff0c\u662f\u865a\u7684\u5c31\u591f\u4e86\u3002\u901a\u5e38\u53ea\u6709\u5728\u5e0c\u671b\u5c06\u4e00\u4e2a\u7c7b\u53d8\u6210\u62bd\u8c61\u7c7b\uff08\u4e0d\u80fd\u5b9e\u4f8b\u5316\u7684\u7c7b\uff09\uff0c\u800c\u8fd9\u4e2a\u7c7b\u53c8\u6ca1\u6709\u5408\u9002\u7684\u51fd\u6570\u53ef\u4ee5\u88ab\u7eaf\u865a\u5316\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u4f7f\u7528\u7eaf\u865a\u7684\u6790\u6784\u51fd\u6570\u6765\u8fbe\u5230\u76ee\u7684\u3002", "\u6700\u540e\u901a\u8fc7\u4e00\u4e2a\u4f8b\u5b50\u8bf4\u660e\u4e00\u4e0b\u62bd\u8c61\u7c7b\uff0c\u7eaf\u865a\u51fd\u6570\u4ee5\u53ca\u591a\u6001\u7684\u5999\u7528\u5427\uff1a", "\n\u6211\u4eec\u5e0c\u671b\u901a\u8fc7\u4e00\u4e2a\u65b9\u6cd5\u5f97\u5230\u4e0d\u540c\u56fe\u5f62\u9762\u79ef\u7684\u548c\u7684\u65b9\u5f0f\uff1a", "\n#include", "\nusing namespace std;", "\nclass A //\u5b9a\u4e49\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u7528\u6765\u6c42\u56fe\u5f62\u9762\u79ef", "\n{", "\npublic:", "\nvirtual float area() = 0;//\u5b9a\u4e49\u4e00\u4e2a\u8ba1\u7b97\u9762\u79ef\u7684\u7eaf\u865a\u51fd\u6570\uff0c\u56fe\u5f62\u6ca1\u786e\u5b9a\uff0c\u5f53", "\n//\u4e0d\u80fd\u786e\u5b9a\u5177\u4f53\u5b9e\u73b0", "\nprotected:", "\nfloat h,w; //\u8fd9\u91cc\u5047\u8bbe\u6240\u6709\u56fe\u5f62\u7684\u9762\u79ef\u90fd\u53ef\u4ee5\u7528h\u548cw\u4e24\u4e2a\u5143\u7d20\u8ba1\u7b97\u5f97\u51fa", "\n//\u5c31\u5047\u8bbe\u4e3a\u9ad8\u548c\u957f\u5427", "\nprivate:", "\n};", "\nclass B : public A //\u5b9a\u4e49\u4e00\u4e2a\u6c42\u957f\u65b9\u5f62\u9762\u79ef\u7684\u7c7b", "\n{", "\npublic:", "\nB(float h0,float w0){h = h0;w = w0;}", "\nfloat area (){return h*w;}//\u57fa\u7c7b\u7eaf\u865a\u51fd\u6570\u7684\u5177\u4f53\u5b9e\u73b0", "\nprivate:", "\n};", "\nclass C : public A //\u5b9a\u4e49\u4e00\u4e2a\u6c42\u4e09\u89d2\u5f62\u9762\u79ef\u7684\u7c7b", "\n{", "\npublic:", "\nC(float h0,float w0){h = h0;w = w0;}", "\nfloat area (){return h*w/2;}//\u57fa\u7c7b\u7eaf\u865a\u51fd\u6570\u7684\u5177\u4f53\u5b9e\u73b0", "\nprivate:", "\n};", "float getTotal(A *s[],int n)//\u901a\u8fc7\u4e00\u4e2a\u6570\u7ec4\u4f20\u9012\u6240\u6709\u7684\u56fe\u5f62\u5bf9\u8c61", "\n//\u591a\u6001\u7684\u597d\u5904\u51fa\u6765\u4e86\u5427\uff0c\u4e0d\u662f\u591a\u6001\uff0c\u4e0d\u80fd\u7528\u57fa\u7c7bA\u8c03\u7528", "\n//\u53c2\u6570\u7c7b\u578b\u600e\u4e48\u5199\uff0c\u8981\u662f\u6709100\u4e2a\u4e0d\u540c\u7684\u56fe\u5f62\uff0c\u600e\u4e48\u4f20\u9012", "\n{", "\nfloat sum = 0;", "\nfor(int i = 0;i < n; i++) sum = sum + s[i]->area();", "\nreturn sum;", "\n}", "\nint main(void)", "\n{", "\nfloat totalArea;", "\nA *a[2];", "\na[0] = new B(1,2); //\u4e00\u4e2a\u957f\u65b9\u5f62\u5bf9\u8c61", "\na[1] = new C(1,2);//\u4e00\u4e2a\u4e09\u89d2\u5f62\u5bf9\u8c61", "\ntotalArea = getTotal(a , 2);//\u6c42\u51fa\u4e24\u4e2a\u5bf9\u8c61\u7684\u9762\u79ef\u548c", "\ngetchar();", "\nreturn 0;", "\n}", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "8. \u6c42\u4e0b\u9762\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff08\u5fae\u8f6f\uff09", "\nint func(x)", "\n{", "\nint countx = 0;", "\nwhile(x)", "\n{", "\ncountx ++;", "\nx = x&(x-1);", "\n}", "\nreturn countx;", "\n}", "\u5047\u5b9a x = 9999 \u3002 \u7b54\u6848\uff1a 8", "\u601d\u8def\uff1a\u5c06 x \u8f6c\u5316\u4e3a 2 \u8fdb\u5236\uff0c\u770b\u542b\u6709\u7684 1 \u7684\u4e2a\u6570\u3002", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n9. \u4ec0\u4e48\u662f \u201c \u5f15\u7528 \u201d \uff1f\u7533\u660e\u548c\u4f7f\u7528 \u201c \u5f15\u7528 \u201d \u8981\u6ce8\u610f\u54ea\u4e9b\u95ee\u9898\uff1f", "\n\u7b54\uff1a\u5f15\u7528\u5c31\u662f\u67d0\u4e2a\u76ee\u6807\u53d8\u91cf\u7684 \u201c \u522b\u540d \u201d(alias) \uff0c\u5bf9\u5e94\u7528\u7684\u64cd\u4f5c\u4e0e\u5bf9\u53d8\u91cf\u76f4\u63a5\u64cd\u4f5c\u6548\u679c\u5b8c\u5168\u76f8\u540c\u3002\u7533\u660e\u4e00\u4e2a\u5f15\u7528\u7684\u65f6\u5019\uff0c\u5207\u8bb0\u8981\u5bf9\u5176\u8fdb\u884c\u521d\u59cb\u5316\u3002\u5f15\u7528\u58f0\u660e\u5b8c\u6bd5\u540e\uff0c\u76f8\u5f53\u4e8e\u76ee\u6807\u53d8\u91cf\u540d\u6709\u4e24\u4e2a\u540d\u79f0\uff0c\u5373\u8be5\u76ee\u6807\u539f\u540d\u79f0\u548c\u5f15\u7528\u540d\uff0c\u4e0d\u80fd\u518d\u628a\u8be5\u5f15\u7528\u540d\u4f5c\u4e3a\u5176\u4ed6\u53d8\u91cf\u540d\u7684\u522b\u540d\u3002\u58f0\u660e\u4e00\u4e2a\u5f15\u7528\uff0c\u4e0d\u662f\u65b0\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53d8\u91cf\uff0c\u5b83\u53ea\u8868\u793a\u8be5\u5f15\u7528\u540d\u662f\u76ee\u6807\u53d8\u91cf\u540d\u7684\u4e00\u4e2a\u522b\u540d\uff0c\u5b83\u672c\u8eab\u4e0d\u662f\u4e00\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u56e0\u6b64\u5f15\u7528\u672c\u8eab\u4e0d\u5360\u5b58\u50a8\u5355\u5143\uff0c\u7cfb\u7edf\u4e5f\u4e0d\u7ed9\u5f15\u7528\u5206\u914d\u5b58\u50a8\u5355\u5143\u3002\u4e0d\u80fd\u5efa\u7acb\u6570\u7ec4\u7684\u5f15\u7528\u3002", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n10. \u5c06 \u201c \u5f15\u7528 \u201d \u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u6709\u54ea\u4e9b\u7279\u70b9\uff1f", "\n\uff08 1 \uff09\u4f20\u9012\u5f15\u7528\u7ed9\u51fd\u6570\u4e0e\u4f20\u9012\u6307\u9488\u7684\u6548\u679c\u662f\u4e00\u6837\u7684\u3002\u8fd9\u65f6\uff0c\u88ab\u8c03\u51fd\u6570\u7684\u5f62\u53c2\u5c31\u6210\u4e3a\u539f\u6765\u4e3b\u8c03\u51fd\u6570\u4e2d\u7684\u5b9e\u53c2\u53d8\u91cf\u6216\u5bf9\u8c61\u7684\u4e00\u4e2a\u522b\u540d\u6765\u4f7f\u7528\uff0c\u6240\u4ee5\u5728\u88ab\u8c03\u51fd\u6570\u4e2d\u5bf9\u5f62\u53c2\u53d8\u91cf\u7684\u64cd\u4f5c\u5c31\u662f\u5bf9\u5176\u76f8\u5e94\u7684\u76ee\u6807\u5bf9\u8c61\uff08\u5728\u4e3b\u8c03\u51fd\u6570\u4e2d\uff09\u7684\u64cd\u4f5c\u3002", "\uff08 2 \uff09\u4f7f\u7528\u5f15\u7528\u4f20\u9012\u51fd\u6570\u7684\u53c2\u6570\uff0c\u5728\u5185\u5b58\u4e2d\u5e76\u6ca1\u6709\u4ea7\u751f\u5b9e\u53c2\u7684\u526f\u672c\uff0c\u5b83\u662f\u76f4\u63a5\u5bf9\u5b9e\u53c2\u64cd\u4f5c\uff1b\u800c\u4f7f\u7528\u4e00\u822c\u53d8\u91cf\u4f20\u9012\u51fd\u6570\u7684\u53c2\u6570\uff0c\u5f53\u53d1\u751f\u51fd\u6570\u8c03\u7528\u65f6\uff0c\u9700\u8981\u7ed9\u5f62\u53c2\u5206\u914d\u5b58\u50a8\u5355\u5143\uff0c\u5f62\u53c2\u53d8\u91cf\u662f\u5b9e\u53c2\u53d8\u91cf\u7684\u526f\u672c\uff1b\u5982\u679c\u4f20\u9012\u7684\u662f\u5bf9\u8c61\uff0c\u8fd8\u5c06\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002\u56e0\u6b64\uff0c\u5f53\u53c2\u6570\u4f20\u9012\u7684\u6570\u636e\u8f83\u5927\u65f6\uff0c\u7528\u5f15\u7528\u6bd4\u7528\u4e00\u822c\u53d8\u91cf\u4f20\u9012\u53c2\u6570\u7684\u6548\u7387\u548c\u6240\u5360\u7a7a\u95f4\u90fd\u597d\u3002", "\uff08 3 \uff09\u4f7f\u7528\u6307\u9488\u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570\u867d\u7136\u4e5f\u80fd\u8fbe\u5230\u4e0e\u4f7f\u7528\u5f15\u7528\u7684\u6548\u679c\uff0c\u4f46\u662f\uff0c\u5728\u88ab\u8c03\u51fd\u6570\u4e2d\u540c\u6837\u8981\u7ed9\u5f62\u53c2\u5206\u914d\u5b58\u50a8\u5355\u5143\uff0c\u4e14\u9700\u8981\u91cd\u590d\u4f7f\u7528 \u201c* \u6307\u9488\u53d8\u91cf\u540d \u201d \u7684\u5f62\u5f0f\u8fdb\u884c\u8fd0\u7b97\uff0c\u8fd9\u5f88\u5bb9\u6613\u4ea7\u751f\u9519\u8bef\u4e14\u7a0b\u5e8f\u7684\u9605\u8bfb\u6027\u8f83\u5dee\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u5728\u4e3b\u8c03\u51fd\u6570\u7684\u8c03\u7528\u70b9\u5904\uff0c\u5fc5\u987b\u7528\u53d8\u91cf\u7684\u5730\u5740\u4f5c\u4e3a\u5b9e\u53c2\u3002\u800c\u5f15\u7528\u66f4\u5bb9\u6613\u4f7f\u7528\uff0c\u66f4\u6e05\u6670\u3002", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n11. \u5728\u4ec0\u4e48\u65f6\u5019\u9700\u8981\u4f7f\u7528 \u201c \u5e38\u5f15\u7528 \u201d \uff1f", "\n\u5982\u679c\u65e2\u8981\u5229\u7528\u5f15\u7528\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6548\u7387\uff0c\u53c8\u8981\u4fdd\u62a4\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u6570\u636e\u4e0d\u5728\u51fd\u6570\u4e2d\u88ab\u6539\u53d8\uff0c\u5c31\u5e94\u4f7f\u7528\u5e38\u5f15\u7528\u3002\u5e38\u5f15\u7528\u58f0\u660e\u65b9\u5f0f\uff1a const \u7c7b\u578b\u6807\u8bc6\u7b26 & \u5f15\u7528\u540d = \u76ee\u6807\u53d8\u91cf\u540d\uff1b", "\u4f8b 1", "int a ;", "\nconst int &ra=a;", "\nra=1; // \u9519\u8bef", "\na=1; // \u6b63\u786e", "\u4f8b 2", "string foo( );", "\nvoid bar(string & s);", "\u90a3\u4e48\u4e0b\u9762\u7684\u8868\u8fbe\u5f0f\u5c06\u662f\u975e\u6cd5\u7684\uff1a", "bar(foo( ));", "\nbar(\u201chello world\u201d);", "\u539f\u56e0\u5728\u4e8e foo( ) \u548c \u201chello world\u201d \u4e32\u90fd\u4f1a\u4ea7\u751f\u4e00\u4e2a\u4e34\u65f6\u5bf9\u8c61\uff0c\u800c\u5728 C++ \u4e2d\uff0c\u8fd9\u4e9b\u4e34\u65f6\u5bf9\u8c61\u90fd\u662f const \u7c7b\u578b\u7684\u3002\u56e0\u6b64\u4e0a\u9762\u7684\u8868\u8fbe\u5f0f\u5c31\u662f\u8bd5\u56fe\u5c06\u4e00\u4e2a const \u7c7b\u578b\u7684\u5bf9\u8c61\u8f6c\u6362\u4e3a\u975e const \u7c7b\u578b\uff0c\u8fd9\u662f\u975e\u6cd5\u7684\u3002\u5f15\u7528\u578b\u53c2\u6570\u5e94\u8be5\u5728\u80fd\u88ab\u5b9a\u4e49\u4e3a const \u7684\u60c5\u51b5\u4e0b\uff0c\u5c3d\u91cf\u5b9a\u4e49\u4e3a const \u3002", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n12. \u5c06 \u201c \u5f15\u7528 \u201d \u4f5c\u4e3a\u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b\u7684\u683c\u5f0f\u3001\u597d\u5904\u548c\u9700\u8981\u9075\u5b88\u7684\u89c4\u5219 ?", "\n\u683c\u5f0f\uff1a\u7c7b\u578b\u6807\u8bc6\u7b26 & \u51fd\u6570\u540d\uff08\u5f62\u53c2\u5217\u8868\u53ca\u7c7b\u578b\u8bf4\u660e\uff09 { // \u51fd\u6570\u4f53 }", "\u597d\u5904\uff1a\u5728\u5185\u5b58\u4e2d\u4e0d\u4ea7\u751f\u88ab\u8fd4\u56de\u503c\u7684\u526f\u672c\uff1b\uff08\u6ce8\u610f\uff1a\u6b63\u662f\u56e0\u4e3a\u8fd9\u70b9\u539f\u56e0\uff0c\u6240\u4ee5\u8fd4\u56de\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u5f15\u7528\u662f\u4e0d\u53ef\u53d6\u7684\u3002\u56e0\u4e3a\u968f\u7740\u8be5\u5c40\u90e8\u53d8\u91cf\u751f\u5b58\u671f\u7684\u7ed3\u675f\uff0c\u76f8\u5e94\u7684\u5f15\u7528\u4e5f\u4f1a\u5931\u6548\uff0c\u4ea7\u751f runtime error! \u6ce8\u610f\u4e8b\u9879\uff1a", "\uff08 1 \uff09\u4e0d\u80fd\u8fd4\u56de\u5c40\u90e8\u53d8\u91cf\u7684\u5f15\u7528\u3002\u8fd9\u6761\u53ef\u4ee5\u53c2\u7167 Effective C++[1] \u7684 Item 31 \u3002\u4e3b\u8981\u539f\u56e0\u662f\u5c40\u90e8\u53d8\u91cf\u4f1a\u5728\u51fd\u6570\u8fd4\u56de\u540e\u88ab\u9500\u6bc1\uff0c\u56e0\u6b64\u88ab\u8fd4\u56de\u7684\u5f15\u7528\u5c31\u6210\u4e3a\u4e86 \u201d \u65e0\u6240\u6307 \u201d \u7684\u5f15\u7528\uff0c\u7a0b\u5e8f\u4f1a\u8fdb\u5165\u672a\u77e5\u72b6\u6001\u3002", "\uff08 2 \uff09\u4e0d\u80fd\u8fd4\u56de\u51fd\u6570\u5185\u90e8 new \u5206\u914d\u7684\u5185\u5b58\u7684\u5f15\u7528\u3002\u8fd9\u6761\u53ef\u4ee5\u53c2\u7167 Effective C++[1] \u7684 Item 31 \u3002\u867d\u7136\u4e0d\u5b58\u5728\u5c40\u90e8\u53d8\u91cf\u7684\u88ab\u52a8\u9500\u6bc1\u95ee\u9898\uff0c\u53ef\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff08\u8fd4\u56de\u51fd\u6570\u5185\u90e8 new \u5206\u914d\u5185\u5b58\u7684\u5f15\u7528\uff09\uff0c\u53c8\u9762\u4e34\u5176\u5b83\u5c34\u5c2c\u5c40\u9762\u3002\u4f8b\u5982\uff0c\u88ab\u51fd\u6570\u8fd4\u56de\u7684\u5f15\u7528\u53ea\u662f\u4f5c\u4e3a\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf\u51fa\u73b0\uff0c\u800c\u6ca1\u6709\u88ab\u8d4b\u4e88\u4e00\u4e2a\u5b9e\u9645\u7684\u53d8\u91cf\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5f15\u7528\u6240\u6307\u5411\u7684\u7a7a\u95f4\uff08\u7531 new \u5206\u914d\uff09\u5c31\u65e0\u6cd5\u91ca\u653e\uff0c\u9020\u6210 memory leak \u3002", "\uff08 3 \uff09\u53ef\u4ee5\u8fd4\u56de\u7c7b\u6210\u5458\u7684\u5f15\u7528\uff0c\u4f46\u6700\u597d\u662f const \u3002\u8fd9\u6761\u539f\u5219\u53ef\u4ee5\u53c2\u7167 Effective C++[1] \u7684 Item 30 \u3002\u4e3b\u8981\u539f\u56e0\u662f\u5f53\u5bf9\u8c61\u7684\u5c5e\u6027\u662f\u4e0e\u67d0\u79cd\u4e1a\u52a1\u89c4\u5219\uff08 business rule \uff09\u76f8\u5173\u8054\u7684\u65f6\u5019\uff0c\u5176\u8d4b\u503c\u5e38\u5e38\u4e0e\u67d0\u4e9b\u5176\u5b83\u5c5e\u6027\u6216\u8005\u5bf9\u8c61\u7684\u72b6\u6001\u6709\u5173\uff0c\u56e0\u6b64\u6709\u5fc5\u8981\u5c06\u8d4b\u503c\u64cd\u4f5c\u5c01\u88c5\u5728\u4e00\u4e2a\u4e1a\u52a1\u89c4\u5219\u5f53\u4e2d\u3002\u5982\u679c\u5176\u5b83\u5bf9\u8c61\u53ef\u4ee5\u83b7\u5f97\u8be5\u5c5e\u6027\u7684\u975e\u5e38\u91cf\u5f15\u7528\uff08\u6216\u6307\u9488\uff09\uff0c\u90a3\u4e48\u5bf9\u8be5\u5c5e\u6027\u7684\u5355\u7eaf\u8d4b\u503c\u5c31\u4f1a\u7834\u574f\u4e1a\u52a1\u89c4\u5219\u7684\u5b8c\u6574\u6027\u3002", "\uff08 4 \uff09\u6d41\u64cd\u4f5c\u7b26\u91cd\u8f7d\u8fd4\u56de\u503c\u7533\u660e\u4e3a \u201c \u5f15\u7528 \u201d \u7684\u4f5c\u7528\uff1a", "\u6d41\u64cd\u4f5c\u7b26 << \u548c >> \uff0c\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u7b26\u5e38\u5e38\u5e0c\u671b\u88ab\u8fde\u7eed\u4f7f\u7528\uff0c\u4f8b\u5982\uff1a cout << \u201chello\u201d << endl; \u3000\u56e0\u6b64\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u7b26\u7684\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a\u4ecd\u7136\u652f\u6301\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u7b26\u7684\u6d41\u5f15\u7528\u3002\u53ef\u9009\u7684\u5176\u5b83\u65b9\u6848\u5305\u62ec\uff1a\u8fd4\u56de\u4e00\u4e2a\u6d41\u5bf9\u8c61\u548c\u8fd4\u56de\u4e00\u4e2a\u6d41\u5bf9\u8c61\u6307\u9488\u3002\u4f46\u662f\u5bf9\u4e8e\u8fd4\u56de\u4e00\u4e2a\u6d41\u5bf9\u8c61\uff0c\u7a0b\u5e8f\u5fc5\u987b\u91cd\u65b0\uff08\u62f7\u8d1d\uff09\u6784\u9020\u4e00\u4e2a\u65b0\u7684\u6d41\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fde\u7eed\u7684\u4e24\u4e2a << \u64cd\u4f5c\u7b26\u5b9e\u9645\u4e0a\u662f\u9488\u5bf9\u4e0d\u540c\u5bf9\u8c61\u7684\uff01\u8fd9\u65e0\u6cd5\u8ba9\u4eba\u63a5\u53d7\u3002\u5bf9\u4e8e\u8fd4\u56de\u4e00\u4e2a\u6d41\u6307\u9488\u5219\u4e0d\u80fd\u8fde\u7eed\u4f7f\u7528 << \u64cd\u4f5c\u7b26\u3002\u56e0\u6b64\uff0c\u8fd4\u56de\u4e00\u4e2a\u6d41\u5bf9\u8c61\u5f15\u7528\u662f\u60df\u4e00\u9009\u62e9\u3002\u8fd9\u4e2a\u552f\u4e00\u9009\u62e9\u5f88\u5173\u952e\uff0c\u5b83\u8bf4\u660e\u4e86\u5f15\u7528\u7684\u91cd\u8981\u6027\u4ee5\u53ca\u65e0\u53ef\u66ff\u4ee3\u6027\uff0c\u4e5f\u8bb8\u8fd9\u5c31\u662f C++ \u8bed\u8a00\u4e2d\u5f15\u5165\u5f15\u7528\u8fd9\u4e2a\u6982\u5ff5\u7684\u539f\u56e0\u5427\u3002 \u8d4b\u503c\u64cd\u4f5c\u7b26 = \u3002\u8fd9\u4e2a\u64cd\u4f5c\u7b26\u8c61\u6d41\u64cd\u4f5c\u7b26\u4e00\u6837\uff0c\u662f\u53ef\u4ee5\u8fde\u7eed\u4f7f\u7528\u7684\uff0c\u4f8b\u5982\uff1a x = j = 10; \u6216\u8005 (x=10)=100; \u8d4b\u503c\u64cd\u4f5c\u7b26\u7684\u8fd4\u56de\u503c\u5fc5\u987b\u662f\u4e00\u4e2a\u5de6\u503c\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u88ab\u7ee7\u7eed\u8d4b\u503c\u3002\u56e0\u6b64\u5f15\u7528\u6210\u4e86\u8fd9\u4e2a\u64cd\u4f5c\u7b26\u7684\u60df\u4e00\u8fd4\u56de\u503c\u9009\u62e9\u3002", "\u4f8b 3", "\uff03 i nclude", "\nint &put(int n);", "\nint vals[10];", "\nint error=-1;", "\nvoid main()", "\n{", "\nput(0)=10; // \u4ee5 put(0) \u51fd\u6570\u503c\u4f5c\u4e3a\u5de6\u503c\uff0c\u7b49\u4ef7\u4e8e vals[0]=10;", "\nput(9)=20; // \u4ee5 put(9) \u51fd\u6570\u503c\u4f5c\u4e3a\u5de6\u503c\uff0c\u7b49\u4ef7\u4e8e vals[9]=20;", "\ncout< cout<=0 && n else { cout< 6\u2033) : puts(\u201d return 0;", "\n}", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n114. \u4ea4\u6362\u4e24\u4e2a\u6570\u7684\u5b8f\u5b9a\u4e49", "\u4ea4\u6362\u4e24\u4e2a\u53c2\u6570\u503c\u7684 \u5b8f\u5b9a\u4e49 \u4e3a\uff1a . #define SWAP (a,b) (a)=(a)+(b);(b)=(a)-(b);(a)=(a)-(b);", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n115.Itearator \u5404\u6307\u9488\u7684\u533a\u522b", "\u6e38\u6807\u548c\u6307\u9488", "\u6211\u8bf4\u8fc7\u6e38\u6807\u662f\u6307\u9488\uff0c\u4f46\u4e0d\u4ec5\u4ec5\u662f\u6307\u9488\u3002\u6e38\u6807\u548c\u6307\u9488\u5f88\u50cf\uff0c\u529f\u80fd\u5f88\u50cf\u6307\u9488\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\uff0c\u6e38\u6807\u662f\u901a\u8fc7\u91cd\u8f7d\u4e00\u5143\u7684 \u201d*\u201d \u548c \u201d->\u201d \u6765\u4ece\u5bb9\u5668\u4e2d\u95f4\u63a5\u5730\u8fd4\u56de\u4e00\u4e2a\u503c\u3002\u5c06\u8fd9\u4e9b\u503c\u5b58\u50a8\u5728\u5bb9\u5668\u4e2d\u5e76\u4e0d\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\uff0c\u56e0\u4e3a\u6bcf\u5f53\u4e00\u4e2a\u65b0\u503c\u6dfb\u52a0\u5230\u5bb9\u5668\u4e2d\u6216\u8005\u6709\u4e00\u4e2a\u503c\u4ece\u5bb9\u5668\u4e2d\u5220\u9664\uff0c\u8fd9\u4e9b\u503c\u5c31\u4f1a\u5931\u6548\u3002\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\uff0c\u6e38\u6807\u53ef\u4ee5\u770b\u4f5c\u662f\u53e5\u67c4\uff08 handle \uff09\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\u6e38\u6807\uff08 iterator \uff09\u7684\u7c7b\u578b\u53ef\u4ee5\u6709\u6240\u53d8\u5316\uff0c\u8fd9\u6837\u5bb9\u5668\u4e5f\u4f1a\u6709\u51e0\u79cd\u4e0d\u540c\u65b9\u5f0f\u7684\u8f6c\u53d8\uff1a", "iterator\u2014\u2014 \u5bf9\u4e8e\u9664\u4e86 vector \u4ee5\u5916\u7684\u5176\u4ed6\u4efb\u4f55\u5bb9\u5668\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u8fd9\u79cd\u6e38\u6807\u5728\u4e00\u6b21\u64cd\u4f5c\u4e2d\u5728\u5bb9\u5668\u4e2d\u671d\u5411\u524d\u7684\u65b9\u5411\u8d70\u4e00\u6b65\u3002\u8fd9\u610f\u5473\u7740\u5bf9\u4e8e\u8fd9\u79cd\u6e38\u6807\u4f60\u53ea\u80fd\u4f7f\u7528 \u201c++\u201d \u64cd\u4f5c\u7b26\u3002\u800c\u4e0d\u80fd\u4f7f\u7528 \u201c\u2013\u201d \u6216 \u201c+=\u201d \u64cd\u4f5c\u7b26\u3002\u800c\u5bf9\u4e8e vector \u8fd9\u4e00\u79cd\u5bb9\u5668\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 \u201c+=\u201d \u3001 \u201c\u2014\u201d \u3001 \u201c++\u201d \u3001 \u201c-=\u201d \u4e2d\u7684\u4efb\u4f55\u4e00\u79cd\u64cd\u4f5c\u7b26\u548c \u201c\u201d \u3001 \u201c>=\u201d \u3001 \u201c==\u201d \u3001 \u201c!=\u201d \u7b49\u6bd4\u8f83\u8fd0\u7b97\u7b26\u3002", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n116. C++ \u4e2d\u7684 class \u548c struct \u7684\u533a\u522b", "\n\u4ece\u8bed\u6cd5\u4e0a\uff0c\u5728 C++ \u4e2d\uff08\u53ea\u8ba8\u8bba C++ \u4e2d\uff09\u3002 class \u548c struct \u505a\u7c7b\u578b\u5b9a\u4e49\u65f6\u53ea\u6709\u4e24\u70b9\u533a\u522b\uff1a", "\n\uff08\u4e00\uff09\u9ed8\u8ba4\u7ee7\u627f\u6743\u9650\u3002\u5982\u679c\u4e0d\u660e\u786e\u6307\u5b9a\uff0c\u6765\u81ea class \u7684\u7ee7\u627f\u6309\u7167 private \u7ee7\u627f\u5904\u7406\uff0c\u6765\u81ea struct \u7684\u7ee7\u627f\u6309\u7167 public \u7ee7\u627f\u5904\u7406\uff1b", "\n\uff08\u4e8c\uff09\u6210\u5458\u7684\u9ed8\u8ba4\u8bbf\u95ee\u6743\u9650\u3002 class \u7684\u6210\u5458\u9ed8\u8ba4\u662f private \u6743\u9650\uff0c struct \u9ed8\u8ba4\u662f public \u6743\u9650\u3002", "\n\u9664\u4e86\u8fd9\u4e24\u70b9\uff0c class \u548c struct \u57fa\u672c\u5c31\u662f\u4e00\u4e2a\u4e1c\u897f\u3002\u8bed\u6cd5\u4e0a\u6ca1\u6709\u4efb\u4f55\u5176\u5b83\u533a\u522b\u3002", "\u4e0d\u80fd\u56e0\u4e3a\u5b66\u8fc7 C \u5c31\u603b\u89c9\u5f97\u8fde C++ \u4e2d struct \u548c class \u90fd\u533a\u522b\u5f88\u5927\uff0c\u4e0b\u9762\u5217\u4e3e\u7684\u8bf4\u660e\u53ef\u80fd\u6bd4\u8f83\u65e0\u804a\uff0c\u56e0\u4e3a struct \u548c class \u672c\u6765\u5c31\u662f\u57fa\u672c\u4e00\u6837\u7684\u4e1c\u897f\uff0c\u65e0\u9700\u591a\u8bf4\u3002\u4f46\u8fd9\u4e9b\u8bf4\u660e\u53ef\u80fd\u6709\u52a9\u4e8e\u6f84\u6e05\u4e00\u4e9b\u5e38\u89c1\u7684\u5173\u4e8e struct \u548c class \u7684\u9519\u8bef\u8ba4\u8bc6\uff1a", "\n\uff08 1 \uff09\u90fd\u53ef\u4ee5\u6709\u6210\u5458\u51fd\u6570\uff1b\u5305\u62ec\u5404\u7c7b\u6784\u9020\u51fd\u6570\uff0c\u6790\u6784\u51fd\u6570\uff0c\u91cd\u8f7d\u7684\u8fd0\u7b97\u7b26\uff0c\u53cb\u5143\u7c7b\uff0c\u53cb\u5143\u7ed3\u6784\uff0c\u53cb\u5143\u51fd\u6570\uff0c\u865a\u51fd\u6570\uff0c\u7eaf\u865a\u51fd\u6570\uff0c\u9759\u6001\u51fd\u6570\uff1b", "\n\uff08 2 \uff09\u90fd\u53ef\u4ee5\u6709\u4e00\u5927\u5806 public/private/protected \u4fee\u9970\u7b26\u5728\u91cc\u8fb9\uff1b", "\n\uff08 3 \uff09\u867d\u7136\u8fd9\u79cd\u98ce\u683c\u4e0d\u518d\u88ab\u63d0\u5021\uff0c\u4f46\u8bed\u6cd5\u4e0a\u4e8c\u8005\u90fd\u53ef\u4ee5\u4f7f\u7528\u5927\u62ec\u53f7\u7684\u65b9\u5f0f\u521d\u59cb\u5316\uff1a", "A a = {1, 2, 3}; \u4e0d\u7ba1 A \u662f\u4e2a struct \u8fd8\u662f\u4e2a class \uff0c\u524d\u63d0\u662f\u8fd9\u4e2a\u7c7b / \u7ed3\u6784\u8db3\u591f\u7b80\u5355\uff0c\u6bd4\u5982\u6240\u6709\u7684\u6210\u5458\u90fd\u662f public \u7684\uff0c\u6240\u6709\u7684\u6210\u5458\u90fd\u662f\u7b80\u5355\u7c7b\u578b\uff0c\u6ca1\u6709\u663e\u5f0f\u58f0\u660e\u7684\u6784\u9020\u51fd\u6570\u3002", "\n\uff08 4 \uff09\u90fd\u53ef\u4ee5\u8fdb\u884c\u590d\u6742\u7684\u7ee7\u627f\u751a\u81f3\u591a\u91cd\u7ee7\u627f\uff0c\u4e00\u4e2a struct \u53ef\u4ee5\u7ee7\u627f\u81ea\u4e00\u4e2a class \uff0c\u53cd\u4e4b\u4ea6\u53ef\uff1b\u4e00\u4e2a struct \u53ef\u4ee5\u540c\u65f6\u7ee7\u627f 5 \u4e2a class \u548c 5 \u4e2a struct \uff0c\u867d\u7136\u8fd9\u6837\u505a\u4e0d\u592a\u597d\u3002", "\n\uff08 5 \uff09\u5982\u679c\u8bf4 class \u7684\u8bbe\u8ba1\u9700\u8981\u6ce8\u610f OO \u7684\u539f\u5219\u548c\u98ce\u683c\uff0c\u90a3\u4e48\u6ca1\u4efb\u4f55\u7406\u7531\u8bf4\u8bbe\u8ba1 struct \u5c31\u4e0d\u9700\u8981\u6ce8\u610f\u3002", "\n\uff08 6 \uff09\u518d\u6b21\u8bf4\u660e\uff0c\u4ee5\u4e0a\u6240\u6709\u8bf4\u6cd5\u90fd\u662f\u6307\u5728 C++ \u8bed\u8a00\u4e2d\uff0c\u81f3\u4e8e\u5728 C \u91cc\u7684\u60c5\u51b5\uff0c C \u91cc\u662f\u6839\u672c\u6ca1\u6709 \u201cclass\u201d \uff0c\u800c C \u7684 struct \u4ece\u6839\u672c\u4e0a\u4e5f\u53ea\u662f\u4e2a\u5305\u88c5\u6570\u636e\u7684\u8bed\u6cd5\u673a\u5236\u3002", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014", "\u6700\u540e\uff0c\u4f5c\u4e3a\u8bed\u8a00\u7684\u4e24\u4e2a\u5173\u952e\u5b57\uff0c\u9664\u53bb\u5b9a\u4e49\u7c7b\u578b\u65f6\u6709\u4e0a\u8ff0\u533a\u522b\u4e4b\u5916\uff0c\u53e6\u5916\u8fd8\u6709\u4e00\u70b9\u70b9\uff1a \u201cclass\u201d \u8fd9\u4e2a\u5173\u952e\u5b57\u8fd8\u7528\u4e8e\u5b9a\u4e49\u6a21\u677f\u53c2\u6570\uff0c\u5c31\u50cf \u201ctypename\u201d \u3002\u4f46\u5173\u952e\u5b57 \u201cstruct\u201d \u4e0d\u7528\u4e8e\u5b9a\u4e49\u6a21\u677f\u53c2\u6570\u3002", "\u5728\u6a21\u7248\u4e2d\uff0c\u7c7b\u578b\u53c2\u6570\u524d\u9762\u53ef\u4ee5\u4f7f\u7528class\u6216typename\uff0c\u5982\u679c\u4f7f\u7528struct\uff0c\u5219\u542b\u4e49\u4e0d\u540c\uff0cstruct\u540e\u9762\u8ddf\u7684\u662f\u201cnon-type template parameter\u201d\uff0c\u800cclass\u6216typename\u540e\u9762\u8ddf\u7684\u662f\u7c7b\u578b\u53c2\u6570\u3002", "\ntemplate", "\nvoid f(X x)", "\n{", "\n}", "\n//\u51fa\u9519\u4fe1\u606f\uff1ad:codecpptestcpptestcpptest.cpp(33) : error C2065: \u2018X\u2019 : undeclared identifier", "\u5173\u4e8e\u4f7f\u7528\u5927\u62ec\u53f7\u521d\u59cb\u5316", "class \u548c struct \u5982\u679c\u5b9a\u4e49\u4e86\u6784\u9020\u51fd\u6570\u7684\u8bdd\uff0c\u90fd\u4e0d\u80fd\u7528\u5927\u62ec\u53f7\u8fdb\u884c\u521d\u59cb\u5316", "\u5982\u679c\u6ca1\u6709\u5b9a\u4e49\u6784\u9020\u51fd\u6570\uff0c struct \u53ef\u4ee5\u7528\u5927\u62ec\u53f7\u521d\u59cb\u5316\u3002", "\u5982\u679c\u6ca1\u6709\u5b9a\u4e49\u6784\u9020\u51fd\u6570\uff0c\u4e14\u6240\u6709\u6210\u5458\u53d8\u91cf\u5168\u662f public \u7684\u8bdd\uff0c\u53ef\u4ee5\u7528\u5927\u62ec\u53f7\u521d\u59cb\u5316\u3002", "\u5173\u4e8e\u9ed8\u8ba4\u8bbf\u95ee\u6743\u9650", "class \u4e2d\u9ed8\u8ba4\u7684\u6210\u5458\u8bbf\u95ee\u6743\u9650\u662f private \u7684\uff0c\u800c struct \u4e2d\u5219\u662f public \u7684\u3002", "\u5173\u4e8e\u7ee7\u627f\u65b9\u5f0f", "class \u7ee7\u627f\u9ed8\u8ba4\u662f private \u7ee7\u627f\uff0c\u800c struct \u7ee7\u627f\u9ed8\u8ba4\u662f public \u7ee7\u627f\u3002", "\u5173\u4e8e\u6a21\u7248", "\u5728\u6a21\u7248\u4e2d\uff0c\u7c7b\u578b\u53c2\u6570\u524d\u9762\u53ef\u4ee5\u4f7f\u7528 class \u6216 typename \uff0c\u5982\u679c\u4f7f\u7528 struct \uff0c\u5219\u542b\u4e49\u4e0d\u540c\uff0c struct \u540e\u9762\u8ddf\u7684\u662f \u201cnon-type template parameter\u201d \uff0c\u800c class \u6216 typename \u540e\u9762\u8ddf\u7684\u662f\u7c7b\u578b\u53c2\u6570\u3002", "class \u4e2d\u6709\u4e2a\u9ed8\u8ba4\u7684 this \u6307\u9488\uff0c struct \u6ca1\u6709", "\n\u4e0d\u540c\u70b9\uff1a\u6784\u9020\u51fd\u6570\uff0c\u6790\u6784\u51fd\u6570 this \u6307\u9488", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n117. \u6709\u5173\u91cd\u8f7d\u51fd\u6570", "\u8fd4\u56de\u503c\u7c7b\u578b\u4e0d\u540c\u6784\u4e0d\u6210\u91cd\u8f7d", "\n\u53c2\u6570\u53c2\u6570\u987a\u5e8f\u4e0d\u540c\u80fd\u6784\u6210\u91cd\u8f7d", "c++ \u51fd\u6570\u540c\u540d\u4e0d\u540c\u8fd4\u56de\u503c\u4e0d\u7b97\u91cd\u8f7d\uff01\u51fd\u6570\u91cd\u8f7d\u662f\u5ffd\u7565\u8fd4\u56de\u503c\u7c7b\u578b\u7684\u3002", "\u6210\u5458\u51fd\u6570\u88ab\u91cd\u8f7d\u7684\u7279\u5f81\u6709\uff1a", "\n1) \u76f8\u540c\u7684\u8303\u56f4\uff08\u5728\u540c\u4e00\u4e2a\u7c7b\u4e2d\uff09\uff1b", "\n2) \u51fd\u6570\u540d\u5b57\u76f8\u540c\uff1b", "\n3) \u53c2\u6570\u4e0d\u540c\uff1b", "\n4) virtual \u5173\u952e\u5b57\u53ef\u6709\u53ef\u65e0\u3002", "5) \u6210\u5458\u51fd\u6570\u4e2d \u6709\u65e0 const ( \u51fd\u6570\u540e\u9762 ) \u4e5f\u53ef\u5224\u65ad\u662f\u5426\u91cd\u8f7d", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n118. \u6570\u636e\u5e93\u4e0e T-SQL \u8bed\u8a00", "\u5173\u7cfb\u6570\u636e\u5e93\u662f\u8868\u7684\u96c6\u5408\uff0c\u5b83\u662f\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u5173\u7cfb\u6a21\u5f0f\u5b9a\u4e49\u3002 SQL \u8bed\u8a00\u4e2d\u7684\u6570\u636e\u5b9a\u4e49\u529f\u80fd\u5305\u62ec\u5bf9\u6570\u636e\u5e93\u3001\u57fa\u672c\u8868\u3001\u89c6\u56fe\u3001\u7d22\u5f15\u7684\u5b9a\u4e49\u3002", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n119. \u5173\u7cfb\u6a21\u578b\u7684\u57fa\u672c\u6982\u5ff5", "\u5173\u7cfb\u6570\u636e\u5e93\u4ee5\u5173\u7cfb\u6a21\u578b\u4e3a\u57fa\u7840\uff0c\u5b83\u6709\u4ee5\u4e0b\u4e09\u90e8\u5206\u7ec4\u6210\uff1a", "\n\u25cf \u6570\u636e\u7ed3\u6784 \u2014\u2014 \u6a21\u578b\u6240\u64cd\u4f5c\u7684\u5bf9\u8c61\u3001\u7c7b\u578b\u7684\u96c6\u5408", "\n\u25cf \u5b8c\u6574\u6027\u89c4\u5219 \u2014\u2014 \u4fdd\u8bc1\u6570\u636e\u6709\u6548\u3001\u6b63\u786e\u7684\u7ea6\u675f\u6761\u4ef6", "\n\u25cf \u6570\u636e\u64cd\u4f5c \u2014\u2014 \u5bf9\u6a21\u578b\u5bf9\u8c61\u6240\u5141\u8bb8\u6267\u884c\u7684\u64cd\u4f5c\u65b9\u5f0f", "\n\u5173\u7cfb\uff08 Relation \uff09\u662f\u4e00\u4e2a\u7531\u884c\u548c\u5217\u7ec4\u6210\u7684\u4e8c\u7ef4\u8868\u683c\uff0c\u8868\u4e2d\u7684\u6bcf\u4e00\u884c\u662f\u4e00\u6761\u8bb0\u5f55\uff08 Record \uff09\uff0c\u6bcf\u4e00\u5217\u662f\u8bb0\u5f55\u7684\u4e00\u4e2a\u5b57\u6bb5\uff08 Field \uff09\u3002\u8868\u4e2d\u7684\u6bcf\u4e00\u6761\u8bb0\u5f55\u5fc5\u987b\u662f\u4e92\u65a5\u7684\uff0c\u5b57\u6bb5\u7684\u503c\u5fc5\u987b\u5177\u6709\u539f\u5b50\u6027\u3002", "\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n120.SQL \u8bed\u8a00\u6982\u8ff0", "SQL \uff08\u7ed3\u6784\u5316\u67e5\u8be2\u8bed\u8a00\uff09\u662f\u5173\u7cfb\u6570\u636e\u5e93\u8bed\u8a00\u7684\u4e00\u79cd\u56fd\u9645\u6807\u51c6\uff0c\u5b83\u662f\u4e00\u79cd\u975e\u8fc7\u7a0b\u5316\u7684\u8bed\u8a00\u3002\u901a\u8fc7\u7f16\u5199 SQL \uff0c\u6211\u4eec\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u5173\u7cfb\u6570\u636e\u5e93\u7684\u5168\u90e8\u64cd\u4f5c\u3002", "\n\u25cf \u6570\u636e\u5b9a\u4e49\u8bed\u8a00\uff08 DDL \uff09 \u2014\u2014 \u5efa\u7acb\u548c\u7ba1\u7406\u6570\u636e\u5e93\u5bf9\u8c61", "\n\u25cf \u6570\u636e\u64cd\u7eb5\u8bed\u8a00\uff08 DML \uff09 \u2014\u2014 \u7528\u6765\u67e5\u8be2\u4e0e\u66f4\u65b0\u6570\u636e", "\n\u25cf \u6570\u636e\u63a7\u5236\u8bed\u8a00\uff08 DCL \uff09 \u2014\u2014 \u63a7\u5236\u6570\u636e\u7684\u5b89\u5168\u6027", "\u8d77\u6765\u662f\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u95ee\u9898\uff0c\u6bcf\u4e00\u4e2a\u4f7f\u7528\u8fc7 RDBMS \u7684\u4eba\u90fd\u4f1a\u6709\u4e00\u4e2a\u6982\u5ff5\u3002", "\u4e8b\u52a1\u5904\u7406\u7cfb\u7edf\u7684\u5178\u578b\u7279\u70b9\u662f\u5177\u5907 ACID \u7279\u5f81\u3002 ACID \u6307\u7684\u662f Atomic \uff08\u539f\u5b50\u7684\uff09\u3001 Consistent \uff08\u4e00\u81f4\u7684\uff09\u3001 Isolated \uff08\u9694\u79bb\u7684\uff09\u4ee5\u53ca Durable \uff08\u6301\u7eed\u7684\uff09\uff0c\u5b83\u4eec\u4ee3\u8868\u7740\u4e8b\u52a1\u5904\u7406\u5e94\u8be5\u5177\u5907\u7684\u56db\u4e2a\u7279\u5f81\uff1a", "\u539f\u5b50\u6027\uff1a\u7ec4\u6210\u4e8b\u52a1\u5904\u7406\u7684\u8bed\u53e5\u5f62\u6210\u4e86\u4e00\u4e2a\u903b\u8f91\u5355\u5143\uff0c\u4e0d\u80fd\u53ea\u6267\u884c\u5176\u4e2d\u7684\u4e00\u90e8\u5206", "\u4e00\u81f4\u6027\uff1a\u5728\u4e8b\u52a1\u5904\u7406\u6267\u884c\u4e4b\u524d\u548c\u4e4b\u540e\uff0c\u6570\u636e\u662f\u4e00\u81f4\u7684\u3002", "\u9694\u79bb\u6027\uff1a\u4e00\u4e2a\u4e8b\u52a1\u5904\u7406\u5bf9\u53e6\u4e00\u4e2a\u4e8b\u52a1\u5904\u7406\u6ca1\u6709\u5f71\u54cd\u3002", "\u6301\u7eed\u6027\uff1a\u5f53\u4e8b\u52a1\u5904\u7406\u6210\u529f\u6267\u884c\u5230\u7ed3\u675f\u7684\u65f6\u5019\uff0c\u5176\u6548\u679c\u5728\u6570\u636e\u5e93\u4e2d\u88ab\u6c38\u4e45\u7eaa\u5f55\u4e0b\u6765\u3002", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n121.C \u8bed\u8a00\u4e2d\u7ed3\u6784\u5316\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u4e09\u79cd\u57fa\u672c\u63a7\u5236\u7ed3\u6784", "\u987a\u5e8f\u7ed3\u6784", "\n\u9009\u62e9\u7ed3\u6784", "\n\u5faa\u73af\u7ed3\u6784", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n122.CVS \u662f\u4ec0\u4e48", "cvs \uff08 Concurrent Version System \uff09 \u662f\u4e00\u4e2a\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u3002\u4f7f\u7528\u5b83\uff0c\u53ef\u4ee5\u8bb0\u5f55\u4e0b\u4f60\u7684\u6e90\u6587\u4ef6\u7684\u5386\u53f2\u3002", "\u4f8b\u5982\uff0c\u4fee\u6539\u8f6f\u4ef6\u65f6\u53ef\u80fd\u4f1a\u4e0d\u77e5\u4e0d\u89c9\u6df7\u8fdb\u4e00\u4e9b bug \uff0c\u800c\u4e14\u53ef\u80fd\u8fc7\u4e86\u5f88\u4e45\u4f60\u624d\u4f1a\u5bdf\u89c9\u5230\u5b83\u4eec\u7684\u5b58\u5728\u3002\u6709\u4e86 cvs \uff0c\u4f60\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u6062\u590d\u65e7\u7248\u672c\uff0c\u5e76\u4ece\u4e2d\u770b\u51fa\u5230\u5e95\u662f\u54ea\u4e2a\u4fee\u6539\u5bfc\u81f4\u4e86\u8fd9\u4e2a bug \u3002\u6709\u65f6\u8fd9\u662f\u5f88\u6709\u7528\u7684\u3002", "CVS \u670d\u52a1\u5668\u7aef\u5bf9\u6bcf\u4e2a\u6587\u4ef6\u7ef4\u62a4\u7740\u4e00\u4e2a\u4fee\u8ba2\u53f7 , \u6bcf\u6b21\u5bf9\u6587\u4ef6\u7684\u66f4\u65b0\uff0c\u90fd\u4f1a\u4f7f\u5f97\u6587\u4ef6\u7684\u4fee\u8ba2\u53f7\u52a0 1 \u3002\u5728\u5ba2\u6237\u7aef\u4e2d\u4e5f\u5bf9\u6bcf\u4e2a\u6587\u4ef6\u7ef4\u62a4\u7740\u4e00\u4e2a\u4fee\u8ba2\u53f7 ,CVS \u901a\u8fc7\u8fd9\u4e24\u4e2a\u4fee\u8ba2\u53f7\u7684\u5173\u7cfb\uff0c\u6765\u8fdb\u884c Update,Commit \u548c\u53d1\u73b0\u51b2\u7a81\u7b49\u64cd\u4f5c\u64cd\u4f5c", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n123. \u4e09\u79cd\u57fa\u672c\u7684\u6570\u636e\u6a21\u578b", "\u6309\u7167\u6570\u636e\u7ed3\u6784\u7c7b\u578b\u7684\u4e0d\u540c\uff0c\u5c06\u6570\u636e\u6a21\u578b\u5212\u5206\u4e3a\u5c42\u6b21\u6a21\u578b\u3001\u7f51\u72b6\u6a21\u578b\u548c\u5173\u7cfb\u6a21\u578b\u3002", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013"], "title": "C++\u7b14\u8bd5\u9762\u8bd5\u9898 \u4ece\u7f51\u4e0a\u6574\u7406\u7684\uff0c\u5e26\u7b54\u6848"},
{"contents": ["\u6700\u8fd1\u611f\u89c9\u5728\u8fd9\u5bb6\u516c\u53f8\u5b9e\u5728\u662f\u5e72\u4e0d\u4e0b\u53bb\u4e86\u3002\u4e8e\u662f\u5c31\u6295\u7b80\u5386\u9762\u8bd5\u5427\u3002", "\n\u60f3\u8981\u627e\u5230\u4e0b\u5bb6\uff0c\u9996\u5148\u662f\u8981\u5199\u597d\u81ea\u5df1\u7684\u7b80\u5386\uff0c\u4e8e\u662f\u547c\uff0c\u60f3\u60f3\u81ea\u5df1\u8fd9\u51e0\u5e74\u5e72\u8fc7\u7684\u4e1c\u897f\uff0c\u547c\u62c9\u4e00\u4e0b\u5168\u5199\u4e0a\u53bb\u4e86\u3002\u7136\u540e\u5c31\u5728\u62db\u8058\u7f51\u7ad9\u4e0a\u9022C/C++\u804c\u4f4d\u5c31\u6295\u3002", "\n\u4e8e\u662f\u5c31\u7b49\u6765\u4e86\u4e0d\u5c11\u9762\u8bd5\u673a\u4f1a\uff0c\u672c\u6765\u60f3\u505aLinux\u4e0bC\u5f00\u53d1\u7684\u3002\u4f46\u662f\u6ca1\u6709\u60f3\u5230\u9762\u8bd5\u7684\u673a\u4f1a\u5168\u662fVC\u7684\uff0c\u81ea\u5df1\u5bf9\u4e8eVC\u53ea\u662f\u4e00\u53ea\u534a\u89e3\uff0c\u4f46\u662f\u8fd9\u9762\u8bd5\u4e5f\u662f\u4e2a\u673a\u4f1a\uff0c\u5c31\u53bb\u770b\u770b\u4e86\u3002", "\n\u5468\u4e94\u4e0a\u5348\u9996\u5148\u53bb\u7684\u662f\u4e00\u5bb6\u5317\u7406\u5de5\u7684\u9644\u5c5e\u516c\u53f8\uff0c\u4eba\u5bb6\u62dbC++\u7684\uff0c\u4e3b\u8981\u662f\u505a3D\u5f00\u53d1\u7684\uff0c\u4f46\u662f\u54b1\u8fd9\u6ca1\u6709\u89c6\u9891\u5f00\u53d1\u7ecf\u9a8c\u554a\uff0c\u8bf4C++\u5427\uff0c\u54b1\u4e5f\u53ea\u662f\u4e86\u89e3\u4e00\u70b9\uff0c\u5bf9\u4e8eVC\u4e5f\u662f\u53ea\u4f1a\u7b80\u5355\u4f7f\u7528\u800c\u5df2\u3002\u6700\u5f00\u59cb\u8ba9\u54b1\u505a\u4e86\u4e00\u4efdJava\u7684\u9898\uff0c\u4eba\u4e8b\u7684\u770b\u5b8c\u4e86\u8bf4\u8fd9\u9053\u9898\u4e0d\u662f\u8ba9C/C++\u7684\u4eba\u505a\u7684\uff0c\u6c57\uff0c\u539f\u6765\u524d\u53f0\u7ed9\u641e\u9519\u4e86\u3002\u4e8e\u662f\u4eba\u4e8b\u90a3\u4e2a\u9ad8\u4e2a\u7f8e\u5973\u5c31\u53bb\u627eC\u7684\u6280\u672f\u8d1f\u8d23\u4eba\u4e86\uff0c\u5341\u51e0\u5206\u949f\u540e\uff0c\u6765\u4e86\u4e00\u4e2a\u4eba\uff0c\u4f46\u662f\u8fd9\u4e0dC\u9879\u76ee\u8d1f\u8d23\u4eba\uff0c\u662f\u5176\u5b83\u7ec4\u7684\uff0c\u56e0\u4e3a\u90a3\u8d1f\u8d23\u4eba\u51fa\u53bb\u529e\u4e8b\u513f\u4e86\u3002\u4e8e\u662f\u4ed6\u5c31\u7b80\u5355\u4ecb\u7ecd\u4e86\u4e00\u4e0b\u4ed6\u4eec\u5f00\u53d1\u7684\u516c\u53f8\uff0c\u8c8c\u4f3c\u62db\u6211\u7684\u9879\u76ee\u7ec4\u5341\u51e0\u4e2a\u4eba\uff0c\u6709\u4e00\u5927\u534a\u662fJava\u7684\u3002C\u8c8c\u4f3c\u53ea\u662f\u4e00\u5c0f\u90e8\u5206\uff0cC\u5f00\u53d1\u670d\u52a1\u5668\u7248\u672c\u7684\uff0c\u7136\u540e\u6709JavaScript\u5c01\u88c5\u8d77\u6765\u518d\u4f1a\u7ed9\u5e94\u7528\u663e\u793a\u7b49\u3002\u603b\u4e4b\u8fd9\u54e5\u4eec\u5bf9\u4e8e\u8fd9\u4e2a\u9879\u76ee\u4e5f\u662f\u4e0d\u592a\u4e86\u89e3\u3002", "\n\u4e8e\u662f\u5c31\u8bf4\u8ba9\u505a\u4e2a\u9898\u5427\uff0c\u7b2c\u4e00\u9898\u662fC++\u7684\u5b9a\u4e49\u4e24\u4e2a\u7c7b\uff0c\u4f46\u662f\u4e24\u4e2a\u7c7b\u7684\u6210\u5458\u53d8\u91cf\u4e92\u4e3a\u5bf9\u65b9\uff0c\u95ee\u662f\u5426\u53ef\u4ee5\u7f16\u8bd1\u5f97\u8fc7\u53bb\uff0c\u5982\u679c\u4e0d\u80fd\uff0c\u5982\u4f55\u4fee\u6539\u3002\u54b1\u4e0d\u4f1a\u3002\u7b2c\u4e8c\u4e2a\u9898\u662f\u95eeSTL\u4e3b\u8981\u6d89\u53ca\u4ec0\u4e48\u4e1c\u897f\uff0c\u54b1\u4e5f\u4e0d\u4f1a\u3002\u7136\u540e\u4e24\u4e2a\u662f\u601d\u7ef4\u9898\uff0c\u4e00\u4e2a\u662f1\u4e2a\u7ec6\u83cc3\u5206\u949f\u5206\u88c2\u4e00\u6b21\uff0c1\u5c0f\u65f6\u88c5\u6ee1\u5bb9\u5668\u3002\u95ee\u5982\u679c\u653e\u4e24\u4e2a\u7ec6\u83cc\u591a\u957f\u65f6\u95f4\u88c5\u6ee1\u5bb9\u5668\u3002\u8fd9\u4e2a\u8fd8\u77e5\u9053\uff0c57\u5206\u949f\u561b\u3002\u7b2c\u4e8c\u4e2a\u9898\u662f\u4f60\u8d70\u5230\u4e86\u4e00\u4e2a\u5341\u5b57\u8def\u53e3\uff0c\u9047\u5230\u4e24\u4e2a\u4eba\uff0c\u4e00\u4e2a\u4eba\u8bf4\u771f\u8bdd\uff0c\u4e00\u4e2a\u4eba\u8bf4\u5047\u8bdd\uff0c\u4f60\u5982\u4f55\u95ee\u80fd\u77e5\u9053\u81ea\u5df1\u5e94\u8be5\u8d70\u54ea\u4e2a\u8def\u53e3\u3002\u8fd9\u4e2a\u54b1\u771f\u6ca1\u6709\u601d\u8003\u8fc7\u3002\u5f97\u4e86\u3002\u8fd8\u662f\u770b\u7f16\u7a0b\u9898\u5427\uff0c\u7b2c\u4e00\u4e2a\u9898\u662f\u5982\u4f55\u5b9e\u73b0trim\u51fd\u6570\uff0c\u5c31\u662f\u628a\u5b57\u7b26\u4e32\u91cc\u6700\u53f3\u90e8\u5206\u7a7a\u683c\u53bb\u6389\uff0c\u5982\u201cBlaider \u201d\uff0c\u4fee\u6539\u540e\u4e3a\u201cBlaider\u201d\u3002\u8fd9\u4e2a\u8fd8\u597d\u505a\uff0c\u5c31\u662f\u8bb0\u5f55\u4e00\u4e0b\u5b57\u7b26\u4e32\u6700\u540e\u4e00\u7ec4\u7a7a\u683c\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c\u5728\u904d\u5386\u7ed3\u675f\u65f6\u628a\u8fd9\u4f4d\u7f6e\u96f6\uff0c\u8fd4\u56de\u6b64\u5b57\u7b26\u4e32\u3002", "\n\u5468\u4e94\u4e0b\u5348\u53bb\u5317\u822a\u7684\u4e00\u4e2a\u5b9e\u9a8c\u5ba4\u9762\u8bd5\u3002\u901a\u77e5\u8bf4\u662f2\uff1a00\uff0d4\uff1a00\u3002\u4e8e\u662f\u5c31\u57282\u70b9\u5de6\u53f3\u5230\u8fbe\uff0c\u6ca1\u6709\u60f3\u5230\u91cc\u9762\u5df2\u7ecf\u6709\u4e00\u4e2a\u4eba\u5728\u9762\u8bd5\uff0c\u90a3\u4e2a\u9762\u8bd5\u5b98\u8bf4\u4f60\u5148\u7b49\u7b49\u5427\uff0c\u5988\u7684\uff0c\u5c31\u8ba9\u6211\u5728\u65b0\u4e3b\u697c\u7684\u8d70\u5eca\u91cc\u786c\u751f\u751f\u5730\u7ad9\u4e86\u534a\u5c0f\u65f6\u3002\u8003\u8651\u5230\u9762\u8bd5\u4e3b\u8981\u662f\u4e3a\u4e86\u589e\u957f\u7ecf\u9a8c\uff0c\u54b1\u4e5f\u5fcd\u4e86\u3002\u534a\u5c0f\u65f6\u540e\uff0c\u7ec8\u4e8e\u8f6e\u5230\u4e86\uff0c\u539f\u6765\u62db\u7684\u4eba\u4e3b\u8981\u662f\u641e\u7b97\u6cd5\u7684\uff0c\u53ea\u662f\u628a\u6559\u6388\u548c\u535a\u58eb\u7684UML\u53ca\u6982\u8981\u8bbe\u8ba1\u8f6c\u6210\u8be6\u7ec6\u8bbe\u8ba1\u548cC++\u4ee3\u7801\uff0c\u95ee\u6211\u4ee5\u524d\u53c2\u52a0\u8fc7\u4ec0\u4e48\u9879\u76ee\uff0c\u7528\u8fc7\u4ec0\u4e48\u7b97\u6cd5\u6216\u8005\u662f\u6570\u636e\u7ed3\u6784\u6ca1\u6709\uff0c\u6211\u542c\u5f88\u5403\u60ca\uff0c\u6d89\u53ca\u5230\u7b97\u6cd5\u548c\u7ed3\u6784\u7684\u4eba\u8fd8\u4f1a\u60a8\u8fd9\u9762\u8bd5\u5417\uff1f\u60a8\u8001\u7528\u5f97\u8d77\u4e13\u95e8\u641e\u7b97\u6cd5\u548c\u7ed3\u6784\u7684\u8bbe\u8ba1\u4eba\u624d\u5417\uff1f\u6211\u8bf4\u57fa\u672c\u6ca1\u6709\uff0c\u5982\u679c\u6709\u7684\u8bdd\u4e5f\u5c31\u662f\u94fe\u8868\u548cFIFO\u5427\u3002\u7136\u540e\u95ee\u5728\u9879\u76ee\u91cc\u662f\u5e72\u4ec0\u4e48\u7684\uff0c\u662f\u6982\u8981\u8bbe\u8ba1\uff1f\u8be6\u7ec6\u8bbe\u8ba1\uff1f\u8fd8\u662f\u5e72\u4ec0\u4e48\uff1f\u6211\u8bf4\u6211\u53c2\u52a0\u7684\u90fd\u662f\u5c0f\u9879\u76ee\uff0c\u90fd\u662f\u5ba2\u6237\u6709\u4ec0\u4e48\u9700\u6c42\u76f4\u63a5\u505a\uff0c\u6ca1\u6709\u8fd9\u4e9b\u4e1c\u897f\u3002\u7136\u540e\u53c8\u95ee\u4e86\u4e00\u4e0b\u865a\u51fd\u6570\u7684\u610f\u601d\uff0c\u592a\u4ed6\u5988\u53ef\u7b11\u4e86\uff0c\u770b\u8fc7\u51e0\u672cC++\u4e66\u7684\u4eba\u90fd\u61c2\u8fd9\u4e2a\u5427\u3002\u5f53\u7136\u7ed3\u679c\u4e0d\u5bb9\u4e50\u89c2\uff0c\u671f\u95f4\u53c8\u6709\u4e00\u4eba\u6765\u9762\u8bd5\uff0c\u4ed6\u76f4\u63a5\u7ed9\u4eba\u5bb6\u8bf4\uff0c\u4f60\u5148\u5728\u5916\u9762\u7b49\u7b49\u5427\u3002\u56fd\u4f01\u7684\u8fd9\u5e2e\u4e1c\u897f\u771f\u4e0d\u62ff\u9762\u8bd5\u7684\u5f53\u4eba\u770b\u554a\u3002", "\n\u5468\u516d\u9762\u8bd5\u7684\u662f\u5317\u7406\u5de5\u7684\u4e00\u4e2a\u5b9e\u9a8c\u5ba4\u3002\u8fdb\u95e8\u8bf4\u4f60\u5148\u4e0a\u673a\u505a\u9898\u5427\uff0c\u4e94\u9053\uff0c\u7b2c\u4e00\u3001\u65b0\u5efa\u4e00\u4e2a\u5de5\u7a0b\uff0c\u5728\u6807\u9898\u680f\u663e\u793a\u7cfb\u7edf\u65f6\u95f4\uff0c\u4e00\u79d2\u66f4\u65b0\u4e00\u6b21\u3002\u7b2c\u4e8c\uff0c\u5b89\u7f6e\u4e24\u4e2a\u6309\u94ae\uff0c\u4e24\u4e2a\u9759\u6001\u63a7\u4ef6\uff0c\u4ece\u6570\u636e\u6587\u4ef6\u8bfb\u53d6\u6570\u636e\uff0c\u5e76\u663e\u793a\u5728\u9759\u6001\u63a7\u4ef6\u91cc\u3002\u7b2c\u4e09\uff0c\u5bf9\u6570\u636e\u8fdb\u884c\u964d\u5e8f\u6392\u5e8f\uff0c\u7b2c\u56db\uff0c\u5728\u9759\u6001\u63a7\u4ef6\u91cc\u753b\u51fa\u8fd9\u4e9b\u5750\u6807\u70b9\u3002\u7b2c\u4e94\uff0c\u5c06\u6b64\u6587\u4ef6\u901a\u8fc7\u7f51\u7edc\u53d1\u9001\u548c\u63a5\u6536\u4fdd\u5b58\u4e00\u4e0b\u3002", "\n\u5e73\u65f6\u505aVC\u90fd\u662f\u76f4\u63a5\u5728\u7f51\u4e0a\u641c\u7d22\u627e\u4ee3\u7801\uff0c\u7136\u540e\u4fee\u6539\uff0c\u81ea\u5df1\u76f4\u63a5\u505a\u54ea\u4f1a\u554a\u3002\u4e8e\u662f\u544a\u8bc9\u9762\u8bd5\u4eba\u5458\u8bf4\uff0c\u6211\u4e0d\u4f1a\u3002\u4e8e\u662f\u8881\u8001\u5e08\u5c31\u8bf4\u90a3\u5c31\u8c08\u8c08\u4f60\u7684\u9879\u76ee\u7ecf\u9a8c\u5427\u3002\u4e8e\u662f\u6765\u5230\u53e6\u5916\u4e00\u4e2a\u4f1a\u8bae\u5ba4\uff0c\u4e3b\u4efb\u548c\u8881\u8001\u5e08\u5f00\u59cb\u8c08\u9879\u76ee\u7ecf\u9a8c\uff0c\u7136\u540e\u6211\u53d1\u73b0\u4ed6\u4eec\u73b0\u5728\u505a\u7684\u5176\u5b9e\u548c\u6211\u66fe\u7ecf\u505a\u8fc7\u7684\u4e00\u4e2a\u5c0f\u9879\u76ee\u5f88\u76f8\u4f3c\uff0c\u53ef\u4ee5\u8bf4\u5c31\u662f\u6211\u90a3\u4e2a\u8f6f\u4ef6\u7684\u7ffb\u7248\u3002\u63a7\u5236PCI\u8bbe\u5907\uff0c\u7528TeeChart\u663e\u793a\u7b49\u3002\u5185\u5bb9\u95ee\u4e86\u5f88\u591a\uff0c\u8fd8\u8ba9\u53e3\u5934\u7ffb\u8bd1\u4e86\u4e24\u6bb5\u82f1\u8bed\u3002\u7b2c\u4e00\u4e2a\u5e38\u7528\u7684\u57fa\u672c\u7ffb\u8bd1\u8fc7\u4e86\uff0c\u7b2c\u4e8c\u4e2a\u4e13\u4e1a\u7684\u6709\u4e24\u4e2a\u5355\u8bcd\u4e0d\u8ba4\u8bc6\u3002\u6700\u540e\u4e3b\u4efb\u8bf4\uff0c\u4f60\u8fd8\u662f\u505a\u4e00\u4e0b\u9898\u5427\uff0c\u53ef\u80fd\u4f1a\u5f71\u54cd\u5230\u4f60\u7684\u5de5\u8d44\uff0c\u4e8e\u662f\u6211\u5c31\u5728\u53ef\u4ee5\u901a\u8fc7\u7f51\u7edc\u7684\u60c5\u51b5\u4e0b\u5f00\u59cb\u505a\u9898\u3002\u7b2c\u4e00\uff0c\u7b2c\u4e8c\u5f88\u5feb\u641e\u5b9a\uff0c\u6392\u5e8f\u77e5\u9053\u662f\u7528\u5192\u6ce1\u6cd5\uff0c\u4f46\u662f\u5b9e\u73b0\u8d77\u6765\u53bb\u53d1\u73b0\u8001\u662f\u6392\u5e8f\u4e0d\u5bf9\uff0c\u8c03\u8bd5\u4e86\u5341\u5206\u5206\u949f\u624d\u641e\u51fa\u6765\u3002\u7b2c\u56db\u6ca1\u6709\u505a\u8fc7\uff0c\u7b2c\u4e94\u7f51\u7edc\u7684\u516c\u53f8\u6709\u70b9\u590d\u6742\uff0c\u4e5f\u4e0d\u662f\u4e00\u65f6\u534a\u4f1a\u53ef\u4ee5\u8c03\u8bd5\u51fa\u6765\u7684\uff0c\u4e8e\u662f\u76f4\u63a5\u4ea4\u5377\uff0c\u8d70\u4eba\u3002\u4f30\u8ba1\u5bf9\u6211\u7684\u7f16\u7a0b\u80fd\u529b\u4ed6\u4eec\u611f\u5230\u6000\u7591\u5427\u3002", "\n\u4e0b\u5348\u5750\u5730\u94c1\u8d76\u5230\u970d\u8425\u3002\u8ba9\u540c\u5b66\u770b\u4e86\u4e00\u4e0b\u6211\u7684\u7b80\u5386\uff0c\u53d1\u73b0\u771f\u7684\u662f\u5f88\u4e71\u3002\u641e\u7b80\u5386\u5e94\u8be5\u4e13\u4e1a\u70b9\uff0c\u540c\u65f6\u81ea\u5df1\u7684\u809a\u5b50\u91cc\u5e94\u8be5\u4e5f\u6709\u70b9\u6599\u3002\u7ecf\u8fc7\u4e09\u573a\u9762\u8bd5\uff0c\u6211\u7ec8\u4e8e\u77e5\u9053\u4ec0\u4e48\u53eb\u4e0d\u80fd\u6df7\u4e86\uff0c\u4e0d\u62ff\u51fa\u70b9\u81ea\u5df1\u7684\u4e1c\u897f\uff0c\u771f\u4e0d\u884c\u3002\u540c\u65f6\u542c\u540c\u5b66\u8bb2\u4e86\u8bb2\u4ed6\u4eec\u90a3\u6837\u5b50\u7684\u5927\u516c\u53f8\uff0c\u6bcf\u4e2a\u4eba\u505a\u5f97\u5f88\u4e13\u3002\u540c\u65f6\u4ed6\u4eec\u9762\u8bd5\u65f6\u95ee\u7684\u4e1c\u897f\u3002\u6211\u624d\u611f\u89c9\u3002\u81ea\u5df1\u8fd9\u6b21\u7684\u9762\u8bd5\u5f88\u5931\u8d25\u554a\u3002\u672c\u6765\u60f3\u627eLinux\u4e0b\u5f00\u53d1\u7684\u5de5\u4f5c\uff0c\u4f46\u662f\u7b80\u5386\u4e0a\u5e76\u6ca1\u6709\u7a81\u51fa\u81ea\u5df1\u5728Linux\u4e0b\u7684\u7ecf\u5386\uff0c\u540c\u65f6\u5bf9\u4e8e\u4e0a\u673a\u9898\u7684\u9762\u8bd5\u8ba9\u6211\u77e5\u9053\uff0c\u4e0d\u80fd\u53ea\u9760\u7f51\u7edc\u554a\uff0c\u81ea\u5df1\u7684\u8111\u888b\u91cc\u8fd8\u662f\u5e94\u8be5\u8bb0\u70b9\u4e1c\u897f\u7684\uff0c\u81f3\u5c11\u628a\u5b66\u7528\u7684\u4e1c\u897f\u90fd\u53ef\u4ee5\u5199\u4e0b\u6765\uff0c\u5982\u7f51\u7edcSocket\u7b49\uff0c\u4e8e\u662f\u51b3\u5b9a\uff0c\u4e0d\u518d\u627e\u5de5\u4f5c\uff0c\u8707\u4f0f\u4e24\u4e2a\u6708\uff0c\u597d\u597d\u6df1\u5316\u4e00\u4e0b\u81ea\u5df1\u5b66\u5230\u7684\u4e1c\u897f\u518d\u51fa\u6765\u627e\u5de5\u4f5c\u3002", "\n\u540c\u90ae\u4ef6\u5217\u8868\u4e0a\u4e00\u4f4d\u5728IBM\u505a\u5185\u6838\u5f00\u53d1\u7684\u54e5\u4eec\u804a\u8fc7\u540e\u4e5f\u660e\u767d\uff0c\u81ea\u5df1\u7684\u7ecf\u5386\u592a\u5927\u592a\u6742\uff0c\u5e76\u6ca1\u6709\u4efb\u4f55\u4eae\u70b9\uff0c\u6c38\u8fdc\u8fdb\u4e0d\u4e86\u5927\u516c\u53f8\u3002\u6211\u53ef\u4ee5\u5148\u5728\u4e00\u5bb6\u5c0f\u516c\u53f8\u5e72\uff0c\u6709\u673a\u4f1a\u518d\u53bb\u5927\u516c\u53f8\u3002\u540c\u65f6\u8981\u53c2\u52a0\u5f00\u6e90\u9879\u76ee\uff0c\u5207\u5b9e\u63d0\u9ad8\u4e00\u4e0b\u81ea\u5df1\u7684\u9879\u76ee\u7ecf\u5386\u548c\u9879\u76ee\u7ecf\u9a8c\uff0c\u5411\u5927\u5e08\u4eec\u5b66\u4e60\u3002"], "title": "2012\u5e746\u6708\u521d\u7684C/C++\u804c\u9762\u8bd5\u7ecf\u8fc7"},
{"contents": ["1.tcp\u4e2dsend\uff08\uff09\u4e24\u6b21recv\u8981\u51e0\u6b21\u3002\u6362\u6210udp\u53c8\u600e\u6837\u3002\u4e3a\u4ec0\u4e48\u3002", "tcp\u53d1\u90010\u5b57\u8282\u7684\u4f1a\u6536\u7684\u5230\u5417\uff1fudp\u53c8\u4f1a\u5982\u4f55\uff1f", "makefile\u4e2d=\uff0c\uff1a=\uff0c\uff1f=\u7684\u533a\u522b\uff1f", "\ntcp\u4e2d\u600e\u4e48\u63a7\u5236connection\u7684\u8fde\u63a5\u8d85\u65f6\u3002", "2.\u5199\u4e2a\u5faa\u73af\u53cc\u94fe\u8868\u7684\u4ee3\u7801,\u81ea\u5df1\u5199\u3002\u4ed6\u63d0\u4f9b\u51e0\u4e2a\u51fd\u6570\u540d", "\n3.\u5173\u4e8e\u8fdb\u7a0b\u95f4\u901a\u4fe1", "\n4.\u667a\u5546\u9898", "\u00a0", "\u7b14\u8bd5", "1.int\u00a0a[][2]\u00a0=\u00a0{{a,b},{c,d}}", "\u00a0\u00a0char\u00a0**p\u00a0=\u00a0a;", "\u00a0\u00a0printf(\u201c%s\\n\u201d,*(p+1));", "\u00a0\u00a0p++;", "\u00a0printf(\u201c%s\\n\u201d,*p\u00a0+\u00a01);", "\u8f93\u51fa\u4ee5\u4e0b\u7ed3\u679c:", "%s\u4e0d\u80fd\u8f93\u51fachar\u00a0\u7c7b\u578b\u7684\u53d8\u91cf\u3002\u8981\u629b\u51fa\u5f02\u5e38", "\u00a0", "\u00a0", "\u53ef\u80fd\u7ed3\u679c:", "1.\u63d0\u793a\u00a0b\u00a0c\u00a0d\u00a0\u672a\u5b9a\u4e49\u00a0\u00a0\u00a0\u7b2c\u4e00\u884c\u7f3a\u5c11\u2019;\u2019", "2.cd", "b", "\u00a0", "\u00a0", "\u00a0", "2.string\u7c7b,\u5199\u51fa\u7c7b\u51fd\u6570", "string", "{", "public:", "\u00a0string(const\u00a0char\u00a0*str\u00a0=\u00a0NULL);", "\u00a0string(const\u00a0string\u00a0&other);", "\u00a0~string(void);", "\u00a0string\u00a0&operator\u00a0=(\u00a0const\u00a0string\u00a0&other);", "private:", "\u00a0\u00a0char\u00a0*m_pstr;", "}", "/////////////////////", "string::string(const\u00a0char\u00a0*str)", "{", "\u00a0\u00a0If(str\u00a0!=\u00a0NULL)", "\u00a0\u00a0{", "\u00a0\u00a0\u00a0\u00a0Int\u00a0length\u00a0=\u00a0strlen(str);", "\u00a0\u00a0\u00a0\u00a0M_pstr\u00a0=\u00a0new\u00a0char[length+1];", "\u00a0\u00a0 Strcpy(m_pstr,str);", "}", "\u00a0\u00a0Else", "{", "\u00a0\u00a0\u00a0M_pstr\u00a0=\u00a0new\u00a0char[1];", "*M_pstr\u00a0=\u00a0\u2018\\0\u2019;", "}", "}", "string\u00a0::string(const\u00a0string\u00a0&other)", "{", "\u00a0\u00a0\u00a0If(other.m_pstr\u00a0!=\u00a0NULL)", "{", "Int\u00a0length\u00a0=\u00a0strlen(str);", "\u00a0\u00a0\u00a0\u00a0M_pstr\u00a0=\u00a0new\u00a0char[length+1];", "\u00a0\u00a0 Strcpy(m_pstr,str);", "}", "\u00a0\u00a0Else", "\u00a0\u00a0{", "\u00a0\u00a0\u00a0\u00a0M_pstr\u00a0=\u00a0new\u00a0char[1];", "*M_pstr\u00a0=\u00a0\u2018\\0\u2019;", "\u00a0", "\u00a0\u00a0}", "}", "string\u00a0::string::string(void)", "{", "\u00a0\u00a0\u00a0\u00a0Free\u00a0m_pstr;", "}", "string\u00a0&\u00a0string::operator\u00a0=(\u00a0const\u00a0string\u00a0&other)", "{", "\u00a0\u00a0\u00a0If(this\u00a0==\u00a0&other)", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Return\u00a0*this;", "\u00a0\u00a0\u00a0Free(m_pstr);", "\u00a0\u00a0\u00a0If(other.m_pstr\u00a0!=\u00a0NULL)", "{", "\u00a0\u00a0\u00a0\u00a0\u00a0//Free(m_pstr);", "\u00a0\u00a0\u00a0\u00a0\u00a0Malloc(m_pstr,strlen(other.m_pstr)+1);", "Strcpy(m_pstr,\u00a0other.m_pstr);", "}", "\u00a0\u00a0\u00a0Else", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0M_pstr\u00a0=\u00a0NULL;", "Return\u00a0*this;", "\u00a0", "}", "3.\u5229\u7528\u9012\u5f52\u5b9e\u73b0\u8f93\u51651\u8f93\u516511,\u8f93\u516512\u8f93\u51fa1122", "//\u6b63\u786e\u7b54\u6848", "Void\u00a0func(char\u00a0*output)", "{", "\u00a0\u00a0\u00a0Char\u00a0*p\u00a0=\u00a0output;", "\u00a0\u00a0\u00a0If(*p\u00a0!=\u00a0\u2018\\0\u2019)", "\u00a0\u00a0\u00a0{", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Printf(\u201c%c%c\u201d,*p,*p);", "}", "\u00a0\u00a0\u00a0Else", "\u00a0\u00a0\u00a0{", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Printf(\u201c\\nover!\\n\u201d);", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Return\u00a0;", "\u00a0\u00a0\u00a0}", "\u00a0\u00a0\u00a0Func(++p);", "}", "\u00a0", "\u00a0\u00a0void\u00a0printDoubleNum(int\u00a0num)", "\u00a0\u00a0{", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Int\u00a0i\u00a0=\u00a00;", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Int\u00a0first\u00a0=\u00a00;", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Int\u00a0second\u00a0=\u00a00;", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0If(num/10\u00a0==\u00a00)", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Printf(\u201c%d%d\u201d,second);", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Fflush();", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Return\u00a0;", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0While(1)", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0If((first\u00a0=\u00a0num/Pow(10,i))\u00a0!=\u00a00)", "{", "\u00a0\u00a0\u00a0Second\u00a0=\u00a0first;", "I++;", "}", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Else\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Break;", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Printf(\u201c%d%d\u201d,second);", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Fflush();", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Int\u00a0val\u00a0=\u00a0num\u00a0\u2013\u00a0second*pow(10,\u00a0i-1);", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0printDoubleNum(val);", "\u00a0\u00a0}", "4.\u00a0void\u00a0GetMemory(char\u00a0*p)\u00a0", "{\u00a0", "p\u00a0=\u00a0(char\u00a0*)malloc(100);\u00a0", "}\u00a0", "void\u00a0Test(void)\u00a0\u00a0\u00a0", "{\u00a0", "char\u00a0*str\u00a0=\u00a0NULL;\u00a0", "GetMemory(str);\u00a0\u00a0", "strcpy(str,\u00a0\u201dhello\u00a0world\u201d);\u00a0", "printf(str);\u00a0", "}\u00a0", "\u8f93\u51fa\u7ed3\u679c:\u00a0\u00a0\u6bb5\u9519\u8bef\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0", "\u4e3a\u4ec0\u4e48:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0GetMemory\u4e0d\u80fd\u4f20\u9012\u52a8\u6001\u5185\u5b58\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0", "5.char\u00a0*p;", "\u00a0\u00a0char\u00a0a[5][5];", "\u00a0\u00a0char\u00a0*q\u00a0=\u00a0(char\u00a0*)malloc(100);", "\u00a0\u00a0printf(\u201c%d\\n\u201d,sizeof(p));", "printf(\u201c%d\\n\u201d,sizeof(a));", "printf(\u201c%d\\n\u201d,sizeof(a[5][5]));", "printf(\u201c%d\\n\u201d,sizeof(q));", "\u8f93\u51fa\u7ed3\u679c:", "4", "25", "1", "4\uff08\u56e0\u4e3aq\u4e0d\u662f\u6570\u7ec4\uff09", "6.\u91cd\u8f7d\u548c\u91cd\u5b9a\u4e49\u7684\u533a\u522b", "\u91cd\u8f7d\u662f\u5728\u540c\u4e00\u4e2a\u7c7b\u4e2d\uff0c\u540c\u4e00\u4e2a\u51fd\u6570\u540d\uff0c\u56e0\u5b83\u4eec\u7684\u53c2\u6570\u7684\u4f4d\u7f6e\uff0c\u53c2\u6570\u7684\u7c7b\u578b\uff0c\u6392\u5217\u987a\u5e8f\u4e0d\u4e00\u6837\uff0c\u4f7f\u5728\u8c03\u7528\u7684\u65f6\u5019\u6839\u636e\u4e0d\u540c\u60c5\u51b5\u8c03\u7528\u4e0d\u540c\u7684\u51fd\u6570", "\u00a0\u5b50\u7c7b\u91cd\u65b0\u5b9a\u4e49\u7236\u7c7b\u4e2d\u6709\u76f8\u540c\u540d\u79f0\u7684\u975e\u865a\u51fd\u6570\u00a0(\u00a0\u53c2\u6570\u5217\u8868\u53ef\u4ee5\u4e0d\u540c\u00a0)\u00a0\u3002", "\u6709\u52a0virtual\u00a0\u5c31\u53eb\u505a\u8986\u76d6", "\u00a0", "7.\u7ed3\u675f\u7ebf\u7a0b\u548c\u8fdb\u7a0b\u6709\u54ea\u4e9b\u65b9\u5f0f", "\u7ed3\u675f\u7ebf\u7a0b\uff1a1\u3002\u5728\u51fd\u6570\u4e2d\u7528return,\u80fd\u56de\u5230\u8c03\u7528\u7ebf\u7a0b\u51fd\u6570\u7684\u7ebf\u7a0b\u3002", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a02\uff0e\u81ea\u7ebf\u7a0b\u5185\u8c03\u7528\u00a0\u7528Thread_exit(void\u00a0*exit_val);", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a03\uff0e\u7ebf\u7a0b\u5916\u9762\u8c03\u7528\u00a0\u00a0terminate_thread(HANDLE\u00a0ht)\u80fd\u7ed3\u675f\u6807\u8bc6\u4e3aht\u7684\u7ebf\u7a0b", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a04\uff0e\u4e3b\u7ebf\u7a0b\u7ed3\u675f\u65f6\u3002\u5176\u5b83\u7ebf\u7a0b\u4e5f\u4e0d\u80fd\u5b58\u5728", "\u7ed3\u675f\u8fdb\u7a0b\uff1a1\u3002\u5728\u51fd\u6570\u4e2d\u7528exit(),\u80fd\u7ed3\u675f\u8fdb\u7a0b\u3002", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a02\uff0e\u8fdb\u7a0b\u6536\u5230\u4fe1\u53f7\uff0c\u800c\u6b64\u4fe1\u53f7\u6ca1\u6709\u5904\u7406\uff0c\u6216\u662f\u5904\u7406\u91c7\u53d6\u4e86\u7ed3\u675f\u8fdb\u7a0b\u7684\u52a8\u4f5c.\u00a0", ".\u00a0", "\u00a0", "8.\u8bf4\u51faMFC\u4e2d\u6709\u90a3\u4e9bGDI\u7684\u7c7b", "\u00a0\u00a0CPen\u00a0\u00a0\u753b\u7b14", "\u00a0\u00a0CBrush\u00a0\u00a0\u753b\u5237", "\u00a0\u00a0HFONT\u00a0\u00a0\u00a0\u5b57\u4f53", "\u00a0\u00a0HBITMAP\u00a0\u4f4d\u56fe", "\u00a0\u00a0HPALETTE\u00a0\u00a0\u8c03\u8272\u677f", "\u00a0\u00a0HRGN\u00a0\u00a0\u00a0\u00a0\u533a\u57df\u00a0", "\u00a0\u00a0GDI\u5185\u5b58(\u5982\u505a\u53cc\u7f13\u51b2\u7528)", "\u00a0\u00a0DCcommplimap\u00a0\u00a0", "\u00a0\u00a0CObject"], "title": "\u6d77\u7855\u79d1\u6280C++\u804c\u4f4d\u9762\u8bd5"},
{"contents": ["MFC", "\u00a0", "C/C++", "1.", "2.", "3.", "\u00a0", "\u7a0b\u5e8f\uff1a", "\u5199\u4e00\u4e2a\u9012\u5f52\u7b97\u6cd5", "\u00a0"], "title": "\u7f8e\u8d5b\u8fbeC++\u6280\u672f\u9762\u8bd5\u9898"},
{"contents": ["\u586b\u5199\u7b80\u5386\u65f6\u5019\u8981\u6c42\u5199\u4e00\u6bb5\u82f1\u6587\u4f5c\u6587\uff0c", "\u00a0", "\u7b54\u6848\uff1aChar\u00a0str[];\u00a0\u00a0Str\u00a0=\u00a0\u201cabcd\u201d;", "A\u00a0ASCI\u00a0B\u00a0", "3 char\u00a0str[100];\u00a0*p\u00a0=\u00a0str;", "Sizeof(str),\u00a0sizeof(p)", "4\u00a0struct\u00a0SA{", "int\u00a0num;", "char\u00a0name[100];", "}", "void\u00a0change(struct\u00a0SA\u00a0object)", "{", "Object.num\u00a0=\u00a010;", "Strcpy(Object.name,\u00a0\u201chello\u201d);", "}", "void\u00a0change(struct\u00a0SA\u00a0*object)", "{", "Object->num\u00a0=\u00a010;", "Strcpy(Object->name,\u00a0\u201chello\u201d);", "}", "\u00a0", "Int\u00a0main(void)", "{", "Struct\u00a0SA\u00a0aa\u00a0=\u00a0{9,\u00a0\u201clili\u201d};", "Struct\u00a0SA\u00a0bb\u00a0=\u00a0{20,\u00a0\u201cBOBO\u201d};", "\u00a0", "Change(aa);", "Change(bb);", "Cout\u00a0<<\u00a0aa.num\u00a0<<\u00a0aa.name\u00a0<<\u00a0endl;", "Cout\u00a0<<\u00a0bb.num\u00a0<<\u00a0bb.name\u00a0<<\u00a0endl;", "}", "5", "Int\u00a0main()", "{", "Char\u00a0Str1[10],\u00a0str[10];", "Strcpy(str1,\u00a0\u201caaaaaaaaa\u201d);", "Strcpy(str2,\u00a0str1);", "}", "\u663e\u793a\u8fd0\u884c\u7ed3\u679c", "\u00a0", "6.", "\u5c0f\u5f20\u8bf4\uff1a\u5982\u679c\u6211\u4e0d\u77e5\u9053\u4f60\u4e00\u5b9a\u4e5f\u4e0d\u77e5\u9053\uff1b", "\u5c0f\u674e\u8bf4\uff1a\u6211\u539f\u6765\u4e0d\u77e5\u9053\u73b0\u5728\u77e5\u9053\u4e86\uff1b", "\u5c0f\u5f20\u8bf4\uff1a\u73b0\u5728\u6211\u4e5f\u77e5\u9053\u4e86", "\u00a0", "\uff08\u4e0b\u9762\u662f\u4e00\u7ec4\u65e5\u671f\uff0c\u8bb0\u4e0d\u4f4f\u4e86\uff09\u00a0", "\u00a0", "\u5e76\u7528\u51fd\u6570\u5199\u51fa\u7b97\u6cd5"], "title": "\u4e0a\u6d77\u6613\u5b9dC++\u7b14\u8bd5\u9898\u3001\u9762\u8bd5\u7ecf\u5386"},
{"contents": ["\u7b14\u8bd5\u6709\u4e24\u4efd", "\u7b2c", "\u9898\u578b\uff1a", "15", "\uff08\u4ee5\u4e0b\u9898\u76ee\u51ed\u5370\u8c61\u4e66\u5199\uff0c\u5927\u6982\u9898\u610f\uff09", "1:", "2", "3:", "4:", "5:", "6:", "\uff08\u5927\u6982\u8fd9\u6837\u3002\u3002\u3002\u5fd8\u4e86\uff09", "7:", "8:", "9:", "\u3002\u3002\u3002\u3002", "\u3002\u3002\u3002\u3002", "\u5176\u5b83\u5fd8\u4e86", "\u7b2c", "\u8fd9\u4e2a\u90fd\u6bd4\u8f83\u7b80\u5355\uff0c", "1:", "2:", "3:10", "4:static", "5:const", "6:", "7:connect", "8:", "9:", "10:", "\u6280\u672f\u9762\u8bd5", "\u9762\u8bd5\u6ca1\u95ee\u4ec0\u4e48\u6280\u672f\u9898\uff0c\u66f4\u4e0d\u4f1a\u95ee", "\u4e3b\u7ba1\u9762\u8bd5", "\u8fd9\u8fb9\u4e3b\u8981\u5565\u804a\uff0c\u8fde\u81ea\u6211\u4ecb\u7ecd\u90fd\u4e0d\u8981\uff0c\u5c31\u8bf4\u4e86\u4e00\u4e9b\u4f60\u7559\u5728\u4ed6\u4eec\u516c\u53f8\u8981\u597d\u597d\u505a\uff0c\u4f1a\u6709\u5927\u53d1\u5c55\u7684\uff0c\u516c\u53f8\u6280\u672f\u662f\u4e1a\u754c\u524d\u6cbf\u4ec0\u4e48\u7684\uff0c\u6700\u540e\u95ee\u4f60\u5de5\u8d44\uff0c\u5efa\u8bae\u5f00", "\u00a0", "\u00a0"], "title": "\u9ec4\u6cb3\u6570\u5b57\u6280\u672fC++\u5f00\u53d1\u7b14\u8bd5\u9898 \u9762\u8bd5\u9898\u4ee5\u53ca\u9762\u8bd5\u7ecf\u5386"},
{"contents": ["\u00a0\u00a0\u7b14\u8bd5\u9898\uff1a", "Char\u00a0*\u00a0const\u00a0p,char\u00a0const\u00a0*p,const\u00a0char\u00a0*p", "\u00a0\u00a0\u00a0\u9762\u5411\u5bf9\u8c61\u7684\u4e09\u4e2a\u7279\u6027\u662f\u4ec0\u4e48\uff0c\u6709\u4ec0\u4e48\u610f\u4e49\uff1f", "\u7f16\u7a0b\u5b9e\u73b0\u5b57\u7b26\u4e32\u8fde\u63a5\u51fd\u6570\u00a0\u00a0", "ISO", "\u7528", "Winsock", "\u9762\u8bd5\u9898\uff1a", "\u00a0\u00a0\u00a0\u4f60\u5b9e\u4e60\u7684\u516c\u53f8\u662f\u505a\u4ec0\u4e48\u7684\uff1f", "\u00a0\u00a0\u00a0\u4f60\u5728\u5b9e\u4e60\u7684\u516c\u53f8\u505a\u4e86\u4ec0\u4e48\u7a0b\u5e8f\uff1f", "\u00a0\u00a0\u00a0Rtp", "\u00a0\u00a0\u00a0\u4f60\u7684\u8f6f\u8bdd\u673a\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u662f\u7528\u4ec0\u4e48\u540c\u6b65\u7684", "\u00a0\u00a0\u00a0\u4f60\u5728\u8f6f\u8bdd\u673a\u79cd\u4f7f\u7528\u4e86\u4ec0\u4e48\u901a\u4fe1\u6a21\u578b", "\u00a0\u00a0\u00a0\u4f60\u4f7f\u7528\u8fc7\u7684\u8bbe\u8ba1\u6a21\u5f0f\u7528\u90a3\u4e9b\uff1f", "\u00a0", "\u4eba\u4e8b\u9762\u8bd5\uff1a", "\u00a0\u00a0\u00a0\u81ea\u6211\u4ecb\u7ecd", "\u00a0\u00a0\u00a0\u4e3a\u4ec0\u4e48\u79bb\u5f00\u4ee5\u524d\u7684\u516c\u53f8\uff1f", "\u00a0\u00a0\u00a0\u4f60\u5e0c\u671b\u7684\u5de5\u8d44\u662f\u591a\u5c11\uff1f"], "title": "\u6df1\u5733\u822a\u5929\u79d1\u6280\u521b\u65b0\u7814\u7a76\u9662C++\u7b14\u8bd5\u9762\u8bd5\u53ca\u4eba\u4e8b\u9762\u8bd5\u9898"},
{"contents": ["\u7b54\uff1a\u628a\u6570\u636e\u7ed3\u6784\u548c\u5bf9\u6570\u636e\u7ed3\u6784\u8fdb\u884c\u64cd\u4f5c\u7684\u65b9\u6cd5\u5c01\u88c5\u5f62\u6210\u4e00\u4e2a\u4e2a\u7684\u5bf9\u8c61\u3002", "\u00a0", "\u7b54\uff1a\u628a\u4e00\u4e9b\u5177\u6709\u5171\u6027\u7684\u5bf9\u8c61\u5f52\u7c7b\u540e\u5f62\u6210\u4e00\u4e2a\u96c6\u5408\uff0c\u4e5f\u5c31\u662f\u6240\u8c13\u7684\u7c7b\u3002", "\u00a0", "\u7b54\uff1a\u5bf9\u8c61\u90fd\u5177\u6709\u7684\u7279\u5f81\u662f\uff1a\u9759\u6001\u7279\u5f81\u548c\u52a8\u6001\u7279\u5f81\u3002", "\u9759\u6001\u7279\u5f81\u662f\u6307\u80fd\u63cf\u8ff0\u5bf9\u8c61\u7684\u4e00\u4e9b\u5c5e\u6027\uff08\u6210\u5458\u53d8\u91cf\uff09\uff0c\u52a8\u6001\u7279\u5f81\u662f\u6307\u5bf9\u8c61\u8868\u73b0\u51fa\u6765\u7684\u884c\u4e3a\uff08\u6210\u5458\u51fd\u6570\uff09", "\u00a0", "\u7b54\uff1a\u8fd9\u6837\u53ef\u4ee5\u63d0\u9ad8\u7f16\u8bd1\u6548\u7387\uff0c\u56e0\u4e3a\u5206\u5f00\u7684\u8bdd\u53ea\u9700\u8981\u7f16\u8bd1\u4e00\u6b21\u751f\u6210\u5bf9\u5e94\u7684.obj\u6587\u4ef6\u540e\uff0c\u518d\u6b21\u5e94\u7528\u8be5\u7c7b\u7684\u5730\u65b9\uff0c\u8fd9\u4e2a\u7c7b\u5c31\u4e0d\u4f1a\u88ab\u518d\u6b21\u7f16\u8bd1\uff0c\u4ece\u800c\u5927\u5927\u7684", "\u3002", "\u00a0", "\u7b54\uff1a\u8fd9\u79cd\u51fd\u6570\u4f1a\u81ea\u52a8\u4e3a\u5185\u8054\u51fd\u6570\uff0c\u8fd9\u79cd\u51fd\u6570\u5728\u51fd\u6570\u8c03\u7528\u7684\u5730\u65b9\u5728\u7f16\u8bd1\u9636\u6bb5\u90fd\u4f1a\u8fdb\u884c\u4ee3\u7801\u66ff\u6362\u3002", "\u00a0", "\u7b54\uff1a\u901a\u8fc7this\u6307\u9488\u6307\u5411\u5bf9\u8c61\u7684\u9996\u5730\u5740\u6765\u533a\u5206\u7684\u3002", "\u00a0", "\u7b54\uff1a\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u6790\u6784\u51fd\u6570\uff0c\u8d4b\u503c\u51fd\u6570\u3002", "\u00a0", "\u7b54\uff1a", "1.\u5f53\u7c7b\u7684\u4e00\u4e2a\u5bf9\u8c61\u53bb\u521d\u59cb\u5316\u8be5\u7c7b\u7684\u53e6\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff1b", "2.\u5982\u679c\u51fd\u6570\u7684\u5f62\u53c2\u662f\u7c7b\u7684\u5bf9\u8c61\uff0c\u8c03\u7528\u51fd\u6570\u8fdb\u884c\u5f62\u53c2\u548c\u5b9e\u53c2\u7ed3\u5408\u65f6\uff1b", "3.\u5982\u679c\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u7c7b\u5bf9\u8c61\uff0c\u51fd\u6570\u8c03\u7528\u5b8c\u6210\u8fd4\u56de\u65f6\u3002", "\u00a0", "\u7b54\uff1a\u6784\u9020\u51fd\u6570\u662f\u7c7b\u7684\u4e00\u79cd\u7279\u6b8a\u6210\u5458\u51fd\u6570\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5b83\u662f\u4e13\u95e8\u7528\u6765\u521d\u59cb\u5316\u5bf9\u8c61\u6210\u5458\u53d8\u91cf\u7684\u3002", "\u6784\u9020\u51fd\u6570\u7684\u540d\u5b57\u5fc5\u987b\u4e0e\u7c7b\u540d\u76f8\u540c\uff0c\u5b83\u4e0d\u5177\u6709\u4efb\u4f55\u7c7b\u578b\uff0c\u4e0d\u8fd4\u56de\u4efb\u4f55\u503c\u3002", "\u00a0", "\u7b54\uff1a\u5f53\u6784\u9020\u51fd\u6570\u6d89\u53ca\u5230\u52a8\u6001\u5b58\u50a8\u5206\u914d\u7a7a\u95f4\u65f6\uff0c\u8981\u81ea\u5df1\u5199\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u5e76\u4e14\u8981\u6df1\u62f7\u8d1d\u3002", "\u00a0", "\u7b54\uff1a1.\u5148\u8c03\u7528\u57fa\u7c7b\u6784\u9020\u51fd\u6570", "2.\u6309\u58f0\u660e\u987a\u5e8f\u521d\u59cb\u5316\u6570\u636e\u6210\u5458", "3.\u6700\u540e\u8c03\u7528\u81ea\u5df1\u7684\u6784\u9020\u51fd\u6570\u3002", "\u00a0", "\u7b54\uff1a\u7c7b\u7684\u6210\u5458\u662f\u5e38\u91cf\u6210\u5458\u521d\u59cb\u5316\uff1b", "\u7c7b\u7684\u6210\u5458\u662f\u5bf9\u8c61\u6210\u5458\u521d\u59cb\u5316\uff0c\u800c\u8be5\u5bf9\u8c61\u6ca1\u6709\u65e0\u53c2\u6784\u9020\u51fd\u6570\u3002", "\u7c7b\u7684\u6210\u5458\u4e3a\u5f15\u7528\u65f6\u3002", "\u00a0", "\u7b54\uff1a\u5e38\u5bf9\u8c61\u662f\u6307\u5728\u4efb\u4f55\u573a\u5408\u90fd\u4e0d\u80fd\u5bf9\u5176\u6210\u5458\u7684\u503c\u8fdb\u884c\u4fee\u6539\u7684\u5bf9\u8c61\u3002", "\u00a0", "\u7b54\uff1a\u9759\u6001\u79c1\u6709\u6210\u5458\u5728\u7c7b\u5916\u4e0d\u80fd\u88ab\u8bbf\u95ee\uff0c\u53ef\u901a\u8fc7\u7c7b\u7684\u9759\u6001\u6210\u5458\u51fd\u6570\u6765\u8bbf\u95ee\uff1b", "\u5f53\u7c7b\u7684\u6784\u9020\u51fd\u6570\u662f\u79c1\u6709\u7684\u65f6\uff0c\u4e0d\u50cf\u666e\u901a\u7c7b\u90a3\u6837\u5b9e\u4f8b\u5316\u81ea\u5df1\uff0c\u53ea\u80fd\u901a\u8fc7\u9759\u6001\u6210\u5458\u51fd\u6570\u6765\u8c03\u7528\u6784\u9020\u51fd\u6570\u3002", "\u00a0", "\u7b54\uff1a\u53cb\u5143\uff0c\u7ee7\u627f\uff0c\u516c\u6709\u6210\u5458\u51fd\u6570\u3002", "\u00a0", "\u7b54\uff1a\u4e0d\u7528\u6765\u5b9a\u4e49\u5bf9\u8c61\u800c\u53ea\u4f5c\u4e3a\u4e00\u79cd\u57fa\u672c\u7c7b\u578b\u7528\u4f5c\u7ee7\u627f\u7684\u7c7b\u3002", "\u7b54\uff1a\u4e3a\u4e86\u5bf9\u7528\u6237\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b\u7684\u6570\u636e\u7684\u64cd\u4f5c\u4e0e\u5185\u5b9a\u4e49\u7684\u6570\u636e\u7c7b\u578b\u7684\u6570\u636e\u7684\u64cd\u4f5c\u5f62\u5f0f\u4e00\u81f4\u3002", "\u00a0", "\u7b54\uff1a", "1.\u00a0\u00a0\u00a0 .*\uff08\u6210\u5458\u6307\u9488\u8bbf\u95ee\u8fd0\u7b97\u7b26\u53f7\uff09", "2.\u00a0\u00a0\u00a0 \uff1a\uff1a\u57df\u8fd0\u7b97\u7b26", "3.\u00a0\u00a0\u00a0 Sizeof \u957f\u5ea6\u8fd0\u7b97\u7b26\u53f7", "4.\u00a0\u00a0\u00a0 \uff1f\uff1a\u6761\u4ef6\u8fd0\u7b97\u7b26\u53f7", "5.\u00a0 .\uff08\u6210\u5458\u8bbf\u95ee\u7b26\uff09", "\u00a0", "\u7b54\uff1a\u666e\u901a\u51fd\u6570\uff0c\u53cb\u5143\u51fd\u6570\uff0c\u7c7b\u6210\u5458\u51fd\u6570\u3002", "\u00a0", "\u7b54\uff1a\u56e0\u4e3a\u901a\u8fc7\u7c7b\u7684\u6210\u5458\u51fd\u6570\u91cd\u8f7d\u5fc5\u987b\u662f\u8fd0\u7b97\u7b26\u7684\u7b2c\u4e00\u4e2a\u662f\u81ea\u5df1\uff0c\u800c\u5bf9\u6d41\u8fd0\u7b97\u7684\u91cd\u8f7d\u8981\u6c42\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u6d41\u5bf9\u8c61\u3002\u6240\u4ee5\u4e00\u822c\u901a\u8fc7\u53cb\u5143\u6765\u89e3\u51b3\u3002", "\u00a0", "\u7b54\uff1a\u76f8\u540c\u70b9\uff1a\u90fd\u662f\u5c06\u4e00\u4e2a\u5bf9\u8c61copy\u5230\u53e6\u4e00\u4e2a\u4e2d\u53bb\u3002", "\u4e0d\u540c\u70b9\uff1a\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u6d89\u53ca\u5230\u8981\u65b0\u5efa\u7acb\u4e00\u4e2a\u5bf9\u8c61\u3002", "\u00a0", "\u7b54\uff1a\u5bf9\u8c61\u751f\u547d\u5468\u671f\u7ed3\u675f\u65f6\u3002", "\u00a0", "\u7b54\uff1a\u901a\u8fc7\u7c7b\u7684\u9759\u6001\u6210\u5458\u53d8\u91cf\u6765\u5b9e\u73b0\u5bf9\u8c61\u95f4\u7684\u6570\u636e\u5171\u4eab\u3002\u9759\u6001\u6210\u5458\u53d8\u91cf\u5360\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u7a7a\u95f4\u4e0d\u4e3a\u67d0\u4e2a\u5bf9\u8c61\u6240\u79c1\u6709\u3002", "\u00a0", "\u7b54\uff1a\u5355\u5411\u7684\uff0c\u975e\u4f20\u9012\u7684\uff0c\u4e0d\u80fd\u7ee7\u627f\u7684\u3002", "\u00a0", "\u7b54\uff1a\u5b83\u7684\u6b21\u5e8f\u5b8c\u5168\u4e0d\u53d7\u5b83\u4eec\u5728\u521d\u59cb\u5316\u8868\u4e2d\u6b21\u5e8f\u7684\u5f71\u54cd\uff0c\u53ea\u6709\u6210\u5458\u5bf9\u8c61\u5728\u7c7b\u4e2d\u58f0\u660e\u7684\u6b21\u5e8f\u6765\u51b3\u5b9a\u7684\u3002", "\u00a0", "\u7b54\uff1a\u7c7b\u662f\u5bf9\u8c61\u7684\u62bd\u8c61\uff0c\u5bf9\u8c61\u662f\u7c7b\u7684\u5b9e\u4f8b\u3002", "\u00a0", "\u7b54\uff1apublic\uff0cprotected\uff0cprivate\u3002", "\u00a0", "\u7b54\uff1a", "\u5982\u679cconst\u4f4d\u4e8e\u661f\u53f7\u7684", "\uff0c\u5219const\u5c31\u662f\u7528\u6765", "\uff0c\u5373\u6307\u9488\u6307\u5411\u4e3a\u5e38\u91cf\uff1b", "\u5982\u679cconst\u4f4d\u4e8e\u661f\u53f7\u7684", "\uff0cconst\u5c31\u662f", "\uff0c\u5373\u6307\u9488\u672c\u8eab\u662f\u5e38\u91cf\u3002", "\u00a0", "\u7b54\uff1a", "virtual\u4fee\u9970\u7b26\u4f1a\u88ab", "virtual\u53ef\u52a0\u53ef\u4e0d\u52a0,\u5b50\u7c7b\u8986\u76d6\u5b83\u7684\u51fd\u6570\u4e0d\u52a0virtual ,\u4e5f\u80fd\u5b9e\u73b0\u591a\u6001\u3002", "\u00a0", "\u7b54\uff1a\u51fd\u6570\u91cd\u8f7d\u662f\u4e00\u4e2a\u540c\u540d\u51fd\u6570\u5b8c\u6210\u4e0d\u540c\u7684\u529f\u80fd\uff0c\u7f16\u8bd1\u7cfb\u7edf\u5728\u7f16\u8bd1\u9636\u6bb5\u901a\u8fc7\u51fd\u6570\u53c2\u6570\u4e2a\u6570\u3001\u53c2\u6570\u7c7b\u578b\u4e0d\u540c\uff0c\u51fd\u6570\u7684\u8fd4\u56de\u503c\u6765\u533a\u5206\u8be5\u8c03\u7528\u54ea\u4e00\u4e2a\u51fd\u6570\uff0c\u5373\u5b9e\u73b0\u7684\u662f\u9759\u6001\u7684\u591a\u6001\u6027\u3002\u4f46\u662f\u8bb0\u4f4f\uff1a\u4e0d\u80fd\u4ec5\u4ec5\u901a\u8fc7\u51fd\u6570\u8fd4\u56de\u503c\u4e0d\u540c\u6765\u5b9e\u73b0\u51fd\u6570\u91cd\u8f7d\u3002\u800c\u865a\u51fd\u6570\u5b9e\u73b0\u7684\u662f\u5728\u57fa\u7c7b\u4e2d\u901a\u8fc7\u4f7f\u7528\u5173\u952e\u5b57virtual\u6765\u7533\u660e\u4e00\u4e2a\u51fd\u6570\u4e3a\u865a\u51fd\u6570\uff0c\u542b\u4e49\u5c31\u662f\u8be5\u51fd\u6570\u7684\u529f\u80fd\u53ef\u80fd\u5728\u5c06\u6765\u7684\u6d3e\u751f\u7c7b\u4e2d\u5b9a\u4e49\u6216\u8005\u5728\u57fa\u7c7b\u7684\u57fa\u7840\u4e4b\u4e0a\u8fdb\u884c\u6269\u5c55\uff0c\u7cfb\u7edf\u53ea\u80fd\u5728\u8fd0\u884c\u9636\u6bb5\u624d\u80fd\u52a8\u6001\u51b3\u5b9a\u8be5\u8c03\u7528\u54ea\u4e00\u4e2a\u51fd\u6570\uff0c\u6240\u4ee5\u5b9e\u73b0\u7684\u662f\u52a8\u6001\u7684\u591a\u6001\u6027\u3002\u5b83\u4f53\u73b0\u7684\u662f\u4e00\u4e2a\u7eb5\u5411\u7684\u6982\u5ff5\uff0c\u4e5f\u5373\u5728\u57fa\u7c7b\u548c\u6d3e\u751f\u7c7b\u95f4\u5b9e\u73b0\u3002", "\u00a0", "\u7b54\uff1a\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u88ab\u91cd\u8f7d\uff0c\u6790\u6784\u51fd\u6570\u4e0d\u53ef\u4ee5\u88ab\u91cd\u8f7d\u3002\u56e0\u4e3a\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u6709\u591a\u4e2a\u4e14\u53ef\u4ee5\u5e26\u53c2\u6570\uff0c\u800c\u6790\u6784\u51fd\u6570\u53ea\u80fd\u6709\u4e00\u4e2a\uff0c\u4e14\u4e0d\u80fd\u5e26\u53c2\u6570\u3002", "\u00a0", "\u7b54\uff1a", "\u6240\u8c13\u7684\u56de\u8c03\u51fd\u6570\uff0c\u5c31\u662f\u9884\u5148\u5728\u7cfb\u7edf\u7684\u5bf9\u51fd\u6570\u8fdb\u884c\u6ce8\u518c\uff0c\u8ba9\u7cfb\u7edf\u77e5\u9053\u8fd9\u4e2a\u51fd\u6570\u7684\u5b58\u5728\uff0c\u4ee5\u540e\uff0c\u5f53\u67d0\u4e2a\u4e8b\u4ef6\u53d1\u751f\u65f6\uff0c\u518d\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u5bf9\u4e8b\u4ef6\u8fdb\u884c\u54cd\u5e94\u3002", "\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u7684\u6210\u5458\u51fd\u6570\u65f6\u5728\u8be5\u51fd\u6570\u524d\u52a0CALLBACK\u5373\u5c06\u5176\u5b9a\u4e49\u4e3a\u56de\u8c03\u51fd\u6570\uff0c\u51fd\u6570\u7684\u5b9e\u73b0\u548c\u666e\u901a\u6210\u5458\u51fd\u6570\u6ca1\u6709\u533a\u522b", "\u00a0", "\u7b54\uff1a\u7b80\u5355\u8bf4\u6765\u4f7f\u7528\u4e86\u865a\u51fd\u6570\u8868.", "\u00a0", "\u00a0", "\u7b54\u6848\uff1a\u5168\u5c40\u5bf9\u8c61\u7684\u6784\u9020\u51fd\u6570\u4f1a\u5728main \u51fd\u6570\u4e4b\u524d\u6267\u884c\u3002", "\u00a0", "\u7b54\u6848\uff1a\u80af\u5b9a\u4e0d\u662f\u96f6\u3002\u4e3e\u4e2a\u53cd\u4f8b\uff0c\u5982\u679c\u662f\u96f6\u7684\u8bdd\uff0c\u58f0\u660e\u4e00\u4e2aclass A[10]\u5bf9\u8c61\u6570\u7ec4\uff0c\u800c\u6bcf\u4e00\u4e2a\u5bf9\u8c61\u5360\u7528\u7684\u7a7a\u95f4\u662f\u96f6\uff0c\u8fd9\u65f6\u5c31\u6ca1\u529e\u6cd5\u533a\u5206A[0],A[1]\u2026\u4e86\u3002", "\u00a0", "\u7b54\uff1adelete\u53ea\u4f1a\u8c03\u7528\u4e00\u6b21\u6790\u6784\u51fd\u6570\uff0c\u800cdelete[]\u4f1a\u8c03\u7528\u6bcf\u4e00\u4e2a\u6210\u5458\u7684\u6790\u6784\u51fd\u6570\u3002", "\u00a0", "\u7b54\uff1a\u4f1a\u8c03\u7528\u3002\u6790\u6784\u51fd\u6570\u8c03\u7528\u7684\u6b21\u5e8f\u662f\u5148\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u540e\u57fa\u7c7b\u7684\u6790\u6784\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728\u57fa\u7c7b\u7684\u7684\u6790\u6784\u8c03\u7528\u7684\u65f6\u5019,\u6d3e\u751f\u7c7b\u7684\u4fe1\u606f\u5df2\u7ecf\u5168\u90e8\u9500\u6bc1\u4e86", "\u00a0", "1\u3001\u7c7b\u7ee7\u627f\u662f\u5728\u7f16\u8bd1\u65f6\u523b\u9759\u6001\u5b9a\u4e49\u7684\uff0c\u4e14\u53ef\u76f4\u63a5\u4f7f\u7528\uff0c", "2\u3001\u7c7b\u7ee7\u627f\u53ef\u4ee5\u8f83\u65b9\u4fbf\u5730\u6539\u53d8\u7236\u7c7b\u7684\u5b9e\u73b0\u3002", "\u7f3a\u70b9\uff1a", "1\u3001\u56e0\u4e3a\u7ee7\u627f\u5728\u7f16\u8bd1\u65f6\u523b\u5c31\u5b9a\u4e49\u4e86\uff0c\u6240\u4ee5\u65e0\u6cd5\u5728\u8fd0\u884c\u65f6\u523b\u6539\u53d8\u4ece\u7236\u7c7b\u7ee7\u627f\u7684\u5b9e\u73b0", "2\u3001\u7236\u7c7b\u901a\u5e38\u81f3\u5c11\u5b9a\u4e49\u4e86\u5b50\u7c7b\u7684\u90e8\u5206\u884c\u4e3a\uff0c\u7236\u7c7b\u7684\u4efb\u4f55\u6539\u53d8\u90fd\u53ef\u80fd\u5f71\u54cd\u5b50\u7c7b\u7684\u884c\u4e3a", "3\u3001\u5982\u679c\u7ee7\u627f\u4e0b\u6765\u7684\u5b9e\u73b0\u4e0d\u9002\u5408\u89e3\u51b3\u65b0\u7684\u95ee\u9898\uff0c\u5219\u7236\u7c7b\u5fc5\u987b\u91cd\u5199\u6216\u88ab\u5176\u4ed6\u66f4\u9002\u5408\u7684\u7c7b\u66ff\u6362\u3002\u8fd9\u79cd\u4f9d\u8d56\u5173\u7cfb\u9650\u5236\u4e86\u7075\u6d3b\u6027\u5e76\u6700\u7ec8\u9650\u5236\u4e86\u590d\u7528\u6027\u3002", "\u00a0", "\u7b54\uff1a\u6808\u533a\uff08stack\uff09\u2014 \u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u5206\u914d\u91ca\u653e \uff0c\u5b58\u653e\u51fd\u6570\u7684\u53c2\u6570\u503c\uff0c\u5c40\u90e8\u53d8\u91cf\u7684\u503c\u7b49\u3002", "\u5806\uff08heap\uff09\u4e00\u822c\u7531\u7a0b\u5e8f\u5458\u5206\u914d\u91ca\u653e\uff0c \u82e5\u7a0b\u5e8f\u5458\u4e0d\u91ca\u653e\uff0c\u7a0b\u5e8f\u7ed3\u675f\u65f6\u53ef\u80fd\u7531OS\u56de\u6536 \u3002", "\u00a0", "\u7b54\uff1a\u6784\u9020\u51fd\u6570\u5728\u521b\u5efa\u7c7b\u5bf9\u8c61\u7684\u65f6\u5019\u88ab\u81ea\u52a8\u8c03\u7528\uff0c\u6790\u6784\u51fd\u6570\u5728\u7c7b\u5bf9\u8c61\u751f\u547d\u671f\u7ed3\u675f\u65f6\uff0c\u7531\u7cfb\u7edf\u81ea\u52a8\u8c03\u7528\u3002", "\u00a0", "\u7b54\uff1a\u603b\u662f\u4f7f\u7528\u4e0d\u7ecf\u5e38\u6539\u52a8\u7684\u5927\u578b\u4ee3\u7801\u4f53\u3002", "\u7a0b\u5e8f\u7531\u591a\u4e2a\u6a21\u5757\u7ec4\u6210\uff0c\u6240\u6709\u6a21\u5757\u90fd\u4f7f\u7528\u4e00\u7ec4\u6807\u51c6\u7684\u5305\u542b\u6587\u4ef6\u548c\u76f8\u540c\u7684\u7f16\u8bd1\u9009\u9879\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u5c06\u6240\u6709\u5305\u542b\u6587\u4ef6\u9884\u7f16\u8bd1\u4e3a\u4e00\u4e2a\u9884\u7f16\u8bd1\u5934\u3002", "\u00a0", "\u7b54\uff1a\u4e3b\u8981\u662f\u4e24\u4e2a\uff1a", "1. \u9690\u85cf\u5b9e\u73b0\u7ec6\u8282\uff0c\u4f7f\u5f97\u4ee3\u7801\u80fd\u591f\u6a21\u5757\u5316\uff1b\u6269\u5c55\u4ee3\u7801\u6a21\u5757\uff0c\u5b9e\u73b0\u4ee3\u7801\u91cd\u7528\uff1b", "2. \u63a5\u53e3\u91cd\u7528\uff1a\u4e3a\u4e86\u7c7b\u5728\u7ee7\u627f\u548c\u6d3e\u751f\u7684\u65f6\u5019\uff0c\u4fdd\u8bc1\u4f7f\u7528\u5bb6\u65cf\u4e2d\u4efb\u4e00\u7c7b\u7684\u5b9e\u4f8b\u7684\u67d0\u4e00\u5c5e\u6027\u65f6\u7684\u6b63\u786e\u8c03\u7528", "\u00a0", "\u7b54\u6848\uff1a\u533a\u522b\uff1a\u865a\u62df\u51fd\u6570\u6709virtual\u5173\u952e\u5b57\uff0c\u6709\u865a\u62df\u6307\u9488\u548c\u865a\u51fd\u6570\u8868\uff0c\u865a\u62df\u6307\u9488\u5c31\u662f\u865a\u62df\u51fd\u6570\u7684\u63a5\u53e3\uff0c\u800c\u666e\u901a\u6210\u5458\u51fd\u6570\u6ca1\u6709\u3002\u5185\u8054\u51fd\u6570\u548c\u6784\u9020\u51fd\u6570\u4e0d\u80fd\u4e3a\u865a\u62df\u51fd\u6570\u3002", "\u00a0", "\u7b54\u6848\uff1a\u6784\u9020\u51fd\u6570\u7684\u8c03\u7528\u987a\u5e8f\uff1a\u57fa\u7c7b\u6784\u9020\u51fd\u6570\u2014\u5bf9\u8c61\u6210\u5458\u6784\u9020\u51fd\u6570\u2014\u6d3e\u751f\u7c7b\u6784\u9020\u51fd\u6570\uff1b\u6790\u6784\u51fd\u6570\u7684\u8c03\u7528\u987a\u5e8f\u4e0e\u6784\u9020\u51fd\u6570\u76f8\u53cd\u3002\u6790\u6784\u51fd\u6570\u865a\u62df\u662f\u4e3a\u4e86\u9632\u6b62\u6790\u6784\u4e0d\u5f7b\u5e95\uff0c\u9020\u6210\u5185\u5b58\u7684\u6cc4\u6f0f\u3002", "\u00a0", "\u7b54\uff1a\u53ea\u53ef\u4ee5\u7531\u672c\u7c7b\u4e2d\u7684\u6210\u5458\u51fd\u6570\u548c\u53cb\u5143\u51fd\u6570\u8bbf\u95ee", "\u00a0", "\u7b54\uff1aprivate\u662f\u79c1\u6709\u7c7b\u578b\uff0c\u53ea\u6709\u672c\u7c7b\u4e2d\u7684\u6210\u5458\u51fd\u6570\u8bbf\u95ee;protect\u662f\u4fdd\u62a4\u578b\u7684\uff0c\u672c\u7c7b\u548c\u7ee7\u627f\u7c7b\u53ef\u4ee5\u8bbf\u95ee;public\u662f\u516c\u6709\u7c7b\u578b\uff0c\u4efb\u4f55\u7c7b\u90fd\u53ef\u4ee5\u8bbf\u95ee.", "\u00a0", "\u7b54\uff1a\u53ef\u4ee5\u901a\u8fc7\u6784\u9020\u51fd\u6570\u7684\u521d\u59cb\u5316\u5217\u8868\u6216\u6784\u9020\u51fd\u6570\u7684\u51fd\u6570\u4f53\u5b9e\u73b0\u3002", "\u00a0", "\u7b54\uff1a\u5982\u679c\u65e2\u8981\u5229\u7528\u5f15\u7528\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6548\u7387\uff0c\u53c8\u8981\u4fdd\u62a4\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u6570\u636e\u4e0d\u5728\u51fd\u6570\u4e2d\u88ab\u6539\u53d8\uff0c\u5c31\u5e94\u4f7f\u7528\u5e38\u5f15\u7528\u3002"], "title": "C++\u7ecf\u5178\u9762\u8bd5\u9898\u5e93 \u9644\u5e26\u53c2\u8003\u7b54\u6848"},
{"contents": ["\u4e00\u3001\u00a0\u9009\u62e9\u9898", "\uff21", "\uff21", "\u3000", "\u3000", "\u4e8c\u3001\u00a0\u95ee\u7b54\u9898", "1\uff0e\u00a0\u64cd\u4f5c\u7cfb\u7edf\u8c03\u5ea6\u7b97\u6cd5\u6709\u54ea\u4e9b", "2\uff0e\u00a0\u5b8f\u5c55\u5f00", "3\uff0e\u00a0\u7ebf\u7a0b\u540c\u6b65\uff0c\u4e4b\u95f4\u901a\u4fe1", "4\uff0e\u00a0\u6539\u9519", "//", "char\u00a0str(void)", "{", "\u00a0\u00a0static\u00a0char\u00a0str[8]", "\u00a0\u00a0for(int\u00a0i=1;i<=8;i++)", "\u00a0\u00a0\u00a0{", "str[i]=i;", "}", "return\u00a0str;", "}", "void\u00a0loop(unsin\u00a0char\u00a0num)", "{", "char\u00a0I;", "for(i=0;i<num;i++)", "\u00a0\u00a0\u00a0{", "printf(\u201chello\u00a0word\u201d);", "\u00a0\u00a0\u00a0}", "}", "void\u00a0main()", "{", "\u00a0\u00a0printf(\u201ctest%d\u201d,1);", "\u00a0\u00a0loop(2);", "\u00a0\u00a0printf(\u201ctest%d\u201d,2);", "\u00a0\u00a0loop(200);", "}"], "title": "\u6df1\u5733\u5148\u521bC++\u7b14\u8bd5\u9898"},
{"contents": ["\u7b14\u8bd5", "1.(1)", "\u00a0(2)", "UpdateData(BOOL\u00a0values)", "\u7684\u4f5c\u7528", "\u00a0", "2.", "int\u00a0fun()", "{", "Static\u00a0int\u00a0s=0;", "Int\u00a0a\u00a0=\u00a01;", "s+=a;;", "a++;", "\u00a0\u00a0return\u00a0s;", "}", "\u00a0", "Void\u00a0main()", "{", "Fun();", "Cout<<Fun();", "}", "\u00a0", "3.", "Void\u00a0main()", "{", "Int\u00a0s=0;", "for(unsigned\u00a0char\u00a0i=0;\u00a0i<256;\u00a0i++)", "{", "S+=i;", "}", "Cout<<s<<endl;", "}", "\u00a0", "4.", "\u00a0", "5.", "\u00a0", "6.", "\u00a0", "7.", "\u00a0\u00a0Char\u00a0*Strcpy(char\u00a0*str,\u00a0const\u00a0char\u00a0*Srcstr);", "\u00a0", "8.", "(\u5927\u81f4\u610f\u601d)", "Char\u00a0a[12]\u00a0=\u00a0", "Cout<<sizeof(a);", "Cout<<strlen(a);", "Char\u00a0*p=\u201dasasqww\u201d;", "Cout<<sizeof(p);", "Int\u00a0a=4;", "Cout<<sizeof(a);", "9.", "union\u00a0V", "{", "Struct\u00a0X", "{", "Unsigned\u00a0char\u00a0s1:2;", "Unsigned\u00a0char\u00a0s2:3;", "Unsigned\u00a0char\u00a0s3:3;", "};", "C;", "}", "\u00a0", "Void\u00a0main()", "{", "V\u00a0S", "S.c=100;", "Cout<<S.X.s3;", "}", "\u00a0", "10.", "struct\u00a0node", "{", "int\u00a0data;\u00a0", "node\u00a0*next;", "};", "\u00a0", "11", "\u9762\u8bd5\u9898"], "title": "\u534e\u666e\u7535\u5b50\u7b14\u8bd5\u9762\u8bd5\u9898\u2013C++"},
{"contents": ["\u65f6\u95f4\uff1a2009-7-23\u00a0\u00a0\u00a010:00\u00a0\u00a0\u00a0AM", "\u5730\u70b9\uff1a\u6df1\u5733\u5e02\u5357\u5c71\u533a\u6df1\u5733\u6e05\u534e\u5927\u5b66\u7814\u7a76\u9662", "\u516c\u53f8\uff1a\u6df1\u5733\u5e02\u534e\u76db\u5a01\u79d1\u6280\u6709\u9650\u516c\u53f8", "\u4e8b\u4ef6\uff1a\u9762\u8bd5 \u5929\u6c14\uff1a\u6674\u6717", "\u672c\u6765\u539f\u4ee5\u4e3a\u662f\u8fc7\u53bb\u7b14\u8bd5\u7684\uff0c\u7ed3\u679c\u5230\u4e86\u90a3\u91cc\uff0c\u5728\u4f1a\u8bae\u5ba4\u5750\u4e86\u4e00\u4f1a\uff0c\u8fdb\u6765\u4e00\u4eba\uff0c\u7537\uff0c\u5e94\u8be5\u662f\u6280\u672f\u90e8\u7684\uff0c\u5c31\u8bf4\u4f60\u5148\u81ea\u6211\u4ecb\u7ecd\u4e00\u4e0b\u81ea\u5df1\u5427\u3002\u8fd9\u65f6\uff0c\u6211\u624d\u604d\u7136\u5927\u609f\uff0c\u539f\u6765\u4ed6\u4e0d\u662f\u6765\u5e94\u8058\u7684\u5566\uff01\u8111\u5b50\u91cc\u5f88\u591a\u95ee\u53f7\uff0c\u600e\u4e48\u8fde\u7b14\u8bd5\u90fd\u4e0d\u505a\uff0c\u76f4\u63a5\u5c31\u5f00\u59cb\u9762\u8bd5\u4e86\u5462\uff1f\u8bb2\u5b8c\u81ea\u6211\u4ecb\u7ecd\uff0c\u53c8\u8fdb\u6765\u4e00\u7537\u7684\uff0c\u63a5\u7740\u53c8\u8fdb\u6765\u4e00\u5973\u7684\uff0c\u5973\u7684\u5e74\u9f84\u7a0d\u5927\uff0c\u6211\u60f3\u5e94\u8be5\u662f\u4eba\u529b\u8d44\u6e90\u90e8\u7684\u3002\u5929\uff0c\u600e\u4e48\u8fde\u7b14\u8bd5\u90fd\u6ca1\u6709\u5f00\u59cb\uff0c\u5c31\u76f4\u63a5\u9762\u8bd5\u4e86\uff0c\u800c\u4e14\u8fd8\u662f\u4e09\u4eba\u7fa4\u9762\uff01\u4ece\u4e24\u4e2a\u7537\u7684\u95ee\u7684\u95ee\u9898\u6765\u770b\uff0c\u90fd\u662f\u6280\u672f\u90e8\u7684\uff0c\u81f3\u4e8e\u4ec0\u4e48\u804c\u79f0\uff0c\u731c\u4e0d\u4e2d\u3002\u4ed6\u4eec\u95ee\u7684\u95ee\u9898\uff0c\u5c31\u662f\u7167\u7740\u7b80\u5386\u91cc\u7684", "\u73b0\u5728\u603b\u7ed3\u4e00\u4e0b\u6240\u95ee\u7684\u95ee\u9898\uff1a", "1\u3001\u00a0\u81ea\u6211\u4ecb\u7ecd", "2\u3001\u00a0\u6570\u636e\u7ed3\u6784\u4e2d\u5806\u3001\u6808\u7684\u533a\u522b\u4ee5\u53ca\u5e94\u7528\u8303\u56f4", "3\u3001\u00a0Directx", "4\u3001\u00a0Com", "5\u3001\u00a0Windows\u00a0", "6\u3001\u00a0\u8bb2\u89e3\u6240\u505a\u8fc7\u7684\u9879\u76ee\u4e2d\u76f8\u5173\u77e5\u8bc6\u70b9\u3002\u6bd4\u5982", "7\u3001\u00a0\u73b0\u5728\u4f4f\u5728\u54ea\u91cc", "8\u3001\u00a0\u4e3a\u4ec0\u4e48\u79bb\u804c", "9\u3001\u00a0\u4e3a\u4ec0\u4e48\u6765\u6df1\u5733", "10", "11", "12", "\u00a0", "\u4e8c\u9762", "\u7ecf\u7406\u9762\u8bd5\u95ee\u9898\uff1a\u8bb2\u89e3\u4e00\u4e0b\u4f60\u672c\u4eba\u5bf9\u4e4b\u524d\u7684\u90a3\u4efd\u5de5\u4f5c\u7684\u603b\u7ed3\u3002\u4e3b\u8981\u662f\u8bb2\u89e3", "\u5bf9\u85aa\u8d44\u7684\u8981\u6c42", "\u00a0", "\u5bf9\u6b64\u6b21\u9762\u8bd5\u7684\u603b\u7ed3", "\u9996\u5148\u7684\u5c31\u662f\u8bda\u5b9e\uff0c\u77e5\u4e4b\u4e3a\u77e5\u4e4b\uff0c\u4e0d\u77e5\u4e3a\u4e0d\u77e5\u3002\u5176\u4e8c\u5c31\u662f\u5bf9\u81ea\u5df1\u5728\u7b80\u5386\u4e0a\u6240\u5217\u4e3e\u7684"], "title": "\u6df1\u5733\u534e\u76db\u5a01\u79d1\u6280\u6709\u9650\u516c\u53f8\u9762\u8bd5\u9898\u2013C++"},
{"contents": ["\u4e00.\u00a0\u7b14\u8bd5\u9898", "\u4e8c\u3001\u9762\u8bd5\u9898", "\u7b49\u7b49\u8fd8\u6709\u95ee\u5230\u4e00\u4e9b\u542c\u90fd\u6ca1\u542c\u8fc7\u7684\u540d\u8bcd\u8bb0\u4e0d\u8d77\u6765\u4e86"], "title": "\u6df1\u5733\u6df1\u4fe1\u670d\u2013C++\u9762\u8bd5\u9898\u7531\u4e8e\u9898\u91cf\u592a\u591a.\u53ea\u5199\u5370\u8c61\u8f83\u6df1\u7684."},
{"contents": ["\u4e00.\u00a0\u7b14\u8bd5\u9898", "\u4e8c.\u00a0\u9762\u8bd5\u9898", "1.", "2.TCP", "3."], "title": "\u6df1\u5733\u514b\u83b1\u6c83-C++\u9762\u8bd5\u9898"},
{"contents": ["\u00a0", "1.16bit", "8000", "\u8fd9\u9053\u9898\u4ed6\u6709\u95ee\u5355\u4f4d\u662f\u4ec0\u4e48", "\u00a0", "2.Int\u00a0*p;", "P[1]=1;", "\u8fd9\u4e2a\u4ed6\u95ee\u7528\u4e13\u4e1a\u8bed\u6765\u8bf4\u8fd9\u4e2a\u662f\u4ec0\u4e48\u9519\uff0c\u6211\u56de\u7b54\u4ed6\u6ca1\u6709\u7a7a\u95f4\u5b58\u653e\uff0c\u4ed6\u8bf4\u4e0d\u4e13\u4e1a", "3.ADO", "4.", "5.", "Class\u00a0Dervier", "{", "Virtual\u00a0void\u00a0printf1(){printf(\u201cdervier1\u201d);", "Void\u00a0printf2(){printf(\u201cderiver2\u201d);", "};", "Class\u00a0Sub:Dervier", "{", "Virtual\u00a0void\u00a0printf1(){printf(\u201csub1\u201d);", "Void\u00a0printf2(){printf(\u201csub2\u201d);", "};", "Void\u00a0main()", "{", "Dervier\u00a0*d;", "Sub\u00a0s;", "d=&s;", "d->printf1();", "d->printf2();", "}", "sub1deriver2", "\u8bf7\u7528\u4e13\u4e1a\u8bed\u6765\u8bf4\u8bf4\u4e3a\u4ec0\u4e48\u662f\u8fd9\u4e2a\u7b54\u6848\uff0c\u00a0", "6.", "\u8fd9\u9053\u9898\u6211\u5199\u6210\u4e86", "\u5982\u679c\u662f", "7.", "8.", "9", "\u4f60\u5728\u57f9\u8bad\uff0c\u751f\u6d3b\u8d39\u662f\u54ea\u91cc\u6765\u7684\uff1f", "10.", "11.", "12.", "\uff08\u516c\u53f8\u5168\u79f0\u4e3a\u4f1f\u6613\u8fbe\u7535\u5b50\u4ea7\u54c1\uff08\u6df1\u5733\uff09\u6709\u9650\u516c\u53f8\uff09"], "title": "\u4f1f\u6613\u8fbeC++\u7b14\u8bd5\u3001\u9762\u8bd5\u53ca\u4e0a\u673a\u9898\u6574\u7406"},
{"contents": ["\u7b14\u8bd5\u8865\u5145", "\u00a0", "1", "Class\u00a0A", "{", "Private:", "Static\u00a0int\u00a0ia;", "int\u00a0ib;", "public:", "A(){ib=0;}", "add(){ia++;ib++;}", "};", "int\u00a0a::ia=0;", "\u00a0", "void\u00a0main()", "{", "A\u00a0a1,a2;", "a1.add();", "a2.add();", "}", "\u7a0b\u5e8f\u8fd0\u7b97\u5b8c\u540e", "\u00a0", "2", "Class\u00a0Dervier", "{", "Virtual\u00a0void\u00a0printf1(){printf(\u201cdervier1\u201d);", "Void\u00a0printf2(){printf(\u201cderiver2\u201d);", "};", "Class\u00a0Sub:Dervier", "{", "Virtual\u00a0void\u00a0printf1(){printf(\u201csub1\u201d);", "Void\u00a0printf2(){printf(\u201csub2\u201d);", "};", "Void\u00a0main()", "{", "Dervier\u00a0*d;", "Sub\u00a0s;", "d=&s;", "d->printf1();", "d->printf2();", "}", "3\u00a0\u00a016bit", "4", "5", "\u4ee5\u4e0a\u7b14\u8bd5\u9898\u5168\u90e8\u4ee5\u82f1\u6587\u5f62\u5f0f\u663e\u793a", "\u00a0", "\u00a0", "\u9762\u8bd5\u9898\uff1a", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10new\u00a0", "11", "12", "13"], "title": "\u4f1f\u6613\u8fbe\u7b14\u8bd5\u53ca\u9762\u8bd5\u9898\u2013C++"},
{"contents": ["1\u3001\u00a0\u5bf9\u4e0b\u5217\u7684\u7a0b\u5e8f\u8fdb\u884c\u5206\u6790\uff0c\u5982\u6709\u9519\u8bef\u6539\u6b63", "struct\u00a0EMPLOY", "{", "char\u00a0name[512];", "int\u00a0wage;", "int\u00a0money;", "}", "void\u00a0fun(EMPLOY\u00a0*emp)", "{", "emp->money=3*emp->wage;", "}", "void\u00a0main()", "{", "EMPLOY\u00a0*emp;", "emp->name=\u201dmy\u00a0name\u00a0is\u00a0\u201d;", "emp->wage=\u201d280\u201d;", "fun(emp);", "printf(\u201cmy\u00a0name\u00a0is\u00a0%s,money\u00a0is\u00a0%d\u201d,emp->name,emp->money);", "}", "2\u3001\u00a0\u5bf9\u4e0b\u5217\u7684\u7a0b\u5e8f\u8fdb\u884c\u5206\u6790\uff0c\u5982\u6709\u9519\u8bef\u6539\u6b63", "void\u00a0test1()", "{", "char\u00a0*fp=NULL;", "fp=test2();", "test3();", "printf(\u201c\\n%s\u201d,fp);", "}", "void\u00a0test3()", "{", "int\u00a0i=0;", "char\u00a0*buffer[]={", "\u201c111111\u201d,", "\u00a0 \u201cmy\u00a0name\u00a0if\u201d,", "\u201cor\u00a0your\u00a0are\u201d,", "\u201caur\u00a0ins\u00a0arem\u201d", "}", "for(i=0;i<4;i++)", "{", "printf(\u201c\\n\u201d);", "\u00a0\u00a0\u00a0\u00a0printf(\u201c%s\u201d,buffer[i]);", "\u00a0\u00a0\u00a0\u00a0printf(\u201c\\n\u201d);", "}", "}", "void\u00a0test2()", "{", "char\u00a0buff[120];", "char\u00a0*pmbuffer=(char\u00a0*)malloc(150*sizeof(char\u00a0));", "strcpy(pmbuffer,(char\u00a0*)\u201d132132132\u201d);", "strncpy(buffer,pmbuffer,100);", "\u00a0\u00a0\u00a0\u00a0return\u00a0buff;", "}", "3", "static\u00a0int\u00a0s;", "unsign\u00a0char\u00a0k", "void\u00a0dosomething()", "{", "static\u00a0int\u00a0t;", "int\u00a0*c;", "c\u00a0=\u00a0(int\u00a0*)maolloc(20*sizeof(int));", "}", "A\u3001\u00a0\u89e3\u91ca\u4e0b", "B\u3001\u00a0\u89e3\u91ca\u4e0b\u201c\u5c40\u90e8\u53d8\u91cf\u201c\u548c\u201c\u5168\u5c40\u53d8\u91cf\u201d\uff0c\u8bf4\u4e0b", "4", "\uff08\u6ce8\uff1a\u4ee5\u4e0a\u7b14\u8bd5\u9898\uff0c\u539f\u9898\u76ee\u90fd\u662f\u82f1\u8bed\u5f62\u5f0f\u7ed9\u51fa\uff09", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u4e8c\u3001\u4e0a\u673a\u9898", "1", "2", "3"], "title": "\u4f1f\u6613\u8fbe\u7b14\u8bd5\u9898\u2013C++\u7b14\u8bd5\u53ca\u4e0a\u673a\u9898"},
{"contents": ["class A", "\n{", "\npublic:", "\n\u00a0A()", "\n\u00a0{", "\n\u00a0\u00a0cout<<\u201dA()\u201d<<endl;", "\n\u00a0}", "\n\u00a0~A()", "\n\u00a0{", "\n\u00a0\u00a0cout<<\u201dB()\u201d<<endl;", "\n\u00a0}", "\n};", "\nclass B:public A", "\n{", "\npublic:", "\n\u00a0B()", "\n\u00a0{", "\n\u00a0\u00a0cout<<\u201dB()\u201d<<endl;", "\n\u00a0}", "\n\u00a0~B()", "\n\u00a0{", "\n\u00a0\u00a0cout<<\u201dB()\u201d<<endl;", "\n\u00a0}", "\n};", "\nclass C:public B", "\n{", "\npublic:", "\n\u00a0C()", "\n\u00a0{", "\n\u00a0\u00a0cout<<\u201dC()\u201d<<endl;", "\n\u00a0}", "\n\u00a0~C()", "\n\u00a0{", "\n\u00a0\u00a0cout<<\u201dC()\u201d<<endl;", "\n\u00a0}", "\n};", "\nvoid main()", "\n{", "\n\u00a0A *a=new A;", "\n\u00a0B *b=new B;", "\n\u00a0C *c=new C;", "\n\u00a0", "\n\u00a0delete a;", "\n\u00a0delete b;", "\n\u00a0delete c;", "\u00a0C pc;", "\n\u00a0B pb;", "}", "\n\u8bf7\u5199\u51fa\u8fd0\u884c\u7684\u7ed3\u679c\u3002", "class A", "\n{", "\npublic:", "\n\u00a0A()", "\n\u00a0{", "\n\u00a0}", "\n\u00a0void show()", "\n\u00a0{", "\n\u00a0\u00a0cout<<\u201d1\u2033<<endl;", "\n\u00a0}", "\n\u00a0~A()", "\n\u00a0{", "\n\u00a0}", "\n};", "\nclass B:public A", "\n{", "\npublic:", "\n\u00a0B()", "\n\u00a0{", "\n\u00a0}", "\n\u00a0virtual void show()", "\n\u00a0{", "\n\u00a0\u00a0cout<<\u201d2\u2033<<endl;", "\n\u00a0}", "\n\u00a0~B()", "\n\u00a0{", "\n\u00a0}", "\n};", "\nclass C:public B", "\n{", "\npublic:", "\n\u00a0C()", "\n\u00a0{", "\n\u00a0}", "\n\u00a0void show()", "\n\u00a0{", "\n\u00a0\u00a0cout<<\u201d3\u2033<<endl;", "\n\u00a0}", "\n\u00a0~C()", "\n\u00a0{", "\n\u00a0}", "\n};", "\nvoid main()", "\n{", "\n\u00a0A *pa;", "\n\u00a0B b;", "\n\u00a0pa=&b;", "\n\u00a0pa->show();", "\u00a0B *pb;", "\n\u00a0C c;", "\n\u00a0", "\n\u00a0pb=&c;", "\n\u00a0pb->show();", "\u00a0B *pb;", "\n\u00a0pb=(B*)(&c);", "\n\u00a0pb->show();", "}", "\n\u8bf7\u5199\u51fa\u8fd0\u884c\u7ed3\u679c", "\u8bf7\u5199\u51fastring\u7c7b\u5b8c\u6574\u7684\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\uff0c\u91cd\u8f7d\u7b49\u53f7\u8fd0\u7b97\u7b26\u3002"], "title": "\u6574\u7406\u7684\u91d1\u534e\u4e1aC++\u7b14\u8bd5\u9898"},
{"contents": ["\u9009\u62e9\u9898\uff1a", "1\u3001\u00a0\u4e0b\u9762\u54ea\u4e2a\u4e0d\u662f\u6210\u5458\u51fd\u6570\uff08\uff09", "A\u00a0", "2", "A\u00a0\u00a0\u00a0B\u00a0\u00a0\u00a0C\u00a045\u00a0\u00a0\u00a0\u00a0D\u00a052", "3", "A\u00a0extern\u00a0\u00a0\u00a0B\u00a0ifndef\u00a0\u00a0\u00a0C\u00a0define\u00a0D\u00a0endif", "4", "\u00a0\u00a0Int\u00a0x=1,a=b=0;", "\u00a0\u00a0Switch(x)", "\u00a0\u00a0{", "Case\u00a00\u00a0:a++;", "Case\u00a01:a++;", "Default:a++;b++", "}", "A\u00a0a=2,b=1;\u00a0\u00a0B\u00a0\u00a0C\u00a0\u00a0D", "\u00a0", "5", "Int\u00a0x=5;", "If(x\u2013<5)", "Printf(\u201c%d\u201d,x);", "else", "\u00a0printf(\u201c%d\u201d,x++);", "\u00a0", "\u00a0", "6", "D\uff09", "A\u00a0123456\u00a0\u00a0\u00a0B\u00a0214356\u00a0\u00a0\u00a0C\u00a0321654\u00a0\u00a0D\u00a0432156", "7", "Int\u00a0i=0;", "For(i=0;i<3,i++)", "{", "Switch(i)", "{", "Case\u00a01:\u00a0printf(\u201c%d\u201d,i);", "Case\u00a02:\u00a0printf(\u201c%d\u201d,i);", "Case\u00a00:printf(\u201c%d\u201d,i);", "}", "}", "8", "{", "Int\u00a0temp=0;", "temp=a[0];a[0]=a[1];a[1]=temp;", "}", "Swap2(int\u00a0a,int\u00a0b)", "{", "Int\u00a0temp;", "temp=a;a=b;b=temp;", "}", "Function()", "{", "Int\u00a0a[1]={3,5}", "Swap1(a);", "Printf(\u201c%d,%d\\n\u201d,a[0],a[1]);", "Swap(a[0],a[1]);", "Printf(\u201c%d,%d\\n\u201d,a[0],a[1]);", "}", "\u00a0", "9", "Int\u00a0a;long\u00a0b;", "10", "for(int\u00a0i=0;i<9;i++)", "{", "p[i]=i+1;", "}", "\u6c42", "11\u00a0", "12", "q=*b,", "a,b", "\u5224\u65ad\u9898\uff1a", "1\u3001\u00a0char\u00a0str[]=\u201dhello\u00a0word\u201d,char\u00a0*p=(char\u00a0*)malloc(sizeof(char)),", "strlen(str)=11,strlen(p)", "2\u3001\u00a0main()", "3\u3001\u00a0\u4e00\u4e2a\u7c7b\u5fc5\u9700\u6709\u4e00\u4e2a\u65e0\u53c2\u7684\u6784\u9020\u51fd\u6570\uff1b", "\u00a0", "\u00a0", "\u00a0", "\u00a0", "\u7b80\u7b54\u9898\uff1a", "1\u3001\u00a0\u4e0b\u9762\u54ea\u4e2a\u6267\u884c\u6548\u7387\u6700\u5feb", "2\u3001\u00a0C", "3\u3001\u00a0\u7f51\u7edc\u7f16\u7a0b\u4e2d\uff0c\u591a\u8fdb\u7a0b\u4e0e\u591a\u7ebf\u7a0b\u6709\u4ec0\u4e48\u533a\u522b\uff0c", "4-5(", "\u00a0", "\u7f16\u7a0b\u9898\uff1a", "1\u3001\u00a0\u5b9e\u73b0\u5355\u94fe\u8868\u53cd\u8f6c\u6216\u5220\u9664\u67d0\u4e2a\u7ed3\u70b9\uff0c", "\u53cd\u8f6c\uff1a", "LINK\u00a0*link;", "NODE\u00a0*p1=link->head,*p2=p1->next,*p3=NULL;", "P1->next=NULL;", "While(p2)", "{", "P3=p2->next;", "P2->next=p1;", "P1=p2;", "P2=p3;", "}", "Link->head->next=p1;", "\u5220\u9664\u67d0\u4e2a\u7ed3\u70b9\uff1a", "\u00a0", "2\u3001\u00a0\u5b9e\u73b0\u5b8c\u6574\u7684\u6784\u9020\u51fd\u6570\u3001\u6790\u6784\u51fd\u6570\uff0c\u7b49\u53f7\u8fd0\u7b97\u7b26\u91cd\u8f7d", "string::string()", "{", "data=NULL;", "}", "string::~string()", "{", "if(data!=NULL)", "{", "delete\u00a0[]\u00a0data;", "data=NULL;", "}", "}", "string::operator=(const\u00a0string\u00a0&test)", "{", "if(test.data==NULL||strlen(test.data)==0)", "{", "if(this->data!=NULL)", "{", "delete\u00a0[]\u00a0this->data;", "This->data=NULL:", "}", "}", "else", "{", "this->data\u00a0=\u00a0new\u00a0char\u00a0[strlen(test.data)+1];", "strcpy(this->data,test.data);", "}", "}", "3\u3001\u00a0\u5b9e\u73b0\u5b57\u7b26\u4e32\u7684\u53cd\u8f6c\uff0c\u4f8b\u5982", "char\u00a0str[]=\u201dabcde\u201d;", "int\u00a0len\u00a0=\u00a0strlen(str);", "int\u00a0i=0,j=0;", "for(i=0,j=len-1;i<j;i++,j\u2013)", "{", "str[i]+=str[j];", "str[j]=str[i]-str[j];", "str[i]-=str[j]", "}"], "title": "\u6df1\u5733\u91d1\u534e\u4e1aC++\u7b14\u8bd5\u9898"},
{"contents": ["\u7b14\u8bd5\u9898\uff1a", "1", "2", "3", "\u00a0", "\u9762\u8bd5\u95ee\u9898\uff1a", "1", "2", "3", "4", "5", "6\u3001\u7528C++\u600e\u4e48\u521b\u5efa\u7a97\u53e3", "\n7\u3001\uff0c\u4f60\u5bf9\u6211\u516c\u53f8\u6709\u54ea\u4e9b\u671f\u671b", "\n8\u3001\u4f60\u5e0c\u671b\u62ff\u5230\u591a\u5c11\u7684\u85aa\u6c34"], "title": "\u6df1\u5733\u5f69\u79c0\u79d1\u6280\u6709\u9650\u516c\u53f8\u2013C++\u7b14\u8bd5\u9898\u53ca\u9762\u8bd5\u9898"},
{"contents": ["\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Strcpy((str,\u201dworld\u201d);\n", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Printf(str);\n", "}\n", "}\n", "\u8bf7\u95ee\u8fd0\u884cTest\u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f\n", "\u7be1\u6539\u52a8\u6001\u5185\u5b58\u533a\u7684\u5185\u5bb9\uff0c\u540e\u679c\u96be\u4ee5\u9884\u6599\uff0c\u975e\u5e38\u5371\u9669\u3002\n", "\u56e0\u4e3afree(str);\u4e4b\u540e\uff0cstr\u6210\u4e3a\u91ce\u6307\u9488\uff0cif(str!=NULL)\u8bed\u53e5\u4e0d\u8d77\u4f5c\u7528\u3002\n", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Test b();\n", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0b.fun();\n", "}\n", "Test b();//\u5b9a\u4e49\u4e86\u4e00\u4e2a\u51fd\u6570 b\u4e0d\u662f\u4e00\u4e2a\u7c7b\u5bf9\u8c61\u3002\n", "\u00a0\u00a0\u00a0\u00a0\u6240\u4ee5ptr-1\u53ea\u4f1a\u51cf\u53bbsizeof(int*)\n", "\u00a0\u00a0\u00a0\u00a0a\uff0c&a\u7684\u5730\u5740\u662f\u4e00\u6837\u7684\uff0c\u4f46\u610f\u601d\u4e0d\u4e00\u6837\uff0ca\u662f\u6570\u7ec4\u9996\u5730\u5740\uff0c\u4e5f\u5c31\u662fa[0]\u7684\u5730\u5740\uff0c&a\u662f\u5bf9\u8c61\uff08\u6570\u7ec4\uff09\u9996\u5730\u5740\uff0ca+1\u662f\u6570\u7ec4\u4e0b\u4e00\u5143\u7d20\u7684\u5730\u5740\uff0c\u5373a[1]\uff0c&a+1\u662f\u4e0b\u4e00\u4e2a\u5bf9\u8c61\u7684\u5730\u5740\uff0c\u5373a[5].\n"], "title": "C++\u57fa\u7840\u9762\u8bd5\u9898"},
{"contents": ["\u4e00\u3001\u5e94\u7528\u77e5\u8bc6\uff1a", "1.c++", "\u7b54\u9898\uff1a\uff08", "\u00a0\u00a0\u00a0\u00a0\u00a0\uff08", "\u00a0\u00a0\u00a0\u00a0\u00a0\uff08", "2.", "\u7b54\u9898\uff1a\u5185\u8054\u51fd\u6570\u662f\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u5df2\u7ecf\u505a\u597d\u5c06\u5bf9\u5e94\u7684\u51fd\u6570\u4ee3\u7801\u66ff\u6362\u5d4c\u5165\u5230\u5bf9\u5e94\u7684\u4f4d\u7f6e\uff0c\u9002\u7528\u4e8e\u4ee3\u7801\u8f83\u5c11\u7684\u51fd\u6570\u3002", "\u5b8f\u5b9a\u4e49\u662f\u7b80\u5355\u7684\u66ff\u6362\u53d8\u91cf\uff0c\u5982\u679c\u5b9a\u4e49\u7684\u662f\u6709\u53c2\u6570\u7684\u51fd\u6570\u5f62\u5f0f\uff0c\u53c2\u6570\u4e0d\u505a\u7c7b\u578b\u6821\u9a8c\u3002", "\u00a0", "3.MFC", "\u7b54\u9898\uff1a", "4.", "\u7b54\u9898\uff1a\u5728\u7c7b\u4e2d\u5305\u542b\u7eaf\u865a\u51fd\u6570\u7684\u7c7b\u5c31\u53eb\u505a\u7eaf\u865a\u7c7b\u3002", "\u5b9a\u4e49\uff1aVirtual\u00a0", "\u5e94\u7528\uff1a\u5728\u7ee7\u627f\u5173\u7cfb\u4e2d\u5f15\u53d1\u52a8\u6001\u7ed1\u5b9a\u3002", "5.", "\u7b54\u9898\uff1a\u5b9a\u4e49", "\u5e94\u7528\uff1a\u5728\u7ee7\u627f\u5173\u7cfb\u4e2d\uff0c\u865a\u51fd\u6570\u662f\u5b9e\u73b0\u52a8\u6001\u7ed1\u5b9a\u7684\u5173\u952e\u3002", "6.#define\u00a0MAX_LEN\u00a0500", "\u00a0\u00a0char\u00a0arry[MAX_LEN];", "\u00a0\u00a0cin>>arry;", "\u00a0\u00a0\u8fd9\u6bb5\u4ee3\u7801\u6709\u95ee\u9898\u5417\uff1f\u82e5\u6709\uff0c\u8bf7\u6307\u51fa\u5e76\u4fee\u6539\uff1b", "\u7b54\u9898\uff1a\u6709\u95ee\u9898\u3002\u5934\u6587\u4ef6\u7f3a\u5c11\u3002", "#include\u00a0<iostream>", "7.delete\u00a0[]arry\u00a0", "\u7b54\u9898\uff1a", "\u00a0\u00a0Delete[]arry\u00a0", "8.", "\u51fd\u6570\u6a21\u677f\uff1a", "\u7c7b\u6a21\u677f\uff1a", "\u00a0", "9.\u00a0\u00a0\u00a0a.CRuntimeClass", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0b.DECLARE_MESSAGE_MAP", "\u7b54\u9898\uff1a\u6d88\u606f\u6620\u5c04\u5b8f\u5b9a\u4e49", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0c.", "\u7b54\u9898\uff1a", "\u00a0\u00a0DDV", "\u00a0\u00a0", "\n10.DECLARE_DYNAMIC/IMPLEMEAT_DYNAMIC\u00a0\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0DECLARE_DYNCREATE/IMPLENENT_DYNCREATE\u00a0\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0DECLARE_SERIAL/IMPLEMENT_SERIAL\u00a0\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0", "\u00a0", "\u00a0", "\u4e8c\u3001\u57fa\u7840\u77e5\u8bc6", "1.", "\u7b54\u9898\uff1a\u4e03\u5c42\u4ece\u4e0a\u5230\u4e0b\uff1a\u5e94\u7528\u5c42\uff0c\u8868\u793a\u5c42\uff0c\u4f1a\u8bdd\u5c42\uff0c\u4f20\u8f93\u5c42\uff0c\u7f51\u7edc\u5c42\uff0c\u7269\u7406\u5c42\uff0c\u94fe\u8def\u5c42", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u4e94\u5c42\u4ece\u4e0b\u5230\u4e0a\uff1a\u94fe\u8def\u5c42\uff0c\u7269\u7406\u5c42\uff0c\u7f51\u7edc\u5c42\uff0c\u4f20\u8f93\u5c42\uff0c\u5e94\u7528\u5c42\u3002", "2.IP", "\u7b54\u9898\uff1a\u5e94\u7528\u5728\u7f51\u7edc\u5c42\u3002", "Udp", "3.A", "4.", "5.", "\u00a0\u5355\u4ef6\u6a21\u5f0f\u00a0\uff0c\u7b80\u5355\u5de5\u5382\u6a21\u5f0f\uff0c\u6865\u6881\u6a21\u5f0f\u3002\u00b7"], "title": "\u6df1\u5733\u64ce\u65d7C++\u7b14\u8bd5\u9898\u76ee\u53ca\u7b54\u6848"},
{"contents": ["C++\u548c\u64cd\u4f5c\u7cfb\u7edf\u9762\u8bd5\u95ee\u9898\u5206\u7c7b", "inline\u7684\u4f7f\u7528\u662f\u6709\u6240\u9650\u5236\u7684\uff0cinline\u53ea\u9002\u5408\u51fd\u6570\u4f53\u5185\u4ee3\u7801\u7b80\u5355\u7684\u51fd\u6570\u4f7f\u7528\uff0c\u4e0d\u80fd\u5305\u542b\u590d\u6742\u7684\u7ed3\u6784\u63a7\u5236\u8bed\u53e5\u4f8b\u5982while switch\uff0c\u5e76\u4e14\u4e0d\u80fd\u5185\u8054\u51fd\u6570\u672c\u8eab\u4e0d\u80fd\u662f\u76f4\u63a5\u9012\u5f52\u51fd\u6570\uff08\u81ea\u5df1\u5185\u90e8\u8fd8\u8c03\u7528\u81ea\u5df1\u7684\u51fd\u6570\uff09", "\u5728C++\u4e2d\uff0c\u5bf9\u4e8e\u6709virtual\u7684\u7c7b\uff0c\u5176sizeof\u4f1a\u6bd4\u6b63\u5e38\u60c5\u51b5\u591a\u59044\u4e2a\u5b57\u8282\u3002\u65e2\u5728\u7c7b\u7684\u6700\u5f00\u59cb\u56db\u4e2a\u5b57\u8282\uff0c\u653e\u7684\u662fVTABLE\u8868\u7684\u5730\u5740\uff08void *\u7c7b\u578b\uff09\u3002\u800c\u5728VTABLE\u4e2d\uff0c\u6240\u6709\u865a\u51fd\u6570\u662f\u4ee5\u6307\u9488\u6570\u7ec4\u7684\u5f62\u5f0f\u5b58\u653e\u3002 \u5bf9\u4e8e\u6d3e\u751f\u7684\u7c7b\uff0c\u5373\u65f6\u6ca1\u6709\u91cd\u8f7d\u57fa\u7c7b\u7684\u865a\u51fd\u6570\uff0c\u4e5f\u4f1a\u5728\u5176VTABLE\u5360\u7528\u4e00\u683c\u3002\u9020\u6210\u7a7a\u95f4\u4e0a\u7684\u6d6a\u8d39\u3002\u975e\u865a\u57fa\u7c7b\u6ca1\u6709VTABLE\uff0cVTABLE\u662f\u5728\u6784\u9020\u7684\u65f6\u5019\u7f16\u8bd1\u5668\u751f\u6210\u7684\u3002", "\u7ebf\u7a0b\u548c\u8fdb\u7a0b\uff1a\u8fdb\u7a0b\u662f\u64cd\u4f5c\u7cfb\u7edf\u8d44\u6e90\u5206\u914d\u7684\u6700\u5c0f\u5355\u4f4d\uff0c\u7ebf\u7a0b\u662fCPU\u8fd0\u884c\u7684\u6700\u5c0f\u5355\u4f4d\u3002linux\u4e2d\uff0c\u4f7f\u7528\u7684\u662f\u7528\u6237\u7ebf\u7a0b\uff08\u5bf9\u5e94\u6838\u5fc3\u7ebf\u7a0b\uff1a\u7ebf\u7a0b\u7ba1\u7406\u7531\u5185\u6838\u5b9e\u73b0\uff09\uff0c\u800c\u4e14\u662f1\uff1a1\u5f62\u5f0f\uff0c\u65e2\u6bcf\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u90fd\u5bf9\u5e94\u5185\u6838\u4e2d\u7684\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u8fdb\u7a0b\uff0c\u8c03\u5ea6\u7531\u5185\u6838\u5b9e\u73b0\uff0c\u4f46\u662f\u7ebf\u7a0b\u7684\u7ba1\u7406\uff08\u6bd4\u5982\u4ea7\u751f\u548c\u7ed3\u675f\uff09\uff0c\u5747\u6709\u4e00\u4e2a\u7ba1\u7406\u7ebf\u7a0b\u5b9e\u73b0\u3002\u7ba1\u7406\u7ebf\u7a0b\u5728\u7b2c\u4e00\u6b21\u8c03\u7528pthread_create\u7684\u65f6\u5019\u751f\u6210\u3002", "\u9700\u6c42\u5206\u6790\u548c\u9879\u76ee\u8ba1\u5212\uff1a\u53ef\u884c\u6027\u8ba1\u5212\uff0c\u9879\u76ee\u8ba1\u5212\uff0c\u9700\u6c42\u5206\u6790\uff0c\u6d4b\u8bd5\u8ba1\u5212", "\u8f6f\u4ef6\u8bbe\u8ba1\u8bf4\u660e\u4e66\uff1a\u529f\u80fd\u8bbe\u8ba1\u8bf4\u660e\u4e66\uff0c\u5b9e\u73b0\u8bbe\u8ba1\u8bf4\u660e\u4e66", "\u4f7f\u7528\u624b\u518c", "\u6d4b\u8bd5\u62a5\u544a", "\u9879\u76ee\u603b\u7ed3", "n\u7c7b\u6210\u5458\u7684\u8bbf\u95ee\u63a7\u5236\u65b9\u5f0f", "public\uff1a\u7c7b\u672c\u8eab\u3001\u6d3e\u751f\u7c7b\u548c\u5176\u5b83\u7c7b\u5747\u53ef\u8bbf\u95ee\uff1b", "protected\uff1a\u7c7b\u672c\u8eab\u548c\u6d3e\u751f\u7c7b\u5747\u53ef\u8bbf\u95ee\uff0c\u5176\u5b83\u7c7b\u4e0d\u80fd\u8bbf\u95ee\uff1b", "private\uff08\u9ed8\u8ba4\uff09\uff1a\u7c7b\u672c\u8eab\u53ef\u8bbf\u95ee\uff0c\u6d3e\u751f\u7c7b\u548c\u5176\u5b83\u7c7b\u4e0d\u80fd\u8bbf\u95ee\u3002", "\u2014\u2014\u7531\u7236\u7c7b\u6210\u5458\u7684\u8bbf\u95ee\u63a7\u5236\u65b9\u5f0f\u548c\u7ee7\u627f\u8bbf\u95ee\u63a7\u5236\u65b9\u5f0f\u5171\u540c\u51b3\u5b9a", "private+public\uff08protectd\uff0cprivate\uff09=>\u4e0d\u53ef\u8bbf\u95ee", "pubic\uff08protected\uff09+public=>public\uff08protected\uff09", "public\uff08protected\uff09+protected=>protected", "public\uff08protected\uff09+private\uff08\u9ed8\u8ba4\uff09=>private", "C++\u4e2d\u7684\u6a21\u677f\u548cvirtual\u5f02\u540c\uff1f ==>\uff1f", "private\u7ee7\u627f\u548cpublic\u7ee7\u627f\u533a\u522b\uff1f ==>\uff1f", "1.\u9650\u5236\u53d8\u91cf\u7684\u4f5c\u7528\u57df", "2.\u8bbe\u7f6e\u53d8\u91cf\u7684\u5b58\u50a8\u57df", "1\uff09 \u5f15\u7528\u5fc5\u987b\u88ab\u521d\u59cb\u5316\uff0c\u6307\u9488\u4e0d\u5fc5\u3002", "2\uff09 \u5f15\u7528\u521d\u59cb\u5316\u4ee5\u540e\u4e0d\u80fd\u88ab\u6539\u53d8\uff0c\u6307\u9488\u53ef\u4ee5\u6539\u53d8\u6240\u6307\u7684\u5bf9\u8c61\u3002", "3\uff09 \u4e0d\u5b58\u5728\u6307\u5411\u7a7a\u503c\u7684\u5f15\u7528\uff0c\u4f46\u662f\u5b58\u5728\u6307\u5411\u7a7a\u503c\u7684\u6307\u9488\u3002", "\u5728\u7279\u5b9a\u65f6\u95f4\u5185\u5b8c\u6210\u7279\u5b9a\u7684\u4efb\u52a1\uff0c\u5b9e\u65f6\u6027\u4e0e\u53ef\u9760\u6027", "\u5168\u5c40\u53d8\u91cf\u50a8\u5b58\u5728\u9759\u6001\u6570\u636e\u533a\uff0c\u5c40\u90e8\u53d8\u91cf\u5728\u5806\u6808", "\u5de6\u53f3\u5b50\u6811\u90fd\u662f\u5e73\u8861\u4e8c\u53c9\u6811 \u4e14\u5de6\u53f3\u5b50\u6811\u7684\u6df1\u5ea6\u5dee\u503c\u7684\u7edd\u5bf9\u503c\u4e0d\u5927\u4e8e1", "\u6ca1\u6709\u56de\u6536\u5783\u573e\u8d44\u6e90", "constructor ==>C++\u4e2d\u7684\u7c7b\u7684\u6784\u9020\u51fd\u6570\u58f0\u660e", "O\uff08n^2\uff09", "if\uff08x>0.000001&&x<-0.000001\uff09", "tcp/ip \u5e94\u7528\u5c42/\u4f20\u8f93\u5c42/\u7f51\u7edc\u5c42/\u6570\u636e\u94fe\u8def\u5c42/\u7269\u7406\u5c42", "ARP \uff08Address Resolution Protocol\uff09\uff08\u5730\u5740\u89e3\u6790\u534f\u8bae\uff09", "IP\u5730\u5740\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff0c\u7f51\u7edc\u53f7\u548c\u4e3b\u673a\u53f7\u3002\u4e0d\u8fc7\u662f\u8981\u548c\u201c\u5b50\u7f51\u63a9\u7801\u201d\u6309\u4f4d\u4e0e\u4e0a\u4e4b\u540e\u624d\u80fd\u533a\u5206\u54ea\u4e9b\u662f\u7f51\u7edc\u4f4d\u54ea\u4e9b\u662f\u4e3b\u673a\u4f4d\u3002", "\u5faa\u73af\u94fe\u8868\uff0c\u7528\u53d6\u4f59\u64cd\u4f5c\u505a \u2014\u2014>\uff1f\uff1f", "SWITH\uff08\u8868\u8fbe\u5f0f\uff09\uff0c\u8868\u8fbe\u5f0f\u53ef\u4ee5\u662f\u6574\u578b\u3001\u5b57\u7b26\u578b\u4ee5\u53ca\u679a\u4e3e\u7c7b\u578b\u7b49\u8868\u8fbe\u5f0f\u3002", "switch\u7684\u53c2\u6570\u4e0d\u80fd\u4e3a\u5b9e\u578b\u3002", "\u6d45\u8c08C/C++\u4e2dStatic\u7684\u4f5c\u7528", "1.\u5148\u6765\u4ecb\u7ecd\u5b83\u7684\u7b2c\u4e00\u6761\u4e5f\u662f\u6700\u91cd\u8981\u7684\u4e00\u6761\uff1a\u9690\u85cf\u3002", "\u3000\u3000\u5f53\u6211\u4eec\u540c\u65f6\u7f16\u8bd1\u591a\u4e2a\u6587\u4ef6\u65f6\uff0c\u6240\u6709\u672a\u52a0static\u524d\u7f00\u7684\u5168\u5c40\u53d8\u91cf\u548c\u51fd\u6570\u90fd\u5177\u6709\u5168\u5c40\u53ef\u89c1\u6027\u3002\u4e3a\u7406\u89e3\u8fd9\u53e5\u8bdd\uff0c\u6211\u4e3e\u4f8b\u6765\u8bf4\u660e\u3002\u6211\u4eec\u8981\u540c\u65f6\u7f16\u8bd1\u4e24\u4e2a\u6e90\u6587\u4ef6\u548c\u4e00\u4e2aMakefile\uff0c\u4e00\u4e2a\u662fa.c\uff0c\u53e6\u4e00\u4e2a\u662fmain.c.\u4e0b\u9762\u662fa.c\u7684\u5185\u5bb9\uff1a#include <stdio.h>", "\u3000\u3000char a = \u2019A\u2019\uff1b //global variable", "\u3000\u3000void msg\uff08\uff09", "\u3000\u3000{ printf\uff08\u201dHello\\n\u201d\uff09\uff1b}\u4e0b\u9762\u662fmain.c\u7684\u5185\u5bb9\uff1a#include <stdio.h>", "\u3000\u3000int main\uff08void\uff09", "\u3000\u3000{ extern char a\uff1b // extern variable must be declared before use printf\uff08\u201d%c \u201c\uff0c a\uff09\uff1b\uff08void\uff09msg\uff08\uff09\uff1breturn 0\uff1b}\u4e0b\u9762\u662fMakefile\u7684\u5185\u5bb9\uff1aCC =gcc", "\u3000\u3000SRC \uff1a= $\uff08shell ls *.c\uff09", "\u3000\u3000OBJS \uff1a= $\uff08patsubst %.c\uff0c %.o\uff0c $\uff08SRC\uff09\uff09", "\u3000\u3000TARGET \uff1a= Main", "\u3000\u3000$\uff08TARGET\uff09\uff1a $\uff08OBJS\uff09", "\u3000\u3000$\uff08CC\uff09 $\uff08LIBS\uff09 -o $@ $^", "\u3000\u3000%.o\uff1a %.c $\uff08CC\uff09 $\uff08CFLAGS\uff09 -c -o $@ $<", "\u3000\u3000clean\uff1arm -f $\uff08TARGET\uff09 *.o\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f\uff1aA Hello\u4f60\u53ef\u80fd\u4f1a\u95ee\uff1a\u4e3a\u4ec0\u4e48\u5728a.c\u4e2d\u5b9a\u4e49\u7684\u5168\u5c40\u53d8\u91cfa\u548c\u51fd\u6570msg\u80fd\u5728main.c\u4e2d\u4f7f\u7528\uff1f\u524d\u9762\u8bf4\u8fc7\uff0c\u6240\u6709\u672a\u52a0static\u524d\u7f00\u7684\u5168\u5c40\u53d8\u91cf\u548c\u51fd\u6570\u90fd\u5177\u6709\u5168 \u5c40\u53ef\u89c1\u6027\uff0c\u5176\u5b83\u7684\u6e90\u6587\u4ef6\u4e5f\u80fd\u8bbf\u95ee\u3002\u6b64\u4f8b\u4e2d\uff0ca\u662f\u5168\u5c40\u53d8\u91cf\uff0cmsg\u662f\u51fd\u6570\uff0c\u5e76\u4e14\u90fd\u6ca1\u6709\u52a0static\u524d\u7f00\uff0c\u56e0\u6b64\u5bf9\u4e8e\u53e6\u5916\u7684\u6e90\u6587\u4ef6main.c\u662f\u53ef\u89c1\u7684\u3002", "\u3000\u3000\u5982\u679c\u52a0\u4e86static\uff0c\u5c31\u4f1a\u5bf9\u5176\u5b83\u6e90\u6587\u4ef6\u9690\u85cf\u3002\u4f8b\u5982\u5728a\u548cmsg\u7684\u5b9a\u4e49\u524d\u52a0\u4e0astatic\uff0cmain.c\u5c31\u770b\u4e0d\u5230\u5b83\u4eec\u4e86\u3002\u5229\u7528\u8fd9\u4e00\u7279\u6027\u53ef\u4ee5\u5728\u4e0d\u540c\u7684 \u6587\u4ef6\u4e2d\u5b9a\u4e49\u540c\u540d\u51fd\u6570\u548c\u540c\u540d\u53d8\u91cf\uff0c\u800c\u4e0d\u5fc5\u62c5\u5fc3\u547d\u540d\u51b2\u7a81\u3002Static\u53ef\u4ee5\u7528\u4f5c\u51fd\u6570\u548c\u53d8\u91cf\u7684\u524d\u7f00\uff0c\u5bf9\u4e8e\u51fd\u6570\u6765\u8bb2\uff0cstatic\u7684\u4f5c\u7528\u4ec5\u9650\u4e8e\u9690\u85cf\uff0c\u800c\u5bf9\u4e8e\u53d8 \u91cf\uff0cstatic\u8fd8\u6709\u4e0b\u9762\u4e24\u4e2a\u4f5c\u7528\u3002", "\u3000\u30002.static\u7684\u7b2c\u4e8c\u4e2a\u4f5c\u7528\u662f\u4fdd\u6301\u53d8\u91cf\u5185\u5bb9\u7684\u6301\u4e45\u3002", "\u3000\u3000\u5b58\u50a8\u5728\u9759\u6001\u6570\u636e\u533a\u7684\u53d8\u91cf\u4f1a\u5728\u7a0b\u5e8f\u521a\u5f00\u59cb\u8fd0\u884c\u65f6\u5c31\u5b8c\u6210\u521d\u59cb\u5316\uff0c\u4e5f\u662f\u552f\u4e00\u7684\u4e00\u6b21\u521d\u59cb\u5316\u3002\u5171\u6709\u4e24\u79cd\u53d8\u91cf\u5b58\u50a8\u5728\u9759\u6001\u5b58\u50a8\u533a\uff1a\u5168\u5c40\u53d8\u91cf\u548cstatic\u53d8\u91cf\uff0c\u53ea \u4e0d\u8fc7\u548c\u5168\u5c40\u53d8\u91cf\u6bd4\u8d77\u6765\uff0cstatic\u53ef\u4ee5\u63a7\u5236\u53d8\u91cf\u7684\u53ef\u89c1\u8303\u56f4\uff0c\u8bf4\u5230\u5e95static\u8fd8\u662f\u7528\u6765\u9690\u85cf\u7684\u3002\u867d\u7136\u8fd9\u79cd\u7528\u6cd5\u4e0d\u5e38\u89c1\uff0c\u4f46\u6211\u8fd8\u662f\u4e3e\u4e00\u4e2a\u4f8b\u5b50\u3002", "\u3000\u3000#include \uff1cstdio.h\uff1eint fun\uff08void\uff09{ static int count = 10\uff1b // \u4e8b\u5b9e\u4e0a\u6b64\u8d4b\u503c\u8bed\u53e5\u4ece\u6765\u6ca1\u6709\u6267\u884c\u8fc7return count\u2014\u2014\uff1b} int count = 1\uff1bint main\uff08void\uff09", "\u3000\u3000{ printf\uff08\u201dglobal\\t\\tlocal static\\n\u201d\uff09\uff1bfor\uff08\uff1b count \uff1c= 10\uff1b ++count\uff09", "\u3000\u3000printf\uff08\u201d%d\\t\\t%d\\n\u201d\uff0c count\uff0c fun\uff08\uff09\uff09\uff1breturn 0\uff1b}\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f\uff1aglobal local static 1 10 2 9 3 8 4 7 5 6 6 5 7 4 8 3 9 2 10 1 3.static\u7684\u7b2c\u4e09\u4e2a\u4f5c\u7528\u662f\u9ed8\u8ba4\u521d\u59cb\u5316\u4e3a0.\u5176\u5b9e\u5168\u5c40\u53d8\u91cf\u4e5f\u5177\u5907\u8fd9\u4e00\u5c5e\u6027\uff0c\u56e0\u4e3a\u5168\u5c40\u53d8\u91cf\u4e5f\u5b58\u50a8\u5728\u9759\u6001\u6570\u636e\u533a\u3002", "\u3000\u3000\u5728\u9759\u6001\u6570\u636e\u533a\uff0c\u5185\u5b58\u4e2d\u6240\u6709\u7684\u5b57\u8282\u9ed8\u8ba4\u503c\u90fd\u662f0\u00d700\uff0c\u67d0\u4e9b\u65f6\u5019\u8fd9\u4e00\u7279\u70b9\u53ef\u4ee5\u51cf\u5c11\u7a0b\u5e8f\u5458\u7684\u5de5\u4f5c\u91cf\u3002\u6bd4\u5982\u521d\u59cb\u5316\u4e00\u4e2a\u7a00\u758f\u77e9\u9635\uff0c\u6211\u4eec\u53ef\u4ee5\u4e00\u4e2a\u4e00\u4e2a\u5730\u628a\u6240\u6709 \u5143\u7d20\u90fd\u7f6e0\uff0c\u7136\u540e\u628a\u4e0d\u662f0\u7684\u51e0\u4e2a\u5143\u7d20\u8d4b\u503c\u3002\u5982\u679c\u5b9a\u4e49\u6210\u9759\u6001\u7684\uff0c\u5c31\u7701\u53bb\u4e86\u4e00\u5f00\u59cb\u7f6e0\u7684\u64cd\u4f5c\u3002\u518d\u6bd4\u5982\u8981\u628a\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4\u5f53\u5b57\u7b26\u4e32\u6765\u7528\uff0c\u4f46\u53c8\u89c9\u5f97\u6bcf\u6b21\u5728\u5b57\u7b26\u6570\u7ec4\u672b \u5c3e\u52a0\u2018\\0\u2019\u592a\u9ebb\u70e6\u3002\u5982\u679c\u628a\u5b57\u7b26\u4e32\u5b9a\u4e49\u6210\u9759\u6001\u7684\uff0c\u5c31\u7701\u53bb\u4e86\u8fd9\u4e2a\u9ebb\u70e6\uff0c\u56e0\u4e3a\u90a3\u91cc\u672c\u6765\u5c31\u662f\u2018\\0\u2019\u3002\u4e0d\u59a8\u505a\u4e2a\u5c0f\u5b9e\u9a8c\u9a8c\u8bc1\u4e00\u4e0b\u3002", "\u3000\u3000#include \uff1cstdio.h\uff1eint a\uff1bint main\uff08void\uff09", "\u3000\u3000{ int i\uff1bstatic char str\uff3b10\uff3d\uff1bprintf\uff08\u201dinteger\uff1a %d\uff1b string\uff1a \uff08begin\uff09%s\uff08end\uff09\u201d\uff0c a\uff0c str\uff09\uff1breturn 0\uff1b}\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u5982\u4e0binteger\uff1a 0\uff1b string\uff1a \uff08begin\uff09\uff08end\uff09", "\u3000\u3000\u6700\u540e\u5bf9static\u7684\u4e09\u6761\u4f5c\u7528\u505a\u4e00\u53e5\u8bdd\u603b\u7ed3\u3002\u9996\u5148static\u7684\u6700\u4e3b\u8981\u529f\u80fd\u662f\u9690\u85cf\uff0c\u5176\u6b21\u56e0\u4e3astatic\u53d8\u91cf\u5b58\u653e\u5728\u9759\u6001\u5b58\u50a8\u533a\uff0c\u6240\u4ee5\u5b83\u5177\u5907\u6301\u4e45\u6027\u548c\u9ed8\u8ba4\u503c0.", "C++\u5185\u5b58\u6cc4\u6f0f\u7684\u53d1\u751f\u65b9\u5f0f", "\u4ee5\u53d1\u751f\u7684\u65b9\u5f0f\u6765\u5206\u7c7b\uff0c\u5185\u5b58\u6cc4\u6f0f\u53ef\u4ee5\u5206\u4e3a4\u7c7b\uff1a", "1. \u5e38\u53d1\u6027\u5185\u5b58\u6cc4\u6f0f\u3002\u53d1\u751f\u5185\u5b58\u6cc4\u6f0f\u7684\u4ee3\u7801\u4f1a\u88ab\u591a\u6b21\u6267\u884c\u5230\uff0c\u6bcf\u6b21\u88ab\u6267\u884c\u7684\u65f6\u5019\u90fd\u4f1a\u5bfc\u81f4\u4e00\u5757\u5185\u5b58\u6cc4\u6f0f\u3002\u6bd4\u5982\u4f8b\u4e8c\uff0c\u5982\u679cSomething()\u51fd\u6570\u4e00\u76f4\u8fd4\u56deTrue\uff0c\u90a3\u4e48pOldBmp\u6307\u5411\u7684HBITMAP\u5bf9\u8c61\u603b\u662f\u53d1\u751f\u6cc4\u6f0f\u3002", "2. \u5076\u53d1\u6027\u5185\u5b58\u6cc4\u6f0f\u3002\u53d1\u751f\u5185\u5b58\u6cc4\u6f0f\u7684\u4ee3\u7801\u53ea\u6709\u5728\u67d0\u4e9b\u7279\u5b9a\u73af\u5883\u6216\u64cd\u4f5c\u8fc7\u7a0b\u4e0b\u624d\u4f1a\u53d1\u751f\u3002\u6bd4\u5982\u4f8b\u4e8c\uff0c\u5982\u679cSomething()\u51fd\u6570\u53ea\u6709\u5728\u7279\u5b9a\u73af\u5883\u4e0b\u624d\u8fd4\u56deTrue\uff0c\u90a3\u4e48pOldBmp\u6307\u5411\u7684HBITMAP\u5bf9\u8c61\u5e76\u4e0d\u603b\u662f\u53d1\u751f\u6cc4\u6f0f\u3002\u5e38\u53d1\u6027\u548c\u5076\u53d1\u6027\u662f\u76f8\u5bf9\u7684\u3002\u5bf9\u4e8e\u7279\u5b9a\u7684\u73af\u5883\uff0c\u5076\u53d1\u6027\u7684\u4e5f\u8bb8\u5c31\u53d8\u6210\u4e86\u5e38\u53d1\u6027\u7684\u3002\u6240\u4ee5\u6d4b\u8bd5\u73af\u5883\u548c\u6d4b\u8bd5\u65b9\u6cd5\u5bf9\u68c0\u6d4b\u5185\u5b58\u6cc4\u6f0f\u81f3\u5173\u91cd\u8981\u3002", "3. \u4e00\u6b21\u6027\u5185\u5b58\u6cc4\u6f0f\u3002\u53d1\u751f\u5185\u5b58\u6cc4\u6f0f\u7684\u4ee3\u7801\u53ea\u4f1a\u88ab\u6267\u884c\u4e00\u6b21\uff0c\u6216\u8005\u7531\u4e8e\u7b97\u6cd5\u4e0a\u7684\u7f3a\u9677\uff0c\u5bfc\u81f4\u603b\u4f1a\u6709\u4e00\u5757\u4ec5\u4e14\u4e00\u5757\u5185\u5b58\u53d1\u751f\u6cc4\u6f0f\u3002\u6bd4\u5982\uff0c\u5728\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d\u5206\u914d\u5185\u5b58\uff0c\u5728\u6790\u6784\u51fd\u6570\u4e2d\u5374\u6ca1\u6709\u91ca\u653e\u8be5\u5185\u5b58\uff0c\u4f46\u662f\u56e0\u4e3a\u8fd9\u4e2a\u7c7b\u662f\u4e00\u4e2aSingleton\uff0c\u6240\u4ee5\u5185\u5b58\u6cc4\u6f0f\u53ea\u4f1a\u53d1\u751f\u4e00\u6b21\u3002\u53e6\u4e00\u4e2a\u4f8b\u5b50\uff1a\n", "\n\u4f8b\u4e09", "\u5982\u679c\u7a0b\u5e8f\u5728\u7ed3\u675f\u7684\u65f6\u5019\u6ca1\u6709\u91ca\u653eg_lpszFileName\u6307\u5411\u7684\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\uff0c\u5373\u4f7f\u591a\u6b21\u8c03\u7528SetFileName()\uff0c\u603b\u4f1a\u6709\u4e00\u5757\u5185\u5b58\uff0c\u800c\u4e14\u4ec5\u6709\u4e00\u5757\u5185\u5b58\u53d1\u751f\u6cc4\u6f0f\u3002", "4. \u9690\u5f0f\u5185\u5b58\u6cc4\u6f0f\u3002\u7a0b\u5e8f\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u4e0d\u505c\u7684\u5206\u914d\u5185\u5b58\uff0c\u4f46\u662f\u76f4\u5230\u7ed3\u675f\u7684\u65f6\u5019\u624d\u91ca\u653e\u5185\u5b58\u3002\u4e25\u683c\u7684\u8bf4\u8fd9\u91cc\u5e76\u6ca1\u6709\u53d1\u751f\u5185\u5b58\u6cc4\u6f0f\uff0c\u56e0\u4e3a\u6700\u7ec8\u7a0b\u5e8f\u91ca\u653e\u4e86\u6240\u6709\u7533\u8bf7\u7684\u5185\u5b58\u3002\u4f46\u662f\u5bf9\u4e8e\u4e00\u4e2a \u670d\u52a1\u5668\u7a0b\u5e8f\uff0c\u9700\u8981\u8fd0\u884c\u51e0\u5929\uff0c\u51e0\u5468\u751a\u81f3\u51e0\u4e2a\u6708\uff0c\u4e0d\u53ca\u65f6\u91ca\u653e\u5185\u5b58\u4e5f\u53ef\u80fd\u5bfc\u81f4\u6700\u7ec8\u8017\u5c3d\u7cfb\u7edf\u7684\u6240\u6709\u5185\u5b58\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u79f0\u8fd9\u7c7b\u5185\u5b58\u6cc4\u6f0f\u4e3a\u9690\u5f0f\u5185\u5b58\u6cc4\u6f0f\u3002\u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff1a\n", "\n\u4f8b\u56db", "\u5047\u8bbe\u5728Client\u4eceServer\u7aef\u65ad\u5f00\u540e\uff0cServer\u5e76\u6ca1\u6709\u547c\u53ebOnClientDisconnected()\u51fd\u6570\uff0c\u90a3\u4e48\u4ee3\u8868\u90a3\u6b21\u8fde\u63a5\u7684Connection\u5bf9\u8c61\u5c31\u4e0d\u4f1a\u88ab\u53ca\u65f6\u7684\u5220\u9664\uff08\u5728Server\u7a0b\u5e8f\u9000\u51fa\u7684\u65f6\u5019\uff0c\u6240\u6709Connection\u5bf9\u8c61\u4f1a\u5728ConnectionManager\u7684\u6790\u6784\u51fd\u6570\u91cc\u88ab\u5220\u9664\uff09\u3002\u5f53\u4e0d\u65ad\u7684\u6709\u8fde\u63a5\u5efa\u7acb\u3001\u65ad\u5f00\u65f6\u9690\u5f0f\u5185\u5b58\u6cc4\u6f0f\u5c31\u53d1\u751f\u4e86\u3002", "\n\u4ece\u7528\u6237\u4f7f\u7528\u7a0b\u5e8f\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u5185\u5b58\u6cc4\u6f0f\u672c\u8eab\u4e0d\u4f1a\u4ea7\u751f\u4ec0\u4e48\u5371\u5bb3\uff0c\u4f5c\u4e3a\u4e00\u822c\u7684\u7528\u6237\uff0c\u6839\u672c\u611f\u89c9\u4e0d\u5230\u5185\u5b58\u6cc4\u6f0f\u7684\u5b58\u5728\u3002\u771f\u6b63\u6709\u5371\u5bb3\u7684\u662f\u5185\u5b58\u6cc4\u6f0f\u7684\u5806\u79ef\uff0c\u8fd9\u4f1a\u6700\u7ec8\u6d88\u8017\u5c3d\u7cfb\u7edf\u6240\u6709\u7684\u5185\u5b58\u3002\u4ece\u8fd9\u4e2a\u89d2\u5ea6\u6765\u8bf4\uff0c\u4e00\u6b21\u6027\u5185\u5b58\u6cc4\u6f0f\u5e76\u6ca1\u6709\u4ec0\u4e48\u5371\u5bb3\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4f1a\u5806\u79ef\uff0c\u800c\u9690\u5f0f\u5185\u5b58\u6cc4\u6f0f\u5371\u5bb3\u6027\u5219\u975e\u5e38\u5927\uff0c\u56e0\u4e3a\u8f83\u4e4b\u4e8e\u5e38\u53d1\u6027\u548c\u5076\u53d1\u6027\u5185\u5b58\u6cc4\u6f0f\u5b83\u66f4\u96be\u88ab\u68c0\u6d4b\u5230\u3002", "c++\u5185\u5b58\u6cc4\u6f0f\u68c0\u6d4b", "\u68c0\u6d4b\u5185\u5b58\u6cc4\u6f0f\u7684\u65b9\u6cd5\u591a\u79cd\u591a\u6837\uff0c\u6709\u4f7f\u7528\u5185\u5b58\u6cc4\u6f0f\u68c0\u6d4b\u5de5\u5177\uff08\u6bd4\u5982BoundsChecker\uff09\u68c0\u6d4b\u5185\u5b58\u6cc4\u6f0f\uff1b\u6709\u76f4\u63a5\u770b\u4ee3\u7801\u68c0\u6d4b\u4ee3\u7801\u903b\u8f91\uff0c\u770b\u90a3\u4e9b\u5730\u65b9\u662f\u5426\u6ca1\u6709\u91ca\u653e\u5185\u5b58\u3002\u4e00\u822c\u5730\u9759\u6001\u5185\u5b58\u6cc4\u6f0f\u901a\u8fc7\u5de5\u5177\u4e0e\u4ee3\u7801\u68c0\u67e5\u5f88\u5bb9\u6613\u627e\u5230\u6cc4\u6f0f\u70b9\uff1b\u52a8\u6001\u7684\u5185\u5b58\u6cc4\u6f0f\u5f88\u96be\u67e5\uff0c\u4e00\u822c\u901a\u8fc7\u5728\u4ee3\u7801\u4e2d\u52a0\u65ad\u70b9\u8ddf\u8e2a\u548cRun-Time\u5185\u5b58\u68c0\u6d4b\u5de5\u5177\u6765\u67e5\u627e\u3002", "\u603b\u7684\u6765\u8bf4\uff0c\u8981\u68c0\u67e5\u5185\u5b58\u6cc4\u6f0f\u5206\u51e0\u4e2a\u6b65\u9aa4\uff1a", "1\u3001\u9996\u5148\u5199\u4ee3\u7801\u65f6\u8981\u63a7\u5236\u5185\u5b58\u7684\u91ca\u653e\uff0c\u6bd4\u5982new\u4e4b\u540e\u8981delete\uff0c\u770b\u6790\u6784\u51fd\u6570\u662f\u5426\u771f\u7684\u6267\u884c\uff08\u5f88\u591a\u4eba\u7f16\u5199\u91ca\u653e\u5185\u5b58\u7684\u4ee3\u7801\u5728\u6790\u6784\u51fd\u6570\u4e2d\u5904\u7406\u7684\uff09\uff0c\u5982\u679c\u6ca1\u6709\u771f\u6b63\u6267\u884c\uff0c\u5c31\u9700\u8981\u52a8\u6001\u91ca\u653e\u5bf9\u8c61\uff1b\u524d\u6bb5\u65f6\u95f4\u5728\u4e00\u4e2a\u9879\u76ee\u4e2d\u4f7f\u7528\u4e86\u5355\u4f8b\u6a21\u5f0f\u5bf9\u8c61\uff0c\u5c06\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u8bbe\u7f6e\u6210\u4fdd\u62a4\u7c7b\u578b\uff0c\u5728\u8fd0\u884c\u4ee3\u7801\u65f6\u9000\u51fa\u65f6\u4e0d\u6267\u884c\u5230\u6790\u6784\u51fd\u6570\u91cc\u9762\uff08\u5177\u4f53\u4e5f\u4e0d\u77e5\u9053\u4ec0\u4e48\u539f\u56e0\uff09\uff0c\u6700\u540e\u53ea\u6709\u624b\u52a8\u5220\u9664\u5bf9\u8c61\u3002", "2\u3001\u5176\u6b21\u8ba9\u7a0b\u5e8f\u957f\u65f6\u95f4\u8fd0\u884c\uff0c\u770b\u4efb\u52a1\u7ba1\u7406\u5668\u5bf9\u5e94\u7a0b\u5e8f\u5185\u5b58\u662f\u4e0d\u662f\u4e00\u76f4\u5411\u4e0a\u589e\u52a0\uff1b", "3\u3001\u6700\u540e\u4f7f\u7528\u5e38\u7528\u5185\u5b58\u6cc4\u6f0f\u68c0\u6d4b\u5de5\u5177\u6765\u68c0\u6d4b\u5185\u5b58\u6cc4\u6f0f\u70b9\u3002", "\u6587\u672c\u4e3b\u8981\u63cf\u8ff0\u4e00\u4e9b\u5185\u5b58\u6cc4\u6f0f\u68c0\u6d4b\u5de5\u5177\u529f\u80fd\u4ecb\u7ecd\u4e0e\u7b80\u5355\u4f7f\u7528\u65b9\u6cd5\u3002", "\n", "\u4e00\u3001\u5bf9\u4e8eVS2005/VS2008\u7f16\u8bd1\u5668\u81ea\u5e26\u7684\u5185\u5b58\u68c0\u6d4b\u5de5\u5177/\u51fd\u6570\u3002", "\n\u5728 main() \u51fd\u6570\u5f00\u5934\u52a0\u4e0a\uff1a", "\n#include \u201ccrtdbg.h\u201d", "\n_CrtSetDbgFlag(_CRTDBG_ALLOC_MEM_DF|_CRTDBG_LEAK_CHECK_DF);", "\n", "\u4e8c\u3001\u7528BoundsChecker\u4e4b\u7c7b\u7684\u5de5\u5177\u3002", "BoundsChecker \u662f\u4e00\u4e2aRun-Time\u9519\u8bef\u68c0\u6d4b\u5de5\u5177\uff0c\u5b83\u4e3b\u8981\u5b9a\u4f4d\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\u671f\u53d1\u751f\u7684\u5404\u79cd\u9519\u8bef\u3002BoundsChecker\u80fd\u68c0\u6d4b\u7684\u9519\u8bef\u5305\u62ec\uff1a", "1\u3001\u6307\u9488\u64cd\u4f5c\u548c\u5185\u5b58\u3001\u8d44\u6e90\u6cc4\u9732\u9519\u8bef\uff0c\u6bd4\u5982\uff1a", "\u5185\u5b58\u6cc4\u9732\uff1b", "\u8d44\u6e90\u6cc4\u9732\uff1b", "\u5bf9\u6307\u9488\u53d8\u91cf\u7684\u9519\u8bef\u64cd\u4f5c\u3002", "2\u3001\u5185\u5b58\u64cd\u4f5c\u65b9\u9762\u7684\u9519\u8bef\uff0c\u6bd4\u5982\uff1a", "\u5185\u5b58\u8bfb\u3001\u5199\u6ea2\u51fa\uff1b", "\u4f7f\u7528\u672a\u521d\u59cb\u5316\u7684\u5185\u5b58\u3002", "3\u3001API\u51fd\u6570\u4f7f\u7528\u9519\u8bef", "\u4e09\u3001linux\u4e0b\u53ef\u4ee5\u7528valgrind\u68c0\u6d4b\u5185\u5b58\u6cc4\u9732\u9519\u8bef\u3002", "\u56db\u3001purify\u5de5\u5177\uff0c\u8fd9\u4e2a\u662f\u4e13\u95e8\u68c0\u6d4b\u5185\u5b58\u7684\uff0c\u5305\u62ec\u6cc4\u9732\u3001\u8d8a\u754c\u3001\u6307\u9488\u8dd1\u98de\u7b49\u90fd\u53ef\u4ee5\u68c0\u67e5\uff0c\u5728VC\u4e0a\u4f7f\u7528\u65b9\u4fbf\u3002", "\u4e94\u3001\u7528Windbg\uff0c\u8bd5\u8fc7\u67e5\u53e5\u67c4\u6cc4\u6f0f\u7684\uff0c\u6bd4\u8f83\u65b9\u4fbf\u3002", "\u516d\u3001Visual Leak Detector", "Visual Leak Detector\u662f\u4e00\u6b3e\u7528\u4e8eVisual C++\u7684\u514d\u8d39\u7684\u5185\u5b58\u6cc4\u9732\u68c0\u6d4b\u5de5\u5177\u3002\u76f8\u6bd4\u8f83\u5176\u5b83\u7684\u5185\u5b58\u6cc4\u9732\u68c0\u6d4b\u5de5\u5177\uff0c\u5b83\u5728\u68c0\u6d4b\u5230\u5185\u5b58\u6cc4\u6f0f\u7684\u540c\u65f6\uff0c\u8fd8\u5177\u6709\u5982\u4e0b\u7279\u70b9\uff1a", "1\u3001 \u53ef\u4ee5\u5f97\u5230\u5185\u5b58\u6cc4\u6f0f\u70b9\u7684\u8c03\u7528\u5806\u6808\uff0c\u5982\u679c\u53ef\u4ee5\u7684\u8bdd\uff0c\u8fd8\u53ef\u4ee5\u5f97\u5230\u5176\u6240\u5728\u6587\u4ef6\u53ca\u884c\u53f7\uff1b", "2\u3001 \u53ef\u4ee5\u5f97\u5230\u6cc4\u9732\u5185\u5b58\u7684\u5b8c\u6574\u6570\u636e\uff1b", "3\u3001 \u53ef\u4ee5\u8bbe\u7f6e\u5185\u5b58\u6cc4\u9732\u62a5\u544a\u7684\u7ea7\u522b\uff1b", "4\u3001 \u5b83\u662f\u4e00\u4e2a\u5df2\u7ecf\u6253\u5305\u7684lib\uff0c\u4f7f\u7528\u65f6\u65e0\u987b\u7f16\u8bd1\u5b83\u7684\u6e90\u4ee3\u7801\u3002\u800c\u5bf9\u4e8e\u4f7f\u7528\u8005\u81ea\u5df1\u7684\u4ee3\u7801\uff0c\u4e5f\u53ea\u9700\u8981\u505a\u5f88\u5c0f\u7684\u6539\u52a8\uff1b", "5\u3001 \u4ed6\u7684\u6e90\u4ee3\u7801\u4f7f\u7528GNU\u8bb8\u53ef\u53d1\u5e03\uff0c\u5e76\u6709\u8be6\u5c3d\u7684\u6587\u6863\u53ca\u6ce8\u91ca\u3002\u5bf9\u4e8e\u60f3\u6df1\u5165\u4e86\u89e3\u5806\u5185\u5b58\u7ba1\u7406\u7684\u8bfb\u8005\uff0c\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002", "C++\u57f9\u8bad\uff1aC/C++\u4e2d\u5806\u548c\u6808\u7684\u533a\u522b", "\u4e00\u3001\u9884\u5907\u77e5\u8bc6\u2014\u7a0b\u5e8f\u7684\u5185\u5b58\u5206\u914d", "\n\u7531C/C++\u7f16\u8bd1\u7684\u7a0b\u5e8f\u5360\u7528\u7684\u5185\u5b58\u5206\u4e3a\u4ee5\u4e0b\u51e0\u4e2a\u90e8\u5206", "\n1\u3001\u6808\u533a(stack)\uff1a \u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u5206\u914d\u91ca\u653e\uff0c\u5b58\u653e\u51fd\u6570\u7684\u53c2\u6570\u503c\uff0c\u5c40\u90e8\u53d8\u91cf\u7b49\u3002\u5176\u64cd\u4f5c\u65b9\u5f0f\u7c7b\u4f3c\u4e8e\u6570\u636e\u7ed3\u6784\u4e2d\u7684\u6808\u3002", "\n2\u3001\u5806\u533a(heap)\uff1a \u4e00\u822c\u7531\u7a0b\u5e8f\u5458\u5206\u914d\u91ca\u653e\uff08malloc/free\u3001new/delete\uff09\uff0c \u82e5\u7a0b\u5e8f\u5458\u4e0d\u91ca\u653e\uff0c\u7a0b\u5e8f\u7ed3\u675f\u65f6\u53ef\u80fd\u7531\u64cd\u4f5c\u7cfb\u7edf\u56de\u6536\u3002\u6ce8\u610f\u5b83\u4e0e\u6570\u636e\u7ed3\u6784\u4e2d\u7684\u5806\u662f\u4e24\u56de\u4e8b\uff0c\u5206\u914d\u65b9\u5f0f\u5012\u662f\u7c7b\u4f3c\u4e8e\u94fe\u8868\u3002", "\n3\u3001\u5168\u5c40\u533a(static)\uff1a \u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\u7684\u5b58\u50a8\u662f\u653e\u5728\u4e00\u5757\u7684\uff0c\u521d\u59cb\u5316\u7684\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\u5728\u4e00\u5757\u533a\u57df\uff0c \u672a\u521d\u59cb\u5316\u7684\u5168\u5c40\u53d8\u91cf\u548c\u672a\u521d\u59cb\u5316\u7684\u9759\u6001\u53d8\u91cf\u5728\u76f8\u90bb\u7684\u53e6\u4e00\u5757\u533a\u57df\uff0c\u7a0b\u5e8f\u7ed3\u675f\u540e\u7531\u7cfb\u7edf\u91ca\u653e\u3002", "\n4\u3001\u6587\u5b57\u5e38\u91cf\u533a\uff1a \u5e38\u91cf\u5b57\u7b26\u4e32\u5c31\u662f\u653e\u5728\u8fd9\u91cc\u7684\uff0c \u7a0b\u5e8f\u7ed3\u675f\u540e\u7531\u7cfb\u7edf\u91ca\u653e\u3002", "\n5\u3001\u7a0b\u5e8f\u4ee3\u7801\u533a\uff1a \u5b58\u653e\u51fd\u6570\u4f53\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\u3002", "\nExample:", "\nint a = 0; // \u5168\u5c40\u521d\u59cb\u5316\u533a", "\nchar *p1; // \u5168\u5c40\u672a\u521d\u59cb\u5316\u533a", "\nmain()", "\n{", "\nint a; // \u6808\u533a", "\nchar s\uff3b\uff3d = \u201cabc\u201d; // \u6808\u533a", "\nchar *p2; // \u6808\u533a", "\nchar *p3 = \u201c123456\u2033; // 123456\\0\u5728\u5e38\u91cf\u533a\uff0cp3\u5728\u6808\u4e0a\u3002", "\nstatic int c =0\uff1b // \u5168\u5c40(\u9759\u6001)\u521d\u59cb\u5316\u533a", "\np1 = (char *)malloc(10);", "\np2 = (char *)malloc(20); // \u5206\u914d\u5f97\u6765\u5f9710\u548c20\u5b57\u8282\u7684\u533a\u57df\u5c31\u5728\u5806\u533a\u3002", "\nstrcpy(p1, \u201c123456\u2033); // 123456\\0\u653e\u5728\u5e38\u91cf\u533a\uff0c\u7f16\u8bd1\u5668\u53ef\u80fd\u4f1a\u5c06\u5b83\u4e0ep3\u6240\u6307\u5411\u7684\u201d123456\u2033\u4f18\u5316\u6210\u4e00\u4e2a\u5730\u65b9\u3002", "\n}", "\n\u4e8c\u3001\u5806\u548c\u6808\u7684\u7406\u8bba\u77e5\u8bc6", "\n2.1 \u7533\u8bf7\u65b9\u5f0f", "\n\u6808: \u7531\u7cfb\u7edf\u81ea\u52a8\u5206\u914d\u3002 \u4f8b\u5982\uff0c\u58f0\u660e\u5728\u51fd\u6570\u4e2d\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf int a; \u7cfb\u7edf\u81ea\u52a8\u5728\u6808\u4e2d\u4e3aa\u5f00\u8f9f\u7a7a\u95f4", "\n\u5806: \u9700\u8981\u7a0b\u5e8f\u5458\u81ea\u5df1\u7533\u8bf7\uff0c\u5e76\u6307\u660e\u5927\u5c0f\uff0c\u5728c\u4e2dmalloc\u51fd\u6570\uff1a\u5982p1 = (char *)malloc(10); \u5728C++\u4e2d\u7528new\u8fd0\u7b97\u7b26 \u5982p2 = (char *)malloc(10); \u4f46\u662f\u6ce8\u610f\u5c40\u90e8\u53d8\u91cfp1\u3001p2\u672c\u8eab\u662f\u5728\u6808\u4e2d\u7684\uff0c\u4f46\u662f\u4ed6\u4eec\u6307\u5411\u7684\u7533\u8bf7\u5230\u7684\u5185\u5b58\u662f\u5728\u5806\u533a\uff0c\u8fd9\u70b9\u8981\u660e\u786e!", "\n2.2 \u7533\u8bf7\u540e\u7cfb\u7edf\u7684\u54cd\u5e94", "\n\u6808\uff1a\u53ea\u8981\u6808\u7684\u5269\u4f59\u7a7a\u95f4\u5927\u4e8e\u6240\u7533\u8bf7\u7a7a\u95f4\uff0c\u7cfb\u7edf\u5c06\u4e3a\u7a0b\u5e8f\u63d0\u4f9b\u5185\u5b58\uff0c\u5426\u5219\u5c06\u62a5\u5f02\u5e38\u63d0\u793a\u6808\u6ea2\u51fa\u3002", "\n\u5806\uff1a\u9996\u5148\u5e94\u8be5\u77e5\u9053\u64cd\u4f5c\u7cfb\u7edf\u6709\u4e00\u4e2a\u8bb0\u5f55\u7a7a\u95f2\u5185\u5b58\u5730\u5740\u7684\u94fe\u8868\uff0c\u5f53\u7cfb\u7edf\u6536\u5230\u7a0b\u5e8f\u7684\u7533\u8bf7\u65f6\uff0c \u4f1a\u904d\u5386\u8be5\u94fe\u8868\uff0c\u5bfb\u627e\u7b2c\u4e00\u4e2a\u7a7a\u95f4\u5927\u4e8e\u6240\u7533\u8bf7\u7a7a\u95f4\u7684\u5806\u7ed3\u70b9\uff0c\u7136\u540e\u5c06\u8be5\u7ed3\u70b9\u4ece\u7a7a\u95f2\u7ed3\u70b9\u94fe\u8868\u4e2d\u5220\u9664\uff0c\u5e76\u5c06\u8be5\u7ed3\u70b9\u7684\u7a7a\u95f4\u5206\u914d\u7ed9\u7a0b\u5e8f\uff0c\u53e6\u5916\uff0c\u5bf9\u4e8e\u5927\u591a\u6570\u7cfb\u7edf\uff0c\u4f1a\u5728\u8fd9\u5757\u5185\u5b58\u7a7a\u95f4\u4e2d\u7684\u9996\u5730\u5740\u5904\u8bb0\u5f55\u672c\u6b21\u5206\u914d\u7684\u5927\u5c0f\uff0c\u8fd9\u6837\uff0c\u4ee3\u7801\u4e2d\u7684delete\u8bed\u53e5\u624d\u80fd\u6b63\u786e\u7684\u91ca\u653e\u672c\u5185\u5b58\u7a7a\u95f4\u3002\u53e6\u5916\uff0c\u7531\u4e8e\u627e\u5230\u7684\u5806\u7ed3\u70b9\u7684\u5927\u5c0f\u4e0d\u4e00\u5b9a\u6b63\u597d\u7b49\u4e8e\u7533\u8bf7\u7684\u5927\u5c0f\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u7684\u5c06\u591a\u4f59\u7684\u90a3\u90e8\u5206\u91cd\u65b0\u653e\u5165\u7a7a\u95f2\u94fe\u8868\u4e2d\u3002", "\n2.3 \u7533\u8bf7\u5927\u5c0f\u7684\u9650\u5236", "\n\u6808\uff1a\u5728Windows\u4e0b,\u6808\u662f\u5411\u4f4e\u5730\u5740\u6269\u5c55\u7684\u6570\u636e\u7ed3\u6784\uff0c\u662f\u4e00\u5757\u8fde\u7eed\u7684\u5185\u5b58\u533a\u57df\u3002\u8fd9\u53e5\u8bdd\u7684\u610f\u601d\u662f\u6808\u9876\u7684\u5730\u5740\u548c\u6808\u7684\u6700\u5927\u5bb9\u91cf\u662f\u7cfb\u7edf\u9884\u5148\u89c4\u5b9a\u597d\u7684\uff0c\u5728WINDOWS\u4e0b\uff0c\u6808\u7684\u5927\u5c0f\u662f2M(\u4e5f\u6709\u7684\u8bf4\u662f1M\uff0c\u603b\u4e4b\u662f\u4e00\u4e2a\u7f16\u8bd1\u65f6\u5c31\u786e\u5b9a\u7684\u5e38\u6570)\uff0c\u5982\u679c\u7533\u8bf7\u7684\u7a7a\u95f4\u8d85\u8fc7\u6808\u7684\u5269\u4f59\u7a7a\u95f4\u65f6\uff0c\u5c06\u63d0\u793aoverflow\u3002\u56e0\u6b64\uff0c\u80fd\u4ece\u6808\u83b7\u5f97\u7684\u7a7a\u95f4\u8f83\u5c0f\u3002", "\n\u5806\uff1a\u5806\u662f\u5411\u9ad8\u5730\u5740\u6269\u5c55\u7684\u6570\u636e\u7ed3\u6784\uff0c\u662f\u4e0d\u8fde\u7eed\u7684\u5185\u5b58\u533a\u57df\u3002\u8fd9\u662f\u7531\u4e8e\u7cfb\u7edf\u662f\u7528\u94fe\u8868\u6765\u5b58\u50a8\u7684\u7a7a\u95f2\u5185\u5b58\u5730\u5740\u7684\uff0c\u81ea\u7136\u662f\u4e0d\u8fde\u7eed\u7684\uff0c\u800c\u94fe\u8868\u7684\u904d\u5386\u65b9\u5411\u662f\u7531\u4f4e\u5730\u5740\u5411\u9ad8\u5730\u5740\u3002\u5806\u7684\u5927\u5c0f\u53d7\u9650\u4e8e\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e2d\u6709\u6548\u7684\u865a\u62df\u5185\u5b58\u3002\u7531\u6b64\u53ef\u89c1\uff0c\u5806\u83b7\u5f97\u7684\u7a7a\u95f4\u6bd4\u8f83\u7075\u6d3b\uff0c\u4e5f\u6bd4\u8f83\u5927\u3002", "\n2.4 \u7533\u8bf7\u6548\u7387\u7684\u6bd4\u8f83\uff1a", "\n\u6808\uff1a\u7531\u7cfb\u7edf\u81ea\u52a8\u5206\u914d\uff0c\u901f\u5ea6\u8f83\u5feb\u3002\u4f46\u7a0b\u5e8f\u5458\u662f\u65e0\u6cd5\u63a7\u5236\u7684\u3002", "\n\u5806\uff1a\u662f\u7531malloc/new\u5206\u914d\u7684\u5185\u5b58\uff0c\u4e00\u822c\u901f\u5ea6\u6bd4\u8f83\u6162\uff0c\u800c\u4e14\u5bb9\u6613\u4ea7\u751f\u5185\u5b58\u788e\u7247,\u4e0d\u8fc7\u7528\u8d77\u6765\u6700\u65b9\u4fbf\u3002", "2.5 \u5806\u548c\u6808\u4e2d\u7684\u5b58\u50a8\u5185\u5bb9", "\n\u6808\uff1a \u5728\u51fd\u6570\u8c03\u7528\u65f6\uff0c\u7b2c\u4e00\u4e2a\u8fdb\u6808\u7684\u662f\u4e3b\u51fd\u6570\u4e2d\u7684\u4e0b\u4e00\u6761\u6307\u4ee4(\u51fd\u6570\u8c03\u7528\u8bed\u53e5\u7684\u4e0b\u4e00\u6761\u53ef\u6267\u884c\u8bed\u53e5)\u7684\u5730\u5740\uff0c\u7136\u540e\u662f\u51fd\u6570\u7684\u5404\u4e2a\u53c2\u6570\uff0c\u5728\u5927\u591a\u6570\u7684C\u7f16\u8bd1\u5668\u4e2d\uff0c\u53c2\u6570\u662f\u7531\u53f3\u5f80\u5de6\u5165\u6808\u7684\uff0c\u7136\u540e\u662f\u51fd\u6570\u4e2d\u7684\u5c40\u90e8\u53d8\u91cf\u3002\u6ce8\u610f\u9759\u6001\u53d8\u91cf\u662f\u4e0d\u5165\u6808\u7684\u3002\u5f53\u672c\u6b21\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u540e\uff0c\u5c40\u90e8\u53d8\u91cf\u5148\u51fa\u6808\uff0c\u7136\u540e\u662f\u53c2\u6570\uff0c\u6700\u540e\u6808\u9876\u6307\u9488\u6307\u5411\u6700\u5f00\u59cb\u5b58\u7684\u5730\u5740\uff0c\u4e5f\u5c31\u662f\u4e3b\u51fd\u6570\u4e2d\u7684\u4e0b\u4e00\u6761\u6307\u4ee4\uff0c\u7a0b\u5e8f\u7531\u8be5\u70b9\u7ee7\u7eed\u8fd0\u884c\u3002", "\n\u5806\uff1a\u4e00\u822c\u662f\u5728\u5806\u7684\u5934\u90e8\u7528\u4e00\u4e2a\u5b57\u8282\u5b58\u653e\u5806\u7684\u5927\u5c0f\u3002\u5806\u4e2d\u7684\u5177\u4f53\u5185\u5bb9\u6709\u7a0b\u5e8f\u5458\u5b89\u6392\u3002", "2.6 \u5b58\u53d6\u6548\u7387\u7684\u6bd4\u8f83", "\nchar s1\uff3b\uff3d = \u201caaaaaaaaaaaaaaa\u201d;", "\nchar *s2 = \u201cbbbbbbbbbbbbbbbbb\u201d;", "\naaaaaaaaaaa\u662f\u5728\u8fd0\u884c\u65f6\u523b\u8d4b\u503c\u7684\uff1b", "\n\u800cbbbbbbbbbbb\u662f\u5728\u7f16\u8bd1\u65f6\u5c31\u786e\u5b9a\u7684\uff1b", "\n\u4f46\u662f\uff0c\u5728\u4ee5\u540e\u7684\u5b58\u53d6\u4e2d\uff0c\u5728\u6808\u4e0a\u7684\u6570\u7ec4\u6bd4\u6307\u9488\u6240\u6307\u5411\u7684\u5b57\u7b26\u4e32(\u4f8b\u5982\u5806)\u5feb\u3002", "\n\u6bd4\u5982\uff1a", "\n#include", "\nvoid main()", "\n{", "\nchar a = 1;", "\nchar c\uff3b\uff3d = \u201c1234567890\u2033;", "\nchar *p =\u201d1234567890\u2033;", "\na = c\uff3b1\uff3d;", "\na = p\uff3b1\uff3d;", "\nreturn;", "\n}", "\n\u5bf9\u5e94\u7684\u6c47\u7f16\u4ee3\u7801", "\n10: a = c\uff3b1\uff3d;", "\n00401067 8A 4D F1 mov cl,byte ptr \uff3bebp-0Fh\uff3d", "\n0040106A 88 4D FC mov byte ptr \uff3bebp-4\uff3d,cl", "\n11: a = p\uff3b1\uff3d;", "\n0040106D 8B 55 EC mov edx,dword ptr \uff3bebp-14h\uff3d", "\n00401070 8A 42 01 mov al,byte ptr \uff3bedx+1\uff3d", "\n00401073 88 45 FC mov byte ptr \uff3bebp-4\uff3d,al", "\n\u7b2c\u4e00\u79cd\u5728\u8bfb\u53d6\u65f6\u76f4\u63a5\u5c31\u628a\u5b57\u7b26\u4e32\u4e2d\u7684\u5143\u7d20\u8bfb\u5230\u5bc4\u5b58\u5668cl\u4e2d\uff0c\u800c\u7b2c\u4e8c\u79cd\u5219\u8981\u5148\u628a\u6307\u9488\u503c\u8bfb\u5230edx\u4e2d\uff0c\u5728\u6839\u636eedx\u8bfb\u53d6\u5b57\u7b26\uff0c\u663e\u7136\u6162\u4e86\u3002", "\u4e09\u3001 \u5c0f\u7ed3", "\n\u5806\u548c\u6808\u7684\u533a\u522b\u53ef\u4ee5\u7528\u5982\u4e0b\u7684\u6bd4\u55bb\u6765\u770b\u51fa\uff1a \u4f7f\u7528\u6808\u5c31\u8c61\u6211\u4eec\u53bb\u996d\u9986\u91cc\u5403\u996d\uff0c\u53ea\u7ba1\u70b9\u83dc(\u53d1\u51fa\u7533\u8bf7)\u3001\u4ed8\u94b1\u3001\u548c\u5403(\u4f7f\u7528)\uff0c\u5403\u9971\u4e86\u5c31\u8d70\uff0c\u4e0d\u5fc5\u7406\u4f1a\u5207\u83dc\u3001\u6d17\u83dc\u7b49\u51c6\u5907\u5de5\u4f5c\u548c\u6d17\u7897\u3001\u5237\u9505\u7b49\u626b\u5c3e\u5de5\u4f5c\uff0c\u4ed6\u7684\u597d\u5904\u662f\u5feb\u6377\uff0c\u4f46\u662f\u81ea\u7531\u5ea6\u5c0f\u3002\u4f7f\u7528\u5806\u5c31\u8c61\u662f\u81ea\u5df1\u52a8\u624b\u505a\u559c\u6b22\u5403\u7684\u83dc\u80b4\uff0c\u6bd4\u8f83\u9ebb\u70e6\uff0c\u4f46\u662f\u6bd4\u8f83\u7b26\u5408\u81ea\u5df1\u7684\u53e3\u5473\uff0c\u800c\u4e14\u81ea\u7531\u5ea6\u5927\u3002", "\n\u8fd8\u6709\u5c31\u662f\u51fd\u6570\u8c03\u7528\u65f6\u4f1a\u5728\u6808\u4e0a\u6709\u4e00\u7cfb\u5217\u7684\u4fdd\u7559\u73b0\u573a\u53ca\u4f20\u9012\u53c2\u6570\u7684\u64cd\u4f5c\u3002\u6808\u7684\u7a7a\u95f4\u5927\u5c0f\u6709\u9650\u5b9a\uff0cVC\u7684\u7f3a\u7701\u662f2M\u3002\u6808\u4e0d\u591f\u7528\u7684\u60c5\u51b5\u4e00\u822c\u662f\u7a0b\u5e8f\u4e2d\u5206\u914d\u4e86\u5927\u91cf\u6570\u7ec4\u548c\u9012\u5f52\u51fd\u6570\u5c42\u6b21\u592a\u6df1\u3002\u6709\u4e00\u70b9\u5fc5\u987b\u77e5\u9053\uff0c\u5f53\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\u5b8c\u8fd4\u56de\u540e\u5b83\u4f1a\u91ca\u653e\u8be5\u51fd\u6570\u4e2d\u6240\u6709\u7684\u6808\u7a7a\u95f4\u3002\u6808\u662f\u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u7ba1\u7406\u7684\uff0c\u4e0d\u7528\u4f60\u64cd\u5fc3\u3002\u5806\u662f\u52a8\u6001\u5206\u914d\u5185\u5b58\u7684\uff0c\u5e76\u4e14\u4f60\u53ef\u4ee5\u5206\u914d\u4f7f\u7528\u5f88\u5927\u7684\u5185\u5b58\u3002\u4f46\u662f\u7528\u4e0d\u597d\u4f1a\u4ea7\u751f\u5185\u5b58\u6cc4\u6f0f\u3002\u5e76\u4e14\u9891\u7e41\u5730malloc\u548cfree\u4f1a\u4ea7\u751f\u5185\u5b58\u788e\u7247(\u6709\u70b9\u7c7b\u4f3c\u78c1\u76d8\u788e\u7247)\uff0c\u56e0\u4e3aC\u5206\u914d\u52a8\u6001\u5185\u5b58\u65f6\u662f\u5bfb\u627e\u5339\u914d\u7684\u5185\u5b58\u7684\u3002\u800c\u7528\u6808\u5219\u4e0d\u4f1a\u4ea7\u751f\u788e\u7247\u3002\u5728\u6808\u4e0a\u5b58\u53d6\u6570\u636e\u6bd4\u901a\u8fc7\u6307\u9488\u5728\u5806\u4e0a\u5b58\u53d6\u6570\u636e\u5feb\u4e9b\u3002\u4e00\u822c\u5927\u5bb6\u8bf4\u7684\u5806\u6808\u548c\u6808\u662f\u4e00\u6837\u7684\uff0c\u5c31\u662f\u6808(stack)\uff0c\u800c\u8bf4\u5806\u65f6\u624d\u662f\u5806heap\u3002\u6808\u662f\u5148\u5165\u540e\u51fa\u7684\uff0c\u4e00\u822c\u662f\u7531\u9ad8\u5730\u5740\u5411\u4f4e\u5730\u5740\u751f\u957f\u3002", "c++\u5185\u5b58\u5206\u914d\u7684\u4e94\u79cd\u65b9\u6cd5", "\u5728C++\u4e2d\uff0c\u5185\u5b58\u5206\u62105\u4e2a\u533a\uff0c\u4ed6\u4eec\u5206\u522b\u662f\u5806\u3001\u6808\u3001\u81ea\u7531\u5b58\u50a8\u533a\u3001\u5168\u5c40/\u9759\u6001\u5b58\u50a8\u533a\u548c\u5e38\u91cf\u5b58\u50a8\u533a\u3002", "\u3000\u6808\uff0c\u5c31\u662f\u90a3\u4e9b\u7531\u7f16\u8bd1\u5668\u5728\u9700\u8981\u7684\u65f6\u5019\u5206\u914d\uff0c\u5728\u4e0d\u9700\u8981\u7684\u65f6\u5019\u81ea\u52a8\u6e05\u695a\u7684\u53d8\u91cf\u7684\u5b58\u50a8\u533a\u3002\u91cc\u9762\u7684\u53d8\u91cf\u901a\u5e38\u662f\u5c40\u90e8\u53d8\u91cf\u3001\u51fd\u6570\u53c2\u6570\u7b49\u3002", "\u3000\u5806\uff0c\u5c31\u662f\u90a3\u4e9b\u7531new\u5206\u914d\u7684\u5185\u5b58\u5757\uff0c\u4ed6\u4eec\u7684\u91ca\u653e\u7f16\u8bd1\u5668\u4e0d\u53bb\u7ba1\uff0c\u7531\u6211\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u53bb\u63a7\u5236\uff0c\u4e00\u822c\u4e00\u4e2anew\u5c31\u8981\u5bf9\u5e94\u4e00\u4e2adelete\u3002\u5982\u679c\u7a0b\u5e8f\u5458\u6ca1\u6709\u91ca\u653e\u6389\uff0c\u90a3\u4e48\u5728\u7a0b\u5e8f\u7ed3\u675f\u540e\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u56de\u6536\u3002", "\u3000\u81ea\u7531\u5b58\u50a8\u533a\uff0c\u5c31\u662f\u90a3\u4e9b\u7531malloc\u7b49\u5206\u914d\u7684\u5185\u5b58\u5757\uff0c\u4ed6\u548c\u5806\u662f\u5341\u5206\u76f8\u4f3c\u7684\uff0c\u4e0d\u8fc7\u5b83\u662f\u7528free\u6765\u7ed3\u675f\u81ea\u5df1\u7684\u751f\u547d\u7684\u3002", "\u3000\u5168\u5c40/\u9759\u6001\u5b58\u50a8\u533a\uff0c\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\u88ab\u5206\u914d\u5230\u540c\u4e00\u5757\u5185\u5b58\u4e2d\uff0c\u5728\u4ee5\u524d\u7684C\u8bed\u8a00\u4e2d\uff0c\u5168\u5c40\u53d8\u91cf\u53c8\u5206\u4e3a\u521d\u59cb\u5316\u7684\u548c\u672a\u521d\u59cb\u5316\u7684\uff0c\u5728C++\u91cc\u9762\u6ca1\u6709\u8fd9\u4e2a\u533a\u5206\u4e86\uff0c\u4ed6\u4eec\u5171\u540c\u5360\u7528\u540c\u4e00\u5757\u5185\u5b58\u533a\u3002", "\u3000\u5e38\u91cf\u5b58\u50a8\u533a\uff0c\u8fd9\u662f\u4e00\u5757\u6bd4\u8f83\u7279\u6b8a\u7684\u5b58\u50a8\u533a\uff0c\u4ed6\u4eec\u91cc\u9762\u5b58\u653e\u7684\u662f\u5e38\u91cf\uff0c\u4e0d\u5141\u8bb8\u4fee\u6539\uff08\u5f53\u7136\uff0c\u4f60\u8981\u901a\u8fc7\u975e\u6b63\u5f53\u624b\u6bb5\u4e5f\u53ef\u4ee5\u4fee\u6539\uff0c\u800c\u4e14\u65b9\u6cd5\u5f88\u591a\uff0c\u5728\u300aconst\u7684\u601d\u8003\u300b\u4e00\u6587\u4e2d\uff0c\u6211\u7ed9\u51fa\u4e866\u79cd\u65b9\u6cd5\uff09", "\u3000\u660e\u786e\u533a\u5206\u5806\u4e0e\u6808", "\u3000\u5728bbs\u4e0a\uff0c\u5806\u4e0e\u6808\u7684\u533a\u5206\u95ee\u9898\uff0c\u4f3c\u4e4e\u662f\u4e00\u4e2a\u6c38\u6052\u7684\u8bdd\u9898\uff0c\u7531\u6b64\u53ef\u89c1\uff0c\u521d\u5b66\u8005\u5bf9\u6b64\u5f80\u5f80\u662f\u6df7\u6dc6\u4e0d\u6e05\u7684\uff0c\u6240\u4ee5\u6211\u51b3\u5b9a\u62ff\u4ed6\u7b2c\u4e00\u4e2a\u5f00\u5200\u3002", "\u3000\u9996\u5148\uff0c\u6211\u4eec\u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff1a", "void f() { int* p=new int\uff3b5\uff3d; }", "\u3000\u8fd9\u6761\u77ed\u77ed\u7684\u4e00\u53e5\u8bdd\u5c31\u5305\u542b\u4e86\u5806\u4e0e\u6808\uff0c\u770b\u5230new\uff0c\u6211\u4eec\u9996\u5148\u5c31\u5e94\u8be5\u60f3\u5230\uff0c\u6211\u4eec\u5206\u914d\u4e86\u4e00\u5757\u5806\u5185\u5b58\uff0c\u90a3\u4e48\u6307\u9488p\u5462\uff1f\u4ed6\u5206\u914d\u7684\u662f\u4e00\u5757\u6808\u5185\u5b58\uff0c\u6240\u4ee5\u8fd9\u53e5\u8bdd\u7684\u610f\u601d\u5c31\u662f\uff1a\u5728\u6808\u5185\u5b58\u4e2d\u5b58\u653e\u4e86\u4e00\u4e2a\u6307\u5411\u4e00\u5757\u5806\u5185\u5b58\u7684\u6307\u9488p\u3002\u5728\u7a0b\u5e8f\u4f1a\u5148\u786e\u5b9a\u5728\u5806\u4e2d\u5206\u914d\u5185\u5b58\u7684\u5927\u5c0f\uff0c\u7136\u540e\u8c03\u7528operator new\u5206\u914d\u5185\u5b58\uff0c\u7136\u540e\u8fd4\u56de\u8fd9\u5757\u5185\u5b58\u7684\u9996\u5730\u5740\uff0c\u653e\u5165\u6808\u4e2d\uff0c\u4ed6\u5728VC6\u4e0b\u7684\u6c47\u7f16\u4ee3\u7801\u5982\u4e0b\uff1a", "00401028 push 14h", "\n0040102A call operator new (00401060)", "\n0040102F add esp,4", "\n00401032 mov dWord ptr \uff3bebp-8\uff3d,eax", "\n00401035 mov eax,dword ptr \uff3bebp-8\uff3d", "\n00401038 mov dword ptr \uff3bebp-4\uff3d,eax", "\u3000\u3000\u8fd9\u91cc\uff0c\u6211\u4eec\u4e3a\u4e86\u7b80\u5355\u5e76\u6ca1\u6709\u91ca\u653e\u5185\u5b58\uff0c\u90a3\u4e48\u8be5\u600e\u4e48\u53bb\u91ca\u653e\u5462\uff1f\u662fdelete p\u4e48\uff1f\u6fb3\uff0c\u9519\u4e86\uff0c\u5e94\u8be5\u662fdelete \uff3b\uff3dp\uff0c\u8fd9\u662f\u4e3a\u4e86\u544a\u8bc9\u7f16\u8bd1\u5668\uff1a\u6211\u5220\u9664\u7684\u662f\u4e00\u4e2a\u6570\u7ec4\uff0cVC6\u5c31\u4f1a\u6839\u636e\u76f8\u5e94\u7684Cookie\u4fe1\u606f\u53bb\u8fdb\u884c\u91ca\u653e\u5185\u5b58\u7684\u5de5\u4f5c\u3002", "\u3000\u3000\u597d\u4e86\uff0c\u6211\u4eec\u56de\u5230\u6211\u4eec\u7684\u4e3b\u9898\uff1a\u5806\u548c\u6808\u7a76\u7adf\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\u3000\u3000\u4e3b\u8981\u7684\u533a\u522b\u7531\u4ee5\u4e0b\u51e0\u70b9\uff1a", "\u3000\u30001\u3001\u7ba1\u7406\u65b9\u5f0f\u4e0d\u540c\uff1b", "\u3000\u30002\u3001\u7a7a\u95f4\u5927\u5c0f\u4e0d\u540c\uff1b", "\u3000\u30003\u3001\u80fd\u5426\u4ea7\u751f\u788e\u7247\u4e0d\u540c\uff1b", "\u3000\u30004\u3001\u751f\u957f\u65b9\u5411\u4e0d\u540c\uff1b", "\u3000\u30005\u3001\u5206\u914d\u65b9\u5f0f\u4e0d\u540c\uff1b", "\u3000\u30006\u3001\u5206\u914d\u6548\u7387\u4e0d\u540c\uff1b", "\u3000\u7ba1\u7406\u65b9\u5f0f\uff1a\u5bf9\u4e8e\u6808\u6765\u8bb2\uff0c\u662f\u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u7ba1\u7406\uff0c\u65e0\u9700\u6211\u4eec\u624b\u5de5\u63a7\u5236\uff1b\u5bf9\u4e8e\u5806\u6765\u8bf4\uff0c\u91ca\u653e\u5de5\u4f5c\u7531\u7a0b\u5e8f\u5458\u63a7\u5236\uff0c\u5bb9\u6613\u4ea7\u751fmemory leak\u3002", "\u3000\u7a7a\u95f4\u5927\u5c0f\uff1a\u4e00\u822c\u6765\u8bb2\u572832\u4f4d\u7cfb\u7edf\u4e0b\uff0c\u5806\u5185\u5b58\u53ef\u4ee5\u8fbe\u52304G\u7684\u7a7a\u95f4\uff0c\u4ece\u8fd9\u4e2a\u89d2\u5ea6\u6765\u770b\u5806\u5185\u5b58\u51e0\u4e4e\u662f\u6ca1\u6709\u4ec0\u4e48\u9650\u5236\u7684\u3002\u4f46\u662f\u5bf9\u4e8e\u6808\u6765\u8bb2\uff0c\u4e00\u822c\u662f\u6709\u4e00\u5b9a\u7684\u7a7a\u95f4\u5927\u5c0f\u7684\uff0c\u4f8b\u5982\uff0c\u5728VC6\u4e0b\u9762\uff0c\u9ed8\u8ba4\u7684\u6808\u7a7a\u95f4\u5927\u5c0f\u662f1M\uff08\u597d\u50cf\u662f\uff0c\u8bb0\u4e0d\u6e05\u695a\u4e86\uff09\u3002\u5f53\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u4fee\u6539\uff1a", "\u3000\u3000\u6253\u5f00\u5de5\u7a0b\uff0c\u4f9d\u6b21\u64cd\u4f5c\u83dc\u5355\u5982\u4e0b\uff1aProject->Setting->Link\uff0c\u5728Category \u4e2d\u9009\u4e2dOutput\uff0c\u7136\u540e\u5728Reserve\u4e2d\u8bbe\u5b9a\u5806\u6808\u7684\u6700\u5927\u503c\u548ccommit\u3002", "\u3000\u3000\u6ce8\u610f\uff1areserve\u6700\u5c0f\u503c\u4e3a4Byte\uff1bcommit\u662f\u4fdd\u7559\u5728\u865a\u62df\u5185\u5b58\u7684\u9875\u6587\u4ef6\u91cc\u9762\uff0c\u5b83\u8bbe\u7f6e\u7684\u8f83\u5927\u4f1a\u4f7f\u6808\u5f00\u8f9f\u8f83\u5927\u7684\u503c\uff0c\u53ef\u80fd\u589e\u52a0\u5185\u5b58\u7684\u5f00\u9500\u548c\u542f\u52a8\u65f6\u95f4\u3002", "\u3000\u3000\u788e\u7247\u95ee\u9898\uff1a\u5bf9\u4e8e\u5806\u6765\u8bb2\uff0c\u9891\u7e41\u7684new/delete\u52bf\u5fc5\u4f1a\u9020\u6210\u5185\u5b58\u7a7a\u95f4\u7684\u4e0d\u8fde\u7eed\uff0c\u4ece\u800c\u9020\u6210\u5927\u91cf\u7684\u788e\u7247\uff0c\u4f7f\u7a0b\u5e8f\u6548\u7387\u964d\u4f4e\u3002\u5bf9\u4e8e\u6808\u6765\u8bb2\uff0c\u5219\u4e0d\u4f1a\u5b58\u5728\u8fd9\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a\u6808\u662f\u5148\u8fdb\u540e\u51fa\u7684\u961f\u5217\uff0c\u4ed6\u4eec\u662f\u5982\u6b64\u7684\u4e00\u4e00\u5bf9\u5e94\uff0c\u4ee5\u81f3\u4e8e\u6c38\u8fdc\u90fd\u4e0d\u53ef\u80fd\u6709\u4e00\u4e2a\u5185\u5b58\u5757\u4ece\u6808\u4e2d\u95f4\u5f39\u51fa\uff0c\u5728\u4ed6\u5f39\u51fa\u4e4b\u524d\uff0c\u5728\u4ed6\u4e0a\u9762\u7684\u540e\u8fdb\u7684\u6808\u5185\u5bb9\u5df2\u7ecf\u88ab\u5f39\u51fa\uff0c\u8be6\u7ec6\u7684\u53ef\u4ee5\u53c2\u8003\u6570\u636e\u7ed3\u6784\uff0c\u8fd9\u91cc\u6211\u4eec\u5c31\u4e0d\u518d\u4e00\u4e00\u8ba8\u8bba\u4e86\u3002", "\u3000\u3000\u751f\u957f\u65b9\u5411\uff1a\u5bf9\u4e8e\u5806\u6765\u8bb2\uff0c\u751f\u957f\u65b9\u5411\u662f\u5411\u4e0a\u7684\uff0c\u4e5f\u5c31\u662f\u5411\u7740\u5185\u5b58\u5730\u5740\u589e\u52a0\u7684\u65b9\u5411\uff1b\u5bf9\u4e8e\u6808\u6765\u8bb2\uff0c\u5b83\u7684\u751f\u957f\u65b9\u5411\u662f\u5411\u4e0b\u7684\uff0c\u662f\u5411\u7740\u5185\u5b58\u5730\u5740\u51cf\u5c0f\u7684\u65b9\u5411\u589e\u957f\u3002", "\u3000\u3000\u5206\u914d\u65b9\u5f0f\uff1a\u5806\u90fd\u662f\u52a8\u6001\u5206\u914d\u7684\uff0c\u6ca1\u6709\u9759\u6001\u5206\u914d\u7684\u5806\u3002\u6808\u67092\u79cd\u5206\u914d\u65b9\u5f0f\uff1a\u9759\u6001\u5206\u914d\u548c\u52a8\u6001\u5206\u914d\u3002\u9759\u6001\u5206\u914d\u662f\u7f16\u8bd1\u5668\u5b8c\u6210\u7684\uff0c\u6bd4\u5982\u5c40\u90e8\u53d8\u91cf\u7684\u5206\u914d\u3002\u52a8\u6001\u5206\u914d\u7531alloca\u51fd\u6570\u8fdb\u884c\u5206\u914d\uff0c\u4f46\u662f\u6808\u7684\u52a8\u6001\u5206\u914d\u548c\u5806\u662f\u4e0d\u540c\u7684\uff0c\u4ed6\u7684\u52a8\u6001\u5206\u914d\u662f\u7531\u7f16\u8bd1\u5668\u8fdb\u884c\u91ca\u653e\uff0c\u65e0\u9700\u6211\u4eec\u624b\u5de5\u5b9e\u73b0\u3002", "\u3000\u3000\u5206\u914d\u6548\u7387\uff1a\u6808\u662f\u673a\u5668\u7cfb\u7edf\u63d0\u4f9b\u7684\u6570\u636e\u7ed3\u6784\uff0c\u8ba1\u7b97\u673a\u4f1a\u5728\u5e95\u5c42\u5bf9\u6808\u63d0\u4f9b\u652f\u6301\uff1a\u5206\u914d\u4e13\u95e8\u7684\u5bc4\u5b58\u5668\u5b58\u653e\u6808\u7684\u5730\u5740\uff0c\u538b\u6808\u51fa\u6808\u90fd\u6709\u4e13\u95e8\u7684\u6307\u4ee4\u6267\u884c\uff0c\u8fd9\u5c31\u51b3\u5b9a\u4e86\u6808\u7684\u6548\u7387\u6bd4\u8f83\u9ad8\u3002\u5806\u5219\u662fC/C++\u51fd\u6570\u5e93\u63d0\u4f9b\u7684\uff0c\u5b83\u7684\u673a\u5236\u662f\u5f88\u590d\u6742\u7684\uff0c\u4f8b\u5982\u4e3a\u4e86\u5206\u914d\u4e00\u5757\u5185\u5b58\uff0c\u5e93\u51fd\u6570\u4f1a\u6309\u7167\u4e00\u5b9a\u7684\u7b97\u6cd5\uff08\u5177\u4f53\u7684\u7b97\u6cd5\u53ef\u4ee5\u53c2\u8003\u6570\u636e\u7ed3\u6784/\u64cd\u4f5c\u7cfb\u7edf\uff09\u5728\u5806\u5185\u5b58\u4e2d\u641c\u7d22\u53ef\u7528\u7684\u8db3\u591f\u5927\u5c0f\u7684\u7a7a\u95f4\uff0c\u5982\u679c\u6ca1\u6709\u8db3\u591f\u5927\u5c0f\u7684\u7a7a\u95f4\uff08\u53ef\u80fd\u662f\u7531\u4e8e\u5185\u5b58\u788e\u7247\u592a\u591a\uff09\uff0c\u5c31\u6709\u53ef\u80fd\u8c03\u7528\u7cfb\u7edf\u529f\u80fd\u53bb\u589e\u52a0\u7a0b\u5e8f\u6570\u636e\u6bb5\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u8fd9\u6837\u5c31\u6709\u673a\u4f1a\u5206\u5230\u8db3\u591f\u5927\u5c0f\u7684\u5185\u5b58\uff0c\u7136\u540e\u8fdb\u884c\u8fd4\u56de\u3002\u663e\u7136\uff0c\u5806\u7684\u6548\u7387\u6bd4\u6808\u8981\u4f4e\u5f97\u591a\u3002", "\u3000\u3000\u4ece\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u5806\u548c\u6808\u76f8\u6bd4\uff0c\u7531\u4e8e\u5927\u91cfnew/delete\u7684\u4f7f\u7528\uff0c\u5bb9\u6613\u9020\u6210\u5927\u91cf\u7684\u5185\u5b58\u788e\u7247\uff1b\u7531\u4e8e\u6ca1\u6709\u4e13\u95e8\u7684\u7cfb\u7edf\u652f\u6301\uff0c\u6548\u7387\u5f88\u4f4e\uff1b\u7531\u4e8e\u53ef\u80fd\u5f15\u53d1\u7528\u6237\u6001\u548c\u6838\u5fc3\u6001\u7684\u5207\u6362\uff0c\u5185\u5b58\u7684\u7533\u8bf7\uff0c\u4ee3\u4ef7\u53d8\u5f97\u66f4\u52a0\u6602\u8d35\u3002\u6240\u4ee5\u6808\u5728\u7a0b\u5e8f\u4e2d\u662f\u5e94\u7528\u6700\u5e7f\u6cdb\u7684\uff0c\u5c31\u7b97\u662f\u51fd\u6570\u7684\u8c03\u7528\u4e5f\u5229\u7528\u6808\u53bb\u5b8c\u6210\uff0c\u51fd\u6570\u8c03\u7528\u8fc7\u7a0b\u4e2d\u7684\u53c2\u6570\uff0c\u8fd4\u56de\u5730\u5740\uff0cEBP\u548c\u5c40\u90e8\u53d8\u91cf\u90fd\u91c7\u7528\u6808\u7684\u65b9\u5f0f\u5b58\u653e\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u63a8\u8350\u5927\u5bb6\u5c3d\u91cf\u7528\u6808\uff0c\u800c\u4e0d\u662f\u7528\u5806\u3002", "\u3000\u3000\u867d\u7136\u6808\u6709\u5982\u6b64\u4f17\u591a\u7684\u597d\u5904\uff0c\u4f46\u662f\u7531\u4e8e\u548c\u5806\u76f8\u6bd4\u4e0d\u662f\u90a3\u4e48\u7075\u6d3b\uff0c\u6709\u65f6\u5019\u5206\u914d\u5927\u91cf\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u8fd8\u662f\u7528\u5806\u597d\u4e00\u4e9b\u3002", "\u3000\u3000\u65e0\u8bba\u662f\u5806\u8fd8\u662f\u6808\uff0c\u90fd\u8981\u9632\u6b62\u8d8a\u754c\u73b0\u8c61\u7684\u53d1\u751f\uff08\u9664\u975e\u4f60\u662f\u6545\u610f\u4f7f\u5176\u8d8a\u754c\uff09\uff0c\u56e0\u4e3a\u8d8a\u754c\u7684\u7ed3\u679c\u8981\u4e48\u662f\u7a0b\u5e8f\u5d29\u6e83\uff0c\u8981\u4e48\u662f\u6467\u6bc1\u7a0b\u5e8f\u7684\u5806\u3001\u6808\u7ed3\u6784\uff0c\u4ea7\u751f\u4ee5\u60f3\u4e0d\u5230\u7684\u7ed3\u679c,\u5c31\u7b97\u662f\u5728\u4f60\u7684\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0c\u6ca1\u6709\u53d1\u751f\u4e0a\u9762\u7684\u95ee\u9898\uff0c\u4f60\u8fd8\u662f\u8981\u5c0f\u5fc3\uff0c\u8bf4\u4e0d\u5b9a\u4ec0\u4e48\u65f6\u5019\u5c31\u5d29\u6389\uff0c\u90a3\u65f6\u5019debug\u53ef\u662f\u76f8\u5f53\u56f0\u96be\u7684\uff1a\uff09", "\u00a0"], "title": "C++\u548c\u64cd\u4f5c\u7cfb\u7edf\u9762\u8bd5\u95ee\u9898\u5206\u7c7b"},
{"contents": ["\u7b2c\u4e00\u6b65\uff1a\u81ea\u6211\u4ecb\u7ecd\uff1a\u4ecb\u7ecd\u4e00\u4e0b\u5b66\u6821\u3001\u4e13\u4e1a\u60c5\u51b5\uff0c\u5728\u5b66\u6821\u5b66\u4e60\u7684\u8bfe\u7a0b\uff1b\u6982\u51b5\u4e00\u4e0b\u81ea\u5df1\u7684\u76f8\u5173\u60c5\u51b5\uff0c\u6027\u683c\u3001\u5b66\u4e60\u3001\u7231\u597d\u7b49\u2026\u53ef\u4ee5\u81ea\u7531\u53d1\u6325\u3002", "\u7b2c\u4e8c\u6b65\uff1a\u9762\u8bd5\u5b98\u4f1a\u63d0\u51e0\u4e2a\u4e13\u4e1a\u6027\u7684\u95ee\u9898\uff0c", "\u4f8b\u5982\uff1a", "1\u3001\u00a0 C/C++\u7684\u533a\u522b", "2\u3001\u00a0 \u91cd\u8f7d\u548c\u8986\u76d6", "3\u3001\u00a0 \u6307\u9488\u548c\u5f15\u7528", "4\u3001\u00a0 \u4e8c\u53c9\u6811\u904d\u5386\u7b97\u6cd5", "5\u3001\u00a0 Linux\u76f8\u5173\u64cd\u4f5c", "6\u3001\u00a0 SQL\u8bed\u53e5", "\u7b2c\u4e09\u6b65\uff1a", "1\u3001\u00a0 \u613f\u4e0d\u613f\u610f\u52a0\u73ed", "2\u3001\u00a0 \u613f\u4e0d\u613f\u610f\u51fa\u5dee", "3\u3001\u00a0 \u5b66\u4e60\u65b0\u6280\u672f", "\u7b2c\u56db\u6b65\uff1a", "\u9762\u8bd5\u5b98\u5411\u4f60\u4ecb\u7ecd\u4ee5\u540e\u4ece\u4e8b\u5de5\u4f5c\u7684\u76f8\u5173\u60c5\u51b5\u3002"], "title": "\u9762\u8bd5\u76f8\u5173\u95ee\u9898 \u2013 \u63d0\u4f9b\u7ed9\u9762\u8bd5\u8005\u7684C++\u9762\u8bd5\u9898\u6a21\u677f\uff08\u7248\u672c1.0\uff09"},
{"contents": ["\u9762\u8bd5\u98981\uff1a\u53d8\u91cf\u7684\u58f0\u660e\u548c\u5b9a\u4e49\u6709\u4ec0\u4e48\u533a\u522b", "\n\u4e3a\u53d8\u91cf\u5206\u914d\u5730\u5740\u548c\u5b58\u50a8\u7a7a\u95f4\u7684\u79f0\u4e3a\u5b9a\u4e49\uff0c\u4e0d\u5206\u914d\u5730\u5740\u7684\u79f0\u4e3a\u58f0\u660e\u3002\u4e00\u4e2a\u53d8\u91cf\u53ef\u4ee5\u5728\u591a\u4e2a\u5730\u65b9\u58f0\u660e\uff0c\u4f46\u662f\u53ea\u5728\u4e00\u4e2a\u5730\u65b9\u5b9a\u4e49\u3002\u52a0\u5165extern\u4fee\u9970\u7684\u662f\u53d8\u91cf\u7684\u58f0\u660e\uff0c\u8bf4\u660e\u6b64\u53d8\u91cf\u5c06\u5728\u6587\u4ef6\u4ee5\u5916\u6216\u5728\u6587\u4ef6\u540e\u9762\u90e8\u5206\u5b9a\u4e49\u3002", "\n\u8bf4\u660e\uff1a\u5f88\u591a\u65f6\u5019\u4e00\u4e2a\u53d8\u91cf\uff0c\u53ea\u662f\u58f0\u660e\u4e0d\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff0c\u76f4\u5230\u5177\u4f53\u4f7f\u7528\u65f6\u624d\u521d\u59cb\u5316\uff0c\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff0c\u5982\u5916\u90e8\u53d8\u91cf\u3002", "\n\u9762\u8bd5\u98982\uff1a\u5199\u51fabool \u3001int\u3001 float\u3001\u6307\u9488\u53d8\u91cf\u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684if\u8bed\u53e5", "\nbool\u578b\u6570\u636e\uff1a if( flag ) { A; } else { B\uff1b }", "\nint\u578b\u6570\u636e\uff1a if( 0 != flag ) { A; } else { B\uff1b }", "\n\u6307\u9488\u578b\u6570\uff1a if( NULL == flag ) { A; } else { B\uff1b }", "\nfloat\u578b\u6570\u636e\uff1a if ( ( flag >= NORM ) && ( flag <= NORM ) ) { A\uff1b", "\n2", "\n}", "\n\u6ce8\u610f\uff1a\u5e94\u7279\u522b\u6ce8\u610f\u5728int\u3001\u6307\u9488\u578b\u53d8\u91cf\u548c\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684\u65f6\u5019\uff0c\u628a\u201c\u96f6\u503c\u201d\u653e\u5728\u5de6\u8fb9\uff0c\u8fd9\u6837\u5f53\u628a\u201c==\u201d\u8bef\u5199\u6210\u201c=\u201d\u65f6\uff0c\u7f16\u8bd1\u5668\u53ef\u4ee5\u62a5\u9519\uff0c\u5426\u5219\u8fd9\u79cd\u903b\u8f91\u9519\u8bef\u4e0d\u5bb9\u6613\u53d1\u73b0\uff0c\u5e76\u4e14\u53ef\u80fd\u5bfc\u81f4\u5f88\u4e25\u91cd\u7684\u540e\u679c\u3002", "\n\u9762\u8bd5\u98983\uff1asizeof\u548cstrlen\u7684\u533a\u522b", "\nsizeof\u548cstrlen\u6709\u4ee5\u4e0b\u533a\u522b\uff1a", "\n\uf071 sizeof\u662f\u4e00\u4e2a\u64cd\u4f5c\u7b26\uff0cstrlen\u662f\u5e93\u51fd\u6570\u3002", "\n\uf071 sizeof\u7684\u53c2\u6570\u53ef\u4ee5\u662f\u6570\u636e\u7684\u7c7b\u578b\uff0c\u4e5f\u53ef\u4ee5\u662f\u53d8\u91cf\uff0c\u800cstrlen\u53ea\u80fd\u4ee5\u7ed3\u5c3e\u4e3a\u2018\\0\u2018\u7684\u5b57\u7b26\u4e32\u4f5c\u53c2\u6570\u3002", "\n\uf071 \u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u65f6\u5c31\u8ba1\u7b97\u51fa\u4e86sizeof\u7684\u7ed3\u679c\u3002\u800cstrlen\u51fd\u6570\u5fc5\u987b\u5728\u8fd0\u884c\u65f6\u624d\u80fd\u8ba1\u7b97\u51fa\u6765\u3002\u5e76\u4e14sizeof\u8ba1\u7b97\u7684\u662f\u6570\u636e\u7c7b\u578b\u5360\u5185\u5b58\u7684\u5927\u5c0f\uff0c\u800cstrlen\u8ba1\u7b97\u7684\u662f\u5b57\u7b26\u4e32\u5b9e\u9645\u7684\u957f\u5ea6\u3002", "\n\uf071 \u6570\u7ec4\u505asizeof\u7684\u53c2\u6570\u4e0d\u9000\u5316\uff0c\u4f20\u9012\u7ed9strlen\u5c31\u9000\u5316\u4e3a\u6307\u9488\u4e86\u3002", "\n\u6ce8\u610f\uff1a\u6709\u4e9b\u662f\u64cd\u4f5c\u7b26\u770b\u8d77\u6765\u50cf\u662f\u51fd\u6570\uff0c\u800c\u6709\u4e9b\u51fd\u6570\u540d\u770b\u8d77\u6765\u53c8\u50cf\u64cd\u4f5c\u7b26\uff0c\u8fd9\u7c7b\u5bb9\u6613\u6df7\u6dc6\u7684\u540d\u79f0\u4e00\u5b9a\u8981\u52a0\u4ee5\u533a\u5206\uff0c\u5426\u5219\u9047\u5230\u6570\u7ec4\u540d\u8fd9\u7c7b\u7279\u6b8a\u6570\u636e\u7c7b\u578b\u4f5c\u53c2\u6570\u65f6\u5c31\u5f88\u5bb9\u6613\u51fa\u9519\u3002\u6700\u5bb9\u6613\u6df7\u6dc6\u4e3a\u51fd\u6570\u7684\u64cd\u4f5c\u7b26\u5c31\u662fsizeof\u3002", "\n\u9762\u8bd5\u98984\uff1aC\u8bed\u8a00\u7684\u5173\u952e\u5b57 static \u548c C++ \u7684\u5173\u952e\u5b57 static \u6709\u4ec0\u4e48\u533a\u522b", "\n\u5728C\u4e2dstatic\u7528\u6765\u4fee\u9970\u5c40\u90e8\u9759\u6001\u53d8\u91cf\u548c\u5916\u90e8\u9759\u6001\u53d8\u91cf\u3001\u51fd\u6570\u3002\u800cC++\u4e2d\u9664\u4e86\u4e0a\u8ff0\u529f\u80fd\u5916\uff0c\u8fd8\u7528\u6765\u5b9a\u4e49\u7c7b\u7684\u6210\u5458\u53d8\u91cf\u548c\u51fd\u6570\u3002\u5373\u9759\u6001\u6210\u5458\u548c\u9759\u6001\u6210\u5458\u51fd\u6570\u3002", "\n\u6ce8\u610f\uff1a\u7f16\u7a0b\u65f6static\u7684\u8bb0\u5fc6\u6027\uff0c\u548c\u5168\u5c40\u6027\u7684\u7279\u70b9\u53ef\u4ee5\u8ba9\u5728\u4e0d\u540c\u65f6\u671f\u8c03\u7528\u7684\u51fd\u6570\u8fdb\u884c\u901a\u4fe1\uff0c\u4f20\u9012\u4fe1\u606f\uff0c\u800cC++\u7684\u9759\u6001\u6210\u5458\u5219\u53ef\u4ee5\u5728\u591a\u4e2a\u5bf9\u8c61\u5b9e\u4f8b\u95f4\u8fdb\u884c\u901a\u4fe1\uff0c\u4f20\u9012\u4fe1\u606f\u3002", "\n\u9762\u8bd5\u98985\uff1a\uff23\u4e2d\u7684malloc\u548c\uff23\uff0b\uff0b\u4e2d\u7684new\u6709\u4ec0\u4e48\u533a\u522b", "\nmalloc\u548cnew\u6709\u4ee5\u4e0b\u4e0d\u540c\uff1a", "\n\uff081\uff09new\u3001delete \u662f\u64cd\u4f5c\u7b26\uff0c\u53ef\u4ee5\u91cd\u8f7d\uff0c\u53ea\u80fd\u5728C++\u4e2d\u4f7f\u7528\u3002", "\n\uff082\uff09malloc\u3001free\u662f\u51fd\u6570\uff0c\u53ef\u4ee5\u8986\u76d6\uff0cC\u3001C++\u4e2d\u90fd\u53ef\u4ee5\u4f7f\u7528\u3002", "\n\uff083\uff09new \u53ef\u4ee5\u8c03\u7528\u5bf9\u8c61\u7684\u6784\u9020\u51fd\u6570\uff0c\u5bf9\u5e94\u7684delete\u8c03\u7528\u76f8\u5e94\u7684\u6790\u6784\u51fd\u6570\u3002", "\n\uff084\uff09malloc\u4ec5\u4ec5\u5206\u914d\u5185\u5b58\uff0cfree\u4ec5\u4ec5\u56de\u6536\u5185\u5b58\uff0c\u5e76\u4e0d\u6267\u884c\u6784\u9020\u548c\u6790\u6784\u51fd\u6570", "\n\uff085\uff09new\u3001delete\u8fd4\u56de\u7684\u662f\u67d0\u79cd\u6570\u636e\u7c7b\u578b\u6307\u9488\uff0cmalloc\u3001free\u8fd4\u56de\u7684\u662fvoid\u6307\u9488\u3002", "\n\u6ce8\u610f\uff1amalloc\u7533\u8bf7\u7684\u5185\u5b58\u7a7a\u95f4\u8981\u7528free\u91ca\u653e\uff0c\u800cnew\u7533\u8bf7\u7684\u5185\u5b58\u7a7a\u95f4\u8981\u7528delete\u91ca\u653e\uff0c\u4e0d\u8981\u6df7\u7528\u3002\u56e0\u4e3a\u4e24\u8005\u5b9e\u73b0\u7684\u673a\u7406\u4e0d\u540c\u3002", "\n\u9762\u8bd5\u98986\uff1a\u5199\u4e00\u4e2a\u201c\u6807\u51c6\u201d\u5b8fMIN #define min(a,b)((a)<=(b)?(a):(b))", "\n\u6ce8\u610f\uff1a\u5728\u8c03\u7528\u65f6\u4e00\u5b9a\u8981\u6ce8\u610f\u8fd9\u4e2a\u5b8f\u5b9a\u4e49\u7684\u526f\u4f5c\u7528\uff0c\u5982\u4e0b\u8c03\u7528\uff1a ((++*p)<=(x)?(++*p):(x)\u3002", "\np\u6307\u9488\u5c31\u81ea\u52a0\u4e86\u4e24\u6b21\uff0c\u8fdd\u80cc\u4e86MIN\u7684\u672c\u610f\u3002", "\n3", "\n\u9762\u8bd5\u98987\uff1a\u4e00\u4e2a\u6307\u9488\u53ef\u4ee5\u662fvolatile\u5417", "\n\u53ef\u4ee5\uff0c\u56e0\u4e3a\u6307\u9488\u548c\u666e\u901a\u53d8\u91cf\u4e00\u6837\uff0c\u6709\u65f6\u4e5f\u6709\u53d8\u5316\u7a0b\u5e8f\u7684\u4e0d\u53ef\u63a7\u6027\u3002\u5e38\u89c1\u4f8b\uff1a\u5b50\u4e2d\u65ad\u670d\u52a1\u5b50\u7a0b\u5e8f\u4fee\u6539\u4e00\u4e2a\u6307\u5411\u4e00\u4e2abuffer\u7684\u6307\u9488\u65f6\uff0c\u5fc5\u987b\u7528volatile\u6765\u4fee\u9970\u8fd9\u4e2a\u6307\u9488\u3002", "\n\u8bf4\u660e\uff1a\u6307\u9488\u662f\u4e00\u79cd\u666e\u901a\u7684\u53d8\u91cf\uff0c\u4ece\u8bbf\u95ee\u4e0a\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c\u4e8e\u5176\u4ed6\u53d8\u91cf\u7684\u7279\u6027\u3002\u5176\u4fdd\u5b58\u7684\u6570\u503c\u662f\u4e2a\u6574\u578b\u6570\u636e\uff0c\u548c\u6574\u578b\u53d8\u91cf\u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u4e2a\u6574\u578b\u6570\u636e\u6307\u5411\u7684\u662f\u4e00\u6bb5\u5185\u5b58\u5730\u5740\u3002", "\n\u9762\u8bd5\u98988\uff1aa\u548c&a\u6709\u4ec0\u4e48\u533a\u522b", "\n\u8bf7\u5199\u51fa\u4ee5\u4e0b\u4ee3\u7801\u7684\u6253\u5370\u7ed3\u679c\uff0c\u4e3b\u8981\u76ee\u7684\u662f\u8003\u5bdfa\u548c&a\u7684\u533a\u522b\u3002 #include<stdio.h> void main( void ) { int a[5]={1,2,3,4,5}; int *ptr=(int *)(&a+1); printf(\u201c%d,%d\u201d,*(a+1),*(ptr-1)); return; }", "\n\u8f93\u51fa\u7ed3\u679c\uff1a2\uff0c5\u3002", "\n\u6ce8\u610f\uff1a\u6570\u7ec4\u540da\u53ef\u4ee5\u4f5c\u6570\u7ec4\u7684\u9996\u5730\u5740\uff0c\u800c&a\u662f\u6570\u7ec4\u7684\u6307\u9488\u3002\u601d\u8003\uff0c\u5c06\u539f\u5f0f\u7684int *ptr=(int *)(&a+1);\u6539\u4e3aint *ptr=(int *)(a+1);\u65f6\u8f93\u51fa\u7ed3\u679c\u5c06\u662f\u4ec0\u4e48\u5462\uff1f", "\n\u9762\u8bd5\u98989\uff1a\u7b80\u8ff0C\u3001C++\u7a0b\u5e8f\u7f16\u8bd1\u7684\u5185\u5b58\u5206\u914d\u60c5\u51b5", "\nC\u3001C++\u4e2d\u5185\u5b58\u5206\u914d\u65b9\u5f0f\u53ef\u4ee5\u5206\u4e3a\u4e09\u79cd\uff1a", "\n\uff081\uff09\u4ece\u9759\u6001\u5b58\u50a8\u533a\u57df\u5206\u914d\uff1a", "\n\u5185\u5b58\u5728\u7a0b\u5e8f\u7f16\u8bd1\u65f6\u5c31\u5df2\u7ecf\u5206\u914d\u597d\uff0c\u8fd9\u5757\u5185\u5b58\u5728\u7a0b\u5e8f\u7684\u6574\u4e2a\u8fd0\u884c\u671f\u95f4\u90fd\u5b58\u5728\u3002\u901f\u5ea6\u5feb\u3001\u4e0d\u5bb9\u6613\u51fa\u9519\uff0c\u56e0\u4e3a\u6709\u7cfb\u7edf\u4f1a\u5584\u540e\u3002\u4f8b\u5982\u5168\u5c40\u53d8\u91cf\uff0cstatic\u53d8\u91cf\u7b49\u3002", "\n\uff082\uff09\u5728\u6808\u4e0a\u5206\u914d\uff1a", "\n\u5728\u6267\u884c\u51fd\u6570\u65f6\uff0c\u51fd\u6570\u5185\u5c40\u90e8\u53d8\u91cf\u7684\u5b58\u50a8\u5355\u5143\u90fd\u5728\u6808\u4e0a\u521b\u5efa\uff0c\u51fd\u6570\u6267\u884c\u7ed3\u675f\u65f6\u8fd9\u4e9b\u5b58\u50a8\u5355\u5143\u81ea\u52a8\u88ab\u91ca\u653e\u3002\u6808\u5185\u5b58\u5206\u914d\u8fd0\u7b97\u5185\u7f6e\u4e8e\u5904\u7406\u5668\u7684\u6307\u4ee4\u96c6\u4e2d\uff0c\u6548\u7387\u5f88\u9ad8\uff0c\u4f46\u662f\u5206\u914d\u7684\u5185\u5b58\u5bb9\u91cf\u6709\u9650\u3002", "\n\uff083\uff09\u4ece\u5806\u4e0a\u5206\u914d\uff1a", "\n\u5373\u52a8\u6001\u5185\u5b58\u5206\u914d\u3002\u7a0b\u5e8f\u5728\u8fd0\u884c\u7684\u65f6\u5019\u7528malloc\u6216new\u7533\u8bf7\u4efb\u610f\u5927\u5c0f\u7684\u5185\u5b58\uff0c\u7a0b\u5e8f\u5458\u81ea\u5df1\u8d1f\u8d23\u5728\u4f55\u65f6\u7528free\u6216delete\u91ca\u653e\u5185\u5b58\u3002\u52a8\u6001\u5185\u5b58\u7684\u751f\u5b58\u671f\u7531\u7a0b\u5e8f\u5458\u51b3\u5b9a\uff0c\u4f7f\u7528\u975e\u5e38\u7075\u6d3b\u3002\u5982\u679c\u5728\u5806\u4e0a\u5206\u914d\u4e86\u7a7a\u95f4\uff0c\u5c31\u6709\u8d23\u4efb\u56de\u6536\u5b83\uff0c\u5426\u5219\u8fd0\u884c\u7684\u7a0b\u5e8f\u4f1a\u51fa\u73b0\u5185\u5b58\u6cc4\u6f0f\uff0c\u53e6\u5916\u9891\u7e41\u5730\u5206\u914d\u548c\u91ca\u653e\u4e0d\u540c\u5927\u5c0f\u7684\u5806\u7a7a\u95f4\u5c06\u4f1a\u4ea7\u751f\u5806\u5185\u788e\u5757\u3002", "\n\u4e00\u4e2aC\u3001C++\u7a0b\u5e8f\u7f16\u8bd1\u65f6\u5185\u5b58\u5206\u4e3a5\u5927\u5b58\u50a8\u533a\uff1a\u5806\u533a\u3001\u6808\u533a\u3001\u5168\u5c40\u533a\u3001\u6587\u5b57\u5e38\u91cf\u533a\u3001\u7a0b\u5e8f\u4ee3\u7801\u533a\u3002", "\n4", "\n\u9762\u8bd5\u989810\uff1a\u7b80\u8ff0strcpy\u3001sprintf\u4e0ememcpy\u7684\u533a\u522b", "\n\u4e09\u8005\u4e3b\u8981\u6709\u4ee5\u4e0b\u4e0d\u540c\u4e4b\u5904\uff1a", "\n\uff081\uff09\u64cd\u4f5c\u5bf9\u8c61\u4e0d\u540c\uff0cstrcpy\u7684\u4e24\u4e2a\u64cd\u4f5c\u5bf9\u8c61\u5747\u4e3a\u5b57\u7b26\u4e32\uff0csprintf\u7684\u64cd\u4f5c\u6e90\u5bf9\u8c61\u53ef\u4ee5\u662f\u591a\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u76ee\u7684\u64cd\u4f5c\u5bf9\u8c61\u662f\u5b57\u7b26\u4e32\uff0cmemcpy \u7684\u4e24\u4e2a\u5bf9\u8c61\u5c31\u662f\u4e24\u4e2a\u4efb\u610f\u53ef\u64cd\u4f5c\u7684\u5185\u5b58\u5730\u5740\uff0c\u5e76\u4e0d\u9650\u4e8e\u4f55\u79cd\u6570\u636e\u7c7b\u578b\u3002", "\n\uff082\uff09\u6267\u884c\u6548\u7387\u4e0d\u540c\uff0cmemcpy\u6700\u9ad8\uff0cstrcpy\u6b21\u4e4b\uff0csprintf\u7684\u6548\u7387\u6700\u4f4e\u3002", "\n\uff083\uff09\u5b9e\u73b0\u529f\u80fd\u4e0d\u540c\uff0cstrcpy\u4e3b\u8981\u5b9e\u73b0\u5b57\u7b26\u4e32\u53d8\u91cf\u95f4\u7684\u62f7\u8d1d\uff0csprintf\u4e3b\u8981\u5b9e\u73b0\u5176\u4ed6\u6570\u636e\u7c7b\u578b\u683c\u5f0f\u5230\u5b57\u7b26\u4e32\u7684\u8f6c\u5316\uff0cmemcpy\u4e3b\u8981\u662f\u5185\u5b58\u5757\u95f4\u7684\u62f7\u8d1d\u3002", "\n\u8bf4\u660e\uff1astrcpy\u3001sprintf\u4e0ememcpy\u90fd\u53ef\u4ee5\u5b9e\u73b0\u62f7\u8d1d\u7684\u529f\u80fd\uff0c\u4f46\u662f\u9488\u5bf9\u7684\u5bf9\u8c61\u4e0d\u540c\uff0c\u6839\u636e\u5b9e\u9645\u9700\u6c42\uff0c\u6765\u9009\u62e9\u5408\u9002\u7684\u51fd\u6570\u5b9e\u73b0\u62f7\u8d1d\u529f\u80fd\u3002", "\n\u9762\u8bd5\u989811\uff1a\u8bbe\u7f6e\u5730\u5740\u4e3a0x67a9\u7684\u6574\u578b\u53d8\u91cf\u7684\u503c\u4e3a0xaa66 int *ptr; ptr = (int *)0x67a9; *ptr = 0xaa66;", "\n\u8bf4\u660e\uff1a\u8fd9\u9053\u9898\u5c31\u662f\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u7684\u5178\u578b\u4f8b\u5b50\uff0c\u65e0\u8bba\u5728\u4ec0\u4e48\u5e73\u53f0\u5730\u5740\u957f\u5ea6\u548c\u6574\u578b\u6570\u636e\u7684\u957f\u5ea6\u662f\u4e00\u6837\u7684\uff0c\u5373\u4e00\u4e2a\u6574\u578b\u6570\u636e\u53ef\u4ee5\u5f3a\u5236\u8f6c\u6362\u6210\u5730\u5740\u6307\u9488\u7c7b\u578b\uff0c\u53ea\u8981\u6709\u610f\u4e49\u5373\u53ef\u3002", "\n\u9762\u8bd5\u989812\uff1a\u9762\u5411\u5bf9\u8c61\u7684\u4e09\u5927\u7279\u5f81", "\n\u9762\u5411\u5bf9\u8c61\u7684\u4e09\u5927\u7279\u5f81\u662f\u5c01\u88c5\u6027\u3001\u7ee7\u627f\u6027\u548c\u591a\u6001\u6027\uff1a", "\n\uf071 \u5c01\u88c5\u6027\uff1a\u5c06\u5ba2\u89c2\u4e8b\u7269\u62bd\u8c61\u6210\u7c7b\uff0c\u6bcf\u4e2a\u7c7b\u5bf9\u81ea\u8eab\u7684\u6570\u636e\u548c\u65b9\u6cd5\u5b9e\u884cprotection\uff08private\uff0c protected\uff0cpublic\uff09\u3002", "\n\uf071 \u7ee7\u627f\u6027\uff1a\u5e7f\u4e49\u7684\u7ee7\u627f\u6709\u4e09\u79cd\u5b9e\u73b0\u5f62\u5f0f\uff1a\u5b9e\u73b0\u7ee7\u627f\uff08\u4f7f\u7528\u57fa\u7c7b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u800c\u65e0\u9700\u989d\u5916\u7f16\u7801\u7684\u80fd\u529b)\u3001\u53ef\u89c6\u7ee7\u627f(\u5b50\u7a97\u4f53\u4f7f\u7528\u7236\u7a97\u4f53\u7684\u5916\u89c2\u548c\u5b9e\u73b0\u4ee3\u7801)\u3001\u63a5\u53e3\u7ee7\u627f(\u4ec5\u4f7f\u7528\u5c5e\u6027\u548c\u65b9\u6cd5,\u5b9e\u73b0\u6ede\u540e\u5230\u5b50\u7c7b\u5b9e\u73b0)\u3002", "\n\uf071 \u591a\u6001\u6027\uff1a\u662f\u5c06\u7236\u7c7b\u5bf9\u8c61\u8bbe\u7f6e\u6210\u4e3a\u548c\u4e00\u4e2a\u6216\u66f4\u591a\u5b83\u7684\u5b50\u5bf9\u8c61\u76f8\u7b49\u7684\u6280\u672f\u3002\u7528\u5b50\u7c7b\u5bf9\u8c61\u7ed9\u7236\u7c7b\u5bf9\u8c61\u8d4b\u503c\u4e4b\u540e\uff0c\u7236\u7c7b\u5bf9\u8c61\u5c31\u53ef\u4ee5\u6839\u636e\u5f53\u524d\u8d4b\u503c\u7ed9\u5b83\u7684\u5b50\u5bf9\u8c61\u7684\u7279\u6027\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u8fd0\u4f5c\u3002", "\n\u8bf4\u660e\uff1a\u9762\u5411\u5bf9\u8c61\u7684\u4e09\u4e2a\u7279\u5f81\u662f\u5b9e\u73b0\u9762\u5411\u5bf9\u8c61\u6280\u672f\u7684\u5173\u952e\uff0c\u6bcf\u4e00\u4e2a\u7279\u5f81\u7684\u76f8\u5173\u6280\u672f\u90fd\u975e\u5e38\u7684\u590d\u6742\uff0c\u7a0b\u5e8f\u5458\u5e94\u8be5\u591a\u770b\u3001\u591a\u7ec3\u3002", "\n\u9762\u8bd5\u989813\uff1aC++\u7684\u7a7a\u7c7b\u6709\u54ea\u4e9b\u6210\u5458\u51fd\u6570", "\n\uf071 \u7f3a\u7701\u6784\u9020\u51fd\u6570\u3002", "\n\uf071 \u7f3a\u7701\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002", "\n\uf071 \u7f3a\u7701\u6790\u6784\u51fd\u6570\u3002", "\n\uf071 \u7f3a\u7701\u8d4b\u503c\u8fd0\u7b97\u7b26\u3002", "\n\uf071 \u7f3a\u7701\u53d6\u5740\u8fd0\u7b97\u7b26\u3002", "\n\uf071 \u7f3a\u7701\u53d6\u5740\u8fd0\u7b97\u7b26 const\u3002", "\n\u6ce8\u610f\uff1a\u6709\u4e9b\u4e66\u4e0a\u53ea\u662f\u7b80\u5355\u7684\u4ecb\u7ecd\u4e86\u524d\u56db\u4e2a\u51fd\u6570\u3002\u6ca1\u6709\u63d0\u53ca\u540e\u9762\u8fd9\u4e24\u4e2a\u51fd\u6570\u3002\u4f46\u540e\u9762\u8fd9\u4e24\u4e2a\u51fd\u6570\u4e5f\u662f\u7a7a\u7c7b\u7684\u9ed8\u8ba4\u51fd\u6570\u3002\u53e6\u5916\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u53ea\u6709\u5f53\u5b9e\u9645\u4f7f\u7528\u8fd9\u4e9b\u51fd\u6570\u7684\u65f6\u5019\uff0c\u7f16\u8bd1\u5668\u624d\u4f1a\u53bb\u5b9a\u4e49\u5b83\u4eec\u3002", "\n5", "\n\u9762\u8bd5\u989814\uff1a\u8c08\u8c08\u4f60\u5bf9\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u8d4b\u503c\u8fd0\u7b97\u7b26\u7684\u8ba4\u8bc6", "\n\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u8d4b\u503c\u8fd0\u7b97\u7b26\u91cd\u8f7d\u6709\u4ee5\u4e0b\u4e24\u4e2a\u4e0d\u540c\u4e4b\u5904\uff1a", "\n\uff081\uff09\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u751f\u6210\u65b0\u7684\u7c7b\u5bf9\u8c61\uff0c\u800c\u8d4b\u503c\u8fd0\u7b97\u7b26\u4e0d\u80fd\u3002", "\n\uff082\uff09\u7531\u4e8e\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u662f\u76f4\u63a5\u6784\u9020\u4e00\u4e2a\u65b0\u7684\u7c7b\u5bf9\u8c61\uff0c\u6240\u4ee5\u5728\u521d\u59cb\u5316\u8fd9\u4e2a\u5bf9\u8c61\u4e4b\u524d\u4e0d\u7528\u68c0\u9a8c\u6e90\u5bf9\u8c61\u662f\u5426\u548c\u65b0\u5efa\u5bf9\u8c61\u76f8\u540c\u3002\u800c\u8d4b\u503c\u8fd0\u7b97\u7b26\u5219\u9700\u8981\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u53e6\u5916\u8d4b\u503c\u8fd0\u7b97\u4e2d\u5982\u679c\u539f\u6765\u7684\u5bf9\u8c61\u4e2d\u6709\u5185\u5b58\u5206\u914d\u8981\u5148\u628a\u5185\u5b58\u91ca\u653e\u6389", "\n\u6ce8\u610f\uff1a\u5f53\u6709\u7c7b\u4e2d\u6709\u6307\u9488\u7c7b\u578b\u7684\u6210\u5458\u53d8\u91cf\u65f6\uff0c\u4e00\u5b9a\u8981\u91cd\u5199\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u8d4b\u503c\u8fd0\u7b97\u7b26\uff0c\u4e0d\u8981\u4f7f\u7528\u9ed8\u8ba4\u7684\u3002", "\n\u9762\u8bd5\u989815\uff1a\u7528C++\u8bbe\u8ba1\u4e00\u4e2a\u4e0d\u80fd\u88ab\u7ee7\u627f\u7684\u7c7b template <typename T> class A { friend T; private: A() {} ~A() {} }; class B : virtual public A<B> { public: B() {} ~B() {} }; class C : virtual public B { public: C() {} ~C() {} }; void main( void ) { B b; //C c; return; }", "\n\u6ce8\u610f\uff1a\u6784\u9020\u51fd\u6570\u662f\u7ee7\u627f\u5b9e\u73b0\u7684\u5173\u952e\uff0c\u6bcf\u6b21\u5b50\u7c7b\u5bf9\u8c61\u6784\u9020\u65f6\uff0c\u9996\u5148\u8c03\u7528\u7684\u662f\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u7136\u540e\u624d\u662f\u81ea\u5df1\u7684\u3002", "\n\u9762\u8bd5\u989816\uff1a\u8bbf\u95ee\u57fa\u7c7b\u7684\u79c1\u6709\u865a\u51fd\u6570", "\n\u5199\u51fa\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\uff1a #include <iostream.h> class A", "\n6", "\n{ virtual void g() { cout << \u201cA::g\u201d << endl; } private: virtual void f() { cout << \u201cA::f\u201d << endl; } }; class B : public A { void g() { cout << \u201cB::g\u201d << endl; } virtual void h() { cout << \u201cB::h\u201d << endl; } }; typedef void( *Fun )( void ); void main() { B b; Fun pFun; for(int i = 0 ; i < 3; i++) { pFun = ( Fun )*( ( int* ) * ( int* )( &b ) + i ); pFun(); } }", "\n\u8f93\u51fa\u7ed3\u679c\uff1a B::g A::f B::h", "\n\u6ce8\u610f\uff1a\u672c\u9898\u4e3b\u8981\u8003\u5bdf\u4e86\u9762\u8bd5\u8005\u5bf9\u865a\u51fd\u6570\u7684\u7406\u89e3\u7a0b\u5ea6\u3002\u4e00\u4e2a\u5bf9\u865a\u51fd\u6570\u4e0d\u4e86\u89e3\u7684\u4eba\u5f88\u96be\u6b63\u786e\u7684\u505a\u51fa\u672c\u9898\u3002\u5728\u5b66\u4e60\u9762\u5411\u5bf9\u8c61\u7684\u591a\u6001\u6027\u65f6\u4e00\u5b9a\u8981\u6df1\u523b\u7406\u89e3\u865a\u51fd\u6570\u8868\u7684\u5de5\u4f5c\u539f\u7406\u3002", "\n\u9762\u8bd5\u989817\uff1a\u7b80\u8ff0\u7c7b\u6210\u5458\u51fd\u6570\u7684\u91cd\u5199\u3001\u91cd\u8f7d\u548c\u9690\u85cf\u7684\u533a\u522b", "\n\uff081\uff09\u91cd\u5199\u548c\u91cd\u8f7d\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u70b9\u4e0d\u540c\u3002", "\n\uf071 \u8303\u56f4\u7684\u533a\u522b\uff1a\u88ab\u91cd\u5199\u7684\u548c\u91cd\u5199\u7684\u51fd\u6570\u5728\u4e24\u4e2a\u7c7b\u4e2d\uff0c\u800c\u91cd\u8f7d\u548c\u88ab\u91cd\u8f7d\u7684\u51fd\u6570\u5728\u540c\u4e00\u4e2a\u7c7b\u4e2d\u3002", "\n\uf071 \u53c2\u6570\u7684\u533a\u522b\uff1a\u88ab\u91cd\u5199\u51fd\u6570\u548c\u91cd\u5199\u51fd\u6570\u7684\u53c2\u6570\u5217\u8868\u4e00\u5b9a\u76f8\u540c\uff0c\u800c\u88ab\u91cd\u8f7d\u51fd\u6570\u548c\u91cd\u8f7d\u51fd\u6570\u7684\u53c2\u6570\u5217\u8868\u4e00\u5b9a\u4e0d\u540c\u3002", "\n\uf071 virtual\u7684\u533a\u522b\uff1a\u91cd\u5199\u7684\u57fa\u7c7b\u4e2d\u88ab\u91cd\u5199\u7684\u51fd\u6570\u5fc5\u987b\u8981\u6709virtual\u4fee\u9970\uff0c\u800c\u91cd\u8f7d\u51fd\u6570\u548c\u88ab\u91cd\u8f7d\u51fd\u6570\u53ef\u4ee5\u88ab", "\n7", "\nvirtual\u4fee\u9970\uff0c\u4e5f\u53ef\u4ee5\u6ca1\u6709\u3002", "\n\uff082\uff09\u9690\u85cf\u548c\u91cd\u5199\u3001\u91cd\u8f7d\u6709\u4ee5\u4e0b\u51e0\u70b9\u4e0d\u540c\u3002", "\n\uf071 \u4e0e\u91cd\u8f7d\u7684\u8303\u56f4\u4e0d\u540c\uff1a\u548c\u91cd\u5199\u4e00\u6837\uff0c\u9690\u85cf\u51fd\u6570\u548c\u88ab\u9690\u85cf\u51fd\u6570\u4e0d\u5728\u540c\u4e00\u4e2a\u7c7b\u4e2d\u3002", "\n\uf071 \u53c2\u6570\u7684\u533a\u522b\uff1a\u9690\u85cf\u51fd\u6570\u548c\u88ab\u9690\u85cf\u7684\u51fd\u6570\u7684\u53c2\u6570\u5217\u8868\u53ef\u4ee5\u76f8\u540c\uff0c\u4e5f\u53ef\u4e0d\u540c\uff0c\u4f46\u662f\u51fd\u6570\u540d\u80af\u5b9a\u8981\u76f8\u540c\u3002\u5f53\u53c2\u6570\u4e0d\u76f8\u540c\u65f6\uff0c\u65e0\u8bba\u57fa\u7c7b\u4e2d\u7684\u53c2\u6570\u662f\u5426\u88abvirtual\u4fee\u9970\uff0c\u57fa\u7c7b\u7684\u51fd\u6570\u90fd\u662f\u88ab\u9690\u85cf\uff0c\u800c\u4e0d\u662f\u88ab\u91cd\u5199\u3002", "\n\u8bf4\u660e\uff1a\u867d\u7136\u91cd\u8f7d\u548c\u8986\u76d6\u90fd\u662f\u5b9e\u73b0\u591a\u6001\u7684\u57fa\u7840\uff0c\u4f46\u662f\u4e24\u8005\u5b9e\u73b0\u7684\u6280\u672f\u5b8c\u5168\u4e0d\u76f8\u540c\uff0c\u8fbe\u5230\u7684\u76ee\u7684\u4e5f\u662f\u5b8c\u5168\u4e0d\u540c\u7684\uff0c\u8986\u76d6\u662f\u52a8\u6001\u6001\u7ed1\u5b9a\u7684\u591a\u6001\uff0c\u800c\u91cd\u8f7d\u662f\u9759\u6001\u7ed1\u5b9a\u7684\u591a\u6001\u3002", "\n\u9762\u8bd5\u989818\uff1a\u7b80\u8ff0\u591a\u6001\u5b9e\u73b0\u7684\u539f\u7406", "\n\u7f16\u8bd1\u5668\u53d1\u73b0\u4e00\u4e2a\u7c7b\u4e2d\u6709\u865a\u51fd\u6570\uff0c\u4fbf\u4f1a\u7acb\u5373\u4e3a\u6b64\u7c7b\u751f\u6210\u865a\u51fd\u6570\u8868 vtable\u3002\u865a\u51fd\u6570\u8868\u7684\u5404\u8868\u9879\u4e3a\u6307\u5411\u5bf9\u5e94\u865a\u51fd\u6570\u7684\u6307\u9488\u3002\u7f16\u8bd1\u5668\u8fd8\u4f1a\u5728\u6b64\u7c7b\u4e2d\u9690\u542b\u63d2\u5165\u4e00\u4e2a\u6307\u9488vptr\uff08\u5bf9vc\u7f16\u8bd1\u5668\u6765\u8bf4\uff0c\u5b83\u63d2\u5728\u7c7b\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\uff09\u6307\u5411\u865a\u51fd\u6570\u8868\u3002\u8c03\u7528\u6b64\u7c7b\u7684\u6784\u9020\u51fd\u6570\u65f6\uff0c\u5728\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d\uff0c\u7f16\u8bd1\u5668\u4f1a\u9690\u542b\u6267\u884cvptr\u4e0evtable\u7684\u5173\u8054\u4ee3\u7801\uff0c\u5c06vptr\u6307\u5411\u5bf9\u5e94\u7684vtable\uff0c\u5c06\u7c7b\u4e0e\u6b64\u7c7b\u7684vtable\u8054\u7cfb\u4e86\u8d77\u6765\u3002\u53e6\u5916\u5728\u8c03\u7528\u7c7b\u7684\u6784\u9020\u51fd\u6570\u65f6\uff0c\u6307\u5411\u57fa\u7840\u7c7b\u7684\u6307\u9488\u6b64\u65f6\u5df2\u7ecf\u53d8\u6210\u6307\u5411\u5177\u4f53\u7684\u7c7b\u7684this\u6307\u9488\uff0c\u8fd9\u6837\u4f9d\u9760\u6b64this\u6307\u9488\u5373\u53ef\u5f97\u5230\u6b63\u786e\u7684vtable\uff0c\u3002\u5982\u6b64\u624d\u80fd\u771f\u6b63\u4e0e\u51fd\u6570\u4f53\u8fdb\u884c\u8fde\u63a5\uff0c\u8fd9\u5c31\u662f\u52a8\u6001\u8054\u7f16\uff0c\u5b9e\u73b0\u591a\u6001\u7684\u57fa\u672c\u539f\u7406\u3002", "\n\u6ce8\u610f\uff1a\u4e00\u5b9a\u8981\u533a\u5206\u865a\u51fd\u6570\uff0c\u7eaf\u865a\u51fd\u6570\u3001\u865a\u62df\u7ee7\u627f\u7684\u5173\u7cfb\u548c\u533a\u522b\u3002\u7262\u8bb0\u865a\u51fd\u6570\u5b9e\u73b0\u539f\u7406\uff0c\u56e0\u4e3a\u591a\u6001C++\u9762\u8bd5\u7684\u91cd\u8981\u8003\u70b9\u4e4b\u4e00\uff0c\u800c\u865a\u51fd\u6570\u662f\u5b9e\u73b0\u591a\u6001\u7684\u57fa\u7840\u3002", "\n\u9762\u8bd5\u989819\uff1a\u94fe\u8868\u548c\u6570\u7ec4\u6709\u4ec0\u4e48\u533a\u522b", "\n\u6570\u7ec4\u548c\u94fe\u8868\u6709\u4ee5\u4e0b\u51e0\u70b9\u4e0d\u540c\uff1a", "\n\uff081\uff09\u5b58\u50a8\u5f62\u5f0f\uff1a\u6570\u7ec4\u662f\u4e00\u5757\u8fde\u7eed\u7684\u7a7a\u95f4\uff0c\u58f0\u660e\u65f6\u5c31\u8981\u786e\u5b9a\u957f\u5ea6\u3002\u94fe\u8868\u662f\u4e00\u5757\u53ef\u4e0d\u8fde\u7eed\u7684\u52a8\u6001\u7a7a\u95f4\uff0c\u957f\u5ea6\u53ef\u53d8\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u8981\u4fdd\u5b58\u76f8\u90bb\u7ed3\u70b9\u6307\u9488\u3002", "\n\uff082\uff09\u6570\u636e\u67e5\u627e\uff1a\u6570\u7ec4\u7684\u7ebf\u6027\u67e5\u627e\u901f\u5ea6\u5feb\uff0c\u67e5\u627e\u64cd\u4f5c\u76f4\u63a5\u4f7f\u7528\u504f\u79fb\u5730\u5740\u3002\u94fe\u8868\u9700\u8981\u6309\u987a\u5e8f\u68c0\u7d22\u7ed3\u70b9\uff0c\u6548\u7387\u4f4e\u3002", "\n\uff083\uff09\u6570\u636e\u63d2\u5165\u6216\u5220\u9664\uff1a\u94fe\u8868\u53ef\u4ee5\u5feb\u901f\u63d2\u5165\u548c\u5220\u9664\u7ed3\u70b9\uff0c\u800c\u6570\u7ec4\u5219\u53ef\u80fd\u9700\u8981\u5927\u91cf\u6570\u636e\u79fb\u52a8\u3002", "\n\uff084\uff09\u8d8a\u754c\u95ee\u9898\uff1a\u94fe\u8868\u4e0d\u5b58\u5728\u8d8a\u754c\u95ee\u9898\uff0c\u6570\u7ec4\u6709\u8d8a\u754c\u95ee\u9898\u3002", "\n\u8bf4\u660e\uff1a\u5728\u9009\u62e9\u6570\u7ec4\u6216\u94fe\u8868\u6570\u636e\u7ed3\u6784\u65f6\uff0c\u4e00\u5b9a\u8981\u6839\u636e\u5b9e\u9645\u9700\u8981\u8fdb\u884c\u9009\u62e9\u3002\u6570\u7ec4\u4fbf\u4e8e\u67e5\u8be2\uff0c\u94fe\u8868\u4fbf\u4e8e\u63d2\u5165\u5220\u9664\u3002\u6570\u7ec4\u8282\u7701\u7a7a\u95f4\u4f46\u662f\u957f\u5ea6\u56fa\u5b9a\uff0c\u94fe\u8868\u867d\u7136\u53d8\u957f\u4f46\u662f\u5360\u4e86\u66f4\u591a\u7684\u5b58\u50a8\u7a7a\u95f4\u3002", "\n\u9762\u8bd5\u989820\uff1a\u600e\u6837\u628a\u4e00\u4e2a\u5355\u94fe\u8868\u53cd\u5e8f", "\n\uff081\uff09\u53cd\u8f6c\u4e00\u4e2a\u94fe\u8868\u3002\u5faa\u73af\u7b97\u6cd5\u3002 List reverse(List n) { if(!n) //\u5224\u65ad\u94fe\u8868\u662f\u5426\u4e3a\u7a7a\uff0c\u4e3a\u7a7a\u5373\u9000\u51fa\u3002 { return n; } list cur = n.next; //\u4fdd\u5b58\u5934\u7ed3\u70b9\u7684\u4e0b\u4e2a\u7ed3\u70b9 list pre = n; //\u4fdd\u5b58\u5934\u7ed3\u70b9 list tmp;", "\n8", "\npre.next = null; //\u5934\u7ed3\u70b9\u7684\u6307\u9488\u6307\u7a7a\uff0c\u8f6c\u6362\u540e\u53d8\u5c3e\u7ed3\u70b9 while ( NULL != cur.next ) //\u5faa\u73af\u76f4\u5230cur.next\u4e3a\u7a7a { tmp = cur; //\u5b9e\u73b0\u5982\u56fe10.3\u2014\u56fe10.5\u6240\u793a tmp.next = pre pre = tmp; cur = cur.next; } return tmp; //f\u8fd4\u56de\u5934\u6307\u9488 }", "\n\uff082\uff09\u53cd\u8f6c\u4e00\u4e2a\u94fe\u8868\u3002\u9012\u5f52\u7b97\u6cd5\u3002 List *reverse( List *oldList, List *newHead = NULL ) { List *next = oldList-> next; //\u8bb0\u5f55\u4e0a\u6b21\u7ffb\u8f6c\u540e\u7684\u94fe\u8868 oldList-> next = newHead; //\u5c06\u5f53\u524d\u7ed3\u70b9\u63d2\u5165\u5230\u7ffb\u8f6c\u540e\u94fe\u8868\u7684\u5f00\u5934 newHead = oldList; //\u9012\u5f52\u5904\u7406\u5269\u4f59\u7684\u94fe\u8868 return ( next==NULL )? newHead: reverse( t, newHead ); }", "\n\u8bf4\u660e\uff1a\u5faa\u73af\u7b97\u6cd5\u5c31\u662f\u56fe10.2\u2014\u56fe10.5\u7684\u79fb\u52a8\u8fc7\u7a0b\uff0c\u6bd4\u8f83\u597d\u7406\u89e3\u548c\u60f3\u5230\u3002\u9012\u5f52\u7b97\u6cd5\u7684\u8bbe\u8ba1\u867d\u6709\u4e00\u70b9\u96be\u5ea6\uff0c\u4f46\u662f\u7406\u89e3\u4e86\u5faa\u73af\u7b97\u6cd5\uff0c\u518d\u8bbe\u8ba1\u9012\u5f52\u7b97\u6cd5\u5c31\u7b80\u5355\u591a\u4e86\u3002", "\n\u9762\u8bd5\u9898\u00a021\uff1a\u7b80\u8ff0\u961f\u5217\u548c\u6808\u7684\u5f02\u540c", "\n\u961f\u5217\u548c\u6808\u90fd\u662f\u7ebf\u6027\u5b58\u50a8\u7ed3\u6784\uff0c\u4f46\u662f\u4e24\u8005\u7684\u63d2\u5165\u548c\u5220\u9664\u6570\u636e\u7684\u64cd\u4f5c\u4e0d\u540c\uff0c\u961f\u5217\u662f\u201c\u5148\u8fdb\u5148\u51fa\u201d\uff0c\u6808\u662f\u201c\u540e\u8fdb\u5148\u51fa\u201d\u3002", "\n\u6ce8\u610f\uff1a\u533a\u522b\u6808\u533a\u548c\u5806\u533a\u3002\u5806\u533a\u7684\u5b58\u53d6\u662f\u201c\u987a\u5e8f\u968f\u610f\u201d\uff0c\u800c\u6808\u533a\u662f\u201c\u540e\u8fdb\u5148\u51fa\u201d\u3002\u6808\u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u5206\u914d\u91ca\u653e \uff0c\u5b58\u653e\u51fd\u6570\u7684\u53c2\u6570\u503c\uff0c\u5c40\u90e8\u53d8\u91cf\u7684\u503c\u7b49\u3002\u5176\u64cd\u4f5c\u65b9\u5f0f\u7c7b\u4f3c\u4e8e\u6570\u636e\u7ed3\u6784\u4e2d\u7684\u6808\u3002\u5806\u4e00\u822c\u7531\u7a0b\u5e8f\u5458\u5206\u914d\u91ca\u653e\uff0c \u82e5\u7a0b\u5e8f\u5458\u4e0d\u91ca\u653e\uff0c\u7a0b\u5e8f\u7ed3\u675f\u65f6\u53ef\u80fd\u7531OS\u56de\u6536\u3002\u5206\u914d\u65b9\u5f0f\u7c7b\u4f3c\u4e8e\u94fe\u8868\u3002", "\n\u5b83\u4e0e\u672c\u9898\u4e2d\u7684\u5806\u548c\u6808\u662f\u4e24\u56de\u4e8b\u3002\u5806\u6808\u53ea\u662f\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u800c\u5806\u533a\u548c\u6808\u533a\u662f\u7a0b\u5e8f\u7684\u4e0d\u540c\u5185\u5b58\u5b58\u50a8\u533a\u57df\u3002", "\n\u9762\u8bd5\u989822\uff1a\u80fd\u5426\u7528\u4e24\u4e2a\u6808\u5b9e\u73b0\u4e00\u4e2a\u961f\u5217\u7684\u529f\u80fd", "\n\u7ed3\u70b9\u7ed3\u6784\u4f53\uff1a typedef struct node { int data; node *next; }node,*LinkStack;", "\n\u521b\u5efa\u7a7a\u6808\uff1a LinkStack CreateNULLStack( LinkStack &S) { S = (LinkStack)malloc( sizeof( node ) ); //\u7533\u8bf7\u65b0\u7ed3\u70b9 if( NULL == S) { printf(\u201cFail to malloc a new node.\\n\u201d);", "\n9", "\nreturn NULL; } S->data = 0; //\u521d\u59cb\u5316\u65b0\u7ed3\u70b9 S->next = NULL; return S; }", "\n\u6808\u7684\u63d2\u5165\u51fd\u6570\uff1a LinkStack Push( LinkStack &S, int data) { if( NULL == S) //\u68c0\u9a8c\u6808 { printf(\u201cThere no node in stack!\u201d); return NULL; } LinkStack p = NULL; p = (LinkStack)malloc( sizeof( node ) ); //\u7533\u8bf7\u65b0\u7ed3\u70b9 if( NULL == p) { printf(\u201cFail to malloc a new node.\\n\u201d); return S; } if( NULL == S->next) { p->next = NULL; } else { p->next = S->next; } p->data = data; //\u521d\u59cb\u5316\u65b0\u7ed3\u70b9 S->next = p; //\u63d2\u5165\u65b0\u7ed3\u70b9 return S; }", "\n\u51fa\u6808\u51fd\u6570\uff1a node Pop( LinkStack &S) { node temp; temp.data = 0; temp.next = NULL; if( NULL == S) //\u68c0\u9a8c\u6808 { printf(\u201cThere no node in stack!\u201d); return temp; } temp = *S;", "\n10", "\nif( S->next == NULL ) { printf(\u201cThe stack is NULL,can\u2019t pop!\\n\u201d); return temp; } LinkStack p = S ->next; //\u8282\u70b9\u51fa\u6808 S->next = S->next->next; temp = *p; free( p ); p = NULL; return temp; }", "\n\u53cc\u6808\u5b9e\u73b0\u961f\u5217\u7684\u5165\u961f\u51fd\u6570\uff1a LinkStack StackToQueuPush( LinkStack &S, int data) { node n; LinkStack S1 = NULL; CreateNULLStack( S1 ); //\u521b\u5efa\u7a7a\u6808 while( NULL != S->next ) //S\u51fa\u6808\u5165S1 { n = Pop( S ); Push( S1, n.data ); } Push( S1, data ); //\u65b0\u7ed3\u70b9\u5165\u6808 while( NULL != S1->next ) //S1\u51fa\u6808\u5165S { n = Pop( S1 ); Push( S, n.data ); } return S; }", "\n\u8bf4\u660e\uff1a\u7528\u4e24\u4e2a\u6808\u80fd\u591f\u5b9e\u73b0\u4e00\u4e2a\u961f\u5217\u7684\u529f\u80fd\uff0c\u90a3\u7528\u4e24\u4e2a\u961f\u5217\u80fd\u5426\u5b9e\u73b0\u4e00\u4e2a\u961f\u5217\u7684\u529f\u80fd\u5462\uff1f\u7ed3\u679c\u662f\u5426\u5b9a\u7684\uff0c\u56e0\u4e3a\u6808\u662f\u5148\u8fdb\u540e\u51fa\uff0c\u5c06\u4e24\u4e2a\u6808\u8fde\u5728\u4e00\u8d77\uff0c\u5c31\u662f\u5148\u8fdb\u5148\u51fa\u3002\u800c\u961f\u5217\u662f\u73b0\u5148\u8fdb\u5148\u51fa\uff0c\u65e0\u8bba\u591a\u5c11\u4e2a\u8fde\u5728\u4e00\u8d77\u90fd\u662f\u5148\u8fdb\u5148\u51fa\uff0c\u800c\u65e0\u6cd5\u5b9e\u73b0\u5148\u8fdb\u540e\u51fa\u3002", "\n\u9762\u8bd5\u989823\uff1a\u8ba1\u7b97\u4e00\u9897\u4e8c\u53c9\u6811\u7684\u6df1\u5ea6", "\n\u6df1\u5ea6\u7684\u8ba1\u7b97\u51fd\u6570\uff1a int depth(BiTree T) { if(!T) return 0; //\u5224\u65ad\u5f53\u524d\u7ed3\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u7ed3\u70b9", "\n11", "\nint d1= depth(T->lchild); //\u6c42\u5f53\u524d\u7ed3\u70b9\u7684\u5de6\u5b69\u5b50\u6811\u7684\u6df1\u5ea6 int d2= depth(T->rchild); //\u6c42\u5f53\u524d\u7ed3\u70b9\u7684\u53f3\u5b69\u5b50\u6811\u7684\u6df1\u5ea6 return (d1>d2?d1:d2)+1; }", "\n\u6ce8\u610f\uff1a\u6839\u636e\u4e8c\u53c9\u6811\u7684\u7ed3\u6784\u7279\u70b9\uff0c\u5f88\u591a\u7b97\u6cd5\u90fd\u53ef\u4ee5\u7528\u9012\u5f52\u7b97\u6cd5\u6765\u5b9e\u73b0\u3002", "\n\u9762\u8bd5\u989824\uff1a\u7f16\u7801\u5b9e\u73b0\u76f4\u63a5\u63d2\u5165\u6392\u5e8f", "\n\u76f4\u63a5\u63d2\u5165\u6392\u5e8f\u7f16\u7a0b\u5b9e\u73b0\u5982\u4e0b\uff1a #include<iostream.h> void main( void ) { int ARRAY[10] = { 0, 6, 3, 2, 7, 5, 4, 9, 1, 8 }; int i,j; for( i = 0; i < 10; i++) { cout<<ARRAY<<\u201d \u201c; } cout<<endl; for( i = 2; i <= 10; i++ ) //\u5c06ARRAY[2],\u2026,ARRAY[n]\u4f9d\u6b21\u6309\u5e8f\u63d2\u5165 { if(ARRAY < ARRAY[i-1]) //\u5982\u679cARRAY\u5927\u4e8e\u4e00\u5207\u6709\u5e8f\u7684\u6570\u503c\uff0c //ARRAY\u5c06\u4fdd\u6301\u539f\u4f4d\u4e0d\u52a8 { ARRAY[0] = ARRAY; //\u5c06ARRAY[0]\u770b\u505a\u662f\u54e8\u5175,\u662fARRAY\u7684\u526f\u672c j = i \u2013 1; do{ //\u4ece\u53f3\u5411\u5de6\u5728\u6709\u5e8f\u533aARRAY[1\uff0e\uff0ei-1]\u4e2d //\u67e5\u627eARRAY\u7684\u63d2\u5165\u4f4d\u7f6e ARRAY[j+1] = ARRAY[j]; //\u5c06\u6570\u503c\u5927\u4e8eARRAY\u8bb0\u5f55\u540e\u79fb j\u2013 ; }while( ARRAY[0] < ARRAY[j] ); ARRAY[j+1]=ARRAY[0]; //ARRAY\u63d2\u5165\u5230\u6b63\u786e\u7684\u4f4d\u7f6e\u4e0a } } for( i = 0; i < 10; i++) { cout<<ARRAY<<\u201d \u201c; } cout<<endl; }", "\n12", "\n\u6ce8\u610f\uff1a\u6240\u6709\u4e3a\u7b80\u5316\u8fb9\u754c\u6761\u4ef6\u800c\u5f15\u5165\u7684\u9644\u52a0\u7ed3\u70b9\uff08\u5143\u7d20\uff09\u5747\u53ef\u79f0\u4e3a\u54e8\u5175\u3002\u5f15\u5165\u54e8\u5175\u540e\u4f7f\u5f97\u67e5\u627e\u5faa\u73af\u6761\u4ef6\u7684\u65f6\u95f4\u5927\u7ea6\u51cf\u5c11\u4e86\u4e00\u534a\uff0c\u5bf9\u4e8e\u8bb0\u5f55\u6570\u8f83\u5927\u7684\u6587\u4ef6\u8282\u7ea6\u7684\u65f6\u95f4\u5c31\u76f8\u5f53\u53ef\u89c2\u3002\u7c7b\u4f3c\u4e8e\u6392\u5e8f\u8fd9\u6837\u4f7f\u7528\u9891\u7387\u975e\u5e38\u9ad8\u7684\u7b97\u6cd5\uff0c\u8981\u5c3d\u53ef\u80fd\u5730\u51cf\u5c11\u5176\u8fd0\u884c\u65f6\u95f4\u3002\u6240\u4ee5\u4e0d\u80fd\u628a\u4e0a\u8ff0\u7b97\u6cd5\u4e2d\u7684\u54e8\u5175\u89c6\u4e3a\u96d5\u866b\u5c0f\u6280\u3002", "\n\u9762\u8bd5\u989825\uff1a\u7f16\u7801\u5b9e\u73b0\u5192\u6ce1\u6392\u5e8f", "\n\u5192\u6ce1\u6392\u5e8f\u7f16\u7a0b\u5b9e\u73b0\u5982\u4e0b\uff1a #include <stdio.h> #define LEN 10 //\u6570\u7ec4\u957f\u5ea6 void main( void ) { int ARRAY[10] = { 0, 6, 3, 2, 7, 5, 4, 9, 1, 8 }; //\u5f85\u6392\u5e8f\u6570\u7ec4 printf( \u201c\\n\u201d ); for( int a = 0; a < LEN; a++ ) //\u6253\u5370\u6570\u7ec4\u5185\u5bb9 { printf( \u201c%d \u201c, ARRAY[a] ); } int i = 0; int j = 0; bool isChange; //\u8bbe\u5b9a\u4ea4\u6362\u6807\u5fd7 for( i = 1; i < LEN; i++ ) { //\u6700\u591a\u505aLEN-1\u8d9f\u6392\u5e8f isChange = 0; //\u672c\u8d9f\u6392\u5e8f\u5f00\u59cb\u524d,\u4ea4\u6362\u6807\u5fd7\u5e94\u4e3a\u5047 for( j = LEN-1; j >= i; j\u2013 ) //\u5bf9\u5f53\u524d\u65e0\u5e8f\u533aARRAY[i..LEN]\u81ea\u4e0b\u5411\u4e0a\u626b\u63cf { if( ARRAY[j+1] < ARRAY[j] ) { //\u4ea4\u6362\u8bb0\u5f55 ARRAY[0] = ARRAY[j+1]; //ARRAY[0]\u4e0d\u662f\u54e8\u5175,\u4ec5\u505a\u6682\u5b58\u5355\u5143 ARRAY[j+1] = ARRAY[j]; ARRAY[j] = ARRAY[0]; isChange = 1; //\u53d1\u751f\u4e86\u4ea4\u6362,\u6545\u5c06\u4ea4\u6362\u6807\u5fd7\u7f6e\u4e3a\u771f } } printf( \u201c\\n\u201d ); for( a = 0; a < LEN; a++) //\u6253\u5370\u672c\u6b21\u6392\u5e8f\u540e\u6570\u7ec4\u5185\u5bb9 { printf( \u201c%d \u201c, ARRAY[a] ); } if( !isChange ) //\u672c\u8d9f\u6392\u5e8f\u672a\u53d1\u751f\u4ea4\u6362,\u63d0\u524d\u7ec8\u6b62\u7b97\u6cd5 { break; } } printf( \u201c\\n\u201d ); return; }", "\n13", "\n\u9762\u8bd5\u989826\uff1a\u7f16\u7801\u5b9e\u73b0\u76f4\u63a5\u9009\u62e9\u6392\u5e8f #include\u201dstdio.h\u201d #define LEN 9 void main( void ) { int ARRAY[LEN]={ 5, 6, 8, 2, 4, 1, 9, 3, 7 }; //\u5f85\u5e8f\u6570\u7ec4 printf(\u201cBefore sorted:\\n\u201d); for( int m = 0; m < LEN; m++ ) //\u6253\u5370\u6392\u5e8f\u524d\u6570\u7ec4 { printf( \u201c%d \u201c, ARRAY"], "title": "c/c++\u7ecf\u5178\u9762\u8bd5\u9898"},
{"contents": ["\u8fbe\u5185C++\u73edCore C\u90e8\u5206\u6d4b\u8bd5\u9898", "\u59d3\u540d\uff1a\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u6210\u7ee9\uff1a", "1. ", "\u00a0", "\u00a0", "\u00a0", "3.", "\u00a0", "\u00a0", "\u00a0", "4. \u4ee5\u4e0b\u4e3aWindows NT\u4e0b\u768432\u4f4dC++\u7a0b\u5e8f\uff0c\u8bf7\u8ba1\u7b97sizeof\u7684\u503c\uff0810\u5206\uff09", "char\u00a0 str[] = \u201cHello\u201d ;", "char\u00a0\u00a0 *p = str ;", "int\u00a0\u00a0\u00a0\u00a0 n = 10;", "\u8bf7\u8ba1\u7b97sizeof (str ) =\u00a0\u00a0\u00a0\u00a0 \uff082\u5206\uff09", "sizeof ( p ) =\u00a0\u00a0\u00a0\u00a0\u00a0 \uff082\u5206\uff09", "sizeof ( n ) =\u00a0\u00a0\u00a0\u00a0\u00a0 \uff082\u5206\uff09", "void Func ( char str[100])", "{", "\u8bf7\u8ba1\u7b97", "sizeof( str ) =\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \uff082\u5206\uff09", "}", "void *p = malloc( 100 );", "\u8bf7\u8ba1\u7b97", "sizeof ( p ) =\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \uff082\u5206\uff09", "5. \u5206\u6790\u4ee5\u4e0b\u7a0b\u5e8f\u5e76\u56de\u7b54\u95ee\u9898\uff085\u5206\uff09", "void GetMemory(char *p)", "{", "p = (char *)malloc(100);", "}", "void Test(void)", "{", "char *str = NULL;", "GetMemory(str);", "\u00a0", "strcpy(str, \u201chello world\u201d);", "printf(str);", "}", "\u8bf7\u95ee\u8fd0\u884cTest\u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\u00a0", "\u00a0", "6. \u8bf7\u5206\u6790\u4ee5\u4e0b\u7a0b\u5e8f\u8f93\u51fa\u7ed3\u679c\uff1a\uff085\u5206\uff09", "#include<stdio.h>", "\nmain()", "\n{", "\nint a,b,c,d;", "\na=10;", "\nb=a++;", "\nc=++a;", "\nd=10*a++;", "printf(\u201cb\uff0cc\uff0cd\uff1a%d\uff0c%d\uff0c%d\u201d\uff0cb\uff0cc\uff0cd\uff09;", "\nreturn 0;", "\n}", "\u00a0", "7\uff0e\u8bf7\u5199\u51fa\u7a0b\u5e8f\u51fa\u51fa\u7ed3\u679c\uff085\u5206\uff09", "main()", "\n{", "\nint a[5]={1,2,3,4,5};", "\nint *ptr=(int *)(&a+1);", "printf(\u201c%d,%d\u201d,*(a+1),*(ptr-1));", "\n}", "8.\u7528\u81f3\u5c11\u4e24\u79cd\u65b9\u6cd5\u5c06\u4e00\u4e2a\u6574\u6570\u8f6c\u5316\u4e3a\u5176\u6570\u5b57\u5b57\u7b26\u4e32\uff0810\u5206\uff09", "\u00a0", "9.\u7528\u7a0b\u5e8f\u63cf\u8ff0\u5192\u6ce1\u6392\u5e8f\u7b97\u6cd5\uff0c\u5e76\u7b80\u8981\u53d9\u8ff0\u5176\u539f\u7406\uff0810\u5206\uff09", "\u00a0", "10\uff0e\u81ea\u5df1\u5b9e\u73b0C\u98ce\u683c\u5b57\u7b26\u4e32\u64cd\u4f5c\u7684\u4e09\u4e2a\u51fd\u6570int strlen(const char* s),", "char* strcpy(char* dest,const char* str),", "char* strcat(char* dest,const char* src);\uff0820\u5206\uff09", "\u00a0", "\u00a0", "11.\u7b80\u8ff0C\u8bed\u8a00\u5185\u5b58\u4e09\u5927\u5206\u914d\u51fd\u6570\u7684\u7528\u6cd5\uff1f(\u63d0\u9192\uff1acalloc\uff0cmalloc\uff0crealloc)", "(10\u5206)", "12.\u65b0\u5efa\u6587\u4ef6file2.txt\uff0c\u5c06\u5df2\u7ecf\u5b58\u5728\u7684\u6587\u4ef6file1.txt\u4e2d\u7684\u5185\u5bb9\u5199\u5165file2.txt\u5f53\u4e2d\uff0810\u5206\uff09", "\u00a0"], "title": "\u8fbe\u5185C++\u73edCore C\u90e8\u5206\u6d4b\u8bd5\u9898"},
{"contents": ["1.\u7f16\u5199my_strcpy\u51fd\u6570\uff0c\u5b9e\u73b0\u4e0e\u5e93\u51fd\u6570strcpy\u7c7b\u4f3c\u7684\u529f\u80fd\uff0c\u4e0d\u80fd\u4f7f\u7528\u4efb\u4f55\u5e93\u51fd\u6570\uff1b", "\n\u7b54\uff1achar *strcpy(char *strDest, const char *strSrc)", "\n{", "\nif ( strDest == NULL || strSrc == NULL)", "\nreturn NULL ;", "\nif ( strDest == strSrc)", "\nreturnstrDest ;", "\nchar *tempptr = strDest ;", "\nwhile( (*strDest++ = *strSrc++) != \u2018\u2019);", "\nreturntempptr ;", "\n}", "2. \u5934\u6587\u4ef6\u4e2d\u7684ifndef/define/endif\u7684\u4f5c\u7528\uff1f", "\n\u7b54\uff1a\u9632\u6b62\u8be5\u5934\u6587\u4ef6\u88ab\u91cd\u590d\u5f15\u7528\u3002", "3. \uff03i nclude", "4. \u5728C++ \u7a0b\u5e8f\u4e2d\u8c03\u7528\u88abC \u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u7684\u51fd\u6570\uff0c\u4e3a\u4ec0\u4e48\u8981\u52a0extern\u201cC\u201d\uff1f", "\n\u7b54\uff1aextern\u662fC/C++\u8bed\u8a00\u4e2d\u8868\u660e\u51fd\u6570\u548c\u5168\u5c40\u53d8\u91cf\u4f5c\u7528\u8303\u56f4\uff08\u53ef\u89c1\u6027\uff09\u7684\u5173\u952e\u5b57\uff0c\u5176\u58f0\u660e\u7684\u51fd\u6570\u548c\u53d8\u91cf\u53ef\u4ee5\u5728\u672c\u6a21\u5757\u6216\u5176\u5b83\u6a21\u5757\u4e2d\u4f7f\u7528\u3002", "\n\u901a\u5e38\uff0c\u5728\u6a21\u5757\u7684\u5934\u6587\u4ef6\u4e2d\u5bf9\u672c\u6a21\u5757\u63d0\u4f9b\u7ed9\u5176\u5b83\u6a21\u5757\u5f15\u7528\u7684\u51fd\u6570\u548c\u5168\u5c40\u53d8\u91cf\u4ee5\u5173\u952e\u5b57extern\u58f0\u660e\u3002", "5. \u9762\u5411\u5bf9\u8c61\u7684\u4e09\u4e2a\u57fa\u672c\u7279\u5f81\uff0c\u5e76\u7b80\u5355\u53d9\u8ff0\u4e4b\uff1f", "\n\u7b54\uff1a1\uff09\u5c01\u88c5\uff1a\u5c06\u5ba2\u89c2\u4e8b\u7269\u62bd\u8c61\u6210\u7c7b\uff0c\u6bcf\u4e2a\u7c7b\u5bf9\u81ea\u8eab\u7684\u6570\u636e\u548c\u65b9\u6cd5\u5b9e\u884cprotection(private, protected,public)", "\n2\uff09\u7ee7\u627f\uff1a\u5b9e\u73b0\u7ee7\u627f\uff08\u6307\u4f7f\u7528\u57fa\u7c7b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u800c\u65e0\u9700\u989d\u5916\u7f16\u7801\u7684\u80fd\u529b\uff09\u3001\u53ef\u89c6\u7ee7\u627f\uff08\u5b50\u7a97\u4f53\u4f7f\u7528\u7236\u7a97\u4f53\u7684\u5916\u89c2\u548c\u5b9e\u73b0\u4ee3\u7801\uff09\u3001\u63a5\u53e3\u7ee7\u627f\uff08\u4ec5\u4f7f\u7528\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u5b9e\u73b0\u6ede\u540e\u5230\u5b50\u7c7b\u5b9e\u73b0\uff09\u3002", "\n3\uff09\u591a\u6001\uff1a\u5141\u8bb8\u5c06\u5b50\u7c7b\u7c7b\u578b\u7684\u6307\u9488\u8d4b\u503c\u7ed9\u7236\u7c7b\u7c7b\u578b\u7684\u6307\u9488\u3002", "6. \u91cd\u8f7d\uff08overload)\u548c\u91cd\u5199(overried\uff0c\u6709\u7684\u4e66\u4e5f\u53eb\u505a\u201c\u8986\u76d6\u201d\uff09\u7684\u533a\u522b\uff1f", "\n\u7b54\uff1a\u4ece\u5b9a\u4e49\u4e0a\u6765\u8bf4\uff1a", "\n\u91cd\u8f7d\uff1a\u662f\u6307\u5141\u8bb8\u5b58\u5728\u591a\u4e2a\u540c\u540d\u51fd\u6570\uff0c\u800c\u8fd9\u4e9b\u51fd\u6570\u7684\u53c2\u6570\u8868\u4e0d\u540c\uff08\u6216\u8bb8\u53c2\u6570\u4e2a\u6570\u4e0d\u540c\uff0c\u6216\u8bb8\u53c2\u6570\u7c7b\u578b\u4e0d\u540c\uff0c\u6216\u8bb8\u4e24\u8005\u90fd\u4e0d\u540c\uff09\u3002", "\n\u91cd\u5199\uff1a\u662f\u6307\u5b50\u7c7b\u91cd\u65b0\u5b9a\u4e49\u590d\u7c7b\u865a\u51fd\u6570\u7684\u65b9\u6cd5\u3002", "\n\u4ece\u5b9e\u73b0\u539f\u7406\u4e0a\u6765\u8bf4\uff1a", "\n\u91cd\u8f7d\uff1a\u7f16\u8bd1\u5668\u6839\u636e\u51fd\u6570\u4e0d\u540c\u7684\u53c2\u6570\u8868\uff0c\u5bf9\u540c\u540d\u51fd\u6570\u7684\u540d\u79f0\u505a\u4fee\u9970\uff0c\u7136\u540e\u8fd9\u4e9b\u540c\u540d\u51fd\u6570\u5c31\u6210\u4e86\u4e0d\u540c\u7684\u51fd\u6570\u3002", "\n\u91cd\u5199\uff1a\u5f53\u5b50\u7c7b\u91cd\u65b0\u5b9a\u4e49\u4e86\u7236\u7c7b\u7684\u865a\u51fd\u6570\u540e\uff0c\u7236\u7c7b\u6307\u9488\u6839\u636e\u8d4b\u7ed9\u5b83\u7684\u4e0d\u540c\u7684\u5b50\u7c7b\u6307\u9488\uff0c\u52a8\u6001\u7684\u8c03\u7528\u5c5e\u4e8e\u5b50\u7c7b\u7684\u8be5\u51fd\u6570\uff0c\u8fd9\u6837\u7684\u51fd\u6570\u8c03\u7528\u5728\u7f16\u8bd1\u671f\u95f4\u662f\u65e0\u6cd5\u786e\u5b9a\u7684\uff08\u8c03\u7528\u7684\u5b50\u7c7b\u7684\u865a\u51fd\u6570\u7684\u5730\u5740\u65e0\u6cd5\u7ed9\u51fa\uff09\u3002", "7. \u591a\u6001\u7684\u4f5c\u7528\uff1f", "\n\u7b54\uff1a\u4e3b\u8981\u662f\u4e24\u4e2a\uff1a1\uff09\u9690\u85cf\u5b9e\u73b0\u7ec6\u8282\uff0c\u4f7f\u5f97\u4ee3\u7801\u80fd\u591f\u6a21\u5757\u5316\uff1b\u6269\u5c55\u4ee3\u7801\u6a21\u5757\uff0c\u5b9e\u73b0\u4ee3\u7801\u91cd\u7528\uff1b2\uff09\u63a5\u53e3\u91cd\u7528\uff0c\u4e3a\u4e86\u7c7b\u5728\u7ee7\u627f\u548c\u6d3e\u751f\u7684\u65f6\u5019\uff0c\u4fdd\u8bc1\u4f7f\u7528\u5bb6\u65cf\u4e2d\u4efb\u4e00\u7c7b\u7684\u5b9e\u4f8b\u7684\u67d0\u4e00\u5c5e\u6027\u65f6\u7684\u6b63\u786e\u8c03\u7528\u3002", "8. \u5206\u522b\u5199\u51faBOOL,int,float,\u6307\u9488\u7c7b\u578b\u7684\u53d8\u91cfa \u4e0e\u201c\u96f6\u201d\u7684\u6bd4\u8f83\u8bed\u53e5\u3002", "\n\u7b54\uff1aBOOL :if ( !a ) or if(a)", "\nint :if ( a ==0)", "\nfloat :const EXPRESSION EXP = 0.000001", "\nif ( a -EXP)", "\npointer : if ( a != NULL) or if(a == NULL)", "9. \u8bf7\u8bf4\u51faconst\u4e0e#define \u76f8\u6bd4\uff0c\u6709\u4f55\u4f18\u70b9\uff1f", "\n\u7b54\u6848\uff1a1\uff09 const \u5e38\u91cf\u6709\u6570\u636e\u7c7b\u578b\uff0c\u800c\u5b8f\u5e38\u91cf\u6ca1\u6709\u6570\u636e\u7c7b\u578b\u3002\u7f16\u8bd1\u5668\u53ef\u4ee5\u5bf9\u524d\u8005\u8fdb\u884c\u7c7b\u578b\u5b89\u5168\u68c0\u67e5\u3002\u800c\u5bf9\u540e\u8005\u53ea\u8fdb\u884c\u5b57\u7b26\u66ff\u6362\uff0c\u6ca1\u6709\u7c7b\u578b\u5b89\u5168\u68c0\u67e5\uff0c\u5e76\u4e14\u5728\u5b57\u7b26\u66ff\u6362\u53ef\u80fd\u4f1a\u4ea7\u751f\u610f\u6599\u4e0d\u5230\u7684\u9519\u8bef\u3002", "\n2\uff09 \u6709\u4e9b\u96c6\u6210\u5316\u7684\u8c03\u8bd5\u5de5\u5177\u53ef\u4ee5\u5bf9const \u5e38\u91cf\u8fdb\u884c\u8c03\u8bd5\uff0c\u4f46\u662f\u4e0d\u80fd\u5bf9\u5b8f\u5e38\u91cf\u8fdb\u884c\u8c03\u8bd5\u3002", "10.\u7b80\u8ff0\u6570\u7ec4\u4e0e\u6307\u9488\u7684\u533a\u522b\uff1f", "\n\u6570\u7ec4\u8981\u4e48\u5728\u9759\u6001\u5b58\u50a8\u533a\u88ab\u521b\u5efa\uff08\u5982\u5168\u5c40\u6570\u7ec4\uff09\uff0c\u8981\u4e48\u5728\u6808\u4e0a\u88ab\u521b\u5efa\u3002\u6307\u9488\u53ef\u4ee5\u968f\u65f6\u6307\u5411\u4efb\u610f\u7c7b\u578b\u7684\u5185\u5b58\u5757\u3002", "\n(1)\u4fee\u6539\u5185\u5bb9\u4e0a\u7684\u5dee\u522b", "\nchar a[] = \u201chello\u201d;", "\na[0] = \u2018X\u2019;", "\nchar *p = \u201cworld\u201d; // \u6ce8\u610fp \u6307\u5411\u5e38\u91cf\u5b57\u7b26\u4e32", "\np[0] = \u2018X\u2019; // \u7f16\u8bd1\u5668\u4e0d\u80fd\u53d1\u73b0\u8be5\u9519\u8bef\uff0c\u8fd0\u884c\u65f6\u9519\u8bef", "\n(2) \u7528\u8fd0\u7b97\u7b26sizeof \u53ef\u4ee5\u8ba1\u7b97\u51fa\u6570\u7ec4\u7684\u5bb9\u91cf\uff08\u5b57\u8282\u6570\uff09\u3002sizeof(p),p \u4e3a\u6307\u9488\u5f97\u5230\u7684\u662f\u4e00\u4e2a\u6307\u9488\u53d8\u91cf\u7684\u5b57\u8282\u6570\uff0c\u800c\u4e0d\u662fp \u6240\u6307\u7684\u5185\u5b58\u5bb9\u91cf\u3002C++/C \u8bed\u8a00\u6ca1\u6709\u529e\u6cd5\u77e5\u9053\u6307\u9488\u6240\u6307\u7684\u5185\u5b58\u5bb9\u91cf\uff0c\u9664\u975e\u5728\u7533\u8bf7\u5185\u5b58\u65f6\u8bb0\u4f4f\u5b83\u3002\u6ce8\u610f\u5f53\u6570\u7ec4\u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570\u8fdb\u884c\u4f20\u9012\u65f6\uff0c\u8be5\u6570\u7ec4\u81ea\u52a8\u9000\u5316\u4e3a\u540c\u7c7b\u578b\u7684\u6307\u9488\u3002", "\nchar a[] = \u201chello world\u201d;", "\nchar *p = a;", "\ncout\ncout\n\u8ba1\u7b97\u6570\u7ec4\u548c\u6307\u9488\u7684\u5185\u5b58\u5bb9\u91cf", "\nvoidFunc(char a[100])", "\n{", "\ncout\n}", "11.\u53d8\u91cf\u7684\u58f0\u660e\u548c\u5b9a\u4e49\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u7b54\uff1a\u58f0\u660e\u53d8\u91cf\u4e0d\u5206\u914d\u7a7a\u95f4\uff0c\u5b9a\u4e49\u53d8\u91cf\u8981\u5206\u914d\u7a7a\u95f4\u3002\u58f0\u660e\u4e3b\u8981\u662f\u544a\u8bc9\u7f16\u8bd1\u5668,\u540e\u9762\u7684\u5f15\u7528\u90fd\u6309\u58f0\u660e\u7684\u683c\u5f0f\u3002\u5b9a\u4e49\u5176\u5b9e\u5305\u542b\u4e86\u58f0\u660e\u7684\u610f\u601d,\u540c\u65f6\u8981\u5206\u914d\u5185\u5b58\u7a7a\u95f4\u3002", "12. \u89e3\u91ca\u5806\u548c\u6808\u7684\u533a\u522b\u3002", "\n\u7b54\uff1a\u5806\uff08heap\uff09\u2014\u2014\u4e00\u822c\u7531\u7a0b\u5e8f\u5458\u5206\u914d\u91ca\u653e\uff0c\u82e5\u7a0b\u5e8f\u5458\u4e0d\u91ca\u653e\uff0c\u7a0b\u5e8f\u7ed3\u675f\u65f6\u53ef\u80fd\u7531OS\u56de\u6536\u3002\u6ce8\u610f\u5b83\u4e0e\u6570\u636e\u7ed3\u6784\u4e2d\u7684\u5806\u662f\u4e24\u56de\u4e8b\uff0c\u5206\u914d\u65b9\u5f0f\u5012\u662f\u7c7b\u4f3c\u4e8e\u94fe\u8868\u3002\u901f\u5ea6\u6bd4\u8f83\u6162\uff0c\u800c\u4e14\u5bb9\u6613\u4ea7\u751f\u5185\u5b58\u788e\u7247,\u4e0d\u8fc7\u7528\u8d77\u6765\u6700\u65b9\u4fbf\u3002", "\n\u6808\uff08stack\uff09\u2014\u2014\u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u5206\u914d\u91ca\u653e\uff0c\u5b58\u653e\u51fd\u6570\u7684\u53c2\u6570\u503c\uff0c\u5c40\u90e8\u53d8\u91cf\u7684\u503c\u7b49\u3002\u5176\u64cd\u4f5c\u65b9\u5f0f\u7c7b\u4f3c\u4e8e\u6570\u636e\u7ed3\u6784\u4e2d\u7684\u6808\u3002\u7531\u7cfb\u7edf\u81ea\u52a8\u5206\u914d\uff0c\u901f\u5ea6\u8f83\u5feb\u3002\u4f46\u7a0b\u5e8f\u5458\u662f\u65e0\u6cd5\u63a7\u5236\u7684\u3002", "13. const\u7684\u4f5c\u7528\u662f\u4ec0\u4e48?", "\n\u7b54\uff1a\uff081\uff09\u53ef\u4ee5\u5b9a\u4e49const\u5e38\u91cf", "\n\uff082\uff09const\u53ef\u4ee5\u4fee\u9970\u51fd\u6570\u7684\u53c2\u6570\u3001\u8fd4\u56de\u503c\uff0c\u751a\u81f3\u51fd\u6570\u7684\u5b9a\u4e49\u4f53\u3002\u88abconst\u4fee\u9970\u7684\u4e1c\u897f\u90fd\u53d7\u5230\u5f3a\u5236\u4fdd\u62a4\uff0c\u53ef\u4ee5\u9884\u9632\u610f\u5916\u7684\u53d8\u52a8\uff0c\u80fd\u63d0\u9ad8\u7a0b\u5e8f\u7684\u5065\u58ee\u6027\u3002", "14. \u4e0b\u5217\u54ea\u4e24\u4e2a\u662f\u7b49\u540c\u7684", "\nint b;", "\nA constint* a = &b; //\u6307\u5411\u5e38\u91cf\u7684\u6307\u9488\uff0c\u4e0d\u80fd\u901a\u8fc7\u6307\u9488\u6539\u53d8b\uff0c\u4f46\u6307\u9488\u7684\u5730\u5740\u53ef\u4ee5\u6539\u53d8\u3002", "\nB const* int a = &b;// \u6307\u9488\u7684\u5730\u5740\u4e0d\u53ef\u4ee5\u6539\u53d8\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u6307\u9488\u6539\u53d8b\u7684\u503c", "\nC constint* const a = &b; //\u6307\u9488\u6307\u5411\u7684\u503c\uff0c\u548c\u6307\u9488\u672c\u8eab\u7684\u5730\u5740\u90fd\u4e0d\u80fd\u6539\u53d8", "\nD intconst* const a = &b;//\u4e0ec\u76f8\u540c", "15. \u5b8c\u6210\u7a0b\u5e8f\uff0c\u5b9e\u73b0\u5bf9\u6570\u7ec4\u7684\u964d\u5e8f\u6392\u5e8f", "\n#include ", "16. int i=(j=4,k=8,l=16,m=32); printf(\u201c%d\u201d, i); \u8f93\u51fa\u662f\u591a\u5c11\uff1f", "\n\u7b54\uff1a\u76f8\u5f53\u4e8e  i=j=4\uff1bi=k=8\uff1bi=l=16\uff1bi=m=32; \u6545\u6700\u540ei=32\uff1b", "17. \u8bf7\u7b80\u8ff0\u4ee5\u4e0b\u4e24\u4e2afor\u5faa\u73af\u7684\u4f18\u7f3a\u70b9\uff085\u5206\uff09", "\n1\uff09for (i=0; i", "\n{", "\nif (condition)", "\nDoSomething();", "\nelse", "\nDoOtherthing();", "\n}", "\n2\uff09if (condition)", "\n{", "\nfor (i=0; i", "\nDoSomething();", "\n}", "\nelse", "\n{", "\nfor (i=0; i", "19. .C++\u91cc\u9762\u5982\u4f55\u58f0\u660econst void f(void)\u51fd\u6570\u4e3aC\u7a0b\u5e8f\u4e2d\u7684\u5e93\u51fd\u6570\uff1f", "\n\u7b54\uff1a\u5728\u8be5\u51fd\u6570\u524d\u6dfb\u52a0extern \u201cC\u201d\u58f0\u660e\u3002\u7531\u4e8e\u7f16\u8bd1\u540e\u7684\u540d\u5b57\u4e0d\u540c\uff0cC++\u7a0b\u5e8f\u4e0d\u80fd\u76f4\u63a5\u8c03\u7528C \u51fd\u6570\u3002", "20. \u8bf7\u5199\u51fa\u4e0b\u9762\u4ee3\u7801\u5728 32 \u4f4d\u5e73\u53f0\u4e0a\u7684\u8fd0\u884c\u7ed3\u679c\uff0c\u5e76\u8bf4\u660esizeof\u7684\u6027\u8d28\uff1a", "\n#include ", "21. C++\u4e2d\uff0c\u5173\u952e\u5b57struct\u548cclass\u7684\u533a\u522b\u4ec5\u4ec5\u5728\u4e8e\uff1a", "\nstruct\u5b9a\u4e49\u7684\u7c7b\u7684\u7f3a\u7701\u6210\u5458\u4e3a\u516c\u6709\u7684\uff0c\u800cclass\u5b9a\u4e49\u7684\u7c7b\u7684\u7f3a\u7701\u6210\u5458\u4e3a\u79c1\u6709\u7684; ", "22. \u5934\u6587\u4ef6\u7684\u4f5c\u7528\u662f\u4ec0\u4e48?", "\n\u7b54\uff1a1\uff09\u901a\u8fc7\u5934\u6587\u4ef6\u6765\u8c03\u7528\u5e93\u529f\u80fd\u30022\uff09\u5934\u6587\u4ef6\u80fd\u52a0\u5f3a\u7c7b\u578b\u5b89\u5168\u68c0\u67e5\u3002", "23. C++\u51fd\u6570\u4e2d\u503c\u7684\u4f20\u9012\u65b9\u5f0f\u6709\u54ea\u51e0\u79cd?", "\n\u7b54\uff1aC++\u51fd\u6570\u7684\u4e09\u79cd\u4f20\u9012\u65b9\u5f0f\u4e3a\uff1a\u503c\u4f20\u9012\u3001\u6307\u9488\u4f20\u9012\u548c\u5f15\u7528\u4f20\u9012\u3002", "24. \u5185\u5b58\u7684\u5206\u914d\u65b9\u5f0f\u7684\u5206\u914d\u65b9\u5f0f\u6709\u51e0\u79cd?", "\n\u7b54\uff1a1\uff09\u4ece\u9759\u6001\u5b58\u50a8\u533a\u57df\u5206\u914d\u3002\u5185\u5b58\u5728\u7a0b\u5e8f\u7f16\u8bd1\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u5206\u914d\u597d\uff0c\u8fd9\u5757\u5185\u5b58\u5728\u7a0b\u5e8f\u7684\u6574\u4e2a\u8fd0\u884c\u671f\u95f4\u90fd\u5b58\u5728\u3002\u4f8b\u5982\u5168\u5c40\u53d8\u91cf\u3002", "\n2\uff09\u5728\u6808\u4e0a\u521b\u5efa\u3002\u5728\u6267\u884c\u51fd\u6570\u65f6\uff0c\u51fd\u6570\u5185\u5c40\u90e8\u53d8\u91cf\u7684\u5b58\u50a8\u5355\u5143\u90fd\u53ef\u4ee5\u5728\u6808\u4e0a\u521b\u5efa\uff0c\u51fd\u6570\u6267\u884c\u7ed3\u675f\u65f6\u8fd9\u4e9b\u5b58\u50a8\u5355\u5143\u81ea\u52a8\u88ab\u91ca\u653e\u3002\u6808\u5185\u5b58\u5206\u914d\u8fd0\u7b97\u5185\u7f6e\u4e8e\u5904\u7406\u5668\u7684\u6307\u4ee4\u96c6\u4e2d\uff0c\u6548\u7387\u5f88\u9ad8\uff0c\u4f46\u662f\u5206\u914d\u7684\u5185\u5b58\u5bb9\u91cf\u6709\u9650\u3002", "\n3\uff09\u4ece\u5806\u4e0a\u5206\u914d\uff0c\u4ea6\u79f0\u52a8\u6001\u5185\u5b58\u5206\u914d\u3002\u7a0b\u5e8f\u5728\u8fd0\u884c\u7684\u65f6\u5019\u7528malloc\u6216new\u7533\u8bf7\u4efb\u610f\u591a\u5c11\u7684\u5185\u5b58\uff0c\u7a0b\u5e8f\u5458\u81ea\u5df1\u8d1f\u8d23\u5728\u4f55\u65f6\u7528free\u6216delete\u91ca\u653e\u5185\u5b58\u3002\u52a8\u6001\u5185\u5b58\u7684\u751f\u5b58\u671f\u7531\u6211\u4eec\u51b3\u5b9a\uff0c\u4f7f\u7528\u975e\u5e38\u7075\u6d3b\uff0c\u4f46\u95ee\u9898\u4e5f\u6700\u591a\u3002", "25. \u8bbe\u8ba1\u51fd\u6570intatoi(char *s)\u3002", "\n\u7b54\uff1aintatoi (char *s)", "\n{", "\nint i = 0,sum = 0,sign;    //\u8f93\u5165\u7684\u6570\u524d\u9762\u53ef\u80fd\u8fd8\u6709\u7a7a\u683c\u6216\u5236\u8868\u7b26\u5e94\u52a0\u5224\u65ad", "\nwhile(*s==\u201d||*s==\u2019\\t\u2019)", "\n       {", "\ni++;", "\n       }", "\nsign = (*s==\u2019-')?-1:1;", "\nif(*s==\u2019-'|| *s==\u2019+')", "\n       {", "\ni++;", "\n       }", "\nwhile(*s!=\u2019\\0\u2032)", "\n       {", "\nsum = *s-\u20190\u2032+sum*10;", "\ni++;", "\n       }", "\nreturn sign*sum;", "\n}", "26. \u7f16\u5199strcat\u51fd\u6570(6\u5206)", "\n\u5df2\u77e5strcat\u51fd\u6570\u7684\u539f\u578b\u662fchar *strcat (char *strDest, const char *strSrc);", "\n\u5176\u4e2dstrDest\u662f\u76ee\u7684\u5b57\u7b26\u4e32\uff0cstrSrc\u662f\u6e90\u5b57\u7b26\u4e32\u3002", "\n\uff081\uff09\u4e0d\u8c03\u7528C++/C \u7684\u5b57\u7b26\u4e32\u5e93\u51fd\u6570\uff0c\u8bf7\u7f16\u5199\u51fd\u6570strcat", "\n\u7b54\uff1a", "\nchar * __cdeclstrcat(char * dst, const char * src)", "\n{", "\nchar * cp = dst;", "\nwhile( *cp )", "\ncp++; /* find end of dst */", "\nwhile( *cp++ = *src++ ) ; /* Copy src to end of dst */", "\nreturn(dst ); /* return dst */", "\n}", "\n\uff082\uff09strcat\u80fd\u628astrSrc\u7684\u5185\u5bb9\u8fde\u63a5\u5230strDest\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u8981char * \u7c7b\u578b\u7684\u8fd4\u56de\u503c\uff1f", "\n\u7b54\uff1a\u65b9\u4fbf\u8d4b\u503c\u7ed9\u5176\u4ed6\u53d8\u91cf\u3002", "27. MFC\u4e2dCString\u662f\u7c7b\u578b\u5b89\u5168\u7c7b\u4e48\uff1f", "\n\u7b54\uff1a\u4e0d\u662f\uff0c\u5176\u5b83\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u5230CString\u53ef\u4ee5\u4f7f\u7528CString\u7684\u6210\u5458\u51fd\u6570Format\u6765\u8f6c\u6362", "28.\u51fd\u6570\u6a21\u677f\u4e0e\u7c7b\u6a21\u677f\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u7b54\uff1a\u51fd\u6570\u6a21\u677f\u7684\u5b9e\u4f8b\u5316\u662f\u7531\u7f16\u8bd1\u7a0b\u5e8f\u5728\u5904\u7406\u51fd\u6570\u8c03\u7528\u65f6\u81ea\u52a8\u5b8c\u6210\u7684\uff0c\u800c\u7c7b\u6a21\u677f\u7684\u5b9e\u4f8b\u5316\u5fc5\u987b\u7531\u7a0b\u5e8f\u5458\u5728\u7a0b\u5e8f\u4e2d\u663e\u5f0f\u5730\u6307\u5b9a\u3002", "29. \u5199\u4e00\u4e2a\u201c\u6807\u51c6\u201d\u5b8fMIN\uff0c\u8fd9\u4e2a\u5b8f\u8f93\u5165\u4e24\u4e2a\u53c2\u6570\u5e76\u8fd4\u56de\u8f83\u5c0f\u7684\u4e00\u4e2a\u3002", "\n\u7b54\uff1a#define MIN(A,B) ((A) \n", "((*p++) \n", "30. \u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\u7ecf\u5e38\u8981\u7528\u5230\u65e0\u9650\u5faa\u73af\uff0c\u4f60\u600e\u4e48\u6837\u7528C\u7f16\u5199\u6b7b\u5faa\u73af\u5462\uff1f", "\n\u7b54\uff1awhile(1){}\u6216\u8005for(;;)", "31. \u7528\u53d8\u91cfa\u7ed9\u51fa\u4e0b\u9762\u7684\u5b9a\u4e49", "\na) \u4e00\u4e2a\u6574\u578b\u6570\uff08An integer\uff09", "\nb) \u4e00\u4e2a\u6307\u5411\u6574\u578b\u6570\u7684\u6307\u9488\uff08A pointer to an integer\uff09", "\nc) \u4e00\u4e2a\u6307\u5411\u6307\u9488\u7684\u7684\u6307\u9488\uff0c\u5b83\u6307\u5411\u7684\u6307\u9488\u662f\u6307\u5411\u4e00\u4e2a\u6574\u578b\u6570\uff08A pointer to a pointer to an integer\uff09", "\nd) \u4e00\u4e2a\u670910\u4e2a\u6574\u578b\u6570\u7684\u6570\u7ec4\uff08An array of 10 integers\uff09", "\ne) \u4e00\u4e2a\u670910\u4e2a\u6307\u9488\u7684\u6570\u7ec4\uff0c\u8be5\u6307\u9488\u662f\u6307\u5411\u4e00\u4e2a\u6574\u578b\u6570\u7684\uff08An array of 10 pointers to integers\uff09", "\nf) \u4e00\u4e2a\u6307\u5411\u670910\u4e2a\u6574\u578b\u6570\u6570\u7ec4\u7684\u6307\u9488\uff08A pointer to an array of 10 integers\uff09", "\ng) \u4e00\u4e2a\u6307\u5411\u51fd\u6570\u7684\u6307\u9488\uff0c\u8be5\u51fd\u6570\u6709\u4e00\u4e2a\u6574\u578b\u53c2\u6570\u5e76\u8fd4\u56de\u4e00\u4e2a\u6574\u578b\u6570\uff08A pointer to a function that takes an integer as an argument and returns an integer\uff09", "\nh) \u4e00\u4e2a\u670910\u4e2a\u6307\u9488\u7684\u6570\u7ec4\uff0c\u8be5\u6307\u9488\u6307\u5411\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u6709\u4e00\u4e2a\u6574\u578b\u53c2\u6570\u5e76\u8fd4\u56de\u4e00\u4e2a\u6574\u578b\u6570\uff08 An array of ten pointers to functions that take an integer argument and return an integer \uff09", "\n\u7b54\u6848\u662f\uff1a", "\na) int a; // An integer", "\nb) int *a; // A pointer to an integer", "\nc) int **a; // A pointer to a pointer to an integer", "\nd) int a[10]; // An array of 10 integers", "\ne) int *a[10]; // An array of 10 pointers to integers", "\nf) int (*a)[10]; // A pointer to an array of 10 integers", "\ng) int (*a)(int); // A pointer to a function a that takes an integer argument and returns an integer", "\nh) int (*a[10])(int); // An array of 10 pointers to functions that take an integer argument and return an integer", "32. 1\uff09\u5173\u952e\u5b57static\u7684\u4f5c\u7528\u662f\u4ec0\u4e48\uff1f\u7b54\uff1a\uff081\uff09\u7528\u4e8e\u5168\u5c40\u53d8\u91cf\uff1b\uff082\uff09\u7528\u4e8e\u5c40\u90e8\u53d8\u91cf\uff1b\uff083\uff09\u7528\u4e8e\u51fd\u6570\u3002", "\n2\uff09\u5173\u952e\u5b57const\u6709\u4ec0\u4e48\u542b\u610f\uff1f\u7b54\uff1a\u8868\u793a\u5e38\u91cf\u4e0d\u53ef\u4ee5\u4fee\u6539\u7684\u53d8\u91cf\u3002", "33. \u5982\u4f55\u5224\u65ad\u4e00\u6bb5\u7a0b\u5e8f\u662f\u7531C \u7f16\u8bd1\u7a0b\u5e8f\u8fd8\u662f\u7531C++\u7f16\u8bd1\u7a0b\u5e8f\u7f16\u8bd1\u7684\uff1f", "\n\u7b54\u6848\uff1a#ifdef __cplusplus", "\ncout\n#else", "\ncout\n#endif", "34. \u6570\u7ec4a[N]\uff0c\u5b58\u653e\u4e861\u81f3N-1\u4e2a\u6570\uff0c\u5176\u4e2d\u67d0\u4e2a\u6570\u91cd\u590d\u4e00\u6b21\u3002\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u627e\u51fa\u88ab\u91cd\u590d\u7684\u6570\u5b57.\u65f6\u95f4\u590d\u6742\u5ea6\u5fc5\u987b\u4e3ao\uff08N\uff09\u51fd\u6570\u539f\u578b\uff1aintdo_dup(int a[],int N)", "\n\u7b54\u6848\uff1a\u5982\u679c\u6570\u5c31\u662f1\uff0dN-1,\u90a3\u4e48\u6c42\u51faa[N]\u7684\u548c\uff0c\u7136\u540e\u51cf\u53bb1\uff0dN-1\u5c31\u884c\u4e86\u3002(\u786e\u5b9a\u6570\u5b571-N)", "\nS = N * (N-1) / 2;", "\nint i;", "\nint s = 0;", "\nfor(i=0;i", "\n{", "\ns += a[i];", "\n}", "\nint res = s \u2013 S;", "35. \u7a0b\u5e8f\u7531\u591a\u4e2a\u6a21\u5757\u7ec4\u6210\uff0c\u6240\u6709\u6a21\u5757\u90fd\u4f7f\u7528\u4e00\u7ec4\u6807\u51c6\u7684\u5305\u542b\u6587\u4ef6\u548c\u76f8\u540c\u7684\u7f16\u8bd1\u9009\u9879\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u5c06\u6240\u6709\u5305\u542b\u6587\u4ef6\u9884\u7f16\u8bd1\u4e3a\u4e00\u4e2a\u9884\u7f16\u8bd1\u5934\u3002", "\nchar * const p;", "\ncharconst * p", "\nconst char *p", "\n\u4e0a\u8ff0\u4e09\u4e2a\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u7b54\uff1achar * const p; //\u5e38\u91cf\u6307\u9488\uff0cp\u7684\u503c\u4e0d\u53ef\u4ee5\u4fee\u6539", "\nchar const * p\uff1b//\u6307\u5411\u5e38\u91cf\u7684\u6307\u9488\uff0c\u6307\u5411\u7684\u5e38\u91cf\u503c\u4e0d\u53ef\u4ee5\u6539", "\nconst char *p\uff1b //\u548cchar const *p", "36. \u67091,2,\u2026.\u4e00\u76f4\u5230n\u7684\u65e0\u5e8f\u6570\u7ec4,\u6c42\u6392\u5e8f\u7b97\u6cd5,\u5e76\u4e14\u8981\u6c42\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n),\u7a7a\u95f4\u590d\u6742\u5ea6O(1),\u4f7f\u7528\u4ea4\u6362,\u800c\u4e14\u4e00\u6b21\u53ea\u80fd\u4ea4\u6362\u4e24\u4e2a\u6570\u3002", "\n#include", "37. \u5199\u4e00\u4e2a\u51fd\u6570\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32str1\u548cstr2\u7684\u5927\u5c0f\uff0c\u82e5\u76f8\u7b49\u8fd4\u56de0\uff0c\u82e5str1\u5927\u4e8estr2\u8fd4\u56de1\uff0c\u82e5str1\u5c0f\u4e8estr2\u8fd4\u56de\uff0d1", "\nintstrcmp ( const char * src,const char * dst)", "\n{", "\nint ret = 0 ;", "\nwhile( ! (ret = *(unsigned char *)src \u2013 *(unsigned char *)dst) && *dst)//\u5b57\u7b26\u4e4b\u5dee\u4e3a\u6574\u578b", "\n{", "\n++src;", "\n++dst;", "\n}", "\nif ( ret  0 )", "\nret = 1 ;", "\nreturn( ret );", "\n}", "38. \u7528\u9884\u5904\u7406\u6307\u4ee4#define \u58f0\u660e\u4e00\u4e2a\u5e38\u6570\uff0c\u7528\u4ee5\u8868\u660e1\u5e74\u4e2d\u6709\u591a\u5c11\u79d2\uff08\u5ffd\u7565\u95f0\u5e74\u95ee\u9898\uff09", "\n\u7b54\uff1a #define SECONDS_PER_YEAR (60 * 60 * 24 * 365)UL", "39.Typedef\u5728C\u8bed\u8a00\u4e2d\u9891\u7e41\u7528\u4ee5\u58f0\u660e\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u6570\u636e\u7c7b\u578b\u7684\u540c\u4e49\u5b57\u3002\u4e5f\u53ef\u4ee5\u7528\u9884\u5904\u7406\u5668\u505a\u7c7b\u4f3c\u7684\u4e8b\u3002\u4f8b\u5982\uff0c\u601d\u8003\u4e00\u4e0b\u4e0b\u9762\u7684\u4f8b\u5b50\uff1a", "\n#definedPSstruct s *", "\ntypedefstruct s * tPS;", "\n\u4ee5\u4e0a\u4e24\u79cd\u60c5\u51b5\u7684\u610f\u56fe\u90fd\u662f\u8981\u5b9a\u4e49dPS\u548ctPS\u4f5c\u4e3a\u4e00\u4e2a\u6307\u5411\u7ed3\u6784s\u6307\u9488\u3002\u54ea\u79cd\u65b9\u6cd5\u66f4\u597d\u5462\uff1f\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u4e3a\u4ec0\u4e48\uff1f", "\n\u7b54\uff1atypedef\u66f4\u597d\u3002\u601d\u8003\u4e0b\u9762\u7684\u4f8b\u5b50\uff1a", "\ndPS p1,p2;tPS p3,p4;", "\n\u7b2c\u4e00\u4e2a\u6269\u5c55\u4e3a\uff1astruct s * p1, p2;", "\n\u4e0a\u9762\u7684\u4ee3\u7801\u5b9a\u4e49p1\u4e3a\u4e00\u4e2a\u6307\u5411\u7ed3\u6784\u7684\u6307\uff0cp2\u4e3a\u4e00\u4e2a\u5b9e\u9645\u7684\u7ed3\u6784\uff0c\u8fd9\u4e5f\u8bb8\u4e0d\u662f\u4f60\u60f3\u8981\u7684\u3002\u7b2c\u4e8c\u4e2a\u4f8b\u5b50\u6b63\u786e\u5730\u5b9a\u4e49\u4e86p3 \u548cp4 \u4e24\u4e2a\u6307\u9488\u3002", "40. C\u8bed\u8a00\u540c\u610f\u4e00\u4e9b\u4ee4\u4eba\u9707\u60ca\u7684\u7ed3\u6784,\u4e0b\u9762\u7684\u7ed3\u6784\u662f\u5408\u6cd5\u7684\u5417\uff0c\u5982\u679c\u662f\u5b83\u505a\u4e9b\u4ec0\u4e48\uff1f", "\nint a = 5, b = 7, c;", "\nc = a+++b;", "\n\u7b54\uff1a\u4e0a\u9762\u7684\u4ee3\u7801\u88ab\u5904\u7406\u6210\uff1ac = a++ + b;\u56e0\u6b64, \u8fd9\u6bb5\u4ee3\u7801\u6301\u884c\u540ea = 6, b = 7, c = 12\u3002", "41. char* ss = \u201c0123456789\u2033;", "\nsizeof(ss) \u7ed3\u679c 4  //ss\u662f\u6307\u5411\u5b57\u7b26\u4e32\u5e38\u91cf\u7684\u5b57\u7b26\u6307\u9488", "\nsizeof(*ss) \u7ed3\u679c 1  //*ss\u662f\u7b2c\u4e00\u4e2a\u5b57\u7b26", "\nchar ss[] = \u201c0123456789\u2033;", "\nsizeof(ss) \u7ed3\u679c 11   //ss\u662f\u6570\u7ec4\uff0c\u8ba1\u7b97\u5230\\0\u4f4d\u7f6e\uff0c\u56e0\u6b64\u662f10\uff0b1", "\nsizeof(*ss) \u7ed3\u679c 1  //*ss\u662f\u7b2c\u4e00\u4e2a\u5b57\u7b26", "\nchar ss[100] = \u201c0123456789\u2033;", "\nsizeof(ss) \u7ed3\u679c\u662f100  //ss\u8868\u793a\u5728\u5185\u5b58\u4e2d\u7684\u5927\u5c0f 100\u00d71", "\nintss[100] = \u201c0123456789\u2033;", "\nsizeof(ss) \u7ed3\u679c 400  //ss\u8868\u793a\u518d\u5185\u5b58\u4e2d\u7684\u5927\u5c0f 100\u00d74", "\nchar q[]=\u201dabc\u201d;", "\nchar p[]=\u201da\\n\u201d;", "\nsizeof(q),sizeof(p),strlen(q),strlen(p); \u3000\u3000\u7ed3\u679c\u662f 4 3 3 2", "42.\u5192\u6ce1\u6cd5\uff1a//\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u6bd4\u8f83n\u6b21\uff0c\u6bcf\u6b21\u62ff\u4e00\u4e2a\u4ece\u5934\u6bd4\u5230\u5c3e", "\nvoid bubble_sort(int array[],int n)", "\n{", "\ninti,j,temp;", "\nfor(i = 0; i \n{", "\nfor(j = 0; j  array[j+1])", "\n{ temp = array[j]; array[j] = array[j+1]; array[j+1] = temp; }", "\n}", "\nprintf(\u201c%d \u201c, array[j]);", "\n}", "\nreturn;", "\n}", "\n\u9009\u62e9\u6392\u5e8f\u6cd5\uff1a", "\nmain()", "\n{", "\n\u3000\u3000int a[10];", "\n\u3000\u3000inti,j,t,k;", "\nfor ( i = 0; i \nscanf(\u201c%d\u201d,&a[ i ]); //\u8f93\u516510\u4e2a\u6570", "\n\u3000\u3000for ( i = 0; i \n{", "\nk = i;", "\n\u3000\u3000for ( j = i + 1; j  a[ j ] )", "\n k = j; //\u524d\u8fdb", "\n\u3000\u3000if \uff08k\uff01=i\uff09", "\n\u3000\u3000       { t = a[ i ]; a[ i ] = a[ k ]; a[ k ] = t; }/* t \u53d1\u653e\u5956\u54c1*/", "\n\u3000\u3000}", "\nfor( i = 9; i >= 0; i \u2013)", "\nprintf(\u201c%4d\u201d,a[ i ]); /*\u663e\u793a\u6392\u5e8f\u540e\u7684\u7ed3\u679c*/", "\n}"], "title": "C/C++\u7b14\u8bd5\u9898-\u4e3b\u8981\u8003\u5bdfC/C++\u8bed\u8a00\u57fa\u7840\u6982\u5ff5\u3001\u7b97\u6cd5\u53ca\u7f16\u7a0b\uff0c\u9644\u53c2\u8003\u7b54\u6848\uff0c\u5206\u4eab\u7ed9\u5927\u5bb6"},
{"contents": ["2", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "1.", "1"], "title": "c++\u7535\u8bdd\u9762\u8bd5\u9898\u96c6\u9526"},
{"contents": ["\u5f88\u591a\u516c\u53f8\u90fd\u95ee\u5230\u4e86\u4e8c\u7ef4\u6307\u9488\uff0c\u4e8c\u7ef4\u6570\u7ec4\uff0c\u4ee5\u53ca\u6307\u5411\u6570\u7ec4\u7684\u6307\u9488\u7684\u76f8\u5173\u95ee\u9898\uff0c\u5728\u6b64\uff0c\u7b80\u5355\u7684\u7ed9\u5927\u5bb6\u603b\u7ed3\u4e0b\uff0c\u4e3a\u5927\u5bb6\u5728\u9762\u8bd5\u7684\u65f6\u5019\u589e\u52a0\u4e00\u5b9a\u7684\u4fe1\u5fc3\u3002", "\n\u8fd9\u7c7b\u9898\u76ee\uff0c\u603b\u7684\u6765\u8bf4\uff0c\u5b9e\u9645\u4e0a\u53ef\u4ee5\u5f52\u7eb3\u4e3a\u5982\u4e0b\u51e0\u70b9\uff1a", "\n1\u3001 \u6709\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4int a1[10]\uff0c\u5b9a\u4e49\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411\u4e00\u7ef4\u6570\u7ec4\u540d\u3002", "\n2\u3001 \u6709\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4int a2[10]\uff0c\u5b9a\u4e49\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411\u4e00\u7ef4\u6570\u7ec4\u540d\u7684\u5730\u5740\u3002", "\n3\u3001 \u6709\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4int a3[3][4]\uff0c\u5b9a\u4e49\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411\u4e8c\u7ef4\u6570\u7ec4\u540d\u3002", "\n4\u3001 \u6709\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4int a4[3][4]\uff0c\u5b9a\u4e49\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411\u4e8c\u7ef4\u6570\u7ec4\u540d\u7684\u5730\u5740\u3002", "\n\u5bf9\u4e8e\u8fd9\u7c7b\u9898\u76ee\uff0c\u521a\u770b\u5230\uff0c\u4f3c\u4e4e\u611f\u89c9\u6bd4\u8f83\u6ca1\u6709\u601d\u8def\uff0c\u5176\u5b9e\u6211\u4eec\u7ec6\u5fc3\u601d\u8003\u4e0b\uff0c\u8fd9\u56db\u4e2a\u95ee\u9898\uff0c\u90fd\u662f\u8ba9\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411\u4e00\u7247\u8fde\u7eed\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u53ea\u662f\u8bf4\u8fd9\u7247\u5185\u5b58\u7a7a\u95f4\u6709\u7684\u662f\u4e00\u7ef4\uff0c\u6709\u7684\u662f\u4e8c\u7ef4\u800c\u5df2\u3002", "\n\u6211\u4eec\u8fd9\u6b21\u5148\u5206\u6790\u4e0b\u524d\u9762\u4e24\u9053\u9898\uff1a", "\n\u90a3\u6211\u4eec\u5148\u770b\u7b2c\u4e00\u4e2a\u9898\u76ee\uff0c\u56e0\u4e3aa1\u672c\u8eab\u5c31\u662f\u8fde\u7eed\u7a7a\u95f4\u7684\u9996\u5730\u5740\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ea\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u5730\u5740\u53d8\u91cfp\uff0c\u8ba9p = a\u5c31\u53ef\u4ee5\u4e86\uff0c\u65e2\u7136\u8981\u7528\u201c=\u201d\uff0c\u90a3\u4e48\u7b49\u53f7\u4e24\u8fb9\u5c31\u9700\u8981\u7684\u7c7b\u578b\u4e00\u6837\uff0c\u6240\u4ee5\u6beb\u65e0\u7591\u95ee\uff0cp\u5e94\u8be5\u4e3a <\u6570\u636e\u7c7b\u578b> *p\u4e86\u3002\u73b0\u5728\u4e0d\u786e\u5b9a\u7684\u5c31\u662f\u6570\u636e\u7c7b\u578b\u4e86\u3002\u6839\u636e\u6307\u9488\u7684\u5b9a\u4e49\uff0c\u5e94\u8be5\u6709p[0]\u5230p[1]\u7684\u504f\u79fb\u548ca[0]\u5230a[1]\u7684\u504f\u79fb\u4e00\u81f4\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u770b\u51fa\uff0ca[0]\u548ca[1]\u7684\u504f\u79fb\u662fint\u7c7b\u578b\u3002\u90a3\u4e48\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u9898\u76ee\u7684\u6570\u636e\u7c7b\u578b\u5c31\u5e94\u8be5\u4e3aint\u4e86\uff0c\u7b2c\u4e00\u9898\u7684\u7b54\u6848\u4e3aint *p;", "\n\u63a5\u7740\u770b\u7b2c\u4e8c\u95ee\u9898\uff0c\u8fd9\u4e2a\u95ee\u9898\u7684\u96be\u70b9\u5728\uff0c\u4ec0\u4e48\u53eb\u6570\u7ec4\u540d\u7684\u5730\u5740\uff0c\u6211\u4eec\u90fd\u77e5\u9053C\u8bed\u8a00\u4e2d\u7684\u53d8\u91cf\u90fd\u6709\u5730\u5740\uff0c\u4f46\u6570\u7ec4\u540d\u662f\u4ec0\u4e48\uff0c\u4ed6\u662f\u4e0d\u662f\u4e5f\u5728\u5185\u5b58\u4e2d\u5b9e\u5b9e\u5728\u5728\u7684\u5b58\u5728\u54ea\uff0c\u56de\u7b54\u662f\u5426\u5b9a\u7684\uff08\u611f\u5174\u8da3\u7684\u540c\u5b66\uff0c\u53ef\u4ee5\u8bd5\u7740\u8bc1\u660e\u4e0b\uff0ca\u7684\u503c\u548c&a\u7684\u503c\u6709\u4ec0\u4e48\u7279\u70b9\uff09\u3002a\u662f\u6570\u7ec4\u7a7a\u95f4\u7684\u4e00\u4e2a\u6807\u53f7\uff0c\u90a3\u5bf9\u6807\u53f7\u53d6\u5730\u5740\uff0c\u662f\u4ec0\u4e48\u90a3\uff0c\u6211\u4eec\u53ef\u4ee5\u8bd5\u7740\u628a&a\u548c&a+1\u7684\u5730\u5740\u90fd\u6253\u5370\u51fa\u6765\uff0c\u7136\u540e\u770b\u4e0b\u4ed6\u4eec\u7684\u5173\u7cfb\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c&a\u548c&a+1\u4e4b\u95f4\u7684\u504f\u79fb\u5b9e\u9645\u4e0a\u662f10\u4e2aint\u7684\u5355\u4f4d\u3002\u90a3\u4e48\u6211\u4eec\u4e5f\u53ef\u4ee5\u63a8\u51fa\u6570\u7ec4\u540d\u7684\u5730\u5740\u539f\u6765\u6807\u793a\u4e86\u6574\u4e2a\u6570\u7ec4\u7684\u7a7a\u95f4\u3002\u4e5f\u5c31\u662f\u8bf4&a[0]\u548c&a[1]\u7684\u504f\u79fb\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2aint [10]\u7684\u7a7a\u95f4\u3002\u90a3\u4e48\u5bf9\u4e8e<\u6570\u636e\u7c7b\u578b> *p\u6765\u8bf4\uff0c\u6570\u636e\u7c7b\u578b\u5c31\u662f\u6307int [10]\u8fd9\u4e2a\u7a7a\u95f4\u4e86\u3002\u7b2c\u4e8c\u9898\u7684\u7b54\u6848\u4e3aint (*p)[10];", "\n\u5bf9\u4e8e\u524d2\u4e2a\u95ee\u9898\uff0c\u53ef\u4ee5\u5199\u51fa\u5982\u4e0b\u5b9e\u9a8c\u4ee3\u7801\uff1a", "\nint main(int argc,char *argv[])", "\n{", "\nint a1[10];", "\nint *p;", "\nint (*p1)[10];", "\nprintf(\u201cthe address of a1[0] is %p,the address of a1[1] is %p\\n\u201d,&a1[0],&a1[1]);", "\nprintf(\u201cthe &a1[0] is %p,the &a[1] is %p\\n\u201d,&(&a1)[0],&(&a1)[1]);", "\np = a1;", "\np1 = &a1;", "\n}", "\n\u4ee5\u4e0a\u7a0b\u5e8f\u4e2dp1,p\u5373\u6211\u4eec\u5e94\u8be5\u586b\u7684\uff0c\u5982\u679c\u7f16\u8bd1\u5668\u7f16\u8bd1\u65f6\u6ca1\u6709\u8b66\u544a\uff0c\u90a3\u4e48\u8bf4\u660e\u6211\u4eec\u7684\u8fd9\u6837\u5199\u6cd5\u662f\u6b63\u786e\u7684\u3002", "\n\u90a3\u4e48\u5728\u6df1\u5165\u4e0b\u7684\u5206\u6790\u4e0b\uff0cp1\u548cp\u73b0\u5728\u90fd\u8981\u4ed6\u8bbf\u95eea1\u4e2d\u7684\u7b2c\u4e8c\u4e2a\u5143\u7d20\uff0c\u5373a1[1]\uff0c\u5e94\u8be5\u600e\u4e48\u505a\u90a3\uff1f", "\n\u5927\u5bb6\u53ef\u4ee5\u601d\u8003\u4e0b\uff0c\u7b54\u6848\u662f\uff1a", "\np[1] p1[0][1]\uff0c\u5982\u4f55\u9a8c\u8bc1\u90a3\uff0c\u53ea\u8981\u6267\u884cif(p[1] = = p1[0][1])\uff0c\u5982\u679c\u8fd9\u4e2a\u903b\u8f91\u4e3a\u771f\uff0c\u90a3\u8bf4\u660e\u6b63\u786e\u3002", "\n\u4e0a\u6b21\u9898\u76ee\u7684\u5185\u5bb9\u4e3a\uff1a", "\n1\u3001 \u6709\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4int a1[10]\uff0c\u5b9a\u4e49\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411\u4e00\u7ef4\u6570\u7ec4\u540d\u3002", "\n2\u3001 \u6709\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4int a2[10]\uff0c\u5b9a\u4e49\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411\u4e00\u7ef4\u6570\u7ec4\u540d\u7684\u5730\u5740\u3002", "\n3\u3001 \u6709\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4int a3[3][4]\uff0c\u5b9a\u4e49\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411\u4e8c\u7ef4\u6570\u7ec4\u540d\u3002", "\n4\u3001 \u6709\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4int a4[3][4]\uff0c\u5b9a\u4e49\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411\u4e8c\u7ef4\u6570\u7ec4\u540d\u7684\u5730\u5740\u3002", "\n\u8fd8\u8bb0\u5f97\u524d2\u9053\u9898\u7684\u5206\u6790\u65b9\u6cd5\u5417\uff0c\u7b2c\u4e00\u4e2a\u9898\uff0c\u5e94\u8be5\u5b9a\u4e49\u4e00\u4e2aint *p\u7684\u6307\u9488\u6765\u6307\u5411\u4e00\u7ef4\u6570\u7ec4a1\uff08\u8fd9\u4e2a\u662f\u6bd4\u8f83\u7b80\u5355\u7684\uff09\u3002\u800c\u7b2c\u4e8c\u4e2a\u9898\u76ee\u4e3a\u5b9a\u4e49int (*p)[10]\u6765\u6307\u5411\u4e00\u7ef4\u6570\u7ec4a2\u7684\u5730\u5740\u3002", "\n\u6211\u4eec\u8fd9\u6b21\u5148\u5206\u6790\u540e\u9762\u9762\u4e24\u9053\u9898\uff1a", "\nint a3[3][4]\u4e3a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u5927\u5bb6\u90fd\u77e5\u9053\u4ed6\u7684\u7269\u7406\u610f\u4e49\u662f3\u884c4\u5217\uff0c\u4f46\u662f\u6211\u4eec\u90fd\u77e5\u9053\uff0c\u8ba1\u7b97\u673a\u7684\u5185\u5b58\u662f\u4e00\u7ef4\u7a7a\u95f4\uff0c\u5373\u4e0d\u53ef\u80fd\u6309\u7167\u4e00\u4e2a\u9762\u7684\u65b9\u5f0f\u5b58\u50a8\u4e8c\u7ef4\u6570\u7ec4\u7684\uff0c\u90a3\u4e48\u8ba1\u7b97\u673a\u600e\u4e48\u5b58\u50a8\u5462\uff0c\u5927\u5bb6\u53ef\u4ee5\u53c2\u8003\u4e0bC\u8bed\u8a00\u6559\u6750\uff0c\u4e8c\u7ef4\u6570\u7ec4\u662f\u6309\u7167\u4ece\u4e0a\u5230\u4e0b\u4ece\u5de6\u5230\u53f3\u7684\u987a\u5e8f\u653e\u7f6e\u5230\u4e00\u7ef4\u5185\u5b58\u7a7a\u95f4\u7684\u3002", "\n\u6bd4\u5982int a3[3][4] = {{1,2,3,4},{5,6,7,8}}\uff0c\u5728\u8ba1\u7b97\u673a\u5206\u914d\u4e868\u4e2aint\u7a7a\u95f4\u6309\u987a\u5e8f\u5b58\u50a81,2,3,4,5,6,7,8\uff0c\u90a3\u8ba1\u7b97\u673a\u600e\u4e48\u77e5\u90531,2,3,4\u4e3a\u7b2c\u4e00\u884c\u90a3\uff0c\u800c\u4e0d\u662f1,2\u4e3a\u4e00\u884c\uff0c3,4\u4e3a\u4e00\u884c\u90a3\u3002\u770b\u6765a3\u4e2d\u7684\u201c[4]\u201d\u8d77\u5230\u4e86\u5f88\u91cd\u8981\u7684\u4f5c\u7528\u3002", "\n\u90a3\u4e48\u6211\u4eec\u8fd8\u662f\u56de\u5230\u9898\u76ee\u4e0a\uff0c\u5b9a\u4e49\u4e00\u4e2a\u6307\u9488\u6307\u5411a3\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5148\u770b\u4e0ba3\u662f\u600e\u4e48\u8bfb\u5185\u5b58\u7684\uff1fa3 \u548ca3+1\uff0c\u6211\u4eec\u5206\u522b\u7528%p\u6765\u67e5\u770b\u4e0b\u4ed6\u4eec\u7684\u5730\u5740\u504f\u79fb\uff0c\u7a0b\u5e8f\u5927\u5bb6\u53ef\u4ee5\u81ea\u5df1\u5199\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u4ed6\u4eec\u4e24\u8005\u7684\u5dee\u503c\u4e3a16\uff0c\u6211\u4eec\u53c8\u77e5\u9053a3\u91cc\u9762\u5b58\u7740\u90fd\u662f4\u4e2a\u5b57\u8282\u7684int\u7c7b\u578b\uff0c\u90a3\u4e48\u53ef\u4ee5\u77e5\u9053\uff0c\u4ecea3\u5230a3+1\u504f\u79fb\u4e864\u4e2aint\u5355\u4f4d\uff0c\u800c\u8fd9\u4e2a4\u6070\u597d\u662f\u7b2c\u4e8c\u4e2a\u65b9\u62ec\u53f7\u7684\u6570\u5b57\u3002", "\n\u90a3\u4e48\u6211\u4eec\u5b9a\u4e49\u7684\u6307\u9488P\u504f\u79fb\u5185\u5b58\u7684\u65b9\u5f0f\u4e5f\u5e94\u8be5\u662f4\u4e2aint\u5355\u4f4d\u624d\u80fd\u548ca3\u5339\u914d\uff0c\u6240\u4ee5\u5f88\u591a\u540c\u5b66\u5728\u9762\u8bd5\u65f6\u7ed9\u51faint **p\u7684\u7ed3\u679c\u662f\u4e0d\u5bf9\u7684\uff0c\u56e0\u4e3a\u4e8c\u7ef4\u6307\u9488\u7684\u504f\u79fb\u8fd8\u662f4\u4e2a\u5b57\u8282\u4e3a\u4e00\u4e2a\u504f\u79fb\u5355\u4f4d\uff0c\u8ddf\u6211\u4eec\u5206\u6790\u7684\u4e0d\u4e00\u6837\u3002\u90a3\u6211\u4eec\u5982\u679c\u53bb\u5199\u4e00\u4e2a\u6307\u54114\u4e2aint\u5355\u4f4d\u7684\u6307\u9488\u90a3\uff0c\u5927\u5bb6\u53ef\u4ee5\u8003\u8651\u4e0b\u4f7f\u7528\u5c0f\u62ec\u53f7\u6765\u5e2e\u52a9\u6211\u4eec\u7406\u89e3\u3002", "\n\u7b54\u6848\u4e3a\uff1aint (*p)[4]\u3002\u770b\u5230\u8fd9\u4e2a\u7b54\u6848\uff0c\u548c\u6211\u4eec\u7684\u7b2c\u4e8c\u9898\u7684\u7b54\u6848\u5f88\u7c7b\u4f3c\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u8ba4\u4e3a\uff0c\u4e00\u7ef4\u6570\u7ec4\u540d\u7684\u5730\u5740\u5b9e\u8d28\u5c31\u662f\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u7684\u4e00\u884c\u3002", "\n\u4e0b\u9762\u6211\u4eec\u770b\u7b2c\u56db\u9898\uff0c\u6709\u6d89\u53ca\u5230\u6570\u7ec4\u540d\u7684\u5730\u5740\u7684\u95ee\u9898\uff0c\u4e8c\u7ef4\u6570\u7ec4\u540d\u7684\u5730\u5740\uff0c\u6839\u636e\u6211\u4eec\u4e0a\u6b21\u5206\u6790\uff0c\u53ef\u4ee5\u77e5\u9053\uff0c\u4e8c\u7ef4\u6570\u7ec4\u540d\u7684\u5730\u5740\u504f\u79fb\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u5bf9\u8c61\uff0c\u5373\u504f\u79fb\u4e00\u4e2a\u9762\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6307\u9488\u7684\u5b9a\u4e49\uff0c\u5e94\u8be5\u5bb9\u6613\u7684\u5f97\u5230\uff1a", "\nint (*p)[3][4];", "\n\u8fd9\u6837\u7684\u7b54\u6848\u3002", "\n\u7efc\u5408\u8fd9\u51e0\u9053\u9898\u76ee\uff0c\u6211\u4eec\u80fd\u66f4\u6df1\u5165\u7684\u7406\u89e3\u5173\u4e8e\u6307\u9488\u7684\u542b\u4e49\u4e86\u3002"], "title": "\u6570\u7ec4\u540d\u4e0e\u6307\u9488\u5178\u578b\u9762\u8bd5\u9898\u7684\u5206\u6790"},
{"contents": ["\u9898\u76ee\u4e00\uff1a\u8bbe\u8ba1\u4e00\u4e2a\u81ea\u7136\u6570\u6570\u7ec4\uff0c\u5305\u542b50\u4e2a\u8303\u56f4\u5728\uff080\uff0c200\uff09\u7684\u81ea\u7136\u6570\uff0c\u5e76\u4ece\u5c0f\u5230\u5927\u6392\u5217\uff0c\u968f\u673a\u4ea7\u751f\u4e00\u4e2a\u8303\u56f4\u5728\uff080\uff0c200\uff09\u81ea\u7136\u6570\uff0c\u53bb\u6570\u7ec4\u4e2d\u7528\u4e8c\u5206\u67e5\u627e\u6cd5\u67e5\u627e\uff0c\u5982\u679c\u5b58\u5728\u8fd4\u56de\u771f\uff0c\u5e76\u83b7\u53d6\u8fd9\u4e2a\u6570\u5728\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\uff08\u7b2c\u51e0\u4e2a\uff09\uff1b\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u8fd4\u56de\u5047\u3002", "\n\u8981\u6c42\uff1a", "\n1\u3002\u7f16\u5199\u521d\u59cb\u5316\u6570\u7ec4\u3002\u5e76\u63d0\u4f9b\u501f\u53e3\u663e\u793a\u6570\u7ec4\u5e8f\u53f7\u548c\u5185\u5bb9\uff1b", "\n2\u3002\u5bf9\u6570\u7ec4\u6392\u5e8f\uff0c\u5e76\u63d0\u4f9b\u63a5\u53e3\u663e\u793a\u6570\u636e\u9700\u8981\u548c\u5185\u5bb9\uff1b", "\n3\u3002\u968f\u673a\u4ea7\u751f\u81ea\u7136\u6570\uff1b", "\n4\u3002\u7528\u4e8c\u5206\u6cd5\u67e5\u627e\u968f\u673a\u6570\u3002", "\u4e8c\uff1a\u8bbe\u8ba1\u4e00\u4e2a\u00a0VC++\u7a0b\u5e8f\uff0c\u5f53\u4e3b\u7a97\u53e3\u663e\u793a\u65f6\uff0c\u4ece\u7a97\u53e3\u5ba2\u6237\u533a\u7684\u5de6\u4e0a\u89d2\u5411\u53f3\u4e0a\u89d2\u7f13\u6162\u4e0b\u843d\u4e00\u4e2a\u5c0f\u4e09\u89d2\u5f62\uff0c\u5728\u4e0b\u843d\u8fc7\u7a0b\u4e2d\uff0c\u5c0f\u4e09\u89d2\u5f62\u505a\u9006\u65f6\u9488\u7f13\u6162\u65cb\u8f6c\uff0c\u5230\u8fbe\u53f3\u4e0b\u89d2\u65f6\uff0c\u6b63\u597d\u4ee5\u4e00\u6761\u5e95\u8fb9\u548c\u5ba2\u6237\u533a\u8fb9\u6846\u91cd\u5408\u5e76\u505c\u6b62\u3002\u5728\u6539\u53d8\u7a97\u53e3\u5927\u5c0f\u65f6\uff0c\u505c\u6b62\u4e09\u89d2\u5f62\u7684\u4e0b\u843d\uff0c\u91cd\u65b0\u4ece\u5de6\u4e0a\u89d2\u5f00\u59cb\u4e0b\u843d\u3002", "\n\u8981\u6c42\uff1a\u5728\u6574\u4e2a\u5c4f\u5e55\u4e0a\u53ea\u80fd\u6709\u4e00\u4e2a\u4e09\u89d2\u5f62\u5728\u79fb\u52a8.", "\u4e09\uff1a\u5b8c\u6210\u4e0b\u9762\u7684\u7a0b\u5e8f\uff0c\u529f\u80fd\u8981\u6c42\u4e3a\uff1a", "\n\uff081\uff09\u53ef\u4ee5\u7528\u9f20\u6807\u81ea\u7531\u7684\u5728\u5c4f\u5e55\u4e0a\u9762\u753b\u51fa\u4e00\u6bb5\u6298\u7ebf\uff08\u8981\u6c42\u7528\u6a61\u76ae\u7b4b\u201c\u6280\u672f\uff09\uff0c\u5982\u6298\u7ebf\u76f8\u4ea4\uff0c\u5f39\u51fa\u63d0\u793a\u7b50\uff0c\u8981\u6c42\u91cd\u65b0\u53d6\u70b9\uff08\u8be5\u70b9\u4e0d\u4f5c\u4e3a\u6298\u7ebf\u4e0a\u7684\u70b9\uff09", "\n\uff082\uff09\u5728\u4e0a\u9762\u6298\u7ebf\u7684\u4e24\u4fa7\uff0c\u4ee5\u4e00\u5b9a\u7684\u8ddd\u79bb\u753b\u51fa\u4e0e\u4e4b\u5e73\u884c\u7684\u6298\u7ebf", "\u56db\uff1a\u8bbe\u8ba1\u4e00\u4e2a\u7a97\u53e3A,\u5728\u6b64\u7a97\u53e3\u5185\u6309\u5feb\u6377\u952eF1\uff0c\u5f39\u51fa\u53e6\u5916\u7684\u7a97\u53e3B\uff0c\u5728B\u5f39\u51fa\u540e\uff0c\u4e24\u4e2a\u7a97\u53e3\u8981\u5de6\u53f3\u5e76\u6392\u663e\u793a\uff0c\u5e76\u6491\u6ee1\u6574\u4e2a\u5c4f\u5e55\uff1b\u7528\u9f20\u6807\u62d6\u52a8\u4e24\u4e2a\u7a97\u53e3\u76f8\u90bb\u7684\u8fb9\uff0c\u4e24\u4e2a\u7a97\u53e3\u7684\u5927\u5c0f\u540c\u65f6\u6539\u53d8\uff0c\u4e14\u76f8\u5bf9\u4f4d\u7f6e\u4e0d\u53d8\u3002\u518d\u6309F1,\u7a97\u53e3B\u9690\u85cf\uff0c\u7a97\u53e3A\u6700\u5927\u5316\uff0c\u5982\u6b64\u91cd\u590d\u3002", "\u4e94\uff1a\u8bbe\u8ba1\u4e00\u4e2aVC++\u7a0b\u5e8f\uff0c\u5c06\u5f53\u524d\u5c40\u57df\u7f51\u4e0a\u6bcf\u53f0\u673a\u5668\uff08\u76f8\u540c\u7684\u5b50\u7f51\u63a9\u7801\uff09\u7684\u5171\u4eab\u6587\u4ef6\u5939\u5217\u8868\u663e\u793a\u51fa\u6765\u3002\u5047\u5b9a\u64cd\u4f5c\u8005\u6709\u5fc5\u8981\u7684\u6743\u9650\u3002\u8981\u6c42\uff1a", "\n\uff081\uff09\u7528\u6811\u578b\u63a7\u4ef6\u63a7\u5236\u6bcf\u53f0\u7535\u8111\uff1b", "\n\uff082\uff09\u70b9\u51fb\u5171\u4eab\u6587\u4ef6\u5939\uff0c\u663e\u793a\u6587\u4ef6\u5939\u7684\u6743\u9650\u5c5e\u6027\uff0c\u4f8b\u5982\uff1a\u53ea\u8bfb\uff0c\u5b8c\u5168\u63a7\u5236\u7b49\u3002"], "title": "vc++\u9762\u8bd5\u9898"},
{"contents": ["\u4e00", "1\u00a0class\u00a0A", "{", "}", "\u00a0", "sizeof(A);", "\u00a0", "2\u00a0class\u00a0A", "{", "\u00a0\u00a0\u00a0void\u00a0fun();", "}", "\u00a0", "sizeof(A)", "\u00a0", "\u53c2\u8003\u7f51\u7ad9", "http://blog.csdn.net/lishengwei/archive/2008/05/08/2416554.aspx", "\u00a0", "\u4e8c\u00a0\u5229\u7528\u9012\u5f52\u7b97\u6cd5\u5b9e\u73b0\uff1a", "\u8f93\u5165\u00a0", "\u8f93\u5165", "\u00a0", "\u4e09\u00a0", "\u00a0", "\u56db\u00a0\u516c\u53f8\u6587\u5316\u7684\u7406\u89e3", "\u00a0", "\u4e94\u00a0\u5bf9\u5f85\u52a0\u73ed", "\u00a0", "\u516d\u00a0", "\u00a0", "\u00a0", "\u00a0", "\u7f8e\u8d5b\u8fbe\u9762\u8bd5\u9898", "\u00a0", "\u4e00\u3001\u00a0\u53cc\u7f13\u5b58", "\u4e8c\u3001\u00a0", "\u4e09\u3001"], "title": "\u7f8e\u8d5b\u8fbe\u7b14\u8bd5\u53ca\u9762\u8bd5\u2013C++"},
{"contents": ["\u4e00\u3001\u586b\u7a7a\u9898\uff08\u5206\uff09", "\n1\uff0e\u91c7\u7528\u5185\u8054\u51fd\u6570\u7684\u76ee\u7684\u5728\u4e8e\u63d0\u9ad8 \u7a0b\u5e8f\u7684\u8fd0\u884c\u6548\u7387 \u3002", "\n2\uff0e\u91c7\u7528\u51fd\u6570\u91cd\u8f7d\u7684\u76ee\u7684\u5728\u4e8e\u63d0\u9ad8 \u7a0b\u5e8f\u8bbe\u8ba1\u7684\u7b80\u5316\u7a0b\u5ea6 \u3002", "\n3\uff0e\u7528\u4e00\u4e2a\u5df2\u77e5\u5bf9\u8c61\u6765\u521d\u59cb\u5316\u4e00\u4e2a\u65b0\u5bf9\u8c61\u65f6\uff0c\u7cfb\u7edf\u4f1a\u8c03\u7528 \u590d\u5236(\u6216\u79f0\u62f7\u8d1d) \u6784\u9020\u51fd\u6570\u6765\u5b8c\u6210\u3002", "\n4\uff0e\u9759\u6001\u6570\u636e\u6210\u5458\u4e0e\u4e00\u822c\u6570\u636e\u6210\u5458\u4e0d\u540c\uff0c\u5b83\u7684\u521d\u59cb\u5316\u5e94\u5728 \u7c7b\u4f53\u5916 \u8fdb\u884c\u3002", "\n5\uff0e\u5728 C++\u4e2d\uff0c\u4e0d\u80fd\u4e3a \u62bd\u8c61 \u7c7b\u5b9a\u4e49\u5bf9\u8c61\u3002", "\n6\uff0e\u5355\u4e2a\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u63d0\u4f9b \u7c7b\u578b \u8f6c\u6362\u529f\u80fd\u3002", "\n7\uff0e\u5728\u5b9a\u4e49\u6d3e\u751f\u7c7b\u65f6\uff0c\u9ed8\u8ba4\u7684\u7ee7\u627f\u65b9\u5f0f\u662f \u79c1\u6709private\u65b9\u5f0f \u3002", "\n8\uff0e\u5728 \u516c\u6709 \u7ee7\u627f\u65b9\u5f0f\u4e0b\uff0c\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684\u5730\u5740\u503c\u53ef\u4ee5\u8d4b\u503c\u7ed9\u57fa\u7c7b\u7684\u5bf9\u8c61\u6307\u9488\u3002", "\n9\uff0e\u865a\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u548c\u975e\u865a\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u5728\u6210\u5458\u521d\u59cb\u5316\u5217\u8868\u4e2d\u540c\u65f6\u51fa\u73b0\u65f6\uff0c", "\n\u865a\u57fa\u7c7b \u7684\u6784\u9020\u51fd\u6570\u4f18\u5148\u6267\u884c\u3002", "\n10\uff0e\u6784\u9020\u51fd\u6570\u4e2d\u8c03\u7528\u865a\u51fd\u6570\u65f6\uff0c\u91c7\u7528 \u52a8\u6001 \u8054\u7f16\u3002", "\u4e8c\u3001\u9009\u62e9\u9898(\u8bf7\u5728\u6b63\u786e\u7b54\u6848\u4e0a\u6253\u4e0a\u25cb) \uff08\u5206\uff09", "\n1\uff0e\u4e0b\u5217\u5404\u8868\u8fbe\u5f0f\u4e2d\uff0c\u54ea\u4e00\u4e2a\u53ef\u80fd\u4f1a\u6709\u4e8c\u4e49\u6027? \uff08B\uff09", "\n\u5df2\u77e5\uff1aint a(4), b(5);", "\nA\uff0ea+b<<3 B\uff0e++a*b++", "\nC\uff0e(a=3)+a++ D\uff0eb+(a=3)", "2\uff0e\u4e0b\u5217\u5173\u4e8e\u7ed3\u6784\u7684\u5b9a\u4e49\u4e2d\uff0c\u6709\u51e0\u5904\u9519\u8bef? \uff08C\uff09", "\nstruct d {", "\nint a;", "\ndouble a;", "\n} a,d;", "\nA\uff0e1 B\uff0e2 C\uff0e3 D\uff0e4", "3\uff0e\u4e0b\u5217\u5173\u4e8egoto\u8bed\u53e5\u7684\u63cf\u8ff0\u4e2d\uff0c\u54ea\u4e2a\u662f\u6b63\u786e\u7684? \uff08D\uff09", "\nA\uff0egoto\u8bed\u53e5\u53ef\u5728\u4e00\u4e2a\u6587\u4ef6\u4e2d\u968f\u610f\u8f6c\u5411\uff1b", "\nB\uff0egoto\u8bed\u53e5\u540e\u9762\u8981\u8ddf\u4e0a\u4e00\u4e2a\u5b83\u6240\u8f6c\u5411\u7684\u8bed\u53e5\uff1b", "\nC\uff0egoto\u8bed\u53e5\u53ef\u4ee5\u540c\u65f6\u8f6c\u5411\u591a\u6761\u8bed\u53e5\uff1b", "\nD\uff0egoto\u8bed\u53e5\u53ef\u4ee5\u4ece\u5faa\u73af\u4f53\u5185\u8f6c\u5230\u5faa\u73af\u4f53\u5916\u3002", "4\uff0e\u4e0b\u5217\u54ea\u4e00\u4e2a\u63cf\u8ff0\u662f\u5173\u4e8e\u5f15\u7528\u8c03\u7528\u7684? \uff08B\uff09", "\nA\uff0e\u5f62\u53c2\u662f\u6307\u9488\uff0c\u5b9e\u53c2\u662f\u5730\u5740\u503c\uff1b", "\nB\uff0e\u5f62\u53c2\u662f\u5f15\u7528\uff0c\u5b9e\u53c2\u662f\u53d8\u91cf\u3002", "\nC\uff0e\u5f62\u53c2\u548c\u5b9e\u53c2\u90fd\u662f\u53d8\u91cf\uff1b", "\nD\uff0e\u5f62\u53c2\u548c\u5b9e\u53c2\u90fd\u662f\u6570\u7ec4\u540d\uff1b", "\n5\uff0e\u5b9a\u4e49\u51fd\u6570\u6a21\u677f\u9700\u4f7f\u7528\u4e0b\u5217\u54ea\u4e00\u4e2a\u5173\u952e\u5b57\uff1f\uff08C\uff09", "\nA\uff0eclass B\uff0einline C\uff0etemplate D\uff0eoperator", "6\uff0e \u4e0b\u5217\u5173\u4e8e\u6210\u5458\u51fd\u6570\u7279\u5f81\u7684\u63cf\u8ff0\u4e2d\uff0c\u54ea\u4e2a\u662f\u9519\u8bef\u7684? \uff08A\uff09", "\nA\uff0e\u6210\u5458\u51fd\u6570\u4e00\u5b9a\u662f\u5185\u8054\u51fd\u6570\uff1b", "\nB\uff0e\u6210\u5458\u51fd\u6570\u53ef\u4ee5\u91cd\u8f7d\uff1b", "\nC\uff0e\u6210\u5458\u51fd\u6570\u7684\u51fd\u6570\u4f53\u53ef\u4ee5\u4e3a\u7a7a\uff1b", "\nD\uff0e\u6210\u5458\u51fd\u6570\u53ef\u4ee5\u662f\u9759\u6001\u7684\u3002", "7\uff0e \u5df2\u77e5\u4e00\u4e2a\u7c7bA, \u4e0b\u5217\u54ea\u4e2a\u662f\u6307\u5411\u6210\u5458\u51fd\u6570\u7684\u6307\u9488\uff1f\u5047\u8bbe\u7c7bA\u6709\u516c\u6709\u6210\u5458void f( )\u548c int a\u3002\uff08C\uff09", "\nA\uff0eA *p;", "\nB\uff0eint A:: *pc=& A:: a;", "\nC\uff0evoid (A:: *pa)();", "\nD\uff0eA **pp;", "8\uff0e \u4e0b\u5217\u5173\u4e8enew\u8fd0\u7b97\u7b26\u7684\u63cf\u8ff0\u4e2d\uff0c\u54ea\u4e2a\u662f\u9519\u8bef\u7684? \uff08D\uff09", "\nA\uff0e\u5b83\u53ef\u4ee5\u7528\u6765\u52a8\u6001\u521b\u5efa\u5bf9\u8c61\u548c\u5bf9\u8c61\u6570\u7ec4;", "\nB\uff0e\u4f7f\u7528\u5b83\u521b\u5efa\u7684\u5bf9\u8c61\u6216\u5bf9\u8c61\u6570\u7ec4\uff0c\u53ef\u4ee5\u4f7f\u7528delete\u5220\u9664\uff1b", "\nC\uff0e\u4f7f\u7528\u5b83\u521b\u5efa\u5bf9\u8c61\u65f6\u8981\u8c03\u7528\u6784\u9020\u51fd\u6570;", "\nD\uff0e\u4f7f\u7528\u5b83\u521b\u5efa\u5bf9\u8c61\u6570\u7ec4\u65f6\u5fc5\u987b\u6307\u5b9a\u521d\u59cb\u503c\u3002", "9\uff0e\u4e0b\u5217\u5bf9\u6d3e\u751f\u7c7b\u7684\u63cf\u8ff0\u4e2d\uff0c\u54ea\u4e2a\u662f\u9519\u8bef\u7684? \uff08B\uff09", "\nA\uff0e\u4e00\u4e2a\u6d3e\u751f\u7c7b\u53ef\u4ee5\u4f5c\u53e6\u4e00\u4e2a\u6d3e\u751f\u7c7b\u7684\u57fa\u7c7b;", "\nB\uff0e\u6d3e\u751f\u7c7b\u4e2d\u7ee7\u627f\u7684\u57fa\u7c7b\u6210\u5458\u7684\u8bbf\u95ee\u6743\u9650\u5230\u6d3e\u751f\u7c7b\u4ecd\u7136\u4fdd\u6301\u4e0d\u53d8\u3002", "\nC\uff0e\u6d3e\u751f\u7c7b\u81f3\u5c11\u6709\u4e00\u4e2a\u57fa\u7c7b\uff1b", "\nD\uff0e\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u9664\u4e86\u81ea\u5df1\u7684\u6210\u5458\u5916\uff0c\u8fd8\u5305\u542b\u5b83\u7684\u57fa\u7c7b\u7684\u6210\u5458;", "10\uff0e\u4e0b\u5217\u8fd0\u7b97\u7b26\u4e2d\uff0c\u54ea\u4e00\u4e2a\u4e0d\u80fd\u91cd\u8f7d? \uff08D\uff09", "\nA\uff0e<< B\uff0e>> C\uff0e( ) D\uff0e?:", "\u4e09\u3001\u8bd5\u7f16\u5199\u6c42\u4e24\u4e2a\u6570\u4e2d\u6700\u5c0f\u503c\u7684\u51fd\u6570\u6a21\u677f\u3002\uff08\u5206\uff09", "\u56db\u3001\u8f93\u5165\u4e00\u5b57\u7b26\u4e32\uff0c\u53bb\u6389\u5f53\u4e2d\u7684\u91cd\u590d\u5b57\u7b26\u3002\u5982\u5b57\u7b26\u4e32\u201cABADB\u201d\uff0c \u53bb\u6389\u91cd\u590d\u5b57\u7b26\u540e\u7684\u5b57\u7b26\u4e32\u5e94\u4e3a\u201cABD\u201d\u3002\uff08\u5206\uff09", "\u4e94\u3001\u6c42\u4e0b\u5217\u5206\u6570\u5e8f\u5217\u7684\u524d15\u9879\u4e4b\u548c\u3002\uff08\u5206\uff09", "\u516d\u3001\u4e0b\u9762\u662f\u4e00\u4e2a\u5229\u7528\u91cd\u8f7d\u8fd0\u7b97\u7b26\u5b9e\u73b0\u590d\u6570\u52a0\u548c\u4e58\u7684\u7c7b\u3002\u5728\u8be5\u7c7b\u4e2d\u590d\u6570\u52a0\u8fd0\u7b97\u7684\u5b9e\u73b0\u4ee3\u7801\u5df2\u5b8c\u6210\uff0c\u4f46\u590d\u6570\u4e58\u8fd0\u7b97\u8fd8\u672a\u5b8c\u6210\uff0c\u8bd5\u5728\u7c7b\u4f53\u5916\u5b8c\u6210\u4e4b\u3002\uff08\u5206\uff09", "class complex", "\n{", "\npublic:", "\ncomplex (double r=0,double i=0) { real=r; imag=i;}", "\ncomplex operator + (const complex & c)", "\n{ return complex(real+c.real, imag+c.imag); }", "\ncomplex operator * (const complex & c);", "\nprivate:", "\ndouble real, imag;", "\n};", "\u4e03\u3001\u627e\u51fa\u4e0b\u5217\u7a0b\u5e8f\u4e2d\u7684\u8bed\u6cd5\u9519\u8bef\uff0c\u5e76\u6ce8\u660e\u51fa\u9519\u7c7b\u578b\u3002\uff08\u5206\uff09", "\nclass A", "\n{ virtual A( ){ };", "\n};", "\nclass B: A", "\n{ };", "\nint add(int x, int y, int z=10)", "\n{ return x+y+z; }", "\nint add(int x, int y)", "\n{ return x+y; }", "\nvoid main( )", "\n{ int x;", "\nconst int z=5;", "\nint &y=x+1;", "\nz=x;", "\nx=&z;", "\nadd(1, 2);", "\nif(x==1) continue;", "\nx = new int[5];", "\nreturn 1;", "\n}", "\u516b\u3001\u5206\u6790\u4e0b\u5217\u7a0b\u5e8f\uff0c\u5e76\u56de\u7b54\u540e\u9762\u7684\u95ee\u9898\u3002\uff08\u5206\uff09", "\n\u7a0b\u5e8f\u5185\u5bb9\u5982\u4e0b\uff1a", "\n#include <iostream.h>", "\nclass A", "\n{", "\npublic:", "\nA(int i=0, int j=0){ a1=i; a2=j;}", "\nvirtual void Print( )", "\n{", "\ncout<<a1+a2<<endl;", "\n}", "\nprotected:", "\nint a1,a2;", "\n};", "class B: public A", "\n{", "\npublic:", "\nB(int i=0, int j=0): A(i,j){}", "\nvoid Print()", "\n{", "\ncout<<a1-a2<<endl;", "\n}", "\n};", "class C: public A", "\n{", "\npublic:", "\nC(int i=0, int j=0): A(i,j){}", "\nvoid Print()", "\n{", "\ncout<<a1*a2<<endl;", "\n}", "\n};", "void main()", "\n{ int i=10, j=8;", "\nA a(i, j);", "\nB b(i, j);", "\nC c(i, j);", "\nA *m[3]={&c, &b, &a};", "\nfor(int n=0; n<3; n++) m[n]->Print();", "\nA &ra=c;", "\nra.Print();", "\nA aa=c;", "\naa.Print();", "\n}", "\u8bf7\u56de\u7b54\u4e0b\u5217\u95ee\u9898\uff1a", "\n\uff081\uff09\u6267\u884c\u8be5\u7a0b\u5e8f\u540e\uff0c\u8f93\u51fa\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f", "\n\uff082\uff09\u8be5\u7a0b\u5e8f\u4e2d\u54ea\u4e9b\u8bed\u53e5\u91c7\u7528\u4e86\u52a8\u6001\u8054\u7f16\uff1f", "\n\uff083\uff09\u53bb\u6389virtual void Print( )\u4e2d\u7684\u5173\u952e\u5b57virtual\u540e\uff0c\u8be5\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f", "\u4e5d\u3001\u5206\u6790\u4e0b\u5217\u7a0b\u5e8f\uff0c\u5e76\u56de\u7b54\u540e\u9762\u7684\u95ee\u9898\u3002\uff08\u5206\uff09", "\n\u7a0b\u5e8f\u5185\u5bb9\u5982\u4e0b\uff1a", "\n#include <iostream.h>", "\nclass A", "\n{", "\npublic:", "\nA(int i){", "\na=i;", "\ncout<<\u201da=\u201d<<a<<endl;", "\n}", "\n~A(){ cout<<\u201dA\u2019s destructor \u201c<<a<<endl; }", "\nint a;", "\n};", "\nclass B: virtual public A", "\n{", "\npublic:", "\nB(int i, int j): A(i) { cout<<\u201dB:\u201d<<j<<endl; }", "\n};", "class C: virtual public A", "\n{", "\npublic:", "\nC(int i, int j): A(i)", "\n{ cout<<\u201dC:\u201d<<i+j<<endl; }", "\n};", "\nclass D: public B, public C", "\n{", "\npublic:", "\nD(int k1, int k2, int k3, int k4): B(k1,k2), C(k4,k3), A(k1)", "\n{", "\ncout<<\u201dD:\u201d<<k4<<endl;", "\n}", "\n};", "\nvoid main()", "\n{ D d(1,2,3,4);", "\nA a(5);", "\na=A(6);", "\ncout<<\u201da.a=\u201d<<a.a<<endl;", "\ncout<<\u201dd.a=\u201d<<d.a<<endl;", "\n}", "\u8bf7\u56de\u7b54\u4e0b\u5217\u95ee\u9898\uff1a", "\n\uff081\uff09\u6267\u884c\u8be5\u7a0b\u5e8f\u540e\uff0c\u8f93\u51fa\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f", "\n\uff082\uff09\u53bb\u6389class B: virtual public A \u548cclass C: virtual public A\u4e2d\u7684\u5173\u952e\u5b57virtual\u540e\uff0c\u8be5\u7a0b\u5e8f\u7684\u54ea\u4e2a\u8bed\u53e5\u7684\u6267\u884c\u4f1a\u51fa\u73b0\u4e8c\u4e49\u6027\uff1f", "\n\uff083\uff09\u5c06class D: public B, public C\u4fee\u6539\u6210class D: public C, public B\u540e\uff0c\u8f93\u51fa\u7ed3\u679c\u662f\u5426\u6709\u53d8\u5316\uff1f", "\n\uff084\uff09\u5c06B(k1,k2), C(k4,k3), A(k1) \u4fee\u6539\u6210C(k4,k3), B(k1,k2), A(k1)\u540e\uff0c\u8f93\u51fa\u7ed3\u679c\u662f\u5426\u6709\u53d8\u5316\uff1f"], "title": "\u6574\u7406\u4e4bc++\u7b14\u8bd52"},
{"contents": ["1. \u00b7\u4e0d\u80fd\u58f0\u660e\u4e3a\u865a\u51fd\u6570\u7684\u51fd\u6570\u662f \uff0c\u4e0d\u80fd\u505aswitch()\u7684\u53c2\u6570\u7c7b\u578b\u662f", "\n\u00b7\u5192\u6ce1\u6392\u5e8f\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f \uff0c\u5bfc\u81f4\u5806\u6808\u6ea2\u51fa\u7684\u539f\u56e0\u662f", "\n\u00b7\u5e73\u8861\u4e8c\u53c9\u6811\u662f\u6307", "\n\u00b7float x \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684if\u8bed\u53e5\u662f", "\n\u00b7static\u7684\u7528\u9014\u662f\uff08\u8bf7\u81f3\u5c11\u8bf4\u660e\u4e24\u79cd\uff09", "\n\u00b7Internet\u91c7\u7528\u7684\u7f51\u7edc\u534f\u8bae\u662f \uff0c\u8be5\u534f\u8bae\u7684\u4e3b\u8981\u5c42\u6b21\u7ed3\u6784\u662f", "\n\u00b7\u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u5728\u5185\u5b58\u4e2d\u7684\u533a\u522b\u662f", "\n\u00b7\u5f15\u7528\u4e0e\u6307\u9488\u7684\u533a\u522b\u662f", "\n2. \u8bf7\u95ee\u5982\u4e0b\u7a0b\u5e8f\u4e2da\u6700\u540e\u7684\u503c\u4e3a\u591a\u5c11", "\n#define SQR(X) X*X", "\nvoid Func0()", "\n{", "\nintk = 2, m = 3;", "\ninta = SQR( SQR( m + k ) + k );", "\nprintf( \u201d a= %d\\n\u201d, a );", "\n}", "\n3. \u7528\u6237\u8f93\u5165M\uff0cN\u503c\uff0c\u4ece1\u81f3N\uff0c\u987a\u5e8f\u5faa\u73af\u6570\u6570\uff0c\u6bcf\u6570\u5230M\u53d6\u51fa\u8be5\u6570\u503c\uff0c\u76f4\u81f3\u5168\u90e8\u6570\u636e\u53d6\u51fa\u3002\u6309\u7167\u53d6\u51fa\u987a\u5e8f\u8f93\u51fa\u6240\u6709\u53d6\u51fa\u6570\u636e\u3002\u5199\u51faC\u7a0b\u5e8f\u3002", "4. \u5b8c\u6210\u51fd\u6570int ReverseAndCount( char* src, char* substr )\uff0c\u628a\u5b57\u7b26\u4e32src\u5012\u5e8f\uff08\u5982\u201cabcd\u201d\u5012\u5e8f\u540e\u53d8\u4e3a\u201cdcba\u201d\uff09\uff0c\u540c\u65f6\u8ba1\u7b97\u5012\u5e8f\u540e\u7684\u5b57\u7b26\u4e32\u4e2d\u6709\u591a\u5c11\u4e2a\u5b50\u5b57\u7b26\u4e32substr\u3002\u51fd\u6570\u6700\u540e\u8fd4\u56de\u5b50\u5b57\u7b26\u4e32\u7684\u4e2a\u6570\u3002\uff08\u63d0\u793a\uff1a\u53ef\u4ee5\u5199\u4e24\u4e2a\u51fd\u6570\u5206\u522b\u5b8c\u6210\u5b57\u7b26\u4e32\u5012\u5e8f\u8ddf\u8ba1\u7b97\u5b50\u5b57\u7b26\u4e32\u7684\u529f\u80fd\uff0c\u7136\u540e\u5728\u4e3b\u51fd\u6570\u91cc\u8c03\u7528\u8fd9\u4e24\u4e2a\u51fd\u6570\uff09", "5. \u4f60\u662f\u5c71\u897f\u7684\u4e00\u4e2a\u7164\u8001\u677f\uff0c\u4f60\u5728\u77ff\u533a\u5f00\u91c7\u4e86\u67093000\u5428\u7164\u9700\u8981\u8fd0\u9001\u5230\u5e02\u573a\u4e0a\u53bb\u5356\uff0c\u4ece\u4f60\u7684\u77ff\u533a\u5230\u5e02\u573a\u67091000\u516c\u91cc\uff0c\u4f60\u624b\u91cc\u6709\u4e00\u5217\u70e7\u7164\u7684\u706b\u8f66\uff0c\u8fd9\u4e2a\u706b\u8f66\u6700\u591a\u53ea\u80fd\u88c51000\u5428\u7164\uff0c\u4e14\u5176\u80fd\u8017\u6bd4\u8f83\u5927\u2014\u2014\u6bcf\u4e00\u516c\u91cc\u9700\u8981\u8017\u4e00\u5428\u7164\u3002\u8bf7\u95ee\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u61c2\u7f16\u7a0b\u7684\u7164\u8001\u677f\u7684\u4f60\uff0c\u4f60\u4f1a\u600e\u4e48\u8fd0\u9001\u624d\u80fd\u8fd0\u6700\u591a\u7684\u7164\u5230\u96c6\u5e02\uff1f"], "title": "\u5929\u5730\u6e38\u516c\u53f8\u6e38\u620f\u5f00\u53d1\u7b14\u8bd5\u9898"},
{"contents": ["\n\u4e0b\u5217\u5404\u9898A\uff09\u3001B\uff09\u3001C\uff09\u3001D\uff09\u56db\u4e2a\u9009\u9879\u4e2d\uff0c\u53ea\u6709\u4e00\u4e2a\u9009\u9879\u662f\u6b63\u786e\u7684\u3002", "\n\uff081\uff09\u4e0b\u5217\u6709\u5173\u5185\u8054\u51fd\u6570\u7684\u53d9\u8ff0\u4e2d\uff0c\u6b63\u786e\u7684\u662f \uff08 D \uff09", "\nA\uff09\u5185\u8054\u51fd\u6570\u5728\u8c03\u7528\u65f6\u53d1\u751f\u63a7\u5236\u8f6c\u79fb B\uff09\u4f7f\u7528\u5185\u8054\u51fd\u6570\u6709\u5229\u4e8e\u4ee3\u7801\u91cd\u7528", "\nC\uff09\u5fc5\u987b\u901a\u8fc7\u5173\u952e\u5b57inline\u6765\u5b9a\u4e49 D\uff09\u662f\u5426\u6700\u540e\u5185\u8054\u7531\u7f16\u8bd1\u5668\u51b3\u5b9a", "\n\uff082\uff09\u4e0b\u5217\u60c5\u51b5\u4e2d\uff0c\u54ea\u4e00\u79cd\u60c5\u51b5\u4e0d\u4f1a\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570 \uff08 B \uff09", "\nA\uff09\u7528\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u53bb\u521d\u59cb\u5316\u57fa\u7c7b\u5bf9\u8c61\u65f6", "\nB\uff09\u5c06\u7c7b\u7684\u4e00\u4e2a\u5bf9\u8c61\u8d4b\u503c\u7ed9\u8be5\u7c7b\u7684\u53e6\u4e00\u4e2a\u5bf9\u8c61\u65f6", "\nC\uff09\u51fd\u6570\u7684\u5f62\u53c2\u662f\u7c7b\u7684\u5bf9\u8c61\uff0c\u8c03\u7528\u51fd\u6570\u8fdb\u884c\u5f62\u53c2\u548c\u5b9e\u53c2\u7ed3\u5408\u65f6", "\nD\uff09\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u7c7b\u7684\u5bf9\u8c61\uff0c\u51fd\u6570\u6267\u884c\u8fd4\u56de\u8c03\u7528\u8005\u65f6", "\n\uff083\uff09\u4ee5\u4e0b\u54ea\u4e00\u5173\u952e\u5b57\u53ef\u7528\u4e8e\u91cd\u8f7d\u51fd\u6570\u7684\u533a\u5206\uff08 C \uff09", "\nA\uff09extern B\uff09static C\uff09const D\uff09virtual", "\n\uff084\uff09\u4e0b\u5217\u6709\u5173\u6570\u7ec4\u7684\u53d9\u8ff0\u4e2d\uff0c\u6b63\u786e\u7684\u662f\uff08 B \uff09", "\nA\uff09C++\u4e2d\u6570\u7ec4\u7684\u5b58\u50a8\u65b9\u5f0f\u4e3a\u5217\u4f18\u5148\u5b58\u50a8", "\nB\uff09\u6570\u7ec4\u540d\u53ef\u4ee5\u4f5c\u4e3a\u5b9e\u53c2\u8d4b\u503c\u7ed9\u6307\u9488\u7c7b\u578b\u7684\u5f62\u53c2", "\nC\uff09\u6570\u7ec4\u4e0b\u6807\u7d22\u5f15\u4ece1\u5f00\u59cb\uff0c\u81f3\u6570\u7ec4\u957f\u5ea6n\u7ed3\u675f", "\nD\uff09\u6570\u7ec4\u6307\u9488\u7684\u8bed\u6cd5\u5f62\u5f0f\u4e3a\uff1a\u7c7b\u578b\u540d *\u6570\u7ec4\u540d[\u4e0b\u6807\u8868\u8fbe\u5f0f];", "\n\uff085\uff09\u4e0b\u5217\u6709\u5173\u7ee7\u627f\u548c\u6d3e\u751f\u7684\u53d9\u8ff0\u4e2d\uff0c\u6b63\u786e\u7684\u662f( C )", "\nA\uff09\u6d3e\u751f\u7c7b\u4e0d\u80fd\u8bbf\u95ee\u901a\u8fc7\u79c1\u6709\u7ee7\u627f\u7684\u57fa\u7c7b\u7684\u4fdd\u62a4\u6210\u5458", "\nB\uff09\u591a\u7ee7\u627f\u7684\u865a\u57fa\u7c7b\u4e0d\u80fd\u591f\u5b9e\u4f8b\u5316", "\nC\uff09\u5982\u679c\u57fa\u7c7b\u6ca1\u6709\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u6d3e\u751f\u7c7b\u5c31\u5e94\u5f53\u58f0\u660e\u5e26\u5f62\u53c2\u7684\u6784\u9020\u51fd\u6570", "\nD\uff09\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u548c\u865a\u51fd\u6570\u90fd\u4e0d\u80fd\u591f\u88ab\u7ee7\u627f\uff0c\u9700\u8981\u5728\u6d3e\u751f\u7c7b\u4e2d\u91cd\u65b0\u5b9e\u73b0", "\n\uff086\uff09\u5b9e\u73b0\u8fd0\u884c\u65f6\u591a\u6001\u7684\u673a\u5236\u662f\uff08 A \uff09", "\nA\uff09\u865a\u51fd\u6570 B\uff09\u91cd\u8f7d\u51fd\u6570 C\uff09\u9759\u6001\u51fd\u6570 D\uff09\u6a21\u7248\u51fd\u6570", "\n\uff087\uff09\u4e0b\u5217\u5b57\u7b26\u4e32\u4e2d\uff0c\u6b63\u786e\u7684C++\u6807\u8bc6\u7b26\u662f\uff08 D \uff09", "\nA\uff09enum B\uff092b C\uff09foo-9 D\uff09_32", "\n\uff088\uff09\u82e5\u6709\u4e0b\u9762\u7684\u51fd\u6570\u8c03\u7528\uff1a", "\nfun(a+b, 3, max(n-1, b));", "\n\u5176\u4e2d\u5b9e\u53c2\u7684\u4e2a\u6570\u662f\uff08 A \uff09", "\nA\uff093 B\uff094 C\uff095 D\uff096", "\n\uff089\uff09\u4ee5\u4e0b\u54ea\u4e2a\u5173\u952e\u5b57\u5bf9\u5e94\u7684\u5c5e\u6027\u7834\u574f\u4e86\u7a0b\u5e8f\u7684\u5c01\u88c5\u6027\uff08 B \uff09", "\nA\uff09const B\uff09friend C\uff09public D\uff09protected", "\n\uff0810\uff09\u4ee5\u4e0b\u54ea\u4e2a\u7b26\u53f7\uff08\u6216\u7ec4\u5408\uff09\u662f\u4f5c\u7528\u57df\u9650\u5b9a\u7b26\uff08 C \uff09", "\nA\uff09-> B\uff09. C\uff09:: D\uff09[]", "\n\uff0811\uff09\u4e0b\u5217\u5173\u4e8ethis\u6307\u9488\u7684\u8bf4\u6cd5\u6b63\u786e\u7684\u662f\uff08 B \uff09", "\nA\uff09this\u6307\u9488\u5b58\u5728\u4e8e\u6bcf\u4e2a\u51fd\u6570\u4e4b\u4e2d", "\nB\uff09\u5728\u7c7b\u7684\u975e\u9759\u6001\u51fd\u6570\u4e2dthis\u6307\u9488\u6307\u5411\u8c03\u7528\u8be5\u51fd\u6570\u7684\u5bf9\u8c61", "\nC\uff09this\u6307\u9488\u662f\u6307\u5411\u865a\u51fd\u6570\u8868\u7684\u6307\u9488", "\nD\uff09this\u6307\u9488\u662f\u6307\u5411\u7c7b\u7684\u51fd\u6570\u6210\u5458\u7684\u6307\u9488", "\n\uff0812\uff09\u5728\u4e0b\u5217\u5173\u4e8eC++\u51fd\u6570\u7684\u53d9\u8ff0\u4e2d\uff0c\u6b63\u786e\u7684\u662f\uff08 C \uff09", "\nA\uff09\u6bcf\u4e2a\u51fd\u6570\u81f3\u5c11\u8981\u6709\u4e00\u4e2a\u53c2\u6570 B\uff09\u6bcf\u4e2a\u51fd\u6570\u90fd\u5fc5\u987b\u8fd4\u56de\u4e00\u4e2a\u503c", "\nC\uff09\u51fd\u6570\u5728\u88ab\u8c03\u7528\u4e4b\u524d\u5fc5\u987b\u5148\u58f0\u660e D\uff09\u51fd\u6570\u4e0d\u80fd\u81ea\u5df1\u8c03\u7528\u81ea\u5df1", "\n\uff0813\uff09\u4e0b\u5217\u8fd0\u7b97\u7b26\u4e2d\uff0c\u4e0d\u80fd\u91cd\u8f7d\u7684\u662f \uff08 C \uff09", "\nA\uff09&& B\uff09!= C\uff09. D\uff09->", "\n\uff0814\uff09\u5bf9\u4e8e\u7c7b\u7684\u5e38\u6210\u5458\u51fd\u6570\u7684\u63cf\u8ff0\u6b63\u786e\u7684\u662f\uff08 A \uff09", "\nA\uff09\u5e38\u6210\u5458\u51fd\u6570\u4e0d\u4fee\u6539\u7c7b\u7684\u6570\u636e\u6210\u5458", "\nB\uff09\u5e38\u6210\u5458\u51fd\u6570\u53ef\u4ee5\u5bf9\u7c7b\u7684\u6570\u636e\u6210\u5458\u8fdb\u884c\u4fee\u6539", "\nC\uff09\u5e38\u6210\u5458\u51fd\u6570\u53ea\u80fd\u7531\u5e38\u5bf9\u8c61\u8c03\u7528", "\nD\uff09\u5e38\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u8bbf\u95ee\u7c7b\u7684\u6570\u636e\u6210\u5458", "\n\uff0815\uff09\u4f7f\u7528\u5982setw()\u7684\u64cd\u4f5c\u7b26\u5bf9\u6570\u636e\u8fdb\u884c\u683c\u5f0f\u8f93\u51fa\u65f6\uff0c\u5e94\u5305\u542b\u7684\u5934\u6587\u4ef6\u662f\uff08 D \uff09", "\nA\uff09iostream B\uff09fstream C\uff09stdio D\uff09iomanip", "\n\uff0816\uff09\u82e5\u6709\u4ee5\u4e0b\u7c7b\u5b9a\u4e49", "\nclass MyClass {", "\npublic:", "\nMyClass() { cout << 1; }", "\n};", "\n\u5219\u6267\u884c\u8bed\u53e5MyClass a,b[2],*p[2];\u540e\uff0c\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff08 B \uff09", "\nA\uff0911 B\uff09111 C\uff091111 D\uff0911111", "\n\uff0817\uff09\u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff08 B \uff09", "\n#include <iostream>", "\nusing namespace std;", "\nint i = 0;", "\nint fun(int n)", "\n{", "\nstatic int a = 2;", "\na++;", "\nreturn a+n;", "\n}", "\nvoid main()", "\n{", "\nint k = 5;", "\n{", "\nint i = 2;", "\nk += fun(i);", "\n}", "\nk += fun(i);", "\ncout << k;", "\n}", "\nA\uff0913 B\uff0914 C\uff0915 D\uff0916", "\uff0818\uff09\u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff08 A \uff09", "\n#include <iostream >", "\nusing namespace std;", "\nvoid swap1( int &v1, int &v2)", "\n{", "\nint tmp = v2;v2 = v1;v1 = tmp;", "\n}", "\nvoid swap1( int *v1, int *v2)", "\n{", "\nint tmp= *v2;*v2 = *v1;*v1 = tmp;", "\n}", "\nvoid main()", "\n{", "\nint i = 10, j = 20; swap1(i,j); swap1(&i,&j);", "\ncout<<i<<\u201d,\u201d<<j<<endl;", "\n}", "\nA\uff0910,20 B\uff0920,10 C\uff0910,10 D\uff0920,20", "\n\uff0819\uff09\u4e0b\u9762\u7684\u7a0b\u5e8f\u6bb5\u7684\u8fd0\u884c\u7ed3\u679c\u4e3a\uff08 D \uff09", "\nchar str[] = \u201cjob\u201d, *p = str;", "\ncout << *(p+2) << endl;", "\nA\uff0998 B\uff09\u65e0\u8f93\u51fa\u7ed3\u679c C\uff09\u5b57\u7b26\u2019b\u2019\u7684\u5730\u5740 D\uff09\u5b57\u7b26\u2019b\u2019", "\n\uff0820\uff09\u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff08 C \uff09", "\n#include <iostream>", "\nusing namespace std;", "\nclass A", "\n{", "\npublic:", "\nA (int i) { x = i; }", "\nvoid dispa () { cout << x << \u201c,\u201d; }", "\nprivate :", "\nint x ;", "\n};", "\nclass B : public A", "\n{", "\npublic:", "\nB(int i) : A(i+10) { x = i; }", "\nvoid dispb() { dispa(); cout << x << endl; }", "\nprivate :", "\nint x ;", "\n};", "\nvoid main()", "\n{", "\nB b(2);", "\nb.dispb();", "\n}", "\nA\uff0910,2 B\uff0912,10 C\uff0912,2 D\uff092,2", "\n\uff0821\uff09\u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff08 C \uff09", "\n#include <iostream>", "\nusing namespace std;", "\nclass Base", "\n{", "\npublic:", "\nBase(int i) { cout << i; }", "\n~Base () { }", "\n};", "\nclass Base1: virtual public Base", "\n{", "\npublic:", "\nBase1(int i, int j=0) : Base(j) { cout << i; }", "\n~Base1() {}", "\n};", "\nclass Base2: virtual public Base", "\n{", "\npublic:", "\nBase2(int i, int j=0) : Base(j) { cout << i; }", "\n~Base2() {}", "\n};", "\nclass Derived : public Base2, public Base1", "\n{", "\npublic:", "\nDerived(int a, int b, int c, int d) : mem1(a), mem2(b), Base1(c),", "\nBase2(d), Base(a)", "\n{ cout << b; }", "\nprivate:", "\nBase2 mem2;", "\nBase1 mem1;", "\n};", "\nvoid main() { Derived objD (1, 2, 3, 4); }", "\nA\uff09134122 B\uff09123412 C\uff0914302012 D\uff09143212", "\n\uff0822\uff09\u4ee5\u4e0b\u7a0b\u5e8f\u5bf9\u4e00\u7ef4\u5750\u6807\u70b9\u7c7bPoint\u8fdb\u884c\u8fd0\u7b97\u7b26\u91cd\u8f7d\uff0c\u8f93\u51fa\u7ed3\u679c\u662f\uff08 A \uff09", "\n#include <iostream>", "\nusing namespace std;", "\nclass Point {", "\npublic:", "\nPoint (int val) { x = val; }", "\nPoint operator ++() { x++; return *this; }", "\nPoint operator ++(int) { Point old = *this; ++(*this); return old; }", "\nPoint operator +(Point a) { x += a.x; return *this; }", "\nint GetX() const { return x; }", "\nprivate:", "\nint x;", "\n};", "\nint main()", "\n{", "\nPoint a(10);", "\ncout << (++a).GetX();", "\ncout << a++.GetX();", "\n}", "\nA\uff091111 B\uff091011 C\uff091112 D\uff091010", "\n\uff0823\uff09\u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff08 C \uff09", "\n#include <iostream>", "\nusing namespace std;", "\nclass Base", "\n{", "\npublic:", "\nvirtual void f() { cout << \u201cf0+\u201d; }", "\nvoid g() { cout << \u201cg0+\u201d; }", "\n};", "\nclass Derived : public Base", "\n{", "\npublic:", "\nvoid f() { cout << \u201cf+\u201d; }", "\nvoid g() { cout << \u201cg+\u201d; }", "\n};", "\nvoid main() { Derived d; Base *p = &d; p->f(); p->g(); }", "\nA\uff09f+g+ B\uff09f0+g+ C\uff09f+g0+ D\uff09f0+g0+", "\n\uff0824\uff09\u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff08 C \uff09", "\n#include <iostream>", "\nusing namespace std;", "\nint countp=0;", "\nclass Point", "\n{", "\nint X,Y;", "\npublic:", "\nPoint(int x=0,int y=0) { X=x; Y=y;}", "\nPoint(Point &p){X=p.X;Y=p.Y;countp++;}", "\nfriend Point myfun(Point p1 ,Point p2 ,const Point &p3);", "\n};", "\nPoint myfun(Point p1,Point p2,const Point &p3)", "\n{", "\nPoint tmp(p1.X+p2.X+p3.X,p1.Y+p2.Y+p3.Y);", "\nreturn tmp;", "\n}", "\nvoid main()", "\n{", "\nPoint pp0,pp1(1,2),pp2(1);", "\nmyfun(pp0,pp1,pp2);", "\nstd::cout<<countp<<endl;", "\n}", "\nA\uff090 B\uff094 C\uff093 D\uff096", "\n\uff0825\uff09\u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff08 C \uff09", "\n#include <iostream>", "\nusing namespace std;", "\nclass Sample", "\n{", "\nfriend long fun (Sample s)", "\n{", "\nif (s.x < 2) return 1;", "\nreturn s.x * fun(Sample(s.x-1));", "\n}", "\npublic:", "\nSample (long a) { x = a; }", "\nprivate:", "\nlong x;", "\n};", "\nvoid main()", "\n{", "\nint sum = 0;", "\nfor (int i=0; i<6; i++)", "\n{", "\nsum += fun(Sample(i));", "\n}", "\ncout << sum;", "\n}", "\nA\uff09120 B\uff0916 C\uff09154 D\uff0934", "\n\uff081\uff09\u4ee5\u4e0b\u7a0b\u5e8f\u662f\u7528\u6765\u8ba1\u7b97\u5c0f\u4e8e16\u7684\u6574\u6570\u7684\u9636\u4e58\uff0c\u8bf7\u8865\u5145\u5b8c\u6574\u3002", "\n#include<iostream>", "\nusing namespace std;", "\nconst int ArSize =16;", "\nvoid main()", "\n{", "\ndouble fac[ArSize];", "\nfac[1] =fac[0] =1.0;", "\nfor(int i=2;i<ArSize;i++)", "\nfac = i*fac[i-1] ;", "\n}", "\n\uff082\uff09\u4e0b\u9762\u662f\u4e2aCat\u7c7b\u7684\u58f0\u660e\u4e0e\u4f7f\u7528\uff0c\u8bf7\u8865\u5145\u5b8c\u6574\u3002", "\n#include <iostream>", "\nusing namespace std;", "\nclass Cat", "\n{", "\nstatic int count;", "\npublic:", "\nCat() { count++; cout << \u201cNow cat number is\u201d <<count << endl; }", "\n~Cat() { count\u2013; cout << \u201d Now cat number is \u201d << count << endl; }", "\n};", "\nint Cat::count =0;", "\nint main()", "\n{", "\nCat a, b, c;", "\nreturn 0;", "\n}", "\n\uff083\uff09\u5c06\u4e0b\u9762\u7684MyPoint\u7c7b\u5b9a\u4e49\u8865\u5145\u5b8c\u6574\uff0c\u4f7f\u5f97\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff0810\uff0c10\uff09\uff085\uff0c5\uff09", "\n#include <iostream>", "\nclass MyPoint", "\n{", "\npublic:", "\nMyPoint(int xx=5, int yy=5)", "\n{ X = xx;", "\nY = yy;", "\nstd::cout<<\u201d(\u201c<<X<<\u201d,\u201d<<Y<<\u201d) \u201c;}", "\nprivate:", "\nint X, Y;", "\n} ;", "\nvoid main()", "\n{", "\nMyPoint a(10,10),b;", "\n}", "\n\uff084\uff09\u5df2\u77e5\u6587\u4ef6\u4e4b\u95f4\u5177\u6709\u4ee5\u4e0b\u7684\u5305\u542b\u5173\u7cfb\uff08\u7528#include\u6307\u4ee4\uff09\uff1apoint.cpp \u5305\u542b point.h\uff0cpoint.cpp \u5305\u542b line.h\uff0cline.h\u5305\u542b point.h\u3002\u90a3\u4e48\u5982\u4e0b\u7684point.h\u6587\u4ef6\u7f3a\u5c11\u4ec0\u4e48\u8bed\u53e5\uff0c\u8bf7\u8865\u5145\u5b8c\u6574\u3002", "\n// Point\u7c7b\u7684\u58f0\u660e\uff0cpoint.h", "\n#ifndef _POINT_H_", "\n#define _POINT_H_", "\nclass Point", "\n{", "\n\u2026", "\n} ;", "\n#endif", "\n\uff085\uff09\u4e0b\u5217\u51fd\u6570\u7684\u529f\u80fd\u662f\u5224\u65ad\u5b57\u7b26\u4e32str\u662f\u5426\u5bf9\u79f0\uff0c\u5bf9\u79f0\u5219\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56defalse\u3002\u8bf7\u5728\u6a2a\u7ebf\u5904\u586b\u4e0a\u9002\u5f53\u5185\u5bb9\uff0c\u5b9e\u73b0\u8be5\u51fd\u6570\u3002", "\nbool fun (char *str)", "\n{", "\nint i=0, j=0;", "\nwhile (str[j]) j++;", "\nfor(j\u2013; i<j && str==str[j]; i++, j\u2013);", "\nreturn i>=j ;", "\n}", "\n\uff086\uff09\u8bf7\u5c06\u4e0b\u5217\u7a0b\u5e8f\u8865\u5145\u5b8c\u6574\uff0c\u4f7f\u5f97\u8f93\u51fa\u7ed3\u679c\u4e3a\u201cDestructor Derived Destructor Base\u201d\u3002", "\n#include <iostream>", "\nusing namespace std;", "\nclass Base", "\n{", "\npublic:", "\nvirtual ~Base () { cout << \u201cDestructor Base\u201d<< endl; }", "\n};", "\nclass Derived : public Base", "\n{", "\npublic:", "\n~Derived(){ cout << \u201cDestructor Derived\u201d << endl; }", "\n}\uff1b", "\nvoid main ()", "\n{", "\nBase *pBase = new Derived;", "\ndelete pBase ;", "\n}", "\n\uff087\uff09\u5982\u6709\u4e0b\u5217\u7a0b\u5e8f\uff1a", "\n#include <iostream>", "\nusing namespace std;", "\nclass Demo", "\n{", "\npublic:", "\nDemo(){cout<<\u201ddefault constructor\\n\u201d;}", "\nDemo(const Demo &x){cout<<\u201dcopy constructor\\n\u201d;}", "\n};", "\nDemo userCode(Demo b){Demo c(b);return c;}", "\nvoid main()", "\n{", "\nDemo a,d;", "\ncout<<\u201dcalling userCode()\\n\u201d;", "\nd = userCode(a);", "\n}", "\n\u6267\u884c\u4e0a\u9762\u7684\u7a0b\u5e8f\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6784\u9020\u51fd\u6570Demo()\u548cDemo(const Demo &x)\u88ab\u8c03\u7528\u7684\u6b21\u6570\u5206\u522b\u662f 2 \u548c 3 \u6b21\u3002", "\u4e09\u3001\u7a0b\u5e8f\u9898\uff0830\u5206\uff0c\u6bcf\u989810\u5206\uff09", "\n\uff081\uff09\u7a0b\u5e8f\u6539\u9519", "\n\u6bcf\u4e2a\u6ce8\u91ca\u201c// ERROR\u201d\u6240\u5728\u7684\u4e00\u884c\u8bed\u53e5\u5b58\u5728\u9519\u8bef\u3002\u8bf7\u6539\u6b63\u8fd9\u4e9b\u9519\u8bef\uff0c\u4f7f\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a", "\n00:00:00", "\n01:37:19", "\n\u6ce8\u610f\uff1a\u53ea\u9700\u4fee\u6539\u6ce8\u91ca\u201c// ERROR\u201d\u6240\u5728\u7684\u90a3\u4e00\u884c\u8bed\u53e5\uff0c\u4e0d\u8981\u6539\u52a8\u7a0b\u5e8f\u4e2d\u7684\u5176\u4ed6\u5185\u5bb9\u3002", "\n#include<iostream>", "\n#include<iomanip>", "\nusing namespace std;", "\nclass StopWatch //\u201d\u79d2\u8868\u201d\u7c7b", "\n{", "\nint hours; //\u5c0f\u65f6", "\nint minutes; //\u5206\u949f", "\nint seconds; //\u79d2", "\npublic:", "\nStopWatch():hours(0), minutes (0), seconds(0){}", "\nvoid reset(){hours=minutes=seconds=0;}", "\n//\u524d\u8fdb1\u79d2", "\nStopWatch& operator++() // ERROR \u2460", "\n{", "\nif(seconds==60) // ERROR \u2461", "\n{", "\nseconds=0;", "\nif(++minutes==60)", "\n{", "\nminutes=0;", "\n++hours;", "\n}", "\n}", "\nreturn *this;", "\n}", "friend void show(StopWatch);", "\n};", "\nvoid show(StopWatch watch)", "\n{", "\ncout<<setfill(\u2018*\u2019); // ERROR \u2462", "\ncout<<setw(2)<<watch.hours<<\u2019:\u2019", "\n<<setw(2)<<watch.minutes<<\u2019:\u2019", "\n<<setw(2)<<watch.seconds<<endl;", "\n}", "\nint main()", "\n{", "\nStopWatch sw;", "\nshow(sw);", "\nfor(int i=0;i<5839;i++)", "\nsw++;", "\nshow(sw);", "\nreturn 0;", "\n}", "\n\u89e3\u7b54\uff1a", "\n\u2460\uff1a StopWatch& operator++(int) (4\u5206)", "\n\u2461\uff1a if(++seconds==60) \uff083\u5206\uff09", "\n\u2462\uff1a cout<<setfill(\u20190\u2032); \uff083\u5206\uff09", "\n\uff082\uff09\u8bed\u53e5\u586b\u7a7a", "\n\u4e0b\u9762\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u5ba0\u7269\u7c7b\uff0c\u8bf7\u4f60\u5728\u7a7a\u884c\u4e0a\u586b\u5165\u5408\u9002\u7684\u8bed\u53e5\uff0c\u4f7f\u7a0b\u5e8f\u5b8c\u6574\u3002\uff08\u6bcf\u7a7a2\u5206\uff09", "\n#include <iostream>", "\nenum Pets_type{dog,cat,bird,fish};", "\nclass Pets", "\n{", "\nprivate:", "\nchar *name;", "\nPets_type type;", "\npublic:", "\nPets(const char *n=\u201dsonny\u201d,int type1 = 0);", "\nPets(const Pets &s);", "\nPets& operator=(const Pets &s);", "\n~Pets();", "\n};", "\nPets::Pets(const char *n,int type1) //\u6784\u9020\u51fd\u6570", "\n{", "\nname = new char[strlen(n) + 1];", "\nstrcpy(name,n);", "\ntype = Pets_type(type1);", "\n}", "\nPets::Pets(const Pets &s) //\u62f7\u8d1d\u6784\u9020\u51fd\u6570", "\n{", "\nname = new char[strlen(s.name) + 1] ;", "\nstrcpy(name,s.name);", "\ntype = s.type;", "\n}", "\nPets::~Pets() //\u6790\u6784\u51fd\u6570", "\n{", "\ndelete[] name ;", "\n}", "\nPets& Pets::operator =(const Pets &s)", "\n{", "\nif (this==&s) //\u786e\u4fdd\u4e0d\u8981\u5411\u81ea\u8eab\u8d4b\u503c", "\nreturn *this;", "\ndelete [] name;", "\nname = new char[strlen(s.name) + 1];", "\nstrcpy(name,s.name);", "\ntype = s.type;", "\nreturn *this ;", "\n}", "\nvoid main()", "\n{", "\nPets mypet1,mypet2(\u201cJohn\u201d,1),hispet(\u201cDanny\u201d,2);", "\nPets youpet(hispet);", "\nmypet1 = youpet;}", "\n3\uff09 \u7f16\u5199\u7a0b\u5e8f\u6bb5", "\n\u8865\u5145\u7f16\u5236\u4e0b\u5217\u7a0b\u5e8f\uff0c\u5176\u529f\u80fd\u662f\u4ece\u952e\u76d8\u8bfb\u53d6\u4efb\u610f\u957f\u5ea6\u7684\u6587\u672c\u5185\u5bb9\uff0c\u5c06\u6587\u672c\u5b58\u653e\u5230Doc\u7c7b\u7684\u5bf9\u8c61myDoc\u4e2d\u3002\u7136\u540e\u5728\u663e\u793a\u5668\u8f93\u51fa\u3002", "\n\u8bf7\u5728//******* begin ******\u548c//******* end *******\u4e4b\u95f4\u8865\u5145\u7a0b\u5e8f\u3002", "\n#include<iostream>", "\n#include<iomanip>", "\n#include<cstring>", "\nusing namespace std;", "\nclass Doc", "\n{", "\nprivate:", "\nstatic const int MaxLength; // \u53ef\u80fd\u7684\u6700\u5927\u6587\u672c\u5b57\u7b26\u4e32\u957f\u5ea6", "\nchar *str; // \u6587\u672c\u5b57\u7b26\u6570\u7ec4\u9996\u5730\u5740\u6307\u9488", "\nint length; // \u6587\u672c\u5b57\u7b26\u4e32\u957f\u5ea6", "\npublic:", "\nDoc(const char *s = \u201c\u201d); // \u6784\u9020\u51fd\u6570", "\n~Doc(); // \u6790\u6784\u51fd\u6570", "\n// \u91cd\u8f7distream\u7684\u63d0\u53d6\u8fd0\u7b97\u7b26", "\nfriend istream& operator>>(istream& is, Doc& doc);", "\n// \u91cd\u8f7dostream\u7684\u63d2\u5165\u8fd0\u7b97\u7b26", "\nfriend ostream& operator<<(ostream& os, Doc& doc);", "\n};", "\nconst int Doc::MaxLength=256; // \u53ef\u80fd\u7684\u6700\u5927\u6587\u672c\u5b57\u7b26\u4e32\u957f\u5ea6", "\n//\u91cd\u8f7d\u63d0\u53d6\u8fd0\u7b97\u7b26\uff0c\u4ece\u8f93\u5165\u6d41is\u63d0\u53d6\u5b57\u7b26\u4e32\uff0c\u5b58\u5165\u53c2\u6570doc\u4e2d", "\nistream& operator>>(istream& is, Doc& doc)", "\n{", "\n//\u63d0\u793a\uff1a\u4f7f\u7528is.getline\u51fd\u6570\u53ef\u4ee5\u4eceis\u6d41\u63d0\u53d6\u5b57\u7b26\u4e32\uff0c\u5305\u62ec\u7a7a\u683c\u3002", "\n//********************** begin *************************", "\nchar buffer[Doc::MaxLength];", "\nis.getline(buffer, Doc::MaxLength);", "\nint inLen = (int)strlen(buffer);", "\nif (inLen > doc.length) {", "\ndelete [] doc.str;", "\ndoc.str = new char[inLen+1];", "\n}", "\nstrcpy(doc.str, buffer);", "\ndoc.length = inLen;", "\nreturn is;", "\n//******************** end *****************************", "\n}", "\nostream& operator<<(ostream& os, Doc& doc)", "\n{", "\nos << doc.str;", "\nreturn os;", "\n}", "\nDoc::Doc(const char *s) : length((s!=NULL) ? (int)strlen(s) : 0)", "\n{", "\nstr = new char[length + 1];", "\nif (s != NULL)", "\nstrcpy(str, s);", "\nelse", "\nstr[0] = \u2018\\0\u2032;", "\n}", "\nDoc::~Doc()", "\n{", "\ndelete [] str;", "\n}", "\nvoid main()", "\n{", "\nDoc myDoc(\u201cInitial String\u201d);", "\ncin >> myDoc;", "\ncout<< myDoc;"], "title": "\u6574\u7406\u4e4bc++\u7b14\u8bd5"},
{"contents": ["\u4e00\u3001\u8f93\u5165\u4e00\u4e2an \uff0c\u7136\u540e\u5728\u5c4f\u5e55\u4e0a\u6253\u5370\u51faNxN \u7684\u77e9\u9635\uff01\n", "\u4f8b\u5982\uff0c\u8f93\u5165\u4e00\u4e2a3\uff0c\u5219\n", "1 2 3\n", "8 9 4\n", "7 6 5\n", "\u8f93\u5165\u4e00\u4e2a4\uff0c\u5219\n", "1    2  3  4\n", "12 13 14 5\n", "11 16 15 6\n", "10  9  8  7\n", "\u53c2\u8003\u7b54\u6848\uff1a\n", "#include<stdio.h>\n", "#include<conio.h>\n", "#define N 10\n", "\n\u00a0", "void printCube(int a[][N],int n);\n", "\n\u00a0", "void main()\n", "{\n", "  int a[N][N],n;\n", "  printf(\u201cinput n:\\n\u201d);\n", "  scanf(\u201c%d\u201d,&n);\n", "  printCube(&a[0],n);\n", "  getch();\n", "}\n", "\n\u00a0", "void printCube(int a[][N],int n)\n", "{\n", "  int i,j,round=1;\n", "  int m=1;\n", "  for(i=0;i<n;i++)\n", "a[0]=m++;\n", "  for(i=n-1;i>=n/2;i\u2013)\n", "  {\n", "for(j=round;j<=i;j++)\n", "  a[j]=m++;\n", "for(j=i;j>=round;j\u2013)\n", "  a[j-1]=m++;\n", "for(j=i;j>round;j\u2013)\n", "  a[j-1][round-1]=m++;\n", "for(j=round;j<i;j++)\n", "  a[round][j]=m++;\n", "round++;\n", "  }\n", "  for(i=0;i<n;i++){\n", "for(j=0;j<n;j++)\n", " printf(\u201c%3d\u201d,a[j]);\n", "printf(\u201c\\n\u201d);\n", "  }\n", "}\n", "\n\u00a0", "\n\u00a0", "\u4e8c\u3001\u6717\u8baf\u9762\u8bd5\u9898 \uff1a\n", "There are two int variables: a and b, don\u2019t use \u201cif\u201d, \u201c? :\u201d, \u201cswitch\u201d or other judgement statements, find out the biggest one of the two numbers.\n", "\u53c2\u8003\u7b54\u6848\uff1a\n", "\u65b9\u6848\u4e00int max = ((a+b)+abs(a-b)) / 2\n", "\n\u00a0", "\n\u00a0", "\u65b9\u6848\u4e8cint c = a -b;\n", "char *strs[2] = {\u201ca\u5927\u201d,\u201db\u5927\u201d};\n", "c = unsigned(c) >> (sizeof(int) * 8 \u2013 1);\n", "\n\u00a0", "\n\u00a0", "\u4e09\u3001\u6717\u8baf\u9762\u8bd5\u9898 \uff1a\n", "\u5982\u4f55\u6253\u5370\u51fa\u5f53\u524d\u6e90\u6587\u4ef6\u7684\u6587\u4ef6\u540d\u4ee5\u53ca\u6e90\u6587\u4ef6\u7684\u5f53\u524d\u884c\u53f7\uff1f\n", "\u53c2\u8003\u7b54\u6848\uff1a \u901a\u5e38\u4f7f\u7528\u7684\u5c31\u662f__FILE__, __LINE__\uff0c\u5728\u8c03\u8bd5\u51fd\u6570\u4e2d\u5229\u7528\u201d%s\u201d,\u201d%ld\u201d,\u6253\u5370\u5c31\u597d\u4e86\u3002\n", "\n\u00a0", "\n\u00a0", "\u56db\u3001\u6717\u8baf\u9762\u8bd5\u9898 \uff1a\n", "main\u4e3b\u51fd\u6570\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u662f\u5426\u53ef\u80fd\u4f1a\u518d\u6267\u884c\u4e00\u6bb5\u4ee3\u7801\uff0c\u7ed9\u51fa\u8bf4\u660e\uff1f\n", "\u53c2\u8003\u7b54\u6848\uff1a crt\u4f1a\u6267\u884c\u53e6\u4e00\u4e9b\u4ee3\u7801\uff0c\u8fdb\u884c\u5904\u7406\u5de5\u4f5c\u3002\n", "\u5982\u679c\u4f60\u9700\u8981\u52a0\u5165\u4e00\u6bb5\u5728main\u9000\u51fa\u540e\u6267\u884c\u7684\u4ee3\u7801\uff0c\u53ef\u4ee5\u4f7f\u7528atexit()\u51fd\u6570\uff0c\u6ce8\u518c\u4e00\u4e2a\u51fd\u6570\u3002\n", "\u8bed\u6cd5\uff1a\n", "#include <stdlib.h>\n", "int atexit(void (*function\u201d)(void));\n", "#include <stdlib.h>\n", "#include <stdio.h>\n", "\n\u00a0", "void fn1( void ), fn2( void ), fn3( void ), fn4( void );\n", "\n\u00a0", "int main( void )\n", "{\n", "  atexit( fn1 );\n", "  atexit( fn2 );\n", "  atexit( fn3 );\n", "  atexit( fn4 );\n", "  printf( \u201cThis is executed first.\\n\u201d );\n", "}\n", "\n\u00a0", "void fn1()\n", "{\n", "  printf( \u201cnext.\\n\u201d );\n", "}\n", "\n\u00a0", "void fn2()\n", "{\n", "  printf( \u201cexecuted \u201d );\n", "}\n", "\n\u00a0", "void fn3()\n", "{\n", "  printf( \u201cis \u201d );\n", "}\n", "\n\u00a0", "void fn4()\n", "{\n", "  printf( \u201cThis \u201d );\n", "}\n", "\n\u00a0", "\n\u00a0", "\u4e94\u3001\u6717\u8baf\u9762\u8bd5\u9898 \uff1a\n", "\u5982\u4f55\u5224\u65ad\u4e00\u6bb5\u7a0b\u5e8f\u662f\u7531C\u7f16\u8bd1\u7a0b\u5e8f\u8fd8\u662f\u7531C++\u7f16\u8bd1\u7a0b\u5e8f\u7f16\u8bd1\u7684\uff1f\n", "\u53c2\u8003\u7b54\u6848\uff1a c++\u7f16\u8bd1\u65f6\u5b9a\u4e49\u4e86 __cplusplus\n", "c\u7f16\u8bd1\u65f6\u5b9a\u4e49\u4e86 _STDC_\n", "\n\u00a0", "\n\u00a0", "\u516d\u3001\u4e0b\u9762\u8fd9\u9053\u9762\u8bd5\u9898\u600e\u4e48\u505a\uff08\u6307\u9488\uff09\uff1f #include<stdio.h>\n", "main(){\n", "int c[3][3]={1,2,3,4,5,6,7,8,9};\n", "for(int i=0;i<3;i++)\n", "for(int j=0;j<3;j++)\n", "printf(\u201c%ld\\n\u201d,&c[j]);\n", "printf(\u201c\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014-\\n\u201d);\n", "printf(\u201c%ld\\n\u201d,(c+1));\n", "printf(\u201c%ld\\n\u201d,(*c+1));\n", "printf(\u201c%ld\\n\u201d,&c[0][0]);\n", "printf(\u201c%ld\\n\u201d,**c);\n", "printf(\u201c%ld\\n\u201d,*c[0]);\n", "if(int(c)==int(*c))\n", "printf(\u201cequl\u201d);\n", "}\n", "\u4e3a\u4ec0\u4e48c\uff0c*c\u7684\u503c\u76f8\u7b49\uff0c\uff08c+1\uff09\uff0c\uff08*c+1\uff09\u7684\u503c\u4e0d\u7b49\n", "c\uff0c*c\uff0c**c\uff0c\u4ee3\u8868\u4ec0\u4e48\u610f\u601d\uff1f\n", "\n\u00a0", "\n\u00a0", "\u53c2\u8003\u7b54\u6848\uff1a c\u662f\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u5730\u5740\uff0c*c\u662f\u7b2c\u4e00\u884c\u5143\u7d20\u7684\u9996\u5730\u5740\uff0c\u5176\u5b9e\u7b2c\u4e00\u884c\u5143\u7d20\u7684\u5730\u5740\u5c31\u662f\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u5730\u5740\uff0c\u8fd9\u5bb9\u6613\u7406\u89e3\u3002**c\u662f\u63d0\u9886\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002\n", "\u4e3a\u4ec0\u4e48c\uff0c*c\u7684\u503c\u76f8\u7b49\uff1f\n", "int c\u56e0\u4e3a\u76f4\u63a5\u7528c\u8868\u793a\u6570\u7ec4c[0][0]\n", "printf(\u201c%ld\\n\u201d,*c[0]);\u8bed\u53e5\u5df2\u5c06\u6307\u9488\u79fb\u5230\u6570\u7ec4\u5934\u3002\n", "int(*c)\u8868\u793ac0\u7684\u503c\u4e3a1\uff0c\u6240\u4ee5\u76f8\u7b49\u3002\n", "\u6570\u7ec4c\u7684\u5b58\u653e\u7a7a\u95f4\u793a\u610f\u5982\u4e0b\uff1a\uff08\u673a\u5668\u4e2d\u662f\u884c\u4f18\u5148\u5b58\u653e\u7684\uff09\n", "c[0][0] c[0][1] c[0][2]\n", "c[1][0] c[1][1] c[1][2]\n", "c[2][0] c[2][1] c[2][2]\n", "\n\u00a0", "c\u662f\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u540d\uff0c\u5b9e\u9645\u4e0a\u5b83\u662f\u4e00\u4e2a\u6307\u9488\u5e38\u91cf\uff0c\u4e0d\u80fd\u8fdb\u884c\u81ea\u52a0\u3001\u81ea\u51cf\u8fd0\u7b97\uff0c\u5373\uff1ac++\u3001c\u2013\u3001++c\u3001\u2013c\n", "\u90fd\u662f\u4e0d\u5141\u8bb8\u7684\uff1b\n", "c\uff1a  \u6570\u7ec4\u540d\uff1b\u662f\u4e00\u4e2a\u4e8c\u7ef4\u6307\u9488\uff0c\u5b83\u7684\u503c\u5c31\u662f\u6570\u7ec4\u7684\u9996\u5730\u5740\uff0c\u4e5f\u5373\u7b2c\u4e00\u884c\u5143\u7d20\u7684\u9996\u5730\u5740\uff08\u7b49\u4e8e *c\uff09\uff0c\u4e5f\n", "    \u7b49\u4e8e\u7b2c\u4e00\u884c\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u5730\u5740\uff08 & c[0][0]\uff09\uff1b\u53ef\u4ee5\u8bf4\u6210\u662f\u4e8c\u7ef4\u6570\u7ec4\u7684\u884c\u6307\u9488\u3002\n", "*c\uff1a \u7b2c\u4e00\u884c\u5143\u7d20\u7684\u9996\u5730\u5740\uff1b\u662f\u4e00\u4e2a\u4e00\u7ef4\u6307\u9488\uff0c\u53ef\u4ee5\u8bf4\u6210\u662f\u4e8c\u7ef4\u6570\u7ec4\u7684\u5217\u6307\u9488\u3002\n", "**c\uff1a\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u503c\uff1b\u5373\uff1ac[0][0]\n", "\u6240\u4ee5\uff1a\n", "    c \u548c *c\u7684\u503c\u662f\u76f8\u7b49\u7684\uff0c\u4f46\u4ed6\u4eec\u4e24\u8005\u4e0d\u80fd\u76f8\u4e92\u8d4b\u503c\uff0c\uff08\u7c7b\u578b\u4e0d\u540c\uff09\uff1b\n", "    \uff08c + 1\uff09 \uff1ac\u662f\u884c\u6307\u9488\uff0c\uff08c + 1\uff09\u662f\u5728c\u7684\u57fa\u7840\u4e0a\u52a0\u4e0a\u4e8c\u7ef4\u6570\u7ec4\u4e00\u884c\u7684\u5730\u5740\u957f\u5ea6\uff0c\u5373\u4ece&c[0][0]\n", "    \u53d8\u5230\u4e86&c[1][0]\uff1b\n", "   \uff08*c + 1\uff09\uff1a*c\u662f\u5217\u6307\u9488\uff0c\uff08*c + 1\uff09\u662f\u5728*c\u7684\u57fa\u7840\u4e0a\u52a0\u4e0a\u4e8c\u6570\u7ec4\u4e00\u4e2a\u5143\u7d20\u7684\u6240\u5360\u7684\u957f\u5ea6\uff0c\u5373\u4ece\n", "    &c[0][0]\u53d8\u5230\u4e86&c[0][1]\n", "    \u4ece\u800c\uff08c + 1\uff09\u548c\uff08*c + 1\uff09\u7684\u503c\u5c31\u4e0d\u76f8\u7b49\u4e86\n", "\n\u00a0", "\n\u00a0", "\u4e03\u3001\u5b9a\u4e49 int **a[3][4], \u5219\u53d8\u91cf\u5360\u6709\u7684\u5185\u5b58\u7a7a\u95f4\u4e3a\uff1a_____\n", "\u53c2\u8003\u7b54\u6848\uff1a int **p; /*16\u4f4d\u4e0bsizeof(p)=2, 32\u4f4d\u4e0bsizeof(p)=4*/\n", "\u603b\u5171  3*4*sizeof(p)\n", "\n\u00a0", "\n\u00a0", "\u516b\u3001\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u8981\u6c42\u8f93\u5165\u5e74\u6708\u65e5\u65f6\u5206\u79d2\uff0c\u8f93\u51fa\u8be5\u5e74\u6708\u65e5\u65f6\u5206\u79d2\u7684\u4e0b\u4e00\u79d2\u3002\u5982\u8f93\u51652004\u5e7412\u670831\u65e523\u65f659\u520659\u79d2\uff0c\u5219\u8f93\u51fa2005\u5e741\u67081\u65e50\u65f60\u52060\u79d2\u3002\n", "\u53c2\u8003\u7b54\u6848\uff1a \u5224\u65ad\u5e74\u4efd\u662f\u5426\u662f\u95f0\u5e74\uff0c\u6708\u4efd\u7684\u5927\u5c0f\u6708\uff0c\n", "\u6708\uff0812\u8fdb\u5236\uff09\u3001\u65e5\uff08\u4e0e\u95f0\u5e74\u3001\u5927\u5c0f\u6708\u6709\u5173\uff09\u3001\u65f6\uff0824\u8fdb\u5236\uff09\u3001\u5206\uff0860\u8fdb\u5236\uff09\u3001\u5999\uff0860\u8fdb\u5236\uff09\n", "\n\u00a0", "\n\u00a0", "\u4e5d\u3001\u6c64\u59c6\u900a\u7684\u9762\u8bd5\u8bd5\u9898\uff1a\u600e\u4e48\u5feb\u901f\u68c0\u6d4b\u51fa\u4e00\u4e2a\u5de8\u5927\u7684\u94fe\u8868\u4e2d\u7684\u6b7b\u94fe\uff1f \u53c2\u8003\u7b54\u6848\n", "\u5341\u3001\u51e0\u9053\u57fa\u7840\u9898\n", "\u5341\u4e00\u3001\u771f\u6b63\u7684\u5fae\u8f6f\u9762\u8bd5\u9898\n", "\u5341\u4e8c\u3001\u7ecf\u5178\u9898\n", "\u5341\u4e09\u3001\u6587\u4ef6\u64cd\u4f5c\uff0c\u8bfb\u53d6\u4e00\u7ec4\u6570\u8fdb\u884c\u6392\u5e8f\u7136\u540e\u5199\u5165\u6587\u4ef6\n", "\u5341\u56db\u3001\u4ea4\u6362\u4e24\u4e2a\u6570\uff0c\u4e0d\u7528\u7b2c\u4e09\u5757\u513f\u5185\u5b58\uff01\u8bf7\u95ee\u600e\u4e48\u5b9e\u73b0\uff1f\n", "\u5341\u4e94\u3001C/C++\u7b14\u8bd5\u63d0\u95ee\n", "\u5341\u516d\u3001\u86ee\u6709\u610f\u601d\u7684\u9898\u76ee\n", "\u5341\u4e03\u3001\u5173\u4e8eConst\u5e38\u91cf\u95ee\u9898\uff0c\u534e\u4e3a\u9762\u8bd5\u9898\u3002\n", "\u5341\u516b\u3001\u56db\u4e2a\u9762\u8bd5\u95ee\u9898\n", "\u5341\u4e5d\u3001\u96be\u5ea6\u7cfb\u6570\u3001\u5177\u4f53\u7684\u5b9e\u73b0\u7b97\u6cd5\uff1f\n", "\u4e8c\u5341\u3001\u4e24\u9053\u9762\u8bd5\u9898\uff0c\u6700\u597d\u80fd\u63d0\u4f9b\u4e00\u4e2a\u5b8c\u6574\u7684\u5b9e\u73b0\u4ee3\u7801\uff01\n", "\u4e8c\u5341\u4e00\u3001\u6c42\u7528\u4e00\u6bb5C\u6216C++\u7a0b\u5e8f\u5199\u6c42 f(x)=100! \u7684\u5b8c\u6574\u7a0b\u5e8f\uff1f\n", "\u4e8c\u5341\u4e8c\u300125\u5339\u9a6c\uff0c\u6bcf\u6b21\u63615\u5339\u8dd1\uff0c\u51e0\u6b21\u53ef\u627e\u51fa\u6700\u5feb\u76845\u5339\u9a6c\uff1f\n", "\u4e8c\u5341\u4e09\u3001\u4e00\u4e2a\u9762\u8bd5\u9898 \u6c42 n!\n", "\n\u00a0", "IT\u7c7b\u5c31\u4e1a\u653b\u7565", "\u53d1\u4fe1\u4eba: noobody (everybody), \u4fe1\u533a: Job", "\n\u6807  \u9898: \u5317\u90aeIT\u7c7b\u5c31\u4e1a\u653b\u7565", "\n\u53d1\u4fe1\u7ad9: \u5317\u90ae\u4eba\u8bba\u575b (Sun Sep  6 12:16:28 2009), \u7ad9\u5185", "\n \u4e0d\u4e45\u524d\u53d1\u4e86\u90a3\u7bc7\u300a\u76d8\u70b9IT\u7c7b\u5c31\u4e1a\u65b9\u5411\u300b\u7684\u6587\u7ae0\uff0c\u611f\u53d7\u5230\u4e86\u5e08\u5f1f\u5e08\u59b9\u4eec\u5bf9\u627e\u5de5\u4f5c\u65b9\u9762\u4fe1\u606f\u7684\u9700\u6c42\uff0c\u9996\u5148\u8c22\u8c22\u5927\u5bb6\u7684\u652f\u6301\uff0c\u4eca\u5929\u5c31\u5199\u4e00\u4e0b\u81ea\u5df1\u4ee5\u53ca\u540c\u5b66\u627e\u5de5\u4f5c\u8fc7\u7a0b\u4e2d\u7684 \u5fc3\u5f97\u4f53\u4f1a\u5427\uff0c\u627e\u5de5\u4f5c\u5982\u540c\u9ad8\u8003\u3001\u8003\u7814\uff0c\u91cd\u70b9\u662f\u8981\u6709\u9002\u5408\u81ea\u5df1\u7684\u653b\u7565\uff0c\u6211\u7684\u6587\u5b57\u7b97\u662f\u53c2\u8003\u8d44\u6599\u5427\uff0c\u4e0d\u5e9f\u8bdd\u4e86\uff0c\u8fdb\u5165\u6b63\u9898\uff1a", "\u9002\u5408\u4eba\u7fa4\uff1a\u975e\u795e\u4eba", "\n\u4e00\u3001\u4f60\u5c06\u53ef\u80fd\u9762\u4e34\u7684\u5386\u7a0b\uff1a", "\n     \u603b\u4f53\u5386\u7a0b\uff1a\u6c42\u804c\u7684\u5386\u7a0b\u5bf9\u4e8e\u6211\u4eec\u8fd9\u4e9b\u975e\u795e\u4eba\u7684\u51e1\u592b\u4fd7\u5b50\u6765\u8bf4\uff0c\u603b\u4f53\u8fd8\u662f\u5f88\u8270\u8f9b\u7684\u3002\u4e00\u822c\u4e3b\u8981\u7684\u6218\u6597\u65f6\u95f4\u6bb5\u662f9\u6708\u8d77\u81f3\u672c\u5b66\u671f\u7ed3\u675f\uff0c\u6709\u4e9b\u516c\u53f8\u4f1a\u5728\u5e74\u4e09\u5341\uff0c\u5927\u5e74\u521d\u51e0\u5de6\u53f3\u53d1Offer\u6216\u8005\u4f53\u68c0\u901a\u77e5\u3002", "\n      \u5982\u679c\u4f60\u5bd2\u5047\u7ed3\u675f\u8fd8\u6ca1\u6709\u62ff\u5230\u4ee4\u81ea\u5df1\u6ee1\u610f\u7684Offer\uff0c\u4e00\u5b9a\u8981\u575a\u6301\u4e0b\u53bb\uff0c\u56e0\u4e3a\u597d\u591a\u5927\u725b\u5355\u4f4d\u7684\u9762\u8bd5\u6216\u8005\u7ec8\u9762\u90fd\u653e\u5728\u4e86\u5e74\u540e\uff0c\u6211\u5c31\u8ba4\u8bc6\u5e74\u540e\u53bbPICC\uff0c\u4eba\u6c11\u94f6\u884c\uff0c\u5efa \u8bbe\u94f6\u884c\u7684\u670b\u53cb\u3002\u53ea\u662f\u5230\u4e86\u8fd9\u4e2a\u9636\u6bb5\uff0c\u4f60\u4f1a\u6bd4\u8f83\u8f9b\u82e6\uff0c\u65e2\u8981\u505a\u597d\u6bd5\u8bbe\uff0c\u53c8\u8981\u5e94\u4ed8\u5404\u79cd\u5404\u6837\u7684\u6bd5\u4e1a\u9636\u6bb5\u8981\u505a\u7684\u4e8b\u60c5\uff0c\u627f\u53d7\u4e00\u5b9a\u7684\u5fc3\u7406\u538b\u529b\uff0c\u4f46\u662f\uff0c\u4eba\u751f\u80fd\u6709\u51e0\u56de\u640f\uff0c\u5bf9\u4e8e \u6574\u4e2a\u4eba\u751f\u6765\u8bf4\uff0c\u8fd9\u4e00\u4e24\u4e2a\u6708\u7684\u8270\u8f9b\u4ed8\u51fa\u662f\u503c\u5f97\u7684\u3002 ", "//z \u8bf4\u5f97\u975e\u5e38\u597d\uff0c\u5148\u89e3\u51b3\u6709\u65e0\u95ee\u9898\uff0c\u518d\u89e3\u51b3\u522b\u7684\u65b9\u9762\u7684\u95ee\u9898\u3002", "\n1\u3001\u6d77\u6295\u3001\u6d77\u7b14\u3001\u6d77\u9762\u9636\u6bb5", "\n\u5bf9\u4e8eOffer\uff0c\u9996\u5148\u8981\u89e3\u51b3\u7684\u662f\u201d\u6709\u201d\u548c\u201d\u65e0\u201d\u7684\u95ee\u9898\uff0c\u4e4b\u540e\u624d\u80fd\u89e3\u51b3\u201d\u6709\u201d\uff08\u6216\u8005\u81f3\u5c11\u662f\u66fe\u7ecf\u62ff\u5230\uff0c\u81ea\u5df1\u62d2\u4e86\u4f01\u4e1a\uff0c\u800c\u975e\u4f01\u4e1a\u62d2\u4e86\u81ea\u5df1\uff09\u548c\u201d\u597d\u201d\u7684\u95ee\u9898\u3002\u800c\u4e14 \u5f00\u59cb\u7684\u65f6\u5019\uff0c\u5927\u5bb6\u5bf9\u81ea\u5df1\u9002\u5408\u56fd\u4f01\u8fd8\u662f\u9002\u5408\u5916\u4f01\uff0c\u7a76\u7adf\u9002\u5408\u54ea\u4e2a\u884c\u4e1a\uff08\u7535\u4fe1\uff1f\u91d1\u878d\uff1f\u901a\u4fe1\u8bbe\u5907\uff1f\u7f51\u7edc\uff1f\uff09\u90fd\u6ca1\u6709\u6e05\u6670\u7684\u6982\u5ff5\uff0c\u5fc3\u6001\u65b9\u9762\u4e5f\u662f\u53d1\u6bdb\u7684\uff08\u627e\u4e0d\u627e\u5f97\u5230\u5de5\u4f5c \u53ef\u662f\u5173\u4e4e\u81ea\u5df1\u7684\u996d\u7897\u54ea\uff09\uff0c\u56e0\u6b64\u4e00\u5f00\u59cb\u5468\u56f4\u7684\u540c\u5b66\u4eec\u4e00\u822c\u90fd\u662f\u80fd\u6295\u7684\u90fd\u6295\u4e86\uff0c\u80fd\u7b14\u7684\u90fd\u7b14\u4e86\uff0c\u80fd\u9762\u5f97\u90fd\u9762\u4e86\u3002 ", "//z \u8fd8\u662f\u9700\u8981\u5b9e\u8df5", "\n\u8fd9\u4e2a\u9636\u6bb5\u662f\u5f88\u5173\u952e\u7684\uff0c\u201d\u7eb8\u4e0a\u5f97\u6765\u7ec8\u89c9\u6d45\u201d\uff0c\u4f60\u518d\u662f\u770b\u9762\u7ecf\uff0c\u4e5f\u4e0d\u5982\u4f60\u53c2\u52a0\u4e00\u6b21\u7b14\u8bd5\uff0c\u9762\u8bd5\uff0c\u4e4b\u540e\u548c\u540c\u6837\u627e\u5de5\u4f5c\u7684\u5ba4\u53cb\u540c\u5b66\u8ba8\u8bba\u5206\u6790\u6765\u5f97\u5feb\uff0c\u6536\u83b7\u5927\u3002\u8981\u6ce8\u610f\u603b\u7ed3\uff0c\u4e00\u4e2a\u884c\u4e1a\u5f80\u5f80\u4e0d\u662f\u53ea\u6709\u4e00\u5bb6\u516c\u53f8\uff0c\u53ef\u80fd\u8fd9\u5bb6\u516c\u53f8\u7684\u7b14\u8bd5\u4f60\u6ca1\u6709\u901a\u8fc7\uff0c\u4f46\u5230\u4e86\u4e0b\u5bb6\uff0c\u4fa7\u91cd\u70b9\u90fd\u5dee\u4e0d\u591a\u7684\u8bdd\uff0c\u5c31\u4f1a\u76f8\u5bf9\u5bb9\u6613\u4e9b\u3002", "\n \u5bf9\u4e8e\u4e2a\u522b\u795e\u4eba\uff0c\u53ef\u80fd\u662f\u4e00\u6253\u4e00\u4e2a\u51c6\u513f\uff0c\u4e5f\u8bb8\u5e76\u4e0d\u9700\u8981\u6d77\u7b14\u3001\u6d77\u9762\uff0c\u786e\u5b9e\u6709\u8fd9\u6837\u7684\u4eba\u5b58\u5728\uff0c\u4f46\u662f\u8fd8\u662f\u76f8\u5bf9\u4fdd\u9669\u70b9\u513f\u597d\u3002\u800c\u4e14\u6709\u65f6\u5019\u4f60\u90fd\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u540c\u5728\u4e00\u4e2a\u5b9e\u9a8c\u5ba4\uff0c\u7814\u7a76\u65b9\u5411\u3001\u9879\u76ee\u7ecf\u5386\u4e5f\u7c7b\u4f3c\uff0c\u4e3a\u4ec0\u4e48\u6709\u4eba\u80fd\u901a\u8fc7\u7b80\u5386\u7b5b\u9009\uff0c\u6709\u4eba\u5374\u4e0d\u80fd\u3002", "//z \u7ecf\u8fc7\u4e00\u6bb5\u65f6\u95f4\u4e4b\u540e\u5f00\u59cb\u8fdb\u5165\u9009\u62e9\u9636\u6bb5\u3002", "\n2\u3001\u6218\u7565\u76f8\u5bf9\u6e05\u6670\u9636\u6bb5", "\n \u7ecf\u8fc7\u4e86\u4e00\u6bb5\u65f6\u95f4\u7684\u9524\u70bc\uff0c\u4f60\u53ef\u80fd\u5df2\u7ecf\u6e10\u6e10\u77e5\u9053\u81ea\u5df1\u5927\u6982\u9002\u5408\u54ea\u7c7b\u516c\u53f8\u4e86\uff0c\u4f8b\u5982\u4f60\u53bb\u53c2\u52a0\u7f51\u7edc\u516c\u53f8\u7684\u7b14\u8bd5\u3001\u9762\u8bd5\u90fd\u80fd\u901a\u8fc7\uff0c\u800c\u53c2\u52a0\u901a\u4fe1\u8bbe\u5907\u7684\u7b14\u8bd5\uff0c\u5927\u90e8\u5206\u90fd\u6ca1\u901a\u8fc7\uff0c \u8fd9\u4e2a\u65f6\u5019\uff0c\u7ecf\u8fc7\u4e00\u6bb5\u65f6\u95f4\u7684\u5954\u6ce2\uff0c\u4f60\u4e5f\u6709\u4e9b\u75b2\u60eb\u4e86\uff0c\u5f53\u9762\u8bd5\u65f6\u95f4\u6216\u51c6\u5907\u65f6\u95f4\u51b2\u7a81\u7684\u65f6\u5019\uff0c\u4f60\u5c31\u8981\u6709\u6240\u53d6\u820d\u4e86\uff0c\u5e73\u65f6\u4e0d\u53c2\u52a0\u7b14\u8bd5\u3001\u9762\u8bd5\u65f6\uff0c\u6750\u6599\u6536\u96c6\uff0c\u9762\u7ecf\u51c6\u5907\u7684\u9488\u5bf9 \u6027\u4e5f\u8981\u6709\u6240\u52a0\u5f3a\u4e86\u3002 ", "3\u3001\u6536\u83b7\u9636\u6bb5", "\n\u5373\u4f7f\u662f\u5b9e\u529b\u5f88\u5f3a\u7684\u4eba\uff0c\u4e5f\u4f1a\u957f\u671f\u201d\u88f8\u5954\u201d\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u5927\u591a\u6570\u4f01\u4e1a\u6765\u8bb2\uff0c\u5c31\u7b979\u6708\u5f00\u59cb\u62db\u8058\uff0c\u53d1Offer\u4e5f\u5230\u4e8611\u6708\u300112\u6708\u4e86\uff0c\u800c\u4e14\u5982\u679c\u60f3\u53bb\u56fd\u4f01\uff0c\u5c31\u4f1a\u7b49\u5f85\u7684 \u66f4\u4e45\uff0c\u56e0\u4e3a\u5f88\u591a\u56fd\u4f0111\u6708\u624d\u521a\u521a\u5f00\u59cb\u6536\u96c6\u7b80\u5386\uff0c\u6709\u4e9b\u5b9e\u529b\u4e0d\u4fd7\u7684\u6c42\u804c\u8005\uff0c\u5f88\u53ef\u80fd\u4f1a\u572812\u6708\u30011\u6708\u7684\u67d0\u6bb5\u65f6\u95f4\u5185\uff0c\u540c\u65f6\u6536\u5230\u4e0d\u6b62\u4e00\u4e2aOffer\u3002\u5f53\u4f60\u6536\u5230 Offer\u7684\u65f6\u5019\uff0c\u800c\u8fd8\u5728\u7b49\u66f4\u7406\u60f3\u7684\u4e00\u4e2a\u51fa\u7ed3\u679c\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u7528\u5404\u79cd\u501f\u53e3\u5728\u4f01\u4e1a\u80fd\u5141\u8bb8\u7684\u8303\u56f4\u5185\u5c3d\u91cf\u5f80\u540e\u62d6\u5ef6\uff0c\u6536\u96c6\u5145\u8db3\u7684\u4fe1\u606f\uff0c\u505a\u51fa\u53d6\u820d\u3002 ", "\u4e8c\u3001\u6280\u672f\u6027\u51c6\u5907", "\n1\u3001\u7b80\u5386", "\n      \u7b80\u5386\u65b9\u9762\u6211\u770b\u7248\u4e0a\u8ba8\u8bba\u7684\u5df2\u7ecf\u5f88\u591a\u4e86\uff0c\u4e0d\u591a\u5e9f\u8bdd\u4e86\uff0c\u53ea\u8bf4\u4e00\u4e0b\uff0c\u6211\u4e2a\u4eba\u7684\u505a\u6cd5\uff0c\u6211\u51c6\u5907\u4e86\u4e00\u4efd\u5b8c\u6574\u7b80\u5386\uff0c\u6db5\u76d6\u4e86\u6211\u7684\u6240\u6709\u7ecf\u5386\uff0c\u8fd9\u4efd\u7b80\u5386\u4e0d\u662f\u7528\u6765\u6295\u7684\uff0c\u53ef\u4ee5\u8bf4\u662f\u81ea\u5df1\u7684\u4e00\u4e2a\u8d44\u6599\u5e93\uff0c\u9047\u5230\u7f51\u6295\uff0c\u4ece\u8fd9\u4efd\u7b80\u5386\u4e2d\u76f4\u63a5\u590d\u5236\u7c98\u8d34\u5c31\u884c\u4e86\u3002", "\n     \u53e6\u5916\u51c6\u5907\u4e86\u4e24\u4efd\u7528\u6765\u6295\u9012\u7684\u7b80\u5386\uff0c\u4e00\u4efd\u9762\u5411\u7efc\u5408\u6027\u5c97\u4f4d\uff08\uff29\uff34\u54a8\u8be2\u3001\u56fd\u4f01\u7684\u590d\u5408\u578b\u6216\u7ba1\u7406\u578bIT\u5c97\u4f4d\u7b49\uff09\uff0c\u4e00\u4efd\u9762\u5411\u7814\u53d1\u7c7b\u5c97\u4f4d\uff0c\u5176\u5b9e\uff0c\u4e24\u4efd\u533a\u522b\u4e0d\u5927\uff0c\u53ea\u662f\u7814\u53d1\u7c7b\u7b80\u5386\u4e2d\uff0c\u628a\u505a\u8fc7\u7684\u7814\u53d1\u7c7b\u9879\u76ee\u653e\u5728\u4e86\u9879\u76ee\u7ecf\u5386\u4e00\u680f\u7684\u9996\u4f4d\uff0c\u7efc\u5408\u6027\u7b80\u5386\u4e2d\uff0c\u628a\u505a\u8fc7\u7684\uff29\uff34\u54a8\u8be2\u7c7b\u9879\u76ee\u653e\u5728\u4e86\u9879\u76ee\u7ecf\u5386\u4e00\u680f\u7684\u9996\u4f4d\u3002 ", "2\u3001\u77e5\u8bc6\u50a8\u5907", "\n     \u4e0d\u540c\u7c7b\u578b\u7684\u5355\u4f4d\u7b14\u8bd5\u3001\u9762\u8bd5\u8003\u5bdf\u7684\u4fa7\u91cd\u70b9\u4e0d\u4e00\u6837\u3002\u5927\u81f4\u53ef\u4ee5\u5206\u4e3a\u4e09\u5927\u6d41\u6d3e\uff1a\u56fd\u4f01\u3001\u5916\u4f01\u3001\u516c\u52a1\u5458\uff0c\u73b0\u5728\u5df2\u7ecf9\u6708\u4efd\u4e86\uff0c\u5bf9\u4e8e\u4f60\u6211\u8fd9\u6837\u7684\u51e1\u592b\u4fd7\u5b50\u6765\u8bf4\uff0c\u5728\u4f60\u5373\u5c06\u6df9 \u6ca1\u5728\u5404\u79cd\u62db\u8058\u4f1a\u3001\u7b14\u8bd5\u3001\u9762\u8bd5\u7684\u8d76\u573a\u4e2d\u65f6\uff0c\u4f60\u4e0d\u53ef\u80fd\u540c\u65f6\u51fa\u51fb\u6253\u51fb\u4e09\u7c7b\u76ee\u6807\u3002\u4e0b\u9762\u5bf9\u8fd9\u4e09\u5927\u6d41\u6d3e\u505a\u4e0b\u7b80\u5355\u68b3\u7406\uff0c\u4f9b\u4f60\u89c1\u62db\u62c6\u62db\u3002", "\n \u7279\u522b\u8bf4\u660e\uff1a\u7531\u4e8e\u4e2a\u4eba\u80fd\u529b\u53d7\u9650\uff0c\u5728\u6b64\u6211\u53ea\u80fd\u91cd\u70b9\u9610\u8ff0\u7b14\u8bd5\u7684\u4fa7\u91cd\u70b9\uff0c\u56e0\u4e3a\u9762\u8bd5\u4e00\u65b9\u9762\u6211\u53c2\u52a0\u7684\u4e0d\u5168\uff0c\u53e6\u4e00\u65b9\u9762\uff0c\u9762\u8bd5\u7684\u4e0d\u786e\u5b9a\u6027\u6bd4\u7b14\u8bd5\u5927\u591a\u4e86\uff0c\u8c01\u6653\u5f97\u9762\u8bd5\u5b98\u90a3\u5929\u5fc3\u60c5\u600e\u6837\uff0c\u4f1a\u95ee\u4ec0\u4e48\u95ee\u9898\u3002 ", "2.1\u56fd\u4f01\u8003\u5bdf\u4fa7\u91cd\u70b9", "\n\u7b14\u8bd5\uff1a", "\n\u53ea\u8003\u975e\u6280\u672f\u6027\u95ee\u9898\uff1a\u4e00\u822c\u662f\u7535\u4fe1\u9886\u57df\u7684\u7814\u7a76\u9662\u6216\u8005\u8bbe\u8ba1\u9662\u3002\u4f8b\u5982\u7535\u4fe1\u7814\u7a76\u9662\u89c4\u5212\u6240\uff0c\u53ea\u8003\u4e86\u82f1\u8bed\u7ffb\u8bd1\u548c\u6c49\u8bed\u7533\u8bba\uff08\u7ed9\u4e2a\u8bba\u9898\uff0c\u5199\u7bc7\u6587\u7ae0\uff09\u3002\u79fb\u52a8\u7814\u7a76\u9662\u53ea\u8003\u4e86\u884c\u6d4b\uff08\u6709\u6ca1\u6709\u8003\u82f1\u8bed\u5fd8\u4e86\uff09\u3002", "\u53ea\u8003\u6280\u672f\u6027\u95ee\u9898\uff1a\u4f8b\u5982\u4eba\u6c11\u94f6\u884c\u91d1\u878d\u4fe1\u606f\u7ba1\u7406\u4e2d\u5fc3\uff0c\u53ea\u8003\u4e86\u8ba1\u7b97\u673a\u77e5\u8bc6\uff0c\u6ca1\u8003\u884c\u6d4b\u548c\u7533\u8bba\u3002 ", "\u82f1\u8bed+\u6280\u672f\u6027\u95ee\u9898+\u884c\u6d4b\uff1a\u5927\u591a\u6570\u56fd\u4f01\u90fd\u662f\u8fd9\u6837\u8003\u7684\u3002 ", "\u9762\u8bd5\uff1a", "\n\u4efb\u4f55\u95ee\u9898\u90fd\u53ef\u80fd\u4f1a\u95ee\u5230\uff0c\u4e2a\u4eba\u53c2\u52a0\u8fc7\u7684\u90a3\u4e9b\u611f\u89c9\u9664\u4e86\u95ee\u4e9b\u6280\u672f\u6027\u95ee\u9898\u4e4b\u5916\uff0c\u5f80\u5f80\u4f1a\u52a0\u4e0a\u4e9b\u5f00\u653e\u5f0f\u95ee\u9898\uff0c\u4f8b\u5982\u4ea4\u7ed9\u4f60\u4e2a5\u4eba\u56e2\u961f\u7684\u5f00\u53d1\u9879\u76ee\uff0c\u4f60\u600e\u4e48\u7ba1\u7406\u3002\u7279\u522b\u8bf4 \u660e\uff0c\u5f00\u653e\u5f0f\u662f\u8868\u73b0\u4f60\u7efc\u5408\u7d20\u8d28\u7684\u673a\u4f1a\uff0c\u611f\u89c9\u56fd\u4f01\u9762\u8bd5\uff0c\u8fd9\u79cd\u95ee\u9898\u6bd4\u5177\u4f53\u77e5\u8bc6\u6027\u95ee\u9898\u8fd8\u91cd\u8981\u3002\u81f3\u4e8e\u5177\u4f53\u7684\u77e5\u8bc6\u6027\u95ee\u9898\uff0c\u867d\u7136\u4e5f\u5f97\u8ba4\u771f\u5bf9\u5f85\uff0c\u4f46\u5373\u4f7f\u6ca1\u56de\u7b54\u4e0a\u6765\uff0c\u4e5f\u522b\u7070 \u5fc3\uff0c\u672a\u5fc5\u8fdb\u4e0d\u4e86\u4e0b\u4e00\u8f6e\u3002 ", "2.2\u5916\u4f01\u8003\u5bdf\u4fa7\u91cd\u70b9", "\n\u7b14\u8bd5\uff1a", "\n\u91cd\u5728\u5b66\u4e60\u80fd\u529b\u3001\u5206\u6790\u80fd\u529b\u7684\u8003\u5bdf\uff1a\u4e00\u822c\u662f\u975e\u7eaf\uff29\uff34\u7c7b\u5916\u4f01\uff0c\u4f8b\u5982\u6469\u6839IT\uff0c\u6469\u6839IT\u8003\u7684\u5f88\u5168\uff0c\u8fde\u6982\u7387\u8bba\u90fd\u8003\u4e86\uff0c\u4f46\u662f\u5370\u8c61\u4e2d\uff0c\u6ca1\u8003\uff29\uff34\u4e13\u4e1a\u77e5\u8bc6\uff0c\u8bb0\u4e0d\u592a\u6e05\u4e86\u3002", "\n\u91cd\u5728IT\u9886\u57df\u5b66\u4e60\u80fd\u529b\u3001\u5206\u6790\u80fd\u529b\u7b49\u7684\u8003\u5bdf\uff08\u53ef\u80fd\u4f1a\u6d89\u53ca\u7b97\u6cd5\uff09\uff1a\u4e00\u822c\u662f\u5bf9\u7b97\u6cd5\u6709\u4e00\u5b9a\u8981\u6c42\u7684\uff29\uff34\u7c7b\u4f01\u4e1a\u6216\u7f51\u7edc\u516c\u53f8\uff0c\u4f8b\u5982\u767e\u5ea6\u3001\u5fae\u8f6f\uff0c\u9664\u4e86\u9009\u62e9\u9898\uff0c\u5f80\u5f80\u540e\u9762\u4f1a\u6709\u4e00\u4e24\u9053\u6d89\u53ca\u94fe\u8868\u3001\u6811\u7b49\u65b9\u9762\u7684\u5927\u9898\u3002 ", "//z web sense", "\n\u91cd\u5728\u4e13\u4e1a\u9886\u57df\u7684\u8003\u5bdf\uff1a\u4e00\u822c\u662f\u89c4\u6a21\u4e0d\u5927\u6216\u8005\u4e13\u4e1a\u6027\u5f88\u5f3a\u7684\u5916\u4f01\uff0c\u4f8b\u5982web sense\uff0c\u8003\u4e86\u5f88\u591a\u7f51\u7edc\u77e5\u8bc6\u3002 ", "\u5916\u4f01\u7684\u54a8\u8be2\u7c7b\u5c97\u4f4d\uff1a\u4f8b\u5982GBS\u84dd\u8272\u4e4b\u8def\u65f6\u4e3e\u884c\u7684\u8003\u8bd5\uff0c\u7b14\u8bd5\u6ca1\u8003\u6280\u672f\uff0c\u53ea\u8003\u4e86\u6570\u5b57\u5206\u6790\u4e00\u7c7b\u7684\u3002", "\n\u9762\u8bd5\uff1a", "\n     \u5927\u591a\u6570\u5916\u4f01\u90fd\u4f1a\u91cd\u70b9\u8003\u5bdf\u4f60\u7684\u5b66\u4e60\u80fd\u529b\u548c\u6f5c\u529b\uff0c\u5e76\u4e0d\u5728\u4e8e\u4f60\u73b0\u5728\u638c\u63e1\u6709\u591a\u5c11\u77e5\u8bc6\uff0c\u6709\u4e9b\u4f1a\u95ee\u7b97\u6cd5\uff0c\u4f8b\u5982\u767e\u5ea6\u3002", "\n      \u975e\u6280\u672f\u7c7b\u5c97\u4f4d\u5219\u4e00\u822c\u90fd\u4e0d\u95ee\u6280\u672f\u6027\u95ee\u9898\uff0c\u5f80\u5f80\u662f\u7fa4\u9762\uff0c\u5355\u9762\uff0c\u89c2\u5bdf\u4f60\u7684\u7ec4\u7ec7\uff0c\u534f\u8c03\uff0c\u6c9f\u901a\u80fd\u529b\u3002 ", "2.3\u516c\u52a1\u5458\u8003\u8bd5", "\n      \u884c\u6d4b+\u7533\u8bba\uff0c\u5177\u4f53\u4e0d\u5c55\u5f00\u4e86\uff0c\u516c\u52a1\u5458\u7248\u80af\u5b9a\u6709\u66f4\u8be6\u7ec6\u7684\u8d44\u6599\u3002 ", "2.4\u5982\u4f55\u51c6\u5907", "\n\u56fd\u4f01\uff1a", "\n\u56fd\u4f01\u8003\u5bdf\u7684\u6280\u672f\u6027\u95ee\u9898\uff0c\u9762\u5e7f\uff0c\u5f88\u6742\uff0c\u64cd\u4f5c\u7cfb\u7edf\uff0c\u6570\u636e\u5e93\uff0c\u7f51\u7edc\uff0c\u6570\u636e\u7ed3\u6784\u7b49\u90fd\u53ef\u80fd\u6d89\u53ca\uff0c\u4f46\u662f\u8003\u7684\u90fd\u5f88\u57fa\u7840\u3002\u6240\u4ee5\u5efa\u8bae\u51c6\u5907\u4e00\u4e0b\u884c\u6d4b\uff0c\u53e6\u5916\u5bf9\u5404\u79d1\u7684\u57fa\u7840\u77e5\u8bc6\u590d\u4e60\u4e00\u4e0b\uff0c\u5982\u679c\u4eca\u5e74\u6ca1\u6709\u5927\u7684\u53d8\u5316\u7684\u8bdd\uff0c\u8fd9\u4e9b\u77e5\u8bc6\u50a8\u5907\u8db3\u77e3\u5e94\u4ed8\u7b14\u8bd5\u3002", "\n\u5916\u4f01\uff1a", "\n     \u9996\u5148\u8ba1\u7b97\u673a\u6240\u6d89\u53ca\u5404\u9886\u57df\u7684\u57fa\u7840\u77e5\u8bc6\u4f60\u5f97\u5177\u5907\uff0c\u7b14\u8bd5\u3001\u9762\u8bd5\u4e4b\u540e\uff0c\u9047\u5230\u6ca1\u6709\u89e3\u51b3\u7684\u7b97\u6cd5\u9898\uff0c\u8981\u548c\u5e73\u65f6\u7f16\u7a0b\u6bd4\u8f83\u725b\u7684\u4eba\u591a\u8ba8\u8bba\uff0c\u5373\u4f7f\u6ca1\u901a\u8fc7\u7b14\u8bd5\uff0c\u81f3\u5c11\u8981\u6709\u6240\u6536\u83b7\u3002 \u4e0d\u4ec5\u8981\u89e3\u51b3\u95ee\u9898\uff0c\u5982\u6709\u4f59\u529b\uff0c\u53ef\u4ee5\u4e89\u53d6\u7528\u6700\u5de7\u5999\u5730\u65b9\u6cd5\u518d\u89e3\u51b3\u4e00\u4e0b\u8be5\u95ee\u9898\u3002\u53e6\u5916\uff0c\u82f1\u8bed\u80fd\u529b\u8981\u5f3a\uff0c\u50cf\u8981\u53bb\u53c2\u52a0\u6469\u6839\u9762\u8bd5\u7684\u8bdd\uff0c\u53e3\u8bed\u4e5f\u5f97\u8bf4\u7684\u8fc7\u53bb\u3002", "\n      \u5982\u679c\u4f60\u4e0d\u4e70\u4e00\u672c\u4e66\u6765\u770b\u89c9\u5f97\u4e0d\u653e\u5fc3\u7684\u8bdd\uff0c\u53ef\u4ee5\u5f04\u4e00\u672c\u300a\u7a0b\u5e8f\u5458\u9762\u8bd5\u653b\u7565\u300b\uff0c\u9996\u5148\u9700\u8981\u58f0\u660e\uff0c\u8be5\u4e66\u4e0d\u80fd\u5e2e\u52a9\u4f60\u901a\u8fc7\u7b14\u8bd5\u548c\u9762\u8bd5\uff0c\u56e0\u4e3a\u4ed6\u867d\u7136\u5404\u9886\u57df\u90fd\u6d89\u53ca\u4e86\uff0c\u4f46\u662f\u8bf4\u7684 \u90fd\u5f88\u63d0\u7eb2\u6308\u9886\u3002\u4f46\u662f\u8be5\u4e66\u6700\u5927\u7684\u4f5c\u7528\u5c31\u662f\u91cc\u9762\u8be6\u7ec6\u9610\u8ff0\u4e86\u9762\u5bf9\u8003\u5b98\u6240\u63d0\u95ee\u9898\u65f6\uff0c\u5e94\u8058\u8005\u7684\u8be6\u7ec6\u601d\u7ef4\u8fc7\u7a0b\u3002\u8be5\u4e66\u8fd8\u6709\u4e00\u4e2a\u597d\u5904\u5c31\u662f\u8584\uff0c\u5f88\u96be\u60f3\u8c61\uff0c\u90fd\u8fd9\u4e2a\u65f6\u5019\u4e86\uff0c\u4f60\u518d\u53bb\u7ec6\u770b\u300a\u7b97\u6cd5\u5bfc\u8bba\u300b\u3002", "\u4e09\u3001\u5404\u79cd\u7c7b\u578b\u7684\u8003\u8bd5\u7b56\u7565", "\n1\u3001\u7b14\u8bd5\uff1a", "\n     \u7b56\u7565\u5f88\u7b80\u5355\uff0c\u4f1a\u7684\u4fdd\u8bc1\u6b63\u786e\uff0c\u4e0d\u4f1a\u7684\u8499\u4e0a\u53bb\uff0c\u505a\u4e0d\u5b8c\u522b\u62c5\u5fc3\u3002", "\n2\u3001\u7fa4\u9762\uff1a", "\n     \u5ea6\u5f88\u91cd\u8981\uff0c\u65e2\u6709\u6548\u5c55\u73b0\u4e86\u81ea\u5df1\u7684\u80fd\u529b\uff0c\u8868\u8fbe\u4e86\u81ea\u5df1\u7684\u89c2\u70b9\uff0c\u53c8\u7ed9\u522b\u4eba\u8bf4\u8bdd\u7684\u673a\u4f1a\uff0c\u4e00\u70b9\u4e5f\u4e0d\u5f20\u626c\u3002", "\n     \u5728\u7fa4\u9762\u4e2d\uff0c\u4f60\u5982\u679c\u80fd\u591f\u505a\u5230\u51c6\u5907\u628a\u63e1\u56e2\u961f\u8fdb\u7a0b\uff0c\u505a\u56e2\u961f\u4e2d\u7684\u5173\u952e\u4eba\u7269\uff08\u672a\u5fc5\u662f\u7ec4\u957f\uff09\uff0c\u90a3\u7edd\u5bf9\u662f\u4e2a\u4eae\u70b9\uff0c\u4f8b\u5982\u5728\u5927\u5bb6\u5df2\u7ecf\u5bf9\u8be5\u8bba\u9898\u5145\u5206\u53d1\u8868\u81ea\u5df1\u610f\u89c1\u7684\u524d\u63d0\u4e0b\uff0c\u5982\u679c\u6709\u4e9b\u540c\u5b66\u6267\u62d7\u4e8e\u81ea\u5df1\u7684\u89c2\u70b9\uff0c\u6574\u4e2a\u56e2\u961f\u4ecd\u7136\u65e0\u6cd5\u8fbe\u6210\u5171\u8bc6\uff0c\u4f60\u53ef\u4ee5\u9002\u65f6\u7684\u63d0\u9192\u5927\u5bb6\uff0c\u65f6\u95f4\u5df2\u7ecf\u5feb\u6765\u4e0d\u53ca\u4e86\u3002", "\n      \u5982\u679c\u4f60\u4e0d\u5e78\u6ca6\u4e3a\u5c11\u6570\u6d3e\uff0c\u4f60\u53ef\u4ee5\u4fdd\u7559\u81ea\u5df1\u7684\u89c2\u70b9\uff0c\u4f46\u662f\u5982\u679c\u8bf4\u6574\u4e2a\u56e2\u961f\u8981\u51fa\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\uff0c\u4e00\u5b9a\u8981\u8868\u8fbe\u670d\u4ece\u56e2\u961f\u51b3\u7b56\u7684\u610f\u601d\u3002 ", "3\u3001\u5355\u9762\uff1a", "\n     \u8fdb\u5165\u5355\u9762\uff0c\u76ee\u6807\u4f01\u4e1a\u5bf9\u4f60\u5df2\u7ecf\u6bd4\u8f83\u6ee1\u610f\u4e86\uff0c\u5728\u8fd9\u4e2a\u73af\u8282\uff0c\u6280\u672f\u6027\u95ee\u9898\u4e07\u4e00\u56de\u7b54\u4e0d\u4e0a\u6765\uff0c\u53ef\u4ee5\u628a\u76f8\u5173\u9886\u57df\u7684\u7b54\u4e0a\u53bb\u3002\u975e\u6280\u672f\u6027\u95ee\u9898\uff0c\u4e00\u5b9a\u8981\u597d\u597d\u628a\u63e1\uff0c\u8fd9\u662f\u5c55\u73b0\u4f60\u7efc \u5408\u80fd\u529b\u7684\u597d\u673a\u4f1a\u3002\u6211\u5728\u5355\u9762\u7684\u65f6\u5019\uff0c\u72af\u8fc7\u4e0d\u5c11\u4f4e\u7ea7\u9519\u8bef\uff0c\u4e0d\u8981\u8868\u73b0\u51fa\u6765\u81ea\u5df1\u4e0d\u60f3\u4e0b\u57fa\u5c42\uff0c\u6216\u8005\u4e0d\u60f3\u51fa\u5dee\u7b49\u82d7\u5934\uff0c\u5373\u4f7f\u4e8b\u540e\u4f60\u6ca1\u6709\u53bb\u8fd9\u5bb6\u516c\u53f8\uff0c\u4f46\u662f\u4f60\u65e2\u7136\u6765\u4e86\uff0c\u8fd8\u662f \u5148\u62ff\u5230Offer\u518d\u8bf4\u5427\u3002", "\n\u9762\u8bd5\u603b\u7ed3", "\n      \u7537\u751f\u8981\u8863\u7740\u5f97\u4f53\uff0c\u56fd\u4f01\u4ee5\u53ca\u5916\u4f01\u7684\u975e\u6280\u672f\u7c7b\u5c97\u4f4d\uff0c\u4e00\u822c\u90fd\u8981\u7a7f\u6b63\u88c5\uff0c\u8868\u73b0\u8981\u5927\u65b9\uff0c\u4e0d\u8981\u754f\u7f29\u3002\u8981\u8868\u73b0\u7684\u5177\u6709\u56e2\u961f\u610f\u8bc6\uff0c\u4e0d\u8981\u592a\u6ce8\u91cd\u4e2a\u4eba\u8868\u73b0\uff0c\u597d\u50cf\u53ea\u6709\u81ea\u5df1\u624d\u638c\u63e1\u771f\u7406\uff0c\u8fd9\u6837\u4e0d\u4f1a\u7ed9\u8003\u5b98\u7559\u4e0b\u597d\u5370\u8c61\u3002", "\n      \u5973\u751f\u4e0d\u5b9c\u6d53\u5986\u8273\u62b9\uff0c\u76f8\u4fe1\u5317\u90ae\u7684MM\u4eec\u4e5f\u4e0d\u4f1a\u8fd9\u6837\u7684\uff0c\u5475\u5475\uff0c\u53ef\u4ee5\u5c55\u793a\u5973\u751f\u8eab\u4e0a\u7537\u751f\u4e0d\u5177\u5907\u7684\u90a3\u4e9b\u4f18\u70b9\uff0c\u4f8b\u5982\u7ec6\u5fc3\u3002 ", "\u56db\u3001\u65f6\u95f4\u7cbe\u529b\u7684\u5206\u914d", "\n      \u6536\u96c6\u4fe1\u606f\u5f88\u91cd\u8981\uff0c\u4f46\u662f\u66f4\u91cd\u8981\u7684\u662f\u5b9e\u6218\uff08\u53c2\u52a0\u7b14\u8bd5\u3001\u9762\u8bd5\uff09\u548c\u51c6\u5907\uff08\u5bf9\u4e00\u4e9b\u77e5\u8bc6\u70b9\u7684\u590d\u4e60\uff09\uff0c\u4e0d\u80fd\u592a\u6d6e\u8e81\uff0c\u4e0d\u80fd\u4e00\u76f4\u662f\u5728\u6295\u7b80\u5386\u3001\u53c2\u52a0\u5ba3\u8bb2\uff0c\u771f\u6b63\u7ed9\u4e86\u4f60\u673a\u4f1a\uff0c\u5374\u8fde \u7b14\u8bd5\u90fd\u8fc7\u4e0d\u4e86\uff0c\u5047\u5982\u4f60\u5728\u53c2\u52a0\u7b14\u8bd5\u3001\u9762\u8bd5\u4e4b\u4f59\uff0c\u5df2\u7ecf\u6ca1\u6709\u65e2\u51c6\u5907\u56fd\u4f01\u4fa7\u91cd\u7684\u77e5\u8bc6\uff0c\u53c8\u51c6\u5907\u5916\u4f01\u4fa7\u91cd\u7684\u77e5\u8bc6\u7684\u7cbe\u529b\u4e86\uff0c\u90a3\u4e48\u4f60\u5c31\u8981\u6709\u6240\u53d6\u820d\u4e86\uff0c\u4e0d\u8fc7\u56fd\u4f01\u5916\u4f01\u4e5f\u5e76\u975e\u5b8c \u5168\u6ca1\u6709\u4ea4\u96c6\uff0c\u8ba1\u7b97\u673a\u3001\u901a\u4fe1\u7c7b\u7684\u57fa\u7840\u77e5\u8bc6\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u662f\u90fd\u5f97\u5177\u5907\u7684\u3002", "\n\u8bf4\u660e\u4e00\u4e0b\uff0c\u300a\u76d8\u70b9\u300b\u90a3\u7bc7\u6587\u7ae0\uff0c\u4e5f\u53ea\u662f\u5e2e\u52a9\u4f60\u7b80\u5355\u68b3\u7406\u4e00\u4e0b\u8fd9\u4e9b\u5355\u4f4d\u90fd\u662f\u5e72\u4ec0\u4e48\u7684\uff0c\u5e2e\u52a9\u4f60\u786e\u5b9a\u4e00\u4e2a\u5927\u6982\u7684\u65b9\u5411\uff0c\u4f8b\u5982\uff0c\u5207\u4e0d\u8981\u4ee5\u4e3a\u81ea\u5df1\u60f3\u53bb\u56fd\u4f01\uff0c\u90a3\u5916\u4f01\u7684\u7b14\u8bd5\u3001\u9762\u8bd5\u5c31\u4e00\u6982\u4e0d\u53c2\u52a0\uff0c\u975e\u8981\u7b49\u523011\u6708\u4efd\u624d\u5f00\u59cb\u627e\u5de5\u4f5c\u3002 \u60f3\u8fdb\u5916\u4f01\uff0c\u4e5f\u662f\u540c\u6837\u7684\u9053\u7406\u3002 ", "\u4e94\u3001\u5fc3\u6001", "\n      \u9c9c\u6709\u542c\u8bf4\u8c01\u7b14\u8bd5\u53d1\u6325\u5931\u5e38\u7684\uff0c\u6b64\u5904\u7b80\u5355\u8bf4\u4e0b\u9762\u8bd5\u65f6\u7684\u5fc3\u6001\uff0c\u5047\u5982\u4f60\u6280\u672f\u6027\u7684\u51c6\u5907\u5de5\u4f5c\u90fd\u505a\u7684\u5dee\u4e0d\u591a\u4e86\uff0c\u6b63\u88c5\u4e5f\u7a7f\u4e86\uff0c\u76ee\u6807\u4f01\u4e1a\u7684\u9762\u7ecf\u4e5f\u770b\u4e86\uff0c\u90a3\u4e48\u6700\u91cd\u8981\u7684\u5fc3\u6001\u5c31\u662f \u81ea\u4fe1\u4e86\uff0c\u5f88\u4f69\u670d\u6211\u8ba4\u8bc6\u7684\u4e00\u4f4d\u53bb\u767e\u5ea6\u7684\u540c\u5b66\uff0c\u4ed6\u6c42\u804c\u7684\u5fc3\u6001\u5c31\u5f88\u7aef\u6b63\uff0c\u4ed6\u8ba4\u4e3a\u6c42\u804c\u5c31\u662f\u5c97\u4f4d\u4e0e\u80fd\u529b\u5339\u914d\u7684\u53cc\u5411\u9009\u62e9\uff0c\u5982\u679c\u6211\u4e0d\u9002\u5408\u4f60\u7684\u5c97\u4f4d\uff0c\u90a3\u4e00\u5b9a\u8fd8\u4f1a\u6709\u9002\u5408\u6211\u7684 \u5c97\u4f4d\u5728\u7b49\u5f85\u7740\u6211\u3002", "\n\u5728\u8fd9\u91cc\u6211\u8981\u8bf4\uff0c\u65e2\u7136\u5df2\u7ecf\u901a\u8fc7\u4e86\u7b14\u8bd5\u6216\u8005\u7b80\u5386\u7b5b\u9009\uff0c\u5c31\u8bf4\u660e\u4f60\u7684\u80cc\u666f\u57fa\u672c\u662f\u7b26\u5408\u76ee\u6807\u804c\u4f4d\u5bf9\u4f60\u7684\u671f\u5f85\u7684\uff0c\u90a3\u4e48\u53c2\u52a0\u9762\u8bd5\u7684\u65f6\u5019\uff0c\u54ea\u6015\u4f60\u9047\u5230\u7684\u7ade\u4e89\u5bf9\u624b\u662f\u5929\u4e0b\u7b2c\u4e00\u5251\u5ba2\uff0c\u4f60\u4e5f\u8981\u6562\u4e8e\u4eae\u5251\uff0c\u4e0d\u7ba1\u6210\u529f\u4e0e\u5426\uff0c\u6253\u51fa\u81ea\u5df1\u7684\u98ce\u683c\u3002 ", "\u540e\u8bb0", "\n\u5173\u4e8e\u5c0f\u4f01\u4e1a\u4e0e\u975e\u540d\u4f01", "\n      \u672c\u6765\u6ca1\u5fc5\u8981\u4e13\u95e8\u5199\u8fd9\u4e00\u8282\uff0c\u53ea\u8981\u4e2a\u4eba\u6709\u5b9e\u529b\uff0c\u53bb\u5c0f\u4f01\u4e1a\u4e00\u6837\u6709\u53d1\u5c55\uff0c\u5728\u5927\u578b\u4f01\u4e1a\u4e2d\uff0c\u4f60\u4f1a\u611f\u89c9\u5230\u81ea\u5df1\u5c31\u50cf\u662f\u4e00\u9897\u87ba\u4e1d\u9489\uff0c\u672a\u5fc5\u6bd4\u5728\u5c0f\u4f01\u4e1a\u80fd\u591f\u83b7\u5f97\u953b\u70bc\u3002\u540d\u4f01\u4e0e\u975e\u540d\u4f01\u4e5f\u662f\u540c\u6837\u7684\u9053\u7406\uff0c\u53ea\u662f\u975e\u540d\u4f01\u53ef\u80fd\u6b63\u5904\u4e8e\u6210\u957f\u7684\u9636\u6bb5\u3002", "\n    \u300a\u76d8\u70b9\u300b\u548c\u672c\u6587\u6240\u8bb2\u7684\u653b\u7565\u90fd\u6ca1\u6709\u5c06\u5c0f\u4f01\u4e1a\u6392\u65a5\u5728\u5916\uff0c\u53ea\u662f\u56e0\u4e3a\u5c0f\u4f01\u4e1a\u7684\u4fe1\u606f\u76f8\u5bf9\u4e0d\u90a3\u4e48\u900f\u660e\uff0c\u4e0d\u592a\u597d\u6536\u96c6\uff0c\u56e0\u6b64\u300a\u76d8\u70b9\u300b\u4e00\u6587\u4e2d\uff0c\u624d\u6ca1\u6709\u7ed9\u4e88\u8fc7\u591a\u7684\u8bba\u8ff0\u3002", "\n\u5173\u4e8e\u5f85\u9047", "\n     \u300a\u76d8\u70b9\u300b\u4e00\u6587\u7edd\u5bf9\u6ca1\u6709\u8bef\u5bfc\u5927\u5bb6\u4f18\u5148\u8003\u8651\u5f85\u9047\u7684\u610f\u601d\uff0c\u4f46\u662f\u8bf4\u5230\u4f01\u4e1a\u4e0d\u53ef\u907f\u514d\u7684\u8981\u8c08\u5230\u85aa\u916c\uff0c\u800c\u4e14\u85aa\u916c\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u80fd\u591f\u8861\u91cf\u4e00\u4e2a\u5c97\u4f4d\u7684\u4ef7\u503c\u3002\u56e0\u6b64\u4e5f\u53ea\u662f\u628a\u6211\u638c\u63e1\u7684\u4fe1\u606f\u63d0\u4f9b\u51fa\u6765\uff0c\u4f9b\u5927\u5bb6\u53c2\u8003\u3002", "\n\u81f4\u5317\u90aeIT\u6bd5\u4e1a\u751f", "\n      \u5317\u90ae\u7684\uff29\uff34\u5728\u793e\u4f1a\u4e0a\u8fd8\u662f\u6bd4\u8f83\u53d7\u8ba4\u53ef\u7684\uff0c\u636e\u6211\u89c2\u5bdf\uff0c\u4e00\u822c\u6295\uff29\uff34\u7c7b\u7684\u5c97\u4f4d\uff0c\u5c11\u6709\u7b80\u5386\u7b5b\u9009\u90fd\u901a\u4e0d\u8fc7\u7684\uff08\u4e0d\u8fc7\u6211\u4e0d\u592a\u4e86\u89e3\u672c\u79d1\u751f\u7684\u60c5\u51b5\uff09\uff0c\u5230\u4f60\u53c2\u52a0\u9762\u8bd5\u7684\u65f6\u5019\u5c31\u4f1a\u53d1 \u73b0\uff0c\u51e0\u4e4e\u5230\u54ea\u513f\u9047\u5230\u7684\u90fd\u662f\u5317\u90ae\u4eba\u591a\uff08\u5f53\u7136\uff0c\u8fd9\u548c\u54b1\u4eec\u5b66\u6821IT\u7c7b\u4e13\u4e1a\u4eba\u6570\u4f17\u591a\u4e5f\u6709\u5173\u7cfb\uff09\uff0c\u6240\u4ee5\u9047\u5230\u6e05\u534e\u3001\u5317\u5927\u7b49\u9ad8\u6821\u7684\u725b\u4eba\u65f6\uff0c\u4e5f\u4e0d\u5fc5\u6709\u754f\u60e7\u8868\u73b0\uff0c\u4e0d\u5b9c\u5984\u81ea\u83f2 \u8584\uff0c\u76f8\u4fe1\u201dMade in BUPT\u201d\u662f\u54c1\u8d28\u7684\u4fdd\u8bc1\u3002", "\n\u81f4\u5916\u6821IT\u6bd5\u4e1a\u751f", "\n      \u5317\u90ae\u4eba\u8bba\u575b\u4e0a\u4e5f\u6709\u4e0d\u5c11\u5916\u6821\u7684\u5144\u5f1f\u59d0\u59b9\uff0c\u5982\u679c\u4f60\u4eec\u5b66\u6821\u7684\uff29\uff34\u6c34\u5e73\u4e0e\u5317\u90ae\u76f8\u5f53\uff0c\u751a\u81f3\u4e8e\u9ad8\u4e8e\u5317\u90ae\uff0c\u90a3\u4e48\u5bf9\u5317\u90ae\uff29\uff34\u7814\u7a76\u751f\u7684\u5efa\u8bae\u540c\u6837\u9002\u7528\u4e8e\u4f60\u4eec\uff0c\u5982\u679c\u4f60\u4eec\u5b66\u6821\u7684 IT\u5e76\u4e0d\u662f\u5341\u5206\u4e3b\u6d41\uff0c\u4e5f\u4e0d\u5b9c\u5984\u81ea\u83f2\u8584\uff0c\u8be5\u6295\u7b80\u5386\u7684\u5c31\u6295\uff0c\u53ea\u8981\u80fd\u591f\u901a\u8fc7\u7b80\u5386\u7b5b\u9009\uff0c\u54b1\u4eec\u7684\u80cc\u666f\u5c31\u662f\u7b26\u5408\u76ee\u6807\u804c\u4f4d\u7684\uff0c\u540c\u6837\uff0c\u7b14\u8bd5\u3001\u9762\u8bd5\u7684\u65f6\u5019\uff0c\u8981\u6562\u4e8e\u4eae\u5251\u3002", "\n\u81f4\u7ed9\u6211\u53d1\u7ad9\u5185\u4fe1\u7684\u540c\u5b66", "\n     \u7ed9\u6211\u53d1\u7ad9\u5185\u4fe1\u7684\u540c\u5b66\uff0c\u9996\u5148\u611f\u8c22\u4f60\u4eec\u5bf9\u6211\u7684\u4fe1\u4efb\uff0c\u6211\u4f1a\u5c3d\u91cf\u4e88\u4ee5\u7b54\u590d\uff0c\u4f46\u662f\u7531\u4e8e\u79cd\u79cd\u539f\u56e0\u53ef\u80fd\u4e0d\u4f1a\u56de\u590d\u7684\u90a3\u4e48\u53ca\u65f6\uff0c\u5176\u5b9e\u7531\u4e8e\u4e13\u4e1a\u3001\u7814\u7a76\u65b9\u5411\u7b49\u65b9\u9762\u7684\u9650\u5236\uff0c\u5982\u679c \u4f60\u4eec\u60f3\u4e86\u89e3\u4fe1\u606f\uff0c\u6211\u66f4\u5efa\u8bae\u4f60\u4eec\u591a\u548c\u672c\u5b9e\u9a8c\u5ba4\u3001\u672c\u73ed\u4ee5\u5f80\u6bd5\u4e1a\u7684\u5e08\u5144\u5e08\u59d0\u4eec\u6c9f\u901a\uff0c\u770b\u770b\u4ed6\u4eec\u53bb\u4e86\u54ea\u91cc\uff0c\u5bf9\u4f60\u4eec\u7684\u6c42\u804c\u6709\u4ec0\u4e48\u5efa\u8bae\u3002 ", "\u6700\u540e\uff0c\u8c22\u8c22\u9605\u8bfb\uff0c\u795d\u5927\u5bb6\u90fd\u80fd\u62ff\u5230\u7406\u60f3\u7684Offer\uff01"], "title": "C C++\u9762\u8bd5\u7b14\u8bd5\u9898\u76ee\u96c6\u9526"},
{"contents": ["\u9898\u76ee\uff1a \u5c4f\u5e55\u4e0a\u6253\u53701-1000\u8fd91000\u4e2a\u6570\uff0c \u4e0d\u8bb8\u4f7f\u7528\u5faa\u73af\u8bed\u53e5/\u6761\u4ef6\u8bed\u53e5\uff0c\u4e0d\u8bb8\u4f7f\u7528?:\u7b97\u7b26\u3002", "\n\u4e0d\u8bb8\u5728\u6e90\u4ee3\u7801\u4e2d\u7528\u5217\u4e3e\u8f93\u51fa\u8bed\u53e5\u7684\u529e\u6cd5\u50bb\u6253\uff0c\u6bd4\u5982\u4e00\u5343\u4e2aprintf\u8bed\u53e5\u4e0d\u884c\uff0c \u4e00\u4e2acout\u540e\u9762\u8ddf\u4e0a1-1000\u8fd9\u6837\u7684\u4e5f\u4e0d\u884c\uff0c", "\n\u4e0d\u518d\u8d58\u8ff0\u5176\u4ed6\u50bb\u6253\u884c\u4e3a\uff0c \u5927\u5bb6\u90fd\u80fd\u9886\u4f1a\u7cbe\u795e\u3002", "\u7ed3\u679c\uff0c\u51fa\u4e86\u597d\u591a\u5343\u5947\u767e\u602a\u7684\u7b54\u6848\uff0c \u4e0b\u9762\u4e3e\u4e00\u4e2a\u4f8b\u5b50", "void myprint(int n)", "\n{", "\nprintf(\u201c%d\\n\u201d,n);", "\nint t=1/(n-1000);", "\nmyprint(n+1);", "\n}", "void main()", "\n{", "\nmyprint(1);", "\n}", "\u2013"], "title": "\u4e00\u4e2a\u53d8\u6001C/C++\u9762\u8bd5\u9898\u7684\u53d8\u6001\u89e3\u6cd5\uff08\u8981\u7801\u519c\u80cc\u666f\uff09"},
{"contents": ["\n1\uff0e \u5728C++\u4e2d\uff0c\u51fd\u6570\u7684\u53c2\u6570\u6709\u4e24\u79cd\u4f20\u9012\u65b9\u5f0f\uff0c\u5b83\u4eec\u662f\u503c\u4f20\u9012\u548c \u5730\u5740\u6216\u6307\u9488\u6216\u5f15\u7528\u4f20\u9012 \u3002", "\n2\uff0e \u5f53\u4e00\u4e2a\u6210\u5458\u51fd\u6570\u88ab\u8c03\u7528\u65f6\uff0c\u8be5\u6210\u5458\u51fd\u6570\u7684 this\u6307\u9488 \u6307\u5411\u8c03\u7528\u5b83\u7684\u5bf9\u8c61\u3002", "\n3\uff0e \u5728\u57fa\u7c7b\u548c\u6d3e\u751f\u7c7b\u4e2d\uff0c\u6d3e\u751f\u7c7b\u53ef\u4ee5\u5b9a\u4e49\u5176\u57fa\u7c7b\u4e2d\u4e0d\u5177\u5907\u7684\u6570\u636e\u548c\u64cd\u4f5c\u3002\u5bf9\u4e24\u4e2a\u6709\u76f8\u540c\u540d\u5b57\u7684\u6570\u636e\u6210\u5458\u8fdb\u884c\u8bbf\u95ee\u65f6\uff0c\u5982\u679c\u6ca1\u6709 \u4f5c\u7528\u57df\u5206\u9694\u7b26\u9650\u5b9a\u65f6 \uff0c\u5bf9\u6b64\u6570\u636e\u6210\u5458\u7684\u8bbf\u95ee\u5c06\u51fa\u73b0\u6b67\u4e49\u3002", "\n4\uff0e \u62f7\u8d1d\u6784\u9020\u51fd\u6570\u4f7f\u7528 \u5f15\u7528 \u4f5c\u4e3a\u53c2\u6570\u521d\u59cb\u5316\u521b\u5efa\u4e2d\u7684\u5bf9\u8c61\u3002", "\n5\uff0e \u5728\u516c\u6709\u7ee7\u627f\u7684\u60c5\u51b5\u4e0b\uff0c\u57fa\u7c7b\u6570\u636e\u6210\u5458\u5728\u6d3e\u751f\u7c7b\u4e2d\u7684\u8bbf\u95ee\u6743\u9650 \u4fdd\u6301\u4e0d\u53d8 \u3002", "\n6\uff0e \u63cf\u8ff0\u547d\u9898\u201dA\u5c0f\u4e8eB\u6216\u5c0f\u4e8eC\u201d\u7684\u8868\u8fbe\u5f0f\u4e3a A<B||A<C\u3000\u3002", "\n7\uff0e \u7528new\u7533\u8bf7\u67d0\u4e00\u4e2a\u7c7b\u7684\u52a8\u6001\u5bf9\u8c61\u6570\u7ec4\u65f6\uff0c\u5728\u8be5\u7c7b\u4e2d\u5fc5\u987b\u80fd\u591f\u5339\u914d\u5230 \u6ca1\u6709\u5f62\u53c2\u7684\u6216\u7f3a\u7701\u53c2\u6570 \u6784\u9020\u51fd\u6570\uff0c\u5426\u5219\u5e94\u7528\u7a0b\u5e8f\u4f1a\u4ea7\u751f\u4e00\u4e2a\u7f16\u8bd1\u9519\u8bef\u3002", "\n8\uff0e \u9759\u6001\u6570\u636e\u6210\u5458\u5728\u7c7b\u5916\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u4e14\u9759\u6001\u6570\u636e\u6210\u5458\u7684\u4e00\u4e2a\u62f7\u8d1d\u88ab\u7c7b\u7684\u6240\u6709\u5bf9\u8c61 \u5171\u4eab \u3002", "\n9\uff0e \u4e3a\u4e86\u907f\u514d\u53ef\u80fd\u51fa\u73b0\u7684\u6b67\u4e49\uff0cC++\u5bf9if\u2026else\u8bed\u53e5\u914d\u5bf9\u89c4\u5219\u89c4\u5b9a\u4e3a\uff1aelse\u603b\u662f\u4e0e \u4e0e\u6700\u8fd1\u7684if \u914d\u5bf9\u3002", "\n10\uff0e \u8bbe\u201dint a=3,b=4,c=5;\u201d\uff0c\u8868\u8fbe\u5f0f\u201d\uff08a+b\uff09>c&&b==c\u201d\u7684\u503c\u662f 0 \u3002", "\n", "\n11\uff0e \u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u6709\u56db\u5927\u7279\u5f81\uff0c\u5b83\u4eec\u662f\u62bd\u8c61\u3001\u5c01\u88c5\u3001 \u7ee7\u627f \u3001 \u591a\u6001 \u3002", "\n12\uff0e \u5728Visual C++\u4e2d\uff0c\u5b9a\u4e49\u91cd\u8f7d\u51fd\u6570\u65f6\uff0c\u5e94\u81f3\u5c11\u4f7f\u91cd\u8f7d\u51fd\u6570\u7684\u53c2\u6570\u4e2a\u6570\u6216\u53c2\u6570\u7c7b\u578b \u4e0d\u540c \uff1b\u5728\u57fa\u7c7b\u548c\u6d3e\u751f\u7c7b\u4e2d\uff0c\u6210\u5458\u51fd\u6570\u7684\u8986\u76d6\u662f\u6307 \u6d3e\u751f\u7c7b\u6210\u5458\u51fd\u6570\u4e0e\u5728\u57fa\u7c7b\u88ab\u8986\u76d6\u7684\u6210\u5458\u51fd\u6570\u540d\u3001\u53c2\u6570\u4e2a\u6570\u3001\u53c2\u6570\u7c7b\u578b\u548c\u8fd4\u56de\u503c\u7c7b\u578b\u5747\u76f8\u540c \u3002", "\n13\uff0e \u6784\u9020\u51fd\u6570\u4e0e\u6790\u6784\u51fd\u6570\u9664\u529f\u80fd\u4e0d\u540c\u5916\uff0c\u5728\u5b9a\u4e49\u5f62\u5f0f\u4e0a\uff0c\u5b83\u4eec\u7684\u533a\u522b\u8fd8\u5305\u62ec\u6784\u9020\u51fd\u6570\u540d\u4e0e\u7c7b\u540d\u76f8\u540c\uff0c\u800c\u6790\u6784\u51fd\u6570\u540d\u662f\u5728\u7c7b\u540d\u524d\u52a0\u4e00\u4e2a~\u3001 \u6790\u6784\u51fd\u6570\u6ca1\u6709\u53c2\u6570 \u3001 \u6790\u6784\u51fd\u6570\u53ef\u4ee5\u5b9a\u4e49\u4e3a\u865a\u51fd\u6570 \u3001\u65e0\u8fd4\u56de\u503c\u3001\u4e0d\u80fd\u88ab\u91cd\u8f7d\u3001\u4e00\u4e2a\u7c7b\u4e2d\u53ea\u6709\u4e00\u4e2a\u6790\u6784\u51fd\u6570", "\n14\uff0e \u52a8\u6001\u8054\u7f16\u8981\u6ee1\u8db3\u4e24\u4e2a\u6761\u4ef6\uff0c\u5b83\u4eec\u662f \u88ab\u8c03\u7528\u7684\u6210\u5458\u51fd\u6570\u662f\u865a\u51fd\u6570 \u3001 \u7528\u5bf9\u8c61\u7684\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u6210\u5458\u51fd\u6570 \u3002", "\n15\uff0e \u5728C++\u7c7b\u4e2d\uff0c\u6709\u4e00\u79cd\u4e0d\u80fd\u5b9a\u4e49\u5bf9\u8c61\u7684\u7c7b\uff0c\u8fd9\u6837\u7684\u7c7b\u53ea\u80fd\u88ab\u7ee7\u627f\uff0c\u79f0\u4e4b\u4e3a \u62bd\u8c61\u7c7b \uff0c\u5b9a\u4e49\u8be5\u7c7b\u81f3\u5c11\u5177\u6709\u4e00\u4e2a \u7eaf\u865a\u51fd\u6570 \u3002", "\n16\uff0e \u5728C++\u7c7b\u4e2d\uff0cconst\u5173\u952e\u5b57\u53ef\u4ee5\u4fee\u9970\u5bf9\u8c61\u548c\u6210\u5458\u51fd\u6570\uff0cconst\u5bf9\u8c61\u4e0d\u80fd \u88ab\u4fee\u6539 \uff0cconst\u6210\u5458\u51fd\u6570\u4e0d\u80fd \u4fee\u6539\u7c7b\u6570\u636e\u6210\u5458 \u3002", "\n17\uff0e \u4e3e\u51faC++\u4e2d\u4e24\u79cd\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u6570\u636e\u7c7b\u578b\uff1a \u7c7b \u3001 \u679a\u4e3e", "\n18\uff0e C++\u4e2d\u6ca1\u6709\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u5b57\u7b26\u4e32\u662f\u901a\u8fc7 \u5b57\u7b26\u6570\u7ec4 \u6765\u8868\u793a\u7684\uff0c\u6bcf\u4e00\u4e2a\u5b57\u7b26\u4e32\u90fd\u6709\u4e00\u4e2a\u7ed3\u5c3e\u5b57\u7b26 /0 \u3002", "\n19\uff0e C++\u4e2d\u6ca1\u6709\u8f93\u5165\u8f93\u51fa\u8bed\u53e5\uff0c\u8f93\u5165\u8f93\u51fa\u662f\u901a\u8fc7 \u8f93\u5165\u8f93\u51fa\u5e93 \u5b9e\u73b0\u7684\uff0c \u5199\u51fa\u4e00\u6761\u6253\u5370\u6574\u578b\u53d8\u91cfn\u7684\u8f93\u51fa\u8bed\u53e5\uff1acout<<n;", "\n20\uff0e \u4e3e\u51faC++\u4e2d\u4e24\u79cd\u4ee3\u7801\u590d\u7528\u7684\u65b9\u5f0f\uff1a \u7ee7\u627f \u3001 \u590d\u7528 \u3002", "\n", "\n21\uff0e \u4e0b\u9762\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f\u30003\u3000\u3002", "\n#include <stdio.h>", "\nvoid main()", "\n{", "\nchar a=\u2019a',b=\u2019j';", "\nfloat x;", "\nx=(b-a)/(\u2018F\u2019-'A\u2019);", "\nprintf(\u201c%d/n\u201d,(int)(3.14*x));", "\n}", "\n22\uff0e \u4e0b\u9762\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f2 5 8 11 14\u3002", "\n#include \u201ciostream.h\u201d", "\nvoid main( )", "\n{", "\nint i=1;", "\nwhile (i<=15){", "\ni++;", "\nif (i%3!=2) continue;", "\nelse cout <<\u201di=\u201d<<i<<endl;", "\n}", "\n}", "\n23\uff0e \u4e0b\u9762\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f________\u3002", "\n#include \u201ciostream.h\u201d", "\nclass test", "\n{", "\nprivate:", "\nint num;", "\nfloat fl;", "\npublic:", "\ntest( );", "\nint getint( ){return num;}", "\nfloat getfloat( ){return fl;}", "\n~test( );", "\n};", "\ntest::test( )", "\n{", "\ncout << \u201cInitalizing default\u201d << endl;", "\nnum=0;fl=0.0;", "\n}", "\ntest::~test( )", "\n{", "\ncout << \u201cDesdtructor is active\u201d << endl;", "\n}", "\nvoid main( )", "\n{", "\ntest array[2];", "\ncout << array[1].getint( )<< \u201d \u201d << array[1].getfloat( ) <<endl;", "\n}", "\nInitalizing default", "\nInitalizing default", "\n0 0", "\nDesdtructor is active", "\nDesdtructor is active", "\n24\uff0e \u4e0b\u9762\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f________\u3002", "\n#include <iostream.h>", "\nclass A", "\n{", "\npublic:", "\nA(){cout<<\u201dA::A() called./n\u201d;}", "\nvirtual ~A(){cout<<\u201dA::~A() called./n\u201d;}", "\n};", "\nclass B:public A", "\n{", "\npublic:", "\nB(int i){", "\ncout<<\u201dB::B() called./n\u201d;", "\nbuf=new char;}", "\nvirtual ~B()", "\n{", "\ndelete []buf;", "\ncout<<\u201dB::~B() called./n\u201d;", "\n}", "\nprivate:", "\nchar *buf;", "\n};", "\nvoid fun(A *a)", "\n{", "\ndelete a;", "\n}", "\nvoid main()", "\n{", "\nA *a=new B(15);", "\nfun(a);", "\n}", "\nA::A() called.", "\nB::B() called.", "\nB::~B() called.", "\nA::~A() called.", "\n25\uff0e \u4e0b\u9762\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f________\u3002", "\n#include <stdio.h>", "\nint a[ ]={1,3,5,7,9};", "\nint *p[ ]={a,a+1,a+2,a+3,a+4};", "\nvoid main( )", "\n{", "\nprintf(\u201c%d/t%d/t%d/n\u201d,a[4],*(a+2),*p[1]);", "\nprintf(\u201c%d/t%d/t%d/n\u201d,**(p+1)+a[2],*(p+4)-*(p+0),*(a+3)%a[4]);", "\n}", "\n9 5 3", "\n8 4 7", "\u4e8c\u3001 \u95ee\u7b54\u9898\uff08\u6bcf\u5c0f\u98985\u5206\uff0c\u517120\u5206\uff09", "\n1 \u82e5\u7a0b\u5e8f\u5458\u6ca1\u6709\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u5219\u7f16\u8bd1\u5668\u81ea\u52a8\u751f\u6210\u4e00\u4e2a\u7f3a\u7701\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u5b83\u53ef\u80fd\u4f1a\u4ea7\u751f\u4ec0\u4e48\u95ee\u9898\uff1f", "\n\u89e3\u7b54\u8981\u70b9\uff1a\u7f3a\u7701\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u53ea\u4f1a\u62f7\u8d1d\u5b58\u50a8\u533a\u7684\u5185\u5bb9\uff0c\u5982\u679c\u5176\u4e2d\u6709\u5f15\u7528\u7684\u8bdd\uff0c\u5b83\u662f\u4e0d\u62f7\u8d1d\u7684\uff0c\u5c31\u9020\u6210\u4e86\u4e24\u4e2a\u7c7b\u7684\u5b9e\u4f8b\u5f15\u7528\u4e86\u540c\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5bfc\u81f4\u8fd0\u884c\u51fa\u9519", "\n2\u7b80\u8ff0\u6210\u5458\u51fd\u6570\u3001\u5168\u5c40\u51fd\u6570\u548c\u53cb\u5143\u51fd\u6570\u7684\u5dee\u522b\u3002", "\n\u89e3\u7b54\u8981\u70b9\uff1a\u4ee5\u4e0b\u51e0\u70b9\u5fc5\u987b\u8bf4\u6e05\u695a\uff1a", "\n\u6210\u5458\u51fd\u6570\uff1a\u5b9a\u4e49\u7c7b\u7684\u65f6\u5019\uff0c\u5b9a\u4e49\u4e86public\u8bbf\u95ee\u7ea7\u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u8bbf\u95ee\u7c7b\u7684\u6240\u6709\u6570\u636e\u6210\u5458\uff0c\u4e5f\u53ef\u4ee5\u8c03\u7528\u8be5\u7c7b\u7684\u5176\u4ed6\u6210\u5458\u51fd\u6570\uff1b", "\n\u5168\u5c40\u51fd\u6570\uff1a\u5b9a\u4e49\u5728\u4e3b\u51fd\u6570\u548c\u7c7b\u5b9a\u4e49\u4e4b\u5916\u7684\u51fd\u6570\uff0c\u5728\u4efb\u4f55\u5730\u65b9\u5141\u8bb8\u88ab\u8c03\u7528\uff0c\u4f46\u662f\u8fc7\u591a\u7684\u5168\u5c40\u51fd\u6570\u5bfc\u81f4\u7a0b\u5e8f\u81c3\u80bf\uff1b", "\n\u53cb\u5143\u51fd\u6570\uff1a\u7531\u4e8e\u901a\u8fc7\u7c7b\u7684\u5b9e\u4f8b\u5e76\u4e0d\u80fd\u8bbf\u95ee\u5230\u7c7b\u7684\u79c1\u6709\u6210\u5458\uff0c\u5982\u679c\u5728\u7c7b\u5b9a\u4e49\u4e4b\u5185\u5b9a\u4e49\u53cb\u5143\u51fd\u6570\uff0c\u5728\u7c7b\u7684\u5b9e\u4f8b\u4e2d\u5c31\u53ef\u4ee5\u901a\u8fc7\u53cb\u5143\u51fd\u6570\u8bbf\u95ee\u79c1\u6709\u6210\u5458\uff0c\u8be5\u51fd\u6570\u9700\u8981friend\u5173\u952e\u5b57\u58f0\u660e", "\n3\u7b80\u8ff0\u7ed3\u6784\u5316\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u3001\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u57fa\u672c\u601d\u60f3\u3002", "\n\u89e3\u7b54\u8981\u70b9\uff1a\u7ed3\u6784\u5316\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u5c06\u6570\u636e\u548c\u5bf9\u6570\u636e\u7684\u64cd\u4f5c\u5206\u79bb\uff0c\u7a0b\u5e8f\u662f\u7531\u4e00\u4e2a\u4e2a\u7684\u51fd\u6570\u7ec4\u6210\u7684\uff0c\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u5c06\u6570\u636e\u548c\u64cd\u4f5c\u5c01\u88c5\u5728\u4e00\u8d77\uff0c\u7a0b\u5e8f\u662f\u7531\u4e00\u4e2a\u4e2a\u5bf9\u8c61\u7ec4\u6210\u7684\uff0c\u5bf9\u8c61\u4e4b\u95f4\u901a\u8fc7\u63a5\u53e3\u8fdb\u884c\u901a\u4fe1\uff0c\u5b83\u80fd\u591f\u8f83\u597d\u5730\u652f\u6301\u7a0b\u5e8f\u4ee3\u7801\u7684\u590d\u7528\u3002", "\n4\u7ed3\u6784struct\u548c\u7c7bclass\u6709\u4ec0\u4e48\u5f02\u540c\uff1f", "\n\u89e3\u7b54\u8981\u70b9\uff1astruct\u548cclass\u90fd\u53ef\u4ee5\u5b9a\u4e49\u7c7b\uff0c\u4f46\u662f\u7f3a\u7701\u8bbf\u95ee\u6743\u9650\u8bf4\u660e\u65f6\uff0cstruct\u7684\u6210\u5458\u662f\u516c\u6709\u7684\uff0c\u800cclass\u7684\u6210\u5458\u662f\u79c1\u6709\u7684\u3002\u5728C++\u4e2d\uff0cstruct\u53ef\u88abclass\u4ee3\u66ff\u3002", "\n\u4e09\u3001\u627e\u51fa\u4e0b\u9762\u7a0b\u5e8f\uff08\u6216\u7a0b\u5e8f\u6bb5\uff09\u4e2d\u7684\u8bed\u6cd5\u9519\u8bef\uff0c\u5e76\u4e88\u4ee5\u7ea0\u6b63\uff08\u6bcf\u5c0f\u98984\u5206\uff0c\u51718\u5206\uff09", "\n\uff081\uff09\u7a0b\u5e8f\u529f\u80fd\u662f\u5012\u5e8f\u8f93\u51fa\u5404\u7ed9\u5b9a\u7684\u5b57\u7b26\u4e32\u3002", "\n#include <stdio.h>", "\nvoid main()", "\n{", "\nchar str[5][ ]={\u201cFirst\u201d,\u201dSecond\u201d,\u201dThird\u201d,\u201dForth\u201d,\u201dFifth\u201d};", "\nchar *cp[ ]={str[4],str[3],str[2],str[1],str[0]};", "\nint i;", "\nwhile(i<=5)", "\n{", "\nprintf(\u201c%c \u201c,*(cp+i));", "\ni++;", "\n}", "\n}", "\n\u2460 \u201cchar str[5][ ]={\u201cFirst\u201d,\u201dSecond\u201d,\u201dThird\u201d,\u201dForth\u201d,\u201dFifth\u201d};\u201d\u5e94\u4e3a", "\n\u201cchar str[5][10 ]={\u201cFirst\u201d,\u201dSecond\u201d,\u201dThird\u201d,\u201dForth\u201d,\u201dFifth\u201d};\u201d", "\n\u2461 \u201cwhile(i<=5)\u201d\u5e94\u4e3a\u201dwhile(i<5)\u201d", "\n\u2462 \u201cprintf(\u201c%c \u201c,*(cp+i));\u201d\u5e94\u4e3a\u201dprintf(\u201c%s\u201d,*(cp+i));\u201d", "\n\u2463 \u201cint i;\u201d\u5e94\u4e3a\u201dint i=0;\u201d", "\n\uff082\uff09\u7a0b\u5e8f\u529f\u80fd\u662f\u5c06\u5404\u4e2a\u5e73\u65b9\u6839\u503c\u653e\u5165\u6570\u7ec4\u4e2d\u3002", "\n#include <stdio.h>", "\nvoid main()", "\n{", "\nint max,a,i;", "\nscanf(\u201c%d%d\u201d,max,a);", "\ndouble x[max];", "\nfor (i=0;i<max;i++)", "\nx=sqrt(a*i);", "\n}", "\n\u2460 \u589e\u52a0\u201d#include <math.h>\u201d", "\n\u2461 \u201cscanf(\u201c%d%d\u201d,max,a);\u201d\u5e94\u4e3a\u201dscanf(\u201c%d%d\u201d,&max,&a);\u201d", "\n\u2462 \u201cdouble x[max];\u201d\u6539\u4e3a\uff1a", "\n\u201cdouble *x=new double[max];\u201d", "\n\u2026", "\n\u201cdelete []x;\u201d", "\n\u56db\u3001\uff088\u5206\uff09\u4e0b\u5217shape\u7c7b\u662f\u4e00\u4e2a\u8868\u793a\u5f62\u72b6\u7684\u62bd\u8c61\u7c7b\uff0carea( )\u4e3a\u6c42\u56fe\u5f62\u9762\u79ef\u7684\u51fd\u6570\uff0ctotal( )\u5219\u662f\u4e00\u4e2a\u901a\u7528\u7684\u7528\u4ee5\u6c42\u4e0d\u540c\u5f62\u72b6\u7684\u56fe\u5f62\u9762\u79ef\u603b\u548c\u7684\u51fd\u6570\u3002\u8bf7\u4eceshape\u7c7b\u6d3e\u751f\u4e09\u89d2\u5f62\u7c7b(triangle)\u3001\u77e9\u5f62\u7c7b\uff08rectangle\uff09\uff0c\u5e76\u7ed9\u51fa\u5177\u4f53\u7684\u6c42\u9762\u79ef\u51fd\u6570", "\nclass shape{", "\npublic:", "\nvirtual float area( )=0;", "\n};", "float total(shape *s[ ],int n)", "\n{", "\nfloat sum=0.0;", "\nfor(int i=0;i<n;i++)", "\nsum+=s->area( );", "\nreturn sum;", "\n}", "\nclass Triangle:public Shape", "\n{", "\npublic:", "\nTriangle(double h,double w){H=h;W=w;}", "\ndouble Area() const{return H*W*0.5;}", "\nprivate:", "\ndouble H,W;", "\n};", "\nclass Rectangle:public Shape", "\n{", "\npublic:", "\nRectangle(double h,double w){H=h;W=w;}", "\ndouble Area()const{return H*W;}", "\nprivate:", "\ndouble H,W;", "\n};", "\u4e94\u3001\uff086\u5206\uff09\u5b8c\u6210\u987a\u5e8f\u67e5\u627e\u51fd\u6570f_seq( )\u3002\u5176\u8fc7\u7a0b\u662f\uff1a\u4ece\u8868\u5934\u5f00\u59cb\uff0c\u6839\u636e\u7ed9\u5b9a\u7684\u6a21\u5f0f\uff0c\u9010\u9879\u4e0e\u8868\u4e2d\u5143\u7d20\u6bd4\u8f83\u3002\u5982\u679c\u627e\u5230\u6240\u9700\u5143\u7d20\uff0c\u5219\u67e5\u627e\u6210\u529f\uff0c\u5e76\u6253\u5370\u51fa\u5b83\u5728\u8868\u4e2d\u7684\u987a\u5e8f\u53f7\u3002\u5982\u679c\u67e5\u627e\u6574\u4e2a\u8868\u4ecd\u672a\u627e\u5230\u6240\u9700\u5bf9\u8c61\uff0c\u5219\u67e5\u627e\u5931\u8d25", "\n#include <stdio.h>", "\nvoid f_seq(char *list[],char *object,int len)", "\n//list \u6307\u9488\u6570\u7ec4\uff0c\u6307\u5411\u5b57\u7b26\u4e32", "\n//object \u6a21\u5f0f\u4e32", "\n//len \u8868\u7684\u957f\u5ea6", "\n{", "\nchar **p;", "\nint strcmp(char *s,char *t);", "\np=list;", "\nwhile (_____\u2460______) //p<list+len", "\nif (strcmp(*p,object)==0)", "\nbreak;", "\nelse ______\u2461_______; //p++", "\nif (p<list+len)", "\nprintf( \u201cSuccess! **% d/n\u201d,p-list);", "\nelse printf(\u201cUnsuccess!/n\u201d);", "\n}", "\nint strcmp(char *s,char *t)", "\n{", "\nfor (;*s==*t; s++,t++)", "\nif (*s==\u2019/0\u2032)", "\nreturn(0);", "\nreturn(_____\u2462______); //s-t\u6216*s-*t\u62161", "\n}", "\n\u516d\u3001\uff088\u5206\uff09\u5b8c\u6210\u4f7f\u94fe\u8868\u9006\u7f6e\u51fd\u6570reverse\uff0c\u82e5\u6709\u94fe\u8868\uff1a", "\n\u94fe\u8868\u7ed3\u70b9\u7684\u7ed3\u6784\u5982\u4e0b\uff1a", "\nstruct node", "\n{", "\nint num;", "\nstruct node *next;", "\n}", "\nstruct node* reverse(struct node *head)", "\n//head \u94fe\u8868\u5934\u7ed3\u70b9", "\n{", "\nstruct node *p,*temp1,*temp2;", "\nif(head==NULL____\u2460____) return head; //||head->next==NULL", "\np=head->next;head->next=NULL;", "\nwhile(____\u2461____) //p!=NULL\u6216p", "\n{", "\ntemp1=head;", "\n____\u2462____; //head=p;", "\ntemp2=p;", "\np=p->next;", "\n____\u2463____; //temp2->next=temp1;\u6216head->next=temp1;", "\n}//Match while statenment", "\nreturn head; //\u8fd4\u56de\u9006\u7f6e\u540e\u7684\u94fe\u8868\u7684\u5934\u7ed3\u70b9", "\n}"], "title": "\u6574\u7406\u4e4bc++\u7b14\u8bd5"},
{"contents": ["CDatabase\u7c7b\u7528\u4e8e\u5e94\u7528\u7a0b\u5e8f\u5efa\u7acb\u540c\u6570\u636e\u6e90\u7684\u8fde\u63a5\u3002CDatabase\u7c7b\u5305\u542b\u4e00\u4e2am_hdbc\u53d8\u91cf\uff0c\u5b83\u4ee3\u8868\u4e86\u6570\u636e\u6e90\u7684\u8fde\u63a5\u53e5\u67c4\u3002\u5982\u679c\u8981\u5efa\u7acbCDatabase\u7c7b\u7684\u5b9e\u4f8b\uff0c\u5e94\u5148\u8c03\u7528\u8be5\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u518d\u8c03\u7528Open\u51fd\u6570\uff0c\u901a\u8fc7\u8c03\u7528\uff0c\u521d\u59cb\u5316\u73af\u5883\u53d8\u91cf\uff0c\u5e76\u6267\u884c\u4e0e\u6570\u636e\u6e90\u7684\u8fde\u63a5\u3002\u5173\u95ed\u6570\u636e\u6e90\u8fde\u63a5\u7684\u51fd\u6570\u662fClose\u3002", "CDatabase\u7c7b\u63d0\u4f9b\u4e86\u5bf9\u6570\u636e\u5e93\u8fdb\u884c\u64cd\u4f5c\u7684\u51fd\u6570\uff0c\u4e3a\u4e86\u6267\u884c\u4e8b\u52a1\u64cd\u4f5c\uff0cCDatabase\u7c7b\u63d0\u4f9b\u4e86BeginTrans\u51fd\u6570\uff0c\u5f53\u5168\u90e8\u6570\u636e\u90fd\u5904\u7406\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528CommitTrans\u51fd\u6570\u63d0\u4ea4\u4e8b\u52a1\uff0c\u6216\u8005\u5728\u7279\u6b8a\u60c5\u51b5\u4e0b\u901a\u8fc7\u8c03\u7528Rollback\u51fd\u6570\u5c06\u5904\u7406\u56de\u9000\u3002", "CDatabase\u7c7b\u63d0\u4f9b\u7684\u51fd\u6570\u53ef\u4ee5\u7528\u4e8e\u8fd4\u56de\u6570\u636e\u6e90\u7684\u7279\u5b9a\u4fe1\u606f\uff0c\u4f8b\u5982\u901a\u8fc7GetConnect\u51fd\u6570\u8fd4\u56de\u5728\u4f7f\u7528\u51fd\u6570Open\u8fde\u63a5\u6570\u636e\u6e90\u65f6\u7684\u8fde\u63a5\u5b57\u7b26\u4e32\uff0c\u901a\u8fc7\u8c03\u7528IsOpen\u51fd\u6570\u8fd4\u56de\u5f53\u524d\u7684CDatabase\u5b9e\u4f8b\u662f\u5426\u5df2\u7ecf\u8fde\u63a5\u5230\u6570\u636e\u6e90\u4e0a\uff0c\u901a\u8fc7\u8c03\u7528CanUpdate\u51fd\u6570\u8fd4\u56de\u5f53\u524d\u7684CDatabase\u5b9e\u4f8b\u662f\u5426\u662f\u53ef\u66f4\u65b0\u7684\uff0c\u901a\u8fc7\u8c03\u7528CanTransact\u51fd\u6570\u8fd4\u56de\u5f53\u524d\u7684CDatabase\u5b9e\u4f8b\u662f\u5426\u652f\u6301\u4e8b\u52a1\u64cd\u4f5c\uff0c\u7b49\u7b49\u3002", "\u603b\u4e4b\uff0cCDatabase\u7c7b\u4e3aC++\u6570\u636e\u5e93\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u4e86ODBC\u7684\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u63a5\u53e3\u3002"], "title": "\u4ecb\u7ecd\u4e00\u4e0bCDatabase\u7c7b\u53ca\u5b83\u7684\u7528\u6cd5"},
{"contents": [], "title": "\u4f7f\u7528ODBC API\u5f00\u53d1\u6570\u636e\u5e93\u5e94\u7528\u7a0b\u5e8f\u7684\u6b65\u9aa4\u662f\u4ec0\u4e48\uff1f"},
{"contents": ["ActiveX\u7684\u4f18\u52bf\u662f\uff1a", "ActiveX\u7684\u5185\u5bb9\u5305\u62ec\uff1a"], "title": "ActiveX\u90fd\u6709\u54ea\u4e9b\u4f18\u52bf\uff1f"},
{"contents": ["ActiveX\u662fCOM\u6280\u672f\u7684\u8fdb\u4e00\u6b65\u6269\u5c55\uff0c\u5b83\u5b9a\u4e49\u4e86\u7ec4\u4ef6\u7684\u901a\u7528\u6027\uff0c\u4f7f\u7ec4\u4ef6\u80fd\u591f\u540c\u53e6\u5916\u4e00\u4e2a\u7ec4\u4ef6\u901a\u4fe1\uff0c\u800c\u4e0d\u5bf9\u521b\u5efa\u7ec4\u4ef6\u7684\u8bed\u8a00\u8fdb\u884c\u9650\u5236\uff1bActiveX\u5b9a\u4e49\u4e86\u7ec4\u4ef6\u7684\u5206\u5e03\u5f0f\u5bf9\u8c61\u6a21\u578b\uff08DCOM\uff09\uff0c\u4f7f\u5206\u5e03\u5728\u4e0d\u540c\u673a\u5668\u4e0a\u7684\u7ec4\u4ef6\u4e4b\u95f4\u7684\u901a\u4fe1\u53ef\u4ee5\u50cf\u672c\u5730\u8bbf\u95ee\u4e00\u6837\u5bb9\u6613\u3002ActiveX\u5728Internet\u4e0a\u7684\u5e7f\u6cdb\u5e94\u7528\u4f7f\u5f97Internet\u7528\u6237\u53ef\u4ee5\u5728\u5b83\u7684\u652f\u6301\u4e0b\u5b9e\u73b0\u4e0e\u7f51\u9875\u5185\u5bb9\u7684\u4ea4\u4e92\uff0c\u4e3a\u5efa\u7acb\u6d3b\u52a8\u9875\u9762\u5960\u5b9a\u4e86\u6280\u672f\u57fa\u7840\u3002"], "title": "\u4ecb\u7ecd\u4e00\u4e0bActiveX\uff1f"},
{"contents": ["COM\u5bf9\u6570\u636e\u5e93\u8bbf\u95ee\u7684\u652f\u6301\u4e3b\u8981\u8868\u73b0\u5728OLE DB\u548cDAO\u4e0a\u3002OLE DB\u662f\u5b8c\u5168\u57fa\u4e8eCOM\u7684\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u5b83\u662fODBC\u7684\u66ff\u4ee3\u54c1\uff0c\u4f46\u4e0d\u518d\u5c40\u9650\u4e8e\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff0c\u800c\u662f\u51e0\u4e4e\u9002\u7528\u4e8e\u6240\u6709\u7684\u7ebf\u6027\u6570\u636e\uff1bDAO\u662f\u5efa\u7acb\u5728OLE DB\u4e0a\u5c42\u7684\u81ea\u52a8\u5316\u5bf9\u8c61\u5e93\uff0c\u5b83\u53ef\u4ee5\u5e7f\u6cdb\u8fd0\u7528\u4e8e\u5404\u79cd\u811a\u672c\u8bed\u8a00\u4e2d\uff0c\u4e3a\u811a\u672c\u8bed\u8a00\u8bbf\u95ee\u6570\u636e\u5e93\u63d0\u4f9b\u4e86\u6781\u5927\u7684\u4fbf\u5229\u3002", "OLE DB/DAO\u5305\u542b\u6570\u636e\u5e93\u8bbf\u95ee\u7684\u4e09\u4e2a\u5c42\u6b21\uff1a\u6570\u636e\u63d0\u4f9b\u8005\uff08data provider\uff09\u3001\u6570\u636e\u670d\u52a1\u7ec4\u4ef6\uff08data service component\uff09\u3001\u6570\u636e\u4f7f\u7528\u8005\uff08data consumer\uff09\u3002\u7531\u4e8e\u91c7\u7528\u4e86\u5f00\u653e\u7684COM\u63a5\u53e3\uff0c\u589e\u52a0\u6570\u636e\u6e90\u652f\u6301\u5c06\u53d8\u5f97\u66f4\u52a0\u5bb9\u6613\uff0c\u6570\u636e\u63d0\u4f9b\u8005\u53ea\u9700\u8981\u63d0\u4f9b\u57fa\u672c\u7684\u670d\u52a1\uff0c\u5728\u5e94\u7528\u5c42\u4e0a\u7684\u6570\u636e\u4f7f\u7528\u8005\u5c31\u53ef\u4ee5\u83b7\u5f97\u5404\u79cd\u670d\u52a1\u7ec4\u4ef6\u63d0\u4f9b\u7684\u670d\u52a1\u3002", "OLE DB/DAO\u4ee5COM\u7684\u65b9\u5f0f\u4e3a\u6570\u636e\u8bbf\u95ee\u63d0\u4f9b\u4e86\u4e00\u81f4\u7684\u63a5\u53e3\uff0c\u8fd9\u4e9b\u63a5\u53e3\u5df2\u7ecf\u88ab\u5e7f\u6cdb\u8fd0\u7528\u4e8e\u5fae\u8f6f\u7684\u5404\u79cd\u4ea7\u54c1\u4e2d\uff0c\u5e76\u4e14\u5fae\u8f6f\u63a8\u51fa\u7684Visual Basic\u5f00\u53d1\u5de5\u5177\u5957\u4e5f\u63d0\u4f9b\u4e86OLE DB\u7ec4\u4ef6\u7684\u5f00\u53d1\u652f\u6301\uff0c\u56e0\u6b64\uff0cOLE DB/DAO\u5c06\u4f1a\u5f97\u5230\u8fdb\u4e00\u6b65\u7684\u53d1\u5c55\u3002"], "title": "COM\u662f\u5982\u4f55\u8bbf\u95ee\u6570\u636e\u5e93\u7684\uff1f"},
{"contents": ["\nCoding\u9898\uff0c\u5927\u81f4\u8981\u70b9:", "\n", "\u5173\u4e8e\u591a\u7ebf\u7a0b\uff0c\u4e00\u822c\u6765\u8bf4reader/writer lock\u4e0d\u9002\u7528\uff0c\u56e0\u4e3areader\u4e5f\u4f1a\u66f4\u6539LRU cache. \u4e00\u79cd\u89e3\u51b3\u7684\u529e\u6cd5\u662f\u8ba9\u6bcf\u4e2a\u7ebf\u7a0b\u62e5\u6709\u81ea\u5df1\u7684cache.", "\n", "b)\u00a0 ", "\u6bcf\u6b21size\u4e0d\u591f\u7528\u65f6\uff0c\u5efa\u4e00\u4e2a\u66f4\u5927\u7684array\u5e76\u590d\u5236\u539f\u6709\u6570\u636e", "c)\u00a0 ", "\u4fdd\u8bc1\u4e86\u64cd\u4f5c\u6052\u5b9a\u4e3aO(1),\u4f46\u662f\u5185\u5b58\u6709\u6d6a\u8d39\uff0c\u4e14\u4e0d\u8fde\u7eed", "For i = 0 to n-1,", "\u751f\u6210\u4e00\u4e2ai\u5230n-1\u4e4b\u95f4\u7684\u968f\u673a\u6570j\uff0c\u5c06v[i]\u4e0ev[j]\u4ea4\u6362", "\u5206\u6210\u5982\u4e0b\u51e0\u6b65:", "Graham\u626b\u63cf\u7b97\u6cd5\uff1a", "a)\u00a0\u00a0 Px\u4e3a\u6808\u9876\u7684\u4e0b\u4e00\u4e2a\u70b9\uff0cPy\u4e3a\u6808\u9876\uff0c\u5f53\u524d\u70b9\u4e3aPi", "b)\u00a0\u00a0 \u5982\u679cPy->Pi, \u76f8\u5bf9\u4e8ePx->Py\u5411\u53f3", "i.\u00a0\u00a0\u00a0\u00a0\u00a0 Pop\u6808", "ii.\u00a0\u00a0\u00a0\u00a0\u00a0 Push Pi\u5230\u6808", "\u7b97\u6cd5\u590d\u6742\u4e3aO(NlogN) (\u7b2c\u4e8c\u6b65\u7684\u6392\u5e8f)", "\u4e00\u4e00\u8ba1\u7b97\u5149\u6e90\u5230(x,y)\u7684\u89d2\u5ea6\uff0c\u518d\u4e0e\u5de6\u8fb9\u7684\u89d2\u5ea6\u5bf9\u6bd4\u5373\u53ef\u77e5\u662f\u5426\u88ab\u906e\u6321\uff0c\u590d\u6742\u5ea6O(N)", "\n", "\u6309\u5355\u8bcd\u7684\u957f\u5ea6\u4e0d\u540c\uff0c\u6784\u9020\u591a\u4e2acontainer", "\u5bf9\u67d0\u4e00\u7ec4\u957f\u5ea6\u76f8\u540c\u7684\u5355\u8bcd\uff0c\u6784\u9020\u591a\u4e2aindex, \u4ece(2,o), (5, H) \u6620\u5c04\u5230\u5355\u8bcd\uff08id\uff09, \u6bcf\u4e00\u4e2acollection\u4fdd\u6301\u6709\u5e8f\uff0c\u53ef\u4ee5\u52a0\u5febmerge\u7684\u901f\u5ea6", "Binary Tree Iterator:", "\u5047\u8bbe\u662f\u4e2d\u5e8f\u904d\u5386\u7684\u8bdd\uff0c\u5728iterator\u4e2d\u4fdd\u5b58\u4e00\u4e2a\u904d\u5386\u7684\u72b6\u6001(parent node stack).", "Hash Table Iterator:", "\u53d6\u51b3\u4e8ehash table\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4e00\u822c\u76f4\u63a5\u6309array\u6216\u8005bucket\u987a\u5e8f\u904d\u5386\u5c31\u53ef\u4ee5\u4e86\u3002", "\u7ed9stack\u52a0\u4e00\u4e2a\u53ea\u7528\u6765\u4fdd\u5b58\u5f53\u524d\u6700\u5c0f\u503c\u7684stack, Push\u65f6\uff0c\u5982\u679c\u5f53\u524d\u503c\u6bd4minStack\u6808\u9876\u5c0f\uff0c\u5219\u4e5fpush\u5230MinStack, Pop\u65f6\uff0c\u5982\u679cminStack\u6808\u9876\u4e0e\u5f53\u524dpop\u5143\u7d20\u4e00\u6837\u5927\uff0c\u5219\u4e5fpop minStack", "\n", "\u9012\u5f52\u6bd4\u8f83 if (tree1->value == tree2->value) && is_equal(tree1->left, tree2->left) && is_equal(tree1->right, tree2->right)", "\n", "\u8003\u8651\u4e8c\u4e2a\u6570a,b\uff0c a\u4e0eb\u5148\u6bd4\uff0c\u5927\u7684\u4e0e\u5f53\u524d\u6700\u5927\u6bd4\uff0c\u5c0f\u7684\u4e0e\u5f53\u524d\u6700\u5c0f\u6bd4\u3002\u4e24\u4e2a\u6570\u5171\u9700\u8981\u6bd4\u8f83\u4e09\u6b21\u3002", "\n", "\u5927\u81f4\u7b97\u6cd5\uff1a\u6309\u4f4d\u7f6e\u5f80\u540e\u627e\uff0c\u76f4\u5230\u6240\u6709\u7684\u8bcd\u90fd\u51fa\u73b0\uff0c\u7136\u540e\u518d\u5c1d\u8bd5\u628a\u5de6\u8fb9\u7684\u4f4d\u7f6e\u7f29\u51cf\u3002\u5982\u6b64\u76f4\u5230\u627e\u5230\u66f4\u77ed\u7684\u533a\u95f4\u3002", "\u89c1\u540e\u9762\u7684find_min_window\u7684\u7a0b\u5e8f\uff0c\u8fd9\u91cc\u9700\u8981\u5904\u7406inverted index", "\u89c1Programming Pearls, \u5148\u628a[a,c] reverse, \u518dreverse[a,b],[b,c]", "\n", "\u7565\u3002\u3002\u3002", "\u7565\u3002\u3002\u3002", "\n", "\u7b80\u5355\u7684\u6808\u7684\u5e94\u7528", "\u4f7f\u7528\u4e24\u4e2astack, s1\u548cs2", "Push\u65f6\uff0cpush\u5230s1", "Pop\u65f6\uff0c\u82e5s2\u975e\u7a7a\uff0c\u5219\u4eces2\u4e2dpop, \u82e5s2\u4e3a\u7a7a\uff0c\u5219\u5c06s1\u7684\u5168\u90e8\u5143\u7d20pop\u5230s2\u4e2d\uff0c\u518d\u4eces2\u4e2dpop", "\u5206\u644a\u590d\u6742\u5ea6\u4e3aO(1)", "1. \u5355\u4e2a\u9a8c\u8bc1\u662f\u5426\u4e3a\u7d20\u6570", "2. \u7b5b\u6cd5", "\u4e24\u79cd\u65b9\u6cd5\uff0c1\u4ece\u89d2\u4e0a\u5f00\u59cbsearch, 2\uff0c Divide and Conquer", "\u5206\u6cbb\u6cd5\u53ef\u4ee5\u7528\u6765\u89e3\u51b3\u53e6\u5916\u4e00\u4e2a\u95ee\u9898\uff0c\u5728\u884c\u5217\u6709\u5e8f\u7684\u4e8c\u7ef4\u6570\u7ec4\u4e2d\uff0c\u5927\u4e8e/\u5c0f\u4e8e0\u7684\u5143\u7d20\u6709\u591a\u5c11\u4e2a\uff1f", "TO LEARN", "TO LEARN", "\u4f9d\u6b21\u626b\u63cf\uff1f\u7565\u3002\u3002\u3002", "\u00a0", "\u5148\u5c06\u6574\u4e2a\u5b57\u7b26\u4e32\u53cd\u8f6c\uff0c\u518d\u6309\u4e2a\u5b57\u7b26\u53cd\u8f6c", "TODO \u5982\u4f55\u4e0d\u7528recursion?", "1. 1G\u5185\u5b58\u67091024*1024*1024*8\u4e2a\u4f4d\uff0c\u626b\u63cf\u4e00\u904d\u8bb0\u4f4d\u5373\u53ef", "2. \u5982\u679c\u5185\u5b58\u4e0d\u591f\uff0c\u53ef\u4ee5\u4f9d\u6b21\u5904\u740610*1024*1024*8\u4e2a\u6570\uff0c\u9700\u8981\u626b\u63cf4*1024/10/8\u5927\u698250\u8d9f", "\u00a0", "\u4e2d\u5e8f\u904d\u5386\uff0c\u52a0\u4e00\u4e2acollection\u4f5c\u4e3a\u53c2\u6570\u5373\u53ef", "\u00a0", "\u8ba1\u7b97\u4e24\u4e24\u70b9\u591f\u6210\u7684\u76f4\u7ebf\u65b9\u7a0bx+By+C=0\uff0c \u627e\u51fa\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u65b9\u7a0b\u5373\u53ef", "\u00a0", "\u7565\u3002\u3002\u3002", "\u00a0", "\u00a0", "\u4f5c\u4e00\u4e2ashuffle,\u7136\u540e\u9009\u53d6\u524dK\u4e2a\uff08\u56e0\u6b64shuffle\u65f6\u53ea\u8981\u8fdb\u884c\u5230\u7b2cK\u4e2a\u5373\u53ef\uff09", "\u00a0", "\u7565\u3002\u3002\u3002\u5e94\u8be5\u9700\u8981\u7528\u5230static\u53d8\u91cf", "\u00a0", "TO LEARN", "\u627e\u786c\u5e01\u7684DP\u7a0b\u5e8f:", "\u00a0", "\u7565\u3002\u3002\u3002", "\u7b2c26\u9898", "\n", "\u5c06\u5355\u8bcd\u6309\u957f\u5ea6\u4ece\u957f\u5230\u77ed\u7f16\u53f7", "\u5bf9\u6bcf\u4e00\u4e2a\u5b57\u6bcd\uff0c\u5efa\u4e00\u4e2acollection\uff0c\u6309\u7f16\u53f7\u6392\u5e8f\u3002", "\u5bf9\u7ed9\u51fa\u7684\u4e03\u4e2a\u5b57\u6bcd\uff0c\u627e\u5230\u5b83\u4eec\u7684collection\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5171\u540c\u7684\u5b57\u6bcd\u3002", "\u6700\u5927\u76f4\u65b9\u56fe\u7684\u5e94\u7528\uff0c O(N^3)\u65f6\u95f4\u590d\u6742\u5ea6", "\u7b49\u4ef7\u4e8e\u627e\u6700\u957f\u4e0a\u5347\uff08\u4e0b\u964d\uff09\u5b50\u5e8f\u5217\uff0c\u89c165\u9898", "\n", "\u4e2d\u5e8f\u904d\u5386\u4e00\u904d\u653e\u5230\u6570\u7ec4\u4e2d\uff0c\u6700\u540e\u62ff\u4e2d\u95f4\u6570", "\n", "TO LEARN. Suffix tree\u7684\u5e94\u7528", "\n", "\u56de\u6eaf\uff0c \u7565\u3002\u3002\u3002", "\u751f\u6210\u5b50\u96c6\u7684\u95ee\u9898\uff0c\u7565", "\n", "\u4e0d\u662f\u5f88\u7406\u89e3\uff0c\u7528map<userid, list<time>> \u6765\u8bb0\u5f55\u7528\u6237\u7684\u767b\u5f55\u65f6\u95f4\uff0c\u7136\u540e\u518d\u626b\u63cf\uff1f", "\u4ece\u4e24\u5934scan, \u7565", "\n", "\u521d\u59cb\u6761\u4ef6: f(x,y,1) = a[x] + \u2026 + a[y]", "\u9012\u63a8\uff1a f(1, n, k) = min(1<=i<=n+1-k)max{f(1,i,1),f(i+1,n,k-1)}", "\u5148\u5c06\u6570\u7ec4\u6392\u5e8f", "\u521d\u59cb\u6761\u4ef6: f(x,y,2) = a[y] \u2013 a[x]", "\u9012\u63a8: f\uff081,n,k\uff09 = max(2<=i<=n+2-k)min(f(1,i,2), f(i,n,k-1))", "\u56fe\u5f62\u5b66\uff0c\u8003\u8651\u4f9d\u6b21\u5f62\u6210\u7684\u6240\u6709\u5939\u89d2\u7684\u548c\uff0c\u5982\u679c\u5728\u5185\u4e3a2pi, \u5426\u5219\u4e3a0", "\u00a0\u00a0\u00a0 \u9884\u5148\u8ba1\u7b97\u6240\u6709\u4e24\u6570\u4e4b\u548c\uff0c\u5f97\u5230map<sum, vector<pair<index1,index2>>>", "\u7136\u540e\u518d\u8fd9\u4e2amap\u4e2d\u641c\u7d22\u6709\u6ca1\u6709\u548c\u4e3atarget number\u7684pair(\u5e76\u4e14index\u4e0d\u80fd\u91cd\u590d)\uff0c\u65f6\u95f4\u548c\u7a7a\u95f4\u590d\u6742\u5ea6O(N^2).", "\u53e6\u5916\u4e00\u79cd\u505a\u6cd5\u662f\u5f53\u6210\u5b50\u96c6\u5408\u95ee\u96c6\uff0c\u6309target number(T)\u505aDP\uff0c\u590d\u6742\u5ea6O(NT)", "\u8bbev[x,y]\u662f\u5f53\u67d0\u4eba\u5728\u6570\u5217\u5269\u4e0bx\u5230y\u4f4d\u65f6\uff0c\u80fd\u62ff\u5230\u7684\u6700\u5927\u503c\uff0cn[x,y]\u8868\u793a\u9700\u8981\u62ff\u7684\u4f4d\u7f6e(x\u6216\u8005y)\u5219", "\u521d\u59cb\u5316: v[x,x] = a[x], n[x,x] = x", "\u9012\u63a8: v[x,y] = max(v[x] + (v[x+2,y]\u6216\u8005v[x+1,y-1], \u7531n[x-1,y]\u51b3\u5b9a)\uff0c", "v[y] +\uff08v[x,y-2]\u6216\u8005v[x+1,y-1]\uff0c\u7531n[x,y-1]\u51b3\u5b9a\uff09)", "n[x,y]\u7531\u4e0a\u4e00\u6b65\u53d6v[x]\u8fd8\u662f\u53d6v[y]\u51b3\u5b9a\u3002", "\u4e00\u822c\u505a\u6cd5\uff1a", "a)\u00a0\u00a0 \u4f7f\u7528\u591a\u5757\u78c1\u76d8\u540c\u65f6\u8fdb\u884c\u8bfb/\u5199", "b)\u00a0\u00a0 \u4f7f\u7528\u591a\u7ebf\u7a0b\u63d0\u9ad8\u5185\u5b58\u91cc\u7684sort\u7684\u6027\u80fd", "c)\u00a0\u00a0 \u4f7f\u7528\u5f02\u6b65\u7684IO\u4f7fsort\u548c\u78c1\u76d8\u8bfb/\u5199\u540c\u65f6\u8fdb\u884c", "d)\u00a0\u00a0 \u591a\u673a\u7684\u5e76\u884c\uff08map reduce ?\uff09", "e)\u00a0\u00a0 \u5982\u679ckey\u8f83\u5927\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528radix sort\u63d0\u9ad8\u901f\u5ea6", "\u6839\u636e\u4e2d\u5fc3\u6781\u9650\u5b9a\u4e49\uff0c\u4e00\u79cd\u7b80\u5355\u7684\u505a\u6cd5\u662f,\u751f\u62102N\u4e2a(0,1)\u4e4b\u95f4\u7684\u968f\u673a\u6570\uff0c\u7136\u540e\u5c06\u5b83\u4eec\u7684\u548c\u51cf\u53bbN\uff0c\u5f97\u5230\u4e00\u4e2a\u8fd1\u4f3c\u6b63\u6001\u5206\u5e03\u7684\u6570", "\u7565\u3002\u3002\u3002", "\u89c168\u9898", "Merge sort linked list\u7684\u7279\u70b9\uff1a\u4e0d\u9700\u8981\u989d\u5916\u7a7a\u95f4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(NlogN),\u5e76\u4e14\u662fstable\u7684", "1. \u7528map\u5373\u53ef\u3002\u3002\u3002", "2. \u9700\u8981\u5bf9words\u91cc\u9762\u7684\u6bcf\u4e00\u4e2aelements\u4f9d\u6b21\u5339\u914d\u3002\u4e3a\u4e86\u52a0\u901f\uff0c\u53ef\u4ee5\u9884\u5148\u5bf9words\u6784\u5efa\u4e00\u68f5\u5b57\u5178\u6811\u3002", "xxx011100 -> xxx100011", "CODE\u7565", "\u5148\u6392\u5e8f\uff0c\u518d\u6bd4\u8f83\u76f8\u90bb\u7684\u4e09\u4e2a\u6570\u5373\u53ef", "TO LEARN\uff0c \u5199\u4e00\u4e0b\u7528map reduce \u600e\u4e48\u505a", "\uff1f\uff1f\uff1f\u53ef\u80fd\u5417\uff1f\u6ca1\u6709\u989d\u5916memory, \u5426\u5219\u505a\u4e2aDFS/BFS\u5373\u53ef", "\u5148\u6309\u5c42\u904d\u5386\uff0c\u5c06\u6bcf\u4e00\u5c42\u7684\u5f00\u59cb\u653e\u5230left edge, \u7ed3\u5c3e\u653e\u5230right edge. \u518d\u4e2d\u5e8f\u904d\u5386\u6253\u51fa\u6240\u6709\u7684leaf node\uff08\u8fd9\u91cc\u53d6\u51b3\u4e8eleaf node\u7684\u5b9a\u4e49\uff09\uff0c CODE\u53d6\u81ea\uff1a", "TO LEARN\uff0c \u50cf\u6570\u5b66\u9898", "\n", "\u7565\u3002\u3002\u3002", "\u89c1133\u9898", "\n", "\u5047\u8bbe\u6240\u8981\u5206\u89e3\u7684\u6570\u4e3ax \uff0c\u5206\u89e3\u6210n\u4e2a\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u8868\u793a\uff1a", "x=m+(m+1)+(m+2)+\u2026\u2026\u2026.+(m+n-1)", "\u5176\u4e2dm\u4e3a\u5206\u89e3\u6210\u7684\u8fde\u7eed\u6574\u6570\u4e2d\u6700\u5c0f\u7684\u90a3\u4e00\u4e2a\uff0c\u5e76\u4e14\u6211\u4eec\u77e5\u9053m\u5927\u4e8e\u7b49\u4e8e1\u7684\u6b63\u6574\u6570\u3002\u6613\u77e5\uff1a", "x=(2m+n-1)*n/2\uff0c \u53d8\u6362\u4e00\u4e0b\u7684m=\uff082*x/n-n+1)/2", "\u7531m\u7684\u8303\u56f4\u6211\u4eec\u77e5\u9053\uff082*x/n-n+1)/2>=1\u00a0\u4ee5\u4e0a\u5c31\u662fx\u548cn\u7684\u5173\u7cfb\u3002\u7ed9\u5b9a\u4e00\u4e2an\u770b\u662f\u5426x\u80fd\u5206\u89e3\u6210n\u4e2a\u8fde\u7eed\u6574\u6570\u7684\u548c\u53ef\u4ee5\u5224\u65ad\u662f\u5426\u5b58\u5728m\uff0c\u4e5f\u5c31\u662f\u8f6c\u6362\u6210\uff082*x/n-n+1)\u662f\u5426\u662f\u5076\u6570\u3002", "\u4ee3\u7801\u7565", "\n", "\u89c179\u9898", "\n", "G(n) = max{G(n-1)+1, g(n-k)*(k-2)}", "\n", "Binary Search\u7684\u6269\u5c55\uff0c\u89c1142\u9898", "NP\u5b8c\u5168\u95ee\u9898\uff0c\u89c1\uff1a", "\n", "\u627e\u5230\u5165\u5ea6\u4e3a\u96f6\u7684node\u5373\u53ef", "\n", "TO LEARN\uff0c \u6709\u70b9\u7c7b\u4f3c\u4e8edancing links\u7528\u5230\u7684\u6ee1\u8db3\u95ee\u9898", "\u53ea\u80fd\u662f\u641e\u51e0\u5f20aggregate\u8868\uff0c\u6309\u79d2\uff0c\u5206\u949f\uff0c\u5c0f\u65f6\u7b49\u505a\u4e3a\u7c92\u5ea6\u3002\u3002\u3002", "\n", "\u5982\u679c\u8981\u627e\u6240\u6709conflicts, \u5219\u590d\u6742\u5ea6\u4e3aO(N^2)\uff0c \u7565\u3002\u3002\u3002", "\n", "\u6709\u70b9\u7c7b\u4f3c\u4e8e\u8bbe\u8ba1\u9898\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a\u4f18\u5316\u8fc7\u7684prefix tree?", "\u96be\u9898\uff0c TO LEARN", "\n", "DP\u9898\uff0c\u5b9a\u4e49g(n,l,r)\u4e3a\u9898\u76ee\u7684\u7b54\u6848\uff0c\u800cf(n,l)\u4e3an\u4e2ablock,\u4ece\u5de6\u8fb9\u770b\u5230l\u4e2ablock,\u5219\u9012\u63a8\u516c\u5f0f\u4e3a\uff1a", "g(n,l,r) = (1<=k<=n)sum(C(n-1,k-1)*f(k-1,l-1)*f(n-k,r-1))", "f(n,l) = (1<=k<=n)sum(C(n-1,k-1)*f(K-1,l-1)*(n-k)!)", "f(n,1) = (n-1)!", "F(n,n) = 1", "F(n,m) = 0 if n < m", "\n", "\u5982\u4f55\u5b9a\u4e49in the path?\u2026\u7565\u3002\u3002\u3002", "\n", "\u53ef\u4ee5\u76f4\u63a5\u7ebf\u6027\u626b\u63cf\uff0c\u4e5f\u53ef\u4ee5\u7528binary search\u6765\u4f18\u5316\uff08\u5982\u679c\u91cd\u590d\u6570\u6bd4\u8f83\u591a\uff09", "balance load,\u53ef\u4ee5\u5c06big file\u5206\u6210\u6bd4\u8f83\u5c0f\u7684\u5757\uff0c\u6bcf\u53f0\u673a\u5668\u5b8c\u6210\u82e5\u5e72\u5757\uff0c\u6839\u636e\u8ba1\u7b97\u60c5\u51b5\u8fdb\u884c\u8c03\u5ea6\u3002", "\u7b97\u6cd5\uff1a", "CODE", "\u7b80\u5355\u9898\uff0c\u7565\u3002\u3002\u3002", "Notepad++\u4f7f\u7528gap buffer, \u5373\u5728\u4e00\u6bb5buffer\u7684\u4e2d\u95f4\u7559\u4e0b\u7a7a\u95f4\uff0c\u8fd9\u6837\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u90fd\u662fO(1). \u5173\u4e8esearch\uff0c\u53ef\u4ee5\u7528Rabin karp\u7b97\u6cd5\u3002", "Rope \u4e5f\u662f\u4e00\u79cd\u53ef\u4ee5\u8003\u8651\u7684\u6570\u636e\u7ed3\u6784\uff0c\u89c1\uff1a", "\u5c06\u6240\u6709\u76840\u6362\u6210-1\uff0c\u5148\u8ba1\u7b97\u7d2f\u52a0\u548c,cum[i] = a[0]+\u2026+a[i], \u5219\u95ee\u9898\u8f6c\u5316\u4e3a\uff1a\u6c42cum[i]\u76f8\u540c\u65f6\u7684\u6700\u5927\u7684index\u5dee\u3002\u626b\u63cf\u8ba1\u7b97\u5373\u53ef\uff0c\u590d\u6742\u5ea6O(N)", "\u7c7b\u4f3c\u7684\u95ee\u9898\u6709\uff08\u5229\u7528\u7d2f\u52a0\u548c\uff09\uff1a", "1.\u4e00\u4e2a\u6709\u6b63\u6709\u8d1f\u7684\u6570\u7ec4\u4e2d\uff0c\u6c42\u4e00\u4e2asubarray\u4f7f\u5176\u548c\u6700\u63a5\u8fd10", "2.\u5bf9\u6570\u7ec4\u8fdb\u884cadd(l,r,v)\u64cd\u4f5c\uff0c\u5373\u5bf9a[l]\u5230a[r]\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u52a0\u4e0av, \u73b0\u6709N\u4e2a\u8fd9\u79cd\u64cd\u4f5c\uff0c\u600e\u4e48\u5728O(N)\u65f6\u95f4\u5185\u5b8c\u6210\uff1f", "DNFP\u95ee\u9898,\u89c1138\u9898\u3002", "\u591a\u6b21\u505aread4096\u5373\u53ef\uff0c\u4e3a\u4e86\u52a0\u901f\uff0c\u53ef\u4ee5\u91cd\u7528\u4e0a\u6b21seek\u7684\u7ed3\u679c", "\u6784\u9020\u4e00\u4e2a\u5355\u8bcd\u7684prefix\u5b57\u5178\uff0c\u7136\u540e\u518d\u9012\u5f52+\u56de\u6eaf\u3002\u3002\u3002", "\u8bbek\u4e2asorted array\u4e3aa1, a2, \u2026, ak.", "\u5148\u627e\u51fa\u8fd9k\u4e2asorted array\u7684median, m1, m2, \u2026 mk.", "\u518d\u627e\u51fa\u8fd9k\u4e2amedian\u7684median: mm", "\u7136\u540e\u53ef\u4ee5\u628a\u6240\u6709\u6bd4mm\u5c0f\u7684\u6570\u548c\u5927\u7684\u6570\u90fd\u53bb\u6389\uff0c\u5927\u81f4\u6709\u4e00\u534a", "\u7136\u540e\u518d\u627e\u5269\u4e0b\u7684\u6570\u7684median\uff08\u9012\u5f52\uff09\uff0c\u590d\u6742\u5ea6O(klogn)", "\u9012\u5f52+\u56de\u6eaf\uff0c\u4e5f\u53ef\u4ee5\u7528DP\u4f18\u5316", "\u7528\u4e00\u4e2acircular buffer\u6765\u4fdd\u5b58\u6bcf\u4e00\u79d2\u7684click\u6570\uff0c\u518d\u7ef4\u62a4\u4e00\u4e2atotal\u6570\u5373\u53ef\u3002", "\u5982\u679c\u6240\u6709\u7684\u6570\u90fd\u76f8\u7b49\uff0c\u90a3\u81f3\u5c11\u9700\u8981O(n^2)\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u53e6\u5916\u6392\u5e8f\u540e\uff0c\u4e8c\u91cd\u5faa\u73af\u52a0\u4e24\u5934\u626b\u63cf\uff0c\u4e0d\u9700\u8981\u989d\u5916\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u4e86\u3002", "\u89c1138\u9898", "\u5982\u679c\u8981\u5f97\u5230\u6240\u6709\u7684\u7ec4\u5408\uff0c\u5148\u8ba1\u7b97\u51fa\u8be5\u6570\u8303\u56f4\u5185\u7684Fibonacci\u6570\uff0c\u518d\u5f53\u6210\u627e\u96f6\u95ee\u9898\u6765\u8ba1\u7b97\u5c31\u53ef\u4ee5\u4e86\u3002", "Zeckendorf\u2019s theorem:", "Every\u00a0", "\u00a0can be represented uniquely as the sum of\u00a0one or more\u00a0distinct Fibonacci numbers in such away that the sum does not include any two consecutive Fibonacci numbers.", "\u00a0", "\u7528\u4e00\u4e2ahashtable\u6765\u4fdd\u5b58\u6240\u6709\u89c1\u5230\u8fc7\u7684\u7ed3\u70b9\u3002 Root\u7ed3\u70b9\u5c31\u662f\u6ca1\u6709\u5728child\u4f4d\u7f6e\u4e0a\u51fa\u73b0\u8fc7\u7684\u7ed3\u70b9\u3002", "\u540e\u9762\u51e0\u95ee\u5047\u8bbe\u662fmerge\u6210\u4e00\u4e2asorted array, \u90a3\u8fd9\u4e2a\u9898\u5c31\u7c7b\u4f3c\u4e8e\u5916\u90e8\u6392\u5e8f\u7684\u591a\u8def\u5f52\u5e76\u3002", "\u4e0d\u7406\u89e3\u9898\u76ee\u7684\u610f\u601d\u3002\u3002", "\u4e2d\u5e8f\u904d\u5386\u3002\u7565\u3002\u3002", "\u5206\u5c42\u904d\u5386\u5373\u53ef\uff0c\u7565\u3002\u3002", "\u00a0\u00a0\u00a0 \u4e2d\u7b49\u96be\u5ea6\u7684DP\uff0c\u6709\u4e2a\u89e3\u9898\u62a5\u544a\u89c1\uff1a", "\u516c\u5f0f\u7684\u8bba\u6587\u89c1\uff1a", "http://arxiv.org/abs/math/0310326", "\u00a0\u00a0\u00a0 \u4e09\u91cd\u5faa\u73af\u5373\u53ef\uff0c\u4ee3\u7801\u7565\u3002\u3002", "\u7b97\u6cd5\uff1a", "\u5148\u6c42\u51fa\u7d2f\u52a0\u548ccum[i] = a[0]+\u2026+a[i],\u4ecea[k]>max\u5f00\u59cb\uff0c\u5728\u524d\u9762\u4e8c\u5206\u67e5\u627e\u7b2c\u4e00\u4e2acum[l]>=(a[k]-max), \u76f4\u5230\u627e\u5230\u8303\u56f4\u6700\u5927\u7684range. \u590d\u6742\u5ea6O(NlogN)", "\u7ebf\u6027\u626b\u63cf\u5e76\u8ba1\u7b97\u4e00\u4e0b\u5373\u53ef\u3002\u6b63\u8d1f\u6570\u662f\u5426\u6709\u5173\u7cfb\uff1f", "\u4e24\u4e24\u6bd4\u8f83\u627e\u7b2c\u4e00\u4e2a\u4e0d\u540c\u5373\u53ef\u3002", "\u5224\u65ad\u662f\u5426\u6709\u51b2\u7a81\uff1f\u6574\u4e2a\u5173\u7cfb\u5f62\u6210\u4e00\u4e2a\u56fe\uff0c\u8fd9\u4e2a\u56fe\u5e94\u8be5\u662f\u65e0\u73af\u7684\uff0c\u505a\u4e00\u6b21DFS\u5373\u53ef\u3002", "\u8d2a\u5fc3\uff0c\u5c3d\u91cf\u9009\u62e9\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u7684\u5de5\u4f5c\u5373\u53ef", "\u5148\u6309\u96f6\u628a\u6570\u7ec4\u5206\u6210\u82e5\u5e72\u4e2a\u5b50\u6570\u7ec4\uff0c\u518d\u5728\u5b50\u6570\u7ec4\u91cc\u627e\u5305\u542b\u5076\u6570\u4e2a\u8d1f\u6570\u7684\u6700\u5927\u7684\u8303\u56f4\u3002", "\u00a0", "\u5bf9\u8fd9\u4e2a\u6570\u7ec4\u91cc\u7684\u6bcf\u4e00\u4e2a\u6570\uff0c\u5982\u679c\u5b83\u4e0d\u80fd\u8868\u793a\u4e3a\u8be5\u6570\u7ec4\u91cc\u4e24\u4e2a\u6570\u4e4b\u548c\uff0c\u5219\u662f\u4e00\u4e2a\u8981\u6c42\u7684\u4e24\u4e2amilestone\u4e4b\u95f4\u7684\u8ddd\u79bb", "\u4e0d\u662f\u5f88\u7406\u89e3\u9898\u610f\u3002\u3002\u3002\u4e24\u4e24\u6bd4\u8f83\u5373\u53ef\uff0c\u590d\u6742\u5ea6O(N^2),\u5982\u8981\u52a0\u901f\uff0c\u53ef\u4ee5\u5148\u8ba1\u7b97\u6bcf\u4e2a\u7ed3\u70b9\u7684\u6df1\u5ea6\u548c\u5b50\u7ed3\u70b9\u6570\uff0c\u76f8\u540c\u518d\u8fdb\u884c\u6bd4\u8f83\u3002", "\u5148\u6309\u5982\u4e0b\u89c4\u5b9a\u6392\u5e8f\uff1a a > b if ab > ba,", "\u7136\u540e\u518d\u4ece\u9ad8\u5230\u4f4e\u62fc\u63a5\u8d77\u6765\u5373\u53ef\u3002", "O(N)\u597d\u50cf\u4e0d\u53ef\u80fd\u505a\u5230\uff0c\u56e0\u4e3a\u6240\u6709\u7684intervals\u53ef\u80fd\u5c31\u662fO(N^2)\u7ea7\u522b\u7684", "-", "DP\u9898,\u5148\u628a\u6240\u6709\u7684presentation\u6309endtime\u6392\u5e8f\uff0c\u7136\u540e\u8bbeq(endtime)\u4e3a\u5728endtime\u4e4b\u95f4conference room\u88ab\u4f7f\u7528\u7684\u6700\u957f\u65f6\u95f4\u3002\u7136\u540e\u4f9d\u6b21\u7528presentation\u4e0e\u4e4b\u95f4\u6240\u6709\u7684q\u76f8\u6bd4\uff0c\u5f97\u5230\u65b0\u7684q.\u603b\u4f53\u590d\u6742\u5ea6O(N^2)", "\u7528hashtable\u4fdd\u5b58num->index,\u7136\u540e\u7ebf\u6027\u626b\u63cf\u4e00\u904d\u5373\u53ef", "\u8003\u8651\u4e00\u4e2a\u56fe\uff0c\u6ee1\u8db3\u7684\u9996\u5c3e\u5b57\u6bcd\u4e0d\u540c\u5373\u6709\u4e00\u6761a->b\u7684\u8fb9\uff0c\u90a3\u8be5\u95ee\u9898\u7b49\u4ef7\u4e8e\u627eHamilton\u5708\uff0c\u662f\u4e00\u4e2aNP\u5b8c\u5168\u95ee\u9898", "\u955c\u50cf\u5bf9\u79f0\u7684\u5b9a\u4e49\uff1f", "\u9664\u4e86\u7a77\u4e3e\uff0c\u6ca1\u5565\u597didea\u2026 \u6c42\u6240\u6709\u7684\u548cO(N),\u6c42\u6700\u8fd1\u516c\u5171\u7236\u7ed3\u70b9\u53ef\u4ee5\u4f18\u5316\u5230O(1)\u5177\u4f53\u6bd4\u8f83\u4e3aO(N^2)\uff0c\u603b\u4f53\u590d\u6742\u5ea6\u4e3aO(N^2).", "\u5bf9\u6bcf\u4e00\u4e2a\u5c0f\u4e8esqrt(y)\u7684\u6570\uff0c\u6c42\u5bf9\u6570\u540e\u627e\u4e00\u4e2a\u6700\u63a5\u8fd1\u7684\u5373\u53ef\u3002\u3002", "CODE\uff0c\u8003\u8651\u901a\u8fc7merge sort\u7684\u53d8\u5f62", "IDEA:\u7c7b\u4f3c\u4e8e\u4e09\u8def\u5f52\u5e76\uff0c\u53cd\u590d\u5730\u5c06\u5f53\u524d\u6700\u5c0f\u7684\u5143\u7d20\u5f80\u524d\u79fb\uff0c\u5e76Update\u76ee\u6807\u503c\u5373\u53ef\u3002", "\u8981\u7ed9\u51fa\u6240\u6709\u65b9\u6848\u53ea\u80fd\u9012\u5f52\u7a77\u4e3e\u5427", "\u5c060-1\u4e4b\u95f4\u6309scroe(i)\u7684\u6bd4\u4f8b\u5212\u5206\u6210\u533a\u95f4\uff0c\u7136\u540e\u751f\u62100-1\u4e4b\u95f4\u7684\u968f\u673a\u6570\uff0c\u6309\u5176\u6240\u5728\u533a\u95f4\u51b3\u5b9a\u4e3a\u54ea\u4e2a\u5143\u7d20", "TO LEARN\uff0c", "\u4e5f\u662fINTERVAL TREE\u6216\u8005SEGMENT TREE?\u5148\u53d6\u51fa\u6240\u6709\u7684\u70b9\uff0c\u518d\u628a\u88ab\u4efb\u610f\u77e9\u5f62\u6240\u5305\u542b\u7684\u70b9\u53bb\u6389\u3002", "\u7c7b\u4f3c\u4e8eDP\uff1f\u53cd\u590dupdate jump N+1\u6b65\u540e\uff0c\u8bb0\u5f55\u5230\u8fbe\u5f53\u524d\u4f4d\u7f6e\u7684\u6700\u5c0f\u6b65\u6570", "No extra space\u9700\u8981\u4fee\u6539\u539f\u6570\u7ec4\u5427\u3002\u3002\u3002CODE", "\u7528\u4e00\u4e2a\u4e03\u4e2a\u6570\u7684\u6570\u7ec4\u6765\u6807\u8bb0\u5c31\u884c\u4e86\u5427", "\u5148\u8d70\u5230\u89d2\u843d\uff0c\u7136\u540e\u6765\u56de\u626b\u5c31\u884c\u4e86", "\u89c1185\u9898", "\u5e94\u8be5\u6ca1\u6709\u8fd9\u6837\u7684\u89e3\uff1f", "DP\uff0c\u5199\u9012\u63a8\u516c\u5f0f\uff0c\u4f7f[0,i]\u4e2d\u7684\u5143\u7d20\u6709\u5e8f\uff0cupdate\u65f6\uff0c\u52a0\u5165[0,i+1]\uff0c\u8981\u4e48decrement\u4ee5\u524d\u7684\uff0c\u8981\u4e48\u5220\u6389i+1", "\u60f3\u4e0d\u51fa\u6765\u3002\u3002\u3002", "\u5982\u679csubarray\u8fde\u7eed\u7684\u8bdd\u5f88\u7b80\u5355\u3002\u3002\u3002", "\u5148\u5728string\u91cc\u627e\u662f\u5355\u8bcd\u7684\u8303\u56f4\uff0c\u5f97\u5230\u4e00\u7ec4range,\u7136\u540e\u5c06\u8fd9\u4e9brange\u6309\u8d77\u70b9\u6392\u5e8f\uff0c\u518d\u9012\u5f52+\u56de\u6eaf\uff0c\u627e\u5230\u6700\u957f\u7684\u80fd\u6b63\u597d\u62fc\u63a5\u5728\u4e00\u8d77\u7684\u6700\u957f\u7684\u8303\u56f4", "\u7b49\u4ef7\u4e8e\u524d\u9762\u4e00\u4e2a\u6c42\u9006\u5e8f\u5bf9\u7684\u9898\u7684\u5427\uff0c\u611f\u89c9\u4e0d\u53ef\u80fd\u505a\u5230O(N),", "\u5148\u627e\u51fasqrt(n)\u4ee5\u5185\u7684\u6240\u6709\u8d28\u6570\u3002\u3002\u518d\u60f3\u60f3", "TO LEARN, Shell\u6392\u5e8f\uff1f", "TO LEARN, Interval tree?", "\n", "DP\u9898\uff0c\u5199\u9012\u63a8\u516c\u5f0f", "\u00a0"], "title": "C++\u7f16\u7a0b\uff0c\u6570\u636e\u7ed3\u6784\uff0c\u7b97\u6cd5\u7c7b\u9762\u8bd5\u9898\u96c6."},
{"contents": ["COM\u4e3a\u7ec4\u4ef6\u548c\u5e94\u7528\u7a0b\u5e8f\u4e4b\u95f4\u63d0\u4f9b\u4e86\u8fdb\u884c\u901a\u4fe1\u7684\u7edf\u4e00\u6807\u51c6\uff0c\u4e3a\u7ec4\u4ef6\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u9762\u5411\u5bf9\u8c61\u7684\u6d3b\u52a8\u73af\u5883\u3002COM\u6807\u51c6\u5305\u62ec\u89c4\u8303\u548c\u5b9e\u73b0\u4e24\u5927\u90e8\u5206\uff0c\u89c4\u8303\u90e8\u5206\u5b9a\u4e49\u4e86\u7ec4\u4ef6\u548c\u7ec4\u4ef6\u4e4b\u95f4\u901a\u4fe1\u7684\u673a\u5236\uff0c\u8fd9\u4e9b\u89c4\u8303\u4e0d\u4f9d\u8d56\u4e8e\u4efb\u4f55\u7279\u5b9a\u7684\u8bed\u8a00\u548c\u64cd\u4f5c\u7cfb\u7edf\uff0c\u53ea\u8981\u9075\u5faa\u8be5\u89c4\u8303\uff0c\u4efb\u4f55\u8bed\u8a00\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u7ec4\u4ef6\u5f00\u53d1\u7684\u539f\u59cb\u8bed\u8a00\uff1bCOM\u6807\u51c6\u7684\u5b9e\u73b0\u90e8\u5206\u662fCOM\u5e93\uff0cCOM\u5e93\u4e3aCOM\u89c4\u8303\u7684\u5177\u4f53\u5b9e\u73b0\u63d0\u4f9b\u4e86\u4e00\u4e9b\u6838\u5fc3\u670d\u52a1\u3002", "COM\u9664\u4e86\u5ba2\u6237/\u670d\u52a1\u5668\u6a21\u578b\u7279\u6027\u4ee5\u5916\uff0c\u8fd8\u5177\u6709\u8bed\u8a00\u65e0\u5173\u6027\u3001\u8fdb\u7a0b\u900f\u660e\u6027\u4ee5\u53ca\u53ef\u91cd\u7528\u673a\u5236\u3002", "COM\u89c4\u8303\u7684\u5b9a\u4e49\u4e0d\u4f9d\u8d56\u4e8e\u4efb\u4f55\u7279\u5b9a\u7684\u8bed\u8a00\uff0c\u56e0\u6b64\u7f16\u5199\u7ec4\u4ef6\u5bf9\u8c61\u6240\u4f7f\u7528\u7684\u8bed\u8a00\u548c\u7f16\u5199\u5ba2\u6237\u7a0b\u5e8f\u4f7f\u7528\u7684\u8bed\u8a00\u53ef\u4ee5\u4e0d\u540c\uff0c\u53ea\u8981\u4ed6\u4eec\u90fd\u80fd\u591f\u751f\u6210\u7b26\u5408COM\u89c4\u8303\u7684\u53ef\u6267\u884c\u4ee3\u7801\u5373\u53ef\u3002COM\u6807\u51c6\u4e0e\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u8bed\u8a00\u4e0d\u540c\uff0c\u5b83\u6240\u91c7\u7528\u7684\u662f\u4e00\u79cd\u4e8c\u8fdb\u5236\u4ee3\u7801\u7ea7\u522b\u7684\u6807\u51c6\uff0c\u800c\u4e0d\u662f\u6e90\u4ee3\u7801\u7ea7\u522b\u7684\u6807\u51c6\u3002\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u8bed\u8a00\u4e2d\u5b9a\u4e49\u7684\u5bf9\u8c61\u4e0d\u80fd\u591f\u8de8\u8bed\u8a00\u8fdb\u884c\u8c03\u7528\uff0c\u5927\u5927\u9650\u5236\u4e86\u5bf9\u8c61\u7684\u91cd\u7528\u3002COM\u5bf9\u8c61\u628aOOP\uff08\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\uff09\u8bed\u8a00\u4e2d\u7684\u5bf9\u8c61\u5c01\u88c5\u5230\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4ee3\u7801\u91cc\uff0c\u5e76\u63d0\u4f9b\u7edf\u4e00\u7684\u63a5\u53e3\uff0c\u53ef\u4ee5\u88ab\u5176\u5b83\u7f16\u7a0b\u8bed\u8a00\u6240\u4f7f\u7528\u3002", "COM\u7684\u8fdb\u7a0b\u900f\u660e\u6027\u662f\u6307\uff0c\u8fd0\u884c\u5728\u5ba2\u6237\u7a0b\u5e8f\u4e2d\u7684\u4ee3\u7801\u4e0e\u8fd0\u884c\u5728\u670d\u52a1\u7a0b\u5e8f\u4e2d\u7684\u4ee3\u7801\u53ef\u4ee5\u5728\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u8fdb\u7a0b\u4e2d\uff0c\u8fd9\u53d6\u51b3\u4e8eCOM\u7f16\u7a0b\u7684\u65b9\u5f0f\uff0c\u4f46\u662f\u8fd9\u79cd\u8fdb\u7a0b\u7684\u8fd0\u884c\u5bf9\u7528\u6237\u6765\u8bf4\u662f\u900f\u660e\u7684\uff0c\u7528\u6237\u53ef\u4ee5\u4e0d\u5173\u5fc3\u8fdb\u7a0b\u7684\u4f4d\u7f6e\u3002\u901a\u5e38COM\u4ee3\u7801\u8fd0\u884c\u7684\u65b9\u5f0f\u6709\u4e24\u79cd\uff1a\u4e00\u79cd\u662f\u8fd0\u884c\u5728\u5ba2\u6237\u8fdb\u7a0b\u91cc\uff0c\u53e6\u5916\u4e00\u79cd\u662f\u8fd0\u884c\u5728\u5ba2\u6237\u8fdb\u7a0b\u4e4b\u5916\u3002\u663e\u7136\u524d\u8005\u5177\u6709\u5f88\u9ad8\u7684\u6548\u7387\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u5171\u4eab\u5ba2\u6237\u8fdb\u7a0b\u91cc\u7684\u6570\u636e\uff0c\u4f46\u662f\u524d\u8005\u5728\u7a33\u5b9a\u6027\u65b9\u9762\u5c31\u4e0d\u53ca\u540e\u8005\u5065\u58ee\uff0c\u540e\u8005COM\u7ec4\u4ef6\u7684\u4e0d\u7a33\u5b9a\u6027\u4e0d\u4f1a\u5f71\u54cd\u5230\u5ba2\u6237\u8fdb\u7a0b\u7684\u8fd0\u884c\uff0c\u524d\u8005\u5219\u4f1a\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5d29\u6e83\u3002", "\u53ef\u91cd\u7528\u6027\u662f\u6240\u6709\u7ec4\u4ef6\u6a21\u578b\u8981\u5b9e\u73b0\u7684\u5171\u540c\u76ee\u6807\uff0c\u5c24\u5176\u5bf9\u5927\u578b\u7684\u8f6f\u4ef6\u7cfb\u7edf\uff0c\u8f6f\u4ef6\u7684\u53ef\u91cd\u7528\u6027\u5177\u6709\u975e\u5e38\u91cd\u8981\u7684\u610f\u4e49\u3002\u5bf9COM\u5bf9\u8c61\u7684\u5ba2\u6237\u7a0b\u5e8f\u6765\u8bf4\uff0c\u5b83\u53ea\u662f\u901a\u8fc7\u63a5\u53e3\u4f7f\u7528\u5bf9\u8c61\u63d0\u4f9b\u7684\u670d\u52a1\uff0c\u5e76\u4e0d\u4e86\u89e3\u5bf9\u8c61\u5185\u90e8\u7684\u5b9e\u73b0\u8fc7\u7a0b\uff0c\u56e0\u6b64\u7ec4\u5efa\u7684\u91cd\u7528\u6027\u53ef\u4ee5\u5efa\u7acb\u5728\u7ec4\u4ef6\u5bf9\u8c61\u7684\u884c\u4e3a\u65b9\u5f0f\u4e0a\uff0c\u800c\u4e0d\u662f\u5728\u5177\u4f53\u5b9e\u73b0\u4e0a\uff0c\u8fd9\u662f\u5efa\u7acb\u91cd\u7528\u7684\u5173\u952e\u3002COM\u901a\u8fc7\u4e24\u79cd\u673a\u5236\u5b9e\u73b0\u5bf9\u8c61\u7684\u91cd\u7528\uff0c\u4e00\u79cd\u662f\u5305\u5bb9\u65b9\u5f0f\uff0c\u4e00\u4e2a\u5bf9\u8c61\u9700\u8981\u8c03\u7528\u53e6\u5916\u4e00\u4e2a\u5bf9\u8c61\u7684\u529f\u80fd\u65f6\u81ea\u884c\u8c03\u7528\uff0c\u800c\u4e0d\u9700\u8981\u7528\u6237\u5e72\u9884\uff1b\u53e6\u5916\u4e00\u79cd\u662f\u805a\u5408\u65b9\u5f0f\uff0c\u4e00\u4e2a\u5bf9\u8c61\u5728\u9700\u8981\u53e6\u5916\u4e00\u4e2a\u5bf9\u8c61\u7684\u529f\u80fd\u65f6\u53ea\u662f\u628a\u8be5\u5bf9\u8c61\u7684\u63a5\u53e3\u66b4\u9732\u7ed9\u7528\u6237\uff0c\u7531\u7528\u6237\u901a\u8fc7\u63a5\u53e3\u8fdb\u884c\u529f\u80fd\u8c03\u7528\u3002\u5bf9\u8c61\u91cd\u7528\u662fCOM\u89c4\u8303\u5f88\u91cd\u8981\u7684\u4e00\u4e2a\u65b9\u9762\uff0c\u5b83\u4fdd\u8bc1\u4e86COM\u53ef\u4ee5\u7528\u4e8e\u6784\u5efa\u5927\u89c4\u6a21\u7684\u8f6f\u4ef6\u7cfb\u7edf\uff0c\u4f7f\u590d\u6742\u7684\u7cfb\u7edf\u7b80\u5316\u4e3a\u4e00\u4e9b\u76f8\u5bf9\u7b80\u5355\u7684\u7ec4\u4ef6\u5bf9\u8c61\u6a21\u5757\uff0c\u4f53\u73b0\u4e86\u9762\u5411\u5bf9\u8c61\u7684\u601d\u60f3\u3002"], "title": "COM\u7684\u4f18\u52bf\u90fd\u6709\u54ea\u4e9b\uff1f"},
{"contents": ["\u5728COM\u63a5\u53e3\u91cc\u6700\u5e38\u7528\u7684\u662fIUnknown\u63a5\u53e3\uff0c\u5176\u5b83\u6240\u6709\u7684\u63a5\u53e3\u90fd\u4ece\u8be5\u63a5\u53e3\u7ee7\u627f\u8fc7\u6765\uff0cIUnknown\u63a5\u53e3\u63d0\u4f9b\u4e86\u4e24\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u7279\u6027\uff1a\u751f\u5b58\u671f\u63a7\u5236\u548c\u63a5\u53e3\u67e5\u8be2\u3002IUnknown\u63a5\u53e3\u5f15\u5165\u4e86\u201c\u5f15\u7528\u8ba1\u6570\u201d\u673a\u5236\uff0c\u53ef\u4ee5\u6709\u6548\u5730\u63a7\u5236\u5bf9\u8c61\u7684\u751f\u5b58\u671f\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c\u5bf9\u8c61\u5b9e\u73b0\u4e86\u591a\u4e2a\u63a5\u53e3\uff0c\u521d\u59cb\u5316\u65f6\uff0c\u5bf9\u8c61\u4e0d\u53ef\u80fd\u63d0\u4f9b\u6240\u6709\u63a5\u53e3\u6307\u9488\uff0c\u5b83\u53ea\u4f1a\u62e5\u6709\u4e00\u4e2a\u63a5\u53e3\u6307\u9488\uff0c\u8fd9\u65f6\uff0c\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u63a5\u53e3\u67e5\u8be2\u7684\u65b9\u6cd5\u6765\u83b7\u5f97\u5176\u5b83\u63a5\u53e3\u3002IUnknown\u63a5\u53e3\u5b9a\u4e49\u4e86\u4e09\u79cd\u65b9\u6cd5\uff1aQueryInterface\u3001AddRef\u3001Release\uff0c\u6240\u6709\u7684COM\u63a5\u53e3\u90fd\u53ef\u4f7f\u7528\u8fd9\u4e09\u4e2a\u63a5\u53e3\u3002"], "title": "COM\u5e38\u89c1\u7684\u63a5\u53e3\u6709\u54ea\u4e9b\uff1f"},
{"contents": ["\u8981\u5b9e\u73b0\u5bf9\u7ed3\u679c\u96c6\u7684\u6570\u636e\u64cd\u4f5c\uff0c\u5c31\u8981\u7528\u5230CRecordSet\u7c7b\u3002CRecordSet\u7c7b\u5b9a\u4e49\u4e86\u4ece\u6570\u636e\u5e93\u63a5\u6536\u6216\u8005\u53d1\u9001\u6570\u636e\u5230\u6570\u636e\u5e93\u7684\u6210\u5458\u53d8\u91cf\uff0cCRecordSet\u7c7b\u5b9a\u4e49\u7684\u8bb0\u5f55\u96c6\u53ef\u4ee5\u662f\u8868\u7684\u6240\u6709\u5217\uff0c\u4e5f\u53ef\u4ee5\u662f\u5176\u4e2d\u7684\u4e00\u5217\uff0c\u8fd9\u662f\u7531SQL\u8bed\u53e5\u51b3\u5b9a\u7684\u3002", "CRecordSet\u7c7b\u7684\u6210\u5458\u53d8\u91cfm_hstmt\u4ee3\u8868\u4e86\u5b9a\u4e49\u8be5\u8bb0\u5f55\u96c6\u7684SQL\u8bed\u53e5\u53e5\u67c4\uff0cm_nFields\u6210\u5458\u53d8\u91cf\u4fdd\u5b58\u4e86\u8bb0\u5f55\u96c6\u4e2d\u5b57\u6bb5\u7684\u4e2a\u6570\uff0cm_nParams\u6210\u5458\u53d8\u91cf\u4fdd\u5b58\u4e86\u8bb0\u5f55\u96c6\u6240\u4f7f\u7528\u7684\u53c2\u6570\u4e2a\u6570\u3002", "CRecordSet\u7684\u8bb0\u5f55\u96c6\u901a\u8fc7CDatabase\u5b9e\u4f8b\u7684\u6307\u9488\u5b9e\u73b0\u540c\u6570\u636e\u6e90\u7684\u8fde\u63a5\uff0c\u5373CRecordSet\u7684\u6210\u5458\u53d8\u91cfm_pDatabase\u3002", "\u5982\u679c\u8bb0\u5f55\u96c6\u4f7f\u7528\u4e86WHERE\u5b50\u53e5\uff0cm_strFilter\u6210\u5458\u53d8\u91cf\u5c06\u4fdd\u5b58\u8bb0\u5f55\u96c6\u7684WHERE\u5b50\u53e5\u7684\u5185\u5bb9\uff0c\u5982\u679c\u8bb0\u5f55\u96c6\u4f7f\u7528\u4e86ORDER BY\u5b50\u53e5\uff0cm_strSort\u6210\u5458\u53d8\u91cf\u5c06\u4fdd\u5b58\u8bb0\u5f55\u96c6\u7684ORDER BY\u5b50\u53e5\u7684\u5185\u5bb9\u3002", "\u7531\u591a\u79cd\u65b9\u6cd5\u53ef\u4ee5\u6253\u5f00\u8bb0\u5f55\u96c6\uff0c\u6700\u5e38\u7528\u7684\u65b9\u6cd5\u662f\u4f7f\u7528Open\u51fd\u6570\u6267\u884c\u4e00\u4e2aSQL SELECT\u8bed\u53e5\u3002\u6709\u5982\u4e0b\u56db\u79cd\u7c7b\u578b\u7684\u8bb0\u5f55\u96c6\uff1a"], "title": "\u4ecb\u7ecd\u4e00\u4e0bCRecordSet\u7c7b\u53ca\u5b83\u7684\u7528\u6cd5"},
{"contents": ["1.C\u4e0eC++\u7684\u5f02\u540c\uff0c\u4f18\u52a3\uff1b", "\n2\uff0eC\uff0cC++\uff0cVC\uff0cBC\uff0cTC\u7684\u533a\u522b\uff1b", "\n3\uff0eC++\u4e2dtry\u2026catch\u5173\u952e\u5b57\u7684\u7528\u6cd5\u4e0e\u4f18\u70b9\uff1b", "\n4\uff0e\u679a\u4e3e\u7684\u7528\u6cd5\uff0c\u4ee5\u53ca\u5b83\u4e0e\u5b8f\u7684\u533a\u522b\uff1b", "\n5\uff0econst\u7684\u7528\u6cd5\uff0c\u4ee5\u53ca\u58f0\u660econst\u53d8\u91cf\u4e0e\u5b8f\u7684\u533a\u522b\uff1b", "\nconst\u7684\u7528\u6cd5\u6709\u56db\u79cd\uff1a1.\u00a0const\u5e38\u91cf\uff0c\u5982const int max = 100\uff1b2. const \u4fee\u9970\u7c7b\u7684\u6570\u636e\u6210\u5458\uff1b3. const\u4fee\u9970\u6307\u9488\u7684\u60c5\u51b5\uff1b4. \u5728\u4e00\u4e2a\u51fd\u6570\u58f0\u660e\u4e2d\uff0cconst \u53ef\u4ee5\u4fee\u9970\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff0c\u6216\u67d0\u4e2a\u53c2\u6570\uff1b\u5bf9\u4e8e\u6210\u5458\u51fd\u6570\uff0c\u8fd8\u53ef\u4ee5\u4fee\u9970\u662f\u6574\u4e2a\u51fd\u6570\u3002", "\n\ue5e5 \u533a\u522b\uff1a1.const\u5e38\u91cf\u6709\u6570\u636e\u7c7b\u578b\uff0c \u800c\u5b8f\u5e38\u91cf\u6ca1\u6709\u6570\u636e\u7c7b\u578b\uff1b2.\u7f16\u8bd1\u5668\u53ef\u4ee5\u5bf9\u524d\u8005\u8fdb\u884c\u7c7b\u578b\u5b89\u5168\u68c0\u67e5\uff0c\u800c\u5bf9\u540e\u8005\u53ea\u80fd\u8fdb\u884c\u5b57\u7b26\u66ff\u6362\uff0c\u6ca1\u6709\u7c7b\u578b\u5b89\u5168\u68c0\u67e5\uff0c\u800c\u4e14\u5b57\u7b26\u66ff\u6362\u53ef\u80fd\u4f1a\u5e26\u6765\u6599\u60f3\u4e0d\u5230\u7684\u8fb9\u754c\u6548\u5e94\uff1b3. \u6709\u4e9b\u96c6\u6210\u5316\u5de5\u5177\u53ef\u4ee5\u5bf9const\u5e38\u91cf\u8fdb\u884c\u8c03\u8bd5\uff0c \u4f46\u4e0d\u80fd\u5bf9\u5b8f\u91cf\u8fdb\u884c\u8c03\u8bd5\u3002", "\n6\uff0eC++\u4e2d\u5f15\u7528\u4e0e\u6307\u9488\u7684\u533a\u522b\uff1b", "\n\ue5e5 \u7b54\uff1a1 \u5f15\u7528\u5b9e\u9645\u4e0a\u662f\u6240\u5f15\u7528\u7684\u5bf9\u8c61\u6216\u53d8\u91cf\u7684\u522b\u540d\uff0c\u800c\u6307\u9488\u662f\u5305\u542b\u6240\u6307\u5411\u5bf9\u8c61\u6216\u53d8\u91cf\u7684\u5730\u5740\u7684\u53d8\u91cf\u3002", "\n\ue5e5\ue5e5 2 \u5f15\u7528\u5728\u5b9a\u4e49\u65f6\u5fc5\u987b\u521d\u59cb\u5316\uff0c\u800c\u6307\u9488\u5728\u5b9a\u4e49\u65f6\u4e0d\u521d\u59cb\u5316\u3002", "\n\ue5e5\ue5e5 3 \u4e0d\u53ef\u4ee5\u6709\u52aaNULL\u7684\u5f15\u7528\uff0c\u800c\u53ef\u4ee5\u6709\u6307\u5411NULL\u7684\u6307\u9488\u3002", "\n\ue5e5\ue5e5 4 \u5f15\u7528\u5728\u521d\u59cb\u5316\u540e\u4e0d\u53ef\u4ee5\u6539\u53d8\u5f15\u7528\u5173\u7cfb\uff0c\u800c\u6307\u9488\u53ef\u4ee5\u968f\u65f6\u6307\u5411\u5176\u4ed6\u5bf9\u8c61\uff08\u975econst\u6307\u9488\uff09\u3002", "\n7\uff0eC++\u4e2dvirtual\u4e0einline\u7684\u542b\u4e49\u5206\u522b\u662f\u4ec0\u4e48\uff1f", "\n\ue5e5 \u7b54\uff1a\u5728\u57fa\u7c7b\u6210\u5458\u51fd\u6570\u7684\u58f0\u660e\u524d\u52a0\u4e0avirtual\u5173\u952e\u5b57\uff0c\u610f\u5473\u7740\u5c06\u8be5\u6210\u5458\u51fd\u6570\u58f0\u660e\u4e3a\u865a\u51fd\u6570\u3002", "\n\ue5e5\ue5e5 inline\u4e0e\u51fd\u6570\u7684\u5b9a\u4e49\u4f53\u653e\u5728\u4e00\u8d77\uff0c\u4f7f\u8be5\u51fd\u6570\u79f0\u4e3a\u5185\u8054\u3002inline\u662f\u4e00\u79cd\u7528\u4e8e\u5b9e\u73b0\u7684\u5173\u952e\u5b57\uff0c\u800c\u4e0d\u662f\u7528\u4e8e\u58f0\u660e\u7684\u5173\u952e\u5b57\u3002", "\n\ue5e5\ue5e5\u865a\u51fd\u6570\u7684\u7279\u70b9\uff1b\u5982\u679c\u5e0c\u671b\u6d3e\u751f\u7c7b\u80fd\u591f\u91cd\u65b0\u5b9a\u4e49\u57fa\u7c7b\u7684\u65b9\u6cd5\uff0c\u5219\u5728\u57fa\u7c7b\u4e2d\u5c06\u8be5\u65b9\u6cd5\u5b9a\u4e49\u4e3a\u865a\u65b9\u6cd5\uff0c\u8fd9\u6837\u53ef\u4ee5\u542f\u7528\u52a8\u6001\u8054\u7f16\u3002", "\n\ue5e5\ue5e5\u5185\u8054\u51fd\u6570\u7684\u7279\u70b9\uff1b\u4f7f\u7528\u5185\u8054\u51fd\u6570\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u63d0\u9ad8\u51fd\u6570\u7684\u8fd0\u884c\u6548\u7387\u3002\u5185\u8054\u51fd\u6570\u4f53\u7684\u4ee3\u7801\u4e0d\u80fd\u8fc7\u957f\uff0c\u56e0\u4e3a\u5185\u8054\u51fd\u6570\u7701\u53bb\u8c03\u7528\u51fd\u6570\u7684\u65f6\u95f4\u662f\u4ee5\u4ee3\u7801\u81a8\u80c0\u4e3a\u4ee3\u4ef7\u7684\u3002\u5185\u8054\u51fd\u6570\u4e0d\u80fd\u5305\u542b\u5faa\u73af\u8bed\u53e5\uff0c\u56e0\u4e3a\u6267\u884c\u5faa\u73af\u8bed\u53e5\u8981\u6bd4\u8c03\u7528\u51fd\u6570\u7684\u5f00\u9500\u5927\u3002", "\n\ue5e5\ue5e5\u4e00\u4e2a\u51fd\u6570\u80fd\u5426\u5373\u662f\u865a\u51fd\u6570\u53c8\u662f\u5185\u8054\u51fd\u6570\uff1f\u53ef\u4ee5\uff0c\u5efa\u8bae\u4e0d\u4f7f\u7528\uff1f", "\n8\uff0e\u4ee5\u4e0b\u5173\u952e\u5b57\u7684\u542b\u4e49\u4e0e\u7528\u6cd5\uff1a", "\n\ue5e5\ue5e5extern\uff0cextern \u201cC\u201d\uff0cstatic\uff0cexplicit\uff0cregister\uff0c#undef\uff0c#ifndef", "\n\ue5e5\ue5e59\uff0e\u4ec0\u4e48\u662f\u51fd\u6570\u91cd\u8f7d\u4e0e\u8986\u76d6\uff1f", "\n\ue5e5\ue5e5\u4e3a\u4ec0\u4e48C\u4e0d\u652f\u6301\u51fd\u6570\u91cd\u8f7d\uff1f", "\n\ue5e5\ue5e5\u4e3a\u4ec0\u4e48C++\u80fd\u652f\u6301\u51fd\u6570\u91cd\u8f7d\uff1f", "\n\ue5e5\ue5e510\uff0eVC\u4e2d\uff0c\u7f16\u8bd1\u5de5\u5177\u6761\u5185\u7684Debug\u4e0eRelease\u9009\u9879\u662f\u4ec0\u4e48\u542b\u4e49\uff1f", "Debug\u00a0\u901a\u5e38\u79f0\u4e3a\u8c03\u8bd5\u7248\u672c\uff0c\u5b83\u5305\u542b\u8c03\u8bd5\u4fe1\u606f\uff0c\u5e76\u4e14\u4e0d\u4f5c\u4efb\u4f55\u4f18\u5316\uff0c\u4fbf\u4e8e\u7a0b\u5e8f\u5458\u8c03\u8bd5\u7a0b\u5e8f\u3002Release\u00a0\u79f0\u4e3a\u53d1\u5e03\u7248\u672c\uff0c\u5b83\u5f80\u5f80\u662f\u8fdb\u884c\u4e86\u5404\u79cd\u4f18\u5316\uff0c\u4f7f\u5f97\u7a0b\u5e8f\u5728\u4ee3\u7801\u5927\u5c0f\u548c\u8fd0\u884c\u901f\u5ea6\u4e0a\u90fd\u662f\u6700\u4f18\u7684\uff0c\u4ee5\u4fbf\u7528\u6237\u5f88\u597d\u5730\u4f7f\u7528\u3002Debug\u5e26\u6709\u5927\u91cf\u7684\u8c03\u8bd5\u4ee3\u7801\uff0c\u8fd0\u884c\u65f6\u9700\u8981\u76f8\u5e94\u7684\u8fd0\u884c\u5e93\uff0c\u53d1\u5e03\u6a21\u5f0f\u7a0b\u5e8f\u7d27\u51d1\u4e0d\u542b\u6709\u8c03\u8bd5\u4ee3\u7801\u548c\u4fe1\u606f\uff0c\u76f4\u63a5\u53ef\u4ee5\u8fd0\u884c\uff08\u5982\u679c\u4e0d\u9700\u8981\u8fd0\u884c\u5e93\uff09", "\n\ue5e5\ue5e511\uff0e\u7f16\u5199my_memcpy\u51fd\u6570\uff0c\u5b9e\u73b0\u4e0e\u5e93\u51fd\u6570memcpy\u7c7b\u4f3c\u7684\u529f\u80fd\uff0c\u4e0d\u80fd\u4f7f\u7528\u4efb\u4f55\u5e93\u51fd\u6570\uff1b", "\n\ue5e5\ue5e5 void* mymemcpy(void* pvTo, const char* pvFrom, size_t size)", "\n\ue5e5\ue5e5 { assert((dest != NULL) && (src != NULL));", "\n\ue5e5\ue5e5 \u00a0\u00a0byte* psTo = (byte*)pvTo;", "\n\ue5e5\ue5e5 \u00a0\u00a0byte* psFrom = (byte*)pvFrom;", "\n\ue5e5\ue5e5 \u00a0\u00a0while (size\u2013 > 0)", "\n\ue5e5\ue5e5 \u00a0\u00a0{*psTo++ = *psFrom++;}", "\n\ue5e5\ue5e5 \u00a0\u00a0return pvTo;", "\n\ue5e5\ue5e5 }", "\n\ue5e5\ue5e512\uff0e\u7f16\u5199my_strcpy\u51fd\u6570\uff0c\u5b9e\u73b0\u4e0e\u5e93\u51fd\u6570strcpy\u7c7b\u4f3c\u7684\u529f\u80fd\uff0c\u4e0d\u80fd\u4f7f\u7528\u4efb\u4f55\u5e93\u51fd\u6570\uff1b", "\n\ue5e5\ue5e5 \u7b54\uff1achar* my_strcpy(char* strdest, const char* strsrc)", "\n\ue5e5\ue5e5 { assert((strdest != NULL) && (strsrc != NULL))", "\n\ue5e5\ue5e5\u00a0 \u00a0char* address = strdest;", "\n\ue5e5\ue5e5 \u00a0\u00a0while((*strdest++ = *strsrc++) != NULL)", "\n\ue5e5\ue5e5 \u00a0\u00a0return address;", "\n\ue5e5\ue5e5 }\ue5e5\ue5e5", "\n\ue5e5\ue5e513\uff0e\u7f16\u5199gbk_strlen\u51fd\u6570\uff0c\u8ba1\u7b97\u542b\u6709\u6c49\u5b57\u7684\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff0c\u6c49\u5b57\u4f5c\u4e3a\u4e00\u4e2a\u5b57\u7b26\u5904\u7406\uff1b", "\n\ue5e5\ue5e5\u5df2\u77e5\uff1a\u6c49\u5b57\u7f16\u7801\u4e3a\u53cc\u5b57\u8282\uff0c\u5176\u4e2d\u9996\u5b57\u8282<0\uff0c\u5c3e\u5b57\u8282\u57280~63\u4ee5\u5916\uff1b\uff08\u5982\u679c\u4e00\u4e2a\u5b57\u8282\u662f-128~127\uff09", "\n\ue5e5\ue5e514\uff0e\u51fd\u6570assert\u7684\u7528\u6cd5?", "\n\ue5e5\ue5e5\u7b54\uff1a\u65ad\u8a00assert\u662f\u4ec5\u5728debug\u7248\u672c\u8d77\u4f5c\u7528\u7684\u5b8f\uff0c\u7528\u4e8e\u68c0\u67e5\u201c\u4e0d\u5e94\u8be5\u201c\u53d1\u751f\u7684\u60c5\u51b5\u3002\u7a0b\u5e8f\u5458\u53ef\u4ee5\u628aassert\u770b\u6210\u4e00\u4e2a\u5728\u4efb\u4f55\u7cfb\u7edf\u72b6\u6001\u4e0b\u90fd\u53ef\u4ee5\u5b89\u5168\u4f7f\u7528\u7684\u65e0\u5bb3\u6d4b\u8bd5\u624b\u6bb5\u3002", "\n\ue5e5\ue5e515\uff0e\u4e3a\u4ec0\u4e48\u5728\u5934\u6587\u4ef6\u7684\u6700\u524d\u9762\u90fd\u4f1a\u770b\u5230\u8fd9\u6837\u7684\u4ee3\u7801\uff1a", "\n\ue5e5\ue5e5#ifndef _STDIO_H_", "\n\ue5e5\ue5e5#define _STDIO_H_", "\u5934\u6587\u4ef6\u4e2d\u7684#ifndef\u4e00\u822c\u683c\u5f0f\u662f\u8fd9\u6837\u7684#ifndef <\u6807\u8bc6> \uff0c#define <\u6807\u8bc6>\uff1b<\u6807\u8bc6>\u5728\u7406\u8bba\u4e0a\u6765\u8bf4\u53ef\u4ee5\u662f\u81ea\u7531\u547d\u540d\u7684\uff0c\u4f46\u6bcf\u4e2a\u5934\u6587\u4ef6\u7684\u8fd9\u4e2a\u201c\u6807\u8bc6\u201d\u90fd\u5e94\u8be5\u662f\u552f\u4e00\u7684\u3002\u6807\u8bc6\u7684\u547d\u540d\u89c4\u5219\u4e00\u822c\u662f\u5934\u6587\u4ef6\u540d\u5168\u5927\u5199\uff0c\u524d\u540e\u52a0\u4e0b\u5212\u7ebf\uff0c\u5e76\u628a\u6587\u4ef6\u540d\u4e2d\u7684\u201c.\u201d\u4e5f\u53d8\u6210\u4e0b\u5212\u7ebf\uff0c\u5982\uff1astdio.h", "#ifndef _STDIO_H_", "\n#define _STDIO_H_", "\n\ue5e5\ue5e516\uff0e\u4e3a\u4ec0\u4e48\u6570\u7ec4\u540d\u4f5c\u4e3a\u53c2\u6570\uff0c\u4f1a\u6539\u53d8\u6570\u7ec4\u7684\u5185\u5bb9\uff0c\u800c\u5176\u5b83\u7c7b\u578b\u5982int\u5374\u4e0d\u4f1a\u6539\u53d8\u53d8\u91cf\u7684\u503c\uff1f", "\n\ue5e5\ue5e5\u7b54\uff1a\u5f53\u6570\u7ec4\u540d\u4f5c\u4e3a\u53c2\u6570\u65f6\uff0c\u4f20\u9012\u7684\u5b9e\u9645\u4e0a\u662f\u5730\u5740\u3002\u800c\u5176\u4ed6\u7c7b\u578b\u5982int\u4f5c\u4e3a\u53c2\u6570\u65f6\uff0c\u7531\u4e8e\u51fd\u6570\u53c2\u6570\u503c\u5b9e\u8d28\u4e0a\u662f\u5b9e\u53c2\u7684\u4e00\u4efd\u62f7\u8d1d\uff0c\u88ab\u8c03\u51fd\u6570\u5185\u90e8\u5bf9\u5f62\u53c2\u7684\u6539\u53d8\u5e76\u4e0d\u5f71\u54cd\u5b9e\u53c2\u7684\u503c\u3002", "\n\ue5e5\ue5e51\uff0e\u5b9e\u73b0\u53cc\u5411\u94fe\u8868\u5220\u9664\u4e00\u4e2a\u8282\u70b9P\uff0c\u5728\u8282\u70b9P\u540e\u63d2\u5165\u4e00\u4e2a\u8282\u70b9\uff0c\u5199\u51fa\u8fd9\u4e24\u4e2a\u51fd\u6570\u3002", "\n\ue5e5\ue5e52\uff0e\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u5c06\u5176\u4e2d\u7684\\t\u90fd\u8f6c\u6362\u62104\u4e2a\u7a7a\u683c\u3002", "\n\ue5e5\ue5e5\u3000\u30003\uff0eWindows\u7a0b\u5e8f\u7684\u5165\u53e3\u662f\u54ea\u91cc\uff1f\u5199\u51faWindows\u6d88\u606f\u673a\u5236\u7684\u6d41\u7a0b\u3002", "\n\ue5e5\ue5e5\u3000\u30004\uff0e\u5982\u4f55\u5b9a\u4e49\u548c\u5b9e\u73b0\u4e00\u4e2a\u7c7b\u7684\u6210\u5458\u51fd\u6570\u4e3a\u56de\u8c03\u51fd\u6570\uff1f", "\n\ue5e5\ue5e5\u3000\u30005\uff0eC++\u91cc\u9762\u662f\u4e0d\u662f\u6240\u6709\u7684\u52a8\u4f5c\u90fd\u662fmain()\u5f15\u8d77\u7684\uff1f\u5982\u679c\u4e0d\u662f\uff0c\u8bf7\u4e3e\u4f8b\u3002", "\n\ue5e5\ue5e5\u3000\u30006\uff0eC++\u91cc\u9762\u5982\u4f55\u58f0\u660econst void f(void)\u51fd\u6570\u4e3aC\u7a0b\u5e8f\u4e2d\u7684\u5e93\u51fd\u6570\uff1f", "\n\ue5e5\ue5e5\u3000\u30007\uff0e\u4e0b\u5217\u54ea\u4e24\u4e2a\u662f\u7b49\u540c\u7684", "\n\ue5e5\ue5e5\u3000\u3000int b;", "\n\ue5e5\ue5e5\u3000\u3000A const int* a = &b;", "\n\ue5e5\ue5e5\u3000\u3000B const* int a = &b;", "\n\ue5e5\ue5e5\u3000\u3000C const int* const a = &b;", "\n\ue5e5\ue5e5\u3000\u3000D int const* const a = &b;", "\n\ue5e5\ue5e5\u3000\u30008\uff0e\u5185\u8054\u51fd\u6570\u5728\u7f16\u8bd1\u65f6\u662f\u5426\u505a\u53c2\u6570\u7c7b\u578b\u68c0\u67e5\uff1f", "\n\ue5e5\ue5e5\u3000\u3000void g(base & b){", "\n\ue5e5\ue5e5\u3000\u3000 b.play;", "\n\ue5e5\ue5e5\u3000\u3000}", "\n\ue5e5\ue5e5\u3000\u3000void main(){", "\n\ue5e5\ue5e5\u3000\u3000 son s;", "\n\ue5e5\ue5e5\u3000\u3000 g(s);", "\n\ue5e5\ue5e5\u3000\u3000 return;", "\n\ue5e5\ue5e5\u3000\u3000}", "\n\ue5e5\ue5e53\u3001WinMain", "\n\ue5e5\ue5e5 while( (bRet = GetMessage( &msg, NULL, 0, 0 )) != 0)", "\n\ue5e5\ue5e5 {", "\n\ue5e5\ue5e5 if (bRet == -1)", "\n\ue5e5\ue5e5 {", "\n\ue5e5\ue5e5 // handle the error and possibly exit", "\n\ue5e5\ue5e5 }", "\n\ue5e5\ue5e5 else", "\n\ue5e5\ue5e5 {", "\n\ue5e5\ue5e5 TranslateMessage(&msg);", "\n\ue5e5\ue5e5 DispatchMessage(&msg);", "\n\ue5e5\ue5e5 }", "\n\ue5e5\ue5e5 }"], "title": "C++\u9762\u8bd5\u9898\u53ca\u89e3\u91ca"},
{"contents": ["A:", "\u5165\u53e3\u70b9\u662fWinMain\u51fd\u6570.", "Windows\u6d88\u606f\u673a\u5236\u7684\u6d41\u7a0b:", "1.Windows\u4e2d\u6709\u4e00\u4e2a\u7cfb\u7edf\u6d88\u606f\u961f\u5217\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6b63\u5728\u6267\u884c\u7684Windows\u5e94\u7528\u7a0b\u5e8f,\u7cfb\u7edf\u4e3a\u5176\u5efa\u7acb\u4e00\u4e2a\u201c\u6d88\u606f\u961f\u5217\u201d\uff0c\u5373\u5e94\u7528\u7a0b\u5e8f\u961f\u5217\uff0c\u7528\u6765\u5b58\u653e\u8be5\u7a0b\u5e8f\u53ef\u80fd\u521b\u5efa\u7684\u5404\u79cd\u7a97\u53e3\u7684\u6d88\u606f\u3002\u5e94\u7528\u7a0b\u5e8f\u4e2d\u542b\u6709\u4e00\u6bb5\u79f0\u4f5c\u201c\u6d88\u606f\u5faa\u73af\u201d\u7684\u4ee3\u7801\uff0c\u7528\u6765\u4ece\u6d88\u606f\u961f\u5217\u4e2d\u68c0\u7d22\u8fd9\u4e9b\u6d88\u606f\u5e76\u628a\u5b83\u4eec\u5206\u53d1\u5230\u76f8\u5e94\u7684\u7a97\u53e3\u51fd\u6570\u4e2d\u3002", "2.Windows\u4e3a\u5f53\u524d\u6267\u884c\u7684\u6bcf\u4e2aWindows\u7a0b\u5e8f\u7ef4\u62a4\u4e00\u4e2a\u300c\u6d88\u606f\u961f\u5217\u300d\u3002\u5728\u53d1\u751f\u8f93\u5165\u4e8b\u4ef6\u4e4b\u540e\uff0cWindows\u5c06\u4e8b\u4ef6\u8f6c\u6362\u4e3a\u4e00\u4e2a\u300c\u6d88\u606f\u300d\u5e76\u5c06\u6d88\u606f\u653e\u5165\u7a0b\u5e8f\u7684\u6d88\u606f\u961f\u5217\u4e2d\u3002\u7a0b\u5e8f\u901a\u8fc7\u6267\u884c\u4e00\u5757\u79f0\u4e4b\u4e3a\u300c\u6d88\u606f\u5faa\u73af\u300d\u7684\u7a0b\u5e8f\u4ee3\u7801\u4ece\u6d88\u606f\u961f\u5217\u4e2d\u53d6\u51fa\u6d88\u606f\uff1a", "while(GetMessage (&msg, NULL, 0, 0))", "{", "TranslateMessage (&msg) ;", "DispatchMessage (&msg) ;", "}", "TranslateMessage(&msg);\u5c06msg\u7ed3\u6784\u4f20\u7ed9Windows\uff0c\u8fdb\u884c\u4e00\u4e9b\u952e\u76d8\u8f6c\u6362\u3002", "DispatchMessage (&msg);\u53c8\u5c06msg\u7ed3\u6784\u56de\u4f20\u7ed9Windows\u3002\u7136\u540e\uff0cWindows\u5c06\u8be5\u6d88\u606f\u53d1\u9001\u7ed9\u9002\u5f53\u7684\u7a97\u53e3\u6d88\u606f\u5904\u7406\u7a0b\u5e8f\uff0c\u8ba9\u5b83\u8fdb\u884c\u5904\u7406\u3002", "SendMessage()\u4e0ePostMessage()\u4e4b\u95f4\u7684\u533a\u522b\u662f\u4ec0\u4e48\uff1f", "\u5b83\u4eec\u4e24\u8005\u662f\u7528\u4e8e\u5411\u5e94\u7528\u7a0b\u5e8f\u53d1\u9001\u6d88\u606f\u7684\u3002PostMessagex()\u5c06\u6d88\u606f\u76f4\u63a5\u52a0\u5165\u5230\u5e94\u7528\u7a0b\u5e8f\u7684\u6d88\u606f\u961f\u5217\u4e2d\uff0c\u4e0d\u7b49\u7a0b\u5e8f\u8fd4\u56de\u5c31\u9000\u51fa\uff1b\u800cSendMessage()\u5219\u521a\u597d\u76f8\u53cd\uff0c\u5e94\u7528\u7a0b\u5e8f\u5904\u7406\u5b8c\u6b64\u6d88\u606f\u540e\uff0c\u5b83\u624d\u8fd4\u56de\u3002"], "title": "C++\u9762\u8bd5\u9898\uff1aWindows\u7a0b\u5e8f\u7684\u5165\u53e3\u662f\u54ea\u91cc\uff1f\u5199\u51faWindows\u6d88\u606f\u673a\u5236\u7684\u6d41\u7a0b"},
{"contents": ["\u5b9d\u5b9d\u627e\u5de5\u4f5c\u4ee5\u6765\uff0c\u5927\u5927\u5c0f\u5c0f\u7684\u9762\u8bd5\u7ecf\u5386\u4e86\u4e0d\u5c11\uff0c\u603b\u7ed3\u51fa\u4e00\u4e9bsoftware\u5fc5\u5b9a\u4f1a\u88ab\u95ee\u5230\u7684\u95ee\u9898\uff0c\u4f9b\u5927\u5bb6\u53c2\u8003\uff08\u8fd9\u4e9b\u95ee\u9898\u5f88\u591a\u90fd\u975e\u5e38\u57fa\u7840\uff0c\u51fa\u73b0\u5728\u534e\u4e3a\u3001\u4e2d\u5174\u3001intel\u3001\u4e0a\u6d77\u7fa4\u7855\u3001\u6df1\u5733\u6b63\u9633\u3001\u817e\u8baf\u3001\u60e0\u666e\u3001\u5fae\u8f6f\u7b49\u516c\u53f8\uff0c\u5982\u679c\u683d\u5728\u8fd9\u4e0a\u9762\u8c01\u90fd\u4e0d\u4f1a\u7518\u5fc3\uff09\uff1a", "\n", "\n1\u3001\u6392\u5e8f\u3002\u8fd9\u79cd\u9898\u76ee\u51e0\u4e4e\u662f\u5fc5\u95ee\u7684\uff0c\u4e00\u822c\u662f\u95ee\u4f60\u6392\u5e8f\u6709\u51e0\u79cd\uff0c\u5404\u79cd\u6392\u5e8f\u7684\u6bd4\u8f83\u554a\u7b49\u7b49\u3002\u8fd8\u6709\u54ea\u4e9b\u6392\u5e8f\u662f\u7a33\u5b9a\u7684\u7b49\uff0c\u8fd9\u4e9b\u8fd8\u662f\u8981\u8bb0\u4f4f\u7684\u3002\u672b\u4e86\uff0c\u5fc5\u5b9a\u4f1a\u95ee\u4f60", "\u7684\u7b97\u6cd5~\u5475\u5475\uff0c\u72e0\u4e00\u4e9b\u7684\u5c31\u8ba9\u4f60\u5199\u51fa\u6765\u3002\uff08\u81f3\u4e8e\u5806\u6392\u5e8f\u6876\u6392\u5e8f\u554a\u4ec0\u4e48\u7684\uff0c\u5012\u662f\u4ece\u6765\u6ca1\u6709\u542c\u8bf4\u6709\u4eba\u88ab\u95ee\u8fc7\u2014\u2014\u6211\u4eec\u89c9\u5f97\u8fd9\u4e48\u9ebb\u70e6\u7684\u7b97\u6cd5\u9762\u8bd5\u5b98\u81ea\u5df1\u4f30\u8ba1\u4e5f\u4e0d\u4f1a\u8bb0\u5f97\u2026\u2026\u5475\u5475\uff09", "\n2\u3001\u67e5\u627e\u3002\u54c8\u5e0c\u3001\u4e8c\u53c9\u6811\u3001\u6298\u534a\u7b49\u5bf9\u6bd4\u3002\u54c8\u5e0c\u6620\u5c04\u548c\u54c8\u5e0c\u8868\u7684\u533a\u522b\u3002", "\n3\u3001\u94fe\u8868\u548c\u6570\u7ec4\u7684\u533a\u522b\u3002\u5728\u4ec0\u4e48\u60c5\u51b5\u4e0b\u7528\u94fe\u8868\u4ec0\u4e48\u60c5\u51b5\u4e0b\u7528\u6570\u7ec4\u3002", "\n4\u3001\u6808\u548c\u961f\u5217\u7684\u533a\u522b\u3002", "\n5\u3001\u591a\u6001\u3002overload \u548c override\u7684\u533a\u522b\u3002", "\n6\u3001\u5b57\u7b26\u4e32\u6709\u5173\u7684\u51fd\u6570\u3002\u6bd4\u5982\u8ba9\u4f60\u5199\u4e00\u4e2a\u62f7\u8d1d\u5b57\u7b26\u4e32\u7684\u51fd\u6570\u554a\uff0c\u6216\u8005\u5b57\u7b26\u4e32\u53cd\u8f6c\u554a\u4ec0\u4e48\u7684\u3002strcpy\u548cmemcpy\u3002", "\n7\u3001\u7ee7\u627f\u3001\u591a\u7ee7\u627f\u3002", "\n8\u3001\u9762\u5411\u5bf9\u8c61\u6709\u4ec0\u4e48\u597d\u5904", "\n9\u3001\u8bf4\u8bf4static\u7684\u4e0e\u4f17\u4e0d\u540c\u4e4b\u5904\u3002\u5982\u679c\u4e00\u4e2a\u53d8\u91cf\u88ab\u58f0\u660e\u4e3astatic\uff0c\u5b83\u4f1a\u88ab\u5206\u914d\u5728\u54ea\u91cc\u3002\u5728\u4ec0\u4e48\u65f6\u5019\u5206\u914d\u7a7a\u95f4\u7b49\u3002", "\n10\u3001\u8f6f\u4ef6\u5f00\u53d1\u7684\u51e0\u4e2a\u8fc7\u7a0b\u3002\u5982\u679c\u8bf4\u5230\u6d4b\u8bd5\uff0c\u4e00\u5b9a\u4f1a\u95ee\u6d4b\u8bd5\u5206\u54ea\u51e0\u79cd\uff0c\u6709\u4ec0\u4e48\u533a\u522b\u7b49\u3002", "\n11\u3001\u4ec0\u4e48\u662f\u865a\u51fd\u6570\u3001\u7eaf\u865a\u51fd\u6570\u3001\u865a\u7684\u6790\u6784\u51fd\u6570\uff0c\u7528\u9014\u3002", "\n12\u3001\u8fd8\u6ca1\u60f3\u8d77\u6765\uff0c\u6b22\u8fce\u5927\u5bb6\u8865\u5145", "CharlieBrown\u8865\u5145", "\n1\u3001Java\u7684\u7279\u6027\uff0c\u5783\u573e\u56de\u6536\uff0c\u8ba9\u4f60\u60f3\u4e00\u4e2a\u5927\u6982\u7684\u5b9e\u73b0\u5783\u573e\u56de\u6536\u7684\u67b6\u591f\u3002", "\n2\u3001Java\u548cC/C++\u7684\u533a\u522b", "\n3\u3001\u865a\u51fd\u6570\uff0c\u7eaf\u865a\u51fd\u6570\u3001\u91cd\u683d\u51fd\u6570\uff0c\u4ed6\u4eec\u4e4b\u95f4\u7684\u533a\u522b\uff0c\u4ec0\u4e48\u65f6\u5019\u7528\uff0c\u91cd\u8f7d\u4ec0\u4e48\u65f6\u5019\u7528\u865a\u51fd\u6570\u3002\u865a\u51fd\u6570\u7684\u5b9e\u73b0\u673a\u7406\u3002", "\n4\u3001\u73b0\u573a\u7f16\u5199\u7a0b\u5e8f\u7684\u8003\u70b9\uff1a\u6307\u9488\u8d8a\u754c\u3001\u57fa\u672c\u7c7b\u578b\u6570\u636e\u7684\u5b57\u957f\u3001\u5b57\u7b26\u4e32\u3001\u6570\u7ec4", "\n\u9762\u8bd5SE\u65f6\uff0c\u5f88\u591a\u516c\u53f8\u559c\u6b22\u95ee\u5230\u865a\u51fd\u6570\u76f8\u5173\u3002\u5b9d\u5b9d\u6709\u4e00\u6b21\u88ab\u95ee\u5230\uff0cCObject\u7c7b\u4e2d\u7684\u6790\u6784\u51fd\u6570\u4e3a\u4ec0\u4e48\u662f\u865a\u51fd\u6570\uff0c\u4e0d\u61c2\u3002\u540e\u6765\u4e0a\u7f51\u67e5\u5230\u4e86\u7b54\u6848\uff0c\u7279\u8d34\u4e0a\u6765\u4e0e\u5927\u5bb6\u5206\u4eab"], "title": "\u603b\u7ed3\u51fa\u4e00\u4e9bsoftware\u5fc5\u5b9a\u4f1a\u88ab\u95ee\u5230\u7684\u95ee\u9898 C\u3001C++\u90e8\u5206"},
{"contents": ["\u7406\u89e3c\uff0b\uff0b\u8bed\u8a00\u4e2d\u4e00\u4e9b\u6982\u5ff5\u4ee5\u53ca\u5b83\u4eec\u4e4b\u95f4\u7684\u533a\u522b\uff08\u9700\u8981\u6df1\u523b\u7406\u89e3\uff09\uff1a", "\uff081\uff09\u5c40\u90e8\u53d8\u91cf\u5168\u5c40\u53d8\u91cf\u9759\u6001\u53d8\u91cf const\u5e38\u91cf\u5bc4\u5b58\u5668\u53d8\u91cf\u5b8f\u5b9a\u4e49\u7684\u5e38\u91cf static\u53d8\u91cf", "\u6ce8\uff1a\u5305\u62ec\u5b83\u4eec\u7684\u5185\u5b58\u5206\u914d\u533a\u57df\uff0c\u4f5c\u7528\u57df\uff0c\u521d\u59cb\u5316\u7b49\u7b49", "\uff082\uff09\u7406\u89e3malloc\u4e0enew\u4e4b\u95f4\u7684\u533a\u522b\uff0c\u4ee5\u53cafree\u4e0edelete\u4e4b\u95f4\u533a\u522b", "\uff083\uff09\u5185\u8054\u51fd\u6570\u4e0e\u5b8f\u5b9a\u4e49\u7684\u533a\u522b\uff0c\u5b83\u4eec\u5404\u6709\u4ec0\u4e48\u4f18\u70b9", "\uff084\uff09\u5185\u5b58\u5206\u914d\u6709\u54ea\u51e0\u79cd\u5f62\u5f0f\uff1f\u5206\u522b\u4e3a\u4f55\uff1f\u533a\u522b\u662f\u4ec0\u4e48\uff1f\u5bf9\u7f16\u8bd1\u901f\u5ea6\u5f71\u54cd\u662f\u4f55\uff1f", "\uff084\uff09\u7406\u89e3\u4ec0\u4e48\u662f\u91cd\u8f7d\u3001\u8986\u76d6\u3001\u9690\u85cf\uff0c\u533a\u522b\u662f\u4f55\uff1f\u53ef\u5426\u4e3e\u4f8b\uff1f", "\uff085\uff09\u4ec0\u4e48\u662f\u591a\u6001\uff1f\u4e3e\u4e2a\u4f8b\u5b50\u8bd5\u8bd5", "\uff086\uff09struct \u548cclass\u6709\u4ec0\u4e48\u533a\u522b\uff1fc\u8bed\u8a00\u4e2d\u7684struct \u548cc\uff0b\uff0b\u4e2d\u7684struct\u4e00\u6837\u4e48\uff1f\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\uff087\uff09\u8bf4\u8bf4\u4ec0\u4e48\u662f\u91ce\u6307\u9488\uff1f\u91ce\u6307\u9488\u4ec0\u4e48\u60c5\u51b5\u4e0b\u51fa\u73b0\uff1f\uff08\u6ca1\u6709\u521d\u59cb\u5316\uff0cdelete\u540e\u6ca1\u6709\u8d4b\u503c\u4e3aNULL\uff09", "\uff088\uff09\u4f60\u719f\u6089\u9884\u7f16\u8bd1\u6307\u4ee4\u4e48\uff1f\u6761\u4ef6\u7f16\u8bd1\u662f\u7528\u6765\u505a\u4ec0\u4e48\u7684\uff1f\u4f60\u4f1a\u5199\u4e48\uff1f", "\uff089\uff09sizeof\uff08\uff09\u8fd9\u4e2a\u51fd\u6570\u4f60\u7406\u89e3\u4e48\uff1f\u4f60\u80fd\u8bf4\u51fa\u5404\u79cd\u53d8\u91cf\u7c7b\u578b\u5728win 32 \u4e0b\u7684\u503c\u4e48\uff1f", "\uff0810\uff09\u5173\u4e8estring\u8fd9\u4e2a\u7c7b\u4f60\u7406\u89e3\u4e48\uff1f\u4f1a\u5199\u5b83\u7684\u6784\u9020\u51fd\u6570\uff0c\u6790\u6784\u51fd\u6570\uff0c\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u8d4b\u503c\u51fd\u6570\u4e48\uff1f\u4f1a\u5199strcpy\u5417\uff1f", "\uff0811\uff09\u77e5\u9053\u65ad\u8a00ASSERT\uff08\uff09\u600e\u4e48\u6837\u4e48\uff1f\u4e00\u5b9a\u8981\u5e38\u7528\u3002\u5b83\u662f\u51fd\u6570\u8fd8\u662f\u5b8f\uff1f\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u662f\u51fd\u6570\uff1f", "\uff0812\uff09\u61c2\u4ec0\u4e48\u662f\u94fe\u8868\u4e48\uff1f\u4f1a\u94fe\u8868\u7684\u4e00\u4e9b\u57fa\u672c\u64cd\u4f5c\u4e48\uff1f", "\uff0813\uff09\u660e\u767d\u961f\u5217\uff0c\u53cc\u94fe\u8868\uff0c\u5faa\u73af\u94fe\u8868\uff0c\u6808\u662f\u600e\u4e48\u56de\u4e8b\uff1f\u4f1a\u5199\u8fd9\u4e9b\u7c7b\u3002", "\uff0814\uff09\u4e00\u5b9a\u8981\u77e5\u9053\u4e8c\u53c9\u6811\u7684\u904d\u5386\u6709\u51e0\u79cd\uff0c\u4e00\u5b9a\u8981\u4f1a\u5199\u7528\u9012\u5f52\u7684\u65b9\u5f0f\u6765\u904d\u5386\u5b83\u4eec\u3002", "\uff0815\uff09\u5728\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\uff0c\u4f60\u80fd\u8ba1\u7b97\u91cc\u8fb9\u201c\u6570\u5b57\u5b57\u7b26\u201d\u7684\u4e2a\u6570\u4e48\uff1f", "\uff0816\uff09\u77e5\u9053sizeof(Type*)=4\u5417\uff1f\u6ce8\uff1awin32\u4e0b", "\uff0817\uff09int array[5]= {}; sizeof(array)=?", "int Fuction(int a[])", "{", "return sizeof(a);", "}", "Fuction(array)=?", "\uff0818\uff09\u4f60\u77e5\u9053\u51fd\u6570\u4e0d\u80fd\u8fd4\u56de\u6808\u6307\u9488\u4e48\uff1f", "\uff0819\uff09\u77e5\u9053\u5c40\u90e8\u53d8\u91cf\u4e3a\u4ec0\u4e48\u6bd4\u5168\u5c40\u53d8\u91cf\u5feb\u4e48\uff1f", "\uff0820\uff09\u77e5\u9053\u4e3a\u4ec0\u4e48\u8981\u4eba\u4e3a\u5199\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u4e48\uff1f", "\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7", "\u4ece21\u6761\u5f00\u59cb\u5c5e\u4e8e\u96be\u70b9", "\uff0821\uff09\u4f1a\u7528c\u8bed\u8a00\u5b9e\u73b0\u91cd\u8f7d\u4e0e\u7ee7\u627f\u4e48\uff1f", "\uff0822\uff09\u80fd\u8bf4\u51fa\u51e0\u79cd\u6392\u5e8f\u65b9\u6cd5\uff1f\u5b83\u4eec\u7684\u533a\u522b\u548c\u5404\u81ea\u7684\u4f18\u70b9\u662f\u4ec0\u4e48\uff1f\u77e5\u9053\u4ec0\u4e48\u662f\u5185\u6392\u5e8f\u4ec0\u4e48\u662f\u5916\u6392\u5e8f\u4e48\uff1f", "\uff0823\uff09\u77e5\u9053\u4ec0\u4e48\u662fstruct\u4e2d\u7684\u5bf9\u9f50\u4e48\uff1f", "\uff0824\uff09extern c\u2018 \u662f\u5e72\u4ec0\u4e48\u7684\uff1f", "\uff0825\uff09\u5185\u5b58\u7ba1\u7406\u4f60\u61c2\u591a\u5c11\uff1f\uff08\u5305\u62ec\u5185\u5b58\u6cc4\u6f0f\uff0c\u91ce\u6307\u9488\u77e5\u8bc6\uff0c\u975e\u6cd5\u8c03\u7528\uff0c\u5185\u5b58\u6ea2\u51fa\u7b49\uff09", "\uff0826\uff09malloc\u8fd4\u56de\u4ec0\u4e48\uff1f\u600e\u4e48\u7528\uff1f", "\uff0827\uff09\u5f85\u7eed\u2026\u2026", "\n3 .\u4e0a\u6b21\u8bf4\u4e86\u8bf4\u5173\u4e8ec\u3001c\uff0b\uff0b\u7684\u4e00\u4e9b\u91cd\u70b9\uff0c\u73b0\u5728\u8bf4\u4e00\u4e9b\u5173\u4e8eMFC\u4e2d\u7ecf\u5e38\u8003\u7684\u4e1c\u897f\uff08\u6709\u4e9b\u4e5f\u4e0d\u662f\u4e13\u5c5e\u4e8eMFC\uff0c\u4f46\u6211\u4eec\u73b0\u5728\u7ecf\u5e38\u5728MFC\u4e2d\u7528\u5230\uff0c\u50cfActiveX \uff0cCOM\uff0c\u52a8\u6001\u94fe\u63a5\u5e93\u7684\u4e1c\u897f\uff09\uff0c\u5176\u5b9e\u5728\u7b14\u8bd5\u8003\u8bd5\u4e2d\uff0cMFC\u7684\u4e1c\u897f\u8003\u7684\u5f88\u5c11\uff0c\u5355\u4f4d\u90fd\u6ce8\u91cdc\u7684\u57fa\u7840\u662f\u5426\u624e\u5b9e\uff0c\u9762\u5411\u5bf9\u8c61\u601d\u60f3\u662f\u5426\u7406\u89e3\u7684\u6df1\u523b\u3002", "1\uff09\u8bf4\u8bf4mfc\u4e2d\u7684\u7c7b\u7ee7\u627f\u56fe\u7684\u57fa\u672c\u6846\u67b6\uff0c\u8fd9\u4e2a\u9898\u6211\u88ab\u8003\u8fc7\u3002", "2\uff09\u8bf4\u8bf4CView\u7c7b\u7684\u5b50\u7c7b\u90fd\u6709\u4ec0\u4e48\u3002", "3\uff09DLL\u7684\u4e09\u79cd\u8c03\u7528\u5f62\u5f0f\u3002", "4\uff09\u8bf4\u8bf4onpaint\uff08\uff09\u548condraw\uff08\uff09\u7684\u5173\u7cfb\u3002", "5\uff09\u8bf4\u8bf4CView\u7c7b\u4e0eCDocument\u7684\u5173\u7cfb\uff08\u91cd\u8981\uff09\u3002", "6\uff09\u8bf4SendMessage\uff08\uff09\u4e0ePostMessage\uff08\uff09\u7684\u533a\u522b\u3002", "7\uff09\u7b80\u8ff0COM\u6280\u672f\u3002", "8\uff09\u8bf4\u8bf4\u8bfb\u5199\u4e00\u4e2a\u6587\u4ef6\u600e\u4e48\u6765\u5b8c\u6210\uff0c\u5206\u522b\u7528c\uff0cc\uff0b\uff0b\uff0cMFC\u4e09\u79cd\u5e93\u51fd\u6570\u6765\u7f16\u5199\u4ee3\u7801\u3002", "9\uff09\u8bf4\u8bf4\u4e8c\u8fdb\u5236\u6587\u4ef6\u548c\u6587\u672c\u6587\u4ef6\u4e4b\u95f4\u533a\u522b\uff0c\u4e3e\u4f8b\u5b50\uff0c\u4f1a\u5417\uff1f", "10\uff09.net\u7684\u6280\u672f\u4f18\u70b9\u662f\u4f55\uff1f"], "title": "c++mfc\u7b14\u8bd5\u5e38\u89c1\u9898\u578b"},
{"contents": ["1. \u6c42\u4e8c\u4e2a\u96c6\u5408A\u3001B\u4ea4\u96c6\u7684\u8865\u96c6\uff1a", "\n\u4ee5\u6574\u578b\u96c6\u5408\u4e3a\u4f8b\u3002", "\nset<int> f(set<int> A, set<int> B)", "\n{", "\nset<int>C(A);", "\npair<set<int>::iterator, bool> ele;", "\nfor (set<int>::iterator iter=B.begin(); iter!=B.end(); iter++)", "\n{", "\nele = C.insert(*iter);", "\nif (!ele.second)", "\nC.erase(*iter);", "\n}", "\nreturn C;", "\n}", "\n\u8fd9\u4e2a\u4e0d\u591f\u9ad8\u6548\uff0c\u8981\u505a\u53c2\u6570\u7684\u590d\u5236\uff0c\u53ca\u8fd4\u56de\u65f6\u7684\u4e34\u65f6\u5bf9\u8c61\uff0c\u4e0b\u9762\u7684\u66f4\u52a0\u597d\uff1a", "\nvoid f(const set<int>& A, const set<int>& B, set<int>& C)", "\n{", "\nC = A;", "\npair<set<int>::iterator, bool> ele;//\u7528\u4e8e\u5b58\u653e\u63d2\u5165\u5143\u7d20\u662f\u5426\u6210\u529f", "\nfor (set<int>::", " iter=B.begin(); iter!=B.end(); iter++)", "\n{", "\nele = C.insert(*iter);", "\nif (!ele.second)//\u5982\u679c\u63d2\u5165\u5931\u8d25\uff0c\u8bf4\u660e\u662f\u4ea4\u96c6\u5143\u7d20\uff0c\u5c06\u5b83\u5220\u9664", "\nC.erase(*iter);", "\n}", "\n}", "2. \u8f93\u5165\u4e00\u884c\u5b57\u7b26\uff0c\u6c42\u82f1\u6587\u5b57\u6bcd\uff0c\u6570\u5b57\uff0c\u7a7a\u683c\uff0c\u5176\u5b83\u5b57\u7b26\u7684\u4e2a\u6570\uff0e", "\n\u4e00 \u4e2a\u6709\u7528\u7684string IO\u64cd\u4f5c\uff1agetling\u3002\u8fd9\u4e2a\u51fd\u6570\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\uff1a\u4e00\u4e2a\u8f93\u5165\u6d41\u5bf9\u8c61\u548c\u4e00\u4e2astring\u5bf9\u8c61\u3002getline\u51fd\u6570\u4ece\u8f93\u5165\u6d41\u7684\u4e0b\u4e00\u884c\u8bfb\u53d6\uff0c\u5e76\u4fdd\u5b58\u8bfb\u53d6\u7684\u5185\u5bb9\u5230 string\u4e2d\uff0c\u4f46\u4e0d\u5305\u62ec\u6362\u884c\u7b26\u3002\u548c\u8f93\u5165\u64cd\u4f5c\u7b26\u4e0d\u4e00\u6837\u7684\u662f\uff0cgetline\u5e76\u4e0d\u5ffd\u7565\u884c\u5f00\u5934\u7684\u6362\u884c\u7b26\u3002\u53ea\u8981getline\u9047\u5230\u6362\u884c\u7b26\uff0c\u5373\u4fbf\u5b83\u662f\u8f93\u5165\u7684\u7b2c\u4e00\u4e2a \u5b57\u7b26\uff0cgetline\u4e5f\u5c06\u505c\u6b62\u8bfb\u5165\u5e76\u8fd4\u56de\u3002\u5982\u679c\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5c31\u662f\u6362\u884c\u7b26\uff0c\u5219string\u53c2\u6570\u5c06\u88ab\u7f6e\u4e3a\u7a7astring\u3002", "\ngetline\u51fd\u6570\u5c06istream\u53c2\u6570\u4f5c\u4e3a\u8fd4\u56de\u503c\uff0c\u548c\u8f93\u5165\u64cd\u4f5c\u7b26\u4e00\u6837\u4e5f\u628a\u5b83\u7528\u4f5c\u5224\u65ad\u6761\u4ef6\u3002", "#include <iostream>", "\n#include <string>", "\nusing namespace std;", "\nint main()", "\n{", "\nint letter = 0;", "\nint number = 0;", "\nint space = 0;", "\nint other = 0;", "\nstring line;", "\ngetline(cin, line);", "\nint len = line.length();", "\nfor (int i=0; i<len; i++)", "\n{", "\nif ((line<=\u2019z\u2019 && line >=\u2019a') || (line<=\u2019Z\u2019 && line>=\u2019A') )", "\nletter++;", "\nelse if (line<=\u20199\u2032 && line>=\u20190\u2032)", "\nnumber++;", "\nelse if (line == \u2018 \u2018)", "\nspace++;", "\nelse", "\nother++;", "\n}", "\ncout << \u201cletter: \u201d << letter << endl;", "\ncout << \u201cnumber: \u201d << number << endl;", "\ncout << \u201cspace: \u201d << space << endl;", "\ncout << \u201cother: \u201d << other << endl;", "\n}", "3. \u5224\u65ad\u4e00\u4e2a\u6570\u662f\u5426\u662f2\u7684\u4e58\u65b9\uff0e", "\n\u53ef\u4ee5\u7528\u79fb\u4f4d\u8fd0\u7b97\uff0e\u5982\u679c\u662f2\u7684\u4e58\u65b9\uff0c\u90a3\u5e94\u8be5\u53ea\u6709\u6700\u5de6\u7684\u4e00\u4e2a\u662f1\uff0e\u4ece\u53f3\u5411\u5de6\u627e\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a1\u65f6\u505c\u6b62\uff0c\u8bb0\u5f55\u4e0b\u79fb\u4e86\u591a\u5c11\u4f4dn\uff0c\u90a32\u7684n\u6b21\u65b9\u5982\u679c\u548c\u539f\u6765\u7684\u6570\u76f8\u7b49\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u5c31\u662f2\u7684\u4e58\u65b9\uff0c\u5426\u5219\u4e0d\u662f\uff0e", "\n\u4e4b\u524d\u4ee5\u4e3a\u79fb\u4f4d\u662f\u76f4\u63a5\u5230\u6570\u672c\u8eab\u7684\u64cd\u4f5c\uff0c\u539f\u6765\u4e0d\u662f\uff0c\u5b83\u64cd\u4f5c\u662f\u7ed9\u51fa\u4e00\u4e2a\u79fb\u4f4d\u540e\u7684\u8fd4\u56de\u503c\uff0c\u800c\u64cd\u4f5c\u6570\u672c\u8eab\u6ca1\u6709\u6539\u53d8\uff0e", "\nbool judge(int number)", "\n{", "\nif (number == 0)//\u8fd9\u91cc\u4e0d\u80fd\u5c11\uff0c\u5426\u5219\u8f93\u51650\u7684\u8bdd\uff0c\u4f1a\u8fdb\u5165\u6b7b\u5faa\u73af", "\nreturn false;", "\nint n = 0;", "\nint copy = number;", "\nwhile ((copy&1) == 0)//\u5982\u679ccopy&1 == 1\uff0c\u8bf4\u660e\u627e\u5230\u4e86\u6700\u9760\u53f3\u76841", "\n{", "\ncout << copy << endl;", "\nn++;", "\ncopy = copy >> 1;//\u8fd9\u91cc\u4e0d\u80fd\u7528copy>>1\uff0c\u8fd9\u6837copy\u6ca1\u6709\u53d8\u5316\uff0c\u6b7b\u5faa\u73af", "\n}", "\nreturn !(number&~(1<<n)); //\u5982\u679c1\u5de6\u79fbn\u4f4d\u4e0e\u539f\u6570\u4e0d\u76f8\u7b49\uff0c\u8bf4\u660e\u539f\u6570\u4e0d\u6b62\u4e00\u4e2a1\uff0c\u4e0d\u662f2\u7684n\u6b21\u65b9", "}", "\n4. \u5224\u65ad\u4e00\u4e2a\u6570\u662f\u4e0d\u662f\u5947\u6570", "\nreturn number&1;", "\n5. \u6c42\u6570\u7ec4\u6570\u5b57\u7684\u5168\u6392\u5217\uff0e", "\n\u8f6c\u81ea\uff1ahttp://tieba.baidu.com/f?kz=478333827", "\n\u5168\u6392\u5217\u662f\u5c06\u4e00\u7ec4\u6570\u6309\u4e00\u5b9a\u987a\u5e8f\u8fdb\u884c\u6392\u5217\uff0c\u5982\u679c\u8fd9\u7ec4\u6570\u6709n\u4e2a\uff0c\u90a3\u4e48\u5168\u6392\u5217\u6570\u4e3an!\u4e2a\u3002\u73b0\u4ee5{1, 2, 3, 4, 5}\u4e3a\u4f8b\u8bf4\u660e\u5982\u4f55\u7f16\u5199\u5168\u6392\u5217\u7684\u9012\u5f52\u7b97\u6cd5\u3002", "1\u3001\u9996\u5148\u770b\u6700\u540e\u4e24\u4e2a\u65704, 5\u3002 \u5b83\u4eec\u7684\u5168\u6392\u5217\u4e3a4 5\u548c5 4, \u5373\u4ee54\u5f00\u5934\u76845\u7684\u5168\u6392\u5217\u548c\u4ee55\u5f00\u5934\u76844\u7684\u5168\u6392\u5217\u3002\u7531\u4e8e\u4e00\u4e2a\u6570\u7684\u5168\u6392\u5217\u5c31\u662f\u5176\u672c\u8eab\uff0c\u4ece\u800c\u5f97\u5230\u4ee5\u4e0a\u7ed3\u679c\u3002", "2\u3001 \u518d\u770b\u540e\u4e09\u4e2a\u65703, 4, 5\u3002\u5b83\u4eec\u7684\u5168\u6392\u5217\u4e3a3 4 5\u30013 5 4\u3001 4 3 5\u3001 4 5 3\u3001 5 3 4\u3001 5 4 3 \u516d\u7ec4\u6570\u3002\u5373\u4ee53\u5f00\u5934\u7684\u548c4,5\u7684\u5168\u6392\u5217\u7684\u7ec4\u5408\u3001\u4ee54\u5f00\u5934\u7684\u548c3,5\u7684\u5168\u6392\u5217\u7684\u7ec4\u5408\u548c\u4ee55\u5f00\u5934\u7684\u548c3,4\u7684\u5168\u6392\u5217\u7684\u7ec4\u5408.\u4ece\u800c\u53ef\u4ee5\u63a8\u65ad\uff0c\u8bbe\u4e00\u7ec4\u6570p = {r1, r2, r3, \u2026 ,rn}, \u5168\u6392\u5217\u4e3aperm(p)\uff0cpn = p \u2013 {rn}\u3002\u56e0\u6b64perm(p) = r1perm(p1), r2perm(p2), r3perm(p3), \u2026 , rnperm(pn)\u3002\u5f53n = 1\u65f6perm(p} = r1\u3002", "\u4e3a\u4e86\u66f4\u5bb9\u6613\u7406\u89e3\uff0c\u5c06\u6574\u7ec4\u6570\u4e2d\u7684\u6240\u6709\u7684\u6570\u5206\u522b\u4e0e\u7b2c\u4e00\u4e2a\u6570\u4ea4\u6362\uff0c\u8fd9\u6837\u5c31\u603b\u662f\u5728\u5904\u7406\u540en-1\u4e2a\u6570\u7684\u5168\u6392\u5217\u3002", "\u7b97\u6cd5\u5982\u4e0b\uff1a", "#include <stdio.h>", "int n = 0;", "void swap(int *a, int *b) // \u4ea4\u6362", "\n{", "\nint m;", "\nm = *a;", "\n*a = *b;", "\n*b = m;", "\n}", "void perm(int list[], int k, int m)", "\n{", "\nint i;", "\nif(k > m)", "\n{", "\nfor(i = 0; i <= m; i++)", "\nprintf(\u201c%d \u201c, list);", "\nprintf(\u201c\\n\u201d);", "\nn++;", "\n}", "\nelse", "\n{", "\nfor(i = k; i <= m; i++)", "\n{", "\nswap(&list[k], &list);", "\nperm(list, k + 1, m);", "\nswap(&list[k], &list);", "\n}", "\n}", "\n}", "int main()", "\n{", "\nint list[] = {1, 2, 3, 4, 5};", "\nperm(list, 0, 4);", "\nprintf(\u201ctotal:%d\\n\u201d, n);", "\nreturn 0;", "\n}"], "title": "c/c++\u7a0b\u5e8f\u5458\u5e94\u8058\u9762\u8bd5\u9898"},
{"contents": ["\u4eca\u5929\u9762\u8bd5\u4e00\u5bb6\u7f51\u7edc\u6e38\u620f\u516c\u53f8\u7684\u6e38\u620f\u5f00\u53d1\u5de5\u7a0b\u5e08\u7684\u7b14\u8bd5\u9898,\u6574\u4e2a\u6d4b\u8bd5\u65f6\u95f4\u4e09\u4e2a\u5c0f\u65f6,\u4e0d\u591f\u8fd8\u53ef\u4ee5\u52a0\u2026.\u6c57", "c++\u7a0b\u5e8f\u95ee\u9898\uff1a\uff08thinking in c++ not c\uff0c\u53ef\u4ee5\u4f7f\u7528stl\uff09", "\n1 \u8bf7\u5199\u4ee3\u7801\u6253\u5370100\u4e4b\u5185\u7684\u7d20\u6570\uff0c\u8bb2\u6c42\u6548\u7387\uff08\u8bf7\u505a\u4f60\u7684\u89e3\u6cd5\u7684\u6548\u7387\u5206\u6790\uff09", "\n2 \u6c42m,n\u7684\u6700\u5927\u516c\u7ea6\u6570", "\n3 \u8f93\u516510\u4e2a\u5b57\u7b26\u4e32\uff0c\u6253\u5370\u51fa\u5176\u4e2d\u91cd\u590d\u7684\u5b57\u7b26\u4e32\u4ee5\u53ca\u91cd\u590d\u7684\u6b21\u6570", "\n4 \u8bf7\u753b\u56fe\u4f8b\uff08UML\u6700\u597d\uff09\uff0c\u7ed9\u51fawindows\u4e0b\u7684\u6587\u4ef6\u76ee\u5f55\u7684\u8bbe\u8ba1\u6a21\u5f0f", "\n5 \u7528OO\u8868\u793a\u72fc\u5403\u7f8a\u7f8a\u5403\u8349", "\n\u95ee\u7b54\u9898\uff1a1 \u4ec0\u4e48\u662fsubversion\uff1f\u5b83\u4e0evss,cvs\u7684\u533a\u522b\u5728\u54ea\uff1f\u6216\u8005\u6709\u4ec0\u4e48\u4f18\u52bf\uff1f", "\n2 \u4ec0\u4e48\u662fwiki\uff0c\u5173\u4e8e\u7a0b\u5e8f\u9879\u76ee\u7684wiki\u4f60\u4f7f\u7528\u8fc7\u54ea\u4e9b\uff1fwiki\u5bf9\u4f60\u6709\u4ec0\u4e48\u5e2e\u52a9\u5417\uff1fwiki\u4e0e\u7a0b\u5e8f\u6587\u6321\u7684\u5dee\u522b\u5728\u54ea\uff1f", "\n3 \u4ec0\u4e48\u662ftdd\uff1f\u4f60\u4f7f\u7528\u8fc7\u5417\uff1ftdd\u7684\u5173\u952e\u5728\u54ea\uff1f\u8ddf\u4f20\u7edf\u7684\u5355\u5143\u6d4b\u8bd5\u76f8\u6bd4\uff0c\u6709\u4ec0\u4e48\u4f18\u8d8a\u6027\uff1f", "\n4 \u4ec0\u4e48\u662f\u5355\u5143\u6d4b\u8bd5\uff1f\u4f60\u7528\u8fc7\u54ea\u4e9b\u5355\u5143\u6d4b\u8bd5\u5de5\u5177\uff1f\u4ed6\u4eec\u7684\u533a\u522b\u548c\u597d\u5904\u5404\u6709\u54ea\u4e9b\uff1f\u4f60\u4e3b\u8981\u503e\u5411\u4e8e\u54ea\u4e00\u79cd\uff1f", "\n5 \u4ec0\u4e48\u662f\u7f16\u7a0b\u89c4\u8303\uff1f\u4f60\u503e\u5411\u4e8e\u4ec0\u4e48\u6837\u7684\u89c4\u8303\uff1f\u4ed6\u7684\u597d\u5904\u5728\u54ea\uff1f", "\n6 \u4ec0\u4e48\u662fmfc\uff1f\u4f60\u7ecf\u5e38\u4f7f\u7528\u90a3\u4e9bmfc\u7c7b\uff1f\u90a3\u4e48\u4e3a\u4ec0\u4e48\u5f88\u591a\u4eba\u4e0d\u4e3b\u5f20\u4f7f\u7528mfc\uff1f", "\n7 \u4ec0\u4e48\u662f\u5934\u6587\u4ef6\u4f9d\u8d56\uff1f\u4f60\u6ce8\u610f\u8fc7\u8fd9\u4e9b\u95ee\u9898\u5417\uff1f\u4f60\u6ce8\u610f\u8fc7\u7f16\u8bd1\u7684\u65f6\u95f4\u5417\uff1f\u4f60\u600e\u4e48\u6539\u8fdb\u7f16\u8bd1\u65f6\u95f4\uff1f", "\n8 \u4ec0\u4e48\u662f\u9762\u5411\u5bf9\u8c61\uff1f\u4f60\u5728\u54ea\u4e9b\u65b9\u9762\u7528\u8fc7\u9762\u5411\u5bf9\u8c61\uff1f\u5e26\u6765\u4e86\u4ec0\u4e48\u597d\u5904\uff1f\u53c8\u6709\u4ec0\u4e48\u5f0a\u7aef\uff1f", "\n9 \u4ec0\u4e48\u662f\u63a5\u53e3\u7f16\u7a0b.com\uff0c\u4ed6\u5e26\u6765\u4e86\u4ec0\u4e48\u597d\u5904\uff1f\u9002\u7528\u4e8e\u4ec0\u4e48\u5730\u65b9\uff1f", "\n10 \u4ec0\u4e48\u662f\u8bbe\u8ba1\u6a21\u5f0f\uff1f\u4f7f\u7528\u8bbe\u8ba1\u6a21\u5f0f\u6709\u4ec0\u4e48\u597d\u5904\uff1f\u5217\u4e3e\u4f60\u4f7f\u7528\u8fc7\u7684\u8bbe\u8ba1\u6a21\u5f0f\u77e5\u8bc6\uff1a", "\n1 \u4e00\u5bf8\u5c71\u6cb3\u4e00\u5bf8\u8840\uff0c___________\u3002\u662f_____\u8bf4\u7684\u3002", "\n2 \u6297\u6218\u5386\u65f6____\u5e74\uff0c\u6700\u591a\u767e\u5206\u4e4b____\u7684\u571f\u5730\u6ca6\u9677\uff0c\u519b\u6c11\u4f24\u4ea1____\u3002", "\u903b\u8f91\uff1a", "\n1 \u6751\u5b50\u4e2d\u670950\u4e2a\u4eba\uff0c\u6bcf\u4eba\u6709\u4e00\u6761\u72d7\u3002\u5728\u8fd950\u6761\u72d7\u4e2d\u6709\u75c5\u72d7\uff08\u8fd9\u79cd\u75c5\u4e0d\u4f1a\u4f20\u67d3\uff09\u3002\u4e8e\u662f\u4eba\u4eec\u5c31\u8981\u627e\u51fa\u75c5\u72d7\u3002\u6bcf\u4e2a\u4eba\u53ef\u4ee5\u89c2\u5bdf\u5176\u4ed6\u768449\u6761\u72d7\uff0c\u4ee5\u5224\u65ad\u5b83\u4eec\u662f\u5426\u751f\u75c5\uff0c\u53ea\u6709\u81ea\u5df1\u7684\u72d7\u4e0d\u80fd\u770b\u3002\u89c2\u5bdf\u540e\u5f97\u5230\u7684\u7ed3\u679c\u4e0d\u5f97\u4ea4\u6d41\uff0c\u4e5f\u4e0d\u80fd\u901a\u77e5\u75c5\u72d7\u7684\u4e3b\u4eba\u3002\u4e3b\u4eba\u4e00\u65e6\u63a8\u7b97\u51fa\u81ea\u5df1\u5bb6\u7684\u662f\u75c5\u72d7\u5c31\u8981\u67aa\u6bd9\u81ea\u5df1\u7684\u72d7\uff0c\u800c\u4e14\u6bcf\u4e2a\u4eba\u53ea\u6709\u6743\u5229\u67aa\u6bd9\u81ea\u5df1\u7684\u72d7\uff0c\u6ca1\u6709\u6743\u5229\u6253\u6b7b\u5176\u4ed6\u4eba\u7684\u72d7\u3002\u7b2c\u4e00\u5929\uff0c\u7b2c\u4e8c\u5929\u90fd\u6ca1\u6709\u67aa\u54cd\u3002\u5230\u4e86\u7b2c\u4e09\u5929\u4f20\u6765\u4e00\u9635\u67aa\u58f0\uff0c\u95ee\u6709\u51e0\u6761\u75c5\u72d7\uff0c\u5982\u4f55\u63a8\u7b97\u5f97\u51fa\uff1f", "\n2 P\u5148\u751f\u3001Q\u5148\u751f\u90fd\u5177\u6709\u8db3\u591f\u7684\u63a8\u7406\u80fd\u529b\u3002\u8fd9\u5929\uff0c\u4ed6\u4eec\u6b63\u5728\u63a5\u53d7\u63a8\u7406\u9762\u8bd5\u3002", "\n\u4ed6\u4eec\u77e5\u9053\u684c\u5b50\u7684\u62bd\u5c49\u91cc\u6709\u5982\u4e0b16\u5f20\u6251\u514b\u724c:", "\n\u7ea2\u6843 A\u3001Q\u30014", "\n\u9ed1\u6843 J\u30018\u30014\u30012\u30017\u30013", "\n\u8349\u82b1 K\u3001Q\u30015\u30014\u30016", "\n\u65b9\u5757 A\u30015", "\n\u7ea6\u7ff0\u6559\u6388\u4ece\u8fd916\u5f20\u724c\u4e2d\u6311\u51fa\u4e00\u5f20\u724c\u6765\uff0c\u5e76\u628a\u8fd9\u5f20\u724c\u7684\u70b9\u6570\u544a\u8bc9P\u5148\u751f\uff0c\u628a\u8fd9\u5f20\u724c\u7684\u82b1\u8272\u544a\u8bc9Q\u5148\u751f\u3002", "\n\u8fd9\u65f6\uff0c\u7ea6\u7ff0\u6559\u6388\u95eeP\u5148\u751f\u548cQ\u5148\u751f:\u4f60\u4eec\u80fd\u4ece\u5df2\u77e5\u7684\u70b9\u6570\u6216\u82b1\u8272\u4e2d\u63a8\u77e5\u8fd9\u5f20\u724c\u662f\u4ec0\u4e48\u724c\u5417?", "\nP\u5148\u751f:\u201c\u6211\u4e0d\u77e5\u9053\u8fd9\u5f20\u724c\u3002\u201d", "\nQ\u5148\u751f:\u201c\u6211\u77e5\u9053\u4f60\u4e0d\u77e5\u9053\u8fd9\u5f20\u724c\u3002\u201d", "\nP\u5148\u751f:\u201c\u73b0\u5728\u6211\u77e5\u9053\u8fd9\u5f20\u724c\u4e86\u3002\u201d", "\nQ\u5148\u751f:\u201c\u6211\u4e5f\u77e5\u9053\u4e86\u3002\u201d3 \u697c\u9ad8100\u5c42\uff0c\u4f60\u67092\u4e2a\u73bb\u7483\u7403\uff0c\u5728\u67d0\u4e00\u5c42n\u5c42\u6254\u4e0b\u73bb\u7483\u7403\u4f1a\u788e,\u800c\u4f4e\u4e8en\u5c42\u5219\u73bb\u7483\u7403\u4e0d\u4f1a\u788e\u3002", "\n1\uff09\u4f60\u4f1a\u9009\u62e9\u5728\u7b2c\u51e0\u5c42\u6254\u7b2c\u4e00\u4e2a\u73bb\u7483\u7403\u6765\u5f97\u5230\u6700\u5c11\u7684\u5c1d\u8bd5\u6b21\u6570\uff1f", "\n2\uff09\u5047\u5982\u6ca1\u6709\u7535\u68af\uff0c\u6bcf\u6b21\u90fd\u8981\u4e0a\u697c\u4e0b\u697c\uff0c\u4f60\u4f1a\u9009\u62e9\u7b2c\u51e0\u5c42\u6254\u7b2c\u4e00\u4e2a\u73bb\u7483\u7403\u6765\u5f97\u5230\u6700\u77ed\u7684\u8def\u7a0b\uff08\u722c\u4e0a\u722c\u4e0b\u7684\u697c\u5c42\uff09\uff1f"], "title": "\u9762\u8bd5\u4e00\u5bb6\u7f51\u7edc\u6e38\u620f\u516c\u53f8\u7684\u6e38\u620f\u5f00\u53d1\u5de5\u7a0b\u5e08\u7684\u7b14\u8bd5\u9898"},
{"contents": ["1.\u00a0Explain what does #define do.", "2.\u00a0Please describe the \u2018diamond problem\u2019 with regards to multiple inheritance in object oriented programming.", "3.\u00a0Difference between Vector and List?", "4. Given the root of a binary search tree, link all the nodes at the same level, by using an additional Node* level.", "5.\u00a0How do you find the max depth of a binary tree?", "6.\u00a0What is the difference between overriding and overloading?", "7.\u00a0If you had 5 red balls that contained 4 red balls and those red balls contained the original 5 red balls, then how many sets of sets of balls would I take to have a double set of red balls of varying sizes inside each next largest red ball?", "8.\u00a0Integer shift right-left, what happens by shifting to more than the integer bit size, etc."], "title": "C++\u82f1\u6587\u9762\u8bd5\u9898 \u9762\u8bd5\u5916\u4f01\u7684\u670b\u53cb\u53ef\u4ee5\u53c2\u8003\u4e00\u4e0b"},
{"contents": ["1.\u5b9a\u4e49\u4e00\u4e2a\u201d\u6570\u636e\u7c7b\u578b\u201d datatype\u7c7b\uff0c\u80fd\u5904\u7406\u5305\u542b\u5b57\u7b26\u578b\u3001\u6574\u578b\u3001\u6d6e\u70b9\u578b\u4e09\u79cd\u7c7b\u578b\u7684\u6570\u636e\uff0c\u7ed9\u51fa\u5176\u6784\u9020\u51fd\u6570\u3002\uff08\uff09\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n\u00a0", "\n", "\n", "\n", "\n", "\n", "\n", "\n\u00a0", "\n", "\n", "\n", "\n", "\n\u00a0", "\n", "\n", "\n", "\n\u00a0", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n\u00a0", "3.\u5728\u7a0b\u5e8f\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u6574\u578b\u53d8\u91cf\uff0c\u8d4b\u4ee51~100\u7684\u503c\uff0c\u8981\u6c42\u7528\u6237\u731c\u8fd9\u4e2a\u6570\uff0c\u6bd4\u8f83\u4e24\u4e2a\u6570\u7684\u5927\u5c0f\uff0c\u628a\u7ed3\u679c\u63d0\u793a\u7ed9\u7528\u6237\uff0c\u76f4\u5230\u731c\u5bf9\u4e3a\u6b62\u3002\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n\u00a0", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n\u00a0", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n\u00a0", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n\u00a0", "\n", "\n", "\n", "\n", "\n\u00a0", "}"], "title": "C++ \u6570\u636e\u7ed3\u6784\u3001\u7b97\u6cd5\u7b14\u8bd5\u9898"},
{"contents": ["2.\u6570\u636e\u7ed3\u6784\u5b9a\u4e49\uff1a\u901a\u9053\u548c\u5899\u7ec4\u6210\u7684\u8ff7\u5bab", "\n\u8fd9\u4e2a\u53ef\u4ee5\u5199\u4e00\u4e2a\u77e9\u9635\u4e86,\u6bd4\u5982 \u00a0 a[x][y]", "\n\u7136\u540e\u75280\u8868\u793a\u5899,1\u8868\u793a\u53ef\u4ee5\u901a\u8fc7", "\n3.\u4e00\u4e2a16\u00d716\u50cf\u7d20\u7684date\u753b\u5728\u4e00\u4e2a\u5750\u6807\u4e3ax,y\u7684\u5c4f\u5e55\u4e0a,\u5c4f\u5e55\u7684\u50cf\u7d20\u662fWscreen\u548cHscreen,\u51fd\u6570\u6539\u9519.", "4.\u5355\u94fe\u8868\u7ed3\u6784\u5b9a\u4e49\uff1a\u8282\u70b9\u5b58\u50a8\u4e00\u4e2a\u6574\u578b\u6570\uff0c\u7ed9\u4ee3\u7801\u3002\u5408\u5e76\u4e8c\u4e2a\u5df2\u7ecf\u6309\u7167\u8be5\u6574\u578b\u6570\u4ece\u5c0f\u5230\u5927\u6392\u597d\u5e8f\u7684\u94fe\u8868\uff0c\u5408\u5e76\u540e\u94fe\u8868\u4e5f\u662f\u540c\u6837\u6392\u5e8f\u597d\u7684\u3002", "\ntypedef \u00a0 struct \u00a0 p", "\n{", "\nint \u00a0 date;", "\nstruct \u00a0 p \u00a0 *next;", "\n}node;", "\nNode* \u00a0 uniteList(Node* \u00a0 first,Node*second)", "\n{", "\nNode*head=NULL;", "\nNode*cur=NULL;", "\nNode*temp=NULL;", "\nwhile \u00a0 (first&&second)", "\n{", "\nif \u00a0 (first-> key <second-> key)", "\n{", "\ntemp=first;", "\nfirst=first-> next;", "\n}", "\nelse", "\n{", "\ntemp=second;", "\nsecond=second-> next;", "\n}", "if \u00a0 (head==NULL)", "\n{", "\ncur=temp;", "\nhead=cur;", "\n}", "\nelse", "\n{", "\ncur-> next=temp;", "\ncur=temp", "\n}", "}", "\nif \u00a0 (first==NULL)", "\n{", "\ntemp=second;", "\n}", "\nelse", "\ntemp=first;", "\nwhile \u00a0 (temp)", "\n{", "\ncur-> next=temp;", "\ntemp=temp-> next;", "\n}", "\ncur-> next=NULL;", "\nreturn \u00a0 head;", "\n}", "\n5.\u8bbe\u8ba1\u4e00\u4e2a\u51fd\u6570,\u627e\u51fa\u6c34\u4ed9\u82b1\u6570,\u6c34\u4ed9\u82b1\u6570\u7684\u5b9a\u4e49153=1^3+5^3+3^3", "\n\u8c8c\u4f3c\u8981\u5199\u4e00\u4e2a\u53ef\u6269\u5c55\u7684\u6c34\u4ed9\u82b1\u6570\u7684\u7a0b\u5e8f\u4e86\u2026", "int\u00a0i = n;", "\nint\u00a0j = 0;", "\nwhile (i != 0) {", "\nint a = (i%10);", "\nj = j + (a*a*a);", "\ni = i/10;", "\n}", "\n6.\u8bbe\u8ba1\u4e00\u4e2a\u51fd\u6570,\u627e\u51fa\u4e00\u4e2a32\u4f4d\u7684\u6574\u5f62\u4e8c\u8fdb\u5236\u6570\u4e2d\u76841\u7684\u4e2a\u6570,\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528\u9010\u4f4d\u6bd4\u8f83.", "int\u00a0getBitCount(int\u00a0n) {", "\nint\u00a0count\u00a0=\u00a00;", "\nwhile\u00a0(n\u00a0!=\u00a00)\u00a0{", "\ncount+=(n\u00a0&\u00a01);", "\nn >>=1;", "\n}", "\nreturn\u00a0count;", "\n}", "7.\u56de\u6587,\u7528\u9012\u5f52\u7684\u67e5\u627e\u56de\u6587\u4e86,\u586b\u7a0b\u5e8f.", "8.\u5199\u51fa\u4e00\u4e2a\u51fd\u6570\u7528\u6765\u5224\u65ad\u4e00\u4e2a\u70b9\u5230\u4e00\u4e2a\u5e73\u9762\u7684\u5173\u7cfb\u3002\u7528\u4e00\u4e2a\u70b9\u548c\u6cd5\u5411\u91cf\u6765\u8868\u793a\u5e73\u9762\u3002\u8f93\u5165\u4e00\u4e2a\u70b9\u548c\u4e00\u4e2a\u9762\uff0c\u8fd4\u56de\u8be5\u70b9\u5728\u9762\u7684\u524d\u9762\uff0c\u540e\u9762\uff0c\u8fd8\u662f\u5728\u8fd9\u4e2a\u9762\u4e0a\u3002", "\nbool \u00a0 loc(Point \u00a0 pt,Plain \u00a0 pn)", "\n{", "\nbool \u00a0 res \u00a0 = \u00a0 static_cast <bool> (pn.getl*(po.getx-pn.geta)+pn.getm(po.gety-pn.getb)+pn.getn(po.getz-pn.getc))", "\nreturn \u00a0 res;", "\n}", "\u00a0", "\u00a0"], "title": "gamesloft C++\u9762\u8bd5\u9898\u76ee"},
{"contents": ["\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "1.", "\n\u00a0", "A.\u6808\u662f\u975e\u7ebf\u6027\u7ed3\u6784\n", "B.\u6808\u662f\u4e00\u79cd\u6811\u72b6\u7ed3\u6784\n", "C.\u6808\u5177\u6709\u5148\u8fdb\u5148\u51fa\u7684\u7279\u5f81\n", "D.\u6808\u5177\u6709\u540e\u8fdb\u5148\u51fa\u7684\u7279\u5f81\n", "\n\u00a0", "2.", "\n\u00a0", "A.\u8f93\u5165\u3001\u5904\u7406\u3001\u8f93\u51fa\n", "B.\u6811\u5f62\u3001\u7f51\u5f62\u3001\u73af\u5f62\u3000\n", "C.\u987a\u5e8f\u3001\u9009\u62e9\u3001\u5faa\u73af\n", "D.\u4e3b\u7a0b\u5e8f\u3001\u5b50\u7a0b\u5e8f\u3001\u51fd\u6570\n", "\n\u00a0", "3.", "\n\u00a0", "A.\u7b5b\u9009\u6cd5\n", "B.\u9012\u5f52\u6cd5\n", "C.\u5f52\u7eb3\u6cd5\n", "D.\u9010\u6b65\u6c42\u7cbe\u6cd5\n", "\n\t", "4.\u5982\u679c\u5bf9\u4e00\u4e2a\u5173\u7cfb\u5b9e\u65bd\u4e86\u4e00\u79cd\u5173\u7cfb\u8fd0\u7b97\u540e\u5f97\u5230\u4e86\u4e00\u4e2a\u65b0\u7684\u5173\u7cfb\uff0c\u800c\u4e14\u65b0\u7684\u5173\u7cfb\u4e2d\u5c5e\u6027\u4e2a\u6570\u5c11\u4e8e\u539f\u6765\u5173\u7cfb\u4e2d\u5c5e\u6027\u4e2a\u6570\uff0c\u8fd9\u8bf4\u660e\u6240\u5b9e\u65bd\u7684\u8fd0\u7b97\u5173\u7cfb\u662f\uff1a\n", "A.\u9009\u62e9\n", "B.\u6295\u5f71\n", "C.\u8fde\u63a5\n", "D.\u5e76\n", "\n\u00a0", "5.\u4e0b\u5217\u53d9\u8ff0\u4e2d\u6b63\u786e\u7684\u662f\uff1a\n", "\n\u00a0", "A.\u663e\u793a\u5668\u548c\u6253\u5370\u673a\u90fd\u662f\u8f93\u51fa\u8bbe\u5907\n", "B.\u663e\u793a\u5668\u53ea\u80fd\u663e\u793a\u5b57\u7b26\n", "C.\u901a\u5e38\u7684\u5f69\u8272\u663e\u793a\u5668\u90fd\u67097\u79cd\u989c\u8272\n", "D.\u6253\u5370\u673a\u53ea\u80fd\u6253\u5370\u5b57\u7b26\u548c\u8868\u683c\n", "\n\u00a0", "6.\u5fae\u578b\u8ba1\u7b97\u673a\u4e2d\u8fd0\u7b97\u5668\u7684\u4e3b\u8981\u529f\u80fd\u662f\u8fdb\u884c\uff1a\n", "\n\u00a0", "A.\u7b97\u672f\u8fd0\u7b97\n", "B.\u903b\u8f91\u8fd0\u7b97\n", "C.\u7b97\u672f\u548c\u903b\u8f91\u8fd0\u7b97\n", "D.\u521d\u7b49\u51fd\u6570\u8fd0\u7b97\n", "\n\u00a0", "7.COMMAND.COM\u662fDOS\u7cfb\u7edf\u7684\u6700\u5916\u5c42\u6a21\u5757\uff0c\u901a\u5e38\u79f0\u4e4b\u4e3a\uff1a\n", "\n\u00a0", "A.\u5f15\u5bfc\u7a0b\u5e8f\n", "B.\u8f93\u5165\u8f93\u51fa\u7cfb\u7edf\n", "C.\u547d\u4ee4\u5904\u7406\u7cfb\u7edf\n", "D.\u6587\u4ef6\u7ba1\u7406\u7cfb\u7edf\n", "\n\u00a0", "8\u3001\u7535\u5b50\u90ae\u4ef6\u662f\uff1a\n", "\n\u00a0", "A.\u7f51\u7edc\u4fe1\u606f\u68c0\u7d22\u670d\u52a1\n", "B.\u901a\u8fc7Web\u7f51\u9875\u53d1\u5e03\u7684\u516c\u544a\u4fe1\u606f\n", "C.\u901a\u8fc7\u7f51\u7edc\u5b9e\u65f6\u4ea4\u4e92\u7684\u4fe1\u606f\u4f20\u9012\u65b9\u5f0f\n", "D.\u4e00\u79cd\u5229\u7528\u7f51\u7edc\u4ea4\u6362\u4fe1\u606f\u7684\u975e\u4ea4\u4e92\u5f0f\u670d\u52a1\n", "\n\u00a0", "9.\u4e0e\u5341\u8fdb\u5236\u6570255\u76f8\u7b49\u7684\u4e8c\u8fdb\u5236\u6570\u662f\uff1a\n", "\n\u00a0", "A.11101110\n", "B.11111110\n", "C.10000000\n", "D.11111111\n", "\n\u00a0", "10.\u4e0b\u5217\u53d9\u8ff0\u4e2d\u6b63\u786e\u7684\u662f\uff1a\n", "\n\u00a0", "A.\u6307\u4ee4\u7531\u64cd\u4f5c\u6570\u548c\u64cd\u4f5c\u7801\u4e24\u90e8\u5206\u7ec4\u6210\n", "B.\u5e38\u7528\u53c2\u6570xxMB\u8868\u793a\u8ba1\u7b97\u673a\u7684\u901f\u5ea6\n", "C.\u8ba1\u7b97\u673a\u7684\u4e00\u4e2a\u5b57\u957f\u603b\u662f\u7b49\u4e8e\u4e24\u4e2a\u5b57\u8282\n", "D.\u8ba1\u7b97\u673a\u8bed\u8a00\u662f\u5b8c\u6210\u67d0\u4e00\u4efb\u52a1\u7684\u6307\u4ee4\u96c6\n", "\n\u00a0", "11.\u8ba1\u7b97\u673a\u7684\u5185\u5b58\u50a8\u5668\u6bd4\u5916\u5b58\u50a8\u5668\uff1a\n", "\n\u00a0", "A.\u4ef7\u683c\u4fbf\u5b9c\n", "B.\u5b58\u50a8\u5bb9\u91cf\u5927\n", "C.\u8bfb\u5199\u901f\u5ea6\u5feb\n", "D.\u8bfb\u5199\u901f\u5ea6\u6162\n", "\n\u00a0", "12.\u5b57\u957f\u4e3a32\u4f4d\u7684\u8ba1\u7b97\u673a\u662f\u6307\uff1a\n", "\n\u00a0", "A.\u8be5\u8ba1\u7b97\u673a\u4e2d\u7684CPU\u670932\u4e2a\u5bc4\u5b58\u5668\n", "B.\u8be5\u8ba1\u7b97\u673a\u80fd\u591f\u5904\u7406\u7684\u6700\u5927\u6570\u4e0d\u8d85\u8fc7232\n", "C.\u8be5\u8ba1\u7b97\u673a\u6bcf\u79d2\u949f\u6240\u80fd\u6267\u884c\u7684\u6307\u4ee4\u6761\u6570\u4e3a32MIPS\n", "D.\u8be5\u8ba1\u7b97\u673a\u4e2d\u7684CPU\u53ef\u4ee5\u540c\u65f6\u5904\u740632\u4f4d\u7684\u4e8c\u8fdb\u5236\u6570\n", "\n\u00a0", "13.\u5728\u5fae\u673a\u7cfb\u7edf\u4e2d\uff0c\u5bf9\u8f93\u5165\u8f93\u51fa\u8bbe\u5907\u8fdb\u884c\u7ba1\u7406\u7684\u57fa\u672c\u7a0b\u5e8f\u6a21\u5757(BIOS)\u5b58\u653e\u5728\uff1a\n", "\n\u00a0", "A.RAM\u4e2d\n", "B.ROM\u4e2d\n", "C.\u786c\u76d8\u4e2d\n", "D.\u5bc4\u5b58\u5668\u4e2d\n", "\n\u00a0", "14.\u5fae\u673a\u663e\u793a\u5668\u4e00\u822c\u6709\u4e24\u7ec4\u5f15\u7ebf\uff0c\u5b83\u4eec\u662f\uff1a\n", "\n\u00a0", "A.\u7535\u6e90\u7ebf\u4e0e\u4fe1\u53f7\u7ebf\n", "B.\u7535\u6e90\u7ebf\u4e0e\u63a7\u5236\u7ebf\n", "C.\u7535\u6e90\u7ebf\u4e0e\u5730\u7ebf\n", "D.\u63a7\u5236\u7ebf\u4e0e\u5730\u7ebf\n", "\n\u00a0", "15.486PC\u673a\u4e3b\u677f\u4e0a\u4e00\u822c\u5e26\u6709\u9ad8\u901f\u7f13\u51b2\u5b58\u50a8\u5668Cache\uff0c\u5b83\u662f()\u4e4b\u95f4\u7684\u7f13\u5b58\u3002\n", "\n\u00a0", "A.CPU\u4e0e\u8f85\u52a9\u5b58\u50a8\u5668\n", "B.CPU\u4e0e\u4e3b\u5b58\u50a8\u5668\n", "C.\u8f6f\u76d8\u4e0e\u5185\u5b58\n", "D.\u786c\u76d8\u4e0e\u5185\u5b58\n", "\n\u00a0", "16.\u76ee\u524d\u56e0\u7279\u7f51(Internet)\u5c1a\u672a\u63d0\u4f9b\u7684\u670d\u52a1\u662f\uff1a\n", "\n\u00a0", "A.\u7535\u5b50\u90ae\u4ef6\n", "B.\u6587\u4ef6\u4f20\u9001\n", "C.\u8fdc\u7a0b\u4f7f\u7528\u8ba1\u7b97\u673a\n", "D.\u7535\u89c6\u5e7f\u64ad\n", "\n\u00a0", "17.IEEE 802.3\u7684\u7269\u7406\u5c42\u534f\u8bae10 BASE-T\u89c4\u5b9a\u4ece\u7f51\u5361\u5230\u96c6\u7ebf\u5668\u7684\u6700\u5927\u8ddd\u79bb\u4e3a\uff1a\n", "\n\u00a0", "A.100m\n", "B.185m\n", "C.360m\n", "D.500m\n", "\n\u00a0", "18.\u8868\u793a\u201d\u5728\u4f7f\u7528x\u4e4b\u524d\uff0c\u5148\u4f7fx\u7684\u503c\u52a01\u2033\u7684\u6b63\u786e\u65b9\u5f0f\u662f\uff1a\n", "\n\u00a0", "A.++x\n", "B.x++\n", "C.+x\n", "D.+x+\n", "\n\u00a0", "19.\u82e5\u6709\u5b9a\u4e49\uff1aint a=8,b=5,c;,\u6267\u884c\u8bed\u53e5c=a/b+0.4;\u540e\uff0cc\u7684\u503c\u4e3a\uff1a\n", "\n\u00a0", "A.1.4\n", "B.1\n", "C.2.0\n", "D.2\n", "\n\u00a0", "20.\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff1a\n", "main()\n", "{int\u00a0a=5,b=4,c=6,d;\n", "printf(\u2033%d\\n\u2033,d=a\uff1eb? (a\uff1ec? a:c):(b));\n", "}\n", "\n\u00a0", "A.5\n", "B.4\n", "C.6\n", "D.\u4e0d\u786e\u5b9a\n", "\n\u00a0", "21.\u5728\u4e0b\u5217\u5b57\u7b26\u5e8f\u5217\u4e2d\uff0c\u4e0d\u53ef\u7528\u505aC\u8bed\u8a00\u6807\u8bc6\u7b26\u7684\u662f\uff1a\n", "\n\u00a0", "A.student_num\n", "B.class\n", "C.#88\n", "D.month_12\n", "\n\u00a0", "22.\u4e0b\u5217\u7528\u4e8eprintf\u51fd\u6570\u7684\u63a7\u5236\u5b57\u7b26\u5e38\u91cf\u4e2d\uff0c\u4ee3\u8868\u201d\u6a2a\u5411\u8df3\u683c\u201d\u7684\u5b57\u7b26\u5e38\u91cf\u662f\uff1a\n", "\n\u00a0", "A.\\b\n", "B.\\t\n", "C.\\r\n", "D.\\f\n", "\n\u00a0", "23.\u8bbex\u7684\u503c\u4e3a5\uff0c\u5219\u8868\u8fbe\u5f0f(++x)+(++x)+(++x)\u7684\u503c\u662f\uff1a\n", "\n\u00a0", "A.24\n", "B.20\n", "C.15\n", "D.25\n", "\n\u00a0", "24.\u4e0b\u5217\u53d9\u8ff0\u4e2d\uff0c\u6b63\u786e\u7684\u4e00\u6761\u662f\uff1a\n", "\n\u00a0", "A.\u8bed\u53e5\u201dgoto 12;\u201d\u662f\u5408\u6cd5\u7684\n", "B.for(;;)\u8bed\u53e5\u76f8\u5f53\u4e8ewhile(1)\u8bed\u53e5\n", "C.if(\u8868\u8fbe\u5f0f)\u8bed\u53e5\u4e2d\uff0c\u8868\u8fbe\u5f0f\u7684\u7c7b\u578b\u53ea\u9650\u4e8e\u903b\u8f91\u8868\u8fbe\u5f0f\n", "D.break\u8bed\u53e5\u53ef\u7528\u4e8e\u7a0b\u5e8f\u7684\u4efb\u4f55\u5730\u65b9\uff0c\u4ee5\u7ec8\u6b62\u7a0b\u5e8f\u7684\u6267\u884c\n", "\n\u00a0", "25.\u4e0b\u5217\u8bed\u53e5\u6267\u884c\u540e\u7684\u7ed3\u679c\u662f\uff1a\n", "y=5;p=&y;x=*p++;\n", "\n\u00a0", "A.x=5,y=5\n", "B.x=5,y=6\n", "C.x=6,y=5\n", "D.x=6,y=6\n", "\n\u00a0", "26.\u4e0b\u8ff0\u7a0b\u5e8f\u6bb5\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff1a\n", "int\u00a0x=10;\n", "int\u00a0y=x++;\n", "printf(\u2033%d,%d\u2033,(x++,y),y++);\n", "\n\u00a0", "A.11,10\n", "B.11\uff0c11\n", "C.10\uff0c10\n", "D.10\uff0c11\n", "\n\u00a0", "27.\u5982\u679c\u6587\u4ef61\u5305\u542b\u6587\u4ef62\uff0c\u6587\u4ef62\u4e2d\u8981\u7528\u5230\u6587\u4ef63\u7684\u5185\u5bb9\uff0c\u800c\u6587\u4ef63\u4e2d\u8981\u7528\u5230\u6587\u4ef64\u7684\u5185\u5bb9\uff0c\u5219\u53ef\u5728\u6587\u4ef61\u4e2d\u7528\u4e09\u4e2a#include\u547d\u4ee4\u5206\u522b\u5305\u542b\u6587\u4ef62\u3001\u6587\u4ef63\u548c\u6587\u4ef64\u3002\u5728\u4e0b\u5217\u5173\u4e8e\u8fd9\u51e0\u4e2a\u6587\u4ef6\u5305\u542b\u987a\u5e8f\u7684\u53d9\u8ff0\u4e2d\uff0c\u6b63\u786e\u7684\u4e00\u6761\u662f\uff1a\n", "\n\u00a0", "A.\u6587\u4ef64\u5e94\u51fa\u73b0\u5728\u6587\u4ef63\u4e4b\u524d\uff0c\u6587\u4ef63\u5e94\u51fa\u73b0\u5728\u6587\u4ef62\u4e4b\u524d\n", "B.\u6587\u4ef62\u5e94\u51fa\u73b0\u5728\u6587\u4ef63\u4e4b\u524d\uff0c\u6587\u4ef63\u5e94\u51fa\u73b0\u5728\u6587\u4ef64\u4e4b\u524d\n", "C.\u6587\u4ef63\u5e94\u51fa\u73b0\u5728\u6587\u4ef62\u4e4b\u524d\uff0c\u6587\u4ef62\u5e94\u51fa\u73b0\u5728\u6587\u4ef64\u4e4b\u524d\n", "D.\u51fa\u73b0\u7684\u5148\u540e\u987a\u5e8f\u53ef\u4ee5\u4efb\u610f\n", "\n\u00a0", "28.\u5728\u4e0b\u5217\u53d9\u8ff0\u4e2d\uff0c\u6b63\u786e\u7684\u4e00\u6761\u662f\uff1a\n", "\n\u00a0", "A.\u8bed\u53e5\u201dint *pt;\u201d\u4e2d\u7684*pt\u662f\u6307\u9488\u53d8\u91cf\u540d\n", "B.\u8bed\u53e5\u201dint *p=a;\u201d\u7b49\u4ef7\u4e8e\u201dint *p;p=&a[0];\u201d\n", "C.\u8fd0\u7b97\u7b26*\u548c&\u90fd\u662f\u53d6\u53d8\u91cf\u5730\u5740\u7684\u8fd0\u7b97\u7b26\n", "D.\u5df2\u77e5\u6307\u9488\u53d8\u91cfp\u6307\u5411\u53d8\u91cfa\uff0c\u5219a\u548c*p\u503c\u76f8\u540c\uff0c\u90fd\u662f\u53d8\u91cfa\u7684\u503c\n", "\n\u00a0", "29.\u5728\u4e0b\u5217\u53d9\u8ff0\u4e2d\uff0c\u9519\u8bef\u7684\u4e00\u6761\u662f\uff1a\n", "\n\u00a0", "A.scanf()\u51fd\u6570\u53ef\u4ee5\u7528\u6765\u8f93\u5165\u4efb\u4f55\u7c7b\u578b\u7684\u591a\u4e2a\u6570\u636e\n", "B.\u6570\u7ec4\u540d\u4f5c\u51fd\u6570\u53c2\u6570\u65f6\uff0c\u4e5f\u91c7\u7528\u201d\u503c\u4f20\u9001\u201d\u65b9\u5f0f\n", "C.\u5982\u679c\u5f62\u53c2\u53d1\u751f\u6539\u53d8\uff0c\u4e0d\u4f1a\u6539\u53d8\u4e3b\u8c03\u51fd\u6570\u7684\u5b9e\u53c2\u503c\n", "D.\u51fd\u6570\u7684\u5b9e\u53c2\u4e0e\u5f62\u53c2\u7684\u7c7b\u578b\u5e94\u4e00\u81f4\n", "\n\u00a0", "30.\u5728\u4e0b\u5217\u53d9\u8ff0\u4e2d\uff0c\u9519\u8bef\u7684\u4e00\u6761\u662f\uff1a\n", "\n\u00a0", "A.\u5173\u7cfb\u8868\u8fbe\u5f0f\u7684\u503c\u662f\u4e00\u4e2a\u903b\u8f91\u503c\uff0c\u5373\u201d\u771f\u201d\u6216\u201d\u5047\u201d\uff0c\u53ef\u8d4b\u7ed9\u4e00\u4e2a\u903b\u8f91\u53d8\u91cf\n", "B.\u6570\u7ec4\u5fc5\u987b\u5148\u5b9a\u4e49\uff0c\u540e\u4f7f\u7528\uff0c\u5e76\u4e14\u53ea\u80fd\u9010\u4e2a\u5f15\u7528\u6570\u7ec4\u5143\u7d20\uff0c\u800c\u4e0d\u80fd\u4e00\u6b21\u5f15\u7528\u6574\u4e2a\u6570\u7ec4\n", "C.\u5728C\u8bed\u8a00\u4e2d\uff0c\u5224\u65ad\u4e00\u4e2a\u91cf\u662f\u5426\u4e3a\u201d\u771f\u201d\u65f6\uff0c\u75280\u4ee3\u8868\u201d\u5047\u201d\uff0c1\u4ee3\u8868\u201d\u771f\u201d\n", "D.\u5c06\u5b57\u7b26\u4e32\u5e38\u91cf\u8d4b\u7ed9\u5b57\u7b26\u6570\u7ec4\u65f6\uff0c\u5fc5\u987b\u5728\u5b57\u7b26\u4e32\u540e\u52a0\u2032{checkhtml}\u2032\uff0c\u8868\u793a\u5b57\u7b26\u7ed3\u675f\n", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\uff11.\u5bf9\u4e8e\u8f93\u5165\u4e3aN\u4e2a\u6570\u8fdb\u884c\u5feb\u901f\u6392\u5e8f\u7b97\u6cd5\u7684\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u662f\uff08\u3000\uff09\n", "\n\u00a0", ".\u5728\u9762\u5411\u5bf9\u8c61\u65b9\u6cd5\u5b66\u4e2d\uff0c\u76f4\u63a5\u53cd\u6620\u4e86\u7528\u6237\u5bf9\u76ee\u6807\u7cfb\u7edf\u7684\u8981\u6c42\u7684\u6a21\u578b\u662f\uff08\u3000\uff09\n", "\n\u00a0", ".\u8f6f\u4ef6\u6d4b\u8bd5\u65b9\u6cd5\u4e2d\uff0c\u9ed1\u76d2\u6d4b\u8bd5\u4e2a\u767d\u76d2\u6d4b\u8bd5\u6cd5\u662f\u5e38\u7528\u7684\u65b9\u6cd5\uff0c\u5176\u4e2d\u9ed1\u76d2\u6d4b\u8bd5\u6cd5\u4e3b\u8981\u662f\u7528\u4e8e\u6d4b\u8bd5\uff08\u3000\uff09\n", "\n\u00a0", ".\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\u4e2d\u5b58\u50a8\u4e0e\u7ba1\u7406\u6570\u636e\u7684\u57fa\u672c\u5f62\u5f0f\u662f\uff08\u3000\uff09\n", "\n\u00a0", "5.\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\u5e38\u89c1\u7684\u6570\u636e\u6a21\u578b\u6709\u5c42\u6b21\u3001\u7f51\u72b6\u548c\uff08\u3000\uff09\u4e09\u79cd\u3002\n", "\n\u00a0", "6.\u8f6f\u78c1\u76d8\u6700\u5916\u8fb9\u7684\u78c1\u9053\u6570\u662f\uff08\u3000\uff09\u53f7\u78c1\u9053\u3002\n", "\n\u00a0", "7.\u80fd\u628a\u8ba1\u7b97\u673a\u5904\u7406\u597d\u7684\u7ed3\u679c\u8f6c\u6362\u6210\u4e3a\u6587\u672c\u3001\u56fe\u5f62\u3001\u56fe\u50cf\u6216\u58f0\u97f3\u7b49\u5f62\u5f0f\u5e76\u8f93\u9001\u51fa\u6765\u7684\u8bbe\u5907\u79f0\u4e3a\uff08\u3000\uff09\u8bbe\u5907\u3002\n", "\n\u00a0", "8.\u8ba1\u7b97\u673a\u4e2d\u7f51\u7edc\u901a\u4fe1\u534f\u8baeIP\u662f\uff08\u3000\uff09\u3002\n", "\n\u00a0", "9.\u5341\u8fdb\u5236\u657053\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236\u6570\u4e3a\uff08\u3000\uff09\u3002\n", "\n\u00a0", "10.\u4e70\u6765\u4e00\u5f20\u65b0\u76d8\u540e\uff0c\u5728\u5b58\u5165\u6587\u4ef6\u524d\uff0c\u5fc5\u987b\u8fdb\u884c\uff08\u3000\uff09\u5904\u7406\u3002\n", "\n\u00a0", "\n\u00a0", "1\uff0e\u00a0\u8bf4\u660e\u51fd\u6570\u539f\u578b\u65f6\u4e0d\u9700\u8981\u6307\u660e\u6bcf\u4e2a\u51fd\u6570\u53c2\u6570\u7684\u540d\u5b57\uff0c\u53ea\u9700\u8981\u8bf4\u660e\u6bcf\u4e2a\u53c2\u6570\u7684\u7c7b\u578b\u548c\u8fd4\u56de\u503c\u7c7b\u578b\u5c31\u53ef\u4ee5\u4e86\u3002\n", "2\uff0e\u00a0\u6240\u6709\u7684\u8868\u8fbe\u5f0f\u90fd\u6709\u503c\u3002\n", "3\uff0e\u00a0\u7a0b\u5e8f\u7684\u7f16\u8bd1\u662f\u4ee5\u6587\u4ef6\u4e3a\u5355\u4f4d\u7684\uff0c\u56e0\u6b64\u5c06\u7a0b\u5e8f\u5206\u5230\u591a\u4e2a\u6587\u4ef6\u4e2d\u53ef\u4ee5\u51cf\u5c11\u6bcf\u6b21\u5bf9\u7a0b\u5e8f\u4fee\u6539\u6240\u5e26\u6765\u7684\u7f16\u8bd1\u5de5\u4f5c\u91cf\u3002\n", "4\uff0e\u00a0\u7c7b\u7684\u9759\u6001\u6570\u636e\u6210\u5458\u9700\u8981\u5728\u5b9a\u4e49\u6bcf\u4e2a\u7c7b\u7684\u5bf9\u8c61\u65f6\u8fdb\u884c\u521d\u59cb\u5316\u3002\n", "5\uff0e\u00a0\u57fa\u7c7b\u4e2d\u88ab\u8bf4\u660e\u4e3aprotected\u548cprivate\u7684\u6210\u5458\u53ea\u80fd\u88ab\u5176\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u51fd\u6570\u8bbf\u95ee\uff0c\u4e0d\u80fd\u88ab\u5176\u5b83\u7684\u51fd\u6570\u8bbf\u95ee\u3002\n", "6\uff0e\u00a0\u5f53\u5c06\u4e00\u4e2a\u7c7bS\u5b9a\u4e49\u4e3a\u53e6\u4e00\u4e2a\u7c7bA\u7684\u53cb\u5143\u7c7b\u65f6\uff0c\u7c7bS\u7684\u6240\u6709\u6210\u5458\u51fd\u6570\u90fd\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u7c7bA\u7684\u6240\u6709\u6210\u5458\u3002\n", "7\uff0e\u00a0\u5f53\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u6570\u7ec4\u7c7b\u578b\u7684\uff0c\u4f20\u9012\u7684\u662f\u6570\u7ec4\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u5730\u5740\u3002\n", "8\uff0e\u00a0\u5982\u679c\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u51fd\u6570\u7684\u539f\u578b\u4e0e\u57fa\u7c7b\u4e2d\u88ab\u5b9a\u4e49\u4e3a\u865a\u51fd\u6570\u7684\u6210\u5458\u51fd\u6570\u539f\u578b\u76f8\u540c\uff0c\u90a3\u4e48\uff0c\u8fd9\u4e2a\u51fd\u6570\u81ea\u52a8\u7ee7\u627f\u57fa\u7c7b\u4e2d\u865a\u51fd\u6570\u7684\u7279\u6027\u3002\n", "9\uff0e\u00a0\u5b57\u7b26\u4e32\u2019hello,world\u201d\u5728\u5185\u5b58\u4e2d\u5b58\u653e\u65f6\uff0c\u5360\u752811\u4e2a\u5b57\u8282\u7684\u7a7a\u95f4\u3002\n", "10\uff0e\u7528new\u52a8\u6001\u7533\u8bf7\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u5fc5\u987b\u7528delete\u6765\u91ca\u653e \u3002\n", "\n\u00a0", "1\u3001\u5bf9\u4e00\u6279\u7f16\u53f7\u4e3a1~100\u5168\u90e8\u5f00\u5173\u671d\u4e0a\uff08\u5f00\uff09\u7684\u706f\u8fdb\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\u51e1\u662f1\u7684\u500d\u6570\u53cd\u65b9\u5411\u62e8\u4e00\u6b21\u5f00\u5173\uff1b2\u7684\u500d\u6570\u53cd\u65b9\u5411\u53c8\u62e8\u4e00\u6b21\u5f00\u5173\uff1b3\u7684\u500d\u6570\u53cd\u65b9\u5411\u53c8\u62e8\u4e00\u6b21\u5f00\u5173\u3002\u3002\u3002\u3002\u3002\u3002\n", "\u95ee\uff1a\u6700\u540e\u4e3a\u5173\u7184\u72b6\u6001\u7684\u706f\u7684\u7f16\u53f7\u3002\n", "\u3000\u3000", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\t", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0"], "title": "C++\u6280\u80fd\u6d4b\u8bd5\u8bd5\u5377\u4e00\u53ca\u7b54\u6848"},
{"contents": ["\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "2\uff0e\n", "void main()\n", "{\n", "\u00a0\u00a0\u00a0\u00a0int a[3][3] =\n", "\u00a0\u00a0\u00a0\u00a0{\n", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{1, 1},\n", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{1, 1},\n", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{1, 1}\n", "\u00a0\u00a0\u00a0\u00a0};\n", "\n\u00a0", "\u00a0\u00a0\u00a0\u00a0for (int i = 0; i<3; i++)\n", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0for (int j=0; j<3; j++)\n", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0a[j][i] = i*j;\n", "}"], "title": "C++\u7a0b\u5e8f\u5458\u5e94\u8058\u6d4b\u8bd5\u9898\u76ee"},
{"contents": ["\u00a0", "\n\u00a0", "1\uff0e\u00a0 \u8bf4\u660e\u51fd\u6570\u539f\u578b\u65f6\u4e0d\u9700\u8981\u6307\u660e\u6bcf\u4e2a\u51fd\u6570\u53c2\u6570\u7684\u540d\u5b57\uff0c\u53ea\u9700\u8981\u8bf4\u660e\u6bcf\u4e2a\u53c2\u6570\u7684\u7c7b\u578b\u548c\u8fd4\u56de\u503c\u7c7b\u578b\u5c31\u53ef\u4ee5\u4e86\u3002\n", "2\uff0e\u00a0 \u6240\u6709\u7684\u8868\u8fbe\u5f0f\u90fd\u6709\u503c\u3002\n", "3\uff0e\u00a0 \u7a0b\u5e8f\u7684\u7f16\u8bd1\u662f\u4ee5\u6587\u4ef6\u4e3a\u5355\u4f4d\u7684\uff0c\u56e0\u6b64\u5c06\u7a0b\u5e8f\u5206\u5230\u591a\u4e2a\u6587\u4ef6\u4e2d\u53ef\u4ee5\u51cf\u5c11\u6bcf\u6b21\u5bf9\u7a0b\u5e8f\u4fee\u6539\u6240\u5e26\u6765\u7684\u7f16\u8bd1\u5de5\u4f5c\u91cf\u3002\n", "4\uff0e\u00a0 \u7c7b\u7684\u9759\u6001\u6570\u636e\u6210\u5458\u9700\u8981\u5728\u5b9a\u4e49\u6bcf\u4e2a\u7c7b\u7684\u5bf9\u8c61\u65f6\u8fdb\u884c\u521d\u59cb\u5316\u3002\n", "5\uff0e\u00a0 \u57fa\u7c7b\u4e2d\u88ab\u8bf4\u660e\u4e3aprotected\u548cprivate\u7684\u6210\u5458\u53ea\u80fd\u88ab\u5176\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u51fd\u6570\u8bbf\u95ee\uff0c\u4e0d\u80fd\u88ab\u5176\u5b83\u7684\u51fd\u6570\u8bbf\u95ee\u3002\n", "6\uff0e\u00a0 \u5f53\u5c06\u4e00\u4e2a\u7c7bS\u5b9a\u4e49\u4e3a\u53e6\u4e00\u4e2a\u7c7bA\u7684\u53cb\u5143\u7c7b\u65f6\uff0c\u7c7bS\u7684\u6240\u6709\u6210\u5458\u51fd\u6570\u90fd\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u7c7bA\u7684\u6240\u6709\u6210\u5458\u3002\n", "7\uff0e\u00a0 \u5f53\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u6570\u7ec4\u7c7b\u578b\u7684\uff0c\u4f20\u9012\u7684\u662f\u6570\u7ec4\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u5730\u5740\u3002\n", "8\uff0e\u00a0 \u5982\u679c\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u51fd\u6570\u7684\u539f\u578b\u4e0e\u57fa\u7c7b\u4e2d\u88ab\u5b9a\u4e49\u4e3a\u865a\u51fd\u6570\u7684\u6210\u5458\u51fd\u6570\u539f\u578b\u76f8\u540c\uff0c\u90a3\u4e48\uff0c\u8fd9\u4e2a\u51fd\u6570\u81ea\u52a8\u7ee7\u627f\u57fa\u7c7b\u4e2d\u865a\u51fd\u6570\u7684\u7279\u6027\u3002\n", "9\uff0e\u00a0 \u5b57\u7b26\u4e32\u2019hello,world\u201d\u5728\u5185\u5b58\u4e2d\u5b58\u653e\u65f6\uff0c\u5360\u752811\u4e2a\u5b57\u8282\u7684\u7a7a\u95f4\u3002\n", "10\uff0e\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u7528new\u52a8\u6001\u7533\u8bf7\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u5fc5\u987b\u7528delete\u6765\u91ca\u653e \u3002\n", "\n\u00a0", "\u4e8c\u3001", "\n\t", "1\uff0e\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u627e\u51fa\u7ed9\u5b9a\u5b57\u7b26\u4e32\u4e2d\u6570\u5b57\u5b57\u7b26\uff08\u5373\u20190\u2032\u2014\u20199\u2032\u8fd910\u4e2a\u6570\u5b57\uff09\u7684\u4e2a\u6570\uff08\u5982\u5b57\u7b26\u4e32\u201dolympic2000\u2033\u4e2d\u6570\u5b57\u5b57\u7b26\u7684\u4e2a\u6570\u4e3a4\u4e2a\u3002\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a\n", "   int CalcDigital(char *str);\n", "  \u51fd\u6570\u53c2\u6570\uff1astr\u4e3a\u6240\u8981\u5904\u7406\u7684\u5b57\u7b26\u4e32\u3002\n", "  \u51fd\u6570\u8fd4\u56de\u503c\uff1a\u6240\u7ed9\u5b57\u7b26\u4e32\u4e2d\u6570\u5b57\u5b57\u7b26\u7684\u4e2a\u6570\u3002\n", "  int CalcDigital(char *str)\n", "  {\n", "\n\u00a0", "\u00a0", "\n\u00a0", "\u00a0", "\n\u00a0", "  }\n", "2\uff0e\u7528\u9012\u5f52\u51fd\u6570\u5b8c\u6210\u4ee5\u4e0b\u8fd0\u7b97\uff1a\n", "sum(n)=1", "+2", "+\u2026+n", "\n\t", "\u51fd\u6570\u7684\u539f\u578b\u5982\u4e0b\uff1a\n", "    long sum(int n);\n", "\u8be5\u51fd\u6570\u5b8c\u62101", "+2", "+\u2026+n", "\u7684\u8fd0\u7b97\uff0c\u5e76\u8fd4\u56de\u8fd0\u7b97\u7ed3\u679c\uff0c\u5176\u4e2dn>0\u3002\n", "\u63d0\u793a\uff1a\u4f60\u53ef\u4ee5\u4f7f\u7528\u9012\u5f52\u8868\u8fbe\u5f0f\uff1asum(n)=sum(n-1)+n", "\n\t", "long sum(int n)\n", "{\n", "\u00a0", "\n\u00a0", "\u00a0", "\n\u00a0", "}\n", "\u00a0", "\n\u00a0", "  \uff08", "\uff09\u4e0b\u9762\u7684\u6587\u4ef6queue.h\u662f\u4e00\u4e2a\u961f\u5217\u7c7b\u6a21\u677fQueue\u7684\u5b8c\u6574\u5b9e\u73b0\u3002\u5728\u8fd9\u4e2a\u6587\u4ef6\u4e2d\u9996\u5148\u5b9a\u4e49\u4e86\u4e00\u4e2a\u961f\u5217\u5143\u7d20\u7c7b\u6a21\u677fQueueItem\uff0c\u7136\u540e\u5728\u8fd9\u4e2a\u7c7b\u7684\u57fa\u7840\u4e0a\u5b9a\u4e49\u4e86\u961f\u5217\u7c7b\u6a21\u677fQueue\u3002\u5728Queue\u4e2d\u4f7f\u7528\u94fe\u8868\u5b58\u653e\u961f\u5217\u7684\u5404\u4e2a\u5143\u7d20\uff0cfront\u6307\u9488\u6307\u5411\u94fe\u8868\u7684\u7b2c\u4e00\u4e2a\u8282\u70b9\u5143\u7d20\uff0cback\u6307\u9488\u6307\u5411\u94fe\u8868\u7684\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u5143\u7d20\uff0c\u6210\u5458\u51fd\u6570add()\u5c06\u4e00\u4e2a\u65b0\u8282\u70b9\u5143\u7d20\u52a0\u5165\u5230\u961f\u5217\u7ed3\u5c3e\uff0cremove()\u4ece\u961f\u5217\u5f00\u5934\u5220\u9664\u4e00\u4e2a\u8282\u70b9\u5143\u7d20\u3002\u4e3a\u65b9\u4fbf\u8d77\u89c1\uff0c\u7a0b\u5e8f\u4e2d\u52a0\u4e0a\u4e86\u884c\u53f7\u3002\u9605\u8bfb\u7a0b\u5e8f\uff0c\u6839\u636e\u7a0b\u5e8f\u540e\u9762\u7684\u95ee\u9898\u4f5c\u51fa\u76f8\u5e94\u89e3\u7b54\u3002\n", "/***************************\u6587\u4ef6queue.h**************************************/\n", "\u00a0", "\n\u00a0", "/****************************************************************************/\n", "1\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 template<class Type>\n", "2\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 class Queue;\n", "3\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 /******************\u5b9a\u4e49\u6a21\u677f\u7c7bQueueItem*******************************/\n", "4\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 template <class Type>\n", "5\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 class QueueItem\n", "6\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {\n", "7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0   public:\n", "8\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0     QueueItem(const Type &elem):item(elem){}\n", "9\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0     QueueItem(){}\n", "10\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0   private:\n", "11\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0     Type item;\n", "12\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0     QueueItem *nextItem;\n", "13\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0     friend class Queue<Type>;\n", "14\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 };\n", "15\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 /***********************\u5b9a\u4e49\u6a21\u677f\u7c7bQueue*****************************/\n", "16\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 template<class Type>\n", "17\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 class Queue{\n", "18\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0   public:\n", "19\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0     Queue():front(NULL),_______\uff08A\uff09_______{}\n", "20\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0     ~Queue();\n", "21\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0     Type remove();\n", "22\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0     void add(const Type &);\n", "23\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0     bool is_empty()const {return  ____\uff08B\uff09____;}\n", "24\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0   private:\n", "25\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0     QueueItem<Type> *front;\n", "26\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0     QueueItem<Type> *back;\n", "27\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 };\n", "28\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 //\u6a21\u677f\u7c7bQueue\u7684\u51fd\u6570\u6210\u5458remove()\u7684\u5b9e\u73b0\n", "29\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 //\u4ece\u961f\u5217\u5934\u53d6\u51fa\u4e00\u4e2a\u8282\u70b9\uff0c\u5e76\u8fd4\u56de\u8be5\u8282\u70b9\u7684\u503c\n", "30\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 template<class Type>\n", "31\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Type Queue<Type>::remove()\n", "32\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {\n", "33\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0   QueueItem<Type> *pFront; //\u6307\u5411\u5934\u8282\u70b9\u7684\u4e34\u65f6\u6307\u9488\n", "34\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0    Type retVal;  //\u8fd4\u56de\u503c\n", "35\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0    ____\uff08C\uff09____;\n", "36\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0   retVal=front->item;\n", "37\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0   front=front->nextItem;\n", "38\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0   delete  pFront;\n", "39\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0   return  retVal;\n", "40\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\n", "41\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 //\u6a21\u677f\u7c7bQueue\u7684\u51fd\u6570\u6210\u5458add()\u7684\u5b9e\u73b0\n", "42\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 template<class Type>\n", "43\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 void Queue<Type>::add(const Type& newItem)\n", "44\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {\n", "45\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0   QueueItem<Type> *pNew=new QueueItem<Type>;\n", "46\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0   pNew->item=newItem;\n", "47\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0   ____\uff08D\uff09____;\n", "48\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0   if(front==NULL)\n", "49\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0     front=back=pNew;\n", "50\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0   else\n", "51\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0   {\n", "52\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0      back->nextItem=pNew;\n", "53\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0      ____\uff08E\uff09____;\n", "54\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0    }\n", "55\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\n", "56\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n", "57\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 template <class Type>\n", "58\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Queue<Type>::~Queue()\n", "59\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {\n", "60\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0   QueueItem<Type> *p=front, *q;\n", "61\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0   while(p!=NULL)\n", "62\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0   {\n", "63\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0      q=p->nextItem;\n", "64\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0      delete p;\n", "65\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0      p=q;\n", "66\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0    }\n", "67\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\n", "\u95ee\u98981\uff1a\u7a0b\u5e8f\u4e2d\u6709\u51e0\u5904\u586b\u7a7a\uff0c\u5c06\u5b83\u4eec\u5b8c\u6210\u3002\n", "\uff08A\uff09______________________________________________\n", "\uff08B\uff09______________________________________________\n", "\uff08C\uff09______________________________________________\n", "\uff08D\uff09______________________________________________\n", "\uff08E\uff09______________________________________________\n", "\u00a0", "\n\u00a0", "\u95ee\u98982\uff1a\u9898\u4e2d\u7a0b\u5e8f\u7b2c1\u30012\u884c\u4e3a\u4ec0\u4e48\u8981\u8bf4\u660e\u4e00\u4e0b\u7c7b\u6a21\u677fQueue\uff1f\u5982\u679c\u6ca1\u6709\u8fd9\u4e24\u884c\u8bed\u53e5\uff0c\u7a0b\u5e8f\u8fd8\u6b63\u786e\u5417\uff1f\n", "\u7b54\uff1a\n", "\u00a0", "\n\u00a0", "\u00a0", "\n\u00a0", "\u95ee\u98983\uff1a\u7a0b\u5e8f\u7b2c22\u300123\u884c\u5404\u6709\u4e00\u4e2aconst\uff0c\u5b83\u4eec\u5404\u81ea\u8868\u793a\u4ec0\u4e48\u542b\u4e49\uff1f\n", "\u7b54\uff1a\n", "\u00a0", "\n\u00a0", "\u00a0", "\n\u00a0", "\u95ee\u98984\uff1a\u7a0b\u5e8f\u4e2d\u6a21\u677f\u7c7bQueue\u7684\u6790\u6784\u51fd\u6570\u4e3b\u8981\u505a\u4e86\u4ec0\u4e48\u4e8b\u60c5\uff1f\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u505a\uff1f\n", "\u7b54\uff1a\n", "\u00a0", "\n\u00a0", "\u95ee\u98985\uff1a\u4e0b\u9762\u7684\u7a0b\u5e8f\u4f7f\u7528\u4e86queue.h\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u7c7b\u6a21\u677f\uff0c\u8bf4\u660e\u7a0b\u5e8f\u4e2d\u54ea\u4e9b\u5b9a\u4e49\u961f\u5217\u5bf9\u8c61\u7684\u8bed\u53e5\u662f\u4e0d\u6b63\u786e\u7684\uff0c\u54ea\u4e9b\u662f\u6b63\u786e\u7684\uff1f\n", "#include \u201cqueue.h\u201d\n", "\u00a0", "\n\u00a0", "void main()\n", "{\n", "  Queue  q1;                     //1\n", "  Queue<int> q2;                  //2\n", "  Queue<int> q3(100);              //3\n", "  Queue<int> q4[100];              //4\n", "  Queue<int> q5=new Queue<int>;    //5\n", "  //\u2026\n", "  delete q5;\n", "}\n", "\u7b54\uff1a\n", "\u00a0", "\n\u00a0", "\n\u00a0", "/*************************************************************/\n", "#include <iostream.h>\n", "class A{\n", "private:\n", "  //\u2026\u5176\u5b83\u6210\u5458\n", "public:\n", "  virtual void func(int data){cout<<\u201dclass A:\u201d<<data<<endl;}\n", "  void func(char *str){ cout<<\u201dclass A:\u201d<<str<<endl; }\n", "};\n", "\u00a0", "\n\u00a0", "class B: public A{\n", "//\u2026\u5176\u5b83\u6210\u5458\n", "public:\n", "  void func() {cout<<\u201dfunction in B without parameter! \\n\u201d;}\n", "  void func(int data) { cout<<\u201dclass B:\u201d<<data<<endl; }\n", "  void func(char *str){ cout<<\u201dclass B:\u201d<<str<<endl;}\n", "};\n", "int main(int argc,char *argv[])\n", "{\n", "  A *pA;\n", "  B b;\n", "  pA=&b;\n", "  pA->func(1);\n", "  pA->func(\u201chaha\u201d);\n", "  return 0;\n", "}\n", "/*************************************************************************/\n", "\u95ee\u98981\uff1a\uff08\u672c\u5c0f\u98984\u5206\uff09\u5728\u4e0b\u9762\u5199\u51fa\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\uff1a\n", "\u00a0", "\n\u00a0", "\u95ee\u98982\uff1a\uff08\u672c\u5c0f\u98982\u5206\uff09\u5982\u4e0b\u53e5\u6240\u793a\uff0c\u5728\u51fd\u6570main()\u4e2d\u901a\u8fc7pA\u8c03\u7528\u7c7bB\u4e2d\u5b9a\u4e49\u7684\u53c2\u6570\u8868\u4e3a\u7a7a\u7684\u51fd\u6570func() \uff1a\n", "  pA->func();\n", "\u662f\u5426\u6b63\u786e\uff1f\n", "\u7b54\uff1a\uff08\u6b63\u786e/\u4e0d\u6b63\u786e\uff09\n", "\u00a0", "\n\u00a0", "\u00a0", "\n\u00a0", "\u95ee\u98983\uff1a\uff08\u672c\u5c0f\u989810\u5206\uff09\u5982\u679c\u8981\u8bb0\u5f55\u5df2\u5c3c\u521b\u5efa\u7684A\u7c7b\u7684\u5b9e\u4f8b\uff08\u5bf9\u8c61\uff09\u7684\u4e2a\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u501f\u52a9\u4e8e\u7c7b\u7684\u9759\u6001\u6210\u5458\u3002\u4fee\u6539\u4e0a\u9762\u7c7bA\u7684\u5b9a\u4e49\uff0c\u4f7f\u5f97\u5b83\u5305\u542b\u4e00\u4e2a\u79c1\u6709\u7684\u9759\u6001\u6210\u5458object_count\uff0c\u8bb0\u5f55\u5c5e\u4e8e\u8be5\u7c7b\u7684\u5bf9\u8c61\u7684\u4e2a\u6570\uff0c\u7136\u540e\u4e3a\u7c7bA\u589e\u52a0\u5fc5\u8981\u7684\u6210\u5458\u51fd\u6570\uff0c\u4f7f\u5f97\u4e0b\u9762\u7684\u7a0b\u5e8f\uff1a\n", "void main()\n", "{\n", "  A *pA=new A[3];\n", "  cout<<\u201dThere are \u201c<<pA->GetObjectCount()<<\u201d objects\u201d<<endl;\n", "  delete []pA;\n", "  cout<<\u201dThere are \u201c<<A::GetObjectCount()<<\u201d objects\u201d<<endl;\n", "}\n", "\u5f97\u5230\u7684\u8f93\u51fa\u4e3a\uff1a\n", "There are 3 objects\n", "There are 0 objects\n", "\u5728\u4e0b\u9762\u5199\u51fa\u7c7bA\u7684\u5b9a\u4e49\uff08\u5c06\u6240\u6709\u7684\u51fd\u6570\u6210\u5458\u5b9e\u73b0\u5199\u5728\u7c7b\u5b9a\u4e49\u4f53\u4e2d\uff09\uff1a\n", "\u00a0", "\n\u00a0", "\u00a0", "\n\u00a0", "\u00a0\u00a0", "\n\u00a0", "\u5728\u4e0b\u9762\u5199\u51fa\u521d\u59cb\u5316\u7c7b\u7684\u9759\u6001\u6210\u5458object_count\u7684\u8bed\u53e5\uff1a\n", "\u00a0", "\n\u00a0", "\u00a0", "\n\u00a0", "\u4e0b\u9762\u7684\u7a0b\u5e8f\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7b80\u5355\u7684SmallInt\u7c7b\uff0c\u7528\u6765\u8868\u793a\u4ece-128\u5230127\u4e4b\u95f4\u7684\u6574\u6570\u3002\u7c7b\u7684\u552f\u4e00\u7684\u6570\u636e\u6210\u5458val\u5b58\u653e\u4e00\u4e2a-128\u5230127\uff08\u5305\u542b-128\u548c127\u8fd9\u4e24\u4e2a\u6570\uff09\u4e4b\u95f4\u7684\u6574\u6570\uff0c\u4e3a\u4e86\u65b9\u4fbf\uff0c\u7c7bSmallInt\u8fd8\u91cd\u8f7d\u4e86\u4e00\u4e9b\u8fd0\u7b97\u7b26\u3002\u9605\u8bfbSmallInt\u7684\u5b9a\u4e49\uff0c\u56de\u7b54\u9898\u76ee\u540e\u9762\u7684\u95ee\u9898\u3002\n", "class SmallInt{\n", "public:\n", "  SmallInt(int i=0);\n", "//\u91cd\u8f7d\u63d2\u5165\u548c\u62bd\u53d6\u8fd0\u7b97\u7b26\n", "friend ostream &operator<<(ostream&os,const SmallInt &si);\n", "friend istream &operator>>(istream &is, SmallInt &si);\n", "\u00a0", "\n\u00a0", "//\u91cd\u8f7d\u7b97\u672f\u8fd0\u7b97\u7b26\n", "SmallInt operator+(const SmallInt &si){return SmallInt(val+si.val);}\n", "SmallInt operator-(const SmallInt &si){return SmallInt(val-si.val);}\n", "SmallInt operator*(const SmallInt &si){return SmallInt(val*si.val);}\n", "SmallInt operator/(const SmallInt &si){return SmallInt(val/si.val);}\n", "//\u91cd\u8f7d\u6bd4\u8f83\u8fd0\u7b97\u7b26\n", "bool operator==(const SmallInt &si){return (val==si.val);}\n", "private:\n", "  char val;\n", "};\n", "SmallInt::SmallInt(int i)\n", "{\n", "  while(i>127)\n", "i-=256;\n", "  while(i<-128)\n", "i+=256;\n", "  val=i;\n", "}\n", "\u00a0", "\n\u00a0", "ostream &operator<<(ostream &os,const SmallInt &si)\n", "{\n", "  os<<(int)si.val;\n", "  return os;\n", "}\n", "\u00a0", "\n\u00a0", "istream &operator>>(istream &is,SmallInt &si)\n", "{\n", "  int tmp;\n", "  is>>tmp;\n", "  si=SmallInt(tmp);\n", "  return is;\n", "}\n", "\u95ee\u98981\uff1a\uff08\u672c\u5c0f\u98984\u5206\uff09\u4e0a\u9762\u7684\u7c7b\u5b9a\u4e49\u4e2d\uff0c\u91cd\u8f7d\u7684\u63d2\u5165\u8fd0\u7b97\u7b26\u548c\u62bd\u53d6\u8fd0\u7b97\u7b26\u88ab\u5b9a\u4e49\u4e3a\u7c7b\u7684\u53cb\u5143\u51fd\u6570\uff0c\u80fd\u4e0d\u80fd\u5c06\u8fd9\u4e24\u4e2a\u8fd0\u7b97\u7b26\u5b9a\u4e49\u4e3a\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff1f\u5982\u679c\u80fd\uff0c\u5199\u51fa\u51fd\u6570\u539f\u578b\uff0c\u5982\u679c\u4e0d\u80fd\uff0c\u8bf4\u660e\u7406\u7531\u3002\n", "\u7b54\uff1a\n", "\u00a0", "\n\u00a0", "\u95ee\u98982\uff1a\uff08\u672c\u5c0f\u98985\u5206\uff09\u4e3a\u7c7bSmallInt\u589e\u52a0\u4e00\u4e2a\u91cd\u8f7d\u7684\u8fd0\u7b97\u7b26\u2019+=\u2019\uff0c\u51fd\u6570\u539f\u578b\u5982\u4e0b\uff1a\n", "class SmallInt{\n", "public:\n", "SmallInt &operator +=(const SmallInt &si);\n", "//\u5176\u5b83\u51fd\u6570\u2026\u2026\n", "private:\n", "  char val;\n", "};\n", "\u8be5\u51fd\u6570\u5c06\u8fd4\u56de\u5bf9\u5f53\u524d\u5bf9\u8c61\u7684\u5f15\u7528\u3002\u5982\uff1a\n", "SmallInt si1(20),si2(13);\n", "\u5219\u8868\u8fbe\u5f0f\uff1a\n", "  si1+=si2\n", "\u5c06\u8fd4\u56de\u5bf9\u8c61si1\u7684\u5f15\u7528\uff0c\u5e76\u4e14si1\u4e2d\u7684\u7684\u503c\u662fsi1.val\u548csi2.val\u7684\u503c\u4e4b\u548c\uff08\u4f46\u5fc5\u987b\u6b63\u89c4\u5316\u4e3a\u5728-128\u81f3127\u4e4b\u95f4\uff09\u3002\n", "\u5728\u4e0b\u9762\u5199\u51fa\u91cd\u8f7d\u7684\u8fd0\u7b97\u7b26+=\u7684\u5b9e\u73b0\uff1a\n", "\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "1\u3001\u7b80\u8ff0Windows\u4e2d\u53e5\u67c4\u7684\u610f\u4e49\u548c\u6d88\u606f\u6620\u5c04\u673a\u5236\n", "\n\u00a0", "\n\u00a0", "\n\u00a0", "2\u3001\u89e3\u91caMicrosoft  MFC \u4e2d\u6587\u6863\uff0d\u89c6\u56fe\u7ed3\u6784\u7684\u6765\u5386\u548c\u597d\u5904\n", "\n\u00a0", "\n\u00a0", "\n\u00a0", "3\u3001Microsoft \u7684COM\u6280\u672f\u662f\u4ec0\u4e48\uff1fCOM\u63a5\u53e3\u673a\u5236\u662f\u600e\u6837\u7684\uff1f\n", "\n\u00a0", "\n\u00a0", "\n\u00a0", "4\u3001\u4e00\u4e2aWindows\u7a0b\u5e8f\u7684\u5173\u952e\u5c31\u662f\u6253\u5f00\u4e00\u4e2a\u7a97\u53e3\uff0c\u5904\u7406\u6d88\u606f\uff0c\u8c03\u7528\u4e3b\u4e8b\u4ef6\u5faa\u73af\u7b49\u3002\u8981\u521b\u5efa\u4e00\u4e2a\u5b8c\u5168\u5b9e\u7528\u7684Windows\u7a0b\u5e8f\uff0c\u9700\u8981\u8fdb\u884c\u54ea\u51e0\u6b65\u5de5\u4f5c\uff1f\n", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\u00a0"], "title": "C++/Windows\u7a0b\u5e8f\u8bbe\u8ba1\u8bd5\u9898"},
{"contents": ["\n\t", "\n\t", "\n\u00a0", "\n\u00a0", "}", "\n\u00a0", "\u9012\u5f52\u65b9\u5f0f\uff1a\n", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0"], "title": "C/C++\u9762\u8bd5\u95ee\u9898\u5206\u7c7b\u5927\u6c47\u603b"},
{"contents": ["\u59d3\u540d\uff1a________\u3000\u5b66\u5386________\u3000\u5b66\u6821______________________\u3000\u4e13\u4e1a______________\n", "\n\u00a0", "\u82f1\u8bed\u6c34\u5e73________\u3000\u8054\u7cfb\u7535\u8bdd________________    \u8003\u8bd5\u6210\u7ee9________ \uff08\u9650\u65f6\uff1a180\u5206\u949f\uff09\n", "\n\u00a0", "HTTP\u3001FTP\u548cPOP3", "\u5b9a\u4e49int **a[3][4] , \u5219\u53d8\u91cfa\u5360\u6709\u7684\u5185\u5b58\u7a7a\u95f4\u4e3a\uff1a", "\u3002\n", "\n\u00a0", "\n\u00a0", "\u3000\u3000", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\t\t", "\n\u00a0", "\n\u00a0"], "title": "C++\u7a0b\u5e8f\u5458\u5b9e\u4e60\u6d4b\u8bd5\u9898"},
{"contents": ["1. \u89e3\u4e8c\u6b21\u65b9\u7a0b:a*x*x+b*x+c", "int Quadratic( double a,double b,double c,double& x1,double& x2);", "\u8fd4\u56de\u503c\uff1a\u89e3\u7684\u4e2a\u6570 \u7528\u6c42\u6839\u516c\u5f0f\u8ba1\u7b97", "2. \u6700\u5927\u516c\u7ea6\u6570", "DWORD Divisor( DWORD dwFirst, DWORD dwSecond );", "\u8fd4\u56de\u503c\uff1a\u6700\u5927\u516c\u7ea6\u6570", "long Divisor( long dwFirst, long dwSecond )", "{", "if (dwFirst < dwSecond)", "{", "long temp = dwFirst;", "dwFirst = dwSecond;", "dwSecond = temp;", "}", "if (dwSecond == 0)", "{", "return dwFirst;", "}", "if (dwFirst % 2 == 0)", "{", "if (dwSecond % 2 == 0)", "{", "return(Divisor(dwFirst >> 1,dwSecond >> 1) << 1);", "}", "else", "{", "return Divisor(dwFirst >> 1,dwSecond);", "}", "}", "else", "{", "if (dwSecond % 2 == 0)", "{", "return Divisor(dwFirst,dwSecond >> 1);", "}", "else", "{", "return Divisor(dwSecond,dwFirst \u2013 dwSecond);", "}", "}", "}", "3. \u6839\u636e\u8499\u7279\u5361\u6d1b\u7b97\u6cd5\u8ba1\u7b97\u5706\u5468\u7387", "double PI( DOWRD dwCount/*\u6d4b\u8bd5\u6b21\u6570*/ )\uff1b", "\u8fd4\u56de\u503c\uff1aPI", "/**//*", "\u5229\u7528\u8499\u7279\u5361\u6d1b\u7b97\u6cd5\u8fd1\u4f3c\u6c42\u5706\u5468\u7387PI", "VC++6.0", "ZZH", "*/", "#include<iostream>", "#include<cmath>", "#include<ctime>", "#define COUNT 500000 //\u5faa\u73af\u53d6\u6837\u6b21\u6570", "using namespace std;", "bool InCircle(double x,double y)//\u662f\u5426\u57281/4\u5706\u8303\u56f4\u4e4b\u5185", "{", "if((x*x+y*y)<=1)return true;", "return false;", "}", "void main()", "{", "double x,y;", "int num=0;", "int i;", "srand((unsigned)time(NULL));", "for(i=0;i<COUNT;i++)", "{", "x=rand()*1.0/RAND_MAX;", "y=rand()*1.0/RAND_MAX;", "if(InCircle(x,y)) num++;", "}", "cout<<\u201dPI:\u201d<<(num*4.0)/COUNT<<endl;", "}", "\u7ed3\u679c\uff1a\u6d4b\u8bd55\u6b21\u7684\u7ed3\u679c\u663e\u793a\uff1a3.13958\uff0c3.14041\uff0c3.13729\uff0c3.13859\uff0c3.14186", "4. \u65e0\u7b26\u53f7\u6574\u6570\u4e58\u6cd5\uff0c\u4e58\u6570\u4e3a32bit\uff0c\u7ed3\u679c\u4e3a64bit", "\u63d0\u793a\uff1a32bit\u6574\u6570\u5206\u89e3\u4e3a16bit\u76f8\u4e58", "void Multiply( DWORD dwFirst, DWORD dwSecond, DWORD& dwHigh, DWORD& dwLower );", "\u00a0", "5. \u94fe\u8868\u6392\u5e8f(\u4ece\u5c0f\u5230\u5927)", "\u8282\u70b9\u5b9a\u4e49\u4e3a\uff1a", "struct Node{", "int nValue;", "struct Node* pNext;", "};", "\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u7684pNext = NULL.", "Node* SortChain( Node* pHead );", "\u8fd4\u56de\u503c\uff1a\u94fe\u8868\u5934", "\u5192\u6ce1\u6392\u5e8f\uff0c\u63d2\u5165\u6392\u5e8f\u7b49\u3002\u4e3a\u907f\u514d\u7e41\u7410\u53ef\u4ee5\u4e0d\u4ea4\u6362\u6307\u9488\uff0c\u53ea\u4ea4\u6362\u503c\uff1b\u4e5f\u53ef\u4ee5\u5c06\u503c\u5b58\u5165\u6570\u7ec4\uff0c\u5bf9\u6570\u7ec4\u6392\u5e8f\uff0c\u518d\u5b58\u5165\u94fe\u8868\u4e2d\u3002", "\u6539\u9519\u5e76\u8bf4\u660e\u539f\u56e0", "file: 1.c", "int a[10]={0};", "file: 2.c", "int main ()", "{ extern int *a;", "printf (\u201c%d\\n\u201d, a[0]);", "return 0;", "}"], "title": "C++\u7b14\u8bd5\u9898\u6570\u5b66\u7b97\u6cd5\u7c7b"},
{"contents": ["\uff08\u8bf4\u660e\uff1a\u5728\u672c\u8bd5\u5377\u4e2d\u7edf\u4e00\u89c4\u5b9a\u6574\u578b(int)\u6570\u636e\u5360\u75284\u4e2a\u5b57\u8282\u7684\u5b58\u50a8\u5355\u5143\u3002\uff09\n", "\n\u00a0", "1\u3001\u5728\u6bcf\u4e2aC++\u7a0b\u5e8f\u4e2d\u90fd\u5fc5\u987b\u5305\u542b\u6709\u8fd9\u6837\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u7684\u51fd\u6570\u540d\u4e3a\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u3002A.\u00a0main\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B.\u00a0MAIN\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C.\u00a0name\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D.\u00a0function\n", "2\u3001\u8bbex\u548cy\u5747\u4e3abool\u91cf\uff0c\u5219x&&y\u4e3a\u771f\u7684\u6761\u4ef6\u662f\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u3002\n", "A.\u00a0\u5b83\u4eec\u5747\u4e3a\u771f\u00a0\u00a0\u00a0\u00a0B.\u00a0\u5176\u4e2d\u4e00\u4e2a\u4e3a\u771f\u00a0\u00a0\u00a0\u00a0C.\u00a0\u5b83\u4eec\u5747\u4e3a\u5047\u00a0\u00a0\u00a0\u00a0\u00a0D.\u00a0\u5176\u4e2d\u4e00\u4e2a\u4e3a\u5047\n", "3\u3001\u4e0b\u9762\u7684\u54ea\u4e2a\u4fdd\u7559\u5b57\u4e0d\u80fd\u4f5c\u4e3a\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b\uff1f\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u3002A.\u00a0void\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B.\u00a0int\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C.\u00a0new\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D.\u00a0long\n", "4\u3001\u5047\u5b9aa\u4e3a\u4e00\u4e2a\u6574\u578b\u6570\u7ec4\u540d\uff0c\u5219\u5143\u7d20a[4]\u7684\u5b57\u8282\u5730\u5740\u4e3a\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u3002A.\u00a0a+4\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B.\u00a0a+8\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C.\u00a0a+16\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D.\u00a0a+32\n", "5\u3001\u5047\u5b9aAB\u4e3a\u4e00\u4e2a\u7c7b\uff0c\u5219\u6267\u884c\u201dAB\u00a0\u00a0a(4)\u00a0,\u00a0b[3]\u00a0,\u00a0*\u00a0p[2]\u00a0;\u201d\u8bed\u53e5\u65f6\uff0c\u81ea\u52a8\u8c03\u7528\u8be5\u7c7b\u6784\u9020\u51fd\u6570\u7684\u6b21\u6570\u4e3a\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u3002\n", "A.\u00a03\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B.\u00a04\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C.\u00a06\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D.\u00a09\n", "6\u3001\u5047\u5b9a\u8981\u5bf9\u7c7bAB\u5b9a\u4e49\u52a0\u53f7\u64cd\u4f5c\u7b26\u91cd\u8f7d\u6210\u5458\u51fd\u6570\uff0c\u5b9e\u73b0\u4e24\u4e2aAB\u7c7b\u5bf9\u8c61\u7684\u52a0\u6cd5\uff0c\u5e76\u8fd4\u56de\u76f8\u52a0\u7ed3\u679c\uff0c\u5219\u8be5\u6210\u5458\u51fd\u6570\u7684\u58f0\u660e\u8bed\u53e5\u4e3a\uff1a\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u3002           A.\u00a0\u00a0AB\u00a0\u00a0operator+(AB\u00a0\u00a0&\u00a0a\u00a0,\u00a0AB\u00a0\u00a0&\u00a0b)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B.\u00a0\u00a0AB\u00a0\u00a0operator+(AB\u00a0\u00a0&\u00a0a)\n", "C.\u00a0\u00a0operator+(AB\u00a0\u00a0a)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D.\u00a0\u00a0AB\u00a0\u00a0&\u00a0operator+(\u00a0)\u00a0\n", "\n\u00a0", "1\u3001C++\u8bed\u8a00\u4e2d\u7684\u6bcf\u6761\u57fa\u672c\u8bed\u53e5\u4ee5\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u4f5c\u4e3a\u7ed3\u675f\u7b26\uff0c\u6bcf\u6761\u590d\u5408\u8bed\u53e5\u4ee5\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u4f5c\u4e3a\u7ed3\u675f\u7b26\u3002\n", "2\u3001\u6267\u884c\u201dcout\u00a0\u00a0<<char(\u2018A\u2019+2)<<endl;\u201d\u8bed\u53e5\u540e\u5f97\u5230\u7684\u8f93\u51fa\u7ed3\u679c\u4e3a\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u3002\n", "3\u3001float\u00a0\u548c\u00a0double\u00a0\u7c7b\u578b\u7684\u5927\u5c0f\u5206\u522b\u4e3a\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u548c\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u3002\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n", "4\u3001\u7b97\u672f\u8868\u8fbe\u5f0f\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u5bf9\u5e94\u7684C++\u8868\u8fbe\u5f0f\u4e3a\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u3002\u00a0\n", "5\u3001\u5173\u7cfb\u8868\u8fbe\u5f0fx+y>5\u7684\u76f8\u53cd\u8868\u8fbe\u5f0f\u4e3a\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u3002\n", "6\u3001\u5047\u5b9a\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\u7684\u5b9a\u4e49\u4e3a\u201dchar\u00a0\u00a0*\u00a0a[8]\u00a0;\u201d\uff0c\u5219\u8be5\u6570\u7ec4\u6240\u542b\u5143\u7d20\u7684\u4e2a\u6570\u4e3a\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\uff0c\u6240\u5360\u5b58\u50a8\u7a7a\u95f4\u7684\u5b57\u8282\u6570\u4e3a\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u3002\n", "7\u3001\u53d8\u91cf\u5206\u4e3a\u5168\u5c40\u548c\u5c40\u90e8\u4e24\u79cd\uff0c\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u53d8\u91cf\u6ca1\u6709\u8d4b\u521d\u503c\u65f6\uff0c\u5176\u503c\u662f\u4e0d\u786e\u5b9a\u7684\u3002\n", "8\u3001\u5047\u5b9aa\u662f\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u5219a[i][j]\u7684\u6307\u9488\u8bbf\u95ee\u65b9\u5f0f\u4e3a\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u3002\n", "9\u3001\u5047\u5b9a\u4e00\u4e2a\u7ed3\u6784\u7c7b\u578b\u5b9a\u4e49\u4e3a\u201dstruct\u00a0\u00a0D\u00a0{\u00a0int\u00a0\u00a0a\u00a0;\u00a0\u00a0union\u00a0{\u00a0int\u00a0\u00a0b\u00a0;\u00a0double\u00a0\u00a0c\u00a0;\u00a0}\u00a0;\u00a0D\u00a0\u00a0*\u00a0d[2]\u00a0;\u00a0}\u00a0;\u201d\u00a0\uff0c\u5219\u8be5\u7c7b\u578b\u7684\u5927\u5c0f\u4e3a\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u5b57\u8282\u3002\n", "10\u3001\u5bf9\u4e00\u4e2a\u7c7b\u4e2d\u7684\u6570\u636e\u6210\u5458\u7684\u521d\u59cb\u5316\u53ef\u4ee5\u901a\u8fc7\u6784\u9020\u51fd\u6570\u4e2d\u7684\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u5b9e\u73b0\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6784\u9020\u51fd\u6570\u4e2d\u7684\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u5b9e\u73b0\u3002\n", "11\u3001\u5047\u5b9aAB\u4e3a\u4e00\u4e2a\u7c7b\uff0c\u5219\u6267\u884c\u201dAB\u00a0\u00a0a[10];\u201d\u8bed\u53e5\u65f6\uff0c\u7cfb\u7edf\u81ea\u52a8\u8c03\u7528\u8be5\u7c7b\u7684\u6784\u9020\u51fd\u6570\u7684\u6b21\u6570\u4e3a\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u3002\u00a0\n", "12\u3001\u5047\u5b9a\u7c7bAB\u4e2d\u6709\u4e00\u4e2a\u516c\u7528\u5c5e\u6027\u7684\u9759\u6001\u6570\u636e\u6210\u5458bb\uff0c\u5728\u7c7b\u5916\u4e0d\u901a\u8fc7\u5bf9\u8c61\u540d\u8bbf\u95ee\u8be5\u6210\u5458bb\u7684\u5199\u6cd5\u4e3a\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n", "\n\u00a0", "\n\u00a0", "\u00a0", "\n\u00a0", "\n\u00a0", "\u00a0", "\n\u00a0", "\u00a0", "\n\u00a0", "\u00a0", "\n\u00a0", "\u00a0", "\n\u00a0", "\u00a0", "\n\u00a0", "\u00a0", "\n\u00a0", "\u00a0", "\n\u00a0", "\u00a0", "\n\u00a0", "\u00a0", "\n\u00a0", "\n\u00a0"], "title": "C++\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u8bd5\u9898"},
{"contents": ["\n\u00a0", "1. Windows\u7a0b\u5e8f\u7684\u5165\u53e3\u662f\u54ea\u91cc\uff1f\u5199\u51faWindows\u6d88\u606f\u5faa\u73af\u673a\u5236\u7684\u6d41\u7a0b\u3002\n", "\n\u00a0", "\n\u00a0", "\n\u00a0", "2. \u5728C++ \u7a0b\u5e8f\u4e2d\u8c03\u7528\u88ab C \u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u7684\u51fd\u6570\uff0c\u4e3a\u4ec0\u4e48\u8981\u52a0 extern \u201cC\u201d\u58f0\u660e\uff1f", "\n\t", "\n\u00a0", "\n\u00a0", "3.\u5185\u8054\u51fd\u6570\u5728\u7f16\u8bd1\u65f6\u662f\u5426\u505a\u53c2\u6570\u7c7b\u578b\u68c0\u67e5", "\n\t", "\n\u00a0", "4. \u5934\u6587\u4ef6\u4e2d\u7684 ifndef/define/endif \u5e72\u4ec0\u4e48\u7528\uff1f", "\n\t", "\n\u00a0", "5.C++\u4e2d\u4e3a\u4ec0\u4e48\u7528\u6a21\u677f\u7c7b\u3002", "\n\t", "\n\u00a0", "6. \u51fd\u6570\u6a21\u677f\u4e0e\u7c7b\u6a21\u677f\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\t", "\n\u00a0", "7. C++\u4e2d\u4ec0\u4e48\u6570\u636e\u5206\u914d\u5728\u6808\u6216\u5806\u4e2d\uff0cnew\u5206\u914d\u7684\u6570\u636e\u662f\u5728\u5806\u8fd8\u662f\u6808\u4e2d\uff1f", "\n\t", "\n\u00a0", "8. \u4e00\u822c\u6570\u636e\u5e93\u82e5\u51fa\u73b0\u65e5\u5fd7\u6ee1\u4e86\uff0c\u4f1a\u51fa\u73b0\u4ec0\u4e48\u60c5\u51b5\uff0c\u662f\u5426\u8fd8\u80fd\u4f7f\u7528\uff1f", "\n\t", "\n\u00a0", "9. winsock\u5efa\u7acb\u8fde\u63a5\u7684\u4e3b\u8981\u5b9e\u73b0\u6b65\u9aa4\u662f\u4ec0\u4e48\uff1f\n", "\n\u00a0", "\n\u00a0", "\n\u00a0", "10\uff0e\u8bf7\u95ee\u4ea4\u6362\u673a\u548c\u8def\u7531\u5668\u5404\u81ea\u7684\u5b9e\u73b0\u539f\u7406\u662f\u4ec0\u4e48\uff1f\u5206\u522b\u5728\u54ea\u4e2a\u5c42\u6b21\u4e0a\u9762\u5b9e\u73b0\u7684\uff1f", "\n\t", "\n\u00a0", "\n\u00a0", "\n\u00a0", "1.", "int sum(int a)", "{", "auto int c=0;", "static int b=3;", "c+=1;", "b+=2;", "return(a+b+c);", "}", "void main()", "{", "int I;", "int a=2;", "for(I=0;I<5;I++)", "{", "   printf(\u201c%d,\u201d, sum(a));", "}", "}", "\n\t", "2\u3001\u82e5int\u53604\u4e2a\u5b57\u8282\uff0cchar\u53601\u4e2a\u5b57\u8282\uff0cfloat\u53604\u4e2a\u5b57\u8282\uff0c\u5219\u5b9a\u4e49\u5982\u4e0b\uff1a", "struct stu", "{  union{", "  \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0char bj[5];", "  \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int bh[2];", "  \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}class;", "  char xm[8];", "  float cj;", "}xc;", "\u5219sizeof(xc)\u7684\u503c\u4e3a? ", "\n\t", "int a[3];", "a[0]=0; a[1]=1; a[2]=2;", "int *p, *q;", "p=a;", "q=&a[2];", "\u5219a[q-p]=?", "\n\t", "\u5b9a\u4e49 int **a[3][5], \u5219\u53d8\u91cf\u5360\u6709\u7684\u5185\u5b58\u7a7a\u95f4\u4e3a\uff1a_____", "\n\t", "\n\u00a0", "5\uff0e\u5199\u51fa\u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c", "#include <stdio.h>", "class A{", "public:", "void FuncA(){", "  printf(\u201cFuncA called\\n\u201d);", "}", "virtual void FuncB(){", "  printf(\u201cFuncB called\\n\u201d);", "}", "};", "class B: public A{", "public:", "void FuncA(){", "  A::FuncA();", "  printf(\u201cFuncAB called\\n\u201d);", "}", "virtual void FuncB(){", "  printf(\u201cFuncBB called\\n\u201d);", "}", "};", "void main(void){", "B b;", "A *pa;", "pa=&b;", "A *pa2=new A;", "b.FuncA();       ", "b.FuncB();  ", "pa->FuncA(); ", "pa->FuncB(); ", "pa2->FuncA(); ", "pa2->FuncB();", "delete pa2;", "}", "6. \u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f\n", "#define f1(n) (n)*(n)", "int i=5;", "int k=0;", "k=f1(i++);", "printf(\u201c%d %d\u201d,i,k);", "\n\t", "7.\n", "int i;", "int x=0\u00d712345678;", "unsigned char *p=(unsigned char *)&x;", "for(i=0;i<SIZEOF(X);I++)", "printf(\u201c%2x\u201d,*(p+i));", "\u5728x86 pc\u673a\u5668\u4e0a\u8fd0\u884c\u7ed3\u679c\uff1f ", "8\uff0e\n", "void fun(char *a,char *b)\n", "{\u00a0\u00a0\u00a0\u00a0a=b;", "(*a)++;\n", "}\n", "void main(){", "char s1=\u2019A\u2019,s2=\u2019a\u2019;", "char *p1=&s1;", "char *p2=&s2;", "fun(p1,p2);", "printf(\u201c%c%c\u201d,s1,s2);", "}", "\u8f93\u51fa\u7ed3\u679c\u662f\uff1a", "\n\t", "\n\u00a0", "#include  <stdio.h>\n", "#include  <string.h>\n", "class Cbuffer{\n", "char * m_pBuffer;", "int  m_size;\n", "public:", "CBuffer()", "{", "  m_pBuffer=NULL;", "}", "~CBuffer()", "{", "  Free();", "}", "void Allocte(int size) {", "  m_size=size;", "  m_pBuffer= new char[size];", "}", "private:", "void Free()", "{ ", "  if(m_pBuffer!=NULL)", "  {", "    delete m_pBuffer;", "    m_pBuffer=NULL;", "  }", "}", "public:", "void SaveString(const char* pText) const", "{", "  strcpy(m_pBuffer, pText);", "}", "char* GetBuffer() const", "{", "return m_pBuffer;", "}", "};", "void main (int argc, char* argv[])", "{", "CBuffer buffer1;", "buffer1.SaveString(\u201cMicrosoft\u201d);", "printf(buffer1.GetBuffer());", "}", "\n\t\t", "2) \u4e0b\u9762\u7a0b\u5e8f\u60f3\u6253\u5370\u201dWelcome MSR Asia\u201d\uff0c\u6539\u6b63\u9519\u8bef", "#include  <stdio.h>\n", "#include  <string.h>\n", "char * GetName (void){", "//To return \u201cMSR Asia\u201d String", "char name[]=\u201dMSR Asia\u201d;", "return name;", "}", "void main(int argc, char* argv[])", "{", "char name[32];", "//Fill in zeros into name", "for(int i=0;i<=32;i++)", "{", "name[i]=\u2019\\0\u2032;", "}", "//copy \u201cWelcome\u201d to name", "name=\u201dWelcome\u201d;", "//Append a blank char", "name[8]=\u201d \u201c;", "//Append string to name", "strcat(name,GetName());", "//print out", "printf(name);", "}", "\n\t", "1.\u5c06\u6574\u6570\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\uff1achar* itoa(int,char*);", "\u4f8b\u5982itoa(-123,s[])\u5219s=\u201d-123\u2033;", "\n\t", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "2.\u5b8c\u6210\u4e0b\u5217\u7a0b\u5e8f", "*", "*.*.", "*..*..*..", "*\u2026*\u2026*\u2026*\u2026", "*\u2026.*\u2026.*\u2026.*\u2026.*\u2026.", "*\u2026..*\u2026..*\u2026..*\u2026..*\u2026..*\u2026..", "*\u2026\u2026*\u2026\u2026*\u2026\u2026*\u2026\u2026*\u2026\u2026*\u2026\u2026*\u2026\u2026", "*\u2026\u2026.*\u2026\u2026.*\u2026\u2026.*\u2026\u2026.*\u2026\u2026.*\u2026\u2026.*\u2026\u2026.*\u2026\u2026.", "#include ", "#define N 8", "int main()", "{", "int i;", "int j;", "int k;", "\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014", "\n\t", "\n\u00a0", "\n\u00a0", "\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014", "return 0;", "}", "3\uff0e\u5b8c\u6210\u7a0b\u5e8f\uff0c\u5b9e\u73b0\u5bf9\u6570\u7ec4\u7684\u964d\u5e8f\u6392\u5e8f", "#include ", "void sort( );", "int main(){", "int array[]={45,56,76,234,1,34,23,2,3}; //\u6570\u5b57\u4efb\u610f\u7ed9\u51fa", "sort( );", "return 0;", "}", "void sort( )", "{", "\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014", "\n\t", "\n\u00a0", "\n\u00a0", "\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014", "}", "\n\t", "4.\u8d39\u6ce2\u90a3\u5176\u6570\u5217\uff0c1\uff0c1\uff0c2\uff0c3\uff0c5\u2026\u2026\u7f16\u5199\u7a0b\u5e8f\u6c42\u7b2c\u5341\u9879\u3002\u53ef\u4ee5\u7528\u9012\u5f52\uff0c\u4e5f\u53ef\u4ee5\u7528\u5176\u4ed6\u65b9\u6cd5\uff0c\u4f46\u8981\u8bf4\u660e\u4f60\u9009\u62e9\u7684\u7406\u7531\u3002", "#include ", "int Pheponatch(int);", "int main()", "{", "printf(\u201cThe 10th is %d\u201d,Pheponatch(10));", "return 0;", "}", "int Pheponatch(int N)", "{", "\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n\t", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "}", "\n\t", "5.\u8bf7\u7528\u6807\u51c6C\u8bed\u8a00\u5b9e\u73b0\u4e00\u4e2a\u53cc\u5411\u5faa\u73af\u94fe\u8868\u7684\u67e5\u627e\u4e0e\u5220\u9664\u8fc7\u7a0bfindKey\u3002", "typedef struct doublecyclelink{", "int key;", "struct doublecyclelink *prev;", "struct doublecyclelink *next;", "}DoubleCycleLinkT;", "DoubleCycleLinkT *findKey(DoubleCycleLinkT *link,int key);", "\u904d\u5386\u6574\u4e2a\u53cc\u5411\u5faa\u73af\u94fe\u8868\uff0c\u5c06\u7b2c\u4e00\u4e2a\u4e0ekey\u503c\u76f8\u540c\u7684\u7ed3\u70b9\u79fb\u51fa\u94fe\u8868\uff0c\u5e76\u8fd4\u56de\u3002", "\u82e5\u6ca1\u6709\u627e\u5230\u5219\u8fd4\u56deNULL\u3002", "\n\t\t", "\n\u00a0", "\n\u00a0", "1. Windows\u7a0b\u5e8f\u7684\u5165\u53e3\u662f\u54ea\u91cc\uff1f\u5199\u51faWindows\u6d88\u606f\u673a\u5236\u7684\u6d41\u7a0b\u3002\n", "Windows\u7a0b\u5e8f\u7684\u5165\u53e3\u662fWinMain\u51fd\u6570", "\u6d88\u606f\u673a\u5236\uff1a\u7cfb\u7edf\u5c06\u4f1a\u7ef4\u62a4\u4e00\u4e2a\u6216\u591a\u4e2a\u6d88\u606f\u961f\u5217\uff0c\u6240\u6709\u4ea7\u751f\u7684\u6d88\u606f\u90fd\u4f1a\u88ab\u653e\u5165\u6216\u662f\u63d2\u5165\u961f\u5217\u4e2d\u3002\u7cfb\u7edf\u4f1a\u5728\u961f\u5217\u4e2d\u53d6\u51fa\u6bcf\u4e00\u6761\u6d88\u606f\uff0c\u6839\u636e\u6d88\u606f\u7684\u63a5\u6536\u53e5\u67c4\u800c\u5c06\u8be5\u6d88\u606f\u53d1\u9001\u7ed9\u62e5\u6709\u8be5\u7a97\u53e3\u7684\u7a0b\u5e8f\u7684\u6d88\u606f\u5faa\u73af\u3002\u6bcf\u4e00\u4e2a\u8fd0\u884c\u7684\u7a0b\u5e8f\u90fd\u6709\u81ea\u5df1\u7684\u6d88\u606f\u5faa\u73af\uff0c\u5728\u5faa\u73af\u4e2d\u5f97\u5230\u5c5e\u4e8e\u81ea\u5df1\u7684\u6d88\u606f\u5e76\u6839\u636e\u63a5\u6536\u7a97\u53e3\u7684\u53e5\u67c4\u8c03\u7528\u76f8\u5e94\u7684\u7a97\u53e3\u8fc7\u7a0b\u3002\u800c\u5728\u6ca1\u6709\u6d88\u606f\u65f6\u6d88\u606f\u5faa\u73af\u5c31\u5c06\u63a7\u5236\u6743\u4ea4\u7ed9\u7cfb\u7edf\u3002\n", "\n\u00a0", "2. \u5728C++ \u7a0b\u5e8f\u4e2d\u8c03\u7528\u88ab C \u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u7684\u51fd\u6570\uff0c\u4e3a\u4ec0\u4e48\u8981\u52a0 extern \u201cC\u201d\u58f0\u660e\uff1f", "\u7b54\uff1a\u51fd\u6570\u548c\u53d8\u91cf\u88abC++\u7f16\u8bd1\u540e\u5728\u7b26\u53f7\u5e93\u4e2d\u7684\u540d\u5b57\u4e0eC\u8bed\u8a00\u7684\u4e0d\u540c\uff0c\u88abextern \u201cC\u201d\u4fee\u9970\u7684\u53d8\u91cf\u548c\u51fd\u6570\u662f\u6309\u7167C\u8bed\u8a00\u65b9\u5f0f\u7f16\u8bd1\u548c\u8fde\u63a5\u7684\u3002\u7531\u4e8e\u7f16\u8bd1\u540e\u7684\u540d\u5b57\u4e0d\u540c\uff0cC++\u7a0b\u5e8f\u4e0d\u80fd\u76f4\u63a5\u8c03\u7528C \u51fd\u6570\u3002C++\u63d0\u4f9b\u4e86\u4e00\u4e2aC \u8fde\u63a5\u4ea4\u6362\u6307\u5b9a\u7b26\u53f7extern\u201dC\u201d\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n", "\n\u00a0", "3.\u5185\u8054\u51fd\u6570\u5728\u7f16\u8bd1\u65f6\u662f\u5426\u505a\u53c2\u6570\u7c7b\u578b\u68c0\u67e5", "\u7b54\uff1a\u505a\u7c7b\u578b\u68c0\u67e5\uff0c\u56e0\u4e3a\u5185\u8054\u51fd\u6570\u5c31\u662f\u5728\u7a0b\u5e8f\u7f16\u8bd1\u65f6\uff0c\u7f16\u8bd1\u5668\u5c06\u7a0b\u5e8f\u4e2d\u51fa\u73b0\u7684\u5185\u8054\u51fd\u6570\u7684\u8c03\u7528\u8868\u8fbe\u5f0f\u7528\u5185\u8054\u51fd\u6570\u7684\u51fd\u6570\u4f53\u6765\u4ee3\u66ff\u3002\n", "\n\u00a0", "4. \u5934\u6587\u4ef6\u4e2d\u7684 ifndef/define/endif \u5e72\u4ec0\u4e48\u7528\uff1f\u9884\u5904\u7406", "\u7b54\uff1a\u9632\u6b62\u5934\u6587\u4ef6\u88ab\u91cd\u590d\u5f15\u7528\n", "\n\u00a0", "5.C++\u4e2d\u4e3a\u4ec0\u4e48\u7528\u6a21\u677f\u7c7b\u3002", "\u7b54\uff1a(1)\u53ef\u7528\u6765\u521b\u5efa\u52a8\u6001\u589e\u957f\u548c\u51cf\u5c0f\u7684\u6570\u636e\u7ed3\u6784", "\uff082\uff09\u5b83\u662f\u7c7b\u578b\u65e0\u5173\u7684\uff0c\u56e0\u6b64\u5177\u6709\u5f88\u9ad8\u7684\u53ef\u590d\u7528\u6027\u3002", "\uff083\uff09\u5b83\u5728\u7f16\u8bd1\u65f6\u800c\u4e0d\u662f\u8fd0\u884c\u65f6\u68c0\u67e5\u6570\u636e\u7c7b\u578b\uff0c\u4fdd\u8bc1\u4e86\u7c7b\u578b\u5b89\u5168", "\uff084\uff09\u5b83\u662f\u5e73\u53f0\u65e0\u5173\u7684\uff0c\u53ef\u79fb\u690d\u6027", "\uff085\uff09\u53ef\u7528\u4e8e\u57fa\u672c\u6570\u636e\u7c7b\u578b", "\n\t", "6. \u51fd\u6570\u6a21\u677f\u4e0e\u7c7b\u6a21\u677f\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\u7b54\uff1a\u51fd\u6570\u6a21\u677f\u7684\u5b9e\u4f8b\u5316\u662f\u7531\u7f16\u8bd1\u7a0b\u5e8f\u5728\u5904\u7406\u51fd\u6570\u8c03\u7528\u65f6\u81ea\u52a8\u5b8c\u6210\u7684\uff0c\u800c\u7c7b\u6a21\u677f\u7684\u5b9e\u4f8b\u5316\u5fc5\u987b\u7531\u7a0b\u5e8f\u5458\u5728\u7a0b\u5e8f\u4e2d\u663e\u5f0f\u5730\u6307\u5b9a\u3002\n", "7. C++\u4e2d\u4ec0\u4e48\u6570\u636e\u5206\u914d\u5728\u6808\u6216\u5806\u4e2d\uff0cnew\u5206\u914d\u7684\u6570\u636e\u662f\u5728\u5806\u8fd8\u662f\u6808\u4e2d\uff1f", "\u7b54\uff1a\u6808: \u5b58\u653e\u5c40\u90e8\u53d8\u91cf\uff0c\u51fd\u6570\u8c03\u7528\u53c2\u6570,\u51fd\u6570\u8fd4\u56de\u503c\uff0c\u51fd\u6570\u8fd4\u56de\u5730\u5740\u3002\u7531\u7cfb\u7edf\u7ba1\u7406", "\u5806: \u7a0b\u5e8f\u8fd0\u884c\u65f6\u52a8\u6001\u7533\u8bf7\uff0cnew \u548c\u3000malloc\u7533\u8bf7\u7684\u5185\u5b58\u5c31\u5728\u5806\u4e0a\n", "8. \u4e00\u822c\u6570\u636e\u5e93\u82e5\u51fa\u73b0\u65e5\u5fd7\u6ee1\u4e86\uff0c\u4f1a\u51fa\u73b0\u4ec0\u4e48\u60c5\u51b5\uff0c\u662f\u5426\u8fd8\u80fd\u4f7f\u7528\uff1f", "\u7b54\uff1a\u53ea\u80fd\u6267\u884c\u67e5\u8be2\u7b49\u8bfb\u64cd\u4f5c\uff0c\u4e0d\u80fd\u6267\u884c\u66f4\u6539\uff0c\u5907\u4efd\u7b49\u5199\u64cd\u4f5c\uff0c\u539f\u56e0\u662f\u4efb\u4f55\u5199\u64cd\u4f5c\u90fd\u8981\u8bb0\u5f55\u65e5\u5fd7\u3002\u4e5f\u5c31\u662f\u8bf4\u57fa\u672c\u4e0a\u5904\u4e8e\u4e0d\u80fd\u4f7f\u7528\u7684\u72b6\u6001\u3002\n", "9. winsock\u5efa\u7acb\u8fde\u63a5\u7684\u4e3b\u8981\u5b9e\u73b0\u6b65\u9aa4\u662f\u4ec0\u4e48\uff1f\n", "\u7b54\uff1a\u670d\u52a1\u5668\u7aef\uff1asocker()\u5efa\u7acb\u5957\u63a5\u5b57\uff0c\u7ed1\u5b9a\uff08bind\uff09\u5e76\u76d1\u542c\uff08listen\uff09\uff0c\u7528accept\uff08\uff09\u7b49\u5f85\u5ba2\u6237\u7aef\u8fde\u63a5\u3002", "\u5ba2\u6237\u7aef\uff1asocker()\u5efa\u7acb\u5957\u63a5\u5b57\uff0c\u8fde\u63a5\uff08connect\uff09\u670d\u52a1\u5668\uff0c\u8fde\u63a5\u4e0a\u540e\u4f7f\u7528send()\u548crecv\uff08\uff09\uff0c\u5728\u5957\u63a5\u5b57\u4e0a\u5199\u8bfb\u6570\u636e\uff0c\u76f4\u81f3\u6570\u636e\u4ea4\u6362\u5b8c\u6bd5\uff0cclosesocket()\u5173\u95ed\u5957\u63a5\u5b57\u3002", "\u670d\u52a1\u5668\u7aef\uff1aaccept\uff08\uff09\u53d1\u73b0\u6709\u5ba2\u6237\u7aef\u8fde\u63a5\uff0c\u5efa\u7acb\u4e00\u4e2a\u65b0\u7684\u5957\u63a5\u5b57\uff0c\u81ea\u8eab\u91cd\u65b0\u5f00\u59cb\u7b49\u5f85\u8fde\u63a5\u3002\u8be5\u65b0\u4ea7\u751f\u7684\u5957\u63a5\u5b57\u4f7f\u7528send()\u548crecv\uff08\uff09\u5199\u8bfb\u6570\u636e\uff0c\u76f4\u81f3\u6570\u636e\u4ea4\u6362\u5b8c\u6bd5\uff0cclosesocket()\u5173\u95ed\u5957\u63a5\u5b57\u3002\n", "10\uff0e\u8bf7\u95ee\u4ea4\u6362\u673a\u548c\u8def\u7531\u5668\u5404\u81ea\u7684\u5b9e\u73b0\u539f\u7406\u662f\u4ec0\u4e48\uff1f\u5206\u522b\u5728\u54ea\u4e2a\u5c42\u6b21\u4e0a\u9762\u5b9e\u73b0\u7684\uff1f", "\u7b54\uff1a\u4ea4\u6362\u673a\u5c5e\u4e8e\uff2f\uff33\uff29\u7b2c\u4e8c\u5c42\u5373\u6570\u636e\u94fe\u8def\u5c42\u8bbe\u5907\u3002\u5b83\u6839\u636e\uff2d\uff21\uff23\u5730\u5740\u5bfb\u5740\uff0c\u901a\u8fc7\u7ad9\u8868\u9009\u62e9\u8def\u7531\uff0c\u7ad9\u8868\u7684\u5efa\u7acb\u548c\u7ef4\u62a4\u7531\u4ea4\u6362\u673a\u81ea\u52a8\u8fdb\u884c\u3002\u8def\u7531\u5668\u5c5e\u4e8e\uff2f\uff33\uff29\u7b2c\u4e09\u5c42\u5373\u7f51\u7edc\u5c42\u8bbe\u5907\uff0c\u5b83\u6839\u636e\uff29\uff30\u5730\u5740\u8fdb\u884c\u5bfb\u5740\uff0c\u901a\u8fc7\u8def\u7531\u8868\u8def\u7531\u534f\u8bae\u4ea7\u751f\u3002\u4ea4\u6362\u673a\u6700\u5927\u7684\u597d\u5904\u662f\u5feb\u901f\uff0c\u8def\u7531\u5668\u6700\u5927\u7684\u597d\u5904\u662f\u63a7\u5236\u80fd\u529b\u5f3a\u3002\n", "\n\u00a0", "1. \u7b54\uff1a8,10,12,14,16", "\u8be5\u9898\u6bd4\u8f83\u7b80\u5355\u3002\u53ea\u8981\u6ce8\u610fb\u58f0\u660e\u4e3astatic\u9759\u6001\u5168\u5c40\u53d8\u91cf\uff0c\u5176\u503c\u5728\u4e0b\u6b21\u8c03\u7528\u65f6\u662f\u53ef\u4ee5\u4fdd\u6301\u4f4f\u539f\u6765\u7684\u8d4b\u503c\u7684\u5c31\u53ef\u4ee5\u3002\n", "2\u3001 20\uff0c\u4e00\u9053\u8fb9\u754c\u5bf9\u9f50\u7684\u9898\u76ee\uff0c\u5f88\u591a\u5730\u65b9\u6709\u8bb2\uff0c\u6b64\u5904\u6ce8\u610f\u4e0b\u8054\u5408\u7684\u5185\u5b58\u5927\u5c0f\u53d6\u51b3\u4e8e\u5176\u4e2d\u5b57\u8282\u6570\u6700\u591a\u7684\u6210\u5458\u5c31\u53ef\u3002\n", "3.\u7b54\uff1aa[q-p]=a[2]=2;\u8fd9\u9898\u662f\u8981\u544a\u8bc9\u6211\u4eec\u6307\u9488\u7684\u8fd0\u7b97\u7279\u70b9", "\u7b54\uff1a\u6b64\u5904\u5b9a\u4e49\u7684\u662f\u6307\u5411\u6307\u9488\u7684\u6307\u9488\u6570\u7ec4\uff0c\u5bf9\u4e8e32\u4f4d\u7cfb\u7edf\uff0c\u6307\u9488\u5360\u5185\u5b58\u7a7a\u95f44\u5b57\u8282\uff0c\u56e0\u6b64\u603b\u7a7a\u95f4\u4e3a3\u00d75\u00d74\uff1d60\u3002\n", "5\uff0e", "6.", "7 25", "7.", "x\u5728PC\u673a\u4e0a\u7684\u5185\u5b58\u5b58\u653e\u987a\u5e8f\u4e3a78 56 34 12\uff0c\u9ad8\u5b57\u8282\u5728\u524d\uff0c\u4f4e\u5b57\u8282\u5728\u540e\uff0c\u56e0\u6b64\u8f93\u51fa78563412", "8\uff0e ", "\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1aAb\uff0c\u56e0\u4e3a\u5728fun\u51fd\u6570\u91cc\uff0c\u6307\u9488a\u6307\u5411s2\u5b58\u50a8\u533a(a=b),\u63a5\u7740\u8ba9s2\u5b58\u50a8\u533a\u7684\u503c\u52a01\u5f97\u2019b\u2019 ((*a)++),\u6240\u4ee5s2\u7b49\u4e8e\u2019b\u2019\uff0cs1\u4e0d\u53d8\u3002", "\n\t", "1.\u4e3b\u8981\u6539\u6b63SaveString\u51fd\u6570", "void SaveString(const char* pText) ", "{", "Allocte(strlen(pText)+1); ", "strcpy(m_pBuffer, pText);", "}", "2)  \u7b54\uff1a\u6539\u6b63\u540e\u4e3a", "#include ", "#include ", "char * GetName (void)", "{", "//To return \u201cMSR Asia\u201d String", "//char name[]=\u201dMSR Asia\u201d; ", "\n\t\t", "char *name=(char *)malloc(strlen(\u201cMSR Asia\u201d)+1); ", "strcpy(name,\u201dMSR Asia\u201d);", "return name;", "}", "void main(int argc, char* argv[])", "{", "char name[32];", "//Fill in zeros into name", "for(int i=0;i<=32;i++)", "{", "name[i]=\u2019\\0\u2032;", "}", "//copy \u201cWelcome\u201d to name", "//name=\u201dWelcome\u201d; ", "strcat(name,\u201dWelcome \u201c);", "//Append a blank char", "// name[8]=\u2019 \u2018; ", "//Append string to name", "char *p=GetName(); ", "strcat(name,p);", "free (p);", "//print out", "printf(name);", "}", "\n\t", "\n\u00a0", "1.\u5c06\u6574\u6570\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\uff1avoid itoa(int,char);", "\u4f8b\u5982itoa(-123,s[])\u5219s=\u201d-123\u2033;", "\u7b54\uff1a", "char* itoa(int value, char* string)", "{", "char tmp[33];", "char* tp = tmp;", "int i;", "unsigned v;", "char* sp;", "// \u5c06\u503c\u8f6c\u4e3a\u6b63\u503c", "if (value < 0)", "v = -value;", "else", "v = (unsigned)value;", "// \u5c06\u6570\u8f6c\u6362\u4e3a\u5b57\u7b26\u653e\u5728\u6570\u7ec4tmp\u4e2d", "while (v)", "{", "i = v % 10;", "v = v / 10;", "*tp++ = i+\u20190\u2032;", "}", "// \u5c06tmp\u91cc\u7684\u5b57\u7b26\u586b\u5165string\u6307\u9488\u91cc\uff0c\u5e76\u52a0\u4e0a\u8d1f\u53f7\uff08\u5982\u679c\u6709\uff09 ", "sp = string;", "if (value < 0)", "*sp++ = \u2018-\u2019;", "while (tp > tmp)", "*sp++ = *\u2013tp;", "*sp = 0;", "return string;", "}\n", "\n\u00a0", "\n\u00a0", "2. ", "#define N 8", "int main()", "{", "int i;", "int j;", "int k;", "for(i=0;i<N;I++)", "{", "for(j=0;j<I+1;J++)", "{", "printf(\u201c*\u201d);", "for(k=0;k<I;K++)", "printf(\u201c.\u201d);", "}", "printf(\u201c\\n\u201d);", "}", "return 0;", "}", "3\uff0e ", "\u4f7f\u7528\u9009\u62e9\u6392\u5e8f\u6cd5\uff0c\u6211\u4e3asort\u51fd\u6570\u591a\u52a0\u4e86\u4e24\u4e2a\u5f62\u53c2\uff0c\u81f3\u5c11\u7b2c\u4e00\u4e2a\u662f\u5fc5\u987b\u7684\uff0c\u5426\u5219\u65e0\u6cd5\u4f20\u5165\u5f85\u6392\u5e8f\u6570\u7ec4\u3002\u4e0d\u77e5\u9053\u8fd9\u6837\u505a\u662f\u5426\u7b26\u5408\u9898\u610f\u3002", "void sort(int *array,int num)", "{", "int temp;", "for(int i=0;i<NUM-1;I++)", "for(int j=i+1;j<NUM;J++)", "if (array[i]<ARRAY[J])", "{temp=array[i];", "array[i]=array[j];", "array[j]=temp;", "}", "}\n", "4. ", "\u4f7f\u7528\u9012\u5f52\uff0c\u7406\u7531\u662f\u9012\u5f52\u7f16\u7a0b\u7b80\u5355,\u4ee3\u7801\u5bb9\u6613\u7406\u89e3,\u4f46\u7f3a\u70b9\u662f\u6548\u7387\u4e0d\u9ad8,\u800c\u4e14\u6709\u6df1\u5ea6\u9650\u5236,\u5982\u679c\u6df1\u5ea6\u592a\u6df1,\u5219\u5806\u6808\u4f1a\u6ea2\u51fa\u3002", "int Pheponatch(int N)", "{", "if (N==3) ", "return 2;", "else if (N==2||N==1) ", "return 1; ", "else", "return Pheponatch(N-1)+Pheponatch(N-2);", "}", "\n\t", "\n\u00a0", "5.\u8bf7\u7528\u6807\u51c6C\u8bed\u8a00\u5b9e\u73b0\u4e00\u4e2a\u53cc\u5411\u5faa\u73af\u94fe\u8868\u7684\u67e5\u627e\u4e0e\u5220\u9664\u3002", "typedef struct doublecyclelink{", "int key;", "struct doublecyclelink *prev;", "struct doublecyclelink *next;", "}DoubleCycleLinkT;", "DoubleCycleLinkT *findKey(DoubleCycleLinkT *link,int key);", "\u904d\u5386\u6574\u4e2a\u53cc\u5411\u5faa\u73af\u94fe\u8868\uff0c\u5c06\u7b2c\u4e00\u4e2a\u4e0ekey\u503c\u76f8\u540c\u7684\u7ed3\u70b9\u79fb\u51fa\u94fe\u8868\uff0c\u5e76\u8fd4\u56de\u3002", "\u82e5\u6ca1\u6709\u627e\u5230\u5219\u8fd4\u56deNULL\u3002", "\u7b54\uff1a", "\u51fd\u6570\u4e3a", "DoubleCycleLinkT *findKey(DoubleCycleLinkT *link,int key)", "{", "DoubleCycleLinkT *p;", "p=link->next;", "while (p->next!=link) // \u94fe\u8868\u7ed3\u5c3e", "{", "if (p->key==key) // \u67e5\u627e\u5230key\u503c\u76f8\u540c,\u5220\u9664\u8be5\u8282\u70b9,\u5e76\u8fd4\u56de", "{", "p->prev->next=p->next;", "p->next->prev=p->prev;", "free(p);", "return link;", "}", "else ", "p=p->next; // \u5426\u5219\u67e5\u627e\u4e0b\u4e00\u8282\u70b9", "}", "if (p->next == link) return NULL; //\u6ca1\u627e\u5230\uff0c\u8fd4\u56deNULL ", "}", "\n\t"], "title": "C++\u5e94\u8058\u6559\u5e08\u7b14\u8bd5\u9898\u53ca\u7b54\u6848"},
{"contents": ["\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "1\u3001\u4ece\u4f9b\u9009\u62e9\u7684\u7b54\u6848\u4e2d\uff0c\u9009\u51fa\u5e94\u586b\u5165\u4e0b\u9762\u53d9\u8ff0\u4e2d__?__\u5185\u7684\u6700\u786e\u5207\u7684\u89e3\u7b54\uff0c\u628a\u76f8\u5e94\u7f16\u53f7\u5199\u5728\u7b54\u5377\u7684\u5bf9\u5e94\u680f\u5185\u3002\n", "\u3000\u3000\u67d0\u4e9b\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5c06\u4e00\u6761\u547d\u4ee4\u7684\u6267\u884c\u7ed3\u679c\u8f93\u51fa\u7ed9\u4e0b\u4e00\u6761\u547d\u4ee4\uff0c\u4f5c\u4e3a\u5176\u8f93\u5165\u5e76\u52a0\u4ee5\u5904\u7406\uff0c\u8fd9\u662f\u7cfb\u7edf\u7684__A__\u673a\u5236\u3002\u4f7f\u547d\u4ee4\u6240\u9700\u8981\u7684\u4fe1\u606f\u4e0d\u4ece\u952e\u76d8\u63a5\u6536\uff0c\u800c\u53d6\u81ea\u53e6\u4e00\u4e2a\u6587\u4ef6\uff0c\u8fd9\u662f\u7cfb\u7edf\u7684__B__\u673a\u5236\u3002\u4f7f\u547d\u4ee4\u7684\u6267\u884c\u7ed3\u679c\u76f4\u63a5\u5f15\u5411\u53e6\u4e00\u4e2a\u6587\u4ef6\uff0c\u800c\u4e0d\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\uff0c\u8fd9\u662f\u7cfb\u7edf\u7684__C__\u673a\u5236\u3002\u64cd\u4f5c\u7cfb\u7edf\u4e0d\u4ece\u952e\u76d8\u9010\u6761\u63a5\u6536\u547d\u4ee4\u5e76\u6267\u884c\uff0c\u800c\u8c03\u7528\u4e00\u4e2a\u6b63\u6587\u6587\u4ef6\uff0c\u6267\u884c\u5176\u4e2d\u7684\u4e00\u7cfb\u5217\u547d\u4ee4\uff0c\u8fd9\u79cd\u65b9\u5f0f\u79f0\u4e3a__D__\u65b9\u5f0f\uff0c\u7f16\u5199\u8fd9\u6837\u7684\u6587\u4ef6\u5e94\u7b26\u5408__E__\u8bed\u8a00\u7684\u8bed\u6cd5\u89c4\u5219\u3002\n", "\u4f9b\u9009\u62e9\u7684\u7b54\u6848\n", "\u3000\u3000\uff21\uff1a(1)\u94fe\u63a5\u3000\u3000\u3000(2)\u8f93\u5165\u91cd\u5b9a\u5411(3)\u7ba1\u9053\u3000\u3000(4)\u8f93\u51fa\u91cd\u5b9a\u5411\n", "\u3000\u3000\uff22\uff1a(1)\u8f93\u5165\u91cd\u5b9a\u5411(2)\u7ba1\u9053\u3000\u3000\u3000(3)\u8bfb\u4fdd\u62a4\u3000(4)\u6279\u5904\u7406\n", "\u3000\u3000\uff23\uff1a(1)\u7ba1\u9053\u3000\u3000\u3000(2)\u8f93\u51fa\u91cd\u5b9a\u5411(3)\u6e05\u5c4f\u3000\u3000(4)\u663e\u793a\u5c4f\u853d\n", "\u3000\u3000\uff24\uff1a(1)\u521d\u59cb\u88c5\u5165\u3000(2)\u6279\u5904\u7406\u3000\u3000(3)\u7ba1\u9053\u3000\u3000(4)\u7cfb\u7edf\u751f\u6210\n", "\u3000\u3000\uff25\uff1a(1)\u547d\u4ee4\u5b9a\u5411\u3000(2)\u673a\u5668\u6307\u4ee4\u3000(3)\u4eba\u673a\u4f1a\u8bdd(4)\u4f5c\u4e1a\u63a7\u5236\n", "\n\u00a0", "2\u3001\u4ece\u4f9b\u9009\u62e9\u7684\u7b54\u6848\u4e2d\uff0c\u9009\u51fa\u5e94\u586b\u5165\u4e0b\u9762\u53d9\u8ff0\u4e2d__?__\u5185\u7684\u6700\u786e\u5207\u7684\u89e3\u7b54\uff0c\u628a\u76f8\u5e94\u7f16\u53f7\u5199\u5728\u7b54\u5377\u7684\u5bf9\u5e94\u680f\u5185\u3002\n", "\u3000\u3000\u7f16\u5236\u4e00\u4e2a\u597d\u7684\u7a0b\u5e8f\u9996\u5148\u8981\u786e\u4fdd\u5b83\u7684\u6b63\u786e\u6027\u548c\u53ef\u9760\u6027\uff0c\u9664\u6b64\u4ee5\u5916\uff0c\u901a\u5e38\u66f4\u6ce8\u91cd\u6e90\u7a0b\u5e8f\u7684__A__\u3002\u6b64\u5916\uff0c\u8fd8\u5e94\u5f3a\u8c03\u826f\u597d\u7684\u7f16\u7a0b\u98ce\u683c\uff0c\u4f8b\u5982\uff0c\u9009\u62e9\u6807\u8bc6\u7b26\u7684\u540d\u5b57\u65f6\u5e94\u8003\u8651__B__\uff1b\u5728\u4e66\u5199\u8bed\u53e5\u65f6\u5e94\u8003\u8651__C__\uff1b\u5728\u4e66\u5199\u529f\u80fd\u6027\u6ce8\u89e3\u65f6\u5e94\u8003\u8651__D__\u3002\n", "\u3000\u3000\u6e90\u7a0b\u5e8f\u4e2d\u5e94\u5305\u542b\u4e00\u4e9b\u5185\u90e8\u6587\u6863\uff0c\u4ee5\u5e2e\u52a9\u9605\u8bfb\u548c\u7406\u89e3\u6e90\u7a0b\u5e8f\uff0c\u6e90\u7a0b\u5e8f\u7684\u5185\u90e8\u6587\u6863\u901a\u5e38\u5305\u62ec\u9009\u62e9\u5408\u9002\u7684\u6807\u8bc6\u7b26\u3001\u6ce8\u89e3\u548c__E__\u3002\n", "\u4f9b\u9009\u62e9\u7684\u7b54\u6848\n", "\u3000\u3000\uff21\uff1a(1)\u6613\u4f7f\u7528\u6027\u3001\u6613\u7ef4\u62a4\u6027\u548c\u6548\u7387\u3000\u3000(2)\u6613\u4f7f\u7528\u6027\u3001\u6613\u7ef4\u62a4\u6027\u548c\u6613\u79fb\u690d\u6027\n", "\u3000\u3000\u3000\u3000(3)\u6613\u7406\u89e3\u6027\u3001\u6613\u6d4b\u8bd5\u6027\u548c\u6613\u4fee\u6539\u6027(4)\u6613\u7406\u89e3\u6027\u3001\u5b89\u5168\u6027\u548c\u6548\u7387\n", "\u3000\u3000\uff22\uff1a(1)\u540d\u5b57\u957f\u5ea6\u8d8a\u77ed\u8d8a\u597d\uff0c\u4ee5\u51cf\u5c11\u6e90\u7a0b\u5e8f\u7684\u8f93\u5165\u91cf\n", "\u3000\u3000\u3000\u3000(2)\u591a\u4e2a\u53d8\u91cf\u5171\u7528\u4e00\u4e2a\u540d\u5b57\uff0c\u4ee5\u51cf\u5c11\u53d8\u91cf\u540d\u7684\u6570\u76ee\n", "\u3000\u3000\u3000\u3000(3)\u9009\u62e9\u542b\u4e49\u660e\u786e\u7684\u540d\u5b57\uff0c\u4ee5\u6b63\u786e\u63d0\u793a\u6240\u4ee3\u8868\u7684\u5b9e\u4f53\n", "\u3000\u3000\u3000\u3000(4)\u5c3d\u91cf\u7528\u5173\u952e\u5b57\u4f5c\u540d\u5b57\uff0c\u4ee5\u4f7f\u540d\u5b57\u6807\u51c6\u5316\n", "\u3000\u3000\uff23\uff1a(1)\u628a\u591a\u4e2a\u77ed\u7684\u8bed\u53e5\u5199\u5728\u540c\u4e00\u884c\u4e2d\uff0c\u4ee5\u51cf\u5c11\u6e90\u7a0b\u5e8f\u7684\u884c\u6570\n", "\u3000\u3000\u3000\u3000(2)\u5c3d\u91cf\u4f7f\u7528\u6807\u51c6\u6587\u672c\u4ee5\u5916\u7684\u6709\u7279\u6b8a\u529f\u6548\u7684\u8bed\u53e5\uff0c\u4ee5\u63d0\u9ad8\u7a0b\u5e8f\u7684\u529f\u6548\n", "\u3000\u3000\u3000\u3000(3)\u5c3d\u91cf\u6d88\u9664\u8868\u8fbe\u5f0f\u4e2d\u7684\u62ec\u53f7\uff0c\u4ee5\u7b80\u5316\u8868\u8fbe\u5f0f\n", "\u3000\u3000\u3000\u3000(4)\u907f\u514d\u4f7f\u7528\u6d4b\u8bd5\u6761\u4ef6\u201d\u975e\u201d\uff0c\u4ee5\u63d0\u9ad8\u7a0b\u5e8f\u7684\u53ef\u8bfb\u6027\n", "\u3000\u3000\uff24\uff1a(1)\u4ec5\u4e3a\u6574\u4e2a\u7a0b\u5e8f\u4f5c\u6ce8\u89e3\u3000(2)\u4ec5\u4e3a\u6bcf\u4e2a\u6a21\u5757\u4f5c\u6ce8\u89e3\n", "\u3000\u3000\u3000\u3000(3)\u4e3a\u7a0b\u5e8f\u6bb5\u4f5c\u6ce8\u89e3\u3000\u3000\u3000(4)\u4e3a\u6bcf\u4e2a\u8bed\u53e5\u4f5c\u6ce8\u89e3\n", "\u3000\u3000\uff25\uff1a(1)\u7a0b\u5e8f\u7684\u89c6\u89c9\u7ec4\u7ec7\u3000\u3000\u3000(2)\u5c3d\u91cf\u4e0d\u7528\u6216\u5c11\u7528\uff27\uff2f\uff34\uff2f\u8bed\u53e5\n", "\u3000\u3000\u3000\u3000(3)\u68c0\u67e5\u8f93\u5165\u6570\u636e\u7684\u6709\u6548\u6027(4)\u8bbe\u8ba1\u826f\u597d\u7684\u8f93\u51fa\u62a5\u8868\n", "\n\u00a0", "3\u3001\u4ece\u4f9b\u9009\u62e9\u7684\u7b54\u6848\u4e2d\uff0c\u9009\u51fa\u5e94\u586b\u5165\u4e0b\u9762\u53d9\u8ff0\u4e2d__?__\u5185\u7684\u6700\u786e\u5207\u7684\u89e3\u7b54\uff0c\u628a\u76f8\u5e94\u7f16\u53f7\u5199\u5728\u7b54\u5377\u7684\u5bf9\u5e94\u680f\u5185\u3002\n", "\u3000\u3000\u8ba1\u7b97\u673a\u4e2d\u5341\u516d\u4f4d\u6d6e\u70b9\u6570\u7684\u8868\u793a\u683c\u5f0f\u4e3a\n", "\u3000\u3000\u3000\u3000\u3000\uff10\u3000  \uff13\uff14\u3000\u3000\u3000\u3000\u3000\u3000\uff11\uff15\n", "\u3000\u3000\u3000\u3000\u3000\u250e\u2500\u2500\u2533\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2512\u3000\n", "\u3000\u3000\u3000\u3000\u3000\u2503\u9636\u7801\u2503\u5c3e\u6570\uff08\u542b\u5c3e\u7b26\uff09\u2503\n", "\u3000\u3000\u3000\u3000\u3000\u2517\u2500\u2500\u253b\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u251b\n", "\u3000\u3000\u67d0\u673a\u5668\u7801\u4e3a\uff11\uff11\uff11\uff10\uff10\uff10\uff11\uff10\uff11\uff10\uff10\uff10\uff10\uff10\uff10\uff10\u3002\n", "\u3000\u3000\u82e5\u9636\u7801\u4e3a\u79fb\u7801\u4e14\u5c3e\u6570\u4e3a\u53cd\u7801\uff0c\u5219\u5176\u5341\u8fdb\u5236\u771f\u503c\u4e3a__A__\uff1b\n", "\u3000\u3000\u82e5\u9636\u7801\u4e3a\u79fb\u7801\u4e14\u5c3e\u6570\u4e3a\u539f\u7801\uff0c\u5219\u5176\u5341\u8fdb\u5236\u771f\u503c\u4e3a__B__\uff1b\n", "\u3000\u3000\u82e5\u9636\u7801\u4e3a\u8865\u7801\u4e14\u5c3e\u6570\u4e3a\u53cd\u7801\uff0c\u5219\u5176\u5341\u8fdb\u5236\u771f\u503c\u4e3a__C__\uff1b\n", "\u3000\u3000\u82e5\u9636\u7801\u4e3a\u8865\u7801\u4e14\u5c3e\u6570\u4e3a\u539f\u7801\uff0c\u5219\u5176\u5341\u8fdb\u5236\u771f\u503c\u4e3a__D__\uff0c\u5c06\u5176\u89c4\u683c\u5316\u540e\u7684\u673a\u5668\u7801\u4e3a__E__\u3002\u3000\u3000\n", "\u4f9b\u9009\u62e9\u7684\u7b54\u6848\n", "\u3000\u3000\uff21\u2014\uff24\uff1a(1)0.078125    (2)20    (3)1.25    (4)20.969375\n", "\u3000\u3000\uff25\uff1a\u3000\u3000(1)1110001010000000(2)11110101000000\n", "\u3000\u3000\u3000\u3000\u3000\u3000(3)1101010100000000(4)11110001010000\n", "\n\u00a0", "4\u3001\u4ece\u4f9b\u9009\u62e9\u7684\u7b54\u6848\u4e2d\uff0c\u9009\u51fa\u5e94\u586b\u5165\u4e0b\u9762\u53d9\u8ff0\u4e2d__?__\u5185\u7684\u6700\u786e\u5207\u7684\u89e3\u7b54\uff0c\u628a\u76f8\u5e94\u7f16\u53f7\u5199\u5728\u7b54\u5377\u7684\u5bf9\u5e94\u680f\u5185\u3002\n", "\u3000\u3000\u8ba1\u7b97\u673a\u4e2d\u6307\u4ee4\u7684\u6267\u884c\u8fc7\u7a0b\u53ef\u4ee5\u6982\u62ec\u4e3a\u4ee5\u4e0b\u6b65\u9aa4\uff1a\n", "\u3000\u3000(1)\u8bfb\u53d6\u6307\u4ee4\u3002\u628a__A__\u4e2d\u7684\u5185\u5bb9\u7ecf__B__\u9001\u5165\u5185\u5b58\u7684\u6709\u5173\u5bc4\u5b58\u5668\uff0c\u8bfb\u51fa\u5185\u5b58\u4e2d\u5b58\u8d2e\u7684\u6307\u4ee4\u5e76\u5c06\u5176\u9001\u5165__C__\u3002\n", "\u3000\u3000(2)\u6307\u4ee4\u8bd1\u7801\u3002__C__\u4e2d\u7684\u64cd\u4f5c\u7801\u90e8\u5206\u9001\u6307\u4ee4\u8bd1\u7801\u5668\u4ea7\u751f\u76f8\u5e94\u7684\u64cd\u4f5c\u63a7\u5236\u4fe1\u53f7\uff0c\u5730\u5740\u7801\u90e8\u5206\u5219__D__\u3002\n", "\u3000\u3000(3)\u6309\u6307\u4ee4\u64cd\u4f5c\u7801\u6267\u884c\u76f8\u5e94\u7684\u64cd\u4f5c\u548c\u8fd0\u7b97\u3002\n", "\u3000\u3000(4)\u5f62\u6210\u4e0b\u4e00\u6761\u8981\u53d6\u6307\u4ee4\u7684\u5730\u5740\u3002\u82e5\u672c\u6b21\u6307\u4ee4\u662f\u975e\u8f6c\u79fb\u6307\u4ee4\u6216\u65e0\u6761\u4ef6\u8f6c\u79fb\u6307\u4ee4\uff0c\u5219__A__\u4e2d\u5185\u5bb9\u52a0\u672c\u6b21\u6307\u4ee4\u5b57\u8282\u957f\u5ea6\u503c\u6216\u8005\u63a5\u7f6e\u4e3a\u4e0b\u4e00\u6307\u4ee4\u5730\u5740\u503c\uff0c\u82e5\u4e3a\u6761\u4ef6\u8f6c\u79fb\u6307\u4ee4\u5219__E__\u7684\u503c\u5c06\u5f71\u54cd__A__\u4e2d\u7f6e\u4ec0\u4e48\u503c\u3002\n", "\u4f9b\u9009\u62e9\u7684\u7b54\u6848\n", "\u3000\u3000\uff21\uff1a(1)\u6307\u4ee4\u5bc4\u5b58\u5668\u3000\u3000\u3000\u3000\u3000\u3000\u3000(2)\u7a0b\u5e8f\u8ba1\u6570\u5668\n", "\u3000\u3000\u3000\u3000(3)\u6808\u5730\u5740\u5bc4\u5b58\u5668\u3000\u3000\u3000\u3000\u3000\u3000(4)\u53d8\u5740\u5bc4\u5b58\u5668\n", "\u3000\u3000\uff22\uff1a(1)\u6570\u636e\u603b\u7ebf\u3000(2)\u63a7\u5236\u603b\u7ebf       (3)\u5730\u5740\u603b\u7ebf  (4)\uff29\uff0f\uff2f\u603b\u7ebf\n", "\u3000\u3000\uff23\uff1a(1)\u6307\u4ee4\u5bc4\u5b58\u5668\u3000\u3000\u3000\u3000\u3000\u3000\u3000(2)\u7a0b\u5e8f\u8ba1\u6570\u5668\n", "\u3000\u3000\u3000\u3000(3)\u6807\u5fd7\u5bc4\u5b58\u5668\u3000\u3000\u3000\u3000\u3000\u3000\u3000(4)cache\u5b58\u50a8\u5668\n", "\u3000\u3000\uff24\uff1a(1)\u4f5c\u4e3a\u64cd\u4f5c\u6570\u7684\u5185\u5b58\u5730\u5740\u53bb\u8bfb\u51fa\u64cd\u4f5c\u6570\n", "\u3000\u3000\u3000\u3000(2)\u4f5c\u4e3a\u64cd\u4f5c\u6570\u7684\u5bc4\u5b58\u5668\u5730\u5740\u53bb\u8bfb\u51fa\u64cd\u4f5c\u6570\n", "\u3000\u3000\u3000\u3000(3)\u4f5c\u4e3a\u64cd\u4f5c\u6570\u672c\u8eab\n", "\u3000\u3000\u3000\u3000(4)\u8981\u6309\u5bfb\u5740\u65b9\u5f0f\u6267\u884c\u76f8\u5e94\u64cd\u4f5c\u540e\u53bb\u83b7\u5f97\u64cd\u4f5c\u6570\n", "\u3000\u3000\uff25\uff1a(1)\u4e2d\u65ad\u5bc4\u5b58\u5668   (2)\u63a7\u5236\u5668\u3000     (3)\u6807\u5fd7\u5bc4\u5b58\u5668(4)\u6570\u636e\u5bc4\u5b58\u5668\n", "\n\u00a0", "5\u3001\u4ece\u4f9b\u9009\u62e9\u7684\u7b54\u6848\u4e2d\uff0c\u9009\u51fa\u5e94\u586b\u5165\u4e0b\u9762\u53d9\u8ff0\u4e2d__?__\u5185\u7684\u6700\u786e\u5207\u7684\u89e3\u7b54\uff0c\u628a\u76f8\u5e94\u7f16\u53f7\u5199\u5728\u7b54\u5377\u7684\u5bf9\u5e94\u680f\u5185\u3002\n", "\u3000\u3000I/O\u7cfb\u7edf\u4e3b\u8981\u6709\u4e09\u79cd\u65b9\u5f0f\u6765\u4e0e\u4e3b\u673a\u4ea4\u6362\u6570\u636e\uff0c\u5b83\u4eec\u662f__A__\u3001__B__\u548c__C__\u3002\u5176\u4e2d__A__\u4e3b\u8981\u7528\u8f6f\u4ef6\u65b9\u6cd5\u6765\u5b9e\u73b0\uff0cCPU\u7684\u6548\u7387\u4f4e\uff1b__B__\u8981\u6709\u786c\u4ef6\u548c\u8f6f\u4ef6\u4e24\u90e8\u5206\u6765\u5b9e\u73b0\uff0c\u5b83\u5229\u7528\u4e13\u95e8\u7684\u7535\u8def\u5411\uff23\uff30\uff35\u4e2d\u7684\u63a7\u5236\u5668\u53d1\u51faI/O\u670d\u52a1\u8bf7\u6c42\uff0c\u63a7\u5236\u5668\u5219__D__\u8f6c\u5165\u6267\u884c\u76f8\u5e94\u7684\u670d\u52a1\u7a0b\u5e8f\uff1b__C__\u4e3b\u8981\u7531\u786c\u4ef6\u6765\u5b9e\u73b0\uff0c\u6b64\u65f6\u9ad8\u901f\u5916\u8bbe\u548c\u5185\u5b58\u4e4b\u95f4\u8fdb\u884c\u6570\u636e\u4ea4\u6362__E__\u3002\n", "\u4f9b\u9009\u62e9\u7684\u7b54\u6848\n", "\u3000\u3000\uff21\uff1a(1)\u7a0b\u5e8f\u67e5\u8be2\u65b9\u5f0f\u3000\u3000\u3000\u3000\u3000\u3000\u3000(2)\u8bfb\uff0f\u5199\u6587\u4ef6\u65b9\u5f0f\n", "\u3000\u3000\u3000\u3000(3)\u6570\u636e\u5e93\u65b9\u5f0f\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000(4)\u5ba2\u6237\uff0f\u670d\u52a1\u5668\u65b9\u5f0f\n", "\u3000\u3000\uff22\uff1a(1)\uff24\uff2d\uff21\u65b9\u5f0f(2)\u6279\u5904\u7406\u65b9\u5f0f(3)\u4e2d\u65ad\u65b9\u5f0f(4)\u6570\u636e\u901a\u4fe1\u65b9\u5f0f\n", "\u3000\u3000\uff23\uff1a(1)\u4e2d\u65ad\u65b9\u5f0f\u3000(2)\uff24\uff2d\uff21\u65b9\u5f0f(3)\u5e76\u884c\u65b9\u5f0f(4)\u6d41\u6c34\u7ebf\u65b9\u5f0f\n", "\u3000\u3000\uff24\uff1a(1)\u7acb\u5373\u3000\u3000\u3000(2)\u5728\u6267\u884c\u5b8c\u5f53\u524d\u4e00\u6761\u6307\u4ee4\u540e\n", "\u3000\u3000\u3000\u3000(3)\u5728\u6267\u884c\u5b8c\u5f53\u524d\u7684\u4e00\u6bb5\u5b50\u7a0b\u5e8f\u540e(4)\u5728\u8be2\u95ee\u7528\u6237\u540e\n", "\u3000\u3000\uff25\uff1a(1)\u4e0d\u901a\u8fc7\uff23\uff30\uff35\u7684\u63a7\u5236\uff0c\u4e0d\u5229\u7528\u7cfb\u7edf\u603b\u7ebf\n", "\u3000\u3000\u3000\u3000(2)\u4e0d\u901a\u8fc7\uff23\uff30\uff35\u7684\u63a7\u5236\uff0c\u5229\u7528\u7cfb\u7edf\u603b\u7ebf\n", "\u3000\u3000\u3000\u3000(3)\u901a\u8fc7\uff23\uff30\uff35\u7684\u63a7\u5236\uff0c\u4e0d\u5229\u7528\u7cfb\u7edf\u603b\u7ebf\n", "\u3000\u3000\u3000\u3000(4)\u901a\u8fc7\uff23\uff30\uff35\u7684\u63a7\u5236\uff0c\u5229\u7528\u7cfb\u7edf\u603b\u7ebf\n", "\n\u00a0", "6\u3001\u4ece\u4f9b\u9009\u62e9\u7684\u7b54\u6848\u4e2d\uff0c\u9009\u51fa\u5e94\u586b\u5165\u4e0b\u9762\u53d9\u8ff0\u4e2d__?__\u5185\u7684\u6700\u786e\u5207\u7684\u89e3\u7b54\uff0c\u628a\u76f8\u5e94\u7f16\u53f7\u5199\u5728\u7b54\u5377\u7684\u5bf9\u5e94\u680f\u5185\u3002\n", "\u3000\u3000\u56fd\u9645\u7535\u4fe1\u8054\u76df\u7684\u7535\u4fe1\u6807\u51c6\u5316\u90e8\uff29\uff34\uff35\uff0d\uff34\u7684\u524d\u8eab\u662f__A__\uff0c\u5176\u53d1\u5e03\u7684X.200\u5efa\u8bae\u662f\u548c__B__\u5236\u5b9a\u7684\u5f00\u653e\u7cfb\u7edf\u4e92\u8fde\u4e03\u5c42\u53c2\u8003\u6a21\u578b(OSI)\u7b49\u4ef7\u7684\u3002\u4f5c\u4e3a\u6700\u7b80\u5355\u7684\u9632\u706b\u5899\u2014\u2014\u5206\u7ec4\u8fc7\u6ee4\u5668\u5728\u8be5\u6a21\u578b\u7684__C__\u5c42\u68c0\u67e5\u51fa\u5165\u5730\u5740\uff1b\u7f51\u6865\u662f\u5728\u8be5\u6a21\u578b__D__\u5c42\u8fdb\u884c\u7f51\u7edc\u95f4\u4e2d\u7ee7\u7684\u4e92\u8fde\u8bbe\u5907\uff1bUDP\u5219\u662fInternet\u4e2d\u5e38\u7528\u7684__E__\u5c42\u534f\u8bae\u4e4b\u4e00\u3002\n", "\u4f9b\u9009\u62e9\u7684\u7b54\u6848\n", "\uff21\u3001\uff22\uff1a(1)\uff21\uff2e\uff33\uff29(2)\uff29\uff33\uff2f(3)\uff23\uff23\uff29\uff34\uff34(4)\uff29\uff25\uff23\n", "\u3000\u3000\uff23\uff1a(1)\u7269\u7406\u3000\u3000(2)\u7f51\u7edc\u3000(3)\u4f1a\u8bdd\u3000\u3000\u3000(4)\u5e94\u7528\n", "\u3000\u3000\uff24\uff1a(1)\u7269\u7406\u3000\u3000(2)\u8fd0\u8f93\u3000(3)\u6570\u636e\u94fe\u8def\u3000(4)\u7f51\u7edc\n", "\u3000\u3000\uff25\uff1a(1)\u8fd0\u8f93\u3000\u3000(2)\u4f1a\u8bdd\u3000(3)\u8868\u793a\u3000\u3000\u3000(4)\u5e94\u7528\n", "\n\u00a0", "\u9605\u8bfb\u4e0b\u5217\u51fd\u6570\u8bf4\u660e\u548c\uff23\u4ee3\u7801\uff0c\u5c06\u5e94\u586b\u5165\u5176\u4e2d__(n)__\u5904\u7684\u5b57\u53e5\u5199\u5728\u7b54\u5377\u7684\u5bf9\u5e94\u680f\u5185\u3002\n", "\u3010\u51fd\u65701.1\u8bf4\u660e\u3011\n", "\u3000\u3000\u8bbe\u94fe\u8868\u7ed3\u70b9\u7684\u7c7b\u578b\u4e3a\n", "\u3000\u3000\u3000\u3000typedef struct elem{ int val;\n", "                         struct elem *next;\n", "                       }intNode;\n", "\u3000\u3000\u51fd\u6570merge(int *a,int *b)\u662f\u5c06\u4e24\u4e2a\u5347\u5e8f\u94fe\u8868a\u548cb\u5408\u5e76\u6210\u4e00\u4e2a\u5347\u5e8f\u94fe\u8868\u3002\n", "\u3010\u51fd\u65701.1\u3011\n", "    intNode *merge(intNode *a,intNode *b)\n", "    {  intNode *h=a,*p,*q;\n", "       while(b)\n", "       {  for (p=h;p&&p->val<b->val;q=p,p=p->next);\n", "          if (p==h) __(1)__;else __(2)__;\n", "          q=b;b=b->next; __(3)__;\n", "       }\n", "       return h;\n", "}\n", "\n\u00a0", "\u3010\u51fd\u65701.2\u8bf4\u660e\u3011\n", "\u3000\u3000\u9012\u5f52\u51fd\u6570dec(int a[],int n)\u5224\u65ad\u6570\u7ec4a[]\u7684\u524dn\u4e2a\u5143\u7d20\u662f\u5426\u662f\u4e0d\u9012\u589e\u7684\u3002\u4e0d\u9012\u589e\u8fd4\u56de\uff11\uff0c\u5426\u5219\u8fd4\u56de\uff10\u3002\n", "\u3010\u51fd\u65701.2\u3011\n", "    int dec(int a[],int n)\n", "    {  if (n<=1) __(4)__;\n", "       if (a[0]<a[1]) return 0;\n", "       return __(5)__;\n", "}\n", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "1\u3001\u4f60\u8ba9\u5de5\u4eba\u4e3a\u4f60\u5de5\u4f5c\uff17\u5929\uff0c\u7ed9\u5de5\u4eba\u7684\u56de\u62a5\u662f\u4e00\u6839\u91d1\u6761\u3002\u91d1\u6761\u5e73\u5206\u6210\u76f8\u8fde\u7684\uff17\u6bb5\uff0c\u4f60\u5fc5\u987b\u5728\u6bcf\u5929\u7ed3\u675f\u65f6\u7ed9\u4ed6\u4eec\u4e00\u6bb5\u91d1\u6761\uff0c\u5982\u679c\u53ea\u8bb8\u4f60\u4e24\u6b21\u628a\u91d1\u6761\u5f04\u65ad\uff0c\u4f60\u5982\u4f55\u7ed9\u4f60\u7684\u5de5\u4eba\u4ed8\u8d39\uff1f", "\n\u00a0", "\n\u00a0", "\n\u00a0", "2\u3001\u95e8\u5916\u4e09\u4e2a\u5f00\u5173\u5206\u522b\u5bf9\u5e94\u5ba4\u5185\u4e09\u76cf\u706f\uff0c\u7ebf\u8def\u826f\u597d\uff0c\u5728\u95e8\u5916\u63a7\u5236\u5f00\u5173\u65f6\u5019\u4e0d\u80fd\u770b\u5230\u5ba4\u5185\u706f\u7684\u60c5\u51b5\uff0c\u73b0\u5728\u53ea\u5141\u8bb8\u8fdb\u95e8\u4e00\u6b21\uff0c\u786e\u5b9a\u5f00\u5173\u548c\u706f\u7684\u5bf9\u5e94\u5173\u7cfb\uff1f\n", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\u4ece\u4f9b\u9009\u62e9\u7684\u7b54\u6848\u4e2d\uff0c\u9009\u51fa\u5e94\u586b\u5165\u4e0b\u9762\u53d9\u8ff0\u4e2d__?__\u5185\u7684\u6700\u786e\u5207\u7684\u89e3\u7b54\uff0c\u628a\u76f8\u5e94\u7f16\u53f7\u5199\u5728\u7b54\u5377\u7684\u5bf9\u5e94\u680f\u5185\u3002\n", "\u3000\u3000Software quality assurance is now an __A__ sub-discipline of software engineering. As Buckly and Oston point out,  __B__ software quality assurance is likely to lead to an ultimate __C__ of software costs. However, the major hurdle in the path of software management in this area is the lack of __D__ software standards. The  development of accepted and generally applicable standards should be one of the principal goals of __E__ in software engineering.\n", "\u4f9b\u9009\u62e9\u7684\u7b54\u6848\n", "\u3000\u3000\uff21\uff1a(1)emerging     (2)emergent  (3)engaging   (4)evolve\n", "\u3000\u3000\uff22\uff1a(1)effective      (2)effortless  (3)light          (4)week\n", "\u3000\u3000\uff23\uff1a(1)balance        (2)growth     (3)production (4)reduction\n", "\u3000\u3000\uff24\uff1a(1)usable          (2)usage       (3)useless       (4)useness\n", "\u3000\u3000\uff25\uff1a(1)management(2)planning  (3)production (4)research\n", "\n\u00a0", "\n\u00a0", "\u7f51\u7edc\u534f\u8baeHTTP\u3001FTP\u548cPOP3\u4f7f\u7528\u7684\u7aef\u53e3\u5206\u522b\u662f", "\u3002", "\u5b9a\u4e49int **a[3][4] , \u5219\u53d8\u91cfa\u5360\u6709\u7684\u5185\u5b58\u7a7a\u95f4\u4e3a\uff1a", "\u3002\n", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\u3000\u3000", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\t\t", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\t", "3-1-2-2-4   2-3-4-3-1   2-2-1-1-3   2-3-1-4-3   1-3-2-2-2   3-2-2-3-1\n", "\n\t", "(1) h = b\n", "(2) q->next = b\n", "(3) q->next = p\n", "(4) return 1\n", "(5) dec(a+1,n-1)\n", "\n\u00a0", "\n\t", "\n\t", "\uff081\uff09\u91cd\u70b9\u662f\u57fa\u7c7b\u4e2d\u7684\u4efb\u4f55Private\u5728\u6d3e\u751f\u7c7b\u4e2d\u90fd\u662f\u4e0d\u53ef\u8bbf\u95ee\u7684\u30024 2\u5206\u3002\n", "\uff086\uff09\u8ba1\u7b97\u5b50\u8868\u8fbe\u5f0f\u7684\u987a\u5e8f\u7531\u7f16\u8bd1\u5668\u51b3\u5b9a\u7684\uff0c\u867d\u7136\u53c2\u6570\u7684\u538b\u6808\u987a\u5e8f\u5728\u7ed9\u5b9a\u7684\u8c03\u7528\u65b9\u5f0f\u4e0b\u5f0f\u56fa\u5b9a\u7684\uff0c ", "\u4f46\u53c2\u6570\u8868\u8fbe\u5f0f\u7684\u8ba1\u7b97\u987a\u5e8f\u4e5f\u7531\u7f16\u8bd1\u5668\u51b3\u5b9a\u7684\u3002\u4e0d\u540c\u7684\u7f16\u8bd1\u5668\u6216\u4e0d\u540c\u7684\u8868\u8fbe\u5f0f\u8ba1\u7b97\u7684\u987a\u5e8f\u53ef\u80fd ", "\u4e0d\u4e00\u81f4\u3002 2\u5206\u3002\n", "3\u7a0b\u5e8f\u9898\u76ee8\u5206\n", "Sort(int a[] ,int n)\n", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "HTTP\u534f\u8bae\u752880\u7aef\u53e3\uff0c\u534f\u8bae\u752821\u7aef\u53e3\uff0cPOP3\u534f\u8bae\u7528110\u7aef\u53e3", " \u6240\u8c13\u7684\u56de\u8c03\u51fd\u6570\uff0c\u5c31\u662f\u9884\u5148\u5728\u7cfb\u7edf\u7684\u5bf9\u51fd\u6570\u8fdb\u884c\u6ce8\u518c\uff0c\u8ba9\u7cfb\u7edf\u77e5\u9053\u8fd9\u4e2a\u51fd\u6570\u7684\u5b58\u5728\uff0c\u4ee5\u540e\uff0c\u5f53\u67d0\u4e2a\u4e8b\u4ef6\u53d1\u751f\u65f6\uff0c\u518d\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u5bf9\u4e8b\u4ef6\u8fdb\u884c\u54cd\u5e94\u3002", "\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u7684\u6210\u5458\u51fd\u6570\u65f6\u5728\u8be5\u51fd\u6570\u524d\u52a0CALLBACK\u5373\u5c06\u5176\u5b9a\u4e49\u4e3a\u56de\u8c03\u51fd\u6570\uff0c\u51fd\u6570\u7684\u5b9e\u73b0\u548c\u666e\u901a\u6210\u5458\u51fd\u6570\u6ca1\u6709\u533a\u522b", "\n\u00a0", "\n\t\t", "\n\u00a0"], "title": "C++\u6280\u80fd\u6d4b\u8bd5\u8bd5\u5377\u4e8c\u53ca\u7b54\u6848"},
{"contents": ["#include <iostream>", "\nvoid delete_num(int a[],int n,int x);", "int main()", "\n{ using namespace std;", "\nconst int max=10;", "\nint x;", "\nint b[max]={1,12,14,3,14,15,4,3,17,16};", "\ncout<<\u201dplease input a number:\u201d;", "\ncin>>x;", "delete_num(b,max,x);", "\nreturn 0;", "\n}", "void delete_num(int a[],int n,int x)", "\n{", "\nusing namespace std;", "\nint m,j,i;", "\nm=n;", "\nfor(i=0;i<m;i++)", "\n{", "\nif ((a[i] == x) )", "\n{", "\nfor (j=i;j<m-1;j++)", "\n{", "\na[j]=a[j+1];", "}", "\nm=m-1;", "\n}", "}", "if (a[m]==x)", "\nfor(int p=0;p<m;p++)", "\n{", "\ncout<<a[p]<<\u201d \u201c;", "\n}", "\nelse", "\nfor(int q=0;q<m;q++)", "\n{", "\ncout<<a[q]<<\u201d \u201c;", "\n}", "\ncout<<endl;", "}"], "title": "C++\u9762\u8bd5\u9898\uff1a\u5199\u4e00\u4e2a\u51fd\u6570\u5220\u9664\u4e00\u4e2a\u6574\u578b\u6570\u7ec4\u4e2d\u6240\u6709\u7b49\u4e8e\u67d0\u4e2a\u6307\u5b9a\u503c\u7684\u5143\u7d20"},
{"contents": ["\uff08\u8bf4\u660e\uff1a\u5728\u672c\u8bd5\u5377\u4e2d\u7edf\u4e00\u89c4\u5b9a\u6574\u578b(int)\u6570\u636e\u5360\u75284\u4e2a\u5b57\u8282\u7684\u5b58\u50a8\u5355\u5143\u3002\uff09\n", "\n\u00a0", "1\u3001\u5728\u6bcf\u4e2aC++\u7a0b\u5e8f\u4e2d\u90fd\u5fc5\u987b\u5305\u542b\u6709\u8fd9\u6837\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u7684\u51fd\u6570\u540d\u4e3a\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u3002A.\u00a0main\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B.\u00a0MAIN\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C.\u00a0name\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D.\u00a0function\n", "2\u3001\u8bbex\u548cy\u5747\u4e3abool\u91cf\uff0c\u5219x&&y\u4e3a\u771f\u7684\u6761\u4ef6\u662f\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u3002\n", "A.\u00a0\u5b83\u4eec\u5747\u4e3a\u771f\u00a0\u00a0\u00a0\u00a0B.\u00a0\u5176\u4e2d\u4e00\u4e2a\u4e3a\u771f\u00a0\u00a0\u00a0\u00a0C.\u00a0\u5b83\u4eec\u5747\u4e3a\u5047\u00a0\u00a0\u00a0\u00a0\u00a0D.\u00a0\u5176\u4e2d\u4e00\u4e2a\u4e3a\u5047\n", "3\u3001\u4e0b\u9762\u7684\u54ea\u4e2a\u4fdd\u7559\u5b57\u4e0d\u80fd\u4f5c\u4e3a\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b\uff1f\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u3002A.\u00a0void\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B.\u00a0int\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C.\u00a0new\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D.\u00a0long\n", "4\u3001\u5047\u5b9aa\u4e3a\u4e00\u4e2a\u6574\u578b\u6570\u7ec4\u540d\uff0c\u5219\u5143\u7d20a[4]\u7684\u5b57\u8282\u5730\u5740\u4e3a\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u3002A.\u00a0a+4\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B.\u00a0a+8\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C.\u00a0a+16\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D.\u00a0a+32\n", "5\u3001\u5047\u5b9aAB\u4e3a\u4e00\u4e2a\u7c7b\uff0c\u5219\u6267\u884c\u201dAB\u00a0\u00a0a(4)\u00a0,\u00a0b[3]\u00a0,\u00a0*\u00a0p[2]\u00a0;\u201d\u8bed\u53e5\u65f6\uff0c\u81ea\u52a8\u8c03\u7528\u8be5\u7c7b\u6784\u9020\u51fd\u6570\u7684\u6b21\u6570\u4e3a\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u3002\n", "A.\u00a03\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B.\u00a04\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C.\u00a06\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D.\u00a09\n", "6\u3001\u5047\u5b9a\u8981\u5bf9\u7c7bAB\u5b9a\u4e49\u52a0\u53f7\u64cd\u4f5c\u7b26\u91cd\u8f7d\u6210\u5458\u51fd\u6570\uff0c\u5b9e\u73b0\u4e24\u4e2aAB\u7c7b\u5bf9\u8c61\u7684\u52a0\u6cd5\uff0c\u5e76\u8fd4\u56de\u76f8\u52a0\u7ed3\u679c\uff0c\u5219\u8be5\u6210\u5458\u51fd\u6570\u7684\u58f0\u660e\u8bed\u53e5\u4e3a\uff1a\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u3002           A.\u00a0\u00a0AB\u00a0\u00a0operator+(AB\u00a0\u00a0&\u00a0a\u00a0,\u00a0AB\u00a0\u00a0&\u00a0b)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B.\u00a0\u00a0AB\u00a0\u00a0operator+(AB\u00a0\u00a0&\u00a0a)\n", "C.\u00a0\u00a0operator+(AB\u00a0\u00a0a)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D.\u00a0\u00a0AB\u00a0\u00a0&\u00a0operator+(\u00a0)\u00a0\n", "\n\u00a0", "1\u3001C++\u8bed\u8a00\u4e2d\u7684\u6bcf\u6761\u57fa\u672c\u8bed\u53e5\u4ee5\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u4f5c\u4e3a\u7ed3\u675f\u7b26\uff0c\u6bcf\u6761\u590d\u5408\u8bed\u53e5\u4ee5\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u4f5c\u4e3a\u7ed3\u675f\u7b26\u3002\n", "2\u3001\u6267\u884c\u201dcout\u00a0\u00a0<<char(\u2018A\u2019+2)<<endl;\u201d\u8bed\u53e5\u540e\u5f97\u5230\u7684\u8f93\u51fa\u7ed3\u679c\u4e3a\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u3002\n", "3\u3001float\u00a0\u548c\u00a0double\u00a0\u7c7b\u578b\u7684\u5927\u5c0f\u5206\u522b\u4e3a\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u548c\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u3002\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n", "4\u3001\u7b97\u672f\u8868\u8fbe\u5f0f\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u5bf9\u5e94\u7684C++\u8868\u8fbe\u5f0f\u4e3a\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u3002\u00a0\n", "5\u3001\u5173\u7cfb\u8868\u8fbe\u5f0fx+y>5\u7684\u76f8\u53cd\u8868\u8fbe\u5f0f\u4e3a\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u3002\n", "6\u3001\u5047\u5b9a\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\u7684\u5b9a\u4e49\u4e3a\u201dchar\u00a0\u00a0*\u00a0a[8]\u00a0;\u201d\uff0c\u5219\u8be5\u6570\u7ec4\u6240\u542b\u5143\u7d20\u7684\u4e2a\u6570\u4e3a\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\uff0c\u6240\u5360\u5b58\u50a8\u7a7a\u95f4\u7684\u5b57\u8282\u6570\u4e3a\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u3002\n", "7\u3001\u53d8\u91cf\u5206\u4e3a\u5168\u5c40\u548c\u5c40\u90e8\u4e24\u79cd\uff0c\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u53d8\u91cf\u6ca1\u6709\u8d4b\u521d\u503c\u65f6\uff0c\u5176\u503c\u662f\u4e0d\u786e\u5b9a\u7684\u3002\n", "8\u3001\u5047\u5b9aa\u662f\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u5219a[i][j]\u7684\u6307\u9488\u8bbf\u95ee\u65b9\u5f0f\u4e3a\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u3002\n", "9\u3001\u5047\u5b9a\u4e00\u4e2a\u7ed3\u6784\u7c7b\u578b\u5b9a\u4e49\u4e3a\u201dstruct\u00a0\u00a0D\u00a0{\u00a0int\u00a0\u00a0a\u00a0;\u00a0\u00a0union\u00a0{\u00a0int\u00a0\u00a0b\u00a0;\u00a0double\u00a0\u00a0c\u00a0;\u00a0}\u00a0;\u00a0D\u00a0\u00a0*\u00a0d[2]\u00a0;\u00a0}\u00a0;\u201d\u00a0\uff0c\u5219\u8be5\u7c7b\u578b\u7684\u5927\u5c0f\u4e3a\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u5b57\u8282\u3002\n", "10\u3001\u5bf9\u4e00\u4e2a\u7c7b\u4e2d\u7684\u6570\u636e\u6210\u5458\u7684\u521d\u59cb\u5316\u53ef\u4ee5\u901a\u8fc7\u6784\u9020\u51fd\u6570\u4e2d\u7684\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u5b9e\u73b0\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6784\u9020\u51fd\u6570\u4e2d\u7684\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u5b9e\u73b0\u3002\n", "11\u3001\u5047\u5b9aAB\u4e3a\u4e00\u4e2a\u7c7b\uff0c\u5219\u6267\u884c\u201dAB\u00a0\u00a0a[10];\u201d\u8bed\u53e5\u65f6\uff0c\u7cfb\u7edf\u81ea\u52a8\u8c03\u7528\u8be5\u7c7b\u7684\u6784\u9020\u51fd\u6570\u7684\u6b21\u6570\u4e3a\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u3002\u00a0\n", "12\u3001\u5047\u5b9a\u7c7bAB\u4e2d\u6709\u4e00\u4e2a\u516c\u7528\u5c5e\u6027\u7684\u9759\u6001\u6570\u636e\u6210\u5458bb\uff0c\u5728\u7c7b\u5916\u4e0d\u901a\u8fc7\u5bf9\u8c61\u540d\u8bbf\u95ee\u8be5\u6210\u5458bb\u7684\u5199\u6cd5\u4e3a\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n", "\n\u00a0", "\n\u00a0", "\u00a0", "\n\u00a0", "\n\u00a0", "\u00a0", "\n\u00a0", "\u00a0", "\n\u00a0", "\u00a0", "\n\u00a0", "\u00a0", "\n\u00a0", "\u00a0", "\n\u00a0", "\u00a0", "\n\u00a0", "\u00a0", "\n\u00a0", "\u00a0", "\n\u00a0", "\u00a0", "\n\u00a0", "\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "1\u3001\u7b80\u8ff0Windows\u4e2d\u53e5\u67c4\u7684\u610f\u4e49\u548c\u6d88\u606f\u6620\u5c04\u673a\u5236\n", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\uff12\u3001\u4e00\u4e2aWindows\u7a0b\u5e8f\u7684\u5173\u952e\u5c31\u662f\u6253\u5f00\u4e00\u4e2a\u7a97\u53e3\uff0c\u5904\u7406\u6d88\u606f\uff0c\u8c03\u7528\u4e3b\u4e8b\u4ef6\u5faa\u73af\u7b49\u3002\u8981\u521b\u5efa\u4e00\u4e2a\u5b8c\u5168\u5b9e\u7528\u7684Windows\u7a0b\u5e8f\uff0c\u9700\u8981\u8fdb\u884c\u54ea\u51e0\u6b65\u5de5\u4f5c\uff1f\n", "\u00a0", "\n\u00a0", "\u00a0", "\n\u00a0", "\u00a0", "\n\u00a0", "\n\u00a0", "1\u3001\u7b80\u8ff0Windows\u4e2d\u53e5\u67c4\u7684\u610f\u4e49\u548c\u6d88\u606f\u6620\u5c04\u673a\u5236\n", "\u53e5\u67c4\u662f\u4e00\u4e2a4\u5b57\u8282\u957f\u7684\u6570\u503c\uff0c\u7528\u4e8e\u6807\u8bc6\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4e0d\u540c\u7684", "\u548c", "\n\t", "\u00a0\u00a0\u00a0\u00a0\u4efb\u4f55\u9700\u8981\u6d88\u606f\u6620\u5c04\u7684\u7c7b\uff0c\u5728\u5176\u5b9a\u4e49\u4e2d\u5fc5\u987b\u52a0\u5165DECLARE_MESSAGE_MAP()\u5b8f\u5b9a\u4e49\u3002\n", "\uff12\u3001\u3000\n", "\n\u00a0"], "title": "C++\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u8bd5\u9898"},
{"contents": ["a)\u00a0\u00a0 TCP/IP\u534f\u8bae", "b)\u00a0\u00a0 \u4e3b\u8981\u5c42\u6b21\u7ed3\u6784\u4e3a\uff1a \u5e94\u7528\u5c42/\u4f20\u8f93\u5c42/\u7f51\u7edc\u5c42/\u6570\u94fe\u8def\u5c42\u3002", "c)\u00a0\u00a0 ARP (Address Resolution Protocol)\uff08\u5730\u636e\u5740\u89e3\u6790\u534f\u8bae\uff09", "\u5b9e\u578b\uff08float\uff0cDouble\uff09", "1\u3001\u81ea\u9876\u5411\u4e0b\u96c6\u6210", "\u4f18\u70b9\uff1a\u8f83\u65e9\u5730\u9a8c\u8bc1\u4e86\u4e3b\u8981\u63a7\u5236\u548c\u5224\u65ad\u70b9\uff1b\u6309\u6df1\u5ea6\u4f18\u5148\u53ef\u4ee5\u9996\u5148\u5b9e\u73b0\u548c\u9a8c\u8bc1\u4e00\u4e2a\u5b8c\u6574\u7684\u8f6f\u4ef6\u529f\u80fd\uff1b\u529f\u80fd\u8f83\u65e9\u8bc1\u5b9e\uff0c\u5e26\u6765\u4fe1\u5fc3\uff1b\u53ea\u9700\u4e00\u4e2a\u9a71\u52a8\uff0c\u51cf\u5c11\u9a71\u52a8\u5668\u5f00\u53d1\u7684\u8d39\u7528\uff1b\u652f\u6301\u6545\u969c\u9694\u79bb\u3002", "\u7f3a\u70b9\uff1a\u67f1\u7684\u5f00\u53d1\u91cf\u5927\uff1b\u5e95\u5c42\u9a8c\u8bc1\u88ab\u63a8\u8fdf\uff1b\u5e95\u5c42\u7ec4\u4ef6\u6d4b\u8bd5\u4e0d\u5145\u5206\u3002", "\u9002\u5e94\u4e8e\u4ea7\u54c1\u63a7\u5236\u7ed3\u6784\u6bd4\u8f83\u6e05\u6670\u548c\u7a33\u5b9a\uff1b\u9ad8\u5c42\u63a5\u53e3\u53d8\u5316\u8f83\u5c0f\uff1b\u5e95\u5c42\u63a5\u53e3\u672a\u5b9a\u4e49\u6216\u7ecf\u5e38\u53ef\u80fd\u88ab\u4fee\u6539\uff1b\u4ea7\u53e3\u63a7\u5236\u7ec4\u4ef6\u5177\u6709\u8f83\u5927\u7684\u6280\u672f\u98ce\u9669\uff0c\u9700\u8981\u5c3d\u65e9\u88ab\u9a8c\u8bc1\uff1b\u5e0c\u671b\u5c3d\u65e9\u80fd\u770b\u5230\u4ea7\u54c1\u7684\u7cfb\u7edf\u529f\u80fd\u884c\u4e3a\u3002", "2\u3001\u81ea\u5e95\u5411\u4e0a\u96c6\u6210", "\u4f18\u70b9\uff1a\u5bf9\u5e95\u5c42\u7ec4\u4ef6\u884c\u4e3a\u8f83\u65e9\u9a8c\u8bc1\uff1b", "\u6700\u521d\u53ef\u4ee5\u5e76\u884c\u96c6\u6210\uff0c\u6bd4\u81ea\u9876\u5411\u4e0b\u6548\u7387\u9ad8\uff1b\u51cf\u5c11\u4e86\u6869\u7684\u5de5\u4f5c\u91cf\uff1b\u652f\u6301\u6545\u969c\u9694\u79bb\u3002", "\u7f3a\u70b9\uff1a\u9a71\u52a8\u7684\u5f00\u53d1\u5de5\u4f5c\u91cf\u5927\uff1b\u5bf9\u9ad8\u5c42\u7684\u9a8c\u8bc1\u88ab\u63a8\u8fdf\uff0c\u8bbe\u8ba1\u4e0a\u7684\u9519\u8bef\u4e0d\u80fd\u88ab\u53ca\u65f6\u53d1\u73b0\u3002", "\n\u9002\u5e94\u4e8e\u5e95\u5c42\u63a5\u53e3\u6bd4\u8f83\u7a33\u5b9a\uff1b\u9ad8\u5c42\u63a5\u53e3\u53d8\u5316\u6bd4\u8f83\u9891\u7e41\uff1b\u5e95\u5c42\u7ec4\u4ef6\u8f83\u65e9\u88ab\u5b8c\u6210\u3002"], "title": "\u4e1c\u8f6fC/C++\u7b14\u8bd5\u9898\u53ca\u53c2\u8003\u7b54\u6848"},
{"contents": ["\u00a0", "1", "\u4e03\u00a0", "\u300a", "\u300a", "C:\\Program\u00a0Files\\360\\360safe\\antiarp\\dpath.ini\u00a0\u5f97\u51fa\u5176\u6240\u5728\u8def\u5f84\uff0c\u6587\u4ef6\u540d\u53ca\u6269\u5c55\u540d", "\u300a", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0*", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0*\u00a0\u00a0\u00a0\u00a0\u00a0*", "\u00a0\u00a0\u00a0\u00a0\u00a0*\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0*", "\u00a0\u00a0*\u00a0\u00a0*\u00a0\u00a0*\u00a0\u00a0*\u00a0\u00a0*\u00a0\u00a0*\u00a0\u00a0*", "\u516b\u00a0\u00a0\u5b8f\u5b9a\u4e49", "1.\u00a0", "2.\u00a0", "\u00a0", "\u4e5d", "\u7528\u53d8\u91cf", "a)\u00a0", "b)\u00a0", "c)\u00a0", "d)\u00a0", "e)\u00a0", "f)\u00a0", "g)\u00a0", "h)\u00a0", "\u00a0", "\u00a0", "\u5341\u3001\u6c7d\u8f66\u7c7b\u8bbe\u8ba1\uff0c\u8003\u5bdf\u9762\u5411\u5bf9\u8c61\u601d\u60f3", "\u00a0", "\u9762\u8bd5\uff1a"], "title": "\u4f17\u9e3f\u6c7d\u8f66C++\u7b14\u8bd5\u9898\u6574\u7406"},
{"contents": ["1\u3001\u00a0\u4e0b\u9762\u54ea\u79cd\u8bf4\u6cd5\u6bd4\u8f83\u5408\u7406", "\uff21\uff09\u4e00\u4e2a\u7c7b\u5e94\u8be5\u6709\u5f88\u591a\u7684\u63a5\u53e3\u548c\u529f\u80fd", "\uff22\uff09\u4e00\u4e2a\u7c7b\u5e94\u8be5\u529f\u80fd\u5355\u4e00\u548c\u4e0e\u5176\u4ed6\u7c7b\u7684\u8026\u5408\u5ea6", "\uff23\uff09\u4e00\u4e2a\u7c7b\u4f18\u5148\u5305\u542b\u7c7b\u7684\u6307\u9488\u800c\u4e0d\u662f\u7ee7\u627f", "\uff24\uff09\u9762\u5411\u5bf9\u8c61\u53ef\u4ee5\u52a0\u5927\u4ee3\u7801\u590d\u7528\u5ea6\u548c\u6dfb\u52a0\u529f\u80fd\uff0c\u4f46\u4e0d\u53ef\u907f\u514d\u52a0\u5bf9\u4ee3\u7801\u8fdb\u884c\u4fee\u6539", "\uff12\u3001\u5173\u4e8e\u62bd\u8c61\u7c7b\u548c\u865a\u51fd\u6570\u7684\u8bf4\u8bdd\u6b63\u786e\u7684\u662f\uff1a", "A)", "\uff22\uff09\u51fd\u6570\u8c03\u7528\u65f6\u5c31\u4f18\u5148\u8c03\u7528\u865a\u51fd\u6570", "C", "D", "3", "4", "\u201cC++\u00a0Game\u201d;", "Void\u00a0fun", "\uff5b", "Sizeof(str);", "Sizeof(name);", "Sizeof(char\u00a0*);", "Sizeof(char\u00a0&);", "Sizeof(short\u00a0&);", "\uff5d", "5", "A", "6", "7", "8", "\u00a0", "9", "10", "\u00a0", "\u9644\u52a0\u9898\uff1a", "0\u00d701,\u00a0ox02,\u00a00\u00d703,\u00a00\u00d704,\u00a00\u00d705,\u00a00\u00d706,\u00a00\u00d707,\u00a00\u00d708,\u00a00\u00d709,\u00a00x0A,\u00a00x0B,\u00a00x0C,\u00a00x0D;\u00a0//", "0\u00d711,\u00a0ox12,\u00a00\u00d713,\u00a00\u00d714,\u00a00\u00d715,\u00a00\u00d716,\u00a00\u00d717,\u00a00\u00d718,\u00a00\u00d719,\u00a00x1A,\u00a00x1B,\u00a00x1C,\u00a00x1D;\u00a0//", "0\u00d721,\u00a0ox22,\u00a00\u00d723,\u00a00\u00d724,\u00a00\u00d725,\u00a00\u00d726,\u00a00\u00d727,\u00a00\u00d728,\u00a00\u00d729,\u00a00x2A,\u00a00x2B,\u00a00x2C,\u00a00x2D;\u00a0//", "0\u00d731,\u00a0ox32,\u00a00\u00d733,\u00a00\u00d734,\u00a00\u00d735,\u00a00\u00d736,\u00a00\u00d737,\u00a00\u00d738,\u00a00\u00d739,\u00a00x3A,\u00a00x3B,\u00a00x3C,\u00a00x3D;\u00a0//", "0\u00d741,\u00a00\u00d742\u00a0//", "\u89c4\u5219\uff1a", "\u00a0\u5927\u738b\u00a0", "\u9ed1\u6843\u00a0", "2\u00a0<\u00a03\u00a0<\u00a04\u00a0<\u00a05\u00a0\u2026.<\u00a0\u00a0K\u00a0<\u00a0A", "\u00a0", "\u4e00\u526f\u724c", "Void\u00a0SortCard", "\u6bd4\u8f83\u4efb\u610f\u4e24\u5f20\u724c\uff1a", "CompareCard", "\u968f\u673a\u4ea7\u751f\u4e00\u526f\u724c\uff1a"], "title": "C++\u7b14\u8bd5\u8bd5\u5377\u4e00\u5957"},
{"contents": ["\u7b2c\u4e00\u90e8\u5206", "1.\u00a0", "\u7b54\uff1a", "\u00a0\u00a0\u00a0\u00a0dynamic_cast\u00a0", "\u00a0", "\u7b54\uff1a", "\u00a0\u00a0C++", "\u00a0\u00a0\u5728", "\u00a0", "\u7b54\uff1a", "\u00a0", "\u7b54\uff1a\u4ece\u673a\u5236\u4e0a\uff1a", "\u4ece\u9002\u7528\u7684\u65b9\u5411\uff1a", "\u4ece\u540d\u79f0\u4e0a\u4e5f\u53ef\u4ee5\u770b\u51fa\uff0c", "C", "C++", "\u00a0", "\u7b54\uff1a", "1", "2", "\u00a0", "\u7b54\uff1a\u6570\u7ec4\u8981\u4e48\u5728\u9759\u6001\u5b58\u50a8\u533a\u88ab\u521b\u5efa\uff08\u5982\u5168\u5c40\u6570\u7ec4\uff09\uff0c\u8981\u4e48\u5728\u6808\u4e0a\u88ab\u521b\u5efa\u3002\u6307\u9488\u53ef\u4ee5\u968f\u65f6\u6307\u5411\u4efb\u610f\u7c7b\u578b\u7684\u5185\u5b58\u5757\u3002", "(1)", "char\u00a0a[]\u00a0=\u00a0", "a[0]\u00a0=\u00a0", "char\u00a0*p\u00a0=\u00a0", "p[0]\u00a0=\u00a0", "(2)\u00a0", "char\u00a0a[]\u00a0=\u00a0\u201chello\u00a0world\u201d;", "char\u00a0*p\u00a0=\u00a0a;", "cout<<\u00a0sizeof(a)\u00a0<<\u00a0endl;\u00a0//\u00a012\u00a0", "cout<<\u00a0sizeof(p)\u00a0<<\u00a0endl;\u00a0//\u00a04\u00a0", "\u8ba1\u7b97\u6570\u7ec4\u548c\u6307\u9488\u7684\u5185\u5b58\u5bb9\u91cf", "void\u00a0Func(char\u00a0a[100])", "{", "cout<<\u00a0sizeof(a)\u00a0<<\u00a0endl;\u00a0//\u00a04\u00a0", "}\u00a0", "\u00a0", "\u7b54\uff1a", "a.", "\uff08", "\uff08", "\uff08", "\uff08", "b.", "\uff08", "\uff08", "\uff08", "\uff08", "c.", "\uff08", "\uff08", "\u00a0", "\u7b54\uff1a", "1.\u00a0", "2.\u00a0", "3.\u00a0", "\u00a0", "9.\u00a0", "\u7b54\uff1a", "\u5185\u5b58\u7ba1\u7406\u662f\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u91cd\u8981\u90e8\u5206\uff0c\u4e24\u4e09\u53e5\u8bdd\u6050\u6015\u8c01\u4e5f\u8bf4\u4e0d\u6e05\u695a\u5427\uff5e\uff5e", "\u6211\u5148\u8bf4\u4e2a\u5927\u6982\uff0c\u5e0c\u671b\u80fd\u591f\u629b\u7816\u5f15\u7389\u5427", "\u5f53\u7a0b\u5e8f\u8fd0\u884c\u65f6\u9700\u8981\u4ece\u5185\u5b58\u4e2d\u8bfb\u51fa\u8fd9\u6bb5\u7a0b\u5e8f\u7684\u4ee3\u7801\u3002\u4ee3\u7801\u7684\u4f4d\u7f6e\u5fc5\u987b\u5728\u7269\u7406\u5185\u5b58\u4e2d\u624d\u80fd\u88ab\u8fd0\u884c\uff0c\u7531\u4e8e\u73b0\u5728\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u6709\u975e\u5e38\u591a\u7684\u7a0b\u5e8f\u8fd0\u884c\u7740\uff0c\u5185\u5b58\u4e2d\u4e0d\u80fd\u591f\u5b8c\u5168\u653e\u4e0b\uff0c\u6240\u4ee5\u5f15\u51fa\u4e86\u865a\u62df\u5185\u5b58\u7684\u6982\u5ff5\u3002\u628a\u54ea\u4e9b\u4e0d\u5e38\u7528\u7684\u7a0b\u5e8f\u7247\u65ad\u5c31\u653e\u5165\u865a\u62df\u5185\u5b58\uff0c\u5f53\u9700\u8981\u7528\u5230\u5b83\u7684\u65f6\u5019\u5728", "\u5185\u5b58\u7ba1\u7406\u6709\u5757\u5f0f\u7ba1\u7406\uff0c\u9875\u5f0f\u7ba1\u7406\uff0c\u6bb5\u5f0f\u548c\u6bb5\u9875\u5f0f\u7ba1\u7406\u3002\u73b0\u5728\u5e38\u7528\u6bb5\u9875\u5f0f\u7ba1\u7406", "\u5757\u5f0f\u7ba1\u7406\uff1a\u628a\u4e3b\u5b58\u5206\u4e3a\u4e00\u5927\u5757\u3001\u4e00\u5927\u5757\u7684\uff0c\u5f53\u6240\u9700\u7684\u7a0b\u5e8f\u7247\u65ad\u4e0d\u5728\u4e3b\u5b58\u65f6\u5c31\u5206\u914d\u4e00\u5757\u4e3b\u5b58\u7a7a\u95f4\uff0c\u628a\u7a0b\u00a0\u5e8f\u7247\u65ad", "\u9875\u5f0f\u7ba1\u7406\uff1a\u628a\u4e3b\u5b58\u5206\u4e3a\u4e00\u9875\u4e00\u9875\u7684\uff0c\u6bcf\u4e00\u9875\u7684\u7a7a\u95f4\u8981\u6bd4\u4e00\u5757\u4e00\u5757\u7684\u7a7a\u95f4\u5c0f\u5f88\u591a\uff0c\u663e\u7136\u8fd9\u79cd\u65b9\u6cd5\u7684\u7a7a\u95f4\u5229\u7528\u7387\u8981\u6bd4\u5757\u5f0f\u7ba1\u7406\u9ad8\u5f88\u591a\u3002", "\u6bb5\u5f0f\u7ba1\u7406\uff1a\u628a\u4e3b\u5b58\u5206\u4e3a\u4e00\u6bb5\u4e00\u6bb5\u7684\uff0c\u6bcf\u4e00\u6bb5\u7684\u7a7a\u95f4\u53c8\u8981\u6bd4\u4e00\u9875\u4e00\u9875\u7684\u7a7a\u95f4\u5c0f\u5f88\u591a\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5728\u7a7a\u95f4\u5229\u7528\u7387\u4e0a\u53c8\u6bd4\u9875\u5f0f\u7ba1\u7406\u9ad8\u5f88\u591a\uff0c\u4f46\u662f\u4e5f\u6709\u53e6\u5916\u4e00\u4e2a\u7f3a\u70b9\u3002\u4e00\u4e2a\u7a0b\u5e8f\u7247\u65ad\u53ef\u80fd\u4f1a\u88ab\u5206\u4e3a\u51e0\u5341\u6bb5\uff0c\u8fd9\u6837\u5f88\u591a\u65f6\u95f4\u5c31\u4f1a\u88ab\u6d6a\u8d39\u5728\u8ba1\u7b97\u6bcf\u4e00\u6bb5\u7684\u7269\u7406\u5730\u5740\u4e0a\uff08\u8ba1\u7b97\u673a\u6700\u8017\u65f6\u95f4\u7684\u5927\u5bb6\u90fd\u77e5\u9053\u662f", "\u6bb5\u9875\u5f0f\u7ba1\u7406\uff1a\u7ed3\u5408\u4e86\u6bb5\u5f0f\u7ba1\u7406\u548c\u9875\u5f0f\u7ba1\u7406\u7684\u4f18\u70b9\u3002\u628a\u4e3b\u5b58\u5206\u4e3a\u82e5\u5e72\u9875\uff0c\u6bcf\u4e00\u9875\u53c8\u5206\u4e3a\u82e5\u5e72\u6bb5\u3002\u597d\u5904\u5c31\u5f88\u660e\u663e\uff0c\u4e0d\u7528\u6211\u591a\u8bf4\u4e86\u5427\u3002", "\u5404\u79cd\u5185\u5b58\u7ba1\u7406\u90fd\u6709\u5b83\u81ea\u5df1\u7684\u65b9\u6cd5\u6765\u8ba1\u7b97\u51fa\u7a0b\u5e8f\u7247\u65ad\u5728\u4e3b\u5b58\u4e2d\u7684\u7269\u7406\u5730\u5740\uff0c\u5176\u5b9e\u90fd\u5f88\u76f8\u4f3c\u3002", "\u8fd9\u53ea\u662f\u4e00\u4e2a\u5927\u6982\u800c\u5df2\uff0c\u4e0d\u8db3\u4ee5\u8bf4\u660e\u5185\u5b58\u7ba1\u7406\u7684\u76ae\u6bdb\u3002\u65e0\u8bba\u54ea\u4e00\u672c\u64cd\u4f5c\u7cfb\u7edf\u4e66\u4e0a\u90fd\u6709\u8be6\u7ec6\u7684\u8bb2\u89e3", "\u00a0", "10.main\u00a0", "\u7b54\uff1a\u53ef\u4ee5\uff0c\u53ef\u4ee5\u7528", "void\u00a0main(\u00a0void\u00a0)", "{", "String\u00a0str(\u201czhanglin\u201d);", "_onexit(\u00a0fn1\u00a0);", "_onexit(\u00a0fn2\u00a0);", "_onexit(\u00a0fn3\u00a0);", "_onexit(\u00a0fn4\u00a0);", "printf(\u00a0\u201cThis\u00a0is\u00a0executed\u00a0first.\\n\u201d\u00a0);", "}", "int\u00a0fn1()", "{", "printf(\u00a0\u201cnext.\\n\u201d\u00a0);", "return\u00a00;", "}", "int\u00a0fn2()", "{", "printf(\u00a0\u201cexecuted\u00a0\u201d\u00a0);", "return\u00a00;", "}", "int\u00a0fn3()", "{", "printf(\u00a0\u201cis\u00a0\u201d\u00a0);", "return\u00a00;", "}", "int\u00a0fn4()", "{", "printf(\u00a0\u201cThis\u00a0\u201d\u00a0);", "return\u00a00;", "}", "Csdn", "The\u00a0_onexit\u00a0function\u00a0is\u00a0passed\u00a0the\u00a0address\u00a0of\u00a0a\u00a0function\u00a0(func)\u00a0to\u00a0be\u00a0called\u00a0when\u00a0the\u00a0program\u00a0terminates\u00a0normally.\u00a0Successive\u00a0calls\u00a0to\u00a0_onexit\u00a0create\u00a0a\u00a0register\u00a0of\u00a0functions\u00a0that\u00a0are\u00a0executed\u00a0in\u00a0LIFO\u00a0(last-in-first-out)\u00a0order.\u00a0The\u00a0functions\u00a0passed\u00a0to\u00a0_onexit\u00a0cannot\u00a0take\u00a0parameters.", "\u00a0", "11.const\u00a0", "(1)const\u00a0char\u00a0*p", "(2)char\u00a0const\u00a0*p", "(3)char\u00a0*\u00a0const\u00a0p", "\u8bf4\u660e\u4e0a\u9762\u4e09\u79cd\u63cf\u8ff0\u7684\u533a\u522b", "\u7b54\uff1a", "\u5982\u679c", "\u5982\u679c", "(1)const\u00a0char\u00a0*p", "\u4e00\u4e2a\u6307\u5411", "const\u00a0char\u00a0*p;", "char\u00a0c1=\u2019a\u2019;", "char\u00a0c2=\u2019b\u2019;", "p=&c1;//ok", "p=&c2;//ok", "*p=c1;//error", "(3)char\u00a0*\u00a0const\u00a0p", "\u6b64\u65f6", "(4)const\u00a0char\u00a0*\u00a0const\u00a0p", "\u8fd9\u79cd\u662f\u5730\u5740\u53ca\u6307\u5411\u5bf9\u8c61\u90fd\u4e0d\u80fd\u4fee\u6539\u3002", "\u00a0", "12.\u4e0b\u9762\u662f", "\u7b54\uff1a", "int\u00a0n;", "if\u00a0(n\u00a0==\u00a010)\u00a0//\u00a0", "if\u00a0(10\u00a0==\u00a0n)\u00a0//\u00a0", "\u5982\u679c\u5c11\u4e86\u4e2a", "\u00a0", "13.\u00a0*p++\u00a0", "\u7b54", "\u540e\u7f00", "\u8981\u81ea\u589e", "\u00a0", "14.\u00a0#pragma\u00a0", "\u7b54", "#pragam\u00a0", "\u6e90\u7801\u8868\u63a7\u5236\u3001\u7ed3\u6784\u538b\u7f29\u3001\u8b66\u544a\u53bb\u9664\u00a0", "\u00a0", "15.", "\u7b54", "\u8fd9\u662f\u67d0\u4e9b\u9884\u5904\u7406\u5668\u5b9e\u73b0\u7684\u6269\u5c55\u7528\u4e8e\u4f7f\u5934\u6587\u4ef6\u81ea\u6211\u8bc6\u522b", "\u00a0", "16.\u00a0", "\u7b54\uff1a", "\u8fdb\u7a0b\u95f4\u901a\u4fe1\u7684\u65b9\u5f0f\u6709\u00a0\u5171\u4eab\u5185\u5b58\uff0c\u00a0\u7ba1\u9053\u00a0\uff0c", "\u00a0", "17.\u00a0", "\u7b54\uff1a", "cout\u00a0<<\u00a0__FILE__\u00a0;", "cout<<__LINE__\u00a0;", "__FILE__", "\u00a0", "18.\u00a0", "\u7b54\uff1a", "cout<<\u201dc++\u201d;", "#else", "cout<<\u201dc\u201d;", "#endif", "\u00a0", "19.\u00a0New\u00a0delete\u00a0", "\u7b54\uff1a", "\u90fd\u662f\u5728\u5806", "\u00a0", "20.", "\u7b54", "\u00a0\u00a0\u00a0\u00a0\u00a0STL\u00a0(", "\u00a0\u00a0\u00a0\u00a0\u00a0STL", "\u00a0\u00a0\u00a0\u00a0\u00a0\u53ef\u4ee5\u65b9\u4fbf\u5bb9\u6613\u5730\u5b9e\u73b0\u641c\u7d22\u6570\u636e\u6216\u5bf9\u6570\u636e\u6392\u5e8f\u7b49\u4e00\u7cfb\u5217\u7684\u7b97\u6cd5\uff1b", "\u00a0\u00a0\u00a0\u00a0\u00a0\u8c03\u8bd5\u7a0b\u5e8f\u65f6\u66f4\u52a0\u5b89\u5168\u548c\u65b9\u4fbf\uff1b", "\u00a0\u00a0\u00a0\u00a0\u00a0\u5373\u4f7f\u662f\u4eba\u4eec\u7528", "\u00a0\u00a0\u00a0\u00a0\u00a0vector", "\u00a0", "21.\u00a0", "\u7b54\uff1a", "\u00a0\u00a0\u00a0\u00a0\u00a0(1)\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0(2)\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0(3)\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0(4)\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0(5)\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u4e0d\u5b58\u5728\u7a7a\u5f15\u7528\uff0c\u5e76\u4e14\u5f15\u7528\u4e00\u65e6\u88ab\u521d\u59cb\u5316\u4e3a\u6307\u5411\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5b83\u5c31\u4e0d\u80fd\u88ab\u6539\u53d8\u4e3a\u53e6\u4e00\u4e2a\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u663e\u5f97\u5f88\u5b89\u5168\u3002", "\u00a0\u00a0\u00a0\u00a0\u00a0const\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u603b\u7684\u6765\u8bf4\uff1a\u5f15\u7528\u65e2\u5177\u6709\u6307\u9488\u7684\u6548\u7387\uff0c\u53c8\u5177\u6709\u53d8\u91cf\u4f7f\u7528\u7684\u65b9\u4fbf\u6027\u548c\u76f4\u89c2\u6027\uff0e", "\u00a0", "22.\u00a0", "\u7b54\uff1a", "\u00a0\u00a0\u00a0\u00a0\u6784\u9020\u51fd\u6570\u4e0d\u80fd\u4e3a\u865a\u51fd\u6570\uff0c\u8981\u6784\u9020\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5fc5\u987b\u6e05\u695a\u5730\u77e5\u9053\u8981\u6784\u9020\u4ec0\u4e48\uff0c\u5426\u5219\u65e0\u6cd5\u6784\u9020\u4e00\u4e2a\u5bf9\u8c61\u3002", "\u00a0\u00a0\u00a0\u00a0\u00a0\u6790\u6784\u51fd\u6570\u53ef\u4ee5\u4e3a\u7eaf\u865a\u51fd\u6570\u3002", "\u00a0", "\u7b2c\u4e8c\u90e8\u5206", "1.\u00a0#include\u00a0\u201cstdafx.h\u201d", "#define\u00a0SQR(X)\u00a0X*X", "int\u00a0main(int\u00a0argc,\u00a0char*\u00a0argv[])", "{", "int\u00a0a\u00a0=\u00a010;", "int\u00a0k\u00a0=\u00a02;", "int\u00a0m\u00a0=\u00a01;", "a\u00a0/=\u00a0SQR(k+m)/SQR(k+m);\u00a0", "printf(\u201c%d\\n\u201d,a);\u00a0", "return\u00a00;", "}", "\u8fd9\u9053\u9898\u76ee\u7684\u7ed3\u679c\u662f\u4ec0\u4e48\u554a", "\u00a0", "\u7b54\uff1a", "a\u00a0/=\u00a0(k+m)*(k+m)/(k+m)*(k+m);", "=>a\u00a0/=\u00a0(k+m)*1*(k+m);", "=>a\u00a0=\u00a0a/9;", "=>a\u00a0=\u00a01;", "\u00a0", "2.\u00a0", "void\u00a0DoSomeThing(\u2026)", "{", "char*\u00a0p;", "\u2026", "p\u00a0=\u00a0malloc(1024);\u00a0//\u00a0", "if\u00a0(NULL\u00a0==\u00a0p)", "return;", "\u2026", "p\u00a0=\u00a0realloc(p,\u00a02048);\u00a0//\u00a0", "if\u00a0(NULL\u00a0==\u00a0p)", "return;", "\u2026", "}", "\u7b54\uff1a", "p\u00a0=\u00a0malloc(1024);\u00a0\u00a0\u00a0\u00a0\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u6ca1\u6709\u91ca\u653e", "\u00a0", "3.\u00a0", "{//\u00a0test1", "\u00a0\u00a0\u00a0\u00a0char\u00a0str[]\u00a0=\u00a0\u201cworld\u201d;\u00a0cout\u00a0<<\u00a0sizeof(str)\u00a0<<\u00a0\u201c:\u00a0\u201c;", "\u00a0\u00a0\u00a0\u00a0char\u00a0*p\u00a0\u00a0\u00a0\u00a0=\u00a0str;\u00a0\u00a0\u00a0\u00a0\u00a0cout\u00a0<<\u00a0sizeof(p)\u00a0<<\u00a0\u201c:\u00a0\u201c;", "\u00a0\u00a0\u00a0\u00a0char\u00a0i\u00a0\u00a0\u00a0\u00a0\u00a0=\u00a010;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cout\u00a0<<\u00a0sizeof(i)\u00a0<<\u00a0\u201c:\u00a0\u201c;", "\u00a0\u00a0\u00a0\u00a0void\u00a0*pp\u00a0\u00a0\u00a0=\u00a0malloc(10);\u00a0cout\u00a0<<\u00a0sizeof(p)\u00a0<<\u00a0endl;", "}\u00a0", "\u7b54\uff1a", "\u00a0", "4.\u00a0", "void\u00a0DoSomeThing(char*\u00a0p)", "{", "char\u00a0str[16];", "int\u00a0n;", "assert(NULL\u00a0!=\u00a0p);", "sscanf(p,\u00a0\u201c%s%d\u201d,\u00a0str,\u00a0n);", "if\u00a0(0\u00a0==\u00a0strcmp(str,\u00a0\u201csomething\u201d))", "{", "\u2026", "}", "}", "\u7b54", "sscanf(p,\u00a0\u201c%s%d\u201d,\u00a0str,\u00a0n);\u00a0\u00a0\u00a0", "\u00a0", "5.\u00a0\u00a0int\u00a0i=10,\u00a0j=10,\u00a0k=3;\u00a0k*=i+j;\u00a0k", "\u7b54\uff1a", "\u00a0", "6.", "struct\u00a0A\u00a0", "{\u00a0", "char\u00a0t:4;\u00a0", "char\u00a0k:4;\u00a0", "unsigned\u00a0short\u00a0i:8;\u00a0", "unsigned\u00a0long\u00a0m;\u00a0", "}\u00a0", "sizeof(A)=?", "\u00a0", "\u7b54\uff1a", "struct\u00a0CELL\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0Declare\u00a0CELL\u00a0bit\u00a0field", "{", "\u00a0\u00a0\u00a0unsigned\u00a0character\u00a0:\u00a08;\u00a0//\u00a000000000\u00a0????????", "\u00a0\u00a0\u00a0unsigned\u00a0foreground\u00a0:\u00a03;\u00a0//\u00a000000???\u00a000000000", "\u00a0\u00a0\u00a0unsigned\u00a0intensity\u00a0:\u00a01;\u00a0//\u00a00000?000\u00a000000000", "\u00a0\u00a0\u00a0unsigned\u00a0background\u00a0:\u00a03;\u00a0//\u00a00???0000\u00a000000000", "\u00a0\u00a0\u00a0unsigned\u00a0blink\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0:\u00a01;\u00a0//\u00a0?0000000\u00a000000000", "}\u00a0screen[25][80];\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0Array\u00a0of\u00a0bit\u00a0fields", "\u4e8c\u3001\u4f4d\u7ed3\u6784\u00a0", "\u00a0\u00a0\u00a0\u00a0\u4f4d\u7ed3\u6784\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u7ed3\u6784", "\u6bd4\u6309\u4f4d\u8fd0\u7b97\u7b26\u66f4\u52a0\u65b9\u4fbf\u3002\u00a0", "\u00a0\u00a0\u00a0\u00a0\u4f4d\u7ed3\u6784\u5b9a\u4e49\u7684\u4e00\u822c\u5f62\u5f0f\u4e3a", "\u00a0\u00a0\u00a0\u00a0\u00a0struct", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u6570\u636e\u7c7b\u578b\u00a0\u53d8\u91cf\u540d", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u6570\u636e\u7c7b\u578b\u00a0\u53d8\u91cf\u540d", "\u00a0\u00a0\u00a0\u00a0\u00a0}\u00a0", "\u00a0\u00a0\u00a0\u00a0\u5176\u4e2d", "\u6570", "\u00a0\u00a0\u00a0\u00a0\u53d8\u91cf\u540d\u662f\u9009\u62e9\u9879", "\u00a0\u00a0\u00a0\u00a0\u4f8b\u5982", "\u00a0\u00a0\u00a0\u00a0\u00a0struct{\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0unsigned\u00a0incon:\u00a08;\u00a0/*incon", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0unsigned\u00a0txcolor:\u00a04;/*txcolor", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0unsigned\u00a0bgcolor:\u00a03;/*bgcolor", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0unsigned\u00a0blink:\u00a01;\u00a0/*blink", "\u00a0\u00a0\u00a0\u00a0\u00a0}ch;\u00a0", "\u00a0\u00a0\u00a0\u00a0\u4f4d\u7ed3\u6784\u6210\u5458\u7684\u8bbf\u95ee\u4e0e\u7ed3\u6784\u6210\u5458\u7684\u8bbf\u95ee\u76f8\u540c\u3002\u00a0", "\u00a0\u00a0\u00a0\u00a0\u4f8b\u5982", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ch.bgcolor\u00a0", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u6ce8\u610f", "\u00a0\u00a0\u00a0\u00a01.\u00a0", "\u5ea6\u4e3a", "\u00a0\u00a0\u00a0\u00a02.\u00a0", "\u5982\u679c\u662f\u6307\u9488", "\u00a0\u00a0\u00a0\u00a03.\u00a0", "\u8282\u3002\u00a0", "\u00a0\u00a0\u00a0\u00a04.\u00a0", "\u00a0\u00a0\u00a0\u00a0\u4f8b\u5982", "\u00a0\u00a0\u00a0\u00a0\u00a0struct\u00a0info{\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0char\u00a0name[8];\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int\u00a0age;\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0struct\u00a0addr\u00a0address;\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0float\u00a0pay;\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0unsigned\u00a0state:\u00a01;\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0unsigned\u00a0pay:\u00a01;\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}workers;", "\u00a0\u00a0\u00a0\u00a0\u4e0a\u4f8b\u7684\u7ed3\u6784\u5b9a\u4e49\u4e86\u5173\u4e8e\u4e00\u4e2a\u5de5\u4eba\u7684\u4fe1\u606f\u3002\u5176\u4e2d\u6709\u4e24\u4e2a\u4f4d\u7ed3\u6784\u6210\u5458", "\u6784\u6210\u5458\u53ea\u6709\u4e00\u4f4d", "\u4eba\u7684\u72b6\u6001", "\u00a0", "7.", "Void\u00a0test3(char*\u00a0str1)\u00a0", "{\u00a0", "char\u00a0string[10];\u00a0", "if(strlen(str1)<=10)\u00a0", "{\u00a0", "\u00a0\u00a0\u00a0\u00a0strcpy(string,\u00a0str1);\u00a0", "}\u00a0", "}\u00a0", "\u7b54\uff1a\u6570\u7ec4\u8d8a\u754c", "strcpy", "\u00a0", "\u5efa\u8bae\u4f7f\u7528\u00a0", "\u00a0", "8.", "class\u00a0A\u00a0", "{\u00a0", "public:\u00a0", "A()\u00a0{\u00a0p=this;\u00a0}\u00a0", "~A()\u00a0{\u00a0if(p!=NULL)\u00a0{\u00a0delete\u00a0p;\u00a0p=NULL;\u00a0}\u00a0}\u00a0", "A*\u00a0p;\u00a0", "};", "\u7b54\uff1a", "\u00a0", "9.i", "int\u00a0i\u00a0=\u00a01;", "int\u00a0j\u00a0=\u00a0i++;", "if((i>j++)\u00a0&&\u00a0(i++\u00a0==\u00a0j))\u00a0i+=j;", "\u7b54\uff1a", "\u00a0", "\u00a0", "10.\u00a0", "#include\u00a0<iostream.h>", "class\u00a0A\u00a0", "{\u00a0", "public:", "virtual\u00a0void\u00a0print(void)\u00a0", "{\u00a0", "\u00a0\u00a0\u00a0\u00a0cout<<\u201dA::print()\u201d<<endl;\u00a0", "}\u00a0", "};", "class\u00a0B:public\u00a0A\u00a0", "{\u00a0", "public:", "virtual\u00a0void\u00a0print(void)\u00a0", "{\u00a0", "\u00a0\u00a0\u00a0cout<<\u201dB::print()\u201d<<endl;", "};\u00a0", "};\u00a0", "class\u00a0C:public\u00a0B", "{", "public:", "virtual\u00a0void\u00a0print(void)", "{", "\u00a0\u00a0\u00a0cout<<\u201dC::print()\u201d<<endl;", "}", "};", "void\u00a0print(A\u00a0a)\u00a0", "{\u00a0", "\u00a0\u00a0\u00a0a.print();\u00a0", "}\u00a0", "void\u00a0main(void)\u00a0", "{\u00a0", "\u00a0\u00a0\u00a0A\u00a0a,\u00a0*pa,*pb,*pc;\u00a0", "\u00a0\u00a0\u00a0B\u00a0b;\u00a0", "\u00a0\u00a0\u00a0C\u00a0c;\u00a0", "\u00a0\u00a0\u00a0pa=&a;\u00a0", "\u00a0\u00a0\u00a0pb=&b;\u00a0", "\u00a0\u00a0\u00a0pc=&c;\u00a0", "\u00a0\u00a0\u00a0a.print();\u00a0", "\u00a0\u00a0\u00a0b.print();\u00a0", "\u00a0\u00a0\u00a0c.print();\u00a0", "\u00a0\u00a0\u00a0pa->print();\u00a0", "\u00a0\u00a0\u00a0pb->print();\u00a0", "\u00a0\u00a0\u00a0pc->print();\u00a0", "\u00a0\u00a0\u00a0print(a);\u00a0", "\u00a0\u00a0\u00a0print(b);\u00a0", "\u00a0\u00a0\u00a0print(c);\u00a0", "}", "\u00a0", "\u7b54\uff1a", "A::print()", "B::print()", "C::print()", "A::print()", "B::print()", "C::print()", "A::print()", "A::print()", "A::print()", "\u00a0", "11.", "union\u00a0a\u00a0{", "int\u00a0a_int1;", "double\u00a0a_double;", "int\u00a0a_int2;", "};", "typedef\u00a0struct", "{", "a\u00a0a1;", "char\u00a0y;", "}\u00a0b;", "class\u00a0c", "{", "double\u00a0c_double;", "b\u00a0b1;", "a\u00a0a2;", "};", "\u8f93\u51fa", "\u7b54", "VC6", "\u53e6", "\u6211", "short\u00a0-\u00a02", "int-4", "float-4", "double-8", "\u6307\u9488", "sizeof(union)", "\u00a0", "\u5bf9\u4e8e\u5b57\u8282\u5bf9\u9f50\u7684\u95ee\u9898\uff0c\u6709\u51e0\u70b9\u9700\u8981\u6ce8\u610f\u7406\u89e3\uff1a", "\uff08", "\uff08", "A", "B", "\u00a0", "\u57fa\u4e8e\u4e0a\u8ff0\u539f\u5219\u6211\u4eec\u5c31\u53ef\u4ee5\u7b97\u51fa\u7ed3\u6784\u4f53\u7684\u5185\u5b58\u5927\u5c0f\uff0c\u5f53\u7136\u8fd9\u4e5f\u662f", "\u7f16\u8bd1\u5668\u770b\u5230\u7684\u57fa\u672c\u7c7b\u578b\uff0c\u800c\u975e\u4f7f\u7528\u4e86", "\u00a0", "//\u00a0", "class\u00a0c\u00a0\u00a0", "{\u00a0", "double\u00a0c_double;\u00a0//\u00a0", "b\u00a0b1;\u00a0//\u00a0b1.a1", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0b1.y", "a\u00a0a2;\u00a0//\u00a0", "\u00a0//\u00a0a2", "};\u00a0", "\u00a0", "\u6240\u4ee5\uff1a", "sizeof(c)\u00a0=\u00a032", "\u00a0", "\u5982\u679c\u6211\u4eec\u518d\u5f80\u540e\u9762\u6dfb\u52a0\u4e24\u4e2a\u6210\u5458\uff0c\u5982\u4e0b\uff1a", "class\u00a0c\u00a0", "{\u00a0", "double\u00a0c_double;\u00a0\u00a0//\u00a0", "b\u00a0b1;\u00a0\u00a0//\u00a0", "a\u00a0a2;\u00a0//\u00a0", "int\u00a0x;\u00a0//\u00a0", "short\u00a0k;\u00a0//\u00a0", "//\u00a0k", "};\u00a0", "\u00a0", "\u5219", "\u00a0", "\u6709\u4e2a\u6d4b\u8bd5\u4ee3\u7801", "union\u00a0a\u00a0", "{\u00a0", "int\u00a0a_int1;\u00a0", "double\u00a0a_double;\u00a0", "int\u00a0a_int2;\u00a0", "};\u00a0", "\u00a0", "typedef\u00a0struct\u00a0", "{\u00a0", "a\u00a0a1;\u00a0", "char\u00a0y;\u00a0", "}\u00a0b;\u00a0", "\u00a0", "class\u00a0c\u00a0", "{\u00a0", "public:", "double\u00a0c_double;\u00a0", "b\u00a0b1;\u00a0", "a\u00a0a2;\u00a0", "short\u00a0x;", "int\u00a0k;", "};", "#include<iostream>", "using\u00a0namespace\u00a0std;", "void\u00a0main()", "{", "\u00a0c\u00a0test;", "\u00a0void*\u00a0p\u00a0=\u00a0&(test.b1.y);", "\u00a0cout\u00a0<<\u00a0\u201cAddress\u00a0of\u00a0test.c_double:\u00a0\u201d\u00a0<<\u00a0&(test.c_double)<<\u00a0endl;", "\u00a0cout\u00a0<<\u00a0\u201cAddress\u00a0of\u00a0test.b1.a1:\u00a0\u201d\u00a0<<\u00a0&(test.b1.a1)<<\u00a0endl;", "\u00a0cout\u00a0<<\u00a0\u201cAddress\u00a0of\u00a0test.b1.y:\u00a0\u201d\u00a0<<\u00a0p\u00a0<<\u00a0endl;", "\u00a0cout\u00a0<<\u00a0\u201cAddress\u00a0of\u00a0test.a2:\u00a0\u201d\u00a0<<\u00a0&(test.a2)\u00a0<<\u00a0endl;", "\u00a0cout\u00a0<<\u00a0\u201cAddress\u00a0of\u00a0test.x:\u00a0\u201d\u00a0<<\u00a0&(test.x)\u00a0<<\u00a0endl;", "\u00a0cout\u00a0<<\u00a0\u201cAdrress\u00a0of\u00a0test.k:\u00a0\u201d\u00a0<<\u00a0&(test.k)\u00a0<<\u00a0endl;", "\u00a0cout\u00a0<<\u00a0\u201cSizeof\u00a0class\u00a0c:\u00a0\u201d\u00a0<<\u00a0sizeof(test)\u00a0<<\u00a0endl;", "}\u00a0", "\u00a0", "\u00a0", "12.41.\u00a0", "class\u00a0B", "{", "public:", "B()", "{", "cout<<\u201ddefault\u00a0constructor\u201d<<endl;", "}", "~B()", "{", "cout<<\u201ddestructed\u201d<<endl;", "}", "B(int\u00a0i):data(i)\u00a0\u00a0\u00a0//B(int)\u00a0works\u00a0as\u00a0a\u00a0converter\u00a0(\u00a0int\u00a0->\u00a0instance\u00a0of\u00a0B)", "{", "cout<<\u201dconstructed\u00a0by\u00a0parameter\u00a0\u201d\u00a0<<\u00a0data\u00a0<<endl;", "}", "private:", "int\u00a0data;", "};", "B\u00a0Play(\u00a0B\u00a0b)", "{", "return\u00a0b\u00a0;", "}", "\u7b54\uff1a", "(1)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0results:", "int\u00a0main(int\u00a0argc,\u00a0char*\u00a0argv[])\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0constructed\u00a0by\u00a0parameter\u00a05", "{\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0destructed\u00a0B(5)", "B\u00a0t1\u00a0=\u00a0Play(5);\u00a0B\u00a0t2\u00a0=\u00a0Play(t1);\u00a0\u00a0\u00a0\u00a0destructed\u00a0t1", "return\u00a00;", "}\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0destructed\u00a0t1", "\u00a0", "\u00a0", "(2)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0results:", "int\u00a0main(int\u00a0argc,\u00a0char*\u00a0argv[])\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0constructed\u00a0by\u00a0parameter\u00a05", "{\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0destructed\u00a0B(5)", "B\u00a0t1\u00a0=\u00a0Play(5);\u00a0B\u00a0t2\u00a0=\u00a0Play(10);\u00a0\u00a0\u00a0", "return\u00a00;", "}\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0destructed\u00a0t2", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0destructed\u00a0t1", "\u00a0", "\u00a0", "13.", "void\u00a0Func(char\u00a0str[100])", "{", "printf(\u201c%d\\n\u201d,\u00a0sizeof(str));", "}", "\u7b54\uff1a", "\u00a0", "\u00a0", "14", "int\u00a0func(x)\u00a0", "{\u00a0", "int\u00a0countx\u00a0=\u00a00;\u00a0", "while(x)\u00a0", "{\u00a0", "countx\u00a0++;\u00a0", "x\u00a0=\u00a0x&(x-1);\u00a0", "}\u00a0", "return\u00a0countx;\u00a0", "}\u00a0", "\u00a0", "\u7b54\uff1a", "PS:", "\u8fd9\u91cc\u8bf4\u70b9\u95f2\u8bdd\uff0c\u524d\u4e24\u5929\u6211\u53c2\u52a0\u534e\u7855\u7684\u7b14\u8bd5\uff0c\u6700\u540e\u4e00\u9053\u9898\u5c31\u662f\u8fd9\u4e2a\u9898\uff0c\u53ef\u662f\u4ed6\u662f\u53eb\u6211\u5199\u51fa\u8fd9\u4e2a\u7a0b\u5e8f\uff0c\u53ef\u6211\u53ea\u8bb0\u5f97\u4f7f\u7528\u4f4d\u8fd0\u7b97\u505a\u7684\uff0c\u5177\u4f53\u6709\u70b9\u9057\u5fd8\u4e86\uff0c\u540e\u6765\u6ca1\u5199\u51fa\u6765\uff0c\u8fd9\u4e2a\u5bf9\u6211\u89e6\u52a8\u5f88\u6df1\uff0c\u611f\u89c9\u81ea\u5df1\u5b66\u7684\u8fd8\u662f\u6d41\u4e8e\u8868\u9762\uff0c\u6ca1\u6709\u6293\u5230\u7cbe\u9ad3\u3002\u5e0c\u671b\u5927\u5bb6\u4e0d\u8981\u50cf\u6211\u4e00\u6837\uff0c\u5b66\u4e1c\u897f\u8fd8\u662f\u8981\u5b66\u7684\u900f\u5f7b\uff0c\u4e0d\u7136\u5c31\u5bb9\u6613\u9519\u5931\u673a\u4f1a\u3002", "\u00a0", "15", "class\u00a0mml", "{", "private:", "\u00a0\u00a0\u00a0\u00a0static\u00a0unsigned\u00a0int\u00a0x;", "public:", "\u00a0\u00a0\u00a0\u00a0mml(){\u00a0x++;\u00a0}", "\u00a0\u00a0\u00a0\u00a0mml(static\u00a0unsigned\u00a0int\u00a0&)\u00a0{x++;}", "\u00a0\u00a0\u00a0\u00a0~mml{x\u2013;}", "pulic:", "\u00a0\u00a0\u00a0\u00a0virtual\u00a0mon()\u00a0{}\u00a0=\u00a00;", "\u00a0\u00a0\u00a0\u00a0static\u00a0unsigned\u00a0int\u00a0mmc(){return\u00a0x;}", "\u00a0\u00a0\u00a0\u00a0\u2026\u2026\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0", "};", "class\u00a0nnl:public\u00a0mml", "{", "private:", "\u00a0\u00a0\u00a0\u00a0static\u00a0unsigned\u00a0int\u00a0y;", "public:", "\u00a0\u00a0\u00a0\u00a0nnl(){\u00a0x++;\u00a0}", "\u00a0\u00a0\u00a0\u00a0nnl(static\u00a0unsigned\u00a0int\u00a0&)\u00a0{x++;}", "\u00a0\u00a0\u00a0\u00a0~nnl{x\u2013;}", "public:", "\u00a0\u00a0\u00a0\u00a0virtual\u00a0mon()\u00a0{};", "\u00a0\u00a0\u00a0\u00a0\u00a0static\u00a0unsigned\u00a0int\u00a0nnc(){return\u00a0y;}", "\u00a0\u00a0\u00a0\u00a0\u2026\u2026\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0", "};", "\u4ee3\u7801\u7247\u65ad", "mml*\u00a0pp\u00a0=\u00a0new\u00a0nnl;", "\u2026\u2026\u2026.", "delete\u00a0pp;", "\u7b54", "\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u5e94\u8be5\u4e3a\u865a\u51fd\u6570", "virtual\u00a0~mml{x\u2013;}", "\u00a0", "16", "void\u00a0GetMemory(char\u00a0*p){", "p=(char\u00a0*)malloc(100);", "}", "void\u00a0Test(void){", "char\u00a0*str=NULL;", "GetMemory(str);", "strcpy(str,\u201dhello\u00a0world\u201d);", "printf(str);", "}", "\u7b54", "GetMemory", "strcpy(str,\u00a0\u201chello\u00a0world\u201d);", "\u4fee\u6539\u5982\u4e0b", "char\u00a0*GetMemory(){", "char\u00a0*p=(char\u00a0*)malloc(100);", "return\u00a0p;", "}", "void\u00a0Test(void){", "char\u00a0*str=NULL;", "str=GetMemory();", "strcpy(str,\u201dhello\u00a0world\u201d);", "printf(str);", "}", "\u65b9\u6cd5\u4e8c", "void\u00a0GetMemory2(char\u00a0**p,\u00a0int\u00a0num)", "{", "*p\u00a0=\u00a0(char\u00a0*)malloc(sizeof(char)\u00a0*\u00a0num);", "}", "\u00a0", "\u00a0", "17.\u00a0", "a)\u00a0", "\uff03", "union\u00a0", "{\u00a0", "int\u00a0i;\u00a0", "char\u00a0x[2];\u00a0", "}a;\u00a0", "void\u00a0main()\u00a0", "{\u00a0", "a.x[0]\u00a0=\u00a010;\u00a0", "a.x[1]\u00a0=\u00a01;\u00a0", "printf(\u201c%d\u201d,a.i);\u00a0", "}\u00a0", "\u7b54\u6848\uff1a", "b)\u00a0", "main()\u00a0", "{\u00a0", "union{\u00a0/*", "int\u00a0i;\u00a0", "struct{\u00a0/*", "char\u00a0first;\u00a0", "char\u00a0second;\u00a0", "}half;\u00a0", "}number;\u00a0", "number.i=0\u00d74241;\u00a0/*", "printf(\u201c%c%c\\n\u201d,\u00a0number.half.first,\u00a0mumber.half.second);\u00a0", "number.half.first=\u2019a\u2019;\u00a0/*", "number.half.second=\u2019b\u2019;\u00a0", "printf(\u201c%x\\n\u201d,\u00a0number.i);\u00a0", "getch();\u00a0", "}\u00a0", "\u7b54\u6848\uff1a\u00a0", "6261\u00a0(number.i", "\u00a0", "\u00a0", "\u7b2c\u4e09\u90e8\u5206", "1.", "{", "public:", "String(const\u00a0char\u00a0*str\u00a0=\u00a0NULL);\u00a0//\u00a0", "String(const\u00a0String\u00a0&other);\u00a0//\u00a0", "~\u00a0String(void);\u00a0//\u00a0", "String\u00a0&\u00a0operate\u00a0=(const\u00a0String\u00a0&other);\u00a0//\u00a0", "private:", "char\u00a0*m_data;\u00a0//\u00a0", "};", "\u8bf7\u7f16\u5199", "\u7b54\uff1a", "//", "String::String(const\u00a0char\u00a0*str)", "{", "\u00a0\u00a0\u00a0\u00a0\u00a0//", "\u00a0\u00a0\u00a0if(str\u00a0==\u00a0NULL)", "\u00a0\u00a0\u00a0\u00a0{", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0m_data\u00a0=\u00a0new\u00a0char[1];\u00a0\u00a0//", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0*m_data\u00a0=\u00a0\u2018\\0\u2032;", "\u00a0\u00a0\u00a0\u00a0}", "\u00a0\u00a0\u00a0else", "\u00a0\u00a0\u00a0\u00a0{", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int\u00a0\u00a0length\u00a0=\u00a0strlen(str);", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0m_data\u00a0=\u00a0new\u00a0char[length\u00a0+\u00a01];\u00a0\u00a0//", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0strcpy(m_data,\u00a0str);", "\u00a0\u00a0\u00a0\u00a0}", "}", "\u00a0", "//", "~String::String(void)", "{", "\u00a0\u00a0\u00a0delete[]\u00a0\u00a0m_data;\u00a0\u00a0//", "}", "\u00a0", "//", "String::String(const\u00a0String\u00a0&other)", "{", "\u00a0\u00a0int\u00a0length\u00a0=\u00a0strlen(other.m_data);", "\u00a0\u00a0m_data\u00a0\u00a0=\u00a0\u00a0new\u00a0char[length\u00a0+\u00a01];", "\u00a0\u00a0strcpy(m_data,\u00a0other.m_data);", "}", "\u00a0", "//", "String&\u00a0String:operate\u00a0=\u00a0(const\u00a0String\u00a0&other)", "{", "\u00a0\u00a0//", "\u00a0\u00a0if(this\u00a0!=\u00a0&other)", "\u00a0\u00a0{", "\u00a0\u00a0\u00a0\u00a0//", "\u00a0\u00a0\u00a0char\u00a0*temp\u00a0=\u00a0new\u00a0char[strlen(other.m_data)\u00a0+\u00a01];", "\u00a0\u00a0\u00a0\u00a0strcpy(temp,other.m_data);", "\u00a0\u00a0\u00a0\u00a0//", "\u00a0\u00a0\u00a0delete\u00a0[]\u00a0m_data;", "\u00a0\u00a0\u00a0\u00a0strcpy(m_data,\u00a0temp);", "\u00a0\u00a0}", "\u00a0\u00a0\u00a0\u00a0return\u00a0*this;", "}\u00a0", "\u00a0", "2.", "\u5df2\u77e5", "\u00a0", "char\u00a0*strcpy(char\u00a0*strDest,\u00a0const\u00a0char\u00a0*strSrc);", "\u00a0", "\u5176\u4e2d", "\u00a0", "\u7b54\uff1a", "\u56e0\u4e3a\u8fd9\u9053\u9898\u7528\u5230\u4e86", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if\u00a0(\u00a0StrDest\u00a0==\u00a0NULL\u00a0||\u00a0strSrc\u00a0==\u00a0NULL\u00a0){", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0throw\u00a0runtime_error\u00a0(\u00a0\u201cStrDest\u00a0==\u00a0NULL\u00a0||\u00a0strSrc\u00a0==\u00a0NULL\u201d\u00a0);", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0char\u00a0*temp\u00a0=\u00a0StrDest;", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0while\u00a0(\u00a0(*StrDest++\u00a0=\u00a0*strSrc++\u00a0)\u00a0!=\u00a0\u2018\\0\u2032\u00a0)", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0;//empty", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return\u00a0temp;", "\u00a0", "}", "\u4f46\u662f", "\u5f88\u660e\u663e\uff0c\u8fd9\u662f\u4e0d\u5141\u8bb8\u7684\uff0c", "char*\u00a0mystrcpy\u00a0(\u00a0const\u00a0char*\u00a0,\u00a0const\u00a0char*\u00a0);", "\u8fd9\u6837\u5b50\uff0c\u5728\u94fe\u63a5\u671f\uff0c\u7f16\u8bd1\u5668\u4f1a\u629b\u51fa\u4e00\u4e2a\u94fe\u63a5\u9519\u8bef\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4fee\u6b63\uff0c\u6240\u4ee5\uff0c\u8fd9\u9053\u9898\u7684\u5b8c\u6574\u7b54\u6848\uff0c\u5982\u4e0b", "char*\u00a0mystrcpy\u00a0(\u00a0char\u00a0*\u00a0StrDest\u00a0,\u00a0const\u00a0char\u00a0*strSrc\u00a0){", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if\u00a0(\u00a0StrDest\u00a0==\u00a0NULL\u00a0||\u00a0strSrc\u00a0==\u00a0NULL\u00a0){", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0throw\u00a0runtime_error\u00a0(\u00a0\u201cStrDest\u00a0==\u00a0NULL\u00a0||\u00a0strSrc\u00a0==\u00a0NULL\u201d\u00a0);", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0char\u00a0*temp\u00a0=\u00a0StrDest;", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0while\u00a0(\u00a0(*StrDest++\u00a0=\u00a0*strSrc++\u00a0)\u00a0!=\u00a0\u2018\\0\u2032\u00a0)", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0;//empty", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return\u00a0temp;", "\u00a0", "}", "char*\u00a0mystrcpy\u00a0(\u00a0const\u00a0char*\u00a0,\u00a0const\u00a0char*\u00a0);", "\u00a0", "//", "\u7b54\uff1a", "using\u00a0namespace\u00a0std;", "\u00a0", "void\u00a0main()", "{", "char\u00a0a[50];memset(a,0,sizeof(a));", "int\u00a0i=0,j;", "char\u00a0t;", "cin.getline(a,50,\u2019\\n\u2019);", "for(i=0,j=strlen(a)-1;i<strlen(a)/2;i++,j\u2013)", "{", "\u00a0\u00a0\u00a0t=a[i];", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0a[i]=a[j];", "\u00a0\u00a0\u00a0a[j]=t;", "}", "cout<<a<<endl;\u00a0", "}", "//", "string\u00a0str;", "cin>>str;", "str.replace;", "cout<<str;", "\u00a0", "4.\u00a0", "\u7b54\uff1a", "A1:", "16", "int\u00a0i\u00a0=\u00a065536;", "cout\u00a0<<\u00a0i;\u00a0//\u00a0", "int\u00a0i\u00a0=\u00a065535;", "cout\u00a0<<\u00a0i;\u00a0//\u00a0", "32", "int\u00a0i\u00a0=\u00a065536;", "cout\u00a0<<\u00a0i;\u00a0//\u00a0", "int\u00a0i\u00a0=\u00a065535;", "cout\u00a0<<\u00a0i;\u00a0//\u00a0", "A2:", "int\u00a0a\u00a0=\u00a0~0;", "if(\u00a0a>65536\u00a0)\u00a0", "{", "\u00a0\u00a0\u00a0\u00a0cout<<\u201d32\u00a0bit\u201d<<endl;", "}", "else", "{", "\u00a0\u00a0\u00a0\u00a0cout<<\u201d16\u00a0bit\u201d<<endl;", "}", "5,\u00a0", "\u7b54\uff1a", "BOOL\u00a0:\u00a0if\u00a0(\u00a0!a\u00a0)\u00a0or\u00a0if(a)", "int\u00a0:\u00a0if\u00a0(\u00a0a\u00a0==\u00a00)", "float\u00a0:\u00a0const\u00a0EXPRESSION\u00a0EXP\u00a0=\u00a00.000001", "if\u00a0(\u00a0a\u00a0<\u00a0EXP\u00a0&&\u00a0a\u00a0>-EXP)", "pointer\u00a0:\u00a0if\u00a0(\u00a0a\u00a0!=\u00a0NULL)\u00a0or\u00a0if(a\u00a0==\u00a0NULL)\u00a0", "\u00a0", "6.", "\u7b54\uff1a", "#include\u00a0<stdio.h>", "void\u00a0main()", "{", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int\u00a0i=60;", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int\u00a0j=50;", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0i=i+j;", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0j=i-j;", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0i=i-j;", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0printf(\u201ci=%d\\n\u201d,i);", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0printf(\u201cj=%d\\n\u201d,j);", "}", "\u65b9\u6cd5\u4e8c\uff1a", "i^=j;", "j^=i;", "i^=j;", "\u65b9\u6cd5\u4e09\uff1a", "//\u00a0", "a\u00a0=\u00a0a+b-(b=a)", "\u00a0", "\u7b54\uff1a", "\u00a0", "8.\u00a0", "\u7b54\u6848\uff1a", "\uff03", "\uff03", "using\u00a0namespace\u00a0std;", "\u00a0", "void\u00a0Order(vector<int>&\u00a0data)\u00a0//bubble\u00a0sort", "{", "int\u00a0count\u00a0=\u00a0data.size()\u00a0;", "int\u00a0tag\u00a0=\u00a0false\u00a0;\u00a0//\u00a0", "for\u00a0(\u00a0int\u00a0i\u00a0=\u00a00\u00a0;\u00a0i\u00a0<\u00a0count\u00a0;\u00a0i++)", "{", "for\u00a0(\u00a0int\u00a0j\u00a0=\u00a00\u00a0;\u00a0j\u00a0<\u00a0count\u00a0-\u00a0i\u00a0-\u00a01\u00a0;\u00a0j++)", "{", "if\u00a0(\u00a0data[j]\u00a0>\u00a0data[j+1])", "{", "tag\u00a0=\u00a0true\u00a0;", "int\u00a0temp\u00a0=\u00a0data[j]\u00a0;", "data[j]\u00a0=\u00a0data[j+1]\u00a0;", "data[j+1]\u00a0=\u00a0temp\u00a0;", "}", "}", "if\u00a0(\u00a0!tag\u00a0)", "break\u00a0;", "}", "}", "\u00a0", "void\u00a0main(\u00a0void\u00a0)", "{", "vector<int>data;", "ifstream\u00a0in(\u201cc:\\\\data.txt\u201d);", "if\u00a0(\u00a0!in)", "{", "cout<<\u201dfile\u00a0error!\u201d;", "exit(1);", "}", "int\u00a0temp;", "while\u00a0(!in.eof())", "{", "in>>temp;", "data.push_back(temp);", "}", "in.close();\u00a0//", "Order(data);", "ofstream\u00a0out(\u201cc:\\\\result.txt\u201d);", "if\u00a0(\u00a0!out)", "{", "cout<<\u201dfile\u00a0error!\u201d;", "exit(1);", "}", "for\u00a0(\u00a0i\u00a0=\u00a00\u00a0;\u00a0i\u00a0<\u00a0data.size()\u00a0;\u00a0i++)", "out<<data<<\u201d\u00a0\u201c;", "out.close();\u00a0//", "}", "\u00a0", "9.", "struct\u00a0Node", "{", "int\u00a0data\u00a0;", "Node\u00a0*next\u00a0;", "};", "typedef\u00a0struct\u00a0Node\u00a0Node\u00a0;", "\u00a0", "(1)", "Node\u00a0*\u00a0ReverseList(Node\u00a0*head)\u00a0//", "{", "if\u00a0(\u00a0head\u00a0==\u00a0NULL\u00a0||\u00a0head->next\u00a0==\u00a0NULL\u00a0)", "return\u00a0head;", "Node\u00a0*p1\u00a0=\u00a0head\u00a0;", "Node\u00a0*p2\u00a0=\u00a0p1->next\u00a0;", "Node\u00a0*p3\u00a0=\u00a0p2->next\u00a0;", "r\u00a0/>p1->next\u00a0=\u00a0NULL\u00a0;", "while\u00a0(\u00a0p3\u00a0!=\u00a0NULL\u00a0)", "{", "p2->next\u00a0=\u00a0p1\u00a0;", "p1\u00a0=\u00a0p2\u00a0;", "p2\u00a0=\u00a0p3\u00a0;", "p3\u00a0=\u00a0p3->next\u00a0;", "}", "p2->next\u00a0=\u00a0p1\u00a0;", "head\u00a0=\u00a0p2\u00a0;", "return\u00a0head\u00a0;", "}", "(2)", "Node\u00a0*\u00a0Merge(Node\u00a0*head1\u00a0,\u00a0Node\u00a0*head2)", "{", "if\u00a0(\u00a0head1\u00a0==\u00a0NULL)", "return\u00a0head2\u00a0;", "if\u00a0(\u00a0head2\u00a0==\u00a0NULL)", "return\u00a0head1\u00a0;", "Node\u00a0*head\u00a0=\u00a0NULL\u00a0;", "Node\u00a0*p1\u00a0=\u00a0NULL;", "Node\u00a0*p2\u00a0=\u00a0NULL;", "if\u00a0(\u00a0head1->data\u00a0<\u00a0head2->data\u00a0)", "{", "head\u00a0=\u00a0head1\u00a0;", "p1\u00a0=\u00a0head1->next;", "p2\u00a0=\u00a0head2\u00a0;", "}", "else", "{", "head\u00a0=\u00a0head2\u00a0;", "p2\u00a0=\u00a0head2->next\u00a0;", "p1\u00a0=\u00a0head1\u00a0;", "}", "Node\u00a0*pcurrent\u00a0=\u00a0head\u00a0;", "while\u00a0(\u00a0p1\u00a0!=\u00a0NULL\u00a0&&\u00a0p2\u00a0!=\u00a0NULL)", "{", "if\u00a0(\u00a0p1->data\u00a0<=\u00a0p2->data\u00a0)", "{", "pcurrent->next\u00a0=\u00a0p1\u00a0;", "pcurrent\u00a0=\u00a0p1\u00a0;", "p1\u00a0=\u00a0p1->next\u00a0;", "}", "else", "{", "pcurrent->next\u00a0=\u00a0p2\u00a0;", "pcurrent\u00a0=\u00a0p2\u00a0;", "p2\u00a0=\u00a0p2->next\u00a0;", "}", "}", "if\u00a0(\u00a0p1\u00a0!=\u00a0NULL\u00a0)", "pcurrent->next\u00a0=\u00a0p1\u00a0;", "if\u00a0(\u00a0p2\u00a0!=\u00a0NULL\u00a0)", "pcurrent->next\u00a0=\u00a0p2\u00a0;", "return\u00a0head\u00a0;", "}", "(3)", "\u7b54\u6848\uff1a", "Node\u00a0*\u00a0MergeRecursive(Node\u00a0*head1\u00a0,\u00a0Node\u00a0*head2)", "{", "if\u00a0(\u00a0head1\u00a0==\u00a0NULL\u00a0)", "return\u00a0head2\u00a0;", "if\u00a0(\u00a0head2\u00a0==\u00a0NULL)", "return\u00a0head1\u00a0;", "Node\u00a0*head\u00a0=\u00a0NULL\u00a0;", "if\u00a0(\u00a0head1->data\u00a0<\u00a0head2->data\u00a0)", "{", "head\u00a0=\u00a0head1\u00a0;", "head->next\u00a0=\u00a0MergeRecursive(head1->next,head2);", "}", "else", "{", "head\u00a0=\u00a0head2\u00a0;", "head->next\u00a0=\u00a0MergeRecursive(head1,head2->next);", "}", "return\u00a0head\u00a0;", "}\u00a0", "\u00a0", "10.\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u8f93\u5165\u7684\u662f\u6574\u6570", "\u7b54\uff1a", "void\u00a0fun(\u00a0int\u00a0a\u00a0)", "{", "printf(\u00a0\u201c%d\u201d,\u00a0a%10\u00a0);", "a\u00a0/=\u00a010;", "if(\u00a0a\u00a0<=0\u00a0)return;", "fun(\u00a0a\u00a0);", "}", "\u00a0", "11.\u00a0", "\u7b54\uff1a", "const\u00a0int\u00a0MINNUMBER\u00a0=\u00a0-32767\u00a0;", "int\u00a0find_sec_max(\u00a0int\u00a0data[]\u00a0,\u00a0int\u00a0count)", "{", "int\u00a0maxnumber\u00a0=\u00a0data[0]\u00a0;", "int\u00a0sec_max\u00a0=\u00a0MINNUMBER\u00a0;", "for\u00a0(\u00a0int\u00a0i\u00a0=\u00a01\u00a0;\u00a0i\u00a0<\u00a0count\u00a0;\u00a0i++)", "{", "if\u00a0(\u00a0data\u00a0>\u00a0maxnumber\u00a0)", "{", "sec_max\u00a0=\u00a0maxnumber\u00a0;", "maxnumber\u00a0=\u00a0data\u00a0;", "}", "else", "{", "if\u00a0(\u00a0data\u00a0>\u00a0sec_max\u00a0)", "sec_max\u00a0=\u00a0data\u00a0;", "}", "}", "return\u00a0sec_max\u00a0;", "}", "\u00a0", "12.\u00a0", "\u7b54\uff1a", "struct\u00a0node\u00a0{\u00a0char\u00a0val;\u00a0node*\u00a0next;}", "bool\u00a0check(const\u00a0node*\u00a0head)\u00a0{}\u00a0//return\u00a0false\u00a0:\u00a0", "\u4e00\u79cd", "bool\u00a0check(const\u00a0node*\u00a0head)", "{", "if(head==NULL)\u00a0return\u00a0false;", "node\u00a0*low=head,\u00a0*fast=head->next;", "while(fast!=NULL\u00a0&&\u00a0fast->next!=NULL)", "{", "low=low->next;", "fast=fast->next->next;", "if(low==fast)\u00a0return\u00a0true;", "}", "return\u00a0false;", "}", "\u00a0", "13..\u00a0", "\u7b54\uff1a", "#include\u00a0<iostream>", "using\u00a0namespace\u00a0std;", "void\u00a0GetNext(char\u00a0*t,int\u00a0*next)", "{", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int\u00a0i\u00a0=\u00a01,j\u00a0=\u00a00;", "\u00a0 \u00a0\u00a0\u00a0int\u00a0n\u00a0=\u00a0strlen(t);", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0next[0]\u00a0=\u00a0-1;", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0next[1]\u00a0=\u00a00;", "\u00a0\u00a0\u00a0while(i\u00a0<\u00a0n)", "{", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if((j\u00a0==\u00a0-1)\u00a0||\u00a0(t[j]\u00a0==\u00a0t[i]))", "{", "next[++i]\u00a0=\u00a0++j;", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0else", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0j\u00a0=\u00a0next[j];", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}", "\u00a0", "}", "\u00a0", "\u00a0", "int\u00a0KMP(char\u00a0*s,char\u00a0*t)", "\u00a0", "{", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int\u00a0n\u00a0=\u00a0strlen(s);", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int\u00a0m\u00a0=\u00a0strlen(t);", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int\u00a0*next\u00a0=\u00a0new\u00a0int[m];", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0GetNext(t,next);", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0for(int\u00a0i=0,j=0;i<n&&j<m;)", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if((j\u00a0==\u00a0-1)||(s[i]\u00a0==\u00a0t[j]))", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0i++;", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0j++;", "\u00a0", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0else", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0j\u00a0=\u00a0next[j];", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//delete\u00a0[]\u00a0next;", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return\u00a0(j==m?i-j:-1);", "\u00a0", "}", "int\u00a0main()", "\u00a0", "{", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int\u00a0pos;", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0char\u00a0s[100];", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0char\u00a0t[10];", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cout<<\u201dInput\u00a0s:\u201d;", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cin>>s;", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cout<<\u201dInput\u00a0t:\u201d;", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cin>>t;", "\u00a0", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0pos\u00a0=\u00a0KMP(s,t);", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if(pos\u00a0!=\u00a0-1)", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int\u00a0i\u00a0=\u00a00;", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0while(i\u00a0<\u00a0strlen(t))", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cout<<s[pos+i];", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0i++;", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0else", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cout<<\u201dNot\u00a0found!\u201d<<endl;", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}", "\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return\u00a00;", "\u00a0", "}", "\u00a0", "14..\u00a0", "\u7b54", "bool\u00a0IsBigendian()", "{", "unsigned\u00a0short\u00a0usData\u00a0=\u00a00\u00d71122;", "unsigned\u00a0char\u00a0*pucData\u00a0=\u00a0(unsigned\u00a0char*)&usData;", "return\u00a0(*pucData\u00a0==\u00a00\u00d722);", "}", "\u00a0", "15.\u7528\u9012\u5f52\u7b97\u6cd5\u5224\u65ad\u6570\u7ec4", "\u7b54\uff1a", "\u9012\u5f52\u7684\u65b9\u6cd5\uff0c\u8bb0\u5f55\u5f53\u524d\u6700\u5927\u7684\uff0c\u5e76\u4e14\u5224\u65ad\u5f53\u524d\u7684\u662f\u5426\u6bd4\u8fd9\u4e2a\u8fd8\u5927\uff0c\u5927\u5219\u7ee7\u7eed\uff0c\u5426\u5219\u8fd4\u56de", "bool\u00a0fun(\u00a0int\u00a0a[],\u00a0int\u00a0n\u00a0)", "{", "if(\u00a0n=\u00a0=1\u00a0)", "return\u00a0true;", "if(\u00a0n=\u00a0=2\u00a0)", "return\u00a0a[n-1]\u00a0>=\u00a0a[n-2];", "return\u00a0fun(\u00a0a,n-1)\u00a0&&\u00a0(\u00a0a[n-1]\u00a0>=\u00a0a[n-2]\u00a0);", "}", "\n16.", "1)", "\u00a0", "2)\u5199\u4e00\u4e2a\u51fd\u6570\u5c06", "\u7b54\uff1a", "#include\u00a0<stdio.h>", "#define\u00a0SPACE\u00a0\u2018\u00a0\u2018", "#define\u00a0ENDL\u00a0\u2018\\0\u2032", "char*\u00a0s\u00a0=\u00a0\u201cThe\u00a0quick\u00a0brown\u00a0fox\u00a0jumps\u00a0over\u00a0the\u00a0lazy\u00a0dog\u201d;", "void\u00a0str_reverse(char*\u00a0p1,char*\u00a0p2)", "{\u00a0", "if(p1==p2)", "return;", "*p1\u00a0=\u00a0(*p1)+(*p2);", "*p2\u00a0=\u00a0(*p1)-(*p2);", "*p1\u00a0=\u00a0(*p1)-(*p2);", "if(p1==p2-1)", "return;", "else\u00a0", "str_reverse(++p1,\u2013p2);", "}", "void\u00a0str_word_reverse(char*\u00a0str)", "{", "char\u00a0*q1=str,\u00a0*q2=str,\u00a0*t;", "while(*q1==SPACE)q1++;", "if(*q1==ENDL)", "return;\u00a0", "else\u00a0", "q2=q1+1;", "\u00a0", "while(\u00a0(*q2!=SPACE)\u00a0&&\u00a0(*q2!=ENDL)\u00a0)q2++;", "\u00a0", "t=q2\u2013;\u00a0", "str_reverse(q1,q2);", "\u00a0 if(*t==ENDL)", "return;", "else\u00a0", "str_word_reverse(t);", "}", "int\u00a0main(int\u00a0a\u00a0,char**\u00a0b)", "{", "printf(\u201c%s\\n\u201d,s);", "str_reverse(s,s+strlen(s)-1);", "printf(\u201c%s\\n\u201d,s);", "str_word_reverse(s);", "printf(\u201c%s\\n\u201d,s);", "return\u00a00;", "}", "Output:", "The\u00a0quick\u00a0brown\u00a0fox\u00a0jumps\u00a0over\u00a0the\u00a0lazy\u00a0dog", "god\u00a0yzal\u00a0eht\u00a0revo\u00a0spmuj\u00a0xof\u00a0nworb\u00a0kciuq\u00a0ehT", "dog\u00a0lazy\u00a0the\u00a0over\u00a0jumps\u00a0fox\u00a0brown\u00a0quick\u00a0The", "\u00a0", "\u00a0"], "title": "\u8fd1\u671f\u51fa\u73b0\u7684C++\u9762\u8bd5\u9898\u6574\u7406\uff08\u9644\u8be6\u7ec6\u7b54\u6848\uff09"},
{"contents": ["1.", "\n\u00a0\u8f93\u51fa\u4ec0\u4e48\uff1f", "\n\u00a0const char str1[] = \u201cabc\u201d;", "\n\u00a0const char str2[] = \u201cabc\u201d;", "\n\u00a0const char *p1 = \u201cabc\u201d;", "\n\u00a0const char *p2 = \u201cabc\u201d;", "\u00a0cout << (str1 == str2) << endl;", "\n\u00a0cout << (p1 == p2) << endl;", "2.", "\n\u00a0\u8f93\u51fa\u4ec0\u4e48\uff1f", "\n\u00a0void Show(int num[])", "\n\u00a0{", "\n\u00a0\u00a0cout << sizeof(num) << endl;", "\n\u00a0}", "3.\u00a0", "\n\u00a0\u5b9e\u73b0 strcpy()", "\n\u00a0char *strcpy(char *strD, char *strS)", "4.", "\u00a0socket\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u7684\u5b9e\u73b0", "5.", "\n\u00a00XFF\u6362\u57ce\u5341\u8fdb\u5236\u662f\u591a\u5c11", "6.", "\n\u00a0\u8bf4\u51fa\u51fd\u6570\u8fd0\u884c\u7ed3\u679c,\u5e76\u8bf4\u660e\u4e3a\u4ec0\u4e48", "\n\u00a0void malloc(char *p)", "\n\u00a0{", "\n\u00a0\u00a0p = (char *)malloc(100);", "\n\u00a0}", "\n\u00a0", "\n\u00a0int main()", "\n\u00a0{", "\n\u00a0\u00a0char *p = NULL;", "\n\u00a0\u00a0malloc(p);", "\n\u00a0\u00a0if (P != NULL)", "\n\u00a0\u00a0{", "\n\u00a0\u00a0\u00a0cout << \u201cok\u201d << endl;", "\n\u00a0\u00a0}", "\n\u00a0\u00a0else", "\n\u00a0\u00a0{", "\n\u00a0\u00a0\u00a0cout << \u201cerror\u201d << endl;", "\n\u00a0\u00a0}", "\n\u00a0}"], "title": "\u552f\u4e00\u901a\u8bafC++\u9762\u8bd5\u9898"},
{"contents": [], "title": "\u7f8e\u51ef\u80a1\u4efd\u6280\u672f\u9762\u8bd5 C++"},
{"contents": ["\u9009\u62e9\u9898:", "\n1.", "\n#include <stdio.h>", "\nint main()", "\n{", "\n\u00a0char *str[] = {\u201cstr1\u2033,\u201dstr2\u2033,\u201dstr3\u2033};", "\n\u00a0char *p = str[0];", "\n\u00a0int i = 0;", "\n\u00a0while(i < 3)", "\n\u00a0\u00a0printf(\u201c%s\u201d,p ++);", "\n\u00a0return 0;", "\n}", "\n\u7a0b\u5e8f\u7ed3\u679c\u662f:", "\nA:str1 str2 str3\u00a0B:s t r", "\nC:str1 tr1 r1\u00a0\u00a0C:\u9519\u8bef", "\n2.", "\nstruct", "\n{", "\nint no;", "\n}work,*p = &work;", "\n\u9009\u62e9\u4e0b\u9762\u6b63\u786e\u7684\u5f15\u7528:", "\nA:work.no\u00a0B:(*p).no", "\nC:p->no\u00a0\u00a0D:work->no", "\n3.\u9009\u62e9\u6b63\u786e\u7684\u662f:\u00a0\u00a0 (\u610f\u601d\u5dee\u4e0d\u591a)", "\nA:\u00a0\u00a0\u00a0B:", "\nstruct A\u00a0\u00a0struct", "\n{int no ;}C[10];\u00a0{int no;}A[10];", "\nC:\u00a0\u00a0\u00a0D:", "\nstruct A\u00a0\u00a0struct", "\n{ int no;};\u00a0\u00a0{int no;};", "\n4.", "\nint main()", "\n{", "\nlong l;", "\nfloat f;", "\nint i = sizeof(l);", "\nint j = sizeof(f)", "\nprintf(\u201ci = %d\\n\u201d,i);", "\nprintf(\u201cj = %d\\n\u201d,j);", "\n}", "\n\u9009\u62e9\u8f93\u51fa\u7ed3\u679c:", "\nA: i = 4\u00a0\u00a0B:i = 4", "\n\u00a0\u00a0 j = 4\u00a0\u00a0\u00a0 j = 8", "\nC: i = 8\u00a0\u00a0D:i = 8", "\n\u00a0\u00a0 j = 4\u00a0\u00a0\u00a0 j = 8", "\n5.", "\nvoid fun(int *m,int *n)", "\n{", "\n\u00a0\u00a0\u00a0 \u00a0int i = 0;", "\n\u00a0i = *m;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 m = n;", "\n\u00a0*m = i;", "\n}", "\nint main()", "\n{", "\n\u00a0int i = 4;", "\n\u00a0int j = 5;", "\n\u00a0fun(&i,&j);", "\n\u00a0printf(\u201ci=%d,j=%d\u201d,i,j);", "\n\u00a0return 0;", "\n}", "\n\u9009\u62e9\u8f93\u5165\u7ed3\u679c:", "\nA: i = 4,j = 5\u00a0B:i = 4 j = 5", "\nC: i = 5,j = 5\u00a0D:\u8f93\u5165\u9519\u8bef", "\u5927\u9898:", "\n\u82f1\u6587\u9898,\u9898\u76ee\u7ffb\u8bd1\u5982\u4e0b:", "\n\u6d41\u7a0b\u56fe:\u5982\u679c\u4e00\u4e2a\u672a\u77e5\u6587\u4ef6\u5b58\u653e\u5728PC\u4e2d,\u5982\u4f55\u5feb\u901f\u627e\u5230\u6b64\u6587\u4ef6,\u8bf7\u5199\u51fa\u6d41\u7a0b\u56fe", "\u673a\u8bd5\uff1a\u73b0\u573a\u5199\u4ee3\u7801\uff1a\u5173\u4e8eMFC\u7684\u4f7f\u7528", "\n\u6d41\u5a92\u4f53\u5ba2\u6237\u7aef\u767b\u5165\u754c\u9762\uff0c\u53ca\u4e3b\u754c\u9762\u3002\u5e76\u4ecb\u7ecd\u529f\u80fd\u3002"], "title": "\u81f4\u82af\u5faeC++ MFC\u9762\u8bd5\u9898"},
{"contents": ["1.1\u00a0C++:", "\u00a0", "1\u3001\u00a0C++", "\u00a0", "2\u3001\u00a0class\u00a0A", "{", "public;", "A(){};", "};", "class\u00a0B:\u00a0public\u00a0A", "{", "public:", "B(){};", "};", "\u00a0", "Bb;", "\u7684\u6267\u884c\u987a\u5e8f\u4e3a\uff1a", "A(){};", "B(){};", "\u00a0", "3\u3001\u00a0class\u00a0A", "\u00a0", "{", "public;", "static\u00a0int\u00a0i;", "int\u00a0j;", "void\u00a0fun(int\u00a0k);", "};", "\u00a0", "A::fun(int\u00a0k)", "{", "i=j=k;", "};", "\u00a0", "A\u00a0a,b;", "a.fun(1);", "b.fun(2);", "\u00a0", "\u8fd9\u65f6", "4\u3001\u00a0class\u00a0A", "{", "public;", "int\u00a0i;", "virtual\u00a0void\u00a0fune(){i=1;};", "};", "class\u00a0B:public\u00a0A", "{", "public;", "void\u00a0func(){i=2};", "};", "\u00a0", "B\u00a0b:", "A*pa=&b;", "pa->func();", "pa->i\u00a0", "\u00a0", "\u00a0", "5\u3001\u00a0class\u00a0A{", "public\u00a0;", "void\u00a0funcA();", "};", "class\u00a0B:virtual\u00a0public\u00a0A", "{}", "class\u00a0C:virtual\u00a0public\u00a0A", "{}", "class\u00a0D:publicc\u00a0B,C", "{", "funcA();", "}", "};", "\u00a0", "class\u00a0A{", "public:", "void\u00a0funcA()", "};", "class\u00a0B:public\u00a0A", "{};", "class\u00a0C:public\u00a0A", "{};", "class\u00a0D:public\u00a0B,C", "{", "void\u00a0funcD()", "{", "funcA();", "}", "};", "\u00a0", "\u4ee5\u4e0a\u4e24\u7ec4\u8868\u8fbe\u5f0f\uff1a", "\u00a0", "6\u3001\u00a0#include<stdio.h>", "class\u00a0A{", "public;", "int\u00a0i;", "};", "\u00a0", "class\u00a0B:public\u00a0A", "{int\u00a0j}", "\u00a0", "class\u00a0C:public\u00a0A", "{int\u00a0k;};", "\u00a0", "class\u00a0D:public\u00a0B,C", "{", "int\u00a01;", "};", "\u00a0", "main()", "{", "printf(\u201c%d\u201d,sizeof(class\u00a0D));", "}", "\u7ed3\u679c\u4e3a", "\u00a0", "7\u3001\u00a0class\u00a0A", "{", "public\u00a0:", "void\u00a0A(){};", "};", "\u00a0", "class\u00a0A", "{", "public\u00a0:", "A(){};", "};", "\u00a0", "\u4ee5\u4e0a\u4e24\u7ec4\u8868\u8fbe\u5f0f\uff1a", "\u00a0", "8\u3001\u00a0\u9605\u8bfb\u4ee5\u4e0b", "class\u00a0cB{", "public:", "static\u00a0int\u00a0iValue;", "cB(){iValue\u00a0=\u00a00;}", "cB(int\u00a0iV){iValue\u00a0=\u00a0iV;}", "};", "void\u00a0main()", "{", "cB\u00a0ob1,ob2,ob3(5);", "ob1.iValue\u00a0=\u00a02;", "ob2.iValue\u00a0=\u00a010;", "printf(\u201c%d\u201d,ob1.iValue);", "printf(\u201c%d\u201d,ob1.iValue+ob2.iValue+ob3.iValue);", "}", "\u7b54\u6848\uff1a", "\u00a0", "\u00a0", "\u00a0", "9\u3001\u00a0\u4e0b\u9762\u7684\u51fd\u6570\u5c06\u6d6e\u70b9\u578b\u53c2\u6570", "#include", "void\u00a0func(float\u00a0para)", "{", "float\u00a0*\u00a0pFloat;", "pFloat\u00a0=\u00a0para;", "cout\u00a0<<\u00a0pFloat;", "}", "\u00a0", "\u9519\u8bef\u4e3a\uff1a", "\u6539\u6b63\u65b9\u6cd5\u4e3a\uff1a", "_______________________________________________________________________", "\u00a0", "\u00a0", "10\u3001\u00a0\u9605\u8bfb\u4ee5\u4e0b", "class\u00a0First{", "public;", "int\u00a0iValue;", "protected;", "void\u00a0SetValue(int\u00a0iV){iValue\u00a0=\u00a0iV;}", "};", "class\u00a0Second\u00a0:\u00a0publicc\u00a0First\u00a0{", "public:", "int\u00a0total;", "public:", "void\u00a0SetTotal(int\u00a0iV1){", "total\u00a0=\u00a0iV1;", "SetValue(iV1*2);", "}", "}", "void\u00a0main()", "{", "Second\u00a0sob;", "sob.SetTotal(2);", "printf(\u201c%d%d\u201d,sob.total,sob.iValue);", ")"], "title": "\u6df1\u5733\u5e02\u601d\u8bfa\u5fb7\u6570\u5b57\u7cfb\u7edf\u6709\u9650\u516c\u53f8C++\u7b14\u8bd5\u9898"},
{"contents": ["\u9762\u8bd5", "1.int\u00a0a[][2]\u00a0=\u00a0{{a,b},{c,d}}", "\u00a0\u00a0char\u00a0**p\u00a0=\u00a0a;", "\u00a0\u00a0printf(\u201c%s\\n\u201d,*(p+1));", "\u00a0\u00a0p++;", "\u00a0printf(\u201c%s\\n\u201d,*p\u00a0+\u00a01);", "\u8f93\u51fa\u4ee5\u4e0b\u7ed3\u679c:", "2.string\u7c7b,\u5199\u51fa\u7c7b\u51fd\u6570", "string", "{", "public:", "\u00a0string(const\u00a0char\u00a0*str\u00a0=\u00a0NULL);", "\u00a0string(const\u00a0string\u00a0&other);", "\u00a0string\u00a0&operator\u00a0=(\u00a0const\u00a0string\u00a0&other);", "private:", "\u00a0\u00a0char\u00a0*m_pstr;", "}", "3.\u5229\u7528\u9012\u5f52\u5b9e\u73b0\u8f93\u51651\u8f93\u516511,\u8f93\u516512\u8f93\u51fa1122", "4.\u00a0void\u00a0GetMemory(char\u00a0*p)\u00a0", "{\u00a0", "p\u00a0=\u00a0(char\u00a0*)malloc(100);\u00a0", "}\u00a0", "void\u00a0Test(void)\u00a0\u00a0\u00a0", "{\u00a0", "char\u00a0*str\u00a0=\u00a0NULL;\u00a0", "GetMemory(str);\u00a0\u00a0", "strcpy(str,\u00a0\u201dhello\u00a0world\u201d);\u00a0", "printf(str);\u00a0", "}\u00a0", "\u8f93\u51fa\u7ed3\u679c:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0", "\u4e3a\u4ec0\u4e48:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0", "5.char\u00a0*p;", "\u00a0\u00a0char\u00a0a[5][5];", "\u00a0\u00a0char\u00a0*q\u00a0=\u00a0(char\u00a0*)malloc(100);", "\u00a0\u00a0printf(\u201c%d\\n\u201d,sizeof(p));", "printf(\u201c%d\\n\u201d,sizeof(a));", "printf(\u201c%d\\n\u201d,sizeof(a[5][5]));", "printf(\u201c%d\\n\u201d,sizeof(q));", "\u8f93\u51fa\u7ed3\u679c:", "6.\u91cd\u8f7d\u548c\u91cd\u5b9a\u4e49\u7684\u533a\u522b", "7.\u89e3\u51b3\u7ebf\u7a0b\u548c\u8fdb\u7a0b", "8.\u8bf4\u51faMFC\u4e2d\u6709\u90a3\u4e9bGDI\u7684\u5e93\u7c7b", "\u00a0", "\u9762\u8bd5:", "1.\u89e3\u91ca\u4e00\u4e0b\u7b14\u8bd5\u98984,\u5e76\u5982\u4f55\u4fee\u6539\u6210\u4e3a\u6211\u4eec\u60f3\u8981\u7684.", "2.\u56e0\u4e3a\u7b14\u8bd5\u98983\u6211\u6ca1\u505a,\u9762\u8bd5\u5b98\u95ee:\u4f60\u80fd\u89e3\u91ca\u4f60\u4e3a\u8fd9\u4e9b\u4e3a\u4ec0\u4e48\u6ca1\u505a", "3.\u4f60\u7b80\u5386\u4e0a\u9762\u7684\u9879\u76ee\u662f\u4ec0\u4e48\u65f6\u5019\u505a\u7684,\u4f55\u65f6\u505a\u7684,\u505a\u5b8c\u4e86\u6709\u4ec0\u4e48\u6536\u83b7.", "4.\u4f60\u8981\u6c42\u7684\u85aa\u8d44\u591a\u5c11?", "5.\u4f60\u8fd8\u6709\u4ec0\u4e48\u60f3\u95ee\u7684\u5417??\u00a0\u00a0", "\u00a0\u00a0\u6211\u5c31\u95ee\u4e86\u798f\u5229,\u52a0\u85aa\u7b49"], "title": "\u6df1\u5733\u8bfa\u5a01\u8fbeC++\u804c\u4f4d\u9762\u8bd5\u7ecf\u8fc7"},
{"contents": ["\u4e2d\u9752\u5b9d\u7f51\u9762\u8bd5\u9898\uff1a", "\u4ee5\u4e0b\u7ed9\u51fa\u7684\u662f\u6211\u4e4b\u524d\u53c2\u52a0\u4e00\u5bb6\u7f51\u7edc\u6e38\u620f\u516c\u53f8\u62db\u8058", "\u524d\u8a00\uff1a", "1\u00a0", "\u8003\u5bdf\u6570\u636e\u7ed3\u6784\u7684\u77e5\u8bc6\u70b9\uff0c\u8fd9\u91cc\u53ef\u4f7f\u7528\u7b5b\u9009\u6cd5\uff0c\u8be5\u65b9\u6cd5\u662f\u5927\u90e8\u5206\u6570\u636e\u7ed3\u6784\u4e66\u7c4d\u90fd\u6709\u8bb2\u89e3\u7684\u7b97\u6cd5\uff0c\u5f53\u7136\u8fd8\u6709\u65f6\u95f4\u590d\u6742\u5ea6\u66f4\u4f4e\u7684\u7b97\u6cd5\uff08\u7a7a\u95f4\u590d\u6742\u5ea6\uff09\uff0c\u4f46\u662f\u56e0\u4e3a\u6c42\u503c\u8303\u56f4\u4e3a", "int\u00a0main()", "{", "int\u00a0*sieve;", "int\u00a0n;", "int\u00a0iCounter=2,\u00a0iMax,\u00a0i;", "\u00a0", "printf(\u201cPlease\u00a0input\u00a0max\u00a0number:\u201d);", "scanf(\u201c%d\u201d,\u00a0&n);", "sieve=(int*)malloc((n-1)*sizeof(int));", "for(i=0;i<n-1;i++)\u00a0", "sieve[i]=i+2;\u00a0", "iMax\u00a0=\u00a0(int)sqrt(n);", "while\u00a0(iCounter<=iMax)\u00a0{", "for\u00a0(i=2*iCounter-2;\u00a0i<n-1;\u00a0i+=iCounter)", "sieve[i]\u00a0=\u00a00;", "iCounter++;\u00a0}", "for(i=0;\u00a0i<n-1;\u00a0i++)", "if\u00a0(sieve[i]!=0)\u00a0printf(\u201c%d\u00a0\u201d,sieve[i]);", "\u00a0", "return\u00a00;", "}", "\u00a0", "2\u00a0", "\u8003\u5bdf\u6570\u636e\u7ed3\u6784\u7684\u77e5\u8bc6\u70b9\uff0c\u6c42\u516c\u7ea6\u6570\u7684\u7b97\u6cd5\u5f88\u591a\uff0c\u53ef\u8003\u8651\u6548\u7387\u8f83\u9ad8\u7684\u6b27\u51e0\u91cc\u5fb7\u9012\u5f52\u7b97\u6cd5", "int\u00a0gcd(int\u00a0m,int\u00a0n){", "int\u00a0temp\u00a0=\u00a00;", "\u00a0", "if(m\u00a0<\u00a0n){", "temp\u00a0=\u00a0m;", "m\u00a0=\u00a0n;", "n\u00a0=\u00a0temp;", "}", "\u00a0", "if(n\u00a0==\u00a00)", "return\u00a0m;", "else", "return\u00a0gcd1(n,\u00a0m%n);", "\u00a0", "}", "3\u00a0", "\u8003\u5bdf", "int\u00a0main()", "{", "string\u00a0str;", "map<string,\u00a0int>\u00a0content;", "\u00a0", "for(\u00a0int\u00a0cnt\u00a0=\u00a00;\u00a0cnt\u00a0<\u00a010;\u00a0cnt++\u00a0)", "{", "cin\u00a0>>\u00a0str;", "(content.insert(make_pair(str,\u00a00)).first)->second++;", "}", "\u00a0", "map<string,\u00a0int>::iterator\u00a0it\u00a0=\u00a0content.begin();", "for(\u00a0;\u00a0it\u00a0!=\u00a0content.end();\u00a0++it\u00a0)", "cout\u00a0<<\u00a0it->first\u00a0<<\u00a0\u201d:\u00a0\u201d\u00a0<<\u00a0it->second\u00a0<<\u00a0endl;", "\u00a0", "return\u00a00;", "}", "4\u00a0", "\u8003\u5bdf\u6570\u636e\u7ed3\u6784\uff0c\u6587\u4ef6\u76ee\u5f55\u662f\u4e00\u4e2a\u6811", "5\u00a0", "\u8003\u5bdf", "\u00a0", "\u95ee\u7b54\u9898\uff1a", "1\u00a0", "Subversion\u662f\u7248\u672c\u7ba1\u7406\u5de5\u5177\uff0c\u5b83\u4e0e", "2\u00a0", "Wiki", "3\u00a0", "TDD", "4\u00a0", "\u5355\u5143\u6d4b\u8bd5\uff0c\u662f\u6700\u5c0f\u7c92\u5ea6\u7684\u6d4b\u8bd5\uff0c\u4ee5\u6d4b\u8bd5\u67d0\u4e2a\u529f\u80fd\u6216\u4ee3\u7801\u5757\u3002\u4e00\u822c\u7531\u7a0b\u5e8f\u5458\u6765\u505a\uff0c\u56e0\u4e3a\u5b83\u9700\u8981\u77e5\u9053\u5185\u90e8\u7a0b\u5e8f\u8bbe\u8ba1\u548c\u7f16\u7801\u7684\u7ec6\u8282\u3002\u5355\u5143\u6d4b\u8bd5\u7684\u5bf9\u8c61\u662f\u8f6f\u4ef6\u8bbe\u8ba1\u7684\u6700\u5c0f\u5355\u4f4d\u2014\u2014\u6a21\u5757\u3002\u5355\u5143\u6d4b\u8bd5\u7684\u4f9d\u636e\u662f\u8be6\u7ec6\u8bbe\u63cf\u8ff0\uff0c\u5355\u5143\u6d4b\u8bd5\u5e94\u5bf9\u6a21\u5757\u5185\u6240\u6709\u91cd\u8981\u7684\u63a7\u5236\u8def\u5f84\u8bbe\u8ba1\u6d4b\u8bd5\u7528\u4f8b\uff0c\u4ee5\u4fbf\u53d1\u73b0\u6a21\u5757\u5185\u90e8\u7684\u9519\u8bef\u3002\u5355\u5143\u6d4b\u8bd5\u591a\u91c7\u7528\u767d\u76d2\u6d4b\u8bd5\u6280\u672f\uff0c\u7cfb\u7edf\u5185\u591a\u4e2a\u6a21\u5757\u53ef\u4ee5\u5e76\u884c\u5730\u8fdb\u884c\u6d4b\u8bd5\u3002\u5de5\u5177\u5305\u62ec", "\u00a0", "5\u00a0", "\u7f16\u7a0b\u89c4\u8303\u5c31\u662f\u4e3a\u4e86\u4fbf\u4e8e\u81ea\u5df1\u548c\u4ed6\u4eba\u9605\u8bfb\u7406\u89e3\u6e90\u7a0b\u5e8f\uff0c\u800c\u5236\u5b9a\u7684\u4e00\u4e2a\u89c4\u8303\u3002\u5982\u5728", "6\u00a0", "MFC,", "7\u00a0", "\u6e90\u6587\u4ef6\u6240\u9700\u8981\uff08", "8\u00a0", "\u201c\u9762\u5411\u5bf9\u8c61\u201d\u662f\u4e13\u6307\u5728\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\u91c7\u7528\u5c01\u88c5\u3001\u7ee7\u627f\u3001\u62bd\u8c61\u7b49\u8bbe\u8ba1\u65b9\u6cd5\u3002\u53ef\u662f\uff0c\u8fd9\u4e2a\u5b9a\u4e49\u663e\u7136\u4e0d\u80fd\u518d\u9002\u5408\u73b0\u5728\u60c5\u51b5\u3002\u9762\u5411\u5bf9\u8c61\u7684\u601d\u60f3\u5df2\u7ecf\u6d89\u53ca\u5230\u8f6f\u4ef6\u5f00\u53d1\u7684\u5404\u4e2a\u65b9\u9762\u3002\u5982\uff0c\u9762\u5411\u5bf9\u8c61\u7684\u5206\u6790\uff08", "\u597d\u5904\uff1a", "\u7b2c\u4e00\uff0c\u7c7b\u5177\u6709", "\u7531\u4e8e\u8fd9\u79cd\u72ec\u7acb\u7684\u5b58\u5728", "\u7b2c\u4e8c\uff0c\u7c7b\u5177\u6709", "\u8fd9\u79cd\u901a\u7528\u6027", "\u7b2c\u4e09\uff0c\u7c7b\u5177\u6709", "\u7531\u4e8e\u7b2c\u4e8c\u4e2a\u7279\u5f81\u7684\u5b58\u5728", "\u5f0a\u7aef\uff1a\u6709\u53ef\u80fd\u4f1a\u964d\u4f4e\u7a0b\u5e8f\u7684\u6267\u884c\u901f\u5ea6", "9\u00a0", "COM", "COM", "\u9996\u5148\uff1a\u7528\u6237\u4e00\u822c\u5e0c\u671b\u80fd\u591f\u5b9a\u5236\u6240\u7528\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u800c\u7ec4\u4ef6\u6280\u672f\u4ece\u672c\u8d28\u4e0a\u8bb2\u5c31\u662f\u53ef\u88ab\u5b9a\u5236\u7684\uff0c\u56e0\u800c\u7528\u6237\u53ef\u4ee5\u7528\u66f4\u80fd\u6ee1\u8db3\u4ed6\u4eec\u9700\u8981\u7684\u67d0\u4e2a\u7ec4\u4ef6\u6765\u66ff\u6362\u539f\u6765\u7684\u90a3\u4e2a\u3002\u00a0", "\u5176\u6b21\uff0c\u7531\u4e8e\u7ec4\u4ef6\u662f\u76f8\u5bf9\u5e94\u7528\u7a0b\u5e8f\u72ec\u7acb\u7684\u90e8\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u540c\u4e00\u4e2a\u7ec4\u4ef6\u800c\u4e0d\u4f1a\u4ea7\u751f\u4efb\u4f55\u95ee\u9898\uff0c\u8f6f\u4ef6\u7684\u53ef\u91cd\u7528\u6027\u5c06\u5927\u5927\u7684\u5f97\u5230\u589e\u5f3a\u3002\u00a0", "\u7b2c\u4e09\uff0c\u968f\u7740\u7f51\u7edc\u5e26\u5bbd\u53ca\u5176\u91cd\u8981\u6027\u7684\u63d0\u9ad8\uff0c\u5206\u5e03\u5f0f\u7f51\u7edc\u5e94\u7528\u7a0b\u5e8f\u6beb\u65e0\u7591\u95ee\u7684\u6210\u4e3a\u8f6f\u4ef6\u5e02\u573a\u4e0a\u8d8a\u6765\u8d8a\u91cd\u8981\u7684\u4e70\u70b9\u3002\u7ec4\u4ef6\u4ef7\u6784\u53ef\u4ee5\u4f7f\u5f97\u5f00\u53d1\u8fd9\u7c7b\u5e94\u7528\u7a0b\u5e8f\u7684\u8fc7\u7a0b\u5f97\u4ee5\u7b80\u5316\u3002", "10\u00a0", "\u8bbe\u8ba1\u6a21\u5f0f\u4f7f\u4eba\u4eec\u53ef\u4ee5\u66f4\u52a0\u7b80\u5355\u65b9\u4fbf\u5730\u590d\u7528\u6210\u529f\u7684\u8bbe\u8ba1\u548c\u4f53\u7cfb\u7ed3\u6784\u3002", "\u4e00\u4e9b\u57fa\u672c\u7684\u8bbe\u8ba1\u6a21\u5f0f\uff1a", "Abstract\u00a0Factory", "Adapter", "Bridge", "Builder", "Chain\u00a0of\u00a0Responsibility", "Command", "Composite", "Decorator", "Facade", "Factory\u00a0Method", "Flyweight", "Interpreter", "Iterator", "Mediator", "Memento", "Observer", "Prototype", "Proxy", "Singleton", "State", "Strategy", "Template\u00a0Method", "Visitor", "\u00a0", "\u540e\u9762\u8fd8\u6709\u4e00\u9053\u6587\u5b66\u8bd7\u6b4c\uff0c\u4e00\u9053\u5386\u53f2\u5e38\u8bc6\u9898\u4ee5\u53ca\u4e09\u9053\u903b\u8f91\u63a8\u7406\u9898\u3002"], "title": "\u4e2d\u9752\u5b9d\u7f51C++\u7b14\u8bd5\u9898\u53ca\u7b54\u6848"},
{"contents": ["\u4e00\uff0c\u00a0\u9009\u62e9\u9898\u3002", "\u00a0", "\u5dee\u4e0d\u591a\u90fd\u51fa\u81ea\u9ad8\u8d28\u91cf", "\u00a0", "\u4e8c\uff0c\u00a0\u5224\u65ad\u9898", "\u540c\u4e0a", "\u00a0", "\u00a0", "\u4e09\uff0e\u95ee\u7b54\u53ca\u7f16\u7a0b\u9898", "\u00a0\u00a01)\u00a0", "\u00a0\u00a02)\u00a0", "\u00a0\u00a03)\u00a0", "\u00a0", "\u5de6\u53f3\u5b50\u6811\u90fd\u662f\u5e73\u8861\u4e8c\u53c9\u6811\u00a0\u4e14\u5de6\u53f3\u5b50\u6811\u7684\u6df1\u5ea6\u5dee\u503c\u7684\u7edd\u5bf9\u503c\u4e0d\u5927\u4e8e", "\u00a0", "\u00a0", "\u00a0", "\u00a0", "\u00a0", "\u00a0", "\u00a0", "\u00a0", "\u00a0", "\u00a0", "\u00a0", "\u00a0", "\u00a0", "\u00a0", "\u00a0", "\u00a0", "\u00a0", "\u00a0", "\u00a0", "VECTOR", "MULTIMAP\u00a0\u00a0\u00a0\u00a0SET", "\u00a0", "VECTOR\u00a0", "list\u00a0", "deque", "\u00a0\u00a0\u00a0\u00a0\u00a0\u6bcf\u4e2a\u5806\u5b58\u653e\u51e0\u4e2a\u5143\u7d20\u00a0\u5806\u548c\u5806\u4e4b\u95f4\u7528\u6307\u9488\u6307\u5411\uff0c\u7ed3\u5408\u4e86", "\u00a0", "\u6808\u7684\u7a7a\u95f4\u662f\u7531\u7cfb\u7edf\u5206\u914d\u548c\u56de\u6536\u7684", "\u5806\u7684\u7a7a\u95f4\u662f\u7531\u7a0b\u5e8f\u5458\u5206\u914d\u548c\u56de\u6536\u7684", "\u6808\u7684\u7a7a\u95f4\u6709\u9650\u00a0\u00a0\u5806\u7684\u7a7a\u95f4\u76f8\u5bf9\u5927\u5f88\u591a", "\u5728", "\u5c40\u90e8\u53d8\u91cf\u548c\u51fd\u6570\u53c2\u6570\u57fa\u672c\u4e0a\u5b58\u653e\u5728\u5806\u7a7a\u95f4\u4e2d", "\u5728\u7f16\u8bd1\u65f6\u5019\u5bf9\u53d8\u91cf\u548c\u51fd\u6570\u7684\u7a7a\u95f4\u5206\u914d\u5728\u6808\u4e2d\u8fdb\u884c", "\u00a0", "22.\u7c7b\u7684\u9759\u6001\u6210\u5458\u600e\u4e48\u521d\u59cb\u5316\uff1fconst\u548cdefined\u7684\u533a\u522b\uff1f", "int\u00a0Test::i\u00a0=\u00a00;", "\u5b8f\u4e0d\u4ec5\u53ef\u4ee5\u7528\u6765\u4ee3\u66ff\u5e38\u6570\u503c\uff0c\u8fd8\u53ef\u4ee5\u7528\u6765\u4ee3\u66ff\u8868\u8fbe\u5f0f\uff0c\u751a\u81f3\u662f\u4ee3\u7801\u6bb5\u3002\u5b8f\u7684\u529f\u80fd\u5f88\u5f3a\u5927\uff0c\u4f46\u4e5f\u5bb9\u6613\u51fa\u9519\u3002\u4e14\u6ca1\u6709\u7c7b\u578b\u68c0\u67e5\u3002", "\u00a0", "\u00a0"], "title": "\u84dd\u51cc\u8f6f\u4ef6C++\u7b14\u8bd5\u9898\u6536\u96c6\u6574\u7406"},
{"contents": ["\u65f6\u95f4\u5f88\u77ed\uff0c\u534a\u5c0f\u65f6\u4ee5\u5185", "1", "void\u00a0f(char\u00a0*p)", "{", "printf(\u201c\u00a0%d\u00a0%d\u201d,sizeof(p),strlen(p));", "}", "\u00a0", "typedef\u00a0struct\u00a0", "{", "//", "}AAA;", "\u00a0", "void\u00a0main()", "{", "char\u00a0a[]=\u201d123456789\u2033;\u00a0", "AAA\u00a0*p;", "printf(\u201c\u00a0%d\u201d,sizeof(a));", "printf(\u201c\u00a0%d\u201d,strlen(a));", "printf(\u201c\u00a0%d\u201d,strlen(p));//", "f(a);", "}", "\u00a0", "2", "void\u00a0main()", "{", "int\u00a0i=0;", "printf(\u201c\u00a0%d\u00a0%d\u00a0%d\u00a0%d\\n\u201d,i,\u00a0i\u00a0-\u00a01,++i,i++);", "printf(\u201ci=%d\u201d,i);", "}", "\u00a0", "3", "4", "5", "6", "\u6709\u4e2a"], "title": "\u84dd\u6d77\u68a6\u60f3C++\u7b14\u8bd5"},
{"contents": ["JAVA\u548cC++\u90fd\u662f\u9762\u5411\u5bf9\u8c61\u8bed\u8a00\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u4eec\u90fd\u80fd\u591f\u5b9e\u73b0\u9762\u5411\u5bf9\u8c61\u601d\u60f3\uff08\u5c01\u88c5\uff0c\u7ee7\u4e58\uff0c\u591a\u6001\uff09\u3002\u800c\u7531\u4e8ec++\u4e3a\u4e86\u7167\u987e\u5927\u91cf\u7684C\u8bed\u8a00\u4f7f\u7528\u8005\uff0c", "\n\u800c\u517c\u5bb9\u4e86C\uff0c\u4f7f\u5f97\u81ea\u8eab\u4ec5\u4ec5\u6210\u4e3a\u4e86\u5e26\u7c7b\u7684C\u8bed\u8a00\uff0c\u591a\u591a\u5c11\u5c11\u5f71\u54cd\u4e86\u5176\u9762\u5411\u5bf9\u8c61\u7684\u5f7b\u5e95\u6027\uff01JAVA\u5219\u662f\u5b8c\u5168\u7684\u9762\u5411\u5bf9\u8c61\u8bed\u8a00\uff0c\u5b83\u53e5\u6cd5\u66f4\u6e05\u6670\uff0c\u89c4\u6a21\u66f4\u5c0f\uff0c\u66f4\u6613\u5b66\u3002\u5b83\u662f\u5728\u5bf9\u591a\u79cd\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u8fdb\u884c\u4e86\u6df1\u5165\u7ec6\u81f4\u7814\u7a76\u7684\u57fa\u7840\u4e0a\uff0c\u636e\u5f03\u4e86\u5176\u4ed6\u8bed\u8a00\u7684\u4e0d\u8db3\u4e4b\u5904\uff0c\u4ece\u6839\u672c\u4e0a\u89e3\u51b3\u4e86c++\u7684\u56fa\u6709\u7f3a\u9677\u3002", "\nJava\u548cc++\u7684\u76f8\u4f3c\u4e4b\u5904\u591a\u4e8e\u4e0d\u540c\u4e4b\u5904\uff0c\u4f46\u4e24\u79cd\u8bed\u8a00\u95ee\u51e0\u5904\u4e3b\u8981\u7684\u4e0d\u540c\u4f7f\u5f97Java\u66f4\u5bb9\u6613\u5b66\u4e60\uff0c\u5e76\u4e14\u7f16\u7a0b\u73af\u5883\u66f4\u4e3a\u7b80\u5355\u3002", "\n\u6211\u5728\u8fd9\u91cc\u4e0d\u80fd\u5b8c\u5168\u5217\u51fa\u4e0d\u540c\u4e4b\u5904\uff0c\u4ec5\u5217\u51fa\u6bd4\u8f83\u663e\u8457\u7684\u533a\u522b\uff1a", "\n1\uff0e\u6307\u9488", "\nJAVA\u8bed\u8a00\u8ba9\u7f16\u7a0b\u8005\u65e0\u6cd5\u627e\u5230\u6307\u9488\u6765\u76f4\u63a5\u8bbf\u95ee\u5185\u5b58\u65e0\u6307\u9488\uff0c\u5e76\u4e14\u589e\u6dfb\u4e86\u81ea\u52a8\u7684\u5185\u5b58\u7ba1\u7406\u529f\u80fd\uff0c\u4ece\u800c\u6709\u6548\u5730\u9632\u6b62\u4e86c\uff0fc++\u8bed\u8a00\u4e2d\u6307\u9488\u64cd\u4f5c\u5931\u8bef\uff0c\u5982\u91ce\u6307\u9488\u6240\u9020\u6210\u7684\u7cfb\u7edf\u5d29\u6e83\u3002\u4f46\u4e5f\u4e0d\u662f\u8bf4JAVA\u6ca1\u6709\u6307\u9488\uff0c\u865a\u62df\u673a\u5185\u90e8\u8fd8\u662f\u4f7f\u7528\u4e86\u6307\u9488\uff0c\u53ea\u662f\u5916\u4eba\u4e0d\u5f97\u4f7f\u7528\u800c\u5df2\u3002\u8fd9\u6709\u5229\u4e8eJava\u7a0b\u5e8f\u7684\u5b89\u5168\u3002", "\n2\uff0e\u591a\u91cd\u7ee7\u627f", "\nc++\u652f\u6301\u591a\u91cd\u7ee7\u627f\uff0c\u8fd9\u662fc++\u7684\u4e00\u4e2a\u7279\u5f81\uff0c\u5b83\u5141\u8bb8\u591a\u7236\u7c7b\u6d3e\u751f\u4e00\u4e2a\u7c7b\u3002\u5c3d\u7ba1\u591a\u91cd\u7ee7\u627f\u529f\u80fd\u5f88\u5f3a\uff0c\u4f46\u4f7f\u7528\u590d\u6742\uff0c\u800c\u4e14\u4f1a\u5f15\u8d77\u8bb8\u591a\u9ebb\u70e6\uff0c\u7f16\u8bd1\u7a0b\u5e8f\u5b9e\u73b0\u5b83\u4e5f\u5f88\u4e0d\u5bb9\u6613\u3002Java\u4e0d\u652f\u6301\u591a\u91cd\u7ee7\u627f\uff0c\u4f46\u5141\u8bb8\u4e00\u4e2a\u7c7b\u7ee7\u627f\u591a\u4e2a\u63a5\u53e3(extends+implement)\uff0c\u5b9e\u73b0\u4e86c++\u591a\u91cd\u7ee7\u627f\u7684\u529f\u80fd\uff0c\u53c8\u907f\u514d\u4e86c++\u4e2d\u7684\u591a\u91cd\u7ee7\u627f\u5b9e\u73b0\u65b9\u5f0f\u5e26\u6765\u7684\u8bf8\u591a\u4e0d\u4fbf\u3002", "\n3\uff0e\u6570\u636e\u7c7b\u578b\u53ca\u7c7b", "\nJava\u662f\u5b8c\u5168\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\uff0c\u6240\u6709\u51fd\u6570\u548c\u53d8\u91cf\u90e8\u5fc5\u987b\u662f\u7c7b\u7684\u4e00\u90e8\u5206\u3002\u9664\u4e86\u57fa\u672c\u6570\u636e\u7c7b\u578b\u4e4b\u5916\uff0c\u5176\u4f59\u7684\u90fd\u4f5c\u4e3a\u7c7b\u5bf9\u8c61\uff0c\u5305\u62ec\u6570\u7ec4\u3002\u5bf9\u8c61\u5c06\u6570\u636e\u548c\u65b9\u6cd5\u7ed3\u5408\u8d77\u6765\uff0c\u628a\u5b83\u4eec\u5c01\u88c5\u5728\u7c7b\u4e2d\uff0c\u8fd9\u6837\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u53ef\u5b9e\u73b0\u81ea\u5df1\u7684\u7279\u70b9\u548c\u884c\u4e3a\u3002\u800cc++\u5141\u8bb8\u5c06\u51fd\u6570\u548c\u53d8\u91cf\u5b9a\u4e49\u4e3a\u5168\u5c40\u7684\u3002\u6b64\u5916\uff0cJava\u4e2d\u53d6\u6d88\u4e86c\uff0fc++\u4e2d\u7684\u7ed3\u6784\u548c\u8054\u5408\uff0c\u6d88\u9664\u4e86\u4e0d\u5fc5\u8981\u7684\u9ebb\u70e6\u3002", "\n4\uff0e\u81ea\u52a8\u5185\u5b58\u7ba1\u7406", "\nJava\u7a0b\u5e8f\u4e2d\u6240\u6709\u7684\u5bf9\u8c61\u90fd\u662f\u7528new\u64cd\u4f5c\u7b26\u5efa\u7acb\u5728\u5185\u5b58\u5806\u6808\u4e0a\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u7b26\u7c7b\u4f3c\u4e8ec++\u7684new\u64cd\u4f5c\u7b26\u3002\u4e0b\u9762\u7684\u8bed\u53e5\u7531\u4e00\u4e2a\u5efa\u7acb\u4e86\u4e00\u4e2a\u7c7bRead\u7684\u5bf9\u8c61\uff0c\u7136\u540e\u8c03\u7528\u8be5\u5bf9\u8c61\u7684work\u65b9\u6cd5\uff1a", "\nRead r\uff1dnew Read()\uff1b", "\nr.work()\uff1b", "\n\u8bed\u53e5Read r\uff1dnew Read()\uff1b\u5728\u5806\u6808\u7ed3\u6784\u4e0a\u5efa\u7acb\u4e86\u4e00\u4e2aRead\u7684\u5b9e\u4f8b\u3002Java\u81ea\u52a8\u8fdb\u884c\u65e0\u7528\u5185\u5b58\u56de\u6536\u64cd\u4f5c\uff0c\u4e0d\u9700\u8981\u7a0b\u5e8f\u5458\u8fdb\u884c\u5220\u9664\u3002\u800cc\u5341\u5341\u4e2d\u5fc5\u987b\u7531\u7a0b\u5e8f\u8d1d\u91ca\u653e\u5185\u5b58\u8d44\u6e90\uff0c\u589e\u52a0\u4e86\u7a0b\u5e8f\u8bbe\u8ba1\u8005\u7684\u8d1f\u6254\u3002Java\u4e2d\u5f53\u4e00\u4e2a\u5bf9\u8c61\u4e0d\u88ab\u518d\u7528\u5230\u65f6\uff0c\u65e0\u7528\u5185\u5b58\u56de\u6536\u5668\u5c06\u7ed9\u5b83\u52a0\u4e0a\u6807\u7b7e\u4ee5\u793a\u5220\u9664\u3002JAVA\u91cc\u65e0\u7528\u5185\u5b58\u56de\u6536\u7a0b\u5e8f\u662f\u4ee5\u7ebf\u7a0b\u65b9\u5f0f\u5728\u540e\u53f0\u8fd0\u884c\u7684\uff0c\u5229\u7528\u7a7a\u95f2\u65f6\u95f4\u5de5\u4f5c\u3002", "\n5\uff0e\u64cd\u4f5c\u7b26\u91cd\u8f7d", "\nJava\u4e0d\u652f\u6301\u64cd\u4f5c\u7b26\u91cd\u8f7d\u3002\u64cd\u4f5c\u7b26\u91cd\u8f7d\u88ab\u8ba4\u4e3a\u662fc\u5341\u5341\u7684\u7a81\u51fa\u7279\u5f81\uff0c\u5728Java\u4e2d\u867d\u7136\u7c7b\u5927\u4f53\u4e0a\u53ef\u4ee5\u5b9e\u73b0\u8fd9\u6837\u7684\u529f\u80fd\uff0c\u4f46\u64cd\u4f5c\u7b26\u91cd\u8f7d\u7684\u65b9\u4fbf\u6027\u4ecd\u7136\u4e22\u5931\u4e86\u4e0d\u5c11\u3002Java\u8bed\u8a00\u4e0d\u652f\u6301\u64cd\u4f5c\u7b26\u91cd\u8f7d\u662f\u4e3a\u4e86\u4fdd\u6301Java\u8bed\u8a00\u5c3d\u53ef\u80fd\u7b80\u5355\u3002", "\n6\uff0e\u9884\u5904\u7406\u529f\u80fd", "\nJava\u4e0d\u652f\u6301\u9884\u5904\u7406\u529f\u80fd\u3002c\uff0fc\u5341\u5341\u5728\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u90fd\u6709\u4e00\u4e2a\u9884\u7f16\u6cfd\u9636\u6bb5\uff0c\u5373\u4f17\u6240\u5468\u77e5\u7684\u9884\u5904\u7406\u5668\u3002\u9884\u5904\u7406\u5668\u4e3a\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u4e86\u65b9\u4fbf\uff0c\u4f46\u589e\u52a0\u4e01\u7f16\u8bd1\u7684\u590d\u6742\u6027\u3002JAVA\u865a\u62df\u673a\u6ca1\u6709\u9884\u5904\u7406\u5668\uff0c\u4f46\u5b83\u63d0\u4f9b\u7684\u5f15\u5165\u8bed\u53e5(import)\u4e0ec\u5341\u5341\u9884\u5904\u7406\u5668\u7684\u529f\u80fd\u7c7b\u4f3c\u3002", "\n7. Java\u4e0d\u652f\u6301\u7f3a\u7701\u51fd\u6570\u53c2\u6570\uff0c\u800cc\u5341\u5341\u652f\u6301", "\n\u5728c\u4e2d\uff0c\u4ee3\u7801\u7ec4\u7ec7\u5728\u51fd\u6570\u4e2d\uff0c\u51fd\u6570\u53ef\u4ee5\u8bbf\u95ee\u7a0b\u5e8f\u7684\u5168\u5c40\u53d8\u91cf\u3002c\u5341\u5341\u589e\u52a0\u4e86\u7c7b\uff0c\u63d0\u4f9b\u4e86\u7c7b\u7b97\u6cd5\uff0c\u8be5\u7b97\u6cd5\u662f\u4e0e\u7c7b\u76f8\u8fde\u7684\u51fd\u6570\uff0cc\u5341\u5341\u7c7b\u65b9\u6cd5\u4e0eJava\u7c7b\u65b9\u6cd5\u5341\u5206\u76f8\u4f3c\uff0c\u7136\u800c\uff0c\u7531\u4e8ec\u5341\u5341\u4ecd\u7136\u652f\u6301c\uff0c\u6240\u4ee5\u4e0d\u80fd\u963b\u6b62c\u5341\u5341\u5f00\u53d1\u4eba\u5458\u4f7f\u7528\u51fd\u6570\uff0c\u7ed3\u679c\u51fd\u6570\u548c\u65b9\u6cd5\u6df7\u5408\u4f7f\u7528\u4f7f\u5f97\u7a0b\u5e8f\u6bd4\u8f83\u6df7\u4e71\u3002", "\nJava\u6ca1\u6709\u51fd\u6570\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u6bd4c\u5341\u5341\u66f4\u7eaf\u7684\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\uff0cJava\u5f3a\u8feb\u5f00\u53d1\u4eba\u5458\u628a\u6240\u6709\u4f8b\u884c\u7a0b\u5e8f\u5305\u62ec\u5728\u7c7b\u4e2d\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u7528\u65b9\u6cd5\u5b9e\u73b0\u4f8b\u884c\u7a0b\u5e8f\u53ef\u6fc0\u52b1\u5f00\u53d1\u4eba\u5458\u66f4\u597d\u5730\u7ec4\u7ec7\u7f16\u7801\u3002", "\n8 \u5b57\u7b26\u4e32", "\nc\u548cc\u5341\u5341\u4e0d\u652f\u6301\u5b57\u7b26\u4e32\u53d8\u91cf\uff0c\u5728c\u548cc\u5341\u5341\u7a0b\u5e8f\u4e2d\u4f7f\u7528Null\u7ec8\u6b62\u7b26\u4ee3\u8868\u5b57\u7b26\u4e32\u7684\u7ed3\u675f\uff0c\u5728Java\u4e2d\u5b57\u7b26\u4e32\u662f\u7528\u7c7b\u5bf9\u8c61(strinR\u548cstringBuffer)\u6765\u5b9e\u73b0\u7684\uff0c\u8fd9\u4e9b\u7c7b\u5bf9\u8c61\u662fJava\u8bed\u8a00\u7684\u6838\u5fc3\uff0c\u7528\u7c7b\u5bf9\u8c61\u5b9e\u73b0\u5b57\u7b26\u4e32\u6709\u4ee5\u4e0b\u51e0\u4e2a\u4f18\u70b9\uff1a", "\n(1)\u5728\u6574\u4e2a\u7cfb\u7edf\u4e2d\u5efa\u7acb\u5b57\u7b26\u4e32\u548c\u8bbf\u95ee\u5b57\u7b26\u4e32\u5143\u7d20\u7684\u65b9\u6cd5\u662f\u4e00\u81f4\u7684\uff1b", "\n(2)J3\u9633\u5b57\u7b26\u4e32\u7c7b\u662f\u4f5c\u4e3aJava\u8bed\u8a00\u7684\u4e00\u90e8\u5206\u5b9a\u4e49\u7684\uff0c\u800c\u4e0d\u662f\u4f5c\u4e3a\u5916\u52a0\u7684\u5ef6\u4f38\u90e8\u5206\uff1b", "\n(3)Java\u5b57\u7b26\u4e32\u6267\u884c\u8fd0\u884c\u65f6\u68c0\u7a7a\uff0c\u53ef\u5e2e\u52a9\u6392\u9664\u4e00\u4e9b\u8fd0\u884c\u65f6\u53d1\u751f\u7684\u9519\u8bef\uff1b", "\n(4)\u53ef\u5bf9\u5b57\u7b26\u4e32\u7528\u201c\u5341\u201d\u8fdb\u884c\u8fde\u63a5\u64cd\u4f5c\u3002", "\n9\u201cgoto\u8bed\u53e5", "\n\u201c\u53ef\u6015\u201d\u7684goto\u8bed\u53e5\u662fc\u548cc++\u7684\u201c\u9057\u7269\u201d\uff0c\u5b83\u662f\u8be5\u8bed\u8a00\u6280\u672f\u4e0a\u7684\u5408\u6cd5\u90e8\u5206\uff0c\u5f15\u7528goto\u8bed\u53e5\u5f15\u8d77\u4e86\u7a0b\u5e8f\u7ed3\u6784\u7684\u6df7\u4e71\uff0c\u4e0d\u6613\u7406\u89e3\uff0cgoto\u8bed\u53e5\u5b50\u8981\u7528\u4e8e\u65e0\u6761\u4ef6\u8f6c\u79fb\u5b50\u7a0b\u5e8f\u548c\u591a\u7ed3\u6784\u5206\u652f\u6280\u672f\u3002\u9274\u4e8e\u4ee5\u5e7f\u7406\u7531\uff0cJava\u4e0d\u63d0\u4f9bgoto\u8bed\u53e5\uff0c\u5b83\u867d\u7136\u6307\u5b9agoto\u4f5c\u4e3a\u5173\u952e\u5b57\uff0c\u4f46\u4e0d\u652f\u6301\u5b83\u7684\u4f7f\u7528\uff0c\u4f7f\u7a0b\u5e8f\u7b80\u6d01\u6613\u8bfb\u3002", "\nl0\uff0e\u7c7b\u578b\u8f6c\u6362", "\n\u5728c\u548cc\u5341\u5341\u4e2d\u6709\u65f6\u51fa\u73b0\u6570\u636e\u7c7b\u578b\u7684\u9690\u542b\u8f6c\u6362\uff0c\u8fd9\u5c31\u6d89\u53ca\u4e86\u81ea\u52a8\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u5728c\u5341\u5341\u4e2d\u53ef\u5c06\u4e00\u6d6e\u70b9\u503c\u8d4b\u4e88\u6574\u578b\u53d8\u91cf\uff0c\u5e76\u53bb\u6389\u5176\u5c3e\u6570\u3002Java\u4e0d\u652f\u6301c\u5341\u5341\u4e2d\u7684\u81ea\u52a8\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u5982\u679c\u9700\u8981\uff0c\u5fc5\u987b\u7531\u7a0b\u5e8f\u663e\u5f0f\u8fdb\u884c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u3002", "\n11.\u5f02\u5e38", "\nJAVA\u4e2d\u7684\u5f02\u5e38\u673a\u5236\u7528\u4e8e\u6355\u83b7\u4f8b\u5916\u4e8b\u4ef6\uff0c\u589e\u5f3a\u7cfb\u7edf\u5bb9\u9519\u80fd\u529b", "\ntry{\uff0f\uff0f\u53ef\u80fd\u4ea7\u751f\u4f8b\u5916\u7684\u4ee3\u7801", "\n}catch(exceptionType name){", "\n//\u5904\u7406", "\n}", "\n\u5176\u4e2dexceptionType\u8868\u793a\u5f02\u5e38\u7c7b\u578b\u3002\u800cC++\u5219\u6ca1\u6709\u5982\u6b64\u65b9\u4fbf\u7684\u673a\u5236\u3002"], "title": "JAVA\u548cC++\u533a\u522b"},
{"contents": ["\u5728\u4e0b\u5217\u51fd\u6570\u58f0\u660e\u4e2d\uff0c\u4e3a\u4ec0\u4e48\u8981\u540c\u65f6\u4f7f\u7528*\u548c&\u7b26\u53f7\uff1f\u4ee5\u53ca\u4ec0\u4e48\u573a\u5408\u4f7f\u7528\u8fd9\u79cd\u58f0\u660e\u65b9\u5f0f? \u3000 ", "\u3000\u3000 void func1( MYCLASS *&pBuildingElement ); ", "\u3000\u3000 \u8bba\u575b\u4e2d\u7ecf\u5e38\u6709\u4eba\u95ee\u5230\u8fd9\u6837\u7684\u95ee\u9898\u3002\u672c\u6587\u8bd5\u56fe\u901a\u8fc7\u4e00\u4e9b\u5b9e\u9645\u7684\u6307\u9488\u4f7f\u7528\u7ecf\u9a8c\u6765\u89e3\u91ca\u8fd9\u4e2a\u95ee\u9898\u3002 ", "\u3000\u3000 \u4ed4\u7ec6\u770b\u4e00\u4e0b\u8fd9\u79cd\u58f0\u660e\u65b9\u5f0f\uff0c\u786e\u5b9e\u6709\u70b9\u8ba9\u4eba\u8ff7\u60d1\u3002\u5728\u67d0\u79cd\u610f\u4e49\u4e0a\uff0c\u201d*\u201d\u548c\u201d&\u201d\u662f\u610f\u601d\u76f8\u5bf9\u7684\u4e24\u4e2a\u4e1c\u897f\uff0c\u628a\u5b83\u4eec\u653e\u5728\u4e00\u8d77\u6709\u4ec0\u4e48\u610f\u4e49\u5462\uff1f\u3002\u4e3a\u4e86\u7406\u89e3\u6307\u9488\u7684\u8fd9\u79cd\u505a\u6cd5\uff0c\u6211\u4eec\u5148\u590d\u4e60\u4e00\u4e0bC/C++\u7f16\u7a0b\u4e2d\u65e0\u6240\u4e0d\u5728\u7684\u6307\u9488\u6982\u5ff5\u3002\u6211\u4eec\u90fd\u77e5\u9053MYCLASS*\u7684\u610f\u601d\uff1a\u6307\u5411\u67d0\u4e2a\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u6b64\u5bf9\u8c61\u7684\u7c7b\u578b\u4e3aMYCLASS\u3002 void func1(MYCLASS *pMyClass); \u3000 ", "\u3000\u3000// \u4f8b\u5982\uff1a MYCLASS* p = new MYCLASS; ", "\u3000\u3000 func1(p); ", "\u3000\u3000 \u4e0a\u9762\u8fd9\u6bb5\u4ee3\u7801\u7684\u8fd9\u79cd\u5904\u7406\u65b9\u6cd5\u60f3\u5fc5\u8c01\u90fd\u7528\u8fc7\uff0c\u521b\u5efa\u4e00\u4e2aMYCLASS\u5bf9\u8c61\uff0c\u7136\u540e\u5c06\u5b83\u4f20\u5165func1\u51fd\u6570\u3002\u73b0\u5728\u5047\u8bbe\u6b64\u51fd\u6570\u8981\u4fee\u6539pMyClass\uff1a", "\nvoid func1(MYCLASS *pMyClass)", "\n\u3000\u3000 {", "\n\u3000\u3000 DoSomething(pMyClass);", "\n\u3000\u3000 pMyClass = // \u5176\u5b83\u5bf9\u8c61\u7684\u6307\u9488", "\n\u3000\u3000 }\u3000 ", "\u3000\u3000 \u7b2c\u4e8c\u6761\u8bed\u53e5\u5728\u51fd\u6570\u8fc7\u7a0b\u4e2d\u53ea\u4fee\u6539\u4e86pMyClass\u7684\u503c\u3002\u5e76\u6ca1\u6709\u4fee\u6539\u8c03\u7528\u8005\u7684\u53d8\u91cfp\u7684\u503c\u3002\u5982\u679cp\u6307\u5411\u67d0\u4e2a\u4f4d\u4e8e\u5730\u57400x008a00\u7684\u5bf9\u8c61\uff0c\u5f53func1\u8fd4\u56de\u65f6\uff0c\u5b83\u4ecd\u7136\u6307\u5411\u8fd9\u4e2a\u7279\u5b9a\u7684\u5bf9\u8c61\u3002\uff08\u9664\u975efunc1\u6709bug\u5c06\u5806\u5f04\u4e71\u4e86\uff0c\u5b8c\u5168\u6709\u8fd9\u79cd\u53ef\u80fd\u3002\uff09 ", "\u3000\u3000\u73b0\u5728\u5047\u8bbe\u4f60\u60f3\u8981\u5728func1\u4e2d\u4fee\u6539p\u7684\u503c\u3002\u8fd9\u662f\u4f60\u7684\u6743\u5229\u3002\u8c03\u7528\u8005\u4f20\u5165\u4e00\u4e2a\u6307\u9488\uff0c\u7136\u540e\u51fd\u6570\u7ed9\u8fd9\u4e2a\u6307\u9488\u8d4b\u503c\u3002\u4ee5\u5f80\u4e00\u822c\u90fd\u662f\u4f20\u53cc\u6307\u9488\uff0c\u5373\u6307\u9488\u7684\u6307\u9488\uff0c\u4f8b\u5982\uff0cCMyClass**\u3002 MYCLASS* p = NULL; ", "\u3000\u3000 func1(&p);", "\n\u3000\u3000 void func1(MYCLASS** pMyClass);", "\n\u3000\u3000 {", "\n\u3000\u3000 *pMyClass = new MYCLASS;", "\n\u3000\u3000 \u2026\u2026", "\n\u3000\u3000 }\u3000\u3000 ", "\u3000\u3000\u8c03\u7528func1\u4e4b\u540e\uff0cp\u6307\u5411\u65b0\u7684\u5bf9\u8c61\u3002\u5728COM\u7f16\u7a0b\u4e2d\uff0c\u4f60\u5230\u5904\u90fd\u4f1a\u78b0\u5230\u8fd9\u6837\u7684\u7528\u6cd5\u2013\u4f8b\u5982\u5728\u67e5\u8be2\u5bf9\u8c61\u63a5\u53e3\u7684QueryInterface\u51fd\u6570\u4e2d\uff1a", "\ninterface ISomeInterface {", "\n\u3000\u3000 HRESULT QueryInterface(IID &iid, void** ppvObj);", "\n\u3000\u3000 \u2026\u2026", "\n\u3000\u3000 };", "\n\u3000\u3000 LPSOMEINTERFACE p=NULL;", "\n\u3000\u3000 pOb->QueryInterface(IID_SOMEINTERFACE, &p);\u3000\u3000 ", "\u3000\u3000 \u6b64\u5904\uff0cp\u662fSOMEINTERFACE\u7c7b\u578b\u7684\u6307\u9488\uff0c\u6240\u4ee5&p\u4fbf\u662f\u6307\u9488\u7684\u6307\u9488\uff0c\u5728QueryInterface\u8fd4\u56de\u7684\u65f6\u5019\uff0c\u5982\u679c\u8c03\u7528\u6210\u529f\uff0c\u5219\u53d8\u91cfp\u5305\u542b\u4e00\u4e2a\u6307\u5411\u65b0\u7684\u63a5\u53e3\u7684\u6307\u9488\u3002 ", "\u3000\u3000 \u5982\u679c\u4f60\u7406\u89e3\u6307\u9488\u7684\u6307\u9488\uff0c\u90a3\u4e48\u4f60\u80af\u5b9a\u5c31\u7406\u89e3\u6307\u9488\u5f15\u7528\uff0c\u56e0\u4e3a\u5b83\u4eec\u5b8c\u5168\u662f\u4e00\u56de\u4e8b\u3002\u5982\u679c\u4f60\u8c61\u4e0b\u9762\u8fd9\u6837\u58f0\u660e\u51fd\u6570\uff1a ", "\u3000\u3000 void func1(MYCLASS *&pMyClass);", "\n\u3000\u3000 {", "\n\u3000\u3000 pMyClass = new MYCLASS;", "\n\u3000\u3000 \u2026\u2026", "\n\u3000\u3000 }\u3000\u3000 ", "\u3000\u3000 \u5176\u5b9e\uff0c\u5b83\u548c\u524d\u9762\u6240\u8bb2\u5f97\u6307\u9488\u7684\u6307\u9488\u4f8b\u5b50\u662f\u4e00\u7801\u4e8b\uff0c\u53ea\u662f\u8bed\u6cd5\u6709\u6240\u4e0d\u540c\u3002\u4f20\u9012\u7684\u65f6\u5019\u4e0d\u7528\u4f20p\u7684\u5730\u5740&p\uff0c\u800c\u662f\u76f4\u63a5\u4f20p\u672c\u8eab\uff1a\u3000\u3000 ", "\u3000\u3000 MYCLASS* p = NULL;", "\n\u3000\u3000 func1(p);\u3000\u3000 ", "\u3000\u3000 \u5728\u8c03\u7528\u4e4b\u540e\uff0cp\u6307\u5411\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61\u3002\u4e00\u822c\u6765\u8bb2\uff0c\u5f15\u7528\u7684\u539f\u7406\u6216\u591a\u6216\u5c11\u5c31\u8c61\u4e00\u4e2a\u6307\u9488\uff0c\u4ece\u8bed\u6cd5\u4e0a\u770b\u5b83\u5c31\u662f\u4e00\u4e2a\u666e\u901a\u53d8\u91cf\u3002\u6240\u4ee5\u53ea\u8981\u4f60\u78b0\u5230*&\uff0c\u5c31\u5e94\u8be5\u60f3\u5230**\u3002\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e2a\u51fd\u6570\u4fee\u6539\u6216\u53ef\u80fd\u4fee\u6539\u8c03\u7528\u8005\u7684\u6307\u9488\uff0c\u800c\u8c03\u7528\u8005\u8c61\u666e\u901a\u53d8\u91cf\u4e00\u6837\u4f20\u9012\u8fd9\u4e2a\u6307\u9488\uff0c\u4e0d\u4f7f\u7528\u5730\u5740\u64cd\u4f5c\u7b26&\u3002 ", "\u3000\u3000 \u81f3\u4e8e\u8bf4\u4ec0\u4e48\u573a\u5408\u8981\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\uff0c\u6211\u4f1a\u8bf4\uff0c\u6781\u5c11\u3002MFC\u5728\u5176\u96c6\u5408\u7c7b\u4e2d\u7528\u5230\u4e86\u5b83\u2013\u4f8b\u5982\uff0cCObList\uff0c\u5b83\u662f\u4e00\u4e2aCObjects\u6307\u9488\u5217\u8868\u3002", "\nclass CObList : public CObject {", "\n\u3000\u3000 \u2026\u2026", "\n\u3000\u3000 // \u83b7\u53d6/\u4fee\u6539\u6307\u5b9a\u4f4d\u7f6e\u7684\u5143\u7d20", "\n\u3000\u3000 CObject*& GetAt(POSITION position);", "\n\u3000\u3000 CObject* GetAt(POSITION position) const;", "\n\u3000\u3000 };\u3000\u3000 ", "\u3000\u3000\u8fd9\u91cc\u6709\u4e24\u4e2aGetAt\u51fd\u6570\uff0c\u529f\u80fd\u90fd\u662f\u83b7\u53d6\u7ed9\u5b9a\u4f4d\u7f6e\u7684\u5143\u7d20\u3002\u533a\u522b\u4f55\u5728\u5462\uff1f ", "\u3000\u3000\u533a\u522b\u5728\u4e8e\u4e00\u4e2a\u8ba9\u4f60\u4fee\u6539\u5217\u8868\u4e2d\u7684\u5bf9\u8c61\uff0c\u53e6\u4e00\u4e2a\u5219\u4e0d\u884c\u3002\u6240\u4ee5\u5982\u679c\u4f60\u5199\u6210\u4e0b\u9762\u8fd9\u6837\uff1a CObject* pObj = mylist.GetAt(pos);\u3000\u3000 ", "\u3000\u3000\u5219pObj\u662f\u5217\u8868\u4e2d\u67d0\u4e2a\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u5982\u679c\u63a5\u7740\u6539\u53d8pObj\u7684\u503c\uff1a pObj = pSomeOtherObj; ", "\u3000\u3000\u8fd9\u5e76\u6539\u53d8\u4e0d\u4e86\u5728\u4f4d\u7f6epos\u5904\u7684\u5bf9\u8c61\u5730\u5740\uff0c\u800c\u4ec5\u4ec5\u662f\u6539\u53d8\u4e86\u53d8\u91cfpObj\u3002\u4f46\u662f\uff0c\u5982\u679c\u4f60\u5199\u6210\u4e0b\u9762\u8fd9\u6837\uff1a CObject*& rpObj = mylist.GetAt(pos);\u3000\u3000 ", "\u3000\u3000 \u73b0\u5728\uff0crpObj\u662f\u5f15\u7528\u4e00\u4e2a\u5217\u8868\u4e2d\u7684\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u6240\u4ee5\u5f53\u6539\u53d8rpObj\u65f6\uff0c\u4e5f\u4f1a\u6539\u53d8\u5217\u8868\u4e2d\u4f4d\u7f6epos\u5904\u7684\u5bf9\u8c61\u5730\u5740\u2013\u6362\u53e5\u8bdd\u8bf4\uff0c\u66ff\u4ee3\u4e86\u8fd9\u4e2a\u5bf9\u8c61\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48CObList\u4f1a\u6709\u4e24\u4e2aGetAt\u51fd\u6570\u7684\u7f18\u6545\u3002\u4e00\u4e2a\u53ef\u4ee5\u4fee\u6539\u6307\u9488\u7684\u503c\uff0c\u53e6\u4e00\u4e2a\u5219\u4e0d\u80fd\u3002\u6ce8\u610f\u6211\u5728\u6b64\u8bf4\u7684\u662f\u6307\u9488\uff0c\u4e0d\u662f\u5bf9\u8c61\u672c\u8eab\u3002\u8fd9\u4e24\u4e2a\u51fd\u6570\u90fd\u53ef\u4ee5\u4fee\u6539\u5bf9\u8c61\uff0c\u4f46\u53ea\u6709*&\u7248\u672c\u53ef\u4ee5\u66ff\u4ee3\u5bf9\u8c61\u3002 ", "\u3000\u3000 \u5728C/C++\u4e2d\u5f15\u7528\u662f\u5f88\u91cd\u8981\u7684\uff0c\u540c\u65f6\u4e5f\u662f\u9ad8\u6548\u7684\u5904\u7406\u624b\u6bb5\u3002\u6240\u4ee5\u8981\u60f3\u6210\u4e3aC/C++\u9ad8\u624b\uff0c\u5bf9\u5f15\u7528\u7684\u6982\u5ff5\u6ca1\u6709\u900f\u5f7b\u7684\u7406\u89e3\u548c\u719f\u7ec3\u7684\u5e94\u7528\u662f\u4e0d\u884c\u7684\u3002"], "title": "C++\u6307\u9488\u4f7f\u7528\u65b9\u6cd5"},
{"contents": ["1. The first two lines output by the following program are \u201c4\u201d and \u201c0012FF6C\u201d. What are the following lines output? (5%)", "int main()", "\n{", "\n\tint a[] = {2,4,6,8,10};", "\n\tcout \n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t            \n\treturn 0;", "\n}", "2. What is the exact output of the following program? (5%)", "\nint main()", "\n{", "\n\tint init[] = {2,4,6,8,10};", "\n\tvector"], "title": "\u5916\u4f01C++\u7b14\u8bd5\u9898"},
{"contents": ["Software programming test on C++:", "\n1.How good do you see yours programming skills?Please circle your answe", "\nrs", "\n  C:   Fair/Good/Excellent", "\n  C++: Fair/Good/Excellent", "\n2.Please estimate your programming experince:", "\n  How many lines of code are your biggest C Program ever written exclud", "\ning the", "\n  standard linked library?", "\n  How many lines of code are your biggest C++ program ever written excl", "\nuding the", "\n  standard linked library?", "\n3.Please explain the following terms", "\n  Data Encapsulation", "\n  Inheritance", "\n  Polymorphism", "\n4.What is a virtual base class?How do you declare such a class?How woul", "\nd you use", "\n  it in a design?", "\n5.What is a template or container class?How do you declare such a class", "\n?", "\n6.Which are the access control levels for C++ language?", "\n7.What is RTTI?How do you achieve RTTI in your design?", "\n8.What are the major differences between static and non-static member f", "\nunctions?", "\n9.How do you call a regular member function from a static member functi", "\non?", "\n  Please use psendo-code to provide your answer", "\n10.How do you declare/define a type of pointer to a class member functi", "\non?", "\n  Please use psendo-code to provide your answer", "\n11.Please explain the following tyoes:", "\n   Here is a short lise of combinations and their meanings:", "\n   1.Reference-Can change the referenced object", "\n   2.Const-Reference", "\n   3.Const-Pointer-", "\n   4.Pointer-Const-", "\n   5.Const-Pointer-Const-", "\n   CFoo Instance", "\n   CFoo &ReferenceToInstance=Instance;             //1", "\n   const CFoo &ConstReferenceToInstance=Instance;  //2", "\n   const CFoo *pConstPointer=&Instance;            //3", "\n   CFoo *const pPointerConst=&Instance;            //4", "\n   const CF00 *const pPointerConst=&Instance;      //5", "\n12.What are top-down and bottom-up approach?How do you usually use them", "\n?", "\n13.Please use pseudo-code to design a set of stack operations with temp", "\nlate", "\n14.Please use pseudo-code to design a set of double linked list operati", "\nons with", "\n   template", "\nOptional Questions:(for extra credits)", "\n15.Please write a unix makefile for Question13", "\n16.Please explain these common sections:text,data,bss "], "title": "\u5a01\u76dbSoftware programming test on C++"},
{"contents": ["1.What is OSI Model?Which layer is responsible for the information reliable", "\n  delivery?", "\n2.List the differences of TCP and UDP", "\n3.Please list the differences between convertional C language and", "\n  object-oriented language(OOL),sau C++?", "\n4.Please list the three major features and meanings of C++", "\n5.Please list the program areas of the run time environment and give a brief", "\n  explanation of the function of each area", "\n6.Write a piece of code(or macro)to convert the decimal number to hex format", "\n7.In a real time operating based embedded system,2 tasks will access the", "\n  RS-232C port.Design a mutual exclusive mechanism for tasks sending command", "\n  string to the device.", "\n  (Pseudo code is okay)", "\n8.A multi-task application is running on top of a real-time operating system,", "\n  how many possbile states can a task have?Please draw a state transition", "\n  diagram to explain. How the tasks communicate to each? "], "title": "\u5a01\u76db\u7684Software test \u82f1\u6587\u9762\u8bd5\u9898"},
{"contents": ["\u7b14\u8bd5\u9898\u5206\u4e3a\u4e24\u90e8\u5206 ", "\u7b2c\u4e00\u90e8\u4efd\u4e3b\u8981\u8003C++\u7f16\u7a0b\u529f\u5e95\uff0c ", "\u7b2c\u4e00\u9898\u662f\u6c42sizeof\u7684\u503c ", "\u6709\u4ec0\u4e48sizeof(short),sizeof(int),sizeof(double),sizeof(char*) ", "\u8fd8\u6709struct s { int i; char a}; \u7136\u540e\u6c42sizeof(s) ", "\u73af\u5883\u662fwin2000,intel P2 cpu \uff0c vc6.0\uff0c8\u5b57\u8282\u5bf9\u9f50\u65b9\u5f0f\u3002 ", "\u7b2c\u4e8c\u9898\u662fA,B\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u5176\u4e2dA\u6700\u540e\u51e0\u4e2a\u5b57\u7b26\u548cB\u7684\u6700\u524d\u9762\u51e0\u4e2a\u5b57\u7b26\u4e00\u6837\uff0c ", "\u7136\u540e\u8981\u6c42\u628aA,B\u5408\u5e76\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5e76\u4e14\u8981\u6c42\u53bb\u6389\u91cd\u590d\u7684\u5b57\u7b26\u3002 ", "\u7b2c\u4e09\u9898\u662f\u8bfb\u7a0b\u5e8f\u7136\u540e\u8bf4\u51fa\u6709\u4ec0\u4e48\u540e\u679c ", "\u5c31\u662f\u300a\u9ad8\u8d28\u91cfC++\u7f16\u7a0b\u6307\u5357\u300b\u9644\u5f55\u9898\u91cc\u9762\u4e00\u6a21\u4e00\u6837\u7684\u9898\uff0c\u5475\u5475\u3002 ", "\u5927\u81f4\u90fd\u662fnew\u4e00\u5757\u5185\u5b58\uff0c\u7136\u540e\u8981\u4e48\u6ca1\u6709delete,\u8981\u4e48\u6709\u91ce\u6307\u9488\u4ec0\u4e48\u7684\u3002 ", "\u7b2c\u56db\u9898\u662f\u5b9a\u4e49\u4e86\u4e00\u4e2aString\u7c7b\uff0c\u8981\u6c42\u5b8c\u6210\u4ed6\u7684\u666e\u901a\u6784\u9020\u51fd\u6570\uff0c ", "\u91cd\u8f7d\u8d4b\u503c\u8fd0\u7b97\u7b26\uff0c\u8fd8\u6709\u6790\u6784\u51fd\u6570\u3002 ", "\u7b2c\u4e94\u9898\u662f\u4e00\u6bb5\u5173\u4e8e\u5982\u4f55\u4f7f\u53ef\u7528\u5185\u5b58\u66f4\u591a\u7684\u4e2d\u6587\uff0c\u8981\u6c42\u7ffb\u8bd1\u6210\u82f1\u6587\uff0c ", "\u867d\u7136\u4e0d\u96be\uff0c\u4e0d\u8fc7\u5185\u5bb9\u6709\u70b9\u591a\uff0c\u5199\u7684\u6211\u624b\u90fd\u7d2f\u4e86\uff0c\u5475\u5475\u3002 ", "\u7136\u540e\u662f\u7b2c\u4e8c\u90e8\u5206\uff0c\u5927\u90fd\u662fGIS\u76f8\u5173\u7684\uff0c\u95ee\u4ec0\u4e48ArcView\u8f6f\u4ef6\uff0c\u56fe\u5f62\u5904\u7406\u7b49\u65b9\u9762\u7684\u95ee\u9898\u3002 ", "\u8fd8\u6709\u4e00\u4e2a\u5b58\u50a8\u4e0b\u4e09\u89d2\u77e9\u9635\u7684\u7f16\u7a0b\u9898\uff0c\u8981\u586b\u7a7a\uff0c\u7528Fortran\uff0c ", "\u4ffa\u597d\u50cf\u90fd\u4e0d\u600e\u4e48\u4f1a\uff0c\u653e\u5f03\uff0c ", "\u8fd8\u6709\u540d\u8bcd\u89e3\u91ca\uff0cRGB,DIB,\u4ec0\u4e48\u7684\u3002 "], "title": "\u9002\u666e\u7b14\u8bd5\u9898"},
{"contents": ["C++\u5173\u952e\u5b57\u5168\u96c6\u6574\u5408", "\n            C++\u5173\u952e\u5b57\u5168\u96c6(\u8fd9\u4e2a\u662f\u4eceC++ Primer copy\u8fc7\u6765\u7684,\u6709\u4e00\u4e9b\u8865\u5145,\u4e5f\u6709\u4e00\u4e9b\u5df2\u7ecf\u88ab\u66ff\u4ee3):", "\nasm\tauto\tbad_cast\tbad_typeid", "\nbool\tbreak\tcase\tcatch", "\nchar\tclass\tconst\tconst_cast", "\ncontinue\tdefault\tdelete\tdo", "\ndouble\tdynamic_cast\telse\tenum", "\nexcept\texplicit\textern\tfalse", "\nfinally\tfloat\tfor\tfriend", "\ngoto\tif\tinline\tint", "\nlong\tmutable\tnamespace\tnew", "\noperator\tprivate\tprotected\tpublic", "\nregister\treinterpret_cast\treturn\tshort", "\nsigned\tsizeof\tstatic\tstatic_cast", "\nstruct\tswitch\ttemplate\tthis", "\nthrow\ttrue\ttry\ttype_info", "\ntypedef\ttypeid\ttypename\tunion", "\nunsigned\tusing\tvirtual\tvoid", "\nvolatile\twchar_t\t while", "\n(1)asm", "\nasm\u5df2\u7ecf\u88ab__asm\u66ff\u4ee3\u4e86,\u7528\u4e8e\u6c47\u7f16\u8bed\u8a00\u5d4c\u5165\u5728C/C++\u7a0b\u5e8f\u91cc\u7f16\u7a0b,\u4ece\u800c\u5728\u67d0\u4e9b\u65b9\u9762\u4f18\u5316\u4ee3\u7801.\u867d\u7136\u7528asm\u5173\u952e\u5b57\u7f16\u8bd1\u65f6\u7f16\u8bd1\u5668\u4e0d\u4f1a\u62a5\u9519,\u4f46\u662fasm\u6a21\u5757\u7684\u4ee3\u7801\u662f\u6ca1\u6709\u610f\u4e49\u7684.", "(2)auto", "\n\u8fd9\u4e2a\u8fd9\u4e2a\u5173\u952e\u5b57\u7528\u4e8e\u58f0\u660e\u53d8\u91cf\u7684\u751f\u5b58\u671f\u4e3a\u81ea\u52a8\uff0c\u5373\u5c06\u4e0d\u5728\u4efb\u4f55\u7c7b\u3001\u7ed3\u6784\u3001\u679a\u4e3e\u3001\u8054\u5408\u548c\u51fd\u6570\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\u89c6\u4e3a\u5168\u5c40\u53d8\u91cf\uff0c\u800c\u5728\u51fd\u6570\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\u89c6\u4e3a\u5c40\u90e8\u53d8\u91cf\u3002\u8fd9\u4e2a\u5173\u952e\u5b57\u4e0d\u600e\u4e48\u591a\u5199\uff0c\u56e0\u4e3a\u6240\u6709\u7684\u53d8\u91cf\u9ed8\u8ba4\u5c31\u662fauto\u7684\u3002", "(3)bad_cast,const_cast,dynamic_cast,reinterpret_cast,static_cast", "\n\u5173\u4e8e\u5f02\u5e38\u5904\u7406\u7684,\u8fd8\u4e0d\u662f\u592a\u4e86\u89e3..", "(4)bad_typeid", "\n\u4e5f\u662f\u7528\u4e8e\u5f02\u5e38\u5904\u7406\u7684,\u5f53typeid\u64cd\u4f5c\u7b26\u7684\u64cd\u4f5c\u6570typeid\u4e3aNull\u6307\u9488\u65f6\u629b\u51fa.", "(5)bool", "\n\u4e0d\u7528\u591a\u8bf4\u4e86\u5427,\u58f0\u660e\u5e03\u5c14\u7c7b\u578b\u7684\u53d8\u91cf\u6216\u51fd\u6570.", "(6)break", "\n\u8df3\u51fa\u5f53\u524d\u5faa\u73af.The break statement terminates the execution of the nearest enclosing loop or conditional statement in which it appears. ", "(7)case", "\nswitch\u8bed\u53e5\u5206\u652f.Labels that appear after the case keyword cannot also appear outside a switch statement. ", "(8)catch,throw,try", "\n\u90fd\u662f\u5f02\u5e38\u5904\u7406\u7684\u8bed\u53e5,The try, throw, and catch statements implement exception handling.", "(9)char", "\n\u58f0\u660e\u5b57\u7b26\u578b\u53d8\u91cf\u6216\u51fd\u6570.", "(10)class", "\n\u58f0\u660e\u6216\u5b9a\u4e49\u7c7b\u6216\u8005\u7c7b\u7684\u5bf9\u8c61.The class keyword declares a class type or defines an object of a class type.", "(11)const", "\n\u88abconst\u4fee\u9970\u7684\u4e1c\u897f\u90fd\u53d7\u5230\u5f3a\u5236\u4fdd\u62a4\uff0c\u53ef\u4ee5\u9884\u9632\u610f\u5916\u7684\u53d8\u52a8\uff0c\u80fd\u63d0\u9ad8\u7a0b\u5e8f\u7684\u5065\u58ee\u6027\u3002\u5b83\u53ef\u4ee5\u4fee\u9970\u51fd\u6570\u7684\u53c2\u6570\u3001\u8fd4\u56de\u503c\uff0c\u751a\u81f3\u51fd\u6570\u7684\u5b9a\u4e49\u4f53\u3002", "\n\u4f5c\u7528:", "\n1.\u4fee\u9970\u8f93\u5165\u53c2\u6570", "\n      a.\u5bf9\u4e8e\u975e\u5185\u90e8\u6570\u636e\u7c7b\u578b\u7684\u8f93\u5165\u53c2\u6570\uff0c\u5e94\u8be5\u5c06\u201c\u503c\u4f20\u9012\u201d\u7684\u65b9\u5f0f\u6539\u4e3a\u201cconst\u5f15\u7528\u4f20\u9012\u201d\uff0c\u76ee\u7684\u662f\u63d0\u9ad8\u6548\u7387\u3002\u4f8b\u5982\u5c06void Func(A a) \u6539\u4e3avoid Func(const A &a)\u3002", "\n      b.\u5bf9\u4e8e\u5185\u90e8\u6570\u636e\u7c7b\u578b\u7684\u8f93\u5165\u53c2\u6570\uff0c\u4e0d\u8981\u5c06\u201c\u503c\u4f20\u9012\u201d\u7684\u65b9\u5f0f\u6539\u4e3a\u201cconst\u5f15\u7528\u4f20\u9012\u201d\u3002\u5426\u5219\u65e2\u8fbe\u4e0d\u5230\u63d0\u9ad8\u6548\u7387\u7684\u76ee\u7684\uff0c\u53c8\u964d\u4f4e\u4e86\u51fd\u6570\u7684\u53ef\u7406\u89e3\u6027\u3002\u4f8b\u5982void Func(int x) \u4e0d\u5e94\u8be5\u6539\u4e3avoid Func(const int &x)\u3002", "\n2.\u7528const\u4fee\u9970\u51fd\u6570\u7684\u8fd4\u56de\u503c", "\n      a.\u5982\u679c\u7ed9\u4ee5\u201c\u6307\u9488\u4f20\u9012\u201d\u65b9\u5f0f\u7684\u51fd\u6570\u8fd4\u56de\u503c\u52a0const\u4fee\u9970\uff0c\u90a3\u4e48\u51fd\u6570\u8fd4\u56de\u503c\uff08\u5373\u6307\u9488\uff09\u7684\u5185\u5bb9\u4e0d\u80fd\u88ab\u4fee\u6539\uff0c\u8be5\u8fd4\u56de\u503c\u53ea\u80fd\u88ab\u8d4b\u7ed9\u52a0const\u4fee\u9970\u7684\u540c\u7c7b\u578b\u6307\u9488\u3002", "\n\u5982\u5bf9\u4e8e\uff1aconst char * GetString(void);", "\n\u5982\u4e0b\u8bed\u53e5\u5c06\u51fa\u73b0\u7f16\u8bd1\u9519\u8bef\uff1a", "\nchar *str = GetString();//cannot convert from \u2018const char *\u2019 to \u2018char *\u2019\uff1b", "\n\u6b63\u786e\u7684\u7528\u6cd5\u662f\uff1a", "\nconst char *str = GetString();", "\n      b.\u5982\u679c\u51fd\u6570\u8fd4\u56de\u503c\u91c7\u7528\u201c\u503c\u4f20\u9012\u65b9\u5f0f\u201d\uff0c\u7531\u4e8e\u51fd\u6570\u4f1a\u628a\u8fd4\u56de\u503c\u590d\u5236\u5230\u5916\u90e8\u4e34\u65f6\u7684\u5b58\u50a8\u5355\u5143\u4e2d\uff0c\u52a0const\u4fee\u9970\u6ca1\u6709\u4efb\u4f55\u4ef7\u503c\u3002 \u5982\u4e0d\u8981\u628a\u51fd\u6570int GetInt(void) \u5199\u6210const int GetInt(void)\u3002", "\n3.const\u6210\u5458\u51fd\u6570\u7684\u58f0\u660e\u4e2d\uff0cconst\u5173\u952e\u5b57\u53ea\u80fd\u653e\u5728\u51fd\u6570\u58f0\u660e\u7684\u5c3e\u90e8,\u8868\u793a\u8be5\u7c7b\u6210\u5458\u4e0d\u4fee\u6539\u5bf9\u8c61.", "\n\u8bf4\u660e\uff1a", "\nconst type m; //\u4fee\u9970m\u4e3a\u4e0d\u53ef\u6539\u53d8", "\n\u793a\u4f8b\uff1a", "\ntypedef char * pStr; //\u65b0\u7684\u7c7b\u578bpStr;", "\nchar string[4] = \u201cabc\u201d;", "\nconst char *p1 = string\uff1b", "\np1++; //\u6b63\u786e\uff0c\u4e0a\u8fb9\u4fee\u9970\u7684\u662f*p1,p1\u53ef\u53d8", "\nconst pStr p2 = string;", "\np2++; //\u9519\u8bef\uff0c\u4e0a\u8fb9\u4fee\u9970\u7684\u662fp2\uff0cp2\u4e0d\u53ef\u53d8,*p2\u53ef\u53d8", "\n\u540c\u7406\uff0cconst\u4fee\u9970\u6307\u9488\u65f6\u7528\u6b64\u539f\u5219\u5224\u65ad\u5c31\u4e0d\u4f1a\u6df7\u6dc6\u4e86\u3002 ", "const int *value; //*value\u4e0d\u53ef\u53d8\uff0cvalue\u53ef\u53d8", "\nint* const value; //value\u4e0d\u53ef\u53d8\uff0c*value\u53ef\u53d8", "\nconst (int *) value; //(int *)\u662f\u4e00\u79cdtype,value\u4e0d\u53ef\u53d8,*value\u53ef\u53d8", "\n//\u903b\u8f91\u4e0a\u8fd9\u6837\u7406\u89e3\uff0c\u7f16\u8bd1\u4e0d\u80fd\u901a\u8fc7\uff0c\u9700\u8981tydef int* NewType;", "\nconst int* const value;//*value,value\u90fd\u4e0d\u53ef\u53d8", "(12)continue", "\n\u7ed3\u675f\u5f53\u524d\u5faa\u73af\uff0c\u5f00\u59cb\u4e0b\u4e00\u8f6e\u5faa\u73af.Forces transfer of control to the controlling expression of the smallest enclosing do, for, or while loop. ", "(13)default", "\nswitch\u8bed\u53e5\u4e2d\u7684\u9ed8\u8ba4\u5206\u652f.None of the constants match the constants in the case labels; a default label is present.Control is transferred to the default label.", "(14)delete", "\n\u7ecf\u5e38\u7528\u4e8e\u52a8\u6001\u5185\u5b58\u5206\u914d\u7684\u8bed\u53e5,Deallocates a block of memory. ", "(15)do", "\n\u5728do-while\u5faa\u73af\u7ed3\u6784\u4e2d\u5f00\u59cb\u5faa\u73af\u4f53.Executes a statement repeatedly until the specified termination condition (the expression) evaluates to zero.", "(16)double", "\n\u58f0\u660e\u53cc\u7cbe\u5ea6\u53d8\u91cf\u6216\u51fd\u6570.", "(17)else", "\n\u6761\u4ef6\u8bed\u53e5\u5426\u5b9a\u5206\u652f(\u4e0e if \u8fde\u7528).", "(18)enum", "\n\u58f0\u660e\u679a\u4e3e\u7c7b\u578b.The name of each enumerator is treated as a constant and must be unique within the scope where the enum is defined. ", "(19)explicit", "\nThis keyword is a declaration specifier that can only be applied to in-class constructor declarations. An explicit constructor cannot take part in implicit conversions. It can only be used to explicitly construct an object. ", "(20)export", "\nMSDN\u53ea\u8bf4The export keyword is not supported on templates.\u4e00\u79cd\u5bfc\u51fa\u8bed\u53e5\u5427..", "(21)extern", "\nextern \u610f\u4e3a\u201c\u5916\u6765\u7684\u201d\u2022\u2022\u2022\u5b83\u7684\u4f5c\u7528\u5728\u4e8e\u544a\u8bc9\u7f16\u8bd1\u5668\uff1a\u6709\u8fd9\u4e2a\u53d8\u91cf\uff0c\u5b83\u53ef\u80fd\u4e0d\u5b58\u5728\u5f53\u524d\u7684\u6587\u4ef6\u4e2d\uff0c\u4f46\u5b83\u80af\u5b9a\u8981\u5b58\u5728\u4e8e\u5de5\u7a0b\u4e2d\u7684\u67d0\u4e00\u4e2a\u6e90\u6587\u4ef6\u4e2d\u6216\u8005\u4e00\u4e2aDll\u7684\u8f93\u51fa\u4e2d\u3002\u58f0\u660e\u53d8\u91cf\u662f\u5728\u5176\u4ed6\u6587\u4ef6\u4e2d\u58f0\u660e(\u4e5f\u53ef\u4ee5\u770b\u505a\u662f\u5f15\u7528\u53d8\u91cf).Objects and variables declared as extern declare an object that is defined in another translation unit or in an enclosing scope as having external linkage.", "(22)false,true", "\nbool\u7c7b\u578b\u7684\u4e24\u4e2a\u679a\u4e3e\u503c.", "(23)float", "\n\u58f0\u660e\u6d6e\u70b9\u578b\u53d8\u91cf\u6216\u51fd\u6570.", "(24)for", "\n\u4e00\u79cd\u5faa\u73af\u8bed\u53e5(\u53ef\u610f\u4f1a\u4e0d\u53ef\u8a00\u4f20).Use the for statement to construct loops that must execute a specified number of times.", "(25)friend", "\n\u58f0\u660e\u53cb\u5143\u51fd\u6570\u6216\u8005\u7c7b.The friend keyword allows a function or class to gain access to the private and protected members of a class. ", "(26)goto", "\n\u65e0\u6761\u4ef6\u8df3\u8f6c\u8bed\u53e5.Performs an unconditional transfer of control to the named label. ", "(27)if", "\n\u6761\u4ef6\u8bed\u53e5.Controls conditional branching.\u5e38\u4e0eelse\u4e00\u8d77\u7528.", "(28)inline", "\n\u58f0\u660e\u5b9a\u4e49\u5185\u8054\u51fd\u6570,\u7f16\u8bd1\u65f6\u5c06\u6240\u8c03\u7528\u7684\u4ee3\u7801\u5d4c\u5165\u5230\u4e3b\u51fd\u6570\u4e2d.The inline specifiers instruct the compiler to insert a copy of the function body into each place the function is called.", "(29)int", "\n\u58f0\u660e\u6574\u578b\u53d8\u91cf\u6216\u51fd\u6570.", "(30)long", "\n\u58f0\u660e\u957f\u6574\u578b\u53d8\u91cf\u6216\u51fd\u6570.", "(31)mutable", "\nThis keyword can only be applied to non-static and non-const data members of a class. If a data member is declared mutable, then it is legal to assign a value to this data member from a const member function.", "(32)namespace", "\nDynamically imports an element behavior into a document.", "(33)new", "\n\u52a8\u6001\u5185\u5b58\u5206\u914d.Allocates memory for an object or array of objects of type-name from the free store and returns a suitably typed, nonzero pointer to the object.", "(34)operator", "\nThe operator keyword declares a function specifying what operator-symbol means when applied to instances of a class. ", "(35)private", "\n\u7c7b\u79c1\u6709\u51fd\u6570\u548c\u6570\u636e\u6210\u5458\u7684\u6807\u793a.When preceding a list of class members, the private keyword specifies that those members are accessible only from member functions and friends of the class. This applies to all members declared up to the next access specifier or the end of the class.", "(36)protected", "\nThe protected keyword specifies access to class members in the member-list up to the next access specifier (public or private) or the end of the class definition. ", "(37)public", "\nWhen preceding a list of class members, the public keyword specifies that those members are accessible from any function. This applies to all members declared up to the next access specifier or the end of the class.", "(38)register", "\n\u58f0\u660e\u79ef\u5b58\u5668\u53d8\u91cf.The register keyword specifies that the variable is to be stored in a machine register, if possible.\u8fd9\u4e2a\u5173\u952e\u5b57\u547d\u4ee4\u7f16\u8bd1\u5668\u5c3d\u53ef\u80fd\u7684\u5c06\u53d8\u91cf\u5b58\u5728CPU\u5185\u90e8\u5bc4\u5b58\u5668\u4e2d,\u800c\u4e0d\u662f\u901a\u8fc7\u5185\u5b58\u5bfb\u5740\u8bbf\u95ee,\u4ece\u800c\u63d0\u9ad8\u6548\u7387\u3002 ", "(39)return", "\n\u5b50\u7a0b\u5e8f\u8fd4\u56de\u8bed\u53e5(\u53ef\u4ee5\u5e26\u53c2\u6570\uff0c\u4e5f\u770b\u4e0d\u5e26\u53c2\u6570),\u8fd4\u56de\u51fd\u6570\u8c03\u7528\u70b9.Terminates the execution of a function and returns control to the calling function (or, in the case of the main function, transfers control back to the operating system). Execution resumes in the calling function at the point immediately following the call.", "(40)short", "\n\u58f0\u660e\u77ed\u6574\u578b\u53d8\u91cf\u6216\u51fd\u6570.", "(41)signed,unsigned", "\n\u58f0\u660e\u6709\u7b26\u53f7\u7c7b\u578b\u53d8\u91cf\u6216\u51fd\u6570;\u58f0\u660e\u65e0\u7b26\u53f7\u7c7b\u578b\u53d8\u91cf\u6216\u51fd\u6570.", "(42)static", "\n\u58f0\u660e\u9759\u6001\u53d8\u91cf.When modifying a variable, the static keyword specifies that the variable has static durationinitializes it to 0 unless another value is specified.", "(43)struct", "\n\u58f0\u660e\u7ed3\u6784\u4f53\u53d8\u91cf\u6216\u51fd\u6570.struct \u7c7b\u578b\u662f\u4e00\u79cd\u503c\u7c7b\u578b\uff0c\u901a\u5e38\u7528\u6765\u5c01\u88c5\u5c0f\u578b\u76f8\u5173\u53d8\u91cf\u7ec4.", "(44)switch", "\nAllows selection among multiple sections of code, depending on the value of an integral expression.", "(45)template", "\n\u6a21\u677f.The template declaration specifies a set of parameterized classes or functions. ", "(46)this", "\nThe this pointer is a pointer accessible only within the nonstatic member functions of a class, struct, or union type. ", "(47)typedef", "\n\u7528\u4ee5\u7ed9\u6570\u636e\u7c7b\u578b\u53d6\u522b\u540d.Introduces a name that, within its scope, becomes a synonym for the type given by the type-declaration portion of the declaration.", "(48)typeid", "\ntypeid is used to get the Type for a type at compile time.", "(49)typename", "\nTells the compiler that an unknown identifier is a type.Use this keyword only in template definitions.", "(50)union", "\n\u58f0\u660e\u8054\u5408\u6570\u636e\u7c7b\u578b.A union is a user-defined data or class type that, at any given time, contains only one object from its list of members (although that object can be an array or a class type).", "(51)using", "\nThe using declaration introduces a name into the declarative region in which the using declaration appears.", "(52)virtual", "\n\u58f0\u660e\u865a\u57fa\u7c7b\u6216\u865a\u51fd\u6570.The virtual keyword declares a virtual function or a virtual base class.", "(53)void", "\n\u58f0\u660e\u51fd\u6570\u65e0\u8fd4\u56de\u503c\u6216\u65e0\u53c2\u6570\uff0c\u58f0\u660e\u65e0\u7c7b\u578b\u6307\u9488.", "\nWhen used as a function return type, the void keyword specifies that the function does not return a value. When used for a function\u2019s parameter list, void specifies that the function takes no parameters. When used in the declaration of a pointer, void specifies that the pointer is \u201cuniversal.\u201d", "(54)volatile", "\n\u8bf4\u660e\u53d8\u91cf\u5728\u7a0b\u5e8f\u6267\u884c\u4e2d\u53ef\u88ab\u9690\u542b\u5730\u6539\u53d8,\u8868\u660e\u67d0\u4e2a\u53d8\u91cf\u7684\u503c\u53ef\u80fd\u5728\u5916\u90e8\u88ab\u6539\u53d8\uff0c\u4f18\u5316\u5668\u5728\u7528\u5230\u8fd9\u4e2a\u53d8\u91cf\u65f6\u5fc5\u987b\u6bcf\u6b21\u90fd\u5c0f\u5fc3\u5730\u91cd\u65b0\u8bfb\u53d6\u8fd9\u4e2a\u53d8\u91cf\u7684\u503c\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u4fdd\u5b58\u5728\u5bc4\u5b58\u5668\u91cc\u7684\u5907\u4efd\u3002The volatile keyword is a type qualifier used to declare that an object can be modified in the program by something such as the operating system, the hardware, or a concurrently executing thread.", "(55)wchar_t", "\n\u5bbd\u5b57.", "(56)while", "\n\u5faa\u73af\u8bed\u53e5\u7684\u5faa\u73af\u6761\u4ef6"], "title": "C++\u5173\u952e\u5b57 \u9762\u8bd5\u9898"},
{"contents": ["1.\tIn C++, what is the difference between method overloading and method overriding?Overloading a method (or function) in C++ is the ability for functions of the same name to be defined as long as these methods have different signatures (different set of parameters). Method overriding is the ability of the inherited class rewriting the virtual method of the base class.", "\n2.\tWhat methods can be overridden in Java? In C++ terminology, all public methods in Java are virtual. Therefore, all Java methods can be overwritten in subclasses except those that are declared final, static, and private.", "\n3.\tIn C, what is the difference between a static variable and global variable? A static variable declared outside of any function is accessible only to all the functions defined in the same file (as the static variable). However, a global variable can be accessed by any function (including the ones from different files).", "\n4.\tIn C, why is the void pointer useful? When would you use it? The void pointer is useful becuase it is a generic pointer that any pointer can be cast into and back again without loss of information.", "\n5.\tWhat are the defining traits of an object-oriented language? The defining traits of an object-oriented langauge are:", "\no\tencapsulation", "\no\tinheritance", "\no\tpolymorphism "], "title": "C++ interview questions"},
{"contents": ["1. \u4ee5\u4e0b\u4e09\u6761\u8f93\u51fa\u8bed\u53e5\u5206\u522b\u8f93\u51fa\u4ec0\u4e48\uff1f", "\nchar str1[] = \u201cabc\u201d;", "\nchar str2[] = \u201cabc\u201d;", "\nconst char str3[] = \u201cabc\u201d;", "\nconst char str4[] = \u201cabc\u201d;", "\nconst char* str5 = \u201cabc\u201d;", "\nconst char* str6 = \u201cabc\u201d;", "\ncout \ncout \ncout \n\u7b54\uff1a\u5206\u522b\u8f93\u51fafalse,false,true\u3002str1\u548cstr2\u90fd\u662f\u5b57\u7b26\u6570\u7ec4\uff0c\u6bcf\u4e2a\u90fd\u6709\u5176\u81ea\u5df1\u7684\u5b58\u50a8\u533a\uff0c\u5b83\u4eec\u7684\u503c\u5219\u662f\u5404\u5b58\u50a8\u533a\u9996\u5730\u5740\uff0c\u4e0d\u7b49\uff1bstr3\u548cstr4\u540c\u4e0a\uff0c\u53ea\u662f\u6309const\u8bed\u4e49\uff0c\u5b83\u4eec\u6240\u6307\u5411\u7684\u6570\u636e\u533a\u4e0d\u80fd\u4fee\u6539\u3002str5\u548cstr6\u5e76\u975e\u6570\u7ec4\u800c\u662f\u5b57\u7b26\u6307\u9488\uff0c\u5e76\u4e0d\u5206\u914d\u5b58\u50a8\u533a\uff0c\u5176\u540e\u7684\u201cabc\u201d\u4ee5\u5e38\u91cf\u5f62\u5f0f\u5b58\u4e8e\u9759\u6001\u6570\u636e\u533a\uff0c\u800c\u5b83\u4eec\u81ea\u5df1\u4ec5\u662f\u6307\u5411\u8be5\u533a\u9996\u5730\u5740\u7684\u6307\u9488\uff0c\u76f8\u7b49\u3002", "\n2. \u4ee5\u4e0b\u4ee3\u7801\u4e2d\u7684\u4e24\u4e2asizeof\u7528\u6cd5\u6709\u95ee\u9898\u5417\uff1f", "\nvoid UpperCase( char str[] ) // \u5c06 str \u4e2d\u7684\u5c0f\u5199\u5b57\u6bcd\u8f6c\u6362\u6210\u5927\u5199\u5b57\u6bcd", "\n{", "\nfor( size_t i=0; i", "\nif( 'a'\nstr[ i] -= ('a'-'A' );", "\n}", "\nchar str[] = \"aBcDe\";", "\ncout \nUpperCase( str );", "\ncout \n\u7b54\uff1a\u51fd\u6570\u5185\u7684sizeof\u6709\u95ee\u9898\u3002\u6839\u636e\u8bed\u6cd5\uff0csizeof\u5982\u7528\u4e8e\u6570\u7ec4\uff0c\u53ea\u80fd\u6d4b\u51fa\u9759\u6001\u6570\u7ec4\u7684\u5927\u5c0f\uff0c\u65e0\u6cd5\u68c0\u6d4b\u52a8\u6001\u5206\u914d\u7684\u6216\u5916\u90e8\u6570\u7ec4\u5927\u5c0f\u3002\u51fd\u6570\u5916\u7684str\u662f\u4e00\u4e2a\u9759\u6001\u5b9a\u4e49\u7684\u6570\u7ec4\uff0c\u56e0\u6b64\u5176\u5927\u5c0f\u4e3a6\uff0c\u51fd\u6570\u5185\u7684str\u5b9e\u9645\u53ea\u662f\u4e00\u4e2a\u6307\u5411\u5b57\u7b26\u4e32\u7684\u6307\u9488\uff0c\u6ca1\u6709\u4efb\u4f55\u989d\u5916\u7684\u4e0e\u6570\u7ec4\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u56e0\u6b64sizeof\u4f5c\u7528\u4e8e\u4e0a\u53ea\u5c06\u5176\u5f53\u6307\u9488\u770b\uff0c\u4e00\u4e2a\u6307\u9488\u4e3a4\u4e2a\u5b57\u8282\uff0c\u56e0\u6b64\u8fd4\u56de4\u3002", "\n3. \u975eC++\u5185\u5efa\u578b\u522b A \u548c B\uff0c\u5728\u54ea\u51e0\u79cd\u60c5\u51b5\u4e0bB\u80fd\u9690\u5f0f\u8f6c\u5316\u4e3aA\uff1f", "\n\u7b54\uff1a", "\na. class B : public A { \u2026\u2026} // B\u516c\u6709\u7ee7\u627f\u81eaA\uff0c\u53ef\u4ee5\u662f\u95f4\u63a5\u7ee7\u627f\u7684", "\nb. class B { operator A( ); } // B\u5b9e\u73b0\u4e86\u9690\u5f0f\u8f6c\u5316\u4e3aA\u7684\u8f6c\u5316", "\nc. class A { A( const B& ); } // A\u5b9e\u73b0\u4e86non-explicit\u7684\u53c2\u6570\u4e3aB\uff08\u53ef\u4ee5\u6709\u5176\u4ed6\u5e26\u9ed8\u8ba4\u503c\u7684\u53c2\u6570\uff09\u6784\u9020\u51fd\u6570", "\nd. A& operator= ( const A& ); // \u8d4b\u503c\u64cd\u4f5c\uff0c\u867d\u4e0d\u662f\u6b63\u5b97\u7684\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\uff0c\u4f46\u4e5f\u53ef\u4ee5\u52c9\u5f3a\u7b97\u4e00\u4e2a", "\n4. \u4ee5\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1f", "\nstruct Test", "\n{", "\nTest( int ) {}", "\nTest() {}", "\nvoid fun() {}", "\n};", "\nvoid main( void )", "\n{", "\nTest a(1);", "\na.fun();", "\nTest b();", "\nb.fun();", "\n}", "\n\u7b54\uff1a\u53d8\u91cfb\u5b9a\u4e49\u51fa\u9519\u3002\u6309\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u5b9a\u4e49\u5bf9\u8c61\uff0c\u4e0d\u9700\u8981\u52a0\u62ec\u53f7\u3002", "\n5. \u4ee5\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1f", "\ncout \n\u7b54\uff1a\u4e09\u5143\u8868\u8fbe\u5f0f\u201c\uff1f:\u201d\u95ee\u53f7\u540e\u9762\u7684\u4e24\u4e2a\u64cd\u4f5c\u6570\u5fc5\u987b\u4e3a\u540c\u4e00\u7c7b\u578b\u3002", "\n6. \u4ee5\u4e0b\u4ee3\u7801\u80fd\u591f\u7f16\u8bd1\u901a\u8fc7\u5417\uff0c\u4e3a\u4ec0\u4e48\uff1f", "\nunsigned int const size1 = 2;", "\nchar str1[ size1 ];", "\nunsigned int temp = 0;", "\ncin >> temp;", "\nunsigned int const size2 = temp;", "\nchar str2[ size2 ];", "\n\u7b54\uff1astr2\u5b9a\u4e49\u51fa\u9519\uff0csize2\u975e\u7f16\u8bd1\u5668\u671f\u95f4\u5e38\u91cf\uff0c\u800c\u6570\u7ec4\u5b9a\u4e49\u8981\u6c42\u957f\u5ea6\u5fc5\u987b\u4e3a\u7f16\u8bd1\u671f\u5e38\u91cf\u3002", "\n7. \u4ee5\u4e0b\u53cd\u5411\u904d\u5386array\u6570\u7ec4\u7684\u65b9\u6cd5\u6709\u4ec0\u4e48\u9519\u8bef\uff1f", "\nvector array;", "\narray.push_back( 1 );", "\narray.push_back( 2 );", "\narray.push_back( 3 );", "\nfor( vector::size_type i=array.size()-1; i>=0; \u2013i ) // \u53cd\u5411\u904d\u5386array\u6570\u7ec4", "\n{", "\ncout \n}", "\n\u7b54\uff1a\u9996\u5148\u6570\u7ec4\u5b9a\u4e49\u6709\u8bef\uff0c\u5e94\u52a0\u4e0a\u7c7b\u578b\u53c2\u6570\uff1avector", "10. \u4ee5\u4e0b\u4e24\u6761\u8f93\u51fa\u8bed\u53e5\u5206\u522b\u8f93\u51fa\u4ec0\u4e48\uff1f", "\nfloat a = 1.0f;", "\ncout \ncout \ncout \nfloat b = 0.0f;", "\ncout \ncout \ncout \n\u7b54\uff1a\u5206\u522b\u8f93\u51fafalse\u548ctrue\u3002\u6ce8\u610f\u8f6c\u6362\u7684\u5e94\u7528\u3002(int)a\u5b9e\u9645\u4e0a\u662f\u4ee5\u6d6e\u70b9\u6570a\u4e3a\u53c2\u6570\u6784\u9020\u4e86\u4e00\u4e2a\u6574\u578b\u6570\uff0c\u8be5\u6574\u6570\u7684\u503c\u662f1\uff0c(int&)a\u5219\u662f\u544a\u8bc9\u7f16\u8bd1\u5668\u5c06a\u5f53\u4f5c\u6574\u6570\u770b\uff08\u5e76\u6ca1\u6709\u505a\u4efb\u4f55\u5b9e\u8d28\u4e0a\u7684\u8f6c\u6362\uff09\u3002\u56e0\u4e3a1\u4ee5\u6574\u6570\u5f62\u5f0f\u5b58\u653e\u548c\u4ee5\u6d6e\u70b9\u5f62\u5f0f\u5b58\u653e\u5176\u5185\u5b58\u6570\u636e\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u56e0\u6b64\u4e24\u8005\u4e0d\u7b49\u3002\u5bf9b\u7684\u4e24\u79cd\u8f6c\u6362\u610f\u4e49\u540c\u4e0a\uff0c\u4f46\u662f0\u7684\u6574\u6570\u5f62\u5f0f\u548c\u6d6e\u70b9\u5f62\u5f0f\u5176\u5185\u5b58\u6570\u636e\u662f\u4e00\u6837\u7684\uff0c\u56e0\u6b64\u5728\u8fd9\u79cd\u7279\u6b8a\u60c5\u5f62\u4e0b\uff0c\u4e24\u8005\u76f8\u7b49\uff08\u4ec5\u4ec5\u5728\u6570\u503c\u610f\u4e49\u4e0a\uff09\u3002", "\n\u6ce8\u610f\uff0c\u7a0b\u5e8f\u7684\u8f93\u51fa\u4f1a\u663e\u793a(int&)a=1065353216\uff0c\u8fd9\u4e2a\u503c\u662f\u600e\u4e48\u6765\u7684\u5462\uff1f\u524d\u9762\u5df2\u7ecf\u8bf4\u4e86\uff0c1\u4ee5\u6d6e\u70b9\u6570\u5f62\u5f0f\u5b58\u653e\u5728\u5185\u5b58\u4e2d\uff0c\u6309ieee754\u89c4\u5b9a\uff0c\u5176\u5185\u5bb9\u4e3a0x0000803F\uff08\u5df2\u8003\u8651\u5b57\u8282\u53cd\u5e8f\uff09\u3002\u8fd9\u4e5f\u5c31\u662fa\u8fd9\u4e2a\u53d8\u91cf\u6240\u5360\u636e\u7684\u5185\u5b58\u5355\u5143\u7684\u503c\u3002\u5f53(int&)a\u51fa\u73b0\u65f6\uff0c\u5b83\u76f8\u5f53\u4e8e\u544a\u8bc9\u5b83\u7684\u4e0a\u4e0b\u6587\uff1a\u201c\u628a\u8fd9\u5757\u5730\u5740\u5f53\u505a\u6574\u6570\u770b\u5f85\uff01\u4e0d\u8981\u7ba1\u5b83\u539f\u6765\u662f\u4ec0\u4e48\u3002\u201d\u8fd9\u6837\uff0c\u5185\u5bb90x0000803F\u6309\u6574\u6570\u89e3\u91ca\uff0c\u5176\u503c\u6b63\u597d\u5c31\u662f1065353216\uff08\u5341\u8fdb\u5236\u6570\uff09\u3002", "\n\u901a\u8fc7\u67e5\u770b\u6c47\u7f16\u4ee3\u7801\u53ef\u4ee5\u8bc1\u5b9e\u201c(int)a\u76f8\u5f53\u4e8e\u91cd\u65b0\u6784\u9020\u4e86\u4e00\u4e2a\u503c\u7b49\u4e8ea\u7684\u6574\u578b\u6570\u201d\u4e4b\u8bf4\uff0c\u800c(int&)\u7684\u4f5c\u7528\u5219\u4ec5\u4ec5\u662f\u8868\u8fbe\u4e86\u4e00\u4e2a\u7c7b\u578b\u4fe1\u606f\uff0c\u610f\u4e49\u5728\u4e8e\u4e3acout\n11. \u4ee5\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1f", "\ntypedef vector IntArray;", "\nIntArray array;", "\narray.push_back( 1 );", "\narray.push_back( 2 );", "\narray.push_back( 2 );", "\narray.push_back( 3 );", "\n// \u5220\u9664array\u6570\u7ec4\u4e2d\u6240\u6709\u76842", "\nfor( IntArray::iterator itor=array.begin(); itor!=array.end(); ++itor )", "\n{", "\nif( 2 == *itor ) array.erase( itor );", "\n}", "\n\u7b54\uff1a\u540c\u6837\u6709\u7f3a\u5c11\u7c7b\u578b\u53c2\u6570\u7684\u95ee\u9898\u3002\u53e6\u5916\uff0c\u6bcf\u6b21\u8c03\u7528\u201carray.erase( itor );\u201d\uff0c\u88ab\u5220\u9664\u5143\u7d20\u4e4b\u540e\u7684\u5185\u5bb9\u4f1a\u81ea\u52a8\u5f80\u524d\u79fb\uff0c\u5bfc\u81f4\u8fed\u4ee3\u6f0f\u9879\uff0c\u5e94\u5728\u5220\u9664\u4e00\u9879\u540e\u4f7fitor--\uff0c\u4f7f\u4e4b\u4ece\u5df2\u7ecf\u524d\u79fb\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\u8d77\u7ee7\u7eed\u904d\u5386\u3002", "12. \u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u5b8c\u6210\u5185\u5b58\u4e4b\u95f4\u7684\u62f7\u8d1d\u3002[\u8003\u8651\u95ee\u9898\u662f\u5426\u5168\u9762]", "\n\u7b54\uff1a", "\nvoid* mymemcpy( void *dest, const void *src, size_t count )", "\n{", "\nchar* pdest = static_cast"], "title": "C++\u7b14\u8bd5\u9898\uff08\u5341\u4e03\uff09"},
{"contents": ["1.\u5b9e\u73b0\u53cc\u5411\u94fe\u8868\u5220\u9664\u4e00\u4e2a\u8282\u70b9P\uff0c\u5728\u8282\u70b9P\u540e\u63d2\u5165\u4e00\u4e2a\u8282\u70b9\uff0c\u5199\u51fa\u8fd9\u4e24\u4e2a\u51fd\u6570;", "\n\u7b54\uff1a", "//\u5047\u8bbe\u7ebf\u6027\u8868\u7684\u53cc\u5411\u94fe\u8868\u5b58\u50a8\u7ed3\u6784", "\ntypedef struct DulNode{", "\nstruct DulNode *prior; //\u524d\u9a71\u6307\u9488", "\nElemType data; //\u6570\u636e", "\nstruct DulNode *next; //\u540e\u7ee7\u6307\u9488", "\n}DulNode,*DuLinkList;", "\n//\u5220\u9664\u64cd\u4f5c", "\nStatus ListDelete_DuL(DuLinkList &L,int i,ElemType &e)", "\n{", "\nif(!(p=GetElemP_DuL(L,i))) //\u6b64\u5904\u5f97\u5230i\u4f4d\u7f6e\u7684\u8282\u70b9\u6307\u9488\uff0c\u5982\u679c\u6709\u9700\u8981\u4e5f\u5f97\u5199\u51fa\u5177\u4f53\u51fd\u6570\u5b9e\u73b0", "\nreturn ERROR;", "\ne=p->data;", "\np->prior->next=p->next;", "\np->next->prior=p->pror;", "\nfree(p);", "\nreturn OK;", "\n}", "\n//\u63d2\u5165\u64cd\u4f5c", "\nStatus ListInsert_DuL(DuLinkList &L,int i,ElemType &e)", "\n{", "\nif(!(p=GetElemP_DuL(L,i)))", "\nreturn ERROR;", "\nif(!(s=(DuLinkList)malloc(sizeof(DuLNode))))", "\nreturn ERROR;", "s->data=e;", "\ns->prior=p->prior;", "\np->prior->next=s;", "\ns->next=p;", "\np->prior=s;", "\nreturn OK;", "\n}", "2.\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u5c06\u5176\u4e2d\u7684\\t\u90fd\u8f6c\u6362\u62104\u4e2a\u7a7a\u683c\u3002", "\n\u7b54\uff1a", "\n\u8be5\u51fd\u6570\u547d\u540d\u4e3aconvert,\u53c2\u6570\u7684\u610f\u4e49\u4e3a\uff1a", "\n*strDest\u76ee\u7684\u5b57\u7b26\u4e32,*strSrc\u6e90\u5b57\u7b26\u4e32,length\u6e90\u5b57\u7b26\u4e32\u7684\u957f\u5ea6", "\n\u51fd\u6570\u5b9e\u73b0\u4e3a\uff1a", "\nchar* convert(char *strDest, const char *strSrc,int length)", "\n{", "\nchar * cp = strDest;", "\nint i=0;", "\nwhile(*strSrc && i{", "\nif (*strSrc==\u2019\\t\u2019) //\u5c06\\t\u8f6c\u6362\u62104\u4e2a\u7a7a\u683c", "\n{", "\nfor(int j=0;j\n*cp++=' ';", "\n}", "\nelse //\u5426\u5219\u76f4\u63a5\u62f7\u8d1d", "\n*cp++=*strSrc;", "\nstrSrc++;", "\ni++;", "\n}", "\nreturn strDest;", "\n}", "3.Windows\u7a0b\u5e8f\u7684\u5165\u53e3\u662f\u54ea\u91cc\uff1f\u5199\u51faWindows\u6d88\u606f\u673a\u5236\u7684\u6d41\u7a0b\u3002", "\n\u7b54\uff1a", "\nWindows\u7a0b\u5e8f\u7684\u5165\u53e3\u662fWinMain\u51fd\u6570", "\n\u6d88\u606f\u673a\u5236\uff1a\u7cfb\u7edf\u5c06\u4f1a\u7ef4\u62a4\u4e00\u4e2a\u6216\u591a\u4e2a\u6d88\u606f\u961f\u5217\uff0c\u6240\u6709\u4ea7\u751f\u7684\u6d88\u606f\u90fd\u4f1a\u88ab\u653e\u5165\u6216\u662f\u63d2\u5165\u961f\u5217\u4e2d\u3002\u7cfb\u7edf\u4f1a\u5728\u961f\u5217\u4e2d\u53d6\u51fa\u6bcf\u4e00\u6761\u6d88\u606f\uff0c\u6839\u636e\u6d88\u606f\u7684\u63a5\u6536\u53e5\u67c4\u800c\u5c06\u8be5\u6d88\u606f\u53d1\u9001\u7ed9\u62e5\u6709\u8be5\u7a97\u53e3\u7684\u7a0b\u5e8f\u7684\u6d88\u606f\u5faa\u73af\u3002\u6bcf\u4e00\u4e2a\u8fd0\u884c\u7684\u7a0b\u5e8f\u90fd\u6709\u81ea\u5df1\u7684\u6d88\u606f\u5faa\u73af\uff0c\u5728\u5faa\u73af\u4e2d\u5f97\u5230\u5c5e\u4e8e\u81ea\u5df1\u7684\u6d88\u606f\u5e76\u6839\u636e\u63a5\u6536\u7a97\u53e3\u7684\u53e5\u67c4\u8c03\u7528\u76f8\u5e94\u7684\u7a97\u53e3\u8fc7\u7a0b\u3002\u800c\u5728\u6ca1\u6709\u6d88\u606f\u65f6\u6d88\u606f\u5faa\u73af\u5c31\u5c06\u63a7\u5236\u6743\u4ea4\u7ed9\u7cfb\u7edf\u3002", "4.\u5982\u4f55\u5b9a\u4e49\u548c\u5b9e\u73b0\u4e00\u4e2a\u7c7b\u7684\u6210\u5458\u51fd\u6570\u4e3a\u56de\u8c03\u51fd\u6570\uff1f", "\n\u7b54\uff1a", "\n\u6240\u8c13\u7684\u56de\u8c03\u51fd\u6570\uff0c\u5c31\u662f\u9884\u5148\u5728\u7cfb\u7edf\u7684\u5bf9\u51fd\u6570\u8fdb\u884c\u6ce8\u518c\uff0c\u8ba9\u7cfb\u7edf\u77e5\u9053\u8fd9\u4e2a\u51fd\u6570\u7684\u5b58\u5728\uff0c\u4ee5\u540e\uff0c\u5f53\u67d0\u4e2a\u4e8b\u4ef6\u53d1\u751f\u65f6\uff0c\u518d\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u5bf9\u4e8b\u4ef6\u8fdb\u884c\u54cd\u5e94\u3002", "\n\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u7684\u6210\u5458\u51fd\u6570\u65f6\u5728\u8be5\u51fd\u6570\u524d\u52a0CALLBACK\u5373\u5c06\u5176\u5b9a\u4e49\u4e3a\u56de\u8c03\u51fd\u6570\uff0c\u51fd\u6570\u7684\u5b9e\u73b0\u548c\u666e\u901a\u6210\u5458\u51fd\u6570\u6ca1\u6709\u533a\u522b", "5.C++\u91cc\u9762\u662f\u4e0d\u662f\u6240\u6709\u7684\u52a8\u4f5c\u90fd\u662fmain()\u5f15\u8d77\u7684\uff1f\u5982\u679c\u4e0d\u662f\uff0c\u8bf7\u4e3e\u4f8b\u3002", "\n\u7b54\uff1a\u4e0d\u662f\uff0c\u6bd4\u5982\u4e2d\u65ad\u5f15\u8d77\u7684\u4e2d\u65ad\u5904\u7406\u4e0d\u662f\u76f4\u63a5\u7531main()\u5f15\u8d77\u7684\uff0c\u800c\u662f\u7531\u5916\u90e8\u4e8b\u4ef6\u5f15\u8d77\u7684\u3002", "6.C++\u91cc\u9762\u5982\u4f55\u58f0\u660econst void f(void)\u51fd\u6570\u4e3aC\u7a0b\u5e8f\u4e2d\u7684\u5e93\u51fd\u6570\uff1f", "\n\u7b54\uff1a\u5728\u8be5\u51fd\u6570\u524d\u6dfb\u52a0extern \u201cC\u201d\u58f0\u660e", "7.\u4e0b\u5217\u54ea\u4e24\u4e2a\u662f\u7b49\u540c\u7684", "\nint b;", "\nA const int* a = &b;", "\nB const* int a = &b;", "\nC const int* const a = &b;", "\nD int const* const a = &b;", "\n\u7b54\uff1a", "\n\u5404\u5f0f\u8868\u793a\u7684\u610f\u601d\u5206\u522b\u4e3a\uff1a", "\nA const int* a = &b; //*a\u662fconst,\u4f46\u6307\u9488a\u53ef\u53d8", "\nB const* int a = &b; //a\u662fconst\uff0c\u4f46*a\u53ef\u53d8", "\nC const int* const a = &b; //a\u548c*a\u90fd\u662fconst,\u5e38\u91cf\u548c\u6307\u9488\u7684\u503c\u90fd\u4e0d\u80fd\u6539\u53d8", "\nD int const* const a = &b; //a\u548c*a\u90fd\u662fconst,\u5e38\u91cf\u548c\u6307\u9488\u7684\u503c\u90fd\u4e0d\u80fd\u6539\u53d8", "\n\u56e0\u6b64C\uff0cD\u4e24\u8005\u662f\u76f8\u540c\u7684\u3002", "\n\u603b\u7ed3\u4e2a\u6280\u5de7\uff1a\u5982\u679cconst\u4f4d\u4e8e\u661f\u53f7\u7684\u5de6\u4fa7\uff0c\u5219const\u5c31\u662f\u7528\u6765\u4fee\u9970\u6307\u9488\u6240\u6307\u5411\u7684\u53d8\u91cf\uff0c\u5373\u6307\u9488\u6307\u5411\u4e3a\u5e38\u91cf\uff1b\u5982\u679cconst\u4f4d\u4e8e\u661f\u53f7\u7684\u53f3\u4fa7\uff0cconst\u5c31\u662f\u4fee\u9970\u6307\u9488\u672c\u8eab\uff0c\u5373\u6307\u9488\u672c\u8eab\u662f\u5e38\u91cf\u3002", "8. \u5185\u8054\u51fd\u6570\u5728\u7f16\u8bd1\u65f6\u662f\u5426\u505a\u53c2\u6570\u7c7b\u578b\u68c0\u67e5\uff1f", "\n\u7b54\uff1a\u505a\u7c7b\u578b\u68c0\u67e5\uff0c\u56e0\u4e3a\u5185\u8054\u51fd\u6570\u5c31\u662f\u5728\u7a0b\u5e8f\u7f16\u8bd1\u65f6\uff0c\u7f16\u8bd1\u5668\u5c06\u7a0b\u5e8f\u4e2d\u51fa\u73b0\u7684\u5185\u8054\u51fd\u6570\u7684\u8c03\u7528\u8868\u8fbe\u5f0f\u7528\u5185\u8054\u51fd\u6570\u7684\u51fd\u6570\u4f53\u6765\u4ee3\u66ff", "1. C++\u4e2d\u5982\u4f55\u963b\u6b62\u4e00\u4e2a\u7c7b\u88ab\u5b9e\u4f8b\u5316\uff1f", "\n\u7eaf\u865a\u51fd\u6570\uff1b\u6784\u9020\u51fd\u6570\u79c1\u6709\u5316\uff08\u53cb\u5143\uff09", "\n2. \u4e00\u822c\u5728\u4ec0\u4e48\u65f6\u5019\u6784\u9020\u51fd\u6570\u88ab\u58f0\u660e\u6210private\u5462\uff1f", "\nsingleton\u6a21\u5f0f\uff1b \u963b\u6b62\u67d0\u4e9b\u64cd\u4f5c\uff08\u5982\u963b\u6b62\u62f7\u8d1d\u6784\u9020\uff09", "\n3. \u4ec0\u4e48\u65f6\u5019\u7f16\u8bd1\u5668\u4f1a\u751f\u6210\u9ed8\u8ba4\u7684copy constructor\u5462\uff1f", "\n\u7528\u6237\u6ca1\u6709\u81ea\u5b9a\u4e49copy constructor\uff1b\u5728\u4ee3\u7801\u4e2d\u4f7f\u7528\u5230\u4e86copy constructor;", "\n4. \u5982\u679c\u4f60\u5df2\u7ecf\u5199\u4e86\u4e00\u4e2a\u6784\u9020\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u8fd8\u4f1a\u751f\u6210copy constructor\u5417\uff1f", "5. struct\u548cclass\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\u7b54\uff1a\u9ed8\u8ba4\u7684\u8bbf\u95ee\u7ea7\u522b\u4e0d\u540c\uff0cstruct\u662fpublic\uff0cclass\u662fprivate", "6. \u6ca1\u6709\u522b\u7684\u4e0d\u540c\u4e86\u5417\uff1f", "7. \u4e3a\u4ec0\u4e48\u8bf4\u5982\u679c\u4e00\u4e2a\u7c7b\u4f5c\u4e3a\u57fa\u7c7b\uff0c\u5219\u5b83\u7684\u6790\u6784\u51fd\u6570\u8981\u58f0\u660e\u6210virtual\u7684\uff1f", "\n\u56e0\u4e3a\uff0c\u5982\u679cdelete\u4e00\u4e2a\u57fa\u7c7b\u7684\u6307\u9488\u65f6\uff0c \u5982\u679c\u5b83\u6307\u5411\u7684\u662f\u4e00\u4e2a\u5b50\u7c7b\u7684\u5bf9\u8c61\uff0c\u90a3\u4e48\u6790\u6784\u51fd\u6570\u4e0d\u4e3a\u865a\u5c31\u4f1a\u5bfc\u81f4\u65e0\u6cd5\u8c03\u7528\u5b50\u7c7b\u6790\u6784\u51fd\u6570\uff0c\u4ece\u800c\u5bfc\u81f4\u8d44\u6e90\u6cc4\u9732\u3002 \u5f53\u7136\uff0c\u53e6\u4e00\u79cd\u505a\u6cd5\u662f\u5c06\u57fa\u7c7b\u6790\u6784\u51fd\u6570\u8bbe\u4e3aprotected.", "8. inline\u7684\u51fd\u6570\u548c#define\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n1) \u5b8f\u662f\u5728\u9884\u7f16\u8bd1\u9636\u6bb5\u7b80\u5355\u6587\u672c\u66ff\u4ee3\uff0c inline\u5728\u7f16\u8bd1\u9636\u6bb5\u5b9e\u73b0\u5c55\u5f00", "\n2)\u5b8f\u80af\u5b9a\u4f1a\u88ab\u66ff\u4ee3\uff0c\u800c\u590d\u6742\u7684inline\u51fd\u6570\u4e0d\u4f1a\u88ab\u5c55\u5f00", "\n3)\u5b8f\u5bb9\u6613\u51fa\u9519\uff08\u8fd0\u7b97\u987a\u5e8f\uff09\uff0c\u4e14\u96be\u4ee5\u88ab\u8c03\u8bd5,inline\u4e0d\u4f1a", "\n4)\u5b8f\u4e0d\u662f\u7c7b\u578b\u5b89\u5168\uff0c\u800cinline\u662f\u7c7b\u578b\u5b89\u5168\u7684\uff0c\u4f1a\u63d0\u4f9b\u53c2\u6570\u4e0e\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u68c0\u67e5", "\n\u5f53\u51fa\u73b0\u4ee5\u4e0b\u60c5\u51b5\u65f6inline\u5931\u8d25", "\n9. inline\u662f\u4ec0\u4e48\u610f\u601d\uff1f", "10. \u90a3\u4f60\u8bf4\u8bf4\u4ec0\u4e48\u65f6\u5019\u4f1a\u771f\u7684\u88abinline\uff0c\u4ec0\u4e48\u65f6\u5019\u4e0d\u4f1a\u5462\uff1f", "\n\u5f53\u51fa\u73b0\u4ee5\u4e0b\u60c5\u51b5\u65f6inline\u5931\u8d25\uff1a\u51fd\u6570size\u592a\u5927\uff1binline\u865a\u51fd\u6570\u51fd\u6570\u4e2d\u5b58\u5728\u5faa\u73af\u6216\u9012\u5f52\u51fd\u6570\uff1b\u8c03\u7528\u5176\u4ed6inline\u51fd\u6570", "\n11. \u5982\u679c\u628a\u4e00\u4e2a\u7c7b\u7684\u6210\u5458\u51fd\u6570\u5199\u5728\u7c7b\u7684\u58f0\u660e\u4e2d\u662f\u4ec0\u4e48\u610f\u601d\uff1f", "\ninline\u6b64\u51fd\u6570 \uff08inline\u4e0etemplate\u7c7b\u4f3c\uff0c \u5fc5\u987b\u5728.h\u4e2d\u5b9e\u73b0\uff09", "\n12. public\u7ee7\u627f\u548cprivate\u7ee7\u627f\u6709\u4ec0\u4e48\u67b6\u6784\u4e0a\u7684\u533a\u522b\uff1f", "\npublic\u662fis-a\u7684\u5173\u7cfb\uff0c\u7ee7\u627f\u63a5\u53e3\u4e0e\u5b9e\u73b0\uff1bprivate\u662fhas-a\u7684\u5173\u7cfb \uff0c\u53ea\u7ee7\u627f\u5b9e\u73b0", "13. \u5728\u591a\u7ee7\u627f\u7684\u65f6\u5019\uff0c\u5982\u679c\u4e00\u4e2a\u7c7b\u7ee7\u627f\u540c\u65f6\u7ee7\u627f\u81eaclass A\u548cclass B\uff0c\u800cclass A\u548c", "\nB\u4e2d\u90fd\u6709\u4e00\u4e2a\u51fd\u6570\u53ebfoo()\uff0c\u5982\u4f55\u660e\u786e\u7684\u5728\u5b50\u7c7b\u4e2d\u6307\u51faoverride\u54ea\u4e2a\u7236\u7c7b\u7684foo()\uff1f", "14. \u865a\u62df\u7ee7\u627f\u7684\u8bed\u6cd5\u662f\u4ec0\u4e48\uff1f", "\nA", "\n/ \\", "\nB C", "\n  \\ /", "\n  D", "\nclass A{};", "\nclass B: virtual public A{};", "\nclass C: virtual public A{};", "\nclass D: public B, public C{};", ".", "\n \u627e\u9519", "\n\u8bd5\u98981\uff1a", "\nCode", "\nVoid test1()", "\n{", "\nchar string[10];", "\nchar* str1=\"0123456789\";", "\nstrcpy(string, str1);", "\n}", "\u8bd5\u98982\uff1a", "\nCode", "\nVoid test2()", "\n{", "\nchar string[10], str1[10];", "\nfor(I=0; I\n{", "\nstr1[i] ='a';", "\n}", "\nstrcpy(string, str1);", "\n}", "\u8bd5\u98983\uff1a", "\nCode", "\nVoid test3(char* str1)", "\n{", "\nchar string[10];", "\nif(strlen(str1) \n{", "\nstrcpy(string, str1);", "\n}", "\n}", "\u89e3\u7b54\uff1a", "\ntest1: \u5b57\u7b26\u4e32str1\u9700\u898111\u4e2a\u5b57\u8282\u624d\u80fd\u5b58\u653e\u4e0b(\u5305\u62ec\u672b\u5c3e\u7684'\\0')\uff0c\u800cstring\u53ea\u670910\u4e2a\u5b57\u8282\u7684\u7a7a\u95f4\uff0cstrcpy\u4f1a\u5bfc\u81f4\u6570\u7ec4\u8d8a\u754c", "\ntest2: \u5982\u679c\u9762\u8bd5\u8005\u6307\u51fa\u5b57\u7b26\u6570\u7ec4str1\u4e0d\u80fd\u5728\u6570\u7ec4\u5185\u7ed3\u675f\u53ef\u4ee5\u7ed93\u5206\uff1b\u5982\u679c\u9762\u8bd5\u8005\u6307\u51fastrcpy(string, str1)\u8c03\u7528\u4f7f\u5f97\u4ecestr1\u5185\u5b58\u8d77\u590d\u5236\u5230string\u5185\u5b58\u8d77\u6240\u590d\u5236\u7684\u5b57\u8282\u6570\u5177\u6709\u4e0d\u786e\u5b9a\u6027\u53ef\u4ee5\u7ed97\u5206\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u6307\u51fa\u5e93\u51fd\u6570strcpy\u5de5\u4f5c\u65b9\u5f0f\u7684\u7ed910\u5206", "\ntest3: if(strlen(str1) \n\u5256\u6790\uff1a", "\n\u8003\u67e5\u5bf9\u57fa\u672c\u529f\u7684\u638c\u63e1\uff1a", "\n(1)\u5b57\u7b26\u4e32\u4ee5'\\0'\u7ed3\u5c3e\uff1b", "\n(2)\u5bf9\u6570\u7ec4\u8d8a\u754c\u628a\u63e1\u7684\u654f\u611f\u5ea6\uff1b", "\n(3)\u5e93\u51fd\u6570strcpy\u7684\u5de5\u4f5c\u65b9\u5f0f\uff0c\u5982\u679c\u7f16\u5199\u4e00\u4e2a\u6807\u51c6strcpy\u51fd\u6570\u7684\u603b\u5206\u503c\u4e3a10\uff0c\u4e0b\u9762\u7ed9\u51fa\u51e0\u4e2a\u4e0d\u540c\u5f97\u5206\u7684\u7b54\u6848\uff1a", "\n2\u5206", "\nvoid strcpy( char *strDest, char *strSrc )", "\n{", "\n\u3000 while( (*strDest++ = * strSrc++) != '\\0' );", "\n}", "\n4\u5206", "\nvoid strcpy( char *strDest, const char *strSrc )", "\n//\u5c06\u6e90\u5b57\u7b26\u4e32\u52a0const\uff0c\u8868\u660e\u5176\u4e3a\u8f93\u5165\u53c2\u6570\uff0c\u52a02\u5206", "\n{", "\n\u3000 while( (*strDest++ = * strSrc++) != '\\0' );", "\n}", "\n7\u5206", "\nvoid strcpy(char *strDest, const char *strSrc)", "\n{", "\n\u3000 //\u5bf9\u6e90\u5730\u5740\u548c\u76ee\u7684\u5730\u5740\u52a0\u975e0\u65ad\u8a00\uff0c\u52a03\u5206", "\n\u3000 assert( (strDest != NULL) && (strSrc != NULL) );", "\n\u3000 while( (*strDest++ = * strSrc++) != '\\0' );", "\n}", "\n10\u5206", "\n//\u4e3a\u4e86\u5b9e\u73b0\u94fe\u5f0f\u64cd\u4f5c\uff0c\u5c06\u76ee\u7684\u5730\u5740\u8fd4\u56de\uff0c\u52a03\u5206\uff01", "\nCode", "\nchar * strcpy( char *strDest, const char *strSrc )", "\n{", "\n\u3000 assert( (strDest != NULL) && (strSrc != NULL) );", "\n\u3000 char *address = strDest;", "\n\u3000 while( (*strDest++ = * strSrc++) != '\\0' );", "\n\u3000\u3000 return address;", "\n} ", "\u4ece2\u5206\u523010\u5206\u7684\u51e0\u4e2a\u7b54\u6848\u6211\u4eec\u53ef\u4ee5\u6e05\u695a\u7684\u770b\u5230\uff0c\u5c0f\u5c0f\u7684strcpy\u7adf\u7136\u6697\u85cf\u7740\u8fd9\u4e48\u591a\u7384\u673a\uff0c\u771f\u4e0d\u662f\u76d6\u7684\uff01\u9700\u8981\u591a\u4e48\u624e\u5b9e\u7684\u57fa\u672c\u529f\u624d\u80fd\u5199\u4e00\u4e2a\u5b8c\u7f8e\u7684strcpy\u554a\uff01", "\n(4)\u5bf9strlen\u7684\u638c\u63e1\uff0c\u5b83\u6ca1\u6709\u5305\u62ec\u5b57\u7b26\u4e32\u672b\u5c3e\u7684'\\0'\u3002", "\n\u8bfb\u8005\u770b\u4e86\u4e0d\u540c\u5206\u503c\u7684strcpy\u7248\u672c\uff0c\u5e94\u8be5\u4e5f\u53ef\u4ee5\u5199\u51fa\u4e00\u4e2a10\u5206\u7684strlen\u51fd\u6570\u4e86\uff0c\u5b8c\u7f8e\u7684\u7248\u672c\u4e3a\uff1a", "\nCode", "\nint strlen( const char *str ) //\u8f93\u5165\u53c2\u6570const", "\n{", "\n\u3000 assert( strt != NULL ); //\u65ad\u8a00\u5b57\u7b26\u4e32\u5730\u5740\u975e0", "\n\u3000 int len;", "\n\u3000 while( (*str++) != '\\0' )", "\n\u3000 {", "\n\u3000\u3000 len++;", "\n\u3000 }", "\n\u3000 return len;", "\n}", "\u8bd5\u98984\uff1a", "\nCode", "\nvoid GetMemory( char *p )", "\n{", "\np = (char *) malloc( 100 );", "\n}", "\nvoid Test( void )", "\n{", "\nchar *str = NULL;", "\nGetMemory( str );", "\nstrcpy( str, \"hello world\" );", "\nprintf( str );", "\n}", "\u8bd5\u98985\uff1a", "\nCode", "\nchar *GetMemory( void )", "\n{", "\nchar p[] = \"hello world\";", "\nreturn p;", "\n}", "\nvoid Test( void )", "\n{", "\nchar *str = NULL;", "\nstr = GetMemory();", "\nprintf( str );", "\n}", "\u8bd5\u98986\uff1a", "\nCode", "\nvoid GetMemory( char **p, int num )", "\n{", "\n*p = (char *) malloc( num );", "\n}", "\nvoid Test( void )", "\n{", "\nchar *str = NULL;", "\nGetMemory( &str, 100 );", "\nstrcpy( str, \"hello\" );", "\nprintf( str );", "\n}", "\u8bd5\u98987\uff1a", "\nCode", "\nvoid Test( void )", "\n{", "\nchar *str = (char *) malloc( 100 );", "\nstrcpy( str, \"hello\" );", "\nfree( str );", "\n//\u7701\u7565\u7684\u5176\u5b83\u8bed\u53e5", "\n}", "\u89e3\u7b54\uff1a", "\n\u8bd5\u98984\u4f20\u5165\u4e2dGetMemory( char *p )\u51fd\u6570\u7684\u5f62\u53c2\u4e3a\u5b57\u7b26\u4e32\u6307\u9488\uff0c\u5728\u51fd\u6570\u5185\u90e8\u4fee\u6539\u5f62\u53c2\u5e76\u4e0d\u80fd\u771f\u6b63\u7684\u6539\u53d8\u4f20\u5165\u5f62\u53c2\u7684\u503c\uff0c\u6267\u884c\u5b8cchar *str = NULL; GetMemory( str ); \u540e\u7684str\u4ecd\u7136\u4e3aNULL\uff1b", "\n\u8bd5\u98985\u4e2d char p[] = \"hello world\"; return p; \u7684p[]\u6570\u7ec4\u4e3a\u51fd\u6570\u5185\u7684\u5c40\u90e8\u81ea\u52a8\u53d8\u91cf\uff0c\u5728\u51fd\u6570\u8fd4\u56de\u540e\uff0c\u5185\u5b58\u5df2\u7ecf\u88ab\u91ca\u653e\u3002\u8fd9\u662f\u8bb8\u591a\u7a0b\u5e8f\u5458\u5e38\u72af\u7684\u9519\u8bef\uff0c\u5176\u6839\u6e90\u5728\u4e8e\u4e0d\u7406\u89e3\u53d8\u91cf\u7684\u751f\u5b58\u671f\u3002", "\n\u8bd5\u98986\u7684GetMemory\u907f\u514d\u4e86\u8bd5\u98984\u7684\u95ee\u9898\uff0c\u4f20\u5165GetMemory\u7684\u53c2\u6570\u4e3a\u5b57\u7b26\u4e32\u6307\u9488\u7684\u6307\u9488\uff0c\u4f46\u662f\u5728GetMemory\u4e2d\u6267\u884c\u7533\u8bf7\u5185\u5b58\u53ca\u8d4b\u503c\u8bed\u53e5", "\n*p = (char *) malloc( num );\u540e\u672a\u5224\u65ad\u5185\u5b58\u662f\u5426\u7533\u8bf7\u6210\u529f\uff0c\u5e94\u52a0\u4e0a\uff1a", "\nif ( *p == NULL )", "\n{", "\n\u3000 ...//\u8fdb\u884c\u7533\u8bf7\u5185\u5b58\u5931\u8d25\u5904\u7406", "\n}", "\n\u8bd5\u98987\u5b58\u5728\u4e0e\u8bd5\u98986\u540c\u6837\u7684\u95ee\u9898\uff0c\u5728\u6267\u884cchar *str = (char *) malloc(100); \u540e\u672a\u8fdb\u884c\u5185\u5b58\u662f\u5426\u7533\u8bf7\u6210\u529f\u7684\u5224\u65ad\uff1b\u53e6\u5916\uff0c\u5728free(str)\u540e\u672a\u7f6estr\u4e3a\u7a7a\uff0c\u5bfc\u81f4\u53ef\u80fd\u53d8\u6210\u4e00\u4e2a\u201c\u91ce\u201d\u6307\u9488\uff0c\u5e94\u52a0\u4e0a\uff1astr = NULL; \u8bd5\u98986\u7684Test\u51fd\u6570\u4e2d\u4e5f\u672a\u5bf9malloc\u7684\u5185\u5b58\u8fdb\u884c\u91ca\u653e\u3002", "\n\u5256\u6790\uff1a", "\n\u8bd5\u98984\uff5e7\u8003\u67e5\u9762\u8bd5\u8005\u5bf9\u5185\u5b58\u64cd\u4f5c\u7684\u7406\u89e3\u7a0b\u5ea6\uff0c\u57fa\u672c\u529f\u624e\u5b9e\u7684\u9762\u8bd5\u8005\u4e00\u822c\u90fd\u80fd\u6b63\u786e\u7684\u56de\u7b54\u5176\u4e2d50~60\u7684\u9519\u8bef\u3002\u4f46\u662f\u8981\u5b8c\u5168\u89e3\u7b54\u6b63\u786e\uff0c\u5374\u4e5f\u7edd\u975e\u6613\u4e8b\u3002", "\n\u5bf9\u5185\u5b58\u64cd\u4f5c\u7684\u8003\u67e5\u4e3b\u8981\u96c6\u4e2d\u5728\uff1a", "\n(1) \u6307\u9488\u7684\u7406\u89e3\uff1b", "\n(2) \u53d8\u91cf\u7684\u751f\u5b58\u671f\u53ca\u4f5c\u7528\u8303\u56f4\uff1b", "\n(3) \u826f\u597d\u7684\u52a8\u6001\u5185\u5b58\u7533\u8bf7\u548c\u91ca\u653e\u4e60\u60ef\u3002", "\n\u518d\u770b\u770b\u4e0b\u9762\u7684\u4e00\u6bb5\u7a0b\u5e8f\u6709\u4ec0\u4e48\u9519\u8bef\uff1a", "\nCode", "\nswap( int* p1,int* p2 )", "\n{", "\n\u3000 int *p;", "\n\u3000 *p = *p1;", "\n\u3000 *p1 = *p2;", "\n\u3000 *p2 = *p;", "\n}", "\u5728swap\u51fd\u6570\u4e2d\uff0cp\u662f\u4e00\u4e2a\u201c\u91ce\u201d\u6307\u9488\uff0c\u6709\u53ef\u80fd\u6307\u5411\u7cfb\u7edf\u533a\uff0c\u5bfc\u81f4\u7a0b\u5e8f\u8fd0\u884c\u7684\u5d29\u6e83\u3002\u5728VC++\u4e2dDEBUG\u8fd0\u884c\u65f6\u63d0\u793a\u9519\u8bef\u201cAccess Violation\u201d\u3002", "\n\u91ce\u6307\u9488\uff0c\u4e5f\u5c31\u662f\u6307\u5411\u4e0d\u53ef\u7528\u5185\u5b58\u533a\u57df\u7684\u6307\u9488\u3002\u901a\u5e38\u5bf9\u8fd9\u79cd\u6307\u9488\u8fdb\u884c\u64cd\u4f5c\u7684\u8bdd\uff0c\u5c06\u4f1a\u4f7f\u7a0b\u5e8f\u53d1\u751f\u4e0d\u53ef\u9884\u77e5\u7684\u9519\u8bef\u3002", "\n    \u201c\u91ce\u6307\u9488\u201d\u4e0d\u662fNULL\u6307\u9488\uff0c\u662f\u6307\u5411\u201c\u5783\u573e\u201d\u5185\u5b58\u7684\u6307\u9488\u3002\u4eba\u4eec\u4e00\u822c\u4e0d\u4f1a\u9519\u7528NULL\u6307\u9488\uff0c\u56e0\u4e3a\u7528if\u8bed\u53e5\u5f88\u5bb9\u6613\u5224\u65ad\u3002\u4f46\u662f\u201c\u91ce\u6307\u9488\u201d\u662f\u5f88\u5371\u9669\u7684\uff0cif\u8bed\u53e5\u5bf9\u5b83\u4e0d\u8d77\u4f5c\u7528\u3002\u91ce\u6307\u9488\u7684\u6210\u56e0\u4e3b\u8981\u6709\u4e24\u79cd\uff1a", "\u4e00\u3001\u6307\u9488\u53d8\u91cf\u6ca1\u6709\u88ab\u521d\u59cb\u5316\u3002\u4efb\u4f55\u6307\u9488\u53d8\u91cf\u521a\u88ab\u521b\u5efa\u65f6\u4e0d\u4f1a\u81ea\u52a8\u6210\u4e3aNULL\u6307\u9488\uff0c\u5b83\u7684\u7f3a\u7701\u503c\u662f\u968f\u673a\u7684\uff0c\u5b83\u4f1a\u4e71\u6307\u4e00\u6c14\u3002\u6240\u4ee5\uff0c\u6307\u9488\u53d8\u91cf\u5728\u521b\u5efa\u7684\u540c\u65f6\u5e94\u5f53\u88ab\u521d\u59cb\u5316\uff0c\u8981\u4e48\u5c06\u6307\u9488\u8bbe\u7f6e\u4e3aNULL\uff0c\u8981\u4e48\u8ba9\u5b83\u6307\u5411\u5408\u6cd5\u7684\u5185\u5b58\u3002", "\u4e8c\u3001\u6307\u9488p\u88abfree\u6216\u8005delete\u4e4b\u540e\uff0c\u6ca1\u6709\u7f6e\u4e3aNULL\uff0c\u8ba9\u4eba\u8bef\u4ee5\u4e3ap\u662f\u4e2a\u5408\u6cd5\u7684\u6307\u9488\u3002\u522b\u770bfree\u548cdelete\u7684\u540d\u5b57\u6076\u72e0\u72e0\u7684\uff08\u5c24\u5176\u662fdelete\uff09\uff0c\u5b83\u4eec\u53ea\u662f\u628a\u6307\u9488\u6240\u6307\u7684\u5185\u5b58\u7ed9\u91ca\u653e\u6389\uff0c\u4f46\u5e76\u6ca1\u6709\u628a\u6307\u9488\u672c\u8eab\u5e72\u6389\u3002\u901a\u5e38\u4f1a\u7528\u8bed\u53e5if (p != NULL)\u8fdb\u884c\u9632\u9519\u5904\u7406\u3002\u5f88\u9057\u61be\uff0c\u6b64\u65f6if\u8bed\u53e5\u8d77\u4e0d\u5230\u9632\u9519\u4f5c\u7528\uff0c\u56e0\u4e3a\u5373\u4fbfp\u4e0d\u662fNULL\u6307\u9488\uff0c\u5b83\u4e5f\u4e0d\u6307\u5411\u5408\u6cd5\u7684\u5185\u5b58\u5757\u3002\u4f8b\uff1a", "char *p = (char *) malloc(100);", "strcpy(p, \u201chello\u201d);", "free(p);        // p \u6240\u6307\u7684\u5185\u5b58\u88ab\u91ca\u653e\uff0c\u4f46\u662fp\u6240\u6307\u7684\u5730\u5740\u4ecd\u7136\u4e0d\u53d8", "if(p != NULL)   // \u6ca1\u6709\u8d77\u5230\u9632\u9519\u4f5c\u7528", "   strcpy(p, \u201cworld\u201d);  // \u51fa\u9519", "\u53e6\u5916\u4e00\u4e2a\u8981\u6ce8\u610f\u7684\u95ee\u9898\uff1a\u4e0d\u8981\u8fd4\u56de\u6307\u5411\u6808\u5185\u5b58\u7684\u6307\u9488\u6216\u5f15\u7528\uff0c\u56e0\u4e3a\u6808\u5185\u5b58\u5728\u51fd\u6570\u7ed3\u675f\u65f6\u4f1a\u88ab\u91ca\u653e\u3002", "\n\u8be5\u7a0b\u5e8f\u5e94\u8be5\u6539\u4e3a\uff1a", "\nCode", "\nswap( int* p1,int* p2 )", "\n{", "\n\u3000 int p;", "\n\u3000 p = *p1;", "\n\u3000 *p1 = *p2;", "\n\u3000 *p2 = p;", "\n} ", "3. \u5185\u529f\u9898", "\n\u8bd5\u98981\uff1a\u5206\u522b\u7ed9\u51faBOOL\uff0cint\uff0cfloat\uff0c\u6307\u9488\u53d8\u91cf \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\uff08\u5047\u8bbe\u53d8\u91cf\u540d\u4e3avar\uff09", "\n\u89e3\u7b54\uff1a", "\nBOOL\u578b\u53d8\u91cf\uff1aif(!var)", "\nint\u578b\u53d8\u91cf\uff1a if(var==0)", "\nfloat\u578b\u53d8\u91cf\uff1aconst float EPSINON = 0.00001;\u3000\u3000\u3000if ((x >= \u2013 EPSINON) && (x \n\u6307\u9488\u53d8\u91cf\uff1a\u3000if(var==NULL)", "\n\u5256\u6790\uff1a", "\n\u8003\u67e5\u5bf90\u503c\u5224\u65ad\u7684\u201c\u5185\u529f\u201d\uff0cBOOL\u578b\u53d8\u91cf\u76840\u5224\u65ad\u5b8c\u5168\u53ef\u4ee5\u5199\u6210if(var==0)\uff0c\u800cint\u578b\u53d8\u91cf\u4e5f\u53ef\u4ee5\u5199\u6210if(!var)\uff0c\u6307\u9488\u53d8\u91cf\u7684\u5224\u65ad\u4e5f\u53ef\u4ee5\u5199\u6210if(!var)\uff0c\u4e0a\u8ff0\u5199\u6cd5\u867d\u7136\u7a0b\u5e8f\u90fd\u80fd\u6b63\u786e\u8fd0\u884c\uff0c\u4f46\u662f\u672a\u80fd\u6e05\u6670\u5730\u8868\u8fbe\u7a0b\u5e8f\u7684\u610f\u601d\u3002", "\n\u4e00\u822c\u7684\uff0c\u5982\u679c\u60f3\u8ba9if\u5224\u65ad\u4e00\u4e2a\u53d8\u91cf\u7684\u201c\u771f\u201d\u3001\u201c\u5047\u201d\uff0c\u5e94\u76f4\u63a5\u4f7f\u7528if(var)\u3001if(!var)\uff0c\u8868\u660e\u5176\u4e3a\u201c\u903b\u8f91\u201d\u5224\u65ad\uff1b\u5982\u679c\u7528if\u5224\u65ad\u4e00\u4e2a\u6570\u503c\u578b\u53d8 \u91cf(short\u3001int\u3001long\u7b49)\uff0c\u5e94\u8be5\u7528if(var==0)\uff0c\u8868\u660e\u662f\u4e0e0\u8fdb\u884c\u201c\u6570\u503c\u201d\u4e0a\u7684\u6bd4\u8f83\uff1b\u800c\u5224\u65ad\u6307\u9488\u5219\u9002\u5b9c\u7528if(var==NULL)\uff0c \u8fd9\u662f\u4e00\u79cd\u5f88\u597d\u7684\u7f16\u7a0b\u4e60\u60ef\u3002", "\n\u6d6e\u70b9\u578b\u53d8\u91cf\u5e76\u4e0d\u7cbe\u786e\uff0c\u6240\u4ee5\u4e0d\u53ef\u5c06float\u53d8\u91cf\u7528\u201c==\u201d\u6216\u201c\uff01=\u201d\u4e0e\u6570\u5b57\u6bd4\u8f83\uff0c\u5e94\u8be5\u8bbe\u6cd5\u8f6c\u5316\u6210\u201c>=\u201d\u6216\u201c\n", "\u8bd5\u98982\uff1a\u4ee5\u4e0b\u4e3aWindows NT\u4e0b\u768432\u4f4dC++\u7a0b\u5e8f\uff0c\u8bf7\u8ba1\u7b97sizeof\u7684\u503c", "\nvoid Func ( char str[100] )", "\n{", "\n\u3000 sizeof( str ) = ?", "\n}", "\nvoid *p = malloc( 100 );", "\nsizeof ( p ) = ?", "\n\u89e3\u7b54\uff1a", "\nsizeof( str ) = 4", "\nsizeof ( p ) = 4", "\n\u5256\u6790\uff1a", "\nFunc ( char str[100] )\u51fd\u6570\u4e2d\u6570\u7ec4\u540d\u4f5c\u4e3a\u51fd\u6570\u5f62\u53c2\u65f6\uff0c\u5728\u51fd\u6570\u4f53\u5185\uff0c\u6570\u7ec4\u540d\u5931\u53bb\u4e86\u672c\u8eab\u7684\u5185\u6db5\uff0c\u4ec5\u4ec5\u53ea\u662f\u4e00\u4e2a\u6307\u9488\uff1b\u5728\u5931\u53bb\u5176\u5185\u6db5\u7684\u540c\u65f6\uff0c\u5b83\u8fd8\u5931\u53bb\u4e86\u5176\u5e38\u91cf\u7279\u6027\uff0c\u53ef\u4ee5\u4f5c\u81ea\u589e\u3001\u81ea\u51cf\u7b49\u64cd\u4f5c\uff0c\u53ef\u4ee5\u88ab\u4fee\u6539\u3002", "\n\u6570\u7ec4\u540d\u7684\u672c\u8d28\u5982\u4e0b\uff1a", "\n(1) \u6570\u7ec4\u540d\u6307\u4ee3\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\u5c31\u662f\u6570\u7ec4\uff1b", "\n\u4f8b\u5982\uff1a", "\nchar str[10];", "\ncout \n\u3000\u3000\u8f93\u51fa\u7ed3\u679c\u4e3a10\uff0cstr\u6307\u4ee3\u6570\u636e\u7ed3\u6784char[10]\u3002", "\n(2) \u6570\u7ec4\u540d\u53ef\u4ee5\u8f6c\u6362\u4e3a\u6307\u5411\u5176\u6307\u4ee3\u5b9e\u4f53\u7684\u6307\u9488\uff0c\u800c\u4e14\u662f\u4e00\u4e2a\u6307\u9488\u5e38\u91cf\uff0c\u4e0d\u80fd\u4f5c\u81ea\u589e\u3001\u81ea\u51cf\u7b49\u64cd\u4f5c\uff0c\u4e0d\u80fd\u88ab\u4fee\u6539\uff1b", "\nchar str[10];", "\nstr++; //\u7f16\u8bd1\u51fa\u9519\uff0c\u63d0\u793astr\u4e0d\u662f\u5de6\u503c\u3000", "\n(3) \u6570\u7ec4\u540d\u4f5c\u4e3a\u51fd\u6570\u5f62\u53c2\u65f6\uff0c\u6ca6\u4e3a\u666e\u901a\u6307\u9488\u3002", "\nWindows NT 32\u4f4d\u5e73\u53f0\u4e0b\uff0c\u6307\u9488\u7684\u957f\u5ea6\uff08\u5360\u7528\u5185\u5b58\u7684\u5927\u5c0f\uff09\u4e3a4\u5b57\u8282\uff0c\u6545sizeof( str ) \u3001sizeof ( p ) \u90fd\u4e3a4\u3002", "\u8bd5\u98983\uff1a\u5199\u4e00\u4e2a\u201c\u6807\u51c6\u201d\u5b8fMIN\uff0c\u8fd9\u4e2a\u5b8f\u8f93\u5165\u4e24\u4e2a\u53c2\u6570\u5e76\u8fd4\u56de\u8f83\u5c0f\u7684\u4e00\u4e2a\u3002\u53e6\u5916\uff0c\u5f53\u4f60\u5199\u4e0b\u9762\u7684\u4ee3\u7801\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\u4e8b\uff1f", "\nleast = MIN(*p++, b);", "\n\u89e3\u7b54\uff1a", "\n#define MIN(A,B) ((A) \nMIN(*p++, b)\u4f1a\u4ea7\u751f\u5b8f\u7684\u526f\u4f5c\u7528", "\n\u5256\u6790\uff1a", "\n\u8fd9\u4e2a\u9762\u8bd5\u9898\u4e3b\u8981\u8003\u67e5\u9762\u8bd5\u8005\u5bf9\u5b8f\u5b9a\u4e49\u7684\u4f7f\u7528\uff0c\u5b8f\u5b9a\u4e49\u53ef\u4ee5\u5b9e\u73b0\u7c7b\u4f3c\u4e8e\u51fd\u6570\u7684\u529f\u80fd\uff0c\u4f46\u662f\u5b83\u7ec8\u5f52\u4e0d\u662f\u51fd\u6570\uff0c\u800c\u5b8f\u5b9a\u4e49\u4e2d\u62ec\u5f27\u4e2d\u7684\u201c\u53c2\u6570\u201d\u4e5f\u4e0d\u662f\u771f\u7684\u53c2\u6570\uff0c\u5728\u5b8f\u5c55\u5f00\u7684\u65f6\u5019\u5bf9\u201c\u53c2\u6570\u201d\u8fdb\u884c\u7684\u662f\u4e00\u5bf9\u4e00\u7684\u66ff\u6362\u3002\u7a0b\u5e8f\u5458\u5bf9\u5b8f\u5b9a\u4e49\u7684\u4f7f\u7528\u8981\u975e\u5e38\u5c0f\u5fc3\uff0c\u7279\u522b\u8981\u6ce8\u610f\u4e24\u4e2a\u95ee\u9898\uff1a", "\n(1) \u8c28\u614e\u5730\u5c06\u5b8f\u5b9a\u4e49\u4e2d\u7684\u201c\u53c2\u6570\u201d\u548c\u6574\u4e2a\u5b8f\u7528\u7528\u62ec\u5f27\u62ec\u8d77\u6765\u3002\u6240\u4ee5\uff0c\u4e25\u683c\u5730\u8bb2\uff0c\u4e0b\u8ff0\u89e3\u7b54\uff1a", "\n#define MIN(A,B) (A) \n#define MIN(A,B) (A \n(2) \u9632\u6b62\u5b8f\u7684\u526f\u4f5c\u7528\u3002", "\n\u3000\u3000\u5b8f\u5b9a\u4e49#define MIN(A,B) ((A) \n\u8fd9\u4e2a\u89e3\u7b54\u5728\u5b8f\u5b9a\u4e49\u7684\u540e\u9762\u52a0\u201c;\u201d\uff0c\u663e\u793a\u7f16\u5199\u8005\u5bf9\u5b8f\u7684\u6982\u5ff5\u6a21\u7cca\u4e0d\u6e05\uff0c\u53ea\u80fd\u88ab\u65e0\u60c5\u5730\u52240\u5206\u5e76\u88ab\u9762\u8bd5\u5b98\u6dd8\u6c70\u3002", "\u5b8f\u7684\u4e00\u4e9b\u526f\u4f5c\u7528", "\n1\u3001\u4f18\u5148\u7ea7\u95ee\u9898", " 1) \u4f20\u5165\u53d8\u91cf\u4f18\u5148\u7ea7", "   #define MULTI(a,b) a * b", "   MULTI(1+2,3)   => 1 + 2 * 3 \u5176\u5b9e\u662f\u60f3\u8981(1 + 2) * 3", " 2) \u4f5c\u4e3a\u503c\u8fd4\u56de\u65f6\uff0c\u7c7b\u4f3c1\uff09", "   #define ADD(a,b) (a) + (b)", "   int c = ADD(a,b) * 3; => (a) + (b) * 3  \u5176\u5b9e\u662f\u60f3\u8981(a + b) * 3", " \u6240\u4ee5\uff0c\u4e00\u822c\u7684\u89c4\u5219\u662f\uff1a\u5b8f\u91cc\u9762\u53c2\u6570\u5168\u90e8\u7528\u62ec\u53f7\u62ec\u8d77\u6765\uff1b\u5982\u679c\u4f5c\u4e3a\u503c\u8fd4\u56de\uff0c\u6574\u4e2a\u8868\u8fbe\u5f0f\u4e5f\u7528\u62ec\u53f7\u62ec\u8d77\u6765\u3002", " \u6240\u4ee5\uff0c\u4e0a\u9762\u6700\u597d\u8fd9\u4e48\u5199\uff1a", "   #define MULTI(a,b) ((a) * (b))", "   #define ADD(a,b)  ((a) + (b))", "2\u3001\u5b9e\u9645\u4f7f\u7528\u53c2\u6570\u548c\u5b8f\u5185\u90e8\u53d8\u91cf\u540c\u540d", "   #define HASH(str,sz,rst) do{unsigned int n = 0; n = xxx; rst = n % sz;}while(0)", " \u8fd9\u662f\u4e00\u4e2ahash\u7684\u5b8f\u5b9e\u73b0\uff0c\u5176\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cfn\uff0c\u6839\u636estr\u8ba1\u7b97n\uff0c\u7136\u540e\u5bf9sz\u6c42\u6a21\u5e76\u628a\u8fd4\u56de\u503c\u8d4b\u7ed9\u4f20\u8fdb\u6765\u7684rst.", " \u8fd9\u4e48\u8c03\u7528\uff1a", "   int n;", "   HASH(\u201chello\u201d,7,n);", " \u4e0d\u4f1a\u8fbe\u5230\u6539\u53d8n\u7684\u6548\u679c\uff0c\u56e0\u4e3a\u5b9e\u9645\u4f7f\u7528\u53c2\u6570n\u548c\u5b8f\u5185\u90e8\u7684\u53d8\u91cfn\u540c\u540d\u3002\u5b8f\u6269\u5c55\u4e2d\u6700\u540e\u4e00\u6761\u8bed\u53e5\u662f\uff1an = n % sz;\u56e0\u4e3a\u5b8f\u5185\u90e8n\u6709\u66f4\u5c0f\u4f5c \u7528\u57df\uff0c\u5b9e\u9645\u8d4b\u503c\u7684\u662f\u5b8f\u5185\u90e8\u7684\u90a3\u4e2a\u4e34\u65f6\u53d8\u91cfn\u3002\u5916\u9762\u8c03\u7528\u7684n\u4e0d\u4f1a\u6709\u4efb\u4f55\u6539\u53d8\u3002", " \u8fd9\u4e2a\u526f\u4f5c\u7528\u6709\u4e9b\u9690\u853d\uff0c\u4e00\u822c\u7684\u89c4\u5219\u662f\uff1a\u5b8f\u5185\u90e8\u53d8\u91cf\u4f7f\u7528\u4e00\u79cd\u4e0d\u540c\u98ce\u683c\u7684\u547d\u540d\u65b9\u5f0f\u3002", " \u6bd4\u5982\uff1a", "   #define HASH(str,sz,rst)  do{unsigned int __n = 0; __n = \u2026", "3\u3001++,\u2013", "   #define MAX(a,b)  ((a) > (b) ? (a) : (b))", "   int a = 3,b = 2; ", "   int c = MAX(a++,b);", " \u6267\u884c\u770b\u770b\uff0c\u4e0d\u4f46a\u7684\u503c\u4e0d\u662f\u548c\u60f3\u8981\u7684\u4e00\u81f4\uff0c\u8fd4\u56de\u503cc\u4e5f\u4f1a\u8ba9\u4f60\u5927\u5403\u4e00\u60ca\uff0c\u54c8\u54c8\u3002(a = 5,c = 4)", " \u5728\u5b8f\u5185\u90e8\u4e00\u4e2a\u53d8\u91cf\u201d\u6267\u884c\u201d\u591a\u5c11\u6b21\uff0c\u5b83\u5c31\u81ea\u589e\u6216\u81ea\u51cf\u4e86\u591a\u5c11\u6b21\u3002", " \u6240\u4ee5\u4e00\u822c\u4f7f\u7528\u5b8f\u6700\u597d\u4e0d\u8981\u4f20\u5165\u81ea\u589e\u81ea\u51cf\u3002\u5982\u679c\u4f60\u4e00\u5b9a\u8981\u5728\u5b8f\u91cc\u6d88\u9664\u8fd9\u4e2a\u526f\u4f5c\u7528\uff0c\u53ef\u4ee5\u8fd9\u6837\uff1a", "   #define MAX(a,b)  ({int __x = (a), __y = (b);(__x > __y) ? __x : __y;})", " \u4e5f\u5c31\u662f\uff1a\u4fdd\u8bc1\u4f20\u5165\u5b8f\u7684\u53c2\u6570\u5728\u5185\u90e8\u53ea\u4f7f\u7528\u4e00\u6b21\u3002(\u6ce8\u610f\uff1a\u4f20\u5165a++\u6216++a\u90fd\u80fd\u5f97\u5230\u5404\u81ea\u6b63\u786e\u7684\u6548\u679c)", " \u8fd9\u91cc\u7684\u5185\u90e8\u53d8\u91cf__x,__y\u662f\u4e0d\u9700\u8981\u7528\u62ec\u53f7\u5305\u8d77\u6765\u7684\uff0c\u539f\u56e0\u53ef\u4ee5\u81ea\u5df1\u60f3\u60f3\u3002", " \u53e6\u5916\u5bf9\u5b8f\u4e2d\u62ec\u53f7\u7684\u4f7f\u7528\u8865\u5145\u8bf4\u660e\u4e24\u70b9\uff1a", "  \u56e0\u4e3a\u5b8f\u4e2d\u5b9a\u4e49\u4e86\u4e34\u65f6\u53d8\u91cf\uff0c\u6240\u4ee5\u8981\u7528{}\u62ec\u8d77\u6765\uff1b", "  \u56e0\u4e3a\u8981\u8fd4\u56de\u503c\uff0c\u6240\u4ee5\u5916\u9762\u8fd8\u8981\u7528()\u62ec\u8d77\u6765({}\u4e0d\u8fd4\u56de\u503c)\uff1b", " \u53e6\u5916\uff0c\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u5b9e\u9645\u4e2da,b\u4e0d\u4e00\u5b9a\u662fint\u7684\uff0c\u8fd9\u4e2a\u5b8f\u4e2d\u7684\u4e34\u65f6\u53d8\u91cf\u58f0\u660e\u4e3aint\uff0c\u4e0d\u901a\u7528\u3002", " \u6539\u8fdb\uff1a", "   #define MAX(a,b,type) ({type __x = (a), __y = (b);(__x > __y) ? __x : __y;})", " \u4f7f\u7528\uff1a", "   MAX(1,2,int);  MAX(1.1,1.2,double);", " \u662f\u4e0d\u662f\u611f\u89c9\u602a\u602a\u7684\uff0c\u6709\u70b9c++\u7684\u611f\u89c9\uff5e\uff5e \u8fd9\u6837\u7684\u4f7f\u7528\u592a\u590d\u6742\u4e86\uff0c\u800c\u4e14\u4e5f\u4f1a\u7ed9\u4ee3\u7801\u7684\u9605\u8bfb\u5e26\u6765\u96be\u5ea6\u3002", " \u6211\u89c9\u5f97\u597d\u7684\u6001\u5ea6\u662f\u591a\u4e86\u89e3\u4e9b\u5b8f\u7684\u53ef\u80fd\u7684\u526f\u4f5c\u7528\uff0c\u5728\u5b9e\u9645\u7f16\u7801\u4e2d\u9075\u5b88\u7b2c1\u30012\u6761\u89c4\u5219\uff0c\u4e0d\u8981\u5f80\u5b8f\u4e2d\u4f20\u5165\u81ea\u589e\u81ea\u51cf\u7684\u4e1c\u897f\uff0c\u5c31\u591f\u4e86\u3002\u4e0d\u8981\u628a\u8fc7\u591a\u7684\u590d\u6742\u5ea6\u5168\u6254\u7ed9\u5b8f\uff0c\u201d\u901a\u7528\u201d\u4e5f\u4e0d\u80fd\u76f2\u76ee\uff0c\u56e0\u4e3a\u6bd5\u7adf\uff1ayy\u662f\u6ca1\u6709\u6781\u9650\u7684\u3002", "\u8bd5\u98984\uff1a\u4e3a\u4ec0\u4e48\u6807\u51c6\u5934\u6587\u4ef6\u90fd\u6709\u7c7b\u4f3c\u4ee5\u4e0b\u7684\u7ed3\u6784\uff1f", "\nCode", "\n#ifndef __INCvxWorksh", "\n#define __INCvxWorksh", "\n#ifdef __cplusplus", "\nextern \u201cC\u201d {", "\n#endif", "\n/**/", "\n#ifdef __cplusplus", "\n}", "\n#endif", "\n#endif /* __INCvxWorksh */ ", "\u89e3\u7b54\uff1a", "\n\u5934\u6587\u4ef6\u4e2d\u7684\u7f16\u8bd1\u5b8f", "\n#ifndef\u3000__INCvxWorksh", "\n#define\u3000__INCvxWorksh", "\n#endif", "\n\u7684\u4f5c\u7528\u662f\u9632\u6b62\u88ab\u91cd\u590d\u5f15\u7528\u3002", "\n\u4f5c\u4e3a\u4e00\u79cd\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\uff0cC++\u652f\u6301\u51fd\u6570\u91cd\u8f7d\uff0c\u800c\u8fc7\u7a0b\u5f0f\u8bed\u8a00C\u5219\u4e0d\u652f\u6301\u3002\u51fd\u6570\u88abC++\u7f16\u8bd1\u540e\u5728symbol\u5e93\u4e2d\u7684\u540d\u5b57\u4e0eC\u8bed\u8a00\u7684\u4e0d\u540c\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u67d0\u4e2a\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a", "\nvoid foo(int x, int y);", "\n\u8be5\u51fd\u6570\u88abC\u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u5728symbol\u5e93\u4e2d\u7684\u540d\u5b57\u4e3a_foo\uff0c\u800cC++\u7f16\u8bd1\u5668\u5219\u4f1a\u4ea7\u751f\u50cf_foo_int_int\u4e4b\u7c7b\u7684\u540d\u5b57\u3002_foo_int_int\u8fd9\u6837\u7684\u540d\u5b57\u5305\u542b\u4e86\u51fd\u6570\u540d\u548c\u51fd\u6570\u53c2\u6570\u6570\u91cf\u53ca\u7c7b\u578b\u4fe1\u606f\uff0cC++\u5c31\u662f\u8003\u8fd9\u79cd\u673a\u5236\u6765\u5b9e\u73b0\u51fd\u6570\u91cd\u8f7d\u7684\u3002", "\n\u4e3a\u4e86\u5b9e\u73b0C\u548cC++\u7684\u6df7\u5408\u7f16\u7a0b\uff0cC++\u63d0\u4f9b\u4e86C\u8fde\u63a5\u4ea4\u6362\u6307\u5b9a\u7b26\u53f7extern \u201cC\u201d\u6765\u89e3\u51b3\u540d\u5b57\u5339\u914d\u95ee\u9898\uff0c\u51fd\u6570\u58f0\u660e\u524d\u52a0\u4e0aextern \u201cC\u201d\u540e\uff0c\u5219\u7f16\u8bd1\u5668\u5c31\u4f1a\u6309\u7167C\u8bed\u8a00\u7684\u65b9\u5f0f\u5c06\u8be5\u51fd\u6570\u7f16\u8bd1\u4e3a_foo\uff0c\u8fd9\u6837C\u8bed\u8a00\u4e2d\u5c31\u53ef\u4ee5\u8c03\u7528C++\u7684\u51fd\u6570\u4e86\u3002", "\u8bd5\u98985\uff1a\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u4f5c\u7528\u662f\u628a\u4e00\u4e2achar\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u5faa\u73af\u53f3\u79fbn\u4e2a\u3002\u6bd4\u5982\u539f\u6765\u662f\u201cabcdefghi\u201d\u5982\u679cn=2\uff0c\u79fb\u4f4d\u540e\u5e94\u8be5\u662f\u201chiabcdefgh\u201d", "\n\u51fd\u6570\u5934\u662f\u8fd9\u6837\u7684\uff1a", "\n//pStr\u662f\u6307\u5411\u4ee5\u2019\\0\u2032\u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32\u7684\u6307\u9488", "\n//steps\u662f\u8981\u6c42\u79fb\u52a8\u7684n", "\nvoid LoopMove ( char * pStr, int steps )", "\n{", "\n\u3000 //\u8bf7\u586b\u5145\u2026", "\n}", "\n\u89e3\u7b54\uff1a", "\n\u6b63\u786e\u89e3\u7b541\uff1a", "\nCode", "\nvoid LoopMove ( char *pStr, int steps )", "\n{", "\n\u3000 int n = strlen( pStr ) \u2013 steps;", "\n\u3000 char tmp[MAX_LEN];", "\n\u3000 strcpy ( tmp, pStr + n );", "\n\u3000 strcpy ( tmp + steps, pStr);", "\n\u3000 *( tmp + strlen ( pStr ) ) = \u2018\\0\u2032;", "\n\u3000 strcpy( pStr, tmp );", "\n} ", "\u6b63\u786e\u89e3\u7b542\uff1a", "\nCode", "\nvoid LoopMove ( char *pStr, int steps )", "\n{", "\n\u3000 int n = strlen( pStr ) \u2013 steps;", "\n\u3000 char tmp[MAX_LEN];", "\n\u3000 memcpy( tmp, pStr + n, steps );", "\n\u3000 memcpy(pStr + steps, pStr, n );", "\n\u3000 memcpy(pStr, tmp, steps );", "\n}", "\u5256\u6790\uff1a", "\n\u8fd9\u4e2a\u8bd5\u9898\u4e3b\u8981\u8003\u67e5\u9762\u8bd5\u8005\u5bf9\u6807\u51c6\u5e93\u51fd\u6570\u7684\u719f\u7ec3\u7a0b\u5ea6\uff0c\u5728\u9700\u8981\u7684\u65f6\u5019\u5f15\u7528\u5e93\u51fd\u6570\u53ef\u4ee5\u5f88\u5927\u7a0b\u5ea6\u4e0a\u7b80\u5316\u7a0b\u5e8f\u7f16\u5199\u7684\u5de5\u4f5c\u91cf\u3002", "\n\u6700\u9891\u7e41\u88ab\u4f7f\u7528\u7684\u5e93\u51fd\u6570\u5305\u62ec\uff1a", "\n(1) strcpy", "\n(2) memcpy", "\n(3) memset", "\nmemcpy", "\n\u3000\u3000\u539f\u578b\uff1aextern void *memcpy(void *dest, void *src, unsigned int count);", "\n\u3000\u3000\u7528\u6cd5\uff1a#include ", "memset", "\n\u51fd\u6570\u539f\u578b", "\n\u3000\u3000void *memset(void *s, int ch, unsigned n);", "\n\u7f16\u8f91\u672c\u6bb5", "\n\u7a0b\u5e8f\u4f8b", "\n\u3000\u3000#include ", "memset\u51fd\u6570", "\nint main(void)", "\n\u3000\u3000{", "\n\u3000\u3000char buffer[] = \u201cHello world\\n\u201d;", "\n\u3000\u3000printf(\u201cBuffer before memset: %s\\n\u201d, buffer);", "\n\u3000\u3000memset(buffer, \u2018*\u2019, strlen(buffer) );", "\n\u3000\u3000printf(\u201cBuffer after memset: %s\\n\u201d, buffer);", "\n\u3000\u3000return 0;", "\n\u3000\u3000}", "\n\u3000\u3000\u8f93\u51fa\u7ed3\u679c\uff1a", "\n\u3000\u3000Buffer before memset: Hello world", "\n\u3000\u3000Buffer after memset: ***********", "\n\u3000\u3000\u7f16\u8bd1\u5e73\u53f0\uff1a", "\n\u3000\u3000Microsoft Visual C++ 6.0", "\n\u3000\u3000\u4e5f\u4e0d\u4e00\u5b9a\u5c31\u662f\u628a\u5185\u5bb9\u5168\u90e8\u8bbe\u7f6e\u4e3ach\u6307\u5b9a\u7684ASCII\u503c\uff0c\u800c\u4e14\u8be5\u5904\u7684ch\u53ef\u4e3aint\u6216\u8005\u5176\u4ed6\u7c7b\u578b\uff0c\u5e76\u4e0d\u4e00\u5b9a\u8981\u662fchar\u7c7b\u578b\u3002\u4f8b\u5982\u4e0b\u9762\u8fd9\u6837\uff1a", "\n\u3000\u3000int array[5] = {1,4,3,5,2};", "\n\u3000\u3000for(int i = 0; i \n\u3000\u3000cout\n\u3000\u3000cout\n\u3000\u3000memset(array,0,5*sizeof(int));", "\n\u3000\u3000for(int k = 0; k \n\u3000\u3000cout\n\u3000\u3000cout\n\u3000\u3000\u8f93\u51fa\u7684\u7ed3\u679c\u5c31\u662f\uff1a", "\n\u3000\u30001 4 3 5 2", "\n\u3000\u30000 0 0 0 0", "\n\u3000\u3000\u540e\u9762\u7684\u8868\u5927\u5c0f\u7684\u53c2\u6570\u662f\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff0c\u6240\u4ee5\uff0c\u5bf9\u4e8eint\u6216\u5176\u4ed6\u7684\u5c31\u5e76\u4e0d\u662f\u90fd\u4e58\u9ed8\u8ba4\u76841\uff08\u5b57\u7b26\u578b\uff09\u4e86\u3002\u800c\u4e14\u4e0d\u540c\u7684\u673a\u5668\u4e0aint\u7684\u5927\u5c0f\u4e5f\u53ef\u80fd\u4e0d\u540c\uff0c\u6240\u4ee5\u6700\u597d\u7528sizeof\uff08\uff09\u3002", "\n\u3000\u3000", "\n\u3000\u3000\u8981\u6ce8\u610f\u7684\u662f\uff0cmemset\u662f\u5bf9\u5b57\u8282\u8fdb\u884c\u64cd\u4f5c\uff0c", "\n\u3000\u3000\u6240\u4ee5\u4e0a\u8ff0\u7a0b\u5e8f\u5982\u679c\u6539\u4e3a", "\n\u3000\u3000int array[5] = {1,4,3,5,2};", "\n\u3000\u3000for(int i = 0; i \n\u3000\u3000cout\n\u3000\u3000cout\n\u3000\u3000memset(array,1,5*sizeof(int));// \u6ce8\u610f \u8fd9\u91cc\u4e0e\u4e0a\u9762\u7684\u7a0b\u5e8f\u4e0d\u540c", "\n\u3000\u3000for(int k = 0; k \n\u3000\u3000cout\n\u3000\u3000cout\n\u3000\u3000\u8f93\u51fa\u7684\u7ed3\u679c\u5c31\u662f\uff1a", "\n\u3000\u30001 4 3 5 2", "\n\u3000\u300016843009 16843009 16843009 16843009 16843009", "\n\u3000\u3000\u4e3a\u4ec0\u4e48\u5462\uff1f", "\n\u3000\u3000\u56e0\u4e3amemset\u662f\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u5c31\u662f\u5bf9array\u6307\u5411\u7684\u5185\u5b58\u76845\u4e2a\u5b57\u8282\u8fdb\u884c\u8d4b\u503c\uff0c\u6bcf\u4e2a\u90fd\u7528ASCII\u4e3a1\u7684\u5b57\u7b26\u53bb\u586b\u5145\uff0c\u8f6c\u4e3a\u4e8c\u8fdb\u5236\u540e\uff0c1\u5c31\u662f00000001,\u5360\u4e00\u4e2a\u5b57\u8282\u3002\u4e00\u4e2aINT\u5143\u7d20\u662f4\u5b57\u8282\uff0c\u5408\u4e00\u8d77\u5c31\u662f00000001000000010000000100000001\uff0c\u5c31\u7b49\u4e8e16843009\uff0c\u5c31\u5b8c\u6210\u4e86\u5bf9\u4e00\u4e2aINT\u5143\u7d20\u7684\u8d4b\u503c\u4e86\u3002", "\n\u3000\u3000\u6240\u4ee5\u7528memset\u5bf9\u975e\u5b57\u7b26\u578b\u6570\u7ec4\u8d4b\u521d\u503c\u662f\u4e0d\u53ef\u53d6\u7684\uff01", "\n\u3000\u3000\u4f8b\u5982\u6709\u4e00\u4e2a\u7ed3\u6784\u4f53Some x\uff0c\u53ef\u4ee5\u8fd9\u6837\u6e05\u96f6\uff1a", "\n\u3000\u3000memset( &x, 0, sizeof(Some) );", "\n\u3000\u3000\u5982\u679c\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\u7684\u6570\u7ec4Some x[10]\uff0c\u53ef\u4ee5\u8fd9\u6837\uff1a", "\n\u3000\u3000memset( x, 0, sizeof(Some)*10 );", "\n\u7f16\u8f91\u672c\u6bb5", "\nmemset\u51fd\u6570\u8be6\u7ec6\u8bf4\u660e", "\n\u3000\u30001\u3002void *memset(void *s,int c,size_t n)", "\n\u3000\u3000\u603b\u7684\u4f5c\u7528\uff1a\u5c06\u5df2\u5f00\u8f9f\u5185\u5b58\u7a7a\u95f4 s \u7684\u9996 n \u4e2a\u5b57\u8282\u7684\u503c\u8bbe\u4e3a\u503c c\u3002", "\n\u3000\u30002\u3002\u4f8b\u5b50", "\n\u3000\u3000main(){", "\n\u3000\u3000char *s=\"Golden Global View\";", "\n\u3000\u3000clrscr();", "\n\u3000\u3000memset(s,'G',6);//\u8c8c\u4f3c\u8fd9\u91cc\u6709\u70b9\u95ee\u9898// \u5355\u6b65\u8fd0\u884c\u5230\u8fd9\u91cc\u4f1a\u63d0\u793a\u5185\u5b58\u8bbf\u95ee\u51b2\u7a81", "\n\u3000\u3000printf(\"%s\",s);", "\n\u3000\u3000getchar();", "\n\u3000\u3000return 0;", "\n\u3000\u3000}\u3000", "\n\u3000\u3000\u3010\u5e94\u8be5\u662f\u6ca1\u6709\u95ee\u9898\u7684\uff0c\u5b57\u7b26\u4e32\u6307\u9488\u4e00\u6837\u53ef\u4ee5\uff0c\u5e76\u4e0d\u662f\u53ea\u8bfb\u5185\u5b58\uff0c\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\u3011", "\n\u3000\u30003\u3002memset() \u51fd\u6570\u5e38\u7528\u4e8e\u5185\u5b58\u7a7a\u95f4\u521d\u59cb\u5316\u3002\u5982\uff1a", "\n\u3000\u3000char str[100];", "\n\u3000\u3000memset(str,0,100);", "\n\u3000\u30004\u3002memset()\u7684\u6df1\u523b\u5185\u6db5\uff1a\u7528\u6765\u5bf9\u4e00\u6bb5\u5185\u5b58\u7a7a\u95f4\u5168\u90e8\u8bbe\u7f6e\u4e3a\u67d0\u4e2a\u5b57\u7b26\uff0c\u4e00\u822c\u7528\u5728\u5bf9\u5b9a\u4e49\u7684\u5b57\u7b26\u4e32\u8fdb\u884c\u521d\u59cb\u5316\u4e3a\u2018memset(a, '\\0', sizeof(a));", "\n\u3000\u3000memcpy\u7528\u6765\u505a\u5185\u5b58\u62f7\u8d1d\uff0c\u4f60\u53ef\u4ee5\u62ff\u5b83\u62f7\u8d1d\u4efb\u4f55\u6570\u636e\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u53ef\u4ee5\u6307\u5b9a\u62f7\u8d1d\u7684\u6570\u636e\u957f\u5ea6\uff1b\u4f8b\uff1a", "\n\u3000\u3000char a[100], b[50];", "\n\u3000\u3000memcpy(b, a, sizeof(b)); //\u6ce8\u610f\u5982\u7528sizeof(a)\uff0c\u4f1a\u9020\u6210b\u7684\u5185\u5b58\u5730\u5740\u6ea2\u51fa\u3002", "\n\u3000\u3000strcpy\u5c31\u53ea\u80fd\u62f7\u8d1d\u5b57\u7b26\u4e32\u4e86\uff0c\u5b83\u9047\u5230'\\0'\u5c31\u7ed3\u675f\u62f7\u8d1d\uff1b\u4f8b\uff1a", "\n\u3000\u3000char a[100], b[50];", "\n\u3000\u3000strcpy(a,b);", "\n\u3000\u3000\u5982\u7528strcpy(b,a)\uff0c\u8981\u6ce8\u610fa\u4e2d\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\uff08\u7b2c\u4e00\u4e2a\u2018\\0\u2019\u4e4b\u524d\uff09\u662f\u5426\u8d85\u8fc750\u4f4d\uff0c\u5982\u8d85\u8fc7\uff0c\u5219\u4f1a\u9020\u6210b\u7684\u5185\u5b58\u5730\u5740\u6ea2\u51fa\u3002", "\n\u3000\u30005.\u8865\u5145\uff1a\u67d0\u4eba\u7684\u4e00\u70b9\u5fc3\u5f97", "\n\u3000\u3000memset\u53ef\u4ee5\u65b9\u4fbf\u7684\u6e05\u7a7a\u4e00\u4e2a\u7ed3\u6784\u7c7b\u578b\u7684\u53d8\u91cf\u6216\u6570\u7ec4\u3002", "\n\u3000\u3000\u5982\uff1a", "\n\u3000\u3000struct sample_struct", "\n\u3000\u3000{", "\n\u3000\u3000char csName[16];", "\n\u3000\u3000int iSeq;", "\n\u3000\u3000int iType;", "\n\u3000\u3000};", "\n\u3000\u3000\u5bf9\u4e8e\u53d8\u91cf", "\n\u3000\u3000struct sample_strcut stTest;", "\n\u3000\u3000\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6e05\u7a7astTest\u7684\u65b9\u6cd5\uff1a", "\n\u3000\u3000stTest.csName[0]='\\0';", "\n\u3000\u3000stTest.iSeq=0;", "\n\u3000\u3000stTest.iType=0;", "\n\u3000\u3000\u7528memset\u5c31\u975e\u5e38\u65b9\u4fbf\uff1a", "\n\u3000\u3000memset(&stTest,0,sizeof(struct sample_struct));", "\n\u3000\u3000\u5982\u679c\u662f\u6570\u7ec4\uff1a", "\n\u3000\u3000struct sample_struct TEST[10];", "\n\u3000\u3000\u5219", "\n\u3000\u3000memset(TEST,0,sizeof(struct sample_struct)*10); ", "\u8bd5\u98986\uff1a\u5df2\u77e5WAV\u6587\u4ef6\u683c\u5f0f\u5982\u4e0b\u8868\uff0c\u6253\u5f00\u4e00\u4e2aWAV\u6587\u4ef6\uff0c\u4ee5\u9002\u5f53\u7684\u6570\u636e\u7ed3\u6784\u7ec4\u7ec7WAV\u6587\u4ef6\u5934\u5e76\u89e3\u6790WAV\u683c\u5f0f\u7684\u5404\u9879\u4fe1\u606f\u3002", "\nWAVE\u6587\u4ef6\u683c\u5f0f\u8bf4\u660e\u8868", "\n\u504f\u79fb\u5730\u5740 \u5b57\u8282\u6570 \u6570\u636e\u7c7b\u578b \u5185 \u5bb9", "\n\u6587\u4ef6\u5934", "\n00H 4 Char \"RIFF\"\u6807\u5fd7", "\n04H 4 int32 \u6587\u4ef6\u957f\u5ea6", "\n08H 4 Char \"WAVE\"\u6807\u5fd7", "\n0CH 4 Char \"fmt\"\u6807\u5fd7", "\n10H 4 \u8fc7\u6e21\u5b57\u8282\uff08\u4e0d\u5b9a\uff09", "\n14H 2 int16 \u683c\u5f0f\u7c7b\u522b", "\n16H 2 int16 \u901a\u9053\u6570", "\n18H 2 int16 \u91c7\u6837\u7387\uff08\u6bcf\u79d2\u6837\u672c\u6570\uff09\uff0c\u8868\u793a\u6bcf\u4e2a\u901a\u9053\u7684\u64ad\u653e\u901f\u5ea6", "\n1CH 4 int32 \u6ce2\u5f62\u97f3\u9891\u6570\u636e\u4f20\u9001\u901f\u7387", "\n20H 2 int16 \u6570\u636e\u5757\u7684\u8c03\u6574\u6570\uff08\u6309\u5b57\u8282\u7b97\u7684\uff09", "\n22H 2 \u6bcf\u6837\u672c\u7684\u6570\u636e\u4f4d\u6570", "\n24H 4 Char \u6570\u636e\u6807\u8bb0\u7b26\uff02data\uff02", "\n28H 4 int32 \u8bed\u97f3\u6570\u636e\u7684\u957f\u5ea6", "\n\u89e3\u7b54\uff1a", "\n\u5c06WAV\u6587\u4ef6\u683c\u5f0f\u5b9a\u4e49\u4e3a\u7ed3\u6784\u4f53WAVEFORMAT\uff1a", "\nCode", "\ntypedef struct tagWaveFormat", "\n{", "\n\u3000 char cRiffFlag[4];", "\n\u3000 UIN32 nFileLen;", "\n\u3000 char cWaveFlag[4];", "\n\u3000 char cFmtFlag[4];", "\n\u3000 char cTransition[4];", "\n\u3000 UIN16 nFormatTag ;", "\n\u3000 UIN16 nChannels;", "\n\u3000 UIN16 nSamplesPerSec;", "\n\u3000 UIN32 nAvgBytesperSec;", "\n\u3000 UIN16 nBlockAlign;", "\n\u3000 UIN16 nBitNumPerSample;", "\n\u3000 char cDataFlag[4];", "\n\u3000 UIN16 nAudioLength;", "\n} WAVEFORMAT; ", "\u8bd5\u98987\uff1a\u7f16\u5199\u7c7bString\u7684\u6784\u9020\u51fd\u6570\u3001\u6790\u6784\u51fd\u6570\u548c\u8d4b\u503c\u51fd\u6570\uff0c\u5df2\u77e5\u7c7bString\u7684\u539f\u578b\u4e3a\uff1a", "\nCode", "\n#include ", "String::String(const char *str)", "\n{", "\n    if(str == NULL){", "\n        charArray=new char[1];", "\n        charArray[0]='\\0';", "\n    }else{", "\n        charArray=new char[strlen(str)+1];", "\n        strcpy(charArray,str);", "\n    }", "\n}", "\nString::String(const String &str)", "\n{", "\n    charArray = new char[strlen(str.charArray)+1];", "\n    strcpy(charArray,str.charArray);", "\n}", "\nString::~String()", "\n{", "\n    delete [] charArray;", "\n}", "\nString String::operator+(const String &str)", "\n{", "\n    String res;", "\n    delete [] res.charArray;//\u91ca\u653e\u539f\u6709\u7a7a\u95f4", "\n    res.charArray = new char[strlen(charArray)+strlen(str.charArray)+1];", "\n    strcpy(res.charArray,charArray);", "\n    strcpy(res.charArray+strlen(charArray),str.charArray);", "\n    return res;", "\n}", "\nString & String::operator=(const String &str)", "\n{", "\n    if(charArray == str.charArray)", "\n        return *this;", "\n    delete [] charArray;", "\n    charArray = new char[strlen(str.charArray)+1];", "\n    strcpy(charArray,str.charArray);", "\n    return *this;", "\n}", "\nbool String::operator==(const String &str)", "\n{", "\n    return strcmp(charArray,str.charArray) == 0;", "\n}", "\nint String::Length()", "\n{", "\n    return strlen(charArray);", "\n}", "\nostream & operator\n{", "\n    o\n    return o;", "\n}   ", "String String::SubStr(int start, int end)", "\n{", "\n    String res;", "\n    delete [] res.charArray;//\u91ca\u653e\u539f\u6709\u5185\u5b58", "\n    res.charArray = new char[end-start+1];//\u91cd\u65b0\u7533\u8bf7\u5185\u5b58", "\n    for(int i=0; i+start", "\n        res.charArray[i]=charArray[start+i];", "\n    }", "\n    res.charArray[end-start] = '\\0';", "\n    return res;", "\n}      ", "void main()", "\n{", "\n    String s = \"abcd\";", "\n    String t = \"abcd\";", "\n    cout\n", "    String s2 = \"Hello \";", "\n    String s3 = \"China!\";", "\n    cout\n    cout\n}\u5256\u6790\uff1a", "\n\u80fd\u591f\u51c6\u786e\u65e0\u8bef\u5730\u7f16\u5199\u51faString\u7c7b\u7684\u6784\u9020\u51fd\u6570\u3001\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3001\u8d4b\u503c\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u7684\u9762\u8bd5\u8005\u81f3\u5c11\u5df2\u7ecf\u5177\u5907\u4e86C++\u57fa\u672c\u529f\u768460%\u4ee5\u4e0a\uff01", "\n\u5728\u8fd9\u4e2a\u7c7b\u4e2d\u5305\u62ec\u4e86\u6307\u9488\u7c7b\u6210\u5458\u53d8\u91cfm_data\uff0c\u5f53\u7c7b\u4e2d\u5305\u62ec\u6307\u9488\u7c7b\u6210\u5458\u53d8\u91cf\u65f6\uff0c\u4e00\u5b9a\u8981\u91cd\u8f7d\u5176\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3001\u8d4b\u503c\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\uff0c\u8fd9\u65e2\u662f\u5bf9C++\u7a0b\u5e8f\u5458\u7684\u57fa\u672c\u8981\u6c42\uff0c\u4e5f\u662f\u300aEffective\u3000C++\u300b\u4e2d\u7279\u522b\u5f3a\u8c03\u7684\u6761\u6b3e\u3002\u4ed4\u7ec6\u5b66\u4e60\u8fd9\u4e2a\u7c7b\uff0c\u7279\u522b\u6ce8\u610f\u52a0\u6ce8\u91ca\u7684\u5f97\u5206\u70b9\u548c\u52a0\u5206\u70b9\u7684\u610f\u4e49\uff0c\u8fd9\u6837\u5c31\u5177\u5907\u4e8660%\u4ee5\u4e0a\u7684C++\u57fa\u672c\u529f\uff01", "\u8bd5\u98988\uff1a\u8bf7\u8bf4\u51fastatic\u548cconst\u5173\u952e\u5b57\u5c3d\u53ef\u80fd\u591a\u7684\u4f5c\u7528", "\n\u89e3\u7b54\uff1a", "\nstatic\u5173\u952e\u5b57\u81f3\u5c11\u6709\u4e0b\u5217n\u4e2a\u4f5c\u7528\uff1a", "\n(1) \u51fd\u6570\u4f53\u5185static\u53d8\u91cf\u7684\u4f5c\u7528\u8303\u56f4\u4e3a\u8be5\u51fd\u6570\u4f53\uff0c\u4e0d\u540c\u4e8eauto\u53d8\u91cf\uff0c\u8be5\u53d8\u91cf\u7684\u5185\u5b58\u53ea\u88ab\u5206\u914d\u4e00\u6b21\uff0c\u56e0\u6b64\u5176\u503c\u5728\u4e0b\u6b21\u8c03\u7528\u65f6\u4ecd\u7ef4\u6301\u4e0a\u6b21\u7684\u503c\uff1b", "\n(2) \u5728\u6a21\u5757\u5185\u7684static\u5168\u5c40\u53d8\u91cf\u53ef\u4ee5\u88ab\u6a21\u5757\u5185\u6240\u7528\u51fd\u6570\u8bbf\u95ee\uff0c\u4f46\u4e0d\u80fd\u88ab\u6a21\u5757\u5916\u5176\u5b83\u51fd\u6570\u8bbf\u95ee\uff1b", "\n(3) \u5728\u6a21\u5757\u5185\u7684static\u51fd\u6570\u53ea\u53ef\u88ab\u8fd9\u4e00\u6a21\u5757\u5185\u7684\u5176\u5b83\u51fd\u6570\u8c03\u7528\uff0c\u8fd9\u4e2a\u51fd\u6570\u7684\u4f7f\u7528\u8303\u56f4\u88ab\u9650\u5236\u5728\u58f0\u660e\u5b83\u7684\u6a21\u5757\u5185\uff1b", "\n(4) \u5728\u7c7b\u4e2d\u7684static\u6210\u5458\u53d8\u91cf\u5c5e\u4e8e\u6574\u4e2a\u7c7b\u6240\u62e5\u6709\uff0c\u5bf9\u7c7b\u7684\u6240\u6709\u5bf9\u8c61\u53ea\u6709\u4e00\u4efd\u62f7\u8d1d\uff1b", "\n(5) \u5728\u7c7b\u4e2d\u7684static\u6210\u5458\u51fd\u6570\u5c5e\u4e8e\u6574\u4e2a\u7c7b\u6240\u62e5\u6709\uff0c\u8fd9\u4e2a\u51fd\u6570\u4e0d\u63a5\u6536this\u6307\u9488\uff0c\u56e0\u800c\u53ea\u80fd\u8bbf\u95ee\u7c7b\u7684static\u6210\u5458\u53d8\u91cf\u3002", "\nconst\u5173\u952e\u5b57\u81f3\u5c11\u6709\u4e0b\u5217n\u4e2a\u4f5c\u7528\uff1a", "\n(1) \u6b32\u963b\u6b62\u4e00\u4e2a\u53d8\u91cf\u88ab\u6539\u53d8\uff0c\u53ef\u4ee5\u4f7f\u7528const\u5173\u952e\u5b57\u3002\u5728\u5b9a\u4e49\u8be5const\u53d8\u91cf\u65f6\uff0c\u901a\u5e38\u9700\u8981\u5bf9\u5b83\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u56e0\u4e3a\u4ee5\u540e\u5c31\u6ca1\u6709\u673a\u4f1a\u518d\u53bb\u6539\u53d8\u5b83\u4e86", "\n(2) \u5bf9\u6307\u9488\u6765\u8bf4\uff0c\u53ef\u4ee5\u6307\u5b9a\u6307\u9488\u672c\u8eab\u4e3aconst\uff0c\u4e5f\u53ef\u4ee5\u6307\u5b9a\u6307\u9488\u6240\u6307\u7684\u6570\u636e\u4e3aconst\uff0c\u6216\u4e8c\u8005\u540c\u65f6\u6307\u5b9a\u4e3aconst\uff1b", "\n(3) \u5728\u4e00\u4e2a\u51fd\u6570\u58f0\u660e\u4e2d\uff0cconst\u53ef\u4ee5\u4fee\u9970\u5f62\u53c2\uff0c\u8868\u660e\u5b83\u662f\u4e00\u4e2a\u8f93\u5165\u53c2\u6570\uff0c\u5728\u51fd\u6570\u5185\u90e8\u4e0d\u80fd\u6539\u53d8\u5176\u503c\uff1b", "\n(4) \u5bf9\u4e8e\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u82e5\u6307\u5b9a\u5176\u4e3aconst\u7c7b\u578b\uff0c\u5219\u8868\u660e\u5176\u662f\u4e00\u4e2a\u5e38\u51fd\u6570\uff0c\u4e0d\u80fd\u4fee\u6539\u7c7b\u7684\u6210\u5458\u53d8\u91cf\uff1b", "\n(5) \u5bf9\u4e8e\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u6709\u65f6\u5019\u5fc5\u987b\u6307\u5b9a\u5176\u8fd4\u56de\u503c\u4e3aconst\u7c7b\u578b\uff0c\u4ee5\u4f7f\u5f97\u5176\u8fd4\u56de\u503c\u4e0d\u4e3a\u201c\u5de6\u503c\u201d\u3002\u4f8b\u5982\uff1a", "\nconst classA operator*(const classA& a1,const classA& a2);", "\noperator*\u7684\u8fd4\u56de\u7ed3\u679c\u5fc5\u987b\u662f\u4e00\u4e2aconst\u5bf9\u8c61\u3002\u5982\u679c\u4e0d\u662f\uff0c\u8fd9\u6837\u7684\u53d8\u6001\u4ee3\u7801\u4e5f\u4e0d\u4f1a\u7f16\u8bd1\u51fa\u9519\uff1a", "\nclassA a, b, c;", "\n(a * b) = c; // \u5bf9a*b\u7684\u7ed3\u679c\u8d4b\u503c", "\n\u64cd\u4f5c(a * b) = c\u663e\u7136\u4e0d\u7b26\u5408\u7f16\u7a0b\u8005\u7684\u521d\u8877\uff0c\u4e5f\u6ca1\u6709\u4efb\u4f55\u610f\u4e49\u3002", "\u4e1c\u8f6f\u7ecf\u5178\u7b14\u8bd5\u53ca\u53c2\u8003\u7b54\u6848", "\n1.static\u6709\u4ec0\u4e48\u7528\u9014\uff1f\uff08\u8bf7\u81f3\u5c11\u8bf4\u660e\u4e24\u79cd\uff09", "\n1)\u5728\u51fd\u6570\u4f53\uff0c\u4e00\u4e2a\u88ab\u58f0\u660e\u4e3a\u9759\u6001\u7684\u53d8\u91cf\u5728\u8fd9\u4e00\u51fd\u6570\u88ab\u8c03\u7528\u8fc7\u7a0b\u4e2d\u7ef4\u6301\u5176\u503c\u4e0d\u53d8\u3002", "\n2) \u5728\u6a21\u5757\u5185\uff08\u4f46\u5728\u51fd\u6570\u4f53\u5916\uff09\uff0c\u4e00\u4e2a\u88ab\u58f0\u660e\u4e3a\u9759\u6001\u7684\u53d8\u91cf\u53ef\u4ee5\u88ab\u6a21\u5757\u5185\u6240\u7528\u51fd\u6570\u8bbf\u95ee\uff0c\u4f46\u4e0d\u80fd\u88ab\u6a21\u5757\u5916\u5176\u5b83\u51fd\u6570\u8bbf\u95ee\u3002\u5b83\u662f\u4e00\u4e2a\u672c\u5730\u7684\u5168\u5c40\u53d8\u91cf\u3002", "\n3) \u5728\u6a21\u5757\u5185\uff0c\u4e00\u4e2a\u88ab\u58f0\u660e\u4e3a\u9759\u6001\u7684\u51fd\u6570\u53ea\u53ef\u88ab\u8fd9\u4e00\u6a21\u5757\u5185\u7684\u5176\u5b83\u51fd\u6570\u8c03\u7528\u3002\u90a3\u5c31\u662f\uff0c\u8fd9\u4e2a\u51fd\u6570\u88ab\u9650\u5236\u5728\u58f0\u660e\u5b83\u7684\u6a21\u5757\u7684\u672c\u5730\u8303\u56f4\u5185\u4f7f\u7528", "\n2.\u5f15\u7528\u4e0e\u6307\u9488\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n1) \u5f15\u7528\u5fc5\u987b\u88ab\u521d\u59cb\u5316\uff0c\u6307\u9488\u4e0d\u5fc5\u3002", "\n2) \u5f15\u7528\u521d\u59cb\u5316\u4ee5\u540e\u4e0d\u80fd\u88ab\u6539\u53d8\uff0c\u6307\u9488\u53ef\u4ee5\u6539\u53d8\u6240\u6307\u7684\u5bf9\u8c61\u3002", "\n3) \u4e0d\u5b58\u5728\u6307\u5411\u7a7a\u503c\u7684\u5f15\u7528\uff0c\u4f46\u662f\u5b58\u5728\u6307\u5411\u7a7a\u503c\u7684\u6307\u9488\u3002", "\n3.\u63cf\u8ff0\u5b9e\u65f6\u7cfb\u7edf\u7684\u57fa\u672c\u7279\u6027", "\n\u5728\u7279\u5b9a\u65f6\u95f4\u5185\u5b8c\u6210\u7279\u5b9a\u7684\u4efb\u52a1\uff0c\u5b9e\u65f6\u6027\u4e0e\u53ef\u9760\u6027\u3002", "\n4.\u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u5728\u5185\u5b58\u4e2d\u662f\u5426\u6709\u533a\u522b\uff1f\u5982\u679c\u6709\uff0c\u662f\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u5168\u5c40\u53d8\u91cf\u50a8\u5b58\u5728\u9759\u6001\u6570\u636e\u5e93\uff0c\u5c40\u90e8\u53d8\u91cf\u5728\u5806\u6808\u3002", "\n5.\u4ec0\u4e48\u662f\u5e73\u8861\u4e8c\u53c9\u6811\uff1f", "\n\u5de6\u53f3\u5b50\u6811\u90fd\u662f\u5e73\u8861\u4e8c\u53c9\u6811 \u4e14\u5de6\u53f3\u5b50\u6811\u7684\u6df1\u5ea6\u5dee\u503c\u7684\u7edd\u5bf9\u503c\u4e0d\u5927\u4e8e1\u3002", "\n6.\u5806\u6808\u6ea2\u51fa\u4e00\u822c\u662f\u7531\u4ec0\u4e48\u539f\u56e0\u5bfc\u81f4\u7684\uff1f", "\n\u6ca1\u6709\u56de\u6536\u5783\u573e\u8d44\u6e90\u3002", "\n7.\u4ec0\u4e48\u51fd\u6570\u4e0d\u80fd\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff1f", "\nconstructor\u51fd\u6570\u4e0d\u80fd\u58f0\u660e\u4e3a\u865a\u51fd\u6570\u3002", "\n8.\u5192\u6ce1\u6392\u5e8f\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u4ec0\u4e48\uff1f", "\n\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(n^2)\u3002", "\n9.\u5199\u51fafloat x \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684if\u8bed\u53e5\u3002", "\nif(x>0.000001&&x\n10.Internet\u91c7\u7528\u54ea\u79cd\u7f51\u7edc\u534f\u8bae\uff1f\u8be5\u534f\u8bae\u7684\u4e3b\u8981\u5c42\u6b21\u7ed3\u6784\uff1f", "\nTcp/Ip\u534f\u8bae", "\n\u4e3b\u8981\u5c42\u6b21\u7ed3\u6784\u4e3a\uff1a \u5e94\u7528\u5c42/\u4f20\u8f93\u5c42/\u7f51\u7edc\u5c42/\u6570\u636e\u94fe\u8def\u5c42/\u7269\u7406\u5c42\u3002", "\n11.Internet\u7269\u7406\u5730\u5740\u548cIP\u5730\u5740\u8f6c\u6362\u91c7\u7528\u4ec0\u4e48\u534f\u8bae\uff1f", "\nARP (Address Resolution Protocol)\uff08\u5730\u5740\u89e3\u6790\u5354\u8b70\uff09", "\n12.IP\u5730\u5740\u7684\u7f16\u7801\u5206\u4e3a\u54ea\u4fe9\u90e8\u5206\uff1f", "\nIP\u5730\u5740\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff0c\u7f51\u7edc\u53f7\u548c\u4e3b\u673a\u53f7\u3002\u4e0d\u8fc7\u662f\u8981\u548c\u201c\u5b50\u7f51\u63a9\u7801\u201d\u6309\u4f4d\u4e0e\u4e0a\u4e4b\u540e\u624d\u80fd\u533a\u5206\u54ea\u4e9b\u662f\u7f51\u7edc\u4f4d\u54ea\u4e9b\u662f\u4e3b\u673a\u4f4d\u3002", "\n13.\u7528\u6237\u8f93\u5165M,N\u503c\uff0c\u4ece1\u81f3N\u5f00\u59cb\u987a\u5e8f\u5faa\u73af\u6570\u6570\uff0c\u6bcf\u6570\u5230M\u8f93\u51fa\u8be5\u6570\u503c\uff0c\u76f4\u81f3\u5168\u90e8\u8f93\u51fa\u3002\u5199\u51faC\u7a0b\u5e8f\u3002", "\n\u5faa\u73af\u94fe\u8868\uff0c\u7528\u53d6\u4f59\u64cd\u4f5c\u505a", "14.\u4e0d\u80fd\u505aswitch()\u7684\u53c2\u6570\u7c7b\u578b\u662f\uff1a", "\nswitch\u7684\u53c2\u6570\u4e0d\u80fd\u4e3a\u5b9e\u578b\u3002", "\n1.\u5199\u51fa\u5224\u65adABCD\u56db\u4e2a\u8868\u8fbe\u5f0f\u7684\u662f\u5426\u6b63\u786e, \u82e5\u6b63\u786e, \u5199\u51fa\u7ecf\u8fc7\u8868\u8fbe\u5f0f\u4e2d a\u7684\u503c(3\u5206)", "\nint a = 4;", "\n(A)a += (a++); (B) a += (++a) ;(C) (a++) += a;(D) (++a) += (a++);", "\na = ?", "\n\u7b54\uff1aC\u9519\u8bef\uff0c\u5de6\u4fa7\u4e0d\u662f\u4e00\u4e2a\u6709\u6548\u53d8\u91cf\uff0c\u4e0d\u80fd\u8d4b\u503c\uff0c\u53ef\u6539\u4e3a(++a) += a;", "\n\u6539\u540e\u7b54\u6848\u4f9d\u6b21\u4e3a9,10,10,11", "\n2.\u67d032\u4f4d\u7cfb\u7edf\u4e0b, C++\u7a0b\u5e8f\uff0c\u8bf7\u8ba1\u7b97sizeof \u7684\u503c(5\u5206).", "\nchar str[] = \u201chttp://www.ibegroup.com/\u201d", "\nchar *p = str ;", "\nint n = 10;", "\n\u8bf7\u8ba1\u7b97", "\nsizeof (str ) = \uff1f\uff081\uff09", "\nsizeof ( p ) = \uff1f\uff082\uff09", "\nsizeof ( n ) = \uff1f\uff083\uff09", "\nvoid Foo ( char str[100]){", "\n\u8bf7\u8ba1\u7b97", "\nsizeof( str ) = \uff1f\uff084\uff09", "\n}", "\nvoid *p = malloc( 100 );", "\n\u8bf7\u8ba1\u7b97", "\nsizeof ( p ) = \uff1f\uff085\uff09", "\n\u7b54\uff1a\uff081\uff0917 \uff082\uff094 \uff083\uff09 4 \uff084\uff094 \uff085\uff094", "\n3. \u56de\u7b54\u4e0b\u9762\u7684\u95ee\u9898. (4\u5206)", "\n(1).\u5934\u6587\u4ef6\u4e2d\u7684 ifndef/define/endif \u5e72\u4ec0\u4e48\u7528\uff1f\u9884\u5904\u7406", "\n\u7b54\uff1a\u9632\u6b62\u5934\u6587\u4ef6\u88ab\u91cd\u590d\u5f15\u7528", "\n(2). \uff03i nclude \u548c \uff03i nclude \u201cfilename.h\u201d \u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u7b54\uff1a\u524d\u8005\u7528\u6765\u5305\u542b\u5f00\u53d1\u73af\u5883\u63d0\u4f9b\u7684\u5e93\u5934\u6587\u4ef6\uff0c\u540e\u8005\u7528\u6765\u5305\u542b\u81ea\u5df1\u7f16\u5199\u7684\u5934\u6587\u4ef6\u3002", "\n(3).\u5728C++ \u7a0b\u5e8f\u4e2d\u8c03\u7528\u88ab C \u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u7684\u51fd\u6570\uff0c\u4e3a\u4ec0\u4e48\u8981\u52a0 extern \u201cC\u201d\u58f0\u660e\uff1f", "\n\u7b54\uff1a\u51fd\u6570\u548c\u53d8\u91cf\u88abC++\u7f16\u8bd1\u540e\u5728\u7b26\u53f7\u5e93\u4e2d\u7684\u540d\u5b57\u4e0eC\u8bed\u8a00\u7684\u4e0d\u540c\uff0c\u88abextern \"C\"\u4fee\u9970\u7684\u53d8", "\n\u91cf\u548c\u51fd\u6570\u662f\u6309\u7167C\u8bed\u8a00\u65b9\u5f0f\u7f16\u8bd1\u548c\u8fde\u63a5\u7684\u3002\u7531\u4e8e\u7f16\u8bd1\u540e\u7684\u540d\u5b57\u4e0d\u540c\uff0cC++\u7a0b\u5e8f\u4e0d\u80fd\u76f4\u63a5\u8c03", "\n\u7528C \u51fd\u6570\u3002C++\u63d0\u4f9b\u4e86\u4e00\u4e2aC \u8fde\u63a5\u4ea4\u6362\u6307\u5b9a\u7b26\u53f7extern\u201cC\u201d\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002", "\n(4). switch()\u4e2d\u4e0d\u5141\u8bb8\u7684\u6570\u636e\u7c7b\u578b\u662f?", "\n\u7b54\uff1a\u5b9e\u578b", "\n4. \u56de\u7b54\u4e0b\u9762\u7684\u95ee\u9898(6\u5206)", "\n(1).Void GetMemory(char **p, int num){", "\n*p = (char *)malloc(num);", "\n}", "\nvoid Test(void){", "\nchar *str = NULL;", "\nGetMemory(&str, 100);", "\nstrcpy(str, \"hello\");", "\nprintf(str);", "\n}", "\n\u8bf7\u95ee\u8fd0\u884cTest \u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n\u7b54\uff1a\u8f93\u51fa\u201chello\u201d", "\n(2). void Test(void){", "\nchar *str = (char *) malloc(100);", "\nstrcpy(str, \u201chello\u201d);", "\nfree(str);", "\nif(str != NULL){", "\nstrcpy(str, \u201cworld\u201d);", "\nprintf(str);", "\n}", "\n}", "\n\u8bf7\u95ee\u8fd0\u884cTest \u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n\u7b54\uff1a\u8f93\u51fa\u201cworld\u201d", "\n(3). char *GetMemory(void){", "\nchar p[] = \"hello world\";", "\nreturn p;", "\n}", "\nvoid Test(void){", "\nchar *str = NULL;", "\nstr = GetMemory();", "\nprintf(str);", "\n}", "\n\u8bf7\u95ee\u8fd0\u884cTest \u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n\u7b54\uff1a\u65e0\u6548\u7684\u6307\u9488\uff0c\u8f93\u51fa\u4e0d\u786e\u5b9a", "\n5. \u7f16\u5199strcat\u51fd\u6570(6\u5206)", "\n\u5df2\u77e5strcat\u51fd\u6570\u7684\u539f\u578b\u662fchar *strcat (char *strDest, const char *strSrc);", "\n\u5176\u4e2dstrDest \u662f\u76ee\u7684\u5b57\u7b26\u4e32\uff0cstrSrc \u662f\u6e90\u5b57\u7b26\u4e32\u3002", "\n\uff081\uff09\u4e0d\u8c03\u7528C++/C \u7684\u5b57\u7b26\u4e32\u5e93\u51fd\u6570\uff0c\u8bf7\u7f16\u5199\u51fd\u6570 strcat", "\n\u7b54\uff1a", "\nVC\u6e90\u7801\uff1a", "\nchar * __cdecl strcat (char * dst, const char * src)", "\n{", "\nchar * cp = dst;", "\nwhile( *cp )", "\ncp++; /* find end of dst */", "\nwhile( *cp++ = *src++ ) ; /* Copy src to end of dst */", "\nreturn( dst ); /* return dst */", "\n}", "\n\uff082\uff09strcat\u80fd\u628astrSrc \u7684\u5185\u5bb9\u8fde\u63a5\u5230strDest\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u8981char * \u7c7b\u578b\u7684\u8fd4\u56de\u503c\uff1f", "\n\u7b54\uff1a\u65b9\u4fbf\u8d4b\u503c\u7ed9\u5176\u4ed6\u53d8\u91cf", "\n6.MFC\u4e2dCString\u662f\u7c7b\u578b\u5b89\u5168\u7c7b\u4e48\uff1f", "\n\u7b54\uff1a\u4e0d\u662f\uff0c\u5176\u5b83\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u5230CString\u53ef\u4ee5\u4f7f\u7528CString\u7684\u6210\u5458\u51fd\u6570Format\u6765\u8f6c\u6362", "\n7.C++\u4e2d\u4e3a\u4ec0\u4e48\u7528\u6a21\u677f\u7c7b\u3002", "\n\u7b54\uff1a(1)\u53ef\u7528\u6765\u521b\u5efa\u52a8\u6001\u589e\u957f\u548c\u51cf\u5c0f\u7684\u6570\u636e\u7ed3\u6784", "\n\uff082\uff09\u5b83\u662f\u7c7b\u578b\u65e0\u5173\u7684\uff0c\u56e0\u6b64\u5177\u6709\u5f88\u9ad8\u7684\u53ef\u590d\u7528\u6027\u3002", "\n\uff083\uff09\u5b83\u5728\u7f16\u8bd1\u65f6\u800c\u4e0d\u662f\u8fd0\u884c\u65f6\u68c0\u67e5\u6570\u636e\u7c7b\u578b\uff0c\u4fdd\u8bc1\u4e86\u7c7b\u578b\u5b89\u5168", "\n\uff084\uff09\u5b83\u662f\u5e73\u53f0\u65e0\u5173\u7684\uff0c\u53ef\u79fb\u690d\u6027", "\n\uff085\uff09\u53ef\u7528\u4e8e\u57fa\u672c\u6570\u636e\u7c7b\u578b", "\n8.CSingleLock\u662f\u5e72\u4ec0\u4e48\u7684\u3002", "\n\u7b54\uff1a\u540c\u6b65\u591a\u4e2a\u7ebf\u7a0b\u5bf9\u4e00\u4e2a\u6570\u636e\u7c7b\u7684\u540c\u65f6\u8bbf\u95ee", "\n9.NEWTEXTMETRIC \u662f\u4ec0\u4e48\u3002", "\n\u7b54\uff1a\u7269\u7406\u5b57\u4f53\u7ed3\u6784\uff0c\u7528\u6765\u8bbe\u7f6e\u5b57\u4f53\u7684\u9ad8\u5bbd\u5927\u5c0f", "\n10.\u7a0b\u5e8f\u4ec0\u4e48\u65f6\u5019\u5e94\u8be5\u4f7f\u7528\u7ebf\u7a0b\uff0c\u4ec0\u4e48\u65f6\u5019\u5355\u7ebf\u7a0b\u6548\u7387\u9ad8\u3002", "\n\u7b54\uff1a1\uff0e\u8017\u65f6\u7684\u64cd\u4f5c\u4f7f\u7528\u7ebf\u7a0b\uff0c\u63d0\u9ad8\u5e94\u7528\u7a0b\u5e8f\u54cd\u5e94", "\n2\uff0e\u5e76\u884c\u64cd\u4f5c\u65f6\u4f7f\u7528\u7ebf\u7a0b\uff0c\u5982C/S\u67b6\u6784\u7684\u670d\u52a1\u5668\u7aef\u5e76\u53d1\u7ebf\u7a0b\u54cd\u5e94\u7528\u6237\u7684\u8bf7\u6c42\u3002", "\n3\uff0e\u591aCPU\u7cfb\u7edf\u4e2d\uff0c\u4f7f\u7528\u7ebf\u7a0b\u63d0\u9ad8CPU\u5229\u7528\u7387", "\n4\uff0e\u6539\u5584\u7a0b\u5e8f\u7ed3\u6784\u3002\u4e00\u4e2a\u65e2\u957f\u53c8\u590d\u6742\u7684\u8fdb\u7a0b\u53ef\u4ee5\u8003\u8651\u5206\u4e3a\u591a\u4e2a\u7ebf\u7a0b\uff0c\u6210\u4e3a\u51e0\u4e2a\u72ec\u7acb\u6216\u534a\u72ec", "\n\u7acb\u7684\u8fd0\u884c\u90e8\u5206\uff0c\u8fd9\u6837\u7684\u7a0b\u5e8f\u4f1a\u5229\u4e8e\u7406\u89e3\u548c\u4fee\u6539\u3002", "\n\u5176\u4ed6\u60c5\u51b5\u90fd\u4f7f\u7528\u5355\u7ebf\u7a0b\u3002", "\n11.Windows\u662f\u5185\u6838\u7ea7\u7ebf\u7a0b\u4e48\u3002", "\n\u7b54\uff1a\u89c1\u4e0b\u4e00\u9898", "\n12.Linux\u6709\u5185\u6838\u7ea7\u7ebf\u7a0b\u4e48\u3002", "\n\u7b54\uff1a\u7ebf\u7a0b\u901a\u5e38\u88ab\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u4ee3\u7801\u7684\u4e0d\u540c\u6267\u884c\u8def\u7ebf\u3002\u4ece\u5b9e\u73b0\u65b9\u5f0f\u4e0a\u5212\u5206\uff0c\u7ebf\u7a0b\u6709\u4e24", "\n\u79cd\u7c7b\u578b\uff1a\u201c\u7528\u6237\u7ea7\u7ebf\u7a0b\u201d\u548c\u201c\u5185\u6838\u7ea7\u7ebf\u7a0b\u201d\u3002 \u7528\u6237\u7ebf\u7a0b\u6307\u4e0d\u9700\u8981\u5185\u6838\u652f\u6301\u800c\u5728\u7528\u6237\u7a0b\u5e8f", "\n\u4e2d\u5b9e\u73b0\u7684\u7ebf\u7a0b\uff0c\u5176\u4e0d\u4f9d\u8d56\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u6838\u5fc3\uff0c\u5e94\u7528\u8fdb\u7a0b\u5229\u7528\u7ebf\u7a0b\u5e93\u63d0\u4f9b\u521b\u5efa\u3001\u540c\u6b65\u3001\u8c03\u5ea6", "\n\u548c\u7ba1\u7406\u7ebf\u7a0b\u7684\u51fd\u6570\u6765\u63a7\u5236\u7528\u6237\u7ebf\u7a0b\u3002\u8fd9\u79cd\u7ebf\u7a0b\u751a\u81f3\u5728\u8c61 DOS \u8fd9\u6837\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u4e5f\u53ef\u5b9e\u73b0", "\n\uff0c\u4f46\u7ebf\u7a0b\u7684\u8c03\u5ea6\u9700\u8981\u7528\u6237\u7a0b\u5e8f\u5b8c\u6210\uff0c\u8fd9\u6709\u4e9b\u7c7b\u4f3c Windows 3.x \u7684\u534f\u4f5c\u5f0f\u591a\u4efb\u52a1\u3002\u53e6\u5916\u4e00", "\n\u79cd\u5219\u9700\u8981\u5185\u6838\u7684\u53c2\u4e0e\uff0c\u7531\u5185\u6838\u5b8c\u6210\u7ebf\u7a0b\u7684\u8c03\u5ea6\u3002\u5176\u4f9d\u8d56\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u6838\u5fc3\uff0c\u7531\u5185\u6838\u7684\u5185\u90e8", "\n\u9700\u6c42\u8fdb\u884c\u521b\u5efa\u548c\u64a4\u9500\uff0c\u8fd9\u4e24\u79cd\u6a21\u578b\u5404\u6709\u5176\u597d\u5904\u548c\u7f3a\u70b9\u3002\u7528\u6237\u7ebf\u7a0b\u4e0d\u9700\u8981\u989d\u5916\u7684\u5185\u6838\u5f00\u652f", "\n\uff0c\u5e76\u4e14\u7528\u6237\u6001\u7ebf\u7a0b\u7684\u5b9e\u73b0\u65b9\u5f0f\u53ef\u4ee5\u88ab\u5b9a\u5236\u6216\u4fee\u6539\u4ee5\u9002\u5e94\u7279\u6b8a\u5e94\u7528\u7684\u8981\u6c42\uff0c\u4f46\u662f\u5f53\u4e00\u4e2a\u7ebf", "\n\u7a0b\u56e0 I/O \u800c\u5904\u4e8e\u7b49\u5f85\u72b6\u6001\u65f6\uff0c\u6574\u4e2a\u8fdb\u7a0b\u5c31\u4f1a\u88ab\u8c03\u5ea6\u7a0b\u5e8f\u5207\u6362\u4e3a\u7b49\u5f85\u72b6\u6001\uff0c\u5176\u4ed6\u7ebf\u7a0b\u5f97\u4e0d", "\n\u5230\u8fd0\u884c\u7684\u673a\u4f1a\uff1b\u800c\u5185\u6838\u7ebf\u7a0b\u5219\u6ca1\u6709\u5404\u4e2a\u9650\u5236\uff0c\u6709\u5229\u4e8e\u53d1\u6325\u591a\u5904\u7406\u5668\u7684\u5e76\u53d1\u4f18\u52bf\uff0c\u4f46\u5374\u5360", "\n\u7528\u4e86\u66f4\u591a\u7684\u7cfb\u7edf\u5f00\u652f\u3002", "\nWindows NT\u548cOS/2\u652f\u6301\u5185\u6838\u7ebf\u7a0b\u3002Linux \u652f\u6301\u5185\u6838\u7ea7\u7684\u591a\u7ebf\u7a0b", "\n13.C++\u4e2d\u4ec0\u4e48\u6570\u636e\u5206\u914d\u5728\u6808\u6216\u5806\u4e2d\uff0cNew\u5206\u914d\u6570\u636e\u662f\u5728\u8fd1\u5806\u8fd8\u662f\u8fdc\u5806\u4e2d\uff1f", "\n\u7b54\uff1a\u6808: \u5b58\u653e\u5c40\u90e8\u53d8\u91cf\uff0c\u51fd\u6570\u8c03\u7528\u53c2\u6570,\u51fd\u6570\u8fd4\u56de\u503c\uff0c\u51fd\u6570\u8fd4\u56de\u5730\u5740\u3002\u7531\u7cfb\u7edf\u7ba1\u7406", "\n\u5806: \u7a0b\u5e8f\u8fd0\u884c\u65f6\u52a8\u6001\u7533\u8bf7\uff0cnew \u548c\u3000malloc\u7533\u8bf7\u7684\u5185\u5b58\u5c31\u5728\u5806\u4e0a", "\n14.\u4f7f\u7528\u7ebf\u7a0b\u662f\u5982\u4f55\u9632\u6b62\u51fa\u73b0\u5927\u7684\u6ce2\u5cf0\u3002", "\n\u7b54\uff1a\u610f\u601d\u662f\u5982\u4f55\u9632\u6b62\u540c\u65f6\u4ea7\u751f\u5927\u91cf\u7684\u7ebf\u7a0b\uff0c\u65b9\u6cd5\u662f\u4f7f\u7528\u7ebf\u7a0b\u6c60\uff0c\u7ebf\u7a0b\u6c60\u5177\u6709\u53ef\u4ee5\u540c\u65f6\u63d0", "\n\u9ad8\u8c03\u5ea6\u6548\u7387\u548c\u9650\u5236\u8d44\u6e90\u4f7f\u7528\u7684\u597d\u5904\uff0c\u7ebf\u7a0b\u6c60\u4e2d\u7684\u7ebf\u7a0b\u8fbe\u5230\u6700\u5927\u6570\u65f6\uff0c\u5176\u4ed6\u7ebf\u7a0b\u5c31\u4f1a\u6392\u961f", "\n\u7b49\u5019\u3002", "\n15\u51fd\u6570\u6a21\u677f\u4e0e\u7c7b\u6a21\u677f\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u7b54\uff1a\u51fd\u6570\u6a21\u677f\u7684\u5b9e\u4f8b\u5316\u662f\u7531\u7f16\u8bd1\u7a0b\u5e8f\u5728\u5904\u7406\u51fd\u6570\u8c03\u7528\u65f6\u81ea\u52a8\u5b8c\u6210\u7684\uff0c\u800c\u7c7b\u6a21\u677f\u7684\u5b9e\u4f8b\u5316", "\n\u5fc5\u987b\u7531\u7a0b\u5e8f\u5458\u5728\u7a0b\u5e8f\u4e2d\u663e\u5f0f\u5730\u6307\u5b9a\u3002", "\n16\u4e00\u822c\u6570\u636e\u5e93\u82e5\u51fa\u73b0\u65e5\u5fd7\u6ee1\u4e86\uff0c\u4f1a\u51fa\u73b0\u4ec0\u4e48\u60c5\u51b5\uff0c\u662f\u5426\u8fd8\u80fd\u4f7f\u7528\uff1f", "\n\u7b54\uff1a\u53ea\u80fd\u6267\u884c\u67e5\u8be2\u7b49\u8bfb\u64cd\u4f5c\uff0c\u4e0d\u80fd\u6267\u884c\u66f4\u6539\uff0c\u5907\u4efd\u7b49\u5199\u64cd\u4f5c\uff0c\u539f\u56e0\u662f\u4efb\u4f55\u5199\u64cd\u4f5c\u90fd\u8981\u8bb0", "\n\u5f55\u65e5\u5fd7\u3002\u4e5f\u5c31\u662f\u8bf4\u57fa\u672c\u4e0a\u5904\u4e8e\u4e0d\u80fd\u4f7f\u7528\u7684\u72b6\u6001\u3002", "\n17 SQL Server\u662f\u5426\u652f\u6301\u884c\u7ea7\u9501\uff0c\u6709\u4ec0\u4e48\u597d\u5904\uff1f", "\n\u7b54\uff1a\u652f\u6301\uff0c\u8bbe\u7acb\u5c01\u9501\u673a\u5236\u4e3b\u8981\u662f\u4e3a\u4e86\u5bf9\u5e76\u53d1\u64cd\u4f5c\u8fdb\u884c\u63a7\u5236\uff0c\u5bf9\u5e72\u6270\u8fdb\u884c\u5c01\u9501\uff0c\u4fdd\u8bc1\u6570\u636e", "\n\u7684\u4e00\u81f4\u6027\u548c\u51c6\u786e\u6027\uff0c\u884c\u7ea7\u5c01\u9501\u786e\u4fdd\u5728\u7528\u6237\u53d6\u5f97\u88ab\u66f4\u65b0\u7684\u884c\u5230\u8be5\u884c\u8fdb\u884c\u66f4\u65b0\u8fd9\u6bb5\u65f6\u95f4\u5185\u4e0d", "\n\u88ab\u5176\u5b83\u7528\u6237\u6240\u4fee\u6539\u3002\u56e0\u800c\u884c\u7ea7\u9501\u5373\u53ef\u4fdd\u8bc1\u6570\u636e\u7684\u4e00\u81f4\u6027\u53c8\u80fd\u63d0\u9ad8\u6570\u636e\u64cd\u4f5c\u7684\u8ff8\u53d1\u6027\u3002", "\n18\u5982\u679c\u6570\u636e\u5e93\u6ee1\u4e86\u4f1a\u51fa\u73b0\u4ec0\u4e48\u60c5\u51b5\uff0c\u662f\u5426\u8fd8\u80fd\u4f7f\u7528\uff1f", "\n\u7b54\uff1a\u89c116", "\n19 \u5173\u4e8e\u5185\u5b58\u5bf9\u9f50\u7684\u95ee\u9898\u4ee5\u53casizof()\u7684\u8f93\u51fa", "\n\u7b54\uff1a\u7f16\u8bd1\u5668\u81ea\u52a8\u5bf9\u9f50\u7684\u539f\u56e0\uff1a\u4e3a\u4e86\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6027\u80fd\uff0c\u6570\u636e\u7ed3\u6784\uff08\u5c24\u5176\u662f\u6808\uff09\u5e94\u8be5\u5c3d\u53ef\u80fd", "\n\u5730\u5728\u81ea\u7136\u8fb9\u754c\u4e0a\u5bf9\u9f50\u3002\u539f\u56e0\u5728\u4e8e\uff0c\u4e3a\u4e86\u8bbf\u95ee\u672a\u5bf9\u9f50\u7684\u5185\u5b58\uff0c\u5904\u7406\u5668\u9700\u8981\u4f5c\u4e24\u6b21\u5185\u5b58\u8bbf\u95ee", "\n\uff1b\u7136\u800c\uff0c\u5bf9\u9f50\u7684\u5185\u5b58\u8bbf\u95ee\u4ec5\u9700\u8981\u4e00\u6b21\u8bbf\u95ee\u3002", "\n20 int i=10, j=10, k=3; k*=i+j; k\u6700\u540e\u7684\u503c\u662f\uff1f", "\n\u7b54\uff1a60\uff0c\u6b64\u9898\u8003\u5bdf\u4f18\u5148\u7ea7\uff0c\u5b9e\u9645\u5199\u6210\uff1a k*=(i+j);\uff0c\u8d4b\u503c\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u6700\u4f4e", "\n21.\u5bf9\u6570\u636e\u5e93\u7684\u4e00\u5f20\u8868\u8fdb\u884c\u64cd\u4f5c,\u540c\u65f6\u8981\u5bf9\u53e6\u4e00\u5f20\u8868\u8fdb\u884c\u64cd\u4f5c,\u5982\u4f55\u5b9e\u73b0?", "\n\u7b54\uff1a\u5c06\u64cd\u4f5c\u591a\u4e2a\u8868\u7684\u64cd\u4f5c\u653e\u5165\u5230\u4e8b\u52a1\u4e2d\u8fdb\u884c\u5904\u7406", "\n22.TCP/IP \u5efa\u7acb\u8fde\u63a5\u7684\u8fc7\u7a0b?(3-way shake)", "\n\u7b54\uff1a\u5728TCP/IP\u534f\u8bae\u4e2d\uff0cTCP\u534f\u8bae\u63d0\u4f9b\u53ef\u9760\u7684\u8fde\u63a5\u670d\u52a1\uff0c\u91c7\u7528\u4e09\u6b21\u63e1\u624b\u5efa\u7acb\u4e00\u4e2a\u8fde\u63a5\u3002", "\n\u3000\u3000 \u7b2c\u4e00\u6b21\u63e1\u624b\uff1a\u5efa\u7acb\u8fde\u63a5\u65f6\uff0c\u5ba2\u6237\u7aef\u53d1\u9001syn\u5305(syn=j)\u5230\u670d\u52a1\u5668\uff0c\u5e76\u8fdb\u5165SYN_SEND\u72b6", "\n\u6001\uff0c\u7b49\u5f85\u670d\u52a1\u5668\u786e\u8ba4\uff1b", "\n\u7b2c\u4e8c\u6b21\u63e1\u624b\uff1a\u670d\u52a1\u5668\u6536\u5230syn\u5305\uff0c\u5fc5\u987b\u786e\u8ba4\u5ba2\u6237\u7684SYN\uff08ack=j+1\uff09\uff0c\u540c\u65f6\u81ea\u5df1\u4e5f\u53d1\u9001\u4e00\u4e2a", "\nSYN\u5305\uff08syn=k\uff09\uff0c\u5373SYN+ACK\u5305\uff0c\u6b64\u65f6\u670d\u52a1\u5668\u8fdb\u5165SYN_RECV\u72b6\u6001\uff1b", "\n\u3000\u3000 \u7b2c\u4e09\u6b21\u63e1\u624b\uff1a\u5ba2\u6237\u7aef\u6536\u5230\u670d\u52a1\u5668\u7684SYN\uff0bACK\u5305\uff0c\u5411\u670d\u52a1\u5668\u53d1\u9001\u786e\u8ba4\u5305ACK(ack=k+1)", "\n\uff0c\u6b64\u5305\u53d1\u9001\u5b8c\u6bd5\uff0c\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u8fdb\u5165ESTABLISHED\u72b6\u6001\uff0c\u5b8c\u6210\u4e09\u6b21\u63e1\u624b\u3002", "\n23.ICMP\u662f\u4ec0\u4e48\u534f\u8bae,\u5904\u4e8e\u54ea\u4e00\u5c42?", "\n\u7b54\uff1aInternet\u63a7\u5236\u62a5\u6587\u534f\u8bae\uff0c\u5904\u4e8e\u7f51\u7edc\u5c42\uff08IP\u5c42\uff09", "\n24.\u89e6\u53d1\u5668\u600e\u4e48\u5de5\u4f5c\u7684?", "\n\u7b54\uff1a\u89e6\u53d1\u5668\u4e3b\u8981\u662f\u901a\u8fc7\u4e8b\u4ef6\u8fdb\u884c\u89e6\u53d1\u800c\u88ab\u6267\u884c\u7684\uff0c\u5f53\u5bf9\u67d0\u4e00\u8868\u8fdb\u884c\u8bf8\u5982UPDATE\u3001 INSERT", "\n\u3001 DELETE \u8fd9\u4e9b\u64cd\u4f5c\u65f6\uff0c\u6570\u636e\u5e93\u5c31\u4f1a\u81ea\u52a8\u6267\u884c\u89e6\u53d1\u5668\u6240\u5b9a\u4e49\u7684SQL \u8bed\u53e5\uff0c\u4ece\u800c\u786e\u4fdd\u5bf9\u6570", "\n\u636e\u7684\u5904\u7406\u5fc5\u987b\u7b26\u5408\u7531\u8fd9\u4e9bSQL \u8bed\u53e5\u6240\u5b9a\u4e49\u7684\u89c4\u5219\u3002", "\n25.winsock\u5efa\u7acb\u8fde\u63a5\u7684\u4e3b\u8981\u5b9e\u73b0\u6b65\u9aa4?", "\n\u7b54\uff1a\u670d\u52a1\u5668\u7aef\uff1asocker()\u5efa\u7acb\u5957\u63a5\u5b57\uff0c\u7ed1\u5b9a\uff08bind\uff09\u5e76\u76d1\u542c\uff08listen\uff09\uff0c\u7528accept\uff08\uff09", "\n\u7b49\u5f85\u5ba2\u6237\u7aef\u8fde\u63a5\u3002", "\n\u5ba2\u6237\u7aef\uff1asocker()\u5efa\u7acb\u5957\u63a5\u5b57\uff0c\u8fde\u63a5\uff08connect\uff09\u670d\u52a1\u5668\uff0c\u8fde\u63a5\u4e0a\u540e\u4f7f\u7528send()\u548crecv\uff08", "\n\uff09\uff0c\u5728\u5957\u63a5\u5b57\u4e0a\u5199\u8bfb\u6570\u636e\uff0c\u76f4\u81f3\u6570\u636e\u4ea4\u6362\u5b8c\u6bd5\uff0cclosesocket()\u5173\u95ed\u5957\u63a5\u5b57\u3002", "\n\u670d\u52a1\u5668\u7aef\uff1aaccept\uff08\uff09\u53d1\u73b0\u6709\u5ba2\u6237\u7aef\u8fde\u63a5\uff0c\u5efa\u7acb\u4e00\u4e2a\u65b0\u7684\u5957\u63a5\u5b57\uff0c\u81ea\u8eab\u91cd\u65b0\u5f00\u59cb\u7b49\u5f85\u8fde", "\n\u63a5\u3002\u8be5\u65b0\u4ea7\u751f\u7684\u5957\u63a5\u5b57\u4f7f\u7528send()\u548crecv\uff08\uff09\u5199\u8bfb\u6570\u636e\uff0c\u76f4\u81f3\u6570\u636e\u4ea4\u6362\u5b8c\u6bd5\uff0cclosesock", "\net()\u5173\u95ed\u5957\u63a5\u5b57\u3002", "\n26.\u52a8\u6001\u8fde\u63a5\u5e93\u7684\u4e24\u79cd\u65b9\u5f0f?", "\n\u7b54\uff1a\u8c03\u7528\u4e00\u4e2aDLL\u4e2d\u7684\u51fd\u6570\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a", "\n1\uff0e\u8f7d\u5165\u65f6\u52a8\u6001\u94fe\u63a5\uff08load-time dynamic linking\uff09\uff0c\u6a21\u5757\u975e\u5e38\u660e\u786e\u8c03\u7528\u67d0\u4e2a\u5bfc\u51fa\u51fd\u6570", "\n\uff0c\u4f7f\u5f97\u4ed6\u4eec\u5c31\u50cf\u672c\u5730\u51fd\u6570\u4e00\u6837\u3002\u8fd9\u9700\u8981\u94fe\u63a5\u65f6\u94fe\u63a5\u90a3\u4e9b\u51fd\u6570\u6240\u5728DLL\u7684\u5bfc\u5165\u5e93\uff0c\u5bfc\u5165\u5e93\u5411", "\n\u7cfb\u7edf\u63d0\u4f9b\u4e86\u8f7d\u5165DLL\u65f6\u6240\u9700\u7684\u4fe1\u606f\u53caDLL\u51fd\u6570\u5b9a\u4f4d\u3002", "\n2\uff0e\u8fd0\u884c\u65f6\u52a8\u6001\u94fe\u63a5\uff08run-time dynamic linking\uff09\uff0c\u8fd0\u884c\u65f6\u53ef\u4ee5\u901a\u8fc7LoadLibrary\u6216Loa", "\ndLibraryEx\u51fd\u6570\u8f7d\u5165DLL\u3002DLL\u8f7d\u5165\u540e\uff0c\u6a21\u5757\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528GetProcAddress\u83b7\u53d6DLL\u51fd\u6570\u7684", "\n\u51fa\u53e3\u5730\u5740\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7\u8fd4\u56de\u7684\u51fd\u6570\u6307\u9488\u8c03\u7528DLL\u51fd\u6570\u4e86\u3002\u5982\u6b64\u5373\u53ef\u907f\u514d\u5bfc\u5165\u5e93\u6587\u4ef6\u4e86", "\n\u3002", "\n27.IP\u7ec4\u64ad\u6709\u90a3\u4e9b\u597d\u5904?", "\n\u7b54\uff1aInternet\u4e0a\u4ea7\u751f\u7684\u8bb8\u591a\u65b0\u7684\u5e94\u7528\uff0c\u7279\u522b\u662f\u9ad8\u5e26\u5bbd\u7684\u591a\u5a92\u4f53\u5e94\u7528\uff0c\u5e26\u6765\u4e86\u5e26\u5bbd\u7684\u6025\u5267", "\n\u6d88\u8017\u548c\u7f51\u7edc\u62e5\u6324\u95ee\u9898\u3002\u7ec4\u64ad\u662f\u4e00\u79cd\u5141\u8bb8\u4e00\u4e2a\u6216\u591a\u4e2a\u53d1\u9001\u8005\uff08\u7ec4\u64ad\u6e90\uff09\u53d1\u9001\u5355\u4e00\u7684\u6570\u636e\u5305", "\n\u5230\u591a\u4e2a\u63a5\u6536\u8005\uff08\u4e00\u6b21\u7684\uff0c\u540c\u65f6\u7684\uff09\u7684\u7f51\u7edc\u6280\u672f\u3002\u7ec4\u64ad\u53ef\u4ee5\u5927\u5927\u7684\u8282\u7701\u7f51\u7edc\u5e26\u5bbd\uff0c\u56e0\u4e3a\u65e0", "\n\u8bba\u6709\u591a\u5c11\u4e2a\u76ee\u6807\u5730\u5740\uff0c\u5728\u6574\u4e2a\u7f51\u7edc\u7684\u4efb\u4f55\u4e00\u6761\u94fe\u8def\u4e0a\u53ea\u4f20\u9001\u5355\u4e00\u7684\u6570\u636e\u5305\u3002\u6240\u4ee5\u8bf4\u7ec4\u64ad", "\n\u6280\u672f\u7684\u6838\u5fc3\u5c31\u662f\u9488\u5bf9\u5982\u4f55\u8282\u7ea6\u7f51\u7edc\u8d44\u6e90\u7684\u524d\u63d0\u4e0b\u4fdd\u8bc1\u670d\u52a1\u8d28\u91cf\u3002", "19. \u5982\u4f55\u5f15\u7528\u4e00\u4e2a\u5df2\u7ecf\u5b9a\u4e49\u8fc7\u7684\u5168\u5c40\u53d8\u91cf\uff1f", "\n\u7b54\uff1aextern", "\n\u53ef\u4ee5\u7528\u5f15\u7528\u5934\u6587\u4ef6\u7684\u65b9\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u7528extern\u5173\u952e\u5b57\uff0c\u5982\u679c\u7528\u5f15\u7528\u5934\u6587\u4ef6\u65b9\u5f0f\u6765\u5f15\u7528\u67d0\u4e2a\u5728\u5934\u6587\u4ef6\u4e2d\u58f0\u660e\u7684\u5168\u5c40\u53d8\u7406\uff0c\u5047\u5b9a\u4f60\u5c06\u90a3\u4e2a\u53d8\u5199\u9519\u4e86\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4\u4f1a\u62a5\u9519\uff0c\u5982\u679c\u4f60\u7528extern\u65b9\u5f0f\u5f15\u7528\u65f6\uff0c\u5047\u5b9a\u4f60\u72af\u4e86\u540c\u6837\u7684\u9519\u8bef\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4\u4e0d\u4f1a\u62a5\u9519\uff0c\u800c\u5728\u8fde\u63a5\u671f\u95f4\u62a5\u9519\u3002", "20. \u5168\u5c40\u53d8\u91cf\u53ef\u4e0d\u53ef\u4ee5\u5b9a\u4e49\u5728\u53ef\u88ab\u591a\u4e2a.C\u6587\u4ef6\u5305\u542b\u7684\u5934\u6587\u4ef6\u4e2d\uff1f\u4e3a\u4ec0\u4e48\uff1f", "\n\u7b54\uff1a\u53ef\u4ee5\uff0c\u5728\u4e0d\u540c\u7684C\u6587\u4ef6\u4e2d\u4ee5static\u5f62\u5f0f\u6765\u58f0\u660e\u540c\u540d\u5168\u5c40\u53d8\u91cf\u3002", "\n\u53ef\u4ee5\u5728\u4e0d\u540c\u7684C\u6587\u4ef6\u4e2d\u58f0\u660e\u540c\u540d\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u524d\u63d0\u662f\u5176\u4e2d\u53ea\u80fd\u6709\u4e00\u4e2aC\u6587\u4ef6\u4e2d\u5bf9\u6b64\u53d8\u91cf\u8d4b\u521d\u503c\uff0c\u6b64\u65f6\u8fde\u63a5\u4e0d\u4f1a\u51fa\u9519\u3002", "21. \u8bed\u53e5for( \uff1b1 \uff1b)\u6709\u4ec0\u4e48\u95ee\u9898\uff1f\u5b83\u662f\u4ec0\u4e48\u610f\u601d\uff1f", "\n\u7b54\uff1a\u65e0\u9650\u5faa\u73af\uff0c\u548cwhile(1)\u76f8\u540c\u3002", "22. do\u2026\u2026while\u548cwhile\u2026\u2026do\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u7b54\uff1a\u524d\u4e00\u4e2a\u5faa\u73af\u4e00\u904d\u518d\u5224\u65ad\uff0c\u540e\u4e00\u4e2a\u5224\u65ad\u4ee5\u540e\u518d\u5faa\u73af\u3002", "23. \u8bf7\u5199\u51fa\u4e0b\u5217\u4ee3\u7801\u7684\u8f93\u51fa\u5185\u5bb9", "\n#include", "\nmain()", "\n{", "\nint a,b,c,d;", "\na=10;", "\nb=a++;", "\nc=++a;", "\nd=10*a++;", "\nprintf(\"b\uff0cc\uff0cd\uff1a%d\uff0c%d\uff0c%d\"\uff0cb\uff0cc\uff0cd);", "\nreturn 0;", "\n} ", "\u7b54\uff1a10\uff0c12\uff0c120 ", "1. \u4ee5\u4e0b\u4e09\u6761\u8f93\u51fa\u8bed\u53e5\u5206\u522b\u8f93\u51fa\u4ec0\u4e48\uff1f", "\nchar str1[] = \"abc\";", "\nchar str2[] = \"abc\";", "\nconst char str3[] = \"abc\";", "\nconst char str4[] = \"abc\";", "\nconst char* str5 = \"abc\";", "\nconst char* str6 = \"abc\";", "\ncout \ncout \ncout \n\u7b54\uff1a\u5206\u522b\u8f93\u51fafalse,false,true\u3002str1\u548cstr2\u90fd\u662f\u5b57\u7b26\u6570\u7ec4\uff0c\u6bcf\u4e2a\u90fd\u6709\u5176\u81ea\u5df1\u7684\u5b58\u50a8\u533a\uff0c\u5b83\u4eec\u7684\u503c\u5219\u662f\u5404\u5b58\u50a8\u533a\u9996\u5730\u5740\uff0c\u4e0d\u7b49\uff1bstr3\u548cstr4\u540c\u4e0a\uff0c\u53ea\u662f\u6309const\u8bed\u4e49\uff0c\u5b83\u4eec\u6240\u6307\u5411\u7684\u6570\u636e\u533a\u4e0d\u80fd\u4fee\u6539\u3002str5\u548cstr6\u5e76\u975e\u6570\u7ec4\u800c\u662f\u5b57\u7b26\u6307\u9488\uff0c\u5e76\u4e0d\u5206\u914d\u5b58\u50a8\u533a\uff0c\u5176\u540e\u7684\u201cabc\u201d\u4ee5\u5e38\u91cf\u5f62\u5f0f\u5b58\u4e8e\u9759\u6001\u6570\u636e\u533a\uff0c\u800c\u5b83\u4eec\u81ea\u5df1\u4ec5\u662f\u6307\u5411\u8be5\u533a\u9996\u5730\u5740\u7684\u6307\u9488\uff0c\u76f8\u7b49\u3002", "2. \u4ee5\u4e0b\u4ee3\u7801\u4e2d\u7684\u4e24\u4e2asizeof\u7528\u6cd5\u6709\u95ee\u9898\u5417\uff1f", "\nvoid UpperCase( char str[] ) // \u5c06 str \u4e2d\u7684\u5c0f\u5199\u5b57\u6bcd\u8f6c\u6362\u6210\u5927\u5199\u5b57\u6bcd", "\n{", "\nfor( size_t i=0; iif( 'a'\nstr[i] -= ('a'-'A' );", "\n}", "\nchar str[] = \"aBcDe\";", "\ncout \nUpperCase( str );", "\ncout \n\u7b54\uff1a\u51fd\u6570\u5185\u7684sizeof\u6709\u95ee\u9898\u3002\u6839\u636e\u8bed\u6cd5\uff0csizeof\u5982\u7528\u4e8e\u6570\u7ec4\uff0c\u53ea\u80fd\u6d4b\u51fa\u9759\u6001\u6570\u7ec4\u7684\u5927\u5c0f\uff0c\u65e0\u6cd5\u68c0\u6d4b\u52a8\u6001\u5206\u914d\u7684\u6216\u5916\u90e8\u6570\u7ec4\u5927\u5c0f\u3002\u51fd\u6570\u5916\u7684str\u662f\u4e00\u4e2a\u9759\u6001\u5b9a\u4e49\u7684\u6570\u7ec4\uff0c\u56e0\u6b64\u5176\u5927\u5c0f\u4e3a6\uff0c\u51fd\u6570\u5185\u7684str\u5b9e\u9645\u53ea\u662f\u4e00\u4e2a\u6307\u5411\u5b57\u7b26\u4e32\u7684\u6307\u9488\uff0c\u6ca1\u6709\u4efb\u4f55\u989d\u5916\u7684\u4e0e\u6570\u7ec4\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u56e0\u6b64sizeof\u4f5c\u7528\u4e8e\u4e0a\u53ea\u5c06\u5176\u5f53\u6307\u9488\u770b\uff0c\u4e00\u4e2a\u6307\u9488\u4e3a4\u4e2a\u5b57\u8282\uff0c\u56e0\u6b64\u8fd4\u56de4\u3002", "3. \u975eC++\u5185\u5efa\u578b\u522b A \u548c B\uff0c\u5728\u54ea\u51e0\u79cd\u60c5\u51b5\u4e0bB\u80fd\u9690\u5f0f\u8f6c\u5316\u4e3aA\uff1f", "\n\u7b54\uff1a", "\na. class B : public A { \u2026\u2026} // B\u516c\u6709\u7ee7\u627f\u81eaA\uff0c\u53ef\u4ee5\u662f\u95f4\u63a5\u7ee7\u627f\u7684", "\nb. class B { operator A( ); } // B\u5b9e\u73b0\u4e86\u9690\u5f0f\u8f6c\u5316\u4e3aA\u7684\u8f6c\u5316", "\nc. class A { A( const B& ); } // A\u5b9e\u73b0\u4e86non-explicit\u7684\u53c2\u6570\u4e3aB\uff08\u53ef\u4ee5\u6709\u5176\u4ed6\u5e26\u9ed8\u8ba4\u503c\u7684\u53c2\u6570\uff09\u6784\u9020\u51fd\u6570", "\nd. A& operator= ( const A& ); // \u8d4b\u503c\u64cd\u4f5c\uff0c\u867d\u4e0d\u662f\u6b63\u5b97\u7684\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\uff0c\u4f46\u4e5f\u53ef\u4ee5\u52c9\u5f3a\u7b97\u4e00\u4e2a", "4. \u4ee5\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1f", "\nstruct Test", "\n{", "\nTest( int ) {}", "\nTest() {}", "\nvoid fun() {}", "\n};", "\nvoid main( void )", "\n{", "\nTest a(1);", "\na.fun();", "\nTest b();", "\nb.fun();", "\n}", "\n\u7b54\uff1a\u53d8\u91cfb\u5b9a\u4e49\u51fa\u9519\u3002\u6309\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u5b9a\u4e49\u5bf9\u8c61\uff0c\u4e0d\u9700\u8981\u52a0\u62ec\u53f7\u3002", "\n5. \u4ee5\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1f", "\ncout \n\u7b54\uff1a\u4e09\u5143\u8868\u8fbe\u5f0f\u201c\uff1f:\u201d\u95ee\u53f7\u540e\u9762\u7684\u4e24\u4e2a\u64cd\u4f5c\u6570\u5fc5\u987b\u4e3a\u540c\u4e00\u7c7b\u578b\u3002", "6. \u4ee5\u4e0b\u4ee3\u7801\u80fd\u591f\u7f16\u8bd1\u901a\u8fc7\u5417\uff0c\u4e3a\u4ec0\u4e48\uff1f", "\nunsigned int const size1 = 2;", "\nchar str1[ size1 ];", "\nunsigned int temp = 0;", "\ncin >> temp;", "\nunsigned int const size2 = temp;", "\nchar str2[ size2 ];", "\n\u7b54\uff1astr2\u5b9a\u4e49\u51fa\u9519\uff0csize2\u975e\u7f16\u8bd1\u5668\u671f\u95f4\u5e38\u91cf\uff0c\u800c\u6570\u7ec4\u5b9a\u4e49\u8981\u6c42\u957f\u5ea6\u5fc5\u987b\u4e3a\u7f16\u8bd1\u671f\u5e38\u91cf\u3002", "7. \u4ee5\u4e0b\u53cd\u5411\u904d\u5386array\u6570\u7ec4\u7684\u65b9\u6cd5\u6709\u4ec0\u4e48\u9519\u8bef\uff1f", "\nvector array;", "\narray.push_back( 1 );", "\narray.push_back( 2 );", "\narray.push_back( 3 );", "\nfor( vector::size_type i=array.size()-1; i>=0; \u2013i ) // \u53cd\u5411\u904d\u5386array\u6570\u7ec4", "\n{", "\ncout \n}", "\n\u7b54\uff1a\u9996\u5148\u6570\u7ec4\u5b9a\u4e49\u6709\u8bef\uff0c\u5e94\u52a0\u4e0a\u7c7b\u578b\u53c2\u6570\uff1avector array\u3002\u5176\u6b21vector::size_type\u88ab\u5b9a\u4e49\u4e3aunsigned int\uff0c\u5373\u65e0\u7b26\u53f7\u6570\uff0c\u8fd9\u6837\u505a\u4e3a\u5faa\u73af\u53d8\u91cf\u7684i\u4e3a0\u65f6\u518d\u51cf1\u5c31\u4f1a\u53d8\u6210\u6700\u5927\u7684\u6574\u6570\uff0c\u5bfc\u81f4\u5faa\u73af\u5931\u53bb\u63a7\u5236\u3002", "8. \u4ee5\u4e0b\u4ee3\u7801\u4e2d\u7684\u8f93\u51fa\u8bed\u53e5\u8f93\u51fa0\u5417\uff0c\u4e3a\u4ec0\u4e48\uff1f", "\nstruct CLS", "\n{", "\nint m_i;", "\nCLS( int i ) : m_i(i) {}", "\nCLS()", "\n{", "\nCLS(0);", "\n}", "\n};", "\nCLS obj;", "\ncout \n\u7b54\uff1a\u4e0d\u80fd\u3002\u5728\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u5185\u90e8\u518d\u8c03\u7528\u5e26\u53c2\u7684\u6784\u9020\u51fd\u6570\u5c5e\u7528\u6237\u884c\u4e3a\u800c\u975e\u7f16\u8bd1\u5668\u884c\u4e3a\uff0c\u4ea6\u5373\u4ec5\u6267\u884c\u51fd\u6570\u8c03\u7528\uff0c\u800c\u4e0d\u4f1a\u6267\u884c\u5176\u540e\u7684\u521d\u59cb\u5316\u8868\u8fbe\u5f0f\u3002\u53ea\u6709\u5728\u751f\u6210\u5bf9\u8c61\u65f6\uff0c\u521d\u59cb\u5316\u8868\u8fbe\u5f0f\u624d\u4f1a\u968f\u76f8\u5e94\u7684\u6784\u9020\u51fd\u6570\u4e00\u8d77\u8c03\u7528\u3002", "9. C++\u4e2d\u7684\u7a7a\u7c7b\uff0c\u9ed8\u8ba4\u4ea7\u751f\u54ea\u4e9b\u7c7b\u6210\u5458\u51fd\u6570\uff1f", "\n\u7b54\uff1a", "\nclass Empty", "\n{", "\npublic:", "\nEmpty(); // \u7f3a\u7701\u6784\u9020\u51fd\u6570", "\nEmpty( const Empty& ); // \u62f7\u8d1d\u6784\u9020\u51fd\u6570", "\n~Empty(); // \u6790\u6784\u51fd\u6570", "\nEmpty& operator=( const Empty& ); // \u8d4b\u503c\u8fd0\u7b97\u7b26", "\nEmpty* operator&(); // \u53d6\u5740\u8fd0\u7b97\u7b26", "\nconst Empty* operator&() const; // \u53d6\u5740\u8fd0\u7b97\u7b26 const", "\n};", "10. \u4ee5\u4e0b\u4e24\u6761\u8f93\u51fa\u8bed\u53e5\u5206\u522b\u8f93\u51fa\u4ec0\u4e48\uff1f", "\nfloat a = 1.0f;", "\ncout \ncout \ncout \nfloat b = 0.0f;", "\ncout \ncout \ncout \n\u7b54\uff1a\u5206\u522b\u8f93\u51fafalse\u548ctrue\u3002\u6ce8\u610f\u8f6c\u6362\u7684\u5e94\u7528\u3002(int)a\u5b9e\u9645\u4e0a\u662f\u4ee5\u6d6e\u70b9\u6570a\u4e3a\u53c2\u6570\u6784\u9020\u4e86\u4e00\u4e2a\u6574\u578b\u6570\uff0c\u8be5\u6574\u6570\u7684\u503c\u662f1\uff0c(int&)a\u5219\u662f\u544a\u8bc9\u7f16\u8bd1\u5668\u5c06a\u5f53\u4f5c\u6574\u6570\u770b\uff08\u5e76\u6ca1\u6709\u505a\u4efb\u4f55\u5b9e\u8d28\u4e0a\u7684\u8f6c\u6362\uff09\u3002\u56e0\u4e3a1\u4ee5\u6574\u6570\u5f62\u5f0f\u5b58\u653e\u548c\u4ee5\u6d6e\u70b9\u5f62\u5f0f\u5b58\u653e\u5176\u5185\u5b58\u6570\u636e\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u56e0\u6b64\u4e24\u8005\u4e0d\u7b49\u3002\u5bf9b\u7684\u4e24\u79cd\u8f6c\u6362\u610f\u4e49\u540c\u4e0a\uff0c\u4f46\u662f0\u7684\u6574\u6570\u5f62\u5f0f\u548c\u6d6e\u70b9\u5f62\u5f0f\u5176\u5185\u5b58\u6570\u636e\u662f\u4e00\u6837\u7684\uff0c\u56e0\u6b64\u5728\u8fd9\u79cd\u7279\u6b8a\u60c5\u5f62\u4e0b\uff0c\u4e24\u8005\u76f8\u7b49\uff08\u4ec5\u4ec5\u5728\u6570\u503c\u610f\u4e49\u4e0a\uff09\u3002", "\n\u6ce8\u610f\uff0c\u7a0b\u5e8f\u7684\u8f93\u51fa\u4f1a\u663e\u793a(int&)a=1065353216\uff0c\u8fd9\u4e2a\u503c\u662f\u600e\u4e48\u6765\u7684\u5462\uff1f\u524d\u9762\u5df2\u7ecf\u8bf4\u4e86\uff0c1\u4ee5\u6d6e\u70b9\u6570\u5f62\u5f0f\u5b58\u653e\u5728\u5185\u5b58\u4e2d\uff0c\u6309ieee754\u89c4\u5b9a\uff0c\u5176\u5185\u5bb9\u4e3a0x0000803F\uff08\u5df2\u8003\u8651\u5b57\u8282\u53cd\u5e8f\uff09\u3002\u8fd9\u4e5f\u5c31\u662fa\u8fd9\u4e2a\u53d8\u91cf\u6240\u5360\u636e\u7684\u5185\u5b58\u5355\u5143\u7684\u503c\u3002\u5f53(int&)a\u51fa\u73b0\u65f6\uff0c\u5b83\u76f8\u5f53\u4e8e\u544a\u8bc9\u5b83\u7684\u4e0a\u4e0b\u6587\uff1a\u201c\u628a\u8fd9\u5757\u5730\u5740\u5f53\u505a\u6574\u6570\u770b\u5f85\uff01\u4e0d\u8981\u7ba1\u5b83\u539f\u6765\u662f\u4ec0\u4e48\u3002\u201d\u8fd9\u6837\uff0c\u5185\u5bb90x0000803F\u6309\u6574\u6570\u89e3\u91ca\uff0c\u5176\u503c\u6b63\u597d\u5c31\u662f1065353216\uff08\u5341\u8fdb\u5236\u6570\uff09\u3002", "\n\u901a\u8fc7\u67e5\u770b\u6c47\u7f16\u4ee3\u7801\u53ef\u4ee5\u8bc1\u5b9e\u201c(int)a\u76f8\u5f53\u4e8e\u91cd\u65b0\u6784\u9020\u4e86\u4e00\u4e2a\u503c\u7b49\u4e8ea\u7684\u6574\u578b\u6570\u201d\u4e4b\u8bf4\uff0c\u800c(int&)\u7684\u4f5c\u7528\u5219\u4ec5\u4ec5\u662f\u8868\u8fbe\u4e86\u4e00\u4e2a\u7c7b\u578b\u4fe1\u606f\uff0c\u610f\u4e49\u5728\u4e8e\u4e3acout\n", "11. \u4ee5\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1f", "\ntypedef vector IntArray;", "\nIntArray array;", "\narray.push_back( 1 );", "\narray.push_back( 2 );", "\narray.push_back( 2 );", "\narray.push_back( 3 );", "\n// \u5220\u9664array\u6570\u7ec4\u4e2d\u6240\u6709\u76842", "\nfor( IntArray::iterator itor=array.begin(); itor!=array.end(); ++itor )", "\n{", "\nif( 2 == *itor ) array.erase( itor );", "\n}", "\n\u7b54\uff1a\u540c\u6837\u6709\u7f3a\u5c11\u7c7b\u578b\u53c2\u6570\u7684\u95ee\u9898\u3002\u53e6\u5916\uff0c\u6bcf\u6b21\u8c03\u7528\u201carray.erase( itor );\u201d\uff0c\u88ab\u5220\u9664\u5143\u7d20\u4e4b\u540e\u7684\u5185\u5bb9\u4f1a\u81ea\u52a8\u5f80\u524d\u79fb\uff0c\u5bfc\u81f4\u8fed\u4ee3\u6f0f\u9879\uff0c\u5e94\u5728\u5220\u9664\u4e00\u9879\u540e\u4f7fitor--\uff0c\u4f7f\u4e4b\u4ece\u5df2\u7ecf\u524d\u79fb\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\u8d77\u7ee7\u7eed\u904d\u5386\u3002", "\n12. \u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u5b8c\u6210\u5185\u5b58\u4e4b\u95f4\u7684\u62f7\u8d1d\u3002[\u8003\u8651\u95ee\u9898\u662f\u5426\u5168\u9762]", "\n\u7b54\uff1a", "\nvoid* mymemcpy( void *dest, const void *src, size_t count )", "\n{", "\nchar* pdest = static_cast( dest );", "\nconst char* psrc = static_cast( src );", "\nif( pdest>psrc && pdest{", "\nfor( size_t i=count-1; i!=-1; \u2013i )", "\npdest[i] = psrc[i];", "\n}", "\nelse", "\n{", "\nfor( size_t i=0; ipdest[i] = psrc[i];", "\n}", "\nreturn dest;", "\n}"], "title": "\u4e1c\u8f6fC_C++\u7b14\u8bd5"},
{"contents": ["1.\u5199\u51fa\u5224\u65adABCD\u56db\u4e2a\u8868\u8fbe\u5f0f\u7684\u662f\u5426\u6b63\u786e, \u82e5\u6b63\u786e, \u5199\u51fa\u7ecf\u8fc7\u8868\u8fbe\u5f0f\u4e2d a\u7684\u503c(3\u5206)", "\nint a = 4;", "\n(A)a += (a++); (B) a += (++a) ;(C) (a++) += a;(D) (++a) += (a++);", "\na = ?", "\n\u7b54\uff1aC\u9519\u8bef\uff0c\u5de6\u4fa7\u4e0d\u662f\u4e00\u4e2a\u6709\u6548\u53d8\u91cf\uff0c\u4e0d\u80fd\u8d4b\u503c\uff0c\u53ef\u6539\u4e3a(++a) += a;", "\n\u6539\u540e\u7b54\u6848\u4f9d\u6b21\u4e3a9,10,10,11", "\n2.\u67d032\u4f4d\u7cfb\u7edf\u4e0b, C++\u7a0b\u5e8f\uff0c\u8bf7\u8ba1\u7b97sizeof \u7684\u503c(5\u5206).", "\nchar str[] = \u201chttp://www.ibegroup.com/\u201d", "\nchar *p = str ;", "\nint n = 10;", "\n\u8bf7\u8ba1\u7b97", "\nsizeof (str ) = \uff1f\uff081\uff09", "\nsizeof ( p ) = \uff1f\uff082\uff09", "\nsizeof ( n ) = \uff1f\uff083\uff09", "\nvoid Foo ( char str[100]){", "\n\u8bf7\u8ba1\u7b97", "\nsizeof( str ) = \uff1f\uff084\uff09", "\n}", "\nvoid *p = malloc( 100 );", "\n\u8bf7\u8ba1\u7b97", "\nsizeof ( p ) = \uff1f\uff085\uff09", "\n\u7b54\uff1a\uff081\uff0917 \uff082\uff094 \uff083\uff09 4 \uff084\uff094 \uff085\uff094", "\n3. \u56de\u7b54\u4e0b\u9762\u7684\u95ee\u9898. (4\u5206)", "\n(1).\u5934\u6587\u4ef6\u4e2d\u7684 ifndef/define/endif \u5e72\u4ec0\u4e48\u7528\uff1f\u9884\u5904\u7406", "\n\u7b54\uff1a\u9632\u6b62\u5934\u6587\u4ef6\u88ab\u91cd\u590d\u5f15\u7528", "\n(2). \uff03i nclude \u548c \uff03i nclude \u201cfilename.h\u201d \u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u7b54\uff1a\u524d\u8005\u7528\u6765\u5305\u542b\u5f00\u53d1\u73af\u5883\u63d0\u4f9b\u7684\u5e93\u5934\u6587\u4ef6\uff0c\u540e\u8005\u7528\u6765\u5305\u542b\u81ea\u5df1\u7f16\u5199\u7684\u5934\u6587\u4ef6\u3002", "\n(3).\u5728C++ \u7a0b\u5e8f\u4e2d\u8c03\u7528\u88ab C \u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u7684\u51fd\u6570\uff0c\u4e3a\u4ec0\u4e48\u8981\u52a0 extern \u201cC\u201d\u58f0\u660e\uff1f", "\n\u7b54\uff1a\u51fd\u6570\u548c\u53d8\u91cf\u88abC++\u7f16\u8bd1\u540e\u5728\u7b26\u53f7\u5e93\u4e2d\u7684\u540d\u5b57\u4e0eC\u8bed\u8a00\u7684\u4e0d\u540c\uff0c\u88abextern \u201cC\u201d\u4fee\u9970\u7684\u53d8", "\n\u91cf\u548c\u51fd\u6570\u662f\u6309\u7167C\u8bed\u8a00\u65b9\u5f0f\u7f16\u8bd1\u548c\u8fde\u63a5\u7684\u3002\u7531\u4e8e\u7f16\u8bd1\u540e\u7684\u540d\u5b57\u4e0d\u540c\uff0cC++\u7a0b\u5e8f\u4e0d\u80fd\u76f4\u63a5\u8c03", "\n\u7528C \u51fd\u6570\u3002C++\u63d0\u4f9b\u4e86\u4e00\u4e2aC \u8fde\u63a5\u4ea4\u6362\u6307\u5b9a\u7b26\u53f7extern\u201cC\u201d\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002", "\n(4). switch()\u4e2d\u4e0d\u5141\u8bb8\u7684\u6570\u636e\u7c7b\u578b\u662f?", "\n\u7b54\uff1a\u5b9e\u578b", "\n4. \u56de\u7b54\u4e0b\u9762\u7684\u95ee\u9898(6\u5206)", "\n(1).Void GetMemory(char **p, int num){", "\n*p = (char *)malloc(num);", "\n}", "\nvoid Test(void){", "\nchar *str = NULL;", "\nGetMemory(&str, 100);", "\nstrcpy(str, \u201chello\u201d);", "\nprintf(str);", "\n}", "\n\u8bf7\u95ee\u8fd0\u884cTest \u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n\u7b54\uff1a\u8f93\u51fa\u201chello\u201d", "\n(2). void Test(void){", "\nchar *str = (char *) malloc(100);", "\nstrcpy(str, \u201chello\u201d);", "\nfree(str);", "\nif(str != NULL){", "\nstrcpy(str, \u201cworld\u201d);", "\nprintf(str);", "\n}", "\n}", "\n\u8bf7\u95ee\u8fd0\u884cTest \u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n\u7b54\uff1a\u8f93\u51fa\u201cworld\u201d", "\n(3). char *GetMemory(void){", "\nchar p[] = \u201chello world\u201d;", "\nreturn p;", "\n}", "\nvoid Test(void){", "\nchar *str = NULL;", "\nstr = GetMemory();", "\nprintf(str);", "\n}", "\n\u8bf7\u95ee\u8fd0\u884cTest \u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n\u7b54\uff1a\u65e0\u6548\u7684\u6307\u9488\uff0c\u8f93\u51fa\u4e0d\u786e\u5b9a", "\n5. \u7f16\u5199strcat\u51fd\u6570(6\u5206)", "\n\u5df2\u77e5strcat\u51fd\u6570\u7684\u539f\u578b\u662fchar *strcat (char *strDest, const char *strSrc);", "\n\u5176\u4e2dstrDest \u662f\u76ee\u7684\u5b57\u7b26\u4e32\uff0cstrSrc \u662f\u6e90\u5b57\u7b26\u4e32\u3002", "\n\uff081\uff09\u4e0d\u8c03\u7528C++/C \u7684\u5b57\u7b26\u4e32\u5e93\u51fd\u6570\uff0c\u8bf7\u7f16\u5199\u51fd\u6570 strcat", "\n\u7b54\uff1a", "\nVC\u6e90\u7801\uff1a", "\nchar * __cdecl strcat (char * dst, const char * src)", "\n{", "\nchar * cp = dst;", "\nwhile( *cp )", "\ncp++; /* find end of dst */", "\nwhile( *cp++ = *src++ ) ; /* Copy src to end of dst */", "\nreturn( dst ); /* return dst */", "\n}", "\n\uff082\uff09strcat\u80fd\u628astrSrc \u7684\u5185\u5bb9\u8fde\u63a5\u5230strDest\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u8981char * \u7c7b\u578b\u7684\u8fd4\u56de\u503c\uff1f", "\n\u7b54\uff1a\u65b9\u4fbf\u8d4b\u503c\u7ed9\u5176\u4ed6\u53d8\u91cf", "\n6.MFC\u4e2dCString\u662f\u7c7b\u578b\u5b89\u5168\u7c7b\u4e48\uff1f", "\n\u7b54\uff1a\u4e0d\u662f\uff0c\u5176\u5b83\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u5230CString\u53ef\u4ee5\u4f7f\u7528CString\u7684\u6210\u5458\u51fd\u6570Format\u6765\u8f6c\u6362", "\n7.C++\u4e2d\u4e3a\u4ec0\u4e48\u7528\u6a21\u677f\u7c7b\u3002", "\n\u7b54\uff1a(1)\u53ef\u7528\u6765\u521b\u5efa\u52a8\u6001\u589e\u957f\u548c\u51cf\u5c0f\u7684\u6570\u636e\u7ed3\u6784", "\n\uff082\uff09\u5b83\u662f\u7c7b\u578b\u65e0\u5173\u7684\uff0c\u56e0\u6b64\u5177\u6709\u5f88\u9ad8\u7684\u53ef\u590d\u7528\u6027\u3002", "\n\uff083\uff09\u5b83\u5728\u7f16\u8bd1\u65f6\u800c\u4e0d\u662f\u8fd0\u884c\u65f6\u68c0\u67e5\u6570\u636e\u7c7b\u578b\uff0c\u4fdd\u8bc1\u4e86\u7c7b\u578b\u5b89\u5168", "\n\uff084\uff09\u5b83\u662f\u5e73\u53f0\u65e0\u5173\u7684\uff0c\u53ef\u79fb\u690d\u6027", "\n\uff085\uff09\u53ef\u7528\u4e8e\u57fa\u672c\u6570\u636e\u7c7b\u578b", "\n8.CSingleLock\u662f\u5e72\u4ec0\u4e48\u7684\u3002", "\n\u7b54\uff1a\u540c\u6b65\u591a\u4e2a\u7ebf\u7a0b\u5bf9\u4e00\u4e2a\u6570\u636e\u7c7b\u7684\u540c\u65f6\u8bbf\u95ee", "\n9.NEWTEXTMETRIC \u662f\u4ec0\u4e48\u3002", "\n\u7b54\uff1a\u7269\u7406\u5b57\u4f53\u7ed3\u6784\uff0c\u7528\u6765\u8bbe\u7f6e\u5b57\u4f53\u7684\u9ad8\u5bbd\u5927\u5c0f", "\n10.\u7a0b\u5e8f\u4ec0\u4e48\u65f6\u5019\u5e94\u8be5\u4f7f\u7528\u7ebf\u7a0b\uff0c\u4ec0\u4e48\u65f6\u5019\u5355\u7ebf\u7a0b\u6548\u7387\u9ad8\u3002", "\n\u7b54\uff1a1\uff0e\u8017\u65f6\u7684\u64cd\u4f5c\u4f7f\u7528\u7ebf\u7a0b\uff0c\u63d0\u9ad8\u5e94\u7528\u7a0b\u5e8f\u54cd\u5e94", "\n2\uff0e\u5e76\u884c\u64cd\u4f5c\u65f6\u4f7f\u7528\u7ebf\u7a0b\uff0c\u5982C/S\u67b6\u6784\u7684\u670d\u52a1\u5668\u7aef\u5e76\u53d1\u7ebf\u7a0b\u54cd\u5e94\u7528\u6237\u7684\u8bf7\u6c42\u3002", "\n3\uff0e\u591aCPU\u7cfb\u7edf\u4e2d\uff0c\u4f7f\u7528\u7ebf\u7a0b\u63d0\u9ad8CPU\u5229\u7528\u7387", "\n4\uff0e\u6539\u5584\u7a0b\u5e8f\u7ed3\u6784\u3002\u4e00\u4e2a\u65e2\u957f\u53c8\u590d\u6742\u7684\u8fdb\u7a0b\u53ef\u4ee5\u8003\u8651\u5206\u4e3a\u591a\u4e2a\u7ebf\u7a0b\uff0c\u6210\u4e3a\u51e0\u4e2a\u72ec\u7acb\u6216\u534a\u72ec", "\n\u7acb\u7684\u8fd0\u884c\u90e8\u5206\uff0c\u8fd9\u6837\u7684\u7a0b\u5e8f\u4f1a\u5229\u4e8e\u7406\u89e3\u548c\u4fee\u6539\u3002", "\n\u5176\u4ed6\u60c5\u51b5\u90fd\u4f7f\u7528\u5355\u7ebf\u7a0b\u3002", "\n11.Windows\u662f\u5185\u6838\u7ea7\u7ebf\u7a0b\u4e48\u3002", "\n\u7b54\uff1a\u89c1\u4e0b\u4e00\u9898", "\n12.Linux\u6709\u5185\u6838\u7ea7\u7ebf\u7a0b\u4e48\u3002", "\n\u7b54\uff1a\u7ebf\u7a0b\u901a\u5e38\u88ab\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u4ee3\u7801\u7684\u4e0d\u540c\u6267\u884c\u8def\u7ebf\u3002\u4ece\u5b9e\u73b0\u65b9\u5f0f\u4e0a\u5212\u5206\uff0c\u7ebf\u7a0b\u6709\u4e24", "\n\u79cd\u7c7b\u578b\uff1a\u201c\u7528\u6237\u7ea7\u7ebf\u7a0b\u201d\u548c\u201c\u5185\u6838\u7ea7\u7ebf\u7a0b\u201d\u3002 \u7528\u6237\u7ebf\u7a0b\u6307\u4e0d\u9700\u8981\u5185\u6838\u652f\u6301\u800c\u5728\u7528\u6237\u7a0b\u5e8f", "\n\u4e2d\u5b9e\u73b0\u7684\u7ebf\u7a0b\uff0c\u5176\u4e0d\u4f9d\u8d56\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u6838\u5fc3\uff0c\u5e94\u7528\u8fdb\u7a0b\u5229\u7528\u7ebf\u7a0b\u5e93\u63d0\u4f9b\u521b\u5efa\u3001\u540c\u6b65\u3001\u8c03\u5ea6", "\n\u548c\u7ba1\u7406\u7ebf\u7a0b\u7684\u51fd\u6570\u6765\u63a7\u5236\u7528\u6237\u7ebf\u7a0b\u3002\u8fd9\u79cd\u7ebf\u7a0b\u751a\u81f3\u5728\u8c61 DOS \u8fd9\u6837\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u4e5f\u53ef\u5b9e\u73b0", "\n\uff0c\u4f46\u7ebf\u7a0b\u7684\u8c03\u5ea6\u9700\u8981\u7528\u6237\u7a0b\u5e8f\u5b8c\u6210\uff0c\u8fd9\u6709\u4e9b\u7c7b\u4f3c Windows 3.x \u7684\u534f\u4f5c\u5f0f\u591a\u4efb\u52a1\u3002\u53e6\u5916\u4e00", "\n\u79cd\u5219\u9700\u8981\u5185\u6838\u7684\u53c2\u4e0e\uff0c\u7531\u5185\u6838\u5b8c\u6210\u7ebf\u7a0b\u7684\u8c03\u5ea6\u3002\u5176\u4f9d\u8d56\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u6838\u5fc3\uff0c\u7531\u5185\u6838\u7684\u5185\u90e8", "\n\u9700\u6c42\u8fdb\u884c\u521b\u5efa\u548c\u64a4\u9500\uff0c\u8fd9\u4e24\u79cd\u6a21\u578b\u5404\u6709\u5176\u597d\u5904\u548c\u7f3a\u70b9\u3002\u7528\u6237\u7ebf\u7a0b\u4e0d\u9700\u8981\u989d\u5916\u7684\u5185\u6838\u5f00\u652f", "\n\uff0c\u5e76\u4e14\u7528\u6237\u6001\u7ebf\u7a0b\u7684\u5b9e\u73b0\u65b9\u5f0f\u53ef\u4ee5\u88ab\u5b9a\u5236\u6216\u4fee\u6539\u4ee5\u9002\u5e94\u7279\u6b8a\u5e94\u7528\u7684\u8981\u6c42\uff0c\u4f46\u662f\u5f53\u4e00\u4e2a\u7ebf", "\n\u7a0b\u56e0 I/O \u800c\u5904\u4e8e\u7b49\u5f85\u72b6\u6001\u65f6\uff0c\u6574\u4e2a\u8fdb\u7a0b\u5c31\u4f1a\u88ab\u8c03\u5ea6\u7a0b\u5e8f\u5207\u6362\u4e3a\u7b49\u5f85\u72b6\u6001\uff0c\u5176\u4ed6\u7ebf\u7a0b\u5f97\u4e0d", "\n\u5230\u8fd0\u884c\u7684\u673a\u4f1a\uff1b\u800c\u5185\u6838\u7ebf\u7a0b\u5219\u6ca1\u6709\u5404\u4e2a\u9650\u5236\uff0c\u6709\u5229\u4e8e\u53d1\u6325\u591a\u5904\u7406\u5668\u7684\u5e76\u53d1\u4f18\u52bf\uff0c\u4f46\u5374\u5360", "\n\u7528\u4e86\u66f4\u591a\u7684\u7cfb\u7edf\u5f00\u652f\u3002", "\nWindows NT\u548cOS/2\u652f\u6301\u5185\u6838\u7ebf\u7a0b\u3002Linux \u652f\u6301\u5185\u6838\u7ea7\u7684\u591a\u7ebf\u7a0b", "\n13.C++\u4e2d\u4ec0\u4e48\u6570\u636e\u5206\u914d\u5728\u6808\u6216\u5806\u4e2d\uff0cNew\u5206\u914d\u6570\u636e\u662f\u5728\u8fd1\u5806\u8fd8\u662f\u8fdc\u5806\u4e2d\uff1f", "\n\u7b54\uff1a\u6808: \u5b58\u653e\u5c40\u90e8\u53d8\u91cf\uff0c\u51fd\u6570\u8c03\u7528\u53c2\u6570,\u51fd\u6570\u8fd4\u56de\u503c\uff0c\u51fd\u6570\u8fd4\u56de\u5730\u5740\u3002\u7531\u7cfb\u7edf\u7ba1\u7406", "\n\u5806: \u7a0b\u5e8f\u8fd0\u884c\u65f6\u52a8\u6001\u7533\u8bf7\uff0cnew \u548c\u3000malloc\u7533\u8bf7\u7684\u5185\u5b58\u5c31\u5728\u5806\u4e0a", "\n14.\u4f7f\u7528\u7ebf\u7a0b\u662f\u5982\u4f55\u9632\u6b62\u51fa\u73b0\u5927\u7684\u6ce2\u5cf0\u3002", "\n\u7b54\uff1a\u610f\u601d\u662f\u5982\u4f55\u9632\u6b62\u540c\u65f6\u4ea7\u751f\u5927\u91cf\u7684\u7ebf\u7a0b\uff0c\u65b9\u6cd5\u662f\u4f7f\u7528\u7ebf\u7a0b\u6c60\uff0c\u7ebf\u7a0b\u6c60\u5177\u6709\u53ef\u4ee5\u540c\u65f6\u63d0", "\n\u9ad8\u8c03\u5ea6\u6548\u7387\u548c\u9650\u5236\u8d44\u6e90\u4f7f\u7528\u7684\u597d\u5904\uff0c\u7ebf\u7a0b\u6c60\u4e2d\u7684\u7ebf\u7a0b\u8fbe\u5230\u6700\u5927\u6570\u65f6\uff0c\u5176\u4ed6\u7ebf\u7a0b\u5c31\u4f1a\u6392\u961f", "\n\u7b49\u5019\u3002", "\n15\u51fd\u6570\u6a21\u677f\u4e0e\u7c7b\u6a21\u677f\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u7b54\uff1a\u51fd\u6570\u6a21\u677f\u7684\u5b9e\u4f8b\u5316\u662f\u7531\u7f16\u8bd1\u7a0b\u5e8f\u5728\u5904\u7406\u51fd\u6570\u8c03\u7528\u65f6\u81ea\u52a8\u5b8c\u6210\u7684\uff0c\u800c\u7c7b\u6a21\u677f\u7684\u5b9e\u4f8b\u5316", "\n\u5fc5\u987b\u7531\u7a0b\u5e8f\u5458\u5728\u7a0b\u5e8f\u4e2d\u663e\u5f0f\u5730\u6307\u5b9a\u3002", "\n16\u4e00\u822c\u6570\u636e\u5e93\u82e5\u51fa\u73b0\u65e5\u5fd7\u6ee1\u4e86\uff0c\u4f1a\u51fa\u73b0\u4ec0\u4e48\u60c5\u51b5\uff0c\u662f\u5426\u8fd8\u80fd\u4f7f\u7528\uff1f", "\n\u7b54\uff1a\u53ea\u80fd\u6267\u884c\u67e5\u8be2\u7b49\u8bfb\u64cd\u4f5c\uff0c\u4e0d\u80fd\u6267\u884c\u66f4\u6539\uff0c\u5907\u4efd\u7b49\u5199\u64cd\u4f5c\uff0c\u539f\u56e0\u662f\u4efb\u4f55\u5199\u64cd\u4f5c\u90fd\u8981\u8bb0", "\n\u5f55\u65e5\u5fd7\u3002\u4e5f\u5c31\u662f\u8bf4\u57fa\u672c\u4e0a\u5904\u4e8e\u4e0d\u80fd\u4f7f\u7528\u7684\u72b6\u6001\u3002", "\n17 SQL Server\u662f\u5426\u652f\u6301\u884c\u7ea7\u9501\uff0c\u6709\u4ec0\u4e48\u597d\u5904\uff1f", "\n\u7b54\uff1a\u652f\u6301\uff0c\u8bbe\u7acb\u5c01\u9501\u673a\u5236\u4e3b\u8981\u662f\u4e3a\u4e86\u5bf9\u5e76\u53d1\u64cd\u4f5c\u8fdb\u884c\u63a7\u5236\uff0c\u5bf9\u5e72\u6270\u8fdb\u884c\u5c01\u9501\uff0c\u4fdd\u8bc1\u6570\u636e", "\n\u7684\u4e00\u81f4\u6027\u548c\u51c6\u786e\u6027\uff0c\u884c\u7ea7\u5c01\u9501\u786e\u4fdd\u5728\u7528\u6237\u53d6\u5f97\u88ab\u66f4\u65b0\u7684\u884c\u5230\u8be5\u884c\u8fdb\u884c\u66f4\u65b0\u8fd9\u6bb5\u65f6\u95f4\u5185\u4e0d", "\n\u88ab\u5176\u5b83\u7528\u6237\u6240\u4fee\u6539\u3002\u56e0\u800c\u884c\u7ea7\u9501\u5373\u53ef\u4fdd\u8bc1\u6570\u636e\u7684\u4e00\u81f4\u6027\u53c8\u80fd\u63d0\u9ad8\u6570\u636e\u64cd\u4f5c\u7684\u8ff8\u53d1\u6027\u3002", "\n18\u5982\u679c\u6570\u636e\u5e93\u6ee1\u4e86\u4f1a\u51fa\u73b0\u4ec0\u4e48\u60c5\u51b5\uff0c\u662f\u5426\u8fd8\u80fd\u4f7f\u7528\uff1f", "\n\u7b54\uff1a\u89c116", "\n19 \u5173\u4e8e\u5185\u5b58\u5bf9\u9f50\u7684\u95ee\u9898\u4ee5\u53casizof()\u7684\u8f93\u51fa", "\n\u7b54\uff1a\u7f16\u8bd1\u5668\u81ea\u52a8\u5bf9\u9f50\u7684\u539f\u56e0\uff1a\u4e3a\u4e86\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6027\u80fd\uff0c\u6570\u636e\u7ed3\u6784\uff08\u5c24\u5176\u662f\u6808\uff09\u5e94\u8be5\u5c3d\u53ef\u80fd", "\n\u5730\u5728\u81ea\u7136\u8fb9\u754c\u4e0a\u5bf9\u9f50\u3002\u539f\u56e0\u5728\u4e8e\uff0c\u4e3a\u4e86\u8bbf\u95ee\u672a\u5bf9\u9f50\u7684\u5185\u5b58\uff0c\u5904\u7406\u5668\u9700\u8981\u4f5c\u4e24\u6b21\u5185\u5b58\u8bbf\u95ee", "\n\uff1b\u7136\u800c\uff0c\u5bf9\u9f50\u7684\u5185\u5b58\u8bbf\u95ee\u4ec5\u9700\u8981\u4e00\u6b21\u8bbf\u95ee\u3002", "\n20 int i=10, j=10, k=3; k*=i+j; k\u6700\u540e\u7684\u503c\u662f\uff1f", "\n\u7b54\uff1a60\uff0c\u6b64\u9898\u8003\u5bdf\u4f18\u5148\u7ea7\uff0c\u5b9e\u9645\u5199\u6210\uff1a k*=(i+j);\uff0c\u8d4b\u503c\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u6700\u4f4e", "\n21.\u5bf9\u6570\u636e\u5e93\u7684\u4e00\u5f20\u8868\u8fdb\u884c\u64cd\u4f5c,\u540c\u65f6\u8981\u5bf9\u53e6\u4e00\u5f20\u8868\u8fdb\u884c\u64cd\u4f5c,\u5982\u4f55\u5b9e\u73b0?", "\n\u7b54\uff1a\u5c06\u64cd\u4f5c\u591a\u4e2a\u8868\u7684\u64cd\u4f5c\u653e\u5165\u5230\u4e8b\u52a1\u4e2d\u8fdb\u884c\u5904\u7406", "\n22.TCP/IP \u5efa\u7acb\u8fde\u63a5\u7684\u8fc7\u7a0b?(3-way shake)", "\n\u7b54\uff1a\u5728TCP/IP\u534f\u8bae\u4e2d\uff0cTCP\u534f\u8bae\u63d0\u4f9b\u53ef\u9760\u7684\u8fde\u63a5\u670d\u52a1\uff0c\u91c7\u7528\u4e09\u6b21\u63e1\u624b\u5efa\u7acb\u4e00\u4e2a\u8fde\u63a5\u3002", "\n\u3000\u3000\u7b2c\u4e00\u6b21\u63e1\u624b\uff1a\u5efa\u7acb\u8fde\u63a5\u65f6\uff0c\u5ba2\u6237\u7aef\u53d1\u9001syn\u5305(syn=j)\u5230\u670d\u52a1\u5668\uff0c\u5e76\u8fdb\u5165SYN_SEND\u72b6", "\n\u6001\uff0c\u7b49\u5f85\u670d\u52a1\u5668\u786e\u8ba4\uff1b", "\n\u7b2c\u4e8c\u6b21\u63e1\u624b\uff1a\u670d\u52a1\u5668\u6536\u5230syn\u5305\uff0c\u5fc5\u987b\u786e\u8ba4\u5ba2\u6237\u7684SYN\uff08ack=j+1\uff09\uff0c\u540c\u65f6\u81ea\u5df1\u4e5f\u53d1\u9001\u4e00\u4e2a", "\nSYN\u5305\uff08syn=k\uff09\uff0c\u5373SYN+ACK\u5305\uff0c\u6b64\u65f6\u670d\u52a1\u5668\u8fdb\u5165SYN_RECV\u72b6\u6001\uff1b", "\n\u3000\u3000\u7b2c\u4e09\u6b21\u63e1\u624b\uff1a\u5ba2\u6237\u7aef\u6536\u5230\u670d\u52a1\u5668\u7684SYN\uff0bACK\u5305\uff0c\u5411\u670d\u52a1\u5668\u53d1\u9001\u786e\u8ba4\u5305ACK(ack=k+1)", "\n\uff0c\u6b64\u5305\u53d1\u9001\u5b8c\u6bd5\uff0c\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u8fdb\u5165ESTABLISHED\u72b6\u6001\uff0c\u5b8c\u6210\u4e09\u6b21\u63e1\u624b\u3002", "\n23.ICMP\u662f\u4ec0\u4e48\u534f\u8bae,\u5904\u4e8e\u54ea\u4e00\u5c42?", "\n\u7b54\uff1aInternet\u63a7\u5236\u62a5\u6587\u534f\u8bae\uff0c\u5904\u4e8e\u7f51\u7edc\u5c42\uff08IP\u5c42\uff09", "\n24.\u89e6\u53d1\u5668\u600e\u4e48\u5de5\u4f5c\u7684?", "\n\u7b54\uff1a\u89e6\u53d1\u5668\u4e3b\u8981\u662f\u901a\u8fc7\u4e8b\u4ef6\u8fdb\u884c\u89e6\u53d1\u800c\u88ab\u6267\u884c\u7684\uff0c\u5f53\u5bf9\u67d0\u4e00\u8868\u8fdb\u884c\u8bf8\u5982UPDATE\u3001 INSERT", "\n\u3001 DELETE \u8fd9\u4e9b\u64cd\u4f5c\u65f6\uff0c\u6570\u636e\u5e93\u5c31\u4f1a\u81ea\u52a8\u6267\u884c\u89e6\u53d1\u5668\u6240\u5b9a\u4e49\u7684SQL \u8bed\u53e5\uff0c\u4ece\u800c\u786e\u4fdd\u5bf9\u6570", "\n\u636e\u7684\u5904\u7406\u5fc5\u987b\u7b26\u5408\u7531\u8fd9\u4e9bSQL \u8bed\u53e5\u6240\u5b9a\u4e49\u7684\u89c4\u5219\u3002", "\n25.winsock\u5efa\u7acb\u8fde\u63a5\u7684\u4e3b\u8981\u5b9e\u73b0\u6b65\u9aa4?", "\n\u7b54\uff1a\u670d\u52a1\u5668\u7aef\uff1asocker()\u5efa\u7acb\u5957\u63a5\u5b57\uff0c\u7ed1\u5b9a\uff08bind\uff09\u5e76\u76d1\u542c\uff08listen\uff09\uff0c\u7528accept\uff08\uff09", "\n\u7b49\u5f85\u5ba2\u6237\u7aef\u8fde\u63a5\u3002", "\n\u5ba2\u6237\u7aef\uff1asocker()\u5efa\u7acb\u5957\u63a5\u5b57\uff0c\u8fde\u63a5\uff08connect\uff09\u670d\u52a1\u5668\uff0c\u8fde\u63a5\u4e0a\u540e\u4f7f\u7528send()\u548crecv\uff08", "\n\uff09\uff0c\u5728\u5957\u63a5\u5b57\u4e0a\u5199\u8bfb\u6570\u636e\uff0c\u76f4\u81f3\u6570\u636e\u4ea4\u6362\u5b8c\u6bd5\uff0cclosesocket()\u5173\u95ed\u5957\u63a5\u5b57\u3002", "\n\u670d\u52a1\u5668\u7aef\uff1aaccept\uff08\uff09\u53d1\u73b0\u6709\u5ba2\u6237\u7aef\u8fde\u63a5\uff0c\u5efa\u7acb\u4e00\u4e2a\u65b0\u7684\u5957\u63a5\u5b57\uff0c\u81ea\u8eab\u91cd\u65b0\u5f00\u59cb\u7b49\u5f85\u8fde", "\n\u63a5\u3002\u8be5\u65b0\u4ea7\u751f\u7684\u5957\u63a5\u5b57\u4f7f\u7528send()\u548crecv\uff08\uff09\u5199\u8bfb\u6570\u636e\uff0c\u76f4\u81f3\u6570\u636e\u4ea4\u6362\u5b8c\u6bd5\uff0cclosesock", "\net()\u5173\u95ed\u5957\u63a5\u5b57\u3002", "\n26.\u52a8\u6001\u8fde\u63a5\u5e93\u7684\u4e24\u79cd\u65b9\u5f0f?", "\n\u7b54\uff1a\u8c03\u7528\u4e00\u4e2aDLL\u4e2d\u7684\u51fd\u6570\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a", "\n1\uff0e\u8f7d\u5165\u65f6\u52a8\u6001\u94fe\u63a5\uff08load-time dynamic linking\uff09\uff0c\u6a21\u5757\u975e\u5e38\u660e\u786e\u8c03\u7528\u67d0\u4e2a\u5bfc\u51fa\u51fd\u6570", "\n\uff0c\u4f7f\u5f97\u4ed6\u4eec\u5c31\u50cf\u672c\u5730\u51fd\u6570\u4e00\u6837\u3002\u8fd9\u9700\u8981\u94fe\u63a5\u65f6\u94fe\u63a5\u90a3\u4e9b\u51fd\u6570\u6240\u5728DLL\u7684\u5bfc\u5165\u5e93\uff0c\u5bfc\u5165\u5e93\u5411", "\n\u7cfb\u7edf\u63d0\u4f9b\u4e86\u8f7d\u5165DLL\u65f6\u6240\u9700\u7684\u4fe1\u606f\u53caDLL\u51fd\u6570\u5b9a\u4f4d\u3002", "\n2\uff0e\u8fd0\u884c\u65f6\u52a8\u6001\u94fe\u63a5\uff08run-time dynamic linking\uff09\uff0c\u8fd0\u884c\u65f6\u53ef\u4ee5\u901a\u8fc7LoadLibrary\u6216Loa", "\ndLibraryEx\u51fd\u6570\u8f7d\u5165DLL\u3002DLL\u8f7d\u5165\u540e\uff0c\u6a21\u5757\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528GetProcAddress\u83b7\u53d6DLL\u51fd\u6570\u7684", "\n\u51fa\u53e3\u5730\u5740\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7\u8fd4\u56de\u7684\u51fd\u6570\u6307\u9488\u8c03\u7528DLL\u51fd\u6570\u4e86\u3002\u5982\u6b64\u5373\u53ef\u907f\u514d\u5bfc\u5165\u5e93\u6587\u4ef6\u4e86", "\n\u3002", "\n27.IP\u7ec4\u64ad\u6709\u90a3\u4e9b\u597d\u5904?", "\n\u7b54\uff1aInternet\u4e0a\u4ea7\u751f\u7684\u8bb8\u591a\u65b0\u7684\u5e94\u7528\uff0c\u7279\u522b\u662f\u9ad8\u5e26\u5bbd\u7684\u591a\u5a92\u4f53\u5e94\u7528\uff0c\u5e26\u6765\u4e86\u5e26\u5bbd\u7684\u6025\u5267", "\n\u6d88\u8017\u548c\u7f51\u7edc\u62e5\u6324\u95ee\u9898\u3002\u7ec4\u64ad\u662f\u4e00\u79cd\u5141\u8bb8\u4e00\u4e2a\u6216\u591a\u4e2a\u53d1\u9001\u8005\uff08\u7ec4\u64ad\u6e90\uff09\u53d1\u9001\u5355\u4e00\u7684\u6570\u636e\u5305", "\n\u5230\u591a\u4e2a\u63a5\u6536\u8005\uff08\u4e00\u6b21\u7684\uff0c\u540c\u65f6\u7684\uff09\u7684\u7f51\u7edc\u6280\u672f\u3002\u7ec4\u64ad\u53ef\u4ee5\u5927\u5927\u7684\u8282\u7701\u7f51\u7edc\u5e26\u5bbd\uff0c\u56e0\u4e3a\u65e0", "\n\u8bba\u6709\u591a\u5c11\u4e2a\u76ee\u6807\u5730\u5740\uff0c\u5728\u6574\u4e2a\u7f51\u7edc\u7684\u4efb\u4f55\u4e00\u6761\u94fe\u8def\u4e0a\u53ea\u4f20\u9001\u5355\u4e00\u7684\u6570\u636e\u5305\u3002\u6240\u4ee5\u8bf4\u7ec4\u64ad", "\n\u6280\u672f\u7684\u6838\u5fc3\u5c31\u662f\u9488\u5bf9\u5982\u4f55\u8282\u7ea6\u7f51\u7edc\u8d44\u6e90\u7684\u524d\u63d0\u4e0b\u4fdd\u8bc1\u670d\u52a1\u8d28\u91cf\u3002", "\n\u534e\u4e3a\u7b14\u8bd5", "\u4e00\u3001\u5224\u65ad\u9898\uff08\u5bf9\u7684\u5199T\uff0c\u9519\u7684\u5199F\u5e76\u8bf4\u660e\u539f\u56e0\uff0c\u6bcf\u5c0f\u98984\u5206\uff0c\u517120\u5206\uff09", "\n1\u3001\u6709\u6570\u7ec4\u5b9a\u4e49int a[2][2]={{1},{2,3}};\u5219a[0][1]\u7684\u503c\u4e3a0\u3002\uff08     \u6b63\u786e \uff09", "\n2\u3001int (*ptr) (),\u5219ptr\u662f\u4e00\u7ef4\u6570\u7ec4\u7684\u540d\u5b57\u3002\uff08 \u9519\u8bef   int (*ptr) ();\u5b9a\u4e49\u4e00\u4e2a\u6307\u5411\u51fd\u6570\u7684\u6307\u9488\u53d8\u91cf     \uff09", "\n3\u3001\u6307\u9488\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\u90fd\u53ef\u8fdb\u884c>,=,\n4\u3001switch(c) \u8bed\u53e5\u4e2dc\u53ef\u4ee5\u662fint ,long,char ,float ,unsigned int \u7c7b\u578b\u3002\uff08   \u9519\uff0c\u4e0d\u80fd\u7528\u5b9e\u5f62 \uff09", "\n\u4e8c\u3001\u586b\u7a7a\u9898\uff08\u517130\u5206\uff09", "\n1\u3001\u5728windows\u4e0b\uff0c\u5199\u51fa\u8fd0\u884c\u7ed3\u679c\uff0c\u6bcf\u7a7a2\u5206\uff0c\u517110\u5206\u3002", "\nchar str[ ]= \uff02Hello\uff02;", "\nchar *p=str;", "\nint n=10;", "\nsizeof(str)=(       )", "\nsizeof(p)=(        )", "\nsizeof(n)=(        )", "\nvoid func(char str[100]){     }", "\nsizeof(str)=(      )", "\n\u7b54\u6848\uff1a6\uff0c4\uff0c4\uff0c4", "\n2\u3001void getmemory(char **p, int num)", "\n{ *p=(char *) malloc(num);}", "\nvoid test(void)", "\n{   char *str=NULL;", "\n    getmemory(&str,100);", "\n    strcpy(str,\uff02hello\uff02);", "\n    printf(str);", "\n}", "\n\u8fd0\u884ctest\u51fd\u6570\u6709\u4ec0\u4e48\u7ed3\u679c\uff1f10\u5206", "\n\u7b54\u6848\uff1a\u8f93\u51fahello\uff0c\u4f46\u662f\u53d1\u751f\u5185\u5b58\u6cc4\u6f0f\u3002", "\n3\u3001\u8bbeint arr[]={6,7,8,9,10};", "\n      int *ptr=arr;", "\n    *(ptr++)+=123;", "\nprintf(\uff02%d,%d\uff02,*ptr,*(++ptr));", "\n(                                    ) 10\u5206", "\n\u7b54\u6848\uff1a8\uff0c8\u3002\u8fd9\u9053\u9898\u76ee\u7684\u610f\u4e49\u4e0d\u5927\uff0c\u56e0\u4e3a\u5728\u4e0d\u540c\u7684\u7f16\u8bd1\u5668\u91ccprintf\u7684\u53c2\u6570\u7684\u65b9\u5411\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u5728vc6.0\u4e0b\u662f\u4ece\u6709\u5230\u5de6\uff0c\u8fd9\u91cc\u5148*(++ptr) \u540e*pt\uff0c\u4e8e\u662f\u7ed3\u679c\u4e3a8\uff0c8", "\n\u4e8c\u3001\u7f16\u7a0b\u9898\uff08\u7b2c\u4e00\u5c0f\u989820\uff0c\u7b2c\u4e8c\u5c0f\u989830\u5206\uff09", "\n1\u3001   \u4e0d\u4f7f\u7528\u5e93\u51fd\u6570\uff0c\u7f16\u5199\u51fd\u6570int strcmp(char   *source, char *dest)", "\n\u76f8\u7b49\u8fd4\u56de0\uff0c\u4e0d\u7b49\u8fd4\u56de-1\uff1b", "\n\u7b54\u6848\uff1a\u4e00\u3001", "\nint strcmp(char   *source, char *dest)", "\n{", "\nassert((source!=NULL)&&(dest!=NULL));", "\nint i,j;", "\nfor(i=0; source[i]==dest[i]; i++)", "\n{", "\n   if(source[i]=='\\0' && dest[i]=='\\0')", "\n    return 0;", "\n   else", "\n    return -1;", "\n}", "\n}", "\n\u7b54\u6848\uff1a\u4e8c\u3001", "\nint strcmp(char *source, char *dest)", "\n{", "\n     while ( (*source != '\\0') && (*source == *dest))", "\n     {", "\nsource++;", "\ndest++;", "\n     }", "     return ( (*source) - (*dest) ) ? -1 : 0;", "}", "\n2\u3001   \u5199\u4e00\u51fd\u6570int fun(char *p)\u5224\u65ad\u4e00\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u56de\u6587\uff0c\u662f\u8fd4\u56de1\uff0c\u4e0d\u662f\u8fd4\u56de0\uff0c\u51fa\u9519\u8fd4\u56de-1", "\n\u7b54\u6848\uff1a\u4e00\u3001", "\nint fun(char *p)", "\n{", "\nif(p==NULL)", "\n   return -1;", "\nelse", "\n{", "\n   int length = 0;", "\n   int i = 0;", "\n   int judge = 1;", "\n   length = strlen(p);", "\n   for(i=0; i", "\n   {", "\n    if(p[i]!=p[length-1-i])", "\n     judge = 0;", "\n    break;", "\n   }", "\n   if(judge == 0)", "\n    return 0;", "\n   else", "\n    return 1;", "\n}", "\n}", "\n\u7b54\u6848\uff1a\u4e8c\u3001", "\nint fun(char *p)", "\n{", "\n     int len = strlen(p) - 1;", "\n     char *q = p + len;", "\n     if (!p)", "\n         return -1;", "     while (p \n         if ((*p++) != (*q--))", "\n             return 0;", "\n     }", "     return 1;", "}", "\u534e\u4e3a\u7b14\u8bd5", "\n\u627e\u9519", "\nVoid test1()", "\n{", "\nchar string[10];", "\nchar* str1=\u201d0123456789\u201d;", "\nstrcpy(string, str1);", "\n}", "Void test2()", "\n{", "\nchar string[10], str1[10];", "\nfor(I=0; I\n{", "\nstr1[i] =\u2019a\u2019;", "\n}", "\nstrcpy(string, str1);", "\n}", "Void test3(char* str1)", "\n{", "\nchar string[10];", "\nif(strlen(str1)\n{", "\nstrcpy(string, str1);", "\n}", "\n}", "2. \u627e\u9519", "\n#define MAX_SRM 256", "DSN get_SRM_no()", "\n{", "\nstatic int SRM_no;", "\nint I;", "\nfor(I=0;I", "\n{", "\nSRM_no \uff05= MAX_SRM;", "\nif(MY_SRM.state==IDLE)", "\n{", "\nbreak;", "\n}", "\n}", "\nif(I>=MAX_SRM)", "\nreturn (NULL_SRM);", "\nelse", "\nreturn SRM_no;", "\n}", "3. \u5199\u51fa\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u679c", "int sum(int a)", "\n{", "\nauto int c=0;", "\nstatic int b=3;", "\nc+=1;", "\nb+=2;", "\nreturn(a+b+C);", "\n}", "void main()", "\n{", "\nint I;", "\nint a=2;", "\nfor(I=0;I\n{", "\nprintf(\u201c\uff05d,\u201d, sum(a));", "\n}", "\n}", "4. ", "int func(int a)", "\n{", "\nint b;", "\nswitch(a)", "\n{", "\ncase 1: 30;", "\ncase 2: 20;", "\ncase 3: 16;", "\ndefault: 0", "\n}", "\nreturn b;", "\n}", "\n\u5219func(1)=?", "5:", "\nint a[3];", "\na[0]=0; a[1]=1; a[2]=2;", "\nint *p, *q;", "\np=a;", "\nq=&a[2];", "\n\u5219a[q-p]=?", "6.", "\n\u5b9a\u4e49 int **a[3][4], \u5219\u53d8\u91cf\u5360\u6709\u7684\u5185\u5b58\u7a7a\u95f4\u4e3a\uff1a_____", "7.", "\n\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u8981\u6c42\u8f93\u5165\u5e74\u6708\u65e5\u65f6\u5206\u79d2\uff0c\u8f93\u51fa\u8be5\u5e74\u6708\u65e5\u65f6\u5206\u79d2\u7684\u4e0b\u4e00\u79d2\u3002\u5982\u8f93\u51652004\u5e7412\u670831\u65e523\u65f659\u520659\u79d2\uff0c\u5219\u8f93\u51fa2005\u5e741\u67081\u65e50\u65f60\u52060\u79d2\u3002", "1\u3001\t\u5728\u4e00\u4e2a\u4ee5\u592a\u7f51\u4e2d\uff0c30\u53f0PC\u901a\u8fc7QUTDWAY R2501\u8def\u7531\u5668S0\u53e3\u8fde\u63a5INTERNET\uff0cQUIDWAY R2501\u8def\u7531\u5668\u914d\u7f6e\u5982\u4e0b\uff1a", "\nQutidway(config-if-e0)#ip address 192.168.1.1.255.255.255.0", "\nQutidway(config-if-e0)eixt", "\nQutidway(config)#interface s0", "\nQutidway(config-if-s0)#ip address 211.136.3.6.255.255.255.252", "\nQutidway(config-if-s0)#encapsulation ppp", "\n\u4e00\u53f0PC\u673a\u9ed8\u8ba4\u7f51\u5173\u4e3a192.168.2.1,\u8def\u7531\u5668\u4f1a\u600e\u6837\u5904\u7406\u53d1\u81ea\u8fd9\u53f0PC\u7684\u6570\u636e\u5305\uff1f", "\nA\uff0e \u8def\u7531\u5668\u4f1a\u8ba4\u4e3a\u53d1\u81ea\u8fd9\u4e00\u53f0PC\u7684\u6570\u636e\u5305\u4e0d\u5728\u540c\u4e00\u7f51\u6bb5\uff0c\u4e0d\u8f6c\u53d1\u6570\u636e\u5305", "\nB\uff0e \u8def\u7531\u5668\u4f1a\u81ea\u52a8\u4fee\u6b63\u8fd9\u4e00\u53f0PC\u673a\u7684IP\u5730\u5740\uff0c\u8f6c\u53d1\u6570\u636e\u5305", "\nC\uff0e \u8def\u7531\u5668\u4e22\u5f03\u6570\u636e\u5305\uff0c\u8fd9\u65f6\u5019\u9700\u8981\u91cd\u542f\u8def\u7531\u5668\uff0c\u8def\u7531\u5668\u81ea\u52a8\u4fee\u6b63\u8bef\u914d", "\nD\uff0e \u8def\u7531\u5668\u4e22\u5f03\u6570\u636e\u5305\uff0c\u4e0d\u505a\u4efb\u4f55\u5904\u7406\uff0c\u9700\u8981\u91cd\u914dPC\u7f51\u5173\u4e3a192.168.1.1", "\n2\u3001\u5173\u4e8eMAC\u5730\u5740\u8868\u793a\u6b63\u786e\u7684\u662f\uff08 \uff09", "\nA\u300100-e0-fe-01-23-45", "\nB\u300100e0.fe01.2345", "\nC\u300100e.0fe.-012.345", "\nD\u300100e0.fe112345", "\n3\u3001\u8def\u7531\u5668\u4f5c\u4e3a\u7f51\u7edc\u4e92\u8fde\u8bbe\u5907\uff0c\u5fc5\u987b\u5177\u5907\u4ee5\u4e0b\u54ea\u4e9b\u7279\u70b9\uff08 \uff09", "\nA\u3001 \u652f\u6301\u8def\u7531\u534f\u8bae", "\nB\u3001 \u81f3\u5c11\u5177\u5907\u4e00\u4e2a\u5907\u4efd\u53e3", "\nC\u3001 \u5230\u5c11\u652f\u6301\u4e24\u4e2a\u7f51\u7edc\u63a5\u53e3", "\nD\u3001 \u534f\u8bae\u81f3\u5c11\u8981\u5b9e\u73b0\u5230\u7f51\u7edc\u5c42", "\nE\u3001 \u5177\u6709\u5b58\u50a8\u3001\u8f6c\u53d1\u548c\u5bfb\u5f84\u529f\u80fd", "\nF\u3001 \u81f3\u5c11\u652f\u6301\u4e24\u79cd\u4ee5\u4e0a\u7684\u5b50\u7f51\u534f\u8bae", "\n4\u3001\u67d0\u53f0\u8def\u7531\u5668\u6709\u4e24\u4e2a\u4ee5\u592a\u7f51\u63a5\u53e3\uff0c\u5206\u522b\u4e0e\u4e0d\u540c\u7f51\u6bb5\u7684\u4ee5\u592a\u7f51\u76f8\u8fde\uff0c\u8bf7\u95ee\uff1a\u8be5\u8def\u7531\u5668\u6700\u591a\u53ef\u6709\u51e0\u7ec4\uff1f\uff08 \uff09", "\nA\u3001 1\u4e2a", "\nB\u3001 2\u4e2a", "\nC\u3001 3\u4e2a", "\nD\u3001 4\u4e2a", "\nE\u3001 \u591a\u4e8e\u56db\u4e2a\u3002", "\n5\u3001\u914d\u7f6e\u5907\u4efd\u4e2d\u5fc3\u7684\u76ee\u7684\u662f\uff08 \uff09", "\nA\u3001 \u589e\u52a0\u7f51\u7edc\u5e26\u5bbd", "\nB\u3001 \u63d0\u9ad8\u7f51\u7edc\u53ef\u7528\u6027", "\nC\u3001 \u964d\u4f4e\u7f51\u7edc\u4f20\u8f93\u8d39\u7528", "\nD\u3001 \u9632\u6b62\u6570\u636e\u4f20\u8f93\u610f\u5916\u4e2d\u6b62", "\n6\u3001X.25\u4f5c\u4e3a\u56fd\u9645\u901a\u7528\u6807\u51c6\u7684\u5e7f\u57df\u7f51\u534f\u8bae\uff0c\u5185\u7f6e\u7684\u5dee\u9519\u7ea0\u6b63\uff0c\u6d41\u91cf\u63a7\u5236\u548c\u4e22\u5305\u91cd\u4f20\u673a\u5236\u4f7f\u4e4b\u5177\u6709\u9ad8\u5ea6\u7684\u53ef\u9760\u6027\uff0c\u7531\u4e8e\u6570\u636e\u541e\u5410\u7387\u5f88\u4f4e\uff0c\u5305\u65f6\u5ef6\u8f83\u5927\uff0c\u6545\u4e0d\u9002\u4e8e\u5728\u8d28\u91cf\u5dee\u7684\u4fe1\u9053\u4e0a\u4f20\u8f93\u6570\u636e\uff0c\u8fd9\u79cd\u8bf4\u6cd5\u6b63\u786e\u5417\uff1f( )", "\nA\u3001True", "\nB\u3001False", "\n7\u3001V\uff0e24\u63a5\u53e3\u5de5\u4f5c\u5728\u540c\u6b65\u65b9\u5f0f\u4e0b\u6700\u9ad8\u4f20\u8f93\u901f\u7387\u662f\uff08 \uff09", "\nA\u3001 64000bps", "\nB\u3001 115200 bps", "\nC\u3001 2048000 bps", "\nD\u3001 4096000 bps", "\n8\u3001\u4e0b\u5217\u90a3\u4e00\u6761\u547d\u4ee4\u7528\u4e8e\u914d\u7f6eDDR\u7684\u94fe\u8def\u5904\u4e8e\u65ad\u5f00\u72b6\u6001\u540e\uff0c\u91cd\u65b0\u5efa\u7acb\u94fe\u63a5\u7b49\u5f85\u7684\u65f6\u95f4\uff1f( )", "\nA\u3001 diater idte-timeout", "\nB\u3001 diater fast-idle", "\nC\u3001 diater enable-timeout", "\nD\u3001 diater wait-for-carmer-time", "\n9\u3001ISDN\u7684\u7269\u7406\u7ebf\u8def\u662f\uff08 \uff09", "\nA\u30012B+D", "\nB\u300130B+D", "\nC\u3001\u540c\u8f74\u7535\u7f06", "\nD\u3001\u666e\u901a\u7535\u7f06", "\n10\u3001Qutidway\u8def\u7531\u5668\u4e0a\u8f93\u5165\u201cshow ip rip\u201c\u547d\u4ee4\uff0c\u5982\u4e0b\u6240\u793a\uff1a", "\nQutidway#show ip rip", "\nRIP is rurining on", "\nCheckcero is on defauit-metric 16", "\nOn neighter", "\nFictucrik all", "\nBUTO-surttutiry is on preference 100", "\n\u4e0b\u5217\u8bf4\u6cd5\u6b63\u786e\u7684\u662f\uff1a( )", "\nA\u3001 \u8be5\u6761\u547d\u4ee4\u663e\u793a\u4e86RIP\u5f53\u524d\u8fd0\u884c\u72b6\u6001\u548c\u914d\u7f6e\u4fe1\u606f", "\nB\u3001 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cRIP\u8def\u7531\u534f\u8bae\u4f18\u5148\u7ea7\u4e3a100\uff0c\u53ef\u80fd\u901a\u8fc7\u201cIP RIP PRICRITY\u201d\u547d\u4ee4\u4fee\u6539\u5176\u4f18\u5148\u7ea7", "\nC\u3001 \u8fd9\u6761\u547d\u4ee4\u663e\u793a\u8def\u7531\u5668\u6240\u6709\u63a5\u53e3\u7528\u4e86RIP\u534f\u8bae\uff0c\u6700\u5927\u53ef\u8fbe\u7edf\u8ba1\u6570\u4e3a1G", "\nD\u3001 ON NEIGHBOR\u663e\u793a\u8fd9\u53f0\u8def\u7531\u5668\u6ca1\u6709\u4f5c\u4e3a\u4efb\u4f55\u5176\u5b83\u8def\u7531\u5668\u7684\u90bb\u5c45", "\n11.\u6570\u636e\u5206\u6bb5\u662fOSI\u4e03\u5c42\u6a21\u578b\u4e2d\u7684\uff08 \uff09\u5b8c\u6210\u7684", "\nA\u3001 \u7269\u7406\u5c42", "\nB\u3001 \u7f51\u7edc\u5c42", "\nC\u3001 \u4f20\u8f93\u5c42", "\nD\u3001 \u63a5\u5165\u5c42", "\nE\u3001 \u5206\u53d1\u5c42", "\nF\u3001 \u6570\u636e\u94fe\u8def\u5c42", "\n12.\u5bf9\u4e8e10M\u4ee5\u592a\u7f51\uff08 \uff09\u662f\u76ee\u524d\u4f7f\u7528\u6700\u5e7f\u6cdb\u7684\u4ee5\u592a\u7f51\u7535\u7f06\u6807\u51c6\uff0c\u5176\u4f18\u70b9\u4e3a\uff1a\u6613\u4e8e\u6269\u5c55\uff0c\u7ef4\u62a4\u7b80\u5355\uff0c\u4ef7\u683c\u4f4e\u5ec9\u3002", "\nA\u3001 10BASE\u7c97\u540c\u8f74\u7535\u7f06", "\nB\u3001 10BASE-T", "\nC\u3001 10BASE2\u7ec6\u540c\u8f74\u7535\u7f06", "\n13.\u7528\u6765\u68c0\u67e5\u5230\u4e00\u53f0\u4e3b\u673a\u7684\u7f51\u7edc\u5c42\u662f\u5426\u8fde\u901a\u547d\u4ee4\u662f\uff08 \uff09", "\nA\u3001 PING", "\nB\u3001 TRACERT", "\nC\u3001 TELNET", "\nD\u3001 IPCONFIG", "\n14.\u4e0b\u9762\u9009\u9879\u4e2d\u54ea\u4e9b\u662f\u6570\u636e\u94fe\u8def\u5c42\u7684\u4e3b\u8981\u529f\u80fd\uff1a( )", "\nA\u3001\u63d0\u4f9b\u5bf9\u7269\u7406\u5c42\u7684\u63a7\u5236", "\nB\u3001\u5dee\u9519\u63a7\u5236", "\nC\u3001\u6d41\u91cf\u63a7\u5236", "\nD\u3001 \u51b3\u5b9a\u4f20\u8f93\u62a5\u6587\u7684\u6700\u4f73\u8def\u7531", "\n15.OSI\u53c2\u8003\u6a21\u578b\u662f\u7531\u4e0b\u5217\u9009\u9879\u4e2d\u54ea\u4e2a\u7ec4\u7ec7\u63d0\u51fa\uff1a( )", "\nA\u3001 IEEE", "\nB\u3001 \u7f8e\u56fd\u56fd\u5bb6\u6807\u51c6\u5c40\uff08ANSI\uff09", "\nC\u3001 EIA/TIA", "\nD\u3001 IBA", "\nE\u3001 ISO", "\n16.\u5e94\u7528\u7a0b\u5e8fPING\u53d1\u51fa\u7684\u662f\uff08 \uff09\u62a5\u6587", "\nA\u3001 TCP\u8bf7\u6c42", "\nB\u3001 TCP\u5e94\u7b54\u62a5\u6587", "\nC\u3001 ICMP\u8bf7\u6c42\u62a5\u6587", "\nD\u3001 ICMP\u5e94\u7b54\u62a5\u6587", "\n17.\u4e0b\u9762\u5c5e\u4e8e\u7269\u7406\u5c42\u7684\u8bbe\u5907\u662f\uff08 \uff09", "\nA\u3001 \u7f51\u6865", "\nB\u3001 \u7f51\u5173", "\nC\u3001 \u4e2d\u7ee7\u5668", "\nD\u3001 \u4ee5\u592a\u7f51\u4ea4\u6362\u673a", "\n18.ATM\u662f\u4e00\u79cd\u9762\u5411\u94fe\u63a5\u7684\u6280\u672f\uff0c\u4e3a\u5728\u4ea4\u6362\u5f0fWAN\u6216LAN\u4e3b\u5e72\u7f51\u9ad8\u901f\u4f20\u8f93\u6570\u636e\u63d0\u4f9b\u4e86\u901a\u7528\u7684\u901a\u4fe1\u673a\u5236( )", "\nA\u3001TRUE", "\nB\u3001FALSE", "\n19.\u8bbe\u5b9a\u8def\u7531\u5668\u5728\u6307\u5b9a\u5907\u4efd\u7ec4\u4e2d\u5de5\u4f5c\u4e3a\u62a2\u5360\u6a21\u5f0f\u7684\u547d\u4ee4\u662f\uff08 \uff09", "\nA\u3001 standby[group-number] ip [virtual-address]", "\nB\u3001 standby[group-number] priority-value]", "\nC\u3001 standby[group-number] preempt", "\nD\u3001 standby[group-number] authentication [string]", "\n20\u3001\u67e5\u770b\u5e27\u4e2d\u7ee7PVC\u8def\u7531\u8868\u7684\u547d\u4ee4\u662f\uff08 \uff09", "\nA\u3001 show frame-relay pvc", "\nB\u3001 show frame-relay route", "\nC\u3001 show frame-relay pvc route", "\nD\u3001 show rame-relay map", "\n21\u3001\u5e27\u4e2d\u7ee7LMI\u4e00\u822c\u5360\u7528\u54ea\u51e0\u4e2aDLCI\uff08 \uff09", "\nA\u3001 0", "\nB\u3001 16", "\nC\u3001 1007", "\nD\u3001 1023", "\n22\u3001PPP\u534f\u8bae\u4e2d\uff0c\uff08 \uff09\u4e3b\u8981\u7528\u4e8e\u534f\u5546\u5728\u8be5\u6570\u636e\u94fe\u8def\u4e0a\u6240\u4f20\u8f93\u7684\u6570\u636e\u5305\u7684\u683c\u5f0f\u4e0e\u7c7b\u578b", "\nA\u3001 \u94fe\u8def\u63a7\u5236\u534f\u8bae", "\nB\u3001 PPP\u6269\u5c55\u534f\u8bae", "\nC\u3001 \u7f51\u7edc\u5c42\u63a7\u5236\u534f\u8bae", "\nD\u3001 PAP\u3001CHAP\u534f\u8bae", "\n23\u3001\u4f60\u5728\u914d\u7f6eX.25\u7f51\u7edc\u65f6\u600e\u6837\u914d\u7f6e\u63a5\u53e3\u7684X.121\u5730\u5740\uff1f\uff08 \uff09", "\nA\u3001 Quidway#x.25 address 321469056102", "\nB\u3001 Quidway (config)#x.25address 892735559329", "\nC\u3001 Quidway(config-if-s0)x25 address 326505160178", "\nD\u3001 Quidway(config-fi-s0)#x.25 address x.121 329056171", "\n24\u3001\u4e0b\u9762\u54ea\u4e00\u7ec4\u662fQuidway\u8def\u7531\u5668\u5c01\u88c5x.25\u534f\u8bae\u9ed8\u8ba4\u7684WIN\u3001MOD\u3001OPS\u7684\u7f3a\u7701\u503c\uff08 \uff09", "\nA\u30012\u30018\u3001128", "\nB\u30018\u30018\u3001128", "\nC\u30018\u3001128\u30018", "\nD\u30012\u3001128\u3001128", "\n25\u3001\u5e27\u4e2d\u7ee7\u662f\u4e00\u79cd\uff08 \uff09\u7684\u534f\u8bae", "\nA\u3001 \u9762\u5411\u8fde\u63a5", "\nB\u3001 \u7f51\u7edc\u534f\u8bae", "\nC\u3001 \u9762\u79ef\u65e0\u8fde\u63a5", "\nD\u3001 \u53ef\u9760", "\n26\u3001ARP\u662f\u4e00\u4e2a\u4f7f\u7528\u5e7f\u64ad\u7684\u5730\u5740\u89e3\u6790\u534f\u8bae\uff0c\u5e76\u4e14\u4f7f\u7528\u4e86ARP\u9ad8\u901f\u7f13\u5b58\uff0c\u539f\u56e0\u662f\u4f7f\u7528\u5e7f\u64ad\u4f1a\u8017\u8d39\u5927\u91cf\u5e26\u5bbd\uff08 \uff09", "\nA\u3001TRUE", "\nB\u3001FALSE", "\n27\u3001UDP\u534f\u8bae\u548cTCP\u534f\u8bae\u7684\u5171\u540c\u4e4b\u5904\u6709\uff1a\uff08 \uff09", "\nA\u3001 \u6d41\u91cf\u63a7\u5236", "\nB\u3001 \u91cd\u4f20\u673a\u5236", "\nC\u3001 \u6821\u9a8c\u548c", "\nD\u3001 \u63d0\u4f9b\u76ee\u7684\u3001\u6e90\u7aef\u53e3\u53f7", "\n28\u3001\u82e5\u4e3b\u673aA\u9700\u8981\u77e5\u9053\u4e3b\u673aB\u7684MAC\u5730\u5740\uff0c\u5219\u5c5e\u4e8eARP\u7684\u5de5\u4f5c\u6d41\u7a0b\u4e3a\uff08 \uff09", "\nA\u3001 \u4e3b\u673aA\u5728\u7f51\u7edc\u4e2d\u5e7f\u64adARP\u8bf7\u6c42\u62a5\u6587", "\nB\u3001 \u4e3b\u673aA\u63a5\u6536\u5230\u8bf7\u6c42\u62a5\u6587\u540e\u5c06\u81ea\u5df1\u7684IP\u5730\u5740\u5230MAC\u5730\u5740\u7684\u6620\u5c04\u53d1\u9001\u7ed9\u4e3b\u673aA", "\nC\u3001 \u4e3b\u673aB\u6536\u5230\u8bf7\u6c42\u62a5\u6587\u540e\u5c06\u4e3b\u673a\u7684IP\u5730\u5740\u548cMAC\u5730\u5740\u6620\u5c04\u5b58\u50a8\u5230\u81ea\u5df1\u7684CACHE\u4e2d", "\nD\u3001 \u4e3b\u673aA\u7f13\u5b58\u4e3b\u673aB\u7684IP\u5730\u5740\u5230MAC\u5730\u5740\u7684\u6620\u5c04", "\n29\u3001\u67d0\u516c\u53f8\u7533\u8bf7\u5230\u4e00\u4e2aC\u7c7bIP\u5730\u5740\uff0c\u9700\u8981\u5206\u914d\u7ed98\u4e2a\u5b50\u516c\u53f8\uff0c\u6700\u597d\u7684\u5b50\u7f51\u63a9\u7801\u8bbe\u5e94\u4e3a\uff08 \uff09", "\nA\u3001255.255.255.0", "\nB\u3001255.255.255.128", "\nC\u3001255.255.255.240", "\nD\u3001255.255.255.224", "\n30\u3001\u5728\u5e94\u7528\u5c42\u7684\u5404\u534f\u8bae\u4e2d\uff08 \uff09\u534f\u8bae\u63d0\u4f9b\u6587\u4ef6\u4f20\u8f93\u670d\u52a1", "\nA\u3001 FTP", "\nB\u3001 TELNET", "\nC\u3001 WWW", "\nD\u3001 TFTP", "\n31\u3001QuidwayS2403F\u4ee5\u592a\u7f51\u4ea4\u6362\u673a\u7684\u7528\u6237\u6743\u9650\u7ea7\u522b\u6709\uff08 \uff09", "\nA\u3001 normal", "\nB\u3001 security", "\nC\u3001 monitor", "\nD\u3001 manager", "\n32\u3001\u5bf9\u4e8eQuidway S2403F\u4ee5\u592a\u7f51\u4ea4\u6362\u673a\uff0c\u53ef\u4ee5\u5728\u751f\u6210\u9875\u9762\u914d\u7f6e\uff08 \uff09", "\nA\u3001 \u672c\u4ea4\u6362\u673a\u4f18\u5148\u7ea7", "\nB\u3001 \u63e1\u624b\u65f6\u95f4\u95f4\u9694", "\nC\u3001 \u8f6c\u53d1\u65f6\u95f4", "\nD\u3001 \u7aef\u53e3\u8def\u5f84\u503c", "\n33\u3001\u903b\u8f91\u4e0a\u6240\u6709\u7684\u4ea4\u6362\u673a\u90fd\u7531\uff08 \uff09\u548c\uff08 \uff09\u4e24\u90e8\u5206\u7ec4\u6210", "\nA\u3001 \u6570\u636e\u8f6c\u53d1\u903b\u8f91", "\nB\u3001 \u4ea4\u6362\u6a21\u5757", "\nC\u3001 MAC\u5730\u5740\u8868", "\nD\u3001 \u8f93\u5165/\u8f93\u51fa\u63a5\u53e3", "\n34\u3001\u5173\u4e8eVLAN\u4e0b\u9762\u8bf4\u6cd5\u6b63\u786e\u7684\u662f\uff08 \uff09", "\nA\u3001 \u9694\u79bb\u5e7f\u64ad\u57df", "\nB\u3001 \u76f8\u4e92\u95f4\u901a\u4fe1\u8981\u901a\u8fc7\u8def\u7531\u5668", "\nC\u3001 \u53ef\u4ee5\u9650\u5236\u7f51\u4e0a\u7684\u8ba1\u7b97\u673a\u4e92\u76f8\u8bbf\u95ee\u7684\u6743\u9650", "\nD\u3001 \u53ea\u80fd\u5728\u540c\u4e00\u4e2a\u7269\u7406\u7f51\u7edc\u4e0a\u7684\u4e3b\u673a\u8fdb\u884c\u903b\u8f91\u5206\u7ec4", "\n35\u3001\u5e94\u4f7f\u7528\u54ea\u4e00\u6761\u547d\u4ee4\u6253\u5f00\u8def\u7531\u5668\u4e0a\u7684IPX\u8def\u7531\u529f\u80fd\uff08 \uff09", "\nA\u3001 ipx routing", "\nB\u3001 ipx network", "\nC\u3001 ipx endcapsulation", "\nD\u3001 ipx max-paths", "\n36\u3001( )\u547d\u4ee4\u53ef\u4ee5\u663e\u793a\u63a5\u53e3\u7684IPX\u5730\u5740", "\nA\u3001 show ipx route", "\nB\u3001 show ipx interace", "\nC\u3001 show ipx servers", "\nD\u3001 show ipx traffic", "\n37\u3001\u4e0b\u5217\u54ea\u4e9b\u547d\u4ee4\u53ef\u4ee5\u7528\u6765\u67e5\u770bDDR\u7aef\u53e3\uff08\u5728\u7aef\u53e3 S1 \u4e0a\u914d\u7f6e\uff09\u4fe1\u606f\uff1f\uff08 \uff09", "\nA\u3001 show interface", "\nB\u3001 show running-conting", "\nC\u3001 show interface s1", "\nD\u3001 show diater interface s1", "\n38\u3001ISDN\u57fa\u672c\u901f\u7387\u63a5\u53e3\uff08BRI\uff09\u901f\u7387\u662f\uff08 \uff09", "\nA\u3001 16kbps", "\nB\u3001 64kbps", "\nC\u3001 144kbps", "\nD\u3001 2048kbps", "\n39\u3001HSRP\u5907\u4efd\u7ec4\u6210\u7684\u865a\u62dfMAC\u5730\u5740\u968f\u7740\u751f\u4ea7\u5382\u5bb6\u7684\u4e0d\u540c\u800c\u4e0d\u540c\uff0c\u56e0\u6b64\u53ef\u4ee5\u66f4\u6539\u4ee5\u4e0b\u54ea\u4e00\u6761\u547d\u4ee4\u7528\u6765\u5b9e\u73b0\u865a\u62dfMAC\u5730\u5740\u4ee5\u5b9e\u73b0\u4e0e\u5176\u5b83\u5382\u5bb6\u8def\u7531\u5668\u7684\u4e92\u8fde\uff08 \uff09", "\nA\u3001 standby bia xx-xx-xx-xx-xx", "\nB\u3001 standby use-bia xx-xx-xx-xx-xx", "\nC\u3001 standby ovmac xx-xx-xx-xx-xx", "\nD\u3001 standby use-ovmac xx-xx-xx-xx-xx", "\n40\u3001\u4e0b\u5217\u90a3\u4e00\u4e2a\u547d\u4ee4\u7528\u4e8e\u6307\u5b9a\u7269\u7406\u63a5\u53e3\u505a\u5907\u4efd\u63a5\u53e3\uff1f\uff08 \uff09", "\nA\u3001 Quidway(config)#backup intertace s0", "\nB\u3001 Quidway(config-s1)#backup s0", "\nC\u3001 Quidway(config)#backup s0", "\nD\u3001 Quidway(config-if-s1)#hackup intertace s0", "\n41\u3001\u5bf9\u4e8e\u4e00\u4e2a\u6ca1\u6709\u7ecf\u8fc7\u5b50\u7f51\u5212\u5206\u7684\u4f20\u7edfC\u7c7b\u7f51\u7edc\u6765\u8bf4\uff0c\u5141\u8bb8\u5b89\u88c5\u591a\u5c11\u53f0\u4e3b\u673a\uff1f\uff08 \uff09", "\nA\u3001 1024", "\nB\u3001 65025", "\nC\u3001 254", "\nD\u3001 16", "\nE\u3001 48", "\n42\u3001IP\u5730\u5740\u4e2d\u7f51\u7edc\u53f7\u7684\u4f5c\u7528\u6709\uff08 \uff09", "\nA\u3001 \u6307\u5b9a\u4e86\u4e3b\u673a\u6240\u5c5e\u7684\u7f51\u7edc", "\nB\u3001 \u6307\u5b9a\u4e86\u7f51\u7edc\u4e0a\u4e3b\u673a\u7684\u6807\u8bc6", "\nC\u3001 \u6307\u5b9a\u4e86\u8bbe\u5907\u80fd\u591f\u8fdb\u884c\u901a\u4fe1\u7684\u7f51\u7edc", "\nD\u3001 \u6307\u5b9a\u88ab\u5bfb\u5740\u7684\u7f51\u4e2d\u7684\u67d0\u4e2a\u8282\u70b9", "\n43\u3001C\u7c7b\u5730\u5740\u6700\u5927\u53ef\u80fd\u5b50\u7f51\u4f4d\u6570\u662f\uff08 \uff09", "\nA\u3001 6", "\nB\u3001 8", "\nC\u3001 12", "\nD\u3001 14", "\n44\u3001UDP\u4f7f\u7528\uff08 \uff09\u63d0\u4f9b\u53ef\u9760\u6027", "\nA\u3001 \u7f51\u9645\u534f\u8bae", "\nB\u3001 \u5e94\u7528\u5c42\u534f\u8bae", "\nC\u3001 \u7f51\u7edc\u5c42\u534f\u8bae", "\nD\u3001 \u4f20\u8f93\u63a7\u5236", "\n45\u3001RARP\u7684\u4f5c\u7528\u662f\uff08 \uff09", "\nA\u3001 \u5c06\u81ea\u5df1\u7684IP\u5730\u5740\u8f6c\u6362\u4e3aMAC\u5730\u5740", "\nB\u3001 \u5c06\u5bf9\u65b9\u7684IP\u5730\u5740\u8f6c\u6362\u4e3aMAC\u5730\u5740", "\nC\u3001 \u5c06\u5bf9\u65b9\u7684MAC\u5730\u5740\u8f6c\u6362\u4e3aIP\u5730\u5740", "\nD\u3001 \u77e5\u9053\u81ea\u5df1\u7684MAC\u5730\u5740\uff0c\u901a\u8fc7RARP\u534f\u8bae\u5f97\u5230\u81ea\u5df1\u7684IP\u5730\u5740", "\n46\u3001IP\u5730\u5740219.25.23.56\u7684\u7f3a\u7701\u5b50\u7f51\u63a9\u7801\u6709\u51e0\u4f4d\uff08 \uff09", "\nA\u3001 8", "\nB\u3001 16", "\nC\u3001 24", "\nD\u3001 32", "\n47\u3001Quidway\u8def\u7531\u5668\u5728\u8f6c\u53d1\u6570\u636e\u5305\u5230\u975e\u76f4\u8fde\u7f51\u6bb5\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4f9d\u9760\u4e0b\u5217\u90a3\u4e00\u4e2a\u9009\u9879\u8868\u5bfb\u627e\u4e0b\u4e00\u8df3\u5730\u5740\uff1f\uff08 \uff09", "\nA\u3001 \u5e27\u5934", "\nB\u3001 IP\u62a5\u6587", "\nC\u3001 SSAP\u5b57\u6bb5", "\nD\u3001 DSAP\u5b57\u6bb5", "\n48\u3001\u4e0b\u9762\u5bf9\u8def\u7531\u5668\u7684\u63cf\u8ff0\u6b63\u786e\u7684\u662f\uff08\u4ea4\u6362\u673a\u6307\u4e8c\u5c42\u4ea4\u6362\u673a\uff09\uff08 \uff09", "\nA\u3001 \u76f8\u5bf9\u4e8e\u4ea4\u6362\u673a\u548c\u7f51\u6865\u6765\u8bf4\uff0c\u8def\u7531\u5668\u5177\u6709\u66f4\u52a0\u590d\u6742\u7684\u529f\u80fd", "\nB\u3001 \u76f8\u5bf9\u4e8e\u4ea4\u6362\u673a\u548c\u7f51\u6865\u6765\u8bf4\uff0c\u8def\u7531\u5668\u5177\u6709\u66f4\u4f4e\u7684\u5ef6\u8fdf", "\nC\u3001 \u76f8\u5bf9\u4e8e\u4ea4\u6362\u673a\u548c\u7f51\u6865\u6765\u8bf4\uff0c\u8def\u7531\u5668\u53ef\u4ee5\u63d0\u4f9b\u66f4\u5927\u7684\u5e26\u5bbd\u548c\u6570\u636e\u8f6c\u53d1\u529f\u80fd", "\nD\u3001 \u8def\u7531\u5668\u53ef\u4ee5\u5b9e\u73b0\u4e0d\u540c\u5b50\u7f51\u4e4b\u95f4\u7684\u901a\u4fe1\uff0c\u4ea4\u6362\u673a\u548c\u7f51\u6865\u4e0d\u80fd", "\nE\u3001 \u8def\u7531\u5668\u53ef\u4ee5\u5b9e\u73b0\u865a\u62df\u5c40\u57df\u7f51\u4e4b\u95f4\u7684\u901a\u4fe1\uff0c\u4ea4\u6362\u673a\u548c\u7f51\u6865\u4e0d\u80fd", "\n49\u3001\u8def\u7531\u5668\u7f51\u7edc\u5c42\u7684\u57fa\u672c\u529f\u80fd\u662f\uff08 \uff09", "\nA\u3001 \u914d\u7f6eIP\u5730\u5740", "\nB\u3001 \u5bfb\u627e\u8def\u7531\u548c\u8f6c\u53d1\u62a5\u6587", "\nC\u3001 \u5c06MAC\u5730\u5740\u89e3\u6790\u6210IP\u5730\u5740", "\n50\u3001\u5f02\u6b65\u4e32\u53e3\u53ef\u4ee5\u8bbe\u4e3a\uff08 \uff09", "\nA\u3001 \u4e13\u7ebf\u65b9\u5f0f", "\nB\u3001 \u62e8\u53f7\u65b9\u5f0f", "\nC\u3001 \u8bed\u97f3\u65b9\u5f0f", "\nD\u3001 PRI\u63a5\u5165\u65b9\u5f0f", "\n51\u3001\u5feb\u901f\u4ee5\u592a\u7f51\u662f\u7531\uff08 \uff09\u6807\u51c6\u5b9a\u4e49\u7684", "\nA\u3001 IEEE802.4", "\nB\u3001 IEEE802.3U", "\nC\u3001 IEEE802.1q", "\nD\u3001 IEEE802.3i", "\nE\u3001 IEEE802.1d", "\n52\u3001\u4e0b\u5217\u6240\u8ff0\u7684\u54ea\u4e00\u9879\u53d1\u9001GNS\u8bf7\u793a\u6570\u636e\u5305\u6765\u51b3\u5b9a\u4e3a\u672c\u5730\u6700\u8fd1\u7684\u670d\u52a1\u5668\uff1f\uff08 \uff09", "\nA\u3001 ipx SAP", "\nB\u3001 ipx DNS", "\nC\u3001 Routing \u66f4\u65b0", "\nD\u3001 \u670d\u52a1\u5668", "\nE\u3001 \u4ee5\u4e0a\u8bf4\u6cd5\u90fd\u4e0d\u5bf9", "\n53\u3001\u5728NetWare\u7f51\u7edc\u4e2d\uff0c\u5ba2\u6237\u9700\u8981\u8bbf\u95ee\u67d0\u4e2a\u7c7b\u578b\u7684\u670d\u52a1\u5668\uff0c\u9996\u5148\u53d1\u9001( )", "\nA\u3001 Rip", "\nB\u3001 Sap", "\nC\u3001 Gns", "\nD\u3001 Arp", "\n54\u3001SNMP\u4f9d\u8d56\u4e8e\uff08 \uff09\u5de5\u4f5c", "\nA\u3001 IP", "\nB\u3001 ARP", "\nC\u3001 TCP", "\nD\u3001 UDP", "\n55\u3001\u5173\u4e8eHUB\u4ee5\u4e0b\u8bf4\u6cd5\u6b63\u786e\u7684\u662f\uff08 \uff09", "\nA\u3001 HUB\u53ef\u4ee5\u7528\u6765\u6784\u5efa\u5c40\u57df\u7f51", "\nB\u3001 \u4e00\u822cHUB\u90fd\u5177\u6709\u8def\u7531\u529f\u80fd", "\nC\u3001 HUB\u901a\u5e38\u4e5f\u53eb\u96c6\u7ebf\u5668\uff0c\u4e00\u822c\u53ef\u4ee5\u4f5c\u4e3a\u5730\u5740\u7ffb\u8bd1\u8bbe\u5907", "\nD\u3001 \u4e00\u53f0\u5171\u4eab\u5f0f\u4ee5\u592a\u7f51HUB\u4e0b\u7684\u6240\u6709PC\u5c5e\u4e8e\u540c\u4e00\u4e2a\u51b2\u7a81\u57df", "\n56\u3001\u80fd\u4fdd\u8bc1\u6570\u636e\u7aef\u5230\u7aef\u53ef\u9760\u4f20\u8f93\u80fd\u529b\u7684\u662f\u76f8\u5e94OSI\u7684\uff08 \uff09", "\nA\u3001 \u7f51\u7edc\u5c42", "\nB\u3001 \u4f20\u8f93\u5c42", "\nC\u3001 \u4f1a\u8bdd\u5c42", "\nD\u3001 \u8868\u793a\u5c42", "\n57\u3001TFTP\u670d\u52a1\u7aef\u53e3\u53f7\u662f\uff08 \uff09", "\nA\u3001 23", "\nB\u3001 48", "\nC\u3001 53", "\nD\u3001 69", "\n58\u3001\u4ec0\u4e48\u547d\u4ee4\u7528\u6765\u68c0\u67e5\u5e94\u7528\u5c42\u5de5\u4f5c\u6b63\u5e38\uff1f( )", "\nA\u3001 PING", "\nB\u3001 TRACERT", "\nC\u3001 TELNET", "\nD\u3001 IPCONFIG", "\n59\u3001\u5728\u6570\u636e\u94fe\u8def\u5c42\u54ea\u4e2a\u5b50\u5c42\u7528\u4e8e\u7ba1\u7406\u5728\u4e00\u6761\u94fe\u8def\u4e0a\u8bbe\u5907\u95f4\u7684\u901a\u4fe1\uff08 \uff09", "\nA\u3001 LLC", "\nB\u3001 MAC", "\nC\u3001 BIG MAC", "\n60.TELNET\u5de5\u4f5c\u4e8e( )", "\nA\u3001\u7f51\u7edc\u5c42", "\nB\u3001\u4f20\u8f93\u5c42", "\nC\u3001\u4f1a\u8bdd\u5c42", "\nD\u3001\u8868\u793a\u5c42", "\nE\u3001\u5e94\u7528\u5c42", "\n61.\u6570\u636e\u5728\u7f51\u7edc\u5c42\u65f6\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\uff08 \uff09", "\nA\u3001 \u6bb5", "\nB\u3001 \u5305", "\nC\u3001 \u4f4d", "\nD\u3001 \u5e27", "\n62.\u76ee\u524d\uff0c\u6211\u56fd\u5e94\u7528\u6700\u4e3a\u5e7f\u6cdb\u7684LAN\u6807\u51c6\u662f\u57fa\u4e8e\uff08 \uff09\u7684\u4ee5\u592a\u7f51\u6807\u51c6", "\nA\u3001 IEEE802.1", "\nB\u3001 IEEE802.2", "\nC\u3001 IEEE802.3", "\nD\u3001 IEEE802.5", "\n63.\u5728Quidway\u8def\u7531\u5668\u4e0a,\u5e94\u8be5\u4f7f\u7528\u4ec0\u4e48\u547d\u4ee4\u6765\u89c2\u5bdf\u7f51\u7edc\u7684\u8def\u7531\u8868\uff08 \uff09", "\nA. Show ip path", "\nB. Show ip path", "\nC. Show interface", "\nD. Show running-config", "\nE. Show ip rip", "\n64.RIP\u534f\u8bae\u5f15\u5165\u8def\u7531\u4fdd\u6301\u673a\u5236\u7684\u4f5c\u7528\u662f( )", "\nA. \u8282\u7701\u7f51\u7edc\u5e26\u5bbd", "\nB. \u9632\u6b62\u7f51\u7edc\u4e2d\u5f62\u6210\u8def\u7531\u73af\u8def", "\nC. \u5c06\u8def\u7531\u4e0d\u53ef\u8fbe\u4fe1\u606f\u5728\u5168\u7f51\u6269\u6563", "\nD. \u901a\u77e5\u90bb\u5c45\u8def\u7531\u5668\u54ea\u4e9b\u8def\u7531\u662f\u4ece\u5176\u4ed6\u5904\u5f97\u5230", "\n65.\u8def\u7531\u73af\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6cd5\u5305\u62ec:\uff08 \uff09", "\nA. \u91c7\u7528\u6c34\u5e73\u5206\u5272", "\nB. \u52a0\u5feb\u8def\u7531\u66f4\u65b0\u62a5\u6587\u7684\u53d1\u9001\u9891\u7387", "\nC. \u8def\u7531\u4fdd\u6301", "\nD. \u914d\u7f6e\u9759\u6001\u8def\u7531", "\nE. \u5b9a\u4e49\u8def\u7531\u6743\u7684\u6700\u5927\u503c", "\n66.\u5728\u8def\u7531\u534f\u8bae\u6240\u6709\u63a5\u53e3\u4e0a\u4f7f\u80fdRIP\u534f\u8bae\u7684\u547d\u4ee4\u662f:\uff08 \uff09", "\nA. network all", "\nB. neighbor", "\nC. enable", "\nD. network10.0.0.0", "67.\u4e0b\u5217\u9759\u6001\u8def\u7531\u5668\u914d\u7f6e\u6b63\u786e\u7684\u662f( )", "\nA. ip route 129.1.0.0 16 serial 0", "\nB. ip route 10.0.0.2 16 129.1.0.0", "\nC. ip route 129.1.0.0 16 10.0.02", "\nD. ip route 129.1.0.0.255.255.0.0 10.0.0.2", "\n68.\u4e0b\u5217\u5173\u4e8eOSPF\u534f\u8bae\u7684\u8bf4\u6cd5\u6b63\u786e\u7684\u662f( )", "\nA. OSPF \u652f\u6301\u57fa\u4e8e\u63a5\u53e3\u7684\u62a5\u6587\u9a8c\u8bc1", "\nB. OSPF \u652f\u6301\u5230\u540c\u4e00\u76ee\u7684\u5730\u5740\u7684\u591a\u6761\u7b49\u503c\u8def\u7531", "\nC. OSPF \u662f\u4e00\u4e2a\u57fa\u4e8e\u94fe\u8def\u72b6\u6001\u7b97\u6cd5\u7684\u8fb9\u754c\u7f51\u5173\u8def\u7531\u534f\u8bae", "\nD. OSPF \u53d1\u73b0\u7684\u8def\u7531\u53ef\u4ee5\u6839\u636e\u4e0d\u540c\u7684\u7c7b\u578b\u800c\u6709\u4e0d\u540c\u7684\u4f18\u5148\u7ea7", "\n69.\u8f93\u5165\u54ea\u6761\u547d\u4ee4\u53ef\u4ee5\u770b\u5230\u4ee5\u4e0b\u4fe1\u606f?\uff08 \uff09", "\nLS DataBase", "\n\u65e0\u6548 :Router", "\nLs id :10.1.2.2", "\nAdy rtr :1050", "\nLen :72", "\nSeq# :80000008", "\nCksum (DC)", "\nArea Border Router", "\nLink count 4", "\nLink id :192.168.2.1", "\nData :255.255.255.255", "\nMetric:1562", "\nLink id :10.1.2.2", "\nData :10.1.3.1", "\n\u65e0\u6548 :Router", "\nMetric :1562", "\nLink id :10.1.3.2", "\nData :255.255.255.255", "\n\u65e0\u6548 :StubNet", "\nMetric :1562", "\nA. show ip route", "\nB. show ip ospf isa", "\nC. show ip ospf database", "\nD. show ip ospf interface", "70.\u4ee5\u4e0b\u5173\u4e8eIGRP\u7684\u8bf4\u6cd5\u6b63\u786e\u7684\u662f:\uff08 \uff09", "\nA. \u9ed8\u8ba4\u60c5\u51b5\u4e0b,\u5728\u5e27\u4e2d\u7ee7\u7f51\u7edc\u4e2d\u8fd0\u884cIGRP\u534f\u8bae,\u542f\u7528\u6c34\u5e73\u5206\u5272\u529f\u80fd", "\nB. IGRP\u652f\u6301\u591a\u6761\u8def\u5f84\u8d1f\u8f7d\u5747\u8861", "\nC. \u5728\u4e00\u4e2a1500\u5b57\u8282\u7684\u8def\u7531\u66f4\u65b0\u6570\u636e\u5305\u4e2d\u6700\u591a\u5305\u542b\u6709104\u6761\u8def\u7531", "\nD. \u89e6\u53d1\u66f4\u65b0\u5b9a\u671f\u53d1\u9001", "\n71.\u4f60\u5728\u914d\u7f6ex.25\u7f51\u7edc\u65f6\u600e\u6837\u914d\u7f6e\u63a5\u53e3\u7684X.121\u5730\u5740?\uff08 \uff09", "\nA. Quidway#x25 address 321469056102", "\nB. Quidway(config)#x.25address 892735559329", "\nC. Quidway(config-if-s0)#x25 address 32505160178", "\nD. Quidwayxonfig-if-s0)#x25 address x121 329056171025", "72.\u5728\u5e27\u4e2d\u7ee7\u7f51\u7edc\u4e2d,\u5e27\u4e2d\u7ee7\u901a\u8fc7( )\u534f\u8bae\u76d1\u63a7PVC\u7684\u72b6\u6001", "\nA. DLCI", "\nB. BECN", "\nC. LMI", "\nD. FECN", "\n73.PPP\u534f\u8bae\u65cf\u4e2d,\u54ea\u4e2a\u534f\u8bae\u63d0\u4f9b\u4e86\u5bf9\u7f51\u7edc\u5c42\u7684\u652f\u6301\uff08 \uff09", "\nA. IPCP", "\nB. LCP", "\nC. IPXCP", "\nD. SNA", "\n74.\u5728\u5c01\u88c5x.25\u534f\u8bae\u7684\u63a5\u53e3\u4e0a,\u8bbe\u7f6e\u7f3a\u7701\u7684\u6700\u5927\u53d1\u9001\u5206\u7ec4\u5927\u5c0f\u4e3a256\u5b57\u8282\u7684\u547d\u4ee4\u662f:\uff08 \uff09", "\nA. x25 ops 256", "\nB. x25 dps 256", "\nC. x25 dbs 2048", "\nD. x25 dps 2048", "\n75.PPP\u534f\u8bae\u4e2d,( )\u4e3b\u8981\u7528\u4e8e\u534f\u5546\u5728\u8be5\u6570\u636e\u94fe\u8def\u4e0a\u6240\u4f20\u8f93\u7684\u6570\u636e\u5305\u7684\u683c\u5f0f\u4e0e\u7c7b\u578b", "\nA. \u94fe\u8def\u63a7\u5236\u534f\u8bae", "\nB. PPP\u6269\u5c55\u534f\u8bae", "\nC. \u7f51\u7edc\u5c42\u63a7\u5236\u534f\u8bae", "\nD. PAP.CHAP\u534f\u8bae", "\n76.x.25\u534f\u8bae\u5305\u542b\u4e09\u5c42\uff08 \uff09", "\nA\u3001 \u5206\u7ec4\u5c42", "\nB\u3001 \u6570\u636e\u94fe\u8def\u5c42", "\nC\u3001 \u7269\u7406\u5c42", "\nD\u3001 \u4f20\u8f93\u5c42", "\nE\u3001 \u7f51\u7edc\u5c42", "\n77.\u5728\u4e00\u4e2a\u63a5\u53e3\u914d\u7f6ex25 map ip 102.112.43.125 12345\u547d\u4ee4,\u5176\u4e2d102.112.43.125\u548c123456\u5206\u522b\u662f( )", "\nA. \u5bf9\u7aef\u7684IP\u5730\u5740\u548c\u5bf9\u7aef\u7684x.121\u5730\u5740", "\nB. \u5bf9\u7aef\u7684IP\u5730\u5740\u548c\u672c\u63a5\u53e3\u7684X.121\u5730\u5740", "\nC. \u672c\u63a5\u53e3\u7684IP\u5730\u5740\u548c\u5bf9\u7aef\u7684x.121\u5730\u5740", "\nD. \u672c\u63a5\u53e3\u7684IP\u5730\u5740\u548c\u672c\u63a5\u53e3\u7684x.121\u5730\u5740", "\n78.\u4f7f\u914d\u7f6e\u7684\u8bbf\u95ee\u5217\u8868\u5e94\u7528\u5230\u63a5\u53e3\u4e0a\u7684\u547d\u4ee4\u662f\u4ec0\u4e48\uff08 \uff09", "\nA. access-group", "\nB. access-list", "\nC. ip access-list", "\nD. ip access-group", "\n79.\u4e0b\u5217\u5173\u4e8e\u5730\u5740\u8f6c\u6362\u7684\u63cf\u8ff0,\u6b63\u786e\u7684\u662f:\uff08 \uff09", "\nA. \u5730\u5740\u8f6c\u6362\u89e3\u51b3\u4e86\u56e0\u7279\u7f51\u5730\u5740\u77ed\u7f3a\u6240\u9762\u4e34\u95ee\u9898", "\nB. \u5730\u5740\u8f6c\u6362\u5b9e\u73b0\u4e86\u5bf9\u7528\u6237\u900f\u660e\u7684\u7f51\u7edc\u5916\u90e8\u5730\u5740\u7684\u5206\u914d", "\nC. \u4f7f\u7528\u5730\u5740\u8f6c\u6362\u540e,\u5bf9IP\u5305\u52a0\u957f,\u5feb\u901f\u8f6c\u53d1\u4e0d\u4f1a\u9020\u6210\u4ec0\u4e48\u5f71\u54cd", "\nD. \u5730\u5740\u8f6c\u6362\u5185\u90e8\u4e3b\u673a\u63d0\u4f9b\u4e00\u5b9a\u7684\u201d\u9690\u79c1\u201d", "\nE. \u5730\u5740\u8f6c\u6362\u4f7f\u5f97\u7f51\u7edc\u8c03\u8bd5\u53d8\u5f97\u66f4\u52a0\u7b80\u5355", "\n80.\u67d0\u5355\u4f4d\u8def\u7531\u5668\u9632\u706b\u5899\u4f5c\u4e86\u5982\u4e0b\u914d\u7f6e:", "\nfinewall enable", "\naccess-list normal 101 permit ip 202.38.0.0.0.0.0.255 10.10.10.10 0.0.0.255", "\naccess-list normal 101 deny tcp 202.38.0.0.0.0.0.255 10.10.10.10 0.0.0.255 gt 1024", "\naccess-list normal 101 deny ip any any", "\n\u7aef\u53e3\u914d\u7f6e\u5982\u4e0b:", "\ninterface Sdriat0", "\nIp address 202.38.111.25.255.255.255.0", "\nEncapsulation ppp ip", "\nAccess-group 101 in", "\nInterface Ethernet0", "\nIp address 10.10.10.1 255.255.255.0", "\n\u5185\u90e8\u5c40\u57df\u7f51\u4e3b\u673a\u5747\u4e3a10.10.10.0 255.255.255.0\u7f51\u6bb5,\u4ee5\u4e0b\u8bf4\u6cd5\u6b63\u786e\u7684\u662f(\u672c\u9898\u5047\u8bbe\u5176\u5b83\u7f51\u7edc\u5747\u6ca1\u6709\u4f7f\u7528access)( )", "\nA. \u5916\u90e8\u4e3b\u673a202.38.0.50\u53ef\u4ee5PING\u901a\u4efb\u4f55\u5185\u90e8\u4e3b\u673a", "\nB. \u5185\u90e8\u4e3b\u673a10.10.10.5,\u53ef\u4efb\u610f\u8bbf\u95ee\u5916\u90e8\u7f51\u7edc\u8d44\u6e90", "\nC. \u5185\u90e8\u4efb\u610f\u4e3b\u673a\u90fd\u53ef\u4ee5\u4e0e\u5916\u90e8\u4efb\u610f\u4e3b\u673a\u5efa\u7acbTCP\u8fde\u63a5", "\nD. \u5916\u90e8202.38.5.0/24\u7f51\u6bb5\u4e3b\u673a\u53ef\u4ee5\u4e0e\u6b64\u5185\u90e8\u7f51\u4e3b\u673aTCP\u8fde\u63a5", "\nE. \u5916\u90e8202.38.0.0/24\u7f51\u6bb5\u4e3b\u673a\u4e0d\u53ef\u4ee5\u4e0e\u6b64\u5185\u90e8\u540c\u4e3b\u673a\u5efa\u7acb\u7aef\u53e3\u53f7\u5927\u4e8e1024\u7684TCP\u8fde\u63a5", "\n81.\u4ee5\u4e0b\u4e3a\u5c40\u57df\u7f51\u534f\u8bae\u7684\u6709( )", "\nA. PPP", "\nB. X.25", "\nC. SLIP", "\nD. Ethemetll", "\nE. FrameRelay", "\nF. EthemetSNAP", "\nG. Ppp-Multilink", "\nH. IEEE802.3", "\n82.\u5728\u4ee5\u592a\u7f51\u4e2d,\u5de5\u4f5c\u7ad9\u5728\u53d1\u6570\u636e\u4e4b\u524d,\u8981\u68c0\u67e5\u7f51\u7edc\u662f\u5426\u7a7a\u95f2,\u53ea\u6709\u5728\u7f51\u7edc\u4e0d\u963b\u585e\u65f6\u5de5\u4f5c\u7ad9\u624d\u80fd\u53d1\u9001\u6570\u636e,\u662f\u91c7\u7528\u4e86( )\u673a\u5236", "\nA. ip", "\nB. tcp", "\nC. ICMP", "\nD. \u6570\u636e\u4fa6\u542c\u4e0e\u51b2\u7a81\u63a7\u5236CSMA/CD", "\n83.\u4ee5\u592a\u7f51\u4f7f\u7528\u7684\u7269\u7406\u4ecb\u8d28\u4e3b\u8981\u6709( )", "\nA. \u540c\u8f74\u7535\u7f06", "\nB. \u53cc\u7ede\u7ebf", "\nC. \u7535\u7f06", "\nD. V.24\u7535\u7f06", "\n84.\u534e\u4e3aS2403\u4ea4\u6362\u673a\u652f\u6301\uff08 \uff09\u7684\u7279\u6027", "\nA\uff0e VLAN", "\nB\uff0e STP", "\nC\uff0e TRUNK", "\nD\uff0e SNMP AGENT", "\n85.\u5bf9\u5168\u53cc\u5de5\u4ee5\u592a\u7f51\u7684\u63cf\u8ff0\u6b63\u786e\u7684\u662f\uff08 \uff09", "\nA\u3001 \u53ef\u4ee5\u5728\u5171\u4eab\u5f0f\u4ee5\u592a\u7f51\u4e2d\u5b9e\u73b0\u5168\u53cc\u5de5\u6280\u672f", "\nB\u3001 \u53ef\u4ee5\u5728\u4e00\u5bf9\u53cc\u7ede\u7ebf\u4e0a\u540c\u65f6\u63a5\u6536\u548c\u53d1\u9001\u4ee5\u592a\u7f51\u5e27", "\nC\u3001 \u4ec5\u53ef\u4ee5\u7528\u4e8e\u70b9\u5bf9\u70b9\u8fde\u63a5", "\nD\u3001 \u53ef\u7528\u4e8e\u70b9\u5bf9\u70b9\u548c\u70b9\u5bf9\u591a\u70b9\u8fde\u63a5", "\n86.\u4e0b\u5217\u6240\u63cf\u8ff0\u7684\u534f\u8bae\u54ea\u4e9b\u5c5e\u4e8eOSI\u53c2\u8003\u6a21\u578b\u8868\u793a\u5c42\u534f\u8bae\uff08\u591a\u9009\uff09\uff08 \uff09", "\nA. ASCII\u3001EBCDIC", "\nB\u3001IP\u3001ARP", "\nC\u3001MAC\u3001LLC", "\nD\u3001MPEG\u3001MIDI", "\nE\u3001 NFS\u3001SQL", "\nF\u3001 PICT\u3001MPEG", "\n87.\u4e0b\u5217\u54ea\u4e00\u6761\u547d\u4ee4\u53ef\u4ee5\u663e\u793aQuidway\u8def\u7531\u5668RAM\u4e2d\u7684\u914d\u7f6e\u4fe1\u606f\uff08 \uff09", "\nA\u3001 show buffer pool", "\nB\u3001 show running\uff0dconfig", "\nC\u3001 show interface", "\n88.\u4e0b\u9762\u5bf9\u6211\u56fd\u5e7f\u6cdb\u4f7f\u7528\u7684DDN\u7f51\u7edc\u63cf\u8ff0\u6b63\u786e\u7684\u662f\u4ec0\u4e48\uff08 \uff09", "\nA\u3001 DDN\u7ebf\u8def\u4f7f\u7528\u7b80\u4fbf\uff0c\u8986\u76d6\u9762\u5e7f", "\nB\u3001 DDN\u4e13\u7ebf\u662f\u70b9\u5230\u70b9\u7684\u94fe\u8def\uff0c\u5b83\u7ed9\u4e88\u7528\u6237\u8bbf\u95ee\u6574\u4e2a\u94fe\u8def\u5e26\u5bbd\u7684\u53ef\u80fd\u6027", "\nC\u3001 DDN\u76f8\u5bf9\u4e8e\u5206\u7ec4\u4ea4\u6362\u7f51\u7edc\u6765\u8bf4\uff0c\u7ebf\u8def\u8d39\u7528\u8f83\u9ad8", "\nD\u3001 DDN\u4e13\u7ebf\u88ab\u5e7f\u6cdb\u7528\u4e8e\u4f01\u4e1a\u7f51\u4e92\u8fde\uff0c\u4e13\u7ebfinternet\u63a5\u5165", "\n89.\u4e3a\u4e86\u67e5\u770bQuidway\u8def\u7531\u5668\u642d\u5efa\u7684\u5e27\u4e2d\u7ee7\u7f51\u7edc\u7684\u5c01\u88c5\u7c7b\u578b\uff0c\u5e94\u542f\u7528\u4ec0\u4e48\u547d\u4ee4\uff08 \uff09", "\nA\u3001 show frame-relay map", "\nB\u3001 show frame-relay pvc", "\nC\u3001 show frame-relay lmi", "\nD\u3001 show interface", "\n90.\u5728\u914d\u7f6e\u534e\u4e3a\u8def\u7531\u5668\u548c\u601d\u79d1\u8def\u7531\u5668\u642d\u5efa\u7684\u5e27\u4e2d\u7ee7\u7f51\u7edc\u65f6\uff0c\u4f60\u5e94\u8be5\u600e\u6837\u914d\u7f6e\u534e\u4e3a\u8def\u7531\u5668\u7684\u94fe\u8def\u5c01\u88c5\u683c\u5f0f\uff1f\uff08\u5047\u5b9a\u601d\u79d1\u91c7\u7528\u9ed8\u8ba4\u5c01\u88c5\u683c\u5f0f\uff09\uff08 \uff09", "\nA\u3001 arpa", "\nB\u3001 ansi", "\nC\u3001 ietf", "\nD\u3001 cisco-compatiable", "\nE\u3001 Q.933a", "\nF\u3001 Cisco", "\n91\u3001X\uff0e25\u534f\u8bae\u662f\u54ea\u4e24\u79cd\u8bbe\u5907\u8fdb\u884c\u4ea4\u4e92\u7684\u89c4\u7a0b\uff08 \uff09", "\nA\u3001 PSE\u3001PSN", "\nB\u3001 DCE\u3001DTE", "\nC\u3001 DCE\u3001PSE", "\nD\u3001 DTE\u3001PSE", "\n92.\u5c5e\u4e8e\u70b9\u5230\u70b9\u8fde\u63a5\u7684\u94fe\u8def\u5c42\u534f\u8bae\u6709\uff08 \uff09", "\nA\u3001X.25", "\nB\u3001HDLC", "\nC\u3001ATM", "\nD\u3001PPP", "\n93.\u8bf7\u95ee\u60a8\u5e94\u8be5\u5728\u4e0b\u5217\u54ea\u4e9b\u6a21\u5f0f\u4e2d\u4f7f\u7528degbug\u547d\u4ee4\uff08 \uff09", "\nA\u3001 \u7528\u6237\u6a21\u5f0f", "\nB\u3001 \u7279\u6743\u6a21\u5f0f", "\nC\u3001 \u5168\u5c40\u914d\u7f6e\u6a21\u5f0f", "\nD\u3001 \u63a5\u53e3\u914d\u7f6e\u6a21\u5f0f", "\n94.\u56fd\u9645\u4e0a\u8d1f\u8d23\u5206\u914dIP \u5730\u5740\u7684\u4e13\u4e1a\u7ec4\u7ec7\u5212\u5206\u4e86\u51e0\u4e2a\u7f51\u6bb5\u4f5c\u4e3a\u79c1\u6709\u7f51\u6bb5\uff0c\u53ef\u4ee5\u4f9b\u4eba\u4eec\u5728\u79c1\u6709\u7f51\u7edc\u4e0a\u81ea\u7531\u5206\u914d\u4f7f\u7528\uff0c\u4ee5\u4e0b\u5c5e\u4e8e\u79c1\u6709\u5730\u5740\u7684\u7f51\u6bb5\u662f\uff08\u591a\u9009\uff09\uff08 \uff09", "\nA\u300110\uff0e0\uff0e0\uff0e0/8", "\nB\u3001172.16.0.0/12", "\nC\u3001192\uff0e168\uff0e0.0/16", "\nD\u3001224\uff0e0.0.0/8", "\n95.\u4e0b\u5217\u6709\u5173NAT\u53d9\u8ff0\u6b63\u786e\u7684\u662f\uff08 \uff09", "\nA\u3001 NAT\u662f\u82f1\u6587\u201c\u7f51\u7edc\u5730\u5740\u8f6c\u6362\u201d\u7684\u7f29\u5199", "\nB\u3001 \u5740\u8f6c\u6362\u53c8\u79f0\u5730\u5740\u7ffb\u8bd1\uff0c\u7528\u6765\u5b9e\u73b0\u79c1\u6709\u5730\u5740\u548c\u516c\u7528\u7f51\u7edc\u5730\u5740\u4e4b\u95f4\u7684\u8f6c\u6362", "\nC\u3001 \u5f53\u5185\u90e8\u7f51\u7edc\u7684\u4e3b\u673a\u8bbf\u95ee\u5916\u90e8\u7f51\u7edc\u7684\u65f6\u5019\uff0c\u4e00\u5b9a\u4e0d\u9700\u8981NAT", "\nD\u3001 \u5730\u5740\u8f6c\u6362\u7684\u63d0\u51fa\u4e3a\u89e3\u51b3IP\u5730\u5740\u7d27\u5f20\u7684\u95ee\u9898\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6709\u6548\u9014\u5f84", "\n96.\u8bbf\u95ee\u63a7\u5236\u5217\u8868\u53ef\u4ee5\u8fc7\u6ee4\u8fdb\u5165\u548c\u6d41\u51fa\u8def\u7531\u5668\u63a5\u53e3\u7684\u6570\u636e\u5305\u6d41\u91cf\uff0c\u8fd9\u53e5\u8bdd\u662f\uff08 \uff09", "\nA\u3001 true", "\nB\u3001 false", "\n97.\u68c0\u67e5\u4e00\u4e2a\u8bbf\u95ee\u63a7\u5236\u5217\u8868\u5728\u7279\u5b9a\u63a5\u53e3\u7684\u5e94\u7528\u60c5\u51b5\uff0c\u5e94\u4f7f\u7528\u4e0b\u5217\u54ea\u6761\u547d\u4ee4\uff1f\uff08 \uff09", "\nA\u3001 show access-list access-list-number", "\nB\u3001 show access-list applied", "\nC\u3001show access-list all", "\nD\u3001show access-list inter interface-\u65e0\u6548 interface-number", "98.\u4e0b\u5217\u5bf9\u534e\u4e3a\u5907\u4efd\u4e2d\u5fc3\u6280\u672f\u63cf\u8ff0\u6b63\u786e\u7684\u662f\uff08 \uff09", "\nA\u3001 \u5907\u4efd\u6280\u672f\u63d0\u9ad8\u4e86\u7f51\u7edc\u7684\u53ef\u9760\u6027\uff0c\u589e\u5f3a\u4e86\u7f51\u7edc\u7684\u53ef\u7528\u6027", "\nB\u3001\u5907\u4efd\u4e2d\u5fc3\u6280\u672f\u53ef\u4ee5\u4e3a\u8def\u7531\u5668\u4efb\u610f\u63a5\u53e3\u63d0\u4f9b\u5907\u4efd\u63a5\u53e3\uff0c\u5305\u62ec\u903b\u8f91\u63a5\u53e3", "\nC\u3001 \u5907\u4efd\u4e2d\u5fc3\u6280\u672f\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u591a\u4e2a\u7f51\u7edc\u8bbe\u5907\u7684\u5197\u4f59\u5907\u4efd", "\nD\u3001 \u4ee5\u4e0a\u8bf4\u6cd5\u6b63\u786e", "\n99.\u4f60\u6253\u7b97\u5c06HSRP\u5907\u4efd\u7ec4\u4e2d\u7684\u67d0\u53f0\u8def\u7531\u5668\u8bbe\u7f6e\u4e3a\u5de5\u4f5c\u5728\u62a2\u5360\u65b9\u5f0f\uff0c\u4ee5\u4e0b\u547d\u4ee4\u4e2d\u7684\u54ea\u4e00\u6761\u53ef\u4ee5\u8fbe\u5230\u8fd9\u6837\u7684\u6548\u679c\uff08 \uff09", "\nA\u3001standby 1 priority 255", "\nB\u3001standby 1 timers", "\nC\u3001standby 1 track ethernet", "\nD\u3001standby 1 preempt", "\nE\u3001 standby 1 preexist", "\n100.\u4f7f\u80fdDDR\u7684\u547d\u4ee4\u662f\uff08 \uff09", "\nA\u3001 dialer-list", "\nB\u3001 access-list", "\nC\u3001 dialer-group", "\nD\u3001 dialer in-band", "\n101.IGRP\u534f\u8bae\u7684\u7efc\u5408\u8def\u7531\u6743\u5305\u62ec\uff08\u591a\u9009\uff09\uff08 \uff09", "\nA\u3001 \u5e26\u5bbd", "\nB\u3001 \u65f6\u5ef6", "\nC\u3001 \u8df3\u6570", "\nD\u3001 \u53ef\u9760\u6027", "\nE\u3001 \u8d1f\u8f7d", "\nF\u3001 \u6700\u5927\u4f20\u8f93\u5355\u5143", "\n102.\u52a8\u6001\u8def\u7531\u534f\u8bae\u76f8\u6bd4\u9759\u6001\u8def\u7531\u534f\u8bae\uff08\u591a\u9009\uff09\uff08 \uff09", "\nA\u3001\u5e26\u5bbd\u5360\u7528\u5c11", "\nB\u3001\u7b80\u5355", "\nC\u3001\u8def\u7531\u5668\u80fd\u81ea\u52a8\u53d1\u73b0\u7f51\u7edc\u53d8\u5316", "\nD\u3001\u8def\u7531\u5668\u80fd\u81ea\u52a8\u8ba1\u7b97\u65b0\u7684\u8def\u7531", "\n103.RIP\u534f\u8bae\u662f\u57fa\u4e8e\uff08 \uff09", "\nA\u3001UDP", "\nB\u3001TCP", "\nC\u3001ICMP", "\nD\u3001Raw IP", "\n104.\u56e0\u4e3a\u5728\u751f\u6210\u8def\u7531\u8868\u8fc7\u7a0b\u4e2d\uff0cOSPF\u534f\u8bae\u9700\u8981\u8fdb\u884c\u590d\u6742\u7684SPF\u7b97\u6cd5\u6765\u8ba1\u7b97\u7f51\u7edc\u62d3\u6251\u7ed3\u6784\uff0c\u6240\u4ee5\u76f8\u5bf9\u4e8e\u8ddd\u79bb\u77e2\u91cf\u8def\u7531\u9009\u62e9\u534f\u8bae\u6765\u8bf4\uff0c\u5b83\u9700\u8981\u66f4\u5927\u7684\u5f00\u9500\uff0c\u66f4\u591a\u7684\u5ef6\u8fdf\uff0c\u66f4\u9ad8\u7684CPU\u5360\u7528\u7387\u3002\uff08 \uff09", "\nA\u3001true", "\nB\u3001false", "\n105.\uff08 \uff09\u547d\u4ee4\u67e5\u770b\u4e00\u4e9b\u63a5\u53e3\u7684\u4fe1\u606f\uff0c\u5305\u62ec\u63a5\u53e3\u7684\u82b1\u8d39\u3001\u72b6\u6001\u3001\u7c7b\u578b\u3001\u4f18\u5148\u7ea7\u7b49", "\nA\u3001show ip ospf", "\nB\u3001show ip ospf error", "\nC\u3001show ip ospf interface", "\nD\u3001show ip ospf enighbor", "\n106.\uff08 \uff09\u547d\u4ee4\u663e\u793aOSPF\u5728\u63a5\u6536\u62a5\u6587\u65f6\u8bb0\u5f55\u7684\u6240\u53d1\u751f\u7684\u9519\u8bef\uff08 \uff09", "\nA\u3001 show ip ospf", "\nB\u3001 show ip ospf error", "\nC\u3001 show ip ospf intterface", "\nD\u3001 show ip ospf neighbor", "\n107.\u4e0b\u9762\u5173\u4e8e\uff11\uff10\uff10\uff10\u5146\u4ee5\u592a\u7f51\u53e3\u7684\u63cf\u8ff0\u6b63\u786e\u7684\u662f\uff08\u591a\u9009\uff09\uff08 \uff09", "\nA\u3001\uff11\uff10\uff10\uff10M\u4ee5\u592a\u7f51\u53ef\u4ee5\u63d0\u4f9b\u5168\u53cc\u5de5/\u534a\u53cc\u5de5\u901a\u4fe1", "\nB\u3001\uff11\uff10\uff10\uff10M\u4ee5\u592a\u7f51\u7684\u7269\u7406\u4ecb\u8d28\u53ef\u4ee5\u91c7\u7528\uff15\u7c7b\u4ee5\u4e0a\u53cc\u7ede\u7ebf\u3001\u5355\u6a21/\u591a\u6a21\u5149\u7ea4", "\nC\u30011\uff10\uff10\uff10M\u4ee5\u592a\u7f51\u6709\u81ea\u52a8\u534f\u5546\u529f\u80fd\uff0c\u53ef\u4ee5\u4e0e\u4f4e\u901f\u4ee5\u592a\u7f51\u4e4b\u95f4\u534f\u5546\u901f\u7387", "\nD\u3001\u5728\u540c\u4e00\u51b2\u7a81\u57df\u4e2d\uff0c\u5343\u5146\u4ee5\u592a\u7f51\u5141\u8bb8\u4e2d\u7ee7\u5668\u4e92\u94fe", "\n108.\u4ee5\u592a\u7f51\u4e2d\uff0c\u662f\u6839\u636e\uff08 \uff09\u5730\u5740\u6765\u533a\u5206\u4e0d\u540c\u7684\u8bbe\u5907\u7684\uff08 \uff09", "\nA\u3001 IP\u5730\u5740", "\nB\u3001 MAC\u5730\u5740", "\nC\u3001 IPX\u5730\u5740", "\nD\u3001 LLC\u5730\u5740", "\n109.\u534e\u4e3aS2403\u4ea4\u6362\u673a\u57fa\u4e8eSTF\u7279\u6027\u8bbe\u7f6e\u7684\u53c2\u6570\uff1a\uff08\u591a\u9009\uff09\uff08 \uff09", "\nA\u3001 Bridge Priority(\u4ea4\u6362\u673a\u4f18\u5148\u7ea7)", "\nB\u3001 Hellow Time (\u6839\u6865\u4ea4\u6362\u673a\u5411\u5916\u53d1\u9001\u914d\u7f6e\u62a5\u6587\u7684\u65f6\u95f4\u95f4\u9694)", "\nC\u3001 Max Age Time (\u6700\u5927\u8001\u5316\u65f6\u95f4)", "\nD\u3001 Forward Time (\u7aef\u53e3\u72b6\u6001\u8f6c\u6362\u65f6\u95f4)", "\nE\u3001 Port Path Cost (\u7aef\u53e3\u8def\u5f84\u503c)", "\nF\u3001 Port Priority(\u7aef\u53e3\u4f18\u5148\u7ea7)", "\n110.Quidway\u8def\u7531\u5668\u5728\u6267\u884c\u6570\u636e\u5305\u8f6c\u53d1\u65f6\uff0c\u4e0b\u5217\u54ea\u4e9b\u9879\u6ca1\u6709\u53d1\u751f\u53d8\u5316\uff08\u5047\u5b9a\u6ca1\u6709\u4f7f\u7528\u5730\u5740\u8f6c\u6362\u6280\u672f\uff09\uff08 \uff09", "\nA\u3001 \u539f\u7aef\u53e3\u53f7", "\nB\u3001 \u76ee\u7684\u7aef\u53e3\u53f7", "\nC\u3001 \u539f\u7f51\u7edc\u5730\u5740", "\nD\u3001 \u76ee\u7684\u7f51\u7edc\u5730\u5740", "\nE\u3001 \u539fMAC\u5730\u5740", "\nF\u3001 \u76ee\u7684MAC\u5730\u5740", "\n111.\u4e0b\u9762\u54ea\u4e9b\u534f\u8bae\u5c5e\u4e8eOSI\u53c2\u8003\u6a21\u578b\u7b2c\u4e03\u5c42\uff1f(\u591a\u9009)\uff08 \uff09", "\nA\u3001 FTP", "\nB\u3001 SPX", "\nC\u3001 Telnet", "\nD\u3001 PPP", "\nE\u3001 TCP", "\nF\u3001 IGMP", "\n112.\u548c\u4ea4\u6362\u7535\u8def\u76f8\u6bd4\uff0c\u5206\u7ec4\u4ea4\u6362\u7684\u65f6\u5ef6\u5c0f\uff08 \uff09", "\nA\u3001 true", "\nB\u3001 false", "\n113. ISO\u63d0\u51faOSI\u7684\u5173\u952e\u662f\uff08 \uff09", "\nA\u3001\u7f51\u7edc\u4e92\u8054", "\nB\u3001\u7f51\u7edc\u5206\u5c42", "\nC\u3001\u4e03\u5c42\u6a21\u578b", "\nD\u3001\u5236\u5b9a\u6807\u51c6", "\n114.\u5c40\u57df\u7f51\u5e38\u7528\u8bbe\u5907\u6709\uff1a\uff08\u591a\u9009\uff09( )", "\nA\u3001 \u7ebf\u7f06\uff0c\u5982\u5149\u7ea4\u3001\u53cc\u7ede\u7ebf\u3001\u540c\u8f74\u7535\u7f06\u7b49", "\nB\u3001 \u96c6\u7ebf\u5668", "\nC\u3001 MODEM", "\nD\u3001 \u8def\u7531\u5668", "\n115.RFC\u6587\u6863\u662f\u4e0b\u9762\u54ea\u4e00\u4e2a\u6807\u51c6\u7684\u5de5\u4f5c\u6587\u4ef6\uff08 \uff09", "\nA\u3001 ISO", "\nB\u3001 ITU", "\nC\u3001 IETF", "\nD\u3001 IEEE", "\n116.\u53ef\u8def\u7531\u534f\u8bae\u7684\u7f51\u7edc\u5730\u5740\u7531\u54ea\u4e24\u90e8\u5206\u7ec4\u6210\uff08 \uff09", "\nA\u3001 \u7f51\u7edc\u5730\u5740\u548c\u4e3b\u673a\u5730\u5740", "\nB\u3001 \u4e3b\u673a\u5730\u5740\u548c\u7f51\u7edc\u63a9\u7801", "\nC\u3001 \u7f51\u7edc\u5730\u5740\u548c\u7f51\u7edc\u63a9\u7801", "\n117.IP\u5730\u5740190.233.27.13/16\u6240\u5728\u7684\u7f51\u6bb5\u5730\u5740\u662f\uff08 \uff09", "\nA\u3001190.0.0.0", "\nB\u3001190.233.0.0", "\nC\u3001190.233.27.0", "\nD\u3001190.233.27.1", "\n118.\u4e0b\u9762\u54ea\u4e00\u4e9b\u9009\u9879\u662f\u7269\u7406\u5c42\u7684\u57fa\u672c\u529f\u80fd\uff1a\uff08\u591a\u9009\uff09\uff08 \uff09", "\nA\u3001 \u5728\u7ec8\u7aef\u8bbe\u5907\u4e4b\u95f4\u4f20\u9001\u6bd4\u7279\u6d41", "\nB\u3001 \u5efa\u7acb\u3001\u7ef4\u62a4\u865a\u7535\u8def\uff0c\u8fdb\u884c\u5dee\u9519\u6821\u9a8c\u548c\u6d41\u91cf\u63a7\u5236", "\nC\u3001 \u5b9a\u4e49\u7535\u538b\u3001\u63a5\u53e3\u3001\u7ebf\u7f06\u6807\u51c6\u3001\u4f20\u8f93\u8ddd\u79bb\u7b49\u7279\u6027", "\n119.Traceroute\u529f\u80fd\u662f\uff08 \uff09\uff08\u591a\u9009\uff09( )", "\nA\u3001 \u7528\u4e8e\u68c0\u67e5\u7f51\u7ba1\u5de5\u4f5c\u662f\u5426\u6b63\u5e38", "\nB\u3001 \u7528\u4e8e\u68c0\u67e5\u7f51\u7edc\u8fde\u63a5\u662f\u5426\u53ef\u901a", "\nC\u3001 \u7528\u4e8e\u5206\u6790\u7f51\u7edc\u5728\u54ea\u91cc\u51fa\u73b0\u4e86\u95ee\u9898", "\n120.TCP\u3001UDP\u3001SPX\u5c5e\u4e8eOSI\u7684 \uff08 \uff09", "\nA\u3001 \u7f51\u7edc\u5c42", "\nB\u3001 \u4f20\u8f93\u5c42", "\nC\u3001 \u4f1a\u8bdd\u5c42", "\nD\u3001 \u8868\u793a\u5c42", "\n121.\u5173\u4e8eIP\u62a5\u6587\u5934\u7684TTL\u5b57\u6bb5\uff0c\u4ee5\u4e0b\u8bf4\u6cd5\u6b63\u786e\u7684\u6709\uff08 \uff09\uff08\u591a\u9009\uff09", "\nA\u3001 TTL\u7684\u6700\u5927\u53ef\u80fd\u503c\u662f65535", "\nB\u3001 \u5728\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u8def\u7531\u5668\u4e0d\u5e94\u8be5\u4ece\u63a5\u53e3\u6536\u5230TTL=0\u7684\u62a5\u6587", "\nC\u3001 TTL\u4e3b\u8981\u662f\u4e3a\u4e86\u9632\u6b62IP\u62a5\u6587\u5728\u7f51\u7edc\u4e2d\u7684\u5faa\u73af\u8f6c\u53d1\uff0c\u6d6a\u8d39\u7f51\u7edc\u5e26\u5bbd", "\nD\u3001 IP\u62a5\u6587\u6bcf\u7ecf\u8fc7\u4e00\u4e2a\u7f51\u7edc\u8bbe\u5907\uff0c\u5305\u62ecHub\u3001LAN SWITCH\u548c\u8def\u7531\u5668\uff0cTTL\u503c\u90fd\u4f1a\u88ab\u51cf\u53bb\u4e00\u5b9a\u7684\u6570\u503c", "\n122.\u7ed9\u60a8\u5206\u914d\u4e00\u4e2aB\u7c7bIP\u7f51\u7edc172.16.0.0\uff0c\u5b50\u7f51\u63a9\u7801255.255.255.192,\u5219\u60a8\u53ef\u4ee5\u5229\u7528\u7684\u7f51\u7edc\u6570\u4e3a\uff08 \uff09\uff0c\u6bcf\u4e2a\u7f51\u6bb5\u6700\u5927\u4e3b\u673a\u6570\uff08 \uff09", "\nA\u3001512 126", "\nB\u30011022 62", "\nC\u30011024 62", "\nD\u3001256 254", "\nE\u3001192 254", "\n123.\u4e0b\u5217\u6240\u8ff0\u7684\u54ea\u4e9b\u662fICMP\u534f\u8bae\u7684\u529f\u80fd\uff1f\uff08\u591a\u9009\uff09\uff08 \uff09", "\nA\u3001 \u62a5\u544aTCP\u8fde\u63a5\u8d85\u65f6\u4fe1\u606f", "\nB\u3001 \u91cd\u5b9a\u5411UDP\u6d88\u606f", "\nC\u3001 \u8f6c\u53d1SNMP\u6570\u636e", "\nD\u3001 \u67e5\u627e\u5b50\u7f51\u63a9\u7801", "\nE\u3001 \u62a5\u544a\u8def\u7531\u66f4\u65b0\u9519\u8bef\u4fe1\u606f", "\n124.\u5982\u679cC\u7c7b\u5b50\u7f51\u7684\u63a9\u7801\u4e3a255.255.255.240\uff0c\u5219\u5305\u542b\u7684\u5b50\u7f51\u4f4d\u6570\u3001\u5b50\u7f51\u6570\u76ee\u3001\u6bcf\u4e2a\u5b50\u7f51\u4e2d\u7684\u4e3b\u673a\u6570\u76ee\u6b63\u786e\u7684\u662f\uff08 \uff09", "\nA\u3001\uff12 \uff12 \uff12", "\nB\u3001\uff13 \uff16 \uff13\uff10", "\nC\u3001\uff14 \uff11\uff14 \uff11\uff14", "\nD\u3001\uff15 \uff13\uff10 \uff16", "\n125.10.1.0.1/17\u7684\u5e7f\u64ad\u5730\u5740\u662f\uff08 \uff09", "\nA\u300110.1.128.255", "\nB\u300110.1.63.255", "\nC\u300110.1.127.255", "\nD\u300110.1.126.255", "\n126.\u60a8\u5728Quidway\u8def\u7531\u5668\u4e0a\u914d\u7f6eIPX/SPX\u7f51\u7edc\u65f6\uff0c\u5fc5\u987b\u914d\u7f6e\u7684\u547d\u4ee4\u6709\u54ea\u4e9b\uff1f\uff08\u591a\u9009\uff09\uff08 \uff09", "\nA\u3001 \u63a5\u53e3\u5c01\u88c5\u7c7b\u578b", "\nB\u3001 \u8def\u5f84\u8d1f\u8f7d\u5747\u8861", "\nC\u3001 \u63a5\u53e3\u7f51\u7edc\u53f7", "\nD\u3001 \u542f\u52a8IPX\u8fdb\u7a0b", "\n127.\u4e0b\u5217\u54ea\u4e9b\u6280\u672f\u6709\u52a9\u4e8e\u51cf\u5c11\u8def\u7531\u73af\u8def \uff08 \uff09", "\nA\u3001 \u76f4\u63a5\u4ea4\u6362", "\nB\u3001 \u91c7\u7528\u94fe\u8def\u72b6\u6001\u8def\u7531\u534f\u8bae", "\nC\u3001 \u6c34\u5e73\u5206\u5272", "\nD\u3001 \u4fdd\u6301\u95f4\u9694", "\nE\u3001 \u5b9a\u4e49\u6700\u5927\u8df3\u6570", "\nF\u3001 \u8def\u7531\u4e2d\u6bd2", "\n128.\u5728\u8fd0\u884cwin98\u7684\u8ba1\u7b97\u673a\u4e2d\u914d\u7f6e\u7f51\u5173\u7c7b\u4f3c\u4e8e\u5728\u8def\u7531\u5668\u4e0a\u914d\u7f6e\uff08 \uff09", "\nA\u3001 \u76f4\u63a5\u8def\u7531", "\nB\u3001 \u9ed8\u8ba4\u8def\u7531", "\nC\u3001 \u52a8\u6001\u8def\u7531", "\nD\u3001 \u95f4\u63a5\u8def\u7531", "\n129.\u4ee5\u4e0b\u54ea\u4e9b\u8def\u7531\u9879\u7531\u7f51\u7ba1\u624b\u52a8\u914d\u7f6e\uff08 \uff09", "\nA\u3001 \u9759\u6001\u8def\u7531", "\nB\u3001 \u76f4\u63a5\u8def\u7531", "\nC\u3001 \u7f3a\u7701\u8def\u7531", "\nD\u3001 \u52a8\u6001\u8def\u7531", "\n130.\u8bf7\u9009\u51fa\u5728\u534e\u4e3a\u8def\u7531\u5668\u4e0a\u8fd0\u884cIGRP\u534f\u8bae\u7684\u6240\u6709\u5fc5\u987b\u914d\u7f6e\u547d\u4ee4\uff08 \uff09", "\nA\u3001 \u542f\u7528IGRP\u8def\u7531\u8fdb\u7a0b", "\nB\u3001 \u8fdb\u5165\u63a5\u53e3\u914d\u7f6e\u6a21\u5f0f", "\nC\u3001 \u914d\u7f6e\u90bb\u5c45", "\nD\u3001 \u5728\u8def\u7531\u5668\u63a5\u53e3\u4e0a", "\n131.\u54ea\u4e9b\u6a21\u5f0f\u53ef\u4ee5\u7528degbug\u547d\u4ee4\uff08 \uff09", "\nA\u3001 \u7528\u6237\u6a21\u5f0f", "\nB\u3001 \u7279\u6743\u6a21\u5f0f", "\nC\u3001 \u5168\u5c40\u6a21\u5f0f", "\nD\u3001 \u63a5\u53e3\u6a21\u5f0f", "\n132.\u4ee5\u592a\u7f51\u662f\u54ea\u4e00\u79cd\u6807\u51c6\u7684\u5b9e\u73b0\uff08 \uff09", "\nA\u3001 IEEE802.1", "\nB\u3001 IEEE 802.2", "\nC\u3001 IEEE 802.3", "\nD\u3001 IEEE 802.5", "\n133\u3001\u547d\u4ee4backup state-up interval-time \u8fd0\u7528\u4e8e\uff08 \uff09", "\nA\u3001 \u4e3b\u63a5\u53e3\u662f\u7269\u7406\u63a5\u53e3", "\nB\u3001 \u5907\u4efd\u63a5\u53e3\u662f\u7269\u7406\u63a5\u53e3", "\nC\u3001 \u4e3b\u63a5\u53e3\u662f\u903b\u8f91\u901a\u9053", "\nD\u3001 \u5907\u4efd\u63a5\u53e3\u662f\u903b\u8f91\u901a\u9053", "\n134\u3001\u8bf7\u9009\u51fa\u5728\u534e\u4e3a\u8def\u7531\u5668\u4e0a\u8fd0\u884cIGRP\u534f\u8bae\u7684\u6240\u6709\u5fc5\u987b\u914d\u7f6e\u547d\u4ee4\uff08 \uff09", "\nA\u3001\u542f\u7528IGRP\u8def\u7531\u8fdb\u7a0b", "\nB\u3001\u8fdb\u5165\u63a5\u53e3\u914d\u7f6e\u6a21\u5f0f", "\nC\u3001\u914d\u7f6e\u90bb\u5c45", "\nD\u3001\u5728\u8def\u7531\u5668\u63a5\u53e3\u4e0a", "\n135.\u5224\u65ad\u8def\u7531\u597d\u574f\u7684\u539f\u5219\u4e0d\u5305\u62ec\uff08 \uff09", "\nA\u3001 \u5feb\u901f\u6536\u655b\u6027", "\nB\u3001 \u7075\u6d3b\u6027\u3001\u5f39\u6027", "\nC\u3001 \u62d3\u6251\u7ed3\u6784\u7684\u5148\u8fdb\u6027", "\nD\u3001 \u6700\u597d\u8def\u5f84", "\n136.\u53ef\u4ee5\u4e3a\u4ee5\u4e0b\u54ea\u4e9b\u63a5\u53e3\u63d0\u4f9b\u5907\u4efd\u63a5\u53e3\uff08 \uff09", "\nA\u3001 ISDN BRI", "\nB\u3001 ISDN PRI", "\nC\u3001 X.25", "\nD\u3001 \u62e8\u53f7\u63a5\u53e3", "\nE\u3001 \u4ee5\u592a\u7f51\u5b50\u63a5\u53e3", "\nF\u3001 \u865a\u62df\u63a5\u53e3\u6a21\u677f", "\n137.\u4e0b\u5217\u5173\u4e8eDLCI\u53d9\u8ff0\u4e0d\u6b63\u786e\u7684\u662f\uff08 \uff09", "\nA\u3001 DLCI\u662f\u672c\u5730\u63a5\u53e3", "\nB\u3001 DLCI\u662f\u7531DCE\u4fa7\u5206\u914d\u7684", "\nC\u3001 \u7528\u6237\u53ef\u7528\u7684DLCI\u8303\u56f4\u662f1\uff0d1007", "\nD\u3001 \u4e0d\u540c\u7684\u7269\u7406\u63a5\u53e3\u53ef\u4ee5\u914d\u7f6e\u76f8\u540c\u7684DLCI", "\nE\u3001 \u76f8\u540c\u7684\u7269\u7406\u63a5\u53e3\u53ef\u4ee5\u914d\u7f6e\u76f8\u540c\u7684DLCI", "\n138.VRP\u652f\u6301\u7684X.25\u534f\u8bae\u5c01\u88c5\u683c\u5f0f\u6709\uff08 \uff09", "\nA\u3001 IETF", "\nB\u3001 ITU-T Q.933a", "\nC\u3001 DDN", "\nD\u3001 BFE", "\nE\u3001 IEEE802.3", "\nF\u3001 CISCO\u517c\u5bb9", "\n139.\u5e7f\u57df\u7f51\u534f\u8bae\u6709\uff08 \uff09", "\nA\u3001 PPP", "\nB\u3001 X.25", "\nC\u3001 SLIP", "\nD\u3001 Ethernetll", "\nE\u3001 Frame\uff0drelay", "\nF\u3001 IEEE802.2/802.3", "\nG\u3001 IPX", "\n140.\u5728\u914d\u7f6e\u5e27\u4e2d\u7ee7\u5b50\u63a5\u53e3\u65f6\uff0c\u53ef\u914d\u7684\u5b50\u63a5\u53e3\u7c7b\u578b\u6709\u54ea\u4e9b\uff08 \uff09", "\nA\u3001 point-to-point", "\nB\u3001 NBMA", "\nC\u3001 point-to-multipoint", "\nD\u3001 broadcast", "\n141.IP \u5730\u5740\u4e2d\u7f51\u7edc\u53f7\u7684\u4f5c\u7528\u662f\uff08 \uff09", "\nA\u3001 \u6307\u5b9a\u4e3b\u673a\u6240\u5c5e\u7f51\u7edc", "\nB\u3001 \u6307\u5b9a\u7f51\u7edc\u4e0a\u4e3b\u673a\u6807\u8bc6", "\nC\u3001 \u6307\u5b9a\u8bbe\u5907\u80fd\u591f\u8fd0\u884c\u901a\u4fe1\u7684\u7f51\u7edc", "\nD\u3001 \u6307\u5b9a\u88ab\u5bfb\u5740\u7684\u5b50\u7f51\u4e2d\u7684\u67d0\u4e2a\u8282\u70b9", "\n142.\u672f\u8bedARP\u4ee3\u8868\u4ec0\u4e48\uff08 \uff09", "\nA\u3001\u5730\u5740\u89e3\u6790\u534f\u8bae", "\nB\u3001\u53cd\u5411\u5730\u5740\u89e3\u6790\u534f\u8bae", "\n143.\u4e3a\u4e86\u786e\u5b9a\u7f51\u7edc\u5c42\u6240\u7ecf\u8fc7\u7684\u8def\u7531\u5668\u6570\u76ee\uff0c\u5e94\u4f7f\u7528\u4ec0\u4e48\u547d\u4ee4( )", "\nA\u3001 ping", "\nB\u3001 arp-a", "\nC\u3001 stack-test", "\nD\u3001 traceroute", "\nE\u3001 telnet", "\n144.IEEE802.3\u4e0d\u662fVLAN\u7684\u6807\u51c6\uff08 \uff09", "\nA\u3001true", "\nB\u3001false", "\n145.CSMA/CD\u7f51\u7edc\u4e2d\uff0c\u6240\u6709\u4e3b\u673a\u90fd\u53ef\u72ec\u5360\u7f51\u7edc\u5e26\u5bbd\uff08 \uff09", "\nA\u3001 true", "\nB\u3001 false", "\n146.OSI\u4e2d\uff0c\u54ea\u4e9b\u4e0d\u662f\u8868\u793a\u5c42\u529f\u80fd\uff1f( )", "\nA\u3001 \u6570\u636e\u52a0\u5bc6", "\nB\u3001 \u6570\u636e\u538b\u7f29", "\nC\u3001 \u5bc6\u7801\u63a7\u5236", "\nD\u3001 \u6570\u636e\u683c\u5f0f\u8f6c\u6362", "\n147.Telnet\u5de5\u4f5c\u4e8e\u54ea\u4e00\u5c42\uff1f\uff08 \uff09", "\nA\u3001 \u5e94\u7528\u5c42", "\nB\u3001 \u8868\u793a\u5c42", "\nC\u3001 \u4f1a\u8bdd\u5c42", "\nD\u3001 \u4f20\u8f93\u5c42", "\nE\u3001 \u7f51\u7edc\u5c42", "\nF\u3001 \u94fe\u8def\u5c42", "\nG\u3001 \u7269\u7406\u5c42", "\n148.TFTP\u670d\u52a1\u5668\u7684\u7aef\u53e3\u53f7\u662f\uff08 \uff09", "\nA\u300123", "\nB\u300148", "\nC\u300153", "\nD. 69", "\n149.\u5728Quidway\u8def\u7531\u5668\u4e0a\u5982\u4f55\u67e5\u770be0 IPX\u63a5\u53e3\uff08 \uff09", "\nA\u3001 show interface", "\nB\u3001 show ipx interface", "\nC\u3001 show ipx serverce", "\nD\u3001 show interface e0", "\n150.\u8def\u7531\u5668\u4e2d\uff0cIPX \u5730\u5740 0XFFFFFFFE\u8868\u793a\uff08 \uff09", "\nA\u3001 \u672c\u5730\u5730\u5740", "\nB\u3001 \u7f51\u5185\u5e7f\u64ad\u5730\u5740", "\nC\u3001 \u7f51\u95f4\u5e7f\u64ad\u5730\u5740", "\n151.\u5728\u4e0b\u5217\u5bf9HSRP\u5404\u53c2\u6570\u7f3a\u7701\u503c\u7684\u63cf\u8ff0\u4e2d\uff0c\u54ea\u51e0\u6761\u662f\u6b63\u786e\u7684\uff08 \uff09", "\nA\u3001Hellow Time \u7f3a\u77013 Hold Time\u7f3a\u770110", "\nB\u3001\u5907\u4efd\u7ec4\u53f7\u7684\u7f3a\u77011", "\nC\u3001\u9a8c\u8bc1\u5b57\u7f3a\u7701quidway", "\nD\u3001\u4f18\u5148\u7ea7 50", "\nE\u3001\u8bbe\u7f6e\u6307\u5b9a\u63a5\u53e3\u65f6\uff0c\u63a5\u53e3\u5931\u8d25\u540e\uff0c\u4f18\u5148\u7ea7\u51cf\u5c11\u7684\u7f3a\u7701\u4e3a10", "\n152.\u4e0b\u5217\u54ea\u4e9b\u63a5\u53e3\u53ef\u4f5c\u903b\u8f91\u901a\u9053\uff08 \uff09", "\nA\u3001X.25", "\nB\u3001\u5e27\u4e2d\u7ee7", "\nC\u3001dialer", "\nD\u3001\u540c/\u5f02\u6b65\u4e32\u53e3", "\n153.DNS\u5de5\u4f5c\u4e8e\uff08 \uff09", "\nA\u3001 \u7f51\u7edc\u5c42", "\nB\u3001 \u4f20\u8f93\u5c42", "\nC\u3001 \u4f1a\u8bdd\u5c42", "\nD\u3001 \u8868\u793a\u5c42", "\nE\u3001 \u5e94\u7528\u5c42", "\n154.IP\u5730\u5740\u4e0e\u5b83\u7684\u63a9\u7801\u53d6\u53cd\u76f8\u4e0e\uff0c\u6240\u5f97\u7684\u975e\u96f6\u70b9\u5206\u5341\u8fdb\u5236\u6570\u662f\u6b64IP\u5730\u5740\u7684\uff08 \uff09", "\nA\u3001A\u7c7b", "\nB\u3001\u4e3b\u673a\u5730\u5740", "\nC\u3001\u7f51\u7edc\u5730\u5740", "\nD\u3001\u89e3\u6790\u5730\u5740", "\n155.OSI\u4e2d\uff0c\u94fe\u8def\u5c42\u548c\u4f20\u8f93\u5c42\u90fd\u662f\u9762\u5411\u8fde\u63a5\u7684\uff0c\u4f46\u94fe\u8def\u5c42\u5efa\u7acb\u7684\u662f\u70b9\u5230\u70b9\u7684\u8fde\u63a5\uff0c\u4f20\u8f93\u5c42\u5efa\u7acb\u7684\u662f\u7aef\u5230\u7aef\u7684\u8fde\u63a5\uff08 \uff09", "\nA\u3001true", "\nB\u3001false", "\n156.\u5728\u534e\u4e3a\u8def\u7531\u5668\u7279\u6743\u6a21\u5f0f\u4e0b\u8f93\u5165show interface ,\u663e\u793a\u7269\u7406\u63a5\u53e3UP\uff0c\u7ebf\u8def\u63a5\u53e3DOWN\uff0c\u53ef\u80fd\u7684\u6545\u969c\u73b0\u8c61\u662f\uff08 \uff09", "\nA\u3001\u5b58\u6d3b\u95f4\u9694\u8bbe\u7f6e\u4e0d\u4e00\u81f4", "\nB\u3001\u65f6\u949f\u901f\u7387\u4e0e\u5bf9\u7aef\u4e0d\u4e00\u81f4", "\nC\u3001\u94fe\u8def\u534f\u5546\u6ca1\u6709\u901a\u8fc7", "\nD\u3001\u6ca1\u6709\u6765\u81ea\u5bf9\u7aef\u7684\u8f7d\u6ce2\u4fe1\u606f", "\n157.\u5f53\u63a5\u53e3\u8fd0\u884c\u5728RIP2\u5e7f\u64ad\u65b9\u5f0f\u65f6\uff0c\u5b83\u53ef\u63a5\u6536\u7684\u62a5\u6587\u6709\uff08 \uff09", "\nA\u3001RIP1\u5e7f\u64ad\u62a5\u6587", "\nB\u3001RIP1\u7ec4\u64ad\u62a5\u6587", "\nC\u3001RIP2\u5e7f\u64ad\u62a5\u6587", "\nD\u3001RIP2\u7ec4\u64ad\u62a5\u6587", "\n158.\u4e0b\u9762\u63a5\u53e3\u4e3a\u7269\u7406\u63a5\u53e3\u7684\u6709\uff08 \uff09", "\nA\u3001dialer", "\nB\u3001\u8bed\u97f3\u63a5\u53e3", "\nC\u3001serial\u53e3", "\nD\u3001\u5b50\u63a5\u53e3", "\nE\u3001CE1/PRI2\u63a5\u53e3", "\nF\u3001 \u865a\u62df\u63a5\u53e3\u6a21\u677f", "\nG\u3001 ISDN BRI\u63a5\u53e3", "\nH\u3001 \u5907\u4efd\u4e2d\u5fc3\u903b\u8f91\u901a\u9053", "\n159.\u5c5e\u4e8e\u70b9\u5230\u70b9\u8fde\u63a5\u94fe\u8def\u5c42\u534f\u8bae\u7684\u6709( )", "\nA\u3001X.25", "\nB\u3001HDLC", "\nC\u3001ATM", "\nD\u3001ppp", "\n160.190.233.27.13./16\u6240\u5728\u7f51\u6bb5\u5730\u5740\uff08 \uff09", "\nA\u3001190.233.0.0", "\nB\u3001190.0.0.0", "\nC\u3001190.233.27.0", "\n161.\u5728\u534e\u4e3a\u8def\u7531\u5668\u4e0a\u914d\u7f6eIPX/SPX\u7f51\u7edc\u65f6\uff0c\u5fc5\u987b\u914d\u7f6e\u7684\u547d\u4ee4\u6709\uff08 \uff09", "\nA\u3001\u63a5\u53e3\u5c01\u88c5\u7c7b\u578b", "\nB\u3001\u8d1f\u8f7d\u5747\u8861", "\nC\u3001\u63a5\u53e3\u7f51\u7edc\u53f7", "\nD\u3001\u542f\u52a8IPX\u8fdb\u7a0b", "\n162.RFC\u662f\u54ea\u4e2a\u7ec4\u7ec7\u63d0\u51fa\u7684\uff08 \uff09", "\nA\u3001 ISO", "\nB\u3001 ITU", "\nC\u3001 IETF", "\nD\u3001 IEEE", "\n163.\u54ea\u4e2a\u5730\u5740\u8868\u793a\u5b50\u7f51\u5185\u6240\u6709\u7684\u53c2\u4e0e\u591a\u64ad\u7684\u8def\u7531\u53ca\u4e3b\u673a\uff08 \uff09", "\nA\u3001224.0.0.1", "\nB\u3001224.0.0.5", "\nC\u3001224.0.0.6", "\nD\u3001224.0.0.9", "\n164.ISO\u89c4\u5b9a\u7684\u7f51\u7edc\u7ba1\u7406\u7684\u4e94\u90e8\u5206\u7684\u529f\u80fd\u662f\uff08 \uff09", "\nA\u3001\u6027\u80fd\u7ba1\u7406", "\nB\u3001\u914d\u7f6e\u7ba1\u7406", "\nC\u3001\u5b89\u5168\u7ba1\u7406", "\nD\u3001\u534f\u8bae\u7ba1\u7406", "\nE\u3001 \u8bb0\u8d26\u7ba1\u7406", "\n165.\u4ee5\u4e0b\u9009\u9879\u5c5e\u4e8e\u5e7f\u57df\u7f51\u534f\u8bae\u7684\u6709\uff08 \uff09", "\nA\u3001 PPP", "\nB\u3001 X.25", "\nC\u3001 SLIP", "\nD\u3001 Ethernetll", "\nE\u3001 Frame\uff0drelay", "\nF\u3001 IEEE802.2/802.3", "\nG\u3001 IPX", "\n166. \u4ee5\u592a\u7f51\u4ea4\u6362\u673a\u4e2d\uff0c\u54ea\u79cd\u8f6c\u53d1\u65b9\u6cd5\u5ef6\u8fdf\u8f83\u5c0f\uff08 \uff09", "\nA\u3001 \u76f4\u63a5\u8f6c\u53d1", "\nB\u3001 \u5b58\u50a8\u8f6c\u53d1", "\n167.tcp\u534f\u8bae\u5de5\u4f5c\u4e8eTCP/IP\u534f\u8bae\u6808\u7684\u54ea\u4e00\u5c42( )", "\nA\u3001 \u5e94\u7528\u5c42", "\nB\u3001 \u4f20\u8f93\u5c42", "\nC\u3001 \u7f51\u7edc\u5c42", "\nD\u3001 \u94fe\u8def\u5c42", "\nE\u3001 \u7269\u7406\u5c42", "\n168.192.168.1.127\u4ee3\u8868\u7684\u662f\uff08 \uff09\u5730\u5740", "\nA\u3001\u4e3b\u673a", "\nB\u3001\u7f51\u7edc", "\nC\u3001\u5e7f\u64ad", "\nD\u3001\u7ec4\u64ad", "\nE\u3001\u90fd\u4e0d\u5bf9", "\n169.\u4e00\u4e2aA\u7c7b\u5730\u5740\uff0c\u5176\u5b50\u7f51\u63a9\u7801\u662f255.255.240.0\uff0c\u6709\u591a\u5c11\u4f4d\u88ab\u7528\u6765\u5212\u5206\u5b50\u7f51\uff1f\uff08 \uff09", "\nA\u30018", "\nB\u300116", "\nC\u3001 20", "\nD\u3001 24", "\n170. \u4ee5\u4e0b\u5173\u4e8eIP\u5730\u5740\u501f\u7528\u8bf4\u6cd5\u6b63\u786e\u7684\u662f\uff08 \uff09", "\nA\u3001\u501f\u7528\u65b9\u4e0d\u80fd\u4e3a\u4ee5\u592a\u7f51\u63a5\u53e3", "\nB\u3001\u5982\u679c\u88ab\u501f\u7528\u63a5\u53e3\u6ca1\u6709IP\u5730\u5740\uff0c\u5219\u501f\u7528\u63a5\u53e3\u7684IP\u5730\u5740\u4e3a0.0.0.0", "\nC\u3001\u88ab\u501f\u7528\u65b9\u63a5\u53e3\u7684\u5730\u5740\u672c\u8eab\u4e0d\u80fd\u4e3a\u501f\u7528\u5730\u5740", "\nD\u3001\u88ab\u501f\u7528\u65b9\u7684\u5730\u5740\u53ef\u4ee5\u501f\u7ed9\u591a\u4e2a\u63a5\u53e3", "\n171.\u8def\u7531\u5668\u8f6c\u53d1\u6570\u636e\u5305\u5230\u975e\u76f4\u63a5\u7f51\u6bb5\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4f9d\u9760\u4e0b\u5217\u54ea\u4e00\u4e2a\u9009\u9879\u6765\u5bfb\u627e\u4e0b\u4e00\u8df3\u5730\u5740( )", "\nA. \u5e27\u5934", "\nB\u3001IP\u62a5\u6587\u5934\u90e8", "\nC\u3001SSAP\u5b50\u6bb5", "\nD\u3001DSAP\u5b50\u6bb5", "\n172.\u652f\u6301\u53ef\u53d8\u957f\u5b50\u7f51\u63a9\u7801\u7684\u8def\u7531\u534f\u8bae\u6709\uff08 \uff09", "\nA\u3001RIP V1", "\nB\u3001OSPF", "\nC\u3001RIV2", "\nD\u3001IS-IS", "\n173.\u4ee5\u4e0b\u54ea\u4e9b\u53ef\u4f5c\u4e3a\u5907\u4efd\u63a5\u53e3\uff08 \uff09", "\nA\u3001ISDN BRI", "\nB\u3001ISDN PRI", "\nC\u3001X.25", "\nD\u3001\u62e8\u53f7\u63a5\u53e3", "\nE\u3001 \u4ee5\u592a\u7f51\u63a5\u53e3", "\nF\u3001 \u4ee5\u592a\u7f51\u5b50\u63a5\u53e3", "\nG\u3001 \u865a\u62df\u63a5\u53e3\u6a21\u677f", "174\u5bf9\u4e8e\u8bbf\u95ee\u63a7\u5236\u5217\u8868\u6761\u4ef6\u7684\u5224\u65ad\u8bed\u53e5\u4e2d\uff0c\u4e0e\u5b50\u7f51\u63a9\u7801\u7c7b\u4f3c\u768432\u4f4d\u6bd4\u7279\u7684\u6570\u5b57\u5b57\u7b26\u4e32\u79f0\u4e3a\uff08 \uff09", "\nA\u3001 IP\u5730\u5740", "\nB\u3001 \u4e3b\u673a\u5730\u5740", "\nC\u3001 \u7f51\u7edc\u5730\u5740", "\nD\u3001 \u901a\u914d\u7b26", "\n175.\u6539\u53d8\u60a8\u7684Quidway\u8def\u7531\u5668\u540d\u5b57\u4e3amyrouter\u65f6\uff0c\u5e94\u8f93\u5165\u4ec0\u4e48\u547d\u4ee4( )", "\nA\u3001 config myrouter", "\nB\u3001 show myroter", "\nC\u3001 hostname myrouter", "\n176.IP \u5730\u5740\u4e2d\uff0c\u7f51\u7edc\u90e8\u5206\u51680\u8868\u793a( )", "\nA\u3001 \u4e3b\u673a\u5730\u5740", "\nB\u3001 \u7f51\u7edc\u5730\u5740", "\nC\u3001 \u6240\u6709\u4e3b\u673a", "\nD\u3001 \u6240\u6709\u7f51\u7edc", "\n177.IP \u5730\u5740\u4e2d\u7f51\u7edc\u53f7\u7684\u4f5c\u7528\u662f\uff08 \uff09", "\nA\u3001\u5236\u5b9a\u4e3b\u673a\u6240\u5c5e\u7f51\u7edc", "\nB\u3001\u6307\u5b9a\u7f51\u7edc\u4e0a\u4e3b\u673a\u6807\u8bc6", "\nC\u3001\u6307\u5b9a\u8bbe\u5907\u80fd\u591f\u8fd0\u884c\u901a\u4fe1\u7684\u7f51\u7edc", "\nD\u3001\u6307\u5b9a\u88ab\u5bfb\u5740\u7684\u5b50\u7f51\u4e2d\u7684\u67d0\u4e2a\u8282\u70b9", "\n178.\u4e3a\u4e86\u786e\u5b9a\u7f51\u7edc\u5c42\u6240\u7ecf\u8fc7\u7684\u8def\u7531\u5668\u6570\u76ee\uff0c\u5e94\u4f7f\u7528\u4ec0\u4e48\u547d\u4ee4\uff08 \uff09", "\nA\u3001ping", "\nB\u3001arp-a", "\nC\u3001stack-test", "\nD\u3001traceroute", "\nE\u3001telnet", "\n179.IEEE802.3\u4e0d\u662fVLAN\u7684\u6807\u51c6\uff08 \uff09", "\nA\u3001 true", "\nB\u3001 false", "\n180\u3001CSMA/CD\u7f51\u7edc\u4e2d\uff0c\u6240\u6709\u4e3b\u673a\u90fd\u53ef\u72ec\u5360\u7f51\u7edc\u5e26\u5bbd( )", "\nA\u3001true", "\nB\u3001false", "\n181. DNS\u5de5\u4f5c\u4e8e\uff08 \uff09", "\nA\u3001 \u7f51\u7edc\u5c42", "\nB\u3001 \u4f20\u8f93\u5c42", "\nC\u3001 \u4f1a\u8bdd\u5c42", "\nD\u3001 \u8868\u793a\u5c42", "\nE\u3001 \u5e94\u7528\u5c42", "\n182.IP\u5730\u5740\u4e0e\u5b83\u7684\u63a9\u7801\u53d6\u53cd\u76f8\u4e0e\uff0c\u6240\u5f97\u7684\u975e\u96f6\u70b9\u5206\u5341\u8fdb\u5236\u6570\u662f\u6b64IP\u5730\u5740\u7684\uff08 \uff09", "\nA\u3001 A\u7c7b", "\nB\u3001 \u4e3b\u673a\u5730\u5740", "\nC\u3001 \u7f51\u7edc\u5730\u5740", "\nD\u3001 \u89e3\u6790\u5730\u5740", "\n183 .\u6570\u636e\u5206\u6bb5\u5728OSI\u54ea\u4e00\u5c42( )", "\nA\u3001 \u5e94\u7528\u5c42", "\nB\u3001 \u8868\u793a\u5c42", "\nC\u3001 \u4f1a\u8bdd\u5c42", "\nD\u3001 \u4f20\u8f93\u5c42", "\nE\u3001 \u7f51\u7edc\u5c42", "\nF\u3001 \u6570\u636e\u94fe\u8def\u5c42", "\n184. \u4e0b\u5217\u662f\u5916\u90e8\u53ef\u8def\u7531\u534f\u8bae\u7684\u662f\uff08 \uff09", "\nA\u3001 rip", "\nB\u3001 ospf", "\nC\u3001 igrp", "\nD\u3001 bgp", "\nE\u3001 eigrp", "\n185.\u5c5e\u4e8e\u70b9\u5230\u70b9\u8fde\u63a5\u94fe\u8def\u5c42\u534f\u8bae\u7684\u6709\uff08 \uff09", "\nA\u3001X.25", "\nB\u3001HDLC", "\nC\u3001ATM", "\nD\u3001ppp", "\n186.190.233.27.13./16\u6240\u5728\u7f51\u6bb5\u5730\u5740\uff08 \uff09", "\nA\u3001190.233.0.0", "\nB\u3001190.0.0.0", "\nC\u3001190.233.27.0", "\n187 \u5728\u534e\u4e3a\u8def\u7531\u5668\u4e0a\u914d\u7f6eIPX/SPX\u7f51\u7edc\u65f6\uff0c\u5fc5\u987b\u914d\u7f6e\u7684\u547d\u4ee4\u6709\uff08 \uff09", "\nA\u3001 \u63a5\u53e3\u5c01\u88c5\u7c7b\u578b", "\nB\u3001\u8d1f\u8f7d\u5747\u8861", "\nC\u3001\u63a5\u53e3\u7f51\u7edc\u53f7", "\nD\u3001\u542f\u52a8IPX\u8fdb\u7a0b", "\n188.\u4e0b\u5217\u5217\u51fa\u7684\u7f51\u7edc\u8bbe\u5907\u4e2d\uff0c\u5c5e\u4e8eDCE\u8bbe\u5907\u7684\u6709\uff08 \uff09", "\nA\u3001 \u96c6\u7ebf\u5668", "\nB\u3001 \u5e27\u4e2d\u7ee7\u4ea4\u6362\u673a", "\nC\u3001 CSU/DSU", "\nD\u3001 \u8ba1\u7b97\u673a", "\n189.\u534e\u4e3aR4001\u8def\u7531\u5668\u63d0\u4f9bCE1/PR2\u63a5\u53e3\uff0c\u5bf9\u4e8eCE1\u5c01\u88c5\uff0c\u6700\u591a\u53ef\u4ee5\u652f\u6301\u540c\u65f6\u5212\u5206\uff08 \uff09", "\n\u4e2a64\u4e2a\u903b\u8f91\u63a5\u53e3\uff0c\u7528\u4e8eDDN\u8fde\u63a5\u3002", "\nA\u300130", "\nB\u300131", "\nC\u300132", "\nD\u300116", "\n190.\u5728ISDN\u7f51\u7edc\u4e2d\uff0cU\u63a5\u53e3\u5b9a\u4e49\u5728\uff08 \uff09\u4e4b\u95f4\u3002", "\nA\u3001 TE1\u548cNT", "\nB\u3001 TE2\u548cTA", "\nC\u3001 NT1\u548cISDN\u7f51\u7edc", "\nD\u3001 NT1\u548cNT2", "\n191.\u8def\u7531\u5668\u5e76\u4e0d\u5177\u5907\u8ba1\u8d39\u529f\u80fd( )", "\nA\u3001 true", "\nB\u3001 false", "\n192.\u5728\u914d\u7f6e\u5e27\u4e2d\u7ee7DLCI\u548c\u5bf9\u7aefIP\u5730\u5740\u7684\u6620\u5c04\u540e\uff0c\u4f7f\u7528\u4ec0\u4e48\u547d\u4ee4\u6765\u6821\u9a8c\u914d\u7f6e\uff08 \uff09", "\nA\u3001 show frame-relay pvc", "\nB\u3001 show frame-relay map", "\nC\u3001 show frame-relay traffic", "\nD\u3001 show frame-relay lmi", "\n193.\u4ee5\u4e0b\u534f\u8bae\u6280\u672f\u4e2d\uff0c\u91c7\u7528\u9762\u5411\u8fde\u63a5\u65b9\u5f0f\u8fdb\u884c\u901a\u4fe1\u7684\u6709\uff08\u591a\u9009\uff09\uff08 \uff09", "\nA\u3001 IP", "\nB\u3001 X.25", "\nC\u3001 Ethernet", "\nD\u3001 Frame-relay", "\n194.VLAN\u7684\u5212\u5206\u65b9\u6cd5\u6709\uff08\u591a\u9009\uff09\uff08 \uff09", "\nA\u3001 \u57fa\u4e8e\u8bbe\u5907\u7aef\u53e3", "\nB\u3001 \u534f\u8bae", "\nC\u3001 MAC", "\nD\u3001 \u7269\u7406\u5730\u5740", "\n195.IPX/SPX\u534f\u8bae\u4e2d\uff0cIPX\u5730\u5740\u7684\u7f51\u7edc\u53f7\u662f\u591a\u5c11\u4f4d( )", "\nA\u30012", "\nB\u30014", "\nC\u30016", "\nD\u30018", "\n196.\u8def\u7531\u987910.0.24.0/21\u7531\u54ea\u51e0\u6761\u5b50\u7f51\u8def\u7531\u805a\u5408\u800c\u6765\uff08 \uff09", "\nA\u300110.0.0.25/16", "\nB\u300110.0.0.23/16", "\nC\u300110.0.0.26/16", "\nD\u300110.0.0.22/16", "\n197.\u4fdd\u7559\u7ed9\u81ea\u73af\u6d4b\u8bd5\u7684IP\u5730\u5740\u662f( )", "\nA\u3001127.0.0.0", "\nB\u3001127.0.0.1", "\nC\u3001224.0.0.9", "\nD\u3001126.0.0.1", "\n198.\u6d41\u63a7\u6709\u54ea\u4e09\u79cd\u65b9\u5f0f\uff1f( )", "\nA\u3001 \u6291\u5236\u6280\u672f\uff1b", "\nB\u3001 \u7aef\u53e3\u901f\u7387\u81ea\u534f\u5546\u673a\u5236\uff1b", "\nC\u3001 \u7a97\u53e3\u673a\u5236", "\n199.\u53ef\u8def\u7531\u7f51\u7edc\u534f\u8bae\u7684\u7f51\u7edc\u5730\u5740\u7531\u54ea\u4e24\u90e8\u5206\u7ec4\u6210\uff1f( )", "\nA\u3001 \u4e3b\u673a\u5730\u5740 \u7f51\u7edc\u5730\u5740", "\nB\u3001 \u4e3b\u673a\u5730\u5740 \u5b50\u7f51\u63a9\u7801", "\nC\u3001 \u7f51\u7edc\u5730\u5740 \u5b50\u7f51\u63a9\u7801", "\n200.\u534e\u4e3a\u8def\u7531\u5668\u4e2d\uff0cIPX\u534f\u8bae\u652f\u6301\uff08 \uff09\u5c01\u88c5\u683c\u5f0f\uff08 \uff09", "\nA\u3001 Ethernet\uff0d11", "\nB\u3001 Ethernet\uff0dsnap", "\nC\u3001 Ethernet\uff0dnap", "\nD\u3001 Ethernet\uff0d802.2", "\nE\u3001 Ethernet\u2014802.3", "\nF\u3001 Ethernet\u2014802.5", "\n201.RIP\u534f\u8bae\u5f15\u5165\u8def\u7531\u4fdd\u6301\u673a\u5236\u7684\u4f5c\u7528\u662f\u9632\u6b62\u8def\u7531\u5f62\u6210\u73af\u8def\uff08 \uff09", "\nA\u3001true", "\nB\u3001false", "\n202.\u901a\u5e38\u60c5\u51b5\u4e0b\uff0cIGRP\u662f\u5982\u4f55\u83b7\u5f97\u8def\u7531\u4fe1\u606f( )", "\nA\u3001\u5e7f\u64ad", "\nB\u3001\u5355\u64ad\u548c\u591a\u64ad", "\nC\u3001\u591a\u64ad", "\nD\u3001\u591a\u64ad\u548c\u5e7f\u64ad", "\n203.DTE\u53ef\u4ee5\u5728\uff08 \uff09\u865a\u7535\u8def\u533a\u95f4\u53d1\u8d77\u547c\u53eb", "\nA\u3001 \u53cc\u5411\u4fe1\u9053\u533a\u95f4", "\nB\u3001 \u6c38\u4e45\u865a\u7535\u8def\u533a\u95f4", "\nC\u3001 \u5355\u5411\u547c\u5165\u4fe1\u9053\u533a\u95f4", "\nD\u3001 \u5355\u5411\u547c\u51fa\u4fe1\u9053\u533a\u95f4", "\n204.VLAN tag\u5728OSI\u53c2\u8003\u6a21\u578b\u7684\u54ea\u4e00\u5c42( )", "\nA\u3001 \u5e94\u7528\u5c42", "\nB\u3001 \u8868\u793a\u5c42", "\nC\u3001 \u4f1a\u8bdd\u5c42", "\nD\u3001 \u4f20\u8f93\u5c42", "\nE\u3001 \u7f51\u7edc\u5c42", "\nF\u3001 \u94fe\u8def\u5c42", "\nG\u3001 \u7269\u7406\u5c42", "\n205.\u5c5e\u4e8e\u5c40\u57df\u7f51\u534f\u8bae\u7684\u6709\uff08 \uff09", "\nA\u3001PPP", "\nB\u3001X.25", "\nC\u3001SLIP", "\nD\u3001Ethernet 11", "\nE\u3001Frame\uff0drelay", "\nF\u3001thernet SNAP", "\nG\u3001PPP-multilink", "\nH\u3001 IEEE-802.3", "\n206.\u65e0\u7c7b\u8def\u7531\u534f\u8bae\u8def\u7531\u8868\u8868\u76ee\u4e3a\u4e09\u7ef4\u7ec4\uff0c\u5176\u4e2d\u4e0d\u5305\u62ec\uff08 \uff09", "\nA\u3001 \u5b50\u7f51\u63a9\u7801", "\nB\u3001 \u6e90\u7f51\u7edc\u5730\u5740", "\nC\u3001 \u76ee\u7684\u7f51\u7edc\u5730\u5740", "\nD\u3001 \u4e0b\u4e00\u8df3\u5730\u5740", "\n207.\u5e27\u4e2d\u7ee7\u7684\u6700\u5927\u5e27\u4f20\u8f93\u957f\u5ea6\u662f\uff08 \uff09", "\nA\u3001 128\u6bd4\u7279", "\nB\u3001 256\u6bd4\u7279", "\nC\u3001 1024\u6bd4\u7279", "\nD\u3001 1600\u6bd4\u7279", "\n208.\u4e00\u4e2a\u5b50\u7f51\u63a9\u7801\u4e3a255.255.240.0\u7684\u7f51\u7edc\u4e2d\uff08 \uff09\uff0c\u5408\u6cd5\u7f51\u6bb5\u5730\u5740\u3002", "\nA\u3001150.150.0.0", "\nB\u3001150.150.0.8", "\nC\u3001150.150.8.0", "\nD\u3001150.150.16.0", "\n209.\u7f51\u6bb52.0.0.0\uff0c\u63a9\u7801255.255.224.0\uff0c\u6709\u6548\u7f51\u6bb5\u5730\u5740\u662f\uff08 \uff09", "\nA\u30012.1.16.0", "\nB\u30012.2.32.0", "\nC\u30012.3.48.0", "\nD\u30012.4.172.0", "\n210.\u8861\u91cf\u7f51\u7edc\u6027\u80fd\u7684\u4e3b\u8981\u6807\u51c6\u662f\uff08 \uff09", "\nA\u3001 \u5e26\u5bbd", "\nB\u3001 \u5ef6\u8fdf", "\n211. X.25\u4f7f\u7528\u6620\u5c04\u7684\u4f5c\u7528\u662f\uff08 \uff09", "\nA. \u6620\u5c04\u672c\u5730IP\u5230\u5bf9\u7aef\u7aef\u53e3\u503c\uff0c\u4ee5\u4fbf\u8def\u7531\u5668\u53d1\u9001\u6570\u636e\u65f6\u786e\u8ba4\u53d1\u9001\u7aef\u53e3", "\nB. \u6620\u5c04\u672c\u5730IP\u5230\u672c\u5730\u7aef\u53e3\u503c\uff0c\u4ee5\u4fbf\u8def\u7531\u5668\u53d1\u9001\u6570\u636e\u65f6\u786e\u8ba4\u53d1\u9001\u7aef\u53e3", "\nC. \u6620\u5c04\u5bf9\u7aefIP\u5230\u672c\u5730\u7aef\u53e3\u503c\uff0c\u4ee5\u4fbfX.25\u4ea4\u6362\u7f51\u7edc\u67e5\u627e\u6570\u636e\u53d1\u9001\u8def\u5f84", "\nD. \u6620\u5c04\u5bf9\u7aefIP\u5230\u5bf9\u7aef\u7aef\u53e3\u503c\uff0c\u4ee5\u4fbfX.25\u4ea4\u6362\u7f51\u7edc\u67e5\u627e\u6570\u636e\u53d1\u9001\u8def\u5f84", "\n212. \u5404\u4e2a\u8def\u7531\u534f\u8bae\u8861\u91cf\u8def\u7531\u7684\u597d\u574f\u6807\u51c6\u662f\uff08 \uff09", "\nA. \u8def\u7531", "\nB. \u8def\u7531\u5668\u4f18\u5148\u7ea7", "\nC. \u8def\u7531\u6743", "\nD. \u5305\u8f6c\u53d1\u7387", "\n213. \u8def\u7531\u5668\u4f5c\u4e3a\u7f51\u7edc\u4e92\u8fde\u8bbe\u5907\uff0c\u5fc5\u987b\u5177\u5907\u4ee5\u4e0b\u54ea\u4e9b\u7279\u70b9\u3002\uff08 \uff09", "\nA. \u81f3\u5c11\u652f\u6301\u4e24\u4e2a\u7f51\u7edc\u63a5\u53e3", "\nB. \u534f\u8bae\u81f3\u5c11\u8981\u5b9e\u73b0\u5230\u7f51\u7edc\u5c42", "\nC. \u81f3\u5c11\u652f\u6301\u4e24\u79cd\u4ee5\u4e0a\u7684\u5b50\u7f51\u534f\u8bae", "\nD. \u81f3\u5c11\u5177\u5907\u4e00\u4e2a\u5907\u4efd\u53e3", "\nE. \u5177\u6709\u5b58\u50a8\u3001\u8f6c\u53d1\u548c\u5bfb\u5f84\u529f\u80fd", "\nF. \u4e00\u7ec4\u8def\u7531\u534f\u8bae", "\nG. \u5fc5\u987b\u6709\u8f83\u9ad8\u7684\u534f\u8bae\u5904\u7406\u80fd\u529b", "\n214. OSPF \u534f\u8bae\u9002\u7528\u4e8e\u57fa\u4e8e IP \u7684\uff08 \uff09", "\nA. \u5927\u578b\u7f51\u7edc", "\nB. \u4e2d\u5c0f\u578b\u7f51\u7edc", "\nC. \u66f4\u5927\u89c4\u6a21\u7684\u7f51\u7edc", "\nD. isp\u4e0eisp\u4e4b\u95f4", "\n215. \u67d0\u5355\u4f4d\u8def\u7531\u5668\u9632\u706b\u5899\u4f5c\u4e86\u5982\u4e0b\u914d\u7f6e\uff1a", "\nfirewall enable", "\naccess-list normal 101 permit ip 202.38.0.0 0.0.0.255 10.10.10.10 0.0.0.255", "\naccess-list normal 101 deny tcp 202.38.0.0 0.0.0.255 10.10.10.10 0.0.0.255 gt 1024", "\naccess-list normal 101 deny ip any any", "\u7aef\u53e3\u914d\u7f6e\u5982\u4e0b", "\ninterface Serial0", "\nEnable", "\nIp address 202.38.111.25 255.255.255.0", "\nencapsulation ppp", "\nip access-group 101 out", "\ninterface Ethernet0", "\nip address 10.10.10.1 255.255.255.0", "\n\u5185\u90e8\u5c40\u57df\u7f51\u4e3b\u673a\u5747\u4e3a10.10.10.0 255.255.255.0\u7f51\u6bb5\u3002\u4ee5\u4e0b\u8bf4\u6cd5\u6b63\u786e\u7684\u662f\uff08\u672c\u9898\u5047\u8bbe\u5176\u4ed6\u7f51\u7edc\u5747\u6ca1\u6709\u4f7f\u7528\u9632\u706b\u5899\uff09\uff1a\uff08 \uff09", "\nA. \u5916\u90e8\u4e3b\u673a202.38.0.50\u53ef\u4ee5ping\u901a\u4efb\u4f55\u5185\u90e8\u4e3b\u673a\uff1b", "\nB. \u5185\u90e8\u4e3b\u673a10.10.10.5\uff0c\u53ef\u4ee5\u4efb\u610f\u8bbf\u95ee\u5916\u90e8\u7f51\u7edc\u8d44\u6e90\uff1b", "\nC. \u5916\u90e8202.38.5.0 255.255.255.0\u7f51\u6bb5\u4e3b\u673a\u53ef\u4ee5\u4e0e\u6b64\u5185\u90e8\u7f51\u4e3b\u673a\u5efa\u7acbtcp\u8fde\u63a5\uff1b", "\nD. \u5916\u90e8202.38.0.0 255.255.255.0\u7f51\u6bb5\u4e3b\u673a\u4e0d\u53ef\u4ee5\u4e0e\u6b64\u5185\u90e8\u7f51\u4e3b\u673a\u5efa\u7acbtcp\u8fde\u63a5", "\nE. \u5185\u90e8\u4efb\u610f\u4e3b\u673a\u90fd\u53ef\u4ee5\u4e0e\u5916\u90e8\u4efb\u610f\u4e3b\u673a\u5efa\u7acbtcp\u8fde\u63a5\uff1b", "\nF. \u5185\u90e8\u4efb\u610f\u4e3b\u673a\u53ea\u53ef\u4ee5\u4e0e\u5916\u90e8202.38.0.0 255.255.255.0\u7f51\u6bb5\u4e3b\u673a\u5efa\u7acbtcp\u8fde\u63a5", "\n216. \u4ee5\u4e0b\u7684\u534f\u8bae\u4e2d\uff0c\u54ea\u4e9b\u662f\u9762\u5411\u8fde\u63a5\u7684\u534f\u8bae\uff08 \uff09\u3002", "\nA. X25", "\nB. Ethernet", "\nC. IP", "\nD. Frame-relay", "\n217. \u8def\u7531\u5668A\u7684\u914d\u7f6e\u5982\u4e0b\uff1a", "\nQuidway#SHOW RUN", "\nCurrent configuration", "\n!", "\nuser huawei service-\u65e0\u6548 ppp password 0 quidway", "\n!", "\ninterface Ethernet0", "\nip address 1.1.1.1 255.0.0.0", "\n!", "\ninterface Serial0", "\nencapsulation ppp", "\nppp authentication chap", "\nppp chap host huawei", "\nip address 2.1.1.1 255.0.0.0", "\n!", "\ninterface Serial1", "\nencapsulation ppp", "\n!", "\ninterface Serial2", "\nflowcontrol normal", "\nasync mode dedicated", "\nencapsulation ppp", "\n!", "\nexit", "\nip route 0.0.0.0 0.0.0.0 2.1.1.2 preference 60", "\nend", "\n\u8def\u7531\u5668B\u7684\u914d\u7f6e\u5982\u4e0b", "\nQuidway#SHOW RUN", "\nCurrent configuration", "\n!", "\nuser hw service-\u65e0\u6548 ppp password 0 quidway", "\n!", "\ninterface Ethernet0", "\nip address 3.1.1.1 255.0.0.0", "\n!", "\ninterface Serial0", "\nclock-select DTECLK1", "\nencapsulation ppp", "\nppp chap host huawei", "\nip address 1.1.1.2 255.0.0.0", "\n!", "\ninterface Serial1", "\nencapsulation ppp", "\n!", "\ninterface Serial2", "\nflowcontrol normal", "\nasync mode dedicated", "\nencapsulation ppp", "\n!", "\nexit", "\nip route 0.0.0.0 0.0.0.0 2.1.1.2 preference 60", "\nend", "\n\u53d1\u73b0\u4e24\u7aef\u8def\u7531\u5668\u4e0d\u80fdPING\u540c\u5bf9\u7aef\u4ee5\u592a\u7f51\u7aef\u53e3\uff0c\u4e0b\u8ff0\u8bf4\u6cd5\u6b63\u786e\u7684\u662f\uff08 \uff09", "\nA.A\u9a8c\u8bc1\u914d\u7f6e\u9519\u8bef", "\nB.B\u9a8c\u8bc1\u914d\u7f6e\u9519\u8bef", "\nC.A\u9a8c\u8bc1\u65b9\u8def\u7531\u914d\u7f6e\u9519\u8bef", "\nD.B\u88ab\u9a8c\u8bc1\u65b9\u8def\u7531\u914d\u7f6e\u9519\u8bef", "\n-----------------------------------------------------------------------------------------", "\n1. \u4ee5\u4e0b\u5c5e\u4e8e\u6570\u636e\u94fe\u8def\u5c42\u7684\u8bbe\u5907\u662f\uff08 \uff09", "\n(A) \u4e2d\u7ee7\u5668 (B) \u4ee5\u592a\u7f51\u4ea4\u6362\u673a", "\n(C) \u7f51\u6865 (D) \u7f51\u5173", "\n2. \u89e3\u51b3\u8def\u7531\u73af\u95ee\u9898\u7684\u529e\u6cd5\u662f\uff08 \uff09", "\n(A) \u5b9a\u4e49\u8def\u7531\u6743\u7684\u6700\u5927\u503c (B) \u8def\u7531\u4fdd\u6301\u6cd5", "\n(C) \u6c34\u5e73\u5206\u5272 (D) \u8def\u7531\u5668\u91cd\u8d77", "\n3. BGP\u662f\u5728\uff08 \uff09\u4e4b\u95f4\u4f20\u64ad\u8def\u7531\u7684\u534f\u8bae", "\n(A) \u4e3b\u673a (B) \u5b50\u7f51", "\n(C) \u533a\u57df(area) (D) \u81ea\u6cbb\u7cfb\u7edf(AS)", "\n4. \u914d\u7f6e\u5907\u4efd\u4e2d\u5fc3\u7684\u76ee\u7684\u662f\uff08 \uff09", "\n(A) \u589e\u52a0\u7f51\u7edc\u7684\u5e26\u5bbd (B) \u63d0\u9ad8\u7f51\u7edc\u7684\u53ef\u7528\u6027", "\n(C) \u9632\u6b62\u6570\u636e\u4f20\u8f93\u7684\u610f\u5916\u4e2d\u6b62 (D) \u964d\u4f4e\u7f51\u7edc\u7684\u4f20\u8f93\u8d39\u7528", "\n5. \u4ee5\u4e0b\u5185\u5bb9\u90a3\u4e9b\u662f\u8def\u7531\u4fe1\u606f\u4e2d\u6240\u4e0d\u5305\u542b\u7684\uff08 \uff09", "\n(A) \u76ee\u6807\u7f51\u7edc (B) \u6e90\u5730\u5740", "\n(C) \u8def\u7531\u6743\u503c (D) \u4e0b\u4e00\u8df3", "\n6. \u9009\u51fa\u57fa\u4e8eTCP\u534f\u8bae\u7684\u5e94\u7528\u7a0b\u5e8f\uff08 \uff09", "\n(A) PING (B) TFTP", "\n(C) TELNET (D) OSPF", "\n7. X.25\u534f\u8bae\u63d0\u4f9b\u7ed9\u7528\u6237\u7684\u53ef\u7528\u7684\u903b\u8f91\u4fe1\u9053\u6700\u591a\u4e3a\uff08 \uff09\u6761", "\n(A) 16 (B) 32", "\n(C) 4095 (D) 4096", "\n8. OSI\u4ee3\u8868\uff08 \uff09", "\n(A) Organization for Standards Institute (B) Organization for Internet Standards (C) Open Standards Institute (D) Open Systems Interconnection", "\n9. \u5e27\u4e2d\u7ee7LMI\u4e00\u822c\u5360\u7528\u54ea\u51e0\u4e2aDLCI \uff08 \uff09", "\n(A) 0 (B) 16", "\n(C) 1007 (D) 1023", "\n10. PPP\u9a8c\u8bc1\u6210\u529f\u540e\uff0c\u5c06\u7531Authenticate\u9636\u6bb5\u8f6c\u5165\u4ec0\u4e48\u9636\u6bb5\uff08 \uff09", "\n(A) Dead (B) Establish", "\n(C) Network (D) Terminate", "\n11. \u5728\u4e03\u5341\u5e74\u4ee3\u672b\uff0c\u56fd\u9645\u6807\u51c6\u5316\u7ec4\u7ec7ISO\u63d0\u51fa\u4e86\u5f00\u653e\u7cfb\u7edf\u4e92\u8fde\u53c2\u8003\u6a21\u578b\u3002\u534f\u8bae\u5206\u5c42\u5927\u5927\u7b80\u5316\u4e86\u7f51\u7edc\u534f\u8bae\u7684\u590d\u6742\u6027\uff0c\u5728OSI 7\u5c42\u6a21\u578b\u4e2d\uff0c\u7f51\u7edc\u5c42\u7684\u529f\u80fd\u4e3b\u8981\u662f\uff08 \uff09", "\n(A) \u5728\u4fe1\u9053\u4e0a\u4f20\u8f93\u539f\u59cb\u7684\u6bd4\u7279\u6d41 (B) \u52a0\u5f3a\u7269\u7406\u5c42\u6570\u636e\u4f20\u8f93\u539f\u59cb\u6bd4\u7279\u6d41\u7684\u529f\u80fd\u5e76\u4e14\u8fdb\u884c\u6d41\u91cf\u8c03\u63a7", "\n(C) \u786e\u5b9a\u6570\u636e\u5305\u4ece\u6e90\u7aef\u5230\u76ee\u7684\u7aef\u5982\u4f55\u9009\u62e9\u8def\u7531 (D) \u786e\u4fdd\u5230\u8fbe\u5bf9\u65b9\u7684\u5404\u6bb5\u4fe1\u606f\u6b63\u786e\u65e0\u8bef", "\n12. \u8bbf\u95ee\u5217\u8868\u5982\u4e0b\uff1a access-list 4 deny 202.38.0.0 0.0.255.255 access-list 4 permit 202.38.160.1 0.0.0.255 \u5e94\u7528\u4e8e\u8be5\u8def\u7531\u5668\u7aef\u53e3\u7684\u914d\u7f6e\u5982\u4e0b\uff1a Quidway(config)# firewall default permit Quidway(config-if-Serial0)# ip access-group 4 in \u8be5\u8def\u7531\u5668E0\u53e3\u63a5\u672c\u5730\u5c40\u57df\u7f51\uff0cS0\u53e3\u63a5\u5230INTERNET\uff0c\u4ee5\u4e0b\u8bf4\u6cd5\u6b63\u786e\u7684\u6709\uff1a \uff08 \uff09", "\n(A) \u6240\u6709\u5916\u90e8\u6570\u636e\u5305\u90fd\u53ef\u4ee5\u901a\u8fc7S\u53e3\uff0c\u81ea\u7531\u51fa\u5165\u672c\u5730\u5c40\u57df\u7f51 (B) \u5185\u90e8\u4e3b\u673a\u53ef\u4ee5\u4efb\u610f\u8bbf\u95ee\u5916\u90e8\u4efb\u4f55\u5730\u5740\u7684\u4e3b\u673a", "\n(C) \u5185\u90e8\u4e3b\u673a\u4e0d\u53ef\u4ee5\u8bbf\u95ee\u672c\u5217\u8868\u7981\u6b62\u7684\u5916\u90e8\u5730\u5740\u7684\u4e3b\u673a (D) \u8fde\u5728\u8be5\u8def\u7531\u5668\u5176\u4ed6\u7aef\u53e3\u7684\u4e3b\u673a\u53ef\u4efb\u610f\u8bbf\u95ee\u5185\u90e8\u7f51\u8d44\u6e90", "\n13. \u5728 IPX \u4e4b\u4e0a\u627f\u8f7d\u5404\u79cd\u4e0a\u5c42\u534f\u8bae\uff0c\u5305\u62ec\uff08 \uff09", "\n(A) Rip (B) Netbios", "\n(C) Ncp (D) Tcp", "\n14. \u5728\u5e27\u4e2d\u7ee7\u5c01\u88c5\u4e2d\u914d\u7f6e\u9759\u6001MAP\u5fc5\u987b\u6307\u5b9a\u54ea\u4e9b\u53c2\u6570\uff1a \uff08 \uff09", "\n(A) \u672c\u5730\u7684DLCI (B) \u5bf9\u7aef\u7684DLCI", "\n(C) \u672c\u5730\u7684\u534f\u8bae\u5730\u5740 (D) \u5bf9\u7aef\u7684\u534f\u8bae\u5730\u5740", "\n15. \u67d0\u516c\u53f8\u7533\u8bf7\u5230\u4e00\u4e2aC\u7c7bIP\u5730\u5740\uff0c\u4f46\u8981\u8fde\u63a56\u4e2a\u7684\u5b50\u516c\u53f8\uff0c\u6700\u5927\u7684\u4e00\u4e2a\u5b50\u516c\u53f8\u670931\u53f0\u8ba1\u7b97\u673a\uff0c\u6bcf\u4e2a\u5b50\u516c\u53f8\u5728\u4e00\u4e2a\u7f51\u6bb5\u4e2d\uff0c\u5219\u5b50\u7f51\u63a9\u7801\u5e94\u8bbe\u4e3a\uff08 \uff09", "\n(A) 255.255.255.0 (B) 255.255.255.128", "\n(C) 255.255.255.192 (D) 255.255.255.224", "\n(E) 255.255.255.240 (F) \u4ee5\u4e0a\u90fd\u4e0d\u5bf9\uff01", "\n16. \u4ee5\u4e0b\u5173\u4e8eRip\u8def\u7531\u805a\u5408\u7684\u8bf4\u6cd5\u6b63\u786e\u7684\u662f", "\n(A) Rip V1\u9ed8\u8ba4\u652f\u6301\u8def\u7531\u805a\u5408\uff0c\u9700\u8981\u65f6\u53ef\u4ee5\u5173\u95ed\u8def\u7531\u805a\u5408\u529f\u80fd (B) \u534e\u4e3aQuidway \u7cfb\u5217\u8def\u7531\u5668Rip V2\u7684\u5b9e\u73b0\u53ef\u4ee5\u5173\u95ed\u8def\u7531\u805a\u5408\u529f\u80fd", "\n(C) \u3001Rip V1\u4e0d\u652f\u6301\u5b50\u7f51\u8def\u7531\u805a\u5408\u5230\u4e00\u4e2a\u975e\u81ea\u7136\u5b50\u7f51\u8def\u7531 (D) Rip V2\u652f\u6301\u5b50\u7f51\u8def\u7531\u805a\u5408\u5230\u4e00\u4e2a\u975e\u81ea\u7136\u5b50\u7f51\u8def\u7531", "\n17. \u5f53\u4e00\u53f0\u4e3b\u673a\u4ece\u4e00\u4e2a\u7f51\u7edc\u79fb\u5230\u53e6\u4e00\u4e2a\u7f51\u7edc\u65f6\uff0c\u4ee5\u4e0b\u8bf4\u6cd5\u6b63\u786e\u7684\u662f\uff08 \uff09", "\n(A) \u5fc5\u987b\u6539\u53d8\u5b83\u7684IP\u5730\u5740\u548cMAC\u5730\u5740 (B) \u5fc5\u987b\u6539\u53d8\u5b83\u7684IP\u5730\u5740\uff0c\u4f46\u4e0d\u9700\u6539\u52a8MAC\u5730\u5740", "\n(C) \u5fc5\u987b\u6539\u53d8\u5b83\u7684MAC\u5730\u5740\uff0c\u4f46\u4e0d\u9700\u6539\u52a8IP\u5730\u5740 (D) MAC\u5730\u5740\u3001IP\u5730\u5740\u90fd\u4e0d\u9700\u6539\u52a8", "\n\u534e\u4e3a\u7b14\u8bd5", "\n    Q1\uff1a\u8bf7\u4f60\u5206\u522b\u5212\u5212OSI\u7684\u4e03\u5c42\u7f51\u7edc\u7ed3\u6784\u56fe\uff0c\u548cTCP/IP\u7684\u4e94\u5c42\u7ed3\u6784\u56fe\uff1f", "\nQ2\uff1a\u8bf7\u4f60\u8be6\u7ec6\u7684\u89e3\u91ca\u4e00\u4e0bIP\u534f\u8bae\u7684\u5b9a\u4e49\uff0c\u5728\u54ea\u4e2a\u5c42\u4e0a\u9762\uff0c\u4e3b\u8981\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f TCP\u4e0eUDP\u5462\uff1f", "\nQ3\uff1a\u8bf7\u95ee\u4ea4\u6362\u673a\u548c\u8def\u7531\u5668\u5206\u522b\u7684\u5b9e\u73b0\u539f\u7406\u662f\u4ec0\u4e48\uff1f\u5206\u522b\u5728\u54ea\u4e2a\u5c42\u6b21\u4e0a\u9762\u5b9e\u73b0\u7684\uff1f", "\nQ4:\u8bf7\u95eeC++\u7684\u7c7b\u548cC\u91cc\u9762\u7684struct\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\nQ5:\u8bf7\u8bb2\u4e00\u8bb2\u6790\u6784\u51fd\u6570\u548c\u865a\u51fd\u6570\u7684\u7528\u6cd5\u548c\u4f5c\u7528\uff1f ", "A1\uff1aOSI/ISO\u6839\u636e\u6574\u4e2a\u8ba1\u7b97\u673a\u7f51\u7edc\u529f\u80fd\u5c06\u7f51\u7edc\u5206\u4e3a\u7269\u7406\u5c42\u3001\u6570\u636e\u94fe\u8def\u5c42\u3001\u7f51\u7edc\u5c42\u3001\u4f20\u8f93\u5c42\u3001\u4f1a\u8bdd\u5c42\u3001\u8868\u793a\u5c42\u3001\u5e94\u7528\u5c42\u4e03\u5c42\u3002\u4e5f\u79f0\"\u4e03\u5c42\u6a21\u578b\"", "\nTCP/IP\"\u4e94\u5c42\u6a21\u578b\" \u7269\u7406\u5c42\u3001\u7f51\u7edc\u63a5\u53e3\u5c42\u3001\u7f51\u7edc\u5c42\u3001\u4f20\u8f93\u5c42\u3001\u5e94\u7528\u5c42", "\n\u8def\u7531\u7684\u529f\u80fd\uff0c\u5373\u5bfb\u5f84\u7684\u529f\u80fd\uff0cTCP\u534f\u8bae \u662f\u4e00\u4e2a\u4f20\u8f93\u5c42\u7684\u534f\u8bae\u5b83\u5411\u4e0b\u5c4f\u853d\u4e86IP\u534f\u8bae\u4e0d\u53ef\u9760\u4f20\u8f93\u7684\u7279\u6027\uff0c\u5411\u4e0a\u63d0\u4f9b\u4e00\u4e2a\u53ef\u9760\u7684\u70b9\u5230\u70b9\u7684\u4f20\u8f93\uff0cUDP\u63d0\u4f9b\u7684\u662f\u4e00\u79cd\u65e0\u8fde\u63a5\u7684\u670d\u52a1,\u4e3b\u8981\u8003\u8651\u5230\u5f88\u591a\u5e94\u7528\u4e0d\u9700\u8981\u53ef\u9760\u7684\u8fde\u63a5\uff0c\u4f46\u9700\u8981\u5feb\u901f\u7684\u4f20\u8f93", "\nA2\uff1aIP\u534f\u8bae\u662f\u7f51\u7edc\u5c42\u7684\u534f\u8bae\uff0c\u5b83\u5b9e\u73b0\u4e86Internet\u4e2d\u81ea\u52a8", "\nA3\uff1a\u4ea4\u6362\u673a\u7528\u5728\u5c40\u57df\u7f51\u4e2d\uff0c\u4ea4\u6362\u673a\u901a\u8fc7\u7eaa\u5f55\u5c40\u57df\u7f51\u5185\u5404\u8282\u70b9\u673a\u5668\u7684MAC\u5730\u5740\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4f20\u9012\u62a5\u6587\uff0c\u65e0\u9700\u770b\u62a5\u6587\u4e2d\u7684IP\u5730\u5740\u3002\u8def\u7531\u5668\u8bc6\u522b\u4e0d\u540c\u7f51\u7edc\u7684\u65b9\u6cd5\u662f\u901a\u8fc7\u8bc6\u522b\u4e0d\u540c\u7f51\u7edc\u7684\u7f51\u7edcID\u53f7(IP\u5730\u5740\u7684\u9ad8\u7aef\u90e8\u5206)\u8fdb\u884c\u7684\uff0c\u6240\u4ee5\u4e3a\u4e86\u4fdd\u8bc1\u8def\u7531\u6210\u529f\uff0c\u6bcf\u4e2a\u7f51\u7edc\u90fd\u5fc5\u987b\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u7f51\u7edc\u7f16\u53f7\u3002\u8def\u7531\u5668\u901a\u8fc7\u5bdf\u770b\u62a5\u6587\u4e2dIP\u5730\u5740\uff0c\u6765\u51b3\u5b9a\u8def\u5f84\uff0c\u5411\u90a3\u4e2a\u5b50\u7f51(\u4e0b\u4e00\u8df3)\u8def\u7531 \u4e5f\u5c31\u662f\u8bf4\u4ea4\u6362\u673a\u5de5\u4f5c\u5728\u6570\u636e\u94fe\u8def\u5c42\u770bMAC\u5730\u5740\uff0c\u8def\u7531\u5668\u5de5\u4f5c\u5728\u7f51\u7edc\u5c42\u770bIP\u5730\u5740\uff0c\u4f46\u662f\u7531\u4e8e\u73b0\u5728\u7f51\u7edc\u8bbe\u5907\u7684\u53d1\u5c55\uff0c\u5f88\u591a\u8bbe\u5907\u65e2\u6709\u4ea4\u6362\u673a\u7684\u529f\u80fd\u6709\u7531\u8def\u7531\u5668\u7684\u529f\u80fd(\u4ea4\u6362\u8bd5\u8def\u7531\u5668)\u4f7f\u5f97\u4e24\u8005\u754c\u9650\u8d8a\u6765\u8d8a\u6a21\u7cca\u3002", "\nA4:C++\u7684\u7c7b\u5177\u6709\u6570\u636e\u5c01\u88c5\uff0c\u5176\u5305\u542b\u5c5e\u6027\u8bbf\u95ee\u7ea7\u522b\u53ef\u4ee5\u4e3aPrivate,public \u548cprotect,\u8fd8\u5177\u6709 \u5b9e\u73b0\u7c7b\u63a5\u53e3\u529f\u80fd\u548c\u8f85\u52a9\u529f\u80fd\u7684\u64cd\u4f5c\u51fd\u6570\uff0c\u800cstruct\u5c5e\u6027\u8bbf\u95ee\u5168\u53bf\u53ea\u6709public\uff0c\u6ca1\u6709\u6570\u636e\u5c01\u88c5\u529f\u80fd\uff0c\u4e5f\u5c31\u6ca1\u6709\u5b9e\u73b0\u4fe1\u606f\u9690\u85cf\u7740\u4e00\u9762\u5411\u5bf9\u8c61\u7684\u601d\u60f3\u7684\u673a\u5236,struct\u672c\u8eab\u4e0d\u542b\u6709\u64cd\u4f5c\u51fd\u6570,\u53ea\u6709\u6570\u636e", "\nA5:\u6790\u6784\u51fd\u6570\u662f\u5728\u7c7b\u5bf9\u8c61\u6b7b\u4ea1\u65f6\u7531\u7cfb\u7edf\u81ea\u52a8\u8c03\u7528\uff0c\u5176\u4f5c\u7528\u662f\u7528\u6765\u91ca\u653e\u5bf9\u8c61\u7684\u6307\u9488\u6570\u636e\u6210\u5458\u6240\u6307\u7684\u52a8\u6001\u7a7a\u95f4,\u5982\u679c\u5728\u6784\u9020\u51fd\u6570\u4e2d\u4f60\u7533\u8bf7\u4e86\u52a8\u6001\u7a7a\u95f4\uff0c\u90a3\u4e48\u4e3a\u4e86\u907f\u514d\u5f15\u8d77\u7a0b\u5e8f\u9519\u8bef\uff0c\u4f60\u5fc5\u987b\u5728\u6790\u6784\u51fd\u6570\u4e2d\u91ca\u653e\u8fd9\u90e8\u5206\u5185\u5b58\u7a7a\u95f4\uff0c\u5982\u679c\u57fa\u7c7b\u7684\u51fd\u6570\u7528 virtual\u4fee\u9970\uff0c\u6210\u4e3a\u865a\u51fd\u6570\uff0c\u5219\u5176\u6d3e\u751f\u7c7b\u76f8\u5e94\u7684\u91cd\u8f7d\u51fd\u6570\u4ecd\u80fd\u7ee7\u627f\u8be5\u865a\u51fd\u6570\u7684\u6027\u8d28\uff0c\u865a\u51fd\u6570\u8fdb\u884c\u52a8\u6001\u8054\u7f16\uff0c\u4e5f\u5373\u5177\u6709\u591a\u6001\u6027,\u4e5f\u5c31\u662f\u6d3e\u751f\u7c7b\u53ef\u4ee5\u6539\u53d8\u57fa\u7c7b\u540c\u540d\u51fd\u6570\u7684\u884c\u4e3a\uff0c\u5728\u9762\u5411\u5bf9\u8c61\u4e16\u754c\u4e2d\uff0c\u591a\u592a\u662f\u6700\u5f3a\u5927\u7684\u673a\u5236\uff0c\u987b\u51fd\u6570\u5c31\u662f\u8fd9\u4e00\u673a\u5236\u7684c++\u7684\u5b9e\u73b0\u65b9\u5f0f", "\n\u7b54\u6848\u4e0d\u662f\u7edd\u5bf9\u6b63\u786e\uff0c\u4e2a\u4eba\u89c9\u5f97\u89e3\u91ca\u7684\u8fd8\u662f\u6bd4\u8f83\u5168\u9762\u7684.", "2006\u5e74\u534e\u4e3a\u7814\u53d1\u7c7b\u7b14\u8bd5\u7f16\u7a0b\u9898(2006\u5e7410\u670829\u65e5\u665a\uff0c\u6210\u90fd\u7535\u5b50\u79d1\u6280\u5927\u5b66\u8003\u8bd5\u9898\u76ee)", "\u9898\u76ee\uff1a\u7f51\u7403\u4e2d\u5fc3\u5171\u6709100\u4e2a\u7f51\u7403\u573a\uff0c\u6bcf\u4e2a\u5355\u4f4d\u53ef\u4ee5\u6765\u7533\u8bf71\u5230100\u7684\u573a\u5730\uff0c\u7533\u8bf7\u7684\u573a\u5730\u7f16\u53f7\u5fc5\u987b\u662f\u8fde\u7eed\u7684\uff0c\u5982\u679c\u573a\u5730\u5df2\u7ecf\u88ab\u5176\u4ed6\u5355\u4f4d\u5360\u7528\uff0c\u5c31\u4e0d\u80fd\u518d\u6b21\u4f7f\u7528\uff0c\u800c\u4e14\u5355\u4f4d\u5728\u4f7f\u7528\u5b8c\u573a\u5730\u540e\u5fc5\u987b\u5f52\u8fd8\u3002\u8bf7\u8bbe\u8ba1\u4e00\u4e2a\u5b8c\u6574\u7684\u7cfb\u7edf(c\u8bed\u8a00\uff09\u3002\uff08\u9650\u65f65\u5206\u949f\uff09", "\nTennis.h", "\nstruct TennisGround", "\n{", "\nint num;", "\nchar *agentName;", "\n};", "\ntypedef struct TennisGround TG;", "void mallocTG(TG *total);", "\nvoid freeTG(TG *total);", "Tennis.c", "\n#include ", "printf(\u201cPlease input your agentName:\u201d);", "\nscanf(\u201c%s\u201d, agentName);", "\nprintf(\u201cPlease input the size of the TennisGround:\u201d);", "\nscanf(\u201c%d\u201d, &size);", "\nprintf(\u201cPlease input the TennisGround number you want to start:\u201d);", "\nscanf(\u201c%d\u201d, &start);", "\nif((total+start)->agentName != \u201d \u201c)", "\n{", "\nprintf(\u201cmalloc failed!\\n\u201d);", "\nexit(-1);", "\n}", "\nelse", "\n{", "\nwhile(count \n{", "\n(total+start+count)->agentName = agentName;", "\ncount++;", "\n}", "\n}", "\n}", "void freeTG(TG* total)", "\n{", "\nchar *an = (char*)malloc(sizeof(char)*10);", "\nprintf(\u201cplease input agentName you want to free:\u201d);", "\nscanf(\u201c%s\u201d, an);", "\nint count = 0;", "\nwhile(count \n{", "\nif(strcmp((total+count)->agentName, an) == 0)", "\n(total+count)->agentName = \u201d \u201c;", "\ncount++;", "\n}", "\n}", "int main()", "\n{", "\nint i;", "\nint sw;", "\nTG *total = (TG*)malloc(sizeof(TG)*100);", "for(i=0; i\n{", "\n(total+i)->num = i;", "\n(total+i)->agentName = \u201d \u201c;", "\n}", "while(1)", "\n{", "\nprintf(\u201c*******Tennis Ground Mallocation******************\\n\u201d);", "\nfor(i=0; i\n{", "\nprintf(\"%d(%s) \", (total+i)->num, (total+i)->agentName);", "\nif(i%5 == 0)", "\nprintf(\u201c\\n\u201d);", "\n}", "\nprintf(\u201c\\n\u201d);", "\nprintf(\u201c**************************************************\\n\u201d);", "\nprintf(\u201cPlease input your choosen:(1-malloc,2-free):\u201d);", "\nscanf(\u201c%d\u201d, &sw);", "\nif(sw == 1)", "\nmallocTG(total);", "\nelse", "\nfreeTG(total);", "}", "return 0;", "\n}", "\u8bf7\u4f60\u8be6\u7ec6\u5730\u89e3\u91ca\u4e00\u4e0bIP\u534f\u8bae\u7684\u5b9a\u4e49\uff0c\u5728\u54ea\u4e2a\u5c42\u4e0a\u9762\uff1f\u4e3b\u8981\u6709\u4ec0\u4e48\u4f5c\u7528\uff1fTCP\u4e0eUDP\u5462\uff1f", "\nIP\u662fInternet Protocol\u7684\u7f29\u5199\uff0c\u610f\u601d\u662f\u201c\u7f51\u7edc\u4e4b\u95f4\u4e92\u8fde\u7684\u534f\u8bae\u201d\uff0c\u89c4\u5b9a\u4e86\u8ba1\u7b97\u673a\u5728\u56e0\u7279\u7f51\u4e0a\u8fdb\u884c\u901a\u4fe1\u65f6\u5e94\u5f53\u9075\u5b88\u7684\u89c4\u5219\u3002\u4efb\u4f55\u5382\u5bb6\u751f\u4ea7\u7684\u8ba1\u7b97\u673a\u7cfb\u7edf\uff0c\u53ea\u8981\u9075\u5b88IP\u534f\u8bae\u5c31\u53ef\u4ee5\u4e0e\u56e0\u7279\u7f51\u4e92\u8fde\u4e92\u901a\u3002IP\u534f\u8bae\u8fd0\u884c\u5728\u4e92\u8fde\u7f51\u7edc\u5c42\uff0c\u8d1f\u8d23\u63d0\u4f9b\u57fa\u672c\u7684\u6570\u636e\u5c01\u5305\u4f20\u9001\u529f\u80fd\uff0c\u8ba9\u6bcf\u4e00\u5757\u6570\u636e\u5305\u90fd\u80fd\u591f\u5230\u8fbe\u76ee\u7684\u4e3b\u673a\uff08\u4f46\u4e0d\u68c0\u67e5\u662f\u5426\u88ab\u6b63\u786e\u63a5\u6536\uff09\u3002IP\u534f\u8bae\u5de5\u4f5c\u5728\u7f51\u7edc\u5c42\u3002", "\nUDP\uff0cTCP\u90fd\u5de5\u4f5c\u5728\u4f20\u8f93\u5c42\u3002", "\nTCP\u534f\u8bae\u662f\u82f1\u6587Transmission Control Protocol\u7684\u7f29\u5199\uff0c\u610f\u601d\u662f\u4f20\u8f93\u63a7\u5236\u534f\u8bae\u3002TCP\u63d0\u4f9bIP\u73af\u5883\u4e0b\u7684\u6570\u636e\u53ef\u9760\u4f20\u8f93\uff0c\u5b83\u63d0\u4f9b\u7684\u670d\u52a1\u5305\u62ec\u6570\u636e\u6d41\u4f20\u9001\u3001\u53ef\u9760\u6027\u3001\u6709\u6548\u6d41\u63a7\u3001\u5168\u53cc\u5de5\u64cd\u4f5c\u548c\u591a\u8def\u590d\u7528\u3002\u901a\u8fc7\u9762\u5411\u8fde\u63a5\u3001\u7aef\u5230\u7aef\u548c\u53ef\u9760\u7684\u6570\u636e\u5305\u53d1\u9001\u3002\u901a\u4fd7\u8bf4\uff0c\u5b83\u662f\u4e8b\u5148\u4e3a\u6240\u53d1\u9001\u7684\u6570\u636e\u5f00\u8f9f\u51fa\u8fde\u63a5\u597d\u7684\u901a\u9053\uff0c\u7136\u540e\u518d\u8fdb\u884c\u6570\u636e\u53d1\u9001\uff1bUDP\u662fUser Datagram Protocol\u7684\u7f29\u5199\uff0c\u610f\u601d\u662f\uff1a\u7528\u6237\u6570\u636e\u5305\u534f\u8bae\uff0cUDP\u4e0d\u4e3aIP\u63d0\u4f9b\u53ef\u9760\u6027\u3001\u6d41\u63a7\u6216\u5dee\u9519\u6062\u590d\u529f\u80fd\u3002\u4e00\u822c\u6765\u8bf4\uff0cTCP\u5bf9\u5e94\u7684\u662f\u53ef\u9760\u6027\u8981\u6c42\u9ad8\u7684\u5e94\u7528\uff0c\u800cUDP\u5bf9\u5e94\u7684\u5219\u662f\u53ef\u9760\u6027\u8981\u6c42\u4f4e\u3001\u4f20\u8f93\u7ecf\u6d4e\u7684\u5e94\u7528\u3002", "\u534e\u4e3aC\u8bed\u8a00\u7b14\u8bd5\u9898", "\n\u4e00\u3001\u5224\u65ad\u9898\uff08\u5bf9\u7684\u5199T\uff0c\u9519\u7684\u5199F\u5e76\u8bf4\u660e\u539f\u56e0\uff0c\u6bcf\u5c0f\u98984\u5206\uff0c\u517120\u5206\uff09", "\n1\u3001\u6709\u6570\u7ec4\u5b9a\u4e49int a[2][2]={{1},{2,3}};\u5219a[0][1]\u7684\u503c\u4e3a0\u3002\uff08     \uff09", "\n2\u3001int (*ptr) (),\u5219ptr\u662f\u4e00\u7ef4\u6570\u7ec4\u7684\u540d\u5b57\u3002\uff08     \uff09", "\n3\u3001\u6307\u9488\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\u90fd\u53ef\u8fdb\u884c>,=,\n4\u3001switch(c) \u8bed\u53e5\u4e2dc\u53ef\u4ee5\u662fint ,long,char ,float ,unsigned int \u7c7b\u578b\u3002\uff08   \uff09", "\n5\u3001#define print(x)  printf(\uff02the no, \uff02#x\uff02,is \uff02)", "\u4e8c\u3001\u586b\u7a7a\u9898\uff08\u517130\u5206\uff09", "\n1\u3001\u5728windows\u4e0b\uff0c\u5199\u51fa\u8fd0\u884c\u7ed3\u679c\uff0c\u6bcf\u7a7a2\u5206\uff0c\u517110\u5206\u3002", "\nchar str[ ]= \uff02Hello\uff02;", "\nchar *p=str;", "\nint n=10;", "\nsizeof(str)=(      )", "\nsizeof(p)=(       )", "\nsizeof(n)=(       )", "\nvoid func(char str[100])", "\n{    }", "\nsizeof(str)=(     )", "2\u3001void setmemory(char **p, int num)", "\n{ *p=(char *) malloc(num);}", "\nvoid test(void)", "\n{  char *str=NULL;", "\n   getmemory(&str,100);", "\n   strcpy(str,\uff02hello\uff02);", "\n   printf(str);", "\n}", "\n\u8fd0\u884ctest\u51fd\u6570\u6709\u4ec0\u4e48\u7ed3\u679c\uff1f\uff08                                \uff0910\u5206", "3\u3001\u8bbeint arr[]={6,7,8,9,10};", "\n     int *ptr=arr;", "\n   *(ptr++)+=123;", "\n printf(\uff02%d,%d\uff02,*ptr,*(++ptr));", "\n(                                   ) 10\u5206", "\u4e8c\u3001\u7f16\u7a0b\u9898\uff08\u7b2c\u4e00\u5c0f\u989820\uff0c\u7b2c\u4e8c\u5c0f\u989830\u5206\uff09", "\n1\u3001  \u4e0d\u4f7f\u7528\u5e93\u51fd\u6570\uff0c\u7f16\u5199\u51fd\u6570int strcmp(char  *source, char *dest)", "\n\u76f8\u7b49\u8fd4\u56de0\uff0c\u4e0d\u7b49\u8fd4\u56de-1\uff1b", "\n 2\u3001  \u5199\u4e00\u51fd\u6570int fun(char *p)\u5224\u65ad\u4e00\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u56de\u6587\uff0c\u662f\u8fd4\u56de1\uff0c\u4e0d\u662f\u8fd4\u56de0\uff0c\u51fa\u9519\u8fd4\u56de-1", "\n\u4e94\u3001 \u9605\u8bfb\u7a0b\u5e8f\u9898(\u6bcf\u4e2a\u5c0f\u98985\u5206\uff0c\u517120\u5206)", "\n1\uff0e\u9605\u8bfb\u4ee5\u4e0b\u7a0b\u5e8f\uff0c\u6982\u62ec\u5730\u5199\u51fa\u7a0b\u5e8f\u7684\u529f\u80fd\u3002", "\n\uff03i nclude", "\ndouble Exp(double x)", "\n{ double sum=1.0;", "\ndouble term=x;", "\ndouble i=1 ;", "\nwhile (term>=1.0E-8)", "\n{ sum+=term ;", "\ni++;", "\nterm=term*x/i ;", "\n}", "\nreturn sum ;", "\n}", "\nvoid main()", "\n{ double s;", "\ns=Exp(1.0)+Exp(2.0);", "\ncout.precision(8);", "\ncout\n}", "\n2. \u9605\u8bfb\u7a0b\u5e8f\uff0c\u5199\u51fa\u7a0b\u5e8f\u6267\u884c\u65f6\u8f93\u51fa\u7ed3\u679c\u3002", "\n\uff03i nclude", "\nconst int SIZE=10;", "\nclass stack", "\n{ char stck[SIZE];", "\nint top;", "\npublic:", "\nvoid init();", "\nvoid push(char ch);", "\nchar pop();", "\n};", "\nvoid stack::init()", "\n{ top=0; }", "\nvoid stack::push(char ch)", "\n{ if(top==SIZE)", "\n\u3000{ cout\nreturn ;", "\n\u3000}", "\nstck[top++]=ch;", "\n}", "\nchar stack::pop()", "\n{ if(top==0)", "\n\u3000\u3000\u3000{ cout\n\u3000\u3000\u3000return 0;", "\n}", "\nreturn stck[--top];", "\n}", "\nvoid main()", "\n{ stack s1, s2;", "\n\u3000s1.init();", "\n\u3000s2.init();", "\n\u3000s1.push('a');", "\n\u3000s1.push('b');", "\n\u3000s1.push('c');", "\n\u3000s2.push('x');", "\n\u3000s2.push('y');", "\n\u3000s2.push('z');", "\n\u3000for(int i=0; i\ncout\n\u3000for(i=0; i\ncout\n}", "\n\u7a0b\u5e8f\u7ed3\u679c:", "\n3.\u9605\u8bfb\u7a0b\u5e8f\uff0c\u5199\u51fa\u7a0b\u5e8f\u8fd0\u884c\u65f6\u8f93\u51fa\u7ed3\u679c\u3002", "\n\uff03i nclude", "\nclass Tdate", "\n{ public:", "\nTdate();", "\nTdate(int d);", "\nTdate(int m, int d);", "\nTdate(int m, int d, int y);", "\nprotected:", "\nint month;", "\nint day;", "\nint year;", "\n};", "\nTdate::Tdate()", "\n{ month=4;", "\n\u3000\u3000\u3000day=15;", "\n\u3000\u3000\u3000year=1995;", "\ncout\n}", "\nTdate::Tdate(int d)", "\n{ month=4;", "\n\u3000\u3000\u3000day=d;", "\n\u3000\u3000year=1996;", "\ncout\n}", "\nTdate::Tdate(int m, int d)", "\n{ month=m;", "\n\u3000\u3000\u3000day=d;", "\n\u3000\u3000\u3000year=1997;", "\ncout\n}", "\nTdate::Tdate(int m, int d, int y)", "\n{ month=m;", "\n\u3000\u3000\u3000day=d;", "\n\u3000\u3000\u3000year=y;", "\ncout\n}", "\nvoid main()", "\n{ Tdate aday;", "\nTdate bday(10);", "\nTdate cday(2,12);", "\nTdate dday(1,2,1998);", "\n}", "\n\u8fd0\u884c\u7ed3\u679c:", "\n4\uff0e\u9605\u8bfb\u7a0b\u5e8f\uff0c\u5199\u51fa\u7a0b\u5e8f\u8fd0\u884c\u65f6\u8f93\u51fa\u7ed3\u679c\u3002", "\n\uff03i nclude", "\n\uff03i nclude", "\nclass shape", "\n{ public:", "\nshape(double x, double y):xCoord(x), yCoord(y){}", "\nvirtual double Area()const {return 0.0; }", "\nprotected:", "\ndouble xCoord, yCoord;", "\n};", "\nclass AA :public shape", "\n{ public:", "\nAA(double x, double y, double r): shape(x,y), rad(r){}", "\nvirtual double Area()const { return 3.0 * rad * rad; }", "\nprotected:", "\ndouble rad;", "\n};", "\nclass BB :public shape", "\n{ public:", "\nBB(double x1, double y1, double x2, double y2)", "\n:shape(x1, y1), x2Coord(x2), y2Coord(y2){ }", "\nvirtual double Area()const;", "\nprotected:", "\ndouble x2Coord, y2Coord;", "\n};", "\ndouble BB:Area()const", "\n{ return fabs((xCoord-x2Coord)* (yCoord - y2Coord));", "\n//\u5e93\u51fd\u6570fabs(double t)\u6c42\u5f97t\u7684\u7edd\u5bf9\u503c", "\n}", "\nvoid fun(const shape& sp)", "\n{ cout\n}", "\nvoid main()", "\n{ AA aa(2.0, 5.0, 4.0);", "\nfun(aa);", "\nBB bb(2.0, 8.0, 12.0, 17.0);", "\nfun(bb);", "\n}", "\n\u8fd0\u884c\u7ed3\u679c:", "\n\u516d\u3001 \u7f16\u5199\u7a0b\u5e8f\u9898\uff08\u6bcf\u5c0f\u989810\u5206\uff0c\u517120\u5206\uff09", "\n1.\u7f16\u5199\u4e00\u4e2a\u51fd\u6570int Judge(int *pArray, int n)\uff0c\u5224\u65ad\u4e00\u4e2an\u00d7n\u4e8c\u7ef4\u6574\u6570\u6570\u7ec4pArray \u662f\u5426\u4e3a\u201c\u9b54\u65b9\u9635\u201d\uff0c\u82e5\u662f\u8fd4\u56de1\uff0c\u5426\u5219\u8fd4\u56de0\u3002\u6240\u8c13\u9b54\u65b9\u9635\u5c31\u662f\u5c061\u5230n2\u7684\u5404\u4e2a\u6570\u5b57\u7ec4\u6210\u7684\u65b9\u9635\uff0c\u5b83\u7684\u6bcf\u4e00\u884c\u3001\u6bcf\u4e00\u5217\u4ee5\u53ca\u4e24\u4e2a\u5bf9\u89d2\u7ebf\u4e0a\u6570\u5b57\u4e4b\u548c\u5747\u76f8\u7b49\u3002\u4f8b\u5982\uff0c3\u00d73\u7684\u4e2d\uff0cA\u662f\u9b54\u65b9\u9635\uff0c\u800cB\u4e0d\u662f\u9b54\u65b9\u9635\u3002\u7136\u540e\u5728\u4e3b\u7a0b\u5e8f\u4e2d\u8c03\u7528Judge\u51fd\u6570\u5224\u65ad\u6570\u7ec4A\u662f\u5426\u4e3a\u9b54\u65b9\u9635\u3002", "\n\u53c2\u8003\u7a0b\u5e8f", "\n\uff03i nclude", "\nint Judge(int *pArray, int n)", "\n{ int s1, s2, s3,s4,sum=0;", "\nint *p=pArray;", "\nfor(int i=1; i\n{ int Found=0; //\u4e3a0\uff0c\u4e0d\u5728\u65b9\u9635\u4e2d\uff1b", "\nfor(int j=0; j", "\nif(p[j]==i)", "\n{ Found=1; //\u4e3a1\uff0c\u5728\u65b9\u9635\u4e2d", "\nbreak;", "\n}", "\nif(Found==0) return 0; // \u503c\u4e3a i \u7684\u5143\u7d20\u4e0d\u5728\u6570\u7ec4\u4e2d\uff0c\u663e\u7136\u4e0d\u662f\u9b54\u65b9\u9635", "\n}", "\nfor( i=1; i\nsum=sum+i;", "\nsum=sum / n; // \u5404\u884c\u3001\u5404\u5217\u3001\u5bf9\u89d2\u7ebf\u5143\u7d20\u5e94\u5f53\u5f97\u5230\u7684\u548c", "\ns3=0;", "\ns4=0;", "\nfor( i=0; i", "\n{ s1=0, s2=0;", "\np=pArray;", "\nfor(int j=0; j", "\n{ s1=s1+p[i*n+j]; //\u7b2ci\u884c\u7684\u5143\u7d20\u548c", "\n\u3000s2=s2+p[j*n+i]; //\u7b2ci\u5217\u7684\u5143\u7d20\u548c", "\n}", "\nif ( s1!=sum)", "\nreturn 0;", "\nif ( s2!=sum)", "\nreturn 0;", "\ns3=s3+pArray[i*n+i]; \u3000\u3000\u3000\u3000// \u5bf9\u89d2\u7ebf\u4e00\u5143\u7d20\u548c", "\ns4=s4+pArray[i*n+(n-1-i)]; // \u5bf9\u89d2\u7ebf\u4e8c\u5143\u7d20\u548c", "\n}", "\nif(s3!=sum)", "\nreturn 0;", "\nif(s4 != sum)", "\nreturn 0;", "\nreturn 1;", "\n}", "\nvoid main()", "\n{ int Array[3][3]={{ 8, 1, 6},{ 3, 5, 7},{ 4, 9, 2}};", "\n\u5f53 x \u8f93\u5165\u503c\u4e3a9999\u65f6\uff0c\u51fd\u6570\u8fd4\u56de\u503c\u4e3a\u591a\u5c11\uff1f", "\nint fun ( unsigned int x )", "\n{ int count = 0;", "\nwhile(x)", "\n{", "\nx = x & (x-1);", "\ncount++;", "\n}", "\nreturn count;", "\n}", "\n\u7b54\u6848\uff1a\u6b64\u51fd\u6570\u662f\u5728\u8ba1\u7b97 x \u4e2d\u542b\u67091\u7684\u4e2a\u6570\uff0c\u6240\u4ee5\u8fd4\u56de\u503c\u4e3a8\u3002", "\nif(Judge((int*)Array, 3))", "\ncout\nelse", "\ncout\n}", "\n/*********************************", "\n* \u4e24\u4e2a\u8d85\u5927\u6570\u76f8\u4e58\u7b97\u6cd5", "\n*********************************/", "\n\uff03i nclude", "\nvoid main()", "\n{", "\nint a[30],b[30],c[60];", "\nint i,j;", "\n/* \u7ed9\u4e58\u6570\u548c\u88ab\u4e58\u6570\u8d4b\u503c\uff0c\u5e76\u628a\u7ed3\u679c\u8d4b\u96f6 */", "\nfor (i=0;i\n{", "\na[i]=i%10;", "\nb[i]=i%10;", "\nc[2*i]=0;", "\nc[2*i+1]=0;", "\n}", "\n/* \u7ed9\u6bcf\u4f4d\u7ed3\u679c\u8d4b\u503c\uff0c\u8fd9\u91cc\u5e94\u8be5\u8003\u8651\u6e05\u695a\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u5199", "\n\u8fd8\u6709\u8fd9\u91cc\u7684\u4f4d\u7684\u503c\u7684\u6700\u5927\u9650\u5ea6\u5e94\u8be5\u662f-128 -- +127", "\n\u6240\u4ee5\u5c31\u7b97\u662f10*10\u4e5f\u53ef\u4ee5\u6ee1\u8db3\u5b58\u8fdb\u53bb\u4e00\u4e2achar\u7c7b\u578b\u91cc */", "\nfor(i=0;i\nfor(j=0;j\nc[i+j]+=a[i]*b[j];", "\n/* \u8fd9\u91cc\u628a\u6bcf\u4e2a\u4f4d>10\u7684\u6570\u8fdb\u4f4d\u548c\u628a\u4f59\u6570\u91cd\u65b0\u8d4b\u503c\u7ed9\u8fd9\u4e00\u4f4d */", "\nfor(i=0;i\n{", "\nc[i+1]+=c[i]/10;", "\nc[i]=c[i]%10;", "\n}", "\n/* \u6253\u5370\u51fa\u6765 */", "\nfor(i=0;i\nprintf(\"%d\",a[30-i-1]);", "\nprintf(\"\\n\");", "\nfor(i=0;i\nprintf(\"%d\",b[30-i-1]);", "\nprintf(\"\\n\");", "\nfor(i=0;i\nprintf(\"%d\",c[60-i-1]);", "\nprintf(\"\\n\");", "\n} ", "\u534e\u4e3a2004\u5e74\u62db\u6536\u5e94\u5c4a\u5927\u5b66\u6bd5\u4e1a\u751f\u6280\u672f\u652f\u6301\u9762\u8bd5\u9898\u3002", "\n\u7b14\u8bd5\u5185\u5bb9\u5305\u62ec\uff1a", "\n1\u3002\u6280\u672f\u8bd5\u9898\uff1a\u7cfb\u7edfwindows/linux\uff0c\u7f51\u7edc\u57fa\u7840\uff0c\u901a\u4fe1\u57fa\u7840\uff0c\u6570\u636e\u5e93", "\n2\u3002\u80fd\u529b\u8bd5\u9898\uff1a\u6839\u636e\u4e24\u6545\u4e8b\u53d1\u8868\u770b\u6cd5", "\n3\u3002\u82f1\u8bed\u4f5c\u6587", "\n\u7b5b\u9009\u540e\u8fdb\u5165\u9762\u8bd5\u3002", "\n\u95ee\u9898\u4e00\uff1a\u4e24\u7b14\u8bb0\u672c\u7535\u8111\u8fde\u8d77\u6765\u540e\u62fc\u4e0d\u901a\uff0c\u4f60\u89c9\u5f97\u53ef\u80fd\u6709\u54ea\u4e9b\u95ee\u9898\uff1f", "\n\u95ee\u9898\u4e8c\uff1a\u6211\u4eec\u5728\u5357\u4eac\uff0c\u548c\u6df1\u5733\u7684\u7f51\u7edc\u662f\u901a\u7684\uff0c\u4f46\u548c\u5317\u4eac\u7684\u7f51\u7edc\u4e0d\u901a\uff0c\u4f60\u4ee5\u600e\u6837\u7684\u987a\u5e8f\u68c0\u67e5\u95ee\u9898\uff1f", "\n\u95ee\u9898\u4e09\uff1a\u89e3\u91ca\u4ec0\u4e48\u53eb\u201c\u900f\u660e\u201d\uff1f\u4ec0\u4e48\u53eb\u201c\u7f51\u683c\u201d\uff1f", "\n\u95ee\u9898\u56db\uff1a\u4ea4\u6362\u548c\u8def\u7531\u7684\u533a\u522b\uff1fVLAN\u7684\u7279\u70b9\uff1f", "\n\u95ee\u9898\u4e94\uff1a\u753b\u4e00\u4e2a\u79ef\u5206\u7535\u8def\u548c\u4e00\u4e2a\u5fae\u5206\u7535\u8def\u3002", "\n\u95ee\u9898\u516d\uff1a\u77e5\u9053\u73b0\u5728\u7684\u8def\u7531\u5668\u662f\u7b2c\u51e0\u4ee3\u4e86\u5417\uff1f", "C\u8bed\u8a00\u9762\u8bd5\u9898\u5927\u6c47\u603b\u4e4b\u534e\u4e3a\u9762\u8bd5\u9898", "\nsilver6 | 01 \u4e8c\u6708, 2007 15:57", "\n1\u3001\u5c40\u90e8\u53d8\u91cf\u80fd\u5426\u548c\u5168\u5c40\u53d8\u91cf\u91cd\u540d\uff1f \u3000\u3000\u7b54\uff1a\u80fd\uff0c\u5c40\u90e8\u4f1a\u5c4f\u853d\u5168\u5c40\u3002\u8981\u7528\u5168\u5c40\u53d8\u91cf\uff0c\u9700\u8981\u4f7f\u7528\"::\" \u3000\u3000\u5c40\u90e8\u53d8\u91cf\u53ef\u4ee5\u4e0e\u5168\u5c40\u53d8\u91cf\u540c\u540d\uff0c\u5728\u51fd\u6570\u5185\u5f15\u7528\u8fd9\u4e2a\u53d8\u91cf\u65f6\uff0c\u4f1a\u7528\u5230\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u800c\u4e0d\u4f1a\u7528\u5230\u5168\u5c40\u53d8\u91cf\u3002\u5bf9\u4e8e\u6709\u4e9b\u7f16\u8bd1\u5668\u800c\u8a00\uff0c\u5728\u540c\u4e00\u4e2a\u51fd\u6570\u5185\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u6bd4\u5982\u5728\u4e24\u4e2a\u5faa\u73af\u4f53\u5185\u90fd\u5b9a\u4e49\u4e00\u4e2a\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u800c\u90a3\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u5c31\u5728\u90a3\u4e2a\u5faa\u73af\u4f53\u5185\u3002 \u3000\u3000", "\n2\u3001\u5982\u4f55\u5f15\u7528\u4e00\u4e2a\u5df2\u7ecf\u5b9a\u4e49\u8fc7\u7684\u5168\u5c40\u53d8\u91cf\uff1f \u3000\u3000\u7b54\uff1aextern \u3000\u3000\u53ef\u4ee5\u7528\u5f15\u7528\u5934\u6587\u4ef6\u7684\u65b9\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u7528extern\u5173\u952e\u5b57\uff0c\u5982\u679c\u7528\u5f15\u7528\u5934\u6587\u4ef6\u65b9\u5f0f\u6765\u5f15\u7528\u67d0\u4e2a\u5728\u5934\u6587\u4ef6\u4e2d\u58f0\u660e\u7684\u5168\u5c40\u53d8\u7406\uff0c\u5047\u5b9a\u4f60\u5c06\u90a3\u4e2a\u53d8\u5199\u9519\u4e86\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4\u4f1a\u62a5\u9519\uff0c\u5982\u679c\u4f60\u7528extern\u65b9\u5f0f\u5f15\u7528\u65f6\uff0c\u5047\u5b9a\u4f60\u72af\u4e86\u540c\u6837\u7684\u9519\u8bef\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4\u4e0d\u4f1a\u62a5\u9519\uff0c\u800c\u5728\u8fde\u63a5\u671f\u95f4\u62a5\u9519\u3002 \u3000\u3000", "\n3\u3001\u5168\u5c40\u53d8\u91cf\u53ef\u4e0d\u53ef\u4ee5\u5b9a\u4e49\u5728\u53ef\u88ab\u591a\u4e2a.C\u6587\u4ef6\u5305\u542b\u7684\u5934\u6587\u4ef6\u4e2d\uff1f\u4e3a\u4ec0\u4e48\uff1f \u3000\u3000\u7b54\uff1a\u53ef\u4ee5\uff0c\u5728\u4e0d\u540c\u7684C\u6587\u4ef6\u4e2d\u4ee5static\u5f62\u5f0f\u6765\u58f0\u660e\u540c\u540d\u5168\u5c40\u53d8\u91cf\u3002 \u3000\u3000\u53ef\u4ee5\u5728\u4e0d\u540c\u7684C\u6587\u4ef6\u4e2d\u58f0\u660e\u540c\u540d\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u524d\u63d0\u662f\u5176\u4e2d\u53ea\u80fd\u6709\u4e00\u4e2aC\u6587\u4ef6\u4e2d\u5bf9\u6b64\u53d8\u91cf\u8d4b\u521d\u503c\uff0c\u6b64\u65f6\u8fde\u63a5\u4e0d\u4f1a\u51fa\u9519 \u3000\u3000", "\n4\u3001\u8bed\u53e5for( \uff1b1 \uff1b)\u6709\u4ec0\u4e48\u95ee\u9898\uff1f\u5b83\u662f\u4ec0\u4e48\u610f\u601d\uff1f \u3000\u3000\u7b54\uff1a\u548cwhile(1)\u76f8\u540c\u3002 \u3000\u3000", "\n5\u3001do\u2026\u2026while\u548cwhile\u2026\u2026do\u6709\u4ec0\u4e48\u533a\u522b\uff1f \u3000\u3000\u7b54\uff1a\u524d\u4e00\u4e2a\u5faa\u73af\u4e00\u904d\u518d\u5224\u65ad\uff0c\u540e\u4e00\u4e2a\u5224\u65ad\u4ee5\u540e\u518d\u5faa\u73af \u3000\u3000", "\n6\u3001\u8bf7\u5199\u51fa\u4e0b\u5217\u4ee3\u7801\u7684\u8f93\u51fa\u5185\u5bb9 \u3000\u3000", "\n#include \u3000\u3000", "\nmain() \u3000\u3000", "\n{ \u3000\u3000\u3000", "\nint a,b,c,d;", "\n\u3000\u3000\u3000a=10; \u3000", "\n\u3000\u3000b=a++; \u3000", "\n\u3000\u3000c=++a; \u3000\u3000", "\n\u3000d=10*a++; \u3000", "\n\u3000\u3000printf(\"b\uff0cc\uff0cd\uff1a%d\uff0c%d\uff0c%d\"\uff0cb\uff0cc\uff0cd\uff09; \u3000", "\n\u3000\u3000return 0; \u3000", "\n\u3000} \u3000\u3000", "\n\u7b54\uff1a10\uff0c12\uff0c120 \u3000\u3000", "\n7\u3001static\u5168\u5c40\u53d8\u91cf\u4e0e\u666e\u901a\u7684\u5168\u5c40\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1fstatic\u5c40\u90e8\u53d8\u91cf\u548c\u666e\u901a\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1fstatic\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u6709\u4ec0\u4e48\u533a\u522b\uff1f \u3000\u3000\u5168\u5c40\u53d8\u91cf(\u5916\u90e8\u53d8\u91cf)\u7684\u8bf4\u660e\u4e4b\u524d\u518d\u51a0\u4ee5static \u5c31\u6784\u6210\u4e86\u9759\u6001\u7684\u5168\u5c40\u53d8\u91cf\u3002\u5168\u5c40\u53d8\u91cf\u672c\u8eab\u5c31\u662f\u9759\u6001\u5b58\u50a8\u65b9\u5f0f\uff0c \u9759\u6001\u5168\u5c40\u53d8\u91cf\u5f53\u7136\u4e5f\u662f\u9759\u6001\u5b58\u50a8\u65b9\u5f0f\u3002 \u8fd9\u4e24\u8005\u5728\u5b58\u50a8\u65b9\u5f0f\u4e0a\u5e76\u65e0\u4e0d\u540c\u3002\u8fd9\u4e24\u8005\u7684\u533a\u522b\u867d\u5728\u4e8e\u975e\u9759\u6001\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u662f\u6574\u4e2a\u6e90\u7a0b\u5e8f\uff0c \u5f53\u4e00\u4e2a\u6e90\u7a0b\u5e8f\u7531\u591a\u4e2a\u6e90\u6587\u4ef6\u7ec4\u6210\u65f6\uff0c\u975e\u9759\u6001\u7684\u5168\u5c40\u53d8\u91cf\u5728\u5404\u4e2a\u6e90\u6587\u4ef6\u4e2d\u90fd\u662f\u6709\u6548\u7684\u3002 \u800c\u9759\u6001\u5168\u5c40\u53d8\u91cf\u5219\u9650\u5236\u4e86\u5176\u4f5c\u7528\u57df\uff0c \u5373\u53ea\u5728\u5b9a\u4e49\u8be5\u53d8\u91cf\u7684\u6e90\u6587\u4ef6\u5185\u6709\u6548\uff0c \u5728\u540c\u4e00\u6e90\u7a0b\u5e8f\u7684\u5176\u5b83\u6e90\u6587\u4ef6\u4e2d\u4e0d\u80fd\u4f7f\u7528\u5b83\u3002\u7531\u4e8e\u9759\u6001\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u5c40\u9650\u4e8e\u4e00\u4e2a\u6e90\u6587\u4ef6\u5185\uff0c\u53ea\u80fd\u4e3a\u8be5\u6e90\u6587\u4ef6\u5185\u7684\u51fd\u6570\u516c\u7528\uff0c \u56e0\u6b64\u53ef\u4ee5\u907f\u514d\u5728\u5176\u5b83\u6e90\u6587\u4ef6\u4e2d\u5f15\u8d77\u9519\u8bef\u3002 \u3000\u3000\u4ece\u4ee5\u4e0a\u5206\u6790\u53ef\u4ee5\u770b\u51fa\uff0c \u628a\u5c40\u90e8\u53d8\u91cf\u6539\u53d8\u4e3a\u9759\u6001\u53d8\u91cf\u540e\u662f\u6539\u53d8\u4e86\u5b83\u7684\u5b58\u50a8\u65b9\u5f0f\u5373\u6539\u53d8\u4e86\u5b83\u7684\u751f\u5b58\u671f\u3002\u628a\u5168\u5c40\u53d8\u91cf\u6539\u53d8\u4e3a\u9759\u6001\u53d8\u91cf\u540e\u662f\u6539\u53d8\u4e86\u5b83\u7684\u4f5c\u7528\u57df\uff0c \u9650\u5236\u4e86\u5b83\u7684\u4f7f\u7528\u8303\u56f4\u3002 \u3000\u3000static\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u4f5c\u7528\u57df\u4e0d\u540c\u3002\u4ec5\u5728\u672c\u6587\u4ef6\u3002\u53ea\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4e2d\u4f7f\u7528\u7684\u51fd\u6570\u5e94\u8be5\u8bf4\u660e\u4e3a\u5185\u90e8\u51fd\u6570(static)\uff0c\u5185\u90e8\u51fd\u6570\u5e94\u8be5\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4e2d\u8bf4\u660e\u548c\u5b9a\u4e49\u3002\u5bf9\u4e8e\u53ef\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4ee5\u5916\u4f7f\u7528\u7684\u51fd\u6570\uff0c\u5e94\u8be5\u5728\u4e00\u4e2a\u5934\u6587\u4ef6\u4e2d\u8bf4\u660e\uff0c\u8981\u4f7f\u7528\u8fd9\u4e9b\u51fd\u6570\u7684\u6e90\u6587\u4ef6\u8981\u5305\u542b\u8fd9\u4e2a\u5934\u6587\u4ef6 \u3000\u3000static\u5168\u5c40\u53d8\u91cf\u4e0e\u666e\u901a\u7684\u5168\u5c40\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u5168\u5c40\u53d8\u91cf\u53ea\u521d\u4f7f\u5316\u4e00\u6b21\uff0c\u9632\u6b62\u5728\u5176\u4ed6\u6587\u4ef6\u5355\u5143\u4e2d\u88ab\u5f15\u7528; \u3000\u3000static\u5c40\u90e8\u53d8\u91cf\u548c\u666e\u901a\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u5c40\u90e8\u53d8\u91cf\u53ea\u88ab\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u4e0b\u4e00\u6b21\u4f9d\u636e\u4e0a\u4e00\u6b21\u7ed3\u679c\u503c\uff1b \u3000\u3000static\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u51fd\u6570\u5728\u5185\u5b58\u4e2d\u53ea\u6709\u4e00\u4efd\uff0c\u666e\u901a\u51fd\u6570\u5728\u6bcf\u4e2a\u88ab\u8c03\u7528\u4e2d\u7ef4\u6301\u4e00\u4efd\u62f7\u8d1d \u3000\u3000", "\n8\u3001\u7a0b\u5e8f\u7684\u5c40\u90e8\u53d8\u91cf\u5b58\u5728\u4e8e\uff08\u5806\u6808\uff09\u4e2d\uff0c\u5168\u5c40\u53d8\u91cf\u5b58\u5728\u4e8e\uff08\u9759\u6001\u533a \uff09\u4e2d\uff0c\u52a8\u6001\u7533\u8bf7\u6570\u636e\u5b58\u5728\u4e8e\uff08 \u5806\uff09\u4e2d\u3002 \u3000\u3000", "\n9\u3001\u8bbe\u6709\u4ee5\u4e0b\u8bf4\u660e\u548c\u5b9a\u4e49\uff1a \u3000", "\n\u3000typedef union", "\n{", "\nlong i; int k[5]; char c;} DATE; \u3000", "\n\u3000struct data { int cat; DATE cow; double dog;} too; \u3000", "\n\u3000DATE max; \u3000\u3000", "\n\u5219\u8bed\u53e5 printf(\"%d\",sizeof(struct date)+sizeof(max));\u7684\u6267\u884c\u7ed3\u679c\u662f\uff1a___52____ \u3000\u3000", "\n\u7b54\uff1aDATE\u662f\u4e00\u4e2aunion, \u53d8\u91cf\u516c\u7528\u7a7a\u95f4. \u91cc\u9762\u6700\u5927\u7684\u53d8\u91cf\u7c7b\u578b\u662fint[5], \u5360\u752820\u4e2a\u5b57\u8282. \u6240\u4ee5\u5b83\u7684\u5927\u5c0f\u662f20 data\u662f\u4e00\u4e2astruct, \u6bcf\u4e2a\u53d8\u91cf\u5206\u5f00\u5360\u7528\u7a7a\u95f4. \u4f9d\u6b21\u4e3aint4 + DATE20 + double8 = 32. \u6240\u4ee5\u7ed3\u679c\u662f 20 + 32 = 52. \u3000\u3000\u5f53\u7136...\u5728\u67d0\u4e9b16\u4f4d\u7f16\u8f91\u5668\u4e0b, int\u53ef\u80fd\u662f2\u5b57\u8282,\u90a3\u4e48\u7ed3\u679c\u662f int2 + DATE10 + double8 = 20 \u3000\u3000", "\n10\u3001\u961f\u5217\u548c\u6808\u6709\u4ec0\u4e48\u533a\u522b\uff1f \u3000\u3000 \u3000\u3000\u961f\u5217\u5148\u8fdb\u5148\u51fa\uff0c\u6808\u540e\u8fdb\u5148\u51fa \u3000\u3000", "\n11\u3001\u5199\u51fa\u4e0b\u5217\u4ee3\u7801\u7684\u8f93\u51fa\u5185\u5bb9 \u3000\u3000", "\n#include \u3000\u3000", "\nint inc(int a) \u3000\u3000 { \u3000\u3000\u3000 return(++a); \u3000\u3000 } \u3000\u3000 int multi(int*a,int*b,int*c) \u3000\u3000 { \u3000\u3000\u3000 return(*c=*a**b); \u3000\u3000 } \u3000\u3000 typedef int(FUNC1)(int in); \u3000\u3000 typedef int(FUNC2) (int*,int*,int*); \u3000\u3000 void show(FUNC2 fun,int arg1, int*arg2) \u3000\u3000 { \u3000\u3000\u3000 INCp=&inc; \u3000\u3000\u3000 int temp =p(arg1); \u3000\u3000\u3000 fun(&temp,&arg1, arg2); \u3000\u3000\u3000 printf(\"%dn\",*arg2); \u3000\u3000 } \u3000\u3000 main() \u3000\u3000 { \u3000\u3000\u3000 int a; \u3000\u3000\u3000 show(multi,10,&a); \u3000\u3000\u3000 return 0; \u3000\u3000 } \u3000\u3000\u7b54\uff1a110 \u3000\u3000", "\n12\u3001\u8bf7\u627e\u51fa\u4e0b\u9762\u4ee3\u7801\u4e2d\u7684\u6240\u4ee5\u9519\u8bef \u3000\u3000", "\n\u8bf4\u660e\uff1a\u4ee5\u4e0b\u4ee3\u7801\u662f\u628a\u4e00\u4e2a\u5b57\u7b26\u4e32\u5012\u5e8f\uff0c\u5982\u201cabcd\u201d\u5012\u5e8f\u540e\u53d8\u4e3a\u201cdcba\u201d \u3000\u3000", "\n#include\"string.h\" \u3000\u3000", "\nmain() \u3000\u3000", "\n{ \u3000\u3000", "\nchar*src=\"hello,world\"; \u3000\u3000", "\nchar* dest=NULL; \u3000\u3000", "\nint len=strlen(src); \u3000\u3000", "\ndest=(char*)malloc(len); \u3000\u3000", "\nchar* d=dest; \u3000\u3000", "\nchar* s=src[len]; \u3000\u3000", "\nwhile(len--!=0) \u3000\u3000", "\nd++=s--; \u3000\u3000", "\nprintf(\"%s\",dest); \u3000\u3000", "\nreturn 0; \u3000\u3000", "\n} \u3000\u3000", "\n\u7b54\uff1a \u3000\u3000", "\n\u65b9\u6cd51\uff1a \u3000\u3000", "\nint main() \u3000\u3000", "\n{ \u3000\u3000", "\n\u3000char* src = \"hello,world\"; \u3000\u3000", "\n\u3000int len = strlen(src); \u3000\u3000", "\n\u3000char* dest = (char*)malloc(len+1);//\u8981\u4e3a\u5206\u914d\u4e00\u4e2a\u7a7a\u95f4 \u3000\u3000\u3000char* d = dest; \u3000\u3000", "\n\u3000char* s = &src[len-1];//\u6307\u5411\u6700\u540e\u4e00\u4e2a\u5b57\u7b26 \u3000\u3000", "\n\u3000while( len-- != 0 ) \u3000\u3000", "\n\u3000*d++=*s--; \u3000\u3000", "\n\u3000*d = 0;//\u5c3e\u90e8\u8981\u52a0 \u3000\u3000", "\n\u3000printf(\"%sn\",dest); \u3000\u3000\u3000", "\nfree(dest);// \u4f7f\u7528\u5b8c\uff0c\u5e94\u5f53\u91ca\u653e\u7a7a\u95f4\uff0c\u4ee5\u514d\u9020\u6210\u5185\u5b58\u6c47\u6cc4\u9732 \u3000\u3000\u3000return 0; \u3000", "\n\u3000}", "\n\u65b9\u6cd52\uff1a \u3000\u3000", "\n#include ", "\u3000\u3000\u8bb8\u591a\u9762\u8bd5\u9898\u770b\u4f3c\u7b80\u5355\uff0c\u5374\u9700\u8981\u6df1\u539a\u7684\u57fa\u672c\u529f\u624d\u80fd\u7ed9\u51fa\u5b8c\u7f8e\u7684\u89e3\u7b54\u3002\u4f01\u4e1a\u8981\u6c42\u9762\u8bd5\u8005\u5199\u4e00\u4e2a\u6700\u7b80\u5355\u7684strcpy\u51fd\u6570\u90fd\u53ef\u770b\u51fa\u9762\u8bd5\u8005\u5728\u6280\u672f\u4e0a\u7a76\u7adf\u8fbe\u5230\u4e86\u600e\u6837\u7684\u7a0b\u5ea6\uff0c\u6211\u4eec\u80fd\u771f\u6b63\u5199\u597d\u4e00\u4e2astrcpy\u51fd\u6570\u5417\uff1f\u6211\u4eec\u90fd\u89c9\u5f97\u81ea\u5df1\u80fd\uff0c\u53ef\u662f\u6211\u4eec\u5199\u51fa\u7684strcpy\u5f88\u53ef\u80fd\u53ea\u80fd\u62ff\u523010\u5206\u4e2d\u76842\u5206\u3002\u8bfb\u8005\u53ef\u4ece\u672c\u6587\u770b\u5230strcpy \u51fd\u6570\u4ece2\u5206\u523010\u5206\u89e3\u7b54\u7684\u4f8b\u5b50\uff0c\u770b\u770b\u81ea\u5df1\u5c5e\u4e8e\u4ec0\u4e48\u6837\u7684\u5c42\u6b21\u3002\u6b64\u5916\uff0c\u8fd8\u6709\u4e00\u4e9b\u9762\u8bd5\u9898\u8003\u67e5\u9762\u8bd5\u8005\u654f\u6377\u7684\u601d\u7ef4\u80fd\u529b\u3002 ", "\u3000\u3000\u5206\u6790\u8fd9\u4e9b\u9762\u8bd5\u9898\uff0c\u672c\u8eab\u5305\u542b\u5f88\u5f3a\u7684\u8da3\u5473\u6027\uff1b\u800c\u4f5c\u4e3a\u4e00\u540d\u7814\u53d1\u4eba\u5458\uff0c\u901a\u8fc7\u5bf9\u8fd9\u4e9b\u9762\u8bd5\u9898\u7684\u6df1\u5165\u5256\u6790\u5219\u53ef\u8fdb\u4e00\u6b65\u589e\u5f3a\u81ea\u8eab\u7684\u5185\u529f\u3002", "\u3000\u30002.\u627e\u9519\u9898", "\u3000\u3000\u8bd5\u98981\uff1a", "\nvoid test1()", "\n{", "\n\u3000char string[10];", "\n\u3000char* str1 = \"0123456789\";", "\n\u3000strcpy( string, str1 );", "\n}", "\u3000\u3000\u8bd5\u98982\uff1a", "\nvoid test2()", "\n{", "\n\u3000char string[10], str1[10];", "\n\u3000int i;", "\n\u3000for(i=0; i\n\u3000{", "\n\u3000\u3000str1[i] = 'a';", "\n\u3000}", "\n\u3000strcpy( string, str1 );", "\n}", "\u3000\u3000\u8bd5\u98983\uff1a", "\nvoid test3(char* str1)", "\n{", "\n\u3000char string[10];", "\n\u3000if( strlen( str1 ) \n\u3000{", "\n\u3000\u3000strcpy( string, str1 );", "\n\u3000}", "\n}", "\u3000\u3000\u89e3\u7b54\uff1a", "\u3000\u3000\u8bd5\u98981\u5b57\u7b26\u4e32str1\u9700\u898111\u4e2a\u5b57\u8282\u624d\u80fd\u5b58\u653e\u4e0b\uff08\u5305\u62ec\u672b\u5c3e\u7684\u2019\u2019\uff09\uff0c\u800cstring\u53ea\u670910\u4e2a\u5b57\u8282\u7684\u7a7a\u95f4\uff0cstrcpy\u4f1a\u5bfc\u81f4\u6570\u7ec4\u8d8a\u754c\uff1b", "\u3000\u3000\u5bf9\u8bd5\u98982\uff0c\u5982\u679c\u9762\u8bd5\u8005\u6307\u51fa\u5b57\u7b26\u6570\u7ec4str1\u4e0d\u80fd\u5728\u6570\u7ec4\u5185\u7ed3\u675f\u53ef\u4ee5\u7ed93\u5206\uff1b\u5982\u679c\u9762\u8bd5\u8005\u6307\u51fastrcpy(string, str1)\u8c03\u7528\u4f7f\u5f97\u4ecestr1\u5185\u5b58\u8d77\u590d\u5236\u5230string\u5185\u5b58\u8d77\u6240\u590d\u5236\u7684\u5b57\u8282\u6570\u5177\u6709\u4e0d\u786e\u5b9a\u6027\u53ef\u4ee5\u7ed97\u5206\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u6307\u51fa\u5e93\u51fd\u6570strcpy\u5de5\u4f5c\u65b9\u5f0f\u7684\u7ed910 \u5206\uff1b", "\u3000\u3000\u5bf9\u8bd5\u98983\uff0cif(strlen(str1) \n", "\u3000\u3000\u5256\u6790\uff1a", "\u3000\u3000\u8003\u67e5\u5bf9\u57fa\u672c\u529f\u7684\u638c\u63e1\uff1a", "\u3000\u3000(1)\u5b57\u7b26\u4e32\u4ee5\u2019\u2019\u7ed3\u5c3e\uff1b", "\u3000\u3000(2)\u5bf9\u6570\u7ec4\u8d8a\u754c\u628a\u63e1\u7684\u654f\u611f\u5ea6\uff1b", "\u3000\u3000(3)\u5e93\u51fd\u6570strcpy\u7684\u5de5\u4f5c\u65b9\u5f0f\uff0c\u5982\u679c\u7f16\u5199\u4e00\u4e2a\u6807\u51c6strcpy\u51fd\u6570\u7684\u603b\u5206\u503c\u4e3a10\uff0c\u4e0b\u9762\u7ed9\u51fa\u51e0\u4e2a\u4e0d\u540c\u5f97\u5206\u7684\u7b54\u6848\uff1a", "\u3000\u30002\u5206", "\nvoid strcpy( char *strDest, char *strSrc )", "\n{", "\n\u3000 while( (*strDest++ = * strSrc++) != '\u2019 );", "\n}", "\u3000\u30004\u5206", "\nvoid strcpy( char *strDest, const char *strSrc )", "\n//\u5c06\u6e90\u5b57\u7b26\u4e32\u52a0const\uff0c\u8868\u660e\u5176\u4e3a\u8f93\u5165\u53c2\u6570\uff0c\u52a02\u5206", "\n{", "\n\u3000 while( (*strDest++ = * strSrc++) != '\u2019 );", "\n}", "\u3000\u30007\u5206", "\nvoid strcpy(char *strDest, const char *strSrc)", "\n{", "\n\u3000//\u5bf9\u6e90\u5730\u5740\u548c\u76ee\u7684\u5730\u5740\u52a0\u975e0\u65ad\u8a00\uff0c\u52a03\u5206", "\n\u3000assert( (strDest != NULL) && (strSrc != NULL) );", "\n\u3000while( (*strDest++ = * strSrc++) != '\u2019 );", "\n}", "\u3000\u300010\u5206", "\n//\u4e3a\u4e86\u5b9e\u73b0\u94fe\u5f0f\u64cd\u4f5c\uff0c\u5c06\u76ee\u7684\u5730\u5740\u8fd4\u56de\uff0c\u52a03\u5206\uff01", "char * strcpy( char *strDest, const char *strSrc )", "\n{", "\n\u3000assert( (strDest != NULL) && (strSrc != NULL) );", "\n\u3000char *address = strDest;", "\n\u3000while( (*strDest++ = * strSrc++) != '\u2019 );", "\n\u3000\u3000return address;", "\n}", "\u3000\u3000\u4ece2\u5206\u523010\u5206\u7684\u51e0\u4e2a\u7b54\u6848\u6211\u4eec\u53ef\u4ee5\u6e05\u695a\u7684\u770b\u5230\uff0c\u5c0f\u5c0f\u7684strcpy\u7adf\u7136\u6697\u85cf\u7740\u8fd9\u4e48\u591a\u7384\u673a\uff0c\u771f\u4e0d\u662f\u76d6\u7684\uff01\u9700\u8981\u591a\u4e48\u624e\u5b9e\u7684\u57fa\u672c\u529f\u624d\u80fd\u5199\u4e00\u4e2a\u5b8c\u7f8e\u7684strcpy\u554a\uff01", "\u3000\u3000(4)\u5bf9strlen\u7684\u638c\u63e1\uff0c\u5b83\u6ca1\u6709\u5305\u62ec\u5b57\u7b26\u4e32\u672b\u5c3e\u7684''\u3002", "\u3000\u3000\u8bfb\u8005\u770b\u4e86\u4e0d\u540c\u5206\u503c\u7684strcpy\u7248\u672c\uff0c\u5e94\u8be5\u4e5f\u53ef\u4ee5\u5199\u51fa\u4e00\u4e2a10\u5206\u7684strlen\u51fd\u6570\u4e86\uff0c\u5b8c\u7f8e\u7684\u7248\u672c\u4e3a\uff1a int strlen( const char *str ) //\u8f93\u5165\u53c2\u6570const", "\n{", "\n\u3000assert( strt != NULL ); //\u65ad\u8a00\u5b57\u7b26\u4e32\u5730\u5740\u975e0", "\n\u3000int len;", "\n\u3000while( (*str++) != '' )", "\n\u3000{", "\n\u3000\u3000len++;", "\n\u3000}", "\n\u3000return len;", "\n}", "\u3000\u3000\u8bd5\u98984\uff1a", "\nvoid GetMemory( char *p )", "\n{", "\n\u3000p = (char *) malloc( 100 );", "\n}", "void Test( void )", "\n{", "\n\u3000char *str = NULL;", "\n\u3000GetMemory( str );", "\n\u3000strcpy( str, \"hello world\" );", "\n\u3000printf( str );", "\n}", "\u3000\u3000\u8bd5\u98985\uff1a", "\nchar *GetMemory( void )", "\n{", "\n\u3000char p[] = \"hello world\";", "\n\u3000return p;", "\n}", "void Test( void )", "\n{", "\n\u3000char *str = NULL;", "\n\u3000str = GetMemory();", "\n\u3000printf( str );", "\n}", "\u3000\u3000\u8bd5\u98986\uff1a", "\nvoid GetMemory( char **p, int num )", "\n{", "\n\u3000*p = (char *) malloc( num );", "\n}", "void Test( void )", "\n{", "\n\u3000char *str = NULL;", "\n\u3000GetMemory( &str, 100 );", "\n\u3000strcpy( str, \"hello\" );", "\n\u3000printf( str );", "\n}", "\u3000\u3000\u8bd5\u98987\uff1a", "\nvoid Test( void )", "\n{", "\n\u3000char *str = (char *) malloc( 100 );", "\n\u3000strcpy( str, \"hello\" );", "\n\u3000free( str );", "\n\u3000... //\u7701\u7565\u7684\u5176\u5b83\u8bed\u53e5", "\n}", "\u3000\u3000\u89e3\u7b54\uff1a", "\u3000\u3000\u8bd5\u98984\u4f20\u5165\u4e2dGetMemory( char *p )\u51fd\u6570\u7684\u5f62\u53c2\u4e3a\u5b57\u7b26\u4e32\u6307\u9488\uff0c\u5728\u51fd\u6570\u5185\u90e8\u4fee\u6539\u5f62\u53c2\u5e76\u4e0d\u80fd\u771f\u6b63\u7684\u6539\u53d8\u4f20\u5165\u5f62\u53c2\u7684\u503c\uff0c\u6267\u884c\u5b8c", "\nchar *str = NULL;", "\nGetMemory( str ); ", "\u3000\u3000\u540e\u7684str\u4ecd\u7136\u4e3aNULL\uff1b", "\u3000\u3000\u8bd5\u98985\u4e2d", "\nchar p[] = \"hello world\";", "\nreturn p; ", "\u3000\u3000\u7684p[]\u6570\u7ec4\u4e3a\u51fd\u6570\u5185\u7684\u5c40\u90e8\u81ea\u52a8\u53d8\u91cf\uff0c\u5728\u51fd\u6570\u8fd4\u56de\u540e\uff0c\u5185\u5b58\u5df2\u7ecf\u88ab\u91ca\u653e\u3002\u8fd9\u662f\u8bb8\u591a\u7a0b\u5e8f\u5458\u5e38\u72af\u7684\u9519\u8bef\uff0c\u5176\u6839\u6e90\u5728\u4e8e\u4e0d\u7406\u89e3\u53d8\u91cf\u7684\u751f\u5b58\u671f\u3002", "\u3000\u3000\u8bd5\u98986\u7684GetMemory\u907f\u514d\u4e86\u8bd5\u98984\u7684\u95ee\u9898\uff0c\u4f20\u5165GetMemory\u7684\u53c2\u6570\u4e3a\u5b57\u7b26\u4e32\u6307\u9488\u7684\u6307\u9488\uff0c\u4f46\u662f\u5728GetMemory\u4e2d\u6267\u884c\u7533\u8bf7\u5185\u5b58\u53ca\u8d4b\u503c\u8bed\u53e5", "\n*p = (char *) malloc( num );", "\u3000\u3000\u540e\u672a\u5224\u65ad\u5185\u5b58\u662f\u5426\u7533\u8bf7\u6210\u529f\uff0c\u5e94\u52a0\u4e0a\uff1a", "\nif ( *p == NULL )", "\n{", "\n\u3000...//\u8fdb\u884c\u7533\u8bf7\u5185\u5b58\u5931\u8d25\u5904\u7406", "\n}", "\u3000\u3000\u8bd5\u98987\u5b58\u5728\u4e0e\u8bd5\u98986\u540c\u6837\u7684\u95ee\u9898\uff0c\u5728\u6267\u884c", "\nchar *str = (char *) malloc(100);", "\u3000\u3000\u540e\u672a\u8fdb\u884c\u5185\u5b58\u662f\u5426\u7533\u8bf7\u6210\u529f\u7684\u5224\u65ad\uff1b\u53e6\u5916\uff0c\u5728free(str)\u540e\u672a\u7f6estr\u4e3a\u7a7a\uff0c\u5bfc\u81f4\u53ef\u80fd\u53d8\u6210\u4e00\u4e2a\u201c\u91ce\u201d\u6307\u9488\uff0c\u5e94\u52a0\u4e0a\uff1a", "\nstr = NULL;", "\u3000\u3000\u8bd5\u98986\u7684Test\u51fd\u6570\u4e2d\u4e5f\u672a\u5bf9malloc\u7684\u5185\u5b58\u8fdb\u884c\u91ca\u653e\u3002", "\u3000\u3000\u5256\u6790\uff1a", "\u3000\u3000\u8bd5\u98984\uff5e7\u8003\u67e5\u9762\u8bd5\u8005\u5bf9\u5185\u5b58\u64cd\u4f5c\u7684\u7406\u89e3\u7a0b\u5ea6\uff0c\u57fa\u672c\u529f\u624e\u5b9e\u7684\u9762\u8bd5\u8005\u4e00\u822c\u90fd\u80fd\u6b63\u786e\u7684\u56de\u7b54\u5176\u4e2d50~60\u7684\u9519\u8bef\u3002\u4f46\u662f\u8981\u5b8c\u5168\u89e3\u7b54\u6b63\u786e\uff0c\u5374\u4e5f\u7edd\u975e\u6613\u4e8b\u3002", "\u3000\u3000\u5bf9\u5185\u5b58\u64cd\u4f5c\u7684\u8003\u67e5\u4e3b\u8981\u96c6\u4e2d\u5728\uff1a", "\u3000\u3000\uff081\uff09\u6307\u9488\u7684\u7406\u89e3\uff1b", "\u3000\u3000\uff082\uff09\u53d8\u91cf\u7684\u751f\u5b58\u671f\u53ca\u4f5c\u7528\u8303\u56f4\uff1b", "\u3000\u3000\uff083\uff09\u826f\u597d\u7684\u52a8\u6001\u5185\u5b58\u7533\u8bf7\u548c\u91ca\u653e\u4e60\u60ef\u3002", "\u3000\u3000\u518d\u770b\u770b\u4e0b\u9762\u7684\u4e00\u6bb5\u7a0b\u5e8f\u6709\u4ec0\u4e48\u9519\u8bef\uff1a", "\nswap( int* p1,int* p2 )", "\n{", "\n\u3000int *p;", "\n\u3000*p = *p1;", "\n\u3000*p1 = *p2;", "\n\u3000*p2 = *p;", "\n}", "\u3000\u3000\u5728swap\u51fd\u6570\u4e2d\uff0cp\u662f\u4e00\u4e2a\u201c\u91ce\u201d\u6307\u9488\uff0c\u6709\u53ef\u80fd\u6307\u5411\u7cfb\u7edf\u533a\uff0c\u5bfc\u81f4\u7a0b\u5e8f\u8fd0\u884c\u7684\u5d29\u6e83\u3002\u5728VC++\u4e2dDEBUG\u8fd0\u884c\u65f6\u63d0\u793a\u9519\u8bef\u201cAccess Violation\u201d\u3002\u8be5\u7a0b\u5e8f\u5e94\u8be5\u6539\u4e3a\uff1a", "\nswap( int* p1,int* p2 )", "\n{", "\n\u3000int p;", "\n\u3000p = *p1;", "\n\u3000*p1 = *p2;", "\n\u3000*p2 = p;", "\n}", "\u3000\u30003.\u5185\u529f\u9898", "\u3000\u3000\u8bd5\u98981\uff1a\u5206\u522b\u7ed9\u51faBOOL\uff0cint\uff0cfloat\uff0c\u6307\u9488\u53d8\u91cf \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\uff08\u5047\u8bbe\u53d8\u91cf\u540d\u4e3avar\uff09", "\u3000\u3000\u89e3\u7b54\uff1a", "\u3000\u3000\u3000BOOL\u578b\u53d8\u91cf\uff1aif(!var)", "\u3000\u3000\u3000int\u578b\u53d8\u91cf\uff1a if(var==0)", "\u3000\u3000\u3000float\u578b\u53d8\u91cf\uff1a", "\u3000\u3000\u3000const float EPSINON = 0.00001;", "\u3000\u3000\u3000if ((x >= \u2013 EPSINON) && (x \n", "\u3000\u3000\u3000\u6307\u9488\u53d8\u91cf\uff1a\u3000\u3000if(var==NULL)", "\u3000\u3000\u5256\u6790\uff1a", "\u3000\u3000\u8003\u67e5\u5bf90\u503c\u5224\u65ad\u7684\u201c\u5185\u529f\u201d\uff0cBOOL\u578b\u53d8\u91cf\u76840\u5224\u65ad\u5b8c\u5168\u53ef\u4ee5\u5199\u6210if(var==0)\uff0c\u800cint\u578b\u53d8\u91cf\u4e5f\u53ef\u4ee5\u5199\u6210if(!var)\uff0c\u6307\u9488\u53d8\u91cf\u7684\u5224\u65ad\u4e5f\u53ef\u4ee5\u5199\u6210if(!var)\uff0c\u4e0a\u8ff0\u5199\u6cd5\u867d\u7136\u7a0b\u5e8f\u90fd\u80fd\u6b63\u786e\u8fd0\u884c\uff0c\u4f46\u662f\u672a\u80fd\u6e05\u6670\u5730\u8868\u8fbe\u7a0b\u5e8f\u7684\u610f\u601d\u3002 ", "\u3000\u3000\u4e00\u822c\u7684\uff0c\u5982\u679c\u60f3\u8ba9if\u5224\u65ad\u4e00\u4e2a\u53d8\u91cf\u7684\u201c\u771f\u201d\u3001\u201c\u5047\u201d\uff0c\u5e94\u76f4\u63a5\u4f7f\u7528if(var)\u3001if(!var)\uff0c\u8868\u660e\u5176\u4e3a\u201c\u903b\u8f91\u201d\u5224\u65ad\uff1b\u5982\u679c\u7528if\u5224\u65ad\u4e00\u4e2a\u6570\u503c\u578b\u53d8\u91cf(short\u3001int\u3001long\u7b49)\uff0c\u5e94\u8be5\u7528if(var==0)\uff0c\u8868\u660e\u662f\u4e0e0\u8fdb\u884c\u201c\u6570\u503c\u201d\u4e0a\u7684\u6bd4\u8f83\uff1b\u800c\u5224\u65ad\u6307\u9488\u5219\u9002\u5b9c\u7528if(var==NULL)\uff0c\u8fd9\u662f\u4e00\u79cd\u5f88\u597d\u7684\u7f16\u7a0b\u4e60\u60ef\u3002", "\u3000\u3000\u6d6e\u70b9\u578b\u53d8\u91cf\u5e76\u4e0d\u7cbe\u786e\uff0c\u6240\u4ee5\u4e0d\u53ef\u5c06float\u53d8\u91cf\u7528\u201c==\u201d\u6216\u201c\uff01=\u201d\u4e0e\u6570\u5b57\u6bd4\u8f83\uff0c\u5e94\u8be5\u8bbe\u6cd5\u8f6c\u5316\u6210\u201c>=\u201d\u6216\u201c\n", "\u3000\u3000\u8bd5\u98982\uff1a\u4ee5\u4e0b\u4e3aWindows NT\u4e0b\u768432\u4f4dC++\u7a0b\u5e8f\uff0c\u8bf7\u8ba1\u7b97sizeof\u7684\u503c", "\nvoid Func ( char str[100] )", "\n{", "\n\u3000sizeof( str ) = ?", "\n}", "void *p = malloc( 100 );", "\nsizeof ( p ) = ?", "\u3000\u3000\u89e3\u7b54\uff1a", "\nsizeof( str ) = 4", "\nsizeof ( p ) = 4", "\u3000\u3000\u5256\u6790\uff1a", "\u3000\u3000Func ( char str[100] )\u51fd\u6570\u4e2d\u6570\u7ec4\u540d\u4f5c\u4e3a\u51fd\u6570\u5f62\u53c2\u65f6\uff0c\u5728\u51fd\u6570\u4f53\u5185\uff0c\u6570\u7ec4\u540d\u5931\u53bb\u4e86\u672c\u8eab\u7684\u5185\u6db5\uff0c\u4ec5\u4ec5\u53ea\u662f\u4e00\u4e2a\u6307\u9488\uff1b\u5728\u5931\u53bb\u5176\u5185\u6db5\u7684\u540c\u65f6\uff0c\u5b83\u8fd8\u5931\u53bb\u4e86\u5176\u5e38\u91cf\u7279\u6027\uff0c\u53ef\u4ee5\u4f5c\u81ea\u589e\u3001\u81ea\u51cf\u7b49\u64cd\u4f5c\uff0c\u53ef\u4ee5\u88ab\u4fee\u6539\u3002", "\u3000\u3000\u6570\u7ec4\u540d\u7684\u672c\u8d28\u5982\u4e0b\uff1a", "\u3000\u3000\uff081\uff09\u6570\u7ec4\u540d\u6307\u4ee3\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\u5c31\u662f\u6570\u7ec4\uff1b", "\u3000\u3000\u4f8b\u5982\uff1a", "\nchar str[10];", "\ncout \n", "\u3000\u3000\u8f93\u51fa\u7ed3\u679c\u4e3a10\uff0cstr\u6307\u4ee3\u6570\u636e\u7ed3\u6784char[10]\u3002", "\u3000\u3000\uff082\uff09\u6570\u7ec4\u540d\u53ef\u4ee5\u8f6c\u6362\u4e3a\u6307\u5411\u5176\u6307\u4ee3\u5b9e\u4f53\u7684\u6307\u9488\uff0c\u800c\u4e14\u662f\u4e00\u4e2a\u6307\u9488\u5e38\u91cf\uff0c\u4e0d\u80fd\u4f5c\u81ea\u589e\u3001\u81ea\u51cf\u7b49\u64cd\u4f5c\uff0c\u4e0d\u80fd\u88ab\u4fee\u6539\uff1b", "\nchar str[10];", "\nstr++; //\u7f16\u8bd1\u51fa\u9519\uff0c\u63d0\u793astr\u4e0d\u662f\u5de6\u503c\u3000", "\u3000\u3000\uff083\uff09\u6570\u7ec4\u540d\u4f5c\u4e3a\u51fd\u6570\u5f62\u53c2\u65f6\uff0c\u6ca6\u4e3a\u666e\u901a\u6307\u9488\u3002", "\u3000\u3000Windows NT 32\u4f4d\u5e73\u53f0\u4e0b\uff0c\u6307\u9488\u7684\u957f\u5ea6\uff08\u5360\u7528\u5185\u5b58\u7684\u5927\u5c0f\uff09\u4e3a4\u5b57\u8282\uff0c\u6545sizeof( str ) \u3001sizeof ( p ) \u90fd\u4e3a4\u3002", "\u3000\u3000\u8bd5\u98983\uff1a\u5199\u4e00\u4e2a\u201c\u6807\u51c6\u201d\u5b8fMIN\uff0c\u8fd9\u4e2a\u5b8f\u8f93\u5165\u4e24\u4e2a\u53c2\u6570\u5e76\u8fd4\u56de\u8f83\u5c0f\u7684\u4e00\u4e2a\u3002\u53e6\u5916\uff0c\u5f53\u4f60\u5199\u4e0b\u9762\u7684\u4ee3\u7801\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\u4e8b\uff1f", "\nleast = MIN(*p++, b);", "\u3000\u3000\u89e3\u7b54\uff1a", "\n#define MIN(A,B) ((A) \n", "\u3000\u3000MIN(*p++, b)\u4f1a\u4ea7\u751f\u5b8f\u7684\u526f\u4f5c\u7528", "\u3000\u3000\u5256\u6790\uff1a", "\u3000\u3000\u8fd9\u4e2a\u9762\u8bd5\u9898\u4e3b\u8981\u8003\u67e5\u9762\u8bd5\u8005\u5bf9\u5b8f\u5b9a\u4e49\u7684\u4f7f\u7528\uff0c\u5b8f\u5b9a\u4e49\u53ef\u4ee5\u5b9e\u73b0\u7c7b\u4f3c\u4e8e\u51fd\u6570\u7684\u529f\u80fd\uff0c\u4f46\u662f\u5b83\u7ec8\u5f52\u4e0d\u662f\u51fd\u6570\uff0c\u800c\u5b8f\u5b9a\u4e49\u4e2d\u62ec\u5f27\u4e2d\u7684\u201c\u53c2\u6570\u201d\u4e5f\u4e0d\u662f\u771f\u7684\u53c2\u6570\uff0c\u5728\u5b8f\u5c55\u5f00\u7684\u65f6\u5019\u5bf9\u201c\u53c2\u6570\u201d\u8fdb\u884c\u7684\u662f\u4e00\u5bf9\u4e00\u7684\u66ff\u6362\u3002", "\u3000\u3000\u7a0b\u5e8f\u5458\u5bf9\u5b8f\u5b9a\u4e49\u7684\u4f7f\u7528\u8981\u975e\u5e38\u5c0f\u5fc3\uff0c\u7279\u522b\u8981\u6ce8\u610f\u4e24\u4e2a\u95ee\u9898\uff1a", "\u3000\u3000\uff081\uff09\u8c28\u614e\u5730\u5c06\u5b8f\u5b9a\u4e49\u4e2d\u7684\u201c\u53c2\u6570\u201d\u548c\u6574\u4e2a\u5b8f\u7528\u7528\u62ec\u5f27\u62ec\u8d77\u6765\u3002\u6240\u4ee5\uff0c\u4e25\u683c\u5730\u8bb2\uff0c\u4e0b\u8ff0\u89e3\u7b54\uff1a", "\n#define MIN(A,B) (A) \n#define MIN(A,B) (A \n", "\u3000\u3000\u90fd\u5e94\u52240\u5206\uff1b", "\u3000\u3000\uff082\uff09\u9632\u6b62\u5b8f\u7684\u526f\u4f5c\u7528\u3002", "\u3000\u3000\u5b8f\u5b9a\u4e49#define MIN(A,B) ((A) \n", "((*p++) \n", "\u3000\u3000\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u4f1a\u4ea7\u751f\u526f\u4f5c\u7528\uff0c\u6307\u9488p\u4f1a\u4f5c\u4e09\u6b21++\u81ea\u589e\u64cd\u4f5c\u3002", "\u3000\u3000\u9664\u6b64\u4e4b\u5916\uff0c\u53e6\u4e00\u4e2a\u5e94\u8be5\u52240\u5206\u7684\u89e3\u7b54\u662f\uff1a", "\n#define MIN(A,B) ((A) \n", "\u3000\u3000\u8fd9\u4e2a\u89e3\u7b54\u5728\u5b8f\u5b9a\u4e49\u7684\u540e\u9762\u52a0\u201c;\u201d\uff0c\u663e\u793a\u7f16\u5199\u8005\u5bf9\u5b8f\u7684\u6982\u5ff5\u6a21\u7cca\u4e0d\u6e05\uff0c\u53ea\u80fd\u88ab\u65e0\u60c5\u5730\u52240\u5206\u5e76\u88ab\u9762\u8bd5\u5b98\u6dd8\u6c70\u3002", "\u3000\u3000\u8bd5\u98984\uff1a\u4e3a\u4ec0\u4e48\u6807\u51c6\u5934\u6587\u4ef6\u90fd\u6709\u7c7b\u4f3c\u4ee5\u4e0b\u7684\u7ed3\u6784\uff1f", "\n#ifndef __INCvxWorksh", "\n#define __INCvxWorksh", "\n#ifdef __cplusplus", "extern \"C\" {", "\n#endif", "\n/*...*/", "\n#ifdef __cplusplus", "\n}", "#endif", "\n#endif /* __INCvxWorksh */", "\u3000\u3000\u89e3\u7b54\uff1a", "\u3000\u3000\u5934\u6587\u4ef6\u4e2d\u7684\u7f16\u8bd1\u5b8f", "\n#ifndef\u3000__INCvxWorksh", "\n#define\u3000__INCvxWorksh", "\n#endif ", "\u3000\u3000\u7684\u4f5c\u7528\u662f\u9632\u6b62\u88ab\u91cd\u590d\u5f15\u7528\u3002", "\u3000\u3000\u4f5c\u4e3a\u4e00\u79cd\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\uff0cC++\u652f\u6301\u51fd\u6570\u91cd\u8f7d\uff0c\u800c\u8fc7\u7a0b\u5f0f\u8bed\u8a00C\u5219\u4e0d\u652f\u6301\u3002\u51fd\u6570\u88abC++\u7f16\u8bd1\u540e\u5728symbol\u5e93\u4e2d\u7684\u540d\u5b57\u4e0eC\u8bed\u8a00\u7684\u4e0d\u540c\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u67d0\u4e2a\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a", "\nvoid foo(int x, int y);", "\u3000\u3000\u8be5\u51fd\u6570\u88abC\u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u5728symbol\u5e93\u4e2d\u7684\u540d\u5b57\u4e3a_foo\uff0c\u800cC++\u7f16\u8bd1\u5668\u5219\u4f1a\u4ea7\u751f\u50cf_foo_int_int\u4e4b\u7c7b\u7684\u540d\u5b57\u3002_foo_int_int\u8fd9\u6837\u7684\u540d\u5b57\u5305\u542b\u4e86\u51fd\u6570\u540d\u548c\u51fd\u6570\u53c2\u6570\u6570\u91cf\u53ca\u7c7b\u578b\u4fe1\u606f\uff0cC++\u5c31\u662f\u8003\u8fd9\u79cd\u673a\u5236\u6765\u5b9e\u73b0\u51fd\u6570\u91cd\u8f7d\u7684\u3002", "\u3000\u3000\u4e3a\u4e86\u5b9e\u73b0C\u548cC++\u7684\u6df7\u5408\u7f16\u7a0b\uff0cC++\u63d0\u4f9b\u4e86C\u8fde\u63a5\u4ea4\u6362\u6307\u5b9a\u7b26\u53f7extern \"C\"\u6765\u89e3\u51b3\u540d\u5b57\u5339\u914d\u95ee\u9898\uff0c\u51fd\u6570\u58f0\u660e\u524d\u52a0\u4e0aextern \"C\"\u540e\uff0c\u5219\u7f16\u8bd1\u5668\u5c31\u4f1a\u6309\u7167C\u8bed\u8a00\u7684\u65b9\u5f0f\u5c06\u8be5\u51fd\u6570\u7f16\u8bd1\u4e3a_foo\uff0c\u8fd9\u6837C\u8bed\u8a00\u4e2d\u5c31\u53ef\u4ee5\u8c03\u7528C++\u7684\u51fd\u6570\u4e86\u3002", "\n\u3000\u8bd5\u98985\uff1a\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u4f5c\u7528\u662f\u628a\u4e00\u4e2achar\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u5faa\u73af\u53f3\u79fbn\u4e2a\u3002\u6bd4\u5982\u539f\u6765\u662f\u201cabcdefghi\u201d\u5982\u679cn=2\uff0c\u79fb\u4f4d\u540e\u5e94\u8be5\u662f\u201chiabcdefgh\u201d ", "\u3000\u3000\u51fd\u6570\u5934\u662f\u8fd9\u6837\u7684\uff1a", "\n//pStr\u662f\u6307\u5411\u4ee5''\u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32\u7684\u6307\u9488", "\n//steps\u662f\u8981\u6c42\u79fb\u52a8\u7684n", "void LoopMove ( char * pStr, int steps )", "\n{", "\n\u3000//\u8bf7\u586b\u5145...", "\n}", "\u3000\u3000\u89e3\u7b54\uff1a", "\u3000\u3000\u6b63\u786e\u89e3\u7b541\uff1a", "\nvoid LoopMove ( char *pStr, int steps )", "\n{", "\n\u3000int n = strlen( pStr ) - steps;", "\n\u3000char tmp[MAX_LEN];", "\n\u3000strcpy ( tmp, pStr + n );", "\n\u3000strcpy ( tmp + steps, pStr);", "\n\u3000*( tmp + strlen ( pStr ) ) = '';", "\n\u3000strcpy( pStr, tmp );", "\n}", "\u3000\u3000\u6b63\u786e\u89e3\u7b542\uff1a", "\nvoid LoopMove ( char *pStr, int steps )", "\n{", "\n\u3000int n = strlen( pStr ) - steps;", "\n\u3000char tmp[MAX_LEN];", "\n\u3000memcpy( tmp, pStr + n, steps );", "\n\u3000memcpy(pStr + steps, pStr, n );", "\n\u3000memcpy(pStr, tmp, steps );", "\n}", "\u3000\u3000\u5256\u6790\uff1a", "\u3000\u3000\u8fd9\u4e2a\u8bd5\u9898\u4e3b\u8981\u8003\u67e5\u9762\u8bd5\u8005\u5bf9\u6807\u51c6\u5e93\u51fd\u6570\u7684\u719f\u7ec3\u7a0b\u5ea6\uff0c\u5728\u9700\u8981\u7684\u65f6\u5019\u5f15\u7528\u5e93\u51fd\u6570\u53ef\u4ee5\u5f88\u5927\u7a0b\u5ea6\u4e0a\u7b80\u5316\u7a0b\u5e8f\u7f16\u5199\u7684\u5de5\u4f5c\u91cf\u3002", "\u3000\u3000\u6700\u9891\u7e41\u88ab\u4f7f\u7528\u7684\u5e93\u51fd\u6570\u5305\u62ec\uff1a", "\u3000\u3000\uff081\uff09 strcpy", "\u3000\u3000\uff082\uff09 memcpy", "\u3000\u3000\uff083\uff09 memset", "\u3000\u3000\u8bd5\u98986\uff1a\u5df2\u77e5WAV\u6587\u4ef6\u683c\u5f0f\u5982\u4e0b\u8868\uff0c\u6253\u5f00\u4e00\u4e2aWAV\u6587\u4ef6\uff0c\u4ee5\u9002\u5f53\u7684\u6570\u636e\u7ed3\u6784\u7ec4\u7ec7WAV\u6587\u4ef6\u5934\u5e76\u89e3\u6790WAV\u683c\u5f0f\u7684\u5404\u9879\u4fe1\u606f\u3002", "\u3000\u3000WAVE\u6587\u4ef6\u683c\u5f0f\u8bf4\u660e\u8868", "\n \t\u504f\u79fb\u5730\u5740\t\u5b57\u8282\u6570\t\u6570\u636e\u7c7b\u578b\t\u5185 \u5bb9", "\n\u6587\u4ef6\u5934", "\n \t00H\t4 \tChar\t\"RIFF\"\u6807\u5fd7", "\n\t04H\t4\tint32\t\u6587\u4ef6\u957f\u5ea6", "\n\t08H\t4\tChar\t\"WAVE\"\u6807\u5fd7", "\n\t0CH\t4\tChar\t\"fmt\"\u6807\u5fd7", "\n\t10H\t4\t\t\u8fc7\u6e21\u5b57\u8282\uff08\u4e0d\u5b9a\uff09", "\n\t14H\t2\tint16\t\u683c\u5f0f\u7c7b\u522b", "\n\t16H\t2\tint16\t\u901a\u9053\u6570", "\n\t18H\t2\tint16 \t\u91c7\u6837\u7387\uff08\u6bcf\u79d2\u6837\u672c\u6570\uff09\uff0c\u8868\u793a\u6bcf\u4e2a\u901a\u9053\u7684\u64ad\u653e\u901f\u5ea6", "\n\t1CH\t4\tint32\t\u6ce2\u5f62\u97f3\u9891\u6570\u636e\u4f20\u9001\u901f\u7387", "\n\t20H\t2\tint16\t\u6570\u636e\u5757\u7684\u8c03\u6574\u6570\uff08\u6309\u5b57\u8282\u7b97\u7684\uff09", "\n\t22H\t2\t\t\u6bcf\u6837\u672c\u7684\u6570\u636e\u4f4d\u6570", "\n\t24H\t4\tChar\t\u6570\u636e\u6807\u8bb0\u7b26\uff02data\uff02", "\n\t28H\t4\tint32\t\u8bed\u97f3\u6570\u636e\u7684\u957f\u5ea6", "\u3000\u3000\u89e3\u7b54\uff1a", "\u3000\u3000\u5c06WAV\u6587\u4ef6\u683c\u5f0f\u5b9a\u4e49\u4e3a\u7ed3\u6784\u4f53WAVEFORMAT\uff1a", "\ntypedef struct tagWaveFormat", "\n{", "\n\u3000char cRiffFlag[4];", "\n\u3000UIN32 nFileLen;", "\n\u3000char cWaveFlag[4];", "\n\u3000char cFmtFlag[4];", "\n\u3000char cTransition[4];", "\n\u3000UIN16 nFormatTag ;", "\n\u3000UIN16 nChannels;", "\n\u3000UIN16 nSamplesPerSec;", "\n\u3000UIN32 nAvgBytesperSec;", "\n\u3000UIN16 nBlockAlign;", "\n\u3000UIN16 nBitNumPerSample;", "\n\u3000char cDataFlag[4];", "\n\u3000UIN16 nAudioLength; ", "} WAVEFORMAT;", "\u3000\u3000\u5047\u8bbeWAV\u6587\u4ef6\u5185\u5bb9\u8bfb\u51fa\u540e\u5b58\u653e\u5728\u6307\u9488buffer\u5f00\u59cb\u7684\u5185\u5b58\u5355\u5143\u5185\uff0c\u5219\u5206\u6790\u6587\u4ef6\u683c\u5f0f\u7684\u4ee3\u7801\u5f88\u7b80\u5355\uff0c\u4e3a\uff1a", "\nWAVEFORMAT waveFormat;", "\nmemcpy( &waveFormat, buffer,sizeof( WAVEFORMAT ) ); ", "\u3000\u3000\u76f4\u63a5\u901a\u8fc7\u8bbf\u95eewaveFormat\u7684\u6210\u5458\uff0c\u5c31\u53ef\u4ee5\u83b7\u5f97\u7279\u5b9aWAV\u6587\u4ef6\u7684\u5404\u9879\u683c\u5f0f\u4fe1\u606f\u3002", "\u3000\u3000\u5256\u6790\uff1a", "\u3000\u3000\u8bd5\u98986\u8003\u67e5\u9762\u8bd5\u8005\u7ec4\u7ec7\u6570\u636e\u7ed3\u6784\u7684\u80fd\u529b\uff0c\u6709\u7ecf\u9a8c\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u8005\u5c06\u5c5e\u4e8e\u4e00\u4e2a\u6574\u4f53\u7684\u6570\u636e\u6210\u5458\u7ec4\u7ec7\u4e3a\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u5229\u7528\u6307\u9488\u7c7b\u578b\u8f6c\u6362\uff0c\u53ef\u4ee5\u5c06memcpy\u3001memset\u7b49\u51fd\u6570\u76f4\u63a5\u7528\u4e8e\u7ed3\u6784\u4f53\u5730\u5740\uff0c\u8fdb\u884c\u7ed3\u6784\u4f53\u7684\u6574\u4f53\u64cd\u4f5c\u3002 \u900f\u8fc7\u8fd9\u4e2a\u9898\u53ef\u4ee5\u770b\u51fa\u9762\u8bd5\u8005\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u7ecf\u9a8c\u662f\u5426\u4e30\u5bcc\u3002", "\u3000\u3000\u8bd5\u98987\uff1a\u7f16\u5199\u7c7bString\u7684\u6784\u9020\u51fd\u6570\u3001\u6790\u6784\u51fd\u6570\u548c\u8d4b\u503c\u51fd\u6570\uff0c\u5df2\u77e5\u7c7bString\u7684\u539f\u578b\u4e3a\uff1a", "\nclass String", "\n{", "\n\u3000public:", "\n\u3000\u3000String(const char *str = NULL); // \u666e\u901a\u6784\u9020\u51fd\u6570", "\n\u3000\u3000String(const String &other); // \u62f7\u8d1d\u6784\u9020\u51fd\u6570", "\n\u3000\u3000~ String(void); // \u6790\u6784\u51fd\u6570", "\n\u3000\u3000String & operate =(const String &other); // \u8d4b\u503c\u51fd\u6570", "\n\u3000private:", "\n\u3000\u3000char *m_data; // \u7528\u4e8e\u4fdd\u5b58\u5b57\u7b26\u4e32", "\n};", "\u3000\u3000\u89e3\u7b54\uff1a", "\n//\u666e\u901a\u6784\u9020\u51fd\u6570", "String::String(const char *str)", "\n{", "\n\u3000if(str==NULL)", "\n\u3000{", "\n\u3000\u3000m_data = new char[1]; // \u5f97\u5206\u70b9\uff1a\u5bf9\u7a7a\u5b57\u7b26\u4e32\u81ea\u52a8\u7533\u8bf7\u5b58\u653e\u7ed3\u675f\u6807\u5fd7''\u7684\u7a7a", "\n\u3000\u3000//\u52a0\u5206\u70b9\uff1a\u5bf9m_data\u52a0NULL \u5224\u65ad", "\n\u3000\u3000*m_data = '';", "\n\u3000}", "\n\u3000else", "\n\u3000{", "\n\u3000\u3000int length = strlen(str);", "\n\u3000\u3000m_data = new char[length+1]; // \u82e5\u80fd\u52a0 NULL \u5224\u65ad\u5219\u66f4\u597d", "\n\u3000\u3000strcpy(m_data, str);", "\n\u3000}", "\n}", "// String\u7684\u6790\u6784\u51fd\u6570", "String::~String(void)", "\n{", "\n\u3000delete [] m_data; // \u6216delete m_data;", "\n}", "//\u62f7\u8d1d\u6784\u9020\u51fd\u6570", "String::String(const String &other) \u3000\u3000\u3000// \u5f97\u5206\u70b9\uff1a\u8f93\u5165\u53c2\u6570\u4e3aconst\u578b", "\n{", "\n\u3000int length = strlen(other.m_data);", "\n\u3000m_data = new char[length+1]; \u3000\u3000\u3000\u3000//\u52a0\u5206\u70b9\uff1a\u5bf9m_data\u52a0NULL \u5224\u65ad", "\n\u3000strcpy(m_data, other.m_data);", "\n}", "//\u8d4b\u503c\u51fd\u6570", "String & String::operate =(const String &other) // \u5f97\u5206\u70b9\uff1a\u8f93\u5165\u53c2\u6570\u4e3aconst\u578b", "\n{", "\n\u3000if(this == &other) \u3000\u3000//\u5f97\u5206\u70b9\uff1a\u68c0\u67e5\u81ea\u8d4b\u503c", "\n\u3000\u3000return *this;", "\n\u3000delete [] m_data; \u3000\u3000\u3000\u3000//\u5f97\u5206\u70b9\uff1a\u91ca\u653e\u539f\u6709\u7684\u5185\u5b58\u8d44\u6e90", "\n\u3000int length = strlen( other.m_data );", "\n\u3000m_data = new char[length+1]; \u3000//\u52a0\u5206\u70b9\uff1a\u5bf9m_data\u52a0NULL \u5224\u65ad", "\n\u3000strcpy( m_data, other.m_data );", "\n\u3000return *this; \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000//\u5f97\u5206\u70b9\uff1a\u8fd4\u56de\u672c\u5bf9\u8c61\u7684\u5f15\u7528", "\n}", "\u3000\u3000\u5256\u6790\uff1a", "\u3000\u3000\u80fd\u591f\u51c6\u786e\u65e0\u8bef\u5730\u7f16\u5199\u51faString\u7c7b\u7684\u6784\u9020\u51fd\u6570\u3001\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3001\u8d4b\u503c\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u7684\u9762\u8bd5\u8005\u81f3\u5c11\u5df2\u7ecf\u5177\u5907\u4e86C++\u57fa\u672c\u529f\u768460%\u4ee5\u4e0a\uff01", "\u3000\u3000\u5728\u8fd9\u4e2a\u7c7b\u4e2d\u5305\u62ec\u4e86\u6307\u9488\u7c7b\u6210\u5458\u53d8\u91cfm_data\uff0c\u5f53\u7c7b\u4e2d\u5305\u62ec\u6307\u9488\u7c7b\u6210\u5458\u53d8\u91cf\u65f6\uff0c\u4e00\u5b9a\u8981\u91cd\u8f7d\u5176\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3001\u8d4b\u503c\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\uff0c\u8fd9\u65e2\u662f\u5bf9C++\u7a0b\u5e8f\u5458\u7684\u57fa\u672c\u8981\u6c42\uff0c\u4e5f\u662f\u300aEffective\u3000C++\u300b\u4e2d\u7279\u522b\u5f3a\u8c03\u7684\u6761\u6b3e\u3002", "\u3000\u3000\u4ed4\u7ec6\u5b66\u4e60\u8fd9\u4e2a\u7c7b\uff0c\u7279\u522b\u6ce8\u610f\u52a0\u6ce8\u91ca\u7684\u5f97\u5206\u70b9\u548c\u52a0\u5206\u70b9\u7684\u610f\u4e49\uff0c\u8fd9\u6837\u5c31\u5177\u5907\u4e8660%\u4ee5\u4e0a\u7684C++\u57fa\u672c\u529f\uff01", "\u3000\u3000\u8bd5\u98988\uff1a\u8bf7\u8bf4\u51fastatic\u548cconst\u5173\u952e\u5b57\u5c3d\u53ef\u80fd\u591a\u7684\u4f5c\u7528", "\u3000\u3000\u89e3\u7b54\uff1a", "\u3000\u3000static\u5173\u952e\u5b57\u81f3\u5c11\u6709\u4e0b\u5217n\u4e2a\u4f5c\u7528\uff1a", "\u3000\u3000\uff081\uff09\u51fd\u6570\u4f53\u5185static\u53d8\u91cf\u7684\u4f5c\u7528\u8303\u56f4\u4e3a\u8be5\u51fd\u6570\u4f53\uff0c\u4e0d\u540c\u4e8eauto\u53d8\u91cf\uff0c\u8be5\u53d8\u91cf\u7684\u5185\u5b58\u53ea\u88ab\u5206\u914d\u4e00\u6b21\uff0c\u56e0\u6b64\u5176\u503c\u5728\u4e0b\u6b21\u8c03\u7528\u65f6\u4ecd\u7ef4\u6301\u4e0a\u6b21\u7684\u503c\uff1b", "\u3000\u3000\uff082\uff09\u5728\u6a21\u5757\u5185\u7684static\u5168\u5c40\u53d8\u91cf\u53ef\u4ee5\u88ab\u6a21\u5757\u5185\u6240\u7528\u51fd\u6570\u8bbf\u95ee\uff0c\u4f46\u4e0d\u80fd\u88ab\u6a21\u5757\u5916\u5176\u5b83\u51fd\u6570\u8bbf\u95ee\uff1b", "\u3000\u3000\uff083\uff09\u5728\u6a21\u5757\u5185\u7684static\u51fd\u6570\u53ea\u53ef\u88ab\u8fd9\u4e00\u6a21\u5757\u5185\u7684\u5176\u5b83\u51fd\u6570\u8c03\u7528\uff0c\u8fd9\u4e2a\u51fd\u6570\u7684\u4f7f\u7528\u8303\u56f4\u88ab\u9650\u5236\u5728\u58f0\u660e\u5b83\u7684\u6a21\u5757\u5185\uff1b", "\u3000\u3000\uff084\uff09\u5728\u7c7b\u4e2d\u7684static\u6210\u5458\u53d8\u91cf\u5c5e\u4e8e\u6574\u4e2a\u7c7b\u6240\u62e5\u6709\uff0c\u5bf9\u7c7b\u7684\u6240\u6709\u5bf9\u8c61\u53ea\u6709\u4e00\u4efd\u62f7\u8d1d\uff1b", "\u3000\u3000\uff085\uff09\u5728\u7c7b\u4e2d\u7684static\u6210\u5458\u51fd\u6570\u5c5e\u4e8e\u6574\u4e2a\u7c7b\u6240\u62e5\u6709\uff0c\u8fd9\u4e2a\u51fd\u6570\u4e0d\u63a5\u6536this\u6307\u9488\uff0c\u56e0\u800c\u53ea\u80fd\u8bbf\u95ee\u7c7b\u7684static\u6210\u5458\u53d8\u91cf\u3002 ", "\u3000\u3000const\u5173\u952e\u5b57\u81f3\u5c11\u6709\u4e0b\u5217n\u4e2a\u4f5c\u7528\uff1a", "\u3000\u3000\uff081\uff09\u6b32\u963b\u6b62\u4e00\u4e2a\u53d8\u91cf\u88ab\u6539\u53d8\uff0c\u53ef\u4ee5\u4f7f\u7528const\u5173\u952e\u5b57\u3002\u5728\u5b9a\u4e49\u8be5const\u53d8\u91cf\u65f6\uff0c\u901a\u5e38\u9700\u8981\u5bf9\u5b83\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u56e0\u4e3a\u4ee5\u540e\u5c31\u6ca1\u6709\u673a\u4f1a\u518d\u53bb\u6539\u53d8\u5b83\u4e86\uff1b", "\u3000\u3000\uff082\uff09\u5bf9\u6307\u9488\u6765\u8bf4\uff0c\u53ef\u4ee5\u6307\u5b9a\u6307\u9488\u672c\u8eab\u4e3aconst\uff0c\u4e5f\u53ef\u4ee5\u6307\u5b9a\u6307\u9488\u6240\u6307\u7684\u6570\u636e\u4e3aconst\uff0c\u6216\u4e8c\u8005\u540c\u65f6\u6307\u5b9a\u4e3aconst\uff1b", "\u3000\u3000\uff083\uff09\u5728\u4e00\u4e2a\u51fd\u6570\u58f0\u660e\u4e2d\uff0cconst\u53ef\u4ee5\u4fee\u9970\u5f62\u53c2\uff0c\u8868\u660e\u5b83\u662f\u4e00\u4e2a\u8f93\u5165\u53c2\u6570\uff0c\u5728\u51fd\u6570\u5185\u90e8\u4e0d\u80fd\u6539\u53d8\u5176\u503c\uff1b", "\u3000\u3000\uff084\uff09\u5bf9\u4e8e\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u82e5\u6307\u5b9a\u5176\u4e3aconst\u7c7b\u578b\uff0c\u5219\u8868\u660e\u5176\u662f\u4e00\u4e2a\u5e38\u51fd\u6570\uff0c\u4e0d\u80fd\u4fee\u6539\u7c7b\u7684\u6210\u5458\u53d8\u91cf\uff1b", "\u3000\u3000\uff085\uff09\u5bf9\u4e8e\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u6709\u65f6\u5019\u5fc5\u987b\u6307\u5b9a\u5176\u8fd4\u56de\u503c\u4e3aconst\u7c7b\u578b\uff0c\u4ee5\u4f7f\u5f97\u5176\u8fd4\u56de\u503c\u4e0d\u4e3a\u201c\u5de6\u503c\u201d\u3002\u4f8b\u5982\uff1a", "\nconst classA operator*(const classA& a1,const classA& a2);", "\u3000\u3000operator*\u7684\u8fd4\u56de\u7ed3\u679c\u5fc5\u987b\u662f\u4e00\u4e2aconst\u5bf9\u8c61\u3002\u5982\u679c\u4e0d\u662f\uff0c\u8fd9\u6837\u7684\u53d8\u6001\u4ee3\u7801\u4e5f\u4e0d\u4f1a\u7f16\u8bd1\u51fa\u9519\uff1a", "\nclassA a, b, c;", "\n(a * b) = c; // \u5bf9a*b\u7684\u7ed3\u679c\u8d4b\u503c", "\u3000\u3000\u64cd\u4f5c(a * b) = c\u663e\u7136\u4e0d\u7b26\u5408\u7f16\u7a0b\u8005\u7684\u521d\u8877\uff0c\u4e5f\u6ca1\u6709\u4efb\u4f55\u610f\u4e49\u3002", "\u3000\u3000\u5256\u6790\uff1a", "\u3000\u3000\u60ca\u8bb6\u5417\uff1f\u5c0f\u5c0f\u7684static\u548cconst\u5c45\u7136\u6709\u8fd9\u4e48\u591a\u529f\u80fd\uff0c\u6211\u4eec\u80fd\u56de\u7b54\u51e0\u4e2a\uff1f\u5982\u679c\u53ea\u80fd\u56de\u7b541~2\u4e2a\uff0c\u90a3\u8fd8\u771f\u5f97\u95ed\u5173\u518d\u597d\u597d\u4fee\u70bc\u4fee\u70bc\u3002", "\u3000\u3000\u8fd9\u4e2a\u9898\u53ef\u4ee5\u8003\u67e5\u9762\u8bd5\u8005\u5bf9\u7a0b\u5e8f\u8bbe\u8ba1\u77e5\u8bc6\u7684\u638c\u63e1\u7a0b\u5ea6\u662f\u521d\u7ea7\u3001\u4e2d\u7ea7\u8fd8\u662f\u6bd4\u8f83\u6df1\u5165\uff0c\u6ca1\u6709\u4e00\u5b9a\u7684\u77e5\u8bc6\u5e7f\u5ea6\u548c\u6df1\u5ea6\uff0c\u4e0d\u53ef\u80fd\u5bf9\u8fd9\u4e2a\u95ee\u9898\u7ed9\u51fa\u5168\u9762\u7684\u89e3\u7b54\u3002\u5927\u591a\u6570\u4eba\u53ea\u80fd\u56de\u7b54\u51fastatic\u548cconst\u5173\u952e\u5b57\u7684\u90e8\u5206\u529f\u80fd\u3002", "\u3000\u30004.\u6280\u5de7\u9898", "\u3000\u3000\u8bd5\u98981\uff1a\u8bf7\u5199\u4e00\u4e2aC\u51fd\u6570\uff0c\u82e5\u5904\u7406\u5668\u662fBig_endian\u7684\uff0c\u5219\u8fd4\u56de0\uff1b\u82e5\u662fLittle_endian\u7684\uff0c\u5219\u8fd4\u56de1", "\u3000\u3000\u89e3\u7b54\uff1a", "\nint checkCPU()", "\n{", "\n\u3000{", "\n\u3000\u3000union w", "\n\u3000\u3000{", "\n\u3000\u3000\u3000int a;", "\n\u3000\u3000\u3000char b;", "\n\u3000\u3000} c;", "\n\u3000\u3000c.a = 1;", "\n\u3000\u3000return (c.b == 1);", "\n\u3000}", "\n}", "\u3000\u3000\u5256\u6790\uff1a", "\u3000\u3000\u5d4c\u5165\u5f0f\u7cfb\u7edf\u5f00\u53d1\u8005\u5e94\u8be5\u5bf9Little-endian\u548cBig-endian\u6a21\u5f0f\u975e\u5e38\u4e86\u89e3\u3002\u91c7\u7528Little-endian\u6a21\u5f0f\u7684CPU\u5bf9\u64cd\u4f5c\u6570\u7684\u5b58\u653e\u65b9\u5f0f\u662f\u4ece\u4f4e\u5b57\u8282\u5230\u9ad8\u5b57\u8282\uff0c\u800cBig-endian\u6a21\u5f0f\u5bf9\u64cd\u4f5c\u6570\u7684\u5b58\u653e\u65b9\u5f0f\u662f\u4ece\u9ad8\u5b57\u8282\u5230\u4f4e\u5b57\u8282\u3002\u4f8b\u5982\uff0c16bit\u5bbd\u7684\u65700x1234\u5728Little- endian\u6a21\u5f0fCPU\u5185\u5b58\u4e2d\u7684\u5b58\u653e\u65b9\u5f0f\uff08\u5047\u8bbe\u4ece\u5730\u57400x4000\u5f00\u59cb\u5b58\u653e\uff09\u4e3a\uff1a", "\n\u5185\u5b58\u5730\u5740\t\u5b58\u653e\u5185\u5bb9", "\n0x4000\t0x34", "\n0x4001\t0x12", "\u3000\u3000\u800c\u5728Big-endian\u6a21\u5f0fCPU\u5185\u5b58\u4e2d\u7684\u5b58\u653e\u65b9\u5f0f\u5219\u4e3a\uff1a", "\n\u5185\u5b58\u5730\u5740\t\u5b58\u653e\u5185\u5bb9", "\n0x4000\t0x12", "\n0x4001\t0x34", "\u3000\u300032bit\u5bbd\u7684\u65700x12345678\u5728Little-endian\u6a21\u5f0fCPU\u5185\u5b58\u4e2d\u7684\u5b58\u653e\u65b9\u5f0f\uff08\u5047\u8bbe\u4ece\u5730\u57400x4000\u5f00\u59cb\u5b58\u653e\uff09\u4e3a\uff1a", "\n\u5185\u5b58\u5730\u5740\t\u5b58\u653e\u5185\u5bb9", "\n0x4000\t0x78", "\n0x4001\t0x56", "\n0x4002\t0x34", "\n0x4003\t0x12", "\u3000\u3000\u800c\u5728Big-endian\u6a21\u5f0fCPU\u5185\u5b58\u4e2d\u7684\u5b58\u653e\u65b9\u5f0f\u5219\u4e3a\uff1a", "\n\u5185\u5b58\u5730\u5740\t\u5b58\u653e\u5185\u5bb9", "\n0x4000\t0x12", "\n0x4001\t0x34", "\n0x4002\t0x56", "\n0x4003\t0x78", "\u3000\u3000\u8054\u5408\u4f53union\u7684\u5b58\u653e\u987a\u5e8f\u662f\u6240\u6709\u6210\u5458\u90fd\u4ece\u4f4e\u5730\u5740\u5f00\u59cb\u5b58\u653e\uff0c\u9762\u8bd5\u8005\u7684\u89e3\u7b54\u5229\u7528\u8be5\u7279\u6027\uff0c\u8f7b\u677e\u5730\u83b7\u5f97\u4e86CPU\u5bf9\u5185\u5b58\u91c7\u7528Little-endian\u8fd8\u662fBig-endian\u6a21\u5f0f\u8bfb\u5199\u3002\u5982\u679c\u8c01\u80fd\u5f53\u573a\u7ed9\u51fa\u8fd9\u4e2a\u89e3\u7b54\uff0c\u90a3\u7b80\u76f4\u5c31\u662f\u4e00\u4e2a\u5929\u624d\u7684\u7a0b\u5e8f\u5458\u3002", "\u3000\u3000\u8bd5\u98982\uff1a\u5199\u4e00\u4e2a\u51fd\u6570\u8fd4\u56de1+2+3+\u2026+n\u7684\u503c\uff08\u5047\u5b9a\u7ed3\u679c\u4e0d\u4f1a\u8d85\u8fc7\u957f\u6574\u578b\u53d8\u91cf\u7684\u8303\u56f4\uff09 ", "\u3000\u3000\u89e3\u7b54\uff1a", "\nint Sum( int n )", "\n{", "\n\u3000return ( (long)1 + n) * n / 2;\u3000\u3000//\u6216return (1l + n) * n / 2;", "\n}", "\u3000\u3000\u5256\u6790\uff1a", "\n\u3000", "\n\u3000\u3000\u5bf9\u4e8e\u8fd9\u4e2a\u9898\uff0c\u53ea\u80fd\u8bf4\uff0c\u4e5f\u8bb8\u6700\u7b80\u5355\u7684\u7b54\u6848\u5c31\u662f\u6700\u597d\u7684\u7b54\u6848\u3002\u4e0b\u9762\u7684\u89e3\u7b54\uff0c\u6216\u8005\u57fa\u4e8e\u4e0b\u9762\u7684\u89e3\u7b54\u601d\u8def\u53bb\u4f18\u5316\uff0c\u4e0d\u7ba1\u600e\u4e48\u201c\u6298\u817e\u201d\uff0c\u5176\u6548\u7387\u4e5f\u4e0d\u53ef\u80fd\u4e0e\u76f4\u63a5return ( 1 l + n ) * n / 2\u76f8\u6bd4\uff01", "\nint Sum( int n )", "\n{", "\n\u3000long sum = 0;", "\n\u3000for( int i=1; i\n\u3000{", "\n\u3000\u3000sum += i;", "\n\u3000}", "\n\u3000return sum;", "\n} ", "\u3000\u3000\u6240\u4ee5\u7a0b\u5e8f\u5458\u4eec\u9700\u8981\u654f\u611f\u5730\u5c06\u6570\u5b66\u7b49\u77e5\u8bc6\u7528\u5728\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\u3002", "\u534e\u4e3a\u516c\u53f8 java \u9762\u8bd5\u9898", "\nsilver6 | 11 \u4e94\u6708, 2006 17:28", "\n\u7b2c\u4e00\u90e8\u5206\uff1a\u9009\u62e9\u9898", "\nQUESTION NO: 1", "\n1\u3001public class Test {", "\npublic static void changeStr(String str){", "\nstr=\"welcome\";", "\n}", "\npublic static void main(String[] args) {", "\nString str=\"1234\";", "\nchangeStr(str);", "\nSystem.out.println(str);", "\n}", "\n}", "\nPlease write the output result \uff1a", "QUESTION NO:2", "\n1. public class Test {", "\n2. static boolean foo(char c) {", "\n3. System.out.print(c);", "\n4. return true;", "\n5. }", "\n6. public static void main( String[] argv ) {", "\n7. int i =0;", "\n8. for ( foo('A'); foo('B')&&(i\n9. i++ ;", "\n10. foo('D');", "\n12. }", "\n13. }", "\n14. }", "\nWhat is the result?", "\nA. ABDCBDCB", "\nB. ABCDABCD", "\nC. Compilation fails.", "\nD. An exception is thrown at runtime.", "QUESTION NO: 3", "\n1. class A {", "\n2. protected int method1(int a, int b) { return 0; }", "\n3. }", "\nWhich two are valid in a class that extends class A? (Choose two)", "\nA. public int method1(int a, int b) { return 0; }", "\nB. private int method1(int a, int b) { return 0; }", "\nC. private int method1(int a, long b) { return 0; }", "\nD. public short method1(int a, int b) { return 0; }", "\nE. static protected int method1(int a, int b) { return 0; }", "QUESTION NO: 4", "\n1. public class Outer{", "\n2. public void someOuterMethod() {", "\n3. // Line 3", "\n4. }", "\n5. public class Inner{}", "\n6. public static void main( String[]argv ) {", "\n7. Outer o = new Outer();", "\n8. // Line 8", "\n9. }", "\n10. }", "\nWhich instantiates an instance of Inner?", "\nA. new Inner(); // At line 3", "\nB. new Inner(); // At line 8", "\nC. new o.Inner(); // At line 8", "\nD. new Outer.Inner(); // At line 8//new Outer().new Inner()", "QUESTION NO: 5", "\nWhich method is used by a servlet to place its session ID in a URL that is written to the servlet\u2019s response output stream?", "\nA. The encodeURL method of the HttpServletRequest interface.", "\nB. The encodeURL method of the HttpServletResponse interface.", "\nC. The rewriteURL method of the HttpServletRequest interface.", "\nD. The rewriteURL method of the HttpServletResponse interface.", "QUESTION NO: 6", "\nWhich two are equivalent? (Choose two)", "\nA. ", "\nB. ", "\nC. ", "\nD. ", "\nE. ", "\nF. ", "\nG. ", "QUESTION NO: 7", "\nWhich of the following statements regarding the lifecycle of a session bean are correct?", "\n1. java.lang.IllegalStateException is thrown if SessionContext.getEJBObject() is invoked when a stateful session bean instance is passivated.", "\n2. SessionContext.getRollbackOnly() does not throw an exception when a session bean with bean-managed transaction demarcation is activated.", "\n3. An exception is not thrown when SessionContext.getUserTransaction() is called in the afterBegin method of a bean with container-managed transactions.", "\n4. JNDI access to java:comp/env is permitted in all the SessionSynchronization methods of a stateful session bean with container-managed transaction demarcation.", "\n5. Accessing resource managers in the SessionSynchronization.afterBegin method of a stateful session bean with bean-managed transaction does not throw an exception.", "\u7b2c\u4e8c\u90e8\u5206\uff1a\u6982\u5ff5\u9898", "\n1\uff0e \u63cf\u8ff0Struts\u4f53\u7cfb\u7ed3\u6784\uff1f\u5bf9\u5e94\u5404\u4e2a\u90e8\u5206\u7684\u5f00\u53d1\u5de5\u4f5c\u4e3b\u8981\u5305\u62ec\u54ea\u4e9b\uff1f", "2\uff0e XML\u5305\u62ec\u54ea\u4e9b\u89e3\u91ca\u6280\u672f\uff0c\u533a\u522b\u662f\u4ec0\u4e48\uff1f", "3\uff0e JSP\u6709\u54ea\u4e9b\u5185\u7f6e\u5bf9\u8c61\u548c\u52a8\u4f5c\uff1f\u5b83\u4eec\u7684\u4f5c\u7528\u5206\u522b\u662f\u4ec0\u4e48\uff1f", "4\u3001SQL\u95ee\u7b54\u9898", "\nSELECT * FROM TABLE", "\n\u548c", "\nSELECT * FROM TABLE", "\nWHERE NAME LIKE \u2018%%\u2019 AND ADDR LIKE \u2018%%\u2019", "\nAND (1_ADDR LIKE \u2018%%\u2019 OR 2_ADDR LIKE \u2018%%\u2019", "\nOR 3_ADDR LIKE \u2018%%\u2019 OR 4_ADDR LIKE \u2018%%\u2019 )", "\n\u7684\u68c0\u7d22\u7ed3\u679c\u4e3a\u4f55\u4e0d\u540c\uff1f", "5\u3001SQL\u95ee\u7b54\u9898", "\n\u8868\u7ed3\u6784\uff1a", "\n1\u3001 \u8868\u540d\uff1ag_cardapply", "\n\u5b57\u6bb5(\u5b57\u6bb5\u540d/\u7c7b\u578b/\u957f\u5ea6)\uff1a", "\ng_applyno varchar 8\uff1b//\u7533\u8bf7\u5355\u53f7\uff08\u5173\u952e\u5b57\uff09", "\ng_applydate bigint 8\uff1b//\u7533\u8bf7\u65e5\u671f", "\ng_state varchar 2\uff1b//\u7533\u8bf7\u72b6\u6001", "\n2\u3001 \u8868\u540d\uff1ag_cardapplydetail", "\n\u5b57\u6bb5(\u5b57\u6bb5\u540d/\u7c7b\u578b/\u957f\u5ea6)\uff1a", "\ng_applyno varchar 8\uff1b//\u7533\u8bf7\u5355\u53f7\uff08\u5173\u952e\u5b57\uff09", "\ng_name varchar 30\uff1b//\u7533\u8bf7\u4eba\u59d3\u540d", "\ng_idcard varchar 18\uff1b//\u7533\u8bf7\u4eba\u8eab\u4efd\u8bc1\u53f7", "\ng_state varchar 2\uff1b//\u7533\u8bf7\u72b6\u6001", "\n\u5176\u4e2d\uff0c\u4e24\u4e2a\u8868\u7684\u5173\u8054\u5b57\u6bb5\u4e3a\u7533\u8bf7\u5355\u53f7\u3002", "\n\u9898\u76ee\uff1a", "\n1\u3001 \u67e5\u8be2\u8eab\u4efd\u8bc1\u53f7\u7801\u4e3a440401430103082\u7684\u7533\u8bf7\u65e5\u671f", "\n2\u3001 \u67e5\u8be2\u540c\u4e00\u4e2a\u8eab\u4efd\u8bc1\u53f7\u7801\u6709\u4e24\u6761\u4ee5\u4e0a\u8bb0\u5f55\u7684\u8eab\u4efd\u8bc1\u53f7\u7801\u53ca\u8bb0\u5f55\u4e2a\u6570", "\n3\u3001 \u5c06\u8eab\u4efd\u8bc1\u53f7\u7801\u4e3a440401430103082\u7684\u8bb0\u5f55\u5728\u4e24\u4e2a\u8868\u4e2d\u7684\u7533\u8bf7\u72b6\u6001\u5747\u6539\u4e3a07", "\n4\u3001 \u5220\u9664g_cardapplydetail\u8868\u4e2d\u6240\u6709\u59d3\u674e\u7684\u8bb0\u5f55", "\npublic class Test {", "\npublic static void changeStr(String str){", "\nstr=\u201dwelcome\u201d;", "\n}", "\npublic static void main(String[] args) {", "\nString str=\u201d1234\u2033;", "\nchangeStr(str);", "\nSystem.out.println(str);", "\n}", "\n}", "\n\u8fd9\u4e00\u9898\u6211\u60f3\u4ed6\u4e3b\u8981\u8003\u67e5 static\u8fd9\u4e2a\u5173\u952e\u5b57\uff0cchangestr\u662f\u4e2a\u9759\u6001\u7684\u65b9\u6cd5\uff08\u7c7b\u65b9\u6cd5\uff09\u90a3\u4e48str\u5e94\u8be5\u4e5f\u662f\u4e00\u4e2a\u9759\u6001\u6210\u5458\uff0c\u6240\u6709\u7684\u5bf9\u8c61\u90fd\u662f\u516c\u7528\u8fd9\u6837\u7684\u4e00\u4e2a\u6210\u5458\uff0c\u90a3\u4e48\u5bf9\u4ed6\u7684\u4fee\u6539\u5e94\u8be5\u662f\u53ef\u4ee5\u4fdd\u6301\u7684\u3002\u800c\u4e3a\u4ec0\u4e48\u6700\u540e\u7684\u7ed3\u679c\u5374\u662f\u521d\u59cb\u503c1234\uff0c\u6211\u6709\u70b9\u8ff7\u60d1", "\n\u7ec8\u4e8e\u660e\u767d\u4e86\uff1a\u6309\u503c\u4f20\u9012\u610f\u5473\u7740\u5f53\u5c06\u4e00\u4e2a\u53c2\u6570\u4f20\u9012\u7ed9\u4e00\u4e2a\u51fd\u6570\u65f6\uff0c\u51fd\u6570\u63a5\u6536\u7684\u662f\u539f\u59cb\u503c\u7684\u4e00\u4e2a\u526f\u672c\u3002\u56e0\u6b64\uff0c\u5982\u679c\u51fd\u6570\u4fee\u6539\u4e86\u8be5\u53c2\u6570\uff0c\u4ec5\u6539\u53d8\u526f\u672c\uff0c\u800c\u539f\u59cb\u503c\u4fdd\u6301\u4e0d\u53d8\u3002\u6309\u5f15\u7528\u4f20\u9012\u610f\u5473\u7740\u5f53\u5c06\u4e00\u4e2a\u53c2\u6570\u4f20\u9012\u7ed9\u4e00\u4e2a\u51fd\u6570\u65f6\uff0c\u51fd\u6570\u63a5\u6536\u7684\u662f\u539f\u59cb\u503c\u7684\u5185\u5b58\u5730\u5740\uff0c\u800c\u4e0d\u662f\u503c\u7684\u526f\u672c\u3002\u56e0\u6b64\uff0c\u5982\u679c\u51fd\u6570\u4fee\u6539\u4e86\u8be5\u53c2\u6570\uff0c\u8c03\u7528\u4ee3\u7801\u4e2d\u7684\u539f\u59cb\u503c\u4e5f\u968f\u4e4b\u6539\u53d8\u3002", "\n\u4e0d\u7ba1\u662f\u5728c/c++\u4e2d\u8fd8\u662f\u5728java\u51fd\u6570\u8c03\u7528\u90fd\u662f\u4f20\u503c\u8c03\u7528\uff0c.", "\n\u5f53\u53c2\u6570\u662f\u5bf9\u8c61\u7684\u65f6\u5019\uff0c\u4f20\u9012\u7684\u662f\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u8fd9\u4e2a\u548cc/c++\u4f20\u9012\u6307\u9488\u662f\u4e00\u4e2a\u9053\u7406\uff0c\u5728\u51fd\u6570\u4e2d\u6539\u53d8\u5f15\u7528\u672c\u8eab\uff0c\u4e0d\u4f1a\u6539\u53d8\u5f15\u7528\u6240\u6307\u5411\u7684\u5bf9\u8c61\uff0c\u800c\u5728QUESTION NO: 1\u4e2d\u53ea\u662f\u6539\u53d8\u4e86\u5f15\u7528\uff0c\u6240\u4ee5\u5728main\u51fd\u6570\u4e2d\u8f93\u51fa\u8fd8\u662f\u539f\u6765\u7684\u90a3\u4e2a\u503c\uff1a1234", "\n\u53c2\u6570\u662f\u5bf9\u8c61\u65f6\u4f20\u7684\u662f\u5730\u5740\u3002\u4f46str=\u201dwelcome\u201d;\u76f8\u5f53\u4e8estr=new String(\u201cwelcome\u201d);\uff0c\u6240\u4ee5\u539f\u5bf9\u8c61\u6ca1\u53d8\u3002", "\n\u53ef\u4ee5\u53c2\u8003\u4ee5\u4e0b\u4ee3\u7801\uff1a", "\npublic class Test {", "\npublic int ss = 999;", "\npublic Test(int s){", "\nss = s;", "\n}", "\npublic static void changeStr(Test t){", "\nt.ss = 888;", "\n}", "\npublic static void main(String[] args) {", "\nTest t = new Test(999);", "\nchangeStr(t);", "\nSystem.out.println(t.ss);", "\n}", "\n}", "public class Test {", "\npublic int ss = 999;", "\npublic Test(int s){", "\nss = s;", "\n}", "\npublic static void changeStr(Test t){", "\nt = new Test(888);", "\n}", "\npublic static void main(String[] args) {", "\nTest t = new Test(999);", "\nchangeStr(t);", "\nSystem.out.println(t.ss);", "\n}", "\n}", "\nQUESTION NO:2", "\n1. public class Test {", "\n2. static boolean foo(char c) {", "\n3. System.out.print(c);", "\n4. return true;", "\n5. }", "\n6. public static void main( String[] argv ) {", "\n7. int i =0;", "\n8. for ( foo(\u2018A\u2019); foo(\u2018B\u2019)&&(i\n9. i++ ;", "\n10. foo('D');", "\n12. }", "\n13. }", "\n14. }", "\nWhat is the result?", "\nA. ABDCBDCB", "\nB. ABCDABCD", "\nC. Compilation fails.", "\nD. An exception is thrown at runtime", "\u505a\u4e00\u4e0b\u8fd9\u4e2a\u5427\uff01\uff01", "\n\u7b2c\u4e00\u9898\u7ec8\u4e8e\u6e05\u695a\u4e86\u3002", "\u5bf9\u8c61\u662f\u4f20\u5f15\u7528\u7684\u3002\u4f46\u662f\u4e0b\u9762\u8fd8\u662f\u6709\u533a\u522b", "public class test6 {", "public int ss = 999;", "\npublic test6(int s){", "\nss = s;", "\n}", "\npublic static void changeStr(test6 t){", "\nt.ss = 888;", "\n}", "\npublic static void change(test6 t){", "t = new test6(222);", "\n}", "\npublic static void main(String[] args) {", "test6 t = new test6(999);", "\nchangeStr(t);", "\nSystem.out.println(t.ss);", "\nchange(t);", "\nSystem.out.println(t.ss);", "}", "\n}", "\nimport javax.swing.JOptionPane;", "\npublic class Test {", "\npublic void changeStr(String str){", "\nstr=\"welcome\";", "\n}", "\npublic void main(String[] args) {", "\nString str=\"1234\";", "\nstr=\"welcome\";", "\n//changeStr(str);", "\nJOptionPane.showMessageDialog(null,str);", "\n}", "\n}", "\u5982\u679c\u8fd9\u6837\u505a\u7684\u8bdd\u7ed3\u679c\u662fwelcome", "\u5728\u6211\u6211\u60f3\u8bf4\u7684\u662f\u5728C\u8bed\u8a00\u4ee5\u540e\u6240\u6709\u7684\u53c2\u6570\u4f20\u9012\u90fd\u662f\u503c\u4f20\u9012\uff0c\u95ee\u9898\u662f\u4f20\u7684\u503c\u662f\u662f\u4ec0\u4e48\uff0c\u800c\u6ca1\u6709\u4ec0\u4e48\u5f15\u7528\u4f20\u9012\u4e4b\u7c7b\u7684\u4e1c\u897f\u3002", "\u5173\u4e8e\u8f93\u51fa\u4e3a1234\u800c\u4e0d\u662fwelcome \u8fd8\u6709\u5f85\u8fdb\u4e00\u6b65\u5206\u6790\u3002", "\n\u6211\u73b0\u5728\u53bb\u4e0a\u8bfe\u4e86\uff0c\u56de\u6765\u518d\u548c\u5927\u5bb6\u7ec6\u8bf4", "\n\u5bf9\u7b2c\u4e00\u9898\u7684\u8be6\u7ec6\u5206\u6790\uff1a", "\nJava\u4e2d\u51fd\u6570\u53c2\u6570\u4f20\u9012\u662f\u503c\u4f20\u9012\uff0c\u5728C\u8bed\u8a00\u4ee5\u540e\u7684\u90fd\u662f\u8fd9\u6837\u7684\uff0c\u5173\u952e\u662f\u4f20\u8fdb\u6765\u7684\u503c\u662f\u4ec0\u4e48\uff08\u8fd9\u4e00\u70b9\u6211\u5728\u4e0a\u9762\u8bf4\u4e86\u5230\u4e00\u6b21\uff09\u3002", "\n\u2460\u5982\u679c\u53c2\u6570\u662f\u57fa\u7840\u7c7b\u578b\uff0c\u5982int\u578b\u7684\uff0c\u5219\u4f20\u8fdb\u6765\u7684\u662fint\u578b\u53d8\u91cf\u7684\u503c\uff0c\u8fd9\u4e2a\u503c\u653e\u5728\u5806\u91cc\u3002", "\n\u4e3e\u4e2a\u4f8b\u5b50\uff1a", "\nvoid fun(int i){};", "\nint i = 5;", "\nfun(i);", "\n\u4f20\u8fdbfun\u51fd\u6570\u7684\u662f5;", "\n\u2461\u5982\u679c\u53c2\u6570\u662f\u5f15\u7528\u7c7b\u578b\u3002\u5982String\u578b\u7684\uff0c\u5219\u4f20\u8fdb\u6765\u7684\u662fString\u578b\u53d8\u91cf\u7684\u503c\uff0c\u8fd9\u4e2a\u503c\u653e\u5728\u6808\u91cc\uff0c\u6b64\u503c\u662f\u8be5\u53d8\u91cf\u5c06\u8981\u6307\u5411\u7684\u5bf9\u8c61\u7684\u5730\u5740\u3002", "\n\u4e3e\u4e2a\u4f8b\u5b50\uff1a", "\nvoid fun(String str0){};", "\nString str = \"Hello\";", "\nfun(str);", "fun()\u65b9\u6cd5\u8c03\u7528\u65f6\u7b2c\u4e00\u4ef6\u4e8b\u5c31\u662f\uff0c\u505a\u4e86\u4e00\u4e2a\u8d4b\u503c\u64cd\u4f5c\uff1astr0 = str;", "\n\u8fd9\u4e2a\u64cd\u4f5c\u7684\u7ed3\u679c\u5c31\u662f\u5c06str\u53d8\u91cf\u7684\u503c\u4f20\u7ed9str0\u53d8\u91cf\u7684\u503c\uff0c\u4e5f\u5c31\u662f\u4f7f\u5f97str0\u4e5f\u6307\u5411str\u6240\u6307\u5411\u7684\u5bf9\u8c61\u3002\u5bf9str0\u6240\u6307\u5411\u7684\u5bf9\u8c61\u505a\u4fee\u6539\u64cd\u4f5c\uff0c\u4e5f\u5c31\u662f\u5bf9str\u6240\u6307\u7684\u5bf9\u8c61\u505a\u4fee\u6539\u3002", "\u6709\u4e86\u4e0a\u9762\u7684\u4e24\u70b9\uff0c\u6211\u60f3\u505a\u7b2c\u4e00\u4e2a\u9898\u76ee\u4e00\u5b9a\u662f\u6ca1\u4ec0\u4e48\u95ee\u9898\u7684\u4e86\uff1a", "\u8bf4\u660e\uff1a\u4e3a\u4e86\u65b9\u4fbf\u5206\u6790\u6211\u628achangeStr()\u65b9\u6cd5\u4e2d\u7684\u53c2\u6570\u540d\u6539\u6210\u4e86str0\u3002", "\n\u6539\u52a8\u540e\u7684\u4ee3\u7801\u5982\u4e0b\uff1a", "\n1.public class Test {", "\npublic static void changeStr(String str0){", "\nstr0=\"welcome\";", "\n}", "\npublic static void main(String[] args) {", "\nString str=\"1234\";", "\nchangeStr(str);", "\nSystem.out.println(str);", "\n}", "\n}", "\n\u54ce,\u7b2c\u4e00\u9898\u6ca1\u90a3\u4e48\u590d\u6742,\u90fd\u8bf4\u7684\u79bb\u8c31\u4e86,\u5177\u4f53\u8ba8\u8bba\u8bf7\u89c1TIJ\u7684\u9644\u5f55\u4e00 \u5173\u4e8e\u522b\u540d\u548c\u5f15\u7528\u90a3\u4e00\u7ae0.", "\u6211\u4eec\u4e0d\u4e89\u8bbaJAVA\u5230\u5e95\u662f\u4f20\u503c\u8fd8\u662f\u4f20\u5f15\u7528,\u56e0\u4e3a\u4e24\u8005\u67d0\u79cd\u610f\u4e49\u4e0a\u90fd\u662f\u6b63\u786e\u7684.\u4f20\u503c\u7684\u8ba4\u4e3a\u4f20\u9012\u5f15\u7528\u672c\u8eab\u662f\u4f20\u503c\u884c\u4e3a,\u8fd9\u6ca1\u9519,\u53ef\u6211\u4eec\u4e00\u822c\u628areference\u5f53\u6210\u4e86\u5bf9\u8c61,\u6240\u4ee5\u8bf4\u6210\u4f20\u5f15\u7528\u4e5f\u8bf4\u5f97\u8fc7\u53bb,\u6982\u5ff5\u5c31\u4e0d\u591a\u8bf4\u4e86.", "\n\u4e3a\u4ec0\u4e48str\u5728changeStr\u4e4b\u540e\u6ca1\u53d8?\u8fd9\u662f\u56e0\u4e3aJAVA\u5bf9\u6240\u6709\u7684\u5916\u8986\u7c7b\u6027(\u57fa\u672c\u7c7b\u578b\u7684\u5bf9\u5e94\u7c7b)\u662f\u91c7\u7528\u6240\u8c13\u7684\u6052\u5e38\u5bf9\u8c61(\u552f\u8bfb\u5bf9\u8c61,read- only),\u8fd9\u4e9b\u5916\u8986\u7c7b\u4e2d\u7684\u4efb\u4f55\u51fd\u6570\u884c\u4e3a\u7684\u8c03\u7528\u90fd\u4e0d\u4f1a\u6539\u53d8\u539f\u5bf9\u8c61,\u800c\u662f\u4ea7\u751f\u4e00\u4e2a\u65b0\u5bf9\u8c61,\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u5728\u9700\u8981\u52a8\u6001\u589e\u52a0String\u65f6\u8981\u7528 StringBuffer\u7684\u539f\u56e0.\u53ef\u5bf9\u4e8e\u6211\u4eec\u81ea\u5df1\u6240\u521b\u5efa\u7684\u5bf9\u8c61,\u5e76\u6ca1\u6709\u8fd9\u4e2a\"\u6052\u5e38\"\u7684\u7279\u6027\uff0c\u6240\u4ee5\u5728\u8fd9\u91cc\u6709\u4e2a\"\u522b\u540d\"\u73b0\u8c61\uff0c\u4e5f\u5c31\u662f\u51e0\u4e2a\u5f15\u7528\u540c\u65f6\u6307\u5411\u4e00\u4e2a\u5bf9\u8c61,\u4efb\u4f55\u4e00\u4e2a\u5f15\u7528\u5bf9\u5bf9\u8c61\u7684\u4fee\u6539\u90fd\u5c06\u5f71\u54cd\u5230\u5176\u4ed6.", "\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d,changeStr\u51fd\u6570\u7684\u884c\u4e3a\u5176\u5b9e\u4ea7\u751f\u4e86\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61,\u51fd\u6570\u5185\u7684str\u662f\u5c40\u90e8\u6027\u7684,\u5b83\u6307\u5411\u65b0\u7684\u5bf9\u8c61\uff0c\u53ef\u5bf9\u539f\u5bf9\u8c61\u6ca1\u6709\u4ea7\u751f\u4efb\u4f55\u5f71\u54cd.", "\u4e0d\u77e5\u9053\u6211\u7684\u89e3\u91ca\u6e05\u695a\u4e86,\u66f4\u5177\u4f53\u8ba8\u8bba\u8bf7\u89c1Thinking in Java", "\n\u5bf9\u7b2c\u4e00\u9898\u7684\u8be6\u7ec6\u5206\u6790\uff1a", "\nJava\u4e2d\u51fd\u6570\u53c2\u6570\u4f20\u9012\u662f\u503c\u4f20\u9012\uff0c\u5728C\u8bed\u8a00\u4ee5\u540e\u7684\u90fd\u662f\u8fd9\u6837\u7684\uff0c\u5173\u952e\u662f\u4f20\u8fdb\u6765\u7684\u503c\u662f\u4ec0\u4e48\uff08\u8fd9\u4e00\u70b9\u6211\u5728\u4e0a\u9762\u8bf4\u4e86\u5230\u4e00\u6b21\uff09\u3002", "\n\u2460\u5982\u679c\u53c2\u6570\u662f\u57fa\u7840\u7c7b\u578b\uff0c\u5982int\u578b\u7684\uff0c\u5219\u4f20\u8fdb\u6765\u7684\u662fint\u578b\u53d8\u91cf\u7684\u503c\uff0c\u8fd9\u4e2a\u503c\u653e\u5728\u5806\u91cc\u3002", "\n\u4e3e\u4e2a\u4f8b\u5b50\uff1a", "\nvoid fun(int i){};", "\nint i = 5;", "\nfun(i);", "\n\u4f20\u8fdbfun\u51fd\u6570\u7684\u662f5;", "\n\u2461\u5982\u679c\u53c2\u6570\u662f\u5f15\u7528\u7c7b\u578b\u3002\u5982String\u578b\u7684\uff0c\u5219\u4f20\u8fdb\u6765\u7684\u662fString\u578b\u53d8\u91cf\u7684\u503c\uff0c\u8fd9\u4e2a\u503c\u653e\u5728\u6808\u91cc\uff0c\u6b64\u503c\u662f\u8be5\u53d8\u91cf\u5c06\u8981\u6307\u5411\u7684\u5bf9\u8c61\u7684\u5730\u5740\u3002", "\n\u4e3e\u4e2a\u4f8b\u5b50\uff1a", "\nvoid fun(String str0){};", "\nString str = \"Hello\";", "\nfun(str);", "fun()\u65b9\u6cd5\u8c03\u7528\u65f6\u7b2c\u4e00\u4ef6\u4e8b\u5c31\u662f\uff0c\u505a\u4e86\u4e00\u4e2a\u8d4b\u503c\u64cd\u4f5c\uff1astr0 = str;", "\n\u8fd9\u4e2a\u64cd\u4f5c\u7684\u7ed3\u679c\u5c31\u662f\u5c06str\u53d8\u91cf\u7684\u503c\u4f20\u7ed9str0\u53d8\u91cf\u7684\u503c\uff0c\u4e5f\u5c31\u662f\u4f7f\u5f97str0\u4e5f\u6307\u5411str\u6240\u6307\u5411\u7684\u5bf9\u8c61\u3002\u5bf9str0\u6240\u6307\u5411\u7684\u5bf9\u8c61\u505a\u4fee\u6539\u64cd\u4f5c\uff0c\u4e5f\u5c31\u662f\u5bf9str\u6240\u6307\u7684\u5bf9\u8c61\u505a\u4fee\u6539\u3002", "\u6709\u4e86\u4e0a\u9762\u7684\u4e24\u70b9\uff0c\u6211\u60f3\u505a\u7b2c\u4e00\u4e2a\u9898\u76ee\u4e00\u5b9a\u662f\u6ca1\u4ec0\u4e48\u95ee\u9898\u7684\u4e86\uff1a", "\u8bf4\u660e\uff1a\u4e3a\u4e86\u65b9\u4fbf\u5206\u6790\u6211\u628achangeStr()\u65b9\u6cd5\u4e2d\u7684\u53c2\u6570\u540d\u6539\u6210\u4e86str0\u3002", "\n\u6539\u52a8\u540e\u7684\u4ee3\u7801\u5982\u4e0b\uff1a", "\n1.public class Test {", "\n2. public static void changeStr(String str0){", "\n3. str0=\"welcome\";", "\n4. }", "\n5. public static void main(String[] args) {", "\n6. String str=\"1234\";", "\n7. changeStr(str);", "\n8. System.out.println(str);", "\n9. }", "\n10.}", "\u7b2c7\u884c\u4ee3\u7801\u6267\u884c\u8fc7\u7a0b\u5982\u4e0b\uff1a", "\n\u5c06str\u7684\u503c\u8d4b\u7ed9str0\uff0c\u4f7f\u5f97str0\u548cstr\u6307\u5411\u540c\u4e00\u4e2aString\u7c7b\u5bf9\u8c611234", "\n\u800c\u5728changeStr()\u65b9\u6cd5\u4e2d\u7b2c3\u884c\u4ee3\u7801\u6267\u884c\u7684\u7ed3\u679c\u662f\u5c06str0\u503c\uff08\u4e5f\u5c31\u662f\u5bf9\u8c61\u7684\u5730\u5740\uff09\u505a\u4e86\u4fee\u6539\uff0cstr0\u7684\u503c\u4e3aString\u7c7b\u5bf9\u8c61welcome\u7684\u5730\u5740\uff0c\u8fd9\u6837\u4e00\u6765\uff0c\u4f7f\u5f97str\u548cstr0\u6240\u6307\u5411\u7684\u5bf9\u8c61\u4e0d\u518d\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\u4e86\uff0c\u800c\u4e14str\u7684\u503c\u5e76\u6ca1\u6709\u6539\u53d8\uff0c\u4e5f\u5c31\u662f\u8bf4str\u8fd8\u662f\u6307\u5411String\u7c7b\u5bf9\u8c611234\u7684\u3002", "\u7efc\u4e0a\u6240\u8ff0\uff0c\u7a0b\u5e8f\u6700\u7ec8\u7684\u7ed3\u679c\u4e00\u5b9a\u662f1234\u3002", "\u8865\u5145\uff1a", "\nziyongkun \u5728 2006-05-10 10:08:00 \u53d1\u7684\u8d34\u5b50\u91cc\u8bf4\u7684\u4e0d\u662f\u5f88\u5bf9\uff0c\u5e76\u4e0d\u662f\u4e00\u4e2a\u526f\u672c\u7684\u95ee\u9898\uff0c\u5b83\u4eec\u4f1a\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61\u7684\u3002", "\nQUESTION NO:2", "\n1. public class Test {", "\n2. static boolean foo(char c) {", "\n3. System.out.print(c);", "\n4. return true;", "\n5. }", "\n6. public static void main( String[] argv ) {", "\n7. int i =0;", "\n8. for ( foo('A'); foo('B')&&(i\n9. i++ ;", "\n10. foo('D');", "\n12. }", "\n13. }", "\n14. }", "\n========================================================================", "\n\u8003\u5bdf\u7684\u662ffor\u8bed\u53e5\u7684\u6267\u884c\u8fc7\u7a0b\uff1a", "\nfor(1;2;3)", "\n\u8fc7\u7a0b\u5982\u4e0b\uff1a", "\n1\uff1b", "\n2\uff1b", "\n3\uff1b", "\n2\uff1b", "\n.", "\n.", "\n.", "\n\u5f53i\n4\u3001SQL\u95ee\u7b54\u9898", "\nSELECT * FROM TABLE", "\n\u548c", "\nSELECT * FROM TABLE", "\nWHERE NAME LIKE '%%' AND ADDR LIKE '%%'", "\nAND (1_ADDR LIKE '%%' OR 2_ADDR LIKE '%%'", "\nOR 3_ADDR LIKE '%%' OR 4_ADDR LIKE '%%' )", "\n\u7684\u68c0\u7d22\u7ed3\u679c\u4e3a\u4f55\u4e0d\u540c\uff1f", "\n=========================================================", "\n\u524d\u8005\u68c0\u7d22\u5168\u90e8\uff0c\u540e\u8005\u6709\u4e09\u79cd\u60c5\u51b5\u68c0\u7d22\u4e0d\u51fa\uff1aNAME\uff1dnull\u6216ADDR=null\u62161_ADDR LIKE 2_ADDR 3_ADDR 4_ADDR\u5176\u4e00\u4e3anull.", "\n4\u3001SQL\u95ee\u7b54\u9898", "\nSELECT * FROM TABLE", "\n\u548c", "\nSELECT * FROM TABLE", "\nWHERE NAME LIKE '%%' AND ADDR LIKE '%%'", "\nAND (1_ADDR LIKE '%%' OR 2_ADDR LIKE '%%'", "\nOR 3_ADDR LIKE '%%' OR 4_ADDR LIKE '%%' )", "\n\u7684\u68c0\u7d22\u7ed3\u679c\u4e3a\u4f55\u4e0d\u540c\uff1f", "\u7b54\uff1a\u524d\u8005\u68c0\u7d22\u6240\u6709\u8bb0\u5f55\uff0c\u540e\u8005\u53ea\u80fd\u68c0\u7d22\u51fa NAME \u548cADDR\u4e2d\u975eNull\u7684\u8bb0\u5f55\u3002", "5\u3001SQL\u95ee\u7b54\u9898", "\n\u8868\u7ed3\u6784\uff1a", "\n1\u3001 \u8868\u540d\uff1ag_cardapply", "\n\u5b57\u6bb5(\u5b57\u6bb5\u540d/\u7c7b\u578b/\u957f\u5ea6)\uff1a", "\ng_applyno varchar 8\uff1b//\u7533\u8bf7\u5355\u53f7\uff08\u5173\u952e\u5b57\uff09", "\ng_applydate bigint 8\uff1b//\u7533\u8bf7\u65e5\u671f", "\ng_state varchar 2\uff1b//\u7533\u8bf7\u72b6\u6001", "\n2\u3001 \u8868\u540d\uff1ag_cardapplydetail", "\n\u5b57\u6bb5(\u5b57\u6bb5\u540d/\u7c7b\u578b/\u957f\u5ea6)\uff1a", "\ng_applyno varchar 8\uff1b//\u7533\u8bf7\u5355\u53f7\uff08\u5173\u952e\u5b57\uff09", "\ng_name varchar 30\uff1b//\u7533\u8bf7\u4eba\u59d3\u540d", "\ng_idcard varchar 18\uff1b//\u7533\u8bf7\u4eba\u8eab\u4efd\u8bc1\u53f7", "\ng_state varchar 2\uff1b//\u7533\u8bf7\u72b6\u6001", "\n\u5176\u4e2d\uff0c\u4e24\u4e2a\u8868\u7684\u5173\u8054\u5b57\u6bb5\u4e3a\u7533\u8bf7\u5355\u53f7\u3002", "\n\u9898\u76ee\uff1a", "\n1\u3001 \u67e5\u8be2\u8eab\u4efd\u8bc1\u53f7\u7801\u4e3a440401430103082\u7684\u7533\u8bf7\u65e5\u671f", "\nselect A.g_applydate", "\nfrom g_cardapply A inner join g_cardapplydetail B on A.g_applyno = B.g_applyno", "\nwhere B.g_idCard = '440401430103082'", "2\u3001 \u67e5\u8be2\u540c\u4e00\u4e2a\u8eab\u4efd\u8bc1\u53f7\u7801\u6709\u4e24\u6761\u4ee5\u4e0a\u8bb0\u5f55\u7684\u8eab\u4efd\u8bc1\u53f7\u7801\u53ca\u8bb0\u5f55\u4e2a\u6570", "\nselect g_idCard,count(*) as Cnt from g_cardapplydetail", "\ngroup by g_idcard", "\nhaving count(*) > 1", "3\u3001 \u5c06\u8eab\u4efd\u8bc1\u53f7\u7801\u4e3a440401430103082\u7684\u8bb0\u5f55\u5728\u4e24\u4e2a\u8868\u4e2d\u7684\u7533\u8bf7\u72b6\u6001\u5747\u6539\u4e3a07", "\nupdate g_cardapplydetail set g_state = \u201907\u2032", "\nwhere g_idcard = \u2019440401430103082\u2032", "update A set g_state = \u201907\u2032", "\nfrom g_cardapply A inner join g_cardapplydetail B on A.g_applyno = B.g_applyno", "\nwhere B.g_idcard = \u2019440401430103082\u2032", "4\u3001 \u5220\u9664g_cardapplydetail\u8868\u4e2d\u6240\u6709\u59d3\u674e\u7684\u8bb0\u5f55", "\ndelete from g_cardapplydetail", "\nwhere g_name like \u2018\u674e%\u2019", "\n3\u3001 \u5c06\u8eab\u4efd\u8bc1\u53f7\u7801\u4e3a440401430103082\u7684\u8bb0\u5f55\u5728\u4e24\u4e2a\u8868\u4e2d\u7684\u7533\u8bf7\u72b6\u6001\u5747\u6539\u4e3a07", "\nupdate g_cardapplydetail set g_state = \u201907\u2032", "\nwhere g_idcard = \u2019440401430103082\u2032", "update A set g_state = \u201907\u2032", "\nfrom g_cardapply A inner join g_cardapplydetail B on A.g_applyno = B.g_applyno", "\nwhere B.g_idcard = \u2019440401430103082\u2032", "\n5\u3001SQL\u95ee\u7b54\u9898:", "\n/*Select g_cardapply. g_applydate", "\nFrom g_cardapply, g_cardapplydetail", "\nWhere g_cardapply. g_applyno=g_cardapplydetail. g_applyno", "\nAnd g_cardapplydetail.g_idcard=\u2019440401430103082\u2032*/", "/*Select *From (select count(*) g_count , g_idcard", "\nFrom g_cardapplydetail", "\nGroup by g_idcard ) a", "\nWhere a. g_count >= 2*/", "/*Update g_cardapply", "\nset g_state=\u201907\u2032", "\nwhere g_applyno in (select distinct g_applyno", "\nfrom g_cardapplydetail", "\nwhere g_idcard =\u2019440401430103082\u2032)", "\nupdate g_cardapplydetail", "\nset g_state=\u201907\u2032", "\nwhere g_idcard=\u2019440401430103082\u2032 */", "/*Delete from g_cardapplydetail", "\nWhere g_name like \u2018\u674e%\u2019*/", "\n\u901a\u8fc7\u6d4b\u8bd5", "\nPS:\u5076GF\u505a\u7684\uff0c\u81ea\u5df1\u5148\u6c57\u4e00\u4e0b", "\u4e00\u822c\u5206\u7c7b :: \u8bc4\u8bba (261) :: \u9759\u6001\u94fe\u63a5\u7f51\u5740 :: \u5f15\u7528 (0)", "\n\u91d1\u5c71\u516c\u53f8\u51e0\u9053\u9762\u8bd5\u9898", "\nsilver6 | 22 \u56db\u6708, 2006 10:43", "\n2. What are three ways in which a thread can enter the waiting state?", "\u89e3\u6790\uff1a \u64cd\u4f5c\u7cfb\u7edf\u95ee\u9898", "4. In C++, there\u2019re four type of Casting Operators, please enumerate and explain them especially the difference.", "\u89e3\u6790\uff1a C++\u7c7b\u578b\u8f6c\u6362\u95ee\u9898", "\n\u7b54\u6848\uff1a", "7 \u4ee5\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff0c\u5982\u4f55\u4fee\u6539\uff1f", "\n#include ", "void print(vector", "int main()", "\n{", "vector", "for(itor=array.begin(); itor!=array.end(); )", "\n{", "\nif(6==*itor)", "\n{", "\nitor2=itor;", "array.erase(itor2);", "\n}", "\nitor++; ", "}", "print(array);", "\nreturn 0;", "}", "\nvoid print(vector", "int main()", "\n{", "vector", "//\u5220\u9664array\u6570\u7ec4\u4e2d\u6240\u6709\u76846", "\narray.erase( remove( array.begin(), array.end(), 6 ) , array.end() );", "print(array);", "\nreturn 0;", "} ", "void print(const vector", "int main()", "\n{", "vector", "array.push_back(1);", "array.push_back(6);", "\narray.push_back(6);", "\narray.push_back(6);", "\narray.push_back(6);", "\narray.push_back(6);", "array.push_back(3);", "\narray.push_back(9);", "\narray.push_back(8);", "\narray.push_back(5);", "//\u00c9\u00be\u00b3\u00fdarray\u00ca\u00fd\u00d7\u00e9\u00d6\u00d0\u00cb\u00f9\u00d3\u00d0\u00b5\u00c46", "\nvector", "for(itor=array.begin(); itor!=array.end();++itor )", "\n{", "\nif(6==*itor)", "\n{", "itor=array.erase(itor);", "\n\u2013itor;", "\n} ", "}", "cout \nfor(itor=array.begin(); itor!=array.end();++itor )", "\n{", "\ncout\n}", "system(\"pause\");", "return 0;", "}", "\n2. What are three ways in which a thread can enter the waiting state?", "\n\u5c1d\u8bd5\u7b54\u4e00\u4e0b", "\nCPU\u8c03\u5ea6\u7ed9\u4f18\u5148\u7ea7\u66f4\u9ad8\u7684thread\uff0c\u539f\u5148thread\u8fdb\u5165waiting", "\n\u963b\u585e\u7684thread\u83b7\u5f97\u8d44\u6e90\u6216\u8005\u4fe1\u53f7\uff0c\u8fdb\u5165waiting", "\n\u8fd8\u6709\u4ec0\u4e48", "\nstatic_cast \u6570\u5236\u8f6c\u6362", "\ndynamic_cast \u7528\u4e8e\u6267\u884c\u5411\u4e0b\u8f6c\u6362\u548c\u5728\u7ee7\u627f\u4e4b\u95f4\u7684\u8f6c\u6362", "\nconst_cast \u53bb\u6389const", "\nreinterpret_cast \u7528\u4e8e\u6267\u884c\u5e76\u4e0d\u5b89\u5168\u7684orimplmentation_dependent\u7c7b\u578b\u8f6c\u6362", "\n\u6211\u7ed9\u4f60\u4e00\u4e2a\u5b8c\u6574\u7684\u89e3\u91ca\uff1a", "\n\u6267\u884citor=array.erase(itor);\u8fd9\u53e5\u8bdd\u540e\uff0citor\u4e0d\u4f1a\u79fb\u52a8\uff0c\u800c\u53ea\u662f\u628a\u5220\u9664\u7684\u6570\u540e\u9762\u7684\u6570\u90fd\u5f80\u524d\u79fb\u4e00\u4f4d\uff0c\u6240\u4ee5\u5220\u9664\u4e86\u7b2c\u4e00\u4e2a6\u540e\uff0c\u6307\u9488\u6307\u5411\u7b2c2\u4e2a6\uff0c\u7136\u540e\u5728\u6765\u4e2aitor++\uff0c\u6307\u9488\u5c31\u6307\u5411array.end()\u4e86\uff0c\u7ed9\u4f60\u753b\u4e2a\u8349\u56fe\uff1a", "\n1 6 6 3 array.end() //\u6700\u5f00\u59cb\u6307\u9488itor\u6307\u5411\u7b2c\u4e00\u4e2a6\uff1b", "\n1 6 3 array.end() //\u5220\u9664\u7b2c\u4e00\u4e2a6\u540e\uff0c\u6307\u5411\u7b2c\u4e8c\u4e2a6", "\n1 6 3 array.end() //itor++\u540e\uff0c\u5c31\u6307\u54113\u4e86\uff0c\u6240\u4ee5\u4e0d\u80fd\u5220\u9664", "\u4e00\u822c\u5206\u7c7b :: \u8bc4\u8bba (0) :: \u9759\u6001\u94fe\u63a5\u7f51\u5740 :: \u5f15\u7528 (0)", "\n\u5229\u7528Visual Basic\u5f00\u53d1SAP\u63a5\u53e3\u7a0b\u5e8f\u521d\u63a2", "\nsilver6 | 17 \u56db\u6708, 2006 08:37", "\nSAP R/3\u7cfb\u7edf\u662f\u4e1a\u754c\u6700\u5148\u8fdb\u3001\u6700\u7a33\u5b9a\u7684ERP\u7cfb\u7edf\uff0c\u56fd\u9645\u548c\u56fd\u5185\u5927\u578b\u4f01\u4e1a\u91c7\u7528\u8be5\u7cfb\u7edf\u7684\u6bd4\u4f8b\u9065\u9065\u9886\u5148\u4e8e\u5176\u5b83ERP\u7cfb\u7edf\u7684\u603b\u548c\u3002SAP R/3\u5185\u5efa\u4e86\u4e8c\u6b21\u5f00\u53d1\u5e73\u53f0\uff0c\u4f7f\u7528\u7684\u5f00\u53d1\u8bed\u8a00\u53eb\u505aABAP\uff0c\u662f\u4e00\u79cd\u7c7b\u4f3c\u4e8eCOBOL\u7684\u7f16\u7a0b\u8bed\u8a00\u3002ABAP\u5728\u62a5\u8868\u8f93\u51fa\u65b9\u9762\u529f\u80fd\u76f8\u5bf9\u8f83\u5f31\uff08\u53ea\u80fd\u6309\u884c\u6253\u5370\u5728\u5c4f\u5e55\u4e0a\u6216\u8005\u5bfc\u51fa\u5230Excel\u4e2d\u5904\u7406\uff09\uff0c\u6240\u4ee5\u65e5\u5e38\u5de5\u4f5c\u4e2d\u7ecf\u5e38\u9700\u8981\u5728\u5916\u90e8\u5f00\u53d1\u7a0b\u5e8f\u3002\u901a\u8fc7\u7a0b\u5e8f\u63a5\u53e3\u81ea\u52a8\u8bfb\u53d6SAP R/3\u7684\u6570\u636e\u8868\uff08\u89c6\u56fe\uff09\uff0c\u5728\u5916\u90e8\u8fdb\u884c\u5904\u7406\u548c\u5229\u7528\u6c34\u6676\u62a5\u8868\u7b49\u5de5\u5177\u751f\u6210\u7b26\u5408\u4e2d\u56fd\u4eba\u4e60\u60ef\u7684\u62a5\u8868\u6837\u5f0f\u3002", "\u3000\u3000SAP R/3\u7684\u63a5\u53e3\u65b9\u5f0f\u4e3b\u8981\u6709RFC\u3001IDOC\u3001BAPI\u4e09\u79cd\uff0c\u672c\u6587\u8981\u4ecb\u7ecd\u7684\u662f\u76f8\u5bf9\u6bd4\u8f83\u7b80\u5355\u7684RFC\uff08Romote Function Call\uff0c\u8fdc\u7a0b\u51fd\u6570\u8c03\u7528\uff09\u3002SAP\u7cfb\u7edfRFC\u8c03\u7528\u7684\u539f\u7406\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u6709\u4e00\u4e9b\u7c7b\u4f3c\u4e8e\u4e09\u5c42\u6784\u67b6\u7684C/S\u7cfb\u7edf\uff0c\u7b2c\u4e09\u65b9\u7684\u5ba2\u6237\u7a0b\u5e8f\u901a\u8fc7\u63a5\u53e3\u8c03\u7528SAP\u5185\u90e8\u7684\u6807\u51c6\u6216\u81ea\u5b9a\u4e49\u51fd\u6570\uff0c\u83b7\u5f97\u51fd\u6570\u8fd4\u56de\u7684\u6570\u636e\u8fdb\u884c\u5904\u7406\u540e\u663e\u793a\u6216\u6253\u5370\u3002\u4e0b\u9762\u662fRFC\u8c03\u7528\u7684\u6a21\u578b\uff1a ", "\u3000\u3000\u672c\u6587\u4e3b\u8981\u4e0d\u662f\u8ba8\u8bbaSAP R/3\u51fd\u6570\u7684\u5f00\u53d1\uff0c\u56e0\u4e3a\u4f7f\u7528SAP\u7684\u516c\u53f8\u4e00\u822c\u90fd\u6709\u4e13\u95e8\u7684ABAP\u5f00\u53d1\u4eba\u5458\u3002\u5927\u5bb6\u5982\u679c\u6709\u673a\u4f1a\u63a5\u89e6ABAP\u5e73\u53f0\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e8b\u52a1\u4ee3\u7801SE37\u8fdb\u5165ABAP\u5f00\u53d1\u5e73\u53f0\u7684\"\u51fd\u6570\u7f16\u5236\u5668\"\u8fdb\u884c\u51fd\u6570\u5f00\u53d1\u6d4b\u8bd5\u3002\u5982\u56fe\uff1a", "\u3000\u3000\u4e0b\u9762\u4e3b\u8981\u4ee5VB\u4e3a\u4f8b\u4ecb\u7ecd\u4e00\u4e0bSAP\u63a5\u53e3RFC\u7684\u5f00\u53d1\u601d\u8def\u3002\u5728SAP\u5ba2\u6237\u7aefSAP Gui Client\u5b89\u88c5\u7684\u65f6\u5019\uff0c\u6ce8\u610f\u9009\u62e9\u5b89\u88c5\u9644\u5e26\u7684SDK\u5305\uff08\u6700\u4fdd\u9669\u662f\u9009\u62e9\u5b8c\u5168\u5b89\u88c5\uff09\u3002RFC\u63a5\u53e3\u7a0b\u5e8f\u5f00\u53d1\uff0c\u4e3b\u8981\u7528\u7684\u662f\"SAP.Functions\"\u8fd9\u4e2a\u63a7\u4ef6\uff0c\u901a\u8fc7\u63a7\u4ef6\u5728\u5916\u90e8\u7a0b\u5e8f\u6a21\u62dfSAP Gui Client\u7684\u7528\u6237\u767b\u5f55\u548c\u51fd\u6570\u8c03\u7528\uff0c\u7136\u540e\u8fd4\u56de\u51fd\u6570\u7684\u503c\u3002\u8bf7\u770b\u4e0b\u9762\u7684\u7a0b\u5e8f\u7247\u6bb5\u548c\u91cd\u70b9\u6ce8\u89e3\uff08\u5c24\u5176\u662ftest_Click()\uff09\uff1a", "\nPrivate Sub Command1_Click()", "\n\u3000' \u5b9a\u4e49R/3\u7528\u6237\u540d\u548c\u5bc6\u7801\u53d8\u91cf\uff08\u7528\u6237\u540d\u5e94\u7531SAP\u7ba1\u7406\u5458\u5f00\u8fd0\u884c\u51fd\u6570\u7684\u6743\u9650\uff09", "\n\u3000Dim logname As String * 22, password As String * 22", "\n\u3000Call logonr3(logname, password) ' \u8c03\u7528SAP\u767b\u5f55\u754c\u9762\u7a0b\u5e8f", "\n\u3000If logflag Then ' \u8c03\u7528\u751f\u4ea7\u3001\u5f00\u53d1\u7cfb\u7edf\u5f00\u5173", "\n\u3000\u3000StatusBar1.Visible = True", "\n\u3000\u3000StatusBar1.SimpleText = \"\u6b63\u5728\u767b\u5f55SAP R/3\u7cfb\u7edf...\"", "\n\u3000\u3000Dim R3AppServer As String, R3Client As String, R3SystemNo As String", "\n\u3000\u3000If Form2.opPRD.Value Then", "\n\u3000\u3000\u3000' \u4ee5\u4e0b\u670d\u52a1\u5668\u53c2\u6570\u8bf7\u6839\u636e\u5ba2\u6237\u914d\u7f6e\u60c5\u51b5\u66f4\u6539", "\n\u3000\u3000\u3000R3AppServer = \"10.3.1.4\" ' \u751f\u4ea7\u7cfb\u7edf\u670d\u52a1\u5668IP", "\n\u3000\u3000\u3000R3Client = \"800\"\u3000\u3000\u3000\u3000\u3000'\u751f\u4ea7\u7cfb\u7edf\u96c6\u56e2\u4ee3\u7801", "\n\u3000\u3000\u3000R3SystemNo = \"00\" '\u751f\u4ea7\u7cfb\u7edf\u53f7", "\n\u3000\u3000Else", "\n\u3000\u3000\u3000R3AppServer = \"10.3.3.1\" ' \u5f00\u53d1\u7cfb\u7edf\u670d\u52a1\u5668IP", "\n\u3000\u3000\u3000R3Client = \"101\"", "\n\u3000\u3000\u3000R3SystemNo = \"00\"", "\n\u3000\u3000End If", "\n\u3000\u3000Unload Form2 ' \u91ca\u653e Form2 \uff0c \u6240\u6709\u63a7\u4ef6\u53ca\u503c\u4e0d\u53ef\u7528", "\n\u3000\u3000Set Functions = CreateObject(\"Sap.Functions\") ' \u521b\u5efaRFC\u7684\u672c\u5730\u5bf9\u8c61", "\n\u3000\u3000Set Connect = Functions.Connection ' \u8bbe\u7f6e\u8fde\u63a5", "\n\u3000\u3000Connect.ApplicationServer = R3AppServer ' \u8d4b\u503c\u670d\u52a1\u5668IP", "\n\u3000\u3000Connect.Client = R3Client ' \u8d4b\u503cSAP\u96c6\u56e2\u4ee3\u7801", "\n\u3000\u3000Connect.Language = \"ZH\" ' \u7f6eSAP\u7cfb\u7edf\u754c\u9762\u4e2d\u6587", "\n\u3000\u3000Connect.User = Trim(logname) ' \u8d4b\u503cSAP\u767b\u5f55\u7528\u6237\u540d", "\n\u3000\u3000Connect.password = Trim(password) ' \u8d4b\u503cSAP\u767b\u5f55\u7528\u6237\u5bc6\u7801", "\n\u3000\u3000Connect.SystemNumber = R3SystemNo ' \u8d4b\u503cSAP\u7cfb\u7edf\u53f7", "\n\u3000\u3000If Not Connect.Logon(0, True) Then ' \u8f6f\u4ef6\u767b\u5f55SAP\u5e76\u5224\u65ad", "\n\u3000\u3000\u3000MsgBox \"\u767b\u5f55SAP R/3\u5931\u8d25\uff0c\u8bf7\u91cd\u65b0\u767b\u5f55!\", vbOKOnly + vbExclamation, \"\u7cfb\u7edf\u63d0\u793a\"", "\n\u3000\u3000\u3000Command1.SetFocus", "\n\u3000\u3000Else ' \u767b\u5f55SAP\u6210\u529f", "\n\u3000\u3000\u3000Command1.Enabled = False", "\n\u3000\u3000\u3000Command2.Enabled = True", "\n\u3000\u3000\u3000test.Enabled = True", "\n\u3000\u3000End If", "\u3000\u3000StatusBar1.SimpleText = \"\"", "\n\u3000\u3000StatusBar1.Visible = False", "\n\u3000End If", "\nEnd Sub", "Private Sub Command2_Click() ' \u6ce8\u9500SAP\u767b\u5f55", "\n\u3000Connect.LogOff", "\n\u3000Command2.Enabled = False", "\n\u3000Command1.Enabled = True", "\n\u3000test.Enabled = False", "\nEnd Sub", "Private Sub Command3_Click() ' \u9000\u51faSAP\u63a5\u53e3\u6f14\u793a\u7a0b\u5e8f", "\n\u3000If Form1.Command2.Enabled Then", "\n\u3000\u3000MsgBox \"\u9000\u51fa\u524d\u8bf7\u65ad\u5f00SAP R/3\u7cfb\u7edf!\", vbOKOnly + vbInformation, \"\u7cfb\u7edf\u63d0\u793a\"", "\n\u3000Else", "\n\u3000\u3000End", "\n\u3000End If", "\nEnd Sub", "Private Sub Form_Load()", "\n\u3000Command2.Enabled = False", "\n\u3000test.Enabled = False", "\n\u3000logoflag = False", "\nEnd Sub", "Private Sub test_Click() ' SAP RFC\u8fdc\u7a0b\u8c03\u7528\u5904\u7406\u4e3b\u6f14\u793a", "\n\u3000Dim GetCustomers As Object", "\n\u3000Dim Customers As Object", "\n\u3000Dim i As Integer", "\n\u3000 ' \u901a\u8fc7RFC\u63a5\u53e3\u8fdc\u7a0b\u8fd0\u884cSAP\u5185\u90e8\u51fd\u6570RFC_CUSTOMER_GET", "\n\u3000' \u8d4b\u8981\u8c03\u7528\u7684SAP\u5185\u5efa\u51fd\u6570\u540d", "\n\u3000Set GetCustomers = Functions.Add(\"RFC_CUSTOMER_GET\") ", "\u3000GetCustomers.Exports(\"KUNNR\") = \"0000000103\" ' \u5411\u51fd\u6570\u5165\u53e3\u8d4b\u503c\uff08\u5ba2\u6237\u4ee3\u7801\uff09", "\n\u3000' \u5411\u51fd\u6570\u5165\u53e3\u8d4b\u67e5\u8be2\u8868\u540d\u79f0", "\n\u3000Set Customers = GetCustomers.Tables(\"CUSTOMER_T\") ", "\u3000If GetCustomers.Call Then ' \u8c03\u7528\u6210\u529f\u904d\u5386\u663e\u793a\u5ba2\u6237\u6240\u6709\u4fe1\u606f\u6761\u76ee", "\n\u3000\u3000For i = 1 To Customers.rowcount", "\n\u3000\u3000\u3000MsgBox Customers(i, \"KUNNR\")", "\n\u3000\u3000Next i", "\n\u3000Else", "\n\u3000\u3000MsgBox \" \u641c\u7d22\u51fa\u9519! \u51fa\u9519\u4fe1\u606f: \" + GetCustomers.Exception", "\n\u3000End If", "\nEnd Sub", "\n\u3000\u3000SAP\u7684RFC\u8c03\u7528\u662f\u5176\u63a5\u53e3\u6280\u672f\u4e2d\u6700\u7b80\u5355\u548c\u6613\u7528\u7684\u4e00\u79cd\u65b9\u5f0f\uff0c\u8be5\u65b9\u5f0f\u5f00\u53d1\u6bd4\u8f83\u7b80\u4fbf\uff0c\u7279\u522b\u9002\u5408\u4e8e\u5916\u90e8\u62a5\u8868\u5f00\u53d1\uff0c\u4f46\u5bf9\u4e8e\u5927\u6570\u636e\u91cf\u7684\u67e5\u8be2\u6548\u7387\u76f8\u5bf9\u8f83\u4f4e\u3002\u5927\u5bb6\u5728\u719f\u7ec3\u638c\u63e1\u540e\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5b66\u4e60\u9ad8\u7ea7\u7684IDOC\u548cBAPI\u63a5\u53e3\u5f00\u53d1\u6280\u672f\u3002", "\u4e00\u822c\u5206\u7c7b :: \u8bc4\u8bba (299) :: \u9759\u6001\u94fe\u63a5\u7f51\u5740 :: \u5f15\u7528 (0)", "\n\u9762\u8bd5\u4e0e\u88ab\u9762\u8bd5\u603b\u7ed3", "\nsilver6 | 17 \u56db\u6708, 2006 08:34", "\n\u6211\u4ece\u4e8b\u6280\u672f\u5de5\u4f5c\uff0c", "\n\u8fd9\u51e0\u5e74\u7684\u9762\u8bd5\u4e0e\u88ab\u9762\u8bd5\u603b\u7ed3", "\n\u5148\u8bf4\u6211\u53bb\u88ab\u9762\u8bd5\u7684\u7ecf\u9a8c\u5427\u3002", "\n\u56de\u7b54\u6e05\u695a\u4e862\u4e2a\u95ee\u9898\uff0c\u5c31\u80fd\u987a\u5229\u8fc7\u5173\u4e86\u3002", "\n1\u3002\u4e3a\u4ec0\u4e48\u8981\u79bb\u5f00\u4e0a\u4e00\u5bb6\u516c\u53f8\u3002", "\n2\u3002\u516c\u53f8\u4e3a\u4ec0\u4e48\u8981\u96c7\u4f63\u4f60\u3002", "\n\u95ee\u7b2c\u4e00\u4e2a\u95ee\u9898\u7684\u662fhr\uff08\u6216\u8001\u677f\uff09,\u5475\u5475 \uff0c\u5373\u4f7f\u4f60\u6280\u672f\u8fc7\u5173\uff0chr\u90a3\u91cc\u6ca1\u6709\u597d\u7684\u5f71\u54cd\uff0c\u7ed3\u679c\u662f\u4e00\u4e2a\u5b57\uff0c\u96be\uff01", "\n\u5982\u4f55\u56de\u7b54\u5462\uff1f hr\u60f3\u63a8\u8bba\u51fa\u4f60\u5728\u4ed6\u7684\u516c\u53f8\u80fd\u5446\u591a\u4e45\u3002\u8fd9\u4e2a\u65f6\u5019\uff0c\u4f60\u751a\u81f3\u53ef\u4ee5\u660e\u786e\u544a\u8bc9\u4ed6\uff0c\u6211\u5728\u8d35\u516c\u53f8\u81f3\u5c11\u80fd\u5446n\uff08n>=1\uff09\u5e74\u2014-\u5f53\u7136\uff0c\u4f60\u6ca1\u6709\u628a\u63e1\u7684\u8bdd\uff0c\u7edd\u5bf9\u4e0d\u80fd\u4e71\u8bf4\uff0c\u793e\u4f1a\u4e0a\u6df7\uff0c\u8981\u8bb2\u4fe1\u7528\u7684\u3002", "\n\u6709\u4e00\u6b21\uff0c\u6211\u5c31\u5728\u8fd9\u4e2a\u95ee\u9898\u4e0a\u5403\u4e86\u5927\u4e8f\uff0c\u6211\u770b\u516c\u53f8\u73af\u5883\u8fd8\u4e0d\u9519\uff0c\u5c31\u6211\u81ea\u505a\u4e3b\u5f20\u56de\u7b541\u5e74\uff0c\u7ed3\u679c\uff0chr\u5fc3\u76ee\u4e2d\u662fm\uff08m>=2\uff09\u5e74\uff0c\u5475\u5475\uff0c\u7ed3\u679c\u53ef\u60f3\u800c\u77e5\u4e86\u3002\u8981\u77e5\u9053\uff0c\u6280\u672f\u9762\u8bd5\u90fd\u8fc7\u5173\u4e86\uff0cHr\u9762\u8bd5\u662f2\u90091\uff0c\u5728\u56de\u5bb6\u7684\u8def\u4e0a\uff0c\u6211\u53ea\u80fd\u7948\u7977\u5bf9\u624b\u81ea\u52a8\u653e\u5f03\u6216\u627e\u5230\u4e86\u5176\u4ed6\u66f4\u597d\u7684\u5de5\u4f5c\u3002\uff1a\uff09", "\n\u95ee\u7b2c\u4e8c\u4e2a\u95ee\u9898\u7684\u662f\u6280\u672f\u5b98\u3002\u4f60\u8981\u8ba9\u4ed6\u77e5\u9053\u4f60\u5df2\u7ecf\u505a\u8fc7\u54ea\u4e9b\u5546\u4e1a\u4f5c\u54c1\u3002\u4e00\u5b9a\u8981\u662f\u5546\u4e1a\u4f5c\u54c1\u3002\u5728\u91cc\u9762\u8d1f\u8d23\u54ea\u65b9\u9762\u5177\u4f53\u5de5\u4f5c\uff0c\u5bf9\u4e8e\u4f60\u719f\u6089\u7684\u5730\u65b9\u8981\u591a\u8bf4\u3002\u6700\u597d\u5c31\u662f\u80fd\u4e89\u53d6\u7b14\u8bd5\u6216\u4e0a\u673a\uff0c\u56e0\u4e3a\u7528\u7528\u53e3\u8bf4\u7684\u8bdd\uff0c\u5927\u5bb6\u7406\u89e3\u90fd\u4e0d\u4e00\u6837\uff0c\u8bef\u5dee\u53ef\u80fd\u5f88\u5927\uff0c\u7ed3\u679c\u5bf9\u4f60\u76f8\u5f53\u4e0d\u5229\u3002\u5728\u8fd9\u4e2a\u95ee\u9898\u4e0a\u6211\u4e5f\u5403\u8fc7\u4e8f\u7684\uff0c\u66fe\u6709\u4e00\u4e2a\u6211\u5f88\u770b\u597d\u7684\u804c\u4f4d\uff0c\u8ba4\u4e3a\u628a\u63e1\u5f88\u5927\uff0c\u4e1a\u52a1\u7406\u89e3\u4e0a\u4e5f\u5f88\u6709\u4f18\u52bf\uff0c\u548c\u6280\u672f\u5b98\u4e00\u8c08\uff0c\u7ed3\u679c\u662fgame over\u3002\u8981\u77e5\u9053\uff0c\u5728\u5176\u4ed6\u516c\u53f8\u7684\u4e0a\u673a\u548c\u7b14\u8bd5\u4e2d\uff0c\u6211\u90fd\u80fd\u5728\u5e94\u8058\u8005\u4e2d\u53d6\u5f97\u9ad8\u5206\u3002", "\n\u518d\u8bf4\u6211\u53bb\u9762\u8bd5\u522b\u4eba\u7684\u7ecf\u9a8c\u5427\u3002", "\n\u5f53\u65f6\uff0c\u6211\u7684\u4efb\u52a1\u662f\u51fa\u9898\uff0c\u7ed9\u5206\u3002\u82e5\u4f60\u89c9\u5f97\u9898\u5f88\u96be\uff0c\u90a3\u4e48\uff0c\u8bf7\u5343\u4e07\u4e0d\u8981\u653e\u5f03\uff0c\u663e\u7136\uff0c\u4f60\u7684\u5bf9\u624b\u4e5f\u89c9\u5f97\u96be\u3002\u53ea\u8981\u575a\u6301\uff0c\u6211\u4f1a\u8ba4\u4e3a\u8fd9\u4eba\u6709\u8010\u5fc3\u5f88\u6bc5\u529b\uff0c\u5728\u4ee5\u540e\u7684\u5de5\u4f5c\u4e2d\u4e5f\u662f\u597d\u7684\u5408\u4f5c\u8005\u3002\u9898\u4e00\u5b9a\u8981\u505a\u5b8c\uff0c\u8868\u73b0\u51fa\u8ba4\u771f\u7684\u6001\u5ea6\uff0c\u82e5\u6709\u7591\u95ee\u6216\u5361\u58f3\uff0c\u8fd8\u53ef\u4ee5\u5bfb\u6c42\u9762\u8bd5\u5b98\u7684\u5e2e\u52a9\uff0c\u8fd9\u4e9b\u4e0d\u4f1a\u51cf\u5206\uff0c\u76f8\u53cd\uff0c\u4f1a\u589e\u52a0\u4f60\u548c\u4ed6\u4eec\u7684\u63a5\u89e6\u673a\u4f1a\uff0c\u9762\u8bd5\u5b98\u4f1a\u8bc4\u4f30\u4f60\u7684\u6c9f\u901a\u80fd\u529b\u3002", "\n\u6709\u4e00\u6b21\uff0c\u67091\u4e2a\u4eba\u6765\u9762\u8bd5\uff0c\u9898\u6ca1\u6709\u5b8c\u5168ok,\u4f46\u5f88\u89c4\u8303\uff0c\u6001\u5ea6\u5f88\u8ba4\u771f\uff0c\u4ed6\u628a\u4ed6\u77e5\u9053\u7684\u90fd\u505a\u4e0a\u53bb\u4e86\uff0c\u6211\u7ed9\u4e86\u4ed6\u6280\u672f\u7c7b\u7684\u9ad8\u5206\u3002\u540e\u6765\uff0c\u987a\u5229\u8fdb\u5165\u516c\u53f8\uff0c\u518d\u540e\u6765\u8fdb\u6b65\u5f88\u5feb\uff0c\u6210\u4e86\u91cd\u8981\u89d2\u8272\u3002", "\n\u82e5\u6587\u7ae0\u5bf9\u4f60\u6709\u5e2e\u52a9\u7684\u8bdd\uff0c\u8bf7\u5728\u6b64\u8ba8\u8bba\u3002", "\n\u795d\u4f60\u6210\u529f", "\u4e00\u822c\u5206\u7c7b :: \u8bc4\u8bba (109) :: \u9759\u6001\u94fe\u63a5\u7f51\u5740 :: \u5f15\u7528 (0)", "\n\u9762\u8bd5\u9898", "\nsilver6 | 14 \u56db\u6708, 2006 09:36", "\n1.\u94fe\u8868\u548c\u6570\u7ec4\u7684\u533a\u522b\u5728\u54ea\u91cc\uff1f", "\n2.\u7f16\u5199\u5b9e\u73b0\u94fe\u8868\u6392\u5e8f\u7684\u4e00\u79cd\u7b97\u6cd5\u3002\u8bf4\u660e\u4e3a\u4ec0\u4e48\u4f60\u4f1a\u9009\u62e9\u7528\u8fd9\u6837\u7684\u65b9\u6cd5\uff1f", "\n3.\u7f16\u5199\u5b9e\u73b0\u6570\u7ec4\u6392\u5e8f\u7684\u4e00\u79cd\u7b97\u6cd5\u3002\u8bf4\u660e\u4e3a\u4ec0\u4e48\u4f60\u4f1a\u9009\u62e9\u7528\u8fd9\u6837\u7684\u65b9\u6cd5\uff1f", "\n4.\u8bf7\u7f16\u5199\u80fd\u76f4\u63a5\u5b9e\u73b0strstr()\u51fd\u6570\u529f\u80fd\u7684\u4ee3\u7801\u3002", "\n5.\u7f16\u5199\u53cd\u8f6c\u5b57\u7b26\u4e32\u7684\u7a0b\u5e8f\uff0c\u8981\u6c42\u4f18\u5316\u901f\u5ea6\u3001\u4f18\u5316\u7a7a\u95f4\u3002", "\n6.\u5728\u94fe\u8868\u91cc\u5982\u4f55\u53d1\u73b0\u5faa\u73af\u94fe\u63a5\uff1f", "\n7.\u7ed9\u51fa\u6d17\u724c\u7684\u4e00\u4e2a\u7b97\u6cd5\uff0c\u5e76\u5c06\u6d17\u597d\u7684\u724c\u5b58\u50a8\u5728\u4e00\u4e2a\u6574\u5f62\u6570\u7ec4\u91cc\u3002", "\n8.\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u68c0\u67e5\u5b57\u7b26\u662f\u5426\u662f\u6574\u6570\uff0c\u5982\u679c\u662f\uff0c\u8fd4\u56de\u5176\u6574\u6570\u503c\u3002\uff08\u6216\u8005\uff1a\u600e\u6837\u53ea\u75284\u884c\u4ee3\u7801\u7f16\u5199\u51fa\u4e00\u4e2a\u4ece\u5b57\u7b26\u4e32\u5230\u957f\u6574\u5f62\u7684\u51fd\u6570\uff1f\uff09", "\n9.\u7ed9\u51fa\u4e00\u4e2a\u51fd\u6570\u6765\u8f93\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u6240\u6709\u6392\u5217\u3002", "\n10.\u8bf7\u7f16\u5199\u5b9e\u73b0malloc()\u5185\u5b58\u5206\u914d\u51fd\u6570\u529f\u80fd\u4e00\u6837\u7684\u4ee3\u7801\u3002", "\n11.\u7ed9\u51fa\u4e00\u4e2a\u51fd\u6570\u6765\u590d\u5236\u4e24\u4e2a\u5b57\u7b26\u4e32A\u548cB\u3002\u5b57\u7b26\u4e32A\u7684\u540e\u51e0\u4e2a\u5b57\u8282\u548c\u5b57\u7b26\u4e32B\u7684\u524d\u51e0\u4e2a\u5b57\u8282\u91cd\u53e0\u3002", "\n12.\u600e\u6837\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u628a\u4e00\u4e2a\u6709\u5e8f\u6574\u6570\u6570\u7ec4\u653e\u5230\u4e8c\u53c9\u6811\u4e2d\uff1f", "\n13.\u600e\u6837\u4ece\u9876\u90e8\u5f00\u59cb\u9010\u5c42\u6253\u5370\u4e8c\u53c9\u6811\u7ed3\u70b9\u6570\u636e\uff1f\u8bf7\u7f16\u7a0b\u3002", "\n14.\u600e\u6837\u628a\u4e00\u4e2a\u94fe\u8868\u6389\u4e2a\u987a\u5e8f\uff08\u4e5f\u5c31\u662f\u53cd\u5e8f\uff0c\u6ce8\u610f\u94fe\u8868\u7684\u8fb9\u754c\u6761\u4ef6\u5e76\u8003\u8651\u7a7a\u94fe\u8868\uff09\uff1f", "\n\u53e6\u5916\uff1a", "\u4e00\u3001\u5355\u9879\u9009\u62e9\u9898\uff1a\uff08\u517112\u9898\uff0c\u6bcf\u98982\u5206\uff0c\u517124\u5206\uff09 ", "1. \u4e0b\u9762\u54ea\u4e00\u4e2a\u4e0d\u662fC++\u7684\u6807\u51c6\u6570\u636e\u7c7b\u578b\uff1f \uff08 \uff09 ", "A. int B. char", "C. bool D. real", "2. break\u5173\u952e\u5b57\u5728\u54ea\u4e00\u79cd\u8bed\u6cd5\u7ed3\u6784\u4e2d\u4e0d\u80fd\u4f7f\u7528\uff1f \uff08 \uff09 ", "A. for\u8bed\u53e5 B. switch\u8bed\u53e5", "C. if\u8bed\u53e5 D. while\u8bed\u53e5 ", "3. \u7c7b\u7684\u7ee7\u627f\u65b9\u5f0f\u6709\u51e0\u79cd\uff1f \uff08 \uff09 ", "A. \u4e24\u79cd B. \u4e09\u79cd", "C. \u56db\u79cd D. \u516d\u79cd", "4. extern\u5173\u952e\u5b57\u7684\u4f5c\u7528\u662f\u4ec0\u4e48\uff1f \uff08 \uff09", "A. \u58f0\u660e\u5916\u90e8\u94fe\u63a5 B. \u58f0\u660e\u5916\u90e8\u5934\u6587\u4ef6\u5f15\u7528", "C. \u58f0\u660e\u4f7f\u7528\u6269\u5c55C++\u8bed\u53e5 D. \u58f0\u660e\u5916\u90e8\u6210\u5458\u51fd\u6570\u3001\u6210\u5458\u6570\u636e\u3002", "5. C\u5e93\u51fd\u6570strstr\u7684\u529f\u80fd\u662f\uff1f \uff08 \uff09", "A. \u67e5\u627e\u5b50\u4e32 B. \u8ba1\u7b97\u5b57\u7b26\u4e32\u957f\u5ea6", "C. \u5b57\u7b26\u4e32\u6bd4\u8f83 D. \u8fde\u7ed3\u5b57\u7b26\u4e32 ", "6. stl::deque\u662f\u4e00\u79cd\u4ec0\u4e48\u6570\u636e\u7c7b\u578b\uff1f \uff08 \uff09", "A. \u52a8\u6001\u6570\u7ec4 B. \u94fe\u8868", "C. \u5806\u6808 D. \u6811 ", "7. STL\u5e93\u91cc\u542b\u6709\u4e0b\u9762\u7684\u54ea\u4e00\u79cd\u6cdb\u578b\u7b97\u6cd5\uff1f \uff08 \uff09", "A. KMP\u67e5\u627e B. \u6298\u534a\u67e5\u627e", "C. \u5192\u6ce1\u6392\u5e8f D. \u5feb\u901f\u6392\u5e8f ", "8. \u73b0\u5728\u6700\u5feb\u4e14\u6700\u901a\u7528\u7684\u6392\u5e8f\u7b97\u6cd5\u662f\u4ec0\u4e48\uff1f \uff08 \uff09", "A. \u5feb\u901f\u6392\u5e8f B. \u5192\u6ce1\u6392\u5e8f", "C. \u9009\u62e9\u6392\u5e8f D. \u5916\u90e8\u6392\u5e8f", "9. Win32\u4e0b\u7684\u7ebf\u7a0b\u7684\u54ea\u4e00\u79cd\u4f18\u5148\u7ea7\u6700\u9ad8\uff1f \uff08 \uff09", "A. THREAD_PRIORITY_HIGHEST B. THREAD_PRIORITY_IDLE", "C. THREAD_PRIORITY_TIME_CRITICAL D. THREAD_PRIORITY_ABOVE_NORMAL ", "10. \u4e0b\u9762\u56db\u4e2a\u9009\u9879\u4e2d\uff0c\u54ea\u4e00\u4e2a\u4e0d\u662fWinMain\u51fd\u6570\u7684\u53c2\u6570\uff1f \uff08 \uff09", "A. HINSTANCE B. INT", "C. LPSTR D. WPARAM ", "11. VC++\u7684\u7f16\u8bd1\u5668\u4e2d\uff0c\u8fd0\u7b97\u7b26new\u5e95\u5c42\u7684\u5b9e\u73b0\u662f\u4ec0\u4e48\uff1f \uff08 \uff09", "A. VirtualAlloc() B. HeapAlloc()", "C. GlobalAlloc() D. AllocateUserPhysicalPages() ", "12. \u4e0b\u9762\u54ea\u4e00\u672cC++\u53c2\u8003\u4e66\u6700\u539a\uff1f \uff08 \uff09", "A. \u300aThink in C++\u300b B. \u300a\u6df1\u5165\u6d45\u51faMFC\u300b", "C. \u300aC++ Primer\u300b D. \u300aEffective C++\u300b ", "\u4e8c\u3001\u4e0d\u5b9a\u9879\u9009\u62e9\u9898\uff1a\uff08\u51716\u9898\uff0c\u6bcf\u98983\u5206\uff0c\u517118\u5206\uff0c\u591a\u9009\u3001\u9519\u9009\u3001\u6f0f\u9009\u5747\u4e0d\u7ed9\u5206\uff09", "1. vector::iterator\u91cd\u8f7d\u4e86\u4e0b\u9762\u54ea\u4e9b\u8fd0\u7b97\u7b26\uff1f \uff08 \uff09 ", "A. ++ B. >>", "C. *\uff08\u524d\u7f6e\uff09 D. == ", "2. CreateFile( )\u7684\u529f\u80fd\u6709\u54ea\u51e0\u4e2a\uff1f \uff08 \uff09", "A. \u6253\u5f00\u6587\u4ef6 B. \u521b\u5efa\u65b0\u6587\u4ef6", "C. \u6587\u4ef6\u6539\u540d D. \u5220\u9664\u6587\u4ef6", "3. \u4e0b\u9762\u54ea\u4e9b\u662f\u53e5\u67c4\uff08HANDLE\uff09\uff1f \uff08 \uff09", "A. HINSTANCE B. HWND", "C. HDC D. HFONT ", "4. \u4e0b\u9762\u54ea\u4e9b\u4e0d\u662fOpenGL\u6807\u51c6\u51e0\u4f55\u5143\u7d20\u7684\u7ed8\u5236\u6a21\u5f0f\uff1f \uff08 \uff09", "A. GL_FOG B. GL_LINE_STRIP", "C. GL_POINTS D. GL_TRIANGLE_FAN ", "5. \u4e0b\u9762\u54ea\u4e9b\u8fd0\u7b97\u7b26\u4e0d\u80fd\u88ab\u91cd\u8f7d\uff1f \uff08 \uff09", "A. \u505a\u7528\u57df\u8fd0\u7b97\u7b26\u201c::\u201d B. \u5bf9\u8c61\u6210\u5458\u8fd0\u7b97\u7b26\u201c.\u201d", "C. \u6307\u9488\u6210\u5458\u8fd0\u7b97\u7b26\u201c->\u201d D. \u4e09\u76ee\u8fd0\u7b97\u7b26\u201c? :\u201d ", "6. \u4e0b\u9762\u54ea\u4e9b\u4eba\u66fe\u53c2\u4e0e\u4e86\u4e16\u754c\u4e0a\u7b2c\u4e00\u4e2aC++\u7f16\u8bd1\u5668\u7684\u5f00\u53d1\uff1f \uff08 \uff09", "A. Bill Gates B. Stanley Lippman", "C. Anderson Hejlsberg D. Bjarne Stroustrup", "\u4e09\u3001\u586b\u7a7a\u9898\uff1a\uff08\u51718\u9898\uff0c\u6bcf\u98983\u5206\uff0c\u517124\u5206\uff09", "1. \u4e00\u4e2a\u5927\u5c0f\u4e3a320 X 192\uff0c\u989c\u8272\u4e3a\u7070\u5ea6\u7d22\u5f15\u8272\u7684\u8bbe\u5907\u76f8\u5173\u4f4d\u56fe\u6709______\u5b57\u8282\u3002\u5982\u679c\u6b64\u4f4d\u56fe\u989c\u8272\u4e3a24\u4f4d\u771f\u5f69\u8272\uff0c\u5219\u5b83\u7684\u5927\u5c0f\u6709______\u5b57\u8282\u3002", "2. Windows API\u7684\u4e2d\u6587\u610f\u4e49\u662f________________\u3002", "3. \u8ba1\u7b97\u53cd\u6b63\u5f26\u7684\u5e93\u51fd\u6570\u662f______\uff1b\u8ba1\u7b97\u6d6e\u70b9\u6570\u7edd\u5bf9\u503c\u7684\u5e93\u51fd\u6570\u662f______\uff1b\u8ba1\u7b97\u6d6e\u70b9\u6570n\u6b21\u65b9\u7684\u5e93\u51fd\u6570\u662f______\uff1b\u5c06\u6d6e\u70b9\u6570\u8f6c\u5316\u4e3a\u5b57\u7b26\u4e32\u7684\u5e93\u51fd\u6570\u662f______\u3002", "4. \u5982\u679ci\u7b49\u4e8e5\uff0c\u90a3\u4e48( ++i ) \u2013 -\u7684\u8fd4\u56de\u503c\u662f_____\u3002", "5. API LoadBitmap()\u7684\u529f\u80fd\u662f\u4ece______\u4e2d\u8bfb\u53d6\u4f4d\u56fe\u6570\u636e\u5230\u5185\u5b58\u3002", "6. new\u548c_____\u5bf9\u5e94\uff0cmalloc\u548c_____\u5bf9\u5e94\uff0c\u4ed6\u4eec\u4e4b\u95f4_____\u4ea4\u53c9\u6df7\u7528\u3002calloc\u7684\u529f\u80fd\u662f___________\uff0crealloc\u7684\u529f\u80fd\u662f____________\u3002", "7. SendMessage\u548cPostMessage\u90fd\u4f1a\u5411\u7a97\u4f53\u53d1\u9001\u4e00\u4e2a\u6d88\u606f\uff0c\u4f46SendMessage_________\u800cPostMessage____________\u3002", "8. \u8f93\u51fa\u6307\u5b9a\u5706\u5fc3\u3001\u534a\u5f84\u3001\u8fb9\u6570\u7684\u5706\u4e0a\u7684\u70b9\uff1a", "const int nCount = 12;", "const double dOrgX = 5.0,", "dOrgY = 3.0;", "const double dRadius = 2.0;", "for( int i = 0; i \n", "{", "double dAngle = M_PI * 2.0 / (double)nCount * i;", "cout \n", "}", "\u4e09\u3001\u5224\u65ad\u9898\uff1a\uff08\u517112\u9898\uff0c\u6bcf\u98982\u5206\uff0c\u517124\u5206\uff09", "1. \u4e00\u4e2a\u7c7b\u5fc5\u987b\u8981\u6709\u4e00\u4e2a\u4e0d\u5e26\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\u3002 \u25a1", "2. \u4f60\u4e0d\u80fd\u5199\u4e00\u4e2a\u865a\u7684\u6784\u9020\u51fd\u6570\u3002 \u25a1", "3. \u7c7b\u91cc\u9762\u6240\u6709\u7684\u51fd\u6570\u90fd\u662f\u7eaf\u865a\u51fd\u6570\u65f6\u624d\u662f\u7eaf\u865a\u7c7b\u3002 \u25a1", "4. const\u6210\u5458\u51fd\u6570\u5bf9\u4e8e\u4efb\u4f55\u672c\u7c7b\u7684\u6570\u636e\u6210\u5458\u90fd\u4e0d\u80fd\u8fdb\u884c\u5199\u64cd\u4f5c\u3002 \u25a1", "5. \u51fd\u6570\u4e2d\u5e26\u9ed8\u8ba4\u503c\u7684\u53c2\u6570\u5fc5\u987b\u4f4d\u4e8e\u4e0d\u5e26\u9ed8\u8ba4\u503c\u7684\u53c2\u6570\u4e4b\u540e\u3002 \u25a1", "6. char *p = \"Test\"; p[0] = 'R'; \u25a1", "7. cout \n", "8. stl::list\u4e0d\u652f\u6301\u968f\u673a\u8bbf\u95ee\u53e0\u4ee3\u5668\u3002 \u25a1", "9. stl::vector\u7684\u6548\u7387\u6bd4stl::list\u9ad8\u3002 \u25a1", "10. VC\u548cVC++\u662f\u4e00\u56de\u4e8b\uff0c\u800cVC++\u662f\u4e00\u79cd\u6bd4C++\u66f4\u96be\u4e00\u4e9b\u7684\u8bed\u8a00\u3002 \u25a1", "11. \u7406\u8bba\u4e0a\uff0cnew\u548cmalloc\u9020\u6210\u7684\u5185\u5b58\u6cc4\u9732\u90fd\u4f1a\u7531\u64cd\u4f5c\u7cfb\u7edf\u56de\u6536\u3002 \u25a1", "12. \u5728C++\u4e2dstruct\u548cclass\u7684\u5dee\u522b\u5f88\u5927\uff0c\u6240\u4ee5\u4ece\u8bed\u6cd5\u4e0a\u4e0d\u80fd\u6df7\u7528\u3002 \u25a1", "\u56db\u3001\u7b80\u8ff0\u9898(\u51713\u9898\uff0c\u6bcf\u98985\u5206\uff0c\u517115\u5206) ", "1. \u8bf7\u7b80\u8ff0PeekMessage\u548cGetMessage\u7684\u533a\u522b\u3002", "2. \u8bf7\u5217\u51fa\u4f60\u6240\u77e5\u9053\u7684\u5728Windows SDK\u5e73\u53f0\u4e0a\uff0c\u5b9e\u73b0\u8ba1\u65f6\u529f\u80fd\u7684\u65b9\u6cd5\u3002", "3. \u8bf7\u7b80\u8ff0\u4f60\u6240\u77e5\u9053\u7684const\u7684\u5404\u79cd\u7528\u6cd5\u3002", "\u4e94\u3001\u7f16\u7a0b\u9898\uff1a\uff08\u51713\u9898\uff0c\u7b2c1\u5c0f\u98987\u5206\uff0c\u7b2c2\u5c0f\u989814\u5206\uff0c\u7b2c3\u5c0f\u989824\u5206\uff09", "1. \u6df1\u5ea6\u904d\u5386\u4e8c\u53c9\u6811\u3002", "struct Node", "{", "Node *Parent;", "Node *Left, *Right;", "};", "void Through(Node *Root)", "{", "}", "2. \u4e8c\u5206\u6cd5\u67e5\u627e\u3002", "int DicFind( int *Array, int Count, int Value )", "{", "}", "3. \u5199\u51fa\u5b57\u7b26\u4e32\u7c7bString\u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u3001\u6790\u6784\u51fd\u6570\u548c\u91cd\u8f7d\u8d4b\u503c\u8fd0\u7b97\u7b26\u3002", "\u5df2\u77e5\u7c7bString\u7684\u539f\u578b\u4e3a\uff1a", "class String", "{", "public:", "String( const char *pStr = NULL ); // \u9ed8\u8ba4\u6784\u9020\u51fd\u6570", "~String( void ); // \u6790\u6784\u51fd\u6570", "String &operate = ( const String &Source ); // \u91cd\u8f7d\u8d4b\u503c\u8fd0\u7b97\u7b26", "private:", "char *m_pData; // \u6307\u5411\u5b57\u7b26\u4e32\u7684\u6307\u9488", "};", "\n\u4e00\u822c\u5206\u7c7b :: \u8bc4\u8bba (230) :: \u9759\u6001\u94fe\u63a5\u7f51\u5740 :: \u5f15\u7528 (0)", "\n\u4eca\u5929\u4e0b\u5348\u7684\u4e24\u9053\u9762\u8bd5\u9898", "\nsilver6 | 07 \u56db\u6708, 2006 18:42", "\n1\u3002 \u4e00\u4eba\u5c81\u6570\u76843\u6b21\u65b9\u662f\u56db\u4f4d\u6570\uff0c\u56db\u6b21\u65b9\u662f\u516d\u4f4d\u6570\uff0c\u5e76\u77e5\u9053\u6b64\u4eba\u5c81\u6570\u76843\u6b21\u65b9\u548c4\u6b21\u65b9\u7528\u904d\u4e860\uff5e9\u5341\u4e2a\u6570\u5b57\u3002\u7f16\u5199\u4e00\u7a0b\u5e8f\u6c42\u6b64\u4eba\u7684\u5c81\u6570\u3002", "2\u3002\u5bf91\uff0c2\uff0c3\uff0c 4\uff0c 5 \u8fd9\u4e94\u4e2a\u6570\u4efb\u610f\u53d6\u51fa\u4e24\u4e2a\u6570\uff0c\u5217\u51fa\u4ed6\u4eec\u7684\u6240\u6709\u7ec4\u5408\u3002", "\npublic static int getAge() {", "\nint age;", "\nint third;", "\nint fourth;", "for (int i = 11; true; i++) {", "\nif (i \nthird = (int) Math.pow(i, 3);", "\nfourth = (int) Math.pow(i, 4);", "\nif (getLength(third, fourth) == 10) {", "\nage = i;", "\nbreak;", "\n}", "}", "\n}", "\nreturn age;", "\n}", "public static int getLength(int args1, int args2) {", "\nString str1 = String.valueOf(args1);", "\nString str2 = String.valueOf(args2);", "\nString str = str1 + str2;", "\nif (str.length() != 10) {", "\nreturn -1;", "\n}", "\nint[] intarray = new int[10];", "\nfor (int i = 0; i \nintarray[i] = Integer.parseInt(str.substring(i,i+1));", "\n}", "\nArrays.sort(intarray);", "\nif(intarray[0]!=0 && intarray[9]!=9)", "\nreturn -1;", "return 10;", "\n}", "\n\u7b2c\u4e8c\u9898\u8fd8\u66f4\u7b80\u5355\u4e86", "for(int i=1; i\nfor(int j=1; j\nif(i==j){", "\nSystem.out.println(j+\"\"+j);", "\n}else{", "\nSystem.out.println(i+\"\"+j);", "\nSystem.out.println(j+\"\"+i);", "\n}", "\n}", "\n}", "\npublic class A {", "\n// http://community.csdn.net/Expert/topic/4667/4667929.xml?temp=.57922", "\npublic static void main(String[] args) {", "\nString t;", "\nString[] s = new String[5];", "\nint j = s.length;", "\nfor(int i=0; i", "\ns[i] = new Integer(i+1).toString();", "\n}", "for(int i=0; i", "\nt = s[i];", "\nfor(int a=0; a", "\nt += s[i];", "\nSystem.out.println(t);", "\n}", "\nSystem.out.println();", "\n}", "\n}", "\n}", "\n\u7b2c\u4e8c\u9898\u8fd8\u66f4\u7b80\u5355\u4e86", "for(int i=1; i\nfor(int j=1; j\nif(i==j){", "\nSystem.out.println(j+\"\"+j);", "\n}else{", "\nSystem.out.println(i+\"\"+j);", "\nSystem.out.println(j+\"\"+i);", "\n}", "\n}", "\n}", "\n============================================================", "\n\u697c\u4e0a\u7684\u6ca1\u770b\u6e05\u9898\u76ee\uff0c\u5b83\u662f\u8ba9\u4f60\u5bf91\uff0c2\uff0c3\uff0c 4\uff0c 5 \u8fd9\u4e94\u4e2a\u6570\u4efb\u610f\u53d6\u51fa\u4e24\u4e2a\u6570\uff0c\u5217\u51fa\u4ed6\u4eec\u7684\u6240\u6709\u7ec4\u5408\uff0c\u6240\u4ee5\u91cd\u590d\u7684\u6570\u5b57\u4e0d\u5e94\u8be5\u7b97\u5728\u91cc\u9762\u3002", "\n\u7b2c\u4e8c\u9898\u5e94\u8be5\u6539\u4e3a\uff1a", "\nfor(int i=1; i\nfor(int j=1; j\nif(i==j){", "\nbreak;", "\n}else{", "\nSystem.out.println(i+\"\"+j);", "\nSystem.out.println(j+\"\"+i);", "\n}", "\n}", "\n}", "\npublic class B {", "\npublic static void main(String[] args) {", "\nfor (int i = 1; i \nint t = i;", "\nfor(int a = 0; a\nint c = a+1;", "\nif(c == t) {", "\ncontinue;", "\n}else {", "\nSystem.out.println(t*10+c);", "\n}", "\n}", "\nSystem.out.println();", "\n}", "\n}", "\n}", "\n\u7b2c\u4e8c\u9898", "\npublic class Test", "\n{", "\npublic static void main(String[] args)", "\n{", "\nint[][] a=new int[5][];", "\nfor(int i=0;i", "\n{", "\na[i]=new int[i+1];", "\n}", "\nfor(int i=1;i\n{", "for(int j=i+1;j\n{", "\nSystem.out.print(i);", "\nSystem.out.print(j+\" \");", "\n}", "\nSystem.out.print(\" \");", "\n}", "for(int i=a.length;i>0;i\u2013)", "\n{", "for(int j=i-1;j>0;j\u2013)", "\n{", "\nSystem.out.print(i);", "\nSystem.out.print(j+\u201d \u201c);", "\n}", "\nSystem.out.print(\u201d \u201c);", "\n}", "\n}", "\n}", "\npublic class Test {", "public static int getDigits(String str) {", "\nint[] intarr = new int[10];", "\nfor (int i = 0; i \nintarr[i] = 0;", "\nfor (int i = 0; i \nint j = Integer.parseInt(str.substring(i, i + 1));", "\nintarr[j] = 1;", "\n}", "\nint num = 0;", "\nfor (int i = 0; i \nnum = num + intarr[i];", "\nreturn num;", "\n}", "private static int getAge() {", "\nint age;", "\nint third;", "\nint fourth;", "\nfor (age = 1; age \nthird = (int) Math.pow(age, 3);", "\nfourth = (int) Math.pow(age, 4);", "\nif (third = 10000)", "\ncontinue;", "\nif (fourth = 1000000)", "\ncontinue;", "\nString str = String.valueOf(third) + String.valueOf(fourth);", "\nif (getDigits(str) == 10)", "\nreturn age;", "\n}", "\nreturn 0;", "\n}", "\n}", "\n\u7b2c\u4e8c\u9053\u9898", "\nclass Combine", "\n{", "\npublic static void main(String[] args)", "\n{", "\nfor(int i=1; i\n{", "\nfor(int j=i+1; j\n{", "\nSystem.out.println(i+\"\"+j);", "\nSystem.out.println(j+\"\"+i);", "\n}", "\n}", "\n}", "\npublic class Age", "\n{", "\npublic static void main(String [] args)", "\n{", "\nString str1 = null;", "\nString str2 = null;", "\nString str3 = null;", "\nString str4 = \"0123456789\";", "\nfor(int i=10;i\n{", "\nstr1 = Integer.toString(i*i*i);", "\nstr2 = Integer.toString(i*i*i*i);", "\nstr3 = str1+str2;", "\nif((str1.length() == 4) && (str2.length() ==6))", "\n{", "\nboolean flag = true;", "\nfor(int j=0;j\nif(str3.indexOf(str4.charAt(j))==-1)", "\nflag = false;", "\nif(flag){", "\nSystem.out.println(\">>>\u201d+i);", "\nSystem.out.println(str3);", "\n}", "\n}", "\n}", "}", "\n}", "\u5fae\u8f6f\u53c8\u4e00\u9053\u7b14\u8bd5\u9898", "\nsilver6 | 04 \u56db\u6708, 2006 09:48", "\n\u600e\u6837\u53ea\u75284\u884c\u4ee3\u7801\u7f16\u5199\u51fa\u4e00\u4e2a\u4ece\u5b57\u7b26\u4e32\u5230\u957f\u6574\u5f62\u7684\u8f6c\u6362\u51fd\u6570\uff1f", "\n\u6211\u7684\u65b9\u6cd5\uff0c\u4e0d\u8fc7\u597d\u8c61\u6bd44\u884c\u591a *_#!~", "\nlong atol(char *str)", "\n{", "\nchar c = *str;", "\nif( !isdigit(c) ) str++;", "\nfor(long value = 0; *str != \u201d; value = value * 10 + (*str -\u20190\u2032),str++);", "\nreturn c == \u2018-\u2019 ? -value : value ;", "\n}", "\nvoid stol(const char * des, long& num)", "\n{", "\nfor (int base = 1, i = 0; des[i] != \u201d; base = 10, ++i)", "\n{", "\nnum *= base;", "\nnum += (int)(des[i] \u2013 \u20190\u2032);", "\n}", "\n}", "\nnum \u8981\u521d\u59cb\u5316\u4e3a0", "void stol(const char * des, long& num)", "\n{", "\nfor (int i=num=0; des[i] != \u201d; i++)", "\n{", "\nnum *= 10;", "\nnum += (int)(des[i] \u2013 \u20190\u2032);", "\n}", "\n}", "\nvoid stol(char *str, long &num)", "\n{", "\nwhile(*str != \u201d)", "\n{", "\nnum = num * 10 + (*str \u2013 \u20190\u2032);", "\nstr++;", "\n}", "\n}", "\nvoid stol(const char * des, long& num)", "\n{", "\nchar p = des[0];", "\nfor (int b = 1, pos = 1, base = 1; des[pos] != \u201d; b = 10, ++pos, base *= 10)", "\n{", "\n(num *= b) += (int)(des[pos] \u2013 \u20190\u2032);", "\n}", "\np == \u2018-\u2019 ? (num *= -1) : (num = (int)(des[0] \u2013 \u20190\u2032) * base + num);", "\n}", "\n\u6539\u4e86\u4e00\u4e0b", "\n\u6211\u53ea\u7528\u4e86\u4e00\u884c\u3002", "\n#include ", "long str2long(char* p,long xxx=0L)", "\n{", "\nreturn *p==\u201d?xxx:str2long(p,xxx*10+(*p+++0-\u20190\u2032));", "\n}", "int main()", "\n{", "\nchar *str=\u201d123456789\u2033,*p=str;", "\ncout\ngetchar();", "\nreturn 0;", "\n}", "\n\u7528STL\uff0c\u56db\u884c", "\n#include ", "using namespace std;", "long ToLong(string& s)", "\n{", "\nlong l;", "\nistringstream iss(s);", "\niss>>l;", "\nreturn l;", "\n}", "\nint main(int argc, _TCHAR* argv[])", "\n{", "\nstring s = \u201c-12356\u2033;", "\ncout\nreturn 0;", "\n}", "\n\u8c22\u8c22\u521a\u624d\u4e0a\u9762\u7684\u5e16\u5b50\u63d0\u9192\u8d1f\u6570\u7684\u95ee\u9898\uff0c\u6211\u66f4\u6b63\u4e86\uff0c\u8fd8\u662f\u53ea\u7528\u4e00\u884c\uff1a", "\n#include ", "long str2long(char* p,long xxx=0L,bool IsPositive=true)", "\n{", "\nreturn *p==\u201d?(IsPositive?xxx:xxx*(-1)):(*p==\u2019-'?str2long(++p,0L,false):str2long(p,xxx*10+*p+++0-\u20190\u2032,IsPositive));", "\n}", "int main()", "\n{", "\nchar *str=\u201d-123456789\u2033,*p=str;", "\ncout\ngetchar();", "\nreturn 0;", "\n}", "\u534e\u4e3a\u7814\u53d1\uff08\u8f6f\u4ef6\uff09\u9762\u8bd5", "\n\u7528C\u8bed\u8a00\u5199\u4e00\u4e2a\u9012\u5f52\u7b97\u6cd5\u6c42N\uff01\uff1b", "\n\u7ed9\u4e00\u4e2aC\u7684\u51fd\u6570\uff0c\u5173\u4e8e\u5b57\u7b26\u4e32\u548c\u6570\u7ec4\uff0c\u627e\u51fa\u9519\u8bef\uff1b", "\n\u9632\u706b\u5899\u662f\u600e\u4e48\u5b9e\u73b0\u7684\uff1f", "\u534e\u4e3a\u7b14\u8bd5\u9898", "\n2\uff0e\u8bf7\u4f60\u8be6\u7ec6\u5730\u89e3\u91ca\u4e00\u4e0bIP\u534f\u8bae\u7684\u5b9a\u4e49\uff0c\u5728\u54ea\u4e2a\u5c42\u4e0a\u9762\uff1f\u4e3b\u8981\u6709\u4ec0\u4e48\u4f5c\u7528\uff1fTCP\u4e0eUDP\u5462\uff1f", "\n3\uff0e\u8bf7\u95ee\u4ea4\u6362\u673a\u548c\u8def\u7531\u5668\u5404\u81ea\u7684\u5b9e\u73b0\u539f\u7406\u662f\u4ec0\u4e48\uff1f\u5206\u522b\u5728\u54ea\u4e2a\u5c42\u6b21\u4e0a\u9762\u5b9e\u73b0\u7684\uff1f", "\n4\uff0e\u8bf7\u95eeC++\u7684\u7c7b\u548cC\u91cc\u9762\u7684struct\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n5\uff0e\u8bf7\u8bb2\u4e00\u8bb2\u6790\u6784\u51fd\u6570\u548c\u865a\u51fd\u6570\u7684\u7528\u6cd5\u548c\u4f5c\u7528\u3002", "\n6\uff0e\u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1f\u662f\u600e\u4e48\u5b9e\u73b0\u7684\uff1f\u64cd\u4f5c\u7cfb\u7edf\u548c\u7f16\u8bd1\u5668\u662f\u600e\u4e48\u77e5\u9053\u7684\uff1f", "\n7\uff0e8086\u662f\u591a\u5c11\u4f4d\u7684\u7cfb\u7edf\uff1f\u5728\u6570\u636e\u603b\u7ebf\u4e0a\u662f\u600e\u4e48\u5b9e\u73b0\u7684\uff1f", "\u627e\u9519", "\n  Void   test1()", "\n  {", "\n  char   string[10];", "\n  char*   str1=\"0123456789\";", "\n  strcpy(string,   str1);", "\n  }     ", "  Void   test2()", "\n  {", "\n  char   string[10],   str1[10];", "\n  for(I=0;   I\n  {", "\n  str1[i]   ='a';", "\n  }", "\n  strcpy(string,   str1);", "\n  }     ", "  Void   test3(char*   str1)", "\n  {", "\n  char   string[10];", "\n  if(strlen(str1)\n  {", "\n  strcpy(string,   str1);", "\n  }", "\n  }     ", "  2.   \u627e\u9519", "\n  #define   MAX_SRM   256     ", "  DSN   get_SRM_no()", "\n  {", "\n  static   int   SRM_no;", "\n  int   I;", "\n  for(I=0;I{", "\n  SRM_no   %=   MAX_SRM;", "\n  if(MY_SRM.state==IDLE)", "\n  {", "\n  break;", "\n  }", "\n  }", "\n  if(I>=MAX_SRM)", "\n  return   (NULL_SRM);", "\n  else", "\n  return   SRM_no;", "\n  }     ", "  3.   \u5199\u51fa\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u679c     ", "  int   sum(int   a)", "\n  {", "\n  auto   int   c=0;", "\n  static   int   b=3;", "\n  c+=1;", "\n  b+=2;", "\n  return(a+b+C);", "\n  }     ", "  void   main()", "\n  {", "\n  int   I;", "\n  int   a=2;", "\n  for(I=0;I\n  {", "\n  printf(\"%d,\",   sum(a));", "\n  }", "\n  }     ", "  4.     ", "  int   func(int   a)", "\n  {", "\n  int   b;", "\n  switch(a)", "\n  {", "\n  case   1:   30;", "\n  case   2:   20;", "\n  case   3:   16;", "\n  default:   0", "\n  }", "\n  return   b;", "\n  }", "\n  \u5219func(1)=?     ", "  5:", "\n  int   a[3];", "\n  a[0]=0;   a[1]=1;   a[2]=2;", "\n  int   *p,   *q;", "\n  p=a;", "\n  q=&a[2];", "\n  \u5219a[q-p]=?     ", "  6.", "\n  \u5b9a\u4e49   int   **a[3][4],   \u5219\u53d8\u91cf\u5360\u6709\u7684\u5185\u5b58\u7a7a\u95f4\u4e3a\uff1a_____     ", "  7.", "\n  \u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u8981\u6c42\u8f93\u5165\u5e74\u6708\u65e5\u65f6\u5206\u79d2\uff0c\u8f93\u51fa\u8be5\u5e74\u6708\u65e5\u65f6\u5206\u79d2\u7684\u4e0b\u4e00\u79d2\u3002\u5982\u8f93\u51652004\u5e7412\u670831\u65e523\u65f659\u520659\u79d2\uff0c\u5219\u8f93\u51fa2005\u5e741\u67081\u65e50\u65f60\u52060\u79d2\u3002 ", "bigbigwind8    \u56de\u590d\u4e8e 2006-03-11 19:52:45 ", "\u534e\u4e3a\u7684\u9762\u8bd5\u8bd5\u9898\u6bd4\u8f83\u4e13\u4e1a\uff0c\u90fd\u662f\u4e00\u4e9b\u4e13\u4e1a\u77e5\u9053\u3002     ", "  \u3000\u3000Q1\uff1a\u8bf7\u4f60\u5206\u522b\u5212\u5212OSI\u7684\u4e03\u5c42\u7f51\u7edc\u7ed3\u6784\u56fe\uff0c\u548cTCP/IP\u7684\u4e94\u5c42\u7ed3\u6784\u56fe\uff1f   \u3000\u3000     ", "  \u3000\u3000Q2\uff1a\u8bf7\u4f60\u8be6\u7ec6\u7684\u89e3\u91ca\u4e00\u4e0bIP\u534f\u8bae\u7684\u5b9a\u4e49\uff0c\u5728\u54ea\u4e2a\u5c42\u4e0a\u9762\uff0c\u4e3b\u8981\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f   TCP\u4e0eUDP\u5462\uff1f\u3000\u3000     ", "  \u3000\u3000Q3\uff1a\u8bf7\u95ee\u4ea4\u6362\u673a\u548c\u8def\u7531\u5668\u5206\u522b\u7684\u5b9e\u73b0\u539f\u7406\u662f\u4ec0\u4e48\uff1f\u5206\u522b\u5728\u54ea\u4e2a\u5c42\u6b21\u4e0a\u9762\u5b9e\u73b0\u7684\uff1f\u3000\u3000     ", "  \u3000\u3000Q4:\u8bf7\u95eeC++\u7684\u7c7b\u548cC\u91cc\u9762\u7684struct\u6709\u4ec0\u4e48\u533a\u522b\uff1f   \u3000\u3000     ", "  \u3000\u3000Q5:\u8bf7\u8bb2\u4e00\u8bb2\u6790\u6784\u51fd\u6570\u548c\u865a\u51fd\u6570\u7684\u7528\u6cd5\u548c\u4f5c\u7528\uff1f   \u3000\u3000", "\n     Q6:\u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1f\u5b9e\u600e\u4e48\u5b9e\u73b0\u7684\uff1f\u64cd\u4f5c\u7cfb\u7edf\u548c\u7f16\u8bd1\u5668\u662f\u600e\u4e48\u77e5\u9053\u7684\uff1f   \u3000\u3000", "\n    \u3000Q7:\u4e00\u4e9b\u5bc4\u5b58\u5668\u7684\u9898\u76ee\uff0c\u4e3b\u8981\u662f\u5bfb\u5740\u548c\u5185\u5b58\u7ba1\u7406\u7b49\u4e00\u4e9b\u77e5\u8bc6\u3002   \u3000\u3000", "\n    \u3000Q8:8086\u662f\u591a\u5c11\u5c09\u7684\u7cfb\u7edf\uff1f\u5728\u6570\u636e\u603b\u7ebf\u4e0a\u662f\u600e\u4e48\u5b9e\u73b0\u7684\uff1f ", "2005\u5e74\u534e\u4e3a\u62db\u8058--C\u8bed\u8a00\u7b14\u8bd5\u8bd5\u9898", "\n\u5224\u65ad\u9898\uff08\u5bf9\u7684\u5199T\uff0c\u9519\u7684\u5199F\u5e76\u8bf4\u660e\u539f\u56e0\uff0c\u6bcf\u5c0f\u98984\u5206\uff0c\u517120\u5206\uff09", "\n1\u3001\u6709\u6570\u7ec4\u5b9a\u4e49int a[2][2]={{1},{2,3}};\u5219a[0][1]\u7684\u503c\u4e3a0\u3002\uff08     \uff09", "\n2\u3001int (*ptr) (),\u5219ptr\u662f\u4e00\u7ef4\u6570\u7ec4\u7684\u540d\u5b57\u3002\uff08     \uff09", "\n3\u3001\u6307\u9488\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\u90fd\u53ef\u8fdb\u884c>,=,\n4\u3001switch(c) \u8bed\u53e5\u4e2dc\u53ef\u4ee5\u662fint ,long,char ,float ,unsigned int \u7c7b\u578b\u3002\uff08   \uff09", "\n5\u3001#define print(x)  printf(\uff02the no, \uff02#x\uff02,is \uff02)", "\u4e8c\u3001\u586b\u7a7a\u9898\uff08\u517130\u5206\uff09", "\n1\u3001\u5728windows\u4e0b\uff0c\u5199\u51fa\u8fd0\u884c\u7ed3\u679c\uff0c\u6bcf\u7a7a2\u5206\uff0c\u517110\u5206\u3002", "\nchar str[ ]= \uff02Hello\uff02;", "\nchar *p=str;", "\nint n=10;", "\nsizeof(str)=(      )", "\nsizeof(p)=(       )", "\nsizeof(n)=(       )", "void func(char str[100])", "\n{    }", "\nsizeof(str)=(     )", "2\u3001void setmemory(char **p, int num)", "\n{ *p=(char *) malloc(num);}", "\nvoid test(void)", "\n{  char *str=NULL;", "\n   getmemory(&str,100);", "\n   strcpy(str,\uff02hello\uff02);", "\n   printf(str);", "\n}", "\n\u8fd0\u884ctest\u51fd\u6570\u6709\u4ec0\u4e48\u7ed3\u679c\uff1f\uff08                                \uff0910\u5206", "3\u3001\u8bbeint arr[]={6,7,8,9,10};", "\n     int *ptr=arr;", "\n   *(ptr++)+=123;", "\n printf(\uff02%d,%d\uff02,*ptr,*(++ptr));", "\n(                                   ) 10\u5206", "\u4e8c\u3001\u7f16\u7a0b\u9898\uff08\u7b2c\u4e00\u5c0f\u989820\uff0c\u7b2c\u4e8c\u5c0f\u989830\u5206\uff09", "\n1\u3001  \u4e0d\u4f7f\u7528\u5e93\u51fd\u6570\uff0c\u7f16\u5199\u51fd\u6570int strcmp(char  *source, char *dest)", "\n \u76f8\u7b49\u8fd4\u56de0\uff0c\u4e0d\u7b49\u8fd4\u56de-1\uff1b", "2\u3001  \u5199\u4e00\u51fd\u6570int fun(char *p)\u5224\u65ad\u4e00\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u56de\u6587\uff0c\u662f\u8fd4\u56de1\uff0c\u4e0d\u662f\u8fd4\u56de0\uff0c\u51fa\u9519\u8fd4\u56de-1", "\u534e\u4e3a\u9762\u8bd5\u7b14\u8bd5", "\n1\uff09\u7b14\u8bd5 \u53ef\u4ee5\u9009\u62e9java\u548cc++\uff0c\u6211\u505a\u7684java\uff0c\u4e2a\u4eba\u611f\u89c9\u8003\u7684\u5f88\u57fa\u7840\u3002", "\n\u5176\u4e2d\u4e00\u4e2a\u7f16\u7a0b\u9898\uff1a\u7528\u6570\u7ec4\u5b9e\u73b0\u6808\uff0c\u5e76\u4e14\u5f53\u6808\u7a7a\u95f4\u6ee1\u65f6\uff0c\u6808\u7a7a\u95f4\u589e\u52a0\u4e00\u500d\u3002", "\n2\uff09\u9762\u8bd5\uff1a\u6211\u9762\u7684\u662fit\u7c7b", "\n\u4e00\u9762\uff1a\u6280\u672f\u9762\uff0c40\u5206\u949f\uff0c\u95ee\u7684\u5f88\u7ec6\uff0cuml,\u5355\u70b9\u767b\u5f55,j2ee", "\n\u4e8c\u9762\uff1a\u7efc\u5408\u9762\uff0c20\u5206\u949f \u4e00\u4e2a\u9879\u76ee\u5b8c\u6574\u7684\u7ecf\u5386", "\n\u4e09\u9762\uff1ahr\uff0c\u804c\u4e1a\u89c4\u5212\uff0c\u4f18\u52bf\u4e0e\u52a3\u52bf\uff0c\u671f\u671b\u5de5\u8d44\u4e0e\u5de5\u4f5c\u5730\u70b9\u30025.8k\u3002", "\n\u56db\u9762\uff1a\u8001\u603b\u9762\uff0c\u6700\u90c1\u95f7\u7684\uff0c\u770b\u4e86\u7b80\u5386\u7684\u5c01\u9762\uff0c\u8bf4\u4e13\u4e1a\u4e0d\u9002\u5408\u53bb\u534e\u4e3a\u5de5\u4f5c\u3002\u65e0\u8bed\uff0c\u4e5f\u4e0d\u60f3\u53bb\uff0c\u56e0\u4e3a\u5f85\u9047\u8bf4\u5b9e\u8bdd\u4e5f\u4e0d\u600e\u4e48\u6837\uff0c\u5e76\u4e14\u5c31\u51ed\u4e13\u4e1a\u7684\u540d\u79f0\u6dd8\u6c70 ", "\u534e\u4e3a\u7b14\u8bd5\u9898\u542b\u7b54\u6848", ".\u5199\u51fa\u5224\u65adABCD\u56db\u4e2a\u8868\u8fbe\u5f0f\u7684\u662f\u5426\u6b63\u786e, \u82e5\u6b63\u786e, \u5199\u51fa\u7ecf\u8fc7\u8868\u8fbe\u5f0f\u4e2d a\u7684\u503c(3\u5206)", "\nint a = 4;", "\n(A)a += (a++); (B) a += (++a) ;(C) (a++) += a;(D) (++a) += (a++);", "\na = ?", "\n\u7b54\uff1aC\u9519\u8bef\uff0c\u5de6\u4fa7\u4e0d\u662f\u4e00\u4e2a\u6709\u6548\u53d8\u91cf\uff0c\u4e0d\u80fd\u8d4b\u503c\uff0c\u53ef\u6539\u4e3a(++a) += a;", "\n\u6539\u540e\u7b54\u6848\u4f9d\u6b21\u4e3a9,10,10,11", "2.\u67d032\u4f4d\u7cfb\u7edf\u4e0b, C++\u7a0b\u5e8f\uff0c\u8bf7\u8ba1\u7b97sizeof \u7684\u503c(5\u5206).", "\nchar str[] = \u201cwww.ibegroup.com\u201d", "\nchar *p = str ;", "\nint n = 10;", "\n\u8bf7\u8ba1\u7b97", "\nsizeof (str ) = \uff1f\uff081\uff09", "\nsizeof ( p ) = \uff1f\uff082\uff09", "\nsizeof ( n ) = \uff1f\uff083\uff09", "\nvoid Foo ( char str[100]){", "\n\u8bf7\u8ba1\u7b97", "\nsizeof( str ) = \uff1f\uff084\uff09", "\n}", "\nvoid *p = malloc( 100 );", "\n\u8bf7\u8ba1\u7b97", "\nsizeof ( p ) = \uff1f\uff085\uff09", "\n\u7b54\uff1a\uff081\uff0917 \uff082\uff094 \uff083\uff09 4 \uff084\uff094 \uff085\uff094", "3. \u56de\u7b54\u4e0b\u9762\u7684\u95ee\u9898. (4\u5206)", "\n(1).\u5934\u6587\u4ef6\u4e2d\u7684 ifndef/define/endif \u5e72\u4ec0\u4e48\u7528\uff1f\u9884\u5904\u7406", "\n\u7b54\uff1a\u9632\u6b62\u5934\u6587\u4ef6\u88ab\u91cd\u590d\u5f15\u7528", "\n(2). #include \u548c #include \u201cfilename.h\u201d \u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u7b54\uff1a\u524d\u8005\u7528\u6765\u5305\u542b\u5f00\u53d1\u73af\u5883\u63d0\u4f9b\u7684\u5e93\u5934\u6587\u4ef6\uff0c\u540e\u8005\u7528\u6765\u5305\u542b\u81ea\u5df1\u7f16\u5199\u7684\u5934\u6587\u4ef6\u3002", "\n(3).\u5728C++ \u7a0b\u5e8f\u4e2d\u8c03\u7528\u88ab C \u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u7684\u51fd\u6570\uff0c\u4e3a\u4ec0\u4e48\u8981\u52a0 extern \u201cC\u201d\u58f0\u660e\uff1f", "\n\u7b54\uff1a\u51fd\u6570\u548c\u53d8\u91cf\u88abC++\u7f16\u8bd1\u540e\u5728\u7b26\u53f7\u5e93\u4e2d\u7684\u540d\u5b57\u4e0eC\u8bed\u8a00\u7684\u4e0d\u540c\uff0c\u88abextern \u201cC\u201d\u4fee\u9970\u7684\u53d8\u91cf\u548c\u51fd\u6570\u662f\u6309\u7167C\u8bed\u8a00\u65b9\u5f0f\u7f16\u8bd1\u548c\u8fde\u63a5\u7684\u3002\u7531\u4e8e\u7f16\u8bd1\u540e\u7684\u540d\u5b57\u4e0d\u540c\uff0cC++\u7a0b\u5e8f\u4e0d\u80fd\u76f4\u63a5\u8c03\u7528C \u51fd\u6570\u3002C++\u63d0\u4f9b\u4e86\u4e00\u4e2aC \u8fde\u63a5\u4ea4\u6362\u6307\u5b9a\u7b26\u53f7extern\u201cC\u201d\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002", "\n(4). switch()\u4e2d\u4e0d\u5141\u8bb8\u7684\u6570\u636e\u7c7b\u578b\u662f?", "\n\u7b54\uff1a\u5b9e\u578b", "4. \u56de\u7b54\u4e0b\u9762\u7684\u95ee\u9898(6\u5206)", "\n(1).", "Void GetMemory(char **p, int num){", "\n*p = (char *)malloc(num);", "\n}", "\nvoid Test(void){", "\nchar *str = NULL;", "\nGetMemory(&str, 100);", "\nstrcpy(str, \u201chello\u201d);", "\nprintf(str);", "\n}", "\n\u8bf7\u95ee\u8fd0\u884cTest \u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n\u7b54\uff1a\u8f93\u51fa\u201chello\u201d", "\n(2).", "void Test(void){", "\nchar *str = (char *) malloc(100);", "\nstrcpy(str, \u201chello\u201d);", "\nfree(str);", "\nif(str != NULL){", "\nstrcpy(str, \u201cworld\u201d);", "\nprintf(str);", "\n}", "\n}", "\n\u8bf7\u95ee\u8fd0\u884cTest \u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n\u7b54\uff1a\u8f93\u51fa\u201cworld\u201d\uff0c\u56e0\u4e3afree(str)\u540e\u5e76\u672a\u6539\u53d8str\u6240\u6307\u7684\u5185\u5b58\u5185\u5bb9\u3002", "\n(3).", "char *GetMemory(void){", "\nchar p[] = \u201chello world\u201d;", "\nreturn p;", "\n}", "\nvoid Test(void){", "\nchar *str = NULL;", "\nstr = GetMemory();", "\nprintf(str);", "\n}", "\n\u8bf7\u95ee\u8fd0\u884cTest \u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n\u7b54\uff1a\u65e0\u6548\u7684\u6307\u9488\uff0c\u8f93\u51fa\u4e0d\u786e\u5b9a", "5. \u7f16\u5199strcat\u51fd\u6570(6\u5206)", "\n\u5df2\u77e5strcat\u51fd\u6570\u7684\u539f\u578b\u662fchar *strcat (char *strDest, const char *strSrc);", "\n\u5176\u4e2dstrDest \u662f\u76ee\u7684\u5b57\u7b26\u4e32\uff0cstrSrc \u662f\u6e90\u5b57\u7b26\u4e32\u3002", "\n\uff081\uff09\u4e0d\u8c03\u7528C++/C \u7684\u5b57\u7b26\u4e32\u5e93\u51fd\u6570\uff0c\u8bf7\u7f16\u5199\u51fd\u6570 strcat", "\n\u7b54\uff1a", "\nVC\u6e90\u7801\uff1a", "char * __cdecl strcat (char * dst, const char * src)", "\n{", "\nchar * cp = dst;", "\nwhile( *cp )", "\ncp++; /* find end of dst */", "\nwhile( *cp++ = *src++ ) ; /* Copy src to end of dst */", "\nreturn( dst ); /* return dst */", "\n}", "\n\uff082\uff09strcat\u80fd\u628astrSrc \u7684\u5185\u5bb9\u8fde\u63a5\u5230strDest\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u8981char * \u7c7b\u578b\u7684\u8fd4\u56de\u503c\uff1f", "\n\u7b54\uff1a\u65b9\u4fbf\u8d4b\u503c\u7ed9\u5176\u4ed6\u53d8\u91cf", "6.MFC\u4e2dCString\u662f\u7c7b\u578b\u5b89\u5168\u7c7b\u4e48\uff1f", "\n\u7b54\uff1a\u4e0d\u662f\uff0c\u5176\u5b83\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u5230CString\u53ef\u4ee5\u4f7f\u7528CString\u7684\u6210\u5458\u51fd\u6570Format\u6765\u8f6c\u6362", "7.C++\u4e2d\u4e3a\u4ec0\u4e48\u7528\u6a21\u677f\u7c7b\u3002", "\n\u7b54\uff1a(1)\u53ef\u7528\u6765\u521b\u5efa\u52a8\u6001\u589e\u957f\u548c\u51cf\u5c0f\u7684\u6570\u636e\u7ed3\u6784", "\n\uff082\uff09\u5b83\u662f\u7c7b\u578b\u65e0\u5173\u7684\uff0c\u56e0\u6b64\u5177\u6709\u5f88\u9ad8\u7684\u53ef\u590d\u7528\u6027\u3002", "\n\uff083\uff09\u5b83\u5728\u7f16\u8bd1\u65f6\u800c\u4e0d\u662f\u8fd0\u884c\u65f6\u68c0\u67e5\u6570\u636e\u7c7b\u578b\uff0c\u4fdd\u8bc1\u4e86\u7c7b\u578b\u5b89\u5168", "\n\uff084\uff09\u5b83\u662f\u5e73\u53f0\u65e0\u5173\u7684\uff0c\u53ef\u79fb\u690d\u6027", "\n\uff085\uff09\u53ef\u7528\u4e8e\u57fa\u672c\u6570\u636e\u7c7b\u578b", "8.CSingleLock\u662f\u5e72\u4ec0\u4e48\u7684\u3002", "\n\u7b54\uff1a\u540c\u6b65\u591a\u4e2a\u7ebf\u7a0b\u5bf9\u4e00\u4e2a\u6570\u636e\u7c7b\u7684\u540c\u65f6\u8bbf\u95ee", "9.NEWTEXTMETRIC \u662f\u4ec0\u4e48\u3002", "\n\u7b54\uff1a\u7269\u7406\u5b57\u4f53\u7ed3\u6784\uff0c\u7528\u6765\u8bbe\u7f6e\u5b57\u4f53\u7684\u9ad8\u5bbd\u5927\u5c0f", "10.\u7a0b\u5e8f\u4ec0\u4e48\u65f6\u5019\u5e94\u8be5\u4f7f\u7528\u7ebf\u7a0b\uff0c\u4ec0\u4e48\u65f6\u5019\u5355\u7ebf\u7a0b\u6548\u7387\u9ad8\u3002", "\n\u7b54\uff1a1\uff0e\u8017\u65f6\u7684\u64cd\u4f5c\u4f7f\u7528\u7ebf\u7a0b\uff0c\u63d0\u9ad8\u5e94\u7528\u7a0b\u5e8f\u54cd\u5e94", "\n2\uff0e\u5e76\u884c\u64cd\u4f5c\u65f6\u4f7f\u7528\u7ebf\u7a0b\uff0c\u5982C/S\u67b6\u6784\u7684\u670d\u52a1\u5668\u7aef\u5e76\u53d1\u7ebf\u7a0b\u54cd\u5e94\u7528\u6237\u7684\u8bf7\u6c42\u3002", "\n3\uff0e\u591aCPU\u7cfb\u7edf\u4e2d\uff0c\u4f7f\u7528\u7ebf\u7a0b\u63d0\u9ad8CPU\u5229\u7528\u7387", "\n4\uff0e\u6539\u5584\u7a0b\u5e8f\u7ed3\u6784\u3002\u4e00\u4e2a\u65e2\u957f\u53c8\u590d\u6742\u7684\u8fdb\u7a0b\u53ef\u4ee5\u8003\u8651\u5206\u4e3a\u591a\u4e2a\u7ebf\u7a0b\uff0c\u6210\u4e3a\u51e0\u4e2a\u72ec\u7acb\u6216\u534a\u72ec\u7acb\u7684\u8fd0\u884c\u90e8\u5206\uff0c\u8fd9\u6837\u7684\u7a0b\u5e8f\u4f1a\u5229\u4e8e\u7406\u89e3\u548c\u4fee\u6539\u3002", "\n\u5176\u4ed6\u60c5\u51b5\u90fd\u4f7f\u7528\u5355\u7ebf\u7a0b\u3002", "11.Windows\u662f\u5185\u6838\u7ea7\u7ebf\u7a0b\u4e48\u3002", "\n\u7b54\uff1a\u89c1\u4e0b\u4e00\u9898", "12.Linux\u6709\u5185\u6838\u7ea7\u7ebf\u7a0b\u4e48\u3002", "\n\u7b54\uff1a\u7ebf\u7a0b\u901a\u5e38\u88ab\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u4ee3\u7801\u7684\u4e0d\u540c\u6267\u884c\u8def\u7ebf\u3002\u4ece\u5b9e\u73b0\u65b9\u5f0f\u4e0a\u5212\u5206\uff0c\u7ebf\u7a0b\u6709\u4e24\u79cd\u7c7b\u578b\uff1a\u201c\u7528\u6237\u7ea7\u7ebf\u7a0b\u201d\u548c\u201c\u5185\u6838\u7ea7\u7ebf\u7a0b\u201d\u3002\u7528\u6237\u7ebf\u7a0b\u6307\u4e0d\u9700\u8981\u5185\u6838\u652f\u6301\u800c\u5728\u7528\u6237\u7a0b\u5e8f\u4e2d\u5b9e\u73b0\u7684\u7ebf\u7a0b\uff0c\u5176\u4e0d\u4f9d\u8d56\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u6838\u5fc3\uff0c\u5e94\u7528\u8fdb\u7a0b\u5229\u7528\u7ebf\u7a0b\u5e93\u63d0\u4f9b\u521b\u5efa\u3001\u540c\u6b65\u3001\u8c03\u5ea6\u548c\u7ba1\u7406\u7ebf\u7a0b\u7684\u51fd\u6570\u6765\u63a7\u5236\u7528\u6237\u7ebf\u7a0b\u3002\u8fd9\u79cd\u7ebf\u7a0b\u751a\u81f3\u5728\u8c61 DOS \u8fd9\u6837\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u4e5f\u53ef\u5b9e\u73b0\uff0c\u4f46\u7ebf\u7a0b\u7684\u8c03\u5ea6\u9700\u8981\u7528\u6237\u7a0b\u5e8f\u5b8c\u6210\uff0c\u8fd9\u6709\u4e9b\u7c7b\u4f3c Windows 3.x \u7684\u534f\u4f5c\u5f0f\u591a\u4efb\u52a1\u3002\u53e6\u5916\u4e00\u79cd\u5219\u9700\u8981\u5185\u6838\u7684\u53c2\u4e0e\uff0c\u7531\u5185\u6838\u5b8c\u6210\u7ebf\u7a0b\u7684\u8c03\u5ea6\u3002\u5176\u4f9d\u8d56\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u6838\u5fc3\uff0c\u7531\u5185\u6838\u7684\u5185\u90e8\u9700\u6c42\u8fdb\u884c\u521b\u5efa\u548c\u64a4\u9500\uff0c\u8fd9\u4e24\u79cd\u6a21\u578b\u5404\u6709\u5176\u597d\u5904\u548c\u7f3a\u70b9\u3002\u7528\u6237\u7ebf\u7a0b\u4e0d\u9700\u8981\u989d\u5916\u7684\u5185\u6838\u5f00\u652f\uff0c\u5e76\u4e14\u7528\u6237\u6001\u7ebf\u7a0b\u7684\u5b9e\u73b0\u65b9\u5f0f\u53ef\u4ee5\u88ab\u5b9a\u5236\u6216\u4fee\u6539\u4ee5\u9002\u5e94\u7279\u6b8a\u5e94\u7528\u7684\u8981\u6c42\uff0c\u4f46\u662f\u5f53\u4e00\u4e2a\u7ebf\u7a0b\u56e0 I/O \u800c\u5904\u4e8e\u7b49\u5f85\u72b6\u6001\u65f6\uff0c\u6574\u4e2a\u8fdb\u7a0b\u5c31\u4f1a\u88ab\u8c03\u5ea6\u7a0b\u5e8f\u5207\u6362\u4e3a\u7b49\u5f85\u72b6\u6001\uff0c\u5176\u4ed6\u7ebf\u7a0b\u5f97\u4e0d\u5230\u8fd0\u884c\u7684\u673a\u4f1a\uff1b\u800c\u5185\u6838\u7ebf\u7a0b\u5219\u6ca1\u6709\u5404\u4e2a\u9650\u5236\uff0c\u6709\u5229\u4e8e\u53d1\u6325\u591a\u5904\u7406\u5668\u7684\u5e76\u53d1\u4f18\u52bf\uff0c\u4f46\u5374\u5360\u7528\u4e86\u66f4\u591a\u7684\u7cfb\u7edf\u5f00\u652f\u3002", "\nWindows NT\u548cOS/2\u652f\u6301\u5185\u6838\u7ebf\u7a0b\u3002Linux \u652f\u6301\u5185\u6838\u7ea7\u7684\u591a\u7ebf\u7a0b", "13.C++\u4e2d\u4ec0\u4e48\u6570\u636e\u5206\u914d\u5728\u6808\u6216\u5806\u4e2d\uff0cNew\u5206\u914d\u6570\u636e\u662f\u5728\u8fd1\u5806\u8fd8\u662f\u8fdc\u5806\u4e2d\uff1f", "\n\u7b54\uff1a\u6808: \u5b58\u653e\u5c40\u90e8\u53d8\u91cf\uff0c\u51fd\u6570\u8c03\u7528\u53c2\u6570,\u51fd\u6570\u8fd4\u56de\u503c\uff0c\u51fd\u6570\u8fd4\u56de\u5730\u5740\u3002\u7531\u7cfb\u7edf\u7ba1\u7406", "\n\u5806: \u7a0b\u5e8f\u8fd0\u884c\u65f6\u52a8\u6001\u7533\u8bf7\uff0cnew \u548c  malloc\u7533\u8bf7\u7684\u5185\u5b58\u5c31\u5728\u5806\u4e0a", "\n\u8fd1\u5806\u8fd8\u662f\u8fdc\u5806\u4e0d\u662f\u5f88\u6e05\u695a\u3002", "14.\u4f7f\u7528\u7ebf\u7a0b\u662f\u5982\u4f55\u9632\u6b62\u51fa\u73b0\u5927\u7684\u6ce2\u5cf0\u3002", "\n\u7b54\uff1a\u610f\u601d\u662f\u5982\u4f55\u9632\u6b62\u540c\u65f6\u4ea7\u751f\u5927\u91cf\u7684\u7ebf\u7a0b\uff0c\u65b9\u6cd5\u662f\u4f7f\u7528\u7ebf\u7a0b\u6c60\uff0c\u7ebf\u7a0b\u6c60\u5177\u6709\u53ef\u4ee5\u540c\u65f6\u63d0\u9ad8\u8c03\u5ea6\u6548\u7387\u548c\u9650\u5236\u8d44\u6e90\u4f7f\u7528\u7684\u597d\u5904\uff0c\u7ebf\u7a0b\u6c60\u4e2d\u7684\u7ebf\u7a0b\u8fbe\u5230\u6700\u5927\u6570\u65f6\uff0c\u5176\u4ed6\u7ebf\u7a0b\u5c31\u4f1a\u6392\u961f\u7b49\u5019\u3002", "15\u51fd\u6570\u6a21\u677f\u4e0e\u7c7b\u6a21\u677f\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u7b54\uff1a\u51fd\u6570\u6a21\u677f\u7684\u5b9e\u4f8b\u5316\u662f\u7531\u7f16\u8bd1\u7a0b\u5e8f\u5728\u5904\u7406\u51fd\u6570\u8c03\u7528\u65f6\u81ea\u52a8\u5b8c\u6210\u7684\uff0c\u800c\u7c7b\u6a21\u677f\u7684\u5b9e\u4f8b\u5316\u5fc5\u987b\u7531\u7a0b\u5e8f\u5458\u5728\u7a0b\u5e8f\u4e2d\u663e\u5f0f\u5730\u6307\u5b9a\u3002", "16\u4e00\u822c\u6570\u636e\u5e93\u82e5\u51fa\u73b0\u65e5\u5fd7\u6ee1\u4e86\uff0c\u4f1a\u51fa\u73b0\u4ec0\u4e48\u60c5\u51b5\uff0c\u662f\u5426\u8fd8\u80fd\u4f7f\u7528\uff1f", "\n\u7b54\uff1a\u53ea\u80fd\u6267\u884c\u67e5\u8be2\u7b49\u8bfb\u64cd\u4f5c\uff0c\u4e0d\u80fd\u6267\u884c\u66f4\u6539\uff0c\u5907\u4efd\u7b49\u5199\u64cd\u4f5c\uff0c\u539f\u56e0\u662f\u4efb\u4f55\u5199\u64cd\u4f5c\u90fd\u8981\u8bb0\u5f55\u65e5\u5fd7\u3002\u4e5f\u5c31\u662f\u8bf4\u57fa\u672c\u4e0a\u5904\u4e8e\u4e0d\u80fd\u4f7f\u7528\u7684\u72b6\u6001\u3002", "17 SQL Server\u662f\u5426\u652f\u6301\u884c\u7ea7\u9501\uff0c\u6709\u4ec0\u4e48\u597d\u5904\uff1f", "\n\u7b54\uff1a\u652f\u6301\uff0c\u8bbe\u7acb\u5c01\u9501\u673a\u5236\u4e3b\u8981\u662f\u4e3a\u4e86\u5bf9\u5e76\u53d1\u64cd\u4f5c\u8fdb\u884c\u63a7\u5236\uff0c\u5bf9\u5e72\u6270\u8fdb\u884c\u5c01\u9501\uff0c\u4fdd\u8bc1\u6570\u636e\u7684\u4e00\u81f4\u6027\u548c\u51c6\u786e\u6027\uff0c\u884c\u7ea7\u5c01\u9501\u786e\u4fdd\u5728\u7528\u6237\u53d6\u5f97\u88ab\u66f4\u65b0\u7684\u884c\u5230\u8be5\u884c\u8fdb\u884c\u66f4\u65b0\u8fd9\u6bb5\u65f6\u95f4\u5185\u4e0d\u88ab\u5176\u5b83\u7528\u6237\u6240\u4fee\u6539\u3002\u56e0\u800c\u884c\u7ea7\u9501\u5373\u53ef\u4fdd\u8bc1\u6570\u636e\u7684\u4e00\u81f4\u6027\u53c8\u80fd\u63d0\u9ad8\u6570\u636e\u64cd\u4f5c\u7684\u8ff8\u53d1\u6027\u3002", "18\u5982\u679c\u6570\u636e\u5e93\u6ee1\u4e86\u4f1a\u51fa\u73b0\u4ec0\u4e48\u60c5\u51b5\uff0c\u662f\u5426\u8fd8\u80fd\u4f7f\u7528\uff1f", "\n\u7b54\uff1a\u89c116", "19 \u5173\u4e8e\u5185\u5b58\u5bf9\u9f50\u7684\u95ee\u9898\u4ee5\u53casizof()\u7684\u8f93\u51fa", "\n\u7b54\uff1a\u7f16\u8bd1\u5668\u81ea\u52a8\u5bf9\u9f50\u7684\u539f\u56e0\uff1a\u4e3a\u4e86\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6027\u80fd\uff0c\u6570\u636e\u7ed3\u6784\uff08\u5c24\u5176\u662f\u6808\uff09\u5e94\u8be5\u5c3d\u53ef\u80fd\u5730\u5728\u81ea\u7136\u8fb9\u754c\u4e0a\u5bf9\u9f50\u3002\u539f\u56e0\u5728\u4e8e\uff0c\u4e3a\u4e86\u8bbf\u95ee\u672a\u5bf9\u9f50\u7684\u5185\u5b58\uff0c\u5904\u7406\u5668\u9700\u8981\u4f5c\u4e24\u6b21\u5185\u5b58\u8bbf\u95ee\uff1b\u7136\u800c\uff0c\u5bf9\u9f50\u7684\u5185\u5b58\u8bbf\u95ee\u4ec5\u9700\u8981\u4e00\u6b21\u8bbf\u95ee\u3002", "20 int i=10, j=10, k=3; k*=i+j; k\u6700\u540e\u7684\u503c\u662f\uff1f", "\n\u7b54\uff1a60\uff0c\u6b64\u9898\u8003\u5bdf\u4f18\u5148\u7ea7\uff0c\u5b9e\u9645\u5199\u6210\uff1a k*=(i+j);\uff0c\u8d4b\u503c\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u6700\u4f4e", "21.\u5bf9\u6570\u636e\u5e93\u7684\u4e00\u5f20\u8868\u8fdb\u884c\u64cd\u4f5c,\u540c\u65f6\u8981\u5bf9\u53e6\u4e00\u5f20\u8868\u8fdb\u884c\u64cd\u4f5c,\u5982\u4f55\u5b9e\u73b0?", "\n\u7b54\uff1a\u5c06\u64cd\u4f5c\u591a\u4e2a\u8868\u7684\u64cd\u4f5c\u653e\u5165\u5230\u4e8b\u52a1\u4e2d\u8fdb\u884c\u5904\u7406", "22.TCP/IP \u5efa\u7acb\u8fde\u63a5\u7684\u8fc7\u7a0b?(3-way shake)", "\n\u7b54\uff1a\u5728TCP/IP\u534f\u8bae\u4e2d\uff0cTCP\u534f\u8bae\u63d0\u4f9b\u53ef\u9760\u7684\u8fde\u63a5\u670d\u52a1\uff0c\u91c7\u7528\u4e09\u6b21\u63e1\u624b\u5efa\u7acb\u4e00\u4e2a\u8fde\u63a5\u3002", "\n    \u7b2c\u4e00\u6b21\u63e1\u624b\uff1a\u5efa\u7acb\u8fde\u63a5\u65f6\uff0c\u5ba2\u6237\u7aef\u53d1\u9001syn\u5305(syn=j)\u5230\u670d\u52a1\u5668\uff0c\u5e76\u8fdb\u5165SYN_SEND\u72b6\u6001\uff0c\u7b49\u5f85\u670d\u52a1\u5668\u786e\u8ba4\uff1b", "\n\u7b2c\u4e8c\u6b21\u63e1\u624b\uff1a\u670d\u52a1\u5668\u6536\u5230syn\u5305\uff0c\u5fc5\u987b\u786e\u8ba4\u5ba2\u6237\u7684SYN\uff08ack=j+1\uff09\uff0c\u540c\u65f6\u81ea\u5df1\u4e5f\u53d1\u9001\u4e00\u4e2aSYN\u5305\uff08syn=k\uff09\uff0c\u5373SYN+ACK\u5305\uff0c\u6b64\u65f6\u670d\u52a1\u5668\u8fdb\u5165SYN_RECV\u72b6\u6001\uff1b", "\n    \u7b2c\u4e09\u6b21\u63e1\u624b\uff1a\u5ba2\u6237\u7aef\u6536\u5230\u670d\u52a1\u5668\u7684SYN\uff0bACK\u5305\uff0c\u5411\u670d\u52a1\u5668\u53d1\u9001\u786e\u8ba4\u5305ACK(ack=k+1)\uff0c\u6b64\u5305\u53d1\u9001\u5b8c\u6bd5\uff0c\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u8fdb\u5165ESTABLISHED\u72b6\u6001\uff0c\u5b8c\u6210\u4e09\u6b21\u63e1\u624b\u3002", "23.ICMP\u662f\u4ec0\u4e48\u534f\u8bae,\u5904\u4e8e\u54ea\u4e00\u5c42?", "\n\u7b54\uff1aInternet\u63a7\u5236\u62a5\u6587\u534f\u8bae\uff0c\u5904\u4e8e\u7f51\u7edc\u5c42\uff08IP\u5c42\uff09", "24.\u89e6\u53d1\u5668\u600e\u4e48\u5de5\u4f5c\u7684?", "\n\u7b54\uff1a\u89e6\u53d1\u5668\u4e3b\u8981\u662f\u901a\u8fc7\u4e8b\u4ef6\u8fdb\u884c\u89e6\u53d1\u800c\u88ab\u6267\u884c\u7684\uff0c\u5f53\u5bf9\u67d0\u4e00\u8868\u8fdb\u884c\u8bf8\u5982UPDATE\u3001 INSERT\u3001 DELETE \u8fd9\u4e9b\u64cd\u4f5c\u65f6\uff0c\u6570\u636e\u5e93\u5c31\u4f1a\u81ea\u52a8\u6267\u884c\u89e6\u53d1\u5668\u6240\u5b9a\u4e49\u7684SQL \u8bed\u53e5\uff0c\u4ece\u800c\u786e\u4fdd\u5bf9\u6570\u636e\u7684\u5904\u7406\u5fc5\u987b\u7b26\u5408\u7531\u8fd9\u4e9bSQL \u8bed\u53e5\u6240\u5b9a\u4e49\u7684\u89c4\u5219\u3002", "25.winsock\u5efa\u7acb\u8fde\u63a5\u7684\u4e3b\u8981\u5b9e\u73b0\u6b65\u9aa4?", "\n\u7b54\uff1a\u670d\u52a1\u5668\u7aef\uff1asocker()\u5efa\u7acb\u5957\u63a5\u5b57\uff0c\u7ed1\u5b9a\uff08bind\uff09\u5e76\u76d1\u542c\uff08listen\uff09\uff0c\u7528accept\uff08\uff09\u7b49\u5f85\u5ba2\u6237\u7aef\u8fde\u63a5\u3002", "\n\u5ba2\u6237\u7aef\uff1asocker()\u5efa\u7acb\u5957\u63a5\u5b57\uff0c\u8fde\u63a5\uff08connect\uff09\u670d\u52a1\u5668\uff0c\u8fde\u63a5\u4e0a\u540e\u4f7f\u7528send()\u548crecv\uff08\uff09\uff0c\u5728\u5957\u63a5\u5b57\u4e0a\u5199\u8bfb\u6570\u636e\uff0c\u76f4\u81f3\u6570\u636e\u4ea4\u6362\u5b8c\u6bd5\uff0cclosesocket()\u5173\u95ed\u5957\u63a5\u5b57\u3002", "\n\u670d\u52a1\u5668\u7aef\uff1aaccept\uff08\uff09\u53d1\u73b0\u6709\u5ba2\u6237\u7aef\u8fde\u63a5\uff0c\u5efa\u7acb\u4e00\u4e2a\u65b0\u7684\u5957\u63a5\u5b57\uff0c\u81ea\u8eab\u91cd\u65b0\u5f00\u59cb\u7b49\u5f85\u8fde\u63a5\u3002\u8be5\u65b0\u4ea7\u751f\u7684\u5957\u63a5\u5b57\u4f7f\u7528send()\u548crecv\uff08\uff09\u5199\u8bfb\u6570\u636e\uff0c\u76f4\u81f3\u6570\u636e\u4ea4\u6362\u5b8c\u6bd5\uff0cclosesocket()\u5173\u95ed\u5957\u63a5\u5b57\u3002", "26.\u52a8\u6001\u8fde\u63a5\u5e93\u7684\u4e24\u79cd\u65b9\u5f0f?", "\n\u7b54\uff1a\u8c03\u7528\u4e00\u4e2aDLL\u4e2d\u7684\u51fd\u6570\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a", "\n1\uff0e\u8f7d\u5165\u65f6\u52a8\u6001\u94fe\u63a5\uff08load-time dynamic linking\uff09\uff0c\u6a21\u5757\u975e\u5e38\u660e\u786e\u8c03\u7528\u67d0\u4e2a\u5bfc\u51fa\u51fd\u6570\uff0c\u4f7f\u5f97\u4ed6\u4eec\u5c31\u50cf\u672c\u5730\u51fd\u6570\u4e00\u6837\u3002\u8fd9\u9700\u8981\u94fe\u63a5\u65f6\u94fe\u63a5\u90a3\u4e9b\u51fd\u6570\u6240\u5728DLL\u7684\u5bfc\u5165\u5e93\uff0c\u5bfc\u5165\u5e93\u5411\u7cfb\u7edf\u63d0\u4f9b\u4e86\u8f7d\u5165DLL\u65f6\u6240\u9700\u7684\u4fe1\u606f\u53caDLL\u51fd\u6570\u5b9a\u4f4d\u3002", "\n2\uff0e\u8fd0\u884c\u65f6\u52a8\u6001\u94fe\u63a5\uff08run-time dynamic linking\uff09\uff0c\u8fd0\u884c\u65f6\u53ef\u4ee5\u901a\u8fc7LoadLibrary\u6216LoadLibraryEx\u51fd\u6570\u8f7d\u5165DLL\u3002DLL\u8f7d\u5165\u540e\uff0c\u6a21\u5757\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 GetProcAddress\u83b7\u53d6DLL\u51fd\u6570\u7684\u51fa\u53e3\u5730\u5740\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7\u8fd4\u56de\u7684\u51fd\u6570\u6307\u9488\u8c03\u7528DLL\u51fd\u6570\u4e86\u3002\u5982\u6b64\u5373\u53ef\u907f\u514d\u5bfc\u5165\u5e93\u6587\u4ef6\u4e86\u3002", "27.IP\u7ec4\u64ad\u6709\u90a3\u4e9b\u597d\u5904?\u7b54\uff1a Internet\u4e0a\u4ea7\u751f\u7684\u8bb8\u591a\u65b0\u7684\u5e94\u7528\uff0c\u7279\u522b\u662f\u9ad8\u5e26\u5bbd\u7684\u591a\u5a92\u4f53\u5e94\u7528\uff0c\u5e26\u6765\u4e86\u5e26\u5bbd\u7684\u6025\u5267\u6d88\u8017\u548c\u7f51\u7edc\u62e5\u6324\u95ee\u9898\u3002\u7ec4\u64ad\u662f\u4e00\u79cd\u5141\u8bb8\u4e00\u4e2a\u6216\u591a\u4e2a\u53d1\u9001\u8005\uff08\u7ec4\u64ad\u6e90\uff09\u53d1\u9001\u5355\u4e00\u7684\u6570\u636e\u5305\u5230\u591a\u4e2a\u63a5\u6536\u8005\uff08\u4e00\u6b21\u7684\uff0c\u540c\u65f6\u7684\uff09\u7684\u7f51\u7edc\u6280\u672f\u3002\u7ec4\u64ad\u53ef\u4ee5\u5927\u5927\u7684\u8282\u7701\u7f51\u7edc\u5e26\u5bbd\uff0c\u56e0\u4e3a\u65e0\u8bba\u6709\u591a\u5c11\u4e2a\u76ee\u6807\u5730\u5740\uff0c\u5728\u6574\u4e2a\u7f51\u7edc\u7684\u4efb\u4f55\u4e00\u6761\u94fe\u8def\u4e0a\u53ea\u4f20\u9001\u5355\u4e00\u7684\u6570\u636e\u5305\u3002\u6240\u4ee5\u8bf4\u7ec4\u64ad\u6280\u672f\u7684\u6838\u5fc3\u5c31\u662f\u9488\u5bf9\u5982\u4f55\u8282\u7ea6\u7f51\u7edc\u8d44\u6e90\u7684\u524d\u63d0\u4e0b\u4fdd\u8bc1\u670d\u52a1\u8d28\u91cf\u3002", "\u534e\u4e3aD\u5377\u6700\u540e\u56db\u5927\u9898", "\n1\u3001A1,A2\u2026.An\u548cB\u4ea4\u6362\u8d44\u6e90\uff0c\u6c42\u5199\u51faPV\u64cd\u4f5c\u7684\u5e8f\u5217", "\n2\u3001\u975e\u9012\u5f52\u5b9e\u73b0\u5e9f\u7269\u4e0d\u62c9\u5c4e\u6570\u5217.", "\n3\u3001\u6298\u534a\u67e5\u627e\u5e72\u5565\u7528\u7684\uff1f", "\n   \u5b9e\u73b0\u4e4b.", "\n4\u3001\u5b9e\u73b0\u6709\u5e8f\u94fe\u8868\u4e0a\u7684\u63d2\u5165", "\u534e\u4e3a\u6700\u540e\u4e09\u4e2a\u5927\u9898", "\n1.A,B,C,D\u56db\u4e2a\u8fdb\u7a0b\uff0cA\u5411buf\u91cc\u9762\u5199\u6570\u636e\uff0cB,C,D\u5411buf\u91cc\u9762\u8bfb\u6570\u636e\uff0c", "\n\u5f53A\u5199\u5b8c\uff0c\u4e14B\uff0cC\uff0cD\u90fd\u8bfb\u4e00\u6b21\u540e\uff0cA\u624d\u80fd\u518d\u5199\u3002\u7528P\uff0cV\u64cd\u4f5c\u5b9e\u73b0\u3002", "\n2.\u5c06\u5355\u5411\u94fe\u8868reverse\uff0c\u5982ABCD\u53d8\u6210DCBA\uff0c\u53ea\u80fd\u641c\u7d22\u94fe\u8868\u4e00\u6b21\u3002", "\n3.\u5c06\u4e8c\u53c9\u6811\u7684\u4e24\u4e2a\u5b69\u5b50\u6362\u4f4d\u7f6e\uff0c\u5373\u5de6\u53d8\u53f3\uff0c\u53f3\u53d8\u5de6\u3002\u4e0d\u80fd\u7528\u9012\u89c4\uff08\u53d8\u6001\uff01\uff09"], "title": "\u534e\u4e3aC++\u7b14\u8bd5\u9898(\u9644\u7b54\u6848)"},
{"contents": ["\u4e00\u3001", "\n\u5df2\u77e5\u7c7bstring\u7684\u539f\u578b\u4e3a", "\nclass String", "\n{", "\n public\uff1a", "\n     String(const char *str = NULL);            //\u666e\u901a\u6784\u9020\u51fd\u6570", "\n     String(const String &);                //\u62f7\u8d1d\u6784\u9020\u51fd\u6570", "\n     ~String(void);                             //\u6790\u6784\u51fd\u6570", "\n     String & operator = (const String &);  //\u8d4b\u503c\u6784\u9020\u51fd\u6570", "\n private:", "\n     char * m_data;                             //\u7528\u4e8e\u4fdd\u5b58\u5b57\u7b26\u4e32", "\n};", "\n\u8bf7\u7f16\u5199String\u7684\u4e0a\u8ff04\u4e2a\u51fd\u6570\u3002", "\n\u7b54\u6848\uff1a", "\n// String \u7684\u6790\u6784\u51fd\u6570", "\nString::~String(void) // 3 \u5206", "\n{", "\n delete [] m_data;", "\n// \u7531\u4e8em_data \u662f\u5185\u90e8\u6570\u636e\u7c7b\u578b\uff0c\u4e5f\u53ef\u4ee5\u5199\u6210delete m_data;", "\n}", "\nString::String(const char *str)", "\n{", "\n if(str==NULL)", "\n{", "\n m_data = new char[1]; // \u82e5\u80fd\u52a0NULL \u5224\u65ad\u5219\u66f4\u597d", "\n *m_data = \u2018{post.content}\u2019;", "\n }", "\nelse", "\n {", "\n int length = strlen(str);", "\n m_data = new char[length+1]; // \u82e5\u80fd\u52a0NULL \u5224\u65ad\u5219\u66f4\u597d", "\n strcpy(m_data, str);", "\n }", "\n}", "\n// \u62f7\u8d1d\u6784\u9020\u51fd\u6570", "\nString::String(const String &other)", "\n{", "\n int length = strlen(other.m_data);", "\n m_data = new char[length+1]; // \u82e5\u80fd\u52a0NULL \u5224\u65ad\u5219\u66f4\u597d", "\n strcpy(m_data, other.m_data);", "\n}", "\n// \u8d4b\u503c\u51fd\u6570", "\nString & String:operate =(const String &other)", "\n{", "\n// (1) \u68c0\u67e5\u81ea\u8d4b\u503c", "\nif(this == &other)", "\nreturn *this;", "\n// (2) \u91ca\u653e\u539f\u6709\u7684\u5185\u5b58\u8d44\u6e90", "\ndelete [] m_data;", "\n// \uff083\uff09\u5206\u914d\u65b0\u7684\u5185\u5b58\u8d44\u6e90\uff0c\u5e76\u590d\u5236\u5185\u5bb9", "\n int length = strlen(other.m_data);", "\nm_data = new char[length+1]; // \u82e5\u80fd\u52a0NULL \u5224\u65ad\u5219\u66f4\u597d", "\n strcpy(m_data, other.m_data);", "\n// \uff084\uff09\u8fd4\u56de\u672c\u5bf9\u8c61\u7684\u5f15\u7528", "\n return *this;", "\n}", "\n\u4e8c\uff1a\u6539\u9519\u9898\uff0c\u53ea\u80fd\u5728\u539f\u6765\u7684\u57fa\u7840\u4e0a\u589e\u52a0\u4ee3\u7801\uff0c\u4e0d\u80fd\u5220\u9664\u4ee3\u7801", "\n#include", "\n#include", "\nvoid foo(int age,char *b)", "\n{", "\n   b = (char *)malloc(64);", "\n   sprintf(b,\u201dYour Age is %d\u201d,age);", "\n}", "\nint main()", "\n{", "\n  char *f;", "\n  foo(23,f);", "\n  printf(\u201c%s\\n\u201d,f);", "\n}", "\n\u7b54\u6848", "\n#include", "\n#include", "\nvoid foo(int age,char **b)", "\n{", "\n   *b = (char *)malloc(64);", "\n   sprintf(*b,\u201dYour Age is %d\u201d,age);", "\n}", "\nint main()", "\n{", "\n  char **f;", "\n  foo(23,f);", "\n  printf(\u201c%s\\n\u201d,**f);", "\n  return 0;", "\n}", "\n\u8bf7\u95ee\u8be5\u7a0b\u5e8f\u7528\u7684\u662f\u8fdb\u7a0b\u65b9\u5f0f\u8fd8\u662f\u7ebf\u7a0b\u65b9\u5f0f\uff0c\u5e76\u8bf4\u660e\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b\u7684\u533a\u522b\uff1a", "\n\u8bf7\u95ee\u8be5\u7a0b\u5e8f\u8f93\u51fa\u4ec0\u4e48\u7ed3\u679c\uff1f", "\n\u65e0\u53c2\u8003\u7b54\u6848\uf04c", "\n\u56db\u3001constant pointer points for String", "\n   pointer points for constant string", "\n\u7b54\u6848\uff1a", "\n1\u3001constant pointer points for String\uff0c\u6307\u5411\u5b57\u7b26\u4e32\u7684\u9759\u6001\u6307\u9488\uff0c\u5373\u8be5\u6307\u9488\u53ea\u80fd\u6307\u5411\u8be5\u5b57\u7b26\u4e32\uff0c\u4f46\u5b57\u7b26\u4e32\u5185\u5bb9\u53ef\u4ee5\u6539\u53d8\uff1b", "\n2\u3001pointer points for constant string\uff0c\u6307\u5411\u9759\u6001\u5b57\u7b26\u4e32\u7684\u6307\u9488\uff0c\u5b57\u7b26\u4e32\u5185\u5bb9\u4e0d\u5f97\u6539\u53d8\uff0c\u4f46\u6307\u9488\u53ef\u4ee5\u79fb\u52a8\u3002", "\u4e94\u3001\u4e0b\u9762\u7b49\u4ef7\u7684\u662f\uff1a", "\nA int i=0", "\n    if(i)", "\n   {", "\n    printf(\u201chello,world\u201d);", "\n   }", "\n   B  int i=1;", "\n      int j=2;", "\n      if(i==1 || j==2)", "\n      {", "\n       printf(\u201chello,world\u201d);", "\n       }", "\n   C  Boolean b1=true;", "\n      Boolean b2=true;", "\n      if(b1==b2)", "\n      {", "\n       printf(\u201chello,world\u201d);", "\n     }", "\n    D  int i=1;", "\n      int j=2;", "\n      if(i==1 &| j==2)", "\n      {", "\n       printf(\u201chello,world\u201d);", "\n     }", "\n\u4e2a\u4eba\u4e0d\u592a\u660e\u767d&|  \u7684\u542b\u4e49\uff0c\u5bf9\u6b64\u9898\u4fdd\u6301\u6c89\u9ed8\uff0c\u6b22\u8fce\u5927\u5bb6\u7ed9\u51fa\u7b54\u6848\u3002", "\n\u516d\u3001\u6392\u5e8f\u4e8c\u53c9\u6811\u63d2\u5165\u4e00\u4e2a\u8282\u70b9\u6216\u53cc\u5411\u94fe\u8868\u7684\u5b9e\u73b0", "\n\u56db\uff5e\u516d\u4e3aIBM\u9762\u8bd5\u9898\u3002", "\n\u4e03\u3001\u6307\u9488++\u7684\u542b\u4e49\u548c\u7528\u6cd5", "\n\u7b54\u6848\uff1a", "\n\u6839\u636e\u6307\u9488\u6240\u6307\u5411\u7684\u7c7b\u578b\uff0c\u79fb\u5411\u4e0b\u4e00\u4e2a\u5355\u5143\u3002\u5982\uff1a\u5b57\u7b26\u4e32\u6307\u9488++\uff0c\u610f\u4e3a\u6307\u5411\u4e0b\u4e00\u4e2a\u5143\u7d20\u3002", "\n\u516b\u3001stack \u548cheap\u7684\u5206\u914d\uff0crt\uff0dos\u7684\u7279\u70b9\u3001\u540c\u6b65\u7684\u65b9\u5f0f", "\n\u4e5d\u3001\u600e\u6837\u907f\u514d\u5185\u5b58\u6cc4\u6f0f\u7684\u95ee\u9898", "\n\u7b54\u6848\uff1a", "\n\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\u4f7f\u7528\u5b8c\u6bd5\u4e4b\u540e\u53ca\u65f6\u56de\u6536\u3002", "\n\u5341\u3001\u7f16\u7a0b\u5b9e\u73b0\u5341\u8fdb\u5236\u6570\u8f6c\u5316\u4e3a\u5341\u516d\u8fdb\u5236\u8f93\u51fa\uff0c\u4e0d\u51c6\u7528\u4efb\u4f55\u5df2\u7ecf\u5b9a\u4e49\u7684\u5e93\u51fd\u6570\uff0c\u6bd4\u65b9\u8bf4String \uff0cMath\u3002int toHex(int )", "\n\u53c2\u8003\u7b54\u6848\uff1a", "\n#include ", "\u5341\u4e09\u3001\u5199\u4e00\u4e2a\u7a0b\u5e8f\u53ef\u4ee5\u7b97\u51fa\u5b57\u8282\u5728\u8ba1\u7b97\u673a\u4e2d\u7684\u5b58\u50a8\u662f\u7531\u5927\u5230\u5c0f\u8fd8\u662f\u6709\u5c0f\u5230\u5927\u3002", "\n\u5341\u56db\u3001\u4e00\u6bb5\u7a0b\u5e8f\uff0c\u5199\u51fa\u8f93\u51fa\u7ed3\u679c", "\n#include ", "\u7b54\u6848\uff1a", "\nA::print()\u201d", "\nB::print()\u201d", "\nC::print()\u201d", "\nA::print()\u201d", "\nB::print()\u201d", "\nB::print()\u201d", "\nA::print()\u201d", "\nA::print()\u201d", "\nA::print()\u201d", "\u5341\u4e94\u3001\u7ed9\u4e24\u4e2a\u53d8\u91cf,\u5982\u4f55\u627e\u51fa\u4e00\u4e2a\u5e26\u73af\u5355\u94fe\u8868\u4e2d\u662f\u4ec0\u4e48\u5730\u65b9\u51fa\u73b0\u73af\u7684\u3002\uff08\u7b54\u6848\u53c2\u8003expert C programming\uff09\u3002", "\u5148\u5224\u65ad\u6709\u73af\uff0c\u6b65\u957f\u4e3a1\u7684\u6307\u9488\u548c\u6b65\u957f\u4e3a2\u7684\u6307\u9488\u91cd\u5408\u7684\u5730\u65b9\u5c31\u662f\u73af\u5185\u7684\u4e00\u4e2a\u8282\u70b9\u3002", "\n\u4ee5\u6b64\u8282\u70b9\u4e3a\u8d77\u70b9\u7684\u6307\u9488\u548c\u6307\u5411\u5934\u8282\u70b9\u7684\u6307\u9488\u5747\u4ee5\u6b65\u957f1\u4e00\u8d77\u8d70\uff0c\u91cd\u5408\u7684\u5730\u65b9\u5c31\u662f\u73af\u51fa\u73b0\u7684\u8282\u70b9\u3002", "\n\u5341\uff5e\u5341\u4e94\u4e3aMS\u7b14\u8bd5\u9898\u3002", "\n\u5341\u516d\u3001\u5199\u4e00\u4e2a\u5e26\u53c2\u6570\u5b8fget_struct_addr_from_member_addr(p, stru, m)\uff0c", "\n\u80fd\u591f\u6839\u636e\u4efb\u610f\u7ed3\u6784\u5b9e\u4f53\u7684\u67d0\u4e00\u4e2a\u6210\u5458\u7684\u5730\u5740\uff0c\u7b97\u51fa\u8be5\u7ed3\u6784\u5b9e\u4f53\u7684\u5730\u5740\uff0c\u5176\u4e2d\u53c2\u6570p\u662f\u6307\u5411\u8be5", "\n\u6210\u5458\u7684\u6307\u9488\uff0cstru\u662f\u8be5\u7ed3\u6784\u4f53\uff0cm\u662f\u8be5\u6210\u5458\u3002\uff08SUN\u8bd5\u9898\uff09", "return (struct stru*)(p \u2013 ( (int)&((struct stru *)0)->p));", "\n\u5341\u4e03\u3001\u7ed9\u4e00\u4e2a\u51fd\u6570", "\nint main(){", "\n    int i, n=20;", "\n    for(i=0;i", "\n        printf(\"-\");", "\n    return 0;", "\n}", "\n\u8981\u6c42\u66ff\u6362\u3001\u589e\u52a0\u6216\u8005\u51cf\u5c11\u4e00\u4e2a\u5b57\u7b26\uff0c\u4f7f\u8be5\u7a0b\u5e8f\u53ef\u4ee5\u6253\u51fa20\u4e2a\u201c-\u201d\u53f7\uff0c\u5e76\u8981\u6c42\u5199\u51fa\u4e09\u79cd\u89e3\u6cd5", "\n\u3002\uff08sun\u8bd5\u9898\uff09", "\n\u53c2\u8003\uff1a", "\n1\u3002i-- \u6362\u6210 n--", "\n2\u3002i", "\n\u5341\u516b\u3001\u89e3\u91ca typedef char (*FUNC)(int, char*)\u7684\u542b\u4e49", "\n\u53c2\u8003\u7b54\u6848\uff1a", "\n\u4e00\u4e2a\u51fd\u6570\u6307\u9488\uff0c\u51fd\u6570\u6709\u4e24\u4e2a\u53c2\u6570\uff0cint \uff0cchar*\uff0c\u8fd4\u56de\u503c\u4e3achar\u578b\u3002", "\n\u5341\u4e5d\u3001\u95ee#include\uff1cabc.h\uff1e \u548c#include \"abc.h\"\u7684\u533a\u522b\uff0c#define MAX_NUM 10 \u548c const int", "\nMAX_NUM=10\u533a\u522b", "\n\u53c2\u8003\u7b54\u6848\uff1a", "\n#include\uff1cabc.h\uff1e\uff0c\u4ece\u6807\u51c6\u5e93\u51fd\u6570\u4e2d\u5f00\u59cb\u641c\u7d22\uff1b#include \"abc.h\"\uff0c\u4ece\u7528\u6237\u5de5\u4f5c\u8def\u5f84\u5f00\u59cb\u641c\u7d22\uff0c\u641c\u7d22\u4e0d\u5230\uff0c\u518d\u5230\u5e93\u51fd\u6570\u4e2d\u641c\u7d22\u3002", "\n#define MAX_NUM 10 \uff0c\u6ca1\u6709\u6570\u636e\u7c7b\u578b\uff0c\u7f16\u8bd1\u5668\u4e0d\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\uff0c\u76f4\u63a5\u66ff\u6362\uff1b", "\nconst int\u3000MAX_NUM=10\uff0c\u4e3aint\u578b\u9759\u6001\u53d8\u91cf\u3002", "\u4e8c\u5341\u3001\u95ee\u7528\u4ec0\u4e48\u65b9\u6cd5\u53ef\u4ee5\u907f\u514d\u4e00\u4e9b\u6f5c\u5728\u9519\u8bef\uff0c\u6bd4\u5982if( myvar = 3)\u8fd9\u4e00\u7c7b\u7f16\u7a0b\u89c4\u8303\u7684\u95ee\u9898\uff1f", "\n\u7528 if( 3 = myvar)\u5c31\u53ef\u4ee5\u5728\u7f16\u8bd1\u65f6\u62a5\u9519", "\n\u5341\u516d\uff5e\u4e8c\u5341\u4e3aSUN\u7b14\u8bd5\u9898\u3002", "\n\u4e8c\u5341\u4e00\u3001\u7528\u72b6\u6001\u673a\u5b9e\u73b010010\u7801\u7684\u63a2\u6d4b\uff0c\u5982x=1001001000 z=0000100100\uff08\u8f93\u51fa\uff09", "\n\u4e8c\u5341\u4e8c\u3001\u7ed9\u4e00\u4e2a\u6570\u7ec4src[10]\u6392\u5e8f\uff0c\u7528\u4e24\u79cd\u65b9\u6cd5\uff0c\u5e76\u6bd4\u8f83", "\n\u4e8c\u5341\u4e09\u3001c / c++ \u7684\u4e0d\u540c", "\n \u65b0\u7684\u6ce8\u91ca\u98ce\u683c\uff0c\u53d8\u91cf\u4f5c\u7528\u57df\uff0c\u51fd\u6570\u91cd\u8f7d\uff0c\u64cd\u4f5c\u7b26\u91cd\u8f7d\uff0c\u7f3a\u7701\u53c2\u6570\uff0c\u6309\u5f15\u7528\u4f20\u9001\uff0c\u5185", "\n\u8054\u51fd\u6570\u3001\u6a21\u7248\u7b49\u3002", "\n\u4e8c\u5341\u56db\u3001run time environemnt \u7684\u5e94\u7528\u9886\u57df\uff0c\u5e76\u7ed9\u4e88\u89e3\u91ca", "\n\u4e8c\u5341\u4e94\u3001\u4f7f\u7528\u4ee3\u7801\u6216\u8005\u5b8f\u5c06\u5341\u8fdb\u5236\u8f6c\u5316\u4e3a\u5341\u516d\u8fdb\u5236\u683c\u5f0f", "\n\u4e8c\u5341\u516d\u3001\u5b9e\u65f6\u5d4c\u5165\u7cfb\u7edf\u4e2d\uff0c\u4e24\u4e2a\u4efb\u52a1\u540c\u65f6\u8bbf\u95eeRS232c port\uff0c\u8bbe\u8ba1\u4e00\u4e2a\u5171\u6709\u7684\u5b50\u7a9c\u8f6c\u53d1\u2026\u2026", "\n\u4e8c\u5341\u4e03\u3001\u591a\u4efb\u52a1\u5b9e\u65bd\u7cfb\u7edf\u4e2d\uff0c\u4e00\u4e2a\u4efb\u52a1\u6709\u591a\u5c11\u79cd\u72b6\u6001\uff1f\u63cf\u8ff0\u4e00\u4e2a\u7cfb\u7edf\u600e\u4e48\u5de5\u4f5c", "\n\u4e8c\u5341\u516b\u3001\u9009\u62e9\u9898\uff1achar *p,*q=\"i am\",*g=\"Chanese!\"", "\nstrcpy(p,q);", "\nstrcat(p,g);", "\nprintf(\"%s\",p);", "\na.i am b.i amChanese! c.i am Chanese! d\u90fd\u4e0d\u662f", "\n\u4e8c\u5341\u4e5d\u3001\u5bf9\u4f18\u5148\u7ea7\u62a2\u5360\u8c03\u5ea6\u6cd5\u548c\u65f6\u95f4\u7247\u8f6e\u8f6c\u8c03\u5ea6\u6cd5\u7684\u7406\u89e3", "\n\u4e09\u5341\u3001\u54c8\u606f\u8868\u67e5\u627e\u7684\u4f18\u7f3a\u70b9\uff0c\u5e76\u5217\u51fa\u4f60\u6240\u77e5\u9053\u7684\u54c8\u5e0c\u51fd\u6570\u6784\u9020\u6cd5", "\u4e09\u5341\u4e00\u3001\u6709\u4e24\u4e2a\u65e0\u5e8f\u94fe\u8868A1\u548cA2\uff0c\u5199\u51fa\u7a0b\u5e8f\u628aA1\u548cA2\u5408\u5e76\u6210\u4e00\u4e2a\u9012\u589e\u7684\u94fe\u8868\u3002", "\n\u4e09\u5341\u4e8c\u3001a++, ++a\u4e2da\u7684\u503c\u662f\u5148\u52a0\u8fd8\u662f\u540e\u52a0\u7684", "\n\u4e09\u5341\u4e09\u3001\u51fd\u6570\u6808\u4e2d\u5206\u914d\u7a7a\u95f4\u4e0e\u5168\u5c40\u5806\u4e2d\u5206\u914d\u7a7a\u95f4\u7684\u533a\u522b\u548c\u8054\u7cfb", "\n\u4e09\u5341\u56db\u3001\u51fd\u6570\u4f53\u5185 static\u58f0\u660e\u7684\u53d8\u91cf\u7684\u7279\u6b8a\u610f\u4e49", "\n\u4e09\u5341\u4e94\u3001Struct xxx xx[20]    \u8fd9\u4e2a\u662f\u9884\u5148\u7533\u8bf7\u4e86\u5185\u5b58\u4e48\uff1f", "\n\u53c2\u8003\u7b54\u6848\uff1a\u662f\u7684\uff0cstruct xxx xx[20]\u786e\u5b9e\u5df2\u7ecf\u7533\u8bf7\u4e86\u5185\u5b58\uff0c\u800cstruct xxx *xx[20]\u5219\u4e0d", "\n\u662f\u4e8b\u5148\u7533\u8bf7\u5185\u5b58\uff0c\u4ec5\u8868\u793a\u7533\u660e\u4e00\u4e0b\uff0c\u540e\u8005\u9700\u8981malloc\u7533\u8bf7\u5185\u5b58\u3002", "\n\u4e09\u5341\u516d\u3001char * p;", "\n  p = \u201css\u201d;", "\n  for (; *p != 0 ; p++)", "\n        *p = 0", "\n  \u95ee\u6b64\u65f6p\u7684\u503c\u662f\u591a\u5c11\uff1f", "\n\u53c2\u8003\u7b54\u6848\uff1achar * \u7684\u5206\u914d\u662f\u5728\u9759\u6001\u533a\uff0c\u5f53\u4f5c\u5e38\u91cf\u5bf9\u5f85\uff0c\u8d4b\u503c\u540e\u5c31\u4e0d\u53ef\u4ee5\u4fee\u6539\uff0c\u8fd9\u662f\u5b57\u7b26", "\n\u4e32\u7684\u7528\u6cd5\uff0c\u5982\u679c\u6307\u5411\u6570\u7ec4\u5c31\u53e6\u5f53\u522b\u8bba\u3002", "\n\u8fd9\u4e2a\u7a0b\u5e8f\u7684\u9519\u8bef,\u9996\u5148\u5b57\u7b26\u4e32\u7ed3\u675f\u8981\u6bd4\u8f83'\\0'\u800c\u4e0d\u662f0\uff0c\u53e6\u5916p\u6307\u5411const string\u4e0d\u80fd", "\n\u8d4b\u503c\u3002", "\n\u4e09\u5341\u4e03\u3001char *string;", "\n  string = \u201cI am ok\u201d", "\n  \u8fd9\u4e2a\u8bed\u53e5\u6709\u95ee\u9898\u4e48\uff1f \u6ca1\u6709\uff1f", "\n\u4e09\u5341\u516b\u3001\u5173\u4e8e\u5b9e\u73b0swap\u7684\u65b9\u6cd5\uff1a", "\n    int p=1, q=2;", "\n    swap(&p , &q);", "\n\u4e0b\u9762\u4e09\u4e2a\u51fd\u6570 \uff0c\u54ea\u4e2a\u662f\u6b63\u786e\u7684\uff1f\uff08\u53c2\u8003\u7b54\u6848\uff1a1\uff09", "\n1\u3001void swap (int *p, *q) {", "\n    int temp;", "\n    temp = *p;", "\n    *p = *q;", "\n    *q = temp", "\n}", "\n2\u3001void swap(int *p, *q) {", "\n    int *temp;", "\n    *temp = *p;", "\n    *p = *q;", "\n    *q = *temp;", "\n}", "\n3\u3001void swap(int*p, *q) {", "\n    int *temp;", "\n     temp = p;", "\n    p = q;", "\n    p = temp;", "\n}", "\n4\u3001main() {", "\n    swap(a, b);", "\n}", "\nswap (int p, int q) {", "\n    int temp;", "\n    temp = p;", "\n    p = q;", "\n    q = temp;", "\n}", "\n\u4e09\u5341\u4e5d\u3001\u5168\u5c40\u53d8\u91cf\u88abstatic\u53d8\u91cf\u91cd\u8f7d\uff0c\u8fdb\u884c\u5206\u6790\u3002", "\n\u6709\u5982\u4e0bC\u7a0b\u5e8f\uff1a", "\n#include "], "title": "C++\u7b14\u8bd5\u9898\uff08\u5341\u516d\uff09"},
{"contents": ["\u96c5\u864e\u7b14\u8bd5\u9898", "\n\u8f9b\u8f9b\u82e6\u82e6\u628a\u9898\u505a\u5b8c\uff0c\u7cfb\u7edf\u63d0\u793a\u8bf4\u201c\u7531\u4e8e\u957f\u65f6\u95f4\u672a\u64cd\u4f5c\uff0c\u7cfb\u7edf\u5931\u53bb\u8054\u7cfb\u201d\uff0c\u827e\u20261C E(` ? ` M", "\n\u53ef\u80fd\u6bcf\u4e2a\u4eba\u7684\u9898\u662f\u968f\u673a\u7684\u5427*j_ w1U*z)J", "\nQuestion 1. (\u5355\u9009)", "\n\u5728\u987a\u5e8f\u8868(3,6,8,10,12,15,16,18,21,25,30)\u4e2d,\u7528\u4e8c\u5206\u6cd5\u67e5\u627e\u5173\u952e\u7801\u503c11,\u6240\u9700\u7684\u5173\u952e\u7801\u6bd4", "\n\u8f83\u6b21\u6570\u4e3a(3)", "\n 1. 2", "\n2. 3", "\n3. 4", "\n4. 5", "\nQuestion 2. (\u5355\u9009)", "\n\u8bbe\u6563\u5217\u8868\u7684\u5b58\u50a8\u7a7a\u95f4\u5927\u5c0f\u4e3a19,\u6240\u7528\u6563\u5217\u51fd\u6570\u4e3ah(key)=key mod 19,\u7528\u5f00\u5730\u5740\u7ebf\u6027\u63a2\u67e5\u6cd5\u89e3", "\n\u51b3\u78b0\u649e\u3002\u6563\u5217\u8868\u7684\u5f53\u524d", "\n\u72b6\u6001\u5982\u4e0b:0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 190 194 768 559 582 39", "\n3 208.\u73b0\u8981\u5c06\u5173\u952e\u7801", "\n\u503c75\u63d2\u5165\u5230\u8be5\u6563\u5217\u8868\u4e2d,\u5176\u5730\u5740\u5e94\u4e3a (1)", "\n 1. 1", "\n2. 11", "\n3. 5", "\n4. 15", "\nQuestion 3. (\u5355\u9009)", "\n\u4f5c\u4e1a\u7ba1\u7406\u7684\u4e3b\u8981\u4efb\u52a1\u5305\u62ec\u4f5c\u4e1a\u8f93\u5165\u3001\u4f5c\u4e1a\u5904\u7406\u548c\u4f5c\u4e1a\u8f93\u51fa\u3002\u5176\u4e2d\u4f5c\u4e1a\u5904\u7406\u7684\u5de5\u4f5c\u662f\u2160.\u4f5c\u4e1a", "\n\u8c03\u5ea6 \u2161.\u4f5c\u4e1a\u63a7\u5236 \u2162.", "\n\u4f5c\u4e1a\u540e\u5907 (3)", "\n 1. \u53ea\u6709\u2160", "\n2. \u53ea\u6709\u2161", "\n3. \u2160\u548c\u2161", "\n4. \u90fd\u662f", "\nQuestion 4. (\u5355\u9009)", "\n\u7cfb\u7edf\u4e3a\u4e86\u7ba1\u7406\u6587\u4ef6,\u8bbe\u7f6e\u4e86\u4e13\u95e8\u7684\u6570\u636e\u7ed3\u6784\u2014-\u6587\u4ef6\u63a7\u5236\u5757(FC\u3002FCB\u662f\u5728\u6267\u884c\u4e0b\u5217\u54ea\u4e00\u4e2a\u7cfb", "\n\u7edf\u8c03\u7528\u65f6\u5efa\u7acb\u7684? (1)", "\n 1. create", "\n2. open", "\n3. read", "\n4. write", "\nQuestion 5. (\u5355\u9009)", "\n\u4e0b\u9762\u5173\u4e8e\u901a\u9053\u7684\u53d9\u8ff0\u4e2d,\u6b63\u786e\u7684\u662f\u2160.\u901a\u9053\u76f8\u5f53\u4e8e\u4e00\u4e2a\u529f\u80fd\u7b80\u5355\u7684\u5904\u7406\u673a\u2161.\u901a\u9053\u5b8c\u6210\u6570\u636e\u8f93", "\n\u5165\u8f93\u51fa\u5de5\u4f5c\u2162.\u901a\u9053\u4e0e", "\nCPU\u5171\u7528\u4e00\u4e2a\u5185\u5b58 (4)", "\n 1. \u2160\u548c\u2161", "\n2. \u2160\u548c\u2162", "\n3. \u2161\u548c\u2162", "\n4. \u90fd\u662f", "\nQuestion 6. (\u5355\u9009)", "\n\u4e92\u64cd\u4f5c\u6027\u662f\u6307\u5728\u4e0d\u540c\u73af\u5883\u4e0b\u7684\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u76f8\u4e92\u64cd\u4f5c,\u4ea4\u6362\u4fe1\u606f\u3002\u8981\u4f7f\u91c7\u7528\u4e0d\u540c\u6570\u636e\u683c\u5f0f\u7684", "\n\u5404\u79cd\u8ba1\u7b97\u673a\u4e4b\u95f4\u80fd\u591f\u76f8", "\n\u4e92\u7406\u89e3,\u8fd9\u4e00\u529f\u80fd\u662f\u7531\u4e0b\u9762\u54ea\u4e00\u5c42\u6765\u5b9e\u73b0\u7684? (2)", "\n 1. \u5e94\u7528\u5c42", "\n2. \u8868\u793a\u5c42", "\n3. \u4f1a\u8bdd\u5c42", "\n4. \u4f20\u8f93\u5c42", "\nQuestion 7. (\u5355\u9009)", "\n\u5728UNIX\u7684Shell\u7a0b\u5e8f\u4e2d,\u53ef\u4ee5\u4f7f\u7528\u4f4d\u7f6e\u53d8\u91cf\u3002\u82e5\u8981\u6307\u660eShell\u5f15\u7528\u7684\u6700\u8fd1\u540e\u53f0\u8fdb\u7a0b\u7684\u53f7\u7801,\u53ef", "\n\u4ee5\u4f7f\u7528\u4f4d\u7f6e\u53d8\u91cf (2)", "\n 1. $$", "\n2. $!", "\n3. $#", "\n4. $-", "\nQuestion 8. (\u5355\u9009)", "\n\u8bbe\u4e8c\u53c9\u6811\u6839\u7ed3\u70b9\u7684\u5c42\u6b21\u4e3a0\uff0c\u4e00\u68f5\u6df1\u5ea6(\u9ad8\u5ea6)\u4e3ak\u7684\u6ee1\u4e8c\u53c9\u6811\u548c\u540c\u6837\u6df1\u5ea6\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\u5404\u6709", "\nf\u4e2a\u7ed3\u70b9\u548cc\u4e2a\u7ed3\u70b9\uff0c\u4e0b\u5217", "\n\u5173\u7cfb\u5f0f\u4e0d\u6b63\u786e\u7684\u662f\uff1a (2)", "\n 1. f>\uff1dc", "\n2. c>f", "\n3. f=2k+1-1", "\n4. C>2k-1", "\nQuestion 9. (\u5355\u9009)", "\n\u5355\u94fe\u8868\u7684\u6bcf\u4e2a\u7ed3\u70b9\u4e2d\u5305\u62ec\u4e00\u4e2a\u6307\u9488link\uff0c\u5b83\u6307\u5411\u8be5\u7ed3\u70b9\u7684\u540e\u7ee7\u7ed3\u70b9\u3002\u73b0\u8981\u5c06\u6307\u9488q\u6307\u5411\u7684\u65b0", "\n\u7ed3\u70b9\u63d2\u5165\u5230\u6307\u9488p\u6307\u5411\u7684", "\n\u5355\u94fe\u8868\u7ed3\u70b9\u4e4b\u540e\uff0c\u4e0b\u9762\u7684\u64cd\u4f5c\u5e8f\u5217\u4e2d\u54ea\u4e00\u4e2a\u662f\u6b63\u786e\u7684\uff1f (3)", "\n 1. q:=p^.link; p^.link:=q^.link", "\n2. p^.link:=q^.link; q:=P^.link", "\n3. q^.link:=p^.link; p^.link:=q;", "\n4. p^.link:=q; q^.link:=p^,link", "\nQuestion 10. (\u5355\u9009)", "\n\u67d0\u4e8c\u53c9\u6811\u7ed3\u70b9\u7684\u5bf9\u79f0\u5e8f\u5e8f\u5217\u4e3aA\u3001B\u3001C\u3001D\u3001E\u3001F\u3001G\uff0c\u540e\u5e8f\u5e8f\u5217\u4e3aB\u3001D\u3001C\u3001A\u3001F\u3001G\u3001E\u3002", "\n\u8be5\u4e8c\u53c9\u6811\u7ed3\u70b9\u7684\u524d\u5e8f\u5e8f", "\n\u5217\u4e3a  (2)", "\n 1. E\u3001G\u3001F\u3001A\u3001C\u3001D\u3001B", "\n2. E\u3001A\u3001C\u3001B\u3001D\u3001G\u3001F", "\n3. E\u3001A\u3001G\u3001C\u3001F\u3001B\u3001D", "\n4. E\u3001G\u3001A\u3001C\u3001D\u3001F\u3001B", "\nQuestion 11. (\u5355\u9009)", "\n\u67d0\u4e8c\u53c9\u6811\u7ed3\u70b9\u7684\u5bf9\u79f0\u5e8f\u5e8f\u5217\u4e3aA\u3001B\u3001C\u3001D\u3001E\u3001F\u3001G\uff0c\u540e\u5e8f\u5e8f\u5217\u4e3aB\u3001D\u3001C\u3001A\u3001F\u3001G\u3001E\u3002", "\n\u8be5\u4e8c\u53c9\u6811\u5bf9\u5e94\u7684\u6811\u6797\u5305", "\n\u62ec\u591a\u5c11\u68f5\u6811\uff1f (2)", "\n 1. 1", "\n2. 2", "\n3. 3", "\n4. 4", "\nQuestion 12. (\u5355\u9009)", "\n\u67d0\u4e8c\u53c9\u6811\u7ed3\u70b9\u7684\u5bf9\u79f0\u5e8f\u5e8f\u5217\u4e3aA\u3001B\u3001C\u3001D\u3001E\u3001F\u3001G\uff0c\u540e\u5e8f\u5e8f\u5217\u4e3aB\u3001D\u3001C\u3001A\u3001F\u3001G\u3001E\u3002", "\n\u8be5\u4e8c\u53c9\u6811\u5bf9\u5e94\u7684\u6811\u6797\u7ed3", "\n\u70b9\u7684\u5c42\u6b21\u6b21\u5e8f\u5e8f\u5217\u4e3a  (1)", "\n 1. E\u3001G\u3001F\u3001A\u3001C\u3001D\u3001B", "\n2. E\u3001A\u3001C\u3001B\u3001D\u3001G\u3001F", "\n3. E\u3001A\u3001G\u3001C\u3001F\u3001B\u3001D", "\n4. E\u3001G\u3001A\u3001C\u3001D\u3001F\u3001B", "\nQuestion 13. (\u5355\u9009)", "\n\u5047\u8bbe\u5c31\u7eea\u961f\u5217\u4e2d\u670910\u4e2a\u8fdb\u7a0b\uff0c\u7cfb\u7edf\u5c06\u65f6\u95f4\u7247\u8bbe\u4e3a200ms\uff0c CPU\u8fdb\u884c\u8fdb\u7a0b\u5207\u6362\u8981\u82b1\u8d3910ms\u3002\u5219", "\n\u7cfb\u7edf\u5f00\u9500\u6240\u5360\u7684\u6bd4\u7387\u7ea6", "\n\u4e3a  (2)", "\n 1. 1%", "\n2. 5%", "\n3. 10%", "\n4. 20%", "\nQuestion 14. (\u5355\u9009)", "\n\u957f\u5ea6\u76f8\u540c\u4f46\u683c\u5f0f\u4e0d\u540c\u76842\u79cd\u6d6e\u70b9\u6570\uff0c\u5047\u8bbe\u524d\u8005\u9636\u7801\u957f\u3001\u5c3e\u6570\u77ed\uff0c\u540e\u8005\u9636\u7801\u77ed\u3001\u5c3e\u6570\u957f\uff0c\u5176\u5b83", "\n\u89c4\u5b9a\u5747\u76f8\u540c\uff0c\u5219\u5b83\u4eec\u53ef", "\n\u8868\u793a\u7684\u6570\u7684\u8303\u56f4\u548c\u7cbe\u5ea6\u4e3a\uff1a (2)", "\n 1. \u4e24\u8005\u53ef\u8868\u793a\u7684\u6570\u7684\u8303\u56f4\u548c\u7cbe\u5ea6\u76f8\u540c", "\n2. \u524d\u8005\u53ef\u8868\u793a\u7684\u6570\u7684\u8303\u56f4\u5927\u4f46\u7cbe\u5ea6\u4f4e", "\n3. \u540e\u8005\u53ef\u8868\u793a\u7684\u6570\u7684\u8303\u56f4\u5927\u4e14\u7cbe\u5ea6\u9ad8", "\n4. \u524d\u8005\u53ef\u8868\u793a\u7684\u6570\u7684\u8303\u56f4\u5927\u4e14\u7cbe\u5ea6\u9ad8", "\nQuestion 15. (\u5355\u9009)", "\n\u6240\u8c13\u201c\u53d8\u53f7\u64cd\u4f5c\u201d\u662f\u6307\u5c06\u4e00\u4e2a\u6574\u6570\u53d8\u6210\u7edd\u5bf9\u503c\u76f8\u540c\u4f46\u7b26\u53f7\u76f8\u53cd\u7684\u53e6\u4e00\u4e2a\u6574\u6570\u3002\u5047\u8bbe\u4f7f\u7528\u8865", "\n\u7801\u8868\u793a\u76848\u4f4d\u6574\u6570", "\nX=10010101\uff0c\u5219\u7ecf\u8fc7\u53d8\u53f7\u64cd\u4f5c\u540e\u7ed3\u679c\u4e3a\uff1a(4)", "\n 1. 1101010", "\n2. 10101", "\n3. 11101010", "\n4. 1101011", "\nQuestion 16. (\u5355\u9009)", "\n\u8bbe\u6709\u4e00\u4e2a\u7528\u6570\u7ec4Q[1..m\u300d\u8868\u793a\u7684\u73af\u5f62\u961f\u5217\uff0c\u7ea6\u5b9af\u4e3a\u5f53\u524d\u961f\u5934\u5143\u7d20\u5728\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\uff0cr\u4e3a\u961f", "\n\u5c3e\u5143\u7d20\u7684\u540e\u4e00\u4f4d\u7f6e(\u6309\u987a", "\n\u65f6\u9488\u65b9\u5411)\uff0c\u82e5\u961f\u5217\u975e\u7a7a\uff0c\u5219\u8ba1\u7b97\u961f\u5217\u4e2d\u5143\u7d20\u4e2a\u6570\u7684\u516c\u5f0f\u5e94\u4e3a\uff1a(2)", "\n 1. r-f", "\n2. (m+r-f) mod m", "\n3. (m-r+f)mod m", "\n4. (m-r-f) mod m", "\nQuestion 17. (\u5355\u9009)", "\n\u8ba1\u7b97\u673a\u6700\u4e3b\u8981\u7684\u5de5\u4f5c\u7279\u70b9\u662f(2)", "\n 1. \u5b58\u50a8\u7a0b\u5e8f\u4e0e\u81ea\u52a8\u63a7\u5236", "\n2. \u9ad8\u901f\u5ea6\u4e0e\u9ad8\u7cbe\u5ea6", "\n3. \u53ef\u9760\u6027\u4e0e\u53ef\u7528\u6027", "\n4. \u6709\u8bb0\u5fc6\u80fd\u529b", "\nQuestion 18. (\u5355\u9009)", "\n\u8ba1\u7b97\u673a\u4e2d\u6570\u636e\u7684\u8868\u793a\u5f62\u5f0f\u662f(3)", "\n 1. \u516b\u8fdb\u5236", "\n2. \u5341\u8fdb\u5236", "\n3. \u4e8c\u8fdb\u5236", "\n4. \u5341\u516d\u8fdb\u5236", "\nQuestion 19. (\u5355\u9009)", "\n\u4e0b\u9762\u5217\u51fa\u7684\u56db\u79cd\u5b58\u50a8\u5668\u4e2d\uff0c\u6613\u5931\u6027\u5b58\u50a8\u5668\u662f(1)", "\n 1. RAM", "\n2. ROM", "\n3. PROM", "\n4. CD-ROM", "\nQuestion 20. (\u5355\u9009)", "\nI/O\u63a5\u53e3\u4f4d\u4e8e (2)", "\n 1. \u603b\u7ebf\u548c\u8bbe\u5907\u4e4b\u95f4", "\n2. CPU\u548cI/O\u8bbe\u5907\u4e4b\u95f4", "\n3. \u4e3b\u673a\u548c\u603b\u7ebf\u4e4b\u95f4", "\n4. CPU\u548c\u4e3b\u5b58\u50a8\u5668\u4e4b\u95f4", "\nQuestion 21. (\u5355\u9009)", "\n\u8ba1\u7b97\u673a\u786c\u4ef6\u80fd\u76f4\u63a5\u8bc6\u522b\u548c\u6267\u884c\u7684\u53ea\u6709(4)", "\n 1. \u9ad8\u7ea7\u8bed\u8a00", "\n2. \u7b26\u53f7\u8bed\u8a00", "\n3. \u6c47\u7f16\u8bed\u8a00", "\n4. \u673a\u5668\u8bed\u8a00", "\nQuestion 22. (\u5355\u9009)", "\n\u5177\u6709\u591a\u5a92\u4f53\u529f\u80fd\u7684\u5fae\u578b\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e2d\uff0c\u5e38\u7528\u7684CD-ROM\u662f(2)", "\n 1. \u53ea\u8bfb\u578b\u5927\u5bb9\u91cf\u8f6f\u76d8", "\n2. \u53ea\u8bfb\u578b\u5149\u76d8", "\n3. \u53ea\u8bfb\u578b\u786c\u76d8", "\n4. \u534a\u5bfc\u4f53\u53ea\u8bfb\u5b58\u50a8\u5668", "\nQuestion 23. (\u5355\u9009)", "\n\u5fae\u673a\u4e2d1K\u5b57\u8282\u8868\u793a\u7684\u4e8c\u8fdb\u5236\u4f4d\u6570\u662f(4)", "\n 1. 1000", "\n2. 8x1000", "\n3. 1024", "\n4. 8x1024", "\nQuestion 24. (\u5355\u9009)", "\n\u4e0b\u5217\u5b57\u7b26\u4e2d\uff0cASCII\u7801\u503c\u6700\u5c0f\u7684\u662f(2)", "\n 1. a", "\n2. A", "\n3. x", "\n4. Y", "\nQuestion 25. (\u5355\u9009)", "\nOSI(\u5f00\u653e\u7cfb\u7edf\u4e92\u8054)\u53c2\u8003\u6a21\u578b\u7684\u6700\u4f4e\u5c42\u662f(3)", "\n 1. \u4f20\u8f93\u5c42", "\n2. \u7f51\u7edc\u5c42", "\n3. \u7269\u7406\u5c42", "\n4. \u5e94\u7528\u5c42", "\nQuestion 26. (\u5355\u9009)", "\n\u5728\u9762\u5411\u5bf9\u8c61\u7684\u7cfb\u7edf\u4e2d\uff0c\u7cfb\u7edf\u8d23\u4efb\u7684\u826f\u597d\u5206\u914d\u539f\u5219\u662f(3)", "\n 1. \u5728\u7c7b\u4e4b\u95f4\u5747\u5300\u5206\u914d", "\n2. \u96c6\u4e2d\u5206\u914d\u5728\u5c11\u6570\u63a7\u5236\u7c7b\u4e2d", "\n3. \u6839\u636e\u4ea4\u4e92\u56fe\u7684\u6d88\u606f\u8fdb\u884c\u5206\u914d", "\n4. \u6839\u636e\u4e2a\u4eba\u559c\u597d\u8fdb\u884c\u5206\u914d", "\nQuestion 27. (\u5355\u9009)", "\n\u5728CMM\u6a21\u578b\u4e2d\uff0c\u5bf9\u8f6f\u4ef6\u6210\u719f\u5ea6\u6709\u4ee5\u4e0b5\u4e2a\u7ea7\u522b\uff0c\u8bf7\u4ece\u4f4e\u5230\u9ad8\u6392\u5e8f", "\na \u521d\u59cb\u7ea7:", "\n\u8f6f\u4ef6\u8fc7\u7a0b\u7684\u7279\u70b9\u662f\u65e0\u79e9\u5e8f\u7684\uff0c\u5076\u5c14\u751a\u81f3\u662f\u6df7\u4e71\u7684\u3002\u51e0\u4e4e\u6ca1\u6709\u4ec0\u4e48\u8fc7\u7a0b\u662f\u7ecf\u8fc7\u5b9a\u4e49\u7684,\u6210\u529f\u4f9d", "\n\u8d56\u4e8e\u4e2a\u4eba\u7684\u52aa\u529b\u3002", "\nb \u4f18\u5316\u7ea7:", "\n\u5229\u7528\u6765\u81ea\u8fc7\u7a0b\u548c\u6765\u81ea\u65b0\u601d\u60f3\u3001\u65b0\u6280\u672f\u7684\u5148\u5bfc\u6027\u8bd5\u9a8c\u7684\u5b9a\u91cf\u53cd\u9988\u4fe1\u606f\uff0c\u4f7f\u6301\u7eed\u8fc7\u7a0b\u6539\u8fdb\u6210\u4e3a", "\n\u53ef\u80fd\u3002", "\nc \u5df2\u5b9a\u4e49\u7ea7:", "\n\u7ba1\u7406\u6d3b\u52a8\u548c\u5de5\u7a0b\u6d3b\u52a8\u4e24\u65b9\u9762\u7684\u8f6f\u4ef6\u8fc7\u7a0b\u5747\u5df2\u6587\u6863\u5316\u3001\u6807\u51c6\u5316\u3001\u5e76\u96c6\u6210\u5230\u7ec4\u7ec7\u7684\u6807\u51c6\u8f6f\u4ef6\u8fc7", "\n\u7a0b\u3002", "\nd \u5df2\u7ba1\u7406\u7ea7:", "\n\u5df2\u91c7\u96c6\u8be6\u7ec6\u7684\u6709\u5173\u8f6f\u4ef6\u8fc7\u7a0b\u548c\u4ea7\u54c1\u8d28\u91cf\u7684\u5ea6\u91cf,\u65e0\u8bba\u8f6f\u4ef6\u8fc7\u7a0b\u8fd8\u662f\u4ea7\u54c1\u5747\u5f97\u5230\u5b9a\u91cf\u4e86\u89e3\u548c\u63a7", "\n\u5236\u3002", "\ne \u53ef\u91cd\u590d\u7ea7:", "\n\u5df2\u5efa\u7acb\u57fa\u672c\u7684\u9879\u76ee\u7ba1\u7406\u8fc7\u7a0b\u53bb\u8ddf\u8e2a\u6210\u672c\u3001\u8fdb\u5ea6\u548c\u529f\u80fd\u6027\u3002\u5fc5\u8981\u7684\u8fc7\u7a0b\u7eaa\u5f8b\u5df2\u7ecf\u5c31\u4f4d\uff0c\u4f7f\u5177", "\n\u6709\u7c7b\u4f3c\u5e94\u7528\u7684\u9879\u76ee\u3002\u80fd\u91cd", "\n\u590d\u4ee5\u524d\u7684\u6210\u529f\u3002", "\n(3)", "\n 1. acdbe", "\n2. adceb", "\n3. aecdb", "\n4. abcde", "\nQuestion 28. (\u5355\u9009)", "\n\u5728\u4e0b\u9762\u6240\u5217\u4e3e\u7684\u903b\u8f91\u6d4b\u8bd5\u8986\u76d6\u4e2d\uff0c\u6d4b\u8bd5\u8986\u76d6\u6700\u5f3a\u7684\u662f(3)", "\n 1. \u6761\u4ef6\u8986\u76d6", "\n2. \u6761\u4ef6\u7ec4\u5408\u8986\u76d6", "\n3. \u8bed\u53e5\u8986\u76d6", "\n4. \u6761\u4ef6\u53ca\u5224\u5b9a\u8986\u76d6", "\nQuestion 29. (\u5355\u9009)", "\n\u4e00\u822c\u6765\u8bf4\uff0c\u5728\u8f6f\u4ef6\u7ef4\u62a4\u8fc7\u7a0b\u4e2d\uff0c\u5927\u90e8\u5206\u5de5\u4f5c\u662f\u7531\u4ec0\u4e48\u5f15\u8d77\u7684(3)", "\n 1. \u9002\u5e94\u65b0\u7684\u8f6f\u4ef6\u73af\u5883", "\n2. \u9002\u5e94\u65b0\u7684\u786c\u4ef6\u73af\u5883", "\n3. \u7528\u6237\u7684\u9700\u6c42\u6539\u53d8", "\n4. \u7a0b\u5e8f\u7684\u53ef\u9760\u6027", "\nQuestion 30. (\u5355\u9009)(2)", "\nPSP\u662f\uff1f", "\n 1. \u56e2\u961f\u8f6f\u4ef6\u8fc7\u7a0b", "\n2. \u4e2a\u4f53\u8f6f\u4ef6\u8fc7\u7a0b", "\n3. \u8fc7\u7a0b\u6539\u8fdb\u8fc7\u7a0b", "\n4. \u8d28\u91cf\u7ba1\u7406\u8fc7\u7a0b", "\nQuestion 31. (\u5355\u9009)", "\n\u5047\u5b9aa\u548cb\u4e3aint\u578b\u53d8\u91cf,\u5219\u6267\u884c\u4ee5\u4e0b\u8bed\u53e5\u540eb\u7684\u503c\u4e3a   (4)", "\na=1; b=10;", "\ndo { b-=a; a++; } while (b--\n 1. 9", "\n2. -2", "\n3. -1", "\n4. 8", "\nQuestion 32. (\u5355\u9009)", "\n\u8bbe\u6709\u4ee5\u4e0b\u5b8f\u5b9a\u4e49:", "\n#define N 3", "\n#define Y(n) ( (N+1)*n)", "\n\u5219\u6267\u884c\u8bed\u53e5:z=2 * (N+Y(5+1));\u540e,z\u7684\u503c\u4e3a (3)", "\n 1. \u51fa\u9519", "\n2. 42", "\n3. 48", "\n4. 54", "\nQuestion 33. (\u5355\u9009)", "\n\u6267\u884c\u4ee5\u4e0b\u7a0b\u5e8f\u6bb5\u540e,m\u7684\u503c\u4e3a  (1)", "\nint a[2][3]={ {1,2,3},{4,5,6} };", "\nint m,*p;", "\np=&a[0][0];", "\nm=(*p)*(*(p+2))*(*(p+4));", "\n 1. 15", "\n2. 14", "\n3. 13", "\n4. 12", "\nQuestion 34. (\u5355\u9009)", "\n\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "\nmain()", "\n{ char a[]=\u201dprogramming\u201d, b[]=\u201dlanguage\u201d;", "\nchar *p1,*p2;", "\nint i;", "\np1=a; p2=b;", "\nfor(i=0;i\nif(*(p1+i)==*(p2+i)) printf(\"\uff05c\",*(p1+i));", "\n}", "\n\u8f93\u51fa\u7ed3\u679c\u662f (4)", "\n 1. gm", "\n2. rg", "\n3. or", "\n4. ga", "\nQuestion 35. (\u5355\u9009)", "\n\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "\nint fun(int x,int y,int *cp,int *dp)", "\n{ *cp=x+y; *dp=x-y; }", "\nmain()", "\n{ int a, b, c, d;", "\na=30; b=50;", "\nfun(a,b,&c,&d);", "\nprintf(\"%d,%d", "\n\", c, d);", "\n}", "\n\u8f93\u51fa\u7ed3\u679c\u662f (3)", "\n 1. 50,30", "\n2. 30,50", "\n3. 80,-20", "\n4. 80,20", "\nQuestion 36. (\u5355\u9009)", "\n\u4e0b\u8ff0\u6807\u8bc6\u7b26\u4e2d, \u5408\u6cd5\u7684\u7528\u6237\u6807\u8bc6\u7b26\u662f(4)", "\n 1. A#C", "\n2. getch", "\n3. void", "\n4. sizeOf", "\nQuestion 37. (\u5355\u9009)", "\n\u4ee5\u4e0b\u9009\u9879\u4e2d\u5408\u6cd5\u7684\u5b57\u7b26\u5e38\u91cf\u662f(3)", "\n 1. A", "\n2. '10'", "\n3. 68", "\n4. D", "\nQuestion 38. (\u5355\u9009)", "\n\u4ee5\u4e0b\u53d9\u8ff0\u6b63\u786e\u7684\u662f (3)", "\n 1. \u5728C\u7a0b\u5e8f\u4e2d\uff0cmain\u51fd\u6570\u5fc5\u987b\u4f4d\u4e8e\u7a0b\u5e8f\u7684\u6700\u524d\u9762", "\n2. C\u7a0b\u5e8f\u7684\u6bcf\u884c\u4e2d\u53ea\u80fd\u5199\u4e00\u6761\u8bed\u53e5", "\n3. C\u8bed\u8a00\u672c\u8eab\u6ca1\u6709\u8f93\u5165\u8f93\u51fa\u8bed\u53e5", "\n4. \u5728\u5bf9\u4e00\u4e2aC\u7a0b\u5e8f\u8fdb\u884c\u7f16\u8bd1\u7684\u8fc7\u7a0b\u4e2d\uff0c\u53ef\u53d1\u73b0\u6ce8\u91ca\u4e2d\u7684\u62fc\u5199\u9519\u8bef", "\nQuestion 39. (\u5355\u9009)", "\n\u4ee5\u4e0b\u53d9\u8ff0\u4e2d\u4e0d\u6b63\u786e\u7684\u662f (4)", "\n 1. \u5728\u4e0d\u540c\u7684\u51fd\u6570\u4e2d\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u540d\u5b57\u7684\u53d8\u91cf", "\n2. \u51fd\u6570\u4e2d\u7684\u5f62\u5f0f\u53c2\u6570\u662f\u5c40\u90e8\u53d8\u91cf", "\n3. \u5728\u4e00\u4e2a\u51fd\u6570\u5185\u5b9a\u4e49\u7684\u53d8\u91cf\u53ea\u5728\u672c\u51fd\u6570\u8303\u56f4\u5185\u6709\u6548", "\n4. \u5728\u4e00\u4e2a\u51fd\u6570\u5185\u7684\u590d\u5408\u8bed\u53e5\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\u5728\u672c\u51fd\u6570\u8303\u56f4\u5185\u6709\u6548", "\nQuestion 40. (\u5355\u9009)", "\n\u8bbeint\u7c7b\u578b\u7684\u6570\u636e\u957f\u5ea6\u4e3a2\u4e2a\u5b57\u8282\uff0c\u5219 unsigned int \u7c7b\u578b\u6570\u636e\u7684\u53d6\u503c\u8303\u56f4\u662f (2)", "\n 1. 0~255", "\n2. 0~65535", "\n3. -32768~32767", "\n4. -256~255", "\nQuestion 41. (\u5355\u9009)", "\n\u67d0\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u9759\u6001\u5168\u5c40\u53d8\u91cf(\u6216\u79f0\u9759\u6001\u5916\u90e8\u53d8\u91cf)\u5176\u4f5c\u7528\u57df\u662f (2)", "\n 1. \u53ea\u9650\u67d0\u4e2a\u51fd\u6570", "\n2. \u672c\u6587\u4ef6", "\n3. \u8de8\u6587\u4ef6", "\n4. \u4e0d\u9650\u5236\u4f5c\u7528\u57df", "\nQuestion 42. (\u5355\u9009)", "\n\u8bed\u53e5:printf(\"%d", "\n\"\uff0c12 & 012)\uff1b\u7684\u8f93\u51fa\u7ed3\u679c\u662f (3)", "\n 1. 12", "\n2. 012", "\n3. 8", "\n4. 6", "\nQuestion 43. (\u5355\u9009)", "\n\u8bbeint x=4; \u5219\u6267\u884c\u4ee5\u4e0b\u8bed\u53e5: x+=x-=x-x;\u540e,x\u7684\u503c\u4e3a (3)", "\n 1. 0", "\n2. 4", "\n3. 8", "\n4. 12", "\nQuestion 44. (\u5355\u9009)", "\nwhile(!x)\u4e2d\u7684(!x)\u4e0e\u4e0b\u9762\u6761\u4ef6\u7b49\u4ef7\u3002 (4)", "\n 1. x==1", "\n2. x!=1", "\n3. x!=0", "\n4. x==0", "\nQuestion 45. (\u5355\u9009)", "\n\u5df2\u77e5int i,a;\u6267\u884c\u8bed\u53e5: i=(a=2*3,a*5),a+6;\u540e,\u53d8\u91cfi\u7684\u503c\u662f (3)", "\n 1. 6", "\n2. 12", "\n3. 30", "\n4. 36", "\nQuestion 46. (\u5355\u9009)", "\n\u6574\u578b\u53d8\u91cfx\u548cy\u7684\u503c\u76f8\u7b49\u3001\u4e14\u4e3a\u975e0\u503c\uff0c\u5219\u4ee5\u4e0b\u9009\u9879\u4e2d\uff0c\u7ed3\u679c\u4e3a\u96f6\u7684\u8868\u8fbe\u5f0f\u662f (4)", "\n 1. x || y", "\n2. x | y", "\n3. x & y", "\n4. x ^ y", "\nQuestion 47. (\u5355\u9009)", "\nx\u3001y\u3001z\u88ab\u5b9a\u4e49\u4e3aint\u578b\u53d8\u91cf\uff0c\u82e5\u4ece\u952e\u76d8\u7ed9x\u3001y\u3001z\u8f93\u5165\u6570\u636e\uff0c\u6b63\u786e\u7684\u8f93\u5165\u8bed\u53e5\u662f  (2)", "\n 1. INPUT x\u3001y\u3001z;", "\n2. scanf(\"%d%d%d\",&x,&y,&z);", "\n3. scanf(\"%d%d%d\",x,y,z);", "\n4. read(\"%d%d%d\",x,y,z);", "\nQuestion 48. (\u5355\u9009)", "\n\u4ee5\u4e0b\u5404\u9009\u9879\u4f01\u56fe\u8bf4\u660e\u4e00\u79cd\u65b0\u7684\u7c7b\u578b\u540d\uff0c\u5176\u4e2d\u6b63\u786e\u7684\u662f (2)", "\n 1. typedef v1 int;", "\n2. typedef int v3;", "\n3. typedef v4: int;", "\n4. typedef v2=int;", "\nQuestion 49. (\u5355\u9009)", "\nchar x=3,y=6,z;", "\nz=x^y\n\u5219z\u7684\u4e8c\u8fdb\u5236\u503c\u662f (2)", "\n 1. 10100", "\n2. 11011", "\n3. 11100", "\n4. 11000", "\nQuestion 50. (\u5355\u9009)", "\n\u82e5\u6709\u8bf4\u660e\uff1aint i, j=2\uff0c*p=&i;\uff0c\u5219\u80fd\u5b8c\u6210i=j\u8d4b\u503c\u529f\u80fd\u7684\u8bed\u53e5\u662f (2)", "\n 1. i=*p;", "\n2. *p=*&j;", "\n3. i=&j;", "\n4. i=**p;", "\nQuestion 51. (\u95ee\u7b54)", "\n\u7ed9\u5b9a\u4e00\u4e2a\u6574\u578b\u53d8\u91cfa\uff0c\u5199\u4e24\u6bb5\u4ee3\u7801\uff0c\u7b2c\u4e00\u4e2a\u8bbe\u7f6ea\u7684bit 3\uff0c\u7b2c\u4e8c\u4e2a\u6e05\u9664a\u7684bit 3\u3002\u5728\u4ee5\u4e0a\u4e24", "\n\u4e2a\u64cd\u4f5c\u4e2d\uff0c\u8981\u4fdd\u6301\u5176\u5b83", "\n\u4f4d\u4e0d\u53d8\u3002", "\n a|=0x4;", "\nint b=a&0x7;", "\na>>=4;", "\na=(a\nQuestion 52. (\u95ee\u7b54)", "\n\u6709\u53cc\u5411\u5faa\u73af\u94fe\u8868\u7ed3\u70b9\u5b9a\u4e49\u4e3a\uff1a", "\nstruct node", "\n{ int data;", "\nstruct node *front,*next;", "\n};", "\n\u6709\u4e24\u4e2a\u53cc\u5411\u5faa\u73af\u94fe\u8868A\uff0cB\uff0c\u77e5\u9053\u5176\u5934\u6307\u9488\u4e3a\uff1apHeadA,pHeadB\uff0c\u8bf7\u5199\u4e00\u51fd\u6570\u5c06\u4e24\u94fe\u8868\u4e2ddat", "\na\u503c\u76f8\u540c\u7684\u7ed3\u70b9\u5220\u9664", "\n struct node", "\n{ int data;", "\nstruct node *front,*next;", "\n};", "\nnode* del(node *pHead){", "\n    if(pHead==pHead->next){", "\n                  free(pHead);", "\n        return NULL;", "\n         }", "\n         node *p=pHead;", "\n    pHead->next->front=pHead->front;", "\n    pHead->front->next=pHead->next;", "\n    pHead=pHead->next;", "\n         free(p);", "\n    return pHead;", "\n}", "\nvoid delequ(node*pHeadA,node *pHeadB){", "\n    node *pA=pHeadA;", "\n    node *pB;", "\n    int flag;", "\n    do{", "\n        flag=0;", "\n        pB=pHeadB;", "\n        do{", "\n            if(pB->data==pA->data){", "\n                if(pA==pHeadA){", "\n                    pHeadA=pA=del(pHeadA);", "\n                    flag=1;", "\n                }", "\n                else{", "\n                    pA=del(pA);", "\n                }", "\n                pB=del(pB);", "\n                break;", "\n            }", "\n            pB=pB->next;", "\n        }while(pB!=pHeadB);", "\n        if(flag==0){", "\n            pA=pA->next;", "\n        }", "\n    }while(!pA && !pB && (flag||(pA!=pHeadA)));", "\n}", "\nQuestion 53. (\u95ee\u7b54)", "\n\u7f16\u7a0b\u5b9e\u73b0\uff1a\u627e\u51fa\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u6700\u5927\u516c\u5171\u5b50\u5b57\u7b26\u4e32,\u5982\u201dabccade\u201d,\u201ddgcadde\u201d\u7684\u6700\u5927\u5b50\u4e32\u4e3a\u201dc", "\nad\u201d", "\n char* constr(char *A,char *B){", "\n    int lenA=strlen(A),lenB=strlen(B);", "\n    int itmp,conlen=0;", "\n    char *pequ,*pH=NULL;", "\n    char *pA,*pB,*pA2,*pB2;", "\n    for(pA=A;pA-A", "\n        for(pB=B;pB-B", "\n            if(*pB==*pA){", "\n                pA2=pA+1;", "\n                pB2=pB+1;", "\n                for(itmp=1;*pA2==*pB2 && pA2++-A", "\n                if(itmp>conlen){", "\n                    conlen=itmp;", "\n                    pH=pA;", "\n                }", "\n            }", "\n            pB++;", "\n        }", "\n    }", "\n    pequ=(char*)malloc(conlen+1);", "\n    memcpy(pequ,pH,conlen);", "\n    *(pequ+conlen)=\u2019\\0\u2032;", "\n    return pequ;", "\n}", "\nQuestion 54. (\u95ee\u7b54)", "\n\u8bf4\u660e\u5173\u952e\u5b57static\u548cvolatile\u7684\u542b\u4e49", "\n static\u7528\u4e8e\u5916\u90e8\u53d8\u91cf\u6216\u8005\u51fd\u6570\u65f6\uff0c\u9650\u5236\u4e86\u5b83\u4eec\u7684\u4f5c\u7528\u57df\u4e3a\u6587\u4ef6\u5185\u90e8\uff1bstatic\u4e5f\u53ef\u4ee5\u7528\u4e8e\u5185", "\n\u90e8\u53d8\u91cf\uff0c\u8fd9\u6837\uff0c\u5185\u90e8\u53d8", "\n\u91cf\u5728\u6bcf\u6b21\u51fd\u6570\u8c03\u7528\u65f6\u90fd\u4e3a\u540c\u4e00\u5b58\u50a8\uff0c\u503c\u5177\u6709\u8fde\u7eed\u6027\u3002", "\nvolatile\u8bf4\u660e\u4e86\u4e00\u4e2a\u53d8\u91cf\u7684\u503c\u662f\u4f1a\u968f\u673a\u53d8\u5316\u7684\uff0c\u5373\u4f7f\u7a0b\u5e8f\u6ca1\u6709\u5bf9\u5b83\u8fdb\u884c\u4efb\u4f55\u8d4b\u503c\u64cd\u4f5c\u3002\u5b83", "\n\u544a\u8bc9\u7f16\u8bd1\u5668\u7684\u4f18\u5316\u5904\u7406\u5668", "\n\uff0c\u8fd9\u4e9b\u53d8\u91cf\u662f\u5b9e\u5b9e\u5728\u5728\u5b58\u5728\u7684\uff0c\u5728\u4f18\u5316\u8fc7\u7a0b\u4e2d\u4e0d\u80fd\u65e0\u6545\u6d88\u9664\uff0c\u8fd9\u6837\u5c31\u4fdd\u8bc1\u4e86\u7f16\u8bd1\u540e\u7684\u4ee3\u7801", "\n\u5728\u6bcf\u6b21\u64cd\u4f5c\u662f\u4ece\u53d8\u91cf\u5730\u5740", "\n\u5904\u53d6\u6570\u3002", "\nQuestion 55. (\u95ee\u7b54)", "\n\u7f16\u7a0b\u5b9e\u73b0\uff1a\u628a\u5341\u8fdb\u5236\u6570(long\u578b)\u5206\u522b\u4ee5\u4e8c\u8fdb\u5236\u548c\u5341\u516d\u8fdb\u5236\u5f62\u5f0f\u8f93\u51fa\uff0c\u4e0d\u80fd\u4f7f\u7528printf\u7cfb\u5217", "\n\u5e93\u51fd\u6570", "\n void put(long data){", "\n    long mask=0\u00d71\n    int i;", "\n    char c;", "\n    if(data&mask)", "\n    putchar('1');", "\n    else", "\n    putchar('0');", "\n    mask=0x1\n    for(i=1;i\n        if(data&mask)", "\n            putchar('1');", "\n        else", "\n            putchar('0');", "\n        mask>>=1;", "\n    }", "\n    putchar(\u2018\\n\u2019);", "\n    mask=0xf\n    c=(data&mask)>>(8*sizeof(long)-4);", "\n    if(c\n    putchar(c+'0');", "\n    else", "\n    putchar(c+'a');", "\n    mask=0xf\n    for(i=1;i\n        c=(data&mask)>>(8*sizeof(long)-4*i-4);", "\n        if(c\n            putchar(c+'0');", "\n        else", "\n            putchar(c+'a');", "\n        mask>>=4;", "\n    }", "\n}", "////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////", "\n\u5728\u8fd9\u91cc\u516c\u5e03\u9009\u62e9\u9898\u7684\u7b54\u6848\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u9009\u62e9\u9898\u662f\u968f\u673a\u4ece\u9898\u5e93\u4e2d\u63d0\u53d6\u7684\uff0c\u6bcf\u4e2a\u4eba\u53ea\u6709\u5f88\u5c11\u51e0", "\n\u4e2a\u662f\u4e00\u6837\u7684\uff0c\u5927\u90e8\u5206\u90fd\u4e0d\u4e00\u6837\u3002", "\n\u6700\u540e\u76845\u4e2a\u95ee\u7b54\u9898\u662f\u4e00\u6837\u7684\u3002\u8fd9\u91cc\u63d0\u4f9b\u7b2c54\uff0c55\u9898\u7684\u7b54\u6848\uff0c\u4ec5\u4f9b\u53c2\u8003\uff01", "\n\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d", "\n54\u9898\uff1a", "\n\u5728C\u4e2d\uff0cstatic\u53d8\u91cf\u7684\u542b\u4e49\u3002", "\nA:static \u58f0\u660e\u7684\u53d8\u91cf\u5728C\u8bed\u8a00\u4e2d\u6709\u4e24\u65b9\u9762\u7684\u7279\u5f81\uff1a", "\n\u3000\u30001)\u3001\u53d8\u91cf\u4f1a\u88ab\u653e\u5728\u7a0b\u5e8f\u7684\u5168\u5c40\u5b58\u50a8\u533a\u4e2d\uff0c\u8fd9\u6837\u53ef\u4ee5\u5728\u4e0b\u4e00\u6b21\u8c03\u7528\u7684\u65f6\u5019\u8fd8\u53ef\u4ee5\u4fdd\u6301\u539f", "\n\u6765\u7684\u8d4b\u503c\u3002\u8fd9\u4e00\u70b9\u662f\u5b83\u4e0e\u5806\u6808\u53d8\u91cf\u548c\u5806\u53d8\u91cf\u7684\u533a\u522b\u3002", "\n\u3000\u30002)\u3001\u53d8\u91cf\u7528static\u544a\u77e5\u7f16\u8bd1\u5668\uff0c\u81ea\u5df1\u4ec5\u4ec5\u5728\u53d8\u91cf\u7684\u4f5c\u7528\u8303\u56f4\u5185\u53ef\u89c1\u3002\u8fd9\u4e00\u70b9\u662f\u5b83\u4e0e\u5168", "\n\u5c40\u53d8\u91cf\u7684\u533a\u522b\u3002", "\nTips:", "\n\u3000\u3000A.\u82e5\u5168\u5c40\u53d8\u91cf\u4ec5\u5728\u5355\u4e2aC\u6587\u4ef6\u4e2d\u8bbf\u95ee\uff0c\u5219\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u53d8\u91cf\u4fee\u6539\u4e3a\u9759\u6001\u5168\u5c40\u53d8\u91cf\uff0c\u4ee5\u964d\u4f4e", "\n\u6a21\u5757\u95f4\u7684\u8026\u5408\u5ea6\uff1b", "\n\u3000\u3000B.\u82e5\u5168\u5c40\u53d8\u91cf\u4ec5\u7531\u5355\u4e2a\u51fd\u6570\u8bbf\u95ee\uff0c\u5219\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u53d8\u91cf\u6539\u4e3a\u8be5\u51fd\u6570\u7684\u9759\u6001\u5c40\u90e8\u53d8\u91cf\uff0c\u4ee5", "\n\u964d\u4f4e\u6a21\u5757\u95f4\u7684\u8026\u5408\u5ea6\uff1b", "\n\u3000\u3000C.\u8bbe\u8ba1\u548c\u4f7f\u7528\u8bbf\u95ee\u52a8\u6001\u5168\u5c40\u53d8\u91cf\u3001\u9759\u6001\u5168\u5c40\u53d8\u91cf\u3001\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u7684\u51fd\u6570\u65f6\uff0c\u9700\u8981\u8003\u8651", "\n\u91cd\u5165\u95ee\u9898\uff1b", "\n    D.\u5982\u679c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u53ef\u91cd\u5165\u7684\u51fd\u6570\uff0c\u90a3\u4e48\uff0c\u6211\u4eec\u4e00\u5b9a\u8981\u907f\u514d\u51fd\u6570\u4e2d\u4f7f\u7528static\u53d8\u91cf(\u8fd9", "\n\u6837\u7684\u51fd\u6570\u88ab\u79f0\u4e3a\uff1a\u5e26\u201c\u5185\u90e8\u5b58\u50a8\u5668\u201d\u529f\u80fd\u7684\u7684\u51fd\u6570)", "\n     E.\u51fd\u6570\u4e2d\u5fc5\u987b\u8981\u4f7f\u7528static\u53d8\u91cf\u60c5\u51b5:\u6bd4\u5982\u5f53\u67d0\u51fd\u6570\u7684\u8fd4\u56de\u503c\u4e3a\u6307\u9488\u7c7b\u578b\u65f6\uff0c\u5219\u5fc5\u987b", "\n\u662fstatic\u7684\u5c40\u90e8\u53d8\u91cf\u7684\u5730\u5740\u4f5c\u4e3a\u8fd4\u56de\u503c\uff0c\u82e5\u4e3aauto\u7c7b\u578b\uff0c\u5219\u8fd4\u56de\u4e3a\u9519\u6307\u9488\u3002", "\n=====================================", "\nvolatile\u603b\u662f\u4e0e\u4f18\u5316\u6709\u5173\uff0c\u7f16\u8bd1\u5668\u6709\u4e00\u79cd\u6280\u672f\u53eb\u505a\u6570\u636e\u6d41\u5206\u6790\uff0c\u5206\u6790\u7a0b\u5e8f\u4e2d\u7684\u53d8\u91cf\u5728\u54ea\u91cc", "\n\u8d4b\u503c\u3001\u5728\u54ea\u91cc\u4f7f\u7528\u3001\u5728\u54ea\u91cc\u5931\u6548\uff0c\u5206\u6790\u7ed3\u679c\u53ef\u4ee5\u7528\u4e8e\u5e38\u91cf\u5408\u5e76\uff0c\u5e38\u91cf\u4f20\u64ad\u7b49\u4f18\u5316\uff0c\u8fdb\u4e00\u6b65", "\n\u53ef\u4ee5\u6b7b\u4ee3\u7801\u6d88\u9664\u3002\u4f46\u6709\u65f6\u8fd9\u4e9b\u4f18\u5316\u4e0d\u662f\u7a0b\u5e8f\u6240\u9700\u8981\u7684\uff0c\u8fd9\u65f6\u53ef\u4ee5\u7528volatile\u5173\u952e\u5b57\u7981\u6b62\u505a", "\n\u8fd9\u4e9b\u4f18\u5316\uff0cvolatile\u7684\u5b57\u9762\u542b\u4e49\u662f\u6613\u53d8\u7684\uff0c\u5b83\u6709\u4e0b\u9762\u7684\u4f5c\u7528\uff1a", "\n1 \u4e0d\u4f1a\u5728\u4e24\u4e2a\u64cd\u4f5c\u4e4b\u95f4\u628avolatile\u53d8\u91cf\u7f13\u5b58\u5728\u5bc4\u5b58\u5668\u4e2d\u3002\u5728\u591a\u4efb\u52a1\u3001\u4e2d\u65ad\u3001\u751a\u81f3setjmp\u73af", "\n\u5883\u4e0b\uff0c\u53d8\u91cf\u53ef\u80fd\u88ab\u5176\u4ed6\u7684\u7a0b\u5e8f\u6539\u53d8\uff0c\u7f16\u8bd1\u5668 \u81ea\u5df1\u65e0\u6cd5\u77e5\u9053\uff0cvolatile\u5c31\u662f\u544a\u8bc9\u7f16\u8bd1\u5668\u8fd9\u79cd", "\n\u60c5\u51b5\u3002", "\n2 \u4e0d\u505a\u5e38\u91cf\u5408\u5e76\u3001\u5e38\u91cf\u4f20\u64ad\u7b49\u4f18\u5316\uff0c\u6240\u4ee5\u50cf\u4e0b\u9762\u7684\u4ee3\u7801\uff1a", "\nvolatile int i = 1;", "\nif (i > 0) \u2026", "\nif\u7684\u6761\u4ef6\u4e0d\u4f1a\u5f53\u4f5c\u65e0\u6761\u4ef6\u771f\u3002", "\n3 \u5bf9volatile\u53d8\u91cf\u7684\u8bfb\u5199\u4e0d\u4f1a\u88ab\u4f18\u5316\u6389\u3002\u5982\u679c\u4f60\u5bf9\u4e00\u4e2a\u53d8\u91cf\u8d4b\u503c\u4f46\u540e\u9762\u6ca1\u7528\u5230\uff0c\u7f16\u8bd1\u5668\u5e38", "\n\u5e38\u53ef\u4ee5\u7701\u7565\u90a3\u4e2a\u8d4b\u503c\u64cd\u4f5c\uff0c\u7136\u800c\u5bf9Memory Mapped IO\u7684\u5904\u7406\u662f\u4e0d\u80fd\u8fd9\u6837\u4f18\u5316\u7684\u3002", "\n\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d\uff1d", "\n55\u9898\uff0c\u9012\u5f52\u7b97\u6cd5\uff1a", "\n/*\u957f\u6574\u578b\u8f6c\u53d8\u6210\u4e8c\u8fdb\u5236*/", "\nvoid binary(long n)", "\n{", "\n    char c;", "\n    if(n/2!=0)", "\n        binary(n/2);", "\n        c=n%2+48;", "\n        putch(c);", "\n}", "/*\u957f\u6574\u578b\u8f6c\u53d8\u6210\u5341\u516d\u8fdb\u5236*/", "void hex(long n)", "\n{", "\n    if(n/16!=0)", "\n        hex(n/16);", "\n        if(n%16>=0&&n%16\n            {c=n%16+48;", "\n             putch(c);", "\n            }", "\n        else", "\n            {c=n%16-10+97;", "\n            putch(c);", "\n            }", "\n}  "], "title": "\u96c5\u864e\u7b14\u8bd5\u9898"},
{"contents": ["1.\tWhat is pure virtual function?", "\nA class is made abstract by declaring one or more of its virtual functions to be pure. A pure virtual function is one with an initializer of = 0 in its declaration", "\nQ. Write a Struct Time where integer m, h, s are its members", "\nstruct Time", "\n{", "\nint m;", "\nint h;", "\nint s;", "\n};", "\now do you traverse a Btree in Backward in-order?", "\nProcess the node in the right subtree", "\nProcess the root", "\nProcess the node in the left subtree", "\nQ. What is the two main roles of Operating System?", "\nAs a resource manager", "\nAs a virtual machine", "\nQ. In the derived class, which data member of the base class are visible?", "\nIn the public and protected sections.", "\nC++ algorithms interview questions from Microsoft and IB", "1.\t(From Microsoft) Assume I have a linked list contains all of the alphabets from \u2018A\u2019 to \u2018Z\u2019. I want to find the letter \u2018Q\u2019 in the list, how does you perform the search to find the \u2018Q\u2019?Answer: In a linked list, we only know about the header and other elements are invisible unless we go through the node one by one. Since we have go through every single node to find \u2018Q\u2019, the search time for a linked list is linear which is O (N).", "\nFrom IBM) How do you think about your school?", "\n: I enjoy studying in our school because we have many professors and instructors are from local companies. Their professions lead us more close to local industries.", "\n(From IBM) What classes you have enjoyed the most during your school years?", "\nAnswer: I like the class I am taking this semester, which involves a group project that needs great amount of team efforts. I really enjoy work with a group of people because we can learn new materials mutually.", "\n>", "\nm IBM) According to your group project you just mentioned, what\u2019s the responsibility for each member in your group?", "\nAnswer: We have five people in our group. So far we have two web servers set up; one will be the back up system and the other will be the main system. Our leader coordinates the schedule. Two members are working on the database and do the coding for the connection between database and Java serverlets. One member is working on the user browser interface. All members will assign some classes to work on and perform the final test at the end. We have group meeting every Saturday to ensure our schedule is on track.", "\nCan you work under pressure?", "\nAnswer: I worked for Sega of America in the hardware development group three years ago. They were working on the next generation of gaming machine (which is the \u201cDreamcast\u201d we seen today in the market). My duty was to ensure the quality of prototypes that just built from manufacture were ready for engineers to test. I managed to balance the schedules and pressures from school and work.", "\nC++ object-oriented interview questions", "1.\t1. How do you write a function that can reverse a linked-list? (Cisco System)", "\n2.\tvoid reverselist(void)", "\n3.\t{", "\n4.\t\tif(head==0)", "\n5.\t\t\treturn;", "\n6.\t\tif(head->next==0)", "\n7.\t\t\treturn;", "\n8.\t\tif(head->next==tail)", "\n9.\t\t{", "\n10.\t\t\thead->next = 0;", "\n11.\t\t\ttail->next = head;", "\n12.\t\t}", "\n13.\t\telse", "\n14.\t\t{", "\n15.\t\t\tnode* pre = head;", "\n16.\t\t\tnode* cur = head->next;", "\n17.\t\t\tnode* curnext = cur->next;", "\n18.\t\t\thead->next = 0;", "\n\t\tcur->next = head;", "\n\t\tfor(; curnext!=0; )", "\n\t\t{", "\n\t\t\tcur->next = pre;", "\n\t\t\tpre = cur;", "\n\t\t\tcur = curnext;", "\n\t\t\tcurnext = curnext->next;", "\n\t\t}", "\n\t\tcurnext->next = cur;", "\n\t}", "\n}", "\n2. What is polymorphism?", "\nPolymorphism is the idea that a base class can be inherited by several classes. A base class pointer can point to its child class and a base class array can store different child class objects.", "\n3. How do you find out if a linked-list has an end? (i.e. the list is not a cycle)", "\nYou can find out by using 2 pointers. One of them goes 2 nodes each time. The second one goes at 1 nodes each time. If there is a cycle, the one that goes 2 nodes each time will eventually meet the one that goes slower. If that is the case, then you will know the linked-list is a cycle.", "\n4. How can you tell what shell you are running on UNIX system?", "\nYou can do the Echo $RANDOM. It will return a undefined variable if you are from the C-Shell, just a return prompt if you are from the Bourne shell, and a 5 digit random numbers if you are from the Korn shell. You could also do a ps -l and look for the shell with the highest PID.", "\n5. What is Boyce Codd Normal form?", "\nA relation schema R is in BCNF with respect to a set F of functional dependencies if for all functional dependencies in F+ of the form a->b, where a and b is a subset of R, at least one of the following holds:", "\no\ta->b is a trivial functional dependency (b is a subset of a)", "\no\ta is a superkey for schema R", "\nC++ networking questions", "1.\tQ: What is the difference between Stack and Queue?", "\nA: Stack is a Last In First Out (LIFO) data structure.", "\nQueue is a First In First Out (FIFO) data structure", "\nQ: Write a fucntion that will reverse a string. (Microsoft)", "\nA: char *strrev(char *s)", "\n{", "\nint i = 0, len = strlen(s);", "\nchar *str;", "\nif ((str = (char *)malloc(len+1)) == NULL) /*cannot allocate memory */", "\nerr_num = 2;", "\nreturn (str);", "\n}", "\nwhile(len)", "\nstr[i++]=s[\u2013len];", "\nstr[i] = NULL;", "\nreturn (str);", "\n}", "\nQ: What is the software Life-Cycle?", "\nA: The software Life-Cycle are", "\n1) Analysis and specification of the task", "\n2) Design of the algorithms and data structures", "\n3) Implementation (coding)", "\n4) Testing", "\n5) Maintenance and evolution of the system", "\n6) Obsolescence", "\nQ: What is the difference between a Java application and a Java applet?", "\nA: The difference between a Java application and a Java applet is that a", "\nJava application is a program that can be executed using the Java", "\ninterpeter, and a JAVA applet can be transfered to different networks", "\nand executed by using a web browser (transferable to the WWW).", "\nQ: Name 7 layers of the OSI Reference Model? (from Cisco)", "\nA: -Application layer", "\n-Presentation layer", "\n-Session layer", "\n-Transport layer", "\n-Network layer", "\n-Data Link layer", "\n-Physical layer", "\nC++ algorithm specific interview questions", "1.\tQ1 What are the advantages and disadvantages of B-star trees over Binary trees? (Asked by Motorola people)", "\nA1 B-star trees have better data structure and are faster in search than Binary trees, but it\u2019s harder to write codes for B-start trees.", "\nQ2 Write the psuedo code for the Depth first Search.(Asked by Microsoft)", "\nA2", "\ndfs(G, v) //OUTLINE", "\nMark v as \u201cdiscovered\u201d", "\nFor each vertex w such that edge vw is in G:", "\nIf w is undiscovered:", "\ndfs(G, w); that is, explore vw, visit w, explore from there", "\nas much as possible, and backtrack from w to v.", "\nOtherwise:", "\n\u201cCheck\u201d vw without visiting w.", "\nMark v as \u201cfinished\u201d.", "\nQ3 Describe one simple rehashing policy.(Asked by Motorola people)", "\nA3. The simplest rehashing policy is linear probing. Suppose a key K hashes to location i. Suppose other key occupies H[i]. The following function is used to generate alternative locations:", "\nrehash(j) = (j + 1) mod h", "\nwhere j is the location most recently probed. Initially j = i, the hash code for K. Notice that this version of rehash does not depend on K.", "\nQ4 Describe Stacks and name a couple of places where stacks are useful. (Asked by Microsoft)", "\nA4 .A Stack is a linear structure in which insertions and deletions are always made at one end, called the top. This updating policy is called last in, first out (LIFO). It is useful when we need to check some syntex errors, such as missing parentheses.", "\nQ5 Suppose a 3-bit sequence number is used in the selective-reject ARQ, what is the maximum number of frames that could be transmitted at a time? (Asked by Cisco)", "\nA5. If a 3-bit sequence number is used, then it could distinguish 8 different frames. Since the number of frames that could be transmitted at a time is no greater half the numner of frames that could be distinguished by the sequence number, so at most 4 frames can be transmitted at a time", "\nBasic C++ interview questions", "1.\t1.Question: Suppose that data is an array of 1000 integers. Write a single function call that will sort the 100 elements data [222] through data [321].", "Answer: quicksort ((data + 222), 100);", "\n2.Question: Which recursive sorting technique always makes recursive calls to sort subarrays that are about half size of the original array?", "Answer: Mergesort always makes recursive calls to sort subarrays that are about half size of the original array, resulting in O(n log n) time.", "\n3.Question: What is the difference between an external iterator and an internal iterator? Describe an advantage of an external iterator.", "Answer: .An internal iterator is implemented with member functions of the class that has items to step through. .An external iterator is implemented as a separate class that can be \u201cattach\u201d to the object that has items to step through. .An external iterator has the advantage that many difference iterators can be active simultaneously on the same object.", "\n4.Question: Why are arrays usually processed with for loop?", "Answer: The real power of arrays comes from their facility of using an index variable to traverse the array, accessing each element with the same expression a[i]. All the is needed to make this work is a iterated statement in which the variable i serves as a counter, incrementing from 0 to a.length -1. That is exactly what a loop does.", "\n5.Question: What is an HTML tag?", "Answer: An HTML tag is a syntactical construct in the HTML language that abbreviates specific instructions to be executed when the HTML script is loaded into a Web browser. It is like a method in Java, a function in C++, a procedure in Pascal, or a subroutine in FORTRAN", "\nC++ coding interview questions", "1.\t. Design and implement a String class that satisfies the following:", "\no\tSupports embedded nulls", "\no\tProvide the following methods (at least)", "\n\uf0a7\tConstructor", "\n\uf0a7\tDestructor", "\n\uf0a7\tCopy constructor", "\n\uf0a7\tAssignment operator", "\n\uf0a7\tAddition operator (concatenation)", "\n\uf0a7\tReturn character at location", "\n\uf0a7\tReturn substring at location", "\n\uf0a7\tFind substring", "\no\tProvide versions of methods for String and for char* arguments", "\n2. Given the following classes", "\nclass Fruit {", "\n// \u2026", "\n}", "\nclass Apple : public Fruit {", "\n// \u2026", "\n}", "\nclass Peach : public Fruit {", "\n// \u2026", "\n}", "\n// Container of fruit", "\nclass BasketOfFruit {", "\nBasketOfFruit() ;", "\nvoid insert( Fruit & f ) ;", "\n// \u2026", "\n}", "\n// Container of apples", "\nclass BasketOfApples /* ??? */ {", "\n// \u2026", "\n}", "\nShould BasketOfApples derive from BasketOfFruit? Why or why not?", "\nWhat is the general principle that determines the answer?", "\n3. Describe briefly what the following function does. What standard function is it most like ?", "\nint f( char *p ) {", "\nint n = 0 ;", "\nwhile ( *p != 0 ) n = 10*n + *p++ \u2013 \u20180\u2032 ;", "\nreturn n ;", "\n}", "\n4. Describe briefly what function \u2018a\u2019 does in the following code fragment.", "\nstruct s {", "\nstruct s *next ;", "\n}", "\na( struct s *p, struct s *x ) {", "\nwhile ( p->next != 0 ) p = p->next ;", "\np->next = x ;", "\nx->next = 0 ;", "\n}", "\n5. What default methods are declared implicitly by the C++ compiler for the class below:", "\nclass Empty", "\n{", "\n};", "\n6. Given a system with a hard realtime priority, multithreaded architecture, with priorities from 1 (least) to 5 (most), explain the major flaw in the design below:", "\nThe following objects are shared between the threads:", "\nDisk : This class is a singleton. The read() and write() methods both block on a simple atomic lock()/unlock() shared between the two. (ie, only one thread can access the disk, thru either read or write, at any given time). It also has a waitForData() method, which blocks (without claiming the lock) until either a timeout elapses, or data is ready. It returns true upon returning due to new data, false upon returning due to the timeout.", "\nNetwork : This class is a singleton. The read() and write() methods both block on a simple atomic lock()/unlock() shared between the two. (ie, only one thread can access the disk, thru either read or write, at any given time).", "\nSensor: The Sensor class accesses a number of physical sensors. The first method, \u2018waitForData()\u2019, blocks until data has been collected from the sensors. The second method, \u2018processData()\u2019, does a series of long and cpu-intensive calculations on the data. These calculations often take several minutes. It then returns the processed data.", "\nEach of the following threads is running concurrently. Assume that the psuedocode in each thread is looped infinitely (ie, encased in a while(true) { }. It is extremely important that information buffered to the disk be sent to the network as quickly as possible, this is why Thread 1 runs at priority 5. The system conditions checked in thread 3 are not particularly important events (not as important as the calculations done in thread 2). If the events aren\u2019t transmitted over the network for several minutes, it\u2019s not a problem at all. They do, however, contain a large amount of system information. Thread 4 watches for serious system alarms, indicating serious problems. These are a serious concern and if not quickly buffered to the disk and sent to the network, can cause serious revenue loss.", "\nThread 1: (priority: 5)", "\nwhile(!Disk.waitForData()) { yield(); } /* Wait until someone has", "\nwritten data to the disk */", "\nNetwork.write(Disk.read()); /* Write the data buffered on the disk to", "\nthe network */", "\nThread 2: (priority: 2)", "\nwhile(!Sensor.waitForData()) { yield(); } /* Wait until the sensors", "\nhave picked up data */", "\nDisk.write(Sensor.processData()); /* process the data and write it to", "\nthe disk. */", "\nThread 3: (priority: 1)", "\nif (checkSystemCondition1()) /* If system condition 1 is true.. */", "\nDisk.write(SystemCond1Data); /* Grab the data on the system", "\ncondition and buffer it to disk */", "\nif (checkSystemCondition2()) /* see above*/", "\nDisk.write(SystemCond2Data);", "\nif (checkSystemCondition3()) /* see above */", "\nDisk.write(SystemCond3Data);", "\nyield();", "\nThread 4: (priority: 4)", "\nif (checkAlarms()) /* If any serious alarms exist */", "\nDisk.write(AlarmData); /* Buffer that data to disk for immediate", "\nnetwork transmit */", "\nyield();", "Advanced C++ and STL interview questions", "1.\tQ: How do you link a C++ program to C functions?", "\nA: By using the extern \u201cC\u201d linkage specification around the C function declarations.", "\nQ: Explain the scope resolution operator.", "\nA: It permits a program to reference an identifier in the global scope that has been hidden by another identifier with the same name in the local scope.", "\nQ: What are the differences between a C++ struct and C++ class?", "\nA: The default member and base-class access specifiers are different.", "\nQ: How many ways are there to initialize an int with a constant?", "\nA: Two.", "\nThere are two formats for initializers in C++ as shown in the example that follows. The first format uses the traditional C notation. The second format uses constructor notation.", "\nint foo = 123;", "\nint bar (123);", "\nQ: How does throwing and catching exceptions differ from using setjmp and longjmp?", "\nA: The throw operation calls the destructors for automatic objects instantiated since entry to the try block.", "\nQ: What is your reaction to this line of code?", "\ndelete this;", "\nA: It\u2019s not a good practice.", "\nQ: What is a default constructor?", "\nA: A constructor that has no arguments.", "\nQ: What is a conversion constructor?", "\nA: A constructor that accepts one argument of a different type.", "\nQ: What is the difference between a copy constructor and an overloaded assignment operator?", "\nA: A copy constructor constructs a new object by using the content of the argument object. An overloaded", "\nassignment operator assigns the contents of an existing object to another existing object of the same class.", "\nQ: When should you use multiple inheritance?", "\nA: There are three acceptable answers: \u201cNever,\u201d \u201cRarely,\u201d and \u201cWhen the problem domain cannot be accurately modeled any other way.\u201d", "\nQ: What is a virtual destructor?", "\nA: The simple answer is that a virtual destructor is one that is declared with the virtual attribute.", "\nQ: Explain the ISA and HASA class relationships. How would you implement each in a class design?", "\nA: A specialized class \u201cis\u201d a specialization of another class and, therefore, has the ISA relationship with the other class. An Employee ISA Person. This relationship is best implemented with inheritance. Employee is derived from Person. A class may have an instance of another class. For example, an employee \u201chas\u201d a salary, therefore the Employee class has the HASA relationship with the Salary class. This relationship is best implemented by embedding an object of the Salary class in the Employee class.", "\nQ: When is a template a better solution than a base class?", "\nA: When you are designing a generic class to contain or otherwise manage objects of other types, when the format and behavior of those other types are unimportant to their containment or management, and particularly when those other types are unknown (thus, the genericity) to the designer of the container or manager class.", "\nQ: What is a mutable member?", "\nA: One that can be modified by the class even when the object of the class or the member function doing the modification is const.", "\nQ: What is an explicit constructor?", "\nA: A conversion constructor declared with the explicit keyword. The compiler does not use an explicit constructor to implement an implied conversion of types. It\u2019s purpose is reserved explicitly for construction.", "\nQ: What is the Standard Template Library?", "\nA: A library of container templates approved by the ANSI committee for inclusion in the standard C++ specification.", "\nA programmer who then launches into a discussion of the generic programming model, iterators, allocators, algorithms, and such, has a higher than average understanding of the new technology that STL brings to C++ programming.", "\nQ: Describe run-time type identification.", "\nA: The ability to determine at run time the type of an object by using the typeid operator or the dynamic_cast operator.", "\nQ: What problem does the namespace feature solve?", "\nA: Multiple providers of libraries might use common global identifiers causing a name collision when an application tries to link with two or more such libraries. The namespace feature surrounds a library\u2019s external declarations with a unique namespace that eliminates the potential for those collisions.", "\nThis solution assumes that two library vendors don\u2019t use the same namespace identifier, of course.", "\nQ: Are there any new intrinsic (built-in) data types?", "\nA: Yes. The ANSI committee added the bool intrinsic type and its true and false value keywords.", "\nC++ programming on UNIX platforms", "1.\tWhat is a Make file?(Fujitsu) Make file is a utility in Unix to help compile large programs. It helps by only compiling the portion of the program that has been changed.", "\n2.\tWhat is deadlock? (Novell) Deadlock is a situation when two or more processes prevent each other from running.Example: if T1 is holding x and waiting for y to be free and T2 holding y and waiting for x to be free deadlock happens.", "\n3.\tWhat is semaphore? (Novell) Semaphore is a special variable, it has two methods: up and down. Semaphore performs atomic operations, which means ones a semaphore is called it can not be inturrupted.", "\n4.\tIs C an object-oriented language? (Microsoft) C is not an object-oriented language, but limited object-oriented programming can be done in C.", "\n5.\tName some major differences between C++ and Java. C++ has pointers; Java does not. Java is platform-independent; C++ is not. Java has garbage collection; C++ does not.", "\nBasic C++ and UNIX OS programming", "1.\tQ1: Could you tell something about the Unix System Kernel? (from ITCO )", "\nA1: The kernel is the heart of the UNIX openrating system, it\u2019s reponsible for controlling the computer\u2019s resouces and scheduling user jobs so that each one gets its fair share of resources.", "\nQ2: What are each of the standard files and what are they normally associated with? (from ITCO )", "\nA2: They are the standard input file, the standard output file and the standard error file. The first is usually associated with the keyboard, the second and third are usually associated with the terminal screen. ", "Q3: Detemine the code below, tell me exectly how many times is the operation sum++ performed ? (from ITCO )", "\nfor ( i = 0; i \nfor ( j = 100; j > 100 \u2013 i; j\u2013)", "\nsum++;", "\nA3: (99 * 100)/2 = 4950", "\nThe sum++ is performed 4950 times.", "\nQ4: Give 4 examples which belongs application layer in TCP/IP architecture? (from CISCO )", "\nA4: FTP, TELNET, HTTP and TFTP", "\nQ5: What\u2019s the meaning of ARP in TCP/IP? (from CISCO )", "\nA5: The \u201cARP\u201d stands for Address Resolution Protocol. The ARP standard defines two basic message types: a request and a response. a request message contains an IP address and requests the corresponding hardware address; a replay contains both the IP address, sent in the request, and the hardware address."], "title": "C++ object-oriented interview questions"},
{"contents": ["1\u3001\u5c40\u90e8\u53d8\u91cf\u80fd\u5426\u548c\u5168\u5c40\u53d8\u91cf\u91cd\u540d\uff1f \u3000", "\u3000\u7b54\uff1a\u80fd\uff0c\u5c40\u90e8\u4f1a\u5c4f\u853d\u5168\u5c40\u3002\u8981\u7528\u5168\u5c40\u53d8\u91cf\uff0c\u9700\u8981\u4f7f\u7528\u201d::\u201d ;\u5c40\u90e8\u53d8\u91cf\u53ef\u4ee5\u4e0e\u5168\u5c40\u53d8\u91cf\u540c\u540d\uff0c\u5728\u51fd\u6570\u5185\u5f15\u7528\u8fd9\u4e2a\u53d8\u91cf\u65f6\uff0c\u4f1a\u7528\u5230\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u800c\u4e0d\u4f1a\u7528\u5230\u5168\u5c40\u53d8\u91cf\u3002\u5bf9\u4e8e\u6709\u4e9b\u7f16\u8bd1\u5668\u800c\u8a00\uff0c\u5728\u540c\u4e00\u4e2a\u51fd\u6570\u5185\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u6bd4\u5982\u5728\u4e24\u4e2a\u5faa\u73af\u4f53\u5185\u90fd\u5b9a\u4e49\u4e00\u4e2a\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u800c\u90a3\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u5c31\u5728\u90a3\u4e2a\u5faa\u73af\u4f53\u5185\u3002", " \u3000\u3000 ", "2\u3001\u5982\u4f55\u5f15\u7528\u4e00\u4e2a\u5df2\u7ecf\u5b9a\u4e49\u8fc7\u7684\u5168\u5c40\u53d8\u91cf\uff1f \u3000\u3000", "\u7b54\uff1aextern \u3000\u53ef\u4ee5\u7528\u5f15\u7528\u5934\u6587\u4ef6\u7684\u65b9\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u7528extern\u5173\u952e\u5b57\uff0c\u5982\u679c\u7528\u5f15\u7528\u5934\u6587\u4ef6\u65b9\u5f0f\u6765\u5f15\u7528\u67d0\u4e2a\u5728\u5934\u6587\u4ef6\u4e2d\u58f0\u660e\u7684\u5168\u5c40\u53d8\u7406\uff0c\u5047\u5b9a\u4f60\u5c06\u90a3\u4e2a\u7f16\u5199\u9519\u4e86\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4\u4f1a\u62a5\u9519\uff0c\u5982\u679c\u4f60\u7528extern\u65b9\u5f0f\u5f15\u7528\u65f6\uff0c\u5047\u5b9a\u4f60\u72af\u4e86\u540c\u6837\u7684\u9519\u8bef\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4\u4e0d\u4f1a\u62a5\u9519\uff0c\u800c\u5728\u8fde\u63a5\u671f\u95f4\u62a5\u9519\u3002 ", "\u3000\u3000", "3\u3001\u5168\u5c40\u53d8\u91cf\u53ef\u4e0d\u53ef\u4ee5\u5b9a\u4e49\u5728\u53ef\u88ab\u591a\u4e2a.C\u6587\u4ef6\u5305\u542b\u7684\u5934\u6587\u4ef6\u4e2d\uff1f\u4e3a\u4ec0\u4e48\uff1f \u3000\u3000", "\u7b54\uff1a\u53ef\u4ee5\uff0c\u5728\u4e0d\u540c\u7684C\u6587\u4ef6\u4e2d\u4ee5static\u5f62\u5f0f\u6765\u58f0\u660e\u540c\u540d\u5168\u5c40\u53d8\u91cf\u3002 \u3000\u3000\u53ef\u4ee5\u5728\u4e0d\u540c\u7684C\u6587\u4ef6\u4e2d\u58f0\u660e\u540c\u540d\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u524d\u63d0\u662f\u5176\u4e2d\u53ea\u80fd\u6709\u4e00\u4e2aC\u6587\u4ef6\u4e2d\u5bf9\u6b64\u53d8\u91cf\u8d4b\u521d\u503c\uff0c\u6b64\u65f6\u8fde\u63a5\u4e0d\u4f1a\u51fa\u9519. \u3000 \u3000 ", "4\u3001\u8bf7\u5199\u51fa\u4e0b\u5217\u4ee3\u7801\u7684\u8f93\u51fa\u5185\u5bb9 \u3000\u3000", "#include  ", "int main(void) \u3000\u3000", "{ \u3000\u3000\u3000", "int a,b,c,d; ", "\u3000\u3000a=10; \u3000", "\u3000\u3000b=a++; \u3000", "\u3000\u3000c=++a; \u3000\u3000", "\u3000 d=10*a++; \u3000", "\u3000\u3000printf(\u201cb\uff0cc\uff0cd\uff1a%d\uff0c%d\uff0c%d\u201d\uff0cb\uff0cc\uff0cd\uff09; \u3000", "\u3000\u3000return 0; \u3000", "\u3000} \u3000\u3000", "\u7b54\uff1a10\uff0c12\uff0c120 \u3000", "\u3000", "5\u3001static\u5168\u5c40\u53d8\u91cf\u4e0e\u666e\u901a\u7684\u5168\u5c40\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1fstatic\u5c40\u90e8\u53d8\u91cf\u548c\u666e\u901a\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1fstatic\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u6709\u4ec0\u4e48\u533a\u522b\uff1f \u3000\u3000", "\u7b54: 1) \u5168\u5c40\u53d8\u91cf(\u5916\u90e8\u53d8\u91cf)\u7684\u8bf4\u660e\u4e4b\u524d\u518d\u51a0\u4ee5static \u5c31\u6784\u6210\u4e86\u9759\u6001\u7684\u5168\u5c40\u53d8\u91cf\u3002\u5168\u5c40\u53d8\u91cf\u672c\u8eab\u5c31\u662f\u9759\u6001\u5b58\u50a8\u65b9\u5f0f\uff0c \u9759\u6001\u5168\u5c40\u53d8\u91cf\u5f53\u7136\u4e5f\u662f\u9759\u6001\u5b58\u50a8\u65b9\u5f0f\u3002 \u8fd9\u4e24\u8005\u5728\u5b58\u50a8\u65b9\u5f0f\u4e0a\u5e76\u65e0\u4e0d\u540c\u3002\u8fd9\u4e24\u8005\u7684\u533a\u522b\u5728\u4e8e\u975e\u9759\u6001\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u662f\u6574\u4e2a\u6e90\u7a0b\u5e8f\uff0c \u5f53\u4e00\u4e2a\u6e90\u7a0b\u5e8f\u7531\u591a\u4e2a\u6e90\u6587\u4ef6\u7ec4\u6210\u65f6\uff0c\u975e\u9759\u6001\u7684\u5168\u5c40\u53d8\u91cf\u5728\u5404\u4e2a\u6e90\u6587\u4ef6\u4e2d\u90fd\u662f\u6709\u6548\u7684\u3002 \u800c\u9759\u6001\u5168\u5c40\u53d8\u91cf\u5219\u9650\u5236\u4e86\u5176\u4f5c\u7528\u57df\uff0c \u5373\u53ea\u5728\u5b9a\u4e49\u8be5\u53d8\u91cf\u7684\u6e90\u6587\u4ef6\u5185\u6709\u6548\uff0c \u5728\u540c\u4e00\u6e90\u7a0b\u5e8f\u7684\u5176\u5b83\u6e90\u6587\u4ef6\u4e2d\u4e0d\u80fd\u4f7f\u7528\u5b83\u3002\u7531\u4e8e\u9759\u6001\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u5c40\u9650\u4e8e\u4e00\u4e2a\u6e90\u6587\u4ef6\u5185\uff0c\u53ea\u80fd\u4e3a\u8be5\u6e90\u6587\u4ef6\u5185\u7684\u51fd\u6570\u516c\u7528\uff0c \u56e0\u6b64\u53ef\u4ee5\u907f\u514d\u5728\u5176\u5b83\u6e90\u6587\u4ef6\u4e2d\u5f15\u8d77\u9519\u8bef\u3002 \u3000\u3000", "2) \u4ece\u4ee5\u4e0a\u5206\u6790\u53ef\u4ee5\u770b\u51fa\uff0c \u628a\u5c40\u90e8\u53d8\u91cf\u6539\u53d8\u4e3a\u9759\u6001\u53d8\u91cf\u540e\u662f\u6539\u53d8\u4e86\u5b83\u7684\u5b58\u50a8\u65b9\u5f0f\u5373\u6539\u53d8\u4e86\u5b83\u7684\u751f\u5b58\u671f\u3002\u628a\u5168\u5c40\u53d8\u91cf\u6539\u53d8\u4e3a\u9759\u6001\u53d8\u91cf\u540e\u662f\u6539\u53d8\u4e86\u5b83\u7684\u4f5c\u7528\u57df\uff0c\u9650\u5236\u4e86\u5b83\u7684\u4f7f\u7528\u8303\u56f4\u3002\u3000\u3000                  3) static\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u4f5c\u7528\u57df\u4e0d\u540c,\u4ec5\u5728\u672c\u6587\u4ef6\u3002\u53ea\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4e2d\u4f7f\u7528\u7684\u51fd\u6570\u5e94\u8be5\u8bf4\u660e\u4e3a\u5185\u90e8\u51fd\u6570(static)\uff0c\u5185\u90e8\u51fd\u6570\u5e94\u8be5\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4e2d\u8bf4\u660e\u548c\u5b9a\u4e49\u3002\u5bf9\u4e8e\u53ef\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4ee5\u5916\u4f7f\u7528\u7684\u51fd\u6570\uff0c\u5e94\u8be5\u5728\u4e00\u4e2a\u5934\u6587\u4ef6\u4e2d\u8bf4\u660e\uff0c\u8981\u4f7f\u7528\u8fd9\u4e9b\u51fd\u6570\u7684\u6e90\u6587\u4ef6\u8981\u5305\u542b\u8fd9\u4e2a\u5934\u6587\u4ef6 \u3000\u3000", "\u7efc\u4e0a\u6240\u8ff0:", "static\u5168\u5c40\u53d8\u91cf\u4e0e\u666e\u901a\u7684\u5168\u5c40\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1a", "static\u5168\u5c40\u53d8\u91cf\u53ea\u521d\u4f7f\u5316\u4e00\u6b21\uff0c\u9632\u6b62\u5728\u5176\u4ed6\u6587\u4ef6\u5355\u5143\u4e2d\u88ab\u5f15\u7528; \u3000\u3000", "static\u5c40\u90e8\u53d8\u91cf\u548c\u666e\u901a\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1a", "static\u5c40\u90e8\u53d8\u91cf\u53ea\u88ab\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u4e0b\u4e00\u6b21\u4f9d\u636e\u4e0a\u4e00\u6b21\u7ed3\u679c\u503c\uff1b \u3000\u3000", "static\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u6709\u4ec0\u4e48\u533a\u522b\uff1a", "static\u51fd\u6570\u5728\u5185\u5b58\u4e2d\u53ea\u6709\u4e00\u4efd\uff0c\u666e\u901a\u51fd\u6570\u5728\u6bcf\u4e2a\u88ab\u8c03\u7528\u4e2d\u7ef4\u6301\u4e00\u4efd\u62f7\u8d1d", "\u3000\u3000", "6\u3001\u7a0b\u5e8f\u7684\u5c40\u90e8\u53d8\u91cf\u5b58\u5728\u4e8e\uff08\u5806\u6808\uff09\u4e2d\uff0c\u5168\u5c40\u53d8\u91cf\u5b58\u5728\u4e8e\uff08\u9759\u6001\u533a \uff09\u4e2d\uff0c\u52a8\u6001\u7533\u8bf7\u6570\u636e\u5b58\u5728\u4e8e\uff08 \u5806\uff09\u4e2d\u3002 \u3000\u3000", "7\u3001\u8bbe\u6709\u4ee5\u4e0b\u8bf4\u660e\u548c\u5b9a\u4e49\uff1a \u3000", "\u3000 typedef union ", "{", "long i; ", "int k[5];", " char c;", "} DATE; \u3000", "\u3000struct data", " {", "   int cat;", "   DATE cow; ", "double dog;", "} too; \u3000", "\u3000DATE max; \u3000\u3000", "\u5219\u8bed\u53e5 printf(\u201c%d\u201d,sizeof(struct data)+sizeof(max));\u7684\u6267\u884c\u7ed3\u679c\u662f\uff1a___52____ ", "\u8003\u70b9:\u533a\u522bstruct\u4e0eunion.(\u4e00\u822c\u5047\u5b9a\u572832\u4f4d\u673a\u5668\u4e0a)\u3000\u3000", "\u7b54\uff1aDATE\u662f\u4e00\u4e2aunion, \u53d8\u91cf\u516c\u7528\u7a7a\u95f4. \u91cc\u9762\u6700\u5927\u7684\u53d8\u91cf\u7c7b\u578b\u662fint[5], \u5360\u752820\u4e2a\u5b57\u8282. \u6240\u4ee5\u5b83\u7684\u5927\u5c0f\u662f20. data\u662f\u4e00\u4e2astruct, \u6bcf\u4e2a\u53d8\u91cf\u5206\u5f00\u5360\u7528\u7a7a\u95f4. \u4f9d\u6b21\u4e3aint4 + DATE20 + double8 = 32. \u6240\u4ee5\u7ed3\u679c\u662f 20 + 32 = 52. \u5f53\u7136\u2026\u5728\u67d0\u4e9b16\u4f4d\u7f16\u8f91\u5668\u4e0b, int\u53ef\u80fd\u662f2\u5b57\u8282,\u90a3\u4e48\u7ed3\u679c\u662f int2 + DATE10 + double8 = 20 ", "\u3000\u3000", "8\u3001\u961f\u5217\u548c\u6808\u6709\u4ec0\u4e48\u533a\u522b\uff1f", " \u3000\u3000 \u3000\u3000\u961f\u5217\u5148\u8fdb\u5148\u51fa\uff0c\u6808\u540e\u8fdb\u5148\u51fa \u3000\u3000", "9\u3001\u5199\u51fa\u4e0b\u5217\u4ee3\u7801\u7684\u8f93\u51fa\u5185\u5bb9 \u3000\u3000", "#include ", "int inc(int a) \u3000\u3000", " { return(++a); } \u3000\u3000", " int multi(int*a,int*b,int*c) \u3000\u3000", " { \u3000 return(*c=*a**b); } \u3000", "typedef int(FUNC1)(int in); \u3000\u3000", " typedef int(FUNC2) (int*,int*,int*); \u3000", "\u3000 void show(FUNC2 fun,int arg1, int*arg2) \u3000", "\u3000 { \u3000\u3000\u3000", "  FUNC1 p=&inc; \u3000\u3000", "\u3000 int temp =p(arg1); \u3000\u3000", "\u3000 fun(&temp,&arg1, arg2); \u3000\u3000", "\u3000 printf(\u201c%dn\u201d,*arg2); \u3000\u3000", " } \u3000\u3000", " main() \u3000\u3000", " { \u3000\u3000", "\u3000 int a; \u3000\u3000       //\u5c40\u90e8\u53d8\u91cfa\u4e3a0;", "\u3000 show(multi,10,&a); \u3000\u3000\u3000", " return 0; ", "\u3000\u3000 } \u3000", "\u3000\u7b54\uff1a110 \u3000", "\u3000 ", "10\u3001\u8bf7\u627e\u51fa\u4e0b\u9762\u4ee3\u7801\u4e2d\u7684\u6240\u6709\u9519\u8bef (\u9898\u76ee\u4e0d\u9519,\u503c\u5f97\u4e00\u770b)\u3000\u3000", "\u8bf4\u660e\uff1a\u4ee5\u4e0b\u4ee3\u7801\u662f\u628a\u4e00\u4e2a\u5b57\u7b26\u4e32\u5012\u5e8f\uff0c\u5982\u201cabcd\u201d\u5012\u5e8f\u540e\u53d8\u4e3a\u201cdcba\u201d \u3000\u3000 ", "#include\u201dstring.h\u201d \u3000\u3000 ", "main() \u3000\u3000 ", "{ \u3000\u3000 ", "char*src=\u201dhello,world\u201d; \u3000\u3000 ", "char* dest=NULL; \u3000\u3000 ", "int len=strlen(src); \u3000\u3000 ", "dest=(char*)malloc(len); \u3000\u3000   ", "char* d=dest; \u3000\u3000 ", "char* s=src[len]; \u3000         ", "while(len\u2013!=0) \u3000\u3000 ", "d++=s\u2013; \u3000\u3000       ", "printf(\u201c%s\u201d,dest); \u3000\u3000", "return 0; \u3000\u3000 ", "} \u3000\u3000 ", "\u7b54\uff1a \u3000\u3000", "\u65b9\u6cd51\uff1a\u4e00\u5171\u67094\u4e2a\u9519\u8bef; \u3000\u3000 ", "int main() \u3000\u3000", "{ \u3000\u3000", "\u3000char* src = \u201chello,world\u201d; \u3000\u3000", "\u3000int len = strlen(src); \u3000\u3000", "\u3000char* dest = (char*)malloc(len+1);//\u8981\u4e3a\u5206\u914d\u4e00\u4e2a\u7a7a\u95f4 \u3000\u3000\u3000char* d = dest; \u3000\u3000", "\u3000char* s = &src[len-1];          //\u6307\u5411\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u3000\u3000", "\u3000while( len\u2013 != 0 ) \u3000\u3000", "\u3000 *d++=*s\u2013; \u3000\u3000", "\u3000*d = 0;           //\u5c3e\u90e8\u8981\u52a0\u2019\\0\u2019 \u3000\u3000", "\u3000printf(\u201c%sn\u201d,dest); \u3000\u3000\u3000", "free(dest);        // \u4f7f\u7528\u5b8c\uff0c\u5e94\u5f53\u91ca\u653e\u7a7a\u95f4\uff0c\u4ee5\u514d\u9020\u6210\u5185\u5b58\u6c47\u6cc4\u9732 ", "dest = NULL;\u3000\u3000 //\u9632\u6b62\u4ea7\u751f\u91ce\u6307\u9488\u3000", "return 0; \u3000", "\u3000} ", "\u65b9\u6cd52\uff1a (\u65b9\u6cd5\u4e00\u9700\u8981\u989d\u5916\u7684\u5b58\u50a8\u7a7a\u95f4,\u6548\u7387\u4e0d\u9ad8.)\u3000\u4e0d\u9519\u7684\u60f3\u6cd5", "#include ", "#include ", "main()", "{", "char str[]=\u201dhello,world\u201d;", "int len=strlen(str);", "char t;", "for(int i=0; i"], "title": "\u5d4c\u5165\u5f0f C\u8bed\u8a00 C++\u7ecf\u5178\u9762\u8bd5\u9898\u5927\u5168 \u7b14\u8bd5\u6740\u624b"},
{"contents": ["1. \u5047\u8bbe\u6709\u5982\u4e0b\u4e00\u4e2a\u7c7b", "\nclass String{", "\npublic:", "\nString(const char *value);", "\n~String();", "\nchar* strcpy(char* dest, const char* source);", "\nsize t strlen( const char *string );", "\n\u2026", "\nprivate:", "\nchar *data;", "\n};", "\n\u8981\u6c42\u5229\u7528\u7c7b\u4e2d\u7684\u5df2\u77e5\u51fd\u6570\u5b9e\u73b0\u8be5\u7c7b\u7684\u8d4b\u503c\u8fd0\u7b97\u7b26\u201coperator=\u201d\u3002", "\nString& String::operator=(const String& rhs)", "\u7b54\u6848\uff1a", "\nString& String::operator=(const String& rhs)", "\n{", "\nif(this == &rhs) return *this; // \u68c0\u67e5\u5bf9\u81ea\u5df1\u8d4b\u503c\u7684\u60c5\u51b5", "\ndelete [ ] data; // delete old memory", "\n//\u5206\u914d\u65b0\u5185\u5b58\uff0c\u5c06rhs \u7684\u503c\u62f7\u8d1d\u7ed9\u5b83", "\ndata = new char[strlen(rhs.data)+1];", "\nstrcpy(data, rhs.data);", "\nreturn *this; //\u8fd4\u56de", "\n}", "2. \u5047\u8bbeComplex\u662f\u4e00\u4e2a\u7c7b\u3002\u8bf7\u95ee\u4ee5\u4e0b\u4e24\u79cd\u5b9e\u73b0\u65b9\u5f0f\u5728\u6548\u7387\u4e0a\u53ef\u80fd\u6709\u4ec0\u4e48\u533a\u522b\uff1f\u4e3a\u4ec0", "\n\u4e48\uff1f", "\n\u65b9\u5f0f1\uff1a", "\nComplex a, b, c, d, result;", "\n\u2026", "\nresult = a + b + c + d;", "\n\u65b9\u5f0f2\uff1a", "\nComplex a, b, c, d, result;", "\n\u2026", "\nresult += a;", "\nresult += b;", "\nresult += c;", "\nresult += d;", "\u7b54\u6848\uff1a", "\n\u65b9\u5f0f2\u7684\u6548\u7387\u6709\u53ef\u80fd\u6bd4\u65b9\u5f0f1\u8981\u9ad8\u4e00\u4e9b\u3002\u56e0\u4e3a\u65b9\u5f0f1\u8fd0\u7b97\u4e2d\u8981\u4ea7\u751f\u4e09\u4e2a\u4e34\u65f6\u5bf9\u8c61, \u5982", "\n\u679c\u8be5\u7c7b\u7684\u6784\u9020\u590d\u6742\uff0c\u90a3\u4e48\u4f1a\u6d6a\u8d39\u8f83\u591a\u65f6\u95f4\u3002\u800c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u65b9\u5f0f2\u53ef\u4ee5\u4e0d\u7528\u4ea7\u751f\u4efb", "\n\u4f55\u4e34\u65f6\u5bf9\u8c61\u3002", "3. \u5224\u65ad\u4e0b\u5217\u6bcf\u884c\u4ee3\u7801\u662f\u5426\u6b63\u786e\uff0c\u9519\u8bef\u7684\u8bf7\u89e3\u91ca\u539f\u56e0\u3002", "\n( a ) int ival = 1.01;\t\t\t( k ) int i = -1;", "\n(b) int &rval1 = 1.01; \t\t\t( l ) const int ic = i;", "\n( c ) int &rval2 = ival;\t\t\t(m) const int *pic = &ic;", "\n(d) int &rval3 = &ival; \t\t\t(n) int *const cpi = &ic;", "\n( e ) int *pi = &ival; \t\t\t( o ) const int const* cpic = &ic;", "\n( f ) int &rval4 = pi; \t\t\t(p) pic = cpic;", "\n( g ) int &rval5 = *pi; \t\t\t( q ) cpic = &ic;", "\n(h) int &*prval1 = pi;\t\t\t( r ) cpi = pic;", "\n( i ) const int &ival2 = 1; \t\t\t( s ) ic = *cpic;", "\n( j ) const int &*prval2 = &ival;\t\t\t( t ) pic = &ic;", "\u7b54\u6848\uff1a", "\n(a) \u6b63\u786e;", "\n(b) \u9519\u8bef\uff0c\u5fc5\u987b\u662f\u4e00\u4e2aconst\u5f15\u7528\u624d\u6b63\u786e\u6539\u4e3a\uff1aconst int &rval1 = 1.01;", "\n(c) \u6b63\u786e;", "\n(d) \u9519\u8bef\uff0crval3\u7684\u7c7b\u578b\u662fint\u800c\u975eint *,\u6539\u4e3aint &rval3 = ival; \u6216\u8005int* const &rval3", "\n= &ival;", "\n(e) \u6b63\u786e;", "\n( f ) \u9519\u8bef\uff0crval4\u7684\u7c7b\u662fint\u800c\u975eint *,\u6539\u4e3aint * &rval4 =pi;", "\n(g) \u6b63\u786e;", "\n(h) \u9519\u8bef\uff0c\u6307\u5411\u5f15\u7528\u7684\u6307\u9488\u662f\u4e0d\u5408\u6cd5\u7684\uff0c\u6539\u4e3aint *&prval1 = pi;", "\n( i ) \u6b63\u786e;", "\n( j ) \u9519\u8bef\uff0c\u6307\u5411\u5f15\u7528\u7684\u6307\u9488\u662f\u4e0d\u5408\u6cd5\u7684\uff0c\u6539\u4e3aint * const & prval2 = &ival;", "\n(k) \u6b63\u786e;", "\n( l ) \u6b63\u786e;", "\n(m) \u6b63\u786e;", "\n(n) \u9519\u8bef\uff0ccpi\u662f\u4e00\u4e2a\u5e38\u91cf\u6307\u9488\uff0c\u6307\u5411int\uff0c\u4f46\u662fic\u5374\u662f\u4e00\u4e2aconst int;", "\n(o) \u6b63\u786e\uff0ccpic\u662f\u4e00\u4e2a\u5e38\u91cf\u6307\u9488\uff0c\u6307\u5411const int, ic\u7684\u7c7b\u578b\u4e5f\u662fconst;", "\n(p) \u6b63\u786e;", "\n(q) \u6b63\u786e;", "\n(r) \u9519\u8bef\uff0ccpi\u662f\u4e2a\u5e38\u91cf\uff0c\u4e0d\u80fd\u88ab\u4fee\u6539;", "\n(s) \u9519\u8bef\uff0cic\u662f\u4e2a\u5e38\u91cf\uff0c\u4e0d\u80fd\u88ab\u4fee\u6539;", "\n(t) \u6b63\u786e\u3002", "4. \u9605\u8bfb\u4e0b\u9762\u7684\u7a0b\u5e8f\u6bb5\uff0c\u5199\u51fa\u8fd0\u884c\u7ed3\u679c\u3002", "\nclass A{", "\npublic:", "\nA() { printf(\u201cA \u6784\u9020\uff01\\n\u201d); }", "\nvirtual ~A(){printf(\u201cA \u6790\u6784\uff01\\n\u201d); }", "\nvirtual output1(){ printf( \u201coutput A1\uff01\\n\u201d );}", "\nvirtual output2() { printf( \u201coutput A2\uff01\\n\u201d ); }", "\n};", "\nclass B : public A{", "\npublic:", "\nB() { printf(\u201cB \u6784\u9020\uff01\\n\u201d);}", "\nvirtual ~B(){ printf(\u201cB \u6790\u6784\uff01\\n\u201d);}", "\nvirtual output1(){ printf( \u201coutput B1\uff01\\n \u201d ); }", "\n};", "\nclass C : public B{", "\npublic:", "\nC(){ printf(\u201cC \u6784\u9020\uff01\\n\u201d);}", "\nvirtual ~C() { printf(\u201cC \u6790\u6784\uff01\\n\u201d);}", "\nvirtual output1() { printf( \u201coutput C1\uff01\\n \u201d );}", "\n};", "\nint main()", "\n{", "\nC ObjC;", "\nObjC.output1();", "\nObjC.output2();", "\n}", "\u7b54\u6848\uff1a", "\nA \u6784\u9020\uff01", "\nB \u6784\u9020\uff01", "\nC \u6784\u9020\uff01", "\noutput C1 !", "\noutput A2 !", "\nC \u6790\u6784\uff01", "\nB \u6790\u6784\uff01", "\nA \u6790\u6784\uff01", "5. \u9605\u8bfb\u4e0b\u9762\u7684\u7a0b\u5e8f\u6bb5\uff0c\u5199\u51fa\u8fd0\u884c\u7ed3\u679c\u3002\u8bf7\u8bf4\u660e\u7406\u7531\u3002", "\n#include", "};", "class Derived : public Base{", "\npublic:", "\ndouble f(double d){", "\ncout \nreturn d+1.1;", "\n}", "};", "int main()", "\n{", "\nBase* derived = new Base;", "\ncout f(10) \ncout f(10.1) \n}", "\n\u7b54\u6848\uff1a", "\nHere in the class Derived, f(double): 11.1", "\nHere in the class Derived, f(double): 11.2", "\n\u7406\u7531\uff1aC++\u8bed\u8a00\u4e2d\u65e0\u6cd5\u5728\u6d3e\u751f\u7c7b\u4e2d\u8fdb\u884c\u91cd\u8f7d\uff0c\u6240\u4ee5\u4e24\u4e2a\u51fd\u6570\u8c03\u7528\u5747\u8c03\u7528\u6d3e\u751f\u7c7b\u4e2d", "\n\u7684\u51fd\u6570\u3002", "6. \u9605\u8bfb\u4e0b\u9762\u7684\u7a0b\u5e8f\u6bb5\uff0c\u5199\u51fa\u8fd0\u884c\u7ed3\u679c\u3002\u8bf7\u8bf4\u660e\u7406\u7531\u3002", "\n#include ", "\u7b54\u6848\uff1a", "\nClancy", "\nClancy", "\n\u7406\u7531\uff1a\u6307\u9488\u4e0e\u5f15\u7528\u7684\u4e00\u4e2a\u91cd\u8981\u7684\u4e0d\u540c\u662f\u6307\u9488\u53ef\u4ee5\u88ab\u91cd\u65b0\u8d4b\u503c\u4ee5\u6307\u5411\u53e6\u4e00\u4e2a\u4e0d\u540c\u7684", "\n\u5bf9\u8c61\u3002\u4f46\u662f\u5f15\u7528\u5219\u603b\u662f\u6307\u5411\u5728\u521d\u59cb\u5316\u65f6\u88ab\u6307\u5b9a\u7684\u5bf9\u8c61\uff0c\u4ee5\u540e\u4e0d\u80fd\u6539\u53d8\u3002", "7. \u9605\u8bfb\u4e0b\u9762\u7684\u7a0b\u5e8f\u6bb5\uff0c\u627e\u51fa\u5176\u4e2d\u7684\u9519\u8bef\uff0c\u5e76\u8bf4\u660e\u4f1a\u51fa\u73b0\u4ec0\u4e48\u6837\u7684\u540e\u679c\u3002", "\nclass Rational{ // \u4e00\u4e2a\u6709\u7406\u6570\u7c7b", "\npublic:", "\nRational (int numerator = 0, int denominator = 1) {n = numerator; d = denominator;}", "\n~Rational();", "\n\u2026", "\nprivate:", "\nint n, d; // \u5206\u5b50\u548c\u5206\u6bcd", "\nfriend const Rational& operator*(const Rational& lhs, const Rational& rhs);", "\n};", "\ninline const Rational& operator*(const Rational& lhs, const Rational& rhs)", "\n{", "\nRational result(lhs.n * rhs.n, lhs.d * rhs.d);", "\nreturn result;", "\n}", "\nRational two(2, 2);", "\nRational four = two * two;", "\u7b54\u6848\uff1a \u51fd\u6570operator*\u8fd4\u56de\u5c40\u90e8\u53d8\u91cfresult\u7684\u5f15\u7528\u9519\u8bef\u3002\u5728\u51fd\u6570\u8c03\u7528\u65f6\uff0c\u5c06\u53d1\u751f\u5982\u4e0b", "\n\u4e8b\u4ef6\uff1a", "\n\uff081\uff09 \u5c40\u90e8\u5bf9\u8c61result\u88ab\u521b\u5efa\u3002", "\n\uff082\uff09 \u521d\u59cb\u5316\u4e00\u4e2a\u5f15\u7528\uff0c\u4f7f\u4e4b\u6210\u4e3aresult\u7684\u53e6\u4e00\u4e2a\u540d\u5b57\uff1b\u8fd9\u4e2a\u5f15\u7528\u5148\u653e\u5728\u53e6\u4e00\u8fb9\uff0c", "\n\u7559\u505aoperator*\u7684\u8fd4\u56de\u503c\u3002", "\n\uff083\uff09 \u5c40\u90e8\u5bf9\u8c61result\u88ab\u9500\u6bc1\uff0c\u5b83\u5728\u5806\u6808\u6240\u5360\u7684\u7a7a\u95f4\u53ef\u88ab\u672c\u7a0b\u5e8f\u5176\u5b83\u90e8\u5206\u6216\u5176\u4ed6\u7a0b", "\n\u5e8f\u4f7f\u7528\u3002", "\n\uff084\uff09 \u7528\u6b65\u9aa4\uff082\uff09\u4e2d\u7684\u5f15\u7528\u521d\u59cb\u5316\u5bf9\u8c61four\u3002\u7b2c4\u6b65\u4ea7\u751f\u4e86\u9519\u8bef\u3002\u56e0\u4e3a\uff0c\u7b2c2\u6b65\u88ab", "\n\u521d\u59cb\u5316\u7684\u5f15\u7528\u5728\u7b2c3\u6b65\u7ed3\u675f\u65f6\u6307\u5411\u7684\u4e0d\u518d\u662f\u4e00\u4e2a\u6709\u6548\u7684\u5bf9\u8c61\uff0c\u6240\u4ee5\u5bf9\u8c61four\u7684\u521d\u59cb", "\n\u5316\u7ed3\u679c\u5b8c\u5168\u662f\u4e0d\u53ef\u786e\u5b9a\u7684\u3002", "8. \u9605\u8bfb\u4e0b\u9762\u7684\u7a0b\u5e8f\u6bb5\uff0c\u627e\u51fa\u5176\u4e2d\u7684\u9519\u8bef\uff0c\u5e76\u8bf4\u660e\u7c7b\u7684\u6210\u5458\u5728\u4ec0\u4e48\u60c5\u51b5\u4e0b\u53ea\u80fd\u4f7f\u7528\u6210", "\n\u5458\u521d\u59cb\u5316\u5217\u8868\u8fdb\u884c\u521d\u59cb\u5316\u3002", "\ntemplate", "private:", "\nconst string& name;", "\nt * const ptr;", "\n};", "\u7b54\u6848\uff1a \u8fd9\u4e2a\u7c7b\u7684\u5b9a\u4e49\u8981\u6c42\u4f7f\u7528\u4e00\u4e2a\u6210\u5458\u521d\u59cb\u5316\u5217\u8868\uff0c\u56e0\u4e3aconst\u6210\u5458\u53ea\u80fd\u88ab\u521d\u59cb", "\n\u5316\uff0c\u4e0d\u80fd\u88ab\u8d4b\u503c\u3002", "9. \uff08\u7f16\u7a0b\u9898\uff09\u9a8c\u8bc1\u6b4c\u5fb7\u5df4\u8d6b\u731c\u60f3\uff1a\u4efb\u4e00\u5145\u5206\u5927\u7684\u5076\u6570\uff0c\u53ef\u4ee5\u7528\u4e24\u4e2a\u7d20\u6570\u4e4b\u548c\u8868\u793a\u3002", "\n\u4f8b\u5982\uff1a", "\n4 = 2 + 2", "\n6 = 3 + 3", "\n\u2026", "\n98 = 19 + 79", "\u7b54\u6848\uff1a", "\n#include", "\n", "10. \uff08\u7f16\u7a0b\u9898\uff09\u8bbe\u6709\u4e00\u4e2a\u80cc\u5305\u53ef\u4ee5\u653e\u5165\u7684\u7269\u54c1\u7684\u91cd\u91cf\u4e3as\uff0c\u73b0\u6709n\u4ef6\u7269\u54c1\uff0c\u91cd\u91cf\u5206\u522b", "\n\u4e3aw[1];w[2]; \u2026 ;w[n]\u3002\u95ee\u80fd\u5426\u4ece\u8fd9n\u4ef6\u7269\u54c1\u4e2d\u9009\u62e9\u82e5\u5e72\u4ef6\u653e\u5165\u6b64\u80cc\u5305\u4e2d\uff0c \u4f7f\u5f97\u653e", "\n\u5165\u7684\u91cd\u91cf\u4e4b\u548c\u6b63\u597d\u4e3as\u3002\u5982\u679c\u5b58\u5728\u4e00\u79cd\u7b26\u5408\u4e0a\u8bc9\u8981\u6c42\u7684\u9009\u62e9\uff0c\u5219\u79f0\u6b64\u80cc\u5305\u95ee\u9898\u6709\u89e3", "\n\uff08\u6216\u79f0\u5176\u89e3\u4e3a\u771f\uff09\uff1b\u5426\u5219\u79f0\u6b64\u80cc\u5305\u95ee\u9898\u65e0\u89e3\uff08\u6216\u79f0\u5176\u89e3\u4e3a\u5047\uff09\u3002\u8bd5\u7528\u7684\u9012\u5f52\u65b9\u6cd5", "\n\u8bbe\u8ba1\u6c42\u89e3\u80cc\u5305\u95ee\u9898\u7684\u7b97\u6cd5\u3002\uff08\u63d0\u793a\uff1a\u6b64\u80cc\u5305\u95ee\u9898\u7684\u9012\u5f52\u5b9a\u4e49\u53ef\u5206\u56db\u79cd\u60c5\u51b5\u6765\u8003\u8651:", "\n1) s = 0; 2) s  0 and n  0 and n>=1.\uff09", "\u7b54\u6848\uff1a", "\nKNAP(s,n) \u6709\u4ee5\u4e0b\u56db\u79cd\u60c5\u51b5\uff1a", "\nTrue \ts = 0", "\nFalse \ts \nFalse\ts > 0 and n \nKNAP(s, n- 1) or KNAP(s- w[n], n- 1) \ts > 0 and n >= 1", "#include ", "int main(int argc, char* argv[]) {", "\nint s,num;", "\nint * w;", "\ncout \ncin>>s;", "\ncout \ncin >>num;", "\nif(num \nprintf(\"the number of the goods must be greater than 0!\\n\");", "\nreturn 0;", "\n}", "\nw = new int[num];", "\nint i = 0;", "\nwhile(i \nprintf(\"Input the weight of the %d th goods:\", i);", "\ncin>>w[ i ];", "\nif(w[ i ] \nprintf(\u201cthe weight of the %d th goods must be great/equal 0!\\n\u201d, i);", "\nelse", "\ni++;", "\n}", "\nint len=0;", "\nbool ret = KNAP(s,num,w, len);", "\nif(!ret)", "\nprintf(\u201cThere is no solution!\\n\u201d);", "\nelse", "\nprintf(\u201cThere is a solution!\\n\u201d);", "\ndelete [ ]w;", "\nreturn 0;", "\n}"], "title": "C++\u7b14\u8bd5\u9898\uff08\u5341\u56db\uff09"},
{"contents": ["\u4e0a\u6d77\u805a\u529b\u4f20\u5a92\u6280\u672f\u6709\u9650\u516c\u53f8\u6210\u7acb\u4e8e2005\u5e745\u6708\uff0c\u662f\u5bb6\u65b0\u5192\u51fa\u6765\u7684\u516c\u53f8\uff0c\u800c\u4ed6\u80fd\u591f\u5192\u51fa\u6765\u7684\u539f\u56e0\u662f\u7531\u4e8e\u5b83\u7684\u7535\u89c6\u76f4\u64ad\u8f6f\u4ef6PPLIVE\uff08www.pplive.com\uff09\u62a2\u5360\u4e86\u57fa\u4e8eP2P\u6280\u672f\u7684\u7f51\u7edc\u89c6\u8baf\u670d\u52a1\u7684\u5148\u673a\uff0c\u8d85\u7ea7\u5973\u751f\u7535\u89c6\u8282\u76ee\u7684\u706b\u7206\u6210\u5c31\u4e86PPLIVE\u8f6f\u4ef6\u8fd9\u6b3e\u8f6f\u4ef6\uff0c\u4e0d\u8fc7\u73b0\u5728\u8fd9\u4e2a\u9886\u57df\u7684\u7ade\u4e89\u8005\u8702\u62e5\u800c\u4e0a\uff0c\u65e5\u5b50\u5e76\u4e0d\u8f7b\u677e\u3002\u5982\u679c\u662f\u6211\uff0c\u6211\u4f1a\u5f88\u614e\u91cd\u7684\u8003\u8651\u8fd9\u7c7b\u65b0\u5174\u5c0f\u516c\u53f8\u7684\uff0c\u5f53\u7136\u6211\u8fd8\u662f\u5f88\u4f69\u670d\u5b83\u7684\uff0c\u516c\u53f8\u7684\u521b\u59cb\u4eba\u662f\u534e\u4e2d\u79d1\u6280\u5927\u5b66\u7684\u6821\u53cb\uff0c\u6709\u5e78\u89c1\u8fc7\u4ed6\u7684\u6f14\u8bb2\u3002", "\n\u3000\u3000\u4e0b\u9762\u662f\u5b832005\u5e74\u5ea6\u7684\u5b98\u65b9VC\u7b14\u8bd5\u9898\uff0c\u4ed6\u79f0\uff1a\u5982\u6709\u81ea\u4fe12\u5c0f\u65f6\u80fd\u505a\u5b8c\u7684\u5e94\u8058\u8005\u8bf7\u5c06\u505a\u5b8c\u7b54\u6848\u53d1mail\u81f3campus_hr@synacast.com\uff0c\u6211\u4eec\u4f1a\u9a6c\u4e0a\u548c\u4f60\u8054\u7cfb\u7684\u3002\u5475\u5475\uff0c\u6211\u5e76\u4e0d\u6253\u7b97\u628a\u7b54\u6848\u53d1\u5230\u8fd9\u4e2a\u90ae\u7bb1\u53bb\u3002", "\u4e00\u3001\u95ee\u7b54", "\n1\u3001\u5b9e\u6a21\u5f0f\u4e0e\u4fdd\u62a4\u6a21\u5f0f\u3002\u4e3a\u4ec0\u4e48\u8981\u8bbe\u8ba1\u8fd9\u4e24\u79cd\u6a21\u5f0f\uff1f\u597d\u5904\u5728\u4ec0\u4e48\u5730\u65b9\uff1f\u5206\u522b\u5199\u51fa\u5404\u81ea\u5bfb\u5740\u7684\u8fc7\u7a0b\u3002", "\n\u7b54\uff1a", "\n1. \u5b9e\u6a21\u5f0f\uff0c\u53c8\u53eb\u5b9e\u5730\u5740\u6a21\u5f0f\uff0cCPU\u5b8c\u5168\u6309\u71678086\u7684\u5b9e\u9645\u5bfb\u5740\u65b9\u6cd5\u8bbf\u95ee\u4ece00000h\u2013FFFFFh\uff081MB\u5927\u5c0f\uff09\u7684\u5730\u5740\u8303\u56f4\u7684\u5185\u5b58\uff0c\u5728\u8fd9\u79cd\u6a21\u5f0f\u4e0b\uff0cCPU\u53ea\u80fd\u505a\u5355\u4efb\u52a1\u8fd0\u884c\uff1b\u5bfb\u5740\u516c\u5f0f\u4e3a\uff1a\u7269\u7406\u5730\u5740=\u5de6\u79fb4\u4f4d\u7684\u6bb5\u5730\u5740+\u504f\u79fb\u5730\u5740\uff0c\u5373\uff1a\u7269\u7406\u5730\u5740\u662f\u753116\u4f4d\u7684\u6bb5\u5730\u5740\u548c16\u4f4d\u7684\u6bb5\u5185\u504f\u79fb\u5730\u5740\u7ec4\u6210\u7684\u3002", "\n2.\u4fdd\u62a4\u6a21\u5f0f\uff0c\u53c8\u53eb\u5185\u5b58\u4fdd\u62a4\u6a21\u5f0f\uff0c\u5bfb\u5740\u91c7\u752832\u4f4d\u6bb5\u548c\u504f\u79fb\u91cf\uff0c\u6700\u5927\u5bfb\u5740\u7a7a\u95f44GB\uff0c\u5728\u8fd9\u79cd\u6a21\u5f0f\u4e0b\uff0c\u7cfb\u7edf\u8fd0\u884c\u4e8e\u591a\u4efb\u52a1\uff0c\u8bbe\u8ba1\u8fd9\u79cd\u6a21\u5f0f\u7684\u539f\u56e0\u548c\u597d\u5904\u662f\uff1a\u4fdd\u62a4\u6a21\u5f0f\u589e\u52a0\u4e86\u5bfb\u5740\u7a7a\u95f4\uff0c\u589e\u52a0\u4e86\u5bf9\u591a\u4efb\u52a1\u7684\u652f\u6301\uff0c\u589e\u52a0\u4e86\u6bb5\u9875\u5f0f\u5bfb\u5740\u673a\u5236\u7684\u5185\u5b58\u7ba1\u7406\uff08\u5206\u6bb5\u673a\u5236\u4f7f\u5f97\u6bb5\u5177\u6709\u8bbf\u95ee\u6743\u9650\u548c\u7279\u6743\u7ea7\uff0c\u5404\u5e94\u7528\u7a0b\u5e8f\u548c\u64cd\u4f5c\u7cfb\u7edf\u7684\u4ee3\u7801\u548c\u6838\u5fc3\u662f\u88ab\u4fdd\u62a4\u7684\uff0c\u8fd9\u4e5f\u662f\u591a\u4efb\u52a1\u652f\u6301\u7684\u5b9e\u73b0\u5173\u952e\u548c\u4fdd\u62a4\u8fd9\u4e2a\u540d\u5b57\u7684\u7531\u6765\uff09\u3002\u5bfb\u5740\u8fc7\u7a0b\u4e3a\uff1a\u7269\u7406\u5730\u5740=\u7531\u6bb5\u5730\u5740\u67e5\u8be2\u5168\u5c40\u63cf\u8ff0\u7b26\u8868\u4e2d\u7ed9\u51fa\u7684\u6bb5\u57fa\u5740+\u504f\u79fb\u5730\u5740\uff0c\u5373\uff1a\u7269\u7406\u5730\u5740\u7531\u5f71\u50cf\u5bc4\u5b58\u5668\u4e2d\u7684\u57fa\u5740\u52a0\u4e0a16\u4f4d\u6216\u800532\u4f4d\u7684\u504f\u79fb\u7ec4\u6210\u3002", "2\u3001\u8bf7\u9605\u8bfb\u4ee5\u4e0b\u4e00\u6bb5\u7a0b\u5e8f\uff0c\u5e76\u7ed9\u51fa\u7b54\u6848\u3002", "\nclass A", "\n{", "\npublic:", "\n    A(){ doSth(); }", "\n    virtual void doSth(){printf(\u201cI am A\u201d);}", "\n};", "\nclass B:public A", "\n{", "\npublic:", "\n    virtual void doSth(){ printf(\u201cI am B\u201d);}", "\n};", "\nB b;", "\n\u6267\u884c\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f\u4e3a\u4ec0\u4e48\uff1f", "\n\u7b54\uff1a\u6267\u884c\u7ed3\u679c\u662fI am A", "\n\u56e0\u4e3ab\u5bf9\u8c61\u6784\u9020\u65f6\u8c03\u7528\u57fa\u7c7bA\u7684\u6784\u9020\u51fd\u6570A()\uff0c\u5f97\u6b64\u7ed3\u679c\u3002", "3\u3001\u5728STL\u7684\u5e94\u7528\u4e2d map\u8fd9\u79cdkey-value\u7684\u5e94\u7528\u5f88\u591a\uff0c\u5982\u679ckey\u7684\u7c7b\u578b\u662fGUID\uff0c\u8be5\u5982\u4f55\u5904\u7406\uff1f", "\n\u7b54\uff1a\u8c01\u77e5\u9053\u600e\u4e48\u5904\u7406\u8865\u4e0a\u5427\u3002", "4\u3001\u4e00\u4e2a\u5185\u5b58\u53d8\u91cfa=5\uff0c\u67095\u4e2a\u7ebf\u7a0b\u9700\u8981\u5bf9\u5176\u8fdb\u884c\u64cd\u4f5c\uff0c\u5176\u4e2d3\u4e2a\u5bf9a\u8fdb\u884c\u52a01\u64cd\u4f5c\uff0c2\u4e2a\u5bf9a\u8fdb\u884c\u51cf1\u64cd\u4f5c\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u80fd\u591f\u5f97\u5230\u6b63\u5e38\u7ed3\u679c6\uff0c\u9700\u8981\u4f7f\u7528\u4ec0\u4e48\u65b9\u6cd5\uff1f\uff08\u5217\u51fa\u8d8a\u591a\u8d8a\u597d\uff09", "\n\u7b54\uff1a\u5373\u8981\u6c42\u5217\u51fa\u7ebf\u7a0b\u540c\u6b65\u65b9\u6cd5\uff0c\u5177\u4f53\u7b54\u6848\u53ef\u89c1\u4e0b\u9762\u4e00\u9898\u3002", "5\u3001\u63cf\u8ff0\u5e76\u6bd4\u8f83\u4ee5\u4e0b\u5bf9\u8c61\uff1a\u4e8b\u4ef6\uff0c\u4fe1\u6807\uff0c\u4e34\u754c\u533a\uff0c\u4e92\u65a5\u5bf9\u8c61\u3002", "\n\u7b54\uff1a\u8fd9\u4e9b\u5bf9\u8c61\u90fd\u662f\u7528\u4e8e\u7ebf\u7a0b\u540c\u6b65\u7684\u5bf9\u8c61\u3002", "\n\u4e34\u754c\u533a\uff1a\u4e00\u79cd\u4fdd\u8bc1\u5728\u67d0\u4e00\u65f6\u523b\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u80fd\u8bbf\u95ee\u6570\u636e\u7684\u7b80\u4fbf\u529e\u6cd5\u3002\u5b83\u53ea\u53ef\u4ee5\u5728\u540c\u4e00\u8fdb\u7a0b\u5185\u90e8\u4f7f\u7528\u3002\u4e3b\u8981API\u51fd\u6570\u6709\uff0c\u4ea7\u751f\u4e34\u754c\u533a\uff1aInitializeCriticalSection\uff0c\u5220\u9664\u4e34\u754c\u533a\uff1aDeleteCriticalSection\uff0c\u8fdb\u5165\u4e34\u754c\u533a\uff1aEnterCriticalSection\uff0c\u9000\u51fa\u4e34\u754c\u533a\uff1aLeaveCriticalSection\u3002", "\n\u4e92\u65a5\u5bf9\u8c61\uff1a\u4e92\u65a5\u5bf9\u8c61\u8ddf\u4e34\u754c\u533a\u76f8\u4f3c\uff0c\u4f46\u5b83\u4e0d\u4ec5\u4ec5\u80fd\u591f\u5728\u540c\u4e00\u5e94\u7528\u7a0b\u5e8f\u4e0d\u540c\u7ebf\u7a0b\u4e2d\u5b9e\u73b0\u8d44\u6e90\u7684\u5b89\u5168\u5171\u4eab\uff0c\u800c\u4e14\u53ef\u4ee5\u5728\u4e0d\u540c\u5e94\u7528\u7a0b\u5e8f\u7684\u7ebf\u7a0b\u4e4b\u95f4\u5b9e\u73b0\u5bf9\u8d44\u6e90\u7684\u5b89\u5168\u5171\u4eab\uff0c\u5f53\u7136\u4e0b\u9762\u4e24\u8005\u4e5f\u6709\u8fd9\u4e2a\u7279\u70b9\u3002\u4e3b\u8981API\u51fd\u6570\u6709\uff0c\u521b\u5efa\u4e92\u65a5\u91cf\uff1a CreateMutex\uff0c\u6253\u5f00\u4e00\u4e2a\u5b58\u5728\u7684\u4e92\u65a5\u91cf\uff1a OpenMutex\uff0c\u91ca\u653e\u4e92\u65a5\u91cf\u7684\u4f7f\u7528\u6743\uff1aReleaseMutex\uff0c\u5173\u95ed\u4e92\u65a5\u91cf\uff1a CloseHandle\u3002", "\n\u4fe1\u6807\uff1a\u4f7f\u7528\u4fe1\u53f7\u91cf\uff08\u4fe1\u6807\uff09\u6700\u91cd\u8981\u7528\u9014\u662f\uff1a\u4fe1\u53f7\u5141\u8bb8\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u4f7f\u7528\u5171\u4eab\u8d44\u6e90\uff0c\u5b83\u6307\u51fa\u4e86\u540c\u65f6\u8bbf\u95ee\u5171\u4eab\u8d44\u6e90\u7684\u7ebf\u7a0b\u6700\u5927\u6570\u76ee\u3002\u5b83\u7684API\u51fd\u6570\u548c\u4f7f\u7528\u65b9\u6cd5\u90fd\u4e0e\u4e92\u65a5\u5bf9\u8c61\u76f8\u4f3c\uff0c\u5982\u521b\u5efa\u4fe1\u53f7\u706f\uff1aCreateSemaphore\uff0c\u4f20\u5165\u7684\u53c2\u6570\u53ef\u4ee5\u6307\u5b9a\u4fe1\u53f7\u706f\u7684\u521d\u59cb\u503c\u3002", "\n\u4e8b\u4ef6\uff1a\u7528\u6765\u901a\u77e5\u5176\u4ed6\u8fdb\u7a0b/\u7ebf\u7a0b\u67d0\u4ef6\u64cd\u4f5c\u5df2\u7ecf\u5b8c\u6210\u3002API\u51fd\u6570\u6709\u521b\u5efa\uff0c\u6253\u5f00\u4e8b\u4ef6\u5bf9\u8c61\u7b49\uff0c\u7279\u6b8a\u70b9\u7684\u662f\u53ef\u4ee5\u7528\u51fd\u6570SetEvent\u4eba\u5de5\u8bbe\u7f6e\u4e8b\u4ef6\u4e3a\u6709\u65e0\u4fe1\u53f7\u72b6\u6001\uff0c\u56e0\u6b64\u521b\u5efa\u4e8b\u4ef6\u5bf9\u8c61\u65f6\u53ef\u4ee5\u6709\u4e24\u79cd\u65b9\u5f0f\uff0c\u4e00\u79cd\u4e3a\u81ea\u52a8\u91cd\u7f6e\uff0c\u4e00\u79cd\u4e3a\u4eba\u5de5\u91cd\u7f6e\u3002\u53ea\u6709\u4eba\u5de5\u91cd\u7f6e\u65b9\u5f0f\u521b\u5efa\u7684\u4e8b\u4ef6\u5bf9\u8c61\u624d\u80fd\u6b63\u786e\u4f7f\u7528\u51fd\u6570SetEvent\u3002", "\n\u9274\u4e8e\u672c\u5957\u9898\u8003\u7684\u662fVC\uff0c\u6709\u5fc5\u8981\u8bf4\u660e\u7684\u662f\u5728MFC\u4e2d\u5bf9\u4e8e\u5404\u79cd\u540c\u6b65\u5bf9\u8c61\u90fd\u63d0\u4f9b\u4e86\u76f8\u5bf9\u5e94\u7684\u7c7bCCtiticalSection,CMutex,CSemaphore ,CEvent\uff0c\u53e6\u5916\u4e3a\u4f7f\u7528\u7b49\u5f85\u529f\u80fd\u5c01\u88c5\u4e86\u4e24\u4e2a\u7c7b\uff1aCSingleLock\u548cCMultiLock\u3002\u8fd9\u4e9b\u7c7b\u65b9\u4fbf\u4e86\u4f7f\u7528\u8fd9\u4e9b\u540c\u6b65\u5bf9\u8c61\u3002", "6\u3001cdecl\u3001stdcall\u3001fastcall\u662f\u4ec0\u4e48\uff1f\u54ea\u79cd\u53ef\u4ee5\u5b9e\u73b0\u4e2a\u6570\u4e0d\u5b9a\u7684\u5165\u53e3\u53c2\u6570\uff0c\u4e3a\u4ec0\u4e48\uff1f", "\n\u7b54\uff1a\u4e09\u8005\u90fd\u662f\u51fd\u6570\u8c03\u7528\u7684\u7ea6\u5b9a\u3002", "\ncdecl\uff1ac declare\uff08C\u8c03\u7528\u7ea6\u5b9a\uff09\u7684\u7f29\u5199\uff0c\u662fC\u548cC++\u7a0b\u5e8f\u7684\u7f3a\u7701\u8c03\u7528\u65b9\u5f0f\uff0c\u89c4\u5219\u662f\uff0c\u6309\u4ece\u53f3\u81f3\u5de6\u7684\u987a\u5e8f\u538b\u53c2\u6570\u5165\u6808\uff0c\u7531\u8c03\u7528\u8005\u628a\u53c2\u6570\u5f39\u51fa\u6808\uff0c\u5bf9\u4e8e\u4f20\u9001\u53c2\u6570\u7684\u5185\u5b58\u6808\u662f\u7531\u8c03\u7528\u8005\u6765\u7ef4\u62a4\u7684\uff0c\u6b63\u56e0\u4e3a\u5982\u6b64\uff0c\u53ea\u6709\u8fd9\u79cd\u8c03\u7528\u65b9\u5f0f\u53ef\u5b9e\u73b0\u4e2a\u6570\u4e0d\u5b9a\u7684\u5165\u53e3\u53c2\u6570\uff08\u53ef\u53d8\u53c2\u6570\uff09\u3002", "\nstdcall\uff1a\u662fPascal\u7a0b\u5e8f\u7684\u7f3a\u7701\u8c03\u7528\u65b9\u5f0f\uff0c\u89c4\u5219\u662f\uff0c\u6309\u4ece\u53f3\u81f3\u5de6\u7684\u987a\u5e8f\u538b\u53c2\u6570\u5165\u6808\uff0c\u88ab\u8c03\u7528\u7684\u51fd\u6570\u5728\u8fd4\u56de\u524d\u6e05\u7406\u4f20\u9001\u53c2\u6570\u7684\u5185\u5b58\u6808\u3002", "\n\u4e0a\u4e24\u8005\u7684\u4e3b\u8981\u533a\u522b\u662f\u524d\u8005\u7531\u8c03\u7528\u8005\u6e05\u7406\u6808\uff0c\u540e\u8005\u7531\u88ab\u8c03\u7528\u7684\u51fd\u6e05\u7406\u6808\u3002\u5f53\u7136\u51fd\u6570\u540d\u7684\u4fee\u9970\u90e8\u5206\u4e5f\u662f\u4e0d\u540c\u7684\u3002", "\nfastcall\uff1a\u91c7\u7528\u5bc4\u5b58\u5668\u4f20\u9012\u53c2\u6570\uff0c\u7279\u70b9\u5c31\u662f\u5feb\u4e86\u3002", "\u4e8c\u3001\u7a0b\u5e8f\u8bbe\u8ba1\uff08\u4ee5\u4e0b\u9898\u76ee\u8bf7\u5199\u51fa\u5b9e\u73b0\u4ee3\u7801\uff09", "\n1\u3001\u6709\u4e00\u6bb5\u6587\u672c\uff0c\u7edf\u8ba1\u5176\u4e2d\u7684\u5355\u8bcd\u6570\u3002\u4f8b\u5982\uff1a", "\nAs a technology , \u201cHailStorm\u201d is so new that it is still only known by its", "\ncode name.", "\n\u6ce8\u610f\uff1a\u5355\u8bcd\u95f4\u7684\u95f4\u9694\u4e0d\u4e00\u5b9a\u662f\u4e00\u4e2a\u7a7a\u683c\u3002", "\n\u7b54\uff1a\u53ef\u6267\u884c\u7a0b\u5e8f\u4ee3\u7801\u5982\u4e0b\uff0c\u5047\u8bbe\u8be5\u6587\u672c\u5df2\u5b58\u5165text\u8fd9\u4e2a\u6570\u7ec4\u91cc\u3002", "\nvoid main()", "\n{", "\n  char text[1000]={\u201cAs a technology , \u2018HailStorm\u2019 is so new that it is still only known by its code name.\u201d};", "\n  int i=0,count=0;", "\n  bool flag=false;//\u524d\u9762\u7684\u5b57\u7b26\u662f\u5426\u4e3a\u5b57\u6bcd", "\n  while (text[ i]&&i\n  {", "\n    if (flag && !((text[ i]>=\u2019a'&&text[ i]=\u2019A'&&text[ i ]\n    {//\u524d\u9762\u662f\u5b57\u6bcd\uff0c\u5f53\u524d\u4e0d\u662f\u5b57\u6bcd\uff0c\u8868\u793a\u51fa\u73b0\u4e00\u4e2a\u5355\u8bcd", "\n      flag=false;", "\n      count++;", "\n    }", "\n    else if (!flag && ((text[ i]>=\u2019a'&&text[ i]=\u2019A'&&text[ i ]\n    {  // \u524d\u9762\u4e0d\u662f\u5b57\u6bcd\uff0c\u5f53\u524d\u662f\u5b57\u6bcd", "\n      flag=true;", "\n    }", "\n    i++;", "\n  }", "\n  if(flag)", "\n    count++;", "\n  cout\n}", "\n\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d", "\n\u63d2\u64ad\u5e7f\u544a\u5566\uff1a\u7248\u6743\u6240\u6709\uff1a\u6731\u79d1 \u6b22\u8fce\u5149\u4e34\u6211\u7684\u7f51\u7ad9\uff1awww.goodsoft.cn\uff0c\u5404\u4f4d\u8f6c\u8d34\u522b\u5220\uff0c\u52b3\u52a8\u6210\u679c\u554a", "\n\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d", "2\u3001\u56fd\u9645\u8c61\u68cb\u67098\u00d78\u683c\uff0c\u6bcf\u4e2a\u683c\u5b50\u53ef\u653e\u4e00\u4e2a\u68cb\u5b50\u3002\u7687\u540e\u7684\u89c4\u5219\u662f\u53ef\u4ee5\u6a2a\u3001\u7ad6\u3001\u659c\u79fb\u52a8\u3002\u5728\u4e00\u4e2a\u68cb\u76d8\u653e\u7f6e8\u4e2a\u7687\u540e\uff0c\u5e76\u4f7f\u5b83\u4eec\u4e92\u76f8\u65e0\u6cd5\u5a01\u80c1\u5230\u5f7c\u6b64\u3002", "\n\u7b54\uff1a\u4ee5\u4e0b\u662f\u53ef\u6267\u884cC\u4ee3\u7801\uff0c\u91c7\u7528\u975e\u9012\u5f52\u89e3\u6cd5\uff0c\u4f60\u5982\u679c\u60f3\u4e86\u89e3\u7687\u540e\u95ee\u9898\u7684\u7b97\u6cd5\u7684\u8be6\u7ec6\u8fc7\u7a0b\u53ef\u770b\u4e0b\u9762\u7f51\u5740\uff1a", "http://www.cnjcw.cn/infoview/2005031720203563221270.html", "\u4e0d\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\u662f\u4ee5\u5217\u4f18\u5148\u8fdb\u884c\u8bd5\u63a2\u7684\uff0c\u4e0d\u662f\u4e0a\u9762\u7f51\u5740\u4ecb\u7ecd\u7684\u90a3\u6837\u4ee5\u884c\u4f18\u5148\u7684\uff0c\u5f53\u7136\u672c\u8d28\u662f\u4e00\u6837\u7684\u3002", "\n#include ", "  while(row>=0 ) //\u8df3\u51fa\u6761\u4ef6\u662f\u56de\u6eaf\u5230\u65e0\u6cd5\u56de\u6eaf\u65f6", "\n  {", "\n    queen[row]++ ;      //row\u5217\u4e0a\u7684\u7687\u540e\u8d70\u5230\u4e0b\u4e00\u884c\u8bd5\u8bd5", "\n    if(queen[row] >= QUEEN) //\u5f53\u524d\u5217\u5168\u90e8\u8d70\u5b8c", "\n    {", "\n      queen[row] = -1 ; //\u5f53\u524d\u5217\u68cb\u5b50\u7f6e\u4e8e\u51c6\u5907\u72b6\u6001", "\n      row\u2013 ;        //\u56de\u6eaf\u5230\u4e0a\u4e00\u5217\u7684\u68cb\u5b50", "\n      if(row>=0)      //\u56de\u6eaf\u65f6\u8981\u6e05\u7406\u5982\u4e0b\u884c\uff0c\u659c\u7ebf\u7684\u6807\u5fd7\u4f4d", "\n      {", "\n        row_YN[queen[row]] = false ;", "\n        passive_YN[queen[row] + row] = false ;", "\n        negative_YN[QUEEN-1 + row - queen[row]] = false ;", "\n      }", "\n    }", "\n    else", "\n    {", "\n      //\u5148\u5224\u65ad\u68cb\u5b50\u6240\u5728\u884c\u6ca1\u6709\u68cb\u5b50", "\n      if(row_YN[queen[row]] == false)", "\n      {", "\n        flag = true ;", "\n        //\u4ee5\u4e0b\u68c0\u67e5\u5f53\u524d\u68cb\u5b50\u662f\u5426\u4e0e\u4e4b\u524d\u7684\u68cb\u5b50\u659c\u7ebf\u76f8\u4ea4", "\n        if( passive_YN[queen[row] + row] == true || negative_YN[QUEEN-1 + row - queen[row]] == true)", "\n          flag = false ;", "\n        else", "\n          flag = true ;", "\n        if(flag)  // flag\u4e3a\u771f\u8868\u793a\u4f4d\u7f6e\u5408\u6cd5", "\n        {", "\n          if(row == QUEEN-1)  //\u5217\u5230\u8fbe\u6700\u540e\uff0c\u5373\u6700\u540e\u4e00\u4e2a\u7687\u540e\u4e5f\u627e\u5230\u4f4d\u7f6e\uff0c\u8f93\u51fa\u89e3", "\n          {", "\n            count++ ;  //\u89e3\u6cd5\u7684\u6570\u76ee\u52a0\u4e00 ;", "\n            cout\n            for(int i=0;i", "\n              cout\n          }", "\n          row_YN[queen[row]] = true ;// \u5f53\u524d\u884c\u8bbe\u4e3a\u6709\u68cb\u5b50", "\n          passive_YN[queen[row] + row] = true ;//\u5f53\u524d\u884c\u6b63\u659c\u7387\u65b9\u5411\u6709\u68cb\u5b50", "\n          negative_YN[QUEEN-1 + row - queen[row]] = true ; //\u5f53\u524d\u884c\u8d1f\u659c\u7387\u65b9\u5411\u4e0a\u4e5f\u6709\u68cb\u5b50", "\n          row++ ;", "\n          if(row >= QUEEN)", "\n          {  // \u627e\u5230\u89e3\u540e\u518d\u6b21\u56de\u6eaf\u627e\u53e6\u5916\u7684\u89e3\uff0c\u8fd9\u540c\u4e0a\u9762\u65e0\u89e3\u56de\u6eaf\u662f\u4e00\u6837\u7684", "\n            row\u2013 ;", "\n            row_YN[queen[row]] = false ;", "\n            passive_YN[queen[row] + row] = false ;", "\n            negative_YN[QUEEN-1 + row - queen[row]] = false ;//\u539f\u7406\u540c\u56de\u6eaf", "\n          }", "\n          flag = false ;", "\n          }", "\n      }", "\n    }", "\n  }", "\n  cout\n  return 0 ;", "\n}", "3\u3001\u8f93\u5165\u4e8c\u4e2a64\u4f4d\u7684\u5341\u8fdb\u5236\u6570\uff0c\u8ba1\u7b97\u76f8\u4e58\u4e4b\u540e\u7684\u4e58\u79ef\u3002", "\n\u7b54\uff1a\u4ee5\u4e0b\u4ee3\u7801\u4e3a\u7f51\u4e0a\u522b\u4eba\u8d34\u51fa\u7684\uff0c\u8f93\u5165\u4efb\u610f\u4f4d\u6570\u5341\u8fdb\u5236\u6570\uff08\u5305\u62ec\u5c0f\u6570\uff0c\u8d1f\u6570\uff09\u90fd\u53ef\u4ee5\u5f97\u51fa\u6b63\u786e\u7ed3\u679c\u3002", "\n\u601d\u8def\u662f\uff1a\u5c06\u5927\u6570\u5f53\u4f5c\u5b57\u7b26\u4e32\u8fdb\u884c\u5904\u7406\uff0c\u4e5f\u5c31\u662f\u5c06\u5927\u6570\u752810\u8fdb\u5236\u5b57\u7b26\u6570\u7ec4\u8fdb\u884c\u8868\u793a\uff0c\u7136\u540e\u6a21\u62df\u4eba\u4eec\u624b\u5de5\u8fdb\u884c\u201c\u7ad6\u5f0f\u8ba1\u7b97\u201d\u7684\u8fc7\u7a0b\u7f16\u5199\u4e58\u6cd5\u3002", "\n#include ", "void main(void) //\u4e3b\u51fd\u6570\u3002", "\n{", "\n  char str1[MAX]={0},str2[MAX]={0};", "\n  int quan1=0,quan2=0,sign=0;", "\n  unsigned int c[MAX*2+1]={0};", "\n  do", "\n  {", "\n    cout\n    cin>>str1;", "\n    cout\n    cin>>str2;", "\n    sign=sign_comp(str1,str2);", "\n    quan1=format(str1);", "\n    quan2=format(str2);", "\n    if(quan1==-1||quan2==-1)", "\n    {", "\n      clear(str1);", "\n      clear(str2);", "\n    }", "\n  }while(quan1==-1||quan2==-1||str1[0]==0||str2[0]==0);", "\n  multiply_string(str1,str2,c);", "\n  output(sign,c,quan1+quan2);", "\n}", "\u6240\u6709\u9898\u76ee\u5230\u6b64\u7ed3\u675f\uff0c\u8bf4\u5b9e\u8bdd\u540e\u9762\u4e24\u9898\u7684\u7b97\u6cd5\u6211\u5c31\u662f\u770b\u522b\u4eba\u7684\u4ee3\u7801\uff08\u5475\u5475\uff0c\u518d\u6b21\u5b9e\u8bdd\uff0c\u540e\u4e24\u9898\u4ee3\u7801\u4e5f\u4e0d\u662f\u6211\u5199\u7684\uff0c\u53ea\u662f\u5bf9\u5df2\u6709\u4ee3\u7801\u505a\u4e86\u4e9b\u4fee\u6539\uff0c\u4f7f\u7ed3\u6784\u66f4\u6e05\u6670\uff0c\u4fbf\u4e8e\u9605\u8bfb\uff09\u7406\u89e3\u6e05\u695a\u4e5f\u7528\u4e862\u4e2a\u5c0f\u65f6\u4ee5\u4e0a\uff0c\u6240\u4ee5\u6211\u8fd8\u771f\u6ca1\u6709\u81ea\u4fe1\u5c06\u7b54\u6848\u53d1\u5230\u90a3\u4e2a\u90ae\u7bb1\u5462\u3002\u770b\u767d\u4e91\u9ec4\u9e64\u4e0a\u522b\u7684\u5b66\u751f\u7684\u53cd\u54cd\uff0c\u8ba9\u4eba\u6000\u7591\u8fd9\u5957\u9898\u662f\u5426\u51fa\u5f97\u6709\u70b9\u96be\u4e86\u3002 "], "title": "C++\u7b14\u8bd5\u9898\uff08\u5341\u4e09\uff09"},
{"contents": ["const char*, char const*, char*const\u7684\u533a\u522b\u95ee\u9898\u51e0\u4e4e\u662fC++\u9762\u8bd5\u4e2d\u6bcf\u6b21\u90fd\u4f1a\u6709\u7684\u9898\u76ee\u3002", "\n\u4e8b\u5b9e\u4e0a\u8fd9\u4e2a\u6982\u5ff5\u8c01\u90fd\u6709\u53ea\u662f\u4e09\u79cd\u58f0\u660e\u65b9\u5f0f\u975e\u5e38\u76f8\u4f3c\u5f88\u5bb9\u6613\u8bb0\u6df7\u3002", "\nBjarne\u5728\u4ed6\u7684The C++ Programming Language\u91cc\u9762\u7ed9\u51fa\u8fc7\u4e00\u4e2a\u52a9\u8bb0\u7684\u65b9\u6cd5\uff1a", "\n\u628a\u4e00\u4e2a\u58f0\u660e\u4ece\u53f3\u5411\u5de6\u8bfb\u3002", "\nchar  * const cp; ( * \u8bfb\u6210 pointer to )", "\ncp is a const pointer to char", "\nconst char * p;", "\np is a pointer to const char;", "\nchar const * p;", "\n\u540c\u4e0a\u56e0\u4e3aC++\u91cc\u9762\u6ca1\u6709const*\u7684\u8fd0\u7b97\u7b26\uff0c\u6240\u4ee5const\u53ea\u80fd\u5c5e\u4e8e\u524d\u9762\u7684\u7c7b\u578b\u3002", "\n\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d", "\n\u4e0b\u9762\u8fd9\u4e2a\u7a0b\u5e8f\u6267\u884c\u540e\u4f1a\u6709\u4ec0\u4e48\u9519\u8bef\u6216\u8005\u6548\u679c:", "\n #define MAX 255", "\n int main()", "\n{", "\n   unsigned char A[MAX],i;", "\n   for (i=0;i\n      A[ i ]=i;", "\n}", "\n\u89e3\u7b54\uff1a", "\nMAX=255", "\n\u6570\u7ec4A\u7684\u4e0b\u6807\u8303\u56f4\u4e3a:0..MAX-1,\u8fd9\u662f\u5176\u4e00..", "\n\u5176\u4e8c.\u5f53i\u5faa\u73af\u5230255\u65f6,\u5faa\u73af\u5185\u6267\u884c:", "\n  A[255]=255;", "\n\u8fd9\u53e5\u672c\u8eab\u6ca1\u6709\u95ee\u9898..\u4f46\u662f\u8fd4\u56defor (i=0;i\n\u7531\u4e8eunsigned char\u7684\u53d6\u503c\u8303\u56f4\u5728(0..255),i++\u4ee5\u540ei\u53c8\u4e3a0\u4e86..\u65e0\u9650\u5faa\u73af\u4e0b\u53bb.", "\n\u6ce8\uff1achar\u7c7b\u578b\u4e3a\u4e00\u4e2a\u5b57\u8282\uff0c\u53d6\u503c\u8303\u56f4\u662f[-128\uff0c127]\uff0cunsigned char [0 ,255]", "\n\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d", "\n\u7f16\u5199\u7528C\u8bed\u8a00\u5b9e\u73b0\u7684\u6c42n\u9636\u9636\u4e58\u95ee\u9898\u7684\u9012\u5f52\u7b97\u6cd5\uff1a", "\nlong int fact(int n)", "\n{", "\n  int x;", "\n  long int y;", "\n  if(n\n   {", "\n     printf(\"error!\");", "\n   }", "\n  if(n==0)", "\n     return 1;", "\n  x=n-1;", "\n  y=fact(x);", "\n  return (n*y);", "\n}", "\n\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d", "\n\u4e8c\u5206\u67e5\u627e\u7b97\u6cd5\uff1a", "\n1\u3001\u9012\u5f52\u65b9\u6cd5\u5b9e\u73b0\uff1a", "\nint BSearch(elemtype a[],elemtype x,int low,int high)", "\n/*\u5728\u4e0b\u5c4a\u4e3alow\uff0c\u4e0a\u754c\u4e3ahigh\u7684\u6570\u7ec4a\u4e2d\u6298\u534a\u67e5\u627e\u6570\u636e\u5143\u7d20x*/", "\n{", "\n  int mid;", "\n  if(low>high) return -1;", "\n  mid=(low+high)/2;", "\n  if(x==a[mid]) return mid;", "\n  if(x", "\n  else return(BSearch(a,x,mid+1,high));", "\n}", "\n2\u3001\u975e\u9012\u5f52\u65b9\u6cd5\u5b9e\u73b0\uff1a", "\nint BSearch(elemtype a[],keytype key,int n)", "\n{", "\n  int low,high,mid;", "\n  low=0;high=n-1;", "\n  while(low\n   {", "\n      mid=(low+high)/2;", "\n      if(a[mid].key==key) return mid;", "\n      else if(a[mid].key", "\n      else high=mid-1;", "\n   }", "\n  return -1;", "\n}", "\n\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d", "\n\u975e\u9012\u5f52\u8ba1\u7b97\u5982\u4e0b\u9012\u5f52\u51fd\u6570\u7684\u503c\uff08\u6590\u6ce2\u62c9\u5951\uff09\uff1a", "\nf(1)=1", "\nf(2)=1", "\nf(n)=f(n-1)+f(n-2) n>2", "\n\u89e3\uff1a", "\nint f(int n)", "\n{", "\n  int i,s,s1,s2;", "\n  s1=1;/*s1\u7528\u4e8e\u4fdd\u5b58f(n-1)\u7684\u503c*/", "\n  s2=1;/*s2\u7528\u4e8e\u4fdd\u5b58f(n-2)\u7684\u503c*/", "\n  s=1;", "\n  for(i=3;i\n    {", "\n       s=s1+s2;", "\n       s2=s1;", "\n       s1=s;", "\n    }", "\n  return(s);", "\n}", "\n\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d", "\n\u4ea4\u6362\u4e24\u4e2a\u6570\uff0c\u4e0d\u7528\u7b2c\u4e09\u5757\u513f\u5185\u5b58\uff1a", "\nint a = \u2026\u2026;", "\nint b = \u2026\u2026;", "\na = a + b;", "\nb = a - b;", "\na = a - b;", "\n\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d", "\nQ1\uff1a\u8bf7\u4f60\u5206\u522b\u5212\u5212OSI\u7684\u4e03\u5c42\u7f51\u7edc\u7ed3\u6784\u56fe\uff0c\u548cTCP/IP\u7684\u4e94\u5c42\u7ed3\u6784\u56fe\uff1f", "\n1\u3001OSI\u6bcf\u5c42\u529f\u80fd\u53ca\u7279\u70b9", "\na \u7269\u7406\u5c42 \u4e3a\u6570\u636e\u94fe\u8def\u5c42\u63d0\u4f9b\u7269\u7406\u8fde\u63a5\uff0c\u5728\u5176\u4e0a\u4e32\u884c\u4f20\u9001\u6bd4\u7279\u6d41\uff0c\u5373\u6240\u4f20\u9001\u6570\u636e\u7684\u5355\u4f4d\u662f\u6bd4\u7279\u3002\u6b64\u5916\uff0c\u8be5\u5c42\u4e2d\u8fd8\u5177\u6709\u786e\u5b9a\u8fde\u63a5\u8bbe\u5907\u7684\u7535\u6c14\u7279\u6027\u548c\u7269\u7406\u7279\u6027\u7b49\u529f\u80fd\u3002", "\nb \u6570\u636e\u94fe\u8def\u5c42 \u8d1f\u8d23\u5728\u7f51\u7edc\u8282\u70b9\u95f4\u7684\u7ebf\u8def\u4e0a\u901a\u8fc7\u68c0\u6d4b\u3001\u6d41\u91cf\u63a7\u5236\u548c\u91cd\u53d1\u7b49\u624b\u6bb5\uff0c\u65e0\u5dee\u9519\u5730\u4f20\u9001\u4ee5\u5e27\u4e3a\u5355\u4f4d\u7684\u6570\u636e\u3002\u4e3a\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u5728\u6bcf\u4e00\u5e27\u4e2d\u5fc5\u987b\u540c\u65f6\u5e26\u6709\u540c\u6b65\u3001\u5730\u5740\u3001\u5dee\u9519\u63a7\u5236\u53ca\u6d41\u91cf\u63a7\u5236\u7b49\u63a7\u5236\u4fe1\u606f\u3002", "\nc \u7f51\u7edc\u5c42 \u4e3a\u4e86\u5c06\u6570\u636e\u5206\u7ec4\u4ece\u6e90\uff08\u6e90\u7aef\u7cfb\u7edf\uff09\u9001\u5230\u76ee\u7684\u5730\uff08\u76ee\u6807\u7aef\u7cfb\u7edf\uff09\uff0c\u7f51\u7edc\u5c42\u7684\u4efb\u52a1\u5c31\u662f\u9009\u62e9\u5408\u9002\u7684\u8def\u7531\u548c\u4ea4\u6362\u8282\u70b9\uff0c\u4f7f\u6e90\u7684\u4f20\u8f93\u5c42\u4f20\u4e0b\u6765\u7684\u5206\u7ec4\u4fe1\u606f\u80fd\u591f\u6b63\u786e\u65e0\u8bef\u5730\u6309\u7167\u5730\u5740\u627e\u5230\u76ee\u7684\u5730\uff0c\u5e76\u4ea4\u4ed8\u7ed9\u76f8\u5e94\u7684\u4f20\u8f93\u5c42\uff0c\u5373\u5b8c\u6210\u7f51\u7edc\u7684\u5bfb\u5740\u529f\u80fd\u3002", "\nd \u4f20\u8f93\u5c42 \u4f20\u8f93\u5c42\u662f\u9ad8\u4f4e\u5c42\u4e4b\u95f4\u8854\u63a5\u7684\u63a5\u53e3\u5c42\u3002\u6570\u636e\u4f20\u8f93\u7684\u5355\u4f4d\u662f\u62a5\u6587\uff0c\u5f53\u62a5\u6587\u8f83\u957f\u65f6\u5c06\u5b83\u5206\u5272\u6210\u82e5\u5e72\u5206\u7ec4,\u7136\u540e\u4ea4\u7ed9\u7f51\u7edc\u5c42\u8fdb\u884c\u4f20\u8f93\u3002\u4f20\u8f93\u5c42\u662f\u8ba1\u7b97\u673a\u7f51\u7edc\u534f\u8bae\u5206\u5c42\u4e2d\u7684\u6700\u5173\u952e\u4e00\u5c42\uff0c\u8be5\u5c42\u4ee5\u4e0a\u5404\u5c42\u5c06\u4e0d\u518d\u7ba1\u7406\u4fe1\u606f\u4f20\u8f93\u95ee\u9898\u3002", "\ne \u4f1a\u8bdd\u5c42 \u8be5\u5c42\u5bf9\u4f20\u8f93\u7684\u62a5\u6587\u63d0\u4f9b\u540c\u6b65\u7ba1\u7406\u670d\u52a1\u3002\u5728\u4e24\u4e2a\u4e0d\u540c\u7cfb\u7edf\u7684\u4e92\u76f8\u901a\u4fe1\u7684\u5e94\u7528\u8fdb\u7a0b\u4e4b\u95f4\u5efa\u7acb\u3001\u7ec4\u7ec7\u548c\u534f\u8c03\u4ea4\u4e92\u3002\u4f8b\u5982\uff0c\u786e\u5b9a\u662f\u53cc\u5de5\u8fd8\u662f\u534a\u53cc\u5de5\u5de5\u4f5c\u3002", "\nf \u8868\u793a\u5c42 \u8be5\u5c42\u7684\u4e3b\u8981\u4efb\u52a1\u662f\u628a\u6240\u4f20\u9001\u7684\u6570\u636e\u7684\u62bd\u8c61\u8bed\u6cd5\u53d8\u6362\u4e3a\u4f20\u9001\u8bed\u6cd5\uff0c\u5373\u628a\u4e0d\u540c\u8ba1\u7b97\u673a\u5185\u90e8\u7684\u4e0d\u540c\u8868\u793a\u5f62\u5f0f\u8f6c\u6362\u6210\u7f51\u7edc\u901a\u4fe1\u4e2d\u7684\u6807\u51c6\u8868\u793a\u5f62\u5f0f\u3002\u6b64\u5916\uff0c\u5bf9\u4f20\u9001\u7684\u6570\u636e\u52a0\u5bc6\uff08\u6216\u89e3\u5bc6\uff09\u3001\u6b63\u6587\u538b\u7f29\uff08\u6216\u8fd8\u539f\uff09\u4e5f\u662f\u8868\u793a\u5c42\u7684\u4efb\u52a1\u3002", "\ng \u5e94\u7528\u5c42 \u8be5\u5c42\u76f4\u63a5\u9762\u5411\u7528\u6237\uff0c\u662fOSI\u4e2d\u7684\u6700\u9ad8\u5c42\u3002\u5b83\u7684\u4e3b\u8981\u4efb\u52a1\u662f\u4e3a\u7528\u6237\u63d0\u4f9b\u5e94\u7528\u7684\u63a5\u53e3\uff0c\u5373\u63d0\u4f9b\u4e0d\u540c\u8ba1\u7b97\u673a\u95f4\u7684\u6587\u4ef6\u4f20\u9001\u3001\u8bbf\u95ee\u4e0e\u7ba1\u7406\uff0c\u7535\u5b50\u90ae\u4ef6\u7684\u5185\u5bb9\u5904\u7406\uff0c\u4e0d\u540c\u8ba1\u7b97\u673a\u901a\u8fc7\u7f51\u7edc\u4ea4\u4e92\u8bbf\u95ee\u7684\u865a\u62df\u7ec8\u7aef\u529f\u80fd\u7b49\u3002", "\n2\u3001TCP/IP", "\na \u7f51\u7edc\u63a5\u53e3\u5c42\u3000\u8fd9\u662fTCP/IP\u534f\u8bae\u7684\u6700\u4f4e\u4e00\u5c42\uff0c\u5305\u62ec\u6709\u591a\u79cd\u903b\u8f91\u94fe\u8def\u63a7\u5236\u548c\u5a92\u4f53\u8bbf\u95ee\u534f\u8bae\u3002\u7f51\u7edc\u63a5\u53e3\u5c42\u7684\u529f\u80fd\u662f\u63a5\u6536IP\u6570\u636e\u62a5\u5e76\u901a\u8fc7\u7279\u5b9a\u7684\u7f51\u7edc\u8fdb\u884c\u4f20\u8f93\uff0c\u6216\u4ece\u7f51\u7edc\u4e0a\u63a5\u6536\u7269\u7406\u5e27\uff0c\u62bd\u53d6\u51faIP\u6570\u636e\u62a5\u5e76\u8f6c\u4ea4\u7ed9\u7f51\u9645\u5c42\u3002", "\nb \u7f51\u9645\u7f51\u5c42\uff08IP\u5c42\uff09\u3000\u3000\u8be5\u5c42\u5305\u62ec\u4ee5\u4e0b\u534f\u8bae\uff1aIP\uff08\u7f51\u9645\u534f\u8bae\uff09\u3001ICMP\uff08Internet Control Message Protocol,\u56e0\u7279\u7f51\u63a7\u5236\u62a5\u6587\u534f\u8bae\uff09\u3001ARP\uff08Address Resolution Protocol\uff0c\u5730\u5740\u89e3\u6790\u534f\u8bae\uff09\u3001RARP\uff08Reverse Address Resolution Protocol\uff0c\u53cd\u5411\u5730\u5740\u89e3\u6790\u534f\u8bae\uff09\u3002\u8be5\u5c42\u8d1f\u8d23\u76f8\u540c\u6216\u4e0d\u540c\u7f51\u7edc\u4e2d\u8ba1\u7b97\u673a\u4e4b\u95f4\u7684\u901a\u4fe1,\u4e3b\u8981\u5904\u7406\u6570\u636e\u62a5\u548c\u8def\u7531\u3002\u5728IP\u5c42\u4e2d\uff0cARP\u534f\u8bae\u7528\u4e8e\u5c06IP\u5730\u5740\u8f6c\u6362\u6210\u7269\u7406\u5730\u5740,RARP\u534f\u8bae\u7528\u4e8e\u5c06\u7269\u7406\u5730\u5740\u8f6c\u6362\u6210IP\u5730\u5740\uff0cICMP\u534f\u8bae\u7528\u4e8e\u62a5\u544a\u5dee\u9519\u548c\u4f20\u9001\u63a7\u5236\u4fe1\u606f\u3002IP\u534f\u8bae\u5728TCP/IP\u534f\u8bae\u7ec4\u4e2d\u5904\u4e8e\u6838\u5fc3\u5730\u4f4d\u3002", "\nc \u4f20\u8f93\u5c42\u3000\u3000\u8be5\u5c42\u63d0\u4f9bTCP\uff08\u4f20\u8f93\u63a7\u5236\u534f\u8bae\uff09\u548cUDP\uff08User Datagram Protocol\uff0c\u7528\u6237\u6570\u636e\u62a5\u534f\u8bae\uff09\u4e24\u4e2a\u534f\u8bae\uff0c\u5b83\u4eec\u90fd\u5efa\u7acb\u5728IP\u534f\u8bae\u7684\u57fa\u7840\u4e0a\uff0c\u5176\u4e2dTCP\u63d0\u4f9b\u53ef\u9760\u7684\u9762\u5411\u8fde\u63a5\u670d\u52a1\uff0cUDP\u63d0\u4f9b\u7b80\u5355\u7684\u65e0\u8fde\u63a5\u670d\u52a1\u3002\u4f20\u8f93\u5c42\u63d0\u4f9b\u7aef\u5230\u7aef\uff0c\u5373\u5e94\u7528\u7a0b\u5e8f\u4e4b\u95f4\u7684\u901a\u4fe1\uff0c\u4e3b\u8981\u529f\u80fd\u662f\u6570\u636e\u683c\u5f0f\u5316\u3001\u6570\u636e\u786e\u8ba4\u548c\u4e22\u5931\u91cd\u4f20\u7b49\u3002", "\nd \u5e94\u7528\u5c42\u3000\u3000TCP/IP\u534f\u8bae\u7684\u5e94\u7528\u5c42\u76f8\u5f53\u4e8eOSI\u6a21\u578b\u7684\u4f1a\u8bdd\u5c42\u3001\u8868\u793a\u5c42\u548c\u5e94\u7528\u5c42\uff0c\u5b83\u5411\u7528\u6237\u63d0\u4f9b\u4e00\u7ec4\u5e38\u7528\u7684\u5e94\u7528\u5c42\u534f\u8bae,\u5176\u4e2d\u5305\u62ec\uff1aTelnet\u3001SMTP\u3001DNS\u7b49\u3002\u6b64\u5916\uff0c\u5728\u5e94\u7528\u5c42\u4e2d\u8fd8\u5305\u542b\u6709\u7528\u6237\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u4eec\u5747\u662f\u5efa\u7acb\u5728TCP/IP\u534f\u8bae\u7ec4\u4e4b\u4e0a\u7684\u4e13\u7528\u7a0b\u5e8f\u3002", "3\u3001OSI\u53c2\u8003\u6a21\u578b\u548cTCP/IP\u53c2\u8003\u6a21\u578b\u7684\u533a\u522b\uff1a", "\na OSI\u6a21\u578b\u67097\u5c42\uff0cTCP/IP\u53ea\u67094\u5c42\uff1b", "\nb OSI\u5148\u4e8e\u534f\u8bae\u51fa\u73b0\uff0c\u56e0\u6b64\u4e0d\u4f1a\u504f\u5411\u4e8e\u4efb\u4f55\u4e00\u7ec4\u7279\u5b9a\u7684\u534f\u8bae\uff0c\u901a\u7528\u6027\u66f4\u5f3a\uff0c\u4f46\u6709\u4e9b\u529f\u80fd\u4e0d\u77e5\u8be5\u653e\u54ea\u4e00\u5c42\u4e0a\uff0c\u56e0\u6b64\u4e0d\u5f97\u4e0d\u52a0\u5165\u4e00\u4e9b\u5b50\u5c42\uff1bTCP/IP\u540e\u4e8e\u534f\u8bae\u51fa\u73b0\uff0c\u4ec5\u662f\u5c06\u5df2\u6709\u534f\u8bae\u7684\u4e00\u4e2a\u63cf\u8ff0\uff0c\u56e0\u6b64\u4e24\u8005\u914d\u5408\u7684\u975e\u5e38\u597d\uff1b\u4f46\u4ed6\u4e0d\u9002\u5408\u5176\u4ed6\u7684\u534f\u8bae\u6808\uff0c\u4e0d\u5bb9\u6613\u63cf\u8ff0\u5176\u4ed6\u975eTCP/IP\u7684\u7f51\u7edc\uff1b", "\nc OSI\u4e2d\u7f51\u7edc\u5c42\u540c\u65f6\u652f\u6301\u65e0\u8fde\u63a5\u548c\u9762\u5411\u8fde\u63a5\u7684\u901a\u4fe1\uff0c\u4f46\u5728\u4f20\u8f93\u5c42\u4e0a\u53ea\u652f\u6301\u9762\u5411\u8fde\u63a5\u7684\u901a\u4fe1\uff1bTCP/IP\u4e2d\u7f51\u7edc\u5c42\u53ea\u652f\u6301\u65e0\u8fde\u63a5\u901a\u4fe1\uff0c\u4f20\u8f93\u5c42\u540c\u65f6\u652f\u6301\u4e24\u79cd\u901a\u4fe1\uff1b", "\nd \u5728\u6280\u672f\u53d1\u751f\u53d8\u5316\u65f6\uff0cOSI\u6a21\u578b\u6bd4TCP/IP\u6a21\u578b\u4e2d\u7684\u534f\u8bae\u66f4\u5bb9\u6613\u88ab\u66ff\u6362\u3002", "\n\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d", "\nQ2\uff1a\u8bf7\u4f60\u8be6\u7ec6\u7684\u89e3\u91ca\u4e00\u4e0bIP\u534f\u8bae\u7684\u5b9a\u4e49\uff0c\u5728\u54ea\u4e2a\u5c42\u4e0a\u9762\uff0c\u4e3b\u8981\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f TCP\u4e0eUDP\u5462\uff1f\u3000", "\n\u89e3\uff1a\u4e0eIP\u534f\u8bae\u914d\u5957\u4f7f\u7528\u7684\u8fd8\u6709\u4e09\u4e2a\u534f\u8bae:", "\nARP-\u5730\u5740\u89e3\u6790\u534f\u8bae", "\nRARP\uff0d\u9006\u5730\u5740\u89e3\u6790\u534f\u8bae", "\nICMP\uff0d\u56e0\u7279\u7f51\u63a7\u5236\u62a5\u6587\u534f\u8baeICMP", "\nIP\u534f\u8bae\uff0d\u7f51\u9645\u534f\u8bae", "\nIP\u5730\u5740\u3001IP\u5305\u5934", "\n\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d", "\nQ3\uff1a\u8bf7\u95ee\u4ea4\u6362\u673a\u548c\u8def\u7531\u5668\u5206\u522b\u7684\u5b9e\u73b0\u539f\u7406\u662f\u4ec0\u4e48\uff1f\u5206\u522b\u5728\u54ea\u4e2a\u5c42\u6b21\u4e0a\u9762\u5b9e\u73b0\u7684\uff1f", "\n\u5c06\u7f51\u7edc\u4e92\u76f8\u8fde\u63a5\u8d77\u6765\u8981\u4f7f\u7528\u4e00\u4e9b\u4e2d\u95f4\u8bbe\u5907\uff08\u6216\u4e2d\u95f4\u7cfb\u7edf\uff09\uff0c\uff29\uff33\uff2f\u7684\u672f\u8bed\u79f0\u4e4b\u4e3a\u4e2d\u7ee7\uff08relay\uff09\u7cfb\u7edf\u3002\u6839\u636e\u4e2d\u7ee7\u7cfb\u7edf\u6240\u5728\u7684\u5c42\u6b21\uff0c\u53ef\u4ee5\u6709\u4ee5\u4e0b\u4e94\u79cd\u4e2d\u7ee7\u7cfb\u7edf\uff1a", "\n    1.\u7269\u7406\u5c42\uff08\u5373\u5e38\u8bf4\u7684\u7b2c\u4e00\u5c42\u3001\u5c42\uff2c1\uff09\u4e2d\u7ee7\u7cfb\u7edf\uff0c\u5373\u8f6c\u53d1\u5668\uff08repeater\uff09\u3002", "\n    2.\u6570\u636e\u94fe\u8def\u5c42\uff08\u5373\u7b2c\u4e8c\u5c42\uff0c\u5c42\uff2c2\uff09\uff0c\u5373\u7f51\u6865\u6216\u6865\u63a5\u5668\uff08bridge\uff09\u3002", "\n    3.\u7f51\u7edc\u5c42\uff08\u7b2c\u4e09\u5c42\uff0c\u5c42\uff2c3\uff09\u4e2d\u7ee7\u7cfb\u7edf\uff0c\u5373\u8def\u7531\u5668\uff08router\uff09\u3002", "\n    4.\u7f51\u6865\u548c\u8def\u7531\u5668\u7684\u6df7\u5408\u7269\u6865\u8def\u5668\uff08brouter\uff09\u517c\u6709\u7f51\u6865\u548c\u8def\u7531\u5668\u7684\u529f\u80fd\u3002", "\n    5.\u5728\u7f51\u7edc\u5c42\u4ee5\u4e0a\u7684\u4e2d\u7ee7\u7cfb\u7edf\uff0c\u5373\u7f51\u5173\uff08gateway\uff09.", "\n    \u5f53\u4e2d\u7ee7\u7cfb\u7edf\u662f\u8f6c\u53d1\u5668\u65f6\uff0c\u4e00\u822c\u4e0d\u79f0\u4e4b\u4e3a\u7f51\u7edc\u4e92\u8054\uff0c\u56e0\u4e3a\u8fd9\u4ec5\u4ec5\u662f\u628a\u4e00\u4e2a\u7f51\u7edc\u6269\u5927\u4e86\uff0c\u800c\u8fd9\u4ecd\u7136\u662f\u4e00\u4e2a\u7f51\u7edc\u3002\u9ad8\u5c42\u7f51\u5173\u7531\u4e8e\u6bd4\u8f83\u590d\u6742\uff0c\u76ee\u524d\u4f7f\u7528\u5f97\u8f83\u5c11\u3002\u56e0\u6b64\u4e00\u822c\u8ba8\u8bba\u7f51\u7edc\u4e92\u8fde\u65f6\u90fd\u662f\u6307\u7528\u4ea4\u6362\u673a\u548c\u8def\u7531\u5668\u8fdb\u884c\u4e92\u8054\u7684\u7f51\u7edc\u3002\u672c\u6587\u4e3b\u8981\u9610\u8ff0\u4ea4\u6362\u673a\u548c\u8def\u7531\u5668\u53ca\u5176\u533a\u522b\u3002 ", "\u7b2c\u4e8c\u5c42\u4ea4\u6362\u673a\u548c\u8def\u7531\u5668\u7684\u533a\u522b\uff1a", "\n\u4f20\u7edf\u4ea4\u6362\u673a\u4ece\u7f51\u6865\u53d1\u5c55\u800c\u6765\uff0c\u5c5e\u4e8e\uff2f\uff33\uff29\u7b2c\u4e8c\u5c42\u5373\u6570\u636e\u94fe\u8def\u5c42\u8bbe\u5907\u3002\u5b83\u6839\u636e\uff2d\uff21\uff23\u5730\u5740\u5bfb\u5740\uff0c\u901a\u8fc7\u7ad9\u8868\u9009\u62e9\u8def\u7531\uff0c\u7ad9\u8868\u7684\u5efa\u7acb\u548c\u7ef4\u62a4\u7531\u4ea4\u6362\u673a\u81ea\u52a8\u8fdb\u884c\u3002\u8def\u7531\u5668\u5c5e\u4e8e\uff2f\uff33\uff29\u7b2c\u4e09\u5c42\u5373\u7f51\u7edc\u5c42\u8bbe\u5907\uff0c\u5b83\u6839\u636e\uff29\uff30\u5730\u5740\u8fdb\u884c\u5bfb\u5740\uff0c\u901a\u8fc7\u8def\u7531\u8868\u8def\u7531\u534f\u8bae\u4ea7\u751f\u3002\u56e0\u7279\u7f51\u7684\u8def\u7531\u9009\u62e9\u534f\u8bae\uff1a\u5185\u90e8\u7f51\u5173\u534f\u8baeIGP\u548c\u5916\u90e8\u7f51\u5173\u534f\u8baeEGP", "\n\u7b2c\u4e09\u5c42\u4ea4\u6362\u673a\u548c\u8def\u7531\u5668\u7684\u533a\u522b\uff1a", "\n\u5728\u7b2c\u4e09\u5c42\u4ea4\u6362\u6280\u672f\u51fa\u73b0\u4e4b\u524d\uff0c\u51e0\u4e4e\u6ca1\u6709\u5fc5\u8981\u5c06\u8def\u7531\u529f\u80fd\u5668\u4ef6\u548c\u8def\u7531\u5668\u533a\u522b\u5f00\u6765\uff0c\u4ed6\u4eec\u5b8c\u5168\u662f\u76f8\u540c\u7684\uff1a\u63d0\u4f9b\u8def\u7531\u529f\u80fd\u6b63\u5728\u8def\u7531\u5668\u7684\u5de5\u4f5c\uff0c\u7136\u800c\uff0c\u73b0\u5728\u7b2c\u4e09\u5c42\u4ea4\u6362\u673a\u5b8c\u5168\u80fd\u591f\u6267\u884c\u4f20\u7edf\u8def\u7531\u5668\u7684\u5927\u591a\u6570\u529f\u80fd\u3002", "\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u4ea4\u6362\u673a\u4e00\u822c\u7528\u4e8e\uff2c\uff21\uff2e\uff0d\uff37\uff21\uff2e\u7684\u8fde\u63a5\uff0c\u4ea4\u6362\u673a\u5f52\u4e8e\u7f51\u6865\uff0c\u662f\u6570\u636e\u94fe\u8def\u5c42\u7684\u8bbe\u5907\uff0c\u6709\u4e9b\u4ea4\u6362\u673a\u4e5f\u53ef\u5b9e\u73b0\u7b2c\u4e09\u5c42\u7684\u4ea4\u6362\u3002\u8def\u7531\u5668\u7528\u4e8e\uff37\uff21\uff2e\uff0d\uff37\uff21\uff2e\u4e4b\u95f4\u7684\u8fde\u63a5\uff0c\u53ef\u4ee5\u89e3\u51b3\u5f02\u6027\u7f51\u7edc\u4e4b\u95f4\u8f6c\u53d1\u5206\u7ec4\uff0c\u4f5c\u7528\u4e8e\u7f51\u7edc\u5c42\u3002\u4ed6\u4eec\u53ea\u662f\u4ece\u4e00\u6761\u7ebf\u8def\u4e0a\u63a5\u53d7\u8f93\u5165\u5206\u7ec4\uff0c\u7136\u540e\u5411\u53e6\u4e00\u6761\u7ebf\u8def\u8f6c\u53d1\u3002\u8fd9\u4e24\u6761\u7ebf\u8def\u53ef\u80fd\u5206\u5c5e\u4e8e\u4e0d\u540c\u7684\u7f51\u7edc\uff0c\u5e76\u91c7\u7528\u4e0d\u540c\u534f\u8bae\u3002\u76f8\u6bd4\u8f83\u800c\u8a00\uff0c\u8def\u7531\u5668\u7684\u529f\u80fd\u8f83\u4ea4\u6362\u673a\u8981\u5f3a\u5927\uff0c\u4f46\u901f\u5ea6\u76f8\u5bf9\u4e5f\u6162\uff0c\u4ef7\u683c\u6602\u8d35\uff0c\u7b2c\u4e09\u5c42\u4ea4\u6362\u673a\u65e2\u6709\u4ea4\u6362\u673a\u7ebf\u901f\u8f6c\u53d1\u62a5\u6587\u80fd\u529b\uff0c\u53c8\u6709\u8def\u7531\u5668\u826f\u597d\u7684\u63a7\u5236\u529f\u80fd\uff0c\u56e0\u6b64\u5f97\u4ee5\u5e7f\u64ad\u5e94\u7528\u3002", "\n\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d", "\nQ4:\u8bf7\u95eeC++\u7684\u7c7b\u548cC\u91cc\u9762\u7684struct\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\nc++\u4e2d\u7684\u7c7b\u5177\u6709\u6210\u5458\u4fdd\u62a4\u529f\u80fd\uff0c\u5e76\u4e14\u5177\u6709\u7ee7\u627f\uff0c\u591a\u6001\u8fd9\u7c7boo\u7279\u70b9\uff0c\u800cc\u91cc\u7684struct\u6ca1\u6709", "\n\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d", "\nQ5:\u8bf7\u8bb2\u4e00\u8bb2\u6790\u6784\u51fd\u6570\u548c\u865a\u51fd\u6570\u7684\u7528\u6cd5\u548c\u4f5c\u7528\uff1f", "\n\u6790\u6784\u51fd\u6570\u4e5f\u662f\u7279\u6b8a\u7684\u7c7b\u6210\u5458\u51fd\u6570\uff0c\u5b83\u6ca1\u6709\u8fd4\u56de\u7c7b\u578b\uff0c\u6ca1\u6709\u53c2\u6570\uff0c\u4e0d\u80fd\u968f\u610f\u8c03\u7528\uff0c\u4e5f\u6ca1\u6709\u91cd\u8f7d\u3002\u77e5\u8bc6\u5728\u7c7b\u5bf9\u8c61\u751f\u547d\u671f\u7ed3\u675f\u7684\u65f6\u5019\uff0c\u7531\u7cfb\u7edf\u81ea\u52a8\u8c03\u7528\u91ca\u653e\u5728\u6784\u9020\u51fd\u6570\u4e2d\u5206\u914d\u7684\u8d44\u6e90\u3002", "\u8fd9\u79cd\u5728\u8fd0\u884c\u65f6\uff0c\u80fd\u4f9d\u636e\u5176\u7c7b\u578b\u786e\u8ba4\u8c03\u7528\u90a3\u4e2a\u51fd\u6570\u7684\u80fd\u529b\u79f0\u4e3a\u591a\u6001\u6027\uff0c\u6216\u79f0\u8fdf\u540e\u8054\u7f16\u3002", "\n\u53e6\uff1a", "\n\u6790\u6784\u51fd\u6570\u4e00\u822c\u5728\u5bf9\u8c61\u64a4\u6d88\u524d\u505a\u6536\u5c3e\u5de5\u4f5c\uff0c\u6bd4\u5982\u56de\u6536\u5185\u5b58\u7b49\u5de5\u4f5c\uff0c\u865a\u62df\u51fd\u6570\u7684\u529f\u80fd\u662f\u4f7f\u5b50\u7c7b\u53ef\u4ee5\u7528\u540c", "\n\u540d\u7684\u51fd\u6570\u5bf9\u7236\u7c7b\u51fd\u6570\u8fdb\u884c\u91cd\u8f7d\uff0c\u5e76\u4e14\u5728\u8c03\u7528\u65f6\u81ea\u52a8\u8c03\u7528\u5b50\u7c7b\u91cd\u8f7d\u51fd\u6570\uff0c\u5982\u679c\u662f\u7eaf\u865a\u51fd\u6570\uff0c\u5219\u7eaf\u7cb9\u662f\u4e3a\u4e86", "\n\u5728\u5b50\u7c7b\u91cd\u8f7d\u65f6\u6709\u4e2a\u7edf\u4e00\u7684\u547d\u540d\u800c\u5df2\u3002", "\n\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d", "\nQ6:\u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1f\u5b9e\u600e\u4e48\u5b9e\u73b0\u7684\uff1f\u64cd\u4f5c\u7cfb\u7edf\u548c\u7f16\u8bd1\u5668\u662f\u600e\u4e48\u77e5\u9053\u7684\uff1f", "\n\u5168\u5c40\u53d8\u91cf\u7684\u751f\u547d\u5468\u671f\u662f\u6574\u4e2a\u7a0b\u5e8f\u8fd0\u884c\u7684\u65f6\u95f4\uff0c\u800c\u5c40\u90e8\u53d8\u91cf\u7684\u751f\u547d\u5468\u671f\u5219\u662f\u5c40\u90e8\u51fd\u6570\u6216\u8fc7\u7a0b\u8c03\u7528\u7684\u65f6", "\n\u95f4\u6bb5\u3002\u5176\u5b9e\u73b0\u662f\u7531\u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u65f6\u91c7\u7528\u4e0d\u540c\u5185\u5b58\u5206\u914d\u65b9\u6cd5\u3002\u5168\u5c40\u53d8\u91cf\u5728main\u51fd\u6570\u8c03\u7528\u540e\uff0c\u5c31\u5f00\u59cb\u5206\u914d\uff0c", "\n\u5982\u679c\u662f\u9759\u6001\u53d8\u91cf\u5219\u662f\u5728main\u51fd\u6570\u524d\u5c31\u5df2\u7ecf\u521d\u59cb\u5316\u4e86\u3002\u800c\u5c40\u90e8\u53d8\u91cf\u5219\u662f\u5728\u7528\u6237\u6808\u4e2d\u52a8\u6001\u5206\u914d\u7684\uff08\u8fd8\u662f\u5efa\u8bae", "\n\u770b\u7f16\u8bd1\u539f\u7406\u4e2d\u7684\u6d3b\u52a8\u8bb0\u5f55\u8fd9\u4e00\u5757\uff09", "\n\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d", "\nQ7:\u4e00\u4e9b\u5bc4\u5b58\u5668\u7684\u9898\u76ee\uff0c\u4e3b\u8981\u662f\u5bfb\u5740\u548c\u5185\u5b58\u7ba1\u7406\u7b49\u4e00\u4e9b\u77e5\u8bc6\u3002", "\n\u3002\u3002\u3002", "\n\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d", "\nQ8:8086\u662f\u591a\u5c11\u5c09\u7684\u7cfb\u7edf\uff1f\u5728\u6570\u636e\u603b\u7ebf\u4e0a\u662f\u600e\u4e48\u5b9e\u73b0\u7684\uff1f", "\n8086\u7cfb\u7edf\u662f16\u4f4d\u7cfb\u7edf\uff0c\u5176\u6570\u636e\u603b\u7ebf\u662f20\u4f4d", "\n\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d", "\n\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d", "\nC++", "\u4e00\u3001\u8bf7\u586b\u5199BOOL , float, \u6307\u9488\u53d8\u91cf \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\u3002\uff0810 \u5206\uff09", "\n\u8bf7\u5199\u51fa BOOL flag \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\u3002\uff083 \u5206\uff09", "\n\u6807\u51c6\u7b54\u6848\uff1a", "\nif ( flag )", "\nif ( !flag )", "\n\u5982\u4e0b\u5199\u6cd5\u5747\u5c5e\u4e0d\u826f\u98ce\u683c\uff0c\u4e0d\u5f97\u5206\u3002", "\nif (flag == TRUE)", "\nif (flag == 1 )", "\nif (flag == FALSE)", "\nif (flag == 0)", "\n\u8bf7\u5199\u51fa float x \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\u3002\uff084 \u5206\uff09", "\n\u6807\u51c6\u7b54\u6848\u793a\u4f8b\uff1a", "\nconst float EPSINON = 0.00001;", "\nif ((x >= \u2013 EPSINON) && (x \n\u4e0d\u53ef\u5c06\u6d6e\u70b9\u53d8\u91cf\u7528\u201c==\u201d\u6216\u201c\uff01=\u201d\u4e0e\u6570\u5b57", "\n\u6bd4\u8f83\uff0c\u5e94\u8be5\u8bbe\u6cd5\u8f6c\u5316\u6210\u201c>=\u201d\u6216\u201c\n\u7c7b\u5f62\u5f0f\u3002", "\n\u5982\u4e0b\u662f\u9519\u8bef\u7684\u5199\u6cd5\uff0c\u4e0d\u5f97\u5206\u3002", "\nif (x == 0.0)", "\nif (x != 0.0)", "\n\u8bf7\u5199\u51fa char *p \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\u3002\uff083 \u5206\uff09", "\n\u6807\u51c6\u7b54\u6848\uff1a", "\nif (p == NULL)", "\nif (p != NULL)", "\n\u5982\u4e0b\u5199\u6cd5\u5747\u5c5e\u4e0d\u826f\u98ce\u683c\uff0c\u4e0d\u5f97\u5206\u3002", "\nif (p == 0)", "\nif (p != 0)", "\nif (p)", "\nif (!)", "\n\u4e8c\u3001\u4ee5\u4e0b\u4e3aWindows NT \u4e0b\u768432 \u4f4dC++\u7a0b\u5e8f\uff0c\u8bf7\u8ba1\u7b97sizeof \u7684\u503c\uff0810 \u5206\uff09", "\nvoid Func ( char str[100])", "\n{", "\n\u8bf7\u8ba1\u7b97", "\nsizeof( str ) = 4 \uff082 \u5206\uff09", "\n}", "\nchar str[] = \u201cHello\u201d ;", "\nchar *p = str ;", "\nint n = 10;", "\n\u8bf7\u8ba1\u7b97", "\nsizeof (str ) = 6 \uff082 \u5206\uff09", "\nsizeof ( p ) = 4 \uff082 \u5206\uff09", "\nsizeof ( n ) = 4 \uff082 \u5206\uff09", "\nvoid *p = malloc( 100 );", "\n\u8bf7\u8ba1\u7b97", "\nsizeof ( p ) = 4 \uff082 \u5206\uff09", "\n\u4e09\u3001\u7b80\u7b54\u9898\uff0825 \u5206\uff09", "\n1\u3001\u5934\u6587\u4ef6\u4e2d\u7684 ifndef/define/endif \u5e72\u4ec0\u4e48\u7528\uff1f\uff085 \u5206\uff09", "\n\u7b54\uff1a\u9632\u6b62\u8be5\u5934\u6587\u4ef6\u88ab\u91cd\u590d\u5f15\u7528\u3002", "\n2\u3001#include ", "  wVersionRequested = MAKEWORD(1,1);", "  err = WSAStartup(wVersionRequested,&wsaData);", "\n  if( err != 0){", "\n      return;", "\n  }", "  if(LOBYTE( wsaData.wVersion ) != 1||", "\n     HIBYTE( wsaData.wVersion) != 1){", "\n     WSACleanup();", "\n     return;", "\n  }", "\n  SOCKET sockSrv=socket(AF_INET,SOCK_STREAM,0);", "  SOCKADDR_IN addrSrv;", "\n  addrSrv.sin_addr.S_un.S_addr=htonl(INADDR_ANY);", "\n  addrSrv.sin_family=AF_INET;", "\n  addrSrv.sin_port=htons(6000);", "\n  bind(sockSrv,(SOCKADDR*)&addrSrv,sizeof(SOCKADDR));", "\n  listen(sockSrv,5);", "  SOCKADDR_IN addrClient;", "\n  int len=sizeof(SOCKADDR);", "\n  while(1)", "\n  {", "\n     SOCKET sockConn=accept(sockSrv,(SOCKADDR*)&addrClient,&len);", "\n     char sendBuf[100];", "\n     sprint(sendBuf,\u201dWelcome %s to http://www.sunxin.org\u201d,", "\n           inet_ntoa(addrClient.sin_addr));", "\n     send(sockConn,sendBuf,strlen(sendBuf)+1,0);", "\n     char recvBuf[100];", "\n     recv(sockConn,recvBuf);", "\n     printf(\u201c%s\\n\u201d,recvBuf);", "\n     closesocket(sockConn);", "\n     WSACleanup();", "\n  }", "\n}", "\n\u6ce8\uff1a\u8fd9\u662fServer\u7aef\uff1bFile->New->Win32 Console Application\uff0c\u5de5\u7a0b\u540d\uff1aTcpSrv\uff1b\u7136\u540e\uff0cFile->New->C++ Source File\uff0c\u6587\u4ef6\u540d\uff1aTcpSrv\uff1b\u5728\u8be5\u5de5\u7a0b\u7684Setting\u7684Link\u7684Object/library modules\u9879\u8981\u52a0\u5165ws2_32.lib", "\n\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d", "\n#include ", "  wVersionRequested = MAKEWORD(1,1);", "  err = WSAStartup(wVersionRequested,&wsaData);", "\n  if( err != 0){", "\n      return;", "\n  }", "  if(LOBYTE( wsaData.wVersion ) != 1||", "\n     HIBYTE( wsaData.wVersion) != 1){", "\n     WSACleanup();", "\n     return;", "\n  }", "\n  SOCKET sockClient=socket(AF_INET,SOCK_STREAM,0);", "\n  SOCKADDR_IN addrSrv;", "\n  addrSrv.sin_addr.S_un.S_addr=inet_addr(\u201c127.0.0.1\u2033);", "\n  addrSrv.sin_family=AF_INET;", "\n  addrSrv.sin_porthtons(6000);", "\n  connect(sockClient,(SOCKADDR*)&addrSrv,sizeof(SOCKADDR));", "  char recvBuf[100];", "\n  recv(sockClient,recvBuf,100,0);", "\n  printf(\u201c%s\\n\u201d,recvBuf);", "\n  send(sockClient,\u201dThis is zhangsan\u201d,strlen(\u201cThis is zhangsan\u201d)+1,0);", "\n  closesocket(sockClient);", "\n  WSACleanup();", "\n}", "\n\u6ce8\uff1a\u8fd9\u662fClient\u7aef\uff1bFile->New->Win32 Console Application\uff0c\u5de5\u7a0b\u540d\uff1aTcpClient\uff1b\u7136\u540e\uff0cFile->New->C++ Source File\uff0c\u6587\u4ef6\u540d\uff1aTcpClient\uff1b\u540c\u7406\uff0c\u5728\u8be5\u5de5\u7a0b\u7684Setting\u7684Link\u7684Object/library modules\u9879\u8981\u52a0\u5165ws2_32.lib", "\n\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d", "\nC\uff0b\uff0b", "\n#include ", "#include \u201cmemory.h\u201d", "\nmemset\u7528\u6765\u5bf9\u4e00\u6bb5\u5185\u5b58\u7a7a\u95f4\u5168\u90e8\u8bbe\u7f6e\u4e3a\u67d0\u4e2a\u5b57\u7b26\uff0c\u4e00\u822c\u7528\u5728\u5bf9\u5b9a\u4e49\u7684\u5b57\u7b26\u4e32\u8fdb\u884c\u521d\u59cb\u5316\u4e3a\u2018 \u2018\u6216\u2018\\0\u2032\uff1b\u4f8b:char a[100];memset(a, \u2018\\0\u2032, sizeof(a));", "\nmemcpy\u7528\u6765\u505a\u5185\u5b58\u62f7\u8d1d\uff0c\u4f60\u53ef\u4ee5\u62ff\u5b83\u62f7\u8d1d\u4efb\u4f55\u6570\u636e\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u53ef\u4ee5\u6307\u5b9a\u62f7\u8d1d\u7684\u6570\u636e\u957f\u5ea6\uff1b\u4f8b\uff1achar a[100],b[50]; memcpy(b, a, sizeof(b));\u6ce8\u610f\u5982\u7528sizeof(a)\uff0c\u4f1a\u9020\u6210b\u7684\u5185\u5b58\u5730\u5740\u6ea2\u51fa\u3002", "\nstrcpy\u5c31\u53ea\u80fd\u62f7\u8d1d\u5b57\u7b26\u4e32\u4e86\uff0c\u5b83\u9047\u5230\u2019\\0\u2032\u5c31\u7ed3\u675f\u62f7\u8d1d\uff1b\u4f8b\uff1achar a[100],b[50];strcpy(a,b);\u5982\u7528strcpy(b,a)\uff0c\u8981\u6ce8\u610fa\u4e2d\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\uff08\u7b2c\u4e00\u4e2a\u2018\\0\u2032\u4e4b\u524d\uff09\u662f\u5426\u8d85\u8fc750\u4f4d\uff0c\u5982\u8d85\u8fc7\uff0c\u5219\u4f1a\u9020\u6210b\u7684\u5185\u5b58\u5730\u5740\u6ea2\u51fa\u3002", "\nstrcpy", "\n\u539f\u578b\uff1aextern char *strcpy(char *dest,char *src);", "\n\u7528\u6cd5\uff1a#include", "\n\u529f\u80fd\uff1a\u628asrc\u6240\u6307\u7531NULL\u7ed3\u675f\u7684\u5b57\u7b26\u4e32\u590d\u5236\u5230dest\u6240\u6307\u7684\u6570\u7ec4\u4e2d\u3002", "\n\u8bf4\u660e\uff1asrc\u548cdest\u6240\u6307\u5185\u5b58\u533a\u57df\u4e0d\u53ef\u4ee5\u91cd\u53e0\u4e14dest\u5fc5\u987b\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u6765\u5bb9\u7eb3src\u7684\u5b57\u7b26\u4e32\u3002", "\n\u8fd4\u56de\u6307\u5411dest\u7684\u6307\u9488\u3002", "\nmemcpy", "\n\u539f\u578b\uff1aextern void *memcpy(void *dest, void *src, unsigned int count);", "\n\u7528\u6cd5\uff1a#include", "\n\u529f\u80fd\uff1a\u7531src\u6240\u6307\u5185\u5b58\u533a\u57df\u590d\u5236count\u4e2a\u5b57\u8282\u5230dest\u6240\u6307\u5185\u5b58\u533a\u57df\u3002", "\n\u8bf4\u660e\uff1asrc\u548cdest\u6240\u6307\u5185\u5b58\u533a\u57df\u4e0d\u80fd\u91cd\u53e0\uff0c\u51fd\u6570\u8fd4\u56de\u6307\u5411dest\u7684\u6307\u9488\u3002", "\nmemset", "\n\u539f\u578b\uff1aextern void *memset(void *buffer, char c, int count);", "\n\u7528\u6cd5\uff1a#include", "\n\u529f\u80fd\uff1a\u628abuffer\u6240\u6307\u5185\u5b58\u533a\u57df\u7684\u524dcount\u4e2a\u5b57\u8282\u8bbe\u7f6e\u6210\u5b57\u7b26c\u3002", "\n\u8bf4\u660e\uff1a\u8fd4\u56de\u6307\u5411buffer\u7684\u6307\u9488\u3002", "ASSERT()\u662f\u5e72\u4ec0\u4e48\u7528\u7684", "\nASSERT()\u662f\u4e00\u4e2a\u8c03\u8bd5\u7a0b\u5e8f\u65f6\u7ecf\u5e38\u4f7f\u7528\u7684\u5b8f\uff0c\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u5b83\u8ba1\u7b97\u62ec\u53f7\u5185\u7684\u8868\u8fbe\u5f0f\uff0c\u5982\u679c\u8868\u8fbe\u5f0f\u4e3aFALSE (0), \u7a0b\u5e8f\u5c06\u62a5\u544a\u9519\u8bef\uff0c\u5e76\u7ec8\u6b62\u6267\u884c\u3002\u5982\u679c\u8868\u8fbe\u5f0f\u4e0d\u4e3a0\uff0c\u5219\u7ee7\u7eed\u6267\u884c\u540e\u9762\u7684\u8bed\u53e5\u3002\u8fd9\u4e2a\u5b8f\u901a\u5e38\u539f\u6765\u5224\u65ad\u7a0b\u5e8f\u4e2d\u662f\u5426\u51fa\u73b0\u4e86\u660e\u663e\u975e\u6cd5\u7684\u6570\u636e\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u7ec8\u6b62\u7a0b\u5e8f\u4ee5\u514d\u5bfc\u81f4\u4e25\u91cd\u540e\u679c\uff0c\u540c\u65f6\u4e5f\u4fbf\u4e8e\u67e5\u627e\u9519\u8bef\u3002\u4f8b\u5982\uff0c\u53d8\u91cfn\u5728\u7a0b\u5e8f\u4e2d\u4e0d\u5e94\u8be5\u4e3a0\uff0c\u5982\u679c\u4e3a0\u53ef\u80fd\u5bfc\u81f4\u9519\u8bef\uff0c\u4f60\u53ef\u4ee5\u8fd9\u6837\u5199\u7a0b\u5e8f\uff1a", "\n\u2026\u2026", "\nASSERT( n != 0);", "\nk = 10/ n;", "\n\u2026\u2026", "\nASSERT\u53ea\u6709\u5728Debug\u7248\u672c\u4e2d\u624d\u6709\u6548\uff0c\u5982\u679c\u7f16\u8bd1\u4e3aRelease\u7248\u672c\u5219\u88ab\u5ffd\u7565\u3002", "\nassert()\u7684\u529f\u80fd\u7c7b\u4f3c\uff0c\u5b83\u662fANSI C\u6807\u51c6\u4e2d\u89c4\u5b9a\u7684\u51fd\u6570\uff0c\u5b83\u4e0eASSERT\u7684\u4e00\u4e2a\u91cd\u8981\u533a\u522b\u662f\u53ef\u4ee5\u7528\u5728Release\u7248\u672c\u4e2d\u3002 ", "system\uff08\u201dpause\u201d);", "\n\u7cfb\u7edf\u7684\u6682\u505c\u7a0b\u5e8f\uff0c\u6309\u4efb\u610f\u952e\u7ee7\u7eed\uff0c\u5c4f\u5e55\u4f1a\u6253\u5370\uff0c\u201d\u6309\u4efb\u610f\u952e\u7ee7\u7eed\u3002\u3002\u3002\u3002\u3002\u201d \u7701\u53bb\u4e86\u4f7f\u7528getchar\uff08\uff09\uff1b"], "title": "C++\u7b14\u8bd5\u9898\uff08\u5341\u4e00\uff09"},
{"contents": ["\u3000\u4eca\u5929\u534e\u4e3a\u6253\u7535\u8bdd\u8bf4\u8981\u7ed9\u6211Offer\u4e86\uff0c\u600e\u4e48\u62a5\u7b54\u4ed6\u7684Offer\u5462\uff0c\u55ef\uff0c\u505a\u5957\u771f\u6b63\u7684\u534e\u4e3a\u7b14\u8bd5\u9898\u5427\u3002\u7279\u610f\u63d0\u5230\u662f\u771f\u6b63\u7684\u534e\u4e3a\u7b14\u8bd5\u9898\uff0c\u662f\u56e0\u4e3a\u524d\u9762\u6211\u505a\u7684\u53f7\u79f0\u534e\u4e3a\u7b14\u8bd5\u9898\u5176\u5b9e\u662f\u522b\u4eba\u516c\u53f8\u7684\uff08\u524d\u9762\u7684\u5e16\u5b50\u6709\u89e3\u91ca\uff09\uff0c\u4e0b\u9762\u7684\u5185\u5bb9\u5730\u7403\u4eba\u90fd\u8bf4\u662f\u534e\u4e3a\u7684\uff0c\u96be\u9053\u8fd8\u4e0d\u662f\u5b83\u7684\u4e48\u3002\u54c8\u54c8\u3002", "\n\u3000\u3000\u8fd9\u4e9b\u9898\u76ee\u76f8\u6bd4\u5176\u4ed6\u516c\u53f8\u7684\u8bd5\u9898\uff0c\u8f83\u4e3a\u57fa\u7840\uff0c\u5168\u90e8\u4e3aC\u8bed\u8a00\uff0c\u6ca1\u6709\u6d89\u53caC++,\u4f46\u5982\u679c\u4e0d\u7ec6\u5fc3\uff0c\u662f\u5f88\u96be\u5f97\u5230\u8f83\u9ad8\u5206\u6570\u7684\u3002\u53e6\u5916\u5927\u5bb6\u8f6c\u8d34\u4e0d\u8981\u53bb\u6389\u6211\u7684\u4e2a\u4eba\u4fe1\u606f\u554a\u3002\u4e92\u76f8\u5ba3\u4f20\u4e0b\u7f51\u7ad9\u561b\u3002", "\n1. \u627e\u9519", "\nvoid test1()", "\n{", "\n    char string[10];", "\n    char* str1=\u201d0123456789\u2033;", "\n    strcpy(string, str1);", "\n}", "\n\u7b54\uff1a\u8868\u9762\u4e0a\u5e76\u4e14\u7f16\u8bd1\u90fd\u4e0d\u4f1a\u9519\u8bef\u3002\u4f46\u5982\u679cstring\u6570\u7ec4\u539f\u610f\u8868\u793a\u7684\u662f\u5b57\u7b26\u4e32\u7684\u8bdd\uff0c\u90a3\u8fd9\u4e2a\u8d4b\u503c\u5c31\u6ca1\u6709\u8fbe\u5230\u610f\u56fe\u3002\u6700\u597d\u5b9a\u4e49\u4e3achar string[11]\uff0c\u8fd9\u6837\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u53ef\u4ee5\u5b58\u50a8\u5b57\u7b26\u4e32\u7ed3\u5c3e\u7b26\u2019\\0\u2032;", "\nvoid test2()", "\n{", "\n    char string[10], str1[10];", "\n  for(int I=0; I\n  {", "\n    str1[I] ='a';", "\n  }", "\n  strcpy(string, str1);", "\n}", "\n\u7b54\uff1astrcpy\u4f7f\u7528\u9519\u8bef\uff0cstrcpy\u53ea\u6709\u9047\u5230\u5b57\u7b26\u4e32\u672b\u5c3e\u7684'\\0'\u624d\u4f1a\u7ed3\u675f\uff0c\u800cstr1\u5e76\u6ca1\u6709\u7ed3\u5c3e\u6807\u5fd7\uff0c\u5bfc\u81f4strcpy\u51fd\u6570\u8d8a\u754c\u8bbf\u95ee\uff0c\u4e0d\u59a8\u8ba9str1[9]='\\0'\uff0c\u8fd9\u6837\u5c31\u6b63\u5e38\u4e86\u3002", "\nvoid test3(char* str1)", "\n{", "\n    char string[10];", "\n    if(strlen(str1)\n{", "\n    strcpy(string, str1);", "\n}", "\n}", "\n\u7b54\uff1a\u8fd9\u53c8\u4f1a\u51fa\u73b0\u7b2c\u4e00\u9053\u6539\u9519\u9898\u7684\u9519\u8bef\u4e86\u3002strlen(str1)\u7b97\u51fa\u6765\u7684\u503c\u662f\u4e0d\u5305\u542b\u7ed3\u5c3e\u7b26'\\0'\u7684\uff0c\u5982\u679cstr1\u521a\u597d\u4e3a10\u4e2a\u5b57\u7b26\uff0b1\u7ed3\u5c3e\u7b26\uff0cstring\u5c31\u5f97\u4e0d\u5230\u7ed3\u5c3e\u7b26\u4e86\u3002\u53ef\u5c06strlen(str1)\n", "2. \u627e\u9519", "\n#define MAX_SRM 256", "DSN get_SRM_no()", "\n{", "\n    static int SRM_no;", "\n    int I;", "\n    for(I=0;I", "\n  {", "\n    SRM_no %= MAX_SRM;", "\n    if(MY_SRM.state==IDLE)", "\n    {", "\n      break;", "\n    }", "\n  }", "\n  if(I>=MAX_SRM)", "\n    return (NULL_SRM);", "\n  else", "\n    return SRM_no;", "\n}", "\n\u7b54\uff1a\u6211\u4e0d\u77e5\u9053\u8fd9\u6bb5\u4ee3\u7801\u7684\u5177\u4f53\u529f\u80fd\uff0c\u4f46\u660e\u663e\u6709\u4e24\u4e2a\u9519\u8bef", "\n1\uff0cSRM_no\u6ca1\u6709\u8d4b\u521d\u503c", "\n2\uff0c\u7531\u4e8estatic\u7684\u58f0\u660e\uff0c\u4f7f\u8be5\u51fd\u6570\u6210\u4e3a\u4e0d\u53ef\u91cd\u5165\uff08\u5373\u4e0d\u53ef\u9884\u6d4b\u7ed3\u679c\uff09\u51fd\u6570\uff0c\u56e0\u4e3aSRM_no\u53d8\u91cf\u653e\u5728\u7a0b\u5e8f\u7684\u5168\u5c40\u5b58\u50a8\u533a\u4e2d\uff0c\u6bcf\u6b21\u8c03\u7528\u7684\u65f6\u5019\u8fd8\u53ef\u4ee5\u4fdd\u6301\u539f\u6765\u7684\u8d4b\u503c\u3002\u8fd9\u91cc\u5e94\u8be5\u53bb\u6389static\u58f0\u660e\u3002", "3. \u5199\u51fa\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u679c", "\nint sum(int a)", "\n{", "\n    auto int c=0;", "\n    static int b=3;", "\n  c+=1;", "\n  b+=2;", "\n  return(a+b+c);", "\n}", "\n void main()", "\n{", "\n    int I;", "\n  int a=2;", "\n  for(I=0;I\n  {", "\n    printf(\"%d,\", sum(a));", "\n  }", "\n}", "\n\u7b54\uff1a8,10,12,14,16", "\n\u8be5\u9898\u6bd4\u8f83\u7b80\u5355\u3002\u53ea\u8981\u6ce8\u610fb\u58f0\u660e\u4e3astatic\u9759\u6001\u5168\u5c40\u53d8\u91cf\uff0c\u5176\u503c\u5728\u4e0b\u6b21\u8c03\u7528\u65f6\u662f\u53ef\u4ee5\u4fdd\u6301\u4f4f\u539f\u6765\u7684\u8d4b\u503c\u7684\u5c31\u53ef\u4ee5\u3002", "\n\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d", "\n\u63d2\u64ad\u5e7f\u544a\u5566\uff1a\u7248\u6743\u6240\u6709\uff1a\u6731\u79d1 \u6b22\u8fce\u5149\u4e34\u6211\u7684\u7f51\u7ad9\uff1awww.goodsoft.cn\uff0c\u5404\u4f4d\u8f6c\u8d34\u522b\u5220\uff0c\u52b3\u52a8\u6210\u679c\u554a", "\n\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d", "\n4.", "\nint func(int a)", "\n{", "\n    int b;", "\n    switch(a)", "\n    {", "\n        case 1: b=30;", "\n        case 2: b=20;", "\n        case 3: b=16;", "\n        default: b=0;", "\n   }", "\n   return b;", "\n}", "\n\u5219func(1)=?", "\n\u7b54\uff1afunc(1)=0\uff0c\u56e0\u4e3a\u6ca1\u6709break\u8bed\u53e5\uff0cswitch\u4e2d\u4f1a\u4e00\u76f4\u8ba1\u7b97\u5230b=0\u3002\u8fd9\u662f\u63d0\u9192\u6211\u4eec\u4e0d\u8981\u5fd8\u4e86break\u3002\u5475\u5475\u3002", "5:", "\n  int a[3];", "\n  a[0]=0; a[1]=1; a[2]=2;", "\n  int *p, *q;", "\n  p=a;", "\n  q=&a[2];", "\n\u5219a[q-p]=?", "\n\u7b54\uff1aa[q-p]=a[2]=2;\u8fd9\u9898\u662f\u8981\u544a\u8bc9\u6211\u4eec\u6307\u9488\u7684\u8fd0\u7b97\u7279\u70b9", "6.", "\n\u5b9a\u4e49 int **a[3][4], \u5219\u53d8\u91cf\u5360\u6709\u7684\u5185\u5b58\u7a7a\u95f4\u4e3a\uff1a_____", "\n\u7b54\uff1a\u6b64\u5904\u5b9a\u4e49\u7684\u662f\u6307\u5411\u6307\u9488\u7684\u6307\u9488\u6570\u7ec4\uff0c\u5bf9\u4e8e32\u4f4d\u7cfb\u7edf\uff0c\u6307\u9488\u5360\u5185\u5b58\u7a7a\u95f44\u5b57\u8282\uff0c\u56e0\u6b64\u603b\u7a7a\u95f4\u4e3a3\u00d74\u00d74\uff1d48\u3002", "7.", "\n\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u8981\u6c42\u8f93\u5165\u5e74\u6708\u65e5\u65f6\u5206\u79d2\uff0c\u8f93\u51fa\u8be5\u5e74\u6708\u65e5\u65f6\u5206\u79d2\u7684\u4e0b\u4e00\u79d2\u3002\u5982\u8f93\u51652004\u5e7412\u670831\u65e523\u65f659\u520659\u79d2\uff0c\u5219\u8f93\u51fa2005\u5e741\u67081\u65e50\u65f60\u52060\u79d2\u3002", "\n\u7b54\uff1a", "\n/*\u8f93\u5165\u5e74\u6708\u65e5\u65f6\u5206\u79d2\uff0c\u8f93\u51fa\u5e74\u6708\u65e5\u65f6\u5206\u79d2\u7684\u4e0b\u4e00\u79d2\uff0c\u8f93\u51fa\u4ecd\u7136\u5728\u539f\u5185\u5b58\u7a7a\u95f4*/", "\nbool NextMinute(int *nYear,int *nMonth,int *nDate,int *nHour,int *nMinute,int *nSecond)", "\n{", "\n  if(*nYear12 || *nMonth23 || *nHour59 || *nSecond59) return false;", "\n  int nDays;", "\n  switch(*nMonth)", "\n  {", "\n          case 1:", "\n          case 3:", "\n          case 5:", "\n          case 7:", "\n          case 8:", "\n          case 10:", "\n          case 12:", "\n            nDays=31;", "\n          break;", "\n          case 2:// \u5224\u65ad\u95f0\u5e74", "\n            if(*nYear%400==0||*nYear%100!=0&&*nYear%4==0)", "\n            {", "\n            nDays=29;", "\n            }", "\n            else", "\n            {", "\n            nDays=28;", "\n            }", "\n          break;", "\n          default:", "\n            nDays=30;", "\n          break;", "\n  }", "\n  if(*nDatenDays) return false;", "  (*nSecond)++;  // \u79d2\u52a01", "\n  if(*nSecond>=60)  // \u79d2\u6ee160\uff0c\u505a\u51fa\u7279\u6b8a\u5904\u7406\uff0c\u4e0b\u9762\u65f6\uff0c\u65e5\uff0c\u6708\u7b49\u7c7b\u540c", "\n  {", "\n    *nSecond=0;", "\n    (*nMinute)++;", "\n    if(*nMinute>=60)", "\n    {", "\n      *nMinute=0;", "\n      (*nHour)++;", "\n      if(*nHour>=24)", "\n      {", "\n        *nHour=0;", "\n        (*nDate)++;", "\n        if(*nDate>nDays)", "\n        {", "\n          *nDate=1;", "\n          (*nMonth)++;", "\n          if(*nMonth>12)", "\n          {", "\n          *nMonth=1;", "\n          (*nYear)++;", "\n          }", "\n        }", "\n      }", "\n    }", "\n  }", "\n  return true;", "\n}", "\n/*\u793a\u4f8b\u53ef\u8fd0\u884c\u4ee3\u7801*/", "\nvoid main()", "\n{", "\n  int nYear=2004,nMonth=12,nDate=31,nHour=23,nMinute=59,nSecond=59;", "\n  bool res = NextMinute(&nYear,&nMonth,&nDate,&nHour,&nMinute,&nSecond);", "\n  if(res)", "\n    printf(\u201cThe result:%d-%d-%d %d:%d:%d\u201d,nYear,nMonth,nDate,nHour,nMinute,nSecond);", "\n  else", "\n    printf(\u201cInput error!\\n\u201d);", "\n}", "\n\u8f6c\u8f7d\u8005\u6ce8\uff1a\uff08\u5bf9\u539f\u6587\u6709\u90e8\u5206\u4fee\u6539\uff09"], "title": "C++\u7b14\u8bd5\u9898\uff08\u5341\uff09"},
{"contents": ["\u52a0\u62ff\u5927\u8457\u540d\u7535\u4fe1\u8bbe\u5907\u5236\u9020\u5546\u5317\u7535\u7f51\u7edc\u516c\u53f8\u59cb\u5efa\u4e8e\u4e00\u4e2a\u4e16\u7eaa\u4ee5\u524d\uff0c\u5728\u901a\u8baf\u53d1\u5c55\u8fdb\u6b65\u5386\u7a0b\u4e2d\u59cb\u7ec8\u5904\u4e8e\u9886\u8896\u5730\u4f4d\uff0c\u5e7f\u4e1c\u5317\u7535\u901a\u4fe1\u8bbe\u5907\u6709\u9650\u516c\u53f8\u6210\u7acb\u4e8e1995\u5e743\u6708\uff0c\u662f\u5317\u7535\u5728\u534e\u6295\u8d44\u7684\u6838\u5fc3\u516c\u53f8\u4e4b\u4e00\u3002\u516c\u53f8\u7f51\u5740\u662fhttp://www.gdnt.com.cn/", "\n\u3000\u3000\u4e0b\u9762\u662f\u5e7f\u4e1c\u5317\u7535\u7684\u7b14\u8bd5\u9898\uff08\u4e2d\u82f1\u6587\u9898\uff09\uff0c\u8fd9\u5957\u9898\u65e9\u5df2\u5728\u7f51\u7edc\u4e0a\u6d41\u4f20\u6570\u5e74\uff0c\u4ece\u6765\u53ea\u89c1\u9898\u76ee\uff0c\u4e0d\u89c1\u89e3\u7b54\uff0c \u90a3\u5c31\u8ba9\u6211\u505a\u505a\u5427\u3002\u82f1\u6587\u641e\u5f97\u4e0d\u5bf9\u7684\u5730\u65b9\u90a3\u5c31\u6ca1\u529e\u6cd5\u4e86\u3002\u5e0c\u671b\u5927\u5bb6\u8f6c\u8d34\u7684\u65f6\u5019\u58f0\u660e\u51fa\u5904\u3002", "\u4e00\uff1a\u82f1\u6587\u9898\u3002", "\n1. Tranlation (Mandatory)", "\n\u3000\u3000CDMA venders have worked hard to give CDMA roaming capabilities via the development of RUIM-essentially, a SIM card for CDMA handsets currently being deployed in China for new CDMA operator China Unicom. Korean cellco KTF demonstrated earlier this year the ability to roam between GSM and CDMA using such cards.However,only the card containing the user\u2019s service data can roam-not the CDMA handset or the user\u2019s number (except via call forwarding).", "\n\u7ffb\u8bd1\uff1aCDMA\u5f00\u53d1\u5546\u4e00\u76f4\u81f4\u529b\u901a\u8fc7RUIM\u5361\u7684\u5f00\u53d1\uff0c\u4f7fCDMA\u5177\u6709\u6f2b\u6e38\u7684\u80fd\u529b\u3002RUIM\u5361\u662f\u4e00\u79cdCDMA\u624b\u673a\u4f7f\u7528\u7684SIM\u5361\uff0c\u76ee\u524d\u5b83\u5728\u4e2d\u56fd\u5df2\u7ecf\u7531\u65b0\u7684CDMA\u8fd0\u8425\u5546\u4e2d\u56fd\u8054\u901a\u90e8\u7f72\u4f7f\u7528\u3002\u97e9\u56fd\u624b\u673a\u5236\u9020\u4f01\u4e1aKTF\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\u5c55\u793a\u4e86\u901a\u8fc7\u4f7f\u7528\u6b64\u79cd\u5361\u53ef\u4ee5\u5728GSM\u548cCDMA\u7f51\u7edc\u4e4b\u95f4\u8fdb\u884c\u6f2b\u6e38\u7684\u529f\u80fd\uff0c\u4f46\u662f\uff0c\u53ea\u6709\u5305\u542b\u7528\u6237\u670d\u52a1\u6570\u636e\u7684\u5361\u80fd\u591f\u6f2b\u6e38\uff0c\u800c\u4e0d\u662fCDMA\u624b\u673a\u672c\u8eab\u6216\u8005\u7528\u6237\u53f7\u7801\uff08\u9664\u975e\u901a\u8fc7\u547c\u53eb\u524d\u8f6c\u4e1a\u52a1\uff09\u3002", "\n\u5475\u5475\u3002\u4e0a\u6587\u53ef\u80fd\u7ffb\u8bd1\u7684\u4e0d\u592a\u7cbe\u51c6\uff0c\u6b22\u8fce\u6279\u8bc4\u3002\u3000\u3000", "2. Programming (Mandatory)", "\n\u3000\u3000Linked list", "\n\u3000\u3000a. Implement a linked list for integers,which supports the insertafter (insert a node after a specified node) and removeafter (remove the node after a specified node) methods;", "\n\u3000\u3000b. Implement a method to sort the linked list to descending order.", "\n\u7b54\uff1a\u9898\u76ee\u7684\u610f\u601d\u662f\u5b9e\u73b0\u4e00\u4e2a\u6574\u578b\u94fe\u8868\uff0c\u652f\u6301\u63d2\u5165\uff0c\u5220\u9664\u64cd\u4f5c\uff08\u6709\u7279\u6b8a\u8981\u6c42\uff0c\u90fd\u662f\u5728\u6307\u5b9a\u8282\u70b9\u540e\u8fdb\u884c\u64cd\u4f5c\uff09\uff0c\u5e76\u5199\u4e00\u4e2a\u5bf9\u94fe\u8868\u6570\u636e\u8fdb\u884c\u964d\u5e8f\u6392\u5e8f\u7684\u65b9\u6cd5\u3002", "\n\u90a3\u6211\u4eec\u4e0d\u59a8\u4ee5\u4e00\u4e2a\u7ebf\u6027\u94fe\u8868\u8fdb\u884c\u7f16\u7a0b\u3002", "\n// \u5355\u94fe\u8868\u7ed3\u6784\u4f53\u4e3a", "\ntypedef struct LNode", "\n{", "\n  int data;", "\n  struct LNode *next;", "\n}LNode, *pLinkList;", "// \u5355\u94fe\u8868\u7c7b", "\nclass LinkList", "\n{", "\nprivate:", "\n  pLinkList m_pList;", "\n  int m_listLength;", "\npublic:", "\n  LinkList();", "\n  ~LinkList();", "\n  bool InsertAfter(int afternode, int data);//\u63d2\u5165", "\n  bool RemoveAfter(int removenode);//\u5220\u9664", "\n  void sort();//\u6392\u5e8f", "\n};", "\u5b9e\u73b0\u65b9\u6cd5", "\n//insert a node after a specified node, insert as the head node when afternode==0", "\nbool LinkList::InsertAfter(int afternode, int data)", "\n{", "\n  LNode *pTemp = m_pList;", "\n  if (afternode > m_listLength || afternode\n  {", "\n    return false;", "\n  }", "\n  for(int i=0;i", "\n  {", "\n    pTemp = pTemp->next;", "\n  }", "\n  if (pTemp==NULL && m_pList!=NULL)   // \u8282\u70b9\u672a\u5bfb\u5230\uff0c\u9519\u8bef\u9000\u51fa", "\n  {", "\n    return false;", "\n  }", "  LNode *newNode = new LNode;  // \u5c06\u65b0\u8282\u70b9\u63d2\u5165\u6307\u5b9a\u8282\u70b9\u540e", "\n  newNode->data = data;", "  if(afternode==0)", "\n  {", "\n    newNode->next = pTemp;", "\n    m_pList = newNode;", "\n  }", "\n  else", "\n  {", "\n    newNode->next = pTemp->next;", "\n    pTemp->next = newNode;", "\n  }", "\n  m_listLength++;", "\n  return true;", "\n}", "//remove the node after a specified node, remove the head node when removenode==0", "\nbool LinkList::RemoveAfter(int removenode)", "\n{", "\n  LNode *pTemp = m_pList;", "  if (removenode >\uff1d m_listLength || removenode\n  {", "\n    return false;", "\n  }", "  // \u627e\u5230\u6307\u5b9a\u7684\u8282\u70b9", "\n  for(int i=0;i", "  if(pTemp->next==NULL && removenode!=0)//\u6700\u540e\u4e00\u4e2a\u8282\u70b9\uff0c\u540e\u9762\u6ca1\u6709\u8282\u70b9\u53ef\u4ee5\u5220\u9664", "\n    return false;", "  if(removenode==0)", "\n  {", "\n    m_pList=pTemp->next;", "\n    delete pTemp;", "\n  }", "\n  else", "\n  {", "\n    LNode *pDel = pTemp->next;", "\n    pTemp->next=pDel->next;", "\n    delete pDel;", "\n  }", "  m_listLength\u2013;", "\n  return true;", "\n}", "//sort the linked list to descending order.", "\nvoid LinkList::sort()", "\n{", "\n  if (m_listLength\n  {", "\n    return;", "\n  }", "\n  LNode *pList2 = m_pList;//\u65b0\u5efa\u4e00\u4e2a\u94fe\u8868", "\n  m_pList=m_pList->next;", "\n  pList2->next=NULL;", "  for(int i=0;i", "\n  {", "\n    LNode *pTemp=pList2;", "\n    LNode *pPre=NULL;", "    if(pTemp->data ", "3. Debugging (Mandatory)", "\na. For each of the following recursive methods, enter Y in the answer box if the method terminaters (assume i=5), Otherwise enter N.", "\n\uff08\u9898\u76ee\u610f\u601d\uff1a\u5224\u65ad\u4e0b\u9762\u7684\u9012\u5f52\u51fd\u6570\u662f\u5426\u53ef\u4ee5\u7ed3\u675f\uff09", "\nstatic int f(int i){", "\n    return f(i-1)*f(i-1);", "\n}", "\nAnsewr: N,\u660e\u663e\u6ca1\u6709\u8fd4\u56de\u6761\u4ef6\u8bed\u53e5\uff0c\u65e0\u9650\u9012\u5f52\u4e86", "\nstatic int f(int i){", "\n    if(i==0){return 1;}", "\n    else {return f(i-1)*f(i-1);}", "\n}", "\n\u3000", "\nAnsewr:Y\uff0c\u5f53i\uff1d0\u65f6\u53ef\u7ed3\u675f\u9012\u5f52", "\nstatic int f(int i){", "\n   if(i==0){return 1;}", "\n   else {return f(i-1)*f(i-2);}", "\n}", "\nAnsewr:N\uff0c\u56e0\u4e3ai=1\u65f6\uff0cf(i-2)=f(-1),\u8fdb\u5165\u4e00\u4e2a\u65e0\u9650\u9012\u5f52\u4e2d", "b. There are two errors in the following JAVA program:", "\nstatic void g(int i){", "\n   if(i==1){return;}", "\n   if(i%2==0){g(i/2);return;}", "\n   else {g(3*i);return;}", "\n}", "\nplease correct them to make sure we can get the printed-out result as below:", "\n3 10 5 16 8 4 2 1", "\n\u7b54\uff1a\u5728\u7b2c\u4e00\u4e2aif\u8bed\u53e5\u524d\u52a0\u3000System.out.print(i+\u201d \u201c);", "\n\u3000\u3000else \u91cc\u9762\u7684g(3*i)\u6539\u4e3ag(3*i+1)", "\n\u8be5\u9898\u7531\u7f51\u53cbalvin\u8865\u4e0a\uff0c\u6211\u4e0d\u719fjava\u3002\u8c22\u8c22\u4ed6\u3002\u3000\u3000", "\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d", "\n\u53c8\u5230\u5e7f\u544a\u65f6\u95f4\uff1a\u7248\u6743\u6240\u6709\uff1a\u6731\u79d1 \u6b22\u8fce\u5149\u4e34\u6211\u7684\u7f51\u7ad9\uff1awww.goodsoft.cn\uff0c\u5404\u4f4d\u8f6c\u8d34\u522b\u5220\uff0c\u52b3\u52a8\u6210\u679c\u554a", "\n\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d", "\n\u4e2d\u6587\u7b14\u8bd5\u9898", "\n1\uff0e\u6c49\u8bd1\u82f1", "\n\u3000\u3000\u5317\u7535\u7f51\u7edc\u7684\u5f00\u53d1\u8005\u8ba1\u5212\u4f7f\u6765\u81ea\u4e8e\u4e0d\u540c\u7ec4\u7ec7\u7684\u5f00\u53d1\u8005\uff0c\u80fd\u591f\u5728\u5317\u7535\u7f51\u7edc\u7684\u5e73\u53f0\u4e0a\u5f00\u53d1\u5706\u6ee1\u7684\u8865\u5145\u4e1a\u52a1\u3002\u5317\u7535\u7f51\u7edc\u7b26\u5408\u5de5\u4e1a\u6807\u51c6\u7684\u5f00\u653e\u63a5\u53e3\uff0c\u4e3a\u8865\u5145\u4e1a\u52a1\u7684\u5f00\u5c55\u5f15\u5165\u4e86\u65e0\u6570\u5546\u673a\uff0c\u5f00\u53d1\u8005\u8ba1\u5212\u4e3a\u4e0d\u540c\u5c42\u9762\u7684\u5f00\u53d1\u8005\u63d0\u4f9b\u4e0d\u540c\u7b49\u7ea7\u7684\u8d44\u683c\uff0c\u8d44\u683c\u7684\u5212\u5206\u8fd8\u8003\u8651\u5230\u4ee5\u4e0b\u56e0\u7d20\uff1a\u8865\u5145\u4e1a\u52a1\u4e0e\u5317\u7535\u7f51\u7edc\u5e73\u53f0\u7684\u96c6\u5408\u7a0b\u5ea6\uff0c\u5f00\u53d1\u8005\u56e2\u4f53\u4e0e\u5317\u7535\u7f51\u7edc\u7684\u5408\u4f5c\u5173\u7cfb\uff0c\u7b49\u7b49\u3002", "\n\u7b54\uff1a\u5475\u5475\u3002\u8fd9\u4e2a\u8fd9\u4e2a\u57fa\u672c\u4e0a\u8fd8\u662f\u4e0d\u73b0\u4e11\u4e86\u5427\u3002 ", "2\uff0e\u7f16\u7a0b", "\n\u3000\u3000\u5c06\u6574\u6570\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\uff1avoid itoa(int,char);", "\n\u4f8b\u5982itoa(-123,s[])\u5219s=\u201c-123\u201d;", "\n\u7b54\uff1a", "\nchar* itoa(int value, char* string)", "\n{", "\n  char tmp[33];", "\n  char* tp = tmp;", "\n  int i;", "\n  unsigned v;", "\n  char* sp;", "\n  // \u5c06\u503c\u8f6c\u4e3a\u6b63\u503c", "\n  if (value \n    v = -value;", "\n  else", "\n    v = (unsigned)value;", "\n  // \u5c06\u6570\u8f6c\u6362\u4e3a\u5b57\u7b26\u653e\u5728\u6570\u7ec4tmp\u4e2d", "\n  while (v)", "\n  {", "\n    i = v % 10;", "\n    v = v / 10;", "\n    *tp++ = i+'0';", "\n  }", "\n  // \u5c06tmp\u91cc\u7684\u5b57\u7b26\u586b\u5165string\u6307\u9488\u91cc\uff0c\u5e76\u52a0\u4e0a\u8d1f\u53f7\uff08\u5982\u679c\u6709\uff09", "\n  sp = string;", "\n  if (value \n    *sp++ = '-';", "\n  while (tp > tmp)", "\n    *sp++ = *\u2013tp;", "\n  *sp = 0;", "\n  return string;", "\n}", "\n\uff08\u8f6c\u8f7d\u8005\u6ce8\uff1a\u5bf9\u539f\u6587\u6709\u90e8\u5206\u4fee\u6539\uff09"], "title": "C++\u7b14\u8bd5\u9898\uff08\u4e5d\uff09"},
{"contents": ["1.\u5f15\u8a00 ", "\u3000\u3000\u672c\u6587\u7684\u5199\u4f5c\u76ee\u7684\u5e76\u4e0d\u5728\u4e8e\u63d0\u4f9bC/C++\u7a0b\u5e8f\u5458\u6c42\u804c\u9762\u8bd5\u6307\u5bfc\uff0c\u800c\u65e8\u5728\u4ece\u6280\u672f\u4e0a\u5206\u6790\u9762\u8bd5\u9898\u7684\u5185\u6db5\u3002\u6587\u4e2d\u7684\u5927\u591a\u6570\u9762\u8bd5\u9898\u6765\u81ea\u5404\u5927\u8bba\u575b\uff0c\u90e8\u5206\u8bd5\u9898\u89e3\u7b54\u4e5f\u53c2\u8003\u4e86\u7f51\u53cb\u7684\u610f\u89c1\u3002", "\u3000\u3000\u8bb8\u591a\u9762\u8bd5\u9898\u770b\u4f3c\u7b80\u5355\uff0c\u5374\u9700\u8981\u6df1\u539a\u7684\u57fa\u672c\u529f\u624d\u80fd\u7ed9\u51fa\u5b8c\u7f8e\u7684\u89e3\u7b54\u3002\u4f01\u4e1a\u8981\u6c42\u9762\u8bd5\u8005\u5199\u4e00\u4e2a\u6700\u7b80\u5355\u7684strcpy\u51fd\u6570\u90fd\u53ef\u770b\u51fa\u9762\u8bd5\u8005\u5728\u6280\u672f\u4e0a\u7a76\u7adf\u8fbe\u5230\u4e86\u600e\u6837\u7684\u7a0b\u5ea6\uff0c\u6211\u4eec\u80fd\u771f\u6b63\u5199\u597d\u4e00\u4e2astrcpy\u51fd\u6570\u5417\uff1f\u6211\u4eec\u90fd\u89c9\u5f97\u81ea\u5df1\u80fd\uff0c\u53ef\u662f\u6211\u4eec\u5199\u51fa\u7684strcpy\u5f88\u53ef\u80fd\u53ea\u80fd\u62ff\u523010\u5206\u4e2d\u76842\u5206\u3002\u8bfb\u8005\u53ef\u4ece\u672c\u6587\u770b\u5230strcpy\u51fd\u6570\u4ece2\u5206\u523010\u5206\u89e3\u7b54\u7684\u4f8b\u5b50\uff0c\u770b\u770b\u81ea\u5df1\u5c5e\u4e8e\u4ec0\u4e48\u6837\u7684\u5c42\u6b21\u3002\u6b64\u5916\uff0c\u8fd8\u6709\u4e00\u4e9b\u9762\u8bd5\u9898\u8003\u67e5\u9762\u8bd5\u8005\u654f\u6377\u7684\u601d\u7ef4\u80fd\u529b\u3002 ", "\u3000\u3000\u5206\u6790\u8fd9\u4e9b\u9762\u8bd5\u9898\uff0c\u672c\u8eab\u5305\u542b\u5f88\u5f3a\u7684\u8da3\u5473\u6027\uff1b\u800c\u4f5c\u4e3a\u4e00\u540d\u7814\u53d1\u4eba\u5458\uff0c\u901a\u8fc7\u5bf9\u8fd9\u4e9b\u9762\u8bd5\u9898\u7684\u6df1\u5165\u5256\u6790\u5219\u53ef\u8fdb\u4e00\u6b65\u589e\u5f3a\u81ea\u8eab\u7684\u5185\u529f\u3002", "\u3000\u30002.\u627e\u9519\u9898", "\u3000\u3000\u8bd5\u98981\uff1a", "void test1()", "\n{", "\n\u3000char string[10];", "\n\u3000char* str1 = \u201c0123456789\u2033;", "\n\u3000strcpy( string, str1 );", "\n}", "\n\u3000\u3000\u8bd5\u98982\uff1a", "void test2()", "\n{", "\n\u3000char string[10], str1[10];", "\n\u3000int i;", "\n\u3000for(i=0; i\n\u3000{", "\n\u3000\u3000str1[i] = 'a';", "\n\u3000}", "\n\u3000strcpy( string, str1 );", "\n}", "\n\u3000\u3000\u8bd5\u98983\uff1a", "void test3(char* str1)", "\n{", "\n\u3000char string[10];", "\n\u3000if( strlen( str1 ) \n\u3000{", "\n\u3000\u3000strcpy( string, str1 );", "\n\u3000}", "\n}", "\n\u3000\u3000\u89e3\u7b54\uff1a", "\u3000\u3000\u8bd5\u98981\u5b57\u7b26\u4e32str1\u9700\u898111\u4e2a\u5b57\u8282\u624d\u80fd\u5b58\u653e\u4e0b\uff08\u5305\u62ec\u672b\u5c3e\u7684\u2019\\0\u2019\uff09\uff0c\u800cstring\u53ea\u670910\u4e2a\u5b57\u8282\u7684\u7a7a\u95f4\uff0cstrcpy\u4f1a\u5bfc\u81f4\u6570\u7ec4\u8d8a\u754c\uff1b", "\u3000\u3000\u5bf9\u8bd5\u98982\uff0c\u5982\u679c\u9762\u8bd5\u8005\u6307\u51fa\u5b57\u7b26\u6570\u7ec4str1\u4e0d\u80fd\u5728\u6570\u7ec4\u5185\u7ed3\u675f\u53ef\u4ee5\u7ed93\u5206\uff1b\u5982\u679c\u9762\u8bd5\u8005\u6307\u51fastrcpy(string, str1)\u8c03\u7528\u4f7f\u5f97\u4ecestr1\u5185\u5b58\u8d77\u590d\u5236\u5230string\u5185\u5b58\u8d77\u6240\u590d\u5236\u7684\u5b57\u8282\u6570\u5177\u6709\u4e0d\u786e\u5b9a\u6027\u53ef\u4ee5\u7ed97\u5206\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u6307\u51fa\u5e93\u51fd\u6570strcpy\u5de5\u4f5c\u65b9\u5f0f\u7684\u7ed910\u5206\uff1b", "\u3000\u3000\u5bf9\u8bd5\u98983\uff0cif(strlen(str1) \n", "\u3000\u3000\u5256\u6790\uff1a", "\u3000\u3000\u8003\u67e5\u5bf9\u57fa\u672c\u529f\u7684\u638c\u63e1\uff1a", "\u3000\u3000(1)\u5b57\u7b26\u4e32\u4ee5\u2019\\0\u2019\u7ed3\u5c3e\uff1b", "\u3000\u3000(2)\u5bf9\u6570\u7ec4\u8d8a\u754c\u628a\u63e1\u7684\u654f\u611f\u5ea6\uff1b", "\u3000\u3000(3)\u5e93\u51fd\u6570strcpy\u7684\u5de5\u4f5c\u65b9\u5f0f\uff0c\u5982\u679c\u7f16\u5199\u4e00\u4e2a\u6807\u51c6strcpy\u51fd\u6570\u7684\u603b\u5206\u503c\u4e3a10\uff0c\u4e0b\u9762\u7ed9\u51fa\u51e0\u4e2a\u4e0d\u540c\u5f97\u5206\u7684\u7b54\u6848\uff1a", "\u3000\u30002\u5206", "void strcpy( char *strDest, char *strSrc )", "\n{", "\n\u3000 while( (*strDest++ = * strSrc++) != \u2018\\0\u2019 );", "\n}", "\n\u3000\u30004\u5206", "void strcpy( char *strDest, const char *strSrc )", "\n//\u5c06\u6e90\u5b57\u7b26\u4e32\u52a0const\uff0c\u8868\u660e\u5176\u4e3a\u8f93\u5165\u53c2\u6570\uff0c\u52a02\u5206", "\n{", "\n\u3000 while( (*strDest++ = * strSrc++) != \u2018\\0\u2019 );", "\n}", "\n\u3000\u30007\u5206", "void strcpy(char *strDest, const char *strSrc)", "\n{", "\n\u3000//\u5bf9\u6e90\u5730\u5740\u548c\u76ee\u7684\u5730\u5740\u52a0\u975e0\u65ad\u8a00\uff0c\u52a03\u5206", "\n\u3000assert( (strDest != NULL) && (strSrc != NULL) );", "\n\u3000while( (*strDest++ = * strSrc++) != \u2018\\0\u2019 );", "\n}", "\n\u3000\u300010\u5206", "//\u4e3a\u4e86\u5b9e\u73b0\u94fe\u5f0f\u64cd\u4f5c\uff0c\u5c06\u76ee\u7684\u5730\u5740\u8fd4\u56de\uff0c\u52a03\u5206\uff01", "char * strcpy( char *strDest, const char *strSrc )", "\n{", "\n\u3000assert( (strDest != NULL) && (strSrc != NULL) );", "\n\u3000char *address = strDest;", "\n\u3000while( (*strDest++ = * strSrc++) != \u2018\\0\u2019 );", "\n\u3000\u3000return address;", "\n}", "\n\u3000\u3000\u4ece2\u5206\u523010\u5206\u7684\u51e0\u4e2a\u7b54\u6848\u6211\u4eec\u53ef\u4ee5\u6e05\u695a\u7684\u770b\u5230\uff0c\u5c0f\u5c0f\u7684strcpy\u7adf\u7136\u6697\u85cf\u7740\u8fd9\u4e48\u591a\u7384\u673a\uff0c\u771f\u4e0d\u662f\u76d6\u7684\uff01\u9700\u8981\u591a\u4e48\u624e\u5b9e\u7684\u57fa\u672c\u529f\u624d\u80fd\u5199\u4e00\u4e2a\u5b8c\u7f8e\u7684strcpy\u554a\uff01", "\u3000\u3000(4)\u5bf9strlen\u7684\u638c\u63e1\uff0c\u5b83\u6ca1\u6709\u5305\u62ec\u5b57\u7b26\u4e32\u672b\u5c3e\u7684'\\0'\u3002", "\u3000\u3000\u8bfb\u8005\u770b\u4e86\u4e0d\u540c\u5206\u503c\u7684strcpy\u7248\u672c\uff0c\u5e94\u8be5\u4e5f\u53ef\u4ee5\u5199\u51fa\u4e00\u4e2a10\u5206\u7684strlen\u51fd\u6570\u4e86\uff0c\u5b8c\u7f8e\u7684\u7248\u672c\u4e3a\uff1a int strlen( const char *str ) //\u8f93\u5165\u53c2\u6570const", "{", "\n\u3000assert( strt != NULL ); //\u65ad\u8a00\u5b57\u7b26\u4e32\u5730\u5740\u975e0", "\n\u3000int len;", "\n\u3000while( (*str++) != '\\0' )", "\n\u3000{", "\n\u3000\u3000len++;", "\n\u3000}", "\n\u3000return len;", "\n}", "\n\u3000\u3000\u8bd5\u98984\uff1a", "void GetMemory( char *p )", "\n{", "\n\u3000p = (char *) malloc( 100 );", "\n}", "void Test( void )", "\n{", "\n\u3000char *str = NULL;", "\n\u3000GetMemory( str );", "\n\u3000strcpy( str, \"hello world\" );", "\n\u3000printf( str );", "\n}", "\n\u3000\u3000\u8bd5\u98985\uff1a", "char *GetMemory( void )", "\n{", "\n\u3000char p[] = \"hello world\";", "\n\u3000return p;", "\n}", "void Test( void )", "\n{", "\n\u3000char *str = NULL;", "\n\u3000str = GetMemory();", "\n\u3000printf( str );", "\n}", "\n\u3000\u3000\u8bd5\u98986\uff1a", "void GetMemory( char **p, int num )", "\n{", "\n\u3000*p = (char *) malloc( num );", "\n}", "void Test( void )", "\n{", "\n\u3000char *str = NULL;", "\n\u3000GetMemory( &str, 100 );", "\n\u3000strcpy( str, \"hello\" );", "\n\u3000printf( str );", "\n}", "\n\u3000\u3000\u8bd5\u98987\uff1a", "void Test( void )", "\n{", "\n\u3000char *str = (char *) malloc( 100 );", "\n\u3000strcpy( str, \"hello\" );", "\n\u3000free( str );", "\n\u3000... //\u7701\u7565\u7684\u5176\u5b83\u8bed\u53e5", "\n}", "\n\u3000\u3000\u89e3\u7b54\uff1a", "\u3000\u3000\u8bd5\u98984\u4f20\u5165\u4e2dGetMemory( char *p )\u51fd\u6570\u7684\u5f62\u53c2\u4e3a\u5b57\u7b26\u4e32\u6307\u9488\uff0c\u5728\u51fd\u6570\u5185\u90e8\u4fee\u6539\u5f62\u53c2\u5e76\u4e0d\u80fd\u771f\u6b63\u7684\u6539\u53d8\u4f20\u5165\u5f62\u53c2\u7684\u503c\uff0c\u6267\u884c\u5b8c", "char *str = NULL;", "\nGetMemory( str );", "\n\u3000\u3000\u540e\u7684str\u4ecd\u7136\u4e3aNULL\uff1b", "\u3000\u3000\u8bd5\u98985\u4e2d", "char p[] = \"hello world\";", "\nreturn p;", "\n\u3000\u3000\u7684p[]\u6570\u7ec4\u4e3a\u51fd\u6570\u5185\u7684\u5c40\u90e8\u81ea\u52a8\u53d8\u91cf\uff0c\u5728\u51fd\u6570\u8fd4\u56de\u540e\uff0c\u5185\u5b58\u5df2\u7ecf\u88ab\u91ca\u653e\u3002\u8fd9\u662f\u8bb8\u591a\u7a0b\u5e8f\u5458\u5e38\u72af\u7684\u9519\u8bef\uff0c\u5176\u6839\u6e90\u5728\u4e8e\u4e0d\u7406\u89e3\u53d8\u91cf\u7684\u751f\u5b58\u671f\u3002", "\u3000\u3000\u8bd5\u98986\u7684GetMemory\u907f\u514d\u4e86\u8bd5\u98984\u7684\u95ee\u9898\uff0c\u4f20\u5165GetMemory\u7684\u53c2\u6570\u4e3a\u5b57\u7b26\u4e32\u6307\u9488\u7684\u6307\u9488\uff0c\u4f46\u662f\u5728GetMemory\u4e2d\u6267\u884c\u7533\u8bf7\u5185\u5b58\u53ca\u8d4b\u503c\u8bed\u53e5", "*p = (char *) malloc( num );", "\n\u3000\u3000\u540e\u672a\u5224\u65ad\u5185\u5b58\u662f\u5426\u7533\u8bf7\u6210\u529f\uff0c\u5e94\u52a0\u4e0a\uff1a", "if ( *p == NULL )", "\n{", "\n\u3000...//\u8fdb\u884c\u7533\u8bf7\u5185\u5b58\u5931\u8d25\u5904\u7406", "\n}", "\n\u3000\u3000\u8bd5\u98987\u5b58\u5728\u4e0e\u8bd5\u98986\u540c\u6837\u7684\u95ee\u9898\uff0c\u5728\u6267\u884c", "char *str = (char *) malloc(100);", "\n\u3000\u3000\u540e\u672a\u8fdb\u884c\u5185\u5b58\u662f\u5426\u7533\u8bf7\u6210\u529f\u7684\u5224\u65ad\uff1b\u53e6\u5916\uff0c\u5728free(str)\u540e\u672a\u7f6estr\u4e3a\u7a7a\uff0c\u5bfc\u81f4\u53ef\u80fd\u53d8\u6210\u4e00\u4e2a\u201c\u91ce\u201d\u6307\u9488\uff0c\u5e94\u52a0\u4e0a\uff1a", "str = NULL;", "\n\u3000\u3000\u8bd5\u98986\u7684Test\u51fd\u6570\u4e2d\u4e5f\u672a\u5bf9malloc\u7684\u5185\u5b58\u8fdb\u884c\u91ca\u653e\u3002", "\u3000\u3000\u5256\u6790\uff1a", "\u3000\u3000\u8bd5\u98984\uff5e7\u8003\u67e5\u9762\u8bd5\u8005\u5bf9\u5185\u5b58\u64cd\u4f5c\u7684\u7406\u89e3\u7a0b\u5ea6\uff0c\u57fa\u672c\u529f\u624e\u5b9e\u7684\u9762\u8bd5\u8005\u4e00\u822c\u90fd\u80fd\u6b63\u786e\u7684\u56de\u7b54\u5176\u4e2d50~60\u7684\u9519\u8bef\u3002\u4f46\u662f\u8981\u5b8c\u5168\u89e3\u7b54\u6b63\u786e\uff0c\u5374\u4e5f\u7edd\u975e\u6613\u4e8b\u3002", "\u3000\u3000\u5bf9\u5185\u5b58\u64cd\u4f5c\u7684\u8003\u67e5\u4e3b\u8981\u96c6\u4e2d\u5728\uff1a", "\u3000\u3000\uff081\uff09\u6307\u9488\u7684\u7406\u89e3\uff1b", "\u3000\u3000\uff082\uff09\u53d8\u91cf\u7684\u751f\u5b58\u671f\u53ca\u4f5c\u7528\u8303\u56f4\uff1b", "\u3000\u3000\uff083\uff09\u826f\u597d\u7684\u52a8\u6001\u5185\u5b58\u7533\u8bf7\u548c\u91ca\u653e\u4e60\u60ef\u3002", "\u3000\u3000\u518d\u770b\u770b\u4e0b\u9762\u7684\u4e00\u6bb5\u7a0b\u5e8f\u6709\u4ec0\u4e48\u9519\u8bef\uff1a", "swap( int* p1,int* p2 )", "\n{", "\n\u3000int *p;", "\n\u3000*p = *p1;", "\n\u3000*p1 = *p2;", "\n\u3000*p2 = *p;", "\n}", "\n\u3000\u3000\u5728swap\u51fd\u6570\u4e2d\uff0cp\u662f\u4e00\u4e2a\u201c\u91ce\u201d\u6307\u9488\uff0c\u6709\u53ef\u80fd\u6307\u5411\u7cfb\u7edf\u533a\uff0c\u5bfc\u81f4\u7a0b\u5e8f\u8fd0\u884c\u7684\u5d29\u6e83\u3002\u5728VC++\u4e2dDEBUG\u8fd0\u884c\u65f6\u63d0\u793a\u9519\u8bef\u201cAccess Violation\u201d\u3002\u8be5\u7a0b\u5e8f\u5e94\u8be5\u6539\u4e3a\uff1a", "swap( int* p1,int* p2 )", "\n{", "\n\u3000int p;", "\n\u3000p = *p1;", "\n\u3000*p1 = *p2;", "\n\u3000*p2 = p;", "\n}", "\n3.\u5185\u529f\u9898", "\u3000\u3000\u8bd5\u98981\uff1a\u5206\u522b\u7ed9\u51faBOOL\uff0cint\uff0cfloat\uff0c\u6307\u9488\u53d8\u91cf \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\uff08\u5047\u8bbe\u53d8\u91cf\u540d\u4e3avar\uff09", "\u3000\u3000\u89e3\u7b54\uff1a", "\u3000\u3000\u3000BOOL\u578b\u53d8\u91cf\uff1aif(!var)", "\u3000\u3000\u3000int\u578b\u53d8\u91cf\uff1a if(var==0)", "\u3000\u3000\u3000float\u578b\u53d8\u91cf\uff1a", "\u3000\u3000\u3000const float EPSINON = 0.00001;", "\u3000\u3000\u3000if ((x >= \u2013 EPSINON) && (x \n", "\u3000\u3000\u3000\u6307\u9488\u53d8\u91cf\uff1a\u3000\u3000if(var==NULL)", "\u3000\u3000\u5256\u6790\uff1a", "\u3000\u3000\u8003\u67e5\u5bf90\u503c\u5224\u65ad\u7684\u201c\u5185\u529f\u201d\uff0cBOOL\u578b\u53d8\u91cf\u76840\u5224\u65ad\u5b8c\u5168\u53ef\u4ee5\u5199\u6210if(var==0)\uff0c\u800cint\u578b\u53d8\u91cf\u4e5f\u53ef\u4ee5\u5199\u6210if(!var)\uff0c\u6307\u9488\u53d8\u91cf\u7684\u5224\u65ad\u4e5f\u53ef\u4ee5\u5199\u6210if(!var)\uff0c\u4e0a\u8ff0\u5199\u6cd5\u867d\u7136\u7a0b\u5e8f\u90fd\u80fd\u6b63\u786e\u8fd0\u884c\uff0c\u4f46\u662f\u672a\u80fd\u6e05\u6670\u5730\u8868\u8fbe\u7a0b\u5e8f\u7684\u610f\u601d\u3002", "\n\u3000\u4e00\u822c\u7684\uff0c\u5982\u679c\u60f3\u8ba9if\u5224\u65ad\u4e00\u4e2a\u53d8\u91cf\u7684\u201c\u771f\u201d\u3001\u201c\u5047\u201d\uff0c\u5e94\u76f4\u63a5\u4f7f\u7528if(var)\u3001if(!var)\uff0c\u8868\u660e\u5176\u4e3a\u201c\u903b\u8f91\u201d\u5224\u65ad\uff1b\u5982\u679c\u7528if\u5224\u65ad\u4e00\u4e2a\u6570\u503c\u578b\u53d8\u91cf(short\u3001int\u3001long\u7b49)\uff0c\u5e94\u8be5\u7528if(var==0)\uff0c\u8868\u660e\u662f\u4e0e0\u8fdb\u884c\u201c\u6570\u503c\u201d\u4e0a\u7684\u6bd4\u8f83\uff1b\u800c\u5224\u65ad\u6307\u9488\u5219\u9002\u5b9c\u7528if(var==NULL)\uff0c\u8fd9\u662f\u4e00\u79cd\u5f88\u597d\u7684\u7f16\u7a0b\u4e60\u60ef\u3002", "\u3000\u3000\u6d6e\u70b9\u578b\u53d8\u91cf\u5e76\u4e0d\u7cbe\u786e\uff0c\u6240\u4ee5\u4e0d\u53ef\u5c06float\u53d8\u91cf\u7528\u201c==\u201d\u6216\u201c\uff01=\u201d\u4e0e\u6570\u5b57\u6bd4\u8f83\uff0c\u5e94\u8be5\u8bbe\u6cd5\u8f6c\u5316\u6210\u201c>=\u201d\u6216\u201c\n", "\u3000\u3000\u8bd5\u98982\uff1a\u4ee5\u4e0b\u4e3aWindows NT\u4e0b\u768432\u4f4dC++\u7a0b\u5e8f\uff0c\u8bf7\u8ba1\u7b97sizeof\u7684\u503c", "void Func ( char str[100] )", "\n{", "\n\u3000sizeof( str ) = ?", "\n}", "void *p = malloc( 100 );", "\nsizeof ( p ) = ?", "\n\u3000\u3000\u89e3\u7b54\uff1a", "sizeof( str ) = 4", "\nsizeof ( p ) = 4", "\n\u3000\u3000\u5256\u6790\uff1a", "\u3000\u3000Func ( char str[100] )\u51fd\u6570\u4e2d\u6570\u7ec4\u540d\u4f5c\u4e3a\u51fd\u6570\u5f62\u53c2\u65f6\uff0c\u5728\u51fd\u6570\u4f53\u5185\uff0c\u6570\u7ec4\u540d\u5931\u53bb\u4e86\u672c\u8eab\u7684\u5185\u6db5\uff0c\u4ec5\u4ec5\u53ea\u662f\u4e00\u4e2a\u6307\u9488\uff1b\u5728\u5931\u53bb\u5176\u5185\u6db5\u7684\u540c\u65f6\uff0c\u5b83\u8fd8\u5931\u53bb\u4e86\u5176\u5e38\u91cf\u7279\u6027\uff0c\u53ef\u4ee5\u4f5c\u81ea\u589e\u3001\u81ea\u51cf\u7b49\u64cd\u4f5c\uff0c\u53ef\u4ee5\u88ab\u4fee\u6539\u3002", "\u3000\u3000\u6570\u7ec4\u540d\u7684\u672c\u8d28\u5982\u4e0b\uff1a", "\u3000\u3000\uff081\uff09\u6570\u7ec4\u540d\u6307\u4ee3\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\u5c31\u662f\u6570\u7ec4\uff1b", "\u3000\u3000\u4f8b\u5982\uff1a", "char str[10];", "\ncout \uff1c\uff1c sizeof(str) \uff1c\uff1c endl;", "\n\u3000\u3000\u8f93\u51fa\u7ed3\u679c\u4e3a10\uff0cstr\u6307\u4ee3\u6570\u636e\u7ed3\u6784char[10]\u3002", "\u3000\u3000\uff082\uff09\u6570\u7ec4\u540d\u53ef\u4ee5\u8f6c\u6362\u4e3a\u6307\u5411\u5176\u6307\u4ee3\u5b9e\u4f53\u7684\u6307\u9488\uff0c\u800c\u4e14\u662f\u4e00\u4e2a\u6307\u9488\u5e38\u91cf\uff0c\u4e0d\u80fd\u4f5c\u81ea\u589e\u3001\u81ea\u51cf\u7b49\u64cd\u4f5c\uff0c\u4e0d\u80fd\u88ab\u4fee\u6539\uff1b", "char str[10];", "\nstr++; //\u7f16\u8bd1\u51fa\u9519\uff0c\u63d0\u793astr\u4e0d\u662f\u5de6\u503c\u3000", "\n\u3000\u3000\uff083\uff09\u6570\u7ec4\u540d\u4f5c\u4e3a\u51fd\u6570\u5f62\u53c2\u65f6\uff0c\u6ca6\u4e3a\u666e\u901a\u6307\u9488\u3002", "\u3000\u3000Windows NT 32\u4f4d\u5e73\u53f0\u4e0b\uff0c\u6307\u9488\u7684\u957f\u5ea6\uff08\u5360\u7528\u5185\u5b58\u7684\u5927\u5c0f\uff09\u4e3a4\u5b57\u8282\uff0c\u6545sizeof( str ) \u3001sizeof ( p ) \u90fd\u4e3a4\u3002", "\u3000\u3000\u8bd5\u98983\uff1a\u5199\u4e00\u4e2a\u201c\u6807\u51c6\u201d\u5b8fMIN\uff0c\u8fd9\u4e2a\u5b8f\u8f93\u5165\u4e24\u4e2a\u53c2\u6570\u5e76\u8fd4\u56de\u8f83\u5c0f\u7684\u4e00\u4e2a\u3002\u53e6\u5916\uff0c\u5f53\u4f60\u5199\u4e0b\u9762\u7684\u4ee3\u7801\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\u4e8b\uff1f", "least = MIN(*p++, b);", "\n\u3000\u3000\u89e3\u7b54\uff1a", "#define MIN(A,B) ((A) \n\u3000\u3000MIN(*p++, b)\u4f1a\u4ea7\u751f\u5b8f\u7684\u526f\u4f5c\u7528", "\u3000\u3000\u5256\u6790\uff1a", "\u3000\u3000\u8fd9\u4e2a\u9762\u8bd5\u9898\u4e3b\u8981\u8003\u67e5\u9762\u8bd5\u8005\u5bf9\u5b8f\u5b9a\u4e49\u7684\u4f7f\u7528\uff0c\u5b8f\u5b9a\u4e49\u53ef\u4ee5\u5b9e\u73b0\u7c7b\u4f3c\u4e8e\u51fd\u6570\u7684\u529f\u80fd\uff0c\u4f46\u662f\u5b83\u7ec8\u5f52\u4e0d\u662f\u51fd\u6570\uff0c\u800c\u5b8f\u5b9a\u4e49\u4e2d\u62ec\u5f27\u4e2d\u7684\u201c\u53c2\u6570\u201d\u4e5f\u4e0d\u662f\u771f\u7684\u53c2\u6570\uff0c\u5728\u5b8f\u5c55\u5f00\u7684\u65f6\u5019\u5bf9\u201c\u53c2\u6570\u201d\u8fdb\u884c\u7684\u662f\u4e00\u5bf9\u4e00\u7684\u66ff\u6362\u3002", "\u3000\u3000\u7a0b\u5e8f\u5458\u5bf9\u5b8f\u5b9a\u4e49\u7684\u4f7f\u7528\u8981\u975e\u5e38\u5c0f\u5fc3\uff0c\u7279\u522b\u8981\u6ce8\u610f\u4e24\u4e2a\u95ee\u9898\uff1a", "\u3000\u3000\uff081\uff09\u8c28\u614e\u5730\u5c06\u5b8f\u5b9a\u4e49\u4e2d\u7684\u201c\u53c2\u6570\u201d\u548c\u6574\u4e2a\u5b8f\u7528\u7528\u62ec\u5f27\u62ec\u8d77\u6765\u3002\u6240\u4ee5\uff0c\u4e25\u683c\u5730\u8bb2\uff0c\u4e0b\u8ff0\u89e3\u7b54\uff1a", "#define MIN(A,B) (A) \n#define MIN(A,B) (A \n\u3000\u3000\u90fd\u5e94\u52240\u5206\uff1b", "\u3000\u3000\uff082\uff09\u9632\u6b62\u5b8f\u7684\u526f\u4f5c\u7528\u3002", "\u3000\u3000\u5b8f\u5b9a\u4e49#define MIN(A,B) ((A) \n", "((*p++) \n", "\u3000\u3000\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u4f1a\u4ea7\u751f\u526f\u4f5c\u7528\uff0c\u6307\u9488p\u4f1a\u4f5c\u4e09\u6b21++\u81ea\u589e\u64cd\u4f5c\u3002", "\u3000\u3000\u9664\u6b64\u4e4b\u5916\uff0c\u53e6\u4e00\u4e2a\u5e94\u8be5\u52240\u5206\u7684\u89e3\u7b54\u662f\uff1a", "#define MIN(A,B) ((A) \n\u3000\u3000\u8fd9\u4e2a\u89e3\u7b54\u5728\u5b8f\u5b9a\u4e49\u7684\u540e\u9762\u52a0\u201c;\u201d\uff0c\u663e\u793a\u7f16\u5199\u8005\u5bf9\u5b8f\u7684\u6982\u5ff5\u6a21\u7cca\u4e0d\u6e05\uff0c\u53ea\u80fd\u88ab\u65e0\u60c5\u5730\u52240\u5206\u5e76\u88ab\u9762\u8bd5\u5b98\u6dd8\u6c70\u3002", "\u3000\u3000\u8bd5\u98984\uff1a\u4e3a\u4ec0\u4e48\u6807\u51c6\u5934\u6587\u4ef6\u90fd\u6709\u7c7b\u4f3c\u4ee5\u4e0b\u7684\u7ed3\u6784\uff1f ", "#ifndef __INCvxWorksh", "\n#define __INCvxWorksh", "\n#ifdef __cplusplus", "extern \u201cC\u201d {", "\n#endif", "\n/*\u2026*/", "\n#ifdef __cplusplus", "\n}", "#endif", "\n#endif /* __INCvxWorksh */", "\n\u3000\u3000\u89e3\u7b54\uff1a", "\u3000\u3000\u5934\u6587\u4ef6\u4e2d\u7684\u7f16\u8bd1\u5b8f", "#ifndef\u3000__INCvxWorksh", "\n#define\u3000__INCvxWorksh", "\n#endif", "\n\u3000\u3000\u7684\u4f5c\u7528\u662f\u9632\u6b62\u88ab\u91cd\u590d\u5f15\u7528\u3002", "\u3000\u3000\u4f5c\u4e3a\u4e00\u79cd\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\uff0cC++\u652f\u6301\u51fd\u6570\u91cd\u8f7d\uff0c\u800c\u8fc7\u7a0b\u5f0f\u8bed\u8a00C\u5219\u4e0d\u652f\u6301\u3002\u51fd\u6570\u88abC++\u7f16\u8bd1\u540e\u5728symbol\u5e93\u4e2d\u7684\u540d\u5b57\u4e0eC\u8bed\u8a00\u7684\u4e0d\u540c\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u67d0\u4e2a\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a ", "void foo(int x, int y);", "\n\u3000\u3000\u8be5\u51fd\u6570\u88abC\u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u5728symbol\u5e93\u4e2d\u7684\u540d\u5b57\u4e3a_foo\uff0c\u800cC++\u7f16\u8bd1\u5668\u5219\u4f1a\u4ea7\u751f\u50cf_foo_int_int\u4e4b\u7c7b\u7684\u540d\u5b57\u3002_foo_int_int\u8fd9\u6837\u7684\u540d\u5b57\u5305\u542b\u4e86\u51fd\u6570\u540d\u548c\u51fd\u6570\u53c2\u6570\u6570\u91cf\u53ca\u7c7b\u578b\u4fe1\u606f\uff0cC++\u5c31\u662f\u8003\u8fd9\u79cd\u673a\u5236\u6765\u5b9e\u73b0\u51fd\u6570\u91cd\u8f7d\u7684\u3002", "\u3000\u3000\u4e3a\u4e86\u5b9e\u73b0C\u548cC++\u7684\u6df7\u5408\u7f16\u7a0b\uff0cC++\u63d0\u4f9b\u4e86C\u8fde\u63a5\u4ea4\u6362\u6307\u5b9a\u7b26\u53f7extern \u201cC\u201d\u6765\u89e3\u51b3\u540d\u5b57\u5339\u914d\u95ee\u9898\uff0c\u51fd\u6570\u58f0\u660e\u524d\u52a0\u4e0aextern \u201cC\u201d\u540e\uff0c\u5219\u7f16\u8bd1\u5668\u5c31\u4f1a\u6309\u7167C\u8bed\u8a00\u7684\u65b9\u5f0f\u5c06\u8be5\u51fd\u6570\u7f16\u8bd1\u4e3a_foo\uff0c\u8fd9\u6837C\u8bed\u8a00\u4e2d\u5c31\u53ef\u4ee5\u8c03\u7528C++\u7684\u51fd\u6570\u4e86\u3002     \u8bd5\u98985\uff1a\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u4f5c\u7528\u662f\u628a\u4e00\u4e2achar\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u5faa\u73af\u53f3\u79fbn\u4e2a\u3002\u6bd4\u5982\u539f\u6765\u662f\u201cabcdefghi\u201d\u5982\u679cn=2\uff0c\u79fb\u4f4d\u540e\u5e94\u8be5\u662f\u201chiabcdefgh\u201d ", "\u3000\u3000\u51fd\u6570\u5934\u662f\u8fd9\u6837\u7684\uff1a", "//pStr\u662f\u6307\u5411\u4ee5\u2019\\0\u2032\u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32\u7684\u6307\u9488", "\n//steps\u662f\u8981\u6c42\u79fb\u52a8\u7684n", "void LoopMove ( char * pStr, int steps )", "\n{", "\n\u3000//\u8bf7\u586b\u5145\u2026", "\n}", "\n\u3000\u3000\u89e3\u7b54\uff1a", "\u3000\u3000\u6b63\u786e\u89e3\u7b541\uff1a", "void LoopMove ( char *pStr, int steps )", "\n{", "\n\u3000int n = strlen( pStr ) \u2013 steps;", "\n\u3000char tmp[MAX_LEN];", "\n\u3000strcpy ( tmp, pStr + n );", "\n\u3000strcpy ( tmp + steps, pStr);", "\n\u3000*( tmp + strlen ( pStr ) ) = \u2018\\0\u2032;", "\n\u3000strcpy( pStr, tmp );", "\n}", "\n\u3000\u3000\u6b63\u786e\u89e3\u7b542\uff1a", "void LoopMove ( char *pStr, int steps )", "\n{", "\n\u3000int n = strlen( pStr ) \u2013 steps;", "\n\u3000char tmp[MAX_LEN];", "\n\u3000memcpy( tmp, pStr + n, steps );", "\n\u3000memcpy(pStr + steps, pStr, n );", "\n\u3000memcpy(pStr, tmp, steps );", "\n}", "\n\u3000\u3000\u5256\u6790\uff1a", "\u3000\u3000\u8fd9\u4e2a\u8bd5\u9898\u4e3b\u8981\u8003\u67e5\u9762\u8bd5\u8005\u5bf9\u6807\u51c6\u5e93\u51fd\u6570\u7684\u719f\u7ec3\u7a0b\u5ea6\uff0c\u5728\u9700\u8981\u7684\u65f6\u5019\u5f15\u7528\u5e93\u51fd\u6570\u53ef\u4ee5\u5f88\u5927\u7a0b\u5ea6\u4e0a\u7b80\u5316\u7a0b\u5e8f\u7f16\u5199\u7684\u5de5\u4f5c\u91cf\u3002", "\u3000\u3000\u6700\u9891\u7e41\u88ab\u4f7f\u7528\u7684\u5e93\u51fd\u6570\u5305\u62ec\uff1a", "\u3000\u3000\uff081\uff09 strcpy", "\u3000\u3000\uff082\uff09 memcpy", "\u3000\u3000\uff083\uff09 memset", "\u3000\u3000\u8bd5\u98986\uff1a\u5df2\u77e5WAV\u6587\u4ef6\u683c\u5f0f\u5982\u4e0b\u8868\uff0c\u6253\u5f00\u4e00\u4e2aWAV\u6587\u4ef6\uff0c\u4ee5\u9002\u5f53\u7684\u6570\u636e\u7ed3\u6784\u7ec4\u7ec7WAV\u6587\u4ef6\u5934\u5e76\u89e3\u6790WAV\u683c\u5f0f\u7684\u5404\u9879\u4fe1\u606f\u3002", "\u3000\u3000WAVE\u6587\u4ef6\u683c\u5f0f\u8bf4\u660e\u8868", "\n\u2022\t\u504f\u79fb\u5730\u5740\u5b57\u8282\u6570\u6570\u636e\u7c7b\u578b\u5185 \u5bb9 \u6587\u4ef6\u5934", "\n00H 4 Char \u201cRIFF\u201d\u6807\u5fd7 04H 4 int32 \u6587\u4ef6\u957f\u5ea6 08H 4 Char \u201cWAVE\u201d\u6807\u5fd7 0CH 4 Char \u201cfmt\u201d\u6807\u5fd7 10H 4 \u8fc7\u6e21\u5b57\u8282\uff08\u4e0d\u5b9a\uff09 14H 2 int16 \u683c\u5f0f\u7c7b\u522b 16H 2 int16 \u901a\u9053\u6570 18H 2 int16 \u91c7\u6837\u7387\uff08\u6bcf\u79d2\u6837\u672c\u6570\uff09\uff0c\u8868\u793a\u6bcf\u4e2a\u901a\u9053\u7684\u64ad\u653e\u901f\u5ea6 1CH 4 int32 \u6ce2\u5f62\u97f3\u9891\u6570\u636e\u4f20\u9001\u901f\u7387 20H 2 int16 \u6570\u636e\u5757\u7684\u8c03\u6574\u6570\uff08\u6309\u5b57\u8282\u7b97\u7684\uff09 22H 2 \u6bcf\u6837\u672c\u7684\u6570\u636e\u4f4d\u6570 24H 4 Char \u6570\u636e\u6807\u8bb0\u7b26\uff02data\uff02 28H 4 int32 \u8bed\u97f3\u6570\u636e\u7684\u957f\u5ea6", "\n\u3000\u3000\u89e3\u7b54\uff1a", "\u3000\u3000\u5c06WAV\u6587\u4ef6\u683c\u5f0f\u5b9a\u4e49\u4e3a\u7ed3\u6784\u4f53WAVEFORMAT\uff1a ", "typedef strUCt tagWaveFormat", "\n{", "\n\u3000char cRiffFlag[4];", "\n\u3000UIN32 nFileLen;", "\n\u3000char cWaveFlag[4];", "\n\u3000char cFmtFlag[4];", "\n\u3000char cTransition[4];", "\n\u3000UIN16 nFormatTag ;", "\n\u3000UIN16 nChannels;", "\n\u3000UIN16 nSamplesPerSec;", "\n\u3000UIN32 nAvgBytesperSec;", "\n\u3000UIN16 nBlockAlign;", "\n\u3000UIN16 nBitNumPerSample;", "\n\u3000char cDataFlag[4];", "\n\u3000UIN16 nAudioLength; ", "} WAVEFORMAT;", "\n\u3000\u3000\u5047\u8bbeWAV\u6587\u4ef6\u5185\u5bb9\u8bfb\u51fa\u540e\u5b58\u653e\u5728\u6307\u9488buffer\u5f00\u59cb\u7684\u5185\u5b58\u5355\u5143\u5185\uff0c\u5219\u5206\u6790\u6587\u4ef6\u683c\u5f0f\u7684\u4ee3\u7801\u5f88\u7b80\u5355\uff0c\u4e3a\uff1a", "WAVEFORMAT waveFormat;", "\nmemcpy( &waveFormat, buffer,sizeof( WAVEFORMAT ) );", "\n\u3000\u3000\u76f4\u63a5\u901a\u8fc7\u8bbf\u95eewaveFormat\u7684\u6210\u5458\uff0c\u5c31\u53ef\u4ee5\u83b7\u5f97\u7279\u5b9aWAV\u6587\u4ef6\u7684\u5404\u9879\u683c\u5f0f\u4fe1\u606f\u3002", "\u3000\u3000\u5256\u6790\uff1a", "\u3000\u3000\u8bd5\u98986\u8003\u67e5\u9762\u8bd5\u8005\u7ec4\u7ec7\u6570\u636e\u7ed3\u6784\u7684\u80fd\u529b\uff0c\u6709\u7ecf\u9a8c\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u8005\u5c06\u5c5e\u4e8e\u4e00\u4e2a\u6574\u4f53\u7684\u6570\u636e\u6210\u5458\u7ec4\u7ec7\u4e3a\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u5229\u7528\u6307\u9488\u7c7b\u578b\u8f6c\u6362\uff0c\u53ef\u4ee5\u5c06memcpy\u3001memset\u7b49\u51fd\u6570\u76f4\u63a5\u7528\u4e8e\u7ed3\u6784\u4f53\u5730\u5740\uff0c\u8fdb\u884c\u7ed3\u6784\u4f53\u7684\u6574\u4f53\u64cd\u4f5c\u3002 \u900f\u8fc7\u8fd9\u4e2a\u9898\u53ef\u4ee5\u770b\u51fa\u9762\u8bd5\u8005\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u7ecf\u9a8c\u662f\u5426\u4e30\u5bcc\u3002", "\u3000\u3000\u8bd5\u98987\uff1a\u7f16\u5199\u7c7bString\u7684\u6784\u9020\u51fd\u6570\u3001\u6790\u6784\u51fd\u6570\u548c\u8d4b\u503c\u51fd\u6570\uff0c\u5df2\u77e5\u7c7bString\u7684\u539f\u578b\u4e3a\uff1a", "class String", "\n{", "\n\u3000public:", "\n\u3000\u3000String(const char *str = NULL); // \u666e\u901a\u6784\u9020\u51fd\u6570", "\n\u3000\u3000String(const String &other); // \u62f7\u8d1d\u6784\u9020\u51fd\u6570", "\n\u3000\u3000~ String(void); // \u6790\u6784\u51fd\u6570", "\n\u3000\u3000String & operate =(const String &other); // \u8d4b\u503c\u51fd\u6570", "\n\u3000private:", "\n\u3000\u3000char *m_data; // \u7528\u4e8e\u4fdd\u5b58\u5b57\u7b26\u4e32", "\n};", "\n\u3000\u3000\u89e3\u7b54\uff1a", "//\u666e\u901a\u6784\u9020\u51fd\u6570", "String::String(const char *str)", "\n{", "\n\u3000if(str==NULL)", "\n\u3000{", "\n\u3000\u3000m_data = new char[1]; // \u5f97\u5206\u70b9\uff1a\u5bf9\u7a7a\u5b57\u7b26\u4e32\u81ea\u52a8\u7533\u8bf7\u5b58\u653e\u7ed3\u675f\u6807\u5fd7\u2019\\0\u2032\u7684\u7a7a", "\n\u3000\u3000//\u52a0\u5206\u70b9\uff1a\u5bf9m_data\u52a0NULL \u5224\u65ad", "\n\u3000\u3000*m_data = \u2018\\0\u2032;", "\n\u3000}", "\n\u3000else", "\n\u3000{", "\n\u3000\u3000int length = strlen(str);", "\n\u3000\u3000m_data = new char[length+1]; // \u82e5\u80fd\u52a0 NULL \u5224\u65ad\u5219\u66f4\u597d", "\n\u3000\u3000strcpy(m_data, str);", "\n\u3000}", "\n}", "// String\u7684\u6790\u6784\u51fd\u6570", "String::~String(void)", "\n{", "\n\u3000delete [] m_data; // \u6216delete m_data;", "\n}", "//\u62f7\u8d1d\u6784\u9020\u51fd\u6570", "String::String(const String &other) \u3000\u3000\u3000// \u5f97\u5206\u70b9\uff1a\u8f93\u5165\u53c2\u6570\u4e3aconst\u578b", "\n{", "\n\u3000int length = strlen(other.m_data);", "\n\u3000m_data = new char[length+1]; \u3000\u3000\u3000\u3000//\u52a0\u5206\u70b9\uff1a\u5bf9m_data\u52a0NULL \u5224\u65ad", "\n\u3000strcpy(m_data, other.m_data);", "\n}", "//\u8d4b\u503c\u51fd\u6570", "String & String::operate =(const String &other) // \u5f97\u5206\u70b9\uff1a\u8f93\u5165\u53c2\u6570\u4e3aconst\u578b", "\n{", "\n\u3000if(this == &other) \u3000\u3000//\u5f97\u5206\u70b9\uff1a\u68c0\u67e5\u81ea\u8d4b\u503c", "\n\u3000\u3000return *this;", "\n\u3000delete [] m_data; \u3000\u3000\u3000\u3000//\u5f97\u5206\u70b9\uff1a\u91ca\u653e\u539f\u6709\u7684\u5185\u5b58\u8d44\u6e90", "\n\u3000int length = strlen( other.m_data );", "\n\u3000m_data = new char[length+1]; \u3000//\u52a0\u5206\u70b9\uff1a\u5bf9m_data\u52a0NULL \u5224\u65ad", "\n\u3000strcpy( m_data, other.m_data );", "\n\u3000return *this; \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000//\u5f97\u5206\u70b9\uff1a\u8fd4\u56de\u672c\u5bf9\u8c61\u7684\u5f15\u7528", "\n}", "\n\u3000\u3000\u5256\u6790\uff1a", "\u3000\u3000\u80fd\u591f\u51c6\u786e\u65e0\u8bef\u5730\u7f16\u5199\u51faString\u7c7b\u7684\u6784\u9020\u51fd\u6570\u3001\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3001\u8d4b\u503c\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u7684\u9762\u8bd5\u8005\u81f3\u5c11\u5df2\u7ecf\u5177\u5907\u4e86C++\u57fa\u672c\u529f\u768460%\u4ee5\u4e0a\uff01", "\u3000\u3000\u5728\u8fd9\u4e2a\u7c7b\u4e2d\u5305\u62ec\u4e86\u6307\u9488\u7c7b\u6210\u5458\u53d8\u91cfm_data\uff0c\u5f53\u7c7b\u4e2d\u5305\u62ec\u6307\u9488\u7c7b\u6210\u5458\u53d8\u91cf\u65f6\uff0c\u4e00\u5b9a\u8981\u91cd\u8f7d\u5176\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3001\u8d4b\u503c\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\uff0c\u8fd9\u65e2\u662f\u5bf9C++\u7a0b\u5e8f\u5458\u7684\u57fa\u672c\u8981\u6c42\uff0c\u4e5f\u662f\u300aEffective\u3000C++\u300b\u4e2d\u7279\u522b\u5f3a\u8c03\u7684\u6761\u6b3e\u3002", "\u3000\u3000\u4ed4\u7ec6\u5b66\u4e60\u8fd9\u4e2a\u7c7b\uff0c\u7279\u522b\u6ce8\u610f\u52a0\u6ce8\u91ca\u7684\u5f97\u5206\u70b9\u548c\u52a0\u5206\u70b9\u7684\u610f\u4e49\uff0c\u8fd9\u6837\u5c31\u5177\u5907\u4e8660%\u4ee5\u4e0a\u7684C++\u57fa\u672c\u529f\uff01", "\u3000\u3000\u8bd5\u98988\uff1a\u8bf7\u8bf4\u51fastatic\u548cconst\u5173\u952e\u5b57\u5c3d\u53ef\u80fd\u591a\u7684\u4f5c\u7528", "\u3000\u3000\u89e3\u7b54\uff1a", "\u3000\u3000static\u5173\u952e\u5b57\u81f3\u5c11\u6709\u4e0b\u5217n\u4e2a\u4f5c\u7528\uff1a", "\u3000\u3000\uff081\uff09\u51fd\u6570\u4f53\u5185static\u53d8\u91cf\u7684\u4f5c\u7528\u8303\u56f4\u4e3a\u8be5\u51fd\u6570\u4f53\uff0c\u4e0d\u540c\u4e8eauto\u53d8\u91cf\uff0c\u8be5\u53d8\u91cf\u7684\u5185\u5b58\u53ea\u88ab\u5206\u914d\u4e00\u6b21\uff0c\u56e0\u6b64\u5176\u503c\u5728\u4e0b\u6b21\u8c03\u7528\u65f6\u4ecd\u7ef4\u6301\u4e0a\u6b21\u7684\u503c\uff1b", "\u3000\u3000\uff082\uff09\u5728\u6a21\u5757\u5185\u7684static\u5168\u5c40\u53d8\u91cf\u53ef\u4ee5\u88ab\u6a21\u5757\u5185\u6240\u7528\u51fd\u6570\u8bbf\u95ee\uff0c\u4f46\u4e0d\u80fd\u88ab\u6a21\u5757\u5916\u5176\u5b83\u51fd\u6570\u8bbf\u95ee\uff1b", "\u3000\u3000\uff083\uff09\u5728\u6a21\u5757\u5185\u7684static\u51fd\u6570\u53ea\u53ef\u88ab\u8fd9\u4e00\u6a21\u5757\u5185\u7684\u5176\u5b83\u51fd\u6570\u8c03\u7528\uff0c\u8fd9\u4e2a\u51fd\u6570\u7684\u4f7f\u7528\u8303\u56f4\u88ab\u9650\u5236\u5728\u58f0\u660e\u5b83\u7684\u6a21\u5757\u5185\uff1b", "\u3000\u3000\uff084\uff09\u5728\u7c7b\u4e2d\u7684static\u6210\u5458\u53d8\u91cf\u5c5e\u4e8e\u6574\u4e2a\u7c7b\u6240\u62e5\u6709\uff0c\u5bf9\u7c7b\u7684\u6240\u6709\u5bf9\u8c61\u53ea\u6709\u4e00\u4efd\u62f7\u8d1d\uff1b", "\u3000\u3000\uff085\uff09\u5728\u7c7b\u4e2d\u7684static\u6210\u5458\u51fd\u6570\u5c5e\u4e8e\u6574\u4e2a\u7c7b\u6240\u62e5\u6709\uff0c\u8fd9\u4e2a\u51fd\u6570\u4e0d\u63a5\u6536this\u6307\u9488\uff0c\u56e0\u800c\u53ea\u80fd\u8bbf\u95ee\u7c7b\u7684static\u6210\u5458\u53d8\u91cf\u3002 ", "\u3000\u3000const\u5173\u952e\u5b57\u81f3\u5c11\u6709\u4e0b\u5217n\u4e2a\u4f5c\u7528\uff1a", "\u3000\u3000\uff081\uff09\u6b32\u963b\u6b62\u4e00\u4e2a\u53d8\u91cf\u88ab\u6539\u53d8\uff0c\u53ef\u4ee5\u4f7f\u7528const\u5173\u952e\u5b57\u3002\u5728\u5b9a\u4e49\u8be5const\u53d8\u91cf\u65f6\uff0c\u901a\u5e38\u9700\u8981\u5bf9\u5b83\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u56e0\u4e3a\u4ee5\u540e\u5c31\u6ca1\u6709\u673a\u4f1a\u518d\u53bb\u6539\u53d8\u5b83\u4e86\uff1b", "\u3000\u3000\uff082\uff09\u5bf9\u6307\u9488\u6765\u8bf4\uff0c\u53ef\u4ee5\u6307\u5b9a\u6307\u9488\u672c\u8eab\u4e3aconst\uff0c\u4e5f\u53ef\u4ee5\u6307\u5b9a\u6307\u9488\u6240\u6307\u7684\u6570\u636e\u4e3aconst\uff0c\u6216\u4e8c\u8005\u540c\u65f6\u6307\u5b9a\u4e3aconst\uff1b", "\u3000\u3000\uff083\uff09\u5728\u4e00\u4e2a\u51fd\u6570\u58f0\u660e\u4e2d\uff0cconst\u53ef\u4ee5\u4fee\u9970\u5f62\u53c2\uff0c\u8868\u660e\u5b83\u662f\u4e00\u4e2a\u8f93\u5165\u53c2\u6570\uff0c\u5728\u51fd\u6570\u5185\u90e8\u4e0d\u80fd\u6539\u53d8\u5176\u503c\uff1b", "\u3000\u3000\uff084\uff09\u5bf9\u4e8e\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u82e5\u6307\u5b9a\u5176\u4e3aconst\u7c7b\u578b\uff0c\u5219\u8868\u660e\u5176\u662f\u4e00\u4e2a\u5e38\u51fd\u6570\uff0c\u4e0d\u80fd\u4fee\u6539\u7c7b\u7684\u6210\u5458\u53d8\u91cf\uff1b", "\u3000\u3000\uff085\uff09\u5bf9\u4e8e\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u6709\u65f6\u5019\u5fc5\u987b\u6307\u5b9a\u5176\u8fd4\u56de\u503c\u4e3aconst\u7c7b\u578b\uff0c\u4ee5\u4f7f\u5f97\u5176\u8fd4\u56de\u503c\u4e0d\u4e3a\u201c\u5de6\u503c\u201d\u3002\u4f8b\u5982\uff1a", "const classA operator*(const classA& a1,const classA& a2);", "\n\u3000\u3000operator*\u7684\u8fd4\u56de\u7ed3\u679c\u5fc5\u987b\u662f\u4e00\u4e2aconst\u5bf9\u8c61\u3002\u5982\u679c\u4e0d\u662f\uff0c\u8fd9\u6837\u7684\u53d8\u6001\u4ee3\u7801\u4e5f\u4e0d\u4f1a\u7f16\u8bd1\u51fa\u9519\uff1a", "classA a, b, c;", "\n(a * b) = c; // \u5bf9a*b\u7684\u7ed3\u679c\u8d4b\u503c", "\n\u3000\u3000\u64cd\u4f5c(a * b) = c\u663e\u7136\u4e0d\u7b26\u5408\u7f16\u7a0b\u8005\u7684\u521d\u8877\uff0c\u4e5f\u6ca1\u6709\u4efb\u4f55\u610f\u4e49\u3002", "\u3000\u3000\u5256\u6790\uff1a", "\u3000\u3000\u60ca\u8bb6\u5417\uff1f\u5c0f\u5c0f\u7684static\u548cconst\u5c45\u7136\u6709\u8fd9\u4e48\u591a\u529f\u80fd\uff0c\u6211\u4eec\u80fd\u56de\u7b54\u51e0\u4e2a\uff1f\u5982\u679c\u53ea\u80fd\u56de\u7b541~2\u4e2a\uff0c\u90a3\u8fd8\u771f\u5f97\u95ed\u5173\u518d\u597d\u597d\u4fee\u70bc\u4fee\u70bc\u3002", "\u3000\u3000\u8fd9\u4e2a\u9898\u53ef\u4ee5\u8003\u67e5\u9762\u8bd5\u8005\u5bf9\u7a0b\u5e8f\u8bbe\u8ba1\u77e5\u8bc6\u7684\u638c\u63e1\u7a0b\u5ea6\u662f\u521d\u7ea7\u3001\u4e2d\u7ea7\u8fd8\u662f\u6bd4\u8f83\u6df1\u5165\uff0c\u6ca1\u6709\u4e00\u5b9a\u7684\u77e5\u8bc6\u5e7f\u5ea6\u548c\u6df1\u5ea6\uff0c\u4e0d\u53ef\u80fd\u5bf9\u8fd9\u4e2a\u95ee\u9898\u7ed9\u51fa\u5168\u9762\u7684\u89e3\u7b54\u3002\u5927\u591a\u6570\u4eba\u53ea\u80fd\u56de\u7b54\u51fastatic\u548cconst\u5173\u952e\u5b57\u7684\u90e8\u5206\u529f\u80fd\u3002", "\u3000\u30004.\u6280\u5de7\u9898", "\u3000\u3000\u8bd5\u98981\uff1a\u8bf7\u5199\u4e00\u4e2aC\u51fd\u6570\uff0c\u82e5\u5904\u7406\u5668\u662fBig_endian\u7684\uff0c\u5219\u8fd4\u56de0\uff1b\u82e5\u662fLittle_endian\u7684\uff0c\u5219\u8fd4\u56de1", "\u3000\u3000\u89e3\u7b54\uff1a", "int checkCPU()", "\n{", "\n\u3000{", "\n\u3000\u3000union w", "\n\u3000\u3000{", "\n\u3000\u3000\u3000int a;", "\n\u3000\u3000\u3000char b;", "\n\u3000\u3000} c;", "\n\u3000\u3000c.a = 1;", "\n\u3000\u3000return (c.b == 1);", "\n\u3000}", "\n}", "\n\u3000\u3000\u5256\u6790\uff1a", "\u3000\u3000\u5d4c\u5165\u5f0f\u7cfb\u7edf\u5f00\u53d1\u8005\u5e94\u8be5\u5bf9Little-endian\u548cBig-endian\u6a21\u5f0f\u975e\u5e38\u4e86\u89e3\u3002\u91c7\u7528Little-endian\u6a21\u5f0f\u7684CPU\u5bf9\u64cd\u4f5c\u6570\u7684\u5b58\u653e\u65b9\u5f0f\u662f\u4ece\u4f4e\u5b57\u8282\u5230\u9ad8\u5b57\u8282\uff0c\u800cBig-endian\u6a21\u5f0f\u5bf9\u64cd\u4f5c\u6570\u7684\u5b58\u653e\u65b9\u5f0f\u662f\u4ece\u9ad8\u5b57\u8282\u5230\u4f4e\u5b57\u8282\u3002\u4f8b\u5982\uff0c16bit\u5bbd\u7684\u65700\u00d71234\u5728Little-endian\u6a21\u5f0fCPU\u5185\u5b58\u4e2d\u7684\u5b58\u653e\u65b9\u5f0f\uff08\u5047\u8bbe\u4ece\u5730\u57400\u00d74000\u5f00\u59cb\u5b58\u653e\uff09\u4e3a\uff1a", "\n\u5185\u5b58\u5730\u5740\u5b58\u653e\u5185\u5bb9 0\u00d74000 0\u00d734 0\u00d74001 0\u00d712", "\n\u3000\u3000\u800c\u5728Big-endian\u6a21\u5f0fCPU\u5185\u5b58\u4e2d\u7684\u5b58\u653e\u65b9\u5f0f\u5219\u4e3a\uff1a", "\u5185\u5b58\u5730\u5740\u5b58\u653e\u5185\u5bb9 0\u00d74000 0\u00d712 0\u00d74001 0\u00d734", "\n\u3000\u300032bit\u5bbd\u7684\u65700\u00d712345678\u5728Little-endian\u6a21\u5f0fCPU\u5185\u5b58\u4e2d\u7684\u5b58\u653e\u65b9\u5f0f\uff08\u5047\u8bbe\u4ece\u5730\u57400\u00d74000\u5f00\u59cb\u5b58\u653e\uff09\u4e3a\uff1a", "\u5185\u5b58\u5730\u5740\u5b58\u653e\u5185\u5bb9 0\u00d74000 0\u00d778 0\u00d74001 0\u00d756 0\u00d74002 0\u00d734 0\u00d74003 0\u00d712", "\n\u3000\u3000\u800c\u5728Big-endian\u6a21\u5f0fCPU\u5185\u5b58\u4e2d\u7684\u5b58\u653e\u65b9\u5f0f\u5219\u4e3a\uff1a", "\u5185\u5b58\u5730\u5740\u5b58\u653e\u5185\u5bb9 0\u00d74000 0\u00d712 0\u00d74001 0\u00d734 0\u00d74002 0\u00d756 0\u00d74003 0\u00d778", "\n\u3000\u3000\u8054\u5408\u4f53union\u7684\u5b58\u653e\u987a\u5e8f\u662f\u6240\u6709\u6210\u5458\u90fd\u4ece\u4f4e\u5730\u5740\u5f00\u59cb\u5b58\u653e\uff0c\u9762\u8bd5\u8005\u7684\u89e3\u7b54\u5229\u7528\u8be5\u7279\u6027\uff0c\u8f7b\u677e\u5730\u83b7\u5f97\u4e86CPU\u5bf9\u5185\u5b58\u91c7\u7528Little-endian\u8fd8\u662fBig-endian\u6a21\u5f0f\u8bfb\u5199\u3002\u5982\u679c\u8c01\u80fd\u5f53\u573a\u7ed9\u51fa\u8fd9\u4e2a\u89e3\u7b54\uff0c\u90a3\u7b80\u76f4\u5c31\u662f\u4e00\u4e2a\u5929\u624d\u7684\u7a0b\u5e8f\u5458\u3002", "\u3000\u3000\u8bd5\u98982\uff1a\u5199\u4e00\u4e2a\u51fd\u6570\u8fd4\u56de1+2+3+\u2026+n\u7684\u503c\uff08\u5047\u5b9a\u7ed3\u679c\u4e0d\u4f1a\u8d85\u8fc7\u957f\u6574\u578b\u53d8\u91cf\u7684\u8303\u56f4\uff09 ", "\u3000\u3000\u89e3\u7b54\uff1a", "int Sum( int n )", "\n{", "\n\u3000return ( (long)1 + n) * n / 2;\u3000\u3000//\u6216return (1l + n) * n / 2;", "\n}", "\n\u3000\u3000\u5256\u6790\uff1a", "\n\u3000", "\n\u3000\u3000\u5bf9\u4e8e\u8fd9\u4e2a\u9898\uff0c\u53ea\u80fd\u8bf4\uff0c\u4e5f\u8bb8\u6700\u7b80\u5355\u7684\u7b54\u6848\u5c31\u662f\u6700\u597d\u7684\u7b54\u6848\u3002\u4e0b\u9762\u7684\u89e3\u7b54\uff0c\u6216\u8005\u57fa\u4e8e\u4e0b\u9762\u7684\u89e3\u7b54\u601d\u8def\u53bb\u4f18\u5316\uff0c\u4e0d\u7ba1\u600e\u4e48\u201c\u6298\u817e\u201d\uff0c\u5176\u6548\u7387\u4e5f\u4e0d\u53ef\u80fd\u4e0e\u76f4\u63a5return ( 1 l + n ) * n / 2\u76f8\u6bd4\uff01 ", "int Sum( int n )", "\n{", "\n\u3000long sum = 0;", "\n\u3000for( int i=1; i\n\u3000{", "\n\u3000\u3000sum += i;", "\n\u3000}", "\n\u3000return sum;", "\n}", "\n\u3000\u3000\u6240\u4ee5\u7a0b\u5e8f\u5458\u4eec\u9700\u8981\u654f\u611f\u5730\u5c06\u6570\u5b66\u7b49\u77e5\u8bc6\u7528\u5728\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d"], "title": "C/C++ \u7a0b\u5e8f\u8bbe\u8ba1\u5458\u5e94\u8058\u5e38\u89c1\u9762\u8bd5\u8bd5\u9898\u6df1\u5165\u5256\u6790"},
{"contents": ["\n\u3000\u3000\u5fae\u8f6f\u7814\u7a76\u9662\u662f\u4e00\u4e2a\u542c\u8d77\u6765\u5c31\u725bB\u7684\u5730\u65b9\u554a\uff0c\u53cd\u6b63\u6211\u662f\u8fdb\u4e0d\u53bb\uff0c\u4e0d\u8fc7\u4e0d\u59a8\u788d\u6211\u770b\u770b\u4ed6\u7684\u7b14\u8bd5\u9898\u5230\u5e95\u662f\u600e\u4e48\u6837\u7684\u3002\u4e0b\u9762\u56db\u9053\u9898\u5c31\u662f\u5fae\u8f6f\u7814\u7a76\u9662\u7684\u7b14\u8bd5\u9898\u76ee\uff0c\u9898\u540e\u9644\u6709\u6211\u7684\u89e3\u7b54\u3002", "\n\u3000\u3000\u5fae\u8f6f\u7814\u7a76\u9662\uff08\u4e9a\u6d32\uff09\u7684\u7f51\u5740\u662f\uff1ahttp://research.microsoft.com/asia/", "\n\u3000\u3000\u5982\u679c\u60a8\u60f3\u8f6c\u8f7d\u672c\u6587\uff0c\u522b\u5220\u6211\u7684\u4fe1\u606f\u54e6\uff0c\u4e5f\u7b97\u5e2e\u6211\u5ba3\u4f20\u4e0b\u6211\u7684\u7f51\u7ad9\u561b\u3002", "1\uff0e\u6539\u9519", "\n#include ", "void main (int argc, char* argv[])", "\n{", "\n  CBuffer buffer1;", "\n  buffer1.SaveString(\u201cMicrosoft\u201d);", "\n  printf(buffer1.GetBuffer());", "\n}", "\u7b54\uff1a\u6539\u6b63\u540e", "\n\u4e3b\u8981\u6539\u6b63SaveString\u51fd\u6570", "\n\u5c06", "\nvoid SaveString(const char* pText) const", "\n{", "\nstrcpy(m_pBuffer, pText);", "\n}", "\n\u6539\u4e3a", "\nvoid SaveString(const char* pText) \uff081\uff09", "\n{", "\nif(m_pBuffer!=NULL)", "\nFree();", "\nAllocte(strlen(pText)+1); \uff082\uff09", "\nstrcpy(m_pBuffer, pText);", "\n}", "\n\u539f\u56e0\uff1a", "\n\uff081\uff09 const\u6210\u5458\u51fd\u6570\u8868\u793a\u4e0d\u4f1a\u4fee\u6539\u6570\u636e\u6210\u5458\uff0c\u800cSaveString\u505a\u4e0d\u5230\uff0c\u53bb\u6389const\u58f0\u660e", "\n\uff082\uff09 m_pBuffer\u6307\u5411NULL\uff0c\u5fc5\u987b\u7528Allocte\u5206\u914d\u7a7a\u95f4\u624d\u80fd\u8d4b\u503c\u3002", "\n\uff083\uff09 \u53e6\u5916\u9700\u8981\u5c06Allocte\u6210\u5458\u51fd\u6570\u58f0\u660e\u4e3a\u79c1\u6709\u6210\u5458\u51fd\u6570\u66f4\u7b26\u5408\u5b9e\u9645", "2.\u4e0b\u6765\u7a0b\u5e8f\u60f3\u6253\u5370\u201cWelcome MSR Asia\u201d\uff0c\u6539\u6b63\u9519\u8bef", "\n#include ", "\u7b54\uff1a\u6539\u6b63\u540e\u4e3a", "\n#include ", "\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d", "\n\u63d2\u64ad\u5e7f\u544a\u54af\uff1a\u7248\u6743\u6240\u6709\uff1a\u6731\u79d1 \u6b22\u8fce\u5149\u4e34\u6211\u7684\u7f51\u7ad9\uff1awww.goodsoft.cn\uff0c\u5404\u4f4d\u8f6c\u8d34\u522b\u5220\uff0c\u5ba3\u4f20\u4e0b\u561b", "\n\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d", "3\uff0e\u5199\u51fa\u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c", "\n#include ", "class B: public A", "\n{", "\npublic:", "\n  void FuncA()", "\n  {", "\n    A::FuncA();", "\n    printf(\u201cFuncAB called\\n\u201d);", "\n  }", "\n  virtual void FuncB()", "\n  {", "\n    printf(\u201cFuncBB called\\n\u201d);", "\n  }", "\n};", "void main(void)", "\n{", "\n  B b;", "\n  A *pa;", "\n  pa=&b;", "\n  A *pa2=new A;", "\n  b.FuncA();      \uff081\uff09", "\n  b.FuncB();      \uff082\uff09", "\n        pa->FuncA();      \uff083\uff09", "\n  pa->FuncB();      \uff084\uff09", "\n  pa2->FuncA();      \uff085\uff09", "\n  pa2->FuncB();", "\n  delete pa2;", "\n}", "\n\u7b54\uff1a", "\n1\uff0eb.FuncA(); \u8f93\u51fa", "\nFuncA called", "\nFuncAB called", "\n2\uff0eb.FuncB();\u8f93\u51fa", "\nFuncBB called", "\n\u4e0a\u4e24\u8005\u597d\u7406\u89e3\uff0c\u76f4\u63a5\u8c03\u7528\u7c7bB\u7684\u76f8\u5e94\u6210\u5458\u51fd\u6570", "\n3\uff0epa->FuncA();\u8f93\u51fa", "\nFuncA called \u8c03\u7528\u7c7bA\u7684FuncA()", "\n4\uff0epa->FuncB();\u8f93\u51fa", "\nFuncBB called\u8c03\u7528\u7c7bB\u7684FuncB()\uff0c\u539f\u56e0\u662fC++\u7684\u52a8\u6001\u51b3\u8bae\u673a\u5236\uff0c\u5f53\u57fa\u7c7b\u51fd\u6570\u58f0\u660e\u4e3avirtual\u65f6\uff0c\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684\u57fa\u7c7b\u6307\u9488\u6765\u8c03\u7528\u8be5\u51fd\u6570\u4f1a\u9009\u62e9\u6d3e\u751f\u7c7b\u7684\u5b9e\u73b0\uff0c\u9664\u975e\u6d3e\u751f\u7c7b\u6ca1\u6709\u624d\u8c03\u7528\u57fa\u7c7b\u7684\u865a\u51fd\u6570\u3002\u8fd8\u6709\u4e00\u70b9\u6ce8\u610f\u7684\u662f\uff1a\u6307\u5411\u57fa\u7c7b\u7c7b\u578b\u7684\u6307\u9488\u53ef\u4ee5\u6307\u5411\u57fa\u7c7b\u5bf9\u8c61\u4e5f\u53ef\u4ee5\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff0c\u5982pa=&b;", "\n5. pa2->FuncA();", "\npa2->FuncB();\u8f93\u51fa", "\nFuncA called", "\nFuncB called", "\n\u8fd9\u4e5f\u597d\u7406\u89e3\uff0c\u76f4\u63a5\u8c03\u7528\u7c7bA\u7684\u76f8\u5e94\u6210\u5458\u51fd\u6570", "4\uff0eIn the main() function, after ModifyString(text) is called, what\u2019s the value of \u2018text\u2019?", "\n#include ", "void ModifyString(char* pText)", "\n{", "\n  char* p1=pText;", "\n  char* p2=p1;", "\n  while(*p1!=\u2019\\0\u2032)", "\n  {", "\n    int count=FindSubString(p1);", "\n    if(count>0)", "\n    {", "\n      *p2++=*p1;", "\n      sprintf(p2, \u201c%I\u201d, count);", "\n      while(*p2!= \u2018\\0\u2032)", "\n      {", "\n        p2++;", "\n      }", "\n      p1+=count+count+1;", "\n    }", "\n    else", "\n    {", "\n      *p2++=*p1++;", "\n    }", "\n  }", "\n}", "\nvoid main(void)", "\n{", "\n  char text[32]=\u201dXYBCDCBABABA\u201d;", "\n  ModifyString(text);", "\n  printf(text);", "\n}", "\n\u7b54\uff1aXYBCDCBAIBAA", "\nFindSubString\u8fd4\u56de\u8fde\u7eed\u51fa\u73b0\u5b57\u6bcd\u589e\u52a0\u53c8\u9012\u51cf\u7684\u4e2a\u6570\uff0c\u4e14\u589e\u52a0\u4e2a\u6570\u521a\u597d\u7b49\u4e8e\u9012\u51cf\u4e2a\u6570\u3002\u5982ABA\u8fd4\u56de1\uff0cABAB\u8fd4\u56de1\uff0cABCBA\u8fd4\u56de2\uff0cBCBA\u8fd4\u56de0\u3002", "\nsprintf(p2, \u201c%I\u201d, count);\u5c06*p2\uff1d\u2019I'\uff0c*(p2+1)=\u2019\\0\u2032\u3002", "(\u8f6c\u8f7d\u8005\u6ce8\uff1a\u5bf9\u539f\u6587\u6709\u90e8\u5206\u4fee\u6539)"], "title": "C++\u7b14\u8bd5\u9898\uff08\u4e03\uff09"},
{"contents": ["\u4e2d\u78ca\u7814\u53d1\u4e2d\u5fc3\u662f\u4e2d\u6021\u6570\u5bbd\u79d1\u6280\uff08\u82cf\u5dde\uff09\u6709\u9650\u516c\u53f8\u6295\u8d44\u7684\u7814\u53d1\u673a\u6784\uff0c\u8be5\u516c\u53f8\u4e3b\u8981\u7740\u91cd\u4e8e\u5404\u79cd\u7f51\u7edc\u670d\u52a1\u5668\u7684\u7814\u7a76\u5f00\u53d1\u3002", "\n\u516c\u53f8\u7f51\u5740\uff1ahttp://www.dwnet.com.cn/", "\n\u3000\u3000\u8be5\u516c\u53f82005\u5e7410\u6708\u5e95\u6765\u534e\u4e2d\u79d1\u6280\u5927\u5b66\u62db\u8058\uff0c\u4e0b\u9762\u662f\u4ed6\u8fd9\u6b21\u7684\u7b14\u8bd5\u9898\u548c\u6211\u505a\u7684\u7b54\u6848\uff0c\u5f53\u65f6\u6211\u6ca1\u6709\u53bb\u53c2\u52a0\u8003\u8bd5\uff0c\u9898\u76ee\u662f\u767d\u4e91\u9ec4\u9e64BBS\u4e0a\u6709\u4eba\u8d34\u51fa\u6765\u7684\u3002", "1\u3001\u8bf7\u7528\u6807\u51c6C\u8bed\u8a00\u5b9e\u73b0\u4e00\u4e2a\u53cc\u5411\u5faa\u73af\u94fe\u8868\u7684\u67e5\u627e\u4e0e\u5220\u9664\u3002", "\ntypedef struct doublecyclelink{", "\nint key;", "\nstruct doublecyclelink *prev;", "\nstruct doublecyclelink *next;", "\n}DoubleCycleLinkT;", "\nDoubleCycleLinkT *findKey(DoubleCycleLinkT *link,int key);", "\n\u904d\u5386\u6574\u4e2a\u53cc\u5411\u5faa\u73af\u94fe\u8868\uff0c\u5c06\u7b2c\u4e00\u4e2a\u4e0ekey\u503c\u76f8\u540c\u7684\u7ed3\u70b9\u79fb\u51fa\u94fe\u8868\uff0c\u5e76\u8fd4\u56de\u3002", "\n\u82e5\u6ca1\u6709\u627e\u5230\u5219\u8fd4\u56deNULL\u3002", "\u7b54\uff1a", "\n\u51fd\u6570\u4e3a", "\nDoubleCycleLinkT *findKey(DoubleCycleLinkT *link,int key)", "\n{", "\n  DoubleCycleLinkT *p;", "\n  p=link->next;", "\n  while (p->next!=link) // \u94fe\u8868\u7ed3\u5c3e", "\n  {", "\n    if (p->key==key)  // \u67e5\u627e\u5230key\u503c\u76f8\u540c,\u5220\u9664\u8be5\u8282\u70b9,\u5e76\u8fd4\u56de", "\n    {", "\n      p->prev->next=p->next;", "\n      p->next->prev=p->prev;", "\n      free(p);", "\n      return link;", "\n    }", "\n    else", "\n      p=p->next;  // \u5426\u5219\u67e5\u627e\u4e0b\u4e00\u8282\u70b9", "\n  }", "\n  if (p->next == link)  return NULL; //\u6ca1\u627e\u5230\uff0c\u8fd4\u56deNULL  ", "}", "2\u3001\u8bf7\u7528\u7a0b\u5e8f\u6253\u5370\u4e0b\u5217\u56fe\u578b", "\n       *", "\n     * *", "\n   * * *", "\n  * * * *", "\n* * * * *", "\nvoid printTriangle(const unsigned char line);", "\n\u8f93\u5165\u884c\u6570\uff0c\u6253\u5370\u4e09\u89d2\u5f62\u3002", "\n\u7b54\uff1a", "\n\u51fd\u6570\u4e3a", "\nvoid printTriangle(const unsigned char line)", "\n{", "\n  for(int i=1;i\n  {", "\n    for(int j=0;j\n    {", "\n      if (i%2==1)      // \u5947\u6570\u884c", "\n      {", "\n        if (j%2==(line-1)%2 &&  j>=(line-1-i/2*2) && j\n          printf(\"*\");// \u5217\u4ece0\u8ba1\u6570", "\n        else", "\n          printf(\" \");", "\n      }", "\n      else", "\n        if (j%2==(line)%2 && j>=(line-2-(i/2-1)*2) && j\n                printf(\u201c*\u201d);", "\n        else", "\n          printf(\u201d \u201c);", "    }", "\n    printf(\u201c\\n\u201d);", "\n  }", "\n}", "3\u3001\u8bf7\u7528\u6807\u51c6C\u8bed\u8a00\u5b9e\u73b0\u4e0b\u5217\u6807\u51c6\u5e93\u51fd\u6570\uff0c\u8bbe\u8ba1\u4e2d\u4e0d\u5f97\u4f7f\u7528\u5176\u4ed6\u5e93\u51fd\u6570\u3002", "\nchar *strstr(char *str1,char *str2);", "\n\u5728\u5b57\u7b26\u4e32str1\u4e2d\uff0c\u5bfb\u627e\u5b57\u4e32str2\uff0c\u82e5\u627e\u5230\u8fd4\u56de\u627e\u5230\u7684\u4f4d\u7f6e\uff0c\u5426\u5219\u8fd4\u56deNULL\u3002", "\n\u7b54\uff1a", "\n\u51fd\u6570\u4e3a", "\nchar * strstr ( const char * str1, const char * str2 )", "\n{", "\n        char *cp = (char *) str1;", "\n        char *s1, *s2;", "\n        if ( !*str2 )", "\n            return((char *)str1);", "\n        while (*cp)", "\n        {", "\n                s1 = cp;", "\n                s2 = (char *) str2;", "\n                while ( *s1 && *s2 && !(*s1-*s2) )", "\n                        s1++, s2++;", "\n                if (!*s2)", "\n                        return(cp);", "\n                cp++;", "\n        }", "\n        return(NULL);", "\n}", "4\u3001\u8bf7\u95ee\u8fd9\u6bb5\u4ee3\u7801\u5faa\u73af\u591a\u5c11\u6b21\uff1f", "\nmain()", "\n{", "\nchar i=0;", "\n  while(i\n   {", "\n     if(i\n        if(i==5)break;", "\n          i++;", "\n  }", "\n   \u2026\u2026", "\n}", "\n\u7b54\uff1a\u662f\u4e2a\u6b7b\u5faa\u73af\uff0c\u65e0\u9650\u6b21\u554a\uff0c\u65e0\u9650\u6b21\u3002", "\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d", "\n\u54c8\u54c8\uff0c\u63d2\u64ad\u5e7f\u544a\u5566\uff1a\u7248\u6743\u6240\u6709\uff1a\u6731\u79d1 \u6b22\u8fce\u5149\u4e34\u6211\u7684\u7f51\u7ad9\uff1awww.goodsoft.cn\uff0c\u5404\u4f4d\u8f6c\u8d34\u522b\u5220\uff0c\u52b3\u52a8\u6210\u679c\u554a", "\n\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d", "5\u3001\u7528\u9884\u5904\u7406\u6307\u4ee4#define\u58f0\u660e\u4e00\u4e2a\u5e38\u6570\uff0c\u7528\u4ee5\u8868\u660e1\u5e74\u4e2d\u6709\u591a\u5c11\u79d2\uff08\u5ffd\u7565\u95f0\u5e74\u95ee\u9898\uff09", "\n\u7b54\uff1a #define MIN (365*24*60*60)", "6\u3001\u8bf7\u95ee\u8fd0\u884cmain\u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\nmain()", "\n{", "\nint x=10,y=3;", "\nprintf(\u201c%d\\n\u201d,y=x/y);", "\n}", "\n\u7b54\uff1a\u7ed3\u679c\u4e3a3\uff0c\u8003\u5bdf\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362", "7\u3001\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "\n#define P 3", "\nint F(int x)", "\n{", "\nreturn(P*x*x);", "\n}", "\nmain()", "\n{", "\nprintf(\u201c%d\\n\u201d,F(3+5));", "\n}", "\n\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u679c\u4e3a\uff1a\uff1f", "\n\u7b54\uff1a\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f192\uff0c\u6b64\u9898\u4e3a\u6545\u610f\u6df7\u6dc6\u6982\u5ff5\uff0c\u76f4\u63a5\u7528F(8)\u8ba1\u7b97\u5f97\u7b54\u6848\uff0c\u800c\u975e\u8ba1\u7b973*3+5*3+5;", "8\u3001\u82e5int\u53602\u4e2a\u5b57\u8282\uff0cchar\u53601\u4e2a\u5b57\u8282\uff0cfloat\u53604\u4e2a\u5b57\u8282\uff0c\u5219\u5b9a\u4e49\u5982\u4e0b\uff1a", "\nstruct stu", "\n{", "\nunion{", "\n  char bj[5];", "\n  int bh[2];", "\n}class;", "\nchar xm[8];", "\nfloat cj;", "\n}xc;", "\n\u5219sizeof(xc)\u7684\u503c\u4e3a?", "\n\u7b54\uff1a20\uff0c\u4e00\u9053\u8fb9\u754c\u5bf9\u9f50\u7684\u9898\u76ee\uff0c\u5f88\u591a\u5730\u65b9\u6709\u8bb2\uff0c\u6b64\u5904\u6ce8\u610f\u4e0b\u8054\u5408\u7684\u5185\u5b58\u5927\u5c0f\u53d6\u51b3\u4e8e\u5176\u4e2d\u5b57\u8282\u6570\u6700\u591a\u7684\u6210\u5458\u5c31\u53ef\u3002", "9\u3001\u8bf7\u95eetraceroute\u7684\u5de5\u4f5c\u539f\u7406", "\n\u7b54\uff1a", "\n\u4e3b\u673a\u5148\u53d1\u51fa\u4e00\u4e2aTTL\uff08Time To Live\uff0c\u751f\u5b58\u65f6\u95f4\uff09\u4e3a1\u7684ICMP\u6570\u636e\u5305\u3002\u8fd9\u4e2a\u6570\u636e\u5305\u5230\u8fbe\u4e00\u4e2a\u8def\u7531\u5668\u540e\uff0c\u8def\u7531\u5668\u5c06TTL\u51cf1\u52300\uff0c\u5e76\u5c06\u5e76\u9001\u56de\u4e00\u4e2a\u300cICMP time exceeded\u300d\u6d88\u606f\uff0c\u4ee5\u8bf4\u660e\u8fd9\u4e2a\u6570\u636e\u5305\u4e0d\u80fd\u7ee7\u7eed\u5411\u524d\u4f20\u9001\uff0c\u56e0\u4e3a\u5176TTL\u5df2\u7ecf\u8fc7\u671f\u4e86\u3002traceroute \u6536\u5230\u8fd9\u4e2a\u6d88\u606f\u540e\uff0c\u4fbf\u77e5\u9053\u8fd9\u4e2a\u8def\u7531\u5668\u5b58\u5728\u4e8e\u8fd9\u4e2a\u8def\u5f84\u4e0a\uff0c\u63a5\u7740traceroute \u518d\u9001\u51fa\u53e6\u4e00\u4e2aTTL\u662f2 \u7684\u6570\u636e\u5305\uff0c\u53d1\u73b0\u7b2c2 \u4e2a\u8def\u7531\u5668\u2026\u2026\u8fd9\u4e2a\u91cd\u590d\u7684\u52a8\u4f5c\u4e00\u76f4\u6301\u7eed\u5230\u67d0\u4e2adatagram \u62b5\u8fbe\u76ee\u7684\u5730\u3002 "], "title": "C++\u7b14\u8bd5\u9898\uff08\u4e94\uff09"},
{"contents": ["\u6469\u6258\u7f57\u62c9\u53f7\u79f0\u767e\u5f3a\u4f01\u4e1a\uff0c\u901a\u8baf\u884c\u4e1a\u9886\u5bfc\u8005\uff0c\u4e0b\u9762\u662f\u5b832006\u5e74\u62db\u8058\u51fa\u7684\u8f6f\u4ef6\u7c7b\u7b14\u8bd5\u9898\u548c\u6211\u505a\u7684\u89e3\u7b54\uff0c\u4f9b\u53c2\u8003\u3002", "\n\u6469\u6258\u7f57\u62c9\uff08\u4e2d\u56fd\uff09\u7f51\u5740\uff1ahttp://www.motorola.com.cn", "1.\u6253\u5370\u5982\u4e0b\u56fe\u6848\uff0c\u517119\u884c\uff0c\u53ea\u80fd\u6709\u4e00\u4e2afor\u5faa\u73af\uff08\u9898\u76ee\u5df2\u7ecf\u63d0\u4f9b\uff09", "\n         \ue466\ue466*\ue466\ue466 \ue466\ue466", "\n        \ue466\ue466***\ue466\ue466 \ue466\ue466", "\n       \ue466\ue466*****\ue466\ue466 \ue466\ue466", "\n      \ue466\ue466*******\ue466\ue466 \ue466\ue466", "\n     \ue466\ue466*********\ue466\ue466 \ue466\ue466", "\n    \ue466\ue466***********", "\n   \ue466\ue466*************\ue466\ue466 \ue466\ue466", "\n  \ue466\ue466***************\ue466\ue466 \ue466\ue466", "\n  \ue466  *****************\ue466\ue466 \ue466\ue466", "\n\ue466\ue466*******************\ue466\ue466\ue466\ue466", "\n  \ue466\ue466*****************\ue466\ue466 \ue466\ue466", "\n   \ue466\ue466***************\ue466\ue466 \ue466\ue466", "\n    \ue466\ue466*************\ue466\ue466 \ue466\ue466", "\n     \ue466\ue466***********\ue466\ue466 \ue466\ue466", "\n      \ue466\ue466*********\ue466\ue466 \ue466\ue466", "\n       \ue466\ue466*******\ue466\ue466 \ue466\ue466", "\n        \ue466\ue466*****\ue466\ue466 \ue466\ue466", "\n        \ue466\ue466***\ue466\ue466 \ue466\ue466", "\n         \ue466\ue466*\ue466\ue466 \ue466\ue466", "\nfor(i=0;i\n{", "}", "\n\u7b54\uff1a", "\n#include ", "2.", "\nvoid fun(int x)", "\n{", "\n    if(x/2>0)fun(x/2);", "\n    printf(\u201c%d\u201d,x);", "\n}", "\n\u6c42fun(10)\u7684\u8f93\u51fa\u7ed3\u679c", "\n\u7b54\uff1a\u4f9d\u6b21\u8f93\u51fafun(1)\uff0cfun(2)\uff0cfun(5)\uff0cfun(10)\uff0c\u5f97\u5230\u7ed3\u679c12510", "3.", "\n#define f1(n) (n)*(n)", "\nint i=5;", "\nint k=0;", "\nk=f1(i++);", "\nprintf(\u201c%d %d\u201d,i,k);", "\n\u8f93\u51fa\u7ed3\u679c\uff1a", "\n\u7b54\uff1a7 25", "4.\u4e0b\u9762\u90a3\u4e2afor\u5faa\u73af\u662f\u65e0\u9650\u5faa\u73af", "\nfor(int i=010;i==10;i+=0)", "\nfor(int i=10;(i++^\u2013i)==0;i+=0)", "\n\u8fd8\u6709\u51e0\u4e2a\u5fd8\u4e86", "\n\u7b54\uff1a", "\n\u7b2c\u4e00\u4e0d\u662f\uff0c\u56e0\u4e3a010\u8868\u793a8\u8fdb\u5236\uff0ci\uff1d8\uff1b", "\n\u7b2c\u4e8c\u662f\uff0c\u56e0\u4e3ai++^\u2013i\u8868\u793a\u6570\u5b579\u4e0e9\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u786e\u5b9e\u4e3a0", "\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d", "\n\u55ef\uff0c\u63d2\u64ad\u5e7f\u544a\u5566\uff1a\u7248\u6743\u6240\u6709\uff1a\u6731\u79d1 \u6b22\u8fce\u5149\u4e34\u6211\u7684\u7f51\u7ad9\uff1awww.goodsoft.cn\uff0c\u5404\u4f4d\u8f6c\u8d34\u522b\u5220\uff0c\u52b3\u52a8\u6210\u679c\u554a", "\n\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d", "\n5.Email relay \u548cEmail access\u5206\u522b\u7528\u4e86\u4ec0\u4e48\u534f\u8bae\uff1f\uff08\u5176\u4ed6\u8fd8\u6709\u5f88\u591a\uff0c\u7565\uff09", "\n\u7b54\uff1aSMTP,POP3", "6.stack data \uff08\u6808\uff09\u5b58\u5728\u4e8e", "\nA.rom, B .flash C .eeprom D.ram E .none of the above", "\n\u7b54\uff1aD.ram\u3002\u8fd9\u9898\u7a0d\u5fae\u6d89\u53ca\u5230\u4e00\u70b9\u786c\u4ef6\u77e5\u8bc6\uff0cROM\u7684\u5168\u79f0\u662fRead Only Memory\uff0c\u5373\u53ea\u8bfb\u5b58\u50a8\u5668\uff0cflash \uff0ceeprom\u90fd\u662fROM\u5bb6\u65cf\u7684\u4e00\u5458\uff0cRAM\u662fRandom Access Memory\u7684\u7b80\u79f0\uff0c\u610f\u4e3a\u968f\u673a\u5b58\u53d6\u5b58\u50a8\u5668\uff0c\u4e5f\u5c31\u662f\u5185\u5b58\u4e86\u3002\u4e0d\u7ba1\u662f\u5806\u8fd8\u662f\u6808\u90fd\u662f\u653e\u5728\u5185\u5b58\u91cc\u7684\u3002", "7.", "\nint i;", "\nint x=0\u00d712345678;", "\nunsigned char *p=(unsigned char *)&x;", "\nfor(i=0;i", "\nprintf(\u201c%2x\u201d,*(p+i));", "\n\u572880x86pc\u673a\u5668\u4e0a\u8fd0\u884c\u7ed3\u679c\uff1f", "\n\u7b54\uff1ax\u5728PC\u673a\u4e0a\u7684\u5185\u5b58\u5b58\u653e\u987a\u5e8f\u4e3a78 56 34 12\uff0c\u9ad8\u5b57\u8282\u5728\u524d\uff0c\u4f4e\u5b57\u8282\u5728\u540e\uff0c\u56e0\u6b64\u8f93\u51fa78563412\uff08\u53c2\u89c1big endian \u548clittle endian\uff09", "\nSun Sparc Unix\u4e0a\u8fd0\u884c\u7ed3\u679c\uff1f", "\n\u7b54\uff1a\u8bf4\u5b9e\u8bdd\uff0c\u6211\u4e0d\u77e5\u9053", "8.", "\nchar a[2][2][3]={{{1,6,3},{5,4,15}},{{3,5,33},{23,12,7}} };", "\nfor(int i=0;i\nprintf(\u201c%d \u201c,_______);", "\n\u5728\u7a7a\u683c\u5904\u586b\u4e0a\u5408\u9002\u7684\u8bed\u53e5\uff0c\u987a\u5e8f\u6253\u5370\u51faa\u4e2d\u7684\u6570\u5b57", "\n\u7b54\uff1a*(*(*(a+i/6)+(i/3%2))+i%3)", "\n\u8fd9\u9898\u4e3b\u8981\u662f\u8981\u5c06\u8f93\u51fa\u7684\u5e8f\u53f7\u4f9d\u6b21\u5199\u51fa\u4e00\u4e9b\uff0c\u5982000,001,002,010,011,012,100,101\u2026\u7136\u540e\u627e\u5e8f\u53f7\u53d8\u5316\u89c4\u5f8b", "9.", "\nvoid fun(char *a,char *b)", "\n{", "\n    a=b;", "\n    (*a)++;", "\n}", "\nvoid main()", "\n{", "\n    char s1=\u2019A',s2=\u2019a';", "\n    char *p1=&s1;", "\n    char *p2=&s2;", "\n    fun(p1,p2);", "\n    printf(\u201c%c%c\u201d,s1,s2);", "\n}", "\n\u8f93\u51fa\u7ed3\u679c\uff1a\uff1f", "\n\u7b54\uff1a\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1aAb\uff0c\u56e0\u4e3a\u5728fun\u51fd\u6570\u91cc\uff0c\u6307\u9488a\u6307\u5411s2\u5b58\u50a8\u533a(a=b),\u63a5\u7740\u8ba9s2\u5b58\u50a8\u533a\u7684\u503c\u52a01\u5f97\u2019b\u2019 ((*a)++),\u6240\u4ee5s2\u7b49\u4e8e\u2019b'\uff0cs1\u4e0d\u53d8\u3002", "10.\u5199\u4e00\u4e2astrstr()\u51fd\u6570", "\n\u7b54\uff1a\u4e2d\u78ca\u7b14\u8bd5\u9898\u7b2c\u4e09\u9898\u4e5f\u662f\u8fd9\u4e2a\uff0c\u5c31\u4e0d\u591a\u5199\u4e86\uff0c\u53ef\u7ffb\u5230\u4e0b\u7bc7\u770b\u89e3\u7b54\u3002\uff08\u53c2\u89c1C\uff0b\uff0b\u7b14\u8bd5\u9898\u4e94\uff09", "\n\uff08\u8f6c\u8f7d\u8005\u6ce8\uff1a\u5bf9\u539f\u6587\u6709\u90e8\u5206\u4fee\u6539\uff09"], "title": "C++\u7b14\u8bd5\u9898\uff08\u516d\uff09"},
{"contents": ["\u534e\u4e3a\u4ece\u4e8b\u901a\u4fe1\u7f51\u7edc\u6280\u672f\u4e0e\u4ea7\u54c1\u7684\u7814\u7a76\u3001\u5f00\u53d1\u3001\u751f\u4ea7\u4e0e\u9500\u552e\uff0c\u662f\u4e2d\u56fd\u7535\u4fe1\u5e02\u573a\u7684\u4e3b\u8981\u4f9b\u5e94\u5546\u4e4b\u4e00\uff0c\u5e76\u5df2\u6210\u529f\u8fdb\u5165\u5168\u7403\u7535\u4fe1\u5e02\u573a\u3002\u6bcf\u5e74\u534e\u4e3a\u90fd\u8981\u5728\u5404\u5927\u9ad8\u6821\u62db\u8058\u5927\u6279\u7684\u5e94\u754c\u751f\uff0c\u7279\u522b\u662f\u534e\u4e2d\u79d1\u6280\u5927\u5b66\u3002\u516c\u53f8\u7f51\u5740\u662f\uff1ahttp://www.huawei.com", "\n\u3000\u3000\u4e0b\u9762\u636e\u8bf4\u662f\u534e\u4e3a\u516c\u53f8\u7684\u7b14\u8bd5\u9898\uff0c\u5176\u5b9e\u6211\u60f3\u5b83\u4e00\u6b21\u7b14\u8bd5\u4e0d\u53ef\u80fd\u51fa\u8fd9\u4e48\u591a\u9898\uff0c\u4e5f\u8bb8\u662f\u591a\u5e74\u7b14\u8bd5\u9898\u7684\u5408\u96c6\uff0c\u6216\u8005\u4e5f\u5305\u62ec\u4e86\u5176\u4ed6\u516c\u53f8\u7684\u7b14\u8bd5\u5185\u5bb9\u3002\u6700\u8fd1\u56fd\u9645\u5546\u7528\u5de5\u7a0b\u96c6\u56e2\uff08http://www.ibegroup.com/\uff09\u7684\u7f51\u7ba1\u544a\u8bc9\u6211\u8fd9\u662f\u4ed6\u4eec\u7684\u9898\u76ee\uff0c\u662f\u7f51\u4e0a\u4ee5\u8bb9\u4f20\u8bb9\u7684\u8bf4\u6210\u662f\u534e\u4e3a\u7684\u9898\u76ee\u4e86\uff0c\u6211\u60f3\u5e94\u8be5\u662f\u8fd9\u6837\u7684\uff0c\u6bd5\u7adf\u9898\u76ee\u4e2d\u8d6b\u7136\u51fa\u73b0\u4e86\u4ed6\u4eec\u516c\u53f8\u7684\u7f51\u5740\u5462\uff08\u89c1\u98982\uff09\uff0c\u5e0c\u671b\u5927\u5bb6\u8f6c\u8d34\u7684\u65f6\u5019\u4e5f\u80fd\u5199\u4e0a\u8fd9\u6bb5\u58f0\u660e\u3002", "\n\u3000\u3000\u53e6\u5916\u6211\u53d1\u73b0\u767d\u4e91\u9ec4\u9e64\u6709\u4eba\u4e0d\u58f0\u4e0d\u54cd\u7684\u8d34\u51fa\u6211\u505a\u7684\u7b54\u6848\uff0c\u8fd8\u6ca1\u6709\u58f0\u660e\u51fa\u5904\uff0c\u4ffa\u5f88\u4e25\u8083\u7684\u544a\u8bc9\u4ed6\uff0c\u4ffa\u5f88\u751f\u6c14 \uff0c\u540e\u679c\u5f88\u4e25\u91cd\u3002", "\n\u4e2a\u4eba\u7b54\u6848\uff0c\u4ec5\u4f9b\u53c2\u8003\u3002\u5475\u5475\uff0c\u4e0d\u8fc7\u4fdd\u8bc1\u7edd\u5927\u591a\u6570\u7b54\u6848\u7684\u51c6\u786e\u6027\u3002", "\n1.\u5199\u51fa\u5224\u65adABCD\u56db\u4e2a\u8868\u8fbe\u5f0f\u7684\u662f\u5426\u6b63\u786e, \u82e5\u6b63\u786e, \u5199\u51fa\u7ecf\u8fc7\u8868\u8fbe\u5f0f\u4e2d a\u7684\u503c(3\u5206)", "\nint a = 4;", "\n(A)a += (a++); (B) a += (++a) ;(C) (a++) += a;(D) (++a) += (a++);", "\na = ?", "\n\u7b54\uff1aC\u9519\u8bef\uff0c\u5de6\u4fa7\u4e0d\u662f\u4e00\u4e2a\u6709\u6548\u53d8\u91cf\uff0c\u4e0d\u80fd\u8d4b\u503c\uff0c\u53ef\u6539\u4e3a(++a) += a;", "\n\u6539\u540e\u7b54\u6848\u4f9d\u6b21\u4e3a9,10,10,11", "2.\u67d032\u4f4d\u7cfb\u7edf\u4e0b, C++\u7a0b\u5e8f\uff0c\u8bf7\u8ba1\u7b97sizeof \u7684\u503c(5\u5206).", "\nchar str[] = \u201cwww.ibegroup.com\u201d", "\nchar *p = str ;", "\nint n = 10;", "\n\u8bf7\u8ba1\u7b97", "\nsizeof (str ) = \uff1f\uff081\uff09", "\nsizeof ( p ) = \uff1f\uff082\uff09", "\nsizeof ( n ) = \uff1f\uff083\uff09", "\nvoid Foo ( char str[100]){", "\n\u8bf7\u8ba1\u7b97", "\nsizeof( str ) = \uff1f\uff084\uff09", "\n}", "\nvoid *p = malloc( 100 );", "\n\u8bf7\u8ba1\u7b97", "\nsizeof ( p ) = \uff1f\uff085\uff09", "\n\u7b54\uff1a\uff081\uff0917 \uff082\uff094 \uff083\uff09 4 \uff084\uff094 \uff085\uff094", "3. \u56de\u7b54\u4e0b\u9762\u7684\u95ee\u9898. (4\u5206)", "\n(1).\u5934\u6587\u4ef6\u4e2d\u7684 ifndef/define/endif \u5e72\u4ec0\u4e48\u7528\uff1f\u9884\u5904\u7406", "\n\u7b54\uff1a\u9632\u6b62\u5934\u6587\u4ef6\u88ab\u91cd\u590d\u5f15\u7528", "\n(2). #include ", "4. \u56de\u7b54\u4e0b\u9762\u7684\u95ee\u9898(6\u5206)", "\n(1).", "\nVoid GetMemory(char **p, int num){", "\n*p = (char *)malloc(num);", "\n}", "\nvoid Test(void){", "\nchar *str = NULL;", "\nGetMemory(&str, 100);", "\nstrcpy(str, \u201chello\u201d);", "\nprintf(str);", "\n}", "\n\u8bf7\u95ee\u8fd0\u884cTest \u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n\u7b54\uff1a\u8f93\u51fa\u201chello\u201d", "\n(2).", "\nvoid Test(void){", "\nchar *str = (char *) malloc(100);", "\nstrcpy(str, \u201chello\u201d);", "\nfree(str);", "\nif(str != NULL){", "\nstrcpy(str, \u201cworld\u201d);", "\nprintf(str);", "\n}", "\n}", "\n\u8bf7\u95ee\u8fd0\u884cTest \u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n\u7b54\uff1a\u8f93\u51fa\u201cworld\u201d\uff0c\u56e0\u4e3afree(str)\u540e\u5e76\u672a\u6539\u53d8str\u6240\u6307\u7684\u5185\u5b58\u5185\u5bb9\u3002", "\n(3).", "\nchar *GetMemory(void){", "\nchar p[] = \u201chello world\u201d;", "\nreturn p;", "\n}", "\nvoid Test(void){", "\nchar *str = NULL;", "\nstr = GetMemory();", "\nprintf(str);", "\n}", "\n\u8bf7\u95ee\u8fd0\u884cTest \u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n\u7b54\uff1a\u65e0\u6548\u7684\u6307\u9488\uff0c\u8f93\u51fa\u4e0d\u786e\u5b9a", "5. \u7f16\u5199strcat\u51fd\u6570(6\u5206)", "\n\u5df2\u77e5strcat\u51fd\u6570\u7684\u539f\u578b\u662fchar *strcat (char *strDest, const char *strSrc);", "\n\u5176\u4e2dstrDest \u662f\u76ee\u7684\u5b57\u7b26\u4e32\uff0cstrSrc \u662f\u6e90\u5b57\u7b26\u4e32\u3002", "\n\uff081\uff09\u4e0d\u8c03\u7528C++/C \u7684\u5b57\u7b26\u4e32\u5e93\u51fd\u6570\uff0c\u8bf7\u7f16\u5199\u51fd\u6570 strcat", "\n\u7b54\uff1a", "\nVC\u6e90\u7801\uff1a", "\nchar * __cdecl strcat (char * dst, const char * src)", "\n{", "\n        char * cp = dst;", "\n        while( *cp )", "\n                cp++;                   /* find end of dst */", "\n        while( *cp++ = *src++ ) ;       /* Copy src to end of dst */", "\n        return( dst );                  /* return dst */", "\n}", "\n\uff082\uff09strcat\u80fd\u628astrSrc \u7684\u5185\u5bb9\u8fde\u63a5\u5230strDest\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u8981char * \u7c7b\u578b\u7684\u8fd4\u56de\u503c\uff1f", "\n\u7b54\uff1a\u65b9\u4fbf\u8d4b\u503c\u7ed9\u5176\u4ed6\u53d8\u91cf", "6.MFC\u4e2dCString\u662f\u7c7b\u578b\u5b89\u5168\u7c7b\u4e48\uff1f", "\n\u7b54\uff1a\u4e0d\u662f\uff0c\u5176\u5b83\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u5230CString\u53ef\u4ee5\u4f7f\u7528CString\u7684\u6210\u5458\u51fd\u6570Format\u6765\u8f6c\u6362", "7.C++\u4e2d\u4e3a\u4ec0\u4e48\u7528\u6a21\u677f\u7c7b\u3002", "\n\u7b54\uff1a(1)\u53ef\u7528\u6765\u521b\u5efa\u52a8\u6001\u589e\u957f\u548c\u51cf\u5c0f\u7684\u6570\u636e\u7ed3\u6784", "\n\uff082\uff09\u5b83\u662f\u7c7b\u578b\u65e0\u5173\u7684\uff0c\u56e0\u6b64\u5177\u6709\u5f88\u9ad8\u7684\u53ef\u590d\u7528\u6027\u3002", "\n\uff083\uff09\u5b83\u5728\u7f16\u8bd1\u65f6\u800c\u4e0d\u662f\u8fd0\u884c\u65f6\u68c0\u67e5\u6570\u636e\u7c7b\u578b\uff0c\u4fdd\u8bc1\u4e86\u7c7b\u578b\u5b89\u5168", "\n\uff084\uff09\u5b83\u662f\u5e73\u53f0\u65e0\u5173\u7684\uff0c\u53ef\u79fb\u690d\u6027", "\n\uff085\uff09\u53ef\u7528\u4e8e\u57fa\u672c\u6570\u636e\u7c7b\u578b", "8.CSingleLock\u662f\u5e72\u4ec0\u4e48\u7684\u3002", "\n\u7b54\uff1a\u540c\u6b65\u591a\u4e2a\u7ebf\u7a0b\u5bf9\u4e00\u4e2a\u6570\u636e\u7c7b\u7684\u540c\u65f6\u8bbf\u95ee", "9.NEWTEXTMETRIC \u662f\u4ec0\u4e48\u3002", "\n\u7b54\uff1a\u7269\u7406\u5b57\u4f53\u7ed3\u6784\uff0c\u7528\u6765\u8bbe\u7f6e\u5b57\u4f53\u7684\u9ad8\u5bbd\u5927\u5c0f", "\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d", "\n\u63d2\u64ad\u6761\u5e7f\u544a\uff1a\u7248\u6743\u6240\u6709\uff1a\u6731\u79d1 \u6b22\u8fce\u5149\u4e34\u6211\u7684\u7f51\u7ad9\uff1awww.goodsoft.cn \u8f6c\u8d34\u52ff\u5220\u54e6\uff0c\u5ba3\u4f20\u4e0b\u6211\u7684\u7f51\u7ad9\u554a", "\n\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d", "10.\u7a0b\u5e8f\u4ec0\u4e48\u65f6\u5019\u5e94\u8be5\u4f7f\u7528\u7ebf\u7a0b\uff0c\u4ec0\u4e48\u65f6\u5019\u5355\u7ebf\u7a0b\u6548\u7387\u9ad8\u3002", "\n\u7b54\uff1a1\uff0e\u8017\u65f6\u7684\u64cd\u4f5c\u4f7f\u7528\u7ebf\u7a0b\uff0c\u63d0\u9ad8\u5e94\u7528\u7a0b\u5e8f\u54cd\u5e94", "\n2\uff0e\u5e76\u884c\u64cd\u4f5c\u65f6\u4f7f\u7528\u7ebf\u7a0b\uff0c\u5982C/S\u67b6\u6784\u7684\u670d\u52a1\u5668\u7aef\u5e76\u53d1\u7ebf\u7a0b\u54cd\u5e94\u7528\u6237\u7684\u8bf7\u6c42\u3002", "\n3\uff0e\u591aCPU\u7cfb\u7edf\u4e2d\uff0c\u4f7f\u7528\u7ebf\u7a0b\u63d0\u9ad8CPU\u5229\u7528\u7387", "\n4\uff0e\u6539\u5584\u7a0b\u5e8f\u7ed3\u6784\u3002\u4e00\u4e2a\u65e2\u957f\u53c8\u590d\u6742\u7684\u8fdb\u7a0b\u53ef\u4ee5\u8003\u8651\u5206\u4e3a\u591a\u4e2a\u7ebf\u7a0b\uff0c\u6210\u4e3a\u51e0\u4e2a\u72ec\u7acb\u6216\u534a\u72ec\u7acb\u7684\u8fd0\u884c\u90e8\u5206\uff0c\u8fd9\u6837\u7684\u7a0b\u5e8f\u4f1a\u5229\u4e8e\u7406\u89e3\u548c\u4fee\u6539\u3002", "\n\u5176\u4ed6\u60c5\u51b5\u90fd\u4f7f\u7528\u5355\u7ebf\u7a0b\u3002", "11.Windows\u662f\u5185\u6838\u7ea7\u7ebf\u7a0b\u4e48\u3002", "\n\u7b54\uff1a\u89c1\u4e0b\u4e00\u9898", "12.Linux\u6709\u5185\u6838\u7ea7\u7ebf\u7a0b\u4e48\u3002", "\n\u7b54\uff1a\u7ebf\u7a0b\u901a\u5e38\u88ab\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u4ee3\u7801\u7684\u4e0d\u540c\u6267\u884c\u8def\u7ebf\u3002\u4ece\u5b9e\u73b0\u65b9\u5f0f\u4e0a\u5212\u5206\uff0c\u7ebf\u7a0b\u6709\u4e24\u79cd\u7c7b\u578b\uff1a\u201c\u7528\u6237\u7ea7\u7ebf\u7a0b\u201d\u548c\u201c\u5185\u6838\u7ea7\u7ebf\u7a0b\u201d\u3002 \u7528\u6237\u7ebf\u7a0b\u6307\u4e0d\u9700\u8981\u5185\u6838\u652f\u6301\u800c\u5728\u7528\u6237\u7a0b\u5e8f\u4e2d\u5b9e\u73b0\u7684\u7ebf\u7a0b\uff0c\u5176\u4e0d\u4f9d\u8d56\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u6838\u5fc3\uff0c\u5e94\u7528\u8fdb\u7a0b\u5229\u7528\u7ebf\u7a0b\u5e93\u63d0\u4f9b\u521b\u5efa\u3001\u540c\u6b65\u3001\u8c03\u5ea6\u548c\u7ba1\u7406\u7ebf\u7a0b\u7684\u51fd\u6570\u6765\u63a7\u5236\u7528\u6237\u7ebf\u7a0b\u3002\u8fd9\u79cd\u7ebf\u7a0b\u751a\u81f3\u5728\u8c61 DOS \u8fd9\u6837\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u4e5f\u53ef\u5b9e\u73b0\uff0c\u4f46\u7ebf\u7a0b\u7684\u8c03\u5ea6\u9700\u8981\u7528\u6237\u7a0b\u5e8f\u5b8c\u6210\uff0c\u8fd9\u6709\u4e9b\u7c7b\u4f3c Windows 3.x \u7684\u534f\u4f5c\u5f0f\u591a\u4efb\u52a1\u3002\u53e6\u5916\u4e00\u79cd\u5219\u9700\u8981\u5185\u6838\u7684\u53c2\u4e0e\uff0c\u7531\u5185\u6838\u5b8c\u6210\u7ebf\u7a0b\u7684\u8c03\u5ea6\u3002\u5176\u4f9d\u8d56\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u6838\u5fc3\uff0c\u7531\u5185\u6838\u7684\u5185\u90e8\u9700\u6c42\u8fdb\u884c\u521b\u5efa\u548c\u64a4\u9500\uff0c\u8fd9\u4e24\u79cd\u6a21\u578b\u5404\u6709\u5176\u597d\u5904\u548c\u7f3a\u70b9\u3002\u7528\u6237\u7ebf\u7a0b\u4e0d\u9700\u8981\u989d\u5916\u7684\u5185\u6838\u5f00\u652f\uff0c\u5e76\u4e14\u7528\u6237\u6001\u7ebf\u7a0b\u7684\u5b9e\u73b0\u65b9\u5f0f\u53ef\u4ee5\u88ab\u5b9a\u5236\u6216\u4fee\u6539\u4ee5\u9002\u5e94\u7279\u6b8a\u5e94\u7528\u7684\u8981\u6c42\uff0c\u4f46\u662f\u5f53\u4e00\u4e2a\u7ebf\u7a0b\u56e0 I/O \u800c\u5904\u4e8e\u7b49\u5f85\u72b6\u6001\u65f6\uff0c\u6574\u4e2a\u8fdb\u7a0b\u5c31\u4f1a\u88ab\u8c03\u5ea6\u7a0b\u5e8f\u5207\u6362\u4e3a\u7b49\u5f85\u72b6\u6001\uff0c\u5176\u4ed6\u7ebf\u7a0b\u5f97\u4e0d\u5230\u8fd0\u884c\u7684\u673a\u4f1a\uff1b\u800c\u5185\u6838\u7ebf\u7a0b\u5219\u6ca1\u6709\u5404\u4e2a\u9650\u5236\uff0c\u6709\u5229\u4e8e\u53d1\u6325\u591a\u5904\u7406\u5668\u7684\u5e76\u53d1\u4f18\u52bf\uff0c\u4f46\u5374\u5360\u7528\u4e86\u66f4\u591a\u7684\u7cfb\u7edf\u5f00\u652f\u3002", "\nWindows NT\u548cOS/2\u652f\u6301\u5185\u6838\u7ebf\u7a0b\u3002Linux \u652f\u6301\u5185\u6838\u7ea7\u7684\u591a\u7ebf\u7a0b", "13.C++\u4e2d\u4ec0\u4e48\u6570\u636e\u5206\u914d\u5728\u6808\u6216\u5806\u4e2d\uff0cNew\u5206\u914d\u6570\u636e\u662f\u5728\u8fd1\u5806\u8fd8\u662f\u8fdc\u5806\u4e2d\uff1f", "\n\u7b54\uff1a\u6808: \u5b58\u653e\u5c40\u90e8\u53d8\u91cf\uff0c\u51fd\u6570\u8c03\u7528\u53c2\u6570,\u51fd\u6570\u8fd4\u56de\u503c\uff0c\u51fd\u6570\u8fd4\u56de\u5730\u5740\u3002\u7531\u7cfb\u7edf\u7ba1\u7406", "\n\u5806: \u7a0b\u5e8f\u8fd0\u884c\u65f6\u52a8\u6001\u7533\u8bf7\uff0cnew \u548c\u3000malloc\u7533\u8bf7\u7684\u5185\u5b58\u5c31\u5728\u5806\u4e0a", "\n\u8fd1\u5806\u8fd8\u662f\u8fdc\u5806\u4e0d\u662f\u5f88\u6e05\u695a\u3002", "14.\u4f7f\u7528\u7ebf\u7a0b\u662f\u5982\u4f55\u9632\u6b62\u51fa\u73b0\u5927\u7684\u6ce2\u5cf0\u3002", "\n\u7b54\uff1a\u610f\u601d\u662f\u5982\u4f55\u9632\u6b62\u540c\u65f6\u4ea7\u751f\u5927\u91cf\u7684\u7ebf\u7a0b\uff0c\u65b9\u6cd5\u662f\u4f7f\u7528\u7ebf\u7a0b\u6c60\uff0c\u7ebf\u7a0b\u6c60\u5177\u6709\u53ef\u4ee5\u540c\u65f6\u63d0\u9ad8\u8c03\u5ea6\u6548\u7387\u548c\u9650\u5236\u8d44\u6e90\u4f7f\u7528\u7684\u597d\u5904\uff0c\u7ebf\u7a0b\u6c60\u4e2d\u7684\u7ebf\u7a0b\u8fbe\u5230\u6700\u5927\u6570\u65f6\uff0c\u5176\u4ed6\u7ebf\u7a0b\u5c31\u4f1a\u6392\u961f\u7b49\u5019\u3002", "15\u51fd\u6570\u6a21\u677f\u4e0e\u7c7b\u6a21\u677f\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u7b54\uff1a\u51fd\u6570\u6a21\u677f\u7684\u5b9e\u4f8b\u5316\u662f\u7531\u7f16\u8bd1\u7a0b\u5e8f\u5728\u5904\u7406\u51fd\u6570\u8c03\u7528\u65f6\u81ea\u52a8\u5b8c\u6210\u7684\uff0c\u800c\u7c7b\u6a21\u677f\u7684\u5b9e\u4f8b\u5316\u5fc5\u987b\u7531\u7a0b\u5e8f\u5458\u5728\u7a0b\u5e8f\u4e2d\u663e\u5f0f\u5730\u6307\u5b9a\u3002", "16\u4e00\u822c\u6570\u636e\u5e93\u82e5\u51fa\u73b0\u65e5\u5fd7\u6ee1\u4e86\uff0c\u4f1a\u51fa\u73b0\u4ec0\u4e48\u60c5\u51b5\uff0c\u662f\u5426\u8fd8\u80fd\u4f7f\u7528\uff1f", "\n\u7b54\uff1a\u53ea\u80fd\u6267\u884c\u67e5\u8be2\u7b49\u8bfb\u64cd\u4f5c\uff0c\u4e0d\u80fd\u6267\u884c\u66f4\u6539\uff0c\u5907\u4efd\u7b49\u5199\u64cd\u4f5c\uff0c\u539f\u56e0\u662f\u4efb\u4f55\u5199\u64cd\u4f5c\u90fd\u8981\u8bb0\u5f55\u65e5\u5fd7\u3002\u4e5f\u5c31\u662f\u8bf4\u57fa\u672c\u4e0a\u5904\u4e8e\u4e0d\u80fd\u4f7f\u7528\u7684\u72b6\u6001\u3002", "17 SQL Server\u662f\u5426\u652f\u6301\u884c\u7ea7\u9501\uff0c\u6709\u4ec0\u4e48\u597d\u5904\uff1f", "\n\u7b54\uff1a\u652f\u6301\uff0c\u8bbe\u7acb\u5c01\u9501\u673a\u5236\u4e3b\u8981\u662f\u4e3a\u4e86\u5bf9\u5e76\u53d1\u64cd\u4f5c\u8fdb\u884c\u63a7\u5236\uff0c\u5bf9\u5e72\u6270\u8fdb\u884c\u5c01\u9501\uff0c\u4fdd\u8bc1\u6570\u636e\u7684\u4e00\u81f4\u6027\u548c\u51c6\u786e\u6027\uff0c\u884c\u7ea7\u5c01\u9501\u786e\u4fdd\u5728\u7528\u6237\u53d6\u5f97\u88ab\u66f4\u65b0\u7684\u884c\u5230\u8be5\u884c\u8fdb\u884c\u66f4\u65b0\u8fd9\u6bb5\u65f6\u95f4\u5185\u4e0d\u88ab\u5176\u5b83\u7528\u6237\u6240\u4fee\u6539\u3002\u56e0\u800c\u884c\u7ea7\u9501\u5373\u53ef\u4fdd\u8bc1\u6570\u636e\u7684\u4e00\u81f4\u6027\u53c8\u80fd\u63d0\u9ad8\u6570\u636e\u64cd\u4f5c\u7684\u8ff8\u53d1\u6027\u3002", "18\u5982\u679c\u6570\u636e\u5e93\u6ee1\u4e86\u4f1a\u51fa\u73b0\u4ec0\u4e48\u60c5\u51b5\uff0c\u662f\u5426\u8fd8\u80fd\u4f7f\u7528\uff1f", "\n\u7b54\uff1a\u89c116", "19 \u5173\u4e8e\u5185\u5b58\u5bf9\u9f50\u7684\u95ee\u9898\u4ee5\u53casizof()\u7684\u8f93\u51fa", "\n\u7b54\uff1a\u7f16\u8bd1\u5668\u81ea\u52a8\u5bf9\u9f50\u7684\u539f\u56e0\uff1a\u4e3a\u4e86\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6027\u80fd\uff0c\u6570\u636e\u7ed3\u6784\uff08\u5c24\u5176\u662f\u6808\uff09\u5e94\u8be5\u5c3d\u53ef\u80fd\u5730\u5728\u81ea\u7136\u8fb9\u754c\u4e0a\u5bf9\u9f50\u3002\u539f\u56e0\u5728\u4e8e\uff0c\u4e3a\u4e86\u8bbf\u95ee\u672a\u5bf9\u9f50\u7684\u5185\u5b58\uff0c\u5904\u7406\u5668\u9700\u8981\u4f5c\u4e24\u6b21\u5185\u5b58\u8bbf\u95ee\uff1b\u7136\u800c\uff0c\u5bf9\u9f50\u7684\u5185\u5b58\u8bbf\u95ee\u4ec5\u9700\u8981\u4e00\u6b21\u8bbf\u95ee\u3002", "20 int i=10, j=10, k=3; k*=i+j; k\u6700\u540e\u7684\u503c\u662f\uff1f", "\n\u7b54\uff1a60\uff0c\u6b64\u9898\u8003\u5bdf\u4f18\u5148\u7ea7\uff0c\u5b9e\u9645\u5199\u6210\uff1a k*=(i+j);\uff0c\u8d4b\u503c\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u6700\u4f4e", "21.\u5bf9\u6570\u636e\u5e93\u7684\u4e00\u5f20\u8868\u8fdb\u884c\u64cd\u4f5c,\u540c\u65f6\u8981\u5bf9\u53e6\u4e00\u5f20\u8868\u8fdb\u884c\u64cd\u4f5c,\u5982\u4f55\u5b9e\u73b0?", "\n\u7b54\uff1a\u5c06\u64cd\u4f5c\u591a\u4e2a\u8868\u7684\u64cd\u4f5c\u653e\u5165\u5230\u4e8b\u52a1\u4e2d\u8fdb\u884c\u5904\u7406", "22.TCP/IP \u5efa\u7acb\u8fde\u63a5\u7684\u8fc7\u7a0b?(3-way shake)", "\n\u7b54\uff1a\u5728TCP/IP\u534f\u8bae\u4e2d\uff0cTCP\u534f\u8bae\u63d0\u4f9b\u53ef\u9760\u7684\u8fde\u63a5\u670d\u52a1\uff0c\u91c7\u7528\u4e09\u6b21\u63e1\u624b\u5efa\u7acb\u4e00\u4e2a\u8fde\u63a5\u3002", "\n\u3000\u3000\u7b2c\u4e00\u6b21\u63e1\u624b\uff1a\u5efa\u7acb\u8fde\u63a5\u65f6\uff0c\u5ba2\u6237\u7aef\u53d1\u9001syn\u5305(syn=j)\u5230\u670d\u52a1\u5668\uff0c\u5e76\u8fdb\u5165SYN_SEND\u72b6\u6001\uff0c\u7b49\u5f85\u670d\u52a1\u5668\u786e\u8ba4\uff1b", "\n\u7b2c\u4e8c\u6b21\u63e1\u624b\uff1a\u670d\u52a1\u5668\u6536\u5230syn\u5305\uff0c\u5fc5\u987b\u786e\u8ba4\u5ba2\u6237\u7684SYN\uff08ack=j+1\uff09\uff0c\u540c\u65f6\u81ea\u5df1\u4e5f\u53d1\u9001\u4e00\u4e2aSYN\u5305\uff08syn=k\uff09\uff0c\u5373SYN+ACK\u5305\uff0c\u6b64\u65f6\u670d\u52a1\u5668\u8fdb\u5165SYN_RECV\u72b6\u6001\uff1b", "\n\u3000\u3000\u7b2c\u4e09\u6b21\u63e1\u624b\uff1a\u5ba2\u6237\u7aef\u6536\u5230\u670d\u52a1\u5668\u7684SYN\uff0bACK\u5305\uff0c\u5411\u670d\u52a1\u5668\u53d1\u9001\u786e\u8ba4\u5305ACK(ack=k+1)\uff0c\u6b64\u5305\u53d1\u9001\u5b8c\u6bd5\uff0c\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u8fdb\u5165ESTABLISHED\u72b6\u6001\uff0c\u5b8c\u6210\u4e09\u6b21\u63e1\u624b\u3002", "23.ICMP\u662f\u4ec0\u4e48\u534f\u8bae,\u5904\u4e8e\u54ea\u4e00\u5c42?", "\n\u7b54\uff1aInternet\u63a7\u5236\u62a5\u6587\u534f\u8bae\uff0c\u5904\u4e8e\u7f51\u7edc\u5c42\uff08IP\u5c42\uff09", "24.\u89e6\u53d1\u5668\u600e\u4e48\u5de5\u4f5c\u7684?", "\n\u7b54\uff1a\u89e6\u53d1\u5668\u4e3b\u8981\u662f\u901a\u8fc7\u4e8b\u4ef6\u8fdb\u884c\u89e6\u53d1\u800c\u88ab\u6267\u884c\u7684\uff0c\u5f53\u5bf9\u67d0\u4e00\u8868\u8fdb\u884c\u8bf8\u5982UPDATE\u3001 INSERT\u3001 DELETE \u8fd9\u4e9b\u64cd\u4f5c\u65f6\uff0c\u6570\u636e\u5e93\u5c31\u4f1a\u81ea\u52a8\u6267\u884c\u89e6\u53d1\u5668\u6240\u5b9a\u4e49\u7684SQL \u8bed\u53e5\uff0c\u4ece\u800c\u786e\u4fdd\u5bf9\u6570\u636e\u7684\u5904\u7406\u5fc5\u987b\u7b26\u5408\u7531\u8fd9\u4e9bSQL \u8bed\u53e5\u6240\u5b9a\u4e49\u7684\u89c4\u5219\u3002", "25.winsock\u5efa\u7acb\u8fde\u63a5\u7684\u4e3b\u8981\u5b9e\u73b0\u6b65\u9aa4?", "\n\u7b54\uff1a\u670d\u52a1\u5668\u7aef\uff1asocker()\u5efa\u7acb\u5957\u63a5\u5b57\uff0c\u7ed1\u5b9a\uff08bind\uff09\u5e76\u76d1\u542c\uff08listen\uff09\uff0c\u7528accept\uff08\uff09\u7b49\u5f85\u5ba2\u6237\u7aef\u8fde\u63a5\u3002", "\n\u5ba2\u6237\u7aef\uff1asocker()\u5efa\u7acb\u5957\u63a5\u5b57\uff0c\u8fde\u63a5\uff08connect\uff09\u670d\u52a1\u5668\uff0c\u8fde\u63a5\u4e0a\u540e\u4f7f\u7528send()\u548crecv\uff08\uff09\uff0c\u5728\u5957\u63a5\u5b57\u4e0a\u5199\u8bfb\u6570\u636e\uff0c\u76f4\u81f3\u6570\u636e\u4ea4\u6362\u5b8c\u6bd5\uff0cclosesocket()\u5173\u95ed\u5957\u63a5\u5b57\u3002", "\n\u670d\u52a1\u5668\u7aef\uff1aaccept\uff08\uff09\u53d1\u73b0\u6709\u5ba2\u6237\u7aef\u8fde\u63a5\uff0c\u5efa\u7acb\u4e00\u4e2a\u65b0\u7684\u5957\u63a5\u5b57\uff0c\u81ea\u8eab\u91cd\u65b0\u5f00\u59cb\u7b49\u5f85\u8fde\u63a5\u3002\u8be5\u65b0\u4ea7\u751f\u7684\u5957\u63a5\u5b57\u4f7f\u7528send()\u548crecv\uff08\uff09\u5199\u8bfb\u6570\u636e\uff0c\u76f4\u81f3\u6570\u636e\u4ea4\u6362\u5b8c\u6bd5\uff0cclosesocket()\u5173\u95ed\u5957\u63a5\u5b57\u3002", "26.\u52a8\u6001\u8fde\u63a5\u5e93\u7684\u4e24\u79cd\u65b9\u5f0f?", "\n\u7b54\uff1a\u8c03\u7528\u4e00\u4e2aDLL\u4e2d\u7684\u51fd\u6570\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a", "\n1\uff0e\u8f7d\u5165\u65f6\u52a8\u6001\u94fe\u63a5\uff08load-time dynamic linking\uff09\uff0c\u6a21\u5757\u975e\u5e38\u660e\u786e\u8c03\u7528\u67d0\u4e2a\u5bfc\u51fa\u51fd\u6570\uff0c\u4f7f\u5f97\u4ed6\u4eec\u5c31\u50cf\u672c\u5730\u51fd\u6570\u4e00\u6837\u3002\u8fd9\u9700\u8981\u94fe\u63a5\u65f6\u94fe\u63a5\u90a3\u4e9b\u51fd\u6570\u6240\u5728DLL\u7684\u5bfc\u5165\u5e93\uff0c\u5bfc\u5165\u5e93\u5411\u7cfb\u7edf\u63d0\u4f9b\u4e86\u8f7d\u5165DLL\u65f6\u6240\u9700\u7684\u4fe1\u606f\u53caDLL\u51fd\u6570\u5b9a\u4f4d\u3002", "\n2\uff0e\u8fd0\u884c\u65f6\u52a8\u6001\u94fe\u63a5\uff08run-time dynamic linking\uff09\uff0c\u8fd0\u884c\u65f6\u53ef\u4ee5\u901a\u8fc7LoadLibrary\u6216LoadLibraryEx\u51fd\u6570\u8f7d\u5165DLL\u3002DLL\u8f7d\u5165\u540e\uff0c\u6a21\u5757\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528GetProcAddress\u83b7\u53d6DLL\u51fd\u6570\u7684\u51fa\u53e3\u5730\u5740\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7\u8fd4\u56de\u7684\u51fd\u6570\u6307\u9488\u8c03\u7528DLL\u51fd\u6570\u4e86\u3002\u5982\u6b64\u5373\u53ef\u907f\u514d\u5bfc\u5165\u5e93\u6587\u4ef6\u4e86\u3002", "27.IP\u7ec4\u64ad\u6709\u90a3\u4e9b\u597d\u5904?\u7b54\uff1aInternet\u4e0a\u4ea7\u751f\u7684\u8bb8\u591a\u65b0\u7684\u5e94\u7528\uff0c\u7279\u522b\u662f\u9ad8\u5e26\u5bbd\u7684\u591a\u5a92\u4f53\u5e94\u7528\uff0c\u5e26\u6765\u4e86\u5e26\u5bbd\u7684\u6025\u5267\u6d88\u8017\u548c\u7f51\u7edc\u62e5\u6324\u95ee\u9898\u3002\u7ec4\u64ad\u662f\u4e00\u79cd\u5141\u8bb8\u4e00\u4e2a\u6216\u591a\u4e2a\u53d1\u9001\u8005\uff08\u7ec4\u64ad\u6e90\uff09\u53d1\u9001\u5355\u4e00\u7684\u6570\u636e\u5305\u5230\u591a\u4e2a\u63a5\u6536\u8005\uff08\u4e00\u6b21\u7684\uff0c\u540c\u65f6\u7684\uff09\u7684\u7f51\u7edc\u6280\u672f\u3002\u7ec4\u64ad\u53ef\u4ee5\u5927\u5927\u7684\u8282\u7701\u7f51\u7edc\u5e26\u5bbd\uff0c\u56e0\u4e3a\u65e0\u8bba\u6709\u591a\u5c11\u4e2a\u76ee\u6807\u5730\u5740\uff0c\u5728\u6574\u4e2a\u7f51\u7edc\u7684\u4efb\u4f55\u4e00\u6761\u94fe\u8def\u4e0a\u53ea\u4f20\u9001\u5355\u4e00\u7684\u6570\u636e\u5305\u3002\u6240\u4ee5\u8bf4\u7ec4\u64ad\u6280\u672f\u7684\u6838\u5fc3\u5c31\u662f\u9488\u5bf9\u5982\u4f55\u8282\u7ea6\u7f51\u7edc\u8d44\u6e90\u7684\u524d\u63d0\u4e0b\u4fdd\u8bc1\u670d\u52a1\u8d28\u91cf\u3002"], "title": "C++\u7b14\u8bd5\u9898\uff08\u56db\uff09"},
{"contents": ["\u666e\u5929\u662f\u5357\u4eac\u4e00\u5bb6\u901a\u4fe1\u516c\u53f8\uff0c\u5168\u79f0\u4e3a\uff1a\u5357\u4eac\u666e\u5929\u901a\u4fe1\u80a1\u4efd\u6709\u9650\u516c\u53f8\uff0c\u516c\u53f8\u7f51\u5740\u4e3a\uff1ahttp://www.postel.com.cn \u7f51\u4e0a\u6d41\u4f20\u4e00\u5957\u666e\u5929C++\u7b14\u8bd5\u9898\uff0c\u6211\u5c06\u6211\u505a\u7684\u7b54\u6848\u516c\u5e03\u4e0e\u6b64\uff0c\u4ec5\u4f9b\u53c2\u8003\u3002", "1.\u5b9e\u73b0\u53cc\u5411\u94fe\u8868\u5220\u9664\u4e00\u4e2a\u8282\u70b9P\uff0c\u5728\u8282\u70b9P\u540e\u63d2\u5165\u4e00\u4e2a\u8282\u70b9\uff0c\u5199\u51fa\u8fd9\u4e24\u4e2a\u51fd\u6570;", "\n\u7b54\uff1a", "\n//\u5047\u8bbe\u7ebf\u6027\u8868\u7684\u53cc\u5411\u94fe\u8868\u5b58\u50a8\u7ed3\u6784", "\ntypedef struct DulNode{", "\n    struct DulNode *prior;  //\u524d\u9a71\u6307\u9488", "\n     ElemType data;    //\u6570\u636e", "\n     struct DulNode *next;  //\u540e\u7ee7\u6307\u9488", "\n}DulNode,*DuLinkList;", "\n//\u5220\u9664\u64cd\u4f5c", "\nStatus ListDelete_DuL(DuLinkList &L,int i,ElemType &e)", "\n{", "\n  if(!(p=GetElemP_DuL(L,i))) //\u6b64\u5904\u5f97\u5230i\u4f4d\u7f6e\u7684\u8282\u70b9\u6307\u9488\uff0c\u5982\u679c\u6709\u9700\u8981\u4e5f\u5f97\u5199\u51fa\u5177\u4f53\u51fd\u6570\u5b9e\u73b0", "\n    return ERROR;", "\n  e=p->data;", "\n  p->prior->next=p->next;", "\n  p->next->prior=p->pror;", "\n  free(p);", "\n  return OK;", "\n}", "\n//\u63d2\u5165\u64cd\u4f5c", "\nStatus ListInsert_DuL(DuLinkList &L,int i,ElemType &e)", "\n{", "\n  if(!(p=GetElemP_DuL(L,i)))", "\n    return ERROR;", "\n  if(!(s=(DuLinkList)malloc(sizeof(DuLNode))))", "\n    return ERROR;", "  s->data=e;", "\n  s->prior=p->prior;", "\n  p->prior->next=s;", "\n  s->next=p;", "\n  p->prior=s;", "\n  return OK;", "\n}", "\n2.\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u5c06\u5176\u4e2d\u7684\\t\u90fd\u8f6c\u6362\u62104\u4e2a\u7a7a\u683c\u3002", "\n\u7b54\uff1a", "\n\u8be5\u51fd\u6570\u547d\u540d\u4e3aconvert,\u53c2\u6570\u7684\u610f\u4e49\u4e3a\uff1a", "\n*strDest\u76ee\u7684\u5b57\u7b26\u4e32,*strSrc\u6e90\u5b57\u7b26\u4e32,length\u6e90\u5b57\u7b26\u4e32\u7684\u957f\u5ea6", "\n\u51fd\u6570\u5b9e\u73b0\u4e3a\uff1a", "\nchar* convert(char *strDest, const char *strSrc,int length)", "\n{", "\n  char * cp = strDest;", "\n  int i=0;", "\n  while(*strSrc && i", "\n  {", "\n    if (*strSrc==\u2019\\t\u2019)  //\u5c06\\t\u8f6c\u6362\u62104\u4e2a\u7a7a\u683c", "\n    {", "\n      for(int j=0;j\n        *cp++=\u2019 \u2018;", "\n    }", "\n    else      //\u5426\u5219\u76f4\u63a5\u62f7\u8d1d", "\n      *cp++=*strSrc;", "\n    strSrc++;", "\n    i++;", "\n  }", "\n  return strDest;", "\n}", "3.Windows\u7a0b\u5e8f\u7684\u5165\u53e3\u662f\u54ea\u91cc\uff1f\u5199\u51faWindows\u6d88\u606f\u673a\u5236\u7684\u6d41\u7a0b\u3002", "\n\u7b54\uff1a", "\nWindows\u7a0b\u5e8f\u7684\u5165\u53e3\u662fWinMain\u51fd\u6570", "\n\u6d88\u606f\u673a\u5236\uff1a\u7cfb\u7edf\u5c06\u4f1a\u7ef4\u62a4\u4e00\u4e2a\u6216\u591a\u4e2a\u6d88\u606f\u961f\u5217\uff0c\u6240\u6709\u4ea7\u751f\u7684\u6d88\u606f\u90fd\u4f1a\u88ab\u653e\u5165\u6216\u662f\u63d2\u5165\u961f\u5217\u4e2d\u3002\u7cfb\u7edf\u4f1a\u5728\u961f\u5217\u4e2d\u53d6\u51fa\u6bcf\u4e00\u6761\u6d88\u606f\uff0c\u6839\u636e\u6d88\u606f\u7684\u63a5\u6536\u53e5\u67c4\u800c\u5c06\u8be5\u6d88\u606f\u53d1\u9001\u7ed9\u62e5\u6709\u8be5\u7a97\u53e3\u7684\u7a0b\u5e8f\u7684\u6d88\u606f\u5faa\u73af\u3002\u6bcf\u4e00\u4e2a\u8fd0\u884c\u7684\u7a0b\u5e8f\u90fd\u6709\u81ea\u5df1\u7684\u6d88\u606f\u5faa\u73af\uff0c\u5728\u5faa\u73af\u4e2d\u5f97\u5230\u5c5e\u4e8e\u81ea\u5df1\u7684\u6d88\u606f\u5e76\u6839\u636e\u63a5\u6536\u7a97\u53e3\u7684\u53e5\u67c4\u8c03\u7528\u76f8\u5e94\u7684\u7a97\u53e3\u8fc7\u7a0b\u3002\u800c\u5728\u6ca1\u6709\u6d88\u606f\u65f6\u6d88\u606f\u5faa\u73af\u5c31\u5c06\u63a7\u5236\u6743\u4ea4\u7ed9\u7cfb\u7edf\u3002", "\n4.\u5982\u4f55\u5b9a\u4e49\u548c\u5b9e\u73b0\u4e00\u4e2a\u7c7b\u7684\u6210\u5458\u51fd\u6570\u4e3a\u56de\u8c03\u51fd\u6570\uff1f", "\n\u7b54\uff1a", "\n\u6240\u8c13\u7684\u56de\u8c03\u51fd\u6570\uff0c\u5c31\u662f\u9884\u5148\u5728\u7cfb\u7edf\u7684\u5bf9\u51fd\u6570\u8fdb\u884c\u6ce8\u518c\uff0c\u8ba9\u7cfb\u7edf\u77e5\u9053\u8fd9\u4e2a\u51fd\u6570\u7684\u5b58\u5728\uff0c\u4ee5\u540e\uff0c\u5f53\u67d0\u4e2a\u4e8b\u4ef6\u53d1\u751f\u65f6\uff0c\u518d\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u5bf9\u4e8b\u4ef6\u8fdb\u884c\u54cd\u5e94\u3002", "\n\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u7684\u6210\u5458\u51fd\u6570\u65f6\u5728\u8be5\u51fd\u6570\u524d\u52a0CALLBACK\u5373\u5c06\u5176\u5b9a\u4e49\u4e3a\u56de\u8c03\u51fd\u6570\uff0c\u51fd\u6570\u7684\u5b9e\u73b0\u548c\u666e\u901a\u6210\u5458\u51fd\u6570\u6ca1\u6709\u533a\u522b", "\n5.C++\u91cc\u9762\u662f\u4e0d\u662f\u6240\u6709\u7684\u52a8\u4f5c\u90fd\u662fmain()\u5f15\u8d77\u7684\uff1f\u5982\u679c\u4e0d\u662f\uff0c\u8bf7\u4e3e\u4f8b\u3002", "\n\u7b54\uff1a\u4e0d\u662f\uff0c\u6bd4\u5982\u4e2d\u65ad\u5f15\u8d77\u7684\u4e2d\u65ad\u5904\u7406\u4e0d\u662f\u76f4\u63a5\u7531main()\u5f15\u8d77\u7684\uff0c\u800c\u662f\u7531\u5916\u90e8\u4e8b\u4ef6\u5f15\u8d77\u7684\u3002", "\n6.C++\u91cc\u9762\u5982\u4f55\u58f0\u660econst void f(void)\u51fd\u6570\u4e3aC\u7a0b\u5e8f\u4e2d\u7684\u5e93\u51fd\u6570\uff1f", "\n\u7b54\uff1a\u5728\u8be5\u51fd\u6570\u524d\u6dfb\u52a0extern \u201cC\u201d\u58f0\u660e", "\n7.\u4e0b\u5217\u54ea\u4e24\u4e2a\u662f\u7b49\u540c\u7684", "\nint b;", "\nA const int* a = &b;", "\nB const* int a = &b;", "\nC const int* const a = &b;", "\nD int const* const a = &b;", "\n\u7b54\uff1a", "\n\u5404\u5f0f\u8868\u793a\u7684\u610f\u601d\u5206\u522b\u4e3a\uff1a", "\nA const int* a = &b; //*a\u662fconst,\u4f46\u6307\u9488a\u53ef\u53d8", "\nB const* int a = &b; //a\u662fconst\uff0c\u4f46*a\u53ef\u53d8", "\nC const int* const a = &b; //a\u548c*a\u90fd\u662fconst,\u5e38\u91cf\u548c\u6307\u9488\u7684\u503c\u90fd\u4e0d\u80fd\u6539\u53d8", "\nD int const* const a = &b; //a\u548c*a\u90fd\u662fconst,\u5e38\u91cf\u548c\u6307\u9488\u7684\u503c\u90fd\u4e0d\u80fd\u6539\u53d8", "\n\u56e0\u6b64C\uff0cD\u4e24\u8005\u662f\u76f8\u540c\u7684\u3002", "\n\u603b\u7ed3\u4e2a\u6280\u5de7\uff1a\u5982\u679cconst\u4f4d\u4e8e\u661f\u53f7\u7684\u5de6\u4fa7\uff0c\u5219const\u5c31\u662f\u7528\u6765\u4fee\u9970\u6307\u9488\u6240\u6307\u5411\u7684\u53d8\u91cf\uff0c\u5373\u6307\u9488\u6307\u5411\u4e3a\u5e38\u91cf\uff1b\u5982\u679cconst\u4f4d\u4e8e\u661f\u53f7\u7684\u53f3\u4fa7\uff0cconst\u5c31\u662f\u4fee\u9970\u6307\u9488\u672c\u8eab\uff0c\u5373\u6307\u9488\u672c\u8eab\u662f\u5e38\u91cf\u3002", "8. \u5185\u8054\u51fd\u6570\u5728\u7f16\u8bd1\u65f6\u662f\u5426\u505a\u53c2\u6570\u7c7b\u578b\u68c0\u67e5\uff1f", "\n\u7b54\uff1a\u505a\u7c7b\u578b\u68c0\u67e5\uff0c\u56e0\u4e3a\u5185\u8054\u51fd\u6570\u5c31\u662f\u5728\u7a0b\u5e8f\u7f16\u8bd1\u65f6\uff0c\u7f16\u8bd1\u5668\u5c06\u7a0b\u5e8f\u4e2d\u51fa\u73b0\u7684\u5185\u8054\u51fd\u6570\u7684\u8c03\u7528\u8868\u8fbe\u5f0f\u7528\u5185\u8054\u51fd\u6570\u7684\u51fd\u6570\u4f53\u6765\u4ee3\u66ff\u3002"], "title": "C++\u7b14\u8bd5\u9898\uff08\u4e09\uff09"},
{"contents": ["1\u3001\u8bf7\u5b9a\u4e49\u4e00\u4e2a\u5b8f\uff0c\u6bd4\u8f83\u4e24\u4e2a\u6570a\u3001b\u7684\u5927\u5c0f\uff0c\u4e0d\u80fd\u4f7f\u7528\u5927\u4e8e\u3001\u5c0f\u4e8e\u3001if\u8bed\u53e5", "\n2\u3001\u5982\u4f55\u8f93\u51fa\u6e90\u6587\u4ef6\u7684\u6807\u9898\u548c\u76ee\u524d\u6267\u884c\u884c\u7684\u884c\u6570", "\n3\u3001\u4e24\u4e2a\u6570\u76f8\u4e58\uff0c\u5c0f\u6570\u70b9\u540e\u4f4d\u6570\u6ca1\u6709\u9650\u5236\uff0c\u8bf7\u5199\u4e00\u4e2a\u9ad8\u7cbe\u5ea6\u7b97\u6cd5", "\n4\u3001\u5199\u4e00\u4e2a\u75c5\u6bd2", "\n5\u3001\u6709A\u3001B\u3001C\u3001D\u56db\u4e2a\u4eba\uff0c\u8981\u5728\u591c\u91cc\u8fc7\u4e00\u5ea7\u6865\u3002\u4ed6\u4eec\u901a\u8fc7\u8fd9\u5ea7\u6865\u5206\u522b\u9700\u8981\u8017\u65f61\u30012\u30015\u300110\u5206\u949f\uff0c\u53ea\u6709\u4e00\u652f\u624b\u7535\uff0c\u5e76\u4e14\u540c\u65f6\u6700\u591a\u53ea\u80fd\u4e24\u4e2a\u4eba\u4e00\u8d77\u8fc7\u6865\u3002\u8bf7\u95ee\uff0c\u5982\u4f55\u5b89\u6392\uff0c\u80fd\u591f\u572817\u5206\u949f\u5185\u8fd9\u56db\u4e2a\u4eba\u90fd\u8fc7\u6865\uff1f", "2005\u5e74\u817e\u8baf\u62db\u8058", "\n\u9009\u62e9\u9898(60)", "\n  c/c++ os linux \u65b9\u9762\u7684\u57fa\u7840\u77e5\u8bc6 c\u7684Sizeof\u51fd\u6570\u6709\u597d\u51e0\u4e2a!", "\n\u7a0b\u5e8f\u586b\u7a7a(40)", "\n1.(20) 4\u7a7ax5", "\n  \u4e0d\u4f7f\u7528\u989d\u5916\u7a7a\u95f4,\u5c06 A,B\u4e24\u94fe\u8868\u7684\u5143\u7d20\u4ea4\u53c9\u5f52\u5e76", "\n2.(20) 4\u7a7ax5", "\nMFC  \u5c06\u6811\u5e8f\u5217\u5316 \u8f6c\u5b58\u5728\u6570\u7ec4\u6216 \u94fe\u8868\u4e2d!", "1.\u8bf7\u5b9a\u4e49\u4e00\u4e2a\u5b8f\uff0c\u6bd4\u8f83\u4e24\u4e2a\u6570a\u3001b\u7684\u5927\u5c0f\uff0c\u4e0d\u80fd\u4f7f\u7528\u5927\u4e8e\u3001\u5c0f\u4e8e\u3001if\u8bed\u53e5", "\n// \u8fd9\u6837\u8f6c\u5411\u5b9a\u4e49\u5e94\u8be5\u4e0d\u7b97\u8fdd\u89c4\u5427\uff01^_^", "\n#include \u201cstdafx.h\u201d", "\n#include ", "#define Cmp(x,y) compare(x,y)", "int compare(int a,int b)", "\n{", "\n     a^=(1\n     int i=31;", "\n    while((i^-1) && !((a&(1\n     return (i^-1)?(((a>>i)&1)?1:-1):0;", "\n}", "int _tmain()", "\n{", "\n     int c;", "\n     c = Cmp(5,4);", "\n     cout\n     return 0;", "\n}", "\njruv   (~~~\u4e00\u53f6\u843d\u800c\u77e5\u5929\u4e0b\u79cb~~~) \u7684\u7b54\u6848\uff1a", "\n#define   COMPARE(a,b)   ((a)-(b))         //0:a>b", "\n2.\u5982\u4f55\u8f93\u51fa\u6e90\u6587\u4ef6\u7684\u6807\u9898\u548c\u76ee\u524d\u6267\u884c\u884c\u7684\u884c\u6570", "\ncout   \n3.\u4e24\u4e2a\u6570\u76f8\u4e58\uff0c\u5c0f\u6570\u70b9\u540e\u4f4d\u6570\u6ca1\u6709\u9650\u5236\uff0c\u8bf7\u5199\u4e00\u4e2a\u9ad8\u7cbe\u5ea6\u7b97\u6cd5", "\n  \u7b97\u6cd5\u63d0\u793a\uff1a", "\n         \u8f93\u5165 string a, string b\uff1b \u8ba1\u7b97string c=a*b; \u8fd4\u56de c;", "\n1\uff0c   \u7eaa\u5f55\u5c0f\u6570\u70b9\u5728a,b\u4e2d\u7684\u4f4d\u7f6el1,l2\uff0c \u5219\u9700\u8981\u5c0f\u6570\u70b9\u540e\u79fb\u52a8\u4f4d\u7f6e\u6570\u4e3al=length(a)+length(b)-l1-l2-2;", "\n2\uff0c   \u53bb\u6389a,b\u4e2d\u7684\u5c0f\u6570\u70b9\uff0c\uff08a,b\u5c0f\u6570\u70b9\u540e\u79fb\uff0c\u4f7fa,b\u53d8\u4e3a\u6574\u6570\uff09", "\n3\uff0c   \u8ba1\u7b97c=a*b; \uff08\u540c\u6574\u6570\u7684\u5927\u6570\u76f8\u4e58\u7b97\u6cd5\uff09", "\n4\uff0c   \u8f93\u51fac,\uff08\u6ce8\u610f\u5728\u8f93\u51fa\u5012\u6570\u7b2cl\u4e2a\u6570\u65f6\uff0c\u8f93\u51fa\u4e00\u4e2a\u5c0f\u6570\u70b9\u3002\u82e5\u662f\u8f93\u51fa\u7684\u6570\u5c11\u4e8el\u4e2a\uff0c\u5c31\u88650\uff09", "\ndu51(\u90c1\u90c1\u601d\u626c)\u7684\u7b54\u6848\uff1a", "\u53d8\u4e3a\u6574\u6570\u6c42\u5c31\u884c\u4e86.\u8f93\u5165\u7684\u65f6\u5019\u8bb0\u4e00\u4e0b,\u5c0f\u6570\u70b9\u4f4d\u7f6e..\u8f93\u51fa\u518d\u505a\u70b9\u6587\u7ae0\u5c31\u884c\u4e86.", "\n\u4e0b\u9762\u7684\u662f\u5927\u6574\u6570\u7684\u8fd0\u7b97.", "\n#include", "5.\u8ba9\u4f60\u5728100000000\u4e2a\u6d6e\u70b9\u6570\u4e2d\u627e\u51fa\u6700\u5927\u768410000\u4e2a\uff0c\u8981\u6c42\u65f6\u95f4\u590d\u6742\u5ea6\u4f18\u3002", "\n//\u672c\u7b97\u6cd5\u4f7f\u7528\u5feb\u6392\uff0cO(n*lg(n))", "\n//\u6700\u4f4e\u53ef\u4ee5\u627e\u5230\u7ebf\u6027\u7b97\u6cd5\uff0c\u4f7f\u7528\u9884\u5148\u533a\u57df\u7edf\u8ba1\u5212\u5206\uff01\u7c7b\u8bd5\u4e8e\u6784\u9020Quad Trees! \u5199\u8d77\u6765\u4ee3\u7801\u4f1a\u957f\u4e9b\uff01", "#include ", "#define Max 100000000", "\nint a[Max+10];", "int cmp(const void *a, const void *b)", "\n{", "\n     int *x = (int *) a;", "\n     int *y = (int *) b;", "\n     return *x-*y;", "\n}", "int main()", "\n{", "\n     int n=0;", "\n     while(scanf(\u201c%d\u201d,&a[n])==1)     n++;", "\n     qsort(a,n,4,cmp);", "\n     for(int i=0;i\n     return 1;", "\n}", "\n 5\u3001\u6709A\u3001B\u3001C\u3001D\u56db\u4e2a\u4eba\uff0c\u8981\u5728\u591c\u91cc\u8fc7\u4e00\u5ea7\u6865\u3002\u4ed6\u4eec\u901a\u8fc7\u8fd9\u5ea7\u6865\u5206\u522b\u9700\u8981\u8017\u65f61\u30012\u30015\u300110\u5206\u949f\uff0c\u53ea\u6709\u4e00\u652f\u624b\u7535\uff0c\u5e76\u4e14\u540c\u65f6\u6700\u591a\u53ea\u80fd\u4e24\u4e2a\u4eba\u4e00\u8d77\u8fc7\u6865\u3002\u8bf7\u95ee\uff0c\u5982\u4f55\u5b89\u6392\uff0c\u80fd\u591f\u572817\u5206\u949f\u5185\u8fd9\u56db\u4e2a\u4eba\u90fd\u8fc7\u6865\uff1f", "\nSolution:\u5173\u952e\u662f\u65f6\u95f4\u6700\u957f\u7684\u4e24\u4e2a\u4eba\u5fc5\u987b\u540c\u65f6\u8fc7\u6865", "\nThe First Time\uff1a      A(1)\u548cB(2)\u8fc7\u6865\uff0cA(1)\u8fd4\u56de Cost\uff1a1+2", "\nThe Second Time\uff1a   C(5)\u548cD(10)\u8fc7\u6865\uff0cB(2)\u8fd4\u56de Cost\uff1a10+2", "\nThe Third Time     A(1)\u548cB(2)\u8fc7\u6865 Cost\uff1a2 ", "Total Time Cost\uff1a   (1+2)+(10+2)+2=17 minutes"], "title": "C++\u7b14\u8bd5\u9898\uff08\u4e8c\uff09"},
{"contents": ["\u4e00\u3001   \u5bf9\u9519\u9898\u3002\u5224\u65ad\u4ee5\u4e0b\u8bf4\u6cd5\u7684\u6b63\u786e\u6027\uff0c\u5728\u4e0b\u9762\u8868\u683c\u4e2d\u5bf9\u5e94\u7684\u7f16\u53f7\u4e0b\u9762\u5199\u4e0a\u201c\u5bf9\u201d\u6216\u201c\u9519\u201d\u3002\uff0820\u5206\uff0c\u6bcf\u4e2a\u9898\u76ee2\u5206\uff09", "\n\u9898\u53f7\t1\t2\t3\t4\t5\t6\t7\t8\t9\t10", "\n\u5bf9/\u9519\t\u5bf9\t\u9519\t\u5bf9\t\u9519\t\u9519\t\u5bf9\t\u9519\t\u5bf9\t\u9519\t\u5bf9", "\n1\uff0e  \u8bf4\u660e\u51fd\u6570\u539f\u578b\u65f6\u4e0d\u9700\u8981\u6307\u660e\u6bcf\u4e2a\u51fd\u6570\u53c2\u6570\u7684\u540d\u5b57\uff0c\u53ea\u9700\u8981\u8bf4\u660e\u6bcf\u4e2a\u53c2\u6570\u7684\u7c7b\u578b\u548c\u8fd4\u56de\u503c\u7c7b\u578b\u5c31\u53ef\u4ee5\u4e86\u3002", "\n2\uff0e  \u6240\u6709\u7684\u8868\u8fbe\u5f0f\u90fd\u6709\u503c\u3002", "\n3\uff0e  \u7a0b\u5e8f\u7684\u7f16\u8bd1\u662f\u4ee5\u6587\u4ef6\u4e3a\u5355\u4f4d\u7684\uff0c\u56e0\u6b64\u5c06\u7a0b\u5e8f\u5206\u5230\u591a\u4e2a\u6587\u4ef6\u4e2d\u53ef\u4ee5\u51cf\u5c11\u6bcf\u6b21\u5bf9\u7a0b\u5e8f\u4fee\u6539\u6240\u5e26\u6765\u7684\u7f16\u8bd1\u5de5\u4f5c\u91cf\u3002", "\n4\uff0e  \u7c7b\u7684\u9759\u6001\u6570\u636e\u6210\u5458\u9700\u8981\u5728\u5b9a\u4e49\u6bcf\u4e2a\u7c7b\u7684\u5bf9\u8c61\u65f6\u8fdb\u884c\u521d\u59cb\u5316\u3002", "\n5\uff0e  \u57fa\u7c7b\u4e2d\u88ab\u8bf4\u660e\u4e3aprotected\u548cprivate\u7684\u6210\u5458\u53ea\u80fd\u88ab\u5176\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u51fd\u6570\u8bbf\u95ee\uff0c\u4e0d\u80fd\u88ab\u5176\u5b83\u7684\u51fd\u6570\u8bbf\u95ee\u3002", "\n6\uff0e  \u5f53\u5c06\u4e00\u4e2a\u7c7bS\u5b9a\u4e49\u4e3a\u53e6\u4e00\u4e2a\u7c7bA\u7684\u53cb\u5143\u7c7b\u65f6\uff0c\u7c7bS\u7684\u6240\u6709\u6210\u5458\u51fd\u6570\u90fd\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u7c7bA\u7684\u6240\u6709\u6210\u5458\u3002", "\n7\uff0e  \u5f53\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u6570\u7ec4\u7c7b\u578b\u7684\uff0c\u4f20\u9012\u7684\u662f\u6570\u7ec4\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u5730\u5740\u3002", "\n8\uff0e  \u5982\u679c\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u51fd\u6570\u7684\u539f\u578b\u4e0e\u57fa\u7c7b\u4e2d\u88ab\u5b9a\u4e49\u4e3a\u865a\u51fd\u6570\u7684\u6210\u5458\u51fd\u6570\u539f\u578b\u76f8\u540c\uff0c\u90a3\u4e48\uff0c\u8fd9\u4e2a\u51fd\u6570\u81ea\u52a8\u7ee7\u627f\u57fa\u7c7b\u4e2d\u865a\u51fd\u6570\u7684\u7279\u6027\u3002", "\n9\uff0e  \u5b57\u7b26\u4e32\u2019hello,world\u201d\u5728\u5185\u5b58\u4e2d\u5b58\u653e\u65f6\uff0c\u5360\u752811\u4e2a\u5b57\u8282\u7684\u7a7a\u95f4\u3002", "\n10\uff0e              \u7528new\u52a8\u6001\u7533\u8bf7\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u5fc5\u987b\u7528delete\u6765\u91ca\u653e \u3002", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014", "\u4e8c\u3001\u7b80\u5355\u7f16\u7a0b\u9898\u3002\u6839\u636e\u7a0b\u5e8f\u8981\u6c42\uff0c\u5199\u51fa\u51fd\u6570\u7684\u5b8c\u6574\u5b9a\u4e49\u3002\uff08\u517125\u5206\uff09", "\n1\uff0e\uff08\u672c\u5c0f\u989815\u5206\uff09\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u627e\u51fa\u7ed9\u5b9a\u5b57\u7b26\u4e32\u4e2d\u6570\u5b57\u5b57\u7b26\uff08\u5373\u20190\u2019\u2014\u20189\u2019\u8fd910\u4e2a\u6570\u5b57\uff09\u7684\u4e2a\u6570\uff08\u5982\u5b57\u7b26\u4e32\u201dolympic2000\u201d\u4e2d\u6570\u5b57\u5b57\u7b26\u7684\u4e2a\u6570\u4e3a4\u4e2a\u3002\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a", "\n   int CalcDigital(char *str);", "\n  \u51fd\u6570\u53c2\u6570\uff1astr\u4e3a\u6240\u8981\u5904\u7406\u7684\u5b57\u7b26\u4e32\u3002", "\n  \u51fd\u6570\u8fd4\u56de\u503c\uff1a\u6240\u7ed9\u5b57\u7b26\u4e32\u4e2d\u6570\u5b57\u5b57\u7b26\u7684\u4e2a\u6570\u3002", "\n  int CalcDigital(char *str)", "\n  {", "\n//\u5728\u4e0b\u9762\u5199\u51fa\u7a0b\u5e8f\u7684\u5b9e\u73b0", "\n  }", "\n1\uff0e  \u7a0b\u5e8f\u4e3a\uff1a", "\nint CalcDigital(char *str)", "\n{", "\n  //\u5224\u65ad\u5b57\u7b26\u6307\u9488\u662f\u5426\u4e3a\u7a7a", "\n  if(str==NULL)", "\nreturn 0;", "\n  //\u8bb0\u5f55\u6570\u5b57\u5b57\u7b26\u4e2a\u6570\u7684\u53d8\u91cf", "\n  int num_of_digital=0;", "\n  //\u4f9d\u6b21\u68c0\u67e5\u5404\u4e2a\u5b57\u7b26\uff0c\u5982\u679c\u662f\u6570\u5b57\uff0c\u5219\u603b\u6570\u52a01", "\n  for(int i=0;str[ i ]!=0\u00d70;i++)", "\nif(str[ i ]=\u20190\u2019)", "\n  num_of_digital++;", "\n  //\u8fd4\u56de\u6570\u5b57\u5b57\u7b26\u4e2a\u6570", "\n  return num_of_digital;", "\n}", "2\uff0e\uff08\u672c\u5c0f\u989810\u5206\uff09\u7528\u9012\u5f52\u51fd\u6570\u5b8c\u6210\u4ee5\u4e0b\u8fd0\u7b97\uff1a", "\nsum(n)=12+22+\u2026+n2", "\n\u51fd\u6570\u7684\u539f\u578b\u5982\u4e0b\uff1a", "\n    long sum(int n);", "\n\u8be5\u51fd\u6570\u5b8c\u621012+22+\u2026+n2\u7684\u8fd0\u7b97\uff0c\u5e76\u8fd4\u56de\u8fd0\u7b97\u7ed3\u679c\uff0c\u5176\u4e2dn>0\u3002", "\n\u63d0\u793a\uff1a\u4f60\u53ef\u4ee5\u4f7f\u7528\u9012\u5f52\u8868\u8fbe\u5f0f\uff1asum(n)=sum(n-1)+n2", "\nlong sum(int n)", "\n{", "}", "2\uff0e \u7a0b\u5e8f\u4e3a\uff1a", "\nlong sum(int n)", "\n{", "\n  if(n==1)", "\nreturn 1;", "\n  else", "\nreturn n*n+sum(n-1);", "\n}", "\n\u4e09\u3001             \uff08\u672c\u5c0f\u989830\u5206\uff09", "\n  \u4e0b\u9762\u7684\u6587\u4ef6queue.h\u662f\u4e00\u4e2a\u961f\u5217\u7c7b\u6a21\u677fQueue\u7684\u5b8c\u6574\u5b9e\u73b0\u3002\u5728\u8fd9\u4e2a\u6587\u4ef6\u4e2d\u9996\u5148\u5b9a\u4e49\u4e86\u4e00\u4e2a\u961f\u5217\u5143\u7d20\u7c7b\u6a21\u677fQueueItem\uff0c\u7136\u540e\u5728\u8fd9\u4e2a\u7c7b\u7684\u57fa\u7840\u4e0a\u5b9a\u4e49\u4e86\u961f\u5217\u7c7b\u6a21\u677fQueue\u3002\u5728Queue\u4e2d\u4f7f\u7528\u94fe\u8868\u5b58\u653e\u961f\u5217\u7684\u5404\u4e2a\u5143\u7d20\uff0cfront\u6307\u9488\u6307\u5411\u94fe\u8868\u7684\u7b2c\u4e00\u4e2a\u8282\u70b9\u5143\u7d20\uff0cback\u6307\u9488\u6307\u5411\u94fe\u8868\u7684\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u5143\u7d20\uff0c\u6210\u5458\u51fd\u6570add()\u5c06\u4e00\u4e2a\u65b0\u8282\u70b9\u5143\u7d20\u52a0\u5165\u5230\u961f\u5217\u7ed3\u5c3e\uff0cremove()\u4ece\u961f\u5217\u5f00\u5934\u5220\u9664\u4e00\u4e2a\u8282\u70b9\u5143\u7d20\u3002\u4e3a\u65b9\u4fbf\u8d77\u89c1\uff0c\u7a0b\u5e8f\u4e2d\u52a0\u4e0a\u4e86\u884c\u53f7\u3002\u9605\u8bfb\u7a0b\u5e8f\uff0c\u6839\u636e\u7a0b\u5e8f\u540e\u9762\u7684\u95ee\u9898\u4f5c\u51fa\u76f8\u5e94\u89e3\u7b54\u3002", "\n/*****************\u6587\u4ef6queue.h**************************************/", "\n /******************************************************************/", "\n1           template", "\u95ee\u98982\uff1a\uff08\u672c\u5c0f\u98983\u5206\uff09\u9898\u4e2d\u7a0b\u5e8f\u7b2c1\u30012\u884c\u4e3a\u4ec0\u4e48\u8981\u8bf4\u660e\u4e00\u4e0b\u7c7b\u6a21\u677fQueue\uff1f\u5982\u679c\u6ca1\u6709\u8fd9\u4e24\u884c\u8bed\u53e5\uff0c\u7a0b\u5e8f\u8fd8\u6b63\u786e\u5417\uff1f", "\n\u7b54\uff1a", "\u95ee\u98983\uff1a\uff08\u672c\u5c0f\u98984\u5206\uff09\u7a0b\u5e8f\u7b2c22\u300123\u884c\u5404\u6709\u4e00\u4e2aconst\uff0c\u5b83\u4eec\u5404\u81ea\u8868\u793a\u4ec0\u4e48\u542b\u4e49\uff1f", "\n\u7b54\uff1a", "\u95ee\u98984\uff1a\uff08\u672c\u5c0f\u98983\u5206\uff09\u7a0b\u5e8f\u4e2d\u6a21\u677f\u7c7bQueue\u7684\u6790\u6784\u51fd\u6570\u4e3b\u8981\u505a\u4e86\u4ec0\u4e48\u4e8b\u60c5\uff1f\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u505a\uff1f", "\n\u7b54\uff1a", "\u95ee\u98985\uff1a\uff08\u672c\u5c0f\u98985\u5206\uff0c\u6bcf\u7b54\u5bf9\u4e00\u4e2a\u7ed91\u5206\uff09\u4e0b\u9762\u7684\u7a0b\u5e8f\u4f7f\u7528\u4e86queue.h\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u7c7b\u6a21\u677f\uff0c\u8bf4\u660e\u7a0b\u5e8f\u4e2d\u54ea\u4e9b\u5b9a\u4e49\u961f\u5217\u5bf9\u8c61\u7684\u8bed\u53e5\u662f\u4e0d\u6b63\u786e\u7684\uff0c\u54ea\u4e9b\u662f\u6b63\u786e\u7684\uff1f", "\n#include \u201cqueue.h\u201d", "void main()", "\n{", "\n  Queue  q1;                     //1", "\n  Queue", "class B: public A{", "\n//\u2026\u5176\u5b83\u6210\u5458", "\npublic:", "\n  void func() {cout\n  void func(int data) { cout\n  void func(char *str){ cout\n};", "\nint main(int argc,char *argv[])", "\n{", "\n  A *pA;", "\n  B b;", "\n  pA=&b;", "\n  pA->func(1);", "\n  pA->func(\u201chaha\u201d);", "\n  return 0;", "\n}", "\n/*******************************************************************/", "\n\u95ee\u98981\uff1a\uff08\u672c\u5c0f\u98984\u5206\uff09\u5728\u4e0b\u9762\u5199\u51fa\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\uff1a", "\u95ee\u98982\uff1a\uff08\u672c\u5c0f\u98982\u5206\uff09\u5982\u4e0b\u53e5\u6240\u793a\uff0c\u5728\u51fd\u6570main()\u4e2d\u901a\u8fc7pA\u8c03\u7528\u7c7bB\u4e2d\u5b9a\u4e49\u7684\u53c2\u6570\u8868\u4e3a\u7a7a\u7684\u51fd\u6570func() \uff1a", "\n  pA->func();", "\n\u662f\u5426\u6b63\u786e\uff1f", "\n\u7b54\uff1a\uff08\u6b63\u786e/\u4e0d\u6b63\u786e\uff09", " \u95ee\u98983\uff1a\uff08\u672c\u5c0f\u989810\u5206\uff09\u5982\u679c\u8981\u8bb0\u5f55\u5df2\u5c3c\u521b\u5efa\u7684A\u7c7b\u7684\u5b9e\u4f8b\uff08\u5bf9\u8c61\uff09\u7684\u4e2a\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u501f\u52a9\u4e8e\u7c7b\u7684\u9759\u6001\u6210\u5458\u3002\u4fee\u6539\u4e0a\u9762\u7c7bA\u7684\u5b9a\u4e49\uff0c\u4f7f\u5f97\u5b83\u5305\u542b\u4e00\u4e2a\u79c1\u6709\u7684\u9759\u6001\u6210\u5458object_count\uff0c\u8bb0\u5f55\u5c5e\u4e8e\u8be5\u7c7b\u7684\u5bf9\u8c61\u7684\u4e2a\u6570\uff0c\u7136\u540e\u4e3a\u7c7bA\u589e\u52a0\u5fc5\u8981\u7684\u6210\u5458\u51fd\u6570\uff0c\u4f7f\u5f97\u4e0b\u9762\u7684\u7a0b\u5e8f\uff1a", "\nvoid main()", "\n{", "\n  A *pA=new A[3];", "\n  coutGetObjectCount()\n  delete []pA;", "\n  cout\n}", "\n\u5f97\u5230\u7684\u8f93\u51fa\u4e3a\uff1a", "\nThere are 3 objects", "\nThere are 0 objects", "\n\u5728\u4e0b\u9762\u5199\u51fa\u7c7bA\u7684\u5b9a\u4e49\uff08\u5c06\u6240\u6709\u7684\u51fd\u6570\u6210\u5458\u5b9e\u73b0\u5199\u5728\u7c7b\u5b9a\u4e49\u4f53\u4e2d\uff09\uff1a", "\u5728\u4e0b\u9762\u5199\u51fa\u521d\u59cb\u5316\u7c7b\u7684\u9759\u6001\u6210\u5458object_count\u7684\u8bed\u53e5\uff1a", "\n\u7b54\u6848\uff1a", "\n\u95ee\u98981\uff1a", "\u7b54\uff1a\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a", "class B: 1", "class A: haha", "\u95ee\u98982\uff1a", "\u7b54\uff1a\u4e0d\u6b63\u786e\u3002", "\u95ee\u98983\uff1a\u7c7bA\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a", "class A{", "private:", "  static object_count;", "  //\u2026\u5176\u5b83\u6210\u5458", "public:", "  A(){ object_count++;}", "  ~A(){ object_count\u2014; }", "  static int GetObjectCount(){ return object_count; }", "//\u5176\u5b83\u51fd\u6570", "virtual void func(int data){cout\n", "void func(char *str){ cout\n", "};", "object_count\u7684\u521d\u59cb\u5316\u8bed\u53e5\u5982\u4e0b\uff1a", "int A::object_count=0;", "\n\u4e94\u3001\uff08\u672c\u9898\u51719\u5206\uff09", "\n\u4e0b\u9762\u7684\u7a0b\u5e8f\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7b80\u5355\u7684SmallInt\u7c7b\uff0c\u7528\u6765\u8868\u793a\u4ece-128\u5230127\u4e4b\u95f4\u7684\u6574\u6570\u3002\u7c7b\u7684\u552f\u4e00\u7684\u6570\u636e\u6210\u5458val\u5b58\u653e\u4e00\u4e2a-128\u5230127\uff08\u5305\u542b-128\u548c127\u8fd9\u4e24\u4e2a\u6570\uff09\u4e4b\u95f4\u7684\u6574\u6570\uff0c\u4e3a\u4e86\u65b9\u4fbf\uff0c\u7c7bSmallInt\u8fd8\u91cd\u8f7d\u4e86\u4e00\u4e9b\u8fd0\u7b97\u7b26\u3002\u9605\u8bfbSmallInt\u7684\u5b9a\u4e49\uff0c\u56de\u7b54\u9898\u76ee\u540e\u9762\u7684\u95ee\u9898\u3002", "\nclass SmallInt{", "\npublic:", "\n  SmallInt(int i=0);", "\n//\u91cd\u8f7d\u63d2\u5165\u548c\u62bd\u53d6\u8fd0\u7b97\u7b26", "\nfriend ostream &operator\nfriend istream &operator>>(istream &is, SmallInt &si);", "//\u91cd\u8f7d\u7b97\u672f\u8fd0\u7b97\u7b26", "\nSmallInt operator+(const SmallInt &si){return SmallInt(val+si.val);}", "\nSmallInt operator-(const SmallInt &si){return SmallInt(val-si.val);}", "\nSmallInt operator*(const SmallInt &si){return SmallInt(val*si.val);}", "\nSmallInt operator/(const SmallInt &si){return SmallInt(val/si.val);}", "\n//\u91cd\u8f7d\u6bd4\u8f83\u8fd0\u7b97\u7b26", "\nbool operator==(const SmallInt &si){return (val==si.val);}", "\nprivate:", "\n  char val;", "\n};", "\nSmallInt::SmallInt(int i)", "\n{", "\n  while(i>127)", "\ni-=256;", "\n  while(i\ni+=256;", "\n  val=i;", "\n}", "ostream &operator\n{", "\n  os\n  return os;", "\n}", "istream &operator>>(istream &is,SmallInt &si)", "\n{", "\n  int tmp;", "\n  is>>tmp;", "\n  si=SmallInt(tmp);", "\n  return is;", "\n}", "\n\u95ee\u98981\uff1a\uff08\u672c\u5c0f\u98984\u5206\uff09\u4e0a\u9762\u7684\u7c7b\u5b9a\u4e49\u4e2d\uff0c\u91cd\u8f7d\u7684\u63d2\u5165\u8fd0\u7b97\u7b26\u548c\u62bd\u53d6\u8fd0\u7b97\u7b26\u88ab\u5b9a\u4e49\u4e3a\u7c7b\u7684\u53cb\u5143\u51fd\u6570\uff0c\u80fd\u4e0d\u80fd\u5c06\u8fd9\u4e24\u4e2a\u8fd0\u7b97\u7b26\u5b9a\u4e49\u4e3a\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff1f\u5982\u679c\u80fd\uff0c\u5199\u51fa\u51fd\u6570\u539f\u578b\uff0c\u5982\u679c\u4e0d\u80fd\uff0c\u8bf4\u660e\u7406\u7531\u3002", "\n\u7b54\uff1a", "\u95ee\u98982\uff1a\uff08\u672c\u5c0f\u98985\u5206\uff09\u4e3a\u7c7bSmallInt\u589e\u52a0\u4e00\u4e2a\u91cd\u8f7d\u7684\u8fd0\u7b97\u7b26\u2019+=\u2019\uff0c\u51fd\u6570\u539f\u578b\uff1a", "\nclass SmallInt{", "\npublic:", "\nSmallInt &operator +=(const SmallInt &si);", "\n//\u5176\u5b83\u51fd\u6570\u2026\u2026", "\nprivate:", "\n  char val;", "\n};", "\n\u8be5\u51fd\u6570\u5c06\u8fd4\u56de\u5bf9\u5f53\u524d\u5bf9\u8c61\u7684\u5f15\u7528\u3002\u5982\uff1a", "\nSmallInt si1(20),si2(13);", "\n\u5219\u8868\u8fbe\u5f0f\uff1a", "\n  si1+=si2", "\n\u5c06\u8fd4\u56de\u5bf9\u8c61si1\u7684\u5f15\u7528\uff0c\u5e76\u4e14si1\u4e2d\u7684\u7684\u503c\u662fsi1.val\u548csi2.val\u7684\u503c\u4e4b\u548c\uff08\u4f46\u5fc5\u987b\u6b63\u89c4\u5316\u4e3a\u5728-128\u81f3127\u4e4b\u95f4\uff09\u3002", "\n\u5728\u4e0b\u9762\u5199\u51fa\u91cd\u8f7d\u7684\u8fd0\u7b97\u7b26+=\u7684\u5b9e\u73b0\uff1a", "\n\u7b54\u6848\uff1a", "\n\u95ee\u98981\uff1a", "\u7b54\uff1a\u4e0d\u80fd\u5c06\u63d2\u5165\u8fd0\u7b97\u7b26\u548c\u62bd\u53d6\u8fd0\u7b97\u7b26\u5b9a\u4e49\u4e3a\u7c7b\u7684\u6210\u5458\u51fd\u6570\u3002", "\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u8fd0\u7b97\u7b26\u5bf9\u7b2c\u4e00\u4e2a\u8fd0\u7b97\u6570\u6709\u7279\u6b8a\u7684\u8981\u6c42\uff0c\u5373\u5fc5\u987b\u5206\u522b\u662fostream\u548cistream\u7c7b\u7684\u5bf9\u8c61\uff0c\u800c\u4e0d\u80fd\u662f\u7528\u6237\u81ea\u5df1\u5b9a\u4e49\u7684\u5176\u5b83\u7c7b\uff0c\u800c\u7c7b\u7684\u6210\u5458\u51fd\u6570\u9ed8\u8ba4\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u6307\u5411\u8be5\u7c7b\u5bf9\u8c61\u7684\u6307\u9488\u7c7b\u578b\uff0c\u6240\u4ee5\u4e0d\u7b26\u5408\u63d2\u5165\u548c\u62bd\u53d6\u8fd0\u7b97\u7b26\u7684\u8981\u6c42\u3002", "\u95ee\u98982\uff1a", "\u91cd\u8f7d\u7684\u8fd0\u7b97\u7b26\u7684\u5b9e\u73b0\u5982\u4e0b\uff1a", "SmallInt &SmallInt::operator+=(const SmallInt &si)", "{", "  SmallInt tmp(val+si.val);", "  val=tmp.val;", "  return *this;", "}", "\u6216", "SmallInt &SmallInt::operator+=(const SmallInt &si)", "{", "  val+=si.val;", "  if(val>127)", "val-=256;", "  if(val\n", "val=256;", "  return *this;", "}"], "title": "C++\u7b14\u8bd5\u9898\uff08\u4e00\uff09"},
{"contents": ["\u4e00\uff0e\u586b\u7a7a\u9898 (26 \u5206 )", "\n1 \uff0e WIN32 \u5e73\u53f0\u4e0b\uff0c sizeof(short) = __2__ \uff0c sizeof(int) = __4__ \uff0c sizeof(long) = __4__ \u3002 (3 \u5206 ) /// sizeof(char) = 1;sizeof(double) = 8;sizeof(float) = 4;", "\n2 \uff0e\u8bf7\u7ed9\u51fa\u5982\u4e0b\u7a0b\u5e8f\u7684\u7ed3\u679c (2 \u5206 )", "\nint a = 3;", "\nint b = a \na = __3__ \uff0c b = __24__ \u3002", "\n3 \uff0e\u8bf7 \u7ed9\u51fa\u5982\u4e0b\u7a0b\u5e8f\u7684\u7ed3\u679c (2 \u5206 )", "\nint aaa = 0x01;", "\nhtonl(aaa) = _16^6___ \u3002/// 0x01000000 \u5341\u516d\u8fdb\u5236\u6570\uff0c\u8f6c\u6362\u4e3a\u5341\u8fdb\u5236\u4e3a16\u76846\u6b21\u65b9\uff0c\u537316777216", "\n4 \uff0e\u8bf7\u7ed9\u51fa\u5982\u4e0b\u7a0b\u5e8f\u7684\u7ed3\u679c (2 \u5206)", "\n#define MAX_NUM 100+200", "\nint nTemp = MAX_NUM*10; ///\u5b8f\u7684\u529f\u80fd\u53ea\u662f\u7b80\u5355\u7684\u5b57\u7b26\u66ff\u6362\uff0cMAX_NUM*10\u8868\u793a100+200*10\uff0c\u6240\u4ee5\u7528\u5b8f\u8981\u5c0f\u5fc3", "\n\u5219 Temp = __2100__ \u3002", "\n5 \uff0e\u8bf7\u7ed9\u51fa\u5982\u4e0b\u7a0b\u5e8f\u7684\u7ed3\u679c (3 \u5206 )", "\nchar szTemp[1000] = \"\";", "\nint nLen1 = sizeof(szTemp);", "\nint nLen2 = strlen(szTemp);/// strlen\u7684\u8ba1\u7b97\u7ed3\u679c\u4e0d\u5305\u542b\u7ed3\u675f\u7b26'\\0'", "\nstrcpy(szTemp, \"abc\");", "\nint nLen3 = sizeof(szTemp);", "\nint nLen4 = strlen(szTemp);", "\nint nTemp[100];", "\nint *pTemp = nTemp;", "\nint nLen5 = sizeof(pTemp);/// \u572832\u4f4d\u7cfb\u7edf\u4e2d\uff0c\u6307\u9488\u53ea\u53604\u4f4d\u5b57\u8282\uff0c\u4e0d\u7ba1\u5b83\u6307\u5411\u5730\u5740\u7684\u5185\u5bb9\u6709\u591a\u5927!", "\nchar szResult[200] = \"\";", "\nsprintf(szResult, \"%d,%d,%d,%d,%02d.\", nLen1, nLen2, nLen3, nLen4, nLen5);", "\n\u5219 szResult = _1000,0,1000,3,04___ \u3002", "\n6 \uff0e MFC \u4e2d\uff0c\u5927\u90e8\u5206\u7c7b\u662f\u4ece\u54ea\u4e2a\u7c7b\u7ee7\u627f\u800c\u6765\uff08 CCmdTarget \u3001 CObject \u3001 CWinApp \u3001 CWnd \uff09\uff1f (2 \u5206 )__CObject __", "\n7 \uff0e\u5185\u5b58\u662f\u8fdb\u7a0b\u8303\u56f4 or \u7ebf\u7a0b\u8303\u56f4\uff1b __\u8fdb\u7a0b__ /// \u8fdb\u7a0b\u6709\u72ec\u7acb\u7684\u5185\u5b58\uff0c\u662f\u7ebf\u7a0b\u7684\u7ba1\u7406\u8005\uff0c\u7ebf\u7a0b\u662f\u8fdb\u7a0b\u7684\u6267\u884c\u8005", "\nCPU \u8c03\u5ea6\u65f6\uff0c\u9488\u5bf9\u8fdb\u7a0b or \u7ebf\u7a0b\uff1b __\u7ebf\u7a0b__   /// \u7ebf\u7a0b\u624d\u662f\u6267\u884c\u8005", "\n\u51fd\u6570\u8c03\u7528\u5806\u6808\uff0c\u9488\u5bf9\u8fdb\u7a0b or \u7ebf\u7a0b\u3002 _\u8fdb\u7a0b___(3 \u5206 ) /// \u8fdb\u7a0b\u624d\u6709\u72ec\u7acb\u5185\u5b58\uff0c\u5806\u6808\u5c5e\u4e8e\u5185\u5b58\u7684\u4e00\u90e8\u5206", "\n8 \uff0e\u8c03\u7528\u51fd\u6570 bbb \u540e\uff0c\u8f93\u51fa\u662f\u4ec0\u4e48 (4 \u5206 )", "\nvoid ccc(int x) /// \u53c2\u6570\u4e3a\u6570\u503c\u4f20\u9012\uff0c\u4e0d\u662f\u5f15\u7528\u4f20\u9012", "\n{", "\n       char szTemp[10] = \"\";", "       x = 2;", "\n       sprintf(szTemp, \"%d,\", x);", "\n       afxDump \n", "       if(x = 3) ///\u6ce8\u610f\u8fd9\u91cc\u4e0d\u662f\"==\"\u800c\u662f\"=\"\uff0c\u6240\u4ee5if\u6761\u4ef6\u662f\u6210\u7acb\u7684", "\n       {", "\n              int x = 4;", "\n              sprintf(szTemp, \"%d,\", x);", "\n              afxDump \n       }", "       sprintf(szTemp, \"%d,\", x);", "\n       afxDump \n}", "void bbb()", "\n{", "\n       char szTemp[10] = \"\";", "       int x = 7;", "       ccc(x);", "       sprintf(szTemp, \"%d,\", x);", "\n       afxDump \n}", "\u4e8c\uff0e\u6539\u9519\u9898 ( \u603b\u5171 15 \u5206 , \u6bcf\u9898 5 \u5206 ) \u3002", "\n1 \uff0e\u4e0b\u9762\u4ee3\u7801\u6709\u4f55\u9519\u8bef", "\nvoid func1()", "\n{", "\n       int *pa = NULL;", "\n       func2(pa); /// \u51fd\u6570\u8fd4\u56de\u540epa\u4ecd\u7136\u662f\u7a7a\u6307\u9488", "\n       delete pa; /// pa\u4ecd\u7136\u662f\u7a7a\u6307\u9488\uff0cpb\u7533\u8bf7\u7684\u7a7a\u95f4\u5e76\u6ca1\u6709\u88abdelete\u6389", "\n}", "\nvoid func2(int *pb)", "\n{", "\n       pb = new int(5); /// pb\u91cd\u65b0\u7533\u8bf7\u4e86\u5806\u7a7a\u95f4", "\n}", "\n2 \uff0e\u4e0b\u9762\u4ee3\u7801\u6709\u4f55\u9519\u8bef", "\nvoid func2(int *value)", "\n{", "\n       *value = 2; /// value\u4e3a\u7a7a\u6307\u9488\uff0c\u4e0d\u80fd\u88ab\u53d6\u503c\uff0c\u6240\u4ee5*value\u662f\u9519\u8bef\u7684", "\n}", "\nvoid func1()", "\n{", "\n       int *p = 0;", "\n       func2(p);", "\n}", "\n3 \uff0e", "\nint func1(int& b) /// \u53c2\u6570b\u7684\u7c7b\u578b\u7684\u6574\u578b", "\n{", "\n       return 0;", "\n}", "\nvoid func2()", "\n{", "\n       int bbb = 3;", "\n       func1(&bbb); /// \u51fd\u6570\u53c2\u6570\u7684\u5f15\u7528\u8c03\u7528\u4e0d\u9700\u8981\u7528\u7b26\u53f7\"&\"", "\n       func1(bbb);", "\n}", "\nfunc2 \u4e2d\u6709\u4f55\u9519\u8bef\uff0c func1 \u7684\u53c2\u6570 b \u7684\u7c7b\u578b\u662f\u4ec0\u4e48\u3002", "\n\u4e09\uff0e\u7b80\u7b54\u9898 (64 \u5206 )", "\nPS:\u4ee5\u4e0b\u7b54\u6848\u662f\u968f\u7b14\u6240\u5199\uff0c\u8bf7\u8bfb\u8005\u505a\u8fdb\u4e00\u6b65\u7684\u6df1\u5165\u4e86\u89e3\u3002", "\n1. \u8bf7\u7b80\u8ff0 C \u3001 C++ \u3001 VC \u3001 MFC \u5728\u6982\u5ff5\u4e0a\u7684\u533a\u522b (4 \u5206 )", "\n\u7b54\uff1aC\u662f\u9762\u5411\u8fc7\u7a0b\u7f16\u7a0b\u7684\u8bed\u8a00\uff1b", "\n    C++\u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u8bed\u8a00\uff1b", "\n    VC\u662f\u5fae\u8f6f\u63d0\u4f9b\u7684\u65b9\u4fbf\u4e8e\u5f00\u53d1C++\u7a0b\u5e8f\u7684\u4e00\u5957\u5f00\u53d1\u5de5\u5177\u3002", "\n    MFC\uff08Microsoft Function Class\uff09\uff0c\u662f\u5fae\u8f6f\u63d0\u4f9b\u7684\u4e00\u5957\u51fd\u6570\u7c7b\u5e93\uff0c\u91cc\u9762\u5c01\u88c5\u4e86\u8bb8\u591aWindows API\u51fd\u6570\uff0c\u65b9\u4fbf\u5f00\u53d1\u8005\u8c03\u7528\u3002", "\n   2 \uff0e\u8bf7\u5199\u4e00\u4e2a\u51fd\u6570\u91cd\u8f7d\u7684\u7b80\u5355\u4f8b\u5b50 (4 \u5206 )", "\n\u7b54\uff1a", "\nint add(int a,int b)", "\n{", "\n    return (a + b);", "\n}", "\n\u51fd\u6570\u91cd\u8f7d\uff1a/// \u51fd\u6570\u91cd\u8f7d\u662f\u6307\u51fd\u6570\u540d\u76f8\u540c\uff0c\u4f46\u53c2\u6570\u7c7b\u578b\u6216\u8fd4\u56de\u503c\u53ef\u80fd\u4e0d\u540c\u7684\u51fd\u6570\u3002", "\nfloat add(float a,float b)", "\n{", "\n    return (a + b);", "\n}", "\n3. \u7528\u4ec0\u4e48\u51fd\u6570\u5f00\u542f\u65b0\u8fdb\u7a0b\u3001\u7ebf\u7a0b\u3002 (4 \u5206 )", "\n\u7b54\uff1aCreateProccess()\u521b\u5efa\u8fdb\u7a0b\uff1b", "\nCreateThread()\u521b\u5efa\u7ebf\u7a0b", "\nMFC\u4e2d\u8fd8\u63d0\u4f9b\u4e86_beginthread()\u4e0e_beginthreadex()\u51fd\u6570\u521b\u5efa\u7ebf\u7a0b", "4.SendMessage \u548c PostMessage \u6709\u4ec0\u4e48\u533a\u522b (4 \u5206 )", "\n\u7b54\uff1aSendMessage\uff1a\u53d1\u9001\u6d88\u606f\u540e\uff0c\u7b49\u5f85\u6d88\u606f\u5904\u7406\u5b8c\u6bd5\u540e\u624d\u7ee7\u7eed\u6267\u884c\u81ea\u8eab\u7684\u7a0b\u5e8f\u3002", "\nPostMessage\uff1a\u53d1\u9001\u6d88\u606f\u540e\u4e0d\u7b49\u5f85\u6d88\u606f\u5904\u7406\u5373\u7ee7\u7eed\u6267\u884c\u81ea\u8eab\u7684\u7a0b\u5e8f\u3002", "5.WaitForSingleObject \u6709\u4f55\u4f5c\u7528\uff1b m_pThrd \u7684\u7c7b\u578b\u662f CWinThread* \u65f6\uff0c WaitForSingleObject(m_pThrd->m_hThread, INFINITE); \u6709\u4f55\u4f5c\u7528\u3002 (4 \u5206 )", "\n\u7b54\uff1aWaitForSingleObject\u662f\u8868\u793a\u7b49\u5f85\u7ebf\u7a0b\u7684\u4e00\u4e2a\u51fd\u6570\u3002", "\n\u53c2\u6570\u4e3aINFINITE\u8868\u793a\u4e00\u76f4\u7b49\u5f85\u7ebf\u7a0bCWinThread\u6267\u884c\u7ed3\u675f\u540e\uff0c\u518d\u7ee7\u7eed\u5904\u7406\u81ea\u8eab\u7a0b\u5e8f\u3002", "6. __stdcall \u3001 __cdecl \u3001 __pascal \u5728\u4ec0\u4e48\u65b9\u9762\u6709\u6240\u4e0d\u540c\u3002 (4 \u5206 )", "\n\u7b54\uff1a\u8fd9\u4e9b\u90fd\u662f\u4e00\u4e9b\u51fd\u6570\u53c2\u6570\u7684\u8c03\u7528\u7ea6\u5b9a\uff0c\u544a\u8bc9\u7f16\u8bd1\u5668\u51fd\u6570\u53c2\u6570\u538b\u6808\u7684\u987a\u5e8f\uff0c\u4ee5\u53ca\u538b\u5165\u5806\u6808\u7684\u5185\u5bb9\u7531\u8c01\u6765\u6e05\u9664\uff0c\u662f\u8c03\u7528\u8005\u8fd8\u662f\u51fd\u6570\u672c\u8eab\u6e05\u9664\u5806\u6808\u7684\u5185\u5bb9\u3002\u7b80\u5355\u5217\u8868\u5982\u4e0b\uff1a", "\nDirective  Parameter order  Clean-up Passes parameters  in registers?", "\npascal     Left-to-right    Routine                     No", "\ncdecl      Right-to-left    Caller                      No", "\nstdcall    Right-to-left    Routine                     No", "7 \uff0e\u8bf7\u628a\u4e0b\u8ff0\u4ee3\u7801\u52a0\u4e0a\u5f02\u5e38\u5904\u7406\u3002 (6 \u5206 )", "\nint MyWriteFile(CString strFileName, CString strText)", "\n{", "\n       int nRet = 0;", "       CFile myFile;", "\n       myFile.Open(strFileName, CFile::modeWrite|CFile::shareExclusive|CFile::modeCreate, NULL);", "       int nLen = strText.GetLength();", "\n       myFile.Write((char*)(LPCSTR)strText, nLen);", "       myFile.Close();", "       return nRet;", "\n}", "\n\u7b54\uff1a", "\nint MyWriteFile(CString strFileName, CString strText)", "\n{", "\n       int nRet = 0;", "       CFile myFile;", "\n       __try", "\n      {", "\n        nRet = myFile.Open(strFileName,\\", "\n               CFile::modeWrite|CFile::shareExclusive|CFile::modeCreate, NULL);", "\n        if(!nRet)", "\n        {", "\n            /// \u8f93\u51fa\u5f02\u5e38\u4fe1\u606f", "\n            __leave;/// \u7ed3\u675ftry\u5757\uff0c\u8df3\u5230__finaly\u4ee3\u7801\u5757", "\n        }", "\n        int nLen = strText.GetLength();", "\n        nRet = myFile.Write((char*)(LPCSTR)strText, nLen);", "\n        if(!nRet)", "\n        {", "\n            /// \u8f93\u51fa\u5f02\u5e38\u4fe1\u606f", "\n            __leave;/// \u7ed3\u675ftry\u5757\uff0c\u8df3\u5230__finaly\u4ee3\u7801\u5757", "\n        }", "\n      }", "\n      __finaly", "\n     {", "\n         myFile.Close();", "\n     }", "\n     return nRet;", "\n}", "\n8 \uff0e\u8bf7\u89e3\u91ca\u201c func \u201d\u4e3a\u4f55\u79cd\u7c7b\u578b\uff0c\u8fd9\u79cd\u7c7b\u578b\u7684\u4f5c\u7528\u4ec0\u4e48\uff0c\u53d8\u91cf ttt \u7684\u503c\u662f\u591a\u5c11\uff1f (6 \u5206 )", "\ntypedef int (*func)(int, int*);", "\nint xxx(int a, int *p)", "\n{", "\n       return a + *p;", "\n}", "\nint dowork(func aaa, int bbb, int *ccc)", "\n{", "\n       return aaa(bbb, ccc);", "\n}", "\nint sss = 4;", "\nint ttt = dowork(&xxx, 3, &sss);", "\n\u7b54\uff1afunc\u8868\u793a\u4e00\u4e2a\u51fd\u6570\u6307\u9488\uff0c\u5b83\u6307\u5411\u53c2\u6570\u4e3aint\uff0cint*\uff0c\u8fd4\u56de\u503c\u4e3aint\u7684\u51fd\u6570\u3002ttt\u7684\u503c\u4e3a7", "\n9 \uff0e\u8bf7\u95ee\u4e0b\u8ff0\u4ee3\u7801\u4e2d : int operator+(\u2026 \uff09\u8d77\u4ec0\u4e48\u4f5c\u7528\uff1f this \u662f\u4ec0\u4e48\uff1f ccc \u7684\u503c\u6700\u7ec8\u4e3a\u591a\u5c11\uff1f (6 \u5206 )", "\nclass Fruit", "\n{", "\npublic:", "\n       Fruit()", "\n       {", "\n              weight = 2;", "\n       }", "\n       Fruit(int w)", "\n       {", "\n              weight = w;", "\n       }", "\n       int operator+(Fruit f)", "\n       {", "\n              return this->weight * f.weight;", "\n       }", "\nprivate:", "\n       int weight;", "\n};", "\n       Fruit aaa;", "\n       Fruit bbb(4);", "\n       int ccc = aaa + bbb;", "\n\u7b54\uff1aint operator+(\u2026 \uff09\u8868\u793a\u91cd\u8f7d\u7c7b\u7684\u201c+\u201d\u53f7\u8fd0\u7b97\u7b26\uff0cthis\u8868\u793a\u5bf9\u8c61\u672c\u8eab\u7684\u6307\u9488\uff0c\u672c\u4f8b\u4e2d\u5b83\u6307\u5411\u7c7b\u7684\u5bf9\u8c61aaa\uff1bccc\u6700\u7ec8\u7684\u7ed3\u679c\u4e3a8(8 = 2 * 4)\u3002", "10. \u8bf7\u89e3\u91ca\u4e0b\u9762\u4ee3\u7801\u91c7\u7528\u4e86\u4f55\u79cd C++ \u7279\u6027\uff08 C \u8bed\u8a00\u4e0d\u5177\u5907\uff09\uff0c\u4f5c\u7528\u662f\u4ec0\u4e48\uff1f (6 \u5206 )", "\ntemplate", "11 \uff0e\u8bf7\u89e3\u91ca aaa.h \u4e2d\u4e0b\u9762\u4ee3\u7801\u7684\u529f\u80fd (5 \u5206 )", "\n#if !defined(AFX_MYSUDU_H__9B952BEA_A051_4026_B4E5_0598A39D2DA4__INCLUDED_)", "\n#define AFX_MYSUDU_H__9B952BEA_A051_4026_B4E5_0598A39D2DA4__INCLUDED_", "\n\u2026 \u2026", "\n#endif", "\n\u7b54\uff1a\u8fd9\u662f\u9884\u5904\u7406\u547d\u4ee4\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u591a\u6b21\u5305\u542b\u6b64\u5934\u6587\u4ef6\u65f6\uff0c\u53ea\u7f16\u8bd1\u4e00\u6b21\u4ee3\u7801\u3002 ", "12 \uff0e CMemoryState \u4e3b\u8981\u529f\u80fd\u662f\u4ec0\u4e48 (5 \u5206 )", "\n\u7b54\uff1a\u7528\u4e8e\u68c0\u6d4b\u5185\u5b58\u6cc4\u9732\u3002", "13 \uff0e\u8bf7\u9605\u8bfb\u4e0b\u8ff0\u4ee3\u7801\uff0c\u5199\u51fa\u7a0b\u5e8f\u6267\u884c\u7684\u7ed3\u679c\uff08 6 \u5206\uff09", "\n#include ", "class CBase", "\n{", "\npublic:", "\n  virtual void print()", "\n  {", "\n    cout\n  }", "\n  void DoPrint()", "\n  {", "\n    print();", "\n  }", "\n};", "class CChild1: public CBase", "\n{", "\npublic:", "\n  virtual void print()", "\n  {", "\n    cout\n  }", "\n};", "class CChild2: public CBase", "\n{", "\npublic:", "\n  virtual void print()", "\n  {", "\n    cout\n  }", "\n};", "void DoPrint(CBase *base)", "\n{", "\n  base->DoPrint();", "\n}", "void main()", "\n{", "\n  CBase* base = new CBase();", "\n  CChild1* child1 = new CChild1();", "\n  CChild2* child2 = new CChild2();", "\n  DoPrint(child1);", "\n  DoPrint(child2);", "\n  DoPrint(base);", "  delete base;", "\n  base = child1;", "\n  base->print();", "\n  delete child1;", "\n  delete child2;", "\n}", "\n\u7b54\uff1a", "\nchild1", "\nchild2", "\nbase", "\nchild1", "\n\u8fd9\u662fC++\u4e2d\u7c7b\u7684\u865a\u51fd\u6570\u5b9e\u73b0\u591a\u6001\u7684\u4e00\u4e2a\u5b9e\u4f8b\u3002", "1\uff0e\u865a\u51fd\u6570\u548c\u7eaf\u865a\u51fd\u6570\u53ef\u4ee5\u5b9a\u4e49\u5728\u540c\u4e00\u4e2a\u7c7b(class)\u4e2d\uff0c\u542b\u6709\u7eaf\u865a\u51fd\u6570\u7684\u7c7b\u88ab\u79f0\u4e3a\u62bd\u8c61\u7c7b\uff08abstract class\uff09\uff0c\u800c\u53ea\u542b\u6709\u865a\u51fd\u6570\u7684\u7c7b\uff08class\uff09\u4e0d\u80fd\u88ab\u79f0\u4e3a\u62bd\u8c61\u7c7b\uff08abstract class\uff09\u3002", "\n   2\uff0e \u865a\u51fd\u6570\u53ef\u4ee5\u88ab\u76f4\u63a5\u4f7f\u7528\uff0c\u4e5f\u53ef\u4ee5\u88ab\u5b50\u7c7b\uff08sub class\uff09\u91cd\u8f7d\u4ee5\u540e\u4ee5\u591a\u6001\u7684\u5f62\u5f0f\u8c03\u7528\uff0c\u800c\u7eaf\u865a\u51fd\u6570\u5fc5\u987b\u5728\u5b50\u7c7b\uff08sub class\uff09\u4e2d\u5b9e\u73b0\u8be5\u51fd\u6570\u624d\u53ef\u4ee5\u4f7f\u7528\uff0c\u56e0\u4e3a\u7eaf\u865a\u51fd\u6570\u5728\u57fa\u7c7b\uff08base class\uff09", "\n\u53ea\u6709\u58f0\u660e\u800c\u6ca1\u6709\u5b9a\u4e49\u3002", "\n   3\uff0e \u865a\u51fd\u6570\u548c\u7eaf\u865a\u51fd\u6570\u90fd\u53ef\u4ee5\u5728\u5b50\u7c7b\uff08sub class\uff09\u4e2d\u88ab\u91cd\u8f7d\uff0c\u4ee5\u591a\u6001\u7684\u5f62\u5f0f\u88ab\u8c03\u7528\u3002", "\n   4\uff0e\u865a\u51fd\u6570\u548c\u7eaf\u865a\u51fd\u6570\u901a\u5e38\u5b58\u5728\u4e8e\u62bd\u8c61\u57fa\u7c7b\uff08abstract base class -ABC\uff09\u4e4b\u4e2d\uff0c\u88ab\u7ee7\u627f\u7684\u5b50\u7c7b\u91cd\u8f7d\uff0c\u76ee\u7684\u662f\u63d0\u4f9b\u4e00\u4e2a\u7edf\u4e00\u7684\u63a5\u53e3\u3002", "\n   5\uff0e\u865a\u51fd\u6570\u7684\u5b9a\u4e49\u5f62\u5f0f\uff1avirtual  void funtion1(int param1,int param2,\u2026);", "\n       \u7eaf\u865a\u51fd\u6570\u7684\u5b9a\u4e49\u5f62\u5f0f\uff1avirtual void funtion1(int param1,int param2,\u2026) = 0;", "\n       \u5728\u865a\u51fd\u6570\u548c\u7eaf\u865a\u51fd\u6570\u7684\u5b9a\u4e49\u4e2d\u4e0d\u80fd\u6709static\u6807\u8bc6\u7b26\uff0c\u539f\u56e0\u5f88\u7b80\u5355\uff0c\u88abstatic\u4fee\u9970\u7684\u51fd\u6570\u5728\u7f16\u8bd1\u65f6\u5019\u8981\u6c42\u524d\u671fbind,\u7136\u800c\u865a\u51fd\u6570\u5374\u662f\u52a8\u6001\u7ed1\u5b9a\uff08run-time bind\uff09\uff0c\u800c\u4e14\u88ab\u4e24\u8005\u4fee\u9970\u7684\u51fd\u6570\u751f\u547d\u5468\u671f\uff08life recycle\uff09\u4e5f\u4e0d\u4e00\u6837\u3002", "\n   6. \u5982\u679c\u4e00\u4e2a\u7c7b\u4e2d\u542b\u6709\u7eaf\u865a\u51fd\u6570\uff0c\u90a3\u4e48\u4efb\u4f55\u8bd5\u56fe\u5bf9\u8be5\u7c7b\u8fdb\u884c\u5b9e\u4f8b\u5316\u7684\u8bed\u53e5\u90fd\u5c06\u5bfc\u81f4\u9519\u8bef\u7684\u4ea7\u751f\uff0c\u56e0\u4e3a\u62bd\u8c61\u57fa\u7c7b\u662f\u4e0d\u80fd\u88ab\u76f4\u63a5\u8c03\u7528\u7684\u3002\u5fc5\u987b\u88ab\u5b50\u7c7b\u7ee7\u627f\u91cd\u8f7d\u4ee5\u540e\uff0c\u6839\u636e\u8981\u6c42\u8c03\u7528\u5176\u5b50\u7c7b\u7684\u65b9\u6cd5\u3002", "\n   \u57fa\u7c7b:", "\nclass A", "\n{", "\n    public:", "\n    A();", "\n   void f1();", "\n   virtual void f2();", "\n   virtual void f3()=0;", "\n   virtual ~A();", "\n};", "\n\u5b50\u7c7b:", "\nclass B : public A", "\n{", "\n   public:", "\n   B();", "\n   void f1();", "\n   void f2();", "\n   void f3();", "\n   virtual ~B();", "\n};", "\n\u4e3b\u51fd\u6570:", "\nint main(int argc, char* argv[])", "\n{", "\n   A *m_j=new B();", "\n   m_j->f1();", "\n   m_j->f2();", "\n   m_j->f3();", "\n   delete m_j;", "\n   return 0;", "\n}", "\nf1()\u662f\u4e00\u4e2a\u666e\u901a\u7684\u91cd\u8f7d.", "\n\u8c03\u7528m_j->f1();\u4f1a\u53bb\u8c03\u7528A\u7c7b\u4e2d\u7684f1(),\u5b83\u662f\u5728\u6211\u4eec\u5199\u597d\u4ee3\u7801\u7684\u65f6\u5019\u5c31\u4f1a\u5b9a\u597d\u7684.", "\n\u4e5f\u5c31\u662f\u6839\u636e\u5b83\u662f\u7531A\u7c7b\u5b9a\u4e49\u7684,\u8fd9\u6837\u5c31\u8c03\u7528\u8fd9\u4e2a\u7c7b\u7684\u51fd\u6570.", "\nf2()\u662f\u865a\u51fd\u6570.", "\n\u8c03\u7528m_j->f2();\u4f1a\u53bb\u8c03\u7528B\u7c7b\u4e2d\u7684f2(),\u800c\u4e0d\u662fA\u7c7b\u7684f2(),\u8fd9\u662f\u7531\u4e8enew\u4e86B\u7c7b\u7684", "\n\u5bf9\u8c61.", "\nf3()\u4e0ef2()\u4e00\u6837,\u53ea\u662f\u5728\u57fa\u7c7b\u4e2d\u4e0d\u9700\u8981\u5199\u51fd\u6570\u5b9e\u73b0."], "title": "C++/MFC \u8bd5\u9898"},
{"contents": ["111.\u63d2\u5165\u6392\u5e8f\u548c", "\n\u63d2\u5165\u6392\u5e8f\u57fa\u672c\u601d\u60f3\uff1a\uff08\u5047\u5b9a\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff09\u4f9d\u6b21\u4ece\u540e\u9762\u62ff\u4e00\u4e2a\u6570\u548c\u524d\u9762\u5df2\u7ecf\u6392\u597d\u5e8f\u7684\u6570\u8fdb\u884c\u6bd4\u8f83\uff0c\u6bd4\u8f83\u7684\u8fc7\u7a0b\u662f\u4ece\u5df2\u7ecf\u6392\u597d\u5e8f\u7684\u6570\u4e2d\u6700\u540e\u4e00\u4e2a\u6570\u5f00\u59cb\u6bd4\u8f83\uff0c\u5982\u679c\u6bd4\u8fd9\u4e2a\u6570\uff0c\u7ee7\u7eed\u5f80\u524d\u9762\u6bd4\u8f83\uff0c\u76f4\u5230\u627e\u5230\u6bd4\u5b83\u5927\u7684\u6570\uff0c\u7136\u540e\u5c31\u653e\u5728\u5b83\u7684\u540e\u9762\uff0c\u5982\u679c\u4e00\u76f4\u6ca1\u6709\u627e\u5230\uff0c\u80af\u5b9a\u8fd9\u4e2a\u6570\u5df2\u7ecf\u6bd4\u8f83\u5230\u4e86\u7b2c\u4e00\u4e2a\u6570\uff0c\u90a3\u5c31\u653e\u5230\u7b2c\u4e00\u4e2a\u6570\u7684\u524d\u9762\u3002\u90a3\u4e48\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5bf9\u4e8e\u91c7\u7528\u63d2\u5165\u6392\u5e8f\u6cd5\u53bb\u6392\u5e8f\u7684\u4e00\u7ec4\u6570\uff0c\u53ef\u4ee5\u5148\u9009 \u53d6\u7b2c\u4e00\u4e2a\u6570\u505a\u4e3a\u5df2\u7ecf\u6392\u597d\u5e8f\u7684\u4e00\u7ec4\u6570\u3002\u7136\u540e\u628a\u7b2c\u4e8c\u4e2a\u653e\u5230\u6b63\u786e\u4f4d\u7f6e\u3002", "\u9009\u62e9\u6392\u5e8f(Selection Sort)\u662f\u4e00\u79cd\u7b80\u5355\u76f4\u89c2\u7684\u6392\u5e8f\u7b97\u6cd5\u3002\u5b83\u7684\u5de5\u4f5c\u539f\u7406\u5982\u4e0b\u3002\u9996\u5148\u5728\u672a\u6392\u5e8f\u5e8f\u5217\u4e2d\u627e\u5230\u6700\u5c0f\u5143\u7d20,\u5b58\u653e\u5230\u6392\u5e8f\u5e8f\u5217\u7684\u8d77\u59cb\u4f4d\u7f6e,\u7136\u540e,\u518d\u4ece\u5269\u4f59\u672a\u6392\u5e8f\u5143\u7d20\u4e2d\u7ee7\u7eed\u5bfb\u627e\u6700\u5c0f\u5143\u7d20,\u7136\u540e\u653e\u5230\u6392\u5e8f\u5e8f\u5217\u672b\u5c3e\u3002\u4ee5\u6b64\u7c7b\u63a8,\u76f4\u5230\u6240\u6709\u5143\u7d20\u5747\u6392\u5e8f\u5b8c\u6bd5\u3002", "\n112.\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u95ee\u9898", "\n\u80fd\u6b63\u786e\u8868\u793aa\u548cb\u540c\u65f6\u4e3a\u6b63\u6216\u540c\u65f6\u4e3a\u8d1f\u7684\u903b\u8f91\u8868\u8fbe\u5f0f\u662f(D )\u3002", "\nsssA\u3001(a>=0||b>=0)\uff06\uff06(a\nB\u3001(a>=0\uff06\uff06b>=0)&&(a\nC\u3001(a+b>0)\uff06\uff06(a+b\nD\u3001a*b>0", "\u4ee5\u4e0b\u5173\u4e8e\u8fd0\u7b97\u7b26\u4f18\u5148\u987a\u5e8f\u7684\u63cf\u8ff0\u4e2d\u6b63\u786e\u7684\u662f(C)\u3002", "\nA\u3001\u5173\u7cfb\u8fd0\u7b97\u7b26\nB\u3001\u903b\u8f91\u4e0e\u8fd0\u7b97\u7b26\nC\u3001\u8d4b\u503c\u8fd0\u7b97\u7b26\nD\u3001\u7b97\u672f\u8fd0\u7b97\u7b26\n", "113.\u5b57\u7b26\u4e32\u5012\u5e8f", "\u5199\u4e00\u4e2a\u51fd\u6570\u5c06\"tom is cat\" \u5012\u5e8f\u6253\u5370\u51fa\u6765\uff0c\u5373 \"cat is tom\"", "\n//a.ch", "\n#define SPACE ' '", "\n#define ENDL '\\0'", "char* str = \"Tom is cat\"; // \u5b57\u7b26\u4e32", "\nchar* p1 = str+strlen(str)-1;", "\nchar* p2 = p1; // \u5f00\u59cb\u65f6\uff0cp1,p2\u90fd\u6307\u5411\u5b57\u7b26\u4e32\u7ed3\u5c3e\u5904", "\nchar t=0; // \u4e34\u65f6\u53d8\u91cf\uff0c\u7528\u6765\u4fdd\u5b58\u88ab\u4e34\u65f6\u66ff\u6362\u4e3aENDL\u7684\u5b57\u7b26", "\nwhile(str!=p1--)", "\n{", "\n  if(SPACE!=*p1){", "\n     for(p2=p1+1;SPACE!=*p1; p1--, t=*p2, *p2=ENDL);", "     // p1+1\u6307\u5411\u5355\u8bcd\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd,p2\u6307\u5411\u5355\u8bcd\u7684\u7ed3\u5c3e,\u6b64\u65f6\u8f93\u51fa\u8fd9\u4e2a\u5355\u8bcd", "\n                printf(\"%s \",p1+1);", "\n                *p2=t;", "\n                p2=p1;", "\n         }", "\n}", "\nOutput:", "\ncat is Tom", "\n----------------------------------------------------------------------", "\n1)\u5199\u4e00\u4e2a\u9012\u5f52\u51fd\u6570\u5c06\u5185\u5b58\u4e2d\u7684\u5b57\u7b26\u4e32\u7ffb\u8f6c\"abc\"->\u201ccba\u201d", "\n2)\u5199\u4e00\u4e2a\u51fd\u6570\u5c06\u201dtom is cat\u201d \u5c06\u5185\u5b58\u4e2d\u7684\u5b57\u7b26\u4e32\u7ffb\u8f6c\uff0c\u5373 \u201ccat is tomm\u201d ", "#include ", "     t=q2\u2013;", "\n    str_reverse(q1,q2);", "\n      if(*t==ENDL)return;", "\n      else str_word_reverse(t);", "\n}", "\nint", "\nmain(int a ,char** b)", "\n{", "\n    printf(\u201c%s\\n\u201d,s);", "\n    str_reverse(s,s+strlen(s)-1);", "\n    printf(\u201c%s\\n\u201d,s);", "\n    str_word_reverse(s);", "\n    printf(\u201c%s\\n\u201d,s);", "\n           return 0;", "\n}", "\nOutput:", "\nThe quick brown fox jumps over the lazy dog", "\ngod yzal eht revo spmuj xof nworb kciuq ehT", "\ndog lazy the over jumps fox brown quick The", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014-", "\n\u4eca\u5929\u540c\u5b66\u53c8\u95ee\u4e00\u9053\u9898,\u548c\u4e0a\u9762\u6709\u4e9b\u7c7b\u4f3c\uff0c\u4f46\u662f\u8981\u6c42\u66f4\u4e25\u683c\u4e86\u4e00\u4e9b\uff1a", "\n\u5199\u4e00\u4e2a\u9012\u5f52\u51fd\u6570\u5c06\u5185\u5b58\u4e2d\u7684\u5b57\u7b26\u4e32\u7ffb\u8f6c\u201dabc\u201d->\u201dcba\u201d,\u5e76\u4e14\u51fd\u6570\u539f\u578b\u5df2\u786e\u5b9a\uff1avoid reverse(char* p)", "\u5176\u5b9e\uff0c\u8981\u6c42\u8d8a\u591a\uff0c\u601d\u8def\u8d8a\u786e\u5b9a\uff0c\u6211\u7684\u89e3\u5982\u4e0b\uff1a", "#include ", "//\u8fd9\u79cd\u65b9\u6cd5\u5c31\u76f4\u89c2\u591a\u4e86\uff0c\u4f46\u662f\u5f53\u5b57\u7b26\u4e32\u5f88\u957f\u7684\u65f6\u5019\u5c31\u5f88\u4f4e\u6548", "\nvoid reverse2(char* p){", "\n       if(*(p+1)==ENDL)return;", "\n       for(char* o=p+strlen(p)-1,char t=*o;o!=p;o\u2013)", "\n          *o=*(o-1);", "\n       *p=t;", "\n       reverse2(p+1);", "\n}", "\nint main(int c,char** argv){", "\n       reverse2(s);", "\n       printf(\u201c%s\\n\u201d,s);", "\n       return 0;", "\n}", "114.\u4ea4\u6362\u4e24\u4e2a\u6570\u7684\u5b8f\u5b9a\u4e49", "\u4ea4\u6362\u4e24\u4e2a\u53c2\u6570\u503c\u7684\u5b8f\u5b9a\u4e49\u4e3a\uff1a. #define SWAP(a,b) (a)=(a)+(b);(b)=(a)-(b);(a)=(a)-(b);", "115.Itearator\u5404\u6307\u9488\u7684\u533a\u522b", "\u6e38\u6807\u548c\u6307\u9488", "\n\u6211\u8bf4\u8fc7\u6e38\u6807\u662f\u6307\u9488\uff0c\u4f46\u4e0d\u4ec5\u4ec5\u662f\u6307\u9488\u3002\u6e38\u6807\u548c\u6307\u9488\u5f88\u50cf\uff0c\u529f\u80fd\u5f88\u50cf\u6307\u9488\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\uff0c\u6e38\u6807\u662f\u901a\u8fc7\u91cd\u8f7d\u4e00\u5143\u7684\u201d*\u201d\u548c\u201d->\u201d\u6765\u4ece\u5bb9\u5668\u4e2d\u95f4\u63a5\u5730\u8fd4\u56de\u4e00\u4e2a\u503c\u3002\u5c06\u8fd9\u4e9b\u503c\u5b58\u50a8\u5728\u5bb9\u5668\u4e2d\u5e76\u4e0d\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\uff0c\u56e0\u4e3a\u6bcf\u5f53\u4e00\u4e2a\u65b0\u503c\u6dfb\u52a0\u5230\u5bb9\u5668\u4e2d\u6216\u8005\u6709\u4e00\u4e2a\u503c\u4ece\u5bb9\u5668\u4e2d\u5220\u9664\uff0c\u8fd9\u4e9b\u503c\u5c31\u4f1a\u5931\u6548\u3002\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\uff0c\u6e38\u6807\u53ef\u4ee5\u770b\u4f5c\u662f\u53e5\u67c4\uff08handle\uff09\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\u6e38\u6807\uff08iterator\uff09\u7684\u7c7b\u578b\u53ef\u4ee5\u6709\u6240\u53d8\u5316\uff0c\u8fd9\u6837\u5bb9\u5668\u4e5f\u4f1a\u6709\u51e0\u79cd\u4e0d\u540c\u65b9\u5f0f\u7684\u8f6c\u53d8\uff1a", "iterator\u2014\u2014\u5bf9\u4e8e\u9664\u4e86vector\u4ee5\u5916\u7684\u5176\u4ed6\u4efb\u4f55\u5bb9\u5668\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u8fd9\u79cd\u6e38\u6807\u5728\u4e00\u6b21\u64cd\u4f5c\u4e2d\u5728\u5bb9\u5668\u4e2d\u671d\u5411\u524d\u7684\u65b9\u5411\u8d70\u4e00\u6b65\u3002\u8fd9\u610f\u5473\u7740\u5bf9\u4e8e\u8fd9\u79cd\u6e38\u6807\u4f60\u53ea\u80fd\u4f7f\u7528\u201c++\u201d\u64cd\u4f5c\u7b26\u3002\u800c\u4e0d\u80fd\u4f7f\u7528\u201c\u2013\u201d\u6216\u201c+=\u201d\u64cd\u4f5c\u7b26\u3002\u800c\u5bf9\u4e8evector\u8fd9\u4e00\u79cd\u5bb9\u5668\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u201c+=\u201d\u3001\u201c\u2014\u201d\u3001\u201c++\u201d\u3001\u201c-=\u201d\u4e2d\u7684\u4efb\u4f55\u4e00\u79cd\u64cd\u4f5c\u7b26\u548c\u201c\u201d\u3001\u201c>=\u201d\u3001\u201c==\u201d\u3001\u201c!=\u201d\u7b49\u6bd4\u8f83\u8fd0\u7b97\u7b26\u3002", "116. C++\u4e2d\u7684class\u548cstruct\u7684\u533a\u522b", "\n\u4ece\u8bed\u6cd5\u4e0a\uff0c\u5728C++\u4e2d\uff08\u53ea\u8ba8\u8bbaC++\u4e2d\uff09\u3002class\u548cstruct\u505a\u7c7b\u578b\u5b9a\u4e49\u65f6\u53ea\u6709\u4e24\u70b9\u533a\u522b\uff1a", "\n\uff08\u4e00\uff09\u9ed8\u8ba4\u7ee7\u627f\u6743\u9650\u3002\u5982\u679c\u4e0d\u660e\u786e\u6307\u5b9a\uff0c\u6765\u81eaclass\u7684\u7ee7\u627f\u6309\u7167private\u7ee7\u627f\u5904\u7406\uff0c\u6765\u81eastruct\u7684\u7ee7\u627f\u6309\u7167public\u7ee7\u627f\u5904\u7406\uff1b", "\n\uff08\u4e8c\uff09\u6210\u5458\u7684\u9ed8\u8ba4\u8bbf\u95ee\u6743\u9650\u3002class\u7684\u6210\u5458\u9ed8\u8ba4\u662fprivate\u6743\u9650\uff0cstruct\u9ed8\u8ba4\u662fpublic\u6743\u9650\u3002", "\n\u9664\u4e86\u8fd9\u4e24\u70b9\uff0cclass\u548cstruct\u57fa\u672c\u5c31\u662f\u4e00\u4e2a\u4e1c\u897f\u3002\u8bed\u6cd5\u4e0a\u6ca1\u6709\u4efb\u4f55\u5176\u5b83\u533a\u522b\u3002", "\n\u4e0d\u80fd\u56e0\u4e3a\u5b66\u8fc7C\u5c31\u603b\u89c9\u5f97\u8fdeC++\u4e2dstruct\u548cclass\u90fd\u533a\u522b\u5f88\u5927\uff0c\u4e0b\u9762\u5217\u4e3e\u7684\u8bf4\u660e\u53ef\u80fd\u6bd4\u8f83\u65e0\u804a\uff0c\u56e0\u4e3astruct\u548cclass\u672c\u6765\u5c31\u662f\u57fa\u672c\u4e00\u6837\u7684\u4e1c\u897f\uff0c\u65e0\u9700\u591a\u8bf4\u3002\u4f46\u8fd9\u4e9b\u8bf4\u660e\u53ef\u80fd\u6709\u52a9\u4e8e\u6f84\u6e05\u4e00\u4e9b\u5e38\u89c1\u7684\u5173\u4e8estruct\u548cclass\u7684\u9519\u8bef\u8ba4\u8bc6\uff1a", "\n\uff081\uff09\u90fd\u53ef\u4ee5\u6709\u6210\u5458\u51fd\u6570\uff1b\u5305\u62ec\u5404\u7c7b\u6784\u9020\u51fd\u6570\uff0c\u6790\u6784\u51fd\u6570\uff0c\u91cd\u8f7d\u7684\u8fd0\u7b97\u7b26\uff0c\u53cb\u5143\u7c7b\uff0c\u53cb\u5143\u7ed3\u6784\uff0c\u53cb\u5143\u51fd\u6570\uff0c\u865a\u51fd\u6570\uff0c\u7eaf\u865a\u51fd\u6570\uff0c\u9759\u6001\u51fd\u6570\uff1b", "\n\uff082\uff09\u90fd\u53ef\u4ee5\u6709\u4e00\u5927\u5806public/private/protected\u4fee\u9970\u7b26\u5728\u91cc\u8fb9\uff1b", "\n\uff083\uff09\u867d\u7136\u8fd9\u79cd\u98ce\u683c\u4e0d\u518d\u88ab\u63d0\u5021\uff0c\u4f46\u8bed\u6cd5\u4e0a\u4e8c\u8005\u90fd\u53ef\u4ee5\u4f7f\u7528\u5927\u62ec\u53f7\u7684\u65b9\u5f0f\u521d\u59cb\u5316\uff1a", "\nA a = {1, 2, 3};\u4e0d\u7ba1A\u662f\u4e2astruct\u8fd8\u662f\u4e2aclass\uff0c\u524d\u63d0\u662f\u8fd9\u4e2a\u7c7b/\u7ed3\u6784\u8db3\u591f\u7b80\u5355\uff0c\u6bd4\u5982\u6240\u6709\u7684\u6210\u5458\u90fd\u662fpublic\u7684\uff0c\u6240\u6709\u7684\u6210\u5458\u90fd\u662f\u7b80\u5355\u7c7b\u578b\uff0c\u6ca1\u6709\u663e\u5f0f\u58f0\u660e\u7684\u6784\u9020\u51fd\u6570\u3002", "\n\uff084\uff09\u90fd\u53ef\u4ee5\u8fdb\u884c\u590d\u6742\u7684\u7ee7\u627f\u751a\u81f3\u591a\u91cd\u7ee7\u627f\uff0c\u4e00\u4e2astruct\u53ef\u4ee5\u7ee7\u627f\u81ea\u4e00\u4e2aclass\uff0c\u53cd\u4e4b\u4ea6\u53ef\uff1b\u4e00\u4e2astruct\u53ef\u4ee5\u540c\u65f6\u7ee7\u627f5\u4e2aclass\u548c5\u4e2astruct\uff0c\u867d\u7136\u8fd9\u6837\u505a\u4e0d\u592a\u597d\u3002", "\n\uff085\uff09\u5982\u679c\u8bf4class\u7684\u8bbe\u8ba1\u9700\u8981\u6ce8\u610fOO\u7684\u539f\u5219\u548c\u98ce\u683c\uff0c\u90a3\u4e48\u6ca1\u4efb\u4f55\u7406\u7531\u8bf4\u8bbe\u8ba1struct\u5c31\u4e0d\u9700\u8981\u6ce8\u610f\u3002", "\n\uff086\uff09\u518d\u6b21\u8bf4\u660e\uff0c\u4ee5\u4e0a\u6240\u6709\u8bf4\u6cd5\u90fd\u662f\u6307\u5728C++\u8bed\u8a00\u4e2d\uff0c\u81f3\u4e8e\u5728C\u91cc\u7684\u60c5\u51b5\uff0cC\u91cc\u662f\u6839\u672c\u6ca1\u6709\u201cclass\u201d\uff0c\u800cC\u7684struct\u4ece\u6839\u672c\u4e0a\u4e5f\u53ea\u662f\u4e2a\u5305\u88c5\u6570\u636e\u7684\u8bed\u6cd5\u673a\u5236\u3002", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014", "\n\u6700\u540e\uff0c\u4f5c\u4e3a\u8bed\u8a00\u7684\u4e24\u4e2a\u5173\u952e\u5b57\uff0c\u9664\u53bb\u5b9a\u4e49\u7c7b\u578b\u65f6\u6709\u4e0a\u8ff0\u533a\u522b\u4e4b\u5916\uff0c\u53e6\u5916\u8fd8\u6709\u4e00\u70b9\u70b9\uff1a\u201cclass\u201d\u8fd9\u4e2a\u5173\u952e\u5b57\u8fd8\u7528\u4e8e\u5b9a\u4e49\u6a21\u677f\u53c2\u6570\uff0c\u5c31\u50cf\u201ctypename\u201d\u3002\u4f46\u5173\u952e\u5b57\u201cstruct\u201d\u4e0d\u7528\u4e8e\u5b9a\u4e49\u6a21\u677f\u53c2\u6570\u3002", "\u5173\u4e8e\u4f7f\u7528\u5927\u62ec\u53f7\u521d\u59cb\u5316", "\n\u3000\u3000class\u548cstruct\u5982\u679c\u5b9a\u4e49\u4e86\u6784\u9020\u51fd\u6570\u7684\u8bdd\uff0c\u90fd\u4e0d\u80fd\u7528\u5927\u62ec\u53f7\u8fdb\u884c\u521d\u59cb\u5316", "\n\u3000\u3000\u5982\u679c\u6ca1\u6709\u5b9a\u4e49\u6784\u9020\u51fd\u6570\uff0cstruct\u53ef\u4ee5\u7528\u5927\u62ec\u53f7\u521d\u59cb\u5316\u3002", "\n\u3000\u3000\u5982\u679c\u6ca1\u6709\u5b9a\u4e49\u6784\u9020\u51fd\u6570\uff0c\u4e14\u6240\u6709\u6210\u5458\u53d8\u91cf\u5168\u662fpublic\u7684\u8bdd\uff0c\u53ef\u4ee5\u7528\u5927\u62ec\u53f7\u521d\u59cb\u5316\u3002", "\n\u3000\u3000\u5173\u4e8e\u9ed8\u8ba4\u8bbf\u95ee\u6743\u9650", "\n\u3000\u3000class\u4e2d\u9ed8\u8ba4\u7684\u6210\u5458\u8bbf\u95ee\u6743\u9650\u662fprivate\u7684\uff0c\u800cstruct\u4e2d\u5219\u662fpublic\u7684\u3002", "\n\u3000\u3000\u5173\u4e8e\u7ee7\u627f\u65b9\u5f0f", "\n\u3000\u3000class\u7ee7\u627f\u9ed8\u8ba4\u662fprivate\u7ee7\u627f\uff0c\u800cstruct\u7ee7\u627f\u9ed8\u8ba4\u662fpublic\u7ee7\u627f\u3002", "\n\u3000\u3000\u5173\u4e8e\u6a21\u7248", "\u3000\u3000\u5728\u6a21\u7248\u4e2d\uff0c\u7c7b\u578b\u53c2\u6570\u524d\u9762\u53ef\u4ee5\u4f7f\u7528class\u6216typename\uff0c\u5982\u679c\u4f7f\u7528struct\uff0c\u5219\u542b\u4e49\u4e0d\u540c\uff0cstruct\u540e\u9762\u8ddf\u7684\u662f\u201cnon-type template parameter\u201d\uff0c\u800cclass\u6216typename\u540e\u9762\u8ddf\u7684\u662f\u7c7b\u578b\u53c2\u6570\u3002", "class\u4e2d\u6709\u4e2a\u9ed8\u8ba4\u7684this\u6307\u9488\uff0cstruct\u6ca1\u6709", "\n\u4e0d\u540c\u70b9\uff1a\u6784\u9020\u51fd\u6570\uff0c\u6790\u6784\u51fd\u6570 this \u6307\u9488", "117.\u6709\u5173\u91cd\u8f7d\u51fd\u6570", "\u8fd4\u56de\u503c\u7c7b\u578b\u4e0d\u540c\u6784\u4e0d\u6210\u91cd\u8f7d", "\n\u53c2\u6570\u53c2\u6570\u987a\u5e8f\u4e0d\u540c\u80fd\u6784\u6210\u91cd\u8f7d", "\nc++\u51fd\u6570\u540c\u540d\u4e0d\u540c\u8fd4\u56de\u503c\u4e0d\u7b97\u91cd\u8f7d\uff01\u51fd\u6570\u91cd\u8f7d\u662f\u5ffd\u7565\u8fd4\u56de\u503c\u7c7b\u578b\u7684\u3002 ", "\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014", "\n\u6210\u5458\u51fd\u6570\u88ab\u91cd\u8f7d\u7684\u7279\u5f81\u6709\uff1a", "\n1) \u76f8\u540c\u7684\u8303\u56f4\uff08\u5728\u540c\u4e00\u4e2a\u7c7b\u4e2d\uff09\uff1b", "\n2) \u51fd\u6570\u540d\u5b57\u76f8\u540c\uff1b", "\n3) \u53c2\u6570\u4e0d\u540c\uff1b", "\n4) virtual\u5173\u952e\u5b57\u53ef\u6709\u53ef\u65e0\u3002", "\n5) \u6210\u5458\u51fd\u6570\u4e2d \u6709\u65e0const (\u51fd\u6570\u540e\u9762) \u4e5f\u53ef\u5224\u65ad\u662f\u5426\u91cd\u8f7d", "118.\u6570\u636e\u5e93\u4e0eT-SQL\u8bed\u8a00", "\u5173\u7cfb\u6570\u636e\u5e93\u662f\u8868\u7684\u96c6\u5408\uff0c\u5b83\u662f\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u5173\u7cfb\u6a21\u5f0f\u5b9a\u4e49\u3002SQL\u8bed\u8a00\u4e2d\u7684\u6570\u636e\u5b9a\u4e49\u529f\u80fd\u5305\u62ec\u5bf9\u6570\u636e\u5e93\u3001\u57fa\u672c\u8868\u3001\u89c6\u56fe\u3001\u7d22\u5f15\u7684\u5b9a\u4e49\u3002", "119.\u5173\u7cfb\u6a21\u578b\u7684\u57fa\u672c\u6982\u5ff5", " \u5173\u7cfb\u6570\u636e\u5e93\u4ee5\u5173\u7cfb\u6a21\u578b\u4e3a\u57fa\u7840\uff0c\u5b83\u6709\u4ee5\u4e0b\u4e09\u90e8\u5206\u7ec4\u6210\uff1a", "\n    \u25cf\u6570\u636e\u7ed3\u6784\u2014\u2014\u6a21\u578b\u6240\u64cd\u4f5c\u7684\u5bf9\u8c61\u3001\u7c7b\u578b\u7684\u96c6\u5408", "\n    \u25cf\u5b8c\u6574\u6027\u89c4\u5219\u2014\u2014\u4fdd\u8bc1\u6570\u636e\u6709\u6548\u3001\u6b63\u786e\u7684\u7ea6\u675f\u6761\u4ef6", "\n    \u25cf\u6570\u636e\u64cd\u4f5c\u2014\u2014\u5bf9\u6a21\u578b\u5bf9\u8c61\u6240\u5141\u8bb8\u6267\u884c\u7684\u64cd\u4f5c\u65b9\u5f0f", "\n    \u5173\u7cfb\uff08Relation\uff09\u662f\u4e00\u4e2a\u7531\u884c\u548c\u5217\u7ec4\u6210\u7684\u4e8c\u7ef4\u8868\u683c\uff0c\u8868\u4e2d\u7684\u6bcf\u4e00\u884c\u662f\u4e00\u6761\u8bb0\u5f55\uff08Record\uff09\uff0c\u6bcf\u4e00\u5217\u662f\u8bb0\u5f55\u7684\u4e00\u4e2a\u5b57\u6bb5\uff08Field\uff09\u3002\u8868\u4e2d\u7684\u6bcf\u4e00\u6761\u8bb0\u5f55\u5fc5\u987b\u662f\u4e92\u65a5\u7684\uff0c\u5b57\u6bb5\u7684\u503c\u5fc5\u987b\u5177\u6709\u539f\u5b50\u6027\u3002", "120.SQL\u8bed\u8a00\u6982\u8ff0", "    SQL\uff08\u7ed3\u6784\u5316\u67e5\u8be2\u8bed\u8a00\uff09\u662f\u5173\u7cfb\u6570\u636e\u5e93\u8bed\u8a00\u7684\u4e00\u79cd\u56fd\u9645\u6807\u51c6\uff0c\u5b83\u662f\u4e00\u79cd\u975e\u8fc7\u7a0b\u5316\u7684\u8bed\u8a00\u3002\u901a\u8fc7\u7f16\u5199SQL\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u5173\u7cfb\u6570\u636e\u5e93\u7684\u5168\u90e8\u64cd\u4f5c\u3002", "\n    \u25cf\u6570\u636e\u5b9a\u4e49\u8bed\u8a00\uff08DDL\uff09\u2014\u2014\u5efa\u7acb\u548c\u7ba1\u7406\u6570\u636e\u5e93\u5bf9\u8c61", "\n    \u25cf\u6570\u636e\u64cd\u7eb5\u8bed\u8a00\uff08DML\uff09\u2014\u2014\u7528\u6765\u67e5\u8be2\u4e0e\u66f4\u65b0\u6570\u636e", "\n    \u25cf\u6570\u636e\u63a7\u5236\u8bed\u8a00\uff08DCL\uff09\u2014\u2014\u63a7\u5236\u6570\u636e\u7684\u5b89\u5168\u6027", "\u8d77\u6765\u662f\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u95ee\u9898\uff0c\u6bcf\u4e00\u4e2a\u4f7f\u7528\u8fc7RDBMS\u7684\u4eba\u90fd\u4f1a\u6709\u4e00\u4e2a\u6982\u5ff5\u3002", "\n\u4e8b\u52a1\u5904\u7406\u7cfb\u7edf\u7684\u5178\u578b\u7279\u70b9\u662f\u5177\u5907ACID\u7279\u5f81\u3002ACID\u6307\u7684\u662fAtomic\uff08\u539f\u5b50\u7684\uff09\u3001Consistent\uff08\u4e00\u81f4\u7684\uff09\u3001Isolated\uff08\u9694\u79bb\u7684\uff09\u4ee5\u53caDurable\uff08\u6301\u7eed\u7684\uff09\uff0c\u5b83\u4eec\u4ee3\u8868\u7740\u4e8b\u52a1\u5904\u7406\u5e94\u8be5\u5177\u5907\u7684\u56db\u4e2a\u7279\u5f81\uff1a", "\n\u539f\u5b50\u6027\uff1a\u7ec4\u6210\u4e8b\u52a1\u5904\u7406\u7684\u8bed\u53e5\u5f62\u6210\u4e86\u4e00\u4e2a\u903b\u8f91\u5355\u5143\uff0c\u4e0d\u80fd\u53ea\u6267\u884c\u5176\u4e2d\u7684\u4e00\u90e8\u5206", "\n\u4e00\u81f4\u6027\uff1a\u5728\u4e8b\u52a1\u5904\u7406\u6267\u884c\u4e4b\u524d\u548c\u4e4b\u540e\uff0c\u6570\u636e\u662f\u4e00\u81f4\u7684\u3002", "\n\u9694\u79bb\u6027\uff1a\u4e00\u4e2a\u4e8b\u52a1\u5904\u7406\u5bf9\u53e6\u4e00\u4e2a\u4e8b\u52a1\u5904\u7406\u6ca1\u6709\u5f71\u54cd\u3002", "\n\u6301\u7eed\u6027\uff1a\u5f53\u4e8b\u52a1\u5904\u7406\u6210\u529f\u6267\u884c\u5230\u7ed3\u675f\u7684\u65f6\u5019\uff0c\u5176\u6548\u679c\u5728\u6570\u636e\u5e93\u4e2d\u88ab\u6c38\u4e45\u7eaa\u5f55\u4e0b\u6765\u3002", "121.C\u8bed\u8a00\u4e2d\u7ed3\u6784\u5316\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u4e09\u79cd\u57fa\u672c\u63a7\u5236\u7ed3\u6784", "\u987a\u5e8f\u7ed3\u6784", "\n\u9009\u62e9\u7ed3\u6784", "\n\u5faa\u73af\u7ed3\u6784", "122.CVS\u662f\u4ec0\u4e48", "cvs\uff08Concurrent Version System\uff09 \u662f\u4e00\u4e2a\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u3002\u4f7f\u7528\u5b83\uff0c\u53ef\u4ee5\u8bb0\u5f55\u4e0b\u4f60\u7684\u6e90\u6587\u4ef6\u7684\u5386\u53f2\u3002 ", "\u4f8b\u5982\uff0c\u4fee\u6539\u8f6f\u4ef6\u65f6\u53ef\u80fd\u4f1a\u4e0d\u77e5\u4e0d\u89c9\u6df7\u8fdb\u4e00\u4e9b bug\uff0c\u800c\u4e14\u53ef\u80fd\u8fc7\u4e86\u5f88\u4e45\u4f60\u624d\u4f1a\u5bdf\u89c9\u5230\u5b83\u4eec\u7684\u5b58\u5728\u3002\u6709\u4e86 cvs\uff0c\u4f60\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u6062\u590d\u65e7\u7248\u672c\uff0c\u5e76\u4ece\u4e2d\u770b\u51fa\u5230\u5e95\u662f\u54ea\u4e2a\u4fee\u6539\u5bfc\u81f4\u4e86\u8fd9\u4e2a bug\u3002\u6709\u65f6\u8fd9\u662f\u5f88\u6709\u7528\u7684\u3002 ", "CVS\u670d\u52a1\u5668\u7aef\u5bf9\u6bcf\u4e2a\u6587\u4ef6\u7ef4\u62a4\u7740\u4e00\u4e2a\u4fee\u8ba2\u53f7,\u6bcf\u6b21\u5bf9\u6587\u4ef6\u7684\u66f4\u65b0\uff0c\u90fd\u4f1a\u4f7f\u5f97\u6587\u4ef6\u7684\u4fee\u8ba2\u53f7\u52a01\u3002\u5728\u5ba2\u6237\u7aef\u4e2d\u4e5f\u5bf9\u6bcf\u4e2a\u6587\u4ef6\u7ef4\u62a4\u7740\u4e00\u4e2a\u4fee\u8ba2\u53f7,CVS\u901a\u8fc7\u8fd9\u4e24\u4e2a\u4fee\u8ba2\u53f7\u7684\u5173\u7cfb\uff0c\u6765\u8fdb\u884cUpdate,Commit\u548c\u53d1\u73b0\u51b2\u7a81\u7b49\u64cd\u4f5c\u64cd\u4f5c", "123.\u4e09\u79cd\u57fa\u672c\u7684\u6570\u636e\u6a21\u578b", "\u6309\u7167\u6570\u636e\u7ed3\u6784\u7c7b\u578b\u7684\u4e0d\u540c\uff0c\u5c06\u6570\u636e\u6a21\u578b\u5212\u5206\u4e3a\u5c42\u6b21\u6a21\u578b\u3001\u7f51\u72b6\u6a21\u578b\u548c\u5173\u7cfb\u6a21\u578b\u3002"], "title": "c++\u7b14\u8bd5\u9762\u8bd5\u5b9d\u51782011\u7248 110-123"},
{"contents": ["91.\u5199\u4e00\u4e2a\u201c\u6807\u51c6\u201d\u5b8fMIN\uff0c\u8fd9\u4e2a\u5b8f\u8f93\u5165\u4e24\u4e2a\u53c2\u6570\u5e76\u8fd4\u56de\u8f83\u5c0f\u7684\u4e00\u4e2a\u3002", "#define MIN(A,B) ((A) \n\u8fd9\u4e2a\u6d4b\u8bd5\u662f\u4e3a\u4e0b\u9762\u7684\u76ee\u7684\u800c\u8bbe\u7684\uff1a", "\n1). \u6807\u8bc6#define\u5728\u5b8f\u4e2d\u5e94\u7528\u7684\u57fa\u672c\u77e5\u8bc6\u3002\u8fd9\u662f\u5f88\u91cd\u8981\u7684\uff0c\u56e0\u4e3a\u76f4\u5230\u5d4c\u5165(inline)\u64cd\u4f5c\u7b26\u53d8\u4e3a\u6807\u51c6C\u7684\u4e00\u90e8\u5206\uff0c\u5b8f\u662f\u65b9\u4fbf\u4ea7\u751f\u5d4c\u5165\u4ee3\u7801\u7684\u552f\u4e00\u65b9\u6cd5\uff0c", "\n\u5bf9\u4e8e\u5d4c\u5165\u5f0f\u7cfb\u7edf\u6765\u8bf4\uff0c\u4e3a\u4e86\u80fd\u8fbe\u5230\u8981\u6c42\u7684\u6027\u80fd\uff0c\u5d4c\u5165\u4ee3\u7801\u7ecf\u5e38\u662f\u5fc5\u987b\u7684\u65b9\u6cd5\u3002", "\n2). \u4e09\u91cd\u6761\u4ef6\u64cd\u4f5c\u7b26\u7684\u77e5\u8bc6\u3002\u8fd9\u4e2a\u64cd\u4f5c\u7b26\u5b58\u5728C\u8bed\u8a00\u4e2d\u7684\u539f\u56e0\u662f\u5b83\u4f7f\u5f97\u7f16\u8bd1\u5668\u80fd\u4ea7\u751f\u6bd4if-then-else\u66f4\u4f18\u5316\u7684\u4ee3\u7801\uff0c\u4e86\u89e3\u8fd9\u4e2a\u7528\u6cd5\u662f\u5f88\u91cd\u8981\u7684\u3002", "\n3). \u61c2\u5f97\u5728\u5b8f\u4e2d\u5c0f\u5fc3\u5730\u628a\u53c2\u6570\u7528\u62ec\u53f7\u62ec\u8d77\u6765", "\n4). \u6211\u4e5f\u7528\u8fd9\u4e2a\u95ee\u9898\u5f00\u59cb\u8ba8\u8bba\u5b8f\u7684\u526f\u4f5c\u7528\uff0c\u4f8b\u5982\uff1a\u5f53\u4f60\u5199\u4e0b\u9762\u7684\u4ee3\u7801\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\u4e8b\uff1f", "\nleast = MIN(*p++, b);", "92.\u9884\u5904\u7406\u5668\u6807\u8bc6#error\u7684\u76ee\u7684\u662f\u4ec0\u4e48\uff1f", "\u5982\u679c\u4f60\u4e0d\u77e5\u9053\u7b54\u6848\uff0c\u8bf7\u770b\u53c2\u8003\u6587\u732e1\u3002\u8fd9\u95ee\u9898\u5bf9\u533a\u5206\u4e00\u4e2a\u6b63\u5e38\u7684\u4f19\u8ba1\u548c\u4e00\u4e2a\u4e66\u5446\u5b50\u662f\u5f88\u6709\u7528\u7684\u3002\u53ea\u6709\u4e66\u5446\u5b50\u624d\u4f1a\u8bfbC\u8bed\u8a00\u8bfe\u672c\u7684\u9644\u5f55\u53bb\u627e\u51fa\u8c61\u8fd9\u79cd", "\n\u95ee\u9898\u7684\u7b54\u6848\u3002\u5f53\u7136\u5982\u679c\u4f60\u4e0d\u662f\u5728\u627e\u4e00\u4e2a\u4e66\u5446\u5b50\uff0c\u90a3\u4e48\u5e94\u8bd5\u8005\u6700\u597d\u5e0c\u671b\u81ea\u5df1\u4e0d\u8981\u77e5\u9053\u7b54\u6848\u3002", "\u6b7b\u5faa\u73af\uff08Infinite loops\uff09", "93.\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\u7ecf\u5e38\u8981\u7528\u5230\u65e0\u9650\u5faa\u73af\uff0c\u4f60\u600e\u4e48\u6837\u7528C\u7f16\u5199\u6b7b\u5faa\u73af\u5462\uff1f", "\u8fd9\u4e2a\u95ee\u9898\u7528\u51e0\u4e2a\u89e3\u51b3\u65b9\u6848\u3002\u6211\u9996\u9009\u7684\u65b9\u6848\u662f\uff1a", "\nwhile(1)", "\n{", "\n}", "\n\u4e00\u4e9b\u7a0b\u5e8f\u5458\u66f4\u559c\u6b22\u5982\u4e0b\u65b9\u6848\uff1a", "\nfor(;;)", "\n{", "\n}", "\n\u8fd9\u4e2a\u5b9e\u73b0\u65b9\u5f0f\u8ba9\u6211\u4e3a\u96be\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u8bed\u6cd5\u6ca1\u6709\u786e\u5207\u8868\u8fbe\u5230\u5e95\u600e\u4e48\u56de\u4e8b\u3002\u5982\u679c\u4e00\u4e2a\u5e94\u8bd5\u8005\u7ed9\u51fa\u8fd9\u4e2a\u4f5c\u4e3a\u65b9\u6848\uff0c\u6211\u5c06\u7528\u8fd9\u4e2a\u4f5c\u4e3a\u4e00\u4e2a\u673a\u4f1a\u53bb\u63a2\u7a76\u4ed6\u4eec\u8fd9\u6837\u505a\u7684", "\n\u57fa\u672c\u539f\u7406\u3002\u5982\u679c\u4ed6\u4eec\u7684\u57fa\u672c\u7b54\u6848\u662f\uff1a\u201c\u6211\u88ab\u6559\u7740\u8fd9\u6837\u505a\uff0c\u4f46\u4ece\u6ca1\u6709\u60f3\u5230\u8fc7\u4e3a\u4ec0\u4e48\u3002\u201d\u8fd9\u4f1a\u7ed9\u6211\u7559\u4e0b\u4e00\u4e2a\u574f\u5370\u8c61\u3002", "\n\u7b2c\u4e09\u4e2a\u65b9\u6848\u662f\u7528 goto", "\nLoop:", "\n...", "\ngoto Loop;", "\n\u5e94\u8bd5\u8005\u5982\u7ed9\u51fa\u4e0a\u9762\u7684\u65b9\u6848\uff0c\u8fd9\u8bf4\u660e\u6216\u8005\u4ed6\u662f\u4e00\u4e2a\u6c47\u7f16\u8bed\u8a00\u7a0b\u5e8f\u5458\uff08\u8fd9\u4e5f\u8bb8\u662f\u597d\u4e8b\uff09\u6216\u8005\u4ed6\u662f\u4e00\u4e2a\u60f3\u8fdb\u5165\u65b0\u9886\u57df\u7684BASIC/FORTRAN\u7a0b\u5e8f\u5458\u3002", "\u6570\u636e\u58f0\u660e\uff08Data declarations\uff09", "94.\u7528\u53d8\u91cfa\u7ed9\u51fa\u4e0b\u9762\u7684\u5b9a\u4e49", "\na) \u4e00\u4e2a\u6574\u578b\u6570\uff08An integer\uff09", "\nb) \u4e00\u4e2a\u6307\u5411\u6574\u578b\u6570\u7684\u6307\u9488\uff08A pointer to an integer\uff09", "\nc) \u4e00\u4e2a\u6307\u5411\u6307\u9488\u7684\u7684\u6307\u9488\uff0c\u5b83\u6307\u5411\u7684\u6307\u9488\u662f\u6307\u5411\u4e00\u4e2a\u6574\u578b\u6570\uff08A pointer to a pointer to an integer\uff09", "\nd) \u4e00\u4e2a\u670910\u4e2a\u6574\u578b\u6570\u7684\u6570\u7ec4\uff08An array of 10 integers\uff09", "\ne) \u4e00\u4e2a\u670910\u4e2a\u6307\u9488\u7684\u6570\u7ec4\uff0c\u8be5\u6307\u9488\u662f\u6307\u5411\u4e00\u4e2a\u6574\u578b\u6570\u7684\uff08An array of 10 pointers to integers\uff09", "\nf) \u4e00\u4e2a\u6307\u5411\u670910\u4e2a\u6574\u578b\u6570\u6570\u7ec4\u7684\u6307\u9488\uff08A pointer to an array of 10 integers\uff09", "\ng) \u4e00\u4e2a\u6307\u5411\u51fd\u6570\u7684\u6307\u9488\uff0c\u8be5\u51fd\u6570\u6709\u4e00\u4e2a\u6574\u578b\u53c2\u6570\u5e76\u8fd4\u56de\u4e00\u4e2a\u6574\u578b\u6570\uff08A pointer to a function that takes an integer as an argument and returns an integer\uff09", "\nh) \u4e00\u4e2a\u670910\u4e2a\u6307\u9488\u7684\u6570\u7ec4\uff0c\u8be5\u6307\u9488\u6307\u5411\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u6709\u4e00\u4e2a\u6574\u578b\u53c2\u6570\u5e76\u8fd4\u56de\u4e00\u4e2a\u6574\u578b\u6570\uff08 An array of ten pointers to functions that take an integer", "\nargument and return an integer \uff09", "\u7b54\u6848\u662f\uff1a", "\na) int a; // An integer", "\nb) int *a; // A pointer to an integer", "\nc) int **a; // A pointer to a pointer to an integer", "\nd) int a[10]; // An array of 10 integers", "\ne) int *a[10]; // An array of 10 pointers to integers", "\nf) int (*a)[10]; // A pointer to an array of 10 integers", "\ng) int (*a)(int); // A pointer to a function a that takes an integer argument and returns an integer", "\nh) int (*a[10])(int); // An array of 10 pointers to functions that take an integer argument and return an integer", "\u4eba\u4eec\u7ecf\u5e38\u58f0\u79f0\u8fd9\u91cc\u6709\u51e0\u4e2a\u95ee\u9898\u662f\u90a3\u79cd\u8981\u7ffb\u4e00\u4e0b\u4e66\u624d\u80fd\u56de\u7b54\u7684\u95ee\u9898\uff0c\u6211\u540c\u610f\u8fd9\u79cd\u8bf4\u6cd5\u3002\u5f53\u6211\u5199\u8fd9\u7bc7\u6587\u7ae0\u65f6\uff0c\u4e3a\u4e86\u786e\u5b9a\u8bed\u6cd5\u7684\u6b63\u786e\u6027\uff0c\u6211\u7684\u786e\u67e5\u4e86\u4e00\u4e0b\u4e66\u3002", "\n\u4f46\u662f\u5f53\u6211\u88ab\u9762\u8bd5\u7684\u65f6\u5019\uff0c\u6211\u671f\u671b\u88ab\u95ee\u5230\u8fd9\u4e2a\u95ee\u9898\uff08\u6216\u8005\u76f8\u8fd1\u7684\u95ee\u9898\uff09\u3002\u56e0\u4e3a\u5728\u88ab\u9762\u8bd5\u7684\u8fd9\u6bb5\u65f6\u95f4\u91cc\uff0c\u6211\u786e\u5b9a\u6211\u77e5\u9053\u8fd9\u4e2a\u95ee\u9898\u7684\u7b54\u6848\u3002\u5e94\u8bd5\u8005\u5982\u679c\u4e0d\u77e5\u9053", "\n\u6240\u6709\u7684\u7b54\u6848\uff08\u6216\u81f3\u5c11\u5927\u90e8\u5206\u7b54\u6848\uff09\uff0c\u90a3\u4e48\u4e5f\u5c31\u6ca1\u6709\u4e3a\u8fd9\u6b21\u9762\u8bd5\u505a\u51c6\u5907\uff0c\u5982\u679c\u8be5\u9762\u8bd5\u8005\u6ca1\u6709\u4e3a\u8fd9\u6b21\u9762\u8bd5\u505a\u51c6\u5907\uff0c\u90a3\u4e48\u4ed6\u53c8\u80fd\u4e3a\u4ec0\u4e48\u51fa\u51c6\u5907\u5462\uff1f", "Static", "95.\u5173\u952e\u5b57static\u7684\u4f5c\u7528\u662f\u4ec0\u4e48\uff1f", "\u8fd9\u4e2a\u7b80\u5355\u7684\u95ee\u9898\u5f88\u5c11\u6709\u4eba\u80fd\u56de\u7b54\u5b8c\u5168\u3002\u5728C\u8bed\u8a00\u4e2d\uff0c\u5173\u952e\u5b57static\u6709\u4e09\u4e2a\u660e\u663e\u7684\u4f5c\u7528\uff1a", "\n1). \u5728\u51fd\u6570\u4f53\uff0c\u4e00\u4e2a\u88ab\u58f0\u660e\u4e3a\u9759\u6001\u7684\u53d8\u91cf\u5728\u8fd9\u4e00\u51fd\u6570\u88ab\u8c03\u7528\u8fc7\u7a0b\u4e2d\u7ef4\u6301\u5176\u503c\u4e0d\u53d8\u3002", "\n2). \u5728\u6a21\u5757\u5185\uff08\u4f46\u5728\u51fd\u6570\u4f53\u5916\uff09\uff0c\u4e00\u4e2a\u88ab\u58f0\u660e\u4e3a\u9759\u6001\u7684\u53d8\u91cf\u53ef\u4ee5\u88ab\u6a21\u5757\u5185\u6240\u7528\u51fd\u6570\u8bbf\u95ee\uff0c\u4f46\u4e0d\u80fd\u88ab\u6a21\u5757\u5916\u5176\u5b83\u51fd\u6570\u8bbf\u95ee\u3002\u5b83\u662f\u4e00\u4e2a\u672c\u5730\u7684\u5168\u5c40\u53d8\u91cf\u3002", "\n3). \u5728\u6a21\u5757\u5185\uff0c\u4e00\u4e2a\u88ab\u58f0\u660e\u4e3a\u9759\u6001\u7684\u51fd\u6570\u53ea\u53ef\u88ab\u8fd9\u4e00\u6a21\u5757\u5185\u7684\u5176\u5b83\u51fd\u6570\u8c03\u7528\u3002\u90a3\u5c31\u662f\uff0c\u8fd9\u4e2a\u51fd\u6570\u88ab\u9650\u5236\u5728\u58f0\u660e\u5b83\u7684\u6a21\u5757\u7684\u672c\u5730\u8303\u56f4\u5185\u4f7f\u7528\u3002", "\n\u5927\u591a\u6570\u5e94\u8bd5\u8005\u80fd\u6b63\u786e\u56de\u7b54\u7b2c\u4e00\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u80fd\u6b63\u786e\u56de\u7b54\u7b2c\u4e8c\u90e8\u5206\uff0c\u540c\u662f\u5f88\u5c11\u7684\u4eba\u80fd\u61c2\u5f97\u7b2c\u4e09\u90e8\u5206\u3002\u8fd9\u662f\u4e00\u4e2a\u5e94\u8bd5\u8005\u7684\u4e25\u91cd\u7684\u7f3a\u70b9\uff0c\u56e0\u4e3a\u4ed6\u663e\u7136\u4e0d\u61c2\u5f97\u672c\u5730\u5316\u6570", "\n\u636e\u548c\u4ee3\u7801\u8303\u56f4\u7684\u597d\u5904\u548c\u91cd\u8981\u6027\u3002", "Const", "96.\u5173\u952e\u5b57const\u662f\u4ec0\u4e48\u542b\u610f\uff1f", "\n\u6211\u53ea\u8981\u4e00\u542c\u5230\u88ab\u9762\u8bd5\u8005\u8bf4\uff1a\u201cconst\u610f\u5473\u7740\u5e38\u6570\u201d\uff0c\u6211\u5c31\u77e5\u9053\u6211\u6b63\u5728\u548c\u4e00\u4e2a\u4e1a\u4f59\u8005\u6253\u4ea4\u9053\u3002\u53bb\u5e74Dan Saks\u5df2\u7ecf\u5728\u4ed6\u7684\u6587\u7ae0\u91cc\u5b8c\u5168\u6982\u62ec\u4e86const\u7684\u6240\u6709\u7528\u6cd5\uff0c\u56e0\u6b64ESP(\u8bd1\u8005\uff1aEmbedded Systems Programming)\u7684\u6bcf\u4e00\u4f4d\u8bfb\u8005\u5e94\u8be5\u975e\u5e38\u719f\u6089const\u80fd\u505a\u4ec0\u4e48\u548c\u4e0d\u80fd\u505a\u4ec0\u4e48.\u5982\u679c\u4f60\u4ece\u6ca1\u6709\u8bfb\u5230\u90a3\u7bc7\u6587\u7ae0\uff0c\u53ea\u8981\u80fd\u8bf4\u51faconst\u610f\u5473\u7740\u201c\u53ea\u8bfb\u201d\u5c31\u53ef\u4ee5\u4e86\u3002\u5c3d\u7ba1\u8fd9\u4e2a\u7b54\u6848\u4e0d\u662f\u5b8c\u5168\u7684\u7b54\u6848\uff0c\u4f46\u6211\u63a5\u53d7\u5b83\u4f5c\u4e3a\u4e00\u4e2a\u6b63\u786e\u7684\u7b54\u6848\u3002\uff08\u5982\u679c\u4f60\u60f3\u77e5\u9053\u66f4\u8be6\u7ec6\u7684\u7b54\u6848\uff0c\u4ed4\u7ec6\u8bfb\u4e00\u4e0bSaks\u7684\u6587\u7ae0\u5427\u3002\uff09\u5982\u679c\u5e94\u8bd5\u8005\u80fd\u6b63\u786e\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u5c06\u95ee\u4ed6\u4e00\u4e2a\u9644\u52a0\u7684\u95ee\u9898\uff1a\u4e0b\u9762\u7684\u58f0\u660e\u90fd\u662f\u4ec0\u4e48\u610f\u601d\uff1f", "const int a;", "\nint const a;", "\nconst int *a;", "\nint * const a;", "\nint const * a const;", "\u524d\u4e24\u4e2a\u7684\u4f5c\u7528\u662f\u4e00\u6837\uff0ca\u662f\u4e00\u4e2a\u5e38\u6574\u578b\u6570\u3002\u7b2c\u4e09\u4e2a\u610f\u5473\u7740a\u662f\u4e00\u4e2a\u6307\u5411\u5e38\u6574\u578b\u6570\u7684\u6307\u9488\uff08\u4e5f\u5c31\u662f\uff0c\u6574\u578b\u6570\u662f\u4e0d\u53ef\u4fee\u6539\u7684\uff0c\u4f46\u6307\u9488\u53ef\u4ee5\uff09\u3002\u7b2c\u56db\u4e2a\u610f\u601da\u662f\u4e00\u4e2a\u6307\u5411\u6574\u578b\u6570\u7684\u5e38\u6307\u9488\uff08\u4e5f\u5c31\u662f\u8bf4\uff0c\u6307\u9488\u6307\u5411\u7684\u6574\u578b\u6570\u662f\u53ef\u4ee5\u4fee\u6539\u7684\uff0c\u4f46\u6307\u9488\u662f\u4e0d\u53ef\u4fee\u6539\u7684\uff09\u3002\u6700\u540e\u4e00\u4e2a\u610f\u5473\u7740a\u662f\u4e00\u4e2a\u6307\u5411\u5e38\u6574\u578b\u6570\u7684\u5e38\u6307\u9488\uff08\u4e5f\u5c31\u662f\u8bf4\uff0c\u6307\u9488\u6307\u5411\u7684\u6574\u578b\u6570\u662f\u4e0d\u53ef\u4fee\u6539\u7684\uff0c\u540c\u65f6\u6307\u9488\u4e5f\u662f\u4e0d\u53ef\u4fee\u6539\u7684\uff09\u3002\u5982\u679c\u5e94\u8bd5\u8005\u80fd\u6b63\u786e\u56de\u7b54\u8fd9\u4e9b\u95ee\u9898\uff0c\u90a3\u4e48\u4ed6\u5c31\u7ed9\u6211\u7559\u4e0b\u4e86\u4e00\u4e2a\u597d\u5370\u8c61\u3002\u987a\u5e26\u63d0\u4e00\u53e5\uff0c\u4e5f\u8bb8\u4f60\u53ef\u80fd\u4f1a\u95ee\uff0c\u5373\u4f7f\u4e0d\u7528\u5173\u952e\u5b57 const\uff0c\u4e5f\u8fd8\u662f\u80fd\u5f88\u5bb9\u6613\u5199\u51fa\u529f\u80fd\u6b63\u786e\u7684\u7a0b\u5e8f\uff0c\u90a3\u4e48\u6211\u4e3a\u4ec0\u4e48\u8fd8\u8981\u5982\u6b64\u770b\u91cd\u5173\u952e\u5b57const\u5462\uff1f\u6211\u4e5f\u5982\u4e0b\u7684\u51e0\u4e0b\u7406\u7531\uff1a", "\n1). \u5173\u952e\u5b57const\u7684\u4f5c\u7528\u662f\u4e3a\u7ed9\u8bfb\u4f60\u4ee3\u7801\u7684\u4eba\u4f20\u8fbe\u975e\u5e38\u6709\u7528\u7684\u4fe1\u606f\uff0c\u5b9e\u9645\u4e0a\uff0c\u58f0\u660e\u4e00\u4e2a\u53c2\u6570\u4e3a\u5e38\u91cf\u662f\u4e3a\u4e86\u544a\u8bc9\u4e86\u7528\u6237\u8fd9\u4e2a\u53c2\u6570\u7684\u5e94\u7528\u76ee\u7684\u3002\u5982\u679c\u4f60\u66fe\u82b1\u5f88\u591a\u65f6\u95f4\u6e05\u7406\u5176\u5b83\u4eba\u7559\u4e0b\u7684\u5783\u573e\uff0c\u4f60\u5c31\u4f1a\u5f88\u5feb\u5b66\u4f1a\u611f\u8c22\u8fd9\u70b9\u591a\u4f59\u7684\u4fe1\u606f\u3002\uff08\u5f53\u7136\uff0c\u61c2\u5f97\u7528const\u7684\u7a0b\u5e8f\u5458\u5f88\u5c11\u4f1a\u7559\u4e0b\u7684\u5783\u573e\u8ba9\u522b\u4eba\u6765\u6e05\u7406\u7684\u3002\uff09", "\n2). \u901a\u8fc7\u7ed9\u4f18\u5316\u5668\u4e00\u4e9b\u9644\u52a0\u7684\u4fe1\u606f\uff0c\u4f7f\u7528\u5173\u952e\u5b57const\u4e5f\u8bb8\u80fd\u4ea7\u751f\u66f4\u7d27\u51d1\u7684\u4ee3\u7801\u3002", "\n3). \u5408\u7406\u5730\u4f7f\u7528\u5173\u952e\u5b57const\u53ef\u4ee5\u4f7f\u7f16\u8bd1\u5668\u5f88\u81ea\u7136\u5730\u4fdd\u62a4\u90a3\u4e9b\u4e0d\u5e0c\u671b\u88ab\u6539\u53d8\u7684\u53c2\u6570\uff0c\u9632\u6b62\u5176\u88ab\u65e0\u610f\u7684\u4ee3\u7801\u4fee\u6539\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11bug\u7684\u51fa\u73b0\u3002", "Volatile", "97.\u5173\u952e\u5b57volatile\u6709\u4ec0\u4e48\u542b\u610f \u5e76\u7ed9\u51fa\u4e09\u4e2a\u4e0d\u540c\u7684\u4f8b\u5b50\u3002", "\u4e00\u4e2a\u5b9a\u4e49\u4e3avolatile\u7684\u53d8\u91cf\u662f\u8bf4\u8fd9\u53d8\u91cf\u53ef\u80fd\u4f1a\u88ab\u610f\u60f3\u4e0d\u5230\u5730\u6539\u53d8\uff0c\u8fd9\u6837\uff0c\u7f16\u8bd1\u5668\u5c31\u4e0d\u4f1a\u53bb\u5047\u8bbe\u8fd9\u4e2a\u53d8\u91cf\u7684\u503c\u4e86\u3002\u7cbe\u786e\u5730\u8bf4\u5c31\u662f\uff0c\u4f18\u5316\u5668\u5728\u7528\u5230\u8fd9\u4e2a\u53d8\u91cf\u65f6\u5fc5\u987b\u6bcf\u6b21\u90fd\u5c0f\u5fc3\u5730\u91cd\u65b0\u8bfb\u53d6\u8fd9\u4e2a\u53d8\u91cf\u7684\u503c\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u4fdd\u5b58\u5728\u5bc4\u5b58\u5668\u91cc\u7684\u5907\u4efd\u3002\u4e0b\u9762\u662fvolatile\u53d8\u91cf\u7684\u51e0\u4e2a\u4f8b\u5b50\uff1a", "\n1). \u5e76\u884c\u8bbe\u5907\u7684\u786c\u4ef6\u5bc4\u5b58\u5668\uff08\u5982\uff1a\u72b6\u6001\u5bc4\u5b58\u5668\uff09", "\n2). \u4e00\u4e2a\u4e2d\u65ad\u670d\u52a1\u5b50\u7a0b\u5e8f\u4e2d\u4f1a\u8bbf\u95ee\u5230\u7684\u975e\u81ea\u52a8\u53d8\u91cf(Non-automatic variables)", "\n3). \u591a\u7ebf\u7a0b\u5e94\u7528\u4e2d\u88ab\u51e0\u4e2a\u4efb\u52a1\u5171\u4eab\u7684\u53d8\u91cf", "\n\u56de\u7b54\u4e0d\u51fa\u8fd9\u4e2a\u95ee\u9898\u7684\u4eba\u662f\u4e0d\u4f1a\u88ab\u96c7\u4f63\u7684\u3002\u6211\u8ba4\u4e3a\u8fd9\u662f\u533a\u5206C\u7a0b\u5e8f\u5458\u548c\u5d4c\u5165\u5f0f\u7cfb\u7edf\u7a0b\u5e8f\u5458\u7684\u6700\u57fa\u672c\u7684\u95ee\u9898\u3002\u5d4c\u5165\u5f0f\u7cfb\u7edf\u7a0b\u5e8f\u5458\u7ecf\u5e38\u540c\u786c\u4ef6\u3001\u4e2d\u65ad\u3001RTOS\u7b49\u7b49\u6253\u4ea4\u9053\uff0c\u6240\u7528\u8fd9\u4e9b\u90fd\u8981\u6c42volatile\u53d8\u91cf\u3002\u4e0d\u61c2\u5f97volatile\u5185\u5bb9\u5c06\u4f1a\u5e26\u6765\u707e\u96be\u3002", "\n\u5047\u8bbe\u88ab\u9762\u8bd5\u8005\u6b63\u786e\u5730\u56de\u7b54\u4e86\u8fd9\u662f\u95ee\u9898\uff08\u55ef\uff0c\u6000\u7591\u8fd9\u5426\u4f1a\u662f\u8fd9\u6837\uff09\uff0c\u6211\u5c06\u7a0d\u5fae\u6df1\u7a76\u4e00\u4e0b\uff0c\u770b\u4e00\u4e0b\u8fd9\u5bb6\u4f19\u662f\u4e0d\u662f\u76f4\u6b63\u61c2\u5f97volatile\u5b8c\u5168\u7684\u91cd\u8981\u6027\u3002", "\n1). \u4e00\u4e2a\u53c2\u6570\u65e2\u53ef\u4ee5\u662fconst\u8fd8\u53ef\u4ee5\u662fvolatile\u5417\uff1f\u89e3\u91ca\u4e3a\u4ec0\u4e48\u3002", "\n2). \u4e00\u4e2a\u6307\u9488\u53ef\u4ee5\u662fvolatile \u5417\uff1f\u89e3\u91ca\u4e3a\u4ec0\u4e48\u3002", "\n3). \u4e0b\u9762\u7684\u51fd\u6570\u6709\u4ec0\u4e48\u9519\u8bef\uff1a", "\nint square(volatile int *ptr)", "\n{", "\nreturn *ptr * *ptr;", "\n}", "\n\u4e0b\u9762\u662f\u7b54\u6848\uff1a", "\n1). \u662f\u7684\u3002\u4e00\u4e2a\u4f8b\u5b50\u662f\u53ea\u8bfb\u7684\u72b6\u6001\u5bc4\u5b58\u5668\u3002\u5b83\u662fvolatile\u56e0\u4e3a\u5b83\u53ef\u80fd\u88ab\u610f\u60f3\u4e0d\u5230\u5730\u6539\u53d8\u3002\u5b83\u662fconst\u56e0\u4e3a\u7a0b\u5e8f\u4e0d\u5e94\u8be5\u8bd5\u56fe\u53bb\u4fee\u6539\u5b83\u3002", "\n2). \u662f\u7684\u3002\u5c3d\u7ba1\u8fd9\u5e76\u4e0d\u5f88\u5e38\u89c1\u3002\u4e00\u4e2a\u4f8b\u5b50\u662f\u5f53\u4e00\u4e2a\u4e2d\u670d\u52a1\u5b50\u7a0b\u5e8f\u4fee\u8be5\u4e00\u4e2a\u6307\u5411\u4e00\u4e2abuffer\u7684\u6307\u9488\u65f6\u3002", "\n3). \u8fd9\u6bb5\u4ee3\u7801\u7684\u6709\u4e2a\u6076\u4f5c\u5267\u3002\u8fd9\u6bb5\u4ee3\u7801\u7684\u76ee\u7684\u662f\u7528\u6765\u8fd4\u6307\u9488*ptr\u6307\u5411\u503c\u7684\u5e73\u65b9\uff0c\u4f46\u662f\uff0c\u7531\u4e8e*ptr\u6307\u5411\u4e00\u4e2avolatile\u578b\u53c2\u6570\uff0c\u7f16\u8bd1\u5668\u5c06\u4ea7\u751f\u7c7b\u4f3c\u4e0b\u9762\u7684\u4ee3\u7801\uff1a", "\nint square(volatile int *ptr)", "\n{", "\nint a,b;", "\na = *ptr;", "\nb = *ptr;", "\nreturn a * b;", "\n}", "\n\u7531\u4e8e*ptr\u7684\u503c\u53ef\u80fd\u88ab\u610f\u60f3\u4e0d\u5230\u5730\u8be5\u53d8\uff0c\u56e0\u6b64a\u548cb\u53ef\u80fd\u662f\u4e0d\u540c\u7684\u3002\u7ed3\u679c\uff0c\u8fd9\u6bb5\u4ee3\u7801\u53ef\u80fd\u8fd4\u4e0d\u662f\u4f60\u6240\u671f\u671b\u7684\u5e73\u65b9\u503c\uff01\u6b63\u786e\u7684\u4ee3\u7801\u5982\u4e0b\uff1a", "\nlong square(volatile int *ptr)", "\n{", "\nint a;", "\na = *ptr;", "\nreturn a * a;", "\n}", "\u4f4d\u64cd\u4f5c\uff08Bit manipulation\uff09", "98.\u4e0b\u9762\u7684\u4ee3\u7801\u8f93\u51fa\u662f\u4ec0\u4e48\uff0c\u4e3a\u4ec0\u4e48\uff1f", "void foo(void)", "\n{", "\nunsigned int a = 6;", "\nint b = -20;", "\n(a+b > 6) puts(\u201c> 6\u2033) : puts(\u201c\n}", "\u8fd9\u4e2a\u95ee\u9898\u6d4b\u8bd5\u4f60\u662f\u5426\u61c2\u5f97C\u8bed\u8a00\u4e2d\u7684\u6574\u6570\u81ea\u52a8\u8f6c\u6362\u539f\u5219\uff0c\u6211\u53d1\u73b0\u6709\u4e9b\u5f00\u53d1\u8005\u61c2\u5f97\u6781\u5c11\u8fd9\u4e9b\u4e1c\u897f\u3002\u4e0d\u7ba1\u5982\u4f55\uff0c\u8fd9\u65e0\u7b26\u53f7\u6574\u578b\u95ee\u9898\u7684\u7b54\u6848\u662f\u8f93\u51fa\u662f\u201c>6\u201d\u3002\u539f\u56e0\u662f\u5f53\u8868\u8fbe\u5f0f\u4e2d\u5b58\u5728\u6709\u7b26\u53f7\u7c7b\u578b\u548c\u65e0\u7b26\u53f7\u7c7b\u578b\u65f6\u6240\u6709\u7684\u64cd\u4f5c\u6570\u90fd\u81ea\u52a8\u8f6c\u6362\u4e3a\u65e0\u7b26\u53f7\u7c7b\u578b\u3002\u56e0\u6b64-20\u53d8\u6210\u4e86\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u6b63\u6574\u6570\uff0c\u6240\u4ee5\u8be5\u8868\u8fbe\u5f0f\u8ba1\u7b97\u51fa\u7684\u7ed3\u679c\u5927\u4e8e6\u3002\u8fd9\u4e00\u70b9\u5bf9\u4e8e\u5e94\u5f53\u9891\u7e41\u7528\u5230\u65e0\u7b26\u53f7\u6570\u636e\u7c7b\u578b\u7684\u5d4c\u5165\u5f0f\u7cfb\u7edf\u6765\u8bf4\u662f\u4e30\u5e38\u91cd\u8981\u7684\u3002\u5982\u679c\u4f60\u7b54\u9519\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f60\u4e5f\u5c31\u5230\u4e86\u5f97\u4e0d\u5230\u8fd9\u4efd\u5de5\u4f5c\u7684\u8fb9\u7f18\u3002", "99.C\u8bed\u8a00\u540c\u610f\u4e00\u4e9b\u4ee4\u4eba\u9707\u60ca\u7684\u7ed3\u6784,\u4e0b\u9762\u7684\u7ed3\u6784\u662f\u5408\u6cd5\u7684\u5417\uff0c\u5982\u679c\u662f\u5b83\u505a\u4e9b\u4ec0\u4e48\uff1f", "\nint a = 5, b = 7, c;", "\nc = a+++b;", "\u8fd9\u4e2a\u95ee\u9898\u5c06\u505a\u4e3a\u8fd9\u4e2a\u6d4b\u9a8c\u7684\u4e00\u4e2a\u6109\u5feb\u7684\u7ed3\u5c3e\u3002\u4e0d\u7ba1\u4f60\u76f8\u4e0d\u76f8\u4fe1\uff0c\u4e0a\u9762\u7684\u4f8b\u5b50\u662f\u5b8c\u5168\u5408\u4e4e\u8bed\u6cd5\u7684\u3002\u95ee\u9898\u662f\u7f16\u8bd1\u5668\u5982\u4f55\u5904\u7406\u5b83\uff1f\u6c34\u5e73\u4e0d\u9ad8\u7684\u7f16\u8bd1\u4f5c\u8005\u5b9e\u9645\u4e0a\u4f1a\u4e89\u8bba\u8fd9\u4e2a\u95ee\u9898\uff0c\u6839\u636e\u6700\u5904\u7406\u539f\u5219\uff0c\u7f16\u8bd1\u5668\u5e94\u5f53\u80fd\u5904\u7406\u5c3d\u53ef\u80fd\u6240\u6709\u5408\u6cd5\u7684\u7528\u6cd5\u3002\u56e0\u6b64\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u88ab\u5904\u7406\u6210\uff1a", "\nc = a++ + b;", "\n\u56e0\u6b64, \u8fd9\u6bb5\u4ee3\u7801\u6301\u884c\u540ea = 6, b = 7, c = 12\u3002", "\n\u5982\u679c\u4f60\u77e5\u9053\u7b54\u6848\uff0c\u6216\u731c\u51fa\u6b63\u786e\u7b54\u6848\uff0c\u505a\u5f97\u597d\u3002\u5982\u679c\u4f60\u4e0d\u77e5\u9053\u7b54\u6848\uff0c\u6211\u4e5f\u4e0d\u628a\u8fd9\u4e2a\u5f53\u4f5c\u95ee\u9898\u3002\u6211\u53d1\u73b0\u8fd9\u4e2a\u95ee\u9898\u7684\u6700\u5927\u597d\u5904\u662f:\u8fd9\u662f\u4e00\u4e2a\u5173\u4e8e\u4ee3\u7801\u7f16\u5199\u98ce\u683c\uff0c\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\uff0c\u4ee3\u7801\u7684\u53ef\u4fee\u6539\u6027\u7684\u597d\u7684\u8bdd\u9898", "\u4eca\u5929\u65e9\u4e0a\u7684\u9762\u8bd5\u98989\u9053\uff0c\u6bd4\u8f83\u96be\uff0c", "\n100.\u7ebf\u5f62\u8868a\u3001b\u4e3a\u4e24\u4e2a\u6709\u5e8f\u5347\u5e8f\u7684\u7ebf\u5f62\u8868\uff0c\u7f16\u5199\u4e00\u7a0b\u5e8f\uff0c\u4f7f\u4e24\u4e2a\u6709\u5e8f\u7ebf\u5f62\u8868\u5408\u5e76\u6210\u4e00\u4e2a\u6709\u5e8f\u5347\u5e8f\u7ebf\u5f62\u8868h\uff1b", "\u7b54\u6848\u5728 \u8bf7\u5316\u5927\u5b66 \u4e25\u9510\u654f\u300a\u6570\u636e\u7ed3\u6784\u7b2c\u4e8c\u7248\u300b\u7b2c\u4e8c\u7ae0\u4f8b\u9898\uff0c\u6570\u636e\u7ed3\u6784\u5f53\u4e2d\uff0c\u8fd9\u4e2a\u53eb\u505a\uff1a\u4e24\u8def\u5f52\u5e76\u6392\u5e8f", "\nLinklist *unio(Linklist *p,Linklist *q){", "\nlinklist *R,*pa,*qa,*ra;", "\npa=p;", "\nqa=q;", "\nR=ra=p;", "\nwhile(pa->next!=NULL&&qa->next!=NULL){", "\nif(pa->data>qa->data){", "\nra->next=qa;", "\nqa=qa->next;", "\n}", "\nelse{", "\nra->next=pa;", "\npa=pa->next;", "\n}", "\n}", "\nif(pa->next!=NULL)", "\nra->next=pa;", "\nif(qa->next!=NULL)", "\nra->next==qa;", "\nreturn R;", "\n}", "\n101.\u7528\u9012\u5f52\u7b97\u6cd5\u5224\u65ad\u6570\u7ec4a[N]\u662f\u5426\u4e3a\u4e00\u4e2a\u9012\u589e\u6570\u7ec4\u3002", "\n\u9012\u5f52\u7684\u65b9\u6cd5\uff0c\u8bb0\u5f55\u5f53\u524d\u6700\u5927\u7684\uff0c\u5e76\u4e14\u5224\u65ad\u5f53\u524d\u7684\u662f\u5426\u6bd4\u8fd9\u4e2a\u8fd8\u5927\uff0c\u5927\u5219\u7ee7\u7eed\uff0c\u5426\u5219\u8fd4\u56defalse\u7ed3\u675f\uff1a", "\nbool fun( int a[], int n )", "\n{", "\nif( n= =1 )", "\nreturn true;", "\nif( n= =2 )", "\nreturn a[n-1] >= a[n-2];", "\nreturn fun( a,n-1) && ( a[n-1] >= a[n-2] );", "\n}", "\n102.\u7f16\u5199\u7b97\u6cd5\uff0c\u4ece10\u4ebf\u4e2a\u6d6e\u70b9\u6570\u5f53\u4e2d\uff0c\u9009\u51fa\u5176\u4e2d\u6700\u5927\u768410000\u4e2a\u3002", "\n\u7528\u5916\u90e8\u6392\u5e8f\uff0c\u5728\u300a\u6570\u636e\u7ed3\u6784\u300b\u4e66\u4e0a\u6709\u300a\u8ba1\u7b97\u65b9\u6cd5\u5bfc\u8bba\u300b\u5728\u627e\u5230\u7b2cn\u5927\u7684\u6570\u7684\u7b97\u6cd5\u4e0a\u52a0\u5de5", "\n103.\u7f16\u5199\u4e00unix\u7a0b\u5e8f\uff0c\u9632\u6b62\u50f5\u5c38\u8fdb\u7a0b\u7684\u51fa\u73b0.", "\n\u540c\u5b66\u76844\u9053\u9762\u8bd5\u9898\uff0c\u5e94\u8058\u7684\u804c\u4f4d\u662f\u641c\u7d22\u5f15\u64ce\u5de5\u7a0b\u5e08\uff0c\u540e\u4e24\u9053\u8d85\u7ea7\u96be\uff0c\uff08\u5e0c\u671b\u5927\u5bb6\u591a\u7ed9\u4e00\u4e9b\u7b97\u53d1\uff09", "\n1.\u7ed9\u4e24\u4e2a\u6570\u7ec4\u548c\u4ed6\u4eec\u7684\u5927\u5c0f\uff0c\u8fd8\u6709\u4e00\u52a8\u6001\u5f00\u8f9f\u7684\u5185\u5b58\uff0c\u6c42\u4ea4\u96c6\uff0c\u628a\u4ea4\u96c6\u653e\u5230\u52a8\u6001\u5185\u5b58dongtai\uff0c\u5e76\u4e14\u8fd4\u56de\u4ea4\u96c6\u4e2a\u6570", "\nlong jiaoji(long* a[],long b[],long* alength,long blength,long* dongtai[])", "\n2.\u5355\u8fde\u8868\u7684\u5efa\u7acb\uff0c\u628a\u2019a'\u2013\u2019z\u201926\u4e2a\u5b57\u6bcd\u63d2\u5165\u5230\u8fde\u8868\u4e2d\uff0c\u5e76\u4e14\u5012\u53d9\uff0c\u8fd8\u8981\u6253\u5370\uff01", "\n\u65b9\u6cd51\uff1a", "\ntypedef struct val", "\n{   int date_1;", "\n    struct val *next;", "\n}*p;", "void main(void)", "\n{   char c;", "    for(c=122;c>=97;c\u2013)", "\n       { p.date=c;", "\n         p=p->next;", "\n        }", "    p.next=NULL;", "\n}", "\n}", "\n\u65b9\u6cd52\uff1a", "\nnode *p = NULL;", "\nnode *q = NULL;", "node *head = (node*)malloc(sizeof(node));", "\nhead->data = \u2018 \u2018;head->next=NULL;", "node *first = (node*)malloc(sizeof(node));", "\nfirst->data = \u2018a\u2019;first->next=NULL;head->next = first;", "\np = first;", "int longth = \u2018z\u2019 \u2013 \u2018b\u2019;", "\nint i=0;", "\nwhile ( i\n{", "\nnode *temp = (node*)malloc(sizeof(node));", "\ntemp->data = \u2018b\u2019+i;temp->next=NULL;q=temp;", "head->next = temp; temp->next=p;p=q;", "\ni++;", "\n}", "print(head);", "104.\u53ef\u6015\u7684\u9898\u76ee\u7ec8\u4e8e\u6765\u4e86", "\n\u8c61\u641c\u7d22\u7684\u8f93\u5165\u4fe1\u606f\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u7edf\u8ba1300\u4e07\u8f93\u5165\u4fe1\u606f\u4e2d\u7684\u6700\u70ed\u95e8\u7684\u524d\u5341\u6761\uff0c\u6211\u4eec\u6bcf\u6b21\u8f93\u5165\u7684\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e3a\u4e0d\u8d85\u8fc7255byte,\u5185\u5b58\u4f7f\u7528\u53ea\u67091G,", "\n\u8bf7\u63cf\u8ff0\u601d\u60f3\uff0c\u5199\u51fa\u7b97\u53d1\uff08c\u8bed\u8a00\uff09\uff0c\u7a7a\u95f4\u548c\u65f6\u95f4\u590d\u6742\u5ea6\uff0c", "\n7.\u56fd\u5185\u7684\u4e00\u4e9b\u5e16\u5427\uff0c\u5982baidu,\u6709\u51e0\u5341\u4e07\u4e2a\u4e3b\u9898\uff0c\u5047\u8bbe\u6bcf\u4e00\u4e2a\u4e3b\u9898\u90fd\u6709\u4e0a\u4ebf\u7684\u8ddf\u5e16\u5b50\uff0c\u600e\u4e48\u6837\u8bbe\u8ba1\u8fd9\u4e2a\u7cfb\u7edf\u901f\u5ea6\u6700\u597d\uff0c\u8bf7\u63cf\u8ff0\u601d\u60f3\uff0c\u5199\u51fa\u7b97\u53d1\uff08c\u8bed\u8a00\uff09\uff0c\u7a7a\u95f4\u548c\u65f6\u95f4\u590d\u6742\u5ea6\uff0c", "#include   string.h", "\nmain(void)", "\n{   char   *src=\u201dhello,world\u201d;", "\n    char   *dest=NULL;", "\n    dest=(char   *)malloc(strlen(src));", "\n    int   len=strlen(str);", "\n    char   *d=dest;", "\n    char   *s=src[len];", "\n    while(len\u2013!=0)", "\n      d++=s\u2013;", "\n    printf(\u201c%s\u201d,dest);", "\n}", "\n\u627e\u51fa\u9519\u8bef\uff01\uff01", "\n#include   \u201cstring.h\u201d", "\n#include \u201cstdio.h\u201d", "\n#include \u201cmalloc.h\u201d", "\nmain(void)", "\n{", "\nchar   *src=\u201dhello,world\u201d;", "\n    char   *dest=NULL;", "\n    dest=(char   *)malloc(sizeof(char)*(strlen(src)+1));", "\n    int   len=strlen(src);", "\n    char   *d=dest;", "\n    char   *s=src+len-1;", "\n    while(len\u2013!=0)", "\n      *d++=*s\u2013;", "\n*d=\u2019\\0\u2032;", "\n    printf(\u201c%s\u201d,dest);", "\n}", "\n105.\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u56de\u6587", "\nbool IsSymmetry(const char* p)", "\n\t{", "\n\t\tassert(p!=NULL);", "\n\t\tconst char* q=p;", "\n\t\tint len=0;", "\n\t\twhile(*q++!=\u2019\\0\u2032)", "\n\t\t{", "\n\t\t\tlen++;", "\n\t\t}", "\n\t\tbool bSign=true;", "\n\t\tq=p+len-1;", "\n\t\tif (0", "\n\t\t{", "\n\t\t\tfor (int i=0;i", "\n\t\t\t{", "\n\t\t\t\tif(*p++!=*q\u2013){ bSign=false;break;};", "\n\t\t\t}", "\n\t\t}", "\n\t\tif(bSign==true)", "\n\t\t{", "\n\t\t\tprintf(\u201cYes!\\n\u201d);", "\n\t\t}", "\n\t\telse", "\n\t\t{", "\n\t\t\tprintf(\u201cNo!\\n\u201d);", "\n\t\t}", "\n\t\treturn bSign;", "\n\t}", "\n107.ASDL\u4f7f\u7528\u7684\u662f\u4ec0\u4e48\u534f\u8bae\uff1f\u5e76\u8fdb\u884c\u7b80\u5355\u63cf\u8ff0\uff1f", "108.Static \u4f5c\u7528\u662f\u4ec0\u4e48", "\n\u9996\u5148static\u7684\u6700\u4e3b\u8981\u529f\u80fd\u662f\u9690\u85cf\uff0c\u5176\u6b21\u56e0\u4e3astatic\u53d8\u91cf\u5b58\u653e\u5728\u9759\u6001\u5b58\u50a8\u533a\uff0c\u6240\u4ee5\u5b83\u5177\u5907\u6301\u4e45\u6027\u548c\u9ed8\u8ba4\u503c0\u3002", "\n109.\u4ec0\u4e48\u662f\u9884\u7f16\u8bd1,\u4f55\u65f6\u9700\u8981\u9884\u7f16\u8bd1?", "\n\u9884\u7f16\u8bd1\u53c8\u79f0\u4e3a\u9884\u5904\u7406,\u662f\u505a\u4e9b\u4ee3\u7801\u6587\u672c\u7684\u66ff\u6362\u5de5\u4f5c\u3002\u5904\u7406#\u5f00\u5934\u7684\u6307\u4ee4,\u6bd4\u5982\u62f7\u8d1d#include\u5305\u542b\u7684\u6587\u4ef6\u4ee3\u7801\uff0c#define\u5b8f\u5b9a\u4e49\u7684\u66ff\u6362,\u6761\u4ef6\u7f16\u8bd1\u7b49\uff0c\u5c31\u662f\u4e3a\u7f16\u8bd1\u505a\u7684\u9884\u5907\u5de5\u4f5c\u7684\u9636\u6bb5\uff0c\u4e3b\u8981\u5904\u7406#\u5f00\u59cb\u7684\u9884\u7f16\u8bd1\u6307\u4ee4\uff0c\u9884\u7f16\u8bd1\u6307\u4ee4\u6307\u793a\u4e86\u5728\u7a0b\u5e8f\u6b63\u5f0f\u7f16\u8bd1\u524d\u5c31\u7531\u7f16\u8bd1\u5668\u8fdb\u884c\u7684\u64cd\u4f5c\uff0c\u53ef\u4ee5\u653e\u5728\u7a0b\u5e8f\u4e2d\u7684\u4efb\u4f55\u4f4d\u7f6e\u3002", "c\u7f16\u8bd1\u7cfb\u7edf\u5728\u5bf9\u7a0b\u5e8f\u8fdb\u884c\u901a\u5e38\u7684\u7f16\u8bd1\u4e4b\u524d\uff0c\u5148\u8fdb\u884c\u9884\u5904\u7406\u3002c\u63d0\u4f9b\u7684\u9884\u5904\u7406\u529f\u80fd\u4e3b\u8981\u6709\u4ee5\u4e0b\u4e09\u79cd\uff1a1\uff09\u5b8f\u5b9a\u4e49\u30002\uff09\u6587\u4ef6\u5305\u542b\u30003\uff09\u6761\u4ef6\u7f16\u8bd1", "\uff11\u3001\u603b\u662f\u4f7f\u7528\u4e0d\u7ecf\u5e38\u6539\u52a8\u7684\u5927\u578b\u4ee3\u7801\u4f53\u3002", "\n\uff12\u3001\u7a0b\u5e8f\u7531\u591a\u4e2a\u6a21\u5757\u7ec4\u6210\uff0c\u6240\u6709\u6a21\u5757\u90fd\u4f7f\u7528\u4e00\u7ec4\u6807\u51c6\u7684\u5305\u542b\u6587\u4ef6\u548c\u76f8\u540c\u7684\u7f16\u8bd1\u9009\u9879\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u5c06\u6240\u6709\u5305\u542b\u6587\u4ef6\u9884\u7f16\u8bd1\u4e3a\u4e00\u4e2a\u9884\u7f16\u8bd1\u5934\u3002", "110.\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7684\u533a\u522b", "\n\u4ec0\u4e48\u662f\u8fdb\u7a0b\uff08Process\uff09\uff1a\u666e\u901a\u7684\u89e3\u91ca\u5c31\u662f\uff0c\u8fdb\u7a0b\u662f\u7a0b\u5e8f\u7684\u4e00\u6b21\u6267\u884c\uff0c\u800c\u4ec0\u4e48\u662f\u7ebf\u7a0b\uff08Thread\uff09\uff0c\u7ebf\u7a0b\u53ef\u4ee5\u7406\u89e3\u4e3a\u8fdb\u7a0b\u4e2d\u7684\u6267\u884c\u7684\u4e00\u6bb5\u7a0b\u5e8f\u7247\u6bb5\u3002\u5728\u4e00\u4e2a\u591a\u4efb\u52a1\u73af\u5883\u4e2d\u4e0b\u9762\u7684\u6982\u5ff5\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u7406\u89e3\u4e24\u8005\u95f4\u7684\u5dee\u522b\uff1a ", "\u8fdb\u7a0b\u95f4\u662f\u72ec\u7acb\u7684\uff0c\u8fd9\u8868\u73b0\u5728\u5185\u5b58\u7a7a\u95f4\uff0c\u4e0a\u4e0b\u6587\u73af\u5883\uff1b\u7ebf\u7a0b\u8fd0\u884c\u5728\u8fdb\u7a0b\u7a7a\u95f4\u5185\u3002 \u4e00\u822c\u6765\u8bb2\uff08\u4e0d\u4f7f\u7528\u7279\u6b8a\u6280\u672f\uff09\u8fdb\u7a0b\u662f\u65e0\u6cd5\u7a81\u7834\u8fdb\u7a0b\u8fb9\u754c\u5b58\u53d6\u5176\u4ed6\u8fdb\u7a0b\u5185\u7684\u5b58\u50a8\u7a7a\u95f4\uff1b\u800c\u7ebf\u7a0b\u7531\u4e8e\u5904\u4e8e\u8fdb\u7a0b\u7a7a\u95f4\u5185\uff0c\u6240\u4ee5\u540c\u4e00\u8fdb\u7a0b\u6240\u4ea7\u751f\u7684\u7ebf\u7a0b\u5171\u4eab\u540c\u4e00\u5185\u5b58\u7a7a\u95f4\u3002 \u540c\u4e00\u8fdb\u7a0b\u4e2d\u7684\u4e24\u6bb5\u4ee3\u7801\u4e0d\u80fd\u591f\u540c\u65f6\u6267\u884c\uff0c\u9664\u975e\u5f15\u5165\u7ebf\u7a0b\u3002\u7ebf\u7a0b\u662f\u5c5e\u4e8e\u8fdb\u7a0b\u7684\uff0c\u5f53\u8fdb\u7a0b\u9000\u51fa\u65f6\u8be5\u8fdb\u7a0b\u6240\u4ea7\u751f\u7684\u7ebf\u7a0b\u90fd\u4f1a\u88ab\u5f3a\u5236\u9000\u51fa\u5e76\u6e05\u9664\u3002\u7ebf\u7a0b\u5360\u7528\u7684\u8d44\u6e90\u8981\u5c11\u4e8e\u8fdb\u7a0b\u6240\u5360\u7528\u7684\u8d44\u6e90\u3002 \u8fdb\u7a0b\u548c\u7ebf\u7a0b\u90fd\u53ef\u4ee5\u6709\u4f18\u5148\u7ea7\u3002\u5728\u7ebf\u7a0b\u7cfb\u7edf\u4e2d\u8fdb\u7a0b\u4e5f\u662f\u4e00\u4e2a\u7ebf\u7a0b\u3002\u53ef\u4ee5\u5c06\u8fdb\u7a0b\u7406\u89e3\u4e3a\u4e00\u4e2a\u7a0b\u5e8f\u7684\u7b2c\u4e00\u4e2a\u7ebf\u7a0b\u3002", "\u7ebf\u7a0b\u662f\u6307\u8fdb\u7a0b\u5185\u7684\u4e00\u4e2a\u6267\u884c\u5355\u5143,\u4e5f\u662f\u8fdb\u7a0b\u5185\u7684\u53ef\u8c03\u5ea6\u5b9e\u4f53.\u4e0e\u8fdb\u7a0b\u7684\u533a\u522b:", "\n(1)\u5730\u5740\u7a7a\u95f4:\u8fdb\u7a0b\u5185\u7684\u4e00\u4e2a\u6267\u884c\u5355\u5143;\u8fdb\u7a0b\u81f3\u5c11\u6709\u4e00\u4e2a\u7ebf\u7a0b;\u5b83\u4eec\u5171\u4eab\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4;\u800c\u8fdb\u7a0b\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u5730\u5740\u7a7a\u95f4;", "\n(2)\u8fdb\u7a0b\u662f\u8d44\u6e90\u5206\u914d\u548c\u62e5\u6709\u7684\u5355\u4f4d,\u540c\u4e00\u4e2a\u8fdb\u7a0b\u5185\u7684\u7ebf\u7a0b\u5171\u4eab\u8fdb\u7a0b\u7684\u8d44\u6e90", "\n(3)\u7ebf\u7a0b\u662f\u5904\u7406\u5668\u8c03\u5ea6\u7684\u57fa\u672c\u5355\u4f4d,\u4f46\u8fdb\u7a0b\u4e0d\u662f.", "\n(4)\u4e8c\u8005\u5747\u53ef\u5e76\u53d1\u6267\u884c."], "title": "c++\u7b14\u8bd5\u9762\u8bd5\u5b9d\u51782011\u7248 90-110"},
{"contents": ["61.\u8bba\u8ff0\u542b\u53c2\u6570\u7684\u5b8f\u4e0e\u51fd\u6570\u7684\u4f18\u7f3a\u70b9\u3002 ", "\u666e\u5929C++\u7b14\u8bd5\u9898", "\n\u3000\u30001\uff0e\u5b9e\u73b0\u53cc\u5411\u94fe\u8868\u5220\u9664\u4e00\u4e2a\u8282\u70b9P\uff0c\u5728\u8282\u70b9P\u540e\u63d2\u5165\u4e00\u4e2a\u8282\u70b9\uff0c\u5199\u51fa\u8fd9\u4e24\u4e2a\u51fd\u6570\u3002", "\n\u3000\u30002\uff0e\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u5c06\u5176\u4e2d\u7684\\t\u90fd\u8f6c\u6362\u62104\u4e2a\u7a7a\u683c\u3002 ", "61.Windows\u7a0b\u5e8f\u7684\u5165\u53e3\u662f\u54ea\u91cc\uff1f\u5199\u51faWindows\u6d88\u606f\u673a\u5236\u7684\u6d41\u7a0b\u3002 ", "4\uff0e\u5982\u4f55\u5b9a\u4e49\u548c\u5b9e\u73b0\u4e00\u4e2a\u7c7b\u7684\u6210\u5458\u51fd\u6570\u4e3a\u56de\u8c03\u51fd\u6570\uff1f", "62.C++\u91cc\u9762\u662f\u4e0d\u662f\u6240\u6709\u7684\u52a8\u4f5c\u90fd\u662fmain()\u5f15\u8d77\u7684\uff1f\u5982\u679c\u4e0d\u662f\uff0c\u8bf7\u4e3e\u4f8b\u3002", "\n\u3000\u3000", "\n6\uff0eC++\u91cc\u9762\u5982\u4f55\u58f0\u660econst void f(void)\u51fd\u6570\u4e3aC\u7a0b\u5e8f\u4e2d\u7684\u5e93\u51fd\u6570\uff1f", "\n\u3000\u30007\uff0e\u4e0b\u5217\u54ea\u4e24\u4e2a\u662f\u7b49\u540c\u7684", "\n\u3000\u3000int b;", "\n\u3000\u3000A const int* a = &b;", "\n\u3000\u3000B const* int a = &b;", "\n\u3000\u3000C const int* const a = &b;", "\n\u3000\u3000D int const* const a = &b;", "\n\u3000\u30008\uff0e\u5185\u8054\u51fd\u6570\u5728\u7f16\u8bd1\u65f6\u662f\u5426\u505a\u53c2\u6570\u7c7b\u578b\u68c0\u67e5\uff1f", "\n\u3000\u3000void g(base & b){", "\n\u3000\u3000 b.play;", "\n\u3000\u3000}", "\n\u3000\u3000void main(){", "\n\u3000\u3000 son s;", "\n\u3000\u3000 g(s);", "\n\u3000\u3000 return;", "\n\u3000\u3000} ", "\u5927\u5510\u7535\u4fe1", "\n\u3000\u3000DTT\u7b14\u8bd5\u9898", "\n\u3000\u3000\u8003\u8bd5\u65f6\u95f4\u4e00\u5c0f\u65f6\uff0c\u7b2c\u4e00\u90e8\u5206\u662f\u586b\u7a7a\u548c\u9009\u62e9\uff1a", "\n\u3000\u30001\uff0e\u6570\u52176\uff0c10\uff0c18\uff0c32\uff0c\u201c\uff1f\u201d\uff0c\u95ee\u201c\uff1f\u201d\u662f\u51e0\uff1f", "\n\u3000\u30002\uff0e\u67d0\u4eba\u51fa70\u4e70\u8fdb\u4e00\u4e2ax\uff0c80\u5356\u51fa\uff0c90\u4e70\u56de\uff0c100\u5356\u51fa\uff0c\u8fd9\u6869\u4e70\u5356\u600e\u4e48\u6837\uff1f", "\n\u3000\u30003\uff0e\u6708\u7403\u7ed5\u5730\u7403\u4e00\u5708\uff0c\u81f3\u5c11\u8981\u591a\u5c11\u65f6\u95f4\uff1f", "\n\u3000\u30004\uff0e7\u4e2a\u4eba\u75287\u5c0f\u65f6\u6316\u4e867\u7c73\u7684\u6c9f\uff0c\u4ee5\u540c\u6837\u7684\u901f\u5ea6\u572850\u5c0f\u65f6\u631650\u7c73\u7684\u6c9f\u8981\u591a\u5c11\u4eba\uff1f", "\n\u3000\u30005\uff0e\u9c7c\u5934\u957f9\uff0c\u9c7c\u5c3e\u7b49\u4e8e\u9c7c\u5934\u52a0\u534a\u4e2a\u9c7c\u8eab\uff0c\u9c7c\u8eab\u7b49\u4e8e\u9c7c\u5934\u52a0\u9c7c\u5c3e\uff0c\u95ee\u9c7c\u5168\u957f\u591a\u5c11\uff1f", "\n\u3000\u30006\uff0e\u4e00\u4e2a\u5c0f\u59d0\u4e70\u4e86\u4e00\u5757\u624b\u8868\uff0c\u56de\u5bb6\u53d1\u73b0\u624b\u8868\u6bd4\u5979\u5bb6\u7684\u8868\u6162\u4e86\u4e24\u5206\u949f\uff0c\u665a\u4e0a\u770b\u65b0\u95fb\u7684\u65f6\u5019", "\n\u53c8\u53d1\u73b0\u5979\u5bb6\u7684\u8868\u6bd4\u65b0\u95fb\u91cc\u7684\u65f6\u95f4\u6162\u4e86\u4e24\u5206\u949f\uff0c\u5219 \u3002", "\n\u3000\u3000A \u624b\u8868\u548c\u65b0\u95fb\u91cc\u7684\u65f6\u95f4\u4e00\u6837", "\n\u3000\u3000B \u624b\u8868\u6bd4\u65b0\u95fb\u91cc\u7684\u65f6\u95f4\u6162", "\n\u3000\u3000C \u624b\u8868\u6bd4\u65b0\u95fb\u91cc\u7684\u65f6\u95f4\u5feb", "\n\u3000\u30007\uff0e\u738b\u5148\u751f\u770b\u5230\u4e00\u5219\u62db\u8058\u542f\u4e8b\uff0c\u53d1\u73b0\u4e24\u4e2a\u516c\u53f8\u9664\u4e86\u4ee5\u4e0b\u6761\u4ef6\u4e0d\u540c\u5916\uff0c\u5176\u4ed6\u6761\u4ef6\u90fd\u76f8\u540c ", "\u3000\u3000A \u534a\u5e74\u5e74\u85aa50\u4e07\uff0c\u6bcf\u534a\u5e74\u6da85\u4e07", "\n\u3000\u3000B \u4e00\u5e74\u5e74\u85aa100\u4e07\uff0c\u6bcf\u4e00\u5e74\u6da820\u4e07", "\n\u3000\u3000\u738b\u5148\u751f\u60f3\u53bb\u4e00\u5bb6\u5f85\u9047\u6bd4\u8f83\u4f18\u539a\u7684\u516c\u53f8\uff0c\u4ed6\u4f1a\u53bb\u54ea\u5bb6\uff1f", "\n\u3000\u300010\uff0e\u95ee\u54ea\u4e2a\u888b\u5b50\u91cc\u6709\u91d1\u5b50\uff1f", "\n\u3000\u3000A\u888b\u5b50\u4e0a\u7684\u6807\u7b7e\u662f\u8fd9\u6837\u5199\u7684\uff1aB\u888b\u5b50\u4e0a\u7684\u8bdd\u662f\u5bf9\u7684\uff0c\u91d1\u5b50\u5728A\u888b\u5b50\u3002", "\n\u3000\u3000B\u888b\u5b50\u4e0a\u7684\u6807\u7b7e\u662f\u8fd9\u6837\u5199\u7684\uff1aA\u888b\u5b50\u4e0a\u7684\u8bdd\u662f\u9519\u7684\uff0c\u91d1\u5b50\u5728A\u888b\u5b50\u91cc\u3002", "\n\u3000\u300011\uff0e3\u4e2a\u4eba\u4f4f\u9152\u5e9730\u5757\u94b1\uff0c\u7ecf\u7406\u627e\u56de5\u5757\u94b1\uff0c\u670d\u52a1\u751f\u4ece\u4e2d\u85cf\u4e862\u5757\u94b1\uff0c\u627e\u7ed9\u6bcf\u4eba1\u5757\u94b1\uff0c", "\n3\u00d7\uff0810\uf02d1\uff09+2=29\uff0c\u95ee\u8fd9\u662f\u600e\u4e48\u56de\u4e8b\uff1f", "\n\u3000\u300012\uff0e\u4e09\u7bc7\u5199\u4f5c\uff0c\u5747\u4e3a\u4e66\u4fe1\u5f62\u5f0f\u3002", "\n\u3000\u3000\uff081\uff09\u4e00\u7247\u4e2d\u6587\u7684\u795d\u8d3a\u4fe1\uff0c\u795d\u8d3a\u67d0\u7537\u5f53\u4e86\u67d0\u516c\u53f8xx", "\n\u3000\u3000\uff082\uff09\u4e24\u7bc7\u82f1\u6587\u7684\uff0c\u4e00\u662f\u8bf4\u6709\u4e8b\u4e0d\u80fd\u5e94\u9080\uff0c\u6d3e\u522b\u4eba\u53bb\uff1b\u53e6\u4e00\u7bc7\u662f\u8ba8\u503a\u7684\uff0c7\u5929\u4e0d\u7ed9\u94b1\u5c31", "\n\u8d70\u4eba\uff08\u4e3b\u8981\u8003business letter\u683c\u5f0f\uff09\u3002", "\n\u3000\u3000\u5927\u5510\u9762\u8bd5\u8bd5\u9898", "\n\u3000\u30001\uff0e\u4ec0\u4e48\u662f\u4e2d\u65ad\uff1f\u4e2d\u65ad\u53d1\u751f\u65f6CPU\u505a\u4ec0\u4e48\u5de5\u4f5c\uff1f", "\n\u3000\u30002\uff0eCPU\u5728\u4e0a\u7535\u540e\uff0c\u8fdb\u5165\u64cd\u4f5c\u7cfb\u7edf\u7684main()\u4e4b\u524d\u5fc5\u987b\u505a\u4ec0\u4e48\u5de5\u4f5c\uff1f", "\n\u3000\u30003\uff0e\u7b80\u8ff0ISO OSI\u7684\u7269\u7406\u5c42Layer1\uff0c\u94fe\u8def\u5c42Layer2\uff0c\u7f51\u7edc\u5c42Layer3\u7684\u4efb\u52a1\u3002", "\n\u3000\u30004\uff0e\u6709\u7ebf\u7535\u8bdd\u548c\u65e0\u7ebf\u7535\u8bdd\u6709\u4f55\u533a\u522b\uff1f\u65e0\u7ebf\u7535\u8bdd\u7279\u522b\u9700\u8981\u6ce8\u610f\u7684\u662f\u4ec0\u4e48\uff1f", "\n\u3000\u3000", "\n63.\u8f6f\u4ef6\u5f00\u53d1\u4e94\u4e2a\u4e3b\u8981step\u662f\u4ec0\u4e48\uff1f ", "\u3000\u30006\uff0e\u4f60\u5728\u5f00\u53d1\u8f6f\u4ef6\u7684\u65f6\u5019\uff0c\u8fd95\u4e2astep\u5206\u522b\u5360\u7528\u7684\u65f6\u95f4\u767e\u5206\u6bd4\u662f\u591a\u5c11\uff1f", "\n\u3000\u30007\uff0emakefile\u6587\u4ef6\u7684\u4f5c\u7528\u662f\u4ec0\u4e48\uff1f", "\n\u3000\u30008\uff0eUNIX\u663e\u793a\u6587\u4ef6\u5939\u4e2d\uff0c\u6587\u4ef6\u540d\u7684\u547d\u4ee4\u662f\u4ec0\u4e48\uff1f\u80fd\u4f7f\u6587\u4ef6\u5185\u5bb9\u663e\u793a\u5728\u5c4f\u5e55\u7684\u547d\u4ee4\u662f\u4ec0\u4e48", "\n\uff1f", "\n\u3000\u30009\uff0e\uff08\u9009\u505a\uff09\u624b\u673a\u7528\u6237\u5728\u4ece\u4e00\u4e2a\u57fa\u7ad9\u6f2b\u6e38\u5230\u53e6\u4e00\u4e2a\u57fa\u7ad9\u7684\u8fc7\u7a0b\u4e2d\uff0c\u90fd\u4f1a\u53d1\u751f\u4ec0\u4e48? ", "\u7f51\u901a\u7b14\u8bd5\u9898", "\n\u3000\u3000\u9009\u62e9\u9898\uff08\u6bcf\u98985\u5206\uff0c\u53ea\u6709\u4e00\u4e2a\u6b63\u786e\u7b54\u6848\uff09", "\n\u3000\u30001\uff0e\u4e2d\u56fd1\u53f7\u4fe1\u4ee4\u534f\u8bae\u5c5e\u4e8e \u7684\u534f\u8bae\u3002", "\n\u3000\u3000A ccs B cas C ip D atm", "\n\u3000\u30002\uff0eisdnpri\u534f\u8bae\u5168\u79f0\u662f \u3002", "\n\u3000\u3000A \u7efc\u5408\u4e1a\u52a1\u6a21\u62df\u7f51\u57fa\u901f\u534f\u8bae", "\n\u3000\u3000B \u7efc\u5408\u4e1a\u52a1\u6a21\u62df\u7f51\u6a21\u62df\u534f\u8bae", "\n\u3000\u3000C \u7efc\u5408\u4e1a\u52a1\u6570\u5b57\u7f51\u57fa\u7387\u534f\u8bae", "\n\u3000\u3000D \u7efc\u5408\u4e1a\u52a1\u6570\u5b57\u7f51\u57fa\u6b21\u534f\u8bae", "\n\u3000\u30003\uff0e\u8def\u7531\u534f\u8bae\u4e2d\uff0c \u534f\u8bae\u662f\u7528\u8ddd\u79bb\u4f5c\u4e3a\u5411\u91cf\u7684\u3002", "\n\u3000\u3000A ospf B bgp C is-is D rip", "\n\u3000\u30004\uff0e\u4e2d\u56fd\u667a\u80fd\u7f51\u4e2d\uff0cssp\u4e0escp\u95f4\u6700\u4e0a\u5c42\u7684ss7\u534f\u8bae\u662f \u3002", "\n\u3000\u3000A incs B is41b C is41c D inap", "\n\u3000\u30005\uff0edtmf\u5168\u79f0\u662f \u3002", "\n\u3000\u3000A \u53cc\u97f3\u591a\u9891 B\u591a\u97f3\u53cc\u9891 C\u591a\u97f3\u4e09\u9891 D\u4e09\u97f3\u591a\u9891", "\n\u3000\u30006\uff0e\u8ba1\u7b97\u673a\u7684\u57fa\u672c\u7ec4\u6210\u90e8\u5206\u4e2d\uff0c\u4e0d\u5305\u542b\u4e0b\u9762\u8bbe\u5907\u7684\u662f \u3002", "\n\u3000\u3000A cpu B\u8f93\u5165\u8bbe\u5907 C\u5b58\u50a8\u5668 D\u63a5\u53e3", "\n\u3000\u30007\uff0e\u8109\u51b2\u7f16\u7801\u8c03\u5236\u7684\u7b80\u79f0\u662f \u3002", "\n\u3000\u3000A pcm B pam C (delta)M D atm", "\n\u3000\u30008\uff0e\u666e\u901a\u7535\u8bdd\u7ebf\u63a5\u53e3\u4e13\u4e1a\u79f0\u547c\u662f \u3002", "\n\u3000\u3000A rj11 B rj45 C rs232 D bnc", "\n\u3000\u30009\uff0e\u73b0\u6709\u7684\u516c\u5171\u6570\u636e\u7f51\u90fd\u91c7\u7528 \u3002", "\n\u3000\u3000A\u7535\u8def\u4ea4\u6362\u6280\u672f B\u62a5\u6587\u4ea4\u6362\u6280\u672f", "\n\u3000\u3000C\u8bed\u97f3\u63d2\u7a7a D\u5206\u7ec4\u4ea4\u6362", "\n\u3000\u300010\uff0ess7\u534f\u8bae\u4e2d\u7684\u5236\u6b62\u5e02\u5fd9\u6d88\u606f\u7b80\u5199\u4e3a \u3002", "\n\u3000\u3000A stb B slb C sub D spb", "\n\u3000\u3000\u7b80\u7b54\u9898\uff08\u6bcf\u989810\u5206\uff09", "\n\u3000\u30001\uff0e\u7b80\u8ff0\u666e\u901a\u7535\u8bdd\u4e0eIP\u7535\u8bdd\u7684\u533a\u522b\u3002", "\n\u3000\u30002\uff0e\u7b80\u8ff0\u968f\u8def\u4fe1\u4ee4\u4e0e\u516c\u8def\u4fe1\u4ee4\u7684\u6839\u672c\u533a\u522b\u3002", "\n\u3000\u30003\uff0e\u8bf4\u660e\u63a9\u7801\u7684\u4e3b\u8981\u4f5c\u7528\u3002", "\n\u3000\u30004\uff0ess7\u534f\u8bae\u4e2d\uff0c\u6709\u4e09\u5927\u8981\u7d20\u51b3\u5b9a\u5176\u5177\u4f53\u5b9a\u4f4d\uff0c\u54ea\u4e09\u5927\u8981\u7d20\uff1f", "\n\u3000\u30005\uff0e\u63cf\u8ff0ss7\u7684\u57fa\u672c\u901a\u8bdd\u8fc7\u7a0b\u3002", "\n\u3000\u30006\uff0e\u7b80\u8ff0\u901a\u4fe1\u7f51\u7684\u7ec4\u6210\u7ed3\u6784\u3002", "\n\u3000\u30007\uff0e\u9762\u5411\u8fde\u63a5\u4e0e\u9762\u5411\u975e\u8fde\u63a5\u5404\u6709\u4f55\u5229\u5f0a\uff1f", "\n\u3000\u30008\uff0e\u5199\u51fa\u7231\u5c14\u5170\u7684\u57fa\u672c\u8ba1\u7b97\u516c\u5f0f\u3002", "\n\u3000\u30009\uff0e\u6570\u636e\u7f51\u4e3b\u8981\u6709\u54ea\u4e9b\u8bbe\u5907\uff1f", "\n\u3000\u300010\uff0e\u4e2d\u56fd\u4e00\u53f7\u534f\u8bae\u662f\u5982\u4f55\u5728\u88ab\u53eb\u53f7\u7801\u4e2d\u63d2\u5165\u4e3b\u53eb\u53f7\u7801\u7684\uff1f ", "\u4e1c\u4fe1\u7b14\u8bd5\u9898\u76ee", "\n\u3000\u3000\u7b14\u8bd5\uff1a30\u5206\u949f\u3002", "\n\u3000\u30001\uff0e\u538b\u63a7\u632f\u8361\u5668\u7684\u82f1\u6587\u7f29\u5199\u3002", "\n\u3000\u30002\uff0e\u52a8\u6001\u968f\u673a\u5b58\u50a8\u5668\u7684\u82f1\u6587\u7f29\u5199\u3002", "\n\u3000\u30003\uff0e\u9009\u62e9\u7535\u963b\u65f6\u8981\u8003\u8651\u4ec0\u4e48\uff1f", "\n\u3000\u30004\uff0e\u5355\u7247\u673a\u4e0a\u7535\u540e\u6ca1\u6709\u8fd0\u8f6c\uff0c\u9996\u5148\u8981\u68c0\u67e5\u4ec0\u4e48\uff1f", "\n\u3000\u30005\uff0e\u8ba1\u7b97\u673a\u7684\u57fa\u672c\u7ec4\u6210\u90e8\u5206\u53ca\u5176\u5404\u81ea\u7684\u4f5c\u7528\u3002", "\n\u3000\u30006\uff0e\u600e\u6837\u7528D\u89e6\u53d1\u5668\u3001\u4e0e\u6216\u975e\u95e8\u7ec4\u6210\u4e8c\u5206\u9891\u7535\u8def\uff1f", "64.static\u6709\u4ec0\u4e48\u7528\u9014\uff1f\uff08\u8bf7\u81f3\u5c11\u8bf4\u660e\u4e24\u79cd\uff09", "\n\u7b54 \u30011.\u9650\u5236\u53d8\u91cf\u7684\u4f5c\u7528\u57df(\u6587\u4ef6\u7ea7\u7684)\u3002", "\n 2.\u8bbe\u7f6e\u53d8\u91cf\u7684\u5b58\u50a8\u57df(\u5168\u5c40\u6570\u636e\u533a)\u3002", "65.\u5f15\u7528\u4e0e\u6307\u9488\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u7b54 \u30011) \u5f15\u7528\u5fc5\u987b\u88ab\u521d\u59cb\u5316\uff0c\u6307\u9488\u4e0d\u5fc5\u3002", "\n2) \u5f15\u7528\u521d\u59cb\u5316\u4ee5\u540e\u4e0d\u80fd\u88ab\u6539\u53d8\uff0c\u6307\u9488\u53ef\u4ee5\u6539\u53d8\u6240\u6307\u7684\u5bf9\u8c61\u3002", "\n3) \u4e0d\u5b58\u5728\u6307\u5411\u7a7a\u503c\u7684\u5f15\u7528\uff0c\u4f46\u662f\u5b58\u5728\u6307\u5411\u7a7a\u503c\u7684\u6307\u9488\u3002", "\n66.\u63cf\u8ff0\u5b9e\u65f6\u7cfb\u7edf\u7684\u57fa\u672c\u7279\u6027", "\n\u7b54 \u3001\u5728\u7279\u5b9a\u65f6\u95f4\u5185\u5b8c\u6210\u7279\u5b9a\u7684\u4efb\u52a1\uff0c\u5b9e\u65f6\u6027\u4e0e\u53ef\u9760\u6027\u3002", "67.\u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u5728\u5185\u5b58\u4e2d\u662f\u5426\u6709\u533a\u522b\uff1f\u5982\u679c\u6709\uff0c\u662f\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u7b54 \u3001\u5168\u5c40\u53d8\u91cf\u50a8\u5b58\u5728\u9759\u6001\u6570\u636e\u533a\uff0c\u5c40\u90e8\u53d8\u91cf\u5728\u5806\u6808\u4e2d\u3002", "68.\u4ec0\u4e48\u662f\u5e73\u8861\u4e8c\u53c9\u6811\uff1f", "\n\u7b54 \u3001\u5de6\u53f3\u5b50\u6811\u90fd\u662f\u5e73\u8861\u4e8c\u53c9\u6811 \u4e14\u5de6\u53f3\u5b50\u6811\u7684\u6df1\u5ea6\u5dee\u503c\u7684\u7edd\u5bf9\u503c\u4e0d\u5927\u4e8e1\u3002", "69.\u5806\u6808\u6ea2\u51fa\u4e00\u822c\u662f\u7531\u4ec0\u4e48\u539f\u56e0\u5bfc\u81f4\u7684\uff1f", "\n\u7b54 \u30011.\u6ca1\u6709\u56de\u6536\u5783\u573e\u8d44\u6e90", "\n\t 2.\u5c42\u6b21\u592a\u6df1\u7684\u9012\u5f52\u8c03\u7528\t", "70.\u4ec0\u4e48\u51fd\u6570\u4e0d\u80fd\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff1f", "\n\u7b54 \u3001constructor", "\n\tDeconstructor \u53ef\u4ee5\u58f0\u660e\u4e3a\u865a\u51fd\u6570\u3002", "\n\t\u7cfb\u7edf\u4e3a\u4e00\u4e2a\u7a7a\u7c7b\u521b\u5efa\u7684\u6210\u5458\u51fd\u6570\u6709\u90a3\u4e9b\u3002", "71.\u5192\u6ce1\u6392\u5e8f\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u4ec0\u4e48\uff1f", "\n\u7b54 \u3001O(n^2)", "72.\u5199\u51fafloat x \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684if\u8bed\u53e5\u3002", "\n\u7b54 \u3001if(x>0.000001&&x\n", "73.Internet\u91c7\u7528\u54ea\u79cd\u7f51\u7edc\u534f\u8bae\uff1f\u8be5\u534f\u8bae\u7684\u4e3b\u8981\u5c42\u6b21\u7ed3\u6784\uff1f", "\u7b54 \u3001tcp/ip \u5e94\u7528\u5c42/\u4f20\u8f93\u5c42/\u7f51\u7edc\u5c42/\u6570\u636e\u94fe\u8def\u5c42/\u7269\u7406\u5c42", "74.Internet\u7269\u7406\u5730\u5740\u548cIP\u5730\u5740\u8f6c\u6362\u91c7\u7528\u4ec0\u4e48\u534f\u8bae\uff1f", "\n\u7b54 \u3001ARP (Address Resolution Protocol)\uff08\u5730\u5740\u89e3\u6790\u534f\u8bae\uff09", "75.IP\u5730\u5740\u7684\u7f16\u7801\u5206\u4e3a\u54ea\u4fe9\u90e8\u5206\uff1f", "\n\u7b54 \u3001IP\u5730\u5740\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff0c\u7f51\u7edc\u53f7\u548c\u4e3b\u673a\u53f7\u3002\u4e0d\u8fc7\u662f\u8981\u548c\u201c\u5b50\u7f51\u63a9\u7801\u201d\u6309\u4f4d\u4e0e\u4e4b\u540e\u624d\u80fd\u533a\u5206\u54ea\u4e9b\u662f\u7f51\u7edc\u4f4d\u54ea\u4e9b\u662f\u4e3b\u673a\u4f4d\u3002", "76.\u7528\u6237\u8f93\u5165M,N\u503c\uff0c\u4ece1\u81f3N\u5f00\u59cb\u987a\u5e8f\u5faa\u73af\u6570\u6570\uff0c\u6bcf\u6570\u5230M\u8f93\u51fa\u8be5\u6570\u503c\uff0c\u76f4\u81f3\u5168\u90e8\u8f93\u51fa\u3002\u5199\u51faC\u7a0b\u5e8f\u3002", "\n\u7b54 \u3001\u5faa\u73af\u94fe\u8868\uff0c\u7528\u53d6\u4f59\u64cd\u4f5c\u505a", "77.\u4e0d\u80fd\u505aswitch()\u7684\u53c2\u6570\u7c7b\u578b\u662f\uff1a", "\n\u7b54 \u3001switch\u7684\u53c2\u6570\u4e0d\u80fd\u4e3a\u5b9e\u578b\u3002", "\n\u534e\u4e3a", "\n78.\u5c40\u90e8\u53d8\u91cf\u80fd\u5426\u548c\u5168\u5c40\u53d8\u91cf\u91cd\u540d\uff1f", "\n\u7b54\u3001\u80fd\uff0c\u5c40\u90e8\u4f1a\u5c4f\u853d\u5168\u5c40\u3002\u8981\u7528\u5168\u5c40\u53d8\u91cf\uff0c\u9700\u8981\u4f7f\u7528\u201d::\u201d", "\n\u5c40\u90e8\u53d8\u91cf\u53ef\u4ee5\u4e0e\u5168\u5c40\u53d8\u91cf\u540c\u540d\uff0c\u5728\u51fd\u6570\u5185\u5f15\u7528\u8fd9\u4e2a\u53d8\u91cf\u65f6\uff0c\u4f1a\u7528\u5230\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u800c\u4e0d\u4f1a\u7528\u5230\u5168\u5c40\u53d8\u91cf\u3002\u5bf9\u4e8e\u6709\u4e9b\u7f16\u8bd1\u5668\u800c\u8a00\uff0c\u5728\u540c\u4e00\u4e2a\u51fd\u6570\u5185\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u6bd4\u5982\u5728\u4e24\u4e2a\u5faa\u73af\u4f53\u5185\u90fd\u5b9a\u4e49\u4e00\u4e2a\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u800c\u90a3\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u5c31\u5728\u90a3\u4e2a\u5faa\u73af\u4f53\u5185", "79.\u5982\u4f55\u5f15\u7528\u4e00\u4e2a\u5df2\u7ecf\u5b9a\u4e49\u8fc7\u7684\u5168\u5c40\u53d8\u91cf\uff1f", "\n\u7b54 \u3001\u53ef\u4ee5\u7528\u5f15\u7528\u5934\u6587\u4ef6\u7684\u65b9\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u7528extern\u5173\u952e\u5b57\uff0c\u5982\u679c\u7528\u5f15\u7528\u5934\u6587\u4ef6\u65b9\u5f0f\u6765\u5f15\u7528\u67d0\u4e2a\u5728\u5934\u6587\u4ef6\u4e2d\u58f0\u660e\u7684\u5168\u5c40\u53d8\u7406\uff0c\u5047\u5b9a\u4f60\u5c06\u90a3\u4e2a\u53d8\u5199\u9519\u4e86\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4\u4f1a\u62a5\u9519\uff0c\u5982\u679c\u4f60\u7528extern\u65b9\u5f0f\u5f15\u7528\u65f6\uff0c\u5047\u5b9a\u4f60\u72af\u4e86\u540c\u6837\u7684\u9519\u8bef\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4\u4e0d\u4f1a\u62a5\u9519\uff0c\u800c\u5728\u8fde\u63a5\u671f\u95f4\u62a5\u9519", "80.\u5168\u5c40\u53d8\u91cf\u53ef\u4e0d\u53ef\u4ee5\u5b9a\u4e49\u5728\u53ef\u88ab\u591a\u4e2a.C\u6587\u4ef6\u5305\u542b\u7684\u5934\u6587\u4ef6\u4e2d\uff1f\u4e3a\u4ec0\u4e48\uff1f", "\n\u7b54 \u3001\u53ef\u4ee5\uff0c\u5728\u4e0d\u540c\u7684C\u6587\u4ef6\u4e2d\u4ee5static\u5f62\u5f0f\u6765\u58f0\u660e\u540c\u540d\u5168\u5c40\u53d8\u91cf\u3002", "\n\u53ef\u4ee5\u5728\u4e0d\u540c\u7684C\u6587\u4ef6\u4e2d\u58f0\u660e\u540c\u540d\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u524d\u63d0\u662f\u5176\u4e2d\u53ea\u80fd\u6709\u4e00\u4e2aC\u6587\u4ef6\u4e2d\u5bf9\u6b64\u53d8\u91cf\u8d4b\u521d\u503c\uff0c\u6b64\u65f6\u8fde\u63a5\u4e0d\u4f1a\u51fa\u9519", "81.\u8bed\u53e5for( \uff1b1 \uff1b)\u6709\u4ec0\u4e48\u95ee\u9898\uff1f\u5b83\u662f\u4ec0\u4e48\u610f\u601d\uff1f", "\n\u7b54 \u3001\u548cwhile(1)\u76f8\u540c\u3002", "82.do\u2026\u2026while\u548cwhile\u2026\u2026do\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u7b54 \u3001\u524d\u4e00\u4e2a\u5faa\u73af\u4e00\u904d\u518d\u5224\u65ad\uff0c\u540e\u4e00\u4e2a\u5224\u65ad\u4ee5\u540e\u518d\u5faa\u73af", "83.\u8bf7\u5199\u51fa\u4e0b\u5217\u4ee3\u7801\u7684\u8f93\u51fa\u5185\u5bb9", "\n#i nclude", "\nmain()", "\n{", "\nint a,b,c,d;", "\na=10;", "\nb=a++;", "\nc=++a;", "\nd=10*a++;", "\nprintf(\u201cb\uff0cc\uff0cd\uff1a%d\uff0c%d\uff0c%d\u201d\uff0cb\uff0cc\uff0cd\uff09;", "\nreturn 0;", "\n}", "\n\u7b54 \u300110\uff0c12\uff0c120", "\n84.statac \u5168\u5c40\u53d8\u91cf\u3001\u5c40\u90e8\u53d8\u91cf\u3001\u51fd\u6570\u4e0e\u666e\u901a\u5168\u5c40\u53d8\u91cf\u3001\u5c40\u90e8\u53d8\u91cf\u3001\u51fd\u6570", "\nstatic\u5168\u5c40\u53d8\u91cf\u4e0e\u666e\u901a\u7684\u5168\u5c40\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1fstatic\u5c40\u90e8\u53d8\u91cf\u548c\u666e\u901a\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1fstatic\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u7b54 \u3001\u5168\u5c40\u53d8\u91cf(\u5916\u90e8\u53d8\u91cf)\u7684\u8bf4\u660e\u4e4b\u524d\u518d\u51a0\u4ee5static \u5c31\u6784\u6210\u4e86\u9759\u6001\u7684\u5168\u5c40\u53d8\u91cf\u3002\u5168\u5c40\u53d8\u91cf\u672c\u8eab\u5c31\u662f\u9759\u6001\u5b58\u50a8\u65b9\u5f0f\uff0c \u9759\u6001\u5168\u5c40\u53d8\u91cf\u5f53\u7136\u4e5f\u662f\u9759\u6001\u5b58\u50a8\u65b9\u5f0f\u3002 \u8fd9\u4e24\u8005\u5728\u5b58\u50a8\u65b9\u5f0f\u4e0a\u5e76\u65e0\u4e0d\u540c\u3002\u8fd9\u4e24\u8005\u7684\u533a\u522b\u867d\u5728\u4e8e\u975e\u9759\u6001\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u662f\u6574\u4e2a\u6e90\u7a0b\u5e8f\uff0c \u5f53\u4e00\u4e2a\u6e90\u7a0b\u5e8f\u7531\u591a\u4e2a\u6e90\u6587\u4ef6\u7ec4\u6210\u65f6\uff0c\u975e\u9759\u6001\u7684\u5168\u5c40\u53d8\u91cf\u5728\u5404\u4e2a\u6e90\u6587\u4ef6\u4e2d\u90fd\u662f\u6709\u6548\u7684\u3002 \u800c\u9759\u6001\u5168\u5c40\u53d8\u91cf\u5219\u9650\u5236\u4e86\u5176\u4f5c\u7528\u57df\uff0c \u5373\u53ea\u5728\u5b9a\u4e49\u8be5\u53d8\u91cf\u7684\u6e90\u6587\u4ef6\u5185\u6709\u6548\uff0c \u5728\u540c\u4e00\u6e90\u7a0b\u5e8f\u7684\u5176\u5b83\u6e90\u6587\u4ef6\u4e2d\u4e0d\u80fd\u4f7f\u7528\u5b83\u3002\u7531\u4e8e\u9759\u6001\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u5c40\u9650\u4e8e\u4e00\u4e2a\u6e90\u6587\u4ef6\u5185\uff0c\u53ea\u80fd\u4e3a\u8be5\u6e90\u6587\u4ef6\u5185\u7684\u51fd\u6570\u516c\u7528\uff0c \u56e0\u6b64\u53ef\u4ee5\u907f\u514d\u5728\u5176\u5b83\u6e90\u6587\u4ef6\u4e2d\u5f15\u8d77\u9519\u8bef\u3002", "\n\u4ece\u4ee5\u4e0a\u5206\u6790\u53ef\u4ee5\u770b\u51fa\uff0c \u628a\u5c40\u90e8\u53d8\u91cf\u6539\u53d8\u4e3a\u9759\u6001\u53d8\u91cf\u540e\u662f\u6539\u53d8\u4e86\u5b83\u7684\u5b58\u50a8\u65b9\u5f0f\u5373\u6539\u53d8\u4e86\u5b83\u7684\u751f\u5b58\u671f\u3002\u628a\u5168\u5c40\u53d8\u91cf\u6539\u53d8\u4e3a\u9759\u6001\u53d8\u91cf\u540e\u662f\u6539\u53d8\u4e86\u5b83\u7684\u4f5c\u7528\u57df\uff0c \u9650\u5236\u4e86\u5b83\u7684\u4f7f\u7528\u8303\u56f4\u3002", "\nstatic\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u4f5c\u7528\u57df\u4e0d\u540c\u3002\u4ec5\u5728\u672c\u6587\u4ef6\u3002\u53ea\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4e2d\u4f7f\u7528\u7684\u51fd\u6570\u5e94\u8be5\u8bf4\u660e\u4e3a\u5185\u90e8\u51fd\u6570(static)\uff0c\u5185\u90e8\u51fd\u6570\u5e94\u8be5\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4e2d\u8bf4\u660e\u548c\u5b9a\u4e49\u3002\u5bf9\u4e8e\u53ef\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4ee5\u5916\u4f7f\u7528\u7684\u51fd\u6570\uff0c\u5e94\u8be5\u5728\u4e00\u4e2a\u5934\u6587\u4ef6\u4e2d\u8bf4\u660e\uff0c\u8981\u4f7f\u7528\u8fd9\u4e9b\u51fd\u6570\u7684\u6e90\u6587\u4ef6\u8981\u5305\u542b\u8fd9\u4e2a\u5934\u6587\u4ef6", "\nstatic\u5168\u5c40\u53d8\u91cf\u4e0e\u666e\u901a\u7684\u5168\u5c40\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u5168\u5c40\u53d8\u91cf\u53ea\u521d\u4f7f\u5316\u4e00\u6b21\uff0c\u9632\u6b62\u5728\u5176\u4ed6\u6587\u4ef6\u5355\u5143\u4e2d\u88ab\u5f15\u7528;", "\nstatic\u5c40\u90e8\u53d8\u91cf\u548c\u666e\u901a\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u5c40\u90e8\u53d8\u91cf\u53ea\u88ab\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u4e0b\u4e00\u6b21\u4f9d\u636e\u4e0a\u4e00\u6b21\u7ed3\u679c\u503c\uff1b", "\nstatic\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u51fd\u6570\u5728\u5185\u5b58\u4e2d\u53ea\u6709\u4e00\u4efd\uff0c\u666e\u901a\u51fd\u6570\u5728\u6bcf\u4e2a\u88ab\u8c03\u7528\u4e2d\u7ef4\u6301\u4e00\u4efd\u62f7\u8d1d", "\n\u7a0b\u5e8f\u7684\u5c40\u90e8\u53d8\u91cf\u5b58\u5728\u4e8e\uff08\u5806\u6808\uff09\u4e2d\uff0c\u5168\u5c40\u53d8\u91cf\u5b58\u5728\u4e8e\uff08\u9759\u6001\u533a \uff09\u4e2d\uff0c\u52a8\u6001\u7533\u8bf7\u6570\u636e\u5b58\u5728\u4e8e\uff08 \u5806\uff09\u4e2d\u3002", "\n85.\u8bbe\u6709\u4ee5\u4e0b\u8bf4\u660e\u548c\u5b9a\u4e49\uff1a", "\ntypedef union {long i; int k[5]; char c;} DATE;", "\nstruct data { int cat; DATE cow; double dog;} too;", "\nDATE max;", "\n\u5219\u8bed\u53e5 printf(\u201c%d\u201d,sizeof(struct date)+sizeof(max));\u7684\u6267\u884c\u7ed3\u679c\u662f\uff1f", "\n\u7b54 \u3001\u7ed3\u679c\u662f\uff1a___52____\u3002DATE\u662f\u4e00\u4e2aunion, \u53d8\u91cf\u516c\u7528\u7a7a\u95f4. \u91cc\u9762\u6700\u5927\u7684\u53d8\u91cf\u7c7b\u578b\u662fint[5], \u5360\u752820\u4e2a\u5b57\u8282. \u6240\u4ee5\u5b83\u7684\u5927\u5c0f\u662f20", "\ndata\u662f\u4e00\u4e2astruct, \u6bcf\u4e2a\u53d8\u91cf\u5206\u5f00\u5360\u7528\u7a7a\u95f4. \u4f9d\u6b21\u4e3aint4 + DATE20 + double8 = 32.", "\n\u6240\u4ee5\u7ed3\u679c\u662f 20 + 32 = 52.", "\n\u5f53\u7136\u2026\u5728\u67d0\u4e9b16\u4f4d\u7f16\u8f91\u5668\u4e0b, int\u53ef\u80fd\u662f2\u5b57\u8282,\u90a3\u4e48\u7ed3\u679c\u662f int2 + DATE10 + double8 = 20", "\n86.-1,2,7,28,,126\u8bf7\u95ee28\u548c126\u4e2d\u95f4\u90a3\u4e2a\u6570\u662f\u4ec0\u4e48\uff1f\u4e3a\u4ec0\u4e48\uff1f", "\n\u7b54 \u3001\u5e94\u8be5\u662f4^3-1=63", "\n\u89c4\u5f8b\u662fn^3-1(\u5f53n\u4e3a\u5076\u65700\uff0c2\uff0c4)", "\nn^3+1(\u5f53n\u4e3a\u5947\u65701\uff0c3\uff0c5)", "87.\u7528\u4e24\u4e2a\u6808\u5b9e\u73b0\u4e00\u4e2a\u961f\u5217\u7684\u529f\u80fd\uff1f\u8981\u6c42\u7ed9\u51fa\u7b97\u6cd5\u548c\u601d\u8def\uff01", "\n\u7b54 \u3001\u8bbe2\u4e2a\u6808\u4e3aA,B, \u4e00\u5f00\u59cb\u5747\u4e3a\u7a7a.", "\n\u5165\u961f:", "\n\u5c06\u65b0\u5143\u7d20push\u5165\u6808A;", "\n\u51fa\u961f:", "\n(1)\u5224\u65ad\u6808B\u662f\u5426\u4e3a\u7a7a\uff1b", "\n(2)\u5982\u679c\u4e0d\u4e3a\u7a7a\uff0c\u5219\u5c06\u6808A\u4e2d\u6240\u6709\u5143\u7d20\u4f9d\u6b21pop\u51fa\u5e76push\u5230\u6808B\uff1b", "\n(3)\u5c06\u6808B\u7684\u6808\u9876\u5143\u7d20pop\u51fa\uff1b", "\n\u8fd9\u6837\u5b9e\u73b0\u7684\u961f\u5217\u5165\u961f\u548c\u51fa\u961f\u7684\u5e73\u644a\u590d\u6742\u5ea6\u90fd\u8fd8\u662fO(1), \u6bd4\u4e0a\u9762\u7684\u51e0\u79cd\u65b9\u6cd5\u8981\u597d\u3002", "88.\u5728c\u8bed\u8a00\u5e93\u51fd\u6570\u4e2d\u5c06\u4e00\u4e2a\u5b57\u7b26\u8f6c\u6362\u6210\u6574\u578b\u7684\u51fd\u6570\u662fatool()\u5417\uff0c\u8fd9\u4e2a\u51fd\u6570\u7684\u539f\u578b\u662f\u4ec0\u4e48\uff1f", "\n\u7b54 \u3001\u51fd\u6570\u540d: atol", "\n\u529f \u80fd: \u628a\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u957f\u6574\u578b\u6570", "\n\u7528 \u6cd5: long atol(const char *nptr);", "\n\u7a0b\u5e8f\u4f8b:", "\n\uff03include", "\n\uff03include", "\nint main(void)", "\n{", "\n    long l;", "\n    char *str = \u201c98765432\u2033;", "\n    l = atol(lstr);", "\n    printf(\u201cstring = %s integer = %ld\\n\u201d, str, l);", "\n    return(0);", "\n}", "89.\u5bf9\u4e8e\u4e00\u4e2a\u9891\u7e41\u4f7f\u7528\u7684\u77ed\u5c0f\u51fd\u6570,\u5728C\u8bed\u8a00\u4e2d\u5e94\u7528\u4ec0\u4e48\u5b9e\u73b0,\u5728C++\u4e2d\u5e94\u7528\u4ec0\u4e48\u5b9e\u73b0?", "\n\u7b54 \u3001c\u7528\u5b8f\u5b9a\u4e49\uff0cc++\u7528inline", "90.\u7528\u9884\u5904\u7406\u6307\u4ee4#define \u58f0\u660e\u4e00\u4e2a\u5e38\u6570\uff0c\u7528\u4ee5\u8868\u660e1\u5e74\u4e2d\u6709\u591a\u5c11\u79d2\uff08\u5ffd\u7565\u95f0\u5e74\u95ee\u9898\uff09", "#define SECONDS_PER_YEAR (60 * 60 * 24 * 365)UL", "\n\u6211\u5728\u8fd9\u60f3\u770b\u5230\u51e0\u4ef6\u4e8b\u60c5\uff1a", "\n1). #define \u8bed\u6cd5\u7684\u57fa\u672c\u77e5\u8bc6\uff08\u4f8b\u5982\uff1a\u4e0d\u80fd\u4ee5\u5206\u53f7\u7ed3\u675f\uff0c\u62ec\u53f7\u7684\u4f7f\u7528\uff0c\u7b49\u7b49\uff09", "\n2). \u61c2\u5f97\u9884\u5904\u7406\u5668\u5c06\u4e3a\u4f60\u8ba1\u7b97\u5e38\u6570\u8868\u8fbe\u5f0f\u7684\u503c\uff0c\u56e0\u6b64\uff0c\u76f4\u63a5\u5199\u51fa\u4f60\u662f\u5982\u4f55\u8ba1\u7b97\u4e00\u5e74\u4e2d\u6709\u591a\u5c11\u79d2\u800c\u4e0d\u662f\u8ba1\u7b97\u51fa\u5b9e\u9645\u7684\u503c\uff0c\u662f\u66f4\u6e05\u6670\u800c\u6ca1\u6709\u4ee3\u4ef7\u7684\u3002", "\n3). \u610f\u8bc6\u5230\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u5c06\u4f7f\u4e00\u4e2a16\u4f4d\u673a\u7684\u6574\u578b\u6570\u6ea2\u51fa-\u56e0\u6b64\u8981\u7528\u5230\u957f\u6574\u578b\u7b26\u53f7L,\u544a\u8bc9\u7f16\u8bd1\u5668\u8fd9\u4e2a\u5e38\u6570\u662f\u7684\u957f\u6574\u578b\u6570\u3002", "\n4). \u5982\u679c\u4f60\u5728\u4f60\u7684\u8868\u8fbe\u5f0f\u4e2d\u7528\u5230UL\uff08\u8868\u793a\u65e0\u7b26\u53f7\u957f\u6574\u578b\uff09\uff0c\u90a3\u4e48\u4f60\u6709\u4e86\u4e00\u4e2a\u597d\u7684\u8d77\u70b9\u3002\u8bb0\u4f4f\uff0c\u7b2c\u4e00\u5370\u8c61\u5f88\u91cd\u8981\u3002"], "title": "c++\u7b14\u8bd5\u9762\u8bd5\u5b9d\u51782011\u7248 60-90"},
{"contents": ["41.\u6587\u4ef6\u4e2d\u6709\u4e00\u7ec4\u6574\u6570\uff0c\u8981\u6c42\u6392\u5e8f\u540e\u8f93\u51fa\u5230\u53e6\u4e00\u4e2a\u6587\u4ef6\u4e2d", "\u7b54\u6848\uff1a", "\n\uff03i nclude", "void Order(vector", "void main( void )", "\n{", "\nvector", "42.\u94fe\u8868\u9898\uff1a\u4e00\u4e2a\u94fe\u8868\u7684\u7ed3\u70b9\u7ed3\u6784", "\nstruct Node", "\n{", "\nint data ;", "\nNode *next ;", "\n};", "\ntypedef struct Node Node ;", "(1)\u5df2\u77e5\u94fe\u8868\u7684\u5934\u7ed3\u70b9head,\u5199\u4e00\u4e2a\u51fd\u6570\u628a\u8fd9\u4e2a\u94fe\u8868\u9006\u5e8f ( Intel)", "\nNode * ReverseList(Node *head) //\u94fe\u8868\u9006\u5e8f", "\n{", "\nif ( head == NULL || head->next == NULL )", "\nreturn head;", "\nNode *p1 = head ;", "\nNode *p2 = p1->next ;", "\nNode *p3 = p2->next ;", "\np1->next = NULL ;", "\nwhile ( p3 != NULL )", "\n{", "\np2->next = p1 ;", "\np1 = p2 ;", "\np2 = p3 ;", "\np3 = p3->next ;", "\n}", "\np2->next = p1 ;", "\nhead = p2 ;", "\nreturn head ;", "\n}", "\n(2)\u5df2\u77e5\u4e24\u4e2a\u94fe\u8868head1 \u548chead2 \u5404\u81ea\u6709\u5e8f\uff0c\u8bf7\u628a\u5b83\u4eec\u5408\u5e76\u6210\u4e00\u4e2a\u94fe\u8868\u4f9d\u7136\u6709\u5e8f\u3002(\u4fdd\u7559\u6240\u6709\u7ed3\u70b9\uff0c\u5373\u4fbf\u5927\u5c0f\u76f8\u540c\uff09", "\nNode * Merge(Node *head1 , Node *head2)", "\n{", "\nif ( head1 == NULL)", "\nreturn head2 ;", "\nif ( head2 == NULL)", "\nreturn head1 ;", "\nNode *head = NULL ;", "\nNode *p1 = NULL;", "\nNode *p2 = NULL;", "\nif ( head1->data data )", "\n{", "\nhead = head1 ;", "\np1 = head1->next;", "\np2 = head2 ;", "\n}", "\nelse", "\n{", "\nhead = head2 ;", "\np2 = head2->next ;", "\np1 = head1 ;", "\n}", "\nNode *pcurrent = head ;", "\nwhile ( p1 != NULL && p2 != NULL)", "\n{", "\nif ( p1->data data )", "\n{", "\npcurrent->next = p1 ;", "\npcurrent = p1 ;", "\np1 = p1->next ;", "\n}", "\nelse", "\n{", "\npcurrent->next = p2 ;", "\npcurrent = p2 ;", "\np2 = p2->next ;", "\n}", "\n}", "\nif ( p1 != NULL )", "\npcurrent->next = p1 ;", "\nif ( p2 != NULL )", "\npcurrent->next = p2 ;", "\nreturn head ;", "\n}", "\n(3)\u5df2\u77e5\u4e24\u4e2a\u94fe\u8868head1 \u548chead2 \u5404\u81ea\u6709\u5e8f\uff0c\u8bf7\u628a\u5b83\u4eec\u5408\u5e76\u6210\u4e00\u4e2a\u94fe\u8868\u4f9d\u7136\u6709\u5e8f\uff0c\u8fd9\u6b21\u8981\u6c42\u7528\u9012\u5f52\u65b9\u6cd5\u8fdb\u884c\u3002 (Autodesk)", "\n\u7b54\u6848\uff1a", "\nNode * MergeRecursive(Node *head1 , Node *head2)", "\n{", "\nif ( head1 == NULL )", "\nreturn head2 ;", "\nif ( head2 == NULL)", "\nreturn head1 ;", "\nNode *head = NULL ;", "\nif ( head1->data data )", "\n{", "\nhead = head1 ;", "\nhead->next = MergeRecursive(head1->next,head2);", "\n}", "\nelse", "\n{", "\nhead = head2 ;", "\nhead->next = MergeRecursive(head1,head2->next);", "\n}", "\nreturn head ;", "\u2014\u2014\u2014-", "\n41. \u5206\u6790\u4e00\u4e0b\u8fd9\u6bb5\u7a0b\u5e8f\u7684\u8f93\u51fa (Autodesk)", "\nclass B", "\n{", "\npublic:", "\nB()", "\n{", "\ncout\n}", "\n~B()", "\n{", "\ncout\n}", "\nB(int i):data(i)    //B(int) works as a converter ( int -> instance of  B)", "\n{", "\ncout\n}", "\nprivate:", "\nint data;", "\n};", "B Play( B b)", "\n{", "\nreturn b ;", "\n}", "\n(1)                                            results:", "\nint main(int argc, char* argv[])      constructed by parameter 5", "\n{                                     destructed  B(5)\u5f62\u53c2\u6790\u6784", "\nB t1 = Play(5); B t2 = Play(t1);   \u3000 destructed  t1\u5f62\u53c2\u6790\u6784", "\nreturn 0;\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 destructed  t2\u3000\u6ce8\u610f\u987a\u5e8f\uff01", "\n}                                     destructed  t1", "\n(2)                                   results:", "\nint main(int argc, char* argv[])      constructed by parameter 5", "\n{                                     destructed  B(5)\u5f62\u53c2\u6790\u6784", "\nB t1 = Play(5); B t2 = Play(10);   \u3000 constructed by parameter 10", "\nreturn 0;\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 destructed  B(10)\u5f62\u53c2\u6790\u6784", "\n}                                     destructed  t2\u3000\u6ce8\u610f\u987a\u5e8f\uff01", "\n                                      destructed  t1", "\n43.\u5199\u4e00\u4e2a\u51fd\u6570\u627e\u51fa\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\u4e2d\uff0c\u7b2c\u4e8c\u5927\u7684\u6570 \uff08microsoft\uff09", "\n\u7b54\u6848\uff1a", "\nconst int MINNUMBER = -32767 ;", "\nint find_sec_max( int data[] , int count)", "\n{", "\nint maxnumber = data[0] ;", "\nint sec_max = MINNUMBER ;", "\nfor ( int i = 1 ; i \n{", "\nif ( data[i] > maxnumber )", "\n{", "\nsec_max = maxnumber ;", "\nmaxnumber = data[i] ;", "\n}", "\nelse", "\n{", "\nif ( data[i] > sec_max )", "\nsec_max = data[i] ;", "\n}", "\n}", "\nreturn sec_max ;", "\n}", "\n44.\u5199\u4e00\u4e2a\u5728\u4e00\u4e2a\u5b57\u7b26\u4e32(n)\u4e2d\u5bfb\u627e\u4e00\u4e2a\u5b50\u4e32(m)\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u7684\u51fd\u6570\u3002", "\nKMP\u7b97\u6cd5\u6548\u7387\u6700\u597d\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f\uff2f(n+m),\u8be6\u89c1\uff1ahttp://www.zhanglihai.com/blog/c_335_kmp.html", "\n46.\u591a\u91cd\u7ee7\u627f\u7684\u5185\u5b58\u5206\u914d\u95ee\u9898\uff1a", "\n\u6bd4\u5982\u6709class A : public class B, public class C {} \u90a3\u4e48A\u7684\u5185\u5b58\u7ed3\u6784\u5927\u81f4\u662f\u600e\u4e48\u6837\u7684\uff1f", "\n\u8fd9\u4e2a\u662fcompiler-dependent\u7684, \u4e0d\u540c\u7684\u5b9e\u73b0\u5176\u7ec6\u8282\u53ef\u80fd\u4e0d\u540c\u3002\u5982\u679c\u4e0d\u8003\u8651\u6709\u865a\u51fd\u6570\u3001\u865a\u7ee7\u627f\u7684\u8bdd\u5c31\u76f8\u5f53\u7b80\u5355\uff1b\u5426\u5219\u7684\u8bdd\uff0c\u76f8\u5f53\u590d\u6742\u3002\u53ef\u4ee5\u53c2\u8003\u300a\u6df1\u5165\u63a2\u7d22C++\u5bf9\u8c61\u6a21\u578b\u300b\uff0c\u6216\u8005\uff1a", "http://blog.csdn.net/rainlight/archive/2006/03/03/614792.aspx", "http://msdn.microsoft.com/archive/default.asp?url=/archive/en-us/dnarvc/html/jangrayhood.asp", "47.\u5982\u4f55\u5224\u65ad\u4e00\u4e2a\u5355\u94fe\u8868\u662f\u6709\u73af\u7684\uff1f\uff08\u6ce8\u610f\u4e0d\u80fd\u7528\u6807\u5fd7\u4f4d\uff0c\u6700\u591a\u53ea\u80fd\u7528\u4e24\u4e2a\u989d\u5916\u6307\u9488\uff09", "\nstruct node { char val; node* next;}", "\nbool check(const node* head) {} //return false : \u65e0\u73af\uff1btrue: \u6709\u73af\u4e00\u79cdO\uff08n\uff09\u7684\u529e\u6cd5\u5c31\u662f\uff08\u641e\u4e24\u4e2a\u6307\u9488\uff0c\u4e00\u4e2a\u6bcf\u6b21\u9012\u589e\u4e00\u6b65\uff0c\u4e00\u4e2a\u6bcf\u6b21\u9012\u589e\u4e24\u6b65\uff0c\u5982\u679c\u6709\u73af\u7684\u8bdd\u4e24\u8005\u5fc5\u7136\u91cd\u5408\uff0c\u53cd\u4e4b\u4ea6\u7136\uff09\uff1a", "\nbool check(const node* head)", "\n{", "\n    if(head==NULL)  return false;", "\n    node *low=head, *fast=head->next;", "\n    while(fast!=NULL && fast->next!=NULL)", "\n    {", "\n        low=low->next;", "\n        fast=fast->next->next;", "\n        if(low==fast) return true;", "\n    }", "\n    return false;", "\n}", "48.\u6307\u9488\u627e\u9519\u9898", "\n\u5206\u6790\u8fd9\u4e9b\u9762\u8bd5\u9898\uff0c\u672c\u8eab\u5305\u542b\u5f88\u5f3a\u7684\u8da3\u5473\u6027;\u800c\u4f5c\u4e3a\u4e00\u540d\u7814\u53d1\u4eba\u5458\uff0c\u901a\u8fc7\u5bf9\u8fd9\u4e9b\u9762\u8bd5\u9898\u7684\u6df1\u5165\u5256\u6790\u5219\u53ef\u8fdb\u4e00\u6b65\u589e\u5f3a\u81ea\u8eab\u7684\u5185\u529f\u3002", "\n\u3000\u30002.\u627e\u9519\u9898 \u8bd5\u98981\uff1a", "\n\u4ee5\u4e0b\u662f\u5f15\u7528\u7247\u6bb5\uff1a", "\nvoid test1()  //\u6570\u7ec4\u8d8a\u754c", "\n\u3000\u3000{", "\n\u3000\u3000char string[10];", "\n\u3000\u3000char* str1 = \u201c0123456789\u2033;", "\n\u3000\u3000strcpy( string, str1 );", "\n\u3000\u3000}", "\n\u3000\u3000\u8bd5\u98982\uff1a\u3000", "\n\u4ee5\u4e0b\u662f\u5f15\u7528\u7247\u6bb5\uff1a", "\n\u3000void test2()", "\n\u3000\u3000{", "\n\u3000\u3000char string[10], str1[10];", "\n\u3000\u3000int i;", "\n\u3000\u3000for(i=0; i\n\u3000\u3000{", "\n\u3000\u3000str1= 'a';", "\n\u3000\u3000}", "\n\u3000\u3000strcpy( string, str1 );", "\n\u3000\u3000}", "\n\u3000\u3000\u8bd5\u98983\uff1a\u3000\u3000", "\n\u4ee5\u4e0b\u662f\u5f15\u7528\u7247\u6bb5\uff1a", "\nvoid test3(char* str1)", "\n\u3000\u3000{", "\n\u3000\u3000char string[10];", "\n\u3000\u3000if( strlen( str1 ) \n\u3000\u3000{", "\n\u3000\u3000strcpy( string, str1 );", "\n\u3000\u3000}", "\n\u3000\u3000}", "\n\u3000\u3000\u89e3\u7b54\uff1a", "\n\u3000\u3000\u8bd5\u98981\u5b57\u7b26\u4e32str1\u9700\u898111\u4e2a\u5b57\u8282\u624d\u80fd\u5b58\u653e\u4e0b(\u5305\u62ec\u672b\u5c3e\u7684\u2019\\0\u2019)\uff0c\u800cstring\u53ea\u670910\u4e2a\u5b57\u8282\u7684\u7a7a\u95f4\uff0cstrcpy\u4f1a\u5bfc\u81f4\u6570\u7ec4\u8d8a\u754c;\u5bf9\u8bd5\u98982\uff0c\u5982\u679c\u9762\u8bd5\u8005\u6307\u51fa\u5b57\u7b26\u6570\u7ec4str1\u4e0d\u80fd\u5728\u6570\u7ec4\u5185\u7ed3\u675f\u53ef\u4ee5\u7ed93\u5206;\u5982\u679c\u9762\u8bd5\u8005\u6307\u51fastrcpy(string,str1)\u8c03\u7528\u4f7f\u5f97\u4ece str1\u5185\u5b58\u8d77\u590d\u5236\u5230string\u5185\u5b58\u8d77\u6240\u590d\u5236\u7684\u5b57\u8282\u6570\u5177\u6709\u4e0d\u786e\u5b9a\u6027\u53ef\u4ee5\u7ed97\u5206\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u6307\u51fa\u5e93\u51fd\u6570strcpy\u5de5\u4f5c\u65b9\u5f0f\u7684\u7ed910\u5206;", "\n\u5bf9\u8bd5\u98983\uff0cif(strlen(str1) \n\u3000\u3000(1)\u5b57\u7b26\u4e32\u4ee5\u2019\\0\u2019\u7ed3\u5c3e;", "\n\u3000\u3000(2)\u5bf9\u6570\u7ec4\u8d8a\u754c\u628a\u63e1\u7684\u654f\u611f\u5ea6;", "\n\u3000\u3000(3)\u5e93\u51fd\u6570strcpy\u7684\u5de5\u4f5c\u65b9\u5f0f\uff0c", "\n49.\u5982\u679c\u7f16\u5199\u4e00\u4e2a\u6807\u51c6strcpy\u51fd\u6570", "\n\u603b\u5206\u503c\u4e3a10\uff0c\u4e0b\u9762\u7ed9\u51fa\u51e0\u4e2a\u4e0d\u540c\u5f97\u5206\u7684\u7b54\u6848\uff1a2\u5206 \u4ee5\u4e0b\u662f\u5f15\u7528\u7247\u6bb5\uff1a", "\nvoid strcpy( char *strDest, char *strSrc )", "\n\u3000\u3000{", "\n\u3000\u3000while( (*strDest++ = * strSrc++) != \u2018\\0\u2019 );", "\n\u3000\u3000}", "\n\u3000\u30004\u5206\u3000\u4ee5\u4e0b\u662f\u5f15\u7528\u7247\u6bb5\uff1a", "\n\u3000void strcpy( char *strDest, const char *strSrc )", "\n\u3000\u3000//\u5c06\u6e90\u5b57\u7b26\u4e32\u52a0const\uff0c\u8868\u660e\u5176\u4e3a\u8f93\u5165\u53c2\u6570\uff0c\u52a02\u5206", "\n\u3000\u3000{", "\n\u3000\u3000while( (*strDest++ = * strSrc++) != \u2018\\0\u2019 );", "\n\u3000\u3000}", "\n\u3000\u30007\u5206 \u4ee5\u4e0b\u662f\u5f15\u7528\u7247\u6bb5\uff1a", "\nvoid strcpy(char *strDest, const char *strSrc)", "\n\u3000\u3000{", "\n\u3000\u3000//\u5bf9\u6e90\u5730\u5740\u548c\u76ee\u7684\u5730\u5740\u52a0\u975e0\u65ad\u8a00\uff0c\u52a03\u5206", "\n\u3000\u3000assert( (strDest != NULL) &&(strSrc != NULL) );", "\n\u3000\u3000while( (*strDest++ = * strSrc++) != \u2018\\0\u2019 );", "\n\u3000\u3000}", "\n\u3000\u300010\u5206 \u4ee5\u4e0b\u662f\u5f15\u7528\u7247\u6bb5\uff1a", "\n//\u4e3a\u4e86\u5b9e\u73b0\u94fe\u5f0f\u64cd\u4f5c\uff0c\u5c06\u76ee\u7684\u5730\u5740\u8fd4\u56de\uff0c\u52a03\u5206!", "\n\u3000\u3000char * strcpy( char *strDest, const char *strSrc )", "\n\u3000\u3000{", "\n\u3000\u3000assert( (strDest != NULL) &&(strSrc != NULL) );", "\n\u3000\u3000char *address = strDest;", "\n\u3000\u3000while( (*strDest++ = * strSrc++) != \u2018\\0\u2019 );", "\n\u3000\u3000return address;", "\n\u3000\u3000}", "\n\u3000\u3000\u4ece2\u5206\u523010\u5206\u7684\u51e0\u4e2a\u7b54\u6848\u6211\u4eec\u53ef\u4ee5\u6e05\u695a\u7684\u770b\u5230\uff0c\u5c0f\u5c0f\u7684strcpy\u7adf\u7136\u6697\u85cf\u7740\u8fd9\u4e48\u591a\u7384\u673a\uff0c\u771f\u4e0d\u662f\u76d6\u7684!\u9700\u8981\u591a\u4e48\u624e\u5b9e\u7684\u57fa\u672c\u529f\u624d\u80fd\u5199\u4e00\u4e2a\u5b8c\u7f8e\u7684strcpy\u554a!", "\n\u3000\u3000(4)\u5bf9strlen\u7684\u638c\u63e1\uff0c\u5b83\u6ca1\u6709\u5305\u62ec\u5b57\u7b26\u4e32\u672b\u5c3e\u7684'\\0'\u3002", "\n\u3000\u3000\u8bfb\u8005\u770b\u4e86\u4e0d\u540c\u5206\u503c\u7684strcpy\u7248\u672c\uff0c\u5e94\u8be5\u4e5f\u53ef\u4ee5\u5199\u51fa\u4e00\u4e2a10\u5206\u7684strlen\u51fd\u6570\u4e86\uff0c\u5b8c\u7f8e\u7684\u7248\u672c\u4e3a\uff1a int strlen( const char *str ) //\u8f93\u5165\u53c2\u6570const\u3000\u4ee5\u4e0b\u662f\u5f15\u7528\u7247\u6bb5\uff1a", "\n\u3000{", "\n\u3000\u3000assert( strt != NULL ); //\u65ad\u8a00\u5b57\u7b26\u4e32\u5730\u5740\u975e0", "\n\u3000\u3000int len=0; //\u6ce8\uff0c\u4e00\u5b9a\u8981\u521d\u59cb\u5316\u3002", "\n\u3000\u3000while( (*str++) != '\\0' )", "\n\u3000\u3000{", "\n\u3000\u3000len++;", "\n\u3000\u3000}", "\n\u3000\u3000return len;", "\n\u3000\u3000}", "\n\u3000\u3000\u8bd5\u98984\uff1a\u4ee5\u4e0b\u662f\u5f15\u7528\u7247\u6bb5\uff1a", "\nvoid GetMemory( char *p )", "\n\u3000\u3000{", "\n\u3000\u3000p = (char *) malloc( 100 );", "\n\u3000\u3000}", "\n\u3000\u3000void Test( void )", "\n\u3000\u3000{", "\n\u3000\u3000char *str = NULL;", "\n\u3000\u3000GetMemory( str );", "\n\u3000\u3000strcpy( str, \"hello world\" );", "\n\u3000\u3000printf( str );", "\n\u3000\u3000}", "\n\u3000\u3000\u8bd5\u98985\uff1a\u3000", "\n\u4ee5\u4e0b\u662f\u5f15\u7528\u7247\u6bb5\uff1a", "\nchar *GetMemory( void )", "\n\u3000\u3000{", "\n\u3000\u3000char p[] = \"hello world\";", "\n\u3000\u3000return p;", "\n\u3000\u3000}", "\n\u3000\u3000void Test( void )", "\n\u3000\u3000{", "\n\u3000\u3000char *str = NULL;", "\n\u3000\u3000str = GetMemory();", "\n\u3000\u3000printf( str );", "\n\u3000\u3000}", "\n\u3000\u3000\u8bd5\u98986\uff1a\u4ee5\u4e0b\u662f\u5f15\u7528\u7247\u6bb5\uff1a", "\nvoid GetMemory( char **p, int num )", "\n\u3000\u3000{", "\n\u3000\u3000*p = (char *) malloc( num );", "\n\u3000\u3000}", "\n\u3000\u3000void Test( void )", "\n\u3000\u3000{", "\n\u3000\u3000char *str = NULL;", "\n\u3000\u3000GetMemory( &str, 100 );", "\n\u3000\u3000strcpy( str, \"hello\" );", "\n\u3000\u3000printf( str );", "\n\u3000\u3000}", "\n\u3000\u3000\u8bd5\u98987\uff1a\u4ee5\u4e0b\u662f\u5f15\u7528\u7247\u6bb5\uff1a", "\n\u3000void Test( void )", "\n\u3000\u3000{", "\n\u3000\u3000char *str = (char *) malloc( 100 );", "\n\u3000\u3000strcpy( str, \"hello\" );", "\n\u3000\u3000free( str );", "\n\u3000\u3000... //\u7701\u7565\u7684\u5176\u5b83\u8bed\u53e5", "\n\u3000\u3000}", "\n\u3000\u3000\u89e3\u7b54\uff1a\u8bd5\u98984\u4f20\u5165\u4e2dGetMemory( char *p )\u51fd\u6570\u7684\u5f62\u53c2\u4e3a\u5b57\u7b26\u4e32\u6307\u9488\uff0c\u5728\u51fd\u6570\u5185\u90e8\u4fee\u6539\u5f62\u53c2\u5e76\u4e0d\u80fd\u771f\u6b63\u7684\u6539\u53d8\u4f20\u5165\u5f62\u53c2\u7684\u503c\uff0c\u6267\u884c\u5b8c", "\n\u3000\u3000char *str = NULL;", "\n\u3000\u3000GetMemory( str );", "\n\u3000\u3000\u540e\u7684str\u4ecd\u7136\u4e3aNULL;\u8bd5\u98985\u4e2d", "\n\u3000\u3000char p[] = \"hello world\";", "\n\u3000\u3000return p;", "\n\u3000\u3000\u7684p[]\u6570\u7ec4\u4e3a\u51fd\u6570\u5185\u7684\u5c40\u90e8\u81ea\u52a8\u53d8\u91cf\uff0c\u5728\u51fd\u6570\u8fd4\u56de\u540e\uff0c\u5185\u5b58\u5df2\u7ecf\u88ab\u91ca\u653e\u3002\u8fd9\u662f\u8bb8\u591a\u7a0b\u5e8f\u5458\u5e38\u72af\u7684\u9519\u8bef\uff0c\u5176\u6839\u6e90\u5728\u4e8e\u4e0d\u7406\u89e3\u53d8\u91cf\u7684\u751f\u5b58\u671f\u3002", "\n\u3000\u3000\u8bd5\u98986\u7684GetMemory\u907f\u514d\u4e86\u8bd5\u98984\u7684\u95ee\u9898\uff0c\u4f20\u5165GetMemory\u7684\u53c2\u6570\u4e3a\u5b57\u7b26\u4e32\u6307\u9488\u7684\u6307\u9488\uff0c\u4f46\u662f\u5728GetMemory\u4e2d\u6267\u884c\u7533\u8bf7\u5185\u5b58\u53ca\u8d4b\u503c\u8bed\u53e5 tiffanybracelets", "\n\u3000\u3000*p = (char *) malloc( num );", "\n\u3000\u3000\u540e\u672a\u5224\u65ad\u5185\u5b58\u662f\u5426\u7533\u8bf7\u6210\u529f\uff0c\u5e94\u52a0\u4e0a\uff1a", "\n\u3000\u3000if ( *p == NULL )", "\n\u3000\u3000{", "\n\u3000\u3000...//\u8fdb\u884c\u7533\u8bf7\u5185\u5b58\u5931\u8d25\u5904\u7406", "\u3000\u3000}", "\n\u3000\u3000\u8bd5\u98987\u5b58\u5728\u4e0e\u8bd5\u98986\u540c\u6837\u7684\u95ee\u9898\uff0c\u5728\u6267\u884c", "\n\u3000\u3000char *str = (char *) malloc(100);", "\n\u3000\u3000\u540e\u672a\u8fdb\u884c\u5185\u5b58\u662f\u5426\u7533\u8bf7\u6210\u529f\u7684\u5224\u65ad;\u53e6\u5916\uff0c\u5728free(str)\u540e\u672a\u7f6estr\u4e3a\u7a7a\uff0c\u5bfc\u81f4\u53ef\u80fd\u53d8\u6210\u4e00\u4e2a\u201c\u91ce\u201d\u6307\u9488\uff0c\u5e94\u52a0\u4e0a\uff1a", "\n\u3000\u3000str = NULL;", "\n\u3000\u3000\u8bd5\u98986\u7684Test\u51fd\u6570\u4e2d\u4e5f\u672a\u5bf9malloc\u7684\u5185\u5b58\u8fdb\u884c\u91ca\u653e\u3002", "\n\u3000\u3000\u5256\u6790\uff1a", "\n\u3000\u3000\u8bd5\u98984\uff5e7\u8003\u67e5\u9762\u8bd5\u8005\u5bf9\u5185\u5b58\u64cd\u4f5c\u7684\u7406\u89e3\u7a0b\u5ea6\uff0c\u57fa\u672c\u529f\u624e\u5b9e\u7684\u9762\u8bd5\u8005\u4e00\u822c\u90fd\u80fd\u6b63\u786e\u7684\u56de\u7b54\u5176\u4e2d50~60\u7684\u9519\u8bef\u3002\u4f46\u662f\u8981\u5b8c\u5168\u89e3\u7b54\u6b63\u786e\uff0c\u5374\u4e5f\u7edd\u975e\u6613\u4e8b\u3002", "\n\u8f6f\u4ef6\u5f00\u53d1\u7f51 www.mscto.com", "\n\u3000\u3000\u5bf9\u5185\u5b58\u64cd\u4f5c\u7684\u8003\u67e5\u4e3b\u8981\u96c6\u4e2d\u5728\uff1a", "\n\u3000\u3000(1)\u6307\u9488\u7684\u7406\u89e3;", "\n\u3000\u3000(2)\u53d8\u91cf\u7684\u751f\u5b58\u671f\u53ca\u4f5c\u7528\u8303\u56f4;", "\n\u3000\u3000(3)\u826f\u597d\u7684\u52a8\u6001\u5185\u5b58\u7533\u8bf7\u548c\u91ca\u653e\u4e60\u60ef\u3002", "\n\u3000\u3000\u518d\u770b\u770b\u4e0b\u9762\u7684\u4e00\u6bb5\u7a0b\u5e8f\u6709\u4ec0\u4e48\u9519\u8bef\uff1a\u3000\u3000", "\n\u4ee5\u4e0b\u662f\u5f15\u7528\u7247\u6bb5\uff1a", "\nswap( int* p1,int* p2 )", "\n\u3000\u3000{", "\n\u3000\u3000int *p;", "\n\u3000\u3000*p = *p1;", "\n\u3000\u3000*p1 = *p2;", "\n\u3000\u3000*p2 = *p;", "\n\u3000\u3000}", "\n\u3000\u3000\u5728swap\u51fd\u6570\u4e2d\uff0cp\u662f\u4e00\u4e2a\u201c\u91ce\u201d\u6307\u9488\uff0c\u6709\u53ef\u80fd\u6307\u5411\u7cfb\u7edf\u533a\uff0c\u5bfc\u81f4\u7a0b\u5e8f\u8fd0\u884c\u7684\u5d29\u6e83\u3002\u5728VC++\u4e2dDEBUG\u8fd0\u884c\u65f6\u63d0\u793a\u9519\u8bef\u201cAccess Violation\u201d\u3002\u8be5\u7a0b\u5e8f\u5e94\u8be5\u6539\u4e3a", "\n\u4ee5\u4e0b\u662f\u5f15\u7528\u7247\u6bb5\uff1a", "\nswap( int* p1,int* p2 )", "\n\u3000\u3000{", "\n\u3000\u3000int p;", "\n\u3000\u3000p = *p1;", "\n\u3000\u3000*p1 = *p2;", "\n\u3000\u3000*p2 = p;", "\n\u3000\u3000}", "\n50.String \u7684\u5177\u4f53\u5b9e\u73b0 ", "\u5df2\u77e5String\u7c7b\u5b9a\u4e49\u5982\u4e0b\uff1a", "class String", "\n{", "\npublic:", "\nString(const char *str = NULL); // \u901a\u7528\u6784\u9020\u51fd\u6570", "\nString(const String &another); // \u62f7\u8d1d\u6784\u9020\u51fd\u6570", "\n~ String(); // \u6790\u6784\u51fd\u6570", "\nString & operater =(const String &rhs); // \u8d4b\u503c\u51fd\u6570", "\nprivate:", "\nchar *m_data; // \u7528\u4e8e\u4fdd\u5b58\u5b57\u7b26\u4e32", "\n};", "\u5c1d\u8bd5\u5199\u51fa\u7c7b\u7684\u6210\u5458\u51fd\u6570\u5b9e\u73b0\u3002", "\u7b54\u6848\uff1a", "\nString::String(const char *str)", "\n{", "\nif ( str == NULL ) //strlen\u5728\u53c2\u6570\u4e3aNULL\u65f6\u4f1a\u629b\u5f02\u5e38\u624d\u4f1a\u6709\u8fd9\u6b65\u5224\u65ad", "\n{", "\nm_data = new char[1] ;", "\nm_data[0] = '\\0' ;", "\n}", "\nelse", "\n{", "\nm_data = new char[strlen(str) + 1];", "\nstrcpy(m_data,str);", "\n}", "} ", "String::String(const String &another)", "\n    {", "\nm_data = new char[strlen(another.m_data) + 1];", "\nstrcpy(m_data,other.m_data);", "\n}", "String& String::operator =(const String &rhs)", "\n{", "\nif ( this == &rhs)", "\nreturn *this ;", "\ndelete []m_data; //\u5220\u9664\u539f\u6765\u7684\u6570\u636e\uff0c\u65b0\u5f00\u4e00\u5757\u5185\u5b58", "\nm_data = new char[strlen(rhs.m_data) + 1];", "\nstrcpy(m_data,rhs.m_data);", "\nreturn *this ;", "\n}", "String::~String()", "\n{", "\ndelete []m_data ;", "\n}", "\n51.h\u5934\u6587\u4ef6\u4e2d\u7684ifndef/define/endif \u7684\u4f5c\u7528\uff1f", "\n\u7b54\uff1a\u9632\u6b62\u8be5\u5934\u6587\u4ef6\u88ab\u91cd\u590d\u5f15\u7528\u3002", "\n52.\uff03i nclude", "53.\u5728C++ \u7a0b\u5e8f\u4e2d\u8c03\u7528\u88abC \u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u7684\u51fd\u6570\uff0c\u4e3a\u4ec0\u4e48\u8981\u52a0extern \u201cC\u201d\uff1f", "\nC++\u8bed\u8a00\u652f\u6301\u51fd\u6570\u91cd\u8f7d\uff0cC\u8bed\u8a00\u4e0d\u652f\u6301\u51fd\u6570\u91cd\u8f7d\u3002C++\u63d0\u4f9b\u4e86C\u8fde\u63a5\u4ea4\u6362\u6307\u5b9a\u7b26\u53f7extern \u201cC\u201d", "\n\u89e3\u51b3\u540d\u5b57\u5339\u914d\u95ee\u9898\u3002", "\u9996\u5148\uff0c\u4f5c\u4e3aextern\u662fC/C++\u8bed\u8a00\u4e2d\u8868\u660e\u51fd\u6570\u548c\u5168\u5c40\u53d8\u91cf\u4f5c\u7528\u8303\u56f4\uff08\u53ef\u89c1\u6027\uff09\u7684\u5173\u952e\u5b57\uff0c\u8be5\u5173\u952e\u5b57\u544a\u8bc9\u7f16\u8bd1\u5668\uff0c\u5176\u58f0\u660e\u7684\u51fd\u6570\u548c\u53d8\u91cf\u53ef\u4ee5\u5728\u672c\u6a21\u5757\u6216\u5176\u5b83\u6a21\u5757\u4e2d\u4f7f\u7528\u3002", "\u901a\u5e38\uff0c\u5728\u6a21\u5757\u7684\u5934\u6587\u4ef6\u4e2d\u5bf9\u672c\u6a21\u5757\u63d0\u4f9b\u7ed9\u5176\u5b83\u6a21\u5757\u5f15\u7528\u7684\u51fd\u6570\u548c\u5168\u5c40\u53d8\u91cf\u4ee5\u5173\u952e\u5b57extern\u58f0\u660e\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6a21\u5757B\u6b32\u5f15\u7528\u8be5\u6a21\u5757A\u4e2d\u5b9a\u4e49\u7684\u5168\u5c40\u53d8\u91cf\u548c\u51fd\u6570\u65f6\u53ea\u9700\u5305\u542b\u6a21\u5757A\u7684\u5934\u6587\u4ef6\u5373\u53ef\u3002\u8fd9\u6837\uff0c\u6a21\u5757B\u4e2d\u8c03\u7528\u6a21\u5757A\u4e2d\u7684\u51fd\u6570\u65f6\uff0c\u5728\u7f16\u8bd1\u9636\u6bb5\uff0c\u6a21\u5757B\u867d\u7136\u627e\u4e0d\u5230\u8be5\u51fd\u6570\uff0c\u4f46\u662f\u5e76\u4e0d\u4f1a\u62a5\u9519\uff1b\u5b83\u4f1a\u5728\u8fde\u63a5\u9636\u6bb5\u4e2d\u4ece\u6a21\u5757A\u7f16\u8bd1\u751f\u6210\u7684\u76ee\u6807\u4ee3\u7801\u4e2d\u627e\u5230\u6b64\u51fd\u6570", "extern \u201cC\u201d\u662f\u8fde\u63a5\u7533\u660e(linkage declaration),\u88abextern \u201cC\u201d\u4fee\u9970\u7684\u53d8\u91cf\u548c\u51fd\u6570\u662f\u6309\u7167C\u8bed\u8a00\u65b9\u5f0f\u7f16\u8bd1\u548c\u8fde\u63a5\u7684,\u6765\u770b\u770bC++\u4e2d\u5bf9\u7c7b\u4f3cC\u7684\u51fd\u6570\u662f\u600e\u6837\u7f16\u8bd1\u7684\uff1a", "\u4f5c\u4e3a\u4e00\u79cd\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\uff0cC++\u652f\u6301\u51fd\u6570\u91cd\u8f7d\uff0c\u800c\u8fc7\u7a0b\u5f0f\u8bed\u8a00C\u5219\u4e0d\u652f\u6301\u3002\u51fd\u6570\u88abC++\u7f16\u8bd1\u540e\u5728\u7b26\u53f7\u5e93\u4e2d\u7684\u540d\u5b57\u4e0eC\u8bed\u8a00\u7684\u4e0d\u540c\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u67d0\u4e2a\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a", "void foo( int x, int y );", "\n\u3000\u3000", "\u8be5\u51fd\u6570\u88abC\u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u5728\u7b26\u53f7\u5e93\u4e2d\u7684\u540d\u5b57\u4e3a_foo\uff0c\u800cC++\u7f16\u8bd1\u5668\u5219\u4f1a\u4ea7\u751f\u50cf_foo_int_int\u4e4b\u7c7b\u7684\u540d\u5b57\uff08\u4e0d\u540c\u7684\u7f16\u8bd1\u5668\u53ef\u80fd\u751f\u6210\u7684\u540d\u5b57\u4e0d\u540c\uff0c\u4f46\u662f\u90fd\u91c7\u7528\u4e86\u76f8\u540c\u7684\u673a\u5236\uff0c\u751f\u6210\u7684\u65b0\u540d\u5b57\u79f0\u4e3a\u201cmangled name\u201d\uff09\u3002", "_foo_int_int \u8fd9\u6837\u7684\u540d\u5b57\u5305\u542b\u4e86\u51fd\u6570\u540d\u3001\u51fd\u6570\u53c2\u6570\u6570\u91cf\u53ca\u7c7b\u578b\u4fe1\u606f\uff0cC++\u5c31\u662f\u9760\u8fd9\u79cd\u673a\u5236\u6765\u5b9e\u73b0\u51fd\u6570\u91cd\u8f7d\u7684\u3002\u4f8b\u5982\uff0c\u5728C++\u4e2d\uff0c\u51fd\u6570void foo( int x, int y )\u4e0evoid foo( int x, float y )\u7f16\u8bd1\u751f\u6210\u7684\u7b26\u53f7\u662f\u4e0d\u76f8\u540c\u7684\uff0c\u540e\u8005\u4e3a_foo_int_float\u3002", "\u540c\u6837\u5730\uff0cC++\u4e2d\u7684\u53d8\u91cf\u9664\u652f\u6301\u5c40\u90e8\u53d8\u91cf\u5916\uff0c\u8fd8\u652f\u6301\u7c7b\u6210\u5458\u53d8\u91cf\u548c\u5168\u5c40\u53d8\u91cf\u3002\u7528\u6237\u6240\u7f16\u5199\u7a0b\u5e8f\u7684\u7c7b\u6210\u5458\u53d8\u91cf\u53ef\u80fd\u4e0e\u5168\u5c40\u53d8\u91cf\u540c\u540d\uff0c\u6211\u4eec\u4ee5\u201d.\u201d\u6765\u533a\u5206\u3002\u800c\u672c\u8d28\u4e0a\uff0c\u7f16\u8bd1\u5668\u5728\u8fdb\u884c\u7f16\u8bd1\u65f6\uff0c\u4e0e\u51fd\u6570\u7684\u5904\u7406\u76f8\u4f3c\uff0c\u4e5f\u4e3a\u7c7b\u4e2d\u7684\u53d8\u91cf\u53d6\u4e86\u4e00\u4e2a\u72ec\u4e00\u65e0\u4e8c\u7684\u540d\u5b57\uff0c\u8fd9\u4e2a\u540d\u5b57\u4e0e\u7528\u6237\u7a0b\u5e8f\u4e2d\u540c\u540d\u7684\u5168\u5c40\u53d8\u91cf\u540d\u5b57\u4e0d\u540c\u3002", "\u672a\u52a0extern \u201cC\u201d\u58f0\u660e\u65f6\u7684\u8fde\u63a5\u65b9\u5f0f", "\u5047\u8bbe\u5728C++\u4e2d\uff0c\u6a21\u5757A\u7684\u5934\u6587\u4ef6\u5982\u4e0b\uff1a", "// \u6a21\u5757A\u5934\u6587\u4ef6\u3000moduleA.h", "\n#ifndef MODULE_A_H", "\n#define MODULE_A_H", "\nint foo( int x, int y );", "\n#endif\u3000\u3000", "\u5728\u6a21\u5757B\u4e2d\u5f15\u7528\u8be5\u51fd\u6570\uff1a", "// \u6a21\u5757B\u5b9e\u73b0\u6587\u4ef6\u3000moduleB.cpp", "\n\uff03i nclude \u201cmoduleA.h\u201d", "\nfoo(2,3);", "\n\u52a0extern \u201cC\u201d\u58f0\u660e\u540e\u7684\u7f16\u8bd1\u548c\u8fde\u63a5\u65b9\u5f0f", "\u52a0extern \u201cC\u201d\u58f0\u660e\u540e\uff0c\u6a21\u5757A\u7684\u5934\u6587\u4ef6\u53d8\u4e3a\uff1a", "// \u6a21\u5757A\u5934\u6587\u4ef6\u3000moduleA.h", "\n#ifndef MODULE_A_H", "\n#define MODULE_A_H", "\nextern \u201cC\u201d int foo( int x, int y );", "\n#endif\u3000\u3000", "\u5728\u6a21\u5757B\u7684\u5b9e\u73b0\u6587\u4ef6\u4e2d\u4ecd\u7136\u8c03\u7528foo( 2,3 )\uff0c\u5176\u7ed3\u679c\u662f\uff1a", "\n\uff081\uff09\u6a21\u5757A\u7f16\u8bd1\u751f\u6210foo\u7684\u76ee\u6807\u4ee3\u7801\u65f6\uff0c\u6ca1\u6709\u5bf9\u5176\u540d\u5b57\u8fdb\u884c\u7279\u6b8a\u5904\u7406\uff0c\u91c7\u7528\u4e86C\u8bed\u8a00\u7684\u65b9\u5f0f\uff1b", "\uff082\uff09\u8fde\u63a5\u5668\u5728\u4e3a\u6a21\u5757B\u7684\u76ee\u6807\u4ee3\u7801\u5bfb\u627efoo(2,3)\u8c03\u7528\u65f6\uff0c\u5bfb\u627e\u7684\u662f\u672a\u7ecf\u4fee\u6539\u7684\u7b26\u53f7\u540d_foo\u3002", "\u5982\u679c\u5728\u6a21\u5757A\u4e2d\u51fd\u6570\u58f0\u660e\u4e86foo\u4e3aextern \u201cC\u201d\u7c7b\u578b\uff0c\u800c\u6a21\u5757B\u4e2d\u5305\u542b\u7684\u662fextern int foo( int x, int y ) \uff0c\u5219\u6a21\u5757B\u627e\u4e0d\u5230\u6a21\u5757A\u4e2d\u7684\u51fd\u6570\uff1b\u53cd\u4e4b\u4ea6\u7136\u3002", "\u6240\u4ee5\uff0c\u53ef\u4ee5\u7528\u4e00\u53e5\u8bdd\u6982\u62ecextern \u201cC\u201d\u8fd9\u4e2a\u58f0\u660e\u7684\u771f\u5b9e\u76ee\u7684\uff08\u4efb\u4f55\u8bed\u8a00\u4e2d\u7684\u4efb\u4f55\u8bed\u6cd5\u7279\u6027\u7684\u8bde\u751f\u90fd\u4e0d\u662f\u968f\u610f\u800c\u4e3a\u7684\uff0c\u6765\u6e90\u4e8e\u771f\u5b9e\u4e16\u754c\u7684\u9700\u6c42\u9a71\u52a8\u3002\u6211\u4eec\u5728\u601d\u8003\u95ee\u9898\u65f6\uff0c\u4e0d\u80fd\u53ea\u505c\u7559\u5728\u8fd9\u4e2a\u8bed\u8a00\u662f\u600e\u4e48\u505a\u7684\uff0c\u8fd8\u8981\u95ee\u4e00\u95ee\u5b83\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u505a\uff0c\u52a8\u673a\u662f\u4ec0\u4e48\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u66f4\u6df1\u5165\u5730\u7406\u89e3\u8bb8\u591a\u95ee\u9898\uff09\uff1a\u5b9e\u73b0C++\u4e0eC\u53ca\u5176\u5b83\u8bed\u8a00\u7684\u6df7\u5408\u7f16\u7a0b\u3002\u3000\u3000", "\u660e\u767d\u4e86C++\u4e2dextern \u201cC\u201d\u7684\u8bbe\u7acb\u52a8\u673a\uff0c\u6211\u4eec\u4e0b\u9762\u6765\u5177\u4f53\u5206\u6790extern \u201cC\u201d\u901a\u5e38\u7684\u4f7f\u7528\u6280\u5de7\uff1a", "extern \u201cC\u201d\u7684\u60ef\u7528\u6cd5", "\uff081\uff09\u5728C++\u4e2d\u5f15\u7528C\u8bed\u8a00\u4e2d\u7684\u51fd\u6570\u548c\u53d8\u91cf\uff0c\u5728\u5305\u542bC\u8bed\u8a00\u5934\u6587\u4ef6\uff08\u5047\u8bbe\u4e3acExample.h\uff09\u65f6\uff0c\u9700\u8fdb\u884c\u4e0b\u5217\u5904\u7406\uff1a", "extern \u201cC\u201d", "\n{", "\n\uff03i nclude \u201ccExample.h\u201d", "\n}", "\u800c\u5728C\u8bed\u8a00\u7684\u5934\u6587\u4ef6\u4e2d\uff0c\u5bf9\u5176\u5916\u90e8\u51fd\u6570\u53ea\u80fd\u6307\u5b9a\u4e3aextern\u7c7b\u578b\uff0cC\u8bed\u8a00\u4e2d\u4e0d\u652f\u6301extern \u201cC\u201d\u58f0\u660e\uff0c\u5728.c\u6587\u4ef6\u4e2d\u5305\u542b\u4e86extern \u201cC\u201d\u65f6\u4f1a\u51fa\u73b0\u7f16\u8bd1\u8bed\u6cd5\u9519\u8bef\u3002", "C++\u5f15\u7528C\u51fd\u6570\u4f8b\u5b50\u5de5\u7a0b\u4e2d\u5305\u542b\u7684\u4e09\u4e2a\u6587\u4ef6\u7684\u6e90\u4ee3\u7801\u5982\u4e0b\uff1a", "/* c\u8bed\u8a00\u5934\u6587\u4ef6\uff1acExample.h */", "\n#ifndef C_EXAMPLE_H", "\n#define C_EXAMPLE_H", "\nextern int add(int x,int y);", "\n#endif", "/* c\u8bed\u8a00\u5b9e\u73b0\u6587\u4ef6\uff1acExample.c */", "\n\uff03i nclude \u201ccExample.h\u201d", "\nint add( int x, int y )", "\n{", "\nreturn x + y;", "\n}", "// c++\u5b9e\u73b0\u6587\u4ef6\uff0c\u8c03\u7528add\uff1acppFile.cpp", "\nextern \u201cC\u201d", "\n{", "\n\uff03i nclude \u201ccExample.h\u201d", "\n}", "\nint main(int argc, char* argv[])", "\n{", "\nadd(2,3);", "\nreturn 0;", "\n}", "\u5982\u679cC++\u8c03\u7528\u4e00\u4e2aC\u8bed\u8a00\u7f16\u5199\u7684.DLL\u65f6\uff0c\u5f53\u5305\u62ec.DLL\u7684\u5934\u6587\u4ef6\u6216\u58f0\u660e\u63a5\u53e3\u51fd\u6570\u65f6\uff0c\u5e94\u52a0extern \u201cC\u201d {\u3000}\u3002", "\uff082\uff09\u5728C\u4e2d\u5f15\u7528C++\u8bed\u8a00\u4e2d\u7684\u51fd\u6570\u548c\u53d8\u91cf\u65f6\uff0cC++\u7684\u5934\u6587\u4ef6\u9700\u6dfb\u52a0extern \u201cC\u201d\uff0c\u4f46\u662f\u5728C\u8bed\u8a00\u4e2d\u4e0d\u80fd\u76f4\u63a5\u5f15\u7528\u58f0\u660e\u4e86extern \u201cC\u201d\u7684\u8be5\u5934\u6587\u4ef6\uff0c\u5e94\u8be5\u4ec5\u5c06C\u6587\u4ef6\u4e2d\u5c06C++\u4e2d\u5b9a\u4e49\u7684extern \u201cC\u201d\u51fd\u6570\u58f0\u660e\u4e3aextern\u7c7b\u578b\u3002", "C\u5f15\u7528C++\u51fd\u6570\u4f8b\u5b50\u5de5\u7a0b\u4e2d\u5305\u542b\u7684\u4e09\u4e2a\u6587\u4ef6\u7684\u6e90\u4ee3\u7801\u5982\u4e0b\uff1a", "//C++\u5934\u6587\u4ef6 cppExample.h", "\n#ifndef CPP_EXAMPLE_H", "\n#define CPP_EXAMPLE_H", "\nextern \u201cC\u201d int add( int x, int y );", "\n#endif", "//C++\u5b9e\u73b0\u6587\u4ef6 cppExample.cpp", "\n\uff03i nclude \u201ccppExample.h\u201d", "\nint add( int x, int y )", "\n{", "\nreturn x + y;", "\n}", "/* C\u5b9e\u73b0\u6587\u4ef6 cFile.c", "\n/* \u8fd9\u6837\u4f1a\u7f16\u8bd1\u51fa\u9519\uff1a\uff03i nclude \u201ccExample.h\u201d */", "\nint main( int argc, char* argv[] )", "\n{", "\nadd( 2, 3 );", "\nreturn 0;", "\n}", "15\u9898\u76ee\u7684\u89e3\u7b54\u8bf7\u53c2\u8003\u300aC++\u4e2dextern \u201cC\u201d\u542b\u4e49\u6df1\u5c42\u63a2\u7d22\u300b\u6ce8\u89e3\uff1a", "\n\u51e0\u9053c\u7b14\u8bd5\u9898(\u542b\u53c2\u8003\u7b54\u6848)", "1.", "\nWhat is displayed when f() is called given the code:", "\nclass Number {", "\npublic:", "\nstring type; ", "Number(): type(\u201cvoid\u201d) { }", "\nexplicit Number(short) : type(\u201cshort\u201d) { }", "\nNumber(int) : type(\u201cint\u201d) { }", "\n};", "\nvoid Show(const Number& n) { cout \nvoid f()", "\n{", "\nshort s = 42;", "\nShow(s);", "\n}", "\na) void", "\nb) short", "\nc) int", "\nd) None of the above", "2. Which is the correct output for the following code", "\ndouble dArray[2] = {4, 8}, *p, *q;", "\np = &dArray[0];", "\nq = p + 1;", "\ncout \ncout \na) 1 and 8", "\nb) 8 and 4", "\nc) 4 and 8", "\nd) 8 and 1", "\u7b2c\u4e00\u4e2a\u9009C\uff1b", "\n\u867d\u7136\u4f20\u5165\u7684\u662fshort\u7c7b\u578b\uff0c\u4f46\u662fshort\u7c7b\u578b\u7684\u6784\u9020\u51fd\u6570\u88ab\u751f\u547d\u88abexplicit\uff0c\u4e5f\u5c31\u662f\u53ea\u80fd\u663e\u793a\u7c7b\u578b\u8f6c\u6362\uff0c\u4e0d\u80fd\u4f7f\u7528\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\u3002", "\n\u7b2c\u4e8c\u4e2a\u9009A\uff1b", "\n\u7b2c\u4e00\u4e2a\u662f\u6307\u9488\u52a0\u51cf\uff0c\u6309\u7167\u7684\u662f\u6307\u5411\u5730\u5740\u7c7b\u578b\u7684\u52a0\u51cf\uff0c\u53ea\u8ddf\u7c7b\u578b\u4f4d\u7f6e\u6709\u5173\uff0cq\u548cp\u6307\u5411\u7684\u6570\u636e\u7c7b\u578b\u4ee5\u5b9e\u9645\u6570\u636e\u7c7b\u578b\u6765\u7b97\u5dee\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u56e0\u6b64\u662f1\u3002\u800c\u7b2c\u4e8c\u4e2a\u52a0\u51cf\u662f\u5b9e\u9645\u6307\u9488\u503c\u5f97\u52a0\u51cf\uff0c\u5728\u5185\u5b58\u4e2d\u4e00\u4e2adouble\u7c7b\u578b\u5360\u636e8\u4e2a\u5b57\u8282\uff0c\u56e0\u6b64\u662f8", "54.Sony\u7b14\u8bd5\u9898 ", "\u3000\u30001\uff0e\u5b8c\u6210\u4e0b\u5217\u7a0b\u5e8f", "\n\u3000\u3000*", "\n\u3000\u3000*.*.", "\n\u3000\u3000*..*..*..", "\n\u3000\u3000*...*...*...*...", "\n\u3000\u3000*....*....*....*....*....", "\n\u3000\u3000*.....*.....*.....*.....*.....*.....", "\n\u3000\u3000*......*......*......*......*......*......*......", "\n\u3000\u3000*.......*.......*.......*.......*.......*.......*.......*.......", "\n\u3000\u3000#include", "\n\u3000\u3000#define N 8", "\n\u3000\u3000int main()", "\n\u3000\u3000{", "\n\u3000\u3000 int i;", "\n\u3000\u3000 int j;", "\n\u3000\u3000 int k;", "\n\u3000\u3000 ---------------------------------------------------------", "\n\u3000\u3000 | |", "\n\u3000\u3000 | |", "\n\u3000\u3000 | |", "\n\u3000\u3000 ---------------------------------------------------------", "\n\u3000\u3000 return 0;", "\n\u3000\u3000}", "\n\u3000\u30002\uff0e\u5b8c\u6210\u7a0b\u5e8f\uff0c\u5b9e\u73b0\u5bf9\u6570\u7ec4\u7684\u964d\u5e8f\u6392\u5e8f", "\n\u3000\u3000#include", "\n\u3000\u3000void sort( );", "\n\u3000\u3000int main()", "\n\u3000\u3000{", "\n\u3000\u3000 int array[]={45\uff0c56\uff0c76\uff0c234\uff0c1\uff0c34\uff0c23\uff0c2\uff0c3}\uff1b //\u6570\u5b57\u4efb//\u610f\u7ed9\u51fa", "\n\u3000\u3000 sort( );", "\n\u3000\u3000 return 0;", "\n\u3000\u3000}", "\n\u3000\u3000void sort( )", "\n\u3000\u3000{", "\n\u3000\u3000 ____________________________________", "\n\u3000\u3000 | |", "\n\u3000\u3000 | |", "\n\u3000\u3000 |-----------------------------------------------------|", "\n\u3000\u3000}", "\n\u3000\u30003\uff0e\u8d39\u6ce2\u90a3\u5176\u6570\u5217\uff0c1\uff0c1\uff0c2\uff0c3\uff0c5\u2026\u2026\u7f16\u5199\u7a0b\u5e8f\u6c42\u7b2c\u5341\u9879\u3002\u53ef\u4ee5\u7528\u9012\u5f52\uff0c\u4e5f\u53ef\u4ee5\u7528\u5176", "\n\u4ed6\u65b9\u6cd5\uff0c\u4f46\u8981\u8bf4\u660e\u4f60\u9009\u62e9\u7684\u7406\u7531\u3002", "\n\u3000\u3000#include", "\n\u3000\u3000int Pheponatch(int);", "\n\u3000\u3000int main()", "\n\u3000\u3000{", "\n\u3000\u3000 printf(\"The 10th is %d\",Pheponatch(10));", "\n\u3000\u3000 return 0;", "\n\u3000\u3000}", "\n\u3000\u3000int Pheponatch(int N)", "\n\u3000\u3000{", "\n\u3000\u3000--------------------------------", "\n\u3000\u3000| |", "\n\u3000\u3000| |", "\n\u3000\u3000--------------------------------", "\n\u3000\u3000}", "\n\u3000\u30004\uff0e\u4e0b\u5217\u7a0b\u5e8f\u8fd0\u884c\u65f6\u4f1a\u5d29\u6e83\uff0c\u8bf7\u627e\u51fa\u9519\u8bef\u5e76\u6539\u6b63\uff0c\u5e76\u4e14\u8bf4\u660e\u539f\u56e0\u3002", "\n\u3000\u3000#include", "\n\u3000\u3000#include", "\n\u3000\u3000typedef struct{", "\n\u3000\u3000 TNode* left;", "\n\u3000\u3000 TNode* right;", "\n\u3000\u3000 int value;", "\n\u3000\u3000} TNode;", "\n\u3000\u3000TNode* root=NULL;", "\n\u3000\u3000void append(int N);", "\n\u3000\u3000int main()", "\n\u3000\u3000{", "\n\u3000\u3000 append(63);", "\n\u3000\u3000 append(45);", "\n\u3000\u3000 append(32);", "\n\u3000\u3000 append(77);", "\n\u3000\u3000 append(96);", "\n\u3000\u3000 append(21);", "\n\u3000\u3000 append(17); // Again, \u6570\u5b57\u4efb\u610f\u7ed9\u51fa", "\n\u3000\u3000}", "\n\u3000\u3000void append(int N)", "\n\u3000\u3000{", "\n\u3000\u3000 TNode* NewNode=(TNode *)malloc(sizeof(TNode));", "\n\u3000\u3000 NewNode->value=N; ", "\u3000\u3000 if(root==NULL)", "\n\u3000\u3000 {", "\n\u3000\u3000 root=NewNode;", "\n\u3000\u3000 return;", "\n\u3000\u3000 }", "\n\u3000\u3000 else", "\n\u3000\u3000 {", "\n\u3000\u3000 TNode* temp;", "\n\u3000\u3000 temp=root; ", "\u3000\u3000 while((N>=temp.value && temp.left!=NULL) || (N !=NULL", "\n\u3000\u3000))", "\n\u3000\u3000 {", "\n\u3000\u3000 while(N>=temp.value && temp.left!=NULL)", "\n\u3000\u3000 temp=temp.left;", "\n\u3000\u3000 while(N \u3000\u3000 temp=temp.right;", "\n\u3000\u3000 }", "\n\u3000\u3000 if(N>=temp.value)", "\n\u3000\u3000 temp.left=NewNode;", "\n\u3000\u3000 else", "\n\u3000\u3000 temp.right=NewNode;", "\n\u3000\u3000 return;", "\n\u3000\u3000 }", "\n\u3000\u3000} ", "\u203b \u6765\u6e90:\u2022\u54c8\u5de5\u5927\u7d2b\u4e01\u9999 http://bbs.hit.edu.cn\u2022[FROM:219.217.233.47] ", "\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500", "\nmengfd (Icebreaker) \u4e8e (Sun Oct 23 14:59:59 2005) \u8bf4\u9053:", "\n55\u8bf7\u4f60\u5206\u522b\u753b\u51faOSI\u7684\u4e03\u5c42\u7f51\u7edc\u7ed3\u6784\u56fe\u548cTCP/IP\u7684\u4e94\u5c42\u7ed3\u6784\u56fe\u3002", "\n\u5e94\u7528\u5c42\uff1a\u4e3a\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u670d\u52a1", "\n\u8868\u793a\u5c42\uff1a\u5904\u7406\u5728\u4e24\u4e2a\u901a\u4fe1\u7cfb\u7edf\u4e2d\u4ea4\u6362\u4fe1\u606f\u7684\u8868\u793a\u65b9\u5f0f", "\n\u4f1a\u8bdd\u5c42\uff1a\u8d1f\u8d23\u7ef4\u62a4\u4e24\u4e2a\u7ed3\u70b9\u95f4\u4f1a\u8bdd\u8fde\u63a5\u7684\u5efa\u7acb\u3001\u7ba1\u7406\u548c\u7ec8\u6b62\uff0c\u4ee5\u53ca\u6570\u636e\u4ea4\u6362", "\n\u4f20\u8f93\u5c42\uff1a\u5411\u7528\u6237\u63d0\u4f9b\u53ef\u9760\u7684\u7aef\u5230\u7aef\u670d\u52a1\u3002UDP TCP\u534f\u8bae\u3002", "\n\u7f51\u7edc\u5c42\uff1a\u901a\u8fc7\u8def\u7531\u9009\u62e9\u7b97\u6cd5\u4e3a\u5206\u7ec4\u901a\u8fc7\u901a\u4fe1\u5b50\u7f51\u9009\u62e9\u6700\u9002\u5f53\u7684\u8def\u5f84\uff0c\u4ee5\u53ca\u5b9e\u73b0\u62e5\u585e\u63a7\u5236\u3001\u7f51\u7edc\u4e92\u8054\u7b49\u529f\u80fd\u3002\u6570\u636e\u4f20\u8f93\u5355\u5143\u662f\u5206\u7ec4\u3002IP\u5730\u5740\uff0c\u8def\u7531\u5668\uff0cIP\u534f\u8bae\u3002", "\n\u6570\u636e\u94fe\u8def\u5c42\uff1a\u5728\u7269\u7406\u5c42\u63d0\u4f9b\u7684\u670d\u52a1\u57fa\u7840\u4e0a\uff0c\u6570\u636e\u94fe\u8def\u5c42\u5728\u901a\u4fe1\u7684\u5b9e\u4f53\u95f4\u5efa\u7acb\u6570\u636e\u94fe\u8def\u8fde\u63a5\uff0c\u4f20\u8f93\u4e00\u5e27\u4e3a\u5355\u4f4d\u7684\u6570\u636e\u5305\uff08\uff0c\u5e76\u91c7\u7528\u5dee\u9519\u63a7\u5236\u4e0e\u6d41\u91cf\u63a7\u5236\u65b9\u6cd5\uff0c\u4f7f\u6709\u5dee\u9519\u7684\u7269\u7406\u7ebf\u8def\u53d8\u6210\u65e0\u5dee\u9519\u7684\u6570\u636e\u94fe\u8def\u3002\uff09", "\n\u7269\u7406\u5c42\uff1a\u4f20\u8f93\u6bd4\u7279\u6d41\u3002\u4f20\u8f93\u5355\u5143\u662f\u6bd4\u7279\u3002\u8c03\u5236\u89e3\u8c03\u5668\u3002", "56\u8bf7\u4f60\u8be6\u7ec6\u5730\u89e3\u91ca\u4e00\u4e0bIP\u534f\u8bae\u7684\u5b9a\u4e49\uff0c\u5728\u54ea\u4e2a\u5c42\u4e0a\u9762\uff1f\u4e3b\u8981\u6709\u4ec0\u4e48\u4f5c\u7528\uff1fTCP\u4e0eUDP\u5462 \uff1f", "\n\u7f51\u7edc\u5c42\u3002", "\n57.\u8bf7\u95ee\u4ea4\u6362\u673a\u548c\u8def\u7531\u5668\u5404\u81ea\u7684\u5b9e\u73b0\u539f\u7406\u662f\u4ec0\u4e48\uff1f\u5206\u522b\u5728\u54ea\u4e2a\u5c42\u6b21\u4e0a\u9762\u5b9e\u73b0\u7684\uff1f", "\n\u4ea4\u6362\u673a\uff1a\u6570\u636e\u94fe\u8def\u5c42\u3002\u8def\u7531\u5668\uff1a\u7f51\u7edc\u5c42\u3002", "\n58.\u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1f\u662f\u600e\u4e48\u5b9e\u73b0\u7684\uff1f\u64cd\u4f5c\u7cfb\u7edf\u548c\u7f16\u8bd1\u5668\u662f\u600e\u4e48\u77e5\u9053\u7684 \uff1f ", "59.8086\u662f\u591a\u5c11\u4f4d\u7684\u7cfb\u7edf\uff1f\u5728\u6570\u636e\u603b\u7ebf\u4e0a\u662f\u600e\u4e48\u5b9e\u73b0\u7684\uff1f ", "8086\u5fae\u5904\u7406\u5668\u5171\u67094\u4e2a16\u4f4d\u7684\u6bb5\u5bc4\u5b58\u5668\uff0c\u5728\u5bfb\u5740\u5185\u5b58\u5355\u5143\u65f6\uff0c\u7528\u5b83\u4eec\u76f4\u63a5\u6216\u95f4\u63a5\u5730\u5b58\u653e\u6bb5\u5730\u5740\u3002", "\n\u3000\u3000\u4ee3\u7801\u6bb5\u5bc4\u5b58\u5668CS\uff1a\u5b58\u653e\u5f53\u524d\u6267\u884c\u7684\u7a0b\u5e8f\u7684\u6bb5\u5730\u5740\u3002", "\n\u3000\u3000\u6570\u636e\u6bb5\u5bc4\u5b58\u5668DS\uff1a\u5b58\u653e\u5f53\u524d\u6267\u884c\u7684\u7a0b\u5e8f\u6240\u7528\u64cd\u4f5c\u6570\u7684\u6bb5\u5730\u5740\u3002", "\n\u3000\u3000\u5806\u6808\u6bb5\u5bc4\u5b58\u5668SS\uff1a\u5b58\u653e\u5f53\u524d\u6267\u884c\u7684\u7a0b\u5e8f\u6240\u7528\u5806\u6808\u7684\u6bb5\u5730\u5740\u3002", "\n\u3000\u3000\u9644\u52a0\u6bb5\u5bc4\u5b58\u5668ES\uff1a\u5b58\u653e\u5f53\u524d\u6267\u884c\u7a0b\u5e8f\u4e2d\u4e00\u4e2a\u8f85\u52a9\u6570\u636e\u6bb5\u7684\u6bb5\u5730\u5740\u3002", "\n\u7531cs:ip\u6784\u6210\u6307\u4ee4\u5730\u5740\uff0css:sp\u6784\u6210\u5806\u6808\u7684\u6808\u9876\u5730\u5740\u6307\u9488\u3002DS\u548cES\u7528\u4f5c\u6570\u636e\u6bb5\u548c\u9644\u52a0\u6bb5\u7684\u6bb5\u5730\u5740\uff08\u6bb5\u8d77\u59cb\u5730\u5740\u6216\u6bb5\u503c\uff09", "8086\uff0f8088\u5fae\u5904\u7406\u5668\u7684\u5b58\u50a8\u5668\u7ba1\u7406", "\n   1.\u5730\u5740\u7ebf\uff08\u7801\uff09\u4e0e\u5bfb\u5740\u8303\u56f4\uff1aN\u6761\u5730\u5740\u7ebf     \u5bfb\u5740\u8303\u56f4=2N", "\n   2.8086\u670920\u5730\u5740\u7ebf     \u5bfb\u5740\u8303\u56f4\u4e3a1MB  \u7531 00000H\uff5eFFFFFH", "\n   3. 8086\u5fae\u5904\u7406\u5668\u662f\u4e00\u4e2a16\u4f4d\u7ed3\u6784\uff0c\u7528\u6237\u53ef\u7528\u7684\u5bc4\u5b58\u5668\u5747\u4e3a16\u4f4d\uff1a\u5bfb\u574064KB", "\n   4. 8086\uff0f8088\u91c7\u7528\u5206\u6bb5\u7684\u65b9\u6cd5\u5bf9\u5b58\u50a8\u5668\u8fdb\u884c\u7ba1\u7406\u3002\u5177\u4f53\u505a\u6cd5\u662f\uff1a\u628a1MB\u7684\u5b58\u50a8\u5668\u7a7a\u95f4\u5206\u6210\u82e5\u5e72\u6bb5\uff0c\u6bcf\u6bb5\u5bb9\u91cf\u4e3a64KB\uff0c\u6bcf\u6bb5\u5b58\u50a8\u5668\u7684\u8d77\u59cb\u5730\u5740\u5fc5\u987b\u662f\u4e00\u4e2a\u80fd\u88ab16\u6574\u9664\u7684\u5730\u5740\u7801\uff0c\u5373\u572820\u4f4d\u7684\u4e8c\u8fdb\u5236\u5730\u5740\u7801\u4e2d\u6700\u4f4e4\u4f4d\u5fc5\u987b\u662f\u201c0\u201d\u3002\u6bcf\u4e2a\u6bb5\u9996\u5730\u5740\u7684\u9ad816\u4f4d\u4e8c\u8fdb\u5236\u4ee3\u7801\u5c31\u662f\u8be5\u6bb5\u7684\u6bb5\u53f7(\u79f0\u6bb5\u57fa\u5730\u5740)\u6216\u7b80\u79f0\u6bb5\u5730\u5740\uff0c\u6bb5\u53f7\u4fdd\u5b58\u5728\u6bb5\u5bc4\u5b58\u5668\u4e2d\u3002\u6211\u4eec\u53ef\u5bf9\u6bb5\u5bc4\u5b58\u5668\u8bbe\u7f6e\u4e0d\u540c\u7684\u503c\u6765\u4f7f\u5fae\u5904\u7406\u5668\u7684\u5b58\u50a8\u5668\u8bbf\u95ee\u6307\u5411\u4e0d\u540c\u7684\u6bb5\u3002", "\n   5.\u6bb5\u5185\u7684\u67d0\u4e2a\u5b58\u50a8\u5355\u5143\u76f8\u5bf9\u4e8e\u8be5\u6bb5\u6bb5\u9996\u5730\u5740\u7684\u5dee\u503c\uff0c\u79f0\u4e3a\u6bb5\u5185\u504f\u79fb\u5730\u5740(\u4e5f\u53eb\u504f\u79fb\u91cf)\u752816\u4f4d\u4e8c\u8fdb\u5236\u4ee3\u7801\u8868\u793a\u3002", "\n   6.\u7269\u7406\u5730\u5740\u662f\u75318086\uff0f8088\u82af\u7247\u5730\u5740\u5f15\u7ebf\u9001\u51fa\u768420\u4f4d\u5730\u5740\u7801\uff0c\u5b83\u7528\u6765\u53c2\u52a0\u5b58\u50a8\u5668\u7684\u5730\u5740\u8bd1\u7801\uff0c\u6700\u7ec8\u8bfb\uff0f\u5199\u6240\u8bbf\u95ee\u7684\u4e00\u4e2a\u7279\u5b9a\u7684\u5b58\u50a8\u5355\u5143\u3002", "\n   7.\u903b\u8f91\u5730\u5740\u7531\u67d0\u6bb5\u7684\u6bb5\u5730\u5740\u548c\u6bb5\u5185\u504f\u79fb\u5730\u5740(\u4e5f\u53eb\u504f\u79fb\u91cf)\u4e24\u90e8\u5206\u6240\u7ec4\u6210\u3002\u5199\u6210\uff1a", "\n     \u6bb5\u5730\u5740\uff1a\u504f\u79fb\u5730\u5740(\u4f8b\u5982\uff0c1234H\uff1a0088H)\u3002", "\n   8.\u5728\u786c\u4ef6\u4e0a\u8d77\u4f5c\u7528\u7684\u662f\u7269\u7406\u5730\u5740\uff0c\u7269\u7406\u5730\u5740\uff1d\u6bb5\u57fa\u5730\u5740\u00d710H\u5341\u504f\u79fb\u5730\u5740 ", "\u8054\u60f3\u7b14\u8bd5\u9898", "\n\u3000\u30001\uff0e\u8bbe\u8ba1\u51fd\u6570 int atoi(char *s)\u3002", "\n\u3000\u30002\uff0eint i=(j=4,k=8,l=16,m=32); printf(\u201c%d\u201d, i); \u8f93\u51fa\u662f\u591a\u5c11\uff1f ", "60.\u89e3\u91ca\u5c40\u90e8\u53d8\u91cf\u3001\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\u7684\u542b\u4e49\u3002 ", "\u3000\u30004\uff0e\u89e3\u91ca\u5806\u548c\u6808\u7684\u533a\u522b\u3002"], "title": "c++\u7b14\u8bd5\u9762\u8bd5\u5b9d\u51782011\u7248 40-60"},
{"contents": ["1.new\u3001delete\u3001malloc\u3001free\u5173\u7cfb", "\ndelete\u4f1a\u8c03\u7528\u5bf9\u8c61\u7684\u6790\u6784\u51fd\u6570,\u548cnew\u5bf9\u5e94free\u53ea\u4f1a\u91ca\u653e\u5185\u5b58\uff0cnew\u8c03\u7528\u6784\u9020\u51fd\u6570\u3002malloc\u4e0efree\u662fC++/C\u8bed\u8a00\u7684\u6807\u51c6\u5e93\u51fd\u6570\uff0cnew/delete\u662fC++\u7684\u8fd0\u7b97\u7b26\u3002\u5b83\u4eec\u90fd\u53ef\u7528\u4e8e\u7533\u8bf7\u52a8\u6001\u5185\u5b58\u548c\u91ca\u653e\u5185\u5b58\u3002\u5bf9\u4e8e\u975e\u5185\u90e8\u6570\u636e\u7c7b\u578b\u7684\u5bf9\u8c61\u800c\u8a00\uff0c\u5149\u7528maloc/free\u65e0\u6cd5\u6ee1\u8db3\u52a8\u6001\u5bf9\u8c61\u7684\u8981\u6c42\u3002\u5bf9\u8c61\u5728\u521b\u5efa\u7684\u540c\u65f6\u8981\u81ea\u52a8\u6267\u884c\u6784\u9020\u51fd\u6570\uff0c\u5bf9\u8c61\u5728\u6d88\u4ea1\u4e4b\u524d\u8981\u81ea\u52a8\u6267\u884c\u6790\u6784\u51fd\u6570\u3002\u7531\u4e8emalloc/free\u662f\u5e93\u51fd\u6570\u800c\u4e0d\u662f\u8fd0\u7b97\u7b26\uff0c\u4e0d\u5728\u7f16\u8bd1\u5668\u63a7\u5236\u6743\u9650\u4e4b\u5185\uff0c\u4e0d\u80fd\u591f\u628a\u6267\u884c\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u7684\u4efb\u52a1\u5f3a\u52a0\u4e8emalloc/free\u3002\u56e0\u6b64C++\u8bed\u8a00\u9700\u8981\u4e00\u4e2a\u80fd\u5b8c\u6210\u52a8\u6001\u5185\u5b58\u5206\u914d\u548c\u521d\u59cb\u5316\u5de5\u4f5c\u7684\u8fd0\u7b97\u7b26new\uff0c\u4ee5\u53ca\u4e00\u4e2a\u80fd\u5b8c\u6210\u6e05\u7406\u4e0e\u91ca\u653e\u5185\u5b58\u5de5\u4f5c\u7684\u8fd0\u7b97\u7b26delete\u3002\u6ce8\u610fnew/delete\u4e0d\u662f\u5e93\u51fd\u6570\u3002", "\n2.delete\u4e0e delete []\u533a\u522b", "\ndelete\u53ea\u4f1a\u8c03\u7528\u4e00\u6b21\u6790\u6784\u51fd\u6570\uff0c\u800cdelete[]\u4f1a\u8c03\u7528\u6bcf\u4e00\u4e2a\u6210\u5458\u7684\u6790\u6784\u51fd\u6570\u3002\u5728More Effective  C++\u4e2d\u6709\u66f4\u4e3a\u8be6\u7ec6\u7684\u89e3\u91ca\uff1a\u201c\u5f53delete\u64cd\u4f5c\u7b26\u7528\u4e8e\u6570\u7ec4\u65f6\uff0c\u5b83\u4e3a\u6bcf\u4e2a\u6570\u7ec4\u5143\u7d20\u8c03\u7528\u6790\u6784\u51fd\u6570\uff0c\u7136\u540e\u8c03\u7528operatordelete\u6765\u91ca\u653e\u5185\u5b58\u3002\u201ddelete\u4e0eNew\u914d\u5957\uff0cdelete []\u4e0enew []\u914d\u5957", "\n  MemTest*mTest1=newMemTest[10];", "\n  MemTest*mTest2=newMemTest;", "\n  int*pInt1=newint[10];", "\n  int*pInt2=newint;", "\n  delete[]pInt1;  //-1-", "\n  delete[]pInt2;  //-2-", "\n  delete[]mTest1;//-3-", "\n  delete[]mTest2;//-4-", "\n  \u5728-4-\u5904\u62a5\u9519\u3002", "\n\u8fd9\u5c31\u8bf4\u660e\uff1a\u5bf9\u4e8e\u5185\u5efa\u7b80\u5355\u6570\u636e\u7c7b\u578b\uff0cdelete\u548cdelete[]\u529f\u80fd\u662f\u76f8\u540c\u7684\u3002\u5bf9\u4e8e\u81ea\u5b9a\u4e49\u7684\u590d\u6742\u6570\u636e\u7c7b\u578b\uff0cdelete\u548cdelete[]\u4e0d\u80fd\u4e92\u7528\u3002delete[]\u5220\u9664\u4e00\u4e2a\u6570\u7ec4\uff0cdelete\u5220\u9664\u4e00\u4e2a\u6307\u9488\u7b80\u5355\u6765\u8bf4\uff0c\u7528new\u5206\u914d\u7684\u5185\u5b58\u7528delete\u5220\u9664\u7528new[]\u5206\u914d\u7684\u5185\u5b58\u7528delete[]\u5220\u9664delete[]\u4f1a\u8c03\u7528\u6570\u7ec4\u5143\u7d20\u7684\u6790\u6784\u51fd\u6570\u3002\u5185\u90e8\u6570\u636e\u7c7b\u578b\u6ca1\u6709\u6790\u6784\u51fd\u6570\uff0c\u6240\u4ee5\u95ee\u9898\u4e0d\u5927\u3002\u5982\u679c\u4f60\u5728\u7528delete\u65f6\u6ca1\u7528\u62ec\u53f7\uff0cdelete\u5c31\u4f1a\u8ba4\u4e3a\u6307\u5411\u7684\u662f\u5355\u4e2a\u5bf9\u8c61\uff0c\u5426\u5219\uff0c\u5b83\u5c31\u4f1a\u8ba4\u4e3a\u6307\u5411\u7684\u662f\u4e00\u4e2a\u6570\u7ec4\u3002", "\n3.C C++ JAVA\u5171\u540c\u70b9\uff0c\u4e0d\u540c\u4e4b\u5904\uff1f", "\n\u9762\u5411\u5bf9\u8c61\uff0c\u6307\u9488\uff0c\u591a\u91cd\u7ee7\u627f\uff0c\u5185\u5b58\u7ba1\u7406\u3002", "\n4.\u7ee7\u627f\u4f18\u7f3a\u70b9\u3002", "\n\u7c7b\u7ee7\u627f\u662f\u5728\u7f16\u8bd1\u65f6\u523b\u9759\u6001\u5b9a\u4e49\u7684\uff0c\u4e14\u53ef\u76f4\u63a5\u4f7f\u7528\uff0c\u7c7b\u7ee7\u627f\u53ef\u4ee5\u8f83\u65b9\u4fbf\u5730\u6539\u53d8\u7236\u7c7b\u7684\u5b9e\u73b0\u3002\u4f46\u662f\u7c7b\u7ee7\u627f\u4e5f\u6709\u4e00\u4e9b\u4e0d\u8db3\u4e4b\u5904\u3002\u9996\u5148\uff0c\u56e0\u4e3a\u7ee7\u627f\u5728\u7f16\u8bd1\u65f6\u523b\u5c31\u5b9a\u4e49\u4e86\uff0c\u6240\u4ee5\u65e0\u6cd5\u5728\u8fd0\u884c\u65f6\u523b\u6539\u53d8\u4ece\u7236\u7c7b\u7ee7\u627f\u7684\u5b9e\u73b0\u3002\u66f4\u7cdf\u7684\u662f\uff0c\u7236\u7c7b\u901a\u5e38\u81f3\u5c11\u5b9a\u4e49\u4e86\u5b50\u7c7b\u7684\u90e8\u5206\u884c\u4e3a\uff0c\u7236\u7c7b\u7684\u4efb\u4f55\u6539\u53d8\u90fd\u53ef\u80fd\u5f71\u54cd\u5b50\u7c7b\u7684\u884c\u4e3a\u3002\u5982\u679c\u7ee7\u627f\u4e0b\u6765\u7684\u5b9e\u73b0\u4e0d\u9002\u5408\u89e3\u51b3\u65b0\u7684\u95ee\u9898\uff0c\u5219\u7236\u7c7b\u5fc5\u987b\u91cd\u5199\u6216\u88ab\u5176\u4ed6\u66f4\u9002\u5408\u7684\u7c7b\u66ff\u6362\u3002\u8fd9\u79cd\u4f9d\u8d56\u5173\u7cfb\u9650\u5236\u4e86\u7075\u6d3b\u6027\u5e76\u6700\u7ec8\u9650\u5236\u4e86\u590d\u7528\u6027\u3002", "\n\uff08\u5f85\u8865\u5145\uff09", "5.C++\u6709\u54ea\u4e9b\u6027\u8d28\uff08\u9762\u5411\u5bf9\u8c61\u7279\u70b9\uff09", "\n\u5c01\u88c5\uff0c\u7ee7\u627f\u548c\u591a\u6001\u3002", "\n\u5728\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u4e2d\uff0c\u5c01\u88c5\u662f\u5229\u7528\u53ef\u91cd\u7528\u6210\u5206\u6784\u9020\u8f6f\u4ef6\u7cfb\u7edf\u7684\u7279\u6027\uff0c\u5b83\u4e0d\u4ec5\u652f\u6301\u7cfb\u7edf\u7684\u53ef\u91cd\u7528\u6027\uff0c\u800c\u4e14\u8fd8\u6709\u5229\u4e8e\u63d0\u9ad8\u7cfb\u7edf\u7684\u53ef\u6269\u5145\u6027\uff1b\u6d88\u606f\u4f20\u9012\u53ef\u4ee5\u5b9e\u73b0\u53d1\u9001\u4e00\u4e2a\u901a\u7528\u7684\u6d88\u606f\u800c\u8c03\u7528\u4e0d\u540c\u7684\u65b9\u6cd5\uff1b\u5c01\u88c5\u662f\u5b9e\u73b0\u4fe1\u606f\u9690\u853d\u7684\u4e00\u79cd\u6280\u672f\uff0c\u5176\u76ee\u7684\u662f\u4f7f\u7c7b\u7684\u5b9a\u4e49\u548c\u5b9e\u73b0\u5206\u79bb\u3002", "\n6.\u5b50\u7c7b\u6790\u6784\u65f6\u8981\u8c03\u7528\u7236\u7c7b\u7684\u6790\u6784\u51fd\u6570\u5417\uff1f", "\n\u6790\u6784\u51fd\u6570\u8c03\u7528\u7684\u6b21\u5e8f\u662f\u5148\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u540e\u57fa\u7c7b\u7684\u6790\u6784\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728\u57fa\u7c7b\u7684\u7684\u6790\u6784\u8c03\u7528\u7684\u65f6\u5019,\u6d3e\u751f\u7c7b\u7684\u4fe1\u606f\u5df2\u7ecf\u5168\u90e8\u9500\u6bc1\u4e86\u5b9a\u4e49\u4e00\u4e2a\u5bf9\u8c61\u65f6\u5148\u8c03\u7528\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u3001\u7136\u540e\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff1b\u6790\u6784\u7684\u65f6\u5019\u6070\u597d\u76f8\u53cd\uff1a\u5148\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570\u3001\u7136\u540e\u8c03\u7528\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570JAVA\u65e0\u6790\u6784\u51fd\u6570\u6df1\u62f7\u8d1d\u548c\u6d45\u62f7\u8d1d", "\n7.\u591a\u6001\uff0c\u865a\u51fd\u6570\uff0c\u7eaf\u865a\u51fd\u6570", "8.\u6c42\u4e0b\u9762\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff08\u5fae\u8f6f\uff09", "\nint func(x)", "\n{", "\n    int countx = 0;", "\n    while(x)", "\n    {", "\n          countx ++;", "\n          x = x&(x-1);", "\n     }", "\n    return countx;", "\n}", "\n\u5047\u5b9ax = 9999\u3002 \u7b54\u6848\uff1a8", "\n\u601d\u8def\uff1a\u5c06x\u8f6c\u5316\u4e3a2\u8fdb\u5236\uff0c\u770b\u542b\u6709\u76841\u7684\u4e2a\u6570\u3002", "\n9.\u4ec0\u4e48\u662f\u201c\u5f15\u7528\u201d\uff1f\u7533\u660e\u548c\u4f7f\u7528\u201c\u5f15\u7528\u201d\u8981\u6ce8\u610f\u54ea\u4e9b\u95ee\u9898\uff1f", "\n\u7b54\uff1a\u5f15\u7528\u5c31\u662f\u67d0\u4e2a\u76ee\u6807\u53d8\u91cf\u7684\u201c\u522b\u540d\u201d(alias)\uff0c\u5bf9\u5e94\u7528\u7684\u64cd\u4f5c\u4e0e\u5bf9\u53d8\u91cf\u76f4\u63a5\u64cd\u4f5c\u6548\u679c\u5b8c\u5168\u76f8\u540c\u3002\u7533\u660e\u4e00\u4e2a\u5f15\u7528\u7684\u65f6\u5019\uff0c\u5207\u8bb0\u8981\u5bf9\u5176\u8fdb\u884c\u521d\u59cb\u5316\u3002\u5f15\u7528\u58f0\u660e\u5b8c\u6bd5\u540e\uff0c\u76f8\u5f53\u4e8e\u76ee\u6807\u53d8\u91cf\u540d\u6709\u4e24\u4e2a\u540d\u79f0\uff0c\u5373\u8be5\u76ee\u6807\u539f\u540d\u79f0\u548c\u5f15\u7528\u540d\uff0c\u4e0d\u80fd\u518d\u628a\u8be5\u5f15\u7528\u540d\u4f5c\u4e3a\u5176\u4ed6\u53d8\u91cf\u540d\u7684\u522b\u540d\u3002\u58f0\u660e\u4e00\u4e2a\u5f15\u7528\uff0c\u4e0d\u662f\u65b0\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53d8\u91cf\uff0c\u5b83\u53ea\u8868\u793a\u8be5\u5f15\u7528\u540d\u662f\u76ee\u6807\u53d8\u91cf\u540d\u7684\u4e00\u4e2a\u522b\u540d\uff0c\u5b83\u672c\u8eab\u4e0d\u662f\u4e00\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u56e0\u6b64\u5f15\u7528\u672c\u8eab\u4e0d\u5360\u5b58\u50a8\u5355\u5143\uff0c\u7cfb\u7edf\u4e5f\u4e0d\u7ed9\u5f15\u7528\u5206\u914d\u5b58\u50a8\u5355\u5143\u3002\u4e0d\u80fd\u5efa\u7acb\u6570\u7ec4\u7684\u5f15\u7528\u3002", "\n10.\u5c06\u201c\u5f15\u7528\u201d\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u6709\u54ea\u4e9b\u7279\u70b9\uff1f", "\n\uff081\uff09\u4f20\u9012\u5f15\u7528\u7ed9\u51fd\u6570\u4e0e\u4f20\u9012\u6307\u9488\u7684\u6548\u679c\u662f\u4e00\u6837\u7684\u3002\u8fd9\u65f6\uff0c\u88ab\u8c03\u51fd\u6570\u7684\u5f62\u53c2\u5c31\u6210\u4e3a\u539f\u6765\u4e3b\u8c03\u51fd\u6570\u4e2d\u7684\u5b9e\u53c2\u53d8\u91cf\u6216\u5bf9\u8c61\u7684\u4e00\u4e2a\u522b\u540d\u6765\u4f7f\u7528\uff0c\u6240\u4ee5\u5728\u88ab\u8c03\u51fd\u6570\u4e2d\u5bf9\u5f62\u53c2\u53d8\u91cf\u7684\u64cd\u4f5c\u5c31\u662f\u5bf9\u5176\u76f8\u5e94\u7684\u76ee\u6807\u5bf9\u8c61\uff08\u5728\u4e3b\u8c03\u51fd\u6570\u4e2d\uff09\u7684\u64cd\u4f5c\u3002", "\n\uff082\uff09\u4f7f\u7528\u5f15\u7528\u4f20\u9012\u51fd\u6570\u7684\u53c2\u6570\uff0c\u5728\u5185\u5b58\u4e2d\u5e76\u6ca1\u6709\u4ea7\u751f\u5b9e\u53c2\u7684\u526f\u672c\uff0c\u5b83\u662f\u76f4\u63a5\u5bf9\u5b9e\u53c2\u64cd\u4f5c\uff1b\u800c\u4f7f\u7528\u4e00\u822c\u53d8\u91cf\u4f20\u9012\u51fd\u6570\u7684\u53c2\u6570\uff0c\u5f53\u53d1\u751f\u51fd\u6570\u8c03\u7528\u65f6\uff0c\u9700\u8981\u7ed9\u5f62\u53c2\u5206\u914d\u5b58\u50a8\u5355\u5143\uff0c\u5f62\u53c2\u53d8\u91cf\u662f\u5b9e\u53c2\u53d8\u91cf\u7684\u526f\u672c\uff1b\u5982\u679c\u4f20\u9012\u7684\u662f\u5bf9\u8c61\uff0c\u8fd8\u5c06\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002\u56e0\u6b64\uff0c\u5f53\u53c2\u6570\u4f20\u9012\u7684\u6570\u636e\u8f83\u5927\u65f6\uff0c\u7528\u5f15\u7528\u6bd4\u7528\u4e00\u822c\u53d8\u91cf\u4f20\u9012\u53c2\u6570\u7684\u6548\u7387\u548c\u6240\u5360\u7a7a\u95f4\u90fd\u597d\u3002", "\n\uff083\uff09\u4f7f\u7528\u6307\u9488\u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570\u867d\u7136\u4e5f\u80fd\u8fbe\u5230\u4e0e\u4f7f\u7528\u5f15\u7528\u7684\u6548\u679c\uff0c\u4f46\u662f\uff0c\u5728\u88ab\u8c03\u51fd\u6570\u4e2d\u540c\u6837\u8981\u7ed9\u5f62\u53c2\u5206\u914d\u5b58\u50a8\u5355\u5143\uff0c\u4e14\u9700\u8981\u91cd\u590d\u4f7f\u7528\u201d*\u6307\u9488\u53d8\u91cf\u540d\u201d\u7684\u5f62\u5f0f\u8fdb\u884c\u8fd0\u7b97\uff0c\u8fd9\u5f88\u5bb9\u6613\u4ea7\u751f\u9519\u8bef\u4e14\u7a0b\u5e8f\u7684\u9605\u8bfb\u6027\u8f83\u5dee\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u5728\u4e3b\u8c03\u51fd\u6570\u7684\u8c03\u7528\u70b9\u5904\uff0c\u5fc5\u987b\u7528\u53d8\u91cf\u7684\u5730\u5740\u4f5c\u4e3a\u5b9e\u53c2\u3002\u800c\u5f15\u7528\u66f4\u5bb9\u6613\u4f7f\u7528\uff0c\u66f4\u6e05\u6670\u3002", "\n11.\u5728\u4ec0\u4e48\u65f6\u5019\u9700\u8981\u4f7f\u7528\u201c\u5e38\u5f15\u7528\u201d\uff1f\u3000", "\n\u5982\u679c\u65e2\u8981\u5229\u7528\u5f15\u7528\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6548\u7387\uff0c\u53c8\u8981\u4fdd\u62a4\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u6570\u636e\u4e0d\u5728\u51fd\u6570\u4e2d\u88ab\u6539\u53d8\uff0c\u5c31\u5e94\u4f7f\u7528\u5e38\u5f15\u7528\u3002\u5e38\u5f15\u7528\u58f0\u660e\u65b9\u5f0f\uff1aconst \u7c7b\u578b\u6807\u8bc6\u7b26 &\u5f15\u7528\u540d=\u76ee\u6807\u53d8\u91cf\u540d\uff1b", "\n\u4f8b1", "\nint a ;", "\nconst int &ra=a;", "\nra=1; //\u9519\u8bef", "\na=1; //\u6b63\u786e", "\n\u4f8b2", "\nstring foo( );", "\nvoid bar(string & s);", "\n\u90a3\u4e48\u4e0b\u9762\u7684\u8868\u8fbe\u5f0f\u5c06\u662f\u975e\u6cd5\u7684\uff1a", "\nbar(foo( ));", "\nbar(\u201chello world\u201d);", "\n\u539f\u56e0\u5728\u4e8efoo( )\u548c\u201dhello world\u201d\u4e32\u90fd\u4f1a\u4ea7\u751f\u4e00\u4e2a\u4e34\u65f6\u5bf9\u8c61\uff0c\u800c\u5728C++\u4e2d\uff0c\u8fd9\u4e9b\u4e34\u65f6\u5bf9\u8c61\u90fd\u662fconst\u7c7b\u578b\u7684\u3002\u56e0\u6b64\u4e0a\u9762\u7684\u8868\u8fbe\u5f0f\u5c31\u662f\u8bd5\u56fe\u5c06\u4e00\u4e2aconst\u7c7b\u578b\u7684\u5bf9\u8c61\u8f6c\u6362\u4e3a\u975econst\u7c7b\u578b\uff0c\u8fd9\u662f\u975e\u6cd5\u7684\u3002\u5f15\u7528\u578b\u53c2\u6570\u5e94\u8be5\u5728\u80fd\u88ab\u5b9a\u4e49\u4e3aconst\u7684\u60c5\u51b5\u4e0b\uff0c\u5c3d\u91cf\u5b9a\u4e49\u4e3aconst \u3002", "\n12.\u5c06\u201c\u5f15\u7528\u201d\u4f5c\u4e3a\u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b\u7684\u683c\u5f0f\u3001\u597d\u5904\u548c\u9700\u8981\u9075\u5b88\u7684\u89c4\u5219?", "\n\u683c\u5f0f\uff1a\u7c7b\u578b\u6807\u8bc6\u7b26 &\u51fd\u6570\u540d\uff08\u5f62\u53c2\u5217\u8868\u53ca\u7c7b\u578b\u8bf4\u660e\uff09{ //\u51fd\u6570\u4f53 }", "\n\u597d\u5904\uff1a\u5728\u5185\u5b58\u4e2d\u4e0d\u4ea7\u751f\u88ab\u8fd4\u56de\u503c\u7684\u526f\u672c\uff1b\uff08\u6ce8\u610f\uff1a\u6b63\u662f\u56e0\u4e3a\u8fd9\u70b9\u539f\u56e0\uff0c\u6240\u4ee5\u8fd4\u56de\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u5f15\u7528\u662f\u4e0d\u53ef\u53d6\u7684\u3002\u56e0\u4e3a\u968f\u7740\u8be5\u5c40\u90e8\u53d8\u91cf\u751f\u5b58\u671f\u7684\u7ed3\u675f\uff0c\u76f8\u5e94\u7684\u5f15\u7528\u4e5f\u4f1a\u5931\u6548\uff0c\u4ea7\u751fruntime error! \u6ce8\u610f\u4e8b\u9879\uff1a", "\n\uff081\uff09\u4e0d\u80fd\u8fd4\u56de\u5c40\u90e8\u53d8\u91cf\u7684\u5f15\u7528\u3002\u8fd9\u6761\u53ef\u4ee5\u53c2\u7167Effective C++[1]\u7684Item 31\u3002\u4e3b\u8981\u539f\u56e0\u662f\u5c40\u90e8\u53d8\u91cf\u4f1a\u5728\u51fd\u6570\u8fd4\u56de\u540e\u88ab\u9500\u6bc1\uff0c\u56e0\u6b64\u88ab\u8fd4\u56de\u7684\u5f15\u7528\u5c31\u6210\u4e3a\u4e86\u201d\u65e0\u6240\u6307\u201d\u7684\u5f15\u7528\uff0c\u7a0b\u5e8f\u4f1a\u8fdb\u5165\u672a\u77e5\u72b6\u6001\u3002", "\n\uff082\uff09\u4e0d\u80fd\u8fd4\u56de\u51fd\u6570\u5185\u90e8new\u5206\u914d\u7684\u5185\u5b58\u7684\u5f15\u7528\u3002\u8fd9\u6761\u53ef\u4ee5\u53c2\u7167Effective C++[1]\u7684Item 31\u3002\u867d\u7136\u4e0d\u5b58\u5728\u5c40\u90e8\u53d8\u91cf\u7684\u88ab\u52a8\u9500\u6bc1\u95ee\u9898\uff0c\u53ef\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff08\u8fd4\u56de\u51fd\u6570\u5185\u90e8new\u5206\u914d\u5185\u5b58\u7684\u5f15\u7528\uff09\uff0c\u53c8\u9762\u4e34\u5176\u5b83\u5c34\u5c2c\u5c40\u9762\u3002\u4f8b\u5982\uff0c\u88ab\u51fd\u6570\u8fd4\u56de\u7684\u5f15\u7528\u53ea\u662f\u4f5c\u4e3a\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf\u51fa\u73b0\uff0c\u800c\u6ca1\u6709\u88ab\u8d4b\u4e88\u4e00\u4e2a\u5b9e\u9645\u7684\u53d8\u91cf\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5f15\u7528\u6240\u6307\u5411\u7684\u7a7a\u95f4\uff08\u7531new\u5206\u914d\uff09\u5c31\u65e0\u6cd5\u91ca\u653e\uff0c\u9020\u6210memory leak\u3002", "\n\uff083\uff09\u53ef\u4ee5\u8fd4\u56de\u7c7b\u6210\u5458\u7684\u5f15\u7528\uff0c\u4f46\u6700\u597d\u662fconst\u3002\u8fd9\u6761\u539f\u5219\u53ef\u4ee5\u53c2\u7167Effective C++[1]\u7684Item 30\u3002\u4e3b\u8981\u539f\u56e0\u662f\u5f53\u5bf9\u8c61\u7684\u5c5e\u6027\u662f\u4e0e\u67d0\u79cd\u4e1a\u52a1\u89c4\u5219\uff08business rule\uff09\u76f8\u5173\u8054\u7684\u65f6\u5019\uff0c\u5176\u8d4b\u503c\u5e38\u5e38\u4e0e\u67d0\u4e9b\u5176\u5b83\u5c5e\u6027\u6216\u8005\u5bf9\u8c61\u7684\u72b6\u6001\u6709\u5173\uff0c\u56e0\u6b64\u6709\u5fc5\u8981\u5c06\u8d4b\u503c\u64cd\u4f5c\u5c01\u88c5\u5728\u4e00\u4e2a\u4e1a\u52a1\u89c4\u5219\u5f53\u4e2d\u3002\u5982\u679c\u5176\u5b83\u5bf9\u8c61\u53ef\u4ee5\u83b7\u5f97\u8be5\u5c5e\u6027\u7684\u975e\u5e38\u91cf\u5f15\u7528\uff08\u6216\u6307\u9488\uff09\uff0c\u90a3\u4e48\u5bf9\u8be5\u5c5e\u6027\u7684\u5355\u7eaf\u8d4b\u503c\u5c31\u4f1a\u7834\u574f\u4e1a\u52a1\u89c4\u5219\u7684\u5b8c\u6574\u6027\u3002", "\n\uff084\uff09\u6d41\u64cd\u4f5c\u7b26\u91cd\u8f7d\u8fd4\u56de\u503c\u7533\u660e\u4e3a\u201c\u5f15\u7528\u201d\u7684\u4f5c\u7528\uff1a", "\n\u6d41\u64cd\u4f5c\u7b26>\uff0c\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u7b26\u5e38\u5e38\u5e0c\u671b\u88ab\u8fde\u7eed\u4f7f\u7528\uff0c\u4f8b\u5982\uff1acout \n\u4f8b3", "\n\uff03i nclude ", "(1). \u7ed3\u6784\u548c\u8054\u5408\u90fd\u662f\u7531\u591a\u4e2a\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u6210\u5458\u7ec4\u6210, \u4f46\u5728\u4efb\u4f55\u540c\u4e00\u65f6\u523b, \u8054\u5408\u4e2d\u53ea\u5b58\u653e\u4e86\u4e00\u4e2a\u88ab\u9009\u4e2d\u7684\u6210\u5458\uff08\u6240\u6709\u6210\u5458\u5171\u7528\u4e00\u5757\u5730\u5740\u7a7a\u95f4\uff09, \u800c\u7ed3\u6784\u7684\u6240\u6709\u6210\u5458\u90fd\u5b58\u5728\uff08\u4e0d\u540c\u6210\u5458\u7684\u5b58\u653e\u5730\u5740\u4e0d\u540c\uff09\u3002", "\n (2). \u5bf9\u4e8e\u8054\u5408\u7684\u4e0d\u540c\u6210\u5458\u8d4b\u503c, \u5c06\u4f1a\u5bf9\u5176\u5b83\u6210\u5458\u91cd\u5199, \u539f\u6765\u6210\u5458\u7684\u503c\u5c31\u4e0d\u5b58\u5728\u4e86, \u800c\u5bf9\u4e8e\u7ed3\u6784\u7684\u4e0d\u540c\u6210\u5458\u8d4b\u503c\u662f\u4e92\u4e0d\u5f71\u54cd\u7684\u3002", "\n17.\u9762\u5173\u4e8e\u201c\u8054\u5408\u201d\u7684\u9898\u76ee\u7684\u8f93\u51fa\uff1f", "\na)", "\n\uff03i nclude ", "void main()", "\n{", "\na.x[0] = 10;", "\na.x[1] = 1;", "\nprintf(\u201c%d\u201d,a.i);", "\n}", "\n\u7b54\u6848\uff1a266 (\u4f4e\u4f4d\u4f4e\u5730\u5740\uff0c\u9ad8\u4f4d\u9ad8\u5730\u5740\uff0c\u5185\u5b58\u5360\u7528\u60c5\u51b5\u662fOx010A\uff09", "\nb)", "\nmain()", "\n     {", "\n          union{                   /*\u5b9a\u4e49\u4e00\u4e2a\u8054\u5408*/", "\n               int i;", "\n               struct{             /*\u5728\u8054\u5408\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784*/", "\n                    char first;", "\n                    char second;", "\n               }half;", "\n          }number;", "\n          number.i=0\u00d74241;         /*\u8054\u5408\u6210\u5458\u8d4b\u503c*/", "\n          printf(\u201c%c%cn\u201d, number.half.first, mumber.half.second);", "\n          number.half.first=\u2019a';   /*\u8054\u5408\u4e2d\u7ed3\u6784\u6210\u5458\u8d4b\u503c*/", "\n          number.half.second=\u2019b';", "\n          printf(\u201c%xn\u201d, number.i);", "\n          getch();", "\n     }", "\n\u7b54\u6848\uff1a AB   (0\u00d741\u5bf9\u5e94\u2019A',\u662f\u4f4e\u4f4d\uff1bOx42\u5bf9\u5e94\u2019B',\u662f\u9ad8\u4f4d\uff09", "\n       6261 (number.i\u548cnumber.half\u5171\u7528\u4e00\u5757\u5730\u5740\u7a7a\u95f4\uff09", "\n18.\u5173\u8054\u3001\u805a\u5408(Aggregation)\u4ee5\u53ca\u7ec4\u5408(Composition)\u7684\u533a\u522b\uff1f", "\n\u6d89\u53ca\u5230UML\u4e2d\u7684\u4e00\u4e9b\u6982\u5ff5\uff1a\u5173\u8054\u662f\u8868\u793a\u4e24\u4e2a\u7c7b\u7684\u4e00\u822c\u6027\u8054\u7cfb\uff0c\u6bd4\u5982\u201c\u5b66\u751f\u201d\u548c\u201c\u8001\u5e08\u201d\u5c31\u662f\u4e00\u79cd\u5173\u8054\u5173\u7cfb\uff1b\u805a\u5408\u8868\u793ahas-a\u7684\u5173\u7cfb\uff0c\u662f\u4e00\u79cd\u76f8\u5bf9\u677e\u6563\u7684\u5173\u7cfb\uff0c\u805a\u5408\u7c7b\u4e0d\u9700\u8981\u5bf9\u88ab\u805a\u5408\u7c7b\u8d1f\u8d23\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u7528\u7a7a\u7684\u83f1\u5f62\u8868\u793a\u805a\u5408\u5173\u7cfb\uff1a\u4ece\u5b9e\u73b0\u7684\u89d2\u5ea6\u8bb2\uff0c\u805a\u5408\u53ef\u4ee5\u8868\u793a\u4e3a:", "\nclass A {\u2026}  class B { A* a; \u2026..}", "\n\u800c\u7ec4\u5408\u8868\u793acontains-a\u7684\u5173\u7cfb\uff0c\u5173\u8054\u6027\u5f3a\u4e8e\u805a\u5408\uff1a\u7ec4\u5408\u7c7b\u4e0e\u88ab\u7ec4\u5408\u7c7b\u6709\u76f8\u540c\u7684\u751f\u547d\u5468\u671f\uff0c\u7ec4\u5408\u7c7b\u8981\u5bf9\u88ab\u7ec4\u5408\u7c7b\u8d1f\u8d23\uff0c\u91c7\u7528\u5b9e\u5fc3\u7684\u83f1\u5f62\u8868\u793a\u7ec4\u5408\u5173\u7cfb\uff1a\u5b9e\u73b0\u7684\u5f62\u5f0f\u662f:", "\nclass A{\u2026} class B{ A a; \u2026}", "\n\u53c2\u8003\u6587\u7ae0\uff1ahttp://www.cnitblog.com/Lily/archive/2006/02/23/6860.html", "http://www.vckbase.com/document/viewdoc/?id=422", "19.\u9762\u5411\u5bf9\u8c61\u7684\u4e09\u4e2a\u57fa\u672c\u7279\u5f81\uff0c\u5e76\u7b80\u5355\u53d9\u8ff0\u4e4b\uff1f", "\n1. \u5c01\u88c5\uff1a\u5c06\u5ba2\u89c2\u4e8b\u7269\u62bd\u8c61\u6210\u7c7b\uff0c\u6bcf\u4e2a\u7c7b\u5bf9\u81ea\u8eab\u7684\u6570\u636e\u548c\u65b9\u6cd5\u5b9e\u884cprotection(private, protected,public)", "\n2. \u7ee7\u627f\uff1a\u5e7f\u4e49\u7684\u7ee7\u627f\u6709\u4e09\u79cd\u5b9e\u73b0\u5f62\u5f0f\uff1a\u5b9e\u73b0\u7ee7\u627f\uff08\u6307\u4f7f\u7528\u57fa\u7c7b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u800c\u65e0\u9700\u989d\u5916\u7f16\u7801\u7684\u80fd\u529b\uff09\u3001\u53ef\u89c6\u7ee7\u627f\uff08\u5b50\u7a97\u4f53\u4f7f\u7528\u7236\u7a97\u4f53\u7684\u5916\u89c2\u548c\u5b9e\u73b0\u4ee3\u7801\uff09\u3001\u63a5\u53e3\u7ee7\u627f\uff08\u4ec5\u4f7f\u7528\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u5b9e\u73b0\u6ede\u540e\u5230\u5b50\u7c7b\u5b9e\u73b0\uff09\u3002\u524d\u4e24\u79cd\uff08\u7c7b\u7ee7\u627f\uff09\u548c\u540e\u4e00\u79cd\uff08\u5bf9\u8c61\u7ec4\u5408=>\u63a5\u53e3\u7ee7\u627f\u4ee5\u53ca\u7eaf\u865a\u51fd\u6570\uff09\u6784\u6210\u4e86\u529f\u80fd\u590d\u7528\u7684\u4e24\u79cd\u65b9\u5f0f\u3002", "\n3. \u591a\u6001\uff1a\u662f\u5c06\u7236\u5bf9\u8c61\u8bbe\u7f6e\u6210\u4e3a\u548c\u4e00\u4e2a\u6216\u66f4\u591a\u7684\u4ed6\u7684\u5b50\u5bf9\u8c61\u76f8\u7b49\u7684\u6280\u672f\uff0c\u8d4b\u503c\u4e4b\u540e\uff0c\u7236\u5bf9\u8c61\u5c31\u53ef\u4ee5\u6839\u636e\u5f53\u524d\u8d4b\u503c\u7ed9\u5b83\u7684\u5b50\u5bf9\u8c61\u7684\u7279\u6027\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u8fd0\u4f5c\u3002\u7b80\u5355\u7684\u8bf4\uff0c\u5c31\u662f\u4e00\u53e5\u8bdd\uff1a\u5141\u8bb8\u5c06\u5b50\u7c7b\u7c7b\u578b\u7684\u6307\u9488\u8d4b\u503c\u7ed9\u7236\u7c7b\u7c7b\u578b\u7684\u6307\u9488\u3002", "\n20.\u91cd\u8f7d\uff08overload)\u548c\u91cd\u5199(overried\uff0c\u6709\u7684\u4e66\u4e5f\u53eb\u505a\u201c\u8986\u76d6\u201d\uff09\u7684\u533a\u522b\uff1f", "\n\u5e38\u8003\u7684\u9898\u76ee\u3002\u4ece\u5b9a\u4e49\u4e0a\u6765\u8bf4\uff1a", "\n\u91cd\u8f7d\uff1a\u662f\u6307\u5141\u8bb8\u5b58\u5728\u591a\u4e2a\u540c\u540d\u51fd\u6570\uff0c\u800c\u8fd9\u4e9b\u51fd\u6570\u7684\u53c2\u6570\u8868\u4e0d\u540c\uff08\u6216\u8bb8\u53c2\u6570\u4e2a\u6570\u4e0d\u540c\uff0c\u6216\u8bb8\u53c2\u6570\u7c7b\u578b\u4e0d\u540c\uff0c\u6216\u8bb8\u4e24\u8005\u90fd\u4e0d\u540c\uff09\u3002", "\n\u91cd\u5199\uff1a\u662f\u6307\u5b50\u7c7b\u91cd\u65b0\u5b9a\u4e49\u7236\u7c7b\u865a\u51fd\u6570\u7684\u65b9\u6cd5\u3002", "\n\u4ece\u5b9e\u73b0\u539f\u7406\u4e0a\u6765\u8bf4\uff1a", "\n\u91cd\u8f7d\uff1a\u7f16\u8bd1\u5668\u6839\u636e\u51fd\u6570\u4e0d\u540c\u7684\u53c2\u6570\u8868\uff0c\u5bf9\u540c\u540d\u51fd\u6570\u7684\u540d\u79f0\u505a\u4fee\u9970\uff0c\u7136\u540e\u8fd9\u4e9b\u540c\u540d\u51fd\u6570\u5c31\u6210\u4e86\u4e0d\u540c\u7684\u51fd\u6570\uff08\u81f3\u5c11\u5bf9\u4e8e\u7f16\u8bd1\u5668\u6765\u8bf4\u662f\u8fd9\u6837\u7684\uff09\u3002\u5982\uff0c\u6709\u4e24\u4e2a\u540c\u540d\u51fd\u6570\uff1afunction func(p:integer):integer;\u548cfunction func(p:string):integer;\u3002\u90a3\u4e48\u7f16\u8bd1\u5668\u505a\u8fc7\u4fee\u9970\u540e\u7684\u51fd\u6570\u540d\u79f0\u53ef\u80fd\u662f\u8fd9\u6837\u7684\uff1aint_func\u3001str_func\u3002\u5bf9\u4e8e\u8fd9\u4e24\u4e2a\u51fd\u6570\u7684\u8c03\u7528\uff0c\u5728\u7f16\u8bd1\u5668\u95f4\u5c31\u5df2\u7ecf\u786e\u5b9a\u4e86\uff0c\u662f\u9759\u6001\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u4eec\u7684\u5730\u5740\u5728\u7f16\u8bd1\u671f\u5c31\u7ed1\u5b9a\u4e86\uff08\u65e9\u7ed1\u5b9a\uff09\uff0c\u56e0\u6b64\uff0c\u91cd\u8f7d\u548c\u591a\u6001\u65e0\u5173\uff01", "\n\u91cd\u5199\uff1a\u548c\u591a\u6001\u771f\u6b63\u76f8\u5173\u3002\u5f53\u5b50\u7c7b\u91cd\u65b0\u5b9a\u4e49\u4e86\u7236\u7c7b\u7684\u865a\u51fd\u6570\u540e\uff0c\u7236\u7c7b\u6307\u9488\u6839\u636e\u8d4b\u7ed9\u5b83\u7684\u4e0d\u540c\u7684\u5b50\u7c7b\u6307\u9488\uff0c\u52a8\u6001\u7684\u8c03\u7528\u5c5e\u4e8e\u5b50\u7c7b\u7684\u8be5\u51fd\u6570\uff0c\u8fd9\u6837\u7684\u51fd\u6570\u8c03\u7528\u5728\u7f16\u8bd1\u671f\u95f4\u662f\u65e0\u6cd5\u786e\u5b9a\u7684\uff08\u8c03\u7528\u7684\u5b50\u7c7b\u7684\u865a\u51fd\u6570\u7684\u5730\u5740\u65e0\u6cd5\u7ed9\u51fa\uff09\u3002\u56e0\u6b64\uff0c\u8fd9\u6837\u7684\u51fd\u6570\u5730\u5740\u662f\u5728\u8fd0\u884c\u671f\u7ed1\u5b9a\u7684\uff08\u665a\u7ed1\u5b9a\uff09\u3002", "\n21.\u591a\u6001\u7684\u4f5c\u7528\uff1f", "\n\u4e3b\u8981\u662f\u4e24\u4e2a\uff1a", "\n1. \u9690\u85cf\u5b9e\u73b0\u7ec6\u8282\uff0c\u4f7f\u5f97\u4ee3\u7801\u80fd\u591f\u6a21\u5757\u5316\uff1b\u6269\u5c55\u4ee3\u7801\u6a21\u5757\uff0c\u5b9e\u73b0\u4ee3\u7801\u91cd\u7528\uff1b", "\n2. \u63a5\u53e3\u91cd\u7528\uff1a\u4e3a\u4e86\u7c7b\u5728\u7ee7\u627f\u548c\u6d3e\u751f\u7684\u65f6\u5019\uff0c\u4fdd\u8bc1\u4f7f\u7528\u5bb6\u65cf\u4e2d\u4efb\u4e00\u7c7b\u7684\u5b9e\u4f8b\u7684\u67d0\u4e00\u5c5e\u6027\u65f6\u7684\u6b63\u786e\u8c03\u7528\u3002", "\n22.Ado\u4e0eAdo.net\u7684\u76f8\u540c\u4e0e\u4e0d\u540c\uff1f", "\n\u9664\u4e86\u201c\u80fd\u591f\u8ba9\u5e94\u7528\u7a0b\u5e8f\u5904\u7406\u5b58\u50a8\u4e8eDBMS \u4e2d\u7684\u6570\u636e\u201c\u8fd9\u4e00\u57fa\u672c\u76f8\u4f3c\u70b9\u5916\uff0c\u4e24\u8005\u6ca1\u6709\u592a\u591a\u5171\u540c\u4e4b\u5904\u3002\u4f46\u662fAdo\u4f7f\u7528OLE DB \u63a5\u53e3\u5e76\u57fa\u4e8e\u5fae\u8f6f\u7684COM \u6280\u672f\uff0c\u800cADO.NET \u62e5\u6709\u81ea\u5df1\u7684ADO.NET \u63a5\u53e3\u5e76\u4e14\u57fa\u4e8e\u5fae\u8f6f\u7684.NET \u4f53\u7cfb\u67b6\u6784\u3002\u4f17\u6240\u5468\u77e5.NET \u4f53\u7cfb\u4e0d\u540c\u4e8eCOM \u4f53\u7cfb\uff0cADO.NET \u63a5\u53e3\u4e5f\u5c31\u5b8c\u5168\u4e0d\u540c\u4e8eADO\u548cOLE DB \u63a5\u53e3\uff0c\u8fd9\u4e5f\u5c31\u662f\u8bf4ADO.NET \u548cADO\u662f\u4e24\u79cd\u6570\u636e\u8bbf\u95ee\u65b9\u5f0f\u3002ADO.net \u63d0\u4f9b\u5bf9XML \u7684\u652f\u6301\u3002", "\n23.New delete \u4e0emalloc free \u7684\u8054\u7cfb\u4e0e\u533a\u522b?", "\n\u7b54\u6848\uff1a\u90fd\u662f\u5728\u5806(heap)\u4e0a\u8fdb\u884c\u52a8\u6001\u7684\u5185\u5b58\u64cd\u4f5c\u3002\u7528malloc\u51fd\u6570\u9700\u8981\u6307\u5b9a\u5185\u5b58\u5206\u914d\u7684\u5b57\u8282\u6570\u5e76\u4e14\u4e0d\u80fd\u521d\u59cb\u5316\u5bf9\u8c61\uff0cnew \u4f1a\u81ea\u52a8\u8c03\u7528\u5bf9\u8c61\u7684\u6784\u9020\u51fd\u6570\u3002delete \u4f1a\u8c03\u7528\u5bf9\u8c61\u7684destructor\uff0c\u800cfree \u4e0d\u4f1a\u8c03\u7528\u5bf9\u8c61\u7684destructor.", "\n24.#define DOUBLE(x) x+x \uff0ci = 5*DOUBLE(5)\uff1b i \u662f\u591a\u5c11\uff1f", "\n\u7b54\u6848\uff1ai \u4e3a30\u3002", "\n25.\u6709\u54ea\u51e0\u79cd\u60c5\u51b5\u53ea\u80fd\u7528intialization list \u800c\u4e0d\u80fd\u7528assignment?", "\n\u7b54\u6848\uff1a\u5f53\u7c7b\u4e2d\u542b\u6709const\u3001reference \u6210\u5458\u53d8\u91cf\uff1b\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u90fd\u9700\u8981\u521d\u59cb\u5316\u8868\u3002", "\n26. C++\u662f\u4e0d\u662f\u7c7b\u578b\u5b89\u5168\u7684\uff1f", "\n\u7b54\u6848\uff1a\u4e0d\u662f\u3002\u4e24\u4e2a\u4e0d\u540c\u7c7b\u578b\u7684\u6307\u9488\u4e4b\u95f4\u53ef\u4ee5\u5f3a\u5236\u8f6c\u6362\uff08\u7528reinterpret cast)\u3002C#\u662f\u7c7b\u578b\u5b89\u5168\u7684\u3002", "\n27. main \u51fd\u6570\u6267\u884c\u4ee5\u524d\uff0c\u8fd8\u4f1a\u6267\u884c\u4ec0\u4e48\u4ee3\u7801\uff1f", "\n\u7b54\u6848\uff1a\u5168\u5c40\u5bf9\u8c61\u7684\u6784\u9020\u51fd\u6570\u4f1a\u5728main \u51fd\u6570\u4e4b\u524d\u6267\u884c\u3002", "\n28. \u63cf\u8ff0\u5185\u5b58\u5206\u914d\u65b9\u5f0f\u4ee5\u53ca\u5b83\u4eec\u7684\u533a\u522b?", "\n1\uff09 \u4ece\u9759\u6001\u5b58\u50a8\u533a\u57df\u5206\u914d\u3002\u5185\u5b58\u5728\u7a0b\u5e8f\u7f16\u8bd1\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u5206\u914d\u597d\uff0c\u8fd9\u5757\u5185\u5b58\u5728\u7a0b\u5e8f\u7684\u6574\u4e2a\u8fd0\u884c\u671f\u95f4\u90fd\u5b58\u5728\u3002\u4f8b\u5982\u5168\u5c40\u53d8\u91cf\uff0cstatic \u53d8\u91cf\u3002", "\n2\uff09 \u5728\u6808\u4e0a\u521b\u5efa\u3002\u5728\u6267\u884c\u51fd\u6570\u65f6\uff0c\u51fd\u6570\u5185\u5c40\u90e8\u53d8\u91cf\u7684\u5b58\u50a8\u5355\u5143\u90fd\u53ef\u4ee5\u5728\u6808\u4e0a\u521b\u5efa\uff0c\u51fd\u6570\u6267\u884c\u7ed3\u675f\u65f6\u8fd9\u4e9b\u5b58\u50a8\u5355\u5143\u81ea\u52a8\u88ab\u91ca\u653e\u3002\u6808\u5185\u5b58\u5206\u914d\u8fd0\u7b97\u5185\u7f6e\u4e8e\u5904\u7406\u5668\u7684\u6307\u4ee4\u96c6\u3002", "\n3\uff09 \u4ece\u5806\u4e0a\u5206\u914d\uff0c\u4ea6\u79f0\u52a8\u6001\u5185\u5b58\u5206\u914d\u3002\u7a0b\u5e8f\u5728\u8fd0\u884c\u7684\u65f6\u5019\u7528malloc \u6216new \u7533\u8bf7\u4efb\u610f\u591a\u5c11\u7684\u5185\u5b58\uff0c\u7a0b\u5e8f\u5458\u81ea\u5df1\u8d1f\u8d23\u5728\u4f55\u65f6\u7528free \u6216delete \u91ca\u653e\u5185\u5b58\u3002\u52a8\u6001\u5185\u5b58\u7684\u751f\u5b58\u671f\u7531\u7a0b\u5e8f\u5458\u51b3\u5b9a\uff0c\u4f7f\u7528\u975e\u5e38\u7075\u6d3b\uff0c\u4f46\u95ee\u9898\u4e5f\u6700\u591a\u3002", "\n29.struct \u548c class \u7684\u533a\u522b", "\n\u7b54\u6848\uff1astruct \u7684\u6210\u5458\u9ed8\u8ba4\u662f\u516c\u6709\u7684\uff0c\u800c\u7c7b\u7684\u6210\u5458\u9ed8\u8ba4\u662f\u79c1\u6709\u7684\u3002struct \u548c class \u5728\u5176\u4ed6\u65b9\u9762\u662f\u529f\u80fd\u76f8\u5f53\u7684\u3002\u4ece\u611f\u60c5\u4e0a\u8bb2\uff0c\u5927\u591a\u6570\u7684\u5f00\u53d1\u8005\u611f\u5230\u7c7b\u548c\u7ed3\u6784\u6709\u5f88\u5927\u7684\u5dee\u522b\u3002\u611f\u89c9\u4e0a\u7ed3\u6784\u4ec5\u4ec5\u8c61\u4e00\u5806\u7f3a\u4e4f\u5c01\u88c5\u548c\u529f\u80fd\u7684\u5f00\u653e\u7684\u5185\u5b58\u4f4d\uff0c\u800c\u7c7b\u5c31\u8c61\u6d3b\u7684\u5e76\u4e14\u53ef\u9760\u7684\u793e\u4f1a\u6210\u5458\uff0c\u5b83\u6709\u667a\u80fd\u670d\u52a1\uff0c\u6709\u7262\u56fa\u7684\u5c01\u88c5\u5c4f\u969c\u548c\u4e00\u4e2a\u826f\u597d\u5b9a\u4e49\u7684\u63a5\u53e3\u3002\u65e2\u7136\u5927\u591a\u6570\u4eba\u90fd\u8fd9\u4e48\u8ba4\u4e3a\uff0c\u90a3\u4e48\u53ea\u6709\u5728\u4f60\u7684\u7c7b\u6709\u5f88\u5c11\u7684\u65b9\u6cd5\u5e76\u4e14\u6709\u516c\u6709\u6570\u636e\uff08\u8fd9\u79cd\u4e8b\u60c5\u5728\u826f\u597d\u8bbe\u8ba1\u7684\u7cfb\u7edf\u4e2d\u662f\u5b58\u5728\u7684!\uff09\u65f6\uff0c\u4f60\u4e5f\u8bb8\u5e94\u8be5\u4f7f\u7528 struct \u5173\u952e\u5b57\uff0c\u5426\u5219\uff0c\u4f60\u5e94\u8be5\u4f7f\u7528 class \u5173\u952e\u5b57\u3002", "\n30.\u5f53\u4e00\u4e2a\u7c7bA \u4e2d\u6ca1\u6709\u4efb\u4f55\u6210\u5458\u53d8\u91cf\u4e0e\u6210\u5458\u51fd\u6570,\u8fd9\u65f6sizeof(A)\u7684\u503c\u662f\u591a\u5c11\uff1f", "\n\u7b54\u6848\uff1a\u5982\u679c\u4e0d\u662f\u96f6\uff0c\u8bf7\u89e3\u91ca\u4e00\u4e0b\u7f16\u8bd1\u5668\u4e3a\u4ec0\u4e48\u6ca1\u6709\u8ba9\u5b83\u4e3a\u96f6\u3002\uff08Autodesk\uff09\u80af\u5b9a\u4e0d\u662f\u96f6\u3002\u4e3e\u4e2a\u53cd\u4f8b\uff0c\u5982\u679c\u662f\u96f6\u7684\u8bdd\uff0c\u58f0\u660e\u4e00\u4e2aclass A[10]\u5bf9\u8c61\u6570\u7ec4\uff0c\u800c\u6bcf\u4e00\u4e2a\u5bf9\u8c61\u5360\u7528\u7684\u7a7a\u95f4\u662f\u96f6\uff0c\u8fd9\u65f6\u5c31\u6ca1\u529e\u6cd5\u533a\u5206A[0],A[1]\u2026\u4e86\u3002", "\n31. \u57288086 \u6c47\u7f16\u4e0b\uff0c\u903b\u8f91\u5730\u5740\u548c\u7269\u7406\u5730\u5740\u662f\u600e\u6837\u8f6c\u6362\u7684\uff1f\uff08Intel\uff09", "\n\u7b54\u6848\uff1a\u901a\u7528\u5bc4\u5b58\u5668\u7ed9\u51fa\u7684\u5730\u5740\uff0c\u662f\u6bb5\u5185\u504f\u79fb\u5730\u5740\uff0c\u76f8\u5e94\u6bb5\u5bc4\u5b58\u5668\u5730\u5740*10H+\u901a\u7528\u5bc4\u5b58\u5668\u5185\u5730\u5740\uff0c\u5c31\u5f97\u5230\u4e86\u771f\u6b63\u8981\u8bbf\u95ee\u7684\u5730\u5740\u3002", "\n32. \u6bd4\u8f83C++\u4e2d\u76844\u79cd\u7c7b\u578b\u8f6c\u6362\u65b9\u5f0f\uff1f", "\n\u8bf7\u53c2\u8003\uff1ahttp://blog.csdn.net/wfwd/archive/2006/05/30/763785.aspx\uff0c\u91cd\u70b9\u662fstatic_cast, dynamic_cast\u548creinterpret_cast\u7684\u533a\u522b\u548c\u5e94\u7528\u3002", "\ndynamic_casts\u5728\u5e2e\u52a9\u4f60\u6d4f\u89c8\u7ee7\u627f\u5c42\u6b21\u4e0a\u662f\u6709\u9650\u5236\u7684\u3002\u5b83\u4e0d\u80fd\u88ab\u7528\u4e8e\u7f3a\u4e4f\u865a\u51fd\u6570\u7684\u7c7b\u578b\u4e0a\uff0c\u5b83\u88ab\u7528\u4e8e\u5b89\u5168\u5730\u6cbf\u7740\u7c7b\u7684\u7ee7\u627f\u5173\u7cfb\u5411\u4e0b\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\u3002\u5982\u4f60\u60f3\u5728\u6ca1\u6709\u7ee7\u627f\u5173\u7cfb\u7684\u7c7b\u578b\u4e2d\u8fdb\u884c\u8f6c\u6362\uff0c\u4f60\u53ef\u80fd\u60f3\u5230static_cast", "\n33.\u5206\u522b\u5199\u51faBOOL,int,float,\u6307\u9488\u7c7b\u578b\u7684\u53d8\u91cfa \u4e0e\u201c\u96f6\u201d\u7684\u6bd4\u8f83\u8bed\u53e5\u3002", "\n\u7b54\u6848\uff1a", "\nBOOL :    if ( !a ) or if(a)", "\nint :     if ( a == 0)", "\nfloat :   const EXPRESSION EXP = 0.000001", "\n          if ( a -EXP)", "\npointer : if ( a != NULL) or if(a == NULL) ", "34.\u8bf7\u8bf4\u51faconst\u4e0e#define \u76f8\u6bd4\uff0c\u6709\u4f55\u4f18\u70b9\uff1f", "\n\u7b54\u6848\uff1a", "\nConst\u4f5c\u7528\uff1a\u5b9a\u4e49\u5e38\u91cf\u3001\u4fee\u9970\u51fd\u6570\u53c2\u6570\u3001\u4fee\u9970\u51fd\u6570\u8fd4\u56de\u503c\u4e09\u4e2a\u4f5c\u7528\u3002\u88abConst\u4fee\u9970\u7684\u4e1c\u897f\u90fd\u53d7\u5230\u5f3a\u5236\u4fdd\u62a4\uff0c\u53ef\u4ee5\u9884\u9632\u610f\u5916\u7684\u53d8\u52a8\uff0c\u80fd\u63d0\u9ad8\u7a0b\u5e8f\u7684\u5065\u58ee\u6027\u3002", "\n1\uff09 const \u5e38\u91cf\u6709\u6570\u636e\u7c7b\u578b\uff0c\u800c\u5b8f\u5e38\u91cf\u6ca1\u6709\u6570\u636e\u7c7b\u578b\u3002\u7f16\u8bd1\u5668\u53ef\u4ee5\u5bf9\u524d\u8005\u8fdb\u884c\u7c7b\u578b\u5b89\u5168\u68c0\u67e5\u3002\u800c\u5bf9\u540e\u8005\u53ea\u8fdb\u884c\u5b57\u7b26\u66ff\u6362\uff0c\u6ca1\u6709\u7c7b\u578b\u5b89\u5168\u68c0\u67e5\uff0c\u5e76\u4e14\u5728\u5b57\u7b26\u66ff\u6362\u53ef\u80fd\u4f1a\u4ea7\u751f\u610f\u6599\u4e0d\u5230\u7684\u9519\u8bef\u3002", "\n      2\uff09 \u6709\u4e9b\u96c6\u6210\u5316\u7684\u8c03\u8bd5\u5de5\u5177\u53ef\u4ee5\u5bf9const \u5e38\u91cf\u8fdb\u884c\u8c03\u8bd5\uff0c\u4f46\u662f\u4e0d\u80fd\u5bf9\u5b8f\u5e38\u91cf\u8fdb\u884c\u8c03\u8bd5\u3002", "\n35.\u7b80\u8ff0\u6570\u7ec4\u4e0e\u6307\u9488\u7684\u533a\u522b\uff1f", "\n\u6570\u7ec4\u8981\u4e48\u5728\u9759\u6001\u5b58\u50a8\u533a\u88ab\u521b\u5efa\uff08\u5982\u5168\u5c40\u6570\u7ec4\uff09\uff0c\u8981\u4e48\u5728\u6808\u4e0a\u88ab\u521b\u5efa\u3002\u6307\u9488\u53ef\u4ee5\u968f\u65f6\u6307\u5411\u4efb\u610f\u7c7b\u578b\u7684\u5185\u5b58\u5757\u3002", "\n(1)\u4fee\u6539\u5185\u5bb9\u4e0a\u7684\u5dee\u522b", "\nchar a[] = \u201chello\u201d;", "\na[0] = \u2018X\u2019;", "\nchar *p = \u201cworld\u201d; // \u6ce8\u610fp \u6307\u5411\u5e38\u91cf\u5b57\u7b26\u4e32", "\np[0] = \u2018X\u2019; // \u7f16\u8bd1\u5668\u4e0d\u80fd\u53d1\u73b0\u8be5\u9519\u8bef\uff0c\u8fd0\u884c\u65f6\u9519\u8bef", "\n(2) \u7528\u8fd0\u7b97\u7b26sizeof \u53ef\u4ee5\u8ba1\u7b97\u51fa\u6570\u7ec4\u7684\u5bb9\u91cf\uff08\u5b57\u8282\u6570\uff09\u3002sizeof(p),p \u4e3a\u6307\u9488\u5f97\u5230\u7684\u662f\u4e00\u4e2a\u6307\u9488\u53d8\u91cf\u7684\u5b57\u8282\u6570\uff0c\u800c\u4e0d\u662fp \u6240\u6307\u7684\u5185\u5b58\u5bb9\u91cf\u3002C++/C \u8bed\u8a00\u6ca1\u6709\u529e\u6cd5\u77e5\u9053\u6307\u9488\u6240\u6307\u7684\u5185\u5b58\u5bb9\u91cf\uff0c\u9664\u975e\u5728\u7533\u8bf7\u5185\u5b58\u65f6\u8bb0\u4f4f\u5b83\u3002\u6ce8\u610f\u5f53\u6570\u7ec4\u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570\u8fdb\u884c\u4f20\u9012\u65f6\uff0c\u8be5\u6570\u7ec4\u81ea\u52a8\u9000\u5316\u4e3a\u540c\u7c7b\u578b\u7684\u6307\u9488\u3002", "\nchar a[] = \u201chello world\u201d;", "\nchar *p = a;", "\ncout\ncout\n\u8ba1\u7b97\u6570\u7ec4\u548c\u6307\u9488\u7684\u5185\u5b58\u5bb9\u91cf", "\nvoid Func(char a[100])", "\n{", "\ncout\n}", "\n36.\u7c7b\u6210\u5458\u51fd\u6570\u7684\u91cd\u8f7d\u3001\u8986\u76d6\u548c\u9690\u85cf\u533a\u522b\uff1f", "\n\u7b54\u6848\uff1aa.\u6210\u5458\u51fd\u6570\u88ab\u91cd\u8f7d\u7684\u7279\u5f81\uff1a", "\n\uff081\uff09\u76f8\u540c\u7684\u8303\u56f4\uff08\u5728\u540c\u4e00\u4e2a\u7c7b\u4e2d\uff09\uff1b", "\n\uff082\uff09\u51fd\u6570\u540d\u5b57\u76f8\u540c\uff1b", "\n\uff083\uff09\u53c2\u6570\u4e0d\u540c\uff1b", "\n\uff084\uff09virtual \u5173\u952e\u5b57\u53ef\u6709\u53ef\u65e0\u3002", "\nb.\u8986\u76d6\u662f\u6307\u6d3e\u751f\u7c7b\u51fd\u6570\u8986\u76d6\u57fa\u7c7b\u51fd\u6570\uff0c\u7279\u5f81\u662f\uff1a", "\n\uff081\uff09\u4e0d\u540c\u7684\u8303\u56f4\uff08\u5206\u522b\u4f4d\u4e8e\u6d3e\u751f\u7c7b\u4e0e\u57fa\u7c7b\uff09\uff1b", "\n\uff082\uff09\u51fd\u6570\u540d\u5b57\u76f8\u540c\uff1b", "\n\uff083\uff09\u53c2\u6570\u76f8\u540c\uff1b", "\n\uff084\uff09\u57fa\u7c7b\u51fd\u6570\u5fc5\u987b\u6709virtual \u5173\u952e\u5b57\u3002", "\n c.\u201c\u9690\u85cf\u201d\u662f\u6307\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\u5c4f\u853d\u4e86\u4e0e\u5176\u540c\u540d\u7684\u57fa\u7c7b\u51fd\u6570\uff0c\u89c4\u5219\u5982\u4e0b\uff1a", "\n\uff081\uff09\u5982\u679c\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\u4e0e\u57fa\u7c7b\u7684\u51fd\u6570\u540c\u540d\uff0c\u4f46\u662f\u53c2\u6570\u4e0d\u540c\u3002\u6b64\u65f6\uff0c\u4e0d\u8bba\u6709\u65e0virtual\u5173\u952e\u5b57\uff0c\u57fa\u7c7b\u7684\u51fd\u6570\u5c06\u88ab\u9690\u85cf\uff08\u6ce8\u610f\u522b\u4e0e\u91cd\u8f7d\u6df7\u6dc6\uff09\u3002", "\n\uff082\uff09\u5982\u679c\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\u4e0e\u57fa\u7c7b\u7684\u51fd\u6570\u540c\u540d\uff0c\u5e76\u4e14\u53c2\u6570\u4e5f\u76f8\u540c\uff0c\u4f46\u662f\u57fa\u7c7b\u51fd\u6570\u6ca1\u6709virtual \u5173\u952e\u5b57\u3002\u6b64\u65f6\uff0c\u57fa\u7c7b\u7684\u51fd\u6570\u88ab\u9690\u85cf\uff08\u6ce8\u610f\u522b\u4e0e\u8986\u76d6\u6df7\u6dc6\uff09", "\n37.\u6c42\u51fa\u4e24\u4e2a\u6570\u4e2d\u7684\u8f83\u5927\u8fd9", "\nThere are two int variables: a and b, don\u2019t use \u201cif\u201d, \u201c? :\u201d, \u201cswitch\u201dor other judgement statements, find out the biggest one of the two numbers.", "\n\u7b54\u6848\uff1a( ( a + b ) + abs( a \u2013 b ) ) / 2", "\n38.\u5982\u4f55\u6253\u5370\u51fa\u5f53\u524d\u6e90\u6587\u4ef6\u7684\u6587\u4ef6\u540d\u4ee5\u53ca\u6e90\u6587\u4ef6\u7684\u5f53\u524d\u884c\u53f7\uff1f", "\n\u7b54\u6848\uff1a", "\ncout \ncout\n__FILE__\u548c__LINE__\u662f\u7cfb\u7edf\u9884\u5b9a\u4e49\u5b8f\uff0c\u8fd9\u79cd\u5b8f\u5e76\u4e0d\u662f\u5728\u67d0\u4e2a\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\uff0c\u800c\u662f\u7531\u7f16\u8bd1\u5668\u5b9a\u4e49\u7684\u3002", "\n39. main \u4e3b\u51fd\u6570\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u662f\u5426\u53ef\u80fd\u4f1a\u518d\u6267\u884c\u4e00\u6bb5\u4ee3\u7801\uff0c\u7ed9\u51fa\u8bf4\u660e\uff1f", "\n\u7b54\u6848\uff1a\u53ef\u4ee5\uff0c\u53ef\u4ee5\u7528_onexit \u6ce8\u518c\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u4f1a\u5728main \u4e4b\u540e\u6267\u884cint fn1(void), fn2(void), fn3(void), fn4 (void);", "\nvoid main( void )", "\n{", "\nString str(\u201czhanglin\u201d);", "\n_onexit( fn1 );", "\n_onexit( fn2 );", "\n_onexit( fn3 );", "\n_onexit( fn4 );", "\nprintf( \u201cThis is executed first.n\u201d );", "\n}", "\nint fn1()", "\n{", "\nprintf( \u201cnext.n\u201d );", "\nreturn 0;", "\n}", "\nint fn2()", "\n{", "\nprintf( \u201cexecuted \u201d );", "\nreturn 0;", "\n}", "\nint fn3()", "\n{", "\nprintf( \u201cis \u201d );", "\nreturn 0;", "\n}", "\nint fn4()", "\n{", "\nprintf( \u201cThis \u201d );", "\nreturn 0;", "\n}", "\nThe _onexit function is passed the address of a function (func) to be called when the program terminates normally. Successive calls to _onexit create a register of functions that are executed in LIFO (last-in-first-out) order. The functions passed to _onexit cannot take parameters.", "\n40.\u5982\u4f55\u5224\u65ad\u4e00\u6bb5\u7a0b\u5e8f\u662f\u7531C \u7f16\u8bd1\u7a0b\u5e8f\u8fd8\u662f\u7531C++\u7f16\u8bd1\u7a0b\u5e8f\u7f16\u8bd1\u7684\uff1f", "\n\u7b54\u6848\uff1a", "\n#ifdef __cplusplus", "\ncout\n#else", "\ncout\n#endif"], "title": "c++\u7b14\u8bd5\u9762\u8bd5\u5b9d\u51782011\u7248 1-40"},
{"contents": ["\u9898\u76ee\u5199\u4e2a\u51fd\u6570\u4ea4\u6362\u4e24\u4e2a\u6307\u9488\u7684\u503c\u3002", "\u6b63\u89e3\uff1a", "\n#include "], "title": "TCL \u9762\u8bd5\u9898 [\u8f6f\u4ef6\u5de5\u7a0b\u5e08]"},
{"contents": ["1\u3001\u667a\u80fd\u6307\u9488\uff0ccom\u5b9e\u73b0\u7684\u539f\u7406\uff0c", "\n2\u3001printf\uff08\uff09\u53ef\u53d8\u53c2\u6570\u5982\u4f55\u5b9e\u73b0", "\n3\u3001\u6807\u51c6\u6a21\u677f\u5e93vector\u8ffd\u52a0\u6570\u636e\u5982\u4f55\u5b9e\u73b0\u3002\u662f\u5e95\u5c42\u5982\u4f55\u5b9e\u73b0\uff0c\u4e0d\u80fd\u7528\u73b0\u6709\u7684\u4e1c\u4e1c\u3002", "\n4\u3001\u8fd8\u6709\uff0cjava\u7684\u5783\u573e\u6536\u96c6\u673a\u5236\u5982\u4f55\u5b9e\u73b0\u4e3a\u4ec0\u4e48\uff1f\u5982\u679c\u662f\u4f60\u81ea\u5df1\u5b9e\u73b0\u5783\u573e\u6536\u96c6\u673a\u5236\uff0c\u5982\u4f55\u5b9e ", "\u73b0\uff1f \u7528\u4ec0\u4e48\u6570\u636e\u7ed3\u6784\u3002\u8f6c\u6458\u8bf7\u6ce8\u660e\uff1awww.pghome.net", "\n5\u3001\u4e8c\u53c9\u6392\u5e8f\u6811\u548c\u54c8\u5e0c\u8868\u90a3\u4e2a\u67e5\u627e\u6548\u7387\u9ad8\uff0c\u5b9e\u7528\u4e8epda \u3002", "\n6\u3001.net\u7684\u5e95\u5c42\u5b9e\u73b0\u673a\u5236\u3002", "\n7\u3001\u8fdb\u7a0b\u95f4\u901a\u4fe1\u5982\u4f55\u5b9e\u73b0\u3002", "\n8\u3001\u8fd8\u6709\u8fed\u4ee3\u95ee\u9898\uff0c\u4ec0\u4e48\u95ee\u9898\u7528\u8fed\u4ee3\uff0c\u8fed\u4ee3\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u5982\u4f55\u5b9e\u73b0\u7684 \u3002", "\n9\u3001\u5982\u4f55\u4ea4\u6362\u4e24\u4e2a\u53d8\u91cf\uff0c\u4e0d\u80fd\u7528\u4e2d\u95f4\u53d8\u91cf\u3002", "\n10\u3001c\u4e0ec++ static\u51fd\u6570\u7684\u533a\u522b\uff1f\uff1f\uff1f", "\n11\u3001const \u51fd\u6570\u7684\u4f5c\u7528\uff0c\u5982\u4f55\u5b9e\u73b0\u94a9\u5b50\u51fd\u6570\u3002", "\n12\u3001\u4e24\u5c42\u5bb9\u9519\u6280\u672f\u600e\u4e48\u5b9e\u73b0\uff1f", "\n13\u3001\u5199\u51fa\u51fd\u6570\u6307\u9488\uff0c\u51fd\u6570\u8fd4\u56de\u6307\u9488\uff0cconst\u6307\u9488\uff0c\u6307\u5411const\u7684\u6307\u9488\uff0c\u6307\u5411const\u7684const\u6307\u9488", "\n\u3002", "\n14\u3001\u51fd\u6570\u8c03\u7528\u5982\u4f55\u5b9e\u73b0\uff0c\u6ce8\u610f\u4ec0\u4e48\u95ee\u9898\u3002", "\n15\u3001\u6307\u9488\u548c\u5f15\u7528\u7684\u5dee\u522b\uff0c", "\n16\u3001\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u5982\u4f55\u5b9e\u73b0\uff0c\u4ec0\u4e48\u60c5\u51b5\u4e0b\u4f1a\u7528\u5230\u3002"], "title": "\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u9762\u8bd5\u9898\uff08c ,c++)"},
{"contents": ["\u8bbe\u8ba1\u7ebf\u6027\u65b9\u7a0b\u6c42\u89e3\u7a0b\u5e8f\uff0c\u6253\u5370\u7ed3\u679c\uff0c\u8f93\u5165\u683c\u5f0f\u4e3a\uff1a\u6570\u5b57*\u53d8\u91cf1+\u6570\u5b57*\u53d8\u91cf2\u2026..=0\uff0c\u53d8\u91cf\u4e3aa-z\u7684\u5c0f\u5199\u5355\u4e2a\u5b57\u6bcd\u3002", "\u4f8b\u5982\uff1a\u8f93\u51653*a+4*x+2=0, 5*a+3*x+4=0,\u6c42a=?, x=?", "\u5b8c\u6574\u7684\u7a0b\u5e8f\u53ef\u80fd\u662f\u8fd9\u6837", "\nvoid RemoveHead(node **head)", "\n{", "\nif (head == 0 || *head == 0)", "\nreturn", "node * temp = *head;", "\n(*head) = (*head)->next;", "\nfree (temp);", "\n}", "1.\u6570\u636e\u7ed3\u6784\u5b9a\u4e49\uff1a\u901a\u9053\u548c\u5899\u7ec4\u6210\u7684\u8ff7\u5bab\u3002", "\n\u7528\u6570\u7ec4\u5b9a\u4e49,1\u4ee3\u8868\u58990\u4ee3\u8868\u901a\u9053(=_=)", "2.\u5355\u94fe\u8868\u7ed3\u6784\u5b9a\u4e49\uff1a\u8282\u70b9\u5b58\u50a8\u4e00\u4e2a\u6574\u578b\u6570\uff0c\u7ed9\u4ee3\u7801\u3002\u5408\u5e76\u4e8c\u4e2a\u5df2\u7ecf\u6309\u7167\u8be5\u6574\u578b\u6570\u4ece\u5c0f\u5230\u5927\u6392\u597d\u5e8f\u7684\u94fe\u8868\uff0c\u5408\u5e76\u540e\u94fe\u8868\u4e5f\u662f\u540c\u6837\u6392\u5e8f\u597d\u7684\u3002", "\n\u7b80\u5355,\u5927\u6982\u5982\u4e0b,\u4f2a\u7b97\u6cd5", "\nNode* uniteList(Node* first,Node*second)", "\n{", "\nNode*head=NULL;", "\nNode*cur=NULL;", "\nNode*temp=NULL;", "\nwhile (first&&second)", "\n{", "\nif (first->key", "if (head==NULL)", "\n{", "\ncur=temp;", "\nhead=cur;", "\n}", "\nelse", "\n{", "\ncur->next=temp;", "\ncur=temp", "\n}", "}", "\nif (first==NULL)", "\n{", "\ntemp=second;", "\n}", "\nelse", "\ntemp=first;", "\nwhile (temp)", "\n{", "\ncur->next=temp;", "\ntemp=temp->next;", "\n}", "\ncur->next=NULL;", "\nreturn head;", "\n}", "3.\u54ea\u4e9b\u64cd\u4f5c\u4f1a\u9690\u5f0f\u8c03\u7528C++\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff1f", "\n\u6309\u503c\u8fd4\u56de,\u6309\u503c\u4f20\u9012\u53c2\u6570,\u7528\u4e00\u4e2a\u5bf9\u8c61\u521d\u59cb\u5316\u53e6\u4e00\u4e2a\u5bf9\u8c61", "\n4.\u5199\u51fa\u4e00\u4e2a\u51fd\u6570\u7528\u6765\u5224\u65ad\u4e00\u4e2a\u70b9\u5230\u4e00\u4e2a\u5e73\u9762\u7684\u5173\u7cfb\u3002\u7528\u4e00\u4e2a\u70b9\u548c\u6cd5\u5411\u91cf\u6765\u8868\u793a\u5e73\u9762\u3002\u8f93\u5165\u4e00\u4e2a\u70b9\u548c\u4e00\u4e2a\u9762\uff0c\u8fd4\u56de\u8be5\u70b9\u5728\u9762\u7684\u524d\u9762\uff0c\u540e\u9762\uff0c\u8fd8\u662f\u5728\u8fd9\u4e2a\u9762\u4e0a\u3002", "\n\u5bf9\u4e8e\u7b2c4\u9898\uff1a", "\n1.\u8f93\u5165\uff1a", "\n\u4e00\u4e2a\u5e73\u9762\uff1a\u7531\u5e73\u9762\u4e0a\u7684\u4e00\u4e2a\u70b9P0\u548c\u5e73\u9762\u7684\u6cd5\u5411\u91cfV0\u8868\u793a.", "\n\u4e00\u4e2a\u70b9:PX", "\n2.\u7ed3\u679c:\u5224\u65adPX\u548c\u5e73\u9762\u7684\u51e0\u4f55\u5173\u7cfb", "\n3.\u5206\u6790.\u53ef\u4ee5\u4f7f\u7528\u5411\u91cf\u7684\u76f8\u5173\u77e5\u8bc6\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a", "\n3.1 \u8ba1\u7b97\u70b9P0\u5230PX\u7684\u5411\u91cfV = (PX-P0);", "\n3.2 \u7528\u70b9\u4e58\u8ba1\u7b97\u5411\u91cfV0\u548cV\u4e4b\u95f4\u7684\u5939\u89d2: doProduct(V,V0) = A;", "\n3.3 \u5224\u65ad\u5173\u7cfb\uff1a", "\nif (A == 0) ==> \u5939\u89d290\u5ea6 ==> \u70b9\u5728\u9762\u4e0a", "\nif (A > 0) ==> \u5939\u89d2\u5c0f\u4e8e90\u5ea6 ==> \u548c\u6cd5\u5411\u91cf\u4e00\u81f4 ==> \u5728\u5e73\u9762\u7684\u6b63\u9762", "\nif (A  \u5939\u89d2\u5927\u4e8e90\u5ea6 ==> \u548c\u6cd5\u5411\u91cf\u65b9\u5411\u76f8\u53cd ==> \u5728\u5e73\u9762\u7684\u53cd\u9762", "\nPS:\u5728\u56fe\u5f62\u5b66\u4e2d\uff0c\u5e73\u9762\u5206\u6b63\u53cd\u9762\uff0c\u6cd5\u5411\u91cf\u6240\u6307\u7684\u9762\u4e3a\u6b63\u9762\uff0c\u53cd\u4e4b\u662f\u53cd\u9762\u3002", "1\u3001write a program to implement float operation using integer operation on a 32bits processor. c or c++", "\n2\u3001write appropriate functions \u2013void itoa(int n,char *s),with pointer,not array indexing,it would be appreciated very much if you could optimize the code and draw a conclusion regarding time complexity as well as space complexity of both algorithms after comparing between the optimized one and the other. ", "3\u3001write a function \u2013invert(x,p,n) \u2013that return x with the n bits that begin at position p inverted(i.e 1 changed into 0 and 0 changed into 1),leaving the others unchanged.", "\n\u4e0e0001000\u5f02\u6216\uff0c", "\n4\u3001as far as Intel PXA27X and Linux Kernel V2.4,describe briefly the general ways to optimize the top-level application based on MiniGUI or QT and give the examples to explain it better.", "1 What is the fastest way to count the number of ones in a given number represented in a ", "binary form. You can assume that you have infinte run time memory and the response time ", "should be O(1) always. Can you optimize the memory used? ", "\u7b54\u6848\uff1a", "int bits_set( int word )", "\n{", "\nint tmp;", "tmp = (word >> 1) & 033333333333;", "\ntmp = word \u2013 tmp \u2013 ((tmp >> 1) & 033333333333);", "\nreturn (((tmp + (tmp >> 3)) & 030707070707) % 077);", "}", "\n2 What will be the complexity of finding the duplicates in an array? ", "3 You are given a stack of punched cards, each with m rows and n columns. Come up with a ", "algorithm to punch holes so that you can find the missing cards (their sequences) in O(1) ", "time. You can assume that you are looking for a missing card and only one is missing out of", "\nall possibilities. ", "4 Write the binary search function in a C language.", "\n\u4e8c\u5206\u67e5\u627e", "\n5 In the given array, find the subsequence with maximum sum and minimum length.", "\nE.g. [10,25,-23,40,-12,39,7] \u2013 The subsequence [39,7] has sum of 46 with length 2.", "\n\u6700\u5927\u5b50\u5e8f\u5217", "\n6 Reverse a linked list", "\n\u53cd\u8f6c\u94fe\u8868", "\n7 Write an algorithm to compress a text file", "\n\u538b\u7f29", "\n8 How would you implement a BigInt class?", "\n\u5b9e\u73b0\u5927\u6570", "\n9 If you are given x punched cards each with m rows and n", "\ncolumns, can u come up with a number scheme to identify missing", "\npatterns. ", "10 An absolute number is defined as one in which each digit is", "\nstrictly smaller than the digit to its right (if any). For e.g. 123,", "\n478, 369 are all absolute numbers. 205, 485 are not. Write a program", "\nto calculate these.", "\n\u9012\u589e\u6570", "\n1.What is achieved by prefixing the \u2018static\u2019 keyword to a file-level function or file-level variable declaration?", "\n\u5b57\u9762\u7406\u89e3:\u4f7f\u7528static\u4fee\u9970\u8bcd\u4f7f\u51fd\u6570\u548c\u53d8\u91cf\u5177\u6709\u6587\u4ef6\u4f5c\u7528\u57df\u7684\u76ee\u7684\u662f\u4ec0\u4e48?", "\n\u51cf\u5c11\u540d\u5b57\u6c61\u67d3,\u6539\u53d8\u53d8\u91cf\u7684\u5b58\u50a8\u533a\u548c\u751f\u5b58\u671f", "2.Describe the difference between the \u201cIS A\u201d and \u201cHAS A\u201d object relationships. Which is the stronger relationship and why?", "\n\u5b57\u9762\u7406\u89e3:stronger\u5e94\u8be5\u662f\u6307\u529f\u80fd\u66f4\u5f3a\u5927", "\nHAS A;IS A\u5728\u7f16\u8bd1\u671f\u5c31\u51b3\u5b9a\u4e86\u5bf9\u8c61\u7684\u884c\u4e3a,\u4f46\u662fHAS A\u53ef\u4ee5\u5728\u8fd0\u884c\u7684\u65f6\u5019\u6539\u53d8\u201dA\u201d\u6240\u6307\u5411\u7684\u5bf9\u8c61,\u4ece\u800c\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u6539\u53d8\u5176\u884c\u4e3a;HAS A\u53ef\u4ee5\u6709IS A\u63d0\u4f9b\u7684\u6240\u6709\u7279\u6027(\u81f3\u4e8e\u8bbf\u95ee\u6743\u9650,\u5982\u679c\u9700\u8981,\u53ef\u4ee5\u8d4b\u4e88friend\u7684\u5173\u7cfb),\u8303\u4f8b\u5982\u4e0b", "\nclass B", "\n{", "\npublic:", "\nvirtual int Foo();", "\n};", "\n\u7ee7\u627f:", "\nclass D:public B", "\n{", "\n\u2026\u2026", "\n};", "\n\u7ec4\u5408:", "\nclass D", "\n{", "\nB*pB;//\u5728\u8fd9\u91ccB\u53ef\u4ee5\u6307\u5411\u4efb\u4f55\u4e00\u4e2aD\u7684\u6d3e\u751f\u7c7b", "\n};", "\n\u9762\u5411\u5bf9\u8c61\u7684\u8bbe\u8ba1\u539f\u5219\u662f\u4f18\u5148\u4f7f\u7528\u7ec4\u5408.", "\n3.Java & C# support interfaces directly with the \u201cinterface\u201d keyword.", "\nC++ does not have an \u201cinterface\u201d keyword.", "\nHow do you create an interface in C++?", "\nWhere/when is the use of interfaces especially helpful?", "\n\u8fd9\u4e2a\u662f\u62bd\u8c61\u7c7b,\u5e94\u8be5\u6ca1\u4ec0\u4e48\u5f02\u8bae\u4e86", "4.If a program requires a large number of execution contexts what can be done to minimise thread scheduling overhead?", "\n\u961f\u5217,COM\u91cc\u9762\u5c31\u662f\u5bf9\u8bf7\u6c42\u961f\u5217\u8fdb\u884c\u6392\u961f\u6765\u5e94\u5bf9\u201d\u5ba2\u6237\u7aef\u201d\u7684\u8bf7\u6c42\u7684", "\n\u5c06\u8fd9\u4e9b\u4e0a\u4e0b\u6587\u6d89\u53ca\u7684\u5c40\u90e8\u53d8\u91cf\u8bbe\u8ba1\u6210\u6570\u636e\u7ed3\u6784\uff0c\u7136\u540e\u5728\u7ebf\u7a0b\u5185\u90e8\u5b9a\u4e49\u4e00\u4e2a\u9759\u6001\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5728while(1)\u5faa\u73af\u5185\u90e8\u4f7f\u7528\u6570\u636e\u7ed3\u6784\u6307\u9488\u6765\u8bbf\u95ee\u4e0a\u9762\u7684\u6570\u636e\u7ed3\u6784\u5b9e\u4f53\uff0e", "\n5. What does it mean to say that a function is reentrant?", "\nWhat are some of the ways of achieving reentrancy?", "\n1\uff09\u4ec0\u4e48\u662f\u53ef\u91cd\u5165\u6027\uff1f", "\n\u53ef\u91cd\u5165\uff08reentrant\uff09\u51fd\u6570\u53ef\u4ee5\u7531\u591a\u4e8e\u4e00\u4e2a\u4efb\u52a1\u5e76\u53d1\u4f7f\u7528\uff0c\u800c\u4e0d\u5fc5\u62c5\u5fc3\u6570\u636e\u9519\u8bef\u3002\u76f8\u53cd\uff0c\u4e0d\u53ef\u91cd\u5165\uff08non-reentrant\uff09\u51fd\u6570\u4e0d\u80fd\u7531\u8d85\u8fc7\u4e00\u4e2a\u4efb\u52a1\u6240\u5171\u4eab\uff0c\u9664\u975e\u80fd\u786e\u4fdd\u51fd\u6570\u7684\u4e92\u65a5\uff08\u6216\u8005\u4f7f\u7528\u4fe1\u53f7\u91cf\uff0c\u6216\u8005\u5728\u4ee3\u7801\u7684\u5173\u952e\u90e8\u5206\u7981\u7528\u4e2d\u65ad\uff09\u3002\u53ef\u91cd\u5165\u51fd\u6570\u53ef\u4ee5\u5728\u4efb\u610f\u65f6\u523b\u88ab\u4e2d\u65ad\uff0c\u7a0d\u540e\u518d\u7ee7\u7eed\u8fd0\u884c\uff0c\u4e0d\u4f1a\u4e22\u5931\u6570\u636e\u3002\u53ef\u91cd\u5165\u51fd\u6570\u8981\u4e48\u4f7f\u7528\u672c\u5730\u53d8\u91cf\uff0c\u8981\u4e48\u5728\u4f7f\u7528\u5168\u5c40\u53d8\u91cf\u65f6\u4fdd\u62a4\u81ea\u5df1\u7684\u6570\u636e\u3002", "2\uff09\u53ef\u91cd\u5165\u51fd\u6570\uff1a", "\n\u4e0d\u4e3a\u8fde\u7eed\u7684\u8c03\u7528\u6301\u6709\u9759\u6001\u6570\u636e\u3002", "\n\u4e0d\u8fd4\u56de\u6307\u5411\u9759\u6001\u6570\u636e\u7684\u6307\u9488\uff1b\u6240\u6709\u6570\u636e\u90fd\u7531\u51fd\u6570\u7684\u8c03\u7528\u8005\u63d0\u4f9b\u3002", "\n\u4f7f\u7528\u672c\u5730\u6570\u636e\uff0c\u6216\u8005\u901a\u8fc7\u5236\u4f5c\u5168\u5c40\u6570\u636e\u7684\u672c\u5730\u62f7\u8d1d\u6765\u4fdd\u62a4\u5168\u5c40\u6570\u636e\u3002", "\n\u5982\u679c\u5fc5\u987b\u8bbf\u95ee\u5168\u5c40\u53d8\u91cf\uff0c\u8bb0\u4f4f\u5229\u7528\u4e92\u65a5\u4fe1\u53f7\u91cf\u6765\u4fdd\u62a4\u5168\u5c40\u53d8\u91cf\u3002", "\n\u7edd\u4e0d\u8c03\u7528\u4efb\u4f55\u4e0d\u53ef\u91cd\u5165\u51fd\u6570\u3002\uff1b", "1.\u7528\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5b9e\u73b0\u51fd\u6570int strcmp(char *p1,char *p2)", "\nint ret;", "\n//while( *p1 && *p2 && !(ret=*p1-*p2) )", "\nwhile(!(ret=*p1-*p2) && *p1 && *p2)", "\n{", "\np1++;p2++;", "\n}", "\nreturn ret;", "\nint strcmp(const char * cs,const char * ct)", "\n{", "\nregister signed char __res;", "while (1) {", "\nif ((__res = *cs \u2013 *ct++) != 0 || !*cs++)", "\nbreak;", "\n}", "return __res;", "\n}", "\n2.a.\u8bf7\u5b9a\u4e49\u4e00\u4e2a\u6307\u5411\u6b64\u51fd\u6570\u7684\u6307\u9488 int test(char *p1,int nTestCount)", "\nb.\u58f0\u660e\u6b64\u6307\u9488\u7684\u6570\u7ec4\uff0c\u5305\u542b10\u4e2a\u5143\u7d20\u3002", "\nc.\u7ed9\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u8d4b\u503c\uff0c\u4f7f\u5176\u6307\u5411test.", "\nd.\u5199\u51fa\u8c03\u7528\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u6267\u884ctest\u64cd\u4f5c\u5b9e\u4f8b\u7684\u8bed\u53e5\u3002", "\na. int (*func) ( char*, int );", "\nb. func myFunc[10];", "\nc. myFunc[0] = test;", "\nd. char* p;", "\nint n;", "\n(*myFunc[0])( p, n );", "\n3.\u8868\u8ff0\u5e94\u5728\u4ec0\u4e48\u60c5\u51b5\u4e0b\u4f7f\u7528extern\u201dC\u201d\u58f0\u660e\u3002", "\n\u5982void foo( int x, int y )", "\n\u5728C\u7f16\u8bd1\u4e0b\u4f1a\u5c06\u51fd\u6570\u7f16\u8bd1\u4e3a_foo,\u800cC++\u4e0b\u4f1a\u7f16\u8bd1\u4e3a_foo_int_int(\u901a\u5e38\u5e94\u8be5\u662f\u8fd9\u6837)", "\n\u5728\u8c03\u7528\u7ea6\u5b9a\u4e0a\u8981\u7279\u522b\u6ce8\u610f,\u4f60\u7684\u51fd\u6570\u540d\u5b57\u770b\u662f\u5426\u88ab\u6539\u7f16\u8fc7\u4e86,\u5728\u8c03\u7528\u65f6\u5e94\u4fdd\u6301\u4e0e\u4f60\u7684\u58f0\u660e\u51fd\u6570\u7684\u65b9", "\n\u5f0f\u4e00\u6837", "\n\u5982:", "\ntest.h", "\nextern \u201cC\u201d int add( int x, int y);", "\ntest.cpp", "\nint add( int x, int y)", "\n{", "\nreturn x+y;", "\n}", "\u8c03\u7528\u65f6:", "\n#include\u201dtest.h\u201d", "\nextern int add( int x, int y );", "\nvoid main()", "\n{", "\nint sum = add(2,3); //\u51fa\u9519,\u627e\u4e0d\u5230_add_int_int\u7684\u51fd\u6570,\u52a0\u8f7d\u7684test.obj\u91cc\u7684\u51fd\u6570\u540d\u4e3a_add", "\nprintf( \u201c%d\\n\u201d, sum );", "\n}", "\u6539\u6210\u8fd9\u6837", "\nextern \u201cC\u201d", "\n{", "\ninclude\u201dtes.h\u201d", "\n}", "extern int add( int x, int y );", "\nvoid main()", "\n{", "\nint sum = add(2,3); //OK", "\nprintf( \u201c%d\\n\u201d, sum );", "\n}", "4.\u5bf9\u5982\u4e0b\u53cc\u94fe\u8868", "\ntypedef struct _node", "\n{", "\nint iData;", "\nstruct _node *pPrev;", "\nstruct _node *pNext;", "\n}node;", "\na.\u8bf7\u5199\u51fa\u4ee3\u7801\uff0c\u5c06node*n\u63d2\u5165\u5230node*p\u540e\u3002", "\nb.\u5982\u679c\u591a\u7ebf\u7a0b\u540c\u65f6\u8bbf\u95ee\u6b64\u94fe\u8868\uff0c\u9700\u8981\u52a0\u9501\uff0c\u8bf7\u8bf4\u660e\u4ee5\u4e0b\u6b65\u9aa4", "\n(a)\u7533\u8bf7\u5185\u5b58\u7ed9n.", "\n(b)N\u6570\u636e\u521d\u59cb\u5316\u3002", "\n(c)\u63d2\u5165", "\n\u6ce8\u610f\u52a0\u9501\u548c\u89e3\u9501\u7684\u65f6\u673a\u3002", "\nnode* insert(node* p, node* n)", "\n{", "\nif ((p == NULL) || (n == NULL))", "\n{", "\nreturn NULL;", "\n}", "if (p->pNext != NULL)", "\n{", "\np->pNext->pPrev = n;", "\n}", "n->pPrev = p;", "\nn->pNext = p->pNext;", "\np->pNext = n;", "return n;", "\n}", "b", "\u63d2\u5165\u4e4b\u524d\u52a0\u9501\uff0c\u63d2\u5165\u4e4b\u540e\u89e3\u9501", "\n5.\u7b80\u8ff0C\u8bed\u8a00\u4e2d\u53ef\u53d8\u957f\u53c2\u6570\u7684\u5b9e\u73b0\u539f\u7406\uff0c\u5982int sprintf(char *buf,const char*format,..)", "\nsprintf(char* pbuf,char* format \u2026)", "\n{", "\nint count ;", "\nva_list argList;", "\nva_start(argList,0)", "\nint type = parser(format);", "long x ,y ;", "\nwhile( type\n{", "\nswitch(type)", "\n{", "\ncase 0:", "\nx = va_arg(argList,int);", "\nbreak;", "\ncase 1:", "\ny= va_arg(argList,long);", "\nbreak;", "\ndefault:", "\n...", "\n}", "\nva_end(&argList);", "\n}", "\n6.Big endian\u548cLittle endian\u7684\u5b9a\u4e49\u662f\u4ec0\u4e48\uff1f\u8bf7\u7528\u6700\u7b80\u5355\u65b9\u6cd5\uff08\u7a0b\u5e8f\u5b9e\u73b0\uff09\u5224\u65ad\u67d0\u4e2aCPU\u7684\u7c7b\u578b\u3002 \u8f6c\u8d34\u8bf7\u6ce8\u660e\uff1a http://www.pghome.net/", "\nbig\u7684\u597d\u50cf\u5c31\u662f\u4f4e\u5730\u5740\u5b58\u653e\u6700\u9ad8\u6709\u6548\u5b57\u8282,\u800clittle\u7684\u5c31\u662f\u4f4e\u5730\u5740\u5b58\u5165\u6700\u4f4e\u6709\u6548\u5b57\u8282(\u5982X86)", "\n\u5b9e\u73b0\u5417\u5c31\u7528\u6808\u53bb\u6a21\u62df\u4e0b\u5c31\u5f97\u4e86\u5427", "\n7.\u5b50\u7c7bB\u91cd\u5199\u7236\u7c7bA\u7684\u4e00\u4e2a\u6210\u5458\u51fd\u6570f,\u521b\u5efa\u4e00\u4e2a\u5b50\u7c7b\u5bf9\u8c61C\uff0c\u5982\u679c\u4f7f\u7528C\u8c03\u7528\u7236\u7c7bA\u7684\u6210\u5458\u51fd\u6570\u3002", "\nC::A::f();", "\n8.C++\u4e2dpublic,protect,private\u6210\u5458\u51fd\u6570\u7f16\u8bd1\u540e\u7684\u53ef\u6267\u884c\u4ee3\u7801\u6709\u4f55\u533a\u522b\uff1f", "\n\u6210\u5458\u51fd\u6570\u88ab\u653e\u5728\u53ef\u6267\u884c\u6587\u4ef6\u7684\u4e0d\u540c\u7684\u8282(section)\u4e2d\u3002", "\n9.\u5bf9\u5982\u4e0b\u5b9a\u4e49", "\ntypedef struct", "\n{", "\nint iData;", "\nint iAge;", "\nchar*pName;", "\n}STUDENT;", "\nSTUDENT arrStudent[10];", "\n\u8bf7\u5199\u51fa\u4f7f\u7528qsort\u5bf9arrStrudent\u6570\u7ec4\u6309iAge\u7531\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u6392\u5e8f\u3002\u6807\u51c6\u51fd\u6570qsort\u58f0\u660e\u5982\u4e0b\uff1a", "\nvoid qsort(void *base,size_t num,size_t width,int(_cdecl*compare)(const void *elem1,const void *elem2));", "\nqsort(arrStudent, sizeof(arrStudent)/sizeof(STUDENT), sizeof(STUDENT), compare);", "compare(const void* elem1, const void* elem2)", "\n{", "\nSTUDENT *p1 = reinterpret_cast", "\u7f16\u8bd1\u5668\u4f1a\u5c06\u8fd4\u56de\u503c\u538b\u5165\u6808\u4e2d\uff0c\u51fd\u6570\u8fd4\u56de\u540e\u53c8\u7236\u51fd\u6570\u627e\u5230\u6808\u4f4d\u7f6e\uff0c\u5e76\u53d6\u51fa\u8be5\u503c\uff0c\u7136\u540e\u6539\u53d8\u6808\u9876\u6307\u9488"], "title": "\u516c\u53f8\u7684\u7b14\u8bd5\u9898 [\u8f6f\u4ef6\u5de5\u7a0b\u5e08]"},
{"contents": ["\u8bf7\u7528C++\u5199\u4e00\u4e2a\u5c0f\u7a0b\u5e8f\uff0c\u5148\u8bf7\u7528\u6237\u8f93\u5165\u4e09\u4e2a\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u628a\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\u7684\u6240\u6709\u7684\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e32\u66ff\u6362\u6210\u7b2c\u4e09\u4e2a\u5b57\u7b26\u4e32\uff0c\u6700\u540e\u8f93\u51fa\u65b0\u7684\u5b57\u7b26\u4e32\u3002", "\u5443\uff0c\u53ef\u4ee5\u7528boost::regex\u5417\uff1f\u51e0\u4e4e\u6ca1\u4ee3\u7801 ", "cin >> s1 >> s2 >> s3;", "\ncout \n\t\t  \t\t"], "title": "\u4e00\u9053C++\u7b14\u8bd5\u9898(\u542b\u53c2\u8003\u7b54\u6848)"},
{"contents": ["1.\u4e00\u7fa4\u4eba\u56f4\u6210\u4e00\u5708\uff0c123\u7684\u62a5\u6570\uff0c\u62a53\u8005\u51fa\u5217\uff0c\u6c42\u6700\u540e\u4e00\u4e2a\u4eba\u3002", "\n2.\u5229\u7528\u94fe\u8868\u5b9e\u73b0\u5c06\u4e24\u4e2a\u6709\u5e8f\u961f\u5217A\u548cB\u5408\u5e76\u5230\u6709\u5e8f\u961f\u5217H\u4e2d\uff0c\u4e0d\u51c6\u589e\u52a0\u5176\u4ed6\u7a7a\u95f4\u3002", "\n\u8bf7\u63d0\u4f9b\u5168\u4e00\u70b9\u7684\u7a0b\u5e8f", "\u7b2c\u4e00\u9898\uff1a ", "// kickout.cpp : Defines the entry point for the console application.", "\n//", "#include \u201cstdafx.h\u201d", "\n#include \u201cmalloc.h\u201d", "\n#include \u201cstdio.h\u201d", "int main()", "\n{", "\nint m,n;", "\nint kickouts = 0;", "\nint *p = NULL;", "\nint i ,j;", "\ni=j=0;", "\nprintf(\u201cPlease input m,n:\u201d);", "\nscanf(\u201c%d,%d\u201d,&m,&n);", "while(n\n{", "\nprintf(\"n doen't less 0 , retry n:\");", "\nscanf(\"%d\",&n);", "\n}", "p=(int*)malloc(m*sizeof(int));", "\nfor(i=0;i", "\np[i]=1;", "\ni = 0;", "\nwhile(1)", "\n{", "\ni = i%m;", "\nif(p[i++]) j++;", "\nif(j == n)", "\n{", "\np[i-1]=0;", "\nj = 0;", "\nkickouts++;", "\n}", "\nif(kickouts == m-1)", "\nbreak;", "\n}", "\nfor(i = 0;i", "\nif(p[i]) printf(\"%d\\n\",i+1);", "\nreturn 0;", "\n}", "2\u3001\u5347\u5e8f\u8fd8\u662f\u964d\u5e8f\uff1f", "\n\u4ee5\u5347\u5e8f\u4e3a\u4f8b\uff1a", "\nwhile(a != NULL && b!= NULL)", "\n{", "\nif (a->data data)", "\n{", "\nh->data = a->data;", "\na = a->next;", "\n}", "\nelse if (a->data == b->data)", "\n{", "\nh->data = a->data;", "\na = a->next;", "\nb = b->next;", "\n}", "\nelse", "\n{", "\nh->data = b->data;", "\nb = b->next", "\n}", "\nh = h->next;", "\n}", "\nif (a == NULL)", "\n{", "\nwhile (b != NULL)", "\n{", "\nh->data = b->data;", "\nh = h->next;", "\nb = b->next;", "\n}", "\n}", "\nelse", "\n{", "\nwhile(a != NULL)", "\n{", "\nh->data = a->next;", "\nh = h->next;", "\na = a->next;", "\n}", "\n}"], "title": "c/c++\u67d0\u5927\u516c\u53f8\u7684\u4e24\u9053\u7b14\u8bd5\u9898(\u542b\u53c2\u8003\u7b54\u6848 )"},
{"contents": ["\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u5c0632\u4f4d\u6574\u578b\u53c2\u6570\u5206\u89e3\u4e3a\u4e00\u4e2a4\u5b57\u8282\u6570\u7ec4,\u8981\u6c42\u9ad8\u4f4d\u5728\u524d,\u4f4e\u4f4d\u5728\u540e,\u6bd4\u5982\u5c060XOOFEOOAC\u5206\u89e3\u4e3a\u6570\u7ec4OXOO,OXFE,OXOO,OXAC(\u6ce8\u91ca:OX\u4e0d\u662f\u503c,\u8868\u793a16\u8fdb\u5236\u6570)", "int i = 0X00FE00AC;", "\nchar c[20]={0};", "\nchar t[20]=\u201d0\u00d700000000\u2033;", "\nitoa(i,c,16);", "\nstrcpy(t+strlen(t)-strlen(c),c);", "\ncout\ncout\n\t\t  \t\t"], "title": "\u6700\u65b0 c/c++\u7b14\u8bd5\u9898(\u542b\u53c2\u8003\u7b54\u6848)"},
{"contents": ["main(){", "\nint count=0;", "\nint m=9999;", "\nwhile(m){", "\ncount++; ", "m=m&(m-1);", "\n}", "\nprintf(count);", "\n}", "\n\u95eecount\u8f93\u51fa\u4e3a\u591a\u5c11\uff1f", "\u628a m \u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236\uff0c \u8f93\u51fa\u4e3a\u8fd9\u4e2a\u4e8c\u8fdb\u5236\u4e2d 1 \u7684\u4e2a\u6570"], "title": "c/c++\u7b14\u8bd5\u9898(\u542b\u53c2\u8003\u7b54\u6848 )"},
{"contents": ["1.\u5199\u4e00\u4e2a\u51fd\u6570   int   strcmp(const   str   *str1,const   str   *str2)", "\n  \u8981\u6c42\uff1a\u5982\u679cstr1=str2   return   0;\u5982\u679cstr1>str2   \u8fd4\u56de\u4e00\u4e2a\u6b63\u6570;\u5982\u679cstr1", "\n  \u4e0d\u80fd\u8c03\u7528\u5176\u4ed6\u51fd\u6570\u3002\u3002\u3002\u3002\u3002   ", "  2.class   A{", "\n        void   P1(){cout\n        void   P2(){cout\n  };", "\n        class   B:public   A{", "\n        void   P1(){cout\n        virtual   void   P2(){cout\n  }   ", "  ..........", "\n  A*cl=NULL;", "\n  cl=new   A;", "\n  A->P1();", "\n  A->P2();", "\n  delete   cl;", "\n  cl=NULL;   ", "  cl=new   B;", "\n  A->P1();", "\n  A->P2();", "\n  delete   cl;", "\n  cl=NULL;", "\n  \u2026\u2026\u2026.   ", "  \u5199\u51fa\u8fd0\u884c\u7ed3\u679c;   ", "  3.\u8bf4\u4e00\u8bf4const\u7684\u7528\u5904\u4ee5\u53ca\u597d\u5904?   ", "  4.\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff1b\u5e76\u5c01\u88c5\u6210\u4e00\u4e2adll", "\n  int   ULCompare(lPSTR   str1,LPSTR   str2,BOOL   m)\uff1bURL\u5730\u5740\u5b57\u7b26\u4e32\u6bd4\u8f83   .", "  5.\u5c31\u662f\u95ee\u95ee\u4f60\u5bf9ASCII,UNICOD,\u8fd8\u6709\u4e00\u4e2a\u79cd\u4ec0\u4e48\u7f16\u7801\u54df\uff0c\u7684\u7279\u70b9\u4ee5\u53ca\u4f18\u70b9\uff1b   ", "  6.\u6b63\u5219\u8868\u8fbe\u5f0f\u505a\u5168\u6587\u641c\u7d22\u7684\u597d\u5904\u3002   ", "  7.\u8bf4\u8bf4B\u6811\u7684\u4f18\u70b9\u4ee5\u53ca\u7528\u6cd5\u3002   "], "title": "\u676d\u5dde-\u6167\u8f6f\u7f51\u7edc\u79d1\u6280\u6709\u9650\u516c\u53f8"},
{"contents": ["1.\u5206\u522b\u5199\u51faBOOL,int,float,\u6307\u9488\u7c7b\u578b\u7684\u53d8\u91cfa \u4e0e\u201c\u96f6\u201d\u7684\u6bd4\u8f83\u8bed\u53e5\u3002", "\n\u7b54\u6848\uff1a", "\nBOOL :    if ( !a ) or if(a)", "\nint :     if ( a == 0)", "\nfloat :   const EXPRESSION EXP = 0.000001", "\n          if ( a -EXP)", "\npointer : if ( a != NULL) or if(a == NULL) ", "2.\u8bf7\u8bf4\u51faconst\u4e0e#define \u76f8\u6bd4\uff0c\u6709\u4f55\u4f18\u70b9\uff1f", "\n\u7b54\u6848\uff1a1\uff09 const \u5e38\u91cf\u6709\u6570\u636e\u7c7b\u578b\uff0c\u800c\u5b8f\u5e38\u91cf\u6ca1\u6709\u6570\u636e\u7c7b\u578b\u3002\u7f16\u8bd1\u5668\u53ef\u4ee5\u5bf9\u524d\u8005\u8fdb\u884c\u7c7b\u578b\u5b89\u5168\u68c0\u67e5\u3002\u800c\u5bf9\u540e\u8005\u53ea\u8fdb\u884c\u5b57\u7b26\u66ff\u6362\uff0c\u6ca1\u6709\u7c7b\u578b\u5b89\u5168\u68c0\u67e5\uff0c\u5e76\u4e14\u5728\u5b57\u7b26\u66ff\u6362\u53ef\u80fd\u4f1a\u4ea7\u751f\u610f\u6599\u4e0d\u5230\u7684\u9519\u8bef\u3002", "\n      2\uff09 \u6709\u4e9b\u96c6\u6210\u5316\u7684\u8c03\u8bd5\u5de5\u5177\u53ef\u4ee5\u5bf9const \u5e38\u91cf\u8fdb\u884c\u8c03\u8bd5\uff0c\u4f46\u662f\u4e0d\u80fd\u5bf9\u5b8f\u5e38\u91cf\u8fdb\u884c\u8c03\u8bd5\u3002 ", "3.\u7b80\u8ff0\u6570\u7ec4\u4e0e\u6307\u9488\u7684\u533a\u522b\uff1f", "\n\u6570\u7ec4\u8981\u4e48\u5728\u9759\u6001\u5b58\u50a8\u533a\u88ab\u521b\u5efa\uff08\u5982\u5168\u5c40\u6570\u7ec4\uff09\uff0c\u8981\u4e48\u5728\u6808\u4e0a\u88ab\u521b\u5efa\u3002\u6307\u9488\u53ef\u4ee5\u968f\u65f6\u6307\u5411\u4efb\u610f\u7c7b\u578b\u7684\u5185\u5b58\u5757\u3002", "\n(1)\u4fee\u6539\u5185\u5bb9\u4e0a\u7684\u5dee\u522b", "\nchar a[] = \u201chello\u201d;", "\na[0] = \u2018X\u2019;", "\nchar *p = \u201cworld\u201d; // \u6ce8\u610fp \u6307\u5411\u5e38\u91cf\u5b57\u7b26\u4e32", "\np[0] = \u2018X\u2019; // \u7f16\u8bd1\u5668\u4e0d\u80fd\u53d1\u73b0\u8be5\u9519\u8bef\uff0c\u8fd0\u884c\u65f6\u9519\u8bef", "\n(2) \u7528\u8fd0\u7b97\u7b26sizeof \u53ef\u4ee5\u8ba1\u7b97\u51fa\u6570\u7ec4\u7684\u5bb9\u91cf\uff08\u5b57\u8282\u6570\uff09\u3002sizeof(p),p \u4e3a\u6307\u9488\u5f97\u5230\u7684\u662f\u4e00\u4e2a\u6307\u9488\u53d8\u91cf\u7684\u5b57\u8282\u6570\uff0c\u800c\u4e0d\u662fp \u6240\u6307\u7684\u5185\u5b58\u5bb9\u91cf\u3002C++/C \u8bed\u8a00\u6ca1\u6709\u529e\u6cd5\u77e5\u9053\u6307\u9488\u6240\u6307\u7684\u5185\u5b58\u5bb9\u91cf\uff0c\u9664\u975e\u5728\u7533\u8bf7\u5185\u5b58\u65f6\u8bb0\u4f4f\u5b83\u3002\u6ce8\u610f\u5f53\u6570\u7ec4\u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570\u8fdb\u884c\u4f20\u9012\u65f6\uff0c\u8be5\u6570\u7ec4\u81ea\u52a8\u9000\u5316\u4e3a\u540c\u7c7b\u578b\u7684\u6307\u9488\u3002", "\nchar a[] = \u201chello world\u201d;", "\nchar *p = a;", "\ncout\ncout\n\u8ba1\u7b97\u6570\u7ec4\u548c\u6307\u9488\u7684\u5185\u5b58\u5bb9\u91cf", "\nvoid Func(char a[100])", "\n{", "\ncout\n} ", "4.\u7c7b\u6210\u5458\u51fd\u6570\u7684\u91cd\u8f7d\u3001\u8986\u76d6\u548c\u9690\u85cf\u533a\u522b\uff1f", "\n\u7b54\u6848\uff1a", "\na.\u6210\u5458\u51fd\u6570\u88ab\u91cd\u8f7d\u7684\u7279\u5f81\uff1a", "\n\uff081\uff09\u76f8\u540c\u7684\u8303\u56f4\uff08\u5728\u540c\u4e00\u4e2a\u7c7b\u4e2d\uff09\uff1b", "\n\uff082\uff09\u51fd\u6570\u540d\u5b57\u76f8\u540c\uff1b", "\n\uff083\uff09\u53c2\u6570\u4e0d\u540c\uff1b", "\n\uff084\uff09virtual \u5173\u952e\u5b57\u53ef\u6709\u53ef\u65e0\u3002", "\nb.\u8986\u76d6\u662f\u6307\u6d3e\u751f\u7c7b\u51fd\u6570\u8986\u76d6\u57fa\u7c7b\u51fd\u6570\uff0c\u7279\u5f81\u662f\uff1a", "\n\uff081\uff09\u4e0d\u540c\u7684\u8303\u56f4\uff08\u5206\u522b\u4f4d\u4e8e\u6d3e\u751f\u7c7b\u4e0e\u57fa\u7c7b\uff09\uff1b", "\n\uff082\uff09\u51fd\u6570\u540d\u5b57\u76f8\u540c\uff1b", "\n\uff083\uff09\u53c2\u6570\u76f8\u540c\uff1b", "\n\uff084\uff09\u57fa\u7c7b\u51fd\u6570\u5fc5\u987b\u6709virtual \u5173\u952e\u5b57\u3002", "\nc.\u201c\u9690\u85cf\u201d\u662f\u6307\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\u5c4f\u853d\u4e86\u4e0e\u5176\u540c\u540d\u7684\u57fa\u7c7b\u51fd\u6570\uff0c\u89c4\u5219\u5982\u4e0b\uff1a", "\n\uff081\uff09\u5982\u679c\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\u4e0e\u57fa\u7c7b\u7684\u51fd\u6570\u540c\u540d\uff0c\u4f46\u662f\u53c2\u6570\u4e0d\u540c\u3002\u6b64\u65f6\uff0c\u4e0d\u8bba\u6709\u65e0virtual\u5173\u952e\u5b57\uff0c\u57fa\u7c7b\u7684\u51fd\u6570\u5c06\u88ab\u9690\u85cf\uff08\u6ce8\u610f\u522b\u4e0e\u91cd\u8f7d\u6df7\u6dc6\uff09\u3002", "\n\uff082\uff09\u5982\u679c\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\u4e0e\u57fa\u7c7b\u7684\u51fd\u6570\u540c\u540d\uff0c\u5e76\u4e14\u53c2\u6570\u4e5f\u76f8\u540c\uff0c\u4f46\u662f\u57fa\u7c7b\u51fd\u6570\u6ca1\u6709virtual \u5173\u952e\u5b57\u3002\u6b64\u65f6\uff0c\u57fa\u7c7b\u7684\u51fd\u6570\u88ab\u9690\u85cf\uff08\u6ce8\u610f\u522b\u4e0e\u8986\u76d6\u6df7\u6dc6\uff09 ", "5. There are two int variables: a and b, don\u2019t use \u201cif\u201d, \u201c? :\u201d, \u201cswitch\u201dor other judgement statements, find out the biggest one of the two numbers.", "\n\u7b54\u6848\uff1a( ( a + b ) + abs( a - b ) ) / 2 ", "6. \u5982\u4f55\u6253\u5370\u51fa\u5f53\u524d\u6e90\u6587\u4ef6\u7684\u6587\u4ef6\u540d\u4ee5\u53ca\u6e90\u6587\u4ef6\u7684\u5f53\u524d\u884c\u53f7\uff1f", "\n\u7b54\u6848\uff1a", "\ncout \ncout\n__FILE__\u548c__LINE__\u662f\u7cfb\u7edf\u9884\u5b9a\u4e49\u5b8f\uff0c\u8fd9\u79cd\u5b8f\u5e76\u4e0d\u662f\u5728\u67d0\u4e2a\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\uff0c\u800c\u662f\u7531\u7f16\u8bd1\u5668\u5b9a\u4e49\u7684\u3002 ", "7. main \u4e3b\u51fd\u6570\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u662f\u5426\u53ef\u80fd\u4f1a\u518d\u6267\u884c\u4e00\u6bb5\u4ee3\u7801\uff0c\u7ed9\u51fa\u8bf4\u660e\uff1f", "\n\u7b54\u6848\uff1a\u53ef\u4ee5\uff0c\u53ef\u4ee5\u7528_onexit \u6ce8\u518c\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u4f1a\u5728main \u4e4b\u540e\u6267\u884cint fn1(void), fn2(void), fn3(void), fn4 (void);", "\nvoid main( void )", "\n{", "\nString str(\"zhanglin\");", "\n_onexit( fn1 );", "\n_onexit( fn2 );", "\n_onexit( fn3 );", "\n_onexit( fn4 );", "\nprintf( \"This is executed first.\\n\" );", "\n}", "\nint fn1()", "\n{", "\nprintf( \"next.\\n\" );", "\nreturn 0;", "\n}", "\nint fn2()", "\n{", "\nprintf( \"executed \" );", "\nreturn 0;", "\n}", "\nint fn3()", "\n{", "\nprintf( \"is \" );", "\nreturn 0;", "\n}", "\nint fn4()", "\n{", "\nprintf( \"This \" );", "\nreturn 0;", "\n}", "\nThe _onexit function is passed the address of a function (func) to be called when the program terminates normally. Successive calls to _onexit create a register of functions that are executed in LIFO (last-in-first-out) order. The functions passed to _onexit cannot take parameters.", "8. \u5982\u4f55\u5224\u65ad\u4e00\u6bb5\u7a0b\u5e8f\u662f\u7531C \u7f16\u8bd1\u7a0b\u5e8f\u8fd8\u662f\u7531C++\u7f16\u8bd1\u7a0b\u5e8f\u7f16\u8bd1\u7684\uff1f", "\n\u7b54\u6848\uff1a", "\n#ifdef __cplusplus", "\ncout\n#else", "\ncout\n#endif ", "9.\u6587\u4ef6\u4e2d\u6709\u4e00\u7ec4\u6574\u6570\uff0c\u8981\u6c42\u6392\u5e8f\u540e\u8f93\u51fa\u5230\u53e6\u4e00\u4e2a\u6587\u4ef6\u4e2d", "\n\u7b54\u6848\uff1a ", "\uff03i nclude ", "\uff03i nclude ", "using namespace std; ", "void Order(vector& data) //bubble sort", "\n{", "\nint count = data.size() ;", "\nint tag = false ; // \u8bbe\u7f6e\u662f\u5426\u9700\u8981\u7ee7\u7eed\u5192\u6ce1\u7684\u6807\u5fd7\u4f4d", "\nfor ( int i = 0 ; i \n{", "\nfor ( int j = 0 ; j \n{", "\nif ( data[j] > data[j+1])", "\n{", "\ntag = true ;", "\nint temp = data[j] ;", "\ndata[j] = data[j+1] ;", "\ndata[j+1] = temp ;", "\n}", "\n}", "\nif ( !tag )", "\nbreak ;", "\n}", "\n} ", "void main( void )", "\n{", "\nvectordata;", "\nifstream in(\u201cc:\\\\data.txt\u201d);", "\nif ( !in)", "\n{", "\ncout\nexit(1);", "\n}", "\nint temp;", "\nwhile (!in.eof())", "\n{", "\nin>>temp;", "\ndata.push_back(temp);", "\n}", "\nin.close(); //\u5173\u95ed\u8f93\u5165\u6587\u4ef6\u6d41", "\nOrder(data);", "\nofstream out(\u201cc:\\\\result.txt\u201d);", "\nif ( !out)", "\n{", "\ncout\nexit(1);", "\n}", "\nfor ( i = 0 ; i \nout\n10. \u94fe\u8868\u9898\uff1a\u4e00\u4e2a\u94fe\u8868\u7684\u7ed3\u70b9\u7ed3\u6784", "\nstruct Node", "\n{", "\nint data ;", "\nNode *next ;", "\n};", "\ntypedef struct Node Node ; ", "(1)\u5df2\u77e5\u94fe\u8868\u7684\u5934\u7ed3\u70b9head,\u5199\u4e00\u4e2a\u51fd\u6570\u628a\u8fd9\u4e2a\u94fe\u8868\u9006\u5e8f ( Intel) ", "Node * ReverseList(Node *head) //\u94fe\u8868\u9006\u5e8f", "\n{", "\nif ( head == NULL || head->next == NULL )", "\nreturn head;", "\nNode *p1 = head ;", "\nNode *p2 = p1->next ;", "\nNode *p3 = p2->next ;", "\np1->next = NULL ;", "\nwhile ( p3 != NULL )", "\n{", "\np2->next = p1 ;", "\np1 = p2 ;", "\np2 = p3 ;", "\np3 = p3->next ;", "\n}", "\np2->next = p1 ;", "\nhead = p2 ;", "\nreturn head ;", "\n}", "\n(2)\u5df2\u77e5\u4e24\u4e2a\u94fe\u8868head1 \u548chead2 \u5404\u81ea\u6709\u5e8f\uff0c\u8bf7\u628a\u5b83\u4eec\u5408\u5e76\u6210\u4e00\u4e2a\u94fe\u8868\u4f9d\u7136\u6709\u5e8f\u3002(\u4fdd\u7559\u6240\u6709\u7ed3\u70b9\uff0c\u5373\u4fbf\u5927\u5c0f\u76f8\u540c\uff09", "\nNode * Merge(Node *head1 , Node *head2)", "\n{", "\nif ( head1 == NULL)", "\nreturn head2 ;", "\nif ( head2 == NULL)", "\nreturn head1 ;", "\nNode *head = NULL ;", "\nNode *p1 = NULL;", "\nNode *p2 = NULL;", "\nif ( head1->data data )", "\n{", "\nhead = head1 ;", "\np1 = head1->next;", "\np2 = head2 ;", "\n}", "\nelse", "\n{", "\nhead = head2 ;", "\np2 = head2->next ;", "\np1 = head1 ;", "\n}", "\nNode *pcurrent = head ;", "\nwhile ( p1 != NULL && p2 != NULL)", "\n{", "\nif ( p1->data data )", "\n{", "\npcurrent->next = p1 ;", "\npcurrent = p1 ;", "\np1 = p1->next ;", "\n}", "\nelse", "\n{", "\npcurrent->next = p2 ;", "\npcurrent = p2 ;", "\np2 = p2->next ;", "\n}", "\n}", "\nif ( p1 != NULL )", "\npcurrent->next = p1 ;", "\nif ( p2 != NULL )", "\npcurrent->next = p2 ;", "\nreturn head ;", "\n}", "\n(3)\u5df2\u77e5\u4e24\u4e2a\u94fe\u8868head1 \u548chead2 \u5404\u81ea\u6709\u5e8f\uff0c\u8bf7\u628a\u5b83\u4eec\u5408\u5e76\u6210\u4e00\u4e2a\u94fe\u8868\u4f9d\u7136\u6709\u5e8f\uff0c\u8fd9\u6b21\u8981\u6c42\u7528\u9012\u5f52\u65b9\u6cd5\u8fdb\u884c\u3002 (Autodesk)", "\n\u7b54\u6848\uff1a", "\nNode * MergeRecursive(Node *head1 , Node *head2)", "\n{", "\nif ( head1 == NULL )", "\nreturn head2 ;", "\nif ( head2 == NULL)", "\nreturn head1 ;", "\nNode *head = NULL ;", "\nif ( head1->data data )", "\n{", "\nhead = head1 ;", "\nhead->next = MergeRecursive(head1->next,head2);", "\n}", "\nelse", "\n{", "\nhead = head2 ;", "\nhead->next = MergeRecursive(head1,head2->next);", "\n}", "\nreturn head ;", "\n} "], "title": "\u676d\u5dde-\u5929\u6f6e\u7f51\u683c\u7cfb\u7edf\u8bbe\u5907\u5de5\u7a0b\u6709\u9650\u516c\u53f8"},
{"contents": ["\u7b14\u8bd5\u9898\uff1a\uff08ABC\uff09", "\n1\u3001\t32\u4f4d\u7cfb\u7edf\u4e0b, C++\u7a0b\u5e8f\uff0c\u8bf7\u8ba1\u7b97sizeof \u7684\u503c\uff1f", "\n\tchar str[] = \u201cwww.sumavision.com\u201d", "\n\tchar *p = str ;", "\n\tint n = 2010;", "\n\t\u8bf7\u8ba1\u7b97\uff1asizeof (str ) = \uff1fsizeof ( p ) = \uff1fsizeof ( n ) = \uff1f", "\n\t\u7b54\uff1a\uff081\uff0919 \uff082\uff094 \uff083\uff09 4", "\n2\u3001\t\u5728C++ \u7a0b\u5e8f\u4e2d\u8c03\u7528\u88ab C \u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u7684\u51fd\u6570\uff0c\u4e3a\u4ec0\u4e48\u8981\u52a0 extern \u201cC\u201d\u58f0\u660e\uff1f", "\n\u7b54\uff1a\u51fd\u6570\u548c\u53d8\u91cf\u88abC++\u7f16\u8bd1\u540e\u5728\u7b26\u53f7\u5e93\u4e2d\u7684\u540d\u5b57\u4e0eC\u8bed\u8a00\u7684\u4e0d\u540c\uff0c\u88abextern \u201cC\u201d\u4fee\u9970\u7684\u53d8\u91cf\u548c\u51fd\u6570\u662f\u6309\u7167C\u8bed\u8a00\u65b9\u5f0f\u7f16\u8bd1\u548c\u8fde\u63a5\u7684\u3002\u7531\u4e8e\u7f16\u8bd1\u540e\u7684\u540d\u5b57\u4e0d\u540c\uff0cC++\u7a0b\u5e8f\u4e0d\u80fd\u76f4\u63a5\u8c03\u7528C \u51fd\u6570\u3002C++\u63d0\u4f9b\u4e86\u4e00\u4e2aC \u8fde\u63a5\u4ea4\u6362\u6307\u5b9a\u7b26\u53f7extern\u201cC\u201d\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002", "\n3\u3001\t\u8bf7\u8bf4\u660eC++\u4e2d\u6808\uff08stack\uff09\u548c\u5806\uff08heap\uff09\u7684\u533a\u522b\uff0cnew\u548cmalloc\u7533\u8bf7\u7684\u5185\u5b58\u5728\u6808\u4e0a\u8fd8\u662f\u5728\u5806\u4e0a\uff1f", "\n\u7b54\uff1a", "\na)\t\u6808\u533a(stack)\uff1a\u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u5206\u914d\u91ca\u653e\uff0c\u5b58\u653e\u51fd\u6570\u7684\u53c2\u6570\u503c\uff0c\u5c40\u90e8\u53d8\u91cf\u7684\u503c\u7b49\u3002", "\nb)\t\u5806\u533a(heap)\uff1a\u4e00\u822c\u7531\u7a0b\u5e8f\u5458\u5206\u914d\u91ca\u653e\uff0c\u82e5\u7a0b\u5e8f\u5458\u4e0d\u91ca\u653e\uff0c\u7a0b\u5e8f\u7ed3\u675f\u65f6\u7531\u64cd\u4f5c\u7cfb\u7edf\u56de\u6536\uff0c\u53ef\u80fd\u4f1a\u4ea7\u751f\u788e\u7247\u3002 New\u548cmalloc\u7533\u8bf7\u7684\u5185\u5b58\u5728\u5806\u4e0a\u3002", "\n4\u3001\t\u8bf7\u8bf4\u660e\u5728\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u7ebf\u7a0b\u7684\u597d\u5904\u662f\u4ec0\u4e48\uff1f", "\n\u7b54\uff1a", "\na)\t\u8017\u65f6\u7684\u64cd\u4f5c\u4f7f\u7528\u7ebf\u7a0b\uff0c\u63d0\u9ad8\u5e94\u7528\u7a0b\u5e8f\u54cd\u5e94", "\nb)\t\u5e76\u884c\u64cd\u4f5c\u65f6\u4f7f\u7528\u7ebf\u7a0b\uff0c\u5982C/S\u67b6\u6784\u7684\u670d\u52a1\u5668\u7aef\u5e76\u53d1\u7ebf\u7a0b\u54cd\u5e94\u7528\u6237\u7684\u8bf7\u6c42\u3002", "\nc)\t\u591aCPU\u7cfb\u7edf\u4e2d\uff0c\u4f7f\u7528\u7ebf\u7a0b\u63d0\u9ad8CPU\u5229\u7528\u7387", "\nd)\t\u6539\u5584\u7a0b\u5e8f\u7ed3\u6784\u3002\u4e00\u4e2a\u65e2\u957f\u53c8\u590d\u6742\u7684\u8fdb\u7a0b\u53ef\u4ee5\u8003\u8651\u5206\u4e3a\u591a\u4e2a\u7ebf\u7a0b\uff0c\u6210\u4e3a\u51e0\u4e2a\u72ec\u7acb\u6216\u534a\u72ec\u7acb\u7684\u8fd0\u884c\u90e8\u5206\uff0c\u8fd9\u6837\u7684\u7a0b\u5e8f\u4f1a\u5229\u4e8e\u7406\u89e3\u548c\u4fee\u6539\u3002", "\n5\u3001\t\u8bf7\u95ee\u5982\u4f55\u9632\u6b62\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u540c\u65f6\u4ea7\u751f\u5927\u91cf\u7684\u7ebf\u7a0b\uff1f", "\n\u7b54\uff1a\u65b9\u6cd5\u662f\u4f7f\u7528\u7ebf\u7a0b\u6c60\uff0c\u7ebf\u7a0b\u6c60\u5177\u6709\u53ef\u4ee5\u540c\u65f6\u63d0\u9ad8\u8c03\u5ea6\u6548\u7387\u548c\u9650\u5236\u8d44\u6e90\u4f7f\u7528\u7684\u597d\u5904\uff0c\u7ebf\u7a0b\u6c60\u4e2d\u7684\u7ebf\u7a0b\u8fbe\u5230\u6700\u5927\u6570\u65f6\uff0c\u5176\u4ed6\u7ebf\u7a0b\u5c31\u4f1a\u6392\u961f\u7b49\u5019\u3002", "\n6\u3001\t\u5982\u679cORACLE\u6570\u636e\u5e93\u65e5\u5fd7\u6ee1\u4e86\uff0c\u4f1a\u51fa\u73b0\u4ec0\u4e48\u60c5\u51b5\uff0c\u662f\u5426\u8fd8\u80fd\u4f7f\u7528\uff1f", "\n\u7b54\uff1a\u53ea\u80fd\u6267\u884c\u67e5\u8be2\u7b49\u8bfb\u64cd\u4f5c\uff0c\u4e0d\u80fd\u6267\u884c\u66f4\u6539\uff0c\u5907\u4efd\u7b49\u5199\u64cd\u4f5c\uff0c\u539f\u56e0\u662f\u4efb\u4f55\u5199\u64cd\u4f5c\u90fd\u8981\u8bb0\u5f55\u65e5\u5fd7\uff0c\u4e5f\u5c31\u662f\u8bf4\u6570\u636e\u5e93\u57fa\u672c\u4e0a\u5904\u4e8e\u4e0d\u80fd\u4f7f\u7528\u7684\u72b6\u6001\u3002", "\n7\u3001\t\u5982\u4f55\u5b9e\u73b0\u5728\u64cd\u4f5cORACLE\u6570\u636e\u5e93\u4e00\u5f20\u8868\u7684\u540c\u65f6\u4e5f\u64cd\u4f5c\u53e6\u4e00\u5f20\u8868\uff1f", "\n\u7b54\uff1a\u628a\u591a\u4e2a\u8868\u7684\u64cd\u4f5c\u653e\u5165\u5230\u4e8b\u52a1\u4e2d\u8fdb\u884c\u5904\u7406\u3002", "\n8\u3001\t\u8bf7\u8bf4\u660eC++\u4e2d\u52a8\u6001\u94fe\u63a5\u5e93\u548c\u9759\u6001\u94fe\u63a5\u5e93\u7684\u533a\u522b\uff1f", "\n\u7b54\uff1a", "\na)\t\u52a8\u6001\u94fe\u63a5\u662f\u6307\u5728\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\u65f6\u4e0d\u5c06\u6240\u6709\u7a0b\u5e8f\u7528\u5230\u7684\u51fd\u6570\u94fe\u63a5\u5230\u4e00\u4e2a\u6587\u4ef6\uff0c\u5f53\u7a0b\u5e8f\u8fd0\u884c\u65f6\u76f4\u63a5\u4ece\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u627e,\u52a8\u6001\u94fe\u63a5\u662f\u53ea\u5efa\u7acb\u4e00\u4e2a\u5f15\u7528\u7684\u63a5\u53e3\uff0c\u800c\u771f\u6b63\u7684\u4ee3\u7801\u548c\u6570\u636e\u5b58\u653e\u5728\u53e6\u5916\u7684\u53ef\u6267\u884c\u6a21\u5757\u4e2d\uff0c\u5728\u8fd0\u884c\u65f6\u518d\u88c5\u5165\uff1b", "\nb)\t\u9759\u6001\u94fe\u63a5\u5c31\u662f\u628a\u6240\u6709\u7528\u5230\u7684\u51fd\u6570\u5168\u90e8\u94fe\u63a5\u5230exe\u6587\u4ef6\u4e2d\uff0c\u6240\u6709\u7684\u4ee3\u7801\u548c\u6570\u636e\u90fd\u590d\u5236\u5230\u672c\u6a21\u5757\u4e2d\uff0c\u8fd0\u884c\u65f6\u5c31\u4e0d\u518d\u9700\u8981\u5e93\u4e86\u3002", "\n9\u3001\t\u8bf7\u8bf4\u660e\u8c03\u7528\u52a8\u6001\u94fe\u63a5\u5e93DLL\u76842\u79cd\u65b9\u5f0f\uff1f", "\n\u7b54\uff1a", "\na)\t\u8f7d\u5165\u65f6\u52a8\u6001\u94fe\u63a5\uff08load-time dynamic linking\uff09\uff0c\u6a21\u5757\u975e\u5e38\u660e\u786e\u8c03\u7528\u67d0\u4e2a\u5bfc\u51fa\u51fd\u6570\uff0c\u4f7f\u5f97\u4ed6\u4eec\u5c31\u50cf\u672c\u5730\u51fd\u6570\u4e00\u6837\u3002\u8fd9\u9700\u8981\u94fe\u63a5\u65f6\u94fe\u63a5\u90a3\u4e9b\u51fd\u6570\u6240\u5728DLL\u7684\u5bfc\u5165\u5e93\uff0c\u5bfc\u5165\u5e93\u5411\u7cfb\u7edf\u63d0\u4f9b\u4e86\u8f7d\u5165DLL\u65f6\u6240\u9700\u7684\u4fe1\u606f\u53caDLL\u51fd\u6570\u5b9a\u4f4d\u3002", "\nb)\t\u8fd0\u884c\u65f6\u52a8\u6001\u94fe\u63a5\uff08run-time dynamic linking\uff09\uff0c\u8fd0\u884c\u65f6\u53ef\u4ee5\u901a\u8fc7LoadLibrary\u6216LoadLibraryEx\u51fd\u6570\u8f7d\u5165DLL\u3002DLL\u8f7d\u5165\u540e\uff0c\u6a21\u5757\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 GetProcAddress\u83b7\u53d6DLL\u51fd\u6570\u7684\u51fa\u53e3\u5730\u5740\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7\u8fd4\u56de\u7684\u51fd\u6570\u6307\u9488\u8c03\u7528DLL\u51fd\u6570\u4e86\u3002\u5982\u6b64\u5373\u53ef\u907f\u514d\u5bfc\u5165\u5e93\u6587\u4ef6\u4e86\u3002", "\n10\u3001\t\u8bf7\u8bf4\u660eTCP/IP \u5efa\u7acb\u8fde\u63a5\u7684\u8fc7\u7a0b?", "\n\u7b54\uff1a\u5728TCP/IP\u534f\u8bae\u4e2d\uff0cTCP\u534f\u8bae\u63d0\u4f9b\u53ef\u9760\u7684\u8fde\u63a5\u670d\u52a1\uff0c\u91c7\u7528\u4e09\u6b21\u63e1\u624b\u5efa\u7acb\u4e00\u4e2a\u8fde\u63a5\u3002", "\na)\t\u7b2c\u4e00\u6b21\u63e1\u624b\uff1a\u5efa\u7acb\u8fde\u63a5\u65f6\uff0c\u5ba2\u6237\u7aef\u53d1\u9001syn\u5305(syn=j)\u5230\u670d\u52a1\u5668\uff0c\u5e76\u8fdb\u5165SYN_SEND\u72b6\u6001\uff0c\u7b49\u5f85\u670d\u52a1\u5668\u786e\u8ba4\uff1b", "\nb)\t\u7b2c\u4e8c\u6b21\u63e1\u624b\uff1a\u670d\u52a1\u5668\u6536\u5230syn\u5305\uff0c\u5fc5\u987b\u786e\u8ba4\u5ba2\u6237\u7684SYN\uff08ack=j+1\uff09\uff0c\u540c\u65f6\u81ea\u5df1\u4e5f\u53d1\u9001\u4e00\u4e2aSYN\u5305\uff08syn=k\uff09\uff0c\u5373SYN+ACK\u5305\uff0c\u6b64\u65f6\u670d\u52a1\u5668\u8fdb\u5165SYN_RECV\u72b6\u6001\uff1b", "\nc)\t\u7b2c\u4e09\u6b21\u63e1\u624b\uff1a\u5ba2\u6237\u7aef\u6536\u5230\u670d\u52a1\u5668\u7684SYN\uff0bACK\u5305\uff0c\u5411\u670d\u52a1\u5668\u53d1\u9001\u786e\u8ba4\u5305ACK(ack=k+1)\uff0c\u6b64\u5305\u53d1\u9001\u5b8c\u6bd5\uff0c\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u8fdb\u5165ESTABLISHED\u72b6\u6001\uff0c\u5b8c\u6210\u4e09\u6b21\u63e1\u624b\u3002"], "title": "\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u7ed3\u6784\u5316\u9762\u8bd5\u9898\u5e93 C++"},
{"contents": ["1 dll,lib\u5904\u7406\u5b9e\u73b0 .lib\u6587\u4ef6\u4e2d\u5305\u542b\u4ec0\u4e48? dll\u5728\u5185\u5b58\u4e2d\u88ab\u591a\u4e2a\u51fd\u6570\u5171\u4eab,\u6709\u51e0\u4e2a\u62f7\u8d1d?", "\n2 template,template\u7b49\u7f16\u8bd1\u7684\u65f6\u5019\u4f5c\u4e3a\u51e0\u4e2a\u7c7b", "\n3 struct ,class\u7684\u533a\u522b,\u8054\u7cfb", "\n4 MAcro,inline\u533a\u522b,\u5b9e\u73b0.\u7f16\u8bd1\u8fd0\u884c\u65f6", "\n5 \u8fdb\u7a0b\u4e0e\u7ebf\u7a0b\u533a\u522b", "\n6 hdc-cdc\u533a\u522b\u8054\u7cfb", "\n7 model dialog,modeless dialog,\u4ece\u521b\u5efa\u5230\u9500\u6bc1\u5168\u8fc7\u7a0b\u5177\u4f53\u63cf\u8ff0", "\n8 \u5404\u4e2a\u7ebf\u7a0bnew\u7684\u5185\u5b58,\u522b\u7684\u7ebf\u7a0b\u662f\u5426\u53ef\u4ee5\u4f7f\u7528\uff1f", "\n9 RUNTIME_CLASS, \u662f\u4ec0\u4e48\uff1f"], "title": "\u676d\u5dde-\u6d59\u6c5f\u8d85\u6d77\u79d1\u6280"},
{"contents": ["\u5df2\u77e5strcpy\u51fd\u6570\u7684\u539f\u578b\u662f\uff1a", "\nchar * strcpy(char * strDest,const char * strSrc);", "\n1.\u4e0d\u8c03\u7528\u5e93\u51fd\u6570\uff0c\u5b9e\u73b0strcpy\u51fd\u6570\u3002", "\n2.\u89e3\u91ca\u4e3a\u4ec0\u4e48\u8981\u8fd4\u56dechar *\u3002"], "title": "\u4e0a\u6d77-\u5bb6\u5c45\u7f51 \u9898\u76ee"},
{"contents": ["1\u3001\u4f30\u8ba1\u4e00\u4e0b\u676d\u5dde\u6709\u591a\u5c11\u8f6f\u4ef6\u5de5\u7a0b\u5e08\uff0c\u5982\u679c\u5141\u8bb8\uff0c\u4f60\u8fd8\u9700\u8981\u90a3\u4e9b\u8c03\u7814\u5de5\u4f5c\uff1f\u5e76\u7ed9\u51fa\u4f60\u7684\u63a8\u5bfc\u8fc7\u7a0b\u3002\u4f60\u8ba4\u4e3a\u4f60\u7684 \u4f30\u7b97\u7ed3\u679c\u53ef\u4fe1\u5417\uff1f", "2\u3001\u770b\u8fc7\u90a3\u4e9b\u8f6f\u4ef6\u65b9\u9762\u7684\u4e66\u7c4d", "3\u3001\u4ec0\u4e48\u662f\u8f6f\u4ef6\uff0c\u8f6f\u4ef6\u5f00\u53d1\u5305\u62ec\u90a3\u4e9b\u6b65\u9aa4\uff0c\u5e76\u8bf4\u51fa\u4f60\u5bf9\u8fd9\u4e9b\u6b65\u9aa4\u7684\u7406\u89e3 ", "4\u3001OSI\u7f51\u7edc\u7ed3\u6784\u7684\u4e03\u5c42\u6a21\u578b\u5206\u522b\u662f\u4ec0\u4e48\uff0c\u5e76\u8bf4\u51fa\u4f60\u8ba4\u4e3a\u5212\u5206\u4e3a7\u5c42\u7684\u7406\u7531\u3002", "5\u3001\u8f6f\u4ef6\u8fc7\u7a0b\u4e2d\u4e86\u89e3\u3001\u4f7f\u7528\u8fc7\u7248\u672c\u63a7\u5236\u6216\u5efa\u6a21\u5de5\u5177\u5417\uff1f\u5bf9\u4f60\u5de5\u4f5c\u6709\u4ec0\u4e48\u5e2e\u52a9\uff1f", "6\u3001\u8f6f\u4ef6\u8fc7\u7a0b\u4e2d\u4f60\u90fd\u5199\u8fc7\u4ec0\u4e48\u6587\u6863\uff1f\u5206\u522b\u662f\u4ec0\u4e48\u76ee\u7684\u53ca\u5176\u5bf9\u4f60\u7684\u5e2e\u52a9\uff1f", "7\u3001\u6211\u4eec\u77e5\u9053\uff0cC++\u5c06\u5185\u5b58\u5212\u5206\u4e3a\u4e09\u4e2a\u903b\u8f91\u533a\u57df\uff1a\u5806\u3001\u6808\u548c\u9759\u6001\u5b58\u50a8\uff0c\u8bf7\u8bf4\u51fa\u5b83\u4eec\u7684\u533a\u522b\u53ca\u4f60\u7684\u7406\u89e3\u3002", "8\u3001\u5b57\u7b26\u4e32A\u662f\u7531n\u4e2a\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\uff08a ~ z\uff09\u6784\u6210\u7684\uff0c\u5b9a\u4e49\u4e3achar A[n]\u3002\u4f60\u80fd\u7528\u66f4\u5c11\u7684\u7a7a\u95f4\u8868\u793a\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5417\uff1f\u8bf7\u5199\u51fa\u4ecechar A[n]\u5230\u4f60\u7684\u65b0\u7684\u50a8\u5b58\u683c\u5f0f\u7684\u8f6c\u6362\u51fd\u6570\u3002\uff08\u8bf7\u7528C/C++\u7f16\u7a0b\uff0c\u4e0d\u5141\u8bb8\u4e0a\u673a\u64cd\u4f5c\uff09", "12\u3001\u5bf9\u73b0\u5728\u7684Stack\uff08\u6808\uff09\u6570\u636e\u7ed3\u6784\u8fdb\u884c\u6539\u8fdb\uff0c\u52a0\u4e00\u4e2amin()\u529f\u80fd\uff0c\u4f7f\u4e4b\u80fd\u5728\u5e38\u6570\uff0c\u5373O(1)\uff0c\u65f6\u95f4\u5185\u7ed9\u51fa\u6808\u4e2d\u7684\u6700\u5c0f\u503c\u3002\u53ef\u5bf9push()\u548cpop()\u51fd\u6570\u8fdb\u884c\u4fee\u6539\uff0c\u4f46\u8981\u6c42\u5176\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u53ea\u80fd\u662fO(1)\u3002", "9\u3001C++\u6784\u9020\u51fd\u6570\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u662f\u865a\u51fd\u6570\uff1f", "10\u3001C++\u4e2dvirtual\u4e0einline\u7684\u542b\u4e49\u5206\u522b\u662f\u4ec0\u4e48\uff1f\u865a\u51fd\u6570\u7684\u7279\u70b9\uff1b\u5185\u8054\u51fd\u6570\u7684\u7279\u70b9\uff1b\u4e00\u4e2a\u51fd\u6570\u80fd\u5426\u5373\u662f\u865a\u51fd\u6570\u53c8\u662f\u5185\u8054\u51fd\u6570\uff1f", "12\u3001\u8bf7\u5217\u51fa\u5b9e\u73b0C++\u4ee3\u7801\u4f60\u8ba4\u4e3a\u9700\u8981\u6ce8\u610f\u7684\u4e00\u4e9b\u95ee\u9898\u3002", "11\u3001\u4f60\u5728\u539f\u6765\u7684\u9879\u76ee\u4e2d\u6709\u6ca1\u6709\u9047\u5230\u4ec0\u4e48\u56f0\u96be\uff0c\u53c8\u662f\u5982\u4f55\u89e3\u51b3\u7684\uff1f"], "title": "\u676d\u5dde-\u4e1c\u4fe1\u7075\u901a\u7535\u5b50\u5b9e\u4e1a\u516c\u53f8"},
{"contents": ["\u4e00\uff0e\u586b\u7a7a\u9898(26\u5206)", "\n1\uff0e WIN32\u5e73\u53f0\u4e0b\uff0csizeof(short) = ____\uff0csizeof(int) = ____\uff0csizeof(long) = ____\u3002(3\u5206)", "2\uff0e\u8bf7\u7ed9\u51fa\u5982\u4e0b\u7a0b\u5e8f\u7684\u7ed3\u679c(2\u5206)", "\nint a = 3;", "\nint b = a \na = ____\uff0cb = ____\u3002", "3\uff0e\u8bf7\u7ed9\u51fa\u5982\u4e0b\u7a0b\u5e8f\u7684\u7ed3\u679c(2\u5206)", "\nint aaa = 0x01;", "\nhtonl(aaa) = ____\u3002", "4\uff0e\u8bf7\u7ed9\u51fa\u5982\u4e0b\u7a0b\u5e8f\u7684\u7ed3\u679c(2\u5206)", "\n#define MAX_NUM 100+200", "\nint nTemp = MAX_NUM*10;", "\n\u5219Temp = ____\u3002", "5\uff0e\u8bf7\u7ed9\u51fa\u5982\u4e0b\u7a0b\u5e8f\u7684\u7ed3\u679c(3 \u5206)", "\nchar szTemp[1000] = \"\";", "\nint nLen1 = sizeof(szTemp);", "\nint nLen2 = strlen(szTemp);", "\nstrcpy(szTemp, \"abc\");", "\nint nLen3 = sizeof(szTemp);", "\nint nLen4 = strlen(szTemp);", "\nint nTemp[100];", "\nint *pTemp = nTemp;", "\nint nLen5 = sizeof(pTemp);", "\nchar szResult[200] = \"\";", "\nsprintf(szResult, \"%d,%d,%d,%d,%02d.\", nLen1, nLen2, nLen3, nLen4, nLen5);", "\n\u5219szResult = ____\u3002", "6\uff0eMFC\u4e2d\uff0c\u5927\u90e8\u5206\u7c7b\u662f\u4ece\u54ea\u4e2a\u7c7b\u7ee7\u627f\u800c\u6765\uff08CCmdTarget\u3001CObject\u3001CWinApp\u3001CWnd\uff09\uff1f(2\u5206)____", "7\uff0e\u5185\u5b58\u662f\u8fdb\u7a0b\u8303\u56f4or\u7ebf\u7a0b\u8303\u56f4\uff1b____", "\nCPU\u8c03\u5ea6\u65f6\uff0c\u9488\u5bf9\u8fdb\u7a0bor\u7ebf\u7a0b\uff1b____", "\n\u51fd\u6570\u8c03\u7528\u5806\u6808\uff0c\u9488\u5bf9\u8fdb\u7a0bor\u7ebf\u7a0b\u3002____(3\u5206)", "8\uff0e\u8c03\u7528\u51fd\u6570bbb\u540e\uff0c\u8f93\u51fa\u662f\u4ec0\u4e48(4\u5206)", "\nvoid ccc(int x)", "\n{", "\n\tchar szTemp[10] = \"\";", "\tx = 2;", "\n\tsprintf(szTemp, \"%d,\", x);", "\n\tafxDump \n", "\tif(x = 3)", "\n\t{", "\n\t\tint x = 4;", "\n\t\tsprintf(szTemp, \"%d,\", x);", "\n\t\tafxDump \n\t}", "\tsprintf(szTemp, \"%d,\", x);", "\n\tafxDump \n}", "void bbb()", "\n{", "\n\tchar szTemp[10] = \"\";", "\tint x = 7;", "\tccc(x);", "\tsprintf(szTemp, \"%d,\", x);", "\n\tafxDump \n}", "\u4e8c\uff0e\u6539\u9519\u9898(\u603b\u517115\u5206,\u6bcf\u98985\u5206)\u3002", "\n1\uff0e\u4e0b\u9762\u4ee3\u7801\u6709\u4f55\u9519\u8bef", "\nvoid func1()", "\n{", "\n\tint *pa = NULL;", "\n\tfunc2(pa);", "\n\tdelete pa;", "\n}", "\nvoid func2(int *pb)", "\n{", "\n\tpb = new int(5);", "\n}", "2\uff0e\u4e0b\u9762\u4ee3\u7801\u6709\u4f55\u9519\u8bef", "\nvoid func2(int *value)", "\n{", "\n\t*value = 2;", "\n}", "\nvoid func1()", "\n{", "\n\tint *p = 0;", "\n\tfunc2(p);", "\n}", "3\uff0e", "\nint func1(int& b)", "\n{", "\n\treturn 0;", "\n}", "\nvoid func2()", "\n{", "\n\tint bbb = 3;", "\n\tfunc1(&bbb);", "\n\tfunc1(bbb);", "\n}", "\nfunc2\u4e2d\u6709\u4f55\u9519\u8bef\uff0cfunc1\u7684\u53c2\u6570b\u7684\u7c7b\u578b\u662f\u4ec0\u4e48\u3002", "\u4e09\uff0e\u7b80\u7b54\u9898(64\u5206)", "\n1.\u8bf7\u7b80\u8ff0C\u3001C++\u3001VC\u3001MFC\u5728\u6982\u5ff5\u4e0a\u7684\u533a\u522b(4\u5206)", "2\uff0e\u8bf7\u5199\u4e00\u4e2a\u51fd\u6570\u91cd\u8f7d\u7684\u7b80\u5355\u4f8b\u5b50(4\u5206)", "3.\u7528\u4ec0\u4e48\u51fd\u6570\u5f00\u542f\u65b0\u8fdb\u7a0b\u3001\u7ebf\u7a0b\u3002(4\u5206)", "4.SendMessage\u548cPostMessage\u6709\u4ec0\u4e48\u533a\u522b(4\u5206)", "5.WaitForSingleObject\u6709\u4f55\u4f5c\u7528\uff1bm_pThrd\u7684\u7c7b\u578b\u662fCWinThread*\u65f6\uff0cWaitForSingleObject(m_pThrd->m_hThread, INFINITE);\u6709\u4f55\u4f5c\u7528\u3002(4\u5206)", "6. __stdcall\u3001__cdecl\u3001__pascal\u5728\u4ec0\u4e48\u65b9\u9762\u6709\u6240\u4e0d\u540c\u3002(4\u5206)", "7\uff0e\u8bf7\u628a\u4e0b\u8ff0\u4ee3\u7801\u52a0\u4e0a\u5f02\u5e38\u5904\u7406\u3002(6\u5206)", "\nint MyWriteFile(CString strFileName, CString strText)", "\n{", "\n\tint nRet = 0;", "\tCFile myFile;", "\n\tmyFile.Open(strFileName, CFile::modeWrite|CFile::shareExclusive|CFile::modeCreate, NULL);\t", "\tint nLen = strText.GetLength();", "\n\tmyFile.Write((char*)(LPCSTR)strText, nLen);", "\tmyFile.Close();", "\treturn nRet;", "\n}", "8\uff0e\u8bf7\u89e3\u91ca\u201cfunc\u201d\u4e3a\u4f55\u79cd\u7c7b\u578b\uff0c\u8fd9\u79cd\u7c7b\u578b\u7684\u4f5c\u7528\u4ec0\u4e48\uff0c\u53d8\u91cfttt \u7684\u503c\u662f\u591a\u5c11\uff1f(6\u5206)", "\ntypedef int (*func)(int, int*);", "\nint xxx(int a, int *p)", "\n{", "\n\treturn a + *p;", "\n}", "\nint dowork(func aaa, int bbb, int *ccc)", "\n{", "\n\treturn aaa(bbb, ccc);", "\n}", "\nint sss = 4;", "\nint ttt = dowork(&xxx, 3, &sss);", "9\uff0e\u8bf7\u95ee\u4e0b\u8ff0\u4ee3\u7801\u4e2d: int operator+(\u2026\uff09\u8d77\u4ec0\u4e48\u4f5c\u7528\uff1fthis\u662f\u4ec0\u4e48\uff1fccc \u7684\u503c\u6700\u7ec8\u4e3a\u591a\u5c11\uff1f(6\u5206)", "\nclass Fruit", "\n{", "\npublic:", "\n\tFruit()", "\n\t{", "\n\t\tweight = 2;", "\n\t}", "\n\tFruit(int w)", "\n\t{", "\n\t\tweight = w;", "\n\t}", "\n\tint operator+(Fruit f)", "\n\t{", "\n\t\treturn this->weight * f.weight;", "\n\t}", "\nprivate:", "\n\tint weight;", "\n};", "\n\tFruit aaa;", "\n\tFruit bbb(4);", "\n\tint ccc = aaa + bbb;", "10.\u8bf7\u89e3\u91ca\u4e0b\u9762\u4ee3\u7801\u91c7\u7528\u4e86\u4f55\u79cdC++\u7279\u6027\uff08C\u8bed\u8a00\u4e0d\u5177\u5907\uff09\uff0c\u4f5c\u7528\u662f\u4ec0\u4e48\uff1f(6\u5206)", "\ntemplate", "11\uff0e\u8bf7\u89e3\u91caaaa.h\u4e2d\u4e0b\u9762\u4ee3\u7801\u7684\u529f\u80fd(5\u5206)", "\n#if !defined(AFX_MYSUDU_H__9B952BEA_A051_4026_B4E5_0598A39D2DA4__INCLUDED_)", "\n#define AFX_MYSUDU_H__9B952BEA_A051_4026_B4E5_0598A39D2DA4__INCLUDED_", "\n\u2026 \u2026", "\n#endif", "12\uff0eCMemoryState\u4e3b\u8981\u529f\u80fd\u662f\u4ec0\u4e48(5\u5206)", "13\uff0e\u8bf7\u9605\u8bfb\u4e0b\u8ff0\u4ee3\u7801\uff0c\u5199\u51fa\u7a0b\u5e8f\u6267\u884c\u7684\u7ed3\u679c\uff086\u5206\uff09", "\n#include ", "class CBase", "\n{", "\npublic:", "\n  virtual void print()", "\n  {", "\n    cout\n  }", "\n  void DoPrint()", "\n  {", "\n    print();", "\n  }", "\n};", "class CChild1: public CBase", "\n{", "\npublic:", "\n  virtual void print()", "\n  {", "\n    cout\n  }", "\n};", "class CChild2: public CBase", "\n{", "\npublic:", "\n  virtual void print()", "\n  {", "\n    cout\n  }", "\n};", "void DoPrint(CBase *base)", "\n{", "\n  base->DoPrint();", "\n}", "void main()", "\n{", "\n  CBase* base = new CBase();", "\n  CChild1* child1 = new CChild1();", "\n  CChild2* child2 = new CChild2();", "\n  DoPrint(child1);", "\n  DoPrint(child2);", "\n  DoPrint(base);", "  delete base;", "\n  base = child1;", "\n  base->print();", "\n  delete child1;", "\n  delete child2;", "\n}"], "title": "\u5e7f\u5ddeC++/MFC\u8bd5\u9898"},
{"contents": ["\u4e00:\u586b\u7a7a:", "\n1.\t\u73b0\u6709\u7c7bpublic void CCompany,\u8bf7\u5199\u51fa\u5b83\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570_____________,\u6790\u6784\u51fd\u6570___________,\u8fd0\u7b97\u7b26+=\u7684\u91cd\u8f7d\u51fd\u6570____________.", "\n2.\tint i = 10, j = 10, k = 3, k  /=  i + j, k = ___________.", "\n3.\t\u73b0\u6709\u51fd\u6570Setattr(int a, int b, int c). \u5df2\u77e5b\u65e0\u521d\u59cb\u503c, a\u7684\u521d\u59cb\u503c\u7b49\u4e8e1, c\u7684\u521d\u59cb\u503c\u7b49\u4e8e0, \u90a3\u4e48\u6b64\u51fd\u6570\u7684\u58f0\u660e\u5f62\u5f0f\u4e3a:___________________.", "\n4.\t\u5728C\u4e2d,\u9884\u7f16\u8bd1\u5b9a\u4e49\u7684\u5173\u952e\u5b57\u662f__________, \u5e38\u91cf\u5b9a\u4e49\u7684\u5173\u952e\u5b57\u662f:_____________.", "\n5.\t\u5728C\u4e2d,\u68c0\u6d4b\u5b57\u7b26\u4e32\u957f\u5ea6\u7684\u51fd\u6570\u662f:______________, \u62f7\u8d1d\u5b57\u7b26\u4e32\u7684\u51fd\u6570\u662f:_________,", "\n\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u51fd\u6570\u662f:______________,\u8fde\u63a5\u5b57\u7b26\u4e32\u7684\u51fd\u6570\u662f:___________,\u4f7f\u7528\u8fd9\u4e9b\u51fd\u6570\u9700\u8c03\u7528\u7684\u5934\u6587\u4ef6\u662f:________________.", "\n6.\t\u5df2\u77e5\u5b57\u7b26\u4e32char[] topic = \u201chello,hello hello money!\u201d, sizeof(topic) = _________, strlen(topic)=___________.", "\n\u4e8c:\u95ee\u7b54\u9898:", "\n1.\tmain\u51fd\u6570\u7684\u53c2\u6570argc\u548cargv\u7684\u4f5c\u7528\u662f\u4ec0\u4e48?\u5982\u4f55\u83b7\u5f97\u67d0\u4e2a\u5e94\u7528\u7a0b\u5e8f\u7684\u7b2c\u4e09\u4e2a\u547d\u4ee4\u884c\u53c2\u6570.", "\n2.\tif( n == 10)  \u20141.", "\nif( 10 == n)  \u20142", "\n\u54ea\u4e00\u79cd\u5199\u6cd5\u662f\u6b63\u786e\u7684, \u4e3a\u4ec0\u4e48?", "3.\t-\uf0e01.const char *p;", "\n-\uf0e02.char const *p;", "\n-\uf0e03.char * const p;", "\n-\uf0e04 const char * const p;", "\n\u8bf7\u63cf\u8ff0\u4e00\u4e0b\u4ee5\u4e0a\u56db\u79cd\u5199\u6cd5\u7684\u533a\u522b.", "4.\t\u8bf7\u7f16\u5199\u4e00\u4e2a\u7c7b, \u4f7f\u5176\u5177\u6709\u6574\u5f62\u53d8\u91cfi\u7684i++\u4ee5\u53ca++i\u7684\u529f\u80fd.", "\n5.\t\u8bf7\u5199\u51faC++\u4e2d\u7684\u6240\u6709\u8bbf\u95ee\u7ea7\u522b,\u5e76\u6bd4\u8f83\u5b83\u4eec\u7684\u4e0d\u540c.", "\n6.\t\u73b0\u6709\u8868department(dep_Id, depart_name, wage), \u67e5\u8be2\u9664human resource\u4ee5\u5916\u7684\u90e8\u95e8\u540d\u53ca\u8be5\u90e8\u95e8\u7684\u5e73\u5747\u5de5\u8d44,\u5e76\u6309\u5b57\u7b26\u7684\u987a\u5e8f\u5bf9\u67e5\u8be2\u7ed3\u679c\u8fdb\u884c\u6392\u5e8f.", "\u4e09:\u5206\u6790\u9898:", "\n   \u8003\u70b9:\u51fd\u6570\u7684\u6309\u503c\u4f20\u9012\u53ca\u5f15\u7528\u4f20\u9012.", "\n       \u591a\u6001(\u57fa\u7c7b\u6307\u9488\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61, \u57fa\u7c7b\u5f15\u7528\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61).", "\n       \u51fd\u6570\u91cd\u8f7d,", "\n       \u9759\u6001\u6210\u5458(\u9759\u6001\u65b9\u6cd5).", "\u56db.\u7f16\u7a0b\u9898.", "\n   1. \u5df2\u77e5\u5b57\u7b26\u4e32\u64cd\u4f5c\u51fd\u6570\u4e2d\u6709\u5b57\u7b26\u4e32\u62f7\u8d1d\u51fd\u6570strcpy().\u73b0\u6709\u81ea\u5b9a\u4e49\u5b57\u7b26\u4e32\u62f7\u8d1d\u51fd\u6570Strcpy\u7684\u58f0\u660e: char* Strcpy(char* strDest, const char* strSrc).", "\n     -\uf0e01.\u5b9e\u73b0\u8be5\u81ea\u5b9a\u4e49\u5b57\u7b26\u4e32\u62f7\u8d1d\u51fd\u6570.", "\n     -\uf0e02.\u8be5\u51fd\u6570\u5177\u5907\u62f7\u8d1d\u5b57\u7b26\u4e32\u7684\u529f\u80fd,\u4e3a\u4ec0\u4e48\u8981\u8fd4\u56dechar*\u578b\u53d8\u91cf.", "\n   2.\u5df2\u77e5\u4e00\u4e2a\u94fe\u8868\u4e2d\u5b58\u653e\u4e8610\u4e2a\u6570,\u8bf7\u5bf9\u8be5\u94fe\u8868\u8fdb\u884c\u9006\u7f6e.\u4ee5\u4e0b\u662f\u8be5\u94fe\u8868\u7ed3\u70b9\u7684\u58f0\u660e:", "\n      struct node", "\n      {", "\n          int num;", "\n          struct node* next;", "\n}", "  3.\u2013>1.\u4e3a\u4e00\u4e2a\u6574\u578b\u6570\u7ec4\u6dfb\u52a0\u4e00\u7ec4\u968f\u673a\u6570.", "\n   \u2013\uf0e02.\u5206\u533a\u6392\u5e8f:\u4ece\u6570\u7ec4\u4e2d\u4efb\u610f\u9009\u53d6\u4e00\u4e2a\u6570\u4f5c\u4e3a\u53c2\u7167\u6570,\u904d\u5386\u8be5\u6570\u7ec4,\u5c06\u5927\u4e8e\u6b64\u6570\u7684\u6570\u7684\u6570\u653e\u5728\u4e00\u8fb9, \u5c06\u5c0f\u4e8e\u6b64\u6570\u7684\u6570\u7684\u6570\u653e\u5728\u53e6\u4e00\u8fb9, \u4f9d\u6b21\u7c7b\u63a8,\u5b8c\u6210\u6392\u5e8f."], "title": "\u5357\u4eac-\u56db\u8fbe\u8363\u5408C/C++\u7b14\u8bd5\u9898"},
{"contents": ["1\u3001x86,win32,vc++6,\u9ed8\u8ba4\u5c5e\u6027\u7684\u63a7\u5236\u53f0\u5de5\u7a0b\uff1a", "\nclass C1", "\n{", "\npublic:", "\n    virtual int sum(int i1, int i2)", "\n    {", "\n        return (i1 + i2);", "\n    }", "private:", "\n    double m_var1;", "\n    char   m_var2;", "\n};", "char sz[] = \u201cabcd\u201d;", "\n\u95ee\u9898\uff1asizeof(C1) = ?", "\nsizeof(sz) = ?", "2\u3001C++\u4e2d\u7684\u865a\u7ee7\u627f\u662f\u89e3\u51b3\u4ec0\u4e48\u95ee\u9898\u7684\uff1f\u8bf7\u4e3e\u4f8b\u8bf4\u660e\u3002", "3\u3001\u8bf7\u5199\u51fa\u4e0b\u9762\u7684\u8f93\u51fa\uff1a", "\nclass B", "\n{", "\npublic:", "\nvirtual void Print(void)", "\n{", "\n\tprintf(\u201cB::Print\\n\u201d);", "\n}", "\nvirtual void Reprint(void)", "\n{", "\n\tprintf(\u201cB:Reprint\\n\u201d);", "\n}", "\nvoid Algo(void)", "\n{", "\n\tPrint();", "\nReprint();", "\n}", "\n};", "\nclass D : public B", "\n{", "\npublic:", "\nvirtual void Print(void)", "\n{", "\n\tprintf(\u201cD::Print\\n\u201d);", "\n}", "\n};", "void main()", "\n{", "\n\tB *p = new D();", "\n\tp->Print();", "\n\tp->Algo();", "\n}", "4\u3001\u8bf7\u6307\u51fa\u4e0b\u9762\u7a0b\u5e8f\u4e2d\u4e0d\u5408\u7406\u7684\u5730\u65b9\u3002", "\nClass A", "\n{", "\npublic:", "\n\tA(void) : m_nVar2(m_nVar1), m_nVar1(0), m_cVar3(0)", "\n\t{", "\n\t\tm_cVar3 =3;", "\n}", "protected:", "\n\tint\tm_nVar1;", "\n\tint\tm_nVar2;", "\n\tconst int m_cVar3;", "\n};", "5\u3001\u5728WIN32\u5e73\u53f0\u4e0b\uff0c\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u53e5\u67c4\u7684\u5f15\u7528\u8ba1\u6570\u7684\u521d\u59cb\u503c\u662f\u591a\u5c11\uff1f\u5176\u53e5\u67c4\u662f\u5426\u4e3a\u53ef\u7b49\u5f85\u5bf9\u8c61\uff1f\u5185\u6838\u5bf9\u8c61\u548c\u7528\u6237\u5bf9\u8c61\u7684\u663e\u8457\u533a\u522b\u662f\u4ec0\u4e48\uff1f", "6\u3001WaitForSingleObject\u7684\u8d85\u65f6\u53c2\u6570\u4e3a0\u662f\u4f55\u542b\u610f\uff1fSleep\u7684\u8d85\u65f6\u53c2\u6570\u4e3a0\u53c8\u662f\u4f55\u542b\u610f\uff1f", "7\u3001\u8bf7\u5217\u4e3e\u60a8\u5bf9\u8bbe\u8ba1\u6a21\u5f0f\u7684\u7406\u89e3\uff1f\u5e76\u7528\u81ea\u7136\u8bed\u8a00\u4e3e\u4f8b\u8bf4\u660e\u5176\u4e2d\u4e00\u4e2a\u4f8b\u5b50\uff0c\u53e6\u5916\u8bf7\u4f7f\u7528C++\u5199\u51fa\u4e00\u4e2aSingleton\u7684\u4f8b\u5b50\u3002", "8\u3001TCP\u5efa\u7acb\u9700\u8981\u8fdb\u884c\u4e86\u51e0\u6b21\u63e1\u624b\uff1f\u6b63\u5e38\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u7684\u634e\u5e26\u786e\u8ba4\u662f\u4ec0\u4e48\u542b\u610f\uff1fTCP\u7684\u53d1\u9001\u7a97\u53e3\u3001\u62e5\u585e\u7a97\u53e3\u4e0e\u63a5\u53d7\u7a97\u53e3\u7684\u610f\u4e49\u4f55\u5728\uff1f\u4e3a\u4ec0\u4e48UDP\u6ca1\u6709\u8fd9\u4e9b\u611f\u5ff5\u548c\u673a\u5236\uff1f\u97f3\u89c6\u9891\u7b49\u5b9e\u65f6\u6027\u8981\u6c42\u6bd4\u8f83\u9ad8\u7684\u6570\u636e\u5e94\u8be5\u7528\u54ea\u79cd\u4f20\u8f93\u534f\u8bae\u4f5c\u627f\u8f7d\uff1f\u4f60\u90fd\u8003\u8651\u4e86\u54ea\u4e9b\u65b9\u9762\uff1f", "9\u3001\u5982\u679c\u5f80\u4e00\u4e2a\u7bb1\u5b50\u91cc\u503e\u5012\u6c99\u5b50\uff0c\u6bcf\u4e00\u79d2\u949f\u5f80\u7bb1\u5b50\u4e2d\u6ce8\u5165\u7684\u662f\u524d\u9762\u503e\u6ce8\u7684\u603b\u548c\uff0c\u572810\u79d2\u949f\u65f6\u6070\u597d\u5c06\u7bb1\u5b50\u586b\u6ee1\uff0c\u8bf7\u95ee\u7b2c7\u79d2\u949f\u65f6\u6ce8\u5165\u7684\u6c99\u5b50\u662f\u7bb1\u5b50\u5bb9\u91cf\u7684\u591a\u5c11\uff1f", "10\u3001\u8bf7\u968f\u610f\u5217\u4e3e\u60a8\u66fe\u7ecf\u8bfb\u8fc7\u7684\u8ba4\u4e3a\u6bd4\u8f83\u4f18\u79c0\u7684\u4e66\u7c4d\uff08\u8ba1\u7b97\u673a\u7f16\u7a0b\u3001\u8f6f\u4ef6\u8fc7\u7a0b\u3001\u7ba1\u7406\u3001\u52b1\u5fd7\u4e0d\u9650\uff09\u3002"], "title": "\u5317\u4eac\u5a01\u901f\u79d1\u6280\u6709\u9650\u516c\u53f8\u62db\u8058\u7b14\u8bd5\u9898\u2014C++"},
{"contents": ["\u7f16\u8bd1\u73af\u5883\uff1amyeclipse+cdt+MinGW\uff0c\u6ce8\u610f\u4e8b\u9879\uff1a", "1.\u5b89\u88c5MySQL\u65f6\uff0c\u8981\u9009\u4e0a\u5b89\u88c5\u5f00\u53d1\u7ec4\u4ef6", "2.\u628aMySQL\u5b89\u88c5\u76ee\u5f55\u7684MySQL Server 5.0\\lib\\debug\u4e0b\u9762\u7684\u4e24\u4e2a\u6587\u4ef6libmysql.lib\u548clibmysql.dll\uff0c\u590d\u5236\u5230C++\u5de5\u7a0b\u9879\u76ee\u6587\u4ef6\u5939\u91cc", "3.\u628aMySQL\u5b89\u88c5\u76ee\u5f55\u4e0b\u7684include\u6587\u4ef6\u5939\uff0c\u590d\u5236\u5230C++\u5de5\u7a0b\u9879\u76ee\u6587\u4ef6\u5939\u91cc\u3002", "4.\u5982\u679c\u4f7f\u7528vc6.0\uff0c\u53ef\u4ee5\u5728\u7a0b\u5e8f\u4e2d\u8fd9\u6837\u4f7f\u7528\u5e93\u6587\u4ef6", "#pragma comment(lib,\u201dlibmysql.lib\u201d) ", "\u4f46\u73b0\u5728\u7528\u7684\u662fcdt+MinGW\uff0c\u5fc5\u987b\u5728eclipse\u4e2d\u8fdb\u884c\u8bbe\u7f6e", "\u9879\u76ee\u5c5e\u6027->C/C++ Build->Settings->Tool Settings->GCC C++ Compiler->Directories->include paths\u91cc\u6dfb\u52a0\u5934\u6587\u4ef6\u7684\u4f4d\u7f6e\uff0c\u5982\uff1a d:\\workspace\\cproject\\include", "\u9879\u76ee\u5c5e\u6027->C/C++ Build->Settings->Tool Settings->MinGW C++ Linker->Miscellaneous->other objects\u91cc\u6dfb\u52a0 libmysql.lib \u6587\u4ef6\u7684\u4f4d\u7f6e\uff0c\u5982\uff1a d:\\workspace\\cproject\\libmysql.lib", "\u8f7d\u5165C++\u9879\u76ee", "#include "], "title": "c++\u5982\u4f55\u8fde\u63a5mysql"},
{"contents": ["#include<stdio.h>", "\nmain(){", "\nint c[3][3]={1,2,3,4,5,6,7,8,9};", "\nfor(int i=0;i<3;i++)", "\nfor(int j=0;j<3;j++)", "\nprintf(\u201c%ld\\n\u201d,&c", "c\u662f\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u5730\u5740\uff0c*c\u662f\u7b2c\u4e00\u884c\u5143\u7d20\u7684\u9996\u5730\u5740\uff0c\u5176\u5b9e\u7b2c\u4e00\u884c\u5143\u7d20\u7684\u5730\u5740\u5c31\u662f\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u5730\u5740\uff0c\u8fd9\u5bb9\u6613\u7406\u89e3\u3002**c\u662f\u63d0\u9886\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002", "\n\u4e3a\u4ec0\u4e48c\uff0c*c\u7684\u503c\u76f8\u7b49\uff1f", "\nint c\u56e0\u4e3a\u76f4\u63a5\u7528c\u8868\u793a\u6570\u7ec4c[0][0]", "\nprintf(\u201c%ld\\n\u201d,*c[0]);\u8bed\u53e5\u5df2\u5c06\u6307\u9488\u79fb\u5230\u6570\u7ec4\u5934\u3002", "\nint(*c)\u8868\u793ac0\u7684\u503c\u4e3a1\uff0c\u6240\u4ee5\u76f8\u7b49\u3002", "\n\u6570\u7ec4c\u7684\u5b58\u653e\u7a7a\u95f4\u793a\u610f\u5982\u4e0b\uff1a\uff08\u673a\u5668\u4e2d\u662f\u884c\u4f18\u5148\u5b58\u653e\u7684\uff09", "\nc[0][0] c[0][1] c[0][2]", "\nc[1][0] c[1][1] c[1][2]", "\nc[2][0] c[2][1] c[2][2]", "c\u662f\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u540d\uff0c\u5b9e\u9645\u4e0a\u5b83\u662f\u4e00\u4e2a\u6307\u9488\u5e38\u91cf\uff0c\u4e0d\u80fd\u8fdb\u884c\u81ea\u52a0\u3001\u81ea\u51cf\u8fd0\u7b97\uff0c\u5373\uff1ac++\u3001c\u2013\u3001++c\u3001\u2013c", "\n\u90fd\u662f\u4e0d\u5141\u8bb8\u7684\uff1b", "\nc\uff1a \u00a0\u6570\u7ec4\u540d\uff1b\u662f\u4e00\u4e2a\u4e8c\u7ef4\u6307\u9488\uff0c\u5b83\u7684\u503c\u5c31\u662f\u6570\u7ec4\u7684\u9996\u5730\u5740\uff0c\u4e5f\u5373\u7b2c\u4e00\u884c\u5143\u7d20\u7684\u9996\u5730\u5740\uff08\u7b49\u4e8e *c\uff09\uff0c\u4e5f", "\n\u7b49\u4e8e\u7b2c\u4e00\u884c\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u5730\u5740\uff08 & c[0][0]\uff09\uff1b\u53ef\u4ee5\u8bf4\u6210\u662f\u4e8c\u7ef4\u6570\u7ec4\u7684\u884c\u6307\u9488\u3002", "\n*c\uff1a \u7b2c\u4e00\u884c\u5143\u7d20\u7684\u9996\u5730\u5740\uff1b\u662f\u4e00\u4e2a\u4e00\u7ef4\u6307\u9488\uff0c\u53ef\u4ee5\u8bf4\u6210\u662f\u4e8c\u7ef4\u6570\u7ec4\u7684\u5217\u6307\u9488\u3002", "\n**c\uff1a\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u503c\uff1b\u5373\uff1ac[0][0]", "\n\u6240\u4ee5\uff1a", "\nc \u548c *c\u7684\u503c\u662f\u76f8\u7b49\u7684\uff0c\u4f46\u4ed6\u4eec\u4e24\u8005\u4e0d\u80fd\u76f8\u4e92\u8d4b\u503c\uff0c\uff08\u7c7b\u578b\u4e0d\u540c\uff09\uff1b", "\n\uff08c + 1\uff09 \uff1ac\u662f\u884c\u6307\u9488\uff0c\uff08c + 1\uff09\u662f\u5728c\u7684\u57fa\u7840\u4e0a\u52a0\u4e0a\u4e8c\u7ef4\u6570\u7ec4\u4e00\u884c\u7684\u5730\u5740\u957f\u5ea6\uff0c\u5373\u4ece&c[0][0]", "\n\u53d8\u5230\u4e86&c[1][0]\uff1b", "\n\uff08*c + 1\uff09\uff1a*c\u662f\u5217\u6307\u9488\uff0c\uff08*c + 1\uff09\u662f\u5728*c\u7684\u57fa\u7840\u4e0a\u52a0\u4e0a\u4e8c\u6570\u7ec4\u4e00\u4e2a\u5143\u7d20\u7684\u6240\u5360\u7684\u957f\u5ea6\uff0c\u5373\u4ece", "\n&c[0][0]\u53d8\u5230\u4e86&c[0][1]", "\n\u4ece\u800c\uff08c + 1\uff09\u548c\uff08*c + 1\uff09\u7684\u503c\u5c31\u4e0d\u76f8\u7b49\u4e86"], "title": "C++\u6307\u9488\u9762\u8bd5\u9898"},
{"contents": ["\u4f8b\u5982\uff0c\u8f93\u5165\u4e00\u4e2a3\uff0c\u5219 \u6253\u5370\u51fa", "\n1 2 3", "\n8 9 4", "\n7 6 5", "\n\u8f93\u5165\u4e00\u4e2a4\uff0c\u5219 \u6253\u5370\u51fa", "\n1 \u00a0\u00a0\u00a02 \u00a03 \u00a04", "\n12 13 14 5", "\n11 16 15 6", "\n10 \u00a09 \u00a08 \u00a07", "\u7b54\u6848\u5982\u4e0b\uff1a", "#include<stdio.h>", "\n#include<conio.h>", "\n#define N 10", "void printCube(int a[][N],int n);", "void main()", "\n{", "\nint a[N][N],n;", "\nprintf(\u201cinput n:\\n\u201d);", "\nscanf(\u201c%d\u201d,&n);", "\nprintCube(&a[0],n);", "\ngetch();", "\n}", "void printCube(int a[][N],int n)", "\n{", "\nint i,j,round=1;", "\nint m=1;", "\nfor(i=0;i<n;i++)", "\na[0]", "\u00a0"], "title": "\u8f93\u5165\u4e00\u4e2an \uff0c\u7136\u540e\u5728\u5c4f\u5e55\u4e0a\u6253\u5370\u51faNxN \u7684\u77e9\u9635\uff01"},
{"contents": ["1\u3001 \u5173\u952e\u5b57\u7406\u89e3\uff1aconst\u3001static\u3001volatile\u3001sizeof\u3001malloc/free\u3001new/delete\u3001extern\u3001#ifndef/#endif\u3001virtual\u3001define\u3001typedef\u3001namespace\u7b49\uff0c\u91cd\u70b9\u662fsizeof\u3001virtual\u3001const\u3002", "\n2\u3001 \u5173\u4e8esizeof\u7ed3\u679c\uff0c\u8bf7\u6ce8\u610f\u5185\u5b58\u5bf9\u9f50\u95ee\u9898\u3002", "\n3\u3001 \u5173\u4e8evirtual\uff0c\u8bf7\u7406\u89e3\u865a\u51fd\u6570\u3001\u7eaf\u865a\u51fd\u6570\u3001\u865a\u51fd\u6570\u8868\u3001\u865a\u7ee7\u627f\uff0c\u9009\u62e9\u6027\u4e86\u89e3\u865a\u7ee7\u627f\u65f6\u7236\u5b50\u7c7b\u865a\u51fd\u6570\u8868\u7684\u5185\u5b58\u7ed3\u6784\uff0c\u5e76\u4e86\u89e3\u6b64\u65f6sizeof\u7ed3\u679c\u3002", "\n4\u3001 \u6307\u9488\uff0c\u80af\u5b9a\u7684\u91cd\u96be\u70b9\u5566\uff0c\u9009\u62e9\u6027\u4e86\u89e3\u667a\u80fd\u6307\u9488\u3001\u53e5\u67c4\u3002", "\n5\u3001 \u9762\u5411\u5bf9\u8c61\uff0c\u6ce8\u610f\u7236\u5b50\u7c7b\u6784\u9020\u3001\u6790\u6784\u51fd\u6570\u7684\u8c03\u7528\u987a\u5e8f\uff0c\u5176\u4e2d\u6d89\u53ca\u865a\u7ee7\u627f\u7684\u60c5\u51b5\u3002", "\n6\u3001 \u7ee7\u627f\uff0cC++\u652f\u6301\u591a\u7ee7\u627f\uff0c\u7406\u89e3\u865a\u7ee7\u627f\u4ea7\u751f\u7684\u5fc5\u8981\uff0c\u533a\u5206\u4f7f\u7528\u7ee7\u627f\u548c\u7ec4\u5408\u7684\u60c5\u51b5\u3002", "\n7\u3001 \u591a\u6001\uff0c\u533a\u5206\u8986\u76d6\uff08\u7f16\u8bd1\u65f6\u7ed1\u5b9a\uff0c\u540c\u540d\u51fd\u6570\uff0c\u4e0e\u591a\u6001\u65e0\u5173\uff09\u4e0e\u91cd\u8f7d\uff08\u8fd0\u884c\u65f6\u7ed1\u5b9a\uff0c\u865a\u51fd\u6570\uff0c\u5b9e\u73b0\u591a\u6001\uff09\u3002", "\n8\u3001 \u5b57\u7b26\u4e32\u5904\u7406\uff0c\u8fd9\u4e2a\u592a\u591a\u4e86\uff0c\u5e38\u4e0e\u7b97\u6cd5\u7ed3\u5408\uff0c\u4e3e\u51e0\u4e2a\u6817\u5b50\uff0c\u6309\u5355\u8bcd\u7ffb\u8f6c\u3001\u5224\u65adA\u662f\u5426\u5305\u542bB\u3001\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u5b57\u6bcd\u7684\u6240\u6709\u6392\u5217\u6216\u7ec4\u5408\u7b49\u3002", "\n9\u3001 \u533a\u5206char* str1=\u201dhello\u201d;\u4e0echar str2[]=\u201dhello\u201d\u7684\u533a\u522b\uff08\u957f\u5ea6\u548c\u5185\u5b58\u4e2d\u4f4d\u7f6e\uff09\u3002", "\n10\u3001\u6587\u4ef6\u5904\u7406\uff0c\u6253\u5f00\u3001\u5173\u95ed\u3001\u8bfb\u3001\u5199\u603b\u8981\u4f1a\u5427\u3002", "\n11\u3001\u8bbe\u8ba1\u6a21\u5f0f\u3002", "\n12\u3001\u8f83\u4e3a\u719f\u7ec3\u7684\u4f7f\u7528STL\u5bb9\u5668\uff0c\u5982vector\u3001queue\u3001deque\u3001stack\u3001set\u7b49\u3002"], "title": "C/C++\u57fa\u7840\u9762\u8bd5\u9898"},
{"contents": ["1.\u4ec0\u4e48\u662fCOM?\u4f60\u600e\u4e48\u7406\u89e3COM?", "\n\u7b54\uff1aComponents Object Model(COM)\u662f\u8f6f\u4ef6\u7ec4\u4ef6\u4e92\u76f8\u901a\u4fe1\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u5b83\u662f\u4e00\u79cd\u4e8c\u8fdb\u5236\u548c\u7f51\u7edc\u6807\u51c6\uff0c\u5141\u8bb8\u4efb\u610f\u4e24\u4e2a\u7ec4\u4ef6\u4e92\u76f8\u901a\u4fe1\uff0c\u800c\u4e0d\u7ba1\u5b83\u4eec\u662f\u5728\u4ec0\u4e48\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c(\u53ea\u8981\u8ba1\u7b97\u673a\u662f\u76f8\u8fde\u7684)\uff0c\u4e0d\u7ba1\u5404\u8ba1\u7b97\u673a\u8fd0\u884c\u7684\u662f\u4ec0\u4e48\u64cd\u4f5c\u7cfb\u7edf(\u53ea\u8981\u8be5\u7cfb\u7edf\u652f\u6301COM),\u4e5f\u4e0d\u7ba1\u8be5\u7ec4\u4ef6\u662f\u7528\u4ec0\u4e48\u8bed\u8a00\u7f16\u5199\u7684\u3002COM\u8fd8\u63d0\u4f9b\u4e86\u4f4d\u7f6e\u900f\u660e\u6027\uff1a\u5f53\u4f60\u7f16\u5199\u7ec4\u4ef6\u65f6\uff0c\u5176\u4ed6\u7ec4\u4ef6\u662f\u8fdb\u7a0b\u5185DLL\u3001\u672c\u5730EXE\uff0c\u8fd8\u662f\u4f4d\u4e8e\u5176\u4ed6\u8ba1\u7b97\u673a\u4e0a\u7684\u7ec4\u4ef6\uff0c\u5bf9\u7528\u6237\u800c\u8a00\u90fd\u65e0\u6240\u8c13\u3002", "\n\u9996\u5148\uff0cCOM\u5bf9\u8c61\u88ab\u5f88\u597d\u5730\u5c01\u88c5\u8d77\u6765\u3002\u4f60\u65e0\u6cd5\u8bbf\u95ee\u5bf9\u8c61\u7684\u5185\u90e8\u5b9e\u73b0\u7ec6\u8282\uff0c\u4f60\u65e0\u6cd5\u77e5\u9053\u5bf9\u8c61\u4f7f\u7528\u4e86\u4ec0\u4e48\u6570\u636e\u7ed3\u6784\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u63a5\u53e3\u6765\u8bbf\u95eeCOM\u5bf9\u8c61\u91cc\u9762\u7684\u65b9\u6cd5\u3002", "\n\u6982\u62ec\u5730\u8bf4\uff0cCOM\u5177\u6709\u5982\u4e0b\u4e00\u4e9b\u4f18\u8d8a\u6027\uff1a(1)\u7f16\u7a0b\u6280\u672f\u96be\u5ea6\u548c\u5de5\u4f5c\u91cf\u964d\u4f4e\uff0c\u5f00\u53d1\u5468\u671f\u53d8\u77ed\uff0c\u5f00\u53d1\u6210\u672c\u964d\u4f4e\u3002(2)\u5b9e\u73b0\u5206\u5c42\u6b21\u7684\u7f16\u7a0b\uff0c\u4ece\u800c\u4fc3\u8fdb\u4e86\u8f6f\u4ef6\u7684\u4e13\u4e1a\u5316\u751f\u4ea7\u3002(3)\u8f6f\u4ef6\u7684\u590d\u7528\u7387\u63d0\u9ad8\uff0c\u4f7f\u8f6f\u4ef6\u7684\u4f7f\u7528\u6548\u7387\u5f97\u5230\u63d0\u9ad8\u5e76\u5ef6\u957f\u4e86\u4f7f\u7528\u5bff\u547d\u3002", "\n2.COM\u662f\u63a5\u53e3\u4e48\uff1f", "\n\u7b54\uff1a(1)COM\u4e0d\u662f\u63a5\u53e3\uff0c\u4e5f\u4e0d\u662f\u5bf9\u8c61\uff0c\u5b83\u662f\u4e00\u79cd\u6807\u51c6\u3002(2)\u7b26\u5408COM\u6807\u51c6\u7684\u5bf9\u8c61\u5c31\u662fCOM\u5bf9\u8c61\u3002\u5176\u5b9eCOM\u5bf9\u8c61\u65e0\u975e\u662f\u5b9e\u73b0\u4e86\u5f88\u591a\u63a5\u53e3\u7684\u5bf9\u8c61\u800c\u5df2\u3002(3)COM\u5bf9\u8c61\u5fc5\u987b\u5b9e\u73b0IUnKnown\u63a5\u53e3,\u8fd9\u4e2a\u63a5\u53e3\u662f\u7ba1\u7406COM\u5bf9\u8c61\u751f\u547d\u5468\u671f\u7684\u3002\u5f53COM\u5bf9\u8c61\u4e0d\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u63a5\u53e3\u5b9a\u4e49\u7684\u65b9\u6cd5\u8d1f\u8d23\u91ca\u653e\u5185\u5b58\u3002(4)QueryInterface(QI)\uff0c\u5373\u6240\u8c13\u67e5\u8be2\u63a5\u53e3\u3002\u7531\u4e8eCOM\u5bf9\u8c61\u6709\u5f88\u591a\u4e2a\u63a5\u53e3\uff0c\u4e0d\u540c\u7684\u63a5\u53e3\u7ba1\u7406\u7740COM\u7684\u4e0d\u540c\u7c7b\u578b\u7684\u65b9\u6cd5\u3002\u56e0\u6b64\u4ece\u4e00\u4e2a\u63a5\u53e3\u53ef\u4ee5\u4f7f\u7528\u7684\u65b9\u6cd5\u8f6c\u5230\u53e6\u4e00\u4e2a\u63a5\u53e3\u53ef\u4ee5\u4f7f\u7528\u7684\u65b9\u6cd5\u7684\u8fc7\u7a0b\u79f0\u4e3aQI,\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u7531Idispatch\u63a5\u53e3\u7ba1\u7406\u7684\u3002(5)GUIDs\u6bcf\u4e2a\u7ec4\u4ef6\u90fd\u6709\u4e00\u4e2a\u72ec\u4e00\u65e0\u4e8c\u7684\u6807\u8bc6\uff0c\u8fd9\u4e2a\u6807\u8bc6\u7b26\u5c31\u662fCOM\u7ec4\u4ef6\u7684\u8eab\u4efd\uff0c\u5b83\u662f\u4e00\u4e2a128\u4f4d\u7684\u6570\u5b57\uff0c\u7531\u7cfb\u7edf\u81ea\u7531\u5206\u914d\u3002(6)\u4e00\u4e2aCOM\u5bf9\u8c61\u53ef\u4ee5\u6709\u591a\u4e2a\u63a5\u53e3\uff0c\u4e00\u4e2a\u63a5\u53e3\u4e5f\u5b8c\u5168\u53ef\u4ee5\u88ab\u591a\u4e2aCOM \u5bf9\u8c61\u5b9e\u73b0\u3002(7)\u63a5\u53e3\u5206\u4e3a\u4e24\u79cd\uff1a\u5185\u7f6e\u63a5\u53e3\u548c\u5916\u7f6e\u63a5\u53e3\u3002\u524d\u4e00\u79cd\u5b9a\u4e49\u7684\u662fCOM\u5bf9\u8c61\u7684\u65b9\u6cd5\u548c\u5c5e\u6027\uff0c\u7528implements\u5b9e\u73b0\uff0cCOM\u5bf9\u8c61\u5fc5\u987b\u5b9e\u73b0\u6240\u6709\u7684\u63a5\u53e3\u5185\u5bb9\uff1b\u540e\u4e00\u79cd\u5b9a\u4e49\u7684\u662fCOM\u5bf9\u8c61\u7684\u4e8b\u4ef6\uff0c\u7528withEvents\u5b9e\u73b0\uff0c\u8fd9\u79cd\u63a5\u53e3\u5728\u5b9e\u73b0\u7684\u65f6\u5019\u4e0d\u5fc5\u5b9e\u73b0\u6240\u6709\u7684\u5185\u5bb9\u3002(8)COM\u7ec4\u4ef6\u5fc5\u987b\u88ab\u6ce8\u518c\u540e\u624d\u80fd\u4f7f\u7528\uff0c\u5b83\u5f97\u5230\u6ce8\u518c\u8868\u90a3\u91cc\u53bb\u767b\u8bb0\u201c\u6237\u53e3\u201d\u3002", "\n3.COM\u6709\u4ec0\u4e48\u7f3a\u9677\uff1f", "\n\u7b54\uff1aCOM\u7ec4\u4ef6\u5f88\u4e0d\u9519\uff0c\u53ef\u662f\u5b83\u4e5f\u6709\u81f4\u547d\u7684\u7f3a\u9677\uff0c\u8fd9\u4e2a\u7f3a\u9677\u5c31\u6765\u81ea\u5b83\u672c\u8eab\u3002COM\u662f\u53ef\u4ee5\u88ab\u91cd\u7528\u7684\uff0cCOM\u5bf9\u8c61\u7684\u5b9e\u73b0\u8fc7\u7a0b\u4e5f\u53ef\u4ee5\u88ab\u4fee\u6539\u5347\u7ea7(\u5b9a\u4e49\u662f\u4e0d\u80fd\u4fee\u6539\u7684)\u3002\u5982\u679c\u4e24\u4e2a\u7a0b\u5e8f\u90fd\u4f7f\u7528\u4e00\u4e2aCOM\u5bf9\u8c61\uff0c\u800c\u8fd9\u4e2aCOM\u7ec4\u4ef6\u5347\u7ea7\u7684\u8bdd\uff0c\u5f88\u53ef\u80fd\u4f1a\u51fa\u73b0\u67d0\u4e2a\u7a0b\u5e8f\u65e0\u975e\u4f7f\u7528\u65b0\u7ec4\u4ef6\u7684\u60c5\u51b5\uff0c\u8fd9\u88ab\u79f0\u4e3a\u201cDLL  HELL\u201d\uff08DLL\u707e\u96be\uff09\u3002\u6709\u65f6\u5019\u6211\u4eec\u5b89\u88c5\u4e86\u65b0\u8f6f\u4ef6\u540e\u5f88\u591a\u522b\u7684\u8f6f\u4ef6\u5c31\u65e0\u6cd5\u4f7f\u7528\u4e86\uff0c\u5f88\u5927\u7a0b\u5ea6\u4e0a\u5c31\u662f\u56e0\u4e3a\u8fd9\u4e2aDLL HELL\u3002"], "title": "Com\u7ec4\u4ef6\u65b9\u9762\u9762\u8bd5\u9898"},
{"contents": ["1\u3002\u7ed9\u5b9a\u4e0b\u9762\u7684\u4ee3\u7801:", "class Graph{", "public:", "Graph() { s_gCount++; }", "virtual ~Graph() { s_gCount\u2013;}", "virtual int drawOut() = 0;", "\u00a0", "static int getTotalCount() { return s_gCount; }", "protected:", "int m_x;", "int m_y;", "static int s_gCount;", "};", "\u00a0", "\u56de\u7b54\u4e0b\u5217\u95ee\u9898\uff1a(\u54045\u5206)", "\u00a0", "1\uff09\u8fd9\u4e2a\u7c7b\u80fd\u5426\u751f\u6210\u5b9e\u4f8b\uff0c\u4e3a\u4ec0\u4e48\uff1f", "2\uff09\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u6709\u4ec0\u4e48\u9519\u8bef\uff1f", "3\uff09\u5982\u679c\u6709\u4e00\u4e2aRectangle\u7c7b\u516c\u5171\u7ee7\u627f\u8be5\u7c7b\uff0c\u90a3\u4e48s_gCount\u5bf9Rectangle\u7684\u6210\u5458\u5c5e\u6027\u662f\u4ec0\u4e48\uff1f", "4\uff09\u5bf9Graph\u53ca\u5176\u5b50\u7c7b\u7684\u8ba1\u6570\u662f\u5426\u6709\u6548\uff0c\u5982\u679c\u65e0\u6548\u5e94\u8be5\u91c7\u53d6\u4ec0\u4e48\u63aa\u65bd\uff1f", "5\uff09\u8bf7\u753b\u51fa\u8be5\u7c7b\u7684\u5185\u5b58\u5e03\u5c40\u7ed3\u6784\u793a\u610f\u56fe", "\u00a0", "\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "2\u3002\u7ed9\u5b9a\u4e0b\u9762\u7684\u4ee3\u7801:", "class A", "{", "int a;", "};", "class AA : public A", "{", "int aa;", "};", "class X : public virtual A", "{", "int x;", "};", "class Y : public virtual A", "{", "int y;", "};", "class Z : public X, public Y {", "int z;", "};", "\u56de\u7b54\u4e0b\u5217\u95ee\u9898\uff1a(\u54045\u5206)", "\u00a0", "1\uff09\u8bf7\u753b\u51fa\u4e0a\u8ff05\u4e2a\u7c7b\u7684UML\u7c7b\u56fe", "2\uff09\u8bf7\u753b\u51faA\u3001AA\u3001X\u3001Z\u7684\u5185\u5b58\u5e03\u5c40\u7ed3\u6784\u793a\u610f\u56fe", "\u00a0", "\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\u00a0", "3\u3002\u7ed9\u5b9a\u4e0b\u9762\u4ee3\u7801:", "#include <stdio.h>", "#include <stdlib.h>", "typedef struct _AAA", "{", "int a;", "}AAA, *PAAA;", "class CAAA", "{", "public:", "CAAA() { m_a.a = 0; }", "CAAA(CAAA& in) { printf(\u201dCAAA(CAAA& in)\\n\u201d); }", "CAAA(AAA in) { printf(\u201dCAAA(AAA in)\\n\u201d); }", "CAAA(int in) { printf(\u201dCAAA(int in)\\n\u201d); }", "private:", "AAA m_a;", "public:", "operator PAAA ()", "{", "return &m_a;", "}", "};", "void test0(PAAA pa)", "{", "printf(\u201dtest0\\n\u201d);", "}", "void test1(CAAA ca)", "{", "printf(\u201dtest1\\n\u201d);", "}", "void test2(CAAA ca)", "{", "printf (\u201dtest2\\n\u201d);", "}", "void main(void)", "{", "CAAA a;", "test0 (a);", "AAA b;", "test1 (b);", "int i=0;", "test2 (i);", "}", "\u00a0", "\u8bf7\u56de\u7b54\u4e0b\u5217\u95ee\u9898\uff1a(\u54045\u5206)", "1\uff09\u627e\u51fa\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef", "2\uff09test0\u51fd\u6570\u58f0\u660e\u4f20\u5165\u7684\u53c2\u6570\u4e3aPAAA\u7c7b\u578b\uff0c\u800c\u5728main\u51fd\u6570\u4e2d\uff0c\u5b9e\u9645\u4f20\u5165\u7684\u662fCAAA\u7c7b\u578b\uff0c\u8fd9\u662f\u5426\u662f\u4e00\u4e2a\u9519\u8bef\uff1f\u5982\u679c\u4e0d\u662f\uff0c\u8bf7\u89e3\u91ca\u539f\u56e0\u3002", "\u00a0", "4\u3002\u56de\u7b54\u4e0b\u5217\u95ee\u9898\uff1a", "1\uff09C++\u4e2d\u7684struct\u548cclass\u7c7b\u578b\u6709\u4ec0\u4e48\u533a\u522b\uff1f(2\u5206)", "2\uff09\u5047\u5b9a\u4e00\u4e2aclass\u540d\u4e3aTest\uff0c\u5177\u6709\u6784\u9020\u51fd\u6570\u3001\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3001operator =\uff0c\u90a3\u4e48", "Test a;", "Test b=a;", "\u5206\u522b\u6267\u884c\u7684\u662f\u54ea\u4e00\u4e2a\u51fd\u6570\uff1f(2\u5206)", "3\uff09C++\u7a0b\u5e8f\u8fdb\u884c\u94fe\u63a5\u65f6\u662f\u5426\u5fc5\u987b\u94fe\u63a5stdc++\u51fd\u6570\u5e93\uff0c\u5982\u679c\u4e0d\u5fc5\u987b\u60c5\u51b5\u4e0b\u4e0d\u9700\u8981\uff0c\u4ec0\u4e48\u60c5", "\u00a0", "\u51b5\u4e0b\u9700\u8981\uff1f(2\u5206)", "4\uff09\u4f60\u6240\u719f\u6089\u7684\u5173\u4e8eC++\u7684\u4e2d\u82f1\u6587\u7ecf\u5178\u4e66\u7c4d\u90fd\u6709\u54ea\u4e9b\uff0c\u5b83\u4eec\u5206\u522b\u90fd\u4fa7\u91cd\u4e8e\u4ec0\u4e48\u65b9\u9762\uff1f(5\u5206)", "\u00a0", "\u4e94\u3001QT\u7f16\u7a0b\u3002\u4efb\u90092\u9898\u5b8c\u6210\u3002(\u540420\u5206)", "\u8981\u6c42\uff1a\u6309\u7167\u7efc\u5408\u7f16\u7a0b\u9898\u76ee\u7684\u8981\u6c42\u7f16\u5199\u4ee3\u7801\u548c\u6587\u6863\u3002", "1.\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684clock\u63a7\u4ef6, \u8981\u6c42\u4eceQWidget\u7ee7\u627f, \u6709\u4e00\u4e2a\u6307\u9488\u548c\u8868\u76d8,\u6307\u9488\u6bcf12\u79d2\u8f6c\u4e00\u5708,\u5e76\u4e14\u53ef\u4ee5\u7528\u9f20\u6807\u5de6\u952e,\u8d77\u52a8\u548c\u505c\u6b62\u6307\u9488\u7684\u8f6c\u52a8.", "\u00a0", "2.\u7ed9\u5b9a\u4e00\u4e2adesigner\u751f\u6210\u7684UI\u6587\u4ef6, \u8bfb\u53d6\u6307\u5b9a\u540d\u5b57\u63a7\u4ef6\u7684\u51e0\u4f55\u4fe1\u606f,\u8ba1\u7b97\u51fa\u8be5\u63a7\u4ef6\u7684\u9762\u79ef\u5927\u5c0f.(\u7528Dom\u548cSAX\u90fd\u53ef)", "\u00a0", "3.\u8bbe\u8ba1\u4e00\u4e2a\u7a0b\u5e8f, \u5efa\u7acb\u4e2a\u4eba\u4fe1\u606f\u5e93,\u5305\u62ec:\u59d3\u540d,\u5e74\u9f84,\u6027\u522b,\u4f4f\u5740.\u5efa\u7acb\u5b8c\u4e4b\u540e\u53ef\u4ee5\u67e5\u5904\u7279\u5b9a\u4eba\u7684\u4fe1\u606f,\u7528designer\u8bbe\u8ba1\u4f60\u7684\u754c\u9762, \u4e0d\u8981\u6c42\u628a\u4fe1\u606f\u5e93\u5b58\u5728\u786c\u76d8\u4e0a.", "\u00a0", "4.\u628a\u7b2c\u4e09\u9898\u53d8\u6210\u56fd\u9645\u5316\u7a0b\u5e8f, \u8981\u6c42\u4e24\u79cd\u8bed\u8a00\u4e2d\u6587\u548c\u82f1\u6587.\u9700\u8981\u7528qt-linquist\u7b49\u5de5\u5177.", "\u00a0", "5. \u7528QSocket\u5b9e\u73b0\u4e24\u53f0\u4e0d\u540c\u673a\u5668\u95f4\u7684\u6536\u53d1, \u6536\u53d1\u8981\u6c42\u7528\u6237\u52a8\u6001\u8f93\u5165.", "\u63d0\u793a\uff1a\u4ee5\u4e0a\u5404\u9898\u9700\u5728qt3.0\u4ee5\u4e0a\u5b9e\u73b0,\u63a8\u8350\u7528qt-3.1.1,\u4e0d\u9650\u6b62qt-embedded\u6216qt-desktop."], "title": "C++\u9898\u76ee"},
{"contents": ["1. What\u2019s overload function in C++?", "\u00a0", "2. A. What\u2019s inline function in C++?", "B. When would you use inline function?", "C. Please write sample code.", "\u00a0", "3. Which of the following are legal? For those usages that are illegal, explain why.", "const int buf;", "int cnt = 0;", "const int sz = cnt;", "cnt++; sz++;", "\u00a0", "4. Please point out the errors in the following C++ code. And why?", "switch ( ival )", "{", "case 1, 3, 5, 7, 9:", "oddcnt++;", "break;", "case 2, 4, 6, 8, 10:", "evencnt++;", "break;", "}", "\u00a0", "5. Given the following base and derived class definitions:", "class Base", "{", "public:", "foo ( int );", "protected:", "int _bar;", "double _foo_bar;", "};", "class Derived: public Base", "{", "public:", "foo ( string );", "bool bar ( Base *pb );", "void foobar ();", "protected:", "string _bar;", "};", "Identify what is wrong with each of the following code fragments and how each might be fixed:", "(a) Derived d; d.foo ( 1024 );", "(b) void Derived :: foobar () { _bar=1024; }", "(c) bool Derived :: bar { Base *pb }", "{ return _foo_bar = = pb->_foo_bar; }", "\u00a0", "6. A. Please list all the design patterns you known.", "B. Please explain the pattern of \u201cFactory\u201d and give an example if you can.", "\u00a0", "7. A. Please list all the sorting algorithms you known.", "B. Please use pseudo code to describe the algorithm of \u201cQuick Sort\u201d.", "\u00a0", "8. Please answer the following questions:", "A. What\u2019s process scheduling and list all scheduling algorithms you known.", "B. What\u2019s the \u201cRace Condition\u201d?", "C. Please explain the diagram of process state change.", "\u00a0", "\u00a0"], "title": "\u660e\u57fa\uff08BENQ\uff092012\u6821\u56ed\u62db\u8058\u7b14\u8bd5\u9898\u4e4bC++\u65b9\u5411"},
{"contents": ["C\u8bed\u8a00\u98ce\u683c\u7684\u4ee3\u7801\uff1a", "\n", "\u00a0"], "title": "\u7528\u9012\u5f52\u5b9e\u73b0\u94fe\u8868\u9006\u5e8f"},
{"contents": ["1. [0,1], random generator gives even distributed number (x). How to get a linear distributed series (y), such that the probability of 0 is 1, and the probability of 1 is 0. (that is, p(y) = 1-y)\u3002", "\u00a0", "2. \u4e00\u4e2aN*N\u7684\u65b9\u9635\uff0c\u6bcf\u4e2a\u683c\u5b50\u91cc\u653e\u4e00\u4e2a\u786c\u5e01\u3002\u7532\u4e59\u8f6e\u6d41\u53d6\uff1a\u9009\u5b9a\u4e00\u679a\u786c\u5e01\u540e\uff0c\u5fc5\u987b\u53d6\u8d70\u5b83\u4e0a\u65b9,\u53f3\u65b9\u548c\u53f3\u4e0a\u65b9\u7684\u6240\u6709\u786c\u5e01\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u3002\u62ff\u8d70\u6700\u5de6\u4e0b\u89d2\u90a3\u4e2a\u8f93\u3002\u95ee\u8c01\u6709\u5fc5\u80dc\u7b56\u7565\uff1f2*N\uff1f\u4e00\u822cM*N?", "\u00a0", "3. Given a 3\u00d73 square:", "\n1 2 3", "\n4 5 6", "\n7 8 9", "\nYou are allowed to do circular shift on any row, and circular shift on any column, as many times as you please. Question: can you switch position of 1 and 2 with the allowed circular shifts?", "\u00a0", "4. \u4e24\u4e2a\u73a9\u5bb6\uff0c \u4e00\u5806\u77f3\u5934\uff0c\u5047\u8bbe\u591a\u4e8e100\u5757, \u4e24\u4eba\u4f9d\u6b21\u62ff\uff0c \u6700\u540e\u62ff\u5149\u8005\u8d62\uff0c \u89c4\u5219\u662f", "\n1. \u7b2c\u4e00\u4e2a\u4eba\u4e0d\u80fd\u4e00\u6b21\u62ff\u5149\u6240\u6709\u7684", "\n2. \u7b2c\u4e00\u6b21\u62ff\u4e86\u4e4b\u540e\uff0c \u6bcf\u4eba\u6bcf\u6b21\u6700\u591a\u53ea\u80fd\u62ff\u5bf9\u65b9\u524d\u4e00\u6b21\u62ff\u7684\u6570\u76ee\u7684\u4e24\u500d", "\n\u6c42\u5148\u62ff\u8005\u5fc5\u80dc\u7b56\u7565, \u5982\u679c\u6709\u7684\u8bdd", "\u00a0", ". 100\u5c42\u697c\u6254\u9e21\u86cb\u95ee\u9898", "\u00a0", "6. \u6709n\u4e2a\u623f\u95f4\uff0c\u5c0f\u5077\u6bcf\u5929\u5077\u4e00\u95f4\uff0c\u5077\u7684\u89c4\u5f8b\u7b80\u5355\u8bf4\u5c31\u662f\u968f\u673a\u884c\u8d70\uff0c\u5982\u679c\u4eca\u5929\u5077\u4e86\u7b2ci\u95f4\u5c4b\u5b50\uff0c\u660e\u5929\u6709\u4e00\u534a\u7684\u51e0\u7387\u5077i-1\uff0c\u4e00\u534a\u7684\u51e0\u7387\u5077i+1\uff0c\u6ce8\u610f\u5982\u679c\u521a\u597d\u5077\u5230\u4e86\u8fb9\u754c\u4e0a\uff0c\u90a3\u4e48\u7b2c\u4e8c\u5929\u53ea\u6709\u552f\u4e00\u7684\u9009\u62e9\u3002\u5982\u679c\u4f60\u662f\u8b66\u5bdf\uff0c\u4f60\u53ea\u80fd\u6bcf\u5929\u9009\u62e9\u4e00\u4e2a\u623f\u95f4\u8e72\u5b88\uff0c\u5e76\u4e14\u8d3c\u7684\u624b\u6bb5\u76f8\u5f53\u9ad8\u660e\uff0c\u5077\u4e86\u4e00\u4e2a\u623f\u95f4\u540e\uff0c\u6ca1\u6709\u4efb\u4f55\u4eba\u80fd\u53d1\u89c9\u8be5\u623f\u95f4\u662f\u5426\u66fe\u7ecf\u88ab\u5077\u8fc7\u3002", "\u00a0", "7. Given 3 prime numbers and an integer k, find the kth number if all the nos which are having these 3 prime numbers as their factors are arranged in increasing order.", "\nEg. prime numbers \u2013 2,3,5", "\nThe increasing sequence will be 2,3,4,5,6,8,9\u2026", "\u00a0", "8. \u7ed9\u5b9a\u4e00\u79cd\u6982\u7387\u53d1\u751f\u5668\uff0c\u51fa1\u7684\u6982\u7387\u662fp,\u51fa0\u7684\u6982\u7387\u662f1-p. \u5982\u679c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u6982\u7387\u90fd\u662f1/2\u7684\u6982\u7387\u53d1\u751f\u5668\uff0c\u8be5\u600e\u4e48\u505a\uff1f \u5982\u679c\u662f1/n\u7684\uff0c\u600e\u4e48\u505a\uff1f", "\u00a0", "9. \u4e00\u6761\u76f4\u7ebf\u4e0a\u670940\u4e2a\u7535\u7ebf\u6746\uff0c\u6bcf\u4e2a\u95f4\u96945\u7c73\u3002\u73b0\u5728\u8981\u628a9\u4e2a\u706f\u6ce1\u62e7\u4e0a\u53bb\uff0c\u6bcf\u4e2a\u7535\u7ebf\u6746\u4e0a\u81f3\u591a\u4e00\u4e2a\uff0c\u800c\u4e14\u4e0d\u80fd\u6709\u4e09\u4e2a\u8fd9\u6837\u7684\u706f\u6ce1\uff0c\u6bd4\u5982\u8bf4A, B, C, AB\u95f4\u7684\u8ddd\u79bb\u7b49\u4e8eBC\u95f4\u7684\u8ddd\u79bb\u3002\u95ee\u8fd99\u4e2a\u706f\u6ce1\u6709\u591a\u5c11\u79cd\u653e\u6cd5\uff1f", "10. you have a die with 10 sides, number ranging from 1 to 10. Each number comes up with equal possibility. You sum the num you get until the sum is greater than 100. What\u2019s the expected value of your sum?", "\u00a0", "11. \u4eca\u6709\u82e5\u5e72\u5806\u706b\u67f4\uff0c\u4e24\u4eba\u4f9d\u6b21\u4ece\u4e2d\u62ff\u53d6\uff0c\u89c4\u5b9a\u6bcf\u6b21\u53ea\u80fd\u4ece\u4e00\u5806\u4e2d\u53d6\u82e5\u5e72\u6839\uff0c", "\n\u53ef\u5c06\u4e00\u5806\u5168\u53d6\u8d70\uff0c\u4f46\u4e0d\u53ef\u4e0d\u53d6\uff0c\u6700\u540e\u53d6\u5b8c\u8005\u4e3a\u80dc\uff0c\u6c42\u5fc5\u80dc\u7684\u65b9\u6cd5\u3002", "12. \u4eca\u6709\u82e5\u5e72\u5806\u706b\u67f4\uff0c\u4e24\u4eba\u4f9d\u6b21\u4ece\u4e2d\u62ff\u53d6\uff0c\u89c4\u5b9a\u6bcf\u6b21\u53ea\u80fd\u4ece\u4e00\u5806\u4e2d\u53d6\u82e5\u5e72\u6839\uff0c\u53ef", "\n\u5c06\u4e00\u5806\u5168\u53d6\u8d70\uff0c\u4f46\u4e0d\u53ef\u4e0d\u53d6\uff0c\u6700\u540e\u53d6\u5b8c\u8005\u4e3a\u8d1f\uff0c\u6c42\u5fc5\u80dc\u7684\u65b9\u6cd5\u3002", "13.", "Q1: \u5728\u4e00\u4e2a\u5706\u4e0a\u968f\u610f\u9009\u53d6\u4e09\u4e2a\u70b9\uff0c\u4e09\u4e2a\u70b9\u5728\u540c\u4e00\u534a\u5706\u4e0a\u7684\u6982\u7387\u00a0 (3/4)", "\nQ2: \u5728\u5706\u4e0a\u968f\u610f\u9009\u53d6ABCD\u56db\u4e2a\u70b9,AB\u548cCD\u4ea4\u53c9\u7684\u6982\u7387 (1/3)", "\u00a0", "14. \u73b0\u670950\u4e2a\u7ea2\u7403\uff0c50\u4e2a\u9ed1\u7403\uff0c\u8fd8\u6709\u4e24\u4e2a\u7a7a\u6876\u3002\u73b0\u5728\u628a\u8fd9\u4e9b\u7403\u653e\u5230\u4e24\u4e2a\u7a7a\u6876\u91cc\u9762\u3002\u4e00\u4e2a\u4eba\uff0c\u968f\u673a\u7684\u4ece\u4efb\u4e00\u4e2a\u6876\u4e2d\u62ff\u4e00\u4e2a\u7403\u51fa\u6765\uff0c\u95ee\u600e\u4e48\u653e\u8fd9\u4e9b\u7403\uff0c\u4f7f\u5f97\u4ed6\u62ff\u51fa\u7ea2\u7403\u7684\u6982\u7387\u6700\u5927\u3002\u6b64\u4eba\u5b8c\u5168\u4e0d\u77e5\u9053\u6876\u91cc\u9762\u7403\u7684\u5206\u5e03\u3002\u5982\u679c\u4e00\u4e2a\u6876\u662f\u7a7a\u7684\uff0c\u90a3\u4e48\u4ed6\u80af\u5b9a\u662f\u62ff\u4e0d\u51fa\u7ea2\u7403\u7684\u3002", "\u00a0", "15. [Google] \u4e24\u4e2a\u9ab0\u5b50\uff0c \u4e00\u4e2a\u662f1-6\u7684\u6b63\u5e38\u9ab0\u5b50\uff0c\u95ee\u600e\u4e48\u8bbe\u7f6e\u53e6\u4e00\u4e2a\u9ab0\u5b50\u516d\u4e2a\u9762\u4e0a\u7684\u6570\u503c\uff0c\u4f7f\u5f97\u63b7\u51fa\u4e24\u4e2a\u9ab0\u5b50\u4e4b\u540e\u7684\u548c\u57281-12\u4e4b\u5185\u5747\u5300\u5206\u5e03\u3002", "\u00a0", "16. A man speaks the truth 3 out of 4 times. He throws a die and reports it to be a 6. What is the probability of it being a 6?", "\u00a0", "17. 25\u5339\u9a6c\uff0c\u8bf7\u627e\u51fa\u6700\u5feb\u76843\u5339\u3002\u4e00\u6b21\u53ea\u80fd\u8d5b5\u5339\uff0c\u53ea\u80fd\u77e5\u9053\u8fd95\u5339\u9a6c\u7684\u6392\u5e8f\u3002\u529b\u6c42\u7528\u6700\u5c11\u7684\u64cd\u4f5c\u3002", "\u00a0", "18. [Microsoft] \u4e00\u4e2a\u7b49\u8fb9\u4e09\u89d2\u5f62\u91cc\u67095\u4e2a\u70b9, \u6709\u6ca1\u6709\u53ef\u80fd\u4efb\u610f\u4e24\u70b9\u7684\u8ddd\u79bb\u90fd\u5927\u4e8e\u4e8c\u5206\u4e4b\u4e00\u8fb9\u957f, \u8bc1\u660e\u3002", "\u00a0", "19. \u4e09\u4e2a\u9e21\u86cb\u786c\u5ea6[0, 1] uniform random distributed.\u5982\u679c\u4e24\u4e2a\u9e21\u86cb\u5bf9\u6572, \u5176\u4e2d\u5b8c\u597d\u7684\u518d\u548c\u7b2c\u4e09\u4e2a\u9e21\u86cb\u5bf9\u6572. \u8fd9\u4e2a\u9e21\u86cb\u518d\u4e0d\u788e\u7684\u6982\u7387\u662f\u591a\u5927.", "\u00a0", "20. \u5047\u8bberand(0\uff0c1)\u80fd\u7ed9\u51fa0-1\u7684\u968f\u5373\u76f4\uff0c\u90a3\u4e48\u5f97\u52300-0.3\u7684\u4e00\u4e2a\u76f4\u9700\u8981\u591a\u5c11\u6b21run\uff1f\uff08expected time\uff09", "\u00a0", "21. \u6709\u4e00\u6392N\u4e2a\u74f6\u5b50\uff08\u9996\u5c3e\u4e0d\u76f8\u63a5\uff09\uff0c\u5176\u4e2d\u53ea\u6709\u4e00\u4e2a\u74f6\u5b50\u662f\u771f\u5b9e\u7684\uff0c\u5176\u4ed6\u7684\u74f6\u5b50\u90fd\u662f\u5e7b\u5f71\uff08\u770b\u8d77\u6765\u548c\u771f\u5b9e\u7684\u4e00\u6837\uff09\uff0c\u82e5\u662f\u6478\u5230\u5e7b\u5f71\uff0c\u771f\u5b9e\u7684\u74f6\u5b50\u5c31\u4f1a\u968f\u673a\u7684\u548c\u76f8\u90bb\u7684\u5de6\u6216\u8005\u53f3\u74f6\u5b50\u4ea4\u6362\uff0c\u95ee\u80fd\u627e\u5230\u4e00\u79cd\u53ef\u9760\u7684\u65b9\u6cd5\uff0c\u627e\u5230\u771f\u5b9e\u7684\u74f6\u5b50\uff1f", "\u00a0", "22. Russian roulette. 2 consective bullets out of 6 slots. A start first, then B, then A, then B,\u2026each round one can decide to turn (reset) or not what\u2019s the probability for A to survive for 1st round?", "\nif A survive, should B turn? what\u2019s the probability for B to survive for 2ndround?", "\nif A and B both survive 1st and 2nd round, should A turn for 3rd round?", "\nif no one dies for first 3 rounds, should B turn for 4th round?", "\u00a0", "23. How many different binary trees from n nodes", "\u8fd9\u9053\u9898\u6839\u7b97\u6cd5\u6ca1\u5565\u5927\u5173\u7cfb\uff0c\u6709\u4e09\u79cd\u53ef\u80fd\u6027", "\n1\uff09\u5982\u679c\u53ea\u662f\u6570\u636e\u4e0d\u4e00\u6837\uff0c\u4e5f\u7b97\u4e0d\u4e00\u6837\u7684\u6811\uff0c\u90a3\u4e00\u5171\u6709\u591a\u5c11\u79cd\uff1f\u6bd4\u5982\u00a0\u00a0 a\u2013>b , b\u2013>a \u7b97\u4e0d\u540c\u7684\u8bdd\u3002", "\n2\uff09\u5982\u679c\u4e24\u4e2a\u6811\u53ef\u80fd\u901a\u8fc7\u6539\u53d8key value\u6765\u8f6c\u6362\uff0c\u5c31\u7b97\u662f\u76f8\u540c\u7684\u6811\uff0c\u90a3\u4e00\u5171\u6709\u6709\u591a\u5c11\u79cd\uff1f", "\n3\uff09\u5982\u679c\u4e24\u4e2a\u6811\u53ef\u80fd\u901a\u8fc7\u6539\u53d8key value\u6765\u8f6c\u6362\u6216\u8005\u901a\u8fc7mirror\u6765\u8f6c\u6362\uff0c\u90a3\u4e00\u5171\u6709\u6709\u591a\u5c11\u79cd\u5462\uff1f", "\u00a0", "24. \u4e24\u4e2adice\uff0c\u5982\u4f55label\uff0c\u4f7f\u5f97\u4ed6\u4eec\u7684\u53ef\u4ee5\u8868\u793a01-31\u4e2d\u7684\u6240\u6709\u6570\u5b57", "\u00a0", "25. \u5e8f\u5217a\uff0cb\uff0cc\uff0c \u5982\u4f55\u5224\u65adc\u662f\u5426\u662fa\u548cb\u7684interleave\u3002\u5373\uff0ca\uff0cb\u662fc\u7684\u5b50\u5e8f\u5217\uff0c\u540c\u65f6c\u7531a\uff0cb\u7ec4\u6210\u3002\u6bd4\u5982,", "\na = [a1,a2,a3,...,an], b = [b1, b2, b3, ..., bm]", "\n\u5982\u679cc = [a1,b1, b2, a2\uff0c..., an, bm], return true\uff0c\u5982\u679cc = [a2,a1,b1,b2 ,...] return false", "\u00a0", "26. \u6709\u4e00\u4e2a\u5706\u67f1\u4f53\uff0c\u534a\u5f84\u4e3aR\uff0c\u9ad8\u4e3aH. \u73b0\u5728\u8981\u5728\u91cc\u9762\u968f\u673a\u4ea7\u751fN\u4e2a\u534a\u5f84\u4e3ar1\uff0c\u4ee5\u53caN\u4e2a\u534a\u5f84\u4e3ar2\u7684\u5c0f\u7403\u3002\u8981\u6c42\u8fd9\u4e9b\u5c0f\u7403\u5fc5\u987b\u5728\u5706\u67f1\u4f53\u5185\uff0c\u800c\u4e14\u4e92\u4e0d\u76f8\u4ea4\u3002\u4e00\u5171\u9700\u8981M\u4e2asample\u3002", "\u00a0", "27. \u4e00\u4e2a\u7acb\u65b9\u4f53\uff0c\u75283\u79cd\u4e0d\u540c\u7684\u989c\u8272\u6d82\uff0c\u6bcf\u79cd\u989c\u8272\u90fd\u5f97\u7528\u3002\u6709\u591a\u5c11\u79cd\u6d82\u6cd5", "\u00a0", "28. \u6709\u4e09\u79cd\u989c\u8272\u7684\u7403\uff0c\u7ea2\u827213\u4e2a\uff0c\u7eff\u827216\u4e2a\uff0c\u9ec4\u8272 17\u4e2a\uff0c\u6709\u4e00\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u4f7f\u7403\u53d8\u8272\uff0c\u62ff\u51fa\u4e24\u4e2a\u4e0d\u540c\u989c\u8272\u7684\u7403\uff0c\u5c31\u80fd\u53d8\u6210\u7b2c\u4e09\u79cd\u989c\u8272\uff0c\u5982\u62ff\u51fa\u4e00\u4e2a\u7ea2\u8272\uff0c\u4e00\u4e2a\u9ec4\u8272\uff0c\u5c31\u4f1a\u53d8\u6210\u4e24\u4e2a\u7eff\u8272\u7684\u7403\u3002\u95ee\u6709\u6ca1\u6709\u53ef\u80fd\u628a\u8fd9\u4e9b\u7403\u53d8\u6210\u540c\u4e00\u79cd\u989c\u8272\uff0c\u5982\u679c\u53ef\u80fd\uff0c\u600e\u4e48\u505a\uff0c\u5982\u679c\u4e0d\u53ef\u80fd\uff0c\u4e3a\u4ec0\u4e48\u3002\u5f15\u7533\uff0cx\u4e2a\u7ea2\u7403\uff0cy\u4e2a\u7eff\u7403\uff0cz\u4e2a\u9ec4\u7403\uff0c\u5f53x\uff0cy\uff0cz\u6ee1\u8db3\u4ec0\u4e48\u5173\u7cfb\u65f6\uff0c\u4e00\u5b9a\u6709\u89e3\u51b3\u65b9\u6848\uff0c\u5426\u5219\u65e0\u89e3\u3002", "\u00a0", "29. \u5728\u4e00\u4e2a2\u7ef4\u5e73\u9762\u4e0a\u6709\u5f88\u591a\u673a\u5668\u4eba \u4e00\u5171\u67092\u7c7b \u7eff\u8272\u548c\u84dd\u8272\u7684\u673a\u5668\u4eba\u90fd\u6bd4\u8f83\u7b28 \u4e0d\u77e5\u9053\u81ea\u5df1\u7684\u989c\u8272 \u4e5f\u4e0d\u80fd\u76f8\u4e92\u4ea4\u6d41\u73b0\u5728\u6709\u4e00\u4e2a\u53d1\u4fe1\u53f7\u7684\u673a\u5668 \u53ef\u4ee5\u7ed9\u6240\u6709\u7684\u673a\u5668\u4eba\u53d1\u4fe1\u53f7 \u6240\u6709\u7684\u673a\u5668\u4eba\u5fc5\u987b\u6267\u884c\u540c\u6837\u7684\u547d\u4ee4 \uff08\u53ef\u4ee5\u5e26\u6761\u4ef6\u7684\u6307\u4ee4\uff09\u95ee\u5982\u4f55\u57282\u4e2a\u547d\u4ee4\u4e0b \u8ba9\u7eff\u8272 \u84dd\u8272\u673a\u5668\u4eba\u5206\u7ec4", "30.N processors \u540c\u65f6 read M memories\uff0c\u5982\u679c\u6709\u540c\u65f6\u4e24\u4e2aprocessors read\u540c\u4e00\u4e2a\u5c31\u7b97\u4e00\u4e2a\u8bfb\u5199\u5931\u8d25\u3002\u95ee\u5e73\u5747\u7684read memory\u6210\u529f\u7684\u6b21\u6570"], "title": "C++\u7b97\u6cd5\u9762\u8bd5\u9898\u96c6\u6570\u5b66\u9898"},
{"contents": ["DP\u9898,\u5148\u628a\u6240\u6709\u7684presentation\u6309endtime\u6392\u5e8f\uff0c\u7136\u540e\u8bbeq(endtime)\u4e3a\u5728endtime\u4e4b\u95f4conference room\u88ab\u4f7f\u7528\u7684\u6700\u957f\u65f6\u95f4\u3002\u7136\u540e\u4f9d\u6b21\u7528presentation\u4e0e\u4e4b\u95f4\u6240\u6709\u7684q\u76f8\u6bd4\uff0c\u5f97\u5230\u65b0\u7684q.\u603b\u4f53\u590d\u6742\u5ea6O(N^2)", "\u7528hashtable\u4fdd\u5b58num->index,\u7136\u540e\u7ebf\u6027\u626b\u63cf\u4e00\u904d\u5373\u53ef", "\u8003\u8651\u4e00\u4e2a\u56fe\uff0c\u6ee1\u8db3\u7684\u9996\u5c3e\u5b57\u6bcd\u4e0d\u540c\u5373\u6709\u4e00\u6761a->b\u7684\u8fb9\uff0c\u90a3\u8be5\u95ee\u9898\u7b49\u4ef7\u4e8e\u627eHamilton\u5708\uff0c\u662f\u4e00\u4e2aNP\u5b8c\u5168\u95ee\u9898", "\u955c\u50cf\u5bf9\u79f0\u7684\u5b9a\u4e49\uff1f", "\u9664\u4e86\u7a77\u4e3e\uff0c\u6ca1\u5565\u597didea\u2026 \u6c42\u6240\u6709\u7684\u548cO(N),\u6c42\u6700\u8fd1\u516c\u5171\u7236\u7ed3\u70b9\u53ef\u4ee5\u4f18\u5316\u5230O(1)\u5177\u4f53\u6bd4\u8f83\u4e3aO(N^2)\uff0c\u603b\u4f53\u590d\u6742\u5ea6\u4e3aO(N^2).", "\u5bf9\u6bcf\u4e00\u4e2a\u5c0f\u4e8esqrt(y)\u7684\u6570\uff0c\u6c42\u5bf9\u6570\u540e\u627e\u4e00\u4e2a\u6700\u63a5\u8fd1\u7684\u5373\u53ef\u3002\u3002", "CODE\uff0c\u8003\u8651\u901a\u8fc7merge sort\u7684\u53d8\u5f62", "IDEA:\u7c7b\u4f3c\u4e8e\u4e09\u8def\u5f52\u5e76\uff0c\u53cd\u590d\u5730\u5c06\u5f53\u524d\u6700\u5c0f\u7684\u5143\u7d20\u5f80\u524d\u79fb\uff0c\u5e76Update\u76ee\u6807\u503c\u5373\u53ef\u3002", "\u8981\u7ed9\u51fa\u6240\u6709\u65b9\u6848\u53ea\u80fd\u9012\u5f52\u7a77\u4e3e\u5427", "\u5c060-1\u4e4b\u95f4\u6309scroe(i)\u7684\u6bd4\u4f8b\u5212\u5206\u6210\u533a\u95f4\uff0c\u7136\u540e\u751f\u62100-1\u4e4b\u95f4\u7684\u968f\u673a\u6570\uff0c\u6309\u5176\u6240\u5728\u533a\u95f4\u51b3\u5b9a\u4e3a\u54ea\u4e2a\u5143\u7d20", "TO LEARN\uff0c", "\u4e5f\u662fINTERVAL TREE\u6216\u8005SEGMENT TREE?\u5148\u53d6\u51fa\u6240\u6709\u7684\u70b9\uff0c\u518d\u628a\u88ab\u4efb\u610f\u77e9\u5f62\u6240\u5305\u542b\u7684\u70b9\u53bb\u6389\u3002", "\u7c7b\u4f3c\u4e8eDP\uff1f\u53cd\u590dupdate jump N+1\u6b65\u540e\uff0c\u8bb0\u5f55\u5230\u8fbe\u5f53\u524d\u4f4d\u7f6e\u7684\u6700\u5c0f\u6b65\u6570", "No extra space\u9700\u8981\u4fee\u6539\u539f\u6570\u7ec4\u5427\u3002\u3002\u3002CODE", "\u7528\u4e00\u4e2a\u4e03\u4e2a\u6570\u7684\u6570\u7ec4\u6765\u6807\u8bb0\u5c31\u884c\u4e86\u5427", "\u5148\u8d70\u5230\u89d2\u843d\uff0c\u7136\u540e\u6765\u56de\u626b\u5c31\u884c\u4e86", "\u89c1185\u9898", "\u5e94\u8be5\u6ca1\u6709\u8fd9\u6837\u7684\u89e3\uff1f", "DP\uff0c\u5199\u9012\u63a8\u516c\u5f0f\uff0c\u4f7f[0,i]\u4e2d\u7684\u5143\u7d20\u6709\u5e8f\uff0cupdate\u65f6\uff0c\u52a0\u5165[0,i+1]\uff0c\u8981\u4e48decrement\u4ee5\u524d\u7684\uff0c\u8981\u4e48\u5220\u6389i+1", "\u60f3\u4e0d\u51fa\u6765\u3002\u3002\u3002", "\u5982\u679csubarray\u8fde\u7eed\u7684\u8bdd\u5f88\u7b80\u5355\u3002\u3002\u3002", "\u5148\u5728string\u91cc\u627e\u662f\u5355\u8bcd\u7684\u8303\u56f4\uff0c\u5f97\u5230\u4e00\u7ec4range,\u7136\u540e\u5c06\u8fd9\u4e9brange\u6309\u8d77\u70b9\u6392\u5e8f\uff0c\u518d\u9012\u5f52+\u56de\u6eaf\uff0c\u627e\u5230\u6700\u957f\u7684\u80fd\u6b63\u597d\u62fc\u63a5\u5728\u4e00\u8d77\u7684\u6700\u957f\u7684\u8303\u56f4", "\u7b49\u4ef7\u4e8e\u524d\u9762\u4e00\u4e2a\u6c42\u9006\u5e8f\u5bf9\u7684\u9898\u7684\u5427\uff0c\u611f\u89c9\u4e0d\u53ef\u80fd\u505a\u5230O(N),", "\u5148\u627e\u51fasqrt(n)\u4ee5\u5185\u7684\u6240\u6709\u8d28\u6570\u3002\u3002\u518d\u60f3\u60f3", "TO LEARN, Shell\u6392\u5e8f\uff1f", "TO LEARN, Interval tree?", "\u00a0", "DP\u9898\uff0c\u5199\u9012\u63a8\u516c\u5f0f"], "title": "C++\u7f16\u7a0b\uff0c\u6570\u636e\u7ed3\u6784\uff0c\u7b97\u6cd5\u7c7b\u9762\u8bd5\u9898\u96c6(8)"},
{"contents": ["\u7528\u4e00\u4e2ahashtable\u6765\u4fdd\u5b58\u6240\u6709\u89c1\u5230\u8fc7\u7684\u7ed3\u70b9\u3002 Root\u7ed3\u70b9\u5c31\u662f\u6ca1\u6709\u5728child\u4f4d\u7f6e\u4e0a\u51fa\u73b0\u8fc7\u7684\u7ed3\u70b9\u3002", "\u540e\u9762\u51e0\u95ee\u5047\u8bbe\u662fmerge\u6210\u4e00\u4e2asorted array, \u90a3\u8fd9\u4e2a\u9898\u5c31\u7c7b\u4f3c\u4e8e\u5916\u90e8\u6392\u5e8f\u7684\u591a\u8def\u5f52\u5e76\u3002", "\u4e0d\u7406\u89e3\u9898\u76ee\u7684\u610f\u601d\u3002\u3002", "\u4e2d\u5e8f\u904d\u5386\u3002\u7565\u3002\u3002", "\u5206\u5c42\u904d\u5386\u5373\u53ef\uff0c\u7565\u3002\u3002", "\u00a0\u00a0\u00a0 \u4e2d\u7b49\u96be\u5ea6\u7684DP\uff0c\u6709\u4e2a\u89e3\u9898\u62a5\u544a\u89c1\uff1a", "\u516c\u5f0f\u7684\u8bba\u6587\u89c1\uff1a", "http://arxiv.org/abs/math/0310326", "\u00a0\u00a0\u00a0 \u4e09\u91cd\u5faa\u73af\u5373\u53ef\uff0c\u4ee3\u7801\u7565\u3002\u3002", "\u7b97\u6cd5\uff1a", "\u5148\u6c42\u51fa\u7d2f\u52a0\u548ccum[i] = a[0]+\u2026+a[i],\u4ecea[k]>max\u5f00\u59cb\uff0c\u5728\u524d\u9762\u4e8c\u5206\u67e5\u627e\u7b2c\u4e00\u4e2acum[l]>=(a[k]-max), \u76f4\u5230\u627e\u5230\u8303\u56f4\u6700\u5927\u7684range. \u590d\u6742\u5ea6O(NlogN)", "\u7ebf\u6027\u626b\u63cf\u5e76\u8ba1\u7b97\u4e00\u4e0b\u5373\u53ef\u3002\u6b63\u8d1f\u6570\u662f\u5426\u6709\u5173\u7cfb\uff1f", "\u4e24\u4e24\u6bd4\u8f83\u627e\u7b2c\u4e00\u4e2a\u4e0d\u540c\u5373\u53ef\u3002", "\u5224\u65ad\u662f\u5426\u6709\u51b2\u7a81\uff1f\u6574\u4e2a\u5173\u7cfb\u5f62\u6210\u4e00\u4e2a\u56fe\uff0c\u8fd9\u4e2a\u56fe\u5e94\u8be5\u662f\u65e0\u73af\u7684\uff0c\u505a\u4e00\u6b21DFS\u5373\u53ef\u3002", "\u8d2a\u5fc3\uff0c\u5c3d\u91cf\u9009\u62e9\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u7684\u5de5\u4f5c\u5373\u53ef", "\u5148\u6309\u96f6\u628a\u6570\u7ec4\u5206\u6210\u82e5\u5e72\u4e2a\u5b50\u6570\u7ec4\uff0c\u518d\u5728\u5b50\u6570\u7ec4\u91cc\u627e\u5305\u542b\u5076\u6570\u4e2a\u8d1f\u6570\u7684\u6700\u5927\u7684\u8303\u56f4\u3002", "\u00a0", "\u5bf9\u8fd9\u4e2a\u6570\u7ec4\u91cc\u7684\u6bcf\u4e00\u4e2a\u6570\uff0c\u5982\u679c\u5b83\u4e0d\u80fd\u8868\u793a\u4e3a\u8be5\u6570\u7ec4\u91cc\u4e24\u4e2a\u6570\u4e4b\u548c\uff0c\u5219\u662f\u4e00\u4e2a\u8981\u6c42\u7684\u4e24\u4e2amilestone\u4e4b\u95f4\u7684\u8ddd\u79bb", "\u4e0d\u662f\u5f88\u7406\u89e3\u9898\u610f\u3002\u3002\u3002\u4e24\u4e24\u6bd4\u8f83\u5373\u53ef\uff0c\u590d\u6742\u5ea6O(N^2),\u5982\u8981\u52a0\u901f\uff0c\u53ef\u4ee5\u5148\u8ba1\u7b97\u6bcf\u4e2a\u7ed3\u70b9\u7684\u6df1\u5ea6\u548c\u5b50\u7ed3\u70b9\u6570\uff0c\u76f8\u540c\u518d\u8fdb\u884c\u6bd4\u8f83\u3002", "\u5148\u6309\u5982\u4e0b\u89c4\u5b9a\u6392\u5e8f\uff1a a > b if ab > ba,", "\u7136\u540e\u518d\u4ece\u9ad8\u5230\u4f4e\u62fc\u63a5\u8d77\u6765\u5373\u53ef\u3002", "O(N)\u597d\u50cf\u4e0d\u53ef\u80fd\u505a\u5230\uff0c\u56e0\u4e3a\u6240\u6709\u7684intervals\u53ef\u80fd\u5c31\u662fO(N^2)\u7ea7\u522b\u7684"], "title": "C++\u7f16\u7a0b\uff0c\u6570\u636e\u7ed3\u6784\uff0c\u7b97\u6cd5\u7c7b\u9762\u8bd5\u9898\u96c6(7)"},
{"contents": ["\u591a\u6b21\u505aread4096\u5373\u53ef\uff0c\u4e3a\u4e86\u52a0\u901f\uff0c\u53ef\u4ee5\u91cd\u7528\u4e0a\u6b21seek\u7684\u7ed3\u679c", "\u6784\u9020\u4e00\u4e2a\u5355\u8bcd\u7684prefix\u5b57\u5178\uff0c\u7136\u540e\u518d\u9012\u5f52+\u56de\u6eaf\u3002\u3002\u3002", "\u8bbek\u4e2asorted array\u4e3aa1, a2, \u2026, ak.", "\u5148\u627e\u51fa\u8fd9k\u4e2asorted array\u7684median, m1, m2, \u2026 mk.", "\u518d\u627e\u51fa\u8fd9k\u4e2amedian\u7684median: mm", "\u7136\u540e\u53ef\u4ee5\u628a\u6240\u6709\u6bd4mm\u5c0f\u7684\u6570\u548c\u5927\u7684\u6570\u90fd\u53bb\u6389\uff0c\u5927\u81f4\u6709\u4e00\u534a", "\u7136\u540e\u518d\u627e\u5269\u4e0b\u7684\u6570\u7684median\uff08\u9012\u5f52\uff09\uff0c\u590d\u6742\u5ea6O(klogn)", "\u9012\u5f52+\u56de\u6eaf\uff0c\u4e5f\u53ef\u4ee5\u7528DP\u4f18\u5316", "\u7528\u4e00\u4e2acircular buffer\u6765\u4fdd\u5b58\u6bcf\u4e00\u79d2\u7684click\u6570\uff0c\u518d\u7ef4\u62a4\u4e00\u4e2atotal\u6570\u5373\u53ef\u3002", "\u5982\u679c\u6240\u6709\u7684\u6570\u90fd\u76f8\u7b49\uff0c\u90a3\u81f3\u5c11\u9700\u8981O(n^2)\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u53e6\u5916\u6392\u5e8f\u540e\uff0c\u4e8c\u91cd\u5faa\u73af\u52a0\u4e24\u5934\u626b\u63cf\uff0c\u4e0d\u9700\u8981\u989d\u5916\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u4e86\u3002", "\u89c1138\u9898", "\u5982\u679c\u8981\u5f97\u5230\u6240\u6709\u7684\u7ec4\u5408\uff0c\u5148\u8ba1\u7b97\u51fa\u8be5\u6570\u8303\u56f4\u5185\u7684Fibonacci\u6570\uff0c\u518d\u5f53\u6210\u627e\u96f6\u95ee\u9898\u6765\u8ba1\u7b97\u5c31\u53ef\u4ee5\u4e86\u3002", "Zeckendorf\u2019s theorem:", "Every\u00a0", "\u00a0can be represented uniquely as the sum of\u00a0one or more\u00a0distinct Fibonacci numbers in such a way that the sum does not include any two consecutive Fibonacci numbers."], "title": "C++\u7f16\u7a0b\uff0c\u6570\u636e\u7ed3\u6784\uff0c\u7b97\u6cd5\u7c7b\u9762\u8bd5\u9898\u96c6(6)"},
{"contents": ["TO LEARN. Suffix tree\u7684\u5e94\u7528", "\u00a0", "\u56de\u6eaf\uff0c \u7565\u3002\u3002\u3002", "\u751f\u6210\u5b50\u96c6\u7684\u95ee\u9898\uff0c\u7565", "\u00a0", "\u4e0d\u662f\u5f88\u7406\u89e3\uff0c\u7528map<userid, list<time>> \u6765\u8bb0\u5f55\u7528\u6237\u7684\u767b\u5f55\u65f6\u95f4\uff0c\u7136\u540e\u518d\u626b\u63cf\uff1f", "\u4ece\u4e24\u5934scan, \u7565", "\u00a0", "\u521d\u59cb\u6761\u4ef6: f(x,y,1) = a[x] + \u2026 + a[y]", "\u9012\u63a8\uff1a f(1, n, k) = min(1<=i<=n+1-k)max{f(1,i,1),f(i+1,n,k-1)}", "\u5148\u5c06\u6570\u7ec4\u6392\u5e8f", "\u521d\u59cb\u6761\u4ef6: f(x,y,2) = a[y] \u2013 a[x]", "\u9012\u63a8: f\uff081,n,k\uff09 = max(2<=i<=n+2-k)min(f(1,i,2), f(i,n,k-1))", "\u56fe\u5f62\u5b66\uff0c\u8003\u8651\u4f9d\u6b21\u5f62\u6210\u7684\u6240\u6709\u5939\u89d2\u7684\u548c\uff0c\u5982\u679c\u5728\u5185\u4e3a2pi, \u5426\u5219\u4e3a0", "\u00a0\u00a0\u00a0 \u9884\u5148\u8ba1\u7b97\u6240\u6709\u4e24\u6570\u4e4b\u548c\uff0c\u5f97\u5230map<sum, vector<pair<index1,index2>>>", "\u7136\u540e\u518d\u8fd9\u4e2amap\u4e2d\u641c\u7d22\u6709\u6ca1\u6709\u548c\u4e3atarget number\u7684pair(\u5e76\u4e14index\u4e0d\u80fd\u91cd\u590d)\uff0c\u65f6\u95f4\u548c\u7a7a\u95f4\u590d\u6742\u5ea6O(N^2).", "\u53e6\u5916\u4e00\u79cd\u505a\u6cd5\u662f\u5f53\u6210\u5b50\u96c6\u5408\u95ee\u96c6\uff0c\u6309target number(T)\u505aDP\uff0c\u590d\u6742\u5ea6O(NT)", "\u8bbev[x,y]\u662f\u5f53\u67d0\u4eba\u5728\u6570\u5217\u5269\u4e0bx\u5230y\u4f4d\u65f6\uff0c\u80fd\u62ff\u5230\u7684\u6700\u5927\u503c\uff0cn[x,y]\u8868\u793a\u9700\u8981\u62ff\u7684\u4f4d\u7f6e(x\u6216\u8005y)\u5219", "\u521d\u59cb\u5316: v[x,x] = a[x], n[x,x] = x", "\u9012\u63a8: v[x,y] = max(v[x] + (v[x+2,y]\u6216\u8005v[x+1,y-1], \u7531n[x-1,y]\u51b3\u5b9a)\uff0c", "v[y] +\uff08v[x,y-2]\u6216\u8005v[x+1,y-1]\uff0c\u7531n[x,y-1]\u51b3\u5b9a\uff09)", "n[x,y]\u7531\u4e0a\u4e00\u6b65\u53d6v[x]\u8fd8\u662f\u53d6v[y]\u51b3\u5b9a\u3002", "\u4e00\u822c\u505a\u6cd5\uff1a", "a)\u00a0\u00a0 \u4f7f\u7528\u591a\u5757\u78c1\u76d8\u540c\u65f6\u8fdb\u884c\u8bfb/\u5199", "b)\u00a0\u00a0 \u4f7f\u7528\u591a\u7ebf\u7a0b\u63d0\u9ad8\u5185\u5b58\u91cc\u7684sort\u7684\u6027\u80fd", "c)\u00a0\u00a0 \u4f7f\u7528\u5f02\u6b65\u7684IO\u4f7fsort\u548c\u78c1\u76d8\u8bfb/\u5199\u540c\u65f6\u8fdb\u884c", "d)\u00a0\u00a0 \u591a\u673a\u7684\u5e76\u884c\uff08map reduce ?\uff09", "e)\u00a0\u00a0 \u5982\u679ckey\u8f83\u5927\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528radix sort\u63d0\u9ad8\u901f\u5ea6", "\u6839\u636e\u4e2d\u5fc3\u6781\u9650\u5b9a\u4e49\uff0c\u4e00\u79cd\u7b80\u5355\u7684\u505a\u6cd5\u662f,\u751f\u62102N\u4e2a(0,1)\u4e4b\u95f4\u7684\u968f\u673a\u6570\uff0c\u7136\u540e\u5c06\u5b83\u4eec\u7684\u548c\u51cf\u53bbN\uff0c\u5f97\u5230\u4e00\u4e2a\u8fd1\u4f3c\u6b63\u6001\u5206\u5e03\u7684\u6570", "\u7565\u3002\u3002\u3002", "\u89c168\u9898", "Merge sort linked list\u7684\u7279\u70b9\uff1a\u4e0d\u9700\u8981\u989d\u5916\u7a7a\u95f4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(NlogN),\u5e76\u4e14\u662fstable\u7684", "2) Second step:", "\nisMember(\u201cf.o\u201d) -> true", "\nisMember(\u201c..\u201d) -> false", "\n*/", "1. \u7528map\u5373\u53ef\u3002\u3002\u3002", "2. \u9700\u8981\u5bf9words\u91cc\u9762\u7684\u6bcf\u4e00\u4e2aelements\u4f9d\u6b21\u5339\u914d\u3002\u4e3a\u4e86\u52a0\u901f\uff0c\u53ef\u4ee5\u9884\u5148\u5bf9words\u6784\u5efa\u4e00\u68f5\u5b57\u5178\u6811\u3002", "xxx011100 -> xxx100011", "CODE\u7565", "\u5148\u6392\u5e8f\uff0c\u518d\u6bd4\u8f83\u76f8\u90bb\u7684\u4e09\u4e2a\u6570\u5373\u53ef", "TO LEARN\uff0c \u5199\u4e00\u4e0b\u7528map reduce \u600e\u4e48\u505a"], "title": "C++\u7f16\u7a0b\uff0c\u6570\u636e\u7ed3\u6784\uff0c\u7b97\u6cd5\u7c7b\u9762\u8bd5\u9898\u96c6(4)"},
{"contents": ["\u7b2c26\u9898", "\u00a0", "\u5c06\u5355\u8bcd\u6309\u957f\u5ea6\u4ece\u957f\u5230\u77ed\u7f16\u53f7", "\u5bf9\u6bcf\u4e00\u4e2a\u5b57\u6bcd\uff0c\u5efa\u4e00\u4e2acollection\uff0c\u6309\u7f16\u53f7\u6392\u5e8f\u3002", "\u5bf9\u7ed9\u51fa\u7684\u4e03\u4e2a\u5b57\u6bcd\uff0c\u627e\u5230\u5b83\u4eec\u7684collection\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5171\u540c\u7684\u5b57\u6bcd\u3002", "\u6700\u5927\u76f4\u65b9\u56fe\u7684\u5e94\u7528\uff0c O(N^3)\u65f6\u95f4\u590d\u6742\u5ea6", "\u7b49\u4ef7\u4e8e\u627e\u6700\u957f\u4e0a\u5347\uff08\u4e0b\u964d\uff09\u5b50\u5e8f\u5217\uff0c\u89c165\u9898", "\u00a0", "\u4e2d\u5e8f\u904d\u5386\u4e00\u904d\u653e\u5230\u6570\u7ec4\u4e2d\uff0c\u6700\u540e\u62ff\u4e2d\u95f4\u6570", "\u00a0"], "title": "C++\u7f16\u7a0b\uff0c\u6570\u636e\u7ed3\u6784\uff0c\u7b97\u6cd5\u7c7b\u9762\u8bd5\u9898\u96c6(3)"},
{"contents": ["\u4e00\u3001\u9009\u62e9\u9898", "\n1\uff0e\u4e0b\u9762\u5404\u9879\u4e0d\u5c5e\u4e8e\u6d3e\u751f\u65b0\u7c7b\u8303\u7574\u7684\u662f\uff08C \uff09", "\n        A\uff0e\u5438\u6536\u57fa\u7c7b\u7684\u6210\u5458", "\n        B\uff0e\u6539\u9020\u57fa\u7c7b\u7684\u6210\u5458", "\n        C\uff0e\u5220\u9664\u57fa\u7c7b\u7684\u6210\u5458", "\n        D\uff0e\u6dfb\u52a0\u65b0\u6210\u5458", "\n2\uff0e\u5728\u6d3e\u751f\u65b0\u7c7b\u7684\u8fc7\u7a0b\u4e2d\uff0c\uff08 D \uff09", "\n        A\uff0e\u57fa\u7c7b\u7684\u6240\u6709\u6210\u5458\u90fd\u88ab\u7ee7\u627f", "\n        B\uff0e\u53ea\u6709\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e0d\u88ab\u7ee7\u627f", "\n        C\uff0e\u53ea\u6709\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u4e0d\u88ab\u7ee7\u627f", "\n        D\uff0e\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u90fd\u4e0d\u88ab\u7ee7\u627f", "\n3\uff0e\u4e0b\u9762\u4e0d\u5c5e\u4e8e\u7c7b\u7684\u7ee7\u627f\u65b9\u5f0f\u7684\u662f\uff08 C \uff09", "\n        A\uff0epublic", "\n        B\uff0eprivate", "\n        C\uff0eoperator", "\n        D\uff0eprotected", "\n4\uff0e\u4f5c\u7528\u57df\u5206\u8fa8\u7b26\u662f\u6307\uff08 B \uff09", "\n        A\uff0e\uff1f\uff1a", "\n        B\uff0e \uff1a\uff1a", "\n        C\uff0e->", "\n        D\uff0e&&", "\n5\uff0e\u4e13\u7528\u591a\u6001\u662f\u6307\uff08 A \uff09", "\n        A\uff0e\u91cd\u8f7d\u591a\u6001\u548c\u5f3a\u5236\u591a\u6001", "\n        B\uff0e\u5f3a\u5236\u591a\u6001\u548c\u5305\u542b\u591a\u6001", "\n        C\uff0e\u5305\u542b\u591a\u6001\u548c\u53c2\u6570\u591a\u6001", "\n        D\uff0e\u53c2\u6570\u591a\u6001\u548c\u91cd\u8f7d\u591a\u6001", "\n6\uff0e\u901a\u7528\u591a\u6001\u662f\u6307\uff08 C \uff09", "\n        A\uff0e\u91cd\u8f7d\u591a\u6001\u548c\u5f3a\u5236\u591a\u6001", "\n        B\uff0e\u5f3a\u5236\u591a\u6001\u548c\u5305\u542b\u591a\u6001", "\n        C\uff0e\u5305\u542b\u591a\u6001\u548c\u53c2\u6570\u591a\u6001", "\n        D\uff0e\u53c2\u6570\u591a\u6001\u548c\u91cd\u8f7d\u591a\u6001", "\n7\uff0e\u4e0b\u9762\u5404\u9879\u4e2d\u5c5e\u4e8e\u4e0d\u53ef\u91cd\u8f7d\u7684\u4e00\u7ec4\u8fd0\u7b97\u7b26\u662f\uff08 C \uff09", "\n        A\uff0e+\u3001\u2014\u3001*\u3001/", "\n        B\uff0e[ ]\u3001\uff08\uff09", "\n        C\uff0e \uff1a\uff1a\u3001\uff0e\u3001\uff1f\uff1a\u3001sizeof\u3001\uff0e*", "\n        D\uff0e++\u3001\u2014\u2014", "\n8\uff0e\u5173\u4e8e\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u4e0b\u9762\u8bf4\u6cd5\u4e0d\u6b63\u786e\u7684\u662f\uff08 C \uff09", "\nA\uff0e\u6784\u9020\u51fd\u6570\u7684\u4f5c\u7528\u662f\u5728\u5bf9\u8c61\u88ab\u521b\u5efa\u65f6\u5c06\u5bf9\u8c61\u521d\u59cb\u5316\u4e3a\u4e00\u4e2a\u7279\u5b9a\u7684\u72b6\u6001", "\nB\uff0e\u6784\u9020\u51fd\u6570\u7684\u51fd\u6570\u540d\u4e0e\u7c7b\u540d\u76f8\u540c", "\nC\uff0e\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u58f0\u660e\u4e3a\u865a\u51fd\u6570", "\nD\uff0e\u6784\u9020\u51fd\u6570\u5728\u5bf9\u8c61\u88ab\u521b\u5efa\u65f6\u88ab\u7cfb\u7edf\u81ea\u52a8\u8c03\u7528", "\n9\uff0e\u5728C++\u4e2d\uff0c\u6570\u7ec4\u7c7b\u578b\u5c5e\u4e8e\uff08 B \uff09", "\n        A\uff0e\u57fa\u672c\u6570\u636e\u7c7b\u578b", "\n        B\uff0e\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b", "\n        C\uff0e\u7c7b\u7c7b\u578b", "\n        D\uff0e\u7ed3\u6784\u4f53\u7c7b\u578b", "\n10\uff0e\u82e5\u6709\u8bed\u53e5\uff1afloat array[3][5][7]\uff1b\u5219\u6570\u7ec4array\u7684\u5143\u7d20\u4e2a\u6570\u4e3a\uff08 D \uff09", "\nA\uff0e3", "\nB\uff0e5", "\nC\uff0e7", "\nD\uff0e105", "\n11\uff0e\u5173\u4e8e\u865a\u57fa\u7c7b\uff0c\u4e0b\u9762\u8bf4\u6cd5\u6b63\u786e\u7684\u662f\uff08 D \uff09", "\nA\uff0e\u5e26\u6709\u865a\u51fd\u6570\u7684\u7c7b\u79f0\u4e3a\u865a\u57fa\u7c7b", "\nB\uff0e\u5e26\u6709\u7eaf\u865a\u51fd\u6570\u7684\u7c7b\u79f0\u4e3a\u865a\u57fa\u7c7b", "\nC\uff0e\u865a\u57fa\u7c7b\u4e0d\u80fd\u5b9e\u4f8b\u5316", "\nD\uff0e\u865a\u57fa\u7c7b\u53ef\u4ee5\u7528\u6765\u89e3\u51b3\u4e8c\u4e49\u6027\u95ee\u9898", "\n12\uff0e\u5173\u4e8e\u6790\u6784\u51fd\u6570\uff0c\u4e0b\u9762\u8bf4\u6cd5\u4e0d\u6b63\u786e\u7684\u662f\uff08 B \uff09", "\nA\uff0e\u6790\u6784\u51fd\u6570\u7528\u6765\u5b8c\u6210\u5bf9\u8c61\u88ab\u5220\u9664\u524d\u7684\u4e00\u4e9b\u6e05\u7406\u5de5\u4f5c", "\nB\uff0e\u6790\u6784\u51fd\u6570\u53ef\u4ee5\u58f0\u660e\u4e3a\u91cd\u8f7d\u51fd\u6570", "\nC\uff0e\u6790\u6784\u51fd\u6570\u53ef\u4ee5\u58f0\u660e\u4e3a\u865a\u51fd\u6570", "\nD\uff0e\u6790\u6784\u51fd\u6570\u5728\u5bf9\u8c61\u7684\u751f\u5b58\u671f\u5373\u5c06\u7ed3\u675f\u65f6\u88ab\u7cfb\u7edf\u81ea\u52a8\u8c03\u7528", "\n13\uff0e\u5173\u4e8e\u865a\u51fd\u6570\uff0c\u4e0b\u5217\u8bf4\u6cd5\u4e0d\u6b63\u786e\u7684\u662f\uff08 C \uff09", "\nA\uff0e\u865a\u51fd\u6570\u662f\u52a8\u6001\u8054\u7f16\u7684\u57fa\u7840", "\nB\uff0e\u865a\u51fd\u6570\u7684\u5b9a\u4e49\u53ea\u80fd\u51fa\u73b0\u5728\u7c7b\u5b9a\u4e49\u4e2d\u7684\u51fd\u6570\u539f\u5f62\u58f0\u660e\u4e2d", "\nC\uff0e\u7c7b\u7684\u6210\u5458\u51fd\u6570\u5747\u53ef\u58f0\u660e\u4e3a\u865a\u51fd\u6570", "\nD\uff0e\u865a\u51fd\u6570\u662f\u7528virtual\u5173\u952e\u5b57\u58f0\u660e\u7684\u975e\u9759\u6001\u6210\u5458\u51fd\u6570", "\n14\uff0e\u5173\u4e8e\u62bd\u8c61\u7c7b\uff0c\u4e0b\u5217\u8bf4\u6cd5\u4e0d\u6b63\u786e\u7684\u662f\uff08 B \uff09", "\nA\uff0e\u62bd\u8c61\u7c7b\u4e0d\u80fd\u5b9e\u4f8b\u5316", "\nB\uff0e\u5e26\u6709\u865a\u51fd\u6570\u7684\u7c7b\u79f0\u4e3a\u62bd\u8c61\u7c7b", "\nC\uff0e\u5e26\u6709\u7eaf\u865a\u51fd\u6570\u7684\u7c7b\u79f0\u4e3a\u62bd\u8c61\u7c7b", "\nD\uff0e\u62bd\u8c61\u7c7b\u7684\u4f5c\u7528\u662f\u4e3a\u4e00\u4e2a\u7c7b\u65cf\u5efa\u7acb\u4e00\u4e2a\u516c\u5171\u63a5\u53e3", "\n15\uff0e\u4e0b\u5217\u5bf9\u4e00\u7ef4\u6570\u7ec4a\u7684\u6b63\u786e\u5b9a\u4e49\u662f\uff08 C \uff09", "\nA\uff0eint n=5,a[n];", "\nB\uff0eint a(5);", "\nC\uff0econst int n=5;int a[n];", "\nD\uff0eint n\uff1bcin>>n\uff1bint a[n];", "\n16\uff0e\u4e0b\u5217\u6570\u7ec4\u5b9a\u4e49\u8bed\u53e5\u4e2d\uff0c\u4e0d\u5408\u6cd5\u7684\u662f\uff08 A \uff09", "\nA\uff0eint a[3]={0,1,2,3}\uff1b", "\nB\uff0eint a[]={0,1,2}\uff1b", "\nC\uff0eint a[3]={0,1,2}\uff1b", "\nD\uff0eint a[3]={0}\uff1b", "\n17\uff0e\u5df2\u77e5int a[10]={0\uff0c1\uff0c2\uff0c3\uff0c4\uff0c5\uff0c6\uff0c7\uff0c8\uff0c9}\u548c*p=a\uff0c\u5219\u4e0d\u80fd\u8868\u793a\u6570\u7ec4a\u4e2d\u5143\u7d20\u7684\u5f0f\u5b50\u662f\uff08 C \uff09\u3002", "\nA\uff0e*a", "\nB\uff0e*p", "\nC\uff0ea", "\nD\uff0ea[p-a]", "\n18\uff0e\u4ee5\u4e0b\u4e0d\u80fd\u5bf9\u4e8c\u7ef4\u6570\u7ec4a\u8fdb\u884c\u6b63\u786e\u521d\u59cb\u5316\u7684\u8bed\u53e5\u662f\uff08 C \uff09\u3002", "\nA\uff0eint a[2][3]={0}\uff1b", "\nB\uff0eint a[][3]={{0,1},{0}}\uff1b", "\nC\uff0eint a{2}[3]={{0,1},{2,3},{4,5}};", "\nD\uff0eint a[][3]={0\uff0c1\uff0c2\uff0c3\uff0c4\uff0c5\uff0c}\uff1b", "\n19\uff0e\u5df2\u77e5int a[][3]={{0,1},{2,3,4},{5,6};{7}};\u5219a[2][1]\u7684\u503c\u662f\uff08 C \uff09\u3002", "\nA\uff0e0", "\nB\uff0e2", "\nC\uff0e6", "\nD\uff0e7", "\n20\uff0e\u5df2\u77e5char *a[]={\u201cfortran\u201d,\u201dbasic\u201d,\u201dpascal\u201d,\u201djava\u201d,\u201dC++\u201d}\uff1b\u5219cout\nA\uff0ebasic", "\nB\uff0epascal", "\nC\uff0ejava", "\nD\uff0ejavac++", "\n21\uff0e\u82e5\u7528\u6570\u7ec4\u540d\u4f5c\u4e3a\u8c03\u7528\u51fd\u6570\u7684\u5b9e\u53c2\uff0c\u5219\u4f20\u9012\u7ed9\u5f62\u53c2\u7684\u662f\uff08 A \uff09\u3002", "\nA\uff0e\u6570\u7ec4\u5b58\u50a8\u9996\u5730\u5740", "\nB\uff0e\u6570\u7ec4\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u503c", "\nC\uff0e\u6570\u7ec4\u5143\u7d20\u7684\u4e2a\u6570", "\nD\uff0e\u6570\u7ec4\u4e2d\u5168\u90e8\u5143\u7d20\u7684\u503c", "\n22\uff0e\u5224\u65ad\u5b57\u7b26\u4e32s1\u548cs2\u662f\u5426\u76f8\u7b49\u7684\u6b63\u786e\u8868\u8fbe\u5f0f\u662f\uff08  C \uff09", "\nA\uff0es1=s2;", "\nB\uff0es1==s2;", "\nC\uff0estrcmp(s1,s2)==0;", "\nD\uff0estrcpy(s1,s2);", "\n23\uff0e\u4e0b\u9762\u9009\u9879\u4e2d\uff0c\u4e0d\u662f\u7c7b\u7684\u6210\u5458\u51fd\u6570\u7684\u4e3a\uff08 C \uff09", "\nA\uff0e\u6784\u9020\u51fd\u6570", "\nB\uff0e\u6790\u6784\u51fd\u6570", "\nC\uff0e\u53cb\u5143\u51fd\u6570", "\nD\uff0e\u62f7\u8d1d\u6784\u9020\u51fd\u6570", "\n24\uff0e\u4e0b\u5217\u5173\u4e8e\u7c7b\u7684\u7ee7\u627f\u63cf\u8ff0\u4e2d\uff0c\u9519\u8bef\u7684\u662f\uff08 A \uff09\u3002", "\nA\uff0e\u6d3e\u751f\u7c7b\u53ef\u4ee5\u8bbf\u95ee\u57fa\u7c7b\u7684\u6240\u6709\u6570\u636e\u6210\u5458\uff0c\u8c03\u7528\u57fa\u7c7b\u7684\u6240\u6709\u6210\u5458\u51fd\u6570\u3002", "\nB\uff0e\u6d3e\u751f\u7c7b\u7ee7\u627f\u4e86\u57fa\u7c7b\u7684\u5168\u90e8\u5c5e\u6027\u3002", "\nC\uff0e\u7ee7\u627f\u63cf\u8ff0\u7c7b\u7684\u5c42\u6b21\u5173\u7cfb\uff0c\u6d3e\u751f\u7c7b\u53ef\u4ee5\u5177\u6709\u4e0e\u57fa\u7c7b\u76f8\u540c\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u3002", "\nD\uff0e\u4e00\u4e2a\u57fa\u7c7b\u53ef\u4ee5\u6709\u591a\u4e2a\u6d3e\u751f\u7c7b\uff0c\u4e00\u4e2a\u6d3e\u751f\u7c7b\u53ef\u4ee5\u6709\u591a\u4e2a\u57fa\u7c7b\u3002", "\n25\uff0e\u5f53\u4e00\u4e2a\u6d3e\u751f\u7c7b\u516c\u6709\u7ee7\u627f\u4e00\u4e2a\u57fa\u7c7b\u65f6\uff0c\u57fa\u7c7b\u4e2d\u6240\u6709\u516c\u6709\u6210\u5458\u6210\u4e3a\u6d3e\u751f\u7c7b\u7684\uff08 A \uff09", "\nA\uff0epublic\u6210\u5458", "\nB\uff0eprivate\u6210\u5458", "\nC\uff0eprotected\u6210\u5458", "\nD\uff0e\u53cb\u5143", "\n26\uff0e\u4e0d\u8bba\u6d3e\u751f\u7c7b\u4ee5\u4f55\u79cd\u65b9\u5f0f\u7ee7\u627f\u57fa\u7c7b\uff0c\u90fd\u4e0d\u80fd\u4f7f\u7528\u57fa\u7c7b\u7684\uff08 B \uff09", "\nA\uff0epublic\u6210\u5458", "\nB\uff0eprivate\u6210\u5458", "\nC\uff0eprotected\u6210\u5458", "\nD\uff0epublic\u548cprotected\u6210\u5458", "\n27\uff0e\u5728\u4e00\u4e2a\u6d3e\u751f\u7c7b\u4e2d\u91cd\u65b0\u5b9a\u4e49\u57fa\u7c7b\u7684\u865a\u51fd\u6570\u65f6\uff0c\u5e94\u4f7f\uff08 D \uff09", "\nA\uff0e\u51fd\u6570\u540d\u76f8\u540c\uff0c\u4f46\u53c2\u6570\u4e0d\u540c\uff1b", "\nB\uff0e\u51fd\u6570\u540d\u76f8\u540c\uff0c\u4f46\u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b\u4e0d\u540c\uff1b", "\nC\uff0e\u51fd\u6570\u540d\u3001\u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b\u3001\u53c2\u6570\u4e2a\u6570\u3001\u53c2\u6570\u7c7b\u578b\u548c\u987a\u5e8f\u5404\u4e0d\u76f8\u540c\u3002", "\nD\uff0e\u51fd\u6570\u540d\u3001\u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b\u3001\u53c2\u6570\u4e2a\u6570\u3001\u53c2\u6570\u7c7b\u578b\u548c\u987a\u5e8f\u5b8c\u5168\u76f8\u540c\u3002", "\n28\uff0e\u5982\u679c\u628a\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff0c\u5219\uff08 A \uff09", "\nA\uff0e\u5404\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570\u5747\u81ea\u52a8\u4e3a\u865a\u51fd\u6570\uff1b", "\nB\uff0e\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570\u4e0e\u57fa\u7c7b\u6790\u6784\u51fd\u6570\u4e0d\u540c\u540d\uff0c\u6545\u4e0d\u662f\u865a\u51fd\u6570\uff1b", "\nC\uff0e\u6bcf\u4e2a\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570\u90fd\u5fc5\u987b\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff1b", "\nD\uff0e\u53ea\u6709\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u662f\u865a\u51fd\u6570\u3002", "\n29\uff0e\u5f53\u4e00\u4e2a\u6d3e\u751f\u7c7b\u79c1\u6709\u7ee7\u627f\u4e00\u4e2a\u57fa\u7c7b\u65f6\uff0c\u57fa\u7c7b\u4e2d\u6240\u6709\u516c\u6709\u6210\u5458\u548c\u4fdd\u62a4\u6210\u5458\u6210\u4e3a\u6d3e\u751f\u7c7b\u7684\uff08B\uff09", "\nA\uff0epublic\u6210\u5458", "\nB\uff0eprivate\u6210\u5458", "\nC\uff0eprotected\u6210\u5458", "\nD\uff0e\u53cb\u5143", "\n30\uff0e\u5f53\u4e00\u4e2a\u6d3e\u751f\u7c7b\u4fdd\u62a4\u7ee7\u627f\u4e00\u4e2a\u57fa\u7c7b\u65f6\uff0c\u57fa\u7c7b\u4e2d\u6240\u6709\u516c\u6709\u6210\u5458\u548c\u4fdd\u62a4\u6210\u5458\u6210\u4e3a\u6d3e\u751f\u7c7b\u7684\uff08C\uff09", "\nA\uff0epublic\u6210\u5458", "\nB\uff0eprivate\u6210\u5458", "\nC\uff0eprotected\u6210\u5458", "\nD\uff0e\u53cb\u5143", "\n31\uff0e\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u53ef\u4ee5\u8bbf\u95ee(  A  )\u3002", "\nA\uff0e\u516c\u6709\u7ee7\u627f\u7684\u57fa\u7c7b\u7684\u516c\u6709\u6210\u5458", "\nB\uff0e\u516c\u6709\u7ee7\u627f\u7684\u57fa\u7c7b\u7684\u4fdd\u62a4\u6210\u5458", "\nC\uff0e\u516c\u6709\u7ee7\u627f\u7684\u57fa\u7c7b\u7684\u79c1\u6709\u6210\u5458", "\nD\uff0e\u4fdd\u62a4\u7ee7\u627f\u7684\u57fa\u7c7b\u7684\u516c\u6709\u6210\u5458", "\n32\uff0e\u5728\u521b\u5efa\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\uff0c\u6784\u9020\u51fd\u6570\u7684\u6267\u884c\u987a\u5e8f\u662f\uff08 D \uff09", "\nA\uff0e\u5bf9\u8c61\u6210\u5458\u6784\u9020\u51fd\u6570\u3001\u57fa\u7c7b\u6784\u9020\u51fd\u6570\u3001\u6d3e\u751f\u7c7b\u672c\u8eab\u7684\u6784\u9020\u51fd\u6570", "\nB\uff0e\u6d3e\u751f\u7c7b\u672c\u8eab\u7684\u6784\u9020\u51fd\u6570\u3001\u57fa\u7c7b\u6784\u9020\u51fd\u6570\u3001\u5bf9\u8c61\u6210\u5458\u6784\u9020\u51fd\u6570", "\nC\uff0e\u57fa\u7c7b\u6784\u9020\u51fd\u6570\u3001\u6d3e\u751f\u7c7b\u672c\u8eab\u7684\u6784\u9020\u51fd\u6570\u3001\u5bf9\u8c61\u6210\u5458\u6784\u9020\u51fd\u6570", "\nD\uff0e\u57fa\u7c7b\u6784\u9020\u51fd\u6570\u3001\u5bf9\u8c61\u6210\u5458\u6784\u9020\u51fd\u6570\u3001\u6d3e\u751f\u7c7b\u672c\u8eab\u7684\u6784\u9020\u51fd\u6570", "\n33\uff0e\u5728C++\u4e2d\uff0c\u8981\u5b9e\u73b0\u52a8\u6001\u8054\u7f16\uff0c\u5fc5\u987b\u4f7f\u7528\uff08 C \uff09\u8c03\u7528\u865a\u51fd\u6570\u3002", "\nA\uff0e\u7c7b\u540d", "\nB\uff0e\u5bf9\u8c61\u540d", "\nC\uff0e\u57fa\u7c7b\u6307\u9488", "\nD\uff0e\u6d3e\u751f\u7c7b\u6307\u9488", "\n34\uff0e\u4e0b\u5217\u51fd\u6570\u4e2d\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u865a\u51fd\u6570\u7684\u662f\uff08 D \uff09\u3002", "\nA\uff0e\u666e\u901a\u51fd\u6570", "\nB\uff0e\u6784\u9020\u51fd\u6570", "\nC\uff0e\u6210\u5458\u51fd\u6570", "\nD\uff0e\u6790\u6784\u51fd\u6570", "\n35\uff0e\u4e0b\u9762\u51fd\u6570\u539f\u578b\u58f0\u660e\u4e2d\uff0c\u58f0\u660efun\u4e3a\u7eaf\u865a\u51fd\u6570\u7684\u662f\uff08 B \uff09\u3002", "\nA\uff0evoid fun()=0;", "\nB\uff0evirtual void fun()=0;", "\nC\uff0evirtual void fun();", "\nD\uff0evirtual void fun(){ };", "\n36\uff0e\u4e0b\u5217\u63cf\u8ff0\u4e2d\uff0c\u4e0d\u6b63\u786e\u7684\u662f\uff08 A \uff09\u3002", "\nA\uff0e\u865a\u51fd\u6570\u662f\u6ca1\u6709\u5b9e\u73b0\u7684\u51fd\u6570", "\nB\uff0e\u7eaf\u865a\u51fd\u6570\u7684\u5b9e\u73b0\u5728\u6d3e\u751f\u7c7b\u4e2d\u5b9a\u4e49", "\nC\uff0e\u62bd\u8c61\u7c7b\u662f\u5177\u6709\u7eaf\u865a\u51fd\u6570\u7684\u7c7b", "\nD\uff0e\u62bd\u8c61\u7c7b\u6307\u9488\u53ef\u4ee5\u6307\u5411\u4e0d\u540c\u7684\u6d3e\u751f\u7c7b\u5bf9\u8c61", "\n37\uff0e\u4e00\u4e2a\u7c7b\u53ef\u4ee5\u6709\u591a\u4e2a\u6784\u9020\u51fd\u6570\uff0c\u8fd9\u4e9b\u6784\u9020\u51fd\u6570\u4e4b\u95f4\u7684\u5173\u7cfb\u662f\uff08 A \uff09", "\nA\uff0e\u91cd\u8f7d", "\nB\uff0e\u91cd\u590d", "\nC\uff0e\u62f7\u8d1d", "\nD\uff0e\u8986\u76d6", "\n38\uff0e\u4e0b\u5217\u5173\u4e8e\u6784\u9020\u51fd\u6570\u7684\u8bf4\u6cd5\u4e0d\u6b63\u786e\u7684\u662f\uff08 A \uff09", "\nA\uff0e\u4e00\u4e2a\u7c7b\u4e2d\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u6784\u9020\u51fd\u6570\u3002", "\nB\uff0e\u6784\u9020\u51fd\u6570\u5728\u521b\u5efa\u7c7b\u7684\u5bf9\u8c61\u65f6\u88ab\u81ea\u52a8\u6267\u884c\u3002", "\nC\uff0e\u6784\u9020\u51fd\u6570\u6ca1\u6709\u51fd\u6570\u7c7b\u578b\u3002", "\nD\uff0e\u7c7b\u7684\u6784\u9020\u51fd\u6570\u7684\u51fd\u6570\u540d\u5fc5\u987b\u4e0e\u8be5\u7c7b\u7684\u7c7b\u540d\u76f8\u540c\u3002", "\n39\uff0e\u4e0b\u5217\u5173\u4e8e\u6790\u6784\u51fd\u6570\u7684\u8bf4\u6cd5\u4e0d\u6b63\u786e\u7684\u662f\uff08 B \uff09", "\nA\uff0e\u4e00\u4e2a\u7c7b\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u6790\u6784\u51fd\u6570\u3002", "\nB\uff0e\u6790\u6784\u51fd\u6570\u53ef\u4ee5\u6709\u5f62\u53c2\u3002", "\nC\uff0e\u6790\u6784\u51fd\u6570\u6ca1\u6709\u51fd\u6570\u7c7b\u578b\u3002", "\nD\uff0e\u6790\u6784\u51fd\u6570\u5728\u7c7b\u7684\u5bf9\u8c61\u6d88\u5931\u65f6\u88ab\u81ea\u52a8\u6267\u884c\u3002", "\n40\uff0e\u4e0b\u5217\u5404\u9879\u4e0d\u5c5e\u4e8e\u7c7b\u578b\u517c\u5bb9\u89c4\u5219\u7684\u662f\uff08 A \uff09", "\nA\uff0e\u57fa\u7c7b\u7684\u5bf9\u8c61\u53ef\u4ee5\u8d4b\u503c\u7ed9\u6d3e\u751f\u7c7b\u5bf9\u8c61", "\nB\uff0e\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u53ef\u4ee5\u8d4b\u503c\u7ed9\u57fa\u7c7b\u7684\u5bf9\u8c61", "\nC\uff0e\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u53ef\u4ee5\u521d\u59cb\u5316\u57fa\u7c7b\u7684\u5f15\u7528", "\nD\uff0e\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684\u5730\u5740\u53ef\u4ee5\u8d4b\u503c\u7ed9\u6307\u5411\u57fa\u7c7b\u7684\u6307\u9488", "\n41\uff0e\u4e0b\u5217\u5bf9\u4e8eint *pa[5]\u7684\u63cf\u8ff0\uff0c\u6b63\u786e\u7684\u662f\uff08 D \uff09\u3002", "\nA\uff0epa\u662f\u4e00\u4e2a\u6307\u5411\u6570\u7ec4\u7684\u6307\u9488\uff0c\u6240\u6307\u5411\u7684\u6570\u7ec4\u662f5\u4e2aint\u578b\u5143\u7d20", "\nB\uff0epa\u662f\u4e00\u4e2a\u6307\u5411\u67d0\u6570\u7ec4\u4e2d\u7684\u7b2c5\u4e2a\u5143\u7d20\u7684\u6307\u9488\uff0c\u8be5\u5143\u7d20\u662fint\u578b\u53d8\u91cf", "\nC\uff0epa[5]\u8868\u793a\u67d0\u4e2a\u6570\u7ec4\u7684\u7b2c5\u4e2a\u5143\u7d20\u7684\u503c", "\nD\uff0epa\u662f\u4e00\u4e2a\u5177\u67095\u4e2a\u5143\u7d20\u7684\u6307\u9488\u6570\u7ec4\uff0c\u6bcf\u4e2a\u5143\u7d20\u662f\u4e00\u4e2aint\u578b\u6307\u9488", "\n42\uff0e\u6267\u884c\u4e0b\u5217\u8bed\u53e5\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff08\u3000C \uff09\u3002", "\nint hot=100;", "\nint &rad=hot;", "\nhot+=100;", "\ncout\nA\uff0e0", "\nB\uff0e100", "\nC\uff0e200", "\nD\uff0e300", "\n43\uff0e\u4e0b\u5217\u5bf9\u7ed3\u6784\u53ca\u5176\u53d8\u91cf\u5b9a\u4e49\u9519\u8bef\u7684\u662f\uff1a\uff08 D \uff09", "\nA\uff0estruct MyStruct{", "\n                   int num;", "\n                   char ch;", "\n                };", "\n MyStruct  my;", "\nB\uff0estruct MyStruct{", "\n                int num;", "\n                char ch;", "\n                 }my;", "\nC\uff0e  struct{", "\n          int num;", "\n          char ch;", "\n}", "\nmy;", "\nD\uff0estruct{", "\n                int num;", "\n                char ch;", "\n                };", "\n                struct  my;", "\n44\uff0e\u4e0b\u5217\u5173\u4e8e\u6307\u9488\u8fd0\u7b97\u7684\u63cf\u8ff0\u9519\u8bef\u7684\u662f\uff1a\uff08 A \uff09", "\nA\uff0e\u5728\u4e00\u5b9a\u6761\u4ef6\u4e0b\uff0c\u4e24\u4e2a\u6307\u9488\u53ef\u4ee5\u76f8\u52a0", "\nB\uff0e\u5728\u4e00\u5b9a\u6761\u4ef6\u4e0b\uff0c\u4e24\u4e2a\u6307\u9488\u53ef\u4ee5\u8fdb\u884c\u5173\u7cfb\u8fd0\u7b97", "\nC\uff0e\u5728\u4e00\u5b9a\u6761\u4ef6\u4e0b\uff0c\u6307\u9488\u53ef\u4ee5\u4e3a\u7a7a", "\nD\uff0e\u5728\u4e00\u5b9a\u6761\u4ef6\u4e0b\uff0c\u4e24\u4e2a\u6307\u9488\u53ef\u4ee5\u76f8\u4e92\u8d4b\u503c", "\n45\uff0e\u4e0b\u9762\u5173\u4e8e\u7c7b\u7684\u5bf9\u8c61\u7684\u63cf\u8ff0\u4e2d\uff0c\u4e0d\u6b63\u786e\u7684\u662f\uff08 C  \uff09", "\nA\uff0e\u4e00\u4e2a\u5bf9\u8c61\u53ea\u80fd\u5c5e\u4e8e\u4e00\u4e2a\u7c7b", "\nB\uff0e\u5bf9\u8c61\u662f\u7c7b\u7684\u5b9e\u4f8b", "\nC\uff0e\u4e00\u4e2a\u7c7b\u53ea\u80fd\u6709\u4e00\u5bf9\u8c61", "\nD\uff0e\u7c7b\u548c\u5bf9\u8c61\u7684\u5173\u7cfb\u4e0e\u6570\u636e\u7c7b\u578b\u548c\u53d8\u91cf\u7684\u5173\u7cfb\u7c7b\u4f3c", "\n47\uff0e\u82e5\u6709\u5982\u4e0b\u58f0\u660e\uff1a", "\nclass A{ int a;};", "\n\u5219a\u662f\u7c7bA\u7684\uff08 C  \uff09", "\nA\uff0e\u516c\u6709\u6570\u636e\u6210\u5458", "\nB\uff0e\u516c\u6709\u6210\u5458\u51fd\u6570", "\nC\uff0e\u79c1\u6709\u6570\u636e\u6210\u5458", "\nD\uff0e\u79c1\u6709\u6210\u5458\u51fd\u6570", "\n48\uff0e\u5728\u7c7b\u5916\u5b9a\u4e49\u6210\u5458\u51fd\u6570\u65f6\uff0c\u9700\u8981\u5728\u51fd\u6570\u540d\u524d\u52a0\u4e0a\uff08 D  \uff09", "\nA\uff0e\u5bf9\u8c61\u540d", "\nB\uff0e\u7c7b\u540d", "\nC\uff0e\u4f5c\u7528\u57df\u8fd0\u7b97\u7b26", "\nD\uff0e\u7c7b\u540d\u548c\u4f5c\u7528\u57df\u8fd0\u7b97\u7b26", "\n49\uff0e\u4e00\u4e2a\u7c7b\u7684\u53cb\u5143\u51fd\u6570\u53ef\u4ee5\u8bbf\u95ee\u8be5\u7c7b\u7684\uff08 D \uff09", "\nA\uff0e\u79c1\u6709\u6210\u5458", "\nB\uff0e\u516c\u6709\u6210\u5458", "\nC\uff0e\u4fdd\u62a4\u6210\u5458", "\nD\uff0e\u79c1\u6709\u6210\u5458\u3001\u516c\u6709\u6210\u5458\u548c\u4fdd\u62a4\u6210\u5458", "\n50\uff0e\u4e0b\u5217\u5173\u4e8e\u6d3e\u751f\u7c7b\u7684\u63cf\u8ff0\u4e2d\uff0c\u4e0d\u6b63\u786e\u7684\u662f\uff08 B \uff09", "\nA\uff0e\u6d3e\u751f\u7c7b\u9664\u4e86\u5305\u542b\u5b83\u81ea\u5df1\u7684\u6210\u5458\u5916\uff0c\u8fd8\u5305\u542b\u57fa\u7c7b\u7684\u6210\u5458", "\nB\uff0e\u6d3e\u751f\u7c7b\u4e2d\u7ee7\u627f\u7684\u57fa\u7c7b\u7684\u6210\u5458\u7684\u8bbf\u95ee\u6743\u9650\u5728\u6d3e\u751f\u7c7b\u4e2d\u4fdd\u6301\u4e0d\u53d8", "\nC\uff0e\u6d3e\u751f\u7c7b\u53ea\u5c11\u6709\u4e00\u4e2a\u57fa\u7c7b", "\nD\uff0e\u4e00\u4e2a\u6d3e\u751f\u7c7b\u53ef\u4ee5\u4f5c\u4e3a\u53e6\u4e00\u4e2a\u6d3e\u751f\u7c7b\u7684\u57fa\u7c7b\u3002"], "title": "C++\u7b14\u8bd5\u9898"},
{"contents": ["\u4f7f\u7528\u4e24\u4e2astack, s1\u548cs2", "Push\u65f6\uff0cpush\u5230s1", "Pop\u65f6\uff0c\u82e5s2\u975e\u7a7a\uff0c\u5219\u4eces2\u4e2dpop, \u82e5s2\u4e3a\u7a7a\uff0c\u5219\u5c06s1\u7684\u5168\u90e8\u5143\u7d20pop\u5230s2\u4e2d\uff0c\u518d\u4eces2\u4e2dpop", "\u5206\u644a\u590d\u6742\u5ea6\u4e3aO(1)", "1. \u5355\u4e2a\u9a8c\u8bc1\u662f\u5426\u4e3a\u7d20\u6570", "2. \u7b5b\u6cd5", "\u4e24\u79cd\u65b9\u6cd5\uff0c1\u4ece\u89d2\u4e0a\u5f00\u59cbsearch, 2\uff0c Divide and Conquer", "\u5206\u6cbb\u6cd5\u53ef\u4ee5\u7528\u6765\u89e3\u51b3\u53e6\u5916\u4e00\u4e2a\u95ee\u9898\uff0c\u5728\u884c\u5217\u6709\u5e8f\u7684\u4e8c\u7ef4\u6570\u7ec4\u4e2d\uff0c\u5927\u4e8e/\u5c0f\u4e8e0\u7684\u5143\u7d20\u6709\u591a\u5c11\u4e2a\uff1f", "TO LEARN", "TO LEARN", "\u4f9d\u6b21\u626b\u63cf\uff1f\u7565\u3002\u3002\u3002", "\u00a0", "\u5148\u5c06\u6574\u4e2a\u5b57\u7b26\u4e32\u53cd\u8f6c\uff0c\u518d\u6309\u4e2a\u5b57\u7b26\u53cd\u8f6c", "TODO \u5982\u4f55\u4e0d\u7528recursion?", "1. 1G\u5185\u5b58\u67091024*1024*1024*8\u4e2a\u4f4d\uff0c\u626b\u63cf\u4e00\u904d\u8bb0\u4f4d\u5373\u53ef", "2. \u5982\u679c\u5185\u5b58\u4e0d\u591f\uff0c\u53ef\u4ee5\u4f9d\u6b21\u5904\u740610*1024*1024*8\u4e2a\u6570\uff0c\u9700\u8981\u626b\u63cf4*1024/10/8\u5927\u698250\u8d9f", "\u00a0", "\u4e2d\u5e8f\u904d\u5386\uff0c\u52a0\u4e00\u4e2acollection\u4f5c\u4e3a\u53c2\u6570\u5373\u53ef", "\u00a0", "\u8ba1\u7b97\u4e24\u4e24\u70b9\u591f\u6210\u7684\u76f4\u7ebf\u65b9\u7a0bx+By+C=0\uff0c \u627e\u51fa\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u65b9\u7a0b\u5373\u53ef", "\u00a0", "\u7565\u3002\u3002\u3002", "\u00a0", "\u00a0", "\u4f5c\u4e00\u4e2ashuffle,\u7136\u540e\u9009\u53d6\u524dK\u4e2a\uff08\u56e0\u6b64shuffle\u65f6\u53ea\u8981\u8fdb\u884c\u5230\u7b2cK\u4e2a\u5373\u53ef\uff09", "\u00a0", "\u7565\u3002\u3002\u3002\u5e94\u8be5\u9700\u8981\u7528\u5230static\u53d8\u91cf", "\u00a0", "TO LEARN", "\u627e\u786c\u5e01\u7684DP\u7a0b\u5e8f:", "\u00a0", "\u7565\u3002\u3002\u3002"], "title": "C++\u7f16\u7a0b\uff0c\u6570\u636e\u7ed3\u6784\uff0c\u7b97\u6cd5\u7c7b\u9762\u8bd5\u9898\u96c6(2)"},
{"contents": ["\nCoding\u9898\uff0c\u5927\u81f4\u8981\u70b9:", "\u00a0", "\u5173\u4e8e\u591a\u7ebf\u7a0b\uff0c\u4e00\u822c\u6765\u8bf4reader/writer lock\u4e0d\u9002\u7528\uff0c\u56e0\u4e3areader\u4e5f\u4f1a\u66f4\u6539LRU cache. \u4e00\u79cd\u89e3\u51b3\u7684\u529e\u6cd5\u662f\u8ba9\u6bcf\u4e2a\u7ebf\u7a0b\u62e5\u6709\u81ea\u5df1\u7684cache.", "\u00a0", "b)\u00a0 ", "\u6bcf\u6b21size\u4e0d\u591f\u7528\u65f6\uff0c\u5efa\u4e00\u4e2a\u66f4\u5927\u7684array\u5e76\u590d\u5236\u539f\u6709\u6570\u636e", "c)\u00a0 ", "\u4fdd\u8bc1\u4e86\u64cd\u4f5c\u6052\u5b9a\u4e3aO(1),\u4f46\u662f\u5185\u5b58\u6709\u6d6a\u8d39\uff0c\u4e14\u4e0d\u8fde\u7eed", "For i = 0 to n-1,", "\u751f\u6210\u4e00\u4e2ai\u5230n-1\u4e4b\u95f4\u7684\u968f\u673a\u6570j\uff0c\u5c06v[i]\u4e0ev[j]\u4ea4\u6362", "\u5206\u6210\u5982\u4e0b\u51e0\u6b65:", "Graham\u626b\u63cf\u7b97\u6cd5\uff1a", "a)\u00a0\u00a0 Px\u4e3a\u6808\u9876\u7684\u4e0b\u4e00\u4e2a\u70b9\uff0cPy\u4e3a\u6808\u9876\uff0c\u5f53\u524d\u70b9\u4e3aPi", "b)\u00a0\u00a0 \u5982\u679cPy->Pi, \u76f8\u5bf9\u4e8ePx->Py\u5411\u53f3", "i.\u00a0\u00a0\u00a0\u00a0\u00a0 Pop\u6808", "ii.\u00a0\u00a0\u00a0\u00a0\u00a0 Push Pi\u5230\u6808", "\u7b97\u6cd5\u590d\u6742\u4e3aO(NlogN) (\u7b2c\u4e8c\u6b65\u7684\u6392\u5e8f)", "\u4e00\u4e00\u8ba1\u7b97\u5149\u6e90\u5230(x,y)\u7684\u89d2\u5ea6\uff0c\u518d\u4e0e\u5de6\u8fb9\u7684\u89d2\u5ea6\u5bf9\u6bd4\u5373\u53ef\u77e5\u662f\u5426\u88ab\u906e\u6321\uff0c\u590d\u6742\u5ea6O(N)", "\u00a0", "\u6309\u5355\u8bcd\u7684\u957f\u5ea6\u4e0d\u540c\uff0c\u6784\u9020\u591a\u4e2acontainer", "\u5bf9\u67d0\u4e00\u7ec4\u957f\u5ea6\u76f8\u540c\u7684\u5355\u8bcd\uff0c\u6784\u9020\u591a\u4e2aindex, \u4ece(2,o), (5, H) \u6620\u5c04\u5230\u5355\u8bcd\uff08id\uff09, \u6bcf\u4e00\u4e2acollection\u4fdd\u6301\u6709\u5e8f\uff0c\u53ef\u4ee5\u52a0\u5febmerge\u7684\u901f\u5ea6", "Binary Tree Iterator:", "\u5047\u8bbe\u662f\u4e2d\u5e8f\u904d\u5386\u7684\u8bdd\uff0c\u5728iterator\u4e2d\u4fdd\u5b58\u4e00\u4e2a\u904d\u5386\u7684\u72b6\u6001(parent node stack).", "Hash Table Iterator:", "\u53d6\u51b3\u4e8ehash table\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4e00\u822c\u76f4\u63a5\u6309array\u6216\u8005bucket\u987a\u5e8f\u904d\u5386\u5c31\u53ef\u4ee5\u4e86\u3002", "\u7ed9stack\u52a0\u4e00\u4e2a\u53ea\u7528\u6765\u4fdd\u5b58\u5f53\u524d\u6700\u5c0f\u503c\u7684stack, Push\u65f6\uff0c\u5982\u679c\u5f53\u524d\u503c\u6bd4minStack\u6808\u9876\u5c0f\uff0c\u5219\u4e5fpush\u5230MinStack, Pop\u65f6\uff0c\u5982\u679cminStack\u6808\u9876\u4e0e\u5f53\u524dpop\u5143\u7d20\u4e00\u6837\u5927\uff0c\u5219\u4e5fpop minStack", "\u00a0", "\u9012\u5f52\u6bd4\u8f83 if (tree1->value == tree2->value) && is_equal(tree1->left, tree2->left) && is_equal(tree1->right, tree2->right)", "\u00a0", "\u8003\u8651\u4e8c\u4e2a\u6570a,b\uff0c a\u4e0eb\u5148\u6bd4\uff0c\u5927\u7684\u4e0e\u5f53\u524d\u6700\u5927\u6bd4\uff0c\u5c0f\u7684\u4e0e\u5f53\u524d\u6700\u5c0f\u6bd4\u3002\u4e24\u4e2a\u6570\u5171\u9700\u8981\u6bd4\u8f83\u4e09\u6b21\u3002", "\u00a0", "\u5927\u81f4\u7b97\u6cd5\uff1a\u6309\u4f4d\u7f6e\u5f80\u540e\u627e\uff0c\u76f4\u5230\u6240\u6709\u7684\u8bcd\u90fd\u51fa\u73b0\uff0c\u7136\u540e\u518d\u5c1d\u8bd5\u628a\u5de6\u8fb9\u7684\u4f4d\u7f6e\u7f29\u51cf\u3002\u5982\u6b64\u76f4\u5230\u627e\u5230\u66f4\u77ed\u7684\u533a\u95f4\u3002", "\u89c1\u540e\u9762\u7684find_min_window\u7684\u7a0b\u5e8f\uff0c\u8fd9\u91cc\u9700\u8981\u5904\u7406inverted index", "\u89c1Programming Pearls, \u5148\u628a[a,c] reverse, \u518dreverse[a,b],[b,c]", "\u00a0", "\u7565\u3002\u3002\u3002", "\u7565\u3002\u3002\u3002", "\u00a0", "\u7b80\u5355\u7684\u6808\u7684\u5e94\u7528"], "title": "C++\u7f16\u7a0b\uff0c\u6570\u636e\u7ed3\u6784\uff0c\u7b97\u6cd5\u7c7b\u9762\u8bd5\u9898\u96c6(1)"},
{"contents": ["1. \u4e00\u4e2a\u7cfb\u7edf\u91cc\u9762\u6709\u591a\u4e2a\u7ebf\u7a0b, \u5176\u4e2d\u4e00\u4e2a\u7ebf\u7a0b\u60f3\u7ec8\u6b62\u53e6\u5916\u4e00\u4e2a\u7ebf\u7a0b, \u8be5\u600e\u4e48\u5b9e\u73b0.", "2. \u4e3a\u4ec0\u4e48\u8981\u7528virtual destructor", "3. \u4ec0\u4e48\u662fheap corruption", "4. Semaphore VS Mutex", "5. C++\u4e2d\u7684static, \u600e\u4e48\u7528\uff0c\u5185\u5b58\u5728\u54ea\u91cc\u5206\u914d\uff0c\u7b49\u7b49", "6. sizeof\u4e00\u4e2a\u6307\u9488\u548csizeof\u4e00\u4e2a\u6307\u9488\u6307\u5411\u7684\u7a7a\u95f4\u6709\u4ec0\u4e48\u4e0d\u540c\uff1f", "7. char* \u548cchar[]\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "8. \u64cd\u4f5c\u7cfb\u7edf\u7684Page\u662f\u600e\u4e48\u505a\u7684\uff1f", "9. \u4ec0\u4e48\u662fThrashing", "10. \u4ec0\u4e48\u662fvolatileu\u5173\u952e\u5b57? \u5728\u4ec0\u4e48\u60c5\u51b5\u4e0b\u9700\u8981\u4f7f\u7528\uff1f", "11. \u4ec0\u4e48\u662fcritical section?", "\u00a0", "12. C++\u91cc\u9762\u7684dynamic_cast\u5982\u4f55\u5b9e\u73b0\uff0c\u4e3a\u4ec0\u4e48dynamic_cast\u8981\u6c42\u88abcast\u7684\u6307\u9488\u6307\u5411\u7684\u7c7b", "\n\u81f3\u5c11\u8981\u6709\u4e00\u4e2avirtual method?", "13. virtual inheritance \u4e3a\u4ec0\u4e48\u80fd\u591f\u907f\u514d\u5bfc\u51fa\u7c7b\u4e2d\u6709\u591a\u4e8e\u4e00\u4e2a\u7684virtual base class", "\n\u7684copy?", "14. deadlock\u2019s four condition", "15. \u5173\u4e8eC++ \u5904\u7406\u5f02\u5e38\u7684\u65b9\u6cd5", "16. static \u53d8\u91cf\u6700\u5927\u7684\u95ee\u9898\u662f\u4ec0\u4e48\uff08\u8003\u8651\u591a\u7ebf\u7a0b\uff09\uff1f", "17. state Machine \u7684\u51e0\u79cd\u5b9e\u73b0\u65b9\u6cd5\uff0c \u5404\u81ea\u7684\u4f18\u7f3a\u70b9\u662f\u4ec0\u4e48", "18. \u591a\u7ebf\u7a0b\u7a0b\u5e8f\u91cc\uff0c\u4f60\u6700\u559c\u6b22\u54ea\u79cd\u540c\u6b65\u64cd\u4f5c\uff1f Mutex\u662f\u5927\u5bb6\u7528\u5f97\u6700\u591a\u7684, \u4e3a\u4ec0\u4e48\uff1fMutex\u6709\u4ec0\u4e48\u4e0d\u597d\uff1f (overhead\uff0cserialize\uff0cdeadlock), \u7ed9\u4f8b\u5b50\u3002\u5982\u4f55\u907f\u514d\u8fd9\u4e9b\u574f\u5904\uff1f\uff08lock-free\u7b97\u6cd5\uff0c \u6bd4\u5982lock-free\u7684queue\uff0cstack\uff0chashtable\uff09\u4e00\u822c\u7528\u4ec0\u4e48\u529e\u6cd5\u6765\u5199lock-free\u7b97\u6cd5\uff1f(\u7528CAS\u7b49\u539f\u5b50\u64cd\u4f5c\uff0c\u7b49\u7b49), \u5982\u4f55\u5b9e\u73b0\u4e00\u4e2alock-free\u7684queue? (coding ?)", "19. strlen(\u201chello\u201d)=? , sizeof(\u201chello\u201d)=?", "20. \u5982\u679cmain\u51fd\u6570\u53ea\u6709\u5982\u4e0b\u7ed3\u6784", "\nint main(\u2026)", "\n{", "\nTry{\u2026}", "\ncatch(){\u2026}", "\n}", "\n\u5e76\u4e14\u8fd9\u4e2acatch\u8bed\u53e5catch\u4e86\u6240\u6709\u7684exception\uff0c\u4f46\u662f\u8fd9\u4e2a\u7a0b\u5e8f\u8fd8\u662fcoredump\u4e86\uff0c\u95ee\u53ef\u80fd\u662f\u4ec0\u4e48\u95ee\u9898\u5f15\u8d77\u7684\u3002", "21. singleton, \u591a\u7ebf\u7a0b, \u5982\u4f55\u505adouble check?", "22. Command Pattern", "23. \u540c\u6b65/\u5f02\u6b65IO\u548c\u963b\u585e/\u975e\u963b\u585eIO\u7684\u533a\u522b\uff1f", "24. \u5199\u4e00\u4e2athread safe lazy initialization \u7684singleton", "25. Map Reduce\u548cMulti-thread\u7684trade-off"], "title": "C++\u77e5\u8bc6\u7c7b\u9762\u8bd5\u9898"},
{"contents": ["\uff1f\uff1f\uff1f\u53ef\u80fd\u5417\uff1f\u6ca1\u6709\u989d\u5916memory, \u5426\u5219\u505a\u4e2aDFS/BFS\u5373\u53ef", "\u5148\u6309\u5c42\u904d\u5386\uff0c\u5c06\u6bcf\u4e00\u5c42\u7684\u5f00\u59cb\u653e\u5230left edge, \u7ed3\u5c3e\u653e\u5230right edge. \u518d\u4e2d\u5e8f\u904d\u5386\u6253\u51fa\u6240\u6709\u7684leaf node\uff08\u8fd9\u91cc\u53d6\u51b3\u4e8eleaf node\u7684\u5b9a\u4e49\uff09\uff0c CODE\u53d6\u81ea\uff1a", "TO LEARN\uff0c \u50cf\u6570\u5b66\u9898", "\u00a0", "\u7565\u3002\u3002\u3002", "\u89c1133\u9898", "\u00a0", "\u5047\u8bbe\u6240\u8981\u5206\u89e3\u7684\u6570\u4e3ax \uff0c\u5206\u89e3\u6210n\u4e2a\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u8868\u793a\uff1a", "x=m+(m+1)+(m+2)+\u2026\u2026\u2026.+(m+n-1)", "\u5176\u4e2dm\u4e3a\u5206\u89e3\u6210\u7684\u8fde\u7eed\u6574\u6570\u4e2d\u6700\u5c0f\u7684\u90a3\u4e00\u4e2a\uff0c\u5e76\u4e14\u6211\u4eec\u77e5\u9053m\u5927\u4e8e\u7b49\u4e8e1\u7684\u6b63\u6574\u6570\u3002\u6613\u77e5\uff1a", "x=(2m+n-1)*n/2\uff0c \u53d8\u6362\u4e00\u4e0b\u7684m=\uff082*x/n-n+1)/2", "\u7531m\u7684\u8303\u56f4\u6211\u4eec\u77e5\u9053\uff082*x/n-n+1)/2>=1\u00a0\u4ee5\u4e0a\u5c31\u662fx\u548cn\u7684\u5173\u7cfb\u3002\u7ed9\u5b9a\u4e00\u4e2an\u770b\u662f\u5426x\u80fd\u5206\u89e3\u6210n\u4e2a\u8fde\u7eed\u6574\u6570\u7684\u548c\u53ef\u4ee5\u5224\u65ad\u662f\u5426\u5b58\u5728m\uff0c\u4e5f\u5c31\u662f\u8f6c\u6362\u6210\uff082*x/n-n+1)\u662f\u5426\u662f\u5076\u6570\u3002", "\u4ee3\u7801\u7565", "\u00a0", "\u89c179\u9898", "\u00a0", "G(n) = max{G(n-1)+1, g(n-k)*(k-2)}", "\u00a0", "Binary Search\u7684\u6269\u5c55\uff0c\u89c1142\u9898", "NP\u5b8c\u5168\u95ee\u9898\uff0c\u89c1\uff1a", "\u00a0", "\u627e\u5230\u5165\u5ea6\u4e3a\u96f6\u7684node\u5373\u53ef", "\u00a0", "TO LEARN\uff0c \u6709\u70b9\u7c7b\u4f3c\u4e8edancing links\u7528\u5230\u7684\u6ee1\u8db3\u95ee\u9898", "\u53ea\u80fd\u662f\u641e\u51e0\u5f20aggregate\u8868\uff0c\u6309\u79d2\uff0c\u5206\u949f\uff0c\u5c0f\u65f6\u7b49\u505a\u4e3a\u7c92\u5ea6\u3002\u3002\u3002", "\u00a0", "\u5982\u679c\u8981\u627e\u6240\u6709conflicts, \u5219\u590d\u6742\u5ea6\u4e3aO(N^2)\uff0c \u7565\u3002\u3002\u3002", "\u00a0", "\u6709\u70b9\u7c7b\u4f3c\u4e8e\u8bbe\u8ba1\u9898\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a\u4f18\u5316\u8fc7\u7684prefix tree?", "\u96be\u9898\uff0c TO LEARN", "\u00a0", "DP\u9898\uff0c\u5b9a\u4e49g(n,l,r)\u4e3a\u9898\u76ee\u7684\u7b54\u6848\uff0c\u800cf(n,l)\u4e3an\u4e2ablock,\u4ece\u5de6\u8fb9\u770b\u5230l\u4e2ablock,\u5219\u9012\u63a8\u516c\u5f0f\u4e3a\uff1a", "g(n,l,r) = (1<=k<=n)sum(C(n-1,k-1)*f(k-1,l-1)*f(n-k,r-1))", "f(n,l) = (1<=k<=n)sum(C(n-1,k-1)*f(K-1,l-1)*(n-k)!)", "f(n,1) = (n-1)!", "F(n,n) = 1", "F(n,m) = 0 if n < m", "\u00a0", "\u5982\u4f55\u5b9a\u4e49in the path?\u2026\u7565\u3002\u3002\u3002", "\u00a0", "\u53ef\u4ee5\u76f4\u63a5\u7ebf\u6027\u626b\u63cf\uff0c\u4e5f\u53ef\u4ee5\u7528binary search\u6765\u4f18\u5316\uff08\u5982\u679c\u91cd\u590d\u6570\u6bd4\u8f83\u591a\uff09", "balance load,\u53ef\u4ee5\u5c06big file\u5206\u6210\u6bd4\u8f83\u5c0f\u7684\u5757\uff0c\u6bcf\u53f0\u673a\u5668\u5b8c\u6210\u82e5\u5e72\u5757\uff0c\u6839\u636e\u8ba1\u7b97\u60c5\u51b5\u8fdb\u884c\u8c03\u5ea6\u3002", "\u7b97\u6cd5\uff1a", "CODE", "\u7b80\u5355\u9898\uff0c\u7565\u3002\u3002\u3002", "Notepad++\u4f7f\u7528gap buffer, \u5373\u5728\u4e00\u6bb5buffer\u7684\u4e2d\u95f4\u7559\u4e0b\u7a7a\u95f4\uff0c\u8fd9\u6837\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u90fd\u662fO(1). \u5173\u4e8esearch\uff0c\u53ef\u4ee5\u7528Rabin karp\u7b97\u6cd5\u3002", "Rope \u4e5f\u662f\u4e00\u79cd\u53ef\u4ee5\u8003\u8651\u7684\u6570\u636e\u7ed3\u6784\uff0c\u89c1\uff1a", "\u5c06\u6240\u6709\u76840\u6362\u6210-1\uff0c\u5148\u8ba1\u7b97\u7d2f\u52a0\u548c,cum[i] = a[0]+\u2026+a[i], \u5219\u95ee\u9898\u8f6c\u5316\u4e3a\uff1a\u6c42cum[i]\u76f8\u540c\u65f6\u7684\u6700\u5927\u7684index\u5dee\u3002\u626b\u63cf\u8ba1\u7b97\u5373\u53ef\uff0c\u590d\u6742\u5ea6O(N)", "\u7c7b\u4f3c\u7684\u95ee\u9898\u6709\uff08\u5229\u7528\u7d2f\u52a0\u548c\uff09\uff1a", "1.\u4e00\u4e2a\u6709\u6b63\u6709\u8d1f\u7684\u6570\u7ec4\u4e2d\uff0c\u6c42\u4e00\u4e2asubarray\u4f7f\u5176\u548c\u6700\u63a5\u8fd10", "2.\u5bf9\u6570\u7ec4\u8fdb\u884cadd(l,r,v)\u64cd\u4f5c\uff0c\u5373\u5bf9a[l]\u5230a[r]\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u52a0\u4e0av, \u73b0\u6709N\u4e2a\u8fd9\u79cd\u64cd\u4f5c\uff0c\u600e\u4e48\u5728O(N)\u65f6\u95f4\u5185\u5b8c\u6210\uff1f", "DNFP\u95ee\u9898,\u89c1138\u9898\u3002"], "title": "C++\u7f16\u7a0b\uff0c\u6570\u636e\u7ed3\u6784\uff0c\u7b97\u6cd5\u7c7b\u9762\u8bd5\u9898\u96c6(5)"},
{"contents": ["\u8981\u6c42\u6839\u636e\u4ee3\u7801\u5206\u6790\u4ee3\u7801\u7684\u529f\u80fd\uff1a", "\nunsigned int CountOne(unsigned int x){", "\nx = (x & 0\u00d755555555) + (x >> 1 & 0\u00d755555555);", "\nx = (x & 0\u00d733333333) + (x >> 2 & 0\u00d733333333);", "\nx = (x & 0x0f0f0f0f) + (x >> 4 & 0x0f0f0f0f);", "\nx = (x & 0x00ff00ff) + (x >> 8 & 0x00ff00ff);", "\nx = (x & 0x0000ffff) + (x >> 16 & 0x0000ffff);", "\nreturn x;", "\n}", "\n\u5c31\u8fd9\u4e48\u591a\u3002", "\n\u7ecf\u8fc7\u68c0\u9a8c\uff0c\u8fd9\u662f\u68c0\u9a8c\u7684\u4ee3\u7801\uff1a", "\n#include<iostream>", "\nusing namespace std;", "\nunsigned int CountOne(unsigned int x);", "\nint main(){", "\nunsigned int x;", "\ncout<<\u201dInput a num and will return the count of one:\u201d<<endl;", "\ncout<<\u201d(like input 211,and result:5)\u201d<<endl;", "\ncin>>x;", "\ncout<<\u201dresult:\u201d<<endl;", "\ncout<<CountOne(x)<<endl;", "\nreturn 0;", "\n}", "\nunsigned int CountOne(unsigned int x){", "\nx = (x & 0\u00d755555555) + (x >> 1 & 0\u00d755555555);", "\nx = (x & 0\u00d733333333) + (x >> 2 & 0\u00d733333333);", "\nx = (x & 0x0f0f0f0f) + (x >> 4 & 0x0f0f0f0f);", "\nx = (x & 0x00ff00ff) + (x >> 8 & 0x00ff00ff);", "\nx = (x & 0x0000ffff) + (x >> 16 & 0x0000ffff);", "\nreturn x;", "\n}", "\n\u8be5\u51fd\u6570\u5c31\u662f\u8ba1\u7b97\u4e00\u4e2a32\u4f4d\u65e0\u7b26\u53f7\u6574\u6570\u4e2d\u542b\u67091\u7684\u4e2a\u6570\uff0c\u5c315\u884c\u4ee3\u7801\u3002"], "title": "UC\u6821\u56ed\u62db\u8058C++\u5de5\u7a0b\u5e08\u7b14\u8bd5\u9898"},
{"contents": [], "title": "C++\u76f8\u5173\u9762\u8bd5\u9898"},
{"contents": ["\u5f00\u53d1\u73af\u5883  ", "\u3000\u3000\u2014-\uff1eTurbo c ", "\u3000\u3000DOS\u65f6\u4ee3c\u8bed\u8a00\u5f00\u53d1\u7684\u7ecf\u5178\u5de5\u5177\uff0c\u76ee\u524d\u9002\u5408\u4e24\u7c7b\u4eba\u4f7f\u7528\uff1ac\u8bed\u8a00beginner\uff08\u5c24\u5176\u662f\u5b66\u751f\u4e00\u65cf\uff09\uff0c\u5177\u6709\u6000\u65e7\u60c5\u8282\u7684\u4e13\u4e1a\u4eba\u58eb\uff1a\uff09 ", "\u3000\u3000\u2014-\uff1eVisual C++ 6.0/7.0 ", "\u3000\u3000\u7a33\u5b9a\u800c\u5f3a\u5927\u7684IDE\u5f00\u53d1\u73af\u5883\uff0c\u5177\u6709\u4e30\u5bcc\u7684\u8c03\u8bd5\u529f\u80fd\uff0c\u5b9a\u5236\u5b8f\u7684\u529f\u80fd\u4e5f\u662f\u5176\u4e00\u5927\u7279\u8272\u3002Microsoft\u7684\u7ecf\u5178\u4e4b\u4f5c\uff0c\u529f\u80fd\u5f3a\u5927\u81ea\u4e0d\u5fc5\u8a00\u8bf4\u3002\u9644\u5e26\u7684\u4e00\u4e9b\u5de5\u5177\u4e5f\u5f88\u4e0d\u9519\uff0c\u6bd4\u5982\uff1aSpy++\u3002\u4f46\u7f16\u8bd1\u5668\u8f83\u4e4b\u540c\u7c7b\uff0c\u652f\u6301c++\u6807\u51c6\u7684\u7a0b\u5ea6\u4e0d\u591f\u597d\uff0c\u5c24\u51766.0\u53ca\u4ee5\u524d\u7684\u7248\u672c\u3002 ", "\u3000\u3000\u2014-\uff1eBCB ", "\u3000\u3000Borland\u7684C++ Builder\u662f\u53ef\u4ee5\u4e0eVC\u5339\u654c\u7684\u53e6\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684IDE\uff0c\u901f\u5ea6\u548c\u7a33\u5b9a\u6027\u7a0d\u900a\uff0c\u4f46\u5bf9c++\u6807\u51c6\u652f\u6301\u7684\u7a0b\u5ea6\u8f83\u597d\u3002 ", "\u3000\u3000\u2014-\uff1eCygwin ", "\u3000\u3000Windows\u5e73\u53f0\u4e0b\u7684C++\u7f16\u8bd1\u5668\uff0c\u57fa\u4e8egcc\uff0c\u53c8\u5b8c\u5168\u517c\u5bb9Window\u7279\u6709\u7684\u4e1c\u897f\uff0c\u6bd4\u5982\u5bf9winsock\u7684\u652f\u6301\u3002\u4ecehttp://www.cygwin.com\u53ef\u4ee5\u627e\u5230\u6709\u5173Cygwin\u7684\u8be6\u7ec6\u4fe1\u606f\u3002 ", "\u3000\u3000\u2014-\uff1eDev-c++ ", "\u3000\u3000Windows\u5e73\u53f0\u4e0b\uff0c\u4e00\u4e2a\u7c7b\u4f3cVC\u3001BCB\u7684c++ IDE\u5f00\u53d1\u73af\u5883\uff0c\u5c5e\u4e8e\u5171\u4eab\u8f6f\u4ef6\u3002\u754c\u9762\u4eb2\u5207\u4f18\u96c5\uff0csize\u4e5f\u4e0d\u5927\uff0c\u51764.9.x\u7248\u6709\u4e2d\u6587\u8bed\u8a00\u652f\u6301\uff0c\u65e0\u9700\u6c49\u5316\u3002\u7f16\u8bd1\u5668\u57fa\u4e8egcc\uff0c\u5b8c\u5168\u652f\u6301STL\u3002\u4f46\u662f\u5bf9\u4e8e\u89c4\u6a21\u8f83\u5927\u7684\u8f6f\u4ef6\u9879\u76ee\uff0c\u6050\u6015\u96be\u4ee5\u80dc\u4efb\u3002\u53ef\u4ee5\u4ece:http://www.bloodshed.net/dev/devcpp.html\u627e\u5230\u6709\u5173Dev-c++\u7684\u6709\u5173\u4fe1\u606f\u3002 ", "\u3000\u3000\u2014-\uff1eSource Insight ", "\u3000\u3000\u6709\u7740\u548cDev c++\u4e00\u6837\u6f02\u4eae\u7684\u754c\u9762\uff0c\u63d0\u4f9b\u4ee3\u7801\u7684\u7f16\u8f91\u548c\u5bdf\u770b\u529f\u80fd\uff0c\u5177\u6709\u4e30\u5bcc\u7684\u8bed\u6cd5\u52a0\u4eae\u529f\u80fd\uff0c\u53ef\u4ee5\u50cfVC\u4e00\u6837\u81ea\u52a8\u5f39\u51fa\u6210\u5458\u51fd\u6570\u7684\u63d0\u793a\uff0c\u5e76\u5177\u6709\u5feb\u901f\u65b9\u4fbf\u7684\u51fd\u6570\u8df3\u8f6c\u529f\u80fd\uff08\u4f46\u662f\u8df3\u8f6c\u901f\u5ea6\u4f3c\u4e4e\u6709\u70b9\u6162\uff09\u3002\u53ea\u662f\u9ed8\u8ba4\u8bbe\u7f6e\u4e0d\u9002\u5408\u65f6\uff0c\u9700\u8981\u4ed4\u7ec6\u7684\u8c03\u6574\u548c\u4fee\u6539\u3002\u65e0\u6cd5\u67e5\u627e\u7ecftypedef\u4e4b\u540e\u7684\u540d\u5b57\u3002 ", "\u3000\u3000\u8f85\u52a9\u5de5\u5177 ", "\u3000\u3000\u2014-\uff1eVisual Assist ", "\u3000\u3000VC IDE\u73af\u5883\u4e0b\u7684\u8f85\u52a9\u7f16\u7a0b\u5de5\u5177\uff0c\u80fd\u8bc6\u522b\u5404\u79cd\u5173\u952e\u5b57\u3001\u51fd\u6570\u3001\u6210\u5458\u53d8\u91cf\uff0c\u81ea\u52a8\u7ed9\u51fatip\uff0c\u5e76\u81ea\u52a8\u66f4\u6b63\u5927\u5c0f\u5199\u9519\u8bef\uff0c\u6807\u793a\u62fc\u5199\u9519\u8bef\u7b49\u3002\u662fVC\u5f00\u53d1\u7684\u826f\u597d\u4f34\u4fa3\u3002  ", "\u3000\u3000\u2014-\uff1eUnderstand for C++ ", "\u3000\u3000\u4e00\u6b3ec/c++IDE\u7f16\u7a0b\u7684\u8f85\u52a9\u5de5\u5177\uff0c\u652f\u6301\u53cd\u5411\u5de5\u7a0b\uff0c\u4ee3\u7801\u5bfc\u5411\u548c\u4e00\u4e9b\u7edf\u8ba1\u529f\u80fd\uff0c\u4ecehttp://www.scitools.com\u53ef\u4ee5\u627e\u5230\u6709\u5173Understand for C++\u7684\u8be6\u7ec6\u4fe1\u606f\u3002 ", "\u3000\u3000\u7a0b\u5e8f\u7f16\u8f91\u5668 ", "\u3000\u3000\u2014-\uff1eEditPlus ", "\u3000\u3000\u4e00\u6b3e\u5f88\u4e0d\u9519\u7684\u6587\u672c\u7f16\u8f91\u8f6f\u4ef6\uff0c\u529f\u80fd\u5f3a\u5927\u5374\u53c8\u5341\u5206\u8f7b\u5de7\u3002\u652f\u6301\u4e0d\u540c\u8bed\u8a00\u7684\u8bed\u6cd5\u52a0\u4eae\uff0c\u8fd8\u6709Project\u7ec4\u7ec7\u529f\u80fd\uff0c\u5177\u6709\u4e30\u5bcc\u7684\u81ea\u5b9a\u4e49\u529f\u80fd\u3002\u901a\u8fc7\u8bbe\u7f6eUser Tool\uff0c\u53ef\u4ee5\u548c\u5176\u4ed6\u8bed\u8a00\u7f16\u8bd1\u5668\u7ed3\u5408\uff0c\u5f62\u6210\u4e00\u4e2a\u7b80\u5355\u7684IDE\u3002 ", "\u3000\u3000\u2014-\uff1eUltra Edit ", "\u3000\u3000\u529f\u80fd\u548cEditPlus\u76f8\u5f53\uff0c\u901a\u8fc7\u811a\u672c\u6587\u4ef6\u63d0\u4f9b\u7684\u914d\u7f6e\u529f\u80fd\u53ef\u4ee5\u5b9a\u5236\u7f16\u8f91\u73af\u5883\uff0c\u4f46\u81ea6.0\u7248\u4ee5\u540e\u4e00\u76f4\u6ca1\u591a\u5927\u53d8\u5316\uff0c\u5c31\u7f16\u7a0b\u800c\u8a00\uff0c\u81ea\u5b9a\u4e49\u8bbe\u7f6e\u6ca1\u6709EditPlus\u65b9\u4fbf\u3002  ", "\u3000\u3000\u2014-\uff1eEMACS ", "\u3000\u3000\u516c\u8ba4\u7684\u4e16\u754c\u4e0a\u529f\u80fd\u6700\u591a\uff0c\u6700\u590d\u6742\u7684\u6587\u672c\u7f16\u8f91\u5668\uff0c\u5176\u5b9e\u4e5f\u53ef\u4ee5\u5f53\u4f5c\u7a0b\u5e8f\u5458\u7528\u7684\u7f16\u8f91\u5668\u3002 ", "\u3000\u3000\u2014-\uff1eVisual Slick Edit ", "\u3000\u3000\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684\u7a0b\u5e8f\u5458\u7528\u7f16\u8f91\u5668\u3002\u6700\u503c\u5f97\u4e00\u63d0\u7684\u662f\u5176\u5b9a\u5236\u529f\u80fd\uff0c\u5f88\u597d\u7528\uff0c\u53ef\u4ee5\u548cEMACS\u76f8\u6bd4\u3002\u81ea\u5e26\u4e86\u4e00\u5957PCODE\u89e3\u91ca\u5668\uff0c\u7528c\u7684\u8bed\u6cd5\uff0c\u8fd8\u53ef\u4ee5\u6302\u63a5\u52a8\u6001\u5e93\u3002\u914d\u5408mingw\u4e00\u8d77\u4f7f\u7528\u5f88\u65b9\u4fbf\u3002\u4ecehttp://www.slickedit.com\u53ef\u4ee5\u627e\u5230\u6709\u5173SlickEdit\u7684\u8be6\u7ec6\u4fe1\u606f\u3002 ", "\u3000\u3000\u2014-\uff1eIQEdit ", "\u3000\u3000\u5168\u529f\u80fd\u7684\u7a0b\u5e8f\u5458\u7528\u7f16\u8f91\u5668\uff0c\u754c\u9762\u5f88\u6f02\u4eae\uff0c\u4ecehttp://pwksoftware.com\u53ef\u4ee5\u627e\u5230\u6709\u5173IQEdit\u7684\u8be6\u7ec6\u4fe1\u606f\u3002 ", "\u3000\u3000UML/\u5efa\u6a21 ", "\u3000\u3000\u2014-\uff1eRational Rose ", "\u3000\u3000\u5f3a\u5927\u7684\u5efa\u6a21\u5de5\u5177\uff0c\u65e9\u5df2\u201c\u5bb6\u55bb\u6237\u6653\u201d\uff0c\u529f\u8fc7\u81ea\u7136\u4e0d\u5fc5\u591a\u52a0\u8bc4\u8bf4\u4e86\u3002\u4ecehttp://www.rationalsoftware.com.cn\u53ef\u4ee5\u627e\u5230\u6709\u5173Rational Rose\u7684\u8be6\u7ec6\u4fe1\u606f\u3002 ", "\u3000\u3000\u2014-\uff1eVisual Modeler  ", "    MS Visual Studio 6.0\u6240\u9644\u7684\u5c0f\u5de5\u5177\u3002\u5c5e\u4e8eRational\u548cMicroSoft\u5408\u4f5c\u7684\u6218\u7565\u4ea7\u54c1\uff0c\u662fRose\u7684\u7b80\u5316\u7248\u3002", "\n\u2014-\uff1eVisio ", "\u3000\u3000Microsoft\u7684\u5efa\u6a21\u5de5\u5177\uff0c\u611f\u89c9\u66f4\u4eba\u6027\u5316\u4e00\u4e9b\uff0c\u4f46\u529f\u80fd\u6ca1\u6709Rose\u591a\u3001\u5f3a\u3001\u4e13\uff0c\u652f\u6301\u6b63\u5411\u7684\u4ee3\u7801\u751f\u6210\uff0c\u4ee5\u53ca\u5bf9\u4ee3\u7801\u7684\u53cd\u5411\u5de5\u7a0b\u3002 ", "\u3000\u3000\u2014-\uff1eTogether ", "\u3000\u3000\u53e6\u4e00\u6b3e\u529f\u80fd\u5f3a\u5927\u7684\u5efa\u6a21\u5de5\u5177\uff0c\u7528java\u7f16\u5199\u800c\u6210\uff0c\u53e3\u7891\u4e0d\u9519\uff0c\u4e0d\u8fc7\u901f\u5ea6\u7a0d\u7a0d\u6162\u4e86\u4e00\u4e9b\u3002\u4ecehttp://www.togethersoft.com\u53ef\u4ee5\u627e\u5230\u6709\u5173Togather\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u53e6\u5916\uff0c\u4ee5\u4e0b\u7f51\u5740\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6709\u5173Together\u7684\u6559\u7a0b\uff1a \u3000\u3000\u3000http://www.cc.puv.fi/~tka/kurssit/Tietojarjestelmien_suunnittelu/together/TCCGuide6 ", "\u3000\u3000\u2014-\uff1eVisual UML ", "\u3000\u3000\u652f\u6301\u591a\u79cd\u8bed\u8a00\u7c7b\u578b\uff0c\u6bd4\u5982\uff1aVC\u3001VB\u3001DELPHI\u3001CORBA IDL\u7b49\uff0c\u53ef\u4ee5\u76f4\u63a5\u4eceUML\u8bbe\u8ba1\u56fe\u751f\u6210\u4ee3\u7801\uff0c\u7b80\u5355\u6613\u7528\uff0c\u5b8c\u5168\u9002\u5408Personal use\uff0c\u754c\u9762\u4e5f\u5f88\u6e05\u723d\u3002\u4ecehttp://www.visualObject.com\u53ef\u4ee5\u627e\u5230\u6709\u5173Visual UML\u7684\u8be6\u7ec6\u4fe1\u606f\u3002 ", "\u3000\u3000\u2014-\uff1eSmartDraw ", "\u3000\u3000\u901a\u7528\u56fe\u8868\u5236\u4f5c\u8f6f\u4ef6\uff0c\u53ef\u4ee5\u7528\u6765\u5236\u4f5c\u7ec4\u7ec7\u673a\u6784\u56fe\u3001\u6d41\u7a0b\u56fe\u3001\u7edf\u8ba1\u56fe\u8868\u7b49\u3002\u968f\u5e26\u6709\u56fe\u5e93\uff0c\u57fa\u672c\u6ee1\u8db3\u5236\u4f5c\u5404\u7c7b\u56fe\u8868\u7684\u9700\u8981\u3002\u4ecehttp://www.smartdraw.com\u53ef\u4ee5\u627e\u5230\u6709\u5173SmartDraw\u7684\u8be6\u7ec6\u4fe1\u606f\u3002 ", "\u3000\u3000\u2014-\uff1ePlayCase ", "\u3000\u3000\u56fd\u4ea7\u9762\u5411\u5bf9\u8c61\u7684\u5efa\u6a21\u8f6f\u4ef6\uff0c\u517c\u5bb9UML\u548cIDEF\uff0c\u8f7b\u91cf\u7ea7\u8f6f\u4ef6\uff0c\u53ea\u662f\u754c\u9762\u770b\u8d77\u6765\u6709\u70b9\u7b80\u6734\uff0c\u4e43\u662f\u9ad8\u5c55\u5148\u751f\u7528Delphi\u5b8c\u6210\u7684\u3002 ", "\u3000\u3000\u7248\u672c\u63a7\u5236 ", "\u3000\u3000\u2014-\uff1eClearCase ", "\u3000\u3000Rational\u7684\u7248\u672c\u63a7\u5236\u7ba1\u7406\u8f6f\u4ef6\uff0c\u529f\u80fd\u5f3a\u5927\uff0c\u53ef\u4ee5\u63a7\u5236\u591a\u79cd\u7c7b\u578b\u7684\u6587\u6863\uff0c\u751a\u81f3\u5305\u62ecWord\u3001Excel\u3001PowerPoint\u6587\u6863\u3002\u4f46\u4f7f\u7528\u590d\u6742\uff0c\u4e0d\u6613\u4e0a\u624b\uff0c\u4e14\u4e0d\u662f\u514d\u8d39\u8f6f\u4ef6\u3002 ", "\u3000\u3000\u2014-\uff1eCVS ", "\u3000\u3000\u4e3a\u57fa\u4e8eWeb\u7684\u5206\u5e03\u5f0f\u534f\u540c\u5f00\u53d1\u63d0\u4f9b\u4e86\u7248\u672c\u63a7\u5236\u7ba1\u7406\u624b\u6bb5\uff0c\u4e14\u662f\u514d\u8d39\u8f6f\u4ef6\uff0c\u53ef\u4ee5\u901a\u8fc7\u811a\u672c\u5b9a\u5236\u529f\u80fd\u3002\u4f46\u5728\u6743\u9650\u63a7\u5236\u65b9\u9762\u529f\u80fd\u76f8\u5bf9\u8f83\u5f31\u3002 ", "\u3000\u3000\u2014-\uff1eVSS ", "\u3000\u3000\u5fae\u8f6f\u7684\u7248\u672c\u63a7\u5236\u7ba1\u7406\u5de5\u5177\uff0c\u529f\u80fd\u76f8\u5bf9\u7b80\u5355\uff0c\u9002\u5408\u4e8e\u5c0f\u578b\u56e2\u961f\u5f00\u53d1\uff0c\u5c06\u5176\u6574\u5408\u5230\u5fae\u8f6f\u7684\u5176\u4ed6\u5f00\u53d1\u5de5\u5177\u4e2d\uff0c\u4f7f\u7528\u8d77\u6765\u5341\u5206\u65b9\u4fbf\u3002 ", "\u3000\u3000\u2014-\uff1eSourceOffSite ", "\u3000\u3000\u5fae\u8f6f\u4e3a\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u7684\u8fdc\u7a0b\u8bbf\u95eeVSS\u6570\u636e\u5e93\u7684\u5de5\u5177\uff0c\u4f7f\u6570\u636e\u5e93\u5f97\u4ee5\u8fdc\u7a0b\u66f4\u65b0\uff0c\u4ee5\u652f\u6301\u8fdc\u7a0b\u529e\u516c\u3002\u5176\u4ed6\u7684\u7248\u672c\u7ba1\u7406\u5de5\u5177\u8fd8\u5305\u62ec\uff1aPVCS\u3001VCS\u3001RCS\u7b49\u3002 ", "\u3000\u3000XML ", "\u3000\u3000\u2014-\uff1eexpat ", "\u3000\u3000\u7528\u4e8e\u8bfb\u53d6\u548c\u5904\u7406XML\u6587\u6863\u7684c\u51fd\u6570\u5e93\uff0c\u6700\u521d\u662fJames Clark\u7684\u4e2a\u4eba\u4f5c\u54c1\uff0c\u7b80\u5355\u8f7b\u5de7\uff0c\u4e14\u901f\u5ea6\u5feb\u3002\u4f46\u652f\u6301\u7684\u7f16\u7801\u65b9\u5f0f\u6709\u9650\uff0c\u6700\u9057\u61be\u7684\u662f\u4e0d\u652f\u6301\u4e2d\u6587\u3002\u4ecehttp://expat.sourceforge.net\u53ef\u4ee5\u627e\u5230\u6709\u5173expat\u7684\u8be6\u7ec6\u4fe1\u606f\u3002 ", "\u3000\u3000\u2014-\uff1exml4c ", "\u3000\u3000IBM\u7684XML P***r\uff0c\u7528c++\u8bed\u8a00\u5199\u5c31\uff0c\u529f\u80fd\u8d85\u7ea7\u5f3a\u5927\u3002\u53f7\u79f0\u652f\u6301\u591a\u8fbe100\u79cd\u5b57\u7b26\u7f16\u7801\uff0c\u80fd\u591f\u652f\u6301\u4e2d\u6587\uff0c\u9002\u5408\u4e8e\u5927\u89c4\u6a21\u7684xml\u5e94\u7528\u3002\u82e5\u53ea\u662f\u5f88\u5c0f\u8303\u56f4\u7684\u5e94\u7528\uff0c\u5219\u975e\u6700\u4f73\u9009\u62e9\uff0c\u6bd5\u7adf\uff0c\u4f60\u9700\u8981\u201c\u80cc\u8d1f\u201d\u7ea612M\u5de6\u53f3\u7684dll\u7684\u6c89\u91cd\u8d1f\u62c5\u3002\u4ecehttp://www.alphaworks.ibm.com/tech/xml4c\u53ef\u4ee5\u627e\u5230\u6709\u5173xml4c\u7684\u8be6\u7ec6\u4fe1\u606f\u3002  ", "\u3000\u3000\u2014-\uff1eXerces c++ ", "\u3000\u3000Apache\u7684XML\u9879\u76ee\uff0c\u540c\u6837\u662fc++\u5b9e\u73b0\uff0c\u6765\u6e90\u4e8eIBM\u7684xml4c\uff0c\u56e0\u6b64\u7f16\u7a0b\u63a5\u53e3\u4e5f\u662f\u548cxml4c\u4e00\u81f4\u7684\u3002\u4f46\u662f\u76ee\u524d\u53ea\u652f\u6301\u5c11\u6570\u7684\u5b57\u7b26\u7f16\u7801\uff0c\u5982ASCII\uff0cUTF-8\uff0cUTF-16\u7b49\uff0c\u4e0d\u80fd\u5904\u7406\u5305\u542b\u4e2d\u6587\u5b57\u7b26\u7684XML\u6587\u6863\u3002\u4ece http://xml.apache.org/xerces-c\u53ef\u4ee5\u627e\u5230\u6709\u5173Xerces c++\u7684\u8be6\u7ec6\u4fe1\u606f\u3002 ", "\u3000\u3000\u6d4b\u8bd5 ", "\u3000\u3000\u2014-\uff1eCppUnit ", "\u3000\u3000\u4e00\u4e2ac++\u7684\u5355\u5143\u6d4b\u8bd5\u6846\u67b6\uff0c\u53ef\u4ee5\u901a\u8fc7\u6d3e\u751f\u6d4b\u8bd5\u7c7b\u7684\u65b9\u5f0f\uff0c\u5b9a\u5236\u5177\u4f53\u7684\u6d4b\u8bd5\u65b9\u6848\u3002xUnit\u5bb6\u65cf\u7684\u4e00\u5458\uff0c\u4eceJUnit\u79fb\u690d\u800c\u6765\uff0cJUnit\u662fJava\u8bed\u8a00\u7684\u5355\u5143\u6d4b\u8bd5\u6846\u67b6\u3002\u4ecehttp://cppuint.sourceforge.net\u53ef\u4ee5\u627e\u5230\u6709\u5173CppUint\u7684\u8be6\u7ec6\u4fe1\u606f\u3002 ", "\u3000\u3000\u2014-\uff1eRational ROBOT ", "\u3000\u3000Rational\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u5de5\u5177\uff0c\u901a\u8fc7\u7f16\u5199\u811a\u672c\u7684\u65b9\u5f0f\u63d0\u4f9b\u81ea\u52a8\u5316\u6d4b\u8bd5\u7279\u6027\u3002\u5176GUI\u65b9\u5f0f\u7684\u811a\u672c\u5f55\u5236\u529f\u80fd\uff0c\u6709\u52a9\u4e8e\u5bf9GUI\u8f6f\u4ef6\u8fdb\u884c\u529f\u80fd\u6d4b\u8bd5\uff1b\u5176VU\u65b9\u5f0f\u7684\u811a\u672c\u5f55\u5236\u529f\u80fd\uff0c\u6709\u52a9\u4e8e\u6d4b\u8bd5\u67d0\u4e9b\u8f6f\u4ef6\u7684\u6570\u636e\u901a\u8baf\u529f\u80fd\u3002 ", "\u3000\u3000\u2014-\uff1eRational Purify ", "\u3000\u3000\u540c\u6837\u662fRational\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u5de5\u5177\uff0c\u4e0d\u9700\u8981\u88ab\u6d4b\u7a0b\u5e8f\u7684\u6e90\u4ee3\u7801\uff0c\u53ef\u4ee5\u7528\u6765\u68c0\u67e5\u5185\u5b58\u8bbf\u95ee\u9519\u8bef\u3001Windows API\u8c03\u7528\u9519\u8bef\u7b49\uff0c\u4ee5\u5b8c\u6210\u8f6f\u4ef6\u7684\u53ef\u9760\u6027\u6d4b\u8bd5\uff0c\u5c5e\u4e8e\u767d\u76d2\u6d4b\u8bd5\u3002 ", "\u3000\u3000\u5176\u4ed6\u7684Rational\u6d4b\u8bd5\u5de5\u5177\u8fd8\u5305\u62ec\uff1aTestFactory\u3001PureCoverage\u3001TestManager\u7b49\u3002  ", "\u3000\u3000\u65e5\u5fd7 ", "\u3000\u3000\u2014-\uff1elog4cpp ", "\u3000\u3000\u4e00\u4e2a\u7528\u4e8e\u65e5\u5fd7\u8bb0\u5f55\u7684c++\u51fd\u6570\u5e93\uff0c\u53ef\u4ee5\u5c06\u5185\u5bb9\u4ee5\u5b9a\u5236\u7684\u65b9\u5f0f\u8bb0\u5f55\u5230\u4e0d\u540c\u7684\u76ee\u7684\u5730\uff0c\u6bd4\u5982\uff1a\u6587\u4ef6\u3001\u63a7\u5236\u53f0syslog\u7b49\uff0c\u540c\u65f6\u8fd8\u53ef\u4ee5\u901a\u8fc7\u63a7\u5236\u8bb0\u5f55\u7ea7\u522b\u6765\u5c4f\u853d\u6389\u67d0\u4e9b\u65e0\u5173\u8bb0\u5f55\u3002\u4ecehttp://log4cpp.sourceforge.net\u53ef\u4ee5\u627e\u5230\u6709\u5173log4cpp\u7684\u8be6\u7ec6\u4fe1\u606f\u3002 ", "\u3000\u3000\u6ce8\u91ca ", "\u3000\u3000\u2014-\uff1eDoc++ ", "\u3000\u3000\u6ce8\u91ca\u6587\u6863\u751f\u6210\u5de5\u5177\uff0c\u6839\u636e\u6e90\u7a0b\u5e8f\u4e2d\u7684\u6587\u6863\u6ce8\u91ca\uff0c\u53ef\u4ee5\u8f93\u51faTeX\u548cHTML\u683c\u5f0f\u7684\u6587\u6863\u3002\u9664\u4e86\u652f\u6301c/c++\u8bed\u8a00\u5916\uff0c\u8fd8\u652f\u6301IDL\u548cjava\u3002\u4ec5\u63d0\u4f9b\u547d\u4ee4\u884c\u4f7f\u7528\u65b9\u5f0f\u3002\u4ecehttp://docpp.sourceforge.net\u53ef\u4ee5\u627e\u5230\u6709\u5173Doc++\u7684\u8be6\u7ec6\u4fe1\u606f\u3002 ", "\u3000\u3000\u2014-\uff1eDoxygen ", "\u3000\u3000\u6ce8\u91ca\u6587\u6863\u751f\u6210\u5de5\u5177\uff0c\u8f83\u4e4bDoc++\u529f\u80fd\u66f4\u4e3a\u9f50\u5168\uff0c\u53ef\u4ee5\u751f\u6210\u5305\u62ecHTML\u3001PDF\u3001RTF\u5728\u5185\u7684\u591a\u79cd\u683c\u5f0f\u7684\u6587\u6863\uff0c\u5e76\u6709GUI\u754c\u9762\uff0c\u9664\u4e86\u652f\u6301c/c++\u8bed\u8a00\u5916\uff0c\u8fd8\u652f\u6301IDL\u3001java\u3001PHP\u3001c#\u7b49\u3002\u4ecehttp://www.stack.nl/~dimitri/doxygen\u53ef\u4ee5\u627e\u5230\u6709\u5173Doxygen\u7684\u8be6\u7ec6\u4fe1\u606f\u3002"], "title": "C++\u5f00\u53d1\u5e38\u7528\u5de5\u5177\u90fd\u6709\u54ea\u4e9b\uff1f"},
{"contents": ["C\u3001\u4f20\u7edf C++", "#include ", "//////////////////////////////////////////////////////////////////////////", "\u6807\u51c6 C++\u3000\uff08\u540c\u4e0a\u7684\u4e0d\u518d\u6ce8\u91ca\uff09", "#include ", "using namespace std;", "//////////////////////////////////////////////////////////////////////////", "C99 \u589e\u52a0", "#include "], "title": "C++\u6807\u51c6\u5e93\u5934\u6587\u4ef6\u90fd\u6709\u54ea\u4e9b\uff1f"},
{"contents": ["31.\u627e\u9519", "\nVoid test1()", "\n{\u00a0\u00a0 char string[10];", "\n\u00a0\u00a0\u00a0 char* str1=\u201d0123456789\u2033;", "\nstrcpy(string, str1);", "\n}", "\nVoid test2()", "\n{ char string[10], str1[10];", "\nfor(I=0; I<10;I++)", "\n{str1[i] =\u2019a';}", "\nstrcpy(string, str1);", "\n}", "\nVoid test3(char* str1)", "\n{\u00a0 char string[10];", "\n\u00a0\u00a0 if(strlen(str1)<=10)", "\n{ strcpy(string, str1);}", "\n}", "32.\u00a0\u00a0\u00a0 \u627e\u9519", "\n#define MAX_SRM 256", "\nDSN get_SRM_no()", "\n{\u00a0 static int SRM_no;", "\n\u00a0\u00a0 int I;", "\n\u00a0\u00a0 for(I=0;I{", "\nSRM_no %= MAX_SRM;", "\nif(MY_SRM.state==IDLE)", "\n{", "\n\u00a0\u00a0\u00a0 break;", "\n}", "\n}", "\nif(I>=MAX_SRM)", "\nreturn (NULL_SRM);", "\nelse", "\nreturn SRM_no;", "\n}", "\n33.\u00a0\u00a0\u00a0 \u5199\u51fa\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u679c", "\nint sum(int a)", "\n{ auto int c=0;", "\n\u00a0 static int b=3;", "\nc+=1;", "\nb+=2;", "\nreturn(a+b+C);", "\n}", "\nvoid main()", "\n{ int I;", "\nint a=2;", "\nfor(I=0;I<5;I++)", "\n{ printf(\u201c%d,\u201d, sum(a))\uff1b}", "\n}", "34.\u00a0 int func(int a)", "\n{int b;", "\n\u00a0switch(a)", "\n\u00a0 { case 1: 30;", "\n\u00a0\u00a0\u00a0 case 2: 20;", "\n\u00a0\u00a0\u00a0 case 3: 16;", "\ndefault: 0", "\n}", "\nreturn b;", "\n}", "\n\u5219func(1)=?", "35:", "\nint a[3];", "\na[0]=0; a[1]=1; a[2]=2;", "\nint *p, *q;", "\np=a;", "\nq=&a[2];", "\n\u5219a[q-p]=?", "36.", "\n\u5b9a\u4e49 int **a[3][4], \u5219\u53d8\u91cf\u5360\u6709\u7684\u5185\u5b58\u7a7a\u95f4\u4e3a\uff1a_____", "37.", "\n\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u8981\u6c42\u8f93\u5165\u5e74\u6708\u65e5\u65f6\u5206\u79d2\uff0c\u8f93\u51fa\u8be5\u5e74\u6708\u65e5\u65f6\u5206\u79d2\u7684\u4e0b\u4e00\u79d2\u3002\u5982\u8f93\u51652004\u5e7412", "\n\u670831\u65e523\u65f659\u520659\u79d2\uff0c\u5219\u8f93\u51fa2005\u5e741\u67081\u65e50\u65f60\u52060\u79d2\u3002", "38.\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u5224\u65ad\u4e00\u4e2aint\u578b\u7684\u6574\u6570\u662f\u5426\u662f2\u7684\u5e42\uff0c\u5373\u662f\u5426\u53ef\u4ee5\u8868\u793a\u62102^X\u7684\u5f62\u5f0f\uff08\u4e0d\u53ef", "\n\u4ee5\u7528\u5faa\u73af\uff09\u00a0\u00a0 \u6211\u53ea\u77e5\u9053\u662f\u7528\u9012\u63a8\uff0c\u5927\u6982\u5199\u4e86\u4e00\u4e0b\uff0c\u5982\u4e0b\uff1a", "\nint IsTwoPow(int s)", "\n{ if(s==1)return FALSE;", "\n\u00a0 s=s>>1;", "\n\u00a0 if(s>1)IsTwoPow(s);", "\n\u00a0 return (s==1)?TRUE:FALSE;//\u5927\u6982\u662f\u8fd9\u4e2a\u610f\u601d\uff0c\u4f46\u662f\u8fd9\u4e00\u53e5\u4f3c\u4e4e\u4e0d\u8be5\u8fd9\u4e48\u8fd4\u56de\uff01", "\n}", "39 A\uff0cB\u4ece\u4e00\u5806\u73bb\u7483\u7403\uff08\u5171100\u4e2a\uff09\u91cc\u5411\u5916\u62ff\u7403\uff0c\u89c4\u5219\u5982\u4e0b\uff1a", "\n\u00a0(1)A\u5148\u62ff\uff0c\u7136\u540e\u4e00\u4eba\u4e00\u6b21\u4ea4\u66ff\u7740\u62ff\uff1b", "\n\uff082\uff09\u6bcf\u6b21\u53ea\u80fd\u62ff1\u4e2a\u62162\u4e2a\u62164\u4e2a\uff1b", "\n\uff083\uff09\u8c01\u62ff\u6700\u540e\u4e00\u4e2a\u7403\uff0c\u8c01\u5c31\u662f\u6700\u540e\u7684\u5931\u8d25\u8005\uff1b", "\n\u00a0 \u95eeA\uff0cB\u8c01\u5c06\u662f\u5931\u8d25\u8005\uff1f\u5199\u51fa\u4f60\u7684\u5224\u65ad\u6b65\u9aa4\u3002", "40.\u5df2\u77e5\uff1a\u65e0\u5e8f\u6570\u7ec4\uff0c\u6298\u534a\u67e5\u627e\uff0c\u5404\u5143\u7d20\u503c\u552f\u4e00\u3002\u51fd\u6570\u539f\u578b\u662f\uff1aBinary_Seach(int array[], int iValue, int iCount)array\u662f\u6570\u7ec4\uff0c\u5728\u91cc\u9762\u7528\u6298\u534a\u67e5\u627e\u7684\u65b9\u6cd5\u627e\u7b49\u4e8eiValue\u7684\u503c\uff0c\u627e\u5230\u8fd4\u56de1\u5426\u52190\uff0ciCount\u662f\u5143\u7d20\u4e2a\u6570", "41.\u7edf\u8ba1\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570", "42.100\u4f4d\u4ee5\u4e0a\u7684\u8d85\u5927\u6574\u6570\u7684\u52a0\u6cd5\uff08\u4e3b\u8981\u8003\u8651\u6570\u636e\u7ed3\u6784\u548c\u52a0\u6cd5\u7684\u5b9e\u73b0\uff09", "43.\u5bf9\u5982\u4e0b\u7535\u6587\uff1a\u201dCASTCASTSATATATASA\u201d\u7ed9\u51faHuffman\u7f16\u7801\u3002", "44.int (* (*f)(int, int))(int)\u8868\u793a\u4ec0\u4e48\u542b\u4e49\uff1f", "45.x=x+1\uff0cx+=1\uff0cx++\uff0c\u4e3a\u8fd9\u4e09\u4e2a\u8bed\u53e5\u7684\u6548\u7387\u6392\u5e8f\u3002\u5e76\u8bf4\u660e\u4e3a\u4ec0\u4e48\u3002", "46.\u4e2d\u7f00\u8868\u8fbe\u5f0f A-(B+C/D)*E\u7684\u540e\u7f00\u5f62\u5f0f\u662f\u4ec0\u4e48\uff1f", "47.struct S1", "\n{ char c;", "\nint i;", "\n};", "\nsizeof(S1) = ?", "\nclass X{", "\npublic:", "\nX();", "\nvirtual ~X();", "\nvoid myMemberFunc();", "\nstatic void myStaticFunc();", "\nvirtual void myVirtualFunc();", "\nprivate:", "\nint i;", "\nchar * pstr;", "\nchar a;", "\n}", "\nsizeof(X) = ?", "48.\u627e\u51fa\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u6700\u5927\u5b50\u5b57\u7b26\u4e32,\u5982\u201dabractyeyt\u201d,\u201ddgdsaeactyey\u201d\u7684\u6700\u5927\u5b50\u4e32\u4e3a\u201dacty", "\net\u201d", "49.\u6709\u4e00\u767e\u4e2a\u6574\u6570,\u5176\u4e2d\u6709\u8d1f\u6570,\u627e\u51fa\u8fde\u7eed\u4e09\u4e2a\u6570\u4e4b\u548c\u6700\u5927\u7684\u90e8\u5206.", "50.\u5199\u4e00\u7a0b\u5e8f\u5b9e\u73b0\u5feb\u901f\u6392\u5e8f. \u5047\u8bbe\u6570\u636e\u8f93\u5165\u4e3a\u4e00\u6587\u4ef6", "\n\u5feb\u901f\u7b97\u6cd5\u63cf\u8ff0\u5982\u4e0b", "\nAlgorithm Partition", "\nInput: sequence a0, \u2026, an-1 with n elements", "\nOutput: permutation of the sequence such that all elements a0, \u2026, aj are les", "\ns than or equal to all", "\nelements ai, \u2026, an-1 (i > j)", "\nMethod:", "choose the element in the middle of the sequence as comparison element x", "\nlet i = 0 and j = n-1", "\nwhile ij", "\u00a0\u00a0\u00a0 search the first element ai which is greater than or equal to x", "\n\u00a0\u00a0\u00a0 search the last element aj which is less than or equal to x", "\n\u00a0\u00a0\u00a0 if ij", "\u00a0\u00a0\u00a0 exchange ai and aj", "\n\u00a0\u00a0\u00a0 let i = i+1 and j = j-1", "\nAfter partitioning the sequence, Quicksort treats the two parts recursively by", "\n\u00a0the same procedure.", "\nThe recursion ends whenever a part consists of one element only."], "title": "C++\u7b14\u8bd5\u9898\u8001\u9898\u91cd\u53d1\uff085\uff09"},
{"contents": ["24.Assignment 2: Picture Processing", "Use C++, Java, or similar languages or/and any middleware such as EJB and J2EE", "\n\u00a0to process a\u00a0 picture with a high resolution (3 Mega Pixels for example). Use", "\n\u00a0some methodologies to degrade\u00a0 the resolution of the picture to make it quick", "\ner for browsing. Then divide the degraded\u00a0 picture into 9 sectors equally. Cli", "\nck any of the 9 sectors will result a detailed picture for\u00a0 this sector with t", "\nhe same resolution as that of the original picture. This assignment is\u00a0 design", "\ned for you to demonstrate your ability to handle pictures.", "25.\u7528<<,>>,|,&\u5b9e\u73b0\u4e00\u4e2aWORD(2\u4e2a\u5b57\u8282)\u7684\u9ad8\u4f4e\u4f4d\u4ea4\u6362!!", "\nint\u00a0 main()", "\n{", "\nunsigned\u00a0 short\u00a0 a\u00a0 =\u00a0 0xABCD;", "\nunsigned\u00a0 short\u00a0 b\u00a0 ;", "\nunsigned\u00a0 short\u00a0 c\u00a0 ,d;", "\nb\u00a0 =\u00a0 (a\u00a0 <<\u00a0 8)&0xff00;\u00a0\u00a0", "\nc\u00a0 =\u00a0 (a\u00a0 >>\u00a0 8)&0x00ff;", "\nd\u00a0 =\u00a0 b\u00a0 |\u00a0 c;", "\nprintf(\u201c\\n%x\u201d,b);", "\nprintf(\u201c\\n%x\u201d,c);", "\nprintf(\u201c\\n%x\u201d,d);", "\nreturn\u00a0 0;", "\n}", "\n\u7ed3\u679c\u662f\u00a0 CDAB\u00a0\u00a0", "\n2\u4fe9\u4e2a\u5b57\u8282\u662f16\u4f4d\u00a0 \u524d\u516b\u4f4d\u4e3a\u9ad8\u4f4d\u00a0 \u540e\u516b\u4f4d\u4e3a\u4f4e\u4f4d\u00a0 \u7136\u540e\u7ed3\u5408", "26.\u8981\u5f00\u8f9fP1,P2,P3,P4\u5185\u5b58\u6765\u505a\u7f13\u51b2,\u5927\u5c0f\u81ea\u5b9a,\u4f46\u8fd9\u56db\u4e2a\u7f13\u51b2\u7684\u5927\u5c0f\u8981\u4e00\u6837,\u5e76\u4e14\u662f\u8fde\u7eed\u7684", "27.\u6709\u4e00\u6d6e\u70b9\u578b\u6570\u7ec4A,\u7528C\u8bed\u8a00\u5199\u4e00\u51fd\u6570\u5b9e\u73b0\u5bf9\u6d6e\u70b9\u6570\u7ec4A\u8fdb\u884c\u964d\u5e8f\u6392\u5e8f,\u5e76\u8f93\u51fa\u7ed3\u679c,\u8981\u6c42\u8981", "\n\u4ee5\u6570\u7ec4A\u4f5c\u4e3a\u51fd\u6570\u7684\u5165\u53e3.(\u5efa\u8bae\u7528\u5192\u6ce1\u6392\u5e8f\u6cd5)", "\nvoid\u00a0\u00a0 BubbleSort(double\u00a0\u00a0 arr[],\u00a0\u00a0 int\u00a0\u00a0 n)\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {\u00a0 int\u00a0\u00a0 i\uff0cj\uff1b\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int\u00a0\u00a0 exchange\u00a0\u00a0 =\u00a0\u00a0 1\uff1b\u00a0\u00a0 //\u4ea4\u6362\u6807\u5fd7\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(i=1;i<n;i++){\u00a0\u00a0 //\u6700\u591a\u505an-1\u8d9f\u6392\u5e8f\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 exchange=0\uff1b\u00a0\u00a0 //\u672c\u8d9f\u6392\u5e8f\u5f00\u59cb\u524d\uff0c\u4ea4\u6362\u6807\u5fd7\u5e94\u4e3a\u5047\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(j=n-1;j>=i\uff1bj\u2013)\u00a0\u00a0 //\u5bf9\u5f53\u524d\u65e0\u5e8f\u533aR[i..n]\u81ea\u4e0b\u5411\u4e0a\u626b\u63cf\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(arr[j+1]\u00a0\u00a0 >\u00a0\u00a0 arr[j]){//\u4ea4\u6362\u8bb0\u5f55\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 arr[0]=arr[j+1]\uff1b\u00a0\u00a0 //R[0]\u4e0d\u662f\u54e8\u5175\uff0c\u4ec5\u505a\u6682\u5b58\u5355\u5143\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 arr[j+1]=arr[j]\uff1b\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 arr[j]=arr[0]\uff1b\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 exchange=1\uff1b\u00a0\u00a0 //\u53d1\u751f\u4e86\u4ea4\u6362\uff0c\u6545\u5c06\u4ea4\u6362\u6807\u5fd7\u7f6e\u4e3a\u771f\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(!exchange)\u00a0\u00a0 //\u672c\u8d9f\u6392\u5e8f\u672a\u53d1\u751f\u4ea4\u6362\uff0c\u63d0\u524d\u7ec8\u6b62\u7b97\u6cd5\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return\uff1b\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0 //endfor(\u5916\u5faa\u73af)\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "28.\u627e\u9519\uff1a", "\n#include <string.h>", "\n#include <stdio.h>", "\nclass Base", "\n{ private:", "\nchar * name;", "\npublic:", "\nBase(char * className)", "\n{", "\nname = new char[strlen(className)];", "\nstrcpy(name, className);", "\n}", "\n~Base()", "\n{delete name;}", "\nchar * copyName()", "\n{", "\nchar newname [256];", "\nstrcpy(newname, name);", "\nreturn newname;", "\n}", "\nchar * getName()", "\n{return name;}", "\nstatic void print(Base base)", "\n{printf(\u201cname: %s\\n\u201d , base.name);}", "\n};", "\nclass Subclass : public Base", "\n{", "\npublic:", "\nSubclass(char * className) : Base(className)", "\n{ }", "\n};", "\nint main()", "\n{", "\nBase * pBase = new Subclass(\u201ctest\u201d);", "\nBase::print(*pBase);", "\nprintf(\u201cname: %s\\n\u201d, pBase->getName());", "\nprintf(\u201cnew name: %s\\n\u201d, pBase->copyName());", "\nreturn 0;", "\n}", "29.\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u51fd\u6570\u63a5\u6536\u4e00\u4e2a\u5b57\u7b26\u4e32,\u662f\u7531\u5341\u516d\u8fdb\u5236\u6570\u7ec4\u6210\u7684\u4e00\u7ec4\u5b57\u7b26\u4e32,\u51fd\u6570\u7684\u529f\u80fd\u662f", "\n\u628a\u63a5\u5230\u7684\u8fd9\u7ec4\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u5341\u8fdb\u5236\u6570\u5b57.\u5e76\u5c06\u5341\u8fdb\u5236\u6570\u5b57\u8fd4\u56de.", "\n\u7b54\u6848\uff1a", "\nBOOL\u00a0\u00a0 HexToDec(\u00a0\u00a0 LPCTSTR\u00a0\u00a0 shex,int&\u00a0\u00a0 idec\u00a0\u00a0 )\u00a0\u00a0", "\n\u00a0 {\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 int\u00a0\u00a0 i,mid;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 int\u00a0\u00a0 len\u00a0\u00a0 =\u00a0\u00a0 lstrlen(\u00a0\u00a0 shex\u00a0\u00a0 );\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 if(\u00a0\u00a0 len>8\u00a0\u00a0 )\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return\u00a0\u00a0 FALSE;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 mid\u00a0\u00a0 =\u00a0\u00a0 0;\u00a0\u00a0 idec\u00a0\u00a0 =\u00a0\u00a0 0;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 for(\u00a0\u00a0 i=0;i<len;i++\u00a0\u00a0 )\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 {\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(\u00a0\u00a0 shex[i]>=\u20190\u2032&&shex[i]<=\u20199\u2032\u00a0\u00a0 )\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 mid\u00a0\u00a0 =\u00a0\u00a0 shex[i]-\u20190\u2032;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 else\u00a0\u00a0 if(\u00a0\u00a0 shex[i]>=\u2019a'&&shex[i]<=\u2019f'\u00a0\u00a0 )\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 mid\u00a0\u00a0 =\u00a0\u00a0 shex[i]\u00a0\u00a0 -\u2019a'\u00a0\u00a0 +10;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 else\u00a0\u00a0 if(\u00a0\u00a0 shex[i]>=\u2019A'&&shex[i]<=\u2019F'\u00a0\u00a0 )\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 mid\u00a0\u00a0 =\u00a0\u00a0 shex[i]\u00a0\u00a0 -\u2019A'\u00a0\u00a0 +10;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 else\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return\u00a0\u00a0 FALSE;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 mid\u00a0\u00a0 <<=\u00a0\u00a0 ((len-i-1)<<2);\u00a0\u00a0 // \u79fb\u4f4d\u8868\u793a\u53d8\u4e3a2\u7684n\u6b21\u65b9\u500d", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 idec\u00a0\u00a0 =idc+mid;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 return\u00a0\u00a0 TRUE;\u00a0\u00a0", "\n\u00a0 }\u00a0", "30.\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u5c06\u4e00\u6761\u5b57\u7b26\u4e32\u5206\u6210\u4e24\u90e8\u5206\uff0c\u5c06\u524d\u534a\u90e8\u5206\u6309ASCII\u7801\u5347\u5e8f\u6392\u5e8f\uff0c\u540e\u534a\u90e8\u5206\u4e0d", "\n\u53d8\uff0c\uff08\u5982\u679c\u5b57\u7b26\u4e32\u662f\u5947\u6570\u5219\u4e2d\u95f4\u7684\u5b57\u7b26\u4e0d\u53d8\uff0c\uff09\u6700\u540e\u518d\u5c06\u524d\u540e\u4e24\u90e8\u5206\u4ea4\u6362\uff0c\u7136\u540e\u5c06\u8be5\u5b57\u7b26", "\n\u4e32\u8f93\u51fa\uff0c", "\n\u6d4b\u8bd5\u5b57\u7b26\u4e32\u201cADZDDJKJFIEJHGI\u201d"], "title": "C++\u7b14\u8bd5\u9898\u8001\u9898\u91cd\u53d1\uff084\uff09"},
{"contents": ["16.\u7f16\u5199\u4e00\u4e2aIdentify\u7684\u5206\u914d\u3001\u91ca\u653e\u7684\u51fd\u6570\uff0c\u4e3a1\uff0d10000\u4e4b\u95f4\u7684\u81ea\u7136\u6570\u3002", "\n17.\u5206\u522b\u5b9e\u73b0itoa\u548catoi.", "18.Consider the following code:", "\n#include <stdio.h>", "\n#include <string.h>", "\nint main(int argc, char *argv[]) {", "\nint i = 1;", "\nchar buf[4];", "\nstrcpy(buf, \u201cAAAA\u201d);", "\nprintf(\u201c%d\\n\u201d, i);", "\nreturn 0;", "\n}", "a) When compiled and executed on x86, why does this program usually not output what the programmer intended?\u00a0\u00a0\u00a0\u00a0 \u5728x86\u4e0a\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u5f97\u5230\u9884\u671f\u7ed3\u679c", "b) Name several ways in which the security problem that causes this program not to output what the programmer intended can be prevented WITHOUT changing the code.", "\u53c2\u8003\uff1a\u7b2c\u4e00\u4e2a\u95ee\u9898:\u00a0\u00a0", "\n\u00a0 32\u4f4d\u60c5\u51b5:\u00a0\u00a0", "\n\u00a0 x86\u4e0b,\u6808\u65b9\u5411\u5411\u4e0a\u751f\u957f.\u5728main\u7684\u6808\u4e2d,\u5148\u5206\u914di\u7a7a\u95f4(4byte),\u7136\u540e\u5206\u914d4\u4e2a\u5b57\u8282\u7684buf(\u5730\u5740\u5728i\u7684\u4e0a\u9762,\u6bd4i\u5c0f).strcpy\u8d8a\u754c,\u75280\u628abuf\u5f00\u59cb\u7684\u7b2c4(0\u5f00\u59cb)\u4e2a\u5b57\u8282\u8986\u76d6\u6389\u4e86.\u800cx86\u662fLSB\u6392\u5217\u987a\u5e8f,\u6240\u4ee5\u771f\u597d\u8986\u76d6\u4e86i\u7684\u5185\u4e2a\u6570\u5b571.\u6240\u4ee5\u663e\u793a\u51fa\u6570\u5b570.\u00a0\u00a0", "\n\u00a0 16\u4f4d\u60c5\u51b5\u540c\u6837\u5206\u6790\u5373\u53ef.\u00a0", "\n\u7b2c2\u95ee\uff1f", "19.int w=1,x=2,y=3,z=4;", "\nm=(w<x)?w:x;", "\nm=(m<y)?m:y;", "\nm=(m<2)?m:z;", "\nprintf(\u201cm=%d\u201d,m);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u8bf4\u51fa\u7ed3\u679c", "\n\u7b54\u6848\uff1a1", "20.\u8bf4\u51fa\u7ed3\u679c\u00a0\u00a0 \uff1f\uff1f\uff1f", "\n#include <stdio.h>", "\nmain()", "\n{", "\n\u00a0\u00a0\u00a0 FILE *fp;", "\n\u00a0\u00a0\u00a0 int i,a[4]={1,2,3,4},b;", "\n\u00a0\u00a0\u00a0 fp=fopen(\u201cdata.dat\u201d,\u201dwb\u201d);//\u8fd9\u91cc\u5e2e\u5fd9\u89e3\u91ca\u4e00\u4e0b", "\n\u00a0\u00a0\u00a0 for(i=0;i<4;i++)", "\n\u00a0\u00a0\u00a0 fwrite(&a[i],sizeof(int),1,fp);//\u8fd9\u91cc\u4e5f\u5e2e\u5fd9\u770b\u4e00\u4e0b", "\n\u00a0\u00a0\u00a0 fclose(fp);", "\n\u00a0\u00a0\u00a0 fp=fopen(\u201cdata.dat\u201d,\u201drb\u201d);", "\n\u00a0\u00a0\u00a0 fseek(fp,-2L*sizeof(int),SEEK_END);//\u8fd8\u6709\u8fd9\u91cc", "\n\u00a0\u00a0\u00a0 fread(&b,sizeof(int),1,fp);//\u8fd9\u91cc\u8fd8\u6709\u4e5f\u770b\u4e00\u4e0b", "\n\u00a0\u00a0\u00a0 fclose(fp);", "\n\u00a0\u00a0\u00a0 printf(\u201cb=%d\\n\u201d,b);", "\n}", "\n21.\u6709\u53cc\u5411\u5faa\u73af\u94fe\u8868\u7ed3\u70b9\uff1a\uff08\u534e\u4e3a\u9762\u8bd5\u9898\uff09", "\ntypedef struct node", "\n{", "\n\u00a0 int date;", "\n\u00a0 struct node *front,*next;", "\n}_Node;", "\n\u6709\u4e24\u4e2a\u53cc\u5411\u5faa\u73af\u94fe\u8868A\uff0cB\uff0c\u77e5\u9053\u5176\u5934\u6307\u9488\u4e3a\uff1apHeadA,pHeadB\uff0c\u8bf7\u5199\u4e00\u51fd\u6570\u5c06\u4e24\u4e0a\u94fe\u8868\u4e2ddate\u503c\u76f8\u540c\u7684\u7ed3\u70b9\u5220\u9664", "\n\u53c2\u8003\u7b97\u6cd5\uff1a\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0", "\n\u00a0 1.\u53d6\u51faA\u7684\u4e00\u4e2a\u5143\u7d20d\u00a0\u00a0", "\n\u00a0 2.\u6536\u96c6B\u4e2d\u6709\u76f8\u540c\u5143\u7d20d\u7684\u7ed3\u70b9\u5230\u5783\u573e\u7bb1\uff0c\u5e76\u4eceB\u91cc\u5220\u9664\u00a0\u00a0", "\n\u00a0 3.\u6536\u96c6A\u4e2d\u6709\u76f8\u540c\u5143\u7d20d\u7684\u7ed3\u70b9\u5230\u5783\u573e\u7bb1\uff0c\u5e76\u4eceA\u91cc\u5220\u9664\u00a0\u00a0", "\n\u00a0 4.\u5220\u9664\u5783\u573e\u7bb1\u4e2d\u7684\u6240\u6709\u5143\u7d20\u00a0\u00a0", "\n\u00a0 5.A\u94fe\u7684\u6307\u9488\u6307\u5411\u4e0b\u4e00\u4e2a\u00a0\u00a0", "\n\u00a0 6.\u91cd\u590d1~5,\u76f4\u5230A\u94fe\u5faa\u73af\u5230\u5934\u4e86\u00a0\u00a0", "\n\u00a0 \u6ce8\u610f\u7684\u662f\u7b2c3\u6b65\uff0c\u57282\u6b65\u6267\u884c\u540e\u5783\u573e\u7bb1\u4e0d\u4e3a\u7a7a\u65f6\u624d\u6267\u884c\u3002\u00a0", "\n\u4e0a\u8ff0\u7b97\u6cd5\u8fd8\u53ef\u4ee5\u505a\u4e00\u70b9\u70b9\u4f18\u5316\uff1a\u00a0\u00a0", "\n\u00a0 1.\u52a0\u5165\u4e24\u4e2a\u53d8\u91cfcA,\u00a0\u00a0 cB,\u5206\u522b\u8bb0\u5f55\u5f53\u524dA\u4e2d\u548cB\u4e2d\u7684\u5143\u7d20\u4e2a\u6570\u00a0\u00a0", "\n\u00a0 \u6bcf\u6b21\u4ece\u8f83\u957f\u8005\u4e2d\u53d6\u51fa\u4e00\u4e2a\u5143\u7d20\u6765\uff0c\u5148\u4ece\u8f83\u5c0f\u8005\u4e2d\u627e\u8d77\u00a0\u00a0", "\n\u00a0 \u82e5\u6ca1\u6709\uff0c\u5219\u4e0d\u5fc5\u5728\u8f83\u957f\u8005\u4e2d\u6d6a\u8d39\u65f6\u95f4\u4e86", "\n#include<iostream.h>\u00a0\u00a0\u00a0\u00a0 \uff1f", "\n\u00a0 struct\u00a0\u00a0 NODE\u00a0\u00a0", "\n\u00a0 {\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 int\u00a0\u00a0 date;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 NODE\u00a0\u00a0 *front,*next;\u00a0\u00a0", "\n\u00a0 };\u00a0", "\nvoid\u00a0\u00a0 redel(NODE\u00a0\u00a0 *&ahead,NODE\u00a0\u00a0 *&bhead)\u00a0\u00a0", "\n\u00a0 {\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int\u00a0\u00a0 boy=0;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 NODE\u00a0\u00a0 *pa=ahead,*pb=bhead,*paa,*paaa,*paaaa,*pbb;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 while(pa->next!=ahead)\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int\u00a0\u00a0 boys=pa->date;\u00a0\u00a0 //\u53d6pa\u4e2d\u4e00\u4e2a\u503c", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 paaaa=pa;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 paa=pa;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 pb=bhead;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 while(pb->next!=bhead)\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(boys==pb->date)\u00a0\u00a0 //\u5982\u679cpa,pb\u4e2d\u6709\u503c\u76f8\u540c", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 cout<<endl;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 cout<<\u201ddelete\u00a0\u00a0 B:\u201d<<paa->date<<\u201d\u00a0\u00a0 \u201c;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(pb==bhead)\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 boy=1;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 pb->front->next=pb->next;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 pb->next->front=pb->front;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 bhead=bhead->next;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 pbb=pb;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 pb=pb->next;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delete\u00a0\u00a0 pbb;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 else\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 boy=1;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 pb->front->next=pb->next;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 pb->next->front=pb->front;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 pbb=pb;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 pb=pb->next;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delete\u00a0\u00a0 pbb;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 else\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 pb=pb->next;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 while(paa->next!=ahead\u00a0\u00a0 &&\u00a0\u00a0 boy==1)\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(paa->date==boys)\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 cout<<\u201ddelete\u00a0\u00a0 A:\u201d<<paa->date<<\u201d\u00a0\u00a0 \u201c;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(paa==pa)\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 pa=pa->next;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ahead=pa;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 paa->front->next=paa->next;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 paa->next->front=paa->front;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 paaa=paa;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 paa=paa->next;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delete\u00a0\u00a0 paaa;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 else\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 paa->front->next=paa->next;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 paa->next->front=paa->front;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 paaa=paa;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 paa=paa->next;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delete\u00a0\u00a0 paaa;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 else\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 paa=paa->next;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 boy=0;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(paaaa==pa)\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 pa=pa->next;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 cout<<endl;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0", "\n\u00a0 }", "\nint\u00a0\u00a0 main()\u00a0\u00a0", "\n\u00a0 {\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 NODE\u00a0\u00a0 *A,*pHeadA,*B,*pHeadB;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 A=new\u00a0\u00a0 NODE;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B=new\u00a0\u00a0 NODE;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 pHeadA=A;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 pHeadB=B;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(int\u00a0\u00a0 i=1;i<21;++i)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 //\u751f\u6210\u94fe\u8868A,\u5e76\u8d4b\u521d\u503c!\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 A->date=i;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 A->next=new\u00a0\u00a0 NODE;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 A->next->front=A;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 A=A->next;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 A=A->front;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delete\u00a0\u00a0 A->next;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 A->next=pHeadA;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 pHeadA->front=A;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(int\u00a0\u00a0 i=1;i<33;i+=2)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 //\u751f\u6210\u94fe\u8868B,\u5e76\u8d4b\u521d\u503c!\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B->date=i;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B->next=new\u00a0\u00a0 NODE;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B->next->front=B;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B=B->next;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B=B->front;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delete\u00a0\u00a0 B->next;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B->next=pHeadB;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 pHeadB->front=B;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 redel(pHeadA,pHeadB);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 //\u8c03\u7528\u51fd\u6570\u5220\u9664\u76f8\u540c\u7ed3\u70b9!\u00a0\u00a0", "\n\u00a0 }\u00a0", "22.", "\nchar * GetStr()", "\n{", "\nchar *tmp;", "\ntmp = \u201c123\u2033", "\nreturn tmp;", "\n}", "void main()", "\n{", "\nprintf(\u201c%s\u201d, GetStr());", "\n}", "\n\u4f1a\u8f93\u51fa123\u5417\uff1f123\u521b\u5efa\u5728\u5806\u4e0a\u8fd8\u662f\u6808\u4e0a\u5462\uff1f123\u7684\u7a7a\u95f4\u662f\u4ec0\u4e48\u65f6\u5019\u91ca\u653e\u7684\uff1f", "\n\u53c2\u8003\uff1a\u201d123\u2033\u00a0 \u662f\u5e38\u91cf\u5b57\u7b26\u4e32\uff0c\u5b58\u50a8\u5728\u5168\u5c40\u53d8\u91cf\u533a\uff0c\u548c\u9759\u6001\u53d8\u91cf\u4e00\u8d77\u3002\u5373\u4e0d\u5728\u5806\uff0c\u4e5f\u4e0d\u5728\u6808\u00a0\u00a0 \u5728\u7a0b\u5e8f\u7ed3\u675f\u65f6\u81ea\u52a8\u91ca\u653e\u00a0\u00a0\u00a0", "23.1\uff09\u5b57\u7b26\u6307\u9488\u3001\u6d6e\u70b9\u6570\u6307\u9488\u3001\u4ee5\u53ca\u51fd\u6570\u6307\u9488\u8fd9\u4e09\u79cd\u7c7b\u578b\u7684\u53d8\u91cf\u54ea\u4e2a\u5360\u7528\u7684\u5185\u5b58\u6700\u5927\uff1f\u4e3a\u4ec0\u4e48\uff1f", "\n\u7b54\u6848\uff1a\u6307\u9488\u53d8\u91cf\u4e5f\u5360\u7528\u5185\u5b58\u5355\u5143\uff0c\u800c\u4e14\u6240\u6709\u6307\u9488\u53d8\u91cf\u5360\u7528\u5185\u5b58\u5355\u5143\u7684\u6570\u91cf\u90fd\u662f\u76f8\u540c\u7684\u3002\u5c31\u662f\u8bf4\uff0c\u4e0d\u7ba1\u662f\u6307\u5411\u4f55\u79cd\u5bf9\u8c61\u7684\u6307\u9488\u53d8\u91cf\uff0c\u5b83\u4eec\u5360\u7528\u5185\u5b58\u7684\u5b57\u8282\u6570\u90fd\u662f\u4e00\u6837\u7684\uff0c\u5e76\u4e14\u8981\u8db3\u591f\u628a\u7a0b\u5e8f\u4e2d\u6240\u80fd\u7528\u5230\u7684\u6700\u5927\u5730\u5740\u8868\u793a\u51fa\u6765\uff08\u901a\u5e38\u662f\u4e00\u4e2a\u673a\u5668\u5b57\u957f\uff09\u3002", "2\uff09\u7c7bClassB\u4eceClassA\u6d3e\u751f\uff0c\u90a3\u4e48ClassA *a = new ClassB(\u2026); \u8bd5\u95ee\u8be5\u8868\u8fbe\u662f\u5426\u5408\u6cd5\uff1f\u4e3a\u4ec0", "\n\u4e48\uff1f", "\n\u7b54\u6848\uff1a\u6d3e\u751f\u7c7b\u7684\u6307\u9488\u6307\u5411\u57fa\u7c7b\u7684\u5bf9\u8c61\u662f\u9519\u8bef\u7684\uff0c\u4e0d\u80fd\u901a\u8fc7\u7f16\u8bd1\u7684\uff1b \u57fa\u7c7b\u7684\u6307\u9488\u53ef\u4ee5\u6307\u5411\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\uff0c\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u51fd\u6570", "\n\u9e21\u662f\u52a8\u7269\uff0c\u6ca1\u9519\u3002\uff08 \u52a8\u7269\u7684\u6307\u9488 \u6307\u5411 \u9e21\u7684\u5b9e\u4f8b\uff09", "\n\u9e21\u53ef\u4ee5\u6267\u884c\u6240\u6709\u52a8\u7269\u90fd\u5177\u6709\u7684\u65b9\u6cd5\uff0c\u4f8b\u5982 \u201c\u6b7b\u4ea1\u201d", "\n\u53cd\u8fc7\u6765\uff0c\u52a8\u7269\u4e00\u5b9a\u662f\u9e21\u5417\uff1f\uff08\u9e21\u7684\u6307\u9488 \u6307\u5411 \u52a8\u7269\u6216\u8005\u52a8\u7269\u7684\u67d0\u4e2a\u6d3e\u751f\u7c7b\u7684\u5b9e\u4f8b\uff09", "\n\u52a8\u7269\u90fd\u80fd\u6267\u884c\u9e21\u7684\u67d0\u4e2a\u65b9\u6cd5\u5417\uff1f\u6bd4\u5982\u8bf4 \u201c\u4e0b\u86cb\u201d\uff1f", "3\uff09\u5982\u679cClassA\u4e2d\u5b9a\u4e49\u5e76\u5b9e\u73b0\u865a\u51fd\u6570int func(void)\uff0cClassB\u4e2d\u4e5f\u5b9e\u73b0\u8be5\u51fd\u6570\uff0c\u90a3\u4e48\u4e0a\u8ff0\u53d8\u91cf", "\na->func()\u5c06\u8c03\u7528\u54ea\u4e2a\u7c7b\u91cc\u9762\u7684\u51fd\u6570\uff1f\u5982\u679cint func(void)\u4e0d\u662f\u865a\u51fd\u6570\uff0c\u60c5\u51b5\u53c8\u5982\u4f55\uff1f\u4e3a\u4ec0", "\n\u4e48\uff1f", "\n\u7b54\u6848\uff1a\u7b2c\u4e00\u95ee\u8c03\u7528\u7684\u662fB\u7684\u3002\u7b2c\u4e8c\u95ee\u8c03\u7528A\u7684\u3002", "\n\u865a\u51fd\u6570\u7684\u4e00\u4e2a\u5178\u578b\u5e94\u7528\uff0c\u865a\u51fd\u6570\u53ea\u80fd\u501f\u52a9\u4e8e\u6307\u9488\u6216\u8005\u5f15\u7528\u6765\u8fbe\u5230\u591a\u6001\u7684\u6548\u679c", "\n\u5982\u679c\u6ca1\u6709\u5b9a\u4e49\u6210\u865a\u51fd\u6570\uff1a\u2014\u2014", "\nclass A{", "\npublic:", "\nvoid print(){ cout<<\u201dThis is A\u201d<<endl;}", "\n};", "class B:public A{", "\npublic:", "\nvoid print(){ cout<<\u201dThis is B\u201d<<endl;}", "\n};", "int main(){\u00a0\u00a0 //\u4e3a\u4e86\u5728\u4ee5\u540e\u4fbf\u4e8e\u533a\u5206\uff0c\u6211\u8fd9\u6bb5main()\u4ee3\u7801\u53eb\u505amain1", "\nA a;\u00a0 B b;", "\nA* p1=&a;", "\nA* p2=&b;", "\np1->print();", "\np2->print();", "\n}", "\n\u7ed3\u679c\u662f\u4e24\u4e2aThis is A", "\n\u5982\u679c\u5b9a\u4e49\u6210\u865a\u51fd\u6570\uff1a\u2014\u2014\u2014", "\nclass A{", "\npublic:", "\nvirtual void print(){ cout<<\u201dThis is A\u201d<<endl;}\u00a0 //\u73b0\u5728\u6210\u4e86\u865a\u51fd\u6570\u4e86", "\n};", "class B:public A{", "\npublic:", "\nvoid print(){ cout<<\u201dThis is B\u201d<<endl;}\u00a0 //\u8fd9\u91cc\u4e0d\u9700\u8981\u5728\u524d\u9762\u52a0\u4e0a\u5173\u952e\u5b57virtual\uff0c\u53ea\u9700\u5728\u628a\u57fa\u7c7b\u7684\u6210\u5458\u51fd\u6570\u8bbe\u4e3avirtual\uff0c\u5176\u6d3e\u751f\u7c7b\u7684\u76f8\u5e94\u7684\u51fd\u6570\u4e5f\u4f1a\u81ea\u52a8\u53d8\u4e3a\u865a\u51fd\u6570", "\n};", "\n\u518d\u8fd0\u884cmain\u8f93\u51fa\u7684\u7ed3\u679c\u5c31\u662fThis is A\u548cThis is B", "\u6d4b\u8bd5\uff1a", "\n4\uff09char **p, a[16][8];\u00a0 \u95ee\uff1ap=a\u662f\u5426\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u5728\u4ee5\u540e\u51fa\u73b0\u95ee\u9898\uff1f\u4e3a\u4ec0\u4e48\uff1f", "\n\u53c2\u8003: \u8fd9\u4e2a\u4e0d\u4f1a\u5bfc\u81f4\u51fa\u73b0\u95ee\u9898\uff0c\u4f46\u662f\u8981\u6ce8\u610fp\u7684\u4f7f\u7528\uff0c\u5982a[1][2] \u7b49\u4ef7\u7684\u4e3a *(*(p+1)+2)\u800c\u4e0d\u662f*(p+11),", "\n\u4f1a\u7684\uff0c\u8fd9\u6837\u4f1a\u51fa\u73b0\u7f16\u8bd1\u9519\u8bef\u00a0 \u6b63\u786e\u7684\u662f\uff1achar a[5][5]; char (*p)[5]; p=a;", "\u5982\u4e0b\u6240\u8ff0\u7684if else\u548cswitch\u8bed\u53e5\u54ea\u4e2a\u7684\u6548\u7387\u9ad8\uff1f\u4e3a\u4ec0\u4e48\uff1f", "5\uff09\u5728\u540c\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\uff0c\u4e00\u4e2a\u6a21\u5757\u662f\u5426\u53ef\u4ee5\u901a\u8fc7\u6307\u9488\u64cd\u4f5c\u7834\u574f\u5176\u5b83\u6a21\u5757\u7684\u5185\u5b58\uff0c\u4e3a\u4ec0\u4e48\uff1f\uff08\u534e\u4e3a\uff09", "6\uff09\u5e94\u7528\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\u7684\u5185\u5b58\u5305\u62ec\u4ee3\u7801\u533a\u548c\u6570\u636e\u533a\uff0c\u5176\u4e2d\u6570\u636e\u533a\u53c8\u5305\u62ec\u54ea\u4e9b\u90e8\u5206\uff1f", "\n\u53c2\u8003\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u8fdb\u7a0b\u7684\u5185\u5b58\u7a7a\u95f4\u800c\u8a00\uff0c\u53ef\u4ee5\u5728\u903b\u8f91\u4e0a\u5206\u62103\u4e2a\u90e8\u4efd\uff1a\u4ee3\u7801\u533a\uff0c\u9759\u6001\u6570\u636e\u533a\u548c\u52a8\u6001\u6570\u636e\u533a\u3002\u52a8\u6001\u6570\u636e\u533a\u4e00\u822c\u5c31\u662f\u201c\u5806\u6808\u201d\u3002\u6808\u662f\u4e00\u79cd\u7ebf\u6027\u7ed3\u6784\uff0c\u5806\u662f\u4e00\u79cd\u94fe\u5f0f\u7ed3\u6784\u3002\u8fdb\u7a0b\u7684\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u6709\u79c1\u6709\u7684\u201c\u6808\u201d\u3002\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\u5206\u914d\u5728\u9759\u6001\u6570\u636e\u533a\uff0c\u672c\u5730\u53d8\u91cf\u5206\u914d\u5728\u52a8\u6001\u6570\u636e\u533a\uff0c\u5373\u5806\u6808\u4e2d\u3002\u7a0b\u5e8f\u901a\u8fc7\u5806\u6808\u7684\u57fa\u5730\u5740\u548c\u504f\u79fb\u91cf\u6765\u8bbf\u95ee\u672c\u5730\u53d8\u91cf\u3002"], "title": "C++\u7b14\u8bd5\u9898\u8001\u9898\u91cd\u53d1\uff083\uff09"},
{"contents": ["1.\u591a\u6001\u7c7b\u4e2d\u7684\u865a\u51fd\u6570\u8868\u662fCompile-Time\uff0c\u8fd8\u662fRun-Time\u65f6\u5efa\u7acb\u7684?", "\n\u7b54\u6848\uff1a\u865a\u62df\u51fd\u6570\u8868\u662f\u5728\u7f16\u8bd1\u671f\u5c31\u5efa\u7acb\u4e86,\u5404\u4e2a\u865a\u62df\u51fd\u6570\u8fd9\u65f6\u88ab\u7ec4\u7ec7\u6210\u4e86\u4e00\u4e2a\u865a\u62df\u51fd\u6570\u7684\u5165\u53e3\u5730\u5740\u7684\u6570\u7ec4.\u800c\u5bf9\u8c61\u7684\u9690\u85cf\u6210\u5458\u2013\u865a\u62df\u51fd\u6570\u8868\u6307\u9488\u662f\u5728\u8fd0\u884c\u671f\u2013\u4e5f\u5c31\u662f\u6784\u9020\u51fd\u6570\u88ab\u8c03\u7528\u65f6\u8fdb\u884c\u521d\u59cb\u5316\u7684,\u8fd9\u662f\u5b9e\u73b0\u591a\u6001\u7684\u5173\u952e.", "2.\u5c06\u4e00\u4e2a 1M -10M \u7684\u6587\u4ef6\uff0c\u9006\u5e8f\u5b58\u50a8\u5230\u53e6\u4e00\u4e2a\u6587\u4ef6\uff0c\u5c31\u662f\u524d\u4e00\u4e2a\u6587\u4ef6\u7684\u6700\u540e\u4e00\u4e2a", "\n\u5b57\u7b26\u5b58\u5230\u65b0\u6587\u4ef6\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002", "3.main\u4e3b\u51fd\u6570\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u662f\u5426\u53ef\u80fd\u4f1a\u518d\u6267\u884c\u4e00\u6bb5\u4ee3\u7801?\uff08\u6717\u8baf\u7684\u4e00\u9053\u7b14\u8bd5\u9898\uff09", "\n\u7b54\u6848\uff1a\u53ef\u4ee5\uff0c\u53ef\u4ee5\u7528_onexit \u6ce8\u518c\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u4f1a\u5728main \u4e4b\u540e\u6267\u884c;", "\n\u5982\u679c\u4f60\u9700\u8981\u52a0\u5165\u4e00\u6bb5\u5728main\u9000\u51fa\u540e\u6267\u884c\u7684\u4ee3\u7801\uff0c\u53ef\u4ee5\u4f7f\u7528atexit()\u51fd\u6570\uff0c\u6ce8\u518c\u4e00\u4e2a\u51fd\u6570\u3002\u00a0\u00a0", "\n\u00a0 \u8bed\u6cd5\uff1a\u00a0\u00a0", "\n\u00a0 #include\u00a0\u00a0 <stdlib.h>\u00a0\u00a0", "\n\u00a0 int\u00a0\u00a0 atexit(void\u00a0\u00a0 (*function\u201d)(void));\u00a0\u00a0", "\n\u00a0 #include\u00a0\u00a0 <stdlib.h>\u00a0\u00a0", "\n\u00a0 #include\u00a0\u00a0 <stdio.h>\u00a0\u00a0\u00a0\u00a0", "\n\u00a0 void\u00a0\u00a0 fn1(\u00a0\u00a0 void\u00a0\u00a0 ),\u00a0\u00a0 fn2(\u00a0\u00a0 void\u00a0\u00a0 ),\u00a0\u00a0 fn3(\u00a0\u00a0 void\u00a0\u00a0 ),\u00a0\u00a0 fn4(\u00a0\u00a0 void\u00a0\u00a0 );\u00a0\u00a0\u00a0\u00a0", "\n\u00a0 int\u00a0\u00a0 main(\u00a0\u00a0 void\u00a0\u00a0 )\u00a0\u00a0", "\n\u00a0 {\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 atexit(\u00a0\u00a0 fn1\u00a0\u00a0 );\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 atexit(\u00a0\u00a0 fn2\u00a0\u00a0 );\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 atexit(\u00a0\u00a0 fn3\u00a0\u00a0 );\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 atexit(\u00a0\u00a0 fn4\u00a0\u00a0 );\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u00a0\u00a0 \u201cThis\u00a0\u00a0 is\u00a0\u00a0 executed\u00a0\u00a0 first.\\n\u201d\u00a0\u00a0 );\u00a0\u00a0", "\n\u00a0 }\u00a0\u00a0\u00a0", "\n\u00a0 void\u00a0\u00a0 fn1()\u00a0\u00a0", "\n\u00a0 {\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u00a0\u00a0 \u201cnext.\\n\u201d\u00a0\u00a0 );\u00a0\u00a0", "\n\u00a0 }\u00a0\u00a0\u00a0", "\n\u00a0 void\u00a0\u00a0 fn2()\u00a0\u00a0", "\n\u00a0 {\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u00a0\u00a0 \u201cexecuted\u00a0\u00a0 \u201c\u00a0\u00a0 );\u00a0\u00a0", "\n\u00a0 }\u00a0\u00a0\u00a0\u00a0", "\n\u00a0 void\u00a0\u00a0 fn3()\u00a0\u00a0", "\n\u00a0 {\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u00a0\u00a0 \u201cis\u00a0\u00a0 \u201c\u00a0\u00a0 );\u00a0\u00a0", "\n\u00a0 }\u00a0\u00a0\u00a0\u00a0", "\n\u00a0 void\u00a0\u00a0 fn4()\u00a0\u00a0", "\n\u00a0 {\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u00a0\u00a0 \u201cThis\u00a0\u00a0 \u201c\u00a0\u00a0 );\u00a0\u00a0", "\n\u00a0 }\u00a0\u00a0", "\n\u7ed3\u679c\uff1a", "\nThis\u00a0\u00a0 is\u00a0\u00a0 executed\u00a0\u00a0 first.\u00a0\u00a0", "\n\u00a0This\u00a0\u00a0 is\u00a0\u00a0 executed\u00a0\u00a0 next.\u00a0", "4.\u4e00\u4e2a\u7236\u7c7b\u5199\u4e86\u4e00\u4e2avirtual \u51fd\u6570\uff0c\u5982\u679c\u5b50\u7c7b\u8986\u76d6\u5b83\u7684\u51fd\u6570\u4e0d\u52a0virtual ,\u4e5f\u80fd\u5b9e\u73b0\u591a\u6001?", "\n\u5728\u5b50\u7c7b\u7684\u7a7a\u95f4\u91cc\uff0c\u6709\u6ca1\u6709\u7236\u7c7b\u7684\u8fd9\u4e2a\u51fd\u6570\uff0c\u6216\u8005\u7236\u7c7b\u7684\u79c1\u6709\u53d8\u91cf? (\u534e\u4e3a\u7b14\u8bd5\u9898\uff09", "\n\u7b54\u6848\uff1a\u53ea\u8981\u57fa\u7c7b\u5728\u5b9a\u4e49\u6210\u5458\u51fd\u6570\u65f6\u5df2\u7ecf\u58f0\u660e\u4e86virtue\u5173\u952e\u5b57\uff0c\u5728\u6d3e\u751f\u7c7b\u5b9e\u73b0\u7684\u65f6\u5019\u8986\u76d6\u8be5\u51fd\u6570\u65f6\uff0cvirtue\u5173\u952e\u5b57\u53ef\u52a0\u53ef\u4e0d\u52a0\uff0c\u4e0d\u5f71\u54cd\u591a\u6001\u7684\u5b9e\u73b0\u3002\u5b50\u7c7b\u7684\u7a7a\u95f4\u91cc\u6709\u7236\u7c7b\u7684\u6240\u6709\u53d8\u91cf(static\u9664\u5916)\u3002", "5.\u7ed9\u4e00\u4e2a\u5b57\u7b26\u4e32\u3001\u4f8b\u5982 \u201cababc\u201d\u8981\u6c42\u8fd4\u56de\u201cab\u201d. \u56e0\u4e3a\u201cab\u201d\u8fde\u7eed\u91cd\u590d\u51fa\u73b0\u4e14\u6700\u957f\u3002", "\n\u00a0 \u7528C/C\uff0b\uff0b\u8bed\u8a00\u5199\u4e00\u51fd\u6570\u5b8c\u6210\u8be5\u7b97\u6cd5\uff0c\u7ed9\u51fa\u590d\u6742\u5ea6", "6.\u5bf9\u5e8f\u52171\u30011\u30012\u30013\u30015\u30018\u300113\u3002\u3002\u3002\u3002\u00a0 \u662fFab..\u6570\u5217", "\n\u00a0 2\u30013\u30015\u300113\u2026\u662fFab..\u8d28\u6570\u6570\u5217\uff0c\u56e0\u4e3a\u4ed6\u4eec\u4e0e\u81ea\u5df1\u524d\u9762\u7684Fab\u2026\u6570\u5217\u90fd\u4e92\u8d28", "\n\u7ed9\u51fak\uff0c\u8fd4\u56de\u7b2ck\u5c0f\u7684Fab..\u8d28\u6570", "7.101\u4e2a\u786c\u5e01100\u771f\u30011\u5047\uff0c\u771f\u5047\u533a\u522b\u5728\u4e8e\u91cd\u91cf\u3002\u8bf7\u7528\u65e0\u781d\u7801\u5929\u5e73\u79f0\u4e24\u6b21\u7ed9\u51fa\u771f\u5e01\u91cd\u8fd8\u662f\u5047\u5e01", "\n\u91cd\u7684\u7ed3\u8bba\u3002", "8.\u5b8c\u6210\u5b57\u7b26\u4e32\u62f7\u8d1d\u53ef\u4ee5\u4f7f\u7528 sprintf\u3001strcpy \u53ca memcpy \u51fd\u6570\uff0c\u8bf7\u95ee\u8fd9\u4e9b\u51fd\u6570\u6709\u4ec0\u4e48\u533a\u522b", "\n\uff0c\u4f60\u559c\u6b22\u4f7f\u7528\u54ea\u4e2a\uff0c\u4e3a\u4ec0\u4e48\uff1f", "\n\u7b54\u6848\uff1a\u8fd9\u4e9b\u51fd\u6570\u7684\u533a\u522b\u5728\u4e8e \u5b9e\u73b0\u529f\u80fd \u4ee5\u53ca \u64cd\u4f5c\u5bf9\u8c61 \u4e0d\u540c\u3002", "\n1.strcpy \u51fd\u6570\u64cd\u4f5c\u7684\u5bf9\u8c61\u662f \u5b57\u7b26\u4e32\uff0c\u5b8c\u6210 \u4ece \u6e90\u5b57\u7b26\u4e32 \u5230 \u76ee\u7684\u5b57\u7b26\u4e32 \u7684 \u62f7\u8d1d \u529f\u80fd\u3002", "\n2.snprintf \u51fd\u6570\u64cd\u4f5c\u7684\u5bf9\u8c61\u4e0d\u9650\u4e8e\u5b57\u7b26\u4e32\uff1a\u867d\u7136\u76ee\u7684\u5bf9\u8c61\u662f\u5b57\u7b26\u4e32\uff0c\u4f46\u662f\u6e90\u5bf9\u8c61\u53ef\u4ee5\u662f\u5b57\u7b26\u4e32\u3001\u4e5f\u53ef\u4ee5\u662f\u4efb\u610f\u57fa\u672c\u7c7b\u578b\u7684\u6570\u636e\u3002\u8fd9\u4e2a\u51fd\u6570\u4e3b\u8981\u7528\u6765\u5b9e\u73b0\uff08\u5b57\u7b26\u4e32\u6216\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff09\u5411\u5b57\u7b26\u4e32\u7684\u8f6c\u6362\u529f\u80fd\u3002\u5982\u679c\u6e90\u5bf9\u8c61\u662f\u5b57\u7b26\u4e32\uff0c\u5e76\u4e14\u6307\u5b9a %s \u683c\u5f0f\u7b26\uff0c\u4e5f\u53ef\u5b9e\u73b0\u5b57\u7b26\u4e32\u62f7\u8d1d\u529f\u80fd\u3002", "\n3.memcpy \u51fd\u6570\u987e\u540d\u601d\u4e49\u5c31\u662f \u5185\u5b58\u62f7\u8d1d\uff0c\u5b9e\u73b0 \u5c06\u4e00\u4e2a \u5185\u5b58\u5757 \u7684\u5185\u5bb9\u590d\u5236\u5230\u53e6\u4e00\u4e2a \u5185\u5b58\u5757 \u8fd9\u4e00\u529f\u80fd\u3002\u5185\u5b58\u5757\u7531\u5176\u9996\u5730\u5740\u4ee5\u53ca\u957f\u5ea6\u786e\u5b9a\u3002\u7a0b\u5e8f\u4e2d\u51fa\u73b0\u7684\u5b9e\u4f53\u5bf9\u8c61\uff0c\u4e0d\u8bba\u662f\u4ec0\u4e48\u7c7b\u578b\uff0c\u5176\u6700\u7ec8\u8868\u73b0\u5c31\u662f\u5728\u5185\u5b58\u4e2d\u5360\u636e\u4e00\u5e2d\u4e4b\u5730\uff08\u4e00\u4e2a\u5185\u5b58\u533a\u95f4\u6216\u5757\uff09\u3002\u56e0\u6b64\uff0cmemcpy \u7684\u64cd\u4f5c\u5bf9\u8c61\u4e0d\u5c40\u9650\u4e8e\u67d0\u4e00\u7c7b\u6570\u636e\u7c7b\u578b\uff0c\u6216\u8005\u8bf4\u53ef \u9002\u7528\u4e8e\u4efb\u610f\u6570\u636e\u7c7b\u578b\uff0c\u53ea\u8981\u80fd\u7ed9\u51fa\u5bf9\u8c61\u7684\u8d77\u59cb\u5730\u5740\u548c\u5185\u5b58\u957f\u5ea6\u4fe1\u606f\u3001\u5e76\u4e14\u5bf9\u8c61\u5177\u6709\u53ef\u64cd\u4f5c\u6027\u5373\u53ef\u3002\u9274\u4e8e memcpy \u51fd\u6570\u7b49\u957f\u62f7\u8d1d\u7684\u7279\u70b9\u4ee5\u53ca\u6570\u636e\u7c7b\u578b\u4ee3\u8868\u7684\u7269\u7406\u610f\u4e49\uff0cmemcpy \u51fd\u6570\u901a\u5e38\u9650\u4e8e\u540c\u79cd\u7c7b\u578b\u6570\u636e\u6216\u5bf9\u8c61\u4e4b\u95f4\u7684\u62f7\u8d1d\uff0c\u5176\u4e2d\u5f53\u7136\u4e5f\u5305\u62ec\u5b57\u7b26\u4e32\u62f7\u8d1d\u4ee5\u53ca\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u62f7\u8d1d\u3002", "\u5bf9\u4e8e\u5b57\u7b26\u4e32\u62f7\u8d1d\u6765\u8bf4\uff0c\u7528\u4e0a\u8ff0\u4e09\u4e2a\u51fd\u6570\u90fd\u53ef\u4ee5\u5b9e\u73b0\uff0c\u4f46\u662f\u5176\u5b9e\u73b0\u7684\u6548\u7387\u548c\u4f7f\u7528\u7684\u65b9\u4fbf\u7a0b\u5ea6\u4e0d\u540c\uff1a", "\n\u2022\u00a0strcpy \u65e0\u7591\u662f\u6700\u5408\u9002\u7684\u9009\u62e9\uff1a\u6548\u7387\u9ad8\u4e14\u8c03\u7528\u65b9\u4fbf\u3002", "\n\u2022\u00a0snprintf \u8981\u989d\u5916\u6307\u5b9a\u683c\u5f0f\u7b26\u5e76\u4e14\u8fdb\u884c\u683c\u5f0f\u8f6c\u5316\uff0c\u9ebb\u70e6\u4e14\u6548\u7387\u4e0d\u9ad8\u3002", "\n\u2022\u00a0memcpy \u867d\u7136\u9ad8\u6548\uff0c\u4f46\u662f\u9700\u8981\u989d\u5916\u63d0\u4f9b\u62f7\u8d1d\u7684\u5185\u5b58\u957f\u5ea6\u8fd9\u4e00\u53c2\u6570\uff0c\u6613\u9519\u4e14\u4f7f\u7528\u4e0d\u4fbf\uff1b\u5e76\u4e14\u5982\u679c\u957f\u5ea6\u6307\u5b9a\u8fc7\u5927\u7684\u8bdd\uff08\u6700\u4f18\u957f\u5ea6\u662f\u6e90\u5b57\u7b26\u4e32\u957f\u5ea6 + 1\uff09\uff0c\u8fd8\u4f1a\u5e26\u6765\u6027\u80fd\u7684\u4e0b\u964d\u3002\u5176\u5b9e strcpy \u51fd\u6570\u4e00\u822c\u662f\u5728\u5185\u90e8\u8c03\u7528 memcpy \u51fd\u6570\u6216\u8005\u7528\u6c47\u7f16\u76f4\u63a5\u5b9e\u73b0\u7684\uff0c\u4ee5\u8fbe\u5230\u9ad8\u6548\u7684\u76ee\u7684\u3002\u56e0\u6b64\uff0c\u4f7f\u7528 memcpy \u548c strcpy \u62f7\u8d1d\u5b57\u7b26\u4e32\u5728\u6027\u80fd\u4e0a\u5e94\u8be5\u6ca1\u6709\u4ec0\u4e48\u5927\u7684\u5dee\u522b\u3002", "\n\u5bf9\u4e8e\u975e\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u6570\u636e\u7684\u590d\u5236\u6765\u8bf4\uff0cstrcpy \u548c snprintf \u4e00\u822c\u5c31\u65e0\u80fd\u4e3a\u529b\u4e86\uff0c\u53ef\u662f\u5bf9 memcpy \u5374\u6ca1\u6709\u4ec0\u4e48\u5f71\u54cd\u3002\u4f46\u662f\uff0c\u5bf9\u4e8e\u57fa\u672c\u6570\u636e\u7c7b\u578b\u6765\u8bf4\uff0c\u5c3d\u7ba1\u53ef\u4ee5\u7528 memcpy \u8fdb\u884c\u62f7\u8d1d\uff0c\u7531\u4e8e\u6709\u8d4b\u503c\u8fd0\u7b97\u7b26\u53ef\u4ee5\u65b9\u4fbf\u4e14\u9ad8\u6548\u5730\u8fdb\u884c\u540c\u79cd\u6216\u517c\u5bb9\u7c7b\u578b\u7684\u6570\u636e\u4e4b\u95f4\u7684\u62f7\u8d1d\uff0c\u6240\u4ee5\u8fd9\u79cd\u60c5\u51b5\u4e0b memcpy \u51e0\u4e4e\u4e0d\u88ab\u4f7f\u7528\u3002memcpy \u7684\u957f\u5904\u662f\u7528\u6765\u5b9e\u73b0\uff08\u901a\u5e38\u662f\u5185\u90e8\u5b9e\u73b0\u5c45\u591a\uff09\u5bf9\u7ed3\u6784\u6216\u8005\u6570\u7ec4\u7684\u62f7\u8d1d\uff0c\u5176\u76ee\u7684\u662f\u6216\u8005\u9ad8\u6548\uff0c\u6216\u8005\u4f7f\u7528\u65b9\u4fbf\uff0c\u751a\u6216\u4e24\u8005\u517c\u6709\u3002"], "title": "C++\u7b14\u8bd5\u9898\u8001\u9898\u91cd\u53d1\uff081\uff09"},
{"contents": ["1.\tc++\u4e2d\u6307\u9488\u7684\u4f18\u7f3a\u70b9\u6709\u54ea\u4e9b", "\n\u7b54\u6848\uff1a\u4f18\u70b9\uff1a", "\n(1)\u63d0\u9ad8\u7a0b\u5e8f\u7684\u7f16\u8bd1\u6548\u7387\u548c\u6267\u884c\u901f\u5ea6\u3002", "\n(2)\u901a\u8fc7\u6307\u9488\u53ef\u4f7f\u7528\u4e3b\u8c03\u51fd\u6570\u548c\u88ab\u8c03\u51fd\u6570\u4e4b\u95f4\u5171\u4eab\u53d8\u91cf\u6216\u6570\u636e\u7ed3\u6784\uff0c\u4fbf\u4e8e\u5b9e\u73b0\u53cc\u5411\u6570\u636e\u901a\u8baf\u3002", "\n(3)\u53ef\u4ee5\u5b9e\u73b0\u52a8\u6001\u7684\u5b58\u50a8\u5206\u914d\u3002", "\n(4)\u4fbf\u4e8e\u8868\u793a\u5404\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u7f16\u5199\u9ad8\u8d28\u91cf\u7684\u7a0b\u5e8f\u3002", "\n\u7f3a\u70b9\uff1a", "\n(1)\u4f7f\u7528\u672a\u6b63\u786e\u521d\u59cb\u5316\u7684\u6307\u9488\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83", "\n(2)\u5f15\u7528\u5df2\u91ca\u653e\u7684\u6307\u9488", "\n(3)\u901a\u8fc7\u6307\u9488\u8bbf\u95ee\u4e0d\u8be5\u8bbf\u95ee\u7684\u5185\u5b58", "\n2.\t\u5b8f\u548c\u51fd\u6570\u7684\u533a\u522b", "\n\u7b54\u6848\uff1a(1)\u5b8f\u505a\u7684\u662f\u7b80\u5355\u7684\u5b57\u7b26\u4e32\u66ff\u6362(\u6ce8\u610f\u662f\u5b57\u7b26\u4e32\u7684\u66ff\u6362\uff0c\u4e0d\u662f\u5176\u4ed6\u7c7b\u578b\u53c2\u6570\u7684\u66ff\u6362)\uff0c\u800c\u51fd\u6570\u7684\u53c2\u6570\u7684\u4f20\u9012\uff0c\u53c2\u6570\u662f\u6709\u6570\u636e\u7c7b\u578b\u7684\uff0c\u53ef\u4ee5\u662f\u5404\u79cd\u5404\u6837\u7684\u7c7b\u578b\u3002", "\n(2)\u5b8f\u7684\u53c2\u6570\u66ff\u6362\u662f\u4e0d\u7ecf\u8ba1\u7b97\u800c\u76f4\u63a5\u5904\u7406\u7684\uff0c\u800c\u51fd\u6570\u8c03\u7528\u662f\u5c06\u5b9e\u53c2\u7684\u503c\u4f20\u9012\u7ed9\u5f62\u53c2\uff0c\u662f\u8ba1\u7b97\u5f97\u6765\u7684\u3002", "\n(3)\u5b8f\u5728\u7f16\u8bd1\u4e4b\u524d\u8fdb\u884c\uff0c\u5373\u5148\u7528\u5b8f\u4f53\u66ff\u6362\u5b8f\u540d\uff0c\u7136\u540e\u518d\u7f16\u8bd1\u7684\uff0c\u800c\u51fd\u6570\u662f\u7f16\u8bd1\u4e4b\u540e\uff0c\u5728\u6267\u884c\u65f6\uff0c\u624d\u8c03\u7528\u7684\u3002\u56e0\u6b64\uff0c\u5b8f\u5360\u7528\u7684\u662f\u7f16\u8bd1\u7684\u65f6\u95f4\uff0c\u800c\u51fd\u6570\u5360\u7528\u7684\u662f\u6267\u884c\u65f6\u7684\u65f6\u95f4\u3002", "\n(4)\u5b8f\u7684\u53c2\u6570\u662f\u4e0d\u5360\u5185\u5b58\u7a7a\u95f4\u7684\uff0c\u56e0\u4e3a\u53ea\u662f\u505a\u5b57\u7b26\u4e32\u7684\u66ff\u6362\uff0c\u800c\u51fd\u6570\u8c03\u7528\u65f6\u7684\u53c2\u6570\u4f20\u9012\u5219\u662f\u5177\u4f53\u53d8\u91cf\u4e4b\u95f4\u7684\u4fe1\u606f\u4f20\u9012\uff0c\u5f62\u53c2\u4f5c\u4e3a\u51fd\u6570\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u662f\u5360\u7528\u5185\u5b58\u7684\u3002", "\n(5)\u51fd\u6570\u7684\u8c03\u7528\u662f\u9700\u8981\u4ed8\u51fa\u4e00\u5b9a\u7684\u65f6\u7a7a\u5f00\u9500\u7684\uff0c\u56e0\u4e3a\u7cfb\u7edf\u5728\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u8981\u4fdd\u7559\u73b0\u573a\uff0c\u7136\u540e\u8f6c\u5165\u88ab\u8c03\u7528\u51fd\u6570\u53bb\u6267\u884c\uff0c\u8c03\u7528\u5b8c\uff0c\u518d\u8fd4\u56de\u4e3b\u8c03\u51fd\u6570\uff0c\u6b64\u65f6\u518d\u6062\u590d\u73b0\u573a\uff0c\u8fd9\u4e9b\u64cd\u4f5c\uff0c\u663e\u7136\u5728\u5b8f\u4e2d\u662f\u6ca1\u6709\u7684\u3002", "\n3.\t\u5b8f\u5b9a\u4e49\u662f\u4ec0\u4e48\u65f6\u671f\u5904\u7406\u7684\uff08\u9884\u5904\u7406\uff1f\u7f16\u8bd1\u671f\uff1f\uff09", "\n\u7b54\u6848\uff1a\u9884\u5904\u7406", "\n4.\t\u4e0d\u540c\u60c5\u51b5\u4e0b\u7c7b\u5bf9\u8c61\u7684\u5927\u5c0f\uff08\u6709\u6570\u636e\u6210\u5458\uff0c\u65e0\u6570\u636e\u6210\u5458\uff0c\u6709\u865a\u51fd\u6570\u7b49\uff09", "\n\u7b54\u6848\uff1a(1)\u65e0\u4efb\u4f55\u6570\u636e\u6210\u5458\u548c\u865a\u51fd\u6570\u7684\u7c7b\u5927\u5c0f\u4e3a1", "\n(2)\u6bcf\u4e2a\u865a\u51fd\u6570\u5927\u5c0f\u4e3a4", "\n(3)\u6210\u5458\u53d8\u91cf\u5927\u5c0f\u8981\u8003\u8651\u5185\u5b58\u5bf9\u9f50\uff0c\u901a\u5e38\u662f4\u5b57\u8282\u5bf9\u9f50", "\n5.\tSTL\u4e2dvector\u4f7f\u7528\u7684\u65f6\u5019\u8981\u6ce8\u610f\u4ec0\u4e48", "\n\u7b54\u6848\uff1a(1) \u5982\u679c\u5143\u7d20\u662f\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u5f53\u8be5vector\u8d85\u51fa\u5176\u4f5c\u7528\u57df\u6216\u8c03\u7528erase\u5220\u9664\u5143\u7d20\u65f6\uff0c\u90a3\u4e48\u5143\u7d20\u672c\u8eab\u5728\u8be5vector\u4e2d\u4f1a\u88ab\u5220\u9664\uff0c\u4f46\u5bf9\u8c61\u672c\u8eab\u5e76\u6ca1\u6709\u5f97\u5230\u9500\u6bc1\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u9500\u6bc1\u7684\u5de5\u4f5c\u8981\u7531\u7a0b\u5e8f\u5458\u81ea\u5df1\u6765\u505a\u3002", "\n(2) \u7528erase\u5220\u9664vector\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\u5bf9\u8c61\u65f6\uff0c\u5143\u7d20\u5bf9\u8c61\u7684\u6790\u6784\u51fd\u6570\u4f1a\u88ab\u591a\u6b21\u8c03\u7528\u3002", "\n6.\t\u5b57\u7b26\u8f6c\u6574\u578b\u6570\u7684\u51fd\u6570\u662f\u4ec0\u4e48\uff1f  \u662f\u600e\u6837\u5b9e\u73b0\u7684\uff1f", "\n\u7b54\u6848\uff1a", "\nstrtol\u3001strtoul\u3002", "\n#define TOLOWER(x) ((x) | 0\u00d720)", "\n#define isxdigit(c)    ((\u20190\u2032 \n             || (\u2018a\u2019 \n             || (\u2018A\u2019 \n", "#define isdigit(c)    (\u20190\u2032 \n", "unsigned long strtoul(const char *cp,char **endp,unsigned int base)", "\n{", "\n    unsigned long result = 0,value;   ", "    if (!base) {", "\n        base = 10;", "\n        if (*cp == \u20190\u2032) {", "\n            base = 8;", "\n            cp++;", "\n            if ((TOLOWER(*cp) == \u2018x\u2019) && isxdigit(cp[1])) {", "\n                cp++;", "\n                base = 16;", "\n            }", "\n        }", "\n    } else if (base == 16) {", "\n        if (cp[0] == \u20190\u2032 && TOLOWER(cp[1]) == \u2018x\u2019)", "\n            cp += 2;", "\n    }", "\n    while (isxdigit(*cp) &&", "\n           (value = isdigit(*cp) ? *cp-\u20190\u2032 : TOLOWER(*cp)-\u2019a'+10) \n        result = result*base + value;", "\n        cp++;", "\n    }", "\n    if (endp)", "\n        *endp = (char *)cp;", "\n    return result;", "\n}", "\nlong strtol(const char *cp,char **endp,unsigned int base)", "\n{", "\n    if(*cp==\u2019-')", "\n        return -strtoul(cp+1,endp,base);", "\n    return strtoul(cp,endp,base);", "\n}", "\n    INT32S  atoi(const     INT8S  *nptr)//", "\n{", "\n    return  strtol(nptr, (    INT8S  **)NULL, 10);", "\n}", "\n7.\t\u865a\u62df\u7c7b\u548c\u6700\u7ec8\u7c7b\u80fd\u5426\u6d3e\u751f\u51fa\u5bf9\u8c61", "\n\u7b54\u6848\uff1a\u865a\u62df\u7c7b\u53ef\u4ee5\u6d3e\u751f\u5bf9\u8c61", "\n8.\t\u4f60\u600e\u4e48\u7406\u89e3\u865a\u62df\u7c7b\uff1f\u865a\u62df\u7c7b\u53ef\u4ee5\u5b9e\u4f8b\u5316\u4e00\u4e2a\u5bf9\u8c61\u5417\uff1f\u4e3a\u4ec0\u4e48\uff1f\u5b83\u7684\u4f5c\u7528\u548c\u5176\u4ed6\u7c7b\u7684\u533a\u522b", "\n\u7b54\u6848\uff1a\u865a\u62df\u7c7b\u53ef\u4ee5\u6d3e\u751f\u5bf9\u8c61\uff0c\u7eaf\u865a\u7c7b\u4e0d\u53ef\u4ee5\u5b9e\u4f8b\u5316\u5bf9\u8c61\u3002\u56e0\u4e3a\u7eaf\u865a\u7c7b\u5b58\u5728\u672a\u5b9a\u4e49\u7684\u51fd\u6570\uff0c\u53ea\u662f\u4e2a\u6982\u5ff5\uff0c\u4e0d\u53ef\u771f\u5b9e\u5b58\u5728\u3002\u865a\u62df\u7c7b\u7528\u505a\u591a\u6001\uff0c\u7eaf\u865a\u7c7b\u505a\u63a5\u53e3\u3002", "\n9.\t\u5185\u8054\u51fd\u6570\u600e\u4e48\u5b9e\u73b0\u7684\uff0c\u4ec0\u4e48\u65f6\u671f\u5904\u7406\u7684\uff0c\u4f18\u7f3a\u70b9", "\n\u7b54\u6848\uff1a\u5728\u7a0b\u5e8f\u7f16\u8bd1\u65f6\uff0c\u7f16\u8bd1\u5668\u5c06\u7a0b\u5e8f\u4e2d\u51fa\u73b0\u7684\u5185\u8054\u51fd\u6570\u7684\u8c03\u7528\u8868\u8fbe\u5f0f\u7528\u5185\u8054\u51fd\u6570\u7684\u51fd\u6570\u4f53\u6765\u8fdb\u884c\u66ff\u6362\u3002", "\n\u4f18\u70b9\uff1a\u4e0d\u4f1a\u4ea7\u751f\u51fd\u6570\u8c03\u7528\u7684\u5f00\u9500", "\n\u7f3a\u70b9\uff1a\u589e\u52a0\u76ee\u6807\u7a0b\u5e8f\u7684\u4ee3\u7801\u91cf\uff0c\u5373\u589e\u52a0\u7a7a\u95f4\u5f00\u9500", "\n10.\t\u5185\u5b58\u5206\u914d\u7684\u51e0\u79cd\u65b9\u6cd5\u4e0e\u7279\u70b9", "\n\u7b54\u6848\uff1a\u6808\uff1a\u5c31\u662f\u90a3\u4e9b\u7531\u7f16\u8bd1\u5668\u5728\u9700\u8981\u7684\u65f6\u5019\u5206\u914d\uff0c\u5728\u4e0d\u9700\u8981\u7684\u65f6\u5019\u81ea\u52a8\u6e05\u9664\u7684\u53d8\u91cf\u7684\u5b58\u50a8\u533a\u3002\u91cc\u9762\u7684\u53d8\u91cf\u901a\u5e38\u662f\u5c40\u90e8\u53d8\u91cf\u3001\u51fd\u6570\u53c2\u6570\u7b49\u3002", "\n\u5806\uff1a\u5c31\u662f\u90a3\u4e9b\u7531new\u5206\u914d\u7684\u5185\u5b58\u5757\uff0c", "\n\u81ea\u7531\u5b58\u50a8\u533a\uff1a\u5c31\u662f\u90a3\u4e9b\u7531malloc\u7b49\u5206\u914d\u7684\u5185\u5b58\u5757", "\n\u5168\u5c40/\u9759\u6001\u5b58\u50a8\u533a\uff1a\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\u88ab\u5206\u914d\u5230\u540c\u4e00\u5757\u5185\u5b58\u4e2d", "\n\u5e38\u91cf\u5b58\u50a8\u533a\uff1a\u8fd9\u662f\u4e00\u5757\u6bd4\u8f83\u7279\u6b8a\u7684\u5b58\u50a8\u533a\uff0c\u4ed6\u4eec\u91cc\u9762\u5b58\u653e\u7684\u662f\u5e38\u91cf\uff0c\u4e0d\u5141\u8bb8\u4fee\u6539", "\n11.\t\u9759\u6001\u53d8\u91cf\u3001\u5168\u5c40\u53d8\u91cf\u3001\u5c40\u90e8\u53d8\u91cf\u5206\u522b\u5b58\u50a8\u4e8e\u4ec0\u4e48\u4f4d\u7f6e", "\n\u7b54\u6848\uff1a\u9759\u6001\u53d8\u91cf\uff1a\u5168\u5c40/\u9759\u6001\u5b58\u50a8\u533a", "\n\u5168\u5c40\u53d8\u91cf\uff1a\u5168\u5c40/\u9759\u6001\u5b58\u50a8\u533a", "\n\u5c40\u90e8\u53d8\u91cf\uff1a\u6808", "\n12.\tstatic\u5168\u5c40\u53d8\u91cf\u4e0e\u666e\u901a\u5168\u5c40\u53d8\u91cf\u7684\u533a\u522b\uff1fstatic\u5c40\u90e8\u53d8\u91cf\u4e0e\u666e\u901a\u53d8\u91cf\u7684\u533a\u522b\uff1fstatic\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u7684\u533a\u522b", "\n\u7b54\u6848\uff1a", "\nstatic\u5168\u5c40\u53d8\u91cf\u4e0e\u666e\u901a\u7684\u5168\u5c40\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u5168\u5c40\u53d8\u91cf\u53ea\u521d\u4f7f\u5316\u4e00\u6b21\uff0c\u5e76\u4e14\u5728\u5176\u4ed6\u6587\u4ef6\u5355\u5143\u4e2d\u4e0d\u53ef\u88ab\u5f15\u7528", "\nstatic\u5c40\u90e8\u53d8\u91cf\u548c\u666e\u901a\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u5c40\u90e8\u53d8\u91cf\u53ea\u88ab\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u503c\u5728\u7a0b\u5e8f\u751f\u5b58\u671f\u6709\u6548", "\nstatic\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u51fd\u6570\u5728\u5185\u5b58\u4e2d\u53ea\u6709\u4e00\u4efd\uff0c\u666e\u901a\u51fd\u6570\u5728\u6bcf\u4e2a\u88ab\u8c03\u7528\u4e2d\u7ef4\u6301\u4e00\u4efd\u62f7\u8d1d", "\n13.\t\u865a\u51fd\u6570\u7684\u673a\u5236\uff0c\u600e\u4e48\u7406\u89e3\u3002\u4e0e\u5176\u5b83\u51fd\u6570\u7684\u533a\u522b\uff0c\u5982\u91cd\u8f7d", "\n\u7b54\u6848\uff1a\u865a\u51fd\u6570\u5728c++\u4e2d\u7684\u5b9e\u73b0\u673a\u5236\u5c31\u662f\u7528\u865a\u8868\u548c\u865a\u6307\u9488", "\n\u666e\u901a\u51fd\u6570\u7f16\u8bd1\u65f6\u7ed1\u5b9a\uff0c\u865a\u51fd\u6570\u8fd0\u884c\u65f6\u7ed1\u5b9a", "\n14.\t\u5199\u4e00\u4e2a\u590d\u5236\u5b57\u7b26\u4e32\u7684\u65b9\u6cd5\uff0c\u8981\u6c42\u53ea\u80fd\u4f7f\u7528\u57fa\u672c\u7c7b\u578b\uff0c\u7528char\u6570\u7ec4\u8868\u793a\u5b57\u7b26\u4e32", "\n\u7b54\u6848\uff1a", "\nchar * strcpy(char * strDest,const char * strSrc)", "\n{", "\n\tif ((strDest==NULL)||(strsrc=\u201d/=NULL\u201d)) //[1]", "\n\t\tthrow \u201cInvalid argument(s)\u201d; //[2]", "\n\tchar * strDestCopy=strDest;  //[3]", "\n\twhile ((*strDest++=*strSrc++)!=\u2019\\0\u2032); //[4]", "\n\treturn strDestCopy;", "\n}", "\n    [1]", "\n    (A)\u4e0d\u68c0\u67e5\u6307\u9488\u7684\u6709\u6548\u6027\uff0c\u8bf4\u660e\u7b54\u9898\u8005\u4e0d\u6ce8\u91cd\u4ee3\u7801\u7684\u5065\u58ee\u6027\u3002", "\n    (B)\u68c0\u67e5\u6307\u9488\u7684\u6709\u6548\u6027\u65f6\u4f7f\u7528((!strDest)||(!strSrc))\u6216(!(strDest&&strSrc))\uff0c\u8bf4\u660e\u7b54\u9898\u8005\u5bf9C\u8bed\u8a00\u4e2d\u7c7b\u578b\u7684\u9690\u5f0f\u8f6c\u6362\u6ca1\u6709\u6df1\u523b\u8ba4\u8bc6\u3002\u5728\u672c\u4f8b\u4e2dchar *\u8f6c\u6362\u4e3abool\u5373\u662f\u7c7b\u578b\u9690\u5f0f\u8f6c\u6362\uff0c\u8fd9\u79cd\u529f\u80fd\u867d\u7136\u7075\u6d3b\uff0c\u4f46\u66f4\u591a\u7684\u662f\u5bfc\u81f4\u51fa\u9519\u6982\u7387\u589e\u5927\u548c\u7ef4\u62a4\u6210\u672c\u5347\u9ad8\u3002\u6240\u4ee5C++\u4e13\u95e8\u589e\u52a0\u4e86bool\u3001true\u3001false\u4e09\u4e2a\u5173\u952e\u5b57\u4ee5\u63d0\u4f9b\u66f4\u5b89\u5168\u7684\u6761\u4ef6\u8868\u8fbe\u5f0f\u3002", "\n    (C)\u68c0\u67e5\u6307\u9488\u7684\u6709\u6548\u6027\u65f6\u4f7f\u7528((strDest==0)||(strsrc=\u201d/=0\u2033))\uff0c\u8bf4\u660e\u7b54\u9898\u8005\u4e0d\u77e5\u9053\u4f7f\u7528\u5e38\u91cf\u7684\u597d\u5904\u3002\u76f4\u63a5\u4f7f\u7528\u5b57\u9762\u5e38\u91cf\uff08\u5982\u672c\u4f8b\u4e2d\u76840\uff09\u4f1a\u51cf\u5c11\u7a0b\u5e8f\u7684\u53ef\u7ef4\u62a4\u6027\u30020\u867d\u7136\u7b80\u5355\uff0c\u4f46\u7a0b\u5e8f\u4e2d\u53ef\u80fd\u51fa\u73b0\u5f88\u591a\u5904\u5bf9\u6307\u9488\u7684\u68c0\u67e5\uff0c\u4e07\u4e00\u51fa\u73b0\u7b14\u8bef\uff0c\u7f16\u8bd1\u5668\u4e0d\u80fd\u53d1\u73b0\uff0c\u751f\u6210\u7684\u7a0b\u5e8f\u5185\u542b\u903b\u8f91\u9519\u8bef\uff0c\u5f88\u96be\u6392\u9664\u3002\u800c\u4f7f\u7528NULL\u4ee3\u66ff0\uff0c\u5982\u679c\u51fa\u73b0\u62fc\u5199\u9519\u8bef\uff0c\u7f16\u8bd1\u5668\u5c31\u4f1a\u68c0\u67e5\u51fa\u6765\u3002", "\n    [2]", "\n    (A)return new string(\u201cInvalid argument(s)\u201d);\uff0c\u8bf4\u660e\u7b54\u9898\u8005\u6839\u672c\u4e0d\u77e5\u9053\u8fd4\u56de\u503c\u7684\u7528\u9014\uff0c\u5e76\u4e14\u4ed6\u5bf9\u5185\u5b58\u6cc4\u6f0f\u4e5f\u6ca1\u6709\u8b66\u60d5\u5fc3\u3002\u4ece\u51fd\u6570\u4e2d\u8fd4\u56de\u51fd\u6570\u4f53\u5185\u5206\u914d\u7684\u5185\u5b58\u662f\u5341\u5206\u5371\u9669\u7684\u505a\u6cd5\uff0c\u4ed6\u628a\u91ca\u653e\u5185\u5b58\u7684\u4e49\u52a1\u629b\u7ed9\u4e0d\u77e5\u60c5\u7684\u8c03\u7528\u8005\uff0c\u7edd\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u8c03\u7528\u8005\u4e0d\u4f1a\u91ca\u653e\u5185\u5b58\uff0c\u8fd9\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f\u3002", "\n    (B)return 0;\uff0c\u8bf4\u660e\u7b54\u9898\u8005\u6ca1\u6709\u638c\u63e1\u5f02\u5e38\u673a\u5236\u3002\u8c03\u7528\u8005\u6709\u53ef\u80fd\u5fd8\u8bb0\u68c0\u67e5\u8fd4\u56de\u503c\uff0c\u8c03\u7528\u8005\u8fd8\u53ef\u80fd\u65e0\u6cd5\u68c0\u67e5\u8fd4\u56de\u503c\uff08\u89c1\u540e\u9762\u7684\u94fe\u5f0f\u8868\u8fbe\u5f0f\uff09\u3002\u5984\u60f3\u8ba9\u8fd4\u56de\u503c\u80a9\u8d1f\u8fd4\u56de\u6b63\u786e\u503c\u548c\u5f02\u5e38\u503c\u7684\u53cc\u91cd\u529f\u80fd\uff0c\u5176\u7ed3\u679c\u5f80\u5f80\u662f\u4e24\u79cd\u529f\u80fd\u90fd\u5931\u6548\u3002\u5e94\u8be5\u4ee5\u629b\u51fa\u5f02\u5e38\u6765\u4ee3\u66ff\u8fd4\u56de\u503c\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u8f7b\u8c03\u7528\u8005\u7684\u8d1f\u62c5\u3001\u4f7f\u9519\u8bef\u4e0d\u4f1a\u88ab\u5ffd\u7565\u3001\u589e\u5f3a\u7a0b\u5e8f\u7684\u53ef\u7ef4\u62a4\u6027\u3002", "\n    [3]", "\n    (A)\u5fd8\u8bb0\u4fdd\u5b58\u539f\u59cb\u7684strDest\u503c\uff0c\u8bf4\u660e\u7b54\u9898\u8005\u903b\u8f91\u601d\u7ef4\u4e0d\u4e25\u5bc6\u3002", "\n    [4]", "\n    (A)\u5faa\u73af\u5199\u6210while (*strDest++=*strSrc++);\uff0c\u540c[1](B)\u3002", "\n    (B)\u5faa\u73af\u5199\u6210while (*strSrc!=\u2019\\0\u2032) *strDest++=*strSrc++;\uff0c\u8bf4\u660e\u7b54\u9898\u8005\u5bf9\u8fb9\u754c\u6761\u4ef6\u7684\u68c0\u67e5\u4e0d\u529b\u3002\u5faa\u73af\u4f53\u7ed3\u675f\u540e\uff0cstrDest\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u6ca1\u6709\u6b63\u786e\u5730\u52a0\u4e0a\u2019\\0\u2032\u3002", "\n    2.\u8fd4\u56destrDest\u7684\u539f\u59cb\u503c\u4f7f\u51fd\u6570\u80fd\u591f\u652f\u6301\u94fe\u5f0f\u8868\u8fbe\u5f0f\uff0c\u589e\u52a0\u4e86\u51fd\u6570\u7684\u201c\u9644\u52a0\u503c\u201d\u3002\u540c\u6837\u529f\u80fd\u7684\u51fd\u6570\uff0c\u5982\u679c\u80fd\u5408\u7406\u5730\u63d0\u9ad8\u7684\u53ef\u7528\u6027\uff0c\u81ea\u7136\u5c31\u66f4\u52a0\u7406\u60f3\u3002", "\n    \u94fe\u5f0f\u8868\u8fbe\u5f0f\u7684\u5f62\u5f0f\u5982\uff1a", "\n        int iLength=strlen(strcpy(strA,strB));", "\n    \u53c8\u5982\uff1a", "\n        char * strA=strcpy(new char[10],strB);", "\n    \u8fd4\u56destrSrc\u7684\u539f\u59cb\u503c\u662f\u9519\u8bef\u7684\u3002\u5176\u4e00\uff0c\u6e90\u5b57\u7b26\u4e32\u80af\u5b9a\u662f\u5df2\u77e5\u7684\uff0c\u8fd4\u56de\u5b83\u6ca1\u6709\u610f\u4e49\u3002\u5176\u4e8c\uff0c\u4e0d\u80fd\u652f\u6301\u5f62\u5982\u7b2c\u4e8c\u4f8b\u7684\u8868\u8fbe\u5f0f\u3002\u5176\u4e09\uff0c\u4e3a\u4e86\u4fdd\u62a4\u6e90\u5b57\u7b26\u4e32\uff0c\u5f62\u53c2\u7528const\u9650\u5b9astrSrc\u6240\u6307\u7684\u5185\u5bb9\uff0c\u628aconst char *\u4f5c\u4e3achar *\u8fd4\u56de\uff0c\u7c7b\u578b\u4e0d\u7b26\uff0c\u7f16\u8bd1\u62a5\u9519\u3002", "\n15.\t\u5c40\u90e8\u53d8\u91cf\u80fd\u5426\u548c\u5168\u5c40\u53d8\u91cf\u91cd\u540d", "\n\u7b54\u6848\uff1a\u80fd\uff0c\u5c40\u90e8\u4f1a\u5c4f\u853d\u5168\u5c40\u3002\u8981\u7528\u5168\u5c40\u53d8\u91cf\uff0c\u9700\u8981\u4f7f\u7528\u201d::\u201d", "\n\u5c40\u90e8\u53d8\u91cf\u53ef\u4ee5\u4e0e\u5168\u5c40\u53d8\u91cf\u540c\u540d\uff0c\u5728\u51fd\u6570\u5185\u5f15\u7528\u8fd9\u4e2a\u53d8\u91cf\u65f6\uff0c\u4f1a\u7528\u5230\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u800c\u4e0d\u4f1a\u7528\u5230\u5168\u5c40\u53d8\u91cf\u3002\u5bf9\u4e8e\u6709\u4e9b\u7f16\u8bd1\u5668\u800c\u8a00\uff0c\u5728\u540c\u4e00\u4e2a\u51fd\u6570\u5185\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u6bd4\u5982\u5728\u4e24\u4e2a\u5faa\u73af\u4f53\u5185\u90fd\u5b9a\u4e49\u4e00\u4e2a\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u800c\u90a3\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u5c31\u5728\u90a3\u4e2a\u5faa\u73af\u4f53\u5185\u3002", "\n16.\t\u5982\u4f55\u5f15\u7528\u4e00\u4e2a\u5df2\u7ecf\u5b9a\u4e49\u8fc7\u7684\u5168\u5c40\u53d8\u91cf", "\n\u7b54\u6848\uff1aextern", "\n\u53ef\u4ee5\u7528\u5f15\u7528\u5934\u6587\u4ef6\u7684\u65b9\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u7528extern\u5173\u952e\u5b57\uff0c\u5982\u679c\u7528\u5f15\u7528\u5934\u6587\u4ef6\u65b9\u5f0f\u6765\u5f15\u7528\u67d0\u4e2a\u5728\u5934\u6587\u4ef6\u4e2d\u58f0\u660e\u7684\u5168\u5c40\u53d8\u7406\uff0c\u5047\u5b9a\u4f60\u5c06\u90a3\u4e2a\u53d8\u5199\u9519\u4e86\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4\u4f1a\u62a5\u9519\uff0c\u5982\u679c\u4f60\u7528extern\u65b9\u5f0f\u5f15\u7528\u65f6\uff0c\u5047\u5b9a\u4f60\u72af\u4e86\u540c\u6837\u7684\u9519\u8bef\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4\u4e0d\u4f1a\u62a5\u9519\uff0c\u800c\u5728\u8fde\u63a5\u671f\u95f4\u62a5\u9519\u3002", "\n17.\t\u5168\u5c40\u53d8\u91cf\u53ef\u4e0d\u53ef\u4ee5\u5b9a\u4e49\u5728\u53ef\u88ab\u591a\u4e2a.C\u6587\u4ef6\u5305\u542b\u7684\u5934\u6587\u4ef6\u4e2d \u4e3a\u4ec0\u4e48", "\n\u7b54\u6848\uff1a\u53ef\u4ee5\uff0c\u5728\u4e0d\u540c\u7684C\u6587\u4ef6\u4e2d\u4ee5static\u5f62\u5f0f\u6765\u58f0\u660e\u540c\u540d\u5168\u5c40\u53d8\u91cf\u3002", "\n\u53ef\u4ee5\u5728\u4e0d\u540c\u7684C\u6587\u4ef6\u4e2d\u58f0\u660e\u540c\u540d\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u524d\u63d0\u662f\u5176\u4e2d\u53ea\u80fd\u6709\u4e00\u4e2aC\u6587\u4ef6\u4e2d\u5bf9\u6b64\u53d8\u91cf\u8d4b\u521d\u503c\uff0c\u6b64\u65f6\u8fde\u63a5\u4e0d\u4f1a\u51fa\u9519", "\n18.\t\u8bed\u53e5for( ;1 ;)\u6709\u4ec0\u4e48\u95ee\u9898 \u5b83\u662f\u4ec0\u4e48\u610f\u601d", "\n\u7b54\u6848\uff1a\u548cwhile(1)\u76f8\u540c\u3002", "\n19.\tdo\u2026\u2026while\u548cwhile\u2026\u2026do\u6709\u4ec0\u4e48\u533a\u522b", "\n\u7b54\u6848\uff1a\u524d\u4e00\u4e2a\u5faa\u73af\u4e00\u904d\u518d\u5224\u65ad\uff0c\u540e\u4e00\u4e2a\u5224\u65ad\u4ee5\u540e\u518d\u5faa\u73af", "\n20.\tstatic\u5168\u5c40\u53d8\u91cf\u4e0e\u666e\u901a\u7684\u5168\u5c40\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b static\u5c40\u90e8\u53d8\u91cf\u548c\u666e\u901a\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b static\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u6709\u4ec0\u4e48\u533a\u522b", "\n\u7b54\u6848\uff1a\u5168\u5c40\u53d8\u91cf(\u5916\u90e8\u53d8\u91cf)\u7684\u8bf4\u660e\u4e4b\u524d\u518d\u51a0\u4ee5static \u5c31\u6784\u6210\u4e86\u9759\u6001\u7684\u5168\u5c40\u53d8\u91cf\u3002\u5168\u5c40\u53d8\u91cf\u672c\u8eab\u5c31\u662f\u9759\u6001\u5b58\u50a8\u65b9\u5f0f\uff0c \u9759\u6001\u5168\u5c40\u53d8\u91cf\u5f53\u7136\u4e5f\u662f\u9759\u6001\u5b58\u50a8\u65b9\u5f0f\u3002 \u8fd9\u4e24\u8005\u5728\u5b58\u50a8\u65b9\u5f0f\u4e0a\u5e76\u65e0\u4e0d\u540c\u3002\u8fd9\u4e24\u8005\u7684\u533a\u522b\u867d\u5728\u4e8e\u975e\u9759\u6001\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u662f\u6574\u4e2a\u6e90\u7a0b\u5e8f\uff0c \u5f53\u4e00\u4e2a\u6e90\u7a0b\u5e8f\u7531\u591a\u4e2a\u6e90\u6587\u4ef6\u7ec4\u6210\u65f6\uff0c\u975e\u9759\u6001\u7684\u5168\u5c40\u53d8\u91cf\u5728\u5404\u4e2a\u6e90\u6587\u4ef6\u4e2d\u90fd\u662f\u6709\u6548\u7684\u3002 \u800c\u9759\u6001\u5168\u5c40\u53d8\u91cf\u5219\u9650\u5236\u4e86\u5176\u4f5c\u7528\u57df\uff0c \u5373\u53ea\u5728\u5b9a\u4e49\u8be5\u53d8\u91cf\u7684\u6e90\u6587\u4ef6\u5185\u6709\u6548\uff0c \u5728\u540c\u4e00\u6e90\u7a0b\u5e8f\u7684\u5176\u5b83\u6e90\u6587\u4ef6\u4e2d\u4e0d\u80fd IT\u4eba\u624d\u7f51(it.ad0.cn) \u4f7f\u7528\u5b83\u3002\u7531\u4e8e\u9759\u6001\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u5c40\u9650\u4e8e\u4e00\u4e2a\u6e90\u6587\u4ef6\u5185\uff0c\u53ea\u80fd\u4e3a\u8be5\u6e90\u6587\u4ef6\u5185\u7684\u51fd\u6570\u516c\u7528\uff0c \u56e0\u6b64\u53ef\u4ee5\u907f\u514d\u5728\u5176\u5b83\u6e90\u6587\u4ef6\u4e2d\u5f15\u8d77\u9519\u8bef\u3002", "\n\u4ece\u4ee5\u4e0a\u5206\u6790\u53ef\u4ee5\u770b\u51fa\uff0c \u628a\u5c40\u90e8\u53d8\u91cf\u6539\u53d8\u4e3a\u9759\u6001\u53d8\u91cf\u540e\u662f\u6539\u53d8\u4e86\u5b83\u7684\u5b58\u50a8\u65b9\u5f0f\u5373\u6539\u53d8\u4e86\u5b83\u7684\u751f\u5b58\u671f\u3002\u628a\u5168\u5c40\u53d8\u91cf\u6539\u53d8\u4e3a\u9759\u6001\u53d8\u91cf\u540e\u662f\u6539\u53d8\u4e86\u5b83\u7684\u4f5c\u7528\u57df\uff0c \u9650\u5236\u4e86\u5b83\u7684\u4f7f\u7528\u8303\u56f4\u3002", "\nstatic\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u4f5c\u7528\u57df\u4e0d\u540c\u3002\u4ec5\u5728\u672c\u6587\u4ef6\u3002\u53ea\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4e2d\u4f7f\u7528\u7684\u51fd\u6570\u5e94\u8be5\u8bf4\u660e\u4e3a\u5185\u90e8\u51fd\u6570(static)\uff0c\u5185\u90e8\u51fd\u6570\u5e94\u8be5\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4e2d\u8bf4\u660e\u548c\u5b9a\u4e49\u3002\u5bf9\u4e8e\u53ef\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4ee5\u5916\u4f7f\u7528\u7684\u51fd\u6570\uff0c\u5e94\u8be5\u5728\u4e00\u4e2a\u5934\u6587\u4ef6\u4e2d\u8bf4\u660e\uff0c\u8981\u4f7f\u7528\u8fd9\u4e9b\u51fd\u6570\u7684\u6e90\u6587\u4ef6\u8981\u5305\u542b\u8fd9\u4e2a\u5934\u6587\u4ef6", "\nstatic\u5168\u5c40\u53d8\u91cf\u4e0e\u666e\u901a\u7684\u5168\u5c40\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u5168\u5c40\u53d8\u91cf\u53ea\u521d\u4f7f\u5316\u4e00\u6b21\uff0c\u9632\u6b62\u5728\u5176\u4ed6\u6587\u4ef6\u5355\u5143\u4e2d\u88ab\u5f15\u7528;", "\nstatic\u5c40\u90e8\u53d8\u91cf\u548c\u666e\u901a\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u5c40\u90e8\u53d8\u91cf\u53ea\u88ab\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u4e0b\u4e00\u6b21\u4f9d\u636e\u4e0a\u4e00\u6b21\u7ed3\u679c\u503c;", "\nstatic\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u51fd\u6570\u5728\u5185\u5b58\u4e2d\u53ea\u6709\u4e00\u4efd\uff0c\u666e\u901a\u51fd\u6570\u5728\u6bcf\u4e2a\u88ab\u8c03\u7528\u4e2d\u7ef4\u6301\u4e00\u4efd\u62f7\u8d1d", "\n21.\t\u961f\u5217\u548c\u6808\u6709\u4ec0\u4e48\u533a\u522b", "\n\u7b54\u6848\uff1a\u961f\u5217\u5148\u8fdb\u5148\u51fa\uff0c\u6808\u540e\u8fdb\u5148\u51fa", "\n22.\t\u5934\u6587\u4ef6\u4e2d\u7684 ifndef/define/endif \u5e72\u4ec0\u4e48\u7528\uff1f\u9884\u5904\u7406", "\n\u7b54\u6848\uff1a\u9632\u6b62\u5934\u6587\u4ef6\u88ab\u91cd\u590d\u5f15\u7528", "\n23.\t\uff03i nclude \u548c \uff03i nclude \u201cfilename.h\u201d\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u7b54\u6848\uff1a\u524d\u8005\u7528\u6765\u5305\u542b\u5f00\u53d1\u73af\u5883\u63d0\u4f9b\u7684\u5e93\u5934\u6587\u4ef6\uff0c\u540e\u8005\u7528\u6765\u5305\u542b\u81ea\u5df1\u7f16\u5199\u7684\u5934\u6587\u4ef6\u3002", "\n24.\t\u5728C++ \u7a0b\u5e8f\u4e2d\u8c03\u7528\u88ab C \u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u7684\u51fd\u6570\uff0c\u4e3a\u4ec0\u4e48\u8981\u52a0 extern \u201cC\u201d\u58f0\u660e\uff1f", "\n\u7b54\u6848\uff1a\u51fd\u6570\u548c\u53d8\u91cf\u88abC++\u7f16\u8bd1\u540e\u5728\u7b26\u53f7\u5e93\u4e2d\u7684\u540d\u5b57\u4e0eC\u8bed\u8a00\u7684\u4e0d\u540c\uff0c\u88abextern \u201cC\u201d\u4fee\u9970\u7684\u53d8", "\n\u91cf\u548c\u51fd\u6570\u662f\u6309\u7167C\u8bed\u8a00\u65b9\u5f0f\u7f16\u8bd1\u548c\u8fde\u63a5\u7684\u3002\u7531\u4e8e\u7f16\u8bd1\u540e\u7684\u540d\u5b57\u4e0d\u540c\uff0cC++\u7a0b\u5e8f\u4e0d\u80fd\u76f4\u63a5\u8c03", "\n\u7528C \u51fd\u6570\u3002C++\u63d0\u4f9b\u4e86\u4e00\u4e2aC \u8fde\u63a5\u4ea4\u6362\u6307\u5b9a\u7b26\u53f7extern\u201cC\u201d\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002", "\n25.\tswitch()\u4e2d\u4e0d\u5141\u8bb8\u7684\u6570\u636e\u7c7b\u578b\u662f?", "\n\u7b54\u6848\uff1a\u5b9e\u578b", "\n26.\tC++\u4e2d\u4e3a\u4ec0\u4e48\u7528\u6a21\u677f\u7c7b\u3002", "\n\u7b54\u6848\uff1a(1)\u53ef\u7528\u6765\u521b\u5efa\u52a8\u6001\u589e\u957f\u548c\u51cf\u5c0f\u7684\u6570\u636e\u7ed3\u6784", "\n\uff082\uff09\u5b83\u662f\u7c7b\u578b\u65e0\u5173\u7684\uff0c\u56e0\u6b64\u5177\u6709\u5f88\u9ad8\u7684\u53ef\u590d\u7528\u6027\u3002", "\n\uff083\uff09\u5b83\u5728\u7f16\u8bd1\u65f6\u800c\u4e0d\u662f\u8fd0\u884c\u65f6\u68c0\u67e5\u6570\u636e\u7c7b\u578b\uff0c\u4fdd\u8bc1\u4e86\u7c7b\u578b\u5b89\u5168", "\n\uff084\uff09\u5b83\u662f\u5e73\u53f0\u65e0\u5173\u7684\uff0c\u53ef\u79fb\u690d\u6027", "\n\uff085\uff09\u53ef\u7528\u4e8e\u57fa\u672c\u6570\u636e\u7c7b\u578b", "\n27.\tC++\u4e2d\u4ec0\u4e48\u6570\u636e\u5206\u914d\u5728\u6808\u6216\u5806\u4e2d\uff0cNew\u5206\u914d\u6570\u636e\u662f\u5728\u8fd1\u5806\u8fd8\u662f\u8fdc\u5806\u4e2d\uff1f", "\n\u7b54\u6848\uff1a\u6808: \u5b58\u653e\u5c40\u90e8\u53d8\u91cf\uff0c\u51fd\u6570\u8c03\u7528\u53c2\u6570,\u51fd\u6570\u8fd4\u56de\u503c\uff0c\u51fd\u6570\u8fd4\u56de\u5730\u5740\u3002\u7531\u7cfb\u7edf\u7ba1\u7406", "\n\u5806: \u7a0b\u5e8f\u8fd0\u884c\u65f6\u52a8\u6001\u7533\u8bf7\uff0cnew \u548cmalloc\u7533\u8bf7\u7684\u5185\u5b58\u5c31\u5728\u5806\u4e0a", "\n28.\t\u4f7f\u7528\u7ebf\u7a0b\u662f\u5982\u4f55\u9632\u6b62\u51fa\u73b0\u5927\u7684\u6ce2\u5cf0\u3002", "\n\u7b54\u6848\uff1a\u610f\u601d\u662f\u5982\u4f55\u9632\u6b62\u540c\u65f6\u4ea7\u751f\u5927\u91cf\u7684\u7ebf\u7a0b\uff0c\u65b9\u6cd5\u662f\u4f7f\u7528\u7ebf\u7a0b\u6c60\uff0c\u7ebf\u7a0b\u6c60\u5177\u6709\u53ef\u4ee5\u540c\u65f6\u63d0", "\n\u9ad8\u8c03\u5ea6\u6548\u7387\u548c\u9650\u5236\u8d44\u6e90\u4f7f\u7528\u7684\u597d\u5904\uff0c\u7ebf\u7a0b\u6c60\u4e2d\u7684\u7ebf\u7a0b\u8fbe\u5230\u6700\u5927\u6570\u65f6\uff0c\u5176\u4ed6\u7ebf\u7a0b\u5c31\u4f1a\u6392\u961f", "\n\u7b49\u5019\u3002", "\n29.\t\u51fd\u6570\u6a21\u677f\u4e0e\u7c7b\u6a21\u677f\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u7b54\u6848\uff1a\u51fd\u6570\u6a21\u677f\u7684\u5b9e\u4f8b\u5316\u662f\u7531\u7f16\u8bd1\u7a0b\u5e8f\u5728\u5904\u7406\u51fd\u6570\u8c03\u7528\u65f6\u81ea\u52a8\u5b8c\u6210\u7684\uff0c\u800c\u7c7b\u6a21\u677f\u7684\u5b9e\u4f8b\u5316", "\n\u5fc5\u987b\u7531\u7a0b\u5e8f\u5458\u5728\u7a0b\u5e8f\u4e2d\u663e\u5f0f\u5730\u6307\u5b9a\u3002", "\n30.\t\u4e00\u822c\u6570\u636e\u5e93\u82e5\u51fa\u73b0\u65e5\u5fd7\u6ee1\u4e86\uff0c\u4f1a\u51fa\u73b0\u4ec0\u4e48\u60c5\u51b5\uff0c\u662f\u5426\u8fd8\u80fd\u4f7f\u7528\uff1f", "\n\u7b54\u6848\uff1a\u53ea\u80fd\u6267\u884c\u67e5\u8be2\u7b49\u8bfb\u64cd\u4f5c\uff0c\u4e0d\u80fd\u6267\u884c\u66f4\u6539\uff0c\u5907\u4efd\u7b49\u5199\u64cd\u4f5c\uff0c\u539f\u56e0\u662f\u4efb\u4f55\u5199\u64cd\u4f5c\u90fd\u8981\u8bb0", "\n\u5f55\u65e5\u5fd7\u3002\u4e5f\u5c31\u662f\u8bf4\u57fa\u672c\u4e0a\u5904\u4e8e\u4e0d\u80fd\u4f7f\u7528\u7684\u72b6\u6001\u3002", "\n31.\tSQL Server\u662f\u5426\u652f\u6301\u884c\u7ea7\u9501\uff0c\u6709\u4ec0\u4e48\u597d\u5904\uff1f", "\n\u7b54\u6848\uff1a\u652f\u6301\uff0c\u8bbe\u7acb\u5c01\u9501\u673a\u5236\u4e3b\u8981\u662f\u4e3a\u4e86\u5bf9\u5e76\u53d1\u64cd\u4f5c\u8fdb\u884c\u63a7\u5236\uff0c\u5bf9\u5e72\u6270\u8fdb\u884c\u5c01\u9501\uff0c\u4fdd\u8bc1\u6570\u636e", "\n\u7684\u4e00\u81f4\u6027\u548c\u51c6\u786e\u6027\uff0c\u884c\u7ea7\u5c01\u9501\u786e\u4fdd\u5728\u7528\u6237\u53d6\u5f97\u88ab\u66f4\u65b0\u7684\u884c\u5230\u8be5\u884c\u8fdb\u884c\u66f4\u65b0\u8fd9\u6bb5\u65f6\u95f4\u5185\u4e0d", "\n\u88ab\u5176\u5b83\u7528\u6237\u6240\u4fee\u6539\u3002\u56e0\u800c\u884c\u7ea7\u9501\u5373\u53ef\u4fdd\u8bc1\u6570\u636e\u7684\u4e00\u81f4\u6027\u53c8\u80fd\u63d0\u9ad8\u6570\u636e\u64cd\u4f5c\u7684\u8ff8\u53d1\u6027\u3002", "\n32.\t\u5982\u679c\u6570\u636e\u5e93\u6ee1\u4e86\u4f1a\u51fa\u73b0\u4ec0\u4e48\u60c5\u51b5\uff0c\u662f\u5426\u8fd8\u80fd\u4f7f\u7528\uff1f", "\n\u7b54\u6848\uff1a\u53ea\u80fd\u6267\u884c\u67e5\u8be2\u7b49\u8bfb\u64cd\u4f5c\uff0c\u4e0d\u80fd\u6267\u884c\u66f4\u6539\uff0c\u5907\u4efd\u7b49\u5199\u64cd\u4f5c\uff0c\u539f\u56e0\u662f\u4efb\u4f55\u5199\u64cd\u4f5c\u90fd\u8981\u8bb0", "\n\u5f55\u65e5\u5fd7\u3002\u4e5f\u5c31\u662f\u8bf4\u57fa\u672c\u4e0a\u5904\u4e8e\u4e0d\u80fd\u4f7f\u7528\u7684\u72b6\u6001\u3002", "\n33.\t\u5173\u4e8e\u5185\u5b58\u5bf9\u9f50\u7684\u95ee\u9898\u4ee5\u53casizof()\u7684\u8f93\u51fa", "\n\u7b54\u6848\uff1a\u7f16\u8bd1\u5668\u81ea\u52a8\u5bf9\u9f50\u7684\u539f\u56e0\uff1a\u4e3a\u4e86\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6027\u80fd\uff0c\u6570\u636e\u7ed3\u6784\uff08\u5c24\u5176\u662f\u6808\uff09\u5e94\u8be5\u5c3d\u53ef\u80fd", "\n\u5730\u5728\u81ea\u7136\u8fb9\u754c\u4e0a\u5bf9\u9f50\u3002\u539f\u56e0\u5728\u4e8e\uff0c\u4e3a\u4e86\u8bbf\u95ee\u672a\u5bf9\u9f50\u7684\u5185\u5b58\uff0c\u5904\u7406\u5668\u9700\u8981\u4f5c\u4e24\u6b21\u5185\u5b58\u8bbf\u95ee", "\n\uff1b\u7136\u800c\uff0c\u5bf9\u9f50\u7684\u5185\u5b58\u8bbf\u95ee\u4ec5\u9700\u8981\u4e00\u6b21\u8bbf\u95ee\u3002", "\n34.\tint i=10, j=10, k=3; k*=i+j; k\u6700\u540e\u7684\u503c\u662f\uff1f", "\n\u7b54\u6848\uff1a60\uff0c\u6b64\u9898\u8003\u5bdf\u4f18\u5148\u7ea7\uff0c\u5b9e\u9645\u5199\u6210\uff1a k*=(i+j);\uff0c\u8d4b\u503c\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u6700\u4f4e", "\n35.\t\u5bf9\u6570\u636e\u5e93\u7684\u4e00\u5f20\u8868\u8fdb\u884c\u64cd\u4f5c,\u540c\u65f6\u8981\u5bf9\u53e6\u4e00\u5f20\u8868\u8fdb\u884c\u64cd\u4f5c,\u5982\u4f55\u5b9e\u73b0?", "\n\u7b54\u6848\uff1a\u5c06\u64cd\u4f5c\u591a\u4e2a\u8868\u7684\u64cd\u4f5c\u653e\u5165\u5230\u4e8b\u52a1\u4e2d\u8fdb\u884c\u5904\u7406", "\n36.\tTCP/IP \u5efa\u7acb\u8fde\u63a5\u7684\u8fc7\u7a0b?(3-way shake)", "\n\u7b54\u6848\uff1a\u5728TCP/IP\u534f\u8bae\u4e2d\uff0cTCP\u534f\u8bae\u63d0\u4f9b\u53ef\u9760\u7684\u8fde\u63a5\u670d\u52a1\uff0c\u91c7\u7528\u4e09\u6b21\u63e1\u624b\u5efa\u7acb\u4e00\u4e2a\u8fde\u63a5\u3002", "\n\u7b2c\u4e00\u6b21\u63e1\u624b\uff1a\u5efa\u7acb\u8fde\u63a5\u65f6\uff0c\u5ba2\u6237\u7aef\u53d1\u9001syn\u5305(syn=j)\u5230\u670d\u52a1\u5668\uff0c\u5e76\u8fdb\u5165SYN_SEND\u72b6", "\n\u6001\uff0c\u7b49\u5f85\u670d\u52a1\u5668\u786e\u8ba4\uff1b", "\n\u7b2c\u4e8c\u6b21\u63e1\u624b\uff1a\u670d\u52a1\u5668\u6536\u5230syn\u5305\uff0c\u5fc5\u987b\u786e\u8ba4\u5ba2\u6237\u7684SYN\uff08ack=j+1\uff09\uff0c\u540c\u65f6\u81ea\u5df1\u4e5f\u53d1\u9001\u4e00\u4e2a", "\nSYN\u5305\uff08syn=k\uff09\uff0c\u5373SYN+ACK\u5305\uff0c\u6b64\u65f6\u670d\u52a1\u5668\u8fdb\u5165SYN_RECV\u72b6\u6001\uff1b", "\n\u7b2c\u4e09\u6b21\u63e1\u624b\uff1a\u5ba2\u6237\u7aef\u6536\u5230\u670d\u52a1\u5668\u7684SYN\uff0bACK\u5305\uff0c\u5411\u670d\u52a1\u5668\u53d1\u9001\u786e\u8ba4\u5305ACK(ack=k+1)", "\n\uff0c\u6b64\u5305\u53d1\u9001\u5b8c\u6bd5\uff0c\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u8fdb\u5165ESTABLISHED\u72b6\u6001\uff0c\u5b8c\u6210\u4e09\u6b21\u63e1\u624b\u3002", "\n37.\tICMP\u662f\u4ec0\u4e48\u534f\u8bae,\u5904\u4e8e\u54ea\u4e00\u5c42?", "\n\u7b54\u6848\uff1aInternet\u63a7\u5236\u62a5\u6587\u534f\u8bae\uff0c\u5904\u4e8e\u7f51\u7edc\u5c42\uff08IP\u5c42\uff09", "\n38.\t\u89e6\u53d1\u5668\u600e\u4e48\u5de5\u4f5c\u7684?", "\n\u7b54\u6848\uff1a\u89e6\u53d1\u5668\u4e3b\u8981\u662f\u901a\u8fc7\u4e8b\u4ef6\u8fdb\u884c\u89e6\u53d1\u800c\u88ab\u6267\u884c\u7684\uff0c\u5f53\u5bf9\u67d0\u4e00\u8868\u8fdb\u884c\u8bf8\u5982UPDATE\u3001 INSERT", "\n\u3001 DELETE \u8fd9\u4e9b\u64cd\u4f5c\u65f6\uff0c\u6570\u636e\u5e93\u5c31\u4f1a\u81ea\u52a8\u6267\u884c\u89e6\u53d1\u5668\u6240\u5b9a\u4e49\u7684SQL \u8bed\u53e5\uff0c\u4ece\u800c\u786e\u4fdd\u5bf9\u6570", "\n\u636e\u7684\u5904\u7406\u5fc5\u987b\u7b26\u5408\u7531\u8fd9\u4e9bSQL \u8bed\u53e5\u6240\u5b9a\u4e49\u7684\u89c4\u5219\u3002", "\n39.\twinsock\u5efa\u7acb\u8fde\u63a5\u7684\u4e3b\u8981\u5b9e\u73b0\u6b65\u9aa4?", "\n\u7b54\u6848\uff1a\u670d\u52a1\u5668\u7aef\uff1asocker()\u5efa\u7acb\u5957\u63a5\u5b57\uff0c\u7ed1\u5b9a\uff08bind\uff09\u5e76\u76d1\u542c\uff08listen\uff09\uff0c\u7528accept\uff08\uff09", "\n\u7b49\u5f85\u5ba2\u6237\u7aef\u8fde\u63a5\u3002", "\n\u5ba2\u6237\u7aef\uff1asocker()\u5efa\u7acb\u5957\u63a5\u5b57\uff0c\u8fde\u63a5\uff08connect\uff09\u670d\u52a1\u5668\uff0c\u8fde\u63a5\u4e0a\u540e\u4f7f\u7528send()\u548crecv\uff08", "\n\uff09\uff0c\u5728\u5957\u63a5\u5b57\u4e0a\u5199\u8bfb\u6570\u636e\uff0c\u76f4\u81f3\u6570\u636e\u4ea4\u6362\u5b8c\u6bd5\uff0cclosesocket()\u5173\u95ed\u5957\u63a5\u5b57\u3002", "\n\u670d\u52a1\u5668\u7aef\uff1aaccept\uff08\uff09\u53d1\u73b0\u6709\u5ba2\u6237\u7aef\u8fde\u63a5\uff0c\u5efa\u7acb\u4e00\u4e2a\u65b0\u7684\u5957\u63a5\u5b57\uff0c\u81ea\u8eab\u91cd\u65b0\u5f00\u59cb\u7b49\u5f85\u8fde", "\n\u63a5\u3002\u8be5\u65b0\u4ea7\u751f\u7684\u5957\u63a5\u5b57\u4f7f\u7528send()\u548crecv\uff08\uff09\u5199\u8bfb\u6570\u636e\uff0c\u76f4\u81f3\u6570\u636e\u4ea4\u6362\u5b8c\u6bd5\uff0cclosesock", "\net()\u5173\u95ed\u5957\u63a5\u5b57\u3002", "\n40.\t\u52a8\u6001\u8fde\u63a5\u5e93\u7684\u4e24\u79cd\u65b9\u5f0f?", "\n\u7b54\u6848\uff1a\u8c03\u7528\u4e00\u4e2aDLL\u4e2d\u7684\u51fd\u6570\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a", "\n1\uff0e\u8f7d\u5165\u65f6\u52a8\u6001\u94fe\u63a5\uff08load-time dynamic linking\uff09\uff0c\u6a21\u5757\u975e\u5e38\u660e\u786e\u8c03\u7528\u67d0\u4e2a\u5bfc\u51fa\u51fd\u6570", "\n\uff0c\u4f7f\u5f97\u4ed6\u4eec\u5c31\u50cf\u672c\u5730\u51fd\u6570\u4e00\u6837\u3002\u8fd9\u9700\u8981\u94fe\u63a5\u65f6\u94fe\u63a5\u90a3\u4e9b\u51fd\u6570\u6240\u5728DLL\u7684\u5bfc\u5165\u5e93\uff0c\u5bfc\u5165\u5e93\u5411", "\n\u7cfb\u7edf\u63d0\u4f9b\u4e86\u8f7d\u5165DLL\u65f6\u6240\u9700\u7684\u4fe1\u606f\u53caDLL\u51fd\u6570\u5b9a\u4f4d\u3002", "\n2\uff0e\u8fd0\u884c\u65f6\u52a8\u6001\u94fe\u63a5\uff08run-time dynamic linking\uff09\uff0c\u8fd0\u884c\u65f6\u53ef\u4ee5\u901a\u8fc7LoadLibrary\u6216Loa", "\ndLibraryEx\u51fd\u6570\u8f7d\u5165DLL\u3002DLL\u8f7d\u5165\u540e\uff0c\u6a21\u5757\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528GetProcAddress\u83b7\u53d6DLL\u51fd\u6570\u7684", "\n\u51fa\u53e3\u5730\u5740\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7\u8fd4\u56de\u7684\u51fd\u6570\u6307\u9488\u8c03\u7528DLL\u51fd\u6570\u4e86\u3002\u5982\u6b64\u5373\u53ef\u907f\u514d\u5bfc\u5165\u5e93\u6587\u4ef6\u4e86", "\n\u3002", "\n41.\t\u4e00\u4e2a32\u4f4d\u7684\u673a\u5668,\u8be5\u673a\u5668\u7684\u6307\u9488\u662f\u591a\u5c11\u4f4d", "\n\u7b54\u6848\uff1a\u6307\u9488\u662f\u591a\u5c11\u4f4d\u53ea\u8981\u770b\u5730\u5740\u603b\u7ebf\u7684\u4f4d\u6570\u5c31\u884c\u4e86\u300280386\u4ee5\u540e\u7684\u673a\u5b50\u90fd\u662f32\u7684\u6570\u636e\u603b\u7ebf\u3002\u6240\u4ee5\u6307\u9488\u7684\u4f4d\u6570\u5c31\u662f4\u4e2a\u5b57\u8282\u4e86\u3002", "\n42.\t\u5173\u952e\u5b57volatile\u6709\u4ec0\u4e48\u542b\u610f\uff1f\u5e76\u4e3e\u4f8b\uff1f", "\n\u7b54\u6848\uff1a\u63d0\u793a\u7f16\u8bd1\u5668\u5bf9\u8c61\u7684\u503c\u53ef\u80fd\u5728\u7f16\u8bd1\u5668\u672a\u76d1\u6d4b\u5230\u7684\u60c5\u51b5\u4e0b\u6539\u53d8\u3002\u5982\u591a\u7ebf\u7a0b\u3001\u591aCPU\uff0c\u53d8\u91cf\u7684\u503c\u53ef\u80fd\u88ab\u5176\u5b83\u7ebf\u7a0b\u6216\u8fd0\u884c\u5728\u5176\u5b83CUP\u7684\u4ee3\u7801\u66f4\u6539\u3002", "\n43.\tc\u548cc++\u4e2d\u7684struct\u6709\u4ec0\u4e48\u4e0d\u540c\uff1f", "\n\u7b54\u6848\uff1ac\u548cc++\u4e2dstruct\u7684\u4e3b\u8981\u533a\u522b\u662fc\u4e2d\u7684struct\u4e0d\u53ef\u4ee5\u542b\u6709\u6210\u5458\u51fd\u6570\uff0c\u800cc++\u4e2d\u7684struct\u53ef\u4ee5\u3002c++\u4e2dstruct\u548cclass\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u9ed8\u8ba4\u7684\u5b58\u53d6\u6743\u9650\u4e0d\u540c\uff0cstruct\u9ed8\u8ba4\u4e3apublic\uff0c\u800cclass\u9ed8\u8ba4\u4e3aprivate", "\n44.\t\u5217\u4e3e\u51e0\u79cd\u8fdb\u7a0b\u7684\u540c\u6b65\u673a\u5236\uff0c\u5e76\u6bd4\u8f83\u5176\u4f18\u7f3a\u70b9\u3002", "\n\u7b54\u6848\uff1a\u539f\u5b50\u64cd\u4f5c", "\n\u4fe1\u53f7\u91cf\u673a\u5236", "\n\u81ea\u65cb\u9501", "\n\u7ba1\u7a0b\uff0c\u4f1a\u5408\uff0c\u5206\u5e03\u5f0f\u7cfb\u7edf", "\n45.\t\u8fdb\u7a0b\u4e4b\u95f4\u901a\u4fe1\u7684\u9014\u5f84", "\n\u7b54\u6848\uff1a\u5171\u4eab\u5b58\u50a8\u7cfb\u7edf", "\n\u6d88\u606f\u4f20\u9012\u7cfb\u7edf", "\n\u547d\u540d\u7ba1\u9053", "\n46.\t\u8fdb\u7a0b\u6b7b\u9501\u7684\u539f\u56e0", "\n\u7b54\u6848\uff1a\u8d44\u6e90\u7ade\u4e89\u53ca\u8fdb\u7a0b\u63a8\u8fdb\u987a\u5e8f\u975e\u6cd5", "\n47.\t\u6b7b\u9501\u76844\u4e2a\u5fc5\u8981\u6761\u4ef6", "\n\u7b54\u6848\uff1a\u4e92\u65a5\u3001\u8bf7\u6c42\u4fdd\u6301\u3001\u4e0d\u53ef\u5265\u593a\u3001\u73af\u8def", "\n48.\t\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u8fdb\u7a0b\u8c03\u5ea6\u7b56\u7565\u6709\u54ea\u51e0\u79cd\uff1f", "\n\u7b54\u6848\uff1aFCFS(\u5148\u6765\u5148\u670d\u52a1)\uff0c\u4f18\u5148\u7ea7\uff0c\u65f6\u95f4\u7247\u8f6e\u8f6c\uff0c\u591a\u7ea7\u53cd\u9988", "\n49.\t\u7c7b\u7684\u9759\u6001\u6210\u5458\u548c\u975e\u9759\u6001\u6210\u5458\u6709\u4f55\u533a\u522b\uff1f", "\n\u7b54\u6848\uff1a\u7c7b\u7684\u9759\u6001\u6210\u5458\u6bcf\u4e2a\u7c7b\u53ea\u6709\u4e00\u4e2a\uff0c\u975e\u9759\u6001\u6210\u5458\u6bcf\u4e2a\u5bf9\u8c61\u4e00\u4e2a", "\n50.\t\u7eaf\u865a\u51fd\u6570\u5982\u4f55\u5b9a\u4e49\uff1f\u4f7f\u7528\u65f6\u5e94\u6ce8\u610f\u4ec0\u4e48\uff1f", "\n\u7b54\u6848\uff1avirtual void f()=0;", "\n\u662f\u63a5\u53e3\uff0c\u5b50\u7c7b\u5fc5\u987b\u8981\u5b9e\u73b0", "\n51.\t\u6570\u7ec4\u548c\u94fe\u8868\u7684\u533a\u522b", "\n\u7b54\u6848\uff1a\u6570\u7ec4\uff1a\u6570\u636e\u987a\u5e8f\u5b58\u50a8\uff0c\u56fa\u5b9a\u5927\u5c0f", "\n\u94fe\u8868\uff1a\u6570\u636e\u53ef\u4ee5\u968f\u673a\u5b58\u50a8\uff0c\u5927\u5c0f\u53ef\u52a8\u6001\u6539\u53d8", "\n52.\t\u7ebf\u7a0b\u4e0e\u8fdb\u7a0b\u7684\u533a\u522b\u548c\u8054\u7cfb? \u7ebf\u7a0b\u662f\u5426\u5177\u6709\u76f8\u540c\u7684\u5806\u6808? dll\u662f\u5426\u6709\u72ec\u7acb\u7684\u5806\u6808?", "\n\u7b54\u6848\uff1a\u8fdb\u7a0b\u662f\u6b7b\u7684\uff0c\u53ea\u662f\u4e00\u4e9b\u8d44\u6e90\u7684\u96c6\u5408\uff0c\u771f\u6b63\u7684\u7a0b\u5e8f\u6267\u884c\u90fd\u662f\u7ebf\u7a0b\u6765\u5b8c\u6210\u7684\uff0c\u7a0b\u5e8f\u542f\u52a8\u7684\u65f6\u5019\u64cd\u4f5c\u7cfb\u7edf\u5c31\u5e2e\u4f60\u521b\u5efa\u4e86\u4e00\u4e2a\u4e3b\u7ebf\u7a0b\u3002", "\n\u6bcf\u4e2a\u7ebf\u7a0b\u6709\u81ea\u5df1\u7684\u5806\u6808\u3002", "\nDLL\u4e2d\u6709\u6ca1\u6709\u72ec\u7acb\u7684\u5806\u6808\uff0c\u8fd9\u4e2a\u95ee\u9898\u4e0d\u597d\u56de\u7b54\uff0c\u6216\u8005\u8bf4\u8fd9\u4e2a\u95ee\u9898\u672c\u8eab\u662f\u5426\u6709\u95ee\u9898\u3002\u56e0\u4e3aDLL\u4e2d\u7684\u4ee3\u7801\u662f\u88ab\u67d0\u4e9b\u7ebf\u7a0b\u6240\u6267\u884c\uff0c\u53ea\u6709\u7ebf\u7a0b\u62e5\u6709\u5806\u6808\uff0c\u5982\u679cDLL\u4e2d\u7684\u4ee3\u7801\u662fEXE\u4e2d\u7684\u7ebf\u7a0b\u6240\u8c03\u7528\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u662f\u4e0d\u662f\u8bf4\u8fd9\u4e2aDLL\u6ca1\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u5806\u6808\uff1f\u5982\u679cDLL\u4e2d\u7684\u4ee3\u7801\u662f\u7531DLL\u81ea\u5df1\u521b\u5efa\u7684\u7ebf\u7a0b\u6240\u6267\u884c\uff0c\u90a3\u4e48\u662f\u4e0d\u662f\u8bf4DLL\u6709\u72ec\u7acb\u7684\u5806\u6808\uff1f", "\n\u4ee5\u4e0a\u8bb2\u7684\u662f\u5806\u6808\uff0c\u5982\u679c\u5bf9\u4e8e\u5806\u6765\u8bf4\uff0c\u6bcf\u4e2aDLL\u6709\u81ea\u5df1\u7684\u5806\uff0c\u6240\u4ee5\u5982\u679c\u662f\u4eceDLL\u4e2d\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\uff0c\u6700\u597d\u662f\u4eceDLL\u4e2d\u5220\u9664\uff0c\u5982\u679c\u4f60\u4eceDLL\u4e2d\u5206\u914d\u5185\u5b58\uff0c\u7136\u540e\u5728EXE\u4e2d\uff0c\u6216\u8005\u53e6\u5916\u4e00\u4e2aDLL\u4e2d\u5220\u9664\uff0c\u5f88\u6709\u53ef\u80fd\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83"], "title": "C++\u95ee\u9898"},
{"contents": [], "title": "CObject\u7c7b\u4e2d\u7684\u6790\u6784\u51fd\u6570\u4e3a\u4ec0\u4e48\u662f\u865a\u51fd\u6570"},
{"contents": ["9.\u53d8\u91cf\u7684\u58f0\u660e\u548c\u5b9a\u4e49\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n10.\u8bf7\u5199\u51fa\u4e0b\u9762\u4ee3\u7801\u5728 32 \u4f4d\u5e73\u53f0\u4e0a\u7684\u8fd0\u884c\u7ed3\u679c\uff0c\u5e76\u8bf4\u660e sizeof \u7684\u6027\u8d28\uff1a", "\n#include <stdio.h>", "\n#include <stdlib.h>", "int main(void)", "\n{", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 char a[30];", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 char *b = (char *)malloc(20 * sizeof(char));", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c%d\\n\u201d, sizeof(a));", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c%d\\n\u201d, sizeof(b));", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c%d\\n\u201d, sizeof(a[3]));", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c%d\\n\u201d, sizeof(b+3));", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c%d\\n\u201d, sizeof(*(b+4)));", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return 0 ;", "\n}", "12.\u8bf7\u5b8c\u6210\u4ee5\u4e0b\u9898\u76ee\u3002\u6ce8\u610f\uff0c\u8bf7\u52ff\u76f4\u63a5\u8c03\u7528 ANSI C \u51fd\u6570\u5e93\u4e2d\u7684\u51fd\u6570\u5b9e\u73b0\u3002", "\n\u00a0a)\u8bf7\u7f16\u5199\u4e00\u4e2a C \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u7ed9\u51fa\u4e00\u4e2a\u5b57\u8282\u4e2d\u88ab\u7f6e 1 \u7684\u4f4d\u7684\u4e2a\u6570\uff0c\u5e76\u8bf7\u7ed9\u51fa\u8be5\u9898\u7684\u81f3\u5c11\u4e00\u4e2a\u4e0d\u540c\u89e3\u6cd5\u3002", "\n\u7b2c\u4e00\u79cdunsigned\u00a0\u00a0 int\u00a0\u00a0 TestAsOne0(char\u00a0\u00a0 log)\u00a0\u00a0", "\n\u00a0 {\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int\u00a0\u00a0 i;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 unsigned\u00a0\u00a0 int\u00a0\u00a0 num=0,\u00a0\u00a0 val;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(i=0;\u00a0\u00a0 i<8;\u00a0\u00a0 i++)\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 val\u00a0\u00a0 =\u00a0\u00a0 log\u00a0\u00a0 >>\u00a0\u00a0 i;\u00a0\u00a0\u00a0\u00a0 //\u79fb\u4f4d", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 val\u00a0\u00a0 &=\u00a0\u00a0 0\u00d701;\u00a0\u00a0\u00a0\u00a0 //\u4e0e1\u76f8\u4e0e", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(val)\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 num++;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return\u00a0\u00a0 num;\u00a0\u00a0", "\n\u00a0 }\u00a0", "\n\u7b2c\u4e8c\u79cdunsigned\u00a0\u00a0 int\u00a0\u00a0 TestAsOne1(char\u00a0\u00a0 log)\u00a0\u00a0", "\n\u00a0 {\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int\u00a0\u00a0 i;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 unsigned\u00a0\u00a0 int\u00a0\u00a0 num=0,\u00a0\u00a0 val;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(i=0;\u00a0\u00a0 i<8;\u00a0\u00a0 i++)\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 val\u00a0\u00a0 =\u00a0\u00a0 (~log)\u00a0\u00a0 >>\u00a0\u00a0 i;\u00a0\u00a0 //\u53cd\u7801\uff1f", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 val\u00a0\u00a0 &=\u00a0\u00a0 0\u00d700;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 //\u4e0e0\u76f8\u4e0e", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(!val)\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 num++;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return\u00a0\u00a0 num;\u00a0\u00a0", "\n\u00a0 }\u00a0", "\n\u00a0\u00a0 b)\u8bf7\u7f16\u5199\u4e00\u4e2a C \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5c06\u7ed9\u5b9a\u7684\u4e00\u4e2a\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u6574\u6570\u3002", "\nint Invert(char *str)", "\n{", "\nint num=0;", "\nwhile(*str!=\u2019\\0\u2032)", "\n{", "\nint digital=*str-48;", "\nnum=num*10+digital;", "\nstr=str+1;", "\n}", "\nreturn num;", "\n}", "\n\u00a0\u00a0 c)\u8bf7\u7f16\u5199\u4e00\u4e2a C \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5c06\u7ed9\u5b9a\u7684\u4e00\u4e2a\u6574\u6570\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\u3002", "\nvoid\u00a0\u00a0 IntToCharChange(int\u00a0\u00a0 num,\u00a0\u00a0 char*\u00a0\u00a0 pval)\u00a0\u00a0", "\n\u00a0 {\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 char\u00a0\u00a0 strval[100];\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int\u00a0\u00a0 i,\u00a0\u00a0 j;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int\u00a0\u00a0 val0\u00a0\u00a0 =\u00a0\u00a0 0;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int\u00a0\u00a0 val1\u00a0\u00a0 =\u00a0\u00a0 0;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 val0\u00a0\u00a0 =\u00a0\u00a0 num;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(i=0;\u00a0\u00a0 i<100;\u00a0\u00a0 i++)\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 val1\u00a0\u00a0 =\u00a0\u00a0 val0\u00a0\u00a0 %\u00a0\u00a0 10;\u00a0\u00a0 //\u53d6\u4f59", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 val0\u00a0\u00a0 =\u00a0\u00a0 val0\u00a0\u00a0 /\u00a0\u00a0 10;\u00a0\u00a0 //\u53d6\u6574", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 strval[i]\u00a0\u00a0 =\u00a0\u00a0 val1\u00a0\u00a0 +\u00a0\u00a0 48;\u00a0 //\u6570\u5b57\u2014\u5b57\u7b26", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(val0\u00a0\u00a0 <\u00a0\u00a0 10)\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 i++;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 strval[i]\u00a0\u00a0 =\u00a0\u00a0 val0\u00a0\u00a0 +\u00a0\u00a0 48;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 break;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(j=0;\u00a0\u00a0 j<=i;\u00a0\u00a0 j++)\u00a0\u00a0\u00a0\u00a0 //\u5012\u7f6e", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 pval[j]\u00a0\u00a0 =\u00a0\u00a0 strval[i-j];\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 pval[j]\u00a0\u00a0 =\u00a0\u00a0 \u2018\\0\u2032;\u00a0\u00a0", "\n\u00a0 }", "\n\u00a0\u00a0 d)\u8bf7\u7f16\u5199\u4e00\u4e2a C \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u9006\u5e8f\u3002", "\nvoid\u00a0\u00a0 AntitoneValue(char*\u00a0\u00a0 father,\u00a0\u00a0 char*\u00a0\u00a0 child)\u00a0\u00a0", "\n\u00a0 {\u00a0\u00a0", "\n\u00a0 int\u00a0\u00a0 i;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 char\u00a0\u00a0 source[100];\u00a0\u00a0", "\n\u00a0 int\u00a0\u00a0 j\u00a0\u00a0 =\u00a0\u00a0 0;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0", "\n\u00a0 while(father[j])\u00a0\u00a0\u00a0\u00a0 //\u653e\u5165source\uff0c[j]\u4e3a\u957f\u5ea6", "\n\u00a0 {\u00a0\u00a0", "\n\u00a0 source[j]\u00a0\u00a0 =\u00a0\u00a0 father[j];\u00a0\u00a0", "\n\u00a0 j++;\u00a0\u00a0", "\n\u00a0 if(j\u00a0\u00a0 >\u00a0\u00a0 99)\u00a0\u00a0", "\n\u00a0 {\u00a0\u00a0", "\n\u00a0 return;\u00a0\u00a0", "\n\u00a0 }\u00a0\u00a0", "\n\u00a0 }\u00a0\u00a0", "\n\u00a0 source[j]\u00a0\u00a0 =\u00a0\u00a0 \u2018\\0\u2032;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0", "\n\u00a0 for(i=0;\u00a0\u00a0 i<j;\u00a0\u00a0 i++)\u00a0\u00a0", "\n\u00a0 {\u00a0\u00a0", "\n\u00a0 child[i]\u00a0\u00a0 =\u00a0\u00a0 source[j-i-1];\u00a0\u00a0\u00a0\u00a0 //\u53cd\u5e8f", "\n\u00a0 }\u00a0\u00a0", "\n\u00a0 child[i]\u00a0\u00a0 =\u00a0\u00a0 \u2018\\0\u2032;\u00a0\u00a0", "\n\u00a0 }\u00a0", "e)\u8bf7\u7f16\u5199\u4e00\u4e2a C \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5728\u7ed9\u5b9a\u7684\u5185\u5b58\u533a\u57df\u641c\u7d22\u7ed9\u5b9a\u7684\u5b57\u7b26\uff0c\u5e76\u8fd4\u56de\u8be5\u5b57\u7b26\u6240\u5728\u4f4d\u7f6e\u7d22\u5f15\u503c\u3002", "\nint search(char *cpSource, int n, char ch)\u00a0 //\u8d77\u59cb\u5730\u5740\uff0c\u641c\u7d22\u957f\u5ea6\uff0c\u76ee\u6807\u5b57\u7b26", "\n{", "\nint i;", "\nfor(i=0; i<n && *(cpSource+i) != ch; ++i);", "\nreturn i;", "\n}", "\n\u00a0\u00a0 f)\u8bf7\u7f16\u5199\u4e00\u4e2a C \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5728\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u627e\u5230\u53ef\u80fd\u7684\u6700\u957f\u7684\u5b50\u5b57\u7b26\u4e32\uff0c\u8be5\u5b57\u7b26\u4e32\u662f\u7531\u540c\u4e00\u5b57\u7b26\u7ec4\u6210\u7684\u3002", "\nint\u00a0 ChildString(char*p)\u00a0\u00a0\u00a0\u00a0 //\u81ea\u5df1\u5199", "\n\u00a0 {\u00a0\u00a0", "\n\u00a0 Char *q=p;", "\nint\u00a0 stringlen=0, i=0,j=1,len=0,maxlen=1;\u00a0\u00a0", "\nwhile(*q!=\u2019\\0\u2019)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 //\u4e0d\u80fd\u7528strlen,\u6c42\u5f97\u957f\u5ea6stringlen", "\n{", "\n\u00a0 Stringlen++;", "\nq++;", "\n}", "\n\u00a0 while( i< Stringlen )\u00a0\u00a0", "\n\u00a0 {\u00a0\u00a0", "\n\u00a0\u00a0 if(*(p+i)==*(p+j)&&j< Stringlen)\u00a0\u00a0", "\n\u00a0\u00a0 {\u00a0\u00a0", "\n\u00a0\u00a0\u00a0 len++;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 //\u7edf\u8ba1\u5b50\u4e32\u957f\u5ea6", "\n\u00a0\u00a0\u00a0 i++;", "\n\u00a0\u00a0\u00a0 j++;\u00a0\u00a0", "\n\u00a0\u00a0 }\u00a0\u00a0", "\n\u00a0\u00a0 else\u00a0\u00a0", "\n\u00a0\u00a0 {\u00a0\u00a0", "\n\u00a0\u00a0\u00a0 if(len>maxlen)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 //\u7edf\u8ba1\u6700\u5927\u5b50\u4e32\u957f\u5ea6", "\n\u00a0\u00a0\u00a0 {\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0 maxlen=len+1;\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0 len=0;", "\n\u00a0\u00a0\u00a0 }\u00a0 \u00a0", "\n\u00a0\u00a0\u00a0 else {", "\n\u00a0\u00a0\u00a0\u00a0 len=0;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 i++;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 j++;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0", "\n\u00a0\u00a0 }\u00a0\u00a0", "\n\u00a0 }\u00a0", "\n\u00a0 return\u00a0\u00a0 maxlen;\u00a0\u00a0", "\n}\u00a0\u00a0", "\n\u7ed9\u51fa\u6f14\u793a\u4e0a\u8ff0\u51fd\u6570\u529f\u80fd\u7684\u4e00\u4e2a\u7b80\u5355\u7a0b\u5e8f\uff0c\u5e76\u8bf7\u7f16\u5199\u5bf9\u5e94\u7684 Makefile \u6587\u4ef6", "13.\u6211\u4eec\u9700\u8981\u7f16\u5199\u4e00\u4e2a\u56fe\u5f62\u76f8\u5173\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u9700\u8981\u5904\u7406\u5927\u91cf\u56fe\u5f62(Shape)\u4fe1\u606f\uff0c\u56fe\u5f62\u6709\u77e9\u5f62(Rectangle)\uff0c\u6b63\u65b9\u5f62(Square)\uff0c\u5706\u5f62 (Circle)\u7b49\u79cd\u7c7b\uff0c\u5e94\u7528\u9700\u8981\u8ba1\u7b97\u8fd9\u4e9b\u56fe\u5f62\u7684\u9762\u79ef\uff0c\u5e76\u4e14\u53ef\u80fd\u9700\u8981\u5728\u67d0\u4e2a\u8bbe\u5907\u4e0a\u8fdb\u884c\u663e\u793a(\u4f7f\u7528\u5728\u6807\u51c6\u8f93\u51fa\u4e0a\u6253\u5370\u4fe1\u606f\u7684\u65b9\u5f0f\u505a\u4e3a\u793a\u610f)\u3002", "\n\u00a0\u00a0\u00a0 a)\u8bf7\u7528\u9762\u5411\u5bf9\u8c61\u7684\u65b9\u6cd5\u5bf9\u4ee5\u4e0a\u5e94\u7528\u8fdb\u884c\u8bbe\u8ba1\uff0c\u7f16\u5199\u53ef\u80fd\u9700\u8981\u7684\u7c7b", "\n\u00a0\u00a0\u00a0 b)\u8bf7\u7ed9\u51fa\u5b9e\u73b0\u4ee5\u4e0a\u5e94\u7528\u529f\u80fd\u7684\u793a\u4f8b\u6027\u4ee3\u7801\uff0c\u4ece\u67d0\u5904\u83b7\u53d6\u56fe\u5f62\u4fe1\u606f\uff0c", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 \u5e76\u4e14\u8fdb\u884c\u8ba1\u7b97\u548c\u7ed8\u5236", "\n\u00a0\u00a0\u00a0 c)\u5982\u679c\u4f60\u7684Square\u7ee7\u627f\u81eaRectangle\uff0c\u8bf7\u7ed9\u51fa\u7406\u7531\uff0c\u5982\u679c\u4e0d\u662f\uff0c", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 \u8bf7\u7ed9\u51fa\u7406\u7531\uff0c\u5e76\u4e14\u8bf7\u6bd4\u8f83\u4e24\u79cd\u65b9\u5f0f\u7684\u4f18\u52a3", "\n\u00a0\u00a0\u00a0 d)\u8bf7\u95ee\u4f60\u6240\u7f16\u5199\u7684\u7c7b\uff0c\u5728\u5982\u4e0b\u4ee3\u7801\u4e2d\u4f1a\u6709\u4f55\u8868\u73b0\uff0c\u8bf7\u89e3\u91ca", "\n\u00a0\u00a0\u00a0 void test_rectangle_area(Rectangle& r)", "\n\u00a0\u00a0\u00a0 {", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 r.set_width(10);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 r.set_height(15);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 assert(r.area() == 150);", "\n}", "14.\u5047\u8bbe\u73b0\u6709\u4e00\u4e2a\u5355\u5411\u7684\u94fe\u8868\uff0c\u4f46\u662f\u53ea\u77e5\u9053\u53ea\u6709\u4e00\u4e2a\u6307\u5411\u8be5\u8282\u70b9\u7684\u6307\u9488p\uff0c\u5e76\u4e14\u5047\u8bbe\u8fd9\u4e2a\u8282", "\n\u70b9\u4e0d\u662f\u5c3e\u8282\u70b9\uff0c\u8bd5\u7f16\u7a0b\u5b9e\u73b0\u5220\u9664\u6b64\u8282\u70b9", "\n\u53c2\u8003\uff1a\u5c06\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u5185\u5bb9\u590d\u5236\u5230\u672c\u8282\u70b9\u4e0a\uff0c\u7136\u540e\u5220\u9664\u4e0b\u4e00\u4e2a\u8282\u70b9\uff1b", "15.\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u628a\u4e00\u4e2a100\u4ee5\u5185\u7684\u81ea\u7136\u6570\u5206\u89e3\u56e0\u6570\u3002\uff08\u81ea\u7136\u6570\u5206\u89e3\u56e0\u6570\u5c31\u662f\u5c06\u4e00\u4e2a\u81ea\u7136\u6570", "\n\u5206\u89e3\u4e3a\u51e0\u4e2a\u7d20\u6570\u7684\u4e58\u79ef\uff0c\u63d0\u793a,\u7531\u4e8e\u8be5\u6570\u4e0d\u662f\u5f88\u5927,\u6240\u4ee5\u53ef\u4ee5\u5c06\u8d28\u6570\u4fdd\u5b58\u5728\u6570\u7ec4\u4e2d,\u4ee5\u52a0\u5feb\u8ba1", "\n\u7b97\u901f\u5ea6)"], "title": "C++\u7b14\u8bd5\u9898\u8001\u9898\u91cd\u53d1\uff082\uff09"},
{"contents": ["#include \u201cstdafx.h\u201d", "#define N 4", "int\u00a0 Cost[N][N] = { {2, 12, 5, 32},\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // \u884c\u53f7\uff1a\u4efb\u52a1\u5e8f\u53f7\uff0c\u5217\u53f7\uff1a\u5de5\u4eba\u5e8f\u53f7", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {8, 15, 7, 11},\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // \u6bcf\u884c\u5143\u7d20\u503c\u8868\u793a\u8fd9\u4e2a\u4efb\u52a1\u7531\u4e0d\u540c\u5de5\u4eba\u5b8c\u6210\u6240\u9700\u8981\u7684\u65f6\u95f4", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {24, 18, 9, 6},", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {21, 1, 8, 28}};", "int MinCost=1000;", "int Task[N], TempTask[N], Worker[N];", "void Assign(int k, int cost) {", "\u00a0\u00a0\u00a0\u00a0 if(k == N) {", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 MinCost = cost;\u00a0\u00a0\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(int i=0; i<N; i++)", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 TempTask[i] = Task[i];", "\u00a0\u00a0\u00a0\u00a0 } else {", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(int i=0; i<N; i++) {\u00a0\u00a0\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(Worker[i]==0 && cost+Cost[k][i] < MinCost) {\u00a0\u00a0\u00a0 // \u4e3a\u63d0\u9ad8\u6548\u7387\u800c\u8fdb\u884c\u526a\u679d", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Worker[i] = 1;\u00a0\u00a0\u00a0\u00a0 Task[k] = i;", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Assign(k+1, cost+Cost[k][i]);", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Worker[i] = 0; Task[k] = 0;", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\u00a0\u00a0\u00a0\u00a0 }", "}", "int main(int argc, char* argv[]) {", "\u00a0\u00a0\u00a0\u00a0 Assign(0, 0);", "\u00a0\u00a0\u00a0\u00a0 printf(\u201c\u6700\u4f73\u65b9\u6848\u603b\u8d39\u7528=%d\\n\u201d, MinCost);", "\u00a0\u00a0\u00a0\u00a0 for(int i=0; i<N; i++)\u00a0\u00a0\u00a0\u00a0\u00a0 /* \u8f93\u51fa\u6700\u4f73\u65b9\u6848 */", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c\\t\u4efb\u52a1%d\u7531\u5de5\u4eba%d\u6765\u505a\uff1a%d\\n\u201d, i, TempTask[i], Cost[i][TempTask[i]]);", "}"], "title": "2005\u5e745\u670829\u65e5\u5168\u56fd\u8ba1\u7b97\u673a\u8f6f\u4ef6\u8d44\u683c\u6c34\u5e73\u8003\u8bd5\u2014\u2014\u8f6f\u4ef6\u8bbe\u8ba1\u5e08\u7684\u7b97\u6cd5\u9898"},
{"contents": ["void convert(int *result, int n) {", "\n\u00a0if(n>=10)", "\n\u00a0\u00a0convert(result+1, n/10);", "\n\u00a0*result = n%10;\u00a0", "\n}", "\nint main(int argc, char* argv[]) {", "\n\u00a0int n = 123456789, result[20]={};", "\n\u00a0convert(result, n);", "\n\u00a0printf(\u201c%d:\u201d, n);", "\n\u00a0for(int i=0; i<9; i++)", "\n\u00a0\u00a0printf(\u201c%d\u201d, result[i]);", "\n}"], "title": "\u5c06\u4e00\u6574\u6570\u9006\u5e8f\u540e\u653e\u5165\u4e00\u6570\u7ec4\u4e2d\uff08\u8981\u6c42\u9012\u5f52\u5b9e\u73b0\uff09"},
{"contents": ["\u00a0", "(1)", "\n\u6709\u80fd\u5b58\u653e1001\u4e2a\u5143\u7d20\u7684C\u6570\u7ec4\uff0c\u91cc\u9762\u5b58\u653e\u4e861\uff0d1000\u8303\u56f4\u5185\u7684\u6570\u5b57\uff0c\u5176\u4e2d\u53ea\u6709\u4e00\u4e2a\u6570\u5b57\u662f\u91cd\u590d\u7684\u3002\u67e5\u627e\u91cd\u590d\u7684\u90a3\u4e2a\u6570\u5b57\uff0c\u5e76\u5bf9\u8be5\u6570\u7ec4\u6392\u5e8f\uff0c\u8981\u6c42\u628a\u91cd\u590d\u7684\u6570\u5b57\u653e\u5230\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u3002", "\n\u89e3\u6cd51\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3an", "\n\u5148\u8bf4\u660e\uff0c\u6392\u5e8f\u7684\u662f\u767d\u75f4\u3002", "\n\u628a\u8fd9\u4e9b\u6570\u5b57\u52a0\u5230\u4e00\u8d77\uff0c\u7136\u540e\u53ef\u4ee5\u6c42\u51fa\u91cd\u590d\u7684\u662f\u54ea\u4e00\u4e2a\u3002\u5269\u4e0b\u7684\u5c31\u597d\u8bf4\u4e86\u3002", "\n\u53e6\u5916\uff0c\u6211\u8fd8\u6709\u6bd4\u8fd9\u4e2a\u89e3\u6cd5\u66f4\u5feb\u7684\u7b97\u6cd5\u3002", "\n\u572850mi\u6df1\u84dd\u7684\u7fa4\u7684\u804a\u5929\u8bb0\u5f55\u91cc\u3002", "(2)", "\n1+2+\u2026+10", "\n\u7528\u4e24\u79cd\u65b9\u5f0f\uff0c\u4fdd\u8bc1\u5176\u5728\u7f16\u8bd1\u671f\u8ba1\u7b97\u5b8c\u6bd5\u3002", "\n\u6700\u5bb9\u6613\u60f3\u5230\u7684\u662fMetaprogramming\uff0c\u4f46\u662f\u8fd8\u662f\u6709\u70b9\u96be\u5ea6\u7684\u3002", "\n\u6700\u4e0d\u597d\u60f3\u5230\u7684\u662fconst int s = 1+2+3+4+5+6+7+8+9+10\uff0c\u800c\u4e14\u8fd9\u91cc\u7684const\u4e5f\u672a\u5fc5\u662f\u9700\u8981\u7684\u3002", "\n\u8fd9\u4e2a\u5c31\u662f\u601d\u7ef4\u60ef\u5f0f\u3002", "(3)", "\nJDBC", "\nStatement.executeQuery(SQL); \u8fd4\u56de\u7684ResultSet\u662f\u5426\u9700\u8981\u5224\u65ad\u5176\u4e3anull\uff1f", "\n\u4e0d\u7528\uff0c\u770bEffective Java\u3002", "(4)", "\nCreateFile\u7684\u8fd4\u56de\u503c", "\n\u5982\u679c\u5931\u8d25\u4e86\uff0c\u8fd4\u56de\u4ec0\u4e48\uff1f\u5176\u5931\u8d25\u7684\u8fd4\u56de\u503c\u548c\u5176\u4ed6\u7684Win32\u5185\u6838\u5bf9\u8c61\u7684\u4e0d\u4e00\u6837\u3002", "(5)", "\n\u901a\u5e38\u73b0\u4ee3\u7684\u7f16\u8bd1\u5668\u4e0b", "\nchar* p = new char[N];", "\ndelete p;\u548cdelete[] p;", "\n\u6709\u4ec0\u4e48\u533a\u522b\u3002", "\nclass T;", "\nT* pT = new T[N];", "\ndelete[] pt;\u52a0\u4e0d\u52a0[]\u7684\u533a\u522b\u3002", "(6)", "\n\u8bb2\u8ff0MFC\u7684\u4f17\u591a\u6d88\u606f\u6620\u5c04\u51fd\u6570\uff0cMFC\u4e3a\u4ec0\u4e48\u4e0d\u7528\u865a\u51fd\u6570\uff1f\u53ef\u4e0d\u53ef\u4ee5\u7528\u865a\u51fd\u6570\uff1f", "\n\u8fd9\u4e2a\u95ee\u9898\u5728\u6df1\u5165\u6d45\u51faMFC\u91cc\u6709\uff0c\u901a\u5e38\u770b\u5b8cInside C++ Object Model\u5c31\u80fd\u7406\u89e3\u7684\u66f4\u597d\uff0c\u5982\u679c\u4f60\u770b\u8fc7lifeNet\u5bf9\u5b83\u5728\u9762\u5411\u5bf9\u8c61\u5c42\u6b21\u7684\u7406\u89e3\uff0c\u5c31\u66f4\u52a0\u6e05\u695a\u4e86\u3002", "\n(7)", "\n#define for if(0) (void)0; else for", "\n\u8bb2\u8ff0\u4e00\u4e0b\u5b83\u7684\u7528\u6cd5\u548c\u542b\u4e49", "(8)", "\n\u6b63\u5219\u8868\u8fbe\u5f0f.", "\na,b\u4e2d\u7684\u4e00\u4e2a\u662f\u5982\u4f55\u8868\u793a\u7684?[a|b]\u5bf9\u561b?", "\n\u8c8c\u4f3c\u662f\u5bf9\u7684,\u5176\u5b9e\u8fd9\u4e2a\u662f\u8868\u793aa,|,b\u4e2d\u7684\u4e00\u4e2a,\u6b63\u786e\u7684\u5199\u6cd5\u662f[ab]\u6216a|b.", "(9)", "\nMFC\u7684DEBUG_NEW\u662f\u5982\u4f55\u8fdb\u884c\u68c0\u6d4b\u5185\u5b58\u6cc4\u6f0f\u7684", "\n\u8fd9\u4e2a\u6700\u597d\u770b\u770b\u6e90\u7801\u4e86\uff0c#define\u6765\uff0cdefine\u53bb\u7684\u5f88\u7b80\u5355\u3002\u5e76\u4e14\u6211\u4ee5\u4e3a\u5b83\u4f7f\u7528\u5e73\u8861\u4e8c\u53c9\u6811\u7ba1\u7406\u5185\u5b58\uff0c\u9664\u6b64\u4e4b\u5916\uff0c\u4e5f\u5c31\u662fHashTable\u4e86\u3002\u4f46\u662f\u5904\u7406\u5185\u5b58\u5730\u5740\u503c\uff0c\u6211\u4ee5\u4e3a\u4e0d\u4f1a\u3002", "\n\u672c\u9898\u96be\u5012\u4e86\u4e00\u4f4d28\u5c81MFC\u7a0b\u5e8f\u5458\u3002", "(10)", "\n\u6765\u81ea\u4e8e50mi\u7684\u8bd5\u9898:", "\ndouble* (*a)[2][3];", "\n\u95ee", "\nsizeof(a);", "\nsizeof(*a);", "\nsizeof(**a);", "\nsizeof(***a);", "\n\u5475\u5475\uff0c", "\n\u8fd8\u6709sizeof(****a);", "\n\u89e3\u7b54\uff1aa\u662f\u6307\u5411\u7c7b\u578bdouble*[2][3]\u7684\u6307\u9488\uff0c\u662f\u6307\u9488\u5c31\u4e0d\u5e9f\u8bdd\u4e86\u3002", "\n\u6240\u4ee5*a\u5c31\u662f\u4e0a\u8ff0\u7684\u7c7b\u578b\uff0c\u4e8e\u662f\u7ed3\u679c\u662fsizeof(double*)*2*3=24;", "\n**a\u5c31\u662fdouble*[3]\u7c7b\u578b\u7684\uff0c***a\u5c31\u662fdouble*\u578b\u7684\uff0c****a\u5c31\u662fdouble\u7c7b\u578b\u7684\u3002", "(11)", "\n\u8fd8\u6709\u4e00\u9053\u6765\u81ea\u4e8e50mi\u7684\u9898\u76ee\uff0c", "\nint i = 2;", "\ncout<<i++<<i;", "\n\u95ee\u8f93\u51fa\uff0c\u5728VC\u4e0a\uff0c\u6211\u770b\u8fc7\u5176\u6c47\u7f16\uff0c\u8fd8\u662f\u8ba9\u6211\u611f\u5230\u532a\u5937\u6240\u601d\u7684\uff0c\u81f3\u5c11\u88ab\u7406\u89e3\u4e3a\u51fd\u6570\u8c03\u7528\u662f\u4e0d\u5b8c\u5168\u6b63\u786e\u7684\u3002VC6\u548cVC7\u7684\u8f93\u51fa\u7ed3\u679c\u90fd\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u6211\u5e0c\u671b\u7b54\u9898\u7684\u4eba\u80fd\u77e5\u9053\u8fd9\u91cc\u5b58\u5728\u7740\u7f16\u8bd1\u5668\u7684\u5dee\u522b\u95ee\u9898\u3002", "(12)", "\n\u5982\u4f55\u5229\u7528std::string\u5efa\u7acb\u4e00\u4e2a\u5b57\u7b26\u4e32\u7c7b,\u4f7f\u5176\u5224\u65ad\u5b57\u7b26\u4e32\u5bf9\u8c61\u76f8\u7b49\u65f6\u5ffd\u7565\u5927\u5c0f\u5199\u3002", "\n\u5173\u952e\u5728\u4e8ebasic_string\u6a21\u677f\u7c7b\u7684\u7b2c\u4e8c\u4e2a\u6a21\u677f\u53c2\u6570\u7684\u91cd\u65b0\u5b9a\u4e49\u3002\u8be6\u7ec6\u770b\u300aEffective C++\u300b\u3002", "(13)", "\n\u53d9\u8ff0__stdcall\u548c__cdecl\u7684\u533a\u522b\u3002\u8981\u8bb2\u5230\u6c47\u7f16\u5c42\u6b21\uff0c\u90a3\u987a\u4fbf\u518d\u8bf4\u4e00\u4e0b__fastcall\u548c__thiscall\uff1b", "(14)", "\n\u5982\u4f55\u5728const\u51fd\u6570\u5185\u4fee\u6539\u975emutable\u4fee\u9970\u7684\u6210\u5458\u7684\u503c\uff1f", "\n\u63d0\u793aconst_cast;", "(15)", "\n\u5173\u4e8e return i++;\u7684\u95ee\u9898\uff0ci\u7684\u503c\u4f1a\u4e0d\u4f1a\u5f97\u5230\u589e\u52a0\u3002", "\n\u4e5f\u8bb8\u8981\u4e86\u89e3\u5230\u6c47\u7f16\u5c42\u6b21\u624d\u7b97\u597d\u3002", "(16)", "\n\u5982\u4f55\u5728\u7f16\u8bd1\u9636\u6bb5\u5c31\u53ef\u4ee5\u786e\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\u5e38\u91cf\u7684\u957f\u5ea6\uff1f", "\n\u4e0d\u662f\u7528\u6a21\u677f\u6280\u672f\u4e86\uff0c\u6ca1\u6709\u90a3\u4e48\u590d\u6742\u3002", "(17)", "\nSTL\u91cc", "\nstd::map<int, int> map_;", "\nmap_[1] = 2;", "\nint a = map_[2];", "\n?? map_.size();??", "(18)", "\nclass Test", "\n{", "\n};", "Test* pTest = new Test();", "\n\u4f1a\u4e0d\u4f1a\u8c03\u7528\u6240\u8c13\u7684\u6784\u9020\u51fd\u6570\u3002", "\n(19)", "\nchar* p = \u201cHello\u201d;", "\nchar a[] = \u201cHello\u201d;", "\n\u533a\u522b\u662f\u4ec0\u4e48\uff1f\u4f30\u8ba1\u8fd9\u4e2a\u6709\u70b9\u7b80\u5355\u4e86\u3002", "\n(20)", "\n\u5982\u4f55\u5f97\u5230\u5bc4\u5b58\u5668EIP\u7684\u503c\uff1f", "\n\u5475\u5475\uff0c\u636e\u6211\u6240\u77e5\uff0c\u53ef\u4ee5\u6709\u4e24\u79cd\u65b9\u6cd5\u53ef\u4ee5\u4f7f\u7528\u3002", "\u00a0", "(21)", "\ntemplate<class T>", "\ntypedef T* (*pfunc)(T&);", "\n\u5728\u73b0\u9636\u6bb5\uff0c\u7f16\u8bd1\u5668\u662f\u5426\u652f\u6301\u3002", "(22)", "\nvoid(void)", "\n\u8fd9\u4e2a\u662f\u4ec0\u4e48?", "(23)", "\n\u4ec0\u4e48\u662fWin32\u7a97\u53e3\u7684\u5b50\u7c7b\u5316\uff1f", "(24)", "\n\u9610\u8ff0VC6\u548cVC7\u4e2dstd::string\u7684\u53d8\u5316\u3002", "\n\u4e3b\u8981\u8bf4\u660e\u5173\u4e8e\u5f15\u7528\u8ba1\u6570\uff0cCOW\u7b49\u6280\u672f\u4e0a\u7684\u95ee\u9898\u3002", "(25)", "\nconst int i = 5;", "\nint* c = const_cast<int*>(&i);", "\n*c = 6;", "\ncout<<i;", "\n\u8f93\u51fa\u591a\u5c11? \u4e3a\u4ec0\u4e48?", "\n(26)", "\n\u8bf4\u4e00\u4e0bvolatile\u80fd\u4e0d\u80fd\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\uff0c\u8bf4\u660e\u539f\u56e0\uff0c\u6700\u597d\u7528\u4ee3\u7801\u8bf4\u660e\u95ee\u9898\u3002", "\n(\u770b\u6765\u5b66C++\u7684\u4e0d\u61c2\u6c47\u7f16\u8fd8\u662f\u633a\u90c1\u95f7\u7684)", "\n(27)", "\n\u5199\u4f2a\u7801\uff0c\u7528C++\u6a21\u62dfC#\u6216Java\u4e2d\u7ebf\u7a0b\u5b89\u5168\u5173\u952e\u5b57\u7684\u5b9e\u73b0\u3002", "\n\u5176\u5b9e\u5b8c\u5168\u53ef\u4ee5\u731c\u6d4bC#\u5728\u5b9e\u73b0\u7ea7\u522b\u4e0a\u7684\u4ee3\u7801\u3002\u5b9e\u73b0C#\u7684lock\u3002", "\n(\u4e0d\u4f1aC#\u548cJava\u5c31\u7b97\u4e86)", "\n(28)", "\n\u770b\u61c2\u6211\u7684\u7b7e\u540dC\u4ee3\u7801\uff0c\u75281\u4e2a\u5c0f\u65f6\u7684\u65f6\u95f4\u5e94\u8be5\u5dee\u4e0d\u591a\u4e86\u3002", "\n\u201cHealer\u201d", "\u00a0", "\n(29)", "\nclass Test", "\n{", "\n};", "Test b, c;", "\nTest a = b + c;//\u6211\u4eec\u8ba4\u4e3aTest\u91cd\u8f7d\u4e86\u52a0\u53f7\u3002", "\n\u8fd9\u6837\uff0c\u4f1a\u4e0d\u4f1a\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u5462?"], "title": "\u6536\u96c6\u7684\u4e00\u4e9bC++\u9762\u8bd5\u9898"},
{"contents": ["1. static\u6709\u4ec0\u4e48\u7528\u9014\uff1f\uff08\u8bf7\u81f3\u5c11\u8bf4\u660e\u4e24\u79cd\uff09", "\n\u7b54 \u30011.\u9650\u5236\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u3002", "\n2.\u8bbe\u7f6e\u53d8\u91cf\u7684\u5b58\u50a8\u57df\u3002", "\n2. \u5f15\u7528\u4e0e\u6307\u9488\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u7b54 \u30011) \u5f15\u7528\u5fc5\u987b\u88ab\u521d\u59cb\u5316\uff0c\u6307\u9488\u4e0d\u5fc5\u3002", "\n2) \u5f15\u7528\u521d\u59cb\u5316\u4ee5\u540e\u4e0d\u80fd\u88ab\u6539\u53d8\uff0c\u6307\u9488\u53ef\u4ee5\u6539\u53d8\u6240\u6307\u7684\u5bf9\u8c61\u3002", "\n3) \u4e0d\u5b58\u5728\u6307\u5411\u7a7a\u503c\u7684\u5f15\u7528\uff0c\u4f46\u662f\u5b58\u5728\u6307\u5411\u7a7a\u503c\u7684\u6307\u9488\u3002", "\n3. \u63cf\u8ff0\u5b9e\u65f6\u7cfb\u7edf\u7684\u57fa\u672c\u7279\u6027", "\n\u7b54 \u3001\u5728\u7279\u5b9a\u65f6\u95f4\u5185\u5b8c\u6210\u7279\u5b9a\u7684\u4efb\u52a1\uff0c\u5b9e\u65f6\u6027\u4e0e\u53ef\u9760\u6027\u3002", "\n4. \u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u5728\u5185\u5b58\u4e2d\u662f\u5426\u6709\u533a\u522b\uff1f\u5982\u679c\u6709\uff0c\u662f\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u7b54 \u3001\u5168\u5c40\u53d8\u91cf\u50a8\u5b58\u5728\u9759\u6001\u6570\u636e\u533a\uff0c\u5c40\u90e8\u53d8\u91cf\u5728\u5806\u6808\u4e2d\u3002", "\n5. \u4ec0\u4e48\u662f\u5e73\u8861\u4e8c\u53c9\u6811\uff1f", "\n\u7b54 \u3001\u5de6\u53f3\u5b50\u6811\u90fd\u662f\u5e73\u8861\u4e8c\u53c9\u6811 \u4e14\u5de6\u53f3\u5b50\u6811\u7684\u6df1\u5ea6\u5dee\u503c\u7684\u7edd\u5bf9\u503c\u4e0d\u5927\u4e8e1\u3002", "\n6. \u5806\u6808\u6ea2\u51fa\u4e00\u822c\u662f\u7531\u4ec0\u4e48\u539f\u56e0\u5bfc\u81f4\u7684\uff1f", "\n\u7b54 \u3001\u6ca1\u6709\u56de\u6536\u5783\u573e\u8d44\u6e90", "\n7. \u4ec0\u4e48\u51fd\u6570\u4e0d\u80fd\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff1f", "\n\u7b54 \u3001constructor", "\n8. \u5192\u6ce1\u6392\u5e8f\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u4ec0\u4e48\uff1f", "\n\u7b54 \u3001O(n^2)", "\n9. \u5199\u51fafloat x \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684if\u8bed\u53e5\u3002", "\n\u7b54 \u3001if(x>0.000001&&x<-0.000001)", "\n10. Internet\u91c7\u7528\u54ea\u79cd\u7f51\u7edc\u534f\u8bae\uff1f\u8be5\u534f\u8bae\u7684\u4e3b\u8981\u5c42\u6b21\u7ed3\u6784\uff1f", "\n\u7b54 \u3001tcp/ip \u5e94\u7528\u5c42/\u4f20\u8f93\u5c42/\u7f51\u7edc\u5c42/\u6570\u636e\u94fe\u8def\u5c42/\u7269\u7406\u5c42", "\n11. Internet\u7269\u7406\u5730\u5740\u548cIP\u5730\u5740\u8f6c\u6362\u91c7\u7528\u4ec0\u4e48\u534f\u8bae\uff1f", "\n\u7b54 \u3001ARP (Address Resolution Protocol)\uff08\u5730\u5740\u89e3\u6790\u534f\u8bae\uff09", "\n12.IP\u5730\u5740\u7684\u7f16\u7801\u5206\u4e3a\u54ea\u4fe9\u90e8\u5206\uff1f", "\n\u7b54 \u3001IP\u5730\u5740\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff0c\u7f51\u7edc\u53f7\u548c\u4e3b\u673a\u53f7\u3002\u4e0d\u8fc7\u662f\u8981\u548c\u201c\u5b50\u7f51\u63a9\u7801\u201d\u6309\u4f4d\u4e0e\u4e4b\u540e\u624d\u80fd\u533a\u5206\u54ea\u4e9b\u662f\u7f51\u7edc\u4f4d\u54ea\u4e9b\u662f\u4e3b\u673a\u4f4d\u3002", "13.\u7528\u6237\u8f93\u5165M,N\u503c\uff0c\u4ece1\u81f3N\u5f00\u59cb\u987a\u5e8f\u5faa\u73af\u6570\u6570\uff0c\u6bcf\u6570\u5230M\u8f93\u51fa\u8be5\u6570\u503c\uff0c\u76f4\u81f3\u5168\u90e8\u8f93\u51fa\u3002\u5199\u51faC\u7a0b\u5e8f\u3002", "\n\u7b54 \u3001\u5faa\u73af\u94fe\u8868\uff0c\u7528\u53d6\u4f59\u64cd\u4f5c\u505a", "\n14.\u4e0d\u80fd\u505aswitch()\u7684\u53c2\u6570\u7c7b\u578b\u662f\uff1a", "\n\u7b54 \u3001switch\u7684\u53c2\u6570\u4e0d\u80fd\u4e3a\u5b9e\u578b\u3002", "\n\u534e\u4e3a", "\n15\u3001\u5c40\u90e8\u53d8\u91cf\u80fd\u5426\u548c\u5168\u5c40\u53d8\u91cf\u91cd\u540d\uff1f", "\n\u7b54 \u3001\u80fd\uff0c\u5c40\u90e8\u4f1a\u5c4f\u853d\u5168\u5c40\u3002\u8981\u7528\u5168\u5c40\u53d8\u91cf\uff0c\u9700\u8981\u4f7f\u7528\u201d::\u201d", "\n\u5c40\u90e8\u53d8\u91cf\u53ef\u4ee5\u4e0e\u5168\u5c40\u53d8\u91cf\u540c\u540d\uff0c\u5728\u51fd\u6570\u5185\u5f15\u7528\u8fd9\u4e2a\u53d8\u91cf\u65f6\uff0c\u4f1a\u7528\u5230\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u800c\u4e0d\u4f1a\u7528\u5230\u5168\u5c40\u53d8\u91cf\u3002\u5bf9\u4e8e\u6709\u4e9b\u7f16\u8bd1\u5668\u800c\u8a00\uff0c\u5728\u540c\u4e00\u4e2a\u51fd\u6570\u5185\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u6bd4\u5982\u5728\u4e24\u4e2a\u5faa\u73af\u4f53\u5185\u90fd\u5b9a\u4e49\u4e00\u4e2a\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u800c\u90a3\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u5c31\u5728\u90a3\u4e2a\u5faa\u73af\u4f53\u5185", "\n16\u3001\u5982\u4f55\u5f15\u7528\u4e00\u4e2a\u5df2\u7ecf\u5b9a\u4e49\u8fc7\u7684\u5168\u5c40\u53d8\u91cf\uff1f", "\n\u7b54 \u3001\u53ef\u4ee5\u7528\u5f15\u7528\u5934\u6587\u4ef6\u7684\u65b9\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u7528extern\u5173\u952e\u5b57\uff0c\u5982\u679c\u7528\u5f15\u7528\u5934\u6587\u4ef6\u65b9\u5f0f\u6765\u5f15\u7528\u67d0\u4e2a\u5728\u5934\u6587\u4ef6\u4e2d\u58f0\u660e\u7684\u5168\u5c40\u53d8\u7406\uff0c\u5047\u5b9a\u4f60\u5c06\u90a3\u4e2a\u53d8\u5199\u9519\u4e86\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4\u4f1a\u62a5\u9519\uff0c\u5982\u679c\u4f60\u7528extern\u65b9\u5f0f\u5f15\u7528\u65f6\uff0c\u5047\u5b9a\u4f60\u72af\u4e86\u540c\u6837\u7684\u9519\u8bef\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4\u4e0d\u4f1a\u62a5\u9519\uff0c\u800c\u5728\u8fde\u63a5\u671f\u95f4\u62a5\u9519", "\n17\u3001\u5168\u5c40\u53d8\u91cf\u53ef\u4e0d\u53ef\u4ee5\u5b9a\u4e49\u5728\u53ef\u88ab\u591a\u4e2a.C\u6587\u4ef6\u5305\u542b\u7684\u5934\u6587\u4ef6\u4e2d\uff1f\u4e3a\u4ec0\u4e48\uff1f", "\n\u7b54 \u3001\u53ef\u4ee5\uff0c\u5728\u4e0d\u540c\u7684C\u6587\u4ef6\u4e2d\u4ee5static\u5f62\u5f0f\u6765\u58f0\u660e\u540c\u540d\u5168\u5c40\u53d8\u91cf\u3002", "\n\u53ef\u4ee5\u5728\u4e0d\u540c\u7684C\u6587\u4ef6\u4e2d\u58f0\u660e\u540c\u540d\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u524d\u63d0\u662f\u5176\u4e2d\u53ea\u80fd\u6709\u4e00\u4e2aC\u6587\u4ef6\u4e2d\u5bf9\u6b64\u53d8\u91cf\u8d4b\u521d\u503c\uff0c\u6b64\u65f6\u8fde\u63a5\u4e0d\u4f1a\u51fa\u9519", "\n18\u3001\u8bed\u53e5for( \uff1b1 \uff1b)\u6709\u4ec0\u4e48\u95ee\u9898\uff1f\u5b83\u662f\u4ec0\u4e48\u610f\u601d\uff1f", "\n\u7b54 \u3001\u548cwhile(1)\u76f8\u540c\u3002", "\n19\u3001do\u2026\u2026while\u548cwhile\u2026\u2026do\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u7b54 \u3001\u524d\u4e00\u4e2a\u5faa\u73af\u4e00\u904d\u518d\u5224\u65ad\uff0c\u540e\u4e00\u4e2a\u5224\u65ad\u4ee5\u540e\u518d\u5faa\u73af", "\n20\u3001\u8bf7\u5199\u51fa\u4e0b\u5217\u4ee3\u7801\u7684\u8f93\u51fa\u5185\u5bb9", "\n#i nclude", "\nmain()", "\n{", "\nint a,b,c,d;", "\na=10;", "\nb=a++;", "\nc=++a;", "\nd=10*a++;", "\nprintf(\u201cb\uff0cc\uff0cd\uff1a%d\uff0c%d\uff0c%d\u201d\uff0cb\uff0cc\uff0cd\uff09;", "\nreturn 0;", "\n}", "\n\u7b54 \u300110\uff0c12\uff0c120", "\n21\u3001static\u5168\u5c40\u53d8\u91cf\u4e0e\u666e\u901a\u7684\u5168\u5c40\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1fstatic\u5c40\u90e8\u53d8\u91cf\u548c\u666e\u901a\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1fstatic\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u7b54 \u3001\u5168\u5c40\u53d8\u91cf(\u5916\u90e8\u53d8\u91cf)\u7684\u8bf4\u660e\u4e4b\u524d\u518d\u51a0\u4ee5static \u5c31\u6784\u6210\u4e86\u9759\u6001\u7684\u5168\u5c40\u53d8\u91cf\u3002\u5168\u5c40\u53d8\u91cf\u672c\u8eab\u5c31\u662f\u9759\u6001\u5b58\u50a8\u65b9\u5f0f\uff0c \u9759\u6001\u5168\u5c40\u53d8\u91cf\u5f53\u7136\u4e5f\u662f\u9759\u6001\u5b58\u50a8\u65b9\u5f0f\u3002 \u8fd9\u4e24\u8005\u5728\u5b58\u50a8\u65b9\u5f0f\u4e0a\u5e76\u65e0\u4e0d\u540c\u3002\u8fd9\u4e24\u8005\u7684\u533a\u522b\u867d\u5728\u4e8e\u975e\u9759\u6001\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u662f\u6574\u4e2a\u6e90\u7a0b\u5e8f\uff0c \u5f53\u4e00\u4e2a\u6e90\u7a0b\u5e8f\u7531\u591a\u4e2a\u6e90\u6587\u4ef6\u7ec4\u6210\u65f6\uff0c\u975e\u9759\u6001\u7684\u5168\u5c40\u53d8\u91cf\u5728\u5404\u4e2a\u6e90\u6587\u4ef6\u4e2d\u90fd\u662f\u6709\u6548\u7684\u3002 \u800c\u9759\u6001\u5168\u5c40\u53d8\u91cf\u5219\u9650\u5236\u4e86\u5176\u4f5c\u7528\u57df\uff0c \u5373\u53ea\u5728\u5b9a\u4e49\u8be5\u53d8\u91cf\u7684\u6e90\u6587\u4ef6\u5185\u6709\u6548\uff0c \u5728\u540c\u4e00\u6e90\u7a0b\u5e8f\u7684\u5176\u5b83\u6e90\u6587\u4ef6\u4e2d\u4e0d\u80fd\u4f7f\u7528\u5b83\u3002\u7531\u4e8e\u9759\u6001\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u5c40\u9650\u4e8e\u4e00\u4e2a\u6e90\u6587\u4ef6\u5185\uff0c\u53ea\u80fd\u4e3a\u8be5\u6e90\u6587\u4ef6\u5185\u7684\u51fd\u6570\u516c\u7528\uff0c \u56e0\u6b64\u53ef\u4ee5\u907f\u514d\u5728\u5176\u5b83\u6e90\u6587\u4ef6\u4e2d\u5f15\u8d77\u9519\u8bef\u3002", "\n\u4ece\u4ee5\u4e0a\u5206\u6790\u53ef\u4ee5\u770b\u51fa\uff0c \u628a\u5c40\u90e8\u53d8\u91cf\u6539\u53d8\u4e3a\u9759\u6001\u53d8\u91cf\u540e\u662f\u6539\u53d8\u4e86\u5b83\u7684\u5b58\u50a8\u65b9\u5f0f\u5373\u6539\u53d8\u4e86\u5b83\u7684\u751f\u5b58\u671f\u3002\u628a\u5168\u5c40\u53d8\u91cf\u6539\u53d8\u4e3a\u9759\u6001\u53d8\u91cf\u540e\u662f\u6539\u53d8\u4e86\u5b83\u7684\u4f5c\u7528\u57df\uff0c \u9650\u5236\u4e86\u5b83\u7684\u4f7f\u7528\u8303\u56f4\u3002", "\nstatic\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u4f5c\u7528\u57df\u4e0d\u540c\u3002\u4ec5\u5728\u672c\u6587\u4ef6\u3002\u53ea\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4e2d\u4f7f\u7528\u7684\u51fd\u6570\u5e94\u8be5\u8bf4\u660e\u4e3a\u5185\u90e8\u51fd\u6570(static)\uff0c\u5185\u90e8\u51fd\u6570\u5e94\u8be5\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4e2d\u8bf4\u660e\u548c\u5b9a\u4e49\u3002\u5bf9\u4e8e\u53ef\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4ee5\u5916\u4f7f\u7528\u7684\u51fd\u6570\uff0c\u5e94\u8be5\u5728\u4e00\u4e2a\u5934\u6587\u4ef6\u4e2d\u8bf4\u660e\uff0c\u8981\u4f7f\u7528\u8fd9\u4e9b\u51fd\u6570\u7684\u6e90\u6587\u4ef6\u8981\u5305\u542b\u8fd9\u4e2a\u5934\u6587\u4ef6", "\nstatic\u5168\u5c40\u53d8\u91cf\u4e0e\u666e\u901a\u7684\u5168\u5c40\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u5168\u5c40\u53d8\u91cf\u53ea\u521d\u4f7f\u5316\u4e00\u6b21\uff0c\u9632\u6b62\u5728\u5176\u4ed6\u6587\u4ef6\u5355\u5143\u4e2d\u88ab\u5f15\u7528;", "\nstatic\u5c40\u90e8\u53d8\u91cf\u548c\u666e\u901a\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u5c40\u90e8\u53d8\u91cf\u53ea\u88ab\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u4e0b\u4e00\u6b21\u4f9d\u636e\u4e0a\u4e00\u6b21\u7ed3\u679c\u503c\uff1b", "\nstatic\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u51fd\u6570\u5728\u5185\u5b58\u4e2d\u53ea\u6709\u4e00\u4efd\uff0c\u666e\u901a\u51fd\u6570\u5728\u6bcf\u4e2a\u88ab\u8c03\u7528\u4e2d\u7ef4\u6301\u4e00\u4efd\u62f7\u8d1d", "\n\u7a0b\u5e8f\u7684\u5c40\u90e8\u53d8\u91cf\u5b58\u5728\u4e8e\uff08\u5806\u6808\uff09\u4e2d\uff0c\u5168\u5c40\u53d8\u91cf\u5b58\u5728\u4e8e\uff08\u9759\u6001\u533a \uff09\u4e2d\uff0c\u52a8\u6001\u7533\u8bf7\u6570\u636e\u5b58\u5728\u4e8e\uff08 \u5806\uff09\u4e2d\u3002", "\n22\u3001\u8bbe\u6709\u4ee5\u4e0b\u8bf4\u660e\u548c\u5b9a\u4e49\uff1a", "\ntypedef union {long i; int k[5]; char c;} DATE;", "\nstruct data { int cat; DATE cow; double dog;} too;", "\nDATE max;", "\n\u5219\u8bed\u53e5 printf(\u201c%d\u201d,sizeof(struct date)+sizeof(max));\u7684\u6267\u884c\u7ed3\u679c\u662f\uff1f", "\n\u7b54 \u3001\u7ed3\u679c\u662f\uff1a___52____\u3002DATE\u662f\u4e00\u4e2aunion, \u53d8\u91cf\u516c\u7528\u7a7a\u95f4. \u91cc\u9762\u6700\u5927\u7684\u53d8\u91cf\u7c7b\u578b\u662fint[5], \u5360\u752820\u4e2a\u5b57\u8282. \u6240\u4ee5\u5b83\u7684\u5927\u5c0f\u662f20", "\ndata\u662f\u4e00\u4e2astruct, \u6bcf\u4e2a\u53d8\u91cf\u5206\u5f00\u5360\u7528\u7a7a\u95f4. \u4f9d\u6b21\u4e3aint4 + DATE20 + double8 = 32.", "\n\u6240\u4ee5\u7ed3\u679c\u662f 20 + 32 = 52.", "\n\u5f53\u7136\u2026\u5728\u67d0\u4e9b16\u4f4d\u7f16\u8f91\u5668\u4e0b, int\u53ef\u80fd\u662f2\u5b57\u8282,\u90a3\u4e48\u7ed3\u679c\u662f int2 + DATE10 + double8 = 20", "\n23\u3001\u961f\u5217\u548c\u6808\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u7b54 \u3001\u961f\u5217\u5148\u8fdb\u5148\u51fa\uff0c\u6808\u540e\u8fdb\u5148\u51fa", "\n24\u3001\u5199\u51fa\u4e0b\u5217\u4ee3\u7801\u7684\u8f93\u51fa\u5185\u5bb9", "\n\uff03i nclude", "\nint inc(int a)", "\n{", "\n\u00a0\u00a0\u00a0 return(++a);", "\n}", "\nint multi(int*a,int*b,int*c)", "\n{", "\n\u00a0\u00a0\u00a0 return(*c=*a**b);", "\n}", "\ntypedef int(FUNC1)(int in);", "\ntypedef int(FUNC2) (int*,int*,int*);", "\nvoid show(FUNC2 fun,int arg1, int*arg2)", "\n{", "\n\u00a0\u00a0\u00a0 INC p=&inc;", "\n\u00a0\u00a0\u00a0 int temp =p(arg1);", "\n\u00a0\u00a0\u00a0 fun(&temp,&arg1, arg2);", "\n\u00a0\u00a0\u00a0 printf(\u201c%d\\n\u201d,*arg2);", "\n}", "\nmain()", "\n{", "\n\u00a0\u00a0\u00a0 int a;", "\n\u00a0\u00a0\u00a0 show(multi,10,&a);", "\n\u00a0\u00a0\u00a0 return 0;", "\n}", "\n\u7b54 \u3001110", "\n25\u3001\u8bf7\u627e\u51fa\u4e0b\u9762\u4ee3\u7801\u4e2d\u7684\u6240\u4ee5\u9519\u8bef", "\n\u8bf4\u660e\uff1a\u4ee5\u4e0b\u4ee3\u7801\u662f\u628a\u4e00\u4e2a\u5b57\u7b26\u4e32\u5012\u5e8f\uff0c\u5982\u201cabcd\u201d\u5012\u5e8f\u540e\u53d8\u4e3a\u201cdcba\u201d", "\n1\u3001\uff03i nclude\u201dstring.h\u201d", "\n2\u3001main()", "\n3\u3001{", "\n4\u3001\u00a0\u00a0\u00a0 char*src=\u201dhello,world\u201d;", "\n5\u3001\u00a0\u00a0\u00a0 char* dest=NULL;", "\n6\u3001\u00a0\u00a0\u00a0 int len=strlen(src);", "\n7\u3001\u00a0\u00a0\u00a0 dest=(char*)malloc(len);", "\n8\u3001\u00a0\u00a0\u00a0 char* d=dest;", "\n9\u3001\u00a0\u00a0\u00a0 char* s=src[len];", "\n10\u3001\u00a0\u00a0 while(len\u2013!=0)", "\n11\u3001\u00a0\u00a0\u00a0\u00a0\u00a0 d++=s\u2013;", "\n12\u3001\u00a0\u00a0 printf(\u201c%s\u201d,dest);", "\n13\u3001\u00a0\u00a0 return 0;", "\n14\u3001}", "\n\u7b54 \u3001\u65b9\u6cd51\uff1a", "\nint main()", "\n{", "\n\u00a0\u00a0\u00a0 char* src = \u201chello,world\u201d;", "\n\u00a0\u00a0\u00a0 int len = strlen(src);", "\n\u00a0\u00a0\u00a0 char* dest = (char*)malloc(len+1);//\u8981\u4e3a\\0\u5206\u914d\u4e00\u4e2a\u7a7a\u95f4", "\n\u00a0\u00a0\u00a0 char* d = dest;", "\n\u00a0\u00a0\u00a0 char* s = &src[len-1];//\u6307\u5411\u6700\u540e\u4e00\u4e2a\u5b57\u7b26", "\n\u00a0\u00a0\u00a0 while( len\u2013 != 0 )", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 *d++=*s\u2013;", "\n\u00a0\u00a0\u00a0 *d = 0;//\u5c3e\u90e8\u8981\u52a0\\0", "\n\u00a0\u00a0\u00a0 printf(\u201c%s\\n\u201d,dest);", "\n\u00a0\u00a0\u00a0 free(dest);// \u4f7f\u7528\u5b8c\uff0c\u5e94\u5f53\u91ca\u653e\u7a7a\u95f4\uff0c\u4ee5\u514d\u9020\u6210\u5185\u5b58\u6c47\u6cc4\u9732", "\n\u00a0\u00a0\u00a0 return 0;", "\n}", "\n\u65b9\u6cd52\uff1a", "\n\uff03include", "\n\uff03include", "\nmain()", "\n{", "\n\u00a0\u00a0\u00a0 char str[]=\u201dhello,world\u201d;", "\n\u00a0\u00a0\u00a0 int len=strlen(str);", "\n\u00a0\u00a0\u00a0 char t;", "\n\u00a0\u00a0\u00a0 for(int i=0; i\u00a0\u00a0\u00a0 {", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 t=str[i];", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 str[i]=str[len-i-1]; str[len-i-1]=t;", "\n\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0\u00a0 printf(\u201c%s\u201d,str);", "\n\u00a0\u00a0\u00a0 return 0;", "\n}", "26.-1,2,7,28,,126\u8bf7\u95ee28\u548c126\u4e2d\u95f4\u90a3\u4e2a\u6570\u662f\u4ec0\u4e48\uff1f\u4e3a\u4ec0\u4e48\uff1f", "\n\u7b54 \u3001\u5e94\u8be5\u662f4^3-1=63", "\n\u89c4\u5f8b\u662fn^3-1(\u5f53n\u4e3a\u5076\u65700\uff0c2\uff0c4)", "\nn^3+1(\u5f53n\u4e3a\u5947\u65701\uff0c3\uff0c5)", "27.\u7528\u4e24\u4e2a\u6808\u5b9e\u73b0\u4e00\u4e2a\u961f\u5217\u7684\u529f\u80fd\uff1f\u8981\u6c42\u7ed9\u51fa\u7b97\u6cd5\u548c\u601d\u8def\uff01", "\n\u7b54 \u3001\u8bbe2\u4e2a\u6808\u4e3aA,B, \u4e00\u5f00\u59cb\u5747\u4e3a\u7a7a.", "\n\u5165\u961f:", "\n\u5c06\u65b0\u5143\u7d20push\u5165\u6808A;", "\n\u51fa\u961f:", "\n(1)\u5224\u65ad\u6808B\u662f\u5426\u4e3a\u7a7a\uff1b", "\n(2)\u5982\u679c\u4e0d\u4e3a\u7a7a\uff0c\u5219\u5c06\u6808A\u4e2d\u6240\u6709\u5143\u7d20\u4f9d\u6b21pop\u51fa\u5e76push\u5230\u6808B\uff1b", "\n(3)\u5c06\u6808B\u7684\u6808\u9876\u5143\u7d20pop\u51fa\uff1b", "\n\u8fd9\u6837\u5b9e\u73b0\u7684\u961f\u5217\u5165\u961f\u548c\u51fa\u961f\u7684\u5e73\u644a\u590d\u6742\u5ea6\u90fd\u8fd8\u662fO(1), \u6bd4\u4e0a\u9762\u7684\u51e0\u79cd\u65b9\u6cd5\u8981\u597d\u3002", "\n28.\u5728c\u8bed\u8a00\u5e93\u51fd\u6570\u4e2d\u5c06\u4e00\u4e2a\u5b57\u7b26\u8f6c\u6362\u6210\u6574\u578b\u7684\u51fd\u6570\u662fatool()\u5417\uff0c\u8fd9\u4e2a\u51fd\u6570\u7684\u539f\u578b\u662f\u4ec0\u4e48\uff1f", "\n\u7b54 \u3001\u51fd\u6570\u540d: atol", "\n\u529f \u80fd: \u628a\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u957f\u6574\u578b\u6570", "\n\u7528 \u6cd5: long atol(const char *nptr);", "\n\u7a0b\u5e8f\u4f8b:", "\n\uff03include", "\n\uff03include", "\nint main(void)", "\n{", "\n\u00a0\u00a0\u00a0 long l;", "\n\u00a0\u00a0\u00a0 char *str = \u201c98765432\u2033;", "\n\u00a0\u00a0\u00a0 l = atol(lstr);", "\n\u00a0\u00a0\u00a0 printf(\u201cstring = %s integer = %ld\\n\u201d, str, l);", "\n\u00a0\u00a0\u00a0 return(0);", "\n}", "\n29.\u5bf9\u4e8e\u4e00\u4e2a\u9891\u7e41\u4f7f\u7528\u7684\u77ed\u5c0f\u51fd\u6570,\u5728C\u8bed\u8a00\u4e2d\u5e94\u7528\u4ec0\u4e48\u5b9e\u73b0,\u5728C++\u4e2d\u5e94\u7528\u4ec0\u4e48\u5b9e\u73b0?", "\n\u7b54 \u3001c\u7528\u5b8f\u5b9a\u4e49\uff0cc++\u7528inline", "\n30.\u76f4\u63a5\u94fe\u63a5\u4e24\u4e2a\u4fe1\u4ee4\u70b9\u7684"], "title": "CC++\u7b14\u8bd5\u9898\u7cfb\u521730\u9898"},
{"contents": ["struct node { char val; node* next;}", "\u00a0\u00a0 bool check(const node* head) {} //return false : \u65e0\u73af\uff1btrue: \u6709\u73af", "\n\u4e00\u79cdO\uff08n\uff09\u7684\u529e\u6cd5\u5c31\u662f\uff08\u641e\u4e24\u4e2a\u6307\u9488\uff0c\u4e00\u4e2a\u6bcf\u6b21\u9012\u589e\u4e00\u6b65\uff0c\u4e00\u4e2a\u6bcf\u6b21\u9012\u589e\u4e24\u6b65\uff0c\u5982\u679c\u6709\u73af\u7684\u8bdd\u4e24\u8005\u5fc5\u7136\u91cd\u5408\uff0c\u53cd\u4e4b\u4ea6\u7136\uff09\uff1a", "\nbool check(const node* head)", "\n{", "\n\u00a0\u00a0\u00a0 if(head==NULL)\u00a0 return false;", "\n\u00a0\u00a0\u00a0 node *low=head, *fast=head->next;", "\n\u00a0\u00a0\u00a0 while(fast!=NULL && fast->next!=NULL)", "\n\u00a0\u00a0\u00a0 {", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 low=low->next;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 fast=fast->next->next;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(low==fast) return true;", "\n\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0\u00a0 return false;", "\n}"], "title": "\u5982\u4f55\u5224\u65ad\u4e00\u4e2a\u5355\u94fe\u8868\u662f\u6709\u73af\u7684\uff1f"},
{"contents": ["\u7b54\u6848\uff1a", "\nconst int MINNUMBER = -32767 ;", "\nint find_sec_max( int data[] , int count)", "\n{", "\nint maxnumber = data[0] ;", "\nint sec_max = MINNUMBER ;", "\nfor ( int i = 1 ; i < count ; i++)", "\n{", "\nif ( data[i] > maxnumber )", "\n{", "\nsec_max = maxnumber ;", "\nmaxnumber = data[i] ;", "\n}", "\nelse", "\n{", "\nif ( data[i] > sec_max )", "\nsec_max = data[i] ;", "\n}", "\n}", "\nreturn sec_max ;", "\n}"], "title": "\u5199\u4e00\u4e2a\u51fd\u6570\u627e\u51fa\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\u4e2d\uff0c\u7b2c\u4e8c\u5927\u7684\u6570 \uff08microsoft\uff09"},
{"contents": ["struct Node", "\n{", "\nint data ;", "\nNode *next ;", "\n};", "\ntypedef struct Node Node ;", "(1)\u5df2\u77e5\u94fe\u8868\u7684\u5934\u7ed3\u70b9head,\u5199\u4e00\u4e2a\u51fd\u6570\u628a\u8fd9\u4e2a\u94fe\u8868\u9006\u5e8f ( Intel)", "\nNode * ReverseList(Node *head) //\u94fe\u8868\u9006\u5e8f", "\n{", "\nif ( head == NULL || head->next == NULL )", "\nreturn head;", "\nNode *p1 = head ;", "\nNode *p2 = p1->next ;", "\nNode *p3 = p2->next ;", "\np1->next = NULL ;", "\nwhile ( p3 != NULL )", "\n{", "\np2->next = p1 ;", "\np1 = p2 ;", "\np2 = p3 ;", "\np3 = p3->next ;", "\n}", "\np2->next = p1 ;", "\nhead = p2 ;", "\nreturn head ;", "\n}", "\n(2)\u5df2\u77e5\u4e24\u4e2a\u94fe\u8868head1 \u548chead2 \u5404\u81ea\u6709\u5e8f\uff0c\u8bf7\u628a\u5b83\u4eec\u5408\u5e76\u6210\u4e00\u4e2a\u94fe\u8868\u4f9d\u7136\u6709\u5e8f\u3002(\u4fdd\u7559\u6240\u6709\u7ed3\u70b9\uff0c\u5373\u4fbf\u5927\u5c0f\u76f8\u540c\uff09", "\nNode * Merge(Node *head1 , Node *head2)", "\n{", "\nif ( head1 == NULL)", "\nreturn head2 ;", "\nif ( head2 == NULL)", "\nreturn head1 ;", "\nNode *head = NULL ;", "\nNode *p1 = NULL;", "\nNode *p2 = NULL;", "\nif ( head1->data < head2->data )", "\n{", "\nhead = head1 ;", "\np1 = head1->next;", "\np2 = head2 ;", "\n}", "\nelse", "\n{", "\nhead = head2 ;", "\np2 = head2->next ;", "\np1 = head1 ;", "\n}", "\nNode *pcurrent = head ;", "\nwhile ( p1 != NULL && p2 != NULL)", "\n{", "\nif ( p1->data <= p2->data )", "\n{", "\npcurrent->next = p1 ;", "\npcurrent = p1 ;", "\np1 = p1->next ;", "\n}", "\nelse", "\n{", "\npcurrent->next = p2 ;", "\npcurrent = p2 ;", "\np2 = p2->next ;", "\n}", "\n}", "\nif ( p1 != NULL )", "\npcurrent->next = p1 ;", "\nif ( p2 != NULL )", "\npcurrent->next = p2 ;", "\nreturn head ;", "\n}", "\n(3)\u5df2\u77e5\u4e24\u4e2a\u94fe\u8868head1 \u548chead2 \u5404\u81ea\u6709\u5e8f\uff0c\u8bf7\u628a\u5b83\u4eec\u5408\u5e76\u6210\u4e00\u4e2a\u94fe\u8868\u4f9d\u7136\u6709\u5e8f\uff0c\u8fd9\u6b21\u8981\u6c42\u7528\u9012\u5f52\u65b9\u6cd5\u8fdb\u884c\u3002 (Autodesk)", "\n\u7b54\u6848\uff1a", "\nNode * MergeRecursive(Node *head1 , Node *head2)", "\n{", "\nif ( head1 == NULL )", "\nreturn head2 ;", "\nif ( head2 == NULL)", "\nreturn head1 ;", "\nNode *head = NULL ;", "\nif ( head1->data < head2->data )", "\n{", "\nhead = head1 ;", "\nhead->next = MergeRecursive(head1->next,head2);", "\n}", "\nelse", "\n{", "\nhead = head2 ;", "\nhead->next = MergeRecursive(head1,head2->next);", "\n}", "\nreturn head ;", "\n}"], "title": "\u94fe\u8868\u9762\u8bd5\u9898\uff1a\u4e00\u4e2a\u94fe\u8868\u7684\u7ed3\u70b9\u7ed3\u6784"},
{"contents": ["\u7b54\u6848\uff1a", "\ncout << __FILE__ ;", "\ncout<<__LINE__ ;", "\n__FILE__\u548c__LINE__\u662f\u7cfb\u7edf\u9884\u5b9a\u4e49\u5b8f\uff0c\u8fd9\u79cd\u5b8f\u5e76\u4e0d\u662f\u5728\u67d0\u4e2a\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\uff0c\u800c\u662f\u7531\u7f16\u8bd1\u5668\u5b9a\u4e49\u7684\u3002"], "title": "\u5982\u4f55\u6253\u5370\u51fa\u5f53\u524d\u6e90\u6587\u4ef6\u7684\u6587\u4ef6\u540d\u4ee5\u53ca\u6e90\u6587\u4ef6\u7684\u5f53\u524d\u884c\u53f7\uff1f"},
{"contents": ["\u7b54\u6848\uff1a", "\n\uff03i nclude<iostream>", "\n\uff03i nclude<fstream>", "\nusing namespace std;", "void Order(vector<int>& data) //bubble sort", "\n{", "\nint count = data.size() ;", "\nint tag = false ; // \u8bbe\u7f6e\u662f\u5426\u9700\u8981\u7ee7\u7eed\u5192\u6ce1\u7684\u6807\u5fd7\u4f4d", "\nfor ( int i = 0 ; i < count ; i++)", "\n{", "\nfor ( int j = 0 ; j < count \u2013 i \u2013 1 ; j++)", "\n{", "\nif ( data[j] > data[j+1])", "\n{", "\ntag = true ;", "\nint temp = data[j] ;", "\ndata[j] = data[j+1] ;", "\ndata[j+1] = temp ;", "\n}", "\n}", "\nif ( !tag )", "\nbreak ;", "\n}", "\n}", "void main( void )", "\n{", "\nvector<int>data;", "\nifstream in(\u201cc:\\\\data.txt\u201d);", "\nif ( !in)", "\n{", "\ncout<<\u201dfile error!\u201d;", "\nexit(1);", "\n}", "\nint temp;", "\nwhile (!in.eof())", "\n{", "\nin>>temp;", "\ndata.push_back(temp);", "\n}", "\nin.close(); //\u5173\u95ed\u8f93\u5165\u6587\u4ef6\u6d41", "\nOrder(data);", "\nofstream out(\u201cc:\\\\result.txt\u201d);", "\nif ( !out)", "\n{", "\ncout<<\u201dfile error!\u201d;", "\nexit(1);", "\n}", "\nfor ( i = 0 ; i < data.size() ; i++)", "\nout<<data[i]<<\u201d \u201c;", "\nout.close(); //\u5173\u95ed\u8f93\u51fa\u6587\u4ef6\u6d41", "\n}"], "title": "\u6587\u4ef6\u4e2d\u6709\u4e00\u7ec4\u6574\u6570\uff0c\u8981\u6c42\u6392\u5e8f\u540e\u8f93\u51fa\u5230\u53e6\u4e00\u4e2a\u6587\u4ef6\u4e2d"},
{"contents": ["\u7b54\u6848\uff1a", "\n#ifdef __cplusplus", "\ncout<<\u201dc++\u201d;", "\n#else", "\ncout<<\u201dc\u201d;", "\n#endif"], "title": "\u5982\u4f55\u5224\u65ad\u4e00\u6bb5\u7a0b\u5e8f\u662f\u7531C \u7f16\u8bd1\u7a0b\u5e8f\u8fd8\u662f\u7531C++\u7f16\u8bd1\u7a0b\u5e8f\u7f16\u8bd1\u7684\uff1f"},
{"contents": ["\u7b54\u6848\uff1a", "\na.\u6210\u5458\u51fd\u6570\u88ab\u91cd\u8f7d\u7684\u7279\u5f81\uff1a", "\n\uff081\uff09\u76f8\u540c\u7684\u8303\u56f4\uff08\u5728\u540c\u4e00\u4e2a\u7c7b\u4e2d\uff09\uff1b", "\n\uff082\uff09\u51fd\u6570\u540d\u5b57\u76f8\u540c\uff1b", "\n\uff083\uff09\u53c2\u6570\u4e0d\u540c\uff1b", "\n\uff084\uff09virtual \u5173\u952e\u5b57\u53ef\u6709\u53ef\u65e0\u3002", "\nb.\u8986\u76d6\u662f\u6307\u6d3e\u751f\u7c7b\u51fd\u6570\u8986\u76d6\u57fa\u7c7b\u51fd\u6570\uff0c\u7279\u5f81\u662f\uff1a", "\n\uff081\uff09\u4e0d\u540c\u7684\u8303\u56f4\uff08\u5206\u522b\u4f4d\u4e8e\u6d3e\u751f\u7c7b\u4e0e\u57fa\u7c7b\uff09\uff1b", "\n\uff082\uff09\u51fd\u6570\u540d\u5b57\u76f8\u540c\uff1b", "\n\uff083\uff09\u53c2\u6570\u76f8\u540c\uff1b", "\n\uff084\uff09\u57fa\u7c7b\u51fd\u6570\u5fc5\u987b\u6709virtual \u5173\u952e\u5b57\u3002", "\nc.\u201c\u9690\u85cf\u201d\u662f\u6307\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\u5c4f\u853d\u4e86\u4e0e\u5176\u540c\u540d\u7684\u57fa\u7c7b\u51fd\u6570\uff0c\u89c4\u5219\u5982\u4e0b\uff1a", "\n\uff081\uff09\u5982\u679c\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\u4e0e\u57fa\u7c7b\u7684\u51fd\u6570\u540c\u540d\uff0c\u4f46\u662f\u53c2\u6570\u4e0d\u540c\u3002\u6b64\u65f6\uff0c\u4e0d\u8bba\u6709\u65e0virtual\u5173\u952e\u5b57\uff0c\u57fa\u7c7b\u7684\u51fd\u6570\u5c06\u88ab\u9690\u85cf\uff08\u6ce8\u610f\u522b\u4e0e\u91cd\u8f7d\u6df7\u6dc6\uff09\u3002", "\n\uff082\uff09\u5982\u679c\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\u4e0e\u57fa\u7c7b\u7684\u51fd\u6570\u540c\u540d\uff0c\u5e76\u4e14\u53c2\u6570\u4e5f\u76f8\u540c\uff0c\u4f46\u662f\u57fa\u7c7b\u51fd\u6570\u6ca1\u6709virtual \u5173\u952e\u5b57\u3002\u6b64\u65f6\uff0c\u57fa\u7c7b\u7684\u51fd\u6570\u88ab\u9690\u85cf\uff08\u6ce8\u610f\u522b\u4e0e\u8986\u76d6\u6df7\u6dc6\uff09"], "title": "\u7c7b\u6210\u5458\u51fd\u6570\u7684\u91cd\u8f7d\u3001\u8986\u76d6\u548c\u9690\u85cf\u533a\u522b\uff1f"},
{"contents": ["\u6570\u7ec4\u8981\u4e48\u5728\u9759\u6001\u5b58\u50a8\u533a\u88ab\u521b\u5efa\uff08\u5982\u5168\u5c40\u6570\u7ec4\uff09\uff0c\u8981\u4e48\u5728\u6808\u4e0a\u88ab\u521b\u5efa\u3002\u6307\u9488\u53ef\u4ee5\u968f\u65f6\u6307\u5411\u4efb\u610f\u7c7b\u578b\u7684\u5185\u5b58\u5757\u3002", "\n(1)\u4fee\u6539\u5185\u5bb9\u4e0a\u7684\u5dee\u522b", "\nchar a[] = \u201chello\u201d;", "\na[0] = \u2018X\u2019;", "\nchar *p = \u201cworld\u201d; // \u6ce8\u610fp \u6307\u5411\u5e38\u91cf\u5b57\u7b26\u4e32", "\np[0] = \u2018X\u2019; // \u7f16\u8bd1\u5668\u4e0d\u80fd\u53d1\u73b0\u8be5\u9519\u8bef\uff0c\u8fd0\u884c\u65f6\u9519\u8bef", "\n(2) \u7528\u8fd0\u7b97\u7b26sizeof \u53ef\u4ee5\u8ba1\u7b97\u51fa\u6570\u7ec4\u7684\u5bb9\u91cf\uff08\u5b57\u8282\u6570\uff09\u3002sizeof(p),p \u4e3a\u6307\u9488\u5f97\u5230\u7684\u662f\u4e00\u4e2a\u6307\u9488\u53d8\u91cf\u7684\u5b57\u8282\u6570\uff0c\u800c\u4e0d\u662fp \u6240\u6307\u7684\u5185\u5b58\u5bb9\u91cf\u3002C++/C \u8bed\u8a00\u6ca1\u6709\u529e\u6cd5\u77e5\u9053\u6307\u9488\u6240\u6307\u7684\u5185\u5b58\u5bb9\u91cf\uff0c\u9664\u975e\u5728\u7533\u8bf7\u5185\u5b58\u65f6\u8bb0\u4f4f\u5b83\u3002\u6ce8\u610f\u5f53\u6570\u7ec4\u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570\u8fdb\u884c\u4f20\u9012\u65f6\uff0c\u8be5\u6570\u7ec4\u81ea\u52a8\u9000\u5316\u4e3a\u540c\u7c7b\u578b\u7684\u6307\u9488\u3002", "\nchar a[] = \u201chello world\u201d;", "\nchar *p = a;", "\ncout<< sizeof(a) << endl; // 12 \u5b57\u8282", "\ncout<< sizeof(p) << endl; // 4 \u5b57\u8282", "\n\u8ba1\u7b97\u6570\u7ec4\u548c\u6307\u9488\u7684\u5185\u5b58\u5bb9\u91cf", "\nvoid Func(char a[100])", "\n{", "\ncout<< sizeof(a) << endl; // 4 \u5b57\u8282\u800c\u4e0d\u662f100 \u5b57\u8282", "\n}"], "title": "\u7b80\u8ff0\u6570\u7ec4\u4e0e\u6307\u9488\u7684\u533a\u522b\uff1f"},
{"contents": ["\u7b54\u6848\uff1astruct \u7684\u6210\u5458\u9ed8\u8ba4\u662f\u516c\u6709\u7684\uff0c\u800c\u7c7b\u7684\u6210\u5458\u9ed8\u8ba4\u662f\u79c1\u6709\u7684\u3002struct \u548c class \u5728\u5176\u4ed6\u65b9\u9762\u662f\u529f\u80fd\u76f8\u5f53\u7684\u3002", "\n\u4ece\u611f\u60c5\u4e0a\u8bb2\uff0c\u5927\u591a\u6570\u7684\u5f00\u53d1\u8005\u611f\u5230\u7c7b\u548c\u7ed3\u6784\u6709\u5f88\u5927\u7684\u5dee\u522b\u3002\u611f\u89c9\u4e0a\u7ed3\u6784\u4ec5\u4ec5\u8c61\u4e00\u5806\u7f3a\u4e4f\u5c01\u88c5\u548c\u529f\u80fd\u7684\u5f00\u653e\u7684\u5185\u5b58\u4f4d\uff0c\u800c\u7c7b\u5c31\u8c61\u6d3b\u7684\u5e76\u4e14\u53ef\u9760\u7684\u793e\u4f1a\u6210\u5458\uff0c\u5b83\u6709\u667a\u80fd\u670d\u52a1\uff0c\u6709\u7262\u56fa\u7684\u5c01\u88c5\u5c4f\u969c\u548c\u4e00\u4e2a\u826f\u597d\u5b9a\u4e49\u7684\u63a5\u53e3\u3002\u65e2\u7136\u5927\u591a\u6570\u4eba\u90fd\u8fd9\u4e48\u8ba4\u4e3a\uff0c\u90a3\u4e48\u53ea\u6709\u5728\u4f60\u7684\u7c7b\u6709\u5f88\u5c11\u7684\u65b9\u6cd5\u5e76\u4e14\u6709\u516c\u6709\u6570\u636e\uff08\u8fd9\u79cd\u4e8b\u60c5\u5728\u826f\u597d\u8bbe\u8ba1\u7684\u7cfb\u7edf\u4e2d\u662f\u5b58\u5728\u7684!\uff09\u65f6\uff0c\u4f60\u4e5f\u8bb8\u5e94\u8be5\u4f7f\u7528 struct \u5173\u952e\u5b57\uff0c\u5426\u5219\uff0c\u4f60\u5e94\u8be5\u4f7f\u7528 class \u5173\u952e\u5b57\u3002"], "title": "struct \u548c class \u7684\u533a\u522b"},
{"contents": ["\u7b54\u6848\uff1a\u4e0d\u662f\u3002\u4e24\u4e2a\u4e0d\u540c\u7c7b\u578b\u7684\u6307\u9488\u4e4b\u95f4\u53ef\u4ee5\u5f3a\u5236\u8f6c\u6362\uff08\u7528reinterpret cast)\u3002C#\u662f\u7c7b\u578b\u5b89\u5168\u7684\u3002"], "title": "C++\u662f\u4e0d\u662f\u7c7b\u578b\u5b89\u5168\u7684\uff1f"},
{"contents": ["\u7b54\u6848\uff1a\u5f53\u7c7b\u4e2d\u542b\u6709const\u3001reference \u6210\u5458\u53d8\u91cf\uff1b\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u90fd\u9700\u8981\u521d\u59cb\u5316\u8868\u3002"], "title": "\u7b54\u6848\uff1a\u5f53\u7c7b\u4e2d\u542b\u6709const\u3001reference \u6210\u5458\u53d8\u91cf\uff1b\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u90fd\u9700\u8981\u521d\u59cb\u5316\u8868\u3002"},
{"contents": ["\u9996\u5148\uff0c\u4f5c\u4e3aextern\u662fC/C++\u8bed\u8a00\u4e2d\u8868\u660e\u51fd\u6570\u548c\u5168\u5c40\u53d8\u91cf\u4f5c\u7528\u8303\u56f4\uff08\u53ef\u89c1\u6027\uff09\u7684\u5173\u952e\u5b57\uff0c\u8be5\u5173\u952e\u5b57\u544a\u8bc9\u7f16\u8bd1\u5668\uff0c\u5176\u58f0\u660e\u7684\u51fd\u6570\u548c\u53d8\u91cf\u53ef\u4ee5\u5728\u672c\u6a21\u5757\u6216\u5176\u5b83\u6a21\u5757\u4e2d\u4f7f\u7528\u3002", "\n\u901a\u5e38\uff0c\u5728\u6a21\u5757\u7684\u5934\u6587\u4ef6\u4e2d\u5bf9\u672c\u6a21\u5757\u63d0\u4f9b\u7ed9\u5176\u5b83\u6a21\u5757\u5f15\u7528\u7684\u51fd\u6570\u548c\u5168\u5c40\u53d8\u91cf\u4ee5\u5173\u952e\u5b57extern\u58f0\u660e\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6a21\u5757B\u6b32\u5f15\u7528\u8be5\u6a21\u5757A\u4e2d\u5b9a\u4e49\u7684\u5168\u5c40\u53d8\u91cf\u548c\u51fd\u6570\u65f6\u53ea\u9700\u5305\u542b\u6a21\u5757A\u7684\u5934\u6587\u4ef6\u5373\u53ef\u3002\u8fd9\u6837\uff0c\u6a21\u5757B\u4e2d\u8c03\u7528\u6a21\u5757A\u4e2d\u7684\u51fd\u6570\u65f6\uff0c\u5728\u7f16\u8bd1\u9636\u6bb5\uff0c\u6a21\u5757B\u867d\u7136\u627e\u4e0d\u5230\u8be5\u51fd\u6570\uff0c\u4f46\u662f\u5e76\u4e0d\u4f1a\u62a5\u9519\uff1b\u5b83\u4f1a\u5728\u8fde\u63a5\u9636\u6bb5\u4e2d\u4ece\u6a21\u5757A\u7f16\u8bd1\u751f\u6210\u7684\u76ee\u6807\u4ee3\u7801\u4e2d\u627e\u5230\u6b64\u51fd\u6570", "\nextern \u201cC\u201d\u662f\u8fde\u63a5\u7533\u660e(linkage declaration),\u88abextern \u201cC\u201d\u4fee\u9970\u7684\u53d8\u91cf\u548c\u51fd\u6570\u662f\u6309\u7167C\u8bed\u8a00\u65b9\u5f0f\u7f16\u8bd1\u548c\u8fde\u63a5\u7684,\u6765\u770b\u770bC++\u4e2d\u5bf9\u7c7b\u4f3cC\u7684\u51fd\u6570\u662f\u600e\u6837\u7f16\u8bd1\u7684\uff1a", "\u4f5c\u4e3a\u4e00\u79cd\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\uff0cC++\u652f\u6301\u51fd\u6570\u91cd\u8f7d\uff0c\u800c\u8fc7\u7a0b\u5f0f\u8bed\u8a00C\u5219\u4e0d\u652f\u6301\u3002\u51fd\u6570\u88abC++\u7f16\u8bd1\u540e\u5728\u7b26\u53f7\u5e93\u4e2d\u7684\u540d\u5b57\u4e0eC\u8bed\u8a00\u7684\u4e0d\u540c\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u67d0\u4e2a\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a", "\nvoid foo( int x, int y );", "\n\u3000\u3000", "\n\u8be5\u51fd\u6570\u88abC\u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u5728\u7b26\u53f7\u5e93\u4e2d\u7684\u540d\u5b57\u4e3a_foo\uff0c\u800cC++\u7f16\u8bd1\u5668\u5219\u4f1a\u4ea7\u751f\u50cf_foo_int_int\u4e4b\u7c7b\u7684\u540d\u5b57\uff08\u4e0d\u540c\u7684\u7f16\u8bd1\u5668\u53ef\u80fd\u751f\u6210\u7684\u540d\u5b57\u4e0d\u540c\uff0c\u4f46\u662f\u90fd\u91c7\u7528\u4e86\u76f8\u540c\u7684\u673a\u5236\uff0c\u751f\u6210\u7684\u65b0\u540d\u5b57\u79f0\u4e3a\u201cmangled name\u201d\uff09\u3002", "_foo_int_int\u8fd9\u6837\u7684\u540d\u5b57\u5305\u542b\u4e86\u51fd\u6570\u540d\u3001\u51fd\u6570\u53c2\u6570\u6570\u91cf\u53ca\u7c7b\u578b\u4fe1\u606f\uff0cC++\u5c31\u662f\u9760\u8fd9\u79cd\u673a\u5236\u6765\u5b9e\u73b0\u51fd\u6570\u91cd\u8f7d\u7684\u3002\u4f8b\u5982\uff0c\u5728C++\u4e2d\uff0c\u51fd\u6570void foo( int x, int y )\u4e0evoid foo( int x, float y )\u7f16\u8bd1\u751f\u6210\u7684\u7b26\u53f7\u662f\u4e0d\u76f8\u540c\u7684\uff0c\u540e\u8005\u4e3a_foo_int_float\u3002", "\n\u540c\u6837\u5730\uff0cC++\u4e2d\u7684\u53d8\u91cf\u9664\u652f\u6301\u5c40\u90e8\u53d8\u91cf\u5916\uff0c\u8fd8\u652f\u6301\u7c7b\u6210\u5458\u53d8\u91cf\u548c\u5168\u5c40\u53d8\u91cf\u3002\u7528\u6237\u6240\u7f16\u5199\u7a0b\u5e8f\u7684\u7c7b\u6210\u5458\u53d8\u91cf\u53ef\u80fd\u4e0e\u5168\u5c40\u53d8\u91cf\u540c\u540d\uff0c\u6211\u4eec\u4ee5\u201d.\u201d\u6765\u533a\u5206\u3002\u800c\u672c\u8d28\u4e0a\uff0c\u7f16\u8bd1\u5668\u5728\u8fdb\u884c\u7f16\u8bd1\u65f6\uff0c\u4e0e\u51fd\u6570\u7684\u5904\u7406\u76f8\u4f3c\uff0c\u4e5f\u4e3a\u7c7b\u4e2d\u7684\u53d8\u91cf\u53d6\u4e86\u4e00\u4e2a\u72ec\u4e00\u65e0\u4e8c\u7684\u540d\u5b57\uff0c\u8fd9\u4e2a\u540d\u5b57\u4e0e\u7528\u6237\u7a0b\u5e8f\u4e2d\u540c\u540d\u7684\u5168\u5c40\u53d8\u91cf\u540d\u5b57\u4e0d\u540c\u3002", "\u672a\u52a0extern \u201cC\u201d\u58f0\u660e\u65f6\u7684\u8fde\u63a5\u65b9\u5f0f", "\n\u5047\u8bbe\u5728C++\u4e2d\uff0c\u6a21\u5757A\u7684\u5934\u6587\u4ef6\u5982\u4e0b\uff1a", "\n// \u6a21\u5757A\u5934\u6587\u4ef6\u3000moduleA.h", "\n#ifndef MODULE_A_H", "\n#define MODULE_A_H", "\nint foo( int x, int y );", "\n#endif\u3000\u3000", "\n\u5728\u6a21\u5757B\u4e2d\u5f15\u7528\u8be5\u51fd\u6570\uff1a", "\n// \u6a21\u5757B\u5b9e\u73b0\u6587\u4ef6\u3000moduleB.cpp", "\n\uff03i nclude \u201cmoduleA.h\u201d", "\nfoo(2,3);", "\n\u3000\u3000", "\n\u5b9e\u9645\u4e0a\uff0c\u5728\u8fde\u63a5\u9636\u6bb5\uff0c\u8fde\u63a5\u5668\u4f1a\u4ece\u6a21\u5757A\u751f\u6210\u7684\u76ee\u6807\u6587\u4ef6moduleA.obj\u4e2d\u5bfb\u627e_foo_int_int\u8fd9\u6837\u7684\u7b26\u53f7\uff01", "\u52a0extern \u201cC\u201d\u58f0\u660e\u540e\u7684\u7f16\u8bd1\u548c\u8fde\u63a5\u65b9\u5f0f", "\u52a0extern \u201cC\u201d\u58f0\u660e\u540e\uff0c\u6a21\u5757A\u7684\u5934\u6587\u4ef6\u53d8\u4e3a\uff1a", "\n// \u6a21\u5757A\u5934\u6587\u4ef6\u3000moduleA.h", "\n#ifndef MODULE_A_H", "\n#define MODULE_A_H", "\nextern \u201cC\u201d int foo( int x, int y );", "\n#endif\u3000\u3000", "\n\u5728\u6a21\u5757B\u7684\u5b9e\u73b0\u6587\u4ef6\u4e2d\u4ecd\u7136\u8c03\u7528foo( 2,3 )\uff0c\u5176\u7ed3\u679c\u662f\uff1a", "\n\uff081\uff09\u6a21\u5757A\u7f16\u8bd1\u751f\u6210foo\u7684\u76ee\u6807\u4ee3\u7801\u65f6\uff0c\u6ca1\u6709\u5bf9\u5176\u540d\u5b57\u8fdb\u884c\u7279\u6b8a\u5904\u7406\uff0c\u91c7\u7528\u4e86C\u8bed\u8a00\u7684\u65b9\u5f0f\uff1b", "\n\uff082\uff09\u8fde\u63a5\u5668\u5728\u4e3a\u6a21\u5757B\u7684\u76ee\u6807\u4ee3\u7801\u5bfb\u627efoo(2,3)\u8c03\u7528\u65f6\uff0c\u5bfb\u627e\u7684\u662f\u672a\u7ecf\u4fee\u6539\u7684\u7b26\u53f7\u540d_foo\u3002", "\u5982\u679c\u5728\u6a21\u5757A\u4e2d\u51fd\u6570\u58f0\u660e\u4e86foo\u4e3aextern \u201cC\u201d\u7c7b\u578b\uff0c\u800c\u6a21\u5757B\u4e2d\u5305\u542b\u7684\u662fextern int foo( int x, int y ) \uff0c\u5219\u6a21\u5757B\u627e\u4e0d\u5230\u6a21\u5757A\u4e2d\u7684\u51fd\u6570\uff1b\u53cd\u4e4b\u4ea6\u7136\u3002", "\u6240\u4ee5\uff0c\u53ef\u4ee5\u7528\u4e00\u53e5\u8bdd\u6982\u62ecextern \u201cC\u201d\u8fd9\u4e2a\u58f0\u660e\u7684\u771f\u5b9e\u76ee\u7684\uff08\u4efb\u4f55\u8bed\u8a00\u4e2d\u7684\u4efb\u4f55\u8bed\u6cd5\u7279\u6027\u7684\u8bde\u751f\u90fd\u4e0d\u662f\u968f\u610f\u800c\u4e3a\u7684\uff0c\u6765\u6e90\u4e8e\u771f\u5b9e\u4e16\u754c\u7684\u9700\u6c42\u9a71\u52a8\u3002\u6211\u4eec\u5728\u601d\u8003\u95ee\u9898\u65f6\uff0c\u4e0d\u80fd\u53ea\u505c\u7559\u5728\u8fd9\u4e2a\u8bed\u8a00\u662f\u600e\u4e48\u505a\u7684\uff0c\u8fd8\u8981\u95ee\u4e00\u95ee\u5b83\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u505a\uff0c\u52a8\u673a\u662f\u4ec0\u4e48\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u66f4\u6df1\u5165\u5730\u7406\u89e3\u8bb8\u591a\u95ee\u9898\uff09\uff1a\u5b9e\u73b0C++\u4e0eC\u53ca\u5176\u5b83\u8bed\u8a00\u7684\u6df7\u5408\u7f16\u7a0b\u3002\u3000\u3000", "\n\u660e\u767d\u4e86C++\u4e2dextern \u201cC\u201d\u7684\u8bbe\u7acb\u52a8\u673a\uff0c\u6211\u4eec\u4e0b\u9762\u6765\u5177\u4f53\u5206\u6790extern \u201cC\u201d\u901a\u5e38\u7684\u4f7f\u7528\u6280\u5de7\uff1a", "\nextern \u201cC\u201d\u7684\u60ef\u7528\u6cd5", "\uff081\uff09\u5728C++\u4e2d\u5f15\u7528C\u8bed\u8a00\u4e2d\u7684\u51fd\u6570\u548c\u53d8\u91cf\uff0c\u5728\u5305\u542bC\u8bed\u8a00\u5934\u6587\u4ef6\uff08\u5047\u8bbe\u4e3acExample.h\uff09\u65f6\uff0c\u9700\u8fdb\u884c\u4e0b\u5217\u5904\u7406\uff1a", "\nextern \u201cC\u201d", "\n{", "\n\uff03i nclude \u201ccExample.h\u201d", "\n}", "\n\u800c\u5728C\u8bed\u8a00\u7684\u5934\u6587\u4ef6\u4e2d\uff0c\u5bf9\u5176\u5916\u90e8\u51fd\u6570\u53ea\u80fd\u6307\u5b9a\u4e3aextern\u7c7b\u578b\uff0cC\u8bed\u8a00\u4e2d\u4e0d\u652f\u6301extern \u201cC\u201d\u58f0\u660e\uff0c\u5728.c\u6587\u4ef6\u4e2d\u5305\u542b\u4e86extern \u201cC\u201d\u65f6\u4f1a\u51fa\u73b0\u7f16\u8bd1\u8bed\u6cd5\u9519\u8bef\u3002", "C++\u5f15\u7528C\u51fd\u6570\u4f8b\u5b50\u5de5\u7a0b\u4e2d\u5305\u542b\u7684\u4e09\u4e2a\u6587\u4ef6\u7684\u6e90\u4ee3\u7801\u5982\u4e0b\uff1a", "\n/* c\u8bed\u8a00\u5934\u6587\u4ef6\uff1acExample.h */", "\n#ifndef C_EXAMPLE_H", "\n#define C_EXAMPLE_H", "\nextern int add(int x,int y);", "\n#endif", "/* c\u8bed\u8a00\u5b9e\u73b0\u6587\u4ef6\uff1acExample.c */", "\n\uff03i nclude \u201ccExample.h\u201d", "\nint add( int x, int y )", "\n{", "\nreturn x + y;", "\n}", "// c++\u5b9e\u73b0\u6587\u4ef6\uff0c\u8c03\u7528add\uff1acppFile.cpp", "\nextern \u201cC\u201d", "\n{", "\n\uff03i nclude \u201ccExample.h\u201d", "\n}", "\nint main(int argc, char* argv[])", "\n{", "\nadd(2,3);", "\nreturn 0;", "\n}", "\n\u5982\u679cC++\u8c03\u7528\u4e00\u4e2aC\u8bed\u8a00\u7f16\u5199\u7684.DLL\u65f6\uff0c\u5f53\u5305\u62ec.DLL\u7684\u5934\u6587\u4ef6\u6216\u58f0\u660e\u63a5\u53e3\u51fd\u6570\u65f6\uff0c\u5e94\u52a0extern \u201cC\u201d {\u3000}\u3002", "\n\uff082\uff09\u5728C\u4e2d\u5f15\u7528C++\u8bed\u8a00\u4e2d\u7684\u51fd\u6570\u548c\u53d8\u91cf\u65f6\uff0cC++\u7684\u5934\u6587\u4ef6\u9700\u6dfb\u52a0extern \u201cC\u201d\uff0c\u4f46\u662f\u5728C\u8bed\u8a00\u4e2d\u4e0d\u80fd\u76f4\u63a5\u5f15\u7528\u58f0\u660e\u4e86extern \u201cC\u201d\u7684\u8be5\u5934\u6587\u4ef6\uff0c\u5e94\u8be5\u4ec5\u5c06C\u6587\u4ef6\u4e2d\u5c06C++\u4e2d\u5b9a\u4e49\u7684extern \u201cC\u201d\u51fd\u6570\u58f0\u660e\u4e3aextern\u7c7b\u578b\u3002", "\nC\u5f15\u7528C++\u51fd\u6570\u4f8b\u5b50\u5de5\u7a0b\u4e2d\u5305\u542b\u7684\u4e09\u4e2a\u6587\u4ef6\u7684\u6e90\u4ee3\u7801\u5982\u4e0b\uff1a", "\n//C++\u5934\u6587\u4ef6 cppExample.h", "\n#ifndef CPP_EXAMPLE_H", "\n#define CPP_EXAMPLE_H", "\nextern \u201cC\u201d int add( int x, int y );", "\n#endif", "//C++\u5b9e\u73b0\u6587\u4ef6 cppExample.cpp", "\n\uff03i nclude \u201ccppExample.h\u201d", "\nint add( int x, int y )", "\n{", "\nreturn x + y;", "\n}", "/* C\u5b9e\u73b0\u6587\u4ef6 cFile.c", "\n/* \u8fd9\u6837\u4f1a\u7f16\u8bd1\u51fa\u9519\uff1a\uff03i nclude \u201ccExample.h\u201d */", "\nextern int add( int x, int y );", "\nint main( int argc, char* argv[] )", "\n{", "\nadd( 2, 3 );", "\nreturn 0;", "\n}"], "title": "\u5728C++ \u7a0b\u5e8f\u4e2d\u8c03\u7528\u88abC \u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u7684\u51fd\u6570\uff0c\u4e3a\u4ec0\u4e48\u8981\u52a0extern \u201cC\u201d\uff1f"},
{"contents": ["\u7b54\u6848\uff1a\u90fd\u662f\u5728\u5806(heap)\u4e0a\u8fdb\u884c\u52a8\u6001\u7684\u5185\u5b58\u64cd\u4f5c\u3002\u7528malloc\u51fd\u6570\u9700\u8981\u6307\u5b9a\u5185\u5b58\u5206\u914d\u7684\u5b57\u8282\u6570\u5e76\u4e14\u4e0d\u80fd\u521d\u59cb\u5316\u5bf9\u8c61\uff0cnew \u4f1a\u81ea\u52a8\u8c03\u7528\u5bf9\u8c61\u7684\u6784\u9020\u51fd\u6570\u3002delete \u4f1a\u8c03\u7528\u5bf9\u8c61\u7684destructor\uff0c\u800cfree \u4e0d\u4f1a\u8c03\u7528\u5bf9\u8c61\u7684destructor."], "title": "New delete \u4e0emalloc free \u7684\u8054\u7cfb\u4e0e\u533a\u522b?"},
{"contents": ["\u6d89\u53ca\u5230UML\u4e2d\u7684\u4e00\u4e9b\u6982\u5ff5\uff1a\u5173\u8054\u662f\u8868\u793a\u4e24\u4e2a\u7c7b\u7684\u4e00\u822c\u6027\u8054\u7cfb\uff0c\u6bd4\u5982\u201c\u5b66\u751f\u201d\u548c\u201c\u8001\u5e08\u201d\u5c31\u662f\u4e00\u79cd\u5173\u8054\u5173\u7cfb\uff1b\u805a\u5408\u8868\u793ahas-a\u7684\u5173\u7cfb\uff0c\u662f\u4e00\u79cd\u76f8\u5bf9\u677e\u6563\u7684\u5173\u7cfb\uff0c\u805a\u5408\u7c7b\u4e0d\u9700\u8981\u5bf9\u88ab\u805a\u5408\u7c7b\u8d1f\u8d23\uff0c\u7528\u7a7a\u7684\u83f1\u5f62\u8868\u793a\u805a\u5408\u5173\u7cfb", "\u4ece\u5b9e\u73b0\u7684\u89d2\u5ea6\u8bb2\uff0c\u805a\u5408\u53ef\u4ee5\u8868\u793a\u4e3a:", "\nclass A {\u2026}\u00a0 class B { A* a; \u2026..}", "\n\u800c\u7ec4\u5408\u8868\u793acontains-a\u7684\u5173\u7cfb\uff0c\u5173\u8054\u6027\u5f3a\u4e8e\u805a\u5408\uff1a\u7ec4\u5408\u7c7b\u4e0e\u88ab\u7ec4\u5408\u7c7b\u6709\u76f8\u540c\u7684\u751f\u547d\u5468\u671f\uff0c\u7ec4\u5408\u7c7b\u8981\u5bf9\u88ab\u7ec4\u5408\u7c7b\u8d1f\u8d23\uff0c\u91c7\u7528\u5b9e\u5fc3\u7684\u83f1\u5f62\u8868\u793a\u7ec4\u5408\u5173\u7cfb", "\u5b9e\u73b0\u7684\u5f62\u5f0f\u662f:", "\nclass A{\u2026} class B{ A a; \u2026}"], "title": "\u5173\u8054\u3001\u805a\u5408(Aggregation)\u4ee5\u53ca\u7ec4\u5408(Composition)\u7684\u533a\u522b\uff1f"},
{"contents": ["\u9884\u7f16\u8bd1\u53c8\u79f0\u4e3a\u9884\u5904\u7406 , \u662f\u505a\u4e9b\u4ee3\u7801\u6587\u672c\u7684\u66ff\u6362\u5de5\u4f5c\u3002\u5904\u7406 # \u5f00\u5934\u7684\u6307\u4ee4 , \u6bd4\u5982\u62f7\u8d1d #include \t\u5305\u542b\u7684\u6587\u4ef6\u4ee3\u7801\uff0c #define \u5b8f\u5b9a\u4e49\u7684\u66ff\u6362 , \u6761\u4ef6\u7f16\u8bd1\u7b49\uff0c\u5c31\u662f\u4e3a\u7f16\u8bd1\u505a\u7684\u9884\u5907\u5de5\u4f5c\u7684\u9636\u6bb5\uff0c\u4e3b\u8981\u5904\u7406#\u5f00\u59cb\u7684\u9884\u7f16\u8bd1\u6307\u4ee4\uff0c\u9884\u7f16\u8bd1\u6307\u4ee4\u6307\u793a\u4e86\u5728\u7a0b\u5e8f\u6b63\u5f0f\u7f16\u8bd1\u524d\u5c31\u7531\u7f16\u8bd1\u5668\u8fdb\u884c\u7684\u64cd\u4f5c\uff0c\u53ef\u4ee5\u653e\u5728\u7a0b\u5e8f\u4e2d\u7684\u4efb\u4f55\u4f4d\u7f6e\u3002", "\nc \u7f16\u8bd1\u7cfb\u7edf\u5728\u5bf9\u7a0b\u5e8f\u8fdb\u884c\u901a\u5e38\u7684\u7f16\u8bd1\u4e4b\u524d\uff0c\u5148\u8fdb\u884c\u9884\u5904\u7406\u3002 c \u63d0\u4f9b\u7684\u9884\u5904\u7406\u529f\u80fd\u4e3b\u8981\u6709\u4ee5\u4e0b\u4e09\t\u79cd\uff1a 1 \uff09\u5b8f\u5b9a\u4e49\u3000 2 \uff09\u6587\u4ef6\u5305\u542b\u3000 3 \uff09\u6761\u4ef6\u7f16\u8bd1"], "title": "\u4ec0\u4e48\u662f\u9884\u7f16\u8bd1 \u4f55\u65f6\u9700\u8981\u9884\u7f16\u8bd1\uff1f"},
{"contents": ["a)", "\n\uff03i nclude <stdio.h>", "\nunion", "\n{", "\nint i;", "\nchar x[2];", "\n}a;", "void main()", "\n{", "\na.x[0] = 10;", "\na.x[1] = 1;", "\nprintf(\u201c%d\u201d,a.i);", "\n}", "\n\u7b54\u6848\uff1a266 (\u4f4e\u4f4d\u4f4e\u5730\u5740\uff0c\u9ad8\u4f4d\u9ad8\u5730\u5740\uff0c\u5185\u5b58\u5360\u7528\u60c5\u51b5\u662fOx010A\uff09", "\nb)", "\n\u00a0\u00a0\u00a0\u00a0 main()", "\n\u00a0\u00a0\u00a0\u00a0 {", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 union{\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 /*\u5b9a\u4e49\u4e00\u4e2a\u8054\u5408*/", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int i;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 struct{\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 /*\u5728\u8054\u5408\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784*/", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 char first;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 char second;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }half;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }number;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 number.i=0\u00d74241;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 /*\u8054\u5408\u6210\u5458\u8d4b\u503c*/", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c%c%c\\n\u201d, number.half.first, mumber.half.second);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 number.half.first=\u2019a';\u00a0\u00a0 /*\u8054\u5408\u4e2d\u7ed3\u6784\u6210\u5458\u8d4b\u503c*/", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 number.half.second=\u2019b';", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c%x\\n\u201d, number.i);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 getch();", "\n\u00a0\u00a0\u00a0\u00a0 }", "\n\u7b54\u6848\uff1a AB\u00a0\u00a0 (0\u00d741\u5bf9\u5e94\u2019A',\u662f\u4f4e\u4f4d\uff1bOx42\u5bf9\u5e94\u2019B',\u662f\u9ad8\u4f4d\uff09", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 6261 (number.i\u548cnumber.half\u5171\u7528\u4e00\u5757\u5730\u5740\u7a7a\u95f4\uff09"], "title": "\u4e0b\u9762\u5173\u4e8e\u201c\u8054\u5408\u201d\u7684\u9898\u76ee\u7684\u8f93\u51fa\u662f\u4ec0\u4e48\uff1f"},
{"contents": ["\u53c2\u8003\u7b54\u6848\uff1a\u2460exit\uff08\uff09\u51fd\u6570\u5728\u9000\u51fa\u7a0b\u5e8f\u540e\u4f1a\u5c06\u63a7\u5236\u6743\u4ea4\u56de\u7ed9\u64cd\u4f5c\u7cfb\u7edf", "\n          \u2461\u5f53\u901a\u8fc7return\u8bed\u53e5\u4ece\u4e00\u822c\u51fd\u6570\u8fd4\u56de\u65f6\u63a7\u5236\u6743\u5c06\u4ea4\u7ed9\u8c03\u7528\u8be5\u51fd\u6570\u7684\u51fd\u6570", "\n          \u2462\u5728main()\u51fd\u6570\u4e2d\u4f7f\u7528return\u8bed\u53e5\u8fd4\u56de\u540e\uff0c\u63a7\u5236\u6743\u5c06\u4ea4\u7ed9\u64cd\u4f5c\u7cfb\u7edf\uff0c\u56e0\u6b64\u5728\u4e3b\u51fd\u6570\u4e2dreturn\u8bed\u53e5\u7684\u529f\u80fd\u4e0eexit\uff08\uff09\u51fd\u6570\u529f\u80fd\u76f8\u540c\u3002"], "title": "exit\uff08\uff09\u51fd\u6570\u548creturn \u8bed\u53e5\u6709\u4ec0\u4e48\u533a\u522b\u4e48"},
{"contents": ["\u53c2\u8003\u7b54\u6848\uff1achar *strcpy( char *to, const char *from );", "\n          //\u590d\u5236\u5b57\u7b26\u4e32from \u4e2d\u7684\u5b57\u7b26\u5230\u5b57\u7b26\u4e32to\uff0c\u5305\u62ec\u7a7a\u503c\u7ed3\u675f\u7b26\u3002\u8fd4\u56de\u503c\u4e3a\u6307\u9488to", "\n          void *memcpy( void *to, const void *from, size_t count );", "\n          //\u51fd\u6570\u4ecefrom\u4e2d\u590d\u5236count \u4e2a\u5b57\u7b26\u5230to\u4e2d\uff0c\u5e76\u8fd4\u56deto\u6307\u9488\u3002 \u5982\u679cto \u548c from \u91cd\u53e0\uff0c\u5219\u51fd\u6570\u884c\u4e3a\u4e0d\u786e\u5b9a", "\n\t       \u2460\u590d\u5236\u5185\u5bb9\u4e0d\u540c\u3002strcpy\u53ea\u80fd\u8d4b\u503c\u5b57\u7b26\u4e32\uff0cmemcpy\u53ef\u4ee5\u590d\u5236\u4efb\u610f\u5185\u5bb9", "\n        \u2461\u590d\u5236\u7684\u65b9\u6cd5\u4e0d\u540c\u3002strcpy\u4e0d\u9700\u8981\u6307\u5b9a\u957f\u5ea6\uff0c\u5b83\u9047\u5230\u5b57\u7b26\u4e32\u2019\\0\u2019\u81ea\u52a8\u7ed3\u675f\uff1bmemcpy\u5219\u662f\u6839\u636e\u7b2c\u7b2c3\u4e2a\u53c2\u6570\u51b3\u5b9a\u590d\u5236\u7684\u957f\u5ea6", "\n\t\u2462\u7528\u9014\u4e0d\u540c\uff1a\u901a\u5e38\u5728\u590d\u5236\u5b57\u7b26\u4e32\u65f6\u7528strcpy\uff0c\u9700\u8981\u590d\u5236\u5176\u4ed6\u7c7b\u578b\u662f\u9700\u8981\u7528memcpy"], "title": "strcpy\u4e0ememcpy\u7684\u533a\u522b\uff1f"},
{"contents": ["\u53c2\u8003\u7b54\u6848\uff1a\u5728C\u8bed\u8a00\u4e2d\u4e5f\u6709\u4e00\u4e2a\u5e93\u51fd\u6570\u2014\u2013atexit\uff08\uff09\uff0c\u5b83\u7684\u4f5c\u7528\u5c31\u662f\u4ee4\u7a0b\u5e8f\u5728\u9000\u51famain\uff08\uff09\u51fd\u6570\u4e4b\u540e\u5f7b\u5e95\u7ec8\u6b62\u4e4b\u524d\u81ea\u52a8\u5b8c\u6210\u7684\u4e00\u4e9b\u7279\u5b9a\u7684\u5de5\u4f5c\uff0catexit\uff08\uff09\u5e93\u51fd\u6570\u4e2d\u8bb0\u5f55\u4e86\u6307\u5411\u8fd9\u4e9b\u5b8c\u6210\u7279\u5b9a\u64cd\u4f5c\u51fd\u6570\u7684\u6307\u9488", "\nPS\uff1a\u9700\u8981\u4f7f\u7528\u5e93\u51fd\u6570atrxit\uff08\uff09\u6307\u5b9a\u7684\u51fd\u6570\u4e0d\u80fd\u5305\u542b\u4efb\u4f55\u7684\u53c2\u6570\u548c\u8fd4\u56de\u503c\uff1b", "\n\u901a\u8fc7atexit\uff08\uff09\u6307\u5b9a\u7684\u5b8c\u6210\u7279\u5b9a\u5de5\u4f5c\u7684\u51fd\u6570\u6267\u884c\u987a\u5e8f\u548c\u751f\u547d\u987a\u5e8f\u76f8\u53cd\uff1b"], "title": "atexit\u51fd\u6570\u505a\u4ec0\u4e48\u7684"},
{"contents": ["1. \u5199\u4e00\u4e2a\u201c\u6807\u51c6\u201d\u5b8fMIN\uff0c\u8fd9\u4e2a\u5b8f\u8f93\u5165\u4e24\u4e2a\u53c2\u6570\u5e76\u8fd4\u56de\u8f83\u5c0f\u7684\u4e00\u4e2a", "\n#define MIN(A,B) ((A) \n2.\u5b8f\u5b9a\u4e49\u5f97\u5230\u4e00\u4e2a\u6570\u7ec4\u6240\u542b\u7684\u5143\u7d20\u4e2a\u6570", "\n#define ARR_SIZE\uff08a\uff09\uff08sizeof\uff08\uff08a\uff09\uff09/sizeof\uff08\uff08a[0]\uff09\uff09\uff09", "\n3. \u7528\u5b8f\u5b9a\u4e49\u5f97\u5230\u4e00\u4e2a\u5b57\u7684\u9ad8\u4f4d\u548c\u4f4e\u4f4d\u5b57\u8282", "\n #define WORD_LO(XXX)((byte)((word)(xxx)&255))", "\n#define WORD_HI(XXX)((byte)((word)(xxx)>>8))", "\n4. \u5185\u8054\u51fd\u6570\u4e0e\u5b8f\u6709\u4ec0\u4e48\u533a\u522b", "\n\u53c2\u8003\u7b54\u6848\uff1a\u5185\u8054\u51fd\u6570\u5728\u7f16\u8bd1\u65f6\u5c55\u5f00\uff0c\u5b8f\u5728\u9884\u7f16\u8bd1\u65f6\u5c55\u5f00", "\n\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u5185\u8054\u51fd\u6570\u53ef\u4ee5\u76f4\u63a5\u88ab\u5d4c\u5165\u5230\u76ee\u6807\u4ee3\u7801\u4e2d\uff0c\u800c\u5b8f\u53ea\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u6587\u672c\u66ff\u6362", "\n\u5185\u8054\u51fd\u6570\u53ef\u4ee5\u5b8c\u6210\u8bf8\u5982\u7c7b\u578b\u68c0\u6d4b\u3001\u8bed\u53e5\u662f\u5426\u6b63\u786e\u7b49\u7f16\u8bd1\u529f\u80fd\uff0c\u5b8f\u5c31\u4e0d\u5177\u5907\u8fd9\u6837\u7684\u529f\u80fd", "\ninline\u51fd\u6570\u662f\u51fd\u6570\uff0c\u5b8f\u4e0d\u662f\u51fd\u6570\u3002", "\n\u5b8f\u5728\u5b9a\u4e49\u65f6\u8981\u5c0f\u5fc3\u5904\u7406\u5b8f\u53c2\u6570\uff08\u4e00\u822c\u60c5\u51b5\u628a\u53c2\u6570\u7528\u62ec\u53f7\u62ec\u8d77\u6765\uff09\uff0c\u5426\u5219\u5bb9\u6613\u51fa\u73b0\u4e8c\u4e49\u6027\u3002", "\n5. \u6784\u4f53\uff08struct\uff09\u548c\u8054\u5408\u4f53\uff08union\uff09\u7684\u533a\u522b?", "\n\u53c2\u8003\u7b54\u6848\uff1astruct\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u5305\u542b\u591a\u4e2a\u4e0d\u540c\u53d8\u91cf\u7684\u7c7b\u578b\uff0c\u6bcf\u4e00\u4e2a\u53d8\u91cf\u5728\u5185\u5b58\u4e2d\u5360\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u53ef\u4ee5\u540c\u65f6\u5b58\u50a8\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\u3002", "\n\tunion\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u5305\u542b\u591a\u4e2a\u4e0d\u540c\u53d8\u91cf\u7c7b\u578b\uff0c\u4f46\u8fd9\u4e9b\u53d8\u91cf\u53ea\u5171\u6709\u540c\u4e00\u4e2a\u5185\u5b58\u7a7a\u95f4\uff0c\u6bcf\u6b21\u53ea\u80fd\u4f7f\u7528\u5176\u4e2d\u7684\u4e00\u79cd\u53d8\u91cf\u5b58\u50a8\u6570\u636e\u3002", "\n6. C++\u4e2d\u76844\u79cd\u7c7b\u578b\u8f6c\u6362\u65b9\u5f0f", "\n\u53c2\u8003\u7b54\u6848\uff1astatic_cast\u3001dynamic_cast\u3001reinterpret_cast\u3001\u548cconst_cast\u3002", "\n7. Heap\u4e0estack\u7684\u5dee\u522b", "\n\u53c2\u8003\u7b54\u6848\uff1astack\u662f\u6808\uff0cHeap\u662f\u5806\u3002", "\n\t   Stack\u7684\u7a7a\u95f4\u7531\u64cd\u4f5c\u7cfb\u7edf\u81ea\u52a8\u5206\u914d/\u91ca\u653e\uff0cHeap\u4e0a\u7684\u7a7a\u95f4\u624b\u52a8\u5206\u914d/\u91ca\u653e\u3002", "\n\t   Stack\u7a7a\u95f4\u6709\u9650\uff0cHeap\u662f\u5f88\u5927\u7684\u81ea\u7531\u5b58\u50a8\u533a", "\n\t    C\u4e2d\u7684malloc\u51fd\u6570\u5206\u914d\u7684\u5185\u5b58\u7a7a\u95f4\u5373\u5728\u5806\u4e0a,C++\u4e2d\u5bf9\u5e94\u7684\u662fnew\u64cd\u4f5c\u7b26\u3002", "\n  \u7a0b\u5e8f\u5728\u7f16\u8bd1\u671f\u5bf9\u53d8\u91cf\u548c\u51fd\u6570\u5206\u914d\u5185\u5b58\u90fd\u5728\u6808\u4e0a\u8fdb\u884c,\u4e14\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u51fd\u6570\u8c03\u7528\u65f6\u53c2\u6570\u7684\u4f20\u9012\u4e5f\u5728\u6808\u4e0a\u8fdb\u884c"], "title": "C++\u7f16\u7a0b\u57fa\u7840"},
{"contents": ["\u53c2\u8003\u7b54\u6848\uff1a\u5168\u5c40\u5bf9\u8c61\u7684\u6784\u9020\u51fd\u6570\u4f1a\u5728main \u51fd\u6570\u4e4b\u524d\u6267\u884c\u3002"], "title": "main \u51fd\u6570\u6267\u884c\u4ee5\u524d\uff0c\u8fd8\u4f1a\u6267\u884c\u4ec0\u4e48\u4ee3\u7801\uff1f"},
{"contents": ["1\uff09 \u4ece\u9759\u6001\u5b58\u50a8\u533a\u57df\u5206\u914d\u3002\u5185\u5b58\u5728\u7a0b\u5e8f\u7f16\u8bd1\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u5206\u914d\u597d\uff0c\u8fd9\u5757\u5185\u5b58\u5728\u7a0b\u5e8f\u7684\u6574\u4e2a\u8fd0\u884c\u671f\u95f4\u90fd\u5b58\u5728\u3002\u4f8b\u5982\u5168\u5c40\u53d8\u91cf\uff0cstatic \u53d8\u91cf\u3002", "\n2\uff09 \u5728\u6808\u4e0a\u521b\u5efa\u3002\u5728\u6267\u884c\u51fd\u6570\u65f6\uff0c\u51fd\u6570\u5185\u5c40\u90e8\u53d8\u91cf\u7684\u5b58\u50a8\u5355\u5143\u90fd\u53ef\u4ee5\u5728\u6808\u4e0a\u521b\u5efa\uff0c\u51fd\u6570\u6267\u884c\u7ed3\u675f\u65f6\u8fd9\u4e9b\u5b58\u50a8\u5355\u5143\u81ea\u52a8\u88ab\u91ca\u653e\u3002\u6808\u5185\u5b58\u5206\u914d\u8fd0\u7b97\u5185\u7f6e\u4e8e\u5904\u7406\u5668\u7684\u6307\u4ee4\u96c6\u3002", "\n3\uff09 \u4ece\u5806\u4e0a\u5206\u914d\uff0c\u4ea6\u79f0\u52a8\u6001\u5185\u5b58\u5206\u914d\u3002\u7a0b\u5e8f\u5728\u8fd0\u884c\u7684\u65f6\u5019\u7528malloc \u6216new \u7533\u8bf7\u4efb\u610f\u591a\u5c11\u7684\u5185\u5b58\uff0c\u7a0b\u5e8f\u5458\u81ea\u5df1\u8d1f\u8d23\u5728\u4f55\u65f6\u7528free \u6216delete \u91ca\u653e\u5185\u5b58\u3002\u52a8\u6001\u5185\u5b58\u7684\u751f\u5b58\u671f\u7531\u7a0b\u5e8f\u5458\u51b3\u5b9a\uff0c\u4f7f\u7528\u975e\u5e38\u7075\u6d3b\uff0c\u4f46\u95ee\u9898\u4e5f\u6700\u591a\u3002"], "title": "\u63cf\u8ff0\u5185\u5b58\u5206\u914d\u65b9\u5f0f\u4ee5\u53ca\u5b83\u4eec\u7684\u533a\u522b?"},
{"contents": ["\u53c2\u8003\u7b54\u6848\uff1a#define MIN(A,B) ((A) \n\t\t  \t\t"], "title": "\u5199\u4e00\u4e2a\u201c\u6807\u51c6\u201d\u5b8fMIN\uff0c\u8fd9\u4e2a\u5b8f\u8f93\u5165\u4e24\u4e2a\u53c2\u6570\u5e76\u8fd4\u56de\u8f83\u5c0f\u7684\u4e00\u4e2a"},
{"contents": ["\u53c2\u8003\u7b54\u6848\uff1a", "\n"], "title": "\u5199\u51fa\u5e38\u89c1\u6807\u51c6C\u5e93\u7684\u5934\u6587\u4ef6"},
{"contents": ["extern \u201cC\u201d\u7684\u4f5c\u7528\uff1a\u5982\u679cAdd(int a, int b)\u662f\u5728c\u8bed\u8a00\u7f16\u8bd1\u5668\u7f16\u8bd1\uff0c\u800c\u5728c++\u6587\u4ef6\u4f7f\u7528\uff0c\u5219\u9700\u8981\u5728c++\u6587\u4ef6\u4e2d\u58f0\u660e\uff1aextern \u201cC\u201d Add(int a, int b)\uff0c\u56e0\u4e3ac\u7f16\u8bd1\u5668\u548cc++\u7f16\u8bd1\u5668\u5bf9\u51fd\u6570\u540d\u7684\u89e3\u91ca\u4e0d\u4e00\u6837\uff08c++\u7f16\u8bd1\u5668\u89e3\u91ca\u51fd\u6570\u540d\u7684\u65f6\u5019\u8981\u8003\u8651\u51fd\u6570\u53c2\u6570\uff0c\u8fd9\u6837\u662f\u4e86\u65b9\u4fbf\u51fd\u6570\u91cd\u8f7d\uff0c\u800c\u5728c\u8bed\u8a00\u4e2d\u4e0d\u5b58\u5728\u51fd\u6570\u91cd\u8f7d\u7684\u95ee\u9898\uff09\uff0c\u4f7f\u7528extern \u201cC\u201d\uff0c\u5b9e\u8d28\u5c31\u662f\u544a\u8bc9c++\u7f16\u8bd1\u5668\uff0c\u8be5\u51fd\u6570\u662fc\u5e93\u91cc\u9762\u7684\u51fd\u6570\u3002\t\u5982\u679c\u4e0d\u4f7f\u7528extern \u201cC\u201d\u5219\u4f1a\u51fa\u73b0\u94fe\u63a5\u9519\u8bef\u3002"], "title": "extern C \u4f5c\u7528\uff1f"},
{"contents": ["\u53c2\u8003\u7b54\u6848\uff1a", "\n\u2460 sizeof\u662f\u8fd0\u7b97\u7b26\uff0c\u8ba1\u7b97\u6570\u636e\u6240\u5360\u7684\u5185\u5b58\u7a7a\u95f4\uff1bstrlen\uff08\uff09\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u8ba1\u7b97\u5b57\u7b26\u6570\u7ec4\u7684\u5b57\u7b26\u6570\uff1b", "\n\u2461 sizeof\u53ef\u4ee5\u7528\u7c7b\u578b\u4f5c\u53c2\u6570\uff1bstrlen\uff08\uff09\u53ea\u80fd\u7528char*\u4f5c\u53c2\u6570\uff0c\u5fc5\u987b\u662f\u4ee5\u2019/0\u2019\u7ed3\u675f", "\n\u2462 \u6570\u7ec4\u505asizeof\u7684\u53c2\u6570\u4e0d\u9000\u5316,\u4f20\u9012\u7ed9strlen\u5c31\u9000\u5316\u4e3a\u6307\u9488\u4e86;", "\n\u2463 sizeof\u64cd\u4f5c\u7b26\u7684\u7ed3\u679c\u7c7b\u578b\u662fsize_t\uff0c\u5b83\u5728\u5934\u6587\u4ef6\u4e2dtypedef\u4e3aunsigned\u3000int\u7c7b\u578b\u3002\u8be5\u7c7b\u578b\u4fdd\u8bc1\u80fd\u5bb9\u7eb3\u5b9e\u73b0\u5efa\u7acb\u7684\u6700\u5927\u5bf9\u8c61\u7684\u5b57\u8282\u5927\u5c0f"], "title": "sizeof\u548cstrlen\uff08\uff09\u7684\u533a\u522b"},
{"contents": ["1. C++\u7684\u7c7b\u548cC\u91cc\u9762\u7684struct\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\nstruct\u6210\u5458\u9ed8\u8ba4\u8bbf\u95ee\u6743\u9650\u4e3apublic\uff0c\u800cclass\u6210\u5458\u9ed8\u8ba4\u8bbf\u95ee\u6743\u9650\u4e3aprivate", "\n2. \u6790\u6784\u51fd\u6570\u548c\u865a\u51fd\u6570\u7684\u7528\u6cd5\u548c\u4f5c\u7528", "\n\u6790\u6784\u51fd\u6570\u662f\u5728\u5bf9\u8c61\u751f\u5b58\u671f\u7ed3\u675f\u65f6\u81ea\u52a8\u8c03\u7528\u7684\u51fd\u6570\uff0c\u7528\u6765\u91ca\u653e\u5728\u6784\u9020\u51fd\u6570\u5206\u914d\u7684\u5185\u5b58\u3002", "\n\u865a\u51fd\u6570\u662f\u6307\u88ab\u5173\u952e\u5b57virtual\u8bf4\u660e\u7684\u51fd\u6570\uff0c\u4f5c\u7528\u662f\u4f7f\u7528C++\u8bed\u8a00\u7684\u591a\u6001\u7279\u6027", "\n3. \u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1f\u662f\u600e\u4e48\u5b9e\u73b0\u7684\uff1f\u64cd\u4f5c\u7cfb\u7edf\u548c\u7f16\u8bd1\u5668\u662f\u600e\u4e48\u77e5\u9053\u7684?", "\n1) \u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u7528\u8fd9\u4e2a\u7a0b\u5e8f\u5757,\u800c\u5c40\u90e8\u53d8\u91cf\u4f5c\u7528\u4e8e\u5f53\u524d\u51fd\u6570", "\n2) \u524d\u8005\u5728\u5185\u5b58\u4e2d\u5206\u914d\u5728\u5168\u5c40\u6570\u636e\u533a,\u540e\u8005\u5206\u914d\u5728\u6808\u533a", "\n3) \u751f\u547d\u5468\u671f\u4e0d\u540c\uff1a\u5168\u5c40\u53d8\u91cf\u968f\u4e3b\u7a0b\u5e8f\u521b\u5efa\u548c\u521b\u5efa\uff0c\u968f\u4e3b\u7a0b\u5e8f\u9500\u6bc1\u800c\u9500\u6bc1\uff0c\u5c40\u90e8\u53d8\u91cf\u5728\u5c40\u90e8\u51fd\u6570\u5185\u90e8\uff0c\u751a\u81f3\u5c40\u90e8\u5faa\u73af\u4f53\u7b49\u5185\u90e8\u5b58\u5728\uff0c\u9000\u51fa\u5c31\u4e0d\u5b58\u5728", "\n4) \u4f7f\u7528\u65b9\u5f0f\u4e0d\u540c\uff1a\u901a\u8fc7\u58f0\u660e\u540e\u5168\u5c40\u53d8\u91cf\u7a0b\u5e8f\u7684\u5404\u4e2a\u90e8\u5206\u90fd\u53ef\u4ee5\u7528\u5230\uff0c\u5c40\u90e8\u53d8\u91cf\u53ea\u80fd\u5728\u5c40\u90e8\u4f7f\u7528", "\n4. \u6709N\u4e2a\u5927\u5c0f\u4e0d\u7b49\u7684\u81ea\u7136\u6570\uff081\u2013N\uff09\uff0c\u8bf7\u5c06\u5b83\u4eec\u7531\u5c0f\u5230\u5927\u6392\u5e8f.\u8981\u6c42\u7a0b\u5e8f\u7b97\u6cd5\uff1a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3aO(1)\u3002", "\nvoid sort(int e[], int n)", "\n{", "\nint i;", "\nint t;", "\nfor (i=1; i", "\n{", "\nt = e[e[i]];", "\ne[e[i]] = e[i];", "\ne[i] = t;", "\n}", "\n}", "\n5. \u5806\u4e0e\u6808\u7684\u53bb\u533a\u522b", "\nA. \u7533\u8bf7\u65b9\u5f0f\u4e0d\u540c", "\nStack\u7531\u7cfb\u7edf\u81ea\u52a8\u5206\u914d\uff0c\u800cheap\u9700\u8981\u7a0b\u5e8f\u5458\u81ea\u5df1\u7533\u8bf7\uff0c\u5e76\u6307\u660e\u5927\u5c0f\u3002", "\nB. \u7533\u8bf7\u540e\u7cfb\u7edf\u7684\u54cd\u5e94\u4e0d\u540c", "\nStack\uff1a\u53ea\u8981\u6808\u7684\u5269\u4f59\u7a7a\u95f4\u5927\u4e8e\u7533\u8bf7\u7a7a\u95f4\uff0c\u7cfb\u7edf\u5c31\u4e3a\u7a0b\u5e8f\u63d0\u4f9b\u5185\u5b58\uff0c\u5426\u5219\u5c06\u629b\u51fa\u6808\u6ea2\u51fa\u5f02\u5e38", "\nHeap\uff1a\u5f53\u7cfb\u7edf\u6536\u5230\u7a0b\u5e8f\u7533\u8bf7\u65f6\uff0c\u5148\u904d\u5386\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u8bb0\u5f55\u7a7a\u95f2\u5185\u5b58\u5730\u5740\u7684\u94fe\u8868\uff0c\u5bfb\u627e\u7b2c\u4e00\u4e2a\u5927\u4e8e\u6240\u7533\u8bf7\u7a7a\u95f4\u7684\u5806\u7ed3\u70b9\uff0c\u7136\u540e\u5c06\u8be5\u7ed3\u70b9\u4ece\u7a7a\u95f4\u7ed3\u70b9\u94fe\u8868\u4e2d\u5220 \u9664\uff0c\u5e76\u5c06\u8be5\u7ed3\u70b9\u7684\u7a7a\u95f4\u5206\u914d\u7ed9\u7a0b\u5e8f\u3002\u53e6\u5916\uff0c\u5927\u591a\u6570\u7cfb\u7edf\u8fd8\u4f1a\u5728\u8fd9\u5757\u5185\u5b58\u7a7a\u95f4\u4e2d\u7684\u9996\u5730\u5740\u5904\u8bb0\u5f55\u672c\u6b21\u5206\u914d\u7684\u5927\u5c0f\uff0c\u4ee5\u4fbf\u4e8edelete\u8bed\u53e5\u6b63\u786e\u91ca\u653e\u7a7a\u95f4\u3002\u800c\u4e14\uff0c\u7531\u4e8e \u627e\u5230\u7684\u5806\u7ed3\u70b9\u7684\u5927\u5c0f\u4e0d\u4e00\u5b9a\u6b63\u597d\u7b49\u4e8e\u7533\u8bf7\u7684\u5927\u5c0f\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u5c06\u591a\u4f59\u7684\u90a3\u90e8\u5206\u91cd\u65b0\u653e\u5165\u7a7a\u95f2\u94fe\u8868\u3002", "\nC. \u7533\u8bf7\u5927\u5c0f\u9650\u5236\u7684\u4e0d\u540c", "\nStack\uff1a\u5728windows\u4e0b\uff0c\u6808\u7684\u5927\u5c0f\u662f2M\uff08\u4e5f\u53ef\u80fd\u662f1M\u5b83\u662f\u4e00\u4e2a\u7f16\u8bd1\u65f6\u5c31\u786e\u5b9a\u7684\u5e38\u6570\uff09\uff0c\u5982\u679c\u7533\u8bf7\u7684\u7a7a\u95f4\u8d85\u8fc7\u6808\u7684\u5269\u4f59\u7a7a\u95f4\u65f6\uff0c\u5c06\u63d0\u793aoverflow\u3002\u56e0\u6b64\uff0c\u80fd\u4ece\u6808\u83b7\u5f97\u7684\u7a7a\u95f4\u8f83\u5c0f\u3002", "\nHeap\uff1a\u5806\u662f\u5411\u9ad8\u5730\u5740\u6269\u5c55\u7684\u6570\u636e\u7ed3\u6784\uff0c\u662f\u4e0d\u8fde\u7eed\u7684\u5185\u5b58\u533a\u57df\u3002\u8fd9\u662f\u7531\u4e8e\u7cfb\u7edf\u662f\u7528\u94fe\u8868\u6765\u5b58\u50a8\u7684\u7a7a\u95f2\u5185\u5b58\u5730\u5740\u7684\uff0c\u81ea\u7136\u662f\u4e0d\u8fde\u7eed\u7684\uff0c\u800c\u94fe\u8868\u7684\u904d\u5386\u65b9\u5411\u662f\u7531\u4f4e\u5730\u5740\u5411\u9ad8\u5730\u5740\u3002\u5806\u7684\u5927\u5c0f\u53d7\u9650\u4e8e\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e2d\u6709\u6548\u7684\u865a\u62df\u5185\u5b58\u3002\u7531\u6b64\u53ef\u89c1\uff0c\u5806\u83b7\u5f97\u7684\u7a7a\u95f4\u6bd4\u8f83\u7075\u6d3b\uff0c\u4e5f\u6bd4\u8f83\u5927\u3002", "\nD. \u7533\u8bf7\u6548\u7387\u7684\u6bd4\u8f83\uff1a", "\n\u6808\u7531\u7cfb\u7edf\u81ea\u52a8\u5206\u914d\uff0c\u901f\u5ea6\u8f83\u5feb\u3002\u4f46\u7a0b\u5e8f\u5458\u662f\u65e0\u6cd5\u63a7\u5236\u7684\u3002", "\n\u5806\u662f\u7531new\u5206\u914d\u7684\u5185\u5b58\uff0c\u4e00\u822c\u901f\u5ea6\u6bd4\u8f83\u6162\uff0c\u800c\u4e14\u5bb9\u6613\u4ea7\u751f\u5185\u5b58\u788e\u7247,\u4e0d\u8fc7\u7528\u8d77\u6765\u6700\u65b9\u4fbf\u3002", "\n\u53e6\u5916\uff0c\u5728WINDOWS\u4e0b\uff0c\u6700\u597d\u7684\u65b9\u5f0f\u662f\u7528VirtualAlloc\u5206\u914d\u5185\u5b58\uff0c\u4ed6\u4e0d\u662f\u5728\u5806\uff0c\u4e5f\u4e0d\u662f\u5728\u6808\u662f\u76f4\u63a5\u5728\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4\u4e2d\u4fdd\u7559\u4e00\u5feb\u5185\u5b58\uff0c\u867d\u7136\u7528\u8d77\u6765\u6700\u4e0d\u65b9\u4fbf\u3002\u4f46\u662f\u901f\u5ea6\u5feb\uff0c\u4e5f\u6700\u7075\u6d3b\u3002", "\nE. \u5806\u548c\u6808\u4e2d\u7684\u5b58\u50a8\u5185\u5bb9", "\n\u6808\uff1a\u5728\u51fd\u6570\u8c03\u7528\u65f6\uff0c\u7b2c\u4e00\u4e2a\u8fdb\u6808\u7684\u662f\u4e3b\u51fd\u6570\u4e2d\u540e\u7684\u4e0b\u4e00\u6761\u6307\u4ee4\uff08\u51fd\u6570\u8c03\u7528\u8bed\u53e5\u7684\u4e0b\u4e00\u6761\u53ef\u6267\u884c\u8bed\u53e5\uff09\u7684\u5730\u5740\uff0c\u7136\u540e\u662f\u51fd\u6570\u7684\u5404\u4e2a\u53c2\u6570\uff0c\u5728\u5927\u591a\u6570\u7684C\u7f16\u8bd1\u5668 \u4e2d\uff0c\u53c2\u6570\u662f\u7531\u53f3\u5f80\u5de6\u5165\u6808\u7684\uff0c\u7136\u540e\u662f\u51fd\u6570\u4e2d\u7684\u5c40\u90e8\u53d8\u91cf\u3002\u6ce8\u610f\u9759\u6001\u53d8\u91cf\u662f\u4e0d\u5165\u6808\u7684\u3002\u5f53\u672c\u6b21\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u540e\uff0c\u5c40\u90e8\u53d8\u91cf\u5148\u51fa\u6808\uff0c\u7136\u540e\u662f\u53c2\u6570\uff0c\u6700\u540e\u6808\u9876\u6307\u9488\u6307\u5411\u6700\u5f00 \u59cb\u5b58\u7684\u5730\u5740\uff0c\u4e5f\u5c31\u662f\u4e3b\u51fd\u6570\u4e2d\u7684\u4e0b\u4e00\u6761\u6307\u4ee4\uff0c\u7a0b\u5e8f\u7531\u8be5\u70b9\u7ee7\u7eed\u8fd0\u884c\u3002", "\n\u5806\uff1a\u4e00\u822c\u662f\u5728\u5806\u7684\u5934\u90e8\u7528\u4e00\u4e2a\u5b57\u8282\u5b58\u653e\u5806\u7684\u5927\u5c0f\u3002\u5806\u4e2d\u7684\u5177\u4f53\u5185\u5bb9\u6709\u7a0b\u5e8f\u5458\u5b89\u6392\u3002", "\n6. \u542b\u53c2\u6570\u7684\u5b8f\u4e0e\u51fd\u6570\u7684\u4f18\u7f3a\u70b9", "\n\u5b8f\uff1a   \u4f18\u70b9\uff1a\u5728\u9884\u5904\u7406\u9636\u6bb5\u5b8c\u6210\uff0c\u4e0d\u5360\u7528\u7f16\u8bd1\u65f6\u95f4\uff0c\u540c\u65f6\uff0c\u7701\u53bb\u4e86\u51fd\u6570\u8c03\u7528\u7684\u5f00\u9500\uff0c\u8fd0\u884c\u6548\u7387\u9ad8", "\n\u7f3a\u70b9\uff1a\u4e0d\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\uff0c\u591a\u6b21\u5b8f\u66ff\u6362\u4f1a\u5bfc\u81f4\u4ee3\u7801\u4f53\u79ef\u53d8\u5927\uff0c\u800c\u4e14\u7531\u4e8e\u5b8f\u672c\u8d28\u4e0a\u662f\u5b57\u7b26\u4e32\u66ff\u6362\uff0c\u6545\u53ef\u80fd\u4f1a\u7531\u4e8e\u4e00\u4e9b\u53c2\u6570\u7684\u526f\u4f5c\u7528\u5bfc\u81f4\u5f97\u51fa\u9519\u8bef\u7684\u7ed3\u679c\u3002", "\n\u51fd\u6570\uff1a \u4f18\u70b9\uff1a\u6ca1\u6709\u5e26\u53c2\u6570\u5b8f\u53ef\u80fd\u5bfc\u81f4\u7684\u526f\u4f5c\u7528\uff0c\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\uff0c\u8ba1\u7b97\u7684\u6b63\u786e\u6027\u66f4\u6709\u4fdd\u8bc1\u3002", "\n\u7f3a\u70b9\uff1a\u51fd\u6570\u8c03\u7528\u9700\u8981\u53c2\u6570\u3001\u8fd4\u56de\u5730\u5740\u7b49\u7684\u5165\u6808\u3001\u51fa\u6808\u5f00\u9500\uff0c\u6548\u7387\u6ca1\u6709\u5e26\u53c2\u6570\u5b8f\u9ad8", "\nPS\uff1a\u5b8f\u4e0e\u5185\u8054\u51fd\u6570\u7684\u533a\u522b", "\n\u5185\u8054\u51fd\u6570\u548c\u5b8f\u90fd\u662f\u5728\u7a0b\u5e8f\u51fa\u73b0\u7684\u5730\u65b9\u5c55\u5f00\uff0c\u5185\u8054\u51fd\u6570\u4e0d\u662f\u901a\u8fc7\u51fd\u6570\u8c03\u7528\u5b9e\u73b0\u7684\uff0c\u662f\u5728\u8c03\u7528\u8be5\u51fd\u6570\u7684\u7a0b\u5e8f\u5904\u5c06\u5b83\u5c55\u5f00\uff08\u5728\u7f16\u8bd1\u671f\u95f4\u5b8c\u6210\u7684\uff09\uff1b\u5b8f\u540c\u6837\u662f\uff1b", "\n\u4e0d\u540c\u7684\u662f\uff1a\u5185\u8054\u51fd\u6570\u53ef\u4ee5\u5728\u7f16\u8bd1\u671f\u95f4\u5b8c\u6210\u8bf8\u5982\u7c7b\u578b\u68c0\u6d4b\uff0c\u8bed\u53e5\u662f\u5426\u6b63\u786e\u7b49\u7f16\u8bd1\u529f\u80fd\uff1b\u5b8f\u5c31\u4e0d\u5177\u6709\u8fd9\u6837\u7684\u529f\u80fd\uff0c\u800c\u4e14\u5b8f\u5c55\u5f00\u7684\u65f6\u95f4\u548c\u5185\u8054\u51fd\u6570\u4e5f\u662f\u4e0d\u540c\u7684\uff08\u5728\u8fd0\u884c\u671f\u95f4\u5c55\u5f00\uff09", "\n7. Windows\u7a0b\u5e8f\u7684\u5165\u53e3\u662f\u54ea\u91cc\uff1f\u5199\u51faWindows\u6d88\u606f\u673a\u5236\u7684\u6d41\u7a0b", "\nWindows\u7a0b\u5e8f\u7684\u5165\u53e3\u662fWinMain()\u51fd\u6570\u3002", "\nWindows\u5e94\u7528\u7a0b\u5e8f\u6d88\u606f\u5904\u7406\u673a\u5236\uff1a", "\nA. \u64cd\u4f5c\u7cfb\u7edf\u63a5\u6536\u5e94\u7528\u7a0b\u5e8f\u7684\u7a97\u53e3\u6d88\u606f\uff0c\u5c06\u6d88\u606f\u6295\u9012\u5230\u8be5\u5e94\u7528\u7a0b\u5e8f\u7684\u6d88\u606f\u961f\u5217\u4e2d", "\nB. \u5e94\u7528\u7a0b\u5e8f\u5728\u6d88\u606f\u5faa\u73af\u4e2d\u8c03\u7528GetMessage\u51fd\u6570\u4ece\u6d88\u606f\u961f\u5217\u4e2d\u53d6\u51fa\u4e00\u6761\u4e00\u6761\u7684\u6d88\u606f\uff0c\u53d6\u51fa\u6d88\u606f\u540e\uff0c\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u5bf9\u6d88\u606f\u8fdb\u884c\u4e00\u4e9b\u9884\u5904\u7406\u3002", "\nC. \u5e94\u7528\u7a0b\u5e8f\u8c03\u7528DispatchMessage\uff0c\u5c06\u6d88\u606f\u56de\u4f20\u7ed9\u64cd\u4f5c\u7cfb\u7edf\u3002", "\nD. \u7cfb\u7edf\u5229\u7528WNDCLASS\u7ed3\u6784\u4f53\u7684lpfnWndProc\u6210\u5458\u4fdd\u5b58\u7684\u7a97\u53e3\u8fc7\u7a0b\u51fd\u6570\u7684\u6307\u9488\u8c03\u7528\u7a97\u53e3\u8fc7\u7a0b\uff0c\u5bf9\u6d88\u606f\u8fdb\u884c\u5904\u7406\u3002", "\n8. \u5982\u4f55\u5b9a\u4e49\u548c\u5b9e\u73b0\u4e00\u4e2a\u7c7b\u7684\u6210\u5458\u51fd\u6570\u4e3a\u56de\u8c03\u51fd\u6570", "\nA.\u4ec0\u4e48\u662f\u56de\u8c03\u51fd\u6570?", "\n\u7b80\u800c\u8a00\u4e4b\uff0c\u56de\u8c03\u51fd\u6570\u5c31\u662f\u88ab\u8c03\u7528\u8005\u56de\u5934\u8c03\u7528\u8c03\u7528\u8005\u7684\u51fd\u6570\u3002", "\n\u4f7f\u7528\u56de\u8c03\u51fd\u6570\u5b9e\u9645\u4e0a\u5c31\u662f\u5728\u8c03\u7528\u67d0\u4e2a\u51fd\u6570\uff08\u901a\u5e38\u662fAPI\u51fd\u6570\uff09\u65f6\uff0c\u5c06\u81ea\u5df1\u7684\u4e00\u4e2a\u51fd\u6570\uff08\u8fd9\u4e2a\u51fd\u6570\u4e3a\u56de\u8c03\u51fd\u6570\uff09\u7684\u5730\u5740\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u90a3\u4e2a\u88ab\u8c03\u7528\u51fd\u6570\u3002\u800c\u8be5\u88ab\u8c03\u7528\u51fd\u6570\u5728\u9700\u8981\u7684\u65f6\u5019\uff0c\u5229\u7528\u4f20\u9012\u7684\u5730\u5740\u8c03\u7528\u56de\u8c03\u51fd\u6570\u3002", "\n\u56de\u8c03\u51fd\u6570\uff0c\u5c31\u662f\u7531\u4f60\u81ea\u5df1\u5199\u7684\uff0c\u4f60\u9700\u8981\u8c03\u7528\u53e6\u5916\u4e00\u4e2a\u51fd\u6570\uff0c\u800c\u8fd9\u4e2a\u51fd\u6570\u7684\u5176\u4e2d\u4e00\u4e2a\u53c2\u6570\uff0c\u5c31\u662f\u4f60\u7684\u8fd9\u4e2a\u56de\u8c03\u51fd\u6570\u540d\u3002\u8fd9\u6837\uff0c\u7cfb\u7edf\u5728\u5fc5\u8981\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u8c03\u7528\u4f60\u5199\u7684\u56de\u8c03\u51fd\u6570\uff0c\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u5728\u56de\u8c03\u51fd\u6570\u91cc\u5b8c\u6210\u4f60\u8981\u505a\u7684\u4e8b\u3002", "\nB.\u5982\u4f55\u5b9a\u4e49\u548c\u5b9e\u73b0\u4e00\u4e2a\u7c7b\u7684\u6210\u5458\u51fd\u6570\u4e3a\u56de\u8c03\u51fd\u6570", "\n\u8981\u5b9a\u4e49\u548c\u5b9e\u73b0\u4e00\u4e2a\u7c7b\u7684\u6210\u5458\u51fd\u6570\u4e3a\u56de\u8c03\u51fd\u6570\u9700\u8981\u505a\u4e09\u4ef6\u4e8b\uff1a", "\na\uff0e\u58f0\u660e\uff1b", "\nb\uff0e\u5b9a\u4e49\uff1b", "\nc\uff0e\u8bbe\u7f6e\u89e6\u53d1\u6761\u4ef6\uff0c\u5c31\u662f\u5728\u4f60\u7684\u51fd\u6570\u4e2d\u628a\u4f60\u7684\u56de\u8c03\u51fd\u6570\u540d\u4f5c\u4e3a\u4e00\u4e2a\u53c2\u6570\uff0c\u4ee5\u4fbf\u7cfb\u7edf\u8c03\u7528", "\n\u5982\uff1a", "\n\u4e00\u3001\u58f0\u660e\u56de\u8c03\u51fd\u6570\u7c7b\u578b", "\ntypedef void (*FunPtr)(void);", "\n\u4e8c\u3001\u5b9a\u4e49\u56de\u8c03\u51fd\u6570", "\nclass A", "\n{", "\npublic:", "\nA();", "\nstatic void callBackFun(void) //\u56de\u8c03\u51fd\u6570\uff0c\u5fc5\u987b\u58f0\u660e\u4e3astatic", "\n{", "\ncout\n}", "\nvirtual ~A();", "\n};", "\n\u4e09\u3001\u8bbe\u7f6e\u89e6\u53d1\u6761\u4ef6", "\nvoid Funtype(FunPtr p)", "\n{", "\np();", "\n}", "\nvoid main(void)", "\n{", "\nFuntype(A::callBackFun);", "\n}", "\nC. \u56de\u8c03\u51fd\u6570\u4e0eAPI\u51fd\u6570", "\n\u56de\u8c03\u548cAPI\u975e\u5e38\u63a5\u8fd1\uff0c\u4ed6\u4eec\u7684\u5171\u6027\u90fd\u662f\u8de8\u5c42\u8c03\u7528\u7684\u51fd\u6570\u3002\u4f46\u533a\u522b\u662fAPI\u662f\u4f4e\u5c42\u63d0\u4f9b\u7ed9\u9ad8\u5c42\u7684\u8c03\u7528\uff0c\u4e00\u822c\u8fd9\u4e2a\u51fd\u6570\u5bf9\u9ad8\u5c42\u90fd\u662f\u5df2\u77e5\u7684\uff1b\u800c\u56de\u8c03\u6b63\u597d\u76f8\u53cd\uff0c \u4ed6\u662f\u9ad8\u5c42\u63d0\u4f9b\u7ed9\u5e95\u5c42\u7684\u8c03\u7528\uff0c\u5bf9\u4e8e\u4f4e\u5c42\u4ed6\u662f\u672a\u77e5\u7684\uff0c\u5fc5\u987b\u7531\u9ad8\u5c42\u8fdb\u884c\u5b89\u88c5\uff0c\u8fd9\u4e2a\u5b89\u88c5\u51fd\u6570\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u4f4e\u5c42\u63d0\u4f9b\u7684API\uff0c\u5b89\u88c5\u540e\u4f4e\u5c42\u4e0d\u77e5\u9053\u8fd9\u4e2a\u56de\u8c03\u7684\u540d\u5b57\uff0c\u4f46\u5b83 \u901a\u8fc7\u4e00\u4e2a\u51fd\u6570\u6307\u9488\u6765\u4fdd\u5b58\u8fd9\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u5728\u9700\u8981\u8c03\u7528\u65f6\uff0c\u53ea\u9700\u5f15\u7528\u8fd9\u4e2a\u51fd\u6570\u6307\u9488\u548c\u76f8\u5173\u7684\u53c2\u6570\u6307\u9488\u3002", "\n\u5176\u5b9e\uff1a\u56de\u8c03\u5c31\u662f\u8be5\u51fd\u6570\u5199\u5728\u9ad8\u5c42\uff0c\u4f4e\u5c42\u901a\u8fc7\u4e00\u4e2a\u51fd\u6570\u6307\u9488\u4fdd\u5b58\u8fd9\u4e2a\u51fd\u6570\uff0c\u5728\u67d0\u4e2a\u4e8b\u4ef6\u7684\u89e6\u53d1\u4e0b\uff0c\u4f4e\u5c42\u901a\u8fc7\u8be5\u51fd\u6570\u6307\u9488\u8c03\u7528\u9ad8\u5c42\u90a3\u4e2a\u51fd\u6570\u3002", "1\u3001\u5c40\u90e8\u53d8\u91cf\u80fd\u5426\u548c\u5168\u5c40\u53d8\u91cf\u91cd\u540d\uff1f", "\n\u80fd\uff0c\u5c40\u90e8\u4f1a\u5c4f\u853d\u5168\u5c40\u3002\u8981\u7528\u5168\u5c40\u53d8\u91cf\uff0c\u9700\u8981\u4f7f\u7528\"::\"", "\n\u5c40\u90e8\u53d8\u91cf\u53ef\u4ee5\u4e0e\u5168\u5c40\u53d8\u91cf\u540c\u540d\uff0c\u5728\u51fd\u6570\u5185\u5f15\u7528\u8fd9\u4e2a\u53d8\u91cf\u65f6\uff0c\u4f1a\u7528\u5230\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u800c\u4e0d\u4f1a\u7528\u5230\u5168\u5c40\u53d8\u91cf\u3002\u5bf9\u4e8e\u6709\u4e9b\u7f16\u8bd1\u5668\u800c\u8a00\uff0c\u5728\u540c\u4e00\u4e2a\u51fd\u6570\u5185\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u6bd4\u5982\u5728\u4e24\u4e2a\u5faa\u73af\u4f53\u5185\u90fd\u5b9a\u4e49\u4e00\u4e2a\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u800c\u90a3\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u5c31\u5728\u90a3\u4e2a\u5faa\u73af\u4f53\u5185\u3002", "\n2\u3001\u5982\u4f55\u5f15\u7528\u4e00\u4e2a\u5df2\u7ecf\u5b9a\u4e49\u8fc7\u7684\u5168\u5c40\u53d8\u91cf\uff1f", "\nextern", "\n\u53ef\u4ee5\u7528\u5f15\u7528\u5934\u6587\u4ef6\u7684\u65b9\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u7528extern\u5173\u952e\u5b57\uff0c\u5982\u679c\u7528\u5f15\u7528\u5934\u6587\u4ef6\u65b9\u5f0f\u6765\u5f15\u7528\u67d0\u4e2a\u5728\u5934\u6587\u4ef6\u4e2d\u58f0\u660e\u7684\u5168\u5c40\u53d8\u7406\uff0c\u5047\u5b9a\u4f60\u5c06\u90a3\u4e2a\u53d8\u5199\u9519\u4e86\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4\u4f1a\u62a5\u9519\uff0c\u5982\u679c\u4f60\u7528extern\u65b9\u5f0f\u5f15\u7528\u65f6\uff0c\u5047\u5b9a\u4f60\u72af\u4e86\u540c\u6837\u7684\u9519\u8bef\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4\u4e0d\u4f1a\u62a5\u9519\uff0c\u800c\u5728\u8fde\u63a5\u671f\u95f4\u62a5\u9519\u3002", "\n3\u3001\u5168\u5c40\u53d8\u91cf\u53ef\u4e0d\u53ef\u4ee5\u5b9a\u4e49\u5728\u53ef\u88ab\u591a\u4e2a.C\u6587\u4ef6\u5305\u542b\u7684\u5934\u6587\u4ef6\u4e2d\uff1f\u4e3a\u4ec0\u4e48\uff1f", "\n\u53ef\u4ee5\uff0c\u5728\u4e0d\u540c\u7684C\u6587\u4ef6\u4e2d\u4ee5static\u5f62\u5f0f\u6765\u58f0\u660e\u540c\u540d\u5168\u5c40\u53d8\u91cf\u3002", "\n\u53ef\u4ee5\u5728\u4e0d\u540c\u7684C\u6587\u4ef6\u4e2d\u58f0\u660e\u540c\u540d\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u524d\u63d0\u662f\u5176\u4e2d\u53ea\u80fd\u6709\u4e00\u4e2aC\u6587\u4ef6\u4e2d\u5bf9\u6b64\u53d8\u91cf\u8d4b\u521d\u503c\uff0c\u6b64\u65f6\u8fde\u63a5\u4e0d\u4f1a\u51fa\u9519\u3002", "\n4\u3001\u8bed\u53e5for( \uff1b1 \uff1b)\u6709\u4ec0\u4e48\u95ee\u9898\uff1f\u5b83\u662f\u4ec0\u4e48\u610f\u601d\uff1f", "\n\u65e0\u9650\u5faa\u73af\uff0c\u548cwhile(1)\u76f8\u540c\u3002", "\n5\u3001do\u2026\u2026while\u548cwhile\u2026\u2026do\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u524d\u4e00\u4e2a\u5faa\u73af\u4e00\u904d\u518d\u5224\u65ad\uff0c\u540e\u4e00\u4e2a\u5224\u65ad\u4ee5\u540e\u518d\u5faa\u73af\u3002", "\n6\u3001\u8bf7\u5199\u51fa\u4e0b\u5217\u4ee3\u7801\u7684\u8f93\u51fa\u5185\u5bb9", "\n#include", "8\u3001-1,2,7,28,,126\u8bf7\u95ee28\u548c126\u4e2d\u95f4\u90a3\u4e2a\u6570\u662f\u4ec0\u4e48\uff1f\u4e3a\u4ec0\u4e48\uff1f", "\n\u7b54\u6848\u5e94\u8be5\u662f4^3-1=63", "\n\u89c4\u5f8b\u662fn^3-1(\u5f53n\u4e3a\u5076\u65700\uff0c2\uff0c4)", "\nn^3+1(\u5f53n\u4e3a\u5947\u65701\uff0c3\uff0c5)", "\n\u7b54\u6848\uff1a63", "\n9\u3001\u7528\u4e24\u4e2a\u6808\u5b9e\u73b0\u4e00\u4e2a\u961f\u5217\u7684\u529f\u80fd\uff1f\u8981\u6c42\u7ed9\u51fa\u7b97\u6cd5\u548c\u601d\u8def\uff01", "\n\u8bbe2\u4e2a\u6808\u4e3aA,B, \u4e00\u5f00\u59cb\u5747\u4e3a\u7a7a.", "\n\u5165\u961f:", "\n\u5c06\u65b0\u5143\u7d20push\u5165\u6808A;", "\n \u51fa\u961f:", "\n(1)\u5224\u65ad\u6808B\u662f\u5426\u4e3a\u7a7a\uff1b", "\n(2)\u5982\u679c\u4e0d\u4e3a\u7a7a\uff0c\u5219\u5c06\u6808A\u4e2d\u6240\u6709\u5143\u7d20\u4f9d\u6b21pop\u51fa\u5e76push\u5230\u6808B\uff1b", "\n(3)\u5c06\u6808B\u7684\u6808\u9876\u5143\u7d20pop\u51fa\uff1b\u8fd9\u6837\u5b9e\u73b0\u7684\u961f\u5217\u5165\u961f\u548c\u51fa\u961f\u7684\u5e73\u644a\u590d\u6742\u5ea6\u90fd\u8fd8\u662fO(1), \u6bd4\u4e0a\u9762\u7684\u51e0\u79cd\u65b9\u6cd5\u8981\u597d\u3002", "\n10\u3001\u5728c\u8bed\u8a00\u5e93\u51fd\u6570\u4e2d\u5c06\u4e00\u4e2a\u5b57\u7b26\u8f6c\u6362\u6210\u6574\u578b\u7684\u51fd\u6570\u662fatool()\u5417\uff0c\u8fd9\u4e2a\u51fd\u6570\u7684\u539f\u578b\u662f\u4ec0\u4e48\uff1f", "\n\u51fd\u6570\u540d: atol", "\n\u529f \u80fd: \u628a\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u957f\u6574\u578b\u6570", "\n\u7528 \u6cd5: long atol(const char *nptr);", "\n\u7a0b\u5e8f\u4f8b:", "\n#include "], "title": "\u7ecf\u5178c++\u9762\u8bd5\u9898\uff086\uff09"},
{"contents": ["\u53c2\u8003\u7b54\u6848\uff1anamespace\uff0c\u662f\u6307\u6807\u8bc6\u7b26\u7684\u5404\u79cd\u53ef\u89c1\u8303\u56f4\u3002C\uff0b\uff0b\u6807\u51c6\u7a0b\u5e8f\u5e93\u4e2d\u7684\u6240\u6709\u6807\u8bc6\u7b26\u90fd\u88ab\u5b9a\u4e49\u4e8e\u4e00\u4e2a\u540d\u4e3astd\u7684namespace\u4e2d\u3002", "\n"], "title": "iostream\u4e0eiostream.h\u7684\u533a\u522b"},
{"contents": ["1. \u4ee5\u4e0b\u4e09\u6761\u8f93\u51fa\u8bed\u53e5\u5206\u522b\u8f93\u51fa\u4ec0\u4e48\uff1f[C\u6613]", "\nchar str1[] = \u201cabc\u201d;", "\nchar str2[] = \u201cabc\u201d;", "\nconst char str3[] = \u201cabc\u201d;", "\nconst char str4[] = \u201cabc\u201d;", "\nconst char* str5 = \u201cabc\u201d;", "\nconst char* str6 = \u201cabc\u201d;", "\ncout \ncout \ncout \n2. \u975eC++\u5185\u5efa\u578b\u522b A \u548c B\uff0c\u5728\u54ea\u51e0\u79cd\u60c5\u51b5\u4e0bB\u80fd\u9690\u5f0f\u8f6c\u5316\u4e3aA\uff1f[C++\u4e2d\u7b49]", "\n\u7b54\uff1a", "\na. class B : public A { \u2026\u2026} // B\u516c\u6709\u7ee7\u627f\u81eaA\uff0c\u53ef\u4ee5\u662f\u95f4\u63a5\u7ee7\u627f\u7684", "\nb. class B { operator A( ); } // B\u5b9e\u73b0\u4e86\u9690\u5f0f\u8f6c\u5316\u4e3aA\u7684\u8f6c\u5316", "\nc. class A { A( const B& ); } // A\u5b9e\u73b0\u4e86non-explicit\u7684\u53c2\u6570\u4e3aB\uff08\u53ef\u4ee5\u6709\u5176\u4ed6\u5e26\u9ed8\u8ba4\u503c\u7684\u53c2\u6570\uff09\u6784\u9020\u51fd\u6570", "\nd. A& operator= ( const A& ); // \u8d4b\u503c\u64cd\u4f5c\uff0c\u867d\u4e0d\u662f\u6b63\u5b97\u7684\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\uff0c\u4f46\u4e5f\u53ef\u4ee5\u52c9\u5f3a\u7b97\u4e00\u4e2a", "\n3. \u4ee5\u4e0b\u4ee3\u7801\u4e2d\u7684\u4e24\u4e2asizeof\u7528\u6cd5\u6709\u95ee\u9898\u5417\uff1f[C\u6613]", "\nvoid UpperCase( char str[] ) // \u5c06 str \u4e2d\u7684\u5c0f\u5199\u5b57\u6bcd\u8f6c\u6362\u6210\u5927\u5199\u5b57\u6bcd", "\n{", "\nfor( size_t i=0; i", "\nif( 'a'\nstr[i] -= ('a'-'A' );", "\n}", "\nchar str[] = \"aBcDe\";", "\ncout \nUpperCase( str );", "\ncout \n1.\u6c42\u4e0b\u9762\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff08\u5fae\u8f6f\uff09", "\nint func(x)", "\n{", "\nint countx = 0;", "\nwhile(x)", "\n{", "\ncountx ++;", "\nx = x&(x-1);", "\n}", "\nreturn countx;", "\n}", "\n\u5047\u5b9ax = 9999\u3002 \u7b54\u6848\uff1a8", "\n\u601d\u8def\uff1a\u5c06x\u8f6c\u5316\u4e3a2\u8fdb\u5236\uff0c\u770b\u542b\u6709\u76841\u7684\u4e2a\u6570\u3002", "\n2. \u4ec0\u4e48\u662f\u201c\u5f15\u7528\u201d\uff1f\u7533\u660e\u548c\u4f7f\u7528\u201c\u5f15\u7528\u201d\u8981\u6ce8\u610f\u54ea\u4e9b\u95ee\u9898\uff1f", "\n\u7b54\uff1a\u5f15\u7528\u5c31\u662f\u67d0\u4e2a\u76ee\u6807\u53d8\u91cf\u7684\u201c\u522b\u540d\u201d(alias)\uff0c\u5bf9\u5e94\u7528\u7684\u64cd\u4f5c\u4e0e\u5bf9\u53d8\u91cf\u76f4\u63a5\u64cd\u4f5c\u6548\u679c\u5b8c\u5168\u76f8\u540c\u3002\u7533\u660e\u4e00\u4e2a\u5f15\u7528\u7684\u65f6\u5019\uff0c\u5207\u8bb0\u8981\u5bf9\u5176\u8fdb\u884c\u521d\u59cb\u5316\u3002\u5f15 \u7528\u58f0\u660e\u5b8c\u6bd5\u540e\uff0c\u76f8\u5f53\u4e8e\u76ee\u6807\u53d8\u91cf\u540d\u6709\u4e24\u4e2a\u540d\u79f0\uff0c\u5373\u8be5\u76ee\u6807\u539f\u540d\u79f0\u548c\u5f15\u7528\u540d\uff0c\u4e0d\u80fd\u518d\u628a\u8be5\u5f15\u7528\u540d\u4f5c\u4e3a\u5176\u4ed6\u53d8\u91cf\u540d\u7684\u522b\u540d\u3002\u58f0\u660e\u4e00\u4e2a\u5f15\u7528\uff0c\u4e0d\u662f\u65b0\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53d8\u91cf\uff0c\u5b83\u53ea \u8868\u793a\u8be5\u5f15\u7528\u540d\u662f\u76ee\u6807\u53d8\u91cf\u540d\u7684\u4e00\u4e2a\u522b\u540d\uff0c\u5b83\u672c\u8eab\u4e0d\u662f\u4e00\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u56e0\u6b64\u5f15\u7528\u672c\u8eab\u4e0d\u5360\u5b58\u50a8\u5355\u5143\uff0c\u7cfb\u7edf\u4e5f\u4e0d\u7ed9\u5f15\u7528\u5206\u914d\u5b58\u50a8\u5355\u5143\u3002\u4e0d\u80fd\u5efa\u7acb\u6570\u7ec4\u7684\u5f15\u7528\u3002", "\n3. \u5c06\u201c\u5f15\u7528\u201d\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u6709\u54ea\u4e9b\u7279\u70b9\uff1f", "\n\uff081\uff09\u4f20\u9012\u5f15\u7528\u7ed9\u51fd\u6570\u4e0e\u4f20\u9012\u6307\u9488\u7684\u6548\u679c\u662f\u4e00\u6837\u7684\u3002\u8fd9\u65f6\uff0c\u88ab\u8c03\u51fd\u6570\u7684\u5f62\u53c2\u5c31\u6210\u4e3a\u539f\u6765\u4e3b\u8c03\u51fd\u6570\u4e2d\u7684\u5b9e\u53c2\u53d8\u91cf\u6216\u5bf9\u8c61\u7684\u4e00\u4e2a\u522b\u540d\u6765\u4f7f\u7528\uff0c\u6240\u4ee5\u5728\u88ab\u8c03\u51fd\u6570\u4e2d\u5bf9\u5f62\u53c2\u53d8\u91cf\u7684\u64cd\u4f5c\u5c31\u662f\u5bf9\u5176\u76f8\u5e94\u7684\u76ee\u6807\u5bf9\u8c61\uff08\u5728\u4e3b\u8c03\u51fd\u6570\u4e2d\uff09\u7684\u64cd\u4f5c\u3002", "\n\uff082\uff09\u4f7f\u7528\u5f15\u7528\u4f20\u9012\u51fd\u6570\u7684\u53c2\u6570\uff0c\u5728\u5185\u5b58\u4e2d\u5e76\u6ca1\u6709\u4ea7\u751f\u5b9e\u53c2\u7684\u526f\u672c\uff0c\u5b83\u662f\u76f4\u63a5\u5bf9\u5b9e\u53c2\u64cd\u4f5c\uff1b\u800c\u4f7f\u7528\u4e00\u822c\u53d8\u91cf\u4f20\u9012\u51fd\u6570\u7684\u53c2\u6570\uff0c\u5f53\u53d1\u751f\u51fd\u6570\u8c03\u7528\u65f6\uff0c\u9700\u8981\u7ed9\u5f62 \u53c2\u5206\u914d\u5b58\u50a8\u5355\u5143\uff0c\u5f62\u53c2\u53d8\u91cf\u662f\u5b9e\u53c2\u53d8\u91cf\u7684\u526f\u672c\uff1b\u5982\u679c\u4f20\u9012\u7684\u662f\u5bf9\u8c61\uff0c\u8fd8\u5c06\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002\u56e0\u6b64\uff0c\u5f53\u53c2\u6570\u4f20\u9012\u7684\u6570\u636e\u8f83\u5927\u65f6\uff0c\u7528\u5f15\u7528\u6bd4\u7528\u4e00\u822c\u53d8\u91cf\u4f20\u9012\u53c2\u6570\u7684\u6548\u7387 \u548c\u6240\u5360\u7a7a\u95f4\u90fd\u597d\u3002", "\n\uff083\uff09\u4f7f\u7528\u6307\u9488\u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570\u867d\u7136\u4e5f\u80fd\u8fbe\u5230\u4e0e\u4f7f\u7528\u5f15\u7528\u7684\u6548\u679c\uff0c\u4f46\u662f\uff0c\u5728\u88ab\u8c03\u51fd\u6570\u4e2d\u540c\u6837\u8981\u7ed9\u5f62\u53c2\u5206\u914d\u5b58\u50a8\u5355\u5143\uff0c\u4e14\u9700\u8981\u91cd\u590d\u4f7f\u7528\"*\u6307\u9488\u53d8\u91cf\u540d\"\u7684\u5f62 \u5f0f\u8fdb\u884c\u8fd0\u7b97\uff0c\u8fd9\u5f88\u5bb9\u6613\u4ea7\u751f\u9519\u8bef\u4e14\u7a0b\u5e8f\u7684\u9605\u8bfb\u6027\u8f83\u5dee\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u5728\u4e3b\u8c03\u51fd\u6570\u7684\u8c03\u7528\u70b9\u5904\uff0c\u5fc5\u987b\u7528\u53d8\u91cf\u7684\u5730\u5740\u4f5c\u4e3a\u5b9e\u53c2\u3002\u800c\u5f15\u7528\u66f4\u5bb9\u6613\u4f7f\u7528\uff0c\u66f4\u6e05\u6670\u3002", "\n4. \u5728\u4ec0\u4e48\u65f6\u5019\u9700\u8981\u4f7f\u7528\u201c\u5e38\u5f15\u7528\u201d\uff1f\u3000", "\n\u5982\u679c\u65e2\u8981\u5229\u7528\u5f15\u7528\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6548\u7387\uff0c\u53c8\u8981\u4fdd\u62a4\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u6570\u636e\u4e0d\u5728\u51fd\u6570\u4e2d\u88ab\u6539\u53d8\uff0c\u5c31\u5e94\u4f7f\u7528\u5e38\u5f15\u7528\u3002\u5e38\u5f15\u7528\u58f0\u660e\u65b9\u5f0f\uff1aconst \u7c7b\u578b\u6807\u8bc6\u7b26 &\u5f15\u7528\u540d=\u76ee\u6807\u53d8\u91cf\u540d\uff1b", "\n\u4f8b1", "\nint a ;", "\nconst int &ra=a;", "\nra=1; //\u9519\u8bef", "\na=1; //\u6b63\u786e ", "\u4f8b2", "\nstring foo( );", "\nvoid bar(string & s);", "\n\u90a3\u4e48\u4e0b\u9762\u7684\u8868\u8fbe\u5f0f\u5c06\u662f\u975e\u6cd5\u7684\uff1a", "\nbar(foo( ));", "\nbar(\"hello world\");", "\n\u539f\u56e0\u5728\u4e8efoo( )\u548c\"hello world\"\u4e32\u90fd\u4f1a\u4ea7\u751f\u4e00\u4e2a\u4e34\u65f6\u5bf9\u8c61\uff0c\u800c\u5728C++\u4e2d\uff0c\u8fd9\u4e9b\u4e34\u65f6\u5bf9\u8c61\u90fd\u662fconst\u7c7b\u578b\u7684\u3002\u56e0\u6b64\u4e0a\u9762\u7684\u8868\u8fbe\u5f0f\u5c31\u662f\u8bd5\u56fe\u5c06\u4e00\u4e2aconst\u7c7b\u578b\u7684\u5bf9\u8c61\u8f6c\u6362\u4e3a\u975econst\u7c7b\u578b\uff0c\u8fd9\u662f\u975e\u6cd5\u7684\u3002", "\n\u5f15\u7528\u578b\u53c2\u6570\u5e94\u8be5\u5728\u80fd\u88ab\u5b9a\u4e49\u4e3aconst\u7684\u60c5\u51b5\u4e0b\uff0c\u5c3d\u91cf\u5b9a\u4e49\u4e3aconst \u3002", "\n5. \u5c06\u201c\u5f15\u7528\u201d\u4f5c\u4e3a\u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b\u7684\u683c\u5f0f\u3001\u597d\u5904\u548c\u9700\u8981\u9075\u5b88\u7684\u89c4\u5219?", "\n\u683c\u5f0f\uff1a\u7c7b\u578b\u6807\u8bc6\u7b26 &\u51fd\u6570\u540d\uff08\u5f62\u53c2\u5217\u8868\u53ca\u7c7b\u578b\u8bf4\u660e\uff09{ //\u51fd\u6570\u4f53 }", "\n\u597d\u5904\uff1a\u5728\u5185\u5b58\u4e2d\u4e0d\u4ea7\u751f\u88ab\u8fd4\u56de\u503c\u7684\u526f\u672c\uff1b\uff08\u6ce8\u610f\uff1a\u6b63\u662f\u56e0\u4e3a\u8fd9\u70b9\u539f\u56e0\uff0c\u6240\u4ee5\u8fd4\u56de\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u5f15\u7528\u662f\u4e0d\u53ef\u53d6\u7684\u3002\u56e0\u4e3a\u968f\u7740\u8be5\u5c40\u90e8\u53d8\u91cf\u751f\u5b58\u671f\u7684\u7ed3\u675f\uff0c\u76f8\u5e94\u7684\u5f15\u7528\u4e5f\u4f1a\u5931\u6548\uff0c\u4ea7\u751fruntime error!", "\n\u6ce8\u610f\u4e8b\u9879\uff1a", "\n\uff081\uff09\u4e0d\u80fd\u8fd4\u56de\u5c40\u90e8\u53d8\u91cf\u7684\u5f15\u7528\u3002\u8fd9\u6761\u53ef\u4ee5\u53c2\u7167Effective C++[1]\u7684Item 31\u3002\u4e3b\u8981\u539f\u56e0\u662f\u5c40\u90e8\u53d8\u91cf\u4f1a\u5728\u51fd\u6570\u8fd4\u56de\u540e\u88ab\u9500\u6bc1\uff0c\u56e0\u6b64\u88ab\u8fd4\u56de\u7684\u5f15\u7528\u5c31\u6210\u4e3a\u4e86\"\u65e0\u6240\u6307\"\u7684\u5f15\u7528\uff0c\u7a0b\u5e8f\u4f1a\u8fdb\u5165\u672a\u77e5\u72b6\u6001\u3002", "\n\uff082\uff09\u4e0d\u80fd\u8fd4\u56de\u51fd\u6570\u5185\u90e8new\u5206\u914d\u7684\u5185\u5b58\u7684\u5f15\u7528\u3002\u8fd9\u6761\u53ef\u4ee5\u53c2\u7167Effective C++[1]\u7684Item 31\u3002\u867d\u7136\u4e0d\u5b58\u5728\u5c40\u90e8\u53d8\u91cf\u7684\u88ab\u52a8\u9500\u6bc1 \u95ee\u9898\uff0c\u53ef\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff08\u8fd4\u56de\u51fd\u6570\u5185\u90e8new\u5206\u914d\u5185\u5b58\u7684\u5f15\u7528\uff09\uff0c\u53c8\u9762\u4e34\u5176\u5b83\u5c34\u5c2c\u5c40\u9762\u3002\u4f8b\u5982\uff0c\u88ab\u51fd\u6570\u8fd4\u56de\u7684\u5f15\u7528\u53ea\u662f\u4f5c\u4e3a\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf\u51fa\u73b0\uff0c\u800c\u6ca1\u6709\u88ab\u8d4b\u4e88\u4e00\u4e2a\u5b9e \u9645\u7684\u53d8\u91cf\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5f15\u7528\u6240\u6307\u5411\u7684\u7a7a\u95f4\uff08\u7531new\u5206\u914d\uff09\u5c31\u65e0\u6cd5\u91ca\u653e\uff0c\u9020\u6210memory leak\u3002", "\n\uff083\uff09\u53ef\u4ee5\u8fd4\u56de\u7c7b\u6210\u5458\u7684\u5f15\u7528\uff0c\u4f46\u6700\u597d\u662fconst\u3002\u8fd9\u6761\u539f\u5219\u53ef\u4ee5\u53c2\u7167Effective C++[1]\u7684Item 30\u3002\u4e3b\u8981\u539f\u56e0\u662f\u5f53\u5bf9\u8c61\u7684\u5c5e\u6027 \u662f\u4e0e\u67d0\u79cd\u4e1a\u52a1\u89c4\u5219\uff08business rule\uff09\u76f8\u5173\u8054\u7684\u65f6\u5019\uff0c\u5176\u8d4b\u503c\u5e38\u5e38\u4e0e\u67d0\u4e9b\u5176\u5b83\u5c5e\u6027\u6216\u8005\u5bf9\u8c61\u7684\u72b6\u6001\u6709\u5173\uff0c\u56e0\u6b64\u6709\u5fc5\u8981\u5c06\u8d4b\u503c\u64cd\u4f5c\u5c01\u88c5\u5728\u4e00\u4e2a\u4e1a\u52a1\u89c4\u5219\u5f53 \u4e2d\u3002\u5982\u679c\u5176\u5b83\u5bf9\u8c61\u53ef\u4ee5\u83b7\u5f97\u8be5\u5c5e\u6027\u7684\u975e\u5e38\u91cf\u5f15\u7528\uff08\u6216\u6307\u9488\uff09\uff0c\u90a3\u4e48\u5bf9\u8be5\u5c5e\u6027\u7684\u5355\u7eaf\u8d4b\u503c\u5c31\u4f1a\u7834\u574f\u4e1a\u52a1\u89c4\u5219\u7684\u5b8c\u6574\u6027\u3002", "\n\uff084\uff09\u6d41\u64cd\u4f5c\u7b26\u91cd\u8f7d\u8fd4\u56de\u503c\u7533\u660e\u4e3a\u201c\u5f15\u7528\u201d\u7684\u4f5c\u7528\uff1a", "\n\u6d41\u64cd\u4f5c\u7b26>\uff0c\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u7b26\u5e38\u5e38\u5e0c\u671b\u88ab\u8fde\u7eed\u4f7f\u7528\uff0c\u4f8b \u5982\uff1acout \n\u4f8b3", "\n#include "], "title": "\u7ecf\u5178c++\u9762\u8bd5\u9898\uff082\uff09"},
{"contents": ["1.\u4ecb\u7ecd\u4e00\u4e0bSTL\uff0c\u8be6\u7ec6\u8bf4\u660eSTL\u5982\u4f55\u5b9e\u73b0vector\u3002", "\n     STL (\u6807\u51c6\u6a21\u7248\u5e93\uff0cStandard Template Library)\u5b83\u7531\u5bb9\u5668\u7b97\u6cd5\u8fed\u4ee3\u5668\u7ec4\u6210\u3002", "\n     STL\u6709\u4ee5\u4e0b\u7684\u4e00\u4e9b\u4f18\u70b9\uff1a", "\n     \u53ef\u4ee5\u65b9\u4fbf\u5bb9\u6613\u5730\u5b9e\u73b0\u641c\u7d22\u6570\u636e\u6216\u5bf9\u6570\u636e\u6392\u5e8f\u7b49\u4e00\u7cfb\u5217\u7684\u7b97\u6cd5\uff1b", "\n     \u8c03\u8bd5\u7a0b\u5e8f\u65f6\u66f4\u52a0\u5b89\u5168\u548c\u65b9\u4fbf\uff1b", "\n     \u5373\u4f7f\u662f\u4eba\u4eec\u7528STL\u5728UNIX\u5e73\u53f0\u4e0b\u5199\u7684\u4ee3\u7801\u4f60\u4e5f\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u7406\u89e3\uff08\u56e0\u4e3aSTL\u662f\u8de8\u5e73\u53f0\u7684\uff09\u3002", "\n     vector\u5b9e\u8d28\u4e0a\u5c31\u662f\u4e00\u4e2a\u52a8\u6001\u6570\u7ec4\uff0c\u4f1a\u6839\u636e\u6570\u636e\u7684\u589e\u52a0,\u52a8\u6001\u7684\u589e\u52a0\u6570\u7ec4\u7a7a\u95f4\u3002 ", "2.\u5982\u679c\u7528VC\u5f00\u53d1\u7a0b\u5e8f\uff0c\u5e38\u89c1\u8fd9\u4e48\u51e0\u4e2a\u9519\u8bef\uff0cC2001,c2005,c2011,\u8fd9\u4e9b\u9519\u8bef\u7684\u539f\u56e0\u662f\u4ec0\u4e48\u3002", "\n   \u5728\u5b66\u4e60VC++\u7684\u8fc7\u7a0b\u4e2d\uff0c\u9047\u5230\u7684LNK2001\u9519\u8bef\u7684\u9519\u8bef\u6d88\u606f\u4e3b\u8981\u4e3a\uff1a", "\n\u3000 unresolved external symbol \u201csymbol\u201d\uff08\u4e0d\u786e\u5b9a\u7684\u5916\u90e8\u201c\u7b26\u53f7\u201d\uff09\u3002", "\n    \u5982\u679c\u8fde\u63a5\u7a0b\u5e8f\u4e0d\u80fd\u5728\u6240\u6709\u7684\u5e93\u548c\u76ee\u6807\u6587\u4ef6\u5185\u627e\u5230\u6240\u5f15\u7528\u7684\u51fd\u6570\u3001\u53d8\u91cf\u6216\u6807\u7b7e\uff0c\u5c06\u4ea7\u751f\u6b64\u9519\u8bef\u6d88\u606f\u3002", "\n     \u4e00\u822c\u6765\u8bf4\uff0c\u53d1\u751f\u9519\u8bef\u7684\u539f\u56e0\u6709\u4e24\u4e2a\uff1a\u4e00\u662f\u6240\u5f15\u7528\u7684\u51fd\u6570\u3001\u53d8\u91cf\u4e0d\u5b58\u5728\u3001\u62fc\u5199\u4e0d\u6b63\u786e\u6216\u8005\u4f7f\u7528\u9519\u8bef\uff1b\u5176\u6b21\u53ef\u80fd\u4f7f\u7528\u4e86\u4e0d\u540c\u7248\u672c\u7684\u8fde\u63a5\u5e93\u3002", "\n     \u7f16\u7a0b\u4e2d\u7ecf\u5e38\u80fd\u9047\u5230LNK2005\u9519\u8bef\u2014\u2014\u91cd\u590d\u5b9a\u4e49\u9519\u8bef\uff0c\u5176\u5b9eLNK2005\u9519\u8bef\u5e76\u4e0d\u662f\u4e00\u4e2a\u5f88\u96be\u89e3\u51b3\u7684\u9519\u8bef.", "\n  3.\u7ee7\u627f\u548c\u59d4\u6d3e\u6709\u4ec0\u4e48\u5206\u522b\uff0c\u5728\u51b3\u5b9a\u4f7f\u7528\u7ee7\u627f\u6216\u8005\u59d4\u6d3e\u7684\u65f6\u5019\u9700\u8981\u8003\u8651\u4ec0\u4e48\u3002", "\n     \u5728OOD,OOP\u4e2d\uff0c\u7ec4\u5408\u4f18\u4e8e\u7ee7\u627f.", "\n     \u5f53\u7136\u591a\u6001\u7684\u57fa\u7840\u662f\u7ee7\u627f\uff0c\u6ca1\u6709\u7ee7\u627f\u591a\u6001\u65e0\u4ece\u8c08\u8d77\u3002", "\n     \u5f53\u5bf9\u8c61\u7684\u7c7b\u578b\u4e0d\u5f71\u54cd\u7c7b\u4e2d\u51fd\u6570\u7684\u884c\u4e3a\u65f6\uff0c\u5c31\u8981\u4f7f\u7528\u6a21\u677f\u6765\u751f\u6210\u8fd9\u6837\u4e00\u7ec4\u7c7b\u3002", "\n     \u5f53\u5bf9\u8c61\u7684\u7c7b\u578b\u5f71\u54cd\u7c7b\u4e2d\u51fd\u6570\u7684\u884c\u4e3a\u65f6\uff0c\u5c31\u8981\u4f7f\u7528\u7ee7\u627f\u6765\u5f97\u5230\u8fd9\u6837\u4e00\u7ec4\u7c7b.", "\n  4.\u6307\u9488\u548c\u5f15\u7528\u6709\u4ec0\u4e48\u5206\u522b\uff1b\u5982\u679c\u4f20\u5f15\u7528\u6bd4\u4f20\u6307\u9488\u5b89\u5168\uff0c\u4e3a\u4ec0\u4e48\uff1f\u5982\u679c\u6211\u4f7f\u7528\u5e38\u91cf\u6307\u9488\u96be\u9053\u4e0d\u884c\u5417\uff1f", "\n     (1) \u5f15\u7528\u5728\u521b\u5efa\u7684\u540c\u65f6\u5fc5\u987b\u521d\u59cb\u5316\uff0c\u5373\u5f15\u7528\u5230\u4e00\u4e2a\u6709\u6548\u7684\u5bf9\u8c61\uff1b\u800c\u6307\u9488\u5728\u5b9a\u4e49\u7684\u65f6\u5019\u4e0d\u5fc5\u521d\u59cb\u5316\uff0c\u53ef\u4ee5\u5728\u5b9a\u4e49\u540e\u9762\u7684\u4efb\u4f55\u5730\u65b9\u91cd\u65b0\u8d4b\u503c\uff0e", "\n     (2) \u4e0d\u5b58\u5728\uff2e\uff35\uff2c\uff2c\u5f15\u7528\uff0c\u5f15\u7528\u5fc5\u987b\u4e0e\u5408\u6cd5\u7684\u5b58\u50a8\u5355\u5143\u5173\u8054;\u800c\u6307\u9488\u5219\u53ef\u4ee5\u662fNULL.", "\n     (3) \u5f15\u7528\u4e00\u65e6\u88ab\u521d\u59cb\u5316\u4e3a\u6307\u5411\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5b83\u5c31\u4e0d\u80fd\u88ab\u6539\u53d8\u4e3a\u53e6\u4e00\u4e2a\u5bf9\u8c61\u7684\u5f15\u7528\uff1b\u800c\u6307\u9488\u5728\u4efb\u4f55\u65f6\u5019\u90fd\u53ef\u4ee5\u6539\u53d8\u4e3a\u6307\u5411\u53e6\u4e00\u4e2a\u5bf9\u8c61\uff0e\u7ed9\u5f15\u7528\u8d4b\u503c\u5e76\u4e0d\u662f\u6539\u53d8\u5b83\u548c\u539f\u59cb\u5bf9\u8c61\u7684\u7ed1\u5b9a\u5173\u7cfb\uff0e", "\n     (4) \u5f15\u7528\u7684\u521b\u5efa\u548c\u9500\u6bc1\u5e76\u4e0d\u4f1a\u8c03\u7528\u7c7b\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570", "\n     (5) \u8bed\u8a00\u5c42\u9762\uff0c\u5f15\u7528\u7684\u7528\u6cd5\u548c\u5bf9\u8c61\u4e00\u6837\uff1b\u5728\u4e8c\u8fdb\u5236\u5c42\u9762\uff0c\u5f15\u7528\u4e00\u822c\u90fd\u662f\u901a\u8fc7\u6307\u9488\u6765\u5b9e\u73b0\u7684\uff0c\u53ea\u4e0d\u8fc7\u7f16\u8bd1\u5668\u5e2e\u6211\u4eec\u5b8c\u6210\u4e86\u8f6c\u6362.", "\n     \u4e0d\u5b58\u5728\u7a7a\u5f15\u7528\uff0c\u5e76\u4e14\u5f15\u7528\u4e00\u65e6\u88ab\u521d\u59cb\u5316\u4e3a\u6307\u5411\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5b83\u5c31\u4e0d\u80fd\u88ab\u6539\u53d8\u4e3a\u53e6\u4e00\u4e2a\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u663e\u5f97\u5f88\u5b89\u5168\u3002", "\n     const \u6307\u9488\u4ecd\u7136\u5b58\u5728\u7a7a\u6307\u9488\uff0c\u5e76\u4e14\u6709\u53ef\u80fd\u4ea7\u751f\u91ce\u6307\u9488.", "\n     \u603b\u7684\u6765\u8bf4\uff1a\u5f15\u7528\u65e2\u5177\u6709\u6307\u9488\u7684\u6548\u7387\uff0c\u53c8\u5177\u6709\u53d8\u91cf\u4f7f\u7528\u7684\u65b9\u4fbf\u6027\u548c\u76f4\u89c2\u6027\uff0e", "\n  5.\u53c2\u6570\u4f20\u9012\u6709\u51e0\u79cd\u65b9\u5f0f\uff1b\u5b9e\u73b0\u591a\u6001\u53c2\u6570\u4f20\u9012\u91c7\u7528\u4ec0\u4e48\u65b9\u5f0f\uff0c\u5982\u679c\u6ca1\u6709\u4f7f\u7528\u67d0\u79cd\u65b9\u5f0f\u539f\u56e0\u662f\u4ec0\u4e48\uff1b", "\n     \u4f20\u503c\uff0c\u4f20\u6307\u9488\u6216\u8005\u5f15\u7528", "\n6.\u7ed3\u5408\u4e00\u4e2a\u9879\u76ee\u8bf4\u660e\u4f60\u600e\u6837\u5e94\u7528\u8bbe\u8ba1\u6a21\u5f0f\u7684\u7406\u5ff5\u3002", "\n     \u8bbe\u8ba1\u6a21\u5f0f\u66f4\u591a\u8003\u8651\u662f\u6269\u5c55\u548c\u91cd\u7528\uff0c\u800c\u8fd9\u4e24\u65b9\u9762\u5f88\u591a\u60c5\u51b5\u4e0b\uff0c\u5f80\u5f80\u4f1a\u88ab\u5ffd\u7565\u3002", "\n     \u4e0d\u8fc7\uff0c\u6211\u4e0d\u5efa\u8bae\u6ee5\u7528\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u4ee5\u4e3a\u5b83\u6709\u53ef\u80fd\u4f7f\u5f97\u7b80\u5355\u95ee\u9898\u590d\u6742\u5316.", "\n  7.\u4ecb\u7ecd\u4e00\u4e0b\u4f60\u5bf9\u8bbe\u8ba1\u6a21\u5f0f\u7684\u7406\u89e3\u3002\uff08\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u6709\u5f88\u591a\u5f88\u7ec6\u8282\u7684\u95ee\u9898\u968f\u673a\u95ee\u7684\uff09", "\n     \u8bbe\u8ba1\u6a21\u5f0f\u6982\u5ff5\u662f\u7531\u5efa\u7b51\u8bbe\u8ba1\u5e08Christopher Alexander\u63d0\u51fa:\u201d\u6bcf\u4e00\u4e2a\u6a21\u5f0f\u63cf\u8ff0\u4e86\u4e00\u4e2a\u5728\u6211\u4eec\u5468\u56f4\u4e0d\u65ad\u91cd\u590d\u53d1\u751f\u7684\u95ee\u9898, \u4ee5\u53ca\u8be5\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u7684\u6838\u5fc3.\u8fd9\u6837,\u4f60\u5c31\u80fd\u4e00\u6b21\u53c8\u4e00\u6b21\u5730\u4f7f\u7528\u8be5\u65b9\u6848\u800c\u4e0d\u5fc5\u505a\u91cd\u590d\u52b3\u52a8.\u201d\u4e0a\u8ff0\u5b9a\u4e49\u662f\u5bf9\u8bbe\u8ba1\u6a21\u5f0f\u7684\u5e7f\u4e49\u5b9a\u4e49.\u5c06\u5176\u5e94\u7528\u5230\u9762\u5411\u5bf9\u8c61\u8f6f\u4ef6\u7684\u9886\u57df \u5185,\u5c31\u5f62\u6210\u4e86\u5bf9\u8bbe\u8ba1\u6a21\u5f0f\u7684\u72ed\u4e49\u5b9a\u4e49.", "\n     \u53ef\u4ee5\u7b80\u5355\u7684\u8ba4\u4e3a:\u8bbe\u8ba1\u6a21\u5f0f\u5c31\u662f\u89e3\u51b3\u67d0\u4e2a\u7279\u5b9a\u7684\u9762\u5411\u5bf9\u8c61\u8f6f\u4ef6\u95ee\u9898\u7684\u7279\u5b9a\u65b9\u6cd5\uff0c \u5e76\u4e14\u5df2\u7ecf\u4e0a\u5347\u5230\u7406\u8bba\u7a0b\u5ea6\u3002", "\n     \u6846\u67b6\u4e0e\u8bbe\u8ba1\u6a21\u5f0f\u7684\u533a\u522b:", "\n     1,\u8bbe\u8ba1\u6a21\u5f0f\u548c\u6846\u67b6\u9488\u5bf9\u7684\u95ee\u9898\u57df\u4e0d\u540c.\u8bbe\u8ba1\u6a21\u5f0f\u9488\u5bf9\u9762\u5411\u5bf9\u8c61\u7684\u95ee\u9898\u57df;\u6846\u67b6\u9488\u5bf9\u7279\u5b9a\u4e1a\u52a1\u7684\u95ee\u9898\u57df", "\n     2,\u8bbe\u8ba1\u6a21\u5f0f\u6bd4\u6846\u67b6\u66f4\u4e3a\u62bd\u8c61.\u8bbe\u8ba1\u6a21\u5f0f\u5728\u78b0\u5230\u5177\u4f53\u95ee\u9898\u540e,\u624d\u80fd\u4ea7\u751f\u4ee3\u7801;\u6846\u67b6\u5df2\u7ecf\u53ef\u4ee5\u7528\u4ee3\u7801\u8868\u793a", "\n     3,\u8bbe\u8ba1\u6a21\u5f0f\u662f\u6bd4\u6846\u67b6\u66f4\u5c0f\u7684\u4f53\u7cfb\u7ed3\u6784\u5143\u7d20.\u6846\u67b6\u4e2d\u53ef\u4ee5\u5305\u62ec\u591a\u4e2a\u8bbe\u8ba1\u6a21\u5f0f", "\n     \u8bbe\u8ba1\u6a21\u5f0f\u5c31\u50cf\u6b66\u672f\u4e2d\u57fa\u672c\u7684\u62db\u5f0f.\u5c06\u8fd9\u4e9b\u62db\u5f0f\u5408\u7406\u5730\u7eb5\u7ec4\u5408\u8d77\u6765,\u5c31\u5f62\u6210\u5957\u8def(\u6846\u67b6)\uff0c\u6846\u67b6\u662f\u4e00\u79cd\u534a\u6210\u54c1.", "\n  8.C++\u548cC\u5b9a\u4e49\u7ed3\u6784\u7684\u5206\u522b\u662f\u4ec0\u4e48\u3002", "\n     C language \u7684\u7ed3\u6784\u4ec5\u4ec5\u662f\u6570\u636e\u7684\u7ed3\u5408", "\n     C plus plus\u7684struct \u548c class \u5176\u5b9e\u5177\u5907\u51e0\u4e4e\u4e00\u6837\u7684\u529f\u80fd\uff0c\u53ea\u662f\u9ed8\u8ba4\u7684\u8bbf\u95ee\u5c5e\u6027\u4e0d\u4e00\u6837\u800c\u5df2\u3002", "\n  9.\u6784\u9020\u51fd\u6570\u53ef\u5426\u662f\u865a\u6c57\u6570\uff0c\u4e3a\u4ec0\u4e48\uff1f\u6790\u6784\u51fd\u6570\u5462\uff0c\u53ef\u5426\u662f\u7eaf\u865a\u7684\u5462\uff1f", "\n     \u6784\u9020\u51fd\u6570\u4e0d\u80fd\u4e3a\u865a\u51fd\u6570\uff0c\u8981\u6784\u9020\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5fc5\u987b\u6e05\u695a\u5730\u77e5\u9053\u8981\u6784\u9020\u4ec0\u4e48\uff0c\u5426\u5219\u65e0\u6cd5\u6784\u9020\u4e00\u4e2a\u5bf9\u8c61\u3002", "\n     \u6790\u6784\u51fd\u6570\u53ef\u4ee5\u4e3a\u7eaf\u865a\u51fd\u6570\u3002", "\n  10.\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u76f8\u5173\u95ee\u9898\uff0c\u6df1\u62f7\u8d1d\uff0c\u6d45\u62f7\u8d1d\uff0c\u4e34\u65f6\u5bf9\u8c61\u7b49\u3002", "\n     \u6df1\u62f7\u8d1d\u610f\u5473\u7740\u62f7\u8d1d\u4e86\u8d44\u6e90\u548c\u6307\u9488\uff0c\u800c\u6d45\u62f7\u8d1d\u53ea\u662f\u62f7\u8d1d\u4e86\u6307\u9488\uff0c\u6ca1\u6709\u62f7\u8d1d\u8d44\u6e90", "\n     \u8fd9\u6837\u4f7f\u5f97\u4e24\u4e2a\u6307\u9488\u6307\u5411\u540c\u4e00\u4efd\u8d44\u6e90\uff0c\u9020\u6210\u5bf9\u540c\u4e00\u4efd\u6790\u6784\u4e24\u6b21\uff0c\u7a0b\u5e8f\u5d29\u6e83\u3002", "\n     \u4e34\u65f6\u5bf9\u8c61\u7684\u5f00\u9500\u6bd4\u5c40\u90e8\u5bf9\u8c61\u5c0f\u4e9b\u3002", "\n11.\u7ed3\u54081\u4e2a\u4f60\u8ba4\u4e3a\u6bd4\u8f83\u80fd\u4f53\u73b0OOP\u601d\u60f3\u7684\u9879\u76ee\uff0c\u7528UML\u6765\u63cf\u8ff0\u3002", "\n(\u6700\u597d\u8fd9\u4e2a\u9879\u76ee\u7ee7\u627f\uff0c\u591a\u6001\uff0c\u865a\u51fd\u6570\u90fd\u6709\u4f53\u73b0\uff09\u8fd9\u4e2a\u95ee\u9898\u5927\u6982\u4f1a\u5360\u9762\u8bd5\u65f6\u95f4\u7684\u4e00\u534a\uff0c\u5e76\u4e14\u4f1a\u95ee\u5f88\u591a\u95ee\u9898\uff0c\u4e00\u4e0d\u5c0f\u5fc3\u53ef\u80fd\u4f1a\u88ab\u95ee\u4f4f\uff09", "\n12.\u57fa\u7c7b\u7684\u67091\u4e2a\u865a\u51fd\u6570\uff0c\u5b50\u7c7b\u8fd8\u9700\u8981\u7533\u660e\u4e3avirtual\u5417\uff1f\u4e3a\u4ec0\u4e48\u3002", "\n     \u4e0d\u7533\u660e\u6ca1\u6709\u5173\u7cfb\u7684\u3002", "\n     \u4e0d\u8fc7\uff0c\u6211\u603b\u662f\u559c\u6b22\u663e\u5f0f\u7533\u660e\uff0c\u4f7f\u5f97\u4ee3\u7801\u66f4\u52a0\u6e05\u6670\u3002", "\n  13.C\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7cbe\u5fc3\u5c01\u88c5\u67d0\u4e9b\u51fd\u6570\u529f\u80fd\u5b9e\u73b0\u91cd\u7528\uff0c\u90a3C++\u7684\u7c7b\u6709\u4ec0\u4e48\u4f18\u70b9\u5417\uff0c\u96be\u9053\u4ec5\u4ec5\u662f\u4e3a\u5b9e\u73b0\u91cd\u7528\u3002", "\n     \u5e76\u4e0d\u4ec5\u4ec5\u662f\u8fd9\u6837\u7684\u3002", "\n     OOD\uff0cOOP\u4ece\u6839\u672c\u4e0a\u6539\u53d8\u4e86\u7a0b\u5e8f\u8bbe\u8ba1\u6a21\u5f0f\u548c\u8bbe\u8ba1\u601d\u60f3\uff0c\u5177\u5907\u91cd\u5927\u548c\u6df1\u8fdc\u7684\u610f\u4e49\u3002", "\n     \u7c7b\u7684\u4e09\u5927\u6700\u57fa\u672c\u7684\u7279\u5f81\uff1a\u5c01\u88c5\uff0c\u7ee7\u627f\uff0c\u591a\u6001.", "\n  14.C++\u7279\u70b9\u662f\u4ec0\u4e48\uff0c\u5982\u4f55\u5b9e\u73b0\u591a\u6001\uff1f\u753b\u51fa\u57fa\u7c7b\u548c\u5b50\u7c7b\u5728\u5185\u5b58\u4e2d\u7684\u76f8\u4e92\u5173\u7cfb\u3002", "\n     \u591a\u6001\u7684\u57fa\u7840\u662f\u7ee7\u627f\uff0c\u9700\u8981\u865a\u51fd\u6570\u7684\u652f\u6301\uff0c\u7b80\u5355\u7684\u591a\u6001\u662f\u5f88\u7b80\u5355\u7684\u3002", "\n     \u5b50\u7c7b\u7ee7\u627f\u7236\u7c7b\u5927\u90e8\u5206\u7684\u8d44\u6e90\uff0c\u4e0d\u80fd\u7ee7\u627f\u7684\u6709\u6784\u9020\u51fd\u6570\uff0c\u6790\u6784\u51fd\u6570\uff0c\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0coperator=\u51fd\u6570\uff0c\u53cb\u5143\u51fd\u6570\u7b49\u7b49", "\n  15.\u4e3a\u4ec0\u4e48\u8981\u5f15\u5165\u62bd\u8c61\u57fa\u7c7b\u548c\u7eaf\u865a\u51fd\u6570\uff1f", "\n     \u4e3b\u8981\u76ee\u7684\u662f\u4e3a\u4e86\u5b9e\u73b0\u4e00\u79cd\u63a5\u53e3\u7684\u6548\u679c\u3002", "\n  16.\u4ecb\u7ecd\u4e00\u4e0b\u6a21\u677f\u548c\u5bb9\u5668\u3002\u5982\u4f55\u5b9e\u73b0\uff1f\uff08\u4e5f\u8bb8\u4f1a\u8ba9\u4f60\u5f53\u573a\u4e3e\u4f8b\u5b9e\u73b0\uff09", "\n     \u6a21\u677f\u53ef\u4ee5\u8bf4\u6bd4\u8f83\u53e4\u8001\u4e86\uff0c\u4f46\u662f\u5f53\u524d\u7684\u6cdb\u578b\u7f16\u7a0b\u5b9e\u8d28\u4e0a\u5c31\u662f\u6a21\u677f\u7f16\u7a0b\u3002", "\n     \u5b83\u4f53\u73b0\u4e86\u4e00\u79cd\u901a\u7528\u548c\u6cdb\u5316\u7684\u601d\u60f3\u3002", "\n     STL\u67097\u79cd\u4e3b\u8981\u5bb9\u5668\uff1avector,list,deque,map,multimap,set,multiset.", "\n 17.\u4f60\u5982\u4f55\u7406\u89e3MVC\u3002\u7b80\u5355\u4e3e\u4f8b\u6765\u8bf4\u660e\u5176\u5e94\u7528\u3002", "\n     MVC\u6a21\u5f0f\u662fobserver \u6a21\u5f0f\u7684\u4e00\u4e2a\u7279\u4f8b,\u5178\u578b\u7684\u6709MFC\u91cc\u9762\u7684\u6587\u6863\u89c6\u56fe\u67b6\u6784\u3002", "\n  18.\u591a\u91cd\u7ee7\u627f\u5982\u4f55\u6d88\u9664\u5411\u4e0a\u7ee7\u627f\u7684\u4e8c\u4e49\u6027\u3002", "\n     \u4f7f\u7528\u865a\u62df\u7ee7\u627f\u5373\u53ef."], "title": "\u7ecf\u5178C++\u9762\u8bd5\u9898(1)"},
{"contents": ["9. \u7ed3\u6784\u4e0e\u8054\u5408\u6709\u548c\u533a\u522b\uff1f", "\n1. \u7ed3\u6784\u548c\u8054\u5408\u90fd\u662f\u7531\u591a\u4e2a\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u6210\u5458\u7ec4\u6210, \u4f46\u5728\u4efb\u4f55\u540c\u4e00\u65f6\u523b, \u8054\u5408\u4e2d\u53ea\u5b58\u653e\u4e86\u4e00\u4e2a\u88ab\u9009\u4e2d\u7684\u6210\u5458\uff08\u6240\u6709\u6210\u5458\u5171\u7528\u4e00\u5757\u5730\u5740\u7a7a\u95f4\uff09, \u800c\u7ed3\u6784\u7684\u6240\u6709\u6210\u5458\u90fd\u5b58\u5728\uff08\u4e0d\u540c\u6210\u5458\u7684\u5b58\u653e\u5730\u5740\u4e0d\u540c\uff09\u3002", "\n2. \u5bf9\u4e8e\u8054\u5408\u7684\u4e0d\u540c\u6210\u5458\u8d4b\u503c, \u5c06\u4f1a\u5bf9\u5176\u5b83\u6210\u5458\u91cd\u5199, \u539f\u6765\u6210\u5458\u7684\u503c\u5c31\u4e0d\u5b58\u5728\u4e86, \u800c\u5bf9\u4e8e\u7ed3\u6784\u7684\u4e0d\u540c\u6210\u5458\u8d4b\u503c\u662f\u4e92\u4e0d\u5f71\u54cd\u7684\u3002", "\n10. \u4e0b\u9762\u5173\u4e8e\u201c\u8054\u5408\u201d\u7684\u9898\u76ee\u7684\u8f93\u51fa\uff1f", "\na)", "\n#include ", "11. \u5df2\u77e5strcpy\u7684\u51fd\u6570\u539f\u578b\uff1achar *strcpy(char *strDest, const char *strSrc)\u5176\u4e2dstrDest \u662f\u76ee\u7684\u5b57\u7b26\u4e32\uff0cstrSrc \u662f\u6e90\u5b57\u7b26\u4e32\u3002\u4e0d\u8c03\u7528C++/C \u7684\u5b57\u7b26\u4e32\u5e93\u51fd\u6570\uff0c\u8bf7\u7f16\u5199\u51fd\u6570 strcpy\u3002", "\n\u7b54\u6848\uff1a", "\nchar *strcpy(char *strDest, const char *strSrc)", "\n{", "\nif ( strDest == NULL || strSrc == NULL)", "\nreturn NULL ;", "\nif ( strDest == strSrc)", "\nreturn strDest ;", "\nchar *tempptr = strDest ;", "\nwhile( (*strDest++ = *strSrc++) != \u2018\\0\u2019)", "\n;", "\nreturn tempptr ;", "\n}", "\n12. \u5df2\u77e5String\u7c7b\u5b9a\u4e49\u5982\u4e0b\uff1a", "\nclass String", "\n{", "\npublic:", "\nString(const char *str = NULL); // \u901a\u7528\u6784\u9020\u51fd\u6570", "\nString(const String &another); // \u62f7\u8d1d\u6784\u9020\u51fd\u6570", "\n~ String(); // \u6790\u6784\u51fd\u6570", "\nString & operater =(const String &rhs); // \u8d4b\u503c\u51fd\u6570", "\nprivate:", "\nchar *m_data; // \u7528\u4e8e\u4fdd\u5b58\u5b57\u7b26\u4e32", "\n};", "\n\u5c1d\u8bd5\u5199\u51fa\u7c7b\u7684\u6210\u5458\u51fd\u6570\u5b9e\u73b0\u3002", "\n\u7b54\u6848\uff1a", "\nString::String(const char *str)", "\n{", "\nif ( str == NULL ) //strlen\u5728\u53c2\u6570\u4e3aNULL\u65f6\u4f1a\u629b\u5f02\u5e38\u624d\u4f1a\u6709\u8fd9\u6b65\u5224\u65ad", "\n{", "\nm_data = new char[1] ;", "\nm_data[0] = \u2018\\0\u2032 ;", "\n}", "\nelse", "\n{", "\nm_data = new char[strlen(str) + 1];", "\nstrcpy(m_data,str);", "\n}", "\n}", "\nString::String(const String &another)", "\n{", "\nm_data = new char[strlen(another.m_data) + 1];", "\nstrcpy(m_data,other.m_data);", "\n}", "\nString& String::operator =(const String &rhs)", "\n{", "\nif ( this == &rhs)", "\nreturn *this ;", "\ndelete []m_data; //\u5220\u9664\u539f\u6765\u7684\u6570\u636e\uff0c\u65b0\u5f00\u4e00\u5757\u5185\u5b58", "\nm_data = new char[strlen(rhs.m_data) + 1];", "\nstrcpy(m_data,rhs.m_data);", "\nreturn *this ;", "\n}", "\nString::~String()", "\n{", "\ndelete []m_data ;", "\n}", "\n13. .h\u5934\u6587\u4ef6\u4e2d\u7684ifndef/define/endif \u7684\u4f5c\u7528\uff1f", "\n\u7b54\uff1a", "\n\u9632\u6b62\u8be5\u5934\u6587\u4ef6\u88ab\u91cd\u590d\u5f15\u7528\u3002", "\n14. #include", "extern int add( int x, int y );", "\nint main( int argc, char* argv[] )", "\n{", "\nadd( 2, 3 );", "\nreturn 0;", "\n}", "\n15\u9898\u76ee\u7684\u89e3\u7b54\u8bf7\u53c2\u8003\u300aC++\u4e2dextern \u201cC\u201d\u542b\u4e49\u6df1\u5c42\u63a2\u7d22\u300b\u6ce8\u89e3\uff1a ", "16. \u5173\u8054\u3001\u805a\u5408(Aggregation)\u4ee5\u53ca\u7ec4\u5408(Composition)\u7684\u533a\u522b\uff1f", "\n\u6d89\u53ca\u5230UML\u4e2d\u7684\u4e00\u4e9b\u6982\u5ff5\uff1a\u5173\u8054\u662f\u8868\u793a\u4e24\u4e2a\u7c7b\u7684\u4e00\u822c\u6027\u8054\u7cfb\uff0c\u6bd4\u5982\u201c\u5b66\u751f\u201d\u548c\u201c\u8001\u5e08\u201d\u5c31\u662f\u4e00\u79cd\u5173\u8054\u5173\u7cfb\uff1b\u805a\u5408\u8868\u793ahas-a\u7684\u5173\u7cfb\uff0c\u662f\u4e00\u79cd\u76f8\u5bf9\u677e\u6563\u7684\u5173\u7cfb\uff0c\u805a\u5408\u7c7b\u4e0d\u9700\u8981\u5bf9\u88ab\u805a\u5408\u7c7b\u8d1f\u8d23\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u7528\u7a7a\u7684\u83f1\u5f62\u8868\u793a\u805a\u5408\u5173\u7cfb\uff1a", "\n\u4ece\u5b9e\u73b0\u7684\u89d2\u5ea6\u8bb2\uff0c\u805a\u5408\u53ef\u4ee5\u8868\u793a\u4e3a:", "\nclass A {\u2026} class B { A* a; \u2026..}", "\n\u800c\u7ec4\u5408\u8868\u793acontains-a\u7684\u5173\u7cfb\uff0c\u5173\u8054\u6027\u5f3a\u4e8e\u805a\u5408\uff1a\u7ec4\u5408\u7c7b\u4e0e\u88ab\u7ec4\u5408\u7c7b\u6709\u76f8\u540c\u7684\u751f\u547d\u5468\u671f\uff0c\u7ec4\u5408\u7c7b\u8981\u5bf9\u88ab\u7ec4\u5408\u7c7b\u8d1f\u8d23\uff0c\u91c7\u7528\u5b9e\u5fc3\u7684\u83f1\u5f62\u8868\u793a\u7ec4\u5408\u5173\u7cfb\uff1a", "\n\u5b9e\u73b0\u7684\u5f62\u5f0f\u662f:", "\nclass A{\u2026} class B{ A a; \u2026}", "\n17.\u9762\u5411\u5bf9\u8c61\u7684\u4e09\u4e2a\u57fa\u672c\u7279\u5f81\uff0c\u5e76\u7b80\u5355\u53d9\u8ff0\u4e4b\uff1f", "\n1. \u5c01\u88c5\uff1a\u5c06\u5ba2\u89c2\u4e8b\u7269\u62bd\u8c61\u6210\u7c7b\uff0c\u6bcf\u4e2a\u7c7b\u5bf9\u81ea\u8eab\u7684\u6570\u636e\u548c\u65b9\u6cd5\u5b9e\u884cprotection(private, protected,public)", "\n2. \u7ee7\u627f\uff1a\u5e7f\u4e49\u7684\u7ee7\u627f\u6709\u4e09\u79cd\u5b9e\u73b0\u5f62\u5f0f\uff1a\u5b9e\u73b0\u7ee7\u627f\uff08\u6307\u4f7f\u7528\u57fa\u7c7b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u800c\u65e0\u9700\u989d\u5916\u7f16\u7801\u7684\u80fd\u529b\uff09\u3001\u53ef\u89c6\u7ee7\u627f\uff08\u5b50\u7a97\u4f53\u4f7f\u7528\u7236\u7a97\u4f53\u7684\u5916\u89c2\u548c\u5b9e\u73b0\u4ee3 \u7801\uff09\u3001\u63a5\u53e3\u7ee7\u627f\uff08\u4ec5\u4f7f\u7528\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u5b9e\u73b0\u6ede\u540e\u5230\u5b50\u7c7b\u5b9e\u73b0\uff09\u3002\u524d\u4e24\u79cd\uff08\u7c7b\u7ee7\u627f\uff09\u548c\u540e\u4e00\u79cd\uff08\u5bf9\u8c61\u7ec4\u5408=>\u63a5\u53e3\u7ee7\u627f\u4ee5\u53ca\u7eaf\u865a\u51fd\u6570\uff09\u6784\u6210\u4e86\u529f\u80fd\u590d\u7528\u7684\u4e24\u79cd\u65b9 \u5f0f\u3002", "\n3. \u591a\u6001\uff1a\u662f\u5c06\u7236\u5bf9\u8c61\u8bbe\u7f6e\u6210\u4e3a\u548c\u4e00\u4e2a\u6216\u66f4\u591a\u7684\u4ed6\u7684\u5b50\u5bf9\u8c61\u76f8\u7b49\u7684\u6280\u672f\uff0c\u8d4b\u503c\u4e4b\u540e\uff0c\u7236\u5bf9\u8c61\u5c31\u53ef\u4ee5\u6839\u636e\u5f53\u524d\u8d4b\u503c\u7ed9\u5b83\u7684\u5b50\u5bf9\u8c61\u7684\u7279\u6027\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u8fd0\u4f5c\u3002\u7b80\u5355\u7684\u8bf4\uff0c\u5c31\u662f\u4e00\u53e5\u8bdd\uff1a\u5141\u8bb8\u5c06\u5b50\u7c7b\u7c7b\u578b\u7684\u6307\u9488\u8d4b\u503c\u7ed9\u7236\u7c7b\u7c7b\u578b\u7684\u6307\u9488\u3002", "\n18. \u91cd\u8f7d\uff08overload)\u548c\u91cd\u5199(overried\uff0c\u6709\u7684\u4e66\u4e5f\u53eb\u505a\u201c\u8986\u76d6\u201d\uff09\u7684\u533a\u522b\uff1f", "\n\u5e38\u8003\u7684\u9898\u76ee\u3002\u4ece\u5b9a\u4e49\u4e0a\u6765\u8bf4\uff1a", "\n\u91cd\u8f7d\uff1a\u662f\u6307\u5141\u8bb8\u5b58\u5728\u591a\u4e2a\u540c\u540d\u51fd\u6570\uff0c\u800c\u8fd9\u4e9b\u51fd\u6570\u7684\u53c2\u6570\u8868\u4e0d\u540c\uff08\u6216\u8bb8\u53c2\u6570\u4e2a\u6570\u4e0d\u540c\uff0c\u6216\u8bb8\u53c2\u6570\u7c7b\u578b\u4e0d\u540c\uff0c\u6216\u8bb8\u4e24\u8005\u90fd\u4e0d\u540c\uff09\u3002", "\n\u91cd\u5199\uff1a\u662f\u6307\u5b50\u7c7b\u91cd\u65b0\u5b9a\u4e49\u590d\u7c7b\u865a\u51fd\u6570\u7684\u65b9\u6cd5\u3002", "\n\u4ece\u5b9e\u73b0\u539f\u7406\u4e0a\u6765\u8bf4\uff1a", "\n\u91cd\u8f7d\uff1a\u7f16\u8bd1\u5668\u6839\u636e\u51fd\u6570\u4e0d\u540c\u7684\u53c2\u6570\u8868\uff0c\u5bf9\u540c\u540d\u51fd\u6570\u7684\u540d\u79f0\u505a\u4fee\u9970\uff0c\u7136\u540e\u8fd9\u4e9b\u540c\u540d\u51fd\u6570\u5c31\u6210\u4e86\u4e0d\u540c\u7684\u51fd\u6570\uff08\u81f3\u5c11\u5bf9\u4e8e\u7f16\u8bd1\u5668\u6765\u8bf4\u662f\u8fd9\u6837\u7684\uff09\u3002\u5982\uff0c\u6709\u4e24\u4e2a\u540c\u540d \u51fd\u6570\uff1afunction func(p:integer):integer;\u548cfunction func(p:string):integer;\u3002\u90a3\u4e48 \u7f16\u8bd1\u5668\u505a\u8fc7\u4fee\u9970\u540e\u7684\u51fd\u6570\u540d\u79f0\u53ef\u80fd\u662f\u8fd9\u6837\u7684\uff1aint_func\u3001str_func\u3002\u5bf9\u4e8e\u8fd9\u4e24\u4e2a\u51fd\u6570\u7684\u8c03\u7528\uff0c\u5728\u7f16\u8bd1\u5668\u95f4\u5c31\u5df2\u7ecf\u786e\u5b9a\u4e86\uff0c\u662f\u9759\u6001\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83 \u4eec\u7684\u5730\u5740\u5728\u7f16\u8bd1\u671f\u5c31\u7ed1\u5b9a\u4e86\uff08\u65e9\u7ed1\u5b9a\uff09\uff0c\u56e0\u6b64\uff0c\u91cd\u8f7d\u548c\u591a\u6001\u65e0\u5173\uff01", "\n\u91cd\u5199\uff1a\u548c\u591a\u6001\u771f\u6b63\u76f8\u5173\u3002\u5f53\u5b50\u7c7b\u91cd\u65b0\u5b9a\u4e49\u4e86\u7236\u7c7b\u7684\u865a\u51fd\u6570\u540e\uff0c\u7236\u7c7b\u6307\u9488\u6839\u636e\u8d4b\u7ed9\u5b83\u7684\u4e0d\u540c\u7684\u5b50\u7c7b\u6307\u9488\uff0c\u52a8\u6001\u7684\u8c03\u7528\u5c5e\u4e8e\u5b50\u7c7b\u7684\u8be5\u51fd\u6570\uff0c\u8fd9\u6837\u7684\u51fd\u6570\u8c03\u7528\u5728\u7f16\u8bd1\u671f\u95f4\u662f\u65e0\u6cd5\u786e\u5b9a\u7684\uff08\u8c03\u7528\u7684\u5b50\u7c7b\u7684\u865a\u51fd\u6570\u7684\u5730\u5740\u65e0\u6cd5\u7ed9\u51fa\uff09\u3002\u56e0\u6b64\uff0c\u8fd9\u6837\u7684\u51fd\u6570\u5730\u5740\u662f\u5728\u8fd0\u884c\u671f\u7ed1\u5b9a\u7684\uff08\u665a\u7ed1\u5b9a\uff09\u3002"], "title": "\u7ecf\u5178c++\u9762\u8bd5\u9898\uff083\uff09"},
{"contents": ["\u516d) 1) \u4ec0\u4e48\u662f\u9884\u7f16\u8bd1\uff0c\u4f55\u65f6\u9700\u8981\u9884\u7f16\u8bd1\uff1a\u603b\u662f\u4f7f\u7528\u4e0d\u7ecf\u5e38\u6539\u52a8\u7684\u5927\u578b\u4ee3\u7801\u4f53\u3002", "\n\u7a0b\u5e8f\u7531\u591a\u4e2a\u6a21\u5757\u7ec4\u6210\uff0c\u6240\u6709\u6a21\u5757\u90fd\u4f7f\u7528\u4e00\u7ec4\u6807\u51c6\u7684\u5305\u542b\u6587\u4ef6\u548c\u76f8\u540c\u7684\u7f16\u8bd1\u9009\u9879\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u5c06\u6240\u6709\u5305\u542b\u6587\u4ef6\u9884\u7f16\u8bd1\u4e3a\u4e00\u4e2a\u9884\u7f16\u8bd1\u5934\u3002", "\n2) char * const p;", "\n\u3000\u3000char const * p", "\n\u3000\u3000const char *p", "\n\u3000\u3000\u4e0a\u8ff0\u4e09\u4e2a\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u3000\u3000char * const p; //\u5e38\u91cf\u6307\u9488\uff0cp\u7684\u503c\u4e0d\u53ef\u4ee5\u4fee\u6539", "\n\u3000\u3000char const * p\uff1b//\u6307\u5411\u5e38\u91cf\u7684\u6307\u9488\uff0c\u6307\u5411\u7684\u5e38\u91cf\u503c\u4e0d\u53ef\u4ee5\u6539", "\n\u3000\u3000const char *p\uff1b //\u548cchar const *p", "\n3)\u3000char str1[] = \u201cabc\u201d;", "\n\u3000\u3000char str2[] = \u201cabc\u201d;", "\n\u3000\u3000const char str3[] = \u201cabc\u201d;", "\n\u3000\u3000const char str4[] = \u201cabc\u201d;", "\n\u3000\u3000const char *str5 = \u201cabc\u201d;", "\n\u3000\u3000const char *str6 = \u201cabc\u201d;", "\n\u3000\u3000char *str7 = \u201cabc\u201d;", "\n\u3000\u3000char *str8 = \u201cabc\u201d;", "\n\u3000\u3000cout \n\u3000\u3000cout \n\u3000\u3000cout \n\u3000\u3000cout \n\u3000\u3000\u7ed3\u679c\u662f\uff1a0 0 1 1", "\n\u3000\u3000\u89e3\u7b54\uff1astr1,str2,str3,str4\u662f\u6570\u7ec4\u53d8\u91cf\uff0c\u5b83\u4eec\u6709\u5404\u81ea\u7684\u5185\u5b58\u7a7a\u95f4\uff1b\u800cstr5,str6,str7,str8\u662f\u6307\u9488\uff0c\u5b83\u4eec\u6307\u5411\u76f8\u540c\u7684\u5e38\u91cf\u533a\u57df\u3002", "\n4) \u4ee5\u4e0b\u4ee3\u7801\u4e2d\u7684\u4e24\u4e2asizeof\u7528\u6cd5\u6709\u95ee\u9898\u5417\uff1f", "\n\u3000\u3000void UpperCase( char str[] ) // \u5c06 str \u4e2d\u7684\u5c0f\u5199\u5b57\u6bcd\u8f6c\u6362\u6210\u5927\u5199\u5b57\u6bcd", "\n\u3000\u3000{", "\n\u3000\u3000for( size_t i=0; i", "\n\u3000if( 'a'\nstr[i] -= ('a'-'A' );", "\n\u3000\u3000}", "\n\u3000\u3000char str[] = \"aBcDe\";", "\n\u3000\u3000cout \n\u3000\u3000UpperCase( str );", "\n\u3000\u3000cout \n\u7b54\uff1a\u51fd\u6570\u5185\u7684sizeof\u6709\u95ee\u9898\u3002\u6839\u636e\u8bed\u6cd5\uff0csizeof\u5982\u7528\u4e8e\u6570\u7ec4\uff0c\u53ea\u80fd\u6d4b\u51fa\u9759\u6001\u6570\u7ec4\u7684\u5927\u5c0f\uff0c\u65e0\u6cd5\u68c0\u6d4b\u52a8\u6001\u5206\u914d\u7684\u6216\u5916\u90e8\u6570\u7ec4\u5927\u5c0f\u3002\u51fd\u6570\u5916\u7684 str\u662f\u4e00\u4e2a\u9759\u6001\u5b9a\u4e49\u7684\u6570\u7ec4\uff0c\u56e0\u6b64\u5176\u5927\u5c0f\u4e3a6\uff0c\u51fd\u6570\u5185\u7684str\u5b9e\u9645\u53ea\u662f\u4e00\u4e2a\u6307\u5411\u5b57\u7b26\u4e32\u7684\u6307\u9488\uff0c\u6ca1\u6709\u4efb\u4f55\u989d\u5916\u7684\u4e0e\u6570\u7ec4\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u56e0\u6b64sizeof\u4f5c\u7528\u4e8e\u4e0a \u53ea\u5c06\u5176\u5f53\u6307\u9488\u770b\uff0c\u4e00\u4e2a\u6307\u9488\u4e3a4\u4e2a\u5b57\u8282\uff0c\u56e0\u6b64\u8fd4\u56de4\u3002", "\n5) \u4e00\u4e2a32\u4f4d\u7684\u673a\u5668,\u8be5\u673a\u5668\u7684\u6307\u9488\u662f\u591a\u5c11\u4f4d\uff1f", "\n\u6307\u9488\u662f\u591a\u5c11\u4f4d\u53ea\u8981\u770b\u5730\u5740\u603b\u7ebf\u7684\u4f4d\u6570\u5c31\u884c\u4e86\u300280386\u4ee5\u540e\u7684\u673a\u5b50\u90fd\u662f32\u7684\u6570\u636e\u603b\u7ebf\u3002\u6240\u4ee5\u6307\u9488\u7684\u4f4d\u6570\u5c31\u662f4\u4e2a\u5b57\u8282\u4e86\u3002", "\n6)\u3000main()", "\n\u3000\u3000{", "\n\u3000\u3000\u3000int a[5]={1,2,3,4,5};", "\n\u3000\u3000\u3000int *ptr=(int *)(&a+1);", "\n\u3000\u3000\u3000printf(\"%d,%d\",*(a+1),*(ptr-1));", "\n\u3000\u3000}", "\n\u3000\u3000\u8f93\u51fa\uff1a2,5", "\n\u3000\u3000*(a+1\uff09\u5c31\u662fa[1]\uff0c*(ptr-1)\u5c31\u662fa[4],\u6267\u884c\u7ed3\u679c\u662f2\uff0c5", "\n\u3000\u3000&a+1\u4e0d\u662f\u9996\u5730\u5740+1\uff0c\u7cfb\u7edf\u4f1a\u8ba4\u4e3a\u52a0\u4e00\u4e2aa\u6570\u7ec4\u7684\u504f\u79fb\uff0c\u662f\u504f\u79fb\u4e86\u4e00\u4e2a\u6570\u7ec4\u7684\u5927\u5c0f\uff08\u672c\u4f8b\u662f5\u4e2aint\uff09", "\n\u3000\u3000int *ptr=(int *)(&a+1);", "\n\u3000\u3000\u5219ptr\u5b9e\u9645\u662f&(a[5]),\u4e5f\u5c31\u662fa+5", "\n\u3000\u3000 \u539f\u56e0\u5982\u4e0b\uff1a", "\n\u3000\u3000&a\u662f\u6570\u7ec4\u6307\u9488\uff0c\u5176\u7c7b\u578b\u4e3a int (*)[5];", "\n\u3000\u3000\u800c\u6307\u9488\u52a01\u8981\u6839\u636e\u6307\u9488\u7c7b\u578b\u52a0\u4e0a\u4e00\u5b9a\u7684\u503c\uff0c\u4e0d\u540c\u7c7b\u578b\u7684\u6307\u9488+1\u4e4b\u540e\u589e\u52a0\u7684\u5927\u5c0f\u4e0d\u540c\u3002", "\n\u3000\u3000a\u662f\u957f\u5ea6\u4e3a5\u7684int\u6570\u7ec4\u6307\u9488\uff0c\u6240\u4ee5\u8981\u52a0 5*sizeof(int)", "\n\u3000\u3000\u6240\u4ee5ptr\u5b9e\u9645\u662fa[5]", "\n\u3000\u3000\u4f46\u662fprt\u4e0e(&a+1)\u7c7b\u578b\u662f\u4e0d\u4e00\u6837\u7684(\u8fd9\u70b9\u5f88\u91cd\u8981)", "\n\u3000\u3000\u6240\u4ee5prt-1\u53ea\u4f1a\u51cf\u53bbsizeof(int*)", "\n\u3000\u3000a,&a\u7684\u5730\u5740\u662f\u4e00\u6837\u7684\uff0c\u4f46\u610f\u601d\u4e0d\u4e00\u6837\uff0ca\u662f\u6570\u7ec4\u9996\u5730\u5740\uff0c\u4e5f\u5c31\u662fa[0]\u7684\u5730\u5740\uff0c&a\u662f\u5bf9\u8c61\uff08\u6570\u7ec4\uff09\u9996\u5730\u5740\uff0ca+1\u662f\u6570\u7ec4\u4e0b\u4e00\u5143\u7d20\u7684\u5730\u5740\uff0c\u5373a[1],&a+1\u662f\u4e0b\u4e00\u4e2a\u5bf9\u8c61\u7684\u5730\u5740\uff0c\u5373a[5].", "\n7)\u3000\u8bf7\u95ee\u4ee5\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1a", "\n\u3000\u3000int main()", "\n\u3000\u3000{", "\n\u3000\u3000\u3000char a;", "\n\u3000\u3000\u3000char *str=&a;", "\n\u3000\u3000\u3000strcpy(str,\"hello\");", "\n\u3000\u3000\u3000printf(str);", "\n\u3000\u3000\u3000return 0;", "\n\u3000\u3000}", "\n\u3000\u3000\u6ca1\u6709\u4e3astr\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff0c\u5c06\u4f1a\u53d1\u751f\u5f02\u5e38\u3002\u95ee\u9898\u51fa\u5728\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u590d\u5236\u8fdb\u4e00\u4e2a\u5b57\u7b26\u53d8\u91cf\u6307\u9488\u6240\u6307\u5730\u5740\u3002\u867d\u7136\u53ef\u4ee5\u6b63\u786e\u8f93\u51fa\u7ed3\u679c\uff0c\u4f46\u56e0\u4e3a\u8d8a\u754c\u8fdb\u884c\u5185\u5728\u8bfb\u5199\u800c\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\u3002", "\n8)", "\n\u3000\u3000char* s=\"AAA\";", "\n\u3000\u3000printf(\"%s\",s);", "\n\u3000\u3000s[0]='B';", "\n\u3000\u3000printf(\"%s\",s);", "\n\u3000\u3000\u6709\u4ec0\u4e48\u9519\uff1f", "\n\u3000\u3000\"AAA\"\u662f\u5b57\u7b26\u4e32\u5e38\u91cf\u3002s\u662f\u6307\u9488\uff0c\u6307\u5411\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5e38\u91cf\uff0c\u6240\u4ee5\u58f0\u660es\u7684\u65f6\u5019\u5c31\u6709\u95ee\u9898\u3002", "\n\u3000\u3000cosnt char* s=\"AAA\";", "\n\u3000\u3000\u7136\u540e\u53c8\u56e0\u4e3a\u662f\u5e38\u91cf\uff0c\u6240\u4ee5\u5bf9\u662fs[0]\u7684\u8d4b\u503c\u64cd\u4f5c\u662f\u4e0d\u5408\u6cd5\u7684\u3002", "\n9) \u5199\u4e00\u4e2a\u201c\u6807\u51c6\u201d\u5b8f\uff0c\u8fd9\u4e2a\u5b8f\u8f93\u5165\u4e24\u4e2a\u53c2\u6570\u5e76\u8fd4\u56de\u8f83\u5c0f\u7684\u4e00\u4e2a\u3002", "\n\u3000\u3000.#define Min(X, Y) ((X)>(Y)?(Y):(X))//\u7ed3\u5c3e\u6ca1\u6709;", "\n10) \u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\u7ecf\u5e38\u8981\u7528\u5230\u65e0\u9650\u5faa\u73af\uff0c\u4f60\u600e\u4e48\u7528C\u7f16\u5199\u6b7b\u5faa\u73af\u3002", "\n\u3000\u3000while(1){}\u6216\u8005for(;;)", "\n\u8f6f\u4ef6\u5f00\u53d1\u7f51 www.mscto.cn", "\n11) \u5173\u952e\u5b57static\u7684\u4f5c\u7528\u662f\u4ec0\u4e48\uff1f", "\n\u3000\u3000\u5b9a\u4e49\u9759\u6001\u53d8\u91cf", "\n12) \u5173\u952e\u5b57const\u6709\u4ec0\u4e48\u542b\u610f\uff1f", "\n\u3000\u3000\u8868\u793a\u5e38\u91cf\u4e0d\u53ef\u4ee5\u4fee\u6539\u7684\u53d8\u91cf\u3002", "\n13) \u5173\u952e\u5b57volatile\u6709\u4ec0\u4e48\u542b\u610f\uff1f\u5e76\u4e3e\u51fa\u4e09\u4e2a\u4e0d\u540c\u7684\u4f8b\u5b50\uff1f", "\n\u3000\u3000\u63d0\u793a\u7f16\u8bd1\u5668\u5bf9\u8c61\u7684\u503c\u53ef\u80fd\u5728\u7f16\u8bd1\u5668\u672a\u76d1\u6d4b\u5230\u7684\u60c5\u51b5\u4e0b\u6539\u53d8\u3002", "\n14) int (*s[10])(int) \u8868\u793a\u7684\u662f\u4ec0\u4e48\uff1f", "\n\u3000\u3000int (*s[10])(int) \u51fd\u6570\u6307\u9488\u6570\u7ec4\uff0c\u6bcf\u4e2a\u6307\u9488\u6307\u5411\u4e00\u4e2aint func(int param)\u7684\u51fd\u6570\u3002", "\n15) \u6709\u4ee5\u4e0b\u8868\u8fbe\u5f0f\uff1a", "\n\u3000\u3000int a=248; b=4;", "\n\u3000\u3000int const c=21;", "\n\u3000\u3000const int *d=&a;", "\n\u3000\u3000int *const e=&b;", "\n\u3000\u3000int const *f const =&a;", "\n\u3000\u3000\u8bf7\u95ee\u4e0b\u5217\u8868\u8fbe\u5f0f\u54ea\u4e9b\u4f1a\u88ab\u7f16\u8bd1\u5668\u7981\u6b62\uff1f\u4e3a\u4ec0\u4e48\uff1f", "\n\u3000\u3000*c=32;d=&b;*d=43;e=34;e=&a;f=0x321f;", "\n\u3000\u3000*c \u8fd9\u662f\u4e2a\u4ec0\u4e48\u4e1c\u4e1c\uff0c\u7981\u6b62", "\n\u3000\u3000*d \u8bf4\u4e86\u662fconst\uff0c \u7981\u6b62", "\n\u3000\u3000e = &a \u8bf4\u4e86\u662fconst \u7981\u6b62", "\n\u3000\u3000const *f const =&a; \u7981\u6b62", "\n16) \u4ea4\u6362\u4e24\u4e2a\u53d8\u91cf\u7684\u503c\uff0c\u4e0d\u4f7f\u7528\u7b2c\u4e09\u4e2a\u53d8\u91cf\u3002\u5373a=3,b=5,\u4ea4\u6362\u4e4b\u540ea=5,b=3;", "\n\u3000\u3000\u6709\u4e24\u79cd\u89e3\u6cd5, \u4e00\u79cd\u7528\u7b97\u672f\u7b97\u6cd5, \u4e00\u79cd\u7528^(\u5f02\u6216)", "\n\u3000\u3000a = a + b;", "\n\u3000\u3000b = a \u2013 b;", "\n\u3000\u3000a = a \u2013 b;", "\n\u3000\u3000or", "\n\u3000\u3000a = a^b;// \u53ea\u80fd\u5bf9int,char..", "\n\u3000\u3000b = a^b;", "\n\u3000\u3000a = a^b;", "\n\u3000\u3000or", "\n\u3000\u3000a ^= b ^= a;", "\n17) c\u548cc++\u4e2d\u7684struct\u6709\u4ec0\u4e48\u4e0d\u540c\uff1f", "\n\u3000\u3000c\u548cc++\u4e2dstruct\u7684\u4e3b\u8981\u533a\u522b\u662fc\u4e2d\u7684struct\u4e0d\u53ef\u4ee5\u542b\u6709\u6210\u5458\u51fd\u6570\uff0c\u800cc++\u4e2d\u7684struct\u53ef\u4ee5\u3002c++\u4e2dstruct\u548cclass\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u9ed8\u8ba4\u7684\u5b58\u53d6\u6743\u9650\u4e0d\u540c\uff0cstruct\u9ed8\u8ba4\u4e3apublic\uff0c\u800cclass\u9ed8\u8ba4\u4e3aprivate\u3002 ", "18) #include "], "title": "\u7ecf\u5178c++\u9762\u8bd5\u9898\uff084\uff09"},
{"contents": ["46) \u4f4d\u57df \uff1a", "\n\u3000\u3000\u6709\u4e9b\u4fe1\u606f\u5728\u5b58\u50a8\u65f6\uff0c\u5e76\u4e0d\u9700\u8981\u5360\u7528\u4e00\u4e2a\u5b8c\u6574\u7684\u5b57\u8282\uff0c \u800c\u53ea\u9700\u5360\u51e0\u4e2a\u6216\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u3002\u4f8b\u5982\u5728\u5b58\u653e\u4e00\u4e2a\u5f00\u5173\u91cf\u65f6\uff0c\u53ea\u67090\u548c1 \u4e24\u79cd\u72b6\u6001\uff0c\u7528\u4e00\u4f4d\u4e8c\u8fdb \u4f4d\u5373\u53ef\u3002\u4e3a\u4e86\u8282\u7701\u5b58\u50a8\u7a7a\u95f4\uff0c\u5e76\u4f7f\u5904\u7406\u7b80\u4fbf\uff0c\uff23\u8bed\u8a00\u53c8\u63d0\u4f9b\u4e86\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u79f0\u4e3a\u201c\u4f4d\u57df\u201d\u6216\u201c\u4f4d\u6bb5\u201d\u3002\u6240\u8c13\u201c\u4f4d\u57df\u201d\u662f\u628a\u4e00\u4e2a\u5b57\u8282\u4e2d\u7684\u4e8c\u8fdb\u4f4d\u5212\u5206\u4e3a\u51e0\u4e2a\u4e0d\u540c\u7684\u533a \u57df\uff0c\u5e76\u8bf4\u660e\u6bcf\u4e2a\u533a\u57df\u7684\u4f4d\u6570\u3002\u6bcf\u4e2a\u57df\u6709\u4e00\u4e2a\u57df\u540d\uff0c\u5141\u8bb8\u5728\u7a0b\u5e8f\u4e2d\u6309\u57df\u540d\u8fdb\u884c\u64cd\u4f5c\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u628a\u51e0\u4e2a\u4e0d\u540c\u7684\u5bf9\u8c61\u7528\u4e00\u4e2a\u5b57\u8282\u7684\u4e8c\u8fdb\u5236\u4f4d\u57df\u6765\u8868\u793a\u3002\u4e00\u3001\u4f4d\u57df\u7684\u5b9a\u4e49\u548c \u4f4d\u57df\u53d8\u91cf\u7684\u8bf4\u660e\u4f4d\u57df\u5b9a\u4e49\u4e0e\u7ed3\u6784\u5b9a\u4e49\u76f8\u4eff\uff0c\u5176\u5f62\u5f0f\u4e3a\uff1a", "\nstruct \u4f4d\u57df\u7ed3\u6784\u540d { \u4f4d\u57df\u5217\u8868 }; \u5176\u4e2d\u4f4d\u57df\u5217\u8868\u7684\u5f62\u5f0f\u4e3a\uff1a\u7c7b\u578b\u8bf4\u660e\u7b26\u4f4d\u57df\u540d\uff1a\u4f4d\u57df\u957f\u5ea6", "\n\u3000\u3000\u3000\u4f8b\u5982\uff1a", "\n\u3000\u3000struct bs", "\n\u3000\u3000{", "\n\u3000\u3000\u3000int a:8;", "\n\u3000\u3000\u3000int b:2;", "\n\u3000\u3000\u3000int c:6;", "\n\u3000\u3000};", "\n\u3000\u3000\u4f4d\u57df\u53d8\u91cf\u7684\u8bf4\u660e\u4e0e\u7ed3\u6784\u53d8\u91cf\u8bf4\u660e\u7684\u65b9\u5f0f\u76f8\u540c\u3002\u53ef\u91c7\u7528\u5148\u5b9a\u4e49\u540e\u8bf4\u660e\uff0c\u540c\u65f6\u5b9a\u4e49\u8bf4\u660e\u6216\u8005\u76f4\u63a5\u8bf4\u660e\u8fd9\u4e09\u79cd\u65b9\u5f0f\u3002\u4f8b\u5982\uff1a", "\n\u3000\u3000struct bs", "\n\u3000\u3000{", "\n\u3000\u3000\u3000int a:8;", "\n\u3000\u3000\u3000int b:2;", "\n\u3000\u3000\u3000int c:6;", "\n\u3000\u3000}data;", "\n\u3000\u3000\u8bf4\u660edata\u4e3abs\u53d8\u91cf\uff0c\u5171\u5360\u4e24\u4e2a\u5b57\u8282\u3002\u5176\u4e2d\u4f4d\u57dfa\u53608\u4f4d\uff0c\u4f4d\u57dfb\u53602\u4f4d\uff0c\u4f4d\u57dfc\u53606\u4f4d\u3002\u5bf9\u4e8e\u4f4d\u57df\u7684\u5b9a\u4e49\u5c1a\u6709\u4ee5\u4e0b\u51e0\u70b9\u8bf4\u660e\uff1a", "\n\u3000\u3000\u4e00\u4e2a\u4f4d\u57df\u5fc5\u987b\u5b58\u50a8\u5728\u540c\u4e00\u4e2a\u5b57\u8282\u4e2d\uff0c\u4e0d\u80fd\u8de8\u4e24\u4e2a\u5b57\u8282\u3002\u5982\u4e00\u4e2a\u5b57\u8282\u6240\u5269\u7a7a\u95f4\u4e0d\u591f\u5b58\u653e\u53e6\u4e00\u4f4d\u57df\u65f6\uff0c\u5e94\u4ece\u4e0b\u4e00\u5355\u5143\u8d77\u5b58\u653e\u8be5\u4f4d\u57df\u3002\u4e5f\u53ef\u4ee5\u6709\u610f\u4f7f\u67d0\u4f4d\u57df\u4ece\u4e0b\u4e00\u5355\u5143\u5f00\u59cb\u3002\u4f8b\u5982\uff1a", "\n\u3000\u3000\u3000\u3000struct bs", "\n\u3000\u3000{", "\n\u3000\u3000\u3000unsigned a:4", "\n\u3000\u3000\u3000unsigned :0", "\n\u3000\u3000\u3000unsigned b:4", "\n\u3000\u3000\u3000unsigned c:4", "\n\u3000\u3000}", "\n\u3000\u3000\u5728\u8fd9\u4e2a\u4f4d\u57df\u5b9a\u4e49\u4e2d\uff0ca\u5360\u7b2c\u4e00\u5b57\u8282\u76844\u4f4d\uff0c\u540e4\u4f4d\u586b0\u8868\u793a\u4e0d\u4f7f\u7528\uff0cb\u4ece\u7b2c\u4e8c\u5b57\u8282\u5f00\u59cb\uff0c\u5360\u75284\u4f4d\uff0cc\u5360\u75284\u4f4d\u3002", "\n\u3000\u3000\u7531\u4e8e\u4f4d\u57df\u4e0d\u5141\u8bb8\u8de8\u4e24\u4e2a\u5b57\u8282\uff0c\u56e0\u6b64\u4f4d\u57df\u7684\u957f\u5ea6\u4e0d\u80fd\u5927\u4e8e\u4e00\u4e2a\u5b57\u8282\u7684\u957f\u5ea6\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e0d\u80fd\u8d85\u8fc78\u4f4d\u4e8c\u8fdb\u4f4d\u3002", "\n\u3000\u3000\u4f4d\u57df\u53ef\u4ee5\u65e0\u4f4d\u57df\u540d\uff0c\u8fd9\u65f6\u5b83\u53ea\u7528\u6765\u4f5c\u586b\u5145\u6216\u8c03\u6574\u4f4d\u7f6e\u3002\u65e0\u540d\u7684\u4f4d\u57df\u662f\u4e0d\u80fd\u4f7f\u7528\u7684\u3002\u4f8b\u5982\uff1a", "\n\u3000\u3000struct k", "\n\u3000\u3000{", "\n\u3000\u3000\u3000int a:1", "\n\u3000\u3000\u3000int :2", "\n\u3000\u3000\u3000int b:3", "\n\u3000\u3000\u3000int c:2", "\n\u3000\u3000};", "\n\u3000\u3000\u4ece\u4ee5\u4e0a\u5206\u6790\u53ef\u4ee5\u770b\u51fa\uff0c\u4f4d\u57df\u5728\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u79cd\u7ed3\u6784\u7c7b\u578b\uff0c\u4e0d\u8fc7\u5176\u6210\u5458\u662f\u6309\u4e8c\u8fdb\u4f4d\u5206\u914d\u7684\u3002", "\n\u3000\u3000\u4f4d\u57df\u7684\u4f7f\u7528\u4f4d\u57df\u7684\u4f7f\u7528\u548c\u7ed3\u6784\u6210\u5458\u7684\u4f7f\u7528\u76f8\u540c\uff0c\u5176\u4e00\u822c\u5f62\u5f0f\u4e3a\uff1a\u4f4d\u57df\u53d8\u91cf\u540d?\u4f4d\u57df\u540d\u4f4d\u57df\u5141\u8bb8\u7528\u5404\u79cd\u683c\u5f0f\u8f93\u51fa\u3002", "\n\u3000\u3000main()", "\n\u3000\u3000{", "\n\u3000\u3000\u3000struct bs", "\n\u3000\u3000\u3000{", "\n\u3000\u3000\u3000\u3000unsigned a:1;", "\n\u3000\u3000\u3000\u3000unsigned b:3;", "\n\u3000\u3000\u3000\u3000unsigned c:4;", "\n\u3000\u3000\u3000}", "\n\u3000\u3000\u3000bit,*pbit;", "\n\u3000\u3000\u3000bit.a=1;", "\n\u3000\u3000\u3000bit.b=7;", "\n\u3000\u3000\u3000bit.c=15;", "\n\u3000\u3000\u3000pri", "\n47) \u6539\u9519\uff1a", "\n\u3000\u3000#include ", "51) struct s1", "\n\u3000\u3000{", "\n\u3000\u3000\u3000int i: 8;", "\n\u3000\u3000\u3000 int j: 4;", "\n\u3000\u3000\u3000 int a: 3;", "\n\u3000\u3000\u3000double b;", "\n\u3000\u3000};", "\n\u3000\u3000struct s2", "\n\u3000\u3000{", "\n\u3000\u3000\u3000 int i: 8;", "\n\u3000\u3000\u3000 int j: 4;", "\n\u3000\u3000\u3000 double b;", "\n\u3000\u3000\u3000 int a:3;", "\n\u3000\u3000};", "\n\u3000\u3000printf(\"sizeof(s1)= %d\\n\", sizeof(s1));", "\n\u3000\u3000printf(\"sizeof(s2)= %d\\n\", sizeof(s2));", "\n\u3000\u3000result: 16, 24", "\n\u3000\u3000\u7b2c\u4e00\u4e2astruct s1", "\n\u3000\u3000{", "\n\u3000\u3000\u3000 int i: 8;", "\n\u3000\u3000\u3000 int j: 4;", "\n\u3000\u3000\u3000 int a: 3;", "\n\u3000\u3000\u3000 double b;", "\n\u3000\u3000};", "\n\u3000\u3000\u7406\u8bba\u4e0a\u662f\u8fd9\u6837\u7684\uff0c\u9996\u5148\u662fi\u5728\u76f8\u5bf90\u7684\u4f4d\u7f6e\uff0c\u53608\u4f4d\u4e00\u4e2a\u5b57\u8282\uff0c\u7136\u540e\uff0cj\u5c31\u5728\u76f8\u5bf9\u4e00\u4e2a\u5b57\u8282\u7684\u4f4d\u7f6e\uff0c\u7531\u4e8e\u4e00\u4e2a\u4f4d\u7f6e\u7684\u5b57\u8282\u6570\u662f4\u4f4d\u7684\u500d\u6570\uff0c\u56e0\u6b64\u4e0d\u7528\u5bf9 \u9f50\uff0c\u5c31\u653e\u5728\u90a3\u91cc\u4e86\uff0c\u7136\u540e\u662fa\uff0c\u8981\u57283\u4f4d\u7684\u500d\u6570\u5173\u7cfb\u7684\u4f4d\u7f6e\u4e0a\uff0c\u56e0\u6b64\u8981\u79fb\u4e00\u4f4d\uff0c\u572815\u4f4d\u7684\u4f4d\u7f6e\u4e0a\u653e\u4e0b\uff0c\u76ee\u524d\u603b\u5171\u662f18\u4f4d\uff0c\u6298\u7b97\u8fc7\u6765\u662f2\u5b57\u82822\u4f4d\u7684\u6837\u5b50\uff0c\u7531\u4e8e double \u662f8\u5b57\u8282\u7684\uff0c\u56e0\u6b64\u8981\u5728\u76f8\u5bf90\u8981\u662f8\u4e2a\u5b57\u8282\u7684\u4f4d\u7f6e\u4e0a\u653e\u4e0b\uff0c\u56e0\u6b64\u4ece18\u4f4d\u5f00\u59cb\u52308\u4e2a\u5b57\u8282\u4e4b\u95f4\u7684\u4f4d\u7f6e\u88ab\u5ffd\u7565\uff0c\u76f4\u63a5\u653e\u57288\u5b57\u8282\u7684\u4f4d\u7f6e\u4e86\uff0c\u56e0\u6b64\uff0c\u603b\u5171 \u662f16\u5b57\u8282\u3002", "\n\u3000\u3000\u7b2c\u4e8c\u4e2a\u6700\u540e\u4f1a\u5bf9\u7167\u662f\u4e0d\u662f\u7ed3\u6784\u4f53\u5185\u6700\u5927\u6570\u636e\u7684\u500d\u6570\uff0c\u4e0d\u662f\u7684\u8bdd\uff0c\u4f1a\u8865\u6210\u662f\u6700\u5927\u6570\u636e\u7684\u500d\u6570\u3002", "\n40. \u94fe\u8868\u9898\uff1a\u4e00\u4e2a\u94fe\u8868\u7684\u7ed3\u70b9\u7ed3\u6784", "\nstruct Node", "\n{", "\nint data ;", "\nNode *next ;", "\n};", "\ntypedef struct Node Node ;", "\n(1)\u5df2\u77e5\u94fe\u8868\u7684\u5934\u7ed3\u70b9head,\u5199\u4e00\u4e2a\u51fd\u6570\u628a\u8fd9\u4e2a\u94fe\u8868\u9006\u5e8f ( Intel)", "\nNode * ReverseList(Node *head) //\u94fe\u8868\u9006\u5e8f", "\n{", "\nif ( head == NULL || head->next == NULL )", "\nreturn head;", "\nNode *p1 = head ;", "\nNode *p2 = p1->next ;", "\nNode *p3 = p2->next ;", "\np1->next = NULL ;", "\nwhile ( p3 != NULL )", "\n{", "\np2->next = p1 ;", "\np1 = p2 ;", "\np2 = p3 ;", "\np3 = p3->next ;", "\n}", "\np2->next = p1 ;", "\nhead = p2 ;", "\nreturn head ;", "\n}", "\n(2)\u5df2\u77e5\u4e24\u4e2a\u94fe\u8868head1 \u548chead2 \u5404\u81ea\u6709\u5e8f\uff0c\u8bf7\u628a\u5b83\u4eec\u5408\u5e76\u6210\u4e00\u4e2a\u94fe\u8868\u4f9d\u7136\u6709\u5e8f\u3002(\u4fdd\u7559\u6240\u6709\u7ed3\u70b9\uff0c\u5373\u4fbf\u5927\u5c0f\u76f8\u540c\uff09", "\nNode * Merge(Node *head1 , Node *head2)", "\n{", "\nif ( head1 == NULL)", "\nreturn head2 ;", "\nif ( head2 == NULL)", "\nreturn head1 ;", "\nNode *head = NULL ;", "\nNode *p1 = NULL;", "\nNode *p2 = NULL;", "\nif ( head1->data data )", "\n{", "\nhead = head1 ;", "\np1 = head1->next;", "\np2 = head2 ;", "\n}", "\nelse", "\n{", "\nhead = head2 ;", "\np2 = head2->next ;", "\np1 = head1 ;", "\n}", "\nNode *pcurrent = head ;", "\nwhile ( p1 != NULL && p2 != NULL)", "\n{", "\nif ( p1->data data )", "\n{", "\npcurrent->next = p1 ;", "\npcurrent = p1 ;", "\np1 = p1->next ;", "\n}", "\nelse", "\n{", "\npcurrent->next = p2 ;", "\npcurrent = p2 ;", "\np2 = p2->next ;", "\n}", "\n}", "\nif ( p1 != NULL )", "\npcurrent->next = p1 ;", "\nif ( p2 != NULL )", "\npcurrent->next = p2 ;", "\nreturn head ;", "\n}", "\n(3)\u5df2\u77e5\u4e24\u4e2a\u94fe\u8868head1 \u548chead2 \u5404\u81ea\u6709\u5e8f\uff0c\u8bf7\u628a\u5b83\u4eec\u5408\u5e76\u6210\u4e00\u4e2a\u94fe\u8868\u4f9d\u7136\u6709\u5e8f\uff0c\u8fd9\u6b21\u8981\u6c42\u7528\u9012\u5f52\u65b9\u6cd5\u8fdb\u884c\u3002 (Autodesk)", "\n\u7b54\u6848\uff1a", "\nNode * MergeRecursive(Node *head1 , Node *head2)", "\n{", "\nif ( head1 == NULL )", "\nreturn head2 ;", "\nif ( head2 == NULL)", "return head1 ;", "\nNode *head = NULL ;", "\nif ( head1->data data )", "\n{", "\nhead = head1 ;", "\nhead->next = MergeRecursive(head1->next,head2);", "\n}", "\nelse", "\n{", "\nhead = head2 ;", "\nhead->next = MergeRecursive(head1,head2->next);", "\n}", "\nreturn head ;", "\n}", "\n41. \u5206\u6790\u4e00\u4e0b\u8fd9\u6bb5\u7a0b\u5e8f\u7684\u8f93\u51fa (Autodesk)", "\nclass B", "\n{", "\npublic:", "\nB()", "\n{", "\ncout\n}", "\n~B()", "\n{", "\ncout\n}", "\nB(int i):data(i) //B(int) works as a converter ( int -> instance of B)", "\n{", "\ncout\n}", "\nprivate:", "\nint data;", "\n};", "\nB Play( B b)", "\n{", "\nreturn b ;", "\n}", "\n(1) results:", "\nint main(int argc, char* argv[]) constructed by parameter 5", "\n{ destructed B(5)\u5f62\u53c2\u6790\u6784", "\nB t1 = Play(5); B t2 = Play(t1); \u3000 destructed t1\u5f62\u53c2\u6790\u6784", "\nreturn 0;\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 destructed t2\u3000\u6ce8\u610f\u987a\u5e8f\uff01", "\n} destructed t1", "\n(2) results:", "\nint main(int argc, char* argv[]) constructed by parameter 5", "\n{ destructed B(5)\u5f62\u53c2\u6790\u6784", "\nB t1 = Play(5); B t2 = Play(10); \u3000 constructed by parameter 10", "\nreturn 0;\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 destructed B(10)\u5f62\u53c2\u6790\u6784", "\n} destructed t2\u3000\u6ce8\u610f\u987a\u5e8f\uff01", "\ndestructed t1 ", "42. \u5199\u4e00\u4e2a\u51fd\u6570\u627e\u51fa\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\u4e2d\uff0c\u7b2c\u4e8c\u5927\u7684\u6570 \uff08Microsoft\uff09", "\n\u7b54\u6848\uff1a", "\nconst int MINNUMBER = -32767 ;", "\nint find_sec_max( int data[] , int count)", "\n{", "\nint maxnumber = data[0] ;", "\nint sec_max = MINNUMBER ;", "\nfor ( int i = 1 ; i \n{", "\nif ( data > maxnumber )", "\n{", "\nsec_max = maxnumber ;", "\nmaxnumber = data ;", "\n}", "\nelse", "\n{", "\nif ( data > sec_max )", "\nsec_max = data ;", "\n}", "\n}", "\nreturn sec_max ;", "\n} ", "43. \u5199\u4e00\u4e2a\u5728\u4e00\u4e2a\u5b57\u7b26\u4e32(n)\u4e2d\u5bfb\u627e\u4e00\u4e2a\u5b50\u4e32(m)\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u7684\u51fd\u6570\u3002", "\nKMP\u7b97\u6cd5\u6548\u7387\u6700\u597d\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f\uff2f(n+m)\u3002 ", "44. \u591a\u91cd\u7ee7\u627f\u7684\u5185\u5b58\u5206\u914d\u95ee\u9898\uff1a", "\n\u6bd4\u5982\u6709class A : public class B, public class C {}", "\n\u90a3\u4e48A\u7684\u5185\u5b58\u7ed3\u6784\u5927\u81f4\u662f\u600e\u4e48\u6837\u7684\uff1f", "\n\u8fd9\u4e2a\u662fcompiler-dependent\u7684, \u4e0d\u540c\u7684\u5b9e\u73b0\u5176\u7ec6\u8282\u53ef\u80fd\u4e0d\u540c\u3002", "\n\u5982\u679c\u4e0d\u8003\u8651\u6709\u865a\u51fd\u6570\u3001\u865a\u7ee7\u627f\u7684\u8bdd\u5c31\u76f8\u5f53\u7b80\u5355\uff1b\u5426\u5219\u7684\u8bdd\uff0c\u76f8\u5f53\u590d\u6742\u3002", "\n45. \u5982\u4f55\u5224\u65ad\u4e00\u4e2a\u5355\u94fe\u8868\u662f\u6709\u73af\u7684\uff1f\uff08\u6ce8\u610f\u4e0d\u80fd\u7528\u6807\u5fd7\u4f4d\uff0c\u6700\u591a\u53ea\u80fd\u7528\u4e24\u4e2a\u989d\u5916\u6307\u9488\uff09", "\nstruct node { char val; node* next;}", "\nbool check(const node* head) {} //return false : \u65e0\u73af\uff1btrue: \u6709\u73af", "\n\u4e00\u79cdO\uff08n\uff09\u7684\u529e\u6cd5\u5c31\u662f\uff08\u641e\u4e24\u4e2a\u6307\u9488\uff0c\u4e00\u4e2a\u6bcf\u6b21\u9012\u589e\u4e00\u6b65\uff0c\u4e00\u4e2a\u6bcf\u6b21\u9012\u589e\u4e24\u6b65\uff0c\u5982\u679c\u6709\u73af\u7684\u8bdd\u4e24\u8005\u5fc5\u7136\u91cd\u5408\uff0c\u53cd\u4e4b\u4ea6\u7136\uff09\uff1a", "\nbool check(const node* head)", "\n{", "\nif(head==NULL) return false;", "\nnode *low=head, *fast=head->next;", "\nwhile(fast!=NULL && fast->next!=NULL)", "\n{", "\nlow=low->next;", "\nfast=fast->next->next;", "\nif(low==fast) return true;", "\n}", "\nreturn false;", "\n} "], "title": "\u7ecf\u5178c++\u9762\u8bd5\u9898\uff085\uff09"},
{"contents": ["1.\u6c42\u4e0b\u9762\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff08\u5fae\u8f6f\uff09 ", "int func(x)", "\n{", "\n int countx = 0;", "\n while(x)", "\n {", "\n countx ++;", "\n x = x&(x-1);", "\n }", "\n return countx;", "\n}  ", "\u5047\u5b9ax = 9999\u3002 \u7b54\u6848\uff1a8 ", "\u601d\u8def\uff1a\u5c06x\u8f6c\u5316\u4e3a2\u8fdb\u5236\uff0c\u770b\u542b\u6709\u76841\u7684\u4e2a\u6570\u3002 ", "2. \u4ec0\u4e48\u662f\u201c\u5f15\u7528\u201d\uff1f\u7533\u660e\u548c\u4f7f\u7528\u201c\u5f15\u7528\u201d\u8981\u6ce8\u610f\u54ea\u4e9b\u95ee\u9898\uff1f ", "\u7b54\uff1a\u5f15\u7528\u5c31\u662f\u67d0\u4e2a\u76ee\u6807\u53d8\u91cf\u7684\u201c\u522b\u540d\u201d(alias)\uff0c\u5bf9\u5e94\u7528\u7684\u64cd\u4f5c\u4e0e\u5bf9\u53d8\u91cf\u76f4\u63a5\u64cd\u4f5c\u6548\u679c\u5b8c\u5168\u76f8\u540c\u3002\u7533\u660e\u4e00\u4e2a\u5f15\u7528\u7684\u65f6\u5019\uff0c\u5207\u8bb0\u8981\u5bf9\u5176\u8fdb\u884c\u521d\u59cb\u5316\u3002\u5f15\u7528\u58f0\u660e\u5b8c\u6bd5\u540e\uff0c\u76f8\u5f53\u4e8e\u76ee\u6807\u53d8\u91cf\u540d\u6709\u4e24\u4e2a\u540d\u79f0\uff0c\u5373\u8be5\u76ee\u6807\u539f\u540d\u79f0\u548c\u5f15\u7528\u540d\uff0c\u4e0d\u80fd\u518d\u628a\u8be5\u5f15\u7528\u540d\u4f5c\u4e3a\u5176\u4ed6\u53d8\u91cf\u540d\u7684\u522b\u540d\u3002\u58f0\u660e\u4e00\u4e2a\u5f15\u7528\uff0c\u4e0d\u662f\u65b0\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53d8\u91cf\uff0c\u5b83\u53ea\u8868\u793a\u8be5\u5f15\u7528\u540d\u662f\u76ee\u6807\u53d8\u91cf\u540d\u7684\u4e00\u4e2a\u522b\u540d\uff0c\u5b83\u672c\u8eab\u4e0d\u662f\u4e00\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u56e0\u6b64\u5f15\u7528\u672c\u8eab\u4e0d\u5360\u5b58\u50a8\u5355\u5143\uff0c\u7cfb\u7edf\u4e5f\u4e0d\u7ed9\u5f15\u7528\u5206\u914d\u5b58\u50a8\u5355\u5143\u3002\u4e0d\u80fd\u5efa\u7acb\u6570\u7ec4\u7684\u5f15\u7528\u3002 ", "3. \u5c06\u201c\u5f15\u7528\u201d\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u6709\u54ea\u4e9b\u7279\u70b9\uff1f ", "\uff081\uff09\u4f20\u9012\u5f15\u7528\u7ed9\u51fd\u6570\u4e0e\u4f20\u9012\u6307\u9488\u7684\u6548\u679c\u662f\u4e00\u6837\u7684\u3002\u8fd9\u65f6\uff0c\u88ab\u8c03\u51fd\u6570\u7684\u5f62\u53c2\u5c31\u6210\u4e3a\u539f\u6765\u4e3b\u8c03\u51fd\u6570\u4e2d\u7684\u5b9e\u53c2\u53d8\u91cf\u6216\u5bf9\u8c61\u7684\u4e00\u4e2a\u522b\u540d\u6765\u4f7f\u7528\uff0c\u6240\u4ee5\u5728\u88ab\u8c03\u51fd\u6570\u4e2d\u5bf9\u5f62\u53c2\u53d8\u91cf\u7684\u64cd\u4f5c\u5c31\u662f\u5bf9\u5176\u76f8\u5e94\u7684\u76ee\u6807\u5bf9\u8c61\uff08\u5728\u4e3b\u8c03\u51fd\u6570\u4e2d\uff09\u7684\u64cd\u4f5c\u3002 ", "\uff082\uff09\u4f7f\u7528\u5f15\u7528\u4f20\u9012\u51fd\u6570\u7684\u53c2\u6570\uff0c\u5728\u5185\u5b58\u4e2d\u5e76\u6ca1\u6709\u4ea7\u751f\u5b9e\u53c2\u7684\u526f\u672c\uff0c\u5b83\u662f\u76f4\u63a5\u5bf9\u5b9e\u53c2\u64cd\u4f5c\uff1b\u800c\u4f7f\u7528\u4e00\u822c\u53d8\u91cf\u4f20\u9012\u51fd\u6570\u7684\u53c2\u6570\uff0c\u5f53\u53d1\u751f\u51fd\u6570\u8c03\u7528\u65f6\uff0c\u9700\u8981\u7ed9\u5f62\u53c2\u5206\u914d\u5b58\u50a8\u5355\u5143\uff0c\u5f62\u53c2\u53d8\u91cf\u662f\u5b9e\u53c2\u53d8\u91cf\u7684\u526f\u672c\uff1b\u5982\u679c\u4f20\u9012\u7684\u662f\u5bf9\u8c61\uff0c\u8fd8\u5c06\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002\u56e0\u6b64\uff0c\u5f53\u53c2\u6570\u4f20\u9012\u7684\u6570\u636e\u8f83\u5927\u65f6\uff0c\u7528\u5f15\u7528\u6bd4\u7528\u4e00\u822c\u53d8\u91cf\u4f20\u9012\u53c2\u6570\u7684\u6548\u7387\u548c\u6240\u5360\u7a7a\u95f4\u90fd\u597d\u3002 ", "\uff083\uff09\u4f7f\u7528\u6307\u9488\u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570\u867d\u7136\u4e5f\u80fd\u8fbe\u5230\u4e0e\u4f7f\u7528\u5f15\u7528\u7684\u6548\u679c\uff0c\u4f46\u662f\uff0c\u5728\u88ab\u8c03\u51fd\u6570\u4e2d\u540c\u6837\u8981\u7ed9\u5f62\u53c2\u5206\u914d\u5b58\u50a8\u5355\u5143\uff0c\u4e14\u9700\u8981\u91cd\u590d\u4f7f\u7528\u201d*\u6307\u9488\u53d8\u91cf\u540d\u201d\u7684\u5f62\u5f0f\u8fdb\u884c\u8fd0\u7b97\uff0c\u8fd9\u5f88\u5bb9\u6613\u4ea7\u751f\u9519\u8bef\u4e14\u7a0b\u5e8f\u7684\u9605\u8bfb\u6027\u8f83\u5dee\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u5728\u4e3b\u8c03\u51fd\u6570\u7684\u8c03\u7528\u70b9\u5904\uff0c\u5fc5\u987b\u7528\u53d8\u91cf\u7684\u5730\u5740\u4f5c\u4e3a\u5b9e\u53c2\u3002\u800c\u5f15\u7528\u66f4\u5bb9\u6613\u4f7f\u7528\uff0c\u66f4\u6e05\u6670\u3002 ", "4. \u5728\u4ec0\u4e48\u65f6\u5019\u9700\u8981\u4f7f\u7528\u201c\u5e38\u5f15\u7528\u201d\uff1f\u3000 ", "\u5982\u679c\u65e2\u8981\u5229\u7528\u5f15\u7528\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6548\u7387\uff0c\u53c8\u8981\u4fdd\u62a4\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u6570\u636e\u4e0d\u5728\u51fd\u6570\u4e2d\u88ab\u6539\u53d8\uff0c\u5c31\u5e94\u4f7f\u7528\u5e38\u5f15\u7528\u3002\u5e38\u5f15\u7528\u58f0\u660e\u65b9\u5f0f\uff1aconst \u7c7b\u578b\u6807\u8bc6\u7b26 &\u5f15\u7528\u540d=\u76ee\u6807\u53d8\u91cf\u540d\uff1b ", "\u4f8b1 ", "int a ;", "\nconst int &ra=a;", "\nra=1; //\u9519\u8bef", "\na=1; //\u6b63\u786e ", "\u4f8b2 ", "string foo( );", "\nvoid bar(string & s); ", "\u90a3\u4e48\u4e0b\u9762\u7684\u8868\u8fbe\u5f0f\u5c06\u662f\u975e\u6cd5\u7684\uff1a ", "bar(foo( ));", "\nbar(\u201chello world\u201d); ", "\u539f\u56e0\u5728\u4e8efoo( )\u548c\u201dhello world\u201d\u4e32\u90fd\u4f1a\u4ea7\u751f\u4e00\u4e2a\u4e34\u65f6\u5bf9\u8c61\uff0c\u800c\u5728C++\u4e2d\uff0c\u8fd9\u4e9b\u4e34\u65f6\u5bf9\u8c61\u90fd\u662fconst\u7c7b\u578b\u7684\u3002\u56e0\u6b64\u4e0a\u9762\u7684\u8868\u8fbe\u5f0f\u5c31\u662f\u8bd5\u56fe\u5c06\u4e00\u4e2aconst\u7c7b\u578b\u7684\u5bf9\u8c61\u8f6c\u6362\u4e3a\u975econst\u7c7b\u578b\uff0c\u8fd9\u662f\u975e\u6cd5\u7684\u3002 ", "\u5f15\u7528\u578b\u53c2\u6570\u5e94\u8be5\u5728\u80fd\u88ab\u5b9a\u4e49\u4e3aconst\u7684\u60c5\u51b5\u4e0b\uff0c\u5c3d\u91cf\u5b9a\u4e49\u4e3aconst \u3002 ", "5. \u5c06\u201c\u5f15\u7528\u201d\u4f5c\u4e3a\u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b\u7684\u683c\u5f0f\u3001\u597d\u5904\u548c\u9700\u8981\u9075\u5b88\u7684\u89c4\u5219? ", "\u683c\u5f0f\uff1a\u7c7b\u578b\u6807\u8bc6\u7b26 &\u51fd\u6570\u540d\uff08\u5f62\u53c2\u5217\u8868\u53ca\u7c7b\u578b\u8bf4\u660e\uff09{ //\u51fd\u6570\u4f53 } ", "\u597d\u5904\uff1a\u5728\u5185\u5b58\u4e2d\u4e0d\u4ea7\u751f\u88ab\u8fd4\u56de\u503c\u7684\u526f\u672c\uff1b\uff08\u6ce8\u610f\uff1a\u6b63\u662f\u56e0\u4e3a\u8fd9\u70b9\u539f\u56e0\uff0c\u6240\u4ee5\u8fd4\u56de\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u5f15\u7528\u662f\u4e0d\u53ef\u53d6\u7684\u3002\u56e0\u4e3a\u968f\u7740\u8be5\u5c40\u90e8\u53d8\u91cf\u751f\u5b58\u671f\u7684\u7ed3\u675f\uff0c\u76f8\u5e94\u7684\u5f15\u7528\u4e5f\u4f1a\u5931\u6548\uff0c\u4ea7\u751fruntime error! ", "\u6ce8\u610f\u4e8b\u9879\uff1a ", "\uff081\uff09\u4e0d\u80fd\u8fd4\u56de\u5c40\u90e8\u53d8\u91cf\u7684\u5f15\u7528\u3002\u8fd9\u6761\u53ef\u4ee5\u53c2\u7167Effective C++[1]\u7684Item 31\u3002\u4e3b\u8981\u539f\u56e0\u662f\u5c40\u90e8\u53d8\u91cf\u4f1a\u5728\u51fd\u6570\u8fd4\u56de\u540e\u88ab\u9500\u6bc1\uff0c\u56e0\u6b64\u88ab\u8fd4\u56de\u7684\u5f15\u7528\u5c31\u6210\u4e3a\u4e86\u201d\u65e0\u6240\u6307\u201d\u7684\u5f15\u7528\uff0c\u7a0b\u5e8f\u4f1a\u8fdb\u5165\u672a\u77e5\u72b6\u6001\u3002 ", "\uff082\uff09\u4e0d\u80fd\u8fd4\u56de\u51fd\u6570\u5185\u90e8new\u5206\u914d\u7684\u5185\u5b58\u7684\u5f15\u7528\u3002\u8fd9\u6761\u53ef\u4ee5\u53c2\u7167Effective C++[1]\u7684Item 31\u3002\u867d\u7136\u4e0d\u5b58\u5728\u5c40\u90e8\u53d8\u91cf\u7684\u88ab\u52a8\u9500\u6bc1\u95ee\u9898\uff0c\u53ef\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff08\u8fd4\u56de\u51fd\u6570\u5185\u90e8new\u5206\u914d\u5185\u5b58\u7684\u5f15\u7528\uff09\uff0c\u53c8\u9762\u4e34\u5176\u5b83\u5c34\u5c2c\u5c40\u9762\u3002\u4f8b\u5982\uff0c\u88ab\u51fd\u6570\u8fd4\u56de\u7684\u5f15\u7528\u53ea\u662f\u4f5c\u4e3a\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf\u51fa\u73b0\uff0c\u800c\u6ca1\u6709\u88ab\u8d4b\u4e88\u4e00\u4e2a\u5b9e\u9645\u7684\u53d8\u91cf\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5f15\u7528\u6240\u6307\u5411\u7684\u7a7a\u95f4\uff08\u7531new\u5206\u914d\uff09\u5c31\u65e0\u6cd5\u91ca\u653e\uff0c\u9020\u6210memory leak\u3002", "\n\uff083\uff09\u53ef\u4ee5\u8fd4\u56de\u7c7b\u6210\u5458\u7684\u5f15\u7528\uff0c\u4f46\u6700\u597d\u662fconst\u3002\u8fd9\u6761\u539f\u5219\u53ef\u4ee5\u53c2\u7167Effective C++[1]\u7684Item 30\u3002\u4e3b\u8981\u539f\u56e0\u662f\u5f53\u5bf9\u8c61\u7684\u5c5e\u6027\u662f\u4e0e\u67d0\u79cd\u4e1a\u52a1\u89c4\u5219\uff08business rule\uff09\u76f8\u5173\u8054\u7684\u65f6\u5019\uff0c\u5176\u8d4b\u503c\u5e38\u5e38\u4e0e\u67d0\u4e9b\u5176\u5b83\u5c5e\u6027\u6216\u8005\u5bf9\u8c61\u7684\u72b6\u6001\u6709\u5173\uff0c\u56e0\u6b64\u6709\u5fc5\u8981\u5c06\u8d4b\u503c\u64cd\u4f5c\u5c01\u88c5\u5728\u4e00\u4e2a\u4e1a\u52a1\u89c4\u5219\u5f53\u4e2d\u3002\u5982\u679c\u5176\u5b83\u5bf9\u8c61\u53ef\u4ee5\u83b7\u5f97\u8be5\u5c5e\u6027\u7684\u975e\u5e38\u91cf\u5f15\u7528\uff08\u6216\u6307\u9488\uff09\uff0c\u90a3\u4e48\u5bf9\u8be5\u5c5e\u6027\u7684\u5355\u7eaf\u8d4b\u503c\u5c31\u4f1a\u7834\u574f\u4e1a\u52a1\u89c4\u5219\u7684\u5b8c\u6574\u6027\u3002 ", "\uff084\uff09\u6d41\u64cd\u4f5c\u7b26\u91cd\u8f7d\u8fd4\u56de\u503c\u7533\u660e\u4e3a\u201c\u5f15\u7528\u201d\u7684\u4f5c\u7528\uff1a ", "\u6d41\u64cd\u4f5c\u7b26>\uff0c\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u7b26\u5e38\u5e38\u5e0c\u671b\u88ab\u8fde\u7eed\u4f7f\u7528\uff0c\u4f8b\u5982\uff1acout \n", "\u4f8b3 ", "\uff03i nclude ", "\uff085\uff09\u5728\u53e6\u5916\u7684\u4e00\u4e9b\u64cd\u4f5c\u7b26\u4e2d\uff0c\u5374\u5343\u4e07\u4e0d\u80fd\u8fd4\u56de\u5f15\u7528\uff1a+-*/ \u56db\u5219\u8fd0\u7b97\u7b26\u3002\u5b83\u4eec\u4e0d\u80fd\u8fd4\u56de\u5f15\u7528\uff0cEffective C++[1]\u7684Item23\u8be6\u7ec6\u7684\u8ba8\u8bba\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\u4e3b\u8981\u539f\u56e0\u662f\u8fd9\u56db\u4e2a\u64cd\u4f5c\u7b26\u6ca1\u6709side effect\uff0c\u56e0\u6b64\uff0c\u5b83\u4eec\u5fc5\u987b\u6784\u9020\u4e00\u4e2a\u5bf9\u8c61\u4f5c\u4e3a\u8fd4\u56de\u503c\uff0c\u53ef\u9009\u7684\u65b9\u6848\u5305\u62ec\uff1a\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\u3001\u8fd4\u56de\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u5f15\u7528\uff0c\u8fd4\u56de\u4e00\u4e2anew\u5206\u914d\u7684\u5bf9\u8c61\u7684\u5f15\u7528\u3001\u8fd4\u56de\u4e00\u4e2a\u9759\u6001\u5bf9\u8c61\u5f15\u7528\u3002\u6839\u636e\u524d\u9762\u63d0\u5230\u7684\u5f15\u7528\u4f5c\u4e3a\u8fd4\u56de\u503c\u7684\u4e09\u4e2a\u89c4\u5219\uff0c\u7b2c2\u30013\u4e24\u4e2a\u65b9\u6848\u90fd\u88ab\u5426\u51b3\u4e86\u3002\u9759\u6001\u5bf9\u8c61\u7684\u5f15\u7528\u53c8\u56e0\u4e3a((a+b) == (c+d))\u4f1a\u6c38\u8fdc\u4e3atrue\u800c\u5bfc\u81f4\u9519\u8bef\u3002\u6240\u4ee5\u53ef\u9009\u7684\u53ea\u5269\u4e0b\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\u4e86\u3002 ", "6. \u201c\u5f15\u7528\u201d\u4e0e\u591a\u6001\u7684\u5173\u7cfb\uff1f ", "\u5f15\u7528\u662f\u9664\u6307\u9488\u5916\u53e6\u4e00\u4e2a\u53ef\u4ee5\u4ea7\u751f\u591a\u6001\u6548\u679c\u7684\u624b\u6bb5\u3002\u8fd9\u610f\u5473\u7740\uff0c\u4e00\u4e2a\u57fa\u7c7b\u7684\u5f15\u7528\u53ef\u4ee5\u6307\u5411\u5b83\u7684\u6d3e\u751f\u7c7b\u5b9e\u4f8b\u3002 ", "\u4f8b4 ", "Class A; Class B : Class A{...}; B b; A& ref = b; ", "7. \u201c\u5f15\u7528\u201d\u4e0e\u6307\u9488\u7684\u533a\u522b\u662f\u4ec0\u4e48\uff1f ", "\u6307\u9488\u901a\u8fc7\u67d0\u4e2a\u6307\u9488\u53d8\u91cf\u6307\u5411\u4e00\u4e2a\u5bf9\u8c61\u540e\uff0c\u5bf9\u5b83\u6240\u6307\u5411\u7684\u53d8\u91cf\u95f4\u63a5\u64cd\u4f5c\u3002\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u6307\u9488\uff0c\u7a0b\u5e8f\u7684\u53ef\u8bfb\u6027\u5dee\uff1b\u800c\u5f15\u7528\u672c\u8eab\u5c31\u662f\u76ee\u6807\u53d8\u91cf\u7684\u522b\u540d\uff0c\u5bf9\u5f15\u7528\u7684\u64cd\u4f5c\u5c31\u662f\u5bf9\u76ee\u6807\u53d8\u91cf\u7684\u64cd\u4f5c\u3002\u6b64\u5916\uff0c\u5c31\u662f\u4e0a\u9762\u63d0\u5230\u7684\u5bf9\u51fd\u6570\u4f20ref\u548cpointer\u7684\u533a\u522b\u3002 ", "8. \u4ec0\u4e48\u65f6\u5019\u9700\u8981\u201c\u5f15\u7528\u201d\uff1f ", "\u6d41\u64cd\u4f5c\u7b26>\u3001\u8d4b\u503c\u64cd\u4f5c\u7b26=\u7684\u8fd4\u56de\u503c\u3001\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u7684\u53c2\u6570\u3001\u8d4b\u503c\u64cd\u4f5c\u7b26=\u7684\u53c2\u6570\u3001\u5176\u5b83\u60c5\u51b5\u90fd\u63a8\u8350\u4f7f\u7528\u5f15\u7528\u3002", "\n9. \u7ed3\u6784\u4e0e\u8054\u5408\u6709\u548c\u533a\u522b\uff1f", "\n1. \u7ed3\u6784\u548c\u8054\u5408\u90fd\u662f\u7531\u591a\u4e2a\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u6210\u5458\u7ec4\u6210, \u4f46\u5728\u4efb\u4f55\u540c\u4e00\u65f6\u523b, \u8054\u5408\u4e2d\u53ea\u5b58\u653e\u4e86\u4e00\u4e2a\u88ab\u9009\u4e2d\u7684\u6210\u5458\uff08\u6240\u6709\u6210\u5458\u5171\u7528\u4e00\u5757\u5730\u5740\u7a7a\u95f4\uff09, \u800c\u7ed3\u6784\u7684\u6240\u6709\u6210\u5458\u90fd\u5b58\u5728\uff08\u4e0d\u540c\u6210\u5458\u7684\u5b58\u653e\u5730\u5740\u4e0d\u540c\uff09\u3002", "\n 2. \u5bf9\u4e8e\u8054\u5408\u7684\u4e0d\u540c\u6210\u5458\u8d4b\u503c, \u5c06\u4f1a\u5bf9\u5176\u5b83\u6210\u5458\u91cd\u5199, \u539f\u6765\u6210\u5458\u7684\u503c\u5c31\u4e0d\u5b58\u5728\u4e86, \u800c\u5bf9\u4e8e\u7ed3\u6784\u7684\u4e0d\u540c\u6210\u5458\u8d4b\u503c\u662f\u4e92\u4e0d\u5f71\u54cd\u7684\u3002 ", "10. \u4e0b\u9762\u5173\u4e8e\u201c\u8054\u5408\u201d\u7684\u9898\u76ee\u7684\u8f93\u51fa\uff1f ", "a) ", "\uff03i nclude ", "void main()", "\n{", "\na.x[0] = 10;", "\na.x[1] = 1;", "\nprintf(\u201c%d\u201d,a.i);", "\n}", "\n\u7b54\u6848\uff1a266 (\u4f4e\u4f4d\u4f4e\u5730\u5740\uff0c\u9ad8\u4f4d\u9ad8\u5730\u5740\uff0c\u5185\u5b58\u5360\u7528\u60c5\u51b5\u662fOx010A\uff09", "\nb) ", " main()", "\n {", "\n union{ /*\u5b9a\u4e49\u4e00\u4e2a\u8054\u5408*/", "\n int i;", "\n struct{ /*\u5728\u8054\u5408\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784*/", "\n char first;", "\n char second;", "\n }half;", "\n }number;", "\n number.i=0\u00d74241; /*\u8054\u5408\u6210\u5458\u8d4b\u503c*/", "\n printf(\u201c%c%c\\n\u201d, number.half.first, mumber.half.second);", "\n number.half.first=\u2019a'; /*\u8054\u5408\u4e2d\u7ed3\u6784\u6210\u5458\u8d4b\u503c*/", "\n number.half.second=\u2019b';", "\n printf(\u201c%x\\n\u201d, number.i);", "\n getch();", "\n }", "\n\u7b54\u6848\uff1a AB (0\u00d741\u5bf9\u5e94\u2019A',\u662f\u4f4e\u4f4d\uff1bOx42\u5bf9\u5e94\u2019B',\u662f\u9ad8\u4f4d\uff09 ", " 6261 (number.i\u548cnumber.half\u5171\u7528\u4e00\u5757\u5730\u5740\u7a7a\u95f4\uff09 ", "11. \u5df2\u77e5strcpy\u7684\u51fd\u6570\u539f\u578b\uff1achar *strcpy(char *strDest, const char *strSrc)\u5176\u4e2dstrDest \u662f\u76ee\u7684\u5b57\u7b26\u4e32\uff0cstrSrc \u662f\u6e90\u5b57\u7b26\u4e32\u3002\u4e0d\u8c03\u7528C++/C \u7684\u5b57\u7b26\u4e32\u5e93\u51fd\u6570\uff0c\u8bf7\u7f16\u5199\u51fd\u6570 strcpy\u3002 ", "\u7b54\u6848\uff1a", "\nchar *strcpy(char *strDest, const char *strSrc)", "\n{", "\nif ( strDest == NULL || strSrc == NULL)", "\nreturn NULL ;", "\nif ( strDest == strSrc)", "\nreturn strDest ;", "\nchar *tempptr = strDest ;", "\nwhile( (*strDest++ = *strSrc++) != \u2018\\0\u2019)", "\n;", "\nreturn tempptr ;", "\n} ", "12. \u5df2\u77e5String\u7c7b\u5b9a\u4e49\u5982\u4e0b\uff1a ", "class String", "\n{", "\npublic:", "\nString(const char *str = NULL); // \u901a\u7528\u6784\u9020\u51fd\u6570", "\nString(const String &another); // \u62f7\u8d1d\u6784\u9020\u51fd\u6570", "\n~ String(); // \u6790\u6784\u51fd\u6570", "\nString & operater =(const String &rhs); // \u8d4b\u503c\u51fd\u6570", "\nprivate:", "\nchar *m_data; // \u7528\u4e8e\u4fdd\u5b58\u5b57\u7b26\u4e32", "\n}; ", "\u5c1d\u8bd5\u5199\u51fa\u7c7b\u7684\u6210\u5458\u51fd\u6570\u5b9e\u73b0\u3002 ", "\u7b54\u6848\uff1a ", "String::String(const char *str)", "\n{", "\n if ( str == NULL ) //strlen\u5728\u53c2\u6570\u4e3aNULL\u65f6\u4f1a\u629b\u5f02\u5e38\u624d\u4f1a\u6709\u8fd9\u6b65\u5224\u65ad", "\n {", "\n m_data = new char[1] ;", "\n m_data[0] = \u2018\\0\u2032 ;", "\n }", "\n else", "\n {", "\n m_data = new char[strlen(str) + 1];", "\n strcpy(m_data,str);", "\n } ", "}  ", "String::String(const String &another)", "\n{", "\n m_data = new char[strlen(another.m_data) + 1];", "\n strcpy(m_data,other.m_data);", "\n} ", "String& String::operator =(const String &rhs)", "\n{", "\n if ( this == &rhs)", "\n return *this ;", "\n delete []m_data; //\u5220\u9664\u539f\u6765\u7684\u6570\u636e\uff0c\u65b0\u5f00\u4e00\u5757\u5185\u5b58", "\n m_data = new char[strlen(rhs.m_data) + 1];", "\n strcpy(m_data,rhs.m_data);", "\n return *this ;", "\n} ", "String::~String()", "\n{", "\n delete []m_data ;", "\n} ", "13. .h\u5934\u6587\u4ef6\u4e2d\u7684ifndef/define/endif \u7684\u4f5c\u7528\uff1f ", "\u7b54\uff1a\u9632\u6b62\u8be5\u5934\u6587\u4ef6\u88ab\u91cd\u590d\u5f15\u7528\u3002 ", "14. \uff03i nclude", "\u7b54\uff1a\u524d\u8005\u662f\u4eceStandard Library\u7684\u8def\u5f84\u5bfb\u627e\u548c\u5f15\u7528file.h\uff0c\u800c\u540e\u8005\u662f\u4ece\u5f53\u524d\u5de5\u4f5c\u8def\u5f84\u641c\u5bfb\u5e76\u5f15\u7528file.h\u3002 "], "title": "C/C++ \u7b14\u8bd5\u3001\u9762\u8bd5\u9898\u76ee\u5927\u6c47\u603b"},
{"contents": ["12\uff0c\u4e0b\u5217\u5173\u4e8eBeginPaint\u548cGetDC\u4e24\u4e2a\u51fd\u6570\u7684\u8bf4\u6cd5\uff0c\u4e0d\u6b63\u786e\u7684\u662f\uff1aC ", "A\uff0c\u524d\u8005\u4e00\u822c\u548cEndPaint\u6210\u5bf9\u51fa\u73b0\uff0c\u540e\u8005\u4e0eReleaseDC\u6210\u5bf9\u51fa\u73b0 ", "B\uff0c\u524d\u8005\u83b7\u5f97\u7684\u8bbe\u5907\u73af\u5883\u7684\u64cd\u4f5c\u533a\u57df\u6709\u53ef\u80fd\u4e0d\u662f\u6574\u4e2a\u5ba2\u6237\u533a\uff1b\u540e\u8005\u83b7\u5f97\u7684\u8bbe\u5907\u73af\u5883\u7684\u64cd\u4f5c\u533a\u57df\u4e3a\u6574\u4e2a\u5ba2\u6237\u533a ", "C\uff0c\u53ea\u80fd\u591f\u901a\u8fc7\u8fd9\u4e24\u79cd\u65b9\u6cd5\u83b7\u5f97\u8bbe\u5907\u73af\u5883\u53e5\u67c4 ", "D\uff0c\u524d\u8005\u8c03\u7528\u540e\u53ef\u83b7\u5f97\u65e0\u6548\u533a\u57df\u7684\u5750\u6807\uff0c\u540e\u8005\u65e0\u6cd5\u83b7\u5f97\u65e0\u6548\u533a\u57df\u7684\u5750\u6807 ", "13\uff0c\u4e0b\u5217\u6709\u5173Windows\u7ed8\u56fe\u4e2d\u6620\u50cf\u6a21\u5f0f\u7684\u8bf4\u6cd5\uff0c\u4e0d\u6b63\u786e\u7684\u662f\uff1aD ", "A\uff0c\u7f3a\u7701\u7684\u6620\u50cf\u6a21\u5f0f\u662fMM_TEXT ", "B\uff0c\u53ea\u6709MM_ANISOTROPIC\u6a21\u5f0f\u4e0b\uff0cX\uff0cY\u8f74\u7684\u6bd4\u4f8b\u53ef\u4ee5\u4e0d\u662f1:1 ", "C\uff0c\u5728\u6240\u6709\u7684\u6620\u50cf\u6a21\u5f0f\u4e0b\uff0c\u7f3a\u7701\u65f6\u7a97\u53e3\u5de6\u4e0a\u89d2\u7684\u5750\u6807\u90fd\u662f(0,0) ", "D\uff0cMM_HIMETRIC\u6a21\u5f0f\u4e0b\uff0cX\u8f74\u6b63\u65b9\u5411\u5411\u53f3\uff0cY\u8f74\u6b63\u65b9\u5411\u5411\u4e0b ", "14, \u6709\u5173Windows\u6587\u672c\u4e0e\u5b57\u4f53\u7684\u8bf4\u6cd5\uff0c\u9519\u8bef\u7684\u662f\uff1aD ", "A\uff0c\u8bbe\u7f6e\u5b57\u4f53\u7684\u524d\u666f\u548c\u80cc\u666f\u8272\u5206\u522b\u4f7f\u7528SetTextColor\u548cSetBkColor ", "B\uff0c\u4f7f\u7528CreateFont\u521b\u5efa\u5b57\u4f53\u65f6\u53ef\u4ee5\u6539\u53d8\u5b57\u4f53\u7684\u5927\u5c0f\uff0c\u5b57\u4f53\u7684\u7c7b\u578b\u7b49 ", "C\uff0c\u5b57\u4f53\u53e5\u67c4\u7684\u6570\u636e\u7c7b\u578b\u662fHFONT ", "D\uff0c\u5b57\u4f53\u8f93\u51fa\u51fd\u6570TextOut\u53c2\u6570\u4e2d\u7528\u5230\u7684\u5750\u6807\u662f\u8bbe\u5907\u5750\u6807 ", "15\uff0c\u80fd\u591f\u540c\u65f6\u83b7\u53d6\u5f53\u524d\u4f7f\u7528\u7684\u5b57\u4f53\u7684\u9ad8\u5ea6\uff0c\u5bbd\u5ea6\uff0c\u5b57\u7b26\u96c6\u7b49\u4fe1\u606f\u7684Windows API\u51fd\u6570\u662f\uff1aB ", "A\uff0cGetTextExtentPoint32 ", "B\uff0cGetTextMetrics ", "C\uff0cGetObject ", "D\uff0cGetTextInfo ", "16, \u4e0b\u5217\u5173\u4e8eWindows\u5e94\u7528\u7a0b\u5e8f\u5bf9\u952e\u76d8\u54cd\u5e94\u7684\u8bf4\u6cd5\uff0c\u6b63\u786e\u7684\u662f\uff1aD ", "A\uff0c\u952e\u76d8\u7684\u626b\u63cf\u7801\u4e0d\u4f9d\u8d56\u4e8e\u5177\u4f53\u8bbe\u5907 ", "B\uff0cWindows\u5e94\u7528\u7a0b\u5e8f\u4e0d\u4f7f\u7528\u6d88\u606f\u6765\u5904\u7406\u952e\u76d8\u54cd\u5e94 ", "C\uff0c\u6309\u4e0b\u952e\u76d8\u4e0a\u7684\u4e00\u4e2a\u952e\uff0c\u4e0d\u53ef\u80fd\u540c\u65f6\u4ea7\u751f\u6309\u952e\u6d88\u606f\u548c\u5b57\u7b26\u6d88\u606f ", "D\uff0cWinMain\u51fd\u6570\u7684\u6d88\u606f\u5faa\u73af\u4e2d\u7684TranslateMessage\u51fd\u6570\u7528\u4e8e\u628a\u6309\u952e\u6d88\u606f\u8f6c\u6362\u4e3a\u5b57\u7b26\u6d88\u606f ", "17\uff0c\u4e0b\u5217\u5173\u4e8eWindows\u5e94\u7528\u7a0b\u5e8f\u5bf9\u9f20\u6807\u54cd\u5e94\u7684\u8bf4\u6cd5\uff0c\u6b63\u786e\u7684\u662f\uff1aB ", "A\uff0c\u53ea\u6709\u6d3b\u52a8\u7a97\u53e3\u624d\u80fd\u63a5\u53d7\u9f20\u6807\u4e8b\u4ef6 ", "B\uff0c\u53ef\u4ee5\u8c03\u7528\u51fd\u6570SetCapture()\u5b9e\u73b0\u5bf9\u9f20\u6807\u7684\u6355\u6349\uff0c\u4e14\u6355\u6349\u9f20\u6807\u540e\u7cfb\u7edf\u7684\u952e\u76d8\u529f\u80fd\u6682\u65f6\u5931\u6548 ", "C\uff0c\u7528\u6237\u53ea\u80fd\u8c03\u7528\u7cfb\u7edf\u5b9a\u4e49\u7684\u9f20\u6807\u7684\u5149\u6807\u5f62\u72b6\uff0c\u4e0d\u80fd\u81ea\u5b9a\u4e49\u5149\u6807 ", "D\uff0c\u53ef\u4ee5\u901a\u8fc7\u76f8\u5e94\u5355\u4e00\u7c7b\u578b\u7684\u9f20\u6807\u6d88\u606f\u6765\u54cd\u5e94\u9f20\u6807\u7684\u62d6\u52a8\u4e8b\u4ef6 ", "18\uff0c\u5728Windows API\u5f00\u53d1\u7684\u5e94\u7528\u7a0b\u5e8f\u6846\u67b6\u4e2d\uff0c\u4e0b\u5217\u54ea\u79cd\u65b9\u6cd5\u4e0d\u80fd\u52a0\u8f7d\u83dc\u5355\uff1aD ", "A\uff0c\u5728\u7a97\u53e3\u7c7b\u7684\u5b9a\u4e49\u65f6\uff0c\u628a\u7ed3\u6784\u4f53WNDCLASS\u7684lpszMenuName\u8bbe\u7f6e\u4e3a\u5408\u9002\u7684\u83dc\u5355\u540d ", "B\uff0c\u5728\u521b\u5efa\u7a97\u53e3\u65f6\uff0c\u9996\u5148\u8c03\u7528LoadMenu\u83b7\u5f97\u83dc\u5355\u53e5\u67c4\uff0c\u7136\u540e\u8c03\u7528\u51fd\u6570CreateWindow\u52a0\u8f7d\u8be5\u83dc\u5355 ", "C\uff0c\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u8c03\u7528LoadMenu\u83b7\u5f97\u83dc\u5355\u53e5\u67c4\u540e\uff0c\u8c03\u7528\u51fd\u6570SetMenu\u52a8\u6001\u52a0\u8f7d\u83dc\u5355 ", "D\uff0c\u5728\u7a97\u53e3\u5904\u7406\u51fd\u6570\u4e2d\uff0c\u9488\u5bf9\u83dc\u5355\u6d88\u606f\u8bbe\u7f6e\u5408\u9002\u7684\u6d88\u606f\u54cd\u5e94 ", "19, \u83dc\u5355\u8d44\u6e90\u5b9a\u4e49\u5982\u4e0b\uff0c\u73b0\u5df2\u83b7\u5f97\u8be5\u201c\u6587\u4ef6\u201d\u5b50\u83dc\u5355\u7684\u53e5\u67c4hsubmenu ", "MENU1 MENU DISCARDABLE  ", "BEGIN ", " POPUP \u201c\u6587\u4ef6(&F)\u201d ", " BEGIN ", " MENUITEM \u201c\u65b0\u5efa(&N)\\t Ctrl+N\u201d, IDM_NEW ", " MENUITEM \u201c\u6253\u5f00(&O)\\t Ctrl+O\u201d, IDM_OPEN ", " MENUITEM \u201c\u5173\u95ed(&C)\u201d, IDM_CLOSE ", " MENUITEM SEPARATOR ", " MENUITEM \u201c\u4fdd\u5b58(&S)\\t Ctrl+S\u201d, IDM_SAVE ", " MENUITEM \u201c\u9000\u51fa(&X)\u201d, IDM_EXIT ", " END ", "END ", "\u8981\u628a\u83dc\u5355ID\u4e3aIDM_OPEN\u7684\u83dc\u5355\u8bbe\u7f6e\u4e3a\u7981\u6b62\u72b6\u6001\u5e76\u53d8\u7070\uff0c\u4e0b\u5217\u54ea\u4e2aAPI\u51fd\u6570\u53ca\u5176\u53c2\u6570\u8bbe\u7f6e\u662f\u6b63\u786e\u7684\uff1a A ", "A\u3001EnableMenuItem( hsubmenu, 1, MF_BYPOSITION| MF_GRAYED)\uff1b  ", "B\u3001EnableMenuItem( hsubmenu, 2, MF_BYPOSITION| MF_GRAYED)\uff1b ", "C\u3001DisableMenuItem( hsubmenu, 2, MF_BYPOSITION | MF_GRAYED)\uff1b  ", "D\u3001EnableMenuItem( hsubmenu, IDM_OPEN, MF_BYPOSITION|MF_GRAYED)\u3002 ", "20\uff0c\u7ed9\u83dc\u5355ID\u4e3aIDM_SAVE\u7684\u83dc\u5355\u547d\u4ee4\u589e\u52a0\u4e00\u4e2aCtrl+S\u7684\u52a0\u901f\u952e\u8d44\u6e90\uff0c\u6b63\u786e\u7684\u5199\u6cd5\u662f\uff1aA ", "A\uff0cACCE1 ACCELERATORS { ", " \u201c^S\u201d, IDM_SAVE ", " } ", "B\uff0cACCE1 ACCELERATORS { ", " \u201c^S\u201d, IDM_SAVE, VIRTKEY ", " } ", "C\uff0cACCE1 ACCELERATORS { ", " \u201cS\u201d, IDM_SAVE, ASCII,CONTROL ", " } ", "D\uff0cACCE1 ACCELERATORS { ", " \u201c^S\u201d, IDM_SAVE, CONTROL ", " } ", "21\uff0c\u4e0b\u9762\u6709\u5173Windows API\u5f00\u53d1\u4e2d\uff0c\u6a21\u6001\u5bf9\u8bdd\u6846\u7684\u8bf4\u6cd5\uff0c\u9519\u8bef\u7684\u662f\uff1aD", "\nA\uff0c\u6a21\u6001\u5bf9\u8bdd\u6846\u901a\u8fc7\u8c03\u7528DialogBox\u51fd\u6570\u663e\u793a ", "B\uff0c\u6a21\u6001\u5bf9\u8bdd\u6846\u901a\u8fc7\u8c03\u7528EndDialog\u51fd\u6570\u5173\u95ed ", "C\uff0c\u6a21\u6001\u5bf9\u8bdd\u6846\u6253\u5f00\u65f6\uff0c\u4e0d\u80fd\u591f\u5207\u6362\u5230\u5176\u7236\u7a97\u53e3\u4e0a\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c ", "D\uff0c\u6a21\u6001\u5bf9\u8bdd\u6846\u5fc5\u987b\u8bbe\u7f6eWS_VISIBLE\u663e\u793a\u6837\u5f0f\u624d\u80fd\u6b63\u5e38\u663e\u793a ", "22\uff0c\u5982\u4f55\u83b7\u5f97\u4e00\u4e2a\u4f4d\u56fe\u7684\u5c3a\u5bf8\uff08\u9ad8\u5ea6\u548c\u5bbd\u5ea6\uff09\uff0c\u8c03\u7528\u4e0b\u9762\u90a3\u4e2aWindows API\u51fd\u6570 A ", "A\uff0cGetObject ", "B\uff0cLoadBitmap ", "C\uff0cSelectObject ", "D\uff0cCreateCompatibleBitmap ", "23\uff0cVC6\u4e2d\u5982\u4f55\u6539\u53d8\u6309\u94ae\u4e0a\u663e\u793a\u7684\u540d\u79f0\uff1fA ", "A\uff0c\u5728\u8d44\u6e90\u7f16\u8f91\u5668\u4e2d\uff0c\u9009\u62e9\u8be5\u6309\u94ae\uff0c\u5728\u53f3\u952e\u83dc\u5355\u4e2d\u9009\u62e9\u5c5e\u6027(Properties),\u6539\u53d8\u5c5e\u6027\u6846\u7684\u6807\u9898(Caption)\u5b57\u6bb5\u7684\u503c ", "B\uff0c\u5728\u8d44\u6e90\u7f16\u8f91\u5668\u4e2d\uff0c\u9009\u62e9\u8be5\u6309\u94ae\uff0c\u5728\u53f3\u952e\u83dc\u5355\u4e2d\u9009\u62e9\u5c5e\u6027(Properties),\u6539\u53d8\u5c5e\u6027\u6846\u7684ID\u5b57\u6bb5\u7684\u503c ", "C\uff0c\u5728\u7c7b\u5411\u5bfc\u4e2d\uff0c\u9009\u62e9\u201dMessage Map\u201d\u9009\u9879\u5361\uff0c\u4e3a\u6309\u94ae\u6307\u5b9a\u5408\u9002\u7684\u540d\u79f0\u548c\u76f8\u5e94\u51fd\u6570 ", "D\uff0c\u5728\u7c7b\u5411\u5bfc\u4e2d\uff0c\u9009\u62e9\u201dMember Variables\u201d\u9009\u9879\u5361\uff0c\u4e3a\u6309\u94ae\u6307\u5b9a\u5408\u9002\u7684\u540d\u79f0\u548c\u53d8\u91cf ", "24\uff0c\u7ed9\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u6dfb\u52a0\u4e86\u4e00\u4e2a\u5bf9\u8bdd\u6846\uff0c\u53c8\u5728\u5bf9\u8bdd\u6846\u52a0\u5165\u4e86\u4e00\u4e2a\u7f16\u8f91\u6846\uff0c\u9700\u8981\u628a\u8be5\u7f16\u8f91\u6846\u7684\u503c\u521d\u59cb\u8bbe\u7f6e\u4e3a\u201dtest\u201d\uff0c ", "\u5e94\u8be5\u628a\u8be5\u64cd\u4f5c\u52a0\u5165\u5230\uff1a\uff08\u5047\u8bbe\u5e94\u7528\u7a0b\u5e8f\u4e3b\u7a97\u53e3\u7684\u7a97\u53e3\u5904\u7406\u51fd\u6570\u662fWndProc,\u5bf9\u8bdd\u6846\u5904\u7406\u51fd\u6570\u662fDlgProc) B ", "A\uff0c\u7a97\u53e3\u5904\u7406\u51fd\u6570WndProc\u4e2d\u5bf9WM_CREATE\u6d88\u606f\u7684\u5904\u7406\u4e2d ", "B\uff0c\u5bf9\u8bdd\u6846\u5904\u7406\u51fd\u6570DlgProc\u4e2d\u5bf9WM_INITDIALOG\u6d88\u606f\u7684\u5904\u7406\u4e2d ", "C\uff0c\u5bf9\u8bdd\u6846\u5904\u7406\u51fd\u6570DlgProc\u4e2d\u5bf9WM_CREATE\u6d88\u606f\u7684\u5904\u7406\u4e2d ", "D\uff0c\u7a97\u53e3\u5904\u7406\u51fd\u6570WndProc\u4e2d\u5bf9WM_NEXTDLGCTL\u6d88\u606f\u7684\u5904\u7406\u4e2d ", "25\uff0c\u4e3a\u5e94\u7528\u7a0b\u5e8f\u6dfb\u52a0\u4e00\u4e2a\u5feb\u6377\u83dc\u5355(\u53f3\u952e\u83dc\u5355)\uff0c\u5e94\u8be5\u5bf9\u4e0b\u9762\u54ea\u4e2a\u6d88\u606f\u4f5c\u51fa\u76f8\u5e94\u4ee3\u7801\uff1aA ", "A\uff0cWM_CONTEXTMENU ", "B\uff0cWM_RBUTTONDOWN ", "C\uff0cWM_LBUTTONDOWN ", "D\uff0cWM_POPUPMENU ", "26\uff0c\u8ba9\u7b80\u5355\u7684\u9759\u6001\u63a7\u4ef6\u80fd\u591f\u63a5\u53d7\u8f93\u5165\uff0c\u5e94\u8be5\uff1aA ", "A\uff0c\u7ed9\u5b83\u52a0\u4e0aSS_NOTIFY\u7684\u98ce\u683c ", "B\uff0c\u7ed9\u5b83\u52a0\u4e0aSS_COMMAND\u7684\u98ce\u683c ", "C\uff0c\u5728\u9759\u6001\u6587\u5b57\u4e0a\u52a0\u4e0a\u201d&\u201d\u5b57\u7b26 ", "D\uff0c\u5728\u9759\u6001\u6587\u5b57\u4e0a\u52a0\u4e0a\u201d%\u201d\u5b57\u7b26 ", "27, \u5bf9\u4e8e\u975e\u6a21\u6001\u5bf9\u8bdd\u6846,\u8981\u4f7f\u5176\u80fd\u591f\u5728\u5176\u5bf9\u8bdd\u6846\u5904\u7406\u51fd\u6570\u4e2d\u54cd\u5e94\u7528\u6237\u8f93\u5165,\u5728\u6d88\u606f\u5faa\u73af\u4e2d\u5e94\u8be5:B ", "A, \u548c\u4e00\u822c\u6d88\u606f\u5faa\u73af\u65e0\u4e0d\u540c\u4e4b\u5904 ", "B, \u5fc5\u987b\u8c03\u7528IsDialogMessage\u622a\u83b7\u6d88\u606f ", "C, \u5fc5\u987b\u8c03\u7528TranslateAccelerators\u7ffb\u8bd1\u6d88\u606f ", "D, \u5fc5\u987b\u8c03\u7528SendMessage\u53d1\u9001\u6d88\u606f ", "28,\u4ee5\u4e0b\u6709\u5173MFC\u4e2d\u7684\u7c7b\u7684\u8bf4\u6cd5\uff0c\u4e0d\u6b63\u786e\u7684\u662f\uff1aA ", "A\uff0cCObject\u7c7b\u662fMFC\u6240\u6709\u7c7b\u7684\u57fa\u7c7b ", "B\uff0cCView\u7c7b\u662fCWnd\u7c7b\u7684\u5b50\u7c7b ", "C\uff0cCDialog\u7c7b\u662fCWnd\u7c7b\u7684\u5b50\u7c7b ", "D\uff0cCArchive\u7c7b\u53ef\u4ee5\u652f\u6301\u4e32\u884c\u5316\u64cd\u4f5c ", "29\uff0c\u4ee5\u4e0b\u54ea\u4e2a\u64cd\u4f5c\u662fCObject\u7c7b\u4e0d\u5177\u6709\u7684\uff1aD ", "A\uff0c\u5bf9\u8c61\u7684\u5efa\u7acb\u548c\u5220\u9664 ", "B\uff0c\u4e3a\u5bf9\u8c61\u8bca\u65ad\u8f93\u51fa ", "C\uff0c\u63d0\u4f9b\u8fd0\u884c\u65f6\u4fe1\u606f ", "D\uff0c\u521b\u5efa\u5e94\u7528\u7a0b\u5e8f\u7a97\u53e3 ", "30,\u5728VC6\u5f00\u53d1\u73af\u5883\u4e2d\uff0c\u53cc\u51fb\u5de5\u4f5c\u533a\u6587\u4ef6\uff0c\u5c31\u80fd\u6253\u5f00\u8be5\u5de5\u4f5c\u533a\u53ca\u5176\u5305\u542b\u7684\u5de5\u7a0b\uff0c\u5176\u540e\u7f00\u662f\uff1aA ", "A\uff0c.dsw ", "B\uff0c.dsp ", "C\uff0c.rc ", "D\uff0c.clw ", "31\uff0c\u4ee5\u4e0b\u54ea\u4e2a\u51fd\u6570\u80fd\u591f\u5b9e\u73b0\u7531\u6574\u578b\u5230\u5b57\u7b26\u578b\u7684\u8f6c\u6362\uff1aA ", "A itoa ", "B atoi ", "C sprintf ", "D strtol ", "32\uff0c\u4e0b\u5217\u6709\u5173\u7f16\u8f91\u6846\u98ce\u683c\u7684\u8bf4\u6cd5\uff0c\u9519\u8bef\u7684\u662f\uff1aB ", "A, \u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u7f16\u8f91\u6846\u98ce\u683c\u6765\u81ea\u52a8\u8f6c\u6362\u5b57\u7b26 ", "B\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86ES_READONLY\u98ce\u683c\uff0c\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4e5f\u65e0\u6cd5\u8bbe\u7f6e\u7f16\u8f91\u6846\u7684\u6587\u672c ", "C\uff0c\u53ea\u6709\u8bbe\u7f6e\u4e86ES_MULTILINE\u98ce\u683c\uff0c\u624d\u80fd\u663e\u793a\u591a\u884c\u6587\u672c\u6846 ", "D\uff0c\u53ea\u6709\u8bbe\u7f6e\u4e86ES_WANTRETURN\u98ce\u683c\uff0c\u6309\u4e0bEnter\u952e\u65f6\u624d\u80fd\u63d2\u5165\u56de\u8f66\u7b26(\\n) ", "33\uff0c\u4e0b\u9762\u6709\u5173CMenu\u7c7b\u7684\u8bf4\u6cd5\uff0c\u9519\u8bef\u7684\u662f\uff1aA ", "A\uff0cCMenu\u7c7b\u662fCWnd\u7c7b\u7684\u5b50\u7c7b ", "B\uff0c\u7531CMenu\u7c7b\u5bf9\u8c61\u53ef\u4ee5\u5f97\u5230\u83dc\u5355\u53e5\u67c4HMENU"], "title": "\u6709\u5173Visual C++\u7684\u4e00\u4e9b\u9009\u62e9\u9898\u53ca\u7b54\u6848(2)"},
{"contents": ["1, \u8981\u8fd0\u884c\u4e00\u4e2aC\u8bed\u8a00\u7f16\u5199\u7684\u5e94\u7528\u7a0b\u5e8f\u5982\u4e0b\uff1a  ", " main() { ", " printf(\u201chello world\u201d); ", " } ", "\u5728VC6\u7684\u5f00\u53d1\u73af\u5883\u4e2d\uff0c\u5e94\u8be5\u5efa\u7acb\u54ea\u79cd\u7c7b\u578b\u7684\u5de5\u7a0b\uff1fB  ", "A, Win32 Application  ", "B, Win32 Console Application  ", "C, MFC AppWizard (exe)  ", "D, Utility Project  ", "2, \u5728VC6\u73af\u5883\u4e2d\uff0c\u628a\u5e94\u7528\u7a0b\u5e8f\u8f93\u5165\u540e\uff0c\u7f16\u8bd1\u94fe\u63a5\u540e\u51fa\u73b0\u5982\u4e0b\u9519\u8bef\uff0c  ", "mytest.cpp(192) : fatal error C1010: unexpected end of file while looking for precompiled header directive  ", "\u5e94\u8be5\u5982\u4f55\u89e3\u51b3\uff1a C ", "A\uff0c \u68c0\u67e5\u7f16\u5199\u7a0b\u5e8f\u4e2d\u7684\u5927\u5c0f\u5199\u95ee\u9898  ", "B\uff0c \u68c0\u67e5\u7f16\u5199\u7a0b\u5e8f\u4e2d\u662f\u5426\u6709\u672a\u95ed\u5408\u7684\u5927\u62ec\u53f7 ", "C\uff0c \u68c0\u67e5\u662f\u5426\u5728\u7a0b\u5e8f\u6700\u5f00\u59cb\u5305\u542b\u4e86\u9884\u7f16\u8bd1\u5934\u6587\u4ef6 ", "D\uff0c \u68c0\u67e5\u662f\u5426\u6709\u672a\u5b9a\u4e49\u7684\u53d8\u91cf\u540d ", "3, \u5173\u4e8eVC6\u5efa\u7acb\u7684\u5de5\u7a0b\u7684\u8bf4\u6cd5\uff0c\u6b63\u786e\u7684\u662f\uff1aC ", "A\uff0c\u5de5\u7a0b\u53ea\u80fd\u5305\u542b.cpp\u548c.h\u7c7b\u578b\u7684\u6587\u4ef6 ", "B\uff0c\u5de5\u4f5c\u533a\u6587\u4ef6\u7684\u540e\u7f00\u662f.dsp ", "C, \u7528\u9f20\u6807\u53cc\u51fb\u5de5\u4f5c\u533a\u6587\u4ef6\u53ef\u4ee5\u6253\u5f00\u6574\u4e2a\u5de5\u7a0b ", "D\uff0c\u5728VC\u7684FileView\u4e2d\u53ef\u4ee5\u770b\u5230\u5de5\u7a0b\u4e2d\u6240\u6709\u7684\u6587\u4ef6\uff0c\u5305\u62ec\u5de5\u4f5c\u533a\u6587\u4ef6\uff0c\u9879\u76ee\u6587\u4ef6\u7b49 ", "4\uff0c\u4e0b\u9762\u5173\u4e8e\u5728VC6\u73af\u5883\u4e0b\u8c03\u8bd5\u8fd0\u884c\u7684\u8bf4\u6cd5\u9519\u8bef\u7684\u662f A ", "A\uff0c\u8bbe\u7f6e\u5408\u9002\u7684\u65ad\u70b9(F9)\uff0c\u6309Ctrl+F5\u5f00\u59cb\u8c03\u8bd5\u8fd0\u884c ", "B\uff0c\u8bbe\u7f6e\u5408\u9002\u7684\u65ad\u70b9\uff0c\u6309F5\u5f00\u59cb\u8fd0\u884c ", "C\uff0c\u8c03\u8bd5\u65f6\uff0c\u53ef\u4ee5\u968f\u65f6\u89c2\u5bdf\u65ad\u70b9\u5904\u7684\u53d8\u91cf\u503c ", "D\uff0c\u5728\u8c03\u8bd5\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0c\u53ef\u968f\u65f6\u6309\u4e0bStop Debugging(Shift+F5)\u7ed3\u675f\u8c03\u8bd5\u8fd0\u884c ", "5\uff0c\u5728VC6\u4e2d\u63d0\u4f9b\u4e86\u6210\u5458\u65b9\u6cd5\u7684\u81ea\u52a8\u5217\u8868\u548c\u65b9\u6cd5\u53c2\u6570\u7684\u81ea\u52a8\u63d0\u793a\u529f\u80fd\uff0c\u4f46\u6709\u65f6\u4e0d\u80fd\u6b63\u5e38\u663e\u793a\uff0c\u8fd9\u662f\u5e94\u8be5\u5220\u9664 ", "\u8be5\u5de5\u7a0b\u76ee\u5f55\u4e0b\u90a3\u79cd\u540e\u7f00\u7c7b\u578b\u7684\u6587\u4ef6\u540e\uff0c\u518d\u6b21\u6253\u5f00\u5de5\u7a0b\uff0c\u5c31\u53ef\u4ee5\u6b63\u5e38\u63d0\u793a\u4e86\u3002B ", "A, clw ", "B, ncb ", "C, opt ", "D, aps ", "6\uff0c\u6709\u5173\u53e5\u67c4(handle)\u7684\u8bf4\u6cd5\uff0c\u4e0b\u5217\u4e0d\u6b63\u786e\u7684\u662f\uff1aC  ", "A \u53e5\u67c4\u662f\u4e00\u4e2a4\u5b57\u8282\u957f\u7684\u6574\u6570\u503c  ", "B \u53e5\u67c4\u7528\u6765\u6807\u8bc6\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4e0d\u540c\u7684\u5bf9\u8c61\u6216\u540c\u7c7b\u5bf9\u8c61\u4e2d\u7684\u4e0d\u540c\u5b9e\u4f8b  ", "C \u6d88\u606f\u662f\u53e5\u67c4\u7684\u4e00\u79cd  ", "D \u753b\u7b14\u7684\u53e5\u67c4\u7c7b\u578b\u662fHPEN\uff0c\u753b\u5237\u7684\u53e5\u67c4\u7c7b\u578b\u662fHBRUSH  ", "7, \u5728\u4e00\u4e2aWindows API\u7684\u57fa\u672c\u5e94\u7528\u7a0b\u5e8f\u6846\u67b6\u4e2d\uff0c\u6709\u5982\u4e0b\u7684\u6d88\u606f\u5faa\u73af\uff1a  ", " while( GetMessage(&Msg, NULL, 0, 0))  ", " {  ", " TranslateMessage( &Msg) ; ", " DispatchMessage( &Msg) ; ", " }  ", "\u4e0b\u9762\u54ea\u4e2a\u6d88\u606f\u4f7f\u5f97\u8be5\u6d88\u606f\u5faa\u73af\u9000\u51fa\u8fd0\u884c\uff0c\u4ece\u800c\u7ec8\u6b62\u6574\u4e2a\u5e94\u7528\u7a0b\u5e8f\u7684\u8fd0\u884c\u3002B  ", "A WM_DESTROY  ", "B WM_QUIT ", "C WM_CLOSE ", "D WM_CREATE ", "8, \u2460\u662fWindows\u5e94\u7528\u7a0b\u5e8f\u7684\u57fa\u672c\u64cd\u4f5c\u5355\u5143\uff0c\u63d0\u4f9b\u5e94\u7528\u7a0b\u5e8f\u4e0e\u7528\u6237\u4e4b\u95f4\u4ea4\u4e92 ", "\u7684\u63a5\u53e3\u73af\u5883\uff1bWindows\u7a0b\u5e8f\u8bbe\u8ba1\u662f\u4e00\u79cd\u4e8b\u4ef6\u9a71\u52a8\u7684\u7f16\u7a0b\u65b9\u6cd5\uff0c\u5b83\u4f7f\u7528\u2461\u63cf\u8ff0 ", "\u4e8b\u4ef6\u53d1\u751f\u7684\u4fe1\u606f\uff1bWindows\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u2462\u6807\u8bc6\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4e0d\u540c\u5bf9\u8c61\u7684\u4e0d\u540c ", "\u5bf9\u8c61\u548c\u540c\u7c7b\u5bf9\u8c61\u4e2d\u4e0d\u540c\u7684\u5b9e\u4f8b\uff0c\u5982\u6309\u94ae\u3001\u56fe\u6807\u3001\u6eda\u52a8\u6761\u3001\u63a7\u4ef6\u6216\u6587\u4ef6\u7b49\uff1b ", "Windows\u5e94\u7528\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\u53d8\u91cf\u540d\u7684\u547d\u540d\u4e00\u822c\u9075\u5faa\u2463\uff0c\u5b83\u5c06\u53d8\u91cf\u7684\u6570\u636e\u7c7b\u578b\u4f5c\u4e3a\u524d ", "\u7f00\uff0c\u540e\u63a5\u8868\u793a\u5176\u610f\u4e49\u6216\u529f\u80fd\u7684\u540d\u79f0\uff0c\u5982lpszFacename\u3002 B ", "A \u6d88\u606f\uff0c\u7a97\u53e3\uff0c\u6307\u9488\uff0c\u5308\u7259\u5229\u8868\u793a\u6cd5 ", "B \u7a97\u53e3\uff0c\u6d88\u606f\uff0c\u53e5\u67c4\uff0c\u5308\u7259\u5229\u8868\u793a\u6cd5 ", "C \u7a97\u53e3\uff0c\u6d88\u606f\uff0c\u53e5\u67c4\uff0c\u524d\u7f00\u8868\u793a\u6cd5 ", "D \u6d88\u606f\uff0c\u7a97\u53e3\uff0c\u6307\u9488\uff0c\u524d\u7f00\u8868\u793a\u6cd5 ", "9\uff0cRegisterClass\u8fd9\u4e2aWindows API\u51fd\u6570\u7684\u4f5c\u7528\u662f\uff1aA ", "A \u6ce8\u518c\u4e00\u4e2a\u7a97\u53e3\u7c7b ", "B \u7a97\u53e3\u7684\u663e\u793a ", "C \u521b\u5efa\u4e00\u4e2a\u7a97\u53e3\u7c7b\u7684\u5b9e\u4f8b ", "D \u7a97\u53e3\u7c7b\u7684\u5b9a\u4e49 ", "10\uff0c\u5173\u4e8eWindows API\u7f16\u7a0b\u65f6\u7684\u7a97\u53e3\u51fd\u6570(WndProc)\u7684\u8bf4\u6cd5\uff0c\u4e0d\u6b63\u786e\u7684\u662f:D ", "A \u5b83\u662f\u4e00\u4e2a\u56de\u8c03\u51fd\u6570 ", "B \u5b83\u5185\u90e8\u7684switch\u2026case\u5206\u652f\u5224\u65ad\u7528\u4e8e\u4e0d\u540c\u7c7b\u578b\u6d88\u606f\u7684\u5904\u7406 ", "C \u5b83\u6709\u56db\u4e2a\u5165\u53e3\u53c2\u6570,\u5176\u610f\u4e49\u548c\u6d88\u606f\u7ed3\u6784\u4f53MSG\u7684\u610f\u4e49\u76f8\u540c ", "D \u5982\u679c\u4f7f\u7528\u5168\u7a7a\u7684\u7a97\u53e3\u51fd\u6570(\u5185\u90e8\u6ca1\u6709\u4ee3\u7801),Windows\u4e5f\u4f1a\u8d1f\u8d23\u6309\u7167\u7f3a\u7701\u65b9\u6cd5\u5904\u7406\u6d88\u606f ", "11, Windows\u7a97\u53e3\u5bf9\u5237\u65b0\u8bf7\u6c42\u7684\u76f8\u5e94\uff0c\u4e0b\u5217\u54ea\u79cd\u60c5\u51b5\u4e0b\u4e0d\u9700\u8981\u5e94\u7528\u7a0b\u5e8f\u8003\u8651\uff1aD ", "A\uff0c\u7a97\u53e3\u79fb\u52a8\u540e\u7684\u5237\u65b0 ", "B\uff0c\u88ab\u8986\u76d6\u533a\u57df\u7684\u5237\u65b0 ", "C\uff0c\u901a\u8fc7\u6eda\u52a8\u6761\u6eda\u52a8\u7a97\u53e3\u65f6 ", "D\uff0c\u56fe\u6807\u6216\u5149\u6807\u7a7f\u8d8a\u7a97\u53e3\u65f6 "], "title": "\u6709\u5173Visual C++\u7684\u4e00\u4e9b\u9009\u62e9\u9898\u53ca\u7b54\u6848"},
{"contents": ["\u8bb8\u591a\u9762\u8bd5\u9898\u770b\u4f3c\u7b80\u5355\uff0c\u5374\u9700\u8981\u6df1\u539a\u7684\u57fa\u672c\u529f\u624d\u80fd\u7ed9\u51fa\u5b8c\u7f8e\u7684\u89e3\u7b54\u3002\u4f01\u4e1a\u8981\u6c42\u9762\u8bd5\u8005\u5199\u4e00\u4e2a\u6700\u7b80\u5355\u7684strcpy\u51fd\u6570\u90fd\u53ef\u770b\u51fa\u9762\u8bd5\u8005\u5728\u6280\u672f\u4e0a\u7a76\u7adf\u8fbe\u5230\u4e86\u600e\u6837\u7684\u7a0b\u5ea6\uff0c\u6211\u4eec\u80fd\u771f\u6b63\u5199\u597d\u4e00\u4e2astrcpy\u51fd\u6570\u5417\uff1f\u6211\u4eec\u90fd\u89c9\u5f97\u81ea\u5df1\u80fd\uff0c\u53ef\u662f\u6211\u4eec\u5199\u51fa\u7684strcpy\u5f88\u53ef\u80fd\u53ea\u80fd\u62ff\u523010\u5206\u4e2d\u76842\u5206\u3002\u8bfb\u8005\u53ef\u4ece\u672c\u6587\u770b\u5230strcpy\u51fd\u6570\u4ece2\u5206\u523010\u5206\u89e3\u7b54\u7684\u4f8b\u5b50\uff0c\u770b\u770b\u81ea\u5df1\u5c5e\u4e8e\u4ec0\u4e48\u6837\u7684\u5c42\u6b21\u3002\u6b64\u5916\uff0c\u8fd8\u6709\u4e00\u4e9b\u9762\u8bd5\u9898\u8003\u67e5\u9762\u8bd5\u8005\u654f\u6377\u7684\u601d\u7ef4\u80fd\u529b\u3002  ", "\u5206\u6790\u8fd9\u4e9b\u9762\u8bd5\u9898\uff0c\u672c\u8eab\u5305\u542b\u5f88\u5f3a\u7684\u8da3\u5473\u6027\uff1b\u800c\u4f5c\u4e3a\u4e00\u540d\u7814\u53d1\u4eba\u5458\uff0c\u901a\u8fc7\u5bf9\u8fd9\u4e9b\u9762\u8bd5\u9898\u7684\u6df1\u5165\u5256\u6790\u5219\u53ef\u8fdb\u4e00\u6b65\u589e\u5f3a\u81ea\u8eab\u7684\u5185\u529f\u3002  ", "2.\u627e\u9519\u9898  ", "\u8bd5\u9898\uff11\uff1a  ", "void test1()  ", "{  ", " char string[10];  ", " char* str1 = \u201c0123456789\u2033;  ", " strcpy( string, str1 );  ", "}  ", "\u8bd5\u98982\uff1a  ", "void test2()  ", "{  ", " char string[10], str1[10];  ", " int i;  ", " for(i=0; i\n", " {  ", " str1[i] = \u2018a\u2019;  ", " }  ", " strcpy( string, str1 );  ", "}  ", "\u8bd5\u98983\uff1a  ", "void test3(char* str1)  ", "{  ", " char string[10];  ", " if( strlen( str1 ) \n", " {  ", " strcpy( string, str1 );  ", " }  ", "}  ", "\u89e3\u7b54\uff1a  ", "\u8bd5\u98981\u5b57\u7b26\u4e32str1\u9700\u898111\u4e2a\u5b57\u8282\u624d\u80fd\u5b58\u653e\u4e0b\uff08\u5305\u62ec\u672b\u5c3e\u7684\u2019\\0\u2019\uff09\uff0c\u800cstring\u53ea\u670910\u4e2a\u5b57\u8282\u7684\u7a7a\u95f4\uff0cstrcpy\u4f1a\u5bfc\u81f4\u6570\u7ec4\u8d8a\u754c\uff1b ", "\u5bf9\u8bd5\u98982\uff0c\u5982\u679c\u9762\u8bd5\u8005\u6307\u51fa\u5b57\u7b26\u6570\u7ec4str1\u4e0d\u80fd\u5728\u6570\u7ec4\u5185\u7ed3\u675f\u53ef\u4ee5\u7ed93\u5206\uff1b\u5982\u679c\u9762\u8bd5\u8005\u6307\u51fastrcpy(string, str1)\u8c03\u7528\u4f7f\u5f97\u4ecestr1\u5185\u5b58\u8d77\u590d\u5236\u5230string\u5185\u5b58\u8d77\u6240\u590d\u5236\u7684\u5b57\u8282\u6570\u5177\u6709\u4e0d\u786e\u5b9a\u6027\u53ef\u4ee5\u7ed97\u5206\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u6307\u51fa\u5e93\u51fd\u6570strcpy\u5de5\u4f5c\u65b9\u5f0f\u7684\u7ed910\u5206\uff1b ", "\u5bf9\u8bd5\u98983\uff0cif(strlen(str1) \n", "\u5256\u6790\uff1a  ", "\u8003\u67e5\u5bf9\u57fa\u672c\u529f\u7684\u638c\u63e1\uff1a ", "\uff081\uff09\u5b57\u7b26\u4e32\u4ee5\u2019\\0\u2019\u7ed3\u5c3e\uff1b ", "\uff08\uff12\uff09\u5bf9\u6570\u7ec4\u8d8a\u754c\u628a\u63e1\u7684\u654f\u611f\u5ea6\uff1b ", "\uff08\uff13\uff09\u5e93\u51fd\u6570strcpy\u7684\u5de5\u4f5c\u65b9\u5f0f\uff0c\u5982\u679c\u7f16\u5199\u4e00\u4e2a\u6807\u51c6strcpy\u51fd\u6570\u7684\u603b\u5206\u503c\u4e3a10\uff0c\u4e0b\u9762\u7ed9\u51fa\u51e0\u4e2a\u4e0d\u540c\u5f97\u5206\u7684\u7b54\u6848\uff1a ", "2\u5206  ", "void strcpy( char *strDest, char *strSrc )  ", "{  ", "\u3000 while( (*strDest++ = * strSrc++) != \u2018\\0\u2019 );  ", "}  ", "4\u5206  ", "void strcpy( char *strDest, const char *strSrc )  ", "//\u5c06\u6e90\u5b57\u7b26\u4e32\u52a0const\uff0c\u8868\u660e\u5176\u4e3a\u8f93\u5165\u53c2\u6570\uff0c\u52a02\u5206  ", "{  ", "\u3000 while( (*strDest++ = * strSrc++) != \u2018\\0\u2019 );  ", "}  ", "7\u5206  ", "void strcpy(char *strDest, const char *strSrc)  ", "{  ", "//\u5bf9\u6e90\u5730\u5740\u548c\u76ee\u7684\u5730\u5740\u52a0\u975e0\u65ad\u8a00\uff0c\u52a03\u5206  ", "\u3000assert( (strDest != NULL) && (strSrc != NULL) );  ", "\u3000while( (*strDest++ = * strSrc++) != \u2018\\0\u2019 );  ", "}  ", "10\u5206  ", "//\u4e3a\u4e86\u5b9e\u73b0\u94fe\u5f0f\u64cd\u4f5c\uff0c\u5c06\u76ee\u7684\u5730\u5740\u8fd4\u56de\uff0c\u52a03\u5206\uff01  ", "char * strcpy( char *strDest, const char *strSrc )  ", "{  ", "\u3000assert( (strDest != NULL) && (strSrc != NULL) );  ", " char *address = strDest;  ", "\u3000while( (*strDest++ = * strSrc++) != \u2018\\0\u2019 );  ", " return address;  ", "}  ", "\u4ece2\u5206\u523010\u5206\u7684\u51e0\u4e2a\u7b54\u6848\u6211\u4eec\u53ef\u4ee5\u6e05\u695a\u7684\u770b\u5230\uff0c\u5c0f\u5c0f\u7684strcpy\u7adf\u7136\u6697\u85cf\u7740\u8fd9\u4e48\u591a\u7384\u673a\uff0c\u771f\u4e0d\u662f\u76d6\u7684\uff01\u9700\u8981\u591a\u4e48\u624e\u5b9e\u7684\u57fa\u672c\u529f\u624d\u80fd\u5199\u4e00\u4e2a\u5b8c\u7f8e\u7684strcpy\u554a\uff01  ", "\uff08\uff14\uff09\u5bf9strlen\u7684\u638c\u63e1\uff0c\u5b83\u6ca1\u6709\u5305\u62ec\u5b57\u7b26\u4e32\u672b\u5c3e\u7684\u2019\\0\u2032\u3002 ", "\u8bfb\u8005\u770b\u4e86\u4e0d\u540c\u5206\u503c\u7684strcpy\u7248\u672c\uff0c\u5e94\u8be5\u4e5f\u53ef\u4ee5\u5199\u51fa\u4e00\u4e2a10\u5206\u7684strlen\u51fd\u6570\u4e86\uff0c\u5b8c\u7f8e\u7684\u7248\u672c\u4e3a\uff1a ", "int strlen( const char *str ) //\u8f93\u5165\u53c2\u6570const  ", "{  ", " assert( strt != NULL ); //\u65ad\u8a00\u5b57\u7b26\u4e32\u5730\u5740\u975e0  ", " int len;  ", " while( (*str++) != \u2018\\0\u2032 )  ", " {  ", " len++;  ", " }  ", " return len;  ", "} ", "\u8bd5\u98984\uff1a ", "void GetMemory( char *p )  ", "{  ", "p = (char *) malloc( 100 );  ", "}  ", "void Test( void )  ", "{  ", "char *str = NULL;  ", "GetMemory( str );  ", "strcpy( str, \u201chello world\u201d );  ", "printf( str );  ", "}  ", "\u8bd5\u98985\uff1a ", "char *GetMemory( void )  ", "{  ", " char p[] = \u201chello world\u201d;  ", " return p;  ", "}  ", "void Test( void )  ", "{  ", " char *str = NULL;  ", " str = GetMemory();  ", " printf( str );  ", "}  ", "\u8bd5\u98986\uff1a  ", "void GetMemory( char **p, int num )  ", "{  ", " *p = (char *) malloc( num );  ", "}  ", "void Test( void )  ", "{  ", " char *str = NULL;  ", " GetMemory( &str, 100 );  ", " strcpy( str, \u201chello\u201d );  ", " printf( str );  ", "}  ", "\u8bd5\u98987\uff1a  ", "void Test( void )  ", "{  ", " char *str = (char *) malloc( 100 );  ", " strcpy( str, \u201chello\u201d );  ", " free( str );  ", " \u2026 //\u7701\u7565\u7684\u5176\u5b83\u8bed\u53e5  ", "}  ", "\u89e3\u7b54\uff1a  ", "\u8bd5\u98984\u4f20\u5165\u4e2dGetMemory( char *p )\u51fd\u6570\u7684\u5f62\u53c2\u4e3a\u5b57\u7b26\u4e32\u6307\u9488\uff0c\u5728\u51fd\u6570\u5185\u90e8\u4fee\u6539\u5f62\u53c2\u5e76\u4e0d\u80fd\u771f\u6b63\u7684\u6539\u53d8\u4f20\u5165\u5f62\u53c2\u7684\u503c\uff0c\u6267\u884c\u5b8c ", "char *str = NULL;", "\nGetMemory( str );  ", "\u540e\u7684str\u4ecd\u7136\u4e3aNULL\uff1b ", "\u8bd5\u98985\u4e2d", "\n char p[] = \u201chello world\u201d;  ", " return p;  ", "\u7684p[]\u6570\u7ec4\u4e3a\u51fd\u6570\u5185\u7684\u5c40\u90e8\u81ea\u52a8\u53d8\u91cf\uff0c\u5728\u51fd\u6570\u8fd4\u56de\u540e\uff0c\u5185\u5b58\u5df2\u7ecf\u88ab\u91ca\u653e\u3002\u8fd9\u662f\u8bb8\u591a\u7a0b\u5e8f\u5458\u5e38\u72af\u7684\u9519\u8bef\uff0c\u5176\u6839\u6e90\u5728\u4e8e\u4e0d\u7406\u89e3\u53d8\u91cf\u7684\u751f\u5b58\u671f\u3002  ", "\u8bd5\u98986\u7684GetMemory\u907f\u514d\u4e86\u8bd5\u98984\u7684\u95ee\u9898\uff0c\u4f20\u5165GetMemory\u7684\u53c2\u6570\u4e3a\u5b57\u7b26\u4e32\u6307\u9488\u7684\u6307\u9488\uff0c\u4f46\u662f\u5728GetMemory\u4e2d\u6267\u884c\u7533\u8bf7\u5185\u5b58\u53ca\u8d4b\u503c\u8bed\u53e5 "], "title": "C/C++\u7a0b\u5e8f\u5458\u5e94\u8058\u5e38\u89c1\u9762\u8bd5\u9898\u6df1\u5165\u5256\u6790"},
{"contents": ["\u4e00\u3001\u8bf7\u586b\u5199BOOL , float, \u6307\u9488\u53d8\u91cf \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\u3002\uff0810\u5206\uff09 ", "\u8bf7\u5199\u51fa BOOL flag \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\u3002\uff083\u5206\uff09", "\n\u6807\u51c6\u7b54\u6848\uff1a", "\n if ( flag )", "\n if ( !flag )", "\n\u5982\u4e0b\u5199\u6cd5\u5747\u5c5e\u4e0d\u826f\u98ce\u683c\uff0c\u4e0d\u5f97\u5206\u3002", "\n if (flag == TRUE)", "\n if (flag == 1 )", "\n if (flag == FALSE)", "\n if (flag == 0)", "\n\u8bf7\u5199\u51fa float x \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\u3002\uff084\u5206\uff09", "\n\u6807\u51c6\u7b54\u6848\u793a\u4f8b\uff1a", "\nconst float EPSINON = 0.00001;", "\nif ((x >= \u2013 EPSINON) && (x \n\u4e0d\u53ef\u5c06\u6d6e\u70b9\u53d8\u91cf\u7528\u201c==\u201d\u6216\u201c\uff01=\u201d\u4e0e\u6570\u5b57\u6bd4\u8f83\uff0c\u5e94\u8be5\u8bbe\u6cd5\u8f6c\u5316\u6210\u201c>=\u201d\u6216\u201c\n", "\u5982\u4e0b\u662f\u9519\u8bef\u7684\u5199\u6cd5\uff0c\u4e0d\u5f97\u5206\u3002", "\n if (x == 0.0)", "\n if (x != 0.0)  ", "\u8bf7\u5199\u51fa char *p \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\u3002\uff083\u5206\uff09", "\n\u6807\u51c6\u7b54\u6848\uff1a", "\n if (p == NULL)", "\n if (p != NULL)", "\n\u5982\u4e0b\u5199\u6cd5\u5747\u5c5e\u4e0d\u826f\u98ce\u683c\uff0c\u4e0d\u5f97\u5206\u3002", "\n if (p == 0)", "\n if (p != 0)", "\n if (p)", "\n if (!)  ", "\u4e8c\u3001\u4ee5\u4e0b\u4e3aWindows NT\u4e0b\u768432\u4f4dC++\u7a0b\u5e8f\uff0c\u8bf7\u8ba1\u7b97sizeof\u7684\u503c\uff0810\u5206\uff09 ", "\u8bf7\u8ba1\u7b97void Func ( char str[100]) ", "{", "\n sizeof( str ) = 4 \uff082\u5206\uff09", "\n} ", "void *p = malloc( 100 );", "\n\u8bf7\u8ba1\u7b97", "\nsizeof ( p ) = 4 \uff082\u5206\uff09 ", "\u4e09\u3001\u7b80\u7b54\u9898\uff0825\u5206\uff09 ", "1\u3001\u5934\u6587\u4ef6\u4e2d\u7684 ifndef/define/endif \u5e72\u4ec0\u4e48\u7528\uff1f\uff085\u5206\uff09", "\n\u7b54\uff1a\u9632\u6b62\u8be5\u5934\u6587\u4ef6\u88ab\u91cd\u590d\u5f15\u7528\u3002 ", "2\u3001#include ", "3\u3001const \u6709\u4ec0\u4e48\u7528\u9014\uff1f\uff08\u8bf7\u81f3\u5c11\u8bf4\u660e\u4e24\u79cd\uff09\uff085\u5206\uff09", "\n\u7b54\uff1a\uff081\uff09\u53ef\u4ee5\u5b9a\u4e49 const \u5e38\u91cf", "\n\uff082\uff09const\u53ef\u4ee5\u4fee\u9970\u51fd\u6570\u7684\u53c2\u6570\u3001\u8fd4\u56de\u503c\uff0c\u751a\u81f3\u51fd\u6570\u7684\u5b9a\u4e49\u4f53\u3002\u88abconst\u4fee\u9970\u7684\u4e1c\u897f\u90fd\u53d7\u5230\u5f3a\u5236\u4fdd\u62a4\uff0c\u53ef\u4ee5\u9884\u9632\u610f\u5916\u7684\u53d8\u52a8\uff0c\u80fd\u63d0\u9ad8\u7a0b\u5e8f\u7684\u5065\u58ee\u6027\u3002 ", "4\u3001\u5728C++ \u7a0b\u5e8f\u4e2d\u8c03\u7528\u88ab C\u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u7684\u51fd\u6570\uff0c\u4e3a\u4ec0\u4e48\u8981\u52a0 extern \u201cC\u201d\uff1f \uff085\u5206\uff09", "\n\u7b54\uff1aC++\u8bed\u8a00\u652f\u6301\u51fd\u6570\u91cd\u8f7d\uff0cC\u8bed\u8a00\u4e0d\u652f\u6301\u51fd\u6570\u91cd\u8f7d\u3002\u51fd\u6570\u88abC++\u7f16\u8bd1\u540e\u5728\u5e93\u4e2d\u7684\u540d\u5b57\u4e0eC\u8bed\u8a00\u7684\u4e0d\u540c\u3002\u5047\u8bbe\u67d0\u4e2a\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a void foo(int x, int y);", "\n\u8be5\u51fd\u6570\u88abC\u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u5728\u5e93\u4e2d\u7684\u540d\u5b57\u4e3a_foo\uff0c\u800cC++\u7f16\u8bd1\u5668\u5219\u4f1a\u4ea7\u751f\u50cf_foo_int_int\u4e4b\u7c7b\u7684\u540d\u5b57\u3002", "\nC++\u63d0\u4f9b\u4e86C\u8fde\u63a5\u4ea4\u6362\u6307\u5b9a\u7b26\u53f7extern\u201cC\u201d\u6765\u89e3\u51b3\u540d\u5b57\u5339\u914d\u95ee\u9898\u3002 ", "5\u3001\u8bf7\u7b80\u8ff0\u4ee5\u4e0b\u4e24\u4e2afor\u5faa\u73af\u7684\u4f18\u7f3a\u70b9\uff085\u5206\uff09 ", "for (i=0; i", "\n{", "\nif (condition)", "\n DoSomething();", "\nelse", "\n DoOtherthing();", "\n} if (condition)", "\n{", "\nfor (i=0; i", "\n DoSomething();", "\n}", "\nelse", "\n{", "\n for (i=0; i", "\n DoOtherthing();", "\n}", "\n\u4f18\u70b9\uff1a\u7a0b\u5e8f\u7b80\u6d01 ", "\u7f3a\u70b9\uff1a\u591a\u6267\u884c\u4e86N-1\u6b21\u903b\u8f91\u5224\u65ad\uff0c\u5e76\u4e14\u6253\u65ad\u4e86\u5faa\u73af\u201c\u6d41\u6c34\u7ebf\u201d\u4f5c\u4e1a\uff0c\u4f7f\u5f97\u7f16\u8bd1\u5668\u4e0d\u80fd\u5bf9\u5faa\u73af\u8fdb\u884c\u4f18\u5316\u5904\u7406\uff0c\u964d\u4f4e\u4e86\u6548\u7387\u3002 \u4f18\u70b9\uff1a\u5faa\u73af\u7684\u6548\u7387\u9ad8 ", "\u7f3a\u70b9\uff1a\u7a0b\u5e8f\u4e0d\u7b80\u6d01 ", "\u56db\u3001\u6709\u5173\u5185\u5b58\u7684\u601d\u8003\u9898\uff08\u6bcf\u5c0f\u98985\u5206\uff0c\u517120\u5206\uff09 ", "void GetMemory(char *p)", "\n{", "\np = (char *)malloc(100);", "\n}", "\nvoid Test(void)", "\n{", "\nchar *str = NULL;", "\nGetMemory(str);", "\nstrcpy(str, \u201chello world\u201d);", "\nprintf(str);", "\n} ", "\u8bf7\u95ee\u8fd0\u884cTest\u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n\u7b54\uff1a\u7a0b\u5e8f\u5d29\u6e83\u3002", "\n\u56e0\u4e3aGetMemory\u5e76\u4e0d\u80fd\u4f20\u9012\u52a8\u6001\u5185\u5b58\uff0c", "\nTest\u51fd\u6570\u4e2d\u7684 str\u4e00\u76f4\u90fd\u662f NULL\u3002", "\nstrcpy(str, \u201chello world\u201d);\u5c06\u4f7f\u7a0b\u5e8f\u5d29\u6e83\u3002", "\n char *GetMemory(void)", "\n{", "\nchar p[] = \u201chello world\u201d;", "\nreturn p;", "\n}", "\nvoid Test(void)", "\n{", "\nchar *str = NULL;", "\nstr = GetMemory();", "\nprintf(str);", "\n} ", "\u8bf7\u95ee\u8fd0\u884cTest\u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n\u7b54\uff1a\u53ef\u80fd\u662f\u4e71\u7801\u3002", "\n\u56e0\u4e3aGetMemory\u8fd4\u56de\u7684\u662f\u6307\u5411\u201c\u6808\u5185\u5b58\u201d\u7684\u6307\u9488\uff0c\u8be5\u6307\u9488\u7684\u5730\u5740\u4e0d\u662f NULL\uff0c\u4f46\u5176\u539f\u73b0\u7684\u5185\u5bb9\u5df2\u7ecf\u88ab\u6e05\u9664\uff0c\u65b0\u5185\u5bb9\u4e0d\u53ef\u77e5\u3002", "\nvoid GetMemory2(char **p, int num)", "\n{", "\n*p = (char *)malloc(num);", "\n}", "\nvoid Test(void)", "\n{", "\nchar *str = NULL;", "\nGetMemory(&str, 100);", "\nstrcpy(str, \u201chello\u201d);", "\nprintf(str);", "\n}", "\n\u8bf7\u95ee\u8fd0\u884cTest\u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n\u7b54\uff1a", "\n\uff081\uff09\u80fd\u591f\u8f93\u51fahello", "\n\uff082\uff09\u5185\u5b58\u6cc4\u6f0f ", " void Test(void)", "\n{", "\nchar *str = (char *) malloc(100);", "\n strcpy(str, \u201chello\u201d);", "\n free(str);", "\n if(str != NULL)", "\n {", "\n strcpy(str, \u201cworld\u201d);", "\nprintf(str);", "\n}", "\n}", "\n\u8bf7\u95ee\u8fd0\u884cTest\u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n\u7b54\uff1a\u7be1\u6539\u52a8\u6001\u5185\u5b58\u533a\u7684\u5185\u5bb9\uff0c\u540e\u679c\u96be\u4ee5\u9884\u6599\uff0c\u975e\u5e38\u5371\u9669\u3002", "\n\u56e0\u4e3afree(str);\u4e4b\u540e\uff0cstr\u6210\u4e3a\u91ce\u6307\u9488\uff0c", "\nif(str != NULL)\u8bed\u53e5\u4e0d\u8d77\u4f5c\u7528\u3002 ", "\u4e94\u3001\u7f16\u5199strcpy\u51fd\u6570\uff0810\u5206\uff09 ", "\u5df2\u77e5strcpy\u51fd\u6570\u7684\u539f\u578b\u662f", "\n char *strcpy(char *strDest, const char *strSrc);", "\n \u5176\u4e2dstrDest\u662f\u76ee\u7684\u5b57\u7b26\u4e32\uff0cstrSrc\u662f\u6e90\u5b57\u7b26\u4e32\u3002", "\n\uff081\uff09\u4e0d\u8c03\u7528C++/C\u7684\u5b57\u7b26\u4e32\u5e93\u51fd\u6570\uff0c\u8bf7\u7f16\u5199\u51fd\u6570 strcpy", "\nchar *strcpy(char *strDest, const char *strSrc);", "\n{", "\n assert((strDest!=NULL) && (strSrc !=NULL)); // 2\u5206", "\n char *address = strDest; // 2\u5206", "\n while( (*strDest++ = * strSrc++) != \u2018\\0\u2019 ) // 2\u5206", "\n NULL ;", "\n return address ; // 2\u5206", "\n} ", "\uff082\uff09strcpy\u80fd\u628astrSrc\u7684\u5185\u5bb9\u590d\u5236\u5230strDest\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u8981char * \u7c7b\u578b\u7684\u8fd4\u56de\u503c\uff1f", "\n\u7b54\uff1a\u4e3a\u4e86\u5b9e\u73b0\u94fe\u5f0f\u8868\u8fbe\u5f0f\u3002 // 2\u5206", "\n\u4f8b\u5982 int length = strlen( strcpy( strDest, \u201chello world\u201d) ); ", "\u516d\u3001\u7f16\u5199\u7c7bString\u7684\u6784\u9020\u51fd\u6570\u3001\u6790\u6784\u51fd\u6570\u548c\u8d4b\u503c\u51fd\u6570\uff0825\u5206\uff09", "\n\u5df2\u77e5\u7c7bString\u7684\u539f\u578b\u4e3a\uff1a", "\n class String", "\n {", "\n public:", "\n String(const char *str = NULL); // \u666e\u901a\u6784\u9020\u51fd\u6570", "\n String(const String &other); // \u62f7\u8d1d\u6784\u9020\u51fd\u6570", "\n ~ String(void); // \u6790\u6784\u51fd\u6570", "\n String & operate =(const String &other); // \u8d4b\u503c\u51fd\u6570", "\n private:", "\n char *m_data; // \u7528\u4e8e\u4fdd\u5b58\u5b57\u7b26\u4e32", "\n };", "\n \u8bf7\u7f16\u5199String\u7684\u4e0a\u8ff04\u4e2a\u51fd\u6570\u3002", "\n\u6807\u51c6\u7b54\u6848\uff1a ", "// String\u7684\u6790\u6784\u51fd\u6570", "\n String::~String(void) // 3\u5206", "\n{", "\n delete [] m_data;", "\n// \u7531\u4e8em_data\u662f\u5185\u90e8\u6570\u636e\u7c7b\u578b\uff0c\u4e5f\u53ef\u4ee5\u5199\u6210 delete m_data;", "\n } ", " // String\u7684\u666e\u901a\u6784\u9020\u51fd\u6570", "\n String::String(const char *str) // 6\u5206", "\n{", "\n if(str==NULL)", "\n {", "\n m_data = new char[1]; // \u82e5\u80fd\u52a0 NULL \u5224\u65ad\u5219\u66f4\u597d", "\n *m_data = \u2018\\0\u2019;", "\n }", "\n else", "\n {", "\n int length = strlen(str);", "\n m_data = new char[length+1]; // \u82e5\u80fd\u52a0 NULL \u5224\u65ad\u5219\u66f4\u597d", "\n strcpy(m_data, str);", "\n }", "\n}", "\n// \u62f7\u8d1d\u6784\u9020\u51fd\u6570", "\n String::String(const String &other) // 3\u5206", "\n {", "\n int length = strlen(other.m_data);", "\n m_data = new char[length+1]; // \u82e5\u80fd\u52a0 NULL \u5224\u65ad\u5219\u66f4\u597d", "\n strcpy(m_data, other.m_data);", "\n}", "\n// \u8d4b\u503c\u51fd\u6570", "\n String & String::operate =(const String &other) // 13\u5206", "\n {", "\n // (1) \u68c0\u67e5\u81ea\u8d4b\u503c // 4\u5206", "\n if(this == &other)", "\n return *this; ", "// (2) \u91ca\u653e\u539f\u6709\u7684\u5185\u5b58\u8d44\u6e90 // 3\u5206", "\n delete [] m_data; ", " // \uff083\uff09\u5206\u914d\u65b0\u7684\u5185\u5b58\u8d44\u6e90\uff0c\u5e76\u590d\u5236\u5185\u5bb9 // 3\u5206", "\n int length = strlen(other.m_data);", "\n m_data = new char[length+1]; // \u82e5\u80fd\u52a0 NULL \u5224\u65ad\u5219\u66f4\u597d", "\n strcpy(m_data, other.m_data); ", " // \uff084\uff09\u8fd4\u56de\u672c\u5bf9\u8c61\u7684\u5f15\u7528 // 3\u5206", "\n return *this;", "\n}"], "title": "\u7ecf\u5178C++\u9762\u8bd5\u9898\u76ee\u4e0e\u53c2\u8003\u7b54\u6848"},
{"contents": ["\u53c2\u8003\u7b54\u6848\uff1a\u7a7a\u6811\u6216\u8005\u6ee1\u8db3\u4e0b\u5217\u7279\u70b9", "\n         \u2460 \u82e5\u5b83\u7684\u5de6\u5b50\u6811\u975e\u7a7a\uff0c\u5219\u5de6\u5b50\u6811\u4e0a\u6240\u6709\u8282\u70b9\u7684\u503c\u5747\u5c0f\u4e8e\u6839\u8282\u70b9\u7684\u503c", "\n         \u2461 \u82e5\u5b83\u7684\u53f3\u5b50\u6811\u975e\u7a7a\uff0c\u5219\u53f3\u5b50\u6811\u4e0a\u6240\u6709\u8282\u70b9\u7684\u503c\u5747\u5927\u4e8e\u6839\u8282\u70b9\u7684\u503c", "\n         \u2462 \u5de6\u53f3\u5b50\u6811\u672c\u8eab\u53c8\u5404\u662f\u4e00\u68f5\u4e8c\u53c9\u67e5\u627e\u6811\u3002"], "title": "\u4ec0\u4e48\u662f\u4e8c\u53c9\u67e5\u627e\u6811\uff1f"},
{"contents": ["C/C++\uff1a", "\n1\uff0eC\u4e0eC++\u7684\u5f02\u540c\uff0c\u4f18\u52a3\uff1b", "\n2\uff0eC\uff0cC++\uff0cVC\uff0cBC\uff0cTC\u7684\u533a\u522b\uff1b", "\n3\uff0eC++\u4e2dtry\u2026catch\u5173\u952e\u5b57\u7684\u7528\u6cd5\u4e0e\u4f18\u70b9\uff1b", "\n4\uff0e\u679a\u4e3e\u7684\u7528\u6cd5\uff0c\u4ee5\u53ca\u5b83\u4e0e\u5b8f\u7684\u533a\u522b\uff1b", "\n5\uff0econst\u7684\u7528\u6cd5\uff0c\u4ee5\u53ca\u58f0\u660econst\u53d8\u91cf\u4e0e\u5b8f\u7684\u533a\u522b\uff1b", "\nconst\u7684\u7528\u6cd5\u6709\u56db\u79cd\uff1a", "\n\u533a\u522b\uff1aconst\u5e38\u91cf\u6709\u6570\u636e\u7c7b\u578b\uff0c \u800c\u5b8f\u5e38\u91cf\u6ca1\u6709\u6570\u636e\u7c7b\u578b\u3002\u7f16\u8bd1\u5668\u53ef\u4ee5\u5bf9\u524d\u8005\u8fdb\u884c\u7c7b\u578b\u5b89\u5168\u68c0\u67e5\uff0c\u800c\u5bf9\u540e\u8005\u53ea\u80fd\u8fdb\u884c\u5b57\u7b26\u66ff\u6362\uff0c\u6ca1\u6709\u7c7b\u578b", "\n\u5b89\u5168\u68c0\u67e5\u3002\u800c\u4e14\u5b57\u7b26\u66ff\u6362\u53ef\u80fd\u4f1a\u5e26\u6765\u6599\u60f3\u4e0d\u5230\u7684\u8fb9\u754c\u6548\u5e94\u3002", "\n\u6709\u4e9b\u96c6\u6210\u5316\u5de5\u5177\u53ef\u4ee5\u5bf9const\u5e38\u91cf\u8fdb\u884c\u8c03\u8bd5\uff0c \u4f46\u4e0d\u80fd\u5bf9\u5b8f\u91cf\u8fdb\u884c\u8c03\u8bd5\u3002", "\n6\uff0eC++\u4e2d\u5f15\u7528\u4e0e\u6307\u9488\u7684\u533a\u522b\uff1b", "\n\u7b54\uff1a1 \u5f15\u7528\u5b9e\u9645\u4e0a\u662f\u6240\u5f15\u7528\u7684\u5bf9\u8c61\u6216\u53d8\u91cf\u7684\u522b\u540d\uff0c\u800c\u6307\u9488\u662f\u5305\u542b\u6240\u6307\u5411\u5bf9\u8c61\u6216\u53d8\u91cf\u7684\u5730\u5740\u7684\u53d8\u91cf\u3002", "\n2 \u5f15\u7528\u5728\u5b9a\u4e49\u65f6\u5fc5\u987b\u521d\u59cb\u5316\uff0c\u800c\u6307\u9488\u5728\u5b9a\u4e49\u65f6\u4e0d\u521d\u59cb\u5316\u3002", "\n3 \u4e0d\u53ef\u4ee5\u6709\u52aaNULL\u7684\u5f15\u7528\uff0c\u800c\u53ef\u4ee5\u6709\u6307\u5411NULL\u7684\u6307\u9488\u3002", "\n4 \u5f15\u7528\u5728\u521d\u59cb\u5316\u540e\u4e0d\u53ef\u4ee5\u6539\u53d8\u5f15\u7528\u5173\u7cfb\uff0c\u800c\u6307\u9488\u53ef\u4ee5\u968f\u65f6\u6307\u5411\u5176\u4ed6\u5bf9\u8c61\uff08\u975econst\u6307\u9488\uff09\u3002", "\n7\uff0eC++\u4e2dvirtual\u4e0einline\u7684\u542b\u4e49\u5206\u522b\u662f\u4ec0\u4e48\uff1f", "\n\u7b54\uff1a\u5728\u57fa\u7c7b\u6210\u5458\u51fd\u6570\u7684\u58f0\u660e\u524d\u52a0\u4e0avirtual\u5173\u952e\u5b57\uff0c\u610f\u5473\u7740\u5c06\u8be5\u6210\u5458\u51fd\u6570\u58f0\u660e\u4e3a\u865a\u51fd\u6570\u3002", "\ninline\u4e0e\u51fd\u6570\u7684\u5b9a\u4e49\u4f53\u653e\u5728\u4e00\u8d77\uff0c\u4f7f\u8be5\u51fd\u6570\u79f0\u4e3a\u5185\u8054\u3002inline\u662f\u4e00\u79cd\u7528\u4e8e\u5b9e\u73b0\u7684\u5173\u952e\u5b57\uff0c\u800c\u4e0d\u662f\u7528\u4e8e\u58f0\u660e\u7684\u5173\u952e\u5b57\u3002", "\n\u865a\u51fd\u6570\u7684\u7279\u70b9\uff1b\u5982\u679c\u5e0c\u671b\u6d3e\u751f\u7c7b\u80fd\u591f\u91cd\u65b0\u5b9a\u4e49\u57fa\u7c7b\u7684\u65b9\u6cd5\uff0c\u5219\u5728\u57fa\u7c7b\u4e2d\u5c06\u8be5\u65b9\u6cd5\u5b9a\u4e49\u4e3a\u865a\u65b9\u6cd5\uff0c\u8fd9\u6837\u53ef\u4ee5\u542f\u7528\u52a8\u6001\u8054\u7f16\u3002", "\n\u5185\u8054\u51fd\u6570\u7684\u7279\u70b9\uff1b\u4f7f\u7528\u5185\u8054\u51fd\u6570\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u63d0\u9ad8\u51fd\u6570\u7684\u8fd0\u884c\u6548\u7387\u3002\u5185\u8054\u51fd\u6570\u4f53\u7684\u4ee3\u7801\u4e0d\u80fd\u8fc7\u957f\uff0c\u56e0\u4e3a\u5185\u8054\u51fd\u6570\u7701\u53bb\u8c03\u7528\u51fd\u6570", "\n\u7684\u65f6\u95f4\u662f\u4ee5\u4ee3\u7801\u81a8\u80c0\u4e3a\u4ee3\u4ef7\u7684\u3002\u5185\u8054\u51fd\u6570\u4e0d\u80fd\u5305\u542b\u5faa\u73af\u8bed\u53e5\uff0c\u56e0\u4e3a\u6267\u884c\u5faa\u73af\u8bed\u53e5\u8981\u6bd4\u8c03\u7528\u51fd\u6570\u7684\u5f00\u9500\u5927\u3002", "\n\u4e00\u4e2a\u51fd\u6570\u80fd\u5426\u5373\u662f\u865a\u51fd\u6570\u53c8\u662f\u5185\u8054\u51fd\u6570\uff1f", "\n8\uff0e\u4ee5\u4e0b\u5173\u952e\u5b57\u7684\u542b\u4e49\u4e0e\u7528\u6cd5\uff1a", "\nextern\uff0cextern \u201cC\u201d\uff0cstatic\uff0cexplicit\uff0cregister\uff0c#undef\uff0c#ifndef", "\n9\uff0e\u4ec0\u4e48\u662f\u51fd\u6570\u91cd\u8f7d\u4e0e\u8986\u76d6\uff1f", "\n\u4e3a\u4ec0\u4e48C\u4e0d\u652f\u6301\u51fd\u6570\u91cd\u8f7d\uff1f", "\n\u4e3a\u4ec0\u4e48C++\u80fd\u652f\u6301\u51fd\u6570\u91cd\u8f7d\uff1f", "\n10\uff0eVC\u4e2d\uff0c\u7f16\u8bd1\u5de5\u5177\u6761\u5185\u7684Debug\u4e0eRelease\u9009\u9879\u662f\u4ec0\u4e48\u542b\u4e49\uff1f", "\n11\uff0e\u7f16\u5199my_memcpy\u51fd\u6570\uff0c\u5b9e\u73b0\u4e0e\u5e93\u51fd\u6570memcpy\u7c7b\u4f3c\u7684\u529f\u80fd\uff0c\u4e0d\u80fd\u4f7f\u7528\u4efb\u4f55\u5e93\u51fd\u6570\uff1b", "\nvoid* mymemcpy(void* pvTo, const char* pvFrom, size_t size)", "\n{", "\nassert((dest != NULL) && (src != NULL));", "\nbyte* psTo = (byte*)pvTo;", "\nbyte* psFrom = (byte*)pvFrom;", "\nwhile (size\u2013 > 0)", "\n{", "\n*psTo++ = *psFrom++;", "\n}", "\nreturn pvTo;", "\n}", "\n12\uff0e\u7f16\u5199my_strcpy\u51fd\u6570\uff0c\u5b9e\u73b0\u4e0e\u5e93\u51fd\u6570strcpy\u7c7b\u4f3c\u7684\u529f\u80fd\uff0c\u4e0d\u80fd\u4f7f\u7528\u4efb\u4f55\u5e93\u51fd\u6570\uff1b", "\n\u7b54\uff1achar* my_strcpy(char* strdest, const char* strsrc)", "\n{", "\nassert(strdest != NULL) && (strsrc != NULL))", "\nchar* address = strdest;", "\nwhile((*strdest++ = *strsrc++) != NULL)", "\nreturn address;", "\n}", "13\uff0e\u7f16\u5199gbk_strlen\u51fd\u6570\uff0c\u8ba1\u7b97\u542b\u6709\u6c49\u5b57\u7684\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff0c\u6c49\u5b57\u4f5c\u4e3a\u4e00\u4e2a\u5b57\u7b26\u5904\u7406\uff1b", "\n\u5df2\u77e5\uff1a\u6c49\u5b57\u7f16\u7801\u4e3a\u53cc\u5b57\u8282\uff0c\u5176\u4e2d\u9996\u5b57\u8282<0\uff0c\u5c3e\u5b57\u8282\u57280~63\u4ee5\u5916\uff1b\uff08\u5982\u679c\u4e00\u4e2a\u5b57\u8282\u662f-128~127\uff09", "\n14\uff0e\u51fd\u6570assert\u7684\u7528\u6cd5?", "\n\u7b54\uff1a\u65ad\u8a00assert\u662f\u4ec5\u5728debug\u7248\u672c\u8d77\u4f5c\u7528\u7684\u5b8f\uff0c\u7528\u4e8e\u68c0\u67e5\u201c\u4e0d\u5e94\u8be5\u201c\u53d1\u751f\u7684\u60c5\u51b5\u3002\u7a0b\u5e8f\u5458\u53ef\u4ee5\u628aassert\u770b\u6210\u4e00\u4e2a", "\n\u5728\u4efb\u4f55\u7cfb\u7edf\u72b6\u6001\u4e0b\u90fd\u53ef\u4ee5\u5b89\u5168\u4f7f\u7528\u7684\u65e0\u5bb3\u6d4b\u8bd5\u624b\u6bb5\u3002", "\n15\uff0e\u4e3a\u4ec0\u4e48\u5728\u5934\u6587\u4ef6\u7684\u6700\u524d\u9762\u90fd\u4f1a\u770b\u5230\u8fd9\u6837\u7684\u4ee3\u7801\uff1a", "\n#ifndef _STDIO_H_", "\n#define _STDIO_H_", "\n16\uff0e\u4e3a\u4ec0\u4e48\u6570\u7ec4\u540d\u4f5c\u4e3a\u53c2\u6570\uff0c\u4f1a\u6539\u53d8\u6570\u7ec4\u7684\u5185\u5bb9\uff0c\u800c\u5176\u5b83\u7c7b\u578b\u5982int\u5374\u4e0d\u4f1a\u6539\u53d8\u53d8\u91cf\u7684\u503c\uff1f", "\n\u7b54\uff1a\u5f53\u6570\u7ec4\u540d\u4f5c\u4e3a\u53c2\u6570\u65f6\uff0c\u4f20\u9012\u7684\u5b9e\u9645\u4e0a\u662f\u5730\u5740\u3002\u800c\u5176\u4ed6\u7c7b\u578b\u5982int\u4f5c\u4e3a\u53c2\u6570\u65f6\uff0c\u7531\u4e8e\u51fd\u6570\u53c2\u6570\u503c\u5b9e\u8d28\u4e0a\u662f\u5b9e\u53c2\u7684\u4e00\u4efd\u62f7\u8d1d\uff0c\u88ab\u8c03", "\n\u51fd\u6570\u5185\u90e8\u5bf9\u5f62\u53c2\u7684\u6539\u53d8\u5e76\u4e0d\u5f71\u54cd\u5b9e\u53c2\u7684\u503c\u3002", "\n1\uff0e\u5b9e\u73b0\u53cc\u5411\u94fe\u8868\u5220\u9664\u4e00\u4e2a\u8282\u70b9P\uff0c\u5728\u8282\u70b9P\u540e\u63d2\u5165\u4e00\u4e2a\u8282\u70b9\uff0c\u5199\u51fa\u8fd9\u4e24\u4e2a\u51fd\u6570\u3002", "\n2\uff0e\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u5c06\u5176\u4e2d\u7684\\t\u90fd\u8f6c\u6362\u62104\u4e2a\u7a7a\u683c\u3002", "\n3\uff0eWindows\u7a0b\u5e8f\u7684\u5165\u53e3\u662f\u54ea\u91cc\uff1f\u5199\u51faWindows\u6d88\u606f\u673a\u5236\u7684\u6d41\u7a0b\u3002", "\n4\uff0e\u5982\u4f55\u5b9a\u4e49\u548c\u5b9e\u73b0\u4e00\u4e2a\u7c7b\u7684\u6210\u5458\u51fd\u6570\u4e3a\u56de\u8c03\u51fd\u6570\uff1f", "\n5\uff0eC++\u91cc\u9762\u662f\u4e0d\u662f\u6240\u6709\u7684\u52a8\u4f5c\u90fd\u662fmain()\u5f15\u8d77\u7684\uff1f\u5982\u679c\u4e0d\u662f\uff0c\u8bf7\u4e3e\u4f8b\u3002", "\n6\uff0eC++\u91cc\u9762\u5982\u4f55\u58f0\u660econst void f(void)\u51fd\u6570\u4e3aC\u7a0b\u5e8f\u4e2d\u7684\u5e93\u51fd\u6570\uff1f", "\n7\uff0e\u4e0b\u5217\u54ea\u4e24\u4e2a\u662f\u7b49\u540c\u7684", "\nint b;", "\nA const int* a = &b;", "\nB const* int a = &b;", "\nC const int* const a = &b;", "\nD int const* const a = &b;", "\n8\uff0e\u5185\u8054\u51fd\u6570\u5728\u7f16\u8bd1\u65f6\u662f\u5426\u505a\u53c2\u6570\u7c7b\u578b\u68c0\u67e5\uff1f", "\nvoid g(base & b){", "\nb.play;", "\n}", "\nvoid main(){", "\nson s;", "\ng(s);", "\nreturn;", "\n}", "\n3\u3001WinMain", "\nwhile( (bRet = GetMessage( &msg, NULL, 0, 0 )) != 0)", "\n{", "\nif (bRet == -1)", "\n{", "\n// handle the error and possibly exit", "\n}", "\nelse", "\n{", "\nTranslateMessage(&msg);", "\nDispatchMessage(&msg);", "\n}", "\n}", "MSRA Interview Written Exam\uff08December 2003\uff0cTime\uff1a2.5 Hours\uff09", "1\u5199\u51fa\u4e0b\u5217\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002", "\n(1)\u5192\u6ce1\u6392\u5e8f\uff1b", "\n(2)\u9009\u62e9\u6392\u5e8f\uff1b", "\n(3)\u63d2\u5165\u6392\u5e8f\uff1b", "\n(4)\u5feb\u901f\u6392\u5e8f\uff1b", "\n(5)\u5806\u6392\u5e8f\uff1b", "\n(6)\u5f52\u5e76\u6392\u5e8f\uff1b", "2\u5199\u51fa\u4e0b\u5217\u7a0b\u5e8f\u5728X86\u4e0a\u7684\u8fd0\u884c\u7ed3\u679c\u3002", "struct mybitfields", "\n{", "\nunsigned short a : 4;", "\nunsigned short b : 5;", "\nunsigned short c : 7;", "\n}test", "void main(void)", "\n{", "\nint i;", "\ntest.a=2;", "\ntest.b=3;", "\ntest.c=0;", "i=*((short *)&test);", "\nprintf(\u201c%d\\n\u201d,i);", "\n}", "3\u5199\u51fa\u4e0b\u5217\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u3002", "unsigned int i=3;", "\ncout<<i * -1;", "4\u5199\u51fa\u4e0b\u5217\u7a0b\u5e8f\u6240\u6709\u53ef\u80fd\u7684\u8fd0\u884c\u7ed3\u679c\u3002", "int a;", "\nint b;", "\nint c;", "void F1()", "\n{", "\nb=a*2;", "\na=b;", "\n}", "void F2()", "\n{", "\nc=a+1;", "\na=c;", "\n}", "main()", "\n{", "\na=5;", "\n//Start F1,F2 in parallel", "\nF1(); F2();", "\nprintf(\u201ca=%d\\n\u201d,a);", "\n}"], "title": "C/C++\u7b14\u8bd5\u9898"},
{"contents": ["1\u3001\u00a0 \u7b80\u5355\u63cf\u8ff0\u5305\u548cdll\u5f02\u540c", "\u7b54\uff1aDLL\uff08\u52a8\u6001\u94fe\u63a5\u5e93\uff09\u662f\u7ecf\u8fc7\u7f16\u8bd1\u7684\u4ee3\u7801\u6a21\u5757\uff0c\u5b83\u548c\u53ef\u6267\u884c\u6587\u4ef6\u5171\u540c\u5de5\u4f5c\uff0c\u4e3a\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u529f\u80fd\u3002\u7a0b\u5e8f\u5305\u662f\u7528\u4e8eC++Builder\u5e94\u7528\u7a0b\u5e8f\u3001IDE\u6216\u662f\u4e8c\u8005\u540c\u65f6\u4f7f\u7528\u7684\u7279\u6b8aDLL\u3002\u6709\u4e24\u79cd\u7a0b\u5e8f\u5305\uff1a\u8fd0\u884c\u65f6\u7a0b\u5e8f\u5305\u548c\u8bbe\u8ba1\u65f6\u7a0b\u5e8f\u5305\u3002\u8fd0\u884c\u65f6\u7a0b\u5e8f\u5305\u63d0\u4f9b\u7a0b\u5e8f\u6267\u884c\u65f6\u7684\u529f\u80fd\uff0c\u8bbe\u8ba1\u65f6\u7a0b\u5e8f\u5305\u6269\u5c55\u4e86IDE\u7684\u529f\u80fd\u3002", "\u4f55\u65f6\u4f7f\u7528\u7a0b\u5e8f\u5305\u548cDLL", "\u5bf9\u4e8e\u5927\u591a\u6570C++Builder\u5e94\u7528\u7a0b\u5e8f\uff0c\u7a0b\u5e8f\u5305\u63d0\u4f9b\u4e86\u66f4\u5927\u7684\u7075\u6d3b\u6027\uff0c\u4e5f\u6bd4DLL\u66f4\u5bb9\u6613\u521b\u5efa\u3002\u7136\u800c\uff0c\u5728\u51e0\u79cd\u60c5\u51b5\u4e0b\uff0cDLL\u6bd4\u7a0b\u5e8f\u5305\u66f4\u9002\u5408\u5de5\u7a0b\u7684\u9700\u8981\uff1a", "\u00b7 \u7a0b\u5e8f\u4ee3\u7801\u6a21\u5757\u4ece\u975eC++Builder\u5e94\u7528\u7a0b\u5e8f\u8c03\u7528\u3002", "\u00b7 \u8981\u6269\u5145Web\u670d\u52a1\u5668\u7684\u529f\u80fd\u3002", "\u00b7 \u8981\u521b\u5efa\u7ed9\u7b2c\u4e09\u65b9\u5f00\u53d1\u4eba\u5458\u4f7f\u7528\u7684\u4ee3\u7801\u6a21\u5757\u3002", "\u00b7 \u5de5\u7a0b\u662fOLE\u5bb9\u5668\u3002", "2\u3001\u00a0 \u7b80\u8ff0parent\u548cowner\u7684\u533a\u522b", "\u7b54\uff1aParent\u5c5e\u6027\u662f\u6307\u6784\u4ef6\u7684\u5305\u5bb9\u5668\uff0c\u6784\u4ef6\u53ea\u80fd\u5728\u6b64\u8303\u56f4\u5185\u663e\u793a\u548c\u79fb\u52a8\u3002\u4e3e\u4f8b\u5b50\u5982\u4e0b\uff1a", "(1)\u5728Form1\u7684\u7a97\u4f53\u4e0a\uff0c\u653e\u4e00\u4e2aPanel1,\u5e76\u5c06Panel1\u62c9\u5927\uff0c", "(2)\u5728Panel1\u4e0a\u653e\u4e00Button1\uff1b", "(3)\u5728Form1\u4e0a\u653e\u4e00Button2\u3002", "\u73b0\u5728\u5982\u679c\u79fb\u52a8Panel1,\u5219Button1\u968f\u7740Panel1\u79fb\u52a8\uff0c\u8fd9\u662f\u56e0\u4e3aButton1\u7684Parent\u662fPanel1\u3002\u73b0\u5728\u5c06Button2\u79fb\u5230Panel1\u4e0a\uff0c\u518d\u6b21\u79fb\u52a8Panel1,Button2\u5e76\u4e0d\u8ddf\u7740\u79fb\u52a8\uff0c\u8fd9\u662f\u56e0\u4e3aButton2\u7684Parent\u662fForm1\u3002\u9664\u5728\u7a97\u4f53\u8bbe\u8ba1\u4e2d\uff0c\u5e94\u6ce8\u610f\u6784\u4ef6\u7684Parent\u662f\u8c01\u5916\uff0c\u5728\u52a8\u6001\u521b\u5efa\u6784\u4ef6\u65f6\uff0c\u4e5f\u5e94\u6307\u51fa\u6784\u4ef6\u7684Parent\uff0c\u5982\u5728\u4e0a\u4f8b\u4e2d\u7ee7\u7eed\u64cd\u4f5c\uff1a", "1)Procedure\u00a0\u00a0 Tform1.Button2click(Sender:Tobjet);", "2)Var", "3)\u00a0\u00a0 Button:Tbutton;", "4)\u00a0\u00a0 Begin", "5)\u00a0\u00a0 Button:Tbutton.cerate(self);", "6)\u00a0\u00a0 Button.parent=panel1;", "7)\u00a0\u00a0 Button.lleft=0;", "8)\u00a0\u00a0 Button.top=0;", "9)\u00a0\u00a0 Button.caption:=\u2019OK\u2019;", "10)\u00a0\u00a0 End\uff1b", "\u5f53\u6309Button2\u65f6\uff0c\u5c06\u5728Panel1\u4e0a\u521b\u5efa\u4e00\u4e2aButton\uff0c\u800c\u5982\u679c\u628a\u7b2c6\u53e5\u6539\u4e3aButton.parent:=self\uff1b\u6309Button2\u65f6\uff0c\u5c06\u5728Form1\u4e0a\u521b\u5efa\u4e00\u4e2aButton\u4e86\u3002\u5982\u679c\u5c06\u7b2c6\u53e5\u5220\u9664\uff0c\u6309Button2\u65f6\uff0c\u4ec0\u4e48\u90fd\u4e0d\u4f1a\u53d1\u751f\uff0c\u8fd9\u662f\u56e0\u4e3a\u521b\u5efa\u65b9\u6cd5\u65e0\u6cd5\u77e5\u9053\u5e94\u5728\u54ea\u91cc\u663e\u793a\u6784\u4ef6\u3002", "Owner\u5c5e\u6027\u662f\u6307\u6784\u4ef6\u7684\u6240\u6709\u8005\uff0c\u5b83\u8d1f\u8d23\u6784\u4ef6\u7684\u521b\u5efa\u548c\u91ca\u653e\u3002\u5982\u5728\u4e0a\u4f8b\u4e2d\uff0c\u7cfb\u7edf\u9ed8\u8ba4\u7a97\u4f53\u4e0a\u6240\u6709\u6784\u4ef6\u7684\u6240\u6709\u8005\u662f\u7a97\u4f53\uff0c\u800c\u7a97\u4f53\u7684\u6240\u6709\u8005\u662fApplication\u3002\u987a\u4fbf\u6307\u51fa\uff0ccreate\u65b9\u6cd5\u5e94\u5e26\u6709\u8868\u793a\u6784\u4ef6\u6240\u6709\u8005\u7684\u53c2\u6570\uff0c\u5982\u5728\u4e0a\u4f8b\u4e2d\uff0c\u6784\u4ef6\u6240\u6709\u8005\u662f\u7a97\u4f53\uff0c\u5373self\u3002", "Parent\u5c5e\u6027\u548cOwner\u5c5e\u6027\u662f\u8fd0\u884c\u9636\u6bb5\u7684\u5c5e\u6027\uff0c\u53ea\u80fd\u5728\u8fd0\u884c\u9636\u6bb5\uff0c\u901a\u8fc7\u4ee3\u7801\u8bbe\u7f6e\u3002", "3\u3001\u00a0 \u7b80\u8ff0delphi\u662f\u5982\u4f55\u5c01\u88c5windows\u6d88\u606f\u673a\u5236", "\u7b54\uff1aDelphi\u7684\u6d88\u606f\u5904\u7406\u6d41\u7a0b", "TApplication.OnMessage\u53ea\u5728\u5e94\u7528\u7a0b\u5e8f\u7684\u6d88\u606f\u961f\u5217\u63a5\u6536\u5230\u4e00\u4e2a\u6d88\u606f\u65f6\u624d\u88ab\u89e6\u53d1\u3002\u4e00\u822c\u5e94\u7528\u7a0b\u5e8f\u63a5\u6536\u5230\u7684\u6d88\u606f\u662f\u4e0e\u7a97\u53e3\u7ba1\u7406\u6709\u5173\u7684\u6d88\u606f(\u4f8b\u5982WM_PAINT\u548cWM_SIZE),\u6216\u7531PostMessage()\u3001PostAppMessage()\u6216BroadcastSystemMessage()\u7b49API\u51fd\u6570\u53d1\u9001\u51fa\u7684\u6d88\u606f\u3002\u4f46\u662f\uff0c\u7531\u4e8eWindows\u6216SendMessage()\u6709\u53ef\u80fd\u4f1a\u7ed5\u8fc7\u6d88\u606f\u961f\u5217\u76f4\u63a5\u5c06\u6d88\u606f\u53d1\u9001\u7ed9\u7a97\u53e3\u8fc7\u7a0b\u3002\u5f53\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u65f6\uff0cTApplication.OnMessage\u5c31\u4e0d\u4f1a\u88ab\u89e6\u53d1\u3002", "VCL\u7684\u6d88\u606f\u7cfb\u7edf\uff1a", "VCL\u5b9a\u4e49\u4e86\u6d88\u606f\u5206\u53d1\u7cfb\u7edf\uff0c\u8be5\u7cfb\u7edf\u5c06\u6240\u6709\u7684Windows\u6d88\u606f\u4f20\u7ed9\u76f8\u5e94\u7684\u5bf9\u8c61\uff0c\u7531\u5404\u5bf9\u8c61\u7684\u6d88\u606f\u5206\u53d1\u7cfb\u7edf\u8fdb\u884c\u5904\u7406\u3002", "VCL\u5bf9\u8c61\u7528\u4e8e\u63a5\u53d7\u6d88\u606f\u7684\u65b9\u6cd5\u53eb\u505aMainWndProc()\u3002\u901a\u8fc7MainWndPorc()\u53ef\u4ee5\u5bf9\u6d88\u606f\u8fdb\u884c\u4efb\u4f55\u7684\u5904\u7406\u3002\u4e0d\u8fc7\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u5f88\u5c11\u76f4\u63a5\u8c03\u7528MainWndProc()\u6765\u5904\u7406\u6d88\u606f\uff0c\u9664\u975e\u4e0d\u60f3\u8ba9\u6d88\u606f\u901a\u8fc7VCL\u7684\u6d88\u606f\u7cfb\u7edf\u5206\u53d1\u3002", "\u4eceMainWndProc()\u53cd\u56de\u540e\uff0c\u6d88\u606f\u88ab\u4f20\u9012\u7ed9\u5bf9\u8c61\u7684WndProc\uff08\uff09\u7684\u65b9\u6cd5\uff0c\u8fd9\u5c31\u662f\u8be5\u5bf9\u8c61\u7684\u7a97\u4f53", "\u8fc7\u7a0b\uff0c\u7136\u540e\u8fdb\u5165VCL\u7684\u5206\u53d1\u673a\u6784\u3002\u5206\u53d1\u673a\u6784\u4f7f\u7528Disptch()\u65b9\u6cd5\u628a\u6d88\u606f\u5206\u53d1\u7ed9\u4e00\u4e2a\u6d88\u606f\u53e5\u67c4\u3002", "\u6d88\u606f\u5230\u8fbe\u8be5\u6d88\u606f\u7684\u5904\u7406\u53e5\u67c4\uff08Handler\uff09\u540e\uff0c\u7ecf\u8fc7\u8be5\u53e5\u67c4\u7684\u5904\u7406\uff0c\u8fd9\u4e2a\u6d88\u606f\u5904\u7406\u8fc7\u7a0b\u5c31\u7ed3\u675f", "\u4e86\u3002\u4e8b\u4ef6\u2013MainWndProc\u2014WndProc\u2014-Dispatch\u2014-Handle", "4\u3001\u00a0 \u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0bdelphi\u6a21\u5f0f\u4e0b\u4e09\u5c42\u5f00\u53d1", "\u7b54\uff1aRemote Data Module\u670d\u52a1\u5668", "\u6570\u636e\u5e93", "Query\u7ec4\u4ef6", "DataSetProvider\u7ec4\u4ef6", "\u5ba2\u6237\u7aef\u5e94\u7528\u7a0b\u5e8f", "DCOM\u7ec4\u4ef6", "ClientDataSet\u7ec4\u4ef6", "\u5b83\u4e0d\u901a\u8fc7DataSetProvider\u7ec4\u4ef6\u6765\u4f20\u9012\u6570\u636e\uff0c\u800c\u662f\u901a\u8fc7Remote Data Module\u670d\u52a1\u5668\u6240\u63d0\u4f9b\u7684Interface\u6765\u8fdb\u884c\u6570\u636e\u7684\u4f20\u9012\u3002\u8fd9\u6837\u5c31\u4f7f\u5f97\u5e94\u7528\u7a0b\u5e8f\u5b8c\u5168\u4e0e\u6570\u636e\u5e93\u670d\u52a1\u5668\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\uff0c\u5bf9\u6574\u4e2a\u7cfb\u7edf\u7684\u5347\u7ea7\u4e0e\u7ef4\u62a4\u90fd\u5e26\u6765\u6781\u5927\u7684\u597d\u5904\u3002", "\u5bf9\u4e8e\u96c6\u5408\u6570\u636e\uff0c\u7531\u4e8eInterface\u7684\u8fd4\u56de\u503c\u53ef\u4ee5\u662fOLEVarient\u7c7b\u578b\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u521b\u5efaClientDataSet\u6765\u8fdb\u884c\u96c6\u5408\u6570\u636e\u7684\u4f20\u9012\u3002", "5\u3001\u00a0 \u8c08\u4e00\u8c08\u4f60\u5bf9vcl framework\u7684\u7406\u89e3", "\u7b54\uff1aVCL Framework\u5b9e\u73b0\u4e86Windows\u6d88\u606f\u673a\u5236\u7684\u5b8c\u7f8e\u5c01\u88c5\u3002Dispatch\u5206\u53d1\u6d88\u606f\u5206\u4e3a\u4e24\u79cd\u60c5\u5f62\uff1a", "1.\u6d88\u606f\u88abdispatch\u5728\u865a\u62df\u65b9\u53d1\u8868\u4e2d\u627e\u5230\u5e76\u8c03\u7528\uff1b", "2.\u5982\u679c\u627e\u4e0d\u5230\u7684\u8bdd\uff0c\u5c31\u8c03\u7528TObject\u7684defaultHandle\u865a\u62df\u65b9\u6cd5\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u6539\u5199\u8fd9\u4e2a\u9ed8\u8ba4\u8c03\u7528\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5b83\u58f0\u660e\u7684\u65f6\u5019\u662fVirtual\u7684\u3002", "6\u3001\u00a0 \u7b80\u5355\u8c08\u4e00\u4e0b\u4f60\u5bf9delphi\u63a5\u53e3\u673a\u5236\u7684\u7406\u89e3", "\u7b54\uff1a", "1)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u4e0d\u63a5\u53e3\u7684\u5f15\u7528\u8ba1\u6570\u7ba1\u7406", "\u63a5\u53e3\u6307\u9488\u603b\u662f\u88ab\u521d\u59cb\u5316\u4e3a nil", "\u63a5\u53e3\u6307\u9488\u8d4b\u503c\u4e3a\u5bf9\u8c61", "\u63a5\u53e3\u6307\u9488\u8d4b\u503c\u4e3a\u63a5\u53e3\u6307\u9488", "\u63a5\u53e3\u5f15\u7528\u8ba1\u6570\u4f7f\u7528\u89c4\u5219\u5c0f\u7ed3", "2)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u63a5\u53e3\u5bf9\u8c61\u7684\u7f16\u8bd1\u5668\u5b9e\u73b0", "\u63a5\u53e3\u5bf9\u8c61\u7684\u5185\u5b58\u7a7a\u95f4", "\u63a5\u53e3\u8df3\u8f6c\u8868", "\u5bf9\u8c61\u5185\u5b58\u7a7a\u95f4\u4e2d\u63a5\u53e3\u8df3\u8f6c\u6307\u9488\u7684\u521d\u59cb\u5316", "3)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 implements \u7684\u5b9e\u73b0", "\u4ee5\u63a5\u53e3\u6210\u5458\u53d8\u91cf\u5b9e\u73b0 implements", "\u4ee5\u5bf9\u8c61\u6210\u5458\u53d8\u91cf\u5b9e\u73b0 implements", "7\u3001\u00a0 ASP\u00a0\u7684\u51e0\u5927\u5185\u7f6e\u5bf9\u8c61\u3002", "\u7b54\uff1a\u5185\u7f6e\u5bf9\u8c61\uff1aSession\uff0cServer\uff0cResponse\uff0cRequest\uff0cObjectContent\uff0cApplication", "8\u3001\u00a0 \u8c08\u8c08\u4f60\u4ee5\u524d\u6240\u505a\u9879\u76ee\u5bf9\u6587\u4ef6\u548c\u56fe\u7247\u7684\u4e0a\u4f20\u548c\u663e\u793a\u6240\u7528\u7684\u65b9\u6cd5\u3002", "\u7b54\uff1a\u4e0a\u4f20\u63a7\u4ef6", "9\u3001\u00a0 \u8c08\u4f60\u5bf9ASP\u7684\u7406\u89e3\u3002", "\u7b54\uff1a\u4e0d\u4f1a\uff0c\u6ca1\u7406\u89e3", "10\u3001\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 web\u5f00\u53d1\u5ba2\u6237\u7aef\u7a0b\u5e8f\u548c\u670d\u52a1\u5668\u7aef\u7a0b\u5e8f\u7684\u533a\u522b", "\u7b54\uff1a\u53ea\u9700\u8981\u5f00\u53d1\u670d\u52a1\u5668\u7aef\u554a\uff0c\u5ba2\u6237\u7aef\u53ea\u8981\u6709\u4e2a\u6d4f\u89c8\u5668\u5c31\u884c\u4e86"], "title": "\u5357\u4eacTQ\u516c\u53f8\u9762\u8bd5\u9898"},
{"contents": ["\u53c2\u8003\u7b54\u6848\uff1a\u9632\u6b62\u5934\u6587\u4ef6\u91cd\u590d\u5b9a\u4e49\u3002 "], "title": "\u5934\u6587\u4ef6\u4e2d\u7684 ifndef/define/endif \u5e72\u4ec0\u4e48\u7528\uff1f"},
{"contents": ["\u4f9d\u6b21\u6bd4\u8f83\u76f8\u90bb\u7684\u4e24\u4e2a\u6570\uff0c\u5c06\u5c0f\u6570\u653e\u5728\u524d\u9762\uff0c\u5927\u6570\u653e\u5728\u540e\u9762\uff0c\u76f4\u81f3\u6bd4\u8f83\u6700\u540e\u4e24\u4e2a\u6570\uff0c\u5c06\u5c0f\u6570\u653e\u524d\uff0c\u5927\u6570\u653e\u540e\u3002\u91cd\u590d\u4ee5\u4e0a\u8fc7\u7a0b\uff0c\u4ecd\u4ece\u7b2c\u4e00\u5bf9\u6570\u5f00\u59cb\u6bd4\u8f83\uff0c\u5c06\u5c0f\u6570\u653e\u524d\uff0c\u5927\u6570\u653e\u540e\uff0c\u4e00\u76f4\u6bd4\u8f83\u5230\u6700\u5927\u6570\t\u524d\u7684\u4e00\u5bf9\u76f8\u90bb\u6570\uff0c\u5c06\u5c0f\u6570\u653e\u524d\uff0c\u5927\u6570\u653e\u540e\uff0c\u7b2c\u4e8c\u8d9f\u7ed3\u675f\uff0c\u5728\u5012\u6570\u7b2c\u4e8c\u4e2a\u6570\u4e2d\u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u6700\u5927\u6570\t\u3002\u5982\u6b64\u4e0b\u53bb\uff0c\u76f4\u81f3\u6700\u7ec8\u5b8c\u6210\u6392\u5e8f\u3002\u65f6\u95f4\u590d\u6742\u5ea6\uff08n^2\uff09;"], "title": "\u63cf\u8ff0\u5192\u6ce1\u6cd5\u6392\u5e8f\uff1f"},
{"contents": ["\u53c2\u8003\u7b54\u6848\uff1a\u961f\u5217\u5148\u8fdb\u5148\u51fa\uff0c\u6808\u540e\u8fdb\u5148\u51fa\u3002 "], "title": "\u961f\u548c\u6808\u7684\u533a\u522b"},
{"contents": ["\u53c2\u8003\u7b54\u6848\uff1a", "\n    \u6784\u9020\u51fd\u6570\u53ef\u4ee5\u88ab\u91cd\u8f7d\uff1b", "\n    \u6790\u6784\u51fd\u6570\u4e0d\u53ef\u4ee5\u88ab\u91cd\u8f7d\uff08\u91cd\u8f7d\u7684\u5fc5\u8981\u6761\u4ef6\u662f\u53c2\u6570\u7684\u7c7b\u578b\u6216\u8005\u4e2a\u6570\u4e0d\u4e00\u6837\u6216\u8005\u987a\u5e8f\u4e0d\u4e00\u6837\uff0c\u65e0\u53c2\u5c31\u4e0d\u80fd\u91cd\u8f7d\uff09\uff1b"], "title": "\u6784\u9020\u51fd\u6570 \u548c\u6790\u6784\u51fd\u6570 \u662f\u5426\u53ef\u4ee5\u88ab\u91cd\u8f7d"},
{"contents": ["\u53c2\u8003\u7b54\u6848\uff1a\u4e3b\u8981\u662f\u4e24\u4e2a\uff1a", "\n          1. \u9690\u85cf\u5b9e\u73b0\u7ec6\u8282\uff0c\u4f7f\u5f97\u4ee3\u7801\u80fd\u591f\u6a21\u5757\u5316\uff1b\u6269\u5c55\u4ee3\u7801\u6a21\u5757\uff0c\u5b9e\u73b0\u4ee3\u7801\u91cd\u7528\uff1b", "\n          2. \u63a5\u53e3\u91cd\u7528\uff1a\u4e3a\u4e86\u7c7b\u5728\u7ee7\u627f\u548c\u6d3e\u751f\u7684\u65f6\u5019\uff0c\u4fdd\u8bc1\u4f7f\u7528\u5bb6\u65cf\u4e2d\u4efb\u4e00\u7c7b\u7684\u5b9e\u4f8b\u7684\u67d0\u4e00\u5c5e\u6027\u65f6\u7684\u6b63 \u786e\u8c03\u7528\u3002"], "title": "\u591a\u6001\u7684\u4f5c\u7528"},
{"contents": ["\u53c2\u8003\u7b54\u6848\uff1a", "\n\u2460\u7c7b\u91cc\u58f0\u660e\u865a\u51fd\u6570\u7684\u4f5c\u7528\u662f\u4e3a\u4e86\u80fd\u8ba9\u8fd9\u4e2a\u51fd\u6570\u5728\u5b83\u7684\u5b50\u7c7b\u91cc\u9762\u88ab\u8986\u76d6\uff0c\u8fd9\u6837\u7f16\u8bd1\u5668\u5c31\u53ef\u4ee5\u4f7f\u7528\u540e\u671f\u7ed1\u5b9a\u6765\u8fbe\u5230\u591a\u6001\u3002\u7eaf\u865a\u51fd\u6570\u63a5\u53e3\uff0c\u662f\u4e2a\u51fd\u6570\u7684\u58f0\u660e\u800c\u5df2\uff0c\u5b83\u8981\u7559\u5230\u5b50\u7c7b\u91cc\u9762\u53bb\u5b9e\u73b0\u3002", "\n\u2461\u865a\u51fd\u6570\u5728\u5b50\u7c7b\u91cc\u9762\u4e5f\u53ef\u4ee5\u4e0d\u91cd\u8f7d\uff0c\u4f46\u662f\u7eaf\u865a\u51fd\u6570\u5fc5\u987b\u5728\u5b50\u7c7b\u91cc\u9762\u53bb\u5b9e\u73b0\u3002\u901a\u5e38\uff0c\u5f88\u591a\u51fd\u6570\u52a0\u4e0avirtual\u4fee\u8f9e\uff0c\u867d\u7136\u727a\u7272\u6389\u4e00\u4e9b\u6027\u80fd\uff0c\u4f46\u662f\u589e\u52a0\u4e86\u9762\u5411\u5bf9\u8c61\u7684\u591a\u6001\u6027\uff0c\u53ef\u4ee5\u963b\u6b62\u7236\u7c7b\u91cc\u9762\u7684\u8fd9\u4e2a\u51fd\u6570\u5728\u5b50\u7c7b\u91cc\u88ab\u4fee\u6539\u5b9e\u73b0\uff1b", "\n\t \u2462\u865a\u51fd\u6570\u7684\u7c7b\u7ee7\u627f\u4e86\u63a5\u53e3\uff0c\u540c\u65f6\u4e5f\u7ee7\u627f\u4e86\u7236\u7c7b\u7684\u5b9e\u73b0\u3002\u7eaf\u865a\u51fd\u6570\u5173\u6ce8\u7684\u662f\u63a5\u53e3\u7684\u7edf\u4e00\u6027\uff0c\u5b9e\u73b0\u7531\u5b50\u7c7b\u5b8c\u6210\uff1b", "\n\t \u2463\u5e26\u7eaf\u865a\u51fd\u6570\u7684\u7c7b\u53eb\u505a\u865a\u57fa\u7c7b\u3002\u8fd9\u79cd\u57fa\u7c7b\u4e0d\u80fd\u76f4\u63a5\u58f0\u79f0\u5bf9\u8c61\uff0c\u53ea\u80fd\u88ab\u7ee7\u627f\uff0c\u5e76\u91cd\u5199\u5176\u865a\u51fd\u6570\u540e\u624d\u80fd\u4f7f\u7528\uff0c\u8fd9\u6837\u7684\u7c7b\u4e5f\u53eb\u62bd\u8c61\u7c7b\u3002"], "title": "\u865a\u51fd\u6570\u4e0e\u7eaf\u865a\u51fd\u6570\u7684\u533a\u522b\uff1f"},
{"contents": ["A:  int cale(int,int);", "\nint cale(const int,const int);", "\nB:  int get();", "\n    double get();", "\nC:  int* result(int*)", "\n    double* result(double*)", "\nD:  extern \u201cC\u201d int compute\uff08int*,int\uff09", "\nextern \u201cC\u201d double compute(double*,double)", "\n\u7b54\u6848\uff1a\u3010C\u3011"], "title": "\u4e0b\u5217\u51fd\u6570\u91cd\u8f7d\u58f0\u660e\u6b63\u786e\u7684\u662f\uff1a"},
{"contents": ["\u53c2\u8003\u7b54\u6848\uff1a", "\n\t\u4ece\u5b9a\u4e49\u4e0a\u6765\u8bf4\uff1a", "\n\t\u91cd\u8f7d\uff1a\u662f\u6307\u5141\u8bb8\u5b58\u5728\u591a\u4e2a\u540c\u540d\u51fd\u6570\uff0c\u800c\u8fd9\u4e9b\u51fd\u6570\u7684\u53c2\u6570\u8868\u4e0d\u540c\uff08\u6216\u8bb8\u53c2\u6570\u4e2a\u6570\u4e0d\u540c\uff0c\u6216\u8bb8\u53c2\u6570\u7c7b\u578b\u4e0d\u540c\uff0c\u6216\u8bb8\u4e24\u8005\u90fd\u4e0d\u540c\uff09\u3002", "\n\t\u91cd\u5199\uff1a\u662f\u6307\u5b50\u7c7b\u91cd\u65b0\u5b9a\u4e49\u7236\u7c7b\u865a\u51fd\u6570\u7684\u65b9\u6cd5\u3002", "\n\t\u4ece\u5b9e\u73b0\u539f\u7406\u4e0a\u6765\u8bf4\uff1a", "\n\t\u91cd\u8f7d\uff1a\u7f16\u8bd1\u5668\u6839\u636e\u51fd\u6570\u4e0d\u540c\u7684\u53c2\u6570\u8868\uff0c\u5bf9\u540c\u540d\u51fd\u6570\u7684\u540d\u79f0\u505a\u4fee\u9970\uff0c\u7136\u540e\u8fd9\u4e9b\u540c\u540d\u51fd\u6570\u5c31\u6210\u4e86\u4e0d\u540c\u7684\u51fd\u6570\uff08\u81f3\u5c11\u5bf9\u4e8e\u7f16\u8bd1\u5668\u6765\u8bf4\u662f\u8fd9\u6837\u7684\uff09\u3002\u5982\uff0c\u6709\u4e24\u4e2a\u540c\u540d\u51fd\u6570\uff1afunction func\t(p:integer):integer;\u548cfunction func(p:string):integer;\u3002\u90a3\u4e48\u7f16\u8bd1\u5668\u505a\u8fc7\u4fee\u9970\u540e\u7684\u51fd\u6570\u540d\t\u79f0\u53ef\u80fd\u662f\u8fd9\u6837\u7684\uff1aint_func\u3001str_func\u3002\u5bf9\u4e8e\u8fd9\u4e24\u4e2a\u51fd\u6570\u7684\u8c03\u7528\uff0c\u5728\u7f16\u8bd1\u5668\u95f4\u5c31\u5df2\u7ecf\u786e\u5b9a\u4e86\uff0c\u662f\t\u9759\u6001\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u4eec\u7684\u5730\u5740\u5728\u7f16\u8bd1\u671f\u5c31\u7ed1\u5b9a\u4e86\uff08\u65e9\u7ed1\u5b9a\uff09\uff0c\u56e0\u6b64\uff0c\u91cd\u8f7d\u548c\u591a\u6001\u65e0\u5173\uff01", "\n\t\t\u91cd\u5199\uff1a\u548c\u591a\u6001\u771f\u6b63\u76f8\u5173\u3002\u5f53\u5b50\u7c7b\u91cd\u65b0\u5b9a\u4e49\u4e86\u7236\u7c7b\u7684\u865a\u51fd\u6570\u540e\uff0c\u7236\u7c7b\u6307\u9488\u6839\u636e\u8d4b\u7ed9\u5b83\u7684\u4e0d\u540c\u7684\u5b50\u7c7b\u6307\u9488\uff0c\u52a8\u6001\u7684\u8c03\u7528\u5c5e\u4e8e\u5b50\u7c7b\u7684\u8be5\u51fd\u6570\uff0c\u8fd9\u6837\u7684\u51fd\u6570\u8c03\u7528\u5728\u7f16\u8bd1\u671f\u95f4\u662f\u65e0\u6cd5\u786e\u5b9a\u7684\uff08\u8c03\u7528\u7684\u5b50\u7c7b\u7684\t\u865a\u51fd\u6570\u7684\u5730\u5740\u65e0\u6cd5\u7ed9\u51fa\uff09\u3002\u56e0\u6b64\uff0c\u8fd9\u6837\u7684\u51fd\u6570\u5730\u5740\u662f\u5728\u8fd0\u884c\u671f\u7ed1\u5b9a\u7684\uff08\u665a\u7ed1\u5b9a\uff09\u3002 "], "title": "\u91cd\u8f7d\uff08overload)\u548c\u91cd\u5199(overried\uff0c\u6709\u7684\u4e66\u4e5f\u53eb\u505a\u201c\u8986\u76d6\u201d\uff09\u7684\u533a\u522b"},
{"contents": ["\u53c2\u8003\u7b54\u6848\uff1astatic\u5168\u5c40\u53d8\u91cf\u4e0e\u666e\u901a\u7684\u5168\u5c40\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u5168\u5c40\u53d8\u91cf\u53ea\u521d\u4f7f\u5316\u4e00\u6b21\uff0c\u9632\u6b62\u5728\u5176\u4ed6\u6587\u4ef6\u5355\u5143\u4e2d\u88ab\u5f15\u7528;", "\n                  static\u5c40\u90e8\u53d8\u91cf\u548c\u666e\u901a\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u5c40\u90e8\u53d8\u91cf\u53ea\u88ab\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u4e0b\u4e00\u6b21\u4f9d\u636e\u4e0a\u4e00\u6b21\u7ed3\u679c\u503c\uff1b", "\n                  static\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u51fd\u6570\u5728\u5185\u5b58\u4e2d\u53ea\u6709\u4e00\u4efd\uff0c\u666e\u901a\u51fd\u6570\u5728\u6bcf\u4e2a\u88ab\u8c03\u7528\u4e2d\u7ef4\u6301\u4e00\u4efd\u62f7\u8d1d"], "title": "static\u5168\u5c40\u53d8\u91cf\u4e0e\u666e\u901a\u7684\u5168\u5c40\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1fstatic\u5c40\u90e8\u53d8\u91cf\u548c\u666e\u901a\u5c40\u90e8 \u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1fstatic\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u6709\u4ec0\u4e48\u533a\u522b\uff1f"},
{"contents": ["1\u3001new \u662fc++\u4e2d\u7684\u64cd\u4f5c\u7b26\uff0cmalloc\u662fc \u4e2d\u7684\u4e00\u4e2a\u51fd\u6570", "\n          2\u3001new \u4e0d\u6b62\u662f\u5206\u914d\u5185\u5b58\uff0c\u800c\u4e14\u4f1a\u8c03\u7528\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u540c\u7406delete\u4f1a\u8c03\u7528\u7c7b\u7684\u6790\u6784\u51fd\u6570\uff0c\u800cmalloc\u5219\u53ea\u5206\u914d\u5185\u5b58\uff0c\u4e0d\u4f1a\u8fdb\u884c\u521d\u59cb\u5316\u7c7b\u6210\u5458\u7684\u5de5\u4f5c\uff0c\u540c\u6837free\u4e5f\u4e0d\u4f1a\u8c03\u7528\u6790\u6784\u51fd\u6570", "\n\t3\u3001\u5185\u5b58\u6cc4\u6f0f\u5bf9\u4e8emalloc\u6216\u8005new\u90fd\u53ef\u4ee5\u68c0\u67e5\u51fa\u6765\u7684\uff0c\u533a\u522b\u5728\u4e8enew\u53ef\u4ee5\u6307\u660e\u662f\u90a3\u4e2a\u6587\u4ef6\u7684\u90a3\u4e00\u884c\uff0c\t\t\u800cmalloc\u6ca1\u6709\u8fd9\u4e9b\u4fe1\u606f\u3002", "\n\t       4\u3001new \u548c malloc\u6548\u7387\u6bd4\u8f83", "\n\t             new\u53ef\u4ee5\u8ba4\u4e3a\u662fmalloc\u52a0\u6784\u9020\u51fd\u6570\u7684\u6267\u884c\u3002", "\n\t             new\u51fa\u6765\u7684\u6307\u9488\u662f\u76f4\u63a5\u5e26\u7c7b\u578b\u4fe1\u606f\u7684\u3002", "\n\t             \u800cmalloc\u8fd4\u56de\u7684\u90fd\u662fvoid\u6307\u9488"], "title": "\u4f7f\u7528new\u4e0emalloc\u5206\u914d\u5185\u5b58\u6709\u4ec0\u4e48\u533a\u522b\uff1f"},
{"contents": ["delete\u4f1a\u8c03\u7528\u5bf9\u8c61\u7684\u6790\u6784\u51fd\u6570\uff0cnew\u8c03\u7528\u6784\u9020\u51fd\u6570\u3002", "\n\tmalloc\u4e0efree\u662fC++/C\u8bed\u8a00\u7684\u6807\u51c6\u5e93\u51fd\u6570\uff0cnew/delete\u662fC++\u7684\u8fd0\u7b97\u7b26\u3002", "\n\t\u5b83\u4eec\u90fd\u53ef\u7528\u4e8e\u7533\u8bf7\u52a8\u6001\u5185\u5b58\u548c\u91ca\u653e\u5185\u5b58\u3002\u5bf9\u4e8e\u975e\u5185\u90e8\u6570\u636e\u7c7b\u578b\u7684\u5bf9\u8c61\u800c\u8a00\uff0c\u5149\u7528maloc/free\u65e0\u6cd5\u6ee1\u8db3\u52a8\u6001\u5bf9\u8c61\u7684\u8981\u6c42\u3002", "\n\t\u5bf9\u8c61\u5728\u521b\u5efa\u7684\u540c\u65f6\u8981\u81ea\u52a8\u6267\u884c\u6784\u9020\u51fd\u6570\uff0c\u5bf9\u8c61\u5728\u6d88\u4ea1\u4e4b\u524d\u8981\u81ea\u52a8\u6267\u884c\u6790\u6784\u51fd\u6570\u3002\u7531\u4e8emalloc/free\u662f\u5e93\u51fd\u6570\u800c\u4e0d\u662f\u8fd0\u7b97\u7b26\uff0c\u4e0d\u5728\u7f16\u8bd1\u5668\u63a7\u5236\u6743\u9650\u4e4b\u5185\uff0c\u4e0d\u80fd\u591f\u628a\u6267\u884c\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u7684\u4efb\u52a1\u5f3a\u52a0\u4e8emalloc/free\u3002\u56e0\u6b64C++\u8bed\u8a00\u9700\u8981\u4e00\u4e2a\u80fd\u5b8c\u6210\u52a8\u6001\u5185\u5b58\u5206\u914d\u548c\u521d\u59cb\u5316\u5de5\u4f5c\u7684\u8fd0\u7b97\u7b26new\uff0c\u4ee5\u53ca\u4e00\u4e2a\u80fd\u5b8c\u6210\u6e05\u7406\u4e0e\u91ca\u653e\u5185\u5b58\u5de5\u4f5c\u7684\u8fd0\u7b97\u7b26delete\u3002", "\n\t\u6ce8\u610fnew/delete\u4e0d\u662f\u5e93\u51fd\u6570\u3002"], "title": "new\u3001delete\u3001malloc\u3001free\u5173\u7cfb"},
{"contents": ["\u4ece\u9759\u6001\u5b58\u50a8\u533a\u57df\u5206\u914d\u5185\u5b58\u3002\u7a0b\u5e8f\u7f16\u8bd1\u7684\u65f6\u5019\u5185\u5b58\u5df2\u7ecf\u5206\u914d\u597d\u4e86\uff0c\u5e76\u4e14\u5728\u7a0b\u5e8f\u7684\u6574\u4e2a\u8fd0\u884c\u671f\u95f4\u90fd\u5b58\u5728\uff0c\u4f8b\u5982\u5168\u7a0b\u53d8\u91cf", "\n\t\u5728\u6808\u4e0a\u521b\u5efa\u3002\u5728\u6267\u884c\u51fd\u6570\u65f6\uff0c\u51fd\u6570\u5185\u90e8\u7684\u5b58\u50a8\u5355\u5143\u53ef\u4ee5\u5728\u6808\u4e0a\u521b\u5efa\uff0c\u51fd\u6570\u7ed3\u675f\u65f6\u8fd9\u4e9b\u5b58\u50a8\u5355\u5143\u81ea\u52a8\u88ab\u91ca\u653e\uff0c\u5904\u7406\u5668\u7684\u6307\u5b9a\u96c6\u4e2d\u6709\u5173\u4e8e\u6808\u5185\u5b58\u7684\u5206\u914d\u8fd0\u7b97\uff0c\u56e0\u6b64\u6548\u7387\u5f88\u9ad8\uff0c\u4f46\u662f\u5206\u914d\u7684\u5185\u5b58\u5bb9\u91cf\u6709\u9650\uff1b", "\n\t\t\t\t\u4ece\u5806\u4e0a\u5206\u914d\u5185\u5b58\uff0c\u4e5f\u6210\u4e3a\u52a8\u6001\u5185\u5b58\u5206\u914d\u3002\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\u7528malloc\u6216\u8005new\u51fd\u6570\u7533\u8bf7\u4efb\u610f\u5927\u5c0f\u7684\u5185\u5b58\uff0c\u7a0b\u5e8f\u8981\t\t\t\t\t\u7528free\u51fd\u6570\u6216\u8005delete\u51fd\u6570\u91ca\u653e\u5185\u5b58\u3002 "], "title": "\u5185\u5b58\u5206\u914d\u7684\u65b9\u5f0f"},
{"contents": ["\u53c2\u8003\u7b54\u6848\uff1a\u2460\u5728\u51fd\u6570\u4f53\uff0c\u4e00\u4e2a\u88ab\u58f0\u660e\u4e3a\u9759\u6001\u7684\u53d8\u91cf\u5728\u51fd\u6570\u8c03\u7528\u7684\u8fc7\u7a0b\u4e2d\u7ef4\u6301\u5176\u503c\u4e0d\u53d8\uff1b", "\n          \u2461\u5728\u6a21\u5757\u5185\uff08\u51fd\u6570\u4f53\u5916\uff09\uff0c\u4e00\u4e2a\u88ab\u58f0\u660e\u4e3a\u9759\u6001\u7684\u53d8\u91cf\u53ef\u4ee5\u88ab\u6a21\u5757\u5185\u7684\u6240\u6709\u51fd\u6570\u8bbf\u95ee\uff0c\u4f46\u4e0d\u80fd\u88ab\u6a21\u5757\u5916\u7684\u5176\u4ed6\u51fd\u6570\u8bbf\u95ee\u3002\u5b83\u662f\u4e00\u4e2a\u672c\u5730\u7684\u5168\u5c40\u53d8\u91cf\uff1b", "\n          \u2462\u5728\u6a21\u5757\u5185\uff0c\u88ab\u58f0\u660e\u4e3a\u9759\u6001\u7684\u51fd\u6570\u53ea\u80fd\u88ab\u8fd9\u4e00\u6a21\u5757\u5185\u7684\u5176\u4ed6\u51fd\u6570\u8c03\u7528\uff0c\u65e2\u51fd\u6570\u88ab\u9650\u5236\u5728\u58f0\u660e\u4ed6\u7684\u6a21\u5757\u8303\u56f4\u5185\u3002"], "title": "static\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f"},
{"contents": ["\u53c2\u8003\u7b54\u6848\uff1adelete\u53ea\u4f1a\u8c03\u7528\u4e00\u6b21\u6790\u6784\u51fd\u6570\uff0c\u800cdelete[]\u4f1a\u8c03\u7528\u6bcf\u4e00\u4e2a\u6210\u5458\u7684\u6790\u6784\u51fd\u6570\u3002"], "title": "delete\u4e0e delete []\u533a\u522b"},
{"contents": ["\u5f15\u7528\u5c31\u662f\u67d0\u4e2a\u76ee\u6807\u53d8\u91cf\u7684\u201c\u522b\u540d\u201d(alias)\uff0c\u5bf9\u5e94\u7528\u7684\u64cd\u4f5c\u4e0e\u5bf9\u53d8\u91cf\u76f4\u63a5\u64cd\u4f5c\u6548\u679c\u5b8c\u5168\u76f8\u540c\u7533\u660e\u4e00\u4e2a\u5f15\u7528\u7684\u65f6\u5019\uff0c\u5207\u8bb0\u8981\u5bf9\u5176\u8fdb\u884c\u521d\u59cb\u5316\u3002\u5f15\u7528\u58f0\u660e\u5b8c\u6bd5\u540e\uff0c\u76f8\u5f53\u4e8e\u76ee\u6807\u53d8\u91cf\u540d\u6709\u4e24\u4e2a\u540d\u79f0\uff0c\u5373\u8be5\u76ee\u6807\u539f\u540d\u79f0\u548c\u5f15\u7528\u540d\uff0c\u4e0d\u80fd\u518d\u628a\u8be5\u5f15\u7528\u540d\u4f5c\u4e3a\u5176\u4ed6\u53d8\u91cf\u540d\u7684\u522b\u540d\u3002\u58f0\u660e\u4e00\u4e2a\u5f15\u7528\uff0c\u4e0d\u662f\u65b0\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53d8\u91cf\uff0c\u5b83\u53ea\u8868\u793a\u8be5\u5f15\u7528\u540d\u662f\u76ee\u6807\u53d8\u91cf\u540d\u7684\u4e00\u4e2a\u522b\u540d\uff0c\u5b83\u672c\u8eab\u4e0d\u662f\u4e00\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u56e0\u6b64\t\u5f15\u7528\u672c\u8eab\u4e0d\u5360\u5b58\u50a8\u5355\u5143\uff0c\u7cfb\u7edf\u4e5f\u4e0d\u7ed9\u5f15\u7528\u5206\u914d\u5b58\u50a8\u5355\u5143\u3002"], "title": "\u4ec0\u4e48\u662f\u201c\u5f15\u7528\u201d\uff1f\u7533\u660e\u548c\u4f7f\u7528\u201c\u5f15\u7528\u201d\u8981\u6ce8\u610f\u54ea\u4e9b\u95ee\u9898\uff1f"},
{"contents": ["\u53c2\u8003\u7b54\u6848\uff1a\u6790\u6784\u51fd\u6570\u8c03\u7528\u7684\u6b21\u5e8f\u662f\u5148\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u540e\u57fa\u7c7b\u7684\u6790\u6784\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728\u57fa\u7c7b\u7684\u7684\u6790\u6784\u8c03\u7528\u7684\u65f6\u5019,\u6d3e\u751f\u7c7b\u7684\u4fe1\u606f\u5df2\u7ecf\u5168\u90e8\u9500\u6bc1\u4e86\u5b9a\u4e49\u4e00\u4e2a\u5bf9\u8c61\u65f6\u5148\u8c03\u7528\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u3001\u7136\u540e\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u6784\u9020 \u51fd\u6570\uff1b\u6790\u6784\u7684\u65f6\u5019\u6070\u597d\u76f8\u53cd\uff1a\u5148\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570\u3001\u7136\u540e\u8c03\u7528\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u3002"], "title": "\u5b50\u7c7b\u6790\u6784\u65f6\u8981\u8c03\u7528\u7236\u7c7b\u7684\u6790\u6784\u51fd\u6570\u5417\uff1f"},
{"contents": ["\u4f20\u9012\u5f15\u7528\u7ed9\u51fd\u6570\u4e0e\u4f20\u9012\u6307\u9488\u7684\u6548\u679c\u662f\u4e00\u6837\u7684\u3002\u8fd9\u65f6\uff0c\u88ab\u8c03\u51fd\u6570\u7684\u5f62\u53c2\u5c31\u6210\u4e3a\u539f\u6765\u4e3b\u8c03\u51fd\u6570\u4e2d\u7684\u5b9e\u53c2\u53d8\u91cf\u6216\u5bf9\u8c61\u7684\u4e00\u4e2a\u522b\u540d\u6765\u4f7f\u7528\uff0c\u6240\u4ee5\u5728\u88ab\u8c03\u51fd\u6570\u4e2d\u5bf9\u5f62\u53c2\u53d8\u91cf\u7684\u64cd\u4f5c\u5c31\u662f\u5bf9\u5176\u76f8\u5e94\u7684\u76ee\u6807\t\u5bf9\u8c61\uff08\u5728\u4e3b\u8c03\u51fd\u6570\u4e2d\uff09\u7684\u64cd\u4f5c\u3002", "\n\t\u2461\u4f7f\u7528\u5f15\u7528\u4f20\u9012\u51fd\u6570\u7684\u53c2\u6570\uff0c\u5728\u5185\u5b58\u4e2d\u5e76\u6ca1\u6709\u4ea7\u751f\u5b9e\u53c2\u7684\u526f\u672c\uff0c\u5b83\u662f\u76f4\u63a5\u5bf9\u5b9e\u53c2\u64cd\u4f5c\uff1b\u800c\u4f7f\u7528\u4e00\u822c\u53d8\u91cf\u4f20\u9012\u51fd\u6570\u7684\u53c2\u6570\uff0c\u5f53\u53d1\u751f\u51fd\u6570\u8c03\u7528\u65f6\uff0c\u9700\u8981\u7ed9\u5f62\u53c2\u5206\u914d\u5b58\u50a8\u5355\u5143\uff0c\u5f62\u53c2\u53d8\u91cf\u662f\u5b9e\u53c2\u53d8\u91cf\u7684\t\u526f\u672c\uff1b\u5982\u679c\u4f20\u9012\u7684\u662f\u5bf9\u8c61\uff0c\u8fd8\u5c06\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002\u56e0\u6b64\uff0c\u5f53\u53c2\u6570\u4f20\u9012\u7684\u6570\u636e\u8f83\u5927\u65f6\uff0c\u7528\u5f15\u7528\u6bd4\t\u7528\u4e00\u822c\u53d8\u91cf\u4f20\u9012\u53c2\u6570\u7684\u6548\u7387\u548c\u6240\u5360\u7a7a\u95f4\u90fd\u597d\u3002", "\n\t\u2462\u4f7f\u7528\u6307\u9488\u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570\u867d\u7136\u4e5f\u80fd\u8fbe\u5230\u4e0e\u4f7f\u7528\u5f15\u7528\u7684\u6548\u679c\uff0c\u4f46\u662f\uff0c\u5728\u88ab\u8c03\u51fd\u6570\u4e2d\u540c\u6837\u8981\u7ed9\u5f62\u53c2\u5206\u914d\u5b58\u50a8\u5355\u5143\uff0c\u4e14\u9700\u8981\u91cd\u590d\u4f7f\u7528\u201d*\u6307\u9488\u53d8\u91cf\u540d\u201d\u7684\u5f62\u5f0f\u8fdb\u884c\u8fd0\u7b97\uff0c\u8fd9\u5f88\u5bb9\u6613\u4ea7\u751f\u9519\u8bef\u4e14\u7a0b\u5e8f\u7684\u9605\t\u8bfb\u6027\u8f83\u5dee\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u5728\u4e3b\u8c03\u51fd\u6570\u7684\u8c03\u7528\u70b9\u5904\uff0c\u5fc5\u987b\u7528\u53d8\u91cf\u7684\u5730\u5740\u4f5c\u4e3a\u5b9e\u53c2\u3002\u800c\u5f15\u7528\u66f4\u5bb9\u6613\u4f7f\u7528\uff0c\u66f4\u6e05\u6670\u3002"], "title": "\u5c06\u201c\u5f15\u7528\u201d\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u6709\u54ea\u4e9b\u7279\u70b9\uff1f"},
{"contents": ["const\u7528\u4e8e\u5b9a\u4e49\u5e38\u91cf\uff1b", "\n\tconst\u5b9a\u4e49\u7684\u5e38\u91cf\u7f16\u8bd1\u5668\u53ef\u4ee5\u5bf9\u5176\u8fdb\u884c\u6570\u636e\u9759\u6001\u7c7b\u578b\u5b89\u5168\u68c0\u67e5\uff1b", "\n                const\u4fee\u9970\u51fd\u6570\u53c2\u6570\u5f53\u4f20\u5165\u7684\u53c2\u6570\u4e3a\u7528\u6237\u81ea\u5b9a\u4e49\u7c7b\u578b\u548c\u62bd\u8c61\u6570\u636e\u7c7b\u578b\u65f6\uff0c\u5c06\u503c\u4f20\u9012\u6539\u4e3aconst&\u4f20\u9012 \u53ef\u4ee5\u63d0\u9ad8\u6548\u7387\uff1b", "\n                 const\u4fee\u9970\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff1a\u5982\u679c\u7ed9\u201c\u6307\u9488\u4f20\u9012\u201d\u7684\u51fd\u6570\u7684\u8fd4\u56de\u503c\u52a0\u4e0aconst\u5219\u8fd4\u56de\u503c\u4e0d\u80fd\u88ab\u76f4\u63a5\u4fee\u6539\uff0c\u4e14\u8be5\u8fd4\u56de\u503c\u53ea\u80fd\u88ab\u8d4b\u503c\u7ed9const\u4fee\u9970\u7684\u540c\u7c7b\u578b\u6307\u9488\u3002", "\n                  const\u4fee\u9970\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff1a\u4efb\u4f55\u4e0d\u9700\u8981\u4fee\u6539\u6570\u636e\u6210\u5458\u7684\u51fd\u6570\u90fd\u5e94\u8be5\u7528const\u4fee\u9970\uff0c\u8fd9\u6837\u5373\u4f7f\u4e0d\u5c0f\u5fc3\u4fee\u6539\u4e86\u6570\u636e\u6210\u5458\u6216\u8c03\u7528\u4e86\u975econst\u6210\u5458\u51fd\u6570\uff0c\u7f16\u8bd1\u4e5f\u4f1a\u62a5\u9519\uff1b"], "title": "C++\u4e2dconst\u7684\u4f5c\u7528"},
{"contents": ["\u53c2\u8003\u7b54\u6848\uff1adefine\u53ea\u662f\u7528\u6765\u505a\u6587\u672c\u66ff\u6362\uff0c define \u5e38\u91cf\u7684\u751f\u547d\u5468\u671f\u6b62\u4e8e\u7f16\u8bd1\u671f\uff0c\u5b83\u5b58\u5728\u4e8e\u7a0b\u5e8f\u7684\u4ee3\u7801\u6bb5\uff0c\u5728\u5b9e\u9645\u7a0b\u5e8f\u4e2d\u5b83\u53ea\u662f\u4e00\u4e2a\u5e38\u6570\uff0c\u4e00\u4e2a\u547d\u4ee4\u4e2d\u7684\u53c2\u6570\u5e76\u6ca1\u6709\u5b9e\u9645\u7684\u5b58\u5728\uff1b", "\n\t  const \u5e38\u91cf\u5b58\u5728\u4e8e\u7a0b\u5e8f\u7684\u6570\u636e\u6bb5\uff0c\u5e76\u5728\u5806\u6808\u4e2d\u5206\u914d\u4e86\u7a7a\u95f4\u3002 const \u5e38\u91cf\u5728\u7a0b\u5e8f\u4e2d\u786e\u786e\u5b9e\u5b9e\u7684\u5b58\u5728\u5e76\u53ef\u4ee5\u88ab\u8c03\u7528\u3001\u4f20\u9012\u3002const\u5e38\u91cf\u6709\u6570\u636e\u7c7b\u578b\uff0c\u800c\u5b8f\u5e38\u91cf\u6ca1\u6709\u6570\u636e\u7c7b\u578b\u3002\u7f16\u8bd1\u5668\u53ef\u4ee5\u5bf9const\u5e38\u91cf\t\u8fdb\u884c\u7c7b\u578b\u5b89\u5168\u68c0\u67e5\u3002"], "title": "const\u4e0edefine\u7684\u533a\u522b"},
{"contents": ["\u201c\u91ce\u6307\u9488\u201d\u4e0d\u662fNULL\u6307\u9488\uff0c\u800c\u662f\u6307\u5411\u201c\u5783\u573e\u201d\u7684\u5185\u5b58\u6307\u9488\uff0c\u5176\u4e3b\u8981\u6210\u56e0\u662f\uff1a\u6307\u9488\u53d8\u91cf\u6ca1\u6709\u88ab\u521d\u59cb\u5316\uff0c\u6216\u8005\u6307\u9488p\u88abfree\u6216\u8005delete\u4e4b\u540e\uff0c\u6ca1\u6709\u7f6e\u4e3aNULL\u3002"], "title": "\u4ec0\u4e48\u662f\u201c\u91ce\u6307\u9488\u201d\uff1f"},
{"contents": ["\u5185\u5b58\u6cc4\u9732\u662f\u6307\u7a0b\u5e8f\u4e2d\u52a8\u6001\u5206\u914d\u4e86\u5185\u5b58\uff0c\u4f46\u662f\u5728\u7a0b\u5e8f\u7ed3\u675f\u65f6\u6ca1\u6709\u91ca\u653e\u8fd9 \u90e8\u5206\u5185\u5b58", "\n\t\u4ece\u800c\u9020\u6210\u90a3\u4e00\u90e8\u5206\u5185\u5b58\u4e0d\u53ef\u7528\u7684\u60c5\u51b5\uff1b"], "title": "\u4ec0\u4e48\u662f\u5185\u5b58\u6cc4\u9732\uff1f"},
{"contents": ["\u6307\u9488\u6570\u7ec4\u662f\u6570\u7ec4\uff0c\u6570\u7ec4\u6307\u9488\u662f\u6307\u9488", "\n\t\u6307\u9488\u6570\u7ec4\u6307\u4e00\u4e2a\u6570\u7ec4\u91cc\u5b58\u653e\u7684\u90fd\u662f\u4e00\u4e2a\u7c7b\u578b\u7684\u6307\u9488 \u4f8b\u5982\uff1aint*a[10];", "\n\t\u6570\u7ec4\u6307\u9488\u662f\u6307\u5411\u4e00\u7ef4\u6216\u8005\u591a\u7ef4\u6570\u7ec4\u7684\u6307\u9488  \u4f8b\u5982 int*b =new int[10];"], "title": "\u6307\u9488\u6570\u7ec4\u548c\u6570\u7ec4\u6307\u9488\u7684\u533a\u522b\uff1f"},
{"contents": ["\u5e38\u91cf\u6307\u9488\uff0c\u5b83\u662f\u4e00\u4e2a\u6307\u5411\u5e38\u91cf\u7684\u6307\u9488\u3002\u5e38\u91cf\u6307\u9488\u6307\u5411\u4e00\u4e2a\u5e38\u91cf,\u662f\u9632\u6b62\u5bf9\u6307\u9488\u8bef\u64cd\u4f5c\u51fa\u73b0\u4fee\u6539\u5e38\t\u91cf\u8fd9\u6837\u7684\u9519\u8bef\u9488\u662f\u6307\u6307\u9488\uff0c\u6307\u9488\u6240\u6307\u5411\u7684\u5730\u5740\u7684\u5185\u5bb9\u662f\u4e0d\u53ef\u4fee\u6539\u7684\u3002", "\n\t\u6307\u9488\u5e38\u91cf\uff1a\u5b83\u9996\u5148\u662f\u4e00\u4e2a\u5e38\u91cf\uff0c\u7136\u540e\u624d\u662f\u4e00\u4e2a\u6307\u9488\u3002\u6307\u9488\u5e38\u91cf\u4e0d\u80fd\u4fee\u6539\u6307\u9488\u6240\u6307\u5411\u7684\u5730\u5740\uff0c\u4e00\u65e6\u521d\u59cb\u5316\uff0c\u5730\u5740\u5c31\u56fa\u5b9a\u4e86\uff0c\u4e0d\u80fd\u5bf9\u5b83\u8fdb\u884c\u79fb\u52a8\u64cd\u4f5c\uff0c\u3002\u5982\u679c\u5bf9\u6307\u9488\u5e38\u91cf\u8fdb\u884c\u81ea\u589e\u64cd\u4f5c\uff0c\u7cfb\u7edf\u4f1a\u63d0\u793a\u51fa\u9519\u3002\u4f46\u662f\u6307\u9488\u5e38\u91cf\u7684\u5185\u5bb9\u662f\u53ef\u4ee5\u66ff\u6362\u7684\uff0c\u6307\u9488\u5e38\u91cf\u662f\u4e0d\u53ef\u6539\u53d8\u5730\u5740\u7684\u6307\u9488\uff0c\u4f46\u662f\u53ef\u4ee5\u5bf9\u5b83\u6240\u6307\u5411\u7684\u5185\u5bb9\u8fdb\u884c\u4fee\u6539\u3002"], "title": "\u5e38\u91cf\u6307\u9488\u548c\u6307\u9488\u5e38\u91cf\u7684\u533a\u522b\uff1f"},
{"contents": ["\u7b97\u6cd5\uff1a", "\n1\uff0e\u4ec0\u4e48\u662fNPC\uff0cNP-Hard\uff1f", "\n2\uff0e\u8d77\u6ce1\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u591a\u5c11\uff1f", "\n\u8bf4\u51fa\u81f3\u5c11\u4e00\u4e2a\u6bd4\u5b83\u66f4\u5feb\u7684\u7b97\u6cd5\uff1b", "\n\u6392\u5e8f\u7684\u6781\u9650\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u591a\u5c11\uff1f", "\n3\uff0e\u6709\u4e00\u4e2a\u94fe\u8868\uff0c\u5982\u4f55\u5224\u65ad\u5b83\u662f\u4e00\u4e2a\u5faa\u73af\u94fe\u8868\uff1f", "\n\u5982\u679c\u94fe\u8868\u662f\u5355\u5411\u7684\u5462\uff1f", "\n\u5982\u679c\u51fa\u73b0\u5faa\u73af\u7684\u70b9\u53ef\u80fd\u5728\u4efb\u610f\u4f4d\u7f6e\u5462\uff1f", "\n\u5982\u679c\u7f13\u5b58\u7a7a\u95f4\u662f\u6709\u9650\u7684\uff0c\u6bd4\u5982\u662f\u4e00\u4e2a\u5e38\u6570\u5462\uff1f", "\n\u5982\u679c\u53ea\u80fd\u4f7f\u75282\u4e2a\u7f13\u5b58\u5462\uff1f", "\n4\uff0e\u6709\u4e00\u4e2a\u6587\u4ef6\uff0c\u4fdd\u5b58\u4e86\u82e5\u5e72\u4e2a\u6574\u6570\uff0c\u5982\u4f55\u4ee5\u5e73\u5747\u7684\u6982\u7387\u968f\u673a\u5f97\u5230\u5176\u4e2d\u7684\u4e00\u4e2a\u6574\u6570\uff1f", "\n\u5982\u679c\u6574\u6570\u7684\u4e2a\u6570\u662f\u672a\u77e5\u7684\u5462\uff1f", "\n\u5982\u679c\u6574\u6570\u662f\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u5b58\u653e\uff0c\u5982\uff1a\uff08\u5373\u5982\u4f55\u5f97\u5230\u968f\u673a\u7684\u4e00\u4e2a\u5b57\u7b26\u4e32\uff09", "\n123<enter>", "\n-456<enter>", "\n\u2026", "\n\u5982\u679c\u53ea\u5141\u8bb8\u4fbf\u5386\u6587\u4ef6\u4e00\u6b21\u5462\uff1f", "\n5\uff0e\u7528\u4e24\u7ec4\u6570\u636e\uff0c\u90fd\u5728\u5185\u5b58\u4e2d\uff0c\u5bf9\u5b83\u4eec\u6392\u5e8f\u5206\u522b\u9700\u89811\u548c2\u5206\u949f\uff1b\u90a3\u4e48\u4f7f\u7528\u4e24\u4e2a\u7ebf\u7a0b\u4e00\u8d77\u6392\u5e8f\uff0c\u5927\u6982\u9700\u8981\u591a\u5c11\u65f6\u95f4\uff1f"], "title": "C++\u7b97\u6cd5\u9762\u8bd5\u9898"},
{"contents": ["\u4e00\u3001\u8bf7\u586b\u5199BOOL , float, \u6307\u9488\u53d8\u91cf \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\u3002\uff0810\u5206\uff09", "\n\u63d0\u793a\uff1a\u8fd9\u91cc\u201c\u96f6\u503c\u201d\u53ef\u4ee5\u662f0, 0.0 , FALSE\u6216\u8005\u201c\u7a7a\u6307\u9488\u201d\u3002\u4f8b\u5982 int \u53d8\u91cf n \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\u4e3a\uff1a", "\nif ( n == 0 )", "\nif ( n != 0 )", "\n\u4ee5\u6b64\u7c7b\u63a8\u3002", "\n\u8bf7\u5199\u51fa BOOL flag \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\uff1a", "\n\u8bf7\u5199\u51fa float x \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\uff1a", "\n\u8bf7\u5199\u51fa char *p \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\uff1a", "\n\u4e8c\u3001\u4ee5\u4e0b\u4e3aWindows NT\u4e0b\u768432\u4f4dC++\u7a0b\u5e8f\uff0c\u8bf7\u8ba1\u7b97sizeof\u7684\u503c\uff0810\u5206\uff09", "\nchar str[] = \u201cHello\u201d ;", "\nchar *p = str ;", "\nint n = 10;", "\n\u8bf7\u8ba1\u7b97", "\nsizeof (str ) =", "\nsizeof ( p ) =", "\nsizeof ( n ) =void Func ( char str[100])", "\n{", "\n\u8bf7\u8ba1\u7b97", "\nsizeof( str ) =", "\n}", "\nvoid *p = malloc( 100 );", "\n\u8bf7\u8ba1\u7b97", "\nsizeof ( p ) =", "\n\u3001\u7b80\u7b54\u9898\uff0825\u5206\uff09", "\n1\u3001\u5934\u6587\u4ef6\u4e2d\u7684 ifndef/define/endif \u5e72\u4ec0\u4e48\u7528\uff1f", "\n2\u3001\uff03i nclude <filename.h> \u548c \uff03i nclude \u201cfilename.h\u201d \u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n3\u3001const \u6709\u4ec0\u4e48\u7528\u9014\uff1f\uff08\u8bf7\u81f3\u5c11\u8bf4\u660e\u4e24\u79cd\uff09", "\n4\u3001\u5728C++ \u7a0b\u5e8f\u4e2d\u8c03\u7528\u88ab C\u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u7684\u51fd\u6570\uff0c\u4e3a\u4ec0\u4e48\u8981\u52a0 extern \u201cC\u201d\u58f0\u660e\uff1f", "\n5\u3001\u8bf7\u7b80\u8ff0\u4ee5\u4e0b\u4e24\u4e2afor\u5faa\u73af\u7684\u4f18\u7f3a\u70b9", "\n// \u7b2c\u4e00\u4e2a", "\nfor (i=0; i<N; i++)", "\n{", "\nif (condition)", "\nDoSomething();", "\nelse", "\nDoOtherthing();", "\n}// \u7b2c\u4e8c\u4e2a", "\nif (condition)", "\n{", "\nfor (i=0; i<N; i++)", "\nDoSomething();", "\n}", "\nelse", "\n{", "\nfor (i=0; i<N; i++)", "\nDoOtherthing();", "\n\u4f18\u70b9\uff1aN\u6b21\u4e2d\uff0c\u6bcf\u6b21\u90fd\u8981\u5bf9condition\u8fdb\u884c\u5224\u65ad", "\n\u7f3a\u70b9\uff1a \u4f18\u70b9\uff1a\u4e00\u6b21\u5224\u65adcondition\u540e\uff0c\u5bf9something\u6216Otherthing\u6267\u884cN\u6b21", "\n\u7f3a\u70b9\uff1a", "\u56db\u3001\u6709\u5173\u5185\u5b58\u7684\u601d\u8003\u9898\uff0820\u5206\uff09", "void GetMemory(char *p)", "\n{", "\np = (char *)malloc(100);", "\n}", "\nvoid Test(void)", "\n{", "\nchar *str = NULL;", "\nGetMemory(str);", "\nstrcpy(str, \u201chello world\u201d);", "\nprintf(str);", "\n}", "\u8bf7\u95ee\u8fd0\u884cTest\u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "char *GetMemory(void)", "\n{", "\nchar p[] = \u201chello world\u201d;", "\nreturn p;", "\n}", "\nvoid Test(void)", "\n{", "\nchar *str = NULL;", "\nstr = GetMemory();", "\nprintf(str);", "\n}", "\u8bf7\u95ee\u8fd0\u884cTest\u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "Void GetMemory2(char **p, int num)", "\n{", "\n*p = (char *)malloc(num);", "\n}", "\nvoid Test(void)", "\n{", "\nchar *str = NULL;", "\nGetMemory(&str, 100);", "\nstrcpy(str, \u201chello\u201d);", "\nprintf(str);", "\n}", "\n\u8bf7\u95ee\u8fd0\u884cTest\u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "void Test(void)", "\n{", "\nchar *str = (char *) malloc(100);", "\nstrcpy(str, \u201chello\u201d);", "\nfree(str);", "\nif(str != NULL)", "\n{", "\nstrcpy(str, \u201cworld\u201d);", "\nprintf(str);", "\n}", "\n}", "\n\u8bf7\u95ee\u8fd0\u884cTest\u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\u4e94\u3001\u7f16\u5199strcpy\u51fd\u6570\uff0810\u5206\uff09", "\n\u5df2\u77e5strcpy\u51fd\u6570\u7684\u539f\u578b\u662f", "\nchar *strcpy(char *strDest, const char *strSrc);", "\n\u5176\u4e2dstrDest\u662f\u76ee\u7684\u5b57\u7b26\u4e32\uff0cstrSrc\u662f\u6e90\u5b57\u7b26\u4e32\u3002", "\uff081\uff09\u4e0d\u8c03\u7528C++/C\u7684\u5b57\u7b26\u4e32\u5e93\u51fd\u6570\uff0c\u8bf7\u7f16\u5199\u51fd\u6570 strcpy", "\nchar *strcpy(char *strDest,const char *strSrc){", "\nint n=0;", "\nwhile(strSrc[n]!=NULL){", "\nn++:", "\n}", "\n*srtDest=new char[n];", "\nfor(int i=0;i<n;i++) {", "\nstrDest=strSrc[i];", "\ni++;", "\n}", "\nreturn *strDest;", "\n}", "\n\uff082\uff09strcpy\u80fd\u628astrSrc\u7684\u5185\u5bb9\u590d\u5236\u5230strDest\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u8981char * \u7c7b\u578b\u7684\u8fd4\u56de\u503c\uff1f", "\n\u56e0\u4e3a\u8be5\u51fd\u6570\u7684\u8fd8\u53ef\u4ee5\u628a\u590d\u5236\u7684\u5b57\u7b26\u4e32\u9996\u5730\u5740\u6307\u9488\u7ed9\u5176\u4ed6\u7684\u6307\u9488\uff0c\u800c\u4e14\u8fd9\u79cd\u9700\u8981\u4e5f\u662f\u6709\u7528\u7684\u3002", "\n\u516d\u3001\u7f16\u5199\u7c7bString\u7684\u6784\u9020\u51fd\u6570\u3001\u6790\u6784\u51fd\u6570\u548c\u8d4b\u503c\u51fd\u6570\uff0825\u5206\uff09", "\n\u5df2\u77e5\u7c7bString\u7684\u539f\u578b\u4e3a\uff1a", "\nclass String", "\n{", "\npublic:", "\nString(const char *str = NULL);// \u666e\u901a\u6784\u9020\u51fd\u6570", "\nString(const String &other); // \u62f7\u8d1d\u6784\u9020\u51fd\u6570", "\n~ String(void); // \u6790\u6784\u51fd\u6570", "\nString & operate =(const String &other);// \u8d4b\u503c\u51fd\u6570", "\nprivate:", "\nchar *m_data;// \u7528\u4e8e\u4fdd\u5b58\u5b57\u7b26\u4e32", "\n};", "\n\u8bf7\u7f16\u5199String\u7684\u4e0a\u8ff04\u4e2a\u51fd\u6570\u3002", "//\u7b54\u6848\u4e00\u5e76\u7ed9\u51fa", "\n\u4e00\u3001\u8bf7\u586b\u5199BOOL , float, \u6307\u9488\u53d8\u91cf \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\u3002\uff0810\u5206\uff09", "\u8bf7\u5199\u51fa BOOL flag \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\u3002\uff083\u5206\uff09", "\n\u6807\u51c6\u7b54\u6848\uff1a", "\nif ( flag )", "\nif ( !flag )\u5982\u4e0b\u5199\u6cd5\u5747\u5c5e\u4e0d\u826f\u98ce\u683c\uff0c\u4e0d\u5f97\u5206\u3002", "\nif (flag == TRUE)", "\nif (flag == 1 )", "\nif (flag == FALSE)", "\nif (flag == 0)", "\n\u8bf7\u5199\u51fa float x \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\u3002\uff084\u5206\uff09", "\n\u6807\u51c6\u7b54\u6848\u793a\u4f8b\uff1a", "\nconst float EPSINON = 0.00001;", "\nif ((x >= \u2013 EPSINON) && (x <= EPSINON)", "\n\u4e0d\u53ef\u5c06\u6d6e\u70b9\u53d8\u91cf\u7528\u201c==\u201d\u6216\u201c\uff01=\u201d\u4e0e\u6570\u5b57\u6bd4\u8f83\uff0c\u5e94\u8be5\u8bbe\u6cd5\u8f6c\u5316\u6210\u201c>=\u201d\u6216\u201c<=\u201d\u6b64\u7c7b\u5f62\u5f0f\u3002", "\u5982\u4e0b\u662f\u9519\u8bef\u7684\u5199\u6cd5\uff0c\u4e0d\u5f97\u5206\u3002", "\nif (x == 0.0)", "\nif (x != 0.0)", "\u8bf7\u5199\u51fa char *p \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\u3002\uff083\u5206\uff09", "\n\u6807\u51c6\u7b54\u6848\uff1a", "\nif (p == NULL)", "\nif (p != NULL)\u5982\u4e0b\u5199\u6cd5\u5747\u5c5e\u4e0d\u826f\u98ce\u683c\uff0c\u4e0d\u5f97\u5206\u3002", "\nif (p == 0)", "\nif (p != 0)", "\nif (p)", "\nif (!)", "\u4e8c\u3001\u4ee5\u4e0b\u4e3aWindows NT\u4e0b\u768432\u4f4dC++\u7a0b\u5e8f\uff0c\u8bf7\u8ba1\u7b97sizeof\u7684\u503c\uff0810\u5206\uff09", "char str[] = \u201cHello\u201d ;", "\nchar *p = str ;", "\nint n = 10;", "\n\u8bf7\u8ba1\u7b97", "\nsizeof (str ) = 6 \uff082\u5206\uff09", "sizeof ( p ) = 4 \uff082\u5206\uff09", "sizeof ( n ) = 4 \uff082\u5206\uff09void Func ( char str[100])", "\n{", "\n\u8bf7\u8ba1\u7b97", "\nsizeof( str ) = 4 \uff082\u5206\uff09", "\n}", "void *p = malloc( 100 );", "\n\u8bf7\u8ba1\u7b97", "\nsizeof ( p ) = 4 \uff082\u5206\uff09", "\u4e09\u3001\u7b80\u7b54\u9898\uff0825\u5206\uff09", "1\u3001\u5934\u6587\u4ef6\u4e2d\u7684 ifndef/define/endif \u5e72\u4ec0\u4e48\u7528\uff1f\uff085\u5206\uff09", "\n\u7b54\uff1a\u9632\u6b62\u8be5\u5934\u6587\u4ef6\u88ab\u91cd\u590d\u5f15\u7528\u3002", "2\u3001\uff03i nclude <filename.h> \u548c \uff03i nclude \u201cfilename.h\u201d \u6709\u4ec0\u4e48\u533a\u522b\uff1f\uff085\u5206\uff09", "\n\u7b54\uff1a\u5bf9\u4e8e\uff03i nclude <filename.h> \uff0c\u7f16\u8bd1\u5668\u4ece\u6807\u51c6\u5e93\u8def\u5f84\u5f00\u59cb\u641c\u7d22 filename.h", "\n\u5bf9\u4e8e\uff03i nclude \u201cfilename.h\u201d \uff0c\u7f16\u8bd1\u5668\u4ece\u7528\u6237\u7684\u5de5\u4f5c\u8def\u5f84\u5f00\u59cb\u641c\u7d22 filename.h", "3\u3001const \u6709\u4ec0\u4e48\u7528\u9014\uff1f\uff08\u8bf7\u81f3\u5c11\u8bf4\u660e\u4e24\u79cd\uff09\uff085\u5206\uff09", "\n\u7b54\uff1a\uff081\uff09\u53ef\u4ee5\u5b9a\u4e49 const \u5e38\u91cf", "\n\uff082\uff09const\u53ef\u4ee5\u4fee\u9970\u51fd\u6570\u7684\u53c2\u6570\u3001\u8fd4\u56de\u503c\uff0c\u751a\u81f3\u51fd\u6570\u7684\u5b9a\u4e49\u4f53\u3002\u88abconst\u4fee\u9970\u7684\u4e1c\u897f\u90fd\u53d7\u5230\u5f3a\u5236\u4fdd\u62a4\uff0c\u53ef\u4ee5\u9884\u9632\u610f\u5916\u7684\u53d8\u52a8\uff0c\u80fd\u63d0\u9ad8\u7a0b\u5e8f\u7684\u5065\u58ee\u6027\u3002", "4\u3001\u5728C++ \u7a0b\u5e8f\u4e2d\u8c03\u7528\u88ab C\u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u7684\u51fd\u6570\uff0c\u4e3a\u4ec0\u4e48\u8981\u52a0 extern \u201cC\u201d\uff1f \uff085\u5206\uff09", "\n\u7b54\uff1aC++\u8bed\u8a00\u652f\u6301\u51fd\u6570\u91cd\u8f7d\uff0cC\u8bed\u8a00\u4e0d\u652f\u6301\u51fd\u6570\u91cd\u8f7d\u3002\u51fd\u6570\u88abC++\u7f16\u8bd1\u540e\u5728\u5e93\u4e2d\u7684\u540d\u5b57\u4e0eC\u8bed\u8a00\u7684\u4e0d\u540c\u3002\u5047\u8bbe\u67d0\u4e2a\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a void foo(int x, int y);", "\n\u8be5\u51fd\u6570\u88abC\u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u5728\u5e93\u4e2d\u7684\u540d\u5b57\u4e3a_foo\uff0c\u800cC++\u7f16\u8bd1\u5668\u5219\u4f1a\u4ea7\u751f\u50cf_foo_int_int\u4e4b\u7c7b\u7684\u540d\u5b57\u3002", "\nC++\u63d0\u4f9b\u4e86C\u8fde\u63a5\u4ea4\u6362\u6307\u5b9a\u7b26\u53f7extern\u201cC\u201d\u6765\u89e3\u51b3\u540d\u5b57\u5339\u914d\u95ee\u9898\u3002", "5\u3001\u8bf7\u7b80\u8ff0\u4ee5\u4e0b\u4e24\u4e2afor\u5faa\u73af\u7684\u4f18\u7f3a\u70b9\uff085\u5206\uff09", "for (i=0; i<N; i++)", "\n{", "\nif (condition)", "\nDoSomething();", "\nelse", "\nDoOtherthing();", "\n}if (condition)", "\n{", "\nfor (i=0; i<N; i++)", "\nDoSomething();", "\n}", "\nelse", "\n{", "\nfor (i=0; i<N; i++)", "\nDoOtherthing();", "\n}", "\n\u4f18\u70b9\uff1a\u7a0b\u5e8f\u7b80\u6d01", "\u7f3a\u70b9\uff1a\u591a\u6267\u884c\u4e86N-1\u6b21\u903b\u8f91\u5224\u65ad\uff0c\u5e76\u4e14\u6253\u65ad\u4e86\u5faa\u73af\u201c\u6d41\u6c34\u7ebf\u201d\u4f5c\u4e1a\uff0c\u4f7f\u5f97\u7f16\u8bd1\u5668\u4e0d\u80fd\u5bf9\u5faa\u73af\u8fdb\u884c\u4f18\u5316\u5904\u7406\uff0c\u964d\u4f4e\u4e86\u6548\u7387\u3002\u4f18\u70b9\uff1a\u5faa\u73af\u7684\u6548\u7387\u9ad8", "\u7f3a\u70b9\uff1a\u7a0b\u5e8f\u4e0d\u7b80\u6d01", "\u56db\u3001\u6709\u5173\u5185\u5b58\u7684\u601d\u8003\u9898\uff08\u6bcf\u5c0f\u98985\u5206\uff0c\u517120\u5206\uff09", "void GetMemory(char *p)", "\n{", "\np = (char *)malloc(100);", "\n}", "\nvoid Test(void)", "\n{", "\nchar *str = NULL;", "\nGetMemory(str);", "\nstrcpy(str, \u201chello world\u201d);", "\nprintf(str);", "\n}", "\u8bf7\u95ee\u8fd0\u884cTest\u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n\u7b54\uff1a\u7a0b\u5e8f\u5d29\u6e83\u3002", "\n\u56e0\u4e3aGetMemory\u5e76\u4e0d\u80fd\u4f20\u9012\u52a8\u6001\u5185\u5b58\uff0c", "\nTest\u51fd\u6570\u4e2d\u7684 str\u4e00\u76f4\u90fd\u662f NULL\u3002", "\nstrcpy(str, \u201chello world\u201d);\u5c06\u4f7f\u7a0b\u5e8f\u5d29\u6e83\u3002", "\nchar *GetMemory(void)", "\n{", "\nchar p[] = \u201chello world\u201d;", "\nreturn p;", "\n}", "\nvoid Test(void)", "\n{", "\nchar *str = NULL;", "\nstr = GetMemory();", "\nprintf(str);", "\n}", "\u8bf7\u95ee\u8fd0\u884cTest\u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n\u7b54\uff1a\u53ef\u80fd\u662f\u4e71\u7801\u3002", "\n\u56e0\u4e3aGetMemory\u8fd4\u56de\u7684\u662f\u6307\u5411\u201c\u6808\u5185\u5b58\u201d\u7684\u6307\u9488\uff0c\u8be5\u6307\u9488\u7684\u5730\u5740\u4e0d\u662f NULL\uff0c\u4f46\u5176\u539f\u73b0\u7684\u5185\u5bb9\u5df2\u7ecf\u88ab\u6e05\u9664\uff0c\u65b0\u5185\u5bb9\u4e0d\u53ef\u77e5\u3002", "\nvoid GetMemory2(char **p, int num)", "\n{", "\n*p = (char *)malloc(num);", "\n}", "\nvoid Test(void)", "\n{", "\nchar *str = NULL;", "\nGetMemory(&str, 100);", "\nstrcpy(str, \u201chello\u201d);", "\nprintf(str);", "\n}", "\n\u8bf7\u95ee\u8fd0\u884cTest\u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n\u7b54\uff1a", "\n\uff081\uff09\u80fd\u591f\u8f93\u51fahello", "\n\uff082\uff09\u5185\u5b58\u6cc4\u6f0f", "void Test(void)", "\n{", "\nchar *str = (char *) malloc(100);", "\nstrcpy(str, \u201chello\u201d);", "\nfree(str);", "\nif(str != NULL)", "\n{", "\nstrcpy(str, \u201cworld\u201d);", "\nprintf(str);", "\n}", "\n}", "\n\u8bf7\u95ee\u8fd0\u884cTest\u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n\u7b54\uff1a\u7be1\u6539\u52a8\u6001\u5185\u5b58\u533a\u7684\u5185\u5bb9\uff0c\u540e\u679c\u96be\u4ee5\u9884\u6599\uff0c\u975e\u5e38\u5371\u9669\u3002", "\n\u56e0\u4e3afree(str);\u4e4b\u540e\uff0cstr\u6210\u4e3a\u91ce\u6307\u9488\uff0c", "\nif(str != NULL)\u8bed\u53e5\u4e0d\u8d77\u4f5c\u7528\u3002", "27 \u8d39\u6ce2\u90a3\u5176\u6570\u5217\uff0c1\uff0c1\uff0c2\uff0c3\uff0c5\u2026\u2026\u7f16\u5199\u7a0b\u5e8f\u6c42\u7b2c\u5341\u9879\u3002\u53ef\u4ee5\u7528\u9012\u5f52\uff0c\u4e5f\u53ef\u4ee5\u7528\u5176\u4ed6\u65b9\u6cd5\uff0c\u4f46\u8981\u8bf4\u660e\u4f60\u9009\u62e9\u7684\u7406\u7531\u3002", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014-", "\uff03i nclude <stdio.h>", "\n\uff03i nclude <cstdlib>", "int Pheponatch(int);", "\nint Pheponatch2(int);", "int main()", "{", "\nprintf(\u201cThe 10th is %d\u201d,Pheponatch2(20));", "\nsystem(\u201cpause\u201d);", "\nreturn 0;", "\n}", "//\u9012\u5f52\u7b97\u6cd5", "\nint Pheponatch(int N)", "\n{", "\nif( N == 1 || N == 2)", "\n{", "\nreturn 1;", "\n}", "\nelse", "\nreturn Pheponatch( N -1 ) + Pheponatch( N -2 );", "\n}", "//\u975e\u9012\u5f52\u7b97\u6cd5", "\nint Pheponatch2(int N)", "\n{", "\nint x = 1, y = 1, temp;", "\nint i = 2;", "\nwhile(true)", "\n{", "\ntemp = y;", "\ny = x + y;", "\nx = temp;", "\ni++;", "\nif( i == N )", "\nbreak;", "\n}", "\nreturn y;", "\n}", "25\uff0e\u5b8c\u6210\u4e0b\u5217\u7a0b\u5e8f", "*", "*.*.", "*..*..*..", "*\u2026*\u2026*\u2026*\u2026", "*\u2026.*\u2026.*\u2026.*\u2026.*\u2026.", "*\u2026..*\u2026..*\u2026..*\u2026..*\u2026..*\u2026..", "*\u2026\u2026*\u2026\u2026*\u2026\u2026*\u2026\u2026*\u2026\u2026*\u2026\u2026*\u2026\u2026", "*\u2026\u2026.*\u2026\u2026.*\u2026\u2026.*\u2026\u2026.*\u2026\u2026.*\u2026\u2026.*\u2026\u2026.*\u2026\u2026.", "\uff03i nclude <stdio.h>", "#define N 8", "int main()", "{", "int i;", "int j;", "int k;", "\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014", "| |", "| |", "| |", "\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014", "return 0;", "}", "\uff03i nclude <stdio.h>", "\n\uff03i nclude <iostream.h>", "#define N 8", "int main()", "{", "\nint i;", "\nint j;", "\nint k;", "for(i=N; i>=1; i\u2013)", "\n{", "\nfor(j=0; j<N-i+1; j++)", "\n{", "\ncout<<\u201d*\u201d;", "\nfor(k=1; k<N-i+1; k++)", "\ncout<<\u201d.\u201d;", "\n}", "\ncout<<\u201d\\n\u201d;", "\n}", "return 0;", "\n}", "\u201c28 \u4e0b\u5217\u7a0b\u5e8f\u8fd0\u884c\u65f6\u4f1a\u5d29\u6e83\uff0c\u8bf7\u627e\u51fa\u9519\u8bef\u5e76\u6539\u6b63\uff0c\u5e76\u4e14\u8bf4\u660e\u539f\u56e0\u3002\u201d", "\n// void append(int N) ;", "\n//\u6307\u9488\u6ca1\u6709\u521d\u59cb\u5316\uff1a", "\n//NewNode->left=NULL;", "\n//NewNode->right=NULL;", "\uff03i nclude <stdio.h>", "\uff03i nclude <malloc.h>", "typedef struct TNode{", "TNode* left;", "TNode* right;", "int value;", "} TNode;", "TNode* root=NULL;", "void append(int N);", "int main()", "{", "append(63);", "append(45);", "append(32);", "append(77);", "append(96);", "append(21);", "append(17); // Again, \u6570\u5b57\u4efb\u610f\u7ed9\u51fa", "\nreturn 0;", "}", "void append(int N)", "{", "TNode* NewNode=(TNode *)malloc(sizeof(TNode));", "NewNode->value=N;", "NewNode->left=NULL;", "\nNewNode->right=NULL;", "if(root==NULL)", "{", "root=NewNode;", "return;", "}", "else", "{", "TNode* temp;", "temp=root;", "while((N>=temp->value && temp->left!=NULL) || (N<temp->value && temp->right!=NULL))", "{", "while(N>=temp->value && temp->left!=NULL)", "temp=temp->left;", "while(N<temp->value && temp->right!=NULL)", "temp=temp->right;", "}", "if(N>=temp->value)", "temp->left=NewNode;", "else", "temp->right=NewNode;", "return;", "}", "}"], "title": "\u4e0a\u6d77\u8d1d\u5c14\u7684\u9762\u8bd5\u989843\u5206\u5373\u53ef\u8fdb\u5165\u590d\u8bd5"},
{"contents": ["62:8086\u662f\u591a\u5c11\u4f4d\u7684\u7cfb\u7edf\uff1f\u5728\u6570\u636e\u603b\u7ebf\u4e0a\u662f\u600e\u4e48\u5b9e\u73b0\u7684\uff1f", "<<IBM>>", "\n63.\u600e\u6837\u7528\u6700\u5feb\u7684\u65b9\u6cd5\u5224\u65ad\u94fe\u8868\u662f\u5426\u6709\u73af?", "64.c++\u4e2d\u5f15\u7528\u548c\u6307\u9488\u6709\u4ec0\u4e48\u4e0d\u540c?\u6307\u9488\u52a0\u4e0a\u4ec0\u4e48\u9650\u5236\u7b49\u4e8e\u5f15\u7528?", "\n\u7b54\uff1a1 \u5f15\u7528\u88ab\u521b\u5efa\u7684\u65f6\u5019\u5fc5\u987b\u88ab\u521d\u59cb\u5316\uff0c\u800c\u6307\u9488\u4e0d\u662f\u5fc5\u9700\u7684\u30022 \u5f15\u7528\u5728\u521b\u5efa\u540e\u5c31\u4e0d\u80fd\u6539\u53d8\u5f15\u7528\u7684\u5173\u7cfb\uff0c\u800c\u6307\u9488\u5728\u521d\u59cb\u5316\u540e\u53ef\u4ee5\u968f\u65f6\u6307\u5411", "\n\u5176\u5b83\u7684\u53d8\u91cf\u6216\u5bf9\u8c61\u30023 \u6ca1\u6709NULL\u5f15\u7528,\u5f15\u7528\u5fc5\u987b\u4e0e\u5408\u6cd5\u7684\u5b58\u50a8\u5355\u5143\u5173\u8054\uff0c\u800c\u6307\u9488\u53ef\u4ee5\u662fNULL\u3002", "65.\u505a\u7684\u9879\u76ee,\u9047\u5230\u7684\u56f0\u96be,\u600e\u6837\u89e3\u51b3?", "69.\u64cd\u4f5c\u7b26\u91cd\u8f7d", "\nclass CMyObject:pulic CObject", "\n{", "\nPublic:", "\nCMyObject();", "\nCMyObject &operator=(const CMyObject &my);", "\nprivate:", "\nCString strName;", "\nint nId:", "\n};", "\n\u8bf7\u91cd\u8f7d\u8d4b\u503c\u64cd\u4f5c\u7b26", "70.\u94fe\u8868", "\nStruct structList", "\n{", "\nint value;", "\nstructList *pHead;", "\n}", "\nStruct LinkedList *pMyList;", "\n\u8bf7\u7f16\u5199\u5220\u9664\u94fe\u8868\u7684\u5934\u3001\u5c3e\u548c\u7b2cn\u4e2a\u8282\u70b9\u7684\u7a0b\u5e8f", "71.\u7528Socket API\u5236\u4f5c\u4e00\u4e2a\u804a\u5929\u7a0b\u5e8f\uff0c\u901a\u8baf\u534f\u8bae\u4f7f\u7528tcp/ip\u3002\u8981\u6c42\u6709\u7b80\u5355\u754c\u9762\u5373\u53ef\uff0c\u652f\u6301\u591a\u4eba\u804a\u5929\u3002", "72.\u5982\u679c\u6709\u8fc7\u5de5\u4f5c\u7ecf\u9a8c\uff0c\u8bf7\u8bf4\u660e\u5728\u5148\u524d\u516c\u53f8\u7684\u5de5\u4f5c\u4ee5\u53ca\u79bb\u804c\u539f\u56e0\uff08\u5982\u65e0\uff0c\u8bf7\u8bf4\u660e\u6bd5\u4e1a\u540e\u7684\u4e2a\u4eba\u5c55\u671b\uff09", "***************************************************************************", "\n73 \u5bf9\u4e8eC++\u4e2d\u7c7b(class) \u4e0e\u7ed3\u6784(struct)\u7684\u63cf\u8ff0\u6b63\u786e\u7684\u4e3a:", "\nA,\u7c7b\u4e2d\u7684\u6210\u5458\u9ed8\u8ba4\u662fprivate\u7684,\u5f53\u662f\u53ef\u4ee5\u58f0\u660e\u4e3apublic,private \u548cprotected,\u7ed3\u6784\u4e2d\u5b9a\u4e49\u7684\u6210\u5458\u9ed8\u8ba4\u7684\u90fd\u662fpublic;", "\nB,\u7ed3\u6784\u4e2d\u4e0d\u5141\u8bb8\u5b9a\u4e49\u6210\u5458\u51fd\u6570,\u5f53\u662f\u7c7b\u4e2d\u53ef\u4ee5\u5b9a\u4e49\u6210\u5458\u51fd\u6570;", "\nC,\u7ed3\u6784\u5b9e\u4f8b\u4f7f\u7528malloc() \u52a8\u6001\u521b\u5efa,\u7c7b\u5bf9\u8c61\u4f7f\u7528new \u64cd\u4f5c\u7b26\u52a8\u6001\u5206\u914d\u5185\u5b58;", "\nD,\u7ed3\u6784\u548c\u7c7b\u5bf9\u8c61\u90fd\u5fc5\u987b\u4f7f\u7528new \u521b\u5efa;", "\nE,\u7ed3\u6784\u4e2d\u4e0d\u53ef\u4ee5\u5b9a\u4e49\u865a\u51fd\u6570,\u5f53\u662f\u7c7b\u4e2d\u53ef\u4ee5\u5b9a\u4e49\u865a\u51fd\u6570.", "\nF,\u7ed3\u6784\u4e0d\u53ef\u4ee5\u5b58\u5728\u7ee7\u627f\u5173\u7cfb,\u5f53\u662f\u7c7b\u53ef\u4ee5\u5b58\u5728\u7ee7\u627f\u5173\u7cfb.", "\n\u7b54:A,D,F", "74,\u4e24\u4e2a\u4e92\u76f8\u72ec\u7acb\u7684\u7c7b:ClassA \u548c ClassB,\u90fd\u5404\u81ea\u5b9a\u4e49\u4e86\u975e\u9759\u6001\u7684\u516c\u6709\u6210\u5458\u51fd\u6570 PublicFunc() \u548c\u975e\u9759\u6001\u7684\u79c1\u6709\u6210\u5458\u51fd\u6570 PrivateFunc();", "\n\u73b0\u5728\u8981\u5728ClassA \u4e2d\u589e\u52a0\u5b9a\u4e49\u4e00\u4e2a\u6210\u5458\u51fd\u6570ClassA::AdditionalPunction(ClassA a,ClassB b);\u5219\u53ef\u4ee5\u5728AdditionalPunction(ClassA x,ClassB y)\u7684\u5b9e\u73b0\u90e8\u5206(\u51fd\u6570\u529f\u80fd\u4f53\u5185\u90e8)", "\n\u51fa\u73b0\u7684\u5408\u6cd5\u7684\u8868\u8fbe\u662f\u6700\u5168\u7684\u662f:", "\nA,x.PrivateFunc();x.PublicFunc();y.PrivateFunc();y.PublicFunc();", "\nB,x.PrivateFunc();x.PublicFunc();y.PublicFunc();", "\nC,x.PrivateFunc();y.PrivateFunc();y.PublicFunc();", "\nD,x.PublicFunc();y.PublicFunc();", "\n\u7b54:B", "\n75,C++\u7a0b\u5e8f\u4e0b\u5217\u8bf4\u6cd5\u6b63\u786e\u7684\u6709:", "\nA,\u5bf9\u8c03\u7528\u7684\u865a\u51fd\u6570\u548c\u6a21\u677f\u7c7b\u90fd\u8fdb\u884c\u8fdf\u540e\u7f16\u8bd1.", "\nB,\u57fa\u7c7b\u4e0e\u5b50\u7c7b\u4e2d\u51fd\u6570\u5982\u679c\u8981\u6784\u6210\u865a\u51fd\u6570,\u9664\u4e86\u8981\u6c42\u5728\u57fa\u7c7b\u4e2d\u7528virtual \u58f0\u540d,\u800c\u4e14\u5fc5\u987b\u540d\u5b57\u76f8\u540c\u4e14\u53c2\u6570\u7c7b\u578b\u76f8\u540c\u8fd4\u56de\u7c7b\u578b\u76f8\u540c", "\nC,\u91cd\u8f7d\u7684\u7c7b\u6210\u5458\u51fd\u6570\u90fd\u5fc5\u987b\u8981:\u6216\u8005\u8fd4\u56de\u7c7b\u578b\u4e0d\u540c,\u6216\u8005\u53c2\u6570\u6570\u76ee\u4e0d\u540c,\u6216\u8005\u53c2\u6570\u5e8f\u5217\u7684\u7c7b\u578b\u4e0d\u540c.", "\nD,\u9759\u6001\u6210\u5458\u51fd\u6570\u548c\u5185\u8054\u51fd\u6570\u4e0d\u80fd\u662f\u865a\u51fd\u6570,\u53cb\u5458\u51fd\u6570\u548c\u6784\u9020\u51fd\u6570\u4e5f\u4e0d\u80fd\u662f\u865a\u51fd\u6570,\u4f46\u662f\u6790\u6784\u51fd\u6570\u53ef\u4ee5\u662f\u865a\u51fd\u6570.", "\n\u7b54:A", "\n***************************************************************************", "76,C++\u4e2d\u7684\u7c7b\u4e0e\u7ed3\u6784\u7684\u533a\u522b?", "77,\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u662f\u5426\u53ef\u4ee5\u88ab\u91cd\u8f7d,\u4e3a\u4ec0\u4e48?", "\n\u7b54\uff1a\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u88ab\u91cd\u8f7d\uff0c\u6790\u6784\u51fd\u6570\u4e0d\u53ef\u4ee5\u88ab\u91cd\u8f7d\u3002\u56e0\u4e3a\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u6709\u591a\u4e2a\u4e14\u53ef\u4ee5\u5e26\u53c2\u6570\uff0c\u800c\u6790\u6784\u51fd\u6570\u53ea\u80fd\u6709\u4e00\u4e2a\uff0c\u4e14\u4e0d\u80fd\u5e26\u53c2\u6570\u3002", "78,\u4e00\u4e2a\u7c7b\u7684\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u4ec0\u4e48\u65f6\u5019\u88ab\u8c03\u7528,\u662f\u5426\u9700\u8981\u624b\u5de5\u8c03\u7528?", "\n\u7b54\uff1a\u6784\u9020\u51fd\u6570\u5728\u521b\u5efa\u7c7b\u5bf9\u8c61\u7684\u65f6\u5019\u88ab\u81ea\u52a8\u8c03\u7528\uff0c\u6790\u6784\u51fd\u6570\u5728\u7c7b\u5bf9\u8c61\u751f\u547d\u671f\u7ed3\u675f\u65f6\uff0c\u7531\u7cfb\u7edf\u81ea\u52a8\u8c03\u7528\u3002", "1 \uff03i nclude \u201cfilename.h\u201d\u548c\uff03i nclude <filename.h>\u7684\u533a\u522b?", "\n\u7b54\uff1a\uff03i nclude \u201cfilename.h\u201d\u8868\u660e\u8be5\u6587\u4ef6\u662f\u7528\u6237\u63d0\u4f9b\u7684\u5934\u6587\u4ef6\uff0c\u67e5\u627e\u8be5\u6587\u4ef6\u65f6\u4ece\u5f53\u524d\u6587\u4ef6\u76ee\u5f55\u5f00\u59cb\uff1b\uff03i nclude <filename.h>\u8868\u660e\u8fd9\u4e2a\u6587\u4ef6\u662f\u4e00\u4e2a\u5de5\u7a0b\u6216\u6807\u51c6\u5934\u6587\u4ef6\uff0c\u67e5\u627e\u8fc7\u7a0b\u4f1a\u68c0\u67e5\u9884\u5b9a\u4e49\u7684\u76ee\u5f55\u3002", "2 \u5934\u6587\u4ef6\u7684\u4f5c\u7528\u662f\u4ec0\u4e48?", "\n\u7b54\uff1a\u4e00\u3001\u901a\u8fc7\u5934\u6587\u4ef6\u6765\u8c03\u7528\u5e93\u529f\u80fd\u3002\u5728\u5f88\u591a\u573a\u5408\uff0c\u6e90\u4ee3\u7801\u4e0d\u4fbf\uff08\u6216\u4e0d\u51c6\uff09\u5411\u7528\u6237\u516c\u5e03\uff0c\u53ea\u8981\u5411\u7528\u6237\u63d0\u4f9b\u5934\u6587\u4ef6\u548c\u4e8c\u8fdb\u5236\u7684\u5e93\u5373\u53ef\u3002\u7528\u6237\u53ea\u9700\u8981\u6309\u7167\u5934\u6587\u4ef6\u4e2d\u7684\u63a5\u53e3\u58f0\u660e\u6765\u8c03\u7528\u5e93\u529f\u80fd\uff0c\u800c\u4e0d\u5fc5\u5173\u5fc3\u63a5\u53e3\u600e\u4e48\u5b9e\u73b0\u7684\u3002\u7f16\u8bd1\u5668\u4f1a\u4ece\u5e93\u4e2d\u63d0\u53d6\u76f8\u5e94\u7684\u4ee3\u7801\u3002", "\n\u4e8c\u3001\u5934\u6587\u4ef6\u80fd\u52a0\u5f3a\u7c7b\u578b\u5b89\u5168\u68c0\u67e5\u3002\u5982\u679c\u67d0\u4e2a\u63a5\u53e3\u88ab\u5b9e\u73b0\u6216\u88ab\u4f7f\u7528\u65f6\uff0c\u5176\u65b9\u5f0f\u4e0e\u5934\u6587\u4ef6\u4e2d\u7684\u58f0\u660e\u4e0d\u4e00\u81f4\uff0c\u7f16\u8bd1\u5668\u5c31\u4f1a\u6307\u51fa\u9519\u8bef\uff0c\u8fd9\u4e00\u7b80\u5355\u7684\u89c4\u5219\u80fd\u5927\u5927\u51cf\u8f7b\u7a0b\u5e8f\u5458\u8c03\u8bd5\u3001\u6539\u9519\u7684\u8d1f\u62c5\u3002", "3 C++\u51fd\u6570\u4e2d\u503c\u7684\u4f20\u9012\u65b9\u5f0f\u6709\u54ea\u51e0\u79cd?", "\n\u7b54\uff1aC++\u51fd\u6570\u7684\u4e09\u79cd\u4f20\u9012\u65b9\u5f0f\u4e3a\uff1a\u503c\u4f20\u9012\u3001\u6307\u9488\u4f20\u9012\u548c\u5f15\u7528\u4f20\u9012\u3002", "4 \u5185\u5b58\u7684\u5206\u914d\u65b9\u5f0f\u7684\u5206\u914d\u65b9\u5f0f\u6709\u51e0\u79cd?", "\n\u7b54\uff1a\u4e00\u3001\u4ece\u9759\u6001\u5b58\u50a8\u533a\u57df\u5206\u914d\u3002\u5185\u5b58\u5728\u7a0b\u5e8f\u7f16\u8bd1\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u5206\u914d\u597d\uff0c\u8fd9\u5757\u5185\u5b58\u5728\u7a0b\u5e8f\u7684\u6574\u4e2a\u8fd0\u884c\u671f\u95f4\u90fd\u5b58\u5728\u3002\u4f8b\u5982\u5168\u5c40\u53d8\u91cf\u3002", "\n\u4e8c\u3001\u5728\u6808\u4e0a\u521b\u5efa\u3002\u5728\u6267\u884c\u51fd\u6570\u65f6\uff0c\u51fd\u6570\u5185\u5c40\u90e8\u53d8\u91cf\u7684\u5b58\u50a8\u5355\u5143\u90fd\u53ef\u4ee5\u5728\u6808\u4e0a\u521b\u5efa\uff0c\u51fd\u6570\u6267\u884c\u7ed3\u675f\u65f6\u8fd9\u4e9b\u5b58\u50a8\u5355\u5143\u81ea\u52a8\u88ab\u91ca\u653e\u3002\u6808\u5185\u5b58\u5206\u914d\u8fd0\u7b97\u5185\u7f6e\u4e8e\u5904\u7406\u5668\u7684\u6307\u4ee4\u96c6\u4e2d\uff0c\u6548\u7387\u5f88\u9ad8\uff0c\u4f46\u662f\u5206\u914d\u7684\u5185\u5b58\u5bb9\u91cf\u6709\u9650\u3002", "\n\u4e09\u3001\u4ece\u5806\u4e0a\u5206\u914d\uff0c\u4ea6\u79f0\u52a8\u6001\u5185\u5b58\u5206\u914d\u3002\u7a0b\u5e8f\u5728\u8fd0\u884c\u7684\u65f6\u5019\u7528malloc\u6216new\u7533\u8bf7\u4efb\u610f\u591a\u5c11\u7684\u5185\u5b58\uff0c\u7a0b\u5e8f\u5458\u81ea\u5df1\u8d1f\u8d23\u5728\u4f55\u65f6\u7528free\u6216delete\u91ca\u653e\u5185\u5b58\u3002\u52a8\u6001\u5185\u5b58\u7684\u751f\u5b58\u671f\u7531\u6211\u4eec\u51b3\u5b9a\uff0c\u4f7f\u7528\u975e\u5e38\u7075\u6d3b\uff0c\u4f46\u95ee\u9898\u4e5f\u6700\u591a\u3002", "5 \u5b9e\u73b0\u53cc\u5411\u94fe\u8868\u5220\u9664\u4e00\u4e2a\u8282\u70b9P\uff0c\u5728\u8282\u70b9P\u540e\u63d2\u5165\u4e00\u4e2a\u8282\u70b9\uff0c\u5199\u51fa\u8fd9\u4e24\u4e2a\u51fd\u6570;", "\n\u7b54\uff1a\u53cc\u5411\u94fe\u8868\u5220\u9664\u4e00\u4e2a\u8282\u70b9P", "\ntemplate<class type> void list<type>::delnode(int p)", "\n{", "\nint k=1;", "\nlistnode<type> *ptr,*t;", "\nptr=first;", "while(ptr->next!=NULL&&k!=p)", "\n{", "\nptr=ptr->next;", "\nk++;", "\n}", "\nt=ptr->next;", "\ncout<<\u201d\u4f60\u5df2\u7ecf\u5c06\u6570\u636e\u9879 \u201c<<t->data<<\u201d\u5220\u9664\u201d<<endl;", "ptr->next=ptr->next->next;", "\nlength\u2013;", "\ndelete t;", "\n}", "\u5728\u8282\u70b9P\u540e\u63d2\u5165\u4e00\u4e2a\u8282\u70b9\uff1a", "\ntemplate<class type> bool list<type>::insert(type t,int p)", "\n{", "\nlistnode<type> *ptr;", "\nptr=first;", "int k=1;", "\nwhile(ptr!=NULL&&k<p)", "\n{", "\nptr=ptr->next;", "\nk++;", "\n}", "\nif(ptr==NULL&&k!=p)", "\nreturn false;", "\nelse", "\n{", "\nlistnode<type> *tp;", "\ntp=new listnode<type>;", "\ntp->data=t;", "\ntp->next=ptr->next;", "\nptr->next=tp;", "\nlength++;", "return true;", "\n}", "\n}"], "title": "C++\u9762\u8bd5\u9898\u96c6\uff085\uff09"},
{"contents": [" \u53c2\u8003\u7b54\u6848\uff1a", "\n       #ifdef __cplusplus", "\n       cout\n       #else", "\n       cout\n       #endif"], "title": "\u5982\u4f55\u5224\u65ad\u4e00\u6bb5\u7a0b\u5e8f\u662f\u7531 C \u7f16\u8bd1\u7a0b\u5e8f\u8fd8\u662f\u7531 C++ \u7f16\u8bd1\u7a0b\u5e8f\u7f16\u8bd1\u7684?"},
{"contents": ["52. \u4ee5\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1f[STL\u6613]", "\ntypedef vector IntArray;", "\nIntArray array;", "\narray.push_back( 1 );", "\narray.push_back( 2 );", "\narray.push_back( 2 );", "\narray.push_back( 3 );", "\n// \u5220\u9664array\u6570\u7ec4\u4e2d\u6240\u6709\u76842", "\nfor( IntArray::iterator itor=array.begin(); itor!=array.end(); ++itor )", "\n{", "\nif( 2 == *itor ) array.erase( itor );", "\n}", "53. \u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u5b8c\u6210\u5185\u5b58\u4e4b\u95f4\u7684\u62f7\u8d1d\u3002[\u8003\u8651\u95ee\u9898\u662f\u5426\u5168\u9762]", "\n\u7b54\uff1a", "\nvoid* mymemcpy( void *dest, const void *src, size_t count )", "\n{", "\nchar* pdest = static_cast<char*>( dest );", "\nconst char* psrc = static_cast<const char*>( src );", "\nif( pdest>psrc && pdest<psrc+cout ) \u80fd\u8003\u8651\u5230\u8fd9\u79cd\u60c5\u51b5\u5c31\u884c\u4e86", "\n{", "\nfor( size_t i=count-1; i!=-1; \u2013i )", "\npdest[i] = psrc[i];", "\n}", "\nelse", "\n{", "\nfor( size_t i=0; i<count; ++i )", "\npdest[i] = psrc[i];", "\n}", "\nreturn dest;", "\n}", "\nint main( void )", "\n{", "\nchar str[] = \u201c0123456789\u2033;", "\nmymemcpy( str+1, str+0, 9 );", "\ncout << str << endl;", "system( \u201cPause\u201d );", "\nreturn 0;", "\n}", "54 \u7ebf\u7a0b\u4e0e\u8fdb\u7a0b\u7684\u533a\u522b", "55\uff1a\u8bf7\u4f60\u5206\u522b\u5212\u5212OSI\u7684\u4e03\u5c42\u7f51\u7edc\u7ed3\u6784\u56fe\uff0c\u548cTCP/IP\u7684\u4e94\u5c42\u7ed3\u6784\u56fe\uff1f", "56\uff1a\u8bf7\u4f60\u8be6\u7ec6\u7684\u89e3\u91ca\u4e00\u4e0bIP\u534f\u8bae\u7684\u5b9a\u4e49\uff0c\u5728\u54ea\u4e2a\u5c42\u4e0a\u9762\uff0c\u4e3b\u8981\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f TCP\u4e0eUDP\u5462\uff1f", "\nIP\u534f\u8bae\u662f\u7f51\u7edc\u5c42\u7684\u534f\u8bae\uff0c\u5b83\u5b9e\u73b0\u4e86Internet\u4e2d\u81ea\u52a8\u8def\u7531\u7684\u529f\u80fd\uff0c\u5373\u5bfb\u5f84\u7684\u529f\u80fd\uff0cTCP\u534f\u8bae\u662f\u4e00\u4e2a\u4f20\u8f93\u6027\u7684\u534f\u8bae\u5b83\u5411\u4e0b\u5c4f\u853d\u4e86IP\u534f\u8bae\u4e0d\u53ef\u9760\u4f20\u8f93\u7684\u7279\u6027\uff0c\u5411\u4e0a\u63d0\u4f9b\u4e00\u4e2a\u53ef\u9760\u7684\u70b9\u5230\u70b9\u7684\u4f20\u8f93\uff0cUDP\u63d0\u4f9b\u7684\u662f\u4e00\u79cd\u65e0\u8fde\u63a5\u7684\u670d\u52a1,\u4e3b\u8981\u8003\u8651\u5230\u5f88\u591a\u5e94\u7528\u4e0d\u9700\u8981\u53ef\u9760\u7684\u8fde\u63a5\uff0c\u4f46\u9700\u8981\u5feb\u901f\u7684\u4f20\u8f93", "57\uff1a\u8bf7\u95ee\u4ea4\u6362\u673a\u548c\u8def\u7531\u5668\u5206\u522b\u7684\u5b9e\u73b0\u539f\u7406\u662f\u4ec0\u4e48\uff1f\u5206\u522b\u5728\u54ea\u4e2a\u5c42\u6b21\u4e0a\u9762\u5b9e\u73b0\u7684\uff1f", "\n\u4ea4\u6362\u673a\u7528\u5728\u5c40\u57df\u7f51\u4e2d\uff0c\u4ea4\u6362\u673a\u901a\u8fc7\u7eaa\u5f55\u5c40\u57df\u7f51\u5185\u5404\u8282\u70b9\u673a\u5668\u7684MAC\u5730\u8d28(\u7269\u7406\u5730\u5740)\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4f20\u9012\u62a5\u6587,\u65e0\u9700\u770b\u62a5\u6587\u4e2d\u7684IP\u5730\u8d28\u3002\u8def\u7531\u5668\u8bc6\u522b\u4e0d\u540c\u7f51\u7edc\u7684\u65b9\u6cd5\u662f\u901a\u8fc7\u8bc6\u522b\u4e0d\u540c\u7f51\u7edc\u7684\u7f51\u7edcID\u53f7(IP\u5730\u5740\u7684\u9ad8\u7aef\u90e8\u5206)\u8fdb\u884c\u7684\uff0c\u6240\u4ee5\u4e3a\u4e86\u4fdd\u8bc1\u8def\u7531\u6210\u529f\uff0c\u6bcf\u4e2a\u7f51\u7edc\u90fd\u5fc5\u987b\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u7f51\u7edc\u7f16\u53f7\u3002\u8def\u7531\u5668\u901a\u8fc7\u5bdf\u770b\u62a5\u6587\u4e2dIP\u5730\u5740\uff0c\u6765\u51b3\u5b9a\u8def\u5f84\uff0c\u5411\u90a3\u4e2a\u5b50\u7f51(\u4e0b\u4e00\u8df3)\u8def\u7531\uff0c\u4e5f\u5c31\u662f\u8bf4\u4ea4\u6362\u673a\u5de5\u4f5c\u5728\u6570\u636e\u94fe\u8def\u5c42\u770bMAC\u5730\u5740\uff0c\u8def\u7531\u5668\u5de5\u4f5c\u5728\u7f51\u9645\u5c42\u770bIP\u5730\u8d28", "\n\u4f46\u662f\u7531\u4e8e\u73b0\u5728\u7f51\u7edc\u8bbe\u5907\u7684\u53d1\u5c55\uff0c\u5f88\u591a\u8bbe\u5907\u65e2\u6709\u4ea4\u6362\u673a\u7684\u529f\u80fd\u6709\u7531\u8def\u7531\u5668\u7684\u529f\u80fd(\u4ea4\u6362\u8bd5\u8def\u7531\u5668)\u4f7f\u5f97\u4e24\u8005\u754c\u9650\u8d8a\u6765\u8d8a\u6a21\u7cca\u3002", "58:\u8bf7\u95eeC++\u7684\u7c7b\u548cC\u91cc\u9762\u7684struct\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "59:\u8bf7\u8bb2\u4e00\u8bb2\u6790\u6784\u51fd\u6570\u548c\u865a\u51fd\u6570\u7684\u7528\u6cd5\u548c\u4f5c\u7528\uff1f", "60:\u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1f\u5b9e\u600e\u4e48\u5b9e\u73b0\u7684\uff1f\u64cd\u4f5c\u7cfb\u7edf\u548c\u7f16\u8bd1\u5668\u662f\u600e\u4e48\u77e5\u9053\u7684\uff1f", "\n\u5168\u5c40\u53d8\u91cf\u662f\u6574\u4e2a\u7a0b\u5e8f\u90fd\u53ef\u8bbf\u95ee\u7684\u53d8\u91cf\uff0c\u8c01\u90fd\u53ef\u4ee5\u8bbf\u95ee\uff0c\u751f\u5b58\u671f\u5728\u6574\u4e2a\u7a0b\u5e8f\u4ece\u8fd0\u884c\u5230\u7ed3\u675f(\u5728\u7a0b\u5e8f\u7ed3\u675f\u65f6\u6240\u5360\u5185\u5b58\u91ca\u653e)\uff0c\u800c\u5c40\u90e8\u53d8\u91cf\u5b58\u5728\u4e8e\u6a21\u5757(\u5b50\u7a0b\u5e8f\uff0c\u51fd\u6570)\u4e2d\uff0c\u53ea\u6709\u6240\u5728\u6a21\u5757\u53ef\u4ee5\u8bbf\u95ee\uff0c\u5176\u4ed6\u6a21\u5757\u4e0d\u53ef\u76f4\u63a5\u8bbf\u95ee\uff0c\u6a21\u5757\u7ed3\u675f(\u51fd\u6570\u8c03\u7528\u5b8c\u6bd5)\uff0c\u5c40\u90e8\u53d8\u91cf\u6d88\u5931\uff0c\u6240\u5360\u636e\u7684\u5185\u5b58\u91ca\u653e\u3002", "\n\u5168\u5c40\u53d8\u91cf\u5206\u914d\u5728\u5168\u5c40\u6570\u636e\u6bb5\u5e76\u4e14\u5728\u7a0b\u5e8f\u5f00\u59cb\u8fd0\u884c\u7684\u65f6\u5019\u88ab\u52a0\u8f7d. \u5c40\u90e8\u53d8\u91cf\u5219\u5206\u914d\u5728\u5806\u6808\u91cc\u9762\u3002", "61:\u4e00\u4e9b\u5bc4\u5b58\u5668\u7684\u9898\u76ee\uff0c\u4e3b\u8981\u662f\u5bfb\u5740\u548c\u5185\u5b58\u7ba1\u7406\u7b49\u4e00\u4e9b\u77e5\u8bc6\u3002", "2\u3001\u4ea4\u6362\u673a\u7528\u5728\u5c40\u57df\u7f51\u4e2d\uff0c\u4ea4\u6362\u673a\u901a\u8fc7\u7eaa\u5f55\u5c40\u57df\u7f51\u5185\u5404\u8282\u70b9\u673a\u5668\u7684MAC\u5730\u8d28(\u7269\u7406\u5730\u5740)\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4f20\u9012\u62a5\u6587,\u65e0\u9700\u770b\u62a5\u6587\u4e2d\u7684IP\u5730\u8d28\u3002\u8def\u7531\u5668\u8bc6\u522b\u4e0d\u540c\u7f51\u7edc\u7684\u65b9\u6cd5\u662f\u901a\u8fc7\u8bc6\u522b\u4e0d\u540c\u7f51\u7edc\u7684\u7f51\u7edcID\u53f7(IP\u5730\u5740\u7684\u9ad8\u7aef\u90e8\u5206)\u8fdb\u884c\u7684\uff0c\u6240\u4ee5\u4e3a\u4e86\u4fdd\u8bc1\u8def\u7531\u6210\u529f\uff0c\u6bcf\u4e2a\u7f51\u7edc\u90fd\u5fc5\u987b\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u7f51\u7edc\u7f16\u53f7\u3002\u8def\u7531\u5668\u901a\u8fc7\u5bdf\u770b\u62a5\u6587\u4e2dIP\u5730\u5740\uff0c\u6765\u51b3\u5b9a\u8def\u5f84\uff0c\u5411\u90a3\u4e2a\u5b50\u7f51(\u4e0b\u4e00\u8df3)\u8def\u7531\uff0c\u4e5f\u5c31\u662f\u8bf4\u4ea4\u6362\u673a\u5de5\u4f5c\u5728\u6570\u636e\u94fe\u8def\u5c42\u770bMAC\u5730\u5740\uff0c\u8def\u7531\u5668\u5de5\u4f5c\u5728\u7f51\u9645\u5c42\u770bIP\u5730\u8d28", "\n\u4f46\u662f\u7531\u4e8e\u73b0\u5728\u7f51\u7edc\u8bbe\u5907\u7684\u53d1\u5c55\uff0c\u5f88\u591a\u8bbe\u5907\u65e2\u6709\u4ea4\u6362\u673a\u7684\u529f\u80fd\u6709\u7531\u8def\u7531\u5668\u7684\u529f\u80fd(\u4ea4\u6362\u8bd5\u8def\u7531\u5668)\u4f7f\u5f97\u4e24\u8005\u754c\u9650\u8d8a\u6765\u8d8a\u6a21\u7cca\u3002", "\n3\u3001IP\u534f\u8bae\u662f\u7f51\u7edc\u5c42\u7684\u534f\u8bae\uff0c\u5b83\u5b9e\u73b0\u4e86Internet\u4e2d\u81ea\u52a8\u8def\u7531\u7684\u529f\u80fd\uff0c\u5373\u5bfb\u5f84\u7684\u529f\u80fd\uff0cTCP\u534f\u8bae\u662f\u4e00\u4e2a\u4f20\u8f93\u6027\u7684\u534f\u8bae\u5b83\u5411\u4e0b\u5c4f\u853d\u4e86IP\u534f\u8bae\u4e0d\u53ef\u9760\u4f20\u8f93\u7684\u7279\u6027\uff0c\u5411\u4e0a\u63d0\u4f9b\u4e00\u4e2a\u53ef\u9760\u7684\u70b9\u5230\u70b9\u7684\u4f20\u8f93\uff0cUDP\u63d0\u4f9b\u7684\u662f\u4e00\u79cd\u65e0\u8fde\u63a5\u7684\u670d\u52a1,\u4e3b\u8981\u8003\u8651\u5230\u5f88\u591a\u5e94\u7528\u4e0d\u9700\u8981\u53ef\u9760\u7684\u8fde\u63a5\uff0c\u4f46\u9700\u8981\u5feb\u901f\u7684\u4f20\u8f93", "\n4\u3001", "\nTest b();//\u5b9a\u4e49\u4e86\u4e00\u4e2a\u51fd\u6570"], "title": "C++\u9762\u8bd5\u9898\u96c6\uff084\uff09"},
{"contents": ["1 \uff03i nclude \u201cfilename.h\u201d\u548c\uff03i nclude <filename.h>\u7684\u533a\u522b?", "\n\u7b54\uff1a\u5bf9\u4e8e\uff03i nclude <filename.h>\u7f16\u8bd1\u5668\u4ece\u6807\u51c6\u5e93\u5f00\u59cb\u641c\u7d22filename.h", "\n\u5bf9\u4e8e\uff03i nclude \u201cfilename.h\u201d\u7f16\u8bd1\u5668\u4ece\u7528\u6237\u5de5\u4f5c\u8def\u5f84\u5f00\u59cb\u641c\u7d22filename.h", "\n2 \u5934\u6587\u4ef6\u7684\u4f5c\u7528\u662f\u4ec0\u4e48?", "\n\u7b54\uff1a\u4e00\u3001\u901a\u8fc7\u5934\u6587\u4ef6\u6765\u8c03\u7528\u5e93\u529f\u80fd\u3002\u5728\u5f88\u591a\u573a\u5408\uff0c\u6e90\u4ee3\u7801\u4e0d\u4fbf\uff08\u6216\u4e0d\u51c6\uff09\u5411\u7528\u6237\u516c\u5e03\uff0c\u53ea\u8981\u5411\u7528\u6237\u63d0\u4f9b\u5934\u6587\u4ef6\u548c\u4e8c\u8fdb\u5236\u7684\u5e93\u5373\u53ef\u3002\u7528\u6237\u53ea\u9700", "\n\u8981\u6309\u7167\u5934\u6587\u4ef6\u4e2d\u7684\u63a5\u53e3\u58f0\u660e\u6765\u8c03\u7528\u5e93\u529f\u80fd\uff0c\u800c\u4e0d\u5fc5\u5173\u5fc3\u63a5\u53e3\u600e\u4e48\u5b9e\u73b0\u7684\u3002\u7f16\u8bd1\u5668\u4f1a\u4ece\u5e93\u4e2d\u63d0\u53d6\u76f8\u5e94\u7684\u4ee3\u7801\u3002", "\n\u4e8c\u3001\u5934\u6587\u4ef6\u80fd\u52a0\u5f3a\u7c7b\u578b\u5b89\u5168\u68c0\u67e5\u3002\u5982\u679c\u67d0\u4e2a\u63a5\u53e3\u88ab\u5b9e\u73b0\u6216\u88ab\u4f7f\u7528\u65f6\uff0c\u5176\u65b9\u5f0f\u4e0e\u5934\u6587\u4ef6\u4e2d\u7684\u58f0\u660e\u4e0d\u4e00\u81f4\uff0c\u7f16\u8bd1\u5668\u5c31\u4f1a\u6307\u51fa\u9519\u8bef\uff0c\u8fd9\u4e00\u7b80\u5355\u7684\u89c4", "\n\u5219\u80fd\u5927\u5927\u51cf\u8f7b\u7a0b\u5e8f\u5458\u8c03\u8bd5\u3001\u6539\u9519\u7684\u8d1f\u62c5\u3002", "\n3 C++\u51fd\u6570\u4e2d\u503c\u7684\u4f20\u9012\u65b9\u5f0f\u6709\u54ea\u51e0\u79cd?", "\n\u7b54\uff1aC++\u51fd\u6570\u7684\u4e09\u79cd\u4f20\u9012\u65b9\u5f0f\u4e3a\uff1a\u503c\u4f20\u9012\u3001\u6307\u9488\u4f20\u9012\u548c\u5f15\u7528\u4f20\u9012\u3002", "\n4 \u5185\u5b58\u7684\u5206\u914d\u65b9\u5f0f\u7684\u5206\u914d\u65b9\u5f0f\u6709\u51e0\u79cd?", "\n\u7b54\uff1a\u4e00\u3001\u4ece\u9759\u6001\u5b58\u50a8\u533a\u57df\u5206\u914d\u3002\u5185\u5b58\u5728\u7a0b\u5e8f\u7f16\u8bd1\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u5206\u914d\u597d\uff0c\u8fd9\u5757\u5185\u5b58\u5728\u7a0b\u5e8f\u7684\u6574\u4e2a\u8fd0\u884c\u671f\u95f4\u90fd\u5b58\u5728\u3002\u4f8b\u5982\u5168\u5c40\u53d8\u91cf\u3002", "\n\u4e8c\u3001\u5728\u6808\u4e0a\u521b\u5efa\u3002\u5728\u6267\u884c\u51fd\u6570\u65f6\uff0c\u51fd\u6570\u5185\u5c40\u90e8\u53d8\u91cf\u7684\u5b58\u50a8\u5355\u5143\u90fd\u53ef\u4ee5\u5728\u6808\u4e0a\u521b\u5efa\uff0c\u51fd\u6570\u6267\u884c\u7ed3\u675f\u65f6\u8fd9\u4e9b\u5b58\u50a8\u5355\u5143\u81ea\u52a8\u88ab\u91ca\u653e\u3002\u6808\u5185", "\n\u5b58\u5206\u914d\u8fd0", "\n\u7b97\u5185\u7f6e\u4e8e\u5904\u7406\u5668\u7684\u6307\u4ee4\u96c6\u4e2d\uff0c\u6548\u7387\u5f88\u9ad8\uff0c\u4f46\u662f\u5206\u914d\u7684\u5185\u5b58\u5bb9\u91cf\u6709\u9650\u3002", "\n\u4e09\u3001\u4ece\u5806\u4e0a\u5206\u914d\uff0c\u4ea6\u79f0\u52a8\u6001\u5185\u5b58\u5206\u914d\u3002\u7a0b\u5e8f\u5728\u8fd0\u884c\u7684\u65f6\u5019\u7528malloc\u6216new\u7533\u8bf7\u4efb\u610f\u591a\u5c11\u7684\u5185\u5b58\uff0c\u7a0b\u5e8f\u5458\u81ea\u5df1\u8d1f\u8d23\u5728\u4f55\u65f6\u7528free", "\n\u6216delete\u91ca\u653e", "\n\u5185\u5b58\u3002\u52a8\u6001\u5185\u5b58\u7684\u751f\u5b58\u671f\u7531\u6211\u4eec\u51b3\u5b9a\uff0c\u4f7f\u7528\u975e\u5e38\u7075\u6d3b\uff0c\u4f46\u95ee\u9898\u4e5f\u6700\u591a\u3002", "5 \u5b9e\u73b0\u53cc\u5411\u94fe\u8868\u5220\u9664\u4e00\u4e2a\u8282\u70b9P\uff0c\u5728\u8282\u70b9P\u540e\u63d2\u5165\u4e00\u4e2a\u8282\u70b9\uff0c\u5199\u51fa\u8fd9\u4e24\u4e2a\u51fd\u6570;", "\n\u7b54\uff1a\u53cc\u5411\u94fe\u8868\u5220\u9664\u4e00\u4e2a\u8282\u70b9P", "\ntemplate<class type> void list<type>::delnode(int p)", "\n{", "\nint k=1;", "\nlistnode<type> *ptr,*t;", "\nptr=first;", "while(ptr->next!=NULL&&k!=p)", "\n{", "\nptr=ptr->next;", "\nk++;", "\n}", "\nt=ptr->next;", "\ncout<<\u201d\u4f60\u5df2\u7ecf\u5c06\u6570\u636e\u9879 \u201c<<t->data<<\u201d\u5220\u9664\u201d<<endl;", "ptr->next=ptr->next->next;", "\nlength\u2013;", "\ndelete t;", "\n}", "\u5728\u8282\u70b9P\u540e\u63d2\u5165\u4e00\u4e2a\u8282\u70b9\uff1a", "\ntemplate<class type> bool list<type>::insert(type t,int p)", "\n{", "\nlistnode<type> *ptr;", "\nptr=first;", "int k=1;", "\nwhile(ptr!=NULL&&k<p)", "\n{", "\nptr=ptr->next;", "\nk++;", "\n}", "\nif(ptr==NULL&&k!=p)", "\nreturn false;", "\nelse", "\n{", "\nlistnode<type> *tp;", "\ntp=new listnode<type>;", "\ntp->data=t;", "\ntp->next=ptr->next;", "\nptr->next=tp;", "\nlength++;", "return true;", "\n}", "\n}", "6 \u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u5c06\u5176\u4e2d\u7684\\t\u90fd\u8f6c\u6362\u62104\u4e2a\u7a7a\u683c\u3002", "\nvoid change(char* pstr)", "\n{", "\nwhile(*pstr++ != \u2018\\0\u2032)", "\n{", "\nif (*pstr == \u2018\\t\u2019)", "}", "\n}", "7 Windows\u7a0b\u5e8f\u7684\u5165\u53e3\u662f\u54ea\u91cc\uff1f\u5199\u51faWindows\u6d88\u606f\u673a\u5236\u7684\u6d41\u7a0b.", "8 \u5982\u4f55\u5b9a\u4e49\u548c\u5b9e\u73b0\u4e00\u4e2a\u7c7b\u7684\u6210\u5458\u51fd\u6570\u4e3a\u56de\u8c03\u51fd\u6570\uff1f", "9 C++\u91cc\u9762\u662f\u4e0d\u662f\u6240\u6709\u7684\u52a8\u4f5c\u90fd\u662fmain()\u5f15\u8d77\u7684\uff1f\u5982\u679c\u4e0d\u662f\uff0c\u8bf7\u4e3e\u4f8b.", "\n\u7b54\uff1a\u5728\u8fd0\u884cc++\u7a0b\u5e8f\u65f6\uff0c\u901a\u5e38\u4ecemain()\u51fd\u6570\u5f00\u59cb\u6267\u884c\u3002\u56e0\u6b64\u5982\u679c\u6ca1\u6709main(),\u7a0b\u5e8f\u5c06\u4e0d\u5b8c\u6574\uff0c\u7f16\u8bd1\u5668\u5c06\u6307\u51fa\u672a\u5b9a\u4e49main()\u51fd\u6570\u3002", "\n\u4f8b\u5916\u60c5\u51b5\uff1a\u5982\uff0c \u5728windows\u7f16\u7a0b\u4e2d\uff0c\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a\u52a8\u6001\u8fde\u63a5\u5e93\uff08dll)\u6a21\u5757\uff0c\u8fd9\u662f\u5176\u4ed6windows\u7a0b\u5e8f\u53ef\u4ee5\u4f7f\u7528\u7684\u4ee3\u7801\u3002\u7531\u4e8e", "\nDLL\u6a21\u5757\u4e0d\u662f\u72ec\u7acb\u7684\u7a0b\u5e8f\uff0c\u56e0\u6b64\u4e0d\u9700\u8981main().\u7528\u4e8e\u4e13\u7528\u73af\u5883\u7684\u7a0b\u5e8f\u2013\u5982\u673a\u5668\u4eba\u4e2d\u7684\u63a7\u5236\u5668\u82af\u7247\u2013\u53ef\u80fd\u4e0d\u9700\u8981main().\u4f46\u5e38\u89c4\u7684", "\n\u72ec\u7acb\u7a0b\u5e8f\u90fd\u9700\u8981main().", "10 C++\u91cc\u9762\u5982\u4f55\u58f0\u660econst void f(void)\u51fd\u6570\u4e3aC\u7a0b\u5e8f\u4e2d\u7684\u5e93\u51fd\u6570\uff1f"], "title": "C++\u9762\u8bd5\u9898\u96c6\uff081\uff09"},
{"contents": ["39\uff0e\u89e3\u91ca\u5c40\u90e8\u53d8\u91cf\u3001\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\u7684\u542b\u4e49\u3002", "40\uff0e\u89e3\u91ca\u5806\u548c\u6808\u7684\u533a\u522b\u3002", "\n\u6808\u533a\uff08stack\uff09\u2014 \u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u5206\u914d\u91ca\u653e \uff0c\u5b58\u653e\u51fd\u6570\u7684\u53c2\u6570\u503c\uff0c\u5c40\u90e8\u53d8\u91cf\u7684\u503c\u7b49\u3002\u5176\u64cd\u4f5c\u65b9\u5f0f\u7c7b\u4f3c\u4e8e\u6570\u636e\u7ed3\u6784\u4e2d\u7684\u6808\u3002", "\n\u5806:\u4e00\u822c\u7531\u7a0b\u5e8f\u5458\u5206\u914d\u91ca\u653e\uff0c \u82e5\u7a0b\u5e8f\u5458\u4e0d\u91ca\u653e\uff0c\u7a0b\u5e8f\u7ed3\u675f\u65f6\u53ef\u80fd\u7531OS\u56de\u6536 \u3002\u6ce8\u610f\u5b83\u4e0e\u6570\u636e\u7ed3\u6784\u4e2d\u7684\u5806\u662f\u4e24\u56de\u4e8b\uff0c\u5206\u914d\u65b9\u5f0f\u5012\u662f\u7c7b\u4f3c\u4e8e", "\n\u94fe\u8868.", "41\uff0e\u8bba\u8ff0\u542b\u53c2\u6570\u7684\u5b8f\u4e0e\u51fd\u6570\u7684\u4f18\u7f3a\u70b9\u3002", "42. \u4ee5\u4e0b\u4e09\u6761\u8f93\u51fa\u8bed\u53e5\u5206\u522b\u8f93\u51fa\u4ec0\u4e48\uff1f[C\u6613]", "\nchar str1[] = \u201cabc\u201d;", "\nchar str2[] = \u201cabc\u201d;", "\nconst char str3[] = \u201cabc\u201d;", "\nconst char str4[] = \u201cabc\u201d;", "\nconst char* str5 = \u201cabc\u201d;", "\nconst char* str6 = \u201cabc\u201d;", "\ncout << boolalpha << ( str1==str2 ) << endl; // \u8f93\u51fa\u4ec0\u4e48\uff1f", "\ncout << boolalpha << ( str3==str4 ) << endl; // \u8f93\u51fa\u4ec0\u4e48\uff1f", "\ncout << boolalpha << ( str5==str6 ) << endl; // \u8f93\u51fa\u4ec0\u4e48\uff1f", "43. \u975eC++\u5185\u5efa\u578b\u522b A \u548c B\uff0c\u5728\u54ea\u51e0\u79cd\u60c5\u51b5\u4e0bB\u80fd\u9690\u5f0f\u8f6c\u5316\u4e3aA\uff1f[C++\u4e2d\u7b49]", "\n\u7b54\uff1a", "\na. class B : public A { \u2026\u2026} // B\u516c\u6709\u7ee7\u627f\u81eaA\uff0c\u53ef\u4ee5\u662f\u95f4\u63a5\u7ee7\u627f\u7684", "\nb. class B { operator A( ); } // B\u5b9e\u73b0\u4e86\u9690\u5f0f\u8f6c\u5316\u4e3aA\u7684\u8f6c\u5316", "\nc. class A { A( const B& ); } // A\u5b9e\u73b0\u4e86non-explicit\u7684\u53c2\u6570\u4e3aB\uff08\u53ef\u4ee5\u6709\u5176\u4ed6\u5e26\u9ed8\u8ba4\u503c\u7684\u53c2\u6570\uff09\u6784\u9020\u51fd\u6570", "\nd. A& operator= ( const A& ); // \u8d4b\u503c\u64cd\u4f5c\uff0c\u867d\u4e0d\u662f\u6b63\u5b97\u7684\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\uff0c\u4f46\u4e5f\u53ef\u4ee5\u52c9\u5f3a\u7b97\u4e00\u4e2a", "44. \u4ee5\u4e0b\u4ee3\u7801\u4e2d\u7684\u4e24\u4e2asizeof\u7528\u6cd5\u6709\u95ee\u9898\u5417\uff1f[C\u6613]", "\nvoid UpperCase( char str[] ) // \u5c06 str \u4e2d\u7684\u5c0f\u5199\u5b57\u6bcd\u8f6c\u6362\u6210\u5927\u5199\u5b57\u6bcd", "\n{", "\nfor( size_t i=0; i<sizeof(str)/sizeof(str[0]); ++i )", "\nif( \u2018a\u2019<=str[i] && str[i]<=\u2019z\u2019 )", "\nstr[i] -= (\u2018a\u2019-'A\u2019 );", "\n}", "\nchar str[] = \u201caBcDe\u201d;", "\ncout << \u201cstr\u5b57\u7b26\u957f\u5ea6\u4e3a: \u201d << sizeof(str)/sizeof(str[0]) << endl;", "\nUpperCase( str );", "\ncout << str << endl;", "45. \u4ee5\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1f[C\u96be]", "\nvoid char2Hex( char c ) // \u5c06\u5b57\u7b26\u4ee516\u8fdb\u5236\u8868\u793a", "\n{", "\nchar ch = c/0\u00d710 + \u20190\u2032; if( ch > \u20199\u2032 ) ch += (\u2018A\u2019-\u20199\u2032-1);", "\nchar cl = c%0\u00d710 + \u20190\u2032; if( cl > \u20199\u2032 ) cl += (\u2018A\u2019-\u20199\u2032-1);", "\ncout << ch << cl << \u2018 \u2018;", "\n}", "\nchar str[] = \u201cI love \u4e2d\u56fd\u201d;", "\nfor( size_t i=0; i<strlen(str); ++i )", "\nchar2Hex( str[i] );", "\ncout << endl;", "46. \u4ee5\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1f[C++\u6613]", "\nstruct Test", "\n{", "\nTest( int ) {}", "\nTest() {}", "\nvoid fun() {}", "\n};", "\nvoid main( void )", "\n{", "\nTest a(1);", "\na.fun();", "\nTest b();", "\nb.fun();", "\n}", "\n*** Test b();//\u5b9a\u4e49\u4e86\u4e00\u4e2a\u51fd\u6570", "47. \u4ee5\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1f[C++\u6613]", "\ncout << (true?1:\u201d1\u2033) << endl;", "8. \u4ee5\u4e0b\u4ee3\u7801\u80fd\u591f\u7f16\u8bd1\u901a\u8fc7\u5417\uff0c\u4e3a\u4ec0\u4e48\uff1f[C++\u6613]", "\nunsigned int const size1 = 2;", "\nchar str1[ size1 ];", "\nunsigned int temp = 0;", "\ncin >> temp;", "\nunsigned int const size2 = temp;", "\nchar str2[ size2 ];", "48. \u4ee5\u4e0b\u4ee3\u7801\u4e2d\u7684\u8f93\u51fa\u8bed\u53e5\u8f93\u51fa0\u5417\uff0c\u4e3a\u4ec0\u4e48\uff1f[C++\u6613]", "\nstruct CLS", "\n{", "\nint m_i;", "\nCLS( int i ) : m_i(i) {}", "\nCLS()", "\n{", "\nCLS(0);", "\n}", "\n};", "\nCLS obj;", "\ncout << obj.m_i << endl;", "49. C++\u4e2d\u7684\u7a7a\u7c7b\uff0c\u9ed8\u8ba4\u4ea7\u751f\u54ea\u4e9b\u7c7b\u6210\u5458\u51fd\u6570\uff1f[C++\u6613]", "\n\u7b54\uff1a", "\nclass Empty", "\n{", "\npublic:", "\nEmpty(); // \u7f3a\u7701\u6784\u9020\u51fd\u6570", "\nEmpty( const Empty& ); // \u62f7\u8d1d\u6784\u9020\u51fd\u6570", "\n~Empty(); // \u6790\u6784\u51fd\u6570", "\nEmpty& operator=( const Empty& ); // \u8d4b\u503c\u8fd0\u7b97\u7b26", "\nEmpty* operator&(); // \u53d6\u5740\u8fd0\u7b97\u7b26", "\nconst Empty* operator&() const; // \u53d6\u5740\u8fd0\u7b97\u7b26 const", "\n};", "50. \u4ee5\u4e0b\u4e24\u6761\u8f93\u51fa\u8bed\u53e5\u5206\u522b\u8f93\u51fa\u4ec0\u4e48\uff1f[C++\u96be]", "\nfloat a = 1.0f;", "\ncout << (int)a << endl;", "\ncout << (int&)a << endl;", "\ncout << boolalpha << ( (int)a == (int&)a ) << endl; // \u8f93\u51fa\u4ec0\u4e48\uff1f", "\nfloat b = 0.0f;", "\ncout << (int)b << endl;", "\ncout << (int&)b << endl;", "\ncout << boolalpha << ( (int)b == (int&)b ) << endl; // \u8f93\u51fa\u4ec0\u4e48\uff1f", "51. \u4ee5\u4e0b\u53cd\u5411\u904d\u5386array\u6570\u7ec4\u7684\u65b9\u6cd5\u6709\u4ec0\u4e48\u9519\u8bef\uff1f[STL\u6613]", "\nvector array;", "\narray.push_back( 1 );", "\narray.push_back( 2 );", "\narray.push_back( 3 );", "\nfor( vector::size_type i=array.size()-1; i>=0; \u2013i ) // \u53cd\u5411\u904d\u5386array\u6570\u7ec4", "\n{", "\ncout << array[i] << endl;", "\n}"], "title": "C++\u9762\u8bd5\u9898\u96c6\uff083\uff09"},
{"contents": ["1.\u4ecb\u7ecd\u4e00\u4e0bSTL\uff0c\u8be6\u7ec6\u8bf4\u660eSTL\u5982\u4f55\u5b9e\u73b0vector\u3002", "\n2.\u5982\u679c\u7528VC\u5f00\u53d1\u7a0b\u5e8f\uff0c\u5e38\u89c1\u8fd9\u4e48\u51e0\u4e2a\u9519\u8bef\uff0cC2001,c2005,c2011,\u8fd9\u4e9b\u9519\u8bef\u7684\u539f\u56e0\u662f\u4ec0\u4e48\u3002", "\n3.\u7ee7\u627f\u548c\u59d4\u6d3e\u6709\u4ec0\u4e48\u5206\u522b\uff0c\u5728\u51b3\u5b9a\u4f7f\u7528\u7ee7\u627f\u6216\u8005\u59d4\u6d3e\u7684\u65f6\u5019\u9700\u8981\u8003\u8651\u4ec0\u4e48\u3002", "\n4.\u6307\u9488\u548c\u5f15\u7528\u6709\u4ec0\u4e48\u5206\u522b\uff1b\u5982\u679c\u4f20\u5f15\u7528\u6bd4\u4f20\u6307\u9488\u5b89\u5168\uff0c\u4e3a\u4ec0\u4e48\uff1f\u5982\u679c\u6211\u4f7f\u7528\u5e38\u91cf\u6307\u9488\u96be\u9053\u4e0d\u884c\u5417\uff1f", "\n5.\u53c2\u6570\u4f20\u9012\u6709\u51e0\u79cd\u65b9\u5f0f\uff1b\u5b9e\u73b0\u591a\u6001\u53c2\u6570\u4f20\u9012\u91c7\u7528\u4ec0\u4e48\u65b9\u5f0f\uff0c\u5982\u679c\u6ca1\u6709\u4f7f\u7528\u67d0\u79cd\u65b9\u5f0f\u539f\u56e0\u662f\u4ec0\u4e48\uff1b", "\n6.\u7ed3\u5408\u4e00\u4e2a\u9879\u76ee\u8bf4\u660e\u4f60\u600e\u6837\u5e94\u7528\u8bbe\u8ba1\u6a21\u5f0f\u7684\u7406\u5ff5\u3002", "\n7.\u4ecb\u7ecd\u4e00\u4e0b\u4f60\u5bf9\u8bbe\u8ba1\u6a21\u5f0f\u7684\u7406\u89e3\u3002\uff08\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u6709\u5f88\u591a\u5f88\u7ec6\u8282\u7684\u95ee\u9898\u968f\u673a\u95ee\u7684\uff09", "\n8.C++\u548cC\u5b9a\u4e49\u7ed3\u6784\u7684\u5206\u522b\u662f\u4ec0\u4e48\u3002", "\n9.\u6784\u9020\u51fd\u6570\u53ef\u5426\u662f\u865a\u6c57\u6570\uff0c\u4e3a\u4ec0\u4e48\uff1f\u6790\u6784\u51fd\u6570\u5462\uff0c\u53ef\u5426\u662f\u7eaf\u865a\u7684\u5462\uff1f", "\n10\uff0c\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u76f8\u5173\u95ee\u9898\uff0c\u6df1\u62f7\u8d1d\uff0c\u6d45\u62f7\u8d1d\uff0c\u4e34\u65f6\u5bf9\u8c61\u7b49\u3002", "\n11.\u7ed3\u54081\u4e2a\u4f60\u8ba4\u4e3a\u6bd4\u8f83\u80fd\u4f53\u73b0OOP\u601d\u60f3\u7684\u9879\u76ee\uff0c\u7528UML\u6765\u63cf\u8ff0\u3002(\u6700\u597d\u8fd9\u4e2a\u9879\u76ee\u7ee7\u627f\uff0c\u591a\u6001\uff0c\u865a\u51fd\u6570\u90fd\u6709\u4f53\u73b0\uff09\u8fd9\u4e2a\u95ee\u9898\u5927\u6982\u4f1a\u5360\u9762\u8bd5\u65f6\u95f4\u7684\u4e00\u534a\uff0c\u5e76\u4e14\u4f1a\u95ee\u5f88\u591a\u95ee\u9898\uff0c\u4e00\u4e0d\u5c0f\u5fc3\u53ef\u80fd\u4f1a\u88ab\u95ee\u4f4f\uff09\u3002", "\n12\u3002\u57fa\u7c7b\u7684\u67091\u4e2a\u865a\u51fd\u6570\uff0c\u5b50\u7c7b\u8fd8\u9700\u8981\u7533\u660e\u4e3avirtual\u5417\uff1f\u4e3a\u4ec0\u4e48\u3002", "\n13.C\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7cbe\u5fc3\u5c01\u88c5\u67d0\u4e9b\u51fd\u6570\u529f\u80fd\u5b9e\u73b0\u91cd\u7528\uff0c\u90a3C++\u7684\u7c7b\u6709\u4ec0\u4e48\u4f18\u70b9\u5417\uff0c\u96be\u9053\u4ec5\u4ec5\u662f\u4e3a\u5b9e\u73b0\u91cd\u7528\u3002", "\n14.C++\u7279\u70b9\u662f\u4ec0\u4e48\uff0c\u5982\u4f55\u5b9e\u73b0\u591a\u6001\uff1f\u753b\u51fa\u57fa\u7c7b\u548c\u5b50\u7c7b\u5728\u5185\u5b58\u4e2d\u7684\u76f8\u4e92\u5173\u7cfb\u3002", "\n15.\u4e3a\u4ec0\u4e48\u8981\u5f15\u5165\u62bd\u8c61\u57fa\u7c7b\u548c\u7eaf\u865a\u51fd\u6570\uff1f", "\n16.\u4ecb\u7ecd\u4e00\u4e0b\u6a21\u677f\u548c\u5305\u5bb9\u5668\u3002\u5982\u4f55\u5b9e\u73b0\uff1f\uff08\u4e5f\u8bb8\u4f1a\u8ba9\u4f60\u5f53\u573a\u4e3e\u4f8b\u5b9e\u73b0\uff09", "\n17.\u4f60\u5982\u4f55\u7406\u89e3MVC\u3002\u7b80\u5355\u4e3e\u4f8b\u6765\u8bf4\u660e\u5176\u5e94\u7528\u3002", "\n18\uff0c\u591a\u91cd\u7ee7\u627f\u5982\u4f55\u6d88\u9664\u5411\u4e0a\u7ee7\u627f\u7684\u4e8c\u4e49\u6027\u3002", "\n\u5927\u4f53\u8bb0\u5f97\u5c31\u662f\u8fd9\u4e9b\uff0c\u60f3\u8d77\u6765\u4f1a\u7ee7\u7eed\u8865\u5145\u3002", "\n1\uff0e\u4ec0\u4e48\u662f\u4e2d\u65ad\uff1f\u4e2d\u65ad\u53d1\u751f\u65f6CPU\u505a\u4ec0\u4e48\u5de5\u4f5c\uff1f", "\n2\uff0eCPU\u5728\u4e0a\u7535\u540e\uff0c\u8fdb\u5165\u64cd\u4f5c\u7cfb\u7edf\u7684main()\u4e4b\u524d\u5fc5\u987b\u505a\u4ec0\u4e48\u5de5\u4f5c\uff1f", "\n3\uff0e\u7b80\u8ff0ISO OSI\u7684\u7269\u7406\u5c42Layer1\uff0c\u94fe\u8def\u5c42Layer2\uff0c\u7f51\u7edc\u5c42Layer3\u7684\u4efb\u52a1\u3002", "\n4\uff0e\u6709\u7ebf\u7535\u8bdd\u548c\u65e0\u7ebf\u7535\u8bdd\u6709\u4f55\u533a\u522b\uff1f\u65e0\u7ebf\u7535\u8bdd\u7279\u522b\u9700\u8981\u6ce8\u610f\u7684\u662f\u4ec0\u4e48\uff1f", "\n5\uff0e\u8f6f\u4ef6\u5f00\u53d1\u4e94\u4e2a\u4e3b\u8981step\u662f\u4ec0\u4e48\uff1f", "\n6\uff0e\u4f60\u5728\u5f00\u53d1\u8f6f\u4ef6\u7684\u65f6\u5019\uff0c\u8fd95\u4e2astep\u5206\u522b\u5360\u7528\u7684\u65f6\u95f4\u767e\u5206\u6bd4\u662f\u591a\u5c11\uff1f", "\n7\uff0emakefile\u6587\u4ef6\u7684\u4f5c\u7528\u662f\u4ec0\u4e48\uff1f", "\n8\uff0eUNIX\u663e\u793a\u6587\u4ef6\u5939\u4e2d\uff0c\u6587\u4ef6\u540d\u7684\u547d\u4ee4\u662f\u4ec0\u4e48\uff1f\u80fd\u4f7f\u6587\u4ef6\u5185\u5bb9\u663e\u793a\u5728\u5c4f\u5e55\u7684\u547d\u4ee4\u662f\u4ec0\u4e48\uff1f", "\n9\uff0e\uff08\u9009\u505a\uff09\u624b\u673a\u7528\u6237\u5728\u4ece\u4e00\u4e2a\u57fa\u7ad9\u6f2b\u6e38\u5230\u53e6\u4e00\u4e2a\u57fa\u7ad9\u7684\u8fc7\u7a0b\u4e2d\uff0c\u90fd\u4f1a\u53d1\u751f\u4ec0\u4e48?"], "title": "\u6469\u6258\u7f57\u62c9\u90e8\u5206C++\u9762\u8bd5\u9898"},
{"contents": ["11 \u4e0b\u5217\u54ea\u4e24\u4e2a\u662f\u7b49\u540c\u7684", "int b;", "A const int* a = &b;", "B const* int a = &b;", "C const int* const a = &b;", "D int const* const a = &b;", "12 \u5185\u8054\u51fd\u6570\u5728\u7f16\u8bd1\u65f6\u662f\u5426\u505a\u53c2\u6570\u7c7b\u578b\u68c0\u67e5", "13 \u4e09\u4e2afloat:a,b,c", "\n\u95ee\u503c", "\n(a+b)+c==(b+a)+c", "\n(a+b)+c==(a+c)+b", "\n14 \u628a\u4e00\u4e2a\u94fe\u8868\u53cd\u5411\u586b\u7a7a", "\nvoid reverse(test* head)", "\n{", "\ntest* pe = head;", "\ntest* ps = head->next;", "\nwhile(ps)", "\n{", "\npe->next = ps->next;", "\nps->next = head;", "\nhead = ps;", "\nps = pe->next;", "\n}", "\n}", "15 \u8bbe\u8ba1\u4e00\u4e2a\u91cd\u91c7\u6837\u7cfb\u7edf\uff0c\u8bf4\u660e\u5982\u4f55anti-alias", "16 \u67d0\u4e2a\u7a0b\u5e8f\u5728\u4e00\u4e2a\u5d4c\u5165\u5f0f\u7cfb\u7edf(200M\u7684CPU,50M\u7684SDRAM)\u4e2d\u5df2\u7ecf\u6700\u5316\u4e86\uff0c\u6362\u5230\u53e6\u4e00\u4e2a\u7cfb\u7edf(300M\u7684CPU,50M\u7684SDRAM)\u4e2d\u8fd0\u884c\uff0c\u8fd8\u9700\u8981\u4f18\u5316\u5417\uff1f", "17. \u4e0b\u9762\u54ea\u79cd\u6392\u5e8f\u6cd5\u5bf912354\u6700\u5feb", "\na quick sort", "\nb.buble sort", "\nc.merge sort", "18. \u54ea\u79cd\u7ed3\u6784\uff0c\u5e73\u5747\u6765\u8bb2\uff0c\u83b7\u53d6\u4e00\u4e2a\u503c\u6700\u5feb", "\na. binary tree", "\nb. hash table", "\nc. stack", "19 \u8bf7\u95eeC++\u7684\u7c7b\u548cC\u91cc\u9762\u7684struct\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u7b54\uff1ac++\u7684\u7c7b\u7684\u6210\u5458\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u79c1\u6709\u7684,c\u7684struct\u7684\u6210\u5458\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u516c\u5171\u7684.", "20 \u8bf7\u8bb2\u4e00\u8bb2\u6790\u6784\u51fd\u6570\u548c\u865a\u51fd\u6570\u7684\u7528\u6cd5\u548c\u4f5c\u7528\uff1f", "\n\u7b54\uff1a\u6790\u6784\u51fd\u6570\u7684\u4f5c\u7528\u662f\u5f53\u5bf9\u8c61\u751f\u547d\u671f\u7ed3\u675f\u65f6\u91ca\u653e\u5bf9\u8c61\u6240\u5360\u7528\u7684\u8d44\u6e90\u3002 \u6790\u6784\u51fd\u6570\u7528\u6cd5\uff1a\u6790\u6784\u51fd\u6570\u662f\u7279\u6b8a\u7684\u7c7b\u6210\u5458\u51fd\u6570", "\n\u5b83\u7684\u540d\u5b57\u548c\u7c7b\u540d\u76f8\u540c\uff0c\u6ca1\u6709\u8fd4\u56de\u503c\uff0c\u6ca1\u6709\u53c2\u6570\u4e0d\u80fd\u968f\u610f\u8c03\u7528\u4e5f\u6ca1\u6709\u91cd\u8f7d\u3002\u53ea\u662f\u5728\u7c7b\u5bf9\u8c61\u751f\u547d\u671f\u7ed3\u675f\u65f6\u6709\u7cfb\u7edf\u81ea\u52a8\u8c03\u7528\u3002", "\n\u865a\u51fd\u6570\u7528\u5728\u7ee7\u627f\u4e2d\uff0c\u5f53\u5728\u6d3e\u751f\u7c7b\u4e2d\u9700\u8981\u91cd\u65b0\u5b9a\u4e49\u57fa\u7c7b\u7684\u51fd\u6570\u65f6\u9700\u8981\u5728\u57fa\u7c7b\u4e2d\u5c06\u8be5\u51fd\u6570\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff0c\u4f5c\u7528\u4e3a\u4f7f\u7a0b\u5e8f\u652f\u6301\u52a8\u6001\u8054\u904d\u3002", "21 \u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1f\u662f\u600e\u4e48\u5b9e\u73b0\u7684\uff1f\u64cd\u4f5c\u7cfb\u7edf\u548c\u7f16\u8bd1\u5668\u662f\u600e\u4e48\u77e5\u9053\u7684\uff1f", "\n\u7b54\uff1a\u4e00\u4e9b\u53d8\u91cf\u6574\u4e2a\u7a0b\u5e8f\u4e2d\u90fd\u662f\u53ef\u89c1\u7684\uff0c\u5b83\u4eec\u79f0\u4e3a\u5168\u5c40\u53d8\u91cf\uff0c\u4e00\u4e9b\u53d8\u91cf\u5728\u51fd\u6570\u5185\u90e8\u5b9a\u4e49\u4e14\u53ea\u5728\u51fd\u6570\u4e2d\u53ef\u77e5\uff0c\u5219\u79f0\u4e3a\u5c40\u90e8\u53d8\u91cf\u3002", "\n\u5168\u5c40\u53d8\u91cf\u7531\u7f16\u8bd1\u5668\u5efa\u7acb\u4e14\u5b58\u653e\u5728\u5185\u5b58\u7684\u5168\u5c40\u6570\u636e\u533a\uff0c\u5c40\u90e8\u53d8\u91cf\u5b58\u653e\u5728\u6808\u533a", "22 \u4e00\u4e9b\u5bc4\u5b58\u5668\u7684\u9898\u76ee\uff0c\u4e3b\u8981\u662f\u5bfb\u5740\u548c\u5185\u5b58\u7ba1\u7406\u7b49\u4e00\u4e9b\u77e5\u8bc6\u3002", "23 8086\u662f\u591a\u5c11\u5c09\u7684\u7cfb\u7edf\uff1f\u5728\u6570\u636e\u603b\u7ebf\u4e0a\u662f\u600e\u4e48\u5b9e\u73b0\u7684\uff1f", "24 \u591a\u6001\u3002overload \u548c override\u7684\u533a\u522b\u3002", "\n\u7b54\uff1a\u91cd\u8f7d\u5728\u76f8\u540c\u8303\u56f4\uff08\u540c\u4e00\u4e2a\u7c7b\u4e2d\uff09\uff0c\u51fd\u6570\u540d\u5b57\u76f8\u540c\uff0c\u53c2\u6570\u4e0d\u540c\uff0cvirtual\u5173\u952e\u5b57\u53ef\u6709\u53ef\u65e0\u3002", "\n\u8986\u76d6\u662f\u6307\u6d3e\u751f\u7c7b\u51fd\u6570\u8986\u76d6\u57fa\u7c7b\u51fd\u6570\uff0c\u4e0d\u540c\u7684\u8303\u56f4\uff0c\u51fd\u6570\u540d\u5b57\u76f8\u540c\uff0c\u53c2\u6570\u76f8\u540c\uff0c\u57fa\u7c7b\u51fd\u6570\u5fc5\u987b\u6709virtual\u5173\u952e\u5b57\u3002"], "title": "C++\u9762\u8bd5\u9898\u96c6\uff082\uff09"},
{"contents": ["Because a reference must refer to an object, C++ requires that references be initialized.", "\nNotice that there is no such thing as a null reference.", "Another important difference between pointers and references is that pointers may be reassigned to refer to different objects. A reference, however, always refers to the object with which it is initialized", "In general, you should use a pointer whenever you need to take into account the possibility that there\u2019s nothing to refer to (in which case you can set the pointer to null) or whenever you need to be able to refer to different things at different times (in which case you can change where the pointer points). You should use a reference whenever you know there will always be an object to refer to and you also know that once you\u2019re referring to that object, you\u2019ll never want to refer to anything else", "Other occassions: you\u2019ll almost always want operator[] to return a reference."], "title": "Different between C++ pointers and references?"},
{"contents": ["\t   \u2460 \u5f15\u7528\u5fc5\u987b\u88ab\u521d\u59cb\u5316\uff0c\u6307\u9488\u4e0d\u5fc5\uff1b", "\n         \u2461 \u5f15\u7528\u521d\u59cb\u5316\u540e\u4e0d\u80fd\u6539\u53d8\uff0c\u6307\u9488\u53ef\u4ee5\u6539\u53d8\u6240\u6307\u7684\u5bf9\u8c61\uff1b", "\n         \u2462 \u4e0d\u5b58\u5728\u6307\u5411\u7a7a\u503c\u7684\u5f15\u7528\uff0c\u4f46\u662f\u5b58\u5728\u6307\u5411\u7a7a\u503c\u7684\u6307\u9488\u3002"], "title": "\u6307\u9488\u548c\u5f15\u7528\u6709\u4ec0\u4e48\u533a\u522b"},
{"contents": ["Q: Dynamic Linking vs Static Linking (Yahoo! PhoneScreen)", "\nA:", "\n1.\u00a0\u00a0 \u00a0Dynamic linking: resolve references to lib routines, linker adds start-up code to load required libs at run-time, each lib call goes through a jump table. A jump table is patched to point at the lib routine, only overhead here is indirect reference.", "\n2.\u00a0\u00a0 \u00a0Static Linking:\u00a0 linted into program during linking phase of compilation", "\n3.\u00a0\u00a0 \u00a0Dynamic Linking: verifies symbols linkage, dynamic loader checks which shared libs were linked with the program, loads to memory and attach to the program memory.", "Example:", "\nar \u2013s\u00a0 is (ranlib)", "\nar \u2013rc *.a *.o", "g++ -shared \u2013o lib*.so *.o", "\ng++ -fPIC \u2013c *(.c", "\nld \u2013lc \u2013o lib*.so *.o", "Q:\u00a0 What is Relocation?\u00a0 (Yahoo! Phone Screen)", "\nA:\u00a0 allowing executable and shared obj fiels to hold right info for a process\u2019 program image. It is the process of connecting symbolic ref with symbolic defs. ELF header, program header and section header.", "Q:\u00a0 C++ vfpointer and vftable?", "\nA:\u00a0 virtual function table and virtual function table. Whenever there is virtual function in class definitions, these 2 things are needed for dynamic-binding(polymorphism)"], "title": "Compiler Related Questions"},
{"contents": ["21.", "\nstruct A", "\n{", "\nchar t:4;", "\nchar k:4;", "\nunsigned short i:8;", "\nunsigned long m;", "\n}", "\nsizeof(A)=?\uff08\u4e0d\u8003\u8651\u8fb9\u754c\u5bf9\u9f50\uff09", "\n7", "\nstruct CELL\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Declare CELL bit field", "\n{", "\nunsigned character : 8; // 00000000 ????????", "\nunsigned foreground : 3; // 00000??? 00000000", "\nunsigned intensity : 1; // 0000?000 00000000", "\nunsigned background : 3; // 0???0000 00000000", "\nunsigned blink\u00a0\u00a0\u00a0\u00a0\u00a0 : 1; // ?0000000 00000000", "\n} screen[25][80];\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Array of bit fields", "\n\u4e8c\u3001\u4f4d\u7ed3\u6784", "\n\u4f4d\u7ed3\u6784\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u7ed3\u6784, \u5728\u9700\u6309\u4f4d\u8bbf\u95ee\u4e00\u4e2a\u5b57\u8282\u6216\u5b57\u7684\u591a\u4e2a\u4f4d\u65f6, \u4f4d\u7ed3\u6784", "\n\u6bd4\u6309\u4f4d\u8fd0\u7b97\u7b26\u66f4\u52a0\u65b9\u4fbf\u3002", "\n\u4f4d\u7ed3\u6784\u5b9a\u4e49\u7684\u4e00\u822c\u5f62\u5f0f\u4e3a:", "\nstruct\u4f4d\u7ed3\u6784\u540d{", "\n\u6570\u636e\u7c7b\u578b \u53d8\u91cf\u540d: \u6574\u578b\u5e38\u6570;", "\n\u6570\u636e\u7c7b\u578b \u53d8\u91cf\u540d: \u6574\u578b\u5e38\u6570;", "\n} \u4f4d\u7ed3\u6784\u53d8\u91cf;", "\n\u5176\u4e2d: \u6570\u636e\u7c7b\u578b\u5fc5\u987b\u662fint(unsigned\u6216signed)\u3002 \u6574\u578b\u5e38\u6570\u5fc5\u987b\u662f\u975e\u8d1f\u7684\u6574", "\n\u6570, \u8303\u56f4\u662f0~15, \u8868\u793a\u4e8c\u8fdb\u5236\u4f4d\u7684\u4e2a\u6570, \u5373\u8868\u793a\u6709\u591a\u5c11\u4f4d\u3002", "\n\u53d8\u91cf\u540d\u662f\u9009\u62e9\u9879, \u53ef\u4ee5\u4e0d\u547d\u540d, \u8fd9\u6837\u89c4\u5b9a\u662f\u4e3a\u4e86\u6392\u5217\u9700\u8981\u3002", "\n\u4f8b\u5982: \u4e0b\u9762\u5b9a\u4e49\u4e86\u4e00\u4e2a\u4f4d\u7ed3\u6784\u3002", "\nstruct{", "\nunsigned incon: 8; /*incon\u5360\u7528\u4f4e\u5b57\u8282\u76840~7\u51718\u4f4d*/", "\nunsigned txcolor: 4;/*txcolor\u5360\u7528\u9ad8\u5b57\u8282\u76840~3\u4f4d\u51714\u4f4d*/", "\nunsigned bgcolor: 3;/*bgcolor\u5360\u7528\u9ad8\u5b57\u8282\u76844~6\u4f4d\u51713\u4f4d*/", "\nunsigned blink: 1; /*blink\u5360\u7528\u9ad8\u5b57\u8282\u7684\u7b2c7\u4f4d*/", "\n}ch;", "\n\u4f4d\u7ed3\u6784\u6210\u5458\u7684\u8bbf\u95ee\u4e0e\u7ed3\u6784\u6210\u5458\u7684\u8bbf\u95ee\u76f8\u540c\u3002", "\n\u4f8b\u5982: \u8bbf\u95ee\u4e0a\u4f8b\u4f4d\u7ed3\u6784\u4e2d\u7684bgcolor\u6210\u5458\u53ef\u5199\u6210:", "\nch.bgcolor", "\n\u6ce8\u610f:", "\n1. \u4f4d\u7ed3\u6784\u4e2d\u7684\u6210\u5458\u53ef\u4ee5\u5b9a\u4e49\u4e3aunsigned, \u4e5f\u53ef\u5b9a\u4e49\u4e3asigned, \u4f46\u5f53\u6210\u5458\u957f", "\n\u5ea6\u4e3a1\u65f6, \u4f1a\u88ab\u8ba4\u4e3a\u662funsigned\u7c7b\u578b\u3002\u56e0\u4e3a\u5355\u4e2a\u4f4d\u4e0d\u53ef\u80fd\u5177\u6709\u7b26\u53f7\u3002", "\n2. \u4f4d\u7ed3\u6784\u4e2d\u7684\u6210\u5458\u4e0d\u80fd\u4f7f\u7528\u6570\u7ec4\u548c\u6307\u9488, \u4f46\u4f4d\u7ed3\u6784\u53d8\u91cf\u53ef\u4ee5\u662f\u6570\u7ec4\u548c\u6307\u9488,", "\n\u5982\u679c\u662f\u6307\u9488, \u5176\u6210\u5458\u8bbf\u95ee\u65b9\u5f0f\u540c\u7ed3\u6784\u6307\u9488\u3002", "\n3. \u4f4d\u7ed3\u6784\u603b\u957f\u5ea6(\u4f4d\u6570), \u662f\u5404\u4e2a\u4f4d\u6210\u5458\u5b9a\u4e49\u7684\u4f4d\u6570\u4e4b\u548c, \u53ef\u4ee5\u8d85\u8fc7\u4e24\u4e2a\u5b57", "\n\u8282\u3002", "\n4. \u4f4d\u7ed3\u6784\u6210\u5458\u53ef\u4ee5\u4e0e\u5176\u5b83\u7ed3\u6784\u6210\u5458\u4e00\u8d77\u4f7f\u7528\u3002", "\n\u4f8b\u5982:", "\nstruct info{", "\nchar name[8];", "\nint age;", "\nstruct addr address;", "\nfloat pay;", "\nunsigned state: 1;", "\nunsigned pay: 1;", "\n}workers;", "\n\u4e0a\u4f8b\u7684\u7ed3\u6784\u5b9a\u4e49\u4e86\u5173\u4e8e\u4e00\u4e2a\u5de5\u4eba\u7684\u4fe1\u606f\u3002\u5176\u4e2d\u6709\u4e24\u4e2a\u4f4d\u7ed3\u6784\u6210\u5458, \u6bcf\u4e2a\u4f4d\u7ed3", "\n\u6784\u6210\u5458\u53ea\u6709\u4e00\u4f4d, \u56e0\u6b64\u53ea\u5360\u4e00\u4e2a\u5b57\u8282\u4f46\u4fdd\u5b58\u4e86\u4e24\u4e2a\u4fe1\u606f, \u8be5\u5b57\u8282\u4e2d\u7b2c\u4e00\u4f4d\u8868\u793a\u5de5", "\n\u4eba\u7684\u72b6\u6001, \u7b2c\u4e8c\u4f4d\u8868\u793a\u5de5\u8d44\u662f\u5426\u5df2\u53d1\u653e\u3002\u7531\u6b64\u53ef\u89c1\u4f7f\u7528\u4f4d\u7ed3\u6784\u53ef\u4ee5\u8282\u7701\u5b58\u8d2e\u7a7a\u95f4\u3002", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n22.\u4e0b\u9762\u7684\u51fd\u6570\u5b9e\u73b0\u5728\u4e00\u4e2a\u56fa\u5b9a\u7684\u6570\u4e0a\u52a0\u4e0a\u4e00\u4e2a\u6570\uff0c\u6709\u4ec0\u4e48\u9519\u8bef\uff0c\u6539\u6b63", "\nint add_n(int n)", "\n{", "\nstatic int i=100;", "\ni+=n;", "\nreturn i;", "\n}", "\n\u7b54:", "\n\u56e0\u4e3astatic\u4f7f\u5f97i\u7684\u503c\u4f1a\u4fdd\u7559\u4e0a\u6b21\u7684\u503c\u3002", "\n\u53bb\u6389static\u5c31\u53ef\u4e86", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n23.\u4e0b\u9762\u7684\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898?", "\nclass A", "\n{", "\npublic:", "\nA() { p=this; }", "\n~A() { if(p!=NULL) { delete p; p=NULL; } }", "\nA* p;", "\n};", "\n\u7b54:", "\n\u4f1a\u5f15\u8d77\u65e0\u9650\u9012\u5f52", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n24.", "\nunion a {", "\nint a_int1;", "\ndouble a_double;", "\nint a_int2;", "\n};", "\ntypedef struct", "\n{", "\na a1;", "\nchar y;", "\n} b;", "\nclass c", "\n{", "\ndouble c_double;", "\nb b1;", "\na a2;", "\n};", "\n\u8f93\u51facout<<sizeof(c)<<endl;\u7684\u7ed3\u679c?", "\n\u7b54:", "\nVC6\u73af\u5883\u4e0b\u5f97\u51fa\u7684\u7ed3\u679c\u662f32", "\n\u53e6:", "\n\u6211(sun)\u5728VC6.0+win2k\u4e0b\u505a\u8fc7\u8bd5\u9a8c:", "\nshort \u2013 2", "\nint-4", "\nfloat-4", "\ndouble-8", "\n\u6307\u9488-4", "\nsizeof(union)\uff0c\u4ee5\u7ed3\u6784\u91cc\u9762size\u6700\u5927\u7684\u4e3aunion\u7684size", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014-", "\n25.i\u6700\u540e\u7b49\u4e8e\u591a\u5c11?", "\nint i = 1;", "\nint j = i++;", "\nif((i>j++) && (i++ == j)) i+=j;", "\n\u7b54:", "\ni = 5", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n26.", "\nunsigned short array[]={1,2,3,4,5,6,7};", "\nint i = 3;", "\n*(array + i) = ?", "\n\u7b54:", "\n4", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n27.", "\nclass A", "\n{", "\nvirtual void func1()\uff1b", "\nvoid func2();", "\n}", "\nClass B: class A", "\n{", "\nvoid func1(){cout << \u201cfun1 in class B\u201d << endl;}", "\nvirtual void func2(){cout << \u201cfun2 in class B\u201d << endl;}", "\n}", "\nA, A\u4e2d\u7684func1\u548cB\u4e2d\u7684func2\u90fd\u662f\u865a\u51fd\u6570.", "\nB, A\u4e2d\u7684func1\u548cB\u4e2d\u7684func2\u90fd\u4e0d\u662f\u865a\u51fd\u6570.", "\nC, A\u4e2d\u7684func2\u662f\u865a\u51fd\u6570.\uff0cB\u4e2d\u7684func1\u4e0d\u662f\u865a\u51fd\u6570.", "\nD, A\u4e2d\u7684func2\u4e0d\u662f\u865a\u51fd\u6570\uff0cB\u4e2d\u7684func1\u662f\u865a\u51fd\u6570.", "\n\u7b54:", "\nA", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n28.", "\n\u6570\u636e\u5e93\uff1a\u62bd\u51fa\u90e8\u95e8\uff0c\u5e73\u5747\u5de5\u8d44\uff0c\u8981\u6c42\u6309\u90e8\u95e8\u7684\u5b57\u7b26\u4e32\u987a\u5e8f\u6392\u5e8f\uff0c\u4e0d\u80fd\u542b\u6709\u201dhuman resource\u201d\u90e8\u95e8\uff0c", "\nemployee\u7ed3\u6784\u5982\u4e0b\uff1aemployee_id, employee_name, depart_id,depart_name,wage", "\n\u7b54:", "\nselect depart_name, avg(wage)", "\nfrom employee", "\nwhere depart_name <> \u2018human resource\u2019", "\ngroup by depart_name", "\norder by depart_name", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n29.", "\n\u7ed9\u5b9a\u5982\u4e0bSQL\u6570\u636e\u5e93\uff1aTest(num INT(4)) \u8bf7\u7528\u4e00\u6761SQL\u8bed\u53e5\u8fd4\u56denum\u7684\u6700\u5c0f\u503c\uff0c\u4f46\u4e0d\u8bb8\u4f7f\u7528\u7edf\u8ba1\u529f\u80fd\uff0c\u5982MIN\uff0cMAX\u7b49", "\n\u7b54:", "\nselect top 1 num", "\nfrom Test", "\norder by num desc", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n30.", "\n\u8f93\u51fa\u4e0b\u9762\u7a0b\u5e8f\u7ed3\u679c\u3002", "\n#include <iostream.h>", "\nclass A", "\n{", "\npublic:", "\nvirtual void print(void)", "\n{", "\ncout<<\u201dA::print()\u201d<<endl;", "\n}", "\n};", "\nclass B:public A", "\n{", "\npublic:", "\nvirtual void print(void)", "\n{", "\ncout<<\u201dB::print()\u201d<<endl;", "\n};", "\n};", "\nclass C:public B", "\n{", "\npublic:", "\nvirtual void print(void)", "\n{", "\ncout<<\u201dC::print()\u201d<<endl;", "\n}", "\n};", "\nvoid print(A a)", "\n{", "\na.print();", "\n}", "\nvoid main(void)", "\n{", "\nA a, *pa,*pb,*pc;", "\nB b;", "\nC c;", "pa=&a;", "\npb=&b;", "\npc=&c;", "a.print();", "\nb.print();", "\nc.print();", "pa->print();", "\npb->print();", "\npc->print();", "print(a);", "\nprint(b);", "\nprint(c);", "\n}", "\nA:", "\nA::print()", "\nB::print()", "\nC::print()", "\nA::print()", "\nB::print()", "\nC::print()", "\nA::print()", "\nA::print()", "\nA::print()"], "title": "\u5e38\u89c1C++\u7b14\u8bd5\u9898\u76ee\u6574\u7406\uff08\u542b\u7b54\u6848\uff093"},
{"contents": ["Some statements:", "\n1.\u00a0\u00a0 \u00a0Result of deleting an array of derived class objects through a base class pointer is undefined.", "\n2.\u00a0\u00a0 \u00a0Avoid default constructors, instead use ctor(s) with default value for input parameter(s).", "\n3.", "Q:\u00a0 C++ *_cast explanation?", "\nA:", "\nconst :\u00a0 const member functions(getter function), const pointers, const variables(data member or object)", "\nie:\u00a0 const char *const m_f(\u2026) const {}", "\nconst_cast<> operator will cast in/out between const and non-const time, but be aware of read-only memory access problem when", "\ncast from const to non-cast, since const type variable may have been allocated in read-only memory section!", "dynamic_cast, const_cast, typeid Link:\u00a0 http://www.cplusplus.com/doc/tutorial/tut5-4.html", "\ndynamic_cast, is used to perform safe casts down or across an inheritance hierarchy. That is, you use dynamic_cast to cast pointers or references to base class objects into pointers or references to derived or sibling base class objects in such a way that you can determine whether the casts succeeded.1 Failed casts are indicated by a null pointer (when casting pointers) or an exception (when casting references).", "\ni.e:", "class Widget { \u2026 };", "\nclass SpecialWidget: public Widget { \u2026 };", "\nvoid update(SpecialWidget *psw);", "Widget *pw;", "\n\u2026", "\nupdate(dynamic_cast<SpecialWidget*>(pw));", "\n// fine, passes to update a pointer", "\n// to the SpecialWidget pw points to", "\n// if pw really points to one,", "\n// otherwise passes the null pointer", "explicit keyword:\u00a0\u00a0 http://www.glenmccl.com/tip_023.htm", "\ni.e.:", "\nclass A {", "\npublic:", "\nexplicit A(int);", "\n};", "\nvoid f(A) {}", "\nvoid g()", "\n{", "\nA a1 = A(37);", "\nA a2 = A(47);", "\nA a3(57);", "\na1 = A(67);", "\nf(A(77));\u00a0\u00a0\u00a0\u00a0 //", "\n}", "Q: What is the difference between a copy constructor and an overloaded assignment operator?", "\nA: A copy constructor constructs a new object by using the content of the argument object. An overloaded assignment operator assigns the contents of an existing object to another existing object of the same class.", "Q: What is a conversion constructor?", "\nA: A constructor that accepts one argument of a different type.", "Q: What is a virtual destructor?", "\nA: The simple answer is that a virtual destructor is one that is declared with the virtual attribute. you destroy an object through a pointer or reference to a base class,", "Q: What is a mutable member?", "\nA: One that can be modified by the class even when the object of the class or the member function doing the modification is const.", "Q: What is an explicit constructor?", "\nA: A conversion constructor declared with the explicit keyword. The compiler does not use an explicit constructor to implement an implied conversion of types. It\u2019s purpose is reserved explicitly for construction.", "Q: Describe run-time type identification.", "\nA: The ability to determine at run time the type of an object by using the typeid operator or the dynamic_cast operator.", "Q: What problem does the namespace feature solve?", "\nA: Multiple providers of libraries might use common global identifiers causing a name collision when an application tries to link with two or more such libraries. The namespace feature surrounds a library\u2019s external declarations with a unique namespace that eliminates the potential for those collisions.", "Q: Implement String class that supports intuitive string concatenation?", "\nA: Copy constructor (pass and return object(s) by value!!!) is the one to go\u2026", "//", "\nclass String {", "\npublic:", "\nString(); //default ctor", "\nString(const char *value);\u00a0 // constructor!", "\nString(const String &src);\u00a0 // copy ctor", "\nString operator+(const String &s1, const String &s2); // overloading + operator", "\nString& operator=(const String& rhs); // Assignment ctor", "\n~String() {\u00a0\u00a0 \u00a0//dtor", "\ndelete [] data;", "\n}", "\nprivate:", "\nchar *data;", "\n}; //String{}", "// a possible String constructor", "\nString::String(const char *value)", "\n{", "\nif (value) {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // if value ptr isn\u2019t null", "\ndata = new char[strlen(value) + 1];", "\nstrcpy(data,value);", "\n}", "\nelse {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // handle null value ptr3", "\ndata = new char[1];", "\n*data = \u2018\\0\u2032;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // add trailing null char", "\n}", "\n}", "// copy ctor", "\nString::String(const String & src) {", "\ndata = new char[strlen(src.data)+1]; //mem alloc", "\nstrcpy(data, src.data);", "\n}", "// a possible String assignment operator", "\nString& String::operator=(const String& rhs)", "\n{", "\nif (this == &rhs) // Check if point to same addr.", "\nreturn *this;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // see Item 17", "delete [] data;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // delete old memory", "\ndata =\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // allocate new memory", "\nnew char[strlen(rhs.data) + 1];", "\nstrcpy(data, rhs.data);", "return *this;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // see Item 15", "\n}", "const String String::operator+(const String &s1, const String &s2)", "\n{", "\nString temp;", "\ndelete [] temp.data;", "\ntemp.data =", "\nnew char[strlen(s1.data) + strlen(s2.data) + 1];", "\nstrcpy(temp.data, s1.data);", "\nstrcat(temp.data, s2.data);", "\nreturn temp;\u00a0 //return by value, invoke copy ctor!!", "\n}", "// Main func", "\nvoid main() {", "\nString a(\u201cHello\u201d);", "\nString b(\u201d world\u201d);", "\nString c = a + b;\u00a0\u00a0\u00a0 // c = String(\u201cHello world\u201d)", "\n}", "Q:\u00a0 If you have to implement Boolean type, what u need to do?", "\nA:", "\ntypedef int bool;", "\nconst bool false = 0;", "\nconst bool true = 1;", "Q:\u00a0 define a constant char*-based string in a header file?", "\nA:", "\nconst char * const authorName = \u201cRicky Y. Sun\u201d;", "Also, how to define class-specific const?", "\nIn the scope of class body (header), prepend const with \u201cstatic\u201d modifier.", "\nstatic const int NUM_TURNS = 5;\u00a0\u00a0\u00a0 // constant declaration", "\nint scores[NUM_TURNS];\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // use of constant", "\nand in implementation file:", "\nconst int GamePlayer::NUM_TURNS;\u00a0\u00a0 // mandatory definition;", "Note that static class members should never be initialized in a class\u2019s constructor", "Also Note that: class static must be defined outside the class and initialization is to 0 by default.", "\nSee sample code below:", "class EnemyTarget {", "\npublic:", "\nEnemyTarget() { ++numTargets; }", "\nEnemyTarget(const EnemyTarget&) { ++numTargets; }", "\n~EnemyTarget() { \u2013numTargets; }", "\nstatic size_t numberOfTargets()", "\n{ return numTargets; }", "\nvirtual bool destroy();\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // returns success of", "\n// attempt to destroy", "\n// EnemyTarget object", "\nprivate:", "\nstatic size_t numTargets;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // object counter", "\n};", "// class statics must be defined outside the class;", "\n// initialization is to 0 by default", "\nsize_t EnemyTarget::numTargets;", "Q:\u00a0 template inline function\u2019s advantages?", "\nA:", "\n// Note: all parameters are passed-by-reference!", "\n// Also note that the max() is in standard C++ library!", "\ntemplate<class T>", "\ninline const T& max(const T& a, const T& b)", "\n{ return a > b ? a : b; }", "As compared with:", "inline int max(int a, int b) { return a > b ? a : b; }", "Q:\u00a0 Some sample C++ code?", "\nA:", "\n// new vs. malloc()", "\nstring *sArr1 = static_cast<string*>(malloc(10 * sizeof(string)));", "\nstring *sArr2 = new string[10];", "// delete vs. free()", "\nfree(sArr1);", "\ndelete [] sArr2;", "Does the pointer being deleted point to a single object or to an array of objects?", "The only way for delete to know is for you to tell it. If you don\u2019t use brackets in your use of delete, delete assumes a single object is pointed to. Otherwise, it assumes that an array is pointed to", "i.e:", "\nstring *stringPtr1 = new string;", "\nstring *stringPtr2 = new string[100];", "\n\u2026", "\ndelete stringPtr1;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // delete an object", "\ndelete [] stringPtr2;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // delete an array of", "\n// objects", "Q:\u00a0 How to write placement new()/delete() operator?", "\nA:", "\nvoid * operator new(size_t size);\u00a0 // operator new()", "\nvoid *rawMemory = operator new(sizeof(string));", "//placement new.", "\nvoid * operator new(size_t, void *location)", "\n{", "\nreturn location;", "\n}", "string *ps =\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // call operator new[] to allocate", "\nnew string[10];\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // memory for 10 string objects,", "\n// then call the default string", "\n// ctor for each array element", "\nSimilarly, when the delete operator is used on an array, it calls a destructor for each array element and then calls operator delete[] to deallocate the memory:", "\ndelete [] ps;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // call the string dtor for each", "\n// array element, then call", "\n// operator delete[] to", "\n// deallocate the array\u2019s memory", "\nJust as you can replace or overload operator delete, you can replace or overload operator delete[].", "Another example:", "\nclass X {", "\npublic:", "\nvoid f();", "\nstatic void * operator new(size_t size, new_handler p);", "\nstatic void * operator new(size_t size)\u00a0\u00a0 {", "\nreturn ::operator new(size);", "\n}", "\nstatic void operator delete(void *p, size_t size);", "\n};", "\nX *px1 =", "\nnew (specialErrorHandler) X;\u00a0\u00a0\u00a0\u00a0\u00a0 // calls X::operator", "\n// new(size_t, new_handler)", "\nX* px2 = new X;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // calls X::operator", "\n// new(size_t)", "An alternative is to provide a default parameter value (see Item 24) for each additional parameter you add to operator new:", "\nclass X {", "\npublic:", "\nvoid f();", "\nstatic", "\nvoid * operator new(size_t size, //default", "\nnew_handler p = 0); //value for p", "\n};", "\nX *px1 = new (specialErrorHandler) X;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // fine", "\nX* px2 = new X;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // also fine", "// invoke delete()", "\ninline void Airplane::operator delete(void *p,", "\nsize_t size)", "\n{ memPool.free(p, size); }", "Q:\u00a0 Difference between initialization and assignment in constructors?", "\nA:\u00a0 We prefer initialization to assignment, not only because initialization is 3x faster, but also for the cases of: const and reference members may only be initialized, never assigned.", "template<class T>", "\nclass NamedPtr {", "\npublic:", "\nNamedPtr(const string& initName, T *initPtr);", "\n\u2026", "\nprivate:", "\nconst string& name;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // must be initialized via", "\n// initializer list", "\nT * const ptr;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // must be initialized via", "\n// initializer list", "\n}; // end of class NamedPtr", "//\u00a0 full definition of the ctor.", "\ntemplate<class T>", "\nNamedPtr<T>::NamedPtr(const string& initName, T *initPtr\u00a0 )", "\n: name(initName), ptr(initPtr)", "\n{}", "Note: List members in an initialization list in the order in which they are declared.", "There is one time, however, when it may make sense to use assignment instead of initialization for the data members in a class. That is when you have a large number of data members of built-in types, and you want them all initialized the same way in each constructor."], "title": "Generic C++ interivew questions"},
{"contents": ["1.\u662f\u4e0d\u662f\u4e00\u4e2a\u7236\u7c7b\u5199\u4e86\u4e00\u4e2avirtual \u51fd\u6570\uff0c\u5982\u679c\u5b50\u7c7b\u8986\u76d6\u5b83\u7684\u51fd\u6570\u4e0d\u52a0virtual ,\u4e5f\u80fd\u5b9e\u73b0\u591a\u6001?", "\nvirtual\u4fee\u9970\u7b26\u4f1a\u88ab\u9690\u5f62\u7ee7\u627f\u7684\u3002private \u4e5f\u88ab\u96c6\u6210\uff0c\u53ea\u4e8b\u6d3e\u751f\u7c7b\u6ca1\u6709\u8bbf\u95ee\u6743\u9650\u800c\u5df2\u3002virtual\u53ef\u52a0\u53ef\u4e0d\u52a0\u3002\u5b50\u7c7b\u7684\u7a7a\u95f4\u91cc\u6709\u7236\u7c7b\u7684\u6240\u6709\u53d8\u91cf(static\u9664\u5916)\u3002\u540c\u4e00\u4e2a\u51fd\u6570\u53ea\u5b58\u5728\u4e00\u4e2a\u5b9e\u4f53(inline\u9664\u5916)\u3002\u5b50\u7c7b\u8986\u76d6\u5b83\u7684\u51fd\u6570\u4e0d\u52a0virtual ,\u4e5f\u80fd\u5b9e\u73b0\u591a\u6001\u3002\u5728\u5b50\u7c7b\u7684\u7a7a\u95f4\u91cc\uff0c\u6709\u7236\u7c7b\u7684\u79c1\u6709\u53d8\u91cf\u3002\u79c1\u6709\u53d8\u91cf\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\u3002", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n2.\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5c06\u5176\u9006\u5e8f\u540e\u8f93\u51fa\u3002\uff08\u4f7f\u7528C++\uff0c\u4e0d\u5efa\u8bae\u7528\u4f2a\u7801\uff09", "\n#include <iostream>", "\nusing namespace std;", "\nvoid main()", "\n{", "\nchar a[50];memset(a,0,sizeof(a));", "\nint i=0,j;", "\nchar t;", "\ncin.getline(a,50,\u2019\\n\u2019);", "\nfor(i=0,j=strlen(a)-1;i<strlen(a)/2;i++,j\u2013)", "\n{", "\nt=a[i];", "\na[i]=a[j];", "\na[j]=t;", "\n}", "\ncout<<a<<endl;", "\n}", "\n//\u7b2c\u4e8c\u79cd", "\nstring str;", "\ncin>>str;", "\nstr.replace;", "\ncout<<str;", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n3.\u8bf7\u7b80\u5355\u63cf\u8ff0Windows\u5185\u5b58\u7ba1\u7406\u7684\u65b9\u6cd5\u3002", "\n\u5185\u5b58\u7ba1\u7406\u662f\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u91cd\u8981\u90e8\u5206\uff0c\u4e24\u4e09\u53e5\u8bdd\u6050\u6015\u8c01\u4e5f\u8bf4\u4e0d\u6e05\u695a\u5427\uff5e\uff5e", "\n\u6211\u5148\u8bf4\u4e2a\u5927\u6982\uff0c\u5e0c\u671b\u80fd\u591f\u629b\u7816\u5f15\u7389\u5427", "\n\u5f53\u7a0b\u5e8f\u8fd0\u884c\u65f6\u9700\u8981\u4ece\u5185\u5b58\u4e2d\u8bfb\u51fa\u8fd9\u6bb5\u7a0b\u5e8f\u7684\u4ee3\u7801\u3002\u4ee3\u7801\u7684\u4f4d\u7f6e\u5fc5\u987b\u5728\u7269\u7406\u5185\u5b58\u4e2d\u624d\u80fd\u88ab\u8fd0\u884c\uff0c\u7531\u4e8e\u73b0\u5728\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u6709\u975e\u5e38\u591a\u7684\u7a0b\u5e8f\u8fd0\u884c\u7740\uff0c\u5185\u5b58\u4e2d\u4e0d\u80fd\u591f\u5b8c\u5168\u653e\u4e0b\uff0c\u6240\u4ee5\u5f15\u51fa\u4e86\u865a\u62df\u5185\u5b58\u7684\u6982\u5ff5\u3002\u628a\u54ea\u4e9b\u4e0d\u5e38\u7528\u7684\u7a0b\u5e8f\u7247\u65ad\u5c31\u653e\u5165\u865a\u62df\u5185\u5b58\uff0c\u5f53\u9700\u8981\u7528\u5230\u5b83\u7684\u65f6\u5019\u5728load\u5165\u4e3b\u5b58\uff08\u7269\u7406\u5185\u5b58\uff09\u4e2d\u3002\u8fd9\u4e2a\u5c31\u662f\u5185\u5b58\u7ba1\u7406\u6240\u8981\u505a\u7684\u4e8b\u3002\u5185\u5b58\u7ba1\u7406\u8fd8\u6709\u53e6\u5916\u4e00\u4ef6\u4e8b\u9700\u8981\u505a\uff1a\u8ba1\u7b97\u7a0b\u5e8f\u7247\u6bb5\u5728\u4e3b\u5b58\u4e2d\u7684\u7269\u7406\u4f4d\u7f6e\uff0c\u4ee5\u4fbfCPU\u8c03\u5ea6\u3002", "\n\u5185\u5b58\u7ba1\u7406\u6709\u5757\u5f0f\u7ba1\u7406\uff0c\u9875\u5f0f\u7ba1\u7406\uff0c\u6bb5\u5f0f\u548c\u6bb5\u9875\u5f0f\u7ba1\u7406\u3002\u73b0\u5728\u5e38\u7528\u6bb5\u9875\u5f0f\u7ba1\u7406", "\n\u5757\u5f0f\u7ba1\u7406\uff1a\u628a\u4e3b\u5b58\u5206\u4e3a\u4e00\u5927\u5757\u3001\u4e00\u5927\u5757\u7684\uff0c\u5f53\u6240\u9700\u7684\u7a0b\u5e8f\u7247\u65ad\u4e0d\u5728\u4e3b\u5b58\u65f6\u5c31\u5206\u914d\u4e00\u5757\u4e3b\u5b58\u7a7a\u95f4\uff0c\u628a\u7a0b \u5e8f\u7247\u65adload\u5165\u4e3b\u5b58\uff0c\u5c31\u7b97\u6240\u9700\u7684\u7a0b\u5e8f\u7247\u5ea6\u53ea\u6709\u51e0\u4e2a\u5b57\u8282\u4e5f\u53ea\u80fd\u628a\u8fd9\u4e00\u5757\u5206\u914d\u7ed9\u5b83\u3002\u8fd9\u6837\u4f1a\u9020\u6210\u5f88\u5927\u7684\u6d6a\u8d39\uff0c\u5e73\u5747\u6d6a\u8d39\u4e8650\uff05\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u4f46\u65f6\u6613\u4e8e\u7ba1\u7406\u3002", "\n\u9875\u5f0f\u7ba1\u7406\uff1a\u628a\u4e3b\u5b58\u5206\u4e3a\u4e00\u9875\u4e00\u9875\u7684\uff0c\u6bcf\u4e00\u9875\u7684\u7a7a\u95f4\u8981\u6bd4\u4e00\u5757\u4e00\u5757\u7684\u7a7a\u95f4\u5c0f\u5f88\u591a\uff0c\u663e\u7136\u8fd9\u79cd\u65b9\u6cd5\u7684\u7a7a\u95f4\u5229\u7528\u7387\u8981\u6bd4\u5757\u5f0f\u7ba1\u7406\u9ad8\u5f88\u591a\u3002", "\n\u6bb5\u5f0f\u7ba1\u7406\uff1a\u628a\u4e3b\u5b58\u5206\u4e3a\u4e00\u6bb5\u4e00\u6bb5\u7684\uff0c\u6bcf\u4e00\u6bb5\u7684\u7a7a\u95f4\u53c8\u8981\u6bd4\u4e00\u9875\u4e00\u9875\u7684\u7a7a\u95f4\u5c0f\u5f88\u591a\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5728\u7a7a\u95f4\u5229\u7528\u7387\u4e0a\u53c8\u6bd4\u9875\u5f0f\u7ba1\u7406\u9ad8\u5f88\u591a\uff0c\u4f46\u662f\u4e5f\u6709\u53e6\u5916\u4e00\u4e2a\u7f3a\u70b9\u3002\u4e00\u4e2a\u7a0b\u5e8f\u7247\u65ad\u53ef\u80fd\u4f1a\u88ab\u5206\u4e3a\u51e0\u5341\u6bb5\uff0c\u8fd9\u6837\u5f88\u591a\u65f6\u95f4\u5c31\u4f1a\u88ab\u6d6a\u8d39\u5728\u8ba1\u7b97\u6bcf\u4e00\u6bb5\u7684\u7269\u7406\u5730\u5740\u4e0a\uff08\u8ba1\u7b97\u673a\u6700\u8017\u65f6\u95f4\u7684\u5927\u5bb6\u90fd\u77e5\u9053\u662fI/O\u5427\uff09\u3002", "\n\u6bb5\u9875\u5f0f\u7ba1\u7406\uff1a\u7ed3\u5408\u4e86\u6bb5\u5f0f\u7ba1\u7406\u548c\u9875\u5f0f\u7ba1\u7406\u7684\u4f18\u70b9\u3002\u628a\u4e3b\u5b58\u5206\u4e3a\u82e5\u5e72\u9875\uff0c\u6bcf\u4e00\u9875\u53c8\u5206\u4e3a\u82e5\u5e72\u6bb5\u3002\u597d\u5904\u5c31\u5f88\u660e\u663e\uff0c\u4e0d\u7528\u6211\u591a\u8bf4\u4e86\u5427\u3002", "\n\u5404\u79cd\u5185\u5b58\u7ba1\u7406\u90fd\u6709\u5b83\u81ea\u5df1\u7684\u65b9\u6cd5\u6765\u8ba1\u7b97\u51fa\u7a0b\u5e8f\u7247\u65ad\u5728\u4e3b\u5b58\u4e2d\u7684\u7269\u7406\u5730\u5740\uff0c\u5176\u5b9e\u90fd\u5f88\u76f8\u4f3c\u3002", "\n\u8fd9\u53ea\u662f\u4e00\u4e2a\u5927\u6982\u800c\u5df2\uff0c\u4e0d\u8db3\u4ee5\u8bf4\u660e\u5185\u5b58\u7ba1\u7406\u7684\u76ae\u6bdb\u3002\u65e0\u8bba\u54ea\u4e00\u672c\u64cd\u4f5c\u7cfb\u7edf\u4e66\u4e0a\u90fd\u6709\u8be6\u7ec6\u7684\u8bb2\u89e3", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n4.", "\n#include \u201cstdafx.h\u201d", "\n#define SQR(X) X*X", "\nint main(int argc, char* argv[])", "\n{", "\nint a = 10;", "\nint k = 2;", "\nint m = 1;", "\na /= SQR(k+m)/SQR(k+m);", "\nprintf(\u201c%d\\n\u201d,a);", "\nreturn 0;", "\n}", "\n\u8fd9\u9053\u9898\u76ee\u7684\u7ed3\u679c\u662f\u4ec0\u4e48\u554a?", "\ndefine \u53ea\u662f\u5b9a\u4e49\u800c\u5df2\uff0c\u5728\u7f16\u62e9\u65f6\u53ea\u662f\u7b80\u5355\u4ee3\u6362X*X\u800c\u5df2\uff0c\u5e76\u4e0d\u7ecf\u8fc7\u7b97\u672f\u6cd5\u5219\u7684", "\na /= (k+m)*(k+m)/(k+m)*(k+m);", "\n=>a /= (k+m)*1*(k+m);", "\n=>a = a/9;", "\n=>a = 1;", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n5.", "\nconst \u7b26\u53f7\u5e38\u91cf\uff1b", "\n(1)const char *p", "\n(2)char const *p", "\n(3)char * const p", "\n\u8bf4\u660e\u4e0a\u9762\u4e09\u79cd\u63cf\u8ff0\u7684\u533a\u522b\uff1b", "\n\u5982\u679cconst\u4f4d\u4e8e\u661f\u53f7\u7684\u5de6\u4fa7\uff0c\u5219const\u5c31\u662f\u7528\u6765\u4fee\u9970\u6307\u9488\u6240\u6307\u5411\u7684\u53d8\u91cf\uff0c\u5373\u6307\u9488\u6307\u5411\u4e3a\u5e38\u91cf\uff1b", "\n\u5982\u679cconst\u4f4d\u4e8e\u661f\u53f7\u7684\u53f3\u4fa7\uff0cconst\u5c31\u662f\u4fee\u9970\u6307\u9488\u672c\u8eab\uff0c\u5373\u6307\u9488\u672c\u8eab\u662f\u5e38\u91cf\u3002", "\n(1)const char *p", "\n\u4e00\u4e2a\u6307\u5411char\u7c7b\u578b\u7684const\u5bf9\u8c61\u6307\u9488\uff0cp\u4e0d\u662f\u5e38\u91cf,\u6211\u4eec\u53ef\u4ee5\u4fee\u6539p\u7684\u503c\uff0c\u4f7f\u5176\u6307\u5411\u4e0d\u540c\u7684char\uff0c\u4f46\u662f\u4e0d\u80fd\u6539\u53d8\u5b83\u6307\u5411\u975echar\u5bf9\u8c61\uff0c\u5982\uff1a", "\nconst char *p;", "\nchar c1=\u2019a';", "\nchar c2=\u2019b';", "\np=&c1;//ok", "\np=&c2;//ok", "\n*p=c1;//error", "\n(3)char * const p", "\n\u6b64\u65f6*p\u53ef\u4ee5\u4fee\u6539\uff0c\u800cp\u4e0d\u80fd\u4fee\u6539\u3002", "\n(4)const char * const p", "\n\u8fd9\u79cd\u662f\u5730\u5740\u53ca\u6307\u5411\u5bf9\u8c61\u90fd\u4e0d\u80fd\u4fee\u6539\u3002", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n6.\u4e0b\u9762\u662fC\u8bed\u8a00\u4e2d\u4e24\u79cdif\u8bed\u53e5\u5224\u65ad\u65b9\u5f0f\u3002\u8bf7\u95ee\u54ea\u79cd\u5199\u6cd5\u66f4\u597d\uff1f\u4e3a\u4ec0\u4e48\uff1f", "\nint n;", "\nif (n == 10) // \u7b2c\u4e00\u79cd\u5224\u65ad\u65b9\u5f0f", "\nif (10 == n) // \u7b2c\u4e8c\u79cd\u5224\u65ad\u65b9\u5f0f", "\n\u5982\u679c\u5c11\u4e86\u4e2a=\u53f7,\u7f16\u8bd1\u65f6\u5c31\u4f1a\u62a5\u9519,\u51cf\u5c11\u4e86\u51fa\u9519\u7684\u53ef\u80fd\u884c,\u53ef\u4ee5\u68c0\u6d4b\u51fa\u662f\u5426\u5c11\u4e86=", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n7.\u4e0b\u9762\u7684\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1f", "\nvoid DoSomeThing(\u2026)", "\n{", "\nchar* p;", "\n\u2026", "\np = malloc(1024); // \u5206\u914d1K\u7684\u7a7a\u95f4", "\nif (NULL == p)", "\nreturn;", "\n\u2026", "\np = realloc(p, 2048); // \u7a7a\u95f4\u4e0d\u591f\uff0c\u91cd\u65b0\u5206\u914d\u52302K", "\nif (NULL == p)", "\nreturn;", "\n\u2026", "\n}", "\nA:", "\np = malloc(1024);\u00a0\u00a0\u00a0\u00a0 \u5e94\u8be5\u5199\u6210\uff1a p = (char *) malloc(1024);", "\n\u6ca1\u6709\u91ca\u653ep\u7684\u7a7a\u95f4\uff0c\u9020\u6210\u5185\u5b58\u6cc4\u6f0f\u3002", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n8.\u4e0b\u9762\u7684\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1f\u5e76\u8bf7\u7ed9\u51fa\u6b63\u786e\u7684\u5199\u6cd5\u3002", "\nvoid DoSomeThing(char* p)", "\n{", "\nchar str[16];", "\nint n;", "\nassert(NULL != p);", "\nsscanf(p, \u201c%s%d\u201d, str, n);", "\nif (0 == strcmp(str, \u201csomething\u201d))", "\n{", "\n\u2026", "\n}", "\n}", "\nA:", "\nsscanf(p, \u201c%s%d\u201d, str, n);\u00a0\u00a0 \u8fd9\u53e5\u8be5\u5199\u6210\uff1a sscanf(p, \u201c%s%d\u201d, str, &n);", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n9.\u4e0b\u9762\u4ee3\u7801\u6709\u4ec0\u4e48\u9519\u8bef?", "\nVoid test1()", "\n{", "\nchar string[10];", "\nchar *str1=\u201d0123456789\u2033;", "\nstrcpy(string, str1);", "\n}", "\n\u6570\u7ec4\u8d8a\u754c", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n10.\u4e0b\u9762\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898?", "\nVoid test2()", "\n{", "\nchar string[10], str1[10];", "\nfor(i=0; i<10;i++)", "\n{", "\nstr1[i] =\u2019a';", "\n}", "\nstrcpy(string, str1);", "\n}", "\n\u6570\u7ec4\u8d8a\u754c"], "title": "\u5e38\u89c1C++\u7b14\u8bd5\u9898\u76ee\u6574\u7406\uff08\u542b\u7b54\u6848\uff091"},
{"contents": ["\u5df2\u77e5String\u7c7b\u5b9a\u4e49\u5982\u4e0b\uff1a", "class String", "\n{", "\npublic:", "\nString(const char *str = NULL); // \u901a\u7528\u6784\u9020\u51fd\u6570", "\nString(const String &another); // \u62f7\u8d1d\u6784\u9020\u51fd\u6570", "\n~ String(); // \u6790\u6784\u51fd\u6570", "\nString & operater =(const String &rhs); // \u8d4b\u503c\u51fd\u6570", "\nprivate:", "\nchar *m_data; // \u7528\u4e8e\u4fdd\u5b58\u5b57\u7b26\u4e32", "\n};", "\u5c1d\u8bd5\u5199\u51fa\u7c7b\u7684\u6210\u5458\u51fd\u6570\u5b9e\u73b0\u3002", "\u7b54\u6848\uff1a", "String::String(const char *str)", "\n{", "\nif ( str == NULL ) //strlen\u5728\u53c2\u6570\u4e3aNULL\u65f6\u4f1a\u629b\u5f02\u5e38\u624d\u4f1a\u6709\u8fd9\u6b65\u5224\u65ad", "\n{", "\nm_data = new char[1] ;", "\nm_data[0] = \u2018\\0\u2032 ;", "\n}", "\nelse", "\n{", "\nm_data = new char[strlen(str) + 1];", "\nstrcpy(m_data,str);", "\n}", "}", "String::String(const String &another)", "\n{", "\nm_data = new char[strlen(another.m_data) + 1];", "\nstrcpy(m_data,other.m_data);", "\n}", "String& String::operator =(const String &rhs)", "\n{", "\nif ( this == &rhs)", "\nreturn *this ;", "\ndelete []m_data; //\u5220\u9664\u539f\u6765\u7684\u6570\u636e\uff0c\u65b0\u5f00\u4e00\u5757\u5185\u5b58", "\nm_data = new char[strlen(rhs.m_data) + 1];", "\nstrcpy(m_data,rhs.m_data);", "\nreturn *this ;", "\n}", "String::~String()", "\n{", "\ndelete []m_data ;", "\n}"], "title": "\u5c1d\u8bd5\u5199\u51fa\u7c7b\u7684\u6210\u5458\u51fd\u6570\u5b9e\u73b0"},
{"contents": ["11.\u4e0b\u9762\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898?", "\nVoid test3(char* str1)", "\n{", "\nchar string[10];", "\nif(strlen(str1)<=10)", "\n{", "\nstrcpy(string, str1);", "\n}", "\n}", "\n==\u6570\u7ec4\u8d8a\u754c", "\n==strcpy\u62f7\u8d1d\u7684\u7ed3\u675f\u6807\u5fd7\u662f\u67e5\u627e\u5b57\u7b26\u4e32\u4e2d\u7684\\0 \u56e0\u6b64\u5982\u679c\u5b57\u7b26\u4e32\u4e2d\u6ca1\u6709\u9047\u5230\\0\u7684\u8bdd \u4f1a\u4e00\u76f4\u590d\u5236\uff0c\u76f4\u5230\u9047\u5230\\0,\u4e0a\u9762\u7684123\u90fd\u56e0\u6b64\u4ea7\u751f\u8d8a\u754c\u7684\u60c5\u51b5", "\n\u5efa\u8bae\u4f7f\u7528 strncpy \u548c memcpy", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n12.\u4e0b\u9762\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898?", "\n#define MAX_SRM 256", "\nDSN get_SRM_no()", "\n{", "\nstatic int SRM_no; //\u662f\u4e0d\u662f\u8fd9\u91cc\u6ca1\u8d4b\u521d\u503c\uff1f", "\nint I;", "\nfor(I=0;I<MAX_SRM;I++,SRM_no++)", "\n{", "\nSRM_no %= MAX_SRM;", "\nif(MY_SRM.state==IDLE)", "\n{", "\nbreak;", "\n}", "\n}", "\nif(I>=MAX_SRM)", "\nreturn (NULL_SRM);", "\nelse", "\nreturn SRM_no;", "\n}", "\n\u7cfb\u7edf\u4f1a\u521d\u59cb\u5316static int\u53d8\u91cf\u4e3a0,\u4f46\u8be5\u503c\u4f1a\u4e00\u76f4\u4fdd\u5b58,\u6240\u8c13\u7684\u4e0d\u53ef\u91cd\u5165\u2026", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n13.\u5199\u51fa\u8fd0\u884c\u7ed3\u679c:", "\n{// test1", "\nchar str[] = \u201cworld\u201d; cout << sizeof(str) << \u201c: \u201c;", "\nchar *p\u00a0\u00a0\u00a0 = str;\u00a0\u00a0\u00a0\u00a0 cout << sizeof(p) << \u201c: \u201c;", "\nchar i\u00a0\u00a0\u00a0\u00a0 = 10;\u00a0\u00a0\u00a0\u00a0\u00a0 cout << sizeof(i) << \u201c: \u201c;", "\nvoid *pp\u00a0\u00a0 = malloc(10); cout << sizeof(p) << endl;", "\n}", "\n6\uff1a4\uff1a1\uff1a4", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n14.\u5199\u51fa\u8fd0\u884c\u7ed3\u679c:", "\n{// test2", "\nunion V {", "\nstruct X {", "\nunsigned char s1:2;", "\nunsigned char s2:3;", "\nunsigned char s3:3;", "\n} x;", "\nunsigned char c;", "\n} v;", "\nv.c = 100;", "\nprintf(\u201c%d\u201d, v.x.s3);", "\n}", "\n3", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n15.\u7528C++\u5199\u4e2a\u7a0b\u5e8f\uff0c\u5982\u4f55\u5224\u65ad\u4e00\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u662f16\u4f4d\u8fd8\u662f32\u4f4d\u7684\uff1f\u4e0d\u80fd\u7528sizeof()\u51fd\u6570", "\nA1:", "\n16\u4f4d\u7684\u7cfb\u7edf\u4e0b\uff0c", "\nint i = 65536;", "\ncout << i; // \u8f93\u51fa0\uff1b", "\nint i = 65535;", "\ncout << i; // \u8f93\u51fa-1\uff1b", "\n32\u4f4d\u7684\u7cfb\u7edf\u4e0b\uff0c", "\nint i = 65536;", "\ncout << i; // \u8f93\u51fa65536\uff1b", "\nint i = 65535;", "\ncout << i; // \u8f93\u51fa65535\uff1b", "\nA2:", "\nint a = ~0;", "\nif( a>65536 )", "\n{", "\ncout<<\u201d32 bit\u201d<<endl;", "\n}", "\nelse", "\n{", "\ncout<<\u201d16 bit\u201d<<endl;", "\n}", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n16.C\u548cC++\u6709\u4ec0\u4e48\u4e0d\u540c?", "\n\u4ece\u673a\u5236\u4e0a\uff1ac\u662f\u9762\u5411\u8fc7\u7a0b\u7684\uff08\u4f46c\u4e5f\u53ef\u4ee5\u7f16\u5199\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\uff09\uff1bc++\u662f\u9762\u5411\u5bf9\u8c61\u7684\uff0c\u63d0\u4f9b\u4e86\u7c7b\u3002\u4f46\u662f\uff0c", "\nc++\u7f16\u5199\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u6bd4c\u5bb9\u6613", "\n\u4ece\u9002\u7528\u7684\u65b9\u5411\uff1ac\u9002\u5408\u8981\u6c42\u4ee3\u7801\u4f53\u79ef\u5c0f\u7684\uff0c\u6548\u7387\u9ad8\u7684\u573a\u5408\uff0c\u5982\u5d4c\u5165\u5f0f\uff1bc++\u9002\u5408\u66f4\u4e0a\u5c42\u7684\uff0c\u590d\u6742\u7684\uff1b llinux\u6838\u5fc3\u5927\u90e8\u5206\u662fc\u5199\u7684\uff0c\u56e0\u4e3a\u5b83\u662f\u7cfb\u7edf\u8f6f\u4ef6\uff0c\u6548\u7387\u8981\u6c42\u6781\u9ad8\u3002", "\n\u4ece\u540d\u79f0\u4e0a\u4e5f\u53ef\u4ee5\u770b\u51fa\uff0cc++\u6bd4c\u591a\u4e86+\uff0c\u8bf4\u660ec++\u662fc\u7684\u8d85\u96c6\uff1b\u90a3\u4e3a\u4ec0\u4e48\u4e0d\u53ebc+\u800c\u53ebc++\u5462\uff0c\u662f\u56e0\u4e3ac++\u6bd4", "\nc\u6765\u8bf4\u6269\u5145\u7684\u4e1c\u897f\u592a\u591a\u4e86\uff0c\u6240\u4ee5\u5c31\u5728c\u540e\u9762\u653e\u4e0a\u4e24\u4e2a+\uff1b\u4e8e\u662f\u5c31\u6210\u4e86c++", "\nC\u8bed\u8a00\u662f\u7ed3\u6784\u5316\u7f16\u7a0b\u8bed\u8a00\uff0cC++\u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u8bed\u8a00\u3002", "\nC++\u4fa7\u91cd\u4e8e\u5bf9\u8c61\u800c\u4e0d\u662f\u8fc7\u7a0b\uff0c\u4fa7\u91cd\u4e8e\u7c7b\u7684\u8bbe\u8ba1\u800c\u4e0d\u662f\u903b\u8f91\u7684\u8bbe\u8ba1\u3002", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n17.\u5728\u4e0d\u7528\u7b2c\u4e09\u65b9\u53c2\u6570\u7684\u60c5\u51b5\u4e0b\uff0c\u4ea4\u6362\u4e24\u4e2a\u53c2\u6570\u7684\u503c", "\n#include <stdio.h>", "\nvoid main()", "\n{", "\nint i=60;", "\nint j=50;", "\ni=i+j;", "\nj=i-j;", "\ni=i-j;", "\nprintf(\u201ci=%d\\n\u201d,i);", "\nprintf(\u201cj=%d\\n\u201d,j);", "\n}", "\n\u65b9\u6cd5\u4e8c\uff1a", "\ni^=j;", "\nj^=i;", "\ni^=j;", "\n\u65b9\u6cd5\u4e09\uff1a", "\n// \u7528\u52a0\u51cf\u5b9e\u73b0\uff0c\u800c\u4e14\u4e0d\u4f1a\u6ea2\u51fa", "\na = a+b-(b=a)", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n18.\u6709\u5173\u4f4d\u57df\u7684\u9762\u8bd5\u9898\uff08\u4e3a\u4ec0\u4e48\u8f93\u51fa\u7684\u662f\u4e00\u4e2a\u5947\u602a\u7684\u5b57\u7b26\uff09", "\na.t = \u2018b\u2019;\u6548\u679c\u76f8\u5f53\u4e8e a.t= \u2018b\u2019 & 0xf;", "\n\u2018b\u2019 \u2013> 01100010", "\n\u2018b\u2019 & 0xf \u2013>>00000010", "\n\u6240\u4ee5\u8f93\u51faAscii\u7801\u4e3a2\u7684\u7279\u6b8a\u5b57\u7b26", "\nchar t:4;\u5c31\u662f4bit\u7684\u5b57\u7b26\u53d8\u91cf\uff0c\u540c\u6837", "\nunsigned short i:8;\u5c31\u662f8bit\u7684\u65e0\u7b26\u53f7\u77ed\u6574\u5f62\u53d8\u91cf", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n19.int i=10, j=10, k=3; k*=i+j; k\u6700\u540e\u7684\u503c\u662f?", "\n60", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n20.\u8fdb\u7a0b\u95f4\u901a\u4fe1\u7684\u65b9\u5f0f\u6709?", "\n\u8fdb\u7a0b\u95f4\u901a\u4fe1\u7684\u65b9\u5f0f\u6709 \u5171\u4eab\u5185\u5b58\uff0c \u7ba1\u9053 \uff0cSocket \uff0c\u6d88\u606f\u961f\u5217 , DDE\u7b49"], "title": "\u5e38\u89c1C++\u7b14\u8bd5\u9898\u76ee\u6574\u7406\uff08\u542b\u7b54\u6848\uff092"},
{"contents": ["1.\u6c42\u4e0b\u9762\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff08\u5fae\u8f6f\uff09", "int func(x)", "\n{", "\nint countx = 0;", "\nwhile(x)", "\n{", "\ncountx ++;", "\nx = x&(x-1);", "\n}", "\nreturn countx;", "\n}", "\u5047\u5b9ax = 9999\u3002 \u7b54\u6848\uff1a8", "\u601d\u8def\uff1a\u5c06x\u8f6c\u5316\u4e3a2\u8fdb\u5236\uff0c\u770b\u542b\u6709\u76841\u7684\u4e2a\u6570\u3002", "2. \u4ec0\u4e48\u662f\u201c\u5f15\u7528\u201d\uff1f\u7533\u660e\u548c\u4f7f\u7528\u201c\u5f15\u7528\u201d\u8981\u6ce8\u610f\u54ea\u4e9b\u95ee\u9898\uff1f", "\u7b54\uff1a\u5f15\u7528\u5c31\u662f\u67d0\u4e2a\u76ee\u6807\u53d8\u91cf\u7684\u201c\u522b\u540d\u201d(alias)\uff0c\u5bf9\u5e94\u7528\u7684\u64cd\u4f5c\u4e0e\u5bf9\u53d8\u91cf\u76f4\u63a5\u64cd\u4f5c\u6548\u679c\u5b8c\u5168\u76f8\u540c\u3002\u7533\u660e\u4e00\u4e2a\u5f15\u7528\u7684\u65f6\u5019\uff0c\u5207\u8bb0\u8981\u5bf9\u5176\u8fdb\u884c\u521d\u59cb\u5316\u3002\u5f15\u7528\u58f0\u660e\u5b8c\u6bd5\u540e\uff0c\u76f8\u5f53\u4e8e\u76ee\u6807\u53d8\u91cf\u540d\u6709\u4e24\u4e2a\u540d\u79f0\uff0c\u5373\u8be5\u76ee\u6807\u539f\u540d\u79f0\u548c\u5f15\u7528\u540d\uff0c\u4e0d\u80fd\u518d\u628a\u8be5\u5f15\u7528\u540d\u4f5c\u4e3a\u5176\u4ed6\u53d8\u91cf\u540d\u7684\u522b\u540d\u3002\u58f0\u660e\u4e00\u4e2a\u5f15\u7528\uff0c\u4e0d\u662f\u65b0\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53d8\u91cf\uff0c\u5b83\u53ea\u8868\u793a\u8be5\u5f15\u7528\u540d\u662f\u76ee\u6807\u53d8\u91cf\u540d\u7684\u4e00\u4e2a\u522b\u540d\uff0c\u5b83\u672c\u8eab\u4e0d\u662f\u4e00\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u56e0\u6b64\u5f15\u7528\u672c\u8eab\u4e0d\u5360\u5b58\u50a8\u5355\u5143\uff0c\u7cfb\u7edf\u4e5f\u4e0d\u7ed9\u5f15\u7528\u5206\u914d\u5b58\u50a8\u5355\u5143\u3002\u4e0d\u80fd\u5efa\u7acb\u6570\u7ec4\u7684\u5f15\u7528\u3002", "3. \u5c06\u201c\u5f15\u7528\u201d\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u6709\u54ea\u4e9b\u7279\u70b9\uff1f", "\uff081\uff09\u4f20\u9012\u5f15\u7528\u7ed9\u51fd\u6570\u4e0e\u4f20\u9012\u6307\u9488\u7684\u6548\u679c\u662f\u4e00\u6837\u7684\u3002\u8fd9\u65f6\uff0c\u88ab\u8c03\u51fd\u6570\u7684\u5f62\u53c2\u5c31\u6210\u4e3a\u539f\u6765\u4e3b\u8c03\u51fd\u6570\u4e2d\u7684\u5b9e\u53c2\u53d8\u91cf\u6216\u5bf9\u8c61\u7684\u4e00\u4e2a\u522b\u540d\u6765\u4f7f\u7528\uff0c\u6240\u4ee5\u5728\u88ab\u8c03\u51fd\u6570\u4e2d\u5bf9\u5f62\u53c2\u53d8\u91cf\u7684\u64cd\u4f5c\u5c31\u662f\u5bf9\u5176\u76f8\u5e94\u7684\u76ee\u6807\u5bf9\u8c61\uff08\u5728\u4e3b\u8c03\u51fd\u6570\u4e2d\uff09\u7684\u64cd\u4f5c\u3002", "\uff082\uff09\u4f7f\u7528\u5f15\u7528\u4f20\u9012\u51fd\u6570\u7684\u53c2\u6570\uff0c\u5728\u5185\u5b58\u4e2d\u5e76\u6ca1\u6709\u4ea7\u751f\u5b9e\u53c2\u7684\u526f\u672c\uff0c\u5b83\u662f\u76f4\u63a5\u5bf9\u5b9e\u53c2\u64cd\u4f5c\uff1b\u800c\u4f7f\u7528\u4e00\u822c\u53d8\u91cf\u4f20\u9012\u51fd\u6570\u7684\u53c2\u6570\uff0c\u5f53\u53d1\u751f\u51fd\u6570\u8c03\u7528\u65f6\uff0c\u9700\u8981\u7ed9\u5f62\u53c2\u5206\u914d\u5b58\u50a8\u5355\u5143\uff0c\u5f62\u53c2\u53d8\u91cf\u662f\u5b9e\u53c2\u53d8\u91cf\u7684\u526f\u672c\uff1b\u5982\u679c\u4f20\u9012\u7684\u662f\u5bf9\u8c61\uff0c\u8fd8\u5c06\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002\u56e0\u6b64\uff0c\u5f53\u53c2\u6570\u4f20\u9012\u7684\u6570\u636e\u8f83\u5927\u65f6\uff0c\u7528\u5f15\u7528\u6bd4\u7528\u4e00\u822c\u53d8\u91cf\u4f20\u9012\u53c2\u6570\u7684\u6548\u7387\u548c\u6240\u5360\u7a7a\u95f4\u90fd\u597d\u3002", "\uff083\uff09\u4f7f\u7528\u6307\u9488\u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570\u867d\u7136\u4e5f\u80fd\u8fbe\u5230\u4e0e\u4f7f\u7528\u5f15\u7528\u7684\u6548\u679c\uff0c\u4f46\u662f\uff0c\u5728\u88ab\u8c03\u51fd\u6570\u4e2d\u540c\u6837\u8981\u7ed9\u5f62\u53c2\u5206\u914d\u5b58\u50a8\u5355\u5143\uff0c\u4e14\u9700\u8981\u91cd\u590d\u4f7f\u7528\u201d*\u6307\u9488\u53d8\u91cf\u540d\u201d\u7684\u5f62\u5f0f\u8fdb\u884c\u8fd0\u7b97\uff0c\u8fd9\u5f88\u5bb9\u6613\u4ea7\u751f\u9519\u8bef\u4e14\u7a0b\u5e8f\u7684\u9605\u8bfb\u6027\u8f83\u5dee\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u5728\u4e3b\u8c03\u51fd\u6570\u7684\u8c03\u7528\u70b9\u5904\uff0c\u5fc5\u987b\u7528\u53d8\u91cf\u7684\u5730\u5740\u4f5c\u4e3a\u5b9e\u53c2\u3002\u800c\u5f15\u7528\u66f4\u5bb9\u6613\u4f7f\u7528\uff0c\u66f4\u6e05\u6670\u3002", "4. \u5728\u4ec0\u4e48\u65f6\u5019\u9700\u8981\u4f7f\u7528\u201c\u5e38\u5f15\u7528\u201d\uff1f", "\u5982\u679c\u65e2\u8981\u5229\u7528\u5f15\u7528\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6548\u7387\uff0c\u53c8\u8981\u4fdd\u62a4\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u6570\u636e\u4e0d\u5728\u51fd\u6570\u4e2d\u88ab\u6539\u53d8\uff0c\u5c31\u5e94\u4f7f\u7528\u5e38\u5f15\u7528\u3002\u5e38\u5f15\u7528\u58f0\u660e\u65b9\u5f0f\uff1aconst \u7c7b\u578b\u6807\u8bc6\u7b26 &\u5f15\u7528\u540d=\u76ee\u6807\u53d8\u91cf\u540d\uff1b", "\u4f8b1", "int a ;", "\nconst int &ra=a;", "\nra=1; //\u9519\u8bef", "\na=1; //\u6b63\u786e", "\u4f8b2", "string foo( );", "\nvoid bar(string & s);", "\u90a3\u4e48\u4e0b\u9762\u7684\u8868\u8fbe\u5f0f\u5c06\u662f\u975e\u6cd5\u7684\uff1a", "bar(foo( ));", "\nbar(\u201chello world\u201d);", "\u539f\u56e0\u5728\u4e8efoo( )\u548c\u201dhello world\u201d\u4e32\u90fd\u4f1a\u4ea7\u751f\u4e00\u4e2a\u4e34\u65f6\u5bf9\u8c61\uff0c\u800c\u5728C++\u4e2d\uff0c\u8fd9\u4e9b\u4e34\u65f6\u5bf9\u8c61\u90fd\u662fconst\u7c7b\u578b\u7684\u3002\u56e0\u6b64\u4e0a\u9762\u7684\u8868\u8fbe\u5f0f\u5c31\u662f\u8bd5\u56fe\u5c06\u4e00\u4e2aconst\u7c7b\u578b\u7684\u5bf9\u8c61\u8f6c\u6362\u4e3a\u975econst\u7c7b\u578b\uff0c\u8fd9\u662f\u975e\u6cd5\u7684\u3002", "\u5f15\u7528\u578b\u53c2\u6570\u5e94\u8be5\u5728\u80fd\u88ab\u5b9a\u4e49\u4e3aconst\u7684\u60c5\u51b5\u4e0b\uff0c\u5c3d\u91cf\u5b9a\u4e49\u4e3aconst \u3002", "5. \u5c06\u201c\u5f15\u7528\u201d\u4f5c\u4e3a\u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b\u7684\u683c\u5f0f\u3001\u597d\u5904\u548c\u9700\u8981\u9075\u5b88\u7684\u89c4\u5219?", "\u683c\u5f0f\uff1a\u7c7b\u578b\u6807\u8bc6\u7b26 &\u51fd\u6570\u540d\uff08\u5f62\u53c2\u5217\u8868\u53ca\u7c7b\u578b\u8bf4\u660e\uff09{ //\u51fd\u6570\u4f53 }", "\u597d\u5904\uff1a\u5728\u5185\u5b58\u4e2d\u4e0d\u4ea7\u751f\u88ab\u8fd4\u56de\u503c\u7684\u526f\u672c\uff1b\uff08\u6ce8\u610f\uff1a\u6b63\u662f\u56e0\u4e3a\u8fd9\u70b9\u539f\u56e0\uff0c\u6240\u4ee5\u8fd4\u56de\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u5f15\u7528\u662f\u4e0d\u53ef\u53d6\u7684\u3002\u56e0\u4e3a\u968f\u7740\u8be5\u5c40\u90e8\u53d8\u91cf\u751f\u5b58\u671f\u7684\u7ed3\u675f\uff0c\u76f8\u5e94\u7684\u5f15\u7528\u4e5f\u4f1a\u5931\u6548\uff0c\u4ea7\u751fruntime error!", "\u6ce8\u610f\u4e8b\u9879\uff1a", "\uff081\uff09\u4e0d\u80fd\u8fd4\u56de\u5c40\u90e8\u53d8\u91cf\u7684\u5f15\u7528\u3002\u8fd9\u6761\u53ef\u4ee5\u53c2\u7167Effective C++[1]\u7684Item 31\u3002\u4e3b\u8981\u539f\u56e0\u662f\u5c40\u90e8\u53d8\u91cf\u4f1a\u5728\u51fd\u6570\u8fd4\u56de\u540e\u88ab\u9500\u6bc1\uff0c\u56e0\u6b64\u88ab\u8fd4\u56de\u7684\u5f15\u7528\u5c31\u6210\u4e3a\u4e86\u201d\u65e0\u6240\u6307\u201d\u7684\u5f15\u7528\uff0c\u7a0b\u5e8f\u4f1a\u8fdb\u5165\u672a\u77e5\u72b6\u6001\u3002", "\uff082\uff09\u4e0d\u80fd\u8fd4\u56de\u51fd\u6570\u5185\u90e8new\u5206\u914d\u7684\u5185\u5b58\u7684\u5f15\u7528\u3002\u8fd9\u6761\u53ef\u4ee5\u53c2\u7167Effective C++[1]\u7684Item 31\u3002\u867d\u7136\u4e0d\u5b58\u5728\u5c40\u90e8\u53d8\u91cf\u7684\u88ab\u52a8\u9500\u6bc1\u95ee\u9898\uff0c\u53ef\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff08\u8fd4\u56de\u51fd\u6570\u5185\u90e8new\u5206\u914d\u5185\u5b58\u7684\u5f15\u7528\uff09\uff0c\u53c8\u9762\u4e34\u5176\u5b83\u5c34\u5c2c\u5c40\u9762\u3002\u4f8b\u5982\uff0c\u88ab\u51fd\u6570\u8fd4\u56de\u7684\u5f15\u7528\u53ea\u662f\u4f5c\u4e3a\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf\u51fa\u73b0\uff0c\u800c\u6ca1\u6709\u88ab\u8d4b\u4e88\u4e00\u4e2a\u5b9e\u9645\u7684\u53d8\u91cf\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5f15\u7528\u6240\u6307\u5411\u7684\u7a7a\u95f4\uff08\u7531new\u5206\u914d\uff09\u5c31\u65e0\u6cd5\u91ca\u653e\uff0c\u9020\u6210memory leak\u3002", "\uff083\uff09\u53ef\u4ee5\u8fd4\u56de\u7c7b\u6210\u5458\u7684\u5f15\u7528\uff0c\u4f46\u6700\u597d\u662fconst\u3002\u8fd9\u6761\u539f\u5219\u53ef\u4ee5\u53c2\u7167Effective C++[1]\u7684Item 30\u3002\u4e3b\u8981\u539f\u56e0\u662f\u5f53\u5bf9\u8c61\u7684\u5c5e\u6027\u662f\u4e0e\u67d0\u79cd\u4e1a\u52a1\u89c4\u5219\uff08business rule\uff09\u76f8\u5173\u8054\u7684\u65f6\u5019\uff0c\u5176\u8d4b\u503c\u5e38\u5e38\u4e0e\u67d0\u4e9b\u5176\u5b83\u5c5e\u6027\u6216\u8005\u5bf9\u8c61\u7684\u72b6\u6001\u6709\u5173\uff0c\u56e0\u6b64\u6709\u5fc5\u8981\u5c06\u8d4b\u503c\u64cd\u4f5c\u5c01\u88c5\u5728\u4e00\u4e2a\u4e1a\u52a1\u89c4\u5219\u5f53\u4e2d\u3002\u5982\u679c\u5176\u5b83\u5bf9\u8c61\u53ef\u4ee5\u83b7\u5f97\u8be5\u5c5e\u6027\u7684\u975e\u5e38\u91cf\u5f15\u7528\uff08\u6216\u6307\u9488\uff09\uff0c\u90a3\u4e48\u5bf9\u8be5\u5c5e\u6027\u7684\u5355\u7eaf\u8d4b\u503c\u5c31\u4f1a\u7834\u574f\u4e1a\u52a1\u89c4\u5219\u7684\u5b8c\u6574\u6027\u3002", "\uff084\uff09\u6d41\u64cd\u4f5c\u7b26\u91cd\u8f7d\u8fd4\u56de\u503c\u7533\u660e\u4e3a\u201c\u5f15\u7528\u201d\u7684\u4f5c\u7528\uff1a", "\u6d41\u64cd\u4f5c\u7b26<<\u548c>>\uff0c\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u7b26\u5e38\u5e38\u5e0c\u671b\u88ab\u8fde\u7eed\u4f7f\u7528\uff0c\u4f8b\u5982\uff1acout << \u201chello\u201d << endl;\u3000\u56e0\u6b64\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u7b26\u7684\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a\u4ecd\u7136\u652f\u6301\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u7b26\u7684\u6d41\u5f15\u7528\u3002\u53ef\u9009\u7684\u5176\u5b83\u65b9\u6848\u5305\u62ec\uff1a\u8fd4\u56de\u4e00\u4e2a\u6d41\u5bf9\u8c61\u548c\u8fd4\u56de\u4e00\u4e2a\u6d41\u5bf9\u8c61\u6307\u9488\u3002\u4f46\u662f\u5bf9\u4e8e\u8fd4\u56de\u4e00\u4e2a\u6d41\u5bf9\u8c61\uff0c\u7a0b\u5e8f\u5fc5\u987b\u91cd\u65b0\uff08\u62f7\u8d1d\uff09\u6784\u9020\u4e00\u4e2a\u65b0\u7684\u6d41\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fde\u7eed\u7684\u4e24\u4e2a<<\u64cd\u4f5c\u7b26\u5b9e\u9645\u4e0a\u662f\u9488\u5bf9\u4e0d\u540c\u5bf9\u8c61\u7684\uff01\u8fd9\u65e0\u6cd5\u8ba9\u4eba\u63a5\u53d7\u3002\u5bf9\u4e8e\u8fd4\u56de\u4e00\u4e2a\u6d41\u6307\u9488\u5219\u4e0d\u80fd\u8fde\u7eed\u4f7f\u7528<<\u64cd\u4f5c\u7b26\u3002\u56e0\u6b64\uff0c\u8fd4\u56de\u4e00\u4e2a\u6d41\u5bf9\u8c61\u5f15\u7528\u662f\u60df\u4e00\u9009\u62e9\u3002\u8fd9\u4e2a\u552f\u4e00\u9009\u62e9\u5f88\u5173\u952e\uff0c\u5b83\u8bf4\u660e\u4e86\u5f15\u7528\u7684\u91cd\u8981\u6027\u4ee5\u53ca\u65e0\u53ef\u66ff\u4ee3\u6027\uff0c\u4e5f\u8bb8\u8fd9\u5c31\u662fC++\u8bed\u8a00\u4e2d\u5f15\u5165\u5f15\u7528\u8fd9\u4e2a\u6982\u5ff5\u7684\u539f\u56e0\u5427\u3002\u8d4b\u503c\u64cd\u4f5c\u7b26=\u3002\u8fd9\u4e2a\u64cd\u4f5c\u7b26\u8c61\u6d41\u64cd\u4f5c\u7b26\u4e00\u6837\uff0c\u662f\u53ef\u4ee5\u8fde\u7eed\u4f7f\u7528\u7684\uff0c\u4f8b\u5982\uff1ax = j = 10;\u6216\u8005(x=10)=100;\u8d4b\u503c\u64cd\u4f5c\u7b26\u7684\u8fd4\u56de\u503c\u5fc5\u987b\u662f\u4e00\u4e2a\u5de6\u503c\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u88ab\u7ee7\u7eed\u8d4b\u503c\u3002\u56e0\u6b64\u5f15\u7528\u6210\u4e86\u8fd9\u4e2a\u64cd\u4f5c\u7b26\u7684\u60df\u4e00\u8fd4\u56de\u503c\u9009\u62e9\u3002", "\u4f8b3", "\uff03i nclude", "\nint &put(int n);", "\nint vals[10];", "\nint error=-1;", "\nvoid main()", "\n{", "\nput(0)=10; //\u4ee5put(0)\u51fd\u6570\u503c\u4f5c\u4e3a\u5de6\u503c\uff0c\u7b49\u4ef7\u4e8evals[0]=10;", "\nput(9)=20; //\u4ee5put(9)\u51fd\u6570\u503c\u4f5c\u4e3a\u5de6\u503c\uff0c\u7b49\u4ef7\u4e8evals[9]=20;", "\ncout<cout<}", "\nint &put(int n)", "\n{", "\nif (n>=0 && n<=9 ) return vals[n];", "\nelse { cout<<\u201dsubscript error\u201d; return error; }", "\n}", "\uff085\uff09\u5728\u53e6\u5916\u7684\u4e00\u4e9b\u64cd\u4f5c\u7b26\u4e2d\uff0c\u5374\u5343\u4e07\u4e0d\u80fd\u8fd4\u56de\u5f15\u7528\uff1a+-*/ \u56db\u5219\u8fd0\u7b97\u7b26\u3002\u5b83\u4eec\u4e0d\u80fd\u8fd4\u56de\u5f15\u7528\uff0cEffective C++[1]\u7684Item23\u8be6\u7ec6\u7684\u8ba8\u8bba\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\u4e3b\u8981\u539f\u56e0\u662f\u8fd9\u56db\u4e2a\u64cd\u4f5c\u7b26\u6ca1\u6709side effect\uff0c\u56e0\u6b64\uff0c\u5b83\u4eec\u5fc5\u987b\u6784\u9020\u4e00\u4e2a\u5bf9\u8c61\u4f5c\u4e3a\u8fd4\u56de\u503c\uff0c\u53ef\u9009\u7684\u65b9\u6848\u5305\u62ec\uff1a\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\u3001\u8fd4\u56de\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u5f15\u7528\uff0c\u8fd4\u56de\u4e00\u4e2anew\u5206\u914d\u7684\u5bf9\u8c61\u7684\u5f15\u7528\u3001\u8fd4\u56de\u4e00\u4e2a\u9759\u6001\u5bf9\u8c61\u5f15\u7528\u3002\u6839\u636e\u524d\u9762\u63d0\u5230\u7684\u5f15\u7528\u4f5c\u4e3a\u8fd4\u56de\u503c\u7684\u4e09\u4e2a\u89c4\u5219\uff0c\u7b2c2\u30013\u4e24\u4e2a\u65b9\u6848\u90fd\u88ab\u5426\u51b3\u4e86\u3002\u9759\u6001\u5bf9\u8c61\u7684\u5f15\u7528\u53c8\u56e0\u4e3a((a+b) == (c+d))\u4f1a\u6c38\u8fdc\u4e3atrue\u800c\u5bfc\u81f4\u9519\u8bef\u3002\u6240\u4ee5\u53ef\u9009\u7684\u53ea\u5269\u4e0b\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\u4e86\u3002", "6. \u201c\u5f15\u7528\u201d\u4e0e\u591a\u6001\u7684\u5173\u7cfb\uff1f", "\u5f15\u7528\u662f\u9664\u6307\u9488\u5916\u53e6\u4e00\u4e2a\u53ef\u4ee5\u4ea7\u751f\u591a\u6001\u6548\u679c\u7684\u624b\u6bb5\u3002\u8fd9\u610f\u5473\u7740\uff0c\u4e00\u4e2a\u57fa\u7c7b\u7684\u5f15\u7528\u53ef\u4ee5\u6307\u5411\u5b83\u7684\u6d3e\u751f\u7c7b\u5b9e\u4f8b\u3002", "\u4f8b4", "Class A; Class B : Class A{\u2026}; B b; A& ref = b;", "7. \u201c\u5f15\u7528\u201d\u4e0e\u6307\u9488\u7684\u533a\u522b\u662f\u4ec0\u4e48\uff1f", "\u6307\u9488\u901a\u8fc7\u67d0\u4e2a\u6307\u9488\u53d8\u91cf\u6307\u5411\u4e00\u4e2a\u5bf9\u8c61\u540e\uff0c\u5bf9\u5b83\u6240\u6307\u5411\u7684\u53d8\u91cf\u95f4\u63a5\u64cd\u4f5c\u3002\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u6307\u9488\uff0c\u7a0b\u5e8f\u7684\u53ef\u8bfb\u6027\u5dee\uff1b\u800c\u5f15\u7528\u672c\u8eab\u5c31\u662f\u76ee\u6807\u53d8\u91cf\u7684\u522b\u540d\uff0c\u5bf9\u5f15\u7528\u7684\u64cd\u4f5c\u5c31\u662f\u5bf9\u76ee\u6807\u53d8\u91cf\u7684\u64cd\u4f5c\u3002\u6b64\u5916\uff0c\u5c31\u662f\u4e0a\u9762\u63d0\u5230\u7684\u5bf9\u51fd\u6570\u4f20ref\u548cpointer\u7684\u533a\u522b\u3002", "8. \u4ec0\u4e48\u65f6\u5019\u9700\u8981\u201c\u5f15\u7528\u201d\uff1f", "\u6d41\u64cd\u4f5c\u7b26<<\u548c>>\u3001\u8d4b\u503c\u64cd\u4f5c\u7b26=\u7684\u8fd4\u56de\u503c\u3001\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u7684\u53c2\u6570\u3001\u8d4b\u503c\u64cd\u4f5c\u7b26=\u7684\u53c2\u6570\u3001\u5176\u5b83\u60c5\u51b5\u90fd\u63a8\u8350\u4f7f\u7528\u5f15\u7528\u3002", "\u4ee5\u4e0a 2-8 \u53c2\u8003\uff1ahttp://blog.csdn.net/wfwd/archive/2006/05/30/763551.aspx", "9. \u7ed3\u6784\u4e0e\u8054\u5408\u6709\u548c\u533a\u522b\uff1f", "\n1. \u7ed3\u6784\u548c\u8054\u5408\u90fd\u662f\u7531\u591a\u4e2a\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u6210\u5458\u7ec4\u6210, \u4f46\u5728\u4efb\u4f55\u540c\u4e00\u65f6\u523b, \u8054\u5408\u4e2d\u53ea\u5b58\u653e\u4e86\u4e00\u4e2a\u88ab\u9009\u4e2d\u7684\u6210\u5458\uff08\u6240\u6709\u6210\u5458\u5171\u7528\u4e00\u5757\u5730\u5740\u7a7a\u95f4\uff09, \u800c\u7ed3\u6784\u7684\u6240\u6709\u6210\u5458\u90fd\u5b58\u5728\uff08\u4e0d\u540c\u6210\u5458\u7684\u5b58\u653e\u5730\u5740\u4e0d\u540c\uff09\u3002", "\n2. \u5bf9\u4e8e\u8054\u5408\u7684\u4e0d\u540c\u6210\u5458\u8d4b\u503c, \u5c06\u4f1a\u5bf9\u5176\u5b83\u6210\u5458\u91cd\u5199, \u539f\u6765\u6210\u5458\u7684\u503c\u5c31\u4e0d\u5b58\u5728\u4e86, \u800c\u5bf9\u4e8e\u7ed3\u6784\u7684\u4e0d\u540c\u6210\u5458\u8d4b\u503c\u662f\u4e92\u4e0d\u5f71\u54cd\u7684\u3002", "10. \u4e0b\u9762\u5173\u4e8e\u201c\u8054\u5408\u201d\u7684\u9898\u76ee\u7684\u8f93\u51fa\uff1f", "a)", "\uff03i nclude", "\nunion", "\n{", "\nint i;", "\nchar x[2];", "\n}a;", "void main()", "\n{", "\na.x[0] = 10;", "\na.x[1] = 1;", "\nprintf(\u201c%d\u201d,a.i);", "\n}", "\n\u7b54\u6848\uff1a266 (\u4f4e\u4f4d\u4f4e\u5730\u5740\uff0c\u9ad8\u4f4d\u9ad8\u5730\u5740\uff0c\u5185\u5b58\u5360\u7528\u60c5\u51b5\u662fOx010A\uff09", "b)", "main()", "\n{", "\nunion{ /*\u5b9a\u4e49\u4e00\u4e2a\u8054\u5408*/", "\nint i;", "\nstruct{ /*\u5728\u8054\u5408\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784*/", "\nchar first;", "\nchar second;", "\n}half;", "\n}number;", "\nnumber.i=0\u00d74241; /*\u8054\u5408\u6210\u5458\u8d4b\u503c*/", "\nprintf(\u201c%c%c\\n\u201d, number.half.first, mumber.half.second);", "\nnumber.half.first=\u2019a'; /*\u8054\u5408\u4e2d\u7ed3\u6784\u6210\u5458\u8d4b\u503c*/", "\nnumber.half.second=\u2019b';", "\nprintf(\u201c%x\\n\u201d, number.i);", "\ngetch();", "\n}", "\n\u7b54\u6848\uff1a AB (0\u00d741\u5bf9\u5e94\u2019A',\u662f\u4f4e\u4f4d\uff1bOx42\u5bf9\u5e94\u2019B',\u662f\u9ad8\u4f4d\uff09", "6261 (number.i\u548cnumber.half\u5171\u7528\u4e00\u5757\u5730\u5740\u7a7a\u95f4\uff09", "11. \u5df2\u77e5strcpy\u7684\u51fd\u6570\u539f\u578b\uff1achar *strcpy(char *strDest, const char *strSrc)\u5176\u4e2dstrDest \u662f\u76ee\u7684\u5b57\u7b26\u4e32\uff0cstrSrc \u662f\u6e90\u5b57\u7b26\u4e32\u3002\u4e0d\u8c03\u7528C++/C \u7684\u5b57\u7b26\u4e32\u5e93\u51fd\u6570\uff0c\u8bf7\u7f16\u5199\u51fd\u6570 strcpy\u3002", "\u7b54\u6848\uff1a", "\nchar *strcpy(char *strDest, const char *strSrc)", "\n{", "\nif ( strDest == NULL || strSrc == NULL)", "\nreturn NULL ;", "\nif ( strDest == strSrc)", "\nreturn strDest ;", "\nchar *tempptr = strDest ;", "\nwhile( (*strDest++ = *strSrc++) != \u2018\\0\u2019)", "\nreturn tempptr ;", "\n}", "12. \u5df2\u77e5String\u7c7b\u5b9a\u4e49\u5982\u4e0b\uff1a", "class String", "\n{", "\npublic:", "\nString(const char *str = NULL); // \u901a\u7528\u6784\u9020\u51fd\u6570", "\nString(const String &another); // \u62f7\u8d1d\u6784\u9020\u51fd\u6570", "\n~ String(); // \u6790\u6784\u51fd\u6570", "\nString & operater =(const String &rhs); // \u8d4b\u503c\u51fd\u6570", "\nprivate:", "\nchar *m_data; // \u7528\u4e8e\u4fdd\u5b58\u5b57\u7b26\u4e32", "\n};", "\u5c1d\u8bd5\u5199\u51fa\u7c7b\u7684\u6210\u5458\u51fd\u6570\u5b9e\u73b0\u3002", "\u7b54\u6848\uff1a", "String::String(const char *str)", "\n{", "\nif ( str == NULL ) //strlen\u5728\u53c2\u6570\u4e3aNULL\u65f6\u4f1a\u629b\u5f02\u5e38\u624d\u4f1a\u6709\u8fd9\u6b65\u5224\u65ad", "\n{", "\nm_data = new char[1] ;", "\nm_data[0] = \u2018\\0\u2032 ;", "\n}", "\nelse", "\n{", "\nm_data = new char[strlen(str) + 1];", "\nstrcpy(m_data,str);", "\n}", "}", "String::String(const String &another)", "\n{", "\nm_data = new char[strlen(another.m_data) + 1];", "\nstrcpy(m_data,other.m_data);", "\n}", "String& String::operator =(const String &rhs)", "\n{", "\nif ( this == &rhs)", "\nreturn *this ;", "\ndelete []m_data; //\u5220\u9664\u539f\u6765\u7684\u6570\u636e\uff0c\u65b0\u5f00\u4e00\u5757\u5185\u5b58", "\nm_data = new char[strlen(rhs.m_data) + 1];", "\nstrcpy(m_data,rhs.m_data);", "\nreturn *this ;", "\n}", "String::~String()", "\n{", "\ndelete []m_data ;", "\n}", "13. .h\u5934\u6587\u4ef6\u4e2d\u7684ifndef/define/endif \u7684\u4f5c\u7528\uff1f", "\u7b54\uff1a\u9632\u6b62\u8be5\u5934\u6587\u4ef6\u88ab\u91cd\u590d\u5f15\u7528\u3002", "14. \uff03i nclude \u4e0e \uff03i nclude \u201cfile.h\u201d\u7684\u533a\u522b\uff1f", "\u7b54\uff1a\u524d\u8005\u662f\u4eceStandard Library\u7684\u8def\u5f84\u5bfb\u627e\u548c\u5f15\u7528file.h\uff0c\u800c\u540e\u8005\u662f\u4ece\u5f53\u524d\u5de5\u4f5c\u8def\u5f84\u641c\u5bfb\u5e76\u5f15\u7528file.h\u3002", "15.\u5728C++ \u7a0b\u5e8f\u4e2d\u8c03\u7528\u88abC \u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u7684\u51fd\u6570\uff0c\u4e3a\u4ec0\u4e48\u8981\u52a0extern \u201cC\u201d\uff1f", "\u9996\u5148\uff0c\u4f5c\u4e3aextern\u662fC/C++\u8bed\u8a00\u4e2d\u8868\u660e\u51fd\u6570\u548c\u5168\u5c40\u53d8\u91cf\u4f5c\u7528\u8303\u56f4\uff08\u53ef\u89c1\u6027\uff09\u7684\u5173\u952e\u5b57\uff0c\u8be5\u5173\u952e\u5b57\u544a\u8bc9\u7f16\u8bd1\u5668\uff0c\u5176\u58f0\u660e\u7684\u51fd\u6570\u548c\u53d8\u91cf\u53ef\u4ee5\u5728\u672c\u6a21\u5757\u6216\u5176\u5b83\u6a21\u5757\u4e2d\u4f7f\u7528\u3002", "\u901a\u5e38\uff0c\u5728\u6a21\u5757\u7684\u5934\u6587\u4ef6\u4e2d\u5bf9\u672c\u6a21\u5757\u63d0\u4f9b\u7ed9\u5176\u5b83\u6a21\u5757\u5f15\u7528\u7684\u51fd\u6570\u548c\u5168\u5c40\u53d8\u91cf\u4ee5\u5173\u952e\u5b57extern\u58f0\u660e\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6a21\u5757B\u6b32\u5f15\u7528\u8be5\u6a21\u5757A\u4e2d\u5b9a\u4e49\u7684\u5168\u5c40\u53d8\u91cf\u548c\u51fd\u6570\u65f6\u53ea\u9700\u5305\u542b\u6a21\u5757A\u7684\u5934\u6587\u4ef6\u5373\u53ef\u3002\u8fd9\u6837\uff0c\u6a21\u5757B\u4e2d\u8c03\u7528\u6a21\u5757A\u4e2d\u7684\u51fd\u6570\u65f6\uff0c\u5728\u7f16\u8bd1\u9636\u6bb5\uff0c\u6a21\u5757B\u867d\u7136\u627e\u4e0d\u5230\u8be5\u51fd\u6570\uff0c\u4f46\u662f\u5e76\u4e0d\u4f1a\u62a5\u9519\uff1b\u5b83\u4f1a\u5728\u8fde\u63a5\u9636\u6bb5\u4e2d\u4ece\u6a21\u5757A\u7f16\u8bd1\u751f\u6210\u7684\u76ee\u6807\u4ee3\u7801\u4e2d\u627e\u5230\u6b64\u51fd\u6570", "extern \u201cC\u201d\u662f\u8fde\u63a5\u7533\u660e(linkage declaration),\u88abextern \u201cC\u201d\u4fee\u9970\u7684\u53d8\u91cf\u548c\u51fd\u6570\u662f\u6309\u7167C\u8bed\u8a00\u65b9\u5f0f\u7f16\u8bd1\u548c\u8fde\u63a5\u7684,\u6765\u770b\u770bC++\u4e2d\u5bf9\u7c7b\u4f3cC\u7684\u51fd\u6570\u662f\u600e\u6837\u7f16\u8bd1\u7684\uff1a", "\u4f5c\u4e3a\u4e00\u79cd\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\uff0cC++\u652f\u6301\u51fd\u6570\u91cd\u8f7d\uff0c\u800c\u8fc7\u7a0b\u5f0f\u8bed\u8a00C\u5219\u4e0d\u652f\u6301\u3002\u51fd\u6570\u88abC++\u7f16\u8bd1\u540e\u5728\u7b26\u53f7\u5e93\u4e2d\u7684\u540d\u5b57\u4e0eC\u8bed\u8a00\u7684\u4e0d\u540c\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u67d0\u4e2a\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a", "void foo( int x, int y );", "\u8be5\u51fd\u6570\u88abC\u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u5728\u7b26\u53f7\u5e93\u4e2d\u7684\u540d\u5b57\u4e3a_foo\uff0c\u800cC++\u7f16\u8bd1\u5668\u5219\u4f1a\u4ea7\u751f\u50cf_foo_int_int\u4e4b\u7c7b\u7684\u540d\u5b57\uff08\u4e0d\u540c\u7684\u7f16\u8bd1\u5668\u53ef\u80fd\u751f\u6210\u7684\u540d\u5b57\u4e0d\u540c\uff0c\u4f46\u662f\u90fd\u91c7\u7528\u4e86\u76f8\u540c\u7684\u673a\u5236\uff0c\u751f\u6210\u7684\u65b0\u540d\u5b57\u79f0\u4e3a\u201cmangled name\u201d\uff09\u3002", "_foo_int_int \u8fd9\u6837\u7684\u540d\u5b57\u5305\u542b\u4e86\u51fd\u6570\u540d\u3001\u51fd\u6570\u53c2\u6570\u6570\u91cf\u53ca\u7c7b\u578b\u4fe1\u606f\uff0cC++\u5c31\u662f\u9760\u8fd9\u79cd\u673a\u5236\u6765\u5b9e\u73b0\u51fd\u6570\u91cd\u8f7d\u7684\u3002\u4f8b\u5982\uff0c\u5728C++\u4e2d\uff0c\u51fd\u6570void foo( int x, int y )\u4e0evoid foo( int x, float y )\u7f16\u8bd1\u751f\u6210\u7684\u7b26\u53f7\u662f\u4e0d\u76f8\u540c\u7684\uff0c\u540e\u8005\u4e3a_foo_int_float\u3002", "\u540c\u6837\u5730\uff0cC++\u4e2d\u7684\u53d8\u91cf\u9664\u652f\u6301\u5c40\u90e8\u53d8\u91cf\u5916\uff0c\u8fd8\u652f\u6301\u7c7b\u6210\u5458\u53d8\u91cf\u548c\u5168\u5c40\u53d8\u91cf\u3002\u7528\u6237\u6240\u7f16\u5199\u7a0b\u5e8f\u7684\u7c7b\u6210\u5458\u53d8\u91cf\u53ef\u80fd\u4e0e\u5168\u5c40\u53d8\u91cf\u540c\u540d\uff0c\u6211\u4eec\u4ee5\u201d.\u201d\u6765\u533a\u5206\u3002\u800c\u672c\u8d28\u4e0a\uff0c\u7f16\u8bd1\u5668\u5728\u8fdb\u884c\u7f16\u8bd1\u65f6\uff0c\u4e0e\u51fd\u6570\u7684\u5904\u7406\u76f8\u4f3c\uff0c\u4e5f\u4e3a\u7c7b\u4e2d\u7684\u53d8\u91cf\u53d6\u4e86\u4e00\u4e2a\u72ec\u4e00\u65e0\u4e8c\u7684\u540d\u5b57\uff0c\u8fd9\u4e2a\u540d\u5b57\u4e0e\u7528\u6237\u7a0b\u5e8f\u4e2d\u540c\u540d\u7684\u5168\u5c40\u53d8\u91cf\u540d\u5b57\u4e0d\u540c\u3002", "\u672a\u52a0extern \u201cC\u201d\u58f0\u660e\u65f6\u7684\u8fde\u63a5\u65b9\u5f0f", "\u5047\u8bbe\u5728C++\u4e2d\uff0c\u6a21\u5757A\u7684\u5934\u6587\u4ef6\u5982\u4e0b\uff1a", "// \u6a21\u5757A\u5934\u6587\u4ef6\u3000moduleA.h", "\n#ifndef MODULE_A_H", "\n#define MODULE_A_H", "\nint foo( int x, int y );", "\n#endif", "\u5728\u6a21\u5757B\u4e2d\u5f15\u7528\u8be5\u51fd\u6570\uff1a", "// \u6a21\u5757B\u5b9e\u73b0\u6587\u4ef6\u3000moduleB.cpp", "\n\uff03i nclude \u201cmoduleA.h\u201d", "\nfoo(2,3);", "\u5b9e\u9645\u4e0a\uff0c\u5728\u8fde\u63a5\u9636\u6bb5\uff0c\u8fde\u63a5\u5668\u4f1a\u4ece\u6a21\u5757A\u751f\u6210\u7684\u76ee\u6807\u6587\u4ef6moduleA.obj\u4e2d\u5bfb\u627e_foo_int_int\u8fd9\u6837\u7684\u7b26\u53f7\uff01", "\u52a0extern \u201cC\u201d\u58f0\u660e\u540e\u7684\u7f16\u8bd1\u548c\u8fde\u63a5\u65b9\u5f0f", "\u52a0extern \u201cC\u201d\u58f0\u660e\u540e\uff0c\u6a21\u5757A\u7684\u5934\u6587\u4ef6\u53d8\u4e3a\uff1a", "// \u6a21\u5757A\u5934\u6587\u4ef6\u3000moduleA.h", "\n#ifndef MODULE_A_H", "\n#define MODULE_A_H", "\nextern \u201cC\u201d int foo( int x, int y );", "\n#endif", "\u5728\u6a21\u5757B\u7684\u5b9e\u73b0\u6587\u4ef6\u4e2d\u4ecd\u7136\u8c03\u7528foo( 2,3 )\uff0c\u5176\u7ed3\u679c\u662f\uff1a", "\n\uff081\uff09\u6a21\u5757A\u7f16\u8bd1\u751f\u6210foo\u7684\u76ee\u6807\u4ee3\u7801\u65f6\uff0c\u6ca1\u6709\u5bf9\u5176\u540d\u5b57\u8fdb\u884c\u7279\u6b8a\u5904\u7406\uff0c\u91c7\u7528\u4e86C\u8bed\u8a00\u7684\u65b9\u5f0f\uff1b", "\uff082\uff09\u8fde\u63a5\u5668\u5728\u4e3a\u6a21\u5757B\u7684\u76ee\u6807\u4ee3\u7801\u5bfb\u627efoo(2,3)\u8c03\u7528\u65f6\uff0c\u5bfb\u627e\u7684\u662f\u672a\u7ecf\u4fee\u6539\u7684\u7b26\u53f7\u540d_foo\u3002", "\u5982\u679c\u5728\u6a21\u5757A\u4e2d\u51fd\u6570\u58f0\u660e\u4e86foo\u4e3aextern \u201cC\u201d\u7c7b\u578b\uff0c\u800c\u6a21\u5757B\u4e2d\u5305\u542b\u7684\u662fextern int foo( int x, int y ) \uff0c\u5219\u6a21\u5757B\u627e\u4e0d\u5230\u6a21\u5757A\u4e2d\u7684\u51fd\u6570\uff1b\u53cd\u4e4b\u4ea6\u7136\u3002", "\u6240\u4ee5\uff0c\u53ef\u4ee5\u7528\u4e00\u53e5\u8bdd\u6982\u62ecextern \u201cC\u201d\u8fd9\u4e2a\u58f0\u660e\u7684\u771f\u5b9e\u76ee\u7684\uff08\u4efb\u4f55\u8bed\u8a00\u4e2d\u7684\u4efb\u4f55\u8bed\u6cd5\u7279\u6027\u7684\u8bde\u751f\u90fd\u4e0d\u662f\u968f\u610f\u800c\u4e3a\u7684\uff0c\u6765\u6e90\u4e8e\u771f\u5b9e\u4e16\u754c\u7684\u9700\u6c42\u9a71\u52a8\u3002\u6211\u4eec\u5728\u601d\u8003\u95ee\u9898\u65f6\uff0c\u4e0d\u80fd\u53ea\u505c\u7559\u5728\u8fd9\u4e2a\u8bed\u8a00\u662f\u600e\u4e48\u505a\u7684\uff0c\u8fd8\u8981\u95ee\u4e00\u95ee\u5b83\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u505a\uff0c\u52a8\u673a\u662f\u4ec0\u4e48\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u66f4\u6df1\u5165\u5730\u7406\u89e3\u8bb8\u591a\u95ee\u9898\uff09\uff1a\u5b9e\u73b0C++\u4e0eC\u53ca\u5176\u5b83\u8bed\u8a00\u7684\u6df7\u5408\u7f16\u7a0b\u3002", "\u660e\u767d\u4e86C++\u4e2dextern \u201cC\u201d\u7684\u8bbe\u7acb\u52a8\u673a\uff0c\u6211\u4eec\u4e0b\u9762\u6765\u5177\u4f53\u5206\u6790extern \u201cC\u201d\u901a\u5e38\u7684\u4f7f\u7528\u6280\u5de7\uff1a", "extern \u201cC\u201d\u7684\u60ef\u7528\u6cd5", "\uff081\uff09\u5728C++\u4e2d\u5f15\u7528C\u8bed\u8a00\u4e2d\u7684\u51fd\u6570\u548c\u53d8\u91cf\uff0c\u5728\u5305\u542bC\u8bed\u8a00\u5934\u6587\u4ef6\uff08\u5047\u8bbe\u4e3acExample.h\uff09\u65f6\uff0c\u9700\u8fdb\u884c\u4e0b\u5217\u5904\u7406\uff1a", "extern \u201cC\u201d", "\n{", "\n\uff03i nclude \u201ccExample.h\u201d", "\n}", "\u800c\u5728C\u8bed\u8a00\u7684\u5934\u6587\u4ef6\u4e2d\uff0c\u5bf9\u5176\u5916\u90e8\u51fd\u6570\u53ea\u80fd\u6307\u5b9a\u4e3aextern\u7c7b\u578b\uff0cC\u8bed\u8a00\u4e2d\u4e0d\u652f\u6301extern \u201cC\u201d\u58f0\u660e\uff0c\u5728.c\u6587\u4ef6\u4e2d\u5305\u542b\u4e86extern \u201cC\u201d\u65f6\u4f1a\u51fa\u73b0\u7f16\u8bd1\u8bed\u6cd5\u9519\u8bef\u3002", "C++\u5f15\u7528C\u51fd\u6570\u4f8b\u5b50\u5de5\u7a0b\u4e2d\u5305\u542b\u7684\u4e09\u4e2a\u6587\u4ef6\u7684\u6e90\u4ee3\u7801\u5982\u4e0b\uff1a", "/* c\u8bed\u8a00\u5934\u6587\u4ef6\uff1acExample.h */", "\n#ifndef C_EXAMPLE_H", "\n#define C_EXAMPLE_H", "\nextern int add(int x,int y);", "\n#endif", "/* c\u8bed\u8a00\u5b9e\u73b0\u6587\u4ef6\uff1acExample.c */", "\n\uff03i nclude \u201ccExample.h\u201d", "\nint add( int x, int y )", "\n{", "\nreturn x + y;", "\n}", "// c++\u5b9e\u73b0\u6587\u4ef6\uff0c\u8c03\u7528add\uff1acppFile.cpp", "\nextern \u201cC\u201d", "\n{", "\n\uff03i nclude \u201ccExample.h\u201d", "\n}", "\nint main(int argc, char* argv[])", "\n{", "\nadd(2,3);", "\nreturn 0;", "\n}", "\u5982\u679cC++\u8c03\u7528\u4e00\u4e2aC\u8bed\u8a00\u7f16\u5199\u7684.DLL\u65f6\uff0c\u5f53\u5305\u62ec.DLL\u7684\u5934\u6587\u4ef6\u6216\u58f0\u660e\u63a5\u53e3\u51fd\u6570\u65f6\uff0c\u5e94\u52a0extern \u201cC\u201d {\u3000}\u3002", "\uff082\uff09\u5728C\u4e2d\u5f15\u7528C++\u8bed\u8a00\u4e2d\u7684\u51fd\u6570\u548c\u53d8\u91cf\u65f6\uff0cC++\u7684\u5934\u6587\u4ef6\u9700\u6dfb\u52a0extern \u201cC\u201d\uff0c\u4f46\u662f\u5728C\u8bed\u8a00\u4e2d\u4e0d\u80fd\u76f4\u63a5\u5f15\u7528\u58f0\u660e\u4e86extern \u201cC\u201d\u7684\u8be5\u5934\u6587\u4ef6\uff0c\u5e94\u8be5\u4ec5\u5c06C\u6587\u4ef6\u4e2d\u5c06C++\u4e2d\u5b9a\u4e49\u7684extern \u201cC\u201d\u51fd\u6570\u58f0\u660e\u4e3aextern\u7c7b\u578b\u3002", "C\u5f15\u7528C++\u51fd\u6570\u4f8b\u5b50\u5de5\u7a0b\u4e2d\u5305\u542b\u7684\u4e09\u4e2a\u6587\u4ef6\u7684\u6e90\u4ee3\u7801\u5982\u4e0b\uff1a", "//C++\u5934\u6587\u4ef6 cppExample.h", "\n#ifndef CPP_EXAMPLE_H", "\n#define CPP_EXAMPLE_H", "\nextern \u201cC\u201d int add( int x, int y );", "\n#endif", "//C++\u5b9e\u73b0\u6587\u4ef6 cppExample.cpp", "\n\uff03i nclude \u201ccppExample.h\u201d", "\nint add( int x, int y )", "\n{", "\nreturn x + y;", "\n}", "/* C\u5b9e\u73b0\u6587\u4ef6 cFile.c", "\n/* \u8fd9\u6837\u4f1a\u7f16\u8bd1\u51fa\u9519\uff1a\uff03i nclude \u201ccExample.h\u201d */", "\nextern int add( int x, int y );", "\nint main( int argc, char* argv[] )", "\n{", "\nadd( 2, 3 );", "\nreturn 0;", "\n}", "15\u9898\u76ee\u7684\u89e3\u7b54\u8bf7\u53c2\u8003\u300aC++\u4e2dextern \u201cC\u201d\u542b\u4e49\u6df1\u5c42\u63a2\u7d22\u300b\u6ce8\u89e3\uff1a", "16. \u5173\u8054\u3001\u805a\u5408(Aggregation)\u4ee5\u53ca\u7ec4\u5408(Composition)\u7684\u533a\u522b\uff1f", "\u6d89\u53ca\u5230UML\u4e2d\u7684\u4e00\u4e9b\u6982\u5ff5\uff1a\u5173\u8054\u662f\u8868\u793a\u4e24\u4e2a\u7c7b\u7684\u4e00\u822c\u6027\u8054\u7cfb\uff0c\u6bd4\u5982\u201c\u5b66\u751f\u201d\u548c\u201c\u8001\u5e08\u201d\u5c31\u662f\u4e00\u79cd\u5173\u8054\u5173\u7cfb\uff1b\u805a\u5408\u8868\u793ahas-a\u7684\u5173\u7cfb\uff0c\u662f\u4e00\u79cd\u76f8\u5bf9\u677e\u6563\u7684\u5173\u7cfb\uff0c\u805a\u5408\u7c7b\u4e0d\u9700\u8981\u5bf9\u88ab\u805a\u5408\u7c7b\u8d1f\u8d23\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u7528\u7a7a\u7684\u83f1\u5f62\u8868\u793a\u805a\u5408\u5173\u7cfb\uff1a", "\u4ece\u5b9e\u73b0\u7684\u89d2\u5ea6\u8bb2\uff0c\u805a\u5408\u53ef\u4ee5\u8868\u793a\u4e3a:", "class A {\u2026} class B { A* a; \u2026..}", "\u800c\u7ec4\u5408\u8868\u793acontains-a\u7684\u5173\u7cfb\uff0c\u5173\u8054\u6027\u5f3a\u4e8e\u805a\u5408\uff1a\u7ec4\u5408\u7c7b\u4e0e\u88ab\u7ec4\u5408\u7c7b\u6709\u76f8\u540c\u7684\u751f\u547d\u5468\u671f\uff0c\u7ec4\u5408\u7c7b\u8981\u5bf9\u88ab\u7ec4\u5408\u7c7b\u8d1f\u8d23\uff0c\u91c7\u7528\u5b9e\u5fc3\u7684\u83f1\u5f62\u8868\u793a\u7ec4\u5408\u5173\u7cfb\uff1a", "\u5b9e\u73b0\u7684\u5f62\u5f0f\u662f:", "class A{\u2026} class B{ A a; \u2026}", "\u53c2\u8003\u6587\u7ae0\uff1ahttp://blog.csdn.net/wfwd/archive/2006/05/30/763753.aspx", "http://blog.csdn.net/wfwd/archive/2006/05/30/763760.aspx", "17.\u9762\u5411\u5bf9\u8c61\u7684\u4e09\u4e2a\u57fa\u672c\u7279\u5f81\uff0c\u5e76\u7b80\u5355\u53d9\u8ff0\u4e4b\uff1f", "1. \u5c01\u88c5\uff1a\u5c06\u5ba2\u89c2\u4e8b\u7269\u62bd\u8c61\u6210\u7c7b\uff0c\u6bcf\u4e2a\u7c7b\u5bf9\u81ea\u8eab\u7684\u6570\u636e\u548c\u65b9\u6cd5\u5b9e\u884cprotection(private, protected,public)", "2. \u7ee7\u627f\uff1a\u5e7f\u4e49\u7684\u7ee7\u627f\u6709\u4e09\u79cd\u5b9e\u73b0\u5f62\u5f0f\uff1a\u5b9e\u73b0\u7ee7\u627f\uff08\u6307\u4f7f\u7528\u57fa\u7c7b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u800c\u65e0\u9700\u989d\u5916\u7f16\u7801\u7684\u80fd\u529b\uff09\u3001\u53ef\u89c6\u7ee7\u627f\uff08\u5b50\u7a97\u4f53\u4f7f\u7528\u7236\u7a97\u4f53\u7684\u5916\u89c2\u548c\u5b9e\u73b0\u4ee3\u7801\uff09\u3001\u63a5\u53e3\u7ee7\u627f\uff08\u4ec5\u4f7f\u7528\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u5b9e\u73b0\u6ede\u540e\u5230\u5b50\u7c7b\u5b9e\u73b0\uff09\u3002\u524d\u4e24\u79cd\uff08\u7c7b\u7ee7\u627f\uff09\u548c\u540e\u4e00\u79cd\uff08\u5bf9\u8c61\u7ec4\u5408=>\u63a5\u53e3\u7ee7\u627f\u4ee5\u53ca\u7eaf\u865a\u51fd\u6570\uff09\u6784\u6210\u4e86\u529f\u80fd\u590d\u7528\u7684\u4e24\u79cd\u65b9\u5f0f\u3002", "3. \u591a\u6001\uff1a\u662f\u5c06\u7236\u5bf9\u8c61\u8bbe\u7f6e\u6210\u4e3a\u548c\u4e00\u4e2a\u6216\u66f4\u591a\u7684\u4ed6\u7684\u5b50\u5bf9\u8c61\u76f8\u7b49\u7684\u6280\u672f\uff0c\u8d4b\u503c\u4e4b\u540e\uff0c\u7236\u5bf9\u8c61\u5c31\u53ef\u4ee5\u6839\u636e\u5f53\u524d\u8d4b\u503c\u7ed9\u5b83\u7684\u5b50\u5bf9\u8c61\u7684\u7279\u6027\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u8fd0\u4f5c\u3002\u7b80\u5355\u7684\u8bf4\uff0c\u5c31\u662f\u4e00\u53e5\u8bdd\uff1a\u5141\u8bb8\u5c06\u5b50\u7c7b\u7c7b\u578b\u7684\u6307\u9488\u8d4b\u503c\u7ed9\u7236\u7c7b\u7c7b\u578b\u7684\u6307\u9488\u3002", "18. \u91cd\u8f7d\uff08overload)\u548c\u91cd\u5199(overried\uff0c\u6709\u7684\u4e66\u4e5f\u53eb\u505a\u201c\u8986\u76d6\u201d\uff09\u7684\u533a\u522b\uff1f", "\u5e38\u8003\u7684\u9898\u76ee\u3002\u4ece\u5b9a\u4e49\u4e0a\u6765\u8bf4\uff1a", "\u91cd\u8f7d\uff1a\u662f\u6307\u5141\u8bb8\u5b58\u5728\u591a\u4e2a\u540c\u540d\u51fd\u6570\uff0c\u800c\u8fd9\u4e9b\u51fd\u6570\u7684\u53c2\u6570\u8868\u4e0d\u540c\uff08\u6216\u8bb8\u53c2\u6570\u4e2a\u6570\u4e0d\u540c\uff0c\u6216\u8bb8\u53c2\u6570\u7c7b\u578b\u4e0d\u540c\uff0c\u6216\u8bb8\u4e24\u8005\u90fd\u4e0d\u540c\uff09\u3002", "\u91cd\u5199\uff1a\u662f\u6307\u5b50\u7c7b\u91cd\u65b0\u5b9a\u4e49\u590d\u7c7b\u865a\u51fd\u6570\u7684\u65b9\u6cd5\u3002", "\u4ece\u5b9e\u73b0\u539f\u7406\u4e0a\u6765\u8bf4\uff1a", "\u91cd\u8f7d\uff1a\u7f16\u8bd1\u5668\u6839\u636e\u51fd\u6570\u4e0d\u540c\u7684\u53c2\u6570\u8868\uff0c\u5bf9\u540c\u540d\u51fd\u6570\u7684\u540d\u79f0\u505a\u4fee\u9970\uff0c\u7136\u540e\u8fd9\u4e9b\u540c\u540d\u51fd\u6570\u5c31\u6210\u4e86\u4e0d\u540c\u7684\u51fd\u6570\uff08\u81f3\u5c11\u5bf9\u4e8e\u7f16\u8bd1\u5668\u6765\u8bf4\u662f\u8fd9\u6837\u7684\uff09\u3002\u5982\uff0c\u6709\u4e24\u4e2a\u540c\u540d\u51fd\u6570\uff1afunction func(p:integer):integer;\u548cfunction func(p:string):integer;\u3002\u90a3\u4e48\u7f16\u8bd1\u5668\u505a\u8fc7\u4fee\u9970\u540e\u7684\u51fd\u6570\u540d\u79f0\u53ef\u80fd\u662f\u8fd9\u6837\u7684\uff1aint_func\u3001str_func\u3002\u5bf9\u4e8e\u8fd9\u4e24\u4e2a\u51fd\u6570\u7684\u8c03\u7528\uff0c\u5728\u7f16\u8bd1\u5668\u95f4\u5c31\u5df2\u7ecf\u786e\u5b9a\u4e86\uff0c\u662f\u9759\u6001\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u4eec\u7684\u5730\u5740\u5728\u7f16\u8bd1\u671f\u5c31\u7ed1\u5b9a\u4e86\uff08\u65e9\u7ed1\u5b9a\uff09\uff0c\u56e0\u6b64\uff0c\u91cd\u8f7d\u548c\u591a\u6001\u65e0\u5173\uff01", "\u91cd\u5199\uff1a\u548c\u591a\u6001\u771f\u6b63\u76f8\u5173\u3002\u5f53\u5b50\u7c7b\u91cd\u65b0\u5b9a\u4e49\u4e86\u7236\u7c7b\u7684\u865a\u51fd\u6570\u540e\uff0c\u7236\u7c7b\u6307\u9488\u6839\u636e\u8d4b\u7ed9\u5b83\u7684\u4e0d\u540c\u7684\u5b50\u7c7b\u6307\u9488\uff0c\u52a8\u6001\u7684\u8c03\u7528\u5c5e\u4e8e\u5b50\u7c7b\u7684\u8be5\u51fd\u6570\uff0c\u8fd9\u6837\u7684\u51fd\u6570\u8c03\u7528\u5728\u7f16\u8bd1\u671f\u95f4\u662f\u65e0\u6cd5\u786e\u5b9a\u7684\uff08\u8c03\u7528\u7684\u5b50\u7c7b\u7684\u865a\u51fd\u6570\u7684\u5730\u5740\u65e0\u6cd5\u7ed9\u51fa\uff09\u3002\u56e0\u6b64\uff0c\u8fd9\u6837\u7684\u51fd\u6570\u5730\u5740\u662f\u5728\u8fd0\u884c\u671f\u7ed1\u5b9a\u7684\uff08\u665a\u7ed1\u5b9a\uff09\u3002", "19. \u591a\u6001\u7684\u4f5c\u7528\uff1f", "\u4e3b\u8981\u662f\u4e24\u4e2a\uff1a1. \u9690\u85cf\u5b9e\u73b0\u7ec6\u8282\uff0c\u4f7f\u5f97\u4ee3\u7801\u80fd\u591f\u6a21\u5757\u5316\uff1b\u6269\u5c55\u4ee3\u7801\u6a21\u5757\uff0c\u5b9e\u73b0\u4ee3\u7801\u91cd\u7528\uff1b2. \u63a5\u53e3\u91cd\u7528\uff1a\u4e3a\u4e86\u7c7b\u5728\u7ee7\u627f\u548c\u6d3e\u751f\u7684\u65f6\u5019\uff0c\u4fdd\u8bc1\u4f7f\u7528\u5bb6\u65cf\u4e2d\u4efb\u4e00\u7c7b\u7684\u5b9e\u4f8b\u7684\u67d0\u4e00\u5c5e\u6027\u65f6\u7684\u6b63\u786e\u8c03\u7528\u3002", "20. Ado\u4e0eAdo.net\u7684\u76f8\u540c\u4e0e\u4e0d\u540c\uff1f", "\u9664\u4e86\u201c\u80fd\u591f\u8ba9\u5e94\u7528\u7a0b\u5e8f\u5904\u7406\u5b58\u50a8\u4e8eDBMS \u4e2d\u7684\u6570\u636e\u201c\u8fd9\u4e00\u57fa\u672c\u76f8\u4f3c\u70b9\u5916\uff0c\u4e24\u8005\u6ca1\u6709\u592a\u591a\u5171\u540c\u4e4b\u5904\u3002\u4f46\u662fAdo\u4f7f\u7528OLE DB \u63a5\u53e3\u5e76\u57fa\u4e8e\u5fae\u8f6f\u7684COM \u6280\u672f\uff0c\u800cADO.NET \u62e5\u6709\u81ea\u5df1\u7684ADO.NET \u63a5\u53e3\u5e76\u4e14\u57fa\u4e8e\u5fae\u8f6f\u7684.NET \u4f53\u7cfb\u67b6\u6784\u3002\u4f17\u6240\u5468\u77e5.NET \u4f53\u7cfb\u4e0d\u540c\u4e8eCOM \u4f53\u7cfb\uff0cADO.NET \u63a5\u53e3\u4e5f\u5c31\u5b8c\u5168\u4e0d\u540c\u4e8eADO\u548cOLE DB \u63a5\u53e3\uff0c\u8fd9\u4e5f\u5c31\u662f\u8bf4ADO.NET \u548cADO\u662f\u4e24\u79cd\u6570\u636e\u8bbf\u95ee\u65b9\u5f0f\u3002ADO.net \u63d0\u4f9b\u5bf9XML \u7684\u652f\u6301\u3002"], "title": "\u7f51\u4e0a\u6d41\u4f20\u7684c++\u7b14\u8bd5\u9898\u6c47\u603b"},
{"contents": ["\u5355\u5411\u94fe\u8868\u7684\u53cd\u8f6c\u662f\u4e00\u4e2a\u7ecf\u5e38\u88ab\u95ee\u5230\u7684\u4e00\u4e2a\u9762\u8bd5\u9898\uff0c\u4e5f\u662f\u4e00\u4e2a\u975e\u5e38\u57fa\u7840\u7684\u95ee\u9898\u3002\u6bd4\u5982\u4e00\u4e2a\u94fe\u8868\u662f\u8fd9\u6837\u7684\uff1a 1->2->3->4->5 \u901a\u8fc7\u53cd\u8f6c\u540e\u6210\u4e3a5->4->3->2->1\u3002", "\u6700\u5bb9\u6613\u60f3\u5230\u7684\u65b9\u6cd5\u904d\u5386\u4e00\u904d\u94fe\u8868\uff0c\u5229\u7528\u4e00\u4e2a\u8f85\u52a9\u6307\u9488\uff0c\u5b58\u50a8\u904d\u5386\u8fc7\u7a0b\u4e2d\u5f53\u524d\u6307\u9488\u6307\u5411\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u7136\u540e\u5c06\u5f53\u524d\u8282\u70b9\u5143\u7d20\u7684\u6307\u9488\u53cd\u8f6c\u540e\uff0c\u5229\u7528\u5df2\u7ecf\u5b58\u50a8\u7684\u6307\u9488\u5f80\u540e\u9762\u7ee7\u7eed\u904d\u5386\u3002\u6e90\u4ee3\u7801\u5982\u4e0b\uff1a", "\nstruct linka {", "\nint data;", "\nlinka* next;", "\n};", "\nvoid reverse(linka*& head) {", "\nif(head ==NULL)", "\nreturn;", "\nlinka *pre, *cur, *ne;", "\npre=head;", "\ncur=head->next;", "\nwhile(cur)", "\n{", "\nne = cur->next;", "\ncur->next = pre;", "\npre = cur;", "\ncur = ne;", "\n}", "\nhead->next = NULL;", "\nhead = pre;", "\n}", "\u8fd8\u6709\u4e00\u79cd\u5229\u7528\u9012\u5f52\u7684\u65b9\u6cd5\u3002\u8fd9\u79cd\u65b9\u6cd5\u7684\u57fa\u672c\u601d\u60f3\u662f\u5728\u53cd\u8f6c\u5f53\u524d\u8282\u70b9\u4e4b\u524d\u5148\u8c03\u7528\u9012\u5f52\u51fd\u6570\u53cd\u8f6c\u540e\u7eed\u8282\u70b9\u3002\u6e90\u4ee3\u7801\u5982\u4e0b\u3002\u4e0d\u8fc7\u8fd9\u4e2a\u65b9\u6cd5\u6709\u4e00\u4e2a\u7f3a\u70b9\uff0c\u5c31\u662f\u5728\u53cd\u8f6c\u540e\u7684\u6700\u540e\u4e00\u4e2a\u7ed3\u70b9\u4f1a\u5f62\u6210\u4e00\u4e2a\u73af\uff0c\u6240\u4ee5\u5fc5\u987b\u5c06\u51fd\u6570\u7684\u8fd4\u56de\u7684\u8282\u70b9\u7684next\u57df\u7f6e\u4e3aNULL\u3002\u56e0\u4e3a\u8981\u6539\u53d8head\u6307\u9488\uff0c\u6240\u4ee5\u6211\u7528\u4e86\u5f15\u7528\u3002\u7b97\u6cd5\u7684\u6e90\u4ee3\u7801\u5982\u4e0b\uff1a", "linka* reverse(linka* p,linka*& head)", "\n{", "\nif(p == NULL || p->next == NULL)", "\n{", "\nhead=p;", "\nreturn p;", "\n}", "\nelse", "\n{", "\nlinka* tmp = reverse(p->next,head);", "\ntmp->next = p;", "\nreturn p;", "\n}", "\n}"], "title": "\u5355\u5411\u94fe\u8868\u7684\u53cd\u8f6c"},
{"contents": ["\u6982\u5ff5\uff1a", "\n1. \u4e0e\u6784\u9020\u51fd\u6570\u76f8\u5bf9\u5e94", "\n2. \u4e0e\u6784\u9020\u51fd\u6570\u7684\u4f5c\u7528\u76f8\u53cd", "\n3. \u6790\u6784\u51fd\u6570\u7684\u5f62\u5f0f", "\n~\u7c7b\u540d(\u3000)", "\n{", "\n\u2026", "\n}", "\u7279\u70b9\uff1a", "\n1. \u56fa\u5b9a\u7684\u51fd\u6570\u540d\u79f0", "\n~\u7c7b\u540d( )", "\n2. \u6ca1\u6709\u8fd4\u56de\u7c7b\u578b", "\n3. \u6ca1\u6709\u53c2\u6570", "\n4. \u4e0d\u53ef\u4ee5\u91cd\u8f7d", "\n5. \u4e00\u822c\u7531\u7cfb\u7edf\u81ea\u52a8\u7684\u8c03\u7528"], "title": "\u4ec0\u4e48\u662f\u6790\u6784\u51fd\u6570\uff1f \u6790\u6784\u51fd\u6570\u6709\u4ec0\u4e48\u7279\u70b9\uff1f"},
{"contents": ["\u6784\u9020\u51fd\u6570\u53ea\u5728\u5efa\u7acb\u5bf9\u8c61\u7684\u65f6\u5019\u81ea\u52a8\u88ab\u8c03\u7528\u4e00\u6b21", "\n\u6784\u9020\u51fd\u6570\u5fc5\u987b\u662f\u516c\u5171\u7684\uff0c\u5426\u5219\u65e0\u6cd5\u751f\u6210\u5bf9\u8c61", "\n\u6784\u9020\u51fd\u6570\u53ea\u8d1f\u8d23\u4e3a\u81ea\u5df1\u7684\u7c7b\u6784\u9020\u5bf9\u8c61", "\u5728\u6784\u9020\u51fd\u6570\u4e2d\u521d\u59cb\u5316\u53d8\u91cf", "\nPerson::Person( ) : name(\u201cJack\u201d), age(30)", "\n{", "\n\u2026", "\n}"], "title": "\u6784\u9020\u51fd\u6570\u7684\u7279\u70b9"},
{"contents": ["\u5f15\u5165class\u7c7b\u578b", "\n\u5bf9\u6570\u636e\u6210\u5458\u8fdb\u884c\u4fdd\u62a4", "\n\u589e\u52a0\u5b58\u53d6\u8303\u56f4", "\n\u79c1\u6709\u6210\u5458private", "\n\u4fdd\u62a4\u6210\u5458protected", "\n\u516c\u5171\u6210\u5458public", "\n\u5b9a\u4e49\u7c7b\u6765\u5b9e\u73b0\u6570\u636e\u9690\u85cf", "\nclass Person {", "\nprivate:", "\nchar name[30];", "\nunsigned int age;", "\nchar address[100];", "\nfloat salary;", "\npublic:", "\nvoid setName(char* str);", "\nvoid setAge(unsigned int yr);", "\nvoid setAddress(char *str);", "\nvoid setSalary(float yuan);", "\nvoid disp( );", "\n};"], "title": "\u9762\u5411\u5bf9\u8c61\u5982\u4f55\u5b9e\u73b0\u6570\u636e\u9690\u85cf"},
{"contents": ["1. \u4ec0\u4e48\u662f\u51fd\u6570\u7684\u91cd\u8f7d:", "\n\u5bf9\u4e8e\u5728\u4e0d\u540c\u7c7b\u578b\u4e0a\u4f5c\u4e0d\u540c\u8fd0\u7b97\u800c\u53c8\u7528\u540c\u6837\u7684\u540d\u5b57\u7684\u60c5\u51b5\uff0c\u79f0\u4e3a\u91cd\u8f7d\u3002", "\n2. \u51fd\u6570\u91cd\u8f7d\u7684\u6ce8\u610f\u4e8b\u9879:", "\n\u91cd\u8f7d\u51fd\u6570\u81f3\u5c11\u5728\u53c2\u6570\u4e2a\u6570\uff0c\u53c2\u6570\u7c7b\u578b\uff0c \u6216\u53c2\u6570\u987a\u5e8f\u4e0a\u6709\u6240\u4e0d\u540c\u3002"], "title": "\u4ecb\u7ecd\u4e00\u4e0b\u51fd\u6570\u7684\u91cd\u8f7d"},
{"contents": ["struct\u7684\u7f3a\u7701\u4f5c\u7528\u57df\u4e3apublic", "\nclass\u7684\u7f3a\u7701\u4f5c\u7528\u57df\u4e3aprivate"], "title": "\u5728C++\u4e2d\uff0cclass\u4e0estruct\u7684\u533a\u522b\u662f\u4ec0\u4e48\uff1f"},
{"contents": ["- c \u7f16\u8bd1\u6210\u76ee\u6807\u6587\u4ef6.o", "\n- o\u6307\u5b9a\u8f93\u51fa\u6587\u4ef6\u540d\uff0c\u8f93\u51fa\u6587\u4ef6\u540d\u8ddf\u5728-o\u540e\u9762\uff0c\u7528\u7a7a\u683c\u5206\u9694\u3002\u5982\u679c\u4e0d\u4f7f\u7528\u8fd9\u4e2a\u9009\u9879\uff0c\u7f3a\u7701\u7684\u8f93\u51fa\u6587\u4ef6\u540d\u4e3aa.out\u3002", "\n- g\u4ea7\u751f\u6709\u8c03\u8bd5\u4fe1\u606f\u7684\u53ef\u6267\u884c\u6587\u4ef6", "\n- w\u4e0d\u4ea7\u751f\u8b66\u544a\u4fe1\u606f", "\n- l \u8fde\u63a5\u6307\u5b9a\u7684\u5e93\u6587\u4ef6", "\n- L\u6307\u5b9a\u5e93\u6587\u4ef6\u7684\u8def\u5f84", "\n- i \u8981\u5305\u542b\u7684\u5934\u6587\u4ef6", "\n- I \u5934\u6587\u4ef6\u7684\u8def\u5f84", "\n- E \u663e\u793a\u9884\u5904\u7406\u540e\u7684\u7a0b\u5e8f\u6587\u4ef6\u5230\u5c4f\u5e55\u4e0a\uff0c\u53ef\u4ee5\u7528-o\u6307\u5b9a\u8f93\u51fa\u5230\u6587\u4ef6", "\n- S \u4ea7\u751f\u6c47\u7f16\u7a0b\u5e8f", "\n\u5982\u679c\u6ca1\u6709c\u3001E\u3001S\u5c31\u4f1a\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6"], "title": "g\uff0b\uff0b\u7684\u5e38\u7528\u53c2\u6570\u6709\u54ea\u4e9b\uff1f"},
{"contents": ["1. Supports data abstraction and object-oriented programming", "\n2. Contains all existing features of C, making the migration from C to C++ relatively easy", "\n3. Is as portable and efficient as C", "\n4. Can be linked to existing C libraries and functions", "\n5. Provides strong static-type checking", "\n6. Is a general-purpose language"], "title": "C++\u7684\u4f18\u70b9\u90fd\u6709\u54ea\u4e9b\uff1f"},
{"contents": ["\u6307\u9488\u901a\u8fc7\u67d0\u4e2a\u6307\u9488\u53d8\u91cf\u6307\u5411\u4e00\u4e2a\u5bf9\u8c61\u540e\uff0c\u5bf9\u5b83\u6240\u6307\u5411\u7684\u53d8\u91cf\u95f4\u63a5\u64cd\u4f5c\u3002\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u6307\u9488\uff0c\u7a0b\u5e8f\u7684\u53ef\u8bfb\u6027\u5dee\uff1b\u800c\u5f15\u7528\u672c\u8eab\u5c31\u662f\u76ee\u6807\u53d8\u91cf\u7684\u522b\u540d\uff0c\u5bf9\u5f15\u7528\u7684\u64cd\u4f5c\u5c31\u662f\u5bf9\u76ee\u6807\u53d8\u91cf\u7684\u64cd\u4f5c\u3002\u6b64\u5916\uff0c\u5c31\u662f\u5bf9\u51fd\u6570\u4f20ref\u548cpointer\u7684\u533a\u522b\u3002"], "title": "\u201c\u5f15\u7528\u201d\u4e0e\u6307\u9488\u7684\u533a\u522b\u662f\u4ec0\u4e48\uff1f"},
{"contents": ["1. ANSI \u89c4\u8303\u4e86C++\u7684\u6807\u51c6\uff0c\u3000\u4f7f\u4e4b\u5177\u6709\u9ad8\u5ea6\u7684\u53ef\u79fb\u690d\u6027\u3002", "\n2. \uff23\uff0b\uff0b\u3000\u7a0b\u5e8f\u80fd\u591f\u8fd0\u884c\u5f97\u5f88\u5feb\uff0c\u53ef\u76f4\u63a5\u64cd\u4f5c\u7cfb\u7edf\u8d44\u6e90\uff0c\u4fdd\u6301\u673a\u5668\u5c42\u6b21\u7684\u5b9e\u73b0\u7ec6\u8282\u3002", "\n3. \uff23\uff0b\uff0b \u4e0d\u8981\u6c42\u56fe\u5f62\u73af\u5883\uff0c \u5bf9\u7cfb\u7edf\u8981\u6c42\u76f8\u5bf9\u8f83\u4f4e\u3002", "\n4. \u6613\u4e8e\u89e3\u51b3\u4e0e\u65e7\u5de5\u7a0b\u7684\u63a5\u53e3\u4ee5\u53ca\u5728\u6570\u636e\u5e93\uff0c\u5b58\u50a8\u548c\u6027\u80fd\u65b9\u9762\u7684\u6280\u672f\u9650\u5236\u3002", "\n5. C++ \u662f\u4e00\u79cd\u9762\u5411\u5bf9\u8c61\u7684\u591a\u8303\u578b\u8bed\u8a00\uff0c\u53ef\u4ee5\u5c06\u9762\u5411\u5bf9\u8c61\u7684\u6a21\u578b\u6620\u5c04\u6210\u4e3aC++ \u7684\u7ed3\u6784\u3002\u5b83\u4e3a\u5f00\u53d1\u8005\u8bbe\u8ba1\u548c\u7f16\u5199\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u63d0\u4f9b\u4e86\u4e00\u5b9a\u7684\u9009\u62e9\u8303\u56f4\u3002"], "title": "\u4e3a\u4ec0\u4e48\u9009\u6807\u51c6 C++?"},
{"contents": ["\u5f15\u7528\u662f\u9664\u6307\u9488\u5916\u53e6\u4e00\u4e2a\u53ef\u4ee5\u4ea7\u751f\u591a\u6001\u6548\u679c\u7684\u624b\u6bb5\u3002\u8fd9\u610f\u5473\u7740\uff0c\u4e00\u4e2a\u57fa\u7c7b\u7684\u5f15\u7528\u53ef\u4ee5\u6307\u5411\u5b83\u7684\u6d3e\u751f\u7c7b\u5b9e\u4f8b\u3002", "\n\u4f8b", "\nClass A; Class B : Class A{\u2026};\u00a0 B b; A& ref = b;"], "title": "\u201c\u5f15\u7528\u201d\u4e0e\u591a\u6001\u7684\u5173\u7cfb\uff1f"},
{"contents": ["\u683c\u5f0f\uff1a\u7c7b\u578b\u6807\u8bc6\u7b26 &\u51fd\u6570\u540d\uff08\u5f62\u53c2\u5217\u8868\u53ca\u7c7b\u578b\u8bf4\u660e\uff09{ //\u51fd\u6570\u4f53 }", "\n\u597d\u5904\uff1a\u5728\u5185\u5b58\u4e2d\u4e0d\u4ea7\u751f\u88ab\u8fd4\u56de\u503c\u7684\u526f\u672c\uff1b\uff08\u6ce8\u610f\uff1a\u6b63\u662f\u56e0\u4e3a\u8fd9\u70b9\u539f\u56e0\uff0c\u6240\u4ee5\u8fd4\u56de\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u5f15\u7528\u662f\u4e0d\u53ef\u53d6\u7684\u3002\u56e0\u4e3a\u968f\u7740\u8be5\u5c40\u90e8\u53d8\u91cf\u751f\u5b58\u671f\u7684\u7ed3\u675f\uff0c\u76f8\u5e94\u7684\u5f15\u7528\u4e5f\u4f1a\u5931\u6548\uff0c\u4ea7\u751fruntime error!", "\n\u6ce8\u610f\u4e8b\u9879\uff1a", "\n\uff081\uff09\u4e0d\u80fd\u8fd4\u56de\u5c40\u90e8\u53d8\u91cf\u7684\u5f15\u7528\u3002\u8fd9\u6761\u53ef\u4ee5\u53c2\u7167Effective C++[1]\u7684Item 31\u3002\u4e3b\u8981\u539f\u56e0\u662f\u5c40\u90e8\u53d8\u91cf\u4f1a\u5728\u51fd\u6570\u8fd4\u56de\u540e\u88ab\u9500\u6bc1\uff0c\u56e0\u6b64\u88ab\u8fd4\u56de\u7684\u5f15\u7528\u5c31\u6210\u4e3a\u4e86\u201d\u65e0\u6240\u6307\u201d\u7684\u5f15\u7528\uff0c\u7a0b\u5e8f\u4f1a\u8fdb\u5165\u672a\u77e5\u72b6\u6001\u3002", "\n\uff082\uff09\u4e0d\u80fd\u8fd4\u56de\u51fd\u6570\u5185\u90e8new\u5206\u914d\u7684\u5185\u5b58\u7684\u5f15\u7528\u3002\u8fd9\u6761\u53ef\u4ee5\u53c2\u7167Effective C++[1]\u7684Item 31\u3002\u867d\u7136\u4e0d\u5b58\u5728\u5c40\u90e8\u53d8\u91cf\u7684\u88ab\u52a8\u9500\u6bc1\u95ee\u9898\uff0c\u53ef\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff08\u8fd4\u56de\u51fd\u6570\u5185\u90e8new\u5206\u914d\u5185\u5b58\u7684\u5f15\u7528\uff09\uff0c\u53c8\u9762\u4e34\u5176\u5b83\u5c34\u5c2c\u5c40\u9762\u3002\u4f8b\u5982\uff0c\u88ab\u51fd\u6570\u8fd4\u56de\u7684\u5f15\u7528\u53ea\u662f\u4f5c\u4e3a\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf\u51fa\u73b0\uff0c\u800c\u6ca1\u6709\u88ab\u8d4b\u4e88\u4e00\u4e2a\u5b9e\u9645\u7684\u53d8\u91cf\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5f15\u7528\u6240\u6307\u5411\u7684\u7a7a\u95f4\uff08\u7531new\u5206\u914d\uff09\u5c31\u65e0\u6cd5\u91ca\u653e\uff0c\u9020\u6210memory leak\u3002", "\n\uff083\uff09\u53ef\u4ee5\u8fd4\u56de\u7c7b\u6210\u5458\u7684\u5f15\u7528\uff0c\u4f46\u6700\u597d\u662fconst\u3002\u8fd9\u6761\u539f\u5219\u53ef\u4ee5\u53c2\u7167Effective C++[1]\u7684Item 30\u3002\u4e3b\u8981\u539f\u56e0\u662f\u5f53\u5bf9\u8c61\u7684\u5c5e\u6027\u662f\u4e0e\u67d0\u79cd\u4e1a\u52a1\u89c4\u5219\uff08business rule\uff09\u76f8\u5173\u8054\u7684\u65f6\u5019\uff0c\u5176\u8d4b\u503c\u5e38\u5e38\u4e0e\u67d0\u4e9b\u5176\u5b83\u5c5e\u6027\u6216\u8005\u5bf9\u8c61\u7684\u72b6\u6001\u6709\u5173\uff0c\u56e0\u6b64\u6709\u5fc5\u8981\u5c06\u8d4b\u503c\u64cd\u4f5c\u5c01\u88c5\u5728\u4e00\u4e2a\u4e1a\u52a1\u89c4\u5219\u5f53\u4e2d\u3002\u5982\u679c\u5176\u5b83\u5bf9\u8c61\u53ef\u4ee5\u83b7\u5f97\u8be5\u5c5e\u6027\u7684\u975e\u5e38\u91cf\u5f15\u7528\uff08\u6216\u6307\u9488\uff09\uff0c\u90a3\u4e48\u5bf9\u8be5\u5c5e\u6027\u7684\u5355\u7eaf\u8d4b\u503c\u5c31\u4f1a\u7834\u574f\u4e1a\u52a1\u89c4\u5219\u7684\u5b8c\u6574\u6027\u3002", "\n\uff084\uff09\u6d41\u64cd\u4f5c\u7b26\u91cd\u8f7d\u8fd4\u56de\u503c\u7533\u660e\u4e3a\u201c\u5f15\u7528\u201d\u7684\u4f5c\u7528\uff1a", "\n\u6d41\u64cd\u4f5c\u7b26<<\u548c>>\uff0c\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u7b26\u5e38\u5e38\u5e0c\u671b\u88ab\u8fde\u7eed\u4f7f\u7528\uff0c\u4f8b\u5982\uff1acout << \u201chello\u201d << endl;\u3000\u56e0\u6b64\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u7b26\u7684\u8fd4\u56de\u503c\u5e94\u8be5\u662f\u4e00\u4e2a\u4ecd\u7136\u652f\u6301\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u7b26\u7684\u6d41\u5f15\u7528\u3002\u53ef\u9009\u7684\u5176\u5b83\u65b9\u6848\u5305\u62ec\uff1a\u8fd4\u56de\u4e00\u4e2a\u6d41\u5bf9\u8c61\u548c\u8fd4\u56de\u4e00\u4e2a\u6d41\u5bf9\u8c61\u6307\u9488\u3002\u4f46\u662f\u5bf9\u4e8e\u8fd4\u56de\u4e00\u4e2a\u6d41\u5bf9\u8c61\uff0c\u7a0b\u5e8f\u5fc5\u987b\u91cd\u65b0\uff08\u62f7\u8d1d\uff09\u6784\u9020\u4e00\u4e2a\u65b0\u7684\u6d41\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fde\u7eed\u7684\u4e24\u4e2a<<\u64cd\u4f5c\u7b26\u5b9e\u9645\u4e0a\u662f\u9488\u5bf9\u4e0d\u540c\u5bf9\u8c61\u7684\uff01\u8fd9\u65e0\u6cd5\u8ba9\u4eba\u63a5\u53d7\u3002\u5bf9\u4e8e\u8fd4\u56de\u4e00\u4e2a\u6d41\u6307\u9488\u5219\u4e0d\u80fd\u8fde\u7eed\u4f7f\u7528<<\u64cd\u4f5c\u7b26\u3002\u56e0\u6b64\uff0c\u8fd4\u56de\u4e00\u4e2a\u6d41\u5bf9\u8c61\u5f15\u7528\u662f\u60df\u4e00\u9009\u62e9\u3002\u8fd9\u4e2a\u552f\u4e00\u9009\u62e9\u5f88\u5173\u952e\uff0c\u5b83\u8bf4\u660e\u4e86\u5f15\u7528\u7684\u91cd\u8981\u6027\u4ee5\u53ca\u65e0\u53ef\u66ff\u4ee3\u6027\uff0c\u4e5f\u8bb8\u8fd9\u5c31\u662fC++\u8bed\u8a00\u4e2d\u5f15\u5165\u5f15\u7528\u8fd9\u4e2a\u6982\u5ff5\u7684\u539f\u56e0\u5427\u3002 \u8d4b\u503c\u64cd\u4f5c\u7b26=\u3002\u8fd9\u4e2a\u64cd\u4f5c\u7b26\u8c61\u6d41\u64cd\u4f5c\u7b26\u4e00\u6837\uff0c\u662f\u53ef\u4ee5\u8fde\u7eed\u4f7f\u7528\u7684\uff0c\u4f8b\u5982\uff1ax = j = 10;\u6216\u8005(x=10)=100;\u8d4b\u503c\u64cd\u4f5c\u7b26\u7684\u8fd4\u56de\u503c\u5fc5\u987b\u662f\u4e00\u4e2a\u5de6\u503c\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u88ab\u7ee7\u7eed\u8d4b\u503c\u3002\u56e0\u6b64\u5f15\u7528\u6210\u4e86\u8fd9\u4e2a\u64cd\u4f5c\u7b26\u7684\u60df\u4e00\u8fd4\u56de\u503c\u9009\u62e9\u3002", "\n\u4f8b3", "\n\uff03i nclude <iostream.h>", "\nint &put(int n);", "\nint vals[10];", "\nint error=-1;", "\nvoid main()", "\n{", "\nput(0)=10; //\u4ee5put(0)\u51fd\u6570\u503c\u4f5c\u4e3a\u5de6\u503c\uff0c\u7b49\u4ef7\u4e8evals[0]=10;", "\nput(9)=20; //\u4ee5put(9)\u51fd\u6570\u503c\u4f5c\u4e3a\u5de6\u503c\uff0c\u7b49\u4ef7\u4e8evals[9]=20;", "\ncout<<vals[0];", "\ncout<<vals[9];", "\n}", "\nint &put(int n)", "\n{", "\nif (n>=0 && n<=9 ) return vals[n];", "\nelse { cout<<\u201dsubscript error\u201d; return error; }", "\n}", "\n\uff085\uff09\u5728\u53e6\u5916\u7684\u4e00\u4e9b\u64cd\u4f5c\u7b26\u4e2d\uff0c\u5374\u5343\u4e07\u4e0d\u80fd\u8fd4\u56de\u5f15\u7528\uff1a+-*/ \u56db\u5219\u8fd0\u7b97\u7b26\u3002\u5b83\u4eec\u4e0d\u80fd\u8fd4\u56de\u5f15\u7528\uff0cEffective C++[1]\u7684Item23\u8be6\u7ec6\u7684\u8ba8\u8bba\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\u4e3b\u8981\u539f\u56e0\u662f\u8fd9\u56db\u4e2a\u64cd\u4f5c\u7b26\u6ca1\u6709side effect\uff0c\u56e0\u6b64\uff0c\u5b83\u4eec\u5fc5\u987b\u6784\u9020\u4e00\u4e2a\u5bf9\u8c61\u4f5c\u4e3a\u8fd4\u56de\u503c\uff0c\u53ef\u9009\u7684\u65b9\u6848\u5305\u62ec\uff1a\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\u3001\u8fd4\u56de\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u5f15\u7528\uff0c\u8fd4\u56de\u4e00\u4e2anew\u5206\u914d\u7684\u5bf9\u8c61\u7684\u5f15\u7528\u3001\u8fd4\u56de\u4e00\u4e2a\u9759\u6001\u5bf9\u8c61\u5f15\u7528\u3002\u6839\u636e\u524d\u9762\u63d0\u5230\u7684\u5f15\u7528\u4f5c\u4e3a\u8fd4\u56de\u503c\u7684\u4e09\u4e2a\u89c4\u5219\uff0c\u7b2c2\u30013\u4e24\u4e2a\u65b9\u6848\u90fd\u88ab\u5426\u51b3\u4e86\u3002\u9759\u6001\u5bf9\u8c61\u7684\u5f15\u7528\u53c8\u56e0\u4e3a((a+b) == (c+d))\u4f1a\u6c38\u8fdc\u4e3atrue\u800c\u5bfc\u81f4\u9519\u8bef\u3002\u6240\u4ee5\u53ef\u9009\u7684\u53ea\u5269\u4e0b\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\u4e86\u3002"], "title": "\u5c06\u201c\u5f15\u7528\u201d\u4f5c\u4e3a\u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b\u7684\u683c\u5f0f\u3001\u597d\u5904\u548c\u9700\u8981\u9075\u5b88\u7684\u89c4\u5219?"},
{"contents": ["\u5982\u679c\u65e2\u8981\u5229\u7528\u5f15\u7528\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6548\u7387\uff0c\u53c8\u8981\u4fdd\u62a4\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u6570\u636e\u4e0d\u5728\u51fd\u6570\u4e2d\u88ab\u6539\u53d8\uff0c\u5c31\u5e94\u4f7f\u7528\u5e38\u5f15\u7528\u3002\u5e38\u5f15\u7528\u58f0\u660e\u65b9\u5f0f\uff1aconst \u7c7b\u578b\u6807\u8bc6\u7b26 &\u5f15\u7528\u540d=\u76ee\u6807\u53d8\u91cf\u540d\uff1b", "\n\u4f8b1", "\nint a ;", "\nconst int &ra=a;", "\nra=1; //\u9519\u8bef", "\na=1; //\u6b63\u786e", "\n\u4f8b2", "\nstring foo( );", "\nvoid bar(string & s);", "\n\u90a3\u4e48\u4e0b\u9762\u7684\u8868\u8fbe\u5f0f\u5c06\u662f\u975e\u6cd5\u7684\uff1a", "\nbar(foo( ));", "\nbar(\u201chello world\u201d);", "\n\u539f\u56e0\u5728\u4e8efoo( )\u548c\u201dhello world\u201d\u4e32\u90fd\u4f1a\u4ea7\u751f\u4e00\u4e2a\u4e34\u65f6\u5bf9\u8c61\uff0c\u800c\u5728C++\u4e2d\uff0c\u8fd9\u4e9b\u4e34\u65f6\u5bf9\u8c61\u90fd\u662fconst\u7c7b\u578b\u7684\u3002\u56e0\u6b64\u4e0a\u9762\u7684\u8868\u8fbe\u5f0f\u5c31\u662f\u8bd5\u56fe\u5c06\u4e00\u4e2aconst\u7c7b\u578b\u7684\u5bf9\u8c61\u8f6c\u6362\u4e3a\u975econst\u7c7b\u578b\uff0c\u8fd9\u662f\u975e\u6cd5\u7684\u3002", "\n\u5f15\u7528\u578b\u53c2\u6570\u5e94\u8be5\u5728\u80fd\u88ab\u5b9a\u4e49\u4e3aconst\u7684\u60c5\u51b5\u4e0b\uff0c\u5c3d\u91cf\u5b9a\u4e49\u4e3aconst \u3002"], "title": "\u5728\u4ec0\u4e48\u65f6\u5019\u9700\u8981\u4f7f\u7528\u201c\u5e38\u5f15\u7528\u201d\uff1f"},
{"contents": ["\uff081\uff09\u4f20\u9012\u5f15\u7528\u7ed9\u51fd\u6570\u4e0e\u4f20\u9012\u6307\u9488\u7684\u6548\u679c\u662f\u4e00\u6837\u7684\u3002\u8fd9\u65f6\uff0c\u88ab\u8c03\u51fd\u6570\u7684\u5f62\u53c2\u5c31\u6210\u4e3a\u539f\u6765\u4e3b\u8c03\u51fd\u6570\u4e2d\u7684\u5b9e\u53c2\u53d8\u91cf\u6216\u5bf9\u8c61\u7684\u4e00\u4e2a\u522b\u540d\u6765\u4f7f\u7528\uff0c\u6240\u4ee5\u5728\u88ab\u8c03\u51fd\u6570\u4e2d\u5bf9\u5f62\u53c2\u53d8\u91cf\u7684\u64cd\u4f5c\u5c31\u662f\u5bf9\u5176\u76f8\u5e94\u7684\u76ee\u6807\u5bf9\u8c61\uff08\u5728\u4e3b\u8c03\u51fd\u6570\u4e2d\uff09\u7684\u64cd\u4f5c\u3002", "\n\uff082\uff09\u4f7f\u7528\u5f15\u7528\u4f20\u9012\u51fd\u6570\u7684\u53c2\u6570\uff0c\u5728\u5185\u5b58\u4e2d\u5e76\u6ca1\u6709\u4ea7\u751f\u5b9e\u53c2\u7684\u526f\u672c\uff0c\u5b83\u662f\u76f4\u63a5\u5bf9\u5b9e\u53c2\u64cd\u4f5c\uff1b\u800c\u4f7f\u7528\u4e00\u822c\u53d8\u91cf\u4f20\u9012\u51fd\u6570\u7684\u53c2\u6570\uff0c\u5f53\u53d1\u751f\u51fd\u6570\u8c03\u7528\u65f6\uff0c\u9700\u8981\u7ed9\u5f62\u53c2\u5206\u914d\u5b58\u50a8\u5355\u5143\uff0c\u5f62\u53c2\u53d8\u91cf\u662f\u5b9e\u53c2\u53d8\u91cf\u7684\u526f\u672c\uff1b\u5982\u679c\u4f20\u9012\u7684\u662f\u5bf9\u8c61\uff0c\u8fd8\u5c06\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002\u56e0\u6b64\uff0c\u5f53\u53c2\u6570\u4f20\u9012\u7684\u6570\u636e\u8f83\u5927\u65f6\uff0c\u7528\u5f15\u7528\u6bd4\u7528\u4e00\u822c\u53d8\u91cf\u4f20\u9012\u53c2\u6570\u7684\u6548\u7387\u548c\u6240\u5360\u7a7a\u95f4\u90fd\u597d\u3002", "\n\uff083\uff09\u4f7f\u7528\u6307\u9488\u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570\u867d\u7136\u4e5f\u80fd\u8fbe\u5230\u4e0e\u4f7f\u7528\u5f15\u7528\u7684\u6548\u679c\uff0c\u4f46\u662f\uff0c\u5728\u88ab\u8c03\u51fd\u6570\u4e2d\u540c\u6837\u8981\u7ed9\u5f62\u53c2\u5206\u914d\u5b58\u50a8\u5355\u5143\uff0c\u4e14\u9700\u8981\u91cd\u590d\u4f7f\u7528\u201d*\u6307\u9488\u53d8\u91cf\u540d\u201d\u7684\u5f62\u5f0f\u8fdb\u884c\u8fd0\u7b97\uff0c\u8fd9\u5f88\u5bb9\u6613\u4ea7\u751f\u9519\u8bef\u4e14\u7a0b\u5e8f\u7684\u9605\u8bfb\u6027\u8f83\u5dee\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u5728\u4e3b\u8c03\u51fd\u6570\u7684\u8c03\u7528\u70b9\u5904\uff0c\u5fc5\u987b\u7528\u53d8\u91cf\u7684\u5730\u5740\u4f5c\u4e3a\u5b9e\u53c2\u3002\u800c\u5f15\u7528\u66f4\u5bb9\u6613\u4f7f\u7528\uff0c\u66f4\u6e05\u6670\u3002"], "title": "\u5c06\u201c\u5f15\u7528\u201d\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u6709\u54ea\u4e9b\u7279\u70b9\uff1f"},
{"contents": ["\u5df2\u77e5\u7c7bString \u7684\u539f\u578b\u4e3a\uff1a", "\nclass String", "\n{", "\n\u00a0\u00a0\u00a0 public:", "\n\u00a0\u00a0\u00a0 String(const char *str = NULL); // \u666e\u901a\u6784\u9020\u51fd\u6570", "\n\u00a0\u00a0\u00a0 String(const String &other); // \u62f7\u8d1d\u6784\u9020\u51fd\u6570", "\n\u00a0\u00a0\u00a0 ~ String(void); // \u6790\u6784\u51fd\u6570", "\n\u00a0\u00a0\u00a0 String & operate =(const String &other); // \u8d4b\u503c\u51fd\u6570", "\n\u00a0\u00a0\u00a0 private:", "\n\u00a0\u00a0\u00a0 char *m_data; // \u7528\u4e8e\u4fdd\u5b58\u5b57\u7b26\u4e32", "\n};", "\n\u8bf7\u7f16\u5199String \u7684\u4e0a\u8ff04 \u4e2a\u51fd\u6570\u3002", "\n\u6807\u51c6\u7b54\u6848\uff1a", "\n// String \u7684\u6790\u6784\u51fd\u6570", "\nString::~String(void) // 3 \u5206", "\n{", "\n\u00a0\u00a0\u00a0 delete [] m_data;", "\n\u00a0\u00a0\u00a0 // \u7531\u4e8em_data \u662f\u5185\u90e8\u6570\u636e\u7c7b\u578b\uff0c\u4e5f\u53ef\u4ee5\u5199\u6210 delete m_data;", "\n}", "// String \u7684\u666e\u901a\u6784\u9020\u51fd\u6570", "\nString::String(const char *str) // 6 \u5206", "\n{", "\n\u00a0\u00a0\u00a0 if(str==NULL)", "\n\u00a0\u00a0\u00a0 {", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 m_data = new char[1]; // \u82e5\u80fd\u52a0 NULL \u5224\u65ad\u5219\u66f4\u597d", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 *m_data = \u2018\\0\u2019;", "\n\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0\u00a0 else", "\n\u00a0\u00a0\u00a0 {", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int length = strlen(str);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 m_data = new char[length+1]; // \u82e5\u80fd\u52a0 NULL \u5224\u65ad\u5219\u66f4\u597d", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 strcpy(m_data, str);", "\n\u00a0\u00a0\u00a0\u00a0 }", "\n}", "// \u62f7\u8d1d\u6784\u9020\u51fd\u6570", "\nString::String(const String &other) // 3 \u5206", "\n{", "\n\u00a0\u00a0\u00a0 int length = strlen(other.m_data);", "\n\u00a0\u00a0\u00a0 m_data = new char[length+1]; // \u82e5\u80fd\u52a0 NULL \u5224\u65ad\u5219\u66f4\u597d", "\n\u00a0\u00a0\u00a0 strcpy(m_data, other.m_data);", "\n}", "// \u8d4b\u503c\u51fd\u6570", "\nString & String::operate =(const String &other) // 13 \u5206", "\n{", "\n\u00a0\u00a0\u00a0 // (1) \u68c0\u67e5\u81ea\u8d4b\u503c // 4 \u5206", "\n\u00a0\u00a0\u00a0 if(this == &other)", "\n\u00a0\u00a0\u00a0 return *this;", "\n\u00a0\u00a0\u00a0 // (2) \u91ca\u653e\u539f\u6709\u7684\u5185\u5b58\u8d44\u6e90 // 3 \u5206", "\n\u00a0\u00a0\u00a0 delete [] m_data;", "\n\u00a0\u00a0\u00a0 // \uff083\uff09\u5206\u914d\u65b0\u7684\u5185\u5b58\u8d44\u6e90\uff0c\u5e76\u590d\u5236\u5185\u5bb9 // 3 \u5206", "\n\u00a0\u00a0\u00a0 int length = strlen(other.m_data);", "\n\u00a0\u00a0\u00a0 m_data = new char[length+1]; // \u82e5\u80fd\u52a0 NULL \u5224\u65ad\u5219\u66f4\u597d", "\n\u00a0\u00a0\u00a0 strcpy(m_data, other.m_data);", "\n\u00a0\u00a0\u00a0 // \uff084\uff09\u8fd4\u56de\u672c\u5bf9\u8c61\u7684\u5f15\u7528 // 3 \u5206", "\n\u00a0\u00a0\u00a0 return *this;", "\n}"], "title": "\u7f16\u5199\u7c7bString \u7684\u6784\u9020\u51fd\u6570\u3001\u6790\u6784\u51fd\u6570\u548c\u8d4b\u503c\u51fd\u6570"},
{"contents": ["int func(x)", "\n{", "\n\u00a0\u00a0\u00a0 int countx = 0;", "\n\u00a0\u00a0\u00a0 while(x)", "\n\u00a0\u00a0\u00a0 {", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 countx ++;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 x = x&(x-1);", "\n\u00a0\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0\u00a0 return countx;", "\n}\u00a0", "\n\u5047\u5b9ax = 9999\u3002 \u7b54\u6848\uff1a8", "\n\u601d\u8def\uff1a\u5c06x\u8f6c\u5316\u4e3a2\u8fdb\u5236\uff0c\u770b\u542b\u6709\u76841\u7684\u4e2a\u6570\u3002"], "title": "\u6c42\u4e0b\u9762\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff08\u5fae\u8f6f\uff09"},
{"contents": ["\u7b54\uff1a\u5f15\u7528\u5c31\u662f\u67d0\u4e2a\u76ee\u6807\u53d8\u91cf\u7684\u201c\u522b\u540d\u201d(alias)\uff0c\u5bf9\u5e94\u7528\u7684\u64cd\u4f5c\u4e0e\u5bf9\u53d8\u91cf\u76f4\u63a5\u64cd\u4f5c\u6548\u679c\u5b8c\u5168\u76f8\u540c\u3002\u7533\u660e\u4e00\u4e2a\u5f15\u7528\u7684\u65f6\u5019\uff0c\u5207\u8bb0\u8981\u5bf9\u5176\u8fdb\u884c\u521d\u59cb\u5316\u3002\u5f15\u7528\u58f0\u660e\u5b8c\u6bd5\u540e\uff0c\u76f8\u5f53\u4e8e\u76ee\u6807\u53d8\u91cf\u540d\u6709\u4e24\u4e2a\u540d\u79f0\uff0c\u5373\u8be5\u76ee\u6807\u539f\u540d\u79f0\u548c\u5f15\u7528\u540d\uff0c\u4e0d\u80fd\u518d\u628a\u8be5\u5f15\u7528\u540d\u4f5c\u4e3a\u5176\u4ed6\u53d8\u91cf\u540d\u7684\u522b\u540d\u3002\u58f0\u660e\u4e00\u4e2a\u5f15\u7528\uff0c\u4e0d\u662f\u65b0\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53d8\u91cf\uff0c\u5b83\u53ea\u8868\u793a\u8be5\u5f15\u7528\u540d\u662f\u76ee\u6807\u53d8\u91cf\u540d\u7684\u4e00\u4e2a\u522b\u540d\uff0c\u5b83\u672c\u8eab\u4e0d\u662f\u4e00\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u56e0\u6b64\u5f15\u7528\u672c\u8eab\u4e0d\u5360\u5b58\u50a8\u5355\u5143\uff0c\u7cfb\u7edf\u4e5f\u4e0d\u7ed9\u5f15\u7528\u5206\u914d\u5b58\u50a8\u5355\u5143\u3002\u4e0d\u80fd\u5efa\u7acb\u6570\u7ec4\u7684\u5f15\u7528\u3002"], "title": "\u4ec0\u4e48\u662f\u201c\u5f15\u7528\u201d\uff1f\u7533\u660e\u548c\u4f7f\u7528\u201c\u5f15\u7528\u201d\u8981\u6ce8\u610f\u54ea\u4e9b\u95ee\u9898\uff1f"},
{"contents": ["void Func ( char str[100])", "\n{", "\n\u00a0\u00a0\u00a0 \u8bf7\u8ba1\u7b97", "\n\u00a0\u00a0\u00a0 sizeof( str ) = 4 \uff082 \u5206\uff09", "\n}", "\nchar str[] = \u201cHello\u201d ;", "\nchar *p = str ;", "\nint n = 10;", "\n\u8bf7\u8ba1\u7b97", "\nsizeof (str ) = 6 \uff082 \u5206\uff09", "\nsizeof ( p ) = 4 \uff082 \u5206\uff09", "\nsizeof ( n ) = 4 \uff082 \u5206\uff09", "\nvoid *p = malloc( 100 );", "\n\u8bf7\u8ba1\u7b97", "\nsizeof ( p ) = 4 \uff082 \u5206\uff09"], "title": "\u4ee5\u4e0b\u4e3aWindows NT \u4e0b\u768432 \u4f4dC++\u7a0b\u5e8f\uff0c\u8bf7\u8ba1\u7b97sizeof \u7684\u503c"},
{"contents": ["\u6807\u51c6\u7b54\u6848\uff1a", "\nif (p == NULL)", "\nif (p != NULL)", "\n\u5982\u4e0b\u5199\u6cd5\u5747\u5c5e\u4e0d\u826f\u98ce\u683c\uff0c\u4e0d\u5f97\u5206\u3002", "\nif (p == 0)", "\nif (p != 0)", "\nif (p)", "\nif (!)"], "title": "\u8bf7\u5199\u51fa char *p \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5"},
{"contents": ["\u5df2\u77e5strcpy \u51fd\u6570\u7684\u539f\u578b\u662f", "\nchar *strcpy(char *strDest, const char *strSrc);", "\n\u5176\u4e2dstrDest \u662f\u76ee\u7684\u5b57\u7b26\u4e32\uff0cstrSrc \u662f\u6e90\u5b57\u7b26\u4e32\u3002", "\n\uff081\uff09\u4e0d\u8c03\u7528C++/C \u7684\u5b57\u7b26\u4e32\u5e93\u51fd\u6570\uff0c\u8bf7\u7f16\u5199\u51fd\u6570 strcpy", "\nchar *strcpy(char *strDest, const char *strSrc);", "\n{", "\n\u00a0\u00a0\u00a0 assert((strDest!=NULL) && (strSrc !=NULL)); // 2\u5206", "\n\u00a0\u00a0\u00a0 char *address = strDest; // 2\u5206", "\n\u00a0\u00a0\u00a0 while( (*strDest++ = * strSrc++) != \u2018\\0\u2019 ) // 2\u5206", "\n\u00a0\u00a0\u00a0 NULL ;", "\n\u00a0\u00a0\u00a0 return address ; // 2\u5206", "\n}", "\n\uff082\uff09strcpy \u80fd\u628astrSrc \u7684\u5185\u5bb9\u590d\u5236\u5230strDest\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u8981char * \u7c7b\u578b\u7684\u8fd4\u56de\u503c\uff1f", "\n\u7b54\uff1a\u4e3a\u4e86\u5b9e\u73b0\u94fe\u5f0f\u8868\u8fbe\u5f0f\u3002 // 2 \u5206", "\n\u4f8b\u5982 int length = strlen( strcpy( strDest, \u201chello world\u201d) );"], "title": "\u7f16\u5199strcpy \u51fd\u6570"},
{"contents": ["\u6807\u51c6\u7b54\u6848\u793a\u4f8b\uff1a", "\nconst float EPSINON = 0.000001;", "\nif ((x >= \u2013 EPSINON) && (x <= EPSINON)", "\n\u4e0d\u53ef\u5c06\u6d6e\u70b9\u53d8\u91cf\u7528\u201c==\u201d\u6216\u201c\uff01=\u201d\u4e0e\u6570\u5b57", "\n\u6bd4\u8f83\uff0c\u5e94\u8be5\u8bbe\u6cd5\u8f6c\u5316\u6210\u201c>=\u201d\u6216\u201c<=\u201d\u6b64", "\n\u7c7b\u5f62\u5f0f\u3002", "\n\u5982\u4e0b\u662f\u9519\u8bef\u7684\u5199\u6cd5\uff0c\u4e0d\u5f97\u5206\u3002", "\nif (x == 0.0)", "\nif (x != 0.0)"], "title": "\u8bf7\u5199\u51fa float x \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5"},
{"contents": ["\u7b2c\u4e8c\u5c42\u4ea4\u6362\u673a\u548c\u8def\u7531\u5668\u7684\u533a\u522b\uff1a", "\n\u4f20\u7edf\u4ea4\u6362\u673a\u4ece\u7f51\u6865\u53d1\u5c55\u800c\u6765\uff0c\u5c5e\u4e8e\uff2f\uff33\uff29\u7b2c\u4e8c\u5c42\u5373\u6570\u636e\u94fe\u8def\u5c42\u8bbe\u5907\u3002\u5b83\u6839\u636e\uff2d\uff21\uff23\u5730\u5740\u5bfb\u5740\uff0c\u901a\u8fc7\u7ad9\u8868\u9009\u62e9\u8def\u7531\uff0c\u7ad9\u8868\u7684\u5efa\u7acb\u548c\u7ef4\u62a4\u7531\u4ea4\u6362\u673a\u81ea\u52a8\u8fdb\u884c\u3002\u8def\u7531\u5668\u5c5e\u4e8e\uff2f\uff33\uff29\u7b2c\u4e09\u5c42\u5373\u7f51\u7edc\u5c42\u8bbe\u5907\uff0c\u5b83\u6839\u636e\uff29\uff30\u5730\u5740\u8fdb\u884c\u5bfb\u5740\uff0c\u901a\u8fc7\u8def\u7531\u8868\u8def\u7531\u534f\u8bae\u4ea7\u751f\u3002\u56e0\u7279\u7f51\u7684\u8def\u7531\u9009\u62e9\u534f\u8bae\uff1a\u5185\u90e8\u7f51\u5173\u534f\u8baeIGP\u548c\u5916\u90e8\u7f51\u5173\u534f\u8baeEGP", "\n\u7b2c\u4e09\u5c42\u4ea4\u6362\u673a\u548c\u8def\u7531\u5668\u7684\u533a\u522b\uff1a", "\n\u5728\u7b2c\u4e09\u5c42\u4ea4\u6362\u6280\u672f\u51fa\u73b0\u4e4b\u524d\uff0c\u51e0\u4e4e\u6ca1\u6709\u5fc5\u8981\u5c06\u8def\u7531\u529f\u80fd\u5668\u4ef6\u548c\u8def\u7531\u5668\u533a\u522b\u5f00\u6765\uff0c\u4ed6\u4eec\u5b8c\u5168\u662f\u76f8\u540c\u7684\uff1a\u63d0\u4f9b\u8def\u7531\u529f\u80fd\u6b63\u5728\u8def\u7531\u5668\u7684\u5de5\u4f5c\uff0c\u7136\u800c\uff0c\u73b0\u5728\u7b2c\u4e09\u5c42\u4ea4\u6362\u673a\u5b8c\u5168\u80fd\u591f\u6267\u884c\u4f20\u7edf\u8def\u7531\u5668\u7684\u5927\u591a\u6570\u529f\u80fd\u3002", "\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u4ea4\u6362\u673a\u4e00\u822c\u7528\u4e8e\uff2c\uff21\uff2e\uff0d\uff37\uff21\uff2e\u7684\u8fde\u63a5\uff0c\u4ea4\u6362\u673a\u5f52\u4e8e\u7f51\u6865\uff0c\u662f\u6570\u636e\u94fe\u8def\u5c42\u7684\u8bbe\u5907\uff0c\u6709\u4e9b\u4ea4\u6362\u673a\u4e5f\u53ef\u5b9e\u73b0\u7b2c\u4e09\u5c42\u7684\u4ea4\u6362\u3002\u8def\u7531\u5668\u7528\u4e8e\uff37\uff21\uff2e\uff0d\uff37\uff21\uff2e\u4e4b\u95f4\u7684\u8fde\u63a5\uff0c\u53ef\u4ee5\u89e3\u51b3\u5f02\u6027\u7f51\u7edc\u4e4b\u95f4\u8f6c\u53d1\u5206\u7ec4\uff0c\u4f5c\u7528\u4e8e\u7f51\u7edc\u5c42\u3002\u4ed6\u4eec\u53ea\u662f\u4ece\u4e00\u6761\u7ebf\u8def\u4e0a\u63a5\u53d7\u8f93\u5165\u5206\u7ec4\uff0c\u7136\u540e\u5411\u53e6\u4e00\u6761\u7ebf\u8def\u8f6c\u53d1\u3002\u8fd9\u4e24\u6761\u7ebf\u8def\u53ef\u80fd\u5206\u5c5e\u4e8e\u4e0d\u540c\u7684\u7f51\u7edc\uff0c\u5e76\u91c7\u7528\u4e0d\u540c\u534f\u8bae\u3002\u76f8\u6bd4\u8f83\u800c\u8a00\uff0c\u8def\u7531\u5668\u7684\u529f\u80fd\u8f83\u4ea4\u6362\u673a\u8981\u5f3a\u5927\uff0c\u4f46\u901f\u5ea6\u76f8\u5bf9\u4e5f\u6162\uff0c\u4ef7\u683c\u6602\u8d35\uff0c\u7b2c\u4e09\u5c42\u4ea4\u6362\u673a\u65e2\u6709\u4ea4\u6362\u673a\u7ebf\u901f\u8f6c\u53d1\u62a5\u6587\u80fd\u529b\uff0c\u53c8\u6709\u8def\u7531\u5668\u826f\u597d\u7684\u63a7\u5236\u529f\u80fd\uff0c\u56e0\u6b64\u5f97\u4ee5\u5e7f\u64ad\u5e94\u7528\u3002"], "title": "\u7b2c\u4e8c\u5c42\u4ea4\u6362\u673a\u548c\u8def\u7531\u5668\u7684\u533a\u522b\uff1f\u7b2c\u4e09\u5c42\u4ea4\u6362\u673a\u548c\u8def\u7531\u5668\u7684\u533a\u522b\uff1f"},
{"contents": ["\u6807\u51c6\u7b54\u6848\uff1a", "\nif ( flag )", "\nif ( !flag )", "\n\u5982\u4e0b\u5199\u6cd5\u5747\u5c5e\u4e0d\u826f\u98ce\u683c\uff0c\u4e0d\u5f97\u5206\u3002", "\nif (flag == TRUE)", "\nif (flag == 1 )", "\nif (flag == FALSE)", "\nif (flag == 0)"], "title": "\u8bf7\u5199\u51fa BOOL flag \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5"},
{"contents": ["void BubbleSort(elemtype x[],int n)", "\n{", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int i,j;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 elemtype temp;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(i=1;i<n;i++)\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(j=0;j<n-i;j++)", "\n{", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(x[j].key>x[j+1].key)\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 temp=x[j];", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 x[j]=x[j+1];", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 x[j+1]=temp;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n}", "\n}"], "title": "\u5199\u51fa\u4e00\u4e2a\u65b9\u6cd5\u5b9e\u73b0\u5192\u6ce1\u6392\u5e8f"},
{"contents": ["f(1)=1", "\nf(2)=1", "\nf(n)=f(n-1)+f(n-2) n>2", "\n\u89e3\uff1a", "\nint f(int n)", "\n{", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int i,s,s1,s2;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 s1=1;/*s1\u7528\u4e8e\u4fdd\u5b58f(n-1)\u7684\u503c*/", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 s2=1;/*s2\u7528\u4e8e\u4fdd\u5b58f(n-2)\u7684\u503c*/", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 s=1;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(i=3;i<=n;i++)", "\n{", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 s=s1+s2;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 s2=s1;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 s1=s;", "\n\u00a0\u00a0\u00a0 }", "\nreturn(s);", "\n}"], "title": "\u9012\u5f52\u8ba1\u7b97\u5982\u4e0b\u9012\u5f52\u51fd\u6570\u7684\u503c\uff08\u6590\u6ce2\u62c9\u5951\uff09"},
{"contents": ["Windows\u662f\u4e00\u4e2a\u6d88\u606f\uff08Message\uff09\u9a71\u52a8\u7cfb\u7edf\u3002Windows\u7684\u6d88\u606f\u63d0\u4f9b\u4e86\u5e94\u7528\u7a0b\u5e8f\u4e4b\u95f4\u3001\u5e94\u7528\u7a0b\u5e8f\u4e0eWindows\u7cfb\u7edf\u4e4b\u95f4\u8fdb\u884c\u901a\u4fe1\u7684\u624b\u6bb5\u3002\u5e94\u7528\u7a0b\u5e8f\u60f3\u8981\u5b9e\u73b0\u7684\u529f\u80fd\u7531\u6d88\u606f\u6765\u89e6\u53d1\uff0c\u5e76\u4e14\u9760\u5bf9\u6d88\u606f\u7684\u54cd\u5e94\u548c\u5904\u7406\u6765\u5b8c\u6210\u3002", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Windows\u7cfb\u7edf\u4e2d\u6709\u4e24\u79cd\u6d88\u606f\u961f\u5217\uff1a\u7cfb\u7edf\u6d88\u606f\u961f\u5217\u548c\u5e94\u7528\u7a0b\u5e8f\u6d88\u606f\u961f\u5217\u3002\u8ba1\u7b97\u673a\u7684\u6240\u6709\u8f93\u5165\u8bbe\u5907\u7531Windows\u76d1\u63a7\u3002\u5f53\u4e00\u4e2a\u4e8b\u4ef6\u53d1\u751f\u65f6\uff0cWindows\u5148\u5c06\u8f93\u5165\u7684\u6d88\u606f\u653e\u5165\u7cfb\u7edf\u6d88\u606f\u961f\u5217\u4e2d\uff0c\u518d\u5c06\u6d88\u606f\u62f7\u8d1d\u5230\u76f8\u5e94\u7684\u5e94\u7528\u7a0b\u5e8f\u6d88\u606f\u961f\u5217\u4e2d\u3002\u5e94\u7528\u7a0b\u5e8f\u7684\u6d88\u606f\u5904\u7406\u7a0b\u5e8f\u5c06\u53cd\u590d\u68c0\u6d4b\u6d88\u606f\u961f\u5217\uff0c\u5e76\u628a\u68c0\u6d4b\u5230\u7684\u6bcf\u4e2a\u6d88\u606f\u53d1\u9001\u5230\u76f8\u5e94\u7684\u7a97\u53e3\u51fd\u6570\u4e2d\u3002\u8fd9\u4fbf\u662f\u4e00\u4e2a\u4e8b\u4ef6\u4ece\u53d1\u751f\u81f3\u5230\u8fbe\u7a97\u53e3\u51fd\u6570\u5fc5\u987b\u7ecf\u5386\u7684\u8fc7\u7a0b\u3002", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u5fc5\u987b\u6ce8\u610f\u7684\u662f\uff0c\u6d88\u606f\u5e76\u975e\u662f\u62a2\u5360\u6027\u7684\uff0c\u65e0\u8bba\u4e8b\u4ef6\u7684\u7f13\u6025\uff0c\u603b\u662f\u6309\u7167\u5230\u8fbe\u7684\u5148\u540e\u6d3e\u5bf9\uff0c\u4f9d\u6b21\u5904\u7406\uff08\u4e00\u4e9b\u7cfb\u7edf\u6d88\u606f\u9664\u5916\uff09\uff0c\u8fd9\u6837\u53ef\u80fd\u4f7f\u4e00\u4e9b\u5b9e\u65f6\u5916\u90e8\u4e8b\u4ef6\u5f97\u4e0d\u5230\u53ca\u65f6\u5904\u7406\u3002", "Windows\u4e2d\u7684\u6d88\u606f\u662f\u653e\u5728\u5bf9\u5e94\u7684\u8fdb\u7a0b\u7684\u6d88\u606f\u961f\u5217\u91cc\u7684\u3002\u53ef\u4ee5\u901a\u8fc7GetMessage\u53d6\u5f97\uff0c\u5e76\u4e14\u5bf9\u4e8e\u4e00\u822c\u7684\u6d88\u606f\uff0c\u6b64\u51fd\u6570\u8fd4\u56de\u975e\u96f6\u503c\uff0c\u4f46\u662f\u5bf9\u4e8eWM_QUIT\u6d88\u606f\uff0c\u8fd4\u56de\u96f6\u3002\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u7279\u5f81\uff0c\u7ed3\u675f\u7a0b\u5e8f\u3002\u5f53\u53d6\u5f97\u6d88\u606f\u4e4b\u540e\uff0c\u5e94\u8be5\u5148\u8f6c\u6362\u6d88\u606f\uff0c\u518d\u5206\u53d1\u6d88\u606f\u3002\u6240\u8c13\u8f6c\u6362\uff0c\u5c31\u662f\u628a\u952e\u76d8\u7801\u7684\u8f6c\u6362\uff0c\u6240\u8c13\u5206\u53d1\uff0c\u5c31\u662f\u628a\u6d88\u606f\u5206\u53d1\u7ed9\u5bf9\u5e94\u7684\u7a97\u53e3\uff0c\u7531\u5bf9\u5e94\u7684\u7a97\u53e3\u5904\u7406\u6d88\u606f\uff0c\u8fd9\u6837\u5bf9\u5e94\u7a97\u4f53\u7684\u6d88\u606f\u5904\u7406\u51fd\u6570\u5c31\u4f1a\u88ab\u8c03\u7528\u3002\u4e24\u4e2a\u51fd\u6570\u53ef\u4ee5\u5b9e\u73b0\u8fd9\u4e24\u4e2a\u529f\u80fd\uff1aTranslateMessage\u548cDispatchMessage\u3002", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u53e6\u5916\uff0c\u9700\u8981\u6ce8\u610f\uff0c\u5f53\u6211\u4eec\u70b9\u51fb\u7a97\u53e3\u7684\u5173\u95ed\u6309\u94ae\u5173\u95ed\u7a97\u53e3\u65f6\uff0c\u7a0b\u5e8f\u5e76\u6ca1\u6709\u81ea\u52a8\u9000\u51fa\uff0c\u800c\u662f\u5411\u7a0b\u5e8f\u53d1\u9001\u4e86\u4e00\u4e2aWM_DESTROY\u6d88\u606f\uff08\u5176\u5b9e\u8fc7\u7a0b\u662f\u8fd9\u6837\u7684\uff0c\u9996\u5148\u5411\u7a0b\u5e8f\u53d1\u9001WM_CLOSE\u6d88\u606f\uff0c\u9ed8\u8ba4\u7684\u5904\u7406\u7a0b\u5e8f\u662f\u8c03\u7528DestroyWindow\u9500\u6bc1\u7a97\u4f53\uff0c\u4ece\u800c\u5f15\u53d1WM_DESTROY\u6d88\u606f\uff09\uff0c\u6b64\u65f6\u5728\u7a97\u4f53\u4e2d\u6211\u4eec\u8981\u54cd\u5e94\u8fd9\u4e2a\u6d88\u606f\uff0c\u5982\u679c\u9700\u8981\u9000\u51fa\u7a0b\u5e8f\uff0c\u90a3\u4e48\u5c31\u8981\u5411\u7a0b\u5e8f\u53d1\u9001WM_QUIT\u6d88\u606f(\u901a\u8fc7PostQuitMessage\u5b9e\u73b0)\u3002\u4e00\u4e2a\u7a97\u4f53\u5982\u679c\u60f3\u8981\u8c03\u7528\u81ea\u5df1\u7684\u6d88\u606f\u5904\u7406\u51fd\u6570\uff0c\u53ef\u4ee5\u4f7f\u7528SendMessage\u5411\u81ea\u5df1\u53d1\u6d88\u606f\u3002", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u5982\u4e0a\u6240\u8ff0\uff0c\u5927\u90e8\u5206\uff08\u6ce8\u610f\u662f\u5927\u90e8\u5206\uff09\u7684\u6d88\u606f\u662f\u8fd9\u6837\u4f20\u9012\u7684\uff1a\u9996\u5148\u653e\u5230\u8fdb\u7a0b\u7684\u6d88\u606f\u961f\u5217\u4e2d\uff0c\u4e4b\u540e\u7531GetMessage\u53d6\u51fa\uff0c\u8f6c\u6362\u540e\uff0c\u5206\u53d1\u7ed9\u5bf9\u5e94\u7684\u7a97\u53e3\u3002\u8fd9\u79cd\u6d88\u606f\u6210\u4e3a\u5b58\u50a8\u5f0f\u6d88\u606f\u3002\u5b58\u50a8\u5f0f\u6d88\u606f\u57fa\u672c\u4e0a\u662f\u4f7f\u7528\u8005\u8f93\u5165\u7684\u7ed3\u679c\uff0c\u4ee5\u51fb\u952e\uff08\u5982WM_KEYDOWN\u548cWM_KEYUP\u8baf\u606f\uff09\u3001\u51fb\u952e\u4ea7\u751f\u7684\u5b57\u7b26\uff08WM_CHAR\uff09\u3001\u9f20\u6807\u79fb\u52a8\uff08WM_MOUSEMOVE\uff09\u548c\u9f20\u6807\u6309\u94ae\uff08WM_LBUTTONDOWN\uff09\u7684\u5f62\u5f0f\u7ed9\u51fa\u3002\u5b58\u50a8\u5f0f\u6d88\u606f\u8fd8\u5305\u542b\u65f6\u949f\u6d88\u606f\uff08WM_TIMER\uff09\u3001\u66f4\u65b0\u6d88\u606f\uff08WM_PAINT\uff09\u548c\u9000\u51fa\u6d88\u606f\uff08WM_QUIT\uff09\u3002\u4f46\u662f\u4e5f\u6709\u7684\u6d88\u606f\u662f\u76f4\u63a5\u53d1\u9001\u7ed9\u7a97\u53e3\u7684\uff0c\u5b83\u4eec\u88ab\u79f0\u4e3a\u975e\u5b58\u50a8\u5f0f\u6d88\u606f\u3002\u4f8b\u5982\uff0c\u5f53WinMain\u8c03\u7528CreateWindow\u65f6\uff0cWindows\u5c06\u5efa\u7acb\u7a97\u53e3\u5e76\u5728\u5904\u7406\u4e2d\u7ed9\u7a97\u53e3\u6d88\u606f\u5904\u7406\u51fd\u6570\u53d1\u9001\u4e00\u4e2aWM_CREATE\u6d88\u606f\u3002\u5f53WinMain\u8c03\u7528ShowWindow\u65f6\uff0cWindows\u5c06\u7ed9\u7a97\u53e3\u6d88\u606f\u5904\u7406\u51fd\u6570\u53d1\u9001WM_SIZE\u548cWM_SHOWWINDOW\u6d88\u606f\u3002\u5f53WinMain\u8c03\u7528UpdateWindow\u65f6\uff0cWindows\u5c06\u7ed9\u7a97\u53e3\u6d88\u606f\u5904\u7406\u51fd\u6570\u53d1\u9001WM_PAINT\u6d88\u606f\u3002"], "title": "\u89e3\u91ca\u4e00\u4e0bWindows\u7684\u6d88\u606f\u673a\u5236"},
{"contents": ["#include <Winsock2.h>", "\n#include <stdio.h>", "\nvoid main()", "\n{", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 WORDwVersionRequested;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 WSADATA wsaData;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int err;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 wVersionRequested = MAKEWORD(1,1);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 err = WSAStartup(wVersionRequested,&wsaData);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if( err != 0)", "\n{", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return;\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(LOBYTE( wsaData.wVersion ) != 1||", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 HIBYTE( wsaData.wVersion) != 1)", "\n{", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 WSACleanup();", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 SOCKET sockSrv=socket(AF_INET,SOCK_STREAM,0);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 SOCKADDR_IN addrSrv;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 addrSrv.sin_addr.S_un.S_addr=htonl(INADDR_ANY);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 addrSrv.sin_family=AF_INET;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 addrSrv.sin_port=htons(6000);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 bind(sockSrv,(SOCKADDR*)&addrSrv,sizeof(SOCKADDR));", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 listen(sockSrv,5);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 SOCKADDR_IN addrClient;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int len=sizeof(SOCKADDR);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 while(1)", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 SOCKET sockConn=accept(sockSrv,(SOCKADDR*)&addrClient,&len);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 char sendBuf[100];", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 sprint(sendBuf,\u201dWelcome %s to ", "\u201c,", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 inet_ntoa(addrClient.sin_addr));", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 send(sockConn,sendBuf,strlen(sendBuf)+1,0);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 char recvBuf[100];", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 recv(sockConn,recvBuf);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c%s\\n\u201d,recvBuf);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 closesocket(sockConn);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 WSACleanup();", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0", "\n}", "\n\u6ce8\uff1a\u8fd9\u662fServer\u7aef\uff1bFile->New->Win32 Console Application\uff0c\u5de5\u7a0b\u540d\uff1aTcpSrv\uff1b\u7136\u540e\uff0cFile->New->C++ Source File\uff0c\u6587\u4ef6\u540d\uff1aTcpSrv\uff1b\u5728\u8be5\u5de5\u7a0b\u7684Setting\u7684Link\u7684Object/library modules\u9879\u8981\u52a0\u5165ws2_32.lib", "\n#include <Winsock2.h>", "\n#include <stdio.h>", "\nvoid main()", "\n{", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 WORDwVersionRequested;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 WSADATA wsaData;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int err;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 wVersionRequested = MAKEWORD(1,1);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 err = WSAStartup(wVersionRequested,&wsaData);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if( err != 0)", "\n{", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return;\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(LOBYTE( wsaData.wVersion ) != 1||", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 HIBYTE( wsaData.wVersion) != 1)", "\n{", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 WSACleanup();", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 SOCKET sockClient=socket(AF_INET,SOCK_STREAM,0);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 SOCKADDR_IN addrSrv;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 addrSrv.sin_addr.S_un.S_addr=inet_addr(\u201c127.0.0.1\u2033);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 addrSrv.sin_family=AF_INET;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 addrSrv.sin_porthtons(6000);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 connect(sockClient,(SOCKADDR*)&addrSrv,sizeof(SOCKADDR));", "\nchar recvBuf[100];", "\nrecv(sockClient,recvBuf,100,0);", "\nprintf(\u201c%s\\n\u201d,recvBuf);", "\nsend(sockClient,\u201dThis is zhangsan\u201d,strlen(\u201cThis is zhangsan\u201d)+1,0);\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 closesocket(sockClient);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 WSACleanup();", "\n}", "\n\u6ce8\uff1a\u8fd9\u662fClient\u7aef\uff1bFile->New->Win32 Console Application\uff0c\u5de5\u7a0b\u540d\uff1aTcpClient\uff1b\u7136\u540e\uff0cFile->New->C++ Source File\uff0c\u6587\u4ef6\u540d\uff1aTcpClient\uff1b\u540c\u7406\uff0c\u5728\u8be5\u5de5\u7a0b\u7684Setting\u7684Link\u7684Object/library modules\u9879\u8981\u52a0\u5165ws2_32.lib"], "title": "\u7528C\u6216\u8005C++\u8bed\u8a00\u5b9e\u73b0SOCKET\u901a\u4fe1"},
{"contents": ["#include \u201cmemory.h\u201d", "\nmemset\u7528\u6765\u5bf9\u4e00\u6bb5\u5185\u5b58\u7a7a\u95f4\u5168\u90e8\u8bbe\u7f6e\u4e3a\u67d0\u4e2a\u5b57\u7b26\uff0c\u4e00\u822c\u7528\u5728\u5bf9\u5b9a\u4e49\u7684\u5b57\u7b26\u4e32\u8fdb\u884c\u521d\u59cb\u5316\u4e3a\u2018 \u2018\u6216\u2018\\0\u2032\uff1b\u4f8b:char a[100];memset(a, \u2018\\0\u2032, sizeof(a));", "\nmemcpy\u7528\u6765\u505a\u5185\u5b58\u62f7\u8d1d\uff0c\u4f60\u53ef\u4ee5\u62ff\u5b83\u62f7\u8d1d\u4efb\u4f55\u6570\u636e\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u53ef\u4ee5\u6307\u5b9a\u62f7\u8d1d\u7684\u6570\u636e\u957f\u5ea6\uff1b\u4f8b\uff1achar a[100],b[50]; memcpy(b, a, sizeof(b));\u6ce8\u610f\u5982\u7528sizeof(a)\uff0c\u4f1a\u9020\u6210b\u7684\u5185\u5b58\u5730\u5740\u6ea2\u51fa\u3002", "\nstrcpy\u5c31\u53ea\u80fd\u62f7\u8d1d\u5b57\u7b26\u4e32\u4e86\uff0c\u5b83\u9047\u5230\u2019\\0\u2032\u5c31\u7ed3\u675f\u62f7\u8d1d\uff1b\u4f8b\uff1achar a[100],b[50];strcpy(a,b);\u5982\u7528strcpy(b,a)\uff0c\u8981\u6ce8\u610fa\u4e2d\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\uff08\u7b2c\u4e00\u4e2a\u2018\\0\u2032\u4e4b\u524d\uff09\u662f\u5426\u8d85\u8fc750\u4f4d\uff0c\u5982\u8d85\u8fc7\uff0c\u5219\u4f1a\u9020\u6210b\u7684\u5185\u5b58\u5730\u5740\u6ea2\u51fa\u3002", "\nstrcpy", "\n\u539f\u578b\uff1aextern char *strcpy(char *dest,char *src);", "\n\u7528\u6cd5\uff1a#include", "\n\u529f\u80fd\uff1a\u628asrc\u6240\u6307\u7531NULL\u7ed3\u675f\u7684\u5b57\u7b26\u4e32\u590d\u5236\u5230dest\u6240\u6307\u7684\u6570\u7ec4\u4e2d\u3002", "\n\u8bf4\u660e\uff1asrc\u548cdest\u6240\u6307\u5185\u5b58\u533a\u57df\u4e0d\u53ef\u4ee5\u91cd\u53e0\u4e14dest\u5fc5\u987b\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u6765\u5bb9\u7eb3src\u7684\u5b57\u7b26\u4e32\u3002", "\n\u8fd4\u56de\u6307\u5411dest\u7684\u6307\u9488\u3002", "\nmemcpy", "\n\u539f\u578b\uff1aextern void *memcpy(void *dest, void *src, unsigned int count);", "\n\u7528\u6cd5\uff1a#include", "\n\u529f\u80fd\uff1a\u7531src\u6240\u6307\u5185\u5b58\u533a\u57df\u590d\u5236count\u4e2a\u5b57\u8282\u5230dest\u6240\u6307\u5185\u5b58\u533a\u57df\u3002", "\n\u8bf4\u660e\uff1asrc\u548cdest\u6240\u6307\u5185\u5b58\u533a\u57df\u4e0d\u80fd\u91cd\u53e0\uff0c\u51fd\u6570\u8fd4\u56de\u6307\u5411dest\u7684\u6307\u9488\u3002", "\nMemset", "\n\u539f\u578b\uff1aextern void *memset(void *buffer, char c, int count);", "\n\u7528\u6cd5\uff1a#include", "\n\u529f\u80fd\uff1a\u628abuffer\u6240\u6307\u5185\u5b58\u533a\u57df\u7684\u524dcount\u4e2a\u5b57\u8282\u8bbe\u7f6e\u6210\u5b57\u7b26c\u3002", "\n\u8bf4\u660e\uff1a\u8fd4\u56de\u6307\u5411buffer\u7684\u6307\u9488\u3002"], "title": "C++:memset ,memcpy \u548cstrcpy \u7684\u6839\u672c\u533a\u522b\uff1f"},
{"contents": ["\u4e0b\u9762\u8fd9\u4e2a\u7a0b\u5e8f\u6267\u884c\u540e\u4f1a\u6709\u4ec0\u4e48\u9519\u8bef\u6216\u8005\u6548\u679c:", "\n\u00a0#define MAX 255", "\nint main()", "\n{", "\n\u00a0\u00a0\u00a0 unsigned char A[MAX],i;", "\n\u00a0\u00a0\u00a0 for (i=0;i<=MAX;i++)", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 A[i]=i;", "\n}", "\n\u89e3\u7b54\uff1aMAX=255,\u6570\u7ec4A\u7684\u4e0b\u6807\u8303\u56f4\u4e3a:0..MAX-1,\u8fd9\u662f\u5176\u4e00,\u5176\u4e8c \u5f53i\u5faa\u73af\u5230255\u65f6,\u5faa\u73af\u5185\u6267\u884c: A[255]=255;\u8fd9\u53e5\u672c\u8eab\u6ca1\u6709\u95ee\u9898\uff0c\u4f46\u662f\u8fd4\u56defor (i=0;i<=MAX;i++)\u8bed\u53e5\u65f6,\u7531\u4e8eunsigned char\u7684\u53d6\u503c\u8303\u56f4\u5728(0..255),i++\u4ee5\u540ei\u53c8\u4e3a0\u4e86..\u65e0\u9650\u5faa\u73af\u4e0b\u53bb.", "\n\u6ce8\uff1achar\u7c7b\u578b\u4e3a\u4e00\u4e2a\u5b57\u8282\uff0c\u53d6\u503c\u8303\u56f4\u662f[-128\uff0c127]\uff0cunsigned char [0 ,255]"], "title": "\u6570\u7ec4\u8d8a\u754c\u95ee\u9898"},
{"contents": ["1)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u9012\u5f52\u65b9\u6cd5\u5b9e\u73b0\uff1a", "\nint BSearch(elemtype a[],elemtype x,int low,int high)", "\n/*\u5728\u4e0b\u5c4a\u4e3alow\uff0c\u4e0a\u754c\u4e3ahigh\u7684\u6570\u7ec4a\u4e2d\u6298\u534a\u67e5\u627e\u6570\u636e\u5143\u7d20x*/", "\n{", "\n\u00a0 int mid;", "\n\u00a0 if(low>high) return -1;", "\n\u00a0 mid=(low+high)/2;", "\n\u00a0 if(x==a[mid]) return mid;", "\n\u00a0 if(x<a[mid]) return(BSearch(a,x,low,mid-1));", "\n\u00a0 else return(BSearch(a,x,mid+1,high));", "\n}", "\n2)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u975e\u9012\u5f52\u65b9\u6cd5\u5b9e\u73b0\uff1a", "\nint BSearch(elemtype a[],keytype key,int n)", "\n{", "\n\u00a0 int low,high,mid;", "\n\u00a0 low=0;high=n-1;", "\n\u00a0 while(low<=high)\u00a0", "\n\u00a0\u00a0 {", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 mid=(low+high)/2;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 if(a[mid].key==key) return mid;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 else if(a[mid].key<key) low=mid+1;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 else high=mid-1;", "\n\u00a0\u00a0 }", "\n\u00a0 return -1;", "\n}"], "title": "\u5199\u51fa\u4e8c\u5206\u67e5\u627e\u7b97\u6cd5\u7684\u4e24\u79cd\u5b9e\u73b0\uff1f"},
{"contents": ["1\u3001\u667a\u80fd\u6307\u9488\uff0ccom\u5b9e\u73b0\u7684\u539f\u7406\uff0c\u00a0\u00a0", "\n\u00a0\u00a02\u3001printf\uff08\uff09\u53ef\u53d8\u53c2\u6570\u5982\u4f55\u5b9e\u73b0\u00a0\u00a0\u00a0\u00a0", "\n\u00a0\u00a03\u3001\u6807\u51c6\u6a21\u677f\u5e93vector\u8ffd\u52a0\u6570\u636e\u5982\u4f55\u5b9e\u73b0\u3002\u662f\u5e95\u5c42\u5982\u4f55\u5b9e\u73b0\uff0c\u4e0d\u80fd\u7528\u73b0\u6709\u7684\u4e1c\u4e1c\u3002\u00a0\u00a0", "\n\u00a0\u00a04\u3001\u8fd8\u6709\uff0cjava\u7684\u5783\u573e\u6536\u96c6\u673a\u5236\u5982\u4f55\u5b9e\u73b0\u4e3a\u4ec0\u4e48\uff1f\u5982\u679c\u662f\u4f60\u81ea\u5df1\u5b9e\u73b0\u5783\u573e\u6536\u96c6\u673a\u5236\uff0c\u5982\u4f55\u5b9e\u00a0\u00a0", "\n\u00a0\u00a0\u73b0\uff1f\u00a0\u00a0 \u7528\u4ec0\u4e48\u6570\u636e\u7ed3\u6784\u3002\u00a0\u00a0", "\n\u00a0\u00a05\u3001\u4e8c\u53c9\u6392\u5e8f\u6811\u548c\u54c8\u5e0c\u8868\u90a3\u4e2a\u67e5\u627e\u6548\u7387\u9ad8\uff0c\u5b9e\u7528\u4e8epda\u00a0\u00a0 \u3002\u00a0\u00a0", "\n\u00a0\u00a06\u3001.net\u7684\u5e95\u5c42\u5b9e\u73b0\u673a\u5236\u3002\u00a0\u00a0", "\n\u00a0\u00a07\u3001\u8fdb\u7a0b\u95f4\u901a\u4fe1\u5982\u4f55\u5b9e\u73b0\u3002\u00a0\u00a0", "\n\u00a0\u00a08\u3001\u8fd8\u6709\u8fed\u4ee3\u95ee\u9898\uff0c\u4ec0\u4e48\u95ee\u9898\u7528\u8fed\u4ee3\uff0c\u8fed\u4ee3\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u5982\u4f55\u5b9e\u73b0\u7684\u00a0\u00a0 \u3002\u00a0\u00a0", "\n\u00a0\u00a09\u3001\u5982\u4f55\u4ea4\u6362\u4e24\u4e2a\u53d8\u91cf\uff0c\u4e0d\u80fd\u7528\u4e2d\u95f4\u53d8\u91cf\u3002\u00a0\u00a0", "\n\u00a0\u00a010\u3001c\u4e0ec++\u00a0\u00a0 static\u51fd\u6570\u7684\u533a\u522b\uff1f\uff1f\uff1f\u00a0\u00a0", "\n\u00a0\u00a011\u3001const\u00a0\u00a0 \u51fd\u6570\u7684\u4f5c\u7528\uff0c\u5982\u4f55\u5b9e\u73b0\u94a9\u5b50\u51fd\u6570\u3002\u00a0\u00a0", "\n\u00a0\u00a012\u3001\u4e24\u5c42\u5bb9\u9519\u6280\u672f\u600e\u4e48\u5b9e\u73b0\uff1f\u00a0\u00a0\u00a0\u00a0", "\n\u00a0\u00a013\u3001\u5199\u51fa\u51fd\u6570\u6307\u9488\uff0c\u51fd\u6570\u8fd4\u56de\u6307\u9488\uff0cconst\u6307\u9488\uff0c\u6307\u5411const\u7684\u6307\u9488\uff0c\u6307\u5411const\u7684const\u6307\u9488\u3002\u00a0\u00a0", "\n\u00a0\u00a014\u3001\u51fd\u6570\u8c03\u7528\u5982\u4f55\u5b9e\u73b0\uff0c\u6ce8\u610f\u4ec0\u4e48\u95ee\u9898\u3002\u00a0\u00a0", "\n\u00a0\u00a015\u3001\u6307\u9488\u548c\u5f15\u7528\u7684\u5dee\u522b\uff0c\u00a0\u00a0", "\n\u00a0\u00a016\u3001\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u5982\u4f55\u5b9e\u73b0\uff0c\u4ec0\u4e48\u60c5\u51b5\u4e0b\u4f1a\u7528\u5230\u3002"], "title": "\u4e00\u5bb6\u5916\u4f01\u7684\u9762\u8bd5\u9898\u76ee(C/C++\u9762\u8bd5\u9898,C\u8bed\u8a00\u9762\u8bd5\u9898 )"},
{"contents": ["//f(x)=RMAX-R+(R-r)*double\u00a0\u00a0 (cos(0.5*x))+double\u00a0\u00a0 (sqrt(r*r-(R-r)*(R-r)*\u00a0\u00a0 sin(0.500*x)*\u00a0\u00a0 sin(0.500*x)))\u00a0\u00a0", "\n\u00a0\u00a0\u8bf7\u7528\u4e8c\u5206\u6cd5\u6216\u5176\u4ed6\u65b9\u6cd5\u6c42\u51fa\u89e3x.\u8981\u6c42\u7cbe\u5ea6esp=1e-5\u00a0\u00a0", "\n\u00a0\u00a0\u5176\u4e2dRMAX,R\uff0cr\u4ece\u952e\u76d8\u8f93\u5165\u3002\u00a0\u00a0", "\u00a0\u00a0"], "title": "\u67d0IT\u5916\u4f01\u9762\u8bd5\u9898\uff1a\u4e8c\u5206\u6cd5\u6c42\u65b9\u7a0b\uff01\u770b\u770b\u5927\u5bb6\u7684C++\u529f\u5e95"},
{"contents": ["\u8fd9\u4e2a\u9762\u8bd5\u95ee\u9898\u51e0\u4e4e\u662fC++\u9762\u8bd5\u4e2d\u6bcf\u6b21\u90fd\u4f1a\u6709\u7684\u9898\u76ee\u3002 \u4e8b\u5b9e\u4e0a\u8fd9\u4e2a\u6982\u5ff5\u8c01\u90fd\u6709\u53ea\u662f\u4e09\u79cd\u58f0\u660e\u65b9\u5f0f\u975e\u5e38\u76f8\u4f3c\u5f88\u5bb9\u6613\u8bb0\u6df7\u3002 Bjarne\u5728\u4ed6\u7684The C++ Programming Language\u91cc\u9762\u7ed9\u51fa\u8fc7\u4e00\u4e2a\u52a9\u8bb0\u7684\u65b9\u6cd5\uff1a \u628a\u4e00\u4e2a\u58f0\u660e\u4ece\u53f3\u5411\u5de6\u8bfb\u3002 const", "\nchar\u00a0 * const cp; ( * \u8bfb\u6210 pointer to )", "\ncp is a const pointer to char", "\nconst char * p;", "\np is a pointer to const char;", "\nchar const * p;", "\n\u540c\u4e0a\u56e0\u4e3aC++\u91cc\u9762\u6ca1\u6709const*\u7684\u8fd0\u7b97\u7b26\uff0c\u6240\u4ee5const\u53ea\u80fd\u5c5e\u4e8e\u524d\u9762\u7684\u7c7b\u578b\u3002"], "title": "const char*, char const*, char*const\u7684\u533a\u522b\u662f\u4ec0\u4e48\uff1f"},
{"contents": ["1.\u00a0\u7528\u9884\u5904\u7406\u6307\u4ee4#define\u58f0\u660e\u4e00\u4e2a\u5e38\u6570\uff0c\u7528\u4ee5\u8868\u660e1\u5e74\u4e2d\u6709\u591a\u5c11\u79d2\uff08\u5ffd\u7565\u95f0\u5e74\u95ee\u9898\uff09\u3002", "\n\u7b54\u6848\uff1a#define\u00a0 SECONDS_PER_YEAR(60*60*24*365)UL", "\n\u5e94\u8be5\u610f\u8bc6\u5230\u8868\u8fbe\u5f0f\u5c06\u4f7f\u4e00\u4e2a16\u4f4d\u673a\u7684\u6574\u5f62\u6570\u6ea2\u51fa\uff0c\u56e0\u6b64\u8981\u7528\u5230\u957f\u6574\u578b\u7b26\u53f7L\uff0c\u8868\u8fbe\u5f0f\u4e2dUL\u8868\u793a\u65e0\u7b26\u53f7\u957f\u6574\u578b\u3002", "2.\u00a0\u5199\u4e00\u4e2a\u201c\u6807\u51c6\u201d\u5b8fMIN\uff0c\u8fd9\u4e2a\u5b8f\u8f93\u5165\u8fde\u4e2a\u53c2\u6570\u5e76\u8fd4\u56de\u8f83\u5c0f\u7684\u4e00\u4e2a\u3002", "\n\u7b54\u6848\uff1a#define MIN(A,B) ((A)<=(B)?(A):(B))\uff1b\u61c2\u5f97\u5728\u5b8f\u4e2d\u5c0f\u5fc3\u7684\u5427\u53c2\u6570\u7528\u62ec\u53f7\u6269\u8d77\u6765", "3.\u00a0sizeof \u7684\u4e00\u4e9b\u8003\u5bdf", "\nchar* ss1=\u201d0123456789\u201d;\u00a0char ss2[]=\u201d0123456789\u201d;\u00a0char ss3[100]=\u201d0123456789\u201d;", "\nint ss4[100];\u00a0char q1[]=\u201dabc\u201d;\u00a0char q2[]=\u201da\\n\u201d;\u00a0char* q3=\u201da\\n\u201d;\u00a0", "\n\u7b54\u6848\uff1ass1\u662f\u4e00\u4e2a\u5b57\u7b26\u6307\u9488\uff0c\u6307\u9488\u7684\u5927\u5c0f\u662f\u4e00\u4e2a\u786e\u5b9a\u7684\u503c\uff0c\u5c31\u662f4\uff0csizeof(ss1)=4;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 ss2\u662f\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4\uff0c\u8fd9\u4e2a\u6570\u7ec4\u6700\u521d\u7684\u5927\u5c0f\u672a\u5b9a\uff0c\u586b\u5145\u503c\u662f\u201c0123456789\u201d\uff0c\u4e00\u4e2a\u5b57\u7b26\u5360\u4e00\u4f4d\uff0c\u518d\u52a0\u4e0a\u9690\u542b\u7684\u201c\\0\u201d\u4e00\u5171\u662f11\u4f4d\u3002", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 ss3\u662f\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4\uff0c\u8fd9\u4e2a\u6570\u7ec4\u5f00\u59cb\u9884\u5206\u914d100\uff0c\u6240\u4ee5\u5b83\u7684\u5927\u5c0f\u662f100\u4f4d\u3002", "\n\u00a0\u00a0 ss4\u662f\u4e00\u4e2a\u6574\u578b\u6570\u7ec4\uff0c\u4f46\u662f\u6bcf\u4e2a\u6574\u578b\u53d8\u91cf\u6240\u5360\u7a7a\u95f4\u662f4\uff0c\u6240\u4ee5\u5b83\u7684\u5927\u5c0f\u4e00\u5171\u662f400\u4f4d\u3002", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 q1\u4e0ess2\u7c7b\u4f3c\uff0c\u53604\u4f4d\u3002Q2\u91cc\u9762\u6709\u4e00\u4e2a\u201c\\n\u201d\uff0c\u201c\\n\u201d\u7b97\u4f5c\u4e00\u4f4d\uff0c\u52a0\u4e0a\u9690\u542b\u7684\uff0c\u5927\u5c0f\u4e00\u5171\u662f3\u4f4d\u3002Q3\u662f\u4e00\u4e2a\u5b57\u7b26\u6307\u9488\uff0c\u6307\u9488\u5f97\u5927\u5c0f\u662f\u4e00\u4e2a\u5b9a\u503c\uff0c\u5c31\u662f4.", "\n4\uff0e What is the output of the following code?", "\n#include <iostream>\u00a0", "\nusing namespace std;", "\nclass A {};", "\nclass A2 {char d,e;};\u00a0", "\nstruct B{};", "\nstruct C{ char x,y;};", "\nstruct D{int x,y;};", "\nmain()", "\n{", "\ncout<<sizeof(A)<<endl;\u00a0\u00a0 1", "\ncout<<sizeof(A2)<<endl;\u00a0 2", "\nA *p1=new A();\u00a0", "\nA\u00a0 p2;", "\nA*p3;", "\ncout<<sizeof(p1)<<endl;\u00a0\u00a0 4", "\n\u00a0cout<<sizeof(p2)<<endl;\u00a0 1", "\ncout<<sizeof(p3)<<endl;\u00a0\u00a0 4", "\ncout<<sizeof(B)<<endl;\u00a0\u00a0\u00a0 1", "\ncout<<sizeof(C)<<endl;\u00a0\u00a0\u00a0 2", "\ncout<<sizeof(D)<<endl;\u00a0\u00a0\u00a0 8", "\nreturn 0;", "\n\u00a0}", "\n\u7b54\u6848\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u7c7b\u800c\u8a00\uff0c\u5373\u4fbf\u5b83\u662f\u4e00\u4e2a\u7a7a\u7684\u7c7b\uff0c\u7f16\u8bd1\u5668\u4ecd\u7136\u8981\u8981\u7ed9\u5b83\u4e00\u4e2a\u7a7a\u95f4\uff0c\u6240\u4ee5\u7c7bA\u5373\u4fbf\u4ec0\u4e48\u4e5f\u6ca1\u6709\uff0c\u5b83\u7684\u7a7a\u95f4\u5927\u5c0f\u4f9d\u7136\u4e3a1\uff0c\u800c\u7c7bA2\u5927\u5c0f\u662f\u7c7b\u4e2d\u8fde\u4e2a\u5b57\u7b26d\uff0ce\u4e4b\u548c\uff0c\u6240\u4ee5\u5b83\u7684\u7a7a\u95f4\u5927\u5c0f\u4f9d\u7136\u662f2\uff0c\u81f3\u4e8ep1\uff0cp2\uff0cp3\uff0cp1\u548cp3\u662f\u6307\u9488\uff0c\u5927\u5c0f\u662f\u4e00\u81f4\u7684\uff0c\u800c\u4e14\u662f\u5b9a\u503c\uff0c\u4e3a4\uff0cp2\u662fA\u7684\u5bf9\u8c61\uff0c\u6240\u4ee5\u5b83\u7684\u5927\u5c0f\u548c\u7c7bA\u76f8\u7b49\uff0c\u4e3a1\uff0cB\u548cC\u5f97\u89e3\u91ca\u540cA\u548cA2\uff0c\u81f3\u4e8eD\uff0c\u5b83\u548cC\u4e0d\u540c\u70b9\u5728\u4e8e\uff0c\u7ed3\u6784\u4f53\u6709\u4e24\u4e2a\u6574\u578b\u53d8\u91cf\uff0c\u6bcf\u4e2a\u6574\u578b\u53d8\u91cf\u6240\u5360\u7a7a\u95f4\u4e3a4\uff0c\u6240\u4ee5D\u6240\u5360\u7a7a\u95f4\u5927\u5c0f\u4e3a8\u3002", "\n\u6700\u540e\u7ed3\u679c\u662f 1\uff0c 2\uff0c4\uff0c 1\uff0c4\uff0c1\uff0c2\uff0c8", "\n5.\u00a0what is the output the following code?", "\n#include <iostream> using namespace std;", "\nclass A1 { public: int a; static int b\uff1bA1(); ~A1();};\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 4", "\nclass A2 { public: int a; char c; A2(); ~A2();};\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 8", "\nclass A3 { public: float a; char c; A3(); ~A3();};\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 8", "\nclass A4 { public: float a; int b; char c; A4(); ~A4();};\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 12", "\nclass A5 { public: double d; float a; int b; char c; A5(); ~A5();}\u00a0\u00a0\u00a0 24\u00a0\u00a0", "\nint main() { cout<<sizeof(A1)<<sizeof(A2)<<sizeof(A3)<<sizeof(A4)<<sizeof(A5)<<endl; return 0;}", "\n\u7b54\u6848\uff1a\u56e0\u4e3a\u9759\u6001\u53d8\u91cf\u662f\u5b58\u653e\u5728\u5168\u5c40\u6570\u636e\u533a\u7684\uff0csizeof\u8ba1\u7b97\u6808\u4e2d\u5206\u914d\u7684\u5927\u5c0f\uff0c\u662f\u4e0d\u4f1a\u8ba1\u7b97\u5728\u5185\u7684\uff0c\u6240\u4ee5sizeof(A1)\u662f4\uff1b\u4e3a\u4e86\u7167\u987e\u6570\u636e\u5bf9\u5176\uff0cint\u5927\u5c0f\u4e3a4\uff0cchar\u5927\u5c0f\u4e3a1\uff0c\u6240\u4ee5sizeof(A2)\u662f8\uff1b\u4e3a\u4e86\u7167\u987e\u6570\u636e\u5bf9\u5176\uff0cfloat\u5927\u5c0f\u4e3a4\uff0cchar\u5927\u5c0f\u4e3a1\uff0c\u6240\u4ee5sizeof(A3)\u4e3a8\uff1b\u4e3a\u4e86\u7167\u987e\u6570\u636e\u5bf9\u5176\uff0cfloat\u5927\u5c0f\u4e3a4\uff0cint\u5927\u5c0f\u4e3a4\uff0cchar\u5927\u5c0f\u4e3a1\uff0c\u6240\u4ee5sizeof(A4)\u4e3a12\uff1b\u4e3a\u4e86\u7167\u987e\u6570\u636e\u5bf9\u5176\uff0cdouble\u5927\u5c0f\u4e3a8\uff0cfloat\u5927\u5c0f\u4e3a4\uff0cint\u5927\u5c0f\u4e3a4\uff0cchar\u5927\u5c0f\u4e3a1\uff0c\u6240\u4ee5sizeof(A5)\u4e3a24\u3002", "6.\u00a0\u4ee5\u4e0b\u4ee3\u7801\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff08\uff09", "\nchar var[]", "\nInt test(char var[]){ retrun sizeof(var);}", "\n\u7b54\u6848\uff1a\u56e0\u4e3avar[]\u7b49\u4ef7\u4e8e*var\uff0c\u5df2\u7ecf\u9000\u5316\u6210\u4e00\u4e2a\u6307\u9488\u4e86\uff0c\u6240\u4ee5\u5927\u5c0f\u662f4.", "7.\u00a0\u4ee5\u4e0b\u4ee3\u7801\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff08\uff09", "\n\u00a0Class B { float f; char p; int asf[3];};\u00a0 cout<<sizeof(B)<<endl;", "\n\u7b54\u6848\uff1afloat f\u5360\u4e864\u4e2a\u5b57\u8282\uff0cchar p\u5360\u4e86\u4e00\u4e2a\u5b57\u8282\uff0cint adf[3]\u5360\u4e8612\u4e2a\u5b57\u8282\uff0c\u603b\u5171\u662f17\u4e2a\uff0c\u6839\u636e\u5185\u5b58\u7684\u5bf9\u9f50\u539f\u5219\uff0c\u8981\u9009\u62e94\u7684\u500d\u6570\uff0c\u662f20\u4e2a\u5b57\u8282\u3002", "8.\u00a0\u4ee5\u4e0b\u4ee3\u7801\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff08\uff09", "\n\u00a0Class B { double d; char p; int asf[4];};\u00a0 cout<<sizeof(B)<<endl;", "\n\u7b54\u6848\uff1adouble d\u5360\u4e868\u4e2a\u5b57\u8282\uff0cchar p\u5360\u4e86\u4e00\u4e2a\u5b57\u8282\uff0cint adf[4]\u5360\u4e8616\u4e2a\u5b57\u8282\uff0c\u603b\u5171\u662f25\u4e2a\uff0c\u6839\u636e\u5185\u5b58\u7684\u5bf9\u9f50\u539f\u5219\uff0c\u8981\u9009\u62e98\u7684\u500d\u6570\uff0c\u662f32\u4e2a\u5b57\u8282\u3002", "9.\u00a0\u4e00\u4e2a\u7a7a\u7c7b\u6240\u5360\u7a7a\u95f4\u4e3a1\uff0c\u591a\u91cd\u7ee7\u627f\u7684\u7a7a\u7c7b\u6240\u5360\u7684\u7a7a\u95f4\u8fd8\u662f1\uff0c\u4f46\u662f\u865a\u7ee7\u627f\u6d89\u53ca\u5230\u865a\u8868\uff08\u865a\u6307\u9488\uff09\uff0c\u6240\u4ee5\u865a\u7ee7\u627f\u7684\u7a7a\u7c7b\u5360\u7684\u7a7a\u95f4\u4e3a4", "\n10.\u00a0this\u6307\u9488\u662f\u5728\u5b9e\u4f8b\u5316\u4e00\u4e2a\u5bf9\u8c61\u540e\u4ea7\u751f\u7684,\u5e76\u4e14\u6307\u5411\u5bf9\u8c61\u672c\u8eab.\u6bd4\u5982\u5b9e\u4f8b\u5316\u4e00\u4e2a\u5bf9\u8c61pt,\u90a3\u4e48this=&pt;\u7528\u201d&\u201d\u53d6\u5730\u5740\u7b26\u6765\u53d6\u5bf9\u8c61\u7684\u5730\u5740.\u540c\u6837,\u5982\u679c\u5b9a\u4e49\u5bf9\u8c61pt\u8fd9\u4e2a\u7c7b\u4e2d,\u6709\u4e00\u4e2apublic\u53d8\u91cfx,\u90a3\u4e48\u5c31\u53ef\u4ee5\u7528this->x=0\u6765\u5b9a\u4e49x\u7684\u503c,\u7b49\u540c\u4e8ept.x=0.", "11.\u00a0#include <iostream> using namespace std;", "\nVoid GetMemory(int *z) { *z=5; }", "\nInt main() { int v; GetMemory(&v); cout<<v<<endl; return 0;}", "\nGetmory\u628av\u7684\u5730\u5740\u4f20\u4e86\u8fc7\u6765,*z\u662f\u5730\u5740\u91cc\u7684\u503c,\u662fv\u7684\u526f\u672c.\u901a\u8fc7\u76f4\u63a5\u4fee\u6539\u5730\u5740\u91cc\u7684\u503c,\u4e0d\u9700\u8981\u6709\u8fd4\u56de\u503c,\u4e5f\u628av\u7ed9\u4fee\u6539\u4e86,\u56e0\u4e3av\u6240\u6307\u5411\u5730\u5740\u7684\u503c\u53d1\u751f\u4e86\u6539\u53d8,\u6700\u7ec8\u7a0b\u5e8f\u4f1a\u5d29\u6e83.", "12. \u4e0b\u9762\u7684\u6570\u636e\u58f0\u660e\u90fd\u4ee3\u8868\u4ec0\u4e48\u610f\u601d\uff1f", "\n\uff081\uff09float(**def)[10]", "\nDef\u662f\u4e00\u4e2a\u4e8c\u7ea7\u6307\u9488\uff0c\u5b83\u6307\u5411\u7684\u662f\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\u7684\u6307\u9488\uff0c\u6570\u7ec4\u7684\u5143\u7d20\u90fd\u662ffloat\u3002", "\n\uff082\uff09double*(*gh)[10]", "\nGh\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u5b83\u6307\u5411\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\uff0c\u8be5\u6570\u7ec4\u5143\u7d20\u90fd\u662fdouble*", "\n(3) double(*f[10])()", "\nF\u662f\u4e00\u4e2a\u6570\u7ec4\uff0cf\u6709\u5341\u4e2a\u5143\u7d20\uff0c\u5143\u7d20\u90fd\u662f\u51fd\u6570\u7684\u6307\u9488\uff0c\u6307\u5411\u7684\u51fd\u6570\u7c7b\u578b\u662f\u6ca1\u6709\u53c2\u6570\u4e14\u8fd4\u56dedouble\u7684\u51fd\u6570", "\n(4)int*((*b)[10])", "\n\u5c31\u8ddf\u201cint*(b)[10]\u201d\u662f\u4e00\u6837\u7684\uff0cb\u662f\u4e00\u7ef4\u6570\u7ec4\u7684\u6307\u9488", "\n(5)long(*fun)(int)", "\n\u51fd\u6570\u6307\u9488", "\n(6)int(*(*f)(int,int))(int)", "\nF\u662f\u4e00\u4e2a\u51fd\u6570\u7684\u6307\u9488\uff0c\u6307\u5411\u7684\u51fd\u6570\u7684\u7c7b\u578b\u662f\u6709\u4e24\u4e2aint\u53c2\u6570\u5e76\u4e14\u8fd4\u56de\u4e00\u4e2a\u51fd\u6570\u6307\u9488\u7684\u51fd\u6570\uff0c\u8fd4\u56de\u7684\u51fd\u6570\u6307\u9488\u6307\u5411\u4e00\u4e2aint\u53c2\u6570\u4e14\u8fd4\u56deint\u7684\u51fd\u6570\u3002", "\n13. \u6307\u9488\u6570\u7ec4\u4e0e\u6570\u7ec4\u6307\u9488", "\n\u6307\u9488\u6570\u7ec4\uff0c\u662f\u6307\u4e00\u4e2a\u6570\u7ec4\u91cc\u9762\u88c5\u7740\u6307\u9488\uff0c\u6570\u7ec4\u6307\u9488\uff0c\u4ee3\u8868\u5b83\u662f\u6307\u9488\uff0c\u6307\u5411\u771f\u4e2a\u6570\u7ec4", "\n\u4e00\u4e2a\u6307\u5411\u6574\u578b\u6570\u7ec4\u7684\u6307\u9488\u5b9a\u4e49\u4e3a\uff08\uff09", "\nA\uff0e\u00a0int(*ptr)[]\u00a0 B.int *ptr[]\u00a0 C.int*(ptr[])\u00a0 D.int ptr[]", "\nint(*ptr)[]\u662f\u4ee5\u4e00\u4e2a\u6307\u5411\u6574\u578b\u6570\u7ec4\u7684\u6307\u9488", "\nint *ptr[]\u662f\u6307\u9488\u6570\u7ec4\uff0cptr[]\u91cc\u9762\u5b58\u7684\u7684\u662f\u5730\u5740\u3002\u5b83\u6307\u5411\u4f4d\u7f6e\u7684\u503c\u5c31\u662f*ptr[0],*ptr[1],*ptr[2]\uff0c\u4e0d\u8981\u5b58*ptr[0]=5,*ptr[1]=6,\u56e0\u4e3a\u91cc\u9762\u6ca1\u6709\u76f8\u5e94\u7684\u5730\u5740", "\nint*(ptr[])\u4e0eB\u76f8\u540c", "\n14. \u7528\u53d8\u91cfa\u7ed9\u51fa\u4e0b\u9762\u7684\u5b9a\u4e49", "\n(1)\u4e00\u4e2a\u6574\u578b\u6570", "\n(2)\u4e00\u4e2a\u6307\u5411\u6574\u5f62\u6570\u7684\u6307\u9488", "\n(3)\u4e00\u4e2a\u6307\u5411\u6307\u9488\u7684\u6307\u9488\uff0c\u5b83\u6307\u5411\u7684\u6307\u9488\u662f\u4e00\u4e2a\u6574\u578b\u6570", "\n(4)\u4e00\u4e2a\u670910\u4e2a\u6574\u578b\u6570\u7684\u6570\u7ec4", "\n(5)\u4e00\u4e2a\u670910\u4e2a\u6307\u9488\u7684\u6570\u7ec4\uff0c\u8be5\u6307\u9488\u662f\u6307\u5411\u4e00\u4e2a\u6574\u578b\u6570\u7684", "\n(6)\u4e00\u4e2a\u6307\u5411\u670910\u4e2a\u6574\u578b\u6570\u7ec4\u7684\u6307\u9488", "\n(7)\u4e00\u4e2a\u6307\u5411\u51fd\u6570\u7684\u6307\u9488\uff0c\u8be5\u51fd\u6570\u6709\u4e00\u4e2a\u6574\u578b\u53c2\u6570\u5e76\u8fd4\u56de\u4e00\u4e2a\u6574\u578b\u6570", "\n(8)\u4e00\u4e2a\u670910\u4e2a\u6307\u9488\u7684\u6570\u7ec4\uff0c\u8be5\u6307\u9488\u6307\u5411\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u6709\u4e00\u4e2a\u6574\u578b\u53c2\u6570\u5e76\u8fd4\u56de\u4e00\u4e2a\u6574\u6570", "\nItn a;\u00a0int *a;\u00a0int **a;\u00a0int a[10];\u00a0\u00a0int *a[10];\u00a0int (*a)[10];\u00a0int (*a)(int);\u00a0int (*a[10])(int)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0", "15.C++\u4e2d\u7684\u7a7a\u7c7b\u9ed8\u8ba4\u4ea7\u751f\u90a3\u4e9b\u7c7b\u6210\u5458\u51fd\u6570?", "\nClass Empty", "\n{ public:", "\n};", "\n\u7b54\u6848:\u5bf9\u4e8e\u4e00\u4e2a\u7a7a\u7c7b,\u7f16\u8bd1\u5668\u9ed8\u8ba4\u4ea7\u751f4\u4e2a\u6210\u5458\u51fd\u6570:\u9ed8\u8ba4\u6784\u9020\u51fd\u6570,\u6790\u6784\u51fd\u6570,\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u8d4b\u503c\u51fd\u6570", "\n16.\u90a3\u4e00\u79cd\u6210\u5458\u53d8\u91cf\u53ef\u4ee5\u5728\u540c\u4e00\u4e2a\u7c7b\u7684\u5b9e\u4f8b\u4e4b\u95f4\u5171\u4eab?", "\n\u7b54\u6848:\u5fc5\u987b\u4f7f\u7528\u9759\u6001\u6210\u5458\u53d8\u91cf\u5728\u4e00\u4e2a\u7c7b\u7684\u6240\u6709\u5b9e\u4f8b\u95f4\u5171\u4eab\u6570\u636e.\u5982\u679c\u60f3\u9650\u5236\u5bf9\u9759\u6001\u6210\u5458\u53d8\u91cf\u7684\u8bbf\u95ee,\u5219\u5fc5\u987b\u628a\u4ed6\u4eec\u58f0\u660e\u6210\u4fdd\u62a4\u578b\u6216\u79c1\u6709\u578b.\u4e0d\u5141\u8bb8\u4f7f\u7528\u9759\u6001\u6210\u5458\u53d8\u91cf\u53bb\u5b58\u653e\u4e00\u4e2a\u5bf9\u8c61\u7684\u6570\u636e\u3002\u9759\u6001\u6210\u5458\u6570\u636e\u662f\u5728\u8fd9\u4e2a\u7c7b\u7684\u6240\u6709\u5bf9\u8c61\u95f4\u5171\u4eab\u7684\u3002", "\n\u9759\u6001\u6570\u636e\u6210\u5458\uff1a\u9759\u6001\u6210\u5458\u53ef\u4ee5\u5b9e\u73b0\u591a\u4e2a\u5bf9\u8c61\u4e4b\u95f4\u7684\u6570\u636e\u5171\u4eab\uff0c\u5e76\u4e14\u4f7f\u7528\u9759\u6001\u6570\u636e\u6210\u5458\u8fd8\u4e0d\u4f1a\u7834\u574f\u9690\u85cf\u7684\u539f\u5219\uff0c\u5373\u4fdd\u8bc1\u4e86\u5b89\u5168\u6027\u3002\u8282\u7701\u5185\u5b58\uff1b\u63d0\u9ad8\u65f6\u95f4\u6548\u7387\u3002\u4f7f\u7528\u9759\u6001\u6570\u636e\u6210\u5458\u53ef\u4ee5\u56e0\u4e3a\u5b83\u662f\u6240\u6709\u5bf9\u8c61\u6240\u516c\u6709\u7684\uff0c\u56e0\u6b64\uff0c\u5bf9\u591a\u4e2a\u5bf9\u8c61\u6765\u8bf4\uff0c\u9759\u6001\u6570\u636e\u6210\u5458\u53ea\u5b58\u50a8\u4e00\u5904\uff0c\u4f9b\u6240\u6709\u5bf9\u8c61\u5171\u7528\u3002\u9759\u6001\u6570\u636e\u6210\u5458\u7684\u503c\u5bf9\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u662f\u4e00\u6837\uff0c\u4f46\u5b83\u7684\u503c\u662f\u53ef\u4ee5\u66f4\u65b0\u7684\u3002\u53ea\u8981\u5bf9\u9759\u6001\u6570\u636e\u6210\u5458\u7684\u503c\u66f4\u65b0\u4e00\u6b21\uff0c\u4fdd\u8bc1\u6240\u6709\u5bf9\u8c61\u5b58\u53d6\u66f4\u65b0\u540e\u7684\u76f8\u540c\u7684\u503c\uff0c", "\n\u3000\u30001\u3001\u9759\u6001\u6570\u636e\u6210\u5458\u5728\u5b9a\u4e49\u6216\u8bf4\u660e\u65f6\u524d\u9762\u52a0\u5173\u952e\u5b57static\u3002", "\n\u3000\u30002\u3001\u9759\u6001\u6210\u5458\u521d\u59cb\u5316\u4e0e\u4e00\u822c\u6570\u636e\u6210\u5458\u521d\u59cb\u5316\u4e0d\u540c\u3002\u9759\u6001\u6570\u636e\u6210\u5458\u521d\u59cb\u5316\u7684\u683c\u5f0f\u5982\u4e0b\uff1a", "\n\u3000\u3000\u3000\u3000<\u6570\u636e\u7c7b\u578b><\u7c7b\u540d>::<\u9759\u6001\u6570\u636e\u6210\u5458\u540d>=<\u503c>", "\n\u3000\u3000\u8fd9\u8868\u660e\uff1a", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 (1) \u521d\u59cb\u5316\u5728\u7c7b\u4f53\u5916\u8fdb\u884c\uff0c\u800c\u524d\u9762\u4e0d\u52a0static\uff0c\u4ee5\u514d\u4e0e\u4e00\u822c\u9759\u6001\u53d8\u91cf\u6216\u5bf9\u8c61\u76f8\u6df7\u6dc6\u3002", "\n\u3000\u3000(2) \u521d\u59cb\u5316\u65f6\u4e0d\u52a0\u8be5\u6210\u5458\u7684\u8bbf\u95ee\u6743\u9650\u63a7\u5236\u7b26private\uff0cpublic\u7b49\u3002", "\n\u3000\u3000(3) \u521d\u59cb\u5316\u65f6\u4f7f\u7528\u4f5c\u7528\u57df\u8fd0\u7b97\u7b26\u6765\u6807\u660e\u5b83\u6240\u5c5e\u7c7b\uff0c\u9759\u6001\u6570\u636e\u6210\u5458\u662f\u7c7b\u7684\u6210\u5458\uff0c\u800c\u4e0d\u662f\u5bf9\u8c61\u7684\u6210\u5458\u3002", "\n\u3000\u30003\u3001\u9759\u6001\u6570\u636e\u6210\u5458\u662f\u9759\u6001\u5b58\u50a8\u7684\uff0c\u5b83\u662f\u9759\u6001\u751f\u5b58\u671f\uff0c\u5fc5\u987b\u5bf9\u5b83\u8fdb\u884c\u521d\u59cb\u5316\u3002", "\n\u3000\u30004\u3001\u5f15\u7528\u9759\u6001\u6570\u636e\u6210\u5458\u65f6\uff0c\u91c7\u7528\u5982\u4e0b\u683c\u5f0f\uff1a", "\n\u3000\u3000\u3000<\u7c7b\u540d>::<\u9759\u6001\u6210\u5458\u540d>", "\n\u3000\u3000\u9759\u6001\u6570\u636e\u6210\u5458\u7684\u8bbf\u95ee\u6743\u9650\u5141\u8bb8\u7684\u8bdd(\u5373public\u7684\u6210\u5458)\uff0c\u53ef\u5728\u7a0b\u5e8f\u4e2d\uff0c\u6309\u4e0a\u8ff0\u683c\u5f0f\u6765\u5f15\u7528\u9759\u6001\u6570\u636e\u6210\u5458\u3002", "\n\u3000\u3000\u4e0b\u9762\u4e3e\u4e00\u4f8b\u5b50\uff0c\u8bf4\u660e\u9759\u6001\u6570\u636e\u6210\u5458\u7684\u5e94\u7528\uff1a", "\n#include", "\nclass Myclass", "\n{", "\npublic:", "\nMyclass(int a, int b, int c);", "\nvoid GetNumber();", "\nvoid GetSum();", "\nprivate:", "\nint A, B, C;", "\nstatic int Sum;", "\n};", "\nint Myclass::Sum = 0;", "\nMyclass::Myclass(int a, int b, int c)", "\n{", "\nA = a;", "\nB = b;", "\nC = c;", "\nSum += A+B+C;", "\n}", "\nvoid Myclass::GetNumber()", "\n{", "\ncout<<\u201dNumber=\u201d<<A<<\u201d,\u201d<<B<<\u201d,\u201d<<C<<ENDL;", "\n}", "\nvoid Myclass::GetSum()", "\n{", "\ncout<<\u201dSum=\u201d<<SUM<<ENDL;", "\n}", "\nvoid main()", "\n{", "\nMyclass M(3, 7, 10),N(14, 9, 11);", "\nM.GetNumber();", "\nN.GetNumber();", "\nM.GetSum();", "\nN.GetSum();", "\n}", "\u3000\u3000\u4ece\u8f93\u51fa\u7ed3\u679c\u53ef\u4ee5\u770b\u5230Sum\u7684\u503c\u5bf9M\u5bf9\u8c61\u548c\u5bf9N\u5bf9\u8c61\u90fd\u662f\u76f8\u7b49\u7684\u3002\u8fd9\u662f\u56e0\u4e3a\u5728\u521d\u59cb\u5316M\u5bf9\u8c61\u65f6\uff0c\u5c06M\u5bf9\u8c61\u7684\u4e09\u4e2aint\u578b\u6570\u636e\u6210\u5458\u7684\u503c\u6c42\u548c\u540e\u8d4b\u7ed9\u4e86Sum\uff0c\u4e8e\u662fSum\u4fdd\u5b58\u4e86\u8be5\u503c\u3002\u5728\u521d\u59cb\u5316N\u5bf9\u8c61\u65f6\uff0c\u5bf9\u5c06N\u5bf9\u8c61\u7684\u4e09\u4e2aint\u578b\u6570\u636e\u6210\u5458\u7684\u503c\u6c42\u548c\u540e\u53c8\u52a0\u5230Sum\u5df2\u6709\u7684\u503c\u4e0a\uff0c\u4e8e\u662fSum\u5c06\u4fdd\u5b58\u53e6\u540e\u7684\u503c\u3002\u6240\u4ee5\uff0c\u4e0d\u8bba\u662f\u901a\u8fc7\u5bf9\u8c61M\u8fd8\u662f\u901a\u8fc7\u5bf9\u8c61N\u6765\u5f15\u7528\u7684\u503c\u90fd\u662f\u4e00\u6837\u7684\uff0c\u5373\u4e3a54\u3002", "\n\u3000\u3000\u9759\u6001\u6210\u5458\u51fd\u6570", "\n\u3000\u3000\u9759\u6001\u6210\u5458\u51fd\u6570\u548c\u9759\u6001\u6570\u636e\u6210\u5458\u4e00\u6837\uff0c\u5b83\u4eec\u90fd\u5c5e\u4e8e\u7c7b\u7684\u9759\u6001\u6210\u5458\uff0c\u5b83\u4eec\u90fd\u4e0d\u662f\u5bf9\u8c61\u6210\u5458\u3002\u56e0\u6b64\uff0c\u5bf9\u9759\u6001\u6210\u5458\u7684\u5f15\u7528\u4e0d\u9700\u8981\u7528\u5bf9\u8c61\u540d\u3002", "\n\u3000\u3000\u5728\u9759\u6001\u6210\u5458\u51fd\u6570\u7684\u5b9e\u73b0\u4e2d\u4e0d\u80fd\u76f4\u63a5\u5f15\u7528\u7c7b\u4e2d\u8bf4\u660e\u7684\u975e\u9759\u6001\u6210\u5458\uff0c\u53ef\u4ee5\u5f15\u7528\u7c7b\u4e2d\u8bf4\u660e\u7684\u9759\u6001\u6210\u5458\u3002\u5982\u679c\u9759\u6001\u6210\u5458\u51fd\u6570\u4e2d\u8981\u5f15\u7528\u975e\u9759\u6001\u6210\u5458\u65f6\uff0c\u53ef\u901a\u8fc7\u5bf9\u8c61\u6765\u5f15\u7528\u3002\u4e0b\u9762\u901a\u8fc7\u4f8b\u5b50\u6765\u8bf4\u660e\u8fd9\u4e00\u70b9\u3002", "\n#include", "\nclass M", "\n{", "\npublic:", "\nM(int a) { A=a; B+=a;}", "\nstatic void f1(M m);", "\nprivate:", "\nint A;", "\nstatic int B;", "\n};", "\nvoid M::f1(M m)", "\n{", "\ncout<<\u201dA=\u201d<<M.A<<ENDL;", "\ncout<<\u201dB=\u201d<<B<<ENDL;", "\n}", "\nint M::B=0;", "\nvoid main()", "\n{", "\nM P(5),Q(10);", "\nM::f1(P); file://\u8c03\u7528\u65f6\u4e0d\u7528\u5bf9\u8c61\u540d", "\nM::f1(Q);", "\n}", "\u3000\u3000\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u5206\u6790\u5176\u7ed3\u679c\u3002\u4ece\u4e2d\u53ef\u770b\u51fa\uff0c\u8c03\u7528\u9759\u6001\u6210\u5458\u51fd\u6570\u4f7f\u7528\u5982\u4e0b\u683c\u5f0f\uff1a", "\n\u3000\u3000\u3000<\u7c7b\u540d>::<\u9759\u6001\u6210\u5458\u51fd\u6570\u540d>(<\u53c2\u6570\u8868>);\u00a0\u00a0\u00a0", "\n17\uff0e\u5224\u65ad\u9009\u62e9", "\n1. C\uff0b\uff0b\u8bed\u8a00\u6ca1\u6709\u53ef\u79fb\u690d\u6027\u3002\u00a0 B\u4e0d\u6b63\u786e", "2. \u5b9a\u4e49\u6570\u7ec4\u65f6\u53ef\u4ee5\u4e0d\u786e\u5b9a\u5143\u7d20\u4e2a\u6570\u3002\u00a0 B\u4e0d\u6b63\u786e", "3. \u6307\u9488\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u53d8\u91cf\uff0c\u53ea\u80fd\u7528\u6765\u4fdd\u5b58\u5730\u5740\u3002\u00a0 A\u6b63\u786e", "4. \u901a\u8fc7\u5f15\u7528\u6216\u8005\u6307\u9488\u8c03\u7528\u5bf9\u8c61\u7684\u6210\u5458\u51fd\u6570\u65f6\uff0c\u5982\u679c\u5f15\u7528\u6216\u8005\u6307\u9488\u7684\u7c7b\u578b\u8ddf\u5bf9\u8c61\u7684\u7c7b\u578b\u4e0d\u4e00\u81f4\u65f6\uff0c\u80fd\u81ea\u52a8\u6b63\u786e\u8c03\u7528\u5bf9\u8c61\u6240\u5c5e\u7684\u7c7b\u4e2d\u5bf9\u8fd9\u4e2a\u51fd\u6570\u7684\u5b9a\u4e49\u3002\u00a0 B\u4e0d\u6b63\u786e", "5.\u7c7bmyclass\uff0c\u4e3amyclass\u7c7b\u5bf9\u8c61\u4ee5\u6210\u5458\u51fd\u6570\u5f62\u5f0f\u91cd\u8f7d\u540e++\u8fd0\u7b97\u7b26\u7684\u58f0\u660e\u5e94\u8be5\u4e3a C myclass operator++( int );", "\nA. myclass operator++();", "\nB. myclass& operator++();", "\nC. D. myclass& operator++( int );", "\n5. \u7236\u7c7b\u548c\u5b50\u7c7b\u5404\u81ea\u5b9a\u4e49\u4e00\u4e2a\u6210\u5458\u51fd\u6570\uff0c\u51fd\u6570\u540d\u76f8\u540c\uff0c\u53c2\u6570\u8868\u4e0d\u540c\uff0c\u90a3\u4e48 C\u5b50\u7c7b\u4e2d\u7684\u51fd\u6570\u4f1a\u8986\u76d6\u7236\u7c7b\u4e2d\u7684\u51fd\u6570\u3002 \u51fd\u6570\u540c\u540d,\u901a\u901a\u8986\u76d6,\u4e0d\u540c\u5c42\u6b21\u7684\u51fd\u6570\u4e0d\u80fd\u91cd\u8f7d", "\n6. \u5982\u679cmyclass\u7c7b\u5b9a\u4e49\u4e86\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u4e00\u4e2a\u6574\u578b\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\uff0c\u8fd8\u91cd\u8f7d\u4e86\u8d4b\u503c\u8fd0\u7b97\u7b26\uff0c\u90a3\u4e48\u8bed\u53e5", "\nmyclass obj = 100\uff1b\u4f1a B\u8c03\u7528\u6574\u578b\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\u3002\u7b49\u4ef7\u4e8e myclass obj = myclass(100)", "7. \u62bd\u8c61\u7c7b\u6307\u7684\u662f D\u6709\u7eaf\u865a\u51fd\u6570\u7684\u7c7b", "\n8. \u591a\u91cd\u7ee7\u627f\u65f6\uff0c\u5982\u679c\u6d3e\u751f\u7c7b\u7684\u4e24\u4e2a\u7236\u7c7b\u6709\u4e00\u4e2a\u5171\u540c\u7684\u865a\u57fa\u7c7b\uff0c\u90a3\u4e48\u865a\u57fa\u7c7b\u7684\u521d\u59cb\u5316\u53c2\u6570\u7531 C\u6d3e\u751f\u7c7b", "\n\u7684\u6784\u9020\u51fd\u6570\u6765\u4f20\u9012\u3002", "9. \u591a\u6001\u6027\u662f\u901a\u8fc7 C\u865a\u51fd\u6570 \u5b9e\u73b0\u7684\u3002", "\n10. \u5982\u679c\u6709\u5982\u4e0b\u8bed\u53e5", "\nchar str[20];", "\ncin >> str;", "\ncout << str;", "\n\u6267\u884c\u65f6\u8f93\u5165\u7684\u662f\u201cthis is a test line!\u201d\uff0c\u5219\u8f93\u51fa\u7684\u5185\u5bb9\u662f D \u3002", "\nA. this is a test line!", "\nB. this is a test line", "\nC. this is a test", "\nD. this", "11. \u6267\u884c\u8bed\u53e5", "\nchar ch[] = \u201cHello\u201d;", "\nchar * p = &ch[0];", "\ncout << p;", "\n\u7ed3\u679c\u662f\u8f93\u51fa C \u3002Hello", "18.\u4ee5\u4e0b\u751f\u9762\u662f\u5426\u6b63\u786e\uff1f", "\nClass A{\u00a0const int size=0;};", "\n\u7b54\u6848\uff1a\u5e38\u91cf\u5fc5\u987b\u5728\u6784\u9020\u51fd\u6570\u7684\u521d\u59cb\u5316\u5217\u8868\u91cc\u9762\u521d\u59cb\u5316\u6216\u8005\u5c06\u5176\u8bbe\u7f6e\u4e3astatic", "\n\u6b63\u786e\u7684\u7a0b\u5e8f\u5982\u4e0b\uff1a", "\nClass A", "\n{ A(){ const int size=0; }};", "\n\u6216\u8005\uff1a", "\nClass A", "\n{ static const int size=0; };"], "title": "C\u548cC++\u7ecf\u5178\u7b14\u8bd5\u9898\u9644\u7b54\u6848\u89e3\u6790"},
{"contents": ["1\u3002\u5c06\u4e00\u4e2aN\u8fdb\u5236\u6570\u8f6c\u6362\u6210M\u8fdb\u5236\u6570", "\n2\u3002\u627e\u51fa32\u4f4d\u6570\u4e2d\u662f\u56de\u6587\u6570\uff0c\u4e14\u5176\u5f00\u65b9\u4e3a\u6574\u6570\u7684\u6570", "\n3\u3002\u5c06\u67d0\u4e2a\u6587\u4ef6\u4ece\u4e00\u4e2a\u76ee\u5f55\u62f7\u8d1d\u5230\u53e6\u4e00\u4e2a\u76ee\u5f55\u4e0b\uff08\u4e0d\u80fd\u7528C/C++\u4e2d\u7684\u51fd\u6570\u6216\u7c7b\uff09", "\nOpen", "\nRead", "\nCreate", "\nWrite", "\nClose", "\n\u8fd8\u6709\u4e00\u4e2aC++\u7684\u6539\u9519\u9898\uff0c\u5dee\u4e0d\u591a100\u884c\u7684\u6837\u5b50", "\n3\u4e2aWIN32\u7684\u6c47\u7f16\u9898\uff0c\u4e0d\u77e5\u6240\u4e91", "\n\u4e24\u4e2a\u5c0f\u65f6\u5b8c\u6210", "\n\u7f16\u7a0b\u9898\u8981\u6c42\u63d0\u4f9b\u4ee3\u7801\u548c\u7f16\u7a0b\u601d\u8def\uff0c\u65f6\u95f4\u4f18\u5316\u7b56\u7565"], "title": "Kingsoft\u7b14\u8bd5\u9898-Kingsoft\u91d1\u5c71\u516c\u53f8C/C++\u7b14\u8bd5\u9898"},
{"contents": ["\u8bf7\u7f16\u5199\u51fd\u6570char *fun(char *str),\u5b83\u7684\u529f\u80fd\u662f\u5c06\u5b57\u7b26\u4e32str\u9664\u9996\u5c3e\u5b57\u7b26\u5916\u7684\u5176\u4ed6\u5b57\u7b26\u6309\u5347\u5e8f\u6392\u5217\u3002\u4f8b\u5982\uff0c\u8f93\u5165\u201cstring\u201d\uff0c\u8f93\u51fa\u4e3a\u201dstring \u201d.", "\u89e3\uff1a #include<conio.h>", "#include<stdio.h>", "#include<string.h>", "char *fun(char *str)", "{ char *p=str+1,t;", "int len=strlen(p)-1;", "int k, m, min=0;", "for(k=0;k<len;k++)", "{ min=k;", "for(m=k+1;m<len;m++)", "if(p[min]>p[m])", "min=m;", "if(min!=k)", "{t=p[min];", "p[min]=p[k];", "p[k]=t;", "}", "}", "return str;", "}", "void main()", "{ char s[128];", "clrscr();", "printf(\u201c\\nPlease enter a string:\\n\u201d);", "gets(s);", "printf(\u201c\\nThe string after changing is:\\n%s\\n\u201d,fun(s);"], "title": "\u5b57\u7b26\u4e32str\u9664\u9996\u5c3e\u5b57\u7b26\u5916\u7684\u5176\u4ed6\u5b57\u7b26\u6309\u5347\u5e8f\u6392\u5217"},
{"contents": ["\u5df2\u77e5\u6587\u4ef6\u4e2d\u5b58\u6709\u5e93\u5b58\u4ea7\u54c1\u7684\u8bb0\u5f55\uff0c\u8be5\u8bb0\u5f55\u7531\u4ea7\u54c1\u4ee3\u7801\u3001\u4ea7\u54c1\u540d\u79f0\u3001\u5355\u4ef7\u3001\u6570\u91cf\u7b49\u57df\u7ec4\u6210\uff0c\u8bbe\u8be5\u6587\u4ef6\u4e2d\u7684\u5185\u5bb9\u662f\u6309\u4ea7\u54c1\u4ee3\u7801\u7531\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u5b58\u50a8\uff08\u4ea7\u54c1\u4ee3\u7801\u75311001-1010\u4e2d\u95f4\u65e0\u7f3a\u8d27\uff09\u3002\u8bd5\u7f16\u7a0b\u5b9e\u73b0\u5f53\u8f93\u5165\u67d0\u4ea7\u54c1\u4ee3\u7801\u5219\u6253\u5370\u51fa\u8be5\u4ea7\u54c1\u8bb0\u5f55\u7684\u529f\u80fd\u3002", "\u89e3\uff1a \u00a0 #include <stdio.h>", "struct product{ \u00a0int type;", "char name[10];", "double price;", "int \u00a0number;};", "main()", "{", "FILE \u00a0*fp;", "struct \u00a0product p;", "int size;", "int t;", "long int i;", "size=sizeof(struct product);", "printf(\u201cinput the type(from 1001 to 1010):\u201d);", "scanf(\u201c%d\u201d,&t);", "if((fp=fopen(\u201cproduct\u201d,\u201drb\u201d))==NULL)", "{", "printf(\u201ccannot open the file!\u201d);", "exit(0);", "}", "i=(t-1000)*size;", "fseek(fp,i,0);", "fread(&p,size,1,fp);", "printf(\u201c%d %s %f %d\\n\u201d,p.type,p.name,p.price,p.number);", "fclose(fp);", "}"], "title": "\u7f16\u7a0b\u5b9e\u73b0\u5f53\u8f93\u5165\u67d0\u4ea7\u54c1\u4ee3\u7801\u5219\u6253\u5370\u51fa\u8be5\u4ea7\u54c1\u8bb0\u5f55\u7684\u529f\u80fd"},
{"contents": ["\u89e3\uff1a \u00a0#include <stdio.h>", "void findmax(int *s, int t,int *k)", "{ int p;", "for(p=0,*k=p;p<t;p++)", "if(s[p]>s[*k])", "*k=p;", "}", "void main()", "{int a[10],i, k;", "for(i=0;i<10;i++)", "scanf(\u201c%d\u201d,a++);", "findmax(a, 10, &k);", "printf(\u201c%d, %d\u201d,k,a[k]);", "}"], "title": "\u4e0b\u8ff0\u7a0b\u5e8f\u7684\u4f5c\u7528\u662f\u8ba1\u7b97\u673a\u6570\u7ec4\u4e2d\u7684\u6700\u5927\u5143\u7d20\u503c\u53ca\u5176\u4e0b\u6807\u3002"},
{"contents": ["\u5df2\u77e5\u6587\u4ef6\u4e2d\u5b58\u670910 \u4e2a\u5b66\u751f\u7684\u6570\u5b66\u3001\u653f\u6cbb\u3001\u548c\u82f1\u8bed\u4e09\u95e8\u8bfe\u7684\u6210\u7ee9\uff0c\u8bd5\u7edf\u8ba1\u6bcf\u4e00\u5b66\u751f\u7684\u5e73\u5747\u6210\u7ee9\uff0c\u5e76\u5b58\u5165\u8be5\u6587\u4ef6\u4e2d\u3002", "\u89e3\uff1a \u00a0 #include <stdio.h>", "struct student{ \u00a0int number;", "char cname[10];", "int shuxue;", "int zhengzhi;", "int yingyu;", "double ave;};", "main()", "{", "FILE \u00a0 *fp;", "struct student s[10];", "int size;", "int i;", "size=sizeof(struct student);", "if((fp=fopen(\u201cstudent\u201d,\u201dab+\u201d))==NULL)", "{", "printf(\u201ccannot open the file!\u201d);", "exit(0);", "}", "for(i=0;i<10;i++)", "{", "fread(&s[i],size,1,fp);", "s[i].ave=(s[i].shuxue+s[i].zhengzhi+s[i].yingyu)/3;", "}", "rewind(fp);", "for(i=0;i<10;i++)", "fwrite(&s[i],size,i,fp);", "fclose(fp);", "}"], "title": "\u7edf\u8ba1\u6bcf\u4e00\u5b66\u751f\u7684\u5e73\u5747\u6210\u7ee9"},
{"contents": ["\u89e3\uff1a \u00a0 #include <stdio.h>", "main()", "{", "unsigned a,b,c,result,add;", "int i;", "c=1;", "result=0;", "add=0;", "printf(\u201cinput a:\u201d);", "scanf(\u201c%0\u201d,&a);", "printf(\u201cinput b:\u201d);", "scanf(\u201c%o\u201d,&b);", "for(i=0;i<16;i++)", "{", "result=result|((a&(c<<i))\u02c6(b&(c<<i))\u02c6add);", "add=(((a&(c<<i))\u02c6(b&(c<<i)))\u02c6((a&(c<<i))|(b&(c<<i))))<<1;", "}", "printf(\u201c%0\\n\u201d,result);", "}"], "title": "\u5229\u7528\u5f02\u6216\u8fd0\u7b97\u5b9e\u73b0\u4e24\u4e2a\u65e0\u7b26\u53f7\u6570\u7684\u52a0\u6cd5\u8fd0\u7b97\u3002"},
{"contents": ["\u89e3\uff1a \u00a0 #include <stdio.h>", "main()", "#define m 20", "{", "char str1[m];", "int i;", "FILE \u00a0*fp1;", "if((fp1=fopen(\u201cfile2.c\u201d,\u201dr\u201d))==NULL)", "{", "printf(\u201ccannot open the file\\n\u201d);", "exit(0);", "}", "i=0;", "While(!feof(fp1))", "{", "strl[i]=fgetc(fp1);", "i++;", "}", "while(i!=0)", "{", "i\u2013;", "Putchar(str1[i]);", "}", "fclose(fp1);", "}"], "title": "\u5c06\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\u7684\u5185\u5bb9\u6309\u5012\u5e8f\u6253\u5370\u51fa\u6765"},
{"contents": ["\u89e3\uff1a\u00a0\u00a0\u00a0 #include <stdio.h>", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 main()", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int n;", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201cinput n:\u201d);", "\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0scanf(\u201c%d\u201d,&n);", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 n=n&(\u223d(\u223d0<<7))<<5;", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c%d\\n\u201d,n);", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 };"], "title": "\u5c06\u4e00\u4e2a\u6570\u7684\u4ece\u7b2c5\u4f4d\u5f00\u59cb\u76847\u4e2a\u6570\u53d6\u51fa\uff0c\u5176\u4f59\u4f4d\u7f6e0\u3002"},
{"contents": ["\u89e3\uff1a \u00a0#include <stdio.h>", "main()", "{", "unsigned a,b,c;", "int n;", "printf(\u201cinput a:\u201d);", "scanf(\u201c%o\u201d,&a);", "printf(\u201cinput n:\u201d);", "scanf(\u201c%d\u201d,&n);", "b=a<<(16-n);", "c=a>>n;", "a=b|c;", "printf(\u201c%o\\n\u201d,a);", "}"], "title": "\u5b9e\u73b0\u5411\u53f3\u5faa\u73af\u79fb\u4f4d"},
{"contents": ["\u89e3\uff1a\u00a0\u00a0 struct example *reverse(head)", "\nstruct example\u00a0 *head;", "\n{", "\n\u00a0 struct example p1,p2;", "\n\u00a0 p1=(struct example *)malloc(size);", "\n\u00a0 p1->key=head->key;", "\n\u00a0 p1->next=NULL;", "\n\u00a0 while(head->next!=NULL)", "\n\u00a0 {", "\n\u00a0\u00a0\u00a0 p2=head->next;", "\n\u00a0\u00a0\u00a0 head->next=(head->next)->next;", "\n\u00a0\u00a0\u00a0 p2->next=p1->next;", "\n\u00a0\u00a0\u00a0 p1->next=p2;", "\n\u00a0\u00a0 }", "\n\u00a0\u00a0 head=p1;", "\n\u00a0 return(head);", "\n}"], "title": "\u7f16\u5199\u4e00\u5b50\u7a0b\u5e8f\uff0c\u5c06\u4e00\u94fe\u8868\u5012\u5e8f\uff0c\u5373\u4f7f\u94fe\u8868\u8868\u5c3e\u53d8\u8868\u5934\uff0c\u8868\u5934\u53d8\u8868\u5c3e\u3002"},
{"contents": ["\u89e3\uff1a\u00a0\u00a0 #include\u00a0 <stdio.h>", "\n#include\u00a0 <math.h>", "\nstruct fenshu", "\n{", "\n\u00a0\u00a0 int fz;", "\n\u00a0\u00a0 int fm;", "\n\u00a0 };", "\n\u00a0 main()", "\n\u00a0 {", "\n\u00a0\u00a0\u00a0 int I;", "\n\u00a0\u00a0\u00a0 struct fenshu f1,f2,result;", "\n\u00a0\u00a0\u00a0 printf(\u201cinput f1.fz:\u201d);", "\n\u00a0\u00a0\u00a0 scanf(\u201c%d\u201d,&f1.fz);", "\n\u00a0\u00a0\u00a0 printf(\u201cinput f1.fm:\u201d);", "\n\u00a0\u00a0\u00a0 scanf(\u201c%d\u201d,&f1.fm);", "\n\u00a0\u00a0\u00a0 printf(\u201cinput f2.fz:\u201d);", "\n\u00a0\u00a0\u00a0 scanf(\u201cinput f2.fz);", "\n\u00a0\u00a0\u00a0 printf(\u201cinput f2.fm:\u201d);", "\n\u00a0\u00a0\u00a0 scanf(\u201c%d\u201d,&f2.fm);", "\n\u00a0\u00a0\u00a0 result.fm=f1.fm*f2.fm;", "\n\u00a0\u00a0\u00a0 result.fz=f1.fz*f2.fm+f1.fm*f2.fz;", "\n\u00a0\u00a0\u00a0 I=result.fz;", "\n\u00a0\u00a0\u00a0 While((result.fz%i)||(result.fm%i))", "\n\u00a0\u00a0\u00a0\u00a0 i\u2013;", "\n\u00a0\u00a0\u00a0\u00a0 result.fm=result.fm/i;", "\n\u00a0\u00a0\u00a0\u00a0 result.fz=result.fz/i;", "\n\u00a0\u00a0\u00a0\u00a0 printf(\u201cresult.fz is:%d\u201d,result.fz);", "\n\u00a0\u00a0\u00a0\u00a0 printf(\u201cresult.fm is:%d\u201d,result.fm);", "\n\u00a0}"], "title": "\u5b9a\u4e49\u4e00\u7ed3\u6784\u4f53\u6570\u7ec4\u8868\u793a\u5206\u6570\uff0c\u5e76\u6c42\u4e24\u4e2a\u5206\u6570\u76f8\u52a0\u4e4b\u548c\u3002"},
{"contents": ["\u89e3\uff1a\u00a0\u00a0 #include <stdio.h>", "#include <math.h>", "\u00a0struct point", "{", "\u00a0\u00a0 float x;", "\u00a0\u00a0 float y;", "\u00a0};", "\u00a0main()", "{\u00a0\u00a0 float dis;", "\u00a0 struct point pt1,pt2;", "\u00a0 printf(\u201cinput point1.x:\u201d);", "\u00a0 scanf(\u201c%f\u201d,&pt1.x);", "\u00a0 printf(\u201cinput point1.y:\u201d);", "\u00a0 scanf(\u201c%f\u201d,&pt1.y);", "\u00a0 printf(\u201cinput point2.x:\u201d);", "scanf(\u201c%f\u201d,&pt2.x);", "printf(\u201cinput point2.y:\u201d);", "scanf(\u201c%f\u201d,&pt2.y);", "dis=sqrt((pt1.x-pt2.x)*(pt1.x-pt2.x)+(pt1.y-pt2.y)*(pt1.y-pt2.y));", "printf(\u201cThe distance of the two points is:%f\u201d,dis);", "}"], "title": "\u5b9a\u4e49\u4e00\u7ed3\u6784\u4f53\u53d8\u91cf\uff0c\u7528\u5176\u8868\u793a\u70b9\u5750\u6807\uff0c\u5e76\u8f93\u5165\u4e24\u70b9\u5750\u6807\uff0c\u6c42\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002"},
{"contents": ["\u89e3\uff1a\u00a0\u00a0 #include <stdio.h>", "\nmain()", "\n#define f(x) (2*(x) * (x)+6*(x)-6)", "\n{", "\n\u00a0 float f1,x;", "\nx=-1.4;", "\n\u00a0f1=f(x);", "\n\u00a0f1=f(f1);", "\n\u00a0printf(\u201c%f\\n\u201d,f1);", "\n}"], "title": "\u8ba1\u7b97s=f(f(-1.4))\u7684\u503c"},
{"contents": ["\u89e3\uff1a\u00a0\u00a0 #include <stdio.h>", "\n#include <math.h>", "\n#define max 100", "\nstruct queue", "\n{", "\n\u00a0\u00a0\u00a0 int qdata[max];", "\n\u00a0\u00a0\u00a0 int head,tail;", "\n\u00a0 }*q;", "\n\u00a0 int en(item,pq)", "\n\u00a0 struct queue *pq;", "\n\u00a0 int item;", "\n\u00a0 {", "\n\u00a0\u00a0\u00a0 if(((pq->tail+1)%max)==pq->head)", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return 0;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 else", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 pq->tail=(pq->tail+1)%max;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 pq->qdata[pq->tail]=item;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return 1;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 main()", "\n\u00a0\u00a0\u00a0\u00a0 {", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int i,j;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 q->head=max-1;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 q->tail=max-1;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201cinput item:\u201d);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 scanf(\u201c%d\u201d,&i);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 while(i!=0)", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 j=en(i,q);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(j==1)\u00a0\u00a0 printf(\u201cok\\n\u201d);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 else\u00a0 printf(\u201cwrong\\n\u201d);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201cinput item:\u201d);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 scanf(\u201c%d\u201d,&i);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 };", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 i=q->head;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 While(i!=q->tail)", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 i=(++i)%max;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Printf(\u201c%d\\n\u201d,q->qdata[i]);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0 }"], "title": "\u5229\u7528\u6307\u9488\u53d8\u91cf\u5b9e\u73b0\u961f\u5217\u7684\u5165\u961f\u64cd\u4f5c\u3002"},
{"contents": ["\u89e3\uff1a\u00a0\u00a0 #include <stdio.h>", "\n#include <math.h>", "\nmain()", "\n#define s1(a,b) ((a) *(b))", "\n#define s(c) sqrt(c )", "\n{", "\n\u00a0 float result;", "\n\u00a0 int n1,n2;", "\n\u00a0 scanf(\u201c%d\u201d,%n1);", "\n\u00a0 scanf(\u201c%d\u201d,&n2);", "\n\u00a0 result=s1(n1,n2);", "\n\u00a0 result=s(result);", "\nprintf(\u201c%f\\n\u201d,result);", "\n}"], "title": "\u8ba1\u7b97 s=(x*y)1/2\uff0c\u7528\u4e24\u4e2a\u5b8f\u5b9a\u4e49\u6765\u5b9e\u73b0\u3002"},
{"contents": ["\u7528\u4e0b\u9762\u7684\u516c\u5f0f\u6c42\u220f\u7684\u8fd1\u4f3c\u503c\uff0c\u76f4\u5230\u6700\u540e\u4e00\u9879\u7684\u7edd\u5bf9\u503c\u5c0f\u4e8e\u6307\u5b9a\u7684\u6570\uff08\u8be5\u6570\u7531\u5b8f\u5b9a\u4e49\u786e\u5b9a\uff09", "\n\u220f/4\u22481-1/3+1/5=1/7+\u2026", "\n\u89e3\uff1a #include\u00a0 <stdio.h>", "\nmain()", "\n#define abs l3-7", "\n{ int sing;", "\n\u00a0float pu\\i,x;", "\npi=1;", "\nx=3;", "\nsing=-1;", "\ndo", "\n\u00a0 {", "\n\u00a0\u00a0\u00a0 pi=pi+sing/x;", "\n\u00a0\u00a0\u00a0 x+=2;", "\n\u00a0\u00a0\u00a0 sing=-1*sing;", "\n\u00a0 }", "\nwhile((1/x-0)>abs);", "\n\u00a0pi=pi*4;", "\nprintf(\u201c%f\\n\u201d,pi);", "\n}"], "title": "\u6c42\u220f\u7684\u8fd1\u4f3c\u503c\uff0c\u76f4\u5230\u6700\u540e\u4e00\u9879\u7684\u7edd\u5bf9\u503c\u5c0f\u4e8e\u6307\u5b9a\u7684\u6570"},
{"contents": ["\u89e3\uff1a\u00a0 #include <stdio.h>", "main()", "#define product(a,b) (a*b)", "#define divide(a,b)\u00a0 (a/b)", "{", "\u00a0 float result,n1,n2;", "\u00a0 printf(\u201cinput n1:\u201d);", "\u00a0 scanf(\u201c%f\u201d,&n1);", "printf(\u201cinput n2:\u201d);", "scanf(\u201c%f\u201d,&n2);", "result=product(n1,n2);", "printf(\u201c%f\\n\u201d,result);", "result=divide(n1,n2);", "printf(\u201c%f/n\u201d,result);", "}"], "title": "\u6c42\u4e24\u4e2a\u6570\u7684\u4e58\u79ef\u548c\u5546\u6570\uff0c\u8be5\u4f5c\u7528\u7531\u5b8f\u5b9a\u4e49\u6765\u5b9e\u73b0\u3002"},
{"contents": ["\u89e3\uff1a #include\u00a0 <math.h>", "\n\u00a0\u00a0\u00a0\u00a0 main()", "\n{\u00a0 float integral(float(8p)(float),float a,float b,int n);", "\n\u00a0 float a1,b1,a2,b2,a3,b3,c,(*p)(float);", "\n\u00a0 float fsin(float);", "\n\u00a0 float fcos(float);", "\n\u00a0 float fexp(float);", "\n\u00a0int n=20;", "\n\u00a0 printf(\u201cInput a1,b1:\u201d);", "\n\u00a0 scanf(\u201c%f,%f\u201d,&a1,&b2);", "\n\u00a0 printf(\u201cInput a2,b2:\u201d);", "\n\u00a0 scanf(\u201c%f,%f\u201d,&a2,&b2);", "\n\u00a0 printf(\u201cInput a3,b3:\u201d);", "\n\u00a0 scanf(\u201c%f,%f\u201d,&a3,b3);", "\n\u00a0 p=fsin;", "\n\u00a0 c=integral(p,a1,b1,n);", "\n\u00a0 printf(\u201cThe integral of sin(x) is:%f\\n\u201d,c);", "\n\u00a0 p=fcos;", "\n\u00a0 c=integral(p,a2,b2,n);", "\n\u00a0 printf(\u201cThe integral of cos(x) is :%f\\n\u201d,c);", "\n\u00a0 c=integral(p,a3,b3,n);", "\n\u00a0 printf(\u201cThe integral of sin(x) is :%f\\n\u201d,c);", "\n}", "\n\u00a0 float integral(float\u00a0 (*p)(float),float a,float b,int n)", "\n\u00a0 {", "\n\u00a0\u00a0\u00a0 int i;", "\n\u00a0\u00a0 floatx,h,s;", "\n\u00a0\u00a0 h=(b-a)/n;", "\n\u00a0\u00a0 x=a;", "\n\u00a0\u00a0 s=0;", "\n\u00a0\u00a0 for(i=1;i<=n;i++)", "\n\u00a0\u00a0\u00a0\u00a0 {x=x+h;", "\n\u00a0\u00a0\u00a0\u00a0 s=s+(*p)(x)*h;", "\n\u00a0\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0\u00a0 return(s);", "\n\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0 float fsin(float x)", "\n\u00a0\u00a0\u00a0\u00a0 {return sin(x);}", "\n\u00a0\u00a0\u00a0 float fcos(float x)", "\n\u00a0\u00a0\u00a0\u00a0 {return cos(x);}", "\n\u00a0\u00a0\u00a0 float fexp(float x)", "\n\u00a0\u00a0\u00a0\u00a0 {return exp(x);}"], "title": "\u5199\u4e00\u4e2a\u7528\u77e9\u5f62\u6cd5\u6c42\u5b9a\u79ef\u5206\u7684\u901a\u7528\u51fd\u6570\uff0c\u5206\u522b\u6c42\uff1a"},
{"contents": ["\u89e3\uff1a main()", "\u00a0\u00a0\u00a0\u00a0 {\u00a0\u00a0 int\u00a0 i,n;", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 char *p,num[20];", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201cinput n:\u201d);", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 scanf(\u201c%d\u201d,&n);", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201cPlease input these number:\\n\u201d);", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(i=0,i<nli++)", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 scanf(\u201c%d\u201d,&num[i]);", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 p=&num[0];", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 sort(p,n);", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201cNow, the sequence is:\\n\u201d);", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(i=0;i<n;i++)", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c%d \u00a0\u201d,num[i]);", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 sort(char p,int m)", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {int i;", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0char temp,*p1,*p2;", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(i=0;i<m/2;i++)", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {p1=p+i;", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 p2=p1+(m-1-i);", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 temp=*p1;", "*p1=*p2;", "*p2=temp;", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }"], "title": "\u5c06n\u4e2a\u6570\u6309\u8f93\u5165\u987a\u5e8f\u7684\u9006\u5e8f\u6392\u5217\uff0c\u7528\u51fd\u6570\u5b9e\u73b0\u3002"},
{"contents": ["\u89e3\uff1a\u00a0 main()", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 {", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int a[3][3],*p,i;", "\nprintf(\u201cInput matrix:\\n\u201d);", "\nfor(i=0;i<3;i++)", "\n\u00a0scanf(\u201c%d%d%d\u201d,&a[i][0],&a[i][1],&a[i][2]);", "\n\u00a0p=&a[0][0];", "\nmove(p);", "\nprintf(\u201cNow,matrix:\\n\u201d);", "\n\u00a0for(i=0;i<<<<3;i++)", "\n\u00a0 printf(\u201c%d%d%d\\n\u201d,a[i][0],a[i][0],a[i][2]);", "\n}", "\nmove(int *pointer)", "\n{ int i,j,t;", "\n\u00a0 for(i=0;i<3;i++)", "\n\u00a0 fpr(j=1;j<3;j++)", "\n\u00a0\u00a0 {t=*(pointer+3*i+j);", "\n\u00a0\u00a0\u00a0 *(pointer+3*i+j)=*(pointer+3*j+i);", "\n\u00a0\u00a0\u00a0\u00a0 *(pointer+3*j+i)=t;", "\n}", "\n}"], "title": "\u7f16\u5199\u51fd\u6570\uff0c\u5c06\u4e00\u4e2a3*3\u77e9\u9635\u8f6c\u7f6e"},
{"contents": ["\u89e3\uff1a\u00a0\u00a0 #include <stdio.h>", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 main()", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 { int upper=0.lower=0,digit=0,space=0,other=0,i=0;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 char *p,s[20];", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201cInput string:\u201d);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 while ((s[i]=getcher())!=\u2019\\n\u2019) i++;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 p=&s[0];", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 while(*p!=\u2019\\n\u2019)", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 { if((\u2018A\u2019<=*p)&&(8p<=\u2019Z\u2019))", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ++upper;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 else if((\u2018a\u2019<=*p)&&(*p<=\u201dz\u2019))", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ++lower;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 else if(8p= =\u2019\u2019)", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ++space;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 else if((*p<=\u20199\u2019)&&(*p>=\u20190\u2019))", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ++dight;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 else", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ++other;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 p++;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201cupper case:%d lower case:%d\u201d,upper,lower);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201cspace:%d\\ndigit:%d\\nother:%d\\n\u201d,space,digit,other);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }"], "title": "\u8f93\u5165\u4e00\u884c\u6587\u5b57\uff0c\u627e\u51fa\u5176\u4e2d\u5927\u5199\u5b57\u6bcd\u3001\u5c0f\u5199\u5b57\u6bcd\u3001\u7a7a\u683c\u3001\u6570\u5b57\u3001\u53ca\u5176\u4ed6\u5b57\u7b26\u5404\u6709\u591a\u5c11\u3002"},
{"contents": ["\u5df2\u77e5\u7c7bString\u7684\u539f\u578b\u4e3a\uff1a", "\n\u00a0class String", "\n\u00a0{", "\n\u00a0\u00a0 public:", "\n\u00a0\u00a0String(const char *str = NULL);\u00a0// \u666e\u901a\u6784\u9020\u51fd\u6570", "\n\u00a0\u00a0String(const String &other);\u00a0\u00a0\u00a0\u00a0 // \u62f7\u8d1d\u6784\u9020\u51fd\u6570", "\n\u00a0\u00a0~ String(void);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // \u6790\u6784\u51fd\u6570", "\n\u00a0\u00a0String & operate =(const String &other);\u00a0// \u8d4b\u503c\u51fd\u6570", "\n\u00a0\u00a0 private:", "\n\u00a0\u00a0char\u00a0 \u00a0*m_data;\u00a0\u00a0\u00a0\u00a0// \u7528\u4e8e\u4fdd\u5b58\u5b57\u7b26\u4e32", "\n\u00a0};", "\n\u00a0\u8bf7\u7f16\u5199String\u7684\u4e0a\u8ff04\u4e2a\u51fd\u6570\u3002", "\n\u6807\u51c6\u7b54\u6848\uff1a", "// String\u7684\u6790\u6784\u51fd\u6570", "\n\u00a0String::~String(void)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // 3\u5206", "\n{", "\n\u00a0delete [] m_data;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0", "\n// \u7531\u4e8em_data\u662f\u5185\u90e8\u6570\u636e\u7c7b\u578b\uff0c\u4e5f\u53ef\u4ee5\u5199\u6210 delete m_data;", "\n\u00a0}", "\u00a0// String\u7684\u666e\u901a\u6784\u9020\u51fd\u6570\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0", "\n\u00a0String::String(const char *str)\u00a0\u00a0\u00a0\u00a0\u00a0 // 6\u5206", "\n{", "\n\u00a0if(str==NULL)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0", "\n\u00a0{", "\n\u00a0\u00a0m_data = new char[1];\u00a0\u00a0\u00a0 // \u82e5\u80fd\u52a0 NULL \u5224\u65ad\u5219\u66f4\u597d", "\n\u00a0\u00a0*m_data = \u2018\\0\u2019;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0", "\n\u00a0}\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0", "\n\u00a0else", "\n\u00a0{", "\n\u00a0\u00a0int length = strlen(str);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0", "\n\u00a0\u00a0m_data = new char[length+1];\u00a0 // \u82e5\u80fd\u52a0 NULL \u5224\u65ad\u5219\u66f4\u597d\u00a0\u00a0\u00a0\u00a0\u00a0", "\n\u00a0\u00a0strcpy(m_data, str);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0", "\n\u00a0}", "\n}\u00a0", "\n// \u62f7\u8d1d\u6784\u9020\u51fd\u6570", "\n\u00a0String::String(const String &other)\u00a0\u00a0 // 3\u5206", "\n\u00a0{\u00a0", "\n\u00a0int length = strlen(other.m_data);\u00a0", "\n\u00a0m_data = new char[length+1];\u00a0\u00a0\u00a0\u00a0\u00a0 // \u82e5\u80fd\u52a0 NULL \u5224\u65ad\u5219\u66f4\u597d\u00a0\u00a0\u00a0", "\n\u00a0strcpy(m_data, other.m_data);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0", "\n}", "\n// \u8d4b\u503c\u51fd\u6570", "\n\u00a0String & String::operate =(const String &other)\u00a0\u00a0\u00a0 // 13\u5206", "\n\u00a0{\u00a0", "\n\u00a0\u00a0// (1) \u68c0\u67e5\u81ea\u8d4b\u503c\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // 4\u5206", "\n\u00a0\u00a0if(this == &other)", "\n\u00a0\u00a0\u00a0return *this;", "\n\u00a0", "\n// (2) \u91ca\u653e\u539f\u6709\u7684\u5185\u5b58\u8d44\u6e90\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // 3\u5206", "\n\u00a0\u00a0delete [] m_data;", "\n\u00a0\u00a0", "\n\u00a0\u00a0// \uff083\uff09\u5206\u914d\u65b0\u7684\u5185\u5b58\u8d44\u6e90\uff0c\u5e76\u590d\u5236\u5185\u5bb9 // 3\u5206", "\n\u00a0int length = strlen(other.m_data);\u00a0", "\n\u00a0m_data = new char[length+1];\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // \u82e5\u80fd\u52a0 NULL \u5224\u65ad\u5219\u66f4\u597d", "\n\u00a0\u00a0strcpy(m_data, other.m_data);", "\n\u00a0\u00a0", "\n\u00a0\u00a0// \uff084\uff09\u8fd4\u56de\u672c\u5bf9\u8c61\u7684\u5f15\u7528\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // 3\u5206", "\n\u00a0\u00a0return *this;", "\n}"], "title": "\u7f16\u5199\u7c7bString\u7684\u6784\u9020\u51fd\u6570\u3001\u6790\u6784\u51fd\u6570\u548c\u8d4b\u503c\u51fd\u6570"},
{"contents": ["\u89e3\uff1a\u00a0 main()", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 { int len ;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 char *str[20];", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201cTnput string:\u201d);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 scanf(\u201c%s\u201d,str);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 len-length(str);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201cThe length of string is %d.\u201d,len);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Length(char *p)", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {int n;", "\nn=0;", "\nwhile(*p!=\u2019\\0\u2019)", "\n\u00a0 {n++;", "\n\u00a0\u00a0 P++;", "\n\u00a0\u00a0 }", "\n\u00a0Return(n);", "\n}"], "title": "\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u6c42\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002\u5728main\u51fd\u6570\u4e2d\u8f93\u5165\u5b57\u7b26\u4e32\uff0c\u5e76\u8f93\u51fa\u5176\u957f\u5ea6\u3002"},
{"contents": ["\u5bf9\u4e8e\u6ca1\u6709\u521d\u59cb\u5316\u7684\u53d8\u91cf\u7684\u521d\u59cb\u503c\u53ef\u4ee5\u4f5c\u600e\u6837\u7684\u5047\u5b9a\uff1f\u5982\u679c\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u521d\u59cb\u503c\u4e3a\u201c\u96f6\u201d, \u5b83\u53ef\u5426\u4f5c\u4e3a\u7a7a\u6307\u9488\u6216\u6d6e\u70b9\u96f6\uff1f", "\n\u5177\u6709\u201c\u9759\u6001\u201d \u751f\u5b58\u671f\u7684\u672a\u521d\u59cb\u5316\u53d8\u91cf(\u5373, \u5728\u51fd\u6570\u5916\u58f0\u660e\u7684\u53d8\u91cf\u548c\u6709\u9759\u6001\u5b58\u50a8\u7c7b\u578b\u7684\u53d8\u91cf) \u53ef\u4ee5\u786e\u4fdd\u521d\u59cb\u503c\u4e3a\u96f6, \u5c31\u50cf\u7a0b\u5e8f\u5458\u952e\u5165\u4e86\u201c=0\u201d \u4e00\u6837\u3002\u56e0\u6b64, \u8fd9\u4e9b\u53d8\u91cf\u5982\u679c\u662f\u6307\u9488\u4f1a\u88ab\u521d\u59cb\u5316\u4e3a\u6b63\u786e\u7684\u7a7a\u6307\u9488, \u5982\u679c\u662f\u6d6e\u70b9\u6570\u4f1a\u88ab\u521d\u59cb\u5316\u4e3a0.0 (\u6216\u6b63\u786e\u7684\u7c7b\u578b)\u3002", "\n\u5177\u6709\u201c\u81ea\u52a8\u201d \u751f\u5b58\u671f\u7684\u53d8\u91cf(\u5373, \u6ca1\u6709\u9759\u6001\u5b58\u50a8\u7c7b\u578b\u7684\u5c40\u90e8\u53d8\u91cf) \u5982\u679c\u6ca1\u6709\u663e\u793a\u5730\u521d\u59cb\u5316, \u5219\u5305\u542b\u7684\u662f\u5783\u573e\u5185\u5bb9\u3002\u5bf9\u5783\u573e\u5185\u5bb9\u4e0d\u80fd\u4f5c\u4efb\u4f55\u6709\u7528\u7684\u5047\u8bbe\u3002\u8fd9\u4e9b\u89c4\u5219\u4e5f\u9002\u7528\u4e8e\u6570\u7ec4\u548c\u7ed3\u6784(\u79f0\u4e3a\u201c\u805a\u5408\u4f53\u201d ); \u5bf9\u4e8e\u521d\u59cb\u5316\u6765\u8bf4, \u6570\u7ec4\u548c\u7ed3\u6784\u90fd\u88ab\u8ba4\u4e3a\u662f\u201c\u53d8\u91cf\u201d\u3002", "\n\u7528malloc() \u548crealloc() \u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\u4e5f\u53ef\u80fd\u5305\u542b\u5783\u573e\u6570\u636e, \u56e0\u6b64\u5fc5\u987b\u7531\u8c03\u7528\u8005\u6b63\u786e\u5730\u521d\u59cb\u5316\u3002\u7528calloc() \u83b7\u5f97\u7684\u5185\u5b58\u4e3a\u5168\u96f6, \u4f46\u8fd9\u5bf9\u6307\u9488\u548c\u6d6e\u70b9\u503c\u4e0d\u4e00\u5b9a\u6709\u7528"], "title": "\u5bf9\u4e8e\u6ca1\u6709\u521d\u59cb\u5316\u7684\u53d8\u91cf\u7684\u521d\u59cb\u503c\u53ef\u4ee5\u4f5c\u600e\u6837\u7684\u5047\u5b9a\uff1f"},
{"contents": [], "title": "C++\u6709\u5173\u5185\u5b58\u7684\u9762\u8bd5\u9898"},
{"contents": ["\u5728\u8303\u56f4\u5185\u6ca1\u6709\u58f0\u660e\u5c31\u8c03\u7528(\u53ef\u80fd\u662f\u7b2c\u4e00\u6b21\u8c03\u7528\u5728\u51fd\u6570\u7684\u5b9a\u4e49\u4e4b\u524d) \u7684\u51fd\u6570\u88ab\u8ba4\u4e3a\u8fd4\u56de\u6574\u578b(int) (\u4e14\u6ca1\u6709\u4efb\u4f55\u53c2\u6570\u7c7b\u578b\u4fe1\u606f), \u5982\u679c\u51fd\u6570\u5728\u540e\u8fb9\u58f0\u660e\u6216\u5b9a\u4e49\u6210\u5176\u5b83\u7c7b\u578b\u5c31\u4f1a\u5bfc\u81f4\u77db\u76fe\u3002\u6240\u6709\u51fd\u6570(\u975e\u6574\u578b\u51fd\u6570\u4e00\u5b9a\u8981) \u5fc5\u987b\u5728\u8c03\u7528\u4e4b\u524d\u58f0\u660e\u3002\u53e6\u4e00\u4e2a\u53ef\u80fd\u7684\u539f\u56e0\u662f\u8be5\u51fd\u6570\u4e0e\u67d0\u4e2a\u5934\u6587\u4ef6\u4e2d\u58f0\u660e\u7684\u53e6\u4e00\u4e2a\u51fd\u6570\u540c\u540d\u3002"], "title": "\u51fd\u6570\u53ea\u5b9a\u4e49\u4e86\u4e00\u6b21, \u8c03\u7528\u4e86\u4e00\u6b21, \u4f46\u7f16\u8bd1\u5668\u63d0\u793a\u975e\u6cd5\u91cd\u5b9a\u4e49\u4e86\u3002\u4ec0\u4e48\u95ee\u9898\uff1f"},
{"contents": ["\u8fd9\u4e2a\u95ee\u9898\u81f3\u5c11\u6709\u4ee5\u4e0b3 \u79cd\u7b54\u6848:", "\n1. char *(*(*a[N])())();", "\n2. \u7528typedef \u9010\u6b65\u5b8c\u6210\u58f0\u660e:", "\ntypedef char *pc; /* \u5b57\u7b26\u6307\u9488*/", "\ntypedef pc fpc(); /* \u8fd4\u56de\u5b57\u7b26\u6307\u9488\u7684\u51fd\u6570*/", "\ntypedef fpc *pfpc; /* \u4e0a\u9762\u51fd\u6570\u7684\u6307\u9488*/", "\ntypedef pfpc fpfpc(); /* \u8fd4\u56de\u51fd\u6570\u6307\u9488\u7684\u51fd\u6570*/", "\ntypedef fpfpc *pfpfpc; /* \u4e0a\u9762\u51fd\u6570\u7684\u6307\u9488*/", "\npfpfpc a[N]; /* \u4e0a\u9762\u6307\u9488\u7684\u6570\u7ec4*/", "\n3. \u4f7f\u7528cdecl \u7a0b\u5e8f, \u5b83\u53ef\u4ee5\u628a\u82f1\u6587\u7ffb\u8bd1\u6210C \u6216\u8005\u628aC \u7ffb\u8bd1\u6210\u82f1\u6587:", "\ncdecl> declare a as array of pointer to function returning", "\npointer to function returning pointer to char", "\nchar *(*(*a[])())()", "\n\u901a\u8fc7\u7c7b\u578b\u8f6c\u6362, cdecl \u4e5f\u53ef\u4ee5\u7528\u4e8e\u89e3\u91ca\u590d\u6742\u7684\u58f0\u660e, \u6307\u51fa\u53c2\u6570\u5e94\u8be5\u8fdb\u5165\u54ea\u4e00\u5bf9\u62ec\u53f7(\u5982\u540c\u5728\u4e0a\u8ff0\u7684\u590d\u6742\u51fd\u6570\u5b9a\u4e49\u4e2d)"], "title": "\u600e\u6837\u5efa\u7acb\u548c\u7406\u89e3\u975e\u5e38\u590d\u6742\u7684\u58f0\u660e\uff1f\u4f8b\u5982\u5b9a\u4e49\u4e00\u4e2a\u5305\u542bN \u4e2a\u6307\u5411\u8fd4\u56de \u6307\u5411\u5b57\u7b26\u7684\u6307\u9488\u7684\u51fd\u6570\u7684\u6307\u9488\u7684\u6570\u7ec4\uff1f"},
{"contents": ["\u603b\u4f53\u611f\u89c9\u9898\u76ee\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\uff0c\u4e3b\u8981\u8003C++\u91cc\u9762\u7684\u4e1c\u897f\uff0c\u8fd8\u6709\u4e00\u4e9bwindows\u8fdb\u7a0b\u673a\u5236\u7684\u9898\u76ee\uff0c\u5177\u4f53\u5982\u4e0b\uff1a", "1.\u8bb2\u8ff0const\uff0cstatic\uff0cextern\u7684\u4f5c\u7528\uff1b", "2.\u8981\u4f60\u63cf\u8ff0\u6d3e\u751f\u7c7b\u7684\u5185\u5b58\u5b58\u50a8\u65b9\u5f0f\u3002", "3.\u7ed9\u4f60\u4e00\u4e2a32\u4f4d\u7684\u516d\u8fdb\u5236\u6570\uff0c\u5199\u4e00\u4e2a\u7a0b\u5e8f\u8ba9\u5b83\u5012\u5e8f\u8f93\u51fa\u3002", "4.\u5199\u4e00\u4e2a\u5192\u6ce1\u6216\u8005\u9009\u62e9\u6392\u5e8f\u7684\u7a0b\u5e8f\uff0c\u5e76\u5728\u8bb2\u8ff0\u4e00\u4e2a\u5176\u4f59\u6392\u5e8f\u7684\u7a0b\u5e8f\uff0c\u5e76\u8bb2\u8ff0\u5176\u7279\u70b9\u3002", "5.\u4ece\u4e0b\u97625\u4e2a\u9898\u76ee\u4e2d\u9009\u505a\u4e00\u9898\u6216\u8005\u591a\u9898\uff1a", "\uff081\uff09\u9762\u5411\u5bf9\u8c61\u662f\u4ec0\u4e48\u610f\u601d\uff0cC++\u662f\u5982\u4f55\u5b9e\u73b0\u7684\uff1b", "\uff082\uff09\u591a\u7ebf\u7a0b\u4e2d\u7684\u540c\u6b65\u673a\u5236\u662f\u4ec0\u4e48\uff0c\u6709\u4ec0\u4e48\u4f18\u7f3a\u70b9\uff1f", "\uff083\uff09TCP\u4e0eUDP\u6709\u4ec0\u4e48\u533a\u522b\uff0c\u5206\u522b\u6709\u4ec0\u4e48\u5177\u4f53\u7684\u5e94\u7528\u534f\u8bae\uff1f", "\uff084\uff09\uff08\u4e0d\u592a\u8bb0\u5f97\u4e86\uff0c\u597d\u50cf\u662f\u5173\u4e8ehook\u7684\uff09", "\uff085\uff09\u540c\u6b65\u673a\u5236\u7684\u8003\u5bdf\u9898\u3002\u8fd9\u6b21\u9762\u8bd5\u7684\u7b14\u8bd5\u9898\u5206\u4e3aWPS\u8f6f\u4ef6\u7814\u53d1\uff0c\u6bd2\u9738\u7814\u53d1\u4ee5\u53ca\u6e38\u620f\u6d4b\u8bd5\u4e09\u4e2a\u65b9\u5411\uff0cWPS\u65b9\u5411\u7684\u9898\u6bd4\u8f83\u96be\uff0c\u8bbe\u8ba1\u6df1\u5165\u7684C++\u7f16\u7a0b\u95ee\u9898\uff0c\u6e38\u620f\u6d4b\u8bd5\u5168\u662f\u7b80\u7b54\u9898\uff0c\u5982\u5217\u4e3e\u9b54\u517d\u4e16\u754c\u7684\u5341\u5927\u7f3a\u70b9 \u4e4b\u7c7b\u7684\uff0c\u90fd\u5f88\u597d\u56de\u7b54\uff0c\u611f\u89c9\u5c31\u662f\u91d1\u5c71\u7684\u7ec4\u7ec7\u8fd8\u662f\u6bd4\u8f83\u6df7\u4e71\uff0c\u5927\u5bb6\u90fd\u4e00\u987f\u4e71\u62a2\u8bd5\u5377\uff0c\u641e\u5f97\u573a\u9762\u5f88\u70c2\uff0c\u800c\u4e14\u5c31\u53ea\u6709\u4e24\u4e2a\u5c0fmm\u5728\u7ec4\u7ec7\u73b0\u573a\uff0c\u5475\u5475\uff01"], "title": "\u91d1\u5c71\u7b14\u8bd5\u9898-\u91d1\u5c71\u6bd2\u9738\u7cfb\u5217\u7684\u7b14\u8bd5\u9898"},
{"contents": ["strstr(s1,s2)\u662f\u4e00\u4e2a\u7ecf\u5e38\u7528\u7684\u51fd\u6570\uff0c\u4ed6\u7684\u4f5c\u7528\u5c31\u662f\u5728\u5b57\u7b26\u4e32s1\u4e2d\u5bfb\u627e\u5b57\u7b26\u4e32s2\u5982\u679c\u627e\u5230\u4e86\u5c31\u8fd4\u56de\u6307\u9488\uff0c\u5426\u5219\u8fd4\u56deNULL\u3002", "\n\u4e0b\u9762\u662f\u8fd9\u4e2a\u51fd\u6570\u7684\u4e00\u4e2a\u7b80\u5355\u5b9e\u73b0\uff1a", "static const char* _strstr(const char* s1, const char* s2)", "{", "     assert(s2 && s1);", "     const char* p=s1, *r=s2;", "     while(*p!=\u201d)", "     {", "          while(*p++==*r++);", "          if(*r==\u201d)", "               return p;", "          else", "          {", "               r=s2;", "               p=++s1;", "          }", "     }", "     return NULL;", "}"], "title": "strstr()\u7684\u7b80\u5355\u5b9e\u73b0"},
{"contents": ["11.Windows\u662f\u5185\u6838\u7ea7\u7ebf\u7a0b\u4e48\u3002", "\n\u7b54\uff1a\u89c1\u4e0b\u4e00\u9898", "12.Linux\u6709\u5185\u6838\u7ea7\u7ebf\u7a0b\u4e48\u3002", "\n\u7b54\uff1a\u7ebf\u7a0b\u901a\u5e38\u88ab\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u4ee3\u7801\u7684\u4e0d\u540c\u6267\u884c\u8def\u7ebf\u3002\u4ece\u5b9e\u73b0\u65b9\u5f0f\u4e0a\u5212\u5206\uff0c\u7ebf\u7a0b\u6709\u4e24", "\n\u79cd\u7c7b\u578b\uff1a\u201c\u7528\u6237\u7ea7\u7ebf\u7a0b\u201d\u548c\u201c\u5185\u6838\u7ea7\u7ebf\u7a0b\u201d\u3002 \u7528\u6237\u7ebf\u7a0b\u6307\u4e0d\u9700\u8981\u5185\u6838\u652f\u6301\u800c\u5728\u7528\u6237\u7a0b\u5e8f", "\n\u4e2d\u5b9e\u73b0\u7684\u7ebf\u7a0b\uff0c\u5176\u4e0d\u4f9d\u8d56\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u6838\u5fc3\uff0c\u5e94\u7528\u8fdb\u7a0b\u5229\u7528\u7ebf\u7a0b\u5e93\u63d0\u4f9b\u521b\u5efa\u3001\u540c\u6b65\u3001\u8c03\u5ea6", "\n\u548c\u7ba1\u7406\u7ebf\u7a0b\u7684\u51fd\u6570\u6765\u63a7\u5236\u7528\u6237\u7ebf\u7a0b\u3002\u8fd9\u79cd\u7ebf\u7a0b\u751a\u81f3\u5728\u8c61 DOS \u8fd9\u6837\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u4e5f\u53ef\u5b9e\u73b0", "\n\uff0c\u4f46\u7ebf\u7a0b\u7684\u8c03\u5ea6\u9700\u8981\u7528\u6237\u7a0b\u5e8f\u5b8c\u6210\uff0c\u8fd9\u6709\u4e9b\u7c7b\u4f3c Windows 3.x \u7684\u534f\u4f5c\u5f0f\u591a\u4efb\u52a1\u3002\u53e6\u5916\u4e00", "\n\u79cd\u5219\u9700\u8981\u5185\u6838\u7684\u53c2\u4e0e\uff0c\u7531\u5185\u6838\u5b8c\u6210\u7ebf\u7a0b\u7684\u8c03\u5ea6\u3002\u5176\u4f9d\u8d56\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u6838\u5fc3\uff0c\u7531\u5185\u6838\u7684\u5185\u90e8", "\n\u9700\u6c42\u8fdb\u884c\u521b\u5efa\u548c\u64a4\u9500\uff0c\u8fd9\u4e24\u79cd\u6a21\u578b\u5404\u6709\u5176\u597d\u5904\u548c\u7f3a\u70b9\u3002\u7528\u6237\u7ebf\u7a0b\u4e0d\u9700\u8981\u989d\u5916\u7684\u5185\u6838\u5f00\u652f", "\n\uff0c\u5e76\u4e14\u7528\u6237\u6001\u7ebf\u7a0b\u7684\u5b9e\u73b0\u65b9\u5f0f\u53ef\u4ee5\u88ab\u5b9a\u5236\u6216\u4fee\u6539\u4ee5\u9002\u5e94\u7279\u6b8a\u5e94\u7528\u7684\u8981\u6c42\uff0c\u4f46\u662f\u5f53\u4e00\u4e2a\u7ebf", "\n\u7a0b\u56e0 I/O \u800c\u5904\u4e8e\u7b49\u5f85\u72b6\u6001\u65f6\uff0c\u6574\u4e2a\u8fdb\u7a0b\u5c31\u4f1a\u88ab\u8c03\u5ea6\u7a0b\u5e8f\u5207\u6362\u4e3a\u7b49\u5f85\u72b6\u6001\uff0c\u5176\u4ed6\u7ebf\u7a0b\u5f97\u4e0d", "\n\u5230\u8fd0\u884c\u7684\u673a\u4f1a\uff1b\u800c\u5185\u6838\u7ebf\u7a0b\u5219\u6ca1\u6709\u5404\u4e2a\u9650\u5236\uff0c\u6709\u5229\u4e8e\u53d1\u6325\u591a\u5904\u7406\u5668\u7684\u5e76\u53d1\u4f18\u52bf\uff0c\u4f46\u5374\u5360", "\n\u7528\u4e86\u66f4\u591a\u7684\u7cfb\u7edf\u5f00\u652f\u3002", "\nWindows NT\u548cOS/2\u652f\u6301\u5185\u6838\u7ebf\u7a0b\u3002Linux \u652f\u6301\u5185\u6838\u7ea7\u7684\u591a\u7ebf\u7a0b", "13.C++\u4e2d\u4ec0\u4e48\u6570\u636e\u5206\u914d\u5728\u6808\u6216\u5806\u4e2d\uff0cNew\u5206\u914d\u6570\u636e\u662f\u5728\u8fd1\u5806\u8fd8\u662f\u8fdc\u5806\u4e2d\uff1f", "\n\u7b54\uff1a\u6808: \u5b58\u653e\u5c40\u90e8\u53d8\u91cf\uff0c\u51fd\u6570\u8c03\u7528\u53c2\u6570,\u51fd\u6570\u8fd4\u56de\u503c\uff0c\u51fd\u6570\u8fd4\u56de\u5730\u5740\u3002\u7531\u7cfb\u7edf\u7ba1\u7406", "\n\u5806: \u7a0b\u5e8f\u8fd0\u884c\u65f6\u52a8\u6001\u7533\u8bf7\uff0cnew \u548c\u3000malloc\u7533\u8bf7\u7684\u5185\u5b58\u5c31\u5728\u5806\u4e0a", "14.\u4f7f\u7528\u7ebf\u7a0b\u662f\u5982\u4f55\u9632\u6b62\u51fa\u73b0\u5927\u7684\u6ce2\u5cf0\u3002", "\n\u7b54\uff1a\u610f\u601d\u662f\u5982\u4f55\u9632\u6b62\u540c\u65f6\u4ea7\u751f\u5927\u91cf\u7684\u7ebf\u7a0b\uff0c\u65b9\u6cd5\u662f\u4f7f\u7528\u7ebf\u7a0b\u6c60\uff0c\u7ebf\u7a0b\u6c60\u5177\u6709\u53ef\u4ee5\u540c\u65f6\u63d0", "\n\u9ad8\u8c03\u5ea6\u6548\u7387\u548c\u9650\u5236\u8d44\u6e90\u4f7f\u7528\u7684\u597d\u5904\uff0c\u7ebf\u7a0b\u6c60\u4e2d\u7684\u7ebf\u7a0b\u8fbe\u5230\u6700\u5927\u6570\u65f6\uff0c\u5176\u4ed6\u7ebf\u7a0b\u5c31\u4f1a\u6392\u961f", "\n\u7b49\u5019\u3002", "15\u51fd\u6570\u6a21\u677f\u4e0e\u7c7b\u6a21\u677f\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u7b54\uff1a\u51fd\u6570\u6a21\u677f\u7684\u5b9e\u4f8b\u5316\u662f\u7531\u7f16\u8bd1\u7a0b\u5e8f\u5728\u5904\u7406\u51fd\u6570\u8c03\u7528\u65f6\u81ea\u52a8\u5b8c\u6210\u7684\uff0c\u800c\u7c7b\u6a21\u677f\u7684\u5b9e\u4f8b\u5316", "\n\u5fc5\u987b\u7531\u7a0b\u5e8f\u5458\u5728\u7a0b\u5e8f\u4e2d\u663e\u5f0f\u5730\u6307\u5b9a\u3002", "16\u4e00\u822c\u6570\u636e\u5e93\u82e5\u51fa\u73b0\u65e5\u5fd7\u6ee1\u4e86\uff0c\u4f1a\u51fa\u73b0\u4ec0\u4e48\u60c5\u51b5\uff0c\u662f\u5426\u8fd8\u80fd\u4f7f\u7528\uff1f", "\n\u7b54\uff1a\u53ea\u80fd\u6267\u884c\u67e5\u8be2\u7b49\u8bfb\u64cd\u4f5c\uff0c\u4e0d\u80fd\u6267\u884c\u66f4\u6539\uff0c\u5907\u4efd\u7b49\u5199\u64cd\u4f5c\uff0c\u539f\u56e0\u662f\u4efb\u4f55\u5199\u64cd\u4f5c\u90fd\u8981\u8bb0", "\n\u5f55\u65e5\u5fd7\u3002\u4e5f\u5c31\u662f\u8bf4\u57fa\u672c\u4e0a\u5904\u4e8e\u4e0d\u80fd\u4f7f\u7528\u7684\u72b6\u6001\u3002", "17 SQL Server\u662f\u5426\u652f\u6301\u884c\u7ea7\u9501\uff0c\u6709\u4ec0\u4e48\u597d\u5904\uff1f", "\n\u7b54\uff1a\u652f\u6301\uff0c\u8bbe\u7acb\u5c01\u9501\u673a\u5236\u4e3b\u8981\u662f\u4e3a\u4e86\u5bf9\u5e76\u53d1\u64cd\u4f5c\u8fdb\u884c\u63a7\u5236\uff0c\u5bf9\u5e72\u6270\u8fdb\u884c\u5c01\u9501\uff0c\u4fdd\u8bc1\u6570\u636e", "\n\u7684\u4e00\u81f4\u6027\u548c\u51c6\u786e\u6027\uff0c\u884c\u7ea7\u5c01\u9501\u786e\u4fdd\u5728\u7528\u6237\u53d6\u5f97\u88ab\u66f4\u65b0\u7684\u884c\u5230\u8be5\u884c\u8fdb\u884c\u66f4\u65b0\u8fd9\u6bb5\u65f6\u95f4\u5185\u4e0d", "\n\u88ab\u5176\u5b83\u7528\u6237\u6240\u4fee\u6539\u3002\u56e0\u800c\u884c\u7ea7\u9501\u5373\u53ef\u4fdd\u8bc1\u6570\u636e\u7684\u4e00\u81f4\u6027\u53c8\u80fd\u63d0\u9ad8\u6570\u636e\u64cd\u4f5c\u7684\u8ff8\u53d1\u6027\u3002", "18\u5982\u679c\u6570\u636e\u5e93\u6ee1\u4e86\u4f1a\u51fa\u73b0\u4ec0\u4e48\u60c5\u51b5\uff0c\u662f\u5426\u8fd8\u80fd\u4f7f\u7528\uff1f", "\n\u7b54\uff1a\u89c116", "19 \u5173\u4e8e\u5185\u5b58\u5bf9\u9f50\u7684\u95ee\u9898\u4ee5\u53casizof()\u7684\u8f93\u51fa", "\n\u7b54\uff1a\u7f16\u8bd1\u5668\u81ea\u52a8\u5bf9\u9f50\u7684\u539f\u56e0\uff1a\u4e3a\u4e86\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6027\u80fd\uff0c\u6570\u636e\u7ed3\u6784\uff08\u5c24\u5176\u662f\u6808\uff09\u5e94\u8be5\u5c3d\u53ef\u80fd", "\n\u5730\u5728\u81ea\u7136\u8fb9\u754c\u4e0a\u5bf9\u9f50\u3002\u539f\u56e0\u5728\u4e8e\uff0c\u4e3a\u4e86\u8bbf\u95ee\u672a\u5bf9\u9f50\u7684\u5185\u5b58\uff0c\u5904\u7406\u5668\u9700\u8981\u4f5c\u4e24\u6b21\u5185\u5b58\u8bbf\u95ee", "\n\uff1b\u7136\u800c\uff0c\u5bf9\u9f50\u7684\u5185\u5b58\u8bbf\u95ee\u4ec5\u9700\u8981\u4e00\u6b21\u8bbf\u95ee\u3002"], "title": "\u534e\u4e3ac/c++\u7b14\u8bd5\u9898"},
{"contents": ["//\u534e\u4e3a\u9762\u8bd5\u9898\uff1a\u00a0 \u67091,2,\u2026.\u4e00\u76f4\u5230n\u7684\u65e0\u5e8f\u6570\u7ec4,\u6c42\u6392\u5e8f\u7b97\u6cd5,", "\n//\u5e76\u4e14\u8981\u6c42\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n),\u7a7a\u95f4\u590d\u6742\u5ea6O(1),\u4f7f\u7528\u4ea4\u6362,\u800c\u4e14\u4e00\u6b21\u53ea\u80fd\u4ea4\u6362\u4e24\u4e2a\u6570.", "\n//\u8bc4\u8bba\uff1a\u8981\u4f7f\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n)\uff0c\u90a3\u4e00\u5b9a\u662f\u7279\u6b8a\u6570\u7ec4\uff0c\u5426\u5219\u4e0d\u53ef\u80fd\u5b9e\u73b0\uff0c", "\n//\u9898\u76ee\u7ed9\u51fa\u6570\u7ec4\u4e3a1,2,\u2026.n,\u90a3\u4e48\u53ef\u4ee5\u5728\u8fd9\u4e0a\u9762\u505a\u6587\u7ae0\uff0c\u628a\u6570\u7ec4\u7684\u503c\u548c\u6570\u7ec4\u7684\u4e0b\u6807\u8054\u7cfb\u8d77\u6765\uff0c\u628aa[i]\u7684\u503c\u7ed9a[a[i]-1],\u6bd4\u5982a[3]=5,\u5219\u628a5\u8d4b\u7ed9a[5-1]\u4e5f\u5c31\u662fa[4]=5\uff0c\u5219\u7b26\u5408\u8981\u6c42\u4e86\u3002", "\uff03i nclude <stdio.h>", "\nvoid main()", "\n{ int a[10]={3,6,8,4,2,9,7,1,5,10};//{6,3,4,8,2,9,7,1,5,10}; \u8fd9\u4e2a\u6570\u4f8b\u4e0d\u884c", "\nint b,i;", "\nfor(i=0;i<10;i++)", "\n{", "\nb=a[a[i]-1];", "\na[a[i]-1]=a[i];", "\na[i]=b;", "\n}", "\nfor(i=0;i<10;i++)", "\nprintf(\u201c%d \u201c,a[i]);", "\n}", "\uff03i nclude<stdio.h>", "\n\uff03i nclude<stdlib.h>", "int print( int*, int );", "\nint swap( int&, int& );", "\nint main()", "\n{", "\nint *a, n, i;", "\nscanf( \u201c%d\u201d, &n );", "\na = ( int* ) malloc ( ( n + 1 ) * sizeof( int ) );", "\nfor( i = 1; i <= n; i++ )", "\na[i] = i;", "\nfor( i = 1; i <= n; i++ )", "\nswap( a[i], a[rand()%n+1] );", "\nprint( a, n );", "\nfor( i = 1; i <= n; i++ )", "\n{", "\nwhile( a[i] != i )", "\nswap( a[i], a[a[i]] );", "\n}", "\nprint( a, n );", "\nreturn 0;", "\n}", "\nint swap( int &i, int &j )", "\n{", "\nint temp = i;", "\ni = j;", "\nj = temp;", "\nreturn 0;", "\n}", "\nint print( int a[], int n )", "\n{", "\nint i;", "\nfor( i = 1; i <= n; i++ )", "\nprintf( \u201c%4d\u201d, a[i] );", "\nprintf( \u201c\\n\u201d );", "\nreturn 0;", "\n}", "//\u60e0\u901a\u9762\u8bd5\u9898\uff1a\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0cs,t;\u628at\u5b57\u7b26\u4e32\u63d2\u5165\u5230s\u5b57\u7b26\u4e32\u4e2d\uff0cs\u5b57\u7b26\u4e32\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u5b58\u653et\u5b57\u7b26\u4e32", "void insert(char *s, char *t, int i);", "void insert(char *s, char *t, int i)", "\n{", "\nchar *q = t;", "\nchar *p = s;", "\nif(q == NULL)return;//\u5b50\u4e32\u4e3a\u7a7a", "\nwhile(*p!=\u2019\\0\u2032)", "\n{", "\np++;", "\n}\u00a0 //\u79fb\u5230\u76ee\u6807\u4e32\u4e32\u5c3e", "\nwhile(*q!=\u2019\\0\u2032)", "\n{", "\n*p = *q;", "\np++;", "\nq++;", "\n}//\u63d2\u5165", "\n*p = \u2018\\0\u2032;", "\n}"], "title": "\u534e\u4e3a\u6167\u901a\u9762\u8bd5\u9898"},
{"contents": ["\u5b57\uff0c\u53cc\u5b57\uff0c\u548c\u56db\u5b57\u5728\u81ea\u7136\u8fb9\u754c\u4e0a\u4e0d\u9700\u8981\u5728\u5185\u5b58\u4e2d\u5bf9\u9f50\u3002\uff08\u5bf9\u5b57\uff0c\u53cc\u5b57\uff0c\u548c\u56db\u5b57\u6765\u8bf4\uff0c\u81ea", "\n\u7136\u8fb9\u754c\u5206\u522b\u662f\u5076\u6570\u5730\u5740\uff0c\u53ef\u4ee5\u88ab4 \u6574\u9664\u7684\u5730\u5740\uff0c\u548c\u53ef\u4ee5\u88ab8 \u6574\u9664\u7684\u5730\u5740\u3002\uff09\u65e0\u8bba\u5982\u4f55\uff0c\u4e3a\u4e86", "\n\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6027\u80fd\uff0c\u6570\u636e\u7ed3\u6784\uff08\u5c24\u5176\u662f\u6808\uff09\u5e94\u8be5\u5c3d\u53ef\u80fd\u5730\u5728\u81ea\u7136\u8fb9\u754c\u4e0a\u5bf9\u9f50\u3002\u539f\u56e0\u5728\u4e8e\uff0c\u4e3a", "\n\u4e86\u8bbf\u95ee\u672a\u5bf9\u9f50\u7684\u5185\u5b58\uff0c\u5904\u7406\u5668\u9700\u8981\u4f5c\u4e24\u6b21\u5185\u5b58\u8bbf\u95ee\uff1b\u7136\u800c\uff0c\u5bf9\u9f50\u7684\u5185\u5b58\u8bbf\u95ee\u4ec5\u9700\u8981\u4e00\u6b21\u8bbf", "\n\u95ee\u3002", "\n\u4e00\u4e2a\u5b57\u6216\u53cc\u5b57\u64cd\u4f5c\u6570\u8de8\u8d8a\u4e864 \u5b57\u8282\u8fb9\u754c\uff0c\u6216\u8005\u4e00\u4e2a\u56db\u5b57\u64cd\u4f5c\u6570\u8de8\u8d8a\u4e868 \u5b57\u8282\u8fb9\u754c\uff0c\u88ab", "\n\u8ba4\u4e3a\u662f\u672a\u5bf9\u9f50\u7684\uff0c\u4ece\u800c\u9700\u8981\u4e24\u6b21\u603b\u7ebf\u5468\u671f\u6765\u8bbf\u95ee\u5185\u5b58\u3002\u4e00\u4e2a\u5b57\u8d77\u59cb\u5730\u5740\u662f\u5947\u6570\u4f46\u5374\u6ca1\u6709\u8de8", "\n\u8d8a\u5b57\u8fb9\u754c\u88ab\u8ba4\u4e3a\u662f\u5bf9\u9f50\u7684\uff0c\u80fd\u591f\u5728\u4e00\u4e2a\u603b\u7ebf\u5468\u671f\u4e2d\u88ab\u8bbf\u95ee\u3002\u67d0\u4e9b\u64cd\u4f5c\u53cc\u56db\u5b57\u7684\u6307\u4ee4\u9700\u8981\u5185", "\n\u5b58\u64cd\u4f5c\u6570\u5728\u81ea\u7136\u8fb9\u754c\u4e0a\u5bf9\u9f50\u3002\u5982\u679c\u64cd\u4f5c\u6570\u6ca1\u6709\u5bf9\u9f50\uff0c\u8fd9\u4e9b\u6307\u4ee4\u5c06\u4f1a\u4ea7\u751f\u4e00\u4e2a\u901a\u7528\u4fdd\u62a4\u5f02\u5e38\u3002", "\n\u53cc\u56db\u5b57\u7684\u81ea\u7136\u8fb9\u754c\u662f\u80fd\u591f\u88ab16 \u6574\u9664\u7684\u5730\u5740\u3002\u5176\u4ed6\u7684\u64cd\u4f5c\u53cc\u56db\u5b57\u7684\u6307\u4ee4\u5141\u8bb8\u672a\u5bf9\u9f50\u7684\u8bbf\u95ee", "\n\uff08\u4e0d\u4f1a\u4ea7\u751f\u901a\u7528\u4fdd\u62a4\u5f02\u5e38\uff09\uff0c\u7136\u800c\uff0c\u9700\u8981\u989d\u5916\u7684\u5185\u5b58\u603b\u7ebf\u5468\u671f\u6765\u8bbf\u95ee\u5185\u5b58\u4e2d\u672a\u5bf9\u9f50\u7684\u6570\u636e\u3002", "\n\u7f3a\u7701\u60c5\u51b5\u4e0b\uff0c\u7f16\u8bd1\u5668\u9ed8\u8ba4\u5c06\u7ed3\u6784\u3001\u6808\u4e2d\u7684\u6210\u5458\u6570\u636e\u8fdb\u884c\u5185\u5b58\u5bf9\u9f50\u3002\u56e0\u6b64\uff0c\u4e0a\u9762\u7684\u7a0b\u5e8f\u8f93", "\n\u51fa\u5c31\u53d8\u6210\u4e86\uff1ac1 00000000, s 00000002, c2 00000004, i 00000008\u3002\u7f16\u8bd1\u5668\u5c06\u672a\u5bf9\u9f50\u7684\u6210\u5458\u5411\u540e", "\n\u79fb\uff0c\u5c06\u6bcf\u4e00\u4e2a\u90fd\u6210\u5458\u5bf9\u9f50\u5230\u81ea\u7136\u8fb9\u754c\u4e0a\uff0c\u4ece\u800c\u4e5f\u5bfc\u81f4\u4e86\u6574\u4e2a\u7ed3\u6784\u7684\u5c3a\u5bf8\u53d8\u5927\u3002\u5c3d\u7ba1\u4f1a\u727a\u7272", "\n\u4e00\u70b9\u7a7a\u95f4\uff08\u6210\u5458\u4e4b\u95f4\u6709\u90e8\u5206\u5185\u5b58\u7a7a\u95f2\uff09\uff0c\u4f46\u63d0\u9ad8\u4e86\u6027\u80fd\u3002\u4e5f\u6b63\u662f\u8fd9\u4e2a\u539f\u56e0\uff0c\u6211\u4eec\u4e0d\u53ef\u4ee5\u65ad\u8a00", "\nsizeof(TestStruct1)\u7684\u7ed3\u679c\u4e3a8\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0csizeof(TestStruct1)\u7684\u7ed3\u679c\u4e3a12\u3002"], "title": "\u4e3a\u4ec0\u4e48\u4f1a\u6709\u5185\u5b58\u5bf9\u9f50\uff1f"},
{"contents": ["\u5f88\u591a\u521d\u5b66\u8005\u90fd\u65e0\u6cd5\u5206\u6e05\u8fd9\u4e24\u8005\u4e4b\u95f4\u7684\u533a\u522b\u3002\u6211\u4eec\u5148\u770b\u4e0b\u9762\u7684\u4ee3\u7801\uff1a", "\nint *p = NULL;", "\n\u8fd9\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7f16\u8bd1\u5668\u67e5\u770bp \u7684\u503c\u4e3a0\u00d700000000\u3002\u8fd9\u53e5\u4ee3\u7801\u7684\u610f\u601d\u662f\uff1a\u5b9a\u4e49\u4e00\u4e2a\u6307\u9488", "\n\u53d8\u91cfp\uff0c\u5176\u6307\u5411\u7684\u5185\u5b58\u91cc\u9762\u4fdd\u5b58\u7684\u662fint \u7c7b\u578b\u7684\u6570\u636e\uff1b\u5728\u5b9a\u4e49\u53d8\u91cfp \u7684\u540c\u65f6\u628ap \u7684\u503c\u8bbe\u7f6e\u4e3a", "\n0\u00d700000000\uff0c\u800c\u4e0d\u662f\u628a*p \u7684\u503c\u8bbe\u7f6e\u4e3a0\u00d700000000\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u53eb\u505a\u521d\u59cb\u5316\uff0c\u662f\u5728\u7f16\u8bd1\u7684\u65f6\u5019", "\n\u8fdb\u884c\u7684\u3002", "\n\u660e\u767d\u4e86\u4ec0\u4e48\u662f\u521d\u59cb\u5316\u4e4b\u540e\uff0c\u518d\u770b\u4e0b\u9762\u7684\u4ee3\u7801\uff1a", "\nint *p;", "\n*p = NULL;", "\n\u540c\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7f16\u8bd1\u5668\u4e0a\u8c03\u8bd5\u8fd9\u4e24\u884c\u4ee3\u7801\u3002\u7b2c\u4e00\u884c\u4ee3\u7801\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6307\u9488\u53d8\u91cfp\uff0c\u5176\u6307\u5411", "\n\u7684\u5185\u5b58\u91cc\u9762\u4fdd\u5b58\u7684\u662fint \u7c7b\u578b\u7684\u6570\u636e\uff1b\u4f46\u662f\u8fd9\u65f6\u5019\u53d8\u91cfp \u672c\u8eab\u7684\u503c\u662f\u591a\u5c11\u4e0d\u5f97\u800c\u77e5\uff0c\u4e5f\u5c31\u662f", "\n\u8bf4\u73b0\u5728\u53d8\u91cfp \u4fdd\u5b58\u7684\u6709\u53ef\u80fd\u662f\u4e00\u4e2a\u975e\u6cd5\u7684\u5730\u5740\u3002\u7b2c\u4e8c\u884c\u4ee3\u7801\uff0c\u7ed9*p \u8d4b\u503c\u4e3aNULL\uff0c\u5373\u7ed9p", "\n\u6307\u5411\u7684\u5185\u5b58\u8d4b\u503c\u4e3aNULL\uff1b\u4f46\u662f\u7531\u4e8ep \u6307\u5411\u7684\u5185\u5b58\u53ef\u80fd\u662f\u975e\u6cd5\u7684\uff0c\u6240\u4ee5\u8c03\u8bd5\u7684\u65f6\u5019\u7f16\u8bd1\u5668\u53ef", "\n\u80fd\u4f1a\u62a5\u544a\u4e00\u4e2a\u5185\u5b58\u8bbf\u95ee\u9519\u8bef\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u4e0a\u9762\u7684\u4ee3\u7801\u6539\u5199\u6539\u5199\uff0c\u4f7fp \u6307\u5411\u4e00\u5757\u5408", "\n\u6cd5\u7684\u5185\u5b58\uff1a", "\nint i = 10;", "\nint *p = &i;", "\n*p = NULL;", "\n\u5728\u7f16\u8bd1\u5668\u4e0a\u8c03\u8bd5\u4e00\u4e0b\uff0c\u6211\u4eec\u53d1\u73b0p \u6307\u5411\u7684\u5185\u5b58\u7531\u539f\u6765\u768410 \u53d8\u4e3a0 \u4e86\uff1b\u800cp \u672c\u8eab\u7684\u503c\uff0c \u5373\u5185", "\n\u5b58\u5730\u5740\u5e76\u6ca1\u6709\u6539\u53d8\u3002", "\n\u7ecf\u8fc7\u4e0a\u9762\u7684\u5206\u6790\uff0c\u76f8\u4fe1\u4f60\u5df2\u7ecf\u660e\u767d\u5b83\u4eec\u4e4b\u95f4\u7684\u533a\u522b\u4e86\u3002\u4e0d\u8fc7\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\u9700\u8981\u6ce8", "\n\u610f\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e2aNULL\u3002\u521d\u5b66\u8005\u5f80\u5f80\u5728\u8fd9\u91cc\u72af\u9519\u8bef\u3002", "\n\u6ce8\u610fNULL \u5c31\u662fNULL\uff0c\u5b83\u88ab\u5b8f\u5b9a\u4e49\u4e3a0\uff1a", "\n#define NULL 0", "\n\u5f88\u591a\u7cfb\u7edf\u4e0b\u9664\u4e86\u6709NULL\u5916\uff0c\u8fd8\u6709NUL\uff08Visual C++ 6.0 \u4e0a\u63d0\u793a\u8bf4\u4e0d\u8ba4\u8bc6NUL\uff09\u3002NUL \u662fASCII", "\n\u7801\u8868\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\uff0c\u8868\u793a\u7684\u662f\u7a7a\u5b57\u7b26\uff0c\u5176ASCII \u7801\u503c\u4e3a0\u3002\u5176\u503c\u867d\u7136\u90fd\u4e3a0\uff0c\u4f46\u8868\u793a\u7684\u610f\u601d", "\n\u5b8c\u5168\u4e0d\u4e00\u6837\u3002\u540c\u6837\uff0cNULL \u548c0 \u8868\u793a\u7684\u610f\u601d\u4e5f\u5b8c\u5168\u4e0d\u4e00\u6837\u3002\u4e00\u5b9a\u4e0d\u8981\u6df7\u6dc6\u3002", "\n\u53e6\u5916\u8fd8\u6709\u521d\u5b66\u8005\u5728\u4f7f\u7528NULL \u7684\u65f6\u5019\u8bef\u5199\u6210null \u6216Null \u7b49\u3002\u8fd9\u4e9b\u90fd\u662f\u4e0d\u6b63\u786e\u7684\uff0cC \u8bed", "\n\u8a00\u5bf9\u5927\u5c0f\u5199\u5341\u5206\u654f\u611f\u554a\u3002\u5f53\u7136\uff0c\u4e5f\u786e\u5b9e\u6709\u7cfb\u7edf\u4e5f\u5b9a\u4e49\u4e86null\uff0c\u5176\u610f\u601d\u4e5f\u4e0eNULL \u6ca1\u6709\u533a\u522b\uff0c", "\n\u4f46\u662f\u4f60\u5343\u4e07\u4e0d\u7528\u4f7f\u7528null\uff0c\u8fd9\u4f1a\u5f71\u54cd\u4f60\u4ee3\u7801\u7684\u79fb\u690d\u6027\u3002"], "title": "int *p = NULL \u548c*p = NULL \u6709\u4ec0\u4e48\u533a\u522b\uff1f"},
{"contents": ["\u987e\u540d\u601d\u4e49\uff0c\u51fd\u6570\u6307\u9488\u5c31\u662f\u51fd\u6570\u7684\u6307\u9488\u3002\u5b83\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411\u4e00\u4e2a\u51fd\u6570\u3002\u770b\u4f8b\u5b50\uff1a", "\nA)\uff0cchar * (*fun1)(char * p1,char * p2);", "\nB)\uff0cchar * *fun2(char * p1,char * p2);", "\nC)\uff0cchar * fun3(char * p1,char * p2);", "\n\u6570\u7ec4\u53c2\u6570\u7b49\u6548\u7684\u6307\u9488\u53c2\u6570", "\n\u6570\u7ec4\u7684\u6570\u7ec4\uff1achar a[3][4] \u6570\u7ec4\u7684\u6307\u9488\uff1achar (*p)[10]", "\n\u6307\u9488\u6570\u7ec4\uff1a char *a[5] \u6307\u9488\u7684\u6307\u9488\uff1achar **p", "\n\u770b\u770b\u4e0a\u9762\u4e09\u4e2a\u8868\u8fbe\u5f0f\u5206\u522b\u662f\u4ec0\u4e48\u610f\u601d\uff1f", "\nC\uff09\uff1a\u8fd9\u5f88\u5bb9\u6613\uff0cfun3 \u662f\u51fd\u6570\u540d\uff0cp1\uff0cp2 \u662f\u53c2\u6570\uff0c\u5176\u7c7b\u578b\u4e3achar *\u578b\uff0c\u51fd\u6570\u7684\u8fd4\u56de\u503c\u4e3achar *", "\n\u7c7b\u578b\u3002", "\nB)\uff1a\u4e5f\u5f88\u7b80\u5355\uff0c\u4e0eC\uff09\u8868\u8fbe\u5f0f\u76f8\u6bd4\uff0c\u552f\u4e00\u4e0d\u540c\u7684\u5c31\u662f\u51fd\u6570\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u4e3achar**\uff0c\u662f\u4e2a", "\n\u4e8c\u7ea7\u6307\u9488\u3002", "\nA)\uff1afun1 \u662f\u51fd\u6570\u540d\u5417\uff1f\u56de\u5fc6\u4e00\u4e0b\u524d\u9762\u8bb2\u89e3\u6570\u7ec4\u6307\u9488\u65f6\u7684\u60c5\u5f62\u3002\u6211\u4eec\u8bf4\u6570\u7ec4\u6307\u9488\u8fd9\u4e48\u5b9a", "\n\u4e49\u6216\u8bb8\u66f4\u6e05\u6670\uff1a", "\nint (*)[10] p\uff1b", "\n\u518d\u770b\u770bA\uff09\u8868\u8fbe\u5f0f\u4e0e\u8fd9\u91cc\u4f55\u5176\u76f8\u4f3c\uff01\u660e\u767d\u4e86\u5427\u3002\u8fd9\u91ccfun1 \u4e0d\u662f\u4ec0\u4e48\u51fd\u6570\u540d\uff0c\u800c\u662f\u4e00\u4e2a", "\n\u6307\u9488\u53d8\u91cf\uff0c\u5b83\u6307\u5411\u4e00\u4e2a\u51fd\u6570\u3002\u8fd9\u4e2a\u51fd\u6570\u6709\u4e24\u4e2a\u6307\u9488\u7c7b\u578b\u7684\u53c2\u6570\uff0c\u51fd\u6570\u7684\u8fd4\u56de\u503c\u4e5f\u662f\u4e00\u4e2a\u6307", "\n\u9488\u3002\u540c\u6837\uff0c\u6211\u4eec\u628a\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u6539\u5199\u4e00\u4e0b\uff1achar * (*)(char * p1,char * p2) fun1; \u8fd9\u6837\u5b50\u662f\u4e0d", "\n\u662f\u597d\u770b\u4e00\u4e9b\u5462\uff1f\u53ea\u53ef\u60dc\u7f16\u8bd1\u5668\u4e0d\u8fd9\u4e48\u60f3"], "title": "\u51fd\u6570\u6307\u9488\u7684\u5b9a\u4e49\u662f\u4ec0\u4e48\uff1f"},
{"contents": ["1\uff09\uff0c#define \u5b8f\u5e38\u91cf\u662f\u5728\u9884\u7f16\u8bd1\u9636\u6bb5\u8fdb\u884c\u7b80\u5355\u66ff\u6362\u3002\u679a\u4e3e\u5e38\u91cf\u5219\u662f\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u786e\u5b9a\u5176\u503c\u3002", "\n2\uff09\uff0c\u4e00\u822c\u5728\u7f16\u8bd1\u5668\u91cc\uff0c\u53ef\u4ee5\u8c03\u8bd5\u679a\u4e3e\u5e38\u91cf\uff0c\u4f46\u662f\u4e0d\u80fd\u8c03\u8bd5\u5b8f\u5e38\u91cf\u3002", "\n3\uff09\uff0c\u679a\u4e3e\u53ef\u4ee5\u4e00\u6b21\u5b9a\u4e49\u5927\u91cf\u76f8\u5173\u7684\u5e38\u91cf\uff0c\u800c#define \u5b8f\u4e00\u6b21\u53ea\u80fd\u5b9a\u4e49\u4e00\u4e2a\u3002"], "title": "\u679a\u4e3e\u4e0e#define \u5b8f\u7684\u533a\u522b"},
{"contents": ["#error \u9884\u5904\u7406\u6307\u4ee4\u7684\u4f5c\u7528\u662f\uff0c\u7f16\u8bd1\u7a0b\u5e8f\u65f6\uff0c\u53ea\u8981\u9047\u5230#error \u5c31\u4f1a\u751f\u6210\u4e00\u4e2a\u7f16\u8bd1\u9519\u8bef\u63d0", "\n\u793a\u6d88\u606f\uff0c\u5e76\u505c\u6b62\u7f16\u8bd1\u3002\u5176\u8bed\u6cd5\u683c\u5f0f\u4e3a\uff1a", "\n#error error-message", "\n\u6ce8\u610f\uff0c\u5b8f\u4e32error-message \u4e0d\u7528\u53cc\u5f15\u53f7\u5305\u56f4\u3002\u9047\u5230#error \u6307\u4ee4\u65f6\uff0c\u9519\u8bef\u4fe1\u606f\u88ab\u663e\u793a\uff0c\u53ef\u80fd\u540c\u65f6", "\n\u8fd8\u663e\u793a\u7f16\u8bd1\u7a0b\u5e8f\u4f5c\u8005\u9884\u5148\u5b9a\u4e49\u7684\u5176\u4ed6\u5185\u5bb9\u3002"], "title": "\u4ecb\u7ecd\u4e00\u4e0b#error \u9884\u5904\u7406"},
{"contents": ["struct \u662f\u4e2a\u795e\u5947\u7684\u5173\u952e\u5b57\uff0c\u5b83\u5c06\u4e00\u4e9b\u76f8\u5173\u8054\u7684\u6570\u636e\u6253\u5305\u6210\u4e00\u4e2a\u6574\u4f53\uff0c\u65b9\u4fbf\u4f7f\u7528\u3002", "\n\u5728\u7f51\u7edc\u534f\u8bae\u3001\u901a\u4fe1\u63a7\u5236\u3001\u5d4c\u5165\u5f0f\u7cfb\u7edf\u3001\u9a71\u52a8\u5f00\u53d1\u7b49\u5730\u65b9\uff0c\u6211\u4eec\u7ecf\u5e38\u8981\u4f20\u9001\u7684\u4e0d\u662f\u7b80\u5355", "\n\u7684\u5b57\u8282\u6d41\uff08char \u578b\u6570\u7ec4\uff09\uff0c\u800c\u662f\u591a\u79cd\u6570\u636e\u7ec4\u5408\u8d77\u6765\u7684\u4e00\u4e2a\u6574\u4f53\uff0c\u5176\u8868\u73b0\u5f62\u5f0f\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\u3002", "\n\u7ecf\u9a8c\u4e0d\u8db3\u7684\u5f00\u53d1\u4eba\u5458\u5f80\u5f80\u5c06\u6240\u6709\u9700\u8981\u4f20\u9001\u7684\u5185\u5bb9\u4f9d\u987a\u5e8f\u4fdd\u5b58\u5728char \u578b\u6570\u7ec4\u4e2d\uff0c\u901a\u8fc7\u6307\u9488\u504f", "\n\u79fb\u7684\u65b9\u6cd5\u4f20\u9001\u7f51\u7edc\u62a5\u6587\u7b49\u4fe1\u606f\u3002\u8fd9\u6837\u505a\u7f16\u7a0b\u590d\u6742\uff0c\u6613\u51fa\u9519\uff0c\u800c\u4e14\u4e00\u65e6\u63a7\u5236\u65b9\u5f0f\u53ca\u901a\u4fe1\u534f\u8bae", "\n\u6709\u6240\u53d8\u5316\uff0c\u7a0b\u5e8f\u5c31\u8981\u8fdb\u884c\u975e\u5e38\u7ec6\u81f4\u7684\u4fee\u6539\uff0c\u975e\u5e38\u5bb9\u6613\u51fa\u9519\u3002\u8fd9\u4e2a\u65f6\u5019\u53ea\u9700\u8981\u4e00\u4e2a\u7ed3\u6784\u4f53\u5c31", "\n\u80fd\u641e\u5b9a\u3002\u5e73\u65f6\u6211\u4eec\u8981\u6c42\u51fd\u6570\u7684\u53c2\u6570\u5c3d\u91cf\u4e0d\u591a\u4e8e4 \u4e2a\uff0c\u5982\u679c\u51fd\u6570\u7684\u53c2\u6570\u591a\u4e8e4 \u4e2a\u4f7f\u7528\u8d77\u6765\u975e", "\n\u5e38\u5bb9\u6613\u51fa\u9519\uff08\u5305\u62ec\u6bcf\u4e2a\u53c2\u6570\u7684\u610f\u4e49\u548c\u987a\u5e8f\u90fd\u5bb9\u6613\u5f04\u9519\uff09\uff0c\u6548\u7387\u4e5f\u4f1a\u964d\u4f4e\uff08\u4e0e\u5177\u4f53CPU \u6709\u5173\uff0cARM", "\n\u82af\u7247\u5bf9\u4e8e\u8d85\u8fc74 \u4e2a\u53c2\u6570\u7684\u5904\u7406\u5c31\u6709\u8bb2\u7a76\uff0c\u5177\u4f53\u8bf7\u53c2\u8003\u76f8\u5173\u8d44\u6599\uff09\u3002\u8fd9\u4e2a\u65f6\u5019\uff0c\u53ef\u4ee5\u7528\u7ed3\u6784\u4f53", "\n\u538b\u7f29\u53c2\u6570\u4e2a\u6570\u3002"], "title": "\u4e3a\u4ec0\u4e48\u8981\u6709struct \u5173\u952e\u5b57\uff1f"},
{"contents": ["\u5728C++\u91ccstruct \u5173\u952e\u5b57\u4e0eclass \u5173\u952e\u5b57\u4e00\u822c\u53ef\u4ee5\u901a\u7528\uff0c\u53ea\u6709\u4e00\u4e2a\u5f88\u5c0f\u7684\u533a\u522b\u3002struct \u7684\u6210", "\n\u5458\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5c5e\u6027\u662fpublic \u7684\uff0c\u800cclass \u6210\u5458\u5374\u662fprivate \u7684\u3002\u5f88\u591a\u4eba\u89c9\u5f97\u4e0d\u597d\u8bb0\uff0c\u5176\u5b9e\u5f88\u5bb9", "\n\u6613\u3002\u4f60\u5e73\u65f6\u7528\u7ed3\u6784\u4f53\u65f6\u7528public \u4fee\u9970\u5b83\u7684\u6210\u5458\u4e86\u5417\uff1f\u65e2\u7136struct \u5173\u952e\u5b57\u4e0eclass \u5173\u952e\u5b57\u53ef\u4ee5", "\n\u901a\u7528\uff0c\u4f60\u4e5f\u4e0d\u8981\u8ba4\u4e3a\u7ed3\u6784\u4f53\u5185\u4e0d\u80fd\u653e\u51fd\u6570\u4e86\u3002"], "title": "struct \u4e0eclass \u7684\u533a\u522b"},
{"contents": ["1.How good do you see yours programming skills?Please circle your answe", "\nrs", "\n\u00a0 C:\u00a0\u00a0 Fair/Good/Excellent", "\n\u00a0 C++: Fair/Good/Excellent", "\n2.Please estimate your programming experince:", "\n\u00a0 How many lines of code are your biggest C Program ever written exclud", "\ning the", "\n\u00a0 standard linked library?", "\n\u00a0 How many lines of code are your biggest C++ program ever written excl", "\nuding the", "\n\u00a0 standard linked library?", "\n3.Please explain the following terms", "\n\u00a0 Data Encapsulation", "\n\u00a0 Inheritance", "\n\u00a0 Polymorphism", "\n4.What is a virtual base class?How do you declare such a class?How woul", "\nd you use", "\n\u00a0 it in a design?", "\n5.What is a template or container class?How do you declare such a class", "\n?", "\n6.Which are the access control levels for C++ language?", "\n7.What is RTTI?How do you achieve RTTI in your design?", "\n8.What are the major differences between static and non-static member f", "\nunctions?", "\n9.How do you call a regular member function from a static member functi", "\non?", "\n\u00a0 Please use psendo-code to provide your answer", "\n10.How do you declare/define a type of pointer to a class member functi", "\non?", "\n\u00a0 Please use psendo-code to provide your answer", "\n11.Please explain the following tyoes:", "\n\u00a0\u00a0 Here is a short lise of combinations and their meanings:", "\n\u00a0\u00a0 1.Reference-Can change the referenced object", "\n\u00a0\u00a0 2.Const-Reference", "\n\u00a0\u00a0 3.Const-Pointer-", "\n\u00a0\u00a0 4.Pointer-Const-", "\n\u00a0\u00a0 5.Const-Pointer-Const-", "\n\u00a0\u00a0 CFoo Instance", "\n\u00a0\u00a0 CFoo &ReferenceToInstance=Instance;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 //1", "\n\u00a0\u00a0 const CFoo &ConstReferenceToInstance=Instance;\u00a0 //2", "\n\u00a0\u00a0 const CFoo *pConstPointer=&Instance;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 //3", "\n\u00a0\u00a0 CFoo *const pPointerConst=&Instance;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 //4", "\n\u00a0\u00a0 const CF00 *const pPointerConst=&Instance;\u00a0\u00a0\u00a0\u00a0\u00a0 //5", "\n12.What are top-down and bottom-up approach?How do you usually use them", "\n?", "\n13.Please use pseudo-code to design a set of stack operations with temp", "\nlate", "\n14.Please use pseudo-code to design a set of double linked list operati", "\nons with", "\n\u00a0\u00a0 template", "\nOptional Questions:(for extra credits)", "\n15.Please write a unix makefile for Question13", "\n16.Please explain these common sections:text,data,bss"], "title": "\u5a01\u76db\u516c\u53f8\u8f6f\u4ef6C++\u5de5\u7a0b\u5e08\u7b14\u8bd5\u9898\u9762\u8bd5\u9898"},
{"contents": ["1\u3002\u5b9a\u4e49\u7684\u89e3\u91ca\uff0cint *p, int (*p)();\u7b49 10\u5206", "\n2\u3002VC6.0 \u7684\u5355\u6b65\u6267\u884c\u7684\u5feb\u6377\u952e 5\u5206", "\n3\u3002\u7a0b\u5e8f\u8bed\u53e5\u8865\u5168 5\u5206\uff08\u8bb0\u4f4fascii\u542b\u4e49\uff09", "\n4\u3002", "\n5\u3002\u540d\u8bcd\u89e3\u91ca\uff0cRAM\uff0cROM\uff0c\u5806\u6808\uff0cEEPROM\u7b49 10\u5206", "\n\u4ee5\u4e0a\u7684\u867d\u7136\u4e0d\u786e\u5b9a\uff0c\u4f46\u662f\u5199\u51fa\u6765\u4e86\uff0c\u7535\u8def\u7684\u53ea\u597d\u786c\u7740\u5934\u76ae\u505a\u4e86\u3002", "\n6\u3002MCS8051\u5b9e\u73b03*4\u952e\u76d8\u626b\u63cf\u548c4\u4e2a\u4e03\u6bb5LED,\u753b\u7535\u8def\u56fe\u548c\u7a0b\u5e8f\u6d41\u7a0b\u56fe 10\u5206", "\n7\u3002\u4e00\u4e2a\u5e26\u51e0\u4e2a\u7535\u963b\u548c\u4e00\u4e2a\u4e09\u6781\u7ba1\u7684\u56fe\uff0c\u9009\u62e9PNP/NPN, \u9971\u548c\uff0c\u622a\u6b62\uff0c**\u72b6\u6001\u7b49 10\u5206", "\n8\u3002\u4e00\u4e2a\u9891\u7387\u4ec0\u4e48\u7535\u8def\u7684\u529f\u80fd\u548c\u5e26\u5bbd 10\u5206", "\n9\u3002", "\n10\u3002\u4e00\u4e2a\u63a8\u7406\uff0c\u4e09\u4e2a\u4eba\uff0c\u4e09\u4e2a\u5730\u65b9\uff0c\u4e09\u4e2a\u804c\u4e1a 10\u5206\uff08\u6211\u5199\u7532\u662f\u5916\u8bed\u7cfb\uff09", "\n\u51c6\u5907\u770b\u770b\u6570\u5b57\u7535\u8def\u3002", "\n1.win2k,vc++6\u4e0b\uff0c\u6307\u51fa\u4e0b\u9762\u5b9a\u4e49\u7684\u542b\u4e49\u548c\u6240\u5360\u7684\u5b57\u8282\u6570\uff1a", "\nint a;", "\nint a[];", "\nint *a;", "\nint *a[];", "\nint (*a)[];", "\nint (*a)();", "\nint *a();", "\nint **a;", "\n2. array\u548clist\u7684\u533a\u522b", "\n3. \u5217\u4e3e\u51fa\u51e0\u79cd\u8fdb\u7a0b\u8c03\u5ea6\u65b9\u6cd5\uff0c\u5e76\u8bf4\u51fa\u533a\u522b", "\n4. binary\u548cbubble\u6392\u5e8f\u7b97\u6cd5\u7684\u533a\u522b", "\n5.\u8f6f\u4ef6\u5de5\u7a0b\u7684\u6d41\u7a0b", "\n6.\u4e00\u6bb5\u7ffb\u8bd1\uff08\u82f1\u8bd1\u6c49\uff09\u5173\u4e8eCD\u548cDVD\u683c\u5f0f\u7684", "\u8fd8\u6709\u5c31\u7f16\u8bd1\u5668\u4e0e\u89e3\u91ca\u5668\u7684\u533a\u522b", "\n\u4e0d\u7528\u753b\u56fe\u51fd\u6570\u753b\u540c\u5fc3\u56ed\u5e76\u586b\u5145", "\n\u8fd8\u6709\u4e00\u9053\u6a21\u7535\u548c\u4e00\u9053\u6570\u7535\u7684\u9898easy"], "title": "\u51cc\u9633\u79d1\u6280\u80a1\u4efd\u6709\u9650\u516c\u53f8C++\u7a0b\u5e8f\u5458\u9762\u8bd5\u9898\u7b14\u8bd5\u9898"},
{"contents": ["1\u3001C\u8bed\u8a00\u91cc\u7684STRUCT\u4e0eC++\u91cc\u7684CLASS\u6709\u4f55\u533a\u522b\uff1f", "\n2\u3001\u9762\u5411\u5bf9\u8c61\u6709\u54ea\u4e9b\u7279\u6027\uff1f", "\n3\u3001\u4f55\u65f6\u4f1a\u7528\u5230\u591a\u6001\uff1f\u5982\u4f55\u5b9e\u73b0\u591a\u6001\uff1f", "\n4\u3001\u600e\u6837\u5b9e\u73b0\u865a\u51fd\u6570\uff1f", "\n5\u3001\u5b50\u7c7b\u8986\u76d6\u4e86\u57fa\u7c7b\u7684\u65b9\u5206\u6cd5\u65f6\uff0c\u5b50\u7c7b\u5982\u4f55\u8c03\u7528\u57fa\u7c7b\u7684\u65b9\u6cd5\uff1f", "\n6\u3001MFC\u548cSDK\u662f\u4ec0\u4e48\u5173\u7cfb\uff1f", "\n7\u3001\u4ec0\u4e48\u662fHDC\uff1f\u4ec0\u4e48\u662fCWnd\uff1f", "\n8\u3001\u5982\u679c\u8ba9\u4f60\u8bbe\u8ba1\u4e00\u4e2a\u5f02\u5f62\u7684\u6309\u94ae\uff0c\u4f60\u5c06\u5982\u4f55\u5b9e\u73b0\uff1f\u8c08\u4e00\u4e0b\u4f60\u7684\u601d\u8def\uff01", "\u8c08\u4e00\u4e0b\u4f60\u505a\u7684\u9879\u76ee\u7528\u5230\u4e86\u54ea\u4e9b\u6280\u672f\uff0c\u5728\u8fd9\u4e2a\u9879\u76ee\u7684\u5b9e\u73b0\u8fc7\u7a0b\u4e2d\u4f60\u9047\u5230\u4e86\u54ea\u4e9b\u95ee\u9898\uff0c\u5230\u6700\u540e\u4f60\u662f\u600e\u4e48\u6837\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\uff1f\u4ece\u8fd9\u4e2a\u9879\u76ee\u4e2d\u4f60\u5b66\u4f1a\u4e86\u4ec0\u4e48\uff1f"], "title": "\u4e0a\u6d77\u5965\u4f73\u8f6f\u4ef6C++\u9762\u8bd5\u9898\u76ee"},
{"contents": ["1.char[] ,string ,CString\u7684\u533a\u522b", "\n2.\u4ec0\u4e48\u662f\u9ed1\u76d2\u767d\u76d2\u6d4b\u8bd5", "\n3.\u5728C++\u4f7f\u7528\u4ec0\u4e48\u5e93\u7684\u60c5\u51b5\u4e0b,#include <String>\u4e0d\u7528\u52a0\u540e\u7f00.H", "\n4.\u4ec0\u4e48\u662f\u865a\u51fd\u6570?\u600e\u4e48\u4f7f\u7528?\u5982\u4f55\u5b9a\u4e49\u4e00\u4e2a\u7eaf\u865a\u51fd\u6570?", "\n5.\u7334\u5b50\u5403\u9999\u8549\u7684\u7f16\u7a0b(\u4e00\u4e2a\u7334\u5b50\u6709100\u4e2a\u9999\u8549,\u79bb\u5bb650\u7c73,\u7334\u5b50\u6700\u591a\u53ea\u80fd\u642c50\u4e2a\u9999\u8549,\u7334\u5b50\u6bcf\u8d701\u7c73\u8981\u5403\u4e00\u6839\u9999\u8549,\u95ee\u6700\u591a\u80fd\u642c\u591a\u5c11\u9999\u8549\u56de\u5bb6 )", "\n6.\u4ec0\u4e48\u662f\u9759\u6001\u51fd\u6570", "\n7.adt\u662f\u4ec0\u4e48?", "\n8.ASSERT\u7684\u7528\u9014\uff1f", "\n9.\u5728MFC\u548cWIN32 SDK\u4e2d\u5e38\u4f1a\u89c1\u5230\u4ee5\u4e0b\u6570\u636e\u7c7b\u578bBSTR\uff0cLPVOID\uff0cUINT\uff0cWNDPROCHE\u548cWPARAM \u8bf7\u95ee\u5404\u662f\u4ec0\u4e48\u7c7b\u578b\uff0c\u5404\u662f\u4ec0\u4e48\u542b\u4e49\uff1f", "\n10.\u5982\u4f55\u4f7f\u7528\u8d44\u6e90\u6587\u4ef6\u5305\u542b\u4efb\u610f\u5185\u5bb9\uff0c\u5e76\u5728\u7a0b\u5e8f\u4e2d\u4f7f\u7528\uff1f\u901a\u8fc7\u5411\u8d44\u6e90\u6587\u4ef6\u4e2d\u6dfb\u52a0\u4e00\u4e2aGIF\u6587\u4ef6\u8fdb\u884c\u4e3e\u4f8b\u8bf4\u660e\u8fc7\u7a0b\u3002", "\n11.Stdafx.h\u7684\u4f5c\u7528\u662f\u4ec0\u4e48\uff1f\u548c\u4e00\u822c\u7684\u5305\u542b\u6587\u4ef6\u6709\u4ec0\u4e48\u533a\u522b\uff1f"], "title": "\u805a\u7f51\u79d1\u6280C++\u9762\u8bd5\u9898\u7b14\u8bd5\u9898"},
{"contents": ["\u5199\u4e00\u4e2a\u51fd\u6570\u8ba1\u7b97\u5f53\u53c2\u6570\u4e3an(n\u5f88\u5927)\u65f6\u7684\u503c 1-2+3-4+5-6+7\u2026\u2026+n \uff1b\u00a0 long fn(long n)\u00a0\u00a0 {\u00a0\u00a0 \u3000if(n<=0)\u00a0\u00a0 \u3000{\u00a0\u00a0 \u3000\u3000printf(\u201cerror: n must > 0);\u00a0\u00a0 \u3000\u3000exit(1);\u00a0\u00a0 \u3000}\u00a0\u00a0 \u3000if(0==n%2)\u00a0\u00a0 \u3000\u3000return (n/2)*(-1);\u00a0\u00a0 \u3000else\u00a0\u00a0 \u3000\u3000return (n/2)*(-1)+n;\u00a0\u00a0 }\u00a0\u00a0\u00a0\u00a0 //******************************************************** \u8981\u6c42\u6211\u7528\u4e00\u79cd\u6280\u5de7\u6027\u7684\u7f16\u7a0b\u65b9\u6cd5\u6765\u7528\u4e00\u4e2a\u51fd\u6570\u5b9e\u73b0\u4e24\u4e2a\u51fd\u6570\u7684\u529f\u80fdn\u4e3a\u5982\uff1a\u00a0\u00a0 fn1(n)=n/2!+n/3!+n/4!+n/5!+n/6!\u00a0\u00a0 fn2(n)=n/5!+n/6!+n/7!+n/8!+n/9!\u00a0\u00a0 \u3000\u3000\u73b0\u5728\u7528\u4e00\u4e2a\u51fd\u6570fn(int n,int flag)\u5b9e\u73b0\uff0c\u5f53flag\u4e3a0\u65f6\uff0c\u5b9e\u73b0fn1\u529f\u80fd\uff0c\u5982\u679cflag\u4e3a1\u65f6\u5b9e\u73b0fn2\u529f\u80fd\uff01\u4ed6\u7684\u8981\u6c42\u8fd8\u662f\u6548\u7387\uff0c\u6548\u7387\uff0c\u6548\u7387\uff01\u8bf4\u5b9e\u5728\u8bdd\uff0c\u5982\u679c\u6211\u5fc3\u60c5\u597d\u7684\u8bdd\u6211\u5e94\u8be5\u80fd\u7ed9\u51fa\u4e00\u79cd\u6bd4\u8f83\u597d\u7684\u7b97\u6cd5\uff0c\u4f46\u6211\u90a3\u65f6\u771f\u7684\u6ca1\u6709\u4ec0\u4e48\u5fc3\u601d\u518d\u60f3\u4e86\uff0c\u6211\u5728\u7eb8\u4e0a\u80e1\u4e71\u753b\u4e86\u4e00\u4e9b\u8bf8\u59826!=6*5!\u7684\u516c\u5f0f\u540e\u76f4\u622a\u4e86\u5f53\u7684\u8ddf\u4ed6\u8bf4\u8981\u4ed6\u7ed9\u51fa\u4ed6\u7684\u7b54\u6848\uff01\u9762\u8bd5\u5b98\u4e5f\u6ca1\u6709\u8bf4\u4ec0\u4e48\uff0c\u7ed9\u51fa\u4e86\u4ed6\u7684\u601d\u8def\uff1a\u00a0\u00a0\u00a0 \u3000\u3000\u5b9a\u4e49\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4 float t[2][5]\u5b58\u5165[2!,3!,4!,5!,6!},{5!,6!,7!,8!,9!]\u7136\u540e\u7ed9\u51fa\u4e00\u4e2a\u5faa\u73af\uff1a\u00a0\u00a0\u00a0 for(i=0;i<6;i++)\u00a0\u00a0 {\u00a0\u00a0 \u3000temp=temp+n/t[flag];\u00a0\u00a0 }\u00a0\u00a0\u00a0 \u3000\u3000\u6700\u540e\u5f97\u5230\u8ba1\u7b97\u503c\uff01\u5475\u5475\uff0c\u5178\u578b\u7684\u7a7a\u95f4\u6362\u65f6\u95f4\u7684\u7b97\u6cd5\uff01"], "title": "RealTek\u9762\u8bd5\u9898"},
{"contents": ["\u7ed9\u5b9a\u5b57\u7b26\u4e32A\u548cB,\u8f93\u51faA\u548cB\u4e2d\u7684\u6700\u5927\u516c\u5171\u5b50\u4e32\u3002", "\n\u6bd4\u5982A=\u201daocdfe\u201d B=\u201dpmcdfa\u201d \u5219\u8f93\u51fa\u201dcdf\u201d", "\n*/", "\n//Author: azhen", "\n#include<stdio.h>", "\n#include<stdlib.h>", "\n#include<string.h>", "\nchar *commanstring(char shortstring[], char longstring[])", "\n{", "\nint i, j;", "\nchar *substring=malloc(256);", "\nif(strstr(longstring, shortstring)!=NULL)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 //\u5982\u679c\u2026\u2026\uff0c\u90a3\u4e48\u8fd4\u56deshortstring", "\nreturn shortstring;", "\nfor(i=strlen(shortstring)-1;i>0; i\u2013)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 //\u5426\u5219\uff0c\u5f00\u59cb\u5faa\u73af\u8ba1\u7b97", "\n{", "\nfor(j=0; j<=strlen(shortstring)-i; j++){", "\nmemcpy(substring, &shortstring[j], i);", "\nsubstring[i]=\u2019\\0\u2032;", "\nif(strstr(longstring, substring)!=NULL)", "\nreturn substring;", "\n}", "\n}", "\nreturn NULL;", "\n}", "main()", "\n{", "\nchar *str1=malloc(256);", "\nchar *str2=malloc(256);", "\nchar *comman=NULL;", "\ngets(str1);", "\ngets(str2);", "\nif(strlen(str1)>strlen(str2))\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 //\u5c06\u77ed\u7684\u5b57\u7b26\u4e32\u653e\u524d\u9762", "\ncomman=commanstring(str2, str1);", "\nelse", "\ncomman=commanstring(str1, str2);", "\nprintf(\u201cthe longest comman string is: %s\\n\u201d, comman);", "\n}"], "title": "\u96c5\u864e\u7b14\u8bd5\u9898(\u5b57\u7b26\u4e32\u64cd\u4f5c)"},
{"contents": ["\u4e00\u3001\u95ee\u7b54\u9898", "1.\u8bf7\u8bf4\u660e\u7c7b\u7684\u7eaf\u865a\u51fd\u6570\u3001\u865a\u51fd\u6570\u3001\u9759\u6001\u6210\u5458\u51fd\u6570\u3001\u666e\u901a\u6210\u5458\u51fd\u6570\u7684\u533a\u522b\u3002", "2.\u4ec0\u4e48\u60c5\u51b5\u4e0b\uff0c\u7c7b\u7684\u6790\u6784\u51fd\u6570\u5e94\u8be5\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff1f\u4e3a\u4ec0\u4e48\uff1f", "3.\u5bf9\u4e8e\u4e0b\u9762\u7684\u4ee3\u7801\uff1a", "class myString;", "\nmyString *pStringArray = new myString[13];", "\n\u4ee5\u4e0b\u4e24\u79cddelete\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "delete pStringArray;", "\ndelete []pStringArray;", "\n\u4e8c\u3001\u8bf4\u660e\u9898", "\u4e0b\u5217\u9898\u76ee\uff0c\u8bf7\u5199\u51fa\u8f93\u51fa\u7ed3\u679c\uff0c\u5e76\u8981\u6c42\u8bf4\u660e\u539f\u56e0\u3002", "4.\u4e0b\u9762\u7684\u51fd\u6570\u8c03\u7528\u8f93\u51fa\u4ec0\u4e48\uff1f", "void Test()", "\n{", "\nchar *p = \u201cTest\u201d;", "cout << &p << endl;", "\ncout << p << endl;", "\ncout << *p << endl;", "\ncout << p[0] << endl;", "void *q = \u201cTest\u201d;", "cout << &q << endl;", "\ncout << q << endl", "\n}", "\n5.\u6709\u5982\u4e0b\u7684\u7c7b\uff1a", "class CBase", "\n{", "\npublic:", "\nvirtual void Test() const { cout << \u201cOutput from CBase!\u201d << endl; };", "\n};", "class CDerived : public CBase", "\n{", "\npublic:", "\nvirtual void Test() const { cout << \u201cOutput from CDerived!\u201d << endl; };", "\n};", "\n\u4e0b\u9762\u662f\u4e24\u4e2a\u51fd\u6570\uff1a", "void Test1(CBase test)", "\n{", "\ntest.Test();", "\n}", "void Test2(const CBase& test)", "\n{", "\ntest.Test();", "\n}", "\n\u8bf7\u95ee\u8c03\u5982\u4e0b\u7684\u51fd\u6570\u8f93\u51fa\u4ec0\u4e48\uff1f", "void Test()", "\n{", "\nCDerived oTest;", "Test1(oTest);", "Test2(oTest);", "\n}", "\n6.\u6709\u5982\u4e0b\u7684\u7c7b\uff1a", "class B", "\n{", "\npublic:", "\nB() { cout << \u201cOutput from the constructor of class B!\u201d << endl; }", "\n~B() { cout << \u201cOutput from the destructor of class B!\u201d << endl; }", "\n};", "class D1 : public B", "\n{", "\npublic:", "\nD1(int n) { cout << \u201cThe integer value is: \u201d << n << endl; };", "\n~D1() { cout << \u201cOutput from the destructor of class D1!\u201d << endl; };", "\n};", "class D2 : public B", "\n{", "\npublic:", "\nD2(int n) { cout << \u201cThe integer value is: \u201d << n << endl; };", "\n~D2() { cout << \u201cOutput from the destructor of class D2!\u201d << endl; };", "\n};", "class CTest", "\n{", "\npublic:", "\nCTest() : d2(2), d1(1) {};", "\n~CTest() {};", "private:", "\nD1 d1;", "\nD2 d2;", "\n};", "\n\u8bf7\u95ee\u8c03\u5982\u4e0b\u7684\u51fd\u6570\u8f93\u51fa\u4ec0\u4e48\uff1f", "void Test()", "\n{", "\nCTest test;", "\n}", "7.\u6709\u5982\u4e0b\u7684\u7c7b\uff1a", "class CBase", "\n{", "\npublic:", "\nvirtual void Test() const { cout << \u201cOutput from CBase!\u201d << endl; };", "\n};", "class CDerived : public CBase", "\n{", "\npublic:", "\nvoid Test() const { cout << \u201cOutput from CDerived!\u201d << endl; };", "\n};", "\n\u8bf7\u95ee\u8c03\u5982\u4e0b\u7684\u51fd\u6570\u8f93\u51fa\u4ec0\u4e48\uff1f", "void Test()", "\n{", "\nCDerived\u00a0 d;", "CBase *pB = &d;", "\npB->Test();", "CDerived\u00a0 *pD = &d;", "\npD->Test();", "\n}", "\n8.\u5982\u679c\u628a\u4e0a\u9898\u4e2d\u7c7bCBase\u7684Test\u65b9\u6cd5\u6539\u4e3a\u975e\u865a\u51fd\u6570\uff0c\u8f93\u51fa\u53c8\u662f\u4ec0\u4e48\uff1f", "9.\u6709\u5982\u4e0b\u7684\u7c7b\uff1a", "class CBase", "\n{", "\npublic:", "\nvirtual void Test(int iTest = 0) const\u00a0 = 0;", "\n};", "class CDerived : public CBase", "\n{", "\npublic:", "\nvoid Test(int iTest = 1) const { cout << iTest << endl; };", "\n};", "\n\u8bf7\u95ee\u8c03\u5982\u4e0b\u7684\u51fd\u6570\u8f93\u51fa\u4ec0\u4e48\uff1f", "void Test()", "\n{", "\nCBase *p = new CDerived;", "p->Test();", "delete p;", "\n}", "\n\u4e09\u3001\u5206\u6790\u9898", "\u6709\u5982\u4e0b\u7684\u590d\u6570\u7c7b\uff1a", "class complex", "\n{", "\npublic:", "\ncomplex(double r = 0.0, double i = 0.0) { re = r; im = i; };", "double real() const { return re; };", "\ndouble image() const { return im; };", "private:", "\ndouble re;", "\ndouble im;", "\n};", "complex operator+(const complex& left, const complex& right)", "\n{", "\nreturn complex(left.real() + right.real(), left.image() + right.image());", "\n}", "complex operator*(const complex& left, const complex& right)", "\n{", "\nreturn complex(left.real()*right.real() \u2013 left.real()*right.image(), left.real()*right.image() + left.image()*right.real());", "\n}", "\n\u8bf7\u5206\u6790\uff1a", "10.\u6ca1\u6709\u628a\u8fd0\u7b97\u7b26\u91cd\u8f7d\u8bbe\u7f6e\u4e3a\u7c7b\u7684\u6210\u5458\u51fd\u6570\u6709\u4ec0\u4e48\u597d\u5904\uff1f", "11.\u80fd\u4e0d\u80fd\u628a\u51fd\u6570\u53c2\u6570\u524d\u9762\u7684const\u53bb\u6389\uff1f\u4e3a\u4ec0\u4e48\uff1f", "12.\u7c7b\u7684\u6210\u5458\u51fd\u6570real()\u548cimage()\u540e\u9762\u7684const\u8868\u793a\u4ec0\u4e48\uff1f\u8fd9\u6837\u5199\u6709\u4ec0\u4e48\u597d\u5904\uff1f"], "title": "\u4e00\u5957C++\u7b14\u8bd5\u9898\u9762\u8bd5\u9898"},
{"contents": ["\u5168\u5c40\u53d8\u91cf(\u5916\u90e8\u53d8\u91cf)\u7684\u8bf4\u660e\u4e4b\u524d\u518d\u51a0\u4ee5static \u5c31\u6784\u6210\u4e86\u9759\u6001\u7684\u5168\u5c40\u53d8\u91cf\u3002\u5168\u5c40\u53d8\u91cf\u672c\u8eab\u5c31\u662f\u9759\u6001\u5b58\u50a8\u65b9\u5f0f\uff0c \u9759\u6001\u5168\u5c40\u53d8\u91cf\u5f53\u7136\u4e5f\u662f\u9759\u6001\u5b58\u50a8\u65b9\u5f0f\u3002 \u8fd9\u4e24\u8005\u5728\u5b58\u50a8\u65b9\u5f0f\u4e0a\u5e76\u65e0\u4e0d\u540c\u3002\u8fd9\u4e24\u8005\u7684\u533a\u522b\u867d\u5728\u4e8e\u975e\u9759\u6001\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u662f\u6574\u4e2a\u6e90\u7a0b\u5e8f\uff0c \u5f53\u4e00\u4e2a\u6e90\u7a0b\u5e8f\u7531\u591a\u4e2a\u6e90\u6587\u4ef6\u7ec4\u6210\u65f6\uff0c\u975e\u9759\u6001\u7684\u5168\u5c40\u53d8\u91cf\u5728\u5404\u4e2a\u6e90\u6587\u4ef6\u4e2d\u90fd\u662f\u6709\u6548\u7684\u3002 \u800c\u9759\u6001\u5168\u5c40\u53d8\u91cf\u5219\u9650\u5236\u4e86\u5176\u4f5c\u7528\u57df\uff0c \u5373\u53ea\u5728\u5b9a\u4e49\u8be5\u53d8\u91cf\u7684\u6e90\u6587\u4ef6\u5185\u6709\u6548\uff0c \u5728\u540c\u4e00\u6e90\u7a0b\u5e8f\u7684\u5176\u5b83\u6e90\u6587\u4ef6\u4e2d\u4e0d\u80fd\u4f7f\u7528\u5b83\u3002\u7531\u4e8e\u9759\u6001\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u5c40\u9650\u4e8e\u4e00\u4e2a\u6e90\u6587\u4ef6\u5185\uff0c\u53ea\u80fd\u4e3a\u8be5\u6e90\u6587\u4ef6\u5185\u7684\u51fd\u6570\u516c\u7528\uff0c \u56e0\u6b64\u53ef\u4ee5\u907f\u514d\u5728\u5176\u5b83\u6e90\u6587\u4ef6\u4e2d\u5f15\u8d77\u9519\u8bef\u3002", "\n\u4ece\u4ee5\u4e0a\u5206\u6790\u53ef\u4ee5\u770b\u51fa\uff0c \u628a\u5c40\u90e8\u53d8\u91cf\u6539\u53d8\u4e3a\u9759\u6001\u53d8\u91cf\u540e\u662f\u6539\u53d8\u4e86\u5b83\u7684\u5b58\u50a8\u65b9\u5f0f\u5373\u6539\u53d8\u4e86\u5b83\u7684\u751f\u5b58\u671f\u3002\u628a\u5168\u5c40\u53d8\u91cf\u6539\u53d8\u4e3a\u9759\u6001\u53d8\u91cf\u540e\u662f\u6539\u53d8\u4e86\u5b83\u7684\u4f5c\u7528\u57df\uff0c \u9650\u5236\u4e86\u5b83\u7684\u4f7f\u7528\u8303\u56f4\u3002", "\nstatic\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u4f5c\u7528\u57df\u4e0d\u540c\u3002\u4ec5\u5728\u672c\u6587\u4ef6\u3002\u53ea\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4e2d\u4f7f\u7528\u7684\u51fd\u6570\u5e94\u8be5\u8bf4\u660e\u4e3a\u5185\u90e8\u51fd\u6570(static)\uff0c\u5185\u90e8\u51fd\u6570\u5e94\u8be5\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4e2d\u8bf4\u660e\u548c\u5b9a\u4e49\u3002\u5bf9\u4e8e\u53ef\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4ee5\u5916\u4f7f\u7528\u7684\u51fd\u6570\uff0c\u5e94\u8be5\u5728\u4e00\u4e2a\u5934\u6587\u4ef6\u4e2d\u8bf4\u660e\uff0c\u8981\u4f7f\u7528\u8fd9\u4e9b\u51fd\u6570\u7684\u6e90\u6587\u4ef6\u8981\u5305\u542b\u8fd9\u4e2a\u5934\u6587\u4ef6", "\nstatic\u5168\u5c40\u53d8\u91cf\u4e0e\u666e\u901a\u7684\u5168\u5c40\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u5168\u5c40\u53d8\u91cf\u53ea\u521d\u4f7f\u5316\u4e00\u6b21\uff0c\u9632\u6b62\u5728\u5176\u4ed6\u6587\u4ef6\u5355\u5143\u4e2d\u88ab\u5f15\u7528;", "\nstatic\u5c40\u90e8\u53d8\u91cf\u548c\u666e\u901a\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u5c40\u90e8\u53d8\u91cf\u53ea\u88ab\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u4e0b\u4e00\u6b21\u4f9d\u636e\u4e0a\u4e00\u6b21\u7ed3\u679c\u503c\uff1b", "\nstatic\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u51fd\u6570\u5728\u5185\u5b58\u4e2d\u53ea\u6709\u4e00\u4efd\uff0c\u666e\u901a\u51fd\u6570\u5728\u6bcf\u4e2a\u88ab\u8c03\u7528\u4e2d\u7ef4\u6301\u4e00\u4efd\u62f7\u8d1d"], "title": "static\u5168\u5c40\u53d8\u91cf\u4e0e\u666e\u901a\u7684\u5168\u5c40\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1fstatic\u5c40\u90e8\u53d8\u91cf\u548c\u666e\u901a\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1fstatic\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u6709\u4ec0\u4e48\u533a\u522b\uff1f"},
{"contents": ["#define MAX 255", "\nint main()", "\n{", "\nunsigned char A[MAX],i;//i\u88ab\u5b9a\u4e49\u4e3aunsigned char", "\nfor (i=0;i<=MAX;i++)", "\nA[i]=i;", "\n}", "\n\u89e3\u7b54\uff1a\u6b7b\u5faa\u73af\u52a0\u6570\u7ec4\u8d8a\u754c\u8bbf\u95ee\uff08C/C++\u4e0d\u8fdb\u884c\u6570\u7ec4\u8d8a\u754c\u68c0\u67e5\uff09", "\nMAX=255", "\n\u6570\u7ec4A\u7684\u4e0b\u6807\u8303\u56f4\u4e3a:0..MAX-1,\u8fd9\u662f\u5176\u4e00..", "\n\u5176\u4e8c.\u5f53i\u5faa\u73af\u5230255\u65f6,\u5faa\u73af\u5185\u6267\u884c:", "\nA[255]=255;", "\n\u8fd9\u53e5\u672c\u8eab\u6ca1\u6709\u95ee\u9898..\u4f46\u662f\u8fd4\u56defor (i=0;i<=MAX;i++)\u8bed\u53e5\u65f6,", "\n\u7531\u4e8eunsigned char\u7684\u53d6\u503c\u8303\u56f4\u5728(0..255),i++\u4ee5\u540ei\u53c8\u4e3a0\u4e86..\u65e0\u9650\u5faa\u73af\u4e0b\u53bb.", "\nstruct name1{", "\nchar\u00a0 str;1\u00a0\u00a0 short x;2", "\nint\u00a0\u00a0 num;", "\n}", "\nstruct name2{", "\nchar str;0", "\nint num;4", "\nshort x;6", "\n}", "\nsizeof(struct name1)=8,sizeof(struct name2)=12", "\n\u5728\u7b2c\u4e8c\u4e2a\u7ed3\u6784\u4e2d\uff0c\u4e3a\u4fdd\u8bc1num\u6309\u56db\u4e2a\u5b57\u8282\u5bf9\u9f50\uff0cchar\u540e\u5fc5\u987b\u7559\u51fa3\u5b57\u8282\u7684\u7a7a\u95f4\uff1b\u540c\u65f6\u4e3a\u4fdd\u8bc1\u6574\u4e2a\u7ed3\u6784\u7684\u81ea\u7136\u5bf9\u9f50\uff08\u8fd9\u91cc\u662f4\u5b57\u8282\u5bf9\u9f50\uff09\uff0c\u5728x\u540e\u8fd8\u8981\u8865\u9f502\u4e2a\u5b57\u8282\uff0c\u8fd9\u6837\u5c31\u662f12\u5b57\u8282\u3002", "\nintel\uff1a", "\nA.c \u548cB.c\u4e24\u4e2ac\u6587\u4ef6\u4e2d\u4f7f\u7528\u4e86\u4e24\u4e2a\u76f8\u540c\u540d\u5b57\u7684static\u53d8\u91cf,\u7f16\u8bd1\u7684\u65f6\u5019\u4f1a\u4e0d\u4f1a\u6709\u95ee\u9898?\u8fd9\u4e24\u4e2astatic\u53d8\u91cf\u4f1a\u4fdd\u5b58\u5230\u54ea\u91cc\uff08\u6808\u8fd8\u662f\u5806\u6216\u8005\u5176\u4ed6\u7684\uff09?", "\nstatic\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u8868\u660e\u8fd9\u4e2a\u53d8\u91cf\u4ec5\u5728\u672c\u6a21\u5757\u4e2d\u6709\u610f\u4e49\uff0c\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u6a21\u5757\u3002", "\n\u4ed6\u4eec\u90fd\u653e\u5728\u6570\u636e\u533a\uff0c\u4f46\u662f\u7f16\u8bd1\u5668\u5bf9\u4ed6\u4eec\u7684\u547d\u540d\u662f\u4e0d\u540c\u7684\u3002", "\n\u5982\u679c\u8981\u4f7f\u53d8\u91cf\u5728\u5176\u4ed6\u6a21\u5757\u4e5f\u6709\u610f\u4e49\u7684\u8bdd\uff0c\u9700\u8981\u4f7f\u7528extern\u5173\u952e\u5b57\u3002", "\nstruct s1", "\n{", "\nint i: 8;", "\nint j: 4;", "\nint a: 3;", "\ndouble b;", "\n};", "\nstruct s2", "\n{", "\nint i: 8;", "\nint j: 4;", "\ndouble b;", "\nint a:3;", "\n};", "\nprintf(\u201csizeof(s1)= %d\\n\u201d, sizeof(s1));", "\nprintf(\u201csizeof(s2)= %d\\n\u201d, sizeof(s2));", "\nresult: 16, 24", "\n\u7b2c\u4e00\u4e2astruct s1", "\n{", "\nint i: 8;", "\nint j: 4;", "\nint a: 3;", "\ndouble b;", "\n};", "\n\u7406\u8bba\u4e0a\u662f\u8fd9\u6837\u7684\uff0c\u9996\u5148\u662fi\u5728\u76f8\u5bf90\u7684\u4f4d\u7f6e\uff0c\u53608\u4f4d\u4e00\u4e2a\u5b57\u8282\uff0c\u7136\u540e\uff0cj\u5c31\u5728\u76f8\u5bf9\u4e00\u4e2a\u5b57\u8282\u7684\u4f4d\u7f6e\uff0c\u7531\u4e8e\u4e00\u4e2a\u4f4d\u7f6e\u7684\u5b57\u8282\u6570\u662f4\u4f4d\u7684\u500d\u6570\uff0c\u56e0\u6b64\u4e0d\u7528\u5bf9\u9f50\uff0c\u5c31\u653e\u5728\u90a3\u91cc\u4e86\uff0c\u7136\u540e\u662fa\uff0c\u8981\u57283\u4f4d\u7684\u500d\u6570\u5173\u7cfb\u7684\u4f4d\u7f6e\u4e0a\uff0c\u56e0\u6b64\u8981\u79fb\u4e00\u4f4d\uff0c\u572815\u4f4d\u7684\u4f4d\u7f6e\u4e0a\u653e\u4e0b\uff0c\u76ee\u524d\u603b\u5171\u662f18\u4f4d\uff0c\u6298\u7b97\u8fc7\u6765\u662f2\u5b57\u82822\u4f4d\u7684\u6837\u5b50\uff0c\u7531\u4e8edouble\u662f8\u5b57\u8282\u7684\uff0c\u56e0\u6b64\u8981\u5728\u76f8\u5bf90\u8981\u662f8\u4e2a\u5b57\u8282\u7684\u4f4d\u7f6e\u4e0a\u653e\u4e0b\uff0c\u56e0\u6b64\u4ece18\u4f4d\u5f00\u59cb\u52308\u4e2a\u5b57\u8282\u4e4b\u95f4\u7684\u4f4d\u7f6e\u88ab\u5ffd\u7565\uff0c\u76f4\u63a5\u653e\u57288\u5b57\u8282\u7684\u4f4d\u7f6e\u4e86\uff0c\u56e0\u6b64\uff0c\u603b\u5171\u662f16\u5b57\u8282\u3002", "\n\u7b2c\u4e8c\u4e2a\u6700\u540e\u4f1a\u5bf9\u7167\u662f\u4e0d\u662f\u7ed3\u6784\u4f53\u5185\u6700\u5927\u6570\u636e\u7684\u500d\u6570\uff0c\u4e0d\u662f\u7684\u8bdd\uff0c\u4f1a\u8865\u6210\u662f\u6700\u5927\u6570\u636e\u7684\u500d\u6570"], "title": "\u4e0b\u9762\u8fd9\u4e2a\u7a0b\u5e8f\u6267\u884c\u540e\u4f1a\u6709\u4ec0\u4e48\u9519\u8bef\u6216\u8005\u6548\u679c"},
{"contents": ["int strlen(const char *str)", "\n{", "\nassert(str != NULL);", "\nint len = 0;", "\nwhile((*str++) != \u2018\\0\u2032)", "\nlen++;", "\nreturn len;", "\n}", "\n\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff1a", "\nint strlen(const char *str)", "\n{", "\nassert(str);", "\nconst char *p = str;", "\nwhile(*p++); /*use addresses to count the length of str*/", "\nreturn p \u2013 str \u2013 1;", "\n}", "\n\u7b2c\u4e09\u79cd\u65b9\u6cd5\uff1a", "\nint strlen(const char* str)", "\n{", "\nif (str[0] == \u2018\\0\u2032)", "\nreturn 0;", "\nelse", "\nreturn strlen((char *)(&str[0]+1))+1;\u00a0 /*iteration*/", "\n}", "\nANSI C\u6807\u51c6\u4e2d\u7684\u8bf4\u6cd5\u6458\u5f55\u5982\u4e0b: (1)\u5f53\u4e00\u4e2a\u6570\u7ec4\u6807\u8bc6\u7b26\u51fa\u73b0\u5728\u8868\u8fbe\u5f0f\u4e2d\uff0c\u8fd9\u4e2a\u6807\u8bc6\u7b26\u7684\u7c7b\u578b\u5c31\u4ece\u201c\u67d0\u79cd\u7c7b\u578bT\u7684\u6570\u7ec4\u201d\u8f6c\u6362\u6210\u201c\u6307\u5411\u7c7b\u578bT\u7684\u6307\u9488\u201d\uff0c\u800c\u4e14\u5b83\u7684\u503c\u5c31\u7b49\u4e8e\u6570\u7ec4\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u5730\u5740\u3002\u4f46\u662f\u5f53\u6570\u7ec4\u6807\u8bc6\u7b26\u88ab\u7528\u4f5csizeof\u548c\u53d6\u5740(&)\u64cd\u4f5c\u7684\u64cd\u4f5c\u6570\u65f6\uff0csizeof\u8fd4\u56de\u7684\u662f\u6574\u4e2a\u6570\u7ec4\u7684\u5927\u5c0f\uff0c\u800c\u53d6\u5740\u64cd\u4f5c\u8fd4\u56de\u7684\u662f\u6307\u5411\u6570\u7ec4\u7684\u6307\u9488(\u800c\u4e0d\u662f\u6307\u5411\u4e00\u4e2a\u503c\u4e3a\u6570\u7ec4\u5934\u5143\u7d20\u5730\u5740\u7684\u6307\u9488\u7684\u6307\u9488)\u3002(2)\u4e0b\u5217\u8868\u8fbe\u5f0f\u4e0d\u80fd\u4ea7\u751flvalue: \u6570\u7ec4\u540d\uff0c\u51fd\u6570\uff0c\u679a\u4e3e\u5e38\u91cf\uff0c\u8d4b\u503c\u8868\u8fbe\u5f0f\uff0c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u51fd\u6570\u8c03\u7528\u3002"], "title": "strlen\u7684\u51e0\u79cd\u4e0d\u540c\u5b9e\u73b0\u65b9\u6cd5"},
{"contents": ["1\u3001\u5934\u6587\u4ef6\u4e2d\u7684 ifndef/define/endif \u5e72\u4ec0\u4e48\u7528\uff1f\uff085\u5206\uff09", "\u00a0", "2\u3001#include\u00a0 <filename.h>\u00a0\u00a0 \u548c\u00a0 #include\u00a0 \u201cfilename.h\u201d \u6709\u4ec0\u4e48\u533a\u522b\uff1f\uff085\u5206\uff09", "\u00a0", "3\u3001const \u6709\u4ec0\u4e48\u7528\u9014\uff1f\uff08\u8bf7\u81f3\u5c11\u8bf4\u660e\u4e24\u79cd\uff09\uff085\u5206\uff09", "\u00a0", "4\u3001\u5728C++ \u7a0b\u5e8f\u4e2d\u8c03\u7528\u88ab C\u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u7684\u51fd\u6570\uff0c\u4e3a\u4ec0\u4e48\u8981\u52a0 extern \u201cC\u201d\uff1f \uff085\u5206\uff09", "\u00a0", "\u00a0"], "title": "C++\u7684\u51e0\u4e2a\u9762\u8bd5\u9898 \u9644\u5e26\u7b54\u6848"},
{"contents": ["\u5b9e\u9645\u4e0a\u6570\u7ec4\u540d\u6c38\u8fdc\u90fd\u4e0d\u4f1a\u662f\u6307\u9488\uff01\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u6307\u9488\u662fC\u8bed\u8a00\u5177\u6709\u4f4e\u7ea7\u8bed\u8a00\u7279\u5f81\u7684\u6700\u76f4\u63a5\u7684\u8bc1\u636e\u3002\u5728\u6c47\u7f16\u8bed\u8a00\u91cc\u9762\uff0c\u6307\u9488\u7684\u6982\u5ff5\u968f\u5904\u53ef\u89c1\u3002\u6bd4\u5982SP\uff0cSP\u5bc4\u5b58\u5668\u53c8\u53eb\u5806\u6808\u6307\u9488\uff0c\u5b83\u7684\u503c\u662f\u5730\u5740\uff0c\u7531\u4e8eSP\u4fdd\u5b58\u7684\u662f\u5730\u5740\uff0c\u5e76\u4e14SP\u7684\u503c\u662f\u4e0d\u65ad\u53d8\u5316\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u770b\u4f5c\u4e00\u4e2a\u53d8\u91cf\uff0c\u800c\u4e14\u662f\u4e00\u4e2a\u5730\u5740\u53d8\u91cf\u3002\u5730\u5740\u4e5f\u662fC\u8bed\u8a00\u6307\u9488\u7684\u503c\uff0cC\u8bed\u8a00\u7684\u6307\u9488\u8ddfSP\u8fd9\u6837\u7684\u5bc4\u5b58\u5668\u867d\u7136\u4e0d\u5b8c\u5168\u4e00\u6837\uff0c\u4f46\u539f\u7406\u5374\u662f\u76f8\u901a\u7684\u3002C\u8bed\u8a00\u7684\u6307\u9488\u4e5f\u662f\u4e00\u79cd\u5730\u5740\u53d8\u91cf\uff0cC89\u660e\u786e\u89c4\u5b9a\uff0c\u6307\u9488\u662f\u4e00\u4e2a\u4fdd\u5b58\u5bf9\u8c61\u5730\u5740\u7684\u53d8\u91cf\u3002\u8fd9\u91cc\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6307\u9488\u8ddf\u5730\u5740\u6982\u5ff5\u7684\u4e0d\u540c\uff0c\u6307\u9488\u662f\u4e00\u79cd\u5730\u5740\u53d8\u91cf\uff0c\u901a\u5e38\u4e5f\u53eb\u6307\u9488\u53d8\u91cf\uff0c\u7edf\u79f0\u6307\u9488\u3002\u800c\u5730\u5740\u5219\u662f\u5730\u5740\u53d8\u91cf\u7684\u503c\u3002", "\n\u770b\u5230\u8fd9\u91cc\uff0c\u4e5f\u8bb8\u4f60\u4f1a\u89c9\u5f97\uff0c\u8fd9\u4e48\u7b80\u5355\u7684\u4e1c\u897f\u8fd8\u7528\u4f60\u6765\u8bf4\u5417\uff1f\u7684\u786e\uff0c\u5bf9\u4e8ep\u4e0e&p\u6765\u8bf4\uff0c99%\u7684\u4eba\u90fd\u80fd\u57280.1\u79d2\u5185\u8131\u53e3\u800c\u51fa\u8c01\u662f\u6307\u9488\uff0c\u8c01\u662f\u5730\u5740\uff0c\u4f46\u662f\uff0c\u53c8\u6709\u591a\u5c11\u4eba\u5728\u4f7f\u7528\u6307\u9488\u7684\u8fc7\u7a0b\u4e2d\u80fd\u591f\u59cb\u7ec8\u5982\u4e00\u6beb\u4e0d\u52a8\u6447\u5730\u9075\u5faa\u8fd9\u4e24\u4e2a\u6982\u5ff5\u5462\uff1f\u4e0d\u5c11\u4eba\u4f7f\u7528\u6307\u9488\u7684\u65f6\u5019\u5c31\u4f1a\u81ea\u89c9\u6216\u4e0d\u81ea\u89c9\u5730\u628a\u6307\u9488\u548c\u5730\u5740\u4e24\u4e2a\u6982\u5ff5\u6df7\u6dc6\u5f97\u4e00\u584c\u7cca\u6d82\u4e86\uff0c\u6570\u7ec4\u540d\u7684\u6ee5\u7528\u5c31\u662f\u4e00\u4e2a\u6d3b\u751f\u751f\u7684\u4f8b\u5b50\u3002\u8fd9\u4e00\u70b9\u751a\u81f3\u8fde\u4e00\u4e9b\u7ecf\u5178\u8457\u4f5c\u4e5f\u6ca1\u80fd\u907f\u514d\u3002", "\n\u4e0d\u8fc7\u4e5f\u4e0d\u80fd\u5168\u602a\u4f60\u81ea\u5df1\uff0c\u7b14\u8005\u8ba4\u4e3a\u67d0\u4e9b\u56fd\u5185\u6559\u6750\u5e94\u8be5\u627f\u62c5\u6700\u5927\u7684\u8d23\u4efb\u3002\u8fd9\u4e9b\u6559\u6750\u4e00\u5f00\u59cb\u5c31\u6ca1\u6709\u7ed9\u8bfb\u8005\u597d\u597d\u5730\u5206\u6e05\u6307\u9488\u4e0e\u5730\u5740\u7684\u533a\u522b\uff0c\u76f8\u53cd\u8fd8\u5728\u8bb2\u8ff0\u7684\u8fc7\u7a0b\u4e2d\u6709\u610f\u65e0\u610f\u5730\u6df7\u7528\u8fd9\u4e24\u4e2a\u6982\u5ff5\u3002\u66f4\u6709\u751a\u8005\uff0c\u751a\u81f3\u5728\u4e66\u4e2d\u660e\u8a00\u6307\u9488\u5c31\u662f\u5730\u5740\uff01\u8bf4\u8fd9\u8bdd\u7684\u5bb6\u4f19\u6700\u5e94\u8be5\u5728C\u8bed\u8a00\u8fd9\u4e2a\u5730\u56fe\u4e0a\u62b9\u6389\uff0c\u5475\u5475\u3002\u4e24\u4e2a\u6708\u524d\u6211\u5728\u8d2d\u4e66\u4e2d\u5fc3\u968f\u624b\u7ffb\u5f00\u4e86\u67d0\u4e2a\u4f5c\u8005\u4e3b\u7f16\u7684\u4e00\u672c\u88ab\u51a0\u4ee5\u56fd\u5bb6\u201c\u5341\u4e94\u201d\u89c4\u5212\u91cd\u70b9\u7814\u7a76\u9879\u76ee\u7684\u4e66\uff0c\u4e66\u91cc\u5c31\u662f\u8fd9\u4e48\u5199\u7684\u3002\u5f53\u65f6\u7b14\u8005\u5c31\u611f\u6168\uff1a\u4e0d\u77e5\u9053\u53c8\u8981\u6709\u591a\u5c11\u4eba\u7684\u601d\u60f3\u88ab\u8fd9\u5bb6\u4f19\u201c\u5f3a\u5978\u201d\u4e86\u3002", "\n\u5b9e\u9645\u4e0a\uff0c\u5730\u5740\u8fd9\u4e2a\u4e1c\u897f\uff0c\u672c\u6765\u5c31\u662f\u4e00\u79cd\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u672c\u5e94\u8be5\u5728\u4ecb\u7ecd\u6574\u6570\u3001\u6d6e\u70b9\u3001\u5b57\u7b26\u7b49\u57fa\u672c\u7c7b\u578b\u7684\u65f6\u5019\u628a\u5730\u5740\u663e\u5f0f\u5730\u653e\u5728\u4e00\u8d77\u8ba8\u8bba\uff0c\u8fd9\u6837\u5728\u540e\u9762\u4ecb\u7ecd\u6307\u9488\u4e0e\u6570\u7ec4\u7684\u65f6\u5019\u5c31\u80fd\u907f\u514d\u8bb8\u591a\u8bef\u89e3\u3002\u53ef\u60dc\u4e0d\u5c11\u6559\u6750\u6216\u8005\u6839\u672c\u6ca1\u6709\u8c08\u53ca\uff0c\u6216\u8005\u5c31\u7b97\u63d0\u8d77\u8fd9\u4e2a\u7c7b\u578b\u4e5f\u7528\u4e86\u6307\u9488\u7c7b\u578b\u8fd9\u4e2a\u5b57\u773c\u3002\u8fd9\u5c31\u9519\u4e86\uff0c\u6307\u9488\u4e0d\u662f\u7c7b\u578b\uff0c\u771f\u6b63\u7684\u7c7b\u578b\u662f\u5730\u5740\uff0c\u6307\u9488\u53ea\u662f\u5b58\u50a8\u5730\u5740\u8fd9\u79cd\u6570\u636e\u7c7b\u578b\u7684\u53d8\u91cf\uff01\u6253\u4e2a\u6bd4\u65b9\uff0c\u5bf9\u4e8e", "\nint i=10\uff1b", "\n10\u662f\u6574\u6570\uff0c\u800ci\u662f\u5b58\u50a8\u6574\u6570\u7684\u53d8\u91cf\uff0c\u6307\u9488\u5c31\u597d\u6bd4\u8fd9\u4e2ai\uff0c\u5730\u5740\u5c31\u597d\u6bd4\u90a3\u4e2a10\u3002\u6307\u9488\u80fd\u591f\u8fdb\u884c\u52a0\u51cf\u6cd5\uff0c\u539f\u56e0\u5e76\u4e0d\u662f\u56e0\u4e3a\u5b83\u662f\u6307\u9488\uff0c\u52a0\u51cf\u6cd5\u5219\u4e0d\u662f\u5c5e\u4e8e\u6307\u9488\u8fd9\u79cd\u53d8\u91cf\u7684\uff0c\u800c\u662f\u5730\u5740\u8fd9\u79cd\u6570\u636e\u7c7b\u578b\u7684\u672c\u80fd\uff0c\u6b63\u662f\u56e0\u4e3a\u5730\u5740\u5177\u6709\u52a0\u51cf\u7684\u80fd\u529b\uff0c\u6240\u4ee5\u624d\u4f7f\u6307\u9488\u4f5c\u4e3a\u5b58\u653e\u5730\u5740\u7684\u53d8\u91cf\u80fd\u591f\u8fdb\u884c\u52a0\u51cf\u8fd0\u7b97\u3002\u8fd9\u8ddf\u6574\u6570\u53d8\u91cf\u56e0\u4e3a\u6574\u6570\u80fd\u591f\u8fdb\u884c\u52a0\u51cf\u4e58\u9664\u56e0\u800c\u5b83\u4e5f\u80fd\u8fdb\u884c\u52a0\u51cf\u4e58\u9664\u4e00\u4e2a\u9053\u7406\u3002", "\u90a3\u4e48\u6570\u7ec4\u540d\u53c8\u5e94\u8be5\u5982\u4f55\u7406\u89e3\u5462\uff1f\u7528\u6765\u5b58\u653e\u6570\u7ec4\u7684\u533a\u57df\u662f\u4e00\u5757\u5728\u6808\u4e2d\u9759\u6001\u5206\u914d\u7684\u5185\u5b58(\u975estatic)\uff0c\u800c\u6570\u7ec4\u540d\u662f\u8fd9\u5757\u5185\u5b58\u7684\u4ee3\u8868\uff0c\u5b83\u88ab\u5b9a\u4e49\u4e3a\u8fd9\u5757\u5185\u5b58\u7684\u9996\u5730\u5740\u3002\u8fd9\u5c31\u8bf4\u660e\u4e86\u6570\u7ec4\u540d\u662f\u4e00\u4e2a\u5730\u5740\uff0c\u800c\u4e14\uff0c\u8fd8\u662f\u4e00\u4e2a\u4e0d\u53ef\u4fee\u6539\u7684\u5e38\u91cf\uff0c\u5b8c\u6574\u5730\u8bf4\uff0c\u5c31\u662f\u4e00\u4e2a\u5730\u5740\u5e38\u91cf\u3002\u6570\u7ec4\u540d\u8ddf\u679a\u4e3e\u5e38\u91cf\u7c7b\u4f3c\uff0c\u90fd\u5c5e\u4e8e\u7b26\u53f7\u5e38\u91cf\u3002\u6570\u7ec4\u540d\u8fd9\u4e2a\u7b26\u53f7\uff0c\u5c31\u4ee3\u8868\u4e86\u90a3\u5757\u5185\u5b58\u7684\u9996\u5730\u5740\u3002\u6ce8\u610f\u4e86\uff01\u4e0d\u662f\u6570\u7ec4\u540d\u8fd9\u4e2a\u7b26\u53f7\u7684\u503c\u662f\u90a3\u5757\u5185\u5b58\u7684\u9996\u5730\u5740\uff0c\u800c\u662f\u6570\u7ec4\u540d\u8fd9\u4e2a\u7b26\u53f7\u672c\u8eab\u5c31\u4ee3\u8868\u4e86\u9996\u5730\u5740\u8fd9\u4e2a\u5730\u5740\u503c\uff0c\u5b83\u5c31\u662f\u8fd9\u4e2a\u5730\u5740\uff0c\u8fd9\u5c31\u662f\u6570\u7ec4\u540d\u5c5e\u4e8e\u7b26\u53f7\u5e38\u91cf\u7684\u610f\u4e49\u6240\u5728\u3002\u7531\u4e8e\u6570\u7ec4\u540d\u662f\u4e00\u79cd\u7b26\u53f7\u5e38\u91cf\uff0c\u56e0\u6b64\u5b83\u662f\u4e00\u4e2a\u53f3\u503c\uff0c\u800c\u6307\u9488\uff0c\u4f5c\u4e3a\u53d8\u91cf\uff0c\u5374\u662f\u4e00\u4e2a\u5de6\u503c\uff0c\u4e00\u4e2a\u53f3\u503c\u6c38\u8fdc\u90fd\u4e0d\u4f1a\u662f\u5de6\u503c\uff0c\u90a3\u4e48\uff0c\u6570\u7ec4\u540d\u6c38\u8fdc\u90fd\u4e0d\u4f1a\u662f\u6307\u9488\uff01\u4e0d\u7ba1\u4ec0\u4e48\u8bdd\uff0c\u53ea\u8981\u8bf4\u6570\u7ec4\u540d\u662f\u4e00\u4e2a\u6307\u9488\u7684\uff0c\u90fd\u662f\u9519\u8bef\u7684\uff01\u5c31\u8c61\u628a\u521a\u624dint i=10\u4f8b\u5b50\u4e2d\u768410\u8bf4\u6210\u662f\u6574\u6570\u53d8\u91cf\u4e00\u6837\uff0c\u5728\u6700\u57fa\u672c\u7684\u7acb\u8db3\u70b9\u4e0a\u5c31\u5df2\u7ecf\u5b8c\u9519\u4e86\u3002", "\n\u603b\u4e4b\u8981\u7262\u7262\u8bb0\u4f4f\uff0c\u6570\u7ec4\u540d\u662f\u4e00\u4e2a\u5730\u5740\uff0c\u4e00\u4e2a\u7b26\u53f7\u5730\u5740\u5e38\u91cf\uff0c\u4e0d\u662f\u4e00\u4e2a\u53d8\u91cf\uff0c\u66f4\u4e0d\u662f\u4e00\u4e2a\u4f5c\u4e3a\u53d8\u91cf\u7684\u6307\u9488\uff01", "\n\u5728\u6570\u7ec4\u540d\u5e76\u975e\u6307\u9488\u8fd9\u4e2a\u95ee\u9898\u4e0a\uff0c\u901a\u5e38\u4f1a\u4ea7\u751f\u4e24\u79cd\u7591\u95ee\uff1a", "\n1\u3002\u4f5c\u4e3a\u5f62\u53c2\u7684\u6570\u7ec4\uff0c\u4e0d\u662f\u4f1a\u88ab\u8f6c\u6362\u4e3a\u6307\u9488\u5417\uff1f", "\n2\u3002\u5982\u679c\u5f62\u53c2\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u6570\u7ec4\u540d\u53ef\u4ee5\u4f5c\u4e3a\u5b9e\u53c2\u4f20\u9012\u7ed9\u90a3\u4e2a\u6307\u9488\uff0c\u96be\u9053\u4e0d\u662f\u8bf4\u660e\u4e86\u6570\u7ec4\u540d\u662f\u4e00\u4e2a\u6307\u9488\u5417\uff1f", "\n\u9996\u5148\uff0cC\u8bed\u8a00\u4e4b\u6240\u4ee5\u628a\u4f5c\u4e3a\u5f62\u53c2\u7684\u6570\u7ec4\u770b\u4f5c\u6307\u9488\uff0c\u5e76\u975e\u56e0\u4e3a\u6570\u7ec4\u540d\u53ef\u4ee5\u8f6c\u6362\u4e3a\u6307\u9488\uff0c\u800c\u662f\u56e0\u4e3a\u5f53\u521dANSI\u59d4\u5458\u4f1a\u5236\u5b9a\u6807\u51c6\u7684\u65f6\u5019\uff0c\u4eceC\u7a0b\u5e8f\u7684\u6267\u884c\u6548\u7387\u51fa\u53d1\uff0c\u4e0d\u4e3b\u5f20\u53c2\u6570\u4f20\u9012\u65f6\u590d\u5236\u6574\u4e2a\u6570\u7ec4\uff0c\u800c\u662f\u4f20\u9012\u6570\u7ec4\u7684\u9996\u5730\u5740\uff0c\u7531\u88ab\u8c03\u51fd\u6570\u6839\u636e\u8fd9\u4e2a\u9996\u5730\u5740\u5904\u7406\u6570\u7ec4\u4e2d\u7684\u5185\u5bb9\u3002\u90a3\u4e48\u8c01\u80fd\u627f\u62c5\u8fd9\u79cd\u201c\u8f6c\u6362\u201d\u5462\uff1f\u8fd9\u4e2a\u4e3b\u4f53\u5fc5\u987b\u5177\u6709\u5730\u5740\u6570\u636e\u7c7b\u578b\uff0c\u540c\u65f6\u5e94\u8be5\u662f\u4e00\u4e2a\u53d8\u91cf\uff0c\u6ee1\u8db3\u8fd9\u4e24\u4e2a\u6761\u4ef6\u7684\uff0c\u975e\u6307\u9488\u83ab\u5c5e\u4e86\u3002\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u79cd\u201c\u8f6c\u6362\u201d\u53ea\u662f\u4e00\u79cd\u903b\u8f91\u770b\u6cd5\u4e0a\u7684\u8f6c\u6362\uff0c\u5b9e\u9645\u5f53\u4e2d\u5e76\u6ca1\u6709\u53d1\u751f\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u6ca1\u6709\u4efb\u4f55\u6570\u7ec4\u5b9e\u4f53\u88ab\u8f6c\u6362\u4e3a\u6307\u9488\u5b9e\u4f53\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5927\u5bb6\u4e0d\u8981\u88ab\u201c\u8f6c\u6362\u201d\u8fd9\u4e2a\u5b57\u773c\u7ed9\u8499\u853d\u4e86\uff0c\u8f6c\u6362\u5e76\u4e0d\u610f\u5473\u7740\u76f8\u540c\uff0c\u5b9e\u9645\u4e0a\uff0c\u6b63\u662f\u56e0\u4e3a\u4e0d\u76f8\u540c\u624d\u4f1a\u6709\u8f6c\u6362\uff0c\u76f8\u540c\u7684\u8bdd\u8fd8\u8f6c\u6765\u5e72\u5417\uff1f\u8fd9\u597d\u6bd4\u73b0\u5728\u793e\u4f1a\u4e0a\u6709\u4e0d\u5c11\u4eba\u201c\u53d8\u6027\u201d\uff0c\u4e00\u4e2a\u7537\u4eba\u53ef\u4ee5\u201c\u8f6c\u6362\u201d\u4e3a\u4e00\u4e2a\u5973\u4eba\uff0c\u90a3\u662f\u4e0d\u662f\u5e94\u8be5\u8ba4\u4e3a\u7537\u4eba\u8ddf\u5973\u4eba\u662f\u76f8\u540c\u7684\uff1f\u8fd9\u4e0d\u662f\u7b11\u8bdd\u4e48\u3002", "\n\u7b2c\u4e8c\uff0c\u51fd\u6570\u53c2\u6570\u4f20\u9012\u7684\u8fc7\u7a0b\uff0c\u672c\u8d28\u4e0a\u662f\u4e00\u79cd\u8d4b\u503c\u8fc7\u7a0b\u3002C89\u5bf9\u51fd\u6570\u8c03\u7528\u662f\u8fd9\u6837\u89c4\u5b9a\u7684\uff1a\u51fd\u6570\u8c03\u7528\u7531\u4e00\u4e2a\u540e\u7f00\u8868\u8fbe\u5f0f\uff08\u79f0\u4e3a\u51fd\u6570\u6807\u5fd7\u7b26,function designator\uff09\u540e\u8ddf\u7531\u5706\u62ec\u53f7\u62ec\u8d77\u6765\u7684\u8d4b\u503c\u8868\u8fbe\u5f0f\u5217\u8868\u7ec4\u6210\uff0c\u5728\u8c03\u7528\u51fd\u6570\u4e4b\u524d\uff0c\u51fd\u6570\u7684\u6bcf\u4e2a\u5b9e\u9645\u53c2\u6570\u5c06\u88ab\u590d\u5236\uff0c\u6240\u6709\u7684\u5b9e\u9645\u53c2\u6570\u4e25\u683c\u5730\u6309\u503c\u4f20\u9012\u3002\u56e0\u6b64\uff0c\u5f62\u53c2\u5b9e\u9645\u4e0a\u6240\u671f\u671b\u5f97\u5230\u7684\u4e1c\u897f\uff0c\u5e76\u4e0d\u662f\u5b9e\u53c2\u672c\u8eab\uff0c\u800c\u662f\u5b9e\u53c2\u7684\u503c\u6216\u8005\u5b9e\u53c2\u6240\u4ee3\u8868\u7684\u503c\uff01\u4e3e\u4e2a\u4f8b\u6765\u8bf4\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u51fd\u6570\u58f0\u660e\uff1a", "\nvoid fun(int i);", "\n\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u6574\u6570\u53d8\u91cfint n\u4f5c\u5b9e\u53c2\u6765\u8c03\u7528fun\uff0c\u5c31\u662ffun(n)\uff1b\u5f53\u7136\uff0c\u4e5f\u6b63\u5982\u5927\u5bb6\u6240\u719f\u6089\u7684\u90a3\u6837\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a\u6574\u6570\u5e38\u91cf\u4f8b\u598210\u6765\u505a\u5b9e\u53c2\uff0c\u5c31\u662ffun(10)\uff1b\u90a3\u4e48\uff0c\u6309\u7167\u7b2c\u4e8c\u4e2a\u7591\u95ee\u7684\u770b\u6cd5\uff0c\u7531\u4e8e\u5f62\u53c2\u662f\u4e00\u4e2a\u6574\u6570\u53d8\u91cf\uff0c\u800c10\u53ef\u4ee5\u4f5c\u4e3a\u5b9e\u53c2\u4f20\u9012\u7ed9i\uff0c\u5c82\u4e0d\u5c31\u8bf4\u660e10\u662f\u4e00\u4e2a\u6574\u6570\u53d8\u91cf\u5417\uff1f\u8fd9\u663e\u7136\u662f\u8c2c\u8bef\u3002\u5b9e\u9645\u4e0a\uff0c\u5bf9\u4e8e\u5f62\u53c2i\u6765\u8bf4\uff0c\u7528\u6765\u58f0\u660ei\u7684\u7c7b\u578b\u8bf4\u660e\u7b26int\uff0c\u6240\u8d77\u7684\u4f5c\u7528\u662f\u7528\u6765\u8bf4\u660e\u9700\u8981\u4f20\u9012\u7ed9i\u4e00\u4e2a\u6574\u6570\uff0c\u5e76\u975e\u8981\u6c42\u5b9e\u53c2\u4e5f\u662f\u4e00\u4e2a\u6574\u6570\u53d8\u91cf\uff0ci\u771f\u6b63\u6240\u671f\u671b\u7684\uff0c\u53ea\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u4ec5\u6b64\u800c\u5df2\uff0c\u81f3\u4e8e\u5b9e\u53c2\u662f\u4ec0\u4e48\uff0c\u8ddfi\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\uff0c\u5b83\u624d\u4e0d\u7ba1\u5462\uff0c\u53ea\u8981\u80fd\u6b63\u786e\u7ed9i\u4f20\u9012\u4e00\u4e2a\u6574\u6570\u5c31OK\u4e86\u3002\u5f53\u5f62\u53c2\u662f\u6307\u9488\u7684\u65f6\u5019\uff0c\u6240\u53d1\u751f\u7684\u4e8b\u60c5\u8ddf\u8fd9\u4e2a\u662f\u76f8\u540c\u7684\u3002\u6307\u9488\u5f62\u53c2\u5e76\u6ca1\u6709\u8981\u6c42\u5b9e\u53c2\u4e5f\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u5b83\u9700\u8981\u7684\u662f\u4e00\u4e2a\u5730\u5740\uff0c\u8c01\u80fd\u7ed9\u4e88\u5b83\u4e00\u4e2a\u5730\u5740\uff1f\u663e\u7136\u6307\u9488\u3001\u5730\u5740\u5e38\u91cf\u548c\u7b26\u53f7\u5730\u5740\u5e38\u91cf\u90fd\u80fd\u6ee1\u8db3\u8fd9\u4e2a\u8981\u6c42\uff0c\u800c\u6570\u7ec4\u540d\u4f5c\u4e3a\u7b26\u53f7\u5730\u5740\u5e38\u91cf\u6b63\u662f\u6307\u9488\u5f62\u53c2\u6240\u9700\u8981\u7684\u5730\u5740\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u8ddf\u628a\u4e00\u4e2a\u6574\u6570\u8d4b\u503c\u7ed9\u4e00\u4e2a\u6574\u6570\u53d8\u91cf\u4e00\u6837\u7b80\u5355\uff01", "\u9996\u5148\u6211\u4eec\u8981\u4e86\u89e3\u5185\u5b58\u7684\u5206\u914d\u65b9\u5f0f\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u5185\u5b58\u7684\u5206\u914d\u65b9\u5f0f\u6709\u4e09\u79cd\uff1a", "1\uff0e\u4ece\u9759\u6001\u5b58\u50a8\u533a\u57df\u5206\u914d\u3002\u5185\u5b58\u5728\u7a0b\u5e8f\u7f16\u8bd1\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u5206\u914d\u597d\uff0c\u8fd9\u5757\u5185\u5b58\u5728\u7a0b\u5e8f\u7684\u6574\u4e2a\u8fd0\u884c\u671f\u95f4\u90fd\u5b58\u5728\u3002\u4f8b\u5982\u5168\u5c40\u53d8\u91cf\uff0cstatic\u53d8\u91cf\u3002", "2\uff0e\u5728\u6808\u4e0a\u521b\u5efa\u3002\u5728\u6267\u884c\u51fd\u6570\u65f6\uff0c\u51fd\u6570\u5185\u5c40\u90e8\u53d8\u91cf\u7684\u5b58\u50a8\u5355\u5143\u90fd\u53ef\u4ee5\u5728\u6808\u4e0a\u521b\u5efa\uff0c\u51fd\u6570\u6267\u884c\u7ed3\u675f\u65f6\u8fd9\u4e9b\u5b58\u50a8\u5355\u5143\u81ea\u52a8\u88ab\u91ca\u653e\u3002\u6808\u5185\u5b58\u5206\u914d\u8fd0\u7b97\u5185\u7f6e\u4e8e\u5904\u7406\u5668\u7684\u6307\u4ee4\u96c6\u4e2d\uff0c\u6548\u7387\u5f88\u9ad8\uff0c\u4f46\u662f\u5206\u914d\u7684\u5185\u5b58\u5bb9\u91cf\u6709\u9650\u3002", "\n3\uff0e\u4ece\u5806\u4e0a\u5206\u914d\uff0c\u4ea6\u79f0\u52a8\u6001\u5185\u5b58\u5206\u914d\u3002\u7a0b\u5e8f\u5728\u8fd0\u884c\u7684\u65f6\u5019\u7528malloc\u6216new\u7533\u8bf7\u4efb\u610f\u591a\u5c11\u7684\u5185\u5b58\uff0c\u7a0b\u5e8f\u5458\u81ea\u5df1\u8d1f\u8d23\u5728\u4f55\u65f6\u7528free\u6216delete\u91ca\u653e\u5185\u5b58\u3002\u52a8\u6001\u5185\u5b58\u7684\u751f\u5b58\u671f\u7531\u6211\u4eec\u51b3\u5b9a\uff0c\u4f7f\u7528\u975e\u5e38\u7075\u6d3b\uff0c\u4f46\u95ee\u9898\u4e5f\u6700\u591a\u3002", "\u4ee5\u4e0a\u4e09\u79cd\u5206\u914d\u65b9\u5f0f\uff0c\u6211\u4eec\u8981\u6ce8\u610f\u5185\u5b58\u751f\u547d\u671f\u7684\u95ee\u9898\uff1a", "1\uff0e\u9759\u6001\u5206\u914d\u7684\u533a\u57df\u7684\u751f\u547d\u671f\u662f\u6574\u4e2a\u8f6f\u4ef6\u8fd0\u884c\u671f\uff0c\u5c31\u662f\u8bf4\u4ece\u8f6f\u4ef6\u8fd0\u884c\u5f00\u59cb\u5230\u8f6f\u4ef6\u7ec8\u6b62\u9000\u51fa\u3002\u53ea\u6709\u8f6f\u4ef6\u7ec8\u6b62\u8fd0\u884c\u540e\uff0c\u8fd9\u5757\u5185\u5b58\u624d\u4f1a\u88ab\u7cfb\u7edf\u56de\u6536", "2\uff0e\u5728\u6808\u4e2d\u5206\u914d\u7684\u7a7a\u95f4\u7684\u751f\u547d\u671f\u4e0e\u8fd9\u4e2a\u53d8\u91cf\u6240\u5728\u7684\u51fd\u6570\u548c\u7c7b\u76f8\u5173\u3002\u5982\u679c\u662f\u51fd\u6570\u4e2d\u5b9a\u4e49\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u90a3\u4e48\u5b83\u7684\u751f\u547d\u671f\u5c31\u662f\u51fd\u6570\u88ab\u8c03\u7528\u65f6\uff0c\u5982\u679c\u51fd\u6570\u8fd0\u884c\u7ed3\u675f\uff0c\u90a3\u4e48\u8fd9\u5757\u5185\u5b58\u5c31\u4f1a\u88ab\u56de\u6536\u3002\u5982\u679c\u662f\u7c7b\u4e2d\u7684\u6210\u5458\u53d8\u91cf\uff0c\u5219\u5b83\u7684\u751f\u547d\u671f\u4e0e\u7c7b\u5b9e\u4f8b\u7684\u751f\u547d\u671f\u76f8\u540c\u3002", "3\uff0e\u5728\u5806\u4e0a\u5206\u914d\u7684\u5185\u5b58\uff0c\u751f\u547d\u671f\u662f\u4ece\u8c03\u7528new\u6216\u8005malloc\u5f00\u59cb\uff0c\u5230\u8c03\u7528delete\u6216\u8005free\u7ed3\u675f\u3002\u5982\u679c\u4e0d\u6389\u7528delete\u6216\u8005free\u3002\u5219\u8fd9\u5757\u7a7a\u95f4\u5fc5\u987b\u5230\u8f6f\u4ef6\u8fd0\u884c\u7ed3\u675f\u540e\u624d\u80fd\u88ab\u7cfb\u7edf\u56de\u6536\u3002", "\n\u4e0b\u9762\u6211\u4eec\u518d\u770b\u770b\uff0c\u5728\u4f7f\u7528\u5185\u5b58\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u7ecf\u5e38\u53d1\u751f\u4e00\u4e9b\u4ec0\u4e48\u6837\u7684\u9519\u8bef\u3002\u4ee5\u53ca\u6211\u4eec\u5e94\u8be5\u91c7\u53d6\u54ea\u4e9b\u5bf9\u7b56\u3002", "\u53d1\u751f\u5185\u5b58\u9519\u8bef\u662f\u4ef6\u975e\u5e38\u9ebb\u70e6\u7684\u4e8b\u60c5\u3002\u7f16\u8bd1\u5668\u4e0d\u80fd\u81ea\u52a8\u53d1\u73b0\u8fd9\u4e9b\u9519\u8bef\uff0c\u901a\u5e38\u662f\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u624d\u80fd\u6355\u6349\u5230\u3002\u800c\u8fd9\u4e9b\u9519\u8bef\u5927\u591a\u6ca1\u6709\u660e\u663e\u7684\u75c7\u72b6\uff0c\u65f6\u9690\u65f6\u73b0\uff0c\u589e\u52a0\u4e86\u6539\u9519\u7684\u96be\u5ea6\u3002\u6709\u65f6\u7528\u6237\u6012\u6c14\u51b2\u51b2\u5730\u628a\u4f60\u627e\u6765\uff0c\u7a0b\u5e8f\u5374\u6ca1\u6709\u53d1\u751f\u4efb\u4f55\u95ee\u9898\uff0c\u4f60\u4e00\u8d70\uff0c\u9519\u8bef\u53c8\u53d1\u4f5c\u4e86\u3002", "\u5e38\u89c1\u7684\u5185\u5b58\u9519\u8bef\u53ca\u5176\u5bf9\u7b56\u5982\u4e0b\uff1a", "1 \u5185\u5b58\u5206\u914d\u672a\u6210\u529f\uff0c\u5374\u4f7f\u7528\u4e86\u5b83\u3002", "\u5e38\u7528\u89e3\u51b3\u529e\u6cd5\u662f\uff0c\u5728\u4f7f\u7528\u5185\u5b58\u4e4b\u524d\u68c0\u67e5\u6307\u9488\u662f\u5426\u4e3aNULL\u3002\u5982\u679c\u6307\u9488p\u662f\u51fd\u6570\u7684\u53c2\u6570\uff0c\u90a3\u4e48\u5728\u51fd\u6570\u7684\u5165\u53e3\u5904\u7528assert(p!=NULL)\u8fdb\u884c\u68c0\u67e5\u3002\u5982\u679c\u662f\u7528malloc\u6216new\u6765\u7533\u8bf7\u5185\u5b58\uff0c\u5e94\u8be5\u7528if(p==NULL) \u6216if(p!=NULL)\u8fdb\u884c\u9632\u9519\u5904\u7406\u3002", "\n2 \u5185\u5b58\u5206\u914d\u867d\u7136\u6210\u529f\uff0c\u4f46\u662f\u5c1a\u672a\u521d\u59cb\u5316\u5c31\u5f15\u7528\u5b83\u3002", "\n\u5185\u5b58\u7684\u7f3a\u7701\u521d\u503c\u7a76\u7adf\u662f\u4ec0\u4e48\u5e76\u6ca1\u6709\u7edf\u4e00\u7684\u6807\u51c6\uff0c\u5c3d\u7ba1\u6709\u4e9b\u65f6\u5019\u4e3a\u96f6\u503c\uff0c\u6211\u4eec\u5b81\u53ef\u4fe1\u5176\u65e0\u4e0d\u53ef\u4fe1\u5176\u6709\u3002\u6240\u4ee5\u65e0\u8bba\u7528\u4f55\u79cd\u65b9\u5f0f\u521b\u5efa\u6570\u7ec4\uff0c\u90fd\u522b\u5fd8\u4e86\u8d4b\u521d\u503c\uff0c\u5373\u4fbf\u662f\u8d4b\u96f6\u503c\u4e5f\u4e0d\u53ef\u7701\u7565\uff0c\u4e0d\u8981\u5acc\u9ebb\u70e6\u3002", "3 \u5185\u5b58\u5206\u914d\u6210\u529f\u5e76\u4e14\u5df2\u7ecf\u521d\u59cb\u5316\uff0c\u4f46\u64cd\u4f5c\u8d8a\u8fc7\u4e86\u5185\u5b58\u7684\u8fb9\u754c\u3002", "\u4f8b\u5982\u5728\u4f7f\u7528\u6570\u7ec4\u65f6\u7ecf\u5e38\u53d1\u751f\u4e0b\u6807\u201d\u591a1\u2033\u6216\u8005\u201d\u5c111\u2033\u7684\u64cd\u4f5c\u3002\u7279\u522b\u662f\u5728for\u5faa\u73af\u8bed\u53e5\u4e2d\uff0c\u5faa\u73af\u6b21\u6570\u5f88\u5bb9\u6613\u641e\u9519\uff0c\u5bfc\u81f4\u6570\u7ec4\u64cd\u4f5c\u8d8a\u754c\u3002", "4 \u5fd8\u8bb0\u4e86\u91ca\u653e\u5185\u5b58\uff0c\u9020\u6210\u5185\u5b58\u6cc4\u9732\u3002", "\u542b\u6709\u8fd9\u79cd\u9519\u8bef\u7684\u51fd\u6570\u6bcf\u88ab\u8c03\u7528\u4e00\u6b21\u5c31\u4e22\u5931\u4e00\u5757\u5185\u5b58\u3002\u521a\u5f00\u59cb\u65f6\u7cfb\u7edf\u7684\u5185\u5b58\u5145\u8db3\uff0c\u4f60\u770b\u4e0d\u5230\u9519\u8bef\u3002\u7ec8\u6709\u4e00\u6b21\u7a0b\u5e8f\u7a81\u7136\u6b7b\u6389\uff0c\u7cfb\u7edf\u51fa\u73b0\u63d0\u793a\uff1a\u5185\u5b58\u8017\u5c3d\u3002", "\u52a8\u6001\u5185\u5b58\u7684\u7533\u8bf7\u4e0e\u91ca\u653e\u5fc5\u987b\u914d\u5bf9\uff0c\u7a0b\u5e8f\u4e2dmalloc\u4e0efree\u7684\u4f7f\u7528\u6b21\u6570\u4e00\u5b9a\u8981\u76f8\u540c\uff0c\u5426\u5219\u80af\u5b9a\u6709\u9519\u8bef\uff08new/delete\u540c\u7406\uff09\u3002", "5 \u91ca\u653e\u4e86\u5185\u5b58\u5374\u7ee7\u7eed\u4f7f\u7528\u5b83\u3002", "\u6709\u4e09\u79cd\u60c5\u51b5\uff1a", "\uff081\uff09\u7a0b\u5e8f\u4e2d\u7684\u5bf9\u8c61\u8c03\u7528\u5173\u7cfb\u8fc7\u4e8e\u590d\u6742\uff0c\u5b9e\u5728\u96be\u4ee5\u641e\u6e05\u695a\u67d0\u4e2a\u5bf9\u8c61\u7a76\u7adf\u662f\u5426\u5df2\u7ecf\u91ca\u653e\u4e86\u5185\u5b58\uff0c\u6b64\u65f6\u5e94\u8be5\u91cd\u65b0\u8bbe\u8ba1\u6570\u636e\u7ed3\u6784\uff0c\u4ece\u6839\u672c\u4e0a\u89e3\u51b3\u5bf9\u8c61\u7ba1\u7406\u7684\u6df7\u4e71\u5c40\u9762\u3002", "\uff082\uff09\u51fd\u6570\u7684return\u8bed\u53e5\u5199\u9519\u4e86\uff0c\u6ce8\u610f\u4e0d\u8981\u8fd4\u56de\u6307\u5411\u201d\u6808\u5185\u5b58\u201d\u7684\u201d\u6307\u9488\u201d\u6216\u8005\u201d\u5f15\u7528\u201d\uff0c\u56e0\u4e3a\u8be5\u5185\u5b58\u5728\u51fd\u6570\u4f53\u7ed3\u675f\u65f6\u88ab\u81ea\u52a8\u9500\u6bc1\u3002", "\n\u6761\u4ef6\u7f16\u8bd1\u547d\u4ee4\u6700\u5e38\u89c1\u7684\u5f62\u5f0f\u4e3a\uff1a", "\n#ifdef \u6807\u8bc6\u7b26", "\n\u7a0b\u5e8f\u6bb51", "\n#else", "\n\u7a0b\u5e8f\u6bb52", "\n#endif", "\n\u5b83\u7684\u4f5c\u7528\u662f\uff1a\u5f53\u6807\u8bc6\u7b26\u5df2\u7ecf\u88ab\u5b9a\u4e49\u8fc7(\u4e00\u822c\u662f\u7528#define\u547d\u4ee4\u5b9a\u4e49)\uff0c\u5219\u5bf9\u7a0b\u5e8f\u6bb51\u8fdb\u884c\u7f16\u8bd1\uff0c\u5426\u5219\u7f16\u8bd1\u7a0b\u5e8f\u6bb52\u3002", "\n\u5176\u4e2d#else\u90e8\u5206\u4e5f\u53ef\u4ee5\u6ca1\u6709\uff0c\u5373\uff1a", "\n#ifdef", "\n\u7a0b\u5e8f\u6bb51", "\n#endif", "\n\u8fd9\u91cc\u7684\u201d\u7a0b\u5e8f\u6bb5\u201d\u53ef\u4ee5\u662f\u8bed\u53e5\u7ec4\uff0c\u4e5f\u53ef\u4ee5\u662f\u547d\u4ee4\u884c\u3002\u8fd9\u79cd\u6761\u4ef6\u7f16\u8bd1\u53ef\u4ee5\u63d0\u9ad8C\u6e90\u7a0b\u5e8f\u7684\u901a\u7528\u6027\u3002\u5982\u679c\u4e00\u4e2aC\u6e90\u7a0b\u5e8f\u5728\u4e0d\u540c\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e0a\u7cfb\u7edf\u4e0a\u8fd0\u884c\uff0c\u800c\u4e0d\u540c\u7684\u8ba1\u7b97\u673a\u53c8\u6709\u4e00\u5b9a\u7684\u5dee\u5f02\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u6570\u636e\u7c7b\u578b\uff0c\u5728Windows\u5e73\u53f0\u4e2d\uff0c\u5e94\u8be5\u4f7f\u7528long\u7c7b\u578b\u8868\u793a\uff0c\u800c\u5728\u5176\u4ed6\u5e73\u53f0\u5e94\u8be5\u4f7f\u7528float\u8868\u793a\uff0c\u8fd9\u6837\u5f80\u5f80\u9700\u8981\u5bf9\u6e90\u7a0b\u5e8f\u4f5c\u5fc5\u8981\u7684\u4fee\u6539\uff0c\u8fd9\u5c31\u964d\u4f4e\u4e86\u7a0b\u5e8f\u7684\u901a\u7528\u6027\u3002\u53ef\u4ee5\u7528\u4ee5\u4e0b\u7684\u6761\u4ef6\u7f16\u8bd1\uff1a", "\n#ifdef WINDOWS", "\n#define MYTYPE long", "\n#else", "\n#define MYTYPE float", "\n#endif", "\n\u5982\u679c\u5728Windows\u4e0a\u7f16\u8bd1\u7a0b\u5e8f\uff0c\u5219\u53ef\u4ee5\u5728\u7a0b\u5e8f\u7684\u5f00\u59cb\u52a0\u4e0a", "\n#define WINDOWS", "\n\u8fd9\u6837\u5219\u7f16\u8bd1\u4e0b\u9762\u7684\u547d\u4ee4\u884c\uff1a", "\n#define MYTYPE long", "\n\u5982\u679c\u5728\u8fd9\u7ec4\u6761\u4ef6\u7f16\u8bd1\u547d\u4ee4\u4e4b\u524d\u66fe\u51fa\u73b0\u4ee5\u4e0b\u547d\u4ee4\u884c\uff1a", "\n#define WINDOWS 0", "\n\u5219\u9884\u7f16\u8bd1\u540e\u7a0b\u5e8f\u4e2d\u7684MYTYPE\u90fd\u7528float\u4ee3\u66ff\u3002\u8fd9\u6837\uff0c\u6e90\u7a0b\u5e8f\u53ef\u4ee5\u4e0d\u5fc5\u4f5c\u4efb\u4f55\u4fee\u6539\u5c31\u53ef\u4ee5\u7528\u4e8e\u4e0d\u540c\u7c7b\u578b\u7684\u8ba1\u7b97\u673a\u7cfb\u7edf\u3002\u5f53\u7136\u4ee5\u4e0a\u4ecb\u7ecd\u7684\u53ea\u662f\u4e00\u79cd\u7b80\u5355\u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u6839\u636e\u6b64\u601d\u8def\u8bbe\u8ba1\u51fa\u5176\u5b83\u7684\u6761\u4ef6\u7f16\u8bd1\u3002", "\n\u4f8b\u5982\uff0c\u5728\u8c03\u8bd5\u7a0b\u5e8f\u65f6\uff0c\u5e38\u5e38\u5e0c\u671b\u8f93\u51fa\u4e00\u4e9b\u6240\u9700\u7684\u4fe1\u606f\uff0c\u800c\u5728\u8c03\u8bd5\u5b8c\u6210\u540e\u4e0d\u518d\u8f93\u51fa\u8fd9\u4e9b\u4fe1\u606f\u3002\u53ef\u4ee5\u5728\u6e90\u7a0b\u5e8f\u4e2d\u63d2\u5165\u4ee5\u4e0b\u7684\u6761\u4ef6\u7f16\u8bd1\u6bb5\uff1a", "\n#ifdef DEBUG", "\nprint (\u201cdevice_open(%p)\\n\u201d, file);", "\n#endif", "\n\u5982\u679c\u5728\u5b83\u7684\u524d\u9762\u6709\u4ee5\u4e0b\u547d\u4ee4\u884c\uff1a", "\n#define DEBUG", "\n\u5219\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u8f93\u51fafile\u6307\u9488\u7684\u503c\uff0c\u4ee5\u4fbf\u8c03\u8bd5\u5206\u6790\u3002\u8c03\u8bd5\u5b8c\u6210\u540e\u53ea\u9700\u5c06\u8fd9\u4e2adefine\u547d\u4ee4\u884c\u5220\u9664\u5373\u53ef\u3002\u6709\u4eba\u53ef\u80fd\u89c9\u5f97\u4e0d\u7528\u6761\u4ef6\u7f16\u8bd1\u4e5f\u53ef\u8fbe\u6b64\u76ee\u7684\uff0c\u5373\u5728\u8c03\u8bd5\u65f6\u52a0\u4e00\u6279printf\u8bed\u53e5\uff0c\u8c03\u8bd5\u540e\u4e00\u4e00\u5c06printf\u8bed\u53e5\u5220\u9664\u53bb\u3002\u7684\u786e\uff0c\u8fd9\u662f\u53ef\u4ee5\u7684\u3002\u4f46\u662f\uff0c\u5f53\u8c03\u8bd5\u65f6\u52a0\u7684printf\u8bed\u53e5\u6bd4\u8f83\u591a\u65f6\uff0c\u4fee\u6539\u7684\u5de5\u4f5c\u91cf\u662f\u5f88\u5927\u7684\u3002\u7528\u6761\u4ef6\u7f16\u8bd1\uff0c\u5219\u4e0d\u5fc5\u4e00\u4e00\u5220\u6539printf\u8bed\u53e5\uff0c\u53ea\u9700\u5220\u9664\u524d\u9762\u7684\u4e00\u6761\u201d#define DEBUG\u201d\u547d\u4ee4\u5373\u53ef\uff0c\u8fd9\u65f6\u6240\u6709\u7684\u7528DEBUG\u4f5c\u6807\u8bc6\u7b26\u7684\u6761\u4ef6\u7f16\u8bd1\u6bb5\u90fd\u4f7f\u5176\u4e2d\u7684printf\u8bed\u53e5\u4e0d\u8d77\u4f5c\u7528\uff0c\u5373\u8d77\u7edf\u4e00\u63a7\u5236\u7684\u4f5c\u7528\uff0c\u5982\u540c\u4e00\u4e2a\u201d\u5f00\u5173\u201d\u4e00\u6837\u3002", "\n\u6709\u65f6\u4e5f\u91c7\u7528\u4e0b\u9762\u7684\u5f62\u5f0f\uff1a", "\n#ifndef \u6807\u8bc6\u7b26", "\n\u7a0b\u5e8f\u6bb51", "\n#else", "\n\u7a0b\u5e8f\u6bb52", "\n#endif", "\n\u53ea\u662f\u7b2c\u4e00\u884c\u4e0e\u7b2c\u4e00\u79cd\u5f62\u5f0f\u4e0d\u540c\uff1a\u5c06\u201difdef\u201d\u6539\u4e3a\u201difndef\u201d\u3002\u5b83\u7684\u4f5c\u7528\u662f\uff1a\u82e5\u6807\u8bc6\u7b26\u672a\u88ab\u5b9a\u4e49\u5219\u7f16\u8bd1\u7a0b\u5e8f\u6bb51\uff0c\u5426\u5219\u7f16\u8bd1\u7a0b\u5e8f\u6bb52\u3002\u8fd9\u79cd\u5f62\u5f0f\u4e0e\u7b2c\u4e00\u79cd\u5f62\u5f0f\u7684\u4f5c\u7528\u76f8\u53cd\u3002", "\n\u4ee5\u4e0a\u4e24\u79cd\u5f62\u5f0f\u7528\u6cd5\u5dee\u4e0d\u591a\uff0c\u6839\u636e\u9700\u8981\u4efb\u9009\u4e00\u79cd\uff0c\u89c6\u65b9\u4fbf\u800c\u5b9a\u3002", "\n\u8fd8\u6709\u4e00\u79cd\u5f62\u5f0f\uff0c\u5c31\u662f#if\u540e\u9762\u7684\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u6807\u8bc6\u7b26\uff1a", "\n#if \u8868\u8fbe\u5f0f", "\n\u7a0b\u5e8f\u6bb51", "\n#else", "\n\u7a0b\u5e8f\u6bb52", "\n#endif", "\n\u5b83\u7684\u4f5c\u7528\u662f\uff1a\u5f53\u6307\u5b9a\u7684\u8868\u8fbe\u5f0f\u503c\u4e3a\u771f\uff08\u975e\u96f6\uff09\u65f6\u5c31\u7f16\u8bd1\u7a0b\u5e8f\u6bb51\uff0c\u5426\u5219\u7f16\u8bd1\u7a0b\u5e8f\u6bb52\u3002\u53ef\u4ee5\u4e8b\u5148\u7ed9\u5b9a\u4e00\u5b9a\u6761\u4ef6\uff0c\u4f7f\u7a0b\u5e8f\u5728\u4e0d\u540c\u7684\u6761\u4ef6\u4e0b\u6267\u884c\u4e0d\u540c\u7684\u529f\u80fd\u3002", "\n\u4f8b\u5982\uff1a\u8f93\u5165\u4e00\u884c\u5b57\u6bcd\u5b57\u7b26\uff0c\u6839\u636e\u9700\u8981\u8bbe\u7f6e\u6761\u4ef6\u7f16\u8bd1\uff0c\u4f7f\u4e4b\u80fd\u5c06\u5b57\u6bcd\u5168\u6539\u4e3a\u5927\u5199\u8f93\u51fa\uff0c\u6216\u5168\u6539\u4e3a\u5c0f\u5199\u5b57\u6bcd\u8f93\u51fa\u3002", "\n#define LETTER 1", "\nmain()", "\n{", "\nchar str[20]=\u201dC Language\u201d,c;", "\nint i=0;", "\nwhile((c=str[i])!=\u2019\\0\u2032){", "\ni++;", "\n#if LETTER", "\nif(c>=\u2019a'&&c<=\u2019z') c=c-32;", "\n#else", "\nif(c>=\u2019A'&&c<=\u2019Z') c=c+32;", "\n#endif", "\nprintf(\u201c%c\u201d,c);", "\n}", "\n}", "\n\u8fd0\u884c\u7ed3\u679c\u4e3a\uff1aC LANGUAGE", "\n\u73b0\u5728\u5148\u5b9a\u4e49LETTER\u4e3a1\uff0c\u8fd9\u6837\u5728\u9884\u5904\u7406\u6761\u4ef6\u7f16\u8bd1\u547d\u4ee4\u65f6\uff0c\u7531\u4e8eLETTER\u4e3a\u771f\uff08\u975e\u96f6\uff09\uff0c\u5219\u5bf9\u7b2c\u4e00\u4e2aif\u8bed\u53e5\u8fdb\u884c\u7f16\u8bd1\uff0c\u8fd0\u884c\u65f6\u4f7f\u5c0f\u5199\u5b57\u6bcd\u53d8\u5927\u5199\u3002\u5982\u679c\u5c06\u7a0b\u5e8f\u7b2c\u4e00\u884c\u6539\u4e3a\uff1a", "\n#define LETTER 0", "\n\u5219\u5728\u9884\u5904\u7406\u65f6\uff0c\u5bf9\u7b2c\u4e8c\u4e2aif\u8bed\u53e5\u8fdb\u884c\u7f16\u8bd1\u5904\u7406\uff0c\u4f7f\u5927\u5199\u5b57\u6bcd\u53d8\u6210\u5c0f\u5199\u5b57\u6bcd\uff08\u5927\u5199\u5b57\u6bcd\u4e0e\u76f8\u5e94\u7684\u5c0f\u5199\u5b57\u6bcd\u7684ASCII\u4ee3\u7801\u5dee32\uff09\u3002\u6b64\u65f6\u8fd0\u884c\u60c5\u51b5\u4e3a\uff1a", "\nc language", "\n\u6709\u4eba\u4f1a\u95ee\uff1a\u4e0d\u7528\u6761\u4ef6\u7f16\u8bd1\u547d\u4ee4\u800c\u76f4\u63a5\u7528if\u8bed\u53e5\u4e5f\u80fd\u8fbe\u5230\u8981\u6c42\uff0c\u7528\u6761\u4ef6\u7f16\u8bd1\u547d\u4ee4\u6709\u4ec0\u4e48\u597d\u5904\u5462\uff1f\u7684\u786e\uff0c\u6b64\u95ee\u9898\u5b8c\u5168\u53ef\u4ee5\u4e0d\u7528\u6761\u4ef6\u7f16\u8bd1\u5904\u7406\uff0c\u4f46\u90a3\u6837\u505a\u76ee\u6807\u7a0b\u5e8f\u957f\uff08\u56e0\u4e3a\u6240\u6709\u8bed\u53e5\u90fd\u7f16\u8bd1\uff09\uff0c\u800c\u91c7\u7528\u6761\u4ef6\u7f16\u8bd1\uff0c\u53ef\u4ee5\u51cf\u5c11\u88ab\u7f16\u8bd1\u7684\u8bed\u53e5\uff0c\u4ece\u800c\u51cf\u5c11\u76ee\u6807\u7684\u957f\u5ea6\u3002\u5f53\u6761\u4ef6\u7f16\u8bd1\u6bb5\u6bd4\u8f83\u591a\u65f6\uff0c\u76ee\u6807\u7a0b\u5e8f\u957f\u5ea6\u53ef\u4ee5\u5927\u5927\u51cf\u5c11\u3002"], "title": "\u4ec0\u4e48\u662f\u6570\u7ec4\u540d\uff1f"},
{"contents": ["\u4e00\u3001\u9009\u62e9\u9898 \uff08\u6bcf\u5c0f\u98982\u5206\uff0c\u517112\u5206\uff09", "\n1 C++\u6e90\u6587\u4ef6\u7684\u7f3a\u7701\u6269\u5c55\u540d\u4e3a\uff08\uff09A", "\nA.cpp", "\nB.exe", "\nC.obj", "\nD.lik", "2 \u7a0b\u5e8f\u8fd0\u884c\u4e2d\u9700\u8981\u4ece\u952e\u76d8\u4e0a\u8f93\u5165\u591a\u4e8e\u4e00\u4e2a\u6570\u636e\u65f6\uff0c\u5404\u6570\u636e\u4e4b\u95f4\u5e94\u8be5\u4f7f\u7528\uff08\uff09\u7b26\u53f7\u4f5c\u4e3a\u5206\u9694\u7b26 A", "\nA.\u7a7a\u683c\u6216\u9017\u53f7", "\nB.\u9017\u53f7\u6216\u56de\u8f66", "\nC.\u9017\u53f7\u6216\u5206\u53f7", "\nD.\u7a7a\u683c\u6216\u56de\u8f66", "3 \u5728\u6bcf\u4e2aC++\u7a0b\u5e8f\u4e2d\u90fd\u5fc5\u987b\u5305\u542b\u6709\u8fd9\u6837\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u7684\u540d\u79f0\u4e3a\uff08\uff09A", "\nA.main", "\nB.MAIN", "\nC.name", "\nD.function", "4 \u5047\u5b9aa \u4e3a\u4e00\u4e2a\u77ed\u6574\u578b\uff08short int\uff09\u6570\u7ec4\u540d\uff0c\u5219\u5143\u7d20a[8]\u7684\u5730\u5740\u4e3a()B", "\nA.a+4", "\nB.a+8", "\nC.a+16", "\nD.a+32", "5 \u5047\u5b9aAB \u4e3a\u4e00\u4e2a\u7c7b\uff0c\u5219\u6267\u884c\u201cABa(4),b[4],*p[5]\u201d\u8bed\u53e5\u65f6\uff0c\u81ea\u52a8\u8c03\u7528\u8be5\u7c7b\u591f\u9020\u51fd\u6570\u7684\u6b21\u6570\u4e3a\uff08\uff09B", "\nA.4", "\nB.5", "\nC.8", "\nD.13", "6 \u5f53\u9700\u8981\u4f7f\u7528istrstream\u6d41\u7c7b\u5b9a\u4e49\u4e00\u4e2a\u6d41\u7c7b\u5bf9\u8c61\u5e76\u8054\u7cfb\u4e00\u4e2a\u5b57\u7b26\u4e32\u65f6\uff0c\u5e94\u5728\u6587\u4ef6\u5f00\u59cb\u4f7f\u7528#include\u547d\u4ee4\uff0c\u4f7f\u4e4b\u5305\u542b\uff08\uff09\u6587\u4ef6A", "\nA.iostream.h", "\nB.iomanip.h", "\nC.fstream.h", "\nD.ststrea.h", "\u4e8c \u586b\u7a7a\u9898\uff08\u6bcf\u5c0f\u98983\u5206\uff0c\u517130\u5206\uff09", "\n\u30001\uff0e \u5728C++\u4e2d\uff0c\u51fd\u6570\u7684\u53c2\u6570\u6709\u4e24\u79cd\u4f20\u9012\u65b9\u5f0f\uff0c\u5b83\u4eec\u662f\u503c\u4f20\u9012\u548c\uff08\u5740\u4f20\u9012\uff09\u3002", "\n\u30002\uff0e \u5f53\u4e00\u4e2a\u6210\u5458\u51fd\u6570\u88ab\u8c03\u7528\u65f6\uff0c\u8be5\u6210\u5458\u51fd\u6570\u7684\uff08this\u6307\u9488\uff09\u6307\u5411\u8c03\u7528\u5b83\u7684\u5bf9\u8c61\u3002", "\n\u30003\uff0e \u5728\u516c\u6709\u7ee7\u627f\u7684\u60c5\u51b5\u4e0b\uff0c\u57fa\u7c7b\u6570\u636e\u6210\u5458\u5728\u6d3e\u751f\u7c7b\u4e2d\u7684\u8bbf\u95ee\u6743\u9650 \uff08\u79c1\u6709\u4e0d\u53ef\u4ee5\u8bbf\u95ee\uff0c\u5176\u4ed6\u540c\u57fa\u7c7b\u4e00\u81f4\uff09 \u3002", "\n\u30004\uff0e \u7528new\u7533\u8bf7\u67d0\u4e00\u4e2a\u7c7b\u7684\u52a8\u6001\u5bf9\u8c61\u6570\u7ec4\u65f6\uff0c\u5728\u8be5\u7c7b\u4e2d\u5fc5\u987b\u80fd\u591f\u5339\u914d\u5230 \uff08\u65e0\u53c2\uff09 \u6784\u9020\u51fd\u6570\uff0c\u5426\u5219\u5e94\u7528\u7a0b\u5e8f\u4f1a\u4ea7\u751f\u4e00\u4e2a\u7f16\u8bd1\u9519\u8bef\u3002", "\n\u30005\uff0e \u9759\u6001\u6570\u636e\u6210\u5458\u5728\u7c7b\u5916\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u4e14\u9759\u6001\u6570\u636e\u6210\u5458\u7684\u4e00\u4e2a\u62f7\u8d1d\u88ab\u7c7b\u7684\u6240\u6709\u5bf9\u8c61 \uff08\u5171\u4eab\uff09\u3002", "\n\u30006\uff0e \u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u6709\u56db\u5927\u7279\u5f81\uff0c\u5b83\u4eec\u662f\uff08\u5c01\u88c5\uff0c\u591a\u6001\uff0c\u7ee7\u627f\uff0c\u62bd\u8c61\uff09 \u3002", "\n\u30007\uff0e \u5728C++\u7c7b\u4e2d\uff0c\u6709\u4e00\u79cd\u4e0d\u80fd\u5b9a\u4e49\u5bf9\u8c61\u7684\u7c7b\uff0c\u8fd9\u6837\u7684\u7c7b\u53ea\u80fd\u88ab\u7ee7\u627f\uff0c\u79f0\u4e4b\u4e3a \uff08\u865a\u57fa\u7c7b\uff09 \uff0c\u5b9a\u4e49\u8be5\u7c7b\u81f3\u5c11\u5177\u6709\u4e00\u4e2a \uff08\u865a\u51fd\u6570\uff09 \u3002", "\n\u30008\uff0e \u5728C++\u7c7b\u4e2d\uff0cconst\u5173\u952e\u5b57\u53ef\u4ee5\u4fee\u9970\u5bf9\u8c61\u548c\u6210\u5458\u51fd\u6570\uff0cconst\u5bf9\u8c61\u4e0d\u80fd \uff08\u4f5c\u4e3a\u5de6\u503c\uff09\u3002", "\n9.\u5047\u5b9a\u4e00\u4e2a\u679a\u4e3e\u7c7b\u578b\u7684\u5b9a\u4e49\u4e3a\u201cenum RB{ab,ac,ad,ae}x=ad;\u201d\u5219x\u7684\u503c\u4e3a\uff082\uff09", "\n10.\u82e5\u9700\u8981\u628a\u4e00\u4e2a\u7c7bAB\u5b9a\u4e49\u4e00\u4e2a\u7c7bCD\u7684\u53cb\u5143\u7d20\uff0c\u5219\u5e94\u5728\u7c7bCD\u7684\u5b9a\u4e49\u4e2d\u52a0\u5165\u4e00\u6761\u8bed\u53e5\u4e3a\uff08friend class AB\uff09\u3002", "\u4e09 \u7ed9\u51fa\u4e0b\u5217\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\uff08\u6bcf\u5c0f\u98985\u5206\uff0c\u517120\u5206\uff09", "1\uff0e \u4e0b\u9762\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f\uff083\uff09\u3000\u3000\u3002", "\n\u3000#include <stdio.h>", "\n\u3000void main()", "\n\u3000{", "\n\u3000\u3000char a=\u2019a',b=\u2019j';", "\n\u3000\u3000float x;", "\n\u3000\u3000x=(b-a)/(\u2018F\u2019-'A\u2019);", "\n\u3000\u3000printf(\u201c%d\\n\u201d,(int)(3.14*x));", "\n\u3000}", "\n\u30002\uff0e \u4e0b\u9762\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f\uff08\uff09\u3002", "\n\u3000#include \u201ciostream.h\u201d", "\n\u3000void main( )", "\n\u3000{", "\n\u3000\u3000int i=1;", "\nwhile (i<=15){", "\n\u3000\u3000\u3000i++;", "\n\u3000\u3000\u3000if (i%3!=2) continue;", "\n\u3000\u3000\u3000else cout <<\u201di=\u201d<<i<<endl;", "\n\u3000\u3000}", "\n\u3000}", "\ni=2", "\ni=5", "\ni=8", "\ni=11", "\ni=14", "\n\u30003\uff0e \u4e0b\u9762\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f\uff08\uff09\u3002", "\n\u3000#include \u201ciostream.h\u201d", "\n\u3000class test", "\n\u3000{", "\n\u3000private:", "\n\u3000\u3000int num;", "\n\u3000\u3000float fl;", "\n\u3000public:", "\n\u3000\u3000test( );", "\n\u3000\u3000int getint( ){return num;}", "\n\u3000\u3000float getfloat( ){return fl;}", "\n\u3000\u3000~test( );", "\n\u3000};", "\n\u3000test::test( )", "\n\u3000{", "\n\u3000\u3000cout << \u201cInitalizing default\u201d << endl;", "\n\u3000\u3000num=0;fl=0.0;", "\n\u3000}", "\n\u3000test::~test( )", "\n\u3000{", "\n\u3000\u3000cout << \u201cDesdtructor is active\u201d << endl;", "\n\u3000}", "\nvoid main( )", "\n\u3000{", "\n\u3000\u3000test array[2];", "\n\u3000\u3000cout << array[1].getint( )<< \u201d \u201d << array[1].getfloat( ) <<endl;", "\n\u3000}", "\nInitalizing defaul", "\nInitalizing defaul", "\n0 0.0", "\nDesdtructor is active", "\nDesdtructor is active", "\n\u30004\uff0e \u4e0b\u9762\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f\uff08\uff09\u3002", "\n\u3000#include <iostream.h>", "\n\u3000class A", "\n\u3000{", "\n\u3000public:", "\n\u3000\u3000A(){cout<<\u201dA::A() called.\\n\u201d;}", "\n\u3000\u3000virtual ~A(){cout<<\u201dA::~A() called.\\n\u201d;}", "\n\u3000};", "\n\u3000class B:public A", "\n\u3000{", "\n\u3000public:", "\n\u3000\u3000B(int i){", "\n\u3000\u3000cout<<\u201dB::B() called.\\n\u201d;", "\n\u3000\u3000buf=new char[i];}", "\n\u3000\u3000virtual ~B()", "\n\u3000\u3000{", "\n\u3000\u3000\u3000delete []buf;", "\n\u3000\u3000\u3000cout<<\u201dB::~B() called.\\n\u201d;", "\n\u3000\u3000}", "\n\u3000private:", "\n\u3000\u3000char *buf;", "\n\u3000};", "\n\u3000void fun(A *a)", "\n\u3000{", "\n\u3000\u3000delete a;", "\n\u3000}", "\nvoid main()", "\n\u3000{", "\n\u3000\u3000A *a=new B(15);", "\n\u3000\u3000fun(a);", "\n\u3000}", "\nA::A() called.", "\nB::B() called.", "\nB::~B() called.", "\nA::~A() called.", "\n5\uff0e \u4e0b\u9762\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f\uff08\uff09\u3002", "\n\u3000#include <stdio.h>", "\n\u3000int a[ ]={1,3,5,7,9};", "\n\u3000int *p[ ]={a,a+1,a+2,a+3,a+4};", "\n\u3000void main( )", "\n\u3000{", "\n\u3000\u3000printf(\u201c%d\\t%d\\t%d\\n\u201d,a[4],*(a+2),*p[1]);", "\n\u3000\u3000printf(\u201c%d\\t%d\\t%d\\n\u201d,**(p+1)+a[2],*(p+4)-*(p+0),*(a+3)%a[4]);", "\n\u3000}", "\n9\u00a05\u00a03", "\n8\u00a04\u00a07", "\n\u56db\u3001 \u95ee\u7b54\u9898\uff08\u6bcf\u5c0f\u98985\u5206\uff0c\u517120\u5206\uff09", "\n\u30001\uff0e \u82e5\u7a0b\u5e8f\u5458\u6ca1\u6709\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u5219\u7f16\u8bd1\u5668\u81ea\u52a8\u751f\u6210\u4e00\u4e2a\u7f3a\u7701\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u5b83\u53ef\u80fd\u4f1a\u4ea7\u751f\u4ec0\u4e48\u95ee\u9898\uff1f", "\n\u6d45\u62f7\u8d1d\u95ee\u9898\uff0c\u4e3b\u8981\u539f\u56e0\u4e3a\u7c7b\u4e2d\u5982\u679c\u6709\u6307\u9488\u6210\u5458\u53d8\u91cf\u65f6\uff0c\u5f53\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u65f6\u53ea\u62f7\u8d1d\u5730\u5740\u4ece\u800c\u4f7f\u4e24\u4e2a\u5bf9\u8c61\u7684\u6307\u9488\u53d8\u91cf\u6307\u5411\u4e86\u4e00\u4e2a\u5730\u5740\u7a7a\u95f4\u3002", "\n2\uff0e \u7b80\u8ff0\u6210\u5458\u51fd\u6570\u3001\u5168\u5c40\u51fd\u6570\u548c\u53cb\u5143\u51fd\u6570\u7684\u5dee\u522b\u3002", "\n\u6210\u5458\u51fd\u6570\u53ea\u80fd\u7531\u8be5\u7c7b\u6240\u5b9e\u4f8b\u5316\u7684\u5bf9\u8c61\u6765\u8fdb\u884c\u8c03\u7528\u3002[\u9759\u6001\u6210\u5458\u9664\u5916]", "\n\u5168\u5c40\u51fd\u6570\u53ef\u4ee5\u5728\u4efb\u610f\u4f4d\u7f6e\u8fdb\u884c\u8c03\u7528\u3002", "\n\u53cb\u5143\u51fd\u6570\u53ef\u4ee5\u8ba9\u672c\u7c7b\u548c\u53cb\u5143\u7c7b\u5bf9\u8c61\u8c03\u7528\u3002", "\n3\uff0e \u7b80\u8ff0\u7ed3\u6784\u5316\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u3001\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u57fa\u672c\u601d\u60f3\u3002", "\n\u7ed3\u6784\u5316\u7a0b\u5e8f\u8bbe\u8ba1\u4e3a\u4ece\u7a0b\u5e8f\u4ee3\u7801\u7684\u5f00\u59cb\u5904\u6309\u7167\u987a\u5e8f\u65b9\u5f0f\u6267\u884c\u81f3\u4ee3\u7801\u7684\u7ed3\u675f\u4f4d\u7f6e\u3002\u662f\u4e00\u79cd\u987a\u5e8f\u7684\u65b9\u5f0f\uff0c\u51fd\u6570\u4e0e\u53d8\u91cf\u6ca1\u6709\u660e\u663e\u7684\u8054\u7cfb", "\n\u9762\u5411\u5bf9\u8c61\u4e3b\u8981\u628a\u5904\u7406\u4e8b\u60c5\u7684\u4e8b\u7269\u548c\u65b9\u6cd5\u7ed3\u5408\u4e3a\u4e00\u4f53\u6210\u4e3a\u4e00\u4e2a\u7c7b\uff0c\u4e00\u4e2a\u7c7b\u5177\u5907\u5904\u7406\u4e00\u4ef6\u4e8b\u60c5\u7684\u6570\u636e\u53d8\u91cf\u548c\u5904\u7406\u65b9\u6cd5\uff0c\u628a\u6570\u636e\u548c\u65b9\u6cd5\u6709\u673a\u7684\u7ed3\u5408\u4e3a\u4e86\u4e00\u4f53\uff0c\u4f7f\u6bcf\u4e00\u4ef6\u4e8b\u60c5\u90fd\u5177\u5907\u4e00\u5b9a\u7684\u72ec\u7acb\u6027\uff0c\u5f62\u6210\u4e00\u4e2a\u6a21\u5757\u3002\u589e\u52a0\u4e86\u5185\u805a\u6027\uff0c\u964d\u4f4e\u4e86\u8026\u5408\u6027\u3002\u540c\u65f6\u4e5f\u589e\u52a0\u4e86\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u4ee5\u53ca\u4ee3\u7801\u7684\u91cd\u7528\u6027\u3002", "\n4\uff0e \u7ed3\u6784struct\u548c\u7c7bclass\u6709\u4ec0\u4e48\u5f02\u540c\uff1f", "\n\u5728c\u8bed\u8a00\u4e2dstruct\u53ea\u80fd\u5bf9\u6570\u636e\u8fdb\u884c\u805a\u5408\uff0c\u800cc++\u7684class\u628a\u6570\u636e\u4ee5\u53ca\u5bf9\u6570\u636e\u7684\u5904\u7406\u65b9\u6cd5\u4e5f\u540c\u65f6\u805a\u5408\u4e3a\u4e00\u4f53\uff0c\u589e\u52a0\u4e86\u5185\u805a\u6027\u3002", "\n\u6b64\u5916class\u62e5\u6709\u53ef\u518d\u751f\u6027\u548c\u53ef\u62bd\u8c61\u6027\uff0c\u5b9e\u73b0\u7684\u4ee3\u7801\u7684\u590d\u7528\u3002\u96c6\u4e2d\u4f53\u73b0\u5728\u6d3e\u751f\u7684\u529f\u80fd\u548c\u591a\u6001\u7684\u529f\u80fd\u3002", "\n\u540c\u65f6class\u4e5f\u6bd4struct\u5177\u5907\u66f4\u597d\u7684\u5c01\u88c5\u6027\uff0c\u4f53\u73b0\u5728\u4e09\u79cd\u8bbf\u95ee\u6743\u9650\u4e0a\u3002", "\n\u5728C++ \u4e2d\u7684struct\u548cclass\u7684\u7ed3\u6784\u57fa\u672c\u4e00\u81f4\uff0c\u53ea\u662fstruct\u7684\u9ed8\u8ba4\u6743\u9650\u4e3aPublic\u800cclass\u4e3aprivate\u3002", "\u4e94 \u4e0b\u5217shape\u7c7b\u662f\u4e00\u4e2a\u8868\u793a\u5f62\u72b6\u7684\u62bd\u8c61\u7c7b\uff0carea( )\u4e3a\u6c42\u56fe\u5f62\u9762\u79ef\u7684\u51fd\u6570\uff0ctotal( )\u5219\u662f\u4e00\u4e2a\u901a\u7528\u7684\u7528\u4ee5\u6c42\u4e0d\u540c\u5f62\u72b6\u7684\u56fe\u5f62\u9762\u79ef\u603b\u548c\u7684\u51fd\u6570\u3002\u8bf7\u4eceshape\u7c7b\u6d3e\u751f\u4e09\u89d2\u5f62\u7c7b(triangle)\u3001\u77e9\u5f62\u7c7b\uff08rectangle\uff09\uff0c\u5e76\u7ed9\u51fa\u5177\u4f53\u7684\u6c42\u9762\u79ef\u51fd\u6570\uff0818\u5206\uff09", "\nClass Shape", "\n{", "\nPublic:", "\n\u00a0Shape(){}", "\n\u00a0~shape(){}", "\n\u00a0Virtual int area();\u00a0", "\n}", "\n/* \u6c42\u6240\u6709\u9762\u79ef\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0*/", "\nInt total( Vector< Shape*> vecshape)\uff1b", "\nVector< Shape*> vecShape;", "\nInt total(Vector< Shape*> vecshape)", "\n{", "\n\u00a0Vector< Shape*>::iterator VecIt;", "\n\u00a0Int ntotal = 0;", "\n\u00a0For( VecIt=vecShape.begin(); VecIt!=vecShape.end(); VecIt++)", "\n{", "\n\u00a0ntotal += (*VecIt)->area();", "\n}", "\nReturn ntotal;", "\n}", "Class trangle :public shape", "\n{", "\nPublic:", "\n\u00a0Trangle(){}", "\n\u00a0~trangle(){}", "\n\u00a0Int area();", "\nPrivate:", "\n\u00a0Int m_nheigh;", "\n\u00a0Int m_nwidth;", "\n}", "\n/* \u6c42\u4e09\u89d2\u5f62\u9762\u79ef\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0*/", "\nInt Trangle::area()", "\n{", "\n\u00a0Return m_nheigh*m_nwidth/2;", "\n}", "Class rectangle :public shape", "\n{", "\nPublic:", "\n\u00a0Rectangle(){}", "\n\u00a0~rectangle(){}", "\n\u00a0Int area();", "\nPrivate:", "\n\u00a0Int m_nheigh;", "\n\u00a0Int m_nwidth;", "\n}", "\n/* \u6c42\u77e9\u5f62\u9762\u79ef\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0*/", "\nInt Rectangle::area()", "\n{", "\n\u00a0Return m_nheigh*m_nwidth;", "\n}"], "title": "\u4e00\u5957C++\u6d4b\u8bd5\u9898 \u9644\u5e26\u53c2\u8003\u7b54\u6848\u548c\u5206\u6790"},
{"contents": ["1\u3001C\u8bed\u8a00\u91cc\u7684STRUCT\u4e0eC++\u91cc\u7684CLASS\u6709\u4f55\u533a\u522b\uff1f", "\n2\u3001\u9762\u5411\u5bf9\u8c61\u6709\u54ea\u4e9b\u7279\u6027\uff1f", "\n3\u3001\u4f55\u65f6\u4f1a\u7528\u5230\u591a\u6001\uff1f\u5982\u4f55\u5b9e\u73b0\u591a\u6001\uff1f", "\n4\u3001\u600e\u6837\u5b9e\u73b0\u865a\u51fd\u6570\uff1f", "\n5\u3001\u5b50\u7c7b\u8986\u76d6\u4e86\u57fa\u7c7b\u7684\u65b9\u5206\u6cd5\u65f6\uff0c\u5b50\u7c7b\u5982\u4f55\u8c03\u7528\u57fa\u7c7b\u7684\u65b9\u6cd5\uff1f", "\n6\u3001MFC\u548cSDK\u662f\u4ec0\u4e48\u5173\u7cfb\uff1f", "\n7\u3001\u4ec0\u4e48\u662fHDC\uff1f\u4ec0\u4e48\u662fCWnd\uff1f", "\n8\u3001\u5982\u679c\u8ba9\u4f60\u8bbe\u8ba1\u4e00\u4e2a\u5f02\u5f62\u7684\u6309\u94ae\uff0c\u4f60\u5c06\u5982\u4f55\u5b9e\u73b0\uff1f\u8c08\u4e00\u4e0b\u4f60\u7684\u601d\u8def\uff01", "\u00a0\u00a0\u00a0 \u8c08\u4e00\u4e0b\u4f60\u505a\u7684\u9879\u76ee\u7528\u5230\u4e86\u54ea\u4e9b\u6280\u672f\uff0c\u5728\u8fd9\u4e2a\u9879\u76ee\u7684\u5b9e\u73b0\u8fc7\u7a0b\u4e2d\u4f60\u9047\u5230\u4e86\u54ea\u4e9b\u95ee\u9898\uff0c\u5230\u6700\u540e\u4f60\u662f\u600e\u4e48\u6837\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\uff1f\u4ece\u8fd9\u4e2a\u9879\u76ee\u4e2d\u4f60\u5b66\u4f1a\u4e86\u4ec0\u4e48\uff1f"], "title": "\u6b66\u6c49-\u4e0a\u6d77\u5965\u4f73\u7b14\u8bd5\u9898\u9762\u8bd5\u9898"},
{"contents": ["\u4e00\u822c\u60c5\u51b5\u4e0b, \u4e0d\u884c\u3002\u590d\u6742\u4e4b\u5904\u5728\u4e8e, \u6709\u7684\u673a\u5668\u4e0d\u540c\u7c7b\u578b\u6570\u636e\u7684\u6307\u9488\u6709\u4e0d\u540c\u7684\u5185", "\n\u90e8\u8868\u8fbe\u3002\u8fd9\u6837\u7684NULL \u5b9a\u4e49\u5bf9\u4e8e\u63a5\u53d7\u5b57\u7b26\u6307\u9488\u7684\u7684\u51fd\u6570\u6ca1\u6709\u95ee\u9898, \u4f46\u5bf9\u4e8e\u5176\u5b83\u7c7b\u578b\u7684\u6307\u9488\u53c2\u6570\u4ecd\u7136\u6709\u95ee\u9898(\u5728\u7f3a\u5c11\u539f\u578b\u7684\u60c5\u51b5\u4e0b), \u800c\u5408\u6cd5\u7684\u6784\u9020\u5982", "\nFILE *fp = NULL;", "\n\u5219\u4f1a\u5931\u8d25\u3002", "\n\u4e0d\u8fc7, ANSI C \u5141\u8bb8NULL \u7684\u53ef\u9009\u5b9a\u4e49#define NULL ((void *)0)", "\n\u9664\u4e86\u6f5c\u5728\u5730\u5e2e\u52a9\u9519\u8bef\u7a0b\u5e8f\u8fd0\u884c(\u4ec5\u9650\u4e8e\u4f7f\u7528\u540c\u6837\u7c7b\u578b\u6307\u9488\u7684\u673a\u5668, \u56e0\u6b64\u5e2e\u52a9\u6709\u9650) \u4ee5\u5916, \u8fd9\u6837\u7684\u5b9a\u4e49\u8fd8\u53ef\u4ee5\u53d1\u73b0\u9519\u8bef\u4f7f\u7528NULL \u7684\u7a0b\u5e8f(\u4f8b\u5982, \u5728\u5b9e\u9645\u9700\u8981\u4f7f\u7528ASCII NUL \u5b57\u7b26\u7684\u5730\u65b9; )\u3002\u65e0\u8bba\u5982\u4f55, ANSI \u51fd\u6570\u539f\u578b\u786e\u4fdd\u5927\u591a\u6570(\u5c3d\u7ba1\u4e0d\u662f\u5168\u90e8;)\u6307\u9488\u53c2\u6570", "\n\u5728\u4f20\u5165\u51fd\u6570\u65f6\u6b63\u786e\u8f6c\u6362\u3002\u56e0\u6b64, \u8fd9\u4e2a\u95ee\u9898\u6709\u4e9b\u591a\u4f59\u3002"], "title": "\u5982\u679cNULL \u5b9a\u4e49\u6210#define NULL ((char *)0) \u96be\u9053\u4e0d\u5c31\u53ef\u4ee5\u5411 \u51fd\u6570\u4f20\u5165\u4e0d\u52a0\u8f6c\u6362\u7684NULL \u4e86\u5417\uff1f"},
{"contents": ["\u8bb8\u591a\u7a0b\u5e8f\u5458\u8ba4\u4e3a\u5728\u6240\u6709\u7684\u6307\u9488\u4e0a\u4e0b\u6587\u4e2d\u90fd\u5e94\u8be5\u4f7f\u7528NULL, \u4ee5\u8868\u660e\u8be5\u503c\u5e94\u8be5\u88ab\u770b\u4f5c\u6307\u9488\u3002\u53e6\u4e00\u4e9b\u4eba\u5219\u8ba4\u4e3a\u7528\u4e00\u4e2a\u5b8f\u6765\u5b9a\u4e490, \u53ea\u4e0d\u8fc7\u628a\u4e8b\u60c5\u641e\u5f97\u66f4\u590d\u6742, \u53cd\u800c\u4ee4\u4eba\u56f0\u60d1\u3002\u56e0\u800c\u503e\u5411\u4e8e\u4f7f\u7528\u672a\u52a0\u4fee\u9970\u76840\u3002\u6ca1\u6709\u6b63\u786e\u7684\u7b54\u6848\u3002C \u7a0b\u5e8f\u5458\u5e94\u8be5\u660e\u767d, \u5728\u6307\u9488\u4e0a\u4e0b\u6587\u4e2dNULL \u548c0 \u662f\u5b8c\u5168\u7b49\u4ef7\u7684, \u800c\u672a\u52a0\u4fee\u9970\u76840 \u4e5f\u5b8c\u5168\u53ef\u4ee5\u63a5\u53d7\u3002\u4efb\u4f55\u4f7f\u7528NULL (\u8ddf0 \u76f8\u5bf9) \u7684\u5730\u65b9\u90fd\u5e94\u8be5\u770b\u4f5c\u4e00\u79cd\u6e29\u548c\u7684\u63d0\u793a, \u662f\u5728\u4f7f\u7528\u6307\u9488; \u7a0b\u5e8f\u5458(\u548c\u7f16\u8bd1\u5668\u90fd) \u4e0d\u80fd\u4f9d\u9760\u5b83\u6765\u533a\u522b\u6307\u94880 \u548c\u6574\u65700\u3002\u5728\u9700\u8981\u5176\u5b83\u7c7b\u578b\u76840 \u7684\u65f6\u5019, \u5373\u4fbf\u5b83\u53ef\u80fd\u5de5\u4f5c\u4e5f\u4e0d\u80fd\u4f7f\u7528NULL, \u56e0\u4e3a\u8fd9\u6837\u505a", "\n\u53d1\u51fa\u4e86\u9519\u8bef\u7684\u683c\u5f0f\u4fe1\u606f\u3002(\u800c\u4e14, ANSI \u5141\u8bb8\u628aNULL \u5b9a\u4e49\u4e3a((void *)0), \u8fd9\u5728\u975e\u6307\u9488\u7684\u4e0a\u4e0b\u6587\u4e2d\u5b8c\u5168\u65e0\u6548\u3002\u7279\u522b\u662f, \u4e0d\u80fd\u5728\u9700\u8981ASCII \u7a7a\u5b57\u7b26(NUL) \u7684\u5730\u65b9\u7528NULL\u3002\u5982\u679c\u6709\u5fc5\u8981, \u63d0\u4f9b\u4f60\u81ea\u5df1\u7684\u5b9a\u4e49", "\n#define NUL \u2019\\0\u2019"], "title": "\u5982\u679cNULL \u548c0 \u4f5c\u4e3a\u7a7a\u6307\u9488\u5e38\u6570\u662f\u7b49\u4ef7\u7684, \u90a3\u6211\u5230\u5e95\u8be5\u7528\u54ea\u4e00\u4e2a \u5462\uff1f"},
{"contents": ["\u8ddf\u5176\u5b83\u673a\u5668\u4e00\u6837: \u5b9a\u4e49\u4e3a0 \u3002\u5f53\u7a0b\u5e8f\u5458\u8bf7\u6c42\u4e00\u4e2a\u7a7a\u6307\u9488\u65f6, \u65e0\u8bba\u5199\u201c0\u201d \u8fd8\u662f\u201cNULL\u201d, \u90fd\u662f\u6709\u7f16\u8bd1\u5668\u6765\u751f\u6210\u9002\u5408\u673a\u5668\u7684\u7a7a\u6307\u9488\u7684\u4e8c\u8fdb\u5236\u8868\u8fbe\u5f62\u5f0f\u3002\u56e0\u6b64, \u5728\u7a7a\u6307\u9488\u7684\u5185\u90e8\u8868\u8fbe\u4e0d\u4e3a0 \u7684\u673a\u5668\u4e0a\u5b9a\u4e49NULL \u4e3a0 \u8ddf\u5728\u5176\u5b83\u673a\u5668\u4e0a\u4e00\u6837\u5408\u6cd5\uff1a\u7f16\u8bd1\u5668\u5728\u6307\u9488\u4e0a\u4e0b\u6587\u770b\u5230\u7684\u672a\u52a0\u4fee", "\n\u9970\u76840 \u90fd\u4f1a\u88ab\u751f\u6210\u6b63\u786e\u7684\u7a7a\u6307\u9488\u3002"], "title": "\u5728\u4f7f\u7528\u975e\u5168\u96f6\u4f5c\u4e3a\u7a7a\u6307\u9488\u5185\u90e8\u8868\u8fbe\u7684\u673a\u5668\u4e0a, NULL \u662f\u5982\u4f55\u5b9a\u4e49 \u7684\uff1f"},
{"contents": ["\u4f5c\u4e3a\u4e00\u79cd\u98ce\u683c, \u5f88\u591a\u4eba\u4e0d\u613f\u610f\u5728\u7a0b\u5e8f\u4e2d\u5230\u5904\u51fa\u73b0\u672a\u52a0\u4fee\u9970\u76840\u3002\u56e0\u6b64\u5b9a\u4e49\u4e86\u9884\u5904\u7406\u5b8fNULL (\u5728"], "title": "NULL \u662f\u4ec0\u4e48, \u5b83\u662f\u600e\u4e48\u5b9a\u4e49\u7684\uff1f"},
{"contents": ["\u6839\u636e\u8bed\u8a00\u5b9a\u4e49, \u5728\u6307\u9488\u4e0a\u4e0b\u6587\u4e2d\u7684\u5e38\u65700 \u4f1a\u5728\u7f16\u8bd1\u65f6\u8f6c\u6362\u4e3a\u7a7a\u6307\u9488\u3002\u4e5f\u5c31\u662f\u8bf4, \u5728\u521d\u59cb\u5316\u3001\u8d4b\u503c\u6216\u6bd4\u8f83\u7684\u65f6\u5019, \u5982\u679c\u4e00\u8fb9\u662f\u6307\u9488\u7c7b\u578b\u7684\u503c\u6216\u8868\u8fbe\u5f0f, \u7f16\u8bd1\u5668\u53ef\u4ee5\u786e\u5b9a\u53e6\u4e00\u8fb9\u7684\u5e38\u65700 \u4e3a\u7a7a\u6307\u9488\u5e76\u751f\u6210\u6b63\u786e\u7684\u7a7a\u6307\u9488\u503c\u3002\u56e0\u6b64\u4e0b\u8fb9\u7684\u4ee3\u7801\u6bb5\u5b8c\u5168\u5408\u6cd5\uff1a", "\nchar *p = 0;", "\nif(p != 0)", "\n\u7136\u800c, \u4f20\u5165\u51fd\u6570\u7684\u53c2\u6570\u4e0d\u4e00\u5b9a\u88ab\u5f53\u4f5c\u6307\u9488\u73af\u5883, \u56e0\u800c\u7f16\u8bd1\u5668\u53ef\u80fd\u4e0d\u80fd\u8bc6\u522b\u672a\u52a0\u4fee\u9970\u76840 \u201c\u8868\u793a\u201d \u6307\u9488\u3002\u5728\u51fd\u6570\u8c03\u7528\u7684\u4e0a\u4e0b\u6587\u4e2d\u751f\u6210\u7a7a\u6307\u9488\u9700\u8981\u660e\u786e\u7684\u7c7b\u578b\u8f6c\u6362,\u5f3a\u5236\u628a0 \u770b\u4f5c\u6307\u9488\u3002\u4f8b\u5982, Unix \u7cfb\u7edf\u8c03\u7528execl \u63a5\u53d7\u53d8\u957f\u7684\u4ee5\u7a7a\u6307\u9488\u7ed3\u675f\u7684\u5b57\u7b26\u6307\u9488\u53c2\u6570\u3002\u5b83\u5e94\u8be5\u5982\u4e0b\u6b63\u786e\u8c03\u7528\uff1a", "\nexecl(\u201c/bin/sh\u201d, \u201csh\u201d, \u201c-c\u201d, \u201cdate\u201d, (char *)0);", "\n\u5982\u679c\u7701\u7565\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u7684(char *) \u8f6c\u6362, \u5219\u7f16\u8bd1\u5668\u65e0\u4ece\u77e5\u9053\u8fd9\u662f\u4e00\u4e2a\u7a7a\u6307\u9488,\u4ece\u800c\u5f53\u4f5c\u4e00\u4e2a0 \u4f20\u5165\u3002(\u6ce8\u610f\u5f88\u591aUnix \u624b\u518c\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e0a\u90fd\u5f04\u9519\u4e86\u3002", "\n\u5982\u679c\u8303\u56f4\u5185\u6709\u51fd\u6570\u539f\u578b, \u5219\u53c2\u6570\u4f20\u9012\u53d8\u4e3a\u201c\u8d4b\u503c\u4e0a\u4e0b\u6587\u201d, \u4ece\u800c\u53ef\u4ee5\u5b89\u5168\u7701\u7565\u591a\u6570\u7c7b\u578b\u8f6c\u6362, \u56e0\u4e3a\u539f\u578b\u544a\u77e5\u7f16\u8bd1\u5668\u9700\u8981\u6307\u9488, \u4f7f\u4e4b\u628a\u672a\u52a0\u4fee\u9970\u76840 \u6b63\u786e\u8f6c\u6362\u4e3a\u9002\u5f53\u7684\u6307\u9488\u3002\u51fd\u6570\u539f\u578b\u4e0d\u80fd\u4e3a\u53d8\u957f\u53c2\u6570\u5217\u8868\u4e2d\u7684\u53ef\u53d8\u53c2\u6570\u63d0\u4f9b\u7c7b\u578b\u3002\u5728\u51fd\u6570\u8c03\u7528\u65f6\u5bf9\u6240\u6709\u7684\u7a7a\u6307\u9488\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\u53ef\u80fd\u662f\u9884\u9632\u53ef\u53d8\u53c2\u6570\u548c\u65e0\u539f\u578b\u51fd\u6570\u51fa\u95ee\u9898\u7684\u6700\u5b89\u5168\u7684\u529e\u6cd5\u3002"], "title": "\u600e\u6837\u5728\u7a0b\u5e8f\u91cc\u83b7\u5f97\u4e00\u4e2a\u7a7a\u6307\u9488\uff1f"},
{"contents": ["\u5f53C \u5728\u8868\u8fbe\u5f0f\u4e2d\u8981\u6c42\u5e03\u5c14\u503c\u65f6, \u5982\u679c\u8868\u8fbe\u5f0f\u7b49\u4e8e0 \u5219\u8ba4\u4e3a\u8be5\u503c\u4e3a\u5047, \u5426\u5219\u4e3a\u771f\u3002\u6362\u8a00\u4e4b, \u53ea\u8981\u5199\u51fa", "\nif(expr)", "\n\u65e0\u8bba\u201cexpr\u201d \u662f\u4efb\u4f55\u8868\u8fbe\u5f0f, \u7f16\u8bd1\u5668\u672c\u8d28\u4e0a\u90fd\u4f1a\u628a\u5b83\u5f53if((expr) != 0)\u5904\u7406\u3002", "\n\u5982\u679c\u7528\u6307\u9488p \u4ee3\u66ff\u201cexpr\u201d \u5219if(p) \u7b49\u4ef7\u4e8eif(p != 0)\u3002", "\n\u800c\u8fd9\u662f\u4e00\u4e2a\u6bd4\u8f83\u4e0a\u4e0b\u6587, \u56e0\u6b64\u7f16\u8bd1\u5668\u53ef\u4ee5\u770b\u51fa0 \u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u7a7a\u6307\u9488\u5e38\u6570, \u5e76\u4f7f\u7528\u6b63\u786e\u7684\u7a7a\u6307\u9488\u503c\u3002\u8fd9\u91cc\u6ca1\u6709\u4efb\u4f55\u6b3a\u9a97; \u7f16\u8bd1\u5668\u5c31\u662f\u8fd9\u6837\u5de5\u4f5c\u7684, \u5e76\u4e3a\u3001\u4e8c\u8005\u751f\u6210\u5b8c\u5168\u4e00\u6837\u7684\u4ee3\u7801\u3002\u7a7a\u6307\u9488\u7684\u5185\u90e8\u8868\u8fbe\u65e0\u5173\u7d27\u8981\u3002", "\n\u5e03\u5c14\u5426\u64cd\u4f5c\u7b26! \u53ef\u5982\u4e0b\u63cf\u8ff0:", "\n!expr \u672c\u8d28\u4e0a\u7b49\u4ef7\u4e8e(expr)\uff1f0:1", "\n\u6216\u7b49\u4ef7\u4e8e((expr) == 0)", "\n\u4ece\u800c\u5f97\u51fa\u7ed3\u8bba", "\nif(!p) \u7b49\u4ef7\u4e8eif(p == 0)", "\n\u7c7b\u4f3cif(p) \u8fd9\u6837\u7684\u201c\u7f29\u5199\u201d, \u5c3d\u7ba1\u5b8c\u5168\u5408\u6cd5, \u4f46\u88ab\u4e00\u4e9b\u4eba\u8ba4\u4e3a\u662f\u4e0d\u597d\u7684\u98ce\u683c"], "title": "\u7528\u7f29\u5199\u7684\u6307\u9488\u6bd4\u8f83\u201cif(p)\u201d \u68c0\u67e5\u7a7a\u6307\u9488\u662f\u5426\u53ef\u9760\uff1f\u5982\u679c\u7a7a\u6307\u9488\u7684\u5185 \u90e8\u8868\u8fbe\u4e0d\u662f0 \u4f1a\u600e\u4e48\u6837\uff1f"},
{"contents": ["\u8bed\u8a00\u5b9a\u4e49\u4e2d\u8bf4\u660e, \u6bcf\u4e00\u79cd\u6307\u9488\u7c7b\u578b\u90fd\u6709\u4e00\u4e2a\u7279\u6b8a\u503c\u2014\u2014 \u201c\u7a7a\u6307\u9488\u201d \u2014\u2014 \u5b83\u4e0e\u540c\u7c7b\u578b\u7684\u5176\u5b83\u6240\u6709\u6307\u9488\u503c\u90fd\u4e0d\u76f8\u540c, \u5b83\u201c\u4e0e\u4efb\u4f55\u5bf9\u8c61\u6216\u51fd\u6570\u7684\u6307\u9488\u503c\u90fd\u4e0d\u76f8\u7b49\u201d\u3002\u4e5f\u5c31\u662f\u8bf4, \u53d6\u5730\u5740\u64cd\u4f5c\u7b26& \u6c38\u8fdc\u4e5f\u4e0d\u80fd\u5f97\u5230\u7a7a\u6307\u9488, \u540c\u6837\u5bf9malloc() \u7684\u6210\u529f\u8c03\u7528\u4e5f\u4e0d\u4f1a\u8fd4\u56de\u7a7a\u6307\u9488, \u5982\u679c\u5931\u8d25, malloc() \u7684\u786e\u8fd4\u56de\u7a7a\u6307\u9488, \u8fd9\u662f\u7a7a\u6307\u9488\u7684\u5178\u578b\u7528\u6cd5:\u8868\u793a\u201c\u672a\u5206\u914d\u201d \u6216\u8005\u201c\u5c1a\u672a\u6307\u5411\u4efb\u4f55\u5730\u65b9\u201d \u7684\u6307\u9488\u3002", "\n\u7a7a\u6307\u9488\u5728\u6982\u5ff5\u4e0a\u4e0d\u540c\u4e8e\u672a\u521d\u59cb\u5316\u7684\u6307\u9488\u3002\u7a7a\u6307\u9488\u53ef\u4ee5\u786e\u4fdd\u4e0d\u6307\u5411\u4efb\u4f55\u5bf9\u8c61\u6216\u51fd\u6570; \u800c\u672a\u521d\u59cb\u5316\u6307\u9488\u5219\u53ef\u80fd\u6307\u5411\u4efb\u4f55\u5730\u65b9\u3002", "\n\u5982\u4e0a\u6587\u6240\u8ff0, \u6bcf\u79cd\u6307\u9488\u7c7b\u578b\u90fd\u6709\u4e00\u4e2a\u7a7a\u6307\u9488, \u800c\u4e0d\u540c\u7c7b\u578b\u7684\u7a7a\u6307\u9488\u7684\u5185\u90e8\u8868\u793a\u53ef\u80fd\u4e0d\u5c3d\u76f8\u540c\u3002\u5c3d\u7ba1\u7a0b\u5e8f\u5458\u4e0d\u5fc5\u77e5\u9053\u5185\u90e8\u503c, \u4f46\u7f16\u8bd1\u5668\u5fc5\u987b\u65f6\u523b\u660e\u786e\u9700\u8981\u90a3\u79cd\u7a7a\u6307\u9488, \u4ee5\u4fbf\u5728\u9700\u8981\u7684\u65f6\u5019\u52a0\u4ee5\u533a\u5206"], "title": "\u7a7a\u6307\u9488\u5230\u5e95\u662f\u4ec0\u4e48"},
{"contents": ["\u6700\u521d, \u4e00\u4e2a\u51fd\u6570\u6307\u9488\u5fc5\u987b\u7528* \u64cd\u4f5c\u7b26(\u548c\u4e00\u5bf9\u989d\u5916\u7684\u62ec\u5f27) \u201c\u8f6c\u6362\u4e3a\u201d \u4e00\u4e2a\u201c\u771f\u6b63\u7684\u201d \u51fd\u6570\u624d\u80fd\u8c03\u7528:", "\nint r, func(), (*fp)() = func;", "\nr = (*fp)();", "\n\u800c\u51fd\u6570\u603b\u662f\u901a\u8fc7\u6307\u9488\u8fdb\u884c\u8c03\u7528\u7684, \u6240\u6709\u201c\u771f\u6b63\u7684\u201d \u51fd\u6570\u540d\u603b\u662f\u9690\u5f0f\u7684\u9000\u5316\u4e3a\u6307\u9488(\u5728\u8868\u8fbe\u5f0f\u4e2d, \u6b63\u5982\u5728\u521d\u59cb\u5316\u65f6\u4e00\u6837\u3002\u53c2\u89c1\u95ee\u98981.14)\u3002\u8fd9\u4e2a\u63a8\u8bba\u8868\u660e\u65e0\u8bbafp \u662f\u51fd\u6570\u540d\u548c\u51fd\u6570\u7684\u6307\u9488", "\nr = fp();", "\nANSI C \u6807\u51c6\u5b9e\u9645\u4e0a\u63a5\u53d7\u540e\u8fb9\u7684\u89e3\u91ca, \u8fd9\u610f\u5473\u7740* \u64cd\u4f5c\u7b26\u4e0d\u518d\u9700\u8981, \u5c3d\u7ba1\u4f9d\u7136\u5141\u8bb8\u3002"], "title": "\u6211\u770b\u5230\u4e86\u7528\u6307\u9488\u8c03\u7528\u51fd\u6570\u7684\u4e0d\u540c\u8bed\u6cd5\u5f62\u5f0f\u3002\u5230\u5e95\u600e\u4e48\u56de\u4e8b\uff1f"},
{"contents": ["\u5728C \u8bed\u8a00\u4e2d, \u7c7b\u578b\u8f6c\u6362\u610f\u5473\u7740\u201c\u628a\u8fd9\u4e9b\u4e8c\u8fdb\u5236\u4f4d\u770b\u4f5c\u53e6\u4e00\u79cd\u7c7b\u578b, \u5e76\u4f5c\u76f8\u5e94\u7684\u5bf9\u5f85\u201d; \u8fd9\u662f\u4e00\u4e2a\u8f6c\u6362\u64cd\u4f5c\u7b26, \u6839\u636e\u5b9a\u4e49\u5b83\u53ea\u80fd\u751f\u6210\u4e00\u4e2a\u53f3\u503c(rvalue)\u3002\u800c\u53f3\u503c\u65e2\u4e0d\u80fd\u8d4b\u503c, \u4e5f\u4e0d\u80fd\u7528++ \u81ea\u589e\u3002(\u5982\u679c\u7f16\u8bd1\u5668\u652f\u6301\u8fd9\u6837\u7684\u6269\u5c55, \u90a3\u8981\u4e48\u662f\u4e00\u4e2a\u9519\u8bef, \u8981\u4e48\u662f\u6709\u610f\u4f5c\u51fa\u7684\u975e\u6807\u51c6\u6269\u5c55\u3002) \u8981\u8fbe\u5230\u4f60\u7684\u76ee\u7684\u53ef\u4ee5\u7528:p = (char *)((int *)p + 1);", "\n\u6216\u8005,\u56e0\u4e3ap \u662fchar * \u578b, \u76f4\u63a5\u7528p += sizeof(int);", "\n\u4f46\u662f, \u5728\u53ef\u80fd\u7684\u60c5\u51b5\u4e0b, \u4f60\u8fd8\u662f\u5e94\u8be5\u9996\u5148\u9009\u62e9\u9002\u5f53\u7684\u6307\u9488\u7c7b\u578b, \u800c\u4e0d\u662f\u4e00\u5473\u5730\u8bd5\u56fe\u674e\u4ee3\u6843\u50f5\u3002"], "title": "\u6211\u6709\u4e00\u4e2achar * \u578b\u6307\u9488\u6b63\u5de7\u6307\u5411\u4e00\u4e9bint \u578b\u53d8\u91cf, \u6211\u60f3\u8df3\u8fc7\u5b83\u4eec\u3002 \u4e3a\u4ec0\u4e48\u5982\u4e0b\u7684\u4ee3\u7801((int *)p)++; \u4e0d\u884c\uff1f"},
{"contents": ["\u540e\u7f00++ \u548c\u2013 \u64cd\u4f5c\u7b26\u672c\u8d28\u4e0a\u6bd4\u524d\u7f00\u4e00\u76ee\u64cd\u4f5c\u7684\u4f18\u5148\u7ea7\u9ad8, \u56e0\u6b64*p++ \u548c*(p++) \u7b49\u4ef7, \u5b83\u81ea\u589ep \u5e76\u8fd4\u56dep \u81ea\u589e\u4e4b\u524d\u6240\u6307\u5411\u7684\u503c\u3002\u8981\u81ea\u589ep \u6307\u5411\u7684\u503c, \u4f7f\u7528(*p)++, \u5982\u679c\u526f\u4f5c\u7528\u7684\u987a\u5e8f\u65e0\u5173\u7d27\u8981\u4e5f\u53ef\u4ee5\u4f7f\u7528++*p\u3002"], "title": "*p++ \u81ea\u589ep \u8fd8\u662fp \u6240\u6307\u5411\u7684\u53d8\u91cf\uff1f"},
{"contents": ["\u4f60\u6240\u58f0\u660e\u7684\u6307\u9488\u662fp, \u800c\u4e0d\u662f*p, \u5f53\u4f60\u64cd\u4f5c\u6307\u9488\u672c\u8eab\u65f6(\u4f8b\u5982\u5f53\u4f60\u5bf9\u5176\u8d4b\u503c, \u4f7f\u4e4b\u6307\u5411\u522b\u5904\u65f6), \u4f60\u53ea\u9700\u8981\u4f7f\u7528\u6307\u9488\u7684\u540d\u5b57\u5373\u53ef:", "\np = malloc(10);\u5f53\u4f60\u64cd\u4f5c\u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u65f6, \u4f60\u624d\u9700\u8981\u4f7f\u7528* \u4f5c\u4e3a\u95f4\u63a5\u64cd\u4f5c\u7b26:*p = \u2019H\u2019;"], "title": "\u6211\u60f3\u58f0\u660e\u4e00\u4e2a\u6307\u9488\u5e76\u4e3a\u5b83\u5206\u914d\u4e00\u4e9b\u7a7a\u95f4, \u4f46\u5374\u4e0d\u884c\u3002\u8fd9\u4e9b\u4ee3\u7801\u6709\u4ec0\u4e48 \u95ee\u9898\uff1fchar *p; *p = malloc(10);"},
{"contents": ["\u4e0d\u53ef\u79fb\u690d\u3002C \u4e2d\u6ca1\u6709\u4e00\u822c\u7684\u6307\u9488\u7684\u6307\u9488\u7c7b\u578b\u3002void* \u53ef\u4ee5\u7528\u4f5c\u4e00\u822c\u6307\u9488\u53ea\u662f\u56e0\u4e3a\u5f53\u5b83\u548c\u5176\u5b83\u7c7b\u578b\u76f8\u4e92\u8d4b\u503c\u7684\u65f6\u5019, \u5982\u679c\u9700\u8981, \u5b83\u53ef\u4ee5\u81ea\u52a8\u8f6c\u6362\u6210\u5176\u5b83\u7c7b\u578b; \u4f46\u662f, \u5982\u679c\u8bd5\u56fe\u8fd9\u6837\u8f6c\u6362\u6240\u6307\u7c7b\u578b\u4e3avoid* \u4e4b\u5916\u7684\u7c7b\u578b\u7684void** \u6307\u9488\u65f6, \u8fd9\u4e2a\u8f6c\u6362\u4e0d\u80fd\u5b8c\u6210\u3002"], "title": "\u6211\u80fd\u5426\u7528void** \u6307\u9488\u4f5c\u4e3a\u53c2\u6570, \u4f7f\u51fd\u6570\u6309\u5f15\u7528\u63a5\u53d7\u4e00\u822c\u6307\u9488\uff1f"},
{"contents": ["\u6839\u636eC \u7684\u5185\u90e8\u7c7b\u578b\u8f6c\u6362\u89c4\u5219, \u4e58\u6cd5\u662f\u7528int \u8fdb\u884c\u7684, \u800c\u5176\u7ed3\u679c\u53ef\u80fd\u5728\u8f6c\u6362\u4e3along \u578b\u5e76\u8d4b\u7ed9\u5de6\u8fb9\u7684c \u4e4b\u524d\u6ea2\u51fa\u6216\u88ab\u622a\u77ed\u3002\u53ef\u4ee5\u4f7f\u7528\u660e\u786e\u7684\u7c7b\u578b\u8f6c\u6362, \u5f3a\u8feb\u4e58\u6cd5\u4ee5long \u578b\u8fdb\u884c:", "\nlong int c = (long int)a * b;", "\n\u6ce8\u610f, (long int)(a * b) \u4e0d\u80fd\u8fbe\u5230\u9700\u8981\u7684\u6548\u679c\u3002", "\n\u5f53\u4e24\u4e2a\u6574\u6570\u505a\u9664\u6cd5\u800c\u7ed3\u679c\u8d4b\u4e0e\u4e00\u4e2a\u6d6e\u70b9\u53d8\u91cf\u65f6, \u4e5f\u6709\u53ef\u80fd\u6709\u540c\u6837\u7c7b\u578b\u7684\u95ee\u9898,", "\n\u89e3\u51b3\u65b9\u6cd5\u4e5f\u662f\u7c7b\u4f3c\u7684\u3002"], "title": "\u4e3a\u4ec0\u4e48\u5982\u4e0b\u7684\u4ee3\u7801int a = 100, b = 100; long int c = a * b; \u4e0d \u80fd\u5de5\u4f5c\uff1f"},
{"contents": ["\u5e8f\u5217\u70b9\u662f\u4e00\u4e2a\u65f6\u95f4\u70b9(\u5728\u6574\u4e2a\u8868\u8fbe\u5f0f\u5168\u90e8\u8ba1\u7b97\u5b8c\u6bd5\u4e4b\u540e\u6216\u5728||\u3001&&\u3001? : \u6216\u9017\u53f7\u8fd0\u7b97\u7b26\u5904, \u6216\u5728\u51fd\u6570\u8c03\u7528\u4e4b\u524d), \u6b64\u523b\u5c18\u57c3\u843d\u5b9a, \u6240\u6709\u7684\u526f\u4f5c\u7528\u90fd\u5df2\u786e\u4fdd\u7ed3\u675f\u3002ANSI/ISO C \u6807\u51c6\u8fd9\u6837\u63cf\u8ff0:\u5728\u4e0a\u4e00\u4e2a\u548c\u4e0b\u4e00\u4e2a\u5e8f\u5217\u70b9\u4e4b\u95f4, \u4e00\u4e2a\u5bf9\u8c61\u6240\u4fdd\u5b58\u7684\u503c\u81f3\u591a\u53ea\u80fd\u88ab\u8868", "\n\u8fbe\u5f0f\u7684\u8ba1\u7b97\u4fee\u6539\u4e00\u6b21\u3002\u800c\u4e14\u524d\u4e00\u4e2a\u503c\u53ea\u80fd\u7528\u4e8e\u51b3\u5b9a\u5c06\u8981\u4fdd\u5b58\u7684\u503c\u3002\u7b2c\u4e8c\u53e5\u8bdd\u6bd4\u8f83\u8d39\u89e3\u3002\u5b83\u8bf4\u5728\u4e00\u4e2a\u8868\u8fbe\u5f0f\u4e2d\u5982\u679c\u67d0\u4e2a\u5bf9\u8c61\u9700\u8981\u5199\u5165, \u5219\u5728\u540c\u4e00\u8868\u8fbe\u5f0f\u4e2d\u5bf9\u8be5\u5bf9\u8c61\u7684\u8bbf\u95ee\u5e94\u8be5\u53ea\u5c40\u9650\u4e8e\u76f4\u63a5\u7528\u4e8e\u8ba1\u7b97\u5c06\u8981\u5199\u5165\u7684\u503c\u3002\u8fd9\u6761\u89c4\u5219\u6709\u6548\u5730\u9650\u5236\u4e86\u53ea\u6709\u80fd\u786e\u4fdd\u5728\u4fee\u6539\u4e4b\u524d\u624d\u8bbf\u95ee\u53d8\u91cf\u7684\u8868\u8fbe\u5f0f\u4e3a\u5408\u6cd5\u3002\u4f8b\u5982i = i+1 \u5408\u6cd5, \u800ca[i] = i++ \u5219\u975e\u6cd5("], "title": "\u201c\u5e8f\u5217\u70b9\u201d \u662f\u4ec0\u4e48\uff1f"},
{"contents": ["\u4f7f\u7528\u6211\u7684\u7f16\u8bd1\u5668,\u4e0b\u9762\u7684\u4ee3\u7801int i=7; printf(\u201c%d\\n\u201d, i++ *i++); \u8fd4\u56de49\uff1f\u4e0d\u7ba1\u6309\u4ec0\u4e48\u987a\u5e8f\u8ba1\u7b97, \u96be\u9053\u4e0d\u8be5\u6253\u5370\u51fa56\u5417\uff1f", "\n\u5c3d\u7ba1\u540e\u7f00\u81ea\u52a0\u548c\u540e\u7f00\u81ea\u51cf\u64cd\u4f5c\u7b26++ \u548c\u2013 \u5728\u8f93\u51fa\u5176\u65e7\u503c\u4e4b\u540e\u624d\u4f1a\u6267\u884c\u8fd0\u7b97,\u4f46\u8fd9\u91cc\u7684\u201c\u4e4b\u540e\u201d\u5e38\u5e38\u88ab\u8bef\u89e3\u3002\u6ca1\u6709\u4efb\u4f55\u4fdd\u8bc1\u786e\u4fdd\u81ea\u589e\u6216\u81ea\u51cf\u4f1a\u5728\u8f93\u51fa\u53d8\u91cf\u539f\u503c\u4e4b\u540e\u548c\u5bf9\u8868\u8fbe\u5f0f\u7684\u5176\u5b83\u90e8\u5206\u8fdb\u884c\u8ba1\u7b97\u4e4b\u524d\u7acb\u5373\u8fdb\u884c\u3002\u4e5f\u4e0d\u80fd\u4fdd\u8bc1\u53d8\u91cf\u7684\u66f4\u65b0\u4f1a\u5728\u8868\u8fbe\u5f0f\u201c\u5b8c\u6210\u201d (\u6309\u7167ANSI C \u7684\u672f\u8bed, \u5728\u4e0b\u4e00\u4e2a\u201c\u5e8f\u5217\u70b9\u201d \u4e4b\u524d, \u53c2\u89c1\u95ee\u98983.7) \u4e4b\u524d\u7684\u67d0\u4e2a\u65f6\u523b\u8fdb\u884c\u3002\u672c\u4f8b\u4e2d, \u7f16\u8bd1\u5668\u9009\u62e9\u4f7f\u7528\u53d8\u91cf\u7684\u65e7\u503c\u76f8\u4e58\u4ee5\u540e\u518d\u5bf9\u4e8c\u8005\u8fdb\u884c\u81ea\u589e\u8fd0\u7b97\u3002", "\n\u5305\u542b\u591a\u4e2a\u4e0d\u786e\u5b9a\u7684\u526f\u4f5c\u7528\u7684\u4ee3\u7801\u7684\u884c\u4e3a\u603b\u662f\u88ab\u8ba4\u4e3a\u672a\u5b9a\u4e49\u3002(\u7b80\u5355\u800c\u8a00, \u201c\u591a\u4e2a\u4e0d\u786e\u5b9a\u526f\u4f5c\u7528\u201d \u662f\u6307\u5728\u540c\u4e00\u4e2a\u8868\u8fbe\u5f0f\u4e2d\u4f7f\u7528\u5bfc\u81f4\u540c\u4e00\u5bf9\u8c61\u4fee\u6539\u4e24\u6b21\u6216\u4fee\u6539\u4ee5\u540e\u53c8\u88ab\u5f15\u7528\u7684\u81ea\u589e, \u81ea\u51cf\u548c\u8d4b\u503c\u64cd\u4f5c\u7b26\u7684\u4efb\u4f55\u7ec4\u5408\u3002\u8fd9\u662f\u4e00\u4e2a\u7c97\u7565\u7684\u5b9a\u4e49; \u751a\u81f3\u90fd\u4e0d\u8981\u8bd5\u56fe\u63a2\u7a76\u8fd9\u4e9b\u4e1c\u897f\u5728\u4f60\u7684\u7f16\u8bd1\u5668\u4e2d\u662f\u5982\u4f55\u5b9e\u73b0\u7684(\u8fd9\u4e0e\u8bb8\u591aC \u6559\u79d1\u4e66\u4e0a\u7684\u5f31\u667a\u7ec3\u4e60\u6b63\u597d\u76f8\u53cd); \u6b63\u5982K&R \u660e\u667a\u5730\u6307\u51fa, \u201c\u5982\u679c\u4f60\u4e0d\u77e5\u9053\u5b83\u4eec\u5728\u4e0d\u540c\u7684\u673a\u5668\u4e0a\u5982\u4f55\u5b9e\u73b0, \u8fd9\u6837\u7684\u65e0\u77e5\u53ef\u80fd\u6070\u6070\u4f1a\u6709\u52a9\u4e8e\u4fdd\u62a4\u4f60\u3002\u201d"], "title": "\u8fd9\u6bb5\u4ee3\u7801\u96be\u9053\u4e0d\u8be5\u6253\u5370\u51fa56\u5417\uff1f"},
{"contents": ["\u5b83\u53ef\u4ee5\u7528\u4f5c\u4e00\u79cd\u683c\u5f0f\u4e0a\u7684\u63d0\u793a\u8868\u660e\u51fd\u6570\u7684\u5b9a\u4e49\u53ef\u80fd\u5728\u53e6\u4e00\u4e2a\u6e90\u6587\u4ef6\u4e2d, \u4f46\u5728", "\nextern int f();", "\n\u548c", "\nint f();", "\n\u4e4b\u95f4\u5e76\u6ca1\u6709\u5b9e\u8d28\u7684\u533a\u522b\u3002"], "title": "extern \u5728\u51fd\u6570\u58f0\u660e\u4e2d\u662f\u4ec0\u4e48\u610f\u601d\uff1f"},
{"contents": ["\u53ea\u6709\u5f88\u5c0f\u7684\u533a\u522b\u3002C \u6807\u51c6\u4e2d\u5141\u8bb8\u679a\u4e3e\u548c\u5176\u5b83\u6574\u5f62\u7c7b\u522b\u81ea\u7531\u6df7\u7528\u800c\u4e0d\u4f1a\u51fa\u9519\u3002\uff08\u4f46\u662f, \u5047\u5982\u7f16\u8bd1\u5668\u4e0d\u5141\u8bb8\u5728\u672a\u7ecf\u660e\u786e\u7c7b\u578b\u8f6c\u6362\u7684\u60c5\u51b5\u4e0b\u6df7\u7528\u8fd9\u4e9b\u7c7b\u578b\uff0c\u5219\u806a\u660e\u5730\u4f7f\u7528\u679a\u4e3e\u53ef\u4ee5\u6355\u6349\u5230\u67d0\u4e9b\u7a0b\u5e8f\u9519\u8bef\u3002\uff09", "\n\u679a\u4e3e\u7684\u4e00\u4e9b\u4f18\u70b9: \u81ea\u52a8\u8d4b\u503c; \u8c03\u8bd5\u5668\u5728\u68c0\u9a8c\u679a\u4e3e\u53d8\u91cf\u65f6, \u53ef\u4ee5\u663e\u793a\u7b26\u53f7\u503c; \u5b83\u4eec\u670d\u4ece\u6570\u636e\u5757\u4f5c\u7528\u57df\u89c4\u5219\u3002\uff08\u7f16\u8bd1\u5668\u4e5f\u53ef\u4ee5\u5bf9\u5728\u679a\u4e3e\u53d8\u91cf\u88ab\u4efb\u610f\u5730\u548c\u5176\u5b83\u7c7b\u578b\u6df7\u7528\u65f6, \u4ea7\u751f\u975e\u91cd\u8981\u7684\u8b66\u544a\u4fe1\u606f, \u56e0\u4e3a\u8fd9\u88ab\u8ba4\u4e3a\u662f\u574f\u98ce\u683c\u3002\uff09\u4e00\u4e2a\u7f3a\u70b9\u662f\u7a0b\u5e8f\u5458\u4e0d\u80fd\u63a7\u5236\u8fd9\u4e9b\u5bf9\u975e\u91cd\u8981\u7684\u8b66\u544a; \u6709\u4e9b\u7a0b\u5e8f\u5458\u5219\u53cd\u611f\u4e8e\u65e0\u6cd5\u63a7\u5236\u679a\u4e3e\u53d8\u91cf\u7684\u5927\u5c0f\u3002"], "title": "\u679a\u4e3e\u548c\u4e00\u7ec4\u9884\u5904\u7406\u7684#define \u6709\u4ec0\u4e48\u4e0d\u540c\uff1f"},
{"contents": ["\u95ee\u9898\u7a0b\u5e8f:", "\nstruct list {", "\nchar *item;", "\nstruct list *next;", "\n}", "\n/* \u8fd9\u91cc\u662fmain \u7a0b\u5e8f*/", "\nmain(argc, argv)", "\n{ \u2026 }", "\n\u7f3a\u5c11\u7684\u4e00\u4e2a\u5206\u53f7\u4f7fmain() \u88ab\u5b9a\u4e49\u4e3a\u8fd4\u56de\u4e00\u4e2a\u7ed3\u6784\u3002\u7531\u4e8e\u4e2d\u95f4\u7684\u6ce8\u91ca\u884c, \u8fd9\u4e2a\u8054\u7cfb\u4e0d\u5bb9\u6613\u770b\u51fa\u6765\u3002\u56e0\u4e3a\u4e00\u822c\u4e0a, \u8fd4\u56de\u7ed3\u6784\u7684\u51fd\u6570\u5728\u5b9e\u73b0\u65f6, \u4f1a\u52a0\u5165\u4e00\u4e2a\u9690\u542b\u7684\u8fd4\u56de\u6307\u9488, \u8fd9\u4e2a\u4ea7\u751f\u7684main() \u51fd\u6570\u4ee3\u7801\u8bd5\u56fe\u63a5\u53d7\u4e09\u4e2a\u53c2\u6570, \u800c\u5b9e\u9645\u4e0a\u53ea\u6709\u4e24\u4e2a\u4f20\u5165(\u8fd9\u91cc, \u7531C \u7684\u542f\u52a8\u4ee3\u7801\u4f20\u5165)"], "title": "\u7a0b\u5e8f\u8fd0\u884c\u6b63\u786e, \u4f46\u9000\u51fa\u65f6\u5374\u201ccore dump\u201d\u4e86\uff0c\u600e\u4e48\u56de\u4e8b\uff1f"},
{"contents": ["\u7528fwrite() \u5199\u4e00\u4e2a\u7ed3\u6784\u76f8\u5bf9\u7b80\u5355:", "\nfwrite(&somestruct, sizeof somestruct, 1, fp);\u5bf9\u5e94\u7684fread() \u8c03\u7528\u53ef\u4ee5\u518d\u628a\u5b83\u8bfb\u56de\u6765\u3002\u4f46\u662f\u8fd9\u6837\u5199\u51fa\u7684\u6587\u4ef6\u5374\u4e0d\u80fd\u79fb\u690d(\u53c2", "\n\u89c1\u95ee\u98982.10 \u548c20.3)\u3002\u540c\u65f6\u6ce8\u610f\u5982\u679c\u7ed3\u6784\u5305\u542b\u4efb\u4f55\u6307\u9488, \u5219\u53ea\u6709\u6307\u9488\u503c\u4f1a\u88ab\u5199\u5165\u6587\u4ef6, \u5f53\u5b83\u4eec\u518d\u6b21\u8bfb\u56de\u6765\u7684\u65f6\u5019, \u5f88\u53ef\u80fd\u5df2\u7ecf\u5931\u6548\u3002\u6700\u540e, \u4e3a\u4e86\u5e7f\u6cdb\u7684\u79fb\u690d, \u4f60\u5fc5\u987b\u7528\u201cb\u201d \u6807\u5fd7\u6253\u5f00\u6587\u4ef6;", "\n\u79fb\u690d\u6027\u66f4\u597d\u7684\u65b9\u6848\u662f\u5199\u4e00\u5bf9\u51fd\u6570, \u7528\u53ef\u79fb\u690d(\u53ef\u80fd\u751a\u81f3\u662f\u4eba\u53ef\u8bfb) \u7684\u65b9\u5f0f\u6309\u57df\u8bfb\u5199\u7ed3\u6784, \u5c3d\u7ba1\u5f00\u59cb\u53ef\u80fd\u5de5\u4f5c\u91cf\u7a0d\u5927\u3002"], "title": "\u600e\u6837\u4ece/\u5411\u6570\u636e\u6587\u4ef6\u8bfb/\u5199\u7ed3\u6784\uff1f"},
{"contents": ["\u4f20\u7edf\u7684C \u6ca1\u6709\u529e\u6cd5\u751f\u6210\u533f\u540d\u7ed3\u6784\u503c; \u4f60\u5fc5\u987b\u4f7f\u7528\u4e34\u65f6\u7ed3\u6784\u53d8\u91cf\u6216\u4e00\u4e2a\u5c0f\u7684\u7ed3\u6784\u751f\u6210\u51fd\u6570\u3002", "\nC99 \u6807\u51c6\u5f15\u5165\u4e86\u201c\u590d\u5408\u5e38\u91cf\u201d (compound literals); \u590d\u5408\u5e38\u91cf\u7684\u4e00\u79cd\u5f62\u5f0f\u5c31\u53ef\u4ee5\u5141\u8bb8\u7ed3\u6784\u5e38\u91cf\u3002\u4f8b\u5982, \u5411\u5047\u60f3plotpoint() \u51fd\u6570\u4f20\u5165\u4e00\u4e2a\u5750\u6807\u5bf9\u5e38\u6570, \u53ef\u4ee5\u8c03\u7528plotpoint((struct point){1, 2});\u4e0e\u201c\u6307\u5b9a\u521d\u59cb\u503c\u201d (designated initializers) (C99 \u7684\u53e6\u4e00\u4e2a\u529f\u80fd) \u7ed3\u5408, \u4e5f\u53ef\u4ee5\u7528\u6210\u5458\u540d\u79f0\u786e\u5b9a\u6210\u5458\u503c:plotpoint((struct point){.x=1, .y=2});"], "title": "\u5982\u4f55\u5411\u63a5\u53d7\u7ed3\u6784\u53c2\u6570\u7684\u51fd\u6570\u4f20\u5165\u5e38\u6570\u503c\uff1f"},
{"contents": ["\u6ca1\u6709\u3002\u7f16\u8bd1\u5668\u6ca1\u6709\u7b80\u5355\u7684\u597d\u529e\u6cd5\u5b9e\u73b0\u7ed3\u6784\u6bd4\u8f83(\u5373, \u652f\u6301\u7ed3\u6784\u7684== \u64cd\u4f5c\u7b26),\u8fd9\u4e5f\u7b26\u5408C \u7684\u4f4e\u5c42\u7279\u6027\u3002\u7b80\u5355\u7684\u6309\u5b57\u8282\u6bd4\u8f83\u4f1a\u7531\u4e8e\u7ed3\u6784\u4e2d\u6ca1\u6709\u7528\u5230\u7684\u201c\u7a7a\u6d1e\u201d \u4e2d\u7684\u968f\u673a\u6570\u636e(\u53c2\u89c1\u95ee\u98982.10) \u800c\u5931\u8d25; \u800c\u6309\u57df\u6bd4\u8f83\u5728\u5904\u7406\u5927\u7ed3\u6784\u65f6\u9700\u8981\u96be\u4ee5\u63a5\u53d7\u7684\u5927\u91cf\u91cd\u590d\u4ee3\u7801\u3002\u5982\u679c\u4f60\u9700\u8981\u6bd4\u8f83\u4e24\u4e2a\u7ed3\u6784, \u4f60\u5fc5\u987b\u81ea\u5df1\u5199\u51fd\u6570\u6309\u57df\u6bd4\u8f83\u3002"], "title": "\u662f\u5426\u6709\u81ea\u52a8\u6bd4\u8f83\u7ed3\u6784\u7684\u65b9\u6cd5\uff1f"},
{"contents": ["\u4ee5\u4e0b\u7684\u521d\u59cb\u5316\u6709\u4ec0\u4e48\u533a\u522b\uff1fchar a[] = \u201cstring literal\u201d; char *p= \u201cstring literal\u201d; \u5f53\u6211\u5411p[i] \u8d4b\u503c\u7684\u65f6\u5019, \u6211\u7684\u7a0b\u5e8f\u5d29\u6e83\u4e86\u3002", "\n\u5b57\u7b26\u4e32\u5e38\u91cf\u6709\u4e24\u79cd\u7a0d\u6709\u533a\u522b\u7684\u7528\u6cd5\u3002\u7528\u4f5c\u6570\u7ec4\u521d\u59cb\u503c(\u5982\u540c\u5728char a[] \u7684\u58f0\u660e\u4e2d), \u5b83\u6307\u660e\u8be5\u6570\u7ec4\u4e2d\u5b57\u7b26\u7684\u521d\u59cb\u503c\u3002\u5176\u5b83\u60c5\u51b5\u4e0b, \u5b83\u4f1a\u8f6c\u5316\u4e3a\u4e00\u4e2a\u65e0\u540d\u7684\u9759\u6001\u5b57\u7b26\u6570\u7ec4, \u53ef\u80fd\u4f1a\u5b58\u50a8\u5728\u53ea\u8bfb\u5185\u5b58\u4e2d, \u8fd9\u5c31\u662f\u9020\u6210\u5b83\u4e0d\u4e00\u5b9a\u80fd\u88ab\u4fee\u6539\u3002\u5728\u8868\u8fbe\u5f0f\u73af\u5883\u4e2d, \u6570\u7ec4\u901a\u5e38\u88ab\u7acb\u5373\u8f6c\u5316\u4e3a\u4e00\u4e2a\u6307\u9488(\u53c2\u89c1\u7b2c6 \u7ae0), \u56e0\u6b64\u7b2c\u4e8c\u4e2a\u58f0\u660e\u628ap \u521d\u59cb\u5316\u6210\u6307\u5411\u65e0\u540d\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002\u4e3a\u4e86\u7f16\u8bd1\u65e7\u4ee3\u7801, \u6709\u7684\u7f16\u8bd1\u5668\u6709\u4e00\u4e2a\u63a7\u5236\u5b57\u7b26\u4e32\u662f\u5426\u53ef\u5199\u7684\u5f00\u5173\u3002"], "title": "\u4ee5\u4e0b\u7684\u521d\u59cb\u5316\u6709\u4ec0\u4e48\u533a\u522b\uff1f"},
{"contents": ["1\u3001\u00a0\u00a0\u00a0 \u8bf4\u51fa\u4f60\u5bf9remoting \u548cwebservice\u7684\u7406\u89e3\u548c\u5e94\u7528", "\n2\u3001\u00a0\u00a0\u00a0 Asp.net\u7684\u8eab\u4efd\u9a8c\u8bc1\u65b9\u5f0f\u6709\u54ea\u4e9b\uff0c\u539f\u7406\u662f\u4ec0\u4e48\uff1f", "\n3\u3001\u00a0\u00a0\u00a0 \u600e\u6837\u5b9e\u73b0\u65e0\u5bf9\u8bdd\u6846\u7684\u6587\u4ef6\u4e0b\u8f7d", "\n4\u3001\u00a0\u00a0\u00a0 \u5982\u4f55\u5b9e\u73b0\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7c7b\u7684\u5e8f\u5217\u5316", "\n5\u3001\u00a0\u00a0\u00a0 Hashtable \u6dfb\u52a0\u5185\u5bb9\u7684\u65b9\u5f0f\u6709\u54ea\u51e0\u79cd\uff0c\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n6\u3001\u00a0\u00a0\u00a0 \u8bd5\u7528\u5ba2\u6237\u7aef\u811a\u672c\u5b9e\u73b0\u201c\u5168\u9009\u201c\u7684\u529f\u80fd\uff0c\u5373\u628a\u9875\u9762\u7684\u6240\u6709Checkbox\u90fd\u9009\u4e2d", "\n7\u3001\u00a0\u00a0\u00a0 \u4e0d\u901a\u8fc7HtmlInputFile\u4e4b\u7c7b\u7684Htmlcontrol,webControls\u63a7\u4ef6\u5bf9\u8c61\u600e\u6837\u5b9e\u73b0\u6587\u4ef6\u7684\u4e0a\u4f20", "\n8\u3001\u00a0\u00a0\u00a0 \u5199\u51fa\u7a0b\u5e8f\u8fd0\u884c\u7684\u7ed3\u679c", "Public class Base", "\nPublic virtual string Hello() {return \u201cBase\u201d;}", "\nPublic class Sub:Base", "\nPublic override string Hello() {return \u201cSub\u201d;}", "1.\u00a0\u00a0\u00a0 Base b = new Base();\u00a0 b.Hello;", "\n2.\u00a0\u00a0\u00a0 Sub s = new Sub();\u00a0\u00a0 s.Hello;", "\n3.\u00a0\u00a0\u00a0 Base b = new Sub ();\u00a0 b.Hello;", "\n4.\u00a0\u00a0\u00a0 Sub s = new Base();\u00a0\u00a0 s.Hello;"], "title": "\u5317\u627f\u9898\u76ee(C++)"},
{"contents": ["\u7b2c\u4e00\u79cd\u5f62\u5f0f\u58f0\u660e\u4e86\u4e00\u4e2a\u201c\u7ed3\u6784\u6807\u7b7e\u201d; \u7b2c\u4e8c\u79cd\u58f0\u660e\u4e86\u4e00\u4e2a\u201c\u7c7b\u578b\u5b9a\u4e49\u201d\u3002\u4e3b\u8981\u7684\u533a\u522b\u662f\u5728\u540e\u6587\u4e2d\u4f60\u9700\u8981\u7528\u201cstruct x1\u201d \u5f15\u7528\u7b2c\u4e00\u79cd, \u800c\u7528\u201cx2\u201d \u5f15\u7528\u7b2c\u4e8c\u79cd\u3002\u4e5f\u5c31\u662f\u8bf4, \u7b2c\u4e8c\u79cd\u58f0\u660e\u66f4\u50cf\u4e00\u79cd\u62bd\u8c61\u7c7b\u65b0\u2014\u2013 \u7528\u6237\u4e0d\u5fc5\u77e5\u9053\u5b83\u662f\u4e00\u4e2a\u7ed3\u6784, \u800c\u5728\u58f0\u660e\u5b83\u7684\u5b9e\u4f8b\u65f6\u4e5f\u4e0d\u9700\u8981\u4f7f\u7528struct \u5173\u952e\u5b57\u3002"], "title": "\u58f0\u660estruct x1 { . . . }; \u548ctypedef struct { . . . } x2; \u6709\u4ec0\u4e48\u4e0d \u540c\uff1f"},
{"contents": ["\u6b64\u5957\u8bd5\u9898\u603b\u5206105\uff0c\u8003\u8bd5\u65f6\u95f4\u4e3a1\u5c0f\u65f6\uff0c\u8003\u8bd5\u5206\u6570\u4e3a70\u5206\u4e3a\u5408\u683c\u3002", "\nC++/MFC\u8bd5\u9898", "\u4e00\uff0e\u586b\u7a7a\u9898(26\u5206)", "\n1\uff0e WIN32\u5e73\u53f0\u4e0b\uff0csizeof(short) = ____\uff0csizeof(int) = ____\uff0csizeof(long) = ____\u3002(3\u5206)", "2\uff0e\u8bf7\u7ed9\u51fa\u5982\u4e0b\u7a0b\u5e8f\u7684\u7ed3\u679c(2\u5206)", "\nint a = 3;", "\nint b = a << 3;", "\na = ____\uff0cb = ____\u3002", "3\uff0e\u8bf7\u7ed9\u51fa\u5982\u4e0b\u7a0b\u5e8f\u7684\u7ed3\u679c(2\u5206)", "\nint aaa = 0\u00d701;", "\nhtonl(aaa) = ____\u3002", "4\uff0e\u8bf7\u7ed9\u51fa\u5982\u4e0b\u7a0b\u5e8f\u7684\u7ed3\u679c(2\u5206)", "\n#define MAX_NUM 100+200", "\nint nTemp = MAX_NUM*10;", "\n\u5219Temp = ____\u3002", "5\uff0e\u8bf7\u7ed9\u51fa\u5982\u4e0b\u7a0b\u5e8f\u7684\u7ed3\u679c(3 \u5206)", "\nchar szTemp[1000] = \u201c\u201d;", "\nint nLen1 = sizeof(szTemp);", "\nint nLen2 = strlen(szTemp);", "\nstrcpy(szTemp, \u201cabc\u201d);", "\nint nLen3 = sizeof(szTemp);", "\nint nLen4 = strlen(szTemp);", "\nint nTemp[100];", "\nint *pTemp = nTemp;", "\nint nLen5 = sizeof(pTemp);", "\nchar szResult[200] = \u201c\u201d;", "\nsprintf(szResult, \u201c%d,%d,%d,%d,%02d.\u201d, nLen1, nLen2, nLen3, nLen4, nLen5);", "\n\u5219szResult = ____\u3002", "6\uff0eMFC\u4e2d\uff0c\u5927\u90e8\u5206\u7c7b\u662f\u4ece\u54ea\u4e2a\u7c7b\u7ee7\u627f\u800c\u6765\uff08CCmdTarget\u3001CObject\u3001CWinApp\u3001CWnd\uff09\uff1f(2\u5206)____", "7\uff0e\u5185\u5b58\u662f\u8fdb\u7a0b\u8303\u56f4or\u7ebf\u7a0b\u8303\u56f4\uff1b____", "\nCPU\u8c03\u5ea6\u65f6\uff0c\u9488\u5bf9\u8fdb\u7a0bor\u7ebf\u7a0b\uff1b____", "\n\u51fd\u6570\u8c03\u7528\u5806\u6808\uff0c\u9488\u5bf9\u8fdb\u7a0bor\u7ebf\u7a0b\u3002____(3\u5206)", "8\uff0e\u8c03\u7528\u51fd\u6570bbb\u540e\uff0c\u8f93\u51fa\u662f\u4ec0\u4e48(4\u5206)", "\nvoid ccc(int x)", "\n{", "\nchar szTemp[10] = \u201c\u201d;", "x = 2;", "\nsprintf(szTemp, \u201c%d,\u201d, x);", "\nafxDump << szTemp;", "if(x = 3)", "\n{", "\nint x = 4;", "\nsprintf(szTemp, \u201c%d,\u201d, x);", "\nafxDump << szTemp;", "\n}", "sprintf(szTemp, \u201c%d,\u201d, x);", "\nafxDump << szTemp;", "\n}", "void bbb()", "\n{", "\nchar szTemp[10] = \u201c\u201d;", "int x = 7;", "ccc(x);", "sprintf(szTemp, \u201c%d,\u201d, x);", "\nafxDump << szTemp;", "\n}", "\u4e8c\uff0e\u6539\u9519\u9898(\u603b\u517115\u5206,\u6bcf\u98985\u5206)\u3002", "\n1\uff0e\u4e0b\u9762\u4ee3\u7801\u6709\u4f55\u9519\u8bef", "\nvoid func1()", "\n{", "\nint *pa = NULL;", "\nfunc2(pa);", "\ndelete pa;", "\n}", "\nvoid func2(int *pb)", "\n{", "\npb = new int(5);", "\n}", "2\uff0e\u4e0b\u9762\u4ee3\u7801\u6709\u4f55\u9519\u8bef", "\nvoid func2(int *value)", "\n{", "\n*value = 2;", "\n}", "\nvoid func1()", "\n{", "\nint *p = 0;", "\nfunc2(p);", "\n}", "3\uff0e", "\nint func1(int& b)", "\n{", "\nreturn 0;", "\n}", "\nvoid func2()", "\n{", "\nint bbb = 3;", "\nfunc1(&bbb);", "\nfunc1(bbb);", "\n}", "\nfunc2\u4e2d\u6709\u4f55\u9519\u8bef\uff0cfunc1\u7684\u53c2\u6570b\u7684\u7c7b\u578b\u662f\u4ec0\u4e48\u3002", "\u4e09\uff0e\u7b80\u7b54\u9898(64\u5206)", "\n1.\u8bf7\u7b80\u8ff0C\u3001C++\u3001VC\u3001MFC\u5728\u6982\u5ff5\u4e0a\u7684\u533a\u522b(4\u5206)", "2\uff0e\u8bf7\u5199\u4e00\u4e2a\u51fd\u6570\u91cd\u8f7d\u7684\u7b80\u5355\u4f8b\u5b50(4\u5206)", "3.\u7528\u4ec0\u4e48\u51fd\u6570\u5f00\u542f\u65b0\u8fdb\u7a0b\u3001\u7ebf\u7a0b\u3002(4\u5206)", "4.SendMessage\u548cPostMessage\u6709\u4ec0\u4e48\u533a\u522b(4\u5206)", "5.WaitForSingleObject\u6709\u4f55\u4f5c\u7528\uff1bm_pThrd\u7684\u7c7b\u578b\u662fCWinThread*\u65f6\uff0cWaitForSingleObject(m_pThrd->m_hThread, INFINITE);\u6709\u4f55\u4f5c\u7528\u3002(4\u5206)", "6. __stdcall\u3001__cdecl\u3001__pascal\u5728\u4ec0\u4e48\u65b9\u9762\u6709\u6240\u4e0d\u540c\u3002(4\u5206)", "7\uff0e\u8bf7\u628a\u4e0b\u8ff0\u4ee3\u7801\u52a0\u4e0a\u5f02\u5e38\u5904\u7406\u3002(6\u5206)", "\nint MyWriteFile(CString strFileName, CString strText)", "\n{", "\nint nRet = 0;", "CFile myFile;", "\nmyFile.Open(strFileName, CFile::modeWrite|CFile::shareExclusive|CFile::modeCreate, NULL);", "int nLen = strText.GetLength();", "\nmyFile.Write((char*)(LPCSTR)strText, nLen);", "myFile.Close();", "return nRet;", "\n}", "8\uff0e\u8bf7\u89e3\u91ca\u201cfunc\u201d\u4e3a\u4f55\u79cd\u7c7b\u578b\uff0c\u8fd9\u79cd\u7c7b\u578b\u7684\u4f5c\u7528\u4ec0\u4e48\uff0c\u53d8\u91cfttt \u7684\u503c\u662f\u591a\u5c11\uff1f(6\u5206)", "\ntypedef int (*func)(int, int*);", "\nint xxx(int a, int *p)", "\n{", "\nreturn a + *p;", "\n}", "\nint dowork(func aaa, int bbb, int *ccc)", "\n{", "\nreturn aaa(bbb, ccc);", "\n}", "\nint sss = 4;", "\nint ttt = dowork(&xxx, 3, &sss);", "9\uff0e\u8bf7\u95ee\u4e0b\u8ff0\u4ee3\u7801\u4e2d: int operator+(\u2026\uff09\u8d77\u4ec0\u4e48\u4f5c\u7528\uff1fthis\u662f\u4ec0\u4e48\uff1fccc \u7684\u503c\u6700\u7ec8\u4e3a\u591a\u5c11\uff1f(6\u5206)", "\nclass Fruit", "\n{", "\npublic:", "\nFruit()", "\n{", "\nweight = 2;", "\n}", "\nFruit(int w)", "\n{", "\nweight = w;", "\n}", "\nint operator+(Fruit f)", "\n{", "\nreturn this->weight * f.weight;", "\n}", "\nprivate:", "\nint weight;", "\n};", "\nFruit aaa;", "\nFruit bbb(4);", "\nint ccc = aaa + bbb;", "10.\u8bf7\u89e3\u91ca\u4e0b\u9762\u4ee3\u7801\u91c7\u7528\u4e86\u4f55\u79cdC++\u7279\u6027\uff08C\u8bed\u8a00\u4e0d\u5177\u5907\uff09\uff0c\u4f5c\u7528\u662f\u4ec0\u4e48\uff1f(6\u5206)", "\ntemplate<typename T>", "\nT sum(T a, T b)", "\n{", "\nreturn (a + b);", "\n}", "11\uff0e\u8bf7\u89e3\u91caaaa.h\u4e2d\u4e0b\u9762\u4ee3\u7801\u7684\u529f\u80fd(5\u5206)", "\n#if !defined(AFX_MYSUDU_H__9B952BEA_A051_4026_B4E5_0598A39D2DA4__INCLUDED_)", "\n#define AFX_MYSUDU_H__9B952BEA_A051_4026_B4E5_0598A39D2DA4__INCLUDED_", "\n\u2026 \u2026", "\n#endif", "12\uff0eCMemoryState\u4e3b\u8981\u529f\u80fd\u662f\u4ec0\u4e48(5\u5206)", "13\uff0e\u8bf7\u9605\u8bfb\u4e0b\u8ff0\u4ee3\u7801\uff0c\u5199\u51fa\u7a0b\u5e8f\u6267\u884c\u7684\u7ed3\u679c\uff086\u5206\uff09", "\n#include <iostream>", "\nusing namespace std;", "class CBase", "\n{", "\npublic:", "\nvirtual void print()", "\n{", "\ncout<< \u201cbase\u201d << endl;", "\n}", "\nvoid DoPrint()", "\n{", "\nprint();", "\n}", "\n};", "class CChild1: public CBase", "\n{", "\npublic:", "\nvirtual void print()", "\n{", "\ncout<< \u201cchild1\u2033 << endl;", "\n}", "\n};", "class CChild2: public CBase", "\n{", "\npublic:", "\nvirtual void print()", "\n{", "\ncout<< \u201cchild2\u2033 << endl;", "\n}", "\n};", "void DoPrint(CBase *base)", "\n{", "\nbase->DoPrint();", "\n}", "void main()", "\n{", "\nCBase* base = new CBase();", "\nCChild1* child1 = new CChild1();", "\nCChild2* child2 = new CChild2();", "\nDoPrint(child1);", "\nDoPrint(child2);", "\nDoPrint(base);", "delete base;", "\nbase = child1;", "\nbase->print();", "\ndelete child1;", "\ndelete child2;", "\n}"], "title": "\u4e00\u5957\u7c7b\u4f3c\u5b66\u6821\u8003\u9898\u7684C/C++\u7b14\u8bd5\u9898"},
{"contents": ["1 \u5199\u51fa\u7a0b\u5e8f\u628a\u4e00\u4e2a\u94fe\u8868\u4e2d\u7684\u63a5\u70b9\u987a\u5e8f\u5012\u6392", "\ntypedef struct linknode", "\n{", "\nint data;", "\nstruct linknode *next;", "\n}node;", "\n//\u5c06\u4e00\u4e2a\u94fe\u8868\u9006\u7f6e", "\nnode *reverse(node *head)", "\n{", "\nnode *p,*q,*r;", "\np=head;", "\nq=p->next;", "\nwhile(q!=NULL)", "\n{", "\nr=q->next;", "\nq->next=p;", "\np=q;", "\nq=r;", "\n}", "\nhead->next=NULL;", "\nhead=p;", "\nreturn head;", "\n}", "\n2 \u5199\u51fa\u7a0b\u5e8f\u5220\u9664\u94fe\u8868\u4e2d\u7684\u6240\u6709\u63a5\u70b9", "\nvoid del_all(node *head)", "\n{", "\nnode *p;", "\nwhile(head!=NULL)", "\n{", "\np=head->next;", "\nfree(head);", "\nhead=p;", "\n}", "\ncout<<\u201d\u91ca\u653e\u7a7a\u95f4\u6210\u529f!\u201d<<endl;", "\n}", "\n3\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0cs,t;\u628at\u5b57\u7b26\u4e32\u63d2\u5165\u5230s\u5b57\u7b26\u4e32\u4e2d\uff0cs\u5b57\u7b26\u4e32\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u5b58\u653et\u5b57\u7b26\u4e32", "\nvoid insert(char *s, char *t, int i)", "\n{", "\nchar *q = t;", "\nchar *p =s;", "\nif(q == NULL)return;", "\nwhile(*p!=\u2019\\0\u2032)", "\n{", "\np++;", "\n}", "\nwhile(*q!=0)", "\n{", "\n*p=*q;", "\np++;", "\nq++;", "\n}", "\n*p = \u2018\\0\u2032;", "\n}", "\u5206\u6790\u4e0b\u9762\u7684\u4ee3\u7801\uff1a", "\nchar *a = \u201chello\u201d;", "\nchar *b = \u201chello\u201d;", "\nif(a= =b)", "\nprintf(\u201cYES\u201d);", "\nelse", "\nprintf(\u201cNO\u201d);", "\n\u8fd9\u4e2a\u7b80\u5355\u7684\u9762\u8bd5\u9898\u76ee,\u6211\u9009\u8f93\u51fa no(\u5bf9\u6bd4\u7684\u5e94\u8be5\u662f\u6307\u9488\u5730\u5740\u5427),\u53ef\u5728VC\u662fYES \u5728C\u662fNO", "\nlz\u7684\u5462\uff0c\u662f\u4e00\u4e2a\u5e38\u91cf\u5b57\u7b26\u4e32\u3002\u4f4d\u4e8e\u9759\u6001\u5b58\u50a8\u533a\uff0c\u5b83\u5728\u7a0b\u5e8f\u751f\u547d\u671f\u5185\u6052\u5b9a\u4e0d\u53d8\u3002\u5982\u679c\u7f16\u8bd1\u5668\u4f18\u5316\u7684\u8bdd\uff0c\u4f1a\u6709\u53ef\u80fda\u548cb\u540c\u65f6\u6307\u5411\u540c\u4e00\u4e2ahello\u7684\u3002\u5219\u5730\u5740\u76f8\u540c\u3002\u5982\u679c\u7f16\u8bd1\u5668\u6ca1\u6709\u4f18\u5316\uff0c\u90a3\u4e48\u5c31\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u5730\u5740\uff0c\u5219\u4e0d\u540c", "\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u529f\u80fd\uff1a\u5b8c\u6210\u5185\u5b58\u4e4b\u95f4\u7684\u62f7\u8d1d", "\nmemcpy source code:", "\n270 void* memcpy( void *dst, const void *src, unsigned int len )", "\n271 {", "\n272\u00a0\u00a0\u00a0 register char *d;", "\n273\u00a0\u00a0\u00a0 register char *s;", "\n27", "\n275\u00a0\u00a0\u00a0 if (len == 0)", "\n276\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return dst;", "\n277", "\n278\u00a0\u00a0\u00a0 if (is_overlap(dst, src, len, len))", "\n279\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 complain3(\u201cmemcpy\u201d, dst, src, len);", "\n280", "\n281\u00a0\u00a0\u00a0 if ( dst > src ) {", "\n282\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 d = (char *)dst + len \u2013 1;", "\n283\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 s = (char *)src + len \u2013 1;", "\n284\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 while ( len >= 4 ) {", "\n285\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 *d\u2013 = *s\u2013;", "\n286\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 *d\u2013 = *s\u2013;", "\n287\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 *d\u2013 = *s\u2013;", "\n288\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 *d\u2013 = *s\u2013;", "\n289\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 len -= 4;", "\n290\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n291\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 while ( len\u2013 ) {", "\n292\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 *d\u2013 = *s\u2013;", "\n293\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n294\u00a0\u00a0\u00a0 } else if ( dst < src ) {", "\n295\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 d = (char *)dst;", "\n296\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 s = (char *)src;", "\n297\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 while ( len >= 4 ) {", "\n298\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 *d++ = *s++;", "\n299\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 *d++ = *s++;", "\n300\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 *d++ = *s++;", "\n301\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 *d++ = *s++;", "\n302\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 len -= 4;", "\n303\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n304\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 while ( len\u2013 ) {", "\n305\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 *d++ = *s++;", "\n306\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n307\u00a0\u00a0\u00a0 }", "\n308\u00a0\u00a0\u00a0 return dst;", "\n309 }", "\n\u516c\u53f8\u8003\u8bd5\u8fd9\u79cd\u9898\u76ee\u4e3b\u8981\u8003\u4f60\u7f16\u5199\u7684\u4ee3\u7801\u662f\u5426\u8003\u8651\u5230\u5404\u79cd\u60c5\u51b5\uff0c\u662f\u5426\u5b89\u5168\uff08\u4e0d\u4f1a\u6ea2\u51fa\uff09", "\n\u5404\u79cd\u60c5\u51b5\u5305\u62ec\uff1a", "\n\uff11\u3001\u53c2\u6570\u662f\u6307\u9488\uff0c\u68c0\u67e5\u6307\u9488\u662f\u5426\u6709\u6548", "\n\uff12\u3001\u68c0\u67e5\u590d\u5236\u7684\u6e90\u76ee\u6807\u548c\u76ee\u7684\u5730\u662f\u5426\u4e3a\u540c\u4e00\u4e2a\uff0c\u82e5\u4e3a\u540c\u4e00\u4e2a\uff0c\u5219\u76f4\u63a5\u8df3\u51fa", "\n\uff13\u3001\u8bfb\u5199\u6743\u9650\u68c0\u67e5", "\n\uff14\u3001\u5b89\u5168\u68c0\u67e5\uff0c\u662f\u5426\u4f1a\u6ea2\u51fa", "\nmemcpy\u62f7\u8d1d\u4e00\u5757\u5185\u5b58\uff0c\u5185\u5b58\u7684\u5927\u5c0f\u4f60\u544a\u8bc9\u5b83", "\nstrcpy\u662f\u5b57\u7b26\u4e32\u62f7\u8d1d\uff0c\u9047\u5230\u2019\\0\u2032\u7ed3\u675f", "\n/* memcpy \u2500\u2500\u2500 \u62f7\u8d1d\u4e0d\u91cd\u53e0\u7684\u5185\u5b58\u5757 */", "\nvoid memcpy(void* pvTo, void* pvFrom, size_t size)", "\n{", "\nvoid* pbTo = (byte*)pvTo;", "\nvoid* pbFrom = (byte*)pvFrom;", "\nASSERT(pvTo != NULL && pvFrom != NULL); //\u68c0\u67e5\u8f93\u5165\u6307\u9488\u7684\u6709\u6548\u6027", "\nASSERT(pbTo>=pbFrom+size || pbFrom>=pbTo+size);//\u68c0\u67e5\u4e24\u4e2a\u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u662f\u5426\u91cd\u53e0", "\nwhile(size\u2013>0)", "\n*pbTo++ == *pbFrom++;", "\nreturn(pvTo);", "\n}", "\u534e\u4e3a\u9762\u8bd5\u9898\uff1a\u600e\u4e48\u5224\u65ad\u94fe\u8868\u4e2d\u662f\u5426\u6709\u73af\uff1f", "\nbool CircleInList(Link* pHead)", "\n{", "\nif(pHead = = NULL || pHead->next = = NULL)//\u65e0\u8282\u70b9\u6216\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\u5e76\u4e14\u65e0\u81ea\u73af", "\nreturn (false);", "\nif(pHead->next = = pHead)//\u81ea\u73af", "\nreturn (true);", "\nLink *pTemp1 = pHead;//step 1", "\nLink *pTemp = pHead->next;//step 2", "\nwhile(pTemp != pTemp1 && pTemp != NULL && pTemp->next != NULL)", "\n{", "\npTemp1 = pTemp1->next;", "\npTemp = pTemp->next->next;", "\n}", "\nif(pTemp = = pTemp1)", "\nreturn (true);", "\nreturn (false);", "\n}", "\n\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0cs,t;\u628at\u5b57\u7b26\u4e32\u63d2\u5165\u5230s\u5b57\u7b26\u4e32\u4e2d\uff0cs\u5b57\u7b26\u4e32\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u5b58\u653et\u5b57\u7b26\u4e32", "\nvoid insert(char *s, char *t, int i)", "\n{", "\nmemcpy(&s[strlen(t)+i],&s[i],strlen(s)-i);", "\nmemcpy(&s[i],t,strlen(t));", "\ns[strlen(s)+strlen(t)]=\u2019\\0\u2032;", "\n}", "\n1\u3002\u7f16\u5199\u4e00\u4e2a C \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5728\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u627e\u5230\u53ef\u80fd\u7684\u6700\u957f\u7684\u5b50\u5b57\u7b26\u4e32\uff0c\u4e14\u8be5\u5b57\u7b26\u4e32\u662f\u7531\u540c\u4e00\u5b57\u7b26\u7ec4\u6210\u7684\u3002", "\nchar * search(char *cpSource, char ch)", "\n{", "\nchar *cpTemp=NULL, *cpDest=NULL;", "\nint iTemp, iCount=0;", "\nwhile(*cpSource)", "\n{", "\nif(*cpSource == ch)", "\n{", "\niTemp = 0;", "\ncpTemp = cpSource;", "\nwhile(*cpSource == ch)", "\n++iTemp, ++cpSource;", "\nif(iTemp > iCount)", "\niCount = iTemp, cpDest = cpTemp;", "\nif(!*cpSource)", "\nbreak;", "\n}", "\n++cpSource;", "\n}", "\nreturn cpDest;", "\n}", "\n2\u3002\u8bf7\u7f16\u5199\u4e00\u4e2a C \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5728\u7ed9\u5b9a\u7684\u5185\u5b58\u533a\u57df\u641c\u7d22\u7ed9\u5b9a\u7684\u5b57\u7b26\uff0c\u5e76\u8fd4\u56de\u8be5\u5b57\u7b26\u6240\u5728\u4f4d\u7f6e\u7d22\u5f15\u503c\u3002", "\nint search(char *cpSource, int n, char ch)", "\n{", "\nint i;", "\nfor(i=0; i<n && *(cpSource+i) != ch; ++i);", "\nreturn i;", "\n}", "\n\u4e00\u4e2a\u5355\u5411\u94fe\u8868\uff0c\u4e0d\u77e5\u9053\u5934\u8282\u70b9,\u4e00\u4e2a\u6307\u9488\u6307\u5411\u5176\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\uff0c\u95ee\u5982\u4f55\u5220\u9664\u8fd9\u4e2a\u6307\u9488\u6307\u5411\u7684\u8282\u70b9\uff1f", "\n\u5c06\u8fd9\u4e2a\u6307\u9488\u6307\u5411\u7684next\u8282\u70b9\u503ccopy\u5230\u672c\u8282\u70b9\uff0c\u5c06next\u6307\u5411next->next,\u5e76\u968f\u540e\u5220\u9664\u539fnext\u6307\u5411\u7684\u8282\u70b9\u3002", "#include <stdio.h>", "\nvoid foo(int m, int n)", "\n{", "\nprintf(\u201cm=%d, n=%d\\n\u201d, m, n);", "\n}", "\nint main()", "\n{", "\nint b = 3;", "\nfoo(b+=3, ++b);", "\nprintf(\u201cb=%d\\n\u201d, b);", "\nreturn 0;", "\n}", "\n\u8f93\u51fa\uff1am=7,n=4,b=7(VC6.0)", "\n\u8fd9\u79cd\u65b9\u5f0f\u548c\u7f16\u8bd1\u5668\u4e2d\u5f97\u51fd\u6570\u8c03\u7528\u5173\u7cfb\u76f8\u5173\u5373\u5148\u540e\u5165\u6808\u987a\u5e8f\u3002\u4e0d\u8fc7\u4e0d\u540c", "\n\u7f16\u8bd1\u5668\u5f97\u5904\u7406\u4e0d\u540c\u3002\u4e5f\u662f\u56e0\u4e3aC\u6807\u51c6\u4e2d\u5bf9\u8fd9\u79cd\u65b9\u5f0f\u8bf4\u660e\u4e3a\u672a\u5b9a\u4e49\uff0c\u6240\u4ee5", "\n\u5404\u4e2a\u7f16\u8bd1\u5668\u5382\u5546\u90fd\u6709\u81ea\u5df1\u5f97\u7406\u89e3\uff0c\u6240\u4ee5\u6700\u540e\u4ea7\u751f\u5f97\u7ed3\u679c\u5b8c\u5168\u4e0d\u540c\u3002", "\n\u56e0\u4e3a\u8fd9\u6837\uff0c\u6240\u4ee5\u9047\u89c1\u8fd9\u79cd\u51fd\u6570\uff0c\u6211\u4eec\u9996\u5148\u8981\u8003\u8651\u6211\u4eec\u5f97\u7f16\u8bd1\u5668\u4f1a\u5982\u4f55\u5904\u7406", "\n\u8fd9\u6837\u5f97\u51fd\u6570\uff0c\u5176\u6b21\u770b\u51fd\u6570\u5f97\u8c03\u7528\u65b9\u5f0f\uff0c\u4e0d\u540c\u5f97\u8c03\u7528\u65b9\u5f0f\uff0c\u53ef\u80fd\u4ea7\u751f\u4e0d\u540c\u5f97", "\n\u7ed3\u679c\u3002\u6700\u540e\u662f\u770b\u7f16\u8bd1\u5668\u4f18\u5316\u3002", "2.\u5199\u4e00\u51fd\u6570\uff0c\u5b9e\u73b0\u5220\u9664\u5b57\u7b26\u4e32str1\u4e2d\u542b\u6709\u7684\u5b57\u7b26\u4e32str2.", "\n\u7b2c\u4e8c\u4e2a\u5c31\u662f\u5229\u7528\u4e00\u4e2aKMP\u5339\u914d\u7b97\u6cd5\u627e\u5230str2\u7136\u540e\u5220\u9664\uff08\u7528\u94fe\u8868\u5b9e\u73b0\u7684\u8bdd\uff0c\u4fbf\u6377\u4e8e\u6570\u7ec4\uff09", "/*\u96c5\u864e\u7b14\u8bd5\u9898(\u5b57\u7b26\u4e32\u64cd\u4f5c)", "\n\u7ed9\u5b9a\u5b57\u7b26\u4e32A\u548cB,\u8f93\u51faA\u548cB\u4e2d\u7684\u6700\u5927\u516c\u5171\u5b50\u4e32\u3002", "\n\u6bd4\u5982A=\u201daocdfe\u201d B=\u201dpmcdfa\u201d \u5219\u8f93\u51fa\u201dcdf\u201d", "\n*/", "\n//Author: azhen", "\n#include<stdio.h>", "\n#include<stdlib.h>", "\n#include<string.h>", "\nchar *commanstring(char shortstring[], char longstring[])", "\n{", "\nint i, j;", "\nchar *substring=malloc(256);", "\nif(strstr(longstring, shortstring)!=NULL)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 //\u5982\u679c\u2026\u2026\uff0c\u90a3\u4e48\u8fd4\u56deshortstring", "\nreturn shortstring;", "\nfor(i=strlen(shortstring)-1;i>0; i\u2013)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 //\u5426\u5219\uff0c\u5f00\u59cb\u5faa\u73af\u8ba1\u7b97", "\n{", "\nfor(j=0; j<=strlen(shortstring)-i; j++){", "\nmemcpy(substring, &shortstring[j], i);", "\nsubstring[i]=\u2019\\0\u2032;", "\nif(strstr(longstring, substring)!=NULL)", "\nreturn substring;", "\n}", "\n}", "\nreturn NULL;", "\n}", "main()", "\n{", "\nchar *str1=malloc(256);", "\nchar *str2=malloc(256);", "\nchar *comman=NULL;", "\ngets(str1);", "\ngets(str2);", "\nif(strlen(str1)>strlen(str2))\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 //\u5c06\u77ed\u7684\u5b57\u7b26\u4e32\u653e\u524d\u9762", "\ncomman=commanstring(str2, str1);", "\nelse", "\ncomman=commanstring(str1, str2);", "\nprintf(\u201cthe longest comman string is: %s\\n\u201d, comman);", "\n}", "11.\u5199\u4e00\u4e2a\u51fd\u6570\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32str1\u548cstr2\u7684\u5927\u5c0f\uff0c\u82e5\u76f8\u7b49\u8fd4\u56de0\uff0c\u82e5str1\u5927\u4e8e", "\nstr2\u8fd4\u56de1\uff0c\u82e5str1\u5c0f\u4e8estr2\u8fd4\u56de\uff0d1", "\nint strcmp ( const char * src,const char * dst)", "\n{", "\nint ret = 0 ;", "\nwhile( ! (ret = *(unsigned char *)src \u2013 *(unsigned char *)dst) && *dst)", "\n{", "\n++src;", "\n++dst;", "\n}", "\nif ( ret < 0 )", "\nret = -1 ;", "\nelse if ( ret > 0 )", "\nret = 1 ;", "\nreturn( ret );", "\n}", "3,\u6c421000\uff01\u7684\u672a\u5c3e\u6709\u51e0\u4e2a0\uff08\u7528\u7d20\u6570\u76f8\u4e58\u7684\u65b9\u6cd5\u6765\u505a\uff0c\u598272=2*2*2*3*3\uff09;", "\n\u6c42\u51fa1->1000\u91cc,\u80fd\u88ab5\u6574\u9664\u7684\u6570\u7684\u4e2a\u6570n1,\u80fd\u88ab25\u6574\u9664\u7684\u6570\u7684\u4e2a\u6570n2,\u80fd\u88ab125\u6574\u9664\u7684\u6570\u7684\u4e2a\u6570n3,", "\n\u80fd\u88ab625\u6574\u9664\u7684\u6570\u7684\u4e2a\u6570n4.", "\n1000!\u672b\u5c3e\u7684\u96f6\u7684\u4e2a\u6570=n1+n2+n3+n4;", "\n#include<stdio.h>", "\n#define NUM 1000", "\nint find5(int num){", "\nint ret=0;", "\nwhile(num%5==0){", "\nnum/=5;", "\nret++;", "\n}", "\nreturn ret;", "\n}", "\nint main(){", "\nint result=0;", "\nint i;", "\nfor(i=5;i<=NUM;i+=5)", "\n{", "\nresult+=find5(i);", "\n}", "\nprintf(\u201d the total zero number is %d\\n\u201d,result);", "\nreturn 0;", "\n}", "1. \u6709\u53cc\u5411\u5faa\u73af\u94fe\u8868\u7ed3\u70b9\u5b9a\u4e49\u4e3a\uff1a", "\nstruct node", "\n{ int data;", "\nstruct node *front,*next;", "\n};", "\n\u6709\u4e24\u4e2a\u53cc\u5411\u5faa\u73af\u94fe\u8868A\uff0cB\uff0c\u77e5\u9053\u5176\u5934\u6307\u9488\u4e3a\uff1apHeadA,pHeadB\uff0c\u8bf7\u5199\u4e00\u51fd\u6570\u5c06\u4e24\u94fe\u8868\u4e2ddata\u503c\u76f8\u540c\u7684\u7ed3\u70b9\u5220\u9664", "\nBOOL DeteleNode(Node *pHeader, DataType Value)", "\n{", "\nif (pHeader == NULL) return;", "\nBOOL bRet = FALSE;", "\nNode *pNode = pHead;", "\nwhile (pNode != NULL)", "\n{", "\nif (pNode->data == Value)", "\n{", "\nif (pNode->front == NULL)", "\n{", "\npHeader = pNode->next;", "\npHeader->front = NULL;", "\n}", "\nelse", "\n{", "\nif (pNode->next != NULL)", "\n{", "\npNode->next->front = pNode->front;", "\n}", "\npNode->front->next = pNode->next;", "\n}", "\nNode *pNextNode = pNode->next;", "\ndelete pNode;", "\npNode = pNextNode;", "\nbRet = TRUE;", "\n//\u4e0d\u8981break\u6216return, \u5220\u9664\u6240\u6709", "\n}", "\nelse", "\n{", "\npNode = pNode->next;", "\n}", "\n}", "\nreturn bRet;", "\n}", "\nvoid DE(Node *pHeadA, Node *pHeadB)", "\n{", "\nif (pHeadA == NULL || pHeadB == NULL)", "\n{", "\nreturn;", "\n}", "\nNode *pNode = pHeadA;", "\nwhile (pNode != NULL)", "\n{", "\nif (DeteleNode(pHeadB, pNode->data))", "\n{", "\nif (pNode->front == NULL)", "\n{", "\npHeadA = pNode->next;", "\npHeadA->front = NULL;", "\n}", "\nelse", "\n{", "\npNode->front->next = pNode->next;", "\nif (pNode->next != NULL)", "\n{", "\npNode->next->front = pNode->front;", "\n}", "\n}", "\nNode *pNextNode = pNode->next;", "\ndelete pNode;", "\npNode = pNextNode;", "\n}", "\nelse", "\n{", "\npNode = pNode->next;", "\n}", "\n}", "\n}", "\n2. \u7f16\u7a0b\u5b9e\u73b0\uff1a\u627e\u51fa\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u6700\u5927\u516c\u5171\u5b50\u5b57\u7b26\u4e32,\u5982\u201dabccade\u201d,\u201ddgcadde\u201d\u7684\u6700\u5927\u5b50\u4e32\u4e3a\u201dcad\u201d", "\nint GetCommon(char *s1, char *s2, char **r1, char **r2)", "\n{", "\nint len1 = strlen(s1);", "\nint len2 = strlen(s2);", "\nint maxlen = 0;", "\nfor(int i = 0; i < len1; i++)", "\n{", "\nfor(int j = 0; j < len2; j++)", "\n{", "\nif(s1[i] == s2[j])", "\n{", "\nint as = i, bs = j, count = 1;", "\nwhile(as + 1 < len1 && bs + 1 < len2 && s1[++as] == s2[++bs])", "\ncount++;", "\nif(count > maxlen)", "\n{", "\nmaxlen = count;", "\n*r1 = s1 + i;", "\n*r2 = s2 + j;", "\n}", "\n}", "\n}", "\n}", "\n3. \u7f16\u7a0b\u5b9e\u73b0\uff1a\u628a\u5341\u8fdb\u5236\u6570(long\u578b)\u5206\u522b\u4ee5\u4e8c\u8fdb\u5236\u548c\u5341\u516d\u8fdb\u5236\u5f62\u5f0f\u8f93\u51fa\uff0c\u4e0d\u80fd\u4f7f\u7528printf\u7cfb\u5217\u5e93\u51fd\u6570", "\nchar* test3(long num) {", "\nchar* buffer = (char*)malloc(11);", "\nbuffer[0] = \u20190\u2032;", "\nbuffer[1] = \u2018x\u2019;", "\nbuffer[10] = \u2018\\0\u2032;", "\nchar* temp = buffer + 2;", "\nfor (int i=0; i < 8; i++) {", "\ntemp[i] = (char)(num<<4*i>>28);", "\ntemp[i] = temp[i] >= 0 ? temp[i] : temp[i] + 16;", "\ntemp[i] = temp[i] < 10 ? temp[i] + 48 : temp[i] + 55;", "\n}", "\nreturn buffer;", "\n}", "\u8f93\u5165N, \u6253\u5370 N*N \u77e9\u9635", "\n\u6bd4\u5982 N = 3\uff0c\u6253\u5370\uff1a", "\n1\u00a0 2\u00a0 3", "\n8\u00a0 9\u00a0 4", "\n7\u00a0 6\u00a0 5", "\nN = 4\uff0c\u6253\u5370\uff1a", "\n1\u00a0\u00a0 2\u00a0\u00a0 3\u00a0\u00a0 4", "\n12\u00a0 13\u00a0 14\u00a0 5", "\n11\u00a0 16\u00a0 15\u00a0 6", "\n10\u00a0 9\u00a0\u00a0 8\u00a0\u00a0 7", "\n\u89e3\u7b54\uff1a", "\n1 #define N 15", "\nint s[N][N];", "\nvoid main()", "\n{", "\nint k = 0, i = 0, j = 0;", "\nint a = 1;", "\nfor( ; k < (N+1)/2; k++ )", "\n{", "\nwhile( j < N-k ) s[i][j++] = a++; i++; j\u2013;", "\nwhile( i < N-k ) s[i++][j] = a++; i\u2013; j\u2013;", "\nwhile( j > k-1 ) s[i][j--] = a++; i\u2013; j++;", "\nwhile( i > k )\u00a0\u00a0 s[i--][j] = a++; i++; j++;", "\n}", "\nfor( i = 0; i < N; i++ )", "\n{", "\nfor( j = 0; j < N; j++ )", "\ncout << s[i][j] << \u2018\\t\u2019;", "\ncout << endl;", "\n}", "\n}", "\n2 define MAX_N\u00a0 100", "\nint matrix[MAX_N][MAX_N];", "\n/*", "\n*\uff08x,y\uff09\uff1a\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u5750\u6807", "\n* start\uff1a\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u503c", "\n* n\uff1a\u77e9\u9635\u7684\u5927\u5c0f", "\n*/", "\nvoid SetMatrix(int x, int y, int start, int n) {", "\nint i, j;", "\nif (n <= 0)\u00a0\u00a0\u00a0 //\u9012\u5f52\u7ed3\u675f\u6761\u4ef6", "\nreturn;", "\nif (n == 1) {\u00a0 //\u77e9\u9635\u5927\u5c0f\u4e3a1\u65f6", "\nmatrix[x][y] = start;", "\nreturn;", "\n}", "\nfor (i = x; i < x + n-1; i++)\u00a0\u00a0 //\u77e9\u9635\u4e0a\u90e8", "\nmatrix[y][i] = start++;", "\nfor (j = y; j < y + n-1; j++)\u00a0\u00a0 //\u53f3\u90e8", "\nmatrix[j][x+n-1] = start++;", "\nfor (i = x+n-1; i > x; i\u2013)\u00a0\u00a0\u00a0\u00a0 //\u5e95\u90e8", "\nmatrix[y+n-1][i] = start++;", "\nfor (j = y+n-1; j > y; j\u2013)\u00a0\u00a0\u00a0\u00a0 //\u5de6\u90e8", "\nmatrix[j][x] = start++;", "\nSetMatrix(x+1, y+1, start, n-2);\u00a0\u00a0 //\u9012\u5f52", "\n}", "\nvoid main() {", "\nint i, j;", "\nint n;", "\nscanf(\u201c%d\u201d, &n);", "\nSetMatrix(0, 0, 1, n);", "//\u6253\u5370\u87ba\u65cb\u77e9\u9635", "\nfor(i = 0; i < n; i++) {", "\nfor (j = 0; j < n; j++)", "\nprintf(\u201c%4d\u201d, matrix[i][j]);", "\nprintf(\u201c\\n\u201d);", "\n}", "\n}", "\u6590\u6ce2\u62c9\u5951\u6570\u5217\u9012\u5f52\u5b9e\u73b0\u7684\u65b9\u6cd5\u5982\u4e0b\uff1a", "\nint\u00a0 Funct( int n )", "\n{", "\nif(n==0) return 1;", "\nif(n==1) return 1;", "\nretrurn\u00a0 Funct(n-1) + Funct(n-2);", "\n}", "\n\u8bf7\u95ee\uff0c\u5982\u4f55\u4e0d\u4f7f\u7528\u9012\u5f52\uff0c\u6765\u5b9e\u73b0\u4e0a\u8ff0\u51fd\u6570\uff1f", "\n\u8bf7\u6559\u5404\u4f4d\u9ad8\u624b\uff01", "\n\u89e3\u7b54\uff1aint\u00a0 Funct( int n )\u00a0 //\u00a0 n \u4e3a\u975e\u8d1f\u6574\u6570", "\n{", "\nint a=0;", "\nint b=1;", "\nint c;", "\nif(n==0) c=1;", "\nelse if(n==1) c=1;", "\nelse for(int i=2;i<=n;i++)\u00a0 //\u5e94\u8be5n\u4ece2\u5f00\u59cb\u7b97\u8d77", "\n{", "\nc=a+b;", "\na=b;", "\nb=c;", "\n}", "\nreturn c;", "\n}", "\n\u89e3\u7b54\uff1a", "\n\u73b0\u5728\u5927\u591a\u6570\u7cfb\u7edf\u90fd\u662f\u5c06\u4f4e\u5b57\u4f4d\u653e\u5728\u524d\u9762\uff0c\u800c\u7ed3\u6784\u4f53\u4e2d\u4f4d\u57df\u7684\u7533\u660e\u4e00\u822c\u662f\u5148\u58f0\u660e\u9ad8\u4f4d\u3002", "\n100\u00a0 \u7684\u4e8c\u8fdb\u5236\u662f 001 100 100", "\n\u4f4e\u4f4d\u5728\u524d\u00a0\u00a0 \u9ad8\u4f4d\u5728\u540e", "\n001\u2014-s3", "\n100\u2014-s2", "\n100\u2014-s1", "\n\u6240\u4ee5\u7ed3\u679c\u5e94\u8be5\u662f 1", "\n\u5982\u679c\u5148\u7533\u660e\u7684\u5728\u4f4e\u4f4d\u5219\uff1a", "\n001\u2014-s1", "\n100\u2014-s2", "\n100\u2014-s3", "\n\u7ed3\u679c\u662f 4", "\n1\u3001\u539f\u9898\u8ddflittle-endian\uff0cbig-endian\u6ca1\u6709\u5173\u7cfb", "\n2\u3001\u539f\u9898\u8ddf\u4f4d\u57df\u7684\u5b58\u50a8\u7a7a\u95f4\u5206\u914d\u6709\u5173\uff0c\u5230\u5e95\u662f\u4ece\u4f4e\u5b57\u8282\u5206\u914d\u8fd8\u662f\u4ece\u9ad8\u5b57\u8282\u5206\u914d\uff0c\u4eceDev C++\u548cVC7.1\u4e0a\u770b\uff0c\u90fd\u662f\u4ece\u4f4e\u5b57\u8282\u5f00\u59cb\u5206\u914d\uff0c\u5e76\u4e14\u8fde\u7eed\u5206\u914d\uff0c\u4e2d\u95f4\u4e0d\u7a7a\uff0c\u4e0d\u50cf\u8c2d\u7684\u4e66\u90a3\u6837\u4f1a\u7559\u7a7a\u4f4d", "\n3\u3001\u539f\u9898\u8ddf\u7f16\u8bd1\u5668\u6709\u5173\uff0c\u7f16\u8bd1\u5668\u5728\u672a\u7528\u5806\u6808\u7a7a\u95f4\u7684\u9ed8\u8ba4\u503c\u5206\u914d\u4e0a\u6709\u6240\u4e0d\u540c\uff0cDev C++\u672a\u7528\u7a7a\u95f4\u5206\u914d\u4e3a", "\n01110111b\uff0cVC7.1\u4e0b\u4e3a11001100b,\u6240\u4ee5\u5728Dev C++\u4e0b\u7684\u7ed3\u679c\u4e3a5\uff0c\u5728VC7.1\u4e0b\u4e3a1\u3002", "\n\u6ce8\uff1aPC\u4e00\u822c\u91c7\u7528little-endian\uff0c\u5373\u9ad8\u9ad8\u4f4e\u4f4e\uff0c\u4f46\u5728\u7f51\u7edc\u4f20\u8f93\u4e0a\uff0c\u4e00\u822c\u91c7\u7528big-endian\uff0c\u5373\u9ad8\u4f4e\u4f4e\u9ad8\uff0c\u534e\u4e3a\u662f\u505a\u7f51\u7edc\u7684\uff0c\u6240\u4ee5\u53ef\u80fd\u8003\u8651big-endian\u6a21\u5f0f\uff0c\u8fd9\u6837\u8f93\u51fa\u7ed3\u679c\u53ef\u80fd\u4e3a4", "\u5224\u65ad\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u4e0d\u662f\u56de\u6587", "\nint IsReverseStr(char *aStr)", "\n{", "\nint i,j;", "\nint found=1;", "\nif(aStr==NULL)", "\nreturn -1;", "\nj=strlen(aStr);", "\nfor(i=0;i<j/2;i++)", "\nif(*(aStr+i)!=*(aStr+j-i-1))", "\n{", "\nfound=0;", "\nbreak;", "\n}", "\nreturn found;", "\n}", "Josephu \u95ee\u9898\u4e3a\uff1a\u8bbe\u7f16\u53f7\u4e3a1\uff0c2\uff0c\u2026 n\u7684n\u4e2a\u4eba\u56f4\u5750\u4e00\u5708\uff0c\u7ea6\u5b9a\u7f16\u53f7\u4e3ak\uff081<=k<=n\uff09\u7684\u4eba\u4ece1\u5f00\u59cb\u62a5\u6570\uff0c\u6570\u5230m \u7684\u90a3\u4e2a\u4eba\u51fa\u5217\uff0c\u5b83\u7684\u4e0b\u4e00\u4f4d\u53c8\u4ece1\u5f00\u59cb\u62a5\u6570\uff0c\u6570\u5230m\u7684\u90a3\u4e2a\u4eba\u53c8\u51fa\u5217\uff0c\u4f9d\u6b21\u7c7b\u63a8\uff0c\u76f4\u5230\u6240\u6709\u4eba\u51fa\u5217\u4e3a\u6b62\uff0c\u7531\u6b64\u4ea7\u751f\u4e00\u4e2a\u51fa\u961f\u7f16\u53f7\u7684\u5e8f\u5217\u3002", "\n\u6570\u7ec4\u5b9e\u73b0\uff1a", "\n#include <stdio.h>", "\n#include <malloc.h>", "\nint Josephu(int n, int m)", "\n{", "\nint flag, i, j = 0;", "\nint *arr = (int *)malloc(n * sizeof(int));", "\nfor (i = 0; i < n; ++i)", "\narr[i] = 1;", "\nfor (i = 1; i < n; ++i)", "\n{", "\nflag = 0;", "\nwhile (flag < m)", "\n{", "\nif (j == n)", "\nj = 0;", "\nif (arr[j])", "\n++flag;", "\n++j;", "\n}", "\narr[j - 1] = 0;", "\nprintf(\u201c\u7b2c%4d\u4e2a\u51fa\u5c40\u7684\u4eba\u662f\uff1a%4d\u53f7\\n\u201d, i, j);", "\n}", "\nfree(arr);", "\nreturn j;", "\n}", "\nint main()", "\n{", "\nint n, m;", "\nscanf(\u201c%d%d\u201d, &n, &m);", "\nprintf(\u201c\u6700\u540e\u80dc\u5229\u7684\u662f%d\u53f7\uff01\\n\u201d, Josephu(n, m));", "\nsystem(\u201cpause\u201d);", "\nreturn 0;", "\n}", "\n\u94fe\u8868\u5b9e\u73b0\uff1a", "\n#include <stdio.h>", "\n#include <malloc.h>", "\ntypedef struct Node", "\n{", "\nint index;", "\nstruct Node *next;", "\n}JosephuNode;", "\nint Josephu(int n, int m)", "\n{", "\nint i, j;", "\nJosephuNode *head, *tail;", "\nhead = tail = (JosephuNode *)malloc(sizeof(JosephuNode));", "\nfor (i = 1; i < n; ++i)", "\n{", "\ntail->index = i;", "\ntail->next = (JosephuNode *)malloc(sizeof(JosephuNode));", "\ntail = tail->next;", "\n}", "\ntail->index = i;", "\ntail->next = head;", "for (i = 1; tail != head; ++i)", "\n{", "\nfor (j = 1; j < m; ++j)", "\n{", "\ntail = head;", "\nhead = head->next;", "\n}", "\ntail->next = head->next;", "\nprintf(\u201c\u7b2c%4d\u4e2a\u51fa\u5c40\u7684\u4eba\u662f\uff1a%4d\u53f7\\n\u201d, i, head->index);", "\nfree(head);", "\nhead = tail->next;", "\n}", "\ni = head->index;", "\nfree(head);", "\nreturn i;", "\n}", "\nint main()", "\n{", "\nint n, m;", "\nscanf(\u201c%d%d\u201d, &n, &m);", "\nprintf(\u201c\u6700\u540e\u80dc\u5229\u7684\u662f%d\u53f7\uff01\\n\u201d, Josephu(n, m));", "\nsystem(\u201cpause\u201d);", "\nreturn 0;", "\n}", "\n\u5df2\u77e5strcpy\u51fd\u6570\u7684\u539f\u578b\u662f\uff1a", "\nchar * strcpy(char * strDest,const char * strSrc);", "\n1.\u4e0d\u8c03\u7528\u5e93\u51fd\u6570\uff0c\u5b9e\u73b0strcpy\u51fd\u6570\u3002", "\n2.\u89e3\u91ca\u4e3a\u4ec0\u4e48\u8981\u8fd4\u56dechar *\u3002", "\n\u89e3\u8bf4\uff1a", "\n1.strcpy\u7684\u5b9e\u73b0\u4ee3\u7801", "\nchar * strcpy(char * strDest,const char * strSrc)", "\n{", "\nif ((strDest==NULL)||(strSrc==NULL)) file://[/1]", "\nthrow \u201cInvalid argument(s)\u201d; //[2]", "\nchar * strDestCopy=strDest;\u00a0 file://[/3]", "\nwhile ((*strDest++=*strSrc++)!=\u2019\\0\u2032); file://[/4]", "\nreturn strDestCopy;", "\n}", "\n\u9519\u8bef\u7684\u505a\u6cd5\uff1a", "\n[1]", "\n(A)\u4e0d\u68c0\u67e5\u6307\u9488\u7684\u6709\u6548\u6027\uff0c\u8bf4\u660e\u7b54\u9898\u8005\u4e0d\u6ce8\u91cd\u4ee3\u7801\u7684\u5065\u58ee\u6027\u3002", "\n(B)\u68c0\u67e5\u6307\u9488\u7684\u6709\u6548\u6027\u65f6\u4f7f\u7528((!strDest)||(!strSrc))\u6216(!(strDest&&strSrc))\uff0c\u8bf4\u660e\u7b54\u9898\u8005\u5bf9C\u8bed\u8a00\u4e2d\u7c7b\u578b\u7684\u9690\u5f0f\u8f6c\u6362\u6ca1\u6709\u6df1\u523b\u8ba4\u8bc6\u3002\u5728\u672c\u4f8b\u4e2dchar *\u8f6c\u6362\u4e3abool\u5373\u662f\u7c7b\u578b\u9690\u5f0f\u8f6c\u6362\uff0c\u8fd9\u79cd\u529f\u80fd\u867d\u7136\u7075\u6d3b\uff0c\u4f46\u66f4\u591a\u7684\u662f\u5bfc\u81f4\u51fa\u9519\u6982\u7387\u589e\u5927\u548c\u7ef4\u62a4\u6210\u672c\u5347\u9ad8\u3002\u6240\u4ee5C++\u4e13\u95e8\u589e\u52a0\u4e86bool\u3001true\u3001false\u4e09\u4e2a\u5173\u952e\u5b57\u4ee5\u63d0\u4f9b\u66f4\u5b89\u5168\u7684\u6761\u4ef6\u8868\u8fbe\u5f0f\u3002", "\n(C)\u68c0\u67e5\u6307\u9488\u7684\u6709\u6548\u6027\u65f6\u4f7f\u7528((strDest==0)||(strSrc==0))\uff0c\u8bf4\u660e\u7b54\u9898\u8005\u4e0d\u77e5\u9053\u4f7f\u7528\u5e38\u91cf\u7684\u597d\u5904\u3002\u76f4\u63a5\u4f7f\u7528\u5b57\u9762\u5e38\u91cf\uff08\u5982\u672c\u4f8b\u4e2d\u76840\uff09\u4f1a\u51cf\u5c11\u7a0b\u5e8f\u7684\u53ef\u7ef4\u62a4\u6027\u30020\u867d\u7136\u7b80\u5355\uff0c\u4f46\u7a0b\u5e8f\u4e2d\u53ef\u80fd\u51fa\u73b0\u5f88\u591a\u5904\u5bf9\u6307\u9488\u7684\u68c0\u67e5\uff0c\u4e07\u4e00\u51fa\u73b0\u7b14\u8bef\uff0c\u7f16\u8bd1\u5668\u4e0d\u80fd\u53d1\u73b0\uff0c\u751f\u6210\u7684\u7a0b\u5e8f\u5185\u542b\u903b\u8f91\u9519\u8bef\uff0c\u5f88\u96be\u6392\u9664\u3002\u800c\u4f7f\u7528NULL\u4ee3\u66ff0\uff0c\u5982\u679c\u51fa\u73b0\u62fc\u5199\u9519\u8bef\uff0c\u7f16\u8bd1\u5668\u5c31\u4f1a\u68c0\u67e5\u51fa\u6765\u3002", "\n[2]", "\n(A)return new string(\u201cInvalid argument(s)\u201d);\uff0c\u8bf4\u660e\u7b54\u9898\u8005\u6839\u672c\u4e0d\u77e5\u9053\u8fd4\u56de\u503c\u7684\u7528\u9014\uff0c\u5e76\u4e14\u4ed6\u5bf9\u5185\u5b58\u6cc4\u6f0f\u4e5f\u6ca1\u6709\u8b66\u60d5\u5fc3\u3002\u4ece\u51fd\u6570\u4e2d\u8fd4\u56de\u51fd\u6570\u4f53\u5185\u5206\u914d\u7684\u5185\u5b58\u662f\u5341\u5206\u5371\u9669\u7684\u505a\u6cd5\uff0c\u4ed6\u628a\u91ca\u653e\u5185\u5b58\u7684\u4e49\u52a1\u629b\u7ed9\u4e0d\u77e5\u60c5\u7684\u8c03\u7528\u8005\uff0c\u7edd\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u8c03\u7528\u8005\u4e0d\u4f1a\u91ca\u653e\u5185\u5b58\uff0c\u8fd9\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f\u3002", "\n(B)return 0;\uff0c\u8bf4\u660e\u7b54\u9898\u8005\u6ca1\u6709\u638c\u63e1\u5f02\u5e38\u673a\u5236\u3002\u8c03\u7528\u8005\u6709\u53ef\u80fd\u5fd8\u8bb0\u68c0\u67e5\u8fd4\u56de\u503c\uff0c\u8c03\u7528\u8005\u8fd8\u53ef\u80fd\u65e0\u6cd5\u68c0\u67e5\u8fd4\u56de\u503c\uff08\u89c1\u540e\u9762\u7684\u94fe\u5f0f\u8868\u8fbe\u5f0f\uff09\u3002\u5984\u60f3\u8ba9\u8fd4\u56de\u503c\u80a9\u8d1f\u8fd4\u56de\u6b63\u786e\u503c\u548c\u5f02\u5e38\u503c\u7684\u53cc\u91cd\u529f\u80fd\uff0c\u5176\u7ed3\u679c\u5f80\u5f80\u662f\u4e24\u79cd\u529f\u80fd\u90fd\u5931\u6548\u3002\u5e94\u8be5\u4ee5\u629b\u51fa\u5f02\u5e38\u6765\u4ee3\u66ff\u8fd4\u56de\u503c\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u8f7b\u8c03\u7528\u8005\u7684\u8d1f\u62c5\u3001\u4f7f\u9519\u8bef\u4e0d\u4f1a\u88ab\u5ffd\u7565\u3001\u589e\u5f3a\u7a0b\u5e8f\u7684\u53ef\u7ef4\u62a4\u6027\u3002", "\n[3]", "\n(A)\u5fd8\u8bb0\u4fdd\u5b58\u539f\u59cb\u7684strDest\u503c\uff0c\u8bf4\u660e\u7b54\u9898\u8005\u903b\u8f91\u601d\u7ef4\u4e0d\u4e25\u5bc6\u3002", "\n[4]", "\n(A)\u5faa\u73af\u5199\u6210while (*strDest++=*strSrc++);\uff0c\u540c[1](B)\u3002", "\n(B)\u5faa\u73af\u5199\u6210while (*strSrc!=\u2019\\0\u2032) *strDest++=*strSrc++;\uff0c\u8bf4\u660e\u7b54\u9898\u8005\u5bf9\u8fb9\u754c\u6761\u4ef6\u7684\u68c0\u67e5\u4e0d\u529b\u3002\u5faa\u73af\u4f53\u7ed3\u675f\u540e\uff0cstrDest\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u6ca1\u6709\u6b63\u786e\u5730\u52a0\u4e0a\u2019\\0\u2032\u3002"], "title": "\u534e\u4e3a\u6167\u901a\u7b14\u8bd5\u9898"},
{"contents": ["\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\u5b8c\u6210\u4ee5\u4e0b\u529f\u80fd\uff1a", "\n- \u4ece\u78c1\u76d8\u4e0a\u8bfb\u5165\u4e00\u4e2a\u6587\u4ef6\uff0c\u8fd9\u4e2a\u6587\u4ef6\u53ef\u80fd\u662f\u4e00\u4e2aHTML\u683c\u5f0f\u7684\u6587\u4ef6\u6216\u8005\u5176\u4ed6\u683c\u5f0f\u7684", "\n-\u00a0 parse\u6b64\u6587\u4ef6\u4e2d\u53ef\u80fd\u5305\u542b\u7684RSS\u94fe\u63a5 \uff08\u53ef\u80fd0\u6216\u591a\u4e2a\uff09\u3002", "\n- \u5217\u51fa\u627e\u5230\u7684RSS\u94fe\u63a5", "\u6ce8\u610f\uff1a\u8bf7\u4e0d\u8981\u4f7f\u7528\u4efb\u4f55Parse HTML, XML, RSS\u76f8\u5173\u7684\u5e93\uff0c\u76f4\u63a5\u5199C/C++\u4ee3\u7801\u6765\u5904\u7406\u8bfb\u5165\u7684\u5185\u5bb9\u3002\u8bf7\u6ce8\u610f\u4ee3\u7801\u7684\u98ce\u683c\uff0c\u6587\u4ef6\u7684\u5206\u5e03\u5b89\u6392\u3001\u6587\u4ef6\u540d\u3001\u53d8\u91cf\u3001\u6837\u5f0f\u7b49\u7684\u547d\u540d\u3001\u9875\u9762\u7684\u7f8e\u89c2\u7b49\uff0c\u8fd9\u4e9b\u90fd\u5c06\u5f71\u54cd\u60a8\u7684\u5f97\u5206\u3002", "\n\u63d0\u793a\uff1a1\u3001\u6ce8\u610f\u5404\u79cd\u5f02\u5e38\u60c5\u51b5\u7684\u5904\u7406\u3002 2\u3001\u6ce8\u610f\u4ee3\u7801\u7684\u7b80\u6d01\u548c\u6548\u7387\u3002"], "title": "\u4e00\u4e2aC/C++\u7f16\u7a0b\u9762\u8bd5\u9898"},
{"contents": ["1.\u7236\u7c7b\u6709\u865a\u51fd\u6570\uff0c\u5b50\u7c7b\u662f\u5426\u80fd\u5b9e\u73b0\u591a\u6001\uff1f", "\n2.\u968f\u673a\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5e76\u4f7f\u5b83\u5012\u7f6e\u8f93\u51fa\uff0c\u7528C++", "\n3 \u4e0b\u5217\u5199\u6cd5\u90a3\u79cd\u6b63\u786e\uff0c\u4e3a\u4ec0\u4e48\uff1f", "\nif(n == 10)", "\nif(10 == n)", "\n4,\u5199\u51fa\u4e0b\u5217\u7ed3\u679c", "\nchar[] a = \u201cword\u201d cout<<sizeof(a)<<endl;", "\nchar\u00a0\u00a0 a = 10\u00a0\u00a0\u00a0\u00a0 cout<<sizeof(a)<<endl;", "\nchar\u00a0\u00a0 *pp = malloc(10) cout<<sizeof(p)<<endl;", "\n5\u8003\u7ed3\u6784\u4f53\uff0c\u5171\u540c\u4f53\u7684\u5185\u5b58\u957f\u5ea6", "\n6\u7ebf\u7a0b\u6709\u51e0\u79cd\u901a\u4fe1\u65b9\u5f0f", "\n7\uff0c\u8003\u865a\u51fd\u6570\u611f\u5ff5", "\n8\uff0c\u6709\u8868\u91cc\u9762\u6709\u90e8\u95e8\u7f16\u53f7\uff0c\u90e8\u95e8\u540d\uff0c\u5de5\u8d44\uff0c\u7b97\u51fa\u9664\u67d0\u4e2a\u90e8\u95e8\u5916\u6240\u6709\u7684\u5e73\u5747\u5de5\u8d44\uff0c\u5e76\u6309\u90e8\u95e8\u5b57\u6bcd\u6392\u5e8f", "\n9\uff0c\u591a\u8868\u67e5\u8be2\u3002", "\n10\u3002\u6307\u51fa\u4e0b\u5217\u6709\u4ec0\u4e48\u4e0d\u540c", "\ncoust char *p", "\nchar coust *p", "\nchar *coust p"], "title": "\u504f\u5411C++\u7684\u4e00\u5957\u9762\u8bd5\u9898"},
{"contents": ["\u4e00:\u586b\u7a7a:", "\n1.\u00a0\u00a0\u00a0 \u73b0\u6709\u7c7bpublic void CCompany,\u8bf7\u5199\u51fa\u5b83\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570_____________,\u6790\u6784\u51fd\u6570___________,\u8fd0\u7b97\u7b26+=\u7684\u91cd\u8f7d\u51fd\u6570____________.", "\n2.\u00a0\u00a0\u00a0 int i = 10, j = 10, k = 3, k\u00a0 /=\u00a0 i + j, k = ___________.", "\n3.\u00a0\u00a0\u00a0 \u73b0\u6709\u51fd\u6570Setattr(int a, int b, int c). \u5df2\u77e5b\u65e0\u521d\u59cb\u503c, a\u7684\u521d\u59cb\u503c\u7b49\u4e8e1, c\u7684\u521d\u59cb\u503c\u7b49\u4e8e0, \u90a3\u4e48\u6b64\u51fd\u6570\u7684\u58f0\u660e\u5f62\u5f0f\u4e3a:___________________.", "\n4.\u00a0\u00a0\u00a0 \u5728C\u4e2d,\u9884\u7f16\u8bd1\u5b9a\u4e49\u7684\u5173\u952e\u5b57\u662f__________, \u5e38\u91cf\u5b9a\u4e49\u7684\u5173\u952e\u5b57\u662f:_____________.", "\n5.\u00a0\u00a0\u00a0 \u5728C\u4e2d,\u68c0\u6d4b\u5b57\u7b26\u4e32\u957f\u5ea6\u7684\u51fd\u6570\u662f:______________, \u62f7\u8d1d\u5b57\u7b26\u4e32\u7684\u51fd\u6570\u662f:_________,", "\n\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u51fd\u6570\u662f:______________,\u8fde\u63a5\u5b57\u7b26\u4e32\u7684\u51fd\u6570\u662f:___________,\u4f7f\u7528\u8fd9\u4e9b\u51fd\u6570\u9700\u8c03\u7528\u7684\u5934\u6587\u4ef6\u662f:________________.", "\n6.\u00a0\u00a0\u00a0 \u5df2\u77e5\u5b57\u7b26\u4e32char[] topic = \u201chello,hello hello money!\u201d, sizeof(topic) = _________, strlen(topic)=___________.", "\n\u4e8c:\u95ee\u7b54\u9898:", "\n1.\u00a0\u00a0\u00a0 main\u51fd\u6570\u7684\u53c2\u6570argc\u548cargv\u7684\u4f5c\u7528\u662f\u4ec0\u4e48?\u5982\u4f55\u83b7\u5f97\u67d0\u4e2a\u5e94\u7528\u7a0b\u5e8f\u7684\u7b2c\u4e09\u4e2a\u547d\u4ee4\u884c\u53c2\u6570.", "\n2.\u00a0\u00a0\u00a0 if( n == 10)\u00a0 \u20141.", "\nif( 10 == n)\u00a0 \u20142", "\n\u54ea\u4e00\u79cd\u5199\u6cd5\u662f\u6b63\u786e\u7684, \u4e3a\u4ec0\u4e48?", "3.\u00a0\u00a0\u00a0 -\uf0e01.const char *p;", "\n-\uf0e02.char const *p;", "\n-\uf0e03.char * const p;", "\n-\uf0e04 const char * const p;", "\n\u8bf7\u63cf\u8ff0\u4e00\u4e0b\u4ee5\u4e0a\u56db\u79cd\u5199\u6cd5\u7684\u533a\u522b.", "4.\u00a0\u00a0\u00a0 \u8bf7\u7f16\u5199\u4e00\u4e2a\u7c7b, \u4f7f\u5176\u5177\u6709\u6574\u5f62\u53d8\u91cfi\u7684i++\u4ee5\u53ca++i\u7684\u529f\u80fd.", "\n5.\u00a0\u00a0\u00a0 \u8bf7\u5199\u51faC++\u4e2d\u7684\u6240\u6709\u8bbf\u95ee\u7ea7\u522b,\u5e76\u6bd4\u8f83\u5b83\u4eec\u7684\u4e0d\u540c.", "\n6.\u00a0\u00a0\u00a0 \u73b0\u6709\u8868department(dep_Id, depart_name, wage), \u67e5\u8be2\u9664human resource\u4ee5\u5916\u7684\u90e8\u95e8\u540d\u53ca\u8be5\u90e8\u95e8\u7684\u5e73\u5747\u5de5\u8d44,\u5e76\u6309\u5b57\u7b26\u7684\u987a\u5e8f\u5bf9\u67e5\u8be2\u7ed3\u679c\u8fdb\u884c\u6392\u5e8f.", "\u4e09:\u5206\u6790\u9898:", "\n\u8003\u70b9:\u51fd\u6570\u7684\u6309\u503c\u4f20\u9012\u53ca\u5f15\u7528\u4f20\u9012.", "\n\u591a\u6001(\u57fa\u7c7b\u6307\u9488\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61, \u57fa\u7c7b\u5f15\u7528\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61).", "\n\u51fd\u6570\u91cd\u8f7d,", "\n\u9759\u6001\u6210\u5458(\u9759\u6001\u65b9\u6cd5).", "\u56db.\u7f16\u7a0b\u9898.", "\n1. \u5df2\u77e5\u5b57\u7b26\u4e32\u64cd\u4f5c\u51fd\u6570\u4e2d\u6709\u5b57\u7b26\u4e32\u62f7\u8d1d\u51fd\u6570strcpy().\u73b0\u6709\u81ea\u5b9a\u4e49\u5b57\u7b26\u4e32\u62f7\u8d1d\u51fd\u6570Strcpy\u7684\u58f0\u660e: char* Strcpy(char* strDest, const char* strSrc).", "\n-\uf0e01.\u5b9e\u73b0\u8be5\u81ea\u5b9a\u4e49\u5b57\u7b26\u4e32\u62f7\u8d1d\u51fd\u6570.", "\n-\uf0e02.\u8be5\u51fd\u6570\u5177\u5907\u62f7\u8d1d\u5b57\u7b26\u4e32\u7684\u529f\u80fd,\u4e3a\u4ec0\u4e48\u8981\u8fd4\u56dechar*\u578b\u53d8\u91cf.", "\n2.\u5df2\u77e5\u4e00\u4e2a\u94fe\u8868\u4e2d\u5b58\u653e\u4e8610\u4e2a\u6570,\u8bf7\u5bf9\u8be5\u94fe\u8868\u8fdb\u884c\u9006\u7f6e.\u4ee5\u4e0b\u662f\u8be5\u94fe\u8868\u7ed3\u70b9\u7684\u58f0\u660e:", "\nstruct node", "\n{", "\nint num;", "\nstruct node* next;", "\n}", "3.\u2013>1.\u4e3a\u4e00\u4e2a\u6574\u578b\u6570\u7ec4\u6dfb\u52a0\u4e00\u7ec4\u968f\u673a\u6570.", "\n\u2013\uf0e02.\u5206\u533a\u6392\u5e8f:\u4ece\u6570\u7ec4\u4e2d\u4efb\u610f\u9009\u53d6\u4e00\u4e2a\u6570\u4f5c\u4e3a\u53c2\u7167\u6570,\u904d\u5386\u8be5\u6570\u7ec4,\u5c06\u5927\u4e8e\u6b64\u6570\u7684\u6570\u7684\u6570\u653e\u5728\u4e00\u8fb9, \u5c06\u5c0f\u4e8e\u6b64\u6570\u7684\u6570\u7684\u6570\u653e\u5728\u53e6\u4e00\u8fb9, \u4f9d\u6b21\u7c7b\u63a8,\u5b8c\u6210\u6392\u5e8f."], "title": "\u56db\u8fbe\u8363\u5408C/C++\u7b14\u8bd5\u9898"},
{"contents": ["\u4e00\u3001\u00a0\u00a0\u00a0 \u95ee\u7b54", "\n1\u3001\u5b9e\u6a21\u5f0f\u4e0e\u4fdd\u62a4\u6a21\u5f0f\u3002\u4e3a\u4ec0\u4e48\u8981\u8bbe\u8ba1\u8fd9\u4e24\u79cd\u6a21\u5f0f\uff1f\u597d\u5904\u5728\u4ec0\u4e48\u5730\u65b9\uff1f\u5206\u522b\u5199\u51fa\u5404\u81ea\u5bfb\u5740\u7684", "\n\u8fc7\u7a0b\u3002", "2\u3001\u8bf7\u9605\u8bfb\u4ee5\u4e0b\u4e00\u6bb5\u7a0b\u5e8f\uff0c\u5e76\u7ed9\u51fa\u7b54\u6848\u3002", "\nclass A", "\n{", "\npublic\uff1a", "\nA(){ doSth() }", "\nvirtual void doSth(){ printf(\u201cI am A\u201d);}", "\n}", "class B\uff1apublic A", "\n{", "\npublic\uff1a", "virtual void doSth(){ printf(\u201cI am B\u201d);}", "\n}", "B b;", "\n\u6267\u884c\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f\u4e3a\u4ec0\u4e48\uff1f", "3\u3001\u5728STL\u7684\u5e94\u7528\u4e2d map<int,int>\u8fd9\u79cdkey-value\u7684\u5e94\u7528\u5f88\u591a\uff0c\u5982\u679ckey\u7684\u7c7b\u578b\u662fGUID\uff0c\u8be5\u5982", "\n\u4f55\u5904\u7406\uff1f", "4\u3001\u4e00\u4e2a\u5185\u5b58\u53d8\u91cfa=5\uff0c\u67095\u4e2a\u7ebf\u7a0b\u9700\u8981\u5bf9\u5176\u8fdb\u884c\u64cd\u4f5c\uff0c\u5176\u4e2d3\u4e2a\u5bf9a\u8fdb\u884c\u52a01\u64cd\u4f5c\uff0c2\u4e2a\u5bf9a\u8fdb", "\n\u884c\u51cf1\u64cd\u4f5c\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u80fd\u591f\u5f97\u5230\u6b63\u5e38\u7ed3\u679c6\uff0c\u9700\u8981\u4f7f\u7528\u4ec0\u4e48\u65b9\u6cd5\uff1f\uff08\u5217\u51fa\u8d8a\u591a\u8d8a\u597d\uff09", "5\u3001\u63cf\u8ff0\u5e76\u6bd4\u8f83\u4ee5\u4e0b\u5bf9\u8c61\uff1a\u4e8b\u4ef6\uff0c\u4fe1\u6807\uff0c\u4e34\u754c\u533a\uff0c\u4e92\u65a5\u5bf9\u8c61\u3002", "6\u3001cdecl\u3001stdcall\u3001fastcall\u662f\u4ec0\u4e48\uff1f\u54ea\u79cd\u53ef\u4ee5\u5b9e\u73b0\u4e2a\u6570\u4e0d\u5b9a\u7684\u5165\u53e3\u53c2\u6570\uff0c\u4e3a\u4ec0\u4e48\uff1f", "\u4e8c\u3001\u00a0\u00a0\u00a0 \u7a0b\u5e8f\u8bbe\u8ba1\uff08\u4ee5\u4e0b\u9898\u76ee\u8bf7\u5199\u51fa\u5b9e\u73b0\u4ee3\u7801\uff09", "\n1\u3001\u6709\u4e00\u6bb5\u6587\u672c\uff0c\u7edf\u8ba1\u5176\u4e2d\u7684\u5355\u8bcd\u6570\u3002\u4f8b\u5982\uff1a", "\nAs a technology , \u201cHailStorm\u201d is so new that it is still only known by its", "code name.", "\n\u6ce8\u610f\uff1a\u5355\u8bcd\u95f4\u7684\u95f4\u9694\u4e0d\u4e00\u5b9a\u662f\u4e00\u4e2a\u7a7a\u683c", "2\u3001\u56fd\u9645\u8c61\u68cb\u67098\u00d78\u683c\uff0c\u6bcf\u4e2a\u683c\u5b50\u53ef\u653e\u4e00\u4e2a\u68cb\u5b50\u3002\u7687\u540e\u7684\u89c4\u5219\u662f\u53ef\u4ee5\u6a2a\u3001\u7ad6\u3001\u659c\u79fb\u52a8\u3002\u5728\u4e00", "\n\u4e2a\u68cb\u76d8\u653e\u7f6e8\u4e2a\u7687\u540e\uff0c\u5e76\u4f7f\u5b83\u4eec\u4e92\u76f8\u65e0\u6cd5\u5a01\u80c1\u5230\u5f7c\u6b64\u3002", "3\u3001\u8f93\u5165\u4e8c\u4e2a64\u4f4d\u7684\u5341\u8fdb\u5236\u6570\uff0c\u8ba1\u7b97\u76f8\u4e58\u4e4b\u540e\u7684\u4e58\u79ef", "\n\u5df2\u77e5strcpy\u51fd\u6570\u7684\u539f\u578b\u662f\uff1a", "\nchar * strcpy(char * strDest,const char * strSrc);", "\n1.\u4e0d\u8c03\u7528\u5e93\u51fd\u6570\uff0c\u5b9e\u73b0strcpy\u51fd\u6570\u3002", "\n2.\u89e3\u91ca\u4e3a\u4ec0\u4e48\u8981\u8fd4\u56dechar *\u3002", "\u4e09", "\n1. How do you code an infinite loop in C?", "2. Volatile:", "a) What does the keyword volatile mean? Give an example", "b) Can a parameter be both const and volatile? Give an example", "c) Can a pointer be volatile? Give an example", "3. What are the values of a, b, and c after the following instructions:", "int a=5, b=7, c;", "c = a+++b;", "4, What do the following declarations mean?", "a) const int a;", "b) int const a;", "c) const int *a;", "d) int * const a;", "e) int const * a const;", "5. Which of the following statements describe the use of the keyword", "static?", "a) Within the body of a function: A static variable maintains its value", "between function revocations", "b) Within a module: A static variable is accessible by all functions", "within that module", "c) Within a module: A static function can only be called by other", "functions within that module", "6. Embedded systems always require the user to manipulate bits in", "registers or variables. Given an integer variable a, write two code fragments.", "The first should set bit 5 of a. The second shnuld clear bit 5 of a. In both", "cases, the remaining bits should be unmodified.", "7. What does the following function return?", "char foo(void)", "{", "unsigned int a = 6;", "iht b = -20;", "char c;", "(a+b > 6) ? (c=1): (c=0);", "return c;", "}", "8. What values are printed when the following C program is executed?", "int i = 8;", "void main(void)", "(", "9. What will be the output of the following C code?", "main()", "{", "int k, num= 30;", "k =(num > 5 ? (num <=10 ? 100:200): 500);", "printf(\u201c%d\u201d, k);", "}", "10. What will the following C code do?", "int *ptr;", "ptr =(int *)Ox67a9;", "*ptr = Oxaa55;", "11. What will be the output of the follow C code?", "#define product(x) (x*x)", "main()", "{", "int i = 3, j, k;", "j = product(i++);", "k = product(++i);", "printf(\u201c%d %d\u201d,j,k);", "}", "12. Simplify the following Boolean expression", "!((i ==12) || (j > 15))", "\nstruct Node {", "\nint value;", "\nNode* next;", "\n};", "\n1.1 Get the value of the Nth node from last node in the linked list.", "PARAM HEAD: the first element in the linked list:", "\nPARAM n: the number of the node counted reversely", "\nRETURN: the value of the node, or -1 if not exists", "int GetValue(Node* HEAD, int n)", "\n{", "\n}", "1.2 Delete a node WITHOUT using the HEAD pointer.", "\nPARAM p: A pointer pointed to a node in the middle of the linked list.", "\nRETURN: void", "void Delete(Node* p)", "\n{", "\n}", "1.3 Insert a new node before p WITHOUT using the HEAD pointer", "\nPARAM p: A pointer pointed to a node in the middle of the linked list.", "\nPARAM value: new Node value", "\nRETURN: void", "void Insert(Node* p, int value)", "\n{", "\n}", "Question 2:", "Please write a String class with following features:", "\n\u56db:", "\n1. Default constructors with no parameters passed.", "\n2. Constructor with parameter const char* sourceString passed.", "\n3. Destructor.", "\n4. Copy constructor.", "\n5. Assignment operator.", "\n6. Operator overloading operator+= which appends another String instance into current String instance.", "\n7. A method returning length of the String.", "\n8. A conversion operator which converts the current String instance into raw C-style string of type const char*.", "\u4e94", "\n1. Part of the signature of the String class is:", "\nclass String {", "\n\u2026.", "\n};", "Other part of signature and implementation is completed by you.", "2. Please make the implementation as simple as possible. Only help functions and classes from standard C&C++ may be used to aid your implementation.", "3. If possible please suggest further improvement of the String class.", "Question 3:", "Given a link list, detect whether it\u2019s circular using only one loop.", "Tips: Below implementation is allowed", "\nfor( \u2026 )", "\n{", "\n\u2026", "\n}", "The following implementations is NOT allowed", "\n\u2026", "\nfor( \u2026 )", "\n{", "\n\u2026", "\nfor( \u2026 ) {\u2026}", "\n}", "\n\u2026", "or", "\n\u2026", "\nfor( p = list->head, q = list->head; p != NULL && q != NULL; p = p->next )", "\n{", "\n\u2026", "\n}", "\n\u2026", "\nfor( \u2026 )", "\n{", "\n\u2026", "\n}", "\n\u516d", "\n(1)", "int Calc(unsigned int x)", "\n{", "\nint count=0;", "\nwhile(x)", "\n{", "\nprintf(\u201cx=%i\\n\u201d,x);", "\ncount++;", "\nx=x&(x-1);", "\n}", "return count;", "}", "\n\u95eeCalc(9999)\u7684\u503c\u662f\u591a\u5c11\u3002", "(2)\u68c0\u67e5\u9519\u8bef", "int CopyStringCount(const char* Str)", "\n{", "\nint nCount = 0;", "\nchar* pBuffer;", "pBuffer = new char[_MAX_PATH];", "strcpy(pBuffer,Str);", "for(;*pBuffer!=\u2019\\0\u2032; pBuffer++)", "\nif(*pBuffer == \u2018\\\u2019) nCount ++;", "// delete [] pBuffer;", "return nCount;", "\n}", "(3)\u5199\u51fa\u7ed3\u679c", "void foo(int p1[])", "\n{", "\n*p1 += 5;", "\n}", "void bar(int p2[])", "\n{", "\np2[1] = 15;", "\n}", "void main()", "\n{", "\nint a[]={3,4,5};", "\nint b[]={3,4,5};", "\nint *p2;", "\np2=&a[1];", "\nbar(p2);", "\nprintf(\u201c%i %i %i\\n\u201d,a[0],a[1],a[2]);", "\np2=&b[0];", "\np2++;", "\nfoo(p2);", "\nbar(p2);", "\nprintf(\u201c%i %i %i\\n\u201d,b[0],b[1],b[2]);", "\n}", "(4)", "\u6709\u4e005\u8282\u8f66\u53a2\u7684\u8fc7\u5c71\u8f66\uff0c\u6bcf\u8282\u80fd\u5ea7\u4e24\u4eba\uff0c\u73b0\u6709Luair,Jack,Gwen,Tom,Mark,Paul,6\u4eba\u53bb\u4e58", "\n\u8f66\uff0c\u6709\u4ee5\u4e0b\u6761\u4ef6", "\n1,Luair\u548c\u522b\u4eba\u540c\u4e58", "\n2,Mark \u4e0d\u5408\u522b\u4eba\u540c\u4e58\uff0c\u800c\u4e14Mark\u7684\u524d\u4e00\u8282\u8f66\u53a2\u662f\u7a7a\u7684", "\n3,Tom \u4e0d\u548cGwen \u4e0e Paul \u4e2d\u7684\u4efb\u4f55\u4e00\u4eba\u540c\u4e58", "\n4,Gwen\u4e583\uff0c\u6216\u80054\u8282", "\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n\u2014\u2014\u2014\u2014-", "\u4e03", "\n1\u5199\u51fa\u4e0b\u5217\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002", "\n(1)\u5192\u6ce1\u6392\u5e8f\uff1b", "\n(2)\u9009\u62e9\u6392\u5e8f\uff1b", "\n(3)\u63d2\u5165\u6392\u5e8f\uff1b", "\n(4)\u5feb\u901f\u6392\u5e8f\uff1b", "\n(5)\u5806\u6392\u5e8f\uff1b", "\n(6)\u5f52\u5e76\u6392\u5e8f\uff1b", "2\u5199\u51fa\u4e0b\u5217\u7a0b\u5e8f\u5728X86\u4e0a\u7684\u8fd0\u884c\u7ed3\u679c\u3002", "struct mybitfields", "\n{", "\nunsigned short a : 4;", "\nunsigned short b : 5;", "\nunsigned short c : 7;", "\n}test", "void main(void)", "\n{", "\nint i;", "\ntest.a=2;", "\ntest.b=3;", "\ntest.c=0;", "i=*((short *)&test);", "\nprintf(\u201c%d\\n\u201d,i);", "\n}", "3\u5199\u51fa\u4e0b\u5217\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u3002", "unsigned int i=3;", "\ncout<", "\n4\u5199\u51fa\u4e0b\u5217\u7a0b\u5e8f\u6240\u6709\u53ef\u80fd\u7684\u8fd0\u884c\u7ed3\u679c\u3002", "int a;", "\nint b;", "\nint c;", "void F1()", "\n{", "\nb=a*2;", "\na=b;", "\n}", "void F2()", "\n{", "\nc=a+1;", "\na=c;", "\n}", "main()", "\n{", "\na=5;", "\n//Start F1,F2 in parallel", "\nF1(); F2();", "\nprintf(\u201ca=%d\\n\u201d,a);", "\n}", "5\u8003\u5bdf\u4e86\u4e00\u4e2aCharPrev()\u51fd\u6570\u7684\u4f5c\u7528\u3002", "6\u5bf9 16 Bits colors\u7684\u5904\u7406\uff0c\u8981\u6c42\uff1a", "\n\uff081\uff09Byte\u8f6c\u6362\u4e3aRGB\u65f6\uff0c\u4fdd\u7559\u9ad85\u30016bits\uff1b", "\n\uff082\uff09RGB\u8f6c\u6362\u4e3aByte\u65f6\uff0c\u7b2c2\u30013\u4f4d\u7f6e\u96f6\u3002", "7\u4e00\u4e2a\u94fe\u8868\u7684\u64cd\u4f5c\uff0c\u6ce8\u610f\u4ee3\u7801\u7684\u5065\u58ee\u548c\u5b89\u5168\u6027\u3002\u8981\u6c42\uff1a", "\n\uff081\uff09\u589e\u52a0\u4e00\u4e2a\u5143\u7d20\uff1b", "\n\uff082\uff09\u83b7\u5f97\u5934\u5143\u7d20\uff1b", "\n\uff083\uff09\u5f39\u51fa\u5934\u5143\u7d20\uff08\u83b7\u5f97\u503c\u5e76\u5220\u9664\uff09\u3002", "8\u4e00\u4e2a\u7ed9\u5b9a\u7684\u6570\u503c\u7531\u5de6\u8fb9\u5f00\u59cb\u5347\u4f4d\u5230\u53f3\u8fb9\u7b2cN\u4f4d\uff0c\u5982", "\n0010<<1 == 0100", "\n\u6216\u8005", "\n0001 0011<<4 == 0011 0000", "\n\u8bf7\u7528C\u6216\u8005C++\u6216\u8005\u5176\u4ed6X86\u4e0a\u80fd\u8fd0\u884c\u7684\u7a0b\u5e8f\u5b9e\u73b0\u3002", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\n\u9644\u52a0\u9898\uff08\u53ea\u6709\u5728\u5b8c\u6210\u4ee5\u4e0a\u9898\u76ee\u540e\uff0c\u624d\u83b7\u51c6\u56de\u7b54\uff09", "\nIn C++, what does \u201cexplicit\u201d mean? what does \u201cprotected\u201d mean?", "explicit", "\nC++ Specific", "This keyword is a declaration specifier that can only be applied to", "\nin-class constructor declarations. Constructors declared explicit will not", "\nbe considered for implicit conversions. For example:", "class X {", "\npublic:", "\nexplicit X(int); //legal", "\nexplicit X(double) { //legal // \u2026 }", "\n};", "\nexplicit X::X(int) {} //illegal", "\nAn explicit constructor cannot take part in implicit conversions. It can", "\nonly be used to explicitly construct an object. For example, with the class", "\ndeclared above:", "void f(X) {}", "\nvoid g(int I)", "\n{", "\nf(i); // will cause error", "\n}", "\nvoid h()", "\n{", "\nX x1(1); // legal", "\n}", "\nThe function call f(i) fails because there is no available implicit", "\nconversion from int to X.", "Note It is meaningless to apply explicit to constructors with multiple", "\narguments, since such constructors cannot take part in implicit conversions.", "END C++ Specific", "protected", "\nC++ Specific \u2014>", "protected: [member-list]", "protected base-class", "When preceding a list of class members, the protected keyword specifies", "\nthat those members are accessible only from member functions and friends of", "\nthe class and its derived classes. This applies to all members declared up", "\nto the next access specifier or the end of the class.", "When preceding the name of a base class, the protected keyword specifies", "\nthat the public and protected members of the base class are protected", "\nmembers of the derived class.", "Default access of members in a class is private. Default access of members", "\nin a structure or union is public.", "Default access of a base class is private for classes and public for", "\nstructures. Unions cannot have base classes.", "For related information, see public, private, friend, and Table of Member", "\nAccess Privileges.", "END C++ Specific", "Example", "// Example of the protected keyword", "\nclass BaseClass {", "\nprotected: int protectFunc();", "\n};", "\nclass DerivedClass : public BaseClass", "\n{ public:", "\nint useProtect() { protectFunc(); } // protectFunc accessible from", "\nderived class", "\n};", "\nvoid main()", "\n{", "\nBaseClass aBase;", "\nDerivedClass aDerived;", "\naBase.protectFunc(); // Error: protectFunc not accessible", "\naDerived.protectFunc(); // Error: protectFunc not accessible in derived", "\nclass", "\n}", "How do you code an infinite loop in C?", "\n2. Volatile:", "\na) What does the keyword volatile mean? Give an example", "\nb) Can a parameter be both const and volatile? Give an example", "\nc) Can a pointer be volatile? Give an example", "\n3. What are the values of a, b, and c after the following instructions:", "\nint a=5, b=7, c;", "\nc = a+++b;", "\n4, What do the following declarations mean?", "\na) const int a;", "\nb) int const a;", "\nc) const int *a;", "\nd) int * const a;", "\ne) int const * a const;", "\n5. Which of the following statements describe the use of the keyword", "\nstatic?", "\na) Within the body of a function: A static variable maintains its value", "\nbetween function revocations", "\nb) Within a module: A static variable is accessible by all functions", "\nwithin that module", "\nc) Within a module: A static function can only be called by other", "\nfunctions within that module", "\n6. Embedded systems always require the user to manipulate bits in", "\nregisters or variables. Given an integer variable a, write two code", "\nfragments.", "The first should set bit 5 of a. The second shnuld clear bit 5 of a. In", "\nboth", "cases, the remaining bits should be unmodified.", "\n7. What does the following function return?", "\nchar foo(void)", "\n{", "\nunsigned int a = 6;", "\niht b = -20;", "\nchar c;", "\n(a+b > 6) ? (c=1): (c=0);", "\nreturn c;", "\n}", "\n8. What values are printed when the following C program is executed?", "\nint i = 8;", "\nvoid main(void)", "\n(", "9. What will be the output of the following C code?", "\nmain()", "\n{", "\nint k, num= 30;", "\nk =(num > 5 ? (num <=10 ? 100:200): 500);", "\nprintf(\u201c%d\u201d, k);", "\n}", "\n10. What will the following C code do?", "\nint *ptr;", "\nptr =(int *)Ox67a9;", "\n*ptr = Oxaa55;", "\n11. What will be the output of the follow C code?", "\n#define product(x) (x*x)", "\nmain()", "\n{", "\nint i = 3, j, k;", "\nj = product(i++);", "\nk = product(++i);", "\nprintf(\u201c%d %d\u201d,j,k);", "\n}", "\n12. Simplify the following Boolean expression", "\n!((i ==12) || (j > 15))", "\n13. How many flip-flop circuits are needed to divide by 16?", "\n14. Provides 3 properties that make an OS, a RTOS?", "\n15. What is pre-emption?", "\n16. Assume the BC register value is 8538H, and the DE register", "\nvalue is 62A5H.Find the value of register BC after the following", "\nassembly operations:", "\nMOV A,C", "\nSUB E", "\nMOV C,A", "\nMOV A,B", "\nSBB D", "\nMOV B,A", "\n17.In the Assembly code shown below", "\nLOOP: MVI C,78H", "\nDCR C", "\nJNZ LOOP", "\nHLT", "\nHow many times is the DCR C Operation executed?", "18.Describe the most efficient way(in term of execution time", "\nand code size) to divide a number by 4 in assembly language", "19.what value is stored in m in the following assembly language code", "\nfragment if n=7?", "\nLDAA #n", "\nLABEL1: CMPA #5", "\nBHI L3", "\nBEQ L2", "\nDECA", "\nBRA L1", "\nLABEL2: CLRA", "\nLABEL3: STAA #m", "\n20. What is the state of a process if a resource is not", "\navailable?", "\n#define a 365*24*60*60", "\n21. Using the #define statement, how would you", "\ndeclare a manifest constant that returns the", "\nnumber of seconds in a year? Disregard leap", "\nyears in your answer.", "\n22. Interrupts are an important part of embedded", "\nsystems. Consequently, many compiler vendors", "\noffer an extension to standard C to support interrupts.", "\nTypically, the keyword is __interrupt. The following", "\ncode uses __interrupt to define an interrupt service", "\nroutine (ISR). Point out problems in the code.", "__interrupt double compute_area (double radius)", "\n{", "\ndouble area = PI * radius * radius;", "\nprintf(\u201c\\nArea = %f\u201d, area);", "\nreturn area;", "\n}", "\u516b", "\n1.\u4e00\u682a\u67e5\u627e\u4e8c\u53c9\u6811,\u5176\u7ed3\u70b9A\u3001B\u3001C\u3001D\u3001E\u3001F\u4f9d\u6b21\u5b58\u653e\u5728\u4e00\u4e2a\u8d77\u59cb\u5730\u5740\u4e3an(\u5047\u5b9a\u5730\u5740\u4ee5\u5b57", "\n\u8282", "\n\u4e3a\u5355\u4f4d\u987a\u5e8f\u7f16\u53f7)\u7684\u8fde\u7eed\u533a\u57df\u4e2d,\u6bcf\u4e2a\u8282\u70b9\u53604\u4e2a\u5b57\u8282:\u524d\u4e24\u4e2a\u5b57\u8282\u5b58\u653e\u7ed3\u70b9\u503c,\u540e\u4e24\u4e2a\u5b57\u8282", "\n\u4f9d", "\n\u6b21\u653e\u5de6\u6307\u9488\u3001\u53f3\u6307\u9488.", "\n\u82e5\u8be5\u67e5\u627e\u4e8c\u53c9\u6811\u7684\u6839\u7ed3\u70b9\u4e3aE,\u5219\u5b83\u7684\u4e00\u79cd\u53ef\u80fd\u7684\u524d\u5e8f\u904d\u5386\u4e3a____ ,\u76f8\u5e94\u7684\u5c42\u6b21\u904d\u5386\u4e3a___", "\n_", "\n.", "\n\u5728\u4ee5\u4e0a\u4e24\u79cd\u904d\u5386\u60c5\u51b5\u4e0b,\u7ed3\u70b9C\u7684\u5de6\u6307\u9488LC\u7684\u5b58\u653e\u5730\u5740\u4e3a_____ ,LC\u7684\u5185\u5bb9\u4e3a______ \u7ed3\u70b9A", "\n\u7684", "\n\u5de6\u6307\u9488RA\u7684\u5185\u5bb9\u4e3a_______.", "\n\u4f9b\u9009\u62e9\u7684\u7b54\u6848", "\n(1) A. EAFCBD B.EFACDB C.EABCFD D.EACBDF", "\n(2) A. EAFCBD B.EFACDB C.EABCFD D.EACBDF", "\n(3) A.n+4 B.n+10 C.n+12 D.n+13", "\n(4) A.n+9 B.n+8 C.n+12 D.n+13", "\n(5) A.n+4 B.n+8 C.n+12 D.n+16", "2.\u865a\u5b58\u9875\u9762\u8c03\u6574\u7b97\u6cd5\u6709\u591a\u79cd,______ \u8c03\u5ea6\u7b97\u6cd5\u4e0d\u662f\u9875\u9762\u8c03\u5ea6\u7b97\u6cd5.", "\n\u4f9b\u9009\u62e9\u7684\u7b54\u6848", "\nA.\u540e\u8fdb\u5148\u51fa B.\u5148\u8fdb\u5148\u51fa C.\u6700\u8fd1\u6700\u5c11\u4f7f\u7528 D.\u968f\u673a\u9009\u62e9", "3.\u5728\u8f6f\u4ef6\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u5e38\u7528\u56fe\u4f5c\u4e3a\u63cf\u8ff0\u5de5\u5177.\u5982DFD\u5c31\u662f\u9762\u5411_______\u5206\u6790\u65b9\u6cd5\u7684\u63cf\u8ff0\u5de5\u5177.", "\n\u5728", "\n\u4e00\u5957\u5206\u5c42DFD\u4e2d,\u5982\u679c\u67d0\u4e00\u5f20\u56fe\u4e2d\u6709N\u4e2a\u52a0\u5de5(Process),\u5219\u8fd9\u5f20\u56fe\u5141\u8bb8\u6709_____ \u5f20\u5b50\u56fe.\u5728", "\n\u4e00", "\n\u5f20DFD\u56fe\u4e2d,\u4efb\u610f\u4e24\u4e2a\u52a0\u5de5\u4e4b\u95f4_____ .\u5728\u753b\u5206\u5c42DFD\u65f6,\u5e94\u4fdd\u6301_____ \u4e4b\u95f4\u7684\u5e73\u8861.DFD\u4e2d\u4ece", "\n\u7cfb", "\n\u7edf\u7684\u8f93\u51fa\u6d41\u5230\u7cfb\u7edf\u7684\u8f93\u51fa\u6d41\u7684\u4e00\u8fde\u4e32\u8fde\u7eed\u53d8\u6362\u5f62\u6210\u4e00\u79cd\u4fe1\u606f\u6d41,\u8fd9\u79cd\u4fe1\u606f\u53ef\u5206\u4e3a_____\u4e24", "\n\u7c7b", "\n.", "\nA.(1)\u6570\u636e\u7ed3\u6784 (2)\u6570\u636e\u6d41 (3)\u5bf9\u8c61 (4)\u6784\u4ef6", "\nB.(1)0 (2)1 (3)1-N (4)0-N", "\nC.(1)\u6709\u4e14\u4ec5\u6709\u4e00\u6761\u6570\u636e\u6d41", "\n(2)\u81f3\u5c11\u6709\u4e00\u6761\u6570\u636e\u6d41", "\n(3)\u53ef\u4ee5\u67090\u6761\u6216\u591a\u6761\u540d\u5b57\u4e92\u4e0d\u76f8\u540c\u7684\u6570\u636e\u6d41", "\n(4)\u53ef\u4ee5\u67090\u6216\u591a\u6761\u6570\u636e\u6d41,\u4f46\u5141\u8bb8\u5176\u4e2d\u5b58\u82e5\u5e72\u6761\u540d\u5b57\u76f8\u540c\u7684\u6570\u636e\u6d41.", "\nD.(1)\u7236\u56fe\u4e0e\u5176\u5b50\u56fe (2)\u540c\u4e00\u7236\u56fe\u7684\u6240\u6709\u5b50\u56fe (3)\u4e0d\u540c\u7236\u56fe\u7684\u6240\u6709\u5b50\u56fe (4)\u540c\u4e00\u5b50\u56fe\u7684", "\n\u6240\u6709\u76f4\u63a5\u7236\u56fe.", "\nE.(1)\u63a7\u5236\u6d41\u548c\u53d8\u6362\u6d41", "\n(2)\u53d8\u6362\u6d41\u548c\u4e8b\u52a1\u6d41", "\n(3)\u4e8b\u52a1\u6d41\u548c\u4e8b\u4ef6\u6d41", "\n(4)\u4e8b\u4ef6\u6d41\u548c\u63a7\u5236\u6d41", "4.\u7528\u4e8c\u8fdb\u5236\u52a0\u6cd5\u5668\u5bf9\u4e8c\u4e00\u5341\u8fdb\u5236\u7f16\u7801\u7684\u5341\u8fdb\u5236\u6570\u6c42\u548c,\u5f53\u548c\u7684\u672c\u4f4d\u5341\u8fdb\u5236\u6570\u4e8c\u4e00\u5341\u8fdb\u5236\u7f16", "\n\u7801", "\n\u5c0f\u4e8e\u7b49\u4e8e1001\u4e14\u5411\u9ad8\u4f4d\u65e0\u8fdb\u4f4d\u65f6,_____ ;\u5f53\u548c\u5c0f\u4e8e\u7b49\u4e8e1001\u4e14\u5411\u9ad8\u4f4d\u5b58\u8fdb\u4f4d\u65f6,_____;\u5f53", "\n\u548c", "\n\u5927\u4e8e1001\u65f6,_____", "\n(1)-(3) A:\u4e0d\u9700\u8fdb\u884c\u4fee\u6539", "\nB:\u9700\u8fdb\u884c\u52a06\u4fee\u6539", "\nC:\u9700\u8fdb\u884c\u51cf6\u4fee\u6539", "\nD:\u8fdb\u884c\u52a06\u6216\u51cf6\u4fee\u6539,\u9700\u8fdb\u4e00\u6b65\u5224\u522b.", "5.www\u9875\u9762\u8bbf\u95ee\u7684\u5927\u81f4\u8fc7\u7a0b\u5982\u4e0b:", "\n\u7528\u6237\u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165\u8981\u8bbf\u95ee\u7684WWW\u9875\u9762\u7684____\u5730\u5740(http://hostname/directory/file)", "\n\u6d4f", "\n\u89c8\u5668\u901a\u8fc7____ \u67e5\u8be2\u4e0a\u8ff0\u8f93\u5165\u4fe1\u606f\u6240\u6307\u7684WEB\u670d\u52a1\u5668\u7684IP\u5730\u5740;\u6d4f\u89c8\u5668\u901a\u8fc7\u7f51\u7edc\u4e0e\u8be5IP\u5730\u5740", "\n\u5904", "\n\u7684WEB\u670d\u52a1\u5668\u7684______\u670d\u52a1\u7aef\u4e4b\u95f4\u5efa\u7acb\u4e00\u6761______\u8fde\u63a5;\u6d4f\u89c8\u5668\u4f9d\u7167\u76f8\u5173\u534f\u8bae\u53d1\u9001_____\u547d", "\n\u4ee4", "\n;WEB\u670d\u52a1\u5668\u6839\u636e\u547d\u4ee4\u53d6\u51fa\u6587\u6863,\u53d1\u9001\u56de\u6765;\u6d4f\u89c8\u5668\u91ca\u653e\u8fde\u63a5,\u663e\u793a\u8be5\u6587\u6863.", "\n(1) A.URL B.EMS C.NDS D.DNS", "\n(2)A.NAT B.EMS C.NDS D.DNS", "\n(3)A.HTML B.HTTP C.SMTP D.SNMP", "\n(4)A.RTP B.IP C.TCP D.UDP", "\n(5)A.TCP B.GET C.UDP D.PUT", "6.\u5047\u8bbe\u67d0\u8ba1\u7b97\u673a\u5177\u67091MB\u7684\u5185\u5b58(\u76ee\u524d\u4f7f\u7528\u7684\u8ba1\u7b97\u673a\u5f80\u5f80\u5177\u670964MB\u4ee5\u4e0a\u5185\u5b58),\u5e76\u6309\u5b57\u8282\u7f16", "\n\u5740", "\n,\u4e3a\u4e86\u80fd\u5b58\u53d6\u8be5\u5185\u5b58\u5404\u5730\u5740\u7684\u5185\u5bb9,\u5176\u5730\u5740\u5bc4\u5b58\u5668\u81f3\u5c11\u9700\u8981\u4e8c\u8fdb\u5236____\u4f4d.\u4e3a\u4f7f4\u5b57\u8282\u7ec4\u6210", "\n\u7684", "\n\u5b57\u6bb5\u4ece\u5b58\u50a8\u5668\u4e2d\u4e00\u6b21\u8bfb\u51fa,\u8981\u6c42\u5b58\u653e\u5b58\u50a8\u5668\u4e2d\u7684\u5b57\u8fb9\u754c\u5bf9\u9f50,\u4e00\u4e2a\u5b57\u8282\u7684\u5730\u5740\u7801\u5e94_____\u82e5", "\n\u5b58", "\n\u50a8\u5668\u5468\u671f\u4e3a200ns,\u4e14\u6bcf\u4e2a\u5468\u671f\u53ef\u8bbf\u95ee4\u4e2a\u5b57\u8282,\u5219\u8be5\u5b58\u50a8\u5668\u5e26\u5bbd\u4e3a_____bit/s\u5047\u5982\u7a0b\u5e8f\u5458", "\n\u6240", "\n\u7528\u7684\u5730\u5740\u4e3a______,\u800c\u771f\u6b63\u8bbf\u95ee\u5185\u5b58\u7684\u5730\u5740\u79f0\u4e3a_______", "\nA.(1)10 (2)16 (3) 20 (4)32", "\nB.(1)\u6700\u4f4e\u4e24\u4f4d00 (2)\u6700\u4f4e\u4e24\u4f4d\u4e3a10 (3)\u6700\u9ad8\u4e24\u4f4d\u4e3a00 (4)\u6700\u9ad8\u4e24\u4f4d\u4e3a10", "\nC.(1)20M (2)40M (3)80M (4)160M", "\nD.(1)\u6709\u6548\u5730\u5740 (2)\u7a0b\u5e8f\u5730\u5740 (3)\u903b\u8f91\u5730\u5740 (4)\u7269\u7406\u5730\u5740", "\nE.(1)\u6307\u4ee4\u5730\u5740 (2)\u7269\u7406\u5730\u5740 (3)\u5185\u5b58\u5730\u5740 (4)\u6570\u636e\u5730\u5740", "7.\u82f1\u8bed\u9898", "\nSoon,more of the information we receive via the internet could come _____in", "\ndi", "\ngital wrappers.", "\nWrappers are made up ______ softwore code that\u2019s targeted to do specific", "\nthin", "\ngs with the data _____within them such as helping to define queries for", "\nsearch", "\nengines They also keep _____from_____access to that code.", "\n(1) A.Package B.packaged C.packages D.packaging", "\n(2)A.of B.off C.on D.out", "\n(3)A.close B.closed C.enclose D.enclosed", "\n(4)A.insiders B.money C.outsiders D.warehouse", "\n(5)A.gain B.gained C.gains D.gaining", "\u4e8c.\u8bbe\u8ba1\u9898", "\n1.\u5728VC\u4e2d\u600e\u6837\u83b7\u5f97\u7236\u7a97\u53e3\u7684\u6307\u9488(\u5199\u51fa\u4ee3\u7801)", "\n2.\u600e\u6837\u521b\u5efa\u4e00\u4e2a\u4e34\u65f6\u6587\u4ef6", "\n3.\u600e\u6837\u83b7\u5f97\u72b6\u6001\u680f\u548c\u5de5\u5177\u680f\u7684\u6307\u9488.", "\n4.\u8bbf\u95ee\u63a7\u4ef6\u5b58\u51e0\u79cd\u65b9\u6cd5", "\u4e09.\u586b\u7a7a\u9898:", "\n1.ODBC\u7684\u6570\u636e\u7c7b\u578b\u5206\u4e3a_________\u548c_________", "\n2.VC\u8bbf\u95ee\u6570\u636e\u5e93\u7684\u65b9\u5f0f____________________", "\n3.VC\u7684\u7ebf\u8def\u5206\u4e3a_________\u548c_________,\u5b83\u662f\u7528\u4ec0\u4e48\u5bf9\u8c61\u8868\u793a\u7684_________", "\n4.\u4e0b\u5217\u4e2da\u7684\u503c\u662f_________", "\n#define AAA 200", "\n#define BBB AAA+100", "\nint a= BBB*2", "\u8bd5\u9898\u4e00\uff1a\u57fa\u7840\u77e5\u8bc6", "\n1\u3001\u4ece\u4f9b\u9009\u62e9\u7684\u7b54\u6848\u4e2d\uff0c\u9009\u51fa\u5e94\u586b\u5165\u4e0b\u9762\u53d9\u8ff0\u4e2d_?_\u5185\u7684\u6700\u786e\u5207\u7684\u89e3\u7b54\uff0c\u628a\u76f8\u5e94\u7f16\u53f7\u5199\u5728", "\n\u7b54", "\n\u5377\u7684\u5bf9\u5e94\u680f\u5185\u3002", "\n\u5047\u8bbe\u67d0\u8ba1\u7b97\u673a\u5177\u67091M \u5b57\u8282\u7684\u5185\u5b58\uff08\u76ee\u524d\u4f7f\u7528\u7684\u8ba1\u7b97\u673a\u5f80\u5f80\u5177\u670964M\u5b57\u8282\u4ee5\u4e0a\u7684\u5185\u5b58\uff09\uff0c", "\n\u5e76", "\n\u6309\u5b57\u8282\u7f16\u5740\uff0c\u4e3a\u4e86\u80fd\u5b58\u53d6\u8be5\u5185\u5b58\u5404\u5730\u5740\u7684\u5185\u5bb9\uff0c\u5176\u5730\u5740\u5bc4\u5b58\u5668\u81f3\u5c11\u9700\u8981\u4e8c\u8fdb\u5236_A_\u4f4d\u3002\u4e3a", "\n\u4f7f", "\n4\u5b57\u8282\u7ec4\u6210\u7684\u5b57\u80fd\u4ece\u5b58\u50a8\u5668\u4e2d\u4e00\u6b21\u8bfb\u51fa\uff0c\u8981\u6c42\u5b58\u653e\u5728\u5b58\u50a8\u5668\u4e2d\u7684\u5b57\u8fb9\u754c\u5bf9\u9f50\uff0c\u4e00\u4e2a\u5b57\u7684\u5730", "\n\u5740", "\n\u7801\u5e94_B_\u3002\u82e5\u5b58\u50a8\u5468\u671f\u4e3a200NS\uff0c\u4e14\u6bcf\u4e2a\u5468\u671f\u53ef\u8bbf\u95ee4\u4e2a\u5b57\u8282\uff0c\u5219\u8be5\u5b58\u50a8\u5668\u5e26\u5bbd\u4e3a_C_BIT/S", "\n\u3002", "\n\u5047\u5982\u7a0b\u5e8f\u5458\u53ef\u7528\u7684\u5b58\u50a8\u7a7a\u95f4\u4e3a4M\u5b57\u8282\uff0c\u5219\u7a0b\u5e8f\u5458\u6240\u7528\u7684\u5730\u5740\u4e3a_D_\uff0c\u800c\u771f\u6b63\u8bbf\u95ee\u5185\u5b58\u7684\u5730", "\n\u5740", "\n\u79f0\u4e3a_E_\u3002", "\n\u4f9b\u9009\u62e9\u7684\u7b54\u6848\uff1a", "\nA\uff1a \u246010 \u246116 \u246220 \u246332", "\nB\uff1a \u2460\u6700\u4f4e\u4e24\u4f4d\u4e3a00 \u2461\u6700\u4f4e\u4e24\u4f4d\u4e3a10 \u2462\u6700\u9ad8\u4e24\u4f4d\u4e3a00 \u2463\u6700\u9ad8\u4e24\u4f4d\u4e3a10", "\nC\uff1a \u246020M \u246140M \u246280M \u2463160M", "\nD\uff1a \u2460\u6709\u6548\u5730\u5740 \u2461\u7a0b\u5e8f\u5730\u5740 \u2462\u903b\u8f91\u5730\u5740 \u2463\u7269\u7406\u5730\u5740", "\nE\uff1a \u2460\u6307\u4ee4 \u2461\u7269\u7406\u5730\u5740 \u2462\u5185\u5b58\u5730\u5740 \u2463\u6570\u636e\u5730\u5740", "2\u3001\u4ece\u4f9b\u9009\u62e9\u7684\u7b54\u6848\u4e2d\u3002\u9009\u51fa\u5e94\u586b\u5165\u4e0b\u9762\u53d9\u8ff0\u4e2d\uff3f?\uff3f\u5185\u7684\u6700\u786e\u5207\u7684\u89e3\u7b54\uff0c\u628a\u76f8\u5e94\u7f16\u53f7\u5199", "\n\u5728", "\n\u7b54\u5377\u7684\u5bf9\u5e94\u680f\u5185\u3002", "\n\u7ed9\u5b9a\u7ed3\u70b9\u7684\u5173\u952e\u5b57\u5e8f\u5217\uff08\uff26\u3001\uff22\u3001\uff2a\u3001\uff27\u3001\uff25\u3001\uff21\u3001\uff29\u3001\uff24\u3001\uff23\u3001\uff28\uff09\uff0c\u5bf9\u5b83\u6309\u5b57\u6bcd\u7684", "\n\u5b57", "\n\u5178\u987a\u5e8f\u8fdb\u884c\u6392\u5217\uff0c\u91c7\u7528\u4e0d\u540c\u65b9\u6cd5\uff0c\u5176\u6700\u7ec8\u7ed3\u679c\u76f8\u540c\u3002\u4f46\u4e2d\u95f4\u7ed3\u679c\u662f\u4e0d\u540c\u7684\u3002", "\nShell\u6392\u5e8f\u7684\u7b2c\u4e00\u8d9f\u626b\u63cf\uff08\u6b65\u957f\u4e3a\uff15\uff09\u7ed3\u679c\u5e94\u4e3a\uff3f\uff21\uff3f\u3002", "\n\u5192\u6ce1\u6392\u5e8f\uff08\u5927\u6570\u4e0b\u6c89\uff09\u7684\u7b2c\u4e00\u8d9f\u8d77\u6ce1\u7684\u6548\u679c\u662f\uff3fB\uff3f3\uff0e", "\n\u5feb\u901f\u6392\u5e8f\u7684\u7b2c\u4e00\u8d9f\u7ed3\u679c\u662f\uff3f\uff23\uff3f\u3002", "\n\u4e8c\u8def\u5f52\u5e76\u6392\u5e8f\u7684\u7b2c\u4e00\u8d9f\u7ed3\u5c40\u662f \uff3fD\uff3f\u3002", "\n\u4f9b\u9009\u62e9\u7684\u7b54\u6848", "\n\uff21\uff1a\u2460\uff08B\u3001F\u3001G\u3001J\u3001A\u3001D\u3001I\u3001E\u3001H\u3001C\uff09", "\n\u2461\uff08B\u3001F\u3001G\u3001J\u3001A\u3001E\u3001D\u3001I\u3001C\u3001H\uff09", "\n\u2462\uff08A\u3001B\u3001D\u3001C\u3001E\u3001F\u3001I\u3001J\u3001G\u3001H\uff09", "\n\u2463\uff08C\u3001B\u3001D\u3001A\u3001E\u3001F\u3001I\u3001G\u3001J\u3001H\uff09", "\n\uff22\uff1a\u2460\uff08A\u3001B\u3001D\u3001C\u3001F\u3001E\u3001I\u3001J\u3001H\u3001G\uff09", "\n\u2461\uff08A\u3001B\u3001D\u3001C\u3001E\u3001F\u3001I\u3001H\u3001G\u3001J\uff09", "\n\u2462\uff08B\u3001F\u3001G\u3001E\u3001A\u3001I\u3001D\u3001C\u3001H\u3001J\uff09", "\n\u2463\uff08B\u3001F\u3001G\u3001J\u3001A\u3001E\u3001D\u3001I\u3001C\u3001H\uff09", "\n\uff23\uff1a\u2460\uff08C\u3001B\u3001D\u3001A\u3001F\u3001E\u3001I\u3001J\u3001G\u3001H\uff09", "\n\u2461\uff08C\u3001B\u3001D\u3001A\u3001E\u3001F\u3001I\u3001G\u3001J\u3001H\uff09", "\n\u2462\uff08B\u3001A\u3001D\u3001E\u3001F\u3001G\u3001I\u3001J\u3001H\u3001C\uff09", "\n\u2463\uff08B\u3001C\u3001D\u3001A\u3001E\u3001F\u3001I\u3001J\u3001G\u3001H\uff09", "\n\uff24\uff1a\u2460\uff08B\u3001F\u3001G\u3001J\u3001A\u3001E\u3001D\u3001I\u3001G\u3001H\uff09", "\n\u2461\uff08B\u3001A\u3001D\u3001E\u3001F\u3001G\u3001I\u3001J\u3001H\u3001C\uff09", "\n\u2462\uff08A\u3001B\u3001D\u3001C\u3001E\u3001F\u3001I\u3001J\u3001G\u3001H\uff09", "\n\u2463\uff08A\u3001B\u3001D\u3001C\u3001F\u3001E\u3001J\u3001I\u3001H\u3001C\uff09", "3\u3001\u4ece\u4f9b\u9009\u62e9\u7684\u7b54\u6848\u4e2d\uff0c\u9009\u51fa\u5e94\u586b\u5165\u4e0b\u9762\u53d9\u8ff0\u4e2d\uff3f\uff1f\uff3f\u5185\u7684\u6700\u786e\u5207\u7684\u89e3\u7b54\uff0e\u628a\u76f8\u5e94\u7f16\u53f7\u5199", "\n\u5728", "\n\u7b54\u5377\u7684\u5bf9\u5e94\u680f\u5185\u3002", "\n\u8fdb\u7a0b\u662f\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u4e00\u4e2a\u91cd\u8981\u6982\u5ff5\u3002\u8fdb\u7a0b\u662f\u4e00\u4e2a\u5177\u6709\u4e00\u5b9a\u72ec\u7acb\u529f\u80fd\u7684\u7a0b\u5e8f\u5728\u67d0\u4e2a\u6570\u636e\u96c6", "\n\u5408", "\n\u4e0a\u7684\u4e00\u6b21\uff3fA2\uff3f\u3002", "\n\u8fdb\u7a0b\u662f\u4e00\u4e2a\uff3fB3\uff3f\u7684\u6982\u5ff5\uff0c\u800c\u7a0b\u5e8f\u662f\u4e00\u4e2a\uff3fC3\uff3f\u7684\u6982\u5ff5\u3002", "\n\u8fdb\u7a0b\u7684\u6700\u57fa\u672c\u72b6\u6001\u6709\uff3fD4\uff3f\u3002\u5728\u4e00\u4e2a\u5355\u5904\u7406\u673a\u4e2d\uff0c\u82e5\u67096\u4e2a\u7528\u6237\u8fdb\u7a0b\uff0c\u5728\u975e\u7ba1\u6001\u7684\u67d0\u4e00\u65f6", "\n\u523b", "\n\uff0c\u5904\u4e8e\u5c31\u7eea\u72b6\u6001\u7684\u7528\u6237\u8fdb\u7a0b\u6700\u591a\u6709\uff3fE5\uff3f\u4e2a\u3002", "\n\u4f9b\u9009\u62e9\u7684\u7b54\u6848", "\nA\uff1a\u2460\u5355\u72ec\u64cd\u4f5c \u2461\u5173\u8054\u64cd\u4f5c \u2462\u8fd0\u884c\u6d3b\u52a8 \u2463\u5e76\u53d1\u6d3b\u52a8", "\nB\uff1a\u2460\u9759\u6001 \u2461\u52a8\u6001 \u2462\u903b\u8f91 \u2463\u7269\u7406", "\nC\uff1a\u2460\u7269\u7406 \u2461\u903b\u8f91 \u2462\u52a8\u6001 \u2463\u9759\u6001", "\nD\uff1a\u2460\u5c31\u7eea\u3001\u8fd0\u884c\u3001\u9690\u853d \u2461\u505c\u6b62\u3001\u5c31\u7eea\u3001\u8fd0\u884c", "\n\u2462\u8fd0\u884c\u3001\u5c31\u7eea\u3001\u963b\u585e \u2463\u5c31\u7eea\u3001\u64a4\u6d88\u3001\u8fd0\u884c", "\nE\uff1a\u24605 \u24616 \u24621 \u24634", "4\u3001\u8f6f\u4ef6\u8bbe\u8ba1\u4e2d\u5212\u5206\u6a21\u5757\u7684\u4e00\u4e2a\u51c6\u5219\u662f\uff3fA2\uff3f\u3002\u4e24\u4e2a\u6a21\u5757\u4e4b\u95f4\u7684\u8026\u5408\u65b9\u5f0f\u4e2d\uff0c\uff3f\uff223\uff3f\u8026", "\n\u5408", "\n\u7684\u8026\u5408\u5ea6\u6700\u9ad8\uff0c\uff3f\uff234\uff3f\u8026\u5408\u7684\u8026\u5408\u5ea6\u6700\u4f4e\u3002\u4e00\u4e2a\u6a21\u5757\u5185\u90e8\u7684\u5185\u805a\u79cd\u7c7b\u4e2d\uff3f\uff244\uff3f\u5185\u805a\u7684", "\n\u5185", "\n\u805a\u5ea6\u6700\u9ad8\uff0c\uff3fE1\uff3f\u5185\u805a\u7684\u5185\u805a\u5ea6\u6700\u4f4e\u3002", "\n\u4f9b\u9009\u62e9\u7684\u7b54\u6848", "\nA\uff1a\u2460\u4f4e\u5185\u805a\u4f4e\u8026\u5408\u2461\u4f4e\u5185\u805a\u9ad8\u8026\u5408\u2462\u9ad8\u5185\u805a\u4f4e\u8026\u5408\u2463\u9ad8\u5185\u805a\u9ad8\u8026\u5408", "\nB\uff1a\u2460\u6570\u636e \u2461\u975e\u76f4\u63a5 \u2462\u63a7\u5236 \u2463\u5185\u5bb9", "\nC\uff1a\u2460\u6570\u636e \u2461\u975e\u76f4\u63a5 \u2462\u63a7\u5236 \u2463\u5185\u5bb9", "\nD\uff1a\u2460\u5076\u7136 \u2461\u903b\u8f91 \u2462\u529f\u80fd \u2463\u8fc7\u7a0b", "\nE\uff1a\u2460\u5076\u7136 \u2461\u903b\u8f91 \u2462\u529f\u80fd \u2463\u8fc7\u7a0b", "5\u3001\u4ece\u4f9b\u9009\u62e9\u7684\u7b54\u6848\u4e2d\u9009\u51fa\u5e94\u586b\u5165\u4e0b\u9762\u53d9\u8ff0\u4e2d\uff3f\uff1f\uff3f\u5185\u7684\u6700\u786e\u5207\u7684\u89e3\u7b54\uff0c\u628a\u76f8\u5e94\u7f16\u53f7\u5199\u5728", "\n\u7b54", "\n\u5377\u7684\u5bf9\u5e94\u680f\u5185\u3002", "\n\u6700\u5e38\u7528\u7684\u4e00\u79cd\u57fa\u672c\u6570\u636e\u6a21\u578b\u662f\u5173\u7cfb\u6570\u636e\u6a21\u578b\uff0c\u5b83\u7528\u7edf\u4e00\u7684\uff3fA 1\uff3f\u7ed3\u6784\u6765\u8868\u793a\u5b9e\u4f53\u53ca\u5b9e\u4f53", "\n\u4e4b", "\n\u95f4\u7684\u8054\u7cfb\u3002\u5173\u7cfb\u6570\u636e\u5e93\u7684\u6570\u636e\u64cd\u4f5c\u8bed\u8a00\uff08\uff24\uff2d\uff2c\uff09\u4e3b\u8981\u5305\u62ec\uff3f\uff222\uff3f\u4e24\u7c7b\u64cd\u4f5c\u3002", "\n\u5173\u7cfb\u8fd0\u7b97\u4ee5\u5173\u7cfb\u4ee3\u6570\u4e3a\u7406\u8bba\u57fa\u7840\uff0c\u5173\u7cfb\u4ee3\u6570\u7684\u6700\u57fa\u672c\u64cd\u4f5c\u662f\u5e76\u3001\u5dee\u3001\u7b1b\u5361\u5c14\u79ef\u3001\uff3f\uff234\uff3f", "\n\u3002", "\n\u7528\uff32\u2223\u00d7\u2223\uff33 \u8868\u793a\u5173\u7cfb \uff32\u548c\u5173\u7cfb \uff33\u7684\uff3f\uff241\uff3f\u3002", "\n\u8bbe\u5173\u7cfb\uff32\u548c\u5173\u7cfb\uff33\u56fe\u793a\u5982\u4e0b\uff1a", "\n\uff32\uff1a A B C S: B C D T: A B C D", "\n\u5219\u5173\u7cfb\uff34\u662f\u5173\u7cfb\uff32\u548c\u5173\u7cfb\uff33\uff3fE \uff3f\u7684\u7ed3\u679c\u3002", "\n\u4f9b\u9009\u62e9\u7684\u7b54\u6848", "\nA\uff1a\u2460\u6811 \u2461\u7f51\u7edc \u2462\u56fe \u2463\u4e8c\u7ef4\u8868", "\nB\uff1a\u2460\u63d2\u5165\u548c\u5220\u9664 \u2461\u68c0\u7d22\u548c\u66f4\u65b0 \u2462\u67e5\u8be2\u548c\u7f16\u8f91 \u2463\u7edf\u8ba1\u548c\u4fee\u6539", "\nC\uff1a\u2460\u6295\u5f71\u3001\u8054\u63a5 \u2461\u8054\u63a5\u3001\u9009\u62e9 \u2462\u9009\u62e9\u3001\u6295\u5f71 \u2463\u4ea4\u3001\u9009\u62e9", "\nD\uff1a\u2460\u8054\u63a5 \u2461\u7b1b\u5361\u5c14\u79ef \u2462\u65e5\u8054\u63a5 \u2463\u81ea\u7136\u8054\u63a5", "\nE:\u2460\u81ea\u7136\u8054\u63a5 \u2461\u03b8\u8054\u63a5 \u2462\u7b1b\u5361\u5c14\u79ef \u2463\u5e76", "\u8bd5\u9898\u4e8c\uff1a\u7a0b\u5e8f\u8bbe\u8ba1", "\n1\u3001\u7528\u4f60\u6240\u719f\u6089\u7684\u4efb\u610f\u4e00\u79cd\u7a0b\u5e8f\u8bed\u8a00\uff0c\u7f16\u5199\u4e00\u4e2a\u5b8c\u6574\u7684\u8fc7\u7a0b\uff0c\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u63d2\u5165\u5230\u53e6\u4e00\u4e2a", "\n\u5b57", "\n\u7b26\u4e32\u7684\u67d0\u4e2a\u4f4d\u7f6e\u540e\u9762\uff08\u4f8b\u5982\uff1a\u5c06\u201cabc\u201d\u63d2\u5165\u5230\u201cabcdef\u201d\u7684\u7b2c\u4e09\u4e2a\u5b57\u7b26\u4f4d\u7f6e\u540e\u9762\uff0c\u7ed3\u679c", "\n\u4e3a", "\n\u201cabcabcdef\u201d\uff09\u3002\u7f16\u5199\u7a0b\u5e8f\u65f6\uff0c\u8bf7\u5728\u5fc5\u8981\u7684\u5730\u65b9\u52a0\u4ee5\u6ce8\u91ca(\u6ce8\uff1a\u4e0d\u80fd\u7528\u8be5\u7a0b\u5e8f\u8bed\u8a00\u7684\u5185", "\n\u7f6e", "\n\u51fd\u6570\u6216\u8fc7\u7a0b)\u3002", "2\u3001\u7528\u4f60\u6240\u719f\u6089\u7684\u4efb\u610f\u4e00\u79cd\u7a0b\u5e8f\u8bed\u8a00\uff0c\u7f16\u5199\u4e00\u4e2a\u5b8c\u6574\u7684\u8fc7\u7a0b\uff0c\u5b8c\u6210\u4ece\u4e00\u4e2a\u7ed9\u5b9a\u7684\u5b8c\u6574\u7684\u6587", "\n\u4ef6", "\n\u8def\u5f84\uff08\u5982\u201cC:\\My Documents\\Software Test 1.00.doc\u201d)\u4e2d\uff0c\u6790\u53d6\u6587\u4ef6\u540d\uff0c\u6269\u5c55\u540d\u548c\u6587", "\n\u4ef6", "\n\u6240\u5904\u76ee\u5f55\u7684\u529f\u80fd\uff0c\u7f16\u5199\u7a0b\u5e8f\u65f6\uff0c\u8bf7\u5728\u5fc5\u8981\u7684\u5730\u65b9\u52a0\u4ee5\u6ce8\u91ca(\u6ce8\uff1a\u4e0d\u80fd\u7528\u8be5\u7a0b\u5e8f\u8bed\u8a00\u7684\u5185\u7f6e", "\n\u51fd", "\n\u6570\u6216\u8fc7\u7a0b)\u3002", "\u4e5d", "\n\u7f16\u5199\u7c7bString \u7684\u6784\u9020\u51fd\u6570,\u6790\u6784\u51fd\u6570\u548c\u8d4b\u503c\u51fd\u6570", "\n\u5df2\u77e5\u7c7bString \u7684\u539f\u578b\u4e3a", "\nclass string", "\n{", "\npublic:", "\nstring(const char *str=null);//\u666e\u901a\u6784\u9020\u51fd\u6570", "\nstring(const string &other);//\u62f7\u8d1d\u6784\u9020\u51fd\u6570", "\n\u2014string(void);", "\nstring &operate=(const string &other);//\u8d4b\u503c\u51fd\u6570", "\nprivate:", "\nchar * m-data;//\u7528\u4e8e\u4fdd\u5b58\u5b57\u7b26\u4e32", "\n};", "\n\u8bf7\u7f16\u5199string \u7684\u4e0a\u8ff04\u4e2a\u51fd\u6570", "\n\u4e09. \u6709\u5173\u5185\u5b58\u7684\u601d\u8003\u9898", "\n1. void getmemory(char *p)", "\n{ p=(char*)mallol(100);", "\n}", "\nvoid test(void)", "\n{", "\nchar * str =null;", "\ngetmemory(str);", "\nstrcpy(str,\u201dhello,world\u201d);", "\nprintf(str);", "\n}", "\n\u8bf7\u95ee\u8fd0\u884cTest\u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c", "\n2. char*getmemory(void)", "\n{ char p[]=\u201dhello world\u201d;", "\nreturn p;", "\n}", "\nvoid test(void)", "\n{", "\nchar *str=null;", "\nstr=Getmemory();", "\nprintf(str);", "\n} \u8bf7\u95ee\u8fd0\u884cTest \u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c.", "\u5341", "\nC++/C\u8bd5\u9898", "\n\u672c\u8bd5\u9898\u4ec5\u7528\u4e8e\u8003\u67e5C++/C\u7a0b\u5e8f\u5458\u7684\u57fa\u672c\u7f16\u7a0b\u6280\u80fd\u3002\u5185\u5bb9\u9650\u4e8eC++/C\u5e38\u7528\u8bed\u6cd5\uff0c\u4e0d\u6d89\u53ca\u6570\u636e", "\n\u7ed3", "\n\u6784\u3001\u7b97\u6cd5\u4ee5\u53ca\u6df1\u5965\u7684\u8bed\u6cd5\u3002\u8003\u8bd5\u6210\u7ee9\u80fd\u53cd\u6620\u51fa\u8003\u751f\u7684\u7f16\u7a0b\u8d28\u91cf\u4ee5\u53ca\u5bf9C++/C\u7684\u7406\u89e3\u7a0b\u5ea6\uff0c", "\n\u4f46", "\n\u4e0d\u80fd\u53cd\u6620\u8003\u751f\u7684\u667a\u529b\u548c\u8f6f\u4ef6\u5f00\u53d1\u80fd\u529b\u3002", "\n\u7b14\u8bd5\u65f6\u95f490\u5206\u949f\u3002\u8bf7\u8003\u751f\u8ba4\u771f\u7b54\u9898\uff0c\u5207\u52ff\u8f7b\u89c6\u3002", "\u4e00\u3001\u8bf7\u586b\u5199BOOL , float, \u6307\u9488\u53d8\u91cf \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\u3002\uff0810\u5206\uff09", "\n\u63d0\u793a\uff1a\u8fd9\u91cc\u201c\u96f6\u503c\u201d\u53ef\u4ee5\u662f0, 0.0 , FALSE\u6216\u8005\u201c\u7a7a\u6307\u9488\u201d\u3002\u4f8b\u5982 int \u53d8\u91cf n \u4e0e\u201c\u96f6", "\n\u503c", "\n\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\u4e3a\uff1a", "\nif ( n == 0 )", "\nif ( n != 0 )", "\n\u4ee5\u6b64\u7c7b\u63a8\u3002", "\u8bf7\u5199\u51fa BOOL flag \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\uff1a", "\n\u8bf7\u5199\u51fa float x \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\uff1a", "\n\u8bf7\u5199\u51fa char *p \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\uff1a", "\u4e8c\u3001\u4ee5\u4e0b\u4e3aWindows NT\u4e0b\u768432\u4f4dC++\u7a0b\u5e8f\uff0c\u8bf7\u8ba1\u7b97sizeof\u7684\u503c\uff0810\u5206\uff09", "char str[] = \u201cHello\u201d ; char *p = str ;int n = 10;\u8bf7\u8ba1\u7b97sizeof (str )", "\n= sizeof ( p ) = sizeof ( n ) = void Func (", "\nchar str[100]){\u8bf7\u8ba1\u7b97 sizeof( str ) = }", "\nvoid *p = malloc( 100 );\u8bf7\u8ba1\u7b97sizeof ( p ) =", "\u4e09\u3001\u7b80\u7b54\u9898\uff0825\u5206\uff09", "1\u3001\u5934\u6587\u4ef6\u4e2d\u7684 ifndef/define/endif \u5e72\u4ec0\u4e48\u7528\uff1f", "2\u3001#include \u548c #include \u201cfilename.h\u201d \u6709\u4ec0\u4e48\u533a\u522b\uff1f", "3\u3001const \u6709\u4ec0\u4e48\u7528\u9014\uff1f\uff08\u8bf7\u81f3\u5c11\u8bf4\u660e\u4e24\u79cd\uff09", "4\u3001\u5728C++ \u7a0b\u5e8f\u4e2d\u8c03\u7528\u88ab C\u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u7684\u51fd\u6570\uff0c\u4e3a\u4ec0\u4e48\u8981\u52a0 extern \u201cC\u201d\u58f0\u660e\uff1f", "5\u3001\u8bf7\u7b80\u8ff0\u4ee5\u4e0b\u4e24\u4e2afor\u5faa\u73af\u7684\u4f18\u7f3a\u70b9", "// \u7b2c\u4e00\u4e2afor (i=0; i ing();} // \u7b2c\u4e8c\u4e2aif (condition){for (i=0; i for (i=0;", "\ni \u4f18\u70b9\uff1a\u7f3a\u70b9\uff1a \u4f18\u70b9\uff1a\u7f3a\u70b9\uff1a", "\u56db\u3001\u6709\u5173\u5185\u5b58\u7684\u601d\u8003\u9898\uff0820\u5206\uff09", "void GetMemory(char *p){p = (char *)malloc(100);}void Test(void) {char *str", "\n=", "\nNULL;GetMemory(str); strcpy(str, \u201chello world\u201d);printf(str);}\u8bf7\u95ee\u8fd0\u884cTest\u51fd\u6570", "\n\u4f1a", "\n\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f\u7b54\uff1a char *GetMemory(void){ char p[] = \u201chello world\u201d;return", "\np;", "\n}void Test(void){char *str = NULL;str = GetMemory(); printf(str);}\u8bf7\u95ee\u8fd0\u884cTes", "\nt", "\n\u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f\u7b54\uff1a", "\nVoid GetMemory2(char **p, int num){*p = (char *)malloc(num);}void", "\nTest(void){c", "\nhar *str = NULL;GetMemory(&str, 100);strcpy(str, \u201chello\u201d); printf(str); }\u8bf7\u95ee", "\n\u8fd0", "\n\u884cTest\u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f\u7b54\uff1a void Test(void){char *str = (char *)", "\nmalloc(1", "\n00); strcpy(str, \u201chello\u201d); free(str); if(str != NULL) { strcpy(str, \u201c", "\nworld\u201d); printf(str);}}\u8bf7\u95ee\u8fd0\u884cTest\u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f\u7b54\uff1a", "\u4e94\u3001\u7f16\u5199strcpy\u51fd\u6570\uff0810\u5206\uff09", "\n\u5df2\u77e5strcpy\u51fd\u6570\u7684\u539f\u578b\u662f", "\nchar *strcpy(char *strDest, const char *strSrc);", "\n\u5176\u4e2dstrDest\u662f\u76ee\u7684\u5b57\u7b26\u4e32\uff0cstrSrc\u662f\u6e90\u5b57\u7b26\u4e32\u3002", "\uff081\uff09\u4e0d\u8c03\u7528C++/C\u7684\u5b57\u7b26\u4e32\u5e93\u51fd\u6570\uff0c\u8bf7\u7f16\u5199\u51fd\u6570 strcpy", "\uff082\uff09strcpy\u80fd\u628astrSrc\u7684\u5185\u5bb9\u590d\u5236\u5230strDest\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u8981char * \u7c7b\u578b\u7684\u8fd4\u56de\u503c\uff1f", "\u516d\u3001\u7f16\u5199\u7c7bString\u7684\u6784\u9020\u51fd\u6570\u3001\u6790\u6784\u51fd\u6570\u548c\u8d4b\u503c\u51fd\u6570\uff0825\u5206\uff09", "\n\u5df2\u77e5\u7c7bString\u7684\u539f\u578b\u4e3a\uff1a", "\nclass String", "\n{", "\npublic:", "\nString(const char *str = NULL); // \u666e\u901a\u6784\u9020\u51fd\u6570", "\nString(const String &other); // \u62f7\u8d1d\u6784\u9020\u51fd\u6570", "\n~ String(void); // \u6790\u6784\u51fd\u6570", "\nString & operate =(const String &other); // \u8d4b\u503c\u51fd\u6570", "\nprivate:", "\nchar *m_data; // \u7528\u4e8e\u4fdd\u5b58\u5b57\u7b26\u4e32", "\n};", "\n\u8bf7\u7f16\u5199String\u7684\u4e0a\u8ff04\u4e2a\u51fd\u6570\u3002", "\u76db\u5927\u6e38\u620f\u7b56\u5212\u7b14\u8bd5\u9898\u76ee\uff01", "1.\u6e38\u620f\u7b56\u5212\u7684\u5173\u952e\u8bcd", "\n2.\u6e38\u620f\u8fd0\u8425\u4e0e\u7814\u53d1\u4e4b\u95f4\u7684\u5173\u7cfb", "\n3.\u8bbe\u8ba1\u7b56\u5212\u6848\u76ee\u5f55\u4e00\u4e2a", "\n4.\u65b0\u7684\u8d62\u5229\u65b9\u5f0f\u300a\u9664\u70b9\u5361\u548c\u51fa\u5356\u6e38\u620f\u7269\u54c1\u4e24\u79cd\u4e4b\u5916\u300b", "\n5.\u6e38\u620f\u4eba\u7fa4\u7684\u7279\u5f81\u2014\u767d\u9886\u3002\u5973\u4eba\u3002\u5c0f\u5b69\u3002\u9aa8\u7070\u7ea7\u73a9\u5bb6", "\n6.1\uff09\u7ed9\u4e00\u4e2a\u65e7\u9b54\u6cd5\uff0c\u8bbe\u8ba1\u4e00\u4e2a\u65b0\u9b54\u6cd5\uff08\u5177\u4f53\u4e0d\u8bf4\u4e86\uff09", "\n2\uff09\u7ed9\u300a\u5766\u514b\u5927\u6218\u300b\u8bbe\u8ba1\u4e00\u4e2a\u5f00\u623f\u95f4\u7c7b\u7684\u7b56\u5212\u65b9\u6848", "\n3\uff09\u5730\u56fe\u7684\u4e0d\u5e73\u8861\uff0c\u9020\u6210\u6cd5\u5e08\u5347\u7ea7\u901f\u5ea6\u5feb\uff0c\u7b56\u5212\u8bbe\u8ba1\u4e00\u4e2a\u65b0\u5730\u56fe\uff0c\u4f7f\u6218\u58eb\u7684\u5347\u7ea7\u901f\u5ea6\u52a0", "\n\u5feb\uff01", "\n\u5341\u4e00", "\n\u4e00. int a[2][3]={1,2,3,4,5};", "\n\u95ee\uff1aa[1][2]=?", "\n\u4e8c\u3002char *p=\u201dhello\u201d;", "\nprintf(\u201c%s\u201d,p);", "\np++;", "\nprintf(\u201c%s\u201d,p);", "\nprintf(\u201c%c\u201d,*p);", "\u5341\u4e8c", "\n1\uff0e\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7684\u5dee\u522b\u3002", "2\uff0eHeap\u4e0estack\u7684\u5dee\u522b\u3002", "3\uff0eWindows\u4e0b\u7684\u5185\u5b58\u662f\u5982\u4f55\u7ba1\u7406\u7684\uff1f", "4\uff0e\u4ecb\u7ecd.Net\u548c.Net\u7684\u5b89\u5168\u6027\u3002", "5\uff0e\u5ba2\u6237\u7aef\u5982\u4f55\u8bbf\u95ee.Net\u7ec4\u4ef6\u5b9e\u73b0Web Service\uff1f", "6\uff0eC/C++\u7f16\u8bd1\u5668\u4e2d\u865a\u8868\u662f\u5982\u4f55\u5b8c\u6210\u7684\uff1f", "7\uff0e\u8c08\u8c08COM\u7684\u7ebf\u7a0b\u6a21\u578b\u3002\u7136\u540e\u8ba8\u8bba\u8fdb\u7a0b\u5185/\u5916\u7ec4\u4ef6\u7684\u5dee\u522b\u3002", "8\uff0e\u8c08\u8c08IA32\u4e0b\u7684\u5206\u9875\u673a\u5236\u3002", "9\uff0e\u7ed9\u4e24\u4e2a\u53d8\u91cf\uff0c\u5982\u4f55\u627e\u51fa\u4e00\u4e2a\u5e26\u73af\u5355\u94fe\u8868\u4e2d\u662f\u4ec0\u4e48\u5730\u65b9\u51fa\u73b0\u73af\u7684\uff1f", "10\uff0e\u5728IA32\u4e2d\u4e00\u5171\u6709\u591a\u5c11\u79cd\u529e\u6cd5\u4ece\u7528\u6237\u6001\u8df3\u5230\u5185\u6838\u6001\uff1f", "11\uff0e\u5982\u679c\u53ea\u60f3\u8ba9\u7a0b\u5e8f\u6709\u4e00\u4e2a\u5b9e\u4f8b\u8fd0\u884c\uff0c\u4e0d\u80fd\u8fd0\u884c\u4e24\u4e2a\u3002\u50cfwinamp\u4e00\u6837\uff0c\u53ea\u80fd\u5f00\u4e00\u4e2a\u7a97\u53e3", "\n\uff0c\u600e\u6837\u5b9e\u73b0\uff1f", "12\uff0e\u5982\u4f55\u622a\u53d6\u952e\u76d8\u7684\u54cd\u5e94\uff0c\u8ba9\u6240\u6709\u7684\u2018a\u2019\u53d8\u6210\u2018b\u2019\uff1f", "13\uff0eApartment\u5728COM\u4e2d\u6709\u4ec0\u4e48\u7528\uff1f\u4e3a\u4ec0\u4e48\u8981\u5f15\u5165\uff1f", "14\uff0e\u5b58\u50a8\u8fc7\u7a0b\u662f\u4ec0\u4e48\uff1f\u6709\u4ec0\u4e48\u7528\uff1f\u6709\u4ec0\u4e48\u4f18\u70b9\uff1f", "15\uff0eTemplate\u6709\u4ec0\u4e48\u7279\u70b9\uff1f\u4ec0\u4e48\u65f6\u5019\u7528\uff1f", "16\uff0e\u8c08\u8c08Windows DNA\u7ed3\u6784\u7684\u7279\u70b9\u548c\u4f18\u70b9", "\n\u5341\u4e09", "\n1\uff0e1000\uff01\u6709\u51e0\u4f4d\u6570\uff0c\u4e3a\u4ec0\u4e48\uff1f", "2\uff0eF\uff08n\uff09=1 n>8 n<12", "F\uff08n\uff09=2 n<2", "F\uff08n\uff09=3 n=6", "F\uff08n\uff09=4 n=other", "\u4f7f\u7528+ \u2013 * /\u548csign\uff08n\uff09\u51fd\u6570\u7ec4\u5408\u51faF\uff08n\uff09\u51fd\u6570", "sign\uff08n\uff09=0 n=0", "sign\uff08n\uff09=-1 n<0", "sign\uff08n\uff09=1 n>0", "3\uff0e\u7f16\u4e00\u4e2a\u7a0b\u5e8f\u6c42\u8d28\u6570\u7684\u548c\uff0c\u4f8b\u5982F\uff087\uff09=1+3+5+7+11+13 +17=57\u3002"], "title": "\u5e7f\u5dde\u4e00\u5bb6\u516c\u53f8\u7684\u7b14\u8bd5\u9898C++"},
{"contents": ["1\u3001x86,win32,vc++6,\u9ed8\u8ba4\u5c5e\u6027\u7684\u63a7\u5236\u53f0\u5de5\u7a0b\uff1a", "\nclass C1", "\n{", "\npublic:", "\nvirtual int sum(int i1, int i2)", "\n{", "\nreturn (i1 + i2);", "\n}", "private:", "\ndouble m_var1;", "\nchar\u00a0\u00a0 m_var2;", "\n};", "char sz[] = \u201cabcd\u201d;", "\n\u95ee\u9898\uff1asizeof(C1) = ?", "\nsizeof(sz) = ?", "2\u3001C++\u4e2d\u7684\u865a\u7ee7\u627f\u662f\u89e3\u51b3\u4ec0\u4e48\u95ee\u9898\u7684\uff1f\u8bf7\u4e3e\u4f8b\u8bf4\u660e\u3002", "3\u3001\u8bf7\u5199\u51fa\u4e0b\u9762\u7684\u8f93\u51fa\uff1a", "\nclass B", "\n{", "\npublic:", "\nvirtual void Print(void)", "\n{", "\nprintf(\u201cB::Print\\n\u201d);", "\n}", "\nvirtual void Reprint(void)", "\n{", "\nprintf(\u201cB:Reprint\\n\u201d);", "\n}", "\nvoid Algo(void)", "\n{", "\nPrint();", "\nReprint();", "\n}", "\n};", "\nclass D : public B", "\n{", "\npublic:", "\nvirtual void Print(void)", "\n{", "\nprintf(\u201cD::Print\\n\u201d);", "\n}", "\n};", "void main()", "\n{", "\nB *p = new D();", "\np->Print();", "\np->Algo();", "\n}", "4\u3001\u8bf7\u6307\u51fa\u4e0b\u9762\u7a0b\u5e8f\u4e2d\u4e0d\u5408\u7406\u7684\u5730\u65b9\u3002", "\nClass A", "\n{", "\npublic:", "\nA(void) : m_nVar2(m_nVar1), m_nVar1(0), m_cVar3(0)", "\n{", "\nm_cVar3 =3;", "\n}", "protected:", "\nint\u00a0\u00a0\u00a0 m_nVar1;", "\nint\u00a0\u00a0\u00a0 m_nVar2;", "\nconst int m_cVar3;", "\n};", "5\u3001\u5728WIN32\u5e73\u53f0\u4e0b\uff0c\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u53e5\u67c4\u7684\u5f15\u7528\u8ba1\u6570\u7684\u521d\u59cb\u503c\u662f\u591a\u5c11\uff1f\u5176\u53e5\u67c4\u662f\u5426\u4e3a\u53ef\u7b49\u5f85\u5bf9\u8c61\uff1f\u5185\u6838\u5bf9\u8c61\u548c\u7528\u6237\u5bf9\u8c61\u7684\u663e\u8457\u533a\u522b\u662f\u4ec0\u4e48\uff1f", "6\u3001WaitForSingleObject\u7684\u8d85\u65f6\u53c2\u6570\u4e3a0\u662f\u4f55\u542b\u610f\uff1fSleep\u7684\u8d85\u65f6\u53c2\u6570\u4e3a0\u53c8\u662f\u4f55\u542b\u610f\uff1f", "7\u3001\u8bf7\u5217\u4e3e\u60a8\u5bf9\u8bbe\u8ba1\u6a21\u5f0f\u7684\u7406\u89e3\uff1f\u5e76\u7528\u81ea\u7136\u8bed\u8a00\u4e3e\u4f8b\u8bf4\u660e\u5176\u4e2d\u4e00\u4e2a\u4f8b\u5b50\uff0c\u53e6\u5916\u8bf7\u4f7f\u7528C++\u5199\u51fa\u4e00\u4e2aSingleton\u7684\u4f8b\u5b50\u3002", "8\u3001TCP\u5efa\u7acb\u9700\u8981\u8fdb\u884c\u4e86\u51e0\u6b21\u63e1\u624b\uff1f\u6b63\u5e38\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u7684\u634e\u5e26\u786e\u8ba4\u662f\u4ec0\u4e48\u542b\u610f\uff1fTCP\u7684\u53d1\u9001\u7a97\u53e3\u3001\u62e5\u585e\u7a97\u53e3\u4e0e\u63a5\u53d7\u7a97\u53e3\u7684\u610f\u4e49\u4f55\u5728\uff1f\u4e3a\u4ec0\u4e48UDP\u6ca1\u6709\u8fd9\u4e9b\u611f\u5ff5\u548c\u673a\u5236\uff1f\u97f3\u89c6\u9891\u7b49\u5b9e\u65f6\u6027\u8981\u6c42\u6bd4\u8f83\u9ad8\u7684\u6570\u636e\u5e94\u8be5\u7528\u54ea\u79cd\u4f20\u8f93\u534f\u8bae\u4f5c\u627f\u8f7d\uff1f\u4f60\u90fd\u8003\u8651\u4e86\u54ea\u4e9b\u65b9\u9762\uff1f", "9\u3001\u5982\u679c\u5f80\u4e00\u4e2a\u7bb1\u5b50\u91cc\u503e\u5012\u6c99\u5b50\uff0c\u6bcf\u4e00\u79d2\u949f\u5f80\u7bb1\u5b50\u4e2d\u6ce8\u5165\u7684\u662f\u524d\u9762\u503e\u6ce8\u7684\u603b\u548c\uff0c\u572810\u79d2\u949f\u65f6\u6070\u597d\u5c06\u7bb1\u5b50\u586b\u6ee1\uff0c\u8bf7\u95ee\u7b2c7\u79d2\u949f\u65f6\u6ce8\u5165\u7684\u6c99\u5b50\u662f\u7bb1\u5b50\u5bb9\u91cf\u7684\u591a\u5c11\uff1f", "10\u3001\u8bf7\u968f\u610f\u5217\u4e3e\u60a8\u66fe\u7ecf\u8bfb\u8fc7\u7684\u8ba4\u4e3a\u6bd4\u8f83\u4f18\u79c0\u7684\u4e66\u7c4d\uff08\u8ba1\u7b97\u673a\u7f16\u7a0b\u3001\u8f6f\u4ef6\u8fc7\u7a0b\u3001\u7ba1\u7406\u3001\u52b1\u5fd7\u4e0d\u9650\uff09\u3002"], "title": "\u5317\u4eac\u4e00\u5bb6\u516c\u53f8\u7684C++\u7b14\u8bd5\u9898"},
{"contents": ["1.MFC\u4e2d\u6700\u4e3b\u8981\u6839\u57fa\u7c7b\uff08\uff09\uff0c\u7a97\u53e3\u7c7b\u7684\u57fa\u7c7b\uff08\uff09", "\n2.\u57fa\u4e8eMFC\u7684WIN32\u53ef\u6267\u884c\u5e94\u7528\u7a0b\u5e8f\uff0c\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u4ece\uff08\uff09\u7c7b\u6d3e\u751f\u7684\u7c7b\u7684\u5bf9\u8c61\u3002", "\n3.\u6240\u6709COM\u7ec4\u4ef6\u90fd\u5fc5\u987b\u5b9e\u73b0\u7684\u4e00\u4e2a\u63a5\u53e3\u662f\uff1a", "\n4.\u4e00\u4e2aCOM\u7ec4\u4ef6\uff0c\u5982\u679c\u8981\u652f\u6301\u81ea\u52a8\u5316\uff0c\u5fc5\u987b\u5b9e\u73b0\u7684\u63a5\u53e3\u3002", "\n5.MFC\u4e2d\u7684\u7c7b\uff0c\u4ece\uff08\uff09\u7c7b\u6d3e\u751f\u7684\u7c7b\u90fd\u53ef\u4ee5\u6709\u6d88\u606f\u6620\u5c04\uff0c\u8bf7\u5217\u4e3e\u4e00\u4e2a\uff08\u6216\u591a\u4e2a\uff09\u53ea\u80fd\u6536\u5230WM_COMMAND\u6d88\u606f\u7684\u7c7b\uff1a\uff08\uff09\u3002", "\n6.\u5728\u591a\u7ebf\u7a0b\u5e94\u7528\u4e2d\uff0c\u4e3a\u4f7f\u7ebf\u7a0b\u95f4\u7684\u67d0\u4e9b\u64cd\u4f5c\u540c\u6b65\uff0c\u4e00\u822c\u4f7f\u7528____\u540c\u6b65\u5bf9\u8c61\u3002\u8bf7\u5217\u4e3e\u5728\u5e94\u7528\u6b64\u5bf9\u8c61\u65f6\u8981\u7528\u7684API\u51fd\u6570\uff08\uff09\u3002", "\n7.STL\u6709\u54ea\u4e9b\u6478\u677f\u7c7b\uff08\uff09", "\n8.\u4f7f\u7528Windows API\u8bbe\u7f6e\u4e00\u4e2a\u7a97\u53e3\u7684\u6587\u672c\uff0c\u662f\u54ea\u4e00\u4e2aAPI\u51fd\u6570\uff08\uff09\u3002", "\n9.\u7ebf\u7a0b\u6709\u54ea\u4e9b\u7c7b\u578b\uff0c\u5982\u4f55\u521b\u5efa\uff1f\u5982\u4f55\u7ec8\u6b62\uff1f", "\n10.\u5982\u4f55\u5b9a\u4e49\u4e00\u4e2a\u81ea\u5b9a\u4e49\u6d88\u606f\uff0c\u5e76\u5728\u7a0b\u5e8f\u4e2d\u54cd\u5e94\u5b83\uff1f", "\n11.\u4ece\u4e00\u4e2aDLL\u4e2d\u5bfc\u51fa\u51fd\u6570\u7684\u65b9\u6cd5\u6709\u54ea\u51e0\u79cd\uff1f", "\n12.\u6709\u7ec4\u4ef6A\uff0c\u5b83\u7684\u5934\u6587\u4ef6\u5305\u62ec\u5982\u4e0b\u5185\u5bb9\uff1a", "\nDEFINE_GUID(DIID_IENoteBook, 0x5D32DE27, 0x1A02,0x49AC,0xAF,0x2B,0x9A,0\u00d718,0\u00d795,0x5D, 0xCB,0\u00d745);", "\nDEFINE_GUID(CLSID_Document, 0xCC6D602E, 0xE64D, 0x42B9, 0xA6, 0\u00d754,0\u00d757, 0\u00d790,0\u00d769, 0xD1, 0\u00d744, 0xAC);", "\nIENoteBook:public IDispatch", "\n{", "\n//\u5176\u5b83\u7565", "\nvirtual HRESULT STDMETHOD(ALLTYPE AddHtmlPage())=0;", "\n}", "\n\u8bf7\u6839\u636e\u4ee5\u4e0a\u7684\u63a5\u53e3\u58f0\u660e\uff0c\u5199\u4e00\u6bb5\u4ee3\u7801\uff0c\u5f97\u5230\u4e00\u4e2aIENoteBook\u7684\u63a5\u53e3\uff0c \u518d\u8c03\u7528\u4ed6\u7684\u65b9\u6cd5AddHtmlPage(),\u7136\u540e\u518d\u91ca\u653e\u6b64\u63a5\u53e3\u3002", "13.\u5982\u679c\u4f7f\u7528WinSock\u63a5\u53e3\u6765\u7f16\u5199\u7f51\u7edc\u5e94\u7528\u7a0b\u5e8f\uff0c\u8bf7\u5206\u522b\u5199\u51fa\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u7684\u7a0b\u5e8f\u6d41\u7a0b\uff08\u4ee5\u8c03\u7528\u54ea\u4e9b\u501f\u53e3\u51fd\u6570\u8868\u793a\uff09\u3002"], "title": "\u5e7f\u5dde\u8fd0\u901a\u7684C++\u7b14\u8bd5\u9898"},
{"contents": ["1\u3001\u8bf7\u8bf4\u660e\u00a0 strcoyp()\u51fd\u6570\u548cmemcopy()\u51fd\u6570\u7684\u533a\u522b", "2\u3001\u5185\u90e8\u9759\u6001\u6574\u5f62\u53d8\u91cf\uff0c\u6574\u5f62\u81ea\u52a8\u53d8\u91cf\uff0c\u6574\u5f62\u5b58\u50a8\u5668\u9ed8\u8ba4\u521d\u59cb\u503c\u5404\u662f\u4ec0\u4e48\uff1f", "3\u3001\u4f7f\u7528\u5185\u8054\u51fd\u6570\u5e94\u8be5\u6ce8\u610f\u4ec0\u4e48\uff1f", "4\u3001\u4ec0\u4e48\u662f\u62bd\u8c61\u7c7b\uff0c\u4ec0\u4e48\u65f6\u5019\u7528\u5230\uff1f", "5\u3001C++\u4e2d\u7ee7\u627f\u5206\u51e0\u7c7b\uff0c\u7ee7\u627f\u65b9\u5f0f\u6709\u54ea\u51e0\u79cd\uff1f", "6\u3001\u4ec0\u4e48\u662f\u5308\u7259\u5229\u8868\u793a\u6cd5\uff1f", "7\u3001\u7528MFC TRACE\u5b8f\u7f16\u5199\u4e00\u4e2a\u8c03\u8bd5\u6848\u5b50", "8\u3001VC++ \u7f16\u8bd1\u5668 warning level \u6709\u51e0\u4e2a\u7ea7\u522b\uff1f", "9\u3001\u5199\u51faVC++6\u30020\u7cfb\u7edf\u4e0b\u7684\u9ed8\u8ba4\u5feb\u6377\u952e\uff08\u4e0d\u5c11\u4e8e\u5341\u4e00\u4e2a\uff09", "10\u3001\u63cf\u8ff0TCP/IP\u534f\u8bae\u7684\u5c42\u6b21\u7ed3\u6784", "11\u3001\u7b80\u8ff0 Windows NT \u4e0b\u7684\u591a\u8fdb\u7a0b\uff0c\u591a\u7ebf\u7a0b\u7684\u6982\u5ff5", "12\u3001\u5b50\u8fdb\u7a0b\u53ef\u4ee5\u7ee7\u627f\u7236\u8fdb\u7a0b\u7684\u8d44\u6e90\u6709\u54ea\u4e9b\uff1f", "13\u3001\u5b50\u8fdb\u7a0b\u53ef\u4ee5\u7ee7\u627f\u7236\u8fdb\u7a0b\u8d44\u6e90\u7684\u524d\u63d0\u6761\u4ef6\u662f\u4ec0\u4e48\uff1f", "14\u3001Windows NT \u4e0b\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u8baf\u5f62\u5f0f\u6709\u54ea\u4e9b\uff1f", "15\u3001\u73b0\u6709\u4e00\u4e2a\u4ece\u4e32\u53e3\u8bfb\u53d6\u5355\u4e2aASCIII\u5b57\u7b26\u51fd\u6570 getchar(),\u8bf7\u7f16\u5199\u4e00\u4e2a\u4ece\u4e32\u53e3\u8bfb\u53d6\u5b57\u7b26\u4e32\u7684\u51fd\u6570", "16\u3001\u7b80\u8ff0\u4e00\u4e0b\u7011\u5e03\u6a21\u578b\u4e0b\u7684\u8f6f\u4ef6\u5f00\u53d1\u7684\u57fa\u672c\u6d41\u7a0b"], "title": "\u5e7f\u5dde\u5fa1\u94f6\u79d1\u6280\u80a1\u4efd\u6709\u9650\u516c\u53f8\u8bd5\u5377\uff08C++\uff09"},
{"contents": ["\u8bd5\u9898\u4e00\uff1a", "\u6d4b\u8bd5\u5185\u5bb9\uff1a", "1\u3001\u7528MapInfo Professional\u65b0\u5efa\u4e00\u4e2a\u5305\u542b\u81f3\u5c112\u4e2a\u5b57\u6bb5\u7684\u56fe\u5c42\u6587\u4ef6", "A.tab\uff1b\uff085\uff09", "2\u3001\u7528MapInfo Professional\u5728A.tab\u4e2d\u6dfb\u52a0\u4e24\u4e2a\u6298\u7ebf\u5bf9\u8c61Line1", "\u548cLine2\uff0c\u8981\u6c42\u8fd9\u4e24\u4e2a\u5bf9\u8c61\u7684\u8282\u70b9\u6570\u90fd\u4e0d\u5c11\u4e8e5\u4e2a\uff0cLine1\u548cLine2\u5fc5", "\u987b\u76f8\u4ea4\uff1b\uff085\uff09", "3\u3001\u7528MapX + VB( or VC )\u7f16\u5199\u4e00\u6bb5\u7a0b\u5e8f\uff0c\u5728\u7a0b\u5e8f\u4e2d\u5b9e\u73b0\uff1a", "3.1\u3001\u6253\u5f00A.tab\u5e76\u663e\u793a\u5728mapx\u63a7\u4ef6\u4e2d \uff1b\uff0810\uff09", "3.2\u3001\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7269\u7406\u56fe\u5c42\u6587\u4ef6B.tab\uff0cB.tab\u4e0eA.tab\u5728\u540c\u4e00\u4e2a", "\u76ee\u5f55\u4e0b\uff1b\uff0815\uff09", "3.3\u3001\u5c06Line1\u548cLine2\u5728\u4ea4\u70b9\u5904\u5404\u81ea\u622a\u65ad\uff0c\u751f\u62104\u4e2a\u65b0\u7684\u6298\u7ebf\u5bf9\u8c61", "Line1_1\u3001Line1_2\u3001Line2_1\u3001Line2_2\uff1b\uff0835\uff09", "3.4\u3001\u5c06\u622a\u65ad\u4ea7\u751f\u76844\u6761\u65b0\u7ebf\u6bb5\u6dfb\u52a0\u5230B\u4e0a\uff0c\u5e76\u5c06\u8fd9\u4e9b\u7ebf\u6bb5\u6309\u5b83\u4eec\u5728", "B\u4e0a\u7684\u751f\u6210\u987a\u5e8f\u6807\u4e0a\u5e8f\u53f7\uff0c\u8981\u6c42\u5728\u56fe\u4e0a\u80fd\u770b\u5230\u6807\u6ce8\uff1b\uff0830\uff09", "\u8bd5\u9898\u4e8c\uff1a", "\u6d4b\u8bd5\u5185\u5bb9\uff1a", "1\u3001\u7528MapInfo Professional\u65b0\u5efa\u4e00\u4e2a\u5305\u542b\u81f3\u5c112\u4e2a\u5b57\u6bb5\u7684\u56fe\u5c42\u6587\u4ef6", "A.tab\uff0c\u5176\u4e2d\u4e00\u4e2a\u5b57\u6bb5\u4e3aName\uff08Char 50\uff09\uff0c\u5e76\u5728\u56fe\u5c42\u4e2d\u521b\u5efa\u81f3\u5c1110\u4e2a", "\u5bf9\u8c61\uff1b\uff085\uff09", "2\u3001\u7528Access\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6570\u636e\u5e93A.mdb\uff0c\u5728A.mdb\u4e2d\u521b\u5efa\u4e00\u4e2a\u5305\u542b\u81f3\u5c112", "\u4e2a\u5b57\u6bb5\u7684\u8868T\uff0c\u5176\u4e2d\u4e00\u4e2a\u5b57\u6bb5\u4e3aName\uff08Char 50\uff09\uff0c\u53e6\u4e00\u4e2a\u5b57\u6bb5\u4e3a", "Value\uff08Numeric\uff09\uff1b\uff085\uff09", "3\u3001\u5728T\u4e2d\u6dfb\u52a0\u81f3\u5c1110\u6761\u8bb0\u5f55\uff0c\u6bcf\u6761\u8bb0\u5f55\u7684Name\u503c\u5e94\u4e0eA\u4e2d\u7684Name\u503c\u76f8\u5bf9", "\u5e94\uff0c\u6bcf\u6761\u8bb0\u5f55\u7684Value\u503c\u53ef\u4ee5\u4efb\u53d60-100\u4e2d\u7684\u6574\u6570\uff0c\u4f46\u4e0d\u5141\u8bb8\u91cd\u590d\uff1b", "\uff085\uff09", "4\u3001\u7528MapX + VB( or VC )\u7f16\u5199\u4e00\u6bb5\u7a0b\u5e8f\uff0c\u5728\u7a0b\u5e8f\u4e2d\u5b9e\u73b0\uff1a", "4.1\u3001\u6253\u5f00A.tab\u5e76\u663e\u793a\u5728mapx\u63a7\u4ef6\u4e2d \uff1b\uff0810\uff09", "4.2\u3001\u901a\u8fc7ADO\u8fde\u63a5T\u5e76\u663e\u793a\u5728Grid\u6216List\u7b49\u5176\u5b83\u63a7\u4ef6", "\u4e2d\uff1b\uff0810\uff09", "4.3\u3001\u5728\u754c\u9762\u4e0a\u5b9e\u73b0\u7531\u7528\u6237\u81ea\u5b9a\u4e49\u67e5\u8be2\u6761\u4ef6Value > xx\uff0cxx\u4e3a100", "\u4ee5\u5185\u7684\u6574\u6570\uff0c\u7136\u540e\u7531\u7528\u6237\u5728\u5730\u56fe\u4e0a\u5355\u51fb\u9f20\u6807\u6216\u662f\u62c9\u6846\uff0c\u6309\u7528", "\u6237\u8f93\u5165\u7684\u6761\u4ef6\u53ca\u9f20\u6807\u9009\u5b9a\u7684\u8303\u56f4\u67e5\u8be2\u56fe\u5c42A\u4e0a\u6240\u6709\u6ee1\u8db3\u6761\u4ef6", "\u7684\u5bf9\u8c61\uff1b\uff08\u5b9e\u73b0\u5355\u51fb+20 \uff0c\u5b9e\u73b0\u62c9\u6846+25\uff09", "4.4\u3001\u4ee5MessageBox\u7684\u5f62\u5f0f\uff0c\u663e\u793a\u6240\u6709\u7b26\u5408\u6761\u4ef6\u7684\u5bf9\u8c61\u7684\u5730\u7406\u5c5e", "\u6027\uff0c\u5305\u62ec\u5bf9\u8c61\u7684Name\u3001\u7c7b\u578b\uff08\u70b9|\u7ebf|\u9762\uff09\u3001\u5750\u6807\uff08\u5982\u679c\u5bf9\u8c61", "\u975e\u70b9\u7c7b\u578b\uff0c\u53d6\u7b2c\u4e00\u4e2a\u8282\u70b9\u5750\u6807\u5373\u53ef\uff09\uff0820\uff09\uff1b", "4.5\u3001\u4ee5MessageBox\u7684\u5f62\u5f0f\uff0c\u663e\u793a\u6240\u6709\u7b26\u5408\u6761\u4ef6\u7684\u5bf9\u8c61\u7684\u6765\u81ea\u8868T", "\u7684Name\u548cValue\u503c\uff1b\uff0820\uff09"], "title": "VC++\u7b14\u8bd5\u9898"},
{"contents": ["17\u3001SQLSEVER\u6709\u54ea\u4e9b\u51fd\u6570\uff1f", "\n18\u3001\u7528\u6237\u767b\u5f55\u9a8c\u8bc1\u662f\u5199\u6570\u636e\u5e93\u8fde\u63a5\u4e4b\u524d\u6216\u4e4b\u540e\uff1f", "\n19\u3001Session\u548cAppliction\u7684\u533a\u522b\uff1f", "\n20\u3001\u4e0d\u5bf9\u6570\u636e\u5e93\u8fdb\u884c\u64cd\u4f5c\u4e0d\u7528session\u548cAppliction\u4f20\u503c\uff0c\u4f60\u600e\u6837\u628a\u503c\u4f20\u5230\u5176\u4ed6\u9875\u9762\uff1f", "\n21\u3001C#\u548cC++\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n22\u3001\u8c08\u8c08\u5177\u4f53\u7684\u9879\u76ee\u5f00\u53d1\u6d41\u548c\u7acb\u9879", "\n23\u3001function\uff08\uff09\u4e0eBUG\uff08\uff09\u7684\u533a\u522b\uff1f", "\n24\u3001\u4f20\u503c\u4e0e\u4f20\u5740\u7684\u533a\u522b\uff1f", "\n25\u3001\u8c08\u8c08\u4f60\u662f\u600e\u4e48\u7406\u89e3\u9762\u5411\u5bf9\u8c61\u7684\uff1f", "\n26\u3001\u4f60\u5bf9\u8f6f\u4ef6\u5de5\u7a0b\u4e0e\u8f6f\u4ef6\u7ba1\u7406\u7684\u770b\u6cd5\uff1f", "\n27\u3001\u7ed9\u4f60\u4e24\u5f20\u8868\uff08\u539f\u6599\u8868\u4e0e\u6210\u54c1\u8868\uff09\uff08\u7a7a\u8868\uff09\uff0c\u67e5\u8be2\u51fa\u6210\u54c1\uff08\u6c7d\u8f66\uff09\u6240\u9700\u8981\u7684\u539f\u6599\u3002\u53ef\u518d\u5efa\u8868\u3002", "\n28\u3001\u6570\u636e\u7a97\u53e3\u66f4\u65b0\u51fd\u6570UPdate\uff08\uff09\u4f7f\u7528\u8bed\u6cd5", "\ndwcontro1.UPdate\uff08{accept{\uff0creseflag}}\uff09\u542b\u4e49\uff1f", "\n\u5f53accept=True\u65f6", "\n\u5f53accept=false\u65f6", "\n\u5f53reseflag=True\u65f6", "\n\u5f53resefLag=faLSe\u65f6"], "title": "\u4e71\u7096\u9762\u8bd5\u9898(SQL Server C++\u7b49\u7b49)"},
{"contents": ["\u800c\u517c\u5bb9\u4e86C\uff0c\u4f7f\u5f97\u81ea\u8eab\u4ec5\u4ec5\u6210\u4e3a\u4e86\u5e26\u7c7b\u7684C\u8bed\u8a00\uff0c\u591a\u591a\u5c11\u5c11\u5f71\u54cd\u4e86\u5176\u9762\u5411\u5bf9\u8c61\u7684\u5f7b\u5e95\u6027\uff01JAVA\u5219\u662f\u5b8c\u5168\u7684\u9762\u5411\u5bf9\u8c61\u8bed\u8a00\uff0c\u5b83\u53e5\u6cd5\u66f4\u6e05\u6670\uff0c\u89c4\u6a21\u66f4\u5c0f\uff0c\u66f4\u6613\u5b66\u3002\u5b83 \u662f\u5728\u5bf9\u591a\u79cd\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u8fdb\u884c\u4e86\u6df1\u5165\u7ec6\u81f4\u7814\u7a76\u7684\u57fa\u7840\u4e0a\uff0c\u636e\u5f03\u4e86\u5176\u4ed6\u8bed\u8a00\u7684\u4e0d\u8db3\u4e4b\u5904\uff0c\u4ece\u6839\u672c\u4e0a\u89e3\u51b3\u4e86c++\u7684\u56fa\u6709\u7f3a\u9677\u3002", "Java\u548cc++\u7684\u76f8\u4f3c\u4e4b\u5904\u591a\u4e8e\u4e0d\u540c\u4e4b\u5904\uff0c\u4f46\u4e24\u79cd\u8bed\u8a00\u95ee\u51e0\u5904\u4e3b\u8981\u7684\u4e0d\u540c\u4f7f\u5f97Java\u66f4\u5bb9\u6613\u5b66\u4e60\uff0c\u5e76\u4e14\u7f16\u7a0b\u73af\u5883\u66f4\u4e3a\u7b80\u5355\u3002", "\u6211\u5728\u8fd9\u91cc\u4e0d\u80fd\u5b8c\u5168\u5217\u51fa\u4e0d\u540c\u4e4b\u5904\uff0c\u4ec5\u5217\u51fa\u6bd4\u8f83\u663e\u8457\u7684\u533a\u522b\uff1a", "JAVA \u8bed\u8a00\u8ba9\u7f16\u7a0b\u8005\u65e0\u6cd5\u627e\u5230\u6307\u9488\u6765\u76f4\u63a5\u8bbf\u95ee\u5185\u5b58\u65e0\u6307\u9488\uff0c\u5e76\u4e14\u589e\u6dfb\u4e86\u81ea\u52a8\u7684\u5185\u5b58\u7ba1\u7406\u529f\u80fd\uff0c\u4ece\u800c\u6709\u6548\u5730\u9632\u6b62\u4e86c\uff0fc++\u8bed\u8a00\u4e2d\u6307\u9488\u64cd\u4f5c\u5931\u8bef\uff0c\u5982\u91ce\u6307\u9488\u6240\u9020\u6210\u7684\u7cfb\u7edf\u5d29 \u6e83\u3002\u4f46\u4e5f\u4e0d\u662f\u8bf4JAVA\u6ca1\u6709\u6307\u9488\uff0c\u865a\u62df\u673a\u5185\u90e8\u8fd8\u662f\u4f7f\u7528\u4e86\u6307\u9488\uff0c\u53ea\u662f\u5916\u4eba\u4e0d\u5f97\u4f7f\u7528\u800c\u5df2\u3002\u8fd9\u6709\u5229\u4e8eJava\u7a0b\u5e8f\u7684\u5b89\u5168\u3002", "c++ \u652f\u6301\u591a\u91cd\u7ee7\u627f\uff0c\u8fd9\u662fc++\u7684\u4e00\u4e2a\u7279\u5f81\uff0c\u5b83\u5141\u8bb8\u591a\u7236\u7c7b\u6d3e\u751f\u4e00\u4e2a\u7c7b\u3002\u5c3d\u7ba1\u591a\u91cd\u7ee7\u627f\u529f\u80fd\u5f88\u5f3a\uff0c\u4f46\u4f7f\u7528\u590d\u6742\uff0c\u800c\u4e14\u4f1a\u5f15\u8d77\u8bb8\u591a\u9ebb\u70e6\uff0c\u7f16\u8bd1\u7a0b\u5e8f\u5b9e\u73b0\u5b83\u4e5f\u5f88\u4e0d\u5bb9\u6613\u3002 Java\u4e0d\u652f\u6301\u591a\u91cd\u7ee7\u627f\uff0c\u4f46\u5141\u8bb8\u4e00\u4e2a\u7c7b\u7ee7\u627f\u591a\u4e2a\u63a5\u53e3(extends+implement)\uff0c\u5b9e\u73b0\u4e86c++\u591a\u91cd\u7ee7\u627f\u7684\u529f\u80fd\uff0c\u53c8\u907f\u514d\u4e86c++\u4e2d\u7684\u591a\u91cd\u7ee7\u627f\u5b9e \u73b0\u65b9\u5f0f\u5e26\u6765\u7684\u8bf8\u591a\u4e0d\u4fbf\u3002", "Java\u662f\u5b8c\u5168\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\uff0c\u6240\u6709\u51fd\u6570\u548c\u53d8\u91cf\u90e8\u5fc5\u987b\u662f\u7c7b \u7684\u4e00\u90e8\u5206\u3002\u9664\u4e86\u57fa\u672c\u6570\u636e\u7c7b\u578b\u4e4b\u5916\uff0c\u5176\u4f59\u7684\u90fd\u4f5c\u4e3a\u7c7b\u5bf9\u8c61\uff0c\u5305\u62ec\u6570\u7ec4\u3002\u5bf9\u8c61\u5c06\u6570\u636e\u548c\u65b9\u6cd5\u7ed3\u5408\u8d77\u6765\uff0c\u628a\u5b83\u4eec\u5c01\u88c5\u5728\u7c7b\u4e2d\uff0c\u8fd9\u6837\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u53ef\u5b9e\u73b0\u81ea\u5df1\u7684\u7279\u70b9\u548c\u884c\u4e3a\u3002 \u800cc++\u5141\u8bb8\u5c06\u51fd\u6570\u548c\u53d8\u91cf\u5b9a\u4e49\u4e3a\u5168\u5c40\u7684\u3002\u6b64\u5916\uff0cJava\u4e2d\u53d6\u6d88\u4e86c\uff0fc++\u4e2d\u7684\u7ed3\u6784\u548c\u8054\u5408\uff0c\u6d88\u9664\u4e86\u4e0d\u5fc5\u8981\u7684\u9ebb\u70e6\u3002", "Java\u7a0b\u5e8f\u4e2d\u6240\u6709\u7684\u5bf9\u8c61\u90fd\u662f\u7528new\u64cd\u4f5c\u7b26\u5efa\u7acb\u5728\u5185\u5b58\u5806\u6808\u4e0a\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u7b26\u7c7b\u4f3c\u4e8ec++\u7684new\u64cd\u4f5c\u7b26\u3002\u4e0b\u9762\u7684\u8bed\u53e5\u7531\u4e00\u4e2a\u5efa\u7acb\u4e86\u4e00\u4e2a\u7c7bRead\u7684\u5bf9\u8c61\uff0c\u7136\u540e\u8c03\u7528\u8be5\u5bf9\u8c61\u7684work\u65b9\u6cd5\uff1a", "\u8bed \u53e5Read r\uff1dnew Read()\uff1b\u5728\u5806\u6808\u7ed3\u6784\u4e0a\u5efa\u7acb\u4e86\u4e00\u4e2aRead\u7684\u5b9e\u4f8b\u3002Java\u81ea\u52a8\u8fdb\u884c\u65e0\u7528\u5185\u5b58\u56de\u6536\u64cd\u4f5c\uff0c\u4e0d\u9700\u8981\u7a0b\u5e8f\u5458\u8fdb\u884c\u5220\u9664\u3002\u800cc\u5341\u5341\u4e2d\u5fc5\u987b\u7531\u7a0b\u5e8f\u8d1d\u91ca\u653e\u5185\u5b58\u8d44\u6e90\uff0c \u589e\u52a0\u4e86\u7a0b\u5e8f\u8bbe\u8ba1\u8005\u7684\u8d1f\u6254\u3002Java\u4e2d\u5f53\u4e00\u4e2a\u5bf9\u8c61\u4e0d\u88ab\u518d\u7528\u5230\u65f6\uff0c\u65e0\u7528\u5185\u5b58\u56de\u6536\u5668\u5c06\u7ed9\u5b83\u52a0\u4e0a\u6807\u7b7e\u4ee5\u793a\u5220\u9664\u3002JAVA\u91cc\u65e0\u7528\u5185\u5b58\u56de\u6536\u7a0b\u5e8f\u662f\u4ee5\u7ebf\u7a0b\u65b9\u5f0f\u5728\u540e\u53f0\u8fd0\u884c \u7684\uff0c\u5229\u7528\u7a7a\u95f2\u65f6\u95f4\u5de5\u4f5c\u3002", "Java\u4e0d\u652f\u6301\u64cd\u4f5c\u7b26\u91cd\u8f7d\u3002\u64cd\u4f5c\u7b26\u91cd\u8f7d\u88ab\u8ba4\u4e3a\u662fc\u5341\u5341\u7684\u7a81\u51fa\u7279\u5f81\uff0c\u5728Java\u4e2d\u867d\u7136\u7c7b\u5927\u4f53\u4e0a\u53ef\u4ee5\u5b9e\u73b0\u8fd9\u6837\u7684\u529f\u80fd\uff0c\u4f46\u64cd\u4f5c\u7b26\u91cd\u8f7d\u7684\u65b9\u4fbf\u6027\u4ecd\u7136\u4e22\u5931\u4e86\u4e0d\u5c11\u3002Java\u8bed\u8a00\u4e0d\u652f\u6301\u64cd\u4f5c\u7b26\u91cd\u8f7d\u662f\u4e3a\u4e86\u4fdd\u6301Java\u8bed\u8a00\u5c3d\u53ef\u80fd\u7b80\u5355\u3002", "Java\u4e0d\u652f\u6301\u9884\u5904\u7406\u529f\u80fd\u3002c\uff0fc\u5341\u5341\u5728\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u90fd\u6709\u4e00\u4e2a\u9884\u7f16\u6cfd\u9636\u6bb5\uff0c\u5373\u4f17\u6240\u5468\u77e5\u7684\u9884\u5904\u7406\u5668\u3002\u9884\u5904\u7406\u5668\u4e3a\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u4e86\u65b9\u4fbf\uff0c\u4f46\u589e\u52a0\u4e01\u7f16\u8bd1\u7684\u590d\u6742\u6027\u3002JAVA\u865a\u62df\u673a\u6ca1\u6709\u9884\u5904\u7406\u5668\uff0c\u4f46\u5b83\u63d0\u4f9b\u7684\u5f15\u5165\u8bed\u53e5(import)\u4e0ec\u5341\u5341\u9884\u5904\u7406\u5668\u7684\u529f\u80fd\u7c7b\u4f3c\u3002", "\u5728c\u4e2d\uff0c\u4ee3\u7801\u7ec4\u7ec7\u5728\u51fd\u6570\u4e2d\uff0c\u51fd\u6570\u53ef\u4ee5\u8bbf\u95ee\u7a0b\u5e8f\u7684\u5168\u5c40\u53d8\u91cf\u3002c\u5341\u5341\u589e\u52a0\u4e86\u7c7b\uff0c\u63d0\u4f9b\u4e86\u7c7b\u7b97\u6cd5\uff0c\u8be5\u7b97\u6cd5\u662f\u4e0e\u7c7b\u76f8\u8fde\u7684\u51fd\u6570\uff0cc\u5341\u5341\u7c7b\u65b9\u6cd5\u4e0eJava\u7c7b\u65b9\u6cd5\u5341\u5206\u76f8\u4f3c\uff0c\u7136\u800c\uff0c\u7531\u4e8ec\u5341\u5341\u4ecd\u7136\u652f\u6301c\uff0c\u6240\u4ee5\u4e0d\u80fd\u963b\u6b62c\u5341\u5341\u5f00\u53d1\u4eba\u5458\u4f7f\u7528\u51fd\u6570\uff0c\u7ed3\u679c\u51fd\u6570\u548c\u65b9\u6cd5\u6df7\u5408\u4f7f\u7528\u4f7f\u5f97\u7a0b\u5e8f\u6bd4\u8f83\u6df7\u4e71\u3002", "Java\u6ca1\u6709\u51fd\u6570\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u6bd4c\u5341\u5341\u66f4\u7eaf\u7684\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\uff0cJava\u5f3a\u8feb\u5f00\u53d1\u4eba\u5458\u628a\u6240\u6709\u4f8b\u884c\u7a0b\u5e8f\u5305\u62ec\u5728\u7c7b\u4e2d\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u7528\u65b9\u6cd5\u5b9e\u73b0\u4f8b\u884c\u7a0b\u5e8f\u53ef\u6fc0\u52b1\u5f00\u53d1\u4eba\u5458\u66f4\u597d\u5730\u7ec4\u7ec7\u7f16\u7801\u3002", "c\u548cc\u5341\u5341\u4e0d\u652f\u6301\u5b57\u7b26\u4e32\u53d8\u91cf\uff0c\u5728c\u548cc\u5341\u5341\u7a0b\u5e8f\u4e2d\u4f7f\u7528Null\u7ec8\u6b62\u7b26\u4ee3\u8868\u5b57\u7b26\u4e32\u7684\u7ed3\u675f\uff0c\u5728Java\u4e2d\u5b57\u7b26\u4e32\u662f\u7528\u7c7b\u5bf9\u8c61(strinR\u548cstringBuffer)\u6765\u5b9e\u73b0\u7684\uff0c\u8fd9\u4e9b\u7c7b\u5bf9\u8c61\u662fJava\u8bed\u8a00\u7684\u6838\u5fc3\uff0c\u7528\u7c7b\u5bf9\u8c61\u5b9e\u73b0\u5b57\u7b26\u4e32\u6709\u4ee5\u4e0b\u51e0\u4e2a\u4f18\u70b9\uff1a", "(1)\u5728\u6574\u4e2a\u7cfb\u7edf\u4e2d\u5efa\u7acb\u5b57\u7b26\u4e32\u548c\u8bbf\u95ee\u5b57\u7b26\u4e32\u5143\u7d20\u7684\u65b9\u6cd5\u662f\u4e00\u81f4\u7684\uff1b", "(2)J3\u9633\u5b57\u7b26\u4e32\u7c7b\u662f\u4f5c\u4e3aJava\u8bed\u8a00\u7684\u4e00\u90e8\u5206\u5b9a\u4e49\u7684\uff0c\u800c\u4e0d\u662f\u4f5c\u4e3a\u5916\u52a0\u7684\u5ef6\u4f38\u90e8\u5206\uff1b", "(3)Java\u5b57\u7b26\u4e32\u6267\u884c\u8fd0\u884c\u65f6\u68c0\u7a7a\uff0c\u53ef\u5e2e\u52a9\u6392\u9664\u4e00\u4e9b\u8fd0\u884c\u65f6\u53d1\u751f\u7684\u9519\u8bef\uff1b", "(4)\u53ef\u5bf9\u5b57\u7b26\u4e32\u7528\u201c\u5341\u201d\u8fdb\u884c\u8fde\u63a5\u64cd\u4f5c\u3002", "\u201c \u53ef\u6015\u201d\u7684goto\u8bed\u53e5\u662fc\u548cc++\u7684\u201c\u9057\u7269\u201d\uff0c\u5b83\u662f\u8be5\u8bed\u8a00\u6280\u672f\u4e0a\u7684\u5408\u6cd5\u90e8\u5206\uff0c\u5f15\u7528goto\u8bed\u53e5\u5f15\u8d77\u4e86\u7a0b\u5e8f\u7ed3\u6784\u7684\u6df7\u4e71\uff0c\u4e0d\u6613\u7406\u89e3\uff0cgoto\u8bed\u53e5\u5b50\u8981\u7528\u4e8e\u65e0\u6761 \u4ef6\u8f6c\u79fb\u5b50\u7a0b\u5e8f\u548c\u591a\u7ed3\u6784\u5206\u652f\u6280\u672f\u3002\u9274\u4e8e\u4ee5\u5e7f\u7406\u7531\uff0cJava\u4e0d\u63d0\u4f9bgoto\u8bed\u53e5\uff0c\u5b83\u867d\u7136\u6307\u5b9agoto\u4f5c\u4e3a\u5173\u952e\u5b57\uff0c\u4f46\u4e0d\u652f\u6301\u5b83\u7684\u4f7f\u7528\uff0c\u4f7f\u7a0b\u5e8f\u7b80\u6d01\u6613\u8bfb\u3002", "\u5728c\u548cc\u5341\u5341\u4e2d\u6709\u65f6\u51fa\u73b0\u6570\u636e\u7c7b\u578b\u7684\u9690\u542b\u8f6c\u6362\uff0c\u8fd9\u5c31\u6d89\u53ca\u4e86\u81ea\u52a8\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u5728c\u5341\u5341\u4e2d\u53ef\u5c06\u4e00\u6d6e\u70b9\u503c\u8d4b\u4e88\u6574\u578b\u53d8\u91cf\uff0c\u5e76\u53bb\u6389\u5176\u5c3e\u6570\u3002Java\u4e0d\u652f\u6301c\u5341\u5341\u4e2d\u7684\u81ea\u52a8\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u5982\u679c\u9700\u8981\uff0c\u5fc5\u987b\u7531\u7a0b\u5e8f\u663e\u5f0f\u8fdb\u884c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u3002", "JAVA\u4e2d\u7684\u5f02\u5e38\u673a\u5236\u7528\u4e8e\u6355\u83b7\u4f8b\u5916\u4e8b\u4ef6\uff0c\u589e\u5f3a\u7cfb\u7edf\u5bb9\u9519\u80fd\u529b", "\u5176\u4e2dexceptionType\u8868\u793a\u5f02\u5e38\u7c7b\u578b\u3002\u800cC++\u5219\u6ca1\u6709\u5982\u6b64\u65b9\u4fbf\u7684\u673a\u5236\u3002"], "title": "JAVA\u548cC++\u7684\u533a\u522b"},
{"contents": ["\u8bd5\u98981\uff1a", "\nvoid test1()", "\n{", "\nchar string[10];", "\nchar* str1 = \u201c0123456789\u2033;", "\nstrcpy( string, str1 );", "\n}", "\u8bd5\u98982\uff1a", "\nvoid test2()", "\n{", "\nchar string[10], str1[10];", "\nint i;", "\nfor(i=0; i<10; i++)", "\n{", "\nstr1[i] = \u2018a\u2019;", "\n}", "\nstrcpy( string, str1 );", "\n}", "\u8bd5\u98983\uff1a", "\nvoid test3(char* str1)", "\n{", "\nchar string[10];", "\nif( strlen( str1 ) <= 10 )", "\n{", "\nstrcpy( string, str1 );", "\n}", "\n}", "\n\u8bd5\u98981\u5b57\u7b26\u4e32str1\u9700\u898111\u4e2a\u5b57\u8282\u624d\u80fd\u5b58\u653e\u4e0b\uff08\u5305\u62ec\u672b\u5c3e\u7684\u2019\\0\u2019\uff09\uff0c\u800cstring\u53ea\u670910\u4e2a\u5b57\u8282\u7684\u7a7a\u95f4\uff0cstrcpy\u4f1a\u5bfc\u81f4\u6570\u7ec4\u8d8a\u754c\uff1b", "\u5bf9\u8bd5\u98982\uff0c\u5982\u679c\u9762\u8bd5\u8005\u6307\u51fa\u5b57\u7b26\u6570\u7ec4str1\u4e0d\u80fd\u5728\u6570\u7ec4\u5185\u7ed3\u675f\u53ef\u4ee5\u7ed93\u5206\uff1b\u5982\u679c\u9762\u8bd5\u8005\u6307\u51fastrcpy(string, str1)\u8c03\u7528\u4f7f\u5f97\u4ecestr1\u5185\u5b58\u8d77\u590d\u5236\u5230string\u5185\u5b58\u8d77\u6240\u590d\u5236\u7684\u5b57\u8282\u6570\u5177\u6709\u4e0d\u786e\u5b9a\u6027\u53ef\u4ee5\u7ed97\u5206\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u6307\u51fa\u5e93\u51fd\u6570strcpy\u5de5\u4f5c\u65b9\u5f0f\u7684\u7ed910\u5206\uff1b", "\u5bf9\u8bd5\u98983\uff0cif(strlen(str1) <= 10)\u5e94\u6539\u4e3aif(strlen(str1) < 10)\uff0c\u56e0\u4e3astrlen\u7684\u7ed3\u679c\u672a\u7edf\u8ba1\u2019\\0\u2019\u6240\u5360\u7528\u76841\u4e2a\u5b57\u8282\u3002", "\u5256\u6790\uff1a", "\u8003\u67e5\u5bf9\u57fa\u672c\u529f\u7684\u638c\u63e1\uff1a", "(1)\u5b57\u7b26\u4e32\u4ee5\u2019\\0\u2019\u7ed3\u5c3e\uff1b", "(2)\u5bf9\u6570\u7ec4\u8d8a\u754c\u628a\u63e1\u7684\u654f\u611f\u5ea6\uff1b", "(3)\u5e93\u51fd\u6570strcpy\u7684\u5de5\u4f5c\u65b9\u5f0f\uff0c\u5982\u679c\u7f16\u5199\u4e00\u4e2a\u6807\u51c6strcpy\u51fd\u6570\u7684\u603b\u5206\u503c\u4e3a10\uff0c\u4e0b\u9762\u7ed9\u51fa\u51e0\u4e2a\u4e0d\u540c\u5f97\u5206\u7684\u7b54\u6848\uff1a", "2\u5206", "\nvoid strcpy( char *strDest, char *strSrc )", "\n{", "\nwhile( (*strDest++ = * strSrc++) != \u2018\\0\u2019 );", "\n}", "4\u5206", "\nvoid strcpy( char *strDest, const char *strSrc )", "\n//\u5c06\u6e90\u5b57\u7b26\u4e32\u52a0const\uff0c\u8868\u660e\u5176\u4e3a\u8f93\u5165\u53c2\u6570\uff0c\u52a02\u5206", "\n{", "\nwhile( (*strDest++ = * strSrc++) != \u2018\\0\u2019 );", "\n}", "7\u5206", "\nvoid strcpy(char *strDest, const char *strSrc)", "\n{", "\n//\u5bf9\u6e90\u5730\u5740\u548c\u76ee\u7684\u5730\u5740\u52a0\u975e0\u65ad\u8a00\uff0c\u52a03\u5206", "\nassert( (strDest != NULL) && (strSrc != NULL) );", "\nwhile( (*strDest++ = * strSrc++) != \u2018\\0\u2019 );", "\n}", "10\u5206", "\n//\u4e3a\u4e86\u5b9e\u73b0\u94fe\u5f0f\u64cd\u4f5c\uff0c\u5c06\u76ee\u7684\u5730\u5740\u8fd4\u56de\uff0c\u52a03\u5206\uff01", "char * strcpy( char *strDest, const char *strSrc )", "\n{", "\nassert( (strDest != NULL) && (strSrc != NULL) );", "\nchar *address = strDest;", "\nwhile( (*strDest++ = * strSrc++) != \u2018\\0\u2019 );", "\nreturn address;", "\n}", "\u4ece2\u5206\u523010\u5206\u7684\u51e0\u4e2a\u7b54\u6848\u6211\u4eec\u53ef\u4ee5\u6e05\u695a\u7684\u770b\u5230\uff0c\u5c0f\u5c0f\u7684strcpy\u7adf\u7136\u6697\u85cf\u7740\u8fd9\u4e48\u591a\u7384\u673a\uff0c\u771f\u4e0d\u662f\u76d6\u7684\uff01\u9700\u8981\u591a\u4e48\u624e\u5b9e\u7684\u57fa\u672c\u529f\u624d\u80fd\u5199\u4e00\u4e2a\u5b8c\u7f8e\u7684strcpy\u554a\uff01", "(4)\u5bf9strlen\u7684\u638c\u63e1\uff0c\u5b83\u6ca1\u6709\u5305\u62ec\u5b57\u7b26\u4e32\u672b\u5c3e\u7684\u2019\\0\u2032\u3002", "\u8bfb\u8005\u770b\u4e86\u4e0d\u540c\u5206\u503c\u7684strcpy\u7248\u672c\uff0c\u5e94\u8be5\u4e5f\u53ef\u4ee5\u5199\u51fa\u4e00\u4e2a10\u5206\u7684strlen\u51fd\u6570\u4e86\uff0c\u5b8c\u7f8e\u7684\u7248\u672c\u4e3a\uff1a int strlen( const char *str ) //\u8f93\u5165\u53c2\u6570const", "\n{", "\nassert( strt != NULL ); //\u65ad\u8a00\u5b57\u7b26\u4e32\u5730\u5740\u975e0", "\nint len;", "\nwhile( (*str++) != \u2018\\0\u2032 )", "\n{", "\nlen++;", "\n}", "\nreturn len;", "\n}", "\u8bd5\u98984\uff1a", "\nvoid GetMemory( char *p )", "\n{", "\np = (char *) malloc( 100 );", "\n}", "void Test( void )", "\n{", "\nchar *str = NULL;", "\nGetMemory( str );", "\nstrcpy( str, \u201chello world\u201d );", "\nprintf( str );", "\n}", "\u8bd5\u98985\uff1a", "\nchar *GetMemory( void )", "\n{", "\nchar p[] = \u201chello world\u201d;", "\nreturn p;", "\n}", "void Test( void )", "\n{", "\nchar *str = NULL;", "\nstr = GetMemory();", "\nprintf( str );", "\n}", "\u8bd5\u98986\uff1a", "\nvoid GetMemory( char **p, int num )", "\n{", "\n*p = (char *) malloc( num );", "\n}", "void Test( void )", "\n{", "\nchar *str = NULL;", "\nGetMemory( &str, 100 );", "\nstrcpy( str, \u201chello\u201d );", "\nprintf( str );", "\n}", "\u8bd5\u98987\uff1a", "\nvoid Test( void )", "\n{", "\nchar *str = (char *) malloc( 100 );", "\nstrcpy( str, \u201chello\u201d );", "\nfree( str );", "\n\u2026 //\u7701\u7565\u7684\u5176\u5b83\u8bed\u53e5", "\n}", "\u89e3\u7b54\uff1a", "\u8bd5\u98984\u4f20\u5165\u4e2dGetMemory( char *p )\u51fd\u6570\u7684\u5f62\u53c2\u4e3a\u5b57\u7b26\u4e32\u6307\u9488\uff0c\u5728\u51fd\u6570\u5185\u90e8\u4fee\u6539\u5f62\u53c2\u5e76\u4e0d\u80fd\u771f\u6b63\u7684\u6539\u53d8\u4f20\u5165\u5f62\u53c2\u7684\u503c\uff0c\u6267\u884c\u5b8c", "\nchar *str = NULL;", "\nGetMemory( str );", "\u540e\u7684str\u4ecd\u7136\u4e3aNULL\uff1b", "\u8bd5\u98985\u4e2d", "\nchar p[] = \u201chello world\u201d;", "\nreturn p;", "\u7684p[]\u6570\u7ec4\u4e3a\u51fd\u6570\u5185\u7684\u5c40\u90e8\u81ea\u52a8\u53d8\u91cf\uff0c\u5728\u51fd\u6570\u8fd4\u56de\u540e\uff0c\u5185\u5b58\u5df2\u7ecf\u88ab\u91ca\u653e\u3002\u8fd9\u662f\u8bb8\u591a\u7a0b\u5e8f\u5458\u5e38\u72af\u7684\u9519\u8bef\uff0c\u5176\u6839\u6e90\u5728\u4e8e\u4e0d\u7406\u89e3\u53d8\u91cf\u7684\u751f\u5b58\u671f\u3002", "\u8bd5\u98986\u7684GetMemory\u907f\u514d\u4e86\u8bd5\u98984\u7684\u95ee\u9898\uff0c\u4f20\u5165GetMemory\u7684\u53c2\u6570\u4e3a\u5b57\u7b26\u4e32\u6307\u9488\u7684\u6307\u9488\uff0c\u4f46\u662f\u5728GetMemory\u4e2d\u6267\u884c\u7533\u8bf7\u5185\u5b58\u53ca\u8d4b\u503c\u8bed\u53e5", "\n*p = (char *) malloc( num );", "\u540e\u672a\u5224\u65ad\u5185\u5b58\u662f\u5426\u7533\u8bf7\u6210\u529f\uff0c\u5e94\u52a0\u4e0a\uff1a", "\nif ( *p == NULL )", "\n{", "\n\u2026//\u8fdb\u884c\u7533\u8bf7\u5185\u5b58\u5931\u8d25\u5904\u7406", "\n}", "\u8bd5\u98987\u5b58\u5728\u4e0e\u8bd5\u98986\u540c\u6837\u7684\u95ee\u9898\uff0c\u5728\u6267\u884c", "\nchar *str = (char *) malloc(100);", "\u540e\u672a\u8fdb\u884c\u5185\u5b58\u662f\u5426\u7533\u8bf7\u6210\u529f\u7684\u5224\u65ad\uff1b\u53e6\u5916\uff0c\u5728free(str)\u540e\u672a\u7f6estr\u4e3a\u7a7a\uff0c\u5bfc\u81f4\u53ef\u80fd\u53d8\u6210\u4e00\u4e2a\u201c\u91ce\u201d\u6307\u9488\uff0c\u5e94\u52a0\u4e0a\uff1a", "\nstr = NULL;", "\u8bd5\u98986\u7684Test\u51fd\u6570\u4e2d\u4e5f\u672a\u5bf9malloc\u7684\u5185\u5b58\u8fdb\u884c\u91ca\u653e\u3002", "\u5256\u6790\uff1a", "\u8bd5\u98984\uff5e7\u8003\u67e5\u9762\u8bd5\u8005\u5bf9\u5185\u5b58\u64cd\u4f5c\u7684\u7406\u89e3\u7a0b\u5ea6\uff0c\u57fa\u672c\u529f\u624e\u5b9e\u7684\u9762\u8bd5\u8005\u4e00\u822c\u90fd\u80fd\u6b63\u786e\u7684\u56de\u7b54\u5176\u4e2d50~60\u7684\u9519\u8bef\u3002\u4f46\u662f\u8981\u5b8c\u5168\u89e3\u7b54\u6b63\u786e\uff0c\u5374\u4e5f\u7edd\u975e\u6613\u4e8b\u3002", "\u5bf9\u5185\u5b58\u64cd\u4f5c\u7684\u8003\u67e5\u4e3b\u8981\u96c6\u4e2d\u5728\uff1a", "\uff081\uff09\u6307\u9488\u7684\u7406\u89e3\uff1b", "\uff082\uff09\u53d8\u91cf\u7684\u751f\u5b58\u671f\u53ca\u4f5c\u7528\u8303\u56f4\uff1b", "\uff083\uff09\u826f\u597d\u7684\u52a8\u6001\u5185\u5b58\u7533\u8bf7\u548c\u91ca\u653e\u4e60\u60ef\u3002", "\u518d\u770b\u770b\u4e0b\u9762\u7684\u4e00\u6bb5\u7a0b\u5e8f\u6709\u4ec0\u4e48\u9519\u8bef\uff1a", "\nswap( int* p1,int* p2 )", "\n{", "\nint *p;", "\n*p = *p1;", "\n*p1 = *p2;", "\n*p2 = *p;", "\n}", "\u5728swap\u51fd\u6570\u4e2d\uff0cp\u662f\u4e00\u4e2a\u201c\u91ce\u201d\u6307\u9488\uff0c\u6709\u53ef\u80fd\u6307\u5411\u7cfb\u7edf\u533a\uff0c\u5bfc\u81f4\u7a0b\u5e8f\u8fd0\u884c\u7684\u5d29\u6e83\u3002\u5728VC++\u4e2dDEBUG\u8fd0\u884c\u65f6\u63d0\u793a\u9519\u8bef\u201cAccess Violation\u201d\u3002\u8be5\u7a0b\u5e8f\u5e94\u8be5\u6539\u4e3a\uff1a", "\nswap( int* p1,int* p2 )", "\n{", "\nint p;", "\np = *p1;", "\n*p1 = *p2;", "\n*p2 = p;", "\n}"], "title": "C/C++\u7a0b\u5e8f\u5458\u5e38\u89c1\u9762\u8bd5\u9898(1)"},
{"contents": ["\u8bd5\u98981\uff1a\u5206\u522b\u7ed9\u51faBOOL\uff0cint\uff0cfloat\uff0c\u6307\u9488\u53d8\u91cf \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\uff08\u5047\u8bbe\u53d8\u91cf\u540d\u4e3avar\uff09", "\u89e3\u7b54\uff1a", "BOOL\u578b\u53d8\u91cf\uff1aif(!var)", "int\u578b\u53d8\u91cf\uff1a if(var==0)", "float\u578b\u53d8\u91cf\uff1a", "const float EPSINON = 0.00001;", "if ((x >= \u2013 EPSINON) && (x <= EPSINON)", "\u6307\u9488\u53d8\u91cf\uff1a\u3000\u3000if(var==NULL)", "\u5256\u6790\uff1a", "\u8003\u67e5\u5bf90\u503c\u5224\u65ad\u7684\u201c\u5185\u529f\u201d\uff0cBOOL\u578b\u53d8\u91cf\u76840\u5224\u65ad\u5b8c\u5168\u53ef\u4ee5\u5199\u6210if(var==0)\uff0c\u800cint\u578b\u53d8\u91cf\u4e5f\u53ef\u4ee5\u5199\u6210if(!var)\uff0c\u6307\u9488\u53d8\u91cf\u7684\u5224\u65ad\u4e5f\u53ef\u4ee5\u5199\u6210if(!var)\uff0c\u4e0a\u8ff0\u5199\u6cd5\u867d\u7136\u7a0b\u5e8f\u90fd\u80fd\u6b63\u786e\u8fd0\u884c\uff0c\u4f46\u662f\u672a\u80fd\u6e05\u6670\u5730\u8868\u8fbe\u7a0b\u5e8f\u7684\u610f\u601d\u3002", "\u4e00\u822c\u7684\uff0c\u5982\u679c\u60f3\u8ba9if\u5224\u65ad\u4e00\u4e2a\u53d8\u91cf\u7684\u201c\u771f\u201d\u3001\u201c\u5047\u201d\uff0c\u5e94\u76f4\u63a5\u4f7f\u7528if(var)\u3001if(!var)\uff0c\u8868\u660e\u5176\u4e3a\u201c\u903b\u8f91\u201d\u5224\u65ad\uff1b\u5982\u679c\u7528if\u5224\u65ad\u4e00\u4e2a\u6570\u503c\u578b\u53d8\u91cf(short\u3001int\u3001long\u7b49)\uff0c\u5e94\u8be5\u7528if(var==0)\uff0c\u8868\u660e\u662f\u4e0e0\u8fdb\u884c\u201c\u6570\u503c\u201d\u4e0a\u7684\u6bd4\u8f83\uff1b\u800c\u5224\u65ad\u6307\u9488\u5219\u9002\u5b9c\u7528if(var==NULL)\uff0c\u8fd9\u662f\u4e00\u79cd\u5f88\u597d\u7684\u7f16\u7a0b\u4e60\u60ef\u3002", "\u6d6e\u70b9\u578b\u53d8\u91cf\u5e76\u4e0d\u7cbe\u786e\uff0c\u6240\u4ee5\u4e0d\u53ef\u5c06float\u53d8\u91cf\u7528\u201c==\u201d\u6216\u201c\uff01=\u201d\u4e0e\u6570\u5b57\u6bd4\u8f83\uff0c\u5e94\u8be5\u8bbe\u6cd5\u8f6c\u5316\u6210\u201c>=\u201d\u6216\u201c<=\u201d\u5f62\u5f0f\u3002\u5982\u679c\u5199\u6210if (x == 0.0)\uff0c\u5219\u5224\u4e3a\u9519\uff0c\u5f970\u5206\u3002", "\u8bd5\u98982\uff1a\u4ee5\u4e0b\u4e3aWindows NT\u4e0b\u768432\u4f4dC++\u7a0b\u5e8f\uff0c\u8bf7\u8ba1\u7b97sizeof\u7684\u503c", "\nvoid Func ( char str[100] )", "\n{", "\nsizeof( str ) = ?", "\n}", "void *p = malloc( 100 );", "\nsizeof ( p ) = ?", "\u89e3\u7b54\uff1a", "\nsizeof( str ) = 4", "\nsizeof ( p ) = 4", "\u5256\u6790\uff1a", "Func ( char str[100] )\u51fd\u6570\u4e2d\u6570\u7ec4\u540d\u4f5c\u4e3a\u51fd\u6570\u5f62\u53c2\u65f6\uff0c\u5728\u51fd\u6570\u4f53\u5185\uff0c\u6570\u7ec4\u540d\u5931\u53bb\u4e86\u672c\u8eab\u7684\u5185\u6db5\uff0c\u4ec5\u4ec5\u53ea\u662f\u4e00\u4e2a\u6307\u9488\uff1b\u5728\u5931\u53bb\u5176\u5185\u6db5\u7684\u540c\u65f6\uff0c\u5b83\u8fd8\u5931\u53bb\u4e86\u5176\u5e38\u91cf\u7279\u6027\uff0c\u53ef\u4ee5\u4f5c\u81ea\u589e\u3001\u81ea\u51cf\u7b49\u64cd\u4f5c\uff0c\u53ef\u4ee5\u88ab\u4fee\u6539\u3002", "\u6570\u7ec4\u540d\u7684\u672c\u8d28\u5982\u4e0b\uff1a", "\uff081\uff09\u6570\u7ec4\u540d\u6307\u4ee3\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\u5c31\u662f\u6570\u7ec4\uff1b", "\u4f8b\u5982\uff1a", "\nchar str[10];", "\ncout << sizeof(str) << endl;", "\u8f93\u51fa\u7ed3\u679c\u4e3a10\uff0cstr\u6307\u4ee3\u6570\u636e\u7ed3\u6784char[10]\u3002", "\uff082\uff09\u6570\u7ec4\u540d\u53ef\u4ee5\u8f6c\u6362\u4e3a\u6307\u5411\u5176\u6307\u4ee3\u5b9e\u4f53\u7684\u6307\u9488\uff0c\u800c\u4e14\u662f\u4e00\u4e2a\u6307\u9488\u5e38\u91cf\uff0c\u4e0d\u80fd\u4f5c\u81ea\u589e\u3001\u81ea\u51cf\u7b49\u64cd\u4f5c\uff0c\u4e0d\u80fd\u88ab\u4fee\u6539\uff1b", "\nchar str[10];", "\nstr++; //\u7f16\u8bd1\u51fa\u9519\uff0c\u63d0\u793astr\u4e0d\u662f\u5de6\u503c", "\uff083\uff09\u6570\u7ec4\u540d\u4f5c\u4e3a\u51fd\u6570\u5f62\u53c2\u65f6\uff0c\u6ca6\u4e3a\u666e\u901a\u6307\u9488\u3002", "Windows NT 32\u4f4d\u5e73\u53f0\u4e0b\uff0c\u6307\u9488\u7684\u957f\u5ea6\uff08\u5360\u7528\u5185\u5b58\u7684\u5927\u5c0f\uff09\u4e3a4\u5b57\u8282\uff0c\u6545sizeof( str ) \u3001sizeof ( p ) \u90fd\u4e3a4\u3002", "\u8bd5\u98983\uff1a\u5199\u4e00\u4e2a\u201c\u6807\u51c6\u201d\u5b8fMIN\uff0c\u8fd9\u4e2a\u5b8f\u8f93\u5165\u4e24\u4e2a\u53c2\u6570\u5e76\u8fd4\u56de\u8f83\u5c0f\u7684\u4e00\u4e2a\u3002\u53e6\u5916\uff0c\u5f53\u4f60\u5199\u4e0b\u9762\u7684\u4ee3\u7801\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\u4e8b\uff1f", "\nleast = MIN(*p++, b);", "\u89e3\u7b54\uff1a", "\n#define MIN(A,B) ((A) <= (B) ? (A) : (B))", "MIN(*p++, b)\u4f1a\u4ea7\u751f\u5b8f\u7684\u526f\u4f5c\u7528", "\u5256\u6790\uff1a", "\u8fd9\u4e2a\u9762\u8bd5\u9898\u4e3b\u8981\u8003\u67e5\u9762\u8bd5\u8005\u5bf9\u5b8f\u5b9a\u4e49\u7684\u4f7f\u7528\uff0c\u5b8f\u5b9a\u4e49\u53ef\u4ee5\u5b9e\u73b0\u7c7b\u4f3c\u4e8e\u51fd\u6570\u7684\u529f\u80fd\uff0c\u4f46\u662f\u5b83\u7ec8\u5f52\u4e0d\u662f\u51fd\u6570\uff0c\u800c\u5b8f\u5b9a\u4e49\u4e2d\u62ec\u5f27\u4e2d\u7684\u201c\u53c2\u6570\u201d\u4e5f\u4e0d\u662f\u771f\u7684\u53c2\u6570\uff0c\u5728\u5b8f\u5c55\u5f00\u7684\u65f6\u5019\u5bf9\u201c\u53c2\u6570\u201d\u8fdb\u884c\u7684\u662f\u4e00\u5bf9\u4e00\u7684\u66ff\u6362\u3002", "\u7a0b\u5e8f\u5458\u5bf9\u5b8f\u5b9a\u4e49\u7684\u4f7f\u7528\u8981\u975e\u5e38\u5c0f\u5fc3\uff0c\u7279\u522b\u8981\u6ce8\u610f\u4e24\u4e2a\u95ee\u9898\uff1a", "\uff081\uff09\u8c28\u614e\u5730\u5c06\u5b8f\u5b9a\u4e49\u4e2d\u7684\u201c\u53c2\u6570\u201d\u548c\u6574\u4e2a\u5b8f\u7528\u7528\u62ec\u5f27\u62ec\u8d77\u6765\u3002\u6240\u4ee5\uff0c\u4e25\u683c\u5730\u8bb2\uff0c\u4e0b\u8ff0\u89e3\u7b54\uff1a", "\n#define MIN(A,B) (A) <= (B) ? (A) : (B)", "\n#define MIN(A,B) (A <= B ? A : B )", "\u90fd\u5e94\u52240\u5206\uff1b", "\uff082\uff09\u9632\u6b62\u5b8f\u7684\u526f\u4f5c\u7528\u3002", "\u5b8f\u5b9a\u4e49#define MIN(A,B) ((A) <= (B) ? (A) : (B))\u5bf9MIN(*p++, b)\u7684\u4f5c\u7528\u7ed3\u679c\u662f\uff1a", "((*p++) <= (b) ? (*p++) : (*p++))", "\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u4f1a\u4ea7\u751f\u526f\u4f5c\u7528\uff0c\u6307\u9488p\u4f1a\u4f5c\u4e09\u6b21++\u81ea\u589e\u64cd\u4f5c\u3002", "\u9664\u6b64\u4e4b\u5916\uff0c\u53e6\u4e00\u4e2a\u5e94\u8be5\u52240\u5206\u7684\u89e3\u7b54\u662f\uff1a", "\n#define MIN(A,B) ((A) <= (B) ? (A) : (B));", "\u8fd9\u4e2a\u89e3\u7b54\u5728\u5b8f\u5b9a\u4e49\u7684\u540e\u9762\u52a0\u201c;\u201d\uff0c\u663e\u793a\u7f16\u5199\u8005\u5bf9\u5b8f\u7684\u6982\u5ff5\u6a21\u7cca\u4e0d\u6e05\uff0c\u53ea\u80fd\u88ab\u65e0\u60c5\u5730\u52240\u5206\u5e76\u88ab\u9762\u8bd5\u5b98\u6dd8\u6c70\u3002", "\u8bd5\u98984\uff1a\u4e3a\u4ec0\u4e48\u6807\u51c6\u5934\u6587\u4ef6\u90fd\u6709\u7c7b\u4f3c\u4ee5\u4e0b\u7684\u7ed3\u6784\uff1f", "\n#ifndef __INCvxWorksh", "\n#define __INCvxWorksh", "\n#ifdef __cplusplus", "extern \u201cC\u201d {", "\n#endif", "\n/*\u2026*/", "\n#ifdef __cplusplus", "\n}", "#endif", "\n#endif /* __INCvxWorksh */", "\u89e3\u7b54\uff1a", "\u5934\u6587\u4ef6\u4e2d\u7684\u7f16\u8bd1\u5b8f", "\n#ifndef\u3000__INCvxWorksh", "\n#define\u3000__INCvxWorksh", "\n#endif", "\u7684\u4f5c\u7528\u662f\u9632\u6b62\u88ab\u91cd\u590d\u5f15\u7528\u3002", "\u4f5c\u4e3a\u4e00\u79cd\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\uff0cC++\u652f\u6301\u51fd\u6570\u91cd\u8f7d\uff0c\u800c\u8fc7\u7a0b\u5f0f\u8bed\u8a00C\u5219\u4e0d\u652f\u6301\u3002\u51fd\u6570\u88abC++\u7f16\u8bd1\u540e\u5728symbol\u5e93\u4e2d\u7684\u540d\u5b57\u4e0eC\u8bed\u8a00\u7684\u4e0d\u540c\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u67d0\u4e2a\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a", "\nvoid foo(int x, int y);", "\u8be5\u51fd\u6570\u88abC\u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u5728symbol\u5e93\u4e2d\u7684\u540d\u5b57\u4e3a_foo\uff0c\u800cC++\u7f16\u8bd1\u5668\u5219\u4f1a\u4ea7\u751f\u50cf_foo_int_int\u4e4b\u7c7b\u7684\u540d\u5b57\u3002_foo_int_int\u8fd9\u6837\u7684\u540d\u5b57\u5305\u542b\u4e86\u51fd\u6570\u540d\u548c\u51fd\u6570\u53c2\u6570\u6570\u91cf\u53ca\u7c7b\u578b\u4fe1\u606f\uff0cC++\u5c31\u662f\u8003\u8fd9\u79cd\u673a\u5236\u6765\u5b9e\u73b0\u51fd\u6570\u91cd\u8f7d\u7684\u3002", "\u4e3a\u4e86\u5b9e\u73b0C\u548cC++\u7684\u6df7\u5408\u7f16\u7a0b\uff0cC++\u63d0\u4f9b\u4e86C\u8fde\u63a5\u4ea4\u6362\u6307\u5b9a\u7b26\u53f7extern \u201cC\u201d\u6765\u89e3\u51b3\u540d\u5b57\u5339\u914d\u95ee\u9898\uff0c\u51fd\u6570\u58f0\u660e\u524d\u52a0\u4e0aextern \u201cC\u201d\u540e\uff0c\u5219\u7f16\u8bd1\u5668\u5c31\u4f1a\u6309\u7167C\u8bed\u8a00\u7684\u65b9\u5f0f\u5c06\u8be5\u51fd\u6570\u7f16\u8bd1\u4e3a_foo\uff0c\u8fd9\u6837C\u8bed\u8a00\u4e2d\u5c31\u53ef\u4ee5\u8c03\u7528C++\u7684\u51fd\u6570\u4e86\u3002", "\n\u8bd5\u98985\uff1a\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u4f5c\u7528\u662f\u628a\u4e00\u4e2achar\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u5faa\u73af\u53f3\u79fbn\u4e2a\u3002\u6bd4\u5982\u539f\u6765\u662f\u201cabcdefghi\u201d\u5982\u679cn=2\uff0c\u79fb\u4f4d\u540e\u5e94\u8be5\u662f\u201chiabcdefgh\u201d", "\u51fd\u6570\u5934\u662f\u8fd9\u6837\u7684\uff1a", "\n//pStr\u662f\u6307\u5411\u4ee5\u2019\\0\u2032\u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32\u7684\u6307\u9488", "\n//steps\u662f\u8981\u6c42\u79fb\u52a8\u7684n", "void LoopMove ( char * pStr, int steps )", "\n{", "\n//\u8bf7\u586b\u5145\u2026", "\n}", "\u89e3\u7b54\uff1a", "\u6b63\u786e\u89e3\u7b541\uff1a", "\nvoid LoopMove ( char *pStr, int steps )", "\n{", "\nint n = strlen( pStr ) \u2013 steps;", "\nchar tmp[MAX_LEN];", "\nstrcpy ( tmp, pStr + n );", "\nstrcpy ( tmp + steps, pStr);", "\n*( tmp + strlen ( pStr ) ) = \u2018\\0\u2032;", "\nstrcpy( pStr, tmp );", "\n}", "\u6b63\u786e\u89e3\u7b542\uff1a", "\nvoid LoopMove ( char *pStr, int steps )", "\n{", "\nint n = strlen( pStr ) \u2013 steps;", "\nchar tmp[MAX_LEN];", "\nmemcpy( tmp, pStr + n, steps );", "\nmemcpy(pStr + steps, pStr, n );", "\nmemcpy(pStr, tmp, steps );", "\n}", "\u5256\u6790\uff1a", "\u8fd9\u4e2a\u8bd5\u9898\u4e3b\u8981\u8003\u67e5\u9762\u8bd5\u8005\u5bf9\u6807\u51c6\u5e93\u51fd\u6570\u7684\u719f\u7ec3\u7a0b\u5ea6\uff0c\u5728\u9700\u8981\u7684\u65f6\u5019\u5f15\u7528\u5e93\u51fd\u6570\u53ef\u4ee5\u5f88\u5927\u7a0b\u5ea6\u4e0a\u7b80\u5316\u7a0b\u5e8f\u7f16\u5199\u7684\u5de5\u4f5c\u91cf\u3002", "\u6700\u9891\u7e41\u88ab\u4f7f\u7528\u7684\u5e93\u51fd\u6570\u5305\u62ec\uff1a", "\uff081\uff09 strcpy", "\uff082\uff09 memcpy", "\uff083\uff09 memset", "\u8bd5\u98986\uff1a\u5df2\u77e5WAV\u6587\u4ef6\u683c\u5f0f\u5982\u4e0b\u8868\uff0c\u6253\u5f00\u4e00\u4e2aWAV\u6587\u4ef6\uff0c\u4ee5\u9002\u5f53\u7684\u6570\u636e\u7ed3\u6784\u7ec4\u7ec7WAV\u6587\u4ef6\u5934\u5e76\u89e3\u6790WAV\u683c\u5f0f\u7684\u5404\u9879\u4fe1\u606f\u3002", "WAVE\u6587\u4ef6\u683c\u5f0f\u8bf4\u660e\u8868", "\n\u504f\u79fb\u5730\u5740\u00a0\u00a0\u00a0 \u5b57\u8282\u6570\u00a0\u00a0\u00a0 \u6570\u636e\u7c7b\u578b\u00a0\u00a0\u00a0 \u5185 \u5bb9", "\n\u6587\u4ef6\u5934 \u00a0\u00a0\u00a0 00H\u00a0\u00a0\u00a0 4 \u00a0\u00a0\u00a0 Char\u00a0\u00a0\u00a0 \u201cRIFF\u201d\u6807\u5fd7", "\n04H\u00a0\u00a0\u00a0 4\u00a0\u00a0\u00a0 int32\u00a0\u00a0\u00a0 \u6587\u4ef6\u957f\u5ea6", "\n08H\u00a0\u00a0\u00a0 4\u00a0\u00a0\u00a0 Char\u00a0\u00a0\u00a0 \u201cWAVE\u201d\u6807\u5fd7", "\n0CH\u00a0\u00a0\u00a0 4\u00a0\u00a0\u00a0 Char\u00a0\u00a0\u00a0 \u201cfmt\u201d\u6807\u5fd7", "\n10H\u00a0\u00a0\u00a0 4\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0 \u8fc7\u6e21\u5b57\u8282\uff08\u4e0d\u5b9a\uff09", "\n14H\u00a0\u00a0\u00a0 2\u00a0\u00a0\u00a0 int16\u00a0\u00a0\u00a0 \u683c\u5f0f\u7c7b\u522b", "\n16H\u00a0\u00a0\u00a0 2\u00a0\u00a0\u00a0 int16\u00a0\u00a0\u00a0 \u901a\u9053\u6570", "\n18H\u00a0\u00a0\u00a0 2\u00a0\u00a0\u00a0 int16 \u00a0\u00a0\u00a0 \u91c7\u6837\u7387\uff08\u6bcf\u79d2\u6837\u672c\u6570\uff09\uff0c\u8868\u793a\u6bcf\u4e2a\u901a\u9053\u7684\u64ad\u653e\u901f\u5ea6", "\n1CH\u00a0\u00a0\u00a0 4\u00a0\u00a0\u00a0 int32\u00a0\u00a0\u00a0 \u6ce2\u5f62\u97f3\u9891\u6570\u636e\u4f20\u9001\u901f\u7387", "\n20H\u00a0\u00a0\u00a0 2\u00a0\u00a0\u00a0 int16\u00a0\u00a0\u00a0 \u6570\u636e\u5757\u7684\u8c03\u6574\u6570\uff08\u6309\u5b57\u8282\u7b97\u7684\uff09", "\n22H\u00a0\u00a0\u00a0 2\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0 \u6bcf\u6837\u672c\u7684\u6570\u636e\u4f4d\u6570", "\n24H\u00a0\u00a0\u00a0 4\u00a0\u00a0\u00a0 Char\u00a0\u00a0\u00a0 \u6570\u636e\u6807\u8bb0\u7b26\uff02data\uff02", "\n28H\u00a0\u00a0\u00a0 4\u00a0\u00a0\u00a0 int32\u00a0\u00a0\u00a0 \u8bed\u97f3\u6570\u636e\u7684\u957f\u5ea6", "\u89e3\u7b54\uff1a", "\u5c06WAV\u6587\u4ef6\u683c\u5f0f\u5b9a\u4e49\u4e3a\u7ed3\u6784\u4f53WAVEFORMAT\uff1a", "\ntypedef struct tagWaveFormat", "\n{", "\nchar cRiffFlag[4];", "\nUIN32 nFileLen;", "\nchar cWaveFlag[4];", "\nchar cFmtFlag[4];", "\nchar cTransition[4];", "\nUIN16 nFormatTag ;", "\nUIN16 nChannels;", "\nUIN16 nSamplesPerSec;", "\nUIN32 nAvgBytesperSec;", "\nUIN16 nBlockAlign;", "\nUIN16 nBitNumPerSample;", "\nchar cDataFlag[4];", "\nUIN16 nAudioLength;", "} WAVEFORMAT;", "\u5047\u8bbeWAV\u6587\u4ef6\u5185\u5bb9\u8bfb\u51fa\u540e\u5b58\u653e\u5728\u6307\u9488buffer\u5f00\u59cb\u7684\u5185\u5b58\u5355\u5143\u5185\uff0c\u5219\u5206\u6790\u6587\u4ef6\u683c\u5f0f\u7684\u4ee3\u7801\u5f88\u7b80\u5355\uff0c\u4e3a\uff1a", "\nWAVEFORMAT waveFormat;", "\nmemcpy( &waveFormat, buffer,sizeof( WAVEFORMAT ) );", "\u76f4\u63a5\u901a\u8fc7\u8bbf\u95eewaveFormat\u7684\u6210\u5458\uff0c\u5c31\u53ef\u4ee5\u83b7\u5f97\u7279\u5b9aWAV\u6587\u4ef6\u7684\u5404\u9879\u683c\u5f0f\u4fe1\u606f\u3002", "\u5256\u6790\uff1a", "\u8bd5\u98986\u8003\u67e5\u9762\u8bd5\u8005\u7ec4\u7ec7\u6570\u636e\u7ed3\u6784\u7684\u80fd\u529b\uff0c\u6709\u7ecf\u9a8c\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u8005\u5c06\u5c5e\u4e8e\u4e00\u4e2a\u6574\u4f53\u7684\u6570\u636e\u6210\u5458\u7ec4\u7ec7\u4e3a\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u5229\u7528\u6307\u9488\u7c7b\u578b\u8f6c\u6362\uff0c\u53ef\u4ee5\u5c06memcpy\u3001memset\u7b49\u51fd\u6570\u76f4\u63a5\u7528\u4e8e\u7ed3\u6784\u4f53\u5730\u5740\uff0c\u8fdb\u884c\u7ed3\u6784\u4f53\u7684\u6574\u4f53\u64cd\u4f5c\u3002 \u900f\u8fc7\u8fd9\u4e2a\u9898\u53ef\u4ee5\u770b\u51fa\u9762\u8bd5\u8005\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u7ecf\u9a8c\u662f\u5426\u4e30\u5bcc\u3002", "\u8bd5\u98987\uff1a\u7f16\u5199\u7c7bString\u7684\u6784\u9020\u51fd\u6570\u3001\u6790\u6784\u51fd\u6570\u548c\u8d4b\u503c\u51fd\u6570\uff0c\u5df2\u77e5\u7c7bString\u7684\u539f\u578b\u4e3a\uff1a", "\nclass String", "\n{", "\npublic:", "\nString(const char *str = NULL); // \u666e\u901a\u6784\u9020\u51fd\u6570", "\nString(const String &other); // \u62f7\u8d1d\u6784\u9020\u51fd\u6570", "\n~ String(void); // \u6790\u6784\u51fd\u6570", "\nString & operate =(const String &other); // \u8d4b\u503c\u51fd\u6570", "\nprivate:", "\nchar *m_data; // \u7528\u4e8e\u4fdd\u5b58\u5b57\u7b26\u4e32", "\n};", "\u89e3\u7b54\uff1a", "\n//\u666e\u901a\u6784\u9020\u51fd\u6570", "String::String(const char *str)", "\n{", "\nif(str==NULL)", "\n{", "\nm_data = new char[1]; // \u5f97\u5206\u70b9\uff1a\u5bf9\u7a7a\u5b57\u7b26\u4e32\u81ea\u52a8\u7533\u8bf7\u5b58\u653e\u7ed3\u675f\u6807\u5fd7\u2019\\0\u2032\u7684\u7a7a", "\n//\u52a0\u5206\u70b9\uff1a\u5bf9m_data\u52a0NULL \u5224\u65ad", "\n*m_data = \u2018\\0\u2032;", "\n}", "\nelse", "\n{", "\nint length = strlen(str);", "\nm_data = new char[length+1]; // \u82e5\u80fd\u52a0 NULL \u5224\u65ad\u5219\u66f4\u597d", "\nstrcpy(m_data, str);", "\n}", "\n}", "// String\u7684\u6790\u6784\u51fd\u6570", "String::~String(void)", "\n{", "\ndelete [] m_data; // \u6216delete m_data;", "\n}", "//\u62f7\u8d1d\u6784\u9020\u51fd\u6570", "String::String(const String &other) \u3000\u3000\u3000// \u5f97\u5206\u70b9\uff1a\u8f93\u5165\u53c2\u6570\u4e3aconst\u578b", "\n{", "\nint length = strlen(other.m_data);", "\nm_data = new char[length+1]; \u3000\u3000\u3000\u3000//\u52a0\u5206\u70b9\uff1a\u5bf9m_data\u52a0NULL \u5224\u65ad", "\nstrcpy(m_data, other.m_data);", "\n}", "//\u8d4b\u503c\u51fd\u6570", "String & String::operate =(const String &other) // \u5f97\u5206\u70b9\uff1a\u8f93\u5165\u53c2\u6570\u4e3aconst\u578b", "\n{", "\nif(this == &other) \u3000\u3000//\u5f97\u5206\u70b9\uff1a\u68c0\u67e5\u81ea\u8d4b\u503c", "\nreturn *this;", "\ndelete [] m_data; \u3000\u3000\u3000\u3000//\u5f97\u5206\u70b9\uff1a\u91ca\u653e\u539f\u6709\u7684\u5185\u5b58\u8d44\u6e90", "\nint length = strlen( other.m_data );", "\nm_data = new char[length+1]; \u3000//\u52a0\u5206\u70b9\uff1a\u5bf9m_data\u52a0NULL \u5224\u65ad", "\nstrcpy( m_data, other.m_data );", "\nreturn *this; \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000//\u5f97\u5206\u70b9\uff1a\u8fd4\u56de\u672c\u5bf9\u8c61\u7684\u5f15\u7528", "\n}", "\u5256\u6790\uff1a", "\u80fd\u591f\u51c6\u786e\u65e0\u8bef\u5730\u7f16\u5199\u51faString\u7c7b\u7684\u6784\u9020\u51fd\u6570\u3001\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3001\u8d4b\u503c\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u7684\u9762\u8bd5\u8005\u81f3\u5c11\u5df2\u7ecf\u5177\u5907\u4e86C++\u57fa\u672c\u529f\u768460%\u4ee5\u4e0a\uff01", "\u5728\u8fd9\u4e2a\u7c7b\u4e2d\u5305\u62ec\u4e86\u6307\u9488\u7c7b\u6210\u5458\u53d8\u91cfm_data\uff0c\u5f53\u7c7b\u4e2d\u5305\u62ec\u6307\u9488\u7c7b\u6210\u5458\u53d8\u91cf\u65f6\uff0c\u4e00\u5b9a\u8981\u91cd\u8f7d\u5176\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3001\u8d4b\u503c\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\uff0c\u8fd9\u65e2\u662f\u5bf9C++\u7a0b\u5e8f\u5458\u7684\u57fa\u672c\u8981\u6c42\uff0c\u4e5f\u662f\u300aEffective\u3000C++\u300b\u4e2d\u7279\u522b\u5f3a\u8c03\u7684\u6761\u6b3e\u3002", "\u4ed4\u7ec6\u5b66\u4e60\u8fd9\u4e2a\u7c7b\uff0c\u7279\u522b\u6ce8\u610f\u52a0\u6ce8\u91ca\u7684\u5f97\u5206\u70b9\u548c\u52a0\u5206\u70b9\u7684\u610f\u4e49\uff0c\u8fd9\u6837\u5c31\u5177\u5907\u4e8660%\u4ee5\u4e0a\u7684C++\u57fa\u672c\u529f\uff01", "\u8bd5\u98988\uff1a\u8bf7\u8bf4\u51fastatic\u548cconst\u5173\u952e\u5b57\u5c3d\u53ef\u80fd\u591a\u7684\u4f5c\u7528", "\u89e3\u7b54\uff1a", "static\u5173\u952e\u5b57\u81f3\u5c11\u6709\u4e0b\u5217n\u4e2a\u4f5c\u7528\uff1a", "\uff081\uff09\u51fd\u6570\u4f53\u5185static\u53d8\u91cf\u7684\u4f5c\u7528\u8303\u56f4\u4e3a\u8be5\u51fd\u6570\u4f53\uff0c\u4e0d\u540c\u4e8eauto\u53d8\u91cf\uff0c\u8be5\u53d8\u91cf\u7684\u5185\u5b58\u53ea\u88ab\u5206\u914d\u4e00\u6b21\uff0c\u56e0\u6b64\u5176\u503c\u5728\u4e0b\u6b21\u8c03\u7528\u65f6\u4ecd\u7ef4\u6301\u4e0a\u6b21\u7684\u503c\uff1b", "\uff082\uff09\u5728\u6a21\u5757\u5185\u7684static\u5168\u5c40\u53d8\u91cf\u53ef\u4ee5\u88ab\u6a21\u5757\u5185\u6240\u7528\u51fd\u6570\u8bbf\u95ee\uff0c\u4f46\u4e0d\u80fd\u88ab\u6a21\u5757\u5916\u5176\u5b83\u51fd\u6570\u8bbf\u95ee\uff1b", "\uff083\uff09\u5728\u6a21\u5757\u5185\u7684static\u51fd\u6570\u53ea\u53ef\u88ab\u8fd9\u4e00\u6a21\u5757\u5185\u7684\u5176\u5b83\u51fd\u6570\u8c03\u7528\uff0c\u8fd9\u4e2a\u51fd\u6570\u7684\u4f7f\u7528\u8303\u56f4\u88ab\u9650\u5236\u5728\u58f0\u660e\u5b83\u7684\u6a21\u5757\u5185\uff1b", "\uff084\uff09\u5728\u7c7b\u4e2d\u7684static\u6210\u5458\u53d8\u91cf\u5c5e\u4e8e\u6574\u4e2a\u7c7b\u6240\u62e5\u6709\uff0c\u5bf9\u7c7b\u7684\u6240\u6709\u5bf9\u8c61\u53ea\u6709\u4e00\u4efd\u62f7\u8d1d\uff1b", "\uff085\uff09\u5728\u7c7b\u4e2d\u7684static\u6210\u5458\u51fd\u6570\u5c5e\u4e8e\u6574\u4e2a\u7c7b\u6240\u62e5\u6709\uff0c\u8fd9\u4e2a\u51fd\u6570\u4e0d\u63a5\u6536this\u6307\u9488\uff0c\u56e0\u800c\u53ea\u80fd\u8bbf\u95ee\u7c7b\u7684static\u6210\u5458\u53d8\u91cf\u3002", "const\u5173\u952e\u5b57\u81f3\u5c11\u6709\u4e0b\u5217n\u4e2a\u4f5c\u7528\uff1a", "\uff081\uff09\u6b32\u963b\u6b62\u4e00\u4e2a\u53d8\u91cf\u88ab\u6539\u53d8\uff0c\u53ef\u4ee5\u4f7f\u7528const\u5173\u952e\u5b57\u3002\u5728\u5b9a\u4e49\u8be5const\u53d8\u91cf\u65f6\uff0c\u901a\u5e38\u9700\u8981\u5bf9\u5b83\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u56e0\u4e3a\u4ee5\u540e\u5c31\u6ca1\u6709\u673a\u4f1a\u518d\u53bb\u6539\u53d8\u5b83\u4e86\uff1b", "\uff082\uff09\u5bf9\u6307\u9488\u6765\u8bf4\uff0c\u53ef\u4ee5\u6307\u5b9a\u6307\u9488\u672c\u8eab\u4e3aconst\uff0c\u4e5f\u53ef\u4ee5\u6307\u5b9a\u6307\u9488\u6240\u6307\u7684\u6570\u636e\u4e3aconst\uff0c\u6216\u4e8c\u8005\u540c\u65f6\u6307\u5b9a\u4e3aconst\uff1b", "\uff083\uff09\u5728\u4e00\u4e2a\u51fd\u6570\u58f0\u660e\u4e2d\uff0cconst\u53ef\u4ee5\u4fee\u9970\u5f62\u53c2\uff0c\u8868\u660e\u5b83\u662f\u4e00\u4e2a\u8f93\u5165\u53c2\u6570\uff0c\u5728\u51fd\u6570\u5185\u90e8\u4e0d\u80fd\u6539\u53d8\u5176\u503c\uff1b", "\uff084\uff09\u5bf9\u4e8e\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u82e5\u6307\u5b9a\u5176\u4e3aconst\u7c7b\u578b\uff0c\u5219\u8868\u660e\u5176\u662f\u4e00\u4e2a\u5e38\u51fd\u6570\uff0c\u4e0d\u80fd\u4fee\u6539\u7c7b\u7684\u6210\u5458\u53d8\u91cf\uff1b", "\uff085\uff09\u5bf9\u4e8e\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u6709\u65f6\u5019\u5fc5\u987b\u6307\u5b9a\u5176\u8fd4\u56de\u503c\u4e3aconst\u7c7b\u578b\uff0c\u4ee5\u4f7f\u5f97\u5176\u8fd4\u56de\u503c\u4e0d\u4e3a\u201c\u5de6\u503c\u201d\u3002\u4f8b\u5982\uff1a", "\nconst classA operator*(const classA& a1,const classA& a2);", "operator*\u7684\u8fd4\u56de\u7ed3\u679c\u5fc5\u987b\u662f\u4e00\u4e2aconst\u5bf9\u8c61\u3002\u5982\u679c\u4e0d\u662f\uff0c\u8fd9\u6837\u7684\u53d8\u6001\u4ee3\u7801\u4e5f\u4e0d\u4f1a\u7f16\u8bd1\u51fa\u9519\uff1a", "\nclassA a, b, c;", "\n(a * b) = c; // \u5bf9a*b\u7684\u7ed3\u679c\u8d4b\u503c", "\u64cd\u4f5c(a * b) = c\u663e\u7136\u4e0d\u7b26\u5408\u7f16\u7a0b\u8005\u7684\u521d\u8877\uff0c\u4e5f\u6ca1\u6709\u4efb\u4f55\u610f\u4e49\u3002", "\u5256\u6790\uff1a", "\u60ca\u8bb6\u5417\uff1f\u5c0f\u5c0f\u7684static\u548cconst\u5c45\u7136\u6709\u8fd9\u4e48\u591a\u529f\u80fd\uff0c\u6211\u4eec\u80fd\u56de\u7b54\u51e0\u4e2a\uff1f\u5982\u679c\u53ea\u80fd\u56de\u7b541~2\u4e2a\uff0c\u90a3\u8fd8\u771f\u5f97\u95ed\u5173\u518d\u597d\u597d\u4fee\u70bc\u4fee\u70bc\u3002", "\u8fd9\u4e2a\u9898\u53ef\u4ee5\u8003\u67e5\u9762\u8bd5\u8005\u5bf9\u7a0b\u5e8f\u8bbe\u8ba1\u77e5\u8bc6\u7684\u638c\u63e1\u7a0b\u5ea6\u662f\u521d\u7ea7\u3001\u4e2d\u7ea7\u8fd8\u662f\u6bd4\u8f83\u6df1\u5165\uff0c\u6ca1\u6709\u4e00\u5b9a\u7684\u77e5\u8bc6\u5e7f\u5ea6\u548c\u6df1\u5ea6\uff0c\u4e0d\u53ef\u80fd\u5bf9\u8fd9\u4e2a\u95ee\u9898\u7ed9\u51fa\u5168\u9762\u7684\u89e3\u7b54\u3002\u5927\u591a\u6570\u4eba\u53ea\u80fd\u56de\u7b54\u51fastatic\u548cconst\u5173\u952e\u5b57\u7684\u90e8\u5206\u529f\u80fd\u3002", "4.\u6280\u5de7\u9898", "\u8bd5\u98981\uff1a\u8bf7\u5199\u4e00\u4e2aC\u51fd\u6570\uff0c\u82e5\u5904\u7406\u5668\u662fBig_endian\u7684\uff0c\u5219\u8fd4\u56de0\uff1b\u82e5\u662fLittle_endian\u7684\uff0c\u5219\u8fd4\u56de1", "\u89e3\u7b54\uff1a", "\nint checkCPU()", "\n{", "\n{", "\nunion w", "\n{", "\nint a;", "\nchar b;", "\n} c;", "\nc.a = 1;", "\nreturn (c.b == 1);", "\n}", "\n}", "\u5256\u6790\uff1a", "\u5d4c\u5165\u5f0f\u7cfb\u7edf\u5f00\u53d1\u8005\u5e94\u8be5\u5bf9Little-endian\u548cBig-endian\u6a21\u5f0f\u975e\u5e38\u4e86\u89e3\u3002\u91c7\u7528Little-endian\u6a21\u5f0f\u7684CPU\u5bf9\u64cd\u4f5c\u6570\u7684\u5b58\u653e\u65b9\u5f0f\u662f\u4ece\u4f4e\u5b57\u8282\u5230\u9ad8\u5b57\u8282\uff0c\u800cBig-endian\u6a21\u5f0f\u5bf9\u64cd\u4f5c\u6570\u7684\u5b58\u653e\u65b9\u5f0f\u662f\u4ece\u9ad8\u5b57\u8282\u5230\u4f4e\u5b57\u8282\u3002\u4f8b\u5982\uff0c16bit\u5bbd\u7684\u65700\u00d71234\u5728Little-endian\u6a21\u5f0fCPU\u5185\u5b58\u4e2d\u7684\u5b58\u653e\u65b9\u5f0f\uff08\u5047\u8bbe\u4ece\u5730\u57400\u00d74000\u5f00\u59cb\u5b58\u653e\uff09\u4e3a\uff1a", "\n\u5185\u5b58\u5730\u5740\u00a0\u00a0\u00a0 \u5b58\u653e\u5185\u5bb9", "\n0\u00d74000\u00a0\u00a0\u00a0 0\u00d734", "\n0\u00d74001\u00a0\u00a0\u00a0 0\u00d712", "\u800c\u5728Big-endian\u6a21\u5f0fCPU\u5185\u5b58\u4e2d\u7684\u5b58\u653e\u65b9\u5f0f\u5219\u4e3a\uff1a", "\n\u5185\u5b58\u5730\u5740\u00a0\u00a0\u00a0 \u5b58\u653e\u5185\u5bb9", "\n0\u00d74000\u00a0\u00a0\u00a0 0\u00d712", "\n0\u00d74001\u00a0\u00a0\u00a0 0\u00d734", "32bit\u5bbd\u7684\u65700\u00d712345678\u5728Little-endian\u6a21\u5f0fCPU\u5185\u5b58\u4e2d\u7684\u5b58\u653e\u65b9\u5f0f\uff08\u5047\u8bbe\u4ece\u5730\u57400\u00d74000\u5f00\u59cb\u5b58\u653e\uff09\u4e3a\uff1a", "\n\u5185\u5b58\u5730\u5740\u00a0\u00a0\u00a0 \u5b58\u653e\u5185\u5bb9", "\n0\u00d74000\u00a0\u00a0\u00a0 0\u00d778", "\n0\u00d74001\u00a0\u00a0\u00a0 0\u00d756", "\n0\u00d74002\u00a0\u00a0\u00a0 0\u00d734", "\n0\u00d74003\u00a0\u00a0\u00a0 0\u00d712", "\u800c\u5728Big-endian\u6a21\u5f0fCPU\u5185\u5b58\u4e2d\u7684\u5b58\u653e\u65b9\u5f0f\u5219\u4e3a\uff1a", "\n\u5185\u5b58\u5730\u5740\u00a0\u00a0\u00a0 \u5b58\u653e\u5185\u5bb9", "\n0\u00d74000\u00a0\u00a0\u00a0 0\u00d712", "\n0\u00d74001\u00a0\u00a0\u00a0 0\u00d734", "\n0\u00d74002\u00a0\u00a0\u00a0 0\u00d756", "\n0\u00d74003\u00a0\u00a0\u00a0 0\u00d778", "\u8054\u5408\u4f53union\u7684\u5b58\u653e\u987a\u5e8f\u662f\u6240\u6709\u6210\u5458\u90fd\u4ece\u4f4e\u5730\u5740\u5f00\u59cb\u5b58\u653e\uff0c\u9762\u8bd5\u8005\u7684\u89e3\u7b54\u5229\u7528\u8be5\u7279\u6027\uff0c\u8f7b\u677e\u5730\u83b7\u5f97\u4e86CPU\u5bf9\u5185\u5b58\u91c7\u7528Little-endian\u8fd8\u662fBig-endian\u6a21\u5f0f\u8bfb\u5199\u3002\u5982\u679c\u8c01\u80fd\u5f53\u573a\u7ed9\u51fa\u8fd9\u4e2a\u89e3\u7b54\uff0c\u90a3\u7b80\u76f4\u5c31\u662f\u4e00\u4e2a\u5929\u624d\u7684\u7a0b\u5e8f\u5458\u3002", "\u8bd5\u98982\uff1a\u5199\u4e00\u4e2a\u51fd\u6570\u8fd4\u56de1+2+3+\u2026+n\u7684\u503c\uff08\u5047\u5b9a\u7ed3\u679c\u4e0d\u4f1a\u8d85\u8fc7\u957f\u6574\u578b\u53d8\u91cf\u7684\u8303\u56f4\uff09", "\u89e3\u7b54\uff1a", "\nint Sum( int n )", "\n{", "\nreturn ( (long)1 + n) * n / 2;\u3000\u3000//\u6216return (1l + n) * n / 2;", "\n}", "\u5256\u6790\uff1a", "\u5bf9\u4e8e\u8fd9\u4e2a\u9898\uff0c\u53ea\u80fd\u8bf4\uff0c\u4e5f\u8bb8\u6700\u7b80\u5355\u7684\u7b54\u6848\u5c31\u662f\u6700\u597d\u7684\u7b54\u6848\u3002\u4e0b\u9762\u7684\u89e3\u7b54\uff0c\u6216\u8005\u57fa\u4e8e\u4e0b\u9762\u7684\u89e3\u7b54\u601d\u8def\u53bb\u4f18\u5316\uff0c\u4e0d\u7ba1\u600e\u4e48\u201c\u6298\u817e\u201d\uff0c\u5176\u6548\u7387\u4e5f\u4e0d\u53ef\u80fd\u4e0e\u76f4\u63a5return ( 1 l + n ) * n / 2\u76f8\u6bd4\uff01", "\nint Sum( int n )", "\n{", "\nlong sum = 0;", "\nfor( int i=1; i<=n; i++ )", "\n{", "\nsum += i;", "\n}", "\nreturn sum;", "\n}"], "title": "C/C++\u7a0b\u5e8f\u5458\u5e38\u89c1\u9762\u8bd5\u9898(2)"},
{"contents": ["1\u3001\u4f30\u8ba1\u4e00\u4e0b\u676d\u5dde\u6709\u591a\u5c11\u8f6f\u4ef6\u5de5\u7a0b\u5e08\uff0c\u5982\u679c\u5141\u8bb8\uff0c\u4f60\u8fd8\u9700\u8981\u90a3\u4e9b\u8c03\u7814\u5de5\u4f5c\uff1f\u5e76\u7ed9\u51fa\u4f60\u7684\u63a8\u5bfc\u8fc7\u7a0b\u3002\u4f60\u8ba4\u4e3a\u4f60\u7684 \u4f30\u7b97\u7ed3\u679c\u53ef\u4fe1\u5417\uff1f", "2\u3001\u770b\u8fc7\u90a3\u4e9b\u8f6f\u4ef6\u65b9\u9762\u7684\u4e66\u7c4d", "3\u3001\u4ec0\u4e48\u662f\u8f6f\u4ef6\uff0c\u8f6f\u4ef6\u5f00\u53d1\u5305\u62ec\u90a3\u4e9b\u6b65\u9aa4\uff0c\u5e76\u8bf4\u51fa\u4f60\u5bf9\u8fd9\u4e9b\u6b65\u9aa4\u7684\u7406\u89e3", "4\u3001OSI\u7f51\u7edc\u7ed3\u6784\u7684\u4e03\u5c42\u6a21\u578b\u5206\u522b\u662f\u4ec0\u4e48\uff0c\u5e76\u8bf4\u51fa\u4f60\u8ba4\u4e3a\u5212\u5206\u4e3a7\u5c42\u7684\u7406\u7531\u3002", "5\u3001\u8f6f\u4ef6\u8fc7\u7a0b\u4e2d\u4e86\u89e3\u3001\u4f7f\u7528\u8fc7\u7248\u672c\u63a7\u5236\u6216\u5efa\u6a21\u5de5\u5177\u5417\uff1f\u5bf9\u4f60\u5de5\u4f5c\u6709\u4ec0\u4e48\u5e2e\u52a9\uff1f", "6\u3001\u8f6f\u4ef6\u8fc7\u7a0b\u4e2d\u4f60\u90fd\u5199\u8fc7\u4ec0\u4e48\u6587\u6863\uff1f\u5206\u522b\u662f\u4ec0\u4e48\u76ee\u7684\u53ca\u5176\u5bf9\u4f60\u7684\u5e2e\u52a9\uff1f", "7\u3001\u6211\u4eec\u77e5\u9053\uff0cC++\u5c06\u5185\u5b58\u5212\u5206\u4e3a\u4e09\u4e2a\u903b\u8f91\u533a\u57df\uff1a\u5806\u3001\u6808\u548c\u9759\u6001\u5b58\u50a8\uff0c\u8bf7\u8bf4\u51fa\u5b83\u4eec\u7684\u533a\u522b\u53ca\u4f60\u7684\u7406\u89e3\u3002", "8\u3001\u5b57\u7b26\u4e32A\u662f\u7531n\u4e2a\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\uff08a ~ z\uff09\u6784\u6210\u7684\uff0c\u5b9a\u4e49\u4e3achar A[n]\u3002\u4f60\u80fd\u7528\u66f4\u5c11\u7684\u7a7a\u95f4\u8868\u793a\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5417\uff1f\u8bf7\u5199\u51fa\u4ecechar A[n]\u5230\u4f60\u7684\u65b0\u7684\u50a8\u5b58\u683c\u5f0f\u7684\u8f6c\u6362\u51fd\u6570\u3002\uff08\u8bf7\u7528C/C++\u7f16\u7a0b\uff0c\u4e0d\u5141\u8bb8\u4e0a\u673a\u64cd\u4f5c\uff09", "12\u3001\u5bf9\u73b0\u5728\u7684Stack\uff08\u6808\uff09\u6570\u636e\u7ed3\u6784\u8fdb\u884c\u6539\u8fdb\uff0c\u52a0\u4e00\u4e2amin()\u529f\u80fd\uff0c\u4f7f\u4e4b\u80fd\u5728\u5e38\u6570\uff0c\u5373O(1)\uff0c\u65f6\u95f4\u5185\u7ed9\u51fa\u6808\u4e2d\u7684\u6700\u5c0f\u503c\u3002\u53ef\u5bf9push()\u548cpop()\u51fd\u6570\u8fdb\u884c\u4fee\u6539\uff0c\u4f46\u8981\u6c42\u5176\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u53ea\u80fd\u662fO(1)\u3002", "9\u3001C++\u6784\u9020\u51fd\u6570\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u662f\u865a\u51fd\u6570\uff1f", "10\u3001C++\u4e2dvirtual\u4e0einline\u7684\u542b\u4e49\u5206\u522b\u662f\u4ec0\u4e48\uff1f\u865a\u51fd\u6570\u7684\u7279\u70b9\uff1b\u5185\u8054\u51fd\u6570\u7684\u7279\u70b9\uff1b\u4e00\u4e2a\u51fd\u6570\u80fd\u5426\u5373\u662f\u865a\u51fd\u6570\u53c8\u662f\u5185\u8054\u51fd\u6570\uff1f", "12\u3001\u8bf7\u5217\u51fa\u5b9e\u73b0C++\u4ee3\u7801\u4f60\u8ba4\u4e3a\u9700\u8981\u6ce8\u610f\u7684\u4e00\u4e9b\u95ee\u9898\u3002", "11\u3001\u4f60\u5728\u539f\u6765\u7684\u9879\u76ee\u4e2d\u6709\u6ca1\u6709\u9047\u5230\u4ec0\u4e48\u56f0\u96be\uff0c\u53c8\u662f\u5982\u4f55\u89e3\u51b3\u7684\uff1f"], "title": "\u4f30\u7b97\u676d\u5dde\u6709\u591a\u5c11\u8f6f\u4ef6\u5de5\u7a0b\u5e08\uff1f"},
{"contents": ["int Sum( int n )", "\n{", "\n\u3000return ( (long)1 + n) * n / 2;\u3000\u3000//\u6216return (1l + n) * n / 2;", "\n}", "\n\u3000\u3000\u5256\u6790\uff1a", "\n\u3000", "\n\u3000\u3000\u5bf9\u4e8e\u8fd9\u4e2a\u9898\uff0c\u53ea\u80fd\u8bf4\uff0c\u4e5f\u8bb8\u6700\u7b80\u5355\u7684\u7b54\u6848\u5c31\u662f\u6700\u597d\u7684\u7b54\u6848\u3002\u4e0b\u9762\u7684\u89e3\u7b54\uff0c\u6216\u8005\u57fa\u4e8e\u4e0b\u9762\u7684\u89e3\u7b54\u601d\u8def\u53bb\u4f18\u5316\uff0c\u5176\u6548\u7387\u4e5f\u4e0d\u53ef\u80fd\u4e0e\u76f4\u63a5return ( 1 l + n ) * n / 2\u76f8\u6bd4\uff01", "int Sum( int n )", "\n{", "\n\u3000long sum = 0;", "\n\u3000for( int i=1; i<=n; i++ )", "\n\u3000{", "\n\u3000\u3000sum += i;", "\n\u3000}", "\n\u3000return sum;", "\n}"], "title": "\u5199\u4e00\u4e2a\u51fd\u6570\u8fd4\u56de1+2+3+\u2026+n\u7684\u503c\uff08\u5047\u5b9a\u7ed3\u679c\u4e0d\u4f1a\u8d85\u8fc7\u957f\u6574\u578b\u53d8\u91cf\u7684\u8303\u56f4\uff09"},
{"contents": ["\u8fd9\u662fJava\u4e0eC++\u533a\u522b\u7684\u4e00\u4e2a\u6bd4\u8f83\u5b8c\u6574\u7684\u7b54\u6848\uff0c\u5927\u5bb6\u53ef\u4ee5\u5b66\u4e60\u4e00\u4e0b\u3002", "JAVA\u548cC++\u90fd\u662f\u9762\u5411\u5bf9\u8c61\u8bed\u8a00\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u4eec\u90fd\u80fd\u591f\u5b9e\u73b0\u9762\u5411\u5bf9\u8c61\u601d\u60f3\uff08\u5c01\u88c5\uff0c\u7ee7\u4e58\uff0c\u591a\u6001\uff09\u3002\u800c\u7531\u4e8ec++\u4e3a\u4e86\u7167\u987e\u5927\u91cf\u7684C\u8bed\u8a00\u4f7f\u7528\u8005\uff0c", "\n\u800c\u517c\u5bb9\u4e86C\uff0c\u4f7f\u5f97\u81ea\u8eab\u4ec5\u4ec5\u6210\u4e3a\u4e86\u5e26\u7c7b\u7684C\u8bed\u8a00\uff0c\u591a\u591a\u5c11\u5c11\u5f71\u54cd\u4e86\u5176\u9762\u5411\u5bf9\u8c61\u7684\u5f7b\u5e95\u6027\uff01JAVA\u5219\u662f\u5b8c\u5168\u7684\u9762\u5411\u5bf9\u8c61\u8bed\u8a00\uff0c\u5b83\u53e5\u6cd5\u66f4\u6e05\u6670\uff0c\u89c4\u6a21\u66f4\u5c0f\uff0c\u66f4\u6613\u5b66\u3002\u5b83\u662f\u5728\u5bf9\u591a\u79cd\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u8fdb\u884c\u4e86\u6df1\u5165\u7ec6\u81f4\u7814\u7a76\u7684\u57fa\u7840\u4e0a\uff0c\u636e\u5f03\u4e86\u5176\u4ed6\u8bed\u8a00\u7684\u4e0d\u8db3\u4e4b\u5904\uff0c\u4ece\u6839\u672c\u4e0a\u89e3\u51b3\u4e86c++\u7684\u56fa\u6709\u7f3a\u9677\u3002", "\nJava\u548cc++\u7684\u76f8\u4f3c\u4e4b\u5904\u591a\u4e8e\u4e0d\u540c\u4e4b\u5904\uff0c\u4f46\u4e24\u79cd\u8bed\u8a00\u95ee\u51e0\u5904\u4e3b\u8981\u7684\u4e0d\u540c\u4f7f\u5f97Java\u66f4\u5bb9\u6613\u5b66\u4e60\uff0c\u5e76\u4e14\u7f16\u7a0b\u73af\u5883\u66f4\u4e3a\u7b80\u5355\u3002", "\n\u6211\u5728\u8fd9\u91cc\u4e0d\u80fd\u5b8c\u5168\u5217\u51fa\u4e0d\u540c\u4e4b\u5904\uff0c\u4ec5\u5217\u51fa\u6bd4\u8f83\u663e\u8457\u7684\u533a\u522b\uff1a", "\n1\uff0e\u6307\u9488", "\nJAVA\u8bed\u8a00\u8ba9\u7f16\u7a0b\u8005\u65e0\u6cd5\u627e\u5230\u6307\u9488\u6765\u76f4\u63a5\u8bbf\u95ee\u5185\u5b58\u65e0\u6307\u9488\uff0c\u5e76\u4e14\u589e\u6dfb\u4e86\u81ea\u52a8\u7684\u5185\u5b58\u7ba1\u7406\u529f\u80fd\uff0c\u4ece\u800c\u6709\u6548\u5730\u9632\u6b62\u4e86c\uff0fc++\u8bed\u8a00\u4e2d\u6307\u9488\u64cd\u4f5c\u5931\u8bef\uff0c\u5982\u91ce\u6307\u9488\u6240\u9020\u6210\u7684\u7cfb\u7edf\u5d29\u6e83\u3002\u4f46\u4e5f\u4e0d\u662f\u8bf4JAVA\u6ca1\u6709\u6307\u9488\uff0c\u865a\u62df\u673a\u5185\u90e8\u8fd8\u662f\u4f7f\u7528\u4e86\u6307\u9488\uff0c\u53ea\u662f\u5916\u4eba\u4e0d\u5f97\u4f7f\u7528\u800c\u5df2\u3002\u8fd9\u6709\u5229\u4e8eJava\u7a0b\u5e8f\u7684\u5b89\u5168\u3002", "\n2\uff0e\u591a\u91cd\u7ee7\u627f", "\nc++\u652f\u6301\u591a\u91cd\u7ee7\u627f\uff0c\u8fd9\u662fc++\u7684\u4e00\u4e2a\u7279\u5f81\uff0c\u5b83\u5141\u8bb8\u591a\u7236\u7c7b\u6d3e\u751f\u4e00\u4e2a\u7c7b\u3002\u5c3d\u7ba1\u591a\u91cd\u7ee7\u627f\u529f\u80fd\u5f88\u5f3a\uff0c\u4f46\u4f7f\u7528\u590d\u6742\uff0c\u800c\u4e14\u4f1a\u5f15\u8d77\u8bb8\u591a\u9ebb\u70e6\uff0c\u7f16\u8bd1\u7a0b\u5e8f\u5b9e\u73b0\u5b83\u4e5f\u5f88\u4e0d\u5bb9\u6613\u3002Java\u4e0d\u652f\u6301\u591a\u91cd\u7ee7\u627f\uff0c\u4f46\u5141\u8bb8\u4e00\u4e2a\u7c7b\u7ee7\u627f\u591a\u4e2a\u63a5\u53e3(extends+implement)\uff0c\u5b9e\u73b0\u4e86c++\u591a\u91cd\u7ee7\u627f\u7684\u529f\u80fd\uff0c\u53c8\u907f\u514d\u4e86c++\u4e2d\u7684\u591a\u91cd\u7ee7\u627f\u5b9e\u73b0\u65b9\u5f0f\u5e26\u6765\u7684\u8bf8\u591a\u4e0d\u4fbf\u3002", "\n3\uff0e\u6570\u636e\u7c7b\u578b\u53ca\u7c7b", "\nJava\u662f\u5b8c\u5168\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\uff0c\u6240\u6709\u51fd\u6570\u548c\u53d8\u91cf\u90e8\u5fc5\u987b\u662f\u7c7b\u7684\u4e00\u90e8\u5206\u3002\u9664\u4e86\u57fa\u672c\u6570\u636e\u7c7b\u578b\u4e4b\u5916\uff0c\u5176\u4f59\u7684\u90fd\u4f5c\u4e3a\u7c7b\u5bf9\u8c61\uff0c\u5305\u62ec\u6570\u7ec4\u3002\u5bf9\u8c61\u5c06\u6570\u636e\u548c\u65b9\u6cd5\u7ed3\u5408\u8d77\u6765\uff0c\u628a\u5b83\u4eec\u5c01\u88c5\u5728\u7c7b\u4e2d\uff0c\u8fd9\u6837\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u53ef\u5b9e\u73b0\u81ea\u5df1\u7684\u7279\u70b9\u548c\u884c\u4e3a\u3002\u800cc++\u5141\u8bb8\u5c06\u51fd\u6570\u548c\u53d8\u91cf\u5b9a\u4e49\u4e3a\u5168\u5c40\u7684\u3002\u6b64\u5916\uff0cJava\u4e2d\u53d6\u6d88\u4e86c\uff0fc++\u4e2d\u7684\u7ed3\u6784\u548c\u8054\u5408\uff0c\u6d88\u9664\u4e86\u4e0d\u5fc5\u8981\u7684\u9ebb\u70e6\u3002", "\n4\uff0e\u81ea\u52a8\u5185\u5b58\u7ba1\u7406", "\nJava\u7a0b\u5e8f\u4e2d\u6240\u6709\u7684\u5bf9\u8c61\u90fd\u662f\u7528new\u64cd\u4f5c\u7b26\u5efa\u7acb\u5728\u5185\u5b58\u5806\u6808\u4e0a\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u7b26\u7c7b\u4f3c\u4e8ec++\u7684new\u64cd\u4f5c\u7b26\u3002\u4e0b\u9762\u7684\u8bed\u53e5\u7531\u4e00\u4e2a\u5efa\u7acb\u4e86\u4e00\u4e2a\u7c7bRead\u7684\u5bf9\u8c61\uff0c\u7136\u540e\u8c03\u7528\u8be5\u5bf9\u8c61\u7684work\u65b9\u6cd5\uff1a", "\nRead r\uff1dnew Read()\uff1b", "\nr.work()\uff1b", "\n\u8bed\u53e5Read r\uff1dnew Read()\uff1b\u5728\u5806\u6808\u7ed3\u6784\u4e0a\u5efa\u7acb\u4e86\u4e00\u4e2aRead\u7684\u5b9e\u4f8b\u3002Java\u81ea\u52a8\u8fdb\u884c\u65e0\u7528\u5185\u5b58\u56de\u6536\u64cd\u4f5c\uff0c\u4e0d\u9700\u8981\u7a0b\u5e8f\u5458\u8fdb\u884c\u5220\u9664\u3002\u800cc\u5341\u5341\u4e2d\u5fc5\u987b\u7531\u7a0b\u5e8f\u8d1d\u91ca\u653e\u5185\u5b58\u8d44\u6e90\uff0c\u589e\u52a0\u4e86\u7a0b\u5e8f\u8bbe\u8ba1\u8005\u7684\u8d1f\u6254\u3002Java\u4e2d\u5f53\u4e00\u4e2a\u5bf9\u8c61\u4e0d\u88ab\u518d\u7528\u5230\u65f6\uff0c\u65e0\u7528\u5185\u5b58\u56de\u6536\u5668\u5c06\u7ed9\u5b83\u52a0\u4e0a\u6807\u7b7e\u4ee5\u793a\u5220\u9664\u3002JAVA\u91cc\u65e0\u7528\u5185\u5b58\u56de\u6536\u7a0b\u5e8f\u662f\u4ee5\u7ebf\u7a0b\u65b9\u5f0f\u5728\u540e\u53f0\u8fd0\u884c\u7684\uff0c\u5229\u7528\u7a7a\u95f2\u65f6\u95f4\u5de5\u4f5c\u3002", "\n5\uff0e\u64cd\u4f5c\u7b26\u91cd\u8f7d", "\nJava\u4e0d\u652f\u6301\u64cd\u4f5c\u7b26\u91cd\u8f7d\u3002\u64cd\u4f5c\u7b26\u91cd\u8f7d\u88ab\u8ba4\u4e3a\u662fc\u5341\u5341\u7684\u7a81\u51fa\u7279\u5f81\uff0c\u5728Java\u4e2d\u867d\u7136\u7c7b\u5927\u4f53\u4e0a\u53ef\u4ee5\u5b9e\u73b0\u8fd9\u6837\u7684\u529f\u80fd\uff0c\u4f46\u64cd\u4f5c\u7b26\u91cd\u8f7d\u7684\u65b9\u4fbf\u6027\u4ecd\u7136\u4e22\u5931\u4e86\u4e0d\u5c11\u3002Java\u8bed\u8a00\u4e0d\u652f\u6301\u64cd\u4f5c\u7b26\u91cd\u8f7d\u662f\u4e3a\u4e86\u4fdd\u6301Java\u8bed\u8a00\u5c3d\u53ef\u80fd\u7b80\u5355\u3002", "\n6\uff0e\u9884\u5904\u7406\u529f\u80fd", "\nJava\u4e0d\u652f\u6301\u9884\u5904\u7406\u529f\u80fd\u3002c\uff0fc\u5341\u5341\u5728\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u90fd\u6709\u4e00\u4e2a\u9884\u7f16\u6cfd\u9636\u6bb5\uff0c\u5373\u4f17\u6240\u5468\u77e5\u7684\u9884\u5904\u7406\u5668\u3002\u9884\u5904\u7406\u5668\u4e3a\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u4e86\u65b9\u4fbf\uff0c\u4f46\u589e\u52a0\u4e01\u7f16\u8bd1\u7684\u590d\u6742\u6027\u3002JAVA\u865a\u62df\u673a\u6ca1\u6709\u9884\u5904\u7406\u5668\uff0c\u4f46\u5b83\u63d0\u4f9b\u7684\u5f15\u5165\u8bed\u53e5(import)\u4e0ec\u5341\u5341\u9884\u5904\u7406\u5668\u7684\u529f\u80fd\u7c7b\u4f3c\u3002", "\n7. Java\u4e0d\u652f\u6301\u7f3a\u7701\u51fd\u6570\u53c2\u6570\uff0c\u800cc\u5341\u5341\u652f\u6301", "\n\u5728c\u4e2d\uff0c\u4ee3\u7801\u7ec4\u7ec7\u5728\u51fd\u6570\u4e2d\uff0c\u51fd\u6570\u53ef\u4ee5\u8bbf\u95ee\u7a0b\u5e8f\u7684\u5168\u5c40\u53d8\u91cf\u3002c\u5341\u5341\u589e\u52a0\u4e86\u7c7b\uff0c\u63d0\u4f9b\u4e86\u7c7b\u7b97\u6cd5\uff0c\u8be5\u7b97\u6cd5\u662f\u4e0e\u7c7b\u76f8\u8fde\u7684\u51fd\u6570\uff0cc\u5341\u5341\u7c7b\u65b9\u6cd5\u4e0eJava\u7c7b\u65b9\u6cd5\u5341\u5206\u76f8\u4f3c\uff0c\u7136\u800c\uff0c\u7531\u4e8ec\u5341\u5341\u4ecd\u7136\u652f\u6301c\uff0c\u6240\u4ee5\u4e0d\u80fd\u963b\u6b62c\u5341\u5341\u5f00\u53d1\u4eba\u5458\u4f7f\u7528\u51fd\u6570\uff0c\u7ed3\u679c\u51fd\u6570\u548c\u65b9\u6cd5\u6df7\u5408\u4f7f\u7528\u4f7f\u5f97\u7a0b\u5e8f\u6bd4\u8f83\u6df7\u4e71\u3002", "\nJava\u6ca1\u6709\u51fd\u6570\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u6bd4c\u5341\u5341\u66f4\u7eaf\u7684\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\uff0cJava\u5f3a\u8feb\u5f00\u53d1\u4eba\u5458\u628a\u6240\u6709\u4f8b\u884c\u7a0b\u5e8f\u5305\u62ec\u5728\u7c7b\u4e2d\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u7528\u65b9\u6cd5\u5b9e\u73b0\u4f8b\u884c\u7a0b\u5e8f\u53ef\u6fc0\u52b1\u5f00\u53d1\u4eba\u5458\u66f4\u597d\u5730\u7ec4\u7ec7\u7f16\u7801\u3002", "\n8 \u5b57\u7b26\u4e32", "\nc\u548cc\u5341\u5341\u4e0d\u652f\u6301\u5b57\u7b26\u4e32\u53d8\u91cf\uff0c\u5728c\u548cc\u5341\u5341\u7a0b\u5e8f\u4e2d\u4f7f\u7528Null\u7ec8\u6b62\u7b26\u4ee3\u8868\u5b57\u7b26\u4e32\u7684\u7ed3\u675f\uff0c\u5728Java\u4e2d\u5b57\u7b26\u4e32\u662f\u7528\u7c7b\u5bf9\u8c61(strinR\u548cstringBuffer)\u6765\u5b9e\u73b0\u7684\uff0c\u8fd9\u4e9b\u7c7b\u5bf9\u8c61\u662fJava\u8bed\u8a00\u7684\u6838\u5fc3\uff0c\u7528\u7c7b\u5bf9\u8c61\u5b9e\u73b0\u5b57\u7b26\u4e32\u6709\u4ee5\u4e0b\u51e0\u4e2a\u4f18\u70b9\uff1a", "\n(1)\u5728\u6574\u4e2a\u7cfb\u7edf\u4e2d\u5efa\u7acb\u5b57\u7b26\u4e32\u548c\u8bbf\u95ee\u5b57\u7b26\u4e32\u5143\u7d20\u7684\u65b9\u6cd5\u662f\u4e00\u81f4\u7684\uff1b", "\n(2)J3\u9633\u5b57\u7b26\u4e32\u7c7b\u662f\u4f5c\u4e3aJava\u8bed\u8a00\u7684\u4e00\u90e8\u5206\u5b9a\u4e49\u7684\uff0c\u800c\u4e0d\u662f\u4f5c\u4e3a\u5916\u52a0\u7684\u5ef6\u4f38\u90e8\u5206\uff1b", "\n(3)Java\u5b57\u7b26\u4e32\u6267\u884c\u8fd0\u884c\u65f6\u68c0\u7a7a\uff0c\u53ef\u5e2e\u52a9\u6392\u9664\u4e00\u4e9b\u8fd0\u884c\u65f6\u53d1\u751f\u7684\u9519\u8bef\uff1b", "\n(4)\u53ef\u5bf9\u5b57\u7b26\u4e32\u7528\u201c\u5341\u201d\u8fdb\u884c\u8fde\u63a5\u64cd\u4f5c\u3002", "\n9\u201cgoto\u8bed\u53e5", "\n\u201c\u53ef\u6015\u201d\u7684goto\u8bed\u53e5\u662fc\u548cc++\u7684\u201c\u9057\u7269\u201d\uff0c\u5b83\u662f\u8be5\u8bed\u8a00\u6280\u672f\u4e0a\u7684\u5408\u6cd5\u90e8\u5206\uff0c\u5f15\u7528goto\u8bed\u53e5\u5f15\u8d77\u4e86\u7a0b\u5e8f\u7ed3\u6784\u7684\u6df7\u4e71\uff0c\u4e0d\u6613\u7406\u89e3\uff0cgoto\u8bed\u53e5\u5b50\u8981\u7528\u4e8e\u65e0\u6761\u4ef6\u8f6c\u79fb\u5b50\u7a0b\u5e8f\u548c\u591a\u7ed3\u6784\u5206\u652f\u6280\u672f\u3002\u9274\u4e8e\u4ee5\u5e7f\u7406\u7531\uff0cJava\u4e0d\u63d0\u4f9bgoto\u8bed\u53e5\uff0c\u5b83\u867d\u7136\u6307\u5b9agoto\u4f5c\u4e3a\u5173\u952e\u5b57\uff0c\u4f46\u4e0d\u652f\u6301\u5b83\u7684\u4f7f\u7528\uff0c\u4f7f\u7a0b\u5e8f\u7b80\u6d01\u6613\u8bfb\u3002", "\nl0\uff0e\u7c7b\u578b\u8f6c\u6362", "\n\u5728c\u548cc\u5341\u5341\u4e2d\u6709\u65f6\u51fa\u73b0\u6570\u636e\u7c7b\u578b\u7684\u9690\u542b\u8f6c\u6362\uff0c\u8fd9\u5c31\u6d89\u53ca\u4e86\u81ea\u52a8\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u5728c\u5341\u5341\u4e2d\u53ef\u5c06\u4e00\u6d6e\u70b9\u503c\u8d4b\u4e88\u6574\u578b\u53d8\u91cf\uff0c\u5e76\u53bb\u6389\u5176\u5c3e\u6570\u3002Java\u4e0d\u652f\u6301c\u5341\u5341\u4e2d\u7684\u81ea\u52a8\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u5982\u679c\u9700\u8981\uff0c\u5fc5\u987b\u7531\u7a0b\u5e8f\u663e\u5f0f\u8fdb\u884c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u3002", "\n11.\u5f02\u5e38", "\nJAVA\u4e2d\u7684\u5f02\u5e38\u673a\u5236\u7528\u4e8e\u6355\u83b7\u4f8b\u5916\u4e8b\u4ef6\uff0c\u589e\u5f3a\u7cfb\u7edf\u5bb9\u9519\u80fd\u529b", "\ntry{\uff0f\uff0f\u53ef\u80fd\u4ea7\u751f\u4f8b\u5916\u7684\u4ee3\u7801", "\n}catch(exceptionType name){", "\n//\u5904\u7406", "\n}", "\n\u5176\u4e2dexceptionType\u8868\u793a\u5f02\u5e38\u7c7b\u578b\u3002\u800cC++\u5219\u6ca1\u6709\u5982\u6b64\u65b9\u4fbf\u7684\u673a\u5236\u3002"], "title": "JAVA\u548cC++\u533a\u522b\u90fd\u6709\u54ea\u4e9b\uff1f"},
{"contents": ["\u4e00\u3001\u57fa\u7840\u77e5\u8bc6", "\n1\u3001 \u4e0b\u9762\u51e0\u4e2a\u662f\u5728\u7f16\u7a0b\u9886\u57df\u91cc\u7ecf\u5e38\u4f7f\u7528\u7684\u7f29\u5199\uff0c\u8bf7\u5199\u51fa\u4ed6\u4eec\u7684\u82f1\u6587\u5168\u5199\uff0c\u5e76\u7ffb\u8bd1\u6210\u4e2d\u6587\u3002\u6ce8\u610f\u662f\u7f16\u7a0b\u9886\u57df.", "\n(1) OS\u00a0 Operator System", "\n(2) VS\u00a0 Visual Studio ?", "\n(3) MS\u00a0 Microsoft", "\n(4) CS\u00a0 Client/Server ?", "\n(5) RTOS Real Time Operator System", "\n(6) SDK Software Development Kits", "\n(7) IDE Integrated Development Environment", "2\u3001 \u4e0b\u5217\u51e0\u4e2aC\u8bed\u8a00\u8868\u8fbe\u5f0f\u662f\u5426\u6b63\u786e\uff1f\u5982\u679c\u6b63\u786e\uff0c\u5199\u51fa\u5b83\u4eec\u8868\u8fbe\u7684\u610f\u601d\uff1a", "\n(1) a&b\u00a0\u00a0\u00a0 \u4f4d\u4e0e", "\n(2) a&(&b)", "\n(3) a&&b\u00a0 \u903b\u8f91\u5e76", "\n(4) a**b\u00a0 = a * (*b)", "3\u3001 \u5728\u7f16\u7a0b\u98ce\u683c\u4e2d\uff0c\u4e00\u822c\u90fd\u8981\u5f3a\u8c03\u4f7f\u7528\u5308\u7259\u5229\u547d\u540d\u6cd5\uff0c\u4e0b\u9762\u662f\u5308\u7259\u5229\u547d\u540d\u6cd5\u4e2d\u4e00\u4e9b\u516c\u8ba4\u7684\u524d\u7f00\uff0c\u5e76\u7ed9\u51fa\u53d8\u91cf\u540d\u7684\u4f8b\u5b50\uff0c\u8bf7\u5199\u51fa\u5b83\u4eec\u6240\u4ee3\u8868\u7684\u53d8\u91cf\u7c7b\u578b\uff1a", "\n\u524d\u7f00 \u53d8\u91cf\u540d \u63cf\u8ff0\u524d\u7f00\u7684\u610f\u4e49", "\ng_ g_Lock \u5168\u91cf\u53d8\u91cf", "\nm_ m_Num \u6210\u5458\u53d8\u91cf", "\np pTrack \u6307\u9488", "\nh hModule \u53e5\u67c4", "\nsz szText \u5b57\u7b26\u4e32", "\ndw dwMsg \u53cc\u5b57", "4\u3001\u5934\u6587\u4ef6\u4e2difndef / define / endif \u662f\u505a\u4ec0\u4e48\u7528\u7684\uff1f", "\n\u907f\u514d\u91cd\u590d\u5f15\u5165", "5\u3001\u4ee3\u7801\u91cc\u6709\u65f6\u53ef\u4ee5\u770b\u5230extern \u201cC\u201d, \u8fd9\u8bed\u53e5\u662f\u505a\u4ec0\u4e48\u7528\u7684\uff1f", "\nC\u98ce\u683c\u7684\u4ee3\u7801", "6\u3001\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u8bf4\u7684check out, check in\u662f\u4ec0\u4e48\u610f\u601d\uff1f", "\n\u6e90\u4ee3\u7801\u7ba1\u7406\u7cfb\u7edf\u7684\u7b7e\u5165\uff0c\u7b7e\u51fa", "7\u3001C\u8bed\u8a00\u51fd\u6570\u524d\u9762\u52a0static\uff0c\u548cC++\u7c7b\u7684\u6210\u5458\u51fd\u6570\u524d\u9762\u52a0static\uff0c\u4e24\u8005\u7684\u610f\u4e49\u6709\u4f55\u533a\u522b\uff1f", "\nC\u7684static\u662f\u9650\u5236\u51fd\u6570\u7684\u4e3a\u7f16\u8bd1\u5355\u5143\u5185\u90e8\u4f7f\u7528", "\nC++\u7c7b\u7684static\u4f7f\u51fd\u6570\u6210\u4e3a\u7c7b\u6210\u5458\uff0c\u800c\u4e0d\u662f\u5b9e\u4f8b\u6210\u5458\u3002", "8\u3001\u7b80\u5355\u63cf\u8ff0\u4e00\u4e0bWIN32\u4e0a .c / .cpp / .rc / .obj / .res / .lib / .dll / .exe\u8fd9\u51e0\u4e2a\u540e\u7f00\u6240\u8868\u793a\u7684\u6587\u4ef6\u7c7b\u578b\uff0c\u4ee5\u53ca\u4ed6\u4eec\u4e4b\u95f4\u7684\u76f8\u4e92\u751f\u6210\u5173\u7cfb\u3002\u5982\u679c\u4f60\u662fLINUX\u7a0b\u5e8f\u5458\uff0c\u524d\u9762\u8fd9\u4e2a\u95ee\u9898\u7b54\u4e0d\u4e0a\uff0c\u90a3\u4e48\u8bf7\u63cf\u8ff0\u4e00\u4e0bGCC\u7f16\u8bd1\u7684\u51e0\u4e2a\u6b65\u9aa4\u548c\u4e2d\u95f4\u751f\u6210\u6587\u4ef6\u3002", ".c: C\u4ee3\u7801", "\n.cpp: C++\u4ee3\u7801", "\n.obj:\u76ee\u6807\u4ee3\u7801(\u7531.c\u6216.cpp\u7f16\u8bd1\u540e\u4ea7\u751f)", ".rc:\u8d44\u6e90\u6587\u4ef6", "\n.res:\u7f16\u8bd1\u540e\u7684\u5341\u8fdb\u5236\u8d44\u6e90(\u7531.rc\u7f16\u8bd1\u540e\u4ea7\u751f)", ".exe:\u53ef\u6267\u884c\u7a0b\u5e8f", "\n.dll:\u52a8\u6001\u94fe\u63a5\u5e93", "\n\u4ed6\u4eec\u7531.obj\u94fe\u63a5\u751f\u6210\u3002", "\u4e8c\u3001\u7b80\u5355\u4ee3\u7801", "\n1\u3001", "\nchar* GetMemory(void)", "\n{", "\nchar p[] = \u201cWelcome to AMOI\u201d;", "\nreturn p;", "\n}", "\nvoid main(void)", "\n{", "\nchar* str = NULL;", "\nstr = GetMemory();", "\nprintf(str);", "\n}", "\n\u8fd0\u884cmain\u51fd\u6570\u7684\u7ed3\u679c\u5982\u4f55\uff1f\u4f60\u89c9\u5f97\u8be5\u6bb5\u4ee3\u7801\u662f\u5426\u5b58\u5728\u4ec0\u4e48\u95ee\u9898\uff1f", "\nconst char* const GetMemory(void)", "2\u3001", "\nvoid GetMemory(char** p, int len)", "\n{", "\n*p = (char*)malloc(len);", "\n}", "\nvoid main(void)", "\n{", "\nchar* str;", "\nGetMemory(&str, 100);", "\nstrcpy(str, \u201cHello World\u201d);", "\nprintf(str);", "\n}", "\n\u8fd0\u884cmain\u51fd\u6570\u7684\u7ed3\u679c\u5982\u4f55\uff1f\u4f60\u89c9\u5f97\u8be5\u6bb5\u4ee3\u7801\u662f\u5426\u5b58\u5728\u4ec0\u4e48\u95ee\u9898\uff1f"], "title": "C/C++\u5b9e\u4e60\u751f\u7b14\u8bd5\u8bd5\u5377(\u57fa\u7840\u90e8\u52062)"},
{"contents": ["\u4e00\u3001\u57fa\u7840\u77e5\u8bc6", "\n1\u3001 \u4e0b\u9762\u51e0\u4e2a\u662f\u5728\u7f16\u7a0b\u9886\u57df\u91cc\u7ecf\u5e38\u4f7f\u7528\u7684\u7f29\u5199\uff0c\u8bf7\u5199\u51fa\u4ed6\u4eec\u7684\u82f1\u6587\u5168\u5199\uff0c\u5e76\u7ffb\u8bd1\u6210\u4e2d\u6587\u3002\u6ce8\u610f\u662f\u7f16\u7a0b\u9886\u57df.", "\n(1) OS", "\n(2) VS", "\n(3) MS", "\n(4) CS", "\n(5) RTOS", "\n(6) SDK", "\n(7) IDE", "\n2\u3001 \u4e0b\u5217\u51e0\u4e2aC\u8bed\u8a00\u8868\u8fbe\u5f0f\u662f\u5426\u6b63\u786e\uff1f\u5982\u679c\u6b63\u786e\uff0c\u5199\u51fa\u5b83\u4eec\u8868\u8fbe\u7684\u610f\u601d\uff1a", "\n(1) a&b", "\n(2) a&(&b)", "\n(3) a&&b", "\n(4) a**b", "\n3\u3001 \u5728\u7f16\u7a0b\u98ce\u683c\u4e2d\uff0c\u4e00\u822c\u90fd\u8981\u5f3a\u8c03\u4f7f\u7528\u5308\u7259\u5229\u547d\u540d\u6cd5\uff0c\u4e0b\u9762\u662f\u5308\u7259\u5229\u547d\u540d\u6cd5\u4e2d\u4e00\u4e9b\u516c\u8ba4\u7684\u524d\u7f00\uff0c\u5e76\u7ed9\u51fa\u53d8\u91cf\u540d\u7684\u4f8b\u5b50\uff0c\u8bf7\u5199\u51fa\u5b83\u4eec\u6240\u4ee3\u8868\u7684\u53d8\u91cf\u7c7b\u578b\uff1a", "\n\u524d\u7f00 \u53d8\u91cf\u540d \u63cf\u8ff0\u524d\u7f00\u7684\u610f\u4e49", "\ng_ g_Lock", "\nm_ m_Num", "\np pTrack", "\nh hModule", "\nsz szText", "\ndw dwMsg", "4\u3001\u5934\u6587\u4ef6\u4e2difndef / define / endif \u662f\u505a\u4ec0\u4e48\u7528\u7684\uff1f", "\n5\u3001\u4ee3\u7801\u91cc\u6709\u65f6\u53ef\u4ee5\u770b\u5230extern \u201cC\u201d, \u8fd9\u8bed\u53e5\u662f\u505a\u4ec0\u4e48\u7528\u7684\uff1f", "\n6\u3001\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u8bf4\u7684check out, check in\u662f\u4ec0\u4e48\u610f\u601d\uff1f", "\n7\u3001C\u8bed\u8a00\u51fd\u6570\u524d\u9762\u52a0static\uff0c\u548cC++\u7c7b\u7684\u6210\u5458\u51fd\u6570\u524d\u9762\u52a0static\uff0c\u4e24\u8005\u7684\u610f\u4e49\u6709\u4f55\u533a\u522b\uff1f", "\n8\u3001\u7b80\u5355\u63cf\u8ff0\u4e00\u4e0bWIN32\u4e0a .c / .cpp / .rc / .obj / .res / .lib / .dll / .exe\u8fd9\u51e0\u4e2a\u540e\u7f00\u6240\u8868\u793a\u7684\u6587\u4ef6\u7c7b\u578b\uff0c\u4ee5\u53ca\u4ed6\u4eec\u4e4b\u95f4\u7684\u76f8\u4e92\u751f\u6210\u5173\u7cfb\u3002\u5982\u679c\u4f60\u662fLINUX\u7a0b\u5e8f\u5458\uff0c\u524d\u9762\u8fd9\u4e2a\u95ee\u9898\u7b54\u4e0d\u4e0a\uff0c\u90a3\u4e48\u8bf7\u63cf\u8ff0\u4e00\u4e0bGCC\u7f16\u8bd1\u7684\u51e0\u4e2a\u6b65\u9aa4\u548c\u4e2d\u95f4\u751f\u6210\u6587\u4ef6\u3002", "\u4e8c\u3001\u7b80\u5355\u4ee3\u7801", "\n1\u3001", "\nchar* GetMemory(void)", "\n{", "\nchar p[] = \u201cWelcome to AMOI\u201d;", "\nreturn p;", "\n}", "\nvoid main(void)", "\n{", "\nchar* str = NULL;", "\nstr = GetMemory();", "\nprintf(str);", "\n}", "\n\u8fd0\u884cmain\u51fd\u6570\u7684\u7ed3\u679c\u5982\u4f55\uff1f\u4f60\u89c9\u5f97\u8be5\u6bb5\u4ee3\u7801\u662f\u5426\u5b58\u5728\u4ec0\u4e48\u95ee\u9898\uff1f", "2\u3001", "\nvoid GetMemory(char** p, int len)", "\n{", "\n*p = (char*)malloc(len);", "\n}", "\nvoid main(void)", "\n{", "\nchar* str;", "\nGetMemory(&str, 100);", "\nstrcpy(str, \u201cHello World\u201d);", "\nprintf(str);", "\n}", "\n\u8fd0\u884cmain\u51fd\u6570\u7684\u7ed3\u679c\u5982\u4f55\uff1f\u4f60\u89c9\u5f97\u8be5\u6bb5\u4ee3\u7801\u662f\u5426\u5b58\u5728\u4ec0\u4e48\u95ee\u9898\uff1f"], "title": "C/C++\u5b9e\u4e60\u751f\u7b14\u8bd5\u8bd5\u5377(\u57fa\u7840\u90e8\u52061)"},
{"contents": ["\u8bd5\u98981\uff1a", "void test1()", "\n{", "\nchar string[10];", "\nchar* str1 = \u201c0123456789\u2033;", "\nstrcpy( string, str1 );", "\n}", "\u8bd5\u98982\uff1a", "void test2()", "\n{", "\nchar string[10], str1[10];", "\nint i;", "\nfor(i=0; i\uff1c10; i++)", "\n{", "\nstr1[i] = \u2019a\u2019;", "\n}", "\nstrcpy( string, str1 );", "\n}", "\n\u8bd5\u98983\uff1a", "void test3(char* str1)", "\n{", "\nchar string[10];", "\nif( strlen( str1 ) \uff1c= 10 )", "\n{", "\nstrcpy( string, str1 );", "\n}", "\n}", "\u89e3\u7b54\uff1a", "\u8bd5\u98981\u5b57\u7b26\u4e32str1\u9700\u898111\u4e2a\u5b57\u8282\u624d\u80fd\u5b58\u653e\u4e0b\uff08\u5305\u62ec\u672b\u5c3e\u7684\u2019\\0\u2019\uff09\uff0c\u800cstring\u53ea\u670910\u4e2a\u5b57\u8282\u7684\u7a7a\u95f4\uff0cstrcpy\u4f1a\u5bfc\u81f4\u6570\u7ec4\u8d8a\u754c\uff1b", "\u5bf9\u8bd5\u98982\uff0c\u5982\u679c\u9762\u8bd5\u8005\u6307\u51fa\u5b57\u7b26\u6570\u7ec4str1\u4e0d\u80fd\u5728\u6570\u7ec4\u5185\u7ed3\u675f\u53ef\u4ee5\u7ed93\u5206\uff1b\u5982\u679c\u9762\u8bd5\u8005\u6307\u51fastrcpy(string,", "\nstr1)\u8c03\u7528\u4f7f\u5f97\u4ecestr1\u5185\u5b58\u8d77\u590d\u5236\u5230string\u5185\u5b58\u8d77\u6240\u590d\u5236\u7684\u5b57\u8282\u6570\u5177\u6709\u4e0d\u786e\u5b9a\u6027\u53ef\u4ee5\u7ed97\u5206\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u6307\u51fa\u5e93\u51fd\u6570strcpy\u5de5\u4f5c\u65b9\u5f0f\u7684\u7ed910", "\n\u5206\uff1b", "\u5bf9\u8bd5\u98983\uff0cif(strlen(str1) \uff1c= 10)\u5e94\u6539\u4e3aif(strlen(str1) \uff1c", "\n10)\uff0c\u56e0\u4e3astrlen\u7684\u7ed3\u679c\u672a\u7edf\u8ba1\u2019\\0\u2019\u6240\u5360\u7528\u76841\u4e2a\u5b57\u8282\u3002", "\u5256\u6790\uff1a", "\u8003\u67e5\u5bf9\u57fa\u672c\u529f\u7684\u638c\u63e1\uff1a", "(1)\u5b57\u7b26\u4e32\u4ee5\u2019\\0\u2019\u7ed3\u5c3e\uff1b", "(2)\u5bf9\u6570\u7ec4\u8d8a\u754c\u628a\u63e1\u7684\u654f\u611f\u5ea6\uff1b", "(3)\u5e93\u51fd\u6570strcpy\u7684\u5de5\u4f5c\u65b9\u5f0f\uff0c\u5982\u679c\u7f16\u5199\u4e00\u4e2a\u6807\u51c6strcpy\u51fd\u6570\u7684\u603b\u5206\u503c\u4e3a10\uff0c\u4e0b\u9762\u7ed9\u51fa\u51e0\u4e2a\u4e0d\u540c\u5f97\u5206\u7684\u7b54\u6848\uff1a", "2\u5206", "void strcpy( char *strDest, char *strSrc )", "\n{", "\nwhile( (*strDest++ = * strSrc++) != \u2018\\0\u2019 );", "\n}", "4\u5206", "void strcpy( char *strDest, const char *strSrc )", "\n//\u5c06\u6e90\u5b57\u7b26\u4e32\u52a0const\uff0c\u8868\u660e\u5176\u4e3a\u8f93\u5165\u53c2\u6570\uff0c\u52a02\u5206", "\n{", "\nwhile( (*strDest++ = * strSrc++) != \u2018\\0\u2019 );", "\n}", "7\u5206", "void strcpy(char *strDest, const char *strSrc)", "\n{", "\n//\u5bf9\u6e90\u5730\u5740\u548c\u76ee\u7684\u5730\u5740\u52a0\u975e0\u65ad\u8a00\uff0c\u52a03\u5206", "\nassert( (strDest != NULL) && (strSrc != NULL) );", "\nwhile( (*strDest++ = * strSrc++) != \u2018\\0\u2019 );", "\n}", "10\u5206", "//\u4e3a\u4e86\u5b9e\u73b0\u94fe\u5f0f\u64cd\u4f5c\uff0c\u5c06\u76ee\u7684\u5730\u5740\u8fd4\u56de\uff0c\u52a03\u5206\uff01", "char * strcpy( char *strDest, const char *strSrc )", "\n{", "\nassert( (strDest != NULL) && (strSrc != NULL) );", "\nchar *address = strDest;", "\nwhile( (*strDest++ = * strSrc++) != \u2018\\0\u2019 );", "\nreturn address;", "\n}", "\u4ece2\u5206\u523010\u5206\u7684\u51e0\u4e2a\u7b54\u6848\u6211\u4eec\u53ef\u4ee5\u6e05\u695a\u7684\u770b\u5230\uff0c\u5c0f\u5c0f\u7684strcpy\u7adf\u7136\u6697\u85cf\u7740\u8fd9\u4e48\u591a\u7384\u673a\uff0c\u771f\u4e0d\u662f\u76d6\u7684\uff01\u9700\u8981\u591a\u4e48\u624e\u5b9e\u7684\u57fa\u672c\u529f\u624d\u80fd\u5199\u4e00\u4e2a\u5b8c\u7f8e\u7684strcpy\u554a\uff01", "(4)\u5bf9strlen\u7684\u638c\u63e1\uff0c\u5b83\u6ca1\u6709\u5305\u62ec\u5b57\u7b26\u4e32\u672b\u5c3e\u7684\u2019\\0\u2019\u3002", "\u8bfb\u8005\u770b\u4e86\u4e0d\u540c\u5206\u503c\u7684strcpy\u7248\u672c\uff0c\u5e94\u8be5\u4e5f\u53ef\u4ee5\u5199\u51fa\u4e00\u4e2a10\u5206\u7684strlen\u51fd\u6570\u4e86\uff0c\u5b8c\u7f8e\u7684\u7248\u672c\u4e3a\uff1a", "int strlen( const char *str ) //\u8f93\u5165\u53c2\u6570const", "{", "\nassert( strt != NULL ); //\u65ad\u8a00\u5b57\u7b26\u4e32\u5730\u5740\u975e0", "\nint len;", "\nwhile( (*str++) != \u2019\\0\u2019 )", "\n{", "\nlen++;", "\n}", "\nreturn len;", "\n}", "\u8bd5\u98984\uff1a", "void GetMemory( char *p )", "\n{", "\np = (char *) malloc( 100 );", "\n}", "void Test( void )", "\n{", "\nchar *str = NULL;", "\nGetMemory( str );", "\nstrcpy( str, \u201chello world\u201d );", "\nprintf( str );", "\n}", "\u8bd5\u98985\uff1a", "char *GetMemory( void )", "\n{", "\nchar p[] = \u201chello world\u201d;", "\nreturn p;", "\n}", "void Test( void )", "\n{", "\nchar *str = NULL;", "\nstr = GetMemory();", "\nprintf( str );", "\n}", "\u8bd5\u98986\uff1a", "void GetMemory( char **p, int num )", "\n{", "\n*p = (char *) malloc( num );", "\n}", "void Test( void )", "\n{", "\nchar *str = NULL;", "\nGetMemory( &str, 100 );", "\nstrcpy( str, \u201chello\u201d );", "\nprintf( str );", "\n}", "\u8bd5\u98987\uff1a", "void Test( void )", "\n{", "\nchar *str = (char *) malloc( 100 );", "\nstrcpy( str, \u201chello\u201d );", "\nfree( str );", "\n\u2026 //\u7701\u7565\u7684\u5176\u5b83\u8bed\u53e5", "\n}", "\u89e3\u7b54\uff1a", "\u8bd5\u98984\u4f20\u5165\u4e2dGetMemory( char *p", "\n)\u51fd\u6570\u7684\u5f62\u53c2\u4e3a\u5b57\u7b26\u4e32\u6307\u9488\uff0c\u5728\u51fd\u6570\u5185\u90e8\u4fee\u6539\u5f62\u53c2\u5e76\u4e0d\u80fd\u771f\u6b63\u7684\u6539\u53d8\u4f20\u5165\u5f62\u53c2\u7684\u503c\uff0c\u6267\u884c\u5b8c", "char *str = NULL;", "\nGetMemory( str );", "\u540e\u7684str\u4ecd\u7136\u4e3aNULL\uff1b", "\u8bd5\u98985\u4e2d", "char p[] = \u201chello world\u201d;", "\nreturn p;", "\u7684p[]\u6570\u7ec4\u4e3a\u51fd\u6570\u5185\u7684\u5c40\u90e8\u81ea\u52a8\u53d8\u91cf\uff0c\u5728\u51fd\u6570\u8fd4\u56de\u540e\uff0c\u5185\u5b58\u5df2\u7ecf\u88ab\u91ca\u653e\u3002\u8fd9\u662f\u8bb8\u591a\u7a0b\u5e8f\u5458\u5e38\u72af\u7684\u9519\u8bef\uff0c\u5176\u6839\u6e90\u5728\u4e8e\u4e0d\u7406\u89e3\u53d8\u91cf\u7684\u751f\u5b58\u671f\u3002", "\u8bd5\u98986\u7684GetMemory\u907f\u514d\u4e86\u8bd5\u98984\u7684\u95ee\u9898\uff0c\u4f20\u5165GetMemory\u7684\u53c2\u6570\u4e3a\u5b57\u7b26\u4e32\u6307\u9488\u7684\u6307\u9488\uff0c\u4f46\u662f\u5728GetMemory\u4e2d\u6267\u884c\u7533\u8bf7\u5185\u5b58\u53ca\u8d4b\u503c\u8bed\u53e5", "*p = (char *) malloc( num );", "\u540e\u672a\u5224\u65ad\u5185\u5b58\u662f\u5426\u7533\u8bf7\u6210\u529f\uff0c\u5e94\u52a0\u4e0a\uff1a", "if ( *p == NULL )", "\n{", "\n\u2026//\u8fdb\u884c\u7533\u8bf7\u5185\u5b58\u5931\u8d25\u5904\u7406", "\n}", "\u8bd5\u98987\u5b58\u5728\u4e0e\u8bd5\u98986\u540c\u6837\u7684\u95ee\u9898\uff0c\u5728\u6267\u884c", "char *str = (char *) malloc(100);", "\u540e\u672a\u8fdb\u884c\u5185\u5b58\u662f\u5426\u7533\u8bf7\u6210\u529f\u7684\u5224\u65ad\uff1b\u53e6\u5916\uff0c\u5728free(str)\u540e\u672a\u7f6estr\u4e3a\u7a7a\uff0c\u5bfc\u81f4\u53ef\u80fd\u53d8\u6210\u4e00\u4e2a\u201c\u91ce\u201d\u6307\u9488\uff0c\u5e94\u52a0\u4e0a\uff1a", "str = NULL;", "\u8bd5\u98986\u7684Test\u51fd\u6570\u4e2d\u4e5f\u672a\u5bf9malloc\u7684\u5185\u5b58\u8fdb\u884c\u91ca\u653e\u3002", "\u5256\u6790\uff1a", "\u8bd5\u98984\uff5e7\u8003\u67e5\u9762\u8bd5\u8005\u5bf9\u5185\u5b58\u64cd\u4f5c\u7684\u7406\u89e3\u7a0b\u5ea6\uff0c\u57fa\u672c\u529f\u624e\u5b9e\u7684\u9762\u8bd5\u8005\u4e00\u822c\u90fd\u80fd\u6b63\u786e\u7684\u56de\u7b54\u5176\u4e2d50~60\u7684\u9519\u8bef\u3002\u4f46\u662f\u8981\u5b8c\u5168\u89e3\u7b54\u6b63\u786e\uff0c\u5374\u4e5f\u7edd\u975e\u6613\u4e8b\u3002", "\u5bf9\u5185\u5b58\u64cd\u4f5c\u7684\u8003\u67e5\u4e3b\u8981\u96c6\u4e2d\u5728\uff1a", "\uff081\uff09\u6307\u9488\u7684\u7406\u89e3\uff1b", "\uff082\uff09\u53d8\u91cf\u7684\u751f\u5b58\u671f\u53ca\u4f5c\u7528\u8303\u56f4\uff1b", "\uff083\uff09\u826f\u597d\u7684\u52a8\u6001\u5185\u5b58\u7533\u8bf7\u548c\u91ca\u653e\u4e60\u60ef\u3002", "\u518d\u770b\u770b\u4e0b\u9762\u7684\u4e00\u6bb5\u7a0b\u5e8f\u6709\u4ec0\u4e48\u9519\u8bef\uff1a", "swap( int* p1,int* p2 )", "\n{", "\nint *p;", "\n*p = *p1;", "\n*p1 = *p2;", "\n*p2 = *p;", "\n}", "\u5728swap\u51fd\u6570\u4e2d\uff0cp\u662f\u4e00\u4e2a\u201c\u91ce\u201d\u6307\u9488\uff0c\u6709\u53ef\u80fd\u6307\u5411\u7cfb\u7edf\u533a\uff0c\u5bfc\u81f4\u7a0b\u5e8f\u8fd0\u884c\u7684\u5d29\u6e83\u3002\u5728VC++\u4e2dDEBUG\u8fd0\u884c\u65f6\u63d0\u793a\u9519\u8bef\u201cAccess", "\nViolation\u201d\u3002\u8be5\u7a0b\u5e8f\u5e94\u8be5\u6539\u4e3a\uff1a", "swap( int* p1,int* p2 )", "\n{", "\nint p;", "\np = *p1;", "\n*p1 = *p2;", "\n*p2 = p;", "\n}"], "title": "C/C++\u7a0b\u5e8f\u5458\u9762\u8bd5\u9898"},
{"contents": ["\u7fa4\u7855\u7b14\u8bd5\u9898", "\n\u7fa4\u7855\u7684\u7b14\u8bd5\u5728\u8bed\u8a00\u65b9\u9762\u4e3b\u8981\u662fJava\u548cC \uff0c\u5939\u4e86\u4e00\u9053C#\u9898\uff0c\u8d81\u8bb0\u5fc6\u72b9\u65b0\u7684\u65f6\u5019\u8bb0\u4e0b\u6765", "\u4e00\u3001\u7ed9\u4e86\u4e00\u68f5\u4e8c\u53c9\u6811\u7684\u524d\u5e8f\u904d\u5386\u548c\u4e2d\u5e8f\u904d\u5386\uff0c\u8981\u6c42\u5199\u51fa\u540e\u5e8f\u904d\u5386\u3002", "\n\u770b\u4e00\u4e0b\u6570\u636e\u7ed3\u6784\u5c31\u884c\u4e86\uff0c\u5f88easy\u3002\u63d0\u793a\uff1a\u524d\u5e8f\u904d\u5386\u7684\u7b2c\u4e00\u4e2a\u8282\u70b9\u4e3a\u6839\u7ed3\u70b9\uff0c\u5728\u4e2d\u5e8f\u904d\u5386\u4e2d\u6839\u7ed3\u70b9\u7684\u5de6\u8fb9\u8282\u70b9\u662f\u5de6\u5b50\u6811\uff0c\u53f3\u8fb9\u8282\u70b9\u662f\u53f3\u5b50\u6811\uff0c\u5982\u6b64\u9012\u5f52\u3002", "\u4e8c\u3001\u4ec0\u4e48\u662f\u7269\u7406\u5185\u5b58\u548c\u865a\u62df\u5185\u5b58\uff0cOS\u4e2d\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u865a\u62df\u5185\u5b58\uff1f", "\n\u770bOS\u7684\u4e66\u3002", "\u4e09\u3001\u89e3\u91ca\u4e00\u4e0bC#\u4e2d\u7684\u201cdelegate\u201d\u3002", "\n\u539f\u5148\u4e0d\u6e05\u695a\u7684\uff0c\u7136\u540e\u5728\u6280\u672f\u9762\u8bd5\u7684\u65f6\u5019\u95ee\u4e86\u4e00\u4e0b\u9762\u8bd5\u5b98\uff0c\u539f\u6765\u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u961f\u5217\uff0c\u961f\u5217\u4e2d\u5b58\u7684\u662f\u51fd\u6570\u6307\u9488\uff08\u6258\u7ba1\u51fd\u6570\uff09\uff0c\u8fd0\u884c\u65f6\u961f\u5217\u4e2d\u7684\u51fd\u6570\u4f1a\u5728\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u88ab\u4f9d\u6b21\u6267\u884c\u3002", "\u56db\u3001\u4e0e\u5b50\u7a0b\u5e8f\u4f20\u9012\u53c2\u6570\u6709\u54ea\u4e9b\u65b9\u6cd5\uff1f", "\n\u6c47\u7f16\u9898\uff0c\u6211\u60f3\u8d77\u6765\u4e09\u4e2a\uff1a\u53c2\u6570\u538b\u6808\u3001\u53c2\u6570\u5b58\u5bc4\u5b58\u5668\u3001\u53c2\u6570\u5b58\u6570\u636e\u6bb5\u3002", "\u4e94\u3001\u89e3\u91ca\u4e00\u4e0bJava\u4e2d\u7684String\u548cStringBuffer\uff0c\u4ec0\u4e48\u65f6\u5019\u9700\u8981\u4f7f\u7528StringBuffer\uff1f", "\n\u6838\u5fc3\u662fString\u5bf9\u8c61\u662f\u4e0d\u53d8\u5bf9\u8c61\uff0c\u8fde\u63a5\u3001\u53d6\u5b50\u4e32\u7b49\u64cd\u4f5c\u4f1a\u751f\u6210\u65b0\u7684\u5bf9\u8c61\uff0c\u65e7\u5bf9\u8c61\u53ef\u80fd\u4f1a\u88ab\u56de\u6536\u3002StringBuufer\u5219\u662f\u53ef\u53d8\u5bf9\u8c61\uff0c\u4e0a\u8ff0\u64cd\u4f5c\u5c06\u5728\u539f\u5bf9\u8c61\u4e0a\u8fdb\u884c\u3002", "\u516d\u3001Java\u4e2d\u54ea\u4e9b\u5bb9\u5668\u7684\u9ed8\u8ba4\u5e03\u5c40\u5668\uff08layout\uff09\u662fBorderLayout\uff1f", "\n\u8fd9\u4e2a\u4e0d\u662f\u90a3\u5f97\u5f88\u51c6\uff0c\u5c31\u5199\u4e86JFrame\u53ca\u5176\u5b50\u7c7b\uff0cFrame\u53ca\u5176\u5b50\u7c7b\u3002", "\u4e03\u3001\u4e00\u4e2aC \u7684\u51fd\u6570\uff1a", "\nint operation(int numberA,int numberB){", "\nreturn numberA numberB;", "\n}", "\n\u7136\u540e\u58f0\u660e\u4e86\u4e09\u4e2a\u53d8\u91cf\uff1a", "\nint a = 2;", "\nint result1 = operation(5, a );", "\nint result2 = operation(5 a, a);", "\n\u95eeresult1\u548cresult2\u7684\u503c\u3002", "\n\u539f\u5148\u4ee5\u4e3a\u8003\u5f97\u662f\u4f20\u503c\u3001\u4f20\u5f15\u7528\u7684\u95ee\u9898\uff0c\u7ed3\u679c\u4ed4\u7ec6\u4e00\u770b\u8003\u5f97\u662fa \u548c a\u7684\u95ee\u9898\uff0c\u8fd9\u5c31\u7b80\u5355\u4e86\u3002", "\nresult1 = 7, result2 = 12", "\u516b\u3001\u5982\u679c\u7236\u7c7b\u7684\u6790\u6784\u51fd\u6570\u6ca1\u6709\u58f0\u660e\u4e3a\u865a\u51fd\u6570\u7684\u8bdd\u5728\u7236\u7c7b\u7684\u6307\u9488\u4e0a\u8c03\u7528\u6790\u6784\u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u540e\u679c\uff1f", "\n\u5c4f\u853d\u591a\u6001\uff0c\u5b50\u7c7b\u7533\u8bf7\u7684\u8d44\u6e90\u5c06\u4e0d\u88ab\u91ca\u653e\u3002", "\u4e5d\u3001\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7c7b\uff1a", "\nclass Something{", "\npulic:", "\nSomething();", "\nvoid setValue(int val){", "\nvalue = val;", "\n}", "private:", "\nint value;", "\n}", "\n\u4ee5\u53ca\u4e00\u4e2a\u51fd\u6570\uff1a", "\nvoid doSomething(int val){", "\nSomething* sth = new Something(); // Line 1", "\nsth->setValue(val); // Line 2", "\n}", "\n\u95eeLine 2\u5982\u679c\u662fdoSomething()\u7684\u6700\u540e\u4e00\u884c\u7684\u8bdd\u4f1a\u6709\u4ec0\u95ee\u9898\uff1f", "\ndoSomething\u6267\u884c\u5b8c\u540esth\u6ca1\u6709\u88ab\u9500\u6bc1\uff0c\u5185\u5b58\u6cc4\u6f0f\u3002", "\u5341\u3001\u5199\u4e00\u4e2a\u7a0b\u5e8f\u5c06\u8f93\u5165\u768416\u8fdb\u5236\u8f6c\u4e3a10\u8fdb\u5236\u3002", "\n\u57fa\u7840", "\u5341\u4e00\u3001\u8bbe\u8ba1\u4e00\u4e2a\u5fae\u6ce2\u7089\u7684\u63a7\u5236\u7a0b\u5e8f\uff08OO\uff09\u3002", "\n\u8fd9\u9053\u9898\u6709\u70b9\u610f\u601d\uff0c\u6211\u4e3b\u8981\u7528Observer\u6a21\u5f0f\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u5b9a\u65f6\u5668\uff0c\u7136\u540e\u628a\u5fae\u6ce2\u7089\u70f9\u996a\u7684\u5bf9\u8c61\u62bd\u8c61\u4e3aCookable\u3002", "\u5341\u4e8c\u3001\u903b\u8f91\u9898\uff0c\u4e00\u5217\u706b\u8f66\u4ee515 mph\u7684\u901f\u5ea6\u4ece\u5317\u4eac\u5f00\u5f80\u4e0a\u6d77\uff0c\u53e6\u4e00\u5217\u706b\u8f66\u4ee520 mph\u7684\u901f\u5ea6\u4ece\u4e0a\u6d77\u5f00\u5f80\u5317\u4eac\uff0c\u4e00\u53ea\u9e1f\uff08\u6bd4\u8f83\u7b28\uff09\u901f\u5ea625 mph\uff0c\u5728\u4e24\u5217\u706b\u8f66\u4e4b\u95f4\u6765\u56de\u98de\uff0c\u76f8\u9047\u5373\u6298\u56de\u3002\u95ee\u5230\u4e24\u5217\u706b\u8f66\u76f8\u9047\u8fd9\u53ea\u7b28\u9e1f\u4e00\u5171\u98de\u4e86\u591a\u8fdc\uff1f", "\n\u5f88\u7b80\u5355\uff0c\u56e0\u4e3a\u9e1f\u4e00\u76f4\u5728\u98de\uff0c\u6240\u4ee5\u4e00\u5171\u98de\u4e86s/(15 20)\uff0cs\u4e3a\u4e0a\u6d77\u5230\u5317\u4eac\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u90a3\u4e48\u5b83\u4e00\u5171\u98de\u4e86s/(15 20) * 25 mile\u3002", "12\u9053\u9898\uff0c\u9664\u4e86\u90a3\u9053C#\u9898\uff0c\u5176\u5b83\u89c9\u5f97\u6ca1\u591a\u5c11\u5730\u65b9\u80fd\u6263\u6211\u5206\u4e86\uff0c\u5f53\u5929\u665a\u4e0a\u5c31\u6ca1\u7761\u597d\uff0c\u5f88\u5174\u594b\u3002\u679c\u7136\u7b2c\u4e8c\u5929\u4e0a\u5348\u5c31\u6253\u7535\u8bdd\u6765\u8ba9\u6211\u53bb\u9762\u8bd5\uff0c\u6548\u7387\u771f\u7684\u5f88\u9ad8\uff0c\u7136\u540e\u5c31\u679c\u7136\u987a\u5229\u62ff\u5230\u4e86offer\u7fa4\u7855\u7b14\u8bd5\u9898"], "title": "\u7fa4\u7855\u7b14\u8bd5\u9898(java,c )"},
{"contents": ["1. How do you code an infinite loop in C?", "\n2. Volatile:", "\n\uff081\uff09What does the keyword volatile mean? Give an example", "\n\uff082\uff09Can a parameter be both const and volatile? Give an example", "\n\uff083\uff09Can a pointer be volatile? Give an example", "\n3. What are the values of a, b, and c after the following instructions:", "\nint a=5, b=7, c;", "\nc = a+++b;", "\n4. What do the following declarations mean?", "\n\uff081\uff09const int a;", "\n\uff082\uff09int const a;", "\n\uff083\uff09const int *a;", "\n\uff084\uff09int * const a;", "\n\uff085\uff09int const * a const;", "\n5. Which of the following statements describe the use of the keyword stati", "\nc?", "\n\uff081\uff09Within the body of a function: A static variable maintains its value", "\nbetween function revocations", "\n\uff082\uff09Within a module: A static variable is accessible by all functions wit", "\nhin that module", "\n\uff083\uff09Within a module: A static function can only be called by other functi", "\nons within that module", "\n6. Embedded systems always require the user to manipulate bits in register", "\ns or variables. Given an integer variable a, write two code fragments.", "\nThe first should set bit 5 of a. The second shnuld clear bit 5 of a. In bo", "\nth cases, the remaining bits should be unmodified.", "\n7. What does the following function return?", "\nchar foo(void)", "\n{", "\nunsigned int a = 6;", "\niht b = -20;", "\nchar c;", "\n(a+b > 6) ? (c=1): (c=0);", "\nreturn c;", "\n}", "\n8. What will be the output of the following C code?", "\nmain()", "\n{", "\nint k, num= 30;", "\nk =(num > 5 ? (num <=10 ? 100:200): 500);", "\nprintf(\u201c%d\u201d, k);", "\n}", "\n9. What will the following C code do?", "\nint *ptr;", "\nptr =(int *)Ox67a9;", "\n*ptr = Oxaa55;", "\n10. What will be the output of the follow C code?", "\n#define product(x) (x*x)", "\nmain()", "\n{", "\nint i = 3, j, k;", "\nj = product(i++);", "\nk = product(++i);", "\nprintf(\u201c%d %d\u201d,j,k);", "\n}", "\n11. Simplify the following Boolean expression", "\n!((i ==12) || (j > 15))", "\n12. How many flip-flop circuits are needed to divide by 16?", "\n13. Provides 3 properties that make an OS, a RTOS?", "\n14. What is pre-emption?", "\n15. Assume the BC register value is 8538H, and the DE register value is 62", "\nA5H.Find the value of register BC after the following assembly operations:", "\nMOV A,C", "\nSUB E", "\nMOV C,A", "\nMOV A,B", "\nSBB D", "\nMOV B,A", "\n16. In the Assembly code shown below", "\nLOOP: MVI C,78H", "\nDCR C", "\nJNZ LOOP", "\nHLT", "\nHow many times is the DCR C Operation executed?", "\n17. Describe the most efficient way (in term of execution time and code si", "\nze) to divide a number by 4 in assembly language", "\n18. what value is stored in m in the following assembly language code frag", "\nment if n=7?", "\nLDAA #n", "\nLABEL1: CMPA #5", "\nBHI L3", "\nBEQ L2", "\nDECA", "\nBRA L1", "\nLABEL2: CLRA", "\nLABEL3: STAA #m", "\n19. What is the state of a process if a resource is not available?", "\n#define a 365*24*60*60", "\n20. Using the #define statement, how would you declare a manifest constant", "\nthat returns the number of seconds in a year? Disregard leap years in your an", "\nswer.", "\n21. Interrupts are an important part of embedded systems. Consequently, ma", "\nny compiler vendors offer an extension to standard C to support interrupts. Ty", "\npically, the keyword is __interrupt. The following routine (ISR). Point out pr", "\noblems in the code.", "\n__interrupt double compute_area (double radius)", "\n{", "\ndouble area = PI * radius * radius;", "\nprintf(\u201c\\nArea = %f\u201d, area);", "\nreturn area;", "\n}"], "title": "\u8f6f\u4ef6\u7b14\u8bd5\u9898"},
{"contents": ["\u4e00.\u00a0 \u5355\u9009\u9898(\u6bcf\u98984\u5206,15\u9898,\u517160\u5206)", "\n1.\u8003\u8651\u51fd\u6570\u539f\u578bvoid hello(int a,int b=7,char* pszC=\u201d*\u201d),\u4e0b\u9762\u7684\u51fd\u6570\u8c03\u7528\u949f,\u5c5e\u4e8e\u4e0d\u5408\u6cd5\u8c03\u7528\u7684\u662f:", "\nA hello(5)\u00a0\u00a0\u00a0\u00a0 B.hello(5,8)\u00a0\u00a0\u00a0\u00a0 C.hello(6,\u201d#\u201d)\u00a0\u00a0\u00a0\u00a0 D.hello(0,0,\u201d#\u201d)", "\n2.\u4e0b\u9762\u6709\u5173\u91cd\u8f7d\u51fd\u6570\u7684\u8bf4\u6cd5\u4e2d\u6b63\u786e\u7684\u662f:", "\nA.\u91cd\u8f7d\u51fd\u6570\u5fc5\u987b\u5177\u6709\u4e0d\u540c\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u00a0\u00a0 B.\u91cd\u8f7d\u51fd\u6570\u5f62\u53c2\u4e2a\u6570\u5fc5\u987b\u4e0d\u540c", "\nC.\u91cd\u8f7d\u51fd\u6570\u5fc5\u987b\u6709\u4e0d\u540c\u7684\u5f62\u53c2\u5217\u8868\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D.\u91cd\u8f7d\u51fd\u6570\u540d\u53ef\u4ee5\u4e0d\u540c", "\n3.\u5206\u6790\u4e00\u4e0b\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c:", "\n#include<iostream.h>", "\nclass CBase", "\n{", "\npublic:", "\nCBase(){cout<<\u201dconstructing CBase class\u201d<<endl;}", "\n~CBase(){cout<<\u201ddestructing CBase class\u201d<<endl;}", "\n};", "\nclass CSub : public CBase", "\n{", "\npublic:", "\nCSub(){cout<<\u201dconstructing CSub class\u201d<<endl;}", "\n~CSub(){cout<<\u201ddestructing CSub class\u201d<<endl;}", "\n};", "\nvoid main()", "\n{", "\nCSub obj;", "\n}", "\nA. constructing CSub class\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B. constructing CBase class", "\nconstructing CBase class\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 constructing CSub class", "\ndestructing CSub class\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 destructing CBase class", "\ndestructing CBase class\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 destructing CSub class", "\nC. constructing CBase class", "\nconstructing CSub class", "\ndestructing CSub class", "\ndestructing CBase class", "\nD. constructing CSub class", "\nconstructing CBase class", "\ndestructing CBase class", "\ndestructing CSub class", "\n4.\u5728\u4e00\u4e2acpp\u6587\u4ef6\u91cc\u9762,\u5b9a\u4e49\u4e86\u4e00\u4e2astatic\u7c7b\u578b\u7684\u5168\u5c40\u53d8\u91cf,\u4e0b\u9762\u4e00\u4e2a\u6b63\u786e\u7684\u63cf\u8ff0\u662f:", "\nA.\u53ea\u80fd\u5728\u8be5cpp\u6240\u5728\u7684\u7f16\u8bd1\u6a21\u5757\u4e2d\u4f7f\u7528\u8be5\u53d8\u91cf", "\nB.\u8be5\u53d8\u91cf\u7684\u503c\u662f\u4e0d\u53ef\u6539\u53d8\u7684", "\nC.\u8be5\u53d8\u91cf\u4e0d\u80fd\u5728\u7c7b\u7684\u6210\u5458\u51fd\u6570\u4e2d\u5f15\u7528", "\nD.\u8fd9\u79cd\u53d8\u91cf\u53ea\u80fd\u662f\u57fa\u672c\u7c7b\u578b(\u5982int,char)\u4e0d\u80fd\u662fC++\u7c7b\u578b", "\n5.\u89c2\u5bdf\u4e0b\u9762\u4e00\u6bb5\u4ee3\u7801:", "\nclass ClassA", "\n{", "\npublic:", "\nvirtual ~ ClassA(){};", "\nvirtual void FunctionA(){};", "\n};", "\nclass ClassB", "\n{", "\npublic:", "\nvirtual void FunctionB(){};", "\n};", "\nclass ClassC : public ClassA,public ClassB", "\n{", "\npublic:", "\n};", "ClassC aObject;", "\nClassA* pA=&aObject;", "\nClassB* pB=&aObject;", "\nClassC* pC=&aObject;", "\n\u5173\u4e8epA,pB,pC\u7684\u53d6\u503c,\u4e0b\u9762\u7684\u63cf\u8ff0\u4e2d\u6b63\u786e\u7684\u662f:", "\nA.pA,pB,pC\u7684\u53d6\u503c\u76f8\u540c.\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B.pC=pA+pB", "\nC.pA\u548cpB\u4e0d\u76f8\u540c\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D.pC\u4e0d\u7b49\u4e8epA\u4e5f\u4e0d\u7b49\u4e8epB", "\n6.\u53c2\u71671.5\u7684\u4ee3\u7801,\u5047\u8bbe\u5b9a\u4e49\u4e86ClassA* pA2,\u4e0b\u9762\u6b63\u786e\u7684\u4ee3\u7801\u662f:", "\nA.pA2=static_cast<ClassA*>(pB);", "\nB.void* pVoid=static_cast<void*>(pB);", "\npA2=static_cast<ClassA*>(pVoid);", "\nC.pA2=pB;", "\nD.pA2=static_cast<ClassA*>(static_cast<ClassC*>(pB));", "\n7.\u53c2\u71671.5\u7684\u4ee3\u7801,\u4e0b\u9762\u90a3\u4e00\u4e2a\u8bed\u53e5\u662f\u4e0d\u5b89\u5168\u7684:", "\nA.delete pA\u00a0\u00a0 B.delete pB\u00a0\u00a0 C.delete pC", "\n8.\u4e0b\u5217\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u4e3a:", "\n#include<iostream.h>", "\nvoid main()", "\n{", "\nint a=2;", "\nint b=++a;", "\ncout<<a/6<<endl;", "\n}", "\nA.0.5\u00a0\u00a0 B.0\u00a0\u00a0 C0.7\u00a0\u00a0 D.0.6666666\uff0d", "\n9.\u6709\u5982\u4e0b\u4e00\u6bb5\u4ee3\u7801:", "\n#define ADD(x,y) x+y", "\nint m=3;", "\nm+=m*ADD(m,m);", "\n\u5219m\u7684\u503c\u4e3a:", "\nA.15\u00a0\u00a0 B.12\u00a0\u00a0 C.18\u00a0\u00a0 D.58", "\n10.\u5982\u4e0b\u662f\u4e00\u4e2a\u5e26\u6743\u7684\u56fe,\u56fe\u4e2d\u7ed3\u70b9A\u5230\u7ed3\u70b9D\u7684\u5173\u952e\u8def\u5f84\u7684\u957f\u5ea6\u662f:", "\nA.13\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B.15\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C.28\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D.58", "11.\u4e0b\u9762\u7684\u6a21\u677f\u58f0\u660e\u4e2d,\u6b63\u786e\u7684\u662f:", "\nA.template<typename T1,T2>", "\nB.template<class T1,T2>", "\nC.template<class T1,class T2>", "\nD.template<typename T1;typename T2>", "\n12.\u5728Windows\u7f16\u7a0b\u4e2d\u4e0b\u9762\u7684\u8bf4\u6cd5\u6b63\u786e\u7684\u662f:", "\nA.\u4e24\u4e2a\u7a97\u53e3,\u4ed6\u4eec\u7684\u7a97\u53e3\u53e5\u67c4\u53ef\u4ee5\u662f\u76f8\u540c\u7684\u00a0\u00a0\u00a0\u00a0 B.\u4e24\u4e2a\u7a97\u53e3,\u4ed6\u4eec\u7684\u5904\u7406\u51fd\u6570\u53ef\u4ee5\u662f\u76f8\u540c\u7684", "\nC.\u4e24\u4e2a\u7a97\u53e3,\u4ed6\u4eec\u7684\u7a97\u53e3\u53e5\u67c4\u548c\u7a97\u53e3\u5904\u7406\u51fd\u6570\u90fd\u4e0d\u53ef\u4ee5\u76f8\u540c.", "\n13.\u4e0b\u9762\u54ea\u79cd\u60c5\u51b5\u4e0b,B\u4e0d\u80fd\u9690\u5f0f\u8f6c\u6362\u4e3aA?", "\nA.class B:public A{}\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B.class A:public B{}", "\nC.class B{operator A();}\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D.class A{A(const B&);}", "\n14.\u67d0\u516c\u53f8\u4f7f\u7528\u5305\u8fc7\u6ee4\u9632\u706b\u5899\u63a7\u5236\u8fdb\u51fa\u516c\u53f8\u5c40\u57df\u7f51\u7684\u6570\u636e,\u5728\u4e0d\u8003\u8651\u4f7f\u7528\u4ee3\u7406\u670d\u52a1\u5668\u7684\u60c5\u51b5\u4e0b,\u4e0b\u9762\u63cf\u8ff0\u9519\u8bef\u7684\u662f\u201d\u8be5\u9632\u706b\u5899\u80fd\u591f(\u00a0\u00a0 )\u201d.", "\nA.\u4f7f\u516c\u53f8\u5458\u5de5\u53ea\u80fd\u8bbf\u95eeInternet\u4e0a\u4e0e\u5176\u4e1a\u52a1\u8054\u7cfb\u7684\u516c\u53f8\u7684IP\u5730\u5740.", "\nB.\u4ec5\u5141\u8bb8HTTP\u534f\u8bae\u901a\u8fc7,\u4e0d\u5141\u8bb8\u5176\u4ed6\u534f\u8bae\u901a\u8fc7,\u4f8b\u5982TCP/UDP.", "\nC.\u4f7f\u5458\u5de5\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95eeFTP\u670d\u52a1\u5668\u7aef\u53e3\u53f7\u4e3a21\u7684FTP\u5730\u5740.", "\nD.\u4ec5\u5141\u8bb8\u516c\u53f8\u4e2d\u5177\u6709\u67d0\u4e9b\u7279\u5b9aIP\u5730\u5740\u7684\u8ba1\u7b97\u673a\u53ef\u4ee5\u8bbf\u95ee\u5916\u90e8\u7f51\u7edc", "\n15.\u6570\u5b57\u5b57\u7b260\u7684ASCII\u503c\u4e3a48,\u82e5\u6709\u4ee5\u4e0b\u7a0b\u5e8f:", "\nmain()", "\n{", "\nchar a=\u20191\u2019,b=\u20192\u2019;", "\nprintf(\u201c%c,\u201d,b++);", "\nprintf(\u201c%d\\n\u201d,b-a);", "\n}", "\n\u7a0b\u5e8f\u8fd0\u884c\u4e4b\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f:", "\nA.3,2\u00a0\u00a0\u00a0\u00a0\u00a0 B.50,2\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C.2,2\u00a0\u00a0\u00a0\u00a0 D.2,50", "\n\u4e8c.\u00a0 \u586b\u7a7a\u9898(\u517140\u5206)", "\n\u672c\u7a0b\u5e8f\u4ece\u6b63\u6587\u6587\u4ef6text.in\u8bfb\u5165\u4e00\u7bc7\u82f1\u6587\u77ed\u6587,\u7edf\u8ba1\u8be5\u77ed\u6587\u4e2d\u4e0d\u540c\u5355\u8bcd\u548c\u5b83\u7684\u51fa\u73b0\u6b21\u6570,\u5e76\u6309\u8bcd\u5178\u7f16\u8f91\u987a\u5e8f\u5c06\u5355\u8bcd\u53ca\u5b83\u7684\u51fa\u73b0\u6b21\u6570\u8f93\u51fa\u5230\u6b63\u6587\u6587\u4ef6word.out\u4e2d.", "\n\u7a0b\u5e8f\u7528\u4e00\u68f5\u6709\u5e8f\u4e8c\u53c9\u6811\u5b58\u50a8\u8fd9\u4e9b\u5355\u8bcd\u53ca\u5176\u51fa\u73b0\u7684\u6b21\u6570,\u4e00\u8fb9\u8bfb\u5165\u4e00\u8fb9\u5efa\u7acb.\u7136\u540e\u4e2d\u5e8f\u904d\u5386\u8be5\u4e8c\u53c9\u6811,\u5c06\u904d\u5386\u7ecf\u8fc7\u7684\u4e8c\u53c9\u6811\u4e0a\u7684\u8282\u70b9\u7684\u5185\u5bb9\u8f93\u51fa.", "\n\u7a0b\u5e8f\u4e2d\u7684\u5916\u90e8\u51fd\u6570", "\nint getword(FILE* pFile,char* pszWordBuffer,int nBufferLen);", "\n\u4ece\u4e0epFile\u6240\u5bf9\u5e94\u7684\u6587\u4ef6\u4e2d\u8bfb\u53d6\u5355\u8bcd\u7f6e\u5165pszWordBuffer,\u5e76\u8fd4\u56de1;\u82e5\u5355\u8bcd\u9047\u6587\u4ef6\u5c3e,\u5df2\u65e0\u5355\u8bcd\u53ef\u8bfb\u65f6,\u5219\u8fd4\u56de0.", "\n#include <stdio.h>", "\n#include <malloc.h>", "\n#include <ctype.h>", "\n#include <string.h>", "#define SOURCE_FILE \u201ctext.in\u201d", "\n#define OUTPUT_FILE \u201cword.out\u201d", "\n#define MAX_WORD_LEN 128", "typedef struct treenode", "\n{", "\nchar szWord[MAX_WORD_LEN];", "\nint nCount;", "\nstruct treenode* pLeft;", "\nstruct treenode* pRight;", "\n}BNODE;", "int getword(FILE* pFile,char* pasWordBuffer,int nBufferLen);", "void binary_tree(BNODE** ppNode,char* pszWord)", "\n{", "\nif(ppNode != NULL && pszWord != NULL)", "\n{", "\nBNODE* pCurrentNode = NULL;", "\nBNODE* pMemoNode = NULL;", "\nint nStrCmpRes=0;", "____(1)_____;pCurrentNode=*ppNode", "while(pCurrentNode)", "\n{", "\n/*\u5bfb\u627e\u63d2\u5165\u4f4d\u7f6e*/", "\nnStrCmpRes = strcmp(pszWord, ___(2)___ );pCurrentNode->nCount", "if(!nStrCmpRes)", "\n{", "\n___(3)___; pCurrentNode->nCount++", "return;", "\n}", "\nelse", "\n{", "\n___(4)___; pMemoNode=pCurrentNode", "\npCurrentNode = nStrCmpRes>0? pCurrentNode->pRight : pCurrentNode->pLeft;", "\n}", "\n}", "\n}", "pCurrent=new BNODE;", "if(pCurrentNode != NULL)", "\n{", "\nmemset(pCurrentNode,0,sizeof(BNODE));", "\nstrncpy(pCurrentNode->szWord,pszWord,MAX_WORD_LEN-1);", "\npCurrentNode->nCount=1;", "\n}", "if(pMemoNode==NULL)", "\n{", "\n___(5)___; *ppNode= pCurrentNode", "\n}", "\nelse if(nStrCmpRes>0)", "\n{", "\npMemoNode->pRight=pCurrentNode;", "\n}", "\nelse", "\n{", "\npMemoNode->pLeft=pCurrentNode;", "\n}", "\n}", "void midorder(FILE* pFile,BNODE* pNode)", "\n{", "\nif(___(6)___) return;!pNode||!pFile", "midorder(pFile,pNode->pLeft);", "\nfprintf(pFile,\u201d%s %d\\n\u201d,pNode->szWord,pNode->nCount);", "\nmidorder(pFile,pNode->pRight);", "\n}", "void main()", "\n{", "\nFILE* pFile=NULL;", "\nBNODE* pRootNode=NULL;", "\nchar szWord[MAX_WORD_LEN]={0};", "pFile=fopen(SOURCE_FILE,\u201dr\u201d);", "if(pFile==NULL)", "\n{", "\nprintf(\u201cCan\u2019t open file %s\\n\u201d,SOURCE_FILE);", "\nreturn;", "\n}", "while(getword(pFile,szWord,MAX_WORD_LEN)==1)", "\n{", "\nbinary_tree(___(7)___);// pRootNode,szWord", "\n}", "fclose(pFile);", "pFile=fopen(OUTPUT_FILE,\u201dw\u201d);", "\nmidorder(pFile,pRootNode);", "\nfclose(pFile);", "\n}", "\n\u4e09.\u00a0 \u9644\u52a0\u9898(\u6bcf\u989830\u5206,2\u9898,\u517160\u5206)", "\n1.\u00a0\u00a0\u00a0\u00a0\u00a0 \u4ece\u7a0b\u5e8f\u5065\u58ee\u6027\u8fdb\u884c\u5206\u6790,\u4e0b\u9762\u7684FillUserInfo\u51fd\u6570\u548cMain\u51fd\u6570\u5206\u522b\u5b58\u5728\u4ec0\u4e48\u95ee\u9898?", "\n#include <iostream>", "\n#include <string>", "#define MAX_NAME_LEN 20", "struct USERINFO", "\n{", "\nint nAge;", "\nchar szName[MAX_NAME_LEN];", "\n};", "void FillUserInfo(USERINFO* parUserInfo)", "\n{", "\nstu::cout<<\u201d\u8bf7\u8f93\u5165\u7528\u6237\u7684\u4e2a\u6570:\u201d;", "int nCount=0;", "\nstd::cin>>nCount;", "for(int i=0;i<nCount;i++)", "\n{", "\nstd::cout<<\u201d\u8bf7\u8f93\u5165\u5e74\u9f84:\u201d;", "\nstd::cin>>parUserInfo[i]->nAge;", "std::string strName;", "\nstd::cout<<\u201d\u8bf7\u8f93\u5165\u59d3\u540d:\u201d;", "\nstd::cin>>strName;", "\nstrcpy(parUserInfo[i].szName,strName.c_str());", "\n}", "\n}", "int main(int argc,char* argv[])", "\n{", "\nUSERINFO arUserInfos[100]={0};", "\nFillUserInfo(arUserInfos);", "printf(\u201cThe first name is:\u201d);", "\nprintf(arUserInfos[0].szName);", "\nprintf(\u201c\\n\u201d);", "return 0;", "\n}", "\n2.\u00a0\u00a0\u00a0\u00a0\u00a0 \u5047\u8bbe\u4f60\u5728\u7f16\u5199\u4e00\u4e2a\u4f7f\u7528\u591a\u7ebf\u7a0b\u6280\u672f\u7684\u7a0b\u5e8f,\u5f53\u7a0b\u5e8f\u4e2d\u6b62\u8fd0\u884c\u65f6,\u9700\u8981\u600e\u6837\u4e00\u4e2a\u673a\u5236\u6765\u5b89\u5168\u6709\u6548\u7684\u4e2d\u6b62\u6240\u6709\u7684\u7ebf\u7a0b?\u8bf7\u63cf\u8ff0\u5176\u5177\u4f53\u6d41\u7a0b."], "title": "\u817e\u8baf\u6280\u672f\u7c7b\u6821\u56ed\u62db\u8058\u7b14\u8bd5\u8bd5\u9898(A8\u5377)"},
{"contents": ["\u636e\u8bf4\u662f\u963f\u5c14\u5361\u7279\uff08\u4e2d\u56fd\uff09\u7684\u9762\u8bd5\u9898\u76ee \u963f\u5c14\u5361\u7279C\u8bed\u8a00\u9762\u8bd5\u9898", "\n\u963f\u5c14\u5361\u7279C\u8bed\u8a00\u9762\u8bd5\u9898 \u5168\u90e8\u7528C\u8bed\u8a00\u5b8c\u6210\uff1a", "1\uff0e\u81ea\u5df1\u5b9a\u4e49\u6570\u636e\u7ed3\u6784\uff0c\u5199\u51fa\u7a0b\u5e8f\uff1a\u5728\u4e00\u4e2a\u5355\u5411\u94fe\u8868\u4e2d\uff0c\u5f80I\u4f4d\u7f6e\u63d2\u5165\u4e00\u4e2a\u8282\u70b9\u3002", "\n2\uff0e\u81ea\u5df1\u5b9a\u4e49\u6570\u636e\u7ed3\u6784\uff0c\u5199\u51fa\u7a0b\u5e8f\uff1a\u4e8c\u53c9\u6811\u7684\u524d\u5e8f\u904d\u5386\u3002", "\n3\uff0e\u4e0d\u5141\u8bb8\u4f7f\u7528\u7cfb\u7edf\u65f6\u95f4\uff0c\u5199\u51fa\u4e00\u4e2a\u968f\u673a\u6570\u751f\u6210\u51fd\u6570\u3002", "\u963f\u5c14\u5361\u7279\u516c\u53f8 \u9762\u8bd5\u91cd\u70b9\uff1a\u6cd5\u5546\u5411\u6765\u5c0a\u91cd\u5404\u56fd\u5f53\u5730\u6587\u5316\uff0c\u5236\u5ea6\u4f1a\u56e0\u5404\u56fd\u56fd\u60c5\u800c\u6709\u6240\u4fee\u6b63\uff1b\u800c\u5458\u5de5\u8de8\u56fd\u8f6e\u8c03\u662f\u963f\u5c14\u5361\u7279\u5411\u6765\u5f15\u4ee5\u4e3a\u50b2\u7684\uff0c\u5e76\u89c6\u4e3a\u4f01\u4e1a\u6210\u957f\u7684\u52a8\u529b\u3002\u56e0\u6b64\uff0c\u9762\u8bd5\u8005\u4e5f\u4f1a\u88ab\u5f81\u8be2\u5916\u6d3e\u6216\u8de8\u56fd\u8f6e\u8c03\u7684\u610f\u613f\u3002", "\n\u963f\u5c14\u5361\u7279\u91cd\u89c6\u7684\u4ef7\u503c\u89c2\u5305\u62ec\uff1a\u5ba2\u6237\u5bfc\u5411\u3001\u521b\u65b0\u3001\u56e2\u961f\u5408\u4f5c\u3001\u503c\u5f97\u4fe1\u8d56\u7b49\u3002", "\n\u51b3\u80dc\u9898\uff1a\u8bf7\u8c08\u8c08\u60a8\u8fc7\u53bb\u505a\u8fc7\u6210\u529f\u7684\u3001\u4ee4\u4f60\u5f15\u4ee5\u4e3a\u50b2\u7684\u4e8b\u60c5\uff0c\u5e76\u89e3\u91ca\u4e3a\u4ec0\u4e48\uff1f\u8fd9\u5bf9\u4f60\u7684\u804c\u4e1a\u751f\u6daf\u6709\u4ec0\u4e48\u6837\u7684\u5f71\u54cd\uff1f"], "title": "\u963f\u5c14\u5361\u7279\uff08\u4e2d\u56fd\uff09\u7684\u9762\u8bd5\u9898\u76ee"},
{"contents": ["\u7ed9\u4f60\u4e00\u4e2a\u5355\u94fe\u8868\u548c\u4e00\u4e2a\u6307\u5411\u7279\u5b9a\u8282\u70b9\u7684\u6307\u9488\uff0c\u5982\u4f55\u5728\u4e00\u4e2a\u7279\u5b9a\u65f6\u95f4\u5220\u9664\u8fd9\u4e2a\u8282\u70b9\uff1f", "\u5220\u9664\u8282\u70b9\u6211\u4eec\u9700\u8981\u4e24\u4e2a\u4e1c\u897f\uff0c\u4e00\u4e2a\u662f\u8981\u5220\u9664\u8282\u70b9\u7684\u524d\u4e00\u4e2a\u8282\u70b9\u7684\u5730\u5740\u548c\u5b83\u7684\u540e\u4e00\u4e2a\u8282\u70b9\u3002\u8fd9\u4e2a\u9762\u8bd5\u9898\u60c5\u51b5\u4e0b\u6211\u4eec\u53ea\u77e5\u9053\u5f53\u524d\u8282\u70b9\u7684\u5730\u5740", "\u5047\u8bbe\u8fd9\u4e2a\u8282\u70b9\u5982\u4e0b\uff1a", "Data = the Data", "Next = Pointer to the next node", "\u518d\u5047\u8bbe\u8fd9\u4e2a\u94fe\u8868\u5982\u4e0b\u6240\u793a\u6211\u4eec\u53ea\u77e5\u9053\u5f53\u524d\u7684\u8282\u70b9\u5730\u5740", "PREIOUS NODE -> CURRENT NODE -> NEXT NODE", "// \u62f7\u8d1d\u5f53\u524d\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u5185\u5bb9\u5230\u5f53\u524d\u8282\u70b9", "nextnode = currentnode -> next", "currentnode -> data = nextnode ->data", "currentnode -> next = nextnode ->next", "\u6ce8\u610f\uff1a\u5982\u679c\u5f53\u524d\u8282\u70b9\u662f\u94fe\u8868\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u8bdd\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u4e0d\u9002\u7528"], "title": "C++\u9762\u8bd5\u9898\uff1a\u5173\u4e8e\u94fe\u8868\u548c\u6307\u9488\u7684"},
{"contents": ["\u8fd9\u4e2a\u95ee\u9898\u7528\u51e0\u4e2a\u89e3\u51b3\u65b9\u6848\u3002\u6211\u9996\u9009\u7684\u65b9\u6848\u662f\uff1a", "while(1) { }", "\u4e00\u4e9b\u7a0b\u5e8f\u5458\u66f4\u559c\u6b22\u5982\u4e0b\u65b9\u6848\uff1a", "for(;;) { }", "\u8fd9\u4e2a\u5b9e\u73b0\u65b9\u5f0f\u8ba9\u6211\u4e3a\u96be\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u8bed\u6cd5\u6ca1\u6709\u786e\u5207\u8868\u8fbe\u5230\u5e95\u600e\u4e48\u56de\u4e8b\u3002\u5982\u679c\u4e00\u4e2a\u5e94\u8bd5\u8005\u7ed9\u51fa\u8fd9\u4e2a\u4f5c\u4e3a\u65b9\u6848\uff0c\u6211\u5c06\u7528\u8fd9\u4e2a\u4f5c\u4e3a\u4e00\u4e2a\u673a\u4f1a\u53bb\u63a2\u7a76\u4ed6\u4eec\u8fd9\u6837\u505a\u7684", "\u57fa\u672c\u539f\u7406\u3002\u5982\u679c\u4ed6\u4eec\u7684\u57fa\u672c\u7b54\u6848\u662f\uff1a\u201c\u6211\u88ab\u6559\u7740\u8fd9\u6837\u505a\uff0c\u4f46\u4ece\u6ca1\u6709\u60f3\u5230\u8fc7\u4e3a\u4ec0\u4e48\u3002\u201d\u8fd9\u4f1a\u7ed9\u6211\u7559\u4e0b\u4e00\u4e2a\u574f\u5370\u8c61\u3002", "\u7b2c\u4e09\u4e2a\u65b9\u6848\u662f\u7528 goto", "Loop:", "\u2026", "goto Loop;", "\u5e94\u8bd5\u8005\u5982\u7ed9\u51fa\u4e0a\u9762\u7684\u65b9\u6848\uff0c\u8fd9\u8bf4\u660e\u6216\u8005\u4ed6\u662f\u4e00\u4e2a\u6c47\u7f16\u8bed\u8a00\u7a0b\u5e8f\u5458\uff08\u8fd9\u4e5f\u8bb8\u662f\u597d\u4e8b\uff09\u6216\u8005\u4ed6\u662f\u4e00\u4e2a\u60f3\u8fdb\u5165\u65b0\u9886\u57df\u7684BASIC/FORTRAN\u7a0b\u5e8f\u5458\u3002"], "title": "\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\u7ecf\u5e38\u8981\u7528\u5230\u65e0\u9650\u5faa\u73af\uff0c\u4f60\u600e\u4e48\u6837\u7528C\u7f16\u5199\u6b7b\u5faa\u73af\u5462\uff1f"},
{"contents": ["188\u3001\u4ee5\u4e0b\u4e09\u6761\u8f93\u51fa\u8bed\u53e5\u5206\u522b\u8f93\u51fa\u4ec0\u4e48\uff1f\u3010\u57fa\u7840\u3011", "\nchar str1[] = \u201cabc\u201d;", "\nchar str2[] = \u201cabc\u201d;", "\nconst char str3[] = \u201cabc\u201d;", "\nconst char str4[] = \u201cabc\u201d;", "\nconst char* str5 = \u201cabc\u201d;", "\nconst char* str6 = \u201cabc\u201d;", "\n\u7b2c53 \u9875\u517159 \u9875", "\ncout << boolalpha << (str1==str2) << endl; //\u8f93\u51fa\u4ec0\u4e48?", "\ncout << boolalpha << (str3==str4) << endl; //\u8f93\u51fa\u4ec0\u4e48?", "\ncout << boolalpha << (str5==str6) << endl; //\u8f93\u51fa\u4ec0\u4e48?", "\n\u7b54\uff1a\u8f93\u51fa\u4e3a\uff1afalse\u3001false\u3001true\u3002", "\n189\u3001\u4ee5\u4e0b\u53cd\u5411\u904d\u5386array \u6570\u7ec4\u7684\u65b9\u6cd5\u6709\u4ec0\u4e48\u9519\u8bef\uff1f\u3010\u57fa\u7840\u3011", "\nvector<int> array;", "\narray.push_back(1);", "\narray.push_back(2);", "\narray.push_back(3);", "\n//\u53cd\u5411\u904d\u5386array \u6570\u7ec4\uff1a", "\nfor(vector<int>::size_type i=array.size()-1; i>=0; \u2013i){", "\ncout << array[i] << endl;", "\n}", "\n\u7b54\uff1afor \u5faa\u73af\u4e2d\u7684\u53d8\u91cfi \u7684\u7c7b\u578b\u4e0d\u5e94\u5b9a\u4e49\u4e3avector<int>::size_type\uff0c", "\n\u56e0\u4e3a\u8be5\u7c7b\u578b\u4e3a\u65e0\u7b26\u53f7\u6570\u503c\u7c7b\u578b\uff0c\u6545\u5faa\u73af\u6761\u4ef6\u5c06\u6052\u6210\u7acb\uff0c\u4e3a\u6b7b\u5faa\u73af\uff0c\u5e94\u5c06\u5176\u7c7b\u578b\u5b9a", "\n\u4e49\u4e3a\u6709\u7b26\u53f7\u7684int \u7c7b\u578b\u3002", "\n190\u3001\u4ee5\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1f\u3010\u57fa\u7840\u3011", "\ncout << (true ? 1 : \u201c1\u2033) << endl;", "\n\u7b54\uff1a\u8fd0\u7b97\u7b26\u4e2d\u4e24\u4e2a\u53ef\u9009\u503c\u7684\u7c7b\u578b\u4e0d\u540c\u3002", "\n191\u3001\u4ee5\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1f\u3010\u57fa\u7840\u3011", "\ntypedef vector<int> IntArray;", "\nIntArray array;", "\narray.push_back(1);", "\narray.push_back(2);", "\narray.push_back(2);", "\narray.push_back(3);", "\n//\u5220\u9664array \u6570\u7ec4\u4e2d\u6240\u6709\u76842", "\nfor(IntArray::iterator itor=array.begin(); itor!=array.end();", "\n++itor){", "\nif(2==*itor) {", "\narray.erase(itor);", "\n}", "\n}", "\n\u7b54\uff1afor \u5faa\u73af\u4e2d\u7684if \u8bed\u53e5\u540e\u7684array.erase(itor)\u8bed\u53e5\uff0c\u5b83\u5c06\u8fed\u4ee3\u5668itor \u6240\u6307", "\n\u5411\u7684\u5143\u7d20\u5220\u9664\u540e\u4f1a\u81ea\u52a8\u4e0b\u79fb\u4e00\u4f4d\uff0c\u6545\u5e94\u5728\u5176\u540e\u52a0\u4e0a\u8bed\u53e5\uff1aitor\u2013;", "\n192\u3001\u4ee5\u4e0b\u4ee3\u7801\u4e2d\u7684\u4e24\u4e2asizeof \u7528\u6cd5\u6709\u95ee\u9898\u5417\uff1f\u3010\u57fa\u7840\u3011", "\nvoid upperCase(char str[]){ //\u5c06str \u4e2d\u7684\u5c0f\u5199\u5b57\u6bcd\u8f6c\u6362\u6210\u5927\u5199\u5b57\u6bcd", "\nfor(int i=0; i<sizeof(str)/sizeof(str[0]); ++i){", "\nif(\u2018a\u2019<=str[i] && str[i]<=\u2019z')", "\nstr[i] -= (\u2018a\u2019-'A\u2019);", "\n}", "\n\u7b2c54 \u9875\u517159 \u9875", "\n}", "\nint main(){", "\nchar str[] = \u201caBcDe\u201d;", "\ncout << \u201cstr \u5b57\u7b26\u4e32\u957f\u5ea6\u4e3a:\u201d << sizeof(str)/sizeof(str[0]);", "\ncout << endl;", "\nupperCase(str);", "\ncout << str << endl;", "\nreturn 0;", "\n}", "\n\u7b54\uff1a\u5728upperCase \u65b9\u6cd5\u4e2d\uff0cfor \u5faa\u73af\u7684sizeof(str)\u7684\u503c\u5c06\u603b\u662f4\uff0c\u6240\u4ee5\u8be5\u65b9\u6cd5", "\n\u53ea\u80fd\u5c06\u53c2\u6570\u4e2d\u7684\u5b57\u7b26\u4e32\u7684\u524d\u56db\u4e2a\u5b57\u7b26\u8f6c\u6362\u6210\u5927\u5199\u5b57\u6bcd\u3002", "\n193\u3001\u4ee5\u4e0b\u4ee3\u7801\u80fd\u591f\u7f16\u8bd1\u901a\u8fc7\u5417\uff1f\u4e3a\u4ec0\u4e48\uff1f\u3010\u57fa\u7840\u3011", "\nunsigned int const size1 = 2;", "\nchar str1[size1];", "\nunsigned int temp = 0;", "\ncin >> temp;", "\nunsigned int const size2 = temp;", "\nchar str2[size2];", "\n\u7b54\uff1a\u80fd\uff1b", "\n194\u3001\u4ee5\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1f\u3010\u57fa\u7840\u3011", "\nstruct Test{", "\nTest(int){}", "\nTest(){}", "\nvoid fun(){}", "\n};", "\nvoid main(void){", "\nTest a(1);", "\na.fun();", "\nTest b();", "\nb.fun();", "\n}", "\n\u7b54\uff1amain \u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b\u5e94\u4e3aint\uff1b\u4e0d\u80fd\u5bf9b \u8c03\u7528fun\uff08\uff09\u65b9\u6cd5\u3002", "\n195\u3001\u4ee5\u4e0b\u4ee3\u7801\u4e2d\u7684\u8f93\u51fa\u8bed\u53e5\u8f93\u51fa0 \u5417\uff1f\u4e3a\u4ec0\u4e48\uff1f\u3010\u57fa\u7840\u3011", "\nstruct CLS{", "\nint m_i;", "\nCLS(int i):m_i(i){ }", "\nCLS(){ CLS(0);}", "\n};", "\nint main(){", "\nCLS obj;", "\ncout <<obj.m_i << endl;", "\n\u7b2c55 \u9875\u517159 \u9875", "\n}", "\n\u7b54\uff1a\u8f93\u51fa\u4e0d\u662f0\uff1b", "\n196\u3001C++\u4e2d\u7684\u7a7a\u7c7b\uff0c\u9ed8\u8ba4\u4ea7\u751f\u54ea\u4e9b\u7c7b\u6210\u5458\u51fd\u6570\uff1f\u3010\u57fa\u7840\u3011", "\n\u7b54\uff1a\u7a7a\u7c7b\u4e2d\u9ed8\u8ba4\u5305\u542b\u7684\u6210\u5458\u51fd\u6570\u5982\u4e0b:", "\nclass Empty{", "\npublic:", "\nEmpty(); //\u7f3a\u7701\u6784\u9020\u51fd\u6570", "\nEmpty( const Empty& ); //\u62f7\u8d1d\u6784\u9020\u51fd\u6570", "\n~Empty(); //\u6790\u6784\u51fd\u6570", "\nEmpty& operator=( const Empty& ); //\u8d4b\u503c\u8fd0\u7b97\u7b26", "\nEmpty* operator&(); //\u53d6\u5740\u8fd0\u7b97\u7b26", "\nconst Empty* operator&() const; //\u53d6\u5740\u8fd0\u7b97\u7b26const", "\n};", "\n197\u3001\u7edf\u8ba1\u4e00\u7bc7\u6587\u7ae0\u4e2d\u5355\u8bcd\u4e2a\u6570\u3002\u3010\u57fa\u7840\u3011", "\n\u7b54\uff1a\u4ee3\u7801\u5982\u4e0b\uff1a", "\ninclude<iostream>", "\n#include<fstream>", "\nusing namespace std;", "\nint main(){", "\nifstream fin(\u201ct.txt\u201d);", "\nif(!fin){", "\ncout<<\u201dcan\u2019t open file\u201d<<endl;", "\nreturn -1;", "\n}", "\nint count = 0;", "\nchar buf[256];", "\nmemset(buf, 0, 256);", "\nwhile(1){", "\nfin2>>buf;", "\nif(fin2.eof())", "\nbreak;", "\ncount++;", "\n}", "\ncout<<\u201dThe number of the words is : \u201c<<count<<endl;", "\nfin2.close();", "\nreturn 0;", "\n}", "\n198\u3001\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u5b8c\u6210\u5185\u5b58\u4e4b\u95f4\u7684\u62f7\u8d1d\u3002\u3010\u4e2d\u7b49\u96be\u5ea6\u3011", "\n\u7b54\uff1a\u4ee3\u7801\u5982\u4e0b\uff1a", "\nvoid* mymemcpy(void* dest, const void* src, size_t count){", "\nchar* pdest = static_cast<char*>(dest);", "\nconst char* psrc = static_cast<const char*>(src);", "\n\u7b2c56 \u9875\u517159 \u9875", "\nif(pdest>psrc && pdest<psrc+count){ //\u80fd\u8003\u8651\u5230\u8fd9\u79cd\u60c5\u51b5\u5c31\u884c\u4e86", "\nfor(size_t i=count-1; i!=-1; \u2013i){", "\npdest[i] = psrc[i];", "\n}", "\n}else{", "\nfor(size_t i=0; i<count; ++i){", "\npdest[i] = psrc[i];", "\n}", "\n}", "\nreturn dest;", "\n}", "\nint main(){", "\nchar str[] = \u201c0123456789\u2033;", "\nmymemcpy(str+1, str+0, 9);", "\ncout << str << endl; //\u5c06\u8f93\u51fa\u201d0012345678\u2033", "\nreturn 0;", "\n}", "\n199\u3001\u975eC++\u5185\u5efa\u7c7b\u578bA \u548cB\uff0c\u5728\u54ea\u51e0\u79cd\u60c5\u51b5\u4e0bB \u80fd\u9690\u5f0f\u8f6c\u5316\u4e3aA\uff1f\u3010\u8f83\u96be\u3011", "\n\u7b54\uff1aa\uff09class B : public A{\u2026\u2026}//B \u516c\u6709\u7ee7\u627f\u81eaA\uff0c\u53ef\u4ee5\u662f\u95f4\u63a5\u7ee7\u627f\u7684", "\nb\uff09class B{operator A();}//B \u5b9e\u73b0\u4e86\u9690\u5f0f\u8f6c\u5316\u4e3aA \u7684\u8f6c\u5316", "\nc\uff09class A{ A(const B&);}//A \u5b9e\u73b0\u4e86non-explicit \u7684\u53c2\u6570\u4e3aB \u6784\u9020\u51fd\u6570", "\n(\u53ef\u4ee5\u6709\u5176\u4ed6\u5e26\u5e26\u9ed8\u8ba4\u503c\u7684\u53c2\u6570)", "\nd\uff09A& operator= (const A&);//\u8d4b\u503c\u64cd\u4f5c\uff0c\u867d\u4e0d\u662f\u6b63\u5b97\u7684\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\uff0c", "\n\u4f46\u4e5f\u53ef\u4ee5\u52c9\u5f3a\u7b97\u4e00\u4e2a", "\n200\u3001\u4ee5\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1f\u3010\u8f83\u96be\u3011", "\nvoid char2Hex(char c){ //\u5c06\u5b57\u7b26\u4ee516 \u8fdb\u5236\u663e\u793a", "\nchar ch = c/0\u00d710 + \u20190\u2032;", "\nif(ch>\u20199\u2032) ch += (\u2018A\u2019-\u20199\u2032-1);", "\nchar cl = c%0\u00d710 + \u20190\u2032;", "\nif(cl>\u20199\u2032) cl += (\u2018A\u2019-\u20199\u2032-1);", "\ncout << ch << cl << \u2018 \u2018;", "\n}", "\nint main(){", "\nchar str[] = \u201cI love \u4e2d\u56fd\u201d;", "\nfor(size_t i=0; i<strlen(str); ++i)", "\nchar2Hex(str[i]);", "\ncout << endl;", "\nreturn 0;", "\n}", "\n\u7b54\uff1a", "\n201\u3001\u4ee5\u4e0b\u4e24\u6761\u8f93\u51fa\u8bed\u53e5\u5206\u522b\u8f93\u51fa\u4ec0\u4e48\uff1f\u3010\u8f83\u96be\u3011", "\nfloat a = 1.0f;", "\n\u7b2c57 \u9875\u517159 \u9875", "\ncout << (int)a << endl;", "\ncout << (int&)a << endl;", "\ncout << boolalpha << ((int)a==(int&)a) << endl; //\u8f93\u51fa\u4ec0\u4e48", "\nfloat b = 0.0f;", "\ncout << (int)b << endl;", "\ncout << (int&)b << endl;", "\ncout << boolalpha << ((int)b==(int&)b) << endl;//\u8f93\u51fa\u4ec0\u4e48", "\n\u7b54\uff1a\u7b2c\u4e00\u5904\u8f93\u51fafalse\uff0c\u7b2c\u4e8c\u5904\u8f93\u51fatrue\u3002"], "title": "\u4e00\u5957\u5e26\u7b54\u6848\u7684C++\u7b14\u8bd5\u9898"},
{"contents": ["\u7b54\uff1aC++\u7684\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\uff1a", "\n#include <iostream>", "\n#include <iomanip>", "\n#include <vector>", "\nusing namespace std;", "\nclass longint {", "\nprivate:", "\nvector<int> iv;", "\npublic:", "\nlongint(void) { iv.push_back(1); }", "\nlongint& multiply(const int &);", "\nfriend ostream& operator<<(ostream &, const longint &);", "\n};", "\nostream& operator<<(ostream &os, const longint &v) {", "\nvector<int>::const_reverse_iterator iv_iter = v.iv.rbegin();", "\nos << *iv_iter++;", "\nfor ( ; iv_iter < v.iv.rend(); ++iv_iter) {", "\nos << setfill(\u20190\u2032) << setw(4) << *iv_iter;", "\n}", "\nreturn os;", "\n\u7b2c52 \u9875\u517159 \u9875", "\n}", "\nlongint& longint::multiply(const int &rv) {", "\nvector<int>::iterator iv_iter = iv.begin();", "\nint overflow = 0, product = 0;", "\nfor ( ; iv_iter < iv.end(); ++iv_iter) {", "\nproduct = (*iv_iter) * rv;", "\nproduct += overflow;", "\noverflow = 0;", "\nif (product > 10000) {", "\noverflow = product / 10000;", "\nproduct -= overflow * 10000;", "\n}", "\niv_iter = product;", "\n}", "\nif (0 != overflow) {", "\niv.push_back(overflow);", "\n}", "\nreturn *this;", "\n}", "\nint main(int argc, char **argv) {", "\nlongint result;", "\nint l = 0;", "\nif(argc==1){", "\ncout << \u201clike: multiply 1000\u2033 << endl;", "\nexit(0);", "\n}", "\nsscanf(argv[1], \u201c%d\u201d, &l);", "\nfor (int i = 2; i <= l; ++i) {", "\nresult.multiply(i);", "\n}", "\ncout << result << endl;", "\nreturn 0;", "\n}"], "title": "\u5199\u4e00\u4e2a\u65b9\u6cd51000 \u7684\u9636\u4e58\u3002"},
{"contents": ["1\uff0e\u5b9e\u73b0\u53cc\u5411\u94fe\u8868\u5220\u9664\u4e00\u4e2a\u8282\u70b9P\uff0c\u5728\u8282\u70b9P\u540e\u63d2\u5165\u4e00\u4e2a\u8282\u70b9\uff0c\u5199\u51fa\u8fd9\u4e24\u4e2a\u51fd\u6570\u3002", "2\uff0e\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u5c06\u5176\u4e2d\u7684\\t\u90fd\u8f6c\u6362\u62104\u4e2a\u7a7a\u683c\u3002", "3\uff0eWindows\u7a0b\u5e8f\u7684\u5165\u53e3\u662f\u54ea\u91cc\uff1f\u5199\u51faWindows\u6d88\u606f\u673a\u5236\u7684\u6d41\u7a0b\u3002", "4\uff0e\u5982\u4f55\u5b9a\u4e49\u548c\u5b9e\u73b0\u4e00\u4e2a\u7c7b\u7684\u6210\u5458\u51fd\u6570\u4e3a\u56de\u8c03\u51fd\u6570\uff1f", "5\uff0eC++\u91cc\u9762\u662f\u4e0d\u662f\u6240\u6709\u7684\u52a8\u4f5c\u90fd\u662fmain()\u5f15\u8d77\u7684\uff1f\u5982\u679c\u4e0d\u662f\uff0c\u8bf7\u4e3e\u4f8b\u3002", "6\uff0eC++\u91cc\u9762\u5982\u4f55\u58f0\u660econst void f(void)\u51fd\u6570\u4e3aC\u7a0b\u5e8f\u4e2d\u7684\u5e93\u51fd\u6570\uff1f", "7\uff0e\u4e0b\u5217\u54ea\u4e24\u4e2a\u662f\u7b49\u540c\u7684", "int b;", "A const int* a = &b;", "B const* int a = &b;", "C const int* const a = &b;", "D int const* const a = &b;", "8\uff0e\u5185\u8054\u51fd\u6570\u5728\u7f16\u8bd1\u65f6\u662f\u5426\u505a\u53c2\u6570\u7c7b\u578b\u68c0\u67e5\uff1f", "void g(base & b){", "b.play;", "}", "void main(){", "son s;", "g(s);", "return;", "}"], "title": "\u666e\u5929C++\u7b14\u8bd5\u9898"},
{"contents": ["1\uff0e\u5b9e\u73b0\u53cc\u5411\u94fe\u8868\u5220\u9664\u4e00\u4e2a\u8282\u70b9P\uff0c\u5728\u8282\u70b9P\u540e\u63d2\u5165\u4e00\u4e2a\u8282\u70b9\uff0c\u5199\u51fa\u8fd9\u4e24\u4e2a\u51fd\u6570\u3002", "2\uff0e\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u5c06\u5176\u4e2d\u7684\\t\u90fd\u8f6c\u6362\u62104\u4e2a\u7a7a\u683c\u3002", "3\uff0eWindows\u7a0b\u5e8f\u7684\u5165\u53e3\u662f\u54ea\u91cc\uff1f\u5199\u51faWindows\u6d88\u606f\u673a\u5236\u7684\u6d41\u7a0b\u3002", "4\uff0e\u5982\u4f55\u5b9a\u4e49\u548c\u5b9e\u73b0\u4e00\u4e2a\u7c7b\u7684\u6210\u5458\u51fd\u6570\u4e3a\u56de\u8c03\u51fd\u6570\uff1f", "5\uff0eC++\u91cc\u9762\u662f\u4e0d\u662f\u6240\u6709\u7684\u52a8\u4f5c\u90fd\u662fmain()\u5f15\u8d77\u7684\uff1f\u5982\u679c\u4e0d\u662f\uff0c\u8bf7\u4e3e\u4f8b\u3002", "6\uff0eC++\u91cc\u9762\u5982\u4f55\u58f0\u660econst void f(void)\u51fd\u6570\u4e3aC\u7a0b\u5e8f\u4e2d\u7684\u5e93\u51fd\u6570\uff1f", "7\uff0e\u4e0b\u5217\u54ea\u4e24\u4e2a\u662f\u7b49\u540c\u7684", "int b;", "A const int* a = &b;", "B const* int a = &b;", "C const int* const a = &b;", "D int const* const a = &b;", "8\uff0e\u5185\u8054\u51fd\u6570\u5728\u7f16\u8bd1\u65f6\u662f\u5426\u505a\u53c2\u6570\u7c7b\u578b\u68c0\u67e5\uff1f", "void g(base & b){", "b.play;", "}", "void main(){", "son s;", "g(s);", "return;", "}", "\u7a0b\u5e8f\u8bbe\u8ba1", "\n1.\uff08\u53ef\u4ee5\u7528\u81ea\u7136\u8bed\u8a00\u6765\u63cf\u8ff0\uff0c\u4e0d\u7f16\u7a0b\uff09\uff1aC/C++\u6e90\u4ee3\u7801\u4e2d\uff0c\u68c0\u67e5\u82b1\u62ec\u5f27\uff08\u662f\u201d\uff08\u201d\u4e0e", "\n\u201c\uff09\u201d\uff0c\u201d{\u201c\u4e0e\u201d}\u201d\uff09\u662f\u5426\u5339\u914d\uff0c\u82e5\u4e0d\u5339\u914d\uff0c\u5219\u8f93\u51fa\u4e0d\u5339\u914d\u82b1\u62ec\u5f27\u6240\u5728\u7684\u884c\u4e0e\u5217\u3002", "2\uff0c\u5de7\u6392\u6570\u5b57\uff0c\u5c061,2,\u2026,19,20\u8fd920\u4e2a\u6570\u5b57\u6392\u6210\u4e00\u6392\uff0c\u4f7f\u5f97\u76f8\u90bb\u7684\u4e24\u4e2a\u6570\u5b57\u4e4b\u548c\u4e3a\u4e00\u4e2a\u7d20\u6570\uff0c\u4e14", "\n\u9996\u5c3e\u4e24\u6570\u5b57\u4e4b\u548c\u4e5f\u4e3a\u4e00\u4e2a\u7d20\u6570\u3002\u7f16\u7a0b\u6253\u5370\u51fa\u6240\u6709\u7684\u6392\u6cd5\u3002", "3\uff0c\u6253\u5370\u4e00\u4e2aN*N\u7684\u65b9\u9635\uff0cN\u4e3a\u6bcf\u8fb9\u5b57\u7b26\u7684\u4e2a\u6570\uff08 3\u3008N\u300820 \uff09\uff0c\u8981\u6c42\u6700\u5916\u5c42\u4e3a\u201dX\u201d\uff0c\u7b2c\u4e8c\u5c42\u4e3a\u201dY\u201d\uff0c\u4ece\u7b2c\u4e09\u5c42\u8d77\u6bcf\u5c42\u4f9d\u6b21\u6253\u5370\u6570\u5b570\uff0c1\uff0c2\uff0c3\uff0c\u2026", "\n\u4f8b\u5b50\uff1a\u5f53N =5\uff0c\u6253\u5370\u51fa\u4e0b\u9762\u7684\u56fe\u5f62\uff1a", "\nX X X X X", "\nX Y Y Y X", "\nX Y 0 Y X", "\nX Y Y Y X", "\nX X X X X"], "title": "\u4e00\u5957VC\u8bd5\u9898(\u6ca1\u6709\u7b54\u6848)"},
{"contents": ["1. A class B network on the internet has a subnet mask of 255.255.240.0, what is the maximum number of hosts per subnet .", "a. 240 b. 255 c. 4094 d. 65534", "2. What is the difference: between o(log n) and o(log n^2), where both log arithems have base 2 .", "a. o(log n^2) is bigger b. o(log n) is bigger", "c. no difference", "3. For a class what would happen if we call a class\u2019s constructor from with the same class\u2019s constructor .", "a. compilation error b. linking error", "c. stack overflow d. none of the above", "4. \u201cnew\u201d in c++ is a: .", "a. library function like malloc in c", "b. key word c. operator", "d. none of the above", "5. Which of the following information is not contained in an inode .", "a. file owner b. file size", "c. file name d. disk address", "6. What\u2019s the number of comparisons in the worst case to merge two sorted lists containing n elements each .", "a. 2n b.2n-1 c.2n+1 d.2n-2", "7. Time complexity of n algorithm T(n), where n is the input size ,is T(n) =T(n-1)+1/n if n>1 otherwise 1the order of this algorithm is .", "a. log (n) b. n c. n^2 d. n^n", "8. The number of 1\u2019s in the binary representation of 3*4096+ 15*256+5*16+3 are .", "a. 8 b. 9 c. 10 d. 12"], "title": "\u7ef4\u5c14VERITAS\u8f6f\u4ef6\u7b14\u8bd5\u9898"},
{"contents": [], "title": "\u8054\u60f3C++\u7b14\u8bd5\u9898"},
{"contents": ["1\uff0e\u5b8c\u6210\u4e0b\u5217\u7a0b\u5e8f", "*", "*.*.", "*..*..*..", "*\u2026*\u2026*\u2026*\u2026", "*\u2026.*\u2026.*\u2026.*\u2026.*\u2026.", "*\u2026..*\u2026..*\u2026..*\u2026..*\u2026..*\u2026..", "*\u2026\u2026*\u2026\u2026*\u2026\u2026*\u2026\u2026*\u2026\u2026*\u2026\u2026*\u2026\u2026", "*\u2026\u2026.*\u2026\u2026.*\u2026\u2026.*\u2026\u2026.*\u2026\u2026.*\u2026\u2026.*\u2026\u2026.*\u2026\u2026.", "#include <stdio.h>", "#define N 8", "int main()", "{", "int i;", "int j;", "int k;", "\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014", "||", "\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014", "return 0;", "}", "2\uff0e\u5b8c\u6210\u7a0b\u5e8f\uff0c\u5b9e\u73b0\u5bf9\u6570\u7ec4\u7684\u964d\u5e8f\u6392\u5e8f", "#include <stdio.h>", "void sort( );", "int main()", "{", "int array[]={45\uff0c56\uff0c76\uff0c234\uff0c1\uff0c34\uff0c23\uff0c2\uff0c3}\uff1b //\u6570\u5b57\u4efb//\u610f\u7ed9\u51fa", "sort( );", "return 0;", "}", "void sort( )", "{", "\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014", "||", "\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014", "}", "3\uff0e\u8d39\u6ce2\u90a3\u5176\u6570\u5217\uff0c1\uff0c1\uff0c2\uff0c3\uff0c5\u2026\u2026\u7f16\u5199\u7a0b\u5e8f\u6c42\u7b2c\u5341\u9879\u3002\u53ef\u4ee5\u7528\u9012\u5f52\uff0c\u4e5f\u53ef\u4ee5\u7528\u5176\u4ed6\u65b9\u6cd5\uff0c\u4f46\u8981\u8bf4\u660e\u4f60\u9009\u62e9\u7684\u7406\u7531\u3002", "#include <stdio.h>", "int Pheponatch(int);", "int main()", "{", "printf(\u201cThe 10th is %d\u201d,Pheponatch(10));", "return 0;", "}", "int Pheponatch(int N)", "{", "\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "||", "\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "}", "4\uff0e\u4e0b\u5217\u7a0b\u5e8f\u8fd0\u884c\u65f6\u4f1a\u5d29\u6e83\uff0c\u8bf7\u627e\u51fa\u9519\u8bef\u5e76\u6539\u6b63\uff0c\u5e76\u4e14\u8bf4\u660e\u539f\u56e0\u3002", "#include <stdio.h>", "#include <malloc.h>", "typedef struct{", "TNode* left;", "TNode* right;", "int value;", "} TNode;", "TNode* root=NULL;", "void append(int N);", "int main()", "{", "append(63);", "append(45);", "append(32);", "append(77);", "append(96);", "append(21);", "append(17); // Again, \u6570\u5b57\u4efb\u610f\u7ed9\u51fa", "}", "void append(int N)", "{", "TNode* NewNode=(TNode *)malloc(sizeof(TNode));", "NewNode->value=N;", "if(root==NULL)", "{", "root=NewNode;", "return;", "}", "else", "{", "TNode* temp;", "temp=root;", "while((N>=temp.value && temp.left!=NULL) || (N<temp. value && temp. right !=NULL))", "{", "while(N>=temp.value && temp.left!=NULL)", "temp=temp.left;", "while(N<temp.value && temp.right!=NULL)", "temp=temp.right;", "}", "if(N>=temp.value)", "temp.left=NewNode;", "else", "temp.right=NewNode;", "return;", "}", "}"], "title": "Sony C++\u7b14\u8bd5\u9898"},
{"contents": ["1. \u5199\u4e00\u4e2a\u201c\u6807\u51c6\u201d\u5b8fMIN\uff0c\u8fd9\u4e2a\u5b8f\u8f93\u5165\u4e24\u4e2a\u53c2\u6570\u5e76\u8fd4\u56de\u8f83\u5c0f\u7684\u4e00\u4e2a\u3002", "#define MIN(A,B) ((A) <= (B) (A) : (B))", "\u8fd9\u4e2a\u6d4b\u8bd5\u662f\u4e3a\u4e0b\u9762\u7684\u76ee\u7684\u800c\u8bbe\u7684\uff1a", "1). \u6807\u8bc6#define\u5728\u5b8f\u4e2d\u5e94\u7528\u7684\u57fa\u672c\u77e5\u8bc6\u3002\u8fd9\u662f\u5f88\u91cd\u8981\u7684\uff0c\u56e0\u4e3a\u76f4\u5230\u5d4c\u5165(inline)\u64cd\u4f5c\u7b26\u53d8\u4e3a\u6807\u51c6C\u7684\u4e00\u90e8\u5206\uff0c\u5b8f\u662f\u65b9\u4fbf\u4ea7\u751f\u5d4c\u5165\u4ee3\u7801\u7684\u552f\u4e00\u65b9\u6cd5\uff0c\u5bf9\u4e8e\u5d4c\u5165\u5f0f\u7cfb\u7edf\u6765\u8bf4\uff0c\u4e3a\u4e86\u80fd\u8fbe\u5230\u8981\u6c42\u7684\u6027\u80fd\uff0c\u5d4c\u5165\u4ee3\u7801\u7ecf\u5e38\u662f\u5fc5\u987b\u7684\u65b9\u6cd5\u3002", "2). \u4e09\u91cd\u6761\u4ef6\u64cd\u4f5c\u7b26\u7684\u77e5\u8bc6\u3002\u8fd9\u4e2a\u64cd\u4f5c\u7b26\u5b58\u5728C\u8bed\u8a00\u4e2d\u7684\u539f\u56e0\u662f\u5b83\u4f7f\u5f97\u7f16\u8bd1\u5668\u80fd\u4ea7\u751f\u6bd4if-then-else\u66f4\u4f18\u5316\u7684\u4ee3\u7801\uff0c\u4e86\u89e3\u8fd9\u4e2a\u7528\u6cd5\u662f\u5f88\u91cd\u8981\u7684\u3002", "3). \u61c2\u5f97\u5728\u5b8f\u4e2d\u5c0f\u5fc3\u5730\u628a\u53c2\u6570\u7528\u62ec\u53f7\u62ec\u8d77\u6765", "4). \u6211\u4e5f\u7528\u8fd9\u4e2a\u95ee\u9898\u5f00\u59cb\u8ba8\u8bba\u5b8f\u7684\u526f\u4f5c\u7528\uff0c\u4f8b\u5982\uff1a\u5f53\u4f60\u5199\u4e0b\u9762\u7684\u4ee3\u7801\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\u4e8b\uff1f", "least = MIN(*p++, b);", "3. \u9884\u5904\u7406\u5668\u6807\u8bc6#error\u7684\u76ee\u7684\u662f\u4ec0\u4e48\uff1f", "\u5982\u679c\u4f60\u4e0d\u77e5\u9053\u7b54\u6848\uff0c\u8bf7\u770b\u53c2\u8003\u6587\u732e1\u3002\u8fd9\u95ee\u9898\u5bf9\u533a\u5206\u4e00\u4e2a\u6b63\u5e38\u7684\u4f19\u8ba1\u548c\u4e00\u4e2a\u4e66\u5446\u5b50\u662f\u5f88\u6709\u7528\u7684\u3002\u53ea\u6709\u4e66\u5446\u5b50\u624d\u4f1a\u8bfbC\u8bed\u8a00\u8bfe\u672c\u7684\u9644\u5f55\u53bb\u627e\u51fa\u8c61\u8fd9\u79cd", "\u95ee\u9898\u7684\u7b54\u6848\u3002\u5f53\u7136\u5982\u679c\u4f60\u4e0d\u662f\u5728\u627e\u4e00\u4e2a\u4e66\u5446\u5b50\uff0c\u90a3\u4e48\u5e94\u8bd5\u8005\u6700\u597d\u5e0c\u671b\u81ea\u5df1\u4e0d\u8981\u77e5\u9053\u7b54\u6848\u3002", "\u6b7b\u5faa\u73af\uff08Infinite loops\uff09", "4. \u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\u7ecf\u5e38\u8981\u7528\u5230\u65e0\u9650\u5faa\u73af\uff0c\u4f60\u600e\u4e48\u6837\u7528C\u7f16\u5199\u6b7b\u5faa\u73af\u5462\uff1f", "\u8fd9\u4e2a\u95ee\u9898\u7528\u51e0\u4e2a\u89e3\u51b3\u65b9\u6848\u3002\u6211\u9996\u9009\u7684\u65b9\u6848\u662f\uff1a", "while(1) { }", "\u4e00\u4e9b\u7a0b\u5e8f\u5458\u66f4\u559c\u6b22\u5982\u4e0b\u65b9\u6848\uff1a", "for(;;) { }", "\u8fd9\u4e2a\u5b9e\u73b0\u65b9\u5f0f\u8ba9\u6211\u4e3a\u96be\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u8bed\u6cd5\u6ca1\u6709\u786e\u5207\u8868\u8fbe\u5230\u5e95\u600e\u4e48\u56de\u4e8b\u3002\u5982\u679c\u4e00\u4e2a\u5e94\u8bd5\u8005\u7ed9\u51fa\u8fd9\u4e2a\u4f5c\u4e3a\u65b9\u6848\uff0c\u6211\u5c06\u7528\u8fd9\u4e2a\u4f5c\u4e3a\u4e00\u4e2a\u673a\u4f1a\u53bb\u63a2\u7a76\u4ed6\u4eec\u8fd9\u6837\u505a\u7684", "\u57fa\u672c\u539f\u7406\u3002\u5982\u679c\u4ed6\u4eec\u7684\u57fa\u672c\u7b54\u6848\u662f\uff1a\u201c\u6211\u88ab\u6559\u7740\u8fd9\u6837\u505a\uff0c\u4f46\u4ece\u6ca1\u6709\u60f3\u5230\u8fc7\u4e3a\u4ec0\u4e48\u3002\u201d\u8fd9\u4f1a\u7ed9\u6211\u7559\u4e0b\u4e00\u4e2a\u574f\u5370\u8c61\u3002", "\u7b2c\u4e09\u4e2a\u65b9\u6848\u662f\u7528 goto", "Loop:", "\u2026", "goto Loop;", "\u5e94\u8bd5\u8005\u5982\u7ed9\u51fa\u4e0a\u9762\u7684\u65b9\u6848\uff0c\u8fd9\u8bf4\u660e\u6216\u8005\u4ed6\u662f\u4e00\u4e2a\u6c47\u7f16\u8bed\u8a00\u7a0b\u5e8f\u5458\uff08\u8fd9\u4e5f\u8bb8\u662f\u597d\u4e8b\uff09\u6216\u8005\u4ed6\u662f\u4e00\u4e2a\u60f3\u8fdb\u5165\u65b0\u9886\u57df\u7684BASIC/FORTRAN\u7a0b\u5e8f\u5458\u3002", "\u6570\u636e\u58f0\u660e\uff08Data declarations\uff09", "5. \u7528\u53d8\u91cfa\u7ed9\u51fa\u4e0b\u9762\u7684\u5b9a\u4e49", "a) \u4e00\u4e2a\u6574\u578b\u6570\uff08An integer\uff09", "b) \u4e00\u4e2a\u6307\u5411\u6574\u578b\u6570\u7684\u6307\u9488\uff08A pointer to an integer\uff09", "c) \u4e00\u4e2a\u6307\u5411\u6307\u9488\u7684\u7684\u6307\u9488\uff0c\u5b83\u6307\u5411\u7684\u6307\u9488\u662f\u6307\u5411\u4e00\u4e2a\u6574\u578b\u6570\uff08A pointer to a pointer to an integer\uff09", "d) \u4e00\u4e2a\u670910\u4e2a\u6574\u578b\u6570\u7684\u6570\u7ec4\uff08An array of 10 integers\uff09", "e) \u4e00\u4e2a\u670910\u4e2a\u6307\u9488\u7684\u6570\u7ec4\uff0c\u8be5\u6307\u9488\u662f\u6307\u5411\u4e00\u4e2a\u6574\u578b\u6570\u7684\uff08An array of 10 pointers to integers\uff09", "f) \u4e00\u4e2a\u6307\u5411\u670910\u4e2a\u6574\u578b\u6570\u6570\u7ec4\u7684\u6307\u9488\uff08A pointer to an array of 10 integers\uff09", "g) \u4e00\u4e2a\u6307\u5411\u51fd\u6570\u7684\u6307\u9488\uff0c\u8be5\u51fd\u6570\u6709\u4e00\u4e2a\u6574\u578b\u53c2\u6570\u5e76\u8fd4\u56de\u4e00\u4e2a\u6574\u578b\u6570\uff08A pointer to a function that takes an integer as an argument and returns an integer\uff09", "h) \u4e00\u4e2a\u670910\u4e2a\u6307\u9488\u7684\u6570\u7ec4\uff0c\u8be5\u6307\u9488\u6307\u5411\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u6709\u4e00\u4e2a\u6574\u578b\u53c2\u6570\u5e76\u8fd4\u56de\u4e00\u4e2a\u6574\u578b\u6570\uff08 An array of ten pointers to functions that take an integer argument and return an integer \uff09", "\u7b54\u6848\u662f\uff1a", "a) int a; // An integer", "b) int *a; // A pointer to an integer", "c) int **a; // A pointer to a pointer to an integer", "d) int a[10]; // An array of 10 integers", "e) int *a[10]; // An array of 10 pointers to integers", "f) int (*a)[10]; // A pointer to an array of 10 integers", "g) int (*a)(int); // A pointer to a function a that takes an integer argument and returns an integer", "h) int (*a[10])(int); // An array of 10 pointers to functions that take an integer argument and return an integer", "\u4eba\u4eec\u7ecf\u5e38\u58f0\u79f0\u8fd9\u91cc\u6709\u51e0\u4e2a\u95ee\u9898\u662f\u90a3\u79cd\u8981\u7ffb\u4e00\u4e0b\u4e66\u624d\u80fd\u56de\u7b54\u7684\u95ee\u9898\uff0c\u6211\u540c\u610f\u8fd9\u79cd\u8bf4\u6cd5\u3002\u5f53\u6211\u5199\u8fd9\u7bc7\u6587\u7ae0\u65f6\uff0c\u4e3a\u4e86\u786e\u5b9a\u8bed\u6cd5\u7684\u6b63\u786e\u6027\uff0c\u6211\u7684\u786e\u67e5\u4e86\u4e00\u4e0b\u4e66\u3002", "\u4f46\u662f\u5f53\u6211\u88ab\u9762\u8bd5\u7684\u65f6\u5019\uff0c\u6211\u671f\u671b\u88ab\u95ee\u5230\u8fd9\u4e2a\u95ee\u9898\uff08\u6216\u8005\u76f8\u8fd1\u7684\u95ee\u9898\uff09\u3002\u56e0\u4e3a\u5728\u88ab\u9762\u8bd5\u7684\u8fd9\u6bb5\u65f6\u95f4\u91cc\uff0c\u6211\u786e\u5b9a\u6211\u77e5\u9053\u8fd9\u4e2a\u95ee\u9898\u7684\u7b54\u6848\u3002\u5e94\u8bd5\u8005\u5982\u679c\u4e0d\u77e5\u9053", "\u6240\u6709\u7684\u7b54\u6848\uff08\u6216\u81f3\u5c11\u5927\u90e8\u5206\u7b54\u6848\uff09\uff0c\u90a3\u4e48\u4e5f\u5c31\u6ca1\u6709\u4e3a\u8fd9\u6b21\u9762\u8bd5\u505a\u51c6\u5907\uff0c\u5982\u679c\u8be5\u9762\u8bd5\u8005\u6ca1\u6709\u4e3a\u8fd9\u6b21\u9762\u8bd5\u505a\u51c6\u5907\uff0c\u90a3\u4e48\u4ed6\u53c8\u80fd\u4e3a\u4ec0\u4e48\u51fa\u51c6\u5907\u5462\uff1f", "Static", "6. \u5173\u952e\u5b57static\u7684\u4f5c\u7528\u662f\u4ec0\u4e48\uff1f", "\u8fd9\u4e2a\u7b80\u5355\u7684\u95ee\u9898\u5f88\u5c11\u6709\u4eba\u80fd\u56de\u7b54\u5b8c\u5168\u3002\u5728C\u8bed\u8a00\u4e2d\uff0c\u5173\u952e\u5b57static\u6709\u4e09\u4e2a\u660e\u663e\u7684\u4f5c\u7528\uff1a", "1). \u5728\u51fd\u6570\u4f53\uff0c\u4e00\u4e2a\u88ab\u58f0\u660e\u4e3a\u9759\u6001\u7684\u53d8\u91cf\u5728\u8fd9\u4e00\u51fd\u6570\u88ab\u8c03\u7528\u8fc7\u7a0b\u4e2d\u7ef4\u6301\u5176\u503c\u4e0d\u53d8\u3002", "2). \u5728\u6a21\u5757\u5185\uff08\u4f46\u5728\u51fd\u6570\u4f53\u5916\uff09\uff0c\u4e00\u4e2a\u88ab\u58f0\u660e\u4e3a\u9759\u6001\u7684\u53d8\u91cf\u53ef\u4ee5\u88ab\u6a21\u5757\u5185\u6240\u7528\u51fd\u6570\u8bbf\u95ee\uff0c\u4f46\u4e0d\u80fd\u88ab\u6a21\u5757\u5916\u5176\u5b83\u51fd\u6570\u8bbf\u95ee\u3002\u5b83\u662f\u4e00\u4e2a\u672c\u5730\u7684\u5168\u5c40\u53d8\u91cf\u3002", "3). \u5728\u6a21\u5757\u5185\uff0c\u4e00\u4e2a\u88ab\u58f0\u660e\u4e3a\u9759\u6001\u7684\u51fd\u6570\u53ea\u53ef\u88ab\u8fd9\u4e00\u6a21\u5757\u5185\u7684\u5176\u5b83\u51fd\u6570\u8c03\u7528\u3002\u90a3\u5c31\u662f\uff0c\u8fd9\u4e2a\u51fd\u6570\u88ab\u9650\u5236\u5728\u58f0\u660e\u5b83\u7684\u6a21\u5757\u7684\u672c\u5730\u8303\u56f4\u5185\u4f7f\u7528\u3002", "\u5927\u591a\u6570\u5e94\u8bd5\u8005\u80fd\u6b63\u786e\u56de\u7b54\u7b2c\u4e00\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u80fd\u6b63\u786e\u56de\u7b54\u7b2c\u4e8c\u90e8\u5206\uff0c\u540c\u662f\u5f88\u5c11\u7684\u4eba\u80fd\u61c2\u5f97\u7b2c\u4e09\u90e8\u5206\u3002\u8fd9\u662f\u4e00\u4e2a\u5e94\u8bd5\u8005\u7684\u4e25\u91cd\u7684\u7f3a\u70b9\uff0c\u56e0\u4e3a\u4ed6\u663e\u7136\u4e0d\u61c2\u5f97\u672c\u5730\u5316\u6570\u636e\u548c\u4ee3\u7801\u8303\u56f4\u7684\u597d\u5904\u548c\u91cd\u8981\u6027\u3002", "Const", "\n7\uff0e\u5173\u952e\u5b57const\u662f\u4ec0\u4e48\u542b\u610f\uff1f", "\u6211\u53ea\u8981\u4e00\u542c\u5230\u88ab\u9762\u8bd5\u8005\u8bf4\uff1a\u201cconst\u610f\u5473\u7740\u5e38\u6570\u201d\uff0c\u6211\u5c31\u77e5\u9053\u6211\u6b63\u5728\u548c\u4e00\u4e2a\u4e1a\u4f59\u8005\u6253\u4ea4\u9053\u3002\u53bb\u5e74Dan Saks\u5df2\u7ecf\u5728\u4ed6\u7684\u6587\u7ae0\u91cc\u5b8c\u5168\u6982\u62ec\u4e86const\u7684\u6240\u6709\u7528\u6cd5\uff0c\u56e0\u6b64ESP(\u8bd1\u8005\uff1aEmbedded Systems Programming)\u7684\u6bcf\u4e00\u4f4d\u8bfb\u8005\u5e94\u8be5\u975e\u5e38\u719f\u6089const\u80fd\u505a\u4ec0\u4e48\u548c\u4e0d\u80fd\u505a\u4ec0\u4e48.\u5982\u679c\u4f60\u4ece\u6ca1\u6709\u8bfb\u5230\u90a3\u7bc7\u6587\u7ae0\uff0c\u53ea\u8981\u80fd\u8bf4\u51faconst\u610f\u5473\u7740\u201c\u53ea\u8bfb\u201d\u5c31\u53ef\u4ee5\u4e86\u3002\u5c3d\u7ba1\u8fd9\u4e2a\u7b54\u6848\u4e0d\u662f\u5b8c\u5168\u7684\u7b54\u6848\uff0c\u4f46\u6211\u63a5\u53d7\u5b83\u4f5c\u4e3a\u4e00\u4e2a\u6b63\u786e\u7684\u7b54\u6848\u3002\uff08\u5982\u679c\u4f60\u60f3\u77e5\u9053\u66f4\u8be6\u7ec6\u7684\u7b54\u6848\uff0c\u4ed4\u7ec6\u8bfb\u4e00\u4e0bSaks\u7684\u6587\u7ae0\u5427\u3002\uff09\u5982\u679c\u5e94\u8bd5\u8005\u80fd\u6b63\u786e\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u5c06\u95ee\u4ed6\u4e00\u4e2a\u9644\u52a0\u7684\u95ee\u9898\uff1a\u4e0b\u9762\u7684\u58f0\u660e\u90fd\u662f\u4ec0\u4e48\u610f\u601d\uff1f", "const int a;", "int const a;", "const int *a;", "int * const a;", "int const * a const;", "\u524d\u4e24\u4e2a\u7684\u4f5c\u7528\u662f\u4e00\u6837\uff0ca\u662f\u4e00\u4e2a\u5e38\u6574\u578b\u6570\u3002\u7b2c\u4e09\u4e2a\u610f\u5473\u7740a\u662f\u4e00\u4e2a\u6307\u5411\u5e38\u6574\u578b\u6570\u7684\u6307\u9488\uff08\u4e5f\u5c31\u662f\uff0c\u6574\u578b\u6570\u662f\u4e0d\u53ef\u4fee\u6539\u7684\uff0c\u4f46\u6307\u9488\u53ef\u4ee5\uff09\u3002\u7b2c\u56db\u4e2a\u610f\u601da\u662f\u4e00\u4e2a\u6307\u5411\u6574\u578b\u6570\u7684\u5e38\u6307\u9488\uff08\u4e5f\u5c31\u662f\u8bf4\uff0c\u6307\u9488\u6307\u5411\u7684\u6574\u578b\u6570\u662f\u53ef\u4ee5\u4fee\u6539\u7684\uff0c\u4f46\u6307\u9488\u662f\u4e0d\u53ef\u4fee\u6539\u7684\uff09\u3002\u6700\u540e\u4e00\u4e2a\u610f\u5473\u7740a\u662f\u4e00\u4e2a\u6307\u5411\u5e38\u6574\u578b\u6570\u7684\u5e38\u6307\u9488\uff08\u4e5f\u5c31\u662f\u8bf4\uff0c\u6307\u9488\u6307\u5411\u7684\u6574\u578b\u6570\u662f\u4e0d\u53ef\u4fee\u6539\u7684\uff0c\u540c\u65f6\u6307\u9488\u4e5f\u662f\u4e0d\u53ef\u4fee\u6539\u7684\uff09\u3002\u5982\u679c\u5e94\u8bd5\u8005\u80fd\u6b63\u786e\u56de\u7b54\u8fd9\u4e9b\u95ee\u9898\uff0c\u90a3\u4e48\u4ed6\u5c31\u7ed9\u6211\u7559\u4e0b\u4e86\u4e00\u4e2a\u597d\u5370\u8c61\u3002\u987a\u5e26\u63d0\u4e00\u53e5\uff0c\u4e5f\u8bb8\u4f60\u53ef\u80fd\u4f1a\u95ee\uff0c\u5373\u4f7f\u4e0d\u7528\u5173\u952e\u5b57const\uff0c\u4e5f\u8fd8\u662f\u80fd\u5f88\u5bb9\u6613\u5199\u51fa\u529f\u80fd\u6b63\u786e\u7684\u7a0b\u5e8f\uff0c\u90a3\u4e48\u6211\u4e3a\u4ec0\u4e48\u8fd8\u8981\u5982\u6b64\u770b\u91cd\u5173\u952e\u5b57const\u5462\uff1f\u6211\u4e5f\u5982\u4e0b\u7684\u51e0\u4e0b\u7406\u7531\uff1a", "1). \u5173\u952e\u5b57const\u7684\u4f5c\u7528\u662f\u4e3a\u7ed9\u8bfb\u4f60\u4ee3\u7801\u7684\u4eba\u4f20\u8fbe\u975e\u5e38\u6709\u7528\u7684\u4fe1\u606f\uff0c\u5b9e\u9645\u4e0a\uff0c\u58f0\u660e\u4e00\u4e2a\u53c2\u6570\u4e3a\u5e38\u91cf\u662f\u4e3a\u4e86\u544a\u8bc9\u4e86\u7528\u6237\u8fd9\u4e2a\u53c2\u6570\u7684\u5e94\u7528\u76ee\u7684\u3002\u5982\u679c\u4f60\u66fe\u82b1\u5f88\u591a\u65f6\u95f4\u6e05\u7406\u5176\u5b83\u4eba\u7559\u4e0b\u7684\u5783\u573e\uff0c\u4f60\u5c31\u4f1a\u5f88\u5feb\u5b66\u4f1a\u611f\u8c22\u8fd9\u70b9\u591a\u4f59\u7684\u4fe1\u606f\u3002\uff08\u5f53\u7136\uff0c\u61c2\u5f97\u7528const\u7684\u7a0b\u5e8f\u5458\u5f88\u5c11\u4f1a\u7559\u4e0b\u7684\u5783\u573e\u8ba9\u522b\u4eba\u6765\u6e05\u7406\u7684\u3002\uff09", "2). \u901a\u8fc7\u7ed9\u4f18\u5316\u5668\u4e00\u4e9b\u9644\u52a0\u7684\u4fe1\u606f\uff0c\u4f7f\u7528\u5173\u952e\u5b57const\u4e5f\u8bb8\u80fd\u4ea7\u751f\u66f4\u7d27\u51d1\u7684\u4ee3\u7801\u3002", "3). \u5408\u7406\u5730\u4f7f\u7528\u5173\u952e\u5b57const\u53ef\u4ee5\u4f7f\u7f16\u8bd1\u5668\u5f88\u81ea\u7136\u5730\u4fdd\u62a4\u90a3\u4e9b\u4e0d\u5e0c\u671b\u88ab\u6539\u53d8\u7684\u53c2\u6570\uff0c\u9632\u6b62\u5176\u88ab\u65e0\u610f\u7684\u4ee3\u7801\u4fee\u6539\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11bug\u7684\u51fa\u73b0\u3002", "Volatile", "8. \u5173\u952e\u5b57volatile\u6709\u4ec0\u4e48\u542b\u610f \u5e76\u7ed9\u51fa\u4e09\u4e2a\u4e0d\u540c\u7684\u4f8b\u5b50\u3002", "\u4e00\u4e2a\u5b9a\u4e49\u4e3avolatile\u7684\u53d8\u91cf\u662f\u8bf4\u8fd9\u53d8\u91cf\u53ef\u80fd\u4f1a\u88ab\u610f\u60f3\u4e0d\u5230\u5730\u6539\u53d8\uff0c\u8fd9\u6837\uff0c\u7f16\u8bd1\u5668\u5c31\u4e0d\u4f1a\u53bb\u5047\u8bbe\u8fd9\u4e2a\u53d8\u91cf\u7684\u503c\u4e86\u3002\u7cbe\u786e\u5730\u8bf4\u5c31\u662f\uff0c\u4f18\u5316\u5668\u5728\u7528\u5230\u8fd9\u4e2a\u53d8\u91cf\u65f6\u5fc5\u987b\u6bcf\u6b21\u90fd\u5c0f\u5fc3\u5730\u91cd\u65b0\u8bfb\u53d6\u8fd9\u4e2a\u53d8\u91cf\u7684\u503c\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u4fdd\u5b58\u5728\u5bc4\u5b58\u5668\u91cc\u7684\u5907\u4efd\u3002\u4e0b\u9762\u662fvolatile\u53d8\u91cf\u7684\u51e0\u4e2a\u4f8b\u5b50\uff1a", "1). \u5e76\u884c\u8bbe\u5907\u7684\u786c\u4ef6\u5bc4\u5b58\u5668\uff08\u5982\uff1a\u72b6\u6001\u5bc4\u5b58\u5668\uff09", "2). \u4e00\u4e2a\u4e2d\u65ad\u670d\u52a1\u5b50\u7a0b\u5e8f\u4e2d\u4f1a\u8bbf\u95ee\u5230\u7684\u975e\u81ea\u52a8\u53d8\u91cf(Non-automatic variables)", "3). \u591a\u7ebf\u7a0b\u5e94\u7528\u4e2d\u88ab\u51e0\u4e2a\u4efb\u52a1\u5171\u4eab\u7684\u53d8\u91cf", "\u56de\u7b54\u4e0d\u51fa\u8fd9\u4e2a\u95ee\u9898\u7684\u4eba\u662f\u4e0d\u4f1a\u88ab\u96c7\u4f63\u7684\u3002\u6211\u8ba4\u4e3a\u8fd9\u662f\u533a\u5206C\u7a0b\u5e8f\u5458\u548c\u5d4c\u5165\u5f0f\u7cfb\u7edf\u7a0b\u5e8f\u5458\u7684\u6700\u57fa\u672c\u7684\u95ee\u9898\u3002\u5d4c\u5165\u5f0f\u7cfb\u7edf\u7a0b\u5e8f\u5458\u7ecf\u5e38\u540c\u786c\u4ef6\u3001\u4e2d\u65ad\u3001RTOS\u7b49\u7b49\u6253\u4ea4\u9053\uff0c\u6240\u7528\u8fd9\u4e9b\u90fd\u8981\u6c42volatile\u53d8\u91cf\u3002\u4e0d\u61c2\u5f97volatile\u5185\u5bb9\u5c06\u4f1a\u5e26\u6765\u707e\u96be\u3002", "\u5047\u8bbe\u88ab\u9762\u8bd5\u8005\u6b63\u786e\u5730\u56de\u7b54\u4e86\u8fd9\u662f\u95ee\u9898\uff08\u55ef\uff0c\u6000\u7591\u8fd9\u5426\u4f1a\u662f\u8fd9\u6837\uff09\uff0c\u6211\u5c06\u7a0d\u5fae\u6df1\u7a76\u4e00\u4e0b\uff0c\u770b\u4e00\u4e0b\u8fd9\u5bb6\u4f19\u662f\u4e0d\u662f\u76f4\u6b63\u61c2\u5f97volatile\u5b8c\u5168\u7684\u91cd\u8981\u6027\u3002", "1). \u4e00\u4e2a\u53c2\u6570\u65e2\u53ef\u4ee5\u662fconst\u8fd8\u53ef\u4ee5\u662fvolatile\u5417\uff1f\u89e3\u91ca\u4e3a\u4ec0\u4e48\u3002", "2). \u4e00\u4e2a\u6307\u9488\u53ef\u4ee5\u662fvolatile \u5417\uff1f\u89e3\u91ca\u4e3a\u4ec0\u4e48\u3002", "3). \u4e0b\u9762\u7684\u51fd\u6570\u6709\u4ec0\u4e48\u9519\u8bef\uff1a", "int square(volatile int *ptr)", "{", "return *ptr * *ptr;", "}", "\u4e0b\u9762\u662f\u7b54\u6848\uff1a", "1). \u662f\u7684\u3002\u4e00\u4e2a\u4f8b\u5b50\u662f\u53ea\u8bfb\u7684\u72b6\u6001\u5bc4\u5b58\u5668\u3002\u5b83\u662fvolatile\u56e0\u4e3a\u5b83\u53ef\u80fd\u88ab\u610f\u60f3\u4e0d\u5230\u5730\u6539\u53d8\u3002\u5b83\u662fconst\u56e0\u4e3a\u7a0b\u5e8f\u4e0d\u5e94\u8be5\u8bd5\u56fe\u53bb\u4fee\u6539\u5b83\u3002", "2). \u662f\u7684\u3002\u5c3d\u7ba1\u8fd9\u5e76\u4e0d\u5f88\u5e38\u89c1\u3002\u4e00\u4e2a\u4f8b\u5b50\u662f\u5f53\u4e00\u4e2a\u4e2d\u670d\u52a1\u5b50\u7a0b\u5e8f\u4fee\u8be5\u4e00\u4e2a\u6307\u5411\u4e00\u4e2abuffer\u7684\u6307\u9488\u65f6\u3002", "3). \u8fd9\u6bb5\u4ee3\u7801\u7684\u6709\u4e2a\u6076\u4f5c\u5267\u3002\u8fd9\u6bb5\u4ee3\u7801\u7684\u76ee\u7684\u662f\u7528\u6765\u8fd4\u6307\u9488*ptr\u6307\u5411\u503c\u7684\u5e73\u65b9\uff0c\u4f46\u662f\uff0c\u7531\u4e8e*ptr\u6307\u5411\u4e00\u4e2avolatile\u578b\u53c2\u6570\uff0c\u7f16\u8bd1\u5668\u5c06\u4ea7\u751f\u7c7b\u4f3c\u4e0b\u9762\u7684\u4ee3\u7801\uff1a", "int square(volatile int *ptr)", "{", "int a,b;", "a = *ptr;", "b = *ptr;", "return a * b;", "}", "\u7531\u4e8e*ptr\u7684\u503c\u53ef\u80fd\u88ab\u610f\u60f3\u4e0d\u5230\u5730\u8be5\u53d8\uff0c\u56e0\u6b64a\u548cb\u53ef\u80fd\u662f\u4e0d\u540c\u7684\u3002\u7ed3\u679c\uff0c\u8fd9\u6bb5\u4ee3\u7801\u53ef\u80fd\u8fd4\u4e0d\u662f\u4f60\u6240\u671f\u671b\u7684\u5e73\u65b9\u503c\uff01\u6b63\u786e\u7684\u4ee3\u7801\u5982\u4e0b\uff1a", "long square(volatile int *ptr)", "{", "int a;", "a = *ptr;", "return a * a;", "}", "\u4f4d\u64cd\u4f5c\uff08Bit manipulation\uff09", "9. \u5d4c\u5165\u5f0f\u7cfb\u7edf\u603b\u662f\u8981\u7528\u6237\u5bf9\u53d8\u91cf\u6216\u5bc4\u5b58\u5668\u8fdb\u884c\u4f4d\u64cd\u4f5c\u3002\u7ed9\u5b9a\u4e00\u4e2a\u6574\u578b\u53d8\u91cfa\uff0c\u5199\u4e24\u6bb5\u4ee3\u7801\uff0c\u7b2c\u4e00\u4e2a\u8bbe\u7f6ea\u7684bit 3\uff0c\u7b2c\u4e8c\u4e2a\u6e05\u9664a \u7684bit 3\u3002\u5728\u4ee5\u4e0a\u4e24\u4e2a\u64cd\u4f5c\u4e2d\uff0c\u8981\u4fdd\u6301\u5176\u5b83\u4f4d\u4e0d\u53d8\u3002", "\u5bf9\u8fd9\u4e2a\u95ee\u9898\u6709\u4e09\u79cd\u57fa\u672c\u7684\u53cd\u5e94", "1). \u4e0d\u77e5\u9053\u5982\u4f55\u4e0b\u624b\u3002\u8be5\u88ab\u9762\u8005\u4ece\u6ca1\u505a\u8fc7\u4efb\u4f55\u5d4c\u5165\u5f0f\u7cfb\u7edf\u7684\u5de5\u4f5c\u3002", "2). \u7528bit fields\u3002Bit fields\u662f\u88ab\u6254\u5230C\u8bed\u8a00\u6b7b\u89d2\u7684\u4e1c\u897f\uff0c\u5b83\u4fdd\u8bc1\u4f60\u7684\u4ee3\u7801\u5728\u4e0d\u540c\u7f16\u8bd1\u5668\u4e4b\u95f4\u662f\u4e0d\u53ef\u79fb\u690d\u7684\uff0c\u540c\u65f6\u4e5f\u4fdd\u8bc1\u4e86\u7684\u4f60\u7684\u4ee3\u7801\u662f\u4e0d\u53ef\u91cd\u7528\u7684\u3002\u6211\u6700\u8fd1\u4e0d\u5e78\u770b\u5230Infineon\u4e3a\u5176\u8f83\u590d\u6742\u7684\u901a\u4fe1\u82af\u7247\u5199\u7684\u9a71\u52a8\u7a0b\u5e8f\uff0c\u5b83\u7528\u5230\u4e86bit fields\u56e0\u6b64\u5b8c\u5168\u5bf9\u6211\u65e0\u7528\uff0c\u56e0\u4e3a\u6211\u7684\u7f16\u8bd1\u5668\u7528\u5176\u5b83\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0bit fields\u7684\u3002\u4ece\u9053\u5fb7\u8bb2\uff1a\u6c38\u8fdc\u4e0d\u8981\u8ba9\u4e00\u4e2a\u975e\u5d4c\u5165\u5f0f\u7684\u5bb6\u4f19\u7c98\u5b9e\u9645\u786c\u4ef6\u7684\u8fb9\u3002", "3). \u7528 #defines \u548c bit masks \u64cd\u4f5c\u3002\u8fd9\u662f\u4e00\u4e2a\u6709\u6781\u9ad8\u53ef\u79fb\u690d\u6027\u7684\u65b9\u6cd5\uff0c\u662f\u5e94\u8be5\u88ab\u7528\u5230\u7684\u65b9\u6cd5\u3002\u6700\u4f73\u7684\u89e3\u51b3\u65b9\u6848\u5982\u4e0b\uff1a", "#define BIT3 (0\u00d71<<3)", "static int a;", "void set_bit3(void)", "{", "a |= BIT3;", "}", "void clear_bit3(void)", "{", "a &= ~BIT3;", "}", "\u4e00\u4e9b\u4eba\u559c\u6b22\u4e3a\u8bbe\u7f6e\u548c\u6e05\u9664\u503c\u800c\u5b9a\u4e49\u4e00\u4e2a\u63a9\u7801\u540c\u65f6\u5b9a\u4e49\u4e00\u4e9b\u8bf4\u660e\u5e38\u6570\uff0c\u8fd9\u4e5f\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002\u6211\u5e0c\u671b\u770b\u5230\u51e0\u4e2a\u8981\u70b9\uff1a\u8bf4\u660e\u5e38\u6570\u3001|=\u548c&=~\u64cd\u4f5c\u3002", "\u8bbf\u95ee\u56fa\u5b9a\u7684\u5185\u5b58\u4f4d\u7f6e\uff08Accessing fixed memory locations\uff09", "10. \u5d4c\u5165\u5f0f\u7cfb\u7edf\u7ecf\u5e38\u5177\u6709\u8981\u6c42\u7a0b\u5e8f\u5458\u53bb\u8bbf\u95ee\u67d0\u7279\u5b9a\u7684\u5185\u5b58\u4f4d\u7f6e\u7684\u7279\u70b9\u3002\u5728\u67d0\u5de5\u7a0b\u4e2d\uff0c\u8981\u6c42\u8bbe\u7f6e\u4e00\u7edd\u5bf9\u5730\u5740\u4e3a0x67a9\u7684\u6574\u578b\u53d8\u91cf\u7684\u503c\u4e3a0xaa66\u3002\u7f16\u8bd1\u5668\u662f\u4e00\u4e2a\u7eaf\u7cb9\u7684ANSI\u7f16\u8bd1\u5668\u3002\u5199\u4ee3\u7801\u53bb\u5b8c\u6210\u8fd9\u4e00\u4efb\u52a1\u3002", "\u8fd9\u4e00\u95ee\u9898\u6d4b\u8bd5\u4f60\u662f\u5426\u77e5\u9053\u4e3a\u4e86\u8bbf\u95ee\u4e00\u7edd\u5bf9\u5730\u5740\u628a\u4e00\u4e2a\u6574\u578b\u6570\u5f3a\u5236\u8f6c\u6362\uff08typecast\uff09\u4e3a\u4e00\u6307\u9488\u662f\u5408\u6cd5\u7684\u3002\u8fd9\u4e00\u95ee\u9898\u7684\u5b9e\u73b0\u65b9\u5f0f\u968f\u7740\u4e2a\u4eba\u98ce\u683c\u4e0d\u540c\u800c\u4e0d\u540c\u3002\u5178\u578b\u7684\u7c7b\u4f3c\u4ee3\u7801\u5982\u4e0b\uff1a", "int *ptr;", "ptr = (int *)0x67a9;", "*ptr = 0xaa55;", "\u4e00\u4e2a\u8f83\u6666\u6da9\u7684\u65b9\u6cd5\u662f\uff1a", "*(int * const)(0x67a9) = 0xaa55;", "\u5373\u4f7f\u4f60\u7684\u54c1\u5473\u66f4\u63a5\u8fd1\u7b2c\u4e8c\u79cd\u65b9\u6848\uff0c\u4f46\u6211\u5efa\u8bae\u4f60\u5728\u9762\u8bd5\u65f6\u4f7f\u7528\u7b2c\u4e00\u79cd\u65b9\u6848\u3002", "\u4e2d\u65ad\uff08Interrupts\uff09", "11. \u4e2d\u65ad\u662f\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\u91cd\u8981\u7684\u7ec4\u6210\u90e8\u5206\uff0c\u8fd9\u5bfc\u81f4\u4e86\u5f88\u591a\u7f16\u8bd1\u5f00\u53d1\u5546\u63d0\u4f9b\u4e00\u79cd\u6269\u5c55\u2014\u8ba9\u6807\u51c6C\u652f\u6301\u4e2d\u65ad\u3002\u5177\u4ee3\u8868\u4e8b\u5b9e\u662f\uff0c\u4ea7\u751f\u4e86\u4e00\u4e2a\u65b0\u7684\u5173\u952e\u5b57__interrupt\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u5c31\u4f7f\u7528\u4e86__interrupt\u5173\u952e\u5b57\u53bb\u5b9a\u4e49\u4e86\u4e00\u4e2a\u4e2d\u65ad\u670d\u52a1\u5b50\u7a0b\u5e8f(ISR)\uff0c\u8bf7\u8bc4\u8bba\u4e00\u4e0b\u8fd9\u6bb5\u4ee3\u7801\u7684\u3002", "__interrupt double compute_area (double radius)", "{", "double area = PI * radius * radius;", "printf(\u201d Area = %f\u201d, area);", "return area;", "}", "\u8fd9\u4e2a\u51fd\u6570\u6709\u592a\u591a\u7684\u9519\u8bef\u4e86\uff0c\u4ee5\u81f3\u8ba9\u4eba\u4e0d\u77e5\u4ece\u4f55\u8bf4\u8d77\u4e86\uff1a", "1). ISR \u4e0d\u80fd\u8fd4\u56de\u4e00\u4e2a\u503c\u3002\u5982\u679c\u4f60\u4e0d\u61c2\u8fd9\u4e2a\uff0c\u90a3\u4e48\u4f60\u4e0d\u4f1a\u88ab\u96c7\u7528\u7684\u3002", "2). ISR \u4e0d\u80fd\u4f20\u9012\u53c2\u6570\u3002\u5982\u679c\u4f60\u6ca1\u6709\u770b\u5230\u8fd9\u4e00\u70b9\uff0c\u4f60\u88ab\u96c7\u7528\u7684\u673a\u4f1a\u7b49\u540c\u7b2c\u4e00\u9879\u3002", "3). \u5728\u8bb8\u591a\u7684\u5904\u7406\u5668/\u7f16\u8bd1\u5668\u4e2d\uff0c\u6d6e\u70b9\u4e00\u822c\u90fd\u662f\u4e0d\u53ef\u91cd\u5165\u7684\u3002\u6709\u4e9b\u5904\u7406\u5668/\u7f16\u8bd1\u5668\u9700\u8981\u8ba9\u989d\u5904\u7684\u5bc4\u5b58\u5668\u5165\u6808\uff0c\u6709\u4e9b\u5904\u7406\u5668/\u7f16\u8bd1\u5668\u5c31\u662f\u4e0d\u5141\u8bb8\u5728ISR\u4e2d\u505a\u6d6e\u70b9\u8fd0\u7b97\u3002\u6b64\u5916\uff0cISR\u5e94\u8be5\u662f\u77ed\u800c\u6709\u6548\u7387\u7684\uff0c\u5728ISR\u4e2d\u505a\u6d6e\u70b9\u8fd0\u7b97\u662f\u4e0d\u660e\u667a\u7684\u3002", "4). \u4e0e\u7b2c\u4e09\u70b9\u4e00\u8109\u76f8\u627f\uff0cprintf()\u7ecf\u5e38\u6709\u91cd\u5165\u548c\u6027\u80fd\u4e0a\u7684\u95ee\u9898\u3002\u5982\u679c\u4f60\u4e22\u6389\u4e86\u7b2c\u4e09\u548c\u7b2c\u56db\u70b9\uff0c\u6211\u4e0d\u4f1a\u592a\u4e3a\u96be\u4f60\u7684\u3002\u4e0d\u7528\u8bf4\uff0c\u5982\u679c\u4f60\u80fd\u5f97\u5230\u540e\u4e24\u70b9\uff0c\u90a3\u4e48\u4f60\u7684\u88ab\u96c7\u7528\u524d\u666f\u8d8a\u6765\u8d8a\u5149\u660e\u4e86\u3002", "\u4ee3\u7801\u4f8b\u5b50\uff08Code examples\uff09", "12 . \u4e0b\u9762\u7684\u4ee3\u7801\u8f93\u51fa\u662f\u4ec0\u4e48\uff0c\u4e3a\u4ec0\u4e48\uff1f", "void foo(void)", "{", "unsigned int a = 6;", "int b = -20;", "(a+b > 6) puts(\u201c> 6\u2033) : puts(\u201c<= 6\u2033);", "}", "\u8fd9\u4e2a\u95ee\u9898\u6d4b\u8bd5\u4f60\u662f\u5426\u61c2\u5f97C\u8bed\u8a00\u4e2d\u7684\u6574\u6570\u81ea\u52a8\u8f6c\u6362\u539f\u5219\uff0c\u6211\u53d1\u73b0\u6709\u4e9b\u5f00\u53d1\u8005\u61c2\u5f97\u6781\u5c11\u8fd9\u4e9b\u4e1c\u897f\u3002\u4e0d\u7ba1\u5982\u4f55\uff0c\u8fd9\u65e0\u7b26\u53f7\u6574\u578b\u95ee\u9898\u7684\u7b54\u6848\u662f\u8f93\u51fa\u662f\u201c>6\u201d\u3002\u539f\u56e0\u662f\u5f53\u8868\u8fbe\u5f0f\u4e2d\u5b58\u5728\u6709\u7b26\u53f7\u7c7b\u578b\u548c\u65e0\u7b26\u53f7\u7c7b\u578b\u65f6\u6240\u6709\u7684\u64cd\u4f5c\u6570\u90fd\u81ea\u52a8\u8f6c\u6362\u4e3a\u65e0\u7b26\u53f7\u7c7b\u578b\u3002 \u56e0\u6b64-20\u53d8\u6210\u4e86\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u6b63\u6574\u6570\uff0c\u6240\u4ee5\u8be5\u8868\u8fbe\u5f0f\u8ba1\u7b97\u51fa\u7684\u7ed3\u679c\u5927\u4e8e6\u3002\u8fd9\u4e00\u70b9\u5bf9\u4e8e\u5e94\u5f53\u9891\u7e41\u7528\u5230\u65e0\u7b26\u53f7\u6570\u636e\u7c7b\u578b\u7684\u5d4c\u5165\u5f0f\u7cfb\u7edf\u6765\u8bf4\u662f\u4e30\u5e38\u91cd\u8981\u7684\u3002\u5982\u679c\u4f60\u7b54\u9519\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f60\u4e5f\u5c31\u5230\u4e86\u5f97\u4e0d\u5230\u8fd9\u4efd\u5de5\u4f5c\u7684\u8fb9\u7f18\u3002", "13. \u8bc4\u4ef7\u4e0b\u9762\u7684\u4ee3\u7801\u7247\u65ad\uff1a", "unsigned int zero = 0;", "unsigned int compzero = 0xFFFF;", "/*1\u2032s complement of zero */", "\u5bf9\u4e8e\u4e00\u4e2aint\u578b\u4e0d\u662f16\u4f4d\u7684\u5904\u7406\u5668\u4e3a\u8bf4\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u662f\u4e0d\u6b63\u786e\u7684\u3002\u5e94\u7f16\u5199\u5982\u4e0b\uff1a", "unsigned int compzero = ~0;", "\u8fd9\u4e00\u95ee\u9898\u771f\u6b63\u80fd\u63ed\u9732\u51fa\u5e94\u8bd5\u8005\u662f\u5426\u61c2\u5f97\u5904\u7406\u5668\u5b57\u957f\u7684\u91cd\u8981\u6027\u3002\u5728\u6211\u7684\u7ecf\u9a8c\u91cc\uff0c\u597d\u7684\u5d4c\u5165\u5f0f\u7a0b\u5e8f\u5458\u975e\u5e38\u51c6\u786e\u5730\u660e\u767d\u786c\u4ef6\u7684\u7ec6\u8282\u548c\u5b83\u7684\u5c40\u9650\uff0c\u7136\u800cPC\u673a\u7a0b\u5e8f\u5f80\u5f80\u628a\u786c\u4ef6\u4f5c\u4e3a\u4e00\u4e2a\u65e0\u6cd5\u907f\u514d\u7684\u70e6\u607c\u3002", "\u5230\u4e86\u8fd9\u4e2a\u9636\u6bb5\uff0c\u5e94\u8bd5\u8005\u6216\u8005\u5b8c\u5168\u5782\u5934\u4e27\u6c14\u4e86\u6216\u8005\u4fe1\u5fc3\u6ee1\u6ee1\u5fd7\u5728\u5fc5\u5f97\u3002\u5982\u679c\u663e\u7136\u5e94\u8bd5\u8005\u4e0d\u662f\u5f88\u597d\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6d4b\u8bd5\u5c31\u5728\u8fd9\u91cc\u7ed3\u675f\u4e86\u3002\u4f46\u5982\u679c\u663e\u7136\u5e94\u8bd5\u8005\u505a\u5f97\u4e0d\u9519\uff0c\u90a3\u4e48\u6211\u5c31\u6254\u51fa\u4e0b\u9762\u7684\u8ffd\u52a0\u95ee\u9898\uff0c\u8fd9\u4e9b\u95ee\u9898\u662f\u6bd4\u8f83\u96be\u7684\uff0c\u6211\u60f3\u4ec5\u4ec5\u975e\u5e38\u4f18\u79c0\u7684\u5e94\u8bd5\u8005\u80fd\u505a\u5f97\u4e0d\u9519\u3002\u63d0\u51fa\u8fd9\u4e9b\u95ee\u9898\uff0c\u6211\u5e0c\u671b\u66f4\u591a\u770b\u5230\u5e94\u8bd5\u8005\u5e94\u4ed8\u95ee\u9898\u7684\u65b9\u6cd5\uff0c\u800c\u4e0d\u662f\u7b54\u6848\u3002\u4e0d\u7ba1\u5982\u4f55\uff0c\u4f60\u5c31\u5f53\u662f\u8fd9\u4e2a\u5a31\u4e50\u5427\u2026", "\u52a8\u6001\u5185\u5b58\u5206\u914d\uff08Dynamic memory allocation\uff09", "14. \u5c3d\u7ba1\u4e0d\u50cf\u975e\u5d4c\u5165\u5f0f\u8ba1\u7b97\u673a\u90a3\u4e48\u5e38\u89c1\uff0c\u5d4c\u5165\u5f0f\u7cfb\u7edf\u8fd8\u662f\u6709\u4ece\u5806\uff08heap\uff09\u4e2d\u52a8\u6001\u5206\u914d\u5185\u5b58\u7684\u8fc7\u7a0b\u7684\u3002\u90a3\u4e48\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u52a8\u6001\u5206\u914d\u5185\u5b58\u53ef\u80fd\u53d1\u751f\u7684\u95ee\u9898\u662f\u4ec0\u4e48\uff1f", "\u8fd9\u91cc\uff0c\u6211\u671f\u671b\u5e94\u8bd5\u8005\u80fd\u63d0\u5230\u5185\u5b58\u788e\u7247\uff0c\u788e\u7247\u6536\u96c6\u7684\u95ee\u9898\uff0c\u53d8\u91cf\u7684\u6301\u884c\u65f6\u95f4\u7b49\u7b49\u3002\u8fd9\u4e2a\u4e3b\u9898\u5df2\u7ecf\u5728ESP\u6742\u5fd7\u4e2d\u88ab\u5e7f\u6cdb\u5730\u8ba8\u8bba\u8fc7\u4e86\uff08\u4e3b\u8981\u662f P.J. Plauger, \u4ed6\u7684\u89e3\u91ca\u8fdc\u8fdc\u8d85\u8fc7\u6211\u8fd9\u91cc\u80fd\u63d0\u5230\u7684\u4efb\u4f55\u89e3\u91ca\uff09\uff0c\u6240\u6709\u56de\u8fc7\u5934\u770b\u4e00\u4e0b\u8fd9\u4e9b\u6742\u5fd7\u5427\uff01\u8ba9\u5e94\u8bd5\u8005\u8fdb\u5165\u4e00\u79cd\u865a\u5047\u7684\u5b89\u5168\u611f\u89c9\u540e\uff0c\u6211\u62ff\u51fa\u8fd9\u4e48\u4e00\u4e2a\u5c0f\u8282\u76ee\uff1a\u4e0b\u9762\u7684\u4ee3\u7801\u7247\u6bb5\u7684\u8f93\u51fa\u662f\u4ec0\u4e48\uff0c\u4e3a\u4ec0\u4e48\uff1f", "char *ptr;", "if ((ptr = (char *)malloc(0)) == NULL)", "puts(\u201cGot a null pointer\u201d);", "else", "puts(\u201cGot a valid pointer\u201d);", "\u8fd9\u662f\u4e00\u4e2a\u6709\u8da3\u7684\u95ee\u9898\u3002\u6700\u8fd1\u5728\u6211\u7684\u4e00\u4e2a\u540c\u4e8b\u4e0d\u7ecf\u610f\u628a0\u503c\u4f20\u7ed9\u4e86\u51fd\u6570malloc\uff0c\u5f97\u5230\u4e86\u4e00\u4e2a\u5408\u6cd5\u7684\u6307\u9488\u4e4b\u540e\uff0c\u6211\u624d\u60f3\u5230\u8fd9\u4e2a\u95ee\u9898\u3002\u8fd9\u5c31\u662f\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u8be5\u4ee3\u7801\u7684\u8f93\u51fa\u662f\u201cGot a valid pointer\u201d\u3002\u6211\u7528\u8fd9\u4e2a\u6765\u5f00\u59cb\u8ba8\u8bba\u8fd9\u6837\u7684\u4e00\u95ee\u9898\uff0c\u770b\u770b\u88ab\u9762\u8bd5\u8005\u662f\u5426\u60f3\u5230\u5e93\u4f8b\u7a0b\u8fd9\u6837\u505a\u662f\u6b63\u786e\u3002\u5f97\u5230\u6b63\u786e\u7684\u7b54\u6848\u56fa\u7136\u91cd\u8981\uff0c\u4f46\u89e3\u51b3\u95ee\u9898\u7684\u65b9\u6cd5\u548c\u4f60\u505a\u51b3\u5b9a\u7684\u57fa\u672c\u539f\u7406\u66f4\u91cd\u8981\u4e9b\u3002", "Typedef", "15. Typedef \u5728C\u8bed\u8a00\u4e2d\u9891\u7e41\u7528\u4ee5\u58f0\u660e\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u6570\u636e\u7c7b\u578b\u7684\u540c\u4e49\u5b57\u3002\u4e5f\u53ef\u4ee5\u7528\u9884\u5904\u7406\u5668\u505a\u7c7b\u4f3c\u7684\u4e8b\u3002\u4f8b\u5982\uff0c\u601d\u8003\u4e00\u4e0b\u4e0b\u9762\u7684\u4f8b\u5b50\uff1a", "#define dPS struct s *", "typedef struct s * tPS;", "\u4ee5\u4e0a\u4e24\u79cd\u60c5\u51b5\u7684\u610f\u56fe\u90fd\u662f\u8981\u5b9a\u4e49dPS \u548c tPS \u4f5c\u4e3a\u4e00\u4e2a\u6307\u5411\u7ed3\u6784s\u6307\u9488\u3002\u54ea\u79cd\u65b9\u6cd5\u66f4\u597d\u5462\uff1f\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u4e3a\u4ec0\u4e48\uff1f", "\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u5fae\u5999\u7684\u95ee\u9898\uff0c\u4efb\u4f55\u4eba\u7b54\u5bf9\u8fd9\u4e2a\u95ee\u9898\uff08\u6b63\u5f53\u7684\u539f\u56e0\uff09\u662f\u5e94\u5f53\u88ab\u606d\u559c\u7684\u3002\u7b54\u6848\u662f\uff1atypedef\u66f4\u597d\u3002\u601d\u8003\u4e0b\u9762\u7684\u4f8b\u5b50\uff1a", "dPS p1,p2;", "tPS p3,p4;", "\u7b2c\u4e00\u4e2a\u6269\u5c55\u4e3a", "struct s * p1, p2;", "\u4e0a\u9762\u7684\u4ee3\u7801\u5b9a\u4e49p1\u4e3a\u4e00\u4e2a\u6307\u5411\u7ed3\u6784\u7684\u6307\uff0cp2\u4e3a\u4e00\u4e2a\u5b9e\u9645\u7684\u7ed3\u6784\uff0c\u8fd9\u4e5f\u8bb8\u4e0d\u662f\u4f60\u60f3\u8981\u7684\u3002\u7b2c\u4e8c\u4e2a\u4f8b\u5b50\u6b63\u786e\u5730\u5b9a\u4e49\u4e86p3 \u548cp4 \u4e24\u4e2a\u6307\u9488\u3002", "\u6666\u6da9\u7684\u8bed\u6cd5", "16. C\u8bed\u8a00\u540c\u610f\u4e00\u4e9b\u4ee4\u4eba\u9707\u60ca\u7684\u7ed3\u6784,\u4e0b\u9762\u7684\u7ed3\u6784\u662f\u5408\u6cd5\u7684\u5417\uff0c\u5982\u679c\u662f\u5b83\u505a\u4e9b\u4ec0\u4e48\uff1f", "int a = 5, b = 7, c;", "c = a+++b;", "\u8fd9\u4e2a\u95ee\u9898\u5c06\u505a\u4e3a\u8fd9\u4e2a\u6d4b\u9a8c\u7684\u4e00\u4e2a\u6109\u5feb\u7684\u7ed3\u5c3e\u3002\u4e0d\u7ba1\u4f60\u76f8\u4e0d\u76f8\u4fe1\uff0c\u4e0a\u9762\u7684\u4f8b\u5b50\u662f\u5b8c\u5168\u5408\u4e4e\u8bed\u6cd5\u7684\u3002\u95ee\u9898\u662f\u7f16\u8bd1\u5668\u5982\u4f55\u5904\u7406\u5b83\uff1f\u6c34\u5e73\u4e0d\u9ad8\u7684\u7f16\u8bd1\u4f5c\u8005\u5b9e\u9645\u4e0a\u4f1a\u4e89\u8bba\u8fd9\u4e2a\u95ee\u9898\uff0c\u6839\u636e\u6700\u5904\u7406\u539f\u5219\uff0c\u7f16\u8bd1\u5668\u5e94\u5f53\u80fd\u5904\u7406\u5c3d\u53ef\u80fd\u6240\u6709\u5408\u6cd5\u7684\u7528\u6cd5\u3002\u56e0\u6b64\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u88ab\u5904\u7406\u6210\uff1a", "c = a++ + b;", "\u56e0\u6b64, \u8fd9\u6bb5\u4ee3\u7801\u6301\u884c\u540ea = 6, b = 7, c = 12\u3002", "\u5982\u679c\u4f60\u77e5\u9053\u7b54\u6848\uff0c\u6216\u731c\u51fa\u6b63\u786e\u7b54\u6848\uff0c\u505a\u5f97\u597d\u3002\u5982\u679c\u4f60\u4e0d\u77e5\u9053\u7b54\u6848\uff0c\u6211\u4e5f\u4e0d\u628a\u8fd9\u4e2a\u5f53\u4f5c\u95ee\u9898\u3002\u6211\u53d1\u73b0\u8fd9\u4e2a\u95ee\u9898\u7684\u6700\u5927\u597d\u5904\u662f:\u8fd9\u662f\u4e00\u4e2a\u5173\u4e8e\u4ee3\u7801\u7f16\u5199\u98ce\u683c\uff0c\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\uff0c\u4ee3\u7801\u7684\u53ef\u4fee\u6539\u6027\u7684\u597d\u7684\u8bdd\u9898"], "title": "\u6d59\u5927\u7f51\u65b0C/C++\u9762\u8bd5\u89e3\u60d1(\u9762\u8bd5\u5b98\u7684\u89d2\u5ea6)"},
{"contents": ["\u53ea\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4e2d\u4f7f\u7528\u7684\u51fd\u6570\u5e94\u8be5\u8bf4\u660e\u4e3a\u5185\u90e8\u51fd\u6570(static)\uff0c\u5185\u90e8\u51fd\u6570\u5e94\u8be5\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4e2d\u8bf4\u660e\u548c\u5b9a\u4e49\u3002\u5bf9\u4e8e\u53ef\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4ee5\u5916\u4f7f\u7528\u7684\u51fd\u6570\uff0c\u5e94\u8be5\u5728\u4e00\u4e2a\u5934\u6587\u4ef6\u4e2d\u8bf4\u660e\uff0c\u8981\u4f7f\u7528\u8fd9\u4e9b\u51fd\u6570\u7684\u6e90\u6587\u4ef6\u8981\u5305\u542b\u8fd9\u4e2a\u5934\u6587\u4ef6\u3002"], "title": "static\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u6709\u4ec0\u4e48\u533a\u522b\uff1f"},
{"contents": ["\u5168\u5c40\u53d8\u91cf(\u5916\u90e8\u53d8\u91cf)\u7684\u8bf4\u660e\u4e4b\u524d\u518d\u51a0\u4ee5static \u5c31\u6784\u6210\u4e86\u9759\u6001\u7684\u5168\u5c40\u53d8\u91cf\u3002\u5168\u5c40\u53d8\u91cf\u672c\u8eab\u5c31\u662f\u9759\u6001\u5b58\u50a8\u65b9\u5f0f\uff0c \u9759\u6001\u5168\u5c40\u53d8\u91cf\u5f53\u7136\u4e5f\u662f\u9759\u6001\u5b58\u50a8\u65b9\u5f0f\u3002", "\u8fd9\u4e24\u8005\u5728\u5b58\u50a8\u65b9\u5f0f\u4e0a\u5e76\u65e0\u4e0d\u540c\u3002\u8fd9\u4e24\u8005\u7684\u533a\u522b\u867d\u5728\u4e8e\u975e\u9759\u6001\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u662f\u6574\u4e2a\u6e90\u7a0b\u5e8f\uff0c \u5f53\u4e00\u4e2a\u6e90\u7a0b\u5e8f\u7531\u591a\u4e2a\u6e90\u6587\u4ef6\u7ec4\u6210\u65f6\uff0c\u975e\u9759\u6001\u7684\u5168\u5c40\u53d8\u91cf\u5728\u5404\u4e2a\u6e90\u6587\u4ef6\u4e2d\u90fd\u662f\u6709\u6548\u7684\u3002 \u800c\u9759\u6001\u5168\u5c40\u53d8\u91cf\u5219\u9650\u5236\u4e86\u5176\u4f5c\u7528\u57df\uff0c \u5373\u53ea\u5728\u5b9a\u4e49\u8be5\u53d8\u91cf\u7684\u6e90\u6587\u4ef6\u5185\u6709\u6548\uff0c \u5728\u540c\u4e00\u6e90\u7a0b\u5e8f\u7684\u5176\u5b83\u6e90\u6587\u4ef6\u4e2d\u4e0d\u80fd\u4f7f\u7528\u5b83\u3002\u7531\u4e8e\u9759\u6001\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u5c40\u9650\u4e8e\u4e00\u4e2a\u6e90\u6587\u4ef6\u5185\uff0c\u53ea\u80fd\u4e3a\u8be5\u6e90\u6587\u4ef6\u5185\u7684\u51fd\u6570\u516c\u7528\uff0c \u56e0\u6b64\u53ef\u4ee5\u907f\u514d\u5728\u5176\u5b83\u6e90\u6587\u4ef6\u4e2d\u5f15\u8d77\u9519\u8bef\u3002\u4ece\u4ee5\u4e0a\u5206\u6790\u53ef\u4ee5\u770b\u51fa\uff0c \u628a\u5c40\u90e8\u53d8\u91cf\u6539\u53d8\u4e3a\u9759\u6001\u53d8\u91cf\u540e\u662f\u6539\u53d8\u4e86\u5b83\u7684\u5b58\u50a8\u65b9\u5f0f\u5373\u6539\u53d8\u4e86\u5b83\u7684\u751f\u5b58\u671f\u3002\u628a\u5168\u5c40\u53d8\u91cf\u6539\u53d8\u4e3a\u9759\u6001\u53d8\u91cf\u540e\u662f\u6539\u53d8\u4e86\u5b83\u7684\u4f5c\u7528\u57df\uff0c \u9650\u5236\u4e86\u5b83\u7684\u4f7f\u7528\u8303\u56f4\u3002"], "title": "static\u5168\u5c40\u53d8\u91cf\u4e0e\u666e\u901a\u7684\u5168\u5c40\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1f"},
{"contents": ["\u53ef\u4ee5\u7528\u5f15\u7528\u5934\u6587\u4ef6\u7684\u65b9\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u7528extern\u5173\u952e\u5b57\uff0c\u5982\u679c\u7528\u5f15\u7528\u5934\u6587\u4ef6\u65b9\u5f0f\u6765\u5f15\u7528\u67d0\u4e2a\u5728\u5934\u6587\u4ef6\u4e2d\u58f0\u660e\u7684\u5168\u5c40\u53d8\u7406\uff0c\u5047\u5b9a\u4f60\u5c06\u90a3\u4e2a\u53d8\u5199\u9519\u4e86\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4\u4f1a\u62a5\u9519\uff0c\u5982\u679c\u4f60\u7528extern\u65b9\u5f0f\u5f15\u7528\u65f6\uff0c\u5047\u5b9a\u4f60\u72af\u4e86\u540c\u6837\u7684\u9519\u8bef\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4\u4e0d\u4f1a\u62a5\u9519\uff0c\u800c\u5728\u8fde\u63a5\u671f\u95f4\u62a5\u9519\u3002"], "title": "C++\u5982\u4f55\u5f15\u7528\u4e00\u4e2a\u5df2\u7ecf\u5b9a\u4e49\u8fc7\u7684\u5168\u5c40\u53d8\u91cf\uff1f"},
{"contents": ["\u5c40\u90e8\u53d8\u91cf\u53ef\u4ee5\u4e0e\u5168\u5c40\u53d8\u91cf\u540c\u540d\uff0c\u5728\u51fd\u6570\u5185\u5f15\u7528\u8fd9\u4e2a\u53d8\u91cf\u65f6\uff0c\u4f1a\u7528\u5230\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u800c\u4e0d\u4f1a\u7528\u5230\u5168\u5c40\u53d8\u91cf\u3002\u5bf9\u4e8e\u6709\u4e9b\u7f16\u8bd1\u5668\u800c\u8a00\uff0c\u5728\u540c\u4e00\u4e2a\u51fd\u6570\u5185\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u6bd4\u5982\u5728\u4e24\u4e2a\u5faa\u73af\u4f53\u5185\u90fd\u5b9a\u4e49\u4e00\u4e2a\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u800c\u90a3\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u5c31\u5728\u90a3\u4e2a\u5faa\u73af\u4f53\u5185"], "title": "C++:\u5c40\u90e8\u53d8\u91cf\u80fd\u5426\u548c\u5168\u5c40\u53d8\u91cf\u91cd\u540d"},
{"contents": ["1\uff0e\u5b9e\u73b0\u53cc\u5411\u94fe\u8868\u5220\u9664\u4e00\u4e2a\u8282\u70b9P\uff0c\u5728\u8282\u70b9P\u540e\u63d2\u5165\u4e00\u4e2a\u8282\u70b9\uff0c\u5199\u51fa\u8fd9\u4e24\u4e2a\u51fd\u6570\u3002", "2\uff0e\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u5c06\u5176\u4e2d\u7684\\t\u90fd\u8f6c\u6362\u62104\u4e2a\u7a7a\u683c\u3002", "3\uff0eWindows\u7a0b\u5e8f\u7684\u5165\u53e3\u662f\u54ea\u91cc\uff1f\u5199\u51faWindows\u6d88\u606f\u673a\u5236\u7684\u6d41\u7a0b\u3002", "4\uff0e\u5982\u4f55\u5b9a\u4e49\u548c\u5b9e\u73b0\u4e00\u4e2a\u7c7b\u7684\u6210\u5458\u51fd\u6570\u4e3a\u56de\u8c03\u51fd\u6570\uff1f", "5\uff0eC++\u91cc\u9762\u662f\u4e0d\u662f\u6240\u6709\u7684\u52a8\u4f5c\u90fd\u662fmain()\u5f15\u8d77\u7684\uff1f\u5982\u679c\u4e0d\u662f\uff0c\u8bf7\u4e3e\u4f8b\u3002", "6\uff0eC++\u91cc\u9762\u5982\u4f55\u58f0\u660econst void f(void)\u51fd\u6570\u4e3aC\u7a0b\u5e8f\u4e2d\u7684\u5e93\u51fd\u6570\uff1f", "7\uff0e\u4e0b\u5217\u54ea\u4e24\u4e2a\u662f\u7b49\u540c\u7684", "int b;", "A const int* a = &amp;b;", "B const* int a = &amp;b;", "C const int* const a = &amp;b;", "D int const* const a = &amp;b;", "8\uff0e\u5185\u8054\u51fd\u6570\u5728\u7f16\u8bd1\u65f6\u662f\u5426\u505a\u53c2\u6570\u7c7b\u578b\u68c0\u67e5\uff1f"], "title": "\u4e1c\u65b9\u901a\u4fe1\u80a1\u4efd\u6709\u9650\u516c\u53f8VC\u9762\u8bd5\u9898"},
{"contents": ["1", "OSI", "TCP/IP", "2", "IP", "TCP", "UDP", "3", "4", "C++", "C", "struct", "5", "6", "7", "8086"], "title": "\u534e\u4e3aC++\u7b14\u8bd5\u9898"}]