[{"contents": ["\u7b2c\u4e00\u9898\uff1ahellopello ", ": \u5934\u4e24\u9898VC\u4e2d\u7f16\u8bd1\u6ca1\u6709\u9519\u8bef\uff0c\u4f46\u662f\u8fd0\u884c\u65f6\u6709\u5185\u5b58\u4e0d\u80fd\u5199\u7684\u9519\u8bef\u3002 ", ": \u7b2c\u4e00\u9898\u4e2dchar* str1 = \u201chello\u201d; ", ": \u7cfb\u7edf\u5148\u7ed9\u5b57\u7b26\u4e32\u5e38\u91cf\u201dhello\u201d\u5206\u914d\u5185\u5b58\uff0c\u5176\u4e2d\u201dhello\u201d\u662fconst\u7684\uff0c\u7136\u540e\u5206\u914d\u6307\u9488\u7a7a\u95f4\uff0c\u628a ", ": \u201chello\u201d\u7684\u9996\u5730\u5740\u8d4b\u7ed9str1\u3002\u6240\u4ee5*str1\u662f\u4e0d\u80fd\u4f5c\u4e3alvalue\u7684\u3002 ", ": \u7b2c\u4e8c\u9898\u7684\u95ee\u9898\u7c7b\u4f3c\u3002 ", ": \u4f46\u662f\u5982\u679c\u6539\u6210char str1[] = \u201chello\u201d; ", ": \u5c31\u884c\u4e86\u3002\u56e0\u4e3a\u6b64\u65f6\u7cfb\u7edf\u5148\u7ed9\u5b57\u7b26\u4e32\u5e38\u91cf\u201dhello\u201d\u5206\u914d\u5185\u5b58\uff0c\u7136\u540e\u4e3a\u5b57\u7b26\u6570\u7ec4str1\u5206\u914d\u7a7a\u95f4 ", ": \uff0c\u6267\u884cstrcpy\u7684\u64cd\u4f5c\uff0c\u8fd9\u6837str1\u6307\u5411\u7684\u7a7a\u95f4\u5c31\u6ca1\u6709const\u5c5e\u6027\u4e86\u3002 ", ": \u7b2c\u4e09\u9898\u4e2d\uff0creti\u662f\u4e2d\u65ad\u8fd4\u56de\uff0c\u6b64\u65f6\u4e0d\u80fd\u5e26\u53c2\u6570\u8fd4\u56de(\u6307ret 4\u4e4b\u7c7b\u7684)\uff0c\u800c\u4e14\u8fd8\u8981\u6e05\u9664\u4e2d"], "title": "\u5a01\u76db\u8f6f\u4ef6\u9762\u8bd5\u9898\u76ee"},
{"contents": ["\t\u672c\u8bd5\u9898\u4ec5\u7528\u4e8e\u8003\u67e5C++/C\u7a0b\u5e8f\u5458\u7684\u57fa\u672c\u7f16\u7a0b\u6280\u80fd\u3002\u5185\u5bb9\u9650\u4e8eC++/C\u5e38\u7528\u8bed\u6cd5\uff0c\u4e0d\u6d89\u53ca\u6570\u636e\u7ed3\u6784\u3001\u7b97\u6cd5\u4ee5\u53ca\u6df1\u5965\u7684\u8bed\u6cd5\u3002\u8003\u8bd5\u6210\u7ee9\u80fd\u53cd\u6620\u51fa\u8003\u751f\u7684\u7f16\u7a0b\u8d28\u91cf\u4ee5\u53ca\u5bf9C++/C\u7684\u7406\u89e3\u7a0b\u5ea6\uff0c\u4f46\u4e0d\u80fd\u53cd\u6620\u8003\u751f\u7684\u667a\u529b\u548c\u8f6f\u4ef6\u5f00\u53d1\u80fd\u529b\u3002", "\n\t\u7b14\u8bd5\u65f6\u95f490\u5206\u949f\u3002\u8bf7\u8003\u751f\u8ba4\u771f\u7b54\u9898\uff0c\u5207\u52ff\u8f7b\u89c6\u3002", "\u4e00\u3001\u8bf7\u586b\u5199BOOL , float, \u6307\u9488\u53d8\u91cf \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\u3002\uff0810\u5206\uff09", "\n\u63d0\u793a\uff1a\u8fd9\u91cc\u201c\u96f6\u503c\u201d\u53ef\u4ee5\u662f0, 0.0 , FALSE\u6216\u8005\u201c\u7a7a\u6307\u9488\u201d\u3002\u4f8b\u5982 int \u53d8\u91cf n \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\u4e3a\uff1a", "\n    if ( n == 0 )", "\n    if ( n != 0 )", "\n\u4ee5\u6b64\u7c7b\u63a8\u3002", "\u8bf7\u5199\u51fa BOOL  flag \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\uff1a", "\u8bf7\u5199\u51fa float  x \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\uff1a", "\u8bf7\u5199\u51fa char  *p \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\uff1a", "\u4e8c\u3001\u4ee5\u4e0b\u4e3aWindows NT\u4e0b\u768432\u4f4dC++\u7a0b\u5e8f\uff0c\u8bf7\u8ba1\u7b97sizeof\u7684\u503c\uff0810\u5206\uff09", "\tchar  str[] = \u201cHello\u201d ;", "\n\tchar   *p = str ;", "\nint     n = 10;", "\n\u8bf7\u8ba1\u7b97", "\nsizeof (str ) =        ", "sizeof ( p ) =        ", "sizeof ( n ) =\tvoid Func ( char str[100])", "\n{", "\n\u8bf7\u8ba1\u7b97", "\n sizeof( str ) =", "\n}", "\tvoid *p = malloc( 100 );", "\n\u8bf7\u8ba1\u7b97", "\nsizeof ( p ) =", "\u4e09\u3001\u7b80\u7b54\u9898\uff0825\u5206\uff09", "1\u3001\u5934\u6587\u4ef6\u4e2d\u7684 ifndef/define/endif \u5e72\u4ec0\u4e48\u7528\uff1f", "2\u3001#include  ", "3\u3001const \u6709\u4ec0\u4e48\u7528\u9014\uff1f\uff08\u8bf7\u81f3\u5c11\u8bf4\u660e\u4e24\u79cd\uff09", "4\u3001\u5728C++ \u7a0b\u5e8f\u4e2d\u8c03\u7528\u88ab C\u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u7684\u51fd\u6570\uff0c\u4e3a\u4ec0\u4e48\u8981\u52a0 extern \u201cC\u201d\u58f0\u660e\uff1f", "5\u3001\u8bf7\u7b80\u8ff0\u4ee5\u4e0b\u4e24\u4e2afor\u5faa\u73af\u7684\u4f18\u7f3a\u70b9", "// \u7b2c\u4e00\u4e2a", "\nfor (i=0; i", "\n{", "\nif (condition)", "\n    DoSomething();", "\nelse", "\n    DoOtherthing();", "\n}\t// \u7b2c\u4e8c\u4e2a", "\nif (condition)", "\n{", "\nfor (i=0; i", "\n    DoSomething();", "\n}", "\nelse", "\n{", "\n    for (i=0; i", "\n    DoOtherthing();", "\n}", "\n\u4f18\u70b9\uff1a", "\u7f3a\u70b9\uff1a", "\t\u4f18\u70b9\uff1a", "\u7f3a\u70b9\uff1a", "\u56db\u3001\u6709\u5173\u5185\u5b58\u7684\u601d\u8003\u9898\uff0820\u5206\uff09", "void GetMemory(char *p)", "\n{", "\np = (char *)malloc(100);", "\n}", "\nvoid Test(void)", "\n{", "\nchar *str = NULL;", "\nGetMemory(str);", "\nstrcpy(str, \"hello world\");", "\nprintf(str);", "\n}", "\u8bf7\u95ee\u8fd0\u884cTest\u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n\u7b54\uff1a", "\tchar *GetMemory(void)", "\n{", "\nchar p[] = \"hello world\";", "\nreturn p;", "\n}", "\nvoid Test(void)", "\n{", "\nchar *str = NULL;", "\nstr = GetMemory();", "\nprintf(str);", "\n}", "\u8bf7\u95ee\u8fd0\u884cTest\u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n\u7b54\uff1a", "\nVoid GetMemory2(char **p, int num)", "\n{", "\n*p = (char *)malloc(num);", "\n}", "\nvoid Test(void)", "\n{", "\nchar *str = NULL;", "\nGetMemory(&str, 100);", "\nstrcpy(str, \"hello\");", "\nprintf(str);", "\n}", "\n\u8bf7\u95ee\u8fd0\u884cTest\u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n\u7b54\uff1a", "\tvoid Test(void)", "\n{", "\nchar *str = (char *) malloc(100);", "\n\tstrcpy(str, \u201chello\u201d);", "\n\tfree(str);", "\n\tif(str != NULL)", "\n\t{", "\n\t  strcpy(str, \u201cworld\u201d);", "\nprintf(str);", "\n}", "\n}", "\n\u8bf7\u95ee\u8fd0\u884cTest\u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n\u7b54\uff1a", "\u4e94\u3001\u7f16\u5199strcpy\u51fd\u6570\uff0810\u5206\uff09", "\n\u5df2\u77e5strcpy\u51fd\u6570\u7684\u539f\u578b\u662f", "\n\tchar *strcpy(char *strDest, const char *strSrc);", "\n\t\u5176\u4e2dstrDest\u662f\u76ee\u7684\u5b57\u7b26\u4e32\uff0cstrSrc\u662f\u6e90\u5b57\u7b26\u4e32\u3002", "\uff081\uff09\u4e0d\u8c03\u7528C++/C\u7684\u5b57\u7b26\u4e32\u5e93\u51fd\u6570\uff0c\u8bf7\u7f16\u5199\u51fd\u6570 strcpy", "\uff082\uff09strcpy\u80fd\u628astrSrc\u7684\u5185\u5bb9\u590d\u5236\u5230strDest\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u8981char * \u7c7b\u578b\u7684\u8fd4\u56de\u503c\uff1f", "\u516d\u3001\u7f16\u5199\u7c7bString\u7684\u6784\u9020\u51fd\u6570\u3001\u6790\u6784\u51fd\u6570\u548c\u8d4b\u503c\u51fd\u6570\uff0825\u5206\uff09", "\n\u5df2\u77e5\u7c7bString\u7684\u539f\u578b\u4e3a\uff1a", "\n\tclass String", "\n\t{", "\n\t  public:", "\n\t\tString(const char *str = NULL);\t// \u666e\u901a\u6784\u9020\u51fd\u6570", "\n\t\tString(const String &other);\t    // \u62f7\u8d1d\u6784\u9020\u51fd\u6570", "\n\t\t~ String(void);\t\t\t\t\t    // \u6790\u6784\u51fd\u6570", "\n\t\tString & operate =(const String &other);\t// \u8d4b\u503c\u51fd\u6570", "\n\t  private:", "\n\t\tchar  \t*m_data;\t\t\t\t// \u7528\u4e8e\u4fdd\u5b58\u5b57\u7b26\u4e32", "\n\t};", "\n\t\u8bf7\u7f16\u5199String\u7684\u4e0a\u8ff04\u4e2a\u51fd\u6570\u3002", "\n\u9644\u5f55C \uff1aC++/C\u8bd5\u9898\u7684\u7b54\u6848\u4e0e\u8bc4\u5206\u6807\u51c6", "\n\u4e00\u3001\u8bf7\u586b\u5199BOOL , float, \u6307\u9488\u53d8\u91cf \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\u3002\uff0810\u5206\uff09", "\u8bf7\u5199\u51fa BOOL  flag \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\u3002\uff083\u5206\uff09", "\n\u6807\u51c6\u7b54\u6848\uff1a", "\n    if ( flag )", "\n    if ( !flag )\t\u5982\u4e0b\u5199\u6cd5\u5747\u5c5e\u4e0d\u826f\u98ce\u683c\uff0c\u4e0d\u5f97\u5206\u3002", "\n\tif (flag == TRUE)", "\n\tif (flag == 1 )", "\n\tif (flag == FALSE)", "\n\t    if (flag == 0)", "\n\u8bf7\u5199\u51fa float  x \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\u3002\uff084\u5206\uff09", "\n\u6807\u51c6\u7b54\u6848\u793a\u4f8b\uff1a", "\nconst float EPSINON = 0.00001;", "\nif ((x >= \u2013 EPSINON) && (x \n\u4e0d\u53ef\u5c06\u6d6e\u70b9\u53d8\u91cf\u7528\u201c==\u201d\u6216\u201c\uff01=\u201d\u4e0e\u6570\u5b57\u6bd4\u8f83\uff0c\u5e94\u8be5\u8bbe\u6cd5\u8f6c\u5316\u6210\u201c>=\u201d\u6216\u201c\n", "\u5982\u4e0b\u662f\u9519\u8bef\u7684\u5199\u6cd5\uff0c\u4e0d\u5f97\u5206\u3002", "\n\tif (x == 0.0)", "\n\tif (x != 0.0)\t\t", "\u8bf7\u5199\u51fa char  *p \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\u3002\uff083\u5206\uff09", "\n\u6807\u51c6\u7b54\u6848\uff1a", "\n    if (p == NULL)", "\n    if (p != NULL)\t\u5982\u4e0b\u5199\u6cd5\u5747\u5c5e\u4e0d\u826f\u98ce\u683c\uff0c\u4e0d\u5f97\u5206\u3002", "\n\tif (p == 0)", "\n\tif (p != 0)", "\n\tif (p)", "\n\t    if (!)\t\t", "\u4e8c\u3001\u4ee5\u4e0b\u4e3aWindows NT\u4e0b\u768432\u4f4dC++\u7a0b\u5e8f\uff0c\u8bf7\u8ba1\u7b97sizeof\u7684\u503c\uff0810\u5206\uff09", "\tchar  str[] = \u201cHello\u201d ;", "\n\tchar   *p = str ;", "\nint     n = 10;", "\n\u8bf7\u8ba1\u7b97", "\nsizeof (str ) =  6   \uff082\u5206\uff09 ", "sizeof ( p ) =   4   \uff082\u5206\uff09", "sizeof ( n ) =   4   \uff082\u5206\uff09\tvoid Func ( char str[100])", "\n{", "\n\u8bf7\u8ba1\u7b97", "\n sizeof( str ) =   4     \uff082\u5206\uff09", "\n}", "\tvoid *p = malloc( 100 );", "\n\u8bf7\u8ba1\u7b97", "\nsizeof ( p ) =  4      \uff082\u5206\uff09", "\u4e09\u3001\u7b80\u7b54\u9898\uff0825\u5206\uff09", "1\u3001\u5934\u6587\u4ef6\u4e2d\u7684 ifndef/define/endif \u5e72\u4ec0\u4e48\u7528\uff1f\uff085\u5206\uff09", "\n\u7b54\uff1a\u9632\u6b62\u8be5\u5934\u6587\u4ef6\u88ab\u91cd\u590d\u5f15\u7528\u3002", "2\u3001#include  ", "3\u3001const \u6709\u4ec0\u4e48\u7528\u9014\uff1f\uff08\u8bf7\u81f3\u5c11\u8bf4\u660e\u4e24\u79cd\uff09\uff085\u5206\uff09", "\n\u7b54\uff1a\uff081\uff09\u53ef\u4ee5\u5b9a\u4e49 const \u5e38\u91cf", "\n\uff082\uff09const\u53ef\u4ee5\u4fee\u9970\u51fd\u6570\u7684\u53c2\u6570\u3001\u8fd4\u56de\u503c\uff0c\u751a\u81f3\u51fd\u6570\u7684\u5b9a\u4e49\u4f53\u3002\u88abconst\u4fee\u9970\u7684\u4e1c\u897f\u90fd\u53d7\u5230\u5f3a\u5236\u4fdd\u62a4\uff0c\u53ef\u4ee5\u9884\u9632\u610f\u5916\u7684\u53d8\u52a8\uff0c\u80fd\u63d0\u9ad8\u7a0b\u5e8f\u7684\u5065\u58ee\u6027\u3002", "4\u3001\u5728C++ \u7a0b\u5e8f\u4e2d\u8c03\u7528\u88ab C\u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u7684\u51fd\u6570\uff0c\u4e3a\u4ec0\u4e48\u8981\u52a0 extern \u201cC\u201d\uff1f \uff085\u5206\uff09", "\n\u7b54\uff1aC++\u8bed\u8a00\u652f\u6301\u51fd\u6570\u91cd\u8f7d\uff0cC\u8bed\u8a00\u4e0d\u652f\u6301\u51fd\u6570\u91cd\u8f7d\u3002\u51fd\u6570\u88abC++\u7f16\u8bd1\u540e\u5728\u5e93\u4e2d\u7684\u540d\u5b57\u4e0eC\u8bed\u8a00\u7684\u4e0d\u540c\u3002\u5047\u8bbe\u67d0\u4e2a\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a void foo(int x, int y);", "\n\u8be5\u51fd\u6570\u88abC\u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u5728\u5e93\u4e2d\u7684\u540d\u5b57\u4e3a_foo\uff0c\u800cC++\u7f16\u8bd1\u5668\u5219\u4f1a\u4ea7\u751f\u50cf_foo_int_int\u4e4b\u7c7b\u7684\u540d\u5b57\u3002", "\nC++\u63d0\u4f9b\u4e86C\u8fde\u63a5\u4ea4\u6362\u6307\u5b9a\u7b26\u53f7extern\u201cC\u201d\u6765\u89e3\u51b3\u540d\u5b57\u5339\u914d\u95ee\u9898\u3002", "5\u3001\u8bf7\u7b80\u8ff0\u4ee5\u4e0b\u4e24\u4e2afor\u5faa\u73af\u7684\u4f18\u7f3a\u70b9\uff085\u5206\uff09", "for (i=0; i", "\n{", "\nif (condition)", "\n    DoSomething();", "\nelse", "\n    DoOtherthing();", "\n}\tif (condition)", "\n{", "\nfor (i=0; i", "\n    DoSomething();", "\n}", "\nelse", "\n{", "\n    for (i=0; i", "\n    DoOtherthing();", "\n}", "\n\u4f18\u70b9\uff1a\u7a0b\u5e8f\u7b80\u6d01", "\u7f3a\u70b9\uff1a\u591a\u6267\u884c\u4e86N-1\u6b21\u903b\u8f91\u5224\u65ad\uff0c\u5e76\u4e14\u6253\u65ad\u4e86\u5faa\u73af\u201c\u6d41\u6c34\u7ebf\u201d\u4f5c\u4e1a\uff0c\u4f7f\u5f97\u7f16\u8bd1\u5668\u4e0d\u80fd\u5bf9\u5faa\u73af\u8fdb\u884c\u4f18\u5316\u5904\u7406\uff0c\u964d\u4f4e\u4e86\u6548\u7387\u3002\t\u4f18\u70b9\uff1a\u5faa\u73af\u7684\u6548\u7387\u9ad8", "\u7f3a\u70b9\uff1a\u7a0b\u5e8f\u4e0d\u7b80\u6d01", "\u56db\u3001\u6709\u5173\u5185\u5b58\u7684\u601d\u8003\u9898\uff08\u6bcf\u5c0f\u98985\u5206\uff0c\u517120\u5206\uff09", "void GetMemory(char *p)", "\n{", "\np = (char *)malloc(100);", "\n}", "\nvoid Test(void)", "\n{", "\nchar *str = NULL;", "\nGetMemory(str);", "\nstrcpy(str, \u201chello world\u201d);", "\nprintf(str);", "\n}", "\u8bf7\u95ee\u8fd0\u884cTest\u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n\u7b54\uff1a\u7a0b\u5e8f\u5d29\u6e83\u3002", "\n\u56e0\u4e3aGetMemory\u5e76\u4e0d\u80fd\u4f20\u9012\u52a8\u6001\u5185\u5b58\uff0c", "\nTest\u51fd\u6570\u4e2d\u7684 str\u4e00\u76f4\u90fd\u662f NULL\u3002", "\nstrcpy(str, \u201chello world\u201d);\u5c06\u4f7f\u7a0b\u5e8f\u5d29\u6e83\u3002", "\n\tchar *GetMemory(void)", "\n{", "\nchar p[] = \u201chello world\u201d;", "\nreturn p;", "\n}", "\nvoid Test(void)", "\n{", "\nchar *str = NULL;", "\nstr = GetMemory();", "\nprintf(str);", "\n}", "\u8bf7\u95ee\u8fd0\u884cTest\u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n\u7b54\uff1a\u53ef\u80fd\u662f\u4e71\u7801\u3002", "\n\u56e0\u4e3aGetMemory\u8fd4\u56de\u7684\u662f\u6307\u5411\u201c\u6808\u5185\u5b58\u201d\u7684\u6307\u9488\uff0c\u8be5\u6307\u9488\u7684\u5730\u5740\u4e0d\u662f NULL\uff0c\u4f46\u5176\u539f\u73b0\u7684\u5185\u5bb9\u5df2\u7ecf\u88ab\u6e05\u9664\uff0c\u65b0\u5185\u5bb9\u4e0d\u53ef\u77e5\u3002", "\nvoid GetMemory2(char **p, int num)", "\n{", "\n*p = (char *)malloc(num);", "\n}", "\nvoid Test(void)", "\n{", "\nchar *str = NULL;", "\nGetMemory(&str, 100);", "\nstrcpy(str, \u201chello\u201d);", "\nprintf(str);", "\n}", "\n\u8bf7\u95ee\u8fd0\u884cTest\u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n\u7b54\uff1a", "\n\uff081\uff09\u80fd\u591f\u8f93\u51fahello", "\n\uff082\uff09\u5185\u5b58\u6cc4\u6f0f", "\tvoid Test(void)", "\n{", "\nchar *str = (char *) malloc(100);", "\n\tstrcpy(str, \u201chello\u201d);", "\n\tfree(str);", "\n\tif(str != NULL)", "\n\t{", "\n\t  strcpy(str, \u201cworld\u201d);", "\nprintf(str);", "\n}", "\n}", "\n\u8bf7\u95ee\u8fd0\u884cTest\u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n\u7b54\uff1a\u7be1\u6539\u52a8\u6001\u5185\u5b58\u533a\u7684\u5185\u5bb9\uff0c\u540e\u679c\u96be\u4ee5\u9884\u6599\uff0c\u975e\u5e38\u5371\u9669\u3002", "\n\u56e0\u4e3afree(str);\u4e4b\u540e\uff0cstr\u6210\u4e3a\u91ce\u6307\u9488\uff0c", "\nif(str != NULL)\u8bed\u53e5\u4e0d\u8d77\u4f5c\u7528\u3002", "\u4e94\u3001\u7f16\u5199strcpy\u51fd\u6570\uff0810\u5206\uff09", "\n\u5df2\u77e5strcpy\u51fd\u6570\u7684\u539f\u578b\u662f", "\n\tchar *strcpy(char *strDest, const char *strSrc);", "\n\t\u5176\u4e2dstrDest\u662f\u76ee\u7684\u5b57\u7b26\u4e32\uff0cstrSrc\u662f\u6e90\u5b57\u7b26\u4e32\u3002", "\n\uff081\uff09\u4e0d\u8c03\u7528C++/C\u7684\u5b57\u7b26\u4e32\u5e93\u51fd\u6570\uff0c\u8bf7\u7f16\u5199\u51fd\u6570 strcpy", "\nchar *strcpy(char *strDest, const char *strSrc);", "\n{", "\n    assert((strDest!=NULL) && (strSrc !=NULL));\t// 2\u5206", "\n    char *address = strDest;\t\t\t\t\t\t// 2\u5206", "\n    while( (*strDest++ = * strSrc++) != \u2018\\0\u2019 )\t\t// 2\u5206", "\n       NULL ;", "\n    return address ;\t\t\t\t\t\t\t\t// 2\u5206", "\n}", "\uff082\uff09strcpy\u80fd\u628astrSrc\u7684\u5185\u5bb9\u590d\u5236\u5230strDest\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u8981char * \u7c7b\u578b\u7684\u8fd4\u56de\u503c\uff1f", "\n\u7b54\uff1a\u4e3a\u4e86\u5b9e\u73b0\u94fe\u5f0f\u8868\u8fbe\u5f0f\u3002\t\t\t\t\t\t\t// 2\u5206", "\n\u4f8b\u5982\tint length = strlen( strcpy( strDest, \u201chello world\u201d) );", "\u516d\u3001\u7f16\u5199\u7c7bString\u7684\u6784\u9020\u51fd\u6570\u3001\u6790\u6784\u51fd\u6570\u548c\u8d4b\u503c\u51fd\u6570\uff0825\u5206\uff09", "\n\u5df2\u77e5\u7c7bString\u7684\u539f\u578b\u4e3a\uff1a", "\n\tclass String", "\n\t{", "\n\t  public:", "\n\t\tString(const char *str = NULL);\t// \u666e\u901a\u6784\u9020\u51fd\u6570", "\n\t\tString(const String &other);\t    // \u62f7\u8d1d\u6784\u9020\u51fd\u6570", "\n\t\t~ String(void);\t\t\t\t\t    // \u6790\u6784\u51fd\u6570", "\n\t\tString & operate =(const String &other);\t// \u8d4b\u503c\u51fd\u6570", "\n\t  private:", "\n\t\tchar  \t*m_data;\t\t\t\t// \u7528\u4e8e\u4fdd\u5b58\u5b57\u7b26\u4e32", "\n\t};", "\n\t\u8bf7\u7f16\u5199String\u7684\u4e0a\u8ff04\u4e2a\u51fd\u6570\u3002", "\n\u6807\u51c6\u7b54\u6848\uff1a", "// String\u7684\u6790\u6784\u51fd\u6570", "\n\tString::~String(void)               // 3\u5206", "\n{", "\n\tdelete [] m_data;", "\n// \u7531\u4e8em_data\u662f\u5185\u90e8\u6570\u636e\u7c7b\u578b\uff0c\u4e5f\u53ef\u4ee5\u5199\u6210 delete m_data;", "\n\t}", "\t// String\u7684\u666e\u901a\u6784\u9020\u51fd\u6570", "\n\tString::String(const char *str)      // 6\u5206", "\n{", "\n\tif(str==NULL)", "\n\t{", "\n\t\tm_data = new char[1];    // \u82e5\u80fd\u52a0 NULL \u5224\u65ad\u5219\u66f4\u597d", "\n\t\t*m_data = \u2018\\0\u2019;", "\n\t}", "\n\telse", "\n\t{", "\n\t\tint length = strlen(str);", "\n\t\tm_data = new char[length+1];  // \u82e5\u80fd\u52a0 NULL \u5224\u65ad\u5219\u66f4\u597d", "\n\t\tstrcpy(m_data, str);", "\n\t}", "\n}", "\n// \u62f7\u8d1d\u6784\u9020\u51fd\u6570", "\n\tString::String(const String &other)   // 3\u5206", "\n\t{", "\n\tint length = strlen(other.m_data);", "\n\tm_data = new char[length+1];      // \u82e5\u80fd\u52a0 NULL \u5224\u65ad\u5219\u66f4\u597d", "\n\tstrcpy(m_data, other.m_data);", "\n}", "\n// \u8d4b\u503c\u51fd\u6570", "\n\tString & String::operate =(const String &other)    // 13\u5206", "\n\t{", "\n\t\t// (1) \u68c0\u67e5\u81ea\u8d4b\u503c                     // 4\u5206", "\n\t\tif(this == &other)", "\n\t\t\treturn *this;", "// (2) \u91ca\u653e\u539f\u6709\u7684\u5185\u5b58\u8d44\u6e90            // 3\u5206", "\n\t\tdelete [] m_data;", "\t\t// \uff083\uff09\u5206\u914d\u65b0\u7684\u5185\u5b58\u8d44\u6e90\uff0c\u5e76\u590d\u5236\u5185\u5bb9 // 3\u5206", "\n\tint length = strlen(other.m_data);", "\n\tm_data = new char[length+1];         // \u82e5\u80fd\u52a0 NULL \u5224\u65ad\u5219\u66f4\u597d", "\n\t\tstrcpy(m_data, other.m_data);", "\t\t// \uff084\uff09\u8fd4\u56de\u672c\u5bf9\u8c61\u7684\u5f15\u7528            // 3\u5206", "\n\t\treturn *this;", "\n}", "\n\u9996\u5148\u8bf7\u505a\u9644\u5f55B\u7684C++/C\u8bd5\u9898\uff08\u4e0d\u8981\u770b\u7b54\u6848\uff09\uff0c\u8003\u67e5\u81ea\u5df1\u7684\u7f16\u7a0b\u8d28\u91cf\u7a76\u7adf\u5982\u4f55\u3002\u7136\u540e\u53c2\u7167\u7b54\u6848\u4e25\u683c\u6253\u5206\u3002", "\n\uff081\uff09\u5982\u679c\u4f60\u53ea\u5f97\u4e86\u51e0\u5341\u5206\uff0c\u8bf7\u4e0d\u8981\u58f0\u5f20\uff0c\u4e5f\u4e0d\u8981\u592a\u96be\u8fc7\u3002\u7f16\u7a0b\u8d28\u91cf\u5dee\u5f80\u5f80\u662f\u7531\u4e8e\u4e0d\u826f\u4e60\u60ef\u9020\u6210\u7684\uff0c\u4e0e\u4eba\u7684\u667a\u529b\u3001\u80fd\u529b\u6ca1\u6709\u591a\u5927\u5173\u7cfb\uff0c\u8fd8\u662f\u6709\u836f\u53ef\u6551\u7684\u3002\u6210\u7ee9\u8d8a\u5dee\uff0c\u53ef\u4ee5\u8fdb\u6b65\u7684\u7a7a\u95f4\u5c31\u8d8a\u5927\uff0c\u4e2d\u56fd\u4e0d\u5c31\u662f\u5728\u843d\u540e\u4e2d\u8d76\u8d85\u53d1\u8fbe\u8d44\u672c\u4e3b\u4e49\u56fd\u5bb6\u5417\uff1f\u53ea\u8981\u4f60\u80fd\u4e0b\u51b3\u5fc3\u6539\u6389\u4e0d\u826f\u7684\u7f16\u7a0b\u4e60\u60ef\uff0c\u7b2c\u4e8c\u6b21\u8003\u8bd5\u5c31\u80fd\u53ca\u683c\u4e86\u3002", "\n\uff082\uff09\u5982\u679c\u4f60\u8003\u53ca\u683c\u4e86\uff0c\u8868\u660e\u4f60\u7684\u6280\u672f\u57fa\u7840\u4e0d\u9519\uff0c\u5e0c\u671b\u4f60\u80fd\u865a\u5fc3\u5b66\u4e60\u3001\u4e0d\u65ad\u8fdb\u6b65\u3002\u5982\u679c\u4f60\u8fd8\u6ca1\u6709\u627e\u5230\u5408\u9002\u7684\u5de5\u4f5c\u5355\u4f4d\uff0c\u4e0d\u59a8\u5230\u4e0a\u6d77\u8d1d\u5c14\u8bd5\u4e00\u8bd5\u3002", "\n\uff083\uff09\u5982\u679c\u4f60\u8003\u51fa85\u5206\u4ee5\u4e0a\u7684\u597d\u6210\u7ee9\uff0c\u4f60\u6709\u4e49\u52a1\u548c\u8d44\u683c\u4e3a\u4f60\u6240\u5728\u7684\u56e2\u961f\u4f5c\u201cC++/C\u7f16\u7a0b\u201d\u57f9\u8bad\u3002\u5e0c\u671b\u4f60\u80fd\u548c\u6211\u4eec\u591a\u591a\u4ea4\u6d41\u3001\u76f8\u4e92\u4fc3\u8fdb\u3002\u534a\u5e74\u524d\u6211\u66fe\u7ecf\u53d1\u73b0\u4e00\u9897\u597d\u82d7\u5b50\uff0c\u5c31\u628a\u4ed6\u6316\u5230\u6211\u4eec\u5c0f\u7ec4\u6765\u3002", "\n\uff084\uff09\u5982\u679c\u4f60\u5728\u6ca1\u6709\u4efb\u4f55\u63d0\u793a\u7684\u60c5\u51b5\u4e0b\u8003\u4e86\u6ee1\u5206\uff0c\u5e0c\u671b\u4f60\u80fd\u6536\u6211\u505a\u4f60\u7684\u5f92\u5f1f\u3002"], "title": "\u4e00\u4e2a\u5f88\u725b\u7684\u4eba\u51fa\u7684\u88ab\u4f17\u591a\u77e5\u540dIT\u4f01\u4e1a\u7528\u4f5c\u9762\u8bd5\u9898\u7684C\u8bed\u8a00\u6d4b\u8bd5\u9898"},
{"contents": ["1.C/C++\u57fa\u7840\u77e5\u8bc6\u95ee\u9898", "a) \u5173\u952e\u5b57volatile\u5728\u7f16\u8bd1\u65f6\u6709\u4ec0\u4e48\u542b\u4e49?\u5e76\u7ed9\u51fa\u4e09\u4e2a\u4e0d\u540c\u4f7f\u7528\u573a\u666f\u7684\u4f8b\u5b50(\u53ef\u4ee5\u4f2a\u4ee3\u7801\u6216\u8005\u6587\u5b57\u63cf\u8ff0)\u3002", "b) C\u8bed\u8a00\u4e2dstatic\u5173\u952e\u5b57\u7684\u5177\u4f53\u4f5c\u7528\u6709\u54ea\u4e9b ?", "c) \u8bf7\u95ee\u4e0b\u9762\u4e09\u79cd\u53d8\u91cf\u58f0\u660e\u6709\u4f55\u533a\u522b?\u8bf7\u7ed9\u51fa\u5177\u4f53\u542b\u4e49", "int const *p;", "int* const p;", "int const* const p", "\u53c2\u8003\u7b54\u6848", "a) \u7528volatile\u5173\u952e\u5b57\u5b9a\u4e49\u53d8\u91cf\uff0c\u76f8\u5f53\u4e8e\u544a\u8bc9\u7f16\u8bd1\u5668\uff0c\u8fd9\u4e2a\u53d8\u91cf\u7684\u503c\u4f1a\u968f\u65f6\u53d1\u751f\u53d8\u5316\uff0c\u6bcf\u6b21\u4f7f\u7528\u65f6\u90fd\u9700\u8981\u53bb\u5185\u5b58\u91cc\u91cd\u65b0\u8bfb\u53d6\u5b83\u7684\u503c\uff0c\u5e76\u4e0d\u8981\u968f\u610f\u9488\u5bf9\u5b83\u4f5c\u4f18\u5316\u3002", "\u5efa\u8bae\u4f7f\u7528volatile\u53d8\u91cf\u7684\u573a\u6240\uff1a", "(1) \u5e76\u884c\u8bbe\u5907\u7684\u786c\u4ef6\u5bc4\u5b58\u5668", "(2) \u4e00\u4e2a\u4e2d\u65ad\u670d\u52a1\u5b50\u7a0b\u5e8f\u4e2d\u4f1a\u8bbf\u95ee\u5230\u7684\u975e\u81ea\u52a8\u53d8\u91cf\uff08\u5168\u5c40\u53d8\u91cf\uff09", "(3) \u591a\u7ebf\u7a0b\u5e94\u7528\u4e2d\u88ab\u51e0\u4e2a\u4efb\u52a1\u5171\u4eab\u7684\u53d8\u91cf", "b) \u5728\u51fd\u6570\u4f53\uff0c\u4e00\u4e2a\u88ab\u58f0\u660e\u4e3a\u9759\u6001\u7684\u53d8\u91cf\u5728\u8fd9\u4e00\u51fd\u6570\u88ab\u8c03\u7528\u8fc7\u7a0b\u4e2d\u7ef4\u6301\u5176\u503c\u4e0d\u53d8\u3002", "      \u5728\u6a21\u5757\u5185\uff08\u4f46\u5728\u51fd\u6570\u4f53\u5916\uff09\uff0c\u4e00\u4e2a\u88ab\u58f0\u660e\u4e3a\u9759\u6001\u7684\u53d8\u91cf\u53ef\u4ee5\u88ab\u6a21\u5757\u5185\u6240\u7528\u51fd\u6570\u8bbf\u95ee\uff0c\u4f46\u4e0d\u80fd\u88ab\u6a21\u5757\u5916\u5176\u5b83\u51fd\u6570\u8bbf\u95ee\u3002\u5b83\u662f\u4e00\u4e2a\u672c\u5730\u7684\u5168\u5c40\u53d8\u91cf\u3002", "      \u5728\u6a21\u5757\u5185\uff0c\u4e00\u4e2a\u88ab\u58f0\u660e\u4e3a\u9759\u6001\u7684\u51fd\u6570\u53ea\u53ef\u88ab\u8fd9\u4e00\u6a21\u5757\u5185\u7684\u5176\u5b83\u51fd\u6570\u8c03\u7528\u3002\u90a3\u5c31\u662f\uff0c\u8fd9\u4e2a\u51fd\u6570\u88ab\u9650\u5236\u5728\u58f0\u660e\u5b83\u7684\u6a21\u5757\u7684\u672c\u5730\u8303\u56f4\u5185\u4f7f\u7528\u3002", "      static\u5168\u5c40\u53d8\u91cf\u4e0e\u666e\u901a\u7684\u5168\u5c40\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u5168\u5c40\u53d8\u91cf\u53ea\u521d\u4f7f\u5316\u4e00\u6b21\uff0c\u9632\u6b62\u5728\u5176\u4ed6\u6587\u4ef6\u5355\u5143\u4e2d\u88ab\u5f15\u7528;", "      static\u5c40\u90e8\u53d8\u91cf\u548c\u666e\u901a\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u5c40\u90e8\u53d8\u91cf\u53ea\u88ab\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u4e0b\u4e00\u6b21\u4f9d\u636e\u4e0a\u4e00\u6b21\u7ed3\u679c\u503c\uff1b", "      static\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u51fd\u6570\u5728\u5185\u5b58\u4e2d\u53ea\u6709\u4e00\u4efd\uff0c\u666e\u901a\u51fd\u6570\u5728\u6bcf\u4e2a\u88ab\u8c03\u7528\u4e2d\u7ef4\u6301\u4e00\u4efd\u62f7\u8d1d;", "c) \u4e00\u4e2a\u6307\u5411\u5e38\u6574\u578b\u6570\u7684\u6307\u9488", "      \u4e00\u4e2a\u6307\u5411\u6574\u578b\u6570\u7684\u5e38\u6307\u9488", "      \u4e00\u4e2a\u6307\u5411\u5e38\u6574\u578b\u6570\u7684\u5e38\u6307\u9488", "2.\u8981\u4f7f\u5f15\u7528pr\u4ee3\u8868\u53d8\u91cf\u201cchar*p\u201d\uff0c\u5219pr\u7684\u521d\u59cb\u5316\u8bed\u53e5\u4e3a__________", "\u53c2\u8003\u7b54\u6848", "char * &pr=p\uff1b", "3.\u8868\u8fbe\u5f0f8&3\u7684\u7ed3\u679c\u662f__________\u3002", "\u53c2\u8003\u7b54\u6848", "0", "4.\u8bbeint x\uff1b\uff0c\u5219\u7ecf\u8fc7\uff08     \uff09\u540e\uff0c\u8bed\u53e5*px=0\uff1b\u53ef\u5c06x\u503c\u7f6e\u4e3a0\u3002", "       A int * px\uff1b               B int const * px=&x\uff1b", "     C int * const px=&x\uff1b      D const int * px=&x\uff1b", "\u53c2\u8003\u7b54\u6848", "C", "5.\u5199\u51fa\u4e0b\u5217\u7a0b\u5e8f\u7684\u6267\u884c\u7ed3\u679c\u3002", "# include ", "    void fun(int\uff0cint\uff0cint * )\uff1b", "    void main()", "    {", "int x\uff0cy\uff0cz\uff1b", "fun (2\uff0c3\uff0c&x)\uff1b", "fun (4\uff0cx\uff0c&y)\uff1b", "fun (x\uff0cy\uff0c&z)\uff1b", "cout\n", "}", "void fun(int a\uff0cint b\uff0cint * c )", "{ ", "b*=a\uff1b", "*c=b-a\uff1b", "}", "\u53c2\u8003\u7b54\u6848", "4\uff0c12\uff0c44", "Embedded Software Design Engineer", "1 \u8bfb\u7a0b\u5e8f\u6bb5\uff0c\u56de\u7b54\u95ee\u9898", "\nint main(int argc,char *argv[])", "\n{", "\nint c=9,d=0;", "\nc=c++%5;", "\nd=c;", "\nprintf(\"d=%d\\n\",d);", "\nreturn 0;", "\n}", "\na) \u5199\u51fa\u7a0b\u5e8f\u8f93\u51fa", "\nb) \u5728\u4e00\u4e2a\u53ef\u79fb\u690d\u7684\u7cfb\u7edf\u4e2d\u8fd9\u79cd\u8868\u8fbe\u5f0f\u662f\u5426\u5b58\u5728\u98ce\u9669\uff1fwhy?", "#include \"stdio.h\"", "\nint a=0;", "\nint b;", "\nstatic char c;", "\nint main(int argc,char *argv[])", "\n{", "\nchar d=4;", "\nstatic short e;", "a++;", "\nb=100;", "\nc=(char)++a;", "\ne=(++d)++;", "\nprintf(\"a=%d, b=%d, c=%d, d= %d, e=%d\",a,b,c,d,e);", "\nreturn 0;", "\n}", "\na) \u5199\u51fa\u7a0b\u5e8f\u8f93\u51fa", "\nb) \u7f16\u8bd1\u5668\u5982\u679c\u5b89\u6392\u5404\u4e2a\u53d8\u91cf(a,b,c,d)\u5728\u5185\u5b58\u4e2d\u7684\u5e03\u5c40(eg. stack,heap,data section,bss section),\u6700\u597d\u7528\u56fe\u5f62\u65b9\u5f0f\u63cf\u8ff0\u3002", "2 \u4e2d\u65ad\u662f\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\u91cd\u8981\u7684\u7ec4\u6210\u90e8\u5206\uff0c\u8fd9\u5bfc\u81f4\u4e86\u8bb8\u591a\u7f16\u8bd1\u5f00\u53d1\u5546\u63d0\u4f9b\u4e00\u79cd\u6269\u5c55\uff1a\u8ba9\u6807\u51c6C\u652f\u6301\u4e2d\u65ad\uff0c\u4ea7\u751f\u4e86\u4e00\u4e2a\u65b0\u7684\u5173\u952e\u5b57__interrupt\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u5c31 \u4f7f\u7528\u4e86__interrupt\u5173\u952e\u5b57\u53bb\u5b9a\u4e49\u4e86\u4e00\u4e2a\u4e2d\u65ad\u670d\u52a1\u5b50\u7a0b\u5e8f(ISR),\u8bf7\u8bc4\u8bba\u4ee5\u4e0b\u8fd9\u6bb5\u4ee3\u7801\u3002", "\n__interrupt double compute_area(double radius)", "\n{", "\ndouble area = PI * radius *radius;", "\nprintf(\"nArea = %f\", area);", "\nreturn area;", "\n}", "3 C/C++\u57fa\u7840\u77e5\u8bc6\u95ee\u9898", "\na) \u5173\u952e\u5b57volatile\u5728\u7f16\u8bd1\u65f6\u6709\u4ec0\u4e48\u542b\u4e49?\u5e76\u7ed9\u51fa\u4e09\u4e2a\u4e0d\u540c\u4f7f\u7528\u573a\u666f\u7684\u4f8b\u5b50(\u53ef\u4ee5\u4f2a\u4ee3\u7801\u6216\u8005\u6587\u5b57\u63cf\u8ff0)\u3002", "\nb) C\u8bed\u8a00\u4e2dstatic\u5173\u952e\u5b57\u7684\u5177\u4f53\u4f5c\u7528\u6709\u54ea\u4e9b ?", "\nc) \u8bf7\u95ee\u4e0b\u9762\u4e09\u79cd\u53d8\u91cf\u58f0\u660e\u6709\u4f55\u533a\u522b?\u8bf7\u7ed9\u51fa\u5177\u4f53\u542b\u4e49", "\nint const *p;", "\nint* const p;", "\nint const* const p;", "4 \u5d4c\u5165\u5f0f\u7cfb\u7edf\u76f8\u5173\u95ee\u9898", "\na) \u5bf9\u4e8e\u6574\u5f62\u53d8\u91cfA=0x12345678,\u8bf7\u753b\u51fa\u5728little endian\u53cabig endian\u7684\u65b9\u5f0f\u4e0b\u5728\u5185\u5b58\u4e2d\u662f\u5982\u4f55\u5b58\u50a8\u7684\u3002", "\nb) \u5728ARM\u7cfb\u7edf\u4e2d\uff0c\u51fd\u6570\u8c03\u7528\u7684\u65f6\u5019\uff0c\u53c2\u6570\u662f\u901a\u8fc7\u54ea\u79cd\u65b9\u5f0f\u4f20\u9012\u7684?", "\nc) \u4e2d\u65ad(interrupt,\u5982\u952e\u76d8\u4e2d\u65ad)\u4e0e\u5f02\u5e38(exception,\u5982\u9664\u96f6\u5f02\u5e38)\u6709\u4f55\u533a\u522b?", "5 \u8bbe\u5468\u671f\u6027\u4efb\u52a1P1,P2,P3\u7684\u5468\u671f\u4e3aT1,T2,T3\u5206\u522b\u4e3a100\uff0c150\uff0c400\uff1b\u6267\u884c\u65f6\u95f4\u5206\u522b\u4e3a20\uff0c40\uff0c100\u3002\u8bf7\u8bbe\u8ba1\u4e00\u79cd\u8c03\u5ea6\u7b97\u6cd5\u8fdb\u884c\u4efb\u52a1\u8c03\u5ea6\uff0c\u6ee1\u8db3\u4efb\u52a1\u6267\u884c\u5468\u671f\u53ca\u4efb\u52a1\u5468\u671f\u3002", "6 \u4f18\u5148\u7ea7\u53cd\u8f6c\u95ee\u9898\u5728\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\u662f\u4e00\u4e2d\u4e25\u91cd\u7684\u95ee\u9898\uff0c\u5fc5\u987b\u7ed9\u4e0e\u8db3\u591f\u91cd\u89c6\u3002", "\na) \u9996\u5148\u8bf7\u89e3\u91ca\u4f18\u5148\u7ea7\u53cd\u8f6c\u95ee\u9898", "\nb) \u5f88\u591aRTOS\u63d0\u4f9b\u4f18\u5148\u7ea7\u7ee7\u627f\u7b56\u7565(Priority inheritance)\u548c\u4f18\u5148\u7ea7\u5929\u82b1\u677f\u7b56\u7565(Priority ceilings)\u7528\u6765\u89e3\u51b3\u4f18\u5148\u7ea7\u53cd\u8f6c\u95ee\u9898\uff0c\u8bf7\u8ba8\u8bba\u8fd9\u4e24\u79cd\u7b56\u7565\u3002", "\n\u53c2\u8003\u7b54\u6848:", "\n1 5 //\u6211\u611f\u89c9\u7b54\u6848\u5e94\u8be5\u662f4,\u4f46\u6807\u51c6\u7b54\u6848\u7ed9\u7684\u662f5...", "\n\u5b58\u5728\u98ce\u9669\uff0c\u56e0\u4e3ac=c++%5;\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u5bf9c\u6709\u4e24\u6b21\u4fee\u6539\uff0c\u884c\u4e3a\u672a\u5b9a\u4e49\uff0cc\u7684\u503c\u4e0d\u786e\u5b9a", "\nint a=0; // data section", "\nint b;   // data section", "\nstatic char c; // BSS", "\nint main(int argc,char *argv[])", "\n{", "\n    char d=4;         // stack", "\n    static short e;   // BSS", "\n    a++;", "\n    b=100;", "\n    c=(char)++a;", "\n    e=(++d)++;", "\n    printf(\"a=%d, b=%d, c=%d, d= %d, e=%d\",a,b,c,d,e);", "\n    return 0;", "\n}", "\na=2,b=100,c=2,d=6,e=5", "\n2 a)ISR\u4e0d\u80fd\u8fd4\u56de\u4e00\u4e2a\u503c\uff1b", "\nb)ISR\u4e0d\u80fd\u4f20\u9012\u53c2\u6570\uff1b", "\nc)\u6d6e\u70b9\u4e00\u822c\u90fd\u662f\u4e0d\u53ef\u91cd\u5165\u7684\uff1b", "\nd)printf\u51fd\u6570\u6709\u91cd\u5165\u548c\u6027\u80fd\u4e0a\u7684\u95ee\u9898\u3002", "\n3 a) \u7528volatile\u5173\u952e\u5b57\u5b9a\u4e49\u53d8\u91cf\uff0c\u76f8\u5f53\u4e8e\u544a\u8bc9\u7f16\u8bd1\u5668\uff0c\u8fd9\u4e2a\u53d8\u91cf\u7684\u503c\u4f1a\u968f\u65f6\u53d1\u751f\u53d8\u5316\uff0c\u6bcf\u6b21\u4f7f\u7528\u65f6\u90fd\u9700\u8981\u53bb\u5185\u5b58\u91cc", "\n\u91cd\u65b0\u8bfb\u53d6\u5b83\u7684\u503c\uff0c\u5e76\u4e0d\u8981\u968f\u610f\u9488\u5bf9\u5b83\u4f5c\u4f18\u5316\u3002", "\n\u5efa\u8bae\u4f7f\u7528volatile\u53d8\u91cf\u7684\u573a\u6240\uff1a", "\n(1) \u5e76\u884c\u8bbe\u5907\u7684\u786c\u4ef6\u5bc4\u5b58\u5668", "\n(2) \u4e00\u4e2a\u4e2d\u65ad\u670d\u52a1\u5b50\u7a0b\u5e8f\u4e2d\u4f1a\u8bbf\u95ee\u5230\u7684\u975e\u81ea\u52a8\u53d8\u91cf\uff08\u5168\u5c40\u53d8\u91cf\uff09", "\n(3) \u591a\u7ebf\u7a0b\u5e94\u7528\u4e2d\u88ab\u51e0\u4e2a\u4efb\u52a1\u5171\u4eab\u7684\u53d8\u91cf", "\nb) \u5728\u51fd\u6570\u4f53\uff0c\u4e00\u4e2a\u88ab\u58f0\u660e\u4e3a\u9759\u6001\u7684\u53d8\u91cf\u5728\u8fd9\u4e00\u51fd\u6570\u88ab\u8c03\u7528\u8fc7\u7a0b\u4e2d\u7ef4\u6301\u5176\u503c\u4e0d\u53d8\u3002", "\n     \u5728\u6a21\u5757\u5185\uff08\u4f46\u5728\u51fd\u6570\u4f53\u5916\uff09\uff0c\u4e00\u4e2a\u88ab\u58f0\u660e\u4e3a\u9759\u6001\u7684\u53d8\u91cf\u53ef\u4ee5\u88ab\u6a21\u5757\u5185\u6240\u7528\u51fd\u6570\u8bbf\u95ee\uff0c\u4f46\u4e0d\u80fd\u88ab\u6a21\u5757\u5916\u5176\u5b83\u51fd\u6570", "\n\u8bbf\u95ee\u3002\u5b83\u662f\u4e00\u4e2a\u672c\u5730\u7684\u5168\u5c40\u53d8\u91cf\u3002", "\n     \u5728\u6a21\u5757\u5185\uff0c\u4e00\u4e2a\u88ab\u58f0\u660e\u4e3a\u9759\u6001\u7684\u51fd\u6570\u53ea\u53ef\u88ab\u8fd9\u4e00\u6a21\u5757\u5185\u7684\u5176\u5b83\u51fd\u6570\u8c03\u7528\u3002\u90a3\u5c31\u662f\uff0c\u8fd9\u4e2a\u51fd\u6570\u88ab\u9650\u5236\u5728\u58f0\u660e\u5b83\u7684", "\n\u6a21\u5757\u7684\u672c\u5730\u8303\u56f4\u5185\u4f7f\u7528\u3002", "\n     static\u5168\u5c40\u53d8\u91cf\u4e0e\u666e\u901a\u7684\u5168\u5c40\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u5168\u5c40\u53d8\u91cf\u53ea\u521d\u4f7f\u5316\u4e00\u6b21\uff0c\u9632\u6b62\u5728\u5176\u4ed6\u6587\u4ef6\u5355\u5143\u4e2d\u88ab\u5f15\u7528;", "\n     static\u5c40\u90e8\u53d8\u91cf\u548c\u666e\u901a\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u5c40\u90e8\u53d8\u91cf\u53ea\u88ab\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u4e0b\u4e00\u6b21\u4f9d\u636e\u4e0a\u4e00\u6b21\u7ed3\u679c\u503c\uff1b", "\n     static\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u51fd\u6570\u5728\u5185\u5b58\u4e2d\u53ea\u6709\u4e00\u4efd\uff0c\u666e\u901a\u51fd\u6570\u5728\u6bcf\u4e2a\u88ab\u8c03\u7528\u4e2d\u7ef4\u6301\u4e00\u4efd\u62f7\u8d1d", "\nc) \u4e00\u4e2a\u6307\u5411\u5e38\u6574\u578b\u6570\u7684\u6307\u9488", "\n     \u4e00\u4e2a\u6307\u5411\u6574\u578b\u6570\u7684\u5e38\u6307\u9488", "\n     \u4e00\u4e2a\u6307\u5411\u5e38\u6574\u578b\u6570\u7684\u5e38\u6307\u9488", "\n4", "\na) 0x12345678", "\nlittle endian        big endian \u521a\u597d\u53cd\u8fc7\u6765", "\n\u9ad8\u5730\u5740--\u3009 0x12      \u4f4e\u5730\u5740--\u3009 0x12", "\n             0x34                 0x34", "\n             0x56                 0x56", "\n\u4f4e\u5730\u5740--\u3009 0x78      \u9ad8\u5730\u5740--\u3009 0x78", "\nb)\u53c2\u65704\u7684\u901a\u8fc7\u538b\u6808\u65b9\u5f0f\u4f20\u9012", "\nc)   \u5f02\u5e38\uff1a\u5728\u4ea7\u751f\u65f6\u5fc5\u987b\u8003\u8651\u4e0e\u5904\u7406\u5668\u7684\u65f6\u949f\u540c\u6b65\uff0c\u5b9e\u8df5\u4e0a\uff0c\u5f02\u5e38\u4e5f\u79f0\u4e3a\u540c\u6b65\u4e2d\u65ad\u3002\u5728\u5904\u7406\u5668\u6267\u884c\u5230\u7531\u4e8e\u7f16\u7a0b\u5931\u8bef\u800c\u5bfc\u81f4\u7684\u9519\u8bef\u6307\u4ee4\u65f6\uff0c\u6216\u8005\u5728\u6267\u884c\u671f\u95f4\u51fa\u73b0\u7279\u6b8a\u60c5\u51b5(\u5982\u7f3a\u9875)\uff0c\u5fc5\u987b\u9760\u5185\u6838\u5904\u7406\u7684\u65f6\u5019\uff0c\u5904\u7406\u5668\u5c31\u4f1a\u4ea7\u751f\u4e00\u4e2a\u5f02\u5e38\u3002", "\n\u6240\u8c13\u4e2d\u65ad\u5e94\u8be5\u662f\u6307\u5916\u90e8\u786c\u4ef6\u4ea7\u751f\u7684\u4e00\u4e2a\u7535\u4fe1\u53f7\uff0c\u4ececpu\u7684\u4e2d\u65ad\u5f15\u811a\u8fdb\u5165\uff0c\u6253\u65adcpu\u5f53\u524d\u7684\u8fd0\u884c\uff1b", "\n\u6240\u8c13\u5f02\u5e38\uff0c\u662f\u6307\u8f6f\u4ef6\u8fd0\u884c\u4e2d\u53d1\u751f\u4e86\u4e00\u4e9b\u5fc5\u987b\u4f5c\u51fa\u5904\u7406\u7684\u4e8b\u4ef6\uff0ccpu\u81ea\u52a8\u4ea7\u751f\u4e00\u4e2a\u9677\u5165\u6765\u6253\u65ad\u5f53\u524d\u8fd0\u884c\uff0c\u8f6c\u5165\u5f02\u5e38\u5904\u7406\u6d41\u7a0b\u3002", "\n\u5f02\u6b65\u4e0e\u540c\u6b65\u7684\u533a\u522b`", "\n5", "\n6 \u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\u9700\u8981\u7b49\u5f85\u4f4e\u4f18\u5148\u7ea7\u4efb\u52a1\u91ca\u653e\u8d44\u6e90\uff0c\u800c\u4f4e\u4f18\u5148\u7ea7\u4efb\u52a1\u53c8\u6b63\u5728\u7b49\u5f85\u4e2d\u7b49\u4f18\u5148\u7ea7\u4efb\u52a1\u7684\u73b0\u8c61\u53eb\u505a\u4f18\u5148\u7ea7\u53cd\u8f6c", "\n\u4f18\u5148\u7ea7\u7ee7\u627f\u7b56\u7565(Priority inheritance):\u7ee7\u627f\u73b0\u6709\u88ab\u963b\u585e\u4efb\u52a1\u7684\u6700\u9ad8\u4f18\u5148\u7ea7\u4f5c\u4e3a\u5176\u4f18\u5148\u7ea7\uff0c\u4efb\u52a1\u9000\u51fa\u4e34\u754c\u533a\uff0c\u6062", "\n\u590d\u521d\u59cb\u4f18\u5148\u7ea7\u3002", "\n\u4f18\u5148\u7ea7\u5929\u82b1\u677f\u7b56\u7565(Priority ceilings):\u63a7\u5236\u8bbf\u95ee\u4e34\u754c\u8d44\u6e90\u7684\u4fe1\u53f7\u91cf\u7684\u4f18\u5148\u7ea7\u5929\u82b1\u677f\u3002", "\n\u4f18\u5148\u7ea7\u7ee7\u627f\u7b56\u7565\u5bf9\u4efb\u52a1\u6267\u884c\u6d41\u7a0b\u7684\u5f71\u54cd\u76f8\u5bf9\u6559\u5c0f\uff0c\u56e0\u4e3a\u53ea\u6709\u5f53\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\u7533\u8bf7\u5df2\u88ab\u4f4e\u4f18\u5148\u7ea7\u4efb\u52a1\u5360\u6709\u7684\u4e34\u754c\u8d44\u6e90", "\n\u8fd9\u4e00\u4e8b\u5b9e\u53d1\u751f\u65f6\uff0c\u624d\u62ac\u5347\u4f4e\u4f18\u5148\u7ea7\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u3002", "\n1   \u8bfb\u7a0b\u5e8f\u6bb5\uff0c\u56de\u7b54\u95ee\u9898", "\n      int   main(int   argc,char   *argv[])", "\n      {", "\n          int   c=9,d=0;", "\n          c=c++%5;", "\n          d=c;", "\n          printf(\u201cd=%d\\n\u201d,d);", "\n          return   0;", "\n      }", "\n      a)   \u5199\u51fa\u7a0b\u5e8f\u8f93\u51fa", "\n      5", "\n      b)   \u5728\u4e00\u4e2a\u53ef\u79fb\u690d\u7684\u7cfb\u7edf\u4e2d\u8fd9\u79cd\u8868\u8fbe\u5f0f\u662f\u5426\u5b58\u5728\u98ce\u9669\uff1fwhy? ", "      #include   \u201cstdio.h\u201d", "\n      int   a=0;", "\n      int   b;", "\n      static   char   c;", "\n      int   main(int   argc,char   *argv[])", "\n      {", "\n          char   d=4;", "\n          static   short   e; ", "          a++;", "\n          b=100;", "\n          c=(char)++a;", "\n          e=(++d)++;", "\n          printf(\u201ca=%d,   b=%d,   c=%d,   d=   %d,   e=%d\u201d,a,b,c,d,e);", "\n          return   0;", "\n      }", "\n      a)   \u5199\u51fa\u7a0b\u5e8f\u8f93\u51fa", "\n      \u4ee5\u524d\u5b66\u8fc7c++,\u8fd9\u4e2a\u662f\u53ef\u4ee5\u7684       e=(++d)++;", "\n\u73b0\u5728\u624d\u53d1\u73b0\u5728c\u4e2d\uff0c\u8fd9\u662f\u4e0d\u884c\u7684", "\n      a=2,   b=100,   c=2,   d=   6,   e=5", "\n      b)   \u7f16\u8bd1\u5668\u5982\u679c\u5b89\u6392\u5404\u4e2a\u53d8\u91cf(a,b,c,d)\u5728\u5185\u5b58\u4e2d\u7684\u5e03\u5c40(eg.   stack,heap,data   section,bss   section),\u6700\u597d\u7528\u56fe\u5f62\u65b9\u5f0f\u63cf\u8ff0\u3002", "\n      data section: a", "\n      bss section: b,c,e", "\n      stack d", "\n   \u5728\u91c7\u7528\u6bb5\u5f0f\u5185\u5b58\u7ba1\u7406\u7684\u67b6\u6784\u4e2d\uff0c\u6570\u636e\u6bb5\uff08data   segment\uff09\u901a\u5e38\u662f\u6307\u7528\u6765\u5b58\u653e\u7a0b\u5e8f\u4e2d\u5df2\u521d\u59cb\u5316\u7684\u5168\u5c40\u53d8\u91cf\u7684\u4e00\u5757\u5185\u5b58\u533a\u57df\u3002\u6570\u636e\u6bb5\u5c5e\u4e8e\u9759\u6001\u5185\u5b58\u5206\u914d\u3002    ", "\u5728\u91c7\u7528\u6bb5\u5f0f\u5185\u5b58\u7ba1\u7406\u7684\u67b6\u6784\u4e2d\uff0cBSS\u6bb5\uff08bss   segment\uff09\u901a\u5e38\u662f\u6307\u7528\u6765\u5b58\u653e\u7a0b\u5e8f\u4e2d\u672a\u521d\u59cb\u5316\u7684\u5168\u5c40\u53d8\u91cf\u7684\u4e00\u5757\u5185\u5b58\u533a\u57df\u3002BSS\u662f\u82f1\u6587Block   Started   by   Symbol\u7684\u7b80\u79f0\u3002BSS\u6bb5\u5c5e\u4e8e\u9759\u6001\u5185\u5b58\u5206\u914d\u3002", "4   \u5d4c\u5165\u5f0f\u7cfb\u7edf\u76f8\u5173\u95ee\u9898", "\n      a)   \u5bf9\u4e8e\u6574\u5f62\u53d8\u91cfA=0\u00d712345678,\u8bf7\u753b\u51fa\u5728little   endian\u53cabig   endian\u7684\u65b9\u5f0f\u4e0b\u5728\u5185\u5b58\u4e2d\u662f\u5982\u4f55\u5b58\u50a8\u7684\u3002", "                       low \u2013 > high", "\n      little endian    0\u00d778 0\u00d756 0\u00d734 0\u00d712", "\n      big    endian    0\u00d712 0\u00d734 0\u00d756 0\u00d778", "      b)   \u5728ARM\u7cfb\u7edf\u4e2d\uff0c\u51fd\u6570\u8c03\u7528\u7684\u65f6\u5019\uff0c\u53c2\u6570\u662f\u901a\u8fc7\u54ea\u79cd\u65b9\u5f0f\u4f20\u9012\u7684?", "\n      \u5728arm\u6c47\u7f16\u4e2d,\u5982\u679c\u4e0d\u8d85\u8fc74\u4e2a\u53c2\u6570\u65f6,\u662f\u901a\u8fc7r0   -r3\u5bc4\u5b58\u5668\u6765\u4f20\u9012\u53c2\u6570\uff0c>4\u7684\u901a\u8fc7\u538b\u6808\u65b9\u5f0f\u4f20\u9012\u3002   ", "      c)   \u4e2d\u65ad(interrupt,\u5982\u952e\u76d8\u4e2d\u65ad)\u4e0e\u5f02\u5e38(exception,\u5982\u9664\u96f6\u5f02\u5e38)\u6709\u4f55\u533a\u522b?", "\n      \u5728\u300aLinux\u5185\u6838\u8bbe\u8ba1\u4e0e\u5b9e\u73b0\u300b\u4e00\u4e66\u4e2d\uff0c\u8bf4\u9053\uff1a", "\n        \u5f02\u5e38   \uff1a\u5728\u4ea7\u751f\u65f6\u5fc5\u987b\u8003\u8651\u4e0e\u5904\u7406\u5668\u7684\u65f6\u949f\u540c\u6b65\uff0c\u5b9e\u8df5\u4e0a\uff0c\u5f02\u5e38\u4e5f\u79f0\u4e3a\u540c\u6b65\u4e2d\u65ad\u3002\u5728\u5904\u7406\u5668\u6267\u884c\u5230\u7531\u4e8e\u7f16\u7a0b\u5931\u8bef\u800c\u5bfc\u81f4\u7684\u9519\u8bef\u6307\u4ee4\u65f6\uff0c\u6216\u8005\u5728\u6267\u884c\u671f\u95f4\u51fa\u73b0\u7279\u6b8a\u60c5\u51b5(\u5982\u7f3a\u9875)\uff0c\u5fc5\u987b\u9760\u5185\u6838\u5904\u7406\u7684\u65f6\u5019\uff0c\u5904\u7406\u5668\u5c31\u4f1a\u4ea7\u751f\u4e00\u4e2a\u5f02\u5e38\u3002   ", "        \u4e2d\u65ad\u53ef\u5206\u4e3a\u540c\u6b65\uff08synchronous\uff09\u4e2d\u65ad\u548c\u5f02\u6b65\uff08asynchronous\uff09\u4e2d\u65ad\uff1a", "\n1. \u540c\u6b65\u4e2d\u65ad\u662f\u5f53\u6307\u4ee4\u6267\u884c\u65f6\u7531 CPU \u63a7\u5236\u5355\u5143\u4ea7\u751f\uff0c\u4e4b\u6240\u4ee5\u79f0\u4e3a\u540c\u6b65\uff0c\u662f\u56e0\u4e3a\u53ea\u6709\u5728\u4e00\u6761\u6307\u4ee4\u6267\u884c\u5b8c\u6bd5\u540e CPU \u624d\u4f1a\u53d1\u51fa\u4e2d\u65ad\uff0c\u800c\u4e0d\u662f\u53d1\u751f\u5728\u4ee3\u7801\u6307\u4ee4\u6267\u884c\u671f\u95f4\uff0c\u6bd4\u5982\u7cfb\u7edf\u8c03\u7528\u3002", "\n2. \u5f02\u6b65\u4e2d\u65ad\u662f\u6307\u7531\u5176\u4ed6\u786c\u4ef6\u8bbe\u5907\u4f9d\u7167 CPU \u65f6\u949f\u4fe1\u53f7\u968f\u673a\u4ea7\u751f\uff0c\u5373\u610f\u5473\u7740\u4e2d\u65ad\u80fd\u591f\u5728\u6307\u4ee4\u4e4b\u95f4\u53d1\u751f\uff0c\u4f8b\u5982\u952e\u76d8\u4e2d\u65ad\u3002", "\n\u6240\u8c13\u4e2d\u65ad\u5e94\u8be5\u662f\u6307\u5916\u90e8\u786c\u4ef6\u4ea7\u751f\u7684\u4e00\u4e2a\u7535\u4fe1\u53f7\uff0c\u4ececpu\u7684\u4e2d\u65ad\u5f15\u811a\u8fdb\u5165\uff0c\u6253\u65adcpu\u5f53\u524d\u7684\u8fd0\u884c\uff1b", "\n\u6240\u8c13\u5f02\u5e38\uff0c\u662f\u6307\u8f6f\u4ef6\u8fd0\u884c\u4e2d\u53d1\u751f\u4e86\u4e00\u4e9b\u5fc5\u987b\u4f5c\u51fa\u5904\u7406\u7684\u4e8b\u4ef6\uff0ccpu\u81ea\u52a8\u4ea7\u751f\u4e00\u4e2a\u9677\u5165\u6765\u6253\u65ad\u5f53\u524d\u8fd0\u884c\uff0c\u8f6c\u5165\u5f02\u5e38\u5904\u7406\u6d41\u7a0b\u3002", "6   \u4f18\u5148\u7ea7\u53cd\u8f6c\u95ee\u9898\u5728\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\u662f\u4e00\u4e2d\u4e25\u91cd\u7684\u95ee\u9898\uff0c\u5fc5\u987b\u7ed9\u4e0e\u8db3\u591f\u91cd\u89c6\u3002", "\n      a)   \u9996\u5148\u8bf7\u89e3\u91ca\u4f18\u5148\u7ea7\u53cd\u8f6c\u95ee\u9898", "\n      \u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\u9700\u8981\u7b49\u5f85\u4f4e\u4f18\u5148\u7ea7\u4efb\u52a1\u91ca\u653e\u8d44\u6e90\uff0c\u800c\u4f4e\u4f18\u5148\u7ea7\u4efb\u52a1\u53c8\u6b63\u5728\u7b49\u5f85\u4e2d\u7b49\u4f18\u5148\u7ea7\u4efb\u52a1\u7684\u73b0\u8c61\u53eb\u505a\u4f18\u5148\u7ea7\u53cd\u8f6c", "      b)   \u5f88\u591aRTOS\u63d0\u4f9b\u4f18\u5148\u7ea7\u7ee7\u627f\u7b56\u7565(Priority   inheritance)\u548c\u4f18\u5148\u7ea7\u5929\u82b1\u677f\u7b56\u7565(Priority   ceilings)\u7528\u6765\u89e3\u51b3\u4f18\u5148\u7ea7\u53cd\u8f6c\u95ee\u9898\uff0c\u8bf7\u8ba8\u8bba\u8fd9\u4e24\u79cd\u7b56\u7565\u3002", "       \u4f18\u5148\u7ea7\u7ee7\u627f\u7b56\u7565(Priority   inheritance):\u6700\u4f4e\u4f18\u5148\u7ea7\u4efb\u52a1\u7ee7\u627f\u73b0\u6709\u88ab\u963b\u585e\u4efb\u52a1\u7684\u6700\u9ad8\u4f18\u5148\u7ea7\u4f5c\u4e3a\u5176\u4f18\u5148\u7ea7\uff0c\u4efb\u52a1\u9000\u51fa\u4e34\u754c\u533a\uff0c\u6062", "\u590d\u521d\u59cb\u4f18\u5148\u7ea7\u3002", "\n      \u4f18\u5148\u7ea7\u5929\u82b1\u677f\u7b56\u7565(Priority   ceilings):\u63a7\u5236\u8bbf\u95ee\u4e34\u754c\u8d44\u6e90\u7684\u4fe1\u53f7\u91cf\u7684\u4f18\u5148\u7ea7\u5929\u82b1\u677f\u3002", "\n      \u4f18\u5148\u7ea7\u7ee7\u627f\u7b56\u7565\u5bf9\u4efb\u52a1\u6267\u884c\u6d41\u7a0b\u7684\u5f71\u54cd\u76f8\u5bf9\u6559\u5c0f\uff0c\u56e0\u4e3a\u53ea\u6709\u5f53\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\u7533\u8bf7\u5df2\u88ab\u4f4e\u4f18\u5148\u7ea7\u4efb\u52a1\u5360\u6709\u7684\u4e34\u754c\u8d44\u6e90", "\u8fd9\u4e00\u4e8b\u5b9e\u53d1\u751f\u65f6\uff0c\u624d\u62ac\u5347\u4f4e\u4f18\u5148\u7ea7\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u3002", "\nvia\u7684\u8003\u9898\uff0d\uff0d\u7ee7\u7eed", "\n2007-06-29 11:09", "\n1.via\u7684\u8003\u9898\u4e00\u9053", "\n\u8fd9\u4e2a\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u601d\u60f3\u662f\u8fd9\u6837\u7684\uff1a", "\n\u4e3a\u4e86\u6d4b\u8bd532\u4f4d\u673a\u4e0a\u7684\u6d6e\u70b9\u6570\u7684\u8fd0\u7b97\u7cbe\u5ea6\uff0c\u4f5c\u5982\u4e0b\u8003\u8651\uff1a", "\n\u5f531.5 == 1\u65f6(\u4e8c\u8fdb\u52361.1==1)\u7cbe\u5ea6\u4e3a1\u4e2a\u5c0f\u6570\u4f4d", "\n\u5f531.25 == 1\u65f6\uff08\u4e8c\u8fdb\u52361.01==1)\u7cbe\u5ea6\u4e3a2\u4e2a\u5c0f\u6570\u4f4d", "\n\u7ee7\u7eed\u5224\u65ad\u6d4b\u8bd5\uff0c\u76f4\u5230\u4e24\u8005\u76f8\u7b49\uff0c\u4ece\u800c\u5f97\u5230\u7cbe\u5ea6\u3002", "\n\u6240\u4ee5\u7a0b\u5e8f\u4ee3\u7801\u5982\u4e0b\uff1a", "\nint main()", "\n{ int nCount;", "\n   float number1,number2;", "\n   nCount = 0;", "\n   number1 = 1.0;", "\n   number2 = 1.0", "\n   while( number1 + number2 != number1 ){", "\n          nCount++;", "\n          number2 /= 2.0;", "\n    }", "\n    printf( \u201c%d bits accruacy.\\n\u201d, nCount );", "\n}", "\n\u95ee\u9898\u662f\uff0c\u7ed3\u679c\u4e3a\u591a\u5c11\uff1f", "\n\u7ecf\u6d4b\u8bd5\u5f9764\u6216\u800553\u6216\u800524(\u7a0d\u52a0\u6539\u52a8)\u3002\u3002\u3002", "\n\u5f9753\u548c24\u5df2\u57fa\u672c\u5f97\u51fa\u7b54\u6848\uff0c\u4e3b\u8981\u662fieee 754\u6807\u51c6\u4e2d\u89c4\u5b9a\u5355\u53cc\u7cbe\u5ea6\u6570\u5b57\u7684\u5e95\u6570\u6307\u6570\u7b26\u53f7\u4f4d\u6240\u7f6e\u3002\u3002\u300264\u7684\u76ee\u524d\u8fd8\u6ca1\u6709\u5f97\u51fa\u7ed3\u8bba\u3002\u3002\u3002", "\n2.\u6539\u9519\u9898", "\nvoid mymul(double *p)", "\n{", "\n         *p *= 2.0;", "\n}", "\nint main(int argc, char *argv[])", "\n{", "\n         float f   = 6.0;", "\n         mymul((double *) &f);", "\n         printf(\u201cnow f = %f\\n\u201d, f);", "\n         return 0;", "\n}", "\n\u76f4\u63a5\u8fd0\u884c\uff0c\u7ed3\u679c\u4e3a6.00000", "\n\u8fd9\u4e2a\u9898\u76ee\u5f88\u7b80\u5355\uff0c\u53ef\u4ee5\u6709\u5f88\u591a\u79cd\u6539\u6cd5\uff0c\u5982\uff1aa.\u628afloat f=6.0;\u6539\u4e3adouble f=6.0;\u775b\u9762\u7684mymul\u53e5\u4e0d\u8981\u5f3a\u5236\u7c7b\u578b\u8f6c\u5316 b.\u628a\u6240\u6709\u7684\u6570\u90fd\u5f53\u6210float\u578b\u6765\u5904\u7406\u7b49\u7b49", "\n\u4f46\u5f80\u7ec6\u7684\u65b9\u9762\u60f3\uff0cfloat\u578b\u9ed8\u8ba44\u5b57\u8282\uff0cdouble\u578b\u9ed8\u8ba48\u5b57\u8282\uff0c\u867d\u7136\u5728vc6\u4e0b\u80fd\u52c9\u5f3a\u8fd0\u884c\uff08\u8fd0\u884c\u65f6\u62a5\u51fa\u8c03\u8bd5\u7a97\u53e3\uff09\uff0c\u4f46\u5355\u6b65\u8ddf\u8e2a\u53d1\u73b0\u5728mymul\uff08\uff09\u4e2d\u5e76\u6ca1\u6709\u5f97\u5230\u6b63\u786e\u6267\u884c\uff0c\u800c\u662f\uff1aAccess Violation,\u8fd9\u4e2a\u9519\u8bef\u5e38\u5e38\u5728\u8ba1\u7b97\u673a\u7528\u6237\u8fd0\u884c\u7684\u7a0b\u5e8f\u8bd5\u56fe\u5b58\u53d6\u672a\u88ab\u6307\u5b9a\u4f7f\u7528\u7684\u5b58\u50a8\u533a\u65f6\u9047\u5230\u4e2d\uff0c\u53ef\u89c1mymyl()\u8fd9\u4e2a\u51fd\u6570\u5e76\u6ca1\u6709\u5f97\u5230\u6b63\u786e\u7684\u6267\u884c\u3002\u3002\u3002\u540c\u6837\uff0c\u7528gcc\u6765\u76f4\u63a5\u7f16\u8bd1\u4e0a\u8ff0\u7a0b\u5e8f\uff0c\u867d\u7136\u6ca1\u6709\u62a5\u9519\uff0c\u4f46\u7ed3\u679c\u4ecd\u7136\u4e3a6.00000,\u53ef\u80fdgcc\u4e5f\u662f\u5728\u6267\u884cmymul()\u65f6\u6ca1\u6709\u6b63\u786e\u6267\u884c(\u4e0d\u8fc7\u6211\u6ca1\u62ffgdb\u6765\u8ddf\u8e2a\u770b)", "\n\u4ee5\u4e0b\u5185\u5bb9\u662f\u8865\u5145\uff0c\u4e3b\u8981\u662f\u4e00\u4e9b\u57fa\u7840\u7684\u77e5\u8bc6", "\n3.\u4e8c\u7ef4\u6570\u7ec4\u7a7a\u95f4\u7684\u52a8\u6001\u7533\u8bf7", "\n   a.\u7b80\u5355\u7684\uff0c\u5df2\u7ecf\u6709\u4e00\u7ef4\uff0c\u5982", "\nchar (*c)[5];", "\nc=new char[n][5];//n\u4e3a\u5df2\u5b9a\u4e49\u7684\u884c\u6570", "\nb.\u4e8c\u7ef4\u7684", "\nint **p;", "\np=new int*[m_row];//\u521b\u5efa\u884c\u6307\u9488", "\nfor(int i=0;i", "\n    p[i]=new int[m_cols];", "\n\u5199\u5230\u67d0\u4e00\u4e2a\u51fd\u6570\u4e2d\uff1a", "\nvoid getmemory(int ** &p,int m_row,int m_cols)", "\n{", "\n     p=new int*[m_row];//\u521b\u5efa\u884c\u6307\u9488", "\nfor(int i=0;i", "\n    p[i]=new int[m_cols];", "\n}", "\n\u91ca\u653e\u7a7a\u95f4:", "\nvoid deletememory(int **&p,int m_row)", "\n{", "\n   //\u91ca\u653e\u6bcf\u4e00\u884c\u6240\u5206\u914d\u7684\u7a7a\u95f4", "\n    for(int i=0;i", "\n       delete [] x[i];", "\n//\u91ca\u653e\u884c\u6307\u9488", "\n    delete [] x;", "\n     x=0;", "\n}", "\u5d4c\u5165\u5f0f\u5f00\u53d1\u2014C\u8bed\u8a00\u9762\u8bd5\u9898\u6536\u85cf", "\n\u9884\u5904\u7406\u5668\uff08Preprocessor\uff09", "1. \u7528\u9884\u5904\u7406\u6307\u4ee4#define \u58f0\u660e\u4e00\u4e2a\u5e38\u6570\uff0c\u7528\u4ee5\u8868\u660e1\u5e74\u4e2d\u6709\u591a\u5c11\u79d2\uff08\u5ffd\u7565\u95f0\u5e74\u95ee\u9898\uff09", "\n#define SECONDS_PER_YEAR (60 * 60 * 24 * 365)UL", "\n\u6211\u5728\u8fd9\u60f3\u770b\u5230\u51e0\u4ef6\u4e8b\u60c5\uff1a", "\n1). #define \u8bed\u6cd5\u7684\u57fa\u672c\u77e5\u8bc6\uff08\u4f8b\u5982\uff1a\u4e0d\u80fd\u4ee5\u5206\u53f7\u7ed3\u675f\uff0c\u62ec\u53f7\u7684\u4f7f\u7528\uff0c\u7b49\u7b49\uff09", "\n2). \u61c2\u5f97\u9884\u5904\u7406\u5668\u5c06\u4e3a\u4f60\u8ba1\u7b97\u5e38\u6570\u8868\u8fbe\u5f0f\u7684\u503c\uff0c\u56e0\u6b64\uff0c\u76f4\u63a5\u5199\u51fa\u4f60\u662f\u5982\u4f55\u8ba1\u7b97\u4e00\u5e74\u4e2d\u6709\u591a\u5c11\u79d2\u800c\u4e0d\u662f\u8ba1\u7b97\u51fa\u5b9e\u9645\u7684\u503c\uff0c\u662f\u66f4\u6e05\u6670\u800c\u6ca1\u6709\u4ee3\u4ef7\u7684\u3002", "\n3). \u610f\u8bc6\u5230\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u5c06\u4f7f\u4e00\u4e2a16\u4f4d\u673a\u7684\u6574\u578b\u6570\u6ea2\u51fa-\u56e0\u6b64\u8981\u7528\u5230\u957f\u6574\u578b\u7b26\u53f7L,\u544a\u8bc9\u7f16\u8bd1\u5668\u8fd9\u4e2a\u5e38\u6570\u662f\u7684\u957f\u6574\u578b\u6570\u3002", "\n4). \u5982\u679c\u4f60\u5728\u4f60\u7684\u8868\u8fbe\u5f0f\u4e2d\u7528\u5230UL\uff08\u8868\u793a\u65e0\u7b26\u53f7\u957f\u6574\u578b\uff09\uff0c\u90a3\u4e48\u4f60\u6709\u4e86\u4e00\u4e2a\u597d\u7684\u8d77\u70b9\u3002\u8bb0\u4f4f\uff0c\u7b2c\u4e00\u5370\u8c61\u5f88\u91cd\u8981\u3002", "2. \u5199\u4e00\u4e2a\u201c\u6807\u51c6\u201d\u5b8fMIN\uff0c\u8fd9\u4e2a\u5b8f\u8f93\u5165\u4e24\u4e2a\u53c2\u6570\u5e76\u8fd4\u56de\u8f83\u5c0f\u7684\u4e00\u4e2a\u3002", "\n#define MIN(A,B) ((A) \n", "\u8fd9\u4e2a\u6d4b\u8bd5\u662f\u4e3a\u4e0b\u9762\u7684\u76ee\u7684\u800c\u8bbe\u7684\uff1a", "1). \u6807\u8bc6#define\u5728\u5b8f\u4e2d\u5e94\u7528\u7684\u57fa\u672c\u77e5\u8bc6\u3002\u8fd9\u662f\u5f88\u91cd\u8981\u7684\uff0c\u56e0\u4e3a\u76f4\u5230\u5d4c\u5165(inline)\u64cd\u4f5c\u7b26\u53d8\u4e3a\u6807\u51c6C\u7684\u4e00\u90e8\u5206\uff0c\u5b8f\u662f\u65b9\u4fbf\u4ea7\u751f\u5d4c\u5165\u4ee3\u7801\u7684\u552f\u4e00\u65b9\u6cd5\uff0c\u5bf9\u4e8e\u5d4c\u5165\u5f0f\u7cfb\u7edf\u6765\u8bf4\uff0c\u4e3a\u4e86\u80fd\u8fbe\u5230\u8981\u6c42\u7684\u6027\u80fd\uff0c\u5d4c\u5165\u4ee3\u7801\u7ecf\u5e38\u662f\u5fc5\u987b\u7684\u65b9\u6cd5\u3002", "\n2). \u4e09\u91cd\u6761\u4ef6\u64cd\u4f5c\u7b26\u7684\u77e5\u8bc6\u3002\u8fd9\u4e2a\u64cd\u4f5c\u7b26\u5b58\u5728C\u8bed\u8a00\u4e2d\u7684\u539f\u56e0\u662f\u5b83\u4f7f\u5f97\u7f16\u8bd1\u5668\u80fd\u4ea7\u751f\u6bd4if-then-else\u66f4\u4f18\u5316\u7684\u4ee3\u7801\uff0c\u4e86\u89e3\u8fd9\u4e2a\u7528\u6cd5\u662f\u5f88\u91cd\u8981\u7684\u3002", "\n3). \u61c2\u5f97\u5728\u5b8f\u4e2d\u5c0f\u5fc3\u5730\u628a\u53c2\u6570\u7528\u62ec\u53f7\u62ec\u8d77\u6765", "\n4). \u6211\u4e5f\u7528\u8fd9\u4e2a\u95ee\u9898\u5f00\u59cb\u8ba8\u8bba\u5b8f\u7684\u526f\u4f5c\u7528\uff0c\u4f8b\u5982\uff1a\u5f53\u4f60\u5199\u4e0b\u9762\u7684\u4ee3\u7801\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\u4e8b\uff1f", "\nleast = MIN(*p++, b); ", "3. \u9884\u5904\u7406\u5668\u6807\u8bc6#error\u7684\u76ee\u7684\u662f\u4ec0\u4e48\uff1f", "\u5982\u679c\u4f60\u4e0d\u77e5\u9053\u7b54\u6848\uff0c\u8bf7\u770b\u53c2\u8003\u6587\u732e1\u3002\u8fd9\u95ee\u9898\u5bf9\u533a\u5206\u4e00\u4e2a\u6b63\u5e38\u7684\u4f19\u8ba1\u548c\u4e00\u4e2a\u4e66\u5446\u5b50\u662f\u5f88\u6709\u7528\u7684\u3002\u53ea\u6709\u4e66\u5446\u5b50\u624d\u4f1a\u8bfbC\u8bed\u8a00\u8bfe\u672c\u7684\u9644\u5f55\u53bb\u627e\u51fa\u8c61\u8fd9\u79cd", "\n\u95ee\u9898\u7684\u7b54\u6848\u3002\u5f53\u7136\u5982\u679c\u4f60\u4e0d\u662f\u5728\u627e\u4e00\u4e2a\u4e66\u5446\u5b50\uff0c\u90a3\u4e48\u5e94\u8bd5\u8005\u6700\u597d\u5e0c\u671b\u81ea\u5df1\u4e0d\u8981\u77e5\u9053\u7b54\u6848\u3002", "\u6b7b\u5faa\u73af\uff08Infinite loops\uff09", "4. \u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\u7ecf\u5e38\u8981\u7528\u5230\u65e0\u9650\u5faa\u73af\uff0c\u4f60\u600e\u4e48\u6837\u7528C\u7f16\u5199\u6b7b\u5faa\u73af\u5462\uff1f", "\u8fd9\u4e2a\u95ee\u9898\u7528\u51e0\u4e2a\u89e3\u51b3\u65b9\u6848\u3002\u6211\u9996\u9009\u7684\u65b9\u6848\u662f\uff1a", "\nwhile(1) { }", "\n\u4e00\u4e9b\u7a0b\u5e8f\u5458\u66f4\u559c\u6b22\u5982\u4e0b\u65b9\u6848\uff1a", "\nfor(;;) { }", "\n\u8fd9\u4e2a\u5b9e\u73b0\u65b9\u5f0f\u8ba9\u6211\u4e3a\u96be\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u8bed\u6cd5\u6ca1\u6709\u786e\u5207\u8868\u8fbe\u5230\u5e95\u600e\u4e48\u56de\u4e8b\u3002\u5982\u679c\u4e00\u4e2a\u5e94\u8bd5\u8005\u7ed9\u51fa\u8fd9\u4e2a\u4f5c\u4e3a\u65b9\u6848\uff0c\u6211\u5c06\u7528\u8fd9\u4e2a\u4f5c\u4e3a\u4e00\u4e2a\u673a\u4f1a\u53bb\u63a2\u7a76\u4ed6\u4eec\u8fd9\u6837\u505a\u7684", "\n\u57fa\u672c\u539f\u7406\u3002\u5982\u679c\u4ed6\u4eec\u7684\u57fa\u672c\u7b54\u6848\u662f\uff1a\u201c\u6211\u88ab\u6559\u7740\u8fd9\u6837\u505a\uff0c\u4f46\u4ece\u6ca1\u6709\u60f3\u5230\u8fc7\u4e3a\u4ec0\u4e48\u3002\u201d\u8fd9\u4f1a\u7ed9\u6211\u7559\u4e0b\u4e00\u4e2a\u574f\u5370\u8c61\u3002", "\n\u7b2c\u4e09\u4e2a\u65b9\u6848\u662f\u7528 goto", "\nLoop:", "\n...", "\ngoto Loop;", "\n\u5e94\u8bd5\u8005\u5982\u7ed9\u51fa\u4e0a\u9762\u7684\u65b9\u6848\uff0c\u8fd9\u8bf4\u660e\u6216\u8005\u4ed6\u662f\u4e00\u4e2a\u6c47\u7f16\u8bed\u8a00\u7a0b\u5e8f\u5458\uff08\u8fd9\u4e5f\u8bb8\u662f\u597d\u4e8b\uff09\u6216\u8005\u4ed6\u662f\u4e00\u4e2a\u60f3\u8fdb\u5165\u65b0\u9886\u57df\u7684BASIC/FORTRAN\u7a0b\u5e8f\u5458\u3002", "\u6570\u636e\u58f0\u660e\uff08Data declarations\uff09", "5. \u7528\u53d8\u91cfa\u7ed9\u51fa\u4e0b\u9762\u7684\u5b9a\u4e49", "\na) \u4e00\u4e2a\u6574\u578b\u6570\uff08An integer\uff09", "\nb) \u4e00\u4e2a\u6307\u5411\u6574\u578b\u6570\u7684\u6307\u9488\uff08A pointer to an integer\uff09", "\nc) \u4e00\u4e2a\u6307\u5411\u6307\u9488\u7684\u7684\u6307\u9488\uff0c\u5b83\u6307\u5411\u7684\u6307\u9488\u662f\u6307\u5411\u4e00\u4e2a\u6574\u578b\u6570\uff08A pointer to a pointer to an integer\uff09", "\nd) \u4e00\u4e2a\u670910\u4e2a\u6574\u578b\u6570\u7684\u6570\u7ec4\uff08An array of 10 integers\uff09", "\ne) \u4e00\u4e2a\u670910\u4e2a\u6307\u9488\u7684\u6570\u7ec4\uff0c\u8be5\u6307\u9488\u662f\u6307\u5411\u4e00\u4e2a\u6574\u578b\u6570\u7684\uff08An array of 10 pointers to integers\uff09", "\nf) \u4e00\u4e2a\u6307\u5411\u670910\u4e2a\u6574\u578b\u6570\u6570\u7ec4\u7684\u6307\u9488\uff08A pointer to an array of 10 integers\uff09", "\ng) \u4e00\u4e2a\u6307\u5411\u51fd\u6570\u7684\u6307\u9488\uff0c\u8be5\u51fd\u6570\u6709\u4e00\u4e2a\u6574\u578b\u53c2\u6570\u5e76\u8fd4\u56de\u4e00\u4e2a\u6574\u578b\u6570\uff08A pointer to a function that takes an integer as an argument and returns an integer\uff09", "\nh) \u4e00\u4e2a\u670910\u4e2a\u6307\u9488\u7684\u6570\u7ec4\uff0c\u8be5\u6307\u9488\u6307\u5411\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u6709\u4e00\u4e2a\u6574\u578b\u53c2\u6570\u5e76\u8fd4\u56de\u4e00\u4e2a\u6574\u578b\u6570\uff08 An array of ten pointers to functions that take an integer argument and return an integer \uff09", "\u7b54\u6848\u662f\uff1a", "\na) int a; // An integer", "\nb) int *a; // A pointer to an integer", "\nc) int **a; // A pointer to a pointer to an integer", "\nd) int a[10]; // An array of 10 integers", "\ne) int *a[10]; // An array of 10 pointers to integers", "\nf) int (*a)[10]; // A pointer to an array of 10 integers", "\ng) int (*a)(int); // A pointer to a function a that takes an integer argument and returns an integer", "\nh) int (*a[10])(int); // An array of 10 pointers to functions that take an integer argument and return an integer ", "\u4eba\u4eec\u7ecf\u5e38\u58f0\u79f0\u8fd9\u91cc\u6709\u51e0\u4e2a\u95ee\u9898\u662f\u90a3\u79cd\u8981\u7ffb\u4e00\u4e0b\u4e66\u624d\u80fd\u56de\u7b54\u7684\u95ee\u9898\uff0c\u6211\u540c\u610f\u8fd9\u79cd\u8bf4\u6cd5\u3002\u5f53\u6211\u5199\u8fd9\u7bc7\u6587\u7ae0\u65f6\uff0c\u4e3a\u4e86\u786e\u5b9a\u8bed\u6cd5\u7684\u6b63\u786e\u6027\uff0c\u6211\u7684\u786e\u67e5\u4e86\u4e00\u4e0b\u4e66\u3002", "\n\u4f46\u662f\u5f53\u6211\u88ab\u9762\u8bd5\u7684\u65f6\u5019\uff0c\u6211\u671f\u671b\u88ab\u95ee\u5230\u8fd9\u4e2a\u95ee\u9898\uff08\u6216\u8005\u76f8\u8fd1\u7684\u95ee\u9898\uff09\u3002\u56e0\u4e3a\u5728\u88ab\u9762\u8bd5\u7684\u8fd9\u6bb5\u65f6\u95f4\u91cc\uff0c\u6211\u786e\u5b9a\u6211\u77e5\u9053\u8fd9\u4e2a\u95ee\u9898\u7684\u7b54\u6848\u3002\u5e94\u8bd5\u8005\u5982\u679c\u4e0d\u77e5\u9053", "\n\u6240\u6709\u7684\u7b54\u6848\uff08\u6216\u81f3\u5c11\u5927\u90e8\u5206\u7b54\u6848\uff09\uff0c\u90a3\u4e48\u4e5f\u5c31\u6ca1\u6709\u4e3a\u8fd9\u6b21\u9762\u8bd5\u505a\u51c6\u5907\uff0c\u5982\u679c\u8be5\u9762\u8bd5\u8005\u6ca1\u6709\u4e3a\u8fd9\u6b21\u9762\u8bd5\u505a\u51c6\u5907\uff0c\u90a3\u4e48\u4ed6\u53c8\u80fd\u4e3a\u4ec0\u4e48\u51fa\u51c6\u5907\u5462\uff1f", "Static ", "6. \u5173\u952e\u5b57static\u7684\u4f5c\u7528\u662f\u4ec0\u4e48\uff1f", "\u8fd9\u4e2a\u7b80\u5355\u7684\u95ee\u9898\u5f88\u5c11\u6709\u4eba\u80fd\u56de\u7b54\u5b8c\u5168\u3002\u5728C\u8bed\u8a00\u4e2d\uff0c\u5173\u952e\u5b57static\u6709\u4e09\u4e2a\u660e\u663e\u7684\u4f5c\u7528\uff1a", "\n1). \u5728\u51fd\u6570\u4f53\uff0c\u4e00\u4e2a\u88ab\u58f0\u660e\u4e3a\u9759\u6001\u7684\u53d8\u91cf\u5728\u8fd9\u4e00\u51fd\u6570\u88ab\u8c03\u7528\u8fc7\u7a0b\u4e2d\u7ef4\u6301\u5176\u503c\u4e0d\u53d8\u3002", "\n2). \u5728\u6a21\u5757\u5185\uff08\u4f46\u5728\u51fd\u6570\u4f53\u5916\uff09\uff0c\u4e00\u4e2a\u88ab\u58f0\u660e\u4e3a\u9759\u6001\u7684\u53d8\u91cf\u53ef\u4ee5\u88ab\u6a21\u5757\u5185\u6240\u7528\u51fd\u6570\u8bbf\u95ee\uff0c\u4f46\u4e0d\u80fd\u88ab\u6a21\u5757\u5916\u5176\u5b83\u51fd\u6570\u8bbf\u95ee\u3002\u5b83\u662f\u4e00\u4e2a\u672c\u5730\u7684\u5168\u5c40\u53d8\u91cf\u3002", "\n3). \u5728\u6a21\u5757\u5185\uff0c\u4e00\u4e2a\u88ab\u58f0\u660e\u4e3a\u9759\u6001\u7684\u51fd\u6570\u53ea\u53ef\u88ab\u8fd9\u4e00\u6a21\u5757\u5185\u7684\u5176\u5b83\u51fd\u6570\u8c03\u7528\u3002\u90a3\u5c31\u662f\uff0c\u8fd9\u4e2a\u51fd\u6570\u88ab\u9650\u5236\u5728\u58f0\u660e\u5b83\u7684\u6a21\u5757\u7684\u672c\u5730\u8303\u56f4\u5185\u4f7f\u7528\u3002", "\n\u5927\u591a\u6570\u5e94\u8bd5\u8005\u80fd\u6b63\u786e\u56de\u7b54\u7b2c\u4e00\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u80fd\u6b63\u786e\u56de\u7b54\u7b2c\u4e8c\u90e8\u5206\uff0c\u540c\u662f\u5f88\u5c11\u7684\u4eba\u80fd\u61c2\u5f97\u7b2c\u4e09\u90e8\u5206\u3002\u8fd9\u662f\u4e00\u4e2a\u5e94\u8bd5\u8005\u7684\u4e25\u91cd\u7684\u7f3a\u70b9\uff0c\u56e0\u4e3a\u4ed6\u663e\u7136\u4e0d\u61c2\u5f97\u672c\u5730\u5316\u6570\u636e\u548c\u4ee3\u7801\u8303\u56f4\u7684\u597d\u5904\u548c\u91cd\u8981\u6027\u3002", "Const ", "7\uff0e\u5173\u952e\u5b57const\u662f\u4ec0\u4e48\u542b\u610f\uff1f", "\n\u6211\u53ea\u8981\u4e00\u542c\u5230\u88ab\u9762\u8bd5\u8005\u8bf4\uff1a\u201cconst\u610f\u5473\u7740\u5e38\u6570\u201d\uff0c\u6211\u5c31\u77e5\u9053\u6211\u6b63\u5728\u548c\u4e00\u4e2a\u4e1a\u4f59\u8005\u6253\u4ea4\u9053\u3002\u53bb\u5e74Dan Saks\u5df2\u7ecf\u5728\u4ed6\u7684\u6587\u7ae0\u91cc\u5b8c\u5168\u6982\u62ec\u4e86const\u7684\u6240\u6709\u7528\u6cd5\uff0c\u56e0\u6b64ESP(\u8bd1\u8005\uff1aEmbedded Systems Programming)\u7684\u6bcf\u4e00\u4f4d\u8bfb\u8005\u5e94\u8be5\u975e\u5e38\u719f\u6089const\u80fd\u505a\u4ec0\u4e48\u548c\u4e0d\u80fd\u505a\u4ec0\u4e48.", "\n\u5982\u679c\u4f60\u4ece\u6ca1\u6709\u8bfb\u5230\u90a3\u7bc7\u6587\u7ae0\uff0c\u53ea\u8981\u80fd\u8bf4\u51faconst\u610f\u5473\u7740\u201c\u53ea\u8bfb\u201d\u5c31\u53ef\u4ee5\u4e86\u3002\u5c3d\u7ba1\u8fd9\u4e2a\u7b54\u6848\u4e0d\u662f\u5b8c\u5168\u7684\u7b54\u6848\uff0c\u4f46\u6211\u63a5\u53d7\u5b83\u4f5c\u4e3a\u4e00\u4e2a\u6b63\u786e\u7684\u7b54\u6848\u3002\uff08\u5982\u679c\u4f60\u60f3\u77e5\u9053\u66f4\u8be6\u7ec6\u7684\u7b54\u6848\uff0c\u4ed4\u7ec6\u8bfb\u4e00\u4e0bSaks\u7684\u6587\u7ae0\u5427\u3002\uff09\u5982\u679c\u5e94\u8bd5\u8005\u80fd\u6b63\u786e\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u5c06\u95ee\u4ed6\u4e00\u4e2a\u9644\u52a0\u7684\u95ee\u9898\uff1a\u4e0b\u9762\u7684\u58f0\u660e\u90fd\u662f\u4ec0\u4e48\u610f\u601d\uff1f", "const int a;", "\nint const a;", "\nconst int *a;", "\nint * const a;", "\nint const * a const; ", "\u524d\u4e24\u4e2a\u7684\u4f5c\u7528\u662f\u4e00\u6837\uff0ca\u662f\u4e00\u4e2a\u5e38\u6574\u578b\u6570\u3002\u7b2c\u4e09\u4e2a\u610f\u5473\u7740a\u662f\u4e00\u4e2a\u6307\u5411\u5e38\u6574\u578b\u6570\u7684\u6307\u9488\uff08\u4e5f\u5c31\u662f\uff0c\u6574\u578b\u6570\u662f\u4e0d\u53ef\u4fee\u6539\u7684\uff0c\u4f46\u6307\u9488\u53ef\u4ee5\uff09\u3002\u7b2c\u56db\u4e2a\u610f\u601da\u662f\u4e00\u4e2a\u6307\u5411\u6574\u578b\u6570\u7684\u5e38\u6307\u9488\uff08\u4e5f\u5c31\u662f\u8bf4\uff0c\u6307\u9488\u6307\u5411\u7684\u6574\u578b\u6570\u662f\u53ef\u4ee5\u4fee\u6539\u7684\uff0c\u4f46\u6307\u9488\u662f\u4e0d\u53ef\u4fee\u6539\u7684\uff09\u3002\u6700\u540e\u4e00\u4e2a\u610f\u5473\u7740a\u662f\u4e00\u4e2a\u6307\u5411\u5e38\u6574\u578b\u6570\u7684\u5e38\u6307\u9488\uff08\u4e5f\u5c31\u662f\u8bf4\uff0c\u6307\u9488\u6307\u5411\u7684\u6574\u578b\u6570\u662f\u4e0d\u53ef\u4fee\u6539\u7684\uff0c\u540c\u65f6\u6307\u9488\u4e5f\u662f\u4e0d\u53ef\u4fee\u6539\u7684\uff09\u3002\u5982\u679c\u5e94\u8bd5\u8005\u80fd\u6b63\u786e\u56de\u7b54\u8fd9\u4e9b\u95ee\u9898\uff0c\u90a3\u4e48\u4ed6\u5c31\u7ed9\u6211\u7559\u4e0b\u4e86\u4e00\u4e2a\u597d\u5370\u8c61\u3002\u987a\u5e26\u63d0\u4e00\u53e5\uff0c\u4e5f\u8bb8\u4f60\u53ef\u80fd\u4f1a\u95ee\uff0c\u5373\u4f7f\u4e0d\u7528\u5173\u952e\u5b57 const\uff0c\u4e5f\u8fd8\u662f\u80fd\u5f88\u5bb9\u6613\u5199\u51fa\u529f\u80fd\u6b63\u786e\u7684\u7a0b\u5e8f\uff0c\u90a3\u4e48\u6211\u4e3a\u4ec0\u4e48\u8fd8\u8981\u5982\u6b64\u770b\u91cd\u5173\u952e\u5b57const\u5462\uff1f\u6211\u4e5f\u5982\u4e0b\u7684\u51e0\u4e0b\u7406\u7531\uff1a", "\n1). \u5173\u952e\u5b57const\u7684\u4f5c\u7528\u662f\u4e3a\u7ed9\u8bfb\u4f60\u4ee3\u7801\u7684\u4eba\u4f20\u8fbe\u975e\u5e38\u6709\u7528\u7684\u4fe1\u606f\uff0c\u5b9e\u9645\u4e0a\uff0c\u58f0\u660e\u4e00\u4e2a\u53c2\u6570\u4e3a\u5e38\u91cf\u662f\u4e3a\u4e86\u544a\u8bc9\u4e86\u7528\u6237\u8fd9\u4e2a\u53c2\u6570\u7684\u5e94\u7528\u76ee\u7684\u3002\u5982\u679c\u4f60\u66fe\u82b1\u5f88\u591a\u65f6\u95f4\u6e05\u7406\u5176\u5b83\u4eba\u7559\u4e0b\u7684\u5783\u573e\uff0c\u4f60\u5c31\u4f1a\u5f88\u5feb\u5b66\u4f1a\u611f\u8c22\u8fd9\u70b9\u591a\u4f59\u7684\u4fe1\u606f\u3002\uff08\u5f53\u7136\uff0c\u61c2\u5f97\u7528const\u7684\u7a0b\u5e8f\u5458\u5f88\u5c11\u4f1a\u7559\u4e0b\u7684\u5783\u573e\u8ba9\u522b\u4eba\u6765\u6e05\u7406\u7684\u3002\uff09", "\n2). \u901a\u8fc7\u7ed9\u4f18\u5316\u5668\u4e00\u4e9b\u9644\u52a0\u7684\u4fe1\u606f\uff0c\u4f7f\u7528\u5173\u952e\u5b57const\u4e5f\u8bb8\u80fd\u4ea7\u751f\u66f4\u7d27\u51d1\u7684\u4ee3\u7801\u3002", "\n3). \u5408\u7406\u5730\u4f7f\u7528\u5173\u952e\u5b57const\u53ef\u4ee5\u4f7f\u7f16\u8bd1\u5668\u5f88\u81ea\u7136\u5730\u4fdd\u62a4\u90a3\u4e9b\u4e0d\u5e0c\u671b\u88ab\u6539\u53d8\u7684\u53c2\u6570\uff0c\u9632\u6b62\u5176\u88ab\u65e0\u610f\u7684\u4ee3\u7801\u4fee\u6539\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11bug\u7684\u51fa\u73b0\u3002", "Volatile ", "8. \u5173\u952e\u5b57volatile\u6709\u4ec0\u4e48\u542b\u610f\u5e76\u7ed9\u51fa\u4e09\u4e2a\u4e0d\u540c\u7684\u4f8b\u5b50\u3002", "\u4e00\u4e2a\u5b9a\u4e49\u4e3avolatile\u7684\u53d8\u91cf\u662f\u8bf4\u8fd9\u53d8\u91cf\u53ef\u80fd\u4f1a\u88ab\u610f\u60f3\u4e0d\u5230\u5730\u6539\u53d8\uff0c\u8fd9\u6837\uff0c\u7f16\u8bd1\u5668\u5c31\u4e0d\u4f1a\u53bb\u5047\u8bbe\u8fd9\u4e2a\u53d8\u91cf\u7684\u503c\u4e86\u3002\u7cbe\u786e\u5730\u8bf4\u5c31\u662f\uff0c\u4f18\u5316\u5668\u5728\u7528\u5230\u8fd9\u4e2a\u53d8\u91cf\u65f6\u5fc5\u987b\u6bcf\u6b21\u90fd\u5c0f\u5fc3\u5730\u91cd\u65b0\u8bfb\u53d6\u8fd9\u4e2a\u53d8\u91cf\u7684\u503c\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u4fdd\u5b58\u5728\u5bc4\u5b58\u5668\u91cc\u7684\u5907\u4efd\u3002\u4e0b\u9762\u662fvolatile\u53d8\u91cf\u7684\u51e0\u4e2a\u4f8b\u5b50\uff1a", "\n1). \u5e76\u884c\u8bbe\u5907\u7684\u786c\u4ef6\u5bc4\u5b58\u5668\uff08\u5982\uff1a\u72b6\u6001\u5bc4\u5b58\u5668\uff09", "\n2). \u4e00\u4e2a\u4e2d\u65ad\u670d\u52a1\u5b50\u7a0b\u5e8f\u4e2d\u4f1a\u8bbf\u95ee\u5230\u7684\u975e\u81ea\u52a8\u53d8\u91cf(Non-automatic variables)", "\n3). \u591a\u7ebf\u7a0b\u5e94\u7528\u4e2d\u88ab\u51e0\u4e2a\u4efb\u52a1\u5171\u4eab\u7684\u53d8\u91cf", "\n\u56de\u7b54\u4e0d\u51fa\u8fd9\u4e2a\u95ee\u9898\u7684\u4eba\u662f\u4e0d\u4f1a\u88ab\u96c7\u4f63\u7684\u3002\u6211\u8ba4\u4e3a\u8fd9\u662f\u533a\u5206C\u7a0b\u5e8f\u5458\u548c\u5d4c\u5165\u5f0f\u7cfb\u7edf\u7a0b\u5e8f\u5458\u7684\u6700\u57fa\u672c\u7684\u95ee\u9898\u3002\u5d4c\u5165\u5f0f\u7cfb\u7edf\u7a0b\u5e8f\u5458\u7ecf\u5e38\u540c\u786c\u4ef6\u3001\u4e2d\u65ad\u3001RTOS\u7b49\u7b49\u6253\u4ea4\u9053\uff0c\u6240\u7528\u8fd9\u4e9b\u90fd\u8981\u6c42volatile\u53d8\u91cf\u3002\u4e0d\u61c2\u5f97volatile\u5185\u5bb9\u5c06\u4f1a\u5e26\u6765\u707e\u96be\u3002", "\n\u5047\u8bbe\u88ab\u9762\u8bd5\u8005\u6b63\u786e\u5730\u56de\u7b54\u4e86\u8fd9\u662f\u95ee\u9898\uff08\u55ef\uff0c\u6000\u7591\u8fd9\u5426\u4f1a\u662f\u8fd9\u6837\uff09\uff0c\u6211\u5c06\u7a0d\u5fae\u6df1\u7a76\u4e00\u4e0b\uff0c\u770b\u4e00\u4e0b\u8fd9\u5bb6\u4f19\u662f\u4e0d\u662f\u76f4\u6b63\u61c2\u5f97volatile\u5b8c\u5168\u7684\u91cd\u8981\u6027\u3002", "\n1). \u4e00\u4e2a\u53c2\u6570\u65e2\u53ef\u4ee5\u662fconst\u8fd8\u53ef\u4ee5\u662fvolatile\u5417\uff1f\u89e3\u91ca\u4e3a\u4ec0\u4e48\u3002", "\n2). \u4e00\u4e2a\u6307\u9488\u53ef\u4ee5\u662fvolatile \u5417\uff1f\u89e3\u91ca\u4e3a\u4ec0\u4e48\u3002", "\n3). \u4e0b\u9762\u7684\u51fd\u6570\u6709\u4ec0\u4e48\u9519\u8bef\uff1a", "\nint square(volatile int *ptr)", "\n{ return *ptr * *ptr;", "\n} \u4e0b\u9762\u662f\u7b54\u6848\uff1a", "\n1). \u662f\u7684\u3002\u4e00\u4e2a\u4f8b\u5b50\u662f\u53ea\u8bfb\u7684\u72b6\u6001\u5bc4\u5b58\u5668\u3002\u5b83\u662fvolatile\u56e0\u4e3a\u5b83\u53ef\u80fd\u88ab\u610f\u60f3\u4e0d\u5230\u5730\u6539\u53d8\u3002\u5b83\u662fconst\u56e0\u4e3a\u7a0b\u5e8f\u4e0d\u5e94\u8be5\u8bd5\u56fe\u53bb\u4fee\u6539\u5b83\u3002", "\n2). \u662f\u7684\u3002\u5c3d\u7ba1\u8fd9\u5e76\u4e0d\u5f88\u5e38\u89c1\u3002\u4e00\u4e2a\u4f8b\u5b50\u662f\u5f53\u4e00\u4e2a\u4e2d\u670d\u52a1\u5b50\u7a0b\u5e8f\u4fee\u8be5\u4e00\u4e2a\u6307\u5411\u4e00\u4e2abuffer\u7684\u6307\u9488\u65f6\u3002", "\n3). \u8fd9\u6bb5\u4ee3\u7801\u7684\u6709\u4e2a\u6076\u4f5c\u5267\u3002\u8fd9\u6bb5\u4ee3\u7801\u7684\u76ee\u7684\u662f\u7528\u6765\u8fd4\u6307\u9488*ptr\u6307\u5411\u503c\u7684\u5e73\u65b9\uff0c\u4f46\u662f\uff0c\u7531\u4e8e*ptr\u6307\u5411\u4e00\u4e2avolatile\u578b\u53c2\u6570\uff0c\u7f16\u8bd1\u5668\u5c06\u4ea7\u751f\u7c7b\u4f3c\u4e0b\u9762\u7684\u4ee3\u7801\uff1a", "\nint square(volatile int *ptr)", "\n{ int a,b;", "\na = *ptr;", "\nb = *ptr;", "\nreturn a * b;", "\n} \u7531\u4e8e*ptr\u7684\u503c\u53ef\u80fd\u88ab\u610f\u60f3\u4e0d\u5230\u5730\u8be5\u53d8\uff0c\u56e0\u6b64a\u548cb\u53ef\u80fd\u662f\u4e0d\u540c\u7684\u3002\u7ed3\u679c\uff0c\u8fd9\u6bb5\u4ee3\u7801\u53ef\u80fd\u8fd4\u4e0d\u662f\u4f60\u6240\u671f\u671b\u7684\u5e73\u65b9\u503c\uff01\u6b63\u786e\u7684\u4ee3\u7801\u5982\u4e0b\uff1a", "\nlong square(volatile int *ptr)", "\n{ int a;", "\na = *ptr;", "\nreturn a * a;", "\n} ", "\u4f4d\u64cd\u4f5c\uff08Bit manipulation\uff09", "9. \u5d4c\u5165\u5f0f\u7cfb\u7edf\u603b\u662f\u8981\u7528\u6237\u5bf9\u53d8\u91cf\u6216\u5bc4\u5b58\u5668\u8fdb\u884c\u4f4d\u64cd\u4f5c\u3002\u7ed9\u5b9a\u4e00\u4e2a\u6574\u578b\u53d8\u91cfa\uff0c\u5199\u4e24\u6bb5\u4ee3\u7801\uff0c\u7b2c\u4e00\u4e2a\u8bbe\u7f6ea\u7684bit 3\uff0c\u7b2c\u4e8c\u4e2a\u6e05\u9664a \u7684bit 3\u3002\u5728\u4ee5\u4e0a\u4e24\u4e2a\u64cd\u4f5c\u4e2d\uff0c\u8981\u4fdd\u6301\u5176\u5b83\u4f4d\u4e0d\u53d8\u3002", "\u5bf9\u8fd9\u4e2a\u95ee\u9898\u6709\u4e09\u79cd\u57fa\u672c\u7684\u53cd\u5e94", "\n1). \u4e0d\u77e5\u9053\u5982\u4f55\u4e0b\u624b\u3002\u8be5\u88ab\u9762\u8005\u4ece\u6ca1\u505a\u8fc7\u4efb\u4f55\u5d4c\u5165\u5f0f\u7cfb\u7edf\u7684\u5de5\u4f5c\u3002", "\n2). \u7528bit fields\u3002Bit fields\u662f\u88ab\u6254\u5230C\u8bed\u8a00\u6b7b\u89d2\u7684\u4e1c\u897f\uff0c\u5b83\u4fdd\u8bc1\u4f60\u7684\u4ee3\u7801\u5728\u4e0d\u540c\u7f16\u8bd1\u5668\u4e4b\u95f4\u662f\u4e0d\u53ef\u79fb\u690d\u7684\uff0c\u540c\u65f6\u4e5f\u4fdd\u8bc1\u4e86\u7684\u4f60\u7684\u4ee3\u7801\u662f\u4e0d\u53ef\u91cd\u7528\u7684\u3002\u6211\u6700\u8fd1\u4e0d\u5e78\u770b\u5230 Infineon\u4e3a\u5176\u8f83\u590d\u6742\u7684\u901a\u4fe1\u82af\u7247\u5199\u7684\u9a71\u52a8\u7a0b\u5e8f\uff0c\u5b83\u7528\u5230\u4e86bit fields\u56e0\u6b64\u5b8c\u5168\u5bf9\u6211\u65e0\u7528\uff0c\u56e0\u4e3a\u6211\u7684\u7f16\u8bd1\u5668\u7528\u5176\u5b83\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0bit fields\u7684\u3002\u4ece\u9053\u5fb7\u8bb2\uff1a\u6c38\u8fdc\u4e0d\u8981\u8ba9\u4e00\u4e2a\u975e\u5d4c\u5165\u5f0f\u7684\u5bb6\u4f19\u7c98\u5b9e\u9645\u786c\u4ef6\u7684\u8fb9\u3002", "\n3). \u7528 #defines \u548c bit masks \u64cd\u4f5c\u3002\u8fd9\u662f\u4e00\u4e2a\u6709\u6781\u9ad8\u53ef\u79fb\u690d\u6027\u7684\u65b9\u6cd5\uff0c\u662f\u5e94\u8be5\u88ab\u7528\u5230\u7684\u65b9\u6cd5\u3002\u6700\u4f73\u7684\u89e3\u51b3\u65b9\u6848\u5982\u4e0b\uff1a", "\n#define BIT3 (0x1\nstatic int a;", "\nvoid set_bit3(void)", "\n{ a |= BIT3;", "\n} void clear_bit3(void)", "\n{ a &= ~BIT3;", "\n} \u4e00\u4e9b\u4eba\u559c\u6b22\u4e3a\u8bbe\u7f6e\u548c\u6e05\u9664\u503c\u800c\u5b9a\u4e49\u4e00\u4e2a\u63a9\u7801\u540c\u65f6\u5b9a\u4e49\u4e00\u4e9b\u8bf4\u660e\u5e38\u6570\uff0c\u8fd9\u4e5f\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002\u6211\u5e0c\u671b\u770b\u5230\u51e0\u4e2a\u8981\u70b9\uff1a\u8bf4\u660e\u5e38\u6570\u3001|=\u548c&=~\u64cd\u4f5c\u3002", "10. \u5d4c\u5165\u5f0f\u7cfb\u7edf\u7ecf\u5e38\u5177\u6709\u8981\u6c42\u7a0b\u5e8f\u5458\u53bb\u8bbf\u95ee\u67d0\u7279\u5b9a\u7684\u5185\u5b58\u4f4d\u7f6e\u7684\u7279\u70b9\u3002\u5728\u67d0\u5de5\u7a0b\u4e2d\uff0c\u8981\u6c42\u8bbe\u7f6e\u4e00\u7edd\u5bf9\u5730\u5740\u4e3a0x67a9\u7684\u6574\u578b\u53d8\u91cf\u7684\u503c\u4e3a0xaa66\u3002\u7f16\u8bd1\u5668\u662f\u4e00\u4e2a\u7eaf\u7cb9\u7684ANSI\u7f16\u8bd1\u5668\u3002\u5199\u4ee3\u7801\u53bb\u5b8c\u6210\u8fd9\u4e00\u4efb\u52a1\u3002", "\u8fd9\u4e00\u95ee\u9898\u6d4b\u8bd5\u4f60\u662f\u5426\u77e5\u9053\u4e3a\u4e86\u8bbf\u95ee\u4e00\u7edd\u5bf9\u5730\u5740\u628a\u4e00\u4e2a\u6574\u578b\u6570\u5f3a\u5236\u8f6c\u6362\uff08typecast\uff09\u4e3a\u4e00\u6307\u9488\u662f\u5408\u6cd5\u7684\u3002\u8fd9\u4e00\u95ee\u9898\u7684\u5b9e\u73b0\u65b9\u5f0f\u968f\u7740\u4e2a\u4eba\u98ce\u683c\u4e0d\u540c\u800c\u4e0d\u540c\u3002\u5178\u578b\u7684\u7c7b\u4f3c\u4ee3\u7801\u5982\u4e0b\uff1a", "\nint *ptr;", "\nptr = (int *)0x67a9;", "\n*ptr = 0xaa55; ", "\u4e00\u4e2a\u8f83\u6666\u6da9\u7684\u65b9\u6cd5\u662f\uff1a", "\n*(int * const)(0x67a9) = 0xaa55; ", "\u5373\u4f7f\u4f60\u7684\u54c1\u5473\u66f4\u63a5\u8fd1\u7b2c\u4e8c\u79cd\u65b9\u6848\uff0c\u4f46\u6211\u5efa\u8bae\u4f60\u5728\u9762\u8bd5\u65f6\u4f7f\u7528\u7b2c\u4e00\u79cd\u65b9\u6848\u3002", "\u4e2d\u65ad\uff08Interrupts\uff09", "11. \u4e2d\u65ad\u662f\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\u91cd\u8981\u7684\u7ec4\u6210\u90e8\u5206\uff0c\u8fd9\u5bfc\u81f4\u4e86\u5f88\u591a\u7f16\u8bd1\u5f00\u53d1\u5546\u63d0\u4f9b\u4e00\u79cd\u6269\u5c55\u2014\u8ba9\u6807\u51c6C\u652f\u6301\u4e2d\u65ad\u3002\u5177\u4ee3\u8868\u4e8b\u5b9e\u662f\uff0c\u4ea7\u751f\u4e86\u4e00\u4e2a\u65b0\u7684\u5173\u952e\u5b57 __interrupt\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u5c31\u4f7f\u7528\u4e86__interrupt\u5173\u952e\u5b57\u53bb\u5b9a\u4e49\u4e86\u4e00\u4e2a\u4e2d\u65ad\u670d\u52a1\u5b50\u7a0b\u5e8f(ISR)\uff0c\u8bf7\u8bc4\u8bba\u4e00\u4e0b\u8fd9\u6bb5\u4ee3\u7801\u7684\u3002", "__interrupt double compute_area (double radius)", "\n{ double area = PI * radius * radius;", "\nprintf(\" Area = %f\", area);", "\nreturn area;", "\n} ", "\u8fd9\u4e2a\u51fd\u6570\u6709\u592a\u591a\u7684\u9519\u8bef\u4e86\uff0c\u4ee5\u81f3\u8ba9\u4eba\u4e0d\u77e5\u4ece\u4f55\u8bf4\u8d77\u4e86\uff1a", "\n1). ISR \u4e0d\u80fd\u8fd4\u56de\u4e00\u4e2a\u503c\u3002\u5982\u679c\u4f60\u4e0d\u61c2\u8fd9\u4e2a\uff0c\u90a3\u4e48\u4f60\u4e0d\u4f1a\u88ab\u96c7\u7528\u7684\u3002", "\n2). ISR \u4e0d\u80fd\u4f20\u9012\u53c2\u6570\u3002\u5982\u679c\u4f60\u6ca1\u6709\u770b\u5230\u8fd9\u4e00\u70b9\uff0c\u4f60\u88ab\u96c7\u7528\u7684\u673a\u4f1a\u7b49\u540c\u7b2c\u4e00\u9879\u3002", "\n3). \u5728\u8bb8\u591a\u7684\u5904\u7406\u5668/\u7f16\u8bd1\u5668\u4e2d\uff0c\u6d6e\u70b9\u4e00\u822c\u90fd\u662f\u4e0d\u53ef\u91cd\u5165\u7684\u3002\u6709\u4e9b\u5904\u7406\u5668/\u7f16\u8bd1\u5668\u9700\u8981\u8ba9\u989d\u5904\u7684\u5bc4\u5b58\u5668\u5165\u6808\uff0c\u6709\u4e9b\u5904\u7406\u5668/\u7f16\u8bd1\u5668\u5c31\u662f\u4e0d\u5141\u8bb8\u5728ISR\u4e2d\u505a\u6d6e\u70b9\u8fd0\u7b97\u3002\u6b64\u5916\uff0cISR\u5e94\u8be5\u662f\u77ed\u800c\u6709\u6548\u7387\u7684\uff0c\u5728ISR\u4e2d\u505a\u6d6e\u70b9\u8fd0\u7b97\u662f\u4e0d\u660e\u667a\u7684\u3002", "\n4). \u4e0e\u7b2c\u4e09\u70b9\u4e00\u8109\u76f8\u627f\uff0cprintf()\u7ecf\u5e38\u6709\u91cd\u5165\u548c\u6027\u80fd\u4e0a\u7684\u95ee\u9898\u3002\u5982\u679c\u4f60\u4e22\u6389\u4e86\u7b2c\u4e09\u548c\u7b2c\u56db\u70b9\uff0c\u6211\u4e0d\u4f1a\u592a\u4e3a\u96be\u4f60\u7684\u3002\u4e0d\u7528\u8bf4\uff0c\u5982\u679c\u4f60\u80fd\u5f97\u5230\u540e\u4e24\u70b9\uff0c\u90a3\u4e48\u4f60\u7684\u88ab\u96c7\u7528\u524d\u666f\u8d8a\u6765\u8d8a\u5149\u660e\u4e86\u3002", "\u4ee3\u7801\u4f8b\u5b50\uff08Code examples\uff09", "\n12 . \u4e0b\u9762\u7684\u4ee3\u7801\u8f93\u51fa\u662f\u4ec0\u4e48\uff0c\u4e3a\u4ec0\u4e48\uff1f", "void foo(void)", "\n{ unsigned int a = 6;", "\nint b = -20;", "\n(a+b > 6) puts(\u201c> 6\u2033) : puts(\u201c\n} ", "\u8fd9\u4e2a\u95ee\u9898\u6d4b\u8bd5\u4f60\u662f\u5426\u61c2\u5f97C\u8bed\u8a00\u4e2d\u7684\u6574\u6570\u81ea\u52a8\u8f6c\u6362\u539f\u5219\uff0c\u6211\u53d1\u73b0\u6709\u4e9b\u5f00\u53d1\u8005\u61c2\u5f97\u6781\u5c11\u8fd9\u4e9b\u4e1c\u897f\u3002\u4e0d\u7ba1\u5982\u4f55\uff0c\u8fd9\u65e0\u7b26\u53f7\u6574\u578b\u95ee\u9898\u7684\u7b54\u6848\u662f\u8f93\u51fa\u662f\u201c>6\u201d\u3002\u539f\u56e0\u662f\u5f53\u8868\u8fbe\u5f0f\u4e2d\u5b58\u5728\u6709\u7b26\u53f7\u7c7b\u578b\u548c\u65e0\u7b26\u53f7\u7c7b\u578b\u65f6\u6240\u6709\u7684\u64cd\u4f5c\u6570\u90fd\u81ea\u52a8\u8f6c\u6362\u4e3a\u65e0\u7b26\u53f7\u7c7b\u578b\u3002\u56e0\u6b64-20\u53d8\u6210\u4e86\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u6b63\u6574\u6570\uff0c\u6240\u4ee5\u8be5\u8868\u8fbe\u5f0f\u8ba1\u7b97\u51fa\u7684\u7ed3\u679c\u5927\u4e8e6\u3002\u8fd9\u4e00\u70b9\u5bf9\u4e8e\u5e94\u5f53\u9891\u7e41\u7528\u5230\u65e0\u7b26\u53f7\u6570\u636e\u7c7b\u578b\u7684\u5d4c\u5165\u5f0f\u7cfb\u7edf\u6765\u8bf4\u662f\u4e30\u5e38\u91cd\u8981\u7684\u3002\u5982\u679c\u4f60\u7b54\u9519\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f60\u4e5f\u5c31\u5230\u4e86\u5f97\u4e0d\u5230\u8fd9\u4efd\u5de5\u4f5c\u7684\u8fb9\u7f18\u3002", "13. \u8bc4\u4ef7\u4e0b\u9762\u7684\u4ee3\u7801\u7247\u65ad\uff1a", "unsigned int zero = 0;", "\nunsigned int compzero = 0xFFFF;", "\n/*1\u2032s complement of zero */ ", "\u5bf9\u4e8e\u4e00\u4e2aint\u578b\u4e0d\u662f16\u4f4d\u7684\u5904\u7406\u5668\u4e3a\u8bf4\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u662f\u4e0d\u6b63\u786e\u7684\u3002\u5e94\u7f16\u5199\u5982\u4e0b\uff1a", "unsigned int compzero = ~0; ", "\u8fd9\u4e00\u95ee\u9898\u771f\u6b63\u80fd\u63ed\u9732\u51fa\u5e94\u8bd5\u8005\u662f\u5426\u61c2\u5f97\u5904\u7406\u5668\u5b57\u957f\u7684\u91cd\u8981\u6027\u3002\u5728\u6211\u7684\u7ecf\u9a8c\u91cc\uff0c\u597d\u7684\u5d4c\u5165\u5f0f\u7a0b\u5e8f\u5458\u975e\u5e38\u51c6\u786e\u5730\u660e\u767d\u786c\u4ef6\u7684\u7ec6\u8282\u548c\u5b83\u7684\u5c40\u9650\uff0c\u7136\u800cPC\u673a\u7a0b\u5e8f\u5f80\u5f80\u628a\u786c\u4ef6\u4f5c\u4e3a\u4e00\u4e2a\u65e0\u6cd5\u907f\u514d\u7684\u70e6\u607c\u3002", "\n\u5230\u4e86\u8fd9\u4e2a\u9636\u6bb5\uff0c\u5e94\u8bd5\u8005\u6216\u8005\u5b8c\u5168\u5782\u5934\u4e27\u6c14\u4e86\u6216\u8005\u4fe1\u5fc3\u6ee1\u6ee1\u5fd7\u5728\u5fc5\u5f97\u3002\u5982\u679c\u663e\u7136\u5e94\u8bd5\u8005\u4e0d\u662f\u5f88\u597d\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6d4b\u8bd5\u5c31\u5728\u8fd9\u91cc\u7ed3\u675f\u4e86\u3002\u4f46\u5982\u679c\u663e\u7136\u5e94\u8bd5\u8005\u505a\u5f97\u4e0d\u9519\uff0c\u90a3\u4e48\u6211\u5c31\u6254\u51fa\u4e0b\u9762\u7684\u8ffd\u52a0\u95ee\u9898\uff0c\u8fd9\u4e9b\u95ee\u9898\u662f\u6bd4\u8f83\u96be\u7684\uff0c\u6211\u60f3\u4ec5\u4ec5\u975e\u5e38\u4f18\u79c0\u7684\u5e94\u8bd5\u8005\u80fd\u505a\u5f97\u4e0d\u9519\u3002\u63d0\u51fa\u8fd9\u4e9b\u95ee\u9898\uff0c\u6211\u5e0c\u671b\u66f4\u591a\u770b\u5230\u5e94\u8bd5\u8005\u5e94\u4ed8\u95ee\u9898\u7684\u65b9\u6cd5\uff0c\u800c\u4e0d\u662f\u7b54\u6848\u3002\u4e0d\u7ba1\u5982\u4f55\uff0c\u4f60\u5c31\u5f53\u662f\u8fd9\u4e2a\u5a31\u4e50\u5427\u2026", "\u52a8\u6001\u5185\u5b58\u5206\u914d\uff08Dynamic memory allocation\uff09", "14. \u5c3d\u7ba1\u4e0d\u50cf\u975e\u5d4c\u5165\u5f0f\u8ba1\u7b97\u673a\u90a3\u4e48\u5e38\u89c1\uff0c\u5d4c\u5165\u5f0f\u7cfb\u7edf\u8fd8\u662f\u6709\u4ece\u5806\uff08heap\uff09\u4e2d\u52a8\u6001\u5206\u914d\u5185\u5b58\u7684\u8fc7\u7a0b\u7684\u3002\u90a3\u4e48\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u52a8\u6001\u5206\u914d\u5185\u5b58\u53ef\u80fd\u53d1\u751f\u7684\u95ee\u9898\u662f\u4ec0\u4e48\uff1f", "\u8fd9\u91cc\uff0c\u6211\u671f\u671b\u5e94\u8bd5\u8005\u80fd\u63d0\u5230\u5185\u5b58\u788e\u7247\uff0c\u788e\u7247\u6536\u96c6\u7684\u95ee\u9898\uff0c\u53d8\u91cf\u7684\u6301\u884c\u65f6\u95f4\u7b49\u7b49\u3002\u8fd9\u4e2a\u4e3b\u9898\u5df2\u7ecf\u5728ESP\u6742\u5fd7\u4e2d\u88ab\u5e7f\u6cdb\u5730\u8ba8\u8bba\u8fc7\u4e86\uff08\u4e3b\u8981\u662f P.J. Plauger, \u4ed6\u7684\u89e3\u91ca\u8fdc\u8fdc\u8d85\u8fc7\u6211\u8fd9\u91cc\u80fd\u63d0\u5230\u7684\u4efb\u4f55\u89e3\u91ca\uff09\uff0c\u6240\u6709\u56de\u8fc7\u5934\u770b\u4e00\u4e0b\u8fd9\u4e9b\u6742\u5fd7\u5427\uff01\u8ba9\u5e94\u8bd5\u8005\u8fdb\u5165\u4e00\u79cd\u865a\u5047\u7684\u5b89\u5168\u611f\u89c9\u540e\uff0c\u6211\u62ff\u51fa\u8fd9\u4e48\u4e00\u4e2a\u5c0f\u8282\u76ee\uff1a\u4e0b\u9762\u7684\u4ee3\u7801\u7247\u6bb5\u7684\u8f93\u51fa\u662f\u4ec0\u4e48\uff0c\u4e3a\u4ec0\u4e48\uff1f", "char *ptr;", "\nif ((ptr = (char *)malloc(0)) == NULL)", "\nputs(\u201cGot a null pointer\u201d);", "\nelse", "\nputs(\u201cGot a valid pointer\u201d); ", "\u8fd9\u662f\u4e00\u4e2a\u6709\u8da3\u7684\u95ee\u9898\u3002\u6700\u8fd1\u5728\u6211\u7684\u4e00\u4e2a\u540c\u4e8b\u4e0d\u7ecf\u610f\u628a0\u503c\u4f20\u7ed9\u4e86\u51fd\u6570malloc\uff0c\u5f97\u5230\u4e86\u4e00\u4e2a\u5408\u6cd5\u7684\u6307\u9488\u4e4b\u540e\uff0c\u6211\u624d\u60f3\u5230\u8fd9\u4e2a\u95ee\u9898\u3002\u8fd9\u5c31\u662f\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u8be5\u4ee3\u7801\u7684\u8f93\u51fa\u662f\u201cGot a valid pointer\u201d\u3002\u6211\u7528\u8fd9\u4e2a\u6765\u5f00\u59cb\u8ba8\u8bba\u8fd9\u6837\u7684\u4e00\u95ee\u9898\uff0c\u770b\u770b\u88ab\u9762\u8bd5\u8005\u662f\u5426\u60f3\u5230\u5e93\u4f8b\u7a0b\u8fd9\u6837\u505a\u662f\u6b63\u786e\u3002\u5f97\u5230\u6b63\u786e\u7684\u7b54\u6848\u56fa\u7136\u91cd\u8981\uff0c\u4f46\u89e3\u51b3\u95ee\u9898\u7684\u65b9\u6cd5\u548c\u4f60\u505a\u51b3\u5b9a\u7684\u57fa\u672c\u539f\u7406\u66f4\u91cd\u8981\u4e9b\u3002", "Typedef ", "15. Typedef \u5728C\u8bed\u8a00\u4e2d\u9891\u7e41\u7528\u4ee5\u58f0\u660e\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u6570\u636e\u7c7b\u578b\u7684\u540c\u4e49\u5b57\u3002\u4e5f\u53ef\u4ee5\u7528\u9884\u5904\u7406\u5668\u505a\u7c7b\u4f3c\u7684\u4e8b\u3002\u4f8b\u5982\uff0c\u601d\u8003\u4e00\u4e0b\u4e0b\u9762\u7684\u4f8b\u5b50\uff1a", "\n#define dPS struct s *", "\ntypedef struct s * tPS; ", "\u4ee5\u4e0a\u4e24\u79cd\u60c5\u51b5\u7684\u610f\u56fe\u90fd\u662f\u8981\u5b9a\u4e49dPS \u548c tPS \u4f5c\u4e3a\u4e00\u4e2a\u6307\u5411\u7ed3\u6784s\u6307\u9488\u3002\u54ea\u79cd\u65b9\u6cd5\u66f4\u597d\u5462\uff1f\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u4e3a\u4ec0\u4e48\uff1f", "\n\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u5fae\u5999\u7684\u95ee\u9898\uff0c\u4efb\u4f55\u4eba\u7b54\u5bf9\u8fd9\u4e2a\u95ee\u9898\uff08\u6b63\u5f53\u7684\u539f\u56e0\uff09\u662f\u5e94\u5f53\u88ab\u606d\u559c\u7684\u3002\u7b54\u6848\u662f\uff1atypedef\u66f4\u597d\u3002\u601d\u8003\u4e0b\u9762\u7684\u4f8b\u5b50\uff1a", "\ndPS p1,p2;", "\ntPS p3,p4; ", "\u7b2c\u4e00\u4e2a\u6269\u5c55\u4e3a", "\nstruct s * p1, p2; ", "\u4e0a\u9762\u7684\u4ee3\u7801\u5b9a\u4e49p1\u4e3a\u4e00\u4e2a\u6307\u5411\u7ed3\u6784\u7684\u6307\uff0cp2\u4e3a\u4e00\u4e2a\u5b9e\u9645\u7684\u7ed3\u6784\uff0c\u8fd9\u4e5f\u8bb8\u4e0d\u662f\u4f60\u60f3\u8981\u7684\u3002\u7b2c\u4e8c\u4e2a\u4f8b\u5b50\u6b63\u786e\u5730\u5b9a\u4e49\u4e86p3 \u548cp4 \u4e24\u4e2a\u6307\u9488\u3002", "\u6666\u6da9\u7684\u8bed\u6cd5", "16. C\u8bed\u8a00\u540c\u610f\u4e00\u4e9b\u4ee4\u4eba\u9707\u60ca\u7684\u7ed3\u6784,\u4e0b\u9762\u7684\u7ed3\u6784\u662f\u5408\u6cd5\u7684\u5417\uff0c\u5982\u679c\u662f\u5b83\u505a\u4e9b\u4ec0\u4e48\uff1f", "\nint a = 5, b = 7, c;", "\nc = a+++b; ", "\u8fd9\u4e2a\u95ee\u9898\u5c06\u505a\u4e3a\u8fd9\u4e2a\u6d4b\u9a8c\u7684\u4e00\u4e2a\u6109\u5feb\u7684\u7ed3\u5c3e\u3002\u4e0d\u7ba1\u4f60\u76f8\u4e0d\u76f8\u4fe1\uff0c\u4e0a\u9762\u7684\u4f8b\u5b50\u662f\u5b8c\u5168\u5408\u4e4e\u8bed\u6cd5\u7684\u3002\u95ee\u9898\u662f\u7f16\u8bd1\u5668\u5982\u4f55\u5904\u7406\u5b83\uff1f\u6c34\u5e73\u4e0d\u9ad8\u7684\u7f16\u8bd1\u4f5c\u8005\u5b9e\u9645\u4e0a\u4f1a\u4e89\u8bba\u8fd9\u4e2a\u95ee\u9898\uff0c\u6839\u636e\u6700\u5904\u7406\u539f\u5219\uff0c\u7f16\u8bd1\u5668\u5e94\u5f53\u80fd\u5904\u7406\u5c3d\u53ef\u80fd\u6240\u6709\u5408\u6cd5\u7684\u7528\u6cd5\u3002\u56e0\u6b64\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u88ab\u5904\u7406\u6210\uff1a", "\nc = a++ + b;", "\n\u56e0\u6b64, \u8fd9\u6bb5\u4ee3\u7801\u6301\u884c\u540ea = 6, b = 7, c = 12\u3002", "\n\u5982\u679c\u4f60\u77e5\u9053\u7b54\u6848\uff0c\u6216\u731c\u51fa\u6b63\u786e\u7b54\u6848\uff0c\u505a\u5f97\u597d\u3002\u5982\u679c\u4f60\u4e0d\u77e5\u9053\u7b54\u6848\uff0c\u6211\u4e5f\u4e0d\u628a\u8fd9\u4e2a\u5f53\u4f5c\u95ee\u9898\u3002\u6211\u53d1\u73b0\u8fd9\u4e2a\u95ee\u9898\u7684\u6700\u5927\u597d\u5904\u662f:\u8fd9\u662f\u4e00\u4e2a\u5173\u4e8e\u4ee3\u7801\u7f16\u5199\u98ce\u683c\uff0c\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\uff0c\u4ee3\u7801\u7684\u53ef\u4fee\u6539\u6027\u7684\u597d\u7684\u8bdd\u9898", "What will print out? ", "main()", "\n{ char *p1=\u201cname\u201d;", "\nchar *p2;", "\np2=(char*)malloc(20);", "\nmemset (p2, 0, 20);", "\nwhile(*p2++ = *p1++);", "\nprintf(\u201c%sn\u201d,p2); ", "} ", "Answer:empty string. ", "What will be printed as the result of the operation below: ", "main()", "\n{ int x=20,y=35;", "\nx=y++ + x++;", "\ny= ++y + ++x;", "\nprintf(\u201c%d%dn\u201d,x,y);", "\n} ", "Answer : 5794 ", "What will be printed as the result of the operation below: ", "main()", "\n{ int x=5;", "\nprintf(\u201c%d,%d,%dn\u201d,x,x>2);", "\n} ", "Answer: 5,20,1 ", "What will be printed as the result of the operation below: ", "#define swap(a,b) a=a+b;b=a-b;a=a-b;", "\nvoid main()", "\n{ int x=5, y=10;", "\nswap (x,y);", "\nprintf(\u201c%d %dn\u201d,x,y);", "\nswap2(x,y);", "\nprintf(\u201c%d %dn\u201d,x,y);", "\n} ", "int swap2(int a, int b)", "\n{ int temp;", "\ntemp=a;", "\nb=a;", "\na=temp;", "\nreturn 0; ", "} ", "Answer: 10, 5", "\n10, 5 ", "What will be printed as the result of the operation below: ", "main()", "\n{ char *ptr = \u201d Cisco Systems\u201d;", "\n*ptr++; printf(\u201c%sn\u201d,ptr);", "\nptr++;", "\nprintf(\u201c%sn\u201d,ptr);", "\n} ", "Answer:Cisco Systems", "\nisco systems ", "What will be printed as the result of the operation below: ", "main()", "\n{ char s1[]=\u201cCisco\u201d;", "\nchar s2[]= \u201csystems\u201d;", "\nprintf(\u201c%s\u201d,s1);", "\n} Answer: Cisco ", "What will be printed as the result of the operation below: ", "main()", "\n{ char *p1;", "\nchar *p2;", "\np1=(char *)malloc(25);", "\np2=(char *)malloc(25); ", "strcpy(p1,\u201dCisco\u201d);", "\nstrcpy(p2,\u201csystems\u201d);", "\nstrcat(p1,p2); ", "printf(\u201c%s\u201d,p1); ", "} ", "Answer: Ciscosystems ", "The following variable is available in file1.c, who can access it?: ", "static int average; ", "Answer: all the functions in the file1.c can access the variable. ", "WHat will be the result of the following code? ", "#define TRUE 0 // some code", "\nwhile(TRUE)", "\n{ ", "// some code ", "} ", "Answer: This will not go into the loop as TRUE is defined as 0. ", "What will be printed as the result of the operation below: ", "int x;", "\nint modifyvalue()", "\n{ return(x+=10);", "\n} int changevalue(int x)", "\n{ return(x+=1);", "\n} ", "void main()", "\n{ int x=10;", "\nx++;", "\nchangevalue(x);", "\nx++;", "\nmodifyvalue();", "\nprintf(\u201cFirst output:%dn\u201d,x); ", "x++;", "\nchangevalue(x);", "\nprintf(\u201cSecond output:%dn\u201d,x);", "\nmodifyvalue();", "\nprintf(\u201cThird output:%dn\u201d,x); ", "} ", "Answer: 12 , 13 , 13 ", "What will be printed as the result of the operation below: ", "main()", "\n{ int x=10, y=15;", "\nx = x++;", "\ny = ++y;", "\nprintf(\u201c%d %dn\u201d,x,y);", "\n} ", "Answer: 11, 16 ", "What will be printed as the result of the operation below: ", "main()", "\n{ int a=0;", "\nif(a==0)", "\nprintf(\u201cCisco Systemsn\u201d);", "\nprintf(\u201cCisco Systemsn\u201d);", "\n} ", "Answer: Two lines with \u201cCisco Systems\u201d will be printed. ", "\u518d\u6b21\u66f4\u65b0C++\u76f8\u5173\u9898\u96c6", "1. \u4ee5\u4e0b\u4e09\u6761\u8f93\u51fa\u8bed\u53e5\u5206\u522b\u8f93\u51fa\u4ec0\u4e48\uff1f[C\u6613]", "\nchar str1[] = \u201cabc\u201d;", "\nchar str2[] = \u201cabc\u201d;", "\nconst char str3[] = \u201cabc\u201d;", "\nconst char str4[] = \u201cabc\u201d;", "\nconst char* str5 = \u201cabc\u201d;", "\nconst char* str6 = \u201cabc\u201d;", "\ncout \ncout \ncout \n", "13. \u975eC++\u5185\u5efa\u578b\u522b A \u548c B\uff0c\u5728\u54ea\u51e0\u79cd\u60c5\u51b5\u4e0bB\u80fd\u9690\u5f0f\u8f6c\u5316\u4e3aA\uff1f[C++\u4e2d\u7b49]", "\n\u7b54\uff1a", "\na. class B : public A { \u2026\u2026} // B\u516c\u6709\u7ee7\u627f\u81eaA\uff0c\u53ef\u4ee5\u662f\u95f4\u63a5\u7ee7\u627f\u7684", "\nb. class B { operator A( ); } // B\u5b9e\u73b0\u4e86\u9690\u5f0f\u8f6c\u5316\u4e3aA\u7684\u8f6c\u5316", "\nc. class A { A( const B& ); } // A\u5b9e\u73b0\u4e86non-explicit\u7684\u53c2\u6570\u4e3aB\uff08\u53ef\u4ee5\u6709\u5176\u4ed6\u5e26\u9ed8\u8ba4\u503c\u7684\u53c2\u6570\uff09\u6784\u9020\u51fd\u6570", "\nd. A& operator= ( const A& ); // \u8d4b\u503c\u64cd\u4f5c\uff0c\u867d\u4e0d\u662f\u6b63\u5b97\u7684\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\uff0c\u4f46\u4e5f\u53ef\u4ee5\u52c9\u5f3a\u7b97\u4e00\u4e2a", "12. \u4ee5\u4e0b\u4ee3\u7801\u4e2d\u7684\u4e24\u4e2asizeof\u7528\u6cd5\u6709\u95ee\u9898\u5417\uff1f[C\u6613]", "\nvoid UpperCase( char str[] ) // \u5c06 str \u4e2d\u7684\u5c0f\u5199\u5b57\u6bcd\u8f6c\u6362\u6210\u5927\u5199\u5b57\u6bcd", "\n{ for( size_t i=0; i", "\nif( 'a'\nstr[i] -= ('a'-'A' );", "\n} char str[] = \"aBcDe\";", "\ncout \nUpperCase( str );", "\ncout \n", "7. \u4ee5\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1f[C\u96be]", "\nvoid char2Hex( char c ) // \u5c06\u5b57\u7b26\u4ee516\u8fdb\u5236\u8868\u793a", "\n{ char ch = c/0x10 + '0'; if( ch > \u20199\u2032 ) ch += (\u2018A\u2019-\u20199\u2032-1);", "\nchar cl = c%0\u00d710 + \u20190\u2032; if( cl > \u20199\u2032 ) cl += (\u2018A\u2019-\u20199\u2032-1);", "\ncout \n} char str[] = \"I love \u4e2d\u56fd\";", "\nfor( size_t i=0; i", "\nchar2Hex( str[i] );", "\ncout \n", "4. \u4ee5\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1f[C++\u6613]", "\nstruct Test", "\n{ Test( int ) {}", "\nTest() {}", "\nvoid fun() {}", "\n};", "\nvoid main( void )", "\n{ Test a(1);", "\na.fun();", "\nTest b();", "\nb.fun();", "\n} ", "5. \u4ee5\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1f[C++\u6613]", "\ncout \n", "8. \u4ee5\u4e0b\u4ee3\u7801\u80fd\u591f\u7f16\u8bd1\u901a\u8fc7\u5417\uff0c\u4e3a\u4ec0\u4e48\uff1f[C++\u6613]", "\nunsigned int const size1 = 2;", "\nchar str1[ size1 ];", "\nunsigned int temp = 0;", "\ncin >> temp;", "\nunsigned int const size2 = temp;", "\nchar str2[ size2 ]; ", "9. \u4ee5\u4e0b\u4ee3\u7801\u4e2d\u7684\u8f93\u51fa\u8bed\u53e5\u8f93\u51fa0\u5417\uff0c\u4e3a\u4ec0\u4e48\uff1f[C++\u6613]", "\nstruct CLS", "\n{ int m_i;", "\nCLS( int i ) : m_i(i) {}", "\nCLS()", "\n{ CLS(0);", "\n} };", "\nCLS obj;", "\ncout \n", "10. C++\u4e2d\u7684\u7a7a\u7c7b\uff0c\u9ed8\u8ba4\u4ea7\u751f\u54ea\u4e9b\u7c7b\u6210\u5458\u51fd\u6570\uff1f[C++\u6613]", "\n\u7b54\uff1a", "\nclass Empty", "\n{ public:", "\nEmpty(); // \u7f3a\u7701\u6784\u9020\u51fd\u6570", "\nEmpty( const Empty& ); // \u62f7\u8d1d\u6784\u9020\u51fd\u6570", "\n~Empty(); // \u6790\u6784\u51fd\u6570", "\nEmpty& operator=( const Empty& ); // \u8d4b\u503c\u8fd0\u7b97\u7b26", "\nEmpty* operator&(); // \u53d6\u5740\u8fd0\u7b97\u7b26", "\nconst Empty* operator&() const; // \u53d6\u5740\u8fd0\u7b97\u7b26 const", "\n}; ", "3. \u4ee5\u4e0b\u4e24\u6761\u8f93\u51fa\u8bed\u53e5\u5206\u522b\u8f93\u51fa\u4ec0\u4e48\uff1f[C++\u96be]", "\nfloat a = 1.0f;", "\ncout \ncout \ncout \nfloat b = 0.0f;", "\ncout \ncout \ncout \n", "2. \u4ee5\u4e0b\u53cd\u5411\u904d\u5386array\u6570\u7ec4\u7684\u65b9\u6cd5\u6709\u4ec0\u4e48\u9519\u8bef\uff1f[STL\u6613]", "\nvector array;", "\narray.push_back( 1 );", "\narray.push_back( 2 );", "\narray.push_back( 3 ); ", "for( vector::size_type i=array.size()-1; i>=0; \u2013i ) // \u53cd\u5411\u904d\u5386array\u6570\u7ec4", "\n{ cout \n} ", "6. \u4ee5\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1f[STL\u6613]", "\ntypedef vector IntArray;", "\nIntArray array;", "\narray.push_back( 1 );", "\narray.push_back( 2 );", "\narray.push_back( 2 );", "\narray.push_back( 3 );", "\n// \u5220\u9664array\u6570\u7ec4\u4e2d\u6240\u6709\u76842", "\nfor( IntArray::iterator itor=array.begin(); itor!=array.end(); ++itor )", "\n{ if( 2 == *itor ) array.erase( itor );", "\n} ", "11. \u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u5b8c\u6210\u5185\u5b58\u4e4b\u95f4\u7684\u62f7\u8d1d\u3002[\u8003\u8651\u95ee\u9898\u662f\u5426\u5168\u9762]", "\n\u7b54\uff1a", "void* mymemcpy( void *dest, const void *src, size_t count )", "\n{", "\nchar* pdest = static_cast"], "title": "C/C++\u57fa\u7840\u77e5\u8bc6\u95ee\u9898"},
{"contents": ["           \u7ea6\u5b9a:", "\n            1) \u4e0b\u9762\u7684\u6d4b\u8bd5\u9898\u4e2d, \u8ba4\u4e3a\u6240\u6709\u5fc5\u987b\u7684\u5934\u6587\u4ef6\u90fd\u5df2\u7ecf\u6b63\u786e\u7684\u5305\u542b\u4e86", "\n            2) \u6570\u636e\u7c7b\u578b", "\n            char \u4e00\u4e2a\u5b57\u8282 1 byte", "\n            int \u4e24\u4e2a\u5b57\u8282 2 byte (16\u4f4d\u7cfb\u7edf, \u8ba4\u4e3a\u6574\u578b\u662f2\u4e2a\u5b57\u8282)", "\n            long int \u56db\u4e2a\u5b57\u8282 4 byte", "\n            float \u56db\u4e2a\u5b57\u82824 byet", "\n            double \u516b\u4e2a\u5b57\u8282 8 byte", "\n            long double \u5341\u4e2a\u5b57\u8282 10 byte", "\n            pointer \u4e24\u4e2a\u5b57\u8282 2 byte(\u6ce8\u610f, 16\u4f4d\u7cfb\u7edf, \u5730\u5740\u603b\u7ebf\u53ea\u670916\u4f4d)", "            \u7b2c1\u9898: \u8003\u67e5\u5bf9volatile\u5173\u952e\u5b57\u7684\u8ba4\u8bc6", "\n            #include", "\n            static jmp_buf buf;", "\n            main()", "\n            {", "\n            volatile int b;", "\n            b =3;", "            if(setjmp(buf)!=0)", "\n            {", "\n            printf(\u201c%d \u201c, b);", "\n            exit(0);", "\n            }", "\n            b=5;", "\n            longjmp(buf , 1);", "\n            } ", "            \u8bf7\u95ee, \u8fd9\u6bb5\u7a0b\u5e8f\u7684\u8f93\u51fa\u662f", "\n            (a) 3", "\n            (b) 5", "\n            (c) 0", "\n            (d) \u4ee5\u4e0a\u5747\u4e0d\u662f", "            \u7b2c2\u9898:\u8003\u67e5\u7c7b\u578b\u8f6c\u6362", "\n            main()", "\n            {", "\n            struct node", "\n            {", "\n            int a;", "\n            int b;", "\n            int c;", "\n            };", "\n            struct node s= { 3, 5,6 };", "\n            struct node *pt = &s;", "\n            printf(\u201c%d\u201d , *(int*)pt);", "\n            }", "            \u8fd9\u6bb5\u7a0b\u5e8f\u7684\u8f93\u51fa\u662f:", "\n            (a) 3", "\n            (b) 5", "\n            (c) 6", "\n            (d) 7", "            \u7b2c3\u9898:\u8003\u67e5\u9012\u5f52\u8c03\u7528", "\n            int foo ( int x , int n)\u3000", "\n            {", "\n            int val;", "\n            val =1;", "            if (n>0)", "\n            {", "\n            if (n%2 == 1) val = val *x;", "\n            val = val * foo(x*x , n/2);", "\n            }", "\n            return val;", "\n            }", "            \u8fd9\u6bb5\u4ee3\u7801\u5bf9x\u548cn\u5b8c\u6210\u4ec0\u4e48\u6837\u7684\u529f\u80fd(\u64cd\u4f5c)?", "\n            (a) x^n (x\u7684n\u6b21\u5e42)", "\n            (b) x*n(x\u4e0en\u7684\u4e58\u79ef)", "\n            (c) n^x(n\u7684x\u6b21\u5e42)", "\n            (d) \u4ee5\u4e0a\u5747\u4e0d\u662f", "            \u7b2c4\u9898:\u8003\u67e5\u6307\u9488,\u8fd9\u9053\u9898\u53ea\u9002\u5408\u4e8e\u90a3\u4e9b\u7279\u522b\u7ec6\u5fc3\u4e14\u5bf9\u6307\u9488\u548c\u6570\u7ec4\u6709\u6df1\u5165\u7406\u89e3\u7684\u4eba", "\n            main()", "\n            {", "\n            int a[5] = {1,2,3,4,5};", "\n            int *ptr = (int*)(&a+1);", "            printf(\u201c%d %d\u201d , *(a+1), *(ptr-1));", "\n            }", "            \u8fd9\u6bb5\u7a0b\u5e8f\u7684\u8f93\u51fa\u662f:", "\n            (a) 2 2", "\n            (b) 2 1", "\n            (c) 2 5", "\n            (d) \u4ee5\u4e0a\u5747\u4e0d\u662f", "            \u7b2c5\u9898:\u8003\u67e5\u591a\u7ef4\u6570\u7ec4\u4e0e\u6307\u9488", "\n            void foo(int [][3]);", "\n            main()", "\n            {", "\n            int a [3][3]= { { 1,2,3} , { 4,5,6},{7,8,9}};", "\n            foo(a);", "\n            printf(\u201c%d\u201d , a[2][1]);", "\n            }", "\n            void foo(int b[][3])", "\n            {", "\n            ++ b;", "\n            b[1][1] =9;", "\n            }", "            \u8fd9\u6bb5\u7a0b\u5e8f\u7684\u8f93\u51fa\u662f:", "\n            (a) 8", "\n            (b) 9", "\n            (c) 7", "\n            (d)\u4ee5\u4e0a\u5747\u4e0d\u5bf9", "            \u7b2c6\u9898:\u8003\u67e5\u9017\u53f7\u8868\u8fbe\u5f0f", "\n            main()", "\n            {", "\n            int a, b,c, d;", "\n            a=3;", "\n            b=5;", "\n            c=a,b;", "\n            d=(a,b);", "            printf(\u201cc=%d\u201d ,c);", "\n            printf(\u201cd=%d\u201d ,d);", "\n            }", "            \u8fd9\u6bb5\u7a0b\u5e8f\u7684\u8f93\u51fa\u662f:", "\n            (a) c=3 d=3", "\n            (b) c=5 d=3", "\n            (c) c=3 d=5", "\n            (d) c=5 d=5", "            \u7b2c7\u9898:\u8003\u67e5\u6307\u9488\u6570\u7ec4", "\n            main()", "\n            {", "\n            int a[][3] = { 1,2,3 ,4,5,6};", "\n            int (*ptr)[3] = a;", "            printf(\u201c%d %d \u201c, (*ptr)[1], (*ptr)[2]);", "\n            ++ptr;", "\n            printf(\u201c%d %d\u201d , (*ptr)[1], (*ptr)[2]);", "\n            }", "            \u8fd9\u6bb5\u7a0b\u5e8f\u7684\u8f93\u51fa\u662f:", "\n            (a) 2 3 5 6", "\n            (b) 2 3 4 5", "\n            (c) 4 5 0 0", "\n            (d) \u4ee5\u4e0a\u5747\u4e0d\u5bf9", "            \u7b2c8\u9898:\u8003\u67e5\u51fd\u6570\u6307\u9488", "\n            int *f1(void)", "\n            {", "\n            int x =10;", "\n            return(&x);", "\n            }", "\n            int *f2(void)", "\n            {", "\n            int*ptr;", "\n            *ptr =10;", "\n            return ptr;", "\n            }", "\n            int *f3(void)", "\n            {", "\n            int *ptr;", "\n            ptr=(int*) malloc(sizeof(int));", "\n            return ptr;", "\n            }", "            \u4e0a\u9762\u8fd93\u4e2a\u51fd\u6570\u54ea\u4e00\u4e2a\u6700\u53ef\u80fd\u5f15\u8d77\u6307\u9488\u65b9\u9762\u7684\u95ee\u9898", "\n            (a) \u53ea\u6709 f3", "\n            (b) \u53ea\u6709f1 and f3", "\n            (c) \u53ea\u6709f1 and f2", "\n            (d) f1 , f2 ,f3", "            \u7b2c9\u9898:\u8003\u67e5\u81ea\u52a0\u64cd\u4f5c(++)", "\n            main()", "\n            {", "\n            int i=3;", "\n            int j;", "            j = sizeof(++i+ ++i);", "            printf(\u201ci=%d j=%d\u201d, i ,j);", "\n            }", "            \u8fd9\u6bb5\u7a0b\u5e8f\u7684\u8f93\u51fa\u662f:", "\n            (a) i=4 j=2", "\n            (b) i=3 j=2", "\n            (c) i=3 j=4", "\n            (d) i=3 j=6", "            \u7b2c10\u9898:\u8003\u67e5\u5f62\u5f0f\u53c2\u6570, \u5b9e\u9645\u53c2\u6570, \u6307\u9488\u548c\u6570\u7ec4", "\n            void f1(int *, int);", "\n            void f2(int *, int);", "\n            void(*p[2]) (int *, int);", "\n            main()", "\n            {", "\n            int a;", "\n            int b;", "            p[0] = f1;", "\n            p[1] = f2;", "\n            a=3;", "\n            b=5;", "            p[0](&a, b);", "\n            printf(\u201c%d\\t %d\\t\u201d, a, b);", "\n            p[1](&a, b);", "\n            printf(\u201c%d\\t %d\\t\u201d, a, b);", "\n            }", "\n            void f1(int* p , int q)", "\n            {", "\n            int tmp;", "\n            tmp =*p;", "\n            *p = q;", "\n            q= tmp;", "\n            }", "\n            void f2(int* p , int q)", "\n            {", "\n            int tmp;", "\n            tmp =*p;", "\n            *p = q;", "\n            q= tmp;", "\n            } ", "            \u8fd9\u6bb5\u7a0b\u5e8f\u7684\u8f93\u51fa\u662f:", "\n            (a) 5 5 5 5", "\n            (b) 3 5 3 5", "\n            (c) 5 3 5 3", "\n            (d) 3 3 3 3", "            \u7b2c11\u9898:\u8003\u67e5\u81ea\u51cf\u64cd\u4f5c(\u2013)", "\n            void e(int );", "\n            main()", "\n            {", "\n            int a;", "\n            a=3;", "\n            e(a);", "\n            }", "\n            void e(int n)", "\n            {", "\n            if(n>0)", "\n            {", "\n            e(\u2013n);", "\n            printf(\u201c%d\u201d, n);", "\n            e(\u2013n);", "\n            }", "\n            }", "            \u8fd9\u6bb5\u7a0b\u5e8f\u7684\u8f93\u51fa\u662f:", "\n            (a) 0 1 2 0", "\n            (b) 0 1 2 1", "\n            (c) 1 2 0 1", "\n            (d) 0 2 1 1", "            \u7b2c12\u9898:\u8003\u67e5typedef\u7c7b\u578b\u5b9a\u4e49,\u51fd\u6570\u6307\u9488", "\n            typedef int (*test) ( float * , float*)", "\n            test tmp;", "\n            tmp \u7684\u7c7b\u578b\u662f", "\n            (a) \u51fd\u6570\u7684\u6307\u9488, \u8be5\u51fd\u6570\u4ee5\u4e24\u4e2a\u6307\u5411\u6d6e\u70b9\u6570(float)\u7684\u6307\u9488(pointer)\u4f5c\u4e3a\u53c2\u6570(arguments)", "\n            Pointer to function of having two arguments that is pointer to float", "\n            (b) \u6574\u578b", "\n            (c) \u51fd\u6570\u7684\u6307\u9488,", "\n            \u8be5\u51fd\u6570\u4ee5\u4e24\u4e2a\u6307\u5411\u6d6e\u70b9\u6570(float)\u7684\u6307\u9488(pointer)\u4f5c\u4e3a\u53c2\u6570(arguments),\u5e76\u4e14\u51fd\u6570\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u662f\u6574\u578b", "\n            Pointer to function having two argument that is pointer to float and", "\n            return int", "\n            (d) \u4ee5\u4e0a\u90fd\u4e0d\u662f", "            \u7b2c13\u9898:\u6570\u7ec4\u4e0e\u6307\u9488\u7684\u533a\u522b\u4e0e\u8054\u7cfb", "\n            main()", "\n            {", "\n            char p;", "\n            char buf[10] ={ 1,2,3,4,5,6,9,8};", "\n            p = (buf+1)[5];", "\n            printf(\u201c%d\u201d , p);", "\n            }", "            \u8fd9\u6bb5\u7a0b\u5e8f\u7684\u8f93\u51fa\u662f:", "\n            (a) 5", "\n            (b) 6", "\n            (c) 9", "\n            (d) \u4ee5\u4e0a\u90fd\u4e0d\u5bf9", "            \u7b2c14\u9898: \u8003\u67e5\u6307\u9488\u6570\u7ec4\u7684\u6307\u9488", "\n            void f(char**);", "\n            main()", "\n            {", "\n            char * argv[] = { \u201cab\u201d ,\u201dcd\u201d , \u201cef\u201d ,\u201dgh\u201d, \u201cij\u201d ,\u201dkl\u201d };", "\n            f( argv );", "\n            }", "\n            void f( char **p )", "\n            {", "\n            char* t;", "            t= (p+= sizeof(int))[-1];", "            printf( \u201c%s\u201d , t);", "\n            }", "            \u8fd9\u6bb5\u7a0b\u5e8f\u7684\u8f93\u51fa\u662f:", "\n            (a) ab", "\n            (b) cd", "\n            (c) ef", "\n            (d) gh", "            \u7b2c15\u9898:\u6b64\u9898\u8003\u67e5\u7684\u662fC\u7684\u53d8\u957f\u53c2\u6570,\u5c31\u50cf\u6807\u51c6\u51fd\u6570\u5e93\u91ccprintf()\u90a3\u6837,\u8fd9\u4e2a\u8bdd\u9898\u4e00\u822c\u56fd\u5185\u5927\u5b66\u8bfe\u5802\u662f\u4e0d\u4f1a\u8bb2\u5230\u7684,\u4e0d\u4f1a\u60c5\u6709\u53ef\u539f", "\n            #include", "\n            int ripple ( int , );", "\n            main()", "\n            {", "\n            int num;", "\n            num = ripple ( 3, 5,7);", "\n            printf( \u201d %d\u201d , num);", "\n            }", "\n            int ripple (int n, )", "\n            {", "\n            int i , j;", "\n            int k;", "\n            va_list p;", "            k= 0;", "\n            j = 1;", "\n            va_start(p, n); ", "            for (; j{", "\n            i = va_arg(p , int);", "\n            for (; i; i &=i-1 )", "\n            ++k;", "\n            }", "\n            return k;", "\n            }", "            \u8fd9\u6bb5\u7a0b\u5e8f\u7684\u8f93\u51fa\u662f:", "\n            (a) 7", "\n            (b) 6", "\n            (c) 5", "\n            (d) 3", "            \u7b2c16\u9898:\u8003\u67e5\u9759\u6001\u53d8\u91cf\u7684\u77e5\u8bc6", "\n            int counter (int i)", "\n            {", "\n            static int count =0;", "\n            count = count +i;", "\n            return (count );", "\n            }", "\n            main()", "\n            {", "\n            int i , j;", "            for (i=0; i \n            j = counter(i);", "\n            }", "            \u672c\u7a0b\u5e8f\u6267\u884c\u5230\u6700\u540e,j\u7684\u503c\u662f:", "\n            (a) 10", "\n            (b) 15", "\n            (c) 6", "\n            (d) 7", "            \u8be6\u7ec6\u53c2\u8003\u7b54\u6848", "\n            \u7b2c1\u9898: (b)", "\n            volatile\u5b57\u9762\u610f\u601d\u662f\u6613\u4e8e\u6325\u53d1\u7684\u3002\u8fd9\u4e2a\u5173\u952e\u5b57\u6765\u63cf\u8ff0\u4e00\u4e2a\u53d8\u91cf\u65f6, \u610f\u5473\u7740 \u7ed9\u8be5\u53d8\u91cf\u8d4b\u503c(\u5199\u5165)\u4e4b\u540e, \u9a6c\u4e0a\u518d\u8bfb\u53d6,", "\n            \u5199\u5165\u7684\u503c\u4e0e\u8bfb\u53d6\u7684\u503c\u53ef\u80fd\u4e0d\u4e00\u6837,\u6240\u4ee5\u8bf4\u5b83\"\u5bb9\u6613\u6325\u53d1\"\u7684\u3002", "\n            \u8fd9\u662f\u56e0\u4e3a\u8fd9\u4e2a\u53d8\u91cf\u53ef\u80fd\u4e00\u4e2a\u5bc4\u5b58\u5668, \u76f4\u63a5\u4e0e\u5916\u90e8\u8bbe\u5907\u76f8\u8fde, \u4f60\u5199\u5165\u4e4b\u540e, \u8be5\u5bc4\u5b58\u5668\u4e5f\u6709\u53ef\u80fd\u88ab\u5916\u90e8\u8bbe\u5907\u7684\u5199\u64cd\u4f5c\u6240\u6539\u53d8;\u6216\u8005,", "\n            \u8be5\u53d8\u91cf\u88ab\u4e00\u4e2a\u4e2d\u65ad\u7a0b\u5e8f, \u6216\u53e6\u4e00\u4e2a\u8fdb\u7a0b", "\n            \u6539\u53d8\u4e86.", "\n            volatile \u4e0d\u4f1a\u88ab\u7f16\u8bd1\u5668\u4f18\u5316\u5f71\u54cd, \u5728longjump \u540e,\u5b83\u7684\u503c \u662f\u540e\u9762\u5047\u5b9a\u7684\u53d8\u91cf\u503c,b\u6700\u540e\u7684\u503c\u662f5,\u6240\u4ee55\u88ab\u6253\u5370\u51fa\u6765.", "\n            setjmp : \u8bbe\u7f6e\u975e\u5c40\u90e8\u8df3\u8f6c /* setjmp.h*/", "\n            Stores context information such as register values so that the", "\n            lomgjmp function can return control to the statement following the", "\n            one calling setjmp.Returns 0 when it is initially called.", "\n            Lonjjmp: \u6267\u884c\u4e00\u4e2a\u975e\u5c40\u90e8\u8df3\u8f6c /* setjmp.h*/", "\n            Transfers control to the statement where the call to setjmp (which", "\n            initialized buf) was made. Execution continues at this point as if", "\n            longjmp cannot return the value 0.A nonvolatile automatic variable", "\n            might be changed by a call to longjmp.When you use setjmp and", "\n            longjmp, the only automatic variables guaranteed to remain valid are", "\n            those declared volatile.", "\n            Note: Test program without volatile qualifier (result may very)", "\n            \u66f4\u8be6\u7ec6\u4ecb\u7ecd, \u8bf7\u53c2\u9605 C\u8bed\u8a00\u7684setjmp\u548clongjmp", "            \u7b2c2\u9898: (a)", "\n            \u7ed3\u6784\u9898\u7684\u6210\u5458\u5728\u5185\u5b58\u4e2d\u7684\u5730\u5740\u662f\u6309\u7167\u4ed6\u4eec\u5b9a\u4e49\u7684\u4f4d\u7f6e\u987a\u5e8f\u4f9d\u6b21\u589e\u957f\u7684\u3002\u5982\u679c\u4e00\u4e2a\u7ed3\u6784\u4f53\u7684\u6307\u9488\u88ab\u770b\u6210", "\n            \u5b83\u7684\u7b2c\u4e00\u4e2a\u6210\u5458\u7684\u6307\u9488,\u90a3\u4e48\u8be5\u6307\u9488\u7684\u786e\u6307\u5411\u7b2c\u4e00\u4e2a\u6210\u5458", "            \u7b2c3\u9898: (a)", "\n            \u6b64\u9898\u76ee\u8f83\u96be.", "\n            \u8fd9\u4e2a\u7a0b\u5e8f\u7684\u975e\u9012\u5f52\u7248\u672c", "\n            int what ( int x , int n)", "\n            {", "\n            int val;", "\n            int product;", "\n            product =1;", "\n            val =x;", "            while(n>0)", "\n            {", "\n            if (n%2 == 1)", "\n            product = product*val; /*\u5982\u679c\u662f\u5947\u6570\u6b21\u5e42, x(val)\u8981\u5148\u4e58\u4e0a\u4e00\u6b21,;", "\n            \u5076\u6570\u6b21\u5e42, \u6700\u540e\u8fd4\u56de\u65f6\u624d\u4f1a\u5230\u8fd9\u91cc\u4e58\u4ee51*/", "\n            val = val* val;", "\n            n = n/2;", "\n            }", "\n            return product;", "\n            }", "            /* \u7528\u4e8c\u5143\u590d\u4e58\u7b56\u7565 */", "\n            \u7b97\u6cd5\u63cf\u8ff0", "\n            (while n>0)", "\n            {", "\n            if next most significant binary digit of n( power) is one", "\n            then multiply accumulated product by current val,", "\n            reduce n(power) sequence by a factor of two using integer division.", "\n            get next val by multiply current value of itself", "\n            }", "            \u7b2c4\u9898: (c)", "\n            a\u7684\u7c7b\u578b\u662f\u4e00\u4e2a\u6574\u578b\u6570\u7ec4,\u5b83\u67095\u4e2a\u6210\u5458\u3002&a\u7684\u7c7b\u578b\u662f\u4e00\u4e2a\u6574\u578b\u6570\u7ec4\u7684\u6307\u9488, \u6240\u4ee5&a + 1\u6307\u5411\u7684\u5730\u65b9\u7b49\u540c\u4e8ea[6], \u6240\u4ee5*(a+1)", "\n            \u7b49\u540c\u4e8ea[1]", "\n            ptr\u7b49\u540ca[6], ptr-1\u5c31\u7b49\u540c\u4e0ea[5]", "            \u7b2c5\u9898: (b)", "\n            \u9898\u76ee\u81ea\u8eab\u5c31\u7ed9\u4e86\u8db3\u591f\u7684\u63d0\u793a", "\n            b[0][0] = 4", "\n            b[1][0] = 7", "            \u7b2c6\u9898: (c)", "\n            \u8003\u67e5\u9017\u53f7\u8868\u8fbe\u5f0f,\u9017\u53f7\u8868\u8fbe\u5f0f\u7684\u4f18\u5148\u7ea7\u662f\u5f88\u4f4e\u7684, \u6bd4 \u8d4b\u503c(=)\u7684\u4f18\u5148\u7ea7 \u4f4e. \u9017\u53f7\u8868\u8fbe\u5f0f\u7684\u503c\u5c31\u662f\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u503c", "\n            \u9017\u53f7\u8868\u8fbe\u5f0f\u7684\u8fd8\u6709\u4e00\u4e2a\u4f5c\u7528\u5c31\u662f\u5206\u5272\u51fd\u6570\u7684\u53c2\u6570\u5217\u8868..", "\n            E1, E2, \u2026, En", "\n            \u4e0a\u9762\u8fd9\u4e2a\u8868\u793a\u5f0f\u7684\u5de6\u53f3\u662f,E1, E2,\u2026 En\u7684\u503c\u88ab\u5206\u522b\u8ba1\u7b97\u51fa\u6765, En\u8ba1\u7b97\u51fa\u6765\u7684\u7ed3\u6784\u8d4b\u7ed9\u6574\u4e2a\u9017\u53f7\u8868\u8fbe\u5f0f", "\n            c=a,b; / *yields c=a* /", "\n            d=(a,b); /* d =b */", "            \u7b2c7\u9898: (a)", "\n            ptr\u662f\u4e00\u4e2a\u6570\u7ec4\u7684\u6307\u9488, \u8be5\u6570\u7ec4\u67093\u4e2aint\u6210\u5458", "            \u7b2c8\u9898: (c)", "\n            f1\u663e\u7136\u6709\u95ee\u9898, \u5b83\u8fd4\u56de\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u6307\u9488, \u5c40\u90e8\u53d8\u91cf\u662f\u4fdd\u5b58\u5728stack\u4e2d\u7684,\u9000\u51fa\u51fd\u6570\u540e, \u5c40\u90e8\u53d8\u91cf\u5c31\u9500\u6bc1\u4e86, \u4fdd\u7559\u5176\u6307\u9488\u6ca1\u6709\u610f\u4e49,", "\n            \u56e0\u4e3a\u5176\u6307\u5411\u7684stack\u7a7a\u95f4\u53ef\u80fd\u88ab\u5176\u4ed6\u53d8\u91cf\u8986\u76d6\u4e86", "\n            f2\u4e5f\u6709\u95ee\u9898, ptr\u662f\u5c40\u90e8\u53d8\u91cf, \u672a\u521d\u59cb\u5316, \u5b83\u7684\u503c\u662f\u672a\u77e5\u7684, *ptr\u4e0d\u77e5\u9053\u6307\u5411\u54ea\u91cc\u4e86,", "\n            \u76f4\u63a5\u7ed9*ptr\u8d4b\u503c\u53ef\u80fd\u4f1a\u8986\u76d6\u91cd\u8981\u7684\u7cfb\u7edf\u53d8\u91cf, \u8fd9\u5c31\u662f\u901a\u5e38\u8bf4\u7684\u91ce\u6307\u9488\u7684\u4e00\u79cd", "            \u7b2c9\u9898: (b)", "\n            sizeof \u64cd\u4f5c\u7b26\u7ed9\u51fa\u5176\u64cd\u4f5c\u6570\u9700\u8981\u5360\u7528\u7684\u7a7a\u95f4\u5927\u5c0f, \u5b83\u662f\u5728\u7f16\u8bd1\u65f6\u5c31\u53ef\u786e\u5b9a\u7684, \u6240\u4ee5\u5176\u64cd\u4f5c\u6570\u5373\u4f7f\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f,", "\n            \u4e5f\u4e0d\u9700\u8981\u5728\u8fd0\u884c\u65f6\u8fdb\u884c\u8ba1\u7b97.( ++i + ++ i )\u662f\u4e0d\u4f1a\u6267\u884c\u7684, \u6240\u4ee5i\u7684\u503c\u8fd8\u662f3", "            \u7b2c10\u9898: (a)", "\n            \u5f88\u663e\u7136\u9009a.", "\n            f1\u4ea4\u6362*p \u548c q\u7684\u503c, f1\u6267\u884c\u5b8c\u540e, *p \u548c q\u7684\u503c\u7684\u786e\u4ea4\u6362\u4e86, \u4f46q\u7684\u6539\u53d8\u4e0d\u4f1a\u5f71\u54cd\u5230b\u7684\u6539\u53d8, *p \u5b9e\u9645\u4e0a\u5c31\u662fa", "\n            \u6240\u4ee5\u6267\u884cf1\u540e, a=b=5", "\n            \u8fd9\u9053\u9898\u8003\u67e5\u7684\u77e5\u8bc6\u8303\u56f4\u5f88\u5e7f,\u5305\u62ectypedef\u81ea\u5b9a\u4e49\u7c7b\u578b,\u51fd\u6570\u6307\u9488,\u6307\u9488\u6570\u7ec4void(*p[ 2 ]) ( int *, int);", "\n            \u5b9a\u4e49\u4e86\u4e00\u4e2a\u51fd\u6570\u6307\u9488\u7684\u6570\u7ec4p,p\u6709\u4e24\u4e2a\u6307\u9488\u5143\u7d20. \u5143\u7d20\u662f\u51fd\u6570\u7684\u6307\u9488, \u51fd\u6570\u6307\u9488\u6307\u5411\u7684\u51fd\u6570\u662f\u4e00\u4e2a\u5e262\u4e2a\u53c2\u6570,\u8fd4\u56devoid\u7684\u51fd\u6570,", "\n            \u6240\u5e26\u7684\u4e24\u4e2a\u53c2\u6570\u662f\u6307\u5411\u6574\u578b\u7684\u6307\u9488, \u548c\u6574\u578b", "\n            p[ 0 ] = f1; p[ 1 ] = f2 contain address of function .function name", "\n            without parenthesis represent address of function Value and address", "\n            of variable is passed to function only argument that is effected is", "\n            a (address is passed). Because of call by value f1, f2 can not", "\n            effect b", "            \u7b2c11\u9898: (a)", "            \u8003\u67e5\u2013\u64cd\u4f5c\u548c\u9012\u5f52\u8c03\u7528,\u4ed4\u7ec6\u5206\u6790\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86", "            \u7b2c12\u9898: (c)", "\n            \u5efa\u8bae\u4e0d\u4f1a\u7684\u770b\u770bC\u4e13\u5bb6\u7f16\u7a0b", "\n            \u4ece\u5de6\u5f80\u6709, \u9047\u5230\u62ec\u53f7\u505c\u4e0b\u6765, \u5c06\u7b2c\u4e00\u4e2a\u62ec\u53f7\u91cc\u7684\u4e1c\u897f\u770b\u6210\u4e00\u4e2a\u6574\u4f53 ", "            \u7b2c13\u9898: (c)", "\n            \u8003\u67e5\u4ec0\u4e48\u65f6\u5019\u6570\u7ec4\u5c31\u662f\u6307\u9488.\u5bf9\u67d0\u4e9b\u7c7b\u578bT\u800c\u8a00, \u5982\u679c\u4e00\u4e2a\u8868\u8fbe\u5f0f\u662f T[] (T\u7684\u6570\u7ec4),", "\n            \u8fd9\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\u5b9e\u9645\u4e0a\u5c31\u662f\u6307\u5411\u8be5\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u6307\u9488.\u6240\u4ee5(buf+1)[5]\u5b9e\u9645\u4e0a\u5c31\u662f*(buf +6)\u6216\u8005buf[6]", "            \u7b2c14\u9898: (b)", "            sizeof(int)\u7684\u503c\u662f2,\u6240\u4ee5p+=sizeof(int) \u6307\u5411 argv[2],\u8fd9\u70b9\u4f30\u8ba1\u5927\u5bb6\u90fd\u6ca1\u6709\u4ec0\u4e48\u7591\u95ee", "\n            (p+=sizeof(int))[-1] \u6307\u5411 argv[1],\u80fd\u7406\u89e3\u5417, \u56e0\u4e3a(p+=sizeof(int))[-1] \u5c31\u76f8\u5f53\u4e8e", "\n            (p+=2)[-1] ,\u4e5f\u5c31\u662f(p+2-1)", "            \u7b2c15\u9898: (c)", "\n            \u5728C\u7f16\u8bd1\u5668\u901a\u5e38\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u5904\u7406\u53ef\u53d8\u53c2\u6570\u7684\u5b8f, \u4ee5\u5c4f\u853d\u4e0d\u540c\u7684\u786c\u4ef6\u5e73\u53f0\u9020\u6210\u7684\u5dee\u5f02,", "\n            \u589e\u52a0\u7a0b\u5e8f\u7684\u53ef\u79fb\u690d\u6027\u3002\u8fd9\u4e9b\u5b8f\u5305\u62ecva_start\u3001va_arg\u548cva_end\u7b49\u3002", "\n            \u91c7\u7528ANSI\u6807\u51c6\u5f62\u5f0f\u65f6, \u53c2\u6570\u4e2a\u6570\u53ef\u53d8\u7684\u51fd\u6570\u7684\u539f\u578b\u58f0\u660e\u662f\uff1atype funcname(type para1, type para2,", "\n            \u2026)", "\n            \u8fd9\u79cd\u5f62\u5f0f\u81f3\u5c11\u9700\u8981\u4e00\u4e2a\u666e\u901a\u7684\u5f62\u5f0f\u53c2\u6570, \u540e\u9762\u7684\u7701\u7565\u53f7\u4e0d\u8868\u793a\u7701\u7565, \u800c\u662f\u51fd\u6570\u539f\u578b\u7684\u4e00\u90e8\u5206\u3002type\u662f\u51fd\u6570\u8fd4\u56de\u503c\u548c\u5f62\u5f0f\u53c2\u6570\u7684\u7c7b\u578b\u3002", "\n            \u4e0d\u540c\u7684\u7f16\u8bd1\u5668, \u5bf9\u8fd9\u4e2a\u53ef\u53d8\u957f\u53c2\u6570\u7684\u5b9e\u73b0\u4e0d\u4e00\u6837 , gcc4.x\u4e2d\u662f\u5185\u7f6e\u51fd\u6570.", "\n            \u5173\u4e8e\u53ef\u53d8\u957f\u53c2\u6570,\u53ef\u53c2\u9605 ", "http://www.upsdn.net/html/2004-11/26.html", "http://www.upsdn.net/html/2004-11/24.html", "            \u7a0b\u5e8f\u5206\u6790", "\n            va_list p; /*\u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf ,\u4fdd\u5b58 \u51fd\u6570\u53c2\u6570\u5217\u8868 \u7684\u6307\u9488*/", "\n            va_start( p , n); /*\u7528va_start\u5b8f \u521d\u59cb\u5316\u53d8\u91cfp, va_start\u5b8f\u7684\u7b2c2\u4e2a\u53c2\u6570n, \u662f\u4e00\u4e2a\u56fa\u5b9a\u7684\u53c2\u6570,", "\n            \u5fc5\u987b\u662f\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u7684", "\n            \u53d8\u957f\u51fd\u6570\u7684\u6700\u540e\u4e00\u4e2a\u5165\u6808\u7684\u53c2\u6570\u4e5f\u5c31\u662f\u8c03\u7528\u7684\u65f6\u5019\u53c2\u6570\u5217\u8868\u91cc\u7684\u7b2c1\u4e2a\u53c2\u6570*/", "\n            for (; j{", "\n            i = va_arg( p , int); /*va_arg\u53d6\u51fa\u5f53\u524d\u7684\u53c2\u6570,\u5e76\u8ba4\u4e3a\u53d6\u51fa\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u6574\u6570(int) */", "\n            for (; i; i &=i-1 ) /*\u5224\u65ad\u53d6\u51fa\u7684i\u662f\u5426\u4e3a0*/", "\n            ++k; /* \u5982\u679ci\u4e0d\u4e3a0, k\u81ea\u52a0, i\u4e0ei-1\u8fdb\u884c\u4e0e\u903b\u8f91\u8fd0\u7b97, \u76f4\u5230i \u4e3a0", "\n            \u8fd9\u662f\u4e00\u4e2a\u6280\u5de7, \u4e0b\u9762\u4f1a\u8c08\u5230\u5b83\u7684\u529f\u80fd*/", "\n            }", "            \u5f53\u6211\u4eec\u8c03\u7528ripple\u51fd\u6570\u65f6, \u4f20\u9012\u7ed9ripple\u51fd\u6570\u7684 \u53c2\u6570\u5217\u8868\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570n\u7684\u503c\u662f3. va_start", "\n            \u521d\u59cb\u5316p\u58eb\u6c14\u6307\u5411\u7b2c\u4e00\u4e2a\u672a\u547d\u540d\u7684\u53c2\u6570(n\u662f\u6709\u540d\u5b57\u7684\u53c2\u6570) ,\u4e5f\u5c31\u662f is 5 (\u7b2c\u4e00\u4e2a). \u6bcf\u6b21\u5bf9 va_arg\u7684\u8c03\u7528,", "\n            \u90fd\u5c06\u8fd4\u56de\u4e00\u4e2a\u53c2\u6570, \u5e76\u4e14\u628a p \u6307\u5411\u4e0b\u4e00\u4e2a\u53c2\u6570. va_arg \u7528\u4e00\u4e2a\u7c7b\u578b\u540d\u6765\u51b3\u5b9a\u8fd4\u56de\u7684\u53c2\u6570\u662f\u4f55\u79cd\u7c7b\u578b,\u4ee5\u53ca\u5728", "\n            var_arg\u7684\u5185\u90e8\u5b9e\u73b0\u4e2d\u51b3\u5b9a\u79fb\u52a8\u591a\u5927\u7684\u8ddd\u79bb\u624d\u5230\u8fbe\u4e0b\u4e00\u4e2a\u53c2\u6570", "\n            (; i; i&=i-1) k++ /* \u8ba1\u7b97i\u6709\u591a\u5c11bit\u88ab\u7f6e1 */", "\n            5\u7528\u4e8c\u8fdb\u5236\u8868\u793a\u662f (101) 2", "\n            7\u7528\u4e8c\u8fdb\u5236\u8868\u793a (111) 3", "\n            \u6240\u4ee5 k \u8fd4\u56de 5(2+3),\u4e5f\u5373\u672c\u9898\u5e94\u8be5\u9009c", "\n            \u4e3e\u4e2a\u4f8b\u5b50, \u5c31\u5f88\u597d\u7406\u89e3\u4e86", "\n            \u4ee4 i= 9 = 1001", "\n            i-1 = 1000", "\n            (i-1) +1 = i", "\n            1000", "\n            +1", "\n            1001", "\n            \u56e0\u4e3ai\u4e0ei-1\u7684\u6700\u53f3\u8fb9\u7684\u90a3\u4f4d(\u6700\u4f4e\u4f4d) \u80af\u5b9a\u662f\u4e0d\u540c, \u5982\u679ci1,i-1\u80af\u5b9a\u662f0, \u53cd\u4e4b\u4ea6\u7136. i & i-1 \u8fd9\u4e2a\u8fd0\u7b97,", "\n            \u5728\u4e8c\u76f8\u8865\u7684\u6570\u5b57\u7cfb\u7edf\u4e2d, \u5c06\u4f1a\u6d88\u9664\u6700\u53f3\u8fb9\u76841\u4f4d", "            \u7b2c16\u9898: (b)", "\n            \u7b54\u6848\u662f (b)", "\n            \u76f8\u4f20\u9ad8\u65af\u5c0f\u5b66\u4e00\u5e74\u7ea7\u7684\u65f6\u5019\u5c31\u4f1a\u505a\u8fd9\u7c7b\u7b49\u6bd4\u6570\u5217\u7684\u9898\u76ee\u4e86.\u8fd9\u9053\u9898\u8003\u67e5\u7684\u662f\u9759\u6001\u53d8\u91cf\u7684\u77e5\u8bc6,\u5f53\u6bcf\u6b21\u8c03\u7528\u5b8c\u51fd\u6570\u4e4b\u540e,\u9759\u6001\u53d8\u91cf\u7684\u503c\u4e0d\u4f1a\u4e22\u5931,\u8fd9\u4e0e\u6808\u4e2d\u7684\u4e34\u65f6\u5c40\u90e8\u53d8\u91cf\u660e\u663e\u4e0d\u540c\u7684\u5730\u65b9.", "\n            \u6240\u4ee5,\u7b2c\u4e00\u6b21\u8c03\u7528counter(0)\u4e4b\u540e,count =0", "\n            \u7b2c\u4e8c\u6b21\u8c03\u7528 counter(1)\u540e count = 0+1;", "\n            \u7b2c\u4e09\u6b21\u8c03\u7528 counter(2) count = 1+2; /* count = count +i */", "\n            \u7b2c\u56db\u6b21\u8c03\u7528 counter(3) count = 3+3;", "\n            \u7b2c\u4e94\u6b21\u8c03\u7528 counter(4) count = 6+4;", "\n            \u7b2c\u516d\u6b21\u8c03\u7528 counter(5) count = 10+5;", "\n            \u547d\u9898\u4eba\u4fe1\u606f Ashok K. Pathak a member ( Research Staff ) at Bharat", "\n            Electronics Limited (CRL), Ghaziabad. He has been developing", "\n            embedded application for the past five years .Ashok holds a M.E in", "\n            computer science and engineering. Ashok recently completed a book", "\n            about\u2019 \u201cAdvanced Test in C and Embedded System Programming\u201d,", "\n            Published by BPB , ND. "], "title": "C\u8bed\u8a00\u7b14\u8bd5\u9898\u76ee\u53ca\u53c2\u8003\u7b54\u6848-\u5d4c\u5165\u5f0f\u7a0b\u5e8f\u5458-\u5b89\u5fbd\u7528\u53cb\u8f6f\u4ef6\u6709\u9650\u516c\u53f8"},
{"contents": ["\u30101 \u4f7f\u7528\u5b8f\u3011", "\n1.1", "\n   #ifdef NDEBUG", "\n    #define TRACE(S) S", "\n   #else", "\n    #define TRACE(S) printf(\u201c%s;\\n\u201d, #S); S", "\n   #endif", "\n\u95ee\uff1a\u4ee5\u4e0aTRACE()\u5b8f\u7684\u4f5c\u7528\u662f\u4ec0\u4e48\uff1f", "\n1.2 #error\u7684\u4f5c\u7528\uff1f", "\n1.3 \u5b9a\u4e49\u4e00\u4e2a\u5b8f\uff0c\u6c42\u51fa\u7ed9\u5b9a\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u7684\u4e2a\u6570", "\n#define NELEMENTS(array) ??", "\n1.4 \u5b9a\u4e49\u4e00\u4e2a\u5b8f\uff0c\u6c42\u51fa\u7ed9\u5b9a\u7ed3\u6784\u4e2d\u7ed9\u5b9a\u6210\u5458\u7684\u504f\u79fb\u91cf", "\n#define OFFSET(structure, member) ?? ", "\u30102 \u6570\u636e\u58f0\u660e\u548c\u5b9a\u4e49\u3011", "\n\u7ed9\u5b9a\u4ee5\u4e0b\u7c7b\u578b\u7684\u53d8\u91cfa\u7684\u5b9a\u4e49\u5f0f\uff1a", "\na) An integer", "\nb) A pointer to an integer", "\nc) A pointer to a pointer to an integer", "\nd) An array of 10 integers", "\ne) An array of 10 pointers to integers", "\nf) A pointer to an array of 10 integers", "\ng) A pointer to a ", " that takes an integer as an argument and returns an integer", "\nh) An array of ten pointers to ", "s that take an integer argument and return an integer", "\n\u30103 \u590d\u6742\u7c7b\u578b\uff081\uff09\u3011", "\n\u6709\u5982\u4e0b\u8868\u8fbe\u5f0f\uff1a", "   char (*(*x())[])();", "\n\u8bf7\u7528\u6587\u5b57\u63cf\u8ff0x\u662f\u4ec0\u4e48\u3002 ", "\u30104 \u590d\u6742\u7c7b\u578b\uff082\uff09\u3011", "\njmp_buf\u7684\u5b9a\u4e49\uff1a", "\n   typedef struct _jmp_buf", "\n   {", "\n    REG_SET  reg;", "\n    int      extra[3];", "\n   } jmp_buf[1];", "\nsetjmp\u51fd\u6570\u7684\u539f\u578b\uff1a", "\n   extern int setjmp (jmp_buf __env);", "\n\u95ee\uff1a\u8c03\u7528setjmp\u65f6\u4f20\u9012__env\u7684\u5185\u5bb9\uff0c\u8fd8\u662f\u4f20\u9012\u6307\u9488\uff1f ", "\u30105 \u5934\u6587\u4ef6\u3011", "\n\u95ee\uff1a\u4e3a\u4ec0\u4e48\u6807\u51c6\u5934\u6587\u4ef6\u90fd\u6709\u7c7b\u4f3c\u4ee5\u4e0b\u7684\u7ed3\u6784\uff1f", "\n   #ifndef __INCvxWorksh", "\n   #define __INCvxWorksh", "\n   #ifdef __cplusplus", "\n   extern \u201cC\u201d {", "\n   #endif", "\n   /*\u2026*/", "\n   #ifdef __cplusplus", "\n   }", "\n   #endif", "\n   #endif /* __INCvxWorksh */", "\n\u30106 static\u5173\u952e\u5b57\u3011", "\n\u8bf7\u8bf4\u51fastatic\u5173\u952e\u5b57\u76843\u79cd\u7528\u5904\uff1a", "\n\uff081\uff09\u7528\u4e8e\u5168\u5c40\u53d8\u91cf\uff1b", "\n\uff082\uff09\u7528\u4e8e\u5c40\u90e8\u53d8\u91cf\uff1b", "\n\uff083\uff09\u7528\u4e8e\u51fd\u6570\u3002", "\n/* file.c */", "\nstatic int a;", "\nint b;", "\nstatic int fn()", "\n{", "\nstatic int x;", "\nint y;", "\n} ", "\u30107 const\u5173\u952e\u5b57\u3011", "\n7.1 const\u5173\u952e\u5b57\u7684\u610f\u4e49\u662f\u4ec0\u4e48\uff1f", "\n7.2 \u89e3\u91ca\u4ee5\u4e0b\u7684\u53d8\u91cf\u5b9a\u4e49\uff1a", "\nconst int a1;", "\nint const a2;", "\nconst int *a3;", "\nint * const a4;", "\nint const * const a5;", "\n\u30108 volatile\u5173\u952e\u5b57\u3011", "\n8.1 volatile\u610f\u4e49\uff1f\u4f8b\u5982", "\nvolatile int *p;", "\n8.2 volatile\u80fd\u548cconst\u4e00\u8d77\u4f7f\u7528\u5417\uff1f\u4f8b\u5982", "\nvolatile const int *p;", "\n\u30109 sizeof()\u3011", "\n\u6709\u4ee5\u4e0b\u5b9a\u4e49\uff1a", "\n   char *pmsg = \u201cA\u201d;", "\n   char msg[] = \u201cA\u201d;", "\n   char ch    = \u2018A\u2019;", "\n\u95ee\uff1a", "\nsizeof(pmsg) = ?", "\nsizeof(msg)  = ?", "\nsizeof(\u201cA\u201d)  = ?", "\nsizeof(ch)   = ?", "\nsizeof(\u2018A\u2019)  = ? \uff08\u5728C++\u4e2d\u7b49\u4e8e\u591a\u5c11\uff1f\uff09", "\nvoid f(char param[100])", "\n{", "\n// sizeof(param) = ?", "\n}", "\n\u301010 \u5b57\u7b26\u4e32\u3011", "\n\u6709\u4ee5\u4e0b\u4ee3\u7801", "\n   char *pmsg = \u201chello, world!\u201d;", "\n   strcpy(pmsg, \u201chi, there.\u201d);", "\n\u8bd5\u8bc4\u8bba\u8be5\u4ee3\u7801\u3002 ", "\u301011 \u6df7\u5408\u8fd0\u7b97\u3011", "\n\u6709\u4ee5\u4e0b\u4ee3\u7801\uff1a", "\nvoid foo()", "\n{", "\nunsigned int a = 6;", "\nint b = -20;", "\n(a+b > 6) ? puts(\u201c> 6\u2033) : puts(\u201d \n}", "\n\u8bf7\u95ee\u8c03\u7528foo()\u7684\u8f93\u51fa\uff1f", "\n\u301012 \u5185\u5b58\u8bbf\u95ee\u3011", "\n\u6709\u4ee5\u4e0b\u4ee3\u7801\uff1a", "\nvoid fn()", "\n{", "\n  int a[100];", "\n  int *p;", "\n    p = (int *)((unsigned int)a + 1);", "\n    printf(\u201cp=0x%x\\n\u201d, *p);", "\n}", "\n\u8bd5\u8bc4\u8bba\u4ee5\u4e0a\u4ee3\u7801\u3002", "\n\u301013 C\u5e93\u51fd\u6570\u3011", "\n\u8bf7\u8bf4\u660e\u4ee5\u4e0b\u51fd\u6570\u7684\u610f\u4e49\uff1a", "\nvoid perror(const char *__s);", "\nfdprintf(int, const char *, \u2026);", "\nisspace(), isxdigit(), strerr(), sprintf() "], "title": "c\u8bed\u8a00\u5e38\u89c1\u7b14\u8bd5\u9898\u603b\u7ed3"},
{"contents": ["\uff08\u4e00\uff09\u4e3b\u8981\u9898\u578b\uff1a", "\n\u9009\u62e9\u9898\uff08\u6bcf\u98983\u5206\uff0c\u7ea620\u9898\u5427\uff0c\u5177\u4f53\u4ec0\u4e48\u9898\u90fd\u6709\uff0c\u5305\u62ec\u7f51\u7edc\u3001C\u4ee5\u53ca\u5176\u4ed6\u786c\u4ef6\u65b9\u9762\u7684\u57fa\u7840\u77e5\u8bc6\uff09\uff1b", "\n\u7b80\u7b54\u9898\uff08\u603b\u5206\u7ea640\u5206\uff0c\u4e3b\u8981\u5305\u62ec\u8bfbC\u7a0b\u5e8f\u7ed9\u51fa\u7ed3\u679c\u540c\u65f6\u7ed9\u51fa\u9002\u5f53\u7684\u89e3\u91ca\u53ca\u5176\u4ed6\u4e00\u4e9b\u786c\u4ef6\u65b9\u9762\u7684\u95ee\u9898\uff09\uff1b", "\n\uff08\u4e8c\uff09\u4e3b\u8981\u5185\u5bb9\uff1a", "\n1\u3001\u9898\u76ee\u6982\u8ff0", "\n\uff081\uff09C\u65b9\u9762\uff1a", "\n\u8fd9\u4e00\u90e8\u5206\u6bd4\u8f83\u7b80\u5355\uff0c\u4e3b\u8981\u662f\u7c7b\u4f3c\u6307\u9488\u7a7a\u95f4\u5206\u914d\u3001strcpy\uff08\u4e3b\u8981\u662f\u8003\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u5426\u6709\u7a7a\u95f4\uff0c\u7ed3\u5408\u6307\u9488\u7a7a\u95f4\u5206\u914d\u8003\uff09\u3001\u4e8c\u91cd\u6307\u9488\u3001\uff0b\uff0b\u53ca\u2015\u2015\uff08\u5148\u52a0\u540e\u52a0\uff0c\u5148\u51cf\u540e\u51cf\uff09\u7b49\uff0c\u8fd8\u6709\u5c31\u662fvolatile\u53caregister\u4fee\u9970\u7b26\u7684\u610f\u601d\u3002", "\n\uff082\uff09\u5176\u4ed6\u65b9\u9762\uff1a", "\n\u8fd9\u4e00\u90e8\u5206\u6bd4\u8f83\u6742\uff0c\u4ec0\u4e48\u90fd\u53ef\u4ee5\u8003\u4f60\uff0c\u591a\u534a\u90fd\u662f\u57fa\u7840\u77e5\u8bc6\uff0c\u5c24\u5176\u662f\u786c\u4ef6\u65b9\u9762\uff0c\u534e\u4e3a\u7684\u4e3b\u8981\u9898\u76ee\u4e3a\uff1a\uff08\u4e3b\u8981\u5217\u51faC\u4ee5\u5916\u7684\u9898\u76ee\uff0c\u6211\u8ba4\u4e3aC\u662f\u975e\u5e38\u7b80\u5355\u7684\uff0c^_^\uff09", "\n2\u3001\u5177\u4f53\u9898\u76ee", "\n\uff081\uff09\u9009\u62e9\u9898\u90e8\u5206\uff1a", "\n1\u3001255.255.254.0\u7f51\u6bb5\u6700\u591a\u80fd\u652f\u6301\u591a\u5c11\u4e3b\u673a\uff1f\uff08\u5927\u6982\u67095\u4e2a\u5907\u9009\u9879\uff09", "\n2\u300110M\u7f51\u5361\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u7269\u7406\u5c42\u91c7\u7528\u4ec0\u4e48\u7f16\u7801\uff1f(SNAP?)\uff08\u5927\u6982\u67094\u4e2a\u5907\u9009\u9879\uff09", "\n3\u3001\u6808\u4e0e\u961f\u5217\u7684\u7279\u70b9\uff1f\uff08\u5907\u9009\u5927\u6982\u53ea\u6709\u4e24\u4e2a\uff0cA\u4e3aFIFO\uff0cB\u4e3aLIFO\uff09", "\n4\u3001Cache\u7684\u5de5\u4f5c\u65b9\u5f0f\u5212\u5206\uff1f\uff08\u5927\u6982\u4e5f\u67094\u4e2a\u7b54\u6848\uff0c\u5927\u6982\u662f\uff1awrite-none\uff0cwrite-all\uff0cwrite-through\uff0cwrite-back\uff09\u3002", "\n5\u3001\u4ec0\u4e48\u53ebNMI\u4e2d\u65ad\uff1f\uff08\u56db\u4e2a\u5907\u9009\u9879\uff09", "\n6\u3001RISC\u4e3b\u8981\u6027\u80fd\u53ca\u7279\u6027\uff1f\uff08\u5927\u6982\u67096\u4e2a\u5907\u9009\u9879\uff09", "\n7\u3001\u5728\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u6240\u8c13\u7684\u5317\u6865\u6307\u7684\u662f\u4ec0\u4e48\uff1f", "\n\uff082\uff09\u7b80\u7b54\u9898\uff1a", "\n1\u3001\u8bf4\u8bf4\u8f6e\u5de1\u4efb\u52a1\u8c03\u5ea6\u4e0e\u62a2\u5360\u5f0f\u4efb\u52a1\u8c03\u5ea6\u7684\u533a\u522b\uff1f\uff08\u5927\u6982\u4e3a8\u5206\u5427\uff0c\u8bb0\u4e0d\u6e05\u4e86\uff09", "\n2\u3001\u4ec0\u4e48\u53eb\u5b58\u50a8\u5668\u9ad8\u901f\u7f13\u5b58\u6280\u672f\uff0c\u5176\u4e3b\u8981\u76ee\u7684\uff1f\uff08\u5927\u69826\u5206\uff09", "\n3\u3001\u753b\u51fa\u8ba1\u7b97\u673a\u7ec4\u6210\u7684\u6700\u5c0f\u903b\u8f91\u6846\u56fe\u3002\uff08\u54fc\uff0c\u8fd9\u9053\u9898\u7adf\u713610\u5206\uff09", "\n4\u3001\u8c08\u8c08Volatile\u4e0eRegister\u4fee\u9970\u7b26\u7684\u4f5c\u7528\uff1f"], "title": "\u7f51\u7edc\u3001C\u4ee5\u53ca\u5176\u4ed6\u786c\u4ef6\u65b9\u9762\u7684\u9762\u8bd5\u9898"},
{"contents": ["4. static\u6709\u4ec0\u4e48\u7528\u9014\uff1f\uff08\u8bf7\u81f3\u5c11\u8bf4\u660e\u4e24\u79cd\uff09", "\n            1.\u9650\u5236\u53d8\u91cf\u7684\u4f5c\u7528\u57df", "\n            2.\u8bbe\u7f6e\u53d8\u91cf\u7684\u5b58\u50a8\u57df", "\n            7. \u5f15\u7528\u4e0e\u6307\u9488\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n            1) \u5f15\u7528\u5fc5\u987b\u88ab\u521d\u59cb\u5316\uff0c\u6307\u9488\u4e0d\u5fc5\u3002", "\n            2) \u5f15\u7528\u521d\u59cb\u5316\u4ee5\u540e\u4e0d\u80fd\u88ab\u6539\u53d8\uff0c\u6307\u9488\u53ef\u4ee5\u6539\u53d8\u6240\u6307\u7684\u5bf9\u8c61\u3002", "\n            2) \u4e0d\u5b58\u5728\u6307\u5411\u7a7a\u503c\u7684\u5f15\u7528\uff0c\u4f46\u662f\u5b58\u5728\u6307\u5411\u7a7a\u503c\u7684\u6307\u9488\u3002", "\n            8. \u63cf\u8ff0\u5b9e\u65f6\u7cfb\u7edf\u7684\u57fa\u672c\u7279\u6027", "\n            \u5728\u7279\u5b9a\u65f6\u95f4\u5185\u5b8c\u6210\u7279\u5b9a\u7684\u4efb\u52a1\uff0c\u5b9e\u65f6\u6027\u4e0e\u53ef\u9760\u6027", "\n            9. \u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u5728\u5185\u5b58\u4e2d\u662f\u5426\u6709\u533a\u522b\uff1f\u5982\u679c\u6709\uff0c\u662f\u4ec0\u4e48\u533a\u522b\uff1f", "\n            \u5168\u5c40\u53d8\u91cf\u50a8\u5b58\u5728\u9759\u6001\u6570\u636e\u5e93\uff0c\u5c40\u90e8\u53d8\u91cf\u5728\u5806\u6808", "\n            10. \u4ec0\u4e48\u662f\u5e73\u8861\u4e8c\u53c9\u6811\uff1f", "\n            \u5de6\u53f3\u5b50\u6811\u90fd\u662f\u5e73\u8861\u4e8c\u53c9\u6811 \u4e14\u5de6\u53f3\u5b50\u6811\u7684\u6df1\u5ea6\u5dee\u503c\u7684\u7edd\u5bf9\u503c\u4e0d\u5927\u4e8e1", "\n            11. \u5806\u6808\u6ea2\u51fa\u4e00\u822c\u662f\u7531\u4ec0\u4e48\u539f\u56e0\u5bfc\u81f4\u7684\uff1f", "\n            \u6ca1\u6709\u56de\u6536\u5783\u573e\u8d44\u6e90", "\n            12. \u4ec0\u4e48\u51fd\u6570\u4e0d\u80fd\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff1f", "\n            constructor", "\n            13. \u5192\u6ce1\u6392\u5e8f\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u4ec0\u4e48\uff1f", "\n            O(n^2)", "\n            14. \u5199\u51fafloat x \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684if\u8bed\u53e5\u3002", "\n            if(x>0.000001&&x\n            16. Internet\u91c7\u7528\u54ea\u79cd\u7f51\u7edc\u534f\u8bae\uff1f\u8be5\u534f\u8bae\u7684\u4e3b\u8981\u5c42\u6b21\u7ed3\u6784\uff1f", "\n            tcp/ip \u5e94\u7528\u5c42/\u4f20\u8f93\u5c42/\u7f51\u7edc\u5c42/\u6570\u636e\u94fe\u8def\u5c42/\u7269\u7406\u5c42", "\n            17. Internet\u7269\u7406\u5730\u5740\u548cIP\u5730\u5740\u8f6c\u6362\u91c7\u7528\u4ec0\u4e48\u534f\u8bae\uff1f", "\n            ARP (Address Resolution Protocol)\uff08\u5730\u5740\u89e3\u6790\u5354\u8b70\uff09", "\n            18.IP\u5730\u5740\u7684\u7f16\u7801\u5206\u4e3a\u54ea\u4fe9\u90e8\u5206\uff1f", "\n            IP\u5730\u5740\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff0c\u7f51\u7edc\u53f7\u548c\u4e3b\u673a\u53f7\u3002\u4e0d\u8fc7\u662f\u8981\u548c\u201c\u5b50\u7f51\u63a9\u7801\u201d\u6309\u4f4d\u4e0e\u4e0a\u4e4b\u540e\u624d\u80fd\u533a", "\n            \u5206\u54ea\u4e9b\u662f\u7f51\u7edc\u4f4d\u54ea\u4e9b\u662f\u4e3b\u673a\u4f4d\u3002", "\n            2.\u7528\u6237\u8f93\u5165M,N\u503c\uff0c\u4ece1\u81f3N\u5f00\u59cb\u987a\u5e8f\u5faa\u73af\u6570\u6570\uff0c\u6bcf\u6570\u5230M\u8f93\u51fa\u8be5\u6570\u503c\uff0c\u76f4\u81f3\u5168\u90e8\u8f93\u51fa\u3002\u5199", "\n            \u51faC\u7a0b\u5e8f\u3002", "\n            \u5faa\u73af\u94fe\u8868\uff0c\u7528\u53d6\u4f59\u64cd\u4f5c\u505a", "\n            3.\u4e0d\u80fd\u505aswitch()\u7684\u53c2\u6570\u7c7b\u578b\u662f\uff1a", "\n            switch\u7684\u53c2\u6570\u4e0d\u80fd\u4e3a\u5b9e\u578b\u3002", "\n            \u83ef\u70ba", "\n            1\u3001\u5c40\u90e8\u53d8\u91cf\u80fd\u5426\u548c\u5168\u5c40\u53d8\u91cf\u91cd\u540d\uff1f", "\n            \u7b54\uff1a\u80fd\uff0c\u5c40\u90e8\u4f1a\u5c4f\u853d\u5168\u5c40\u3002\u8981\u7528\u5168\u5c40\u53d8\u91cf\uff0c\u9700\u8981\u4f7f\u7528\"::\"", "\n            \u5c40\u90e8\u53d8\u91cf\u53ef\u4ee5\u4e0e\u5168\u5c40\u53d8\u91cf\u540c\u540d\uff0c\u5728\u51fd\u6570\u5185\u5f15\u7528\u8fd9\u4e2a\u53d8\u91cf\u65f6\uff0c\u4f1a\u7528\u5230\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u800c", "\n            \u4e0d\u4f1a\u7528\u5230\u5168\u5c40\u53d8\u91cf\u3002\u5bf9\u4e8e\u6709\u4e9b\u7f16\u8bd1\u5668\u800c\u8a00\uff0c\u5728\u540c\u4e00\u4e2a\u51fd\u6570\u5185\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\u540c\u540d\u7684\u5c40\u90e8\u53d8", "\n            \u91cf\uff0c\u6bd4\u5982\u5728\u4e24\u4e2a\u5faa\u73af\u4f53\u5185\u90fd\u5b9a\u4e49\u4e00\u4e2a\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u800c\u90a3\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u5c31\u5728\u90a3", "\n            \u4e2a\u5faa\u73af\u4f53\u5185", "\n            2\u3001\u5982\u4f55\u5f15\u7528\u4e00\u4e2a\u5df2\u7ecf\u5b9a\u4e49\u8fc7\u7684\u5168\u5c40\u53d8\u91cf\uff1f", "\n            \u7b54\uff1aextern", "\n            \u53ef\u4ee5\u7528\u5f15\u7528\u5934\u6587\u4ef6\u7684\u65b9\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u7528extern\u5173\u952e\u5b57\uff0c\u5982\u679c\u7528\u5f15\u7528\u5934\u6587\u4ef6\u65b9\u5f0f\u6765\u5f15\u7528\u67d0\u4e2a", "\n            \u5728\u5934\u6587\u4ef6\u4e2d\u58f0\u660e\u7684\u5168\u5c40\u53d8\u7406\uff0c\u5047\u5b9a\u4f60\u5c06\u90a3\u4e2a\u53d8\u5199\u9519\u4e86\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4\u4f1a\u62a5\u9519\uff0c\u5982\u679c\u4f60", "\n            \u7528extern\u65b9\u5f0f\u5f15\u7528\u65f6\uff0c\u5047\u5b9a\u4f60\u72af\u4e86\u540c\u6837\u7684\u9519\u8bef\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4\u4e0d\u4f1a\u62a5\u9519\uff0c\u800c\u5728\u8fde\u63a5\u671f", "\n            \u95f4\u62a5\u9519", "\n            3\u3001\u5168\u5c40\u53d8\u91cf\u53ef\u4e0d\u53ef\u4ee5\u5b9a\u4e49\u5728\u53ef\u88ab\u591a\u4e2a.C\u6587\u4ef6\u5305\u542b\u7684\u5934\u6587\u4ef6\u4e2d\uff1f\u4e3a\u4ec0\u4e48\uff1f", "\n            \u7b54\uff1a\u53ef\u4ee5\uff0c\u5728\u4e0d\u540c\u7684C\u6587\u4ef6\u4e2d\u4ee5static\u5f62\u5f0f\u6765\u58f0\u660e\u540c\u540d\u5168\u5c40\u53d8\u91cf\u3002", "\n            \u53ef\u4ee5\u5728\u4e0d\u540c\u7684C\u6587\u4ef6\u4e2d\u58f0\u660e\u540c\u540d\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u524d\u63d0\u662f\u5176\u4e2d\u53ea\u80fd\u6709\u4e00\u4e2aC\u6587\u4ef6\u4e2d\u5bf9\u6b64\u53d8\u91cf\u8d4b", "\n            \u521d\u503c\uff0c\u6b64\u65f6\u8fde\u63a5\u4e0d\u4f1a\u51fa\u9519", "\n            4\u3001\u8bed\u53e5for( \uff1b1 \uff1b)\u6709\u4ec0\u4e48\u95ee\u9898\uff1f\u5b83\u662f\u4ec0\u4e48\u610f\u601d\uff1f", "\n            \u7b54\uff1a\u548cwhile(1)\u76f8\u540c\u3002", "\n            5\u3001do\u2026\u2026while\u548cwhile\u2026\u2026do\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n            \u7b54\uff1a\u524d\u4e00\u4e2a\u5faa\u73af\u4e00\u904d\u518d\u5224\u65ad\uff0c\u540e\u4e00\u4e2a\u5224\u65ad\u4ee5\u540e\u518d\u5faa\u73af", "\n            6\u3001\u8bf7\u5199\u51fa\u4e0b\u5217\u4ee3\u7801\u7684\u8f93\u51fa\u5185\u5bb9", "\n            #include", "\n            main()", "\n            {", "\n            int a,b,c,d;", "\n            a=10;", "\n            b=a++;", "\n            c=++a;", "\n            d=10*a++;", "\n            printf(\"b\uff0cc\uff0cd\uff1a%d\uff0c%d\uff0c%d\"\uff0cb\uff0cc\uff0cd\uff09;", "\n            return 0;", "\n            }", "\n            \u7b54\uff1a10\uff0c12\uff0c120", "\n            1\u3001static\u5168\u5c40\u53d8\u91cf\u4e0e\u666e\u901a\u7684\u5168\u5c40\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1fstatic\u5c40\u90e8\u53d8\u91cf\u548c\u666e\u901a\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0", "\n            \u4e48\u533a\u522b\uff1fstatic\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n            \u5168\u5c40\u53d8\u91cf(\u5916\u90e8\u53d8\u91cf)\u7684\u8bf4\u660e\u4e4b\u524d\u518d\u51a0\u4ee5static \u5c31\u6784\u6210\u4e86\u9759\u6001\u7684\u5168\u5c40\u53d8\u91cf\u3002\u5168\u5c40\u53d8\u91cf\u672c\u8eab", "\n            \u5c31\u662f\u9759\u6001\u5b58\u50a8\u65b9\u5f0f\uff0c \u9759\u6001\u5168\u5c40\u53d8\u91cf\u5f53\u7136\u4e5f\u662f\u9759\u6001\u5b58\u50a8\u65b9\u5f0f\u3002\u8fd9\u4e24\u8005\u5728\u5b58\u50a8\u65b9\u5f0f\u4e0a\u5e76\u65e0\u4e0d", "\n            \u540c\u3002\u8fd9\u4e24\u8005\u7684\u533a\u522b\u867d\u5728\u4e8e\u975e\u9759\u6001\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u662f\u6574\u4e2a\u6e90\u7a0b\u5e8f\uff0c\u5f53\u4e00\u4e2a\u6e90\u7a0b\u5e8f\u7531\u591a\u4e2a", "\n            \u6e90\u6587\u4ef6\u7ec4\u6210\u65f6\uff0c\u975e\u9759\u6001\u7684\u5168\u5c40\u53d8\u91cf\u5728\u5404\u4e2a\u6e90\u6587\u4ef6\u4e2d\u90fd\u662f\u6709\u6548\u7684\u3002 \u800c\u9759\u6001\u5168\u5c40\u53d8\u91cf\u5219\u9650\u5236", "\n            \u4e86\u5176\u4f5c\u7528\u57df\uff0c \u5373\u53ea\u5728\u5b9a\u4e49\u8be5\u53d8\u91cf\u7684\u6e90\u6587\u4ef6\u5185\u6709\u6548\uff0c\u5728\u540c\u4e00\u6e90\u7a0b\u5e8f\u7684\u5176\u5b83\u6e90\u6587\u4ef6\u4e2d\u4e0d\u80fd\u4f7f", "\n            \u7528\u5b83\u3002\u7531\u4e8e\u9759\u6001\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u5c40\u9650\u4e8e\u4e00\u4e2a\u6e90\u6587\u4ef6\u5185\uff0c\u53ea\u80fd\u4e3a\u8be5\u6e90\u6587\u4ef6\u5185\u7684\u51fd\u6570\u516c", "\n            \u7528\uff0c\u56e0\u6b64\u53ef\u4ee5\u907f\u514d\u5728\u5176\u5b83\u6e90\u6587\u4ef6\u4e2d\u5f15\u8d77\u9519\u8bef\u3002", "\n            \u4ece\u4ee5\u4e0a\u5206\u6790\u53ef\u4ee5\u770b\u51fa\uff0c \u628a\u5c40\u90e8\u53d8\u91cf\u6539\u53d8\u4e3a\u9759\u6001\u53d8\u91cf\u540e\u662f\u6539\u53d8\u4e86\u5b83\u7684\u5b58\u50a8\u65b9\u5f0f\u5373\u6539\u53d8\u4e86\u5b83", "\n            \u7684\u751f\u5b58\u671f\u3002\u628a\u5168\u5c40\u53d8\u91cf\u6539\u53d8\u4e3a\u9759\u6001\u53d8\u91cf\u540e\u662f\u6539\u53d8\u4e86\u5b83\u7684\u4f5c\u7528\u57df\uff0c \u9650\u5236\u4e86\u5b83\u7684\u4f7f\u7528\u8303\u56f4\u3002", "\n            static\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u4f5c\u7528\u57df\u4e0d\u540c\u3002\u4ec5\u5728\u672c\u6587\u4ef6\u3002\u53ea\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4e2d\u4f7f\u7528\u7684\u51fd\u6570\u5e94\u8be5\u8bf4", "\n            \u660e\u4e3a\u5185\u90e8\u51fd\u6570(static)\uff0c\u5185\u90e8\u51fd\u6570\u5e94\u8be5\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4e2d\u8bf4\u660e\u548c\u5b9a\u4e49\u3002\u5bf9\u4e8e\u53ef\u5728\u5f53\u524d\u6e90\u6587", "\n            \u4ef6\u4ee5\u5916\u4f7f\u7528\u7684\u51fd\u6570\uff0c\u5e94\u8be5\u5728\u4e00\u4e2a\u5934\u6587\u4ef6\u4e2d\u8bf4\u660e\uff0c\u8981\u4f7f\u7528\u8fd9\u4e9b\u51fd\u6570\u7684\u6e90\u6587\u4ef6\u8981\u5305\u542b\u8fd9\u4e2a\u5934", "\n            \u6587\u4ef6", "\n            static\u5168\u5c40\u53d8\u91cf\u4e0e\u666e\u901a\u7684\u5168\u5c40\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u5168\u5c40\u53d8\u91cf\u53ea\u521d\u4f7f\u5316\u4e00\u6b21\uff0c\u9632\u6b62\u5728", "\n            \u5176\u4ed6\u6587\u4ef6\u5355\u5143\u4e2d\u88ab\u5f15\u7528;", "\n            static\u5c40\u90e8\u53d8\u91cf\u548c\u666e\u901a\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u5c40\u90e8\u53d8\u91cf\u53ea\u88ab\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u4e0b\u4e00\u6b21", "\n            \u4f9d\u636e\u4e0a\u4e00\u6b21\u7ed3\u679c\u503c\uff1b", "\n            static\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u51fd\u6570\u5728\u5185\u5b58\u4e2d\u53ea\u6709\u4e00\u4efd\uff0c\u666e\u901a\u51fd\u6570\u5728\u6bcf\u4e2a\u88ab", "\n            \u8c03\u7528\u4e2d\u7ef4\u6301\u4e00\u4efd\u62f7\u8d1d", "\n            2\u3001\u7a0b\u5e8f\u7684\u5c40\u90e8\u53d8\u91cf\u5b58\u5728\u4e8e\uff08\u5806\u6808\uff09\u4e2d\uff0c\u5168\u5c40\u53d8\u91cf\u5b58\u5728\u4e8e\uff08\u9759\u6001\u533a \uff09\u4e2d\uff0c\u52a8\u6001\u7533\u8bf7\u6570\u636e", "\n            \u5b58\u5728\u4e8e\uff08 \u5806\uff09\u4e2d\u3002", "\n            3\u3001\u8bbe\u6709\u4ee5\u4e0b\u8bf4\u660e\u548c\u5b9a\u4e49\uff1a", "\n            typedef union {long i; int k[5]; char c;} DATE;", "\n            struct data { int cat; DATE cow; double dog;} too;", "\n            DATE max;", "\n            \u5219\u8bed\u53e5 printf(\"%d\",sizeof(struct date)+sizeof(max));\u7684\u6267\u884c\u7ed3\u679c\u662f\uff1a___52____", "\n            \u7b54\uff1aDATE\u662f\u4e00\u4e2aunion, \u53d8\u91cf\u516c\u7528\u7a7a\u95f4. \u91cc\u9762\u6700\u5927\u7684\u53d8\u91cf\u7c7b\u578b\u662fint[5], \u5360\u752820\u4e2a\u5b57\u8282.", "\n            \u6240\u4ee5\u5b83\u7684\u5927\u5c0f\u662f20", "\n            data\u662f\u4e00\u4e2astruct, \u6bcf\u4e2a\u53d8\u91cf\u5206\u5f00\u5360\u7528\u7a7a\u95f4. \u4f9d\u6b21\u4e3aint4 + DATE20 + double8 = 32.", "\n            \u6240\u4ee5\u7ed3\u679c\u662f 20 + 32 = 52.", "\n            \u5f53\u7136...\u5728\u67d0\u4e9b16\u4f4d\u7f16\u8f91\u5668\u4e0b, int\u53ef\u80fd\u662f2\u5b57\u8282,\u90a3\u4e48\u7ed3\u679c\u662f int2 + DATE10 + double8", "\n            = 20", "\n            4\u3001\u961f\u5217\u548c\u6808\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n            \u961f\u5217\u5148\u8fdb\u5148\u51fa\uff0c\u6808\u540e\u8fdb\u5148\u51fa", "\n            5\u3001\u5199\u51fa\u4e0b\u5217\u4ee3\u7801\u7684\u8f93\u51fa\u5185\u5bb9", "\n            #include", "\n            int inc(int a)", "\n            {", "\n            return(++a);", "\n            }", "\n            int multi(int*a,int*b,int*c)", "\n            {", "\n            return(*c=*a**b);", "\n            }", "\n            typedef int(FUNC1)(int in);", "\n            typedef int(FUNC2) (int*,int*,int*);", "\n            void show(FUNC2 fun,int arg1, int*arg2)", "\n            {", "\n            INCp=&inc;", "\n            int temp =p(arg1);", "\n            fun(&temp,&arg1, arg2);", "\n            printf(\"%d\\n\",*arg2);", "\n            }", "\n            main()", "\n            {", "\n            int a;", "\n            show(multi,10,&a);", "\n            return 0;", "\n            }", "\n            \u7b54\uff1a110", "\n            7\u3001\u8bf7\u627e\u51fa\u4e0b\u9762\u4ee3\u7801\u4e2d\u7684\u6240\u4ee5\u9519\u8bef", "\n            \u8bf4\u660e\uff1a\u4ee5\u4e0b\u4ee3\u7801\u662f\u628a\u4e00\u4e2a\u5b57\u7b26\u4e32\u5012\u5e8f\uff0c\u5982\u201cabcd\u201d\u5012\u5e8f\u540e\u53d8\u4e3a\u201cdcba\u201d", "\n            1\u3001#include\"string.h\"", "\n            2\u3001main()", "\n            3\u3001{", "\n            4\u3001 char*src=\"hello,world\";", "\n            5\u3001 char* dest=NULL;", "\n            6\u3001 int len=strlen(src);", "\n            7\u3001 dest=(char*)malloc(len);", "\n            8\u3001 char* d=dest;", "\n            9\u3001 char* s=src[len];", "\n            10\u3001 while(len--!=0)", "\n            11\u3001 d++=s--;", "\n            12\u3001 printf(\"%s\",dest);", "\n            13\u3001 return 0;", "\n            14\u3001}", "\n            \u7b54\uff1a", "\n            \u65b9\u6cd51\uff1a", "\n            int main(){", "\n            char* src = \"hello,world\";", "\n            int len = strlen(src);", "\n            char* dest = (char*)malloc(len+1);//\u8981\u4e3a\\0\u5206\u914d\u4e00\u4e2a\u7a7a\u95f4", "\n            char* d = dest;", "\n            char* s = &src[len-1];//\u6307\u5411\u6700\u540e\u4e00\u4e2a\u5b57\u7b26", "\n            while( len-- != 0 )", "\n            *d++=*s--;", "\n            *d = 0;//\u5c3e\u90e8\u8981\u52a0\\0", "\n            printf(\"%s\\n\",dest);", "\n            free(dest);// \u4f7f\u7528\u5b8c\uff0c\u5e94\u5f53\u91ca\u653e\u7a7a\u95f4\uff0c\u4ee5\u514d\u9020\u6210\u5185\u5b58\u6c47\u6cc4\u9732", "\n            return 0;", "\n            }", "\n            \u65b9\u6cd52\uff1a", "\n            #include", "\n            #include", "\n            main()", "\n            {", "\n            char str[]=\"hello,world\";", "\n            int len=strlen(str);", "\n            char t;", "\n            for(int i=0; i{", "\n            t=str[i];", "\n            str[i]=str[len-i-1]; str[len-i-1]=t;", "\n            }", "\n            printf(\"%s\",str);", "\n            return 0;", "\n            }", "\n            1.-1,2,7,28,,126\u8bf7\u95ee28\u548c126\u4e2d\u95f4\u90a3\u4e2a\u6570\u662f\u4ec0\u4e48\uff1f\u4e3a\u4ec0\u4e48\uff1f", "\n            \u7b2c\u4e00\u9898\u7684\u7b54\u6848\u5e94\u8be5\u662f4^3-1=63", "\n            \u89c4\u5f8b\u662fn^3-1(\u5f53n\u4e3a\u5076\u65700\uff0c2\uff0c4)", "\n            n^3+1(\u5f53n\u4e3a\u5947\u65701\uff0c3\uff0c5)", "\n            \u7b54\u6848\uff1a63", "\n            2.\u7528\u4e24\u4e2a\u6808\u5b9e\u73b0\u4e00\u4e2a\u961f\u5217\u7684\u529f\u80fd\uff1f\u8981\u6c42\u7ed9\u51fa\u7b97\u6cd5\u548c\u601d\u8def\uff01", "\n            \u8bbe2\u4e2a\u6808\u4e3aA,B, \u4e00\u5f00\u59cb\u5747\u4e3a\u7a7a.", "\n            \u5165\u961f:", "\n            \u5c06\u65b0\u5143\u7d20push\u5165\u6808A;", "\n            \u51fa\u961f:", "\n            (1)\u5224\u65ad\u6808B\u662f\u5426\u4e3a\u7a7a\uff1b", "\n            (2)\u5982\u679c\u4e0d\u4e3a\u7a7a\uff0c\u5219\u5c06\u6808A\u4e2d\u6240\u6709\u5143\u7d20\u4f9d\u6b21pop\u51fa\u5e76push\u5230\u6808B\uff1b", "\n            (3)\u5c06\u6808B\u7684\u6808\u9876\u5143\u7d20pop\u51fa\uff1b", "\n            \u8fd9\u6837\u5b9e\u73b0\u7684\u961f\u5217\u5165\u961f\u548c\u51fa\u961f\u7684\u5e73\u644a\u590d\u6742\u5ea6\u90fd\u8fd8\u662fO(1), \u6bd4\u4e0a\u9762\u7684\u51e0\u79cd\u65b9\u6cd5\u8981\u597d\u30023.\u5728c\u8bed", "\n            \u8a00\u5e93\u51fd\u6570\u4e2d\u5c06\u4e00\u4e2a\u5b57\u7b26\u8f6c\u6362\u6210\u6574\u578b\u7684\u51fd\u6570\u662fatool()\u5417\uff0c\u8fd9\u4e2a\u51fd\u6570\u7684\u539f\u578b\u662f\u4ec0\u4e48\uff1f", "\n            \u51fd\u6570\u540d: atol", "\n            \u529f \u80fd: \u628a\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u957f\u6574\u578b\u6570", "\n            \u7528 \u6cd5: long atol(const char *nptr);", "\n            \u7a0b\u5e8f\u4f8b:", "\n            #include", "\n            #include", "\n            int main(void)", "\n            {", "\n            long l;", "\n            char *str = \"98765432\";", "\n            l = atol(lstr);", "\n            printf(\"string = %s integer = %ld\\n\", str, l);", "\n            return(0);", "\n            }", "\n            2.\u5bf9\u4e8e\u4e00\u4e2a\u9891\u7e41\u4f7f\u7528\u7684\u77ed\u5c0f\u51fd\u6570,\u5728C\u8bed\u8a00\u4e2d\u5e94\u7528\u4ec0\u4e48\u5b9e\u73b0,\u5728C++\u4e2d\u5e94\u7528\u4ec0\u4e48\u5b9e\u73b0?", "\n            c\u7528\u5b8f\u5b9a\u4e49\uff0cc++\u7528inline", "\n            3.\u76f4\u63a5\u94fe\u63a5\u4e24\u4e2a\u4fe1\u4ee4\u70b9\u7684\u4e00\u7ec4\u94fe\u8def\u79f0\u4f5c\u4ec0\u4e48?", "\n            PPP\u70b9\u5230\u70b9\u8fde\u63a5", "\n            4.\u63a5\u5165\u7f51\u7528\u7684\u662f\u4ec0\u4e48\u63a5\u53e3?", "\n            5.voip\u90fd\u7528\u4e86\u90a3\u4e9b\u534f\u8bae?", "\n            6.\u8f6f\u4ef6\u6d4b\u8bd5\u90fd\u6709\u90a3\u4e9b\u79cd\u7c7b?", "\n            \u9ed1\u76d2\uff1a\u9488\u5bf9\u7cfb\u7edf\u529f\u80fd\u7684\u6d4b\u8bd5 \u767d\u5408\uff1a\u6d4b\u8bd5\u51fd\u6570\u529f\u80fd\uff0c\u5404\u51fd\u6570\u63a5\u53e3", "\n            7.\u786e\u5b9a\u6a21\u5757\u7684\u529f\u80fd\u548c\u6a21\u5757\u7684\u63a5\u53e3\u662f\u5728\u8f6f\u4ef6\u8bbe\u8ba1\u7684\u90a3\u4e2a\u961f\u6bb5\u5b8c\u6210\u7684?", "\n            \u6982\u8981\u8bbe\u8ba1\u9636\u6bb5", "\n            8.enum string", "\n            {", "\n            x1,", "\n            x2,", "\n            x3=10,", "\n            x4,", "\n            x5,", "\n            }x;", "\n            \u95eex= 0x801005\uff0c0x8010f4 ;", "\n            9.unsigned char *p1;", "\n            unsigned long *p2;", "\n            p1=(unsigned char *)0x801000;", "\n            p2=(unsigned long *)0x810000;", "\n            \u8bf7\u95eep1+5= ;", "\n            p2+5= ;", "\n            \u4e09.\u9009\u62e9\u9898:", "\n            1.Ethternet\u94fe\u63a5\u5230Internet\u7528\u5230\u4ee5\u4e0b\u90a3\u4e2a\u534f\u8bae?", "\n            A.HDLC;B.ARP;C.UDP;D.TCP;E.ID", "\n            2.\u5c5e\u4e8e\u7f51\u7edc\u5c42\u534f\u8bae\u7684\u662f:", "\n            A.TCP;B.IP;C.ICMP;D.X.25", "\n            3.Windows\u6d88\u606f\u8c03\u5ea6\u673a\u5236\u662f:", "\n            A.\u6307\u4ee4\u961f\u5217;B.\u6307\u4ee4\u5806\u6808;C.\u6d88\u606f\u961f\u5217;D.\u6d88\u606f\u5806\u6808;", "\n            4.unsigned short hash(unsigned short key)", "\n            {", "\n            return (key>>)%256", "\n            }", "\n            \u8bf7\u95eehash(16),hash(256)\u7684\u503c\u5206\u522b\u662f:", "\n            A.1.16;B.8.32;C.4.16;D.1.32", "\n            \u56db.\u627e\u9519\u9898:", "\n            1.\u8bf7\u95ee\u4e0b\u9762\u7a0b\u5e8f\u6709\u4ec0\u4e48\u9519\u8bef?", "\n            int a[60][250][1000],i,j,k;", "\n            for(k=0;k\n            for(j=0;j\n            for(i=0;i\n            a[i][j][k]=0;", "\n            \u628a\u5faa\u73af\u8bed\u53e5\u5185\u5916\u6362\u4e00\u4e0b", "\n            2.#define Max_CB 500", "\n            void LmiQueryCSmd(Struct MSgCB * pmsg)", "\n            {", "\n            unsigned char ucCmdNum;", "\n            ......", "\n            for(ucCmdNum=0;ucCmdNum{", "\n            ......;", "\n            }", "\n            \u6b7b\u5faa\u73af", "\n            3.\u4ee5\u4e0b\u662f\u6c42\u4e00\u4e2a\u6570\u7684\u5e73\u65b9\u7684\u7a0b\u5e8f,\u8bf7\u627e\u51fa\u9519\u8bef:", "\n            #define SQUARE(a)((a)*(a))", "\n            int a=5;", "\n            int b;", "\n            b=SQUARE(a++);", "\n            4.typedef unsigned char BYTE", "\n            int examply_fun(BYTE gt_len; BYTE *gt_code)", "\n            {", "\n            BYTE *gt_buf;", "\n            gt_buf=(BYTE *)MALLOC(Max_GT_Length);", "\n            ......", "\n            if(gt_len>Max_GT_Length)", "\n            {", "\n            return GT_Length_ERROR;", "\n            }", "\n            \u2026\u2026.", "\n            }", "\n            \u4e94.\u95ee\u7b54\u9898:", "\n            1.IP Phone\u7684\u539f\u7406\u662f\u4ec0\u4e48?", "\n            IPV6", "\n            2.TCP/IP\u901a\u4fe1\u5efa\u7acb\u7684\u8fc7\u7a0b\u600e\u6837\uff0c\u7aef\u53e3\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f", "\n            \u4e09\u6b21\u63e1\u624b\uff0c\u786e\u5b9a\u662f\u54ea\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u8be5\u534f\u8bae", "\n            3.1\u53f7\u4fe1\u4ee4\u548c7\u53f7\u4fe1\u4ee4\u6709\u4ec0\u4e48\u533a\u522b\uff0c\u6211\u56fd\u67d0\u524d\u5e7f\u6cdb\u4f7f\u7528\u7684\u662f\u90a3\u4e00\u79cd\uff1f", "\n            4.\u5217\u4e3e5\u79cd\u4ee5\u4e0a\u7684\u7535\u8bdd\u65b0\u4e1a\u52a1\uff1f", "\n            \u5fae\u8f6f\u4e9a\u6d32\u6280\u672f\u4e2d\u5fc3\u7684\u9762\u8bd5\u9898\uff01\uff01\uff01", "\n            1\uff0e\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7684\u5dee\u522b\u3002", "\n            \u7ebf\u7a0b\u662f\u6307\u8fdb\u7a0b\u5185\u7684\u4e00\u4e2a\u6267\u884c\u5355\u5143,\u4e5f\u662f\u8fdb\u7a0b\u5185\u7684\u53ef\u8c03\u5ea6\u5b9e\u4f53.", "\n            \u4e0e\u8fdb\u7a0b\u7684\u533a\u522b:", "\n            (1)\u8c03\u5ea6\uff1a\u7ebf\u7a0b\u4f5c\u4e3a\u8c03\u5ea6\u548c\u5206\u914d\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u8fdb\u7a0b\u4f5c\u4e3a\u62e5\u6709\u8d44\u6e90\u7684\u57fa\u672c\u5355\u4f4d", "\n            (2)\u5e76\u53d1\u6027\uff1a\u4e0d\u4ec5\u8fdb\u7a0b\u4e4b\u95f4\u53ef\u4ee5\u5e76\u53d1\u6267\u884c\uff0c\u540c\u4e00\u4e2a\u8fdb\u7a0b\u7684\u591a\u4e2a\u7ebf\u7a0b\u4e4b\u95f4\u4e5f\u53ef\u5e76\u53d1\u6267\u884c", "\n            (3)\u62e5\u6709\u8d44\u6e90\uff1a\u8fdb\u7a0b\u662f\u62e5\u6709\u8d44\u6e90\u7684\u4e00\u4e2a\u72ec\u7acb\u5355\u4f4d\uff0c\u7ebf\u7a0b\u4e0d\u62e5\u6709\u7cfb\u7edf\u8d44\u6e90\uff0c\u4f46\u53ef\u4ee5\u8bbf\u95ee\u96b6\u5c5e", "\n            \u4e8e\u8fdb\u7a0b\u7684\u8d44\u6e90.", "\n            (4)\u7cfb\u7edf\u5f00\u9500\uff1a\u5728\u521b\u5efa\u6216\u64a4\u6d88\u8fdb\u7a0b\u65f6\uff0c\u7531\u4e8e\u7cfb\u7edf\u90fd\u8981\u4e3a\u4e4b\u5206\u914d\u548c\u56de\u6536\u8d44\u6e90\uff0c\u5bfc\u81f4\u7cfb\u7edf\u7684\u5f00", "\n            \u9500\u660e\u663e\u5927\u4e8e\u521b\u5efa\u6216\u64a4\u6d88\u7ebf\u7a0b\u65f6\u7684\u5f00\u9500\u3002", "\n            2.\u6d4b\u8bd5\u65b9\u6cd5", "\n            \u4eba\u5de5\u6d4b\u8bd5\uff1a\u4e2a\u4eba\u590d\u67e5\u3001\u62bd\u67e5\u548c\u4f1a\u5ba1", "\n            \u673a\u5668\u6d4b\u8bd5\uff1a\u9ed1\u76d2\u6d4b\u8bd5\u548c\u767d\u76d2\u6d4b\u8bd5", "\n            2\uff0eHeap\u4e0estack\u7684\u5dee\u522b\u3002", "\n            Heap\u662f\u5806\uff0cstack\u662f\u6808\u3002", "\n            Stack\u7684\u7a7a\u95f4\u7531\u64cd\u4f5c\u7cfb\u7edf\u81ea\u52a8\u5206\u914d/\u91ca\u653e\uff0cHeap\u4e0a\u7684\u7a7a\u95f4\u624b\u52a8\u5206\u914d/\u91ca\u653e\u3002", "\n            Stack\u7a7a\u95f4\u6709\u9650\uff0cHeap\u662f\u5f88\u5927\u7684\u81ea\u7531\u5b58\u50a8\u533a", "\n            C\u4e2d\u7684malloc\u51fd\u6570\u5206\u914d\u7684\u5185\u5b58\u7a7a\u95f4\u5373\u5728\u5806\u4e0a,C++\u4e2d\u5bf9\u5e94\u7684\u662fnew\u64cd\u4f5c\u7b26\u3002", "\n            \u7a0b\u5e8f\u5728\u7f16\u8bd1\u671f\u5bf9\u53d8\u91cf\u548c\u51fd\u6570\u5206\u914d\u5185\u5b58\u90fd\u5728\u6808\u4e0a\u8fdb\u884c,\u4e14\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u51fd\u6570\u8c03\u7528\u65f6\u53c2\u6570\u7684", "\n            \u4f20\u9012\u4e5f\u5728\u6808\u4e0a\u8fdb\u884c", "\n            3\uff0eWindows\u4e0b\u7684\u5185\u5b58\u662f\u5982\u4f55\u7ba1\u7406\u7684\uff1f", "\n            4\uff0e\u4ecb\u7ecd.Net\u548c.Net\u7684\u5b89\u5168\u6027\u3002", "\n            5\uff0e\u5ba2\u6237\u7aef\u5982\u4f55\u8bbf\u95ee.Net\u7ec4\u4ef6\u5b9e\u73b0Web Service\uff1f", "\n            6\uff0eC/C++\u7f16\u8bd1\u5668\u4e2d\u865a\u8868\u662f\u5982\u4f55\u5b8c\u6210\u7684\uff1f", "\n            7\uff0e\u8c08\u8c08COM\u7684\u7ebf\u7a0b\u6a21\u578b\u3002\u7136\u540e\u8ba8\u8bba\u8fdb\u7a0b\u5185/\u5916\u7ec4\u4ef6\u7684\u5dee\u522b\u3002", "\n            8\uff0e\u8c08\u8c08IA32\u4e0b\u7684\u5206\u9875\u673a\u5236", "\n            \u5c0f\u9875(4K)\u4e24\u7ea7\u5206\u9875\u6a21\u5f0f\uff0c\u5927\u9875(4M)\u4e00\u7ea7", "\n            9\uff0e\u7ed9\u4e24\u4e2a\u53d8\u91cf\uff0c\u5982\u4f55\u627e\u51fa\u4e00\u4e2a\u5e26\u73af\u5355\u94fe\u8868\u4e2d\u662f\u4ec0\u4e48\u5730\u65b9\u51fa\u73b0\u73af\u7684\uff1f", "\n            \u4e00\u4e2a\u9012\u589e\u4e00\uff0c\u4e00\u4e2a\u9012\u589e\u4e8c\uff0c\u4ed6\u4eec\u6307\u5411\u540c\u4e00\u4e2a\u63a5\u70b9\u65f6\u5c31\u662f\u73af\u51fa\u73b0\u7684\u5730\u65b9", "\n            10\uff0e\u5728IA32\u4e2d\u4e00\u5171\u6709\u591a\u5c11\u79cd\u529e\u6cd5\u4ece\u7528\u6237\u6001\u8df3\u5230\u5185\u6838\u6001\uff1f", "\n            \u901a\u8fc7\u8c03\u7528\u95e8\uff0c\u4ecering3\u5230ring0\uff0c\u4e2d\u65ad\u4ecering3\u5230ring0\uff0c\u8fdb\u5165vm86\u7b49\u7b49", "\n            11\uff0e\u5982\u679c\u53ea\u60f3\u8ba9\u7a0b\u5e8f\u6709\u4e00\u4e2a\u5b9e\u4f8b\u8fd0\u884c\uff0c\u4e0d\u80fd\u8fd0\u884c\u4e24\u4e2a\u3002\u50cfwinamp\u4e00\u6837\uff0c\u53ea\u80fd\u5f00\u4e00\u4e2a\u7a97", "\n            \u53e3\uff0c\u600e\u6837\u5b9e\u73b0\uff1f", "\n            \u7528\u5185\u5b58\u6620\u5c04\u6216\u5168\u5c40\u539f\u5b50\uff08\u4e92\u65a5\u53d8\u91cf\uff09\u3001\u67e5\u627e\u7a97\u53e3\u53e5\u67c4..", "\n            FindWindow\uff0c\u4e92\u65a5\uff0c\u5199\u6807\u5fd7\u5230\u6587\u4ef6\u6216\u6ce8\u518c\u8868,\u5171\u4eab\u5185\u5b58\u3002.", "\n            12\uff0e\u5982\u4f55\u622a\u53d6\u952e\u76d8\u7684\u54cd\u5e94\uff0c\u8ba9\u6240\u6709\u7684\u2018a\u2019\u53d8\u6210\u2018b\u2019\uff1f", "\n            \u952e\u76d8\u94a9\u5b50SetWindowsHookEx", "\n            13\uff0eApartment\u5728COM\u4e2d\u6709\u4ec0\u4e48\u7528\uff1f\u4e3a\u4ec0\u4e48\u8981\u5f15\u5165\uff1f", "\n            14\uff0e\u5b58\u50a8\u8fc7\u7a0b\u662f\u4ec0\u4e48\uff1f\u6709\u4ec0\u4e48\u7528\uff1f\u6709\u4ec0\u4e48\u4f18\u70b9\uff1f", "\n            \u6211\u7684\u7406\u89e3\u5c31\u662f\u4e00\u5806sql\u7684\u96c6\u5408\uff0c\u53ef\u4ee5\u5efa\u7acb\u975e\u5e38\u590d\u6742\u7684\u67e5\u8be2\uff0c\u7f16\u8bd1\u8fd0\u884c\uff0c\u6240\u4ee5\u8fd0\u884c\u4e00\u6b21\u540e\uff0c", "\n            \u4ee5\u540e\u518d\u8fd0\u884c\u901f\u5ea6\u6bd4\u5355\u72ec\u6267\u884cSQL\u5feb\u5f88\u591a", "\n            15\uff0eTemplate\u6709\u4ec0\u4e48\u7279\u70b9\uff1f\u4ec0\u4e48\u65f6\u5019\u7528\uff1f", "\n            16\uff0e\u8c08\u8c08Windows DNA\u7ed3\u6784\u7684\u7279\u70b9\u548c\u4f18\u70b9\u3002", "\n            \u7f51\u7edc\u7f16\u7a0b\u4e2d\u8bbe\u8ba1\u5e76\u53d1\u670d\u52a1\u5668\uff0c\u4f7f\u7528\u591a\u8fdb\u7a0b \u4e0e \u591a\u7ebf\u7a0b \uff0c\u8bf7\u95ee\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n            1\uff0c\u8fdb\u7a0b\uff1a\u5b50\u8fdb\u7a0b\u662f\u7236\u8fdb\u7a0b\u7684\u590d\u5236\u54c1\u3002\u5b50\u8fdb\u7a0b\u83b7\u5f97\u7236\u8fdb\u7a0b\u6570\u636e\u7a7a\u95f4\u3001\u5806\u548c\u6808\u7684\u590d\u5236\u54c1\u3002", "\n            2\uff0c\u7ebf\u7a0b\uff1a\u76f8\u5bf9\u4e0e\u8fdb\u7a0b\u800c\u8a00\uff0c\u7ebf\u7a0b\u662f\u4e00\u4e2a\u66f4\u52a0\u63a5\u8fd1\u4e0e\u6267\u884c\u4f53\u7684\u6982\u5ff5\uff0c\u5b83\u53ef\u4ee5\u4e0e\u540c\u8fdb\u7a0b\u7684\u5176", "\n            \u4ed6\u7ebf\u7a0b\u5171\u4eab\u6570\u636e\uff0c\u4f46\u62e5\u6709\u81ea\u5df1\u7684\u6808\u7a7a\u95f4\uff0c\u62e5\u6709\u72ec\u7acb\u7684\u6267\u884c\u5e8f\u5217\u3002", "\n            \u4e24\u8005\u90fd\u53ef\u4ee5\u63d0\u9ad8\u7a0b\u5e8f\u7684\u5e76\u53d1\u5ea6\uff0c\u63d0\u9ad8\u7a0b\u5e8f\u8fd0\u884c\u6548\u7387\u548c\u54cd\u5e94\u65f6\u95f4\u3002", "\n            \u7ebf\u7a0b\u548c\u8fdb\u7a0b\u5728\u4f7f\u7528\u4e0a\u5404\u6709\u4f18\u7f3a\u70b9\uff1a\u7ebf\u7a0b\u6267\u884c\u5f00\u9500\u5c0f\uff0c\u4f46\u4e0d\u5229\u4e8e\u8d44\u6e90\u7ba1\u7406\u548c\u4fdd\u62a4\uff1b\u800c\u8fdb\u7a0b", "\n            \u6b63\u76f8\u53cd\u3002\u540c\u65f6\uff0c\u7ebf\u7a0b\u9002\u5408\u4e8e\u5728SMP\u673a\u5668\u4e0a\u8fd0\u884c\uff0c\u800c\u8fdb\u7a0b\u5219\u53ef\u4ee5\u8de8\u673a\u5668\u8fc1\u79fb\u3002", "\n            \u601d\u79d1", "\n            1. \u7528\u5b8f\u5b9a\u4e49\u5199\u51faswap\uff08x\uff0cy\uff09", "\n            #define swap(x, y)            x = x + y;            y = x \u2013 y;            x = x \u2013 y;", "\n            2.\u6570\u7ec4a[N]\uff0c\u5b58\u653e\u4e861\u81f3N-1\u4e2a\u6570\uff0c\u5176\u4e2d\u67d0\u4e2a\u6570\u91cd\u590d\u4e00\u6b21\u3002\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u627e\u51fa\u88ab\u91cd\u590d\u7684\u6570", "\n            \u5b57.\u65f6\u95f4\u590d\u6742\u5ea6\u5fc5\u987b\u4e3ao\uff08N\uff09\u51fd\u6570\u539f\u578b\uff1a", "\n            int do_dup(int a[],int N)", "\n            3 \u4e00\u8bed\u53e5\u5b9e\u73b0x\u662f\u5426\u4e3a2\u7684\u82e5\u5e72\u6b21\u5e42\u7684\u5224\u65ad", "\n            int i = 512;", "\n            cout \n            4.unsigned int intvert(unsigned int x,int p,int n)\u5b9e\u73b0\u5bf9x\u7684\u8fdb\u884c\u8f6c\u6362,p\u4e3a\u8d77\u59cb\u8f6c", "\n            \u5316\u4f4d,n\u4e3a\u9700\u8981\u8f6c\u6362\u7684\u957f\u5ea6,\u5047\u8bbe\u8d77\u59cb\u70b9\u5728\u53f3\u8fb9.\u5982x=0b0001 0001,p=4,n=3\u8f6c\u6362\u540e", "\n            x=0b0110 0001", "\n            unsigned int intvert(unsigned int x,int p,int n){", "\n            unsigned int _t = 0;", "\n            unsigned int _a = 1;", "\n            for(int i = 0; i \n            _t |= _a;", "\n            _a = _a \n            }", "\n            _t = _t \n            x ^= _t;", "\n            return x;", "\n            }", "\n            \u6167\u901a\uff1a", "\n            \u4ec0\u4e48\u662f\u9884\u7f16\u8bd1", "\n            \u4f55\u65f6\u9700\u8981\u9884\u7f16\u8bd1\uff1a", "\n            \uff11\u3001\u603b\u662f\u4f7f\u7528\u4e0d\u7ecf\u5e38\u6539\u52a8\u7684\u5927\u578b\u4ee3\u7801\u4f53\u3002", "\n            \uff12\u3001\u7a0b\u5e8f\u7531\u591a\u4e2a\u6a21\u5757\u7ec4\u6210\uff0c\u6240\u6709\u6a21\u5757\u90fd\u4f7f\u7528\u4e00\u7ec4\u6807\u51c6\u7684\u5305\u542b\u6587\u4ef6\u548c\u76f8\u540c\u7684\u7f16\u8bd1\u9009\u9879\u3002\u5728", "\n            \u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u5c06\u6240\u6709\u5305\u542b\u6587\u4ef6\u9884\u7f16\u8bd1\u4e3a\u4e00\u4e2a\u9884\u7f16\u8bd1\u5934\u3002", "\n            char * const p;", "\n            char const * p", "\n            const char *p", "\n            \u4e0a\u8ff0\u4e09\u4e2a\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n            char * const p; //\u5e38\u91cf\u6307\u9488\uff0cp\u7684\u503c\u4e0d\u53ef\u4ee5\u4fee\u6539", "\n            char const * p\uff1b//\u6307\u5411\u5e38\u91cf\u7684\u6307\u9488\uff0c\u6307\u5411\u7684\u5e38\u91cf\u503c\u4e0d\u53ef\u4ee5\u6539", "\n            const char *p\uff1b //\u548cchar const *p", "\n            char str1[] = \"abc\";", "\n            char str2[] = \"abc\";", "\n            const char str3[] = \"abc\";", "\n            const char str4[] = \"abc\";", "\n            const char *str5 = \"abc\";", "\n            const char *str6 = \"abc\";", "\n            char *str7 = \"abc\";", "\n            char *str8 = \"abc\";", "\n            cout \n            cout \n            cout \n            cout \n            \u7ed3\u679c\u662f\uff1a0 0 1 1", "\n            \u89e3\u7b54\uff1astr1,str2,str3,str4\u662f\u6570\u7ec4\u53d8\u91cf\uff0c\u5b83\u4eec\u6709\u5404\u81ea\u7684\u5185\u5b58\u7a7a\u95f4\uff1b", "\n            \u800cstr5,str6,str7,str8\u662f\u6307\u9488\uff0c\u5b83\u4eec\u6307\u5411\u76f8\u540c\u7684\u5e38\u91cf\u533a\u57df\u3002", "\n            12. \u4ee5\u4e0b\u4ee3\u7801\u4e2d\u7684\u4e24\u4e2asizeof\u7528\u6cd5\u6709\u95ee\u9898\u5417\uff1f[C\u6613]", "\n            void UpperCase( char str[] ) // \u5c06 str \u4e2d\u7684\u5c0f\u5199\u5b57\u6bcd\u8f6c\u6362\u6210\u5927\u5199\u5b57\u6bcd", "\n            {", "\n            for( size_t i=0; iif( \u2018a\u2018\n            str[i] -= (\u2018a\u2018-\u2018A\u2018 );", "\n            }", "\n            char str[] = \"aBcDe\";", "\n            cout \n            UpperCase( str );", "\n            cout \n            \u7b54\uff1a\u51fd\u6570\u5185\u7684sizeof\u6709\u95ee\u9898\u3002\u6839\u636e\u8bed\u6cd5\uff0csizeof\u5982\u7528\u4e8e\u6570\u7ec4\uff0c\u53ea\u80fd\u6d4b\u51fa\u9759\u6001\u6570\u7ec4\u7684\u5927", "\n            \u5c0f\uff0c\u65e0\u6cd5\u68c0\u6d4b\u52a8\u6001\u5206\u914d\u7684\u6216\u5916\u90e8\u6570\u7ec4\u5927\u5c0f\u3002\u51fd\u6570\u5916\u7684str\u662f\u4e00\u4e2a\u9759\u6001\u5b9a\u4e49\u7684\u6570\u7ec4\uff0c\u56e0\u6b64\u5176", "\n            \u5927\u5c0f\u4e3a6\uff0c\u51fd\u6570\u5185\u7684str\u5b9e\u9645\u53ea\u662f\u4e00\u4e2a\u6307\u5411\u5b57\u7b26\u4e32\u7684\u6307\u9488\uff0c\u6ca1\u6709\u4efb\u4f55\u989d\u5916\u7684\u4e0e\u6570\u7ec4\u76f8\u5173\u7684", "\n            \u4fe1\u606f\uff0c\u56e0\u6b64sizeof\u4f5c\u7528\u4e8e\u4e0a\u53ea\u5c06\u5176\u5f53\u6307\u9488\u770b\uff0c\u4e00\u4e2a\u6307\u9488\u4e3a4\u4e2a\u5b57\u8282\uff0c\u56e0\u6b64\u8fd4\u56de4\u3002", "\n            \u4e00\u4e2a32\u4f4d\u7684\u673a\u5668,\u8be5\u673a\u5668\u7684\u6307\u9488\u662f\u591a\u5c11\u4f4d", "\n            \u6307\u9488\u662f\u591a\u5c11\u4f4d\u53ea\u8981\u770b\u5730\u5740\u603b\u7ebf\u7684\u4f4d\u6570\u5c31\u884c\u4e86\u300280386\u4ee5\u540e\u7684\u673a\u5b50\u90fd\u662f32\u7684\u6570\u636e\u603b\u7ebf\u3002\u6240\u4ee5", "\n            \u6307\u9488\u7684\u4f4d\u6570\u5c31\u662f4\u4e2a\u5b57\u8282\u4e86\u3002", "\n            main()", "\n            {", "\n            int a[5]={1,2,3,4,5};", "\n            int *ptr=(int *)(&a+1);", "\n            printf(\"%d,%d\",*(a+1),*(ptr-1));", "\n            }", "\n            \u8f93\u51fa\uff1a2,5", "\n            *(a+1\uff09\u5c31\u662fa[1]\uff0c*(ptr-1)\u5c31\u662fa[4],\u6267\u884c\u7ed3\u679c\u662f2\uff0c5", "\n            &a+1\u4e0d\u662f\u9996\u5730\u5740+1\uff0c\u7cfb\u7edf\u4f1a\u8ba4\u4e3a\u52a0\u4e00\u4e2aa\u6570\u7ec4\u7684\u504f\u79fb\uff0c\u662f\u504f\u79fb\u4e86\u4e00\u4e2a\u6570\u7ec4\u7684\u5927\u5c0f\uff08\u672c\u4f8b\u662f", "\n            5\u4e2aint\uff09", "\n            int *ptr=(int *)(&a+1);", "\n            \u5219ptr\u5b9e\u9645\u662f&(a[5]),\u4e5f\u5c31\u662fa+5", "\n            \u539f\u56e0\u5982\u4e0b\uff1a", "\n            &a\u662f\u6570\u7ec4\u6307\u9488\uff0c\u5176\u7c7b\u578b\u4e3a int (*)[5];", "\n            \u800c\u6307\u9488\u52a01\u8981\u6839\u636e\u6307\u9488\u7c7b\u578b\u52a0\u4e0a\u4e00\u5b9a\u7684\u503c\uff0c", "\n            \u4e0d\u540c\u7c7b\u578b\u7684\u6307\u9488+1\u4e4b\u540e\u589e\u52a0\u7684\u5927\u5c0f\u4e0d\u540c", "\n            a\u662f\u957f\u5ea6\u4e3a5\u7684int\u6570\u7ec4\u6307\u9488\uff0c\u6240\u4ee5\u8981\u52a0 5*sizeof(int)", "\n            \u6240\u4ee5ptr\u5b9e\u9645\u662fa[5]", "\n            \u4f46\u662fprt\u4e0e(&a+1)\u7c7b\u578b\u662f\u4e0d\u4e00\u6837\u7684(\u8fd9\u70b9\u5f88\u91cd\u8981)", "\n            \u6240\u4ee5prt-1\u53ea\u4f1a\u51cf\u53bbsizeof(int*)", "\n            a,&a\u7684\u5730\u5740\u662f\u4e00\u6837\u7684\uff0c\u4f46\u610f\u601d\u4e0d\u4e00\u6837\uff0ca\u662f\u6570\u7ec4\u9996\u5730\u5740\uff0c\u4e5f\u5c31\u662fa[0]\u7684\u5730\u5740\uff0c&a\u662f\u5bf9\u8c61", "\n            \uff08\u6570\u7ec4\uff09\u9996\u5730\u5740\uff0ca+1\u662f\u6570\u7ec4\u4e0b\u4e00\u5143\u7d20\u7684\u5730\u5740\uff0c\u5373a[1],&a+1\u662f\u4e0b\u4e00\u4e2a\u5bf9\u8c61\u7684\u5730\u5740\uff0c\u5373a", "\n            [5].", "\n            1.\u8bf7\u95ee\u4ee5\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1a", "\n            int main()", "\n            {", "\n            char a;", "\n            char *str=&a;", "\n            strcpy(str,\"hello\");", "\n            printf(str);", "\n            return 0;", "\n            }", "\n            \u6ca1\u6709\u4e3astr\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff0c\u5c06\u4f1a\u53d1\u751f\u5f02\u5e38", "\n            \u95ee\u9898\u51fa\u5728\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u590d\u5236\u8fdb\u4e00\u4e2a\u5b57\u7b26\u53d8\u91cf\u6307\u9488\u6240\u6307\u5730\u5740\u3002\u867d\u7136\u53ef\u4ee5\u6b63\u786e\u8f93\u51fa\u7ed3\u679c\uff0c\u4f46", "\n            \u56e0\u4e3a\u8d8a\u754c\u8fdb\u884c\u5185\u5728\u8bfb\u5199\u800c\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\u3002", "\n            char* s=\"AAA\";", "\n            printf(\"%s\",s);", "\n            s[0]=\u2018B\u2018;", "\n            printf(\"%s\",s);", "\n            \u6709\u4ec0\u4e48\u9519\uff1f", "\n            \"AAA\"\u662f\u5b57\u7b26\u4e32\u5e38\u91cf\u3002s\u662f\u6307\u9488\uff0c\u6307\u5411\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5e38\u91cf\uff0c\u6240\u4ee5\u58f0\u660es\u7684\u65f6\u5019\u5c31\u6709\u95ee\u9898\u3002", "\n            cosnt char* s=\"AAA\";", "\n            \u7136\u540e\u53c8\u56e0\u4e3a\u662f\u5e38\u91cf\uff0c\u6240\u4ee5\u5bf9\u662fs[0]\u7684\u8d4b\u503c\u64cd\u4f5c\u662f\u4e0d\u5408\u6cd5\u7684\u3002", "\n            1\u3001\u5199\u4e00\u4e2a\u201c\u6807\u51c6\u201d\u5b8f\uff0c\u8fd9\u4e2a\u5b8f\u8f93\u5165\u4e24\u4e2a\u53c2\u6570\u5e76\u8fd4\u56de\u8f83\u5c0f\u7684\u4e00\u4e2a\u3002", "\n            .#define Min(X, Y) ((X)>(Y)?(Y):(X))//\u7ed3\u5c3e\u6ca1\u6709;", "\n            2\u3001\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\u7ecf\u5e38\u8981\u7528\u5230\u65e0\u9650\u5faa\u73af\uff0c\u4f60\u600e\u4e48\u7528C\u7f16\u5199\u6b7b\u5faa\u73af\u3002", "\n            while(1){}\u6216\u8005for(;;)", "\n            3\u3001\u5173\u952e\u5b57static\u7684\u4f5c\u7528\u662f\u4ec0\u4e48\uff1f", "\n            \u5b9a\u4e49\u9759\u6001\u53d8\u91cf", "\n            4\u3001\u5173\u952e\u5b57const\u6709\u4ec0\u4e48\u542b\u610f\uff1f", "\n            \u8868\u793a\u5e38\u91cf\u4e0d\u53ef\u4ee5\u4fee\u6539\u7684\u53d8\u91cf\u3002", "\n            5\u3001\u5173\u952e\u5b57volatile\u6709\u4ec0\u4e48\u542b\u610f\uff1f\u5e76\u4e3e\u51fa\u4e09\u4e2a\u4e0d\u540c\u7684\u4f8b\u5b50\uff1f", "\n            \u63d0\u793a\u7f16\u8bd1\u5668\u5bf9\u8c61\u7684\u503c\u53ef\u80fd\u5728\u7f16\u8bd1\u5668\u672a\u76d1\u6d4b\u5230\u7684\u60c5\u51b5\u4e0b\u6539\u53d8\u3002", "\n            int (*s[10])(int) \u8868\u793a\u7684\u662f\u4ec0\u4e48\u554a", "\n            int (*s[10])(int) \u51fd\u6570\u6307\u9488\u6570\u7ec4\uff0c\u6bcf\u4e2a\u6307\u9488\u6307\u5411\u4e00\u4e2aint func(int param)\u7684\u51fd\u6570\u3002", "\n            1.\u6709\u4ee5\u4e0b\u8868\u8fbe\u5f0f\uff1a", "\n            int a=248; b=4;int const c=21;const int *d=&a;", "\n            int *const e=&b;int const *f const =&a;", "\n            \u8bf7\u95ee\u4e0b\u5217\u8868\u8fbe\u5f0f\u54ea\u4e9b\u4f1a\u88ab\u7f16\u8bd1\u5668\u7981\u6b62\uff1f\u4e3a\u4ec0\u4e48\uff1f", "\n            *c=32;d=&b;*d=43;e=34;e=&a;f=0x321f;", "\n            *c \u8fd9\u662f\u4e2a\u4ec0\u4e48\u4e1c\u4e1c\uff0c\u7981\u6b62", "\n            *d \u8bf4\u4e86\u662fconst\uff0c \u7981\u6b62", "\n            e = &a \u8bf4\u4e86\u662fconst \u7981\u6b62", "\n            const *f const =&a; \u7981\u6b62", "\n            2.\u4ea4\u6362\u4e24\u4e2a\u53d8\u91cf\u7684\u503c\uff0c\u4e0d\u4f7f\u7528\u7b2c\u4e09\u4e2a\u53d8\u91cf\u3002\u5373a=3,b=5,\u4ea4\u6362\u4e4b\u540ea=5,b=3;", "\n            \u6709\u4e24\u79cd\u89e3\u6cd5, \u4e00\u79cd\u7528\u7b97\u672f\u7b97\u6cd5, \u4e00\u79cd\u7528^(\u5f02\u6216)", "\n            a = a + b;", "\n            b = a \u2013 b;", "\n            a = a \u2013 b;", "\n            or", "\n            a = a^b;// \u53ea\u80fd\u5bf9int,char..", "\n            b = a^b;", "\n            a = a^b;", "\n            or", "\n            a ^= b ^= a;", "\n            3.c\u548cc++\u4e2d\u7684struct\u6709\u4ec0\u4e48\u4e0d\u540c\uff1f", "\n            c\u548cc++\u4e2dstruct\u7684\u4e3b\u8981\u533a\u522b\u662fc\u4e2d\u7684struct\u4e0d\u53ef\u4ee5\u542b\u6709\u6210\u5458\u51fd\u6570\uff0c\u800cc++\u4e2d\u7684struct\u53ef", "\n            \u4ee5\u3002c++\u4e2dstruct\u548cclass\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u9ed8\u8ba4\u7684\u5b58\u53d6\u6743\u9650\u4e0d\u540c\uff0cstruct\u9ed8\u8ba4\u4e3apublic\uff0c", "\n            \u800cclass\u9ed8\u8ba4\u4e3aprivate", "\n            4.#include", "\n            #include", "\n            void getmemory(char *p)", "\n            {", "\n            p=(char *) malloc(100);", "\n            strcpy(p,\u201dhello world\u201d);", "\n            }", "\n            int main( )", "\n            {", "\n            char *str=NULL;", "\n            getmemory(str);", "\n            printf(\u201c%s/n\u201d,str);", "\n            free(str);", "\n            return 0;", "\n            }", "\n            \u7a0b\u5e8f\u5d29\u6e83\uff0cgetmemory\u4e2d\u7684malloc \u4e0d\u80fd\u8fd4\u56de\u52a8\u6001\u5185\u5b58\uff0c free\uff08\uff09\u5bf9str\u64cd\u4f5c\u5f88\u5371\u9669", "\n            5.char szstr[10];", "\n            strcpy(szstr,\u201d0123456789\u2033);", "\n            \u4ea7\u751f\u4ec0\u4e48\u7ed3\u679c\uff1f\u4e3a\u4ec0\u4e48\uff1f", "\n            \u957f\u5ea6\u4e0d\u4e00\u6837\uff0c\u4f1a\u9020\u6210\u975e\u6cd5\u7684OS", "\n            6.\u5217\u4e3e\u51e0\u79cd\u8fdb\u7a0b\u7684\u540c\u6b65\u673a\u5236\uff0c\u5e76\u6bd4\u8f83\u5176\u4f18\u7f3a\u70b9\u3002", "\n            \u539f\u5b50\u64cd\u4f5c", "\n            \u4fe1\u53f7\u91cf\u673a\u5236", "\n            \u81ea\u65cb\u9501", "\n            \u7ba1\u7a0b\uff0c\u4f1a\u5408\uff0c\u5206\u5e03\u5f0f\u7cfb\u7edf", "\n            7.\u8fdb\u7a0b\u4e4b\u95f4\u901a\u4fe1\u7684\u9014\u5f84", "\n            \u5171\u4eab\u5b58\u50a8\u7cfb\u7edf", "\n            \u6d88\u606f\u4f20\u9012\u7cfb\u7edf", "\n            \u7ba1\u9053\uff1a\u4ee5\u6587\u4ef6\u7cfb\u7edf\u4e3a\u57fa\u7840", "\n            11.\u8fdb\u7a0b\u6b7b\u9501\u7684\u539f\u56e0", "\n            \u8d44\u6e90\u7ade\u4e89\u53ca\u8fdb\u7a0b\u63a8\u8fdb\u987a\u5e8f\u975e\u6cd5", "\n            12.\u6b7b\u9501\u76844\u4e2a\u5fc5\u8981\u6761\u4ef6", "\n            \u4e92\u65a5\u3001\u8bf7\u6c42\u4fdd\u6301\u3001\u4e0d\u53ef\u5265\u593a\u3001\u73af\u8def", "\n            13.\u6b7b\u9501\u7684\u5904\u7406", "\n            \u9e35\u9e1f\u7b56\u7565\u3001\u9884\u9632\u7b56\u7565\u3001\u907f\u514d\u7b56\u7565\u3001\u68c0\u6d4b\u4e0e\u89e3\u9664\u6b7b\u9501", "\n            15. \u64cd\u4f5c\u7cfb\u7edf\u4e2d\u8fdb\u7a0b\u8c03\u5ea6\u7b56\u7565\u6709\u54ea\u51e0\u79cd\uff1f", "\n            FCFS(\u5148\u6765\u5148\u670d\u52a1)\uff0c\u4f18\u5148\u7ea7\uff0c\u65f6\u95f4\u7247\u8f6e\u8f6c\uff0c\u591a\u7ea7\u53cd\u9988", "\n            8.\u7c7b\u7684\u9759\u6001\u6210\u5458\u548c\u975e\u9759\u6001\u6210\u5458\u6709\u4f55\u533a\u522b\uff1f", "\n            \u7c7b\u7684\u9759\u6001\u6210\u5458\u6bcf\u4e2a\u7c7b\u53ea\u6709\u4e00\u4e2a\uff0c\u975e\u9759\u6001\u6210\u5458\u6bcf\u4e2a\u5bf9\u8c61\u4e00\u4e2a", "\n            9.\u7eaf\u865a\u51fd\u6570\u5982\u4f55\u5b9a\u4e49\uff1f\u4f7f\u7528\u65f6\u5e94\u6ce8\u610f\u4ec0\u4e48\uff1f", "\n            virtual void f()=0;", "\n            \u662f\u63a5\u53e3\uff0c\u5b50\u7c7b\u5fc5\u987b\u8981\u5b9e\u73b0", "\n            10.\u6570\u7ec4\u548c\u94fe\u8868\u7684\u533a\u522b", "\n            \u6570\u7ec4\uff1a\u6570\u636e\u987a\u5e8f\u5b58\u50a8\uff0c\u56fa\u5b9a\u5927\u5c0f", "\n            \u8fde\u8868\uff1a\u6570\u636e\u53ef\u4ee5\u968f\u673a\u5b58\u50a8\uff0c\u5927\u5c0f\u53ef\u52a8\u6001\u6539\u53d8", "\n            12.ISO\u7684\u4e03\u5c42\u6a21\u578b\u662f\u4ec0\u4e48\uff1ftcp/udp\u662f\u5c5e\u4e8e\u54ea\u4e00\u5c42\uff1ftcp/udp\u6709\u4f55\u4f18\u7f3a\u70b9\uff1f", "\n            \u5e94\u7528\u5c42", "\n            \u8868\u793a\u5c42", "\n            \u4f1a\u8bdd\u5c42", "\n            \u8fd0\u8f93\u5c42", "\n            \u7f51\u7edc\u5c42", "\n            \u7269\u7406\u94fe\u8def\u5c42", "\n            \u7269\u7406\u5c42", "\n            tcp /udp\u5c5e\u4e8e\u8fd0\u8f93\u5c42", "\n            TCP \u670d\u52a1\u63d0\u4f9b\u4e86\u6570\u636e\u6d41\u4f20\u8f93\u3001\u53ef\u9760\u6027\u3001\u6709\u6548\u6d41\u63a7\u5236\u3001\u5168\u53cc\u5de5\u64cd\u4f5c\u548c\u591a\u8def\u590d\u7528\u6280\u672f\u7b49\u3002", "\n            \u4e0e TCP \u4e0d\u540c\uff0c UDP \u5e76\u4e0d\u63d0\u4f9b\u5bf9 IP \u534f\u8bae\u7684\u53ef\u9760\u673a\u5236\u3001\u6d41\u63a7\u5236\u4ee5\u53ca\u9519\u8bef\u6062\u590d\u529f\u80fd\u7b49\u3002\u7531", "\n            \u4e8e UDP \u6bd4\u8f83\u7b80\u5355\uff0c UDP \u5934\u5305\u542b\u5f88\u5c11\u7684\u5b57\u8282\uff0c\u6bd4 TCP \u8d1f\u8f7d\u6d88\u8017\u5c11\u3002", "\n            tcp: \u63d0\u4f9b\u7a33\u5b9a\u7684\u4f20\u8f93\u670d\u52a1\uff0c\u6709\u6d41\u91cf\u63a7\u5236\uff0c\u7f3a\u70b9\u662f\u5305\u5934\u5927\uff0c\u5197\u4f59\u6027\u4e0d\u597d", "\n            udp: \u4e0d\u63d0\u4f9b\u7a33\u5b9a\u7684\u670d\u52a1\uff0c\u5305\u5934\u5c0f\uff0c\u5f00\u9500\u5c0f", "\n            1\uff1a(void *)ptr \u548c (*(void**))ptr\u7684\u7ed3\u679c\u662f\u5426\u76f8\u540c\uff1f\u5176\u4e2dptr\u4e3a\u540c\u4e00\u4e2a\u6307\u9488", "\n            .(void *)ptr \u548c (*(void**))ptr\u503c\u662f\u76f8\u540c\u7684", "\n            2\uff1aint main()", "\n            {", "\n            int x=3;", "\n            printf(\u201c%d\u201d,x);", "\n            return 1;", "\n            }", "\n            \u95ee\u51fd\u6570\u65e2\u7136\u4e0d\u4f1a\u88ab\u5176\u5b83\u51fd\u6570\u8c03\u7528\uff0c\u4e3a\u4ec0\u4e48\u8981\u8fd4\u56de1\uff1f", "\n            mian\u4e2d\uff0cc\u6807\u51c6\u8ba4\u4e3a0\u8868\u793a\u6210\u529f\uff0c\u975e0\u8868\u793a\u9519\u8bef\u3002\u5177\u4f53\u7684\u503c\u662f\u67d0\u4e2d\u5177\u4f53\u51fa\u9519\u4fe1\u606f", "\n            1\uff0c\u8981\u5bf9\u7edd\u5bf9\u5730\u57400\u00d7100000\u8d4b\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u7528", "\n            (unsigned int*)0\u00d7100000 = 1234;", "\n            \u90a3\u4e48\u8981\u662f\u60f3\u8ba9\u7a0b\u5e8f\u8df3\u8f6c\u5230\u7edd\u5bf9\u5730\u5740\u662f0\u00d7100000\u53bb\u6267\u884c\uff0c\u5e94\u8be5\u600e\u4e48\u505a\uff1f", "\n            *((void (*)( ))0\u00d7100000 ) ( );", "\n            \u9996\u5148\u8981\u5c060\u00d7100000\u5f3a\u5236\u8f6c\u6362\u6210\u51fd\u6570\u6307\u9488,\u5373:", "\n            (void (*)())0\u00d7100000", "\n            \u7136\u540e\u518d\u8c03\u7528\u5b83:", "\n            *((void (*)())0\u00d7100000)();", "\n            \u7528typedef\u53ef\u4ee5\u770b\u5f97\u66f4\u76f4\u89c2\u4e9b:", "\n            typedef void(*)() voidFuncPtr;", "\n            *((voidFuncPtr)0\u00d7100000)();", "\n            2\uff0c\u5df2\u77e5\u4e00\u4e2a\u6570\u7ec4table\uff0c\u7528\u4e00\u4e2a\u5b8f\u5b9a\u4e49\uff0c\u6c42\u51fa\u6570\u636e\u7684\u5143\u7d20\u4e2a\u6570", "\n            #define NTBL", "\n            #define NTBL (sizeof(table)/sizeof(table[0]))", "\n            \u9762\u8bd5\u9898: \u7ebf\u7a0b\u4e0e\u8fdb\u7a0b\u7684\u533a\u522b\u548c\u8054\u7cfb? \u7ebf\u7a0b\u662f\u5426\u5177\u6709\u76f8\u540c\u7684\u5806\u6808? dll\u662f\u5426\u6709\u72ec\u7acb\u7684\u5806\u6808?", "\n            \u8fdb\u7a0b\u662f\u6b7b\u7684\uff0c\u53ea\u662f\u4e00\u4e9b\u8d44\u6e90\u7684\u96c6\u5408\uff0c\u771f\u6b63\u7684\u7a0b\u5e8f\u6267\u884c\u90fd\u662f\u7ebf\u7a0b\u6765\u5b8c\u6210\u7684\uff0c\u7a0b\u5e8f\u542f\u52a8\u7684\u65f6", "\n            \u5019\u64cd\u4f5c\u7cfb\u7edf\u5c31\u5e2e\u4f60\u521b\u5efa\u4e86\u4e00\u4e2a\u4e3b\u7ebf\u7a0b\u3002", "\n            \u6bcf\u4e2a\u7ebf\u7a0b\u6709\u81ea\u5df1\u7684\u5806\u6808\u3002", "\n            DLL \u4e2d\u6709\u6ca1\u6709\u72ec\u7acb\u7684\u5806\u6808\uff0c\u8fd9\u4e2a\u95ee\u9898\u4e0d\u597d\u56de\u7b54\uff0c\u6216\u8005\u8bf4\u8fd9\u4e2a\u95ee\u9898\u672c\u8eab\u662f\u5426\u6709\u95ee\u9898\u3002\u56e0\u4e3a", "\n            DLL\u4e2d\u7684\u4ee3\u7801\u662f\u88ab\u67d0\u4e9b\u7ebf\u7a0b\u6240\u6267\u884c\uff0c\u53ea\u6709\u7ebf\u7a0b\u62e5\u6709\u5806\u6808\uff0c\u5982\u679cDLL\u4e2d\u7684\u4ee3\u7801\u662f EXE\u4e2d\u7684\u7ebf", "\n            \u7a0b\u6240\u8c03\u7528\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u662f\u4e0d\u662f\u8bf4\u8fd9\u4e2aDLL\u6ca1\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u5806\u6808\uff1f\u5982\u679cDLL\u4e2d\u7684\u4ee3\u7801\u662f\u7531", "\n            DLL\u81ea\u5df1\u521b\u5efa\u7684\u7ebf\u7a0b\u6240\u6267\u884c\uff0c\u90a3\u4e48\u662f\u4e0d\u662f\u8bf4DLL\u6709\u72ec\u7acb\u7684\u5806\u6808\uff1f", "\n            \u4ee5\u4e0a\u8bb2\u7684\u662f\u5806\u6808\uff0c\u5982\u679c\u5bf9\u4e8e\u5806\u6765\u8bf4\uff0c\u6bcf\u4e2aDLL\u6709\u81ea\u5df1\u7684\u5806\uff0c\u6240\u4ee5\u5982\u679c\u662f\u4eceDLL\u4e2d\u52a8\u6001\u5206\u914d", "\n            \u7684\u5185\u5b58\uff0c\u6700\u597d\u662f\u4eceDLL\u4e2d\u5220\u9664\uff0c\u5982\u679c\u4f60\u4eceDLL\u4e2d\u5206\u914d\u5185\u5b58\uff0c\u7136\u540e\u5728EXE\u4e2d\uff0c\u6216\u8005\u53e6\u5916\u4e00\u4e2a", "\n            DLL\u4e2d\u5220\u9664\uff0c\u5f88\u6709\u53ef\u80fd\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83", "\n            unsigned short A = 10;", "\n            printf(\u201c~A = %u\\n\u201d, ~A);", "\n            char c=128;", "\n            printf(\u201cc=%d\\n\u201d,c);", "\n            \u8f93\u51fa\u591a\u5c11\uff1f\u5e76\u5206\u6790\u8fc7\u7a0b", "\n            \u7b2c\u4e00\u9898\uff0c\uff5eA \uff1d0xfffffff5,int\u503c \u4e3a\uff0d11\uff0c\u4f46\u8f93\u51fa\u7684\u662fuint\u3002\u6240\u4ee5\u8f93\u51fa4294967285", "\n            \u7b2c\u4e8c\u9898\uff0cc\uff1d0\u00d710,\u8f93\u51fa\u7684\u662fint\uff0c\u6700\u9ad8\u4f4d\u4e3a1\uff0c\u662f\u8d1f\u6570\uff0c\u6240\u4ee5\u5b83\u7684\u503c\u5c31\u662f0\u00d700\u7684\u8865\u7801\u5c31\u662f", "\n            128\uff0c\u6240\u4ee5\u8f93\u51fa\uff0d128\u3002", "\n            \u8fd9\u4e24\u9053\u9898\u90fd\u662f\u5728\u8003\u5bdf\u4e8c\u8fdb\u5236\u5411int\u6216uint\u8f6c\u6362\u65f6\u7684\u6700\u9ad8\u4f4d\u5904\u7406\u3002", "\n            \u5206\u6790\u4e0b\u9762\u7684\u7a0b\u5e8f\uff1a", "\n            void GetMemory(char **p,int num)", "\n            {", "\n            *p=(char *)malloc(num);", "\n            }", "\n            int main()", "\n            {", "\n            char *str=NULL;", "\n            GetMemory(&str,100);", "\n            strcpy(str,\u201dhello\u201d);", "\n            free(str);", "\n            if(str!=NULL)", "\n            {", "\n            strcpy(str,\u201dworld\u201d);", "\n            }", "\n            printf(\u201c\\n str is %s\u201d,str);", "\n            getchar();", "\n            }", "\n            \u95ee\u8f93\u51fa\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f\u5e0c\u671b\u5927\u5bb6\u80fd\u8bf4\u8bf4\u539f\u56e0\uff0c\u5148\u8c22\u8c22\u4e86", "\n            \u8f93\u51fastr is world\u3002", "\n            free \u53ea\u662f\u91ca\u653e\u7684str\u6307\u5411\u7684\u5185\u5b58\u7a7a\u95f4,\u5b83\u672c\u8eab\u7684\u503c\u8fd8\u662f\u5b58\u5728\u7684.", "\n            \u6240\u4ee5free\u4e4b\u540e\uff0c\u6709\u4e00\u4e2a\u597d\u7684\u4e60\u60ef\u5c31\u662f\u5c06str=NULL.", "\n            \u6b64\u65f6str\u6307\u5411\u7a7a\u95f4\u7684\u5185\u5b58\u5df2\u88ab\u56de\u6536,\u5982\u679c\u8f93\u51fa\u8bed\u53e5\u4e4b\u524d\u8fd8\u5b58\u5728\u5206\u914d\u7a7a\u95f4\u7684\u64cd\u4f5c\u7684\u8bdd,\u8fd9\u6bb5\u5b58", "\n            \u50a8\u7a7a\u95f4\u662f\u53ef\u80fd\u88ab\u91cd\u65b0\u5206\u914d\u7ed9\u5176\u4ed6\u53d8\u91cf\u7684,", "\n            \u5c3d\u7ba1\u8fd9\u6bb5\u7a0b\u5e8f\u786e\u5b9e\u662f\u5b58\u5728\u5927\u5927\u7684\u95ee\u9898\uff08\u4e0a\u9762\u5404\u4f4d\u5df2\u7ecf\u8bf4\u5f97\u5f88\u6e05\u695a\u4e86\uff09\uff0c\u4f46\u662f\u901a\u5e38\u4f1a\u6253\u5370", "\n            \u51faworld\u6765\u3002", "\n            \u8fd9\u662f\u56e0\u4e3a\uff0c\u8fdb\u7a0b\u4e2d\u7684\u5185\u5b58\u7ba1\u7406\u4e00\u822c\u4e0d\u662f\u7531\u64cd\u4f5c\u7cfb\u7edf\u5b8c\u6210\u7684\uff0c\u800c\u662f\u7531\u5e93\u51fd\u6570\u81ea\u5df1\u5b8c\u6210\u7684\u3002", "\n            \u5f53\u4f60malloc\u4e00\u5757\u5185\u5b58\u7684\u65f6\u5019\uff0c\u7ba1\u7406\u5e93\u5411\u64cd\u4f5c\u7cfb\u7edf\u7533\u8bf7\u4e00\u5757\u7a7a\u95f4\uff08\u53ef\u80fd\u4f1a\u6bd4\u4f60\u7533\u8bf7\u7684\u5927\u4e00", "\n            \u4e9b\uff09\uff0c\u7136\u540e\u5728\u8fd9\u5757\u7a7a\u95f4\u4e2d\u8bb0\u5f55\u4e00\u4e9b\u7ba1\u7406\u4fe1\u606f\uff08\u4e00\u822c\u662f\u5728\u4f60\u7533\u8bf7\u7684\u5185\u5b58\u524d\u9762\u4e00\u70b9\uff09\uff0c\u5e76\u5c06", "\n            \u53ef\u7528\u5185\u5b58\u7684\u5730\u5740\u8fd4\u56de\u3002\u4f46\u662f\u91ca\u653e\u5185\u5b58\u7684\u65f6\u5019\uff0c\u7ba1\u7406\u5e93\u901a\u5e38\u90fd\u4e0d\u4f1a\u5c06\u5185\u5b58\u8fd8\u7ed9\u64cd\u4f5c\u7cfb\u7edf\uff0c", "\n            \u56e0\u6b64\u4f60\u662f\u53ef\u4ee5\u7ee7\u7eed\u8bbf\u95ee\u8fd9\u5757\u5730\u5740\u7684\uff0c\u53ea\u4e0d\u8fc7\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u697c\u4e0a\u90fd\u8bf4\u8fc7\u4e86\uff0c\u6700\u597d\u522b\u8fd9", "\n            \u4e48\u5e72\u3002", "\n            char a[10],strlen(a)\u4e3a\u4ec0\u4e48\u7b49\u4e8e15\uff1f\u8fd0\u884c\u7684\u7ed3\u679c", "\n            #include \u201cstdio.h\u201d", "\n            #include \u201cstring.h\u201d", "\n            void main()", "\n            {", "\n            char aa[10];", "\n            printf(\u201c%d\u201d,strlen(aa));", "\n            }", "\n            sizeof()\u548c\u521d\u4e0d\u521d\u59cb\u5316\uff0c\u6ca1\u6709\u5173\u7cfb\uff1b", "\n            strlen()\u548c\u521d\u59cb\u5316\u6709\u5173\u3002", "\n            char (*str)[20];/*str\u662f\u4e00\u4e2a\u6570\u7ec4\u6307\u9488\uff0c\u5373\u6307\u5411\u6570\u7ec4\u7684\u6307\u9488\uff0e*/", "\n            char *str[20];/*str\u662f\u4e00\u4e2a\u6307\u9488\u6570\u7ec4\uff0c\u5176\u5143\u7d20\u4e3a\u6307\u9488\u578b\u6570\u636e\uff0e*/", "\n            long a=0\u00d7801010;", "\n            a+5=?", "\n            0\u00d7801010\u7528\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a\uff1a\u201c1000 0000 0001 0000 0001 0000\u201d\uff0c\u5341\u8fdb\u5236\u7684\u503c\u4e3a", "\n            8392720\uff0c\u518d\u52a0\u4e0a5\u5c31\u662f8392725\u7f57", "\n            1)\u7ed9\u5b9a\u7ed3\u6784struct A", "\n            {", "\n            char t:4;", "\n            char k:4;", "\n            unsigned short i:8;", "\n            unsigned long m;", "\n            };\u95eesizeof(A) = ?", "\n            \u7ed9\u5b9a\u7ed3\u6784struct A", "\n            {", "\n            char t:4; 4\u4f4d", "\n            char k:4; 4\u4f4d", "\n            unsigned short i:8; 8\u4f4d", "\n            unsigned long m; // \u504f\u79fb2\u5b57\u8282\u4fdd\u8bc14\u5b57\u8282\u5bf9\u9f50", "\n            }; // \u51718\u5b57\u8282", "\n            2)\u4e0b\u9762\u7684\u51fd\u6570\u5b9e\u73b0\u5728\u4e00\u4e2a\u6570\u4e0a\u52a0\u4e00\u4e2a\u6570\uff0c\u6709\u4ec0\u4e48\u9519\u8bef\uff1f\u8bf7\u6539\u6b63\u3002", "\n            int add_n ( int n )", "\n            {", "\n            static int i = 100;", "\n            i += n;", "\n            return i;", "\n            }", "\n            \u5f53\u4f60\u7b2c\u4e8c\u6b21\u8c03\u7528\u65f6\u5f97\u4e0d\u5230\u6b63\u786e\u7684\u7ed3\u679c\uff0c\u96be\u9053\u4f60\u5199\u4e2a\u51fd\u6570\u5c31\u662f\u4e3a\u4e86\u8c03\u7528\u4e00\u6b21\uff1f\u95ee\u9898\u5c31\u51fa\u5728", "\n            static\u4e0a\uff1f", "\n            // \u5e2e\u5fd9\u5206\u6790\u4e00\u4e0b", "\n            #include", "\n            #include", "\n            #include", "\n            #include", "\n            #include", "\n            #include", "\n            typedef struct AA", "\n            {", "\n            int b1:5;", "\n            int b2:2;", "\n            }AA;", "\n            void main()", "\n            {", "\n            AA aa;", "\n            char cc[100];", "\n            strcpy(cc,\u201d0123456789abcdefghijklmnopqrstuvwxyz\u201d);", "\n            cout\n            memcpy(&aa,cc,sizeof(AA));", "\n            cout \n            \u7b54\u6848\u662f -16\u548c\uff11", "\n            \u9996\u5148sizeof(AA)\u7684\u5927\u5c0f\u4e3a4,b1\u548cb2\u5206\u522b\u53605bit\u548c2bit.", "\n            \u7ecf\u8fc7strcpy\u548cmemcpy\u540e,aa\u76844\u4e2a\u5b57\u8282\u6240\u5b58\u653e\u7684\u503c\u662f:", "\n            0,1,2,3\u7684ASC\u7801\uff0c\u537300110000,00110001,00110010,00110011", "\n            \u6240\u4ee5\uff0c\u6700\u540e\u4e00\u6b65\uff1a\u663e\u793a\u7684\u662f\u8fd9\uff14\u4e2a\u5b57\u8282\u7684\u524d\uff15\u4f4d\uff0c\u548c\u4e4b\u540e\u7684\uff12\u4f4d", "\n            \u5206\u522b\u4e3a\uff1a10000,\u548c01", "\n            \u56e0\u4e3aint\u662f\u6709\u6b63\u8d1f\u4e4b\u5206 \u6240\u4ee5\uff1a\u7b54\u6848\u662f-16\u548c\uff11", "\n            \u6c42\u51fd\u6570\u8fd4\u56de\u503c\uff0c\u8f93\u5165x=9999;", "\n            int func \uff08 x \uff09", "\n            {", "\n            int countx = 0;", "\n            while ( x )", "\n            {", "\n            countx ++;", "\n            x = x&(x-1);", "\n            }", "\n            return countx;", "\n            }", "\n            \u7ed3\u679c\u5462\uff1f", "\n            \u77e5\u9053\u4e86\u8fd9\u662f\u7edf\u8ba19999\u7684\u4e8c\u8fdb\u5236\u6570\u503c\u4e2d\u6709\u591a\u5c11\u4e2a1\u7684\u51fd\u6570\uff0c\u4e14\u6709", "\n            9999\uff1d9\u00d71024\uff0b512\uff0b256\uff0b15", "\n            9\u00d71024\u4e2d\u542b\u67091\u7684\u4e2a\u6570\u4e3a2\uff1b", "\n            512\u4e2d\u542b\u67091\u7684\u4e2a\u6570\u4e3a1\uff1b", "\n            256\u4e2d\u542b\u67091\u7684\u4e2a\u6570\u4e3a1\uff1b", "\n            15\u4e2d\u542b\u67091\u7684\u4e2a\u6570\u4e3a4\uff1b", "\n            \u6545\u5171\u67091\u7684\u4e2a\u6570\u4e3a8\uff0c\u7ed3\u679c\u4e3a8\u3002", "\n            1000 - 1 = 0111\uff0c\u6b63\u597d\u662f\u539f\u6570\u53d6\u53cd\u3002\u8fd9\u5c31\u662f\u539f\u7406\u3002", "\n            \u7528\u8fd9\u79cd\u65b9\u6cd5\u6765\u6c421\u7684\u4e2a\u6570\u662f\u5f88\u6548\u7387\u5f88\u9ad8\u7684\u3002", "\n            \u4e0d\u5fc5\u53bb\u4e00\u4e2a\u4e00\u4e2a\u5730\u79fb\u4f4d\u3002\u5faa\u73af\u6b21\u6570\u6700\u5c11\u3002", "\n            int a,b,c \u8bf7\u5199\u51fd\u6570\u5b9e\u73b0C=a+b ,\u4e0d\u53ef\u4ee5\u6539\u53d8\u6570\u636e\u7c7b\u578b,\u5982\u5c06c\u6539\u4e3along int,\u5173\u952e\u662f\u5982\u4f55", "\n            \u5904\u7406\u6ea2\u51fa\u95ee\u9898", "\n            bool add (int a, int b,int *c)", "\n            {", "\n            *c=a+b;", "\n            return (a>0 && b>0 &&(*ca || *c>b)));", "\n            }", "\n            \u5206\u6790\uff1a", "\n            struct bit", "\n            { int a:3;", "\n            int b:2;", "\n            int c:3;", "\n            };", "\n            int main()", "\n            {", "\n            bit s;", "\n            char *c=(char*)&s;", "\n            cout\n            cout \n            printf(\"%x\",a);", "\n            return 0;", "\n            }", "\n            \u8f93\u51fa\u4e3a\u4ec0\u4e48\u662f", "\n            4", "\n            1", "\n            -1", "\n            -4", "\n            ffffffff", "\n            \u56e0\u4e3a0x99\u5728\u5185\u5b58\u4e2d\u8868\u793a\u4e3a 100 11 001 , a = 001, b = 11, c = 100", "\n            \u5f53c\u4e3a\u6709\u7b26\u5408\u6570\u65f6, c = 100, \u6700\u9ad81\u4e3a\u8868\u793ac\u4e3a\u8d1f\u6570\uff0c\u8d1f\u6570\u5728\u8ba1\u7b97\u673a\u7528\u8865\u7801\u8868\u793a\uff0c\u6240\u4ee5c", "\n            = -4;\u540c\u7406", "\n            b = -1;", "\n            \u5f53c\u4e3a\u6709\u7b26\u5408\u6570\u65f6, c = 100,\u5373 c = 4,\u540c\u7406 b = 3", "\n            \u4f4d\u57df \uff1a", "\n            \u6709\u4e9b\u4fe1\u606f\u5728\u5b58\u50a8\u65f6\uff0c\u5e76\u4e0d\u9700\u8981\u5360\u7528\u4e00\u4e2a\u5b8c\u6574\u7684\u5b57\u8282\uff0c \u800c\u53ea\u9700\u5360\u51e0\u4e2a\u6216\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u3002\u4f8b", "\n            \u5982\u5728\u5b58\u653e\u4e00\u4e2a\u5f00\u5173\u91cf\u65f6\uff0c\u53ea\u67090\u548c1 \u4e24\u79cd\u72b6\u6001\uff0c\u7528\u4e00\u4f4d\u4e8c\u8fdb\u4f4d\u5373\u53ef\u3002\u4e3a\u4e86\u8282\u7701\u5b58\u50a8\u7a7a\u95f4\uff0c", "\n            \u5e76\u4f7f\u5904\u7406\u7b80\u4fbf\uff0c\uff23\u8bed\u8a00\u53c8\u63d0\u4f9b\u4e86\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u79f0\u4e3a\u201c\u4f4d\u57df\u201d\u6216\u201c\u4f4d\u6bb5\u201d\u3002\u6240\u8c13\u201c\u4f4d", "\n            \u57df\u201d\u662f\u628a\u4e00\u4e2a\u5b57\u8282\u4e2d\u7684\u4e8c\u8fdb\u4f4d\u5212\u5206\u4e3a\u51e0\u4e2a\u4e0d\u540c\u7684\u533a\u57df\uff0c \u5e76\u8bf4\u660e\u6bcf\u4e2a\u533a\u57df\u7684\u4f4d\u6570\u3002\u6bcf\u4e2a\u57df", "\n            \u6709\u4e00\u4e2a\u57df\u540d\uff0c\u5141\u8bb8\u5728\u7a0b\u5e8f\u4e2d\u6309\u57df\u540d\u8fdb\u884c\u64cd\u4f5c\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u628a\u51e0\u4e2a\u4e0d\u540c\u7684\u5bf9\u8c61\u7528\u4e00\u4e2a\u5b57\u8282", "\n            \u7684\u4e8c\u8fdb\u5236\u4f4d\u57df\u6765\u8868\u793a\u3002\u4e00\u3001\u4f4d\u57df\u7684\u5b9a\u4e49\u548c\u4f4d\u57df\u53d8\u91cf\u7684\u8bf4\u660e\u4f4d\u57df\u5b9a\u4e49\u4e0e\u7ed3\u6784\u5b9a\u4e49\u76f8\u4eff\uff0c\u5176", "\n            \u5f62\u5f0f\u4e3a\uff1a", "\n            struct \u4f4d\u57df\u7ed3\u6784\u540d", "\n            { \u4f4d\u57df\u5217\u8868 };", "\n            \u5176\u4e2d\u4f4d\u57df\u5217\u8868\u7684\u5f62\u5f0f\u4e3a\uff1a \u7c7b\u578b\u8bf4\u660e\u7b26 \u4f4d\u57df\u540d\uff1a\u4f4d\u57df\u957f\u5ea6", "\n            \u4f8b\u5982\uff1a", "\n            struct bs", "\n            {", "\n            int a:8;", "\n            int b:2;", "\n            int c:6;", "\n            };", "\n            \u4f4d\u57df\u53d8\u91cf\u7684\u8bf4\u660e\u4e0e\u7ed3\u6784\u53d8\u91cf\u8bf4\u660e\u7684\u65b9\u5f0f\u76f8\u540c\u3002 \u53ef\u91c7\u7528\u5148\u5b9a\u4e49\u540e\u8bf4\u660e\uff0c\u540c\u65f6\u5b9a\u4e49\u8bf4\u660e\u6216\u8005", "\n            \u76f4\u63a5\u8bf4\u660e\u8fd9\u4e09\u79cd\u65b9\u5f0f\u3002\u4f8b\u5982\uff1a", "\n            struct bs", "\n            {", "\n            int a:8;", "\n            int b:2;", "\n            int c:6;", "\n            }data;", "\n            \u8bf4\u660edata\u4e3abs\u53d8\u91cf\uff0c\u5171\u5360\u4e24\u4e2a\u5b57\u8282\u3002\u5176\u4e2d\u4f4d\u57dfa\u53608\u4f4d\uff0c\u4f4d\u57dfb\u53602\u4f4d\uff0c\u4f4d\u57dfc\u53606\u4f4d\u3002\u5bf9\u4e8e", "\n            \u4f4d\u57df\u7684\u5b9a\u4e49\u5c1a\u6709\u4ee5\u4e0b\u51e0\u70b9\u8bf4\u660e\uff1a", "\n            1. \u4e00\u4e2a\u4f4d\u57df\u5fc5\u987b\u5b58\u50a8\u5728\u540c\u4e00\u4e2a\u5b57\u8282\u4e2d\uff0c\u4e0d\u80fd\u8de8\u4e24\u4e2a\u5b57\u8282\u3002\u5982\u4e00\u4e2a\u5b57\u8282\u6240\u5269\u7a7a\u95f4\u4e0d\u591f\u5b58\u653e", "\n            \u53e6\u4e00\u4f4d\u57df\u65f6\uff0c\u5e94\u4ece\u4e0b\u4e00\u5355\u5143\u8d77\u5b58\u653e\u8be5\u4f4d\u57df\u3002\u4e5f\u53ef\u4ee5\u6709\u610f\u4f7f\u67d0\u4f4d\u57df\u4ece\u4e0b\u4e00\u5355\u5143\u5f00\u59cb\u3002\u4f8b", "\n            \u5982\uff1a", "\n            struct bs", "\n            {", "\n            unsigned a:4", "\n            unsigned :0 /*\u7a7a\u57df*/", "\n            unsigned b:4 /*\u4ece\u4e0b\u4e00\u5355\u5143\u5f00\u59cb\u5b58\u653e*/", "\n            unsigned c:4", "\n            }", "\n            \u5728\u8fd9\u4e2a\u4f4d\u57df\u5b9a\u4e49\u4e2d\uff0ca\u5360\u7b2c\u4e00\u5b57\u8282\u76844\u4f4d\uff0c\u540e4\u4f4d\u586b0\u8868\u793a\u4e0d\u4f7f\u7528\uff0cb\u4ece\u7b2c\u4e8c\u5b57\u8282\u5f00\u59cb\uff0c\u5360\u7528", "\n            4\u4f4d\uff0cc\u5360\u75284\u4f4d\u3002", "\n            2. \u7531\u4e8e\u4f4d\u57df\u4e0d\u5141\u8bb8\u8de8\u4e24\u4e2a\u5b57\u8282\uff0c\u56e0\u6b64\u4f4d\u57df\u7684\u957f\u5ea6\u4e0d\u80fd\u5927\u4e8e\u4e00\u4e2a\u5b57\u8282\u7684\u957f\u5ea6\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e0d", "\n            \u80fd\u8d85\u8fc78\u4f4d\u4e8c\u8fdb\u4f4d\u3002", "\n            3. \u4f4d\u57df\u53ef\u4ee5\u65e0\u4f4d\u57df\u540d\uff0c\u8fd9\u65f6\u5b83\u53ea\u7528\u6765\u4f5c\u586b\u5145\u6216\u8c03\u6574\u4f4d\u7f6e\u3002\u65e0\u540d\u7684\u4f4d\u57df\u662f\u4e0d\u80fd\u4f7f\u7528\u7684\u3002\u4f8b", "\n            \u5982\uff1a", "\n            struct k", "\n            {", "\n            int a:1", "\n            int :2 /*\u8be52\u4f4d\u4e0d\u80fd\u4f7f\u7528*/", "\n            int b:3", "\n            int c:2", "\n            };", "\n            \u4ece\u4ee5\u4e0a\u5206\u6790\u53ef\u4ee5\u770b\u51fa\uff0c\u4f4d\u57df\u5728\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u79cd\u7ed3\u6784\u7c7b\u578b\uff0c \u4e0d\u8fc7\u5176\u6210\u5458\u662f\u6309\u4e8c\u8fdb\u4f4d\u5206\u914d", "\n            \u7684\u3002", "\n            \u4e8c\u3001\u4f4d\u57df\u7684\u4f7f\u7528\u4f4d\u57df\u7684\u4f7f\u7528\u548c\u7ed3\u6784\u6210\u5458\u7684\u4f7f\u7528\u76f8\u540c\uff0c\u5176\u4e00\u822c\u5f62\u5f0f\u4e3a\uff1a \u4f4d\u57df\u53d8\u91cf\u540d\u2022\u4f4d\u57df", "\n            \u540d \u4f4d\u57df\u5141\u8bb8\u7528\u5404\u79cd\u683c\u5f0f\u8f93\u51fa\u3002", "\n            main(){", "\n            struct bs", "\n            {", "\n            unsigned a:1;", "\n            unsigned b:3;", "\n            unsigned c:4;", "\n            } bit,*pbit;", "\n            bit.a=1;", "\n            bit.b=7;", "\n            bit.c=15;", "\n            pri", "\n            \u6539\u9519\uff1a", "\n            #include", "\n            int main(void) {", "\n            int **p;", "\n            int arr[100];", "\n            p = &arr;", "\n            return 0;", "\n            }", "\n            \u89e3\u7b54\uff1a", "\n            \u641e\u9519\u4e86,\u662f\u6307\u9488\u7c7b\u578b\u4e0d\u540c,", "\n            int **p; //\u4e8c\u7ea7\u6307\u9488", "\n            &arr; //\u5f97\u5230\u7684\u662f\u6307\u5411\u7b2c\u4e00\u7ef4\u4e3a100\u7684\u6570\u7ec4\u7684\u6307\u9488", "\n            #include", "\n            int main(void) {", "\n            int **p, *q;", "\n            int arr[100];", "\n            q = arr;", "\n            p = &q;", "\n            return 0;", "\n            }", "\n            \u4e0b\u9762\u8fd9\u4e2a\u7a0b\u5e8f\u6267\u884c\u540e\u4f1a\u6709\u4ec0\u4e48\u9519\u8bef\u6216\u8005\u6548\u679c:", "\n            #define MAX 255", "\n            int main()", "\n            {", "\n            unsigned char A[MAX],i;//i\u88ab\u5b9a\u4e49\u4e3aunsigned char", "\n            for (i=0;i\n            A[i]=i;", "\n            }", "\n            \u89e3\u7b54\uff1a\u6b7b\u5faa\u73af\u52a0\u6570\u7ec4\u8d8a\u754c\u8bbf\u95ee\uff08C/C++\u4e0d\u8fdb\u884c\u6570\u7ec4\u8d8a\u754c\u68c0\u67e5\uff09", "\n            MAX=255", "\n            \u6570\u7ec4A\u7684\u4e0b\u6807\u8303\u56f4\u4e3a:0..MAX-1,\u8fd9\u662f\u5176\u4e00..", "\n            \u5176\u4e8c.\u5f53i\u5faa\u73af\u5230255\u65f6,\u5faa\u73af\u5185\u6267\u884c:", "\n            A[255]=255;", "\n            \u8fd9\u53e5\u672c\u8eab\u6ca1\u6709\u95ee\u9898..\u4f46\u662f\u8fd4\u56defor (i=0;i\n            \u7531\u4e8eunsigned char\u7684\u53d6\u503c\u8303\u56f4\u5728(0..255),i++\u4ee5\u540ei\u53c8\u4e3a0\u4e86..\u65e0\u9650\u5faa\u73af\u4e0b\u53bb.", "\n            struct name1{", "\n            char str;", "\n            short x;", "\n            int num;", "\n            }", "\n            struct name2{", "\n            char str;", "\n            int num;", "\n            short x;", "\n            }", "\n            sizeof(struct name1)=8,sizeof(struct name2)=12", "\n            \u5728\u7b2c\u4e8c\u4e2a\u7ed3\u6784\u4e2d\uff0c\u4e3a\u4fdd\u8bc1num\u6309\u56db\u4e2a\u5b57\u8282\u5bf9\u9f50\uff0cchar\u540e\u5fc5\u987b\u7559\u51fa3\u5b57\u8282\u7684\u7a7a\u95f4\uff1b\u540c\u65f6\u4e3a\u4fdd", "\n            \u8bc1\u6574\u4e2a\u7ed3\u6784\u7684\u81ea\u7136\u5bf9\u9f50\uff08\u8fd9\u91cc\u662f4\u5b57\u8282\u5bf9\u9f50\uff09\uff0c\u5728x\u540e\u8fd8\u8981\u8865\u9f502\u4e2a\u5b57\u8282\uff0c\u8fd9\u6837\u5c31\u662f12\u5b57", "\n            \u8282\u3002", "\n            intel\uff1a", "\n            A.c \u548cB.c\u4e24\u4e2ac\u6587\u4ef6\u4e2d\u4f7f\u7528\u4e86\u4e24\u4e2a\u76f8\u540c\u540d\u5b57\u7684static\u53d8\u91cf,\u7f16\u8bd1\u7684\u65f6\u5019\u4f1a\u4e0d\u4f1a\u6709\u95ee\u9898?\u8fd9", "\n            \u4e24\u4e2astatic\u53d8\u91cf\u4f1a\u4fdd\u5b58\u5230\u54ea\u91cc\uff08\u6808\u8fd8\u662f\u5806\u6216\u8005\u5176\u4ed6\u7684\uff09?", "\n            static\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u8868\u660e\u8fd9\u4e2a\u53d8\u91cf\u4ec5\u5728\u672c\u6a21\u5757\u4e2d\u6709\u610f\u4e49\uff0c\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u6a21\u5757\u3002", "\n            \u4ed6\u4eec\u90fd\u653e\u5728\u6570\u636e\u533a\uff0c\u4f46\u662f\u7f16\u8bd1\u5668\u5bf9\u4ed6\u4eec\u7684\u547d\u540d\u662f\u4e0d\u540c\u7684\u3002", "\n            \u5982\u679c\u8981\u4f7f\u53d8\u91cf\u5728\u5176\u4ed6\u6a21\u5757\u4e5f\u6709\u610f\u4e49\u7684\u8bdd\uff0c\u9700\u8981\u4f7f\u7528extern\u5173\u952e\u5b57\u3002", "\n            struct s1", "\n            {", "\n            int i: 8;", "\n            int j: 4;", "\n            int a: 3;", "\n            double b;", "\n            };", "\n            struct s2", "\n            {", "\n            int i: 8;", "\n            int j: 4;", "\n            double b;", "\n            int a:3;", "\n            };", "\n            printf(\"sizeof(s1)= %d\\n\", sizeof(s1));", "\n            printf(\"sizeof(s2)= %d\\n\", sizeof(s2));", "\n            result: 16, 24", "\n            \u7b2c\u4e00\u4e2astruct s1", "\n            {", "\n            int i: 8;", "\n            int j: 4;", "\n            int a: 3;", "\n            double b;", "\n            };", "\n            \u7406\u8bba\u4e0a\u662f\u8fd9\u6837\u7684\uff0c\u9996\u5148\u662fi\u5728\u76f8\u5bf90\u7684\u4f4d\u7f6e\uff0c\u53608\u4f4d\u4e00\u4e2a\u5b57\u8282\uff0c\u7136\u540e\uff0cj\u5c31\u5728\u76f8\u5bf9\u4e00\u4e2a\u5b57\u8282", "\n            \u7684\u4f4d\u7f6e\uff0c\u7531\u4e8e\u4e00\u4e2a\u4f4d\u7f6e\u7684\u5b57\u8282\u6570\u662f4\u4f4d\u7684\u500d\u6570\uff0c\u56e0\u6b64\u4e0d\u7528\u5bf9\u9f50\uff0c\u5c31\u653e\u5728\u90a3\u91cc\u4e86\uff0c\u7136\u540e\u662f", "\n            a\uff0c\u8981\u57283\u4f4d\u7684\u500d\u6570\u5173\u7cfb\u7684\u4f4d\u7f6e\u4e0a\uff0c\u56e0\u6b64\u8981\u79fb\u4e00\u4f4d\uff0c\u572815\u4f4d\u7684\u4f4d\u7f6e\u4e0a\u653e\u4e0b\uff0c\u76ee\u524d\u603b\u5171\u662f18", "\n            \u4f4d\uff0c\u6298\u7b97\u8fc7\u6765\u662f2\u5b57\u82822\u4f4d\u7684\u6837\u5b50\uff0c\u7531\u4e8edouble\u662f8 \u5b57\u8282\u7684\uff0c\u56e0\u6b64\u8981\u5728\u76f8\u5bf90\u8981\u662f8\u4e2a\u5b57\u8282", "\n            \u7684\u4f4d\u7f6e\u4e0a\u653e\u4e0b\uff0c\u56e0\u6b64\u4ece18\u4f4d\u5f00\u59cb\u52308\u4e2a\u5b57\u8282\u4e4b\u95f4\u7684\u4f4d\u7f6e\u88ab\u5ffd\u7565\uff0c\u76f4\u63a5\u653e\u57288\u5b57\u8282\u7684\u4f4d\u7f6e", "\n            \u4e86\uff0c\u56e0\u6b64\uff0c\u603b\u5171\u662f16\u5b57\u8282\u3002", "\n            \u7b2c\u4e8c\u4e2a\u6700\u540e\u4f1a\u5bf9\u7167\u662f\u4e0d\u662f\u7ed3\u6784\u4f53\u5185\u6700\u5927\u6570\u636e\u7684\u500d\u6570\uff0c\u4e0d\u662f\u7684\u8bdd\uff0c\u4f1a\u8865\u6210\u662f\u6700\u5927\u6570\u636e\u7684\u500d", "\n            \u6570", "\n            1\uff09\u8bfb\u6587\u4ef6file1.txt\u7684\u5185\u5bb9\uff08\u4f8b\u5982\uff09\uff1a", "\n            12", "\n            34", "\n            56", "\n            \u8f93\u51fa\u5230file2.txt\uff1a", "\n            56", "\n            34", "\n            12", "\n            \uff08\u9006\u5e8f\uff09", "\n            2\uff09\u8f93\u51fa\u548c\u4e3a\u4e00\u4e2a\u7ed9\u5b9a\u6574\u6570\u7684\u6240\u6709\u7ec4\u5408", "\n            \u4f8b\u5982n=5", "\n            5=1+4\uff1b5=2+3\uff08\u76f8\u52a0\u7684\u6570\u4e0d\u80fd\u91cd\u590d\uff09", "\n            \u5219\u8f93\u51fa", "\n            1\uff0c4\uff1b2\uff0c3\u3002", "\n            \u671b\u9ad8\u624b\u8d50\u6559\uff01\uff01", "\n            \u7b2c\u4e00\u9898,\u6ce8\u610f\u53ef\u589e\u957f\u6570\u7ec4\u7684\u5e94\u7528.", "\n            #include", "\n            #include", "\n            int main(void)", "\n            {", "\n            int MAX = 10;", "\n            int *a = (int *)malloc(MAX * sizeof(int));", "\n            int *b;", "\n            FILE *fp1;", "\n            FILE *fp2;", "\n            fp1 = fopen(\"a.txt\",\"r\");", "\n            if(fp1 == NULL)", "\n            {printf(\"error1\");", "\n            exit(-1);", "\n            }", "\n            fp2 = fopen(\"b.txt\",\"w\");", "\n            if(fp2 == NULL)", "\n            {printf(\"error2\");", "\n            exit(-1);", "\n            }", "\n            int i = 0;", "\n            int j = 0;", "\n            while(fscanf(fp1,\"%d\",&a[i]) != EOF)", "\n            {", "\n            i++;", "\n            j++;", "\n            if(i >= MAX)", "\n            {", "\n            MAX = 2 * MAX;", "\n            b = (int*)realloc(a,MAX * sizeof(int));", "\n            if(b == NULL)", "\n            {", "\n            printf(\u201cerror3\u2033);", "\n            exit(-1);", "\n            }", "\n            a = b;", "\n            }", "\n            }", "\n            for(;\u2013j >= 0;)", "\n            fprintf(fp2,\u201d%d\\n\u201d,a[j]);", "\n            fclose(fp1);", "\n            fclose(fp2);", "\n            return 0;", "\n            }", "\n            \u7b2c\u4e8c\u9898.", "\n            #include", "\n            int main(void)", "\n            {", "\n            unsigned long int i,j,k;", "\n            printf(\u201cplease input the number\\n\u201d);", "\n            scanf(\u201c%d\u201d,&i);", "\n            if( i % 2 == 0)", "\n            j = i / 2;", "\n            else", "\n            j = i / 2 + 1;", "\n            printf(\u201cThe result is \\n\u201d);", "\n            for(k = 0; k \n            printf(\u201c%d = %d + %d\\n\u201d,i,k,i \u2013 k);", "\n            return 0;", "\n            }", "\n            #include", "\n            void main()", "\n            {", "\n            unsigned long int a,i=1;", "\n            scanf(\u201c%d\u201d,&a);", "\n            if(a%2==0)", "\n            {", "\n            for(i=1;iprintf(\u201c%d\u201d,a,a-i);", "\n            }", "\n            else", "\n            for(i=1;i\n            printf(\u201d %d, %d\u201d,i,a-i);", "\n            }", "\n            \u5144\u5f1f,\u8fd9\u6837\u7684\u9898\u76ee\u82e5\u662f\u505a\u4e0d\u51fa\u6765\u5b9e\u5728\u662f\u6709\u4e9b\u4e0d\u5e94\u8be5, \u7ed9\u4f60\u4e00\u4e2a\u9012\u89c4\u53cd\u5411\u8f93\u51fa\u5b57\u7b26\u4e32\u7684\u4f8b", "\n            \u5b50,\u53ef\u8c13\u662f\u53cd\u5e8f\u7684\u7ecf\u5178\u4f8b\u7a0b.", "\n            void inverse(char *p)", "\n            {", "\n            if( *p = = \u2018\\0\u2018 )", "\n            return;", "\n            inverse( p+1 );", "\n            printf( \u201c%c\u201d, *p );", "\n            }", "\n            int main(int argc, char *argv[])", "\n            {", "\n            inverse(\u201cabc\\0\u2033);", "\n            return 0;", "\n            }", "\n            \u501f\u7b7e\u4e86\u697c\u4e0a\u7684\u201c\u9012\u89c4\u53cd\u5411\u8f93\u51fa\u201d", "\n            #include", "\n            void test(FILE *fread, FILE *fwrite)", "\n            {", "\n            char buf[1024] = {0};", "\n            if (!fgets(buf, sizeof(buf), fread))", "\n            return;", "\n            test( fread, fwrite );", "\n            fputs(buf, fwrite);", "\n            }", "\n            int main(int argc, char *argv[])", "\n            {", "\n            FILE *fr = NULL;", "\n            FILE *fw = NULL;", "\n            fr = fopen(\u201cdata\u201d, \u201crb\u201d);", "\n            fw = fopen(\u201cdataout\u201d, \u201cwb\u201d);", "\n            test(fr, fw);", "\n            fclose(fr);", "\n            fclose(fw);", "\n            return 0;", "\n            }"], "title": "C\u8bed\u8a00\u9762\u8bd5\u9898\u5927\u6c47\u603b"},
{"contents": ["1.\u5b9e\u73b0\u53cc\u5411\u94fe\u8868\u5220\u9664\u4e00\u4e2a\u8282\u70b9P\uff0c\u5728\u8282\u70b9P\u540e\u63d2\u5165\u4e00\u4e2a\u8282\u70b9\uff0c\u5199\u51fa\u8fd9\u4e24\u4e2a\u51fd\u6570;", "\n\u7b54\uff1a", "//\u5047\u8bbe\u7ebf\u6027\u8868\u7684\u53cc\u5411\u94fe\u8868\u5b58\u50a8\u7ed3\u6784", "\ntypedef struct DulNode{", "\nstruct DulNode *prior; //\u524d\u9a71\u6307\u9488", "\nElemType data; //\u6570\u636e", "\nstruct DulNode *next; //\u540e\u7ee7\u6307\u9488", "\n}DulNode,*DuLinkList;", "\n//\u5220\u9664\u64cd\u4f5c", "\nStatus ListDelete_DuL(DuLinkList &L,int i,ElemType &e)", "\n{", "\nif(!(p=GetElemP_DuL(L,i))) //\u6b64\u5904\u5f97\u5230i\u4f4d\u7f6e\u7684\u8282\u70b9\u6307\u9488\uff0c\u5982\u679c\u6709\u9700\u8981\u4e5f\u5f97\u5199\u51fa\u5177\u4f53\u51fd\u6570\u5b9e\u73b0", "\nreturn ERROR;", "\ne=p->data;", "\np->prior->next=p->next;", "\np->next->prior=p->pror;", "\nfree(p);", "\nreturn OK;", "\n}", "\n//\u63d2\u5165\u64cd\u4f5c", "\nStatus ListInsert_DuL(DuLinkList &L,int i,ElemType &e)", "\n{", "\nif(!(p=GetElemP_DuL(L,i)))", "\nreturn ERROR;", "\nif(!(s=(DuLinkList)malloc(sizeof(DuLNode))))", "\nreturn ERROR;", "s->data=e;", "\ns->prior=p->prior;", "\np->prior->next=s;", "\ns->next=p;", "\np->prior=s;", "\nreturn OK;", "\n}", "2.\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u5c06\u5176\u4e2d\u7684\\t\u90fd\u8f6c\u6362\u62104\u4e2a\u7a7a\u683c\u3002", "\n\u7b54\uff1a", "\n\u8be5\u51fd\u6570\u547d\u540d\u4e3aconvert,\u53c2\u6570\u7684\u610f\u4e49\u4e3a\uff1a", "\n*strDest\u76ee\u7684\u5b57\u7b26\u4e32,*strSrc\u6e90\u5b57\u7b26\u4e32,length\u6e90\u5b57\u7b26\u4e32\u7684\u957f\u5ea6", "\n\u51fd\u6570\u5b9e\u73b0\u4e3a\uff1a", "\nchar* convert(char *strDest, const char *strSrc,int length)", "\n{", "\nchar * cp = strDest;", "\nint i=0;", "\nwhile(*strSrc && i{", "\nif (*strSrc==\u2019\\t\u2019) //\u5c06\\t\u8f6c\u6362\u62104\u4e2a\u7a7a\u683c", "\n{", "\nfor(int j=0;j\n*cp++=' ';", "\n}", "\nelse //\u5426\u5219\u76f4\u63a5\u62f7\u8d1d", "\n*cp++=*strSrc;", "\nstrSrc++;", "\ni++;", "\n}", "\nreturn strDest;", "\n}", "3.Windows\u7a0b\u5e8f\u7684\u5165\u53e3\u662f\u54ea\u91cc\uff1f\u5199\u51faWindows\u6d88\u606f\u673a\u5236\u7684\u6d41\u7a0b\u3002", "\n\u7b54\uff1a", "\nWindows\u7a0b\u5e8f\u7684\u5165\u53e3\u662fWinMain\u51fd\u6570", "\n\u6d88\u606f\u673a\u5236\uff1a\u7cfb\u7edf\u5c06\u4f1a\u7ef4\u62a4\u4e00\u4e2a\u6216\u591a\u4e2a\u6d88\u606f\u961f\u5217\uff0c\u6240\u6709\u4ea7\u751f\u7684\u6d88\u606f\u90fd\u4f1a\u88ab\u653e\u5165\u6216\u662f\u63d2\u5165\u961f\u5217\u4e2d\u3002\u7cfb\u7edf\u4f1a\u5728\u961f\u5217\u4e2d\u53d6\u51fa\u6bcf\u4e00\u6761\u6d88\u606f\uff0c\u6839\u636e\u6d88\u606f\u7684\u63a5\u6536\u53e5\u67c4\u800c\u5c06\u8be5\u6d88\u606f\u53d1\u9001\u7ed9\u62e5\u6709\u8be5\u7a97\u53e3\u7684\u7a0b\u5e8f\u7684\u6d88\u606f\u5faa\u73af\u3002\u6bcf\u4e00\u4e2a\u8fd0\u884c\u7684\u7a0b\u5e8f\u90fd\u6709\u81ea\u5df1\u7684\u6d88\u606f\u5faa\u73af\uff0c\u5728\u5faa\u73af\u4e2d\u5f97\u5230\u5c5e\u4e8e\u81ea\u5df1\u7684\u6d88\u606f\u5e76\u6839\u636e\u63a5\u6536\u7a97\u53e3\u7684\u53e5\u67c4\u8c03\u7528\u76f8\u5e94\u7684\u7a97\u53e3\u8fc7\u7a0b\u3002\u800c\u5728\u6ca1\u6709\u6d88\u606f\u65f6\u6d88\u606f\u5faa\u73af\u5c31\u5c06\u63a7\u5236\u6743\u4ea4\u7ed9\u7cfb\u7edf\u3002", "4.\u5982\u4f55\u5b9a\u4e49\u548c\u5b9e\u73b0\u4e00\u4e2a\u7c7b\u7684\u6210\u5458\u51fd\u6570\u4e3a\u56de\u8c03\u51fd\u6570\uff1f", "\n\u7b54\uff1a", "\n\u6240\u8c13\u7684\u56de\u8c03\u51fd\u6570\uff0c\u5c31\u662f\u9884\u5148\u5728\u7cfb\u7edf\u7684\u5bf9\u51fd\u6570\u8fdb\u884c\u6ce8\u518c\uff0c\u8ba9\u7cfb\u7edf\u77e5\u9053\u8fd9\u4e2a\u51fd\u6570\u7684\u5b58\u5728\uff0c\u4ee5\u540e\uff0c\u5f53\u67d0\u4e2a\u4e8b\u4ef6\u53d1\u751f\u65f6\uff0c\u518d\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u5bf9\u4e8b\u4ef6\u8fdb\u884c\u54cd\u5e94\u3002", "\n\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u7684\u6210\u5458\u51fd\u6570\u65f6\u5728\u8be5\u51fd\u6570\u524d\u52a0CALLBACK\u5373\u5c06\u5176\u5b9a\u4e49\u4e3a\u56de\u8c03\u51fd\u6570\uff0c\u51fd\u6570\u7684\u5b9e\u73b0\u548c\u666e\u901a\u6210\u5458\u51fd\u6570\u6ca1\u6709\u533a\u522b", "5.C++\u91cc\u9762\u662f\u4e0d\u662f\u6240\u6709\u7684\u52a8\u4f5c\u90fd\u662fmain()\u5f15\u8d77\u7684\uff1f\u5982\u679c\u4e0d\u662f\uff0c\u8bf7\u4e3e\u4f8b\u3002", "\n\u7b54\uff1a\u4e0d\u662f\uff0c\u6bd4\u5982\u4e2d\u65ad\u5f15\u8d77\u7684\u4e2d\u65ad\u5904\u7406\u4e0d\u662f\u76f4\u63a5\u7531main()\u5f15\u8d77\u7684\uff0c\u800c\u662f\u7531\u5916\u90e8\u4e8b\u4ef6\u5f15\u8d77\u7684\u3002", "6.C++\u91cc\u9762\u5982\u4f55\u58f0\u660econst void f(void)\u51fd\u6570\u4e3aC\u7a0b\u5e8f\u4e2d\u7684\u5e93\u51fd\u6570\uff1f", "\n\u7b54\uff1a\u5728\u8be5\u51fd\u6570\u524d\u6dfb\u52a0extern \u201cC\u201d\u58f0\u660e", "7.\u4e0b\u5217\u54ea\u4e24\u4e2a\u662f\u7b49\u540c\u7684", "\nint b;", "\nA const int* a = &b;", "\nB const* int a = &b;", "\nC const int* const a = &b;", "\nD int const* const a = &b;", "\n\u7b54\uff1a", "\n\u5404\u5f0f\u8868\u793a\u7684\u610f\u601d\u5206\u522b\u4e3a\uff1a", "\nA const int* a = &b; //*a\u662fconst,\u4f46\u6307\u9488a\u53ef\u53d8", "\nB const* int a = &b; //a\u662fconst\uff0c\u4f46*a\u53ef\u53d8", "\nC const int* const a = &b; //a\u548c*a\u90fd\u662fconst,\u5e38\u91cf\u548c\u6307\u9488\u7684\u503c\u90fd\u4e0d\u80fd\u6539\u53d8", "\nD int const* const a = &b; //a\u548c*a\u90fd\u662fconst,\u5e38\u91cf\u548c\u6307\u9488\u7684\u503c\u90fd\u4e0d\u80fd\u6539\u53d8", "\n\u56e0\u6b64C\uff0cD\u4e24\u8005\u662f\u76f8\u540c\u7684\u3002", "\n\u603b\u7ed3\u4e2a\u6280\u5de7\uff1a\u5982\u679cconst\u4f4d\u4e8e\u661f\u53f7\u7684\u5de6\u4fa7\uff0c\u5219const\u5c31\u662f\u7528\u6765\u4fee\u9970\u6307\u9488\u6240\u6307\u5411\u7684\u53d8\u91cf\uff0c\u5373\u6307\u9488\u6307\u5411\u4e3a\u5e38\u91cf\uff1b\u5982\u679cconst\u4f4d\u4e8e\u661f\u53f7\u7684\u53f3\u4fa7\uff0cconst\u5c31\u662f\u4fee\u9970\u6307\u9488\u672c\u8eab\uff0c\u5373\u6307\u9488\u672c\u8eab\u662f\u5e38\u91cf\u3002", "8. \u5185\u8054\u51fd\u6570\u5728\u7f16\u8bd1\u65f6\u662f\u5426\u505a\u53c2\u6570\u7c7b\u578b\u68c0\u67e5\uff1f", "\n\u7b54\uff1a\u505a\u7c7b\u578b\u68c0\u67e5\uff0c\u56e0\u4e3a\u5185\u8054\u51fd\u6570\u5c31\u662f\u5728\u7a0b\u5e8f\u7f16\u8bd1\u65f6\uff0c\u7f16\u8bd1\u5668\u5c06\u7a0b\u5e8f\u4e2d\u51fa\u73b0\u7684\u5185\u8054\u51fd\u6570\u7684\u8c03\u7528\u8868\u8fbe\u5f0f\u7528\u5185\u8054\u51fd\u6570\u7684\u51fd\u6570\u4f53\u6765\u4ee3\u66ff", "1. C++\u4e2d\u5982\u4f55\u963b\u6b62\u4e00\u4e2a\u7c7b\u88ab\u5b9e\u4f8b\u5316\uff1f", "\n\u7eaf\u865a\u51fd\u6570\uff1b\u6784\u9020\u51fd\u6570\u79c1\u6709\u5316\uff08\u53cb\u5143\uff09", "\n2. \u4e00\u822c\u5728\u4ec0\u4e48\u65f6\u5019\u6784\u9020\u51fd\u6570\u88ab\u58f0\u660e\u6210private\u5462\uff1f", "\nsingleton\u6a21\u5f0f\uff1b \u963b\u6b62\u67d0\u4e9b\u64cd\u4f5c\uff08\u5982\u963b\u6b62\u62f7\u8d1d\u6784\u9020\uff09", "\n3. \u4ec0\u4e48\u65f6\u5019\u7f16\u8bd1\u5668\u4f1a\u751f\u6210\u9ed8\u8ba4\u7684copy constructor\u5462\uff1f", "\n\u7528\u6237\u6ca1\u6709\u81ea\u5b9a\u4e49copy constructor\uff1b\u5728\u4ee3\u7801\u4e2d\u4f7f\u7528\u5230\u4e86copy constructor;", "\n4. \u5982\u679c\u4f60\u5df2\u7ecf\u5199\u4e86\u4e00\u4e2a\u6784\u9020\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u8fd8\u4f1a\u751f\u6210copy constructor\u5417\uff1f", "5. struct\u548cclass\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\u7b54\uff1a\u9ed8\u8ba4\u7684\u8bbf\u95ee\u7ea7\u522b\u4e0d\u540c\uff0cstruct\u662fpublic\uff0cclass\u662fprivate", "6. \u6ca1\u6709\u522b\u7684\u4e0d\u540c\u4e86\u5417\uff1f", "7. \u4e3a\u4ec0\u4e48\u8bf4\u5982\u679c\u4e00\u4e2a\u7c7b\u4f5c\u4e3a\u57fa\u7c7b\uff0c\u5219\u5b83\u7684\u6790\u6784\u51fd\u6570\u8981\u58f0\u660e\u6210virtual\u7684\uff1f", "\n\u56e0\u4e3a\uff0c\u5982\u679cdelete\u4e00\u4e2a\u57fa\u7c7b\u7684\u6307\u9488\u65f6\uff0c \u5982\u679c\u5b83\u6307\u5411\u7684\u662f\u4e00\u4e2a\u5b50\u7c7b\u7684\u5bf9\u8c61\uff0c\u90a3\u4e48\u6790\u6784\u51fd\u6570\u4e0d\u4e3a\u865a\u5c31\u4f1a\u5bfc\u81f4\u65e0\u6cd5\u8c03\u7528\u5b50\u7c7b\u6790\u6784\u51fd\u6570\uff0c\u4ece\u800c\u5bfc\u81f4\u8d44\u6e90\u6cc4\u9732\u3002 \u5f53\u7136\uff0c\u53e6\u4e00\u79cd\u505a\u6cd5\u662f\u5c06\u57fa\u7c7b\u6790\u6784\u51fd\u6570\u8bbe\u4e3aprotected.", "8. inline\u7684\u51fd\u6570\u548c#define\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n1) \u5b8f\u662f\u5728\u9884\u7f16\u8bd1\u9636\u6bb5\u7b80\u5355\u6587\u672c\u66ff\u4ee3\uff0c inline\u5728\u7f16\u8bd1\u9636\u6bb5\u5b9e\u73b0\u5c55\u5f00", "\n2)\u5b8f\u80af\u5b9a\u4f1a\u88ab\u66ff\u4ee3\uff0c\u800c\u590d\u6742\u7684inline\u51fd\u6570\u4e0d\u4f1a\u88ab\u5c55\u5f00", "\n3)\u5b8f\u5bb9\u6613\u51fa\u9519\uff08\u8fd0\u7b97\u987a\u5e8f\uff09\uff0c\u4e14\u96be\u4ee5\u88ab\u8c03\u8bd5,inline\u4e0d\u4f1a", "\n4)\u5b8f\u4e0d\u662f\u7c7b\u578b\u5b89\u5168\uff0c\u800cinline\u662f\u7c7b\u578b\u5b89\u5168\u7684\uff0c\u4f1a\u63d0\u4f9b\u53c2\u6570\u4e0e\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u68c0\u67e5", "\n\u5f53\u51fa\u73b0\u4ee5\u4e0b\u60c5\u51b5\u65f6inline\u5931\u8d25", "\n9. inline\u662f\u4ec0\u4e48\u610f\u601d\uff1f", "10. \u90a3\u4f60\u8bf4\u8bf4\u4ec0\u4e48\u65f6\u5019\u4f1a\u771f\u7684\u88abinline\uff0c\u4ec0\u4e48\u65f6\u5019\u4e0d\u4f1a\u5462\uff1f", "\n\u5f53\u51fa\u73b0\u4ee5\u4e0b\u60c5\u51b5\u65f6inline\u5931\u8d25\uff1a\u51fd\u6570size\u592a\u5927\uff1binline\u865a\u51fd\u6570\u51fd\u6570\u4e2d\u5b58\u5728\u5faa\u73af\u6216\u9012\u5f52\u51fd\u6570\uff1b\u8c03\u7528\u5176\u4ed6inline\u51fd\u6570", "\n11. \u5982\u679c\u628a\u4e00\u4e2a\u7c7b\u7684\u6210\u5458\u51fd\u6570\u5199\u5728\u7c7b\u7684\u58f0\u660e\u4e2d\u662f\u4ec0\u4e48\u610f\u601d\uff1f", "\ninline\u6b64\u51fd\u6570 \uff08inline\u4e0etemplate\u7c7b\u4f3c\uff0c \u5fc5\u987b\u5728.h\u4e2d\u5b9e\u73b0\uff09", "\n12. public\u7ee7\u627f\u548cprivate\u7ee7\u627f\u6709\u4ec0\u4e48\u67b6\u6784\u4e0a\u7684\u533a\u522b\uff1f", "\npublic\u662fis-a\u7684\u5173\u7cfb\uff0c\u7ee7\u627f\u63a5\u53e3\u4e0e\u5b9e\u73b0\uff1bprivate\u662fhas-a\u7684\u5173\u7cfb \uff0c\u53ea\u7ee7\u627f\u5b9e\u73b0", "13. \u5728\u591a\u7ee7\u627f\u7684\u65f6\u5019\uff0c\u5982\u679c\u4e00\u4e2a\u7c7b\u7ee7\u627f\u540c\u65f6\u7ee7\u627f\u81eaclass A\u548cclass B\uff0c\u800cclass A\u548c", "\nB\u4e2d\u90fd\u6709\u4e00\u4e2a\u51fd\u6570\u53ebfoo()\uff0c\u5982\u4f55\u660e\u786e\u7684\u5728\u5b50\u7c7b\u4e2d\u6307\u51faoverride\u54ea\u4e2a\u7236\u7c7b\u7684foo()\uff1f", "14. \u865a\u62df\u7ee7\u627f\u7684\u8bed\u6cd5\u662f\u4ec0\u4e48\uff1f", "\nA", "\n/ \\", "\nB C", "\n  \\ /", "\n  D", "\nclass A{};", "\nclass B: virtual public A{};", "\nclass C: virtual public A{};", "\nclass D: public B, public C{};", ".", "\n \u627e\u9519", "\n\u8bd5\u98981\uff1a", "\nCode", "\nVoid test1()", "\n{", "\nchar string[10];", "\nchar* str1=\"0123456789\";", "\nstrcpy(string, str1);", "\n}", "\u8bd5\u98982\uff1a", "\nCode", "\nVoid test2()", "\n{", "\nchar string[10], str1[10];", "\nfor(I=0; I\n{", "\nstr1[i] ='a';", "\n}", "\nstrcpy(string, str1);", "\n}", "\u8bd5\u98983\uff1a", "\nCode", "\nVoid test3(char* str1)", "\n{", "\nchar string[10];", "\nif(strlen(str1) \n{", "\nstrcpy(string, str1);", "\n}", "\n}", "\u89e3\u7b54\uff1a", "\ntest1: \u5b57\u7b26\u4e32str1\u9700\u898111\u4e2a\u5b57\u8282\u624d\u80fd\u5b58\u653e\u4e0b(\u5305\u62ec\u672b\u5c3e\u7684'\\0')\uff0c\u800cstring\u53ea\u670910\u4e2a\u5b57\u8282\u7684\u7a7a\u95f4\uff0cstrcpy\u4f1a\u5bfc\u81f4\u6570\u7ec4\u8d8a\u754c", "\ntest2: \u5982\u679c\u9762\u8bd5\u8005\u6307\u51fa\u5b57\u7b26\u6570\u7ec4str1\u4e0d\u80fd\u5728\u6570\u7ec4\u5185\u7ed3\u675f\u53ef\u4ee5\u7ed93\u5206\uff1b\u5982\u679c\u9762\u8bd5\u8005\u6307\u51fastrcpy(string, str1)\u8c03\u7528\u4f7f\u5f97\u4ecestr1\u5185\u5b58\u8d77\u590d\u5236\u5230string\u5185\u5b58\u8d77\u6240\u590d\u5236\u7684\u5b57\u8282\u6570\u5177\u6709\u4e0d\u786e\u5b9a\u6027\u53ef\u4ee5\u7ed97\u5206\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u6307\u51fa\u5e93\u51fd\u6570strcpy\u5de5\u4f5c\u65b9\u5f0f\u7684\u7ed910\u5206", "\ntest3: if(strlen(str1) \n\u5256\u6790\uff1a", "\n\u8003\u67e5\u5bf9\u57fa\u672c\u529f\u7684\u638c\u63e1\uff1a", "\n(1)\u5b57\u7b26\u4e32\u4ee5'\\0'\u7ed3\u5c3e\uff1b", "\n(2)\u5bf9\u6570\u7ec4\u8d8a\u754c\u628a\u63e1\u7684\u654f\u611f\u5ea6\uff1b", "\n(3)\u5e93\u51fd\u6570strcpy\u7684\u5de5\u4f5c\u65b9\u5f0f\uff0c\u5982\u679c\u7f16\u5199\u4e00\u4e2a\u6807\u51c6strcpy\u51fd\u6570\u7684\u603b\u5206\u503c\u4e3a10\uff0c\u4e0b\u9762\u7ed9\u51fa\u51e0\u4e2a\u4e0d\u540c\u5f97\u5206\u7684\u7b54\u6848\uff1a", "\n2\u5206", "\nvoid strcpy( char *strDest, char *strSrc )", "\n{", "\n\u3000 while( (*strDest++ = * strSrc++) != '\\0' );", "\n}", "\n4\u5206", "\nvoid strcpy( char *strDest, const char *strSrc )", "\n//\u5c06\u6e90\u5b57\u7b26\u4e32\u52a0const\uff0c\u8868\u660e\u5176\u4e3a\u8f93\u5165\u53c2\u6570\uff0c\u52a02\u5206", "\n{", "\n\u3000 while( (*strDest++ = * strSrc++) != '\\0' );", "\n}", "\n7\u5206", "\nvoid strcpy(char *strDest, const char *strSrc)", "\n{", "\n\u3000 //\u5bf9\u6e90\u5730\u5740\u548c\u76ee\u7684\u5730\u5740\u52a0\u975e0\u65ad\u8a00\uff0c\u52a03\u5206", "\n\u3000 assert( (strDest != NULL) && (strSrc != NULL) );", "\n\u3000 while( (*strDest++ = * strSrc++) != '\\0' );", "\n}", "\n10\u5206", "\n//\u4e3a\u4e86\u5b9e\u73b0\u94fe\u5f0f\u64cd\u4f5c\uff0c\u5c06\u76ee\u7684\u5730\u5740\u8fd4\u56de\uff0c\u52a03\u5206\uff01", "\nCode", "\nchar * strcpy( char *strDest, const char *strSrc )", "\n{", "\n\u3000 assert( (strDest != NULL) && (strSrc != NULL) );", "\n\u3000 char *address = strDest;", "\n\u3000 while( (*strDest++ = * strSrc++) != '\\0' );", "\n\u3000\u3000 return address;", "\n} ", "\u4ece2\u5206\u523010\u5206\u7684\u51e0\u4e2a\u7b54\u6848\u6211\u4eec\u53ef\u4ee5\u6e05\u695a\u7684\u770b\u5230\uff0c\u5c0f\u5c0f\u7684strcpy\u7adf\u7136\u6697\u85cf\u7740\u8fd9\u4e48\u591a\u7384\u673a\uff0c\u771f\u4e0d\u662f\u76d6\u7684\uff01\u9700\u8981\u591a\u4e48\u624e\u5b9e\u7684\u57fa\u672c\u529f\u624d\u80fd\u5199\u4e00\u4e2a\u5b8c\u7f8e\u7684strcpy\u554a\uff01", "\n(4)\u5bf9strlen\u7684\u638c\u63e1\uff0c\u5b83\u6ca1\u6709\u5305\u62ec\u5b57\u7b26\u4e32\u672b\u5c3e\u7684'\\0'\u3002", "\n\u8bfb\u8005\u770b\u4e86\u4e0d\u540c\u5206\u503c\u7684strcpy\u7248\u672c\uff0c\u5e94\u8be5\u4e5f\u53ef\u4ee5\u5199\u51fa\u4e00\u4e2a10\u5206\u7684strlen\u51fd\u6570\u4e86\uff0c\u5b8c\u7f8e\u7684\u7248\u672c\u4e3a\uff1a", "\nCode", "\nint strlen( const char *str ) //\u8f93\u5165\u53c2\u6570const", "\n{", "\n\u3000 assert( strt != NULL ); //\u65ad\u8a00\u5b57\u7b26\u4e32\u5730\u5740\u975e0", "\n\u3000 int len;", "\n\u3000 while( (*str++) != '\\0' )", "\n\u3000 {", "\n\u3000\u3000 len++;", "\n\u3000 }", "\n\u3000 return len;", "\n}", "\u8bd5\u98984\uff1a", "\nCode", "\nvoid GetMemory( char *p )", "\n{", "\np = (char *) malloc( 100 );", "\n}", "\nvoid Test( void )", "\n{", "\nchar *str = NULL;", "\nGetMemory( str );", "\nstrcpy( str, \"hello world\" );", "\nprintf( str );", "\n}", "\u8bd5\u98985\uff1a", "\nCode", "\nchar *GetMemory( void )", "\n{", "\nchar p[] = \"hello world\";", "\nreturn p;", "\n}", "\nvoid Test( void )", "\n{", "\nchar *str = NULL;", "\nstr = GetMemory();", "\nprintf( str );", "\n}", "\u8bd5\u98986\uff1a", "\nCode", "\nvoid GetMemory( char **p, int num )", "\n{", "\n*p = (char *) malloc( num );", "\n}", "\nvoid Test( void )", "\n{", "\nchar *str = NULL;", "\nGetMemory( &str, 100 );", "\nstrcpy( str, \"hello\" );", "\nprintf( str );", "\n}", "\u8bd5\u98987\uff1a", "\nCode", "\nvoid Test( void )", "\n{", "\nchar *str = (char *) malloc( 100 );", "\nstrcpy( str, \"hello\" );", "\nfree( str );", "\n//\u7701\u7565\u7684\u5176\u5b83\u8bed\u53e5", "\n}", "\u89e3\u7b54\uff1a", "\n\u8bd5\u98984\u4f20\u5165\u4e2dGetMemory( char *p )\u51fd\u6570\u7684\u5f62\u53c2\u4e3a\u5b57\u7b26\u4e32\u6307\u9488\uff0c\u5728\u51fd\u6570\u5185\u90e8\u4fee\u6539\u5f62\u53c2\u5e76\u4e0d\u80fd\u771f\u6b63\u7684\u6539\u53d8\u4f20\u5165\u5f62\u53c2\u7684\u503c\uff0c\u6267\u884c\u5b8cchar *str = NULL; GetMemory( str ); \u540e\u7684str\u4ecd\u7136\u4e3aNULL\uff1b", "\n\u8bd5\u98985\u4e2d char p[] = \"hello world\"; return p; \u7684p[]\u6570\u7ec4\u4e3a\u51fd\u6570\u5185\u7684\u5c40\u90e8\u81ea\u52a8\u53d8\u91cf\uff0c\u5728\u51fd\u6570\u8fd4\u56de\u540e\uff0c\u5185\u5b58\u5df2\u7ecf\u88ab\u91ca\u653e\u3002\u8fd9\u662f\u8bb8\u591a\u7a0b\u5e8f\u5458\u5e38\u72af\u7684\u9519\u8bef\uff0c\u5176\u6839\u6e90\u5728\u4e8e\u4e0d\u7406\u89e3\u53d8\u91cf\u7684\u751f\u5b58\u671f\u3002", "\n\u8bd5\u98986\u7684GetMemory\u907f\u514d\u4e86\u8bd5\u98984\u7684\u95ee\u9898\uff0c\u4f20\u5165GetMemory\u7684\u53c2\u6570\u4e3a\u5b57\u7b26\u4e32\u6307\u9488\u7684\u6307\u9488\uff0c\u4f46\u662f\u5728GetMemory\u4e2d\u6267\u884c\u7533\u8bf7\u5185\u5b58\u53ca\u8d4b\u503c\u8bed\u53e5", "\n*p = (char *) malloc( num );\u540e\u672a\u5224\u65ad\u5185\u5b58\u662f\u5426\u7533\u8bf7\u6210\u529f\uff0c\u5e94\u52a0\u4e0a\uff1a", "\nif ( *p == NULL )", "\n{", "\n\u3000 ...//\u8fdb\u884c\u7533\u8bf7\u5185\u5b58\u5931\u8d25\u5904\u7406", "\n}", "\n\u8bd5\u98987\u5b58\u5728\u4e0e\u8bd5\u98986\u540c\u6837\u7684\u95ee\u9898\uff0c\u5728\u6267\u884cchar *str = (char *) malloc(100); \u540e\u672a\u8fdb\u884c\u5185\u5b58\u662f\u5426\u7533\u8bf7\u6210\u529f\u7684\u5224\u65ad\uff1b\u53e6\u5916\uff0c\u5728free(str)\u540e\u672a\u7f6estr\u4e3a\u7a7a\uff0c\u5bfc\u81f4\u53ef\u80fd\u53d8\u6210\u4e00\u4e2a\u201c\u91ce\u201d\u6307\u9488\uff0c\u5e94\u52a0\u4e0a\uff1astr = NULL; \u8bd5\u98986\u7684Test\u51fd\u6570\u4e2d\u4e5f\u672a\u5bf9malloc\u7684\u5185\u5b58\u8fdb\u884c\u91ca\u653e\u3002", "\n\u5256\u6790\uff1a", "\n\u8bd5\u98984\uff5e7\u8003\u67e5\u9762\u8bd5\u8005\u5bf9\u5185\u5b58\u64cd\u4f5c\u7684\u7406\u89e3\u7a0b\u5ea6\uff0c\u57fa\u672c\u529f\u624e\u5b9e\u7684\u9762\u8bd5\u8005\u4e00\u822c\u90fd\u80fd\u6b63\u786e\u7684\u56de\u7b54\u5176\u4e2d50~60\u7684\u9519\u8bef\u3002\u4f46\u662f\u8981\u5b8c\u5168\u89e3\u7b54\u6b63\u786e\uff0c\u5374\u4e5f\u7edd\u975e\u6613\u4e8b\u3002", "\n\u5bf9\u5185\u5b58\u64cd\u4f5c\u7684\u8003\u67e5\u4e3b\u8981\u96c6\u4e2d\u5728\uff1a", "\n(1) \u6307\u9488\u7684\u7406\u89e3\uff1b", "\n(2) \u53d8\u91cf\u7684\u751f\u5b58\u671f\u53ca\u4f5c\u7528\u8303\u56f4\uff1b", "\n(3) \u826f\u597d\u7684\u52a8\u6001\u5185\u5b58\u7533\u8bf7\u548c\u91ca\u653e\u4e60\u60ef\u3002", "\n\u518d\u770b\u770b\u4e0b\u9762\u7684\u4e00\u6bb5\u7a0b\u5e8f\u6709\u4ec0\u4e48\u9519\u8bef\uff1a", "\nCode", "\nswap( int* p1,int* p2 )", "\n{", "\n\u3000 int *p;", "\n\u3000 *p = *p1;", "\n\u3000 *p1 = *p2;", "\n\u3000 *p2 = *p;", "\n}", "\u5728swap\u51fd\u6570\u4e2d\uff0cp\u662f\u4e00\u4e2a\u201c\u91ce\u201d\u6307\u9488\uff0c\u6709\u53ef\u80fd\u6307\u5411\u7cfb\u7edf\u533a\uff0c\u5bfc\u81f4\u7a0b\u5e8f\u8fd0\u884c\u7684\u5d29\u6e83\u3002\u5728VC++\u4e2dDEBUG\u8fd0\u884c\u65f6\u63d0\u793a\u9519\u8bef\u201cAccess Violation\u201d\u3002", "\n\u91ce\u6307\u9488\uff0c\u4e5f\u5c31\u662f\u6307\u5411\u4e0d\u53ef\u7528\u5185\u5b58\u533a\u57df\u7684\u6307\u9488\u3002\u901a\u5e38\u5bf9\u8fd9\u79cd\u6307\u9488\u8fdb\u884c\u64cd\u4f5c\u7684\u8bdd\uff0c\u5c06\u4f1a\u4f7f\u7a0b\u5e8f\u53d1\u751f\u4e0d\u53ef\u9884\u77e5\u7684\u9519\u8bef\u3002", "\n    \u201c\u91ce\u6307\u9488\u201d\u4e0d\u662fNULL\u6307\u9488\uff0c\u662f\u6307\u5411\u201c\u5783\u573e\u201d\u5185\u5b58\u7684\u6307\u9488\u3002\u4eba\u4eec\u4e00\u822c\u4e0d\u4f1a\u9519\u7528NULL\u6307\u9488\uff0c\u56e0\u4e3a\u7528if\u8bed\u53e5\u5f88\u5bb9\u6613\u5224\u65ad\u3002\u4f46\u662f\u201c\u91ce\u6307\u9488\u201d\u662f\u5f88\u5371\u9669\u7684\uff0cif\u8bed\u53e5\u5bf9\u5b83\u4e0d\u8d77\u4f5c\u7528\u3002\u91ce\u6307\u9488\u7684\u6210\u56e0\u4e3b\u8981\u6709\u4e24\u79cd\uff1a", "\u4e00\u3001\u6307\u9488\u53d8\u91cf\u6ca1\u6709\u88ab\u521d\u59cb\u5316\u3002\u4efb\u4f55\u6307\u9488\u53d8\u91cf\u521a\u88ab\u521b\u5efa\u65f6\u4e0d\u4f1a\u81ea\u52a8\u6210\u4e3aNULL\u6307\u9488\uff0c\u5b83\u7684\u7f3a\u7701\u503c\u662f\u968f\u673a\u7684\uff0c\u5b83\u4f1a\u4e71\u6307\u4e00\u6c14\u3002\u6240\u4ee5\uff0c\u6307\u9488\u53d8\u91cf\u5728\u521b\u5efa\u7684\u540c\u65f6\u5e94\u5f53\u88ab\u521d\u59cb\u5316\uff0c\u8981\u4e48\u5c06\u6307\u9488\u8bbe\u7f6e\u4e3aNULL\uff0c\u8981\u4e48\u8ba9\u5b83\u6307\u5411\u5408\u6cd5\u7684\u5185\u5b58\u3002", "\u4e8c\u3001\u6307\u9488p\u88abfree\u6216\u8005delete\u4e4b\u540e\uff0c\u6ca1\u6709\u7f6e\u4e3aNULL\uff0c\u8ba9\u4eba\u8bef\u4ee5\u4e3ap\u662f\u4e2a\u5408\u6cd5\u7684\u6307\u9488\u3002\u522b\u770bfree\u548cdelete\u7684\u540d\u5b57\u6076\u72e0\u72e0\u7684\uff08\u5c24\u5176\u662fdelete\uff09\uff0c\u5b83\u4eec\u53ea\u662f\u628a\u6307\u9488\u6240\u6307\u7684\u5185\u5b58\u7ed9\u91ca\u653e\u6389\uff0c\u4f46\u5e76\u6ca1\u6709\u628a\u6307\u9488\u672c\u8eab\u5e72\u6389\u3002\u901a\u5e38\u4f1a\u7528\u8bed\u53e5if (p != NULL)\u8fdb\u884c\u9632\u9519\u5904\u7406\u3002\u5f88\u9057\u61be\uff0c\u6b64\u65f6if\u8bed\u53e5\u8d77\u4e0d\u5230\u9632\u9519\u4f5c\u7528\uff0c\u56e0\u4e3a\u5373\u4fbfp\u4e0d\u662fNULL\u6307\u9488\uff0c\u5b83\u4e5f\u4e0d\u6307\u5411\u5408\u6cd5\u7684\u5185\u5b58\u5757\u3002\u4f8b\uff1a", "char *p = (char *) malloc(100);", "strcpy(p, \u201chello\u201d);", "free(p);        // p \u6240\u6307\u7684\u5185\u5b58\u88ab\u91ca\u653e\uff0c\u4f46\u662fp\u6240\u6307\u7684\u5730\u5740\u4ecd\u7136\u4e0d\u53d8", "if(p != NULL)   // \u6ca1\u6709\u8d77\u5230\u9632\u9519\u4f5c\u7528", "   strcpy(p, \u201cworld\u201d);  // \u51fa\u9519", "\u53e6\u5916\u4e00\u4e2a\u8981\u6ce8\u610f\u7684\u95ee\u9898\uff1a\u4e0d\u8981\u8fd4\u56de\u6307\u5411\u6808\u5185\u5b58\u7684\u6307\u9488\u6216\u5f15\u7528\uff0c\u56e0\u4e3a\u6808\u5185\u5b58\u5728\u51fd\u6570\u7ed3\u675f\u65f6\u4f1a\u88ab\u91ca\u653e\u3002", "\n\u8be5\u7a0b\u5e8f\u5e94\u8be5\u6539\u4e3a\uff1a", "\nCode", "\nswap( int* p1,int* p2 )", "\n{", "\n\u3000 int p;", "\n\u3000 p = *p1;", "\n\u3000 *p1 = *p2;", "\n\u3000 *p2 = p;", "\n} ", "3. \u5185\u529f\u9898", "\n\u8bd5\u98981\uff1a\u5206\u522b\u7ed9\u51faBOOL\uff0cint\uff0cfloat\uff0c\u6307\u9488\u53d8\u91cf \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\uff08\u5047\u8bbe\u53d8\u91cf\u540d\u4e3avar\uff09", "\n\u89e3\u7b54\uff1a", "\nBOOL\u578b\u53d8\u91cf\uff1aif(!var)", "\nint\u578b\u53d8\u91cf\uff1a if(var==0)", "\nfloat\u578b\u53d8\u91cf\uff1aconst float EPSINON = 0.00001;\u3000\u3000\u3000if ((x >= \u2013 EPSINON) && (x \n\u6307\u9488\u53d8\u91cf\uff1a\u3000if(var==NULL)", "\n\u5256\u6790\uff1a", "\n\u8003\u67e5\u5bf90\u503c\u5224\u65ad\u7684\u201c\u5185\u529f\u201d\uff0cBOOL\u578b\u53d8\u91cf\u76840\u5224\u65ad\u5b8c\u5168\u53ef\u4ee5\u5199\u6210if(var==0)\uff0c\u800cint\u578b\u53d8\u91cf\u4e5f\u53ef\u4ee5\u5199\u6210if(!var)\uff0c\u6307\u9488\u53d8\u91cf\u7684\u5224\u65ad\u4e5f\u53ef\u4ee5\u5199\u6210if(!var)\uff0c\u4e0a\u8ff0\u5199\u6cd5\u867d\u7136\u7a0b\u5e8f\u90fd\u80fd\u6b63\u786e\u8fd0\u884c\uff0c\u4f46\u662f\u672a\u80fd\u6e05\u6670\u5730\u8868\u8fbe\u7a0b\u5e8f\u7684\u610f\u601d\u3002", "\n\u4e00\u822c\u7684\uff0c\u5982\u679c\u60f3\u8ba9if\u5224\u65ad\u4e00\u4e2a\u53d8\u91cf\u7684\u201c\u771f\u201d\u3001\u201c\u5047\u201d\uff0c\u5e94\u76f4\u63a5\u4f7f\u7528if(var)\u3001if(!var)\uff0c\u8868\u660e\u5176\u4e3a\u201c\u903b\u8f91\u201d\u5224\u65ad\uff1b\u5982\u679c\u7528if\u5224\u65ad\u4e00\u4e2a\u6570\u503c\u578b\u53d8 \u91cf(short\u3001int\u3001long\u7b49)\uff0c\u5e94\u8be5\u7528if(var==0)\uff0c\u8868\u660e\u662f\u4e0e0\u8fdb\u884c\u201c\u6570\u503c\u201d\u4e0a\u7684\u6bd4\u8f83\uff1b\u800c\u5224\u65ad\u6307\u9488\u5219\u9002\u5b9c\u7528if(var==NULL)\uff0c \u8fd9\u662f\u4e00\u79cd\u5f88\u597d\u7684\u7f16\u7a0b\u4e60\u60ef\u3002", "\n\u6d6e\u70b9\u578b\u53d8\u91cf\u5e76\u4e0d\u7cbe\u786e\uff0c\u6240\u4ee5\u4e0d\u53ef\u5c06float\u53d8\u91cf\u7528\u201c==\u201d\u6216\u201c\uff01=\u201d\u4e0e\u6570\u5b57\u6bd4\u8f83\uff0c\u5e94\u8be5\u8bbe\u6cd5\u8f6c\u5316\u6210\u201c>=\u201d\u6216\u201c\n", "\u8bd5\u98982\uff1a\u4ee5\u4e0b\u4e3aWindows NT\u4e0b\u768432\u4f4dC++\u7a0b\u5e8f\uff0c\u8bf7\u8ba1\u7b97sizeof\u7684\u503c", "\nvoid Func ( char str[100] )", "\n{", "\n\u3000 sizeof( str ) = ?", "\n}", "\nvoid *p = malloc( 100 );", "\nsizeof ( p ) = ?", "\n\u89e3\u7b54\uff1a", "\nsizeof( str ) = 4", "\nsizeof ( p ) = 4", "\n\u5256\u6790\uff1a", "\nFunc ( char str[100] )\u51fd\u6570\u4e2d\u6570\u7ec4\u540d\u4f5c\u4e3a\u51fd\u6570\u5f62\u53c2\u65f6\uff0c\u5728\u51fd\u6570\u4f53\u5185\uff0c\u6570\u7ec4\u540d\u5931\u53bb\u4e86\u672c\u8eab\u7684\u5185\u6db5\uff0c\u4ec5\u4ec5\u53ea\u662f\u4e00\u4e2a\u6307\u9488\uff1b\u5728\u5931\u53bb\u5176\u5185\u6db5\u7684\u540c\u65f6\uff0c\u5b83\u8fd8\u5931\u53bb\u4e86\u5176\u5e38\u91cf\u7279\u6027\uff0c\u53ef\u4ee5\u4f5c\u81ea\u589e\u3001\u81ea\u51cf\u7b49\u64cd\u4f5c\uff0c\u53ef\u4ee5\u88ab\u4fee\u6539\u3002", "\n\u6570\u7ec4\u540d\u7684\u672c\u8d28\u5982\u4e0b\uff1a", "\n(1) \u6570\u7ec4\u540d\u6307\u4ee3\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\u5c31\u662f\u6570\u7ec4\uff1b", "\n\u4f8b\u5982\uff1a", "\nchar str[10];", "\ncout \n\u3000\u3000\u8f93\u51fa\u7ed3\u679c\u4e3a10\uff0cstr\u6307\u4ee3\u6570\u636e\u7ed3\u6784char[10]\u3002", "\n(2) \u6570\u7ec4\u540d\u53ef\u4ee5\u8f6c\u6362\u4e3a\u6307\u5411\u5176\u6307\u4ee3\u5b9e\u4f53\u7684\u6307\u9488\uff0c\u800c\u4e14\u662f\u4e00\u4e2a\u6307\u9488\u5e38\u91cf\uff0c\u4e0d\u80fd\u4f5c\u81ea\u589e\u3001\u81ea\u51cf\u7b49\u64cd\u4f5c\uff0c\u4e0d\u80fd\u88ab\u4fee\u6539\uff1b", "\nchar str[10];", "\nstr++; //\u7f16\u8bd1\u51fa\u9519\uff0c\u63d0\u793astr\u4e0d\u662f\u5de6\u503c\u3000", "\n(3) \u6570\u7ec4\u540d\u4f5c\u4e3a\u51fd\u6570\u5f62\u53c2\u65f6\uff0c\u6ca6\u4e3a\u666e\u901a\u6307\u9488\u3002", "\nWindows NT 32\u4f4d\u5e73\u53f0\u4e0b\uff0c\u6307\u9488\u7684\u957f\u5ea6\uff08\u5360\u7528\u5185\u5b58\u7684\u5927\u5c0f\uff09\u4e3a4\u5b57\u8282\uff0c\u6545sizeof( str ) \u3001sizeof ( p ) \u90fd\u4e3a4\u3002", "\u8bd5\u98983\uff1a\u5199\u4e00\u4e2a\u201c\u6807\u51c6\u201d\u5b8fMIN\uff0c\u8fd9\u4e2a\u5b8f\u8f93\u5165\u4e24\u4e2a\u53c2\u6570\u5e76\u8fd4\u56de\u8f83\u5c0f\u7684\u4e00\u4e2a\u3002\u53e6\u5916\uff0c\u5f53\u4f60\u5199\u4e0b\u9762\u7684\u4ee3\u7801\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\u4e8b\uff1f", "\nleast = MIN(*p++, b);", "\n\u89e3\u7b54\uff1a", "\n#define MIN(A,B) ((A) \nMIN(*p++, b)\u4f1a\u4ea7\u751f\u5b8f\u7684\u526f\u4f5c\u7528", "\n\u5256\u6790\uff1a", "\n\u8fd9\u4e2a\u9762\u8bd5\u9898\u4e3b\u8981\u8003\u67e5\u9762\u8bd5\u8005\u5bf9\u5b8f\u5b9a\u4e49\u7684\u4f7f\u7528\uff0c\u5b8f\u5b9a\u4e49\u53ef\u4ee5\u5b9e\u73b0\u7c7b\u4f3c\u4e8e\u51fd\u6570\u7684\u529f\u80fd\uff0c\u4f46\u662f\u5b83\u7ec8\u5f52\u4e0d\u662f\u51fd\u6570\uff0c\u800c\u5b8f\u5b9a\u4e49\u4e2d\u62ec\u5f27\u4e2d\u7684\u201c\u53c2\u6570\u201d\u4e5f\u4e0d\u662f\u771f\u7684\u53c2\u6570\uff0c\u5728\u5b8f\u5c55\u5f00\u7684\u65f6\u5019\u5bf9\u201c\u53c2\u6570\u201d\u8fdb\u884c\u7684\u662f\u4e00\u5bf9\u4e00\u7684\u66ff\u6362\u3002\u7a0b\u5e8f\u5458\u5bf9\u5b8f\u5b9a\u4e49\u7684\u4f7f\u7528\u8981\u975e\u5e38\u5c0f\u5fc3\uff0c\u7279\u522b\u8981\u6ce8\u610f\u4e24\u4e2a\u95ee\u9898\uff1a", "\n(1) \u8c28\u614e\u5730\u5c06\u5b8f\u5b9a\u4e49\u4e2d\u7684\u201c\u53c2\u6570\u201d\u548c\u6574\u4e2a\u5b8f\u7528\u7528\u62ec\u5f27\u62ec\u8d77\u6765\u3002\u6240\u4ee5\uff0c\u4e25\u683c\u5730\u8bb2\uff0c\u4e0b\u8ff0\u89e3\u7b54\uff1a", "\n#define MIN(A,B) (A) \n#define MIN(A,B) (A \n(2) \u9632\u6b62\u5b8f\u7684\u526f\u4f5c\u7528\u3002", "\n\u3000\u3000\u5b8f\u5b9a\u4e49#define MIN(A,B) ((A) \n\u8fd9\u4e2a\u89e3\u7b54\u5728\u5b8f\u5b9a\u4e49\u7684\u540e\u9762\u52a0\u201c;\u201d\uff0c\u663e\u793a\u7f16\u5199\u8005\u5bf9\u5b8f\u7684\u6982\u5ff5\u6a21\u7cca\u4e0d\u6e05\uff0c\u53ea\u80fd\u88ab\u65e0\u60c5\u5730\u52240\u5206\u5e76\u88ab\u9762\u8bd5\u5b98\u6dd8\u6c70\u3002", "\u5b8f\u7684\u4e00\u4e9b\u526f\u4f5c\u7528", "\n1\u3001\u4f18\u5148\u7ea7\u95ee\u9898", " 1) \u4f20\u5165\u53d8\u91cf\u4f18\u5148\u7ea7", "   #define MULTI(a,b) a * b", "   MULTI(1+2,3)   => 1 + 2 * 3 \u5176\u5b9e\u662f\u60f3\u8981(1 + 2) * 3", " 2) \u4f5c\u4e3a\u503c\u8fd4\u56de\u65f6\uff0c\u7c7b\u4f3c1\uff09", "   #define ADD(a,b) (a) + (b)", "   int c = ADD(a,b) * 3; => (a) + (b) * 3  \u5176\u5b9e\u662f\u60f3\u8981(a + b) * 3", " \u6240\u4ee5\uff0c\u4e00\u822c\u7684\u89c4\u5219\u662f\uff1a\u5b8f\u91cc\u9762\u53c2\u6570\u5168\u90e8\u7528\u62ec\u53f7\u62ec\u8d77\u6765\uff1b\u5982\u679c\u4f5c\u4e3a\u503c\u8fd4\u56de\uff0c\u6574\u4e2a\u8868\u8fbe\u5f0f\u4e5f\u7528\u62ec\u53f7\u62ec\u8d77\u6765\u3002", " \u6240\u4ee5\uff0c\u4e0a\u9762\u6700\u597d\u8fd9\u4e48\u5199\uff1a", "   #define MULTI(a,b) ((a) * (b))", "   #define ADD(a,b)  ((a) + (b))", "2\u3001\u5b9e\u9645\u4f7f\u7528\u53c2\u6570\u548c\u5b8f\u5185\u90e8\u53d8\u91cf\u540c\u540d", "   #define HASH(str,sz,rst) do{unsigned int n = 0; n = xxx; rst = n % sz;}while(0)", " \u8fd9\u662f\u4e00\u4e2ahash\u7684\u5b8f\u5b9e\u73b0\uff0c\u5176\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cfn\uff0c\u6839\u636estr\u8ba1\u7b97n\uff0c\u7136\u540e\u5bf9sz\u6c42\u6a21\u5e76\u628a\u8fd4\u56de\u503c\u8d4b\u7ed9\u4f20\u8fdb\u6765\u7684rst.", " \u8fd9\u4e48\u8c03\u7528\uff1a", "   int n;", "   HASH(\u201chello\u201d,7,n);", " \u4e0d\u4f1a\u8fbe\u5230\u6539\u53d8n\u7684\u6548\u679c\uff0c\u56e0\u4e3a\u5b9e\u9645\u4f7f\u7528\u53c2\u6570n\u548c\u5b8f\u5185\u90e8\u7684\u53d8\u91cfn\u540c\u540d\u3002\u5b8f\u6269\u5c55\u4e2d\u6700\u540e\u4e00\u6761\u8bed\u53e5\u662f\uff1an = n % sz;\u56e0\u4e3a\u5b8f\u5185\u90e8n\u6709\u66f4\u5c0f\u4f5c \u7528\u57df\uff0c\u5b9e\u9645\u8d4b\u503c\u7684\u662f\u5b8f\u5185\u90e8\u7684\u90a3\u4e2a\u4e34\u65f6\u53d8\u91cfn\u3002\u5916\u9762\u8c03\u7528\u7684n\u4e0d\u4f1a\u6709\u4efb\u4f55\u6539\u53d8\u3002", " \u8fd9\u4e2a\u526f\u4f5c\u7528\u6709\u4e9b\u9690\u853d\uff0c\u4e00\u822c\u7684\u89c4\u5219\u662f\uff1a\u5b8f\u5185\u90e8\u53d8\u91cf\u4f7f\u7528\u4e00\u79cd\u4e0d\u540c\u98ce\u683c\u7684\u547d\u540d\u65b9\u5f0f\u3002", " \u6bd4\u5982\uff1a", "   #define HASH(str,sz,rst)  do{unsigned int __n = 0; __n = \u2026", "3\u3001++,\u2013", "   #define MAX(a,b)  ((a) > (b) ? (a) : (b))", "   int a = 3,b = 2; ", "   int c = MAX(a++,b);", " \u6267\u884c\u770b\u770b\uff0c\u4e0d\u4f46a\u7684\u503c\u4e0d\u662f\u548c\u60f3\u8981\u7684\u4e00\u81f4\uff0c\u8fd4\u56de\u503cc\u4e5f\u4f1a\u8ba9\u4f60\u5927\u5403\u4e00\u60ca\uff0c\u54c8\u54c8\u3002(a = 5,c = 4)", " \u5728\u5b8f\u5185\u90e8\u4e00\u4e2a\u53d8\u91cf\u201d\u6267\u884c\u201d\u591a\u5c11\u6b21\uff0c\u5b83\u5c31\u81ea\u589e\u6216\u81ea\u51cf\u4e86\u591a\u5c11\u6b21\u3002", " \u6240\u4ee5\u4e00\u822c\u4f7f\u7528\u5b8f\u6700\u597d\u4e0d\u8981\u4f20\u5165\u81ea\u589e\u81ea\u51cf\u3002\u5982\u679c\u4f60\u4e00\u5b9a\u8981\u5728\u5b8f\u91cc\u6d88\u9664\u8fd9\u4e2a\u526f\u4f5c\u7528\uff0c\u53ef\u4ee5\u8fd9\u6837\uff1a", "   #define MAX(a,b)  ({int __x = (a), __y = (b);(__x > __y) ? __x : __y;})", " \u4e5f\u5c31\u662f\uff1a\u4fdd\u8bc1\u4f20\u5165\u5b8f\u7684\u53c2\u6570\u5728\u5185\u90e8\u53ea\u4f7f\u7528\u4e00\u6b21\u3002(\u6ce8\u610f\uff1a\u4f20\u5165a++\u6216++a\u90fd\u80fd\u5f97\u5230\u5404\u81ea\u6b63\u786e\u7684\u6548\u679c)", " \u8fd9\u91cc\u7684\u5185\u90e8\u53d8\u91cf__x,__y\u662f\u4e0d\u9700\u8981\u7528\u62ec\u53f7\u5305\u8d77\u6765\u7684\uff0c\u539f\u56e0\u53ef\u4ee5\u81ea\u5df1\u60f3\u60f3\u3002", " \u53e6\u5916\u5bf9\u5b8f\u4e2d\u62ec\u53f7\u7684\u4f7f\u7528\u8865\u5145\u8bf4\u660e\u4e24\u70b9\uff1a", "  \u56e0\u4e3a\u5b8f\u4e2d\u5b9a\u4e49\u4e86\u4e34\u65f6\u53d8\u91cf\uff0c\u6240\u4ee5\u8981\u7528{}\u62ec\u8d77\u6765\uff1b", "  \u56e0\u4e3a\u8981\u8fd4\u56de\u503c\uff0c\u6240\u4ee5\u5916\u9762\u8fd8\u8981\u7528()\u62ec\u8d77\u6765({}\u4e0d\u8fd4\u56de\u503c)\uff1b", " \u53e6\u5916\uff0c\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u5b9e\u9645\u4e2da,b\u4e0d\u4e00\u5b9a\u662fint\u7684\uff0c\u8fd9\u4e2a\u5b8f\u4e2d\u7684\u4e34\u65f6\u53d8\u91cf\u58f0\u660e\u4e3aint\uff0c\u4e0d\u901a\u7528\u3002", " \u6539\u8fdb\uff1a", "   #define MAX(a,b,type) ({type __x = (a), __y = (b);(__x > __y) ? __x : __y;})", " \u4f7f\u7528\uff1a", "   MAX(1,2,int);  MAX(1.1,1.2,double);", " \u662f\u4e0d\u662f\u611f\u89c9\u602a\u602a\u7684\uff0c\u6709\u70b9c++\u7684\u611f\u89c9\uff5e\uff5e \u8fd9\u6837\u7684\u4f7f\u7528\u592a\u590d\u6742\u4e86\uff0c\u800c\u4e14\u4e5f\u4f1a\u7ed9\u4ee3\u7801\u7684\u9605\u8bfb\u5e26\u6765\u96be\u5ea6\u3002", " \u6211\u89c9\u5f97\u597d\u7684\u6001\u5ea6\u662f\u591a\u4e86\u89e3\u4e9b\u5b8f\u7684\u53ef\u80fd\u7684\u526f\u4f5c\u7528\uff0c\u5728\u5b9e\u9645\u7f16\u7801\u4e2d\u9075\u5b88\u7b2c1\u30012\u6761\u89c4\u5219\uff0c\u4e0d\u8981\u5f80\u5b8f\u4e2d\u4f20\u5165\u81ea\u589e\u81ea\u51cf\u7684\u4e1c\u897f\uff0c\u5c31\u591f\u4e86\u3002\u4e0d\u8981\u628a\u8fc7\u591a\u7684\u590d\u6742\u5ea6\u5168\u6254\u7ed9\u5b8f\uff0c\u201d\u901a\u7528\u201d\u4e5f\u4e0d\u80fd\u76f2\u76ee\uff0c\u56e0\u4e3a\u6bd5\u7adf\uff1ayy\u662f\u6ca1\u6709\u6781\u9650\u7684\u3002", "\u8bd5\u98984\uff1a\u4e3a\u4ec0\u4e48\u6807\u51c6\u5934\u6587\u4ef6\u90fd\u6709\u7c7b\u4f3c\u4ee5\u4e0b\u7684\u7ed3\u6784\uff1f", "\nCode", "\n#ifndef __INCvxWorksh", "\n#define __INCvxWorksh", "\n#ifdef __cplusplus", "\nextern \u201cC\u201d {", "\n#endif", "\n/**/", "\n#ifdef __cplusplus", "\n}", "\n#endif", "\n#endif /* __INCvxWorksh */ ", "\u89e3\u7b54\uff1a", "\n\u5934\u6587\u4ef6\u4e2d\u7684\u7f16\u8bd1\u5b8f", "\n#ifndef\u3000__INCvxWorksh", "\n#define\u3000__INCvxWorksh", "\n#endif", "\n\u7684\u4f5c\u7528\u662f\u9632\u6b62\u88ab\u91cd\u590d\u5f15\u7528\u3002", "\n\u4f5c\u4e3a\u4e00\u79cd\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\uff0cC++\u652f\u6301\u51fd\u6570\u91cd\u8f7d\uff0c\u800c\u8fc7\u7a0b\u5f0f\u8bed\u8a00C\u5219\u4e0d\u652f\u6301\u3002\u51fd\u6570\u88abC++\u7f16\u8bd1\u540e\u5728symbol\u5e93\u4e2d\u7684\u540d\u5b57\u4e0eC\u8bed\u8a00\u7684\u4e0d\u540c\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u67d0\u4e2a\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a", "\nvoid foo(int x, int y);", "\n\u8be5\u51fd\u6570\u88abC\u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u5728symbol\u5e93\u4e2d\u7684\u540d\u5b57\u4e3a_foo\uff0c\u800cC++\u7f16\u8bd1\u5668\u5219\u4f1a\u4ea7\u751f\u50cf_foo_int_int\u4e4b\u7c7b\u7684\u540d\u5b57\u3002_foo_int_int\u8fd9\u6837\u7684\u540d\u5b57\u5305\u542b\u4e86\u51fd\u6570\u540d\u548c\u51fd\u6570\u53c2\u6570\u6570\u91cf\u53ca\u7c7b\u578b\u4fe1\u606f\uff0cC++\u5c31\u662f\u8003\u8fd9\u79cd\u673a\u5236\u6765\u5b9e\u73b0\u51fd\u6570\u91cd\u8f7d\u7684\u3002", "\n\u4e3a\u4e86\u5b9e\u73b0C\u548cC++\u7684\u6df7\u5408\u7f16\u7a0b\uff0cC++\u63d0\u4f9b\u4e86C\u8fde\u63a5\u4ea4\u6362\u6307\u5b9a\u7b26\u53f7extern \u201cC\u201d\u6765\u89e3\u51b3\u540d\u5b57\u5339\u914d\u95ee\u9898\uff0c\u51fd\u6570\u58f0\u660e\u524d\u52a0\u4e0aextern \u201cC\u201d\u540e\uff0c\u5219\u7f16\u8bd1\u5668\u5c31\u4f1a\u6309\u7167C\u8bed\u8a00\u7684\u65b9\u5f0f\u5c06\u8be5\u51fd\u6570\u7f16\u8bd1\u4e3a_foo\uff0c\u8fd9\u6837C\u8bed\u8a00\u4e2d\u5c31\u53ef\u4ee5\u8c03\u7528C++\u7684\u51fd\u6570\u4e86\u3002", "\u8bd5\u98985\uff1a\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u4f5c\u7528\u662f\u628a\u4e00\u4e2achar\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u5faa\u73af\u53f3\u79fbn\u4e2a\u3002\u6bd4\u5982\u539f\u6765\u662f\u201cabcdefghi\u201d\u5982\u679cn=2\uff0c\u79fb\u4f4d\u540e\u5e94\u8be5\u662f\u201chiabcdefgh\u201d", "\n\u51fd\u6570\u5934\u662f\u8fd9\u6837\u7684\uff1a", "\n//pStr\u662f\u6307\u5411\u4ee5\u2019\\0\u2032\u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32\u7684\u6307\u9488", "\n//steps\u662f\u8981\u6c42\u79fb\u52a8\u7684n", "\nvoid LoopMove ( char * pStr, int steps )", "\n{", "\n\u3000 //\u8bf7\u586b\u5145\u2026", "\n}", "\n\u89e3\u7b54\uff1a", "\n\u6b63\u786e\u89e3\u7b541\uff1a", "\nCode", "\nvoid LoopMove ( char *pStr, int steps )", "\n{", "\n\u3000 int n = strlen( pStr ) \u2013 steps;", "\n\u3000 char tmp[MAX_LEN];", "\n\u3000 strcpy ( tmp, pStr + n );", "\n\u3000 strcpy ( tmp + steps, pStr);", "\n\u3000 *( tmp + strlen ( pStr ) ) = \u2018\\0\u2032;", "\n\u3000 strcpy( pStr, tmp );", "\n} ", "\u6b63\u786e\u89e3\u7b542\uff1a", "\nCode", "\nvoid LoopMove ( char *pStr, int steps )", "\n{", "\n\u3000 int n = strlen( pStr ) \u2013 steps;", "\n\u3000 char tmp[MAX_LEN];", "\n\u3000 memcpy( tmp, pStr + n, steps );", "\n\u3000 memcpy(pStr + steps, pStr, n );", "\n\u3000 memcpy(pStr, tmp, steps );", "\n}", "\u5256\u6790\uff1a", "\n\u8fd9\u4e2a\u8bd5\u9898\u4e3b\u8981\u8003\u67e5\u9762\u8bd5\u8005\u5bf9\u6807\u51c6\u5e93\u51fd\u6570\u7684\u719f\u7ec3\u7a0b\u5ea6\uff0c\u5728\u9700\u8981\u7684\u65f6\u5019\u5f15\u7528\u5e93\u51fd\u6570\u53ef\u4ee5\u5f88\u5927\u7a0b\u5ea6\u4e0a\u7b80\u5316\u7a0b\u5e8f\u7f16\u5199\u7684\u5de5\u4f5c\u91cf\u3002", "\n\u6700\u9891\u7e41\u88ab\u4f7f\u7528\u7684\u5e93\u51fd\u6570\u5305\u62ec\uff1a", "\n(1) strcpy", "\n(2) memcpy", "\n(3) memset", "\nmemcpy", "\n\u3000\u3000\u539f\u578b\uff1aextern void *memcpy(void *dest, void *src, unsigned int count);", "\n\u3000\u3000\u7528\u6cd5\uff1a#include ", "memset", "\n\u51fd\u6570\u539f\u578b", "\n\u3000\u3000void *memset(void *s, int ch, unsigned n);", "\n\u7f16\u8f91\u672c\u6bb5", "\n\u7a0b\u5e8f\u4f8b", "\n\u3000\u3000#include ", "memset\u51fd\u6570", "\nint main(void)", "\n\u3000\u3000{", "\n\u3000\u3000char buffer[] = \u201cHello world\\n\u201d;", "\n\u3000\u3000printf(\u201cBuffer before memset: %s\\n\u201d, buffer);", "\n\u3000\u3000memset(buffer, \u2018*\u2019, strlen(buffer) );", "\n\u3000\u3000printf(\u201cBuffer after memset: %s\\n\u201d, buffer);", "\n\u3000\u3000return 0;", "\n\u3000\u3000}", "\n\u3000\u3000\u8f93\u51fa\u7ed3\u679c\uff1a", "\n\u3000\u3000Buffer before memset: Hello world", "\n\u3000\u3000Buffer after memset: ***********", "\n\u3000\u3000\u7f16\u8bd1\u5e73\u53f0\uff1a", "\n\u3000\u3000Microsoft Visual C++ 6.0", "\n\u3000\u3000\u4e5f\u4e0d\u4e00\u5b9a\u5c31\u662f\u628a\u5185\u5bb9\u5168\u90e8\u8bbe\u7f6e\u4e3ach\u6307\u5b9a\u7684ASCII\u503c\uff0c\u800c\u4e14\u8be5\u5904\u7684ch\u53ef\u4e3aint\u6216\u8005\u5176\u4ed6\u7c7b\u578b\uff0c\u5e76\u4e0d\u4e00\u5b9a\u8981\u662fchar\u7c7b\u578b\u3002\u4f8b\u5982\u4e0b\u9762\u8fd9\u6837\uff1a", "\n\u3000\u3000int array[5] = {1,4,3,5,2};", "\n\u3000\u3000for(int i = 0; i \n\u3000\u3000cout\n\u3000\u3000cout\n\u3000\u3000memset(array,0,5*sizeof(int));", "\n\u3000\u3000for(int k = 0; k \n\u3000\u3000cout\n\u3000\u3000cout\n\u3000\u3000\u8f93\u51fa\u7684\u7ed3\u679c\u5c31\u662f\uff1a", "\n\u3000\u30001 4 3 5 2", "\n\u3000\u30000 0 0 0 0", "\n\u3000\u3000\u540e\u9762\u7684\u8868\u5927\u5c0f\u7684\u53c2\u6570\u662f\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff0c\u6240\u4ee5\uff0c\u5bf9\u4e8eint\u6216\u5176\u4ed6\u7684\u5c31\u5e76\u4e0d\u662f\u90fd\u4e58\u9ed8\u8ba4\u76841\uff08\u5b57\u7b26\u578b\uff09\u4e86\u3002\u800c\u4e14\u4e0d\u540c\u7684\u673a\u5668\u4e0aint\u7684\u5927\u5c0f\u4e5f\u53ef\u80fd\u4e0d\u540c\uff0c\u6240\u4ee5\u6700\u597d\u7528sizeof\uff08\uff09\u3002", "\n\u3000\u3000", "\n\u3000\u3000\u8981\u6ce8\u610f\u7684\u662f\uff0cmemset\u662f\u5bf9\u5b57\u8282\u8fdb\u884c\u64cd\u4f5c\uff0c", "\n\u3000\u3000\u6240\u4ee5\u4e0a\u8ff0\u7a0b\u5e8f\u5982\u679c\u6539\u4e3a", "\n\u3000\u3000int array[5] = {1,4,3,5,2};", "\n\u3000\u3000for(int i = 0; i \n\u3000\u3000cout\n\u3000\u3000cout\n\u3000\u3000memset(array,1,5*sizeof(int));// \u6ce8\u610f \u8fd9\u91cc\u4e0e\u4e0a\u9762\u7684\u7a0b\u5e8f\u4e0d\u540c", "\n\u3000\u3000for(int k = 0; k \n\u3000\u3000cout\n\u3000\u3000cout\n\u3000\u3000\u8f93\u51fa\u7684\u7ed3\u679c\u5c31\u662f\uff1a", "\n\u3000\u30001 4 3 5 2", "\n\u3000\u300016843009 16843009 16843009 16843009 16843009", "\n\u3000\u3000\u4e3a\u4ec0\u4e48\u5462\uff1f", "\n\u3000\u3000\u56e0\u4e3amemset\u662f\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u5c31\u662f\u5bf9array\u6307\u5411\u7684\u5185\u5b58\u76845\u4e2a\u5b57\u8282\u8fdb\u884c\u8d4b\u503c\uff0c\u6bcf\u4e2a\u90fd\u7528ASCII\u4e3a1\u7684\u5b57\u7b26\u53bb\u586b\u5145\uff0c\u8f6c\u4e3a\u4e8c\u8fdb\u5236\u540e\uff0c1\u5c31\u662f00000001,\u5360\u4e00\u4e2a\u5b57\u8282\u3002\u4e00\u4e2aINT\u5143\u7d20\u662f4\u5b57\u8282\uff0c\u5408\u4e00\u8d77\u5c31\u662f00000001000000010000000100000001\uff0c\u5c31\u7b49\u4e8e16843009\uff0c\u5c31\u5b8c\u6210\u4e86\u5bf9\u4e00\u4e2aINT\u5143\u7d20\u7684\u8d4b\u503c\u4e86\u3002", "\n\u3000\u3000\u6240\u4ee5\u7528memset\u5bf9\u975e\u5b57\u7b26\u578b\u6570\u7ec4\u8d4b\u521d\u503c\u662f\u4e0d\u53ef\u53d6\u7684\uff01", "\n\u3000\u3000\u4f8b\u5982\u6709\u4e00\u4e2a\u7ed3\u6784\u4f53Some x\uff0c\u53ef\u4ee5\u8fd9\u6837\u6e05\u96f6\uff1a", "\n\u3000\u3000memset( &x, 0, sizeof(Some) );", "\n\u3000\u3000\u5982\u679c\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\u7684\u6570\u7ec4Some x[10]\uff0c\u53ef\u4ee5\u8fd9\u6837\uff1a", "\n\u3000\u3000memset( x, 0, sizeof(Some)*10 );", "\n\u7f16\u8f91\u672c\u6bb5", "\nmemset\u51fd\u6570\u8be6\u7ec6\u8bf4\u660e", "\n\u3000\u30001\u3002void *memset(void *s,int c,size_t n)", "\n\u3000\u3000\u603b\u7684\u4f5c\u7528\uff1a\u5c06\u5df2\u5f00\u8f9f\u5185\u5b58\u7a7a\u95f4 s \u7684\u9996 n \u4e2a\u5b57\u8282\u7684\u503c\u8bbe\u4e3a\u503c c\u3002", "\n\u3000\u30002\u3002\u4f8b\u5b50", "\n\u3000\u3000main(){", "\n\u3000\u3000char *s=\"Golden Global View\";", "\n\u3000\u3000clrscr();", "\n\u3000\u3000memset(s,'G',6);//\u8c8c\u4f3c\u8fd9\u91cc\u6709\u70b9\u95ee\u9898// \u5355\u6b65\u8fd0\u884c\u5230\u8fd9\u91cc\u4f1a\u63d0\u793a\u5185\u5b58\u8bbf\u95ee\u51b2\u7a81", "\n\u3000\u3000printf(\"%s\",s);", "\n\u3000\u3000getchar();", "\n\u3000\u3000return 0;", "\n\u3000\u3000}\u3000", "\n\u3000\u3000\u3010\u5e94\u8be5\u662f\u6ca1\u6709\u95ee\u9898\u7684\uff0c\u5b57\u7b26\u4e32\u6307\u9488\u4e00\u6837\u53ef\u4ee5\uff0c\u5e76\u4e0d\u662f\u53ea\u8bfb\u5185\u5b58\uff0c\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\u3011", "\n\u3000\u30003\u3002memset() \u51fd\u6570\u5e38\u7528\u4e8e\u5185\u5b58\u7a7a\u95f4\u521d\u59cb\u5316\u3002\u5982\uff1a", "\n\u3000\u3000char str[100];", "\n\u3000\u3000memset(str,0,100);", "\n\u3000\u30004\u3002memset()\u7684\u6df1\u523b\u5185\u6db5\uff1a\u7528\u6765\u5bf9\u4e00\u6bb5\u5185\u5b58\u7a7a\u95f4\u5168\u90e8\u8bbe\u7f6e\u4e3a\u67d0\u4e2a\u5b57\u7b26\uff0c\u4e00\u822c\u7528\u5728\u5bf9\u5b9a\u4e49\u7684\u5b57\u7b26\u4e32\u8fdb\u884c\u521d\u59cb\u5316\u4e3a\u2018memset(a, '\\0', sizeof(a));", "\n\u3000\u3000memcpy\u7528\u6765\u505a\u5185\u5b58\u62f7\u8d1d\uff0c\u4f60\u53ef\u4ee5\u62ff\u5b83\u62f7\u8d1d\u4efb\u4f55\u6570\u636e\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u53ef\u4ee5\u6307\u5b9a\u62f7\u8d1d\u7684\u6570\u636e\u957f\u5ea6\uff1b\u4f8b\uff1a", "\n\u3000\u3000char a[100], b[50];", "\n\u3000\u3000memcpy(b, a, sizeof(b)); //\u6ce8\u610f\u5982\u7528sizeof(a)\uff0c\u4f1a\u9020\u6210b\u7684\u5185\u5b58\u5730\u5740\u6ea2\u51fa\u3002", "\n\u3000\u3000strcpy\u5c31\u53ea\u80fd\u62f7\u8d1d\u5b57\u7b26\u4e32\u4e86\uff0c\u5b83\u9047\u5230'\\0'\u5c31\u7ed3\u675f\u62f7\u8d1d\uff1b\u4f8b\uff1a", "\n\u3000\u3000char a[100], b[50];", "\n\u3000\u3000strcpy(a,b);", "\n\u3000\u3000\u5982\u7528strcpy(b,a)\uff0c\u8981\u6ce8\u610fa\u4e2d\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\uff08\u7b2c\u4e00\u4e2a\u2018\\0\u2019\u4e4b\u524d\uff09\u662f\u5426\u8d85\u8fc750\u4f4d\uff0c\u5982\u8d85\u8fc7\uff0c\u5219\u4f1a\u9020\u6210b\u7684\u5185\u5b58\u5730\u5740\u6ea2\u51fa\u3002", "\n\u3000\u30005.\u8865\u5145\uff1a\u67d0\u4eba\u7684\u4e00\u70b9\u5fc3\u5f97", "\n\u3000\u3000memset\u53ef\u4ee5\u65b9\u4fbf\u7684\u6e05\u7a7a\u4e00\u4e2a\u7ed3\u6784\u7c7b\u578b\u7684\u53d8\u91cf\u6216\u6570\u7ec4\u3002", "\n\u3000\u3000\u5982\uff1a", "\n\u3000\u3000struct sample_struct", "\n\u3000\u3000{", "\n\u3000\u3000char csName[16];", "\n\u3000\u3000int iSeq;", "\n\u3000\u3000int iType;", "\n\u3000\u3000};", "\n\u3000\u3000\u5bf9\u4e8e\u53d8\u91cf", "\n\u3000\u3000struct sample_strcut stTest;", "\n\u3000\u3000\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6e05\u7a7astTest\u7684\u65b9\u6cd5\uff1a", "\n\u3000\u3000stTest.csName[0]='\\0';", "\n\u3000\u3000stTest.iSeq=0;", "\n\u3000\u3000stTest.iType=0;", "\n\u3000\u3000\u7528memset\u5c31\u975e\u5e38\u65b9\u4fbf\uff1a", "\n\u3000\u3000memset(&stTest,0,sizeof(struct sample_struct));", "\n\u3000\u3000\u5982\u679c\u662f\u6570\u7ec4\uff1a", "\n\u3000\u3000struct sample_struct TEST[10];", "\n\u3000\u3000\u5219", "\n\u3000\u3000memset(TEST,0,sizeof(struct sample_struct)*10); ", "\u8bd5\u98986\uff1a\u5df2\u77e5WAV\u6587\u4ef6\u683c\u5f0f\u5982\u4e0b\u8868\uff0c\u6253\u5f00\u4e00\u4e2aWAV\u6587\u4ef6\uff0c\u4ee5\u9002\u5f53\u7684\u6570\u636e\u7ed3\u6784\u7ec4\u7ec7WAV\u6587\u4ef6\u5934\u5e76\u89e3\u6790WAV\u683c\u5f0f\u7684\u5404\u9879\u4fe1\u606f\u3002", "\nWAVE\u6587\u4ef6\u683c\u5f0f\u8bf4\u660e\u8868", "\n\u504f\u79fb\u5730\u5740 \u5b57\u8282\u6570 \u6570\u636e\u7c7b\u578b \u5185 \u5bb9", "\n\u6587\u4ef6\u5934", "\n00H 4 Char \"RIFF\"\u6807\u5fd7", "\n04H 4 int32 \u6587\u4ef6\u957f\u5ea6", "\n08H 4 Char \"WAVE\"\u6807\u5fd7", "\n0CH 4 Char \"fmt\"\u6807\u5fd7", "\n10H 4 \u8fc7\u6e21\u5b57\u8282\uff08\u4e0d\u5b9a\uff09", "\n14H 2 int16 \u683c\u5f0f\u7c7b\u522b", "\n16H 2 int16 \u901a\u9053\u6570", "\n18H 2 int16 \u91c7\u6837\u7387\uff08\u6bcf\u79d2\u6837\u672c\u6570\uff09\uff0c\u8868\u793a\u6bcf\u4e2a\u901a\u9053\u7684\u64ad\u653e\u901f\u5ea6", "\n1CH 4 int32 \u6ce2\u5f62\u97f3\u9891\u6570\u636e\u4f20\u9001\u901f\u7387", "\n20H 2 int16 \u6570\u636e\u5757\u7684\u8c03\u6574\u6570\uff08\u6309\u5b57\u8282\u7b97\u7684\uff09", "\n22H 2 \u6bcf\u6837\u672c\u7684\u6570\u636e\u4f4d\u6570", "\n24H 4 Char \u6570\u636e\u6807\u8bb0\u7b26\uff02data\uff02", "\n28H 4 int32 \u8bed\u97f3\u6570\u636e\u7684\u957f\u5ea6", "\n\u89e3\u7b54\uff1a", "\n\u5c06WAV\u6587\u4ef6\u683c\u5f0f\u5b9a\u4e49\u4e3a\u7ed3\u6784\u4f53WAVEFORMAT\uff1a", "\nCode", "\ntypedef struct tagWaveFormat", "\n{", "\n\u3000 char cRiffFlag[4];", "\n\u3000 UIN32 nFileLen;", "\n\u3000 char cWaveFlag[4];", "\n\u3000 char cFmtFlag[4];", "\n\u3000 char cTransition[4];", "\n\u3000 UIN16 nFormatTag ;", "\n\u3000 UIN16 nChannels;", "\n\u3000 UIN16 nSamplesPerSec;", "\n\u3000 UIN32 nAvgBytesperSec;", "\n\u3000 UIN16 nBlockAlign;", "\n\u3000 UIN16 nBitNumPerSample;", "\n\u3000 char cDataFlag[4];", "\n\u3000 UIN16 nAudioLength;", "\n} WAVEFORMAT; ", "\u8bd5\u98987\uff1a\u7f16\u5199\u7c7bString\u7684\u6784\u9020\u51fd\u6570\u3001\u6790\u6784\u51fd\u6570\u548c\u8d4b\u503c\u51fd\u6570\uff0c\u5df2\u77e5\u7c7bString\u7684\u539f\u578b\u4e3a\uff1a", "\nCode", "\n#include ", "String::String(const char *str)", "\n{", "\n    if(str == NULL){", "\n        charArray=new char[1];", "\n        charArray[0]='\\0';", "\n    }else{", "\n        charArray=new char[strlen(str)+1];", "\n        strcpy(charArray,str);", "\n    }", "\n}", "\nString::String(const String &str)", "\n{", "\n    charArray = new char[strlen(str.charArray)+1];", "\n    strcpy(charArray,str.charArray);", "\n}", "\nString::~String()", "\n{", "\n    delete [] charArray;", "\n}", "\nString String::operator+(const String &str)", "\n{", "\n    String res;", "\n    delete [] res.charArray;//\u91ca\u653e\u539f\u6709\u7a7a\u95f4", "\n    res.charArray = new char[strlen(charArray)+strlen(str.charArray)+1];", "\n    strcpy(res.charArray,charArray);", "\n    strcpy(res.charArray+strlen(charArray),str.charArray);", "\n    return res;", "\n}", "\nString & String::operator=(const String &str)", "\n{", "\n    if(charArray == str.charArray)", "\n        return *this;", "\n    delete [] charArray;", "\n    charArray = new char[strlen(str.charArray)+1];", "\n    strcpy(charArray,str.charArray);", "\n    return *this;", "\n}", "\nbool String::operator==(const String &str)", "\n{", "\n    return strcmp(charArray,str.charArray) == 0;", "\n}", "\nint String::Length()", "\n{", "\n    return strlen(charArray);", "\n}", "\nostream & operator\n{", "\n    o\n    return o;", "\n}   ", "String String::SubStr(int start, int end)", "\n{", "\n    String res;", "\n    delete [] res.charArray;//\u91ca\u653e\u539f\u6709\u5185\u5b58", "\n    res.charArray = new char[end-start+1];//\u91cd\u65b0\u7533\u8bf7\u5185\u5b58", "\n    for(int i=0; i+start", "\n        res.charArray[i]=charArray[start+i];", "\n    }", "\n    res.charArray[end-start] = '\\0';", "\n    return res;", "\n}      ", "void main()", "\n{", "\n    String s = \"abcd\";", "\n    String t = \"abcd\";", "\n    cout\n", "    String s2 = \"Hello \";", "\n    String s3 = \"China!\";", "\n    cout\n    cout\n}\u5256\u6790\uff1a", "\n\u80fd\u591f\u51c6\u786e\u65e0\u8bef\u5730\u7f16\u5199\u51faString\u7c7b\u7684\u6784\u9020\u51fd\u6570\u3001\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3001\u8d4b\u503c\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u7684\u9762\u8bd5\u8005\u81f3\u5c11\u5df2\u7ecf\u5177\u5907\u4e86C++\u57fa\u672c\u529f\u768460%\u4ee5\u4e0a\uff01", "\n\u5728\u8fd9\u4e2a\u7c7b\u4e2d\u5305\u62ec\u4e86\u6307\u9488\u7c7b\u6210\u5458\u53d8\u91cfm_data\uff0c\u5f53\u7c7b\u4e2d\u5305\u62ec\u6307\u9488\u7c7b\u6210\u5458\u53d8\u91cf\u65f6\uff0c\u4e00\u5b9a\u8981\u91cd\u8f7d\u5176\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3001\u8d4b\u503c\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\uff0c\u8fd9\u65e2\u662f\u5bf9C++\u7a0b\u5e8f\u5458\u7684\u57fa\u672c\u8981\u6c42\uff0c\u4e5f\u662f\u300aEffective\u3000C++\u300b\u4e2d\u7279\u522b\u5f3a\u8c03\u7684\u6761\u6b3e\u3002\u4ed4\u7ec6\u5b66\u4e60\u8fd9\u4e2a\u7c7b\uff0c\u7279\u522b\u6ce8\u610f\u52a0\u6ce8\u91ca\u7684\u5f97\u5206\u70b9\u548c\u52a0\u5206\u70b9\u7684\u610f\u4e49\uff0c\u8fd9\u6837\u5c31\u5177\u5907\u4e8660%\u4ee5\u4e0a\u7684C++\u57fa\u672c\u529f\uff01", "\u8bd5\u98988\uff1a\u8bf7\u8bf4\u51fastatic\u548cconst\u5173\u952e\u5b57\u5c3d\u53ef\u80fd\u591a\u7684\u4f5c\u7528", "\n\u89e3\u7b54\uff1a", "\nstatic\u5173\u952e\u5b57\u81f3\u5c11\u6709\u4e0b\u5217n\u4e2a\u4f5c\u7528\uff1a", "\n(1) \u51fd\u6570\u4f53\u5185static\u53d8\u91cf\u7684\u4f5c\u7528\u8303\u56f4\u4e3a\u8be5\u51fd\u6570\u4f53\uff0c\u4e0d\u540c\u4e8eauto\u53d8\u91cf\uff0c\u8be5\u53d8\u91cf\u7684\u5185\u5b58\u53ea\u88ab\u5206\u914d\u4e00\u6b21\uff0c\u56e0\u6b64\u5176\u503c\u5728\u4e0b\u6b21\u8c03\u7528\u65f6\u4ecd\u7ef4\u6301\u4e0a\u6b21\u7684\u503c\uff1b", "\n(2) \u5728\u6a21\u5757\u5185\u7684static\u5168\u5c40\u53d8\u91cf\u53ef\u4ee5\u88ab\u6a21\u5757\u5185\u6240\u7528\u51fd\u6570\u8bbf\u95ee\uff0c\u4f46\u4e0d\u80fd\u88ab\u6a21\u5757\u5916\u5176\u5b83\u51fd\u6570\u8bbf\u95ee\uff1b", "\n(3) \u5728\u6a21\u5757\u5185\u7684static\u51fd\u6570\u53ea\u53ef\u88ab\u8fd9\u4e00\u6a21\u5757\u5185\u7684\u5176\u5b83\u51fd\u6570\u8c03\u7528\uff0c\u8fd9\u4e2a\u51fd\u6570\u7684\u4f7f\u7528\u8303\u56f4\u88ab\u9650\u5236\u5728\u58f0\u660e\u5b83\u7684\u6a21\u5757\u5185\uff1b", "\n(4) \u5728\u7c7b\u4e2d\u7684static\u6210\u5458\u53d8\u91cf\u5c5e\u4e8e\u6574\u4e2a\u7c7b\u6240\u62e5\u6709\uff0c\u5bf9\u7c7b\u7684\u6240\u6709\u5bf9\u8c61\u53ea\u6709\u4e00\u4efd\u62f7\u8d1d\uff1b", "\n(5) \u5728\u7c7b\u4e2d\u7684static\u6210\u5458\u51fd\u6570\u5c5e\u4e8e\u6574\u4e2a\u7c7b\u6240\u62e5\u6709\uff0c\u8fd9\u4e2a\u51fd\u6570\u4e0d\u63a5\u6536this\u6307\u9488\uff0c\u56e0\u800c\u53ea\u80fd\u8bbf\u95ee\u7c7b\u7684static\u6210\u5458\u53d8\u91cf\u3002", "\nconst\u5173\u952e\u5b57\u81f3\u5c11\u6709\u4e0b\u5217n\u4e2a\u4f5c\u7528\uff1a", "\n(1) \u6b32\u963b\u6b62\u4e00\u4e2a\u53d8\u91cf\u88ab\u6539\u53d8\uff0c\u53ef\u4ee5\u4f7f\u7528const\u5173\u952e\u5b57\u3002\u5728\u5b9a\u4e49\u8be5const\u53d8\u91cf\u65f6\uff0c\u901a\u5e38\u9700\u8981\u5bf9\u5b83\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u56e0\u4e3a\u4ee5\u540e\u5c31\u6ca1\u6709\u673a\u4f1a\u518d\u53bb\u6539\u53d8\u5b83\u4e86", "\n(2) \u5bf9\u6307\u9488\u6765\u8bf4\uff0c\u53ef\u4ee5\u6307\u5b9a\u6307\u9488\u672c\u8eab\u4e3aconst\uff0c\u4e5f\u53ef\u4ee5\u6307\u5b9a\u6307\u9488\u6240\u6307\u7684\u6570\u636e\u4e3aconst\uff0c\u6216\u4e8c\u8005\u540c\u65f6\u6307\u5b9a\u4e3aconst\uff1b", "\n(3) \u5728\u4e00\u4e2a\u51fd\u6570\u58f0\u660e\u4e2d\uff0cconst\u53ef\u4ee5\u4fee\u9970\u5f62\u53c2\uff0c\u8868\u660e\u5b83\u662f\u4e00\u4e2a\u8f93\u5165\u53c2\u6570\uff0c\u5728\u51fd\u6570\u5185\u90e8\u4e0d\u80fd\u6539\u53d8\u5176\u503c\uff1b", "\n(4) \u5bf9\u4e8e\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u82e5\u6307\u5b9a\u5176\u4e3aconst\u7c7b\u578b\uff0c\u5219\u8868\u660e\u5176\u662f\u4e00\u4e2a\u5e38\u51fd\u6570\uff0c\u4e0d\u80fd\u4fee\u6539\u7c7b\u7684\u6210\u5458\u53d8\u91cf\uff1b", "\n(5) \u5bf9\u4e8e\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u6709\u65f6\u5019\u5fc5\u987b\u6307\u5b9a\u5176\u8fd4\u56de\u503c\u4e3aconst\u7c7b\u578b\uff0c\u4ee5\u4f7f\u5f97\u5176\u8fd4\u56de\u503c\u4e0d\u4e3a\u201c\u5de6\u503c\u201d\u3002\u4f8b\u5982\uff1a", "\nconst classA operator*(const classA& a1,const classA& a2);", "\noperator*\u7684\u8fd4\u56de\u7ed3\u679c\u5fc5\u987b\u662f\u4e00\u4e2aconst\u5bf9\u8c61\u3002\u5982\u679c\u4e0d\u662f\uff0c\u8fd9\u6837\u7684\u53d8\u6001\u4ee3\u7801\u4e5f\u4e0d\u4f1a\u7f16\u8bd1\u51fa\u9519\uff1a", "\nclassA a, b, c;", "\n(a * b) = c; // \u5bf9a*b\u7684\u7ed3\u679c\u8d4b\u503c", "\n\u64cd\u4f5c(a * b) = c\u663e\u7136\u4e0d\u7b26\u5408\u7f16\u7a0b\u8005\u7684\u521d\u8877\uff0c\u4e5f\u6ca1\u6709\u4efb\u4f55\u610f\u4e49\u3002", "\u4e1c\u8f6f\u7ecf\u5178\u7b14\u8bd5\u53ca\u53c2\u8003\u7b54\u6848", "\n1.static\u6709\u4ec0\u4e48\u7528\u9014\uff1f\uff08\u8bf7\u81f3\u5c11\u8bf4\u660e\u4e24\u79cd\uff09", "\n1)\u5728\u51fd\u6570\u4f53\uff0c\u4e00\u4e2a\u88ab\u58f0\u660e\u4e3a\u9759\u6001\u7684\u53d8\u91cf\u5728\u8fd9\u4e00\u51fd\u6570\u88ab\u8c03\u7528\u8fc7\u7a0b\u4e2d\u7ef4\u6301\u5176\u503c\u4e0d\u53d8\u3002", "\n2) \u5728\u6a21\u5757\u5185\uff08\u4f46\u5728\u51fd\u6570\u4f53\u5916\uff09\uff0c\u4e00\u4e2a\u88ab\u58f0\u660e\u4e3a\u9759\u6001\u7684\u53d8\u91cf\u53ef\u4ee5\u88ab\u6a21\u5757\u5185\u6240\u7528\u51fd\u6570\u8bbf\u95ee\uff0c\u4f46\u4e0d\u80fd\u88ab\u6a21\u5757\u5916\u5176\u5b83\u51fd\u6570\u8bbf\u95ee\u3002\u5b83\u662f\u4e00\u4e2a\u672c\u5730\u7684\u5168\u5c40\u53d8\u91cf\u3002", "\n3) \u5728\u6a21\u5757\u5185\uff0c\u4e00\u4e2a\u88ab\u58f0\u660e\u4e3a\u9759\u6001\u7684\u51fd\u6570\u53ea\u53ef\u88ab\u8fd9\u4e00\u6a21\u5757\u5185\u7684\u5176\u5b83\u51fd\u6570\u8c03\u7528\u3002\u90a3\u5c31\u662f\uff0c\u8fd9\u4e2a\u51fd\u6570\u88ab\u9650\u5236\u5728\u58f0\u660e\u5b83\u7684\u6a21\u5757\u7684\u672c\u5730\u8303\u56f4\u5185\u4f7f\u7528", "\n2.\u5f15\u7528\u4e0e\u6307\u9488\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n1) \u5f15\u7528\u5fc5\u987b\u88ab\u521d\u59cb\u5316\uff0c\u6307\u9488\u4e0d\u5fc5\u3002", "\n2) \u5f15\u7528\u521d\u59cb\u5316\u4ee5\u540e\u4e0d\u80fd\u88ab\u6539\u53d8\uff0c\u6307\u9488\u53ef\u4ee5\u6539\u53d8\u6240\u6307\u7684\u5bf9\u8c61\u3002", "\n3) \u4e0d\u5b58\u5728\u6307\u5411\u7a7a\u503c\u7684\u5f15\u7528\uff0c\u4f46\u662f\u5b58\u5728\u6307\u5411\u7a7a\u503c\u7684\u6307\u9488\u3002", "\n3.\u63cf\u8ff0\u5b9e\u65f6\u7cfb\u7edf\u7684\u57fa\u672c\u7279\u6027", "\n\u5728\u7279\u5b9a\u65f6\u95f4\u5185\u5b8c\u6210\u7279\u5b9a\u7684\u4efb\u52a1\uff0c\u5b9e\u65f6\u6027\u4e0e\u53ef\u9760\u6027\u3002", "\n4.\u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u5728\u5185\u5b58\u4e2d\u662f\u5426\u6709\u533a\u522b\uff1f\u5982\u679c\u6709\uff0c\u662f\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u5168\u5c40\u53d8\u91cf\u50a8\u5b58\u5728\u9759\u6001\u6570\u636e\u5e93\uff0c\u5c40\u90e8\u53d8\u91cf\u5728\u5806\u6808\u3002", "\n5.\u4ec0\u4e48\u662f\u5e73\u8861\u4e8c\u53c9\u6811\uff1f", "\n\u5de6\u53f3\u5b50\u6811\u90fd\u662f\u5e73\u8861\u4e8c\u53c9\u6811 \u4e14\u5de6\u53f3\u5b50\u6811\u7684\u6df1\u5ea6\u5dee\u503c\u7684\u7edd\u5bf9\u503c\u4e0d\u5927\u4e8e1\u3002", "\n6.\u5806\u6808\u6ea2\u51fa\u4e00\u822c\u662f\u7531\u4ec0\u4e48\u539f\u56e0\u5bfc\u81f4\u7684\uff1f", "\n\u6ca1\u6709\u56de\u6536\u5783\u573e\u8d44\u6e90\u3002", "\n7.\u4ec0\u4e48\u51fd\u6570\u4e0d\u80fd\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff1f", "\nconstructor\u51fd\u6570\u4e0d\u80fd\u58f0\u660e\u4e3a\u865a\u51fd\u6570\u3002", "\n8.\u5192\u6ce1\u6392\u5e8f\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u4ec0\u4e48\uff1f", "\n\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(n^2)\u3002", "\n9.\u5199\u51fafloat x \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684if\u8bed\u53e5\u3002", "\nif(x>0.000001&&x\n10.Internet\u91c7\u7528\u54ea\u79cd\u7f51\u7edc\u534f\u8bae\uff1f\u8be5\u534f\u8bae\u7684\u4e3b\u8981\u5c42\u6b21\u7ed3\u6784\uff1f", "\nTcp/Ip\u534f\u8bae", "\n\u4e3b\u8981\u5c42\u6b21\u7ed3\u6784\u4e3a\uff1a \u5e94\u7528\u5c42/\u4f20\u8f93\u5c42/\u7f51\u7edc\u5c42/\u6570\u636e\u94fe\u8def\u5c42/\u7269\u7406\u5c42\u3002", "\n11.Internet\u7269\u7406\u5730\u5740\u548cIP\u5730\u5740\u8f6c\u6362\u91c7\u7528\u4ec0\u4e48\u534f\u8bae\uff1f", "\nARP (Address Resolution Protocol)\uff08\u5730\u5740\u89e3\u6790\u5354\u8b70\uff09", "\n12.IP\u5730\u5740\u7684\u7f16\u7801\u5206\u4e3a\u54ea\u4fe9\u90e8\u5206\uff1f", "\nIP\u5730\u5740\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff0c\u7f51\u7edc\u53f7\u548c\u4e3b\u673a\u53f7\u3002\u4e0d\u8fc7\u662f\u8981\u548c\u201c\u5b50\u7f51\u63a9\u7801\u201d\u6309\u4f4d\u4e0e\u4e0a\u4e4b\u540e\u624d\u80fd\u533a\u5206\u54ea\u4e9b\u662f\u7f51\u7edc\u4f4d\u54ea\u4e9b\u662f\u4e3b\u673a\u4f4d\u3002", "\n13.\u7528\u6237\u8f93\u5165M,N\u503c\uff0c\u4ece1\u81f3N\u5f00\u59cb\u987a\u5e8f\u5faa\u73af\u6570\u6570\uff0c\u6bcf\u6570\u5230M\u8f93\u51fa\u8be5\u6570\u503c\uff0c\u76f4\u81f3\u5168\u90e8\u8f93\u51fa\u3002\u5199\u51faC\u7a0b\u5e8f\u3002", "\n\u5faa\u73af\u94fe\u8868\uff0c\u7528\u53d6\u4f59\u64cd\u4f5c\u505a", "14.\u4e0d\u80fd\u505aswitch()\u7684\u53c2\u6570\u7c7b\u578b\u662f\uff1a", "\nswitch\u7684\u53c2\u6570\u4e0d\u80fd\u4e3a\u5b9e\u578b\u3002", "\n1.\u5199\u51fa\u5224\u65adABCD\u56db\u4e2a\u8868\u8fbe\u5f0f\u7684\u662f\u5426\u6b63\u786e, \u82e5\u6b63\u786e, \u5199\u51fa\u7ecf\u8fc7\u8868\u8fbe\u5f0f\u4e2d a\u7684\u503c(3\u5206)", "\nint a = 4;", "\n(A)a += (a++); (B) a += (++a) ;(C) (a++) += a;(D) (++a) += (a++);", "\na = ?", "\n\u7b54\uff1aC\u9519\u8bef\uff0c\u5de6\u4fa7\u4e0d\u662f\u4e00\u4e2a\u6709\u6548\u53d8\u91cf\uff0c\u4e0d\u80fd\u8d4b\u503c\uff0c\u53ef\u6539\u4e3a(++a) += a;", "\n\u6539\u540e\u7b54\u6848\u4f9d\u6b21\u4e3a9,10,10,11", "\n2.\u67d032\u4f4d\u7cfb\u7edf\u4e0b, C++\u7a0b\u5e8f\uff0c\u8bf7\u8ba1\u7b97sizeof \u7684\u503c(5\u5206).", "\nchar str[] = \u201chttp://www.ibegroup.com/\u201d", "\nchar *p = str ;", "\nint n = 10;", "\n\u8bf7\u8ba1\u7b97", "\nsizeof (str ) = \uff1f\uff081\uff09", "\nsizeof ( p ) = \uff1f\uff082\uff09", "\nsizeof ( n ) = \uff1f\uff083\uff09", "\nvoid Foo ( char str[100]){", "\n\u8bf7\u8ba1\u7b97", "\nsizeof( str ) = \uff1f\uff084\uff09", "\n}", "\nvoid *p = malloc( 100 );", "\n\u8bf7\u8ba1\u7b97", "\nsizeof ( p ) = \uff1f\uff085\uff09", "\n\u7b54\uff1a\uff081\uff0917 \uff082\uff094 \uff083\uff09 4 \uff084\uff094 \uff085\uff094", "\n3. \u56de\u7b54\u4e0b\u9762\u7684\u95ee\u9898. (4\u5206)", "\n(1).\u5934\u6587\u4ef6\u4e2d\u7684 ifndef/define/endif \u5e72\u4ec0\u4e48\u7528\uff1f\u9884\u5904\u7406", "\n\u7b54\uff1a\u9632\u6b62\u5934\u6587\u4ef6\u88ab\u91cd\u590d\u5f15\u7528", "\n(2). \uff03i nclude \u548c \uff03i nclude \u201cfilename.h\u201d \u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u7b54\uff1a\u524d\u8005\u7528\u6765\u5305\u542b\u5f00\u53d1\u73af\u5883\u63d0\u4f9b\u7684\u5e93\u5934\u6587\u4ef6\uff0c\u540e\u8005\u7528\u6765\u5305\u542b\u81ea\u5df1\u7f16\u5199\u7684\u5934\u6587\u4ef6\u3002", "\n(3).\u5728C++ \u7a0b\u5e8f\u4e2d\u8c03\u7528\u88ab C \u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u7684\u51fd\u6570\uff0c\u4e3a\u4ec0\u4e48\u8981\u52a0 extern \u201cC\u201d\u58f0\u660e\uff1f", "\n\u7b54\uff1a\u51fd\u6570\u548c\u53d8\u91cf\u88abC++\u7f16\u8bd1\u540e\u5728\u7b26\u53f7\u5e93\u4e2d\u7684\u540d\u5b57\u4e0eC\u8bed\u8a00\u7684\u4e0d\u540c\uff0c\u88abextern \"C\"\u4fee\u9970\u7684\u53d8", "\n\u91cf\u548c\u51fd\u6570\u662f\u6309\u7167C\u8bed\u8a00\u65b9\u5f0f\u7f16\u8bd1\u548c\u8fde\u63a5\u7684\u3002\u7531\u4e8e\u7f16\u8bd1\u540e\u7684\u540d\u5b57\u4e0d\u540c\uff0cC++\u7a0b\u5e8f\u4e0d\u80fd\u76f4\u63a5\u8c03", "\n\u7528C \u51fd\u6570\u3002C++\u63d0\u4f9b\u4e86\u4e00\u4e2aC \u8fde\u63a5\u4ea4\u6362\u6307\u5b9a\u7b26\u53f7extern\u201cC\u201d\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002", "\n(4). switch()\u4e2d\u4e0d\u5141\u8bb8\u7684\u6570\u636e\u7c7b\u578b\u662f?", "\n\u7b54\uff1a\u5b9e\u578b", "\n4. \u56de\u7b54\u4e0b\u9762\u7684\u95ee\u9898(6\u5206)", "\n(1).Void GetMemory(char **p, int num){", "\n*p = (char *)malloc(num);", "\n}", "\nvoid Test(void){", "\nchar *str = NULL;", "\nGetMemory(&str, 100);", "\nstrcpy(str, \"hello\");", "\nprintf(str);", "\n}", "\n\u8bf7\u95ee\u8fd0\u884cTest \u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n\u7b54\uff1a\u8f93\u51fa\u201chello\u201d", "\n(2). void Test(void){", "\nchar *str = (char *) malloc(100);", "\nstrcpy(str, \u201chello\u201d);", "\nfree(str);", "\nif(str != NULL){", "\nstrcpy(str, \u201cworld\u201d);", "\nprintf(str);", "\n}", "\n}", "\n\u8bf7\u95ee\u8fd0\u884cTest \u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n\u7b54\uff1a\u8f93\u51fa\u201cworld\u201d", "\n(3). char *GetMemory(void){", "\nchar p[] = \"hello world\";", "\nreturn p;", "\n}", "\nvoid Test(void){", "\nchar *str = NULL;", "\nstr = GetMemory();", "\nprintf(str);", "\n}", "\n\u8bf7\u95ee\u8fd0\u884cTest \u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n\u7b54\uff1a\u65e0\u6548\u7684\u6307\u9488\uff0c\u8f93\u51fa\u4e0d\u786e\u5b9a", "\n5. \u7f16\u5199strcat\u51fd\u6570(6\u5206)", "\n\u5df2\u77e5strcat\u51fd\u6570\u7684\u539f\u578b\u662fchar *strcat (char *strDest, const char *strSrc);", "\n\u5176\u4e2dstrDest \u662f\u76ee\u7684\u5b57\u7b26\u4e32\uff0cstrSrc \u662f\u6e90\u5b57\u7b26\u4e32\u3002", "\n\uff081\uff09\u4e0d\u8c03\u7528C++/C \u7684\u5b57\u7b26\u4e32\u5e93\u51fd\u6570\uff0c\u8bf7\u7f16\u5199\u51fd\u6570 strcat", "\n\u7b54\uff1a", "\nVC\u6e90\u7801\uff1a", "\nchar * __cdecl strcat (char * dst, const char * src)", "\n{", "\nchar * cp = dst;", "\nwhile( *cp )", "\ncp++; /* find end of dst */", "\nwhile( *cp++ = *src++ ) ; /* Copy src to end of dst */", "\nreturn( dst ); /* return dst */", "\n}", "\n\uff082\uff09strcat\u80fd\u628astrSrc \u7684\u5185\u5bb9\u8fde\u63a5\u5230strDest\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u8981char * \u7c7b\u578b\u7684\u8fd4\u56de\u503c\uff1f", "\n\u7b54\uff1a\u65b9\u4fbf\u8d4b\u503c\u7ed9\u5176\u4ed6\u53d8\u91cf", "\n6.MFC\u4e2dCString\u662f\u7c7b\u578b\u5b89\u5168\u7c7b\u4e48\uff1f", "\n\u7b54\uff1a\u4e0d\u662f\uff0c\u5176\u5b83\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u5230CString\u53ef\u4ee5\u4f7f\u7528CString\u7684\u6210\u5458\u51fd\u6570Format\u6765\u8f6c\u6362", "\n7.C++\u4e2d\u4e3a\u4ec0\u4e48\u7528\u6a21\u677f\u7c7b\u3002", "\n\u7b54\uff1a(1)\u53ef\u7528\u6765\u521b\u5efa\u52a8\u6001\u589e\u957f\u548c\u51cf\u5c0f\u7684\u6570\u636e\u7ed3\u6784", "\n\uff082\uff09\u5b83\u662f\u7c7b\u578b\u65e0\u5173\u7684\uff0c\u56e0\u6b64\u5177\u6709\u5f88\u9ad8\u7684\u53ef\u590d\u7528\u6027\u3002", "\n\uff083\uff09\u5b83\u5728\u7f16\u8bd1\u65f6\u800c\u4e0d\u662f\u8fd0\u884c\u65f6\u68c0\u67e5\u6570\u636e\u7c7b\u578b\uff0c\u4fdd\u8bc1\u4e86\u7c7b\u578b\u5b89\u5168", "\n\uff084\uff09\u5b83\u662f\u5e73\u53f0\u65e0\u5173\u7684\uff0c\u53ef\u79fb\u690d\u6027", "\n\uff085\uff09\u53ef\u7528\u4e8e\u57fa\u672c\u6570\u636e\u7c7b\u578b", "\n8.CSingleLock\u662f\u5e72\u4ec0\u4e48\u7684\u3002", "\n\u7b54\uff1a\u540c\u6b65\u591a\u4e2a\u7ebf\u7a0b\u5bf9\u4e00\u4e2a\u6570\u636e\u7c7b\u7684\u540c\u65f6\u8bbf\u95ee", "\n9.NEWTEXTMETRIC \u662f\u4ec0\u4e48\u3002", "\n\u7b54\uff1a\u7269\u7406\u5b57\u4f53\u7ed3\u6784\uff0c\u7528\u6765\u8bbe\u7f6e\u5b57\u4f53\u7684\u9ad8\u5bbd\u5927\u5c0f", "\n10.\u7a0b\u5e8f\u4ec0\u4e48\u65f6\u5019\u5e94\u8be5\u4f7f\u7528\u7ebf\u7a0b\uff0c\u4ec0\u4e48\u65f6\u5019\u5355\u7ebf\u7a0b\u6548\u7387\u9ad8\u3002", "\n\u7b54\uff1a1\uff0e\u8017\u65f6\u7684\u64cd\u4f5c\u4f7f\u7528\u7ebf\u7a0b\uff0c\u63d0\u9ad8\u5e94\u7528\u7a0b\u5e8f\u54cd\u5e94", "\n2\uff0e\u5e76\u884c\u64cd\u4f5c\u65f6\u4f7f\u7528\u7ebf\u7a0b\uff0c\u5982C/S\u67b6\u6784\u7684\u670d\u52a1\u5668\u7aef\u5e76\u53d1\u7ebf\u7a0b\u54cd\u5e94\u7528\u6237\u7684\u8bf7\u6c42\u3002", "\n3\uff0e\u591aCPU\u7cfb\u7edf\u4e2d\uff0c\u4f7f\u7528\u7ebf\u7a0b\u63d0\u9ad8CPU\u5229\u7528\u7387", "\n4\uff0e\u6539\u5584\u7a0b\u5e8f\u7ed3\u6784\u3002\u4e00\u4e2a\u65e2\u957f\u53c8\u590d\u6742\u7684\u8fdb\u7a0b\u53ef\u4ee5\u8003\u8651\u5206\u4e3a\u591a\u4e2a\u7ebf\u7a0b\uff0c\u6210\u4e3a\u51e0\u4e2a\u72ec\u7acb\u6216\u534a\u72ec", "\n\u7acb\u7684\u8fd0\u884c\u90e8\u5206\uff0c\u8fd9\u6837\u7684\u7a0b\u5e8f\u4f1a\u5229\u4e8e\u7406\u89e3\u548c\u4fee\u6539\u3002", "\n\u5176\u4ed6\u60c5\u51b5\u90fd\u4f7f\u7528\u5355\u7ebf\u7a0b\u3002", "\n11.Windows\u662f\u5185\u6838\u7ea7\u7ebf\u7a0b\u4e48\u3002", "\n\u7b54\uff1a\u89c1\u4e0b\u4e00\u9898", "\n12.Linux\u6709\u5185\u6838\u7ea7\u7ebf\u7a0b\u4e48\u3002", "\n\u7b54\uff1a\u7ebf\u7a0b\u901a\u5e38\u88ab\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u4ee3\u7801\u7684\u4e0d\u540c\u6267\u884c\u8def\u7ebf\u3002\u4ece\u5b9e\u73b0\u65b9\u5f0f\u4e0a\u5212\u5206\uff0c\u7ebf\u7a0b\u6709\u4e24", "\n\u79cd\u7c7b\u578b\uff1a\u201c\u7528\u6237\u7ea7\u7ebf\u7a0b\u201d\u548c\u201c\u5185\u6838\u7ea7\u7ebf\u7a0b\u201d\u3002 \u7528\u6237\u7ebf\u7a0b\u6307\u4e0d\u9700\u8981\u5185\u6838\u652f\u6301\u800c\u5728\u7528\u6237\u7a0b\u5e8f", "\n\u4e2d\u5b9e\u73b0\u7684\u7ebf\u7a0b\uff0c\u5176\u4e0d\u4f9d\u8d56\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u6838\u5fc3\uff0c\u5e94\u7528\u8fdb\u7a0b\u5229\u7528\u7ebf\u7a0b\u5e93\u63d0\u4f9b\u521b\u5efa\u3001\u540c\u6b65\u3001\u8c03\u5ea6", "\n\u548c\u7ba1\u7406\u7ebf\u7a0b\u7684\u51fd\u6570\u6765\u63a7\u5236\u7528\u6237\u7ebf\u7a0b\u3002\u8fd9\u79cd\u7ebf\u7a0b\u751a\u81f3\u5728\u8c61 DOS \u8fd9\u6837\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u4e5f\u53ef\u5b9e\u73b0", "\n\uff0c\u4f46\u7ebf\u7a0b\u7684\u8c03\u5ea6\u9700\u8981\u7528\u6237\u7a0b\u5e8f\u5b8c\u6210\uff0c\u8fd9\u6709\u4e9b\u7c7b\u4f3c Windows 3.x \u7684\u534f\u4f5c\u5f0f\u591a\u4efb\u52a1\u3002\u53e6\u5916\u4e00", "\n\u79cd\u5219\u9700\u8981\u5185\u6838\u7684\u53c2\u4e0e\uff0c\u7531\u5185\u6838\u5b8c\u6210\u7ebf\u7a0b\u7684\u8c03\u5ea6\u3002\u5176\u4f9d\u8d56\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u6838\u5fc3\uff0c\u7531\u5185\u6838\u7684\u5185\u90e8", "\n\u9700\u6c42\u8fdb\u884c\u521b\u5efa\u548c\u64a4\u9500\uff0c\u8fd9\u4e24\u79cd\u6a21\u578b\u5404\u6709\u5176\u597d\u5904\u548c\u7f3a\u70b9\u3002\u7528\u6237\u7ebf\u7a0b\u4e0d\u9700\u8981\u989d\u5916\u7684\u5185\u6838\u5f00\u652f", "\n\uff0c\u5e76\u4e14\u7528\u6237\u6001\u7ebf\u7a0b\u7684\u5b9e\u73b0\u65b9\u5f0f\u53ef\u4ee5\u88ab\u5b9a\u5236\u6216\u4fee\u6539\u4ee5\u9002\u5e94\u7279\u6b8a\u5e94\u7528\u7684\u8981\u6c42\uff0c\u4f46\u662f\u5f53\u4e00\u4e2a\u7ebf", "\n\u7a0b\u56e0 I/O \u800c\u5904\u4e8e\u7b49\u5f85\u72b6\u6001\u65f6\uff0c\u6574\u4e2a\u8fdb\u7a0b\u5c31\u4f1a\u88ab\u8c03\u5ea6\u7a0b\u5e8f\u5207\u6362\u4e3a\u7b49\u5f85\u72b6\u6001\uff0c\u5176\u4ed6\u7ebf\u7a0b\u5f97\u4e0d", "\n\u5230\u8fd0\u884c\u7684\u673a\u4f1a\uff1b\u800c\u5185\u6838\u7ebf\u7a0b\u5219\u6ca1\u6709\u5404\u4e2a\u9650\u5236\uff0c\u6709\u5229\u4e8e\u53d1\u6325\u591a\u5904\u7406\u5668\u7684\u5e76\u53d1\u4f18\u52bf\uff0c\u4f46\u5374\u5360", "\n\u7528\u4e86\u66f4\u591a\u7684\u7cfb\u7edf\u5f00\u652f\u3002", "\nWindows NT\u548cOS/2\u652f\u6301\u5185\u6838\u7ebf\u7a0b\u3002Linux \u652f\u6301\u5185\u6838\u7ea7\u7684\u591a\u7ebf\u7a0b", "\n13.C++\u4e2d\u4ec0\u4e48\u6570\u636e\u5206\u914d\u5728\u6808\u6216\u5806\u4e2d\uff0cNew\u5206\u914d\u6570\u636e\u662f\u5728\u8fd1\u5806\u8fd8\u662f\u8fdc\u5806\u4e2d\uff1f", "\n\u7b54\uff1a\u6808: \u5b58\u653e\u5c40\u90e8\u53d8\u91cf\uff0c\u51fd\u6570\u8c03\u7528\u53c2\u6570,\u51fd\u6570\u8fd4\u56de\u503c\uff0c\u51fd\u6570\u8fd4\u56de\u5730\u5740\u3002\u7531\u7cfb\u7edf\u7ba1\u7406", "\n\u5806: \u7a0b\u5e8f\u8fd0\u884c\u65f6\u52a8\u6001\u7533\u8bf7\uff0cnew \u548c\u3000malloc\u7533\u8bf7\u7684\u5185\u5b58\u5c31\u5728\u5806\u4e0a", "\n14.\u4f7f\u7528\u7ebf\u7a0b\u662f\u5982\u4f55\u9632\u6b62\u51fa\u73b0\u5927\u7684\u6ce2\u5cf0\u3002", "\n\u7b54\uff1a\u610f\u601d\u662f\u5982\u4f55\u9632\u6b62\u540c\u65f6\u4ea7\u751f\u5927\u91cf\u7684\u7ebf\u7a0b\uff0c\u65b9\u6cd5\u662f\u4f7f\u7528\u7ebf\u7a0b\u6c60\uff0c\u7ebf\u7a0b\u6c60\u5177\u6709\u53ef\u4ee5\u540c\u65f6\u63d0", "\n\u9ad8\u8c03\u5ea6\u6548\u7387\u548c\u9650\u5236\u8d44\u6e90\u4f7f\u7528\u7684\u597d\u5904\uff0c\u7ebf\u7a0b\u6c60\u4e2d\u7684\u7ebf\u7a0b\u8fbe\u5230\u6700\u5927\u6570\u65f6\uff0c\u5176\u4ed6\u7ebf\u7a0b\u5c31\u4f1a\u6392\u961f", "\n\u7b49\u5019\u3002", "\n15\u51fd\u6570\u6a21\u677f\u4e0e\u7c7b\u6a21\u677f\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u7b54\uff1a\u51fd\u6570\u6a21\u677f\u7684\u5b9e\u4f8b\u5316\u662f\u7531\u7f16\u8bd1\u7a0b\u5e8f\u5728\u5904\u7406\u51fd\u6570\u8c03\u7528\u65f6\u81ea\u52a8\u5b8c\u6210\u7684\uff0c\u800c\u7c7b\u6a21\u677f\u7684\u5b9e\u4f8b\u5316", "\n\u5fc5\u987b\u7531\u7a0b\u5e8f\u5458\u5728\u7a0b\u5e8f\u4e2d\u663e\u5f0f\u5730\u6307\u5b9a\u3002", "\n16\u4e00\u822c\u6570\u636e\u5e93\u82e5\u51fa\u73b0\u65e5\u5fd7\u6ee1\u4e86\uff0c\u4f1a\u51fa\u73b0\u4ec0\u4e48\u60c5\u51b5\uff0c\u662f\u5426\u8fd8\u80fd\u4f7f\u7528\uff1f", "\n\u7b54\uff1a\u53ea\u80fd\u6267\u884c\u67e5\u8be2\u7b49\u8bfb\u64cd\u4f5c\uff0c\u4e0d\u80fd\u6267\u884c\u66f4\u6539\uff0c\u5907\u4efd\u7b49\u5199\u64cd\u4f5c\uff0c\u539f\u56e0\u662f\u4efb\u4f55\u5199\u64cd\u4f5c\u90fd\u8981\u8bb0", "\n\u5f55\u65e5\u5fd7\u3002\u4e5f\u5c31\u662f\u8bf4\u57fa\u672c\u4e0a\u5904\u4e8e\u4e0d\u80fd\u4f7f\u7528\u7684\u72b6\u6001\u3002", "\n17 SQL Server\u662f\u5426\u652f\u6301\u884c\u7ea7\u9501\uff0c\u6709\u4ec0\u4e48\u597d\u5904\uff1f", "\n\u7b54\uff1a\u652f\u6301\uff0c\u8bbe\u7acb\u5c01\u9501\u673a\u5236\u4e3b\u8981\u662f\u4e3a\u4e86\u5bf9\u5e76\u53d1\u64cd\u4f5c\u8fdb\u884c\u63a7\u5236\uff0c\u5bf9\u5e72\u6270\u8fdb\u884c\u5c01\u9501\uff0c\u4fdd\u8bc1\u6570\u636e", "\n\u7684\u4e00\u81f4\u6027\u548c\u51c6\u786e\u6027\uff0c\u884c\u7ea7\u5c01\u9501\u786e\u4fdd\u5728\u7528\u6237\u53d6\u5f97\u88ab\u66f4\u65b0\u7684\u884c\u5230\u8be5\u884c\u8fdb\u884c\u66f4\u65b0\u8fd9\u6bb5\u65f6\u95f4\u5185\u4e0d", "\n\u88ab\u5176\u5b83\u7528\u6237\u6240\u4fee\u6539\u3002\u56e0\u800c\u884c\u7ea7\u9501\u5373\u53ef\u4fdd\u8bc1\u6570\u636e\u7684\u4e00\u81f4\u6027\u53c8\u80fd\u63d0\u9ad8\u6570\u636e\u64cd\u4f5c\u7684\u8ff8\u53d1\u6027\u3002", "\n18\u5982\u679c\u6570\u636e\u5e93\u6ee1\u4e86\u4f1a\u51fa\u73b0\u4ec0\u4e48\u60c5\u51b5\uff0c\u662f\u5426\u8fd8\u80fd\u4f7f\u7528\uff1f", "\n\u7b54\uff1a\u89c116", "\n19 \u5173\u4e8e\u5185\u5b58\u5bf9\u9f50\u7684\u95ee\u9898\u4ee5\u53casizof()\u7684\u8f93\u51fa", "\n\u7b54\uff1a\u7f16\u8bd1\u5668\u81ea\u52a8\u5bf9\u9f50\u7684\u539f\u56e0\uff1a\u4e3a\u4e86\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6027\u80fd\uff0c\u6570\u636e\u7ed3\u6784\uff08\u5c24\u5176\u662f\u6808\uff09\u5e94\u8be5\u5c3d\u53ef\u80fd", "\n\u5730\u5728\u81ea\u7136\u8fb9\u754c\u4e0a\u5bf9\u9f50\u3002\u539f\u56e0\u5728\u4e8e\uff0c\u4e3a\u4e86\u8bbf\u95ee\u672a\u5bf9\u9f50\u7684\u5185\u5b58\uff0c\u5904\u7406\u5668\u9700\u8981\u4f5c\u4e24\u6b21\u5185\u5b58\u8bbf\u95ee", "\n\uff1b\u7136\u800c\uff0c\u5bf9\u9f50\u7684\u5185\u5b58\u8bbf\u95ee\u4ec5\u9700\u8981\u4e00\u6b21\u8bbf\u95ee\u3002", "\n20 int i=10, j=10, k=3; k*=i+j; k\u6700\u540e\u7684\u503c\u662f\uff1f", "\n\u7b54\uff1a60\uff0c\u6b64\u9898\u8003\u5bdf\u4f18\u5148\u7ea7\uff0c\u5b9e\u9645\u5199\u6210\uff1a k*=(i+j);\uff0c\u8d4b\u503c\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u6700\u4f4e", "\n21.\u5bf9\u6570\u636e\u5e93\u7684\u4e00\u5f20\u8868\u8fdb\u884c\u64cd\u4f5c,\u540c\u65f6\u8981\u5bf9\u53e6\u4e00\u5f20\u8868\u8fdb\u884c\u64cd\u4f5c,\u5982\u4f55\u5b9e\u73b0?", "\n\u7b54\uff1a\u5c06\u64cd\u4f5c\u591a\u4e2a\u8868\u7684\u64cd\u4f5c\u653e\u5165\u5230\u4e8b\u52a1\u4e2d\u8fdb\u884c\u5904\u7406", "\n22.TCP/IP \u5efa\u7acb\u8fde\u63a5\u7684\u8fc7\u7a0b?(3-way shake)", "\n\u7b54\uff1a\u5728TCP/IP\u534f\u8bae\u4e2d\uff0cTCP\u534f\u8bae\u63d0\u4f9b\u53ef\u9760\u7684\u8fde\u63a5\u670d\u52a1\uff0c\u91c7\u7528\u4e09\u6b21\u63e1\u624b\u5efa\u7acb\u4e00\u4e2a\u8fde\u63a5\u3002", "\n\u3000\u3000 \u7b2c\u4e00\u6b21\u63e1\u624b\uff1a\u5efa\u7acb\u8fde\u63a5\u65f6\uff0c\u5ba2\u6237\u7aef\u53d1\u9001syn\u5305(syn=j)\u5230\u670d\u52a1\u5668\uff0c\u5e76\u8fdb\u5165SYN_SEND\u72b6", "\n\u6001\uff0c\u7b49\u5f85\u670d\u52a1\u5668\u786e\u8ba4\uff1b", "\n\u7b2c\u4e8c\u6b21\u63e1\u624b\uff1a\u670d\u52a1\u5668\u6536\u5230syn\u5305\uff0c\u5fc5\u987b\u786e\u8ba4\u5ba2\u6237\u7684SYN\uff08ack=j+1\uff09\uff0c\u540c\u65f6\u81ea\u5df1\u4e5f\u53d1\u9001\u4e00\u4e2a", "\nSYN\u5305\uff08syn=k\uff09\uff0c\u5373SYN+ACK\u5305\uff0c\u6b64\u65f6\u670d\u52a1\u5668\u8fdb\u5165SYN_RECV\u72b6\u6001\uff1b", "\n\u3000\u3000 \u7b2c\u4e09\u6b21\u63e1\u624b\uff1a\u5ba2\u6237\u7aef\u6536\u5230\u670d\u52a1\u5668\u7684SYN\uff0bACK\u5305\uff0c\u5411\u670d\u52a1\u5668\u53d1\u9001\u786e\u8ba4\u5305ACK(ack=k+1)", "\n\uff0c\u6b64\u5305\u53d1\u9001\u5b8c\u6bd5\uff0c\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u8fdb\u5165ESTABLISHED\u72b6\u6001\uff0c\u5b8c\u6210\u4e09\u6b21\u63e1\u624b\u3002", "\n23.ICMP\u662f\u4ec0\u4e48\u534f\u8bae,\u5904\u4e8e\u54ea\u4e00\u5c42?", "\n\u7b54\uff1aInternet\u63a7\u5236\u62a5\u6587\u534f\u8bae\uff0c\u5904\u4e8e\u7f51\u7edc\u5c42\uff08IP\u5c42\uff09", "\n24.\u89e6\u53d1\u5668\u600e\u4e48\u5de5\u4f5c\u7684?", "\n\u7b54\uff1a\u89e6\u53d1\u5668\u4e3b\u8981\u662f\u901a\u8fc7\u4e8b\u4ef6\u8fdb\u884c\u89e6\u53d1\u800c\u88ab\u6267\u884c\u7684\uff0c\u5f53\u5bf9\u67d0\u4e00\u8868\u8fdb\u884c\u8bf8\u5982UPDATE\u3001 INSERT", "\n\u3001 DELETE \u8fd9\u4e9b\u64cd\u4f5c\u65f6\uff0c\u6570\u636e\u5e93\u5c31\u4f1a\u81ea\u52a8\u6267\u884c\u89e6\u53d1\u5668\u6240\u5b9a\u4e49\u7684SQL \u8bed\u53e5\uff0c\u4ece\u800c\u786e\u4fdd\u5bf9\u6570", "\n\u636e\u7684\u5904\u7406\u5fc5\u987b\u7b26\u5408\u7531\u8fd9\u4e9bSQL \u8bed\u53e5\u6240\u5b9a\u4e49\u7684\u89c4\u5219\u3002", "\n25.winsock\u5efa\u7acb\u8fde\u63a5\u7684\u4e3b\u8981\u5b9e\u73b0\u6b65\u9aa4?", "\n\u7b54\uff1a\u670d\u52a1\u5668\u7aef\uff1asocker()\u5efa\u7acb\u5957\u63a5\u5b57\uff0c\u7ed1\u5b9a\uff08bind\uff09\u5e76\u76d1\u542c\uff08listen\uff09\uff0c\u7528accept\uff08\uff09", "\n\u7b49\u5f85\u5ba2\u6237\u7aef\u8fde\u63a5\u3002", "\n\u5ba2\u6237\u7aef\uff1asocker()\u5efa\u7acb\u5957\u63a5\u5b57\uff0c\u8fde\u63a5\uff08connect\uff09\u670d\u52a1\u5668\uff0c\u8fde\u63a5\u4e0a\u540e\u4f7f\u7528send()\u548crecv\uff08", "\n\uff09\uff0c\u5728\u5957\u63a5\u5b57\u4e0a\u5199\u8bfb\u6570\u636e\uff0c\u76f4\u81f3\u6570\u636e\u4ea4\u6362\u5b8c\u6bd5\uff0cclosesocket()\u5173\u95ed\u5957\u63a5\u5b57\u3002", "\n\u670d\u52a1\u5668\u7aef\uff1aaccept\uff08\uff09\u53d1\u73b0\u6709\u5ba2\u6237\u7aef\u8fde\u63a5\uff0c\u5efa\u7acb\u4e00\u4e2a\u65b0\u7684\u5957\u63a5\u5b57\uff0c\u81ea\u8eab\u91cd\u65b0\u5f00\u59cb\u7b49\u5f85\u8fde", "\n\u63a5\u3002\u8be5\u65b0\u4ea7\u751f\u7684\u5957\u63a5\u5b57\u4f7f\u7528send()\u548crecv\uff08\uff09\u5199\u8bfb\u6570\u636e\uff0c\u76f4\u81f3\u6570\u636e\u4ea4\u6362\u5b8c\u6bd5\uff0cclosesock", "\net()\u5173\u95ed\u5957\u63a5\u5b57\u3002", "\n26.\u52a8\u6001\u8fde\u63a5\u5e93\u7684\u4e24\u79cd\u65b9\u5f0f?", "\n\u7b54\uff1a\u8c03\u7528\u4e00\u4e2aDLL\u4e2d\u7684\u51fd\u6570\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a", "\n1\uff0e\u8f7d\u5165\u65f6\u52a8\u6001\u94fe\u63a5\uff08load-time dynamic linking\uff09\uff0c\u6a21\u5757\u975e\u5e38\u660e\u786e\u8c03\u7528\u67d0\u4e2a\u5bfc\u51fa\u51fd\u6570", "\n\uff0c\u4f7f\u5f97\u4ed6\u4eec\u5c31\u50cf\u672c\u5730\u51fd\u6570\u4e00\u6837\u3002\u8fd9\u9700\u8981\u94fe\u63a5\u65f6\u94fe\u63a5\u90a3\u4e9b\u51fd\u6570\u6240\u5728DLL\u7684\u5bfc\u5165\u5e93\uff0c\u5bfc\u5165\u5e93\u5411", "\n\u7cfb\u7edf\u63d0\u4f9b\u4e86\u8f7d\u5165DLL\u65f6\u6240\u9700\u7684\u4fe1\u606f\u53caDLL\u51fd\u6570\u5b9a\u4f4d\u3002", "\n2\uff0e\u8fd0\u884c\u65f6\u52a8\u6001\u94fe\u63a5\uff08run-time dynamic linking\uff09\uff0c\u8fd0\u884c\u65f6\u53ef\u4ee5\u901a\u8fc7LoadLibrary\u6216Loa", "\ndLibraryEx\u51fd\u6570\u8f7d\u5165DLL\u3002DLL\u8f7d\u5165\u540e\uff0c\u6a21\u5757\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528GetProcAddress\u83b7\u53d6DLL\u51fd\u6570\u7684", "\n\u51fa\u53e3\u5730\u5740\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7\u8fd4\u56de\u7684\u51fd\u6570\u6307\u9488\u8c03\u7528DLL\u51fd\u6570\u4e86\u3002\u5982\u6b64\u5373\u53ef\u907f\u514d\u5bfc\u5165\u5e93\u6587\u4ef6\u4e86", "\n\u3002", "\n27.IP\u7ec4\u64ad\u6709\u90a3\u4e9b\u597d\u5904?", "\n\u7b54\uff1aInternet\u4e0a\u4ea7\u751f\u7684\u8bb8\u591a\u65b0\u7684\u5e94\u7528\uff0c\u7279\u522b\u662f\u9ad8\u5e26\u5bbd\u7684\u591a\u5a92\u4f53\u5e94\u7528\uff0c\u5e26\u6765\u4e86\u5e26\u5bbd\u7684\u6025\u5267", "\n\u6d88\u8017\u548c\u7f51\u7edc\u62e5\u6324\u95ee\u9898\u3002\u7ec4\u64ad\u662f\u4e00\u79cd\u5141\u8bb8\u4e00\u4e2a\u6216\u591a\u4e2a\u53d1\u9001\u8005\uff08\u7ec4\u64ad\u6e90\uff09\u53d1\u9001\u5355\u4e00\u7684\u6570\u636e\u5305", "\n\u5230\u591a\u4e2a\u63a5\u6536\u8005\uff08\u4e00\u6b21\u7684\uff0c\u540c\u65f6\u7684\uff09\u7684\u7f51\u7edc\u6280\u672f\u3002\u7ec4\u64ad\u53ef\u4ee5\u5927\u5927\u7684\u8282\u7701\u7f51\u7edc\u5e26\u5bbd\uff0c\u56e0\u4e3a\u65e0", "\n\u8bba\u6709\u591a\u5c11\u4e2a\u76ee\u6807\u5730\u5740\uff0c\u5728\u6574\u4e2a\u7f51\u7edc\u7684\u4efb\u4f55\u4e00\u6761\u94fe\u8def\u4e0a\u53ea\u4f20\u9001\u5355\u4e00\u7684\u6570\u636e\u5305\u3002\u6240\u4ee5\u8bf4\u7ec4\u64ad", "\n\u6280\u672f\u7684\u6838\u5fc3\u5c31\u662f\u9488\u5bf9\u5982\u4f55\u8282\u7ea6\u7f51\u7edc\u8d44\u6e90\u7684\u524d\u63d0\u4e0b\u4fdd\u8bc1\u670d\u52a1\u8d28\u91cf\u3002", "19. \u5982\u4f55\u5f15\u7528\u4e00\u4e2a\u5df2\u7ecf\u5b9a\u4e49\u8fc7\u7684\u5168\u5c40\u53d8\u91cf\uff1f", "\n\u7b54\uff1aextern", "\n\u53ef\u4ee5\u7528\u5f15\u7528\u5934\u6587\u4ef6\u7684\u65b9\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u7528extern\u5173\u952e\u5b57\uff0c\u5982\u679c\u7528\u5f15\u7528\u5934\u6587\u4ef6\u65b9\u5f0f\u6765\u5f15\u7528\u67d0\u4e2a\u5728\u5934\u6587\u4ef6\u4e2d\u58f0\u660e\u7684\u5168\u5c40\u53d8\u7406\uff0c\u5047\u5b9a\u4f60\u5c06\u90a3\u4e2a\u53d8\u5199\u9519\u4e86\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4\u4f1a\u62a5\u9519\uff0c\u5982\u679c\u4f60\u7528extern\u65b9\u5f0f\u5f15\u7528\u65f6\uff0c\u5047\u5b9a\u4f60\u72af\u4e86\u540c\u6837\u7684\u9519\u8bef\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4\u4e0d\u4f1a\u62a5\u9519\uff0c\u800c\u5728\u8fde\u63a5\u671f\u95f4\u62a5\u9519\u3002", "20. \u5168\u5c40\u53d8\u91cf\u53ef\u4e0d\u53ef\u4ee5\u5b9a\u4e49\u5728\u53ef\u88ab\u591a\u4e2a.C\u6587\u4ef6\u5305\u542b\u7684\u5934\u6587\u4ef6\u4e2d\uff1f\u4e3a\u4ec0\u4e48\uff1f", "\n\u7b54\uff1a\u53ef\u4ee5\uff0c\u5728\u4e0d\u540c\u7684C\u6587\u4ef6\u4e2d\u4ee5static\u5f62\u5f0f\u6765\u58f0\u660e\u540c\u540d\u5168\u5c40\u53d8\u91cf\u3002", "\n\u53ef\u4ee5\u5728\u4e0d\u540c\u7684C\u6587\u4ef6\u4e2d\u58f0\u660e\u540c\u540d\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u524d\u63d0\u662f\u5176\u4e2d\u53ea\u80fd\u6709\u4e00\u4e2aC\u6587\u4ef6\u4e2d\u5bf9\u6b64\u53d8\u91cf\u8d4b\u521d\u503c\uff0c\u6b64\u65f6\u8fde\u63a5\u4e0d\u4f1a\u51fa\u9519\u3002", "21. \u8bed\u53e5for( \uff1b1 \uff1b)\u6709\u4ec0\u4e48\u95ee\u9898\uff1f\u5b83\u662f\u4ec0\u4e48\u610f\u601d\uff1f", "\n\u7b54\uff1a\u65e0\u9650\u5faa\u73af\uff0c\u548cwhile(1)\u76f8\u540c\u3002", "22. do\u2026\u2026while\u548cwhile\u2026\u2026do\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u7b54\uff1a\u524d\u4e00\u4e2a\u5faa\u73af\u4e00\u904d\u518d\u5224\u65ad\uff0c\u540e\u4e00\u4e2a\u5224\u65ad\u4ee5\u540e\u518d\u5faa\u73af\u3002", "23. \u8bf7\u5199\u51fa\u4e0b\u5217\u4ee3\u7801\u7684\u8f93\u51fa\u5185\u5bb9", "\n#include", "\nmain()", "\n{", "\nint a,b,c,d;", "\na=10;", "\nb=a++;", "\nc=++a;", "\nd=10*a++;", "\nprintf(\"b\uff0cc\uff0cd\uff1a%d\uff0c%d\uff0c%d\"\uff0cb\uff0cc\uff0cd);", "\nreturn 0;", "\n} ", "\u7b54\uff1a10\uff0c12\uff0c120 ", "1. \u4ee5\u4e0b\u4e09\u6761\u8f93\u51fa\u8bed\u53e5\u5206\u522b\u8f93\u51fa\u4ec0\u4e48\uff1f", "\nchar str1[] = \"abc\";", "\nchar str2[] = \"abc\";", "\nconst char str3[] = \"abc\";", "\nconst char str4[] = \"abc\";", "\nconst char* str5 = \"abc\";", "\nconst char* str6 = \"abc\";", "\ncout \ncout \ncout \n\u7b54\uff1a\u5206\u522b\u8f93\u51fafalse,false,true\u3002str1\u548cstr2\u90fd\u662f\u5b57\u7b26\u6570\u7ec4\uff0c\u6bcf\u4e2a\u90fd\u6709\u5176\u81ea\u5df1\u7684\u5b58\u50a8\u533a\uff0c\u5b83\u4eec\u7684\u503c\u5219\u662f\u5404\u5b58\u50a8\u533a\u9996\u5730\u5740\uff0c\u4e0d\u7b49\uff1bstr3\u548cstr4\u540c\u4e0a\uff0c\u53ea\u662f\u6309const\u8bed\u4e49\uff0c\u5b83\u4eec\u6240\u6307\u5411\u7684\u6570\u636e\u533a\u4e0d\u80fd\u4fee\u6539\u3002str5\u548cstr6\u5e76\u975e\u6570\u7ec4\u800c\u662f\u5b57\u7b26\u6307\u9488\uff0c\u5e76\u4e0d\u5206\u914d\u5b58\u50a8\u533a\uff0c\u5176\u540e\u7684\u201cabc\u201d\u4ee5\u5e38\u91cf\u5f62\u5f0f\u5b58\u4e8e\u9759\u6001\u6570\u636e\u533a\uff0c\u800c\u5b83\u4eec\u81ea\u5df1\u4ec5\u662f\u6307\u5411\u8be5\u533a\u9996\u5730\u5740\u7684\u6307\u9488\uff0c\u76f8\u7b49\u3002", "2. \u4ee5\u4e0b\u4ee3\u7801\u4e2d\u7684\u4e24\u4e2asizeof\u7528\u6cd5\u6709\u95ee\u9898\u5417\uff1f", "\nvoid UpperCase( char str[] ) // \u5c06 str \u4e2d\u7684\u5c0f\u5199\u5b57\u6bcd\u8f6c\u6362\u6210\u5927\u5199\u5b57\u6bcd", "\n{", "\nfor( size_t i=0; iif( 'a'\nstr[i] -= ('a'-'A' );", "\n}", "\nchar str[] = \"aBcDe\";", "\ncout \nUpperCase( str );", "\ncout \n\u7b54\uff1a\u51fd\u6570\u5185\u7684sizeof\u6709\u95ee\u9898\u3002\u6839\u636e\u8bed\u6cd5\uff0csizeof\u5982\u7528\u4e8e\u6570\u7ec4\uff0c\u53ea\u80fd\u6d4b\u51fa\u9759\u6001\u6570\u7ec4\u7684\u5927\u5c0f\uff0c\u65e0\u6cd5\u68c0\u6d4b\u52a8\u6001\u5206\u914d\u7684\u6216\u5916\u90e8\u6570\u7ec4\u5927\u5c0f\u3002\u51fd\u6570\u5916\u7684str\u662f\u4e00\u4e2a\u9759\u6001\u5b9a\u4e49\u7684\u6570\u7ec4\uff0c\u56e0\u6b64\u5176\u5927\u5c0f\u4e3a6\uff0c\u51fd\u6570\u5185\u7684str\u5b9e\u9645\u53ea\u662f\u4e00\u4e2a\u6307\u5411\u5b57\u7b26\u4e32\u7684\u6307\u9488\uff0c\u6ca1\u6709\u4efb\u4f55\u989d\u5916\u7684\u4e0e\u6570\u7ec4\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u56e0\u6b64sizeof\u4f5c\u7528\u4e8e\u4e0a\u53ea\u5c06\u5176\u5f53\u6307\u9488\u770b\uff0c\u4e00\u4e2a\u6307\u9488\u4e3a4\u4e2a\u5b57\u8282\uff0c\u56e0\u6b64\u8fd4\u56de4\u3002", "3. \u975eC++\u5185\u5efa\u578b\u522b A \u548c B\uff0c\u5728\u54ea\u51e0\u79cd\u60c5\u51b5\u4e0bB\u80fd\u9690\u5f0f\u8f6c\u5316\u4e3aA\uff1f", "\n\u7b54\uff1a", "\na. class B : public A { \u2026\u2026} // B\u516c\u6709\u7ee7\u627f\u81eaA\uff0c\u53ef\u4ee5\u662f\u95f4\u63a5\u7ee7\u627f\u7684", "\nb. class B { operator A( ); } // B\u5b9e\u73b0\u4e86\u9690\u5f0f\u8f6c\u5316\u4e3aA\u7684\u8f6c\u5316", "\nc. class A { A( const B& ); } // A\u5b9e\u73b0\u4e86non-explicit\u7684\u53c2\u6570\u4e3aB\uff08\u53ef\u4ee5\u6709\u5176\u4ed6\u5e26\u9ed8\u8ba4\u503c\u7684\u53c2\u6570\uff09\u6784\u9020\u51fd\u6570", "\nd. A& operator= ( const A& ); // \u8d4b\u503c\u64cd\u4f5c\uff0c\u867d\u4e0d\u662f\u6b63\u5b97\u7684\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\uff0c\u4f46\u4e5f\u53ef\u4ee5\u52c9\u5f3a\u7b97\u4e00\u4e2a", "4. \u4ee5\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1f", "\nstruct Test", "\n{", "\nTest( int ) {}", "\nTest() {}", "\nvoid fun() {}", "\n};", "\nvoid main( void )", "\n{", "\nTest a(1);", "\na.fun();", "\nTest b();", "\nb.fun();", "\n}", "\n\u7b54\uff1a\u53d8\u91cfb\u5b9a\u4e49\u51fa\u9519\u3002\u6309\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u5b9a\u4e49\u5bf9\u8c61\uff0c\u4e0d\u9700\u8981\u52a0\u62ec\u53f7\u3002", "\n5. \u4ee5\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1f", "\ncout \n\u7b54\uff1a\u4e09\u5143\u8868\u8fbe\u5f0f\u201c\uff1f:\u201d\u95ee\u53f7\u540e\u9762\u7684\u4e24\u4e2a\u64cd\u4f5c\u6570\u5fc5\u987b\u4e3a\u540c\u4e00\u7c7b\u578b\u3002", "6. \u4ee5\u4e0b\u4ee3\u7801\u80fd\u591f\u7f16\u8bd1\u901a\u8fc7\u5417\uff0c\u4e3a\u4ec0\u4e48\uff1f", "\nunsigned int const size1 = 2;", "\nchar str1[ size1 ];", "\nunsigned int temp = 0;", "\ncin >> temp;", "\nunsigned int const size2 = temp;", "\nchar str2[ size2 ];", "\n\u7b54\uff1astr2\u5b9a\u4e49\u51fa\u9519\uff0csize2\u975e\u7f16\u8bd1\u5668\u671f\u95f4\u5e38\u91cf\uff0c\u800c\u6570\u7ec4\u5b9a\u4e49\u8981\u6c42\u957f\u5ea6\u5fc5\u987b\u4e3a\u7f16\u8bd1\u671f\u5e38\u91cf\u3002", "7. \u4ee5\u4e0b\u53cd\u5411\u904d\u5386array\u6570\u7ec4\u7684\u65b9\u6cd5\u6709\u4ec0\u4e48\u9519\u8bef\uff1f", "\nvector array;", "\narray.push_back( 1 );", "\narray.push_back( 2 );", "\narray.push_back( 3 );", "\nfor( vector::size_type i=array.size()-1; i>=0; \u2013i ) // \u53cd\u5411\u904d\u5386array\u6570\u7ec4", "\n{", "\ncout \n}", "\n\u7b54\uff1a\u9996\u5148\u6570\u7ec4\u5b9a\u4e49\u6709\u8bef\uff0c\u5e94\u52a0\u4e0a\u7c7b\u578b\u53c2\u6570\uff1avector array\u3002\u5176\u6b21vector::size_type\u88ab\u5b9a\u4e49\u4e3aunsigned int\uff0c\u5373\u65e0\u7b26\u53f7\u6570\uff0c\u8fd9\u6837\u505a\u4e3a\u5faa\u73af\u53d8\u91cf\u7684i\u4e3a0\u65f6\u518d\u51cf1\u5c31\u4f1a\u53d8\u6210\u6700\u5927\u7684\u6574\u6570\uff0c\u5bfc\u81f4\u5faa\u73af\u5931\u53bb\u63a7\u5236\u3002", "8. \u4ee5\u4e0b\u4ee3\u7801\u4e2d\u7684\u8f93\u51fa\u8bed\u53e5\u8f93\u51fa0\u5417\uff0c\u4e3a\u4ec0\u4e48\uff1f", "\nstruct CLS", "\n{", "\nint m_i;", "\nCLS( int i ) : m_i(i) {}", "\nCLS()", "\n{", "\nCLS(0);", "\n}", "\n};", "\nCLS obj;", "\ncout \n\u7b54\uff1a\u4e0d\u80fd\u3002\u5728\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u5185\u90e8\u518d\u8c03\u7528\u5e26\u53c2\u7684\u6784\u9020\u51fd\u6570\u5c5e\u7528\u6237\u884c\u4e3a\u800c\u975e\u7f16\u8bd1\u5668\u884c\u4e3a\uff0c\u4ea6\u5373\u4ec5\u6267\u884c\u51fd\u6570\u8c03\u7528\uff0c\u800c\u4e0d\u4f1a\u6267\u884c\u5176\u540e\u7684\u521d\u59cb\u5316\u8868\u8fbe\u5f0f\u3002\u53ea\u6709\u5728\u751f\u6210\u5bf9\u8c61\u65f6\uff0c\u521d\u59cb\u5316\u8868\u8fbe\u5f0f\u624d\u4f1a\u968f\u76f8\u5e94\u7684\u6784\u9020\u51fd\u6570\u4e00\u8d77\u8c03\u7528\u3002", "9. C++\u4e2d\u7684\u7a7a\u7c7b\uff0c\u9ed8\u8ba4\u4ea7\u751f\u54ea\u4e9b\u7c7b\u6210\u5458\u51fd\u6570\uff1f", "\n\u7b54\uff1a", "\nclass Empty", "\n{", "\npublic:", "\nEmpty(); // \u7f3a\u7701\u6784\u9020\u51fd\u6570", "\nEmpty( const Empty& ); // \u62f7\u8d1d\u6784\u9020\u51fd\u6570", "\n~Empty(); // \u6790\u6784\u51fd\u6570", "\nEmpty& operator=( const Empty& ); // \u8d4b\u503c\u8fd0\u7b97\u7b26", "\nEmpty* operator&(); // \u53d6\u5740\u8fd0\u7b97\u7b26", "\nconst Empty* operator&() const; // \u53d6\u5740\u8fd0\u7b97\u7b26 const", "\n};", "10. \u4ee5\u4e0b\u4e24\u6761\u8f93\u51fa\u8bed\u53e5\u5206\u522b\u8f93\u51fa\u4ec0\u4e48\uff1f", "\nfloat a = 1.0f;", "\ncout \ncout \ncout \nfloat b = 0.0f;", "\ncout \ncout \ncout \n\u7b54\uff1a\u5206\u522b\u8f93\u51fafalse\u548ctrue\u3002\u6ce8\u610f\u8f6c\u6362\u7684\u5e94\u7528\u3002(int)a\u5b9e\u9645\u4e0a\u662f\u4ee5\u6d6e\u70b9\u6570a\u4e3a\u53c2\u6570\u6784\u9020\u4e86\u4e00\u4e2a\u6574\u578b\u6570\uff0c\u8be5\u6574\u6570\u7684\u503c\u662f1\uff0c(int&)a\u5219\u662f\u544a\u8bc9\u7f16\u8bd1\u5668\u5c06a\u5f53\u4f5c\u6574\u6570\u770b\uff08\u5e76\u6ca1\u6709\u505a\u4efb\u4f55\u5b9e\u8d28\u4e0a\u7684\u8f6c\u6362\uff09\u3002\u56e0\u4e3a1\u4ee5\u6574\u6570\u5f62\u5f0f\u5b58\u653e\u548c\u4ee5\u6d6e\u70b9\u5f62\u5f0f\u5b58\u653e\u5176\u5185\u5b58\u6570\u636e\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u56e0\u6b64\u4e24\u8005\u4e0d\u7b49\u3002\u5bf9b\u7684\u4e24\u79cd\u8f6c\u6362\u610f\u4e49\u540c\u4e0a\uff0c\u4f46\u662f0\u7684\u6574\u6570\u5f62\u5f0f\u548c\u6d6e\u70b9\u5f62\u5f0f\u5176\u5185\u5b58\u6570\u636e\u662f\u4e00\u6837\u7684\uff0c\u56e0\u6b64\u5728\u8fd9\u79cd\u7279\u6b8a\u60c5\u5f62\u4e0b\uff0c\u4e24\u8005\u76f8\u7b49\uff08\u4ec5\u4ec5\u5728\u6570\u503c\u610f\u4e49\u4e0a\uff09\u3002", "\n\u6ce8\u610f\uff0c\u7a0b\u5e8f\u7684\u8f93\u51fa\u4f1a\u663e\u793a(int&)a=1065353216\uff0c\u8fd9\u4e2a\u503c\u662f\u600e\u4e48\u6765\u7684\u5462\uff1f\u524d\u9762\u5df2\u7ecf\u8bf4\u4e86\uff0c1\u4ee5\u6d6e\u70b9\u6570\u5f62\u5f0f\u5b58\u653e\u5728\u5185\u5b58\u4e2d\uff0c\u6309ieee754\u89c4\u5b9a\uff0c\u5176\u5185\u5bb9\u4e3a0x0000803F\uff08\u5df2\u8003\u8651\u5b57\u8282\u53cd\u5e8f\uff09\u3002\u8fd9\u4e5f\u5c31\u662fa\u8fd9\u4e2a\u53d8\u91cf\u6240\u5360\u636e\u7684\u5185\u5b58\u5355\u5143\u7684\u503c\u3002\u5f53(int&)a\u51fa\u73b0\u65f6\uff0c\u5b83\u76f8\u5f53\u4e8e\u544a\u8bc9\u5b83\u7684\u4e0a\u4e0b\u6587\uff1a\u201c\u628a\u8fd9\u5757\u5730\u5740\u5f53\u505a\u6574\u6570\u770b\u5f85\uff01\u4e0d\u8981\u7ba1\u5b83\u539f\u6765\u662f\u4ec0\u4e48\u3002\u201d\u8fd9\u6837\uff0c\u5185\u5bb90x0000803F\u6309\u6574\u6570\u89e3\u91ca\uff0c\u5176\u503c\u6b63\u597d\u5c31\u662f1065353216\uff08\u5341\u8fdb\u5236\u6570\uff09\u3002", "\n\u901a\u8fc7\u67e5\u770b\u6c47\u7f16\u4ee3\u7801\u53ef\u4ee5\u8bc1\u5b9e\u201c(int)a\u76f8\u5f53\u4e8e\u91cd\u65b0\u6784\u9020\u4e86\u4e00\u4e2a\u503c\u7b49\u4e8ea\u7684\u6574\u578b\u6570\u201d\u4e4b\u8bf4\uff0c\u800c(int&)\u7684\u4f5c\u7528\u5219\u4ec5\u4ec5\u662f\u8868\u8fbe\u4e86\u4e00\u4e2a\u7c7b\u578b\u4fe1\u606f\uff0c\u610f\u4e49\u5728\u4e8e\u4e3acout\n", "11. \u4ee5\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1f", "\ntypedef vector IntArray;", "\nIntArray array;", "\narray.push_back( 1 );", "\narray.push_back( 2 );", "\narray.push_back( 2 );", "\narray.push_back( 3 );", "\n// \u5220\u9664array\u6570\u7ec4\u4e2d\u6240\u6709\u76842", "\nfor( IntArray::iterator itor=array.begin(); itor!=array.end(); ++itor )", "\n{", "\nif( 2 == *itor ) array.erase( itor );", "\n}", "\n\u7b54\uff1a\u540c\u6837\u6709\u7f3a\u5c11\u7c7b\u578b\u53c2\u6570\u7684\u95ee\u9898\u3002\u53e6\u5916\uff0c\u6bcf\u6b21\u8c03\u7528\u201carray.erase( itor );\u201d\uff0c\u88ab\u5220\u9664\u5143\u7d20\u4e4b\u540e\u7684\u5185\u5bb9\u4f1a\u81ea\u52a8\u5f80\u524d\u79fb\uff0c\u5bfc\u81f4\u8fed\u4ee3\u6f0f\u9879\uff0c\u5e94\u5728\u5220\u9664\u4e00\u9879\u540e\u4f7fitor--\uff0c\u4f7f\u4e4b\u4ece\u5df2\u7ecf\u524d\u79fb\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\u8d77\u7ee7\u7eed\u904d\u5386\u3002", "\n12. \u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u5b8c\u6210\u5185\u5b58\u4e4b\u95f4\u7684\u62f7\u8d1d\u3002[\u8003\u8651\u95ee\u9898\u662f\u5426\u5168\u9762]", "\n\u7b54\uff1a", "\nvoid* mymemcpy( void *dest, const void *src, size_t count )", "\n{", "\nchar* pdest = static_cast( dest );", "\nconst char* psrc = static_cast( src );", "\nif( pdest>psrc && pdest{", "\nfor( size_t i=count-1; i!=-1; \u2013i )", "\npdest[i] = psrc[i];", "\n}", "\nelse", "\n{", "\nfor( size_t i=0; ipdest[i] = psrc[i];", "\n}", "\nreturn dest;", "\n}"], "title": "\u4e1c\u8f6fC_C++\u7b14\u8bd5"},
{"contents": ["1\u3001\u5c40\u90e8\u53d8\u91cf\u80fd\u5426\u548c\u5168\u5c40\u53d8\u91cf\u91cd\u540d\uff1f \u3000", "\u3000\u7b54\uff1a\u80fd\uff0c\u5c40\u90e8\u4f1a\u5c4f\u853d\u5168\u5c40\u3002\u8981\u7528\u5168\u5c40\u53d8\u91cf\uff0c\u9700\u8981\u4f7f\u7528\u201d::\u201d ;\u5c40\u90e8\u53d8\u91cf\u53ef\u4ee5\u4e0e\u5168\u5c40\u53d8\u91cf\u540c\u540d\uff0c\u5728\u51fd\u6570\u5185\u5f15\u7528\u8fd9\u4e2a\u53d8\u91cf\u65f6\uff0c\u4f1a\u7528\u5230\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u800c\u4e0d\u4f1a\u7528\u5230\u5168\u5c40\u53d8\u91cf\u3002\u5bf9\u4e8e\u6709\u4e9b\u7f16\u8bd1\u5668\u800c\u8a00\uff0c\u5728\u540c\u4e00\u4e2a\u51fd\u6570\u5185\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u6bd4\u5982\u5728\u4e24\u4e2a\u5faa\u73af\u4f53\u5185\u90fd\u5b9a\u4e49\u4e00\u4e2a\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u800c\u90a3\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u5c31\u5728\u90a3\u4e2a\u5faa\u73af\u4f53\u5185\u3002", " \u3000\u3000 ", "2\u3001\u5982\u4f55\u5f15\u7528\u4e00\u4e2a\u5df2\u7ecf\u5b9a\u4e49\u8fc7\u7684\u5168\u5c40\u53d8\u91cf\uff1f \u3000\u3000", "\u7b54\uff1aextern \u3000\u53ef\u4ee5\u7528\u5f15\u7528\u5934\u6587\u4ef6\u7684\u65b9\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u7528extern\u5173\u952e\u5b57\uff0c\u5982\u679c\u7528\u5f15\u7528\u5934\u6587\u4ef6\u65b9\u5f0f\u6765\u5f15\u7528\u67d0\u4e2a\u5728\u5934\u6587\u4ef6\u4e2d\u58f0\u660e\u7684\u5168\u5c40\u53d8\u7406\uff0c\u5047\u5b9a\u4f60\u5c06\u90a3\u4e2a\u7f16\u5199\u9519\u4e86\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4\u4f1a\u62a5\u9519\uff0c\u5982\u679c\u4f60\u7528extern\u65b9\u5f0f\u5f15\u7528\u65f6\uff0c\u5047\u5b9a\u4f60\u72af\u4e86\u540c\u6837\u7684\u9519\u8bef\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4\u4e0d\u4f1a\u62a5\u9519\uff0c\u800c\u5728\u8fde\u63a5\u671f\u95f4\u62a5\u9519\u3002 ", "\u3000\u3000", "3\u3001\u5168\u5c40\u53d8\u91cf\u53ef\u4e0d\u53ef\u4ee5\u5b9a\u4e49\u5728\u53ef\u88ab\u591a\u4e2a.C\u6587\u4ef6\u5305\u542b\u7684\u5934\u6587\u4ef6\u4e2d\uff1f\u4e3a\u4ec0\u4e48\uff1f \u3000\u3000", "\u7b54\uff1a\u53ef\u4ee5\uff0c\u5728\u4e0d\u540c\u7684C\u6587\u4ef6\u4e2d\u4ee5static\u5f62\u5f0f\u6765\u58f0\u660e\u540c\u540d\u5168\u5c40\u53d8\u91cf\u3002 \u3000\u3000\u53ef\u4ee5\u5728\u4e0d\u540c\u7684C\u6587\u4ef6\u4e2d\u58f0\u660e\u540c\u540d\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u524d\u63d0\u662f\u5176\u4e2d\u53ea\u80fd\u6709\u4e00\u4e2aC\u6587\u4ef6\u4e2d\u5bf9\u6b64\u53d8\u91cf\u8d4b\u521d\u503c\uff0c\u6b64\u65f6\u8fde\u63a5\u4e0d\u4f1a\u51fa\u9519. \u3000 \u3000 ", "4\u3001\u8bf7\u5199\u51fa\u4e0b\u5217\u4ee3\u7801\u7684\u8f93\u51fa\u5185\u5bb9 \u3000\u3000", "#include  ", "int main(void) \u3000\u3000", "{ \u3000\u3000\u3000", "int a,b,c,d; ", "\u3000\u3000a=10; \u3000", "\u3000\u3000b=a++; \u3000", "\u3000\u3000c=++a; \u3000\u3000", "\u3000 d=10*a++; \u3000", "\u3000\u3000printf(\u201cb\uff0cc\uff0cd\uff1a%d\uff0c%d\uff0c%d\u201d\uff0cb\uff0cc\uff0cd\uff09; \u3000", "\u3000\u3000return 0; \u3000", "\u3000} \u3000\u3000", "\u7b54\uff1a10\uff0c12\uff0c120 \u3000", "\u3000", "5\u3001static\u5168\u5c40\u53d8\u91cf\u4e0e\u666e\u901a\u7684\u5168\u5c40\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1fstatic\u5c40\u90e8\u53d8\u91cf\u548c\u666e\u901a\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1fstatic\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u6709\u4ec0\u4e48\u533a\u522b\uff1f \u3000\u3000", "\u7b54: 1) \u5168\u5c40\u53d8\u91cf(\u5916\u90e8\u53d8\u91cf)\u7684\u8bf4\u660e\u4e4b\u524d\u518d\u51a0\u4ee5static \u5c31\u6784\u6210\u4e86\u9759\u6001\u7684\u5168\u5c40\u53d8\u91cf\u3002\u5168\u5c40\u53d8\u91cf\u672c\u8eab\u5c31\u662f\u9759\u6001\u5b58\u50a8\u65b9\u5f0f\uff0c \u9759\u6001\u5168\u5c40\u53d8\u91cf\u5f53\u7136\u4e5f\u662f\u9759\u6001\u5b58\u50a8\u65b9\u5f0f\u3002 \u8fd9\u4e24\u8005\u5728\u5b58\u50a8\u65b9\u5f0f\u4e0a\u5e76\u65e0\u4e0d\u540c\u3002\u8fd9\u4e24\u8005\u7684\u533a\u522b\u5728\u4e8e\u975e\u9759\u6001\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u662f\u6574\u4e2a\u6e90\u7a0b\u5e8f\uff0c \u5f53\u4e00\u4e2a\u6e90\u7a0b\u5e8f\u7531\u591a\u4e2a\u6e90\u6587\u4ef6\u7ec4\u6210\u65f6\uff0c\u975e\u9759\u6001\u7684\u5168\u5c40\u53d8\u91cf\u5728\u5404\u4e2a\u6e90\u6587\u4ef6\u4e2d\u90fd\u662f\u6709\u6548\u7684\u3002 \u800c\u9759\u6001\u5168\u5c40\u53d8\u91cf\u5219\u9650\u5236\u4e86\u5176\u4f5c\u7528\u57df\uff0c \u5373\u53ea\u5728\u5b9a\u4e49\u8be5\u53d8\u91cf\u7684\u6e90\u6587\u4ef6\u5185\u6709\u6548\uff0c \u5728\u540c\u4e00\u6e90\u7a0b\u5e8f\u7684\u5176\u5b83\u6e90\u6587\u4ef6\u4e2d\u4e0d\u80fd\u4f7f\u7528\u5b83\u3002\u7531\u4e8e\u9759\u6001\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u5c40\u9650\u4e8e\u4e00\u4e2a\u6e90\u6587\u4ef6\u5185\uff0c\u53ea\u80fd\u4e3a\u8be5\u6e90\u6587\u4ef6\u5185\u7684\u51fd\u6570\u516c\u7528\uff0c \u56e0\u6b64\u53ef\u4ee5\u907f\u514d\u5728\u5176\u5b83\u6e90\u6587\u4ef6\u4e2d\u5f15\u8d77\u9519\u8bef\u3002 \u3000\u3000", "2) \u4ece\u4ee5\u4e0a\u5206\u6790\u53ef\u4ee5\u770b\u51fa\uff0c \u628a\u5c40\u90e8\u53d8\u91cf\u6539\u53d8\u4e3a\u9759\u6001\u53d8\u91cf\u540e\u662f\u6539\u53d8\u4e86\u5b83\u7684\u5b58\u50a8\u65b9\u5f0f\u5373\u6539\u53d8\u4e86\u5b83\u7684\u751f\u5b58\u671f\u3002\u628a\u5168\u5c40\u53d8\u91cf\u6539\u53d8\u4e3a\u9759\u6001\u53d8\u91cf\u540e\u662f\u6539\u53d8\u4e86\u5b83\u7684\u4f5c\u7528\u57df\uff0c\u9650\u5236\u4e86\u5b83\u7684\u4f7f\u7528\u8303\u56f4\u3002\u3000\u3000                  3) static\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u4f5c\u7528\u57df\u4e0d\u540c,\u4ec5\u5728\u672c\u6587\u4ef6\u3002\u53ea\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4e2d\u4f7f\u7528\u7684\u51fd\u6570\u5e94\u8be5\u8bf4\u660e\u4e3a\u5185\u90e8\u51fd\u6570(static)\uff0c\u5185\u90e8\u51fd\u6570\u5e94\u8be5\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4e2d\u8bf4\u660e\u548c\u5b9a\u4e49\u3002\u5bf9\u4e8e\u53ef\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4ee5\u5916\u4f7f\u7528\u7684\u51fd\u6570\uff0c\u5e94\u8be5\u5728\u4e00\u4e2a\u5934\u6587\u4ef6\u4e2d\u8bf4\u660e\uff0c\u8981\u4f7f\u7528\u8fd9\u4e9b\u51fd\u6570\u7684\u6e90\u6587\u4ef6\u8981\u5305\u542b\u8fd9\u4e2a\u5934\u6587\u4ef6 \u3000\u3000", "\u7efc\u4e0a\u6240\u8ff0:", "static\u5168\u5c40\u53d8\u91cf\u4e0e\u666e\u901a\u7684\u5168\u5c40\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1a", "static\u5168\u5c40\u53d8\u91cf\u53ea\u521d\u4f7f\u5316\u4e00\u6b21\uff0c\u9632\u6b62\u5728\u5176\u4ed6\u6587\u4ef6\u5355\u5143\u4e2d\u88ab\u5f15\u7528; \u3000\u3000", "static\u5c40\u90e8\u53d8\u91cf\u548c\u666e\u901a\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1a", "static\u5c40\u90e8\u53d8\u91cf\u53ea\u88ab\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u4e0b\u4e00\u6b21\u4f9d\u636e\u4e0a\u4e00\u6b21\u7ed3\u679c\u503c\uff1b \u3000\u3000", "static\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u6709\u4ec0\u4e48\u533a\u522b\uff1a", "static\u51fd\u6570\u5728\u5185\u5b58\u4e2d\u53ea\u6709\u4e00\u4efd\uff0c\u666e\u901a\u51fd\u6570\u5728\u6bcf\u4e2a\u88ab\u8c03\u7528\u4e2d\u7ef4\u6301\u4e00\u4efd\u62f7\u8d1d", "\u3000\u3000", "6\u3001\u7a0b\u5e8f\u7684\u5c40\u90e8\u53d8\u91cf\u5b58\u5728\u4e8e\uff08\u5806\u6808\uff09\u4e2d\uff0c\u5168\u5c40\u53d8\u91cf\u5b58\u5728\u4e8e\uff08\u9759\u6001\u533a \uff09\u4e2d\uff0c\u52a8\u6001\u7533\u8bf7\u6570\u636e\u5b58\u5728\u4e8e\uff08 \u5806\uff09\u4e2d\u3002 \u3000\u3000", "7\u3001\u8bbe\u6709\u4ee5\u4e0b\u8bf4\u660e\u548c\u5b9a\u4e49\uff1a \u3000", "\u3000 typedef union ", "{", "long i; ", "int k[5];", " char c;", "} DATE; \u3000", "\u3000struct data", " {", "   int cat;", "   DATE cow; ", "double dog;", "} too; \u3000", "\u3000DATE max; \u3000\u3000", "\u5219\u8bed\u53e5 printf(\u201c%d\u201d,sizeof(struct data)+sizeof(max));\u7684\u6267\u884c\u7ed3\u679c\u662f\uff1a___52____ ", "\u8003\u70b9:\u533a\u522bstruct\u4e0eunion.(\u4e00\u822c\u5047\u5b9a\u572832\u4f4d\u673a\u5668\u4e0a)\u3000\u3000", "\u7b54\uff1aDATE\u662f\u4e00\u4e2aunion, \u53d8\u91cf\u516c\u7528\u7a7a\u95f4. \u91cc\u9762\u6700\u5927\u7684\u53d8\u91cf\u7c7b\u578b\u662fint[5], \u5360\u752820\u4e2a\u5b57\u8282. \u6240\u4ee5\u5b83\u7684\u5927\u5c0f\u662f20. data\u662f\u4e00\u4e2astruct, \u6bcf\u4e2a\u53d8\u91cf\u5206\u5f00\u5360\u7528\u7a7a\u95f4. \u4f9d\u6b21\u4e3aint4 + DATE20 + double8 = 32. \u6240\u4ee5\u7ed3\u679c\u662f 20 + 32 = 52. \u5f53\u7136\u2026\u5728\u67d0\u4e9b16\u4f4d\u7f16\u8f91\u5668\u4e0b, int\u53ef\u80fd\u662f2\u5b57\u8282,\u90a3\u4e48\u7ed3\u679c\u662f int2 + DATE10 + double8 = 20 ", "\u3000\u3000", "8\u3001\u961f\u5217\u548c\u6808\u6709\u4ec0\u4e48\u533a\u522b\uff1f", " \u3000\u3000 \u3000\u3000\u961f\u5217\u5148\u8fdb\u5148\u51fa\uff0c\u6808\u540e\u8fdb\u5148\u51fa \u3000\u3000", "9\u3001\u5199\u51fa\u4e0b\u5217\u4ee3\u7801\u7684\u8f93\u51fa\u5185\u5bb9 \u3000\u3000", "#include ", "int inc(int a) \u3000\u3000", " { return(++a); } \u3000\u3000", " int multi(int*a,int*b,int*c) \u3000\u3000", " { \u3000 return(*c=*a**b); } \u3000", "typedef int(FUNC1)(int in); \u3000\u3000", " typedef int(FUNC2) (int*,int*,int*); \u3000", "\u3000 void show(FUNC2 fun,int arg1, int*arg2) \u3000", "\u3000 { \u3000\u3000\u3000", "  FUNC1 p=&inc; \u3000\u3000", "\u3000 int temp =p(arg1); \u3000\u3000", "\u3000 fun(&temp,&arg1, arg2); \u3000\u3000", "\u3000 printf(\u201c%dn\u201d,*arg2); \u3000\u3000", " } \u3000\u3000", " main() \u3000\u3000", " { \u3000\u3000", "\u3000 int a; \u3000\u3000       //\u5c40\u90e8\u53d8\u91cfa\u4e3a0;", "\u3000 show(multi,10,&a); \u3000\u3000\u3000", " return 0; ", "\u3000\u3000 } \u3000", "\u3000\u7b54\uff1a110 \u3000", "\u3000 ", "10\u3001\u8bf7\u627e\u51fa\u4e0b\u9762\u4ee3\u7801\u4e2d\u7684\u6240\u6709\u9519\u8bef (\u9898\u76ee\u4e0d\u9519,\u503c\u5f97\u4e00\u770b)\u3000\u3000", "\u8bf4\u660e\uff1a\u4ee5\u4e0b\u4ee3\u7801\u662f\u628a\u4e00\u4e2a\u5b57\u7b26\u4e32\u5012\u5e8f\uff0c\u5982\u201cabcd\u201d\u5012\u5e8f\u540e\u53d8\u4e3a\u201cdcba\u201d \u3000\u3000 ", "#include\u201dstring.h\u201d \u3000\u3000 ", "main() \u3000\u3000 ", "{ \u3000\u3000 ", "char*src=\u201dhello,world\u201d; \u3000\u3000 ", "char* dest=NULL; \u3000\u3000 ", "int len=strlen(src); \u3000\u3000 ", "dest=(char*)malloc(len); \u3000\u3000   ", "char* d=dest; \u3000\u3000 ", "char* s=src[len]; \u3000         ", "while(len\u2013!=0) \u3000\u3000 ", "d++=s\u2013; \u3000\u3000       ", "printf(\u201c%s\u201d,dest); \u3000\u3000", "return 0; \u3000\u3000 ", "} \u3000\u3000 ", "\u7b54\uff1a \u3000\u3000", "\u65b9\u6cd51\uff1a\u4e00\u5171\u67094\u4e2a\u9519\u8bef; \u3000\u3000 ", "int main() \u3000\u3000", "{ \u3000\u3000", "\u3000char* src = \u201chello,world\u201d; \u3000\u3000", "\u3000int len = strlen(src); \u3000\u3000", "\u3000char* dest = (char*)malloc(len+1);//\u8981\u4e3a\u5206\u914d\u4e00\u4e2a\u7a7a\u95f4 \u3000\u3000\u3000char* d = dest; \u3000\u3000", "\u3000char* s = &src[len-1];          //\u6307\u5411\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u3000\u3000", "\u3000while( len\u2013 != 0 ) \u3000\u3000", "\u3000 *d++=*s\u2013; \u3000\u3000", "\u3000*d = 0;           //\u5c3e\u90e8\u8981\u52a0\u2019\\0\u2019 \u3000\u3000", "\u3000printf(\u201c%sn\u201d,dest); \u3000\u3000\u3000", "free(dest);        // \u4f7f\u7528\u5b8c\uff0c\u5e94\u5f53\u91ca\u653e\u7a7a\u95f4\uff0c\u4ee5\u514d\u9020\u6210\u5185\u5b58\u6c47\u6cc4\u9732 ", "dest = NULL;\u3000\u3000 //\u9632\u6b62\u4ea7\u751f\u91ce\u6307\u9488\u3000", "return 0; \u3000", "\u3000} ", "\u65b9\u6cd52\uff1a (\u65b9\u6cd5\u4e00\u9700\u8981\u989d\u5916\u7684\u5b58\u50a8\u7a7a\u95f4,\u6548\u7387\u4e0d\u9ad8.)\u3000\u4e0d\u9519\u7684\u60f3\u6cd5", "#include ", "#include ", "main()", "{", "char str[]=\u201dhello,world\u201d;", "int len=strlen(str);", "char t;", "for(int i=0; i"], "title": "\u5d4c\u5165\u5f0f C\u8bed\u8a00 C++\u7ecf\u5178\u9762\u8bd5\u9898\u5927\u5168 \u7b14\u8bd5\u6740\u624b"},
{"contents": ["\u82f1\u534e\u8fbe", "\n\u5730    \u5740\uff1a \u897f\u5b89\u5e02\u9ad8\u65b0\u6280\u672f\u5f00\u53d1\u533a\u5510\u5174\u8def6\u53f7\u5510\u5174\u6570\u7801\u5927\u53a6\u4e09\u5c42", "\n\u7535    \u8bdd\uff1a (029)88452419", "\n4. static\u6709\u4ec0\u4e48\u7528\u9014\uff1f\uff08\u8bf7\u81f3\u5c11\u8bf4\u660e\u4e24\u79cd\uff09", "\n1.\u9650\u5236\u53d8\u91cf\u7684\u4f5c\u7528\u57df", "\n2.\u8bbe\u7f6e\u53d8\u91cf\u7684\u5b58\u50a8\u57df", "\n7. \u5f15\u7528\u4e0e\u6307\u9488\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n1) \u5f15\u7528\u5fc5\u987b\u88ab\u521d\u59cb\u5316\uff0c\u6307\u9488\u4e0d\u5fc5\u3002", "\n2) \u5f15\u7528\u521d\u59cb\u5316\u4ee5\u540e\u4e0d\u80fd\u88ab\u6539\u53d8\uff0c\u6307\u9488\u53ef\u4ee5\u6539\u53d8\u6240\u6307\u7684\u5bf9\u8c61\u3002", "\n2) \u4e0d\u5b58\u5728\u6307\u5411\u7a7a\u503c\u7684\u5f15\u7528\uff0c\u4f46\u662f\u5b58\u5728\u6307\u5411\u7a7a\u503c\u7684\u6307\u9488\u3002", "\n8. \u63cf\u8ff0\u5b9e\u65f6\u7cfb\u7edf\u7684\u57fa\u672c\u7279\u6027", "\n\u5728\u7279\u5b9a\u65f6\u95f4\u5185\u5b8c\u6210\u7279\u5b9a\u7684\u4efb\u52a1\uff0c\u5b9e\u65f6\u6027\u4e0e\u53ef\u9760\u6027", "\n9. \u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u5728\u5185\u5b58\u4e2d\u662f\u5426\u6709\u533a\u522b\uff1f\u5982\u679c\u6709\uff0c\u662f\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u5168\u5c40\u53d8\u91cf\u50a8\u5b58\u5728\u9759\u6001\u6570\u636e\u5e93\uff0c\u5c40\u90e8\u53d8\u91cf\u5728\u5806\u6808", "\n10. \u4ec0\u4e48\u662f\u5e73\u8861\u4e8c\u53c9\u6811\uff1f", "\n\u5de6\u53f3\u5b50\u6811\u90fd\u662f\u5e73\u8861\u4e8c\u53c9\u6811 \u4e14\u5de6\u53f3\u5b50\u6811\u7684\u6df1\u5ea6\u5dee\u503c\u7684\u7edd\u5bf9\u503c\u4e0d\u5927\u4e8e1", "\n11. \u5806\u6808\u6ea2\u51fa\u4e00\u822c\u662f\u7531\u4ec0\u4e48\u539f\u56e0\u5bfc\u81f4\u7684\uff1f", "\n\u6ca1\u6709\u56de\u6536\u5783\u573e\u8d44\u6e90", "\n12. \u4ec0\u4e48\u51fd\u6570\u4e0d\u80fd\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff1f", "\nconstructor", "\n13. \u5192\u6ce1\u6392\u5e8f\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u4ec0\u4e48\uff1f", "\nO(n^2)", "\n14. \u5199\u51fafloat x \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684if\u8bed\u53e5\u3002", "\nif(x>0.000001&&x\n16. Internet\u91c7\u7528\u54ea\u79cd\u7f51\u7edc\u534f\u8bae\uff1f\u8be5\u534f\u8bae\u7684\u4e3b\u8981\u5c42\u6b21\u7ed3\u6784\uff1f", "\ntcp/ip \u5e94\u7528\u5c42/\u4f20\u8f93\u5c42/\u7f51\u7edc\u5c42/\u6570\u636e\u94fe\u8def\u5c42/\u7269\u7406\u5c42", "\n17. Internet\u7269\u7406\u5730\u5740\u548cIP\u5730\u5740\u8f6c\u6362\u91c7\u7528\u4ec0\u4e48\u534f\u8bae\uff1f", "\nARP (Address Resolution Protocol)\uff08\u5730\u5740\u89e3\u6790\u5354\u8b70\uff09", "\n18.IP\u5730\u5740\u7684\u7f16\u7801\u5206\u4e3a\u54ea\u4fe9\u90e8\u5206\uff1f", "\nIP\u5730\u5740\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff0c\u7f51\u7edc\u53f7\u548c\u4e3b\u673a\u53f7\u3002\u4e0d\u8fc7\u662f\u8981\u548c\u201c\u5b50\u7f51\u63a9\u7801\u201d\u6309\u4f4d\u4e0e\u4e0a\u4e4b\u540e\u624d\u80fd\u533a\u5206\u54ea\u4e9b\u662f\u7f51\u7edc\u4f4d\u54ea\u4e9b\u662f\u4e3b\u673a\u4f4d\u3002", "\n2.\u7528\u6237\u8f93\u5165M,N\u503c\uff0c\u4ece1\u81f3N\u5f00\u59cb\u987a\u5e8f\u5faa\u73af\u6570\u6570\uff0c\u6bcf\u6570\u5230M\u8f93\u51fa\u8be5\u6570\u503c\uff0c\u76f4\u81f3\u5168\u90e8\u8f93\u51fa\u3002\u5199\u51faC\u7a0b\u5e8f\u3002", "\n\u5faa\u73af\u94fe\u8868\uff0c\u7528\u53d6\u4f59\u64cd\u4f5c\u505a", "\n3.\u4e0d\u80fd\u505aswitch()\u7684\u53c2\u6570\u7c7b\u578b\u662f\uff1a", "\nswitch\u7684\u53c2\u6570\u4e0d\u80fd\u4e3a\u5b9e\u578b\u3002", "\n\u83ef\u70ba", "\n1\u3001\u5c40\u90e8\u53d8\u91cf\u80fd\u5426\u548c\u5168\u5c40\u53d8\u91cf\u91cd\u540d\uff1f", "\n\u7b54\uff1a\u80fd\uff0c\u5c40\u90e8\u4f1a\u5c4f\u853d\u5168\u5c40\u3002\u8981\u7528\u5168\u5c40\u53d8\u91cf\uff0c\u9700\u8981\u4f7f\u7528\"::\"", "\n\u5c40\u90e8\u53d8\u91cf\u53ef\u4ee5\u4e0e\u5168\u5c40\u53d8\u91cf\u540c\u540d\uff0c\u5728\u51fd\u6570\u5185\u5f15\u7528\u8fd9\u4e2a\u53d8\u91cf\u65f6\uff0c\u4f1a\u7528\u5230\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u800c\u4e0d\u4f1a\u7528\u5230\u5168\u5c40\u53d8\u91cf\u3002\u5bf9\u4e8e\u6709\u4e9b\u7f16\u8bd1\u5668\u800c\u8a00\uff0c\u5728\u540c\u4e00\u4e2a\u51fd\u6570\u5185\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u6bd4\u5982\u5728\u4e24\u4e2a\u5faa\u73af\u4f53\u5185\u90fd\u5b9a\u4e49\u4e00\u4e2a\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u800c\u90a3\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u5c31\u5728\u90a3\u4e2a\u5faa\u73af\u4f53\u5185", "\n2\u3001\u5982\u4f55\u5f15\u7528\u4e00\u4e2a\u5df2\u7ecf\u5b9a\u4e49\u8fc7\u7684\u5168\u5c40\u53d8\u91cf\uff1f", "\n\u7b54\uff1aextern", "\n\u53ef\u4ee5\u7528\u5f15\u7528\u5934\u6587\u4ef6\u7684\u65b9\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u7528extern\u5173\u952e\u5b57\uff0c\u5982\u679c\u7528\u5f15\u7528\u5934\u6587\u4ef6\u65b9\u5f0f\u6765\u5f15\u7528\u67d0\u4e2a\u5728\u5934\u6587\u4ef6\u4e2d\u58f0\u660e\u7684\u5168\u5c40\u53d8\u7406\uff0c\u5047\u5b9a\u4f60\u5c06\u90a3\u4e2a\u53d8\u5199\u9519\u4e86\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4\u4f1a\u62a5\u9519\uff0c\u5982\u679c\u4f60\u7528extern\u65b9\u5f0f\u5f15\u7528\u65f6\uff0c\u5047\u5b9a\u4f60\u72af\u4e86\u540c\u6837\u7684\u9519\u8bef\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4\u4e0d\u4f1a\u62a5\u9519\uff0c\u800c\u5728\u8fde\u63a5\u671f\u95f4\u62a5\u9519", "\n3\u3001\u5168\u5c40\u53d8\u91cf\u53ef\u4e0d\u53ef\u4ee5\u5b9a\u4e49\u5728\u53ef\u88ab\u591a\u4e2a.C\u6587\u4ef6\u5305\u542b\u7684\u5934\u6587\u4ef6\u4e2d\uff1f\u4e3a\u4ec0\u4e48\uff1f", "\n\u7b54\uff1a\u53ef\u4ee5\uff0c\u5728\u4e0d\u540c\u7684C\u6587\u4ef6\u4e2d\u4ee5static\u5f62\u5f0f\u6765\u58f0\u660e\u540c\u540d\u5168\u5c40\u53d8\u91cf\u3002", "\n\u53ef\u4ee5\u5728\u4e0d\u540c\u7684C\u6587\u4ef6\u4e2d\u58f0\u660e\u540c\u540d\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u524d\u63d0\u662f\u5176\u4e2d\u53ea\u80fd\u6709\u4e00\u4e2aC\u6587\u4ef6\u4e2d\u5bf9\u6b64\u53d8\u91cf\u8d4b\u521d\u503c\uff0c\u6b64\u65f6\u8fde\u63a5\u4e0d\u4f1a\u51fa\u9519", "\n4\u3001\u8bed\u53e5for( \uff1b1 \uff1b)\u6709\u4ec0\u4e48\u95ee\u9898\uff1f\u5b83\u662f\u4ec0\u4e48\u610f\u601d\uff1f", "\n\u7b54\uff1a\u548cwhile(1)\u76f8\u540c\u3002", "\n5\u3001do\u2026\u2026while\u548cwhile\u2026\u2026do\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u7b54\uff1a\u524d\u4e00\u4e2a\u5faa\u73af\u4e00\u904d\u518d\u5224\u65ad\uff0c\u540e\u4e00\u4e2a\u5224\u65ad\u4ee5\u540e\u518d\u5faa\u73af", "\n6\u3001\u8bf7\u5199\u51fa\u4e0b\u5217\u4ee3\u7801\u7684\u8f93\u51fa\u5185\u5bb9", "\n#include", "\nmain()", "\n{", "\nint a,b,c,d;", "\na=10;", "\nb=a++;", "\nc=++a;", "\nd=10*a++;", "\nprintf(\"b\uff0cc\uff0cd\uff1a%d\uff0c%d\uff0c%d\"\uff0cb\uff0cc\uff0cd\uff09;", "\nreturn 0;", "\n}", "\n\u7b54\uff1a10\uff0c12\uff0c120", "1\u3001static\u5168\u5c40\u53d8\u91cf\u4e0e\u666e\u901a\u7684\u5168\u5c40\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1fstatic\u5c40\u90e8\u53d8\u91cf\u548c\u666e\u901a\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1fstatic\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u5168\u5c40\u53d8\u91cf(\u5916\u90e8\u53d8\u91cf)\u7684\u8bf4\u660e\u4e4b\u524d\u518d\u51a0\u4ee5static \u5c31\u6784\u6210\u4e86\u9759\u6001\u7684\u5168\u5c40\u53d8\u91cf\u3002\u5168\u5c40\u53d8\u91cf\u672c\u8eab\u5c31\u662f\u9759\u6001\u5b58\u50a8\u65b9\u5f0f\uff0c \u9759\u6001\u5168\u5c40\u53d8\u91cf\u5f53\u7136\u4e5f\u662f\u9759\u6001\u5b58\u50a8\u65b9\u5f0f\u3002\u8fd9\u4e24\u8005\u5728\u5b58\u50a8\u65b9\u5f0f\u4e0a\u5e76\u65e0\u4e0d\u540c\u3002\u8fd9\u4e24\u8005\u7684\u533a\u522b\u867d\u5728\u4e8e\u975e\u9759\u6001\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u662f\u6574\u4e2a\u6e90\u7a0b\u5e8f\uff0c\u5f53\u4e00\u4e2a\u6e90\u7a0b\u5e8f\u7531\u591a\u4e2a\u6e90\u6587\u4ef6\u7ec4\u6210\u65f6\uff0c\u975e\u9759\u6001\u7684\u5168\u5c40\u53d8\u91cf\u5728\u5404\u4e2a\u6e90\u6587\u4ef6\u4e2d\u90fd\u662f\u6709\u6548\u7684\u3002 \u800c\u9759\u6001\u5168\u5c40\u53d8\u91cf\u5219\u9650\u5236\u4e86\u5176\u4f5c\u7528\u57df\uff0c \u5373\u53ea\u5728\u5b9a\u4e49\u8be5\u53d8\u91cf\u7684\u6e90\u6587\u4ef6\u5185\u6709\u6548\uff0c\u5728\u540c\u4e00\u6e90\u7a0b\u5e8f\u7684\u5176\u5b83\u6e90\u6587\u4ef6\u4e2d\u4e0d\u80fd\u4f7f\u7528\u5b83\u3002\u7531\u4e8e\u9759\u6001\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u5c40\u9650\u4e8e\u4e00\u4e2a\u6e90\u6587\u4ef6\u5185\uff0c\u53ea\u80fd\u4e3a\u8be5\u6e90\u6587\u4ef6\u5185\u7684\u51fd\u6570\u516c\u7528\uff0c\u56e0\u6b64\u53ef\u4ee5\u907f\u514d\u5728\u5176\u5b83\u6e90\u6587\u4ef6\u4e2d\u5f15\u8d77\u9519\u8bef\u3002", "\n\u4ece\u4ee5\u4e0a\u5206\u6790\u53ef\u4ee5\u770b\u51fa\uff0c \u628a\u5c40\u90e8\u53d8\u91cf\u6539\u53d8\u4e3a\u9759\u6001\u53d8\u91cf\u540e\u662f\u6539\u53d8\u4e86\u5b83\u7684\u5b58\u50a8\u65b9\u5f0f\u5373\u6539\u53d8\u4e86\u5b83\u7684\u751f\u5b58\u671f\u3002\u628a\u5168\u5c40\u53d8\u91cf\u6539\u53d8\u4e3a\u9759\u6001\u53d8\u91cf\u540e\u662f\u6539\u53d8\u4e86\u5b83\u7684\u4f5c\u7528\u57df\uff0c \u9650\u5236\u4e86\u5b83\u7684\u4f7f\u7528\u8303\u56f4\u3002", "\nstatic\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u4f5c\u7528\u57df\u4e0d\u540c\u3002\u4ec5\u5728\u672c\u6587\u4ef6\u3002\u53ea\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4e2d\u4f7f\u7528\u7684\u51fd\u6570\u5e94\u8be5\u8bf4\u660e\u4e3a\u5185\u90e8\u51fd\u6570(static)\uff0c\u5185\u90e8\u51fd\u6570\u5e94\u8be5\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4e2d\u8bf4\u660e\u548c\u5b9a\u4e49\u3002\u5bf9\u4e8e\u53ef\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4ee5\u5916\u4f7f\u7528\u7684\u51fd\u6570\uff0c\u5e94\u8be5\u5728\u4e00\u4e2a\u5934\u6587\u4ef6\u4e2d\u8bf4\u660e\uff0c\u8981\u4f7f\u7528\u8fd9\u4e9b\u51fd\u6570\u7684\u6e90\u6587\u4ef6\u8981\u5305\u542b\u8fd9\u4e2a\u5934\u6587\u4ef6", "static\u5168\u5c40\u53d8\u91cf\u4e0e\u666e\u901a\u7684\u5168\u5c40\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u5168\u5c40\u53d8\u91cf\u53ea\u521d\u4f7f\u5316\u4e00\u6b21\uff0c\u9632\u6b62\u5728\u5176\u4ed6\u6587\u4ef6\u5355\u5143\u4e2d\u88ab\u5f15\u7528;", "\nstatic\u5c40\u90e8\u53d8\u91cf\u548c\u666e\u901a\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u5c40\u90e8\u53d8\u91cf\u53ea\u88ab\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u4e0b\u4e00\u6b21\u4f9d\u636e\u4e0a\u4e00\u6b21\u7ed3\u679c\u503c\uff1b", "\nstatic\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u51fd\u6570\u5728\u5185\u5b58\u4e2d\u53ea\u6709\u4e00\u4efd\uff0c\u666e\u901a\u51fd\u6570\u5728\u6bcf\u4e2a\u88ab\u8c03\u7528\u4e2d\u7ef4\u6301\u4e00\u4efd\u62f7\u8d1d", "\n2\u3001\u7a0b\u5e8f\u7684\u5c40\u90e8\u53d8\u91cf\u5b58\u5728\u4e8e\uff08\u5806\u6808\uff09\u4e2d\uff0c\u5168\u5c40\u53d8\u91cf\u5b58\u5728\u4e8e\uff08\u9759\u6001\u533a \uff09\u4e2d\uff0c\u52a8\u6001\u7533\u8bf7\u6570\u636e\u5b58\u5728\u4e8e\uff08 \u5806\uff09\u4e2d\u3002", "\n3\u3001\u8bbe\u6709\u4ee5\u4e0b\u8bf4\u660e\u548c\u5b9a\u4e49\uff1a", "\ntypedef union {long i; int k[5]; char c;} DATE;", "\nstruct data { int cat; DATE cow; double dog;} too;", "\nDATE max;", "\n\u5219\u8bed\u53e5 printf(\"%d\",sizeof(struct date)+sizeof(max));\u7684\u6267\u884c\u7ed3\u679c\u662f\uff1a___52____", "\n\u7b54\uff1aDATE\u662f\u4e00\u4e2aunion, \u53d8\u91cf\u516c\u7528\u7a7a\u95f4. \u91cc\u9762\u6700\u5927\u7684\u53d8\u91cf\u7c7b\u578b\u662fint[5], \u5360\u752820\u4e2a\u5b57\u8282. \u6240\u4ee5\u5b83\u7684\u5927\u5c0f\u662f20", "\ndata\u662f\u4e00\u4e2astruct, \u6bcf\u4e2a\u53d8\u91cf\u5206\u5f00\u5360\u7528\u7a7a\u95f4. \u4f9d\u6b21\u4e3aint4 + DATE20 + double8 = 32.", "\n\u6240\u4ee5\u7ed3\u679c\u662f 20 + 32 = 52.", "\n\u5f53\u7136...\u5728\u67d0\u4e9b16\u4f4d\u7f16\u8f91\u5668\u4e0b, int\u53ef\u80fd\u662f2\u5b57\u8282,\u90a3\u4e48\u7ed3\u679c\u662f int2 + DATE10 + double8 = 20", "\n4\u3001\u961f\u5217\u548c\u6808\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u961f\u5217\u5148\u8fdb\u5148\u51fa\uff0c\u6808\u540e\u8fdb\u5148\u51fa", "\n5\u3001\u5199\u51fa\u4e0b\u5217\u4ee3\u7801\u7684\u8f93\u51fa\u5185\u5bb9", "\n#include", "\nint inc(int a)", "\n{", "\nreturn(++a);", "\n}", "\nint multi(int*a,int*b,int*c)", "\n{", "\nreturn(*c=*a**b);", "\n}", "\ntypedef int(FUNC1)(int in);", "\ntypedef int(FUNC2) (int*,int*,int*);", "void show(FUNC2 fun,int arg1, int*arg2)", "\n{", "\nINCp=&inc;", "\nint temp =p(arg1);", "\nfun(&temp,&arg1, arg2);", "\nprintf(\"%d\\n\",*arg2);", "\n}", "main()", "\n{", "\nint a;", "\nshow(multi,10,&a);", "\nreturn 0;", "\n}", "\n\u7b54\uff1a110", "\n7\u3001\u8bf7\u627e\u51fa\u4e0b\u9762\u4ee3\u7801\u4e2d\u7684\u6240\u4ee5\u9519\u8bef", "\n\u8bf4\u660e\uff1a\u4ee5\u4e0b\u4ee3\u7801\u662f\u628a\u4e00\u4e2a\u5b57\u7b26\u4e32\u5012\u5e8f\uff0c\u5982\u201cabcd\u201d\u5012\u5e8f\u540e\u53d8\u4e3a\u201cdcba\u201d", "1\u3001#include\"string.h\"", "\n2\u3001main()", "\n3\u3001{", "\n4\u3001 char*src=\"hello,world\";", "\n5\u3001 char* dest=NULL;", "\n6\u3001 int len=strlen(src);", "\n7\u3001 dest=(char*)malloc(len);", "\n8\u3001 char* d=dest;", "\n9\u3001 char* s=src[len];", "\n10\u3001 while(len--!=0)", "\n11\u3001 d++=s--;", "\n12\u3001 printf(\"%s\",dest);", "\n13\u3001 return 0;", "\n14\u3001}", "\n\u7b54\uff1a", "\n\u65b9\u6cd51\uff1a", "\nint main(){", "\nchar* src = \"hello,world\";", "\nint len = strlen(src);", "\nchar* dest = (char*)malloc(len+1);//\u8981\u4e3a\\0\u5206\u914d\u4e00\u4e2a\u7a7a\u95f4", "\nchar* d = dest;", "\nchar* s = &src[len-1];//\u6307\u5411\u6700\u540e\u4e00\u4e2a\u5b57\u7b26", "\nwhile( len-- != 0 )", "\n*d++=*s--;", "\n*d = 0;//\u5c3e\u90e8\u8981\u52a0\\0", "\nprintf(\"%s\\n\",dest);", "\nfree(dest);// \u4f7f\u7528\u5b8c\uff0c\u5e94\u5f53\u91ca\u653e\u7a7a\u95f4\uff0c\u4ee5\u514d\u9020\u6210\u5185\u5b58\u6c47\u6cc4\u9732", "\nreturn 0;", "\n}", "\n\u65b9\u6cd52\uff1a", "\n#include", "\n#include", "\nmain()", "\n{", "\nchar str[]=\"hello,world\";", "\nint len=strlen(str);", "\nchar t;", "\nfor(int i=0; i", "\n{", "\nt=str[i];", "\nstr[i]=str[len-i-1]; str[len-i-1]=t;", "\n}", "\nprintf(\"%s\",str);", "\nreturn 0;", "\n}", "\n1.-1,2,7,28,,126\u8bf7\u95ee28\u548c126\u4e2d\u95f4\u90a3\u4e2a\u6570\u662f\u4ec0\u4e48\uff1f\u4e3a\u4ec0\u4e48\uff1f", "\n\u7b2c\u4e00\u9898\u7684\u7b54\u6848\u5e94\u8be5\u662f4^3-1=63", "\n\u89c4\u5f8b\u662fn^3-1(\u5f53n\u4e3a\u5076\u65700\uff0c2\uff0c4)", "\nn^3+1(\u5f53n\u4e3a\u5947\u65701\uff0c3\uff0c5)", "\n\u7b54\u6848\uff1a63", "\n2.\u7528\u4e24\u4e2a\u6808\u5b9e\u73b0\u4e00\u4e2a\u961f\u5217\u7684\u529f\u80fd\uff1f\u8981\u6c42\u7ed9\u51fa\u7b97\u6cd5\u548c\u601d\u8def\uff01", "\n\u8bbe2\u4e2a\u6808\u4e3aA,B, \u4e00\u5f00\u59cb\u5747\u4e3a\u7a7a.", "\u5165\u961f:", "\n\u5c06\u65b0\u5143\u7d20push\u5165\u6808A;", "\u51fa\u961f:", "\n(1)\u5224\u65ad\u6808B\u662f\u5426\u4e3a\u7a7a\uff1b", "\n(2)\u5982\u679c\u4e0d\u4e3a\u7a7a\uff0c\u5219\u5c06\u6808A\u4e2d\u6240\u6709\u5143\u7d20\u4f9d\u6b21pop\u51fa\u5e76push\u5230\u6808B\uff1b", "\n(3)\u5c06\u6808B\u7684\u6808\u9876\u5143\u7d20pop\u51fa\uff1b", "\u8fd9\u6837\u5b9e\u73b0\u7684\u961f\u5217\u5165\u961f\u548c\u51fa\u961f\u7684\u5e73\u644a\u590d\u6742\u5ea6\u90fd\u8fd8\u662fO(1), \u6bd4\u4e0a\u9762\u7684\u51e0\u79cd\u65b9\u6cd5\u8981\u597d\u30023.\u5728c\u8bed\u8a00\u5e93\u51fd\u6570\u4e2d\u5c06\u4e00\u4e2a\u5b57\u7b26\u8f6c\u6362\u6210\u6574\u578b\u7684\u51fd\u6570\u662fatool()\u5417\uff0c\u8fd9\u4e2a\u51fd\u6570\u7684\u539f\u578b\u662f\u4ec0\u4e48\uff1f", "\n\u51fd\u6570\u540d: atol", "\n\u529f \u80fd: \u628a\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u957f\u6574\u578b\u6570", "\n\u7528 \u6cd5: long atol(const char *nptr);", "\n\u7a0b\u5e8f\u4f8b:", "\n#include", "\n#include", "\nint main(void)", "\n{", "\nlong l;", "\nchar *str = \"98765432\";", "l = atol(lstr);", "\nprintf(\"string = %s integer = %ld\\n\", str, l);", "\nreturn(0);", "\n}", "\n2.\u5bf9\u4e8e\u4e00\u4e2a\u9891\u7e41\u4f7f\u7528\u7684\u77ed\u5c0f\u51fd\u6570,\u5728C\u8bed\u8a00\u4e2d\u5e94\u7528\u4ec0\u4e48\u5b9e\u73b0,\u5728C++\u4e2d\u5e94\u7528\u4ec0\u4e48\u5b9e\u73b0?", "\nc\u7528\u5b8f\u5b9a\u4e49\uff0cc++\u7528inline", "\n3.\u76f4\u63a5\u94fe\u63a5\u4e24\u4e2a\u4fe1\u4ee4\u70b9\u7684\u4e00\u7ec4\u94fe\u8def\u79f0\u4f5c\u4ec0\u4e48?", "\nPPP\u70b9\u5230\u70b9\u8fde\u63a5", "\n4.\u63a5\u5165\u7f51\u7528\u7684\u662f\u4ec0\u4e48\u63a5\u53e3?", "\n5.voip\u90fd\u7528\u4e86\u90a3\u4e9b\u534f\u8bae?", "\n6.\u8f6f\u4ef6\u6d4b\u8bd5\u90fd\u6709\u90a3\u4e9b\u79cd\u7c7b?", "\n\u9ed1\u76d2\uff1a\u9488\u5bf9\u7cfb\u7edf\u529f\u80fd\u7684\u6d4b\u8bd5 \u767d\u5408\uff1a\u6d4b\u8bd5\u51fd\u6570\u529f\u80fd\uff0c\u5404\u51fd\u6570\u63a5\u53e3", "\n7.\u786e\u5b9a\u6a21\u5757\u7684\u529f\u80fd\u548c\u6a21\u5757\u7684\u63a5\u53e3\u662f\u5728\u8f6f\u4ef6\u8bbe\u8ba1\u7684\u90a3\u4e2a\u961f\u6bb5\u5b8c\u6210\u7684?", "\n\u6982\u8981\u8bbe\u8ba1\u9636\u6bb5", "\n8.enum string", "\n{", "\nx1,", "\nx2,", "\nx3=10,", "\nx4,", "\nx5,", "\n}x;", "\n\u95eex= 0x801005\uff0c0x8010f4 ;", "\n9.unsigned char *p1;", "\nunsigned long *p2;", "\np1=(unsigned char *)0x801000;", "\np2=(unsigned long *)0x810000;", "\n\u8bf7\u95eep1+5= ;", "\np2+5= ;", "\n\u4e09.\u9009\u62e9\u9898:", "\n1.Ethternet\u94fe\u63a5\u5230Internet\u7528\u5230\u4ee5\u4e0b\u90a3\u4e2a\u534f\u8bae?", "\nA.HDLC;B.ARP;C.UDP;D.TCP;E.ID", "\n2.\u5c5e\u4e8e\u7f51\u7edc\u5c42\u534f\u8bae\u7684\u662f:", "\nA.TCP;B.IP;C.ICMP;D.X.25", "\n3.Windows\u6d88\u606f\u8c03\u5ea6\u673a\u5236\u662f:", "\nA.\u6307\u4ee4\u961f\u5217;B.\u6307\u4ee4\u5806\u6808;C.\u6d88\u606f\u961f\u5217;D.\u6d88\u606f\u5806\u6808;", "\n4.unsigned short hash(unsigned short key)", "\n{", "\nreturn (key>>)%256", "\n}", "\n\u8bf7\u95eehash(16),hash(256)\u7684\u503c\u5206\u522b\u662f:", "\nA.1.16;B.8.32;C.4.16;D.1.32", "\n\u56db.\u627e\u9519\u9898:", "\n1.\u8bf7\u95ee\u4e0b\u9762\u7a0b\u5e8f\u6709\u4ec0\u4e48\u9519\u8bef?", "\nint a[60][250][1000],i,j,k;", "\nfor(k=0;k\nfor(j=0;j\nfor(i=0;i\na[i][j][k]=0;", "\n\u628a\u5faa\u73af\u8bed\u53e5\u5185\u5916\u6362\u4e00\u4e0b", "\n2.#define Max_CB 500", "\nvoid LmiQueryCSmd(Struct MSgCB * pmsg)", "\n{", "\nunsigned char ucCmdNum;", "\n......", "for(ucCmdNum=0;ucCmdNum", "\n{", "\n......;", "\n}", "\n\u6b7b\u5faa\u73af", "\n3.\u4ee5\u4e0b\u662f\u6c42\u4e00\u4e2a\u6570\u7684\u5e73\u65b9\u7684\u7a0b\u5e8f,\u8bf7\u627e\u51fa\u9519\u8bef:", "\n#define SQUARE(a)((a)*(a))", "\nint a=5;", "\nint b;", "\nb=SQUARE(a++);", "\n4.typedef unsigned char BYTE", "\nint examply_fun(BYTE gt_len; BYTE *gt_code)", "\n{", "\nBYTE *gt_buf;", "\ngt_buf=(BYTE *)MALLOC(Max_GT_Length);", "\n......", "\nif(gt_len>Max_GT_Length)", "\n{", "\nreturn GT_Length_ERROR;", "\n}", "\n\u2026\u2026.", "\n}", "\n\u4e94.\u95ee\u7b54\u9898:", "\n1.IP Phone\u7684\u539f\u7406\u662f\u4ec0\u4e48?", "\nIPV6", "\n2.TCP/IP\u901a\u4fe1\u5efa\u7acb\u7684\u8fc7\u7a0b\u600e\u6837\uff0c\u7aef\u53e3\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f", "\n\u4e09\u6b21\u63e1\u624b\uff0c\u786e\u5b9a\u662f\u54ea\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u8be5\u534f\u8bae", "\n3.1\u53f7\u4fe1\u4ee4\u548c7\u53f7\u4fe1\u4ee4\u6709\u4ec0\u4e48\u533a\u522b\uff0c\u6211\u56fd\u67d0\u524d\u5e7f\u6cdb\u4f7f\u7528\u7684\u662f\u90a3\u4e00\u79cd\uff1f", "\n4.\u5217\u4e3e5\u79cd\u4ee5\u4e0a\u7684\u7535\u8bdd\u65b0\u4e1a\u52a1\uff1f", "\u5fae\u8f6f\u4e9a\u6d32\u6280\u672f\u4e2d\u5fc3\u7684\u9762\u8bd5\u9898\uff01\uff01\uff01", "\n1\uff0e\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7684\u5dee\u522b\u3002", "\n\u7ebf\u7a0b\u662f\u6307\u8fdb\u7a0b\u5185\u7684\u4e00\u4e2a\u6267\u884c\u5355\u5143,\u4e5f\u662f\u8fdb\u7a0b\u5185\u7684\u53ef\u8c03\u5ea6\u5b9e\u4f53.", "\n\u4e0e\u8fdb\u7a0b\u7684\u533a\u522b:", "\n(1)\u8c03\u5ea6\uff1a\u7ebf\u7a0b\u4f5c\u4e3a\u8c03\u5ea6\u548c\u5206\u914d\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u8fdb\u7a0b\u4f5c\u4e3a\u62e5\u6709\u8d44\u6e90\u7684\u57fa\u672c\u5355\u4f4d", "\n(2)\u5e76\u53d1\u6027\uff1a\u4e0d\u4ec5\u8fdb\u7a0b\u4e4b\u95f4\u53ef\u4ee5\u5e76\u53d1\u6267\u884c\uff0c\u540c\u4e00\u4e2a\u8fdb\u7a0b\u7684\u591a\u4e2a\u7ebf\u7a0b\u4e4b\u95f4\u4e5f\u53ef\u5e76\u53d1\u6267\u884c", "\n(3)\u62e5\u6709\u8d44\u6e90\uff1a\u8fdb\u7a0b\u662f\u62e5\u6709\u8d44\u6e90\u7684\u4e00\u4e2a\u72ec\u7acb\u5355\u4f4d\uff0c\u7ebf\u7a0b\u4e0d\u62e5\u6709\u7cfb\u7edf\u8d44\u6e90\uff0c\u4f46\u53ef\u4ee5\u8bbf\u95ee\u96b6\u5c5e\u4e8e\u8fdb\u7a0b\u7684\u8d44\u6e90.", "\n(4)\u7cfb\u7edf\u5f00\u9500\uff1a\u5728\u521b\u5efa\u6216\u64a4\u6d88\u8fdb\u7a0b\u65f6\uff0c\u7531\u4e8e\u7cfb\u7edf\u90fd\u8981\u4e3a\u4e4b\u5206\u914d\u548c\u56de\u6536\u8d44\u6e90\uff0c\u5bfc\u81f4\u7cfb\u7edf\u7684\u5f00\u9500\u660e\u663e\u5927\u4e8e\u521b\u5efa\u6216\u64a4\u6d88\u7ebf\u7a0b\u65f6\u7684\u5f00\u9500\u3002", "\n2.\u6d4b\u8bd5\u65b9\u6cd5", "\n\u4eba\u5de5\u6d4b\u8bd5\uff1a\u4e2a\u4eba\u590d\u67e5\u3001\u62bd\u67e5\u548c\u4f1a\u5ba1", "\n\u673a\u5668\u6d4b\u8bd5\uff1a\u9ed1\u76d2\u6d4b\u8bd5\u548c\u767d\u76d2\u6d4b\u8bd5", "2\uff0eHeap\u4e0estack\u7684\u5dee\u522b\u3002", "\nHeap\u662f\u5806\uff0cstack\u662f\u6808\u3002", "\nStack\u7684\u7a7a\u95f4\u7531\u64cd\u4f5c\u7cfb\u7edf\u81ea\u52a8\u5206\u914d/\u91ca\u653e\uff0cHeap\u4e0a\u7684\u7a7a\u95f4\u624b\u52a8\u5206\u914d/\u91ca\u653e\u3002", "\nStack\u7a7a\u95f4\u6709\u9650\uff0cHeap\u662f\u5f88\u5927\u7684\u81ea\u7531\u5b58\u50a8\u533a", "\nC\u4e2d\u7684malloc\u51fd\u6570\u5206\u914d\u7684\u5185\u5b58\u7a7a\u95f4\u5373\u5728\u5806\u4e0a,C++\u4e2d\u5bf9\u5e94\u7684\u662fnew\u64cd\u4f5c\u7b26\u3002", "\n\u7a0b\u5e8f\u5728\u7f16\u8bd1\u671f\u5bf9\u53d8\u91cf\u548c\u51fd\u6570\u5206\u914d\u5185\u5b58\u90fd\u5728\u6808\u4e0a\u8fdb\u884c,\u4e14\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u51fd\u6570\u8c03\u7528\u65f6\u53c2\u6570\u7684\u4f20\u9012\u4e5f\u5728\u6808\u4e0a\u8fdb\u884c", "\n3\uff0eWindows\u4e0b\u7684\u5185\u5b58\u662f\u5982\u4f55\u7ba1\u7406\u7684\uff1f", "\n4\uff0e\u4ecb\u7ecd.Net\u548c.Net\u7684\u5b89\u5168\u6027\u3002", "\n5\uff0e\u5ba2\u6237\u7aef\u5982\u4f55\u8bbf\u95ee.Net\u7ec4\u4ef6\u5b9e\u73b0Web Service\uff1f", "\n6\uff0eC/C++\u7f16\u8bd1\u5668\u4e2d\u865a\u8868\u662f\u5982\u4f55\u5b8c\u6210\u7684\uff1f", "\n7\uff0e\u8c08\u8c08COM\u7684\u7ebf\u7a0b\u6a21\u578b\u3002\u7136\u540e\u8ba8\u8bba\u8fdb\u7a0b\u5185/\u5916\u7ec4\u4ef6\u7684\u5dee\u522b\u3002", "\n8\uff0e\u8c08\u8c08IA32\u4e0b\u7684\u5206\u9875\u673a\u5236", "\n\u5c0f\u9875(4K)\u4e24\u7ea7\u5206\u9875\u6a21\u5f0f\uff0c\u5927\u9875(4M)\u4e00\u7ea7", "\n9\uff0e\u7ed9\u4e24\u4e2a\u53d8\u91cf\uff0c\u5982\u4f55\u627e\u51fa\u4e00\u4e2a\u5e26\u73af\u5355\u94fe\u8868\u4e2d\u662f\u4ec0\u4e48\u5730\u65b9\u51fa\u73b0\u73af\u7684\uff1f", "\n\u4e00\u4e2a\u9012\u589e\u4e00\uff0c\u4e00\u4e2a\u9012\u589e\u4e8c\uff0c\u4ed6\u4eec\u6307\u5411\u540c\u4e00\u4e2a\u63a5\u70b9\u65f6\u5c31\u662f\u73af\u51fa\u73b0\u7684\u5730\u65b9", "\n10\uff0e\u5728IA32\u4e2d\u4e00\u5171\u6709\u591a\u5c11\u79cd\u529e\u6cd5\u4ece\u7528\u6237\u6001\u8df3\u5230\u5185\u6838\u6001\uff1f", "\n\u901a\u8fc7\u8c03\u7528\u95e8\uff0c\u4ecering3\u5230ring0\uff0c\u4e2d\u65ad\u4ecering3\u5230ring0\uff0c\u8fdb\u5165vm86\u7b49\u7b49", "\n11\uff0e\u5982\u679c\u53ea\u60f3\u8ba9\u7a0b\u5e8f\u6709\u4e00\u4e2a\u5b9e\u4f8b\u8fd0\u884c\uff0c\u4e0d\u80fd\u8fd0\u884c\u4e24\u4e2a\u3002\u50cfwinamp\u4e00\u6837\uff0c\u53ea\u80fd\u5f00\u4e00\u4e2a\u7a97\u53e3\uff0c\u600e\u6837\u5b9e\u73b0\uff1f", "\n\u7528\u5185\u5b58\u6620\u5c04\u6216\u5168\u5c40\u539f\u5b50\uff08\u4e92\u65a5\u53d8\u91cf\uff09\u3001\u67e5\u627e\u7a97\u53e3\u53e5\u67c4..", "\nFindWindow\uff0c\u4e92\u65a5\uff0c\u5199\u6807\u5fd7\u5230\u6587\u4ef6\u6216\u6ce8\u518c\u8868,\u5171\u4eab\u5185\u5b58\u3002.\u3000", "\n12\uff0e\u5982\u4f55\u622a\u53d6\u952e\u76d8\u7684\u54cd\u5e94\uff0c\u8ba9\u6240\u6709\u7684\u2018a\u2019\u53d8\u6210\u2018b\u2019\uff1f", "\n\u952e\u76d8\u94a9\u5b50SetWindowsHookEx", "\n\u300013\uff0eApartment\u5728COM\u4e2d\u6709\u4ec0\u4e48\u7528\uff1f\u4e3a\u4ec0\u4e48\u8981\u5f15\u5165\uff1f", "\n\u300014\uff0e\u5b58\u50a8\u8fc7\u7a0b\u662f\u4ec0\u4e48\uff1f\u6709\u4ec0\u4e48\u7528\uff1f\u6709\u4ec0\u4e48\u4f18\u70b9\uff1f", "\n\u6211\u7684\u7406\u89e3\u5c31\u662f\u4e00\u5806sql\u7684\u96c6\u5408\uff0c\u53ef\u4ee5\u5efa\u7acb\u975e\u5e38\u590d\u6742\u7684\u67e5\u8be2\uff0c\u7f16\u8bd1\u8fd0\u884c\uff0c\u6240\u4ee5\u8fd0\u884c\u4e00\u6b21\u540e\uff0c\u4ee5\u540e\u518d\u8fd0\u884c\u901f\u5ea6\u6bd4\u5355\u72ec\u6267\u884cSQL\u5feb\u5f88\u591a", "\n\u300015\uff0eTemplate\u6709\u4ec0\u4e48\u7279\u70b9\uff1f\u4ec0\u4e48\u65f6\u5019\u7528\uff1f", "\n16\uff0e\u8c08\u8c08Windows DNA\u7ed3\u6784\u7684\u7279\u70b9\u548c\u4f18\u70b9\u3002", "\u7f51\u7edc\u7f16\u7a0b\u4e2d\u8bbe\u8ba1\u5e76\u53d1\u670d\u52a1\u5668\uff0c\u4f7f\u7528\u591a\u8fdb\u7a0b \u4e0e \u591a\u7ebf\u7a0b \uff0c\u8bf7\u95ee\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n1\uff0c\u8fdb\u7a0b\uff1a\u5b50\u8fdb\u7a0b\u662f\u7236\u8fdb\u7a0b\u7684\u590d\u5236\u54c1\u3002\u5b50\u8fdb\u7a0b\u83b7\u5f97\u7236\u8fdb\u7a0b\u6570\u636e\u7a7a\u95f4\u3001\u5806\u548c\u6808\u7684\u590d\u5236\u54c1\u3002", "\n2\uff0c\u7ebf\u7a0b\uff1a\u76f8\u5bf9\u4e0e\u8fdb\u7a0b\u800c\u8a00\uff0c\u7ebf\u7a0b\u662f\u4e00\u4e2a\u66f4\u52a0\u63a5\u8fd1\u4e0e\u6267\u884c\u4f53\u7684\u6982\u5ff5\uff0c\u5b83\u53ef\u4ee5\u4e0e\u540c\u8fdb\u7a0b\u7684\u5176\u4ed6\u7ebf\u7a0b\u5171\u4eab\u6570\u636e\uff0c\u4f46\u62e5\u6709\u81ea\u5df1\u7684\u6808\u7a7a\u95f4\uff0c\u62e5\u6709\u72ec\u7acb\u7684\u6267\u884c\u5e8f\u5217\u3002", "\n\u4e24\u8005\u90fd\u53ef\u4ee5\u63d0\u9ad8\u7a0b\u5e8f\u7684\u5e76\u53d1\u5ea6\uff0c\u63d0\u9ad8\u7a0b\u5e8f\u8fd0\u884c\u6548\u7387\u548c\u54cd\u5e94\u65f6\u95f4\u3002", "\n\u7ebf\u7a0b\u548c\u8fdb\u7a0b\u5728\u4f7f\u7528\u4e0a\u5404\u6709\u4f18\u7f3a\u70b9\uff1a\u7ebf\u7a0b\u6267\u884c\u5f00\u9500\u5c0f\uff0c\u4f46\u4e0d\u5229\u4e8e\u8d44\u6e90\u7ba1\u7406\u548c\u4fdd\u62a4\uff1b\u800c\u8fdb\u7a0b\u6b63\u76f8\u53cd\u3002\u540c\u65f6\uff0c\u7ebf\u7a0b\u9002\u5408\u4e8e\u5728SMP\u673a\u5668\u4e0a\u8fd0\u884c\uff0c\u800c\u8fdb\u7a0b\u5219\u53ef\u4ee5\u8de8\u673a\u5668\u8fc1\u79fb\u3002", "\u601d\u79d1", "\n1. \u7528\u5b8f\u5b9a\u4e49\u5199\u51faswap\uff08x\uff0cy\uff09", "\n#define swap(x, y)\\", "\nx = x + y;\\", "\ny = x \u2013 y;\\", "\nx = x \u2013 y;", "\n2.\u6570\u7ec4a[N]\uff0c\u5b58\u653e\u4e861\u81f3N-1\u4e2a\u6570\uff0c\u5176\u4e2d\u67d0\u4e2a\u6570\u91cd\u590d\u4e00\u6b21\u3002\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u627e\u51fa\u88ab\u91cd\u590d\u7684\u6570\u5b57.\u65f6\u95f4\u590d\u6742\u5ea6\u5fc5\u987b\u4e3ao\uff08N\uff09\u51fd\u6570\u539f\u578b\uff1a", "\nint do_dup(int a[],int N)", "\n3 \u4e00\u8bed\u53e5\u5b9e\u73b0x\u662f\u5426\u4e3a2\u7684\u82e5\u5e72\u6b21\u5e42\u7684\u5224\u65ad", "\nint i = 512;", "\ncout \n4.unsigned int intvert(unsigned int x,int p,int n)\u5b9e\u73b0\u5bf9x\u7684\u8fdb\u884c\u8f6c\u6362,p\u4e3a\u8d77\u59cb\u8f6c\u5316\u4f4d,n\u4e3a\u9700\u8981\u8f6c\u6362\u7684\u957f\u5ea6,\u5047\u8bbe\u8d77\u59cb\u70b9\u5728\u53f3\u8fb9.\u5982x=0b0001 0001,p=4,n=3\u8f6c\u6362\u540ex=0b0110 0001", "\nunsigned int intvert(unsigned int x,int p,int n){", "\nunsigned int _t = 0;", "\nunsigned int _a = 1;", "\nfor(int i = 0; i \n_t |= _a;", "\n_a = _a \n}", "\n_t = _t \nx ^= _t;", "\nreturn x;", "\n}", "\n\u6167\u901a\uff1a", "\n\u4ec0\u4e48\u662f\u9884\u7f16\u8bd1", "\n\u4f55\u65f6\u9700\u8981\u9884\u7f16\u8bd1\uff1a", "\n\uff11\u3001\u603b\u662f\u4f7f\u7528\u4e0d\u7ecf\u5e38\u6539\u52a8\u7684\u5927\u578b\u4ee3\u7801\u4f53\u3002", "\n\uff12\u3001\u7a0b\u5e8f\u7531\u591a\u4e2a\u6a21\u5757\u7ec4\u6210\uff0c\u6240\u6709\u6a21\u5757\u90fd\u4f7f\u7528\u4e00\u7ec4\u6807\u51c6\u7684\u5305\u542b\u6587\u4ef6\u548c\u76f8\u540c\u7684\u7f16\u8bd1\u9009\u9879\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u5c06\u6240\u6709\u5305\u542b\u6587\u4ef6\u9884\u7f16\u8bd1\u4e3a\u4e00\u4e2a\u9884\u7f16\u8bd1\u5934\u3002", "\nchar * const p;", "\nchar const * p", "\nconst char *p", "\u4e0a\u8ff0\u4e09\u4e2a\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\nchar * const p; //\u5e38\u91cf\u6307\u9488\uff0cp\u7684\u503c\u4e0d\u53ef\u4ee5\u4fee\u6539", "\nchar const * p\uff1b//\u6307\u5411\u5e38\u91cf\u7684\u6307\u9488\uff0c\u6307\u5411\u7684\u5e38\u91cf\u503c\u4e0d\u53ef\u4ee5\u6539", "\nconst char *p\uff1b //\u548cchar const *p", "char str1[] = \"abc\";", "\nchar str2[] = \"abc\";", "const char str3[] = \"abc\";", "\nconst char str4[] = \"abc\";", "const char *str5 = \"abc\";", "\nconst char *str6 = \"abc\";", "char *str7 = \"abc\";", "\nchar *str8 = \"abc\";", "cout \ncout \ncout \ncout \n", "\u7ed3\u679c\u662f\uff1a0 0 1 1", "\n\u89e3\u7b54\uff1astr1,str2,str3,str4\u662f\u6570\u7ec4\u53d8\u91cf\uff0c\u5b83\u4eec\u6709\u5404\u81ea\u7684\u5185\u5b58\u7a7a\u95f4\uff1b", "\n\u800cstr5,str6,str7,str8\u662f\u6307\u9488\uff0c\u5b83\u4eec\u6307\u5411\u76f8\u540c\u7684\u5e38\u91cf\u533a\u57df\u3002", "12. \u4ee5\u4e0b\u4ee3\u7801\u4e2d\u7684\u4e24\u4e2asizeof\u7528\u6cd5\u6709\u95ee\u9898\u5417\uff1f[C\u6613]", "\nvoid UpperCase( char str[] ) // \u5c06 str \u4e2d\u7684\u5c0f\u5199\u5b57\u6bcd\u8f6c\u6362\u6210\u5927\u5199\u5b57\u6bcd", "\n{", "\nfor( size_t i=0; i", "\nif( 'a'\nstr[i] -= ('a'-'A' );", "\n}", "\nchar str[] = \"aBcDe\";", "\ncout \nUpperCase( str );", "\ncout \n", "\u7b54\uff1a\u51fd\u6570\u5185\u7684sizeof\u6709\u95ee\u9898\u3002\u6839\u636e\u8bed\u6cd5\uff0csizeof\u5982\u7528\u4e8e\u6570\u7ec4\uff0c\u53ea\u80fd\u6d4b\u51fa\u9759\u6001\u6570\u7ec4\u7684\u5927\u5c0f\uff0c\u65e0\u6cd5\u68c0\u6d4b\u52a8\u6001\u5206\u914d\u7684\u6216\u5916\u90e8\u6570\u7ec4\u5927\u5c0f\u3002\u51fd\u6570\u5916\u7684str\u662f\u4e00\u4e2a\u9759\u6001\u5b9a\u4e49\u7684\u6570\u7ec4\uff0c\u56e0\u6b64\u5176\u5927\u5c0f\u4e3a6\uff0c\u51fd\u6570\u5185\u7684str\u5b9e\u9645\u53ea\u662f\u4e00\u4e2a\u6307\u5411\u5b57\u7b26\u4e32\u7684\u6307\u9488\uff0c\u6ca1\u6709\u4efb\u4f55\u989d\u5916\u7684\u4e0e\u6570\u7ec4\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u56e0\u6b64sizeof\u4f5c\u7528\u4e8e\u4e0a\u53ea\u5c06\u5176\u5f53\u6307\u9488\u770b\uff0c\u4e00\u4e2a\u6307\u9488\u4e3a4\u4e2a\u5b57\u8282\uff0c\u56e0\u6b64\u8fd4\u56de4\u3002", "\u4e00\u4e2a32\u4f4d\u7684\u673a\u5668,\u8be5\u673a\u5668\u7684\u6307\u9488\u662f\u591a\u5c11\u4f4d", "\n\u6307\u9488\u662f\u591a\u5c11\u4f4d\u53ea\u8981\u770b\u5730\u5740\u603b\u7ebf\u7684\u4f4d\u6570\u5c31\u884c\u4e86\u300280386\u4ee5\u540e\u7684\u673a\u5b50\u90fd\u662f32\u7684\u6570\u636e\u603b\u7ebf\u3002\u6240\u4ee5\u6307\u9488\u7684\u4f4d\u6570\u5c31\u662f4\u4e2a\u5b57\u8282\u4e86\u3002", "main()", "\n{", "\nint a[5]={1,2,3,4,5};", "\nint *ptr=(int *)(&a+1);", "printf(\"%d,%d\",*(a+1),*(ptr-1));", "\n}", "\n\u8f93\u51fa\uff1a2,5", "\n*(a+1\uff09\u5c31\u662fa[1]\uff0c*(ptr-1)\u5c31\u662fa[4],\u6267\u884c\u7ed3\u679c\u662f2\uff0c5", "\n&a+1\u4e0d\u662f\u9996\u5730\u5740+1\uff0c\u7cfb\u7edf\u4f1a\u8ba4\u4e3a\u52a0\u4e00\u4e2aa\u6570\u7ec4\u7684\u504f\u79fb\uff0c\u662f\u504f\u79fb\u4e86\u4e00\u4e2a\u6570\u7ec4\u7684\u5927\u5c0f\uff08\u672c\u4f8b\u662f5\u4e2aint\uff09", "\nint *ptr=(int *)(&a+1);", "\n\u5219ptr\u5b9e\u9645\u662f&(a[5]),\u4e5f\u5c31\u662fa+5", "\n\u539f\u56e0\u5982\u4e0b\uff1a", "\n&a\u662f\u6570\u7ec4\u6307\u9488\uff0c\u5176\u7c7b\u578b\u4e3a int (*)[5];", "\n\u800c\u6307\u9488\u52a01\u8981\u6839\u636e\u6307\u9488\u7c7b\u578b\u52a0\u4e0a\u4e00\u5b9a\u7684\u503c\uff0c", "\n\u4e0d\u540c\u7c7b\u578b\u7684\u6307\u9488+1\u4e4b\u540e\u589e\u52a0\u7684\u5927\u5c0f\u4e0d\u540c", "\na\u662f\u957f\u5ea6\u4e3a5\u7684int\u6570\u7ec4\u6307\u9488\uff0c\u6240\u4ee5\u8981\u52a0 5*sizeof(int)", "\n\u6240\u4ee5ptr\u5b9e\u9645\u662fa[5]", "\n\u4f46\u662fprt\u4e0e(&a+1)\u7c7b\u578b\u662f\u4e0d\u4e00\u6837\u7684(\u8fd9\u70b9\u5f88\u91cd\u8981)", "\n\u6240\u4ee5prt-1\u53ea\u4f1a\u51cf\u53bbsizeof(int*)", "\na,&a\u7684\u5730\u5740\u662f\u4e00\u6837\u7684\uff0c\u4f46\u610f\u601d\u4e0d\u4e00\u6837\uff0ca\u662f\u6570\u7ec4\u9996\u5730\u5740\uff0c\u4e5f\u5c31\u662fa[0]\u7684\u5730\u5740\uff0c&a\u662f\u5bf9\u8c61\uff08\u6570\u7ec4\uff09\u9996\u5730\u5740\uff0ca+1\u662f\u6570\u7ec4\u4e0b\u4e00\u5143\u7d20\u7684\u5730\u5740\uff0c\u5373a[1],&a+1\u662f\u4e0b\u4e00\u4e2a\u5bf9\u8c61\u7684\u5730\u5740\uff0c\u5373a[5].", "1.\u8bf7\u95ee\u4ee5\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1a", "\nint main()", "\n{", "\nchar a;", "\nchar *str=&a;", "\nstrcpy(str,\"hello\");", "\nprintf(str);", "\nreturn 0;", "\n}", "\n\u6ca1\u6709\u4e3astr\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff0c\u5c06\u4f1a\u53d1\u751f\u5f02\u5e38", "\n\u95ee\u9898\u51fa\u5728\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u590d\u5236\u8fdb\u4e00\u4e2a\u5b57\u7b26\u53d8\u91cf\u6307\u9488\u6240\u6307\u5730\u5740\u3002\u867d\u7136\u53ef\u4ee5\u6b63\u786e\u8f93\u51fa\u7ed3\u679c\uff0c\u4f46\u56e0\u4e3a\u8d8a\u754c\u8fdb\u884c\u5185\u5728\u8bfb\u5199\u800c\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\u3002", "char* s=\"AAA\";", "\nprintf(\"%s\",s);", "\ns[0]='B';", "\nprintf(\"%s\",s);", "\n\u6709\u4ec0\u4e48\u9519\uff1f", "\n\"AAA\"\u662f\u5b57\u7b26\u4e32\u5e38\u91cf\u3002s\u662f\u6307\u9488\uff0c\u6307\u5411\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5e38\u91cf\uff0c\u6240\u4ee5\u58f0\u660es\u7684\u65f6\u5019\u5c31\u6709\u95ee\u9898\u3002", "\ncosnt char* s=\"AAA\";", "\n\u7136\u540e\u53c8\u56e0\u4e3a\u662f\u5e38\u91cf\uff0c\u6240\u4ee5\u5bf9\u662fs[0]\u7684\u8d4b\u503c\u64cd\u4f5c\u662f\u4e0d\u5408\u6cd5\u7684\u3002", "\n1\u3001\u5199\u4e00\u4e2a\u201c\u6807\u51c6\u201d\u5b8f\uff0c\u8fd9\u4e2a\u5b8f\u8f93\u5165\u4e24\u4e2a\u53c2\u6570\u5e76\u8fd4\u56de\u8f83\u5c0f\u7684\u4e00\u4e2a\u3002", "\n.#define Min(X, Y) ((X)>(Y)?(Y):(X))//\u7ed3\u5c3e\u6ca1\u6709;", "\n2\u3001\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\u7ecf\u5e38\u8981\u7528\u5230\u65e0\u9650\u5faa\u73af\uff0c\u4f60\u600e\u4e48\u7528C\u7f16\u5199\u6b7b\u5faa\u73af\u3002", "\nwhile(1){}\u6216\u8005for(;;)", "\n3\u3001\u5173\u952e\u5b57static\u7684\u4f5c\u7528\u662f\u4ec0\u4e48\uff1f", "\n\u5b9a\u4e49\u9759\u6001\u53d8\u91cf", "\n4\u3001\u5173\u952e\u5b57const\u6709\u4ec0\u4e48\u542b\u610f\uff1f", "\n\u8868\u793a\u5e38\u91cf\u4e0d\u53ef\u4ee5\u4fee\u6539\u7684\u53d8\u91cf\u3002", "\n5\u3001\u5173\u952e\u5b57volatile\u6709\u4ec0\u4e48\u542b\u610f\uff1f\u5e76\u4e3e\u51fa\u4e09\u4e2a\u4e0d\u540c\u7684\u4f8b\u5b50\uff1f", "\n\u63d0\u793a\u7f16\u8bd1\u5668\u5bf9\u8c61\u7684\u503c\u53ef\u80fd\u5728\u7f16\u8bd1\u5668\u672a\u76d1\u6d4b\u5230\u7684\u60c5\u51b5\u4e0b\u6539\u53d8\u3002", "int (*s[10])(int) \u8868\u793a\u7684\u662f\u4ec0\u4e48\u554a", "\nint (*s[10])(int) \u51fd\u6570\u6307\u9488\u6570\u7ec4\uff0c\u6bcf\u4e2a\u6307\u9488\u6307\u5411\u4e00\u4e2aint func(int param)\u7684\u51fd\u6570\u3002", "1.\u6709\u4ee5\u4e0b\u8868\u8fbe\u5f0f\uff1a", "\nint a=248; b=4;int const c=21;const int *d=&a;", "\nint *const e=&b;int const *f const =&a;", "\n\u8bf7\u95ee\u4e0b\u5217\u8868\u8fbe\u5f0f\u54ea\u4e9b\u4f1a\u88ab\u7f16\u8bd1\u5668\u7981\u6b62\uff1f\u4e3a\u4ec0\u4e48\uff1f", "\n*c=32;d=&b;*d=43;e=34;e=&a;f=0x321f;", "\n*c \u8fd9\u662f\u4e2a\u4ec0\u4e48\u4e1c\u4e1c\uff0c\u7981\u6b62", "\n*d \u8bf4\u4e86\u662fconst\uff0c \u7981\u6b62", "\ne = &a \u8bf4\u4e86\u662fconst \u7981\u6b62", "\nconst *f const =&a; \u7981\u6b62", "\n2.\u4ea4\u6362\u4e24\u4e2a\u53d8\u91cf\u7684\u503c\uff0c\u4e0d\u4f7f\u7528\u7b2c\u4e09\u4e2a\u53d8\u91cf\u3002\u5373a=3,b=5,\u4ea4\u6362\u4e4b\u540ea=5,b=3;", "\n\u6709\u4e24\u79cd\u89e3\u6cd5, \u4e00\u79cd\u7528\u7b97\u672f\u7b97\u6cd5, \u4e00\u79cd\u7528^(\u5f02\u6216)", "\na = a + b;", "\nb = a \u2013 b;", "\na = a \u2013 b;", "\nor", "\na = a^b;// \u53ea\u80fd\u5bf9int,char..", "\nb = a^b;", "\na = a^b;", "\nor", "\na ^= b ^= a;", "\n3.c\u548cc++\u4e2d\u7684struct\u6709\u4ec0\u4e48\u4e0d\u540c\uff1f", "\nc\u548cc++\u4e2dstruct\u7684\u4e3b\u8981\u533a\u522b\u662fc\u4e2d\u7684struct\u4e0d\u53ef\u4ee5\u542b\u6709\u6210\u5458\u51fd\u6570\uff0c\u800cc++\u4e2d\u7684struct\u53ef\u4ee5\u3002c++\u4e2dstruct\u548cclass\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u9ed8\u8ba4\u7684\u5b58\u53d6\u6743\u9650\u4e0d\u540c\uff0cstruct\u9ed8\u8ba4\u4e3apublic\uff0c\u800cclass\u9ed8\u8ba4\u4e3aprivate", "\n4.#include", "\n#include", "\nvoid getmemory(char *p)", "\n{", "\np=(char *) malloc(100);", "\nstrcpy(p,\u201dhello world\u201d);", "\n}", "\nint main( )", "\n{", "\nchar *str=NULL;", "\ngetmemory(str);", "\nprintf(\u201c%s/n\u201d,str);", "\nfree(str);", "\nreturn 0;", "\n}", "\n\u7a0b\u5e8f\u5d29\u6e83\uff0cgetmemory\u4e2d\u7684malloc \u4e0d\u80fd\u8fd4\u56de\u52a8\u6001\u5185\u5b58\uff0c free\uff08\uff09\u5bf9str\u64cd\u4f5c\u5f88\u5371\u9669", "\n5.char szstr[10];", "\nstrcpy(szstr,\u201d0123456789\u2033);", "\n\u4ea7\u751f\u4ec0\u4e48\u7ed3\u679c\uff1f\u4e3a\u4ec0\u4e48\uff1f", "\n\u957f\u5ea6\u4e0d\u4e00\u6837\uff0c\u4f1a\u9020\u6210\u975e\u6cd5\u7684OS", "\n6.\u5217\u4e3e\u51e0\u79cd\u8fdb\u7a0b\u7684\u540c\u6b65\u673a\u5236\uff0c\u5e76\u6bd4\u8f83\u5176\u4f18\u7f3a\u70b9\u3002", "\n\u539f\u5b50\u64cd\u4f5c", "\n\u4fe1\u53f7\u91cf\u673a\u5236", "\n\u81ea\u65cb\u9501", "\n\u7ba1\u7a0b\uff0c\u4f1a\u5408\uff0c\u5206\u5e03\u5f0f\u7cfb\u7edf", "7.\u8fdb\u7a0b\u4e4b\u95f4\u901a\u4fe1\u7684\u9014\u5f84", "\n\u5171\u4eab\u5b58\u50a8\u7cfb\u7edf", "\n\u6d88\u606f\u4f20\u9012\u7cfb\u7edf", "\n\u7ba1\u9053\uff1a\u4ee5\u6587\u4ef6\u7cfb\u7edf\u4e3a\u57fa\u7840", "\n11.\u8fdb\u7a0b\u6b7b\u9501\u7684\u539f\u56e0", "\n\u8d44\u6e90\u7ade\u4e89\u53ca\u8fdb\u7a0b\u63a8\u8fdb\u987a\u5e8f\u975e\u6cd5", "\n12.\u6b7b\u9501\u76844\u4e2a\u5fc5\u8981\u6761\u4ef6", "\n\u4e92\u65a5\u3001\u8bf7\u6c42\u4fdd\u6301\u3001\u4e0d\u53ef\u5265\u593a\u3001\u73af\u8def", "\n13.\u6b7b\u9501\u7684\u5904\u7406", "\n\u9e35\u9e1f\u7b56\u7565\u3001\u9884\u9632\u7b56\u7565\u3001\u907f\u514d\u7b56\u7565\u3001\u68c0\u6d4b\u4e0e\u89e3\u9664\u6b7b\u9501", "\n15. \u64cd\u4f5c\u7cfb\u7edf\u4e2d\u8fdb\u7a0b\u8c03\u5ea6\u7b56\u7565\u6709\u54ea\u51e0\u79cd\uff1f", "\nFCFS(\u5148\u6765\u5148\u670d\u52a1)\uff0c\u4f18\u5148\u7ea7\uff0c\u65f6\u95f4\u7247\u8f6e\u8f6c\uff0c\u591a\u7ea7\u53cd\u9988", "\n8.\u7c7b\u7684\u9759\u6001\u6210\u5458\u548c\u975e\u9759\u6001\u6210\u5458\u6709\u4f55\u533a\u522b\uff1f", "\n\u7c7b\u7684\u9759\u6001\u6210\u5458\u6bcf\u4e2a\u7c7b\u53ea\u6709\u4e00\u4e2a\uff0c\u975e\u9759\u6001\u6210\u5458\u6bcf\u4e2a\u5bf9\u8c61\u4e00\u4e2a", "\n9.\u7eaf\u865a\u51fd\u6570\u5982\u4f55\u5b9a\u4e49\uff1f\u4f7f\u7528\u65f6\u5e94\u6ce8\u610f\u4ec0\u4e48\uff1f", "\nvirtual void f()=0;", "\n\u662f\u63a5\u53e3\uff0c\u5b50\u7c7b\u5fc5\u987b\u8981\u5b9e\u73b0", "\n10.\u6570\u7ec4\u548c\u94fe\u8868\u7684\u533a\u522b", "\n\u6570\u7ec4\uff1a\u6570\u636e\u987a\u5e8f\u5b58\u50a8\uff0c\u56fa\u5b9a\u5927\u5c0f", "\n\u8fde\u8868\uff1a\u6570\u636e\u53ef\u4ee5\u968f\u673a\u5b58\u50a8\uff0c\u5927\u5c0f\u53ef\u52a8\u6001\u6539\u53d8", "12.ISO\u7684\u4e03\u5c42\u6a21\u578b\u662f\u4ec0\u4e48\uff1ftcp/udp\u662f\u5c5e\u4e8e\u54ea\u4e00\u5c42\uff1ftcp/udp\u6709\u4f55\u4f18\u7f3a\u70b9\uff1f", "\n\u5e94\u7528\u5c42", "\n\u8868\u793a\u5c42", "\n\u4f1a\u8bdd\u5c42", "\n\u8fd0\u8f93\u5c42", "\n\u7f51\u7edc\u5c42", "\n\u7269\u7406\u94fe\u8def\u5c42", "\n\u7269\u7406\u5c42", "\ntcp /udp\u5c5e\u4e8e\u8fd0\u8f93\u5c42", "\nTCP \u670d\u52a1\u63d0\u4f9b\u4e86\u6570\u636e\u6d41\u4f20\u8f93\u3001\u53ef\u9760\u6027\u3001\u6709\u6548\u6d41\u63a7\u5236\u3001\u5168\u53cc\u5de5\u64cd\u4f5c\u548c\u591a\u8def\u590d\u7528\u6280\u672f\u7b49\u3002", "\n\u4e0e TCP \u4e0d\u540c\uff0c UDP \u5e76\u4e0d\u63d0\u4f9b\u5bf9 IP \u534f\u8bae\u7684\u53ef\u9760\u673a\u5236\u3001\u6d41\u63a7\u5236\u4ee5\u53ca\u9519\u8bef\u6062\u590d\u529f\u80fd\u7b49\u3002\u7531\u4e8e UDP \u6bd4\u8f83\u7b80\u5355\uff0c UDP \u5934\u5305\u542b\u5f88\u5c11\u7684\u5b57\u8282\uff0c\u6bd4 TCP \u8d1f\u8f7d\u6d88\u8017\u5c11\u3002", "\ntcp: \u63d0\u4f9b\u7a33\u5b9a\u7684\u4f20\u8f93\u670d\u52a1\uff0c\u6709\u6d41\u91cf\u63a7\u5236\uff0c\u7f3a\u70b9\u662f\u5305\u5934\u5927\uff0c\u5197\u4f59\u6027\u4e0d\u597d", "\nudp: \u4e0d\u63d0\u4f9b\u7a33\u5b9a\u7684\u670d\u52a1\uff0c\u5305\u5934\u5c0f\uff0c\u5f00\u9500\u5c0f", "1\uff1a(void *)ptr \u548c (*(void**))ptr\u7684\u7ed3\u679c\u662f\u5426\u76f8\u540c\uff1f\u5176\u4e2dptr\u4e3a\u540c\u4e00\u4e2a\u6307\u9488", "\n.(void *)ptr \u548c (*(void**))ptr\u503c\u662f\u76f8\u540c\u7684", "\n2\uff1aint main()", "\n{", "\nint x=3;", "\nprintf(\u201c%d\u201d,x);", "\nreturn 1;", "}", "\n\u95ee\u51fd\u6570\u65e2\u7136\u4e0d\u4f1a\u88ab\u5176\u5b83\u51fd\u6570\u8c03\u7528\uff0c\u4e3a\u4ec0\u4e48\u8981\u8fd4\u56de1\uff1f", "\nmian\u4e2d\uff0cc\u6807\u51c6\u8ba4\u4e3a0\u8868\u793a\u6210\u529f\uff0c\u975e0\u8868\u793a\u9519\u8bef\u3002\u5177\u4f53\u7684\u503c\u662f\u67d0\u4e2d\u5177\u4f53\u51fa\u9519\u4fe1\u606f", "1\uff0c\u8981\u5bf9\u7edd\u5bf9\u5730\u57400\u00d7100000\u8d4b\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u7528", "\n(unsigned int*)0\u00d7100000 = 1234;", "\n\u90a3\u4e48\u8981\u662f\u60f3\u8ba9\u7a0b\u5e8f\u8df3\u8f6c\u5230\u7edd\u5bf9\u5730\u5740\u662f0\u00d7100000\u53bb\u6267\u884c\uff0c\u5e94\u8be5\u600e\u4e48\u505a\uff1f", "\n*((void (*)( ))0\u00d7100000 ) ( );", "\n\u9996\u5148\u8981\u5c060\u00d7100000\u5f3a\u5236\u8f6c\u6362\u6210\u51fd\u6570\u6307\u9488,\u5373:", "\n(void (*)())0\u00d7100000", "\n\u7136\u540e\u518d\u8c03\u7528\u5b83:", "\n*((void (*)())0\u00d7100000)();", "\n\u7528typedef\u53ef\u4ee5\u770b\u5f97\u66f4\u76f4\u89c2\u4e9b:", "\ntypedef void(*)() voidFuncPtr;", "\n*((voidFuncPtr)0\u00d7100000)();", "\n2\uff0c\u5df2\u77e5\u4e00\u4e2a\u6570\u7ec4table\uff0c\u7528\u4e00\u4e2a\u5b8f\u5b9a\u4e49\uff0c\u6c42\u51fa\u6570\u636e\u7684\u5143\u7d20\u4e2a\u6570", "\n#define NTBL", "\n#define NTBL (sizeof(table)/sizeof(table[0]))", "\u9762\u8bd5\u9898: \u7ebf\u7a0b\u4e0e\u8fdb\u7a0b\u7684\u533a\u522b\u548c\u8054\u7cfb? \u7ebf\u7a0b\u662f\u5426\u5177\u6709\u76f8\u540c\u7684\u5806\u6808? dll\u662f\u5426\u6709\u72ec\u7acb\u7684\u5806\u6808?", "\n\u8fdb\u7a0b\u662f\u6b7b\u7684\uff0c\u53ea\u662f\u4e00\u4e9b\u8d44\u6e90\u7684\u96c6\u5408\uff0c\u771f\u6b63\u7684\u7a0b\u5e8f\u6267\u884c\u90fd\u662f\u7ebf\u7a0b\u6765\u5b8c\u6210\u7684\uff0c\u7a0b\u5e8f\u542f\u52a8\u7684\u65f6\u5019\u64cd\u4f5c\u7cfb\u7edf\u5c31\u5e2e\u4f60\u521b\u5efa\u4e86\u4e00\u4e2a\u4e3b\u7ebf\u7a0b\u3002", "\u6bcf\u4e2a\u7ebf\u7a0b\u6709\u81ea\u5df1\u7684\u5806\u6808\u3002", "\nDLL \u4e2d\u6709\u6ca1\u6709\u72ec\u7acb\u7684\u5806\u6808\uff0c\u8fd9\u4e2a\u95ee\u9898\u4e0d\u597d\u56de\u7b54\uff0c\u6216\u8005\u8bf4\u8fd9\u4e2a\u95ee\u9898\u672c\u8eab\u662f\u5426\u6709\u95ee\u9898\u3002\u56e0\u4e3aDLL\u4e2d\u7684\u4ee3\u7801\u662f\u88ab\u67d0\u4e9b\u7ebf\u7a0b\u6240\u6267\u884c\uff0c\u53ea\u6709\u7ebf\u7a0b\u62e5\u6709\u5806\u6808\uff0c\u5982\u679cDLL\u4e2d\u7684\u4ee3\u7801\u662f EXE\u4e2d\u7684\u7ebf\u7a0b\u6240\u8c03\u7528\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u662f\u4e0d\u662f\u8bf4\u8fd9\u4e2aDLL\u6ca1\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u5806\u6808\uff1f\u5982\u679cDLL\u4e2d\u7684\u4ee3\u7801\u662f\u7531DLL\u81ea\u5df1\u521b\u5efa\u7684\u7ebf\u7a0b\u6240\u6267\u884c\uff0c\u90a3\u4e48\u662f\u4e0d\u662f\u8bf4DLL\u6709\u72ec\u7acb\u7684\u5806\u6808\uff1f", "\u4ee5\u4e0a\u8bb2\u7684\u662f\u5806\u6808\uff0c\u5982\u679c\u5bf9\u4e8e\u5806\u6765\u8bf4\uff0c\u6bcf\u4e2aDLL\u6709\u81ea\u5df1\u7684\u5806\uff0c\u6240\u4ee5\u5982\u679c\u662f\u4eceDLL\u4e2d\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\uff0c\u6700\u597d\u662f\u4eceDLL\u4e2d\u5220\u9664\uff0c\u5982\u679c\u4f60\u4eceDLL\u4e2d\u5206\u914d\u5185\u5b58\uff0c\u7136\u540e\u5728EXE\u4e2d\uff0c\u6216\u8005\u53e6\u5916\u4e00\u4e2aDLL\u4e2d\u5220\u9664\uff0c\u5f88\u6709\u53ef\u80fd\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83", "unsigned short A = 10;", "\nprintf(\u201c~A = %u\\n\u201d, ~A);", "char c=128;", "\nprintf(\u201cc=%d\\n\u201d,c);", "\u8f93\u51fa\u591a\u5c11\uff1f\u5e76\u5206\u6790\u8fc7\u7a0b", "\n\u7b2c\u4e00\u9898\uff0c\uff5eA \uff1d0xfffffff5,int\u503c \u4e3a\uff0d11\uff0c\u4f46\u8f93\u51fa\u7684\u662fuint\u3002\u6240\u4ee5\u8f93\u51fa4294967285", "\n\u7b2c\u4e8c\u9898\uff0cc\uff1d0\u00d710,\u8f93\u51fa\u7684\u662fint\uff0c\u6700\u9ad8\u4f4d\u4e3a1\uff0c\u662f\u8d1f\u6570\uff0c\u6240\u4ee5\u5b83\u7684\u503c\u5c31\u662f0\u00d700\u7684\u8865\u7801\u5c31\u662f128\uff0c\u6240\u4ee5\u8f93\u51fa\uff0d128\u3002", "\n\u8fd9\u4e24\u9053\u9898\u90fd\u662f\u5728\u8003\u5bdf\u4e8c\u8fdb\u5236\u5411int\u6216uint\u8f6c\u6362\u65f6\u7684\u6700\u9ad8\u4f4d\u5904\u7406\u3002", "\u5206\u6790\u4e0b\u9762\u7684\u7a0b\u5e8f\uff1a", "\nvoid GetMemory(char **p,int num)", "\n{", "\n*p=(char *)malloc(num);", "}", "\nint main()", "\n{", "\nchar *str=NULL;", "GetMemory(&str,100);", "strcpy(str,\u201dhello\u201d);", "free(str);", "if(str!=NULL)", "\n{", "\nstrcpy(str,\u201dworld\u201d);", "\n}", "printf(\u201c\\n str is %s\u201d,str);", "\ngetchar();", "\n}", "\n\u95ee\u8f93\u51fa\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f\u5e0c\u671b\u5927\u5bb6\u80fd\u8bf4\u8bf4\u539f\u56e0\uff0c\u5148\u8c22\u8c22\u4e86", "\n\u8f93\u51fastr is world\u3002", "\nfree \u53ea\u662f\u91ca\u653e\u7684str\u6307\u5411\u7684\u5185\u5b58\u7a7a\u95f4,\u5b83\u672c\u8eab\u7684\u503c\u8fd8\u662f\u5b58\u5728\u7684.", "\n\u6240\u4ee5free\u4e4b\u540e\uff0c\u6709\u4e00\u4e2a\u597d\u7684\u4e60\u60ef\u5c31\u662f\u5c06str=NULL.", "\n\u6b64\u65f6str\u6307\u5411\u7a7a\u95f4\u7684\u5185\u5b58\u5df2\u88ab\u56de\u6536,\u5982\u679c\u8f93\u51fa\u8bed\u53e5\u4e4b\u524d\u8fd8\u5b58\u5728\u5206\u914d\u7a7a\u95f4\u7684\u64cd\u4f5c\u7684\u8bdd,\u8fd9\u6bb5\u5b58\u50a8\u7a7a\u95f4\u662f\u53ef\u80fd\u88ab\u91cd\u65b0\u5206\u914d\u7ed9\u5176\u4ed6\u53d8\u91cf\u7684,", "\n\u5c3d\u7ba1\u8fd9\u6bb5\u7a0b\u5e8f\u786e\u5b9e\u662f\u5b58\u5728\u5927\u5927\u7684\u95ee\u9898\uff08\u4e0a\u9762\u5404\u4f4d\u5df2\u7ecf\u8bf4\u5f97\u5f88\u6e05\u695a\u4e86\uff09\uff0c\u4f46\u662f\u901a\u5e38\u4f1a\u6253\u5370\u51faworld\u6765\u3002", "\n\u8fd9\u662f\u56e0\u4e3a\uff0c\u8fdb\u7a0b\u4e2d\u7684\u5185\u5b58\u7ba1\u7406\u4e00\u822c\u4e0d\u662f\u7531\u64cd\u4f5c\u7cfb\u7edf\u5b8c\u6210\u7684\uff0c\u800c\u662f\u7531\u5e93\u51fd\u6570\u81ea\u5df1\u5b8c\u6210\u7684\u3002", "\n\u5f53\u4f60malloc\u4e00\u5757\u5185\u5b58\u7684\u65f6\u5019\uff0c\u7ba1\u7406\u5e93\u5411\u64cd\u4f5c\u7cfb\u7edf\u7533\u8bf7\u4e00\u5757\u7a7a\u95f4\uff08\u53ef\u80fd\u4f1a\u6bd4\u4f60\u7533\u8bf7\u7684\u5927\u4e00\u4e9b\uff09\uff0c\u7136\u540e\u5728\u8fd9\u5757\u7a7a\u95f4\u4e2d\u8bb0\u5f55\u4e00\u4e9b\u7ba1\u7406\u4fe1\u606f\uff08\u4e00\u822c\u662f\u5728\u4f60\u7533\u8bf7\u7684\u5185\u5b58\u524d\u9762\u4e00\u70b9\uff09\uff0c\u5e76\u5c06\u53ef\u7528\u5185\u5b58\u7684\u5730\u5740\u8fd4\u56de\u3002\u4f46\u662f\u91ca\u653e\u5185\u5b58\u7684\u65f6\u5019\uff0c\u7ba1\u7406\u5e93\u901a\u5e38\u90fd\u4e0d\u4f1a\u5c06\u5185\u5b58\u8fd8\u7ed9\u64cd\u4f5c\u7cfb\u7edf\uff0c\u56e0\u6b64\u4f60\u662f\u53ef\u4ee5\u7ee7\u7eed\u8bbf\u95ee\u8fd9\u5757\u5730\u5740\u7684\uff0c\u53ea\u4e0d\u8fc7\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u697c\u4e0a\u90fd\u8bf4\u8fc7\u4e86\uff0c\u6700\u597d\u522b\u8fd9\u4e48\u5e72\u3002", "char a[10],strlen(a)\u4e3a\u4ec0\u4e48\u7b49\u4e8e15\uff1f\u8fd0\u884c\u7684\u7ed3\u679c", "#include \u201cstdio.h\u201d", "\n#include \u201cstring.h\u201d", "void main()", "\n{", "char aa[10];", "\nprintf(\u201c%d\u201d,strlen(aa));", "\n}", "sizeof()\u548c\u521d\u4e0d\u521d\u59cb\u5316\uff0c\u6ca1\u6709\u5173\u7cfb\uff1b", "\nstrlen()\u548c\u521d\u59cb\u5316\u6709\u5173\u3002", "char (*str)[20];/*str\u662f\u4e00\u4e2a\u6570\u7ec4\u6307\u9488\uff0c\u5373\u6307\u5411\u6570\u7ec4\u7684\u6307\u9488\uff0e*/", "\nchar *str[20];/*str\u662f\u4e00\u4e2a\u6307\u9488\u6570\u7ec4\uff0c\u5176\u5143\u7d20\u4e3a\u6307\u9488\u578b\u6570\u636e\uff0e*/", "long a=0\u00d7801010;", "\na+5=?", "\n0\u00d7801010\u7528\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a\uff1a\u201c1000 0000 0001 0000 0001 0000\u201d\uff0c\u5341\u8fdb\u5236\u7684\u503c\u4e3a8392720\uff0c\u518d\u52a0\u4e0a5\u5c31\u662f8392725\u7f57", "\n1)\u7ed9\u5b9a\u7ed3\u6784struct A", "\n{", "\nchar t:4;", "\nchar k:4;", "\nunsigned short i:8;", "\nunsigned long m;", "\n};\u95eesizeof(A) = ?", "\n\u7ed9\u5b9a\u7ed3\u6784struct A", "\n{", "\nchar t:4; 4\u4f4d", "\nchar k:4; 4\u4f4d", "\nunsigned short i:8; 8\u4f4d", "\nunsigned long m; // \u504f\u79fb2\u5b57\u8282\u4fdd\u8bc14\u5b57\u8282\u5bf9\u9f50", "\n}; // \u51718\u5b57\u8282", "\n2)\u4e0b\u9762\u7684\u51fd\u6570\u5b9e\u73b0\u5728\u4e00\u4e2a\u6570\u4e0a\u52a0\u4e00\u4e2a\u6570\uff0c\u6709\u4ec0\u4e48\u9519\u8bef\uff1f\u8bf7\u6539\u6b63\u3002", "\nint add_n ( int n )", "\n{", "\nstatic int i = 100;", "\ni += n;", "\nreturn i;", "\n}", "\n\u5f53\u4f60\u7b2c\u4e8c\u6b21\u8c03\u7528\u65f6\u5f97\u4e0d\u5230\u6b63\u786e\u7684\u7ed3\u679c\uff0c\u96be\u9053\u4f60\u5199\u4e2a\u51fd\u6570\u5c31\u662f\u4e3a\u4e86\u8c03\u7528\u4e00\u6b21\uff1f\u95ee\u9898\u5c31\u51fa\u5728 static\u4e0a\uff1f", "// \u5e2e\u5fd9\u5206\u6790\u4e00\u4e0b", "\n#include", "\n#include", "\n#include", "\n#include", "\n#include", "\n#include", "\ntypedef struct AA", "\n{", "\nint b1:5;", "\nint b2:2;", "\n}AA;", "\nvoid main()", "\n{", "\nAA aa;", "\nchar cc[100];", "\nstrcpy(cc,\u201d0123456789abcdefghijklmnopqrstuvwxyz\u201d);", "\nmemcpy(&aa,cc,sizeof(AA));", "\ncout \ncout \n}", "\n\u7b54\u6848\u662f -16\u548c\uff11", "\n\u9996\u5148sizeof(AA)\u7684\u5927\u5c0f\u4e3a4,b1\u548cb2\u5206\u522b\u53605bit\u548c2bit.", "\n\u7ecf\u8fc7strcpy\u548cmemcpy\u540e,aa\u76844\u4e2a\u5b57\u8282\u6240\u5b58\u653e\u7684\u503c\u662f:", "\n0,1,2,3\u7684ASC\u7801\uff0c\u537300110000,00110001,00110010,00110011", "\n\u6240\u4ee5\uff0c\u6700\u540e\u4e00\u6b65\uff1a\u663e\u793a\u7684\u662f\u8fd9\uff14\u4e2a\u5b57\u8282\u7684\u524d\uff15\u4f4d\uff0c\u548c\u4e4b\u540e\u7684\uff12\u4f4d", "\n\u5206\u522b\u4e3a\uff1a10000,\u548c01", "\n\u56e0\u4e3aint\u662f\u6709\u6b63\u8d1f\u4e4b\u5206\u3000\u3000\u6240\u4ee5\uff1a\u7b54\u6848\u662f-16\u548c\uff11", "\u6c42\u51fd\u6570\u8fd4\u56de\u503c\uff0c\u8f93\u5165x=9999;", "\nint func \uff08 x \uff09", "\n{", "\nint countx = 0;", "\nwhile ( x )", "\n{", "\ncountx ++;", "\nx = x&(x-1);", "\n}", "\nreturn countx;", "\n}", "\n\u7ed3\u679c\u5462\uff1f", "\n\u77e5\u9053\u4e86\u8fd9\u662f\u7edf\u8ba19999\u7684\u4e8c\u8fdb\u5236\u6570\u503c\u4e2d\u6709\u591a\u5c11\u4e2a1\u7684\u51fd\u6570\uff0c\u4e14\u6709", "\n9999\uff1d9\u00d71024\uff0b512\uff0b256\uff0b15", "9\u00d71024\u4e2d\u542b\u67091\u7684\u4e2a\u6570\u4e3a2\uff1b", "\n512\u4e2d\u542b\u67091\u7684\u4e2a\u6570\u4e3a1\uff1b", "\n256\u4e2d\u542b\u67091\u7684\u4e2a\u6570\u4e3a1\uff1b", "\n15\u4e2d\u542b\u67091\u7684\u4e2a\u6570\u4e3a4\uff1b", "\n\u6545\u5171\u67091\u7684\u4e2a\u6570\u4e3a8\uff0c\u7ed3\u679c\u4e3a8\u3002", "\n1000 - 1 = 0111\uff0c\u6b63\u597d\u662f\u539f\u6570\u53d6\u53cd\u3002\u8fd9\u5c31\u662f\u539f\u7406\u3002", "\n\u7528\u8fd9\u79cd\u65b9\u6cd5\u6765\u6c421\u7684\u4e2a\u6570\u662f\u5f88\u6548\u7387\u5f88\u9ad8\u7684\u3002", "\n\u4e0d\u5fc5\u53bb\u4e00\u4e2a\u4e00\u4e2a\u5730\u79fb\u4f4d\u3002\u5faa\u73af\u6b21\u6570\u6700\u5c11\u3002", "int a,b,c \u8bf7\u5199\u51fd\u6570\u5b9e\u73b0C=a+b ,\u4e0d\u53ef\u4ee5\u6539\u53d8\u6570\u636e\u7c7b\u578b,\u5982\u5c06c\u6539\u4e3along int,\u5173\u952e\u662f\u5982\u4f55\u5904\u7406\u6ea2\u51fa\u95ee\u9898", "\nbool add (int a, int b,int *c)", "\n{", "\n*c=a+b;", "\nreturn (a>0 && b>0 &&(*ca || *c>b)));", "\n}", "\u5206\u6790\uff1a", "\nstruct bit", "\n{ int a:3;", "\nint b:2;", "\nint c:3;", "\n};", "\nint main()", "\n{", "\nbit s;", "\nchar *c=(char*)&s;", "\ncout\n*c=0x99;", "\ncout \nint a=-1;", "\nprintf(\"%x\",a);", "\nreturn 0;", "\n}", "\n\u8f93\u51fa\u4e3a\u4ec0\u4e48\u662f", "\n4", "\n1", "\n-1", "\n-4", "\nffffffff", "\n\u56e0\u4e3a0x99\u5728\u5185\u5b58\u4e2d\u8868\u793a\u4e3a 100 11 001 , a = 001, b = 11, c = 100", "\n\u5f53c\u4e3a\u6709\u7b26\u5408\u6570\u65f6, c = 100, \u6700\u9ad81\u4e3a\u8868\u793ac\u4e3a\u8d1f\u6570\uff0c\u8d1f\u6570\u5728\u8ba1\u7b97\u673a\u7528\u8865\u7801\u8868\u793a\uff0c\u6240\u4ee5c = -4;\u540c\u7406", "\nb = -1;", "\n\u5f53c\u4e3a\u6709\u7b26\u5408\u6570\u65f6, c = 100,\u5373 c = 4,\u540c\u7406 b = 3", "\u4f4d\u57df \uff1a", "\n\u6709\u4e9b\u4fe1\u606f\u5728\u5b58\u50a8\u65f6\uff0c\u5e76\u4e0d\u9700\u8981\u5360\u7528\u4e00\u4e2a\u5b8c\u6574\u7684\u5b57\u8282\uff0c \u800c\u53ea\u9700\u5360\u51e0\u4e2a\u6216\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u3002\u4f8b\u5982\u5728\u5b58\u653e\u4e00\u4e2a\u5f00\u5173\u91cf\u65f6\uff0c\u53ea\u67090\u548c1 \u4e24\u79cd\u72b6\u6001\uff0c\u7528\u4e00\u4f4d\u4e8c\u8fdb\u4f4d\u5373\u53ef\u3002\u4e3a\u4e86\u8282\u7701\u5b58\u50a8\u7a7a\u95f4\uff0c\u5e76\u4f7f\u5904\u7406\u7b80\u4fbf\uff0c\uff23\u8bed\u8a00\u53c8\u63d0\u4f9b\u4e86\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u79f0\u4e3a\u201c\u4f4d\u57df\u201d\u6216\u201c\u4f4d\u6bb5\u201d\u3002\u6240\u8c13\u201c\u4f4d\u57df\u201d\u662f\u628a\u4e00\u4e2a\u5b57\u8282\u4e2d\u7684\u4e8c\u8fdb\u4f4d\u5212\u5206\u4e3a\u51e0\u4e2a\u4e0d\u540c\u7684\u533a\u57df\uff0c \u5e76\u8bf4\u660e\u6bcf\u4e2a\u533a\u57df\u7684\u4f4d\u6570\u3002\u6bcf\u4e2a\u57df\u6709\u4e00\u4e2a\u57df\u540d\uff0c\u5141\u8bb8\u5728\u7a0b\u5e8f\u4e2d\u6309\u57df\u540d\u8fdb\u884c\u64cd\u4f5c\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u628a\u51e0\u4e2a\u4e0d\u540c\u7684\u5bf9\u8c61\u7528\u4e00\u4e2a\u5b57\u8282\u7684\u4e8c\u8fdb\u5236\u4f4d\u57df\u6765\u8868\u793a\u3002\u4e00\u3001\u4f4d\u57df\u7684\u5b9a\u4e49\u548c\u4f4d\u57df\u53d8\u91cf\u7684\u8bf4\u660e\u4f4d\u57df\u5b9a\u4e49\u4e0e\u7ed3\u6784\u5b9a\u4e49\u76f8\u4eff\uff0c\u5176\u5f62\u5f0f\u4e3a\uff1a", "\nstruct \u4f4d\u57df\u7ed3\u6784\u540d", "\n{ \u4f4d\u57df\u5217\u8868 };", "\n\u5176\u4e2d\u4f4d\u57df\u5217\u8868\u7684\u5f62\u5f0f\u4e3a\uff1a \u7c7b\u578b\u8bf4\u660e\u7b26 \u4f4d\u57df\u540d\uff1a\u4f4d\u57df\u957f\u5ea6", "\n\u4f8b\u5982\uff1a", "\nstruct bs", "\n{", "\nint a:8;", "\nint b:2;", "\nint c:6;", "\n};", "\n\u4f4d\u57df\u53d8\u91cf\u7684\u8bf4\u660e\u4e0e\u7ed3\u6784\u53d8\u91cf\u8bf4\u660e\u7684\u65b9\u5f0f\u76f8\u540c\u3002 \u53ef\u91c7\u7528\u5148\u5b9a\u4e49\u540e\u8bf4\u660e\uff0c\u540c\u65f6\u5b9a\u4e49\u8bf4\u660e\u6216\u8005\u76f4\u63a5\u8bf4\u660e\u8fd9\u4e09\u79cd\u65b9\u5f0f\u3002\u4f8b\u5982\uff1a", "\nstruct bs", "\n{", "\nint a:8;", "\nint b:2;", "\nint c:6;", "\n}data;", "\n\u8bf4\u660edata\u4e3abs\u53d8\u91cf\uff0c\u5171\u5360\u4e24\u4e2a\u5b57\u8282\u3002\u5176\u4e2d\u4f4d\u57dfa\u53608\u4f4d\uff0c\u4f4d\u57dfb\u53602\u4f4d\uff0c\u4f4d\u57dfc\u53606\u4f4d\u3002\u5bf9\u4e8e\u4f4d\u57df\u7684\u5b9a\u4e49\u5c1a\u6709\u4ee5\u4e0b\u51e0\u70b9\u8bf4\u660e\uff1a", "1. \u4e00\u4e2a\u4f4d\u57df\u5fc5\u987b\u5b58\u50a8\u5728\u540c\u4e00\u4e2a\u5b57\u8282\u4e2d\uff0c\u4e0d\u80fd\u8de8\u4e24\u4e2a\u5b57\u8282\u3002\u5982\u4e00\u4e2a\u5b57\u8282\u6240\u5269\u7a7a\u95f4\u4e0d\u591f\u5b58\u653e\u53e6\u4e00\u4f4d\u57df\u65f6\uff0c\u5e94\u4ece\u4e0b\u4e00\u5355\u5143\u8d77\u5b58\u653e\u8be5\u4f4d\u57df\u3002\u4e5f\u53ef\u4ee5\u6709\u610f\u4f7f\u67d0\u4f4d\u57df\u4ece\u4e0b\u4e00\u5355\u5143\u5f00\u59cb\u3002\u4f8b\u5982\uff1a", "\nstruct bs", "\n{", "\nunsigned a:4", "\nunsigned :0 /*\u7a7a\u57df*/", "\nunsigned b:4 /*\u4ece\u4e0b\u4e00\u5355\u5143\u5f00\u59cb\u5b58\u653e*/", "\nunsigned c:4", "\n}", "\n\u5728\u8fd9\u4e2a\u4f4d\u57df\u5b9a\u4e49\u4e2d\uff0ca\u5360\u7b2c\u4e00\u5b57\u8282\u76844\u4f4d\uff0c\u540e4\u4f4d\u586b0\u8868\u793a\u4e0d\u4f7f\u7528\uff0cb\u4ece\u7b2c\u4e8c\u5b57\u8282\u5f00\u59cb\uff0c\u5360\u75284\u4f4d\uff0cc\u5360\u75284\u4f4d\u3002", "2. \u7531\u4e8e\u4f4d\u57df\u4e0d\u5141\u8bb8\u8de8\u4e24\u4e2a\u5b57\u8282\uff0c\u56e0\u6b64\u4f4d\u57df\u7684\u957f\u5ea6\u4e0d\u80fd\u5927\u4e8e\u4e00\u4e2a\u5b57\u8282\u7684\u957f\u5ea6\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e0d\u80fd\u8d85\u8fc78\u4f4d\u4e8c\u8fdb\u4f4d\u3002", "3. \u4f4d\u57df\u53ef\u4ee5\u65e0\u4f4d\u57df\u540d\uff0c\u8fd9\u65f6\u5b83\u53ea\u7528\u6765\u4f5c\u586b\u5145\u6216\u8c03\u6574\u4f4d\u7f6e\u3002\u65e0\u540d\u7684\u4f4d\u57df\u662f\u4e0d\u80fd\u4f7f\u7528\u7684\u3002\u4f8b\u5982\uff1a", "\nstruct k", "\n{", "\nint a:1", "\nint :2 /*\u8be52\u4f4d\u4e0d\u80fd\u4f7f\u7528*/", "\nint b:3", "\nint c:2", "\n};", "\n\u4ece\u4ee5\u4e0a\u5206\u6790\u53ef\u4ee5\u770b\u51fa\uff0c\u4f4d\u57df\u5728\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u79cd\u7ed3\u6784\u7c7b\u578b\uff0c \u4e0d\u8fc7\u5176\u6210\u5458\u662f\u6309\u4e8c\u8fdb\u4f4d\u5206\u914d\u7684\u3002", "\u4e8c\u3001\u4f4d\u57df\u7684\u4f7f\u7528\u4f4d\u57df\u7684\u4f7f\u7528\u548c\u7ed3\u6784\u6210\u5458\u7684\u4f7f\u7528\u76f8\u540c\uff0c\u5176\u4e00\u822c\u5f62\u5f0f\u4e3a\uff1a \u4f4d\u57df\u53d8\u91cf\u540d\u2022\u4f4d\u57df\u540d \u4f4d\u57df\u5141\u8bb8\u7528\u5404\u79cd\u683c\u5f0f\u8f93\u51fa\u3002", "\nmain(){", "\nstruct bs", "\n{", "\nunsigned a:1;", "\nunsigned b:3;", "\nunsigned c:4;", "\n} bit,*pbit;", "\nbit.a=1;", "\nbit.b=7;", "\nbit.c=15;", "\npri", "\u6539\u9519\uff1a", "\n#include ", "int main(void) {", "int **p;", "\nint arr[100];", "p = &arr;", "return 0;", "\n}", "\n\u89e3\u7b54\uff1a", "\n\u641e\u9519\u4e86,\u662f\u6307\u9488\u7c7b\u578b\u4e0d\u540c,", "\nint **p; //\u4e8c\u7ea7\u6307\u9488", "\n&arr; //\u5f97\u5230\u7684\u662f\u6307\u5411\u7b2c\u4e00\u7ef4\u4e3a100\u7684\u6570\u7ec4\u7684\u6307\u9488", "\n#include", "\nint main(void) {", "\nint **p, *q;", "\nint arr[100];", "\nq = arr;", "\np = &q;", "\nreturn 0;", "\n}", "\u4e0b\u9762\u8fd9\u4e2a\u7a0b\u5e8f\u6267\u884c\u540e\u4f1a\u6709\u4ec0\u4e48\u9519\u8bef\u6216\u8005\u6548\u679c:", "\n#define MAX 255", "\nint main()", "\n{", "\nunsigned char A[MAX],i;//i\u88ab\u5b9a\u4e49\u4e3aunsigned char", "\nfor (i=0;i\nA[i]=i;", "\n}", "\n\u89e3\u7b54\uff1a\u6b7b\u5faa\u73af\u52a0\u6570\u7ec4\u8d8a\u754c\u8bbf\u95ee\uff08C/C++\u4e0d\u8fdb\u884c\u6570\u7ec4\u8d8a\u754c\u68c0\u67e5\uff09", "\nMAX=255", "\n\u6570\u7ec4A\u7684\u4e0b\u6807\u8303\u56f4\u4e3a:0..MAX-1,\u8fd9\u662f\u5176\u4e00..", "\n\u5176\u4e8c.\u5f53i\u5faa\u73af\u5230255\u65f6,\u5faa\u73af\u5185\u6267\u884c:", "\nA[255]=255;", "\n\u8fd9\u53e5\u672c\u8eab\u6ca1\u6709\u95ee\u9898..\u4f46\u662f\u8fd4\u56defor (i=0;i\n\u7531\u4e8eunsigned char\u7684\u53d6\u503c\u8303\u56f4\u5728(0..255),i++\u4ee5\u540ei\u53c8\u4e3a0\u4e86..\u65e0\u9650\u5faa\u73af\u4e0b\u53bb.", "struct name1{", "\nchar str;", "\nshort x;", "\nint num;", "\n}", "struct name2{", "\nchar str;", "\nint num;", "\nshort x;", "\n}", "sizeof(struct name1)=8,sizeof(struct name2)=12", "\n\u5728\u7b2c\u4e8c\u4e2a\u7ed3\u6784\u4e2d\uff0c\u4e3a\u4fdd\u8bc1num\u6309\u56db\u4e2a\u5b57\u8282\u5bf9\u9f50\uff0cchar\u540e\u5fc5\u987b\u7559\u51fa3\u5b57\u8282\u7684\u7a7a\u95f4\uff1b\u540c\u65f6\u4e3a\u4fdd\u8bc1\u6574\u4e2a\u7ed3\u6784\u7684\u81ea\u7136\u5bf9\u9f50\uff08\u8fd9\u91cc\u662f4\u5b57\u8282\u5bf9\u9f50\uff09\uff0c\u5728x\u540e\u8fd8\u8981\u8865\u9f502\u4e2a\u5b57\u8282\uff0c\u8fd9\u6837\u5c31\u662f12\u5b57\u8282\u3002", "intel\uff1a", "\nA.c \u548cB.c\u4e24\u4e2ac\u6587\u4ef6\u4e2d\u4f7f\u7528\u4e86\u4e24\u4e2a\u76f8\u540c\u540d\u5b57\u7684static\u53d8\u91cf,\u7f16\u8bd1\u7684\u65f6\u5019\u4f1a\u4e0d\u4f1a\u6709\u95ee\u9898?\u8fd9\u4e24\u4e2astatic\u53d8\u91cf\u4f1a\u4fdd\u5b58\u5230\u54ea\u91cc\uff08\u6808\u8fd8\u662f\u5806\u6216\u8005\u5176\u4ed6\u7684\uff09?", "\nstatic\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u8868\u660e\u8fd9\u4e2a\u53d8\u91cf\u4ec5\u5728\u672c\u6a21\u5757\u4e2d\u6709\u610f\u4e49\uff0c\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u6a21\u5757\u3002", "\n\u4ed6\u4eec\u90fd\u653e\u5728\u6570\u636e\u533a\uff0c\u4f46\u662f\u7f16\u8bd1\u5668\u5bf9\u4ed6\u4eec\u7684\u547d\u540d\u662f\u4e0d\u540c\u7684\u3002", "\n\u5982\u679c\u8981\u4f7f\u53d8\u91cf\u5728\u5176\u4ed6\u6a21\u5757\u4e5f\u6709\u610f\u4e49\u7684\u8bdd\uff0c\u9700\u8981\u4f7f\u7528extern\u5173\u952e\u5b57\u3002", "struct s1", "\n{", "\nint i: 8;", "\nint j: 4;", "\nint a: 3;", "\ndouble b;", "\n};", "struct s2", "\n{", "\nint i: 8;", "\nint j: 4;", "\ndouble b;", "\nint a:3;", "\n};", "printf(\"sizeof(s1)= %d\\n\", sizeof(s1));", "\nprintf(\"sizeof(s2)= %d\\n\", sizeof(s2));", "\nresult: 16, 24", "\n\u7b2c\u4e00\u4e2astruct s1", "\n{", "\nint i: 8;", "\nint j: 4;", "\nint a: 3;", "\ndouble b;", "\n};", "\n\u7406\u8bba\u4e0a\u662f\u8fd9\u6837\u7684\uff0c\u9996\u5148\u662fi\u5728\u76f8\u5bf90\u7684\u4f4d\u7f6e\uff0c\u53608\u4f4d\u4e00\u4e2a\u5b57\u8282\uff0c\u7136\u540e\uff0cj\u5c31\u5728\u76f8\u5bf9\u4e00\u4e2a\u5b57\u8282\u7684\u4f4d\u7f6e\uff0c\u7531\u4e8e\u4e00\u4e2a\u4f4d\u7f6e\u7684\u5b57\u8282\u6570\u662f4\u4f4d\u7684\u500d\u6570\uff0c\u56e0\u6b64\u4e0d\u7528\u5bf9\u9f50\uff0c\u5c31\u653e\u5728\u90a3\u91cc\u4e86\uff0c\u7136\u540e\u662fa\uff0c\u8981\u57283\u4f4d\u7684\u500d\u6570\u5173\u7cfb\u7684\u4f4d\u7f6e\u4e0a\uff0c\u56e0\u6b64\u8981\u79fb\u4e00\u4f4d\uff0c\u572815\u4f4d\u7684\u4f4d\u7f6e\u4e0a\u653e\u4e0b\uff0c\u76ee\u524d\u603b\u5171\u662f18\u4f4d\uff0c\u6298\u7b97\u8fc7\u6765\u662f2\u5b57\u82822\u4f4d\u7684\u6837\u5b50\uff0c\u7531\u4e8edouble\u662f8 \u5b57\u8282\u7684\uff0c\u56e0\u6b64\u8981\u5728\u76f8\u5bf90\u8981\u662f8\u4e2a\u5b57\u8282\u7684\u4f4d\u7f6e\u4e0a\u653e\u4e0b\uff0c\u56e0\u6b64\u4ece18\u4f4d\u5f00\u59cb\u52308\u4e2a\u5b57\u8282\u4e4b\u95f4\u7684\u4f4d\u7f6e\u88ab\u5ffd\u7565\uff0c\u76f4\u63a5\u653e\u57288\u5b57\u8282\u7684\u4f4d\u7f6e\u4e86\uff0c\u56e0\u6b64\uff0c\u603b\u5171\u662f16\u5b57\u8282\u3002", "\u7b2c\u4e8c\u4e2a\u6700\u540e\u4f1a\u5bf9\u7167\u662f\u4e0d\u662f\u7ed3\u6784\u4f53\u5185\u6700\u5927\u6570\u636e\u7684\u500d\u6570\uff0c\u4e0d\u662f\u7684\u8bdd\uff0c\u4f1a\u8865\u6210\u662f\u6700\u5927\u6570\u636e\u7684\u500d\u6570", "\n1\uff09\u8bfb\u6587\u4ef6file1.txt\u7684\u5185\u5bb9\uff08\u4f8b\u5982\uff09\uff1a", "\n12", "\n34", "\n56", "\n\u8f93\u51fa\u5230file2.txt\uff1a", "\n56", "\n34", "\n12", "\n\uff08\u9006\u5e8f\uff09", "\n2\uff09\u8f93\u51fa\u548c\u4e3a\u4e00\u4e2a\u7ed9\u5b9a\u6574\u6570\u7684\u6240\u6709\u7ec4\u5408", "\n\u4f8b\u5982n=5", "\n5=1+4\uff1b5=2+3\uff08\u76f8\u52a0\u7684\u6570\u4e0d\u80fd\u91cd\u590d\uff09", "\n\u5219\u8f93\u51fa", "\n1\uff0c4\uff1b2\uff0c3\u3002", "\n\u671b\u9ad8\u624b\u8d50\u6559\uff01\uff01", "\u7b2c\u4e00\u9898,\u6ce8\u610f\u53ef\u589e\u957f\u6570\u7ec4\u7684\u5e94\u7528.", "\n#include", "\n#include ", "int main(void)", "\n{", "\nint MAX = 10;", "\nint *a = (int *)malloc(MAX * sizeof(int));", "\nint *b;", "FILE *fp1;", "\nFILE *fp2;", "fp1 = fopen(\"a.txt\",\"r\");", "\nif(fp1 == NULL)", "\n{printf(\"error1\");", "\nexit(-1);", "\n}", "fp2 = fopen(\"b.txt\",\"w\");", "\nif(fp2 == NULL)", "\n{printf(\"error2\");", "\nexit(-1);", "\n}", "int i = 0;", "\nint j = 0;", "while(fscanf(fp1,\"%d\",&a[i]) != EOF)", "\n{", "\ni++;", "\nj++;", "\nif(i >= MAX)", "\n{", "\nMAX = 2 * MAX;", "\nb = (int*)realloc(a,MAX * sizeof(int));", "\nif(b == NULL)", "\n{", "\nprintf(\u201cerror3\u2033);", "\nexit(-1);", "\n}", "\na = b;", "\n}", "\n}", "for(;\u2013j >= 0;)", "\nfprintf(fp2,\u201d%d\\n\u201d,a[j]);", "fclose(fp1);", "\nfclose(fp2);", "return 0;", "}", "\u7b2c\u4e8c\u9898.", "\n#include ", "int main(void)", "\n{", "\nunsigned long int i,j,k;", "printf(\u201cplease input the number\\n\u201d);", "\nscanf(\u201c%d\u201d,&i);", "\nif( i % 2 == 0)", "\nj = i / 2;", "\nelse", "\nj = i / 2 + 1;", "printf(\u201cThe result is \\n\u201d);", "\nfor(k = 0; k \nprintf(\"%d = %d + %d\\n\",i,k,i - k);", "\nreturn 0;", "\n}", "#include", "\nvoid main()", "\n{", "\nunsigned long int a,i=1;", "\nscanf(\"%d\",&a);", "\nif(a%2==0)", "\n{", "\nfor(i=1;iprintf(\"%d\",a,a-i);", "\n}", "\nelse", "\nfor(i=1;i\nprintf(\" %d, %d\",i,a-i);", "\n}", "\u5144\u5f1f,\u8fd9\u6837\u7684\u9898\u76ee\u82e5\u662f\u505a\u4e0d\u51fa\u6765\u5b9e\u5728\u662f\u6709\u4e9b\u4e0d\u5e94\u8be5, \u7ed9\u4f60\u4e00\u4e2a\u9012\u89c4\u53cd\u5411\u8f93\u51fa\u5b57\u7b26\u4e32\u7684\u4f8b\u5b50,\u53ef\u8c13\u662f\u53cd\u5e8f\u7684\u7ecf\u5178\u4f8b\u7a0b.", "void inverse(char *p)", "\n{", "\nif( *p = = '\\0' )", "\nreturn;", "\ninverse( p+1 );", "\nprintf( \"%c\", *p );", "\n}", "int main(int argc, char *argv[])", "\n{", "\ninverse(\"abc\\0\");", "return 0;", "\n}", "\u501f\u7b7e\u4e86\u697c\u4e0a\u7684\u201c\u9012\u89c4\u53cd\u5411\u8f93\u51fa\u201d", "\n#include", "\nvoid test(FILE *fread, FILE *fwrite)", "\n{", "\nchar buf[1024] = {0};", "\nif (!fgets(buf, sizeof(buf), fread))", "\nreturn;", "\ntest( fread, fwrite );", "\nfputs(buf, fwrite);", "\n}", "\nint main(int argc, char *argv[])", "\n{", "\nFILE *fr = NULL;", "\nFILE *fw = NULL;", "\nfr = fopen(\"data\", \"rb\");", "\nfw = fopen(\"dataout\", \"wb\");", "\ntest(fr, fw);", "\nfclose(fr);", "\nfclose(fw);", "\nreturn 0;", "\n}", "\u5728\u5bf9\u9f50\u4e3a4\u7684\u60c5\u51b5\u4e0b", "\nstruct BBB", "\n{", "\nlong num\uff1b", "\nchar *name;", "\nshort int data;", "\nchar ha;", "\nshort ba[5];", "\n}*p;", "\np=0x1000000;", "\np+0x200=____;", "\n(Ulong)p+0x200=____;", "\n(char*)p+0x200=____;", "\n\u5e0c\u671b\u5404\u4f4d\u8fbe\u4eba\u7ed9\u51fa\u7b54\u6848\u548c\u539f\u56e0\uff0c\u8c22\u8c22\u62c9", "\n\u89e3\u7b54\uff1a\u5047\u8bbe\u572832\u4f4dCPU\u4e0a\uff0c", "\nsizeof(long) = 4 bytes", "\nsizeof(char *) = 4 bytes", "\nsizeof(short int) = sizeof(short) = 2 bytes", "\nsizeof(char) = 1 bytes", "\u7531\u4e8e\u662f4\u5b57\u8282\u5bf9\u9f50\uff0c", "\nsizeof(struct BBB) = sizeof(*p)", "\n= 4 + 4 + 2 + 1 + 1/*\u8865\u9f50*/ + 2*5 + 2/*\u8865\u9f50*/ = 24 bytes (\u7ecfDev-C++\u9a8c\u8bc1)", "p=0x1000000;", "\np+0x200=____;", "\n= 0x1000000 + 0x200*24", "(Ulong)p+0x200=____;", "\n= 0x1000000 + 0x200", "(char*)p+0x200=____;", "\n= 0x1000000 + 0x200*4", "\u4f60\u53ef\u4ee5\u53c2\u8003\u4e00\u4e0b\u6307\u9488\u8fd0\u7b97\u7684\u7ec6\u8282", "\u5199\u4e00\u6bb5\u7a0b\u5e8f\uff0c\u627e\u51fa\u6570\u7ec4\u4e2d\u7b2ck\u5927\u5c0f\u7684\u6570\uff0c\u8f93\u51fa\u6570\u6240\u5728\u7684\u4f4d\u7f6e\u3002\u4f8b\u5982{2\uff0c4\uff0c3\uff0c4\uff0c7}\u4e2d\uff0c\u7b2c\u4e00\u5927\u7684\u6570\u662f7\uff0c\u4f4d\u7f6e\u57284\u3002\u7b2c\u4e8c\u5927\u3001\u7b2c\u4e09\u5927\u7684\u6570\u90fd\u662f4\uff0c\u4f4d\u7f6e\u57281\u3001 3\u968f\u4fbf\u8f93\u51fa\u54ea\u4e00\u4e2a\u5747\u53ef\u3002\u51fd\u6570\u63a5\u53e3\u4e3a\uff1aint find_orderk(const int* narry,const int n,const int k)", "\n\u8981\u6c42\u7b97\u6cd5\u590d\u6742\u5ea6\u4e0d\u80fd\u662fO(n^2\uff09", "\n\u8c22\u8c22\uff01", "\n\u53ef\u4ee5\u5148\u7528\u5feb\u901f\u6392\u5e8f\u8fdb\u884c\u6392\u5e8f\uff0c\u5176\u4e2d\u7528\u53e6\u5916\u4e00\u4e2a\u8fdb\u884c\u5730\u5740\u67e5\u627e", "\n\u4ee3\u7801\u5982\u4e0b\uff0c\u5728VC++6.0\u8fd0\u884c\u901a\u8fc7\u3002\u7ed9\u5206\u5427^-^", "//\u5feb\u901f\u6392\u5e8f", "#include", "usingnamespacestd;", "intPartition (int*L,intlow,int high)", "\n{", "\ninttemp = L[low];", "\nintpt = L[low];", "while (low \n{", "\nwhile (low = pt)", "\n\u2013high;", "\nL[low] = L[high];", "\nwhile (low \n++low;", "\nL[low] = temp;", "\n}", "\nL[low] = temp;", "returnlow;", "\n}", "voidQSort (int*L,intlow,int high)", "\n{", "\nif (low \n{", "\nintpl = Partition (L,low,high);", "QSort (L,low,pl - 1);", "\nQSort (L,pl + 1,high);", "\n}", "\n}", "intmain ()", "\n{", "\nintnarry[100],addr[100];", "\nintsum = 1,t;", "cout \ncin >> t;", "while (t != -1)", "\n{", "\nnarry[sum] = t;", "\naddr[sum - 1] = t;", "\nsum++;", "cin >> t;", "\n}", "sum -= 1;", "\nQSort (narry,1,sum);", "for (int i = 1; i \ncout \ncout \n", "intk;", "\ncout \ncin >> k;", "intaa = 1;", "\nintkk = 0;", "\nfor (;;)", "\n{", "\nif (aa == k)", "\nbreak;", "\nif (narry[kk] != narry[kk + 1])", "\n{", "\naa += 1;", "\nkk++;", "\n}", "}", "cout \ncout \nfor (i = 0;i \n{", "\nif (addr[i] == narry[sum - kk])", "\ncout \n}", "return0;", "\n}", "1\u3001\u627e\u9519", "\nVoid test1()", "\n{", "\nchar string[10];", "\nchar* str1=\"0123456789\";", "\nstrcpy(string, str1);// \u6ea2\u51fa\uff0c\u5e94\u8be5\u5305\u62ec\u4e00\u4e2a\u5b58\u653e'\\0'\u7684\u5b57\u7b26string[11]", "\n}", "Void test2()", "\n{", "\nchar string[10], str1[10];", "\nfor(I=0; I\n{", "\nstr1[i] ='a';", "\n}", "\nstrcpy(string, str1);// I\uff0ci\u6ca1\u6709\u58f0\u660e\u3002", "\n}", "Void test3(char* str1)", "\n{", "\nchar string[10];", "\nif(strlen(str1)\n{", "\nstrcpy(string, str1);", "\n}", "\n}", "2.", "\nvoid g(int**);", "\nint main()", "\n{", "\nint line[10],i;", "\nint *p=line; //p\u662f\u5730\u5740\u7684\u5730\u5740", "\nfor (i=0;i\n{", "\n*p=i;", "\ng(&p);//\u6570\u7ec4\u5bf9\u5e94\u7684\u503c\u52a01", "\n}", "\nfor(i=0;i\nprintf(\"%d\\n\",line[i]);", "\nreturn 0;", "\n}", "void g(int**p)", "\n{", "\n(**p)++;", "\n(*p)++;// \u65e0\u6548", "\n}", "\n\u8f93\u51fa\uff1a", "\n1", "\n2", "\n3", "\n4", "\n5", "\n6", "\n7", "\n8", "\n9", "\n10", "\n3. \u5199\u51fa\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u679c", "int sum(int a)", "\n{", "\nauto int c=0;", "\nstatic int b=3;", "\nc+=1;", "\nb+=2;", "\nreturn(a+b+c);", "\n}", "void main()", "\n{", "\nint I;", "\nint a=2;", "\nfor(I=0;I\n{", "\nprintf(\"%d,\", sum(a));", "\n}", "\n}", "\n// static\u4f1a\u4fdd\u5b58\u4e0a\u6b21\u7ed3\u679c\uff0c\u8bb0\u4f4f\u8fd9\u4e00\u70b9\uff0c\u5269\u4e0b\u7684\u81ea\u5df1\u5199", "\n\u8f93\u51fa\uff1a8,10,12,14,16,", "4.", "int func(int a)", "\n{", "\nint b;", "\nswitch(a)", "\n{", "\ncase 1: 30;", "\ncase 2: 20;", "\ncase 3: 16;", "\ndefault: 0", "\n}", "\nreturn b;", "\n}", "\n\u5219func(1)=?", "\n// b\u5b9a\u4e49\u540e\u5c31\u6ca1\u6709\u8d4b\u503c\u3002", "5:", "\nint a[3];", "\na[0]=0; a[1]=1; a[2]=2;", "\nint *p, *q;", "\np=a;", "\nq=&a[2];", "\n\u5219a[q-p]=a[2]", "\n\u89e3\u91ca\uff1a\u6307\u9488\u4e00\u6b21\u79fb\u52a8\u4e00\u4e2aint\u4f46\u8ba1\u6570\u4e3a1", "\u4eca\u5929\u65e9\u4e0a\u7684\u9762\u8bd5\u98989\u9053\uff0c\u6bd4\u8f83\u96be\uff0c\u5411\u725b\u4eba\u8bf7\u6559\uff0c\u56fd\u5185\u7684\u4e00\u725b\u516c\u53f8\uff0c\u5750\u843d\u5728\u5317\u4eac\u5317\u56db\u73af\u67d0\u5927\u53a6\uff1a", "\n1\u3001\u7ebf\u5f62\u8868a\u3001b\u4e3a\u4e24\u4e2a\u6709\u5e8f\u5347\u5e8f\u7684\u7ebf\u5f62\u8868\uff0c\u7f16\u5199\u4e00\u7a0b\u5e8f\uff0c\u4f7f\u4e24\u4e2a\u6709\u5e8f\u7ebf\u5f62\u8868\u5408\u5e76\u6210\u4e00\u4e2a\u6709\u5e8f\u5347\u5e8f\u7ebf\u5f62\u8868h\uff1b", "\n\u7b54\u6848\u5728 \u8bf7\u5316\u5927\u5b66 \u4e25\u9510\u654f\u300a\u6570\u636e\u7ed3\u6784\u7b2c\u4e8c\u7248\u300b\u7b2c\u4e8c\u7ae0\u4f8b\u9898\uff0c\u6570\u636e\u7ed3\u6784\u5f53\u4e2d\uff0c\u8fd9\u4e2a\u53eb\u505a\uff1a\u4e24\u8def\u5f52\u5e76\u6392\u5e8f", "\nLinklist *unio(Linklist *p,Linklist *q){", "\nlinklist *R,*pa,*qa,*ra;", "\npa=p;", "\nqa=q;", "\nR=ra=p;", "\nwhile(pa->next!=NULL&&qa->next!=NULL){", "\nif(pa->data>qa->data){", "\nra->next=qa;", "\nqa=qa->next;", "\n}", "\nelse{", "\nra->next=pa;", "\npa=pa->next;", "\n}", "\n}", "\nif(pa->next!=NULL)", "\nra->next=pa;", "\nif(qa->next!=NULL)", "\nra->next==qa;", "\nreturn R;", "\n}", "\n2\u3001\u8fd0\u7528\u56db\u8272\u5b9a\u7406\uff0c\u4e3aN\u4e2a\u5c40\u57df\u4e3e\u884c\u914d\u8272\uff0c\u989c\u8272\u4e3a1\u30012\u30013\u30014\u56db\u79cd\uff0c\u53e6\u6709\u6570\u7ec4adj[][N]\uff0c\u5982adj[i][j]=1\u5219\u8868\u793ai\u533a\u57df\u4e0ej\u533a\u57df\u76f8\u90bb\uff0c\u6570\u7ec4color[N]\uff0c\u5982color[i]=1,\u8868\u793ai\u533a\u57df\u7684\u989c\u8272\u4e3a1\u53f7\u989c\u8272\u3002", "\n\u56db\u8272\u586b\u5145", "\n3\u3001\u7528\u9012\u5f52\u7b97\u6cd5\u5224\u65ad\u6570\u7ec4a[N]\u662f\u5426\u4e3a\u4e00\u4e2a\u9012\u589e\u6570\u7ec4\u3002", "\n\u9012\u5f52\u7684\u65b9\u6cd5\uff0c\u8bb0\u5f55\u5f53\u524d\u6700\u5927\u7684\uff0c\u5e76\u4e14\u5224\u65ad\u5f53\u524d\u7684\u662f\u5426\u6bd4\u8fd9\u4e2a\u8fd8\u5927\uff0c\u5927\u5219\u7ee7\u7eed\uff0c\u5426\u5219\u8fd4\u56defalse\u7ed3\u675f\uff1a", "\nbool fun( int a[], int n )", "\n{", "\nif( n= =1 )", "\nreturn true;", "\nif( n= =2 )", "\nreturn a[n-1] >= a[n-2];", "\nreturn fun( a,n-1) && ( a[n-1] >= a[n-2] );", "\n}", "\n4\u3001\u7f16\u5199\u7b97\u6cd5\uff0c\u4ece10\u4ebf\u4e2a\u6d6e\u70b9\u6570\u5f53\u4e2d\uff0c\u9009\u51fa\u5176\u4e2d\u6700\u5927\u768410000\u4e2a\u3002", "\n\u7528\u5916\u90e8\u6392\u5e8f\uff0c\u5728\u300a\u6570\u636e\u7ed3\u6784\u300b\u4e66\u4e0a\u6709", "\n\u300a\u8ba1\u7b97\u65b9\u6cd5\u5bfc\u8bba\u300b\u5728\u627e\u5230\u7b2cn\u5927\u7684\u6570\u7684\u7b97\u6cd5\u4e0a\u52a0\u5de5", "\n5\u3001\u7f16\u5199\u4e00unix\u7a0b\u5e8f\uff0c\u9632\u6b62\u50f5\u5c38\u8fdb\u7a0b\u7684\u51fa\u73b0.", "Top", "\n  \u56de\u590d\u4eba\uff1afree131(\u767d\u65e5?\u505a\u68a6!) ( \u4e00\u7ea7(\u521d\u7ea7)) \u4fe1\u8a89\uff1a100   2006-4-17 10:17:34   \u5f97\u5206:0", "\n?   ", "\u540c\u5b66\u76844\u9053\u9762\u8bd5\u9898\uff0c\u5e94\u8058\u7684\u804c\u4f4d\u662f\u641c\u7d22\u5f15\u64ce\u5de5\u7a0b\u5e08\uff0c\u540e\u4e24\u9053\u8d85\u7ea7\u96be\uff0c\uff08\u5e0c\u671b\u5927\u5bb6\u591a\u7ed9\u4e00\u4e9b\u7b97\u53d1\uff09", "\n1.\u7ed9\u4e24\u4e2a\u6570\u7ec4\u548c\u4ed6\u4eec\u7684\u5927\u5c0f\uff0c\u8fd8\u6709\u4e00\u52a8\u6001\u5f00\u8f9f\u7684\u5185\u5b58\uff0c\u6c42\u4ea4\u96c6\uff0c\u628a\u4ea4\u96c6\u653e\u5230\u52a8\u6001\u5185\u5b58dongtai\uff0c\u5e76\u4e14\u8fd4\u56de\u4ea4\u96c6\u4e2a\u6570", "\nlong jiaoji(long* a[],long b[],long* alength,long blength,long* dongtai[])", "\n2.\u5355\u8fde\u8868\u7684\u5efa\u7acb\uff0c\u628a\u2019a'\u2013\u2019z\u201926\u4e2a\u5b57\u6bcd\u63d2\u5165\u5230\u8fde\u8868\u4e2d\uff0c\u5e76\u4e14\u5012\u53d9\uff0c\u8fd8\u8981\u6253\u5370\uff01", "\n\u65b9\u6cd51\uff1a", "\ntypedef struct val", "\n{ int date_1;", "\nstruct val *next;", "\n}*p;", "void main(void)", "\n{ char c;", "for(c=122;c>=97;c\u2013)", "\n{ p.date=c;", "\np=p->next;", "\n}", "p.next=NULL;", "\n}", "\n}", "\n\u65b9\u6cd52\uff1a", "\nnode *p = NULL;", "\nnode *q = NULL;", "node *head = (node*)malloc(sizeof(node));", "\nhead->data = \u2018 \u2018;head->next=NULL;", "node *first = (node*)malloc(sizeof(node));", "\nfirst->data = \u2018a\u2019;first->next=NULL;head->next = first;", "\np = first;", "int longth = \u2018z\u2019 \u2013 \u2018b\u2019;", "\nint i=0;", "\nwhile ( i\n{", "\nnode *temp = (node*)malloc(sizeof(node));", "\ntemp->data = \u2018b\u2019+i;temp->next=NULL;q=temp;", "head->next = temp; temp->next=p;p=q;", "\ni++;", "\n}", "print(head);", "3.\u53ef\u6015\u7684\u9898\u76ee\u7ec8\u4e8e\u6765\u4e86", "\n\u8c61\u641c\u7d22\u7684\u8f93\u5165\u4fe1\u606f\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u7edf\u8ba1300\u4e07\u8f93\u5165\u4fe1\u606f\u4e2d\u7684\u6700\u70ed\u95e8\u7684\u524d\u5341\u6761\uff0c\u6211\u4eec\u6bcf\u6b21\u8f93\u5165\u7684\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e3a\u4e0d\u8d85\u8fc7255byte,\u5185\u5b58\u4f7f\u7528\u53ea\u67091G,", "\n\u8bf7\u63cf\u8ff0\u601d\u60f3\uff0c\u5199\u51fa\u7b97\u53d1\uff08c\u8bed\u8a00\uff09\uff0c\u7a7a\u95f4\u548c\u65f6\u95f4\u590d\u6742\u5ea6\uff0c", "\n4.\u56fd\u5185\u7684\u4e00\u4e9b\u5e16\u5427\uff0c\u5982baidu,\u6709\u51e0\u5341\u4e07\u4e2a\u4e3b\u9898\uff0c\u5047\u8bbe\u6bcf\u4e00\u4e2a\u4e3b\u9898\u90fd\u6709\u4e0a\u4ebf\u7684\u8ddf\u5e16\u5b50\uff0c\u600e\u4e48\u6837\u8bbe\u8ba1\u8fd9\u4e2a\u7cfb\u7edf\u901f\u5ea6\u6700\u597d\uff0c\u8bf7\u63cf\u8ff0\u601d\u60f3\uff0c\u5199\u51fa\u7b97\u53d1\uff08c\u8bed\u8a00\uff09\uff0c\u7a7a\u95f4\u548c\u65f6\u95f4\u590d\u6742\u5ea6\uff0c", "#include string.h", "\nmain(void)", "\n{ char *src=\u201dhello,world\u201d;", "\nchar *dest=NULL;", "\ndest=(char *)malloc(strlen(src));", "\nint len=strlen(str);", "\nchar *d=dest;", "\nchar *s=src[len];", "\nwhile(len\u2013!=0)", "\nd++=s\u2013;", "\nprintf(\u201c%s\u201d,dest);", "\n}", "\n\u627e\u51fa\u9519\u8bef\uff01\uff01", "\n#include \u201cstring.h\u201d", "\n#include \u201cstdio.h\u201d", "\n#include \u201cmalloc.h\u201d", "\nmain(void)", "\n{", "\nchar *src=\u201dhello,world\u201d;", "\nchar *dest=NULL;", "\ndest=(char *)malloc(sizeof(char)*(strlen(src)+1));", "\nint len=strlen(src);", "\nchar *d=dest;", "\nchar *s=src+len-1;", "\nwhile(len\u2013!=0)", "\n*d++=*s\u2013;", "\n*d=\u2019\\0\u2032;", "\nprintf(\u201c%s\u201d,dest);", "\n}", "1. \u7b80\u8ff0\u4e00\u4e2aLinux\u9a71\u52a8\u7a0b\u5e8f\u7684\u4e3b\u8981\u6d41\u7a0b\u4e0e\u529f\u80fd\u3002", "2. \u8bf7\u5217\u4e3e\u4e00\u4e2a\u8f6f\u4ef6\u4e2d\u65f6\u95f4\u6362\u7a7a\u95f4\u6216\u8005\u7a7a\u95f4\u6362\u65f6\u95f4\u7684\u4f8b\u5b50\u3002", "\nvoid swap(int a,int b)", "\n{", "\nint c; c=a;a=b;b=a;", "\n}", "\n\u2014>\u7a7a\u4f18", "\nvoid swap(int a,int b)", "\n{", "\na=a+b;b=a-b;a=a-b;", "\n}", "\n6. \u8bf7\u95ee\u4e00\u4e0b\u7a0b\u5e8f\u5c06\u8f93\u51fa\u4ec0\u4e48\u7ed3\u679c\uff1f", "\nchar *RetMenory(void)", "\n{", "\nchar p[] = \u201chellow world\u201d;", "\nreturn p;", "\n}", "\nvoid Test(void)", "\n{", "\nchar *str = NULL;", "\nstr = RetMemory();", "\nprintf(str);", "\n}", "\nRetMenory\u6267\u884c\u5b8c\u6bd5\uff0cp\u8d44\u6e90\u88ab\u56de\u6536\uff0c\u6307\u5411\u672a\u77e5\u5730\u5740\u3002\u8fd4\u56de\u5730\u5740\uff0cstr\u7684\u5185\u5bb9\u5e94\u662f\u4e0d\u53ef\u9884\u6d4b\u7684, \u6253\u5370\u7684\u5e94\u8be5\u662fstr\u7684\u5730\u5740", "\u5199\u4e00\u4e2a\u51fd\u6570,\u5b83\u7684\u539f\u5f62\u662fint continumax(char *outputstr,char *intputstr)", "\n\u529f\u80fd\uff1a", "\n\u5728\u5b57\u7b26\u4e32\u4e2d\u627e\u51fa\u8fde\u7eed\u6700\u957f\u7684\u6570\u5b57\u4e32\uff0c\u5e76\u628a\u8fd9\u4e2a\u4e32\u7684\u957f\u5ea6\u8fd4\u56de\uff0c\u5e76\u628a\u8fd9\u4e2a\u6700\u957f\u6570\u5b57\u4e32\u4ed8\u7ed9\u5176\u4e2d\u4e00\u4e2a\u51fd\u6570\u53c2\u6570outputstr\u6240\u6307\u5185\u5b58\u3002\u4f8b\u5982\uff1a\u201dabcd12345ed125ss123456789\u2033\u7684\u9996\u5730\u5740\u4f20\u7ed9intputstr\u540e\uff0c\u51fd\u6570\u5c06\u8fd4\u56de", "\n9\uff0coutputstr\u6240\u6307\u7684\u503c\u4e3a123456789", "\nint continumax(char *outputstr, char *inputstr)", "\n{", "\nchar *in = inputstr, *out = outputstr, *temp, *final;", "\nint count = 0, maxlen = 0;", "while( *in != \u2018\\0\u2032 )", "\n{", "\nif( *in > 47 && *in \n{", "\nfor(temp = in; *in > 47 && *in \ncount++;", "\n}", "\nelse", "\nin++;", "if( maxlen \n{", "\nmaxlen = count;", "\ncount = 0;", "\nfinal = temp;", "\n}", "\n}", "\nfor(int i = 0; i \n{", "\n*out = *final;", "\nout++;", "\nfinal++;", "\n}", "\n*out = '\\0';", "\nreturn maxlen;", "\n}", "\u4e0d\u7528\u5e93\u51fd\u6570,\u7528C\u8bed\u8a00\u5b9e\u73b0\u5c06\u4e00\u6574\u578b\u6570\u5b57\u8f6c\u5316\u4e3a\u5b57\u7b26\u4e32", "\n\u65b9\u6cd51\uff1a", "\nint getlen(char *s){", "\nint n;", "\nfor(n = 0; *s != '\\0'; s++)", "\nn++;", "\nreturn n;", "\n}", "\nvoid reverse(char s[])", "\n{", "\nint c,i,j;", "\nfor(i = 0,j = getlen(s) - 1; i \nc = s[i];", "\ns[i] = s[j];", "\ns[j] = c;", "\n}", "\n}", "\nvoid itoa(int n,char s[])", "\n{", "\nint i,sign;", "\nif((sign = n) \nn = -n;", "\ni = 0;", "\ndo{/*\u4ee5\u53cd\u5e8f\u751f\u6210\u6570\u5b57*/", "\ns[i++] = n%10 + '0';/*get next number*/", "\n}while((n /= 10) > 0);/*delete the number*/", "if(sign \ns[i++] = '-';", "s[i] = '\\0';", "\nreverse(s);", "\n}", "\n\u65b9\u6cd52:", "\n#include", "\nusing namespace std;", "void itochar(int num);", "void itochar(int num)", "\n{", "\nint i = 0;", "\nint j ;", "\nchar stra[10];", "\nchar strb[10];", "\nwhile ( num )", "\n{", "\nstra[i++]=num%10+48;", "\nnum=num/10;", "\n}", "\nstra[i] = '\\0';", "\nfor( j=0; j \n{", "\nstrb[j] = stra[i-j-1];", "\n}", "\nstrb[j] = '\\0';", "\ncout\n", "}", "\nint main()", "\n{", "\nint num;", "\ncin>>num;", "\nitochar(num);", "\nreturn 0;", "\n}", "\u524d\u51e0\u5929\u9762\u8bd5\uff0c\u6709\u4e00\u9898\u60f3\u4e0d\u660e\u767d,\u8bf7\u6559\u5927\u5bb6\uff01", "\ntypedef struct", "\n{", "\nint a:2;", "\nint b:2;", "\nint c:1;", "\n}test;", "test t;", "\nt.a = 1;", "\nt.b = 3;", "\nt.c = 1;", "printf(\u201c%d\u201d,t.a);", "\nprintf(\u201c%d\u201d,t.b);", "\nprintf(\u201c%d\u201d,t.c);", "\u8c22\u8c22!", "\nt.a\u4e3a01,\u8f93\u51fa\u5c31\u662f1", "\nt.b\u4e3a11\uff0c\u8f93\u51fa\u5c31\u662f\uff0d1", "\nt.c\u4e3a1\uff0c\u8f93\u51fa\u4e5f\u662f-1", "\n3\u4e2a\u90fd\u662f\u6709\u7b26\u53f7\u6570int\u561b\u3002", "\n\u8fd9\u662f\u4f4d\u6269\u5c55\u95ee\u9898", "\n01", "\n11", "\n1", "\n\u7f16\u8bd1\u5668\u8fdb\u884c\u7b26\u53f7\u6269\u5c55", "\u6c42\u7ec4\u5408\u6570\uff1a \u6c42n\u4e2a\u6570\uff081\u2026.n\uff09\u4e2dk\u4e2a\u6570\u7684\u7ec4\u5408\u2026.", "\n\u5982\uff1acombination(5,3)", "\n\u8981\u6c42\u8f93\u51fa\uff1a543\uff0c542\uff0c541\uff0c532\uff0c531\uff0c521\uff0c432\uff0c431\uff0c421\uff0c321\uff0c", "\n#include", "int pop(int *);", "\nint push(int );", "\nvoid combination(int ,int );", "int stack[3]={0};", "\ntop=-1;", "int main()", "\n{", "\nint n,m;", "\nprintf(\u201cInput two numbers:\\n\u201d);", "\nwhile( (2!=scanf(\u201c%d%*c%d\u201d,&n,&m)) )", "\n{", "\nfflush(stdin);", "\nprintf(\u201cInput error! Again:\\n\u201d);", "\n}", "\ncombination(n,m);", "\nprintf(\u201c\\n\u201d);", "\n}", "\nvoid combination(int m,int n)", "\n{", "\nint temp=m;", "\npush(temp);", "\nwhile(1)", "\n{", "\nif(1==temp)", "\n{", "\nif(pop(&temp)&&stack[0]==n) //\u5f53\u6808\u5e95\u5143\u7d20\u5f39\u51fa&&\u4e3a\u53ef\u80fd\u53d6\u7684\u6700\u5c0f\u503c\uff0c\u5faa\u73af\u9000\u51fa", "\nbreak;", "\n}", "\nelse if( push(\u2013temp))", "\n{", "\nprintf(\u201c%d%d%d \u201c,stack[0],stack[1],stack[2]);//\u00a7\u00e4\u00a8\u00ec\u00a4@?", "\npop(&temp);", "\n}", "\n}", "\n}", "\nint push(int i)", "\n{", "\nstack[++top]=i;", "\nif(top\nreturn 0;", "\nelse", "\nreturn 1;", "\n}", "\nint pop(int *i)", "\n{", "\n*i=stack[top--];", "\nif(top>=0)", "\nreturn 0;", "\nelse", "\nreturn 1;", "\n}", "1\u3001\u7528\u6307\u9488\u7684\u65b9\u6cd5\uff0c\u5c06\u5b57\u7b26\u4e32\u201cABCD1234efgh\u201d\u524d\u540e\u5bf9\u8c03\u663e\u793a", "\n#include", "\n#include", "\n#include", "\nint main()", "\n{", "\nchar str[] = \u201cABCD1234efgh\u201d;", "\nint length = strlen(str);", "\nchar * p1 = str;", "\nchar * p2 = str + length \u2013 1;", "\nwhile(p1 \n{", "\nchar c = *p1;", "\n*p1 = *p2;", "\n*p2 = c;", "\n++p1;", "\n--p2;", "\n}", "\nprintf(\"str now is %s\\n\",str);", "\nsystem(\"pause\");", "\nreturn 0;", "\n}", "\n2\u3001\u6709\u4e00\u5206\u6570\u5e8f\u5217\uff1a1/2,1/4,1/6,1/8\u2026\u2026\uff0c\u7528\u51fd\u6570\u8c03\u7528\u7684\u65b9\u6cd5\uff0c\u6c42\u6b64\u6570\u5217\u524d20\u9879\u7684\u548c", "\n#include", "\ndouble getValue()", "\n{", "\ndouble result = 0;", "\nint i = 2;", "\nwhile(i \n{", "\nresult += 1.0 / i;//\u4e00\u5b9a\u8981\u4f7f\u75281.0\u505a\u9664\u6570\uff0c\u4e0d\u80fd\u75281\uff0c\u5426\u5219\u7ed3\u679c\u5c06\u81ea\u52a8\u8f6c\u5316\u6210\u6574\u6570\uff0c\u53730.000000", "\ni += 2;", "\n}", "\nreturn result;", "\n}", "\nint main()", "\n{", "\nprintf(\"result is %f\\n\", getValue());", "\nsystem(\"pause\");", "\nreturn 0;", "\n}", "Top", "\n  \u56de\u590d\u4eba\uff1afree131(\u767d\u65e5?\u505a\u68a6!) ( \u4e00\u7ea7(\u521d\u7ea7)) \u4fe1\u8a89\uff1a100   2006-4-17 10:18:33   \u5f97\u5206:0", "\n?   ", "\u6709\u4e00\u4e2a\u6570\u7ec4a[1000]\u5b58\u653e0--1000;\u8981\u6c42\u6bcf\u9694\u4e8c\u4e2a\u6570\u5220\u6389\u4e00\u4e2a\u6570\uff0c\u5230\u672b\u5c3e\u65f6\u5faa\u73af\u81f3\u5f00\u5934\u7ee7\u7eed\u8fdb\u884c\uff0c\u6c42\u6700\u540e\u4e00\u4e2a\u88ab\u5220\u6389\u7684\u6570\u7684\u539f\u59cb\u4e0b\u6807\u4f4d\u7f6e\u3002", "\n\u4ee57\u4e2a\u6570\u4e3a\u4f8b\uff1a", "\n{0,1,2,3,4,5,6,7} 0-->1\u2013>2\uff08\u5220\u9664\uff09\u2013>3\u2013>4\u2013>5(\u5220\u9664)\u2013>6\u2013>7\u2013>0\uff08\u5220\u9664\uff09\uff0c\u5982\u6b64\u5faa\u73af\u76f4\u5230\u6700\u540e\u4e00\u4e2a\u6570\u88ab\u5220\u9664\u3002", "\n\u65b9\u6cd51\uff1a\u6570\u7ec4", "\n#include", "\nusing namespace std;", "\n#define null 1000", "int main()", "\n{", "\nint arr[1000];", "\nfor (int i=0;i\narr[i]=i;", "\nint j=0;", "\nint count=0;", "\nwhile(count\n{", "\nwhile(arr[j%1000]==null)", "\nj=(++j)%1000;", "\nj=(++j)%1000;", "\nwhile(arr[j%1000]==null)", "\nj=(++j)%1000;", "\nj=(++j)%1000;", "\nwhile(arr[j%1000]==null)", "\nj=(++j)%1000;", "\narr[j]=null;", "\n++count;", "\n}", "\nwhile(arr[j]==null)", "\nj=(++j)%1000;", "cout\nreturn 0;", "\n}\u65b9\u6cd52\uff1a\u94fe\u8868", "\n#include", "\nusing namespace std;", "\n#define null 0", "\nstruct node", "\n{", "\nint data;", "\nnode* next;", "\n};", "\nint main()", "\n{", "\nnode* head=new node;", "\nhead->data=0;", "\nhead->next=null;", "\nnode* p=head;", "\nfor(int i=1;i\n{", "\nnode* tmp=new node;", "\ntmp->data=i;", "\ntmp->next=null;", "\nhead->next=tmp;", "\nhead=head->next;", "\n}", "\nhead->next=p;", "\nwhile(p!=p->next)", "\n{", "\np->next->next=p->next->next->next;", "\np=p->next->next;", "\n}", "\ncout", "\nreturn 0;", "\n}", "\n\u65b9\u6cd53\uff1a\u901a\u7528\u7b97\u6cd5", "\n#include", "\n#define MAXLINE 1000 //\u5143\u7d20\u4e2a\u6570", "\n/*", "\nMAXLINE \u5143\u7d20\u4e2a\u6570", "\na[] \u5143\u7d20\u6570\u7ec4", "\nR[] \u6307\u9488\u573a", "\nsuffix \u4e0b\u6807", "\nindex \u8fd4\u56de\u6700\u540e\u7684\u4e0b\u6807\u5e8f\u53f7", "\nvalues \u8fd4\u56de\u6700\u540e\u7684\u4e0b\u6807\u5bf9\u5e94\u7684\u503c", "\nstart \u4ece\u7b2c\u51e0\u4e2a\u5f00\u59cb", "\nK \u95f4\u9694", "\n*/", "\nint find_n(int a[],int R[],int K,int& index,int& values,int s=0) {", "\nint suffix;", "\nint front_node,current_node;", "\nsuffix=0;", "\nif(s==0) {", "\ncurrent_node=0;", "\nfront_node=MAXLINE-1;", "\n}", "\nelse {", "\ncurrent_node=s;", "\nfront_node=s-1;", "\n}", "\nwhile(R[front_node]!=front_node) {", "\nprintf(\"%d\\n\",a[current_node]);", "\nR[front_node]=R[current_node];", "\nif(K==1) {", "\ncurrent_node=R[front_node];", "\ncontinue;", "\n}", "\nfor(int i=0;i", "\nfront_node=R[front_node];", "\n}", "\ncurrent_node=R[front_node];", "\n}", "\nindex=front_node;", "\nvalues=a[front_node];", "return 0;", "\n}", "\nint main(void) {", "\nint a[MAXLINE],R[MAXLINE],suffix,index,values,start,i,K;", "\nsuffix=index=values=start=0;", "\nK=2;", "for(i=0;i", "\na[i]=i;", "\nR[i]=i+1;", "\n}", "\nR[i-1]=0;", "\nfind_n(a,R,K,index,values,2);", "\nprintf(\"the value is %d,%d\\n\",index,values);", "\nreturn 0;", "\n}", "\u8bd5\u9898\uff1a", "\nvoid test2()", "\n{", "\nchar string[10], str1[10];", "\nint i;", "\nfor(i=0; i\n{", "\nstr1[i] = 'a';", "\n}", "\nstrcpy( string, str1 );", "\n}", "\n\u89e3\u7b54\uff1a\u5bf9\u8bd5\u98982\uff0c\u5982\u679c\u9762\u8bd5\u8005\u6307\u51fa\u5b57\u7b26\u6570\u7ec4str1\u4e0d\u80fd\u5728\u6570\u7ec4\u5185\u7ed3\u675f\u53ef\u4ee5\u7ed93\u5206\uff1b\u5982\u679c\u9762\u8bd5\u8005\u6307\u51fastrcpy(string, str1)\u8c03\u7528\u4f7f\u5f97\u4ecestr1\u5185\u5b58\u8d77\u590d\u5236\u5230string\u5185\u5b58\u8d77\u6240\u590d\u5236\u7684\u5b57\u8282\u6570\u5177\u6709\u4e0d\u786e\u5b9a\u6027\u53ef\u4ee5\u7ed97\u5206\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u6307\u51fa\u5e93\u51fd\u6570strcpy\u5de5\u4f5c\u65b9\u5f0f\u7684\u7ed910 \u5206\uff1b", "\nstr1\u4e0d\u80fd\u5728\u6570\u7ec4\u5185\u7ed3\u675f:\u56e0\u4e3astr1\u7684\u5b58\u50a8\u4e3a\uff1a{a,a,a,a,a,a,a,a,a,a},\u6ca1\u6709'\\0'(\u5b57\u7b26\u4e32\u7ed3\u675f\u7b26)\uff0c\u6240\u4ee5\u4e0d\u80fd\u7ed3\u675f", "\nstrcpy( char *s1,char *s2)\u4ed6\u7684\u5de5\u4f5c\u539f\u7406\u662f\uff0c\u626b\u63cfs2\u6307\u5411\u7684\u5185\u5b58\uff0c\u9010\u4e2a\u5b57\u7b26\u4ed8\u5230s1\u6240\u6307\u5411\u7684\u5185\u5b58\uff0c\u76f4\u5230\u78b0\u5230'\\0',\u56e0\u4e3astr1\u7ed3\u5c3e\u6ca1\u6709'\\0'\uff0c\u6240\u4ee5\u5177\u6709\u4e0d\u786e\u5b9a\u6027\uff0c\u4e0d\u77e5\u9053\u4ed6\u540e\u9762\u8fd8\u4f1a\u4ed8\u4ec0\u4e48\u4e1c\u4e1c\u3002", "\n\u6b63\u786e\u5e94\u5982\u4e0b", "\nvoid test2()", "\n{", "\nchar string[10], str1[10];", "\nint i;", "\nfor(i=0; i\n{", "\nstr1[i] = 'a'+i; //\u628aabcdefghi\u8d4b\u503c\u7ed9\u5b57\u7b26\u6570\u7ec4", "\n}", "\nstr[i]='\\0';//\u52a0\u4e0a\u7ed3\u675f\u7b26", "\nstrcpy( string, str1 );", "\n}", "\u7b2c\u4e8c\u4e2acode\u9898\u662f\u5b9e\u73b0strcmp", "\nint StrCmp(const char *str1, const char *str2)", "\n\u505a\u662f\u505a\u5bf9\u4e86\uff0c\u6ca1\u6709\u6284\u641e\uff0c\u6bd4\u8f83\u4e71", "\nint StrCmp(const char *str1, const char *str2)", "\n{", "\nassert(str1 && srt2);", "\nwhile (*str1 && *str2 && *str1 == *str2) {", "\nstr1++, str2++;", "\n}", "\nif (*str1 && *str2)", "\nreturn (*str1-*str2);", "\nelseif (*str1 && *str2==0)", "\nreturn 1;", "\nelseif (*str1 = = 0 && *str2)", "\nreturn -1;", "\nelse", "\nreturn 0;", "\n}", "int StrCmp(const char *str1, const char *str2)", "\n{", "\n//\u7701\u7565\u5224\u65ad\u7a7a\u6307\u9488(\u81ea\u5df1\u4fdd\u8bc1)", "\nwhile(*str1 && *str1++ = = *str2++);", "\nreturn *str1-*str2;", "\n}", "\n\u7b2c\u4e09\u4e2acode\u9898\u662f\u5b9e\u73b0\u5b50\u4e32\u5b9a\u4f4d", "\nint FindSubStr(const char *MainStr, const char *SubStr)", "\n\u505a\u662f\u505a\u5bf9\u4e86\uff0c\u6ca1\u6709\u6284\u641e\uff0c\u6bd4\u8f83\u4e71", "\nint MyStrstr(const char* MainStr, const char* SubStr)", "\n{", "\nconst char *p;", "\nconst char *q;", "\nconst char * u = MainStr;", "//assert((MainStr!=NULL)&&( SubStr!=NULL));//\u7528\u65ad\u8a00\u5bf9\u8f93\u5165\u8fdb\u884c\u5224\u65ad", "\nwhile(*MainStr) //\u5185\u90e8\u8fdb\u884c\u9012\u589e", "\n{", "\np = MainStr;", "\nq = SubStr;", "\nwhile(*q && *p && *p++ == *q++);", "\nif(!*q )", "\n{", "\nreturn MainStr - u +1 ;//MainStr\u6307\u5411\u5f53\u524d\u8d77\u59cb\u4f4d\uff0cu\u6307\u5411", "\n}", "\nMainStr ++;", "\n}", "\nreturn -1;", "\n}", "\u5206\u6790\uff1a", "\nint arr[] = {6,7,8,9,10};", "\nint *ptr = arr;", "\n*(ptr++)+=123;", "\nprintf(\u201c %d %d \u201d, *ptr, *(++ptr));", "\n\u8f93\u51fa\uff1a8 8", "\n\u8fc7\u7a0b\uff1a\u5bf9\u4e8e*(ptr++)+=123;\u5148\u505a\u52a0\u6cd56+123\uff0c\u7136\u540e++\uff0c\u6307\u9488\u6307\u54117\uff1b\u5bf9\u4e8eprintf(\u201c %d %d \u201d, *ptr, *(++ptr));\u4ece\u540e\u5f80\u524d\u6267\u884c\uff0c\u6307\u9488\u5148++\uff0c\u6307\u54118\uff0c\u7136\u540e\u8f93\u51fa8\uff0c\u7d27\u63a5\u7740\u518d\u8f93\u51fa8", "\u534e\u4e3a\u5168\u5957\u5b8c\u6574\u8bd5\u9898", "\n\u9ad8\u7ea7\u9898", "\n6\u3001\u5df2\u77e5\u4e00\u4e2a\u5355\u5411\u94fe\u8868\u7684\u5934\uff0c\u8bf7\u5199\u51fa\u5220\u9664\u5176\u67d0\u4e00\u4e2a\u7ed3\u70b9\u7684\u7b97\u6cd5\uff0c\u8981\u6c42\uff0c\u5148\u627e\u5230\u6b64\u7ed3\u70b9\uff0c\u7136\u540e\u5220\u9664\u3002", "\nslnodetype *Delete(slnodetype *Head,int key){}\u4e2dif(Head->number==key)", "\n{", "\nHead=Pointer->next;", "\nfree(Pointer);", "\nbreak;", "\n}", "\nBack = Pointer;", "\nPointer=Pointer->next;", "\nif(Pointer->number==key)", "\n{", "\nBack->next=Pointer->next;", "\nfree(Pointer);", "\nbreak;", "\n}", "\nvoid delete(Node* p)", "\n{", "\nif(Head = Node)", "while(p)", "\n}", "\u6709\u4e00\u4e2a16\u4f4d\u7684\u6574\u6570\uff0c\u6bcf4\u4f4d\u4e3a\u4e00\u4e2a\u6570\uff0c\u5199\u51fd\u6570\u6c42\u4ed6\u4eec\u7684\u548c\u3002", "\n\u89e3\u91ca\uff1a", "\n\u6574\u65701101010110110111", "\n\u548c 1101+0101+1011+0111", "\n\u611f\u89c9\u5e94\u8be5\u4e0d\u96be\uff0c\u5f53\u65f6\u5bf9\u9898\u7406\u89e3\u7684\u4e0d\u662f\u5f88\u6e05\u695a\uff0c\u6240\u4ee5\u5199\u4e86\u4e00\u4e2a\u51fd\u6570\uff0c\u4e5f\u4e0d\u77e5\u9053\u5bf9\u4e0d\u5bf9\u3002", "\n\u7591\u95ee\uff1a", "\n\u65e2\u7136\u662f16\u4f4d\u7684\u6574\u6570\uff0c1101010110110111\u662f2\u8fdb\u5236\u7684\uff0c\u90a3\u4e48\u51fd\u6570\u53c2\u6570\u600e\u4e48\u5b9a\u4e49\u5462\uff0c\u8bf7\u5927\u867e\u6307\u6559\u3002", "\n\u7b54\u6848\uff1a\u7528\u5341\u8fdb\u5236\u505a\u53c2\u6570\uff0c\u8ba1\u7b97\u65f6\u6309\u4e8c\u8fdb\u5236\u8003\u8651\u3002", "\n/* n\u5c31\u662f16\u4f4d\u7684\u6570\uff0c\u51fd\u6570\u8fd4\u56de\u5b83\u7684\u56db\u4e2a\u90e8\u5206\u4e4b\u548c */", "\nchar SumOfQuaters(unsigned short n)", "\n{", "\nchar c = 0;", "\nint i = 4;", "\ndo", "\n{", "\nc += n & 15;", "\nn = n >> 4;", "\n} while (\u2013i);", "return c;", "\n}", "\u67091,2,\u2026.\u4e00\u76f4\u5230n\u7684\u65e0\u5e8f\u6570\u7ec4,\u6c42\u6392\u5e8f\u7b97\u6cd5,\u5e76\u4e14\u8981\u6c42\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n),\u7a7a\u95f4\u590d\u6742\u5ea6O(1),\u4f7f\u7528\u4ea4\u6362,\u800c\u4e14\u4e00\u6b21\u53ea\u80fd\u4ea4\u6362\u4e24\u4e2a\u6570.\uff08\u534e\u4e3a\uff09", "\n#include", "int main()", "\n{", "\nint a[] = {10,6,9,5,2,8,4,7,1,3};", "\nint len = sizeof(a) / sizeof(int);", "\nint temp;", "for(int i = 0; i \n{", "\ntemp = a[a[i] - 1];", "\na[a[i] - 1] = a[i];", "\na[i] = temp;", "if ( a[i] == i + 1)", "\ni++;", "\n}", "\nfor (int j = 0; j \ncout\n", "return 0;", "\n}", "\uff08\u6167\u901a\uff09", "\n1 \u5199\u51fa\u7a0b\u5e8f\u628a\u4e00\u4e2a\u94fe\u8868\u4e2d\u7684\u63a5\u70b9\u987a\u5e8f\u5012\u6392", "\ntypedef struct linknode", "\n{", "\nint data;", "\nstruct linknode *next;", "\n}node;", "\n//\u5c06\u4e00\u4e2a\u94fe\u8868\u9006\u7f6e", "\nnode *reverse(node *head)", "\n{", "\nnode *p,*q,*r;", "\np=head;", "\nq=p->next;", "\nwhile(q!=NULL)", "\n{", "\nr=q->next;", "\nq->next=p;", "\np=q;", "\nq=r;", "\n}", "head->next=NULL;", "\nhead=p;", "\nreturn head;", "\n}", "\n2 \u5199\u51fa\u7a0b\u5e8f\u5220\u9664\u94fe\u8868\u4e2d\u7684\u6240\u6709\u63a5\u70b9", "\nvoid del_all(node *head)", "\n{", "\nnode *p;", "\nwhile(head!=NULL)", "\n{", "\np=head->next;", "\nfree(head);", "\nhead=p;", "\n}", "\ncout\n}", "\n3\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0cs,t;\u628at\u5b57\u7b26\u4e32\u63d2\u5165\u5230s\u5b57\u7b26\u4e32\u4e2d\uff0cs\u5b57\u7b26\u4e32\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u5b58\u653et\u5b57\u7b26\u4e32", "\nvoid insert(char *s, char *t, int i)", "\n{", "\nchar *q = t;", "\nchar *p =s;", "\nif(q == NULL)return;", "\nwhile(*p!='\\0')", "\n{", "\np++;", "\n}", "\nwhile(*q!=0)", "\n{", "\n*p=*q;", "\np++;", "\nq++;", "\n}", "\n*p = '\\0';", "\n}", "\u5206\u6790\u4e0b\u9762\u7684\u4ee3\u7801\uff1a", "\nchar *a = \"hello\";", "\nchar *b = \"hello\";", "\nif(a= =b)", "\nprintf(\"YES\");", "\nelse", "\nprintf(\"NO\");", "\n\u8fd9\u4e2a\u7b80\u5355\u7684\u9762\u8bd5\u9898\u76ee,\u6211\u9009\u8f93\u51fa no(\u5bf9\u6bd4\u7684\u5e94\u8be5\u662f\u6307\u9488\u5730\u5740\u5427),\u53ef\u5728VC\u662fYES \u5728C\u662fNO", "\nlz\u7684\u5462\uff0c\u662f\u4e00\u4e2a\u5e38\u91cf\u5b57\u7b26\u4e32\u3002\u4f4d\u4e8e\u9759\u6001\u5b58\u50a8\u533a\uff0c\u5b83\u5728\u7a0b\u5e8f\u751f\u547d\u671f\u5185\u6052\u5b9a\u4e0d\u53d8\u3002\u5982\u679c\u7f16\u8bd1\u5668\u4f18\u5316\u7684\u8bdd\uff0c\u4f1a\u6709\u53ef\u80fda\u548cb\u540c\u65f6\u6307\u5411\u540c\u4e00\u4e2ahello\u7684\u3002\u5219\u5730\u5740\u76f8\u540c\u3002\u5982\u679c\u7f16\u8bd1\u5668\u6ca1\u6709\u4f18\u5316\uff0c\u90a3\u4e48\u5c31\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u5730\u5740\uff0c\u5219\u4e0d\u540c", "\n\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u529f\u80fd\uff1a\u5b8c\u6210\u5185\u5b58\u4e4b\u95f4\u7684\u62f7\u8d1d", "\nmemcpy source code:", "\n270 void* memcpy( void *dst, const void *src, unsigned int len )", "\n271 {", "\n272 register char *d;", "\n273 register char *s;", "\n27", "\n275 if (len == 0)", "\n276 return dst;", "\n277", "\n278 if (is_overlap(dst, src, len, len))", "\n279 complain3(\"memcpy\", dst, src, len);", "\n280", "\n281 if ( dst > src ) {", "\n282 d = (char *)dst + len \u2013 1;", "\n283 s = (char *)src + len \u2013 1;", "\n284 while ( len >= 4 ) {", "\n285 *d\u2013 = *s\u2013;", "\n286 *d\u2013 = *s\u2013;", "\n287 *d\u2013 = *s\u2013;", "\n288 *d\u2013 = *s\u2013;", "\n289 len -= 4;", "\n290 }", "\n291 while ( len\u2013 ) {", "\n292 *d\u2013 = *s\u2013;", "\n293 }", "\n294 } else if ( dst \n295 d = (char *)dst;", "\n296 s = (char *)src;", "\n297 while ( len >= 4 ) {", "\n298 *d++ = *s++;", "\n299 *d++ = *s++;", "\n300 *d++ = *s++;", "\n301 *d++ = *s++;", "\n302 len -= 4;", "\n303 }", "\n304 while ( len\u2013 ) {", "\n305 *d++ = *s++;", "\n306 }", "\n307 }", "\n308 return dst;", "\n309 }", "\n\u516c\u53f8\u8003\u8bd5\u8fd9\u79cd\u9898\u76ee\u4e3b\u8981\u8003\u4f60\u7f16\u5199\u7684\u4ee3\u7801\u662f\u5426\u8003\u8651\u5230\u5404\u79cd\u60c5\u51b5\uff0c\u662f\u5426\u5b89\u5168\uff08\u4e0d\u4f1a\u6ea2\u51fa\uff09", "\n\u5404\u79cd\u60c5\u51b5\u5305\u62ec\uff1a", "\n\uff11\u3001\u53c2\u6570\u662f\u6307\u9488\uff0c\u68c0\u67e5\u6307\u9488\u662f\u5426\u6709\u6548", "\n\uff12\u3001\u68c0\u67e5\u590d\u5236\u7684\u6e90\u76ee\u6807\u548c\u76ee\u7684\u5730\u662f\u5426\u4e3a\u540c\u4e00\u4e2a\uff0c\u82e5\u4e3a\u540c\u4e00\u4e2a\uff0c\u5219\u76f4\u63a5\u8df3\u51fa", "\n\uff13\u3001\u8bfb\u5199\u6743\u9650\u68c0\u67e5", "\n\uff14\u3001\u5b89\u5168\u68c0\u67e5\uff0c\u662f\u5426\u4f1a\u6ea2\u51fa", "\nmemcpy\u62f7\u8d1d\u4e00\u5757\u5185\u5b58\uff0c\u5185\u5b58\u7684\u5927\u5c0f\u4f60\u544a\u8bc9\u5b83", "\nstrcpy\u662f\u5b57\u7b26\u4e32\u62f7\u8d1d\uff0c\u9047\u5230\u2019\\0\u2032\u7ed3\u675f", "/* memcpy \u2500\u2500\u2500 \u62f7\u8d1d\u4e0d\u91cd\u53e0\u7684\u5185\u5b58\u5757 */", "\nvoid memcpy(void* pvTo, void* pvFrom, size_t size)", "\n{", "\nvoid* pbTo = (byte*)pvTo;", "\nvoid* pbFrom = (byte*)pvFrom;", "\nASSERT(pvTo != NULL && pvFrom != NULL); //\u68c0\u67e5\u8f93\u5165\u6307\u9488\u7684\u6709\u6548\u6027", "\nASSERT(pbTo>=pbFrom+size || pbFrom>=pbTo+size);//\u68c0\u67e5\u4e24\u4e2a\u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u662f\u5426\u91cd\u53e0", "\nwhile(size\u2013>0)", "\n*pbTo++ == *pbFrom++;", "\nreturn(pvTo);", "\n}", "\u534e\u4e3a\u9762\u8bd5\u9898\uff1a\u600e\u4e48\u5224\u65ad\u94fe\u8868\u4e2d\u662f\u5426\u6709\u73af\uff1f", "\nbool CircleInList(Link* pHead)", "\n{", "\nif(pHead = = NULL || pHead->next = = NULL)//\u65e0\u8282\u70b9\u6216\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\u5e76\u4e14\u65e0\u81ea\u73af", "\nreturn (false);", "\nif(pHead->next = = pHead)//\u81ea\u73af", "\nreturn (true);", "\nLink *pTemp1 = pHead;//step 1", "\nLink *pTemp = pHead->next;//step 2", "\nwhile(pTemp != pTemp1 && pTemp != NULL && pTemp->next != NULL)", "\n{", "\npTemp1 = pTemp1->next;", "\npTemp = pTemp->next->next;", "\n}", "\nif(pTemp = = pTemp1)", "\nreturn (true);", "\nreturn (false);", "\n}", "\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0cs,t;\u628at\u5b57\u7b26\u4e32\u63d2\u5165\u5230s\u5b57\u7b26\u4e32\u4e2d\uff0cs\u5b57\u7b26\u4e32\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u5b58\u653et\u5b57\u7b26\u4e32", "\nvoid insert(char *s, char *t, int i)", "\n{", "\nmemcpy(&s[strlen(t)+i],&s[i],strlen(s)-i);", "\nmemcpy(&s[i],t,strlen(t));", "\ns[strlen(s)+strlen(t)]=\u2019\\0\u2032;", "\n}", "1\u3002\u7f16\u5199\u4e00\u4e2a C \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5728\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u627e\u5230\u53ef\u80fd\u7684\u6700\u957f\u7684\u5b50\u5b57\u7b26\u4e32\uff0c\u4e14\u8be5\u5b57\u7b26\u4e32\u662f\u7531\u540c\u4e00\u5b57\u7b26\u7ec4\u6210\u7684\u3002", "\nchar * search(char *cpSource, char ch)", "\n{", "\nchar *cpTemp=NULL, *cpDest=NULL;", "\nint iTemp, iCount=0;", "\nwhile(*cpSource)", "\n{", "\nif(*cpSource == ch)", "\n{", "\niTemp = 0;", "\ncpTemp = cpSource;", "\nwhile(*cpSource == ch)", "\n++iTemp, ++cpSource;", "\nif(iTemp > iCount)", "\niCount = iTemp, cpDest = cpTemp;", "\nif(!*cpSource)", "\nbreak;", "\n}", "\n++cpSource;", "\n}", "\nreturn cpDest;", "\n}", "\n2\u3002\u8bf7\u7f16\u5199\u4e00\u4e2a C \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5728\u7ed9\u5b9a\u7684\u5185\u5b58\u533a\u57df\u641c\u7d22\u7ed9\u5b9a\u7684\u5b57\u7b26\uff0c\u5e76\u8fd4\u56de\u8be5\u5b57\u7b26\u6240\u5728\u4f4d\u7f6e\u7d22\u5f15\u503c\u3002", "\nint search(char *cpSource, int n, char ch)", "\n{", "\nint i;", "\nfor(i=0; i", "\nreturn i;", "\n}", "\u4e00\u4e2a\u5355\u5411\u94fe\u8868\uff0c\u4e0d\u77e5\u9053\u5934\u8282\u70b9,\u4e00\u4e2a\u6307\u9488\u6307\u5411\u5176\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\uff0c\u95ee\u5982\u4f55\u5220\u9664\u8fd9\u4e2a\u6307\u9488\u6307\u5411\u7684\u8282\u70b9\uff1f", "\n\u5c06\u8fd9\u4e2a\u6307\u9488\u6307\u5411\u7684next\u8282\u70b9\u503ccopy\u5230\u672c\u8282\u70b9\uff0c\u5c06next\u6307\u5411next->next,\u5e76\u968f\u540e\u5220\u9664\u539fnext\u6307\u5411\u7684\u8282\u70b9\u3002", "#include", "\nvoid foo(int m, int n)", "\n{", "\nprintf(\u201cm=%d, n=%d\\n\u201d, m, n);", "\n}", "int main()", "\n{", "\nint b = 3;", "\nfoo(b+=3, ++b);", "\nprintf(\u201cb=%d\\n\u201d, b);", "\nreturn 0;", "\n}", "\n\u8f93\u51fa\uff1am=7,n=4,b=7(VC6.0)", "\n\u8fd9\u79cd\u65b9\u5f0f\u548c\u7f16\u8bd1\u5668\u4e2d\u5f97\u51fd\u6570\u8c03\u7528\u5173\u7cfb\u76f8\u5173\u5373\u5148\u540e\u5165\u6808\u987a\u5e8f\u3002\u4e0d\u8fc7\u4e0d\u540c", "\n\u7f16\u8bd1\u5668\u5f97\u5904\u7406\u4e0d\u540c\u3002\u4e5f\u662f\u56e0\u4e3aC\u6807\u51c6\u4e2d\u5bf9\u8fd9\u79cd\u65b9\u5f0f\u8bf4\u660e\u4e3a\u672a\u5b9a\u4e49\uff0c\u6240\u4ee5", "\n\u5404\u4e2a\u7f16\u8bd1\u5668\u5382\u5546\u90fd\u6709\u81ea\u5df1\u5f97\u7406\u89e3\uff0c\u6240\u4ee5\u6700\u540e\u4ea7\u751f\u5f97\u7ed3\u679c\u5b8c\u5168\u4e0d\u540c\u3002", "\n\u56e0\u4e3a\u8fd9\u6837\uff0c\u6240\u4ee5\u9047\u89c1\u8fd9\u79cd\u51fd\u6570\uff0c\u6211\u4eec\u9996\u5148\u8981\u8003\u8651\u6211\u4eec\u5f97\u7f16\u8bd1\u5668\u4f1a\u5982\u4f55\u5904\u7406", "\n\u8fd9\u6837\u5f97\u51fd\u6570\uff0c\u5176\u6b21\u770b\u51fd\u6570\u5f97\u8c03\u7528\u65b9\u5f0f\uff0c\u4e0d\u540c\u5f97\u8c03\u7528\u65b9\u5f0f\uff0c\u53ef\u80fd\u4ea7\u751f\u4e0d\u540c\u5f97", "\n\u7ed3\u679c\u3002\u6700\u540e\u662f\u770b\u7f16\u8bd1\u5668\u4f18\u5316\u3002", "2.\u5199\u4e00\u51fd\u6570\uff0c\u5b9e\u73b0\u5220\u9664\u5b57\u7b26\u4e32str1\u4e2d\u542b\u6709\u7684\u5b57\u7b26\u4e32str2.", "\n\u7b2c\u4e8c\u4e2a\u5c31\u662f\u5229\u7528\u4e00\u4e2aKMP\u5339\u914d\u7b97\u6cd5\u627e\u5230str2\u7136\u540e\u5220\u9664\uff08\u7528\u94fe\u8868\u5b9e\u73b0\u7684\u8bdd\uff0c\u4fbf\u6377\u4e8e\u6570\u7ec4\uff09", "/*\u96c5\u864e\u7b14\u8bd5\u9898(\u5b57\u7b26\u4e32\u64cd\u4f5c)", "\n\u7ed9\u5b9a\u5b57\u7b26\u4e32A\u548cB,\u8f93\u51faA\u548cB\u4e2d\u7684\u6700\u5927\u516c\u5171\u5b50\u4e32\u3002", "\n\u6bd4\u5982A=\u201daocdfe\u201d B=\u201dpmcdfa\u201d \u5219\u8f93\u51fa\u201dcdf\u201d", "\n*/", "\n//Author: azhen", "\n#include", "\n#include", "\n#include", "char *commanstring(char shortstring[], char longstring[])", "\n{", "\nint i, j;", "char *substring=malloc(256);", "if(strstr(longstring, shortstring)!=NULL) //\u5982\u679c\u2026\u2026\uff0c\u90a3\u4e48\u8fd4\u56deshortstring", "\nreturn shortstring;", "for(i=strlen(shortstring)-1;i>0; i\u2013) //\u5426\u5219\uff0c\u5f00\u59cb\u5faa\u73af\u8ba1\u7b97", "\n{", "\nfor(j=0; j\nmemcpy(substring, &shortstring[j], i);", "\nsubstring[i]='\\0';", "\nif(strstr(longstring, substring)!=NULL)", "\nreturn substring;", "\n}", "\n}", "\nreturn NULL;", "\n}", "main()", "\n{", "\nchar *str1=malloc(256);", "\nchar *str2=malloc(256);", "\nchar *comman=NULL;", "gets(str1);", "\ngets(str2);", "if(strlen(str1)>strlen(str2)) //\u5c06\u77ed\u7684\u5b57\u7b26\u4e32\u653e\u524d\u9762", "\ncomman=commanstring(str2, str1);", "\nelse", "\ncomman=commanstring(str1, str2);", "printf(\u201cthe longest comman string is: %s\\n\u201d, comman);", "\n}", "11.\u5199\u4e00\u4e2a\u51fd\u6570\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32str1\u548cstr2\u7684\u5927\u5c0f\uff0c\u82e5\u76f8\u7b49\u8fd4\u56de0\uff0c\u82e5str1\u5927\u4e8e", "\nstr2\u8fd4\u56de1\uff0c\u82e5str1\u5c0f\u4e8estr2\u8fd4\u56de\uff0d1", "\nint strcmp ( const char * src,const char * dst)", "\n{", "\nint ret = 0 ;", "\nwhile( ! (ret = *(unsigned char *)src \u2013 *(unsigned char *)dst) && *dst)", "\n{", "\n++src;", "\n++dst;", "\n}", "\nif ( ret \nret = -1 ;", "\nelse if ( ret > 0 )", "\nret = 1 ;", "\nreturn( ret );", "\n}", "\n3,\u6c421000\uff01\u7684\u672a\u5c3e\u6709\u51e0\u4e2a0\uff08\u7528\u7d20\u6570\u76f8\u4e58\u7684\u65b9\u6cd5\u6765\u505a\uff0c\u598272=2*2*2*3*3\uff09;", "\n\u6c42\u51fa1->1000\u91cc,\u80fd\u88ab5\u6574\u9664\u7684\u6570\u7684\u4e2a\u6570n1,\u80fd\u88ab25\u6574\u9664\u7684\u6570\u7684\u4e2a\u6570n2,\u80fd\u88ab125\u6574\u9664\u7684\u6570\u7684\u4e2a\u6570n3,", "\n\u80fd\u88ab625\u6574\u9664\u7684\u6570\u7684\u4e2a\u6570n4.", "\n1000!\u672b\u5c3e\u7684\u96f6\u7684\u4e2a\u6570=n1+n2+n3+n4;", "\n#include", "\n#define NUM 1000", "int find5(int num){", "\nint ret=0;", "\nwhile(num%5==0){", "\nnum/=5;", "\nret++;", "\n}", "\nreturn ret;", "\n}", "\nint main(){", "\nint result=0;", "\nint i;", "\nfor(i=5;i\n{", "\nresult+=find5(i);", "\n}", "\nprintf(\" the total zero number is %d\\n\",result);", "\nreturn 0;", "\n}", "1. \u6709\u53cc\u5411\u5faa\u73af\u94fe\u8868\u7ed3\u70b9\u5b9a\u4e49\u4e3a\uff1a", "\nstruct node", "\n{ int data;", "\nstruct node *front,*next;", "\n};", "\n\u6709\u4e24\u4e2a\u53cc\u5411\u5faa\u73af\u94fe\u8868A\uff0cB\uff0c\u77e5\u9053\u5176\u5934\u6307\u9488\u4e3a\uff1apHeadA,pHeadB\uff0c\u8bf7\u5199\u4e00\u51fd\u6570\u5c06\u4e24\u94fe\u8868\u4e2ddata\u503c\u76f8\u540c\u7684\u7ed3\u70b9\u5220\u9664", "\nBOOL DeteleNode(Node *pHeader, DataType Value)", "\n{", "\nif (pHeader == NULL) return;", "BOOL bRet = FALSE;", "\nNode *pNode = pHead;", "\nwhile (pNode != NULL)", "\n{", "\nif (pNode->data == Value)", "\n{", "\nif (pNode->front == NULL)", "\n{", "\npHeader = pNode->next;", "\npHeader->front = NULL;", "\n}", "\nelse", "\n{", "\nif (pNode->next != NULL)", "\n{", "\npNode->next->front = pNode->front;", "\n}", "\npNode->front->next = pNode->next;", "\n}", "Node *pNextNode = pNode->next;", "\ndelete pNode;", "\npNode = pNextNode;", "bRet = TRUE;", "\n//\u4e0d\u8981break\u6216return, \u5220\u9664\u6240\u6709", "\n}", "\nelse", "\n{", "\npNode = pNode->next;", "\n}", "\n}", "return bRet;", "\n}", "void DE(Node *pHeadA, Node *pHeadB)", "\n{", "\nif (pHeadA == NULL || pHeadB == NULL)", "\n{", "\nreturn;", "\n}", "Node *pNode = pHeadA;", "\nwhile (pNode != NULL)", "\n{", "\nif (DeteleNode(pHeadB, pNode->data))", "\n{", "\nif (pNode->front == NULL)", "\n{", "\npHeadA = pNode->next;", "\npHeadA->front = NULL;", "\n}", "\nelse", "\n{", "\npNode->front->next = pNode->next;", "\nif (pNode->next != NULL)", "\n{", "\npNode->next->front = pNode->front;", "\n}", "\n}", "\nNode *pNextNode = pNode->next;", "\ndelete pNode;", "\npNode = pNextNode;", "\n}", "\nelse", "\n{", "\npNode = pNode->next;", "\n}", "\n}", "\n}", "\n2. \u7f16\u7a0b\u5b9e\u73b0\uff1a\u627e\u51fa\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u6700\u5927\u516c\u5171\u5b50\u5b57\u7b26\u4e32,\u5982\u201dabccade\u201d,\u201ddgcadde\u201d\u7684\u6700\u5927\u5b50\u4e32\u4e3a\u201dcad\u201d", "\nint GetCommon(char *s1, char *s2, char **r1, char **r2)", "\n{", "\nint len1 = strlen(s1);", "\nint len2 = strlen(s2);", "\nint maxlen = 0;", "for(int i = 0; i \n{", "\nfor(int j = 0; j \n{", "\nif(s1[i] == s2[j])", "\n{", "\nint as = i, bs = j, count = 1;", "\nwhile(as + 1 \ncount++;", "if(count > maxlen)", "\n{", "\nmaxlen = count;", "\n*r1 = s1 + i;", "\n*r2 = s2 + j;", "\n}", "\n}", "\n}", "\n}", "\n3. \u7f16\u7a0b\u5b9e\u73b0\uff1a\u628a\u5341\u8fdb\u5236\u6570(long\u578b)\u5206\u522b\u4ee5\u4e8c\u8fdb\u5236\u548c\u5341\u516d\u8fdb\u5236\u5f62\u5f0f\u8f93\u51fa\uff0c\u4e0d\u80fd\u4f7f\u7528printf\u7cfb\u5217\u5e93\u51fd\u6570", "\nchar* test3(long num) {", "\nchar* buffer = (char*)malloc(11);", "\nbuffer[0] = \u20190\u2032;", "\nbuffer[1] = \u2018x\u2019;", "\nbuffer[10] = \u2018\\0\u2032;", "char* temp = buffer + 2;", "\nfor (int i=0; i \ntemp[i] = (char)(num>28);", "\ntemp[i] = temp[i] >= 0 ? temp[i] : temp[i] + 16;", "\ntemp[i] = temp[i] \n}", "\nreturn buffer;", "\n}", "\u8f93\u5165N, \u6253\u5370 N*N \u77e9\u9635", "\n\u6bd4\u5982 N = 3\uff0c\u6253\u5370\uff1a", "1 2 3", "\n8 9 4", "\n7 6 5", "N = 4\uff0c\u6253\u5370\uff1a", "1 2 3 4", "\n12 13 14 5", "\n11 16 15 6", "\n10 9 8 7", "\n\u89e3\u7b54\uff1a", "\n1 #define N 15", "\nint s[N][N];", "\nvoid main()", "\n{", "\nint k = 0, i = 0, j = 0;", "\nint a = 1;", "\nfor( ; k \n{", "\nwhile( j \nwhile( i \nwhile( j > k-1 ) s[i][j--] = a++; i\u2013; j++;", "\nwhile( i > k ) s[i--][j] = a++; i++; j++;", "\n}", "\nfor( i = 0; i \n{", "\nfor( j = 0; j \ncout \ncout \n}", "\n}", "\n2 define MAX_N 100", "\nint matrix[MAX_N][MAX_N];", "/*", "\n*\uff08x,y\uff09\uff1a\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u5750\u6807", "\n* start\uff1a\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u503c", "\n* n\uff1a\u77e9\u9635\u7684\u5927\u5c0f", "\n*/", "\nvoid SetMatrix(int x, int y, int start, int n) {", "\nint i, j;", "if (n \nreturn;", "\nif (n == 1) { //\u77e9\u9635\u5927\u5c0f\u4e3a1\u65f6", "\nmatrix[x][y] = start;", "\nreturn;", "\n}", "\nfor (i = x; i \nmatrix[y][i] = start++;", "for (j = y; j \nmatrix[j][x+n-1] = start++;", "for (i = x+n-1; i > x; i\u2013) //\u5e95\u90e8", "\nmatrix[y+n-1][i] = start++;", "for (j = y+n-1; j > y; j\u2013) //\u5de6\u90e8", "\nmatrix[j][x] = start++;", "SetMatrix(x+1, y+1, start, n-2); //\u9012\u5f52", "\n}", "void main() {", "\nint i, j;", "\nint n;", "scanf(\u201c%d\u201d, &n);", "\nSetMatrix(0, 0, 1, n);", "//\u6253\u5370\u87ba\u65cb\u77e9\u9635", "\nfor(i = 0; i \nfor (j = 0; j \nprintf(\"%4d\", matrix[i][j]);", "\nprintf(\"\\n\");", "\n}", "\n}", "\u6590\u6ce2\u62c9\u5951\u6570\u5217\u9012\u5f52\u5b9e\u73b0\u7684\u65b9\u6cd5\u5982\u4e0b\uff1a", "\nint Funct( int n )", "\n{", "\nif(n==0) return 1;", "\nif(n==1) return 1;", "\nretrurn Funct(n-1) + Funct(n-2);", "\n}", "\n\u8bf7\u95ee\uff0c\u5982\u4f55\u4e0d\u4f7f\u7528\u9012\u5f52\uff0c\u6765\u5b9e\u73b0\u4e0a\u8ff0\u51fd\u6570\uff1f", "\n\u8bf7\u6559\u5404\u4f4d\u9ad8\u624b\uff01", "\n\u89e3\u7b54\uff1aint Funct( int n ) // n \u4e3a\u975e\u8d1f\u6574\u6570", "\n{", "\nint a=0;", "\nint b=1;", "\nint c;", "\nif(n==0) c=1;", "\nelse if(n==1) c=1;", "\nelse for(int i=2;i\n{", "\nc=a+b;", "\na=b;", "\nb=c;", "\n}", "\nreturn c;", "\n}", "\n\u89e3\u7b54\uff1a", "\n\u73b0\u5728\u5927\u591a\u6570\u7cfb\u7edf\u90fd\u662f\u5c06\u4f4e\u5b57\u4f4d\u653e\u5728\u524d\u9762\uff0c\u800c\u7ed3\u6784\u4f53\u4e2d\u4f4d\u57df\u7684\u7533\u660e\u4e00\u822c\u662f\u5148\u58f0\u660e\u9ad8\u4f4d\u3002", "\n100 \u7684\u4e8c\u8fdb\u5236\u662f 001 100 100", "\n\u4f4e\u4f4d\u5728\u524d \u9ad8\u4f4d\u5728\u540e", "\n001----s3", "\n100----s2", "\n100----s1", "\n\u6240\u4ee5\u7ed3\u679c\u5e94\u8be5\u662f 1", "\n\u5982\u679c\u5148\u7533\u660e\u7684\u5728\u4f4e\u4f4d\u5219\uff1a", "\n001----s1", "\n100----s2", "\n100----s3", "\n\u7ed3\u679c\u662f 4", "\n1\u3001\u539f\u9898\u8ddflittle-endian\uff0cbig-endian\u6ca1\u6709\u5173\u7cfb", "\n2\u3001\u539f\u9898\u8ddf\u4f4d\u57df\u7684\u5b58\u50a8\u7a7a\u95f4\u5206\u914d\u6709\u5173\uff0c\u5230\u5e95\u662f\u4ece\u4f4e\u5b57\u8282\u5206\u914d\u8fd8\u662f\u4ece\u9ad8\u5b57\u8282\u5206\u914d\uff0c\u4eceDev C++\u548cVC7.1\u4e0a\u770b\uff0c\u90fd\u662f\u4ece\u4f4e\u5b57\u8282\u5f00\u59cb\u5206\u914d\uff0c\u5e76\u4e14\u8fde\u7eed\u5206\u914d\uff0c\u4e2d\u95f4\u4e0d\u7a7a\uff0c\u4e0d\u50cf\u8c2d\u7684\u4e66\u90a3\u6837\u4f1a\u7559\u7a7a\u4f4d", "\n3\u3001\u539f\u9898\u8ddf\u7f16\u8bd1\u5668\u6709\u5173\uff0c\u7f16\u8bd1\u5668\u5728\u672a\u7528\u5806\u6808\u7a7a\u95f4\u7684\u9ed8\u8ba4\u503c\u5206\u914d\u4e0a\u6709\u6240\u4e0d\u540c\uff0cDev C++\u672a\u7528\u7a7a\u95f4\u5206\u914d\u4e3a", "\n01110111b\uff0cVC7.1\u4e0b\u4e3a11001100b,\u6240\u4ee5\u5728Dev C++\u4e0b\u7684\u7ed3\u679c\u4e3a5\uff0c\u5728VC7.1\u4e0b\u4e3a1\u3002", "\u6ce8\uff1aPC\u4e00\u822c\u91c7\u7528little-endian\uff0c\u5373\u9ad8\u9ad8\u4f4e\u4f4e\uff0c\u4f46\u5728\u7f51\u7edc\u4f20\u8f93\u4e0a\uff0c\u4e00\u822c\u91c7\u7528big-endian\uff0c\u5373\u9ad8\u4f4e\u4f4e\u9ad8\uff0c\u534e\u4e3a\u662f\u505a\u7f51\u7edc\u7684\uff0c\u6240\u4ee5\u53ef\u80fd\u8003\u8651big-endian\u6a21\u5f0f\uff0c\u8fd9\u6837\u8f93\u51fa\u7ed3\u679c\u53ef\u80fd\u4e3a4", "\u5224\u65ad\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u4e0d\u662f\u56de\u6587", "\nint IsReverseStr(char *aStr)", "\n{", "\nint i,j;", "\nint found=1;", "\nif(aStr==NULL)", "\nreturn -1;", "\nj=strlen(aStr);", "\nfor(i=0;i", "\nif(*(aStr+i)!=*(aStr+j-i-1))", "\n{", "\nfound=0;", "\nbreak;", "\n}", "\nreturn found;", "\n}", "\nJosephu \u95ee\u9898\u4e3a\uff1a\u8bbe\u7f16\u53f7\u4e3a1\uff0c2\uff0c\u2026 n\u7684n\u4e2a\u4eba\u56f4\u5750\u4e00\u5708\uff0c\u7ea6\u5b9a\u7f16\u53f7\u4e3ak\uff081\n", "\u6570\u7ec4\u5b9e\u73b0\uff1a", "\n#include", "\n#include", "\nint Josephu(int n, int m)", "\n{", "\nint flag, i, j = 0;", "\nint *arr = (int *)malloc(n * sizeof(int));", "\nfor (i = 0; i \narr[i] = 1;", "\nfor (i = 1; i \n{", "\nflag = 0;", "\nwhile (flag \n{", "\nif (j == n)", "\nj = 0;", "\nif (arr[j])", "\n++flag;", "\n++j;", "\n}", "\narr[j - 1] = 0;", "\nprintf(\"\u7b2c%4d\u4e2a\u51fa\u5c40\u7684\u4eba\u662f\uff1a%4d\u53f7\\n\", i, j);", "\n}", "\nfree(arr);", "\nreturn j;", "\n}", "\nint main()", "\n{", "\nint n, m;", "\nscanf(\"%d%d\", &n, &m);", "\nprintf(\"\u6700\u540e\u80dc\u5229\u7684\u662f%d\u53f7\uff01\\n\", Josephu(n, m));", "\nsystem(\"pause\");", "\nreturn 0;", "\n}", "\n\u94fe\u8868\u5b9e\u73b0\uff1a", "\n#include", "\n#include", "\ntypedef struct Node", "\n{", "\nint index;", "\nstruct Node *next;", "\n}JosephuNode;", "\nint Josephu(int n, int m)", "\n{", "\nint i, j;", "\nJosephuNode *head, *tail;", "\nhead = tail = (JosephuNode *)malloc(sizeof(JosephuNode));", "\nfor (i = 1; i \n{", "\ntail->index = i;", "\ntail->next = (JosephuNode *)malloc(sizeof(JosephuNode));", "\ntail = tail->next;", "\n}", "\ntail->index = i;", "\ntail->next = head;", "for (i = 1; tail != head; ++i)", "\n{", "\nfor (j = 1; j \n{", "\ntail = head;", "\nhead = head->next;", "\n}", "\ntail->next = head->next;", "\nprintf(\u201c\u7b2c%4d\u4e2a\u51fa\u5c40\u7684\u4eba\u662f\uff1a%4d\u53f7\\n\u201d, i, head->index);", "\nfree(head);", "\nhead = tail->next;", "\n}", "\ni = head->index;", "\nfree(head);", "\nreturn i;", "\n}", "\nint main()", "\n{", "\nint n, m;", "\nscanf(\u201c%d%d\u201d, &n, &m);", "\nprintf(\u201c\u6700\u540e\u80dc\u5229\u7684\u662f%d\u53f7\uff01\\n\u201d, Josephu(n, m));", "\nsystem(\u201cpause\u201d);", "\nreturn 0;", "\n}", "\u5df2\u77e5strcpy\u51fd\u6570\u7684\u539f\u578b\u662f\uff1a", "\nchar * strcpy(char * strDest,const char * strSrc);", "\n1.\u4e0d\u8c03\u7528\u5e93\u51fd\u6570\uff0c\u5b9e\u73b0strcpy\u51fd\u6570\u3002", "\n2.\u89e3\u91ca\u4e3a\u4ec0\u4e48\u8981\u8fd4\u56dechar *\u3002", "\n\u89e3\u8bf4\uff1a", "\n1.strcpy\u7684\u5b9e\u73b0\u4ee3\u7801", "\nchar * strcpy(char * strDest,const char * strSrc)", "\n{", "\nif ((strDest==NULL)||(strSrc==NULL)) file://[/1]", "\nthrow \u201cInvalid argument(s)\u201d; //[2]", "\nchar * strDestCopy=strDest; file://[/3]", "\nwhile ((*strDest++=*strSrc++)!=\u2019\\0\u2032); file://[/4]", "\nreturn strDestCopy;", "\n}", "\n\u9519\u8bef\u7684\u505a\u6cd5\uff1a", "\n[1]", "\n(A)\u4e0d\u68c0\u67e5\u6307\u9488\u7684\u6709\u6548\u6027\uff0c\u8bf4\u660e\u7b54\u9898\u8005\u4e0d\u6ce8\u91cd\u4ee3\u7801\u7684\u5065\u58ee\u6027\u3002", "\n(B) \u68c0\u67e5\u6307\u9488\u7684\u6709\u6548\u6027\u65f6\u4f7f\u7528((!strDest)||(!strSrc))\u6216(!(strDest&&strSrc))\uff0c\u8bf4\u660e\u7b54\u9898\u8005\u5bf9C\u8bed\u8a00\u4e2d\u7c7b\u578b\u7684\u9690\u5f0f\u8f6c\u6362\u6ca1\u6709\u6df1\u523b\u8ba4\u8bc6\u3002\u5728\u672c\u4f8b\u4e2dchar *\u8f6c\u6362\u4e3abool\u5373\u662f\u7c7b\u578b\u9690\u5f0f\u8f6c\u6362\uff0c\u8fd9\u79cd\u529f\u80fd\u867d\u7136\u7075\u6d3b\uff0c\u4f46\u66f4\u591a\u7684\u662f\u5bfc\u81f4\u51fa\u9519\u6982\u7387\u589e\u5927\u548c\u7ef4\u62a4\u6210\u672c\u5347\u9ad8\u3002\u6240\u4ee5C++\u4e13\u95e8\u589e\u52a0\u4e86bool\u3001true\u3001false \u4e09\u4e2a\u5173\u952e\u5b57\u4ee5\u63d0\u4f9b\u66f4\u5b89\u5168\u7684\u6761\u4ef6\u8868\u8fbe\u5f0f\u3002", "\n(C)\u68c0\u67e5\u6307\u9488\u7684\u6709\u6548\u6027\u65f6\u4f7f\u7528((strDest==0)||(strSrc==0))\uff0c\u8bf4\u660e\u7b54\u9898\u8005\u4e0d\u77e5\u9053\u4f7f\u7528\u5e38\u91cf\u7684\u597d\u5904\u3002\u76f4\u63a5\u4f7f\u7528\u5b57\u9762\u5e38\u91cf\uff08\u5982\u672c\u4f8b\u4e2d\u76840\uff09\u4f1a\u51cf\u5c11\u7a0b\u5e8f\u7684\u53ef\u7ef4\u62a4\u6027\u30020\u867d\u7136\u7b80\u5355\uff0c\u4f46\u7a0b\u5e8f\u4e2d\u53ef\u80fd\u51fa\u73b0\u5f88\u591a\u5904\u5bf9\u6307\u9488\u7684\u68c0\u67e5\uff0c\u4e07\u4e00\u51fa\u73b0\u7b14\u8bef\uff0c\u7f16\u8bd1\u5668\u4e0d\u80fd\u53d1\u73b0\uff0c\u751f\u6210\u7684\u7a0b\u5e8f\u5185\u542b\u903b\u8f91\u9519\u8bef\uff0c\u5f88\u96be\u6392\u9664\u3002\u800c\u4f7f\u7528NULL\u4ee3\u66ff0\uff0c\u5982\u679c\u51fa\u73b0\u62fc\u5199\u9519\u8bef\uff0c\u7f16\u8bd1\u5668\u5c31\u4f1a\u68c0\u67e5\u51fa\u6765\u3002", "\n[2]", "\n(A)return new string(\u201cInvalid argument(s)\u201d);\uff0c\u8bf4\u660e\u7b54\u9898\u8005\u6839\u672c\u4e0d\u77e5\u9053\u8fd4\u56de\u503c\u7684\u7528\u9014\uff0c\u5e76\u4e14\u4ed6\u5bf9\u5185\u5b58\u6cc4\u6f0f\u4e5f\u6ca1\u6709\u8b66\u60d5\u5fc3\u3002\u4ece\u51fd\u6570\u4e2d\u8fd4\u56de\u51fd\u6570\u4f53\u5185\u5206\u914d\u7684\u5185\u5b58\u662f\u5341\u5206\u5371\u9669\u7684\u505a\u6cd5\uff0c\u4ed6\u628a\u91ca\u653e\u5185\u5b58\u7684\u4e49\u52a1\u629b\u7ed9\u4e0d\u77e5\u60c5\u7684\u8c03\u7528\u8005\uff0c\u7edd\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u8c03\u7528\u8005\u4e0d\u4f1a\u91ca\u653e\u5185\u5b58\uff0c\u8fd9\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f\u3002", "\n(B)return 0;\uff0c\u8bf4\u660e\u7b54\u9898\u8005\u6ca1\u6709\u638c\u63e1\u5f02\u5e38\u673a\u5236\u3002\u8c03\u7528\u8005\u6709\u53ef\u80fd\u5fd8\u8bb0\u68c0\u67e5\u8fd4\u56de\u503c\uff0c\u8c03\u7528\u8005\u8fd8\u53ef\u80fd\u65e0\u6cd5\u68c0\u67e5\u8fd4\u56de\u503c\uff08\u89c1\u540e\u9762\u7684\u94fe\u5f0f\u8868\u8fbe\u5f0f\uff09\u3002\u5984\u60f3\u8ba9\u8fd4\u56de\u503c\u80a9\u8d1f\u8fd4\u56de\u6b63\u786e\u503c\u548c\u5f02\u5e38\u503c\u7684\u53cc\u91cd\u529f\u80fd\uff0c\u5176\u7ed3\u679c\u5f80\u5f80\u662f\u4e24\u79cd\u529f\u80fd\u90fd\u5931\u6548\u3002\u5e94\u8be5\u4ee5\u629b\u51fa\u5f02\u5e38\u6765\u4ee3\u66ff\u8fd4\u56de\u503c\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u8f7b\u8c03\u7528\u8005\u7684\u8d1f\u62c5\u3001\u4f7f\u9519\u8bef\u4e0d\u4f1a\u88ab\u5ffd\u7565\u3001\u589e\u5f3a\u7a0b\u5e8f\u7684\u53ef\u7ef4\u62a4\u6027\u3002", "\n[3]", "\n(A)\u5fd8\u8bb0\u4fdd\u5b58\u539f\u59cb\u7684strDest\u503c\uff0c\u8bf4\u660e\u7b54\u9898\u8005\u903b\u8f91\u601d\u7ef4\u4e0d\u4e25\u5bc6\u3002", "\n[4]", "\n(A)\u5faa\u73af\u5199\u6210while (*strDest++=*strSrc++);\uff0c\u540c[1](B)\u3002", "\n(B)\u5faa\u73af\u5199\u6210while (*strSrc!=\u2019\\0\u2032) *strDest++=*strSrc++;\uff0c\u8bf4\u660e\u7b54\u9898\u8005\u5bf9\u8fb9\u754c\u6761\u4ef6\u7684\u68c0\u67e5\u4e0d\u529b\u3002\u5faa\u73af\u4f53\u7ed3\u675f\u540e\uff0cstrDest\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u6ca1\u6709\u6b63\u786e\u5730\u52a0\u4e0a\u2019\\0\u2032\u3002", "static", "\n\u58f0\u660e\u7684\u53d8\u91cf\u5728C\u8bed\u8a00\u4e2d\u6709\u4e24\u65b9\u9762\u7684\u7279\u5f81\uff1a", "\n\u3000\u30001)\u3001\u53d8\u91cf\u4f1a\u88ab\u653e\u5728\u7a0b\u5e8f\u7684\u5168\u5c40\u5b58\u50a8\u533a\u4e2d\uff0c\u8fd9\u6837\u53ef\u4ee5\u5728\u4e0b\u4e00\u6b21\u8c03\u7528\u7684\u65f6\u5019\u8fd8\u53ef\u4ee5\u4fdd\u6301\u539f\u6765\u7684\u8d4b\u503c\u3002\u8fd9\u4e00\u70b9\u662f\u5b83\u4e0e\u5806\u6808\u53d8\u91cf\u548c\u5806\u53d8\u91cf\u7684\u533a\u522b\u3002", "\n\u3000\u30002)\u3001\u53d8\u91cf\u7528static\u544a\u77e5\u7f16\u8bd1\u5668\uff0c\u81ea\u5df1\u4ec5\u4ec5\u5728\u53d8\u91cf\u7684\u4f5c\u7528\u8303\u56f4\u5185\u53ef\u89c1\u3002\u8fd9\u4e00\u70b9\u662f\u5b83\u4e0e\u5168\u5c40\u53d8\u91cf\u7684\u533a\u522b\u3002", "\nTips:", "\n\u3000\u3000A.\u82e5\u5168\u5c40\u53d8\u91cf\u4ec5\u5728\u5355\u4e2aC\u6587\u4ef6\u4e2d\u8bbf\u95ee\uff0c\u5219\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u53d8\u91cf\u4fee\u6539\u4e3a\u9759\u6001\u5168\u5c40\u53d8\u91cf\uff0c\u4ee5\u964d\u4f4e\u6a21\u5757\u95f4\u7684\u8026\u5408\u5ea6\uff1b", "\n\u3000\u3000B.\u82e5\u5168\u5c40\u53d8\u91cf\u4ec5\u7531\u5355\u4e2a\u51fd\u6570\u8bbf\u95ee\uff0c\u5219\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u53d8\u91cf\u6539\u4e3a\u8be5\u51fd\u6570\u7684\u9759\u6001\u5c40\u90e8\u53d8\u91cf\uff0c\u4ee5\u964d\u4f4e\u6a21\u5757\u95f4\u7684\u8026\u5408\u5ea6\uff1b", "\n\u3000\u3000C.\u8bbe\u8ba1\u548c\u4f7f\u7528\u8bbf\u95ee\u52a8\u6001\u5168\u5c40\u53d8\u91cf\u3001\u9759\u6001\u5168\u5c40\u53d8\u91cf\u3001\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u7684\u51fd\u6570\u65f6\uff0c\u9700\u8981\u8003\u8651\u91cd\u5165\u95ee\u9898\uff1b", "\n  D.\u5982\u679c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u53ef\u91cd\u5165\u7684\u51fd\u6570\uff0c\u90a3\u4e48\uff0c\u6211\u4eec\u4e00\u5b9a\u8981\u907f\u514d\u51fd\u6570\u4e2d\u4f7f\u7528static\u53d8\u91cf(\u8fd9\u6837\u7684\u51fd\u6570\u88ab\u79f0\u4e3a\uff1a\u5e26\u201c\u5185\u90e8\u5b58\u50a8\u5668\u201d\u529f\u80fd\u7684\u7684\u51fd\u6570)", "\n  E.\u51fd\u6570\u4e2d\u5fc5\u987b\u8981\u4f7f\u7528static\u53d8\u91cf\u60c5\u51b5:\u6bd4\u5982\u5f53\u67d0\u51fd\u6570\u7684\u8fd4\u56de\u503c\u4e3a\u6307\u9488\u7c7b\u578b\u65f6\uff0c\u5219\u5fc5\u987b\u662fstatic\u7684\u5c40\u90e8\u53d8\u91cf\u7684\u5730\u5740\u4f5c\u4e3a\u8fd4\u56de\u503c\uff0c\u82e5\u4e3aauto\u7c7b\u578b\uff0c\u5219\u8fd4\u56de\u4e3a\u9519\u6307\u9488\u3002", "\u51fd\u6570\u524d\u52a0static\u4f7f\u5f97\u51fd\u6570\u6210\u4e3a\u9759\u6001\u51fd\u6570\u3002\u4f46\u6b64\u5904\u201cstatic\u201d\u7684\u542b\u4e49\u4e0d\u662f\u6307\u5b58\u50a8\u65b9\u5f0f\uff0c\u800c\u662f\u6307\u5bf9\u51fd\u6570\u7684\u4f5c\u7528\u57df\u4ec5\u5c40\u9650\u4e8e\u672c\u6587\u4ef6(\u6240\u4ee5\u53c8\u79f0\u5185\u90e8\u51fd\u6570)\u3002\u4f7f\u7528\u5185\u90e8\u51fd\u6570\u7684\u597d\u5904\u662f\uff1a\u4e0d\u540c\u7684\u4eba\u7f16\u5199\u4e0d\u540c\u7684\u51fd\u6570\u65f6\uff0c\u4e0d\u7528\u62c5\u5fc3\u81ea\u5df1\u5b9a\u4e49\u7684\u51fd\u6570\uff0c\u662f\u5426\u4f1a\u4e0e\u5176\u5b83\u6587\u4ef6\u4e2d\u7684\u51fd\u6570\u540c\u540d\u3002", "\n\u6269\u5c55\u5206\u6790:\u672f\u8bedstatic\u6709\u7740\u4e0d\u5bfb\u5e38\u7684\u5386\u53f2.\u8d77\u521d\uff0c\u5728C\u4e2d\u5f15\u5165\u5173\u952e\u5b57static\u662f\u4e3a\u4e86\u8868\u793a\u9000\u51fa\u4e00\u4e2a\u5757\u540e\u4ecd\u7136\u5b58\u5728\u7684\u5c40\u90e8\u53d8\u91cf\u3002\u968f\u540e\uff0cstatic", "\n\u5728C\u4e2d\u6709\u4e86\u7b2c\u4e8c\u79cd\u542b\u4e49\uff1a\u7528\u6765\u8868\u793a\u4e0d\u80fd\u88ab\u5176\u5b83\u6587\u4ef6\u8bbf\u95ee\u7684\u5168\u5c40\u53d8\u91cf\u548c\u51fd\u6570\u3002\u4e3a\u4e86\u907f\u514d\u5f15\u5165\u65b0\u7684\u5173\u952e\u5b57\uff0c\u6240\u4ee5\u4ecd\u4f7f\u7528static\u5173\u952e\u5b57\u6765\u8868\u793a\u8fd9\u7b2c\u4e8c\u79cd\u542b\u4e49\u3002\u6700\u540e\uff0c", "\nC++\u91cd\u7528\u4e86\u8fd9\u4e2a\u5173\u952e\u5b57\uff0c\u5e76\u8d4b\u4e88\u5b83\u4e0e\u524d\u9762\u4e0d\u540c\u7684\u7b2c\u4e09\u79cd\u542b\u4e49\uff1a\u8868\u793a\u5c5e\u4e8e\u4e00\u4e2a\u7c7b\u800c\u4e0d\u662f\u5c5e\u4e8e\u6b64\u7c7b\u7684\u4efb\u4f55\u7279\u5b9a\u5bf9\u8c61\u7684\u53d8\u91cf\u548c\u51fd\u6570(\u4e0eJava\u4e2d\u6b64\u5173\u952e\u5b57\u7684\u542b\u4e49\u76f8", "\n\u540c)\u3002", "\u7b2c\u4e00\u90e8\u5206\uff1a", "\n1\u3001", "\nint k=0;", "\nwhile (k=1) {k++;}", "\nA:\u5faa\u73af\u4e00\u6b21", "\nB:\u5faa\u73af\u65e0\u6570\u6b21", "\nC:\u8bed\u6cd5\u9519\u8bef", "\nD:\u4e0d\u5faa\u73af", "\n\u7b54\u6848\uff1aB", "\n2\u3001", "\nchar *a=\u201dHello\u201d;", "\nchar *b=\u201dHello\u201d;", "\nif (a==b)", "\n   cout\nelse", "cout\n\u7b54\u6848\uff1adklajkl", "\n3\u3001", "\nclass _Student", "\n{", "\npublic:", "\n  float a;", "\n  char b;", "\n}", "\n_Student student;", "\nstudent.a=3.5;", "\nstudent.b=\"A\";", "\n\u95ee\u9519\u8bef\uff1f\uff1f\uff1f", "\n\u7b54\u6848:b\u4e3achar\u578b\uff0c\u88ab\u8d4b\u4e88\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002", "4\u3001", "\nint i,a[5],*p=a;", "\nfor (i=0;i\n{ p++;", "\n  *p=i;", "\n}", "\n\u95ee\u9519\u8bef\uff1f\uff1f\uff1f", "\n\u7b54\u6848:\u6ca1\u505a\u51fa\u6765", "\n\u7b2c\u4e8c\u90e8\u5206\uff1a", "\nHere is a program in ANSI Standard C:", "\ndouble sum, a[20];", "\nint i;", "\n/*", "\n* Some code to initialize array a with legitimate", "\n* floating point values whose sum is less than \"maximum double\".", "\n*/", "\nsum = 0.0;", "\nfor (i = 0; i \nsum += a[i];", "\nprintf(\"%e \", sum);", "\nsum = 0.0;", "\ni = 20;", "\nwhile (i--)", "\nsum += a[i];", "\nprintf(\"%e \", sum);", "\nQuestion:", "\nWill the 2 \"printed\" values: 1) always be the same? if so, explain why.", "\n2) always be different? if so, explain why.", "\n3) sometimes be the same and sometimes different? if so, give an", "\nexample.", "\nPlease be as complete as possible.", "\n\u6570\u7ec4\u672a\u521d\u59cb\u5316\uff0c\u503c\u662f\u4e0d\u786e\u5b9a\u7684\uff0c\u90093", "\n\u7b2c\u4e09\u90e8\u5206\uff1a", "\n1.\u6539\u9519(5\u5206)", "\nvoid test()", "\n{", "\n    char str[10];", "\n    char* str1 = \"0123456789\";", "\n    strcpy(str, str1);", "\n}", "\n\u7b54\uff1a\u6570\u7ec4\u8d8a\u754cchar str[11];", "\n2.\u6539\u9519(5\u5206)", "\nvoid test()", "\n{", "\n    char str[10], str1[10];", "\n    for( int = 0; i \n    {", "\n        str[i] = 'a';", "\n    }", "\n    strcpy(str, str1);", "\n}", "\n\u7b54\uff1a\u4fee\u6539 strcpy(str, str1 )\u4e3astrcpy(str1,str);", "\n3.\u8bfb\u7a0b\u5e8f,\u5199\u51fa\u7ed3\u679c(5\u5206)", "\nint sum(int a)", "\n{", "\n    int c = 0;", "\n    static int b = 3;", "\n    c += 1;", "\n    b += 2;", "\n    return (a + b + c)", "\n}", "\nint main()", "\n{", "\n    int a = 2;", "\n    for(int i = 0; i \n    {", "\n        printf(\"%d,\", sum(a));", "\n    }", "\n    return 0;", "\n}", "\n\u7b54\uff1a8,10,12,14...", "\n4.\u8bfb\u7a0b\u5e8f,\u5199\u51fa\u7ed3\u679c(5\u5206)", "\nint main()", "\n{", "\n    int a[3];", "\n    a[0] = 0;", "\n    a[1] = 1;", "\n    a[2] = 2;", "\n    int *p, *q;", "\n    p = a;", "\n    q = &a[2];", "\n    int c = a[q - p];", "\n    printf(\"value c = %d\\n\", c++);", "\n    printf(\"value c = %d\\n\", c);", "\n    return 0;", "\n}", "\n\u7b54\uff1a2,3\u56e0\u4e3ac++\uff0c\u6240\u4ee5\u5148\u5f97\u52302,\u518d\u8f93\u51fa3.", "\n5.\u8bfb\u7a0b\u5e8f,\u5199\u51fa\u7ed3\u679c(10\u5206,\u9009\u505a)", "\n#define STRCPY(a, b)    strcpy(a ## _p, #b)", "\nint main()", "\n{", "\n    char var1_p[20];", "\n    char var2_p[30];", "\n    strcpy(var1_p, \"aaaa\");", "\n    strcpy(var2_p, \"bbbb\");", "\n    STRCPY(var1, var2);", "\n    STRCPY(var2, var1);", "\n    printf(\"var1 = %s\\n\", var1_p);", "\n    printf(\"var2 = %s\\n\", var2_p);", "\n    return 0;", "\n}", "\n\u7b54\uff1avar1 = var2", "\n    var2 = var1", "\n6.(10\u5206)\u4e0d\u7528\u9664\u6cd5(\u5373\u4e0d\u80fd\u4f7f\u7528\"/\"\u53f7)\u548c\u5e93\u51fd\u6570,\u8ba1\u7b97285 / 16\u7684\u5546\u548c\u4f59\u6570, \u8981\u6c42\u6548\u7387\u5c3d\u91cf\u9ad8.", "\n    int m = 285;", "\n    int n = 16;", "    int shan  = 0;", "\n    int yushu = 0;", "    while ( m>0 )", "\n    {", "\n        m = m-n;", "\n        shan ++;", "\n    }", "\n    if ( m\n    {", "\n        shan--;", "\n        yushu = m+n;", "\n    }", "    printf (\"285/16=%d*%d+%d\",n,shan,yushu);", "\n    system (\"pause\");", "\n\u5199\u5f97\u6bd4\u8f83\u4ed3\u4fc3\uff0c\u5c06\u5c31\u7740\u770b\u770b\u5427\u3002", "\n7.(15\u5206)\u7f16\u5199\u5b57\u7b26\u4e32\u53cd\u8f6c\u51fd\u6570:strrev.\u8981\u6c42\u65f6\u95f4\u548c\u7a7a\u95f4\u6548\u7387\u90fd\u5c3d\u91cf\u9ad8.", "\n(\u6d4b\u8bd5\u7528\u4f8b:\u8f93\u5165\"abcd\",\u8f93\u51fa\u5e94\u4e3a\"dcba\")", "\n\u51fd\u6570\u539f\u578b\u4e3a:", "\nchar* strrev(char* dest, char* src);", "\n\u63d0\u793a:dest\u548csrc\u53ef\u80fd\u662f\u540c\u4e00\u4e2a\u5b57\u7b26\u4e32.", "\nvoid StrReverse( char *dest, char* sour )", "\n{", "\n    //dest = sour + strlen(sour) -1;", "\n    dest = sour;", "\n    while(*dest){dest++;}", "\n    dest--;", "\n    while ( sour \n    {", "\n       //*sour ^= *dest;", "\n       //*dest ^= *sour;", "\n       //*sour++ ^= *dest--;", "\n       char temp = *sour;", "\n       *sour++ = *dest;", "\n       *dest-- = temp;", "\n    }", "\n}", "\nint main( void )", "\n{", "\n    char str[]=\"I Love The Girl\";", "\n    StrReverse(str,str);", "\n    puts(str);", "\n    system(\"PAUSE\");", "\n    return 0;", "\n}", "\n8.(15\u5206)\u7f16\u5199\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u6574\u6570\u7684\u51fd\u6570atoi,\u53ea\u5904\u7406\u8f93\u5165\u5b57\u7b26\u4e32\u4ec5\u75310-9,'-','+',\u548c\u7a7a\u683c\u7684\u60c5\u51b5.", "\n\u51fd\u6570\u539f\u578b\u4e3a:", "\nint atoi(char* str);", "\n\u63d0\u793a:\u5982\u679c\u5b57\u7b26\u4e32\u4e0d\u80fd\u6784\u6210\u4e00\u6574\u6570,\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de0.\u4f46\u662f\u5bf9\u4e8e\u4ee5\u7a7a\u683c\u5f00\u59cb\u7684\u5b57\u7b26\u4e32\u5e94\u7279\u6b8a\u5904\u7406.", "\n\u7b54\uff1a", "\nint atoi(char* str)", "\n{", "\n    int nRet = 0;", "\n    bool negtive = false;", "\n      // \u5904\u7406\u6570\u5b57\u524d\u6709\u591a\u4e2a\u7a7a\u683c\u7684\u60c5\u51b5\uff0c\u5904\u7406\u6574\u4e2a\u5b57\u7b26\u4e32\u65e0\u6570\u5b57\u7684\u60c5\u51b5\uff0c\u5904\u7406\u5e26+\u53f7\u4e0e\u5e26\u8d1f\u53f7\u7684\u60c5\u51b5", "\n   while ((*str \u20199\u2032 && *str!=\u2019\\0\u2032)||*str==\u2019+'||*str==\u2019-'||*str==\u2019 \u2018)", "\n    {", "\n        if (*str==\u2019 \u2018)", "\n        {", "\n              str++;", "\n        }", "\n        else if (*str==\u2019-')", "\n        {", "\n            str++;", "\n            negtive = true;", "\n            break;", "\n        }", "\n    }", "   // \u4f7f\u7528\u4e00\u4e2awhile\u5faa\u73af\u6c42\u51fa\u6570\u5b57\uff0c\u5982\u679c\u6570\u5b57\u95f4\u542b\u6709\u5176\u5b83\u7279\u6b8a\u5b57\u7b26\uff0c\u8df3\u51fa\u5faa\u73af\uff0c\u5e76\u8fd4\u56de0", "\n    while (*str!=\u2019\\0\u2032)", "\n    {", "\n        if ((*str>=\u20190\u2032&&*str\n        {", "\n            nRet *= 10;", "\n            nRet += *str \u2013 \u20190\u2032;", "\n        }", "\n        else", "\n        {", "\n            return 0;", "\n        }", "\n        str++;", "\n    }", "    //  \u5904\u7406\u8d1f\u6570", "\n    if (negtive)", "\n          nRet = 0 \u2013 nRet;", "\n    return nRet;", "\n}", "\n\u8fd9\u4e2a\u662f060715\u8fd9\u5929\u5199\u7684\uff0c\u7b97\u662f\u6162\u6162\u5b8c\u6210\u6211\u7684\u4efb\u52a1\u5427\u3002", "\n9.(30\u5206)\u7f16\u5199\u4e00\u7ec4\u5355\u94fe\u8868\u64cd\u4f5c\u51fd\u6570.\u94fe\u8868\u7684\u7ed3\u6784\u5982\u4e0b:", "\nstruct ListNode", "\n{", "\n    long id;", "\n    struct ListNode* next;", "\n};", "\n\u94fe\u8868\u8282\u70b9\u4ee5id\u7684\u4ece\u5c0f\u5230\u5927\u6392\u5217,\u5f53id\u76f8\u7b49\u65f6,\u8282\u70b9\u987a\u5e8f\u6ca1\u6709\u7ea6\u5b9a,\u8c01\u5728\u524d\u90fd\u53ef\u4ee5.", "\n\u8981\u6c42\u7f16\u5199\u7684\u51fd\u6570\u6709:", "\n\u904d\u5386\u51fd\u6570:\u8fd4\u56decur\u4e0b\u4e00\u4e2a\u8282\u70b9, \u5982\u679c\u6ca1\u6709\u66f4\u591a\u7684\u8282\u70b9, \u8fd4\u56de0;", "\nstruct ListNode* ListNext(struct ListNode* cur);", "\n\u63d2\u5165\u51fd\u6570:\u5c06newNode\u63d2\u5165\u5230head\u94fe\u8868\u4e2d,\u7136\u540e\u8fd4\u56denewNode\u7684\u524d\u4e00\u8282\u70b9,", "\n\u5982\u679cnewNode\u5df2\u7ecf\u5728\u94fe\u8868\u4e2d,\u8fd4\u56de0.", "\nstruct ListNode* ListInsert(struct ListNode* head, struct ListNode* newNode);", "\n\u5220\u9664\u51fd\u6570:\u4ecehead\u4e2d\u5220\u9664theNode\u8282\u70b9.\u8fd4\u56detheNode\u7684\u524d\u4e00\u8282\u70b9.", "\n\u5982\u679ctheNode\u4e0d\u5728\u94fe\u8868\u4e2d,\u8fd4\u56de0;", "\nstruct ListNode* ListRemove(struct ListNode* head, struct ListNode* theNode);", "\n\u7b54\uff1a", "\n\u8fd9\u4e2a\u53ef\u4ee5\u53c2\u89c1\u6570\u636e\u7ed3\u6784\u76f8\u5173\u7684\u4e66\uff0c\u6211\u5c31\u4e0d\u518d\u5199\u4e00\u904d\u4e86\u3002"], "title": "c\u9762\u8bd5\u8bd5\u9898\u96c6"},
{"contents": ["C\u8bed\u8a00\u8003\u67e5\u7684\u91cd\u70b9\u4e00\u822c\u662f\uff1a\u6307\u9488\u3001\u7ed3\u6784\u4f53\u3001\u6761\u4ef6\u7f16\u8bd1\u3001\u5168\u5c40\u53d8\u91cf/\u5c40\u90e8\u53d8\u91cf\u3002\u4ee5\u4e0b\u662f\u6211\u9047\u89c1\u8fc7\u7684\u9762\u8bd5\u95ee\u9898\uff1a", "\n1\uff09\u8bf7\u8bf4\u4e00\u4e0bextern C\u7684\u4f5c\u7528\uff08\u6c49\u7565\uff09", "\n2\uff09\u8bf7\u8bf4\u4e00\u4e0b#ifdef\u2026\u7684\u4f5c\u7528\uff08\u6c49\u7565\uff09", "\n3\uff09C\u8bed\u8a00\u91cc\uff0c\u54ea\u4e9b\u53d8\u91cf\u662f\u5b58\u653e\u5728\u5806\u91cc\uff0c\u54ea\u4e9b\u662f\u5b58\u653e\u5728\u6808\u91cc\uff1f\uff08\u666e\u5929\uff09", "\n4\uff09C\u8bed\u8a00\u91cc\u7684static\u5173\u952e\u8bcd\u662f\u4ec0\u4e48\u542b\u4e49\uff1f\uff08\u666e\u5929\uff09", "\n5\uff09\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u6709\u4ec0\u4e48\u533a\u522b\uff1f\uff08\u666e\u5929\uff09", "\n4\u3001\u6570\u636e\u7ed3\u6784", "\n\u3000\u3000\u8fd9\u662f\u9762\u8bd5\u4e2d\u51e0\u4e4e\u5fc5\u8003\u7684\u90e8\u5206\u3002\u8003\u67e5\u7684\u91cd\u70b9\u6709\uff1a\u94fe\u8868\uff0c\u4e8c\u53c9\u6811\u524d\u5e8f\u3001\u4e2d\u5e8f\u3001\u540e\u5e8f\u904d\u5386\uff08\u9012\u5f52\uff0c\u975e\u9012\u5f52\uff09\uff0c\u4e8c\u53c9\u6811\u7ed3\u70b9\u3001\u5c42\u6b21\u7684\u8ba1\u7b97\uff0c\u6811\u8f6c\u4e8c\u53c9\u6811\uff0c\u5404\u79cd\u6392\u5e8f\u7b97\u6cd5\uff08\u5192\u6ce1\u6392\u5e8f\uff0c\u5feb\u901f\u6392\u5e8f\uff0c\u5806\u6392\u5e8f\u662f\u91cd\u70b9\uff09\u3002\u4ee5\u4e0b\u662f\u6211\u5728\u9762\u8bd5\u4e2d\u9047\u5230\u8fc7\u7684\u95ee\u9898\uff1a", "\n1\uff09\u8bf7\u7f16\u5199\u7a0b\u5e8f\uff0c\u5c06\u4e00\u4e2a\u94fe\u8868\u5012\u7f6e\u3002\uff08\u8054\u53d1\uff09", "\n2\uff09\u8bf7\u7f16\u5199\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386\u975e\u9012\u5f52\u7b97\u6cd5\u3002\uff08\u65b0\u534e\u793e\uff09", "\n3\uff09\u8bf7\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5b9e\u73b0\u5c06\u6811\u8f6c\u5316\u6210\u4e8c\u53c9\u6811\u3002\uff08\u534e\u4e3a\uff09", "\n4\uff09\u4e00\u68f5\u6ee1\u4e8c\u53c9\u6811\u6709x\u4e2a\u7ed3\u70b9\uff0c\u8bf7\u95ee\u6574\u68f5\u4e8c\u53c9\u6811\u6709\u591a\u5c11\u7ed3\u70b9\uff1f\uff08\u65b0\u534e\u793e\uff0c\u4e2d\u56fd\u4fe1\u4fdd\uff09", "\n5\uff09\u8bf7\u7f16\u7a0b\u5b9e\u73b0\u4e00\u4e2a\u5806\u6392\u5e8f\u7b97\u6cd5/\u5feb\u901f\u6392\u5e8f\u7b97\u6cd5\u3002\uff08\u6c49\u7565\uff09"], "title": "C\u8bed\u8a00\u8003\u67e5\u7684\u91cd\u70b9"},
{"contents": ["\u4e00\u3001\u9009\u62e9\u9898", "\n(1) \u4e0b\u9762\u53d9\u8ff0\u6b63\u786e\u7684\u662f(C)", "\nA. \u7b97\u6cd5\u7684\u6267\u884c\u6548\u7387\u4e0e\u6570\u636e\u7684\u5b58\u50a8\u7ed3\u6784\u65e0\u5173 B. \u7b97\u6cd5\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u662f\u6307\u7b97\u6cd5\u7a0b\u5e8f\u4e2d\u6307\u4ee4\uff08\u6216\u8bed\u53e5\uff09\u7684\u6761\u6570 C. \u7b97\u6cd5\u7684\u6709\u7a77\u6027\u662f\u6307\u7b97\u6cd5\u5fc5\u987b\u80fd\u5728\u6267\u884c\u6709\u9650\u4e2a\u6b65\u9aa4\u4e4b\u540e\u7ec8\u6b62 D. \u4ee5\u4e0a\u4e09\u79cd\u63cf\u8ff0\u90fd\u4e0d\u5bf9", "\n(2) \u4ee5\u4e0b\u6570\u636e\u7ed3\u6784\u4e2d\u4e0d\u5c5e\u4e8e\u7ebf\u6027\u6570\u636e\u7ed3\u6784\u7684\u662f(C)", "\nA. \u961f\u5217 B. \u7ebf\u6027\u8868 C. \u4e8c\u53c9\u6811 D. \u6808", "\n(3) \u5728\u4e00\u68f5\u4e8c\u53c9\u6811\u4e0a\u7b2c5\u5c42\u7684\u7ed3\u70b9\u6570\u6700\u591a\u662f(B) \u6ce8\uff1a\u7531\u516c\u5f0f2k-1\u5f97", "\nA. 8 B. 16 C. 32 D. 15", "\n(4) \u4e0b\u9762\u63cf\u8ff0\u4e2d\uff0c\u7b26\u5408\u7ed3\u6784\u5316\u7a0b\u5e8f\u8bbe\u8ba1\u98ce\u683c\u7684\u662f(A)", "\nA. \u4f7f\u7528\u987a\u5e8f\u3001\u9009\u62e9\u548c\u91cd\u590d\uff08\u5faa\u73af\uff09\u4e09\u79cd\u57fa\u672c\u63a7\u5236\u7ed3\u6784\u8868\u793a\u7a0b\u5e8f\u7684\u63a7\u5236\u903b\u8f91 B. \u6a21\u5757\u53ea\u6709\u4e00\u4e2a\u5165\u53e3\uff0c\u53ef\u4ee5\u6709\u591a\u4e2a\u51fa\u53e3 C. \u6ce8\u91cd\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6267\u884c\u6548\u7387 D. \u4e0d\u4f7f\u7528goto\u8bed\u53e5", "\n(5) \u4e0b\u9762\u6982\u5ff5\u4e2d\uff0c\u4e0d\u5c5e\u4e8e\u9762\u5411\u5bf9\u8c61\u65b9\u6cd5\u7684\u662f (D) \u6ce8\uff1aP55-58", "\nA. \u5bf9\u8c61 B. \u7ee7\u627f C. \u7c7b D. \u8fc7\u7a0b\u8c03\u7528", "\n(6) \u5728\u7ed3\u6784\u5316\u65b9\u6cd5\u4e2d\uff0c\u7528\u6570\u636e\u6d41\u7a0b\u56fe\uff08DFD\uff09\u4f5c\u4e3a\u63cf\u8ff0\u5de5\u5177\u7684\u8f6f\u4ef6\u5f00\u53d1\u9636\u6bb5\u662f(B)", "\nA. \u53ef\u884c\u6027\u5206\u6790 B. \u9700\u6c42\u5206\u6790 C. \u8be6\u7ec6\u8bbe\u8ba1 D. \u7a0b\u5e8f\u7f16\u7801", "\n(7) \u5728\u8f6f\u4ef6\u5f00\u53d1\u4e2d\uff0c\u4e0b\u9762\u4efb\u52a1\u4e0d\u5c5e\u4e8e\u8bbe\u8ba1\u9636\u6bb5\u7684\u662f(D)", "\nA. \u6570\u636e\u7ed3\u6784\u8bbe\u8ba1 B. \u7ed9\u51fa\u7cfb\u7edf\u6a21\u5757\u7ed3\u6784", "\nC. \u5b9a\u4e49\u6a21\u5757\u7b97\u6cd5 D. \u5b9a\u4e49\u9700\u6c42\u5e76\u5efa\u7acb\u7cfb\u7edf\u6a21\u578b", "\n(8) \u6570\u636e\u5e93\u7cfb\u7edf\u7684\u6838\u5fc3\u662f(B)", "\nA. \u6570\u636e\u6a21\u578b B. \u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf C. \u8f6f\u4ef6\u5de5\u5177 D. \u6570\u636e\u5e93", "\n(9) \u4e0b\u5217\u53d9\u8ff0\u4e2d\u6b63\u786e\u7684\u662f(C)", "\nA.\u6570\u636e\u5e93\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u7cfb\u7edf\uff0c\u4e0d\u9700\u8981\u64cd\u4f5c\u7cfb\u7edf\u7684\u652f\u6301 B.\u6570\u636e\u5e93\u8bbe\u8ba1\u662f\u6307\u8bbe\u8ba1\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edfC.\u6570\u636e\u5e93\u6280\u672f\u7684\u6839\u672c\u76ee\u6807\u662f\u8981\u89e3\u51b3\u6570\u636e\u5171\u4eab\u7684\u95ee\u9898 D.\u6570\u636e\u5e93\u7cfb\u7edf\u4e2d\uff0c\u6570\u636e\u7684\u7269\u7406\u7ed3\u6784\u5fc5\u987b\u4e0e\u903b\u8f91\u7ed3\u6784\u4e00\u81f4", "\n(10) \u4e0b\u5217\u6a21\u5f0f\u4e2d\uff0c\u80fd\u591f\u7ed9\u51fa\u6570\u636e\u5e93\u7269\u7406\u5b58\u50a8\u7ed3\u6784\u4e0e\u7269\u7406\u5b58\u53d6\u65b9\u6cd5\u7684\u662f(A) \u6ce8\uff1aP108", "\nA. \u5185\u6a21\u5f0f B. \u5916\u6a21\u5f0f C. \u6982\u5ff5\u6a21\u5f0f D. \u903b\u8f91\u6a21\u5f0f", "\n(11) \u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u6307(C)", "\nA. \u6267\u884c\u7b97\u6cd5\u7a0b\u5e8f\u6240\u9700\u8981\u7684\u65f6\u95f4 B. \u7b97\u6cd5\u7a0b\u5e8f\u7684\u957f\u5ea6 C. \u7b97\u6cd5\u6267\u884c\u8fc7\u7a0b\u4e2d\u6240\u9700\u8981\u7684\u57fa\u672c\u8fd0\u7b97\u6b21\u6570 D. \u7b97\u6cd5\u7a0b\u5e8f\u4e2d\u7684\u6307\u4ee4\u6761\u6570", "\n(12) \u7b97\u6cd5\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u662f\u6307(D)", "\nA. \u7b97\u6cd5\u7a0b\u5e8f\u7684\u957f\u5ea6 B. \u7b97\u6cd5\u7a0b\u5e8f\u4e2d\u7684\u6307\u4ee4\u6761\u6570 C. \u7b97\u6cd5\u7a0b\u5e8f\u6240\u5360\u7684\u5b58\u50a8\u7a7a\u95f4 D. \u7b97\u6cd5\u6267\u884c\u8fc7\u7a0b\u4e2d\u6240\u9700\u8981\u7684\u5b58\u50a8\u7a7a\u95f4", "\n(13) \u8bbe\u4e00\u68f5\u5b8c\u5168\u4e8c\u53c9\u6811\u5171\u6709699\u4e2a\u7ed3\u70b9\uff0c\u5219\u5728\u8be5\u4e8c\u53c9\u6811\u4e2d\u7684\u53f6\u5b50\u7ed3\u70b9\u6570\u4e3a(B) \u6ce8\uff1a\u5229\u7528\u516c\u5f0fn=n0+n1+n2\u3001n0=n2+1\u548c\u5b8c\u5168\u4e8c\u53c9\u6570\u7684\u7279\u70b9\u53ef\u6c42\u51fa", "\nA. 349 B. 350 C. 255 D. 351", "\n(14) \u7ed3\u6784\u5316\u7a0b\u5e8f\u8bbe\u8ba1\u4e3b\u8981\u5f3a\u8c03\u7684\u662f(B)", "\nA.\u7a0b\u5e8f\u7684\u89c4\u6a21 B.\u7a0b\u5e8f\u7684\u6613\u8bfb\u6027", "\nC.\u7a0b\u5e8f\u7684\u6267\u884c\u6548\u7387 D.\u7a0b\u5e8f\u7684\u53ef\u79fb\u690d\u6027", "\n(15) \u5728\u8f6f\u4ef6\u751f\u547d\u5468\u671f\u4e2d\uff0c\u80fd\u51c6\u786e\u5730\u786e\u5b9a\u8f6f\u4ef6\u7cfb\u7edf\u5fc5\u987b\u505a\u4ec0\u4e48\u548c\u5fc5\u987b\u5177\u5907\u54ea\u4e9b\u529f\u80fd\u7684\u9636\u6bb5\u662f(D)   \u6ce8\uff1a\u5373\u7b2c\u4e00\u4e2a\u9636\u6bb5", "\nA. \u6982\u8981\u8bbe\u8ba1 B. \u8be6\u7ec6\u8bbe\u8ba1 C. \u53ef\u884c\u6027\u5206\u6790 D. \u9700\u6c42\u5206\u6790", "\n(16) \u6570\u636e\u6d41\u56fe\u7528\u4e8e\u62bd\u8c61\u63cf\u8ff0\u4e00\u4e2a\u8f6f\u4ef6\u7684\u903b\u8f91\u6a21\u578b\uff0c\u6570\u636e\u6d41\u56fe\u7531\u4e00\u4e9b\u7279\u5b9a\u7684\u56fe\u7b26\u6784\u6210\u3002\u4e0b\u5217\u56fe\u7b26\u540d\u6807\u8bc6\u7684\u56fe\u7b26\u4e0d\u5c5e\u4e8e\u6570\u636e\u6d41\u56fe\u5408\u6cd5\u56fe\u7b26\u7684\u662f(A) \u6ce8\uff1aP67", "\nA. \u63a7\u5236\u6d41 B. \u52a0\u5de5 C. \u6570\u636e\u5b58\u50a8 D. \u6e90\u548c\u6f6d", "\n(17) \u8f6f\u4ef6\u9700\u6c42\u5206\u6790\u9636\u6bb5\u7684\u5de5\u4f5c\uff0c\u53ef\u4ee5\u5206\u4e3a\u56db\u4e2a\u65b9\u9762\uff1a\u9700\u6c42\u83b7\u53d6\u3001\u9700\u6c42\u5206\u6790\u3001\u7f16\u5199\u9700\u6c42\u89c4\u683c\u8bf4\u660e\u4e66\u4ee5\u53ca(B) \u6ce8\uff1aP66", "\nA. \u9636\u6bb5\u6027\u62a5\u544a B. \u9700\u6c42\u8bc4\u5ba1 C. \u603b\u7ed3 D. \u90fd\u4e0d\u6b63\u786e", "\n(18) \u4e0b\u8ff0\u5173\u4e8e\u6570\u636e\u5e93\u7cfb\u7edf\u7684\u53d9\u8ff0\u4e2d\u6b63\u786e\u7684\u662f(A)", "\nA. \u6570\u636e\u5e93\u7cfb\u7edf\u51cf\u5c11\u4e86\u6570\u636e\u5197\u4f59 B. \u6570\u636e\u5e93\u7cfb\u7edf\u907f\u514d\u4e86\u4e00\u5207\u5197\u4f59", "\nC. \u6570\u636e\u5e93\u7cfb\u7edf\u4e2d\u6570\u636e\u7684\u4e00\u81f4\u6027\u662f\u6307\u6570\u636e\u7c7b\u578b\u7684\u4e00\u81f4 D. \u6570\u636e\u5e93\u7cfb\u7edf\u6bd4\u6587\u4ef6\u7cfb\u7edf\u80fd\u7ba1\u7406\u66f4\u591a\u7684\u6570\u636e", "\n(19) \u5173\u7cfb\u8868\u4e2d\u7684\u6bcf\u4e00\u6a2a\u884c\u79f0\u4e3a\u4e00\u4e2a(A)", "\nA. \u5143\u7ec4 B. \u5b57\u6bb5 C. \u5c5e\u6027 D. \u7801", "\n(20) \u6570\u636e\u5e93\u8bbe\u8ba1\u5305\u62ec\u4e24\u4e2a\u65b9\u9762\u7684\u8bbe\u8ba1\u5185\u5bb9\uff0c\u5b83\u4eec\u662f(A)", "\nA. \u6982\u5ff5\u8bbe\u8ba1\u548c\u903b\u8f91\u8bbe\u8ba1 B. \u6a21\u5f0f\u8bbe\u8ba1\u548c\u5185\u6a21\u5f0f\u8bbe\u8ba1", "\nC. \u5185\u6a21\u5f0f\u8bbe\u8ba1\u548c\u7269\u7406\u8bbe\u8ba1 D. \u7ed3\u6784\u7279\u6027\u8bbe\u8ba1\u548c\u884c\u4e3a\u7279\u6027\u8bbe\u8ba1", "\n(21) \u4e0b\u5217\u53d9\u8ff0\u4e2d\u6b63\u786e\u7684\u662f(A)", "\nA. \u7ebf\u6027\u8868\u662f\u7ebf\u6027\u7ed3\u6784 B. \u6808\u4e0e\u961f\u5217\u662f\u975e\u7ebf\u6027\u7ed3\u6784", "\nC. \u7ebf\u6027\u94fe\u8868\u662f\u975e\u7ebf\u6027\u7ed3\u6784 D. \u4e8c\u53c9\u6811\u662f\u7ebf\u6027\u7ed3\u6784", "\n(22) \u4e0b\u5217\u5173\u4e8e\u6808\u7684\u53d9\u8ff0\u4e2d\u6b63\u786e\u7684\u662f(D)", "\nA. \u5728\u6808\u4e2d\u53ea\u80fd\u63d2\u5165\u6570\u636e B. \u5728\u6808\u4e2d\u53ea\u80fd\u5220\u9664\u6570\u636e", "\nC. \u6808\u662f\u5148\u8fdb\u5148\u51fa\u7684\u7ebf\u6027\u8868 D. \u6808\u662f\u5148\u8fdb\u540e\u51fa\u7684\u7ebf\u6027\u8868", "\n(23) \u4e0b\u5217\u5173\u4e8e\u961f\u5217\u7684\u53d9\u8ff0\u4e2d\u6b63\u786e\u7684\u662f(C)", "\nA. \u5728\u961f\u5217\u4e2d\u53ea\u80fd\u63d2\u5165\u6570\u636e B. \u5728\u961f\u5217\u4e2d\u53ea\u80fd\u5220\u9664\u6570\u636e", "\nC. \u961f\u5217\u662f\u5148\u8fdb\u5148\u51fa\u7684\u7ebf\u6027\u8868 D. \u961f\u5217\u662f\u5148\u8fdb\u540e\u51fa\u7684\u7ebf\u6027\u8868", "\n(24) \u5bf9\u5efa\u7acb\u826f\u597d\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u98ce\u683c\uff0c\u4e0b\u9762\u63cf\u8ff0\u6b63\u786e\u7684\u662f(A) \u6ce8\uff1aP48", "\nA. \u7a0b\u5e8f\u5e94\u7b80\u5355\u3001\u6e05\u6670\u3001\u53ef\u8bfb\u6027\u597d B. \u7b26\u53f7\u540d\u7684\u547d\u540d\u8981\u7b26\u5408\u8bed\u6cd5", "\nC. \u5145\u5206\u8003\u8651\u7a0b\u5e8f\u7684\u6267\u884c\u6548\u7387 D. \u7a0b\u5e8f\u7684\u6ce8\u91ca\u53ef\u6709\u53ef\u65e0", "\n(25) \u4e0b\u9762\u5bf9\u5bf9\u8c61\u6982\u5ff5\u63cf\u8ff0\u9519\u8bef\u7684\u662f(A) \u6ce8\uff1aP55", "\nA. \u4efb\u4f55\u5bf9\u8c61\u90fd\u5fc5\u987b\u6709\u7ee7\u627f\u6027 B. \u5bf9\u8c61\u662f\u5c5e\u6027\u548c\u65b9\u6cd5\u7684\u5c01\u88c5\u4f53", "\nC. \u5bf9\u8c61\u95f4\u7684\u901a\u8baf\u9760\u6d88\u606f\u4f20\u9012 D. \u64cd\u4f5c\u662f\u5bf9\u8c61\u7684\u52a8\u6001\u6027\u5c5e\u6027", "\n(26) \u4e0b\u9762\u4e0d\u5c5e\u4e8e\u8f6f\u4ef6\u5de5\u7a0b\u76843\u4e2a\u8981\u7d20\u7684\u662f(D) \u6ce8\uff1aP62", "\nA. \u5de5\u5177 B. \u8fc7\u7a0b C. \u65b9\u6cd5 D. \u73af\u5883", "\n(27) \u7a0b\u5e8f\u6d41\u7a0b\u56fe\uff08PFD\uff09\u4e2d\u7684\u7bad\u5934\u4ee3\u8868\u7684\u662f(B) \u6ce8\uff1aP81", "\nA. \u6570\u636e\u6d41 B. \u63a7\u5236\u6d41 C. \u8c03\u7528\u5173\u7cfb D. \u7ec4\u6210\u5173\u7cfb", "\n(28) \u5728\u6570\u636e\u7ba1\u7406\u6280\u672f\u7684\u53d1\u5c55\u8fc7\u7a0b\u4e2d\uff0c\u7ecf\u5386\u4e86\u4eba\u5de5\u7ba1\u7406\u9636\u6bb5\u3001\u6587\u4ef6\u7cfb\u7edf\u9636\u6bb5\u548c\u6570\u636e\u5e93\u7cfb\u7edf\u9636\u6bb5\u3002\u5176\u4e2d\u6570\u636e\u72ec\u7acb\u6027\u6700\u9ad8\u7684\u9636\u6bb5\u662f(A)", "\nA. \u6570\u636e\u5e93\u7cfb\u7edf B. \u6587\u4ef6\u7cfb\u7edf C. \u4eba\u5de5\u7ba1\u7406 D. \u6570\u636e\u9879\u7ba1\u7406", "\n(29) \u7528\u6811\u5f62\u7ed3\u6784\u6765\u8868\u793a\u5b9e\u4f53\u4e4b\u95f4\u8054\u7cfb\u7684\u6a21\u578b\u79f0\u4e3a(B)", "\nA. \u5173\u7cfb\u6a21\u578b B. \u5c42\u6b21\u6a21\u578b C. \u7f51\u72b6\u6a21\u578b D. \u6570\u636e\u6a21\u578b", "\n(30) \u5173\u7cfb\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\u80fd\u5b9e\u73b0\u7684\u4e13\u95e8\u5173\u7cfb\u8fd0\u7b97\u5305\u62ec(B)", "\nA. \u6392\u5e8f\u3001\u7d22\u5f15\u3001\u7edf\u8ba1 B. \u9009\u62e9\u3001\u6295\u5f71\u3001\u8fde\u63a5", "\nC. \u5173\u8054\u3001\u66f4\u65b0\u3001\u6392\u5e8f D. \u663e\u793a\u3001\u6253\u5370\u3001\u5236\u8868", "\n(31) \u7b97\u6cd5\u4e00\u822c\u90fd\u53ef\u4ee5\u7528\u54ea\u51e0\u79cd\u63a7\u5236\u7ed3\u6784\u7ec4\u5408\u800c\u6210(D)   \u6ce8\uff1aP3", "\nA. \u5faa\u73af\u3001\u5206\u652f\u3001\u9012\u5f52 B. \u987a\u5e8f\u3001\u5faa\u73af\u3001\u5d4c\u5957", "\nC. \u5faa\u73af\u3001\u9012\u5f52\u3001\u9009\u62e9 D. \u987a\u5e8f\u3001\u9009\u62e9\u3001\u5faa\u73af", "\n(32) \u6570\u636e\u7684\u5b58\u50a8\u7ed3\u6784\u662f\u6307(B)     \u6ce8\uff1aP13\uff0c\u8981\u7262\u8bb0", "\nA. \u6570\u636e\u6240\u5360\u7684\u5b58\u50a8\u7a7a\u95f4\u91cf B. \u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u5728\u8ba1\u7b97\u673a\u4e2d\u7684\u8868\u793a", "\nC. \u6570\u636e\u5728\u8ba1\u7b97\u673a\u4e2d\u7684\u987a\u5e8f\u5b58\u50a8\u65b9\u5f0f D. \u5b58\u50a8\u5728\u5916\u5b58\u4e2d\u7684\u6570\u636e", "\n(33) \u8bbe\u6709\u4e0b\u5217\u4e8c\u53c9\u6811\uff1a\u56fe\u89c1\u4e66P46", "\n\u5bf9\u6b64\u4e8c\u53c9\u6811\u4e2d\u5e8f\u904d\u5386\u7684\u7ed3\u679c\u4e3a(B)", "\nA. ABCDEF B. DBEAFC C. ABDECF D. DEBFCA", "\n(34) \u5728\u9762\u5411\u5bf9\u8c61\u65b9\u6cd5\u4e2d\uff0c\u4e00\u4e2a\u5bf9\u8c61\u8bf7\u6c42\u53e6\u4e00\u5bf9\u8c61\u4e3a\u5176\u670d\u52a1\u7684\u65b9\u5f0f\u662f\u901a\u8fc7\u53d1\u9001(D) \u6ce8\uff1aP56", "\nA. \u8c03\u7528\u8bed\u53e5 B. \u547d\u4ee4 C. \u53e3\u4ee4 D. \u6d88\u606f", "\n(35) \u68c0\u67e5\u8f6f\u4ef6\u4ea7\u54c1\u662f\u5426\u7b26\u5408\u9700\u6c42\u5b9a\u4e49\u7684\u8fc7\u7a0b\u79f0\u4e3a(A) \u6ce8\uff1aP95", "\nA. \u786e\u8ba4\u6d4b\u8bd5 B. \u96c6\u6210\u6d4b\u8bd5 C. \u9a8c\u8bc1\u6d4b\u8bd5 D. \u9a8c\u6536\u6d4b\u8bd5", "\n(36) \u4e0b\u5217\u5de5\u5177\u4e2d\u5c5e\u4e8e\u9700\u6c42\u5206\u6790\u5e38\u7528\u5de5\u5177\u7684\u662f(D) \u6ce8\uff1aP67", "\nA. PAD B. PFD C. N-S D. DFD", "\n(37) \u4e0b\u9762\u4e0d\u5c5e\u4e8e\u8f6f\u4ef6\u8bbe\u8ba1\u539f\u5219\u7684\u662f(C)    \u6ce8\uff1aP73", "\nA. \u62bd\u8c61 B. \u6a21\u5757\u5316 C. \u81ea\u5e95\u5411\u4e0a D. \u4fe1\u606f\u9690\u853d", "\n(38) \u7d22\u5f15\u5c5e\u4e8e(B)", "\nA. \u6a21\u5f0f B. \u5185\u6a21\u5f0f C. \u5916\u6a21\u5f0f D. \u6982\u5ff5\u6a21\u5f0f", "\n(39) \u5728\u5173\u7cfb\u6570\u636e\u5e93\u4e2d\uff0c\u7528\u6765\u8868\u793a\u5b9e\u4f53\u4e4b\u95f4\u8054\u7cfb\u7684\u662f(D)", "\nA. \u6811\u7ed3\u6784 B. \u7f51\u7ed3\u6784 C. \u7ebf\u6027\u8868 D. \u4e8c\u7ef4\u8868", "\n(40) \u5c06E-R\u56fe\u8f6c\u6362\u5230\u5173\u7cfb\u6a21\u5f0f\u65f6\uff0c\u5b9e\u4f53\u4e0e\u8054\u7cfb\u90fd\u53ef\u4ee5\u8868\u793a\u6210(B)", "\nA. \u5c5e\u6027 B. \u5173\u7cfb C. \u952e D. \u57df", "\n(41) \u5728\u4e0b\u5217\u9009\u9879\u4e2d\uff0c\u54ea\u4e2a\u4e0d\u662f\u4e00\u4e2a\u7b97\u6cd5\u4e00\u822c\u5e94\u8be5\u5177\u6709\u7684\u57fa\u672c\u7279\u5f81(C)", "\nA. \u786e\u5b9a\u6027 B. \u53ef\u884c\u6027 C. \u65e0\u7a77\u6027 D. \u62e5\u6709\u8db3\u591f\u7684\u60c5\u62a5", "\n(42) \u5e0c\u5c14\u6392\u5e8f\u6cd5\u5c5e\u4e8e\u54ea\u4e00\u79cd\u7c7b\u578b\u7684\u6392\u5e8f\u6cd5(B)", "\nA.\u4ea4\u6362\u7c7b\u6392\u5e8f\u6cd5 B.\u63d2\u5165\u7c7b\u6392\u5e8f\u6cd5 C.\u9009\u62e9\u7c7b\u6392\u5e8f\u6cd5 D.\u5efa\u5806\u6392\u5e8f\u6cd5", "\n(43) \u5728\u6df1\u5ea6\u4e3a5\u7684\u6ee1\u4e8c\u53c9\u6811\u4e2d\uff0c\u53f6\u5b50\u7ed3\u70b9\u7684\u4e2a\u6570\u4e3a(C)", "\nA. 32 B. 31 C. 16 D. 15", "\n(44) \u5bf9\u957f\u5ea6\u4e3aN\u7684\u7ebf\u6027\u8868\u8fdb\u884c\u987a\u5e8f\u67e5\u627e\uff0c\u5728\u6700\u574f\u60c5\u51b5\u4e0b\u6240\u9700\u8981\u7684\u6bd4\u8f83\u6b21\u6570\u4e3a(B) \u6ce8\uff1a\u8981\u7262\u8bb0", "\nA. N+1 B. N C. (N+1)/2 D. N/2", "\n(45) \u4fe1\u606f\u9690\u853d\u7684\u6982\u5ff5\u4e0e\u4e0b\u8ff0\u54ea\u4e00\u79cd\u6982\u5ff5\u76f4\u63a5\u76f8\u5173(B) \u6ce8\uff1aP74", "\nA.\u8f6f\u4ef6\u7ed3\u6784\u5b9a\u4e49 B. \u6a21\u5757\u72ec\u7acb\u6027 C. \u6a21\u5757\u7c7b\u578b\u5212\u5206 D. \u6a21\u62df\u8026\u5408\u5ea6", "\n(46) \u9762\u5411\u5bf9\u8c61\u7684\u8bbe\u8ba1\u65b9\u6cd5\u4e0e\u4f20\u7edf\u7684\u7684\u9762\u5411\u8fc7\u7a0b\u7684\u65b9\u6cd5\u6709\u672c\u8d28\u4e0d\u540c\uff0c\u5b83\u7684\u57fa\u672c\u539f\u7406\u662f(C)", "\nA. \u6a21\u62df\u73b0\u5b9e\u4e16\u754c\u4e2d\u4e0d\u540c\u4e8b\u7269\u4e4b\u95f4\u7684\u8054\u7cfb B. \u5f3a\u8c03\u6a21\u62df\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u7b97\u6cd5\u800c\u4e0d\u5f3a\u8c03\u6982\u5ff5 C. \u4f7f\u7528\u73b0\u5b9e\u4e16\u754c\u7684\u6982\u5ff5\u62bd\u8c61\u5730\u601d\u8003\u95ee\u9898\u4ece\u800c\u81ea\u7136\u5730\u89e3\u51b3\u95ee\u9898 D. \u9f13\u52b1\u5f00\u53d1\u8005\u5728\u8f6f\u4ef6\u5f00\u53d1\u7684\u7edd\u5927\u90e8\u5206\u4e2d\u90fd\u7528\u5b9e\u9645\u9886\u57df\u7684\u6982\u5ff5\u53bb\u601d\u8003", "\n(47) \u5728\u7ed3\u6784\u5316\u65b9\u6cd5\u4e2d\uff0c\u8f6f\u4ef6\u529f\u80fd\u5206\u89e3\u5c5e\u4e8e\u4e0b\u5217\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u7684\u9636\u6bb5\u662f(C)       \u6ce8\uff1a\u603b\u4f53\u8bbe\u8ba1\u4e5f\u5c31\u662f\u6982\u8981\u8bbe\u8ba1", "\nA. \u8be6\u7ec6\u8bbe\u8ba1 B. \u9700\u6c42\u5206\u6790 C. \u603b\u4f53\u8bbe\u8ba1 D. \u7f16\u7a0b\u8c03\u8bd5", "\n(48) \u8f6f\u4ef6\u8c03\u8bd5\u7684\u76ee\u7684\u662f(B)    \u6ce8\uff1a\u4e0e\u8f6f\u4ef6\u6d4b\u8bd5\u8981\u5bf9\u6bd4\u7740\u590d\u4e60", "\nA.\u53d1\u73b0\u9519\u8bef B.\u6539\u6b63\u9519\u8bef C.\u6539\u5584\u8f6f\u4ef6\u7684\u6027\u80fd D.\u6316\u6398\u8f6f\u4ef6\u7684\u6f5c\u80fd", "\n(49) \u6309\u6761\u4ef6f\u5bf9\u5173\u7cfbR\u8fdb\u884c\u9009\u62e9\uff0c\u5176\u5173\u7cfb\u4ee3\u6570\u8868\u8fbe\u5f0f\u4e3a(C)", "\nA. R|X|R B. R|X|Rf C. \u0431f(R) D. \u220ff(R)", "\n(50) \u6570\u636e\u5e93\u6982\u5ff5\u8bbe\u8ba1\u7684\u8fc7\u7a0b\u4e2d\uff0c\u89c6\u56fe\u8bbe\u8ba1\u4e00\u822c\u6709\u4e09\u79cd\u8bbe\u8ba1\u6b21\u5e8f\uff0c\u4ee5\u4e0b\u5404\u9879\u4e2d\u4e0d\u5bf9\u7684\u662f(D)    \u6ce8\uff1aP127\uff0c\u8981\u7262\u8bb0", "\nA. \u81ea\u9876\u5411\u4e0b B. \u7531\u5e95\u5411\u4e0a C. \u7531\u5185\u5411\u5916 D. \u7531\u6574\u4f53\u5230\u5c40\u90e8", "\n(51) \u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u7b97\u6cd5\u662f\u6307(C)", "\nA. \u67e5\u8be2\u65b9\u6cd5    B. \u52a0\u5de5\u65b9\u6cd5", "\nC. \u89e3\u9898\u65b9\u6848\u7684\u51c6\u786e\u800c\u5b8c\u6574\u7684\u63cf\u8ff0 D. \u6392\u5e8f\u65b9\u6cd5", "\n(52) \u6808\u548c\u961f\u5217\u7684\u5171\u540c\u70b9\u662f(C)   \u6ce8\uff1a\u8fd9\u4e00\u5171\u540c\u70b9\u548c\u7ebf\u6027\u8868\u4e0d\u4e00\u6837", "\nA. \u90fd\u662f\u5148\u8fdb\u540e\u51fa B. \u90fd\u662f\u5148\u8fdb\u5148\u51fa C. \u53ea\u5141\u8bb8\u5728\u7aef\u70b9\u5904\u63d2\u5165\u548c\u5220\u9664\u5143\u7d20 D. \u6ca1\u6709\u5171\u540c\u70b9", "\n(53) \u5df2\u77e5\u4e8c\u53c9\u6811\u540e\u5e8f\u904d\u5386\u5e8f\u5217\u662fdabec\uff0c\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u662fdebac\uff0c\u5b83\u7684\u524d\u5e8f\u904d\u5386\u5e8f\u5217\u662f(A)   \u6ce8\uff1aP38\uff0c\u524d\u63d0\u8981\u638c\u63e1\u4e09\u79cd\u904d\u5386\u7684\u65b9\u6cd5", "\nA. cedba B. acbed C. decab D. deabc", "\n(54) \u5728\u4e0b\u5217\u51e0\u79cd\u6392\u5e8f\u65b9\u6cd5\u4e2d\uff0c\u8981\u6c42\u5185\u5b58\u91cf\u6700\u5927\u7684\u662f(D)   \u6ce8\uff1a\u8981\u7262\u8bb0\uff0c\u4e66\u4e2d\u6ca1\u6709\u63d0\u5230\u3002", "\nA. \u63d2\u5165\u6392\u5e8f B. \u9009\u62e9\u6392\u5e8f C. \u5feb\u901f\u6392\u5e8f D. \u5f52\u5e76\u6392\u5e8f", "\n(55) \u5728\u8bbe\u8ba1\u7a0b\u5e8f\u65f6\uff0c\u5e94\u91c7\u7eb3\u7684\u539f\u5219\u4e4b\u4e00\u662f(A) \u6ce8\uff1a\u548c\u8bbe\u8ba1\u98ce\u683c\u6709\u5173", "\nA. \u7a0b\u5e8f\u7ed3\u6784\u5e94\u6709\u52a9\u4e8e\u8bfb\u8005\u7406\u89e3 B. \u4e0d\u9650\u5236goto\u8bed\u53e5\u7684\u4f7f\u7528", "\nC. \u51cf\u5c11\u6216\u53d6\u6d88\u6ce8\u89e3\u884c D. \u7a0b\u5e8f\u8d8a\u77ed\u8d8a\u597d", "\n(56) \u4e0b\u5217\u4e0d\u5c5e\u4e8e\u8f6f\u4ef6\u8c03\u8bd5\u6280\u672f\u7684\u662f(B)   \u6ce8\uff1aP98", "\nA. \u5f3a\u884c\u6392\u9519\u6cd5 B. \u96c6\u6210\u6d4b\u8bd5\u6cd5 C. \u56de\u6eaf\u6cd5 D. \u539f\u56e0\u6392\u9664\u6cd5", "\n(57)\u4e0b\u5217\u53d9\u8ff0\u4e2d\uff0c\u4e0d\u5c5e\u4e8e\u8f6f\u4ef6\u9700\u6c42\u89c4\u683c\u8bf4\u660e\u4e66\u7684\u4f5c\u7528\u7684\u662f(D)\u6ce8\uff1aP71", "\nA. \u4fbf\u4e8e\u7528\u6237\u3001\u5f00\u53d1\u4eba\u5458\u8fdb\u884c\u7406\u89e3\u548c\u4ea4\u6d41 B. \u53cd\u6620\u51fa\u7528\u6237\u95ee\u9898\u7684\u7ed3\u6784\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u8f6f\u4ef6\u5f00\u53d1\u5de5\u4f5c\u7684\u57fa\u7840\u548c\u4f9d\u636e C. \u4f5c\u4e3a\u786e\u8ba4\u6d4b\u8bd5\u548c\u9a8c\u6536\u7684\u4f9d\u636e D. \u4fbf\u4e8e\u5f00\u53d1\u4eba\u5458\u8fdb\u884c\u9700\u6c42\u5206\u6790", "\n(58) \u5728\u6570\u636e\u6d41\u56fe\uff08DFD\uff09\u4e2d\uff0c\u5e26\u6709\u540d\u5b57\u7684\u7bad\u5934\u8868\u793a(C)", "\nA. \u63a7\u5236\u7a0b\u5e8f\u7684\u6267\u884c\u987a\u5e8f B. \u6a21\u5757\u4e4b\u95f4\u7684\u8c03\u7528\u5173\u7cfb C. \u6570\u636e\u7684\u6d41\u5411 D. \u7a0b\u5e8f\u7684\u7ec4\u6210\u6210\u5206", "\n(59) SQL\u8bed\u8a00\u53c8\u79f0\u4e3a(C)", "\nA. \u7ed3\u6784\u5316\u5b9a\u4e49\u8bed\u8a00 B. \u7ed3\u6784\u5316\u63a7\u5236\u8bed\u8a00", "\nC. \u7ed3\u6784\u5316\u67e5\u8be2\u8bed\u8a00 D. \u7ed3\u6784\u5316\u64cd\u7eb5\u8bed\u8a00", "\n(60) \u89c6\u56fe\u8bbe\u8ba1\u4e00\u822c\u67093\u79cd\u8bbe\u8ba1\u6b21\u5e8f\uff0c\u4e0b\u5217\u4e0d\u5c5e\u4e8e\u89c6\u56fe\u8bbe\u8ba1\u7684\u662f(B)", "\nA. \u81ea\u9876\u5411\u4e0b B. \u7531\u5916\u5411\u5185 C. \u7531\u5185\u5411\u5916 D. \u81ea\u5e95\u5411\u4e0a", "\n(61) \u6570\u636e\u7ed3\u6784\u4e2d\uff0c\u4e0e\u6240\u4f7f\u7528\u7684\u8ba1\u7b97\u673a\u65e0\u5173\u7684\u662f\u6570\u636e\u7684(C)", "\nA. \u5b58\u50a8\u7ed3\u6784 B. \u7269\u7406\u7ed3\u6784 C. \u903b\u8f91\u7ed3\u6784 D. \u7269\u7406\u548c\u5b58\u50a8\u7ed3\u6784", "\n(62) \u6808\u5e95\u81f3\u6808\u9876\u4f9d\u6b21\u5b58\u653e\u5143\u7d20A\u3001B\u3001C\u3001D\uff0c\u5728\u7b2c\u4e94\u4e2a\u5143\u7d20E\u5165\u6808\u524d\uff0c\u6808\u4e2d\u5143\u7d20\u53ef\u4ee5\u51fa\u6808\uff0c\u5219\u51fa\u6808\u5e8f\u5217\u53ef\u80fd\u662f(D)", "\nA. ABCED B. DBCEA C. CDABE D. DCBEA", "\n(63) \u7ebf\u6027\u8868\u7684\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784\u548c\u7ebf\u6027\u8868\u7684\u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784\u5206\u522b\u662f(B)", "\nA. \u987a\u5e8f\u5b58\u53d6\u7684\u5b58\u50a8\u7ed3\u6784\u3001\u987a\u5e8f\u5b58\u53d6\u7684\u5b58\u50a8\u7ed3\u6784 B. \u968f\u673a\u5b58\u53d6\u7684\u5b58\u50a8\u7ed3\u6784\u3001\u987a\u5e8f\u5b58\u53d6\u7684\u5b58\u50a8\u7ed3\u6784 C. \u968f\u673a\u5b58\u53d6\u7684\u5b58\u50a8\u7ed3\u6784\u3001\u968f\u673a\u5b58\u53d6\u7684\u5b58\u50a8\u7ed3\u6784 D. \u4efb\u610f\u5b58\u53d6\u7684\u5b58\u50a8\u7ed3\u6784\u3001\u4efb\u610f\u5b58\u53d6\u7684\u5b58\u50a8\u7ed3\u6784", "\n(64) \u5728\u5355\u94fe\u8868\u4e2d\uff0c\u589e\u52a0\u5934\u7ed3\u70b9\u7684\u76ee\u7684\u662f(A)", "\nA. \u65b9\u4fbf\u8fd0\u7b97\u7684\u5b9e\u73b0 B. \u4f7f\u5355\u94fe\u8868\u81f3\u5c11\u6709\u4e00\u4e2a\u7ed3\u70b9 C. \u6807\u8bc6\u8868\u7ed3\u70b9\u4e2d\u9996\u7ed3\u70b9\u7684\u4f4d\u7f6e D. \u8bf4\u660e\u5355\u94fe\u8868\u662f\u7ebf\u6027\u8868\u7684\u94fe\u5f0f\u5b58\u50a8\u5b9e\u73b0", "\n(65) \u8f6f\u4ef6\u8bbe\u8ba1\u5305\u62ec\u8f6f\u4ef6\u7684\u7ed3\u6784\u3001\u6570\u636e\u63a5\u53e3\u548c\u8fc7\u7a0b\u8bbe\u8ba1\uff0c\u5176\u4e2d\u8f6f\u4ef6\u7684\u8fc7\u7a0b\u8bbe\u8ba1\u662f\u6307(B)   \u6ce8\uff1aP73", "\nA. \u6a21\u5757\u95f4\u7684\u5173\u7cfb B. \u7cfb\u7edf\u7ed3\u6784\u90e8\u4ef6\u8f6c\u6362\u6210\u8f6f\u4ef6\u7684\u8fc7\u7a0b\u63cf\u8ff0 C. \u8f6f\u4ef6\u5c42\u6b21\u7ed3\u6784 D. \u8f6f\u4ef6\u5f00\u53d1\u8fc7\u7a0b", "\n(66) \u4e3a\u4e86\u907f\u514d\u6d41\u7a0b\u56fe\u5728\u63cf\u8ff0\u7a0b\u5e8f\u903b\u8f91\u65f6\u7684\u7075\u6d3b\u6027\uff0c\u63d0\u51fa\u4e86\u7528\u65b9\u6846\u56fe\u6765\u4ee3\u66ff\u4f20\u7edf\u7684\u7a0b\u5e8f\u6d41\u7a0b\u56fe\uff0c\u901a\u5e38\u4e5f\u628a\u8fd9\u79cd\u56fe\u79f0\u4e3a(B) \u6ce8\uff1aP82", "\nA. PAD\u56fe B. N-S\u56fe C. \u7ed3\u6784\u56fe D. \u6570\u636e\u6d41\u56fe", "\n(67) \u6570\u636e\u5904\u7406\u7684\u6700\u5c0f\u5355\u4f4d\u662f(C) \u6ce8\uff1a\u6570\u636e\u9879\u4e0d\u53ef\u518d\u5206\u5272", "\nA. \u6570\u636e B. \u6570\u636e\u5143\u7d20 C. \u6570\u636e\u9879 D. \u6570\u636e\u7ed3\u6784", "\n(68) \u4e0b\u5217\u6709\u5173\u6570\u636e\u5e93\u7684\u63cf\u8ff0\uff0c\u6b63\u786e\u7684\u662f(C) \u6ce8\uff1aP102", "\nA. \u6570\u636e\u5e93\u662f\u4e00\u4e2aDBF\u6587\u4ef6 B. \u6570\u636e\u5e93\u662f\u4e00\u4e2a\u5173\u7cfb C. \u6570\u636e\u5e93\u662f\u4e00\u4e2a\u7ed3\u6784\u5316\u7684\u6570\u636e\u96c6\u5408 D. \u6570\u636e\u5e93\u662f\u4e00\u7ec4\u6587\u4ef6", "\n(69) \u5355\u4e2a\u7528\u6237\u4f7f\u7528\u7684\u6570\u636e\u89c6\u56fe\u7684\u63cf\u8ff0\u79f0\u4e3a(A)   \u6ce8\uff1aP108", "\nA. \u5916\u6a21\u5f0f B. \u6982\u5ff5\u6a21\u5f0f C. \u5185\u6a21\u5f0f D. \u5b58\u50a8\u6a21\u5f0f", "\n(70) \u9700\u6c42\u5206\u6790\u9636\u6bb5\u7684\u4efb\u52a1\u662f\u786e\u5b9a(D)", "\nA. \u8f6f\u4ef6\u5f00\u53d1\u65b9\u6cd5 B. \u8f6f\u4ef6\u5f00\u53d1\u5de5\u5177 C. \u8f6f\u4ef6\u5f00\u53d1\u8d39\u7528 D. \u8f6f\u4ef6\u7cfb\u7edf\u529f\u80fd", "\n(71) \u7b97\u6cd5\u5206\u6790\u7684\u76ee\u7684\u662f(D)    \u6ce8\uff1a\u4e66\u4e2d\u6ca1\u6709\u603b\u7ed3\uff0c\u4f46\u8981\u7262\u8bb0", "\nA. \u627e\u51fa\u6570\u636e\u7ed3\u6784\u7684\u5408\u7406\u6027 B. \u627e\u51fa\u7b97\u6cd5\u4e2d\u8f93\u5165\u548c\u8f93\u51fa\u4e4b\u95f4\u7684\u5173\u7cfb C. \u5206\u6790\u7b97\u6cd5\u7684\u6613\u61c2\u6027\u548c\u53ef\u9760\u6027 D. \u5206\u6790\u7b97\u6cd5\u7684\u6548\u7387\u4ee5\u6c42\u6539\u8fdb", "\n(72)\u94fe\u8868\u4e0d\u5177\u6709\u7684\u7279\u70b9\u662f(B)", "\nA.\u4e0d\u5fc5\u4e8b\u5148\u4f30\u8ba1\u5b58\u50a8\u7a7a\u95f4   B.\u53ef\u968f\u673a\u8bbf\u95ee\u4efb\u4e00\u5143\u7d20", "\nC.\u63d2\u5165\u5220\u9664\u4e0d\u9700\u8981\u79fb\u52a8\u5143\u7d20    D.\u6240\u9700\u7a7a\u95f4\u4e0e\u7ebf\u6027\u8868\u957f\u5ea6\u6210\u6b63\u6bd4", "\n(73) \u5df2\u77e5\u6570\u636e\u8868A\u4e2d\u6bcf\u4e2a\u5143\u7d20\u8ddd\u5176\u6700\u7ec8\u4f4d\u7f6e\u4e0d\u8fdc\uff0c\u4e3a\u8282\u7701\u65f6\u95f4\uff0c\u5e94\u91c7\u7528\u7684\u7b97\u6cd5\u662f(B)", "\nA. \u5806\u6392\u5e8f B. \u76f4\u63a5\u63d2\u5165\u6392\u5e8f C. \u5feb\u901f\u6392\u5e8f D. \u76f4\u63a5\u9009\u62e9\u6392\u5e8f", "\n(74) \u7528\u94fe\u8868\u8868\u793a\u7ebf\u6027\u8868\u7684\u4f18\u70b9\u662f(A)   \u6ce8\uff1a\u56e0\u4e3a\u4e0d\u9700\u8981\u79fb\u52a8\u5143\u7d20", "\nA. \u4fbf\u4e8e\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c B. \u6570\u636e\u5143\u7d20\u7684\u7269\u7406\u987a\u5e8f\u4e0e\u903b\u8f91\u987a\u5e8f\u76f8\u540c C. \u82b1\u8d39\u7684\u5b58\u50a8\u7a7a\u95f4\u8f83\u987a\u5e8f\u5b58\u50a8\u5c11 D. \u4fbf\u4e8e\u968f\u673a\u5b58\u53d6", "\n(75) \u4e0b\u5217\u4e0d\u5c5e\u4e8e\u7ed3\u6784\u5316\u5206\u6790\u7684\u5e38\u7528\u5de5\u5177\u7684\u662f(D)    \u6ce8\uff1aP67", "\nA. \u6570\u636e\u6d41\u56fe B. \u6570\u636e\u5b57\u5178 C. \u5224\u5b9a\u6811 D. PAD\u56fe", "\n(76) \u8f6f\u4ef6\u5f00\u53d1\u7684\u7ed3\u6784\u5316\u751f\u547d\u5468\u671f\u65b9\u6cd5\u5c06\u8f6f\u4ef6\u751f\u547d\u5468\u671f\u5212\u5206\u6210(A)", "\nA. \u5b9a\u4e49\u3001\u5f00\u53d1\u3001\u8fd0\u884c\u7ef4\u62a4 B. \u8bbe\u8ba1\u9636\u6bb5\u3001\u7f16\u7a0b\u9636\u6bb5\u3001\u6d4b\u8bd5\u9636\u6bb5 C. \u603b\u4f53\u8bbe\u8ba1\u3001\u8be6\u7ec6\u8bbe\u8ba1\u3001\u7f16\u7a0b\u8c03\u8bd5 D. \u9700\u6c42\u5206\u6790\u3001\u529f\u80fd\u5b9a\u4e49\u3001\u7cfb\u7edf\u8bbe\u8ba1", "\n(77) \u5728\u8f6f\u4ef6\u5de5\u7a0b\u4e2d\uff0c\u767d\u7bb1\u6d4b\u8bd5\u6cd5\u53ef\u7528\u4e8e\u6d4b\u8bd5\u7a0b\u5e8f\u7684\u5185\u90e8\u7ed3\u6784\u3002\u6b64\u65b9\u6cd5\u5c06\u7a0b\u5e8f\u770b\u505a\u662f(C)    \u6ce8\uff1aP87", "\nA. \u5faa\u73af\u7684\u96c6\u5408 B. \u5730\u5740\u7684\u96c6\u5408 C. \u8def\u5f84\u7684\u96c6\u5408 D. \u76ee\u6807\u7684\u96c6\u5408", "\n(78) \u5728\u6570\u636e\u7ba1\u7406\u6280\u672f\u53d1\u5c55\u8fc7\u7a0b\u4e2d\uff0c\u6587\u4ef6\u7cfb\u7edf\u4e0e\u6570\u636e\u5e93\u7cfb\u7edf\u7684\u4e3b\u8981\u533a\u522b\u662f\u6570\u636e\u5e93\u7cfb\u7edf\u5177\u6709(D)   \u6ce8\uff1a\u6570\u636e\u6a21\u578b\u91c7\u7528\u5173\u7cfb\u6a21\u578b\uff08\u4e8c\u7ef4\u8868\uff09", "\nA. \u6570\u636e\u65e0\u5197\u4f59 B. \u6570\u636e\u53ef\u5171\u4eab", "\nC. \u4e13\u95e8\u7684\u6570\u636e\u7ba1\u7406\u8f6f\u4ef6 D. \u7279\u5b9a\u7684\u6570\u636e\u6a21\u578b", "\n(79) \u5206\u5e03\u5f0f\u6570\u636e\u5e93\u7cfb\u7edf\u4e0d\u5177\u6709\u7684\u7279\u70b9\u662f(B)", "\nA. \u5206\u5e03\u5f0f B. \u6570\u636e\u5197\u4f59", "\nC. \u6570\u636e\u5206\u5e03\u6027\u548c\u903b\u8f91\u6574\u4f53\u6027 D. \u4f4d\u7f6e\u900f\u660e\u6027\u548c\u590d\u5236\u900f\u660e\u6027", "\n(80) \u4e0b\u5217\u8bf4\u6cd5\u4e2d\uff0c\u4e0d\u5c5e\u4e8e\u6570\u636e\u6a21\u578b\u6240\u63cf\u8ff0\u7684\u5185\u5bb9\u7684\u662f(C) \u6ce8\uff1aP110", "\nA. \u6570\u636e\u7ed3\u6784 B. \u6570\u636e\u64cd\u4f5c C. \u6570\u636e\u67e5\u8be2 D. \u6570\u636e\u7ea6\u675f", "\n(81)\u6839\u636e\u6570\u636e\u7ed3\u6784\u4e2d\u5404\u6570\u636e\u5143\u7d20\u4e4b\u95f4\u524d\u540e\u4ef6\u5173\u7cfb\u7684\u590d\u6742\u7a0b\u5ea6\uff0c\u4e00\u822c\u5c06\u6570\u636e\u7ed3\u6784\u5206\u6210(C)", "\nA.\u52a8\u6001\u7ed3\u6784\u548c\u9759\u6001\u7ed3\u6784 B.\u7d27\u51d1\u7ed3\u6784\u548c\u975e\u7d27\u51d1\u7ed3\u6784", "\nC.\u7ebf\u6027\u7ed3\u6784\u548c\u975e\u7ebf\u6027\u7ed3\u6784   D.\u5185\u90e8\u7ed3\u6784\u548c\u5916\u90e8\u7ed3\u6784", "\n(82)\u4e0b\u5217\u53d9\u8ff0\u4e2d\uff0c\u9519\u8bef\u7684\u662f(B)", "\nA.\u6570\u636e\u7684\u5b58\u50a8\u7ed3\u6784\u4e0e\u6570\u636e\u5904\u7406\u7684\u6548\u7387\u5bc6\u5207\u76f8\u5173 B.\u6570\u636e\u7684\u5b58\u50a8\u7ed3\u6784\u4e0e\u6570\u636e\u5904\u7406\u7684\u6548\u7387\u65e0\u5173 C.\u6570\u636e\u7684\u5b58\u50a8\u7ed3\u6784\u5728\u8ba1\u7b97\u673a\u4e2d\u6240\u5360\u7684\u7a7a\u95f4\u4e0d\u4e00\u5b9a\u662f\u8fde\u7eed\u7684 D.\u4e00\u79cd\u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u53ef\u4ee5\u6709\u591a\u79cd\u5b58\u50a8\u7ed3\u6784", "\n(83)\u7ebf\u6027\u8868L=(a1,a2,a3,\u2026ai\uff0c\u2026an)\uff0c\u4e0b\u5217\u8bf4\u6cd5\u6b63\u786e\u7684\u662f(D)", "\nA.\u6bcf\u4e2a\u5143\u7d20\u90fd\u6709\u4e00\u4e2a\u76f4\u63a5\u524d\u4ef6\u548c\u76f4\u63a5\u540e\u4ef6 B.\u7ebf\u6027\u8868\u4e2d\u81f3\u5c11\u8981\u6709\u4e00\u4e2a\u5143\u7d20 C.\u8868\u4e2d\u8bf8\u5143\u7d20\u7684\u6392\u5217\u987a\u5e8f\u5fc5\u987b\u662f\u7531\u5c0f\u5230\u5927\u6216\u7531\u5927\u5230", "\nD.\u9664\u7b2c\u4e00\u4e2a\u5143\u7d20\u548c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5916\uff0c\u5176\u4f59\u6bcf\u4e2a\u5143\u7d20\u90fd\u6709\u4e00\u4e2a\u4e14\u53ea\u6709\u4e00\u4e2a\u76f4\u63a5\u524d\u4ef6\u548c\u76f4\u63a5\u540e\u4ef6", "\n(84)\u7ebf\u6027\u8868\u82e5\u91c7\u7528\u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784\u65f6\uff0c\u8981\u6c42\u5185\u5b58\u4e2d\u53ef\u7528\u5b58\u50a8\u5355\u5143\u7684\u5730\u5740(D)", "\nA.\u5fc5\u987b\u662f\u8fde\u7eed\u7684             B.\u90e8\u5206\u5730\u5740\u5fc5\u987b\u662f\u8fde\u7eed\u7684", "\nC.\u4e00\u5b9a\u662f\u4e0d\u8fde\u7eed\u7684            D.\u8fde\u7eed\u4e0d\u8fde\u7eed\u90fd\u53ef\u4ee5", "\n(85)\u6808\u901a\u5e38\u91c7\u7528\u7684\u4e24\u79cd\u5b58\u50a8\u7ed3\u6784\u662f(A)", "\nA.\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784\u548c\u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784     B.\u6563\u5217\u65b9\u5f0f\u548c\u7d22\u5f15\u65b9\u5f0f", "\nC.\u94fe\u8868\u5b58\u50a8\u7ed3\u6784\u548c\u6570\u7ec4 D.\u7ebf\u6027\u5b58\u50a8\u7ed3\u6784\u548c\u975e\u7ebf\u6027\u5b58\u50a8\u7ed3\u6784", "\n(86)\u4e0b\u5217\u6570\u636e\u7ed3\u6784\u4e2d\uff0c\u6309\u5148\u8fdb\u540e\u51fa\u539f\u5219\u7ec4\u7ec7\u6570\u636e\u7684\u662f(B)", "\nA.\u7ebf\u6027\u94fe\u8868     B.\u6808         C.\u5faa\u73af\u94fe\u8868         D.\u987a\u5e8f\u8868", "\n(87)\u6811\u662f\u7ed3\u70b9\u7684\u96c6\u5408\uff0c\u5b83\u7684\u6839\u7ed3\u70b9\u6570\u76ee\u662f(C)", "\nA.\u6709\u4e14\u53ea\u67091   B.1\u6216\u591a\u4e8e1 C.0\u62161      D.\u81f3\u5c112", "\n(88)\u5177\u67093\u4e2a\u7ed3\u70b9\u7684\u4e8c\u53c9\u6811\u6709(D)", "\nA.2\u79cd\u5f62\u6001   B.4\u79cd\u5f62\u6001      C.7\u79cd\u5f62\u6001    D. 5\u79cd\u5f62\u6001", "\n(89)\u8bbe\u4e00\u68f5\u4e8c\u53c9\u6811\u4e2d\u67093\u4e2a\u53f6\u5b50\u7ed3\u70b9\uff0c\u67098\u4e2a\u5ea6\u4e3a1\u7684\u7ed3\u70b9\uff0c\u5219\u8be5\u4e8c\u53c9\u6811\u4e2d\u603b\u7684\u7ed3\u70b9\u6570\u4e3a(B)", "\nA. 12    B. 13           C.14        D. 15", "\n(90)\u5728\u7ed3\u6784\u5316\u7a0b\u5e8f\u8bbe\u8ba1\u601d\u60f3\u63d0\u51fa\u4e4b\u524d\uff0c\u5728\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\u66fe\u5f3a\u8c03\u7a0b\u5e8f\u7684\u6548\u7387\uff0c\u73b0\u5728\uff0c\u4e0e\u7a0b\u5e8f\u7684\u6548\u7387\u76f8\u6bd4\uff0c\u4eba\u4eec\u66f4\u91cd\u89c6\u7a0b\u5e8f\u7684(C)", "\nA.\u5b89\u5168\u6027 B.\u4e00\u81f4\u6027    C.\u53ef\u7406\u89e3\u6027      D.\u5408\u7406\u6027", "\n(91)\u4e3a\u4e86\u63d0\u9ad8\u6d4b\u8bd5\u7684\u6548\u7387\uff0c\u5e94\u8be5 (D)   \u6ce8\uff1aP85", "\nA.\u968f\u673a\u9009\u53d6\u6d4b\u8bd5\u6570\u636eB.\u53d6\u4e00\u5207\u53ef\u80fd\u7684\u8f93\u5165\u6570\u636e\u4f5c\u4e3a\u6d4b\u8bd5\u6570\u636eC.\u5728\u5b8c\u6210\u7f16\u7801\u4ee5\u540e\u5236\u5b9a\u8f6f\u4ef6\u7684\u6d4b\u8bd5\u8ba1\u5212 D.\u96c6\u4e2d\u5bf9\u4ed8\u90a3\u4e9b\u9519\u8bef\u7fa4\u96c6\u7684\u7a0b\u5e8f", "\n(92)\u8f6f\u4ef6\u751f\u547d\u5468\u671f\u4e2d\u6240\u82b1\u8d39\u7528\u6700\u591a\u7684\u9636\u6bb5\u662f(D)", "\nA.\u8be6\u7ec6\u8bbe\u8ba1     B.\u8f6f\u4ef6\u7f16\u7801    C.\u8f6f\u4ef6\u6d4b\u8bd5    D.\u8f6f\u4ef6\u7ef4\u62a4", "\u4e8c\u3001\u586b\u7a7a\u9898", "\n(1) \u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u4e3b\u8981\u5305\u62ec______\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u3002 \u7b54\uff1a\u65f6\u95f4", "\n(2) \u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u5728\u8ba1\u7b97\u673a\u5b58\u50a8\u7a7a\u95f4\u4e2d\u7684\u5b58\u653e\u5f62\u5f0f\u79f0\u4e3a\u6570\u636e\u7684______\u3002\u7b54\uff1a\u5b58\u50a8\u7ed3\u6784#\u7269\u7406\u7ed3\u6784", "\n(3) \u82e5\u6309\u529f\u80fd\u5212\u5206\uff0c\u8f6f\u4ef6\u6d4b\u8bd5\u7684\u65b9\u6cd5\u901a\u5e38\u5206\u4e3a\u767d\u76d2\u6d4b\u8bd5\u65b9\u6cd5\u548c______\u6d4b\u8bd5\u65b9\u6cd5\u3002\u7b54\uff1a\u9ed1\u76d2", "\n(4) \u5982\u679c\u4e00\u4e2a\u5de5\u4eba\u53ef\u7ba1\u7406\u591a\u4e2a\u8bbe\u65bd\uff0c\u800c\u4e00\u4e2a\u8bbe\u65bd\u53ea\u88ab\u4e00\u4e2a\u5de5\u4eba\u7ba1\u7406\uff0c\u5219\u5b9e\u4f53\u201d\u5de5\u4eba\u201d\u4e0e\u5b9e\u4f53\u201d\u8bbe\u5907\u201d\u4e4b\u95f4\u5b58\u5728______\u8054\u7cfb\u3002", "\n\u7b54\uff1a\u4e00\u5bf9\u591a#1\uff1aN#1:n", "\n(5) \u5173\u7cfb\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\u80fd\u5b9e\u73b0\u7684\u4e13\u95e8\u5173\u7cfb\u8fd0\u7b97\u5305\u62ec\u9009\u62e9\u3001\u8fde\u63a5\u548c______\u3002    \u7b54\uff1a\u6295\u5f71", "\n(6) \u5728\u5148\u5de6\u540e\u53f3\u7684\u539f\u5219\u4e0b\uff0c\u6839\u636e\u8bbf\u95ee\u6839\u7ed3\u70b9\u7684\u6b21\u5e8f\uff0c\u4e8c\u53c9\u6811\u7684\u904d\u5386\u53ef\u4ee5\u5206\u4e3a\u4e09\u79cd\uff1a\u524d\u5e8f\u904d\u5386\u3001______\u904d\u5386\u548c\u540e\u5e8f\u904d\u5386\u3002\u7b54\uff1a\u4e2d\u5e8f", "\n(7) \u7ed3\u6784\u5316\u7a0b\u5e8f\u8bbe\u8ba1\u65b9\u6cd5\u7684\u4e3b\u8981\u539f\u5219\u53ef\u4ee5\u6982\u62ec\u4e3a\u81ea\u9876\u5411\u4e0b\u3001\u9010\u6b65\u6c42\u7cbe\u3001______\u548c\u9650\u5236\u4f7f\u7528goto\u8bed\u53e5\u3002  \u7b54\uff1a\u6a21\u5757\u5316", "\n(8) \u8f6f\u4ef6\u7684\u8c03\u8bd5\u65b9\u6cd5\u4e3b\u8981\u6709\uff1a\u5f3a\u884c\u6392\u9519\u6cd5\u3001______\u548c\u539f\u56e0\u6392\u9664\u6cd5\u3002\u7b54\uff1a\u56de\u6eaf\u6cd5", "\n(9) \u6570\u636e\u5e93\u7cfb\u7edf\u7684\u4e09\u7ea7\u6a21\u5f0f\u5206\u522b\u4e3a______\u6a21\u5f0f\u3001\u5185\u90e8\u7ea7\u6a21\u5f0f\u4e0e\u5916\u90e8\u7ea7\u6a21\u5f0f\u3002\u7b54\uff1a\u6982\u5ff5#\u6982\u5ff5\u7ea7", "\n(10) \u6570\u636e\u5b57\u5178\u662f\u5404\u7c7b\u6570\u636e\u63cf\u8ff0\u7684\u96c6\u5408\uff0c\u5b83\u901a\u5e38\u5305\u62ec5\u4e2a\u90e8\u5206\uff0c\u5373\u6570\u636e\u9879\u3001\u6570\u636e\u7ed3\u6784\u3001\u6570\u636e\u6d41\u3001______\u548c\u5904\u7406\u8fc7\u7a0b\u3002\u7b54\uff1a\u6570\u636e\u5b58\u50a8", "\n(11) \u8bbe\u4e00\u68f5\u5b8c\u5168\u4e8c\u53c9\u6811\u5171\u6709500\u4e2a\u7ed3\u70b9\uff0c\u5219\u5728\u8be5\u4e8c\u53c9\u6811\u4e2d\u6709______\u4e2a\u53f6\u5b50\u7ed3\u70b9\u3002\u7b54\uff1a250", "\n(12) \u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u5192\u6ce1\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a______\u3002 \u7b54\uff1an(n-1)/2#n*(n-1)/2#O(n(n-1)/2)#O(n*(n-1)/2)", "\n(13) \u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u65b9\u6cd5\u4e2d\u6d89\u53ca\u7684\u5bf9\u8c61\u662f\u7cfb\u7edf\u4e2d\u7528\u6765\u63cf\u8ff0\u5ba2\u89c2\u4e8b\u7269\u7684\u4e00\u4e2a______\u3002\u7b54\uff1a\u5b9e\u4f53", "\n(14) \u8f6f\u4ef6\u7684\u9700\u6c42\u5206\u6790\u9636\u6bb5\u7684\u5de5\u4f5c\uff0c\u53ef\u4ee5\u6982\u62ec\u4e3a\u56db\u4e2a\u65b9\u9762\uff1a______\u3001\u9700\u6c42\u5206\u6790\u3001\u7f16\u5199\u9700\u6c42\u89c4\u683c\u8bf4\u660e\u4e66\u548c\u9700\u6c42\u8bc4\u5ba1\u3002 \u7b54\uff1a\u9700\u6c42\u83b7\u53d6", "\n(15) ______\u662f\u6570\u636e\u5e93\u5e94\u7528\u7684\u6838\u5fc3\u3002 \u7b54\uff1a\u6570\u636e\u5e93\u8bbe\u8ba1", "\n(16) \u6570\u636e\u7ed3\u6784\u5305\u62ec\u6570\u636e\u7684______\u7ed3\u6784\u548c\u6570\u636e\u7684\u5b58\u50a8\u7ed3\u6784\u3002", "\n\u7b54\uff1a\u903b\u8f91", "\n(17) \u8f6f\u4ef6\u5de5\u7a0b\u7814\u7a76\u7684\u5185\u5bb9\u4e3b\u8981\u5305\u62ec\uff1a______\u6280\u672f\u548c\u8f6f\u4ef6\u5de5\u7a0b\u7ba1\u7406\u3002\u7b54\uff1a\u8f6f\u4ef6\u5f00\u53d1     \u6ce8\uff1aP64", "\n(18) \u4e0e\u7ed3\u6784\u5316\u9700\u6c42\u5206\u6790\u65b9\u6cd5\u76f8\u5bf9\u5e94\u7684\u662f______\u65b9\u6cd5\u3002", "\n\u7b54\uff1a\u7ed3\u6784\u5316\u8bbe\u8ba1", "\n(19) \u5173\u7cfb\u6a21\u578b\u7684\u5b8c\u6574\u6027\u89c4\u5219\u662f\u5bf9\u5173\u7cfb\u7684\u67d0\u79cd\u7ea6\u675f\u6761\u4ef6\uff0c\u5305\u62ec\u5b9e\u4f53\u5b8c\u6574\u6027\u3001______\u548c\u81ea\u5b9a\u4e49\u5b8c\u6574\u6027\u3002\u7b54\uff1a\u53c2\u7167\u5b8c\u6574\u6027", "\n(20) \u6570\u636e\u6a21\u578b\u6309\u4e0d\u540c\u7684\u5e94\u7528\u5c42\u6b21\u5206\u4e3a\u4e09\u79cd\u7c7b\u578b\uff0c\u5b83\u4eec\u662f______\u6570\u636e\u6a21\u578b\u3001\u903b\u8f91\u6570\u636e\u6a21\u578b\u548c\u7269\u7406\u6570\u636e\u6a21\u578b\u3002\u7b54\uff1a\u6982\u5ff5     \u6ce8\uff1aP110", "\n(21) \u6808\u7684\u57fa\u672c\u8fd0\u7b97\u6709\u4e09\u79cd\uff1a\u5165\u6808\u3001\u9000\u6808\u548c______\u3002", "\n\u7b54\uff1a\u8bfb\u6808\u9876\u5143\u7d20#\u8bfb\u6808\u9876\u7684\u5143\u7d20#\u8bfb\u51fa\u6808\u9876\u5143\u7d20", "\n(22) \u5728\u9762\u5411\u5bf9\u8c61\u65b9\u6cd5\u4e2d\uff0c\u4fe1\u606f\u9690\u853d\u662f\u901a\u8fc7\u5bf9\u8c61\u7684______\u6027\u6765\u5b9e\u73b0\u7684\u3002\u7b54\uff1a\u5c01\u88c5", "\n(23) \u6570\u636e\u6d41\u7684\u7c7b\u578b\u6709______\u548c\u4e8b\u52a1\u578b\u3002 \u7b54\uff1a\u53d8\u6362\u578b \u6ce8\uff1aP77", "\n(24) \u6570\u636e\u5e93\u7cfb\u7edf\u4e2d\u5b9e\u73b0\u5404\u79cd\u6570\u636e\u7ba1\u7406\u529f\u80fd\u7684\u6838\u5fc3\u8f6f\u4ef6\u79f0\u4e3a______\u3002\u7b54\uff1a\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf#DBMS     \u6ce8\uff1a\u8981\u7262\u8bb0\uff0c\u91cd\u8981", "\n(25) \u5173\u7cfb\u6a21\u578b\u7684\u6570\u636e\u64cd\u7eb5\u5373\u662f\u5efa\u7acb\u5728\u5173\u7cfb\u4e0a\u7684\u6570\u636e\u64cd\u7eb5\uff0c\u4e00\u822c\u6709______\u3001\u589e\u52a0\u3001\u5220\u9664\u548c\u4fee\u6539\u56db\u79cd\u64cd\u4f5c\u3002\u7b54\uff1a\u67e5\u8be2    \u6ce8\uff1a\u8981\u7262\u8bb0", "\n(26) \u5b9e\u73b0\u7b97\u6cd5\u6240\u9700\u7684\u5b58\u50a8\u5355\u5143\u591a\u5c11\u548c\u7b97\u6cd5\u7684\u5de5\u4f5c\u91cf\u5927\u5c0f\u5206\u522b\u79f0\u4e3a\u7b97\u6cd5\u7684 ______\u3002 \u7b54\uff1a\u7a7a\u95f4\u590d\u6742\u5ea6\u548c\u65f6\u95f4\u590d\u6742\u5ea6", "\n(27) \u6570\u636e\u7ed3\u6784\u5305\u62ec\u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u3001\u6570\u636e\u7684 ______\u4ee5\u53ca\u5bf9\u6570\u636e\u7684\u64cd\u4f5c\u8fd0\u7b97\u3002\u7b54\uff1a\u5b58\u50a8\u7ed3\u6784        \u6ce8\uff1aP7", "\n(28) \u4e00\u4e2a\u7c7b\u53ef\u4ee5\u4ece\u76f4\u63a5\u6216\u95f4\u63a5\u7684\u7956\u5148\u4e2d\u7ee7\u627f\u6240\u6709\u5c5e\u6027\u548c\u65b9\u6cd5\u3002\u91c7\u7528\u8fd9\u4e2a\u65b9\u6cd5\u63d0\u9ad8\u4e86\u8f6f\u4ef6\u7684______\u3002\u7b54\uff1a\u53ef\u91cd\u7528\u6027", "\n(29) \u9762\u5411\u5bf9\u8c61\u7684\u6a21\u578b\u4e2d\uff0c\u6700\u57fa\u672c\u7684\u6982\u5ff5\u662f\u5bf9\u8c61\u548c ______\u3002 \u7b54\uff1a\u7c7b", "\n(30) \u8f6f\u4ef6\u7ef4\u62a4\u6d3b\u52a8\u5305\u62ec\u4ee5\u4e0b\u51e0\u7c7b\uff1a\u6539\u6b63\u6027\u7ef4\u62a4\u3001\u9002\u5e94\u6027\u7ef4\u62a4\u3001______\u7ef4\u62a4\u548c\u9884\u9632\u6027\u7ef4\u62a4\u3002\u7b54\uff1a\u5b8c\u5584\u6027    \u6ce8\uff1a\u8981\u7262\u8bb0\uff0c\u4e66\u4e2d\u6ca1\u6709\u63d0\u5230", "\n(31) \u7b97\u6cd5\u7684\u57fa\u672c\u7279\u5f81\u662f\u53ef\u884c\u6027\u3001\u786e\u5b9a\u6027\u3001______\u548c\u62e5\u6709\u8db3\u591f\u7684\u60c5\u62a5\u3002\u7b54\uff1a\u6709\u7a77\u6027", "\n(32) \u987a\u5e8f\u5b58\u50a8\u65b9\u6cd5\u662f\u628a\u903b\u8f91\u4e0a\u76f8\u90bb\u7684\u7ed3\u70b9\u5b58\u50a8\u5728\u7269\u7406\u4f4d\u7f6e______\u7684\u5b58\u50a8\u5355\u5143\u4e2d\u3002\u7b54\uff1a\u76f8\u90bb", "\n(33) Jackson\u7ed3\u6784\u5316\u7a0b\u5e8f\u8bbe\u8ba1\u65b9\u6cd5\u662f\u82f1\u56fd\u7684M.Jackson\u63d0\u51fa\u7684\uff0c\u5b83\u662f\u4e00\u79cd\u9762\u5411______\u7684\u8bbe\u8ba1\u65b9\u6cd5\u3002\u7b54\uff1a\u6570\u636e\u7ed3\u6784        \u6ce8\uff1aP67", "\n(34) \u6570\u636e\u5e93\u8bbe\u8ba1\u5206\u4e3a\u4ee5\u4e0b6\u4e2a\u8bbe\u8ba1\u9636\u6bb5\uff1a\u9700\u6c42\u5206\u6790\u9636\u6bb5\u3001______\u3001\u903b\u8f91\u8bbe\u8ba1\u9636\u6bb5\u3001\u7269\u7406\u8bbe\u8ba1\u9636\u6bb5\u3001\u5b9e\u65bd\u9636\u6bb5\u3001\u8fd0\u884c\u548c\u7ef4\u62a4\u9636\u6bb5\u3002", "\n\u7b54\uff1a\u6982\u5ff5\u8bbe\u8ba1\u9636\u6bb5#\u6570\u636e\u5e93\u6982\u5ff5\u8bbe\u8ba1\u9636\u6bb5", "\n(35) \u6570\u636e\u5e93\u4fdd\u62a4\u5206\u4e3a\uff1a\u5b89\u5168\u6027\u63a7\u5236 \u3001______\u3001\u5e76\u53d1\u6027\u63a7\u5236\u548c\u6570\u636e\u7684\u6062\u590d\u3002\u7b54\uff1a\u5b8c\u6574\u6027\u63a7\u5236    \u6ce8\uff1a\u8981\u7262\u8bb0", "\n(36) \u6d4b\u8bd5\u7684\u76ee\u7684\u662f\u66b4\u9732\u9519\u8bef\uff0c\u8bc4\u4ef7\u7a0b\u5e8f\u7684\u53ef\u9760\u6027\uff1b\u800c______\u7684\u76ee\u7684\u662f\u53d1\u73b0\u9519\u8bef\u7684\u4f4d\u7f6e\u5e76\u6539\u6b63\u9519\u8bef\u3002\u7b54\uff1a\u8c03\u8bd5", "\n(37) \u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u5806\u6392\u5e8f\u9700\u8981\u6bd4\u8f83\u7684\u6b21\u6570\u4e3a______\u3002", "\n\u7b54\uff1aO(nlog2n)", "\n(38) \u82e5\u4e32s=\u201dProgram\u201d\uff0c\u5219\u5176\u5b50\u4e32\u7684\u6570\u76ee\u662f______\u3002\u7b54\uff1a29", "\n(39) \u4e00\u4e2a\u9879\u76ee\u5177\u6709\u4e00\u4e2a\u9879\u76ee\u4e3b\u7ba1\uff0c\u4e00\u4e2a\u9879\u76ee\u4e3b\u7ba1\u53ef\u7ba1\u7406\u591a\u4e2a\u9879\u76ee\uff0c\u5219\u5b9e\u4f53\u201d\u9879\u76ee\u4e3b\u7ba1\u201d\u4e0e\u5b9e\u4f53\u201d\u9879\u76ee\u201d\u7684\u8054\u7cfb\u5c5e\u4e8e______\u7684\u8054\u7cfb\u3002", "\n\u7b54\uff1a1\u5bf9\u591a#1\uff1aN", "\n(40) \u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\u5e38\u89c1\u7684\u6570\u636e\u6a21\u578b\u6709\u5c42\u6b21\u6a21\u578b\u3001\u7f51\u72b6\u6a21\u578b\u548c______\u4e09\u79cd\u3002\u7b54\uff1a\u5173\u7cfb\u6a21\u578b", "\n(41)\u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u6709\u7ebf\u6027\u7ed3\u6784\u548c_______\u4e24\u5927\u7c7b\u3002 \u7b54\u975e\u7ebf\u6027\u7ed3\u6784", "\n(42)\u6570\u636e\u7ed3\u6784\u5206\u4e3a\u903b\u8f91\u7ed3\u6784\u4e0e\u5b58\u50a8\u7ed3\u6784\uff0c\u7ebf\u6027\u94fe\u8868\u5c5e\u4e8e_______\u3002\u7b54\uff1a\u5b58\u50a8\u7ed3\u6784", "\n(43)\u6570\u636e\u7684\u57fa\u672c\u5355\u4f4d\u662f_______\u3002\u7b54\uff1a\u5143\u7d20", "\n(44)\u957f\u5ea6\u4e3an\u7684\u987a\u5e8f\u5b58\u50a8\u7ebf\u6027\u8868\u4e2d\uff0c\u5f53\u5728\u4efb\u4f55\u4f4d\u7f6e\u4e0a\u63d2\u5165\u4e00\u4e2a\u5143\u7d20\u6982\u7387\u90fd\u76f8\u7b49\u65f6\uff0c\u63d2\u5165\u4e00\u4e2a\u5143\u7d20\u6240\u9700\u79fb\u52a8\u5143\u7d20\u7684\u5e73\u5747\u4e2a\u6570\u4e3a______\u3002", "\n\u7b54\uff1an/2", "\n(45)\u5f53\u5faa\u73af\u961f\u5217\u975e\u7a7a\u4e14\u961f\u5c3e\u6307\u9488\u7b49\u4e8e\u961f\u5934\u6307\u9488\u65f6\uff0c\u8bf4\u660e\u5faa\u73af\u961f\u5217\u5df2\u6ee1\uff0c\u4e0d\u80fd\u8fdb\u884c\u5165\u961f\u8fd0\u7b97\u3002\u8fd9\u79cd\u60c5\u51b5\u79f0\u4e3a______\u3002 \u7b54\uff1a\u4e0a\u6ea2", "\n(46)\u5728\u9762\u5411\u5bf9\u8c61\u65b9\u6cd5\u4e2d\uff0c\u7c7b\u4e4b\u95f4\u5171\u4eab\u5c5e\u6027\u548c\u64cd\u4f5c\u7684\u673a\u5236\u79f0\u4e3a_______\u3002\u7b54\uff1a\u7ee7\u627f"], "title": "C\u8bed\u8a00\u7b14\u8bd5\u9898"},
{"contents": ["1 \u6c42\u4e0b\u9762\u7ed3\u6784\u4f53\u6240\u5360\u5b57\u8282\u6570", "\nStruct e {", "\n\tUnsigned char a:1;", "\n\tUnsigned char b:2;", "\n\tUnsigned char c;", "\n}", "\n2 \u5199\u51fa swap\u51fd\u6570\u7684\u5b9e\u73b0", "\n Void swap(int *a,int *b)", "\n3 volatile\u7684\u7528\u6cd5", "\n4 \u95ee\u4e86\u4e00\u4e2a\u5173\u4e8eparam_pack\uff08\uff09\u7684\u4e1c\u897f\uff0c\u4e0d\u77e5\u9053\u8fd9\u4e2a\uff0c\u6ca1\u7528\u8fc7", "\n5 \u7ed9\u4e00\u4e2a\u51fd\u6570\uff0c\u5982", "\nInt a\uff1b", "\nInt b=10\uff1b", "\nInt func\uff08\uff09{", "\n\tChar c =b\uff1b", "\n}", "\n\u95ee a b c func\u5206\u522b\u5b58\u653e\u5728\u4ec0\u4e48\u5730\u65b9\uff1f", "\n  a BSS\u6bb5", "\n  b DATA \u6bb5", "\n  c STACK \u6bb5", "\n  func TXT\u6bb5", "\n6 struct name {", "\n\tChar *name;", "\n\tInt id ;", "\n}*ptr;", "\nPtr = 0x 100000;", "\n\u6c42 ptr + 0\u00d7100 \u7b49\u4e8e\u591a\u5c11\uff1f", "\n7 gcc \u65b9\u9762 \u5173\u4e8e\u4f18\u5316\u65b9\u9762\u7684\u77e5\u8bc6\uff0c\u4f18\u5316\u7b49\u7ea7 \uff0cinline\u51fd\u6570\u5728\u54ea\u4e00\u7ea7\u5c55\u5f00 \uff0c-o \u2013g \u7b49\u76f8\u5173\u77e5\u8bc6\u3002"], "title": "C\u8bed\u8a00\u7b14\u8bd5\u9898\u56de\u5fc6"},
{"contents": ["\u4e00\u3000\u7b80\u7b54\u9898", "\uff11\u3000\u8fdb\u5236\u8f6c\u6362", "\uff12\u3000\u5355\u7247\u673aC51\u3000\u7528idata \u53caxdata\u3000\u5b9a\u4e49\u53d8\u91cf\u7684\u5b58\u653e\u533a\u57df\u3000\u53ca\u5176\u6c47\u7f16\u6307\u4ee4", "\uff13\u3000\u4f4d\u8fd0\u7b97\u3000\uff08\u7f6e\u4f4d\u3000\u6e05\u96f6\u3000\u53d6\u53cd\uff09", "\u4e8c\u3000\u6c42\u8fd0\u653e\u7684\u7535\u538b\u589e\u76ca", "\u4e09\u3000\u53f2\u5bc6\u7279\u89e6\u53d1\u7535\u8def\u7684\u3000\u9ad8\u4f4e\u7535\u538b\u9608\u503c\u53ca\u56de\u6ede\u7535\u538b\u3000\u4f9d\u636e\u8f93\u5165\u7535\u538b\u753b\u51fa\u8f93\u51fa\u7535\u538b", "\u56db\u3000\u7528\u95e8\u7535\u8def\u8bbe\u8ba1\u683c\u96f7\u7801\u8f6c\u6362\u4e3a\u81ea\u7136\u4e8c\u8fdb\u7801\u7535\u8def\uff0c\u8981\u6c42\u753b\u51fa\u7535\u8def\u56fe", "\u4e94\u3000\u4e8c\u8fdb\uff24\u89e6\u53d1\u5668\u72d7\u6210\u7684\u540c\u6b65\u7535\u8def", "\u3000\u3000\u8981\u6c42\u5199\u51fa\u9a71\u52a8\u65b9\u7a0b\uff0c\u72b6\u6001\u65b9\u7a0b\uff0c\u8f93\u51fa\u65b9\u7a0b\uff0c\u753b\u51fa\u72b6\u6001\u8f6c\u79fb\u56fe", "\u516d\u3000\u7528\u5355\u7247\u673a\u5b9e\u73b0\u4ece\u4e32\u53e3\u8bfb\u53d6\u56db\u5b57\u8282\u7684\u6570\u4e0e\u56fa\u4ef6\u4e2d\u7684\u56db\u5b57\u8282\u7684\u5e38\u6570\u6bd4\u8f83\uff0c\u82e5\u76f8\u7b49\uff0c\u6682\u505c\uff16\uff33\u540e\u63a7\u5236\u7535\u673a\u5de5\u4f5c\uff0e\u7ee7\u7eed\u8bfb\u53d6\uff0c\u6bd4\u8f83\uff0e\uff0e\uff0e", "\u3000\u3000\u8981\u6c42\u753b\u51fa\u7535\u8def\u53ca\u5199\u51fa\u4ee3\u7801", "\u4e03\u3000\u4e00\u4e2a\uff18\u6bd4\u7279\u7684\u6570\uff0c\u8981\u6c42\u7f16\u5199\u4e00\u7aef\uff23\u7a0b\u5e8f\u5b9e\u73b0\u4f4d\u5012\u5e8f\u529f\u80fd\uff0e", "\u66f4\u591a\u6d77\u91cf\u8d44\u6599\u4e0b\u8f7d\uff0c\u656c\u8bf7\u8bbf\u95eewww.dajie.com "], "title": "\u5468\u7acb\u529f\u516c\u53f809\u5e749\u670812\u65e5\u6210\u90fd\u7b14\u8bd5\u9898"},
{"contents": ["1.", "\nWhat is displayed when f() is called given the code:", "\nclass Number {", "\npublic:", "\nstring type; ", "Number(): type(\u201cvoid\u201d) { }", "\nexplicit Number(short) : type(\u201cshort\u201d) { }", "\nNumber(int) : type(\u201cint\u201d) { }", "\n};", "\nvoid Show(const Number& n) { cout \nvoid f()", "\n{", "\nshort s = 42;", "\nShow(s);", "\n}", "\na) void", "\nb) short", "\nc) int", "\nd) None of the above", "2. Which is the correct output for the following code", "\ndouble dArray[2] = {4, 8}, *p, *q;", "\np = &dArray[0];", "\nq = p + 1;", "\ncout \ncout \na) 1 and 8", "\nb) 8 and 4", "\nc) 4 and 8", "\nd) 8 and 1", "\u7b2c\u4e00\u4e2a\u9009C\uff1b", "\n\u867d\u7136\u4f20\u5165\u7684\u662fshort\u7c7b\u578b\uff0c\u4f46\u662fshort\u7c7b\u578b\u7684\u6784\u9020\u51fd\u6570\u88ab\u751f\u547d\u88abexplicit\uff0c\u4e5f\u5c31\u662f\u53ea\u80fd\u663e\u793a\u7c7b\u578b\u8f6c\u6362\uff0c\u4e0d\u80fd\u4f7f\u7528\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\u3002", "\n\u7b2c\u4e8c\u4e2a\u9009A\uff1b", "\n\u7b2c\u4e00\u4e2a\u662f\u6307\u9488\u52a0\u51cf\uff0c\u6309\u7167\u7684\u662f\u6307\u5411\u5730\u5740\u7c7b\u578b\u7684\u52a0\u51cf\uff0c\u53ea\u8ddf\u7c7b\u578b\u4f4d\u7f6e\u6709\u5173\uff0cq\u548cp\u6307\u5411\u7684\u6570\u636e\u7c7b\u578b\u4ee5\u5b9e\u9645\u6570\u636e\u7c7b\u578b\u6765\u7b97\u5dee\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u56e0\u6b64\u662f1\u3002\u800c\u7b2c\u4e8c\u4e2a\u52a0\u51cf\u662f\u5b9e\u9645\u6307\u9488\u503c\u5f97\u52a0\u51cf\uff0c\u5728\u5185\u5b58\u4e2d\u4e00\u4e2adouble\u7c7b\u578b\u5360\u636e8\u4e2a\u5b57\u8282\uff0c\u56e0\u6b64\u662f8"], "title": "\u51e0\u9053c\u7b14\u8bd5\u9898(\u542b\u53c2\u8003\u7b54\u6848)"},
{"contents": ["\u4e0b\u9762\u7684\u9898\u76ee\u5fc5\u987b\u5168\u90e8\u7b54\u5bf9\u624d\u7ed9\u5206\uff1a", "\n1\u3001 \u5982\u4f55\u5728C\u4e2d\u521d\u59cb\u5316\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4\u3002", "\n2\u3001 \u5982\u4f55\u5728C\u4e2d\u4e3a\u4e00\u4e2a\u6570\u7ec4\u5206\u914d\u7a7a\u95f4\u3002", "\n3\u3001 \u5982\u4f55\u521d\u59cb\u5316\u4e00\u4e2a\u6307\u9488\u6570\u7ec4\u3002", "\n4\u3001\u5982\u4f55\u5b9a\u4e49\u4e00\u4e2a\u670910\u4e2a\u5143\u7d20\u7684\u6574\u6570\u578b\u6307\u9488\u6570\u7ec4\u3002", "\n5\u3001 s[10]\u7684\u53e6\u5916\u4e00\u79cd\u8868\u8fbe\u65b9\u5f0f\u662f\u4ec0\u4e48\u3002", "\n6\u3001 GCC3.2.2\u7248\u672c\u4e2d\u652f\u6301\u54ea\u51e0\u79cd\u7f16\u7a0b\u8bed\u8a00\u3002", "\n7\u3001 \u8981\u4f7f\u7528CHAR_BIT\u9700\u8981\u5305\u542b\u54ea\u4e2a\u5934\u6587\u4ef6\u3002", "\n8\u3001 \u5bf9(-1.2345)\u53d6\u6574\u662f\u591a\u5c11\uff1f", "\n9\u3001 \u5982\u4f55\u8ba9\u5c40\u90e8\u53d8\u91cf\u5177\u6709\u5168\u5c40\u751f\u547d\u671f\u3002", "\n10\u3001C\u4e2d\u7684\u5e38\u91cf\u5b57\u7b26\u4e32\u5e94\u5728\u4f55\u65f6\u5b9a\u4e49\uff1f", "\n11\u3001\u5982\u4f55\u5728\u4e24\u4e2a.c\u6587\u4ef6\u4e2d\u5f15\u7528\u5bf9\u65b9\u7684\u53d8\u91cf\u3002", "\n12\u3001\u4f7f\u7528malloc\u4e4b\u524d\u9700\u8981\u505a\u4ec0\u4e48\u51c6\u5907\u5de5\u4f5c\u3002", "\n13\u3001realloc\u51fd\u6570\u5728\u4f7f\u7528\u4e0a\u8981\u6ce8\u610f\u4ec0\u4e48\u95ee\u9898\u3002", "\n14\u3001strtok\u51fd\u6570\u5728\u4f7f\u7528\u4e0a\u8981\u6ce8\u610f\u4ec0\u4e48\u95ee\u9898\u3002", "\n15\u3001gets\u51fd\u6570\u5728\u4f7f\u7528\u4e0a\u8981\u6ce8\u610f\u4ec0\u4e48\u95ee\u9898\u3002", "\n16\u3001C\u8bed\u8a00\u7684\u8bcd\u6cd5\u5206\u6790\u5728\u957f\u5ea6\u89c4\u5219\u65b9\u9762\u91c7\u7528\u7684\u662f\u4ec0\u4e48\u7b56\u7565\uff1f", "\n17\u3001a+++++b\u6240\u8868\u793a\u7684\u662f\u4ec0\u4e48\u610f\u601d\uff1f\u6709\u4ec0\u4e48\u95ee\u9898\uff1f", "\n18\u3001\u5982\u4f55\u5b9a\u4e49Bool\u53d8\u91cf\u7684TRUE\u548cFALSE\u7684\u503c\u3002", "\n19\u3001C\u8bed\u8a00\u7684const\u7684\u542b\u4e49\u662f\u4ec0\u4e48\u3002\u5728\u5b9a\u4e49\u5e38\u91cf\u65f6\uff0c\u4e3a\u4ec0\u4e48\u63a8\u8350\u4f7f\u7528const\uff0c\u800c\u4e0d\u662f#define\u3002", "\n20\u3001C\u8bed\u8a00\u7684volatile\u7684\u542b\u4e49\u662f\u4ec0\u4e48\u3002\u4f7f\u7528\u65f6\u4f1a\u5bf9\u7f16\u8bd1\u5668\u6709\u4ec0\u4e48\u6697\u793a\u3002", "\u8fd9\u90e8\u5206\u662fANSI C\u7684\u4e00\u4e9b\u95ee\u9898\uff0c\u9898\u76ee\u7684\u524d\u63d0\u662f\u5fc5\u987b\u90fd\u7b54\u5bf9\uff0c\u770b\u4f3c\u5f88\u53d8\u6001\uff0c\u4f46\u662f\u7ec6\u60f3\u4e00\u4e0b\uff0c\u8fd9\u4e9b\u90fd\u662f\u6700\u57fa\u7840\u7684\uff0c\u867d\u7136\u6211\u4eec\u5728\u4f7f\u7528\u4ed6\u4eec\u7684\u65f6\u5019\u4f1a\u72af\u8fd9\u6837\u90a3\u6837\u7684\u9519\u8bef\uff0c\u4f46\u662f\u6700\u7ec8\u76ee\u7684\u662f\u4e0d\u72af\u9519\u8bef\uff0c\u4e0d\u662f\u4e48\uff0c\u90a3\u4e48\u597d\uff0c\u4ece\u6700\u57fa\u7840\u7684\u5f00\u59cb\u3002", "1\u3001 \u5982\u4f55\u5728C\u4e2d\u521d\u59cb\u5316\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4\u3002", "\n\u8fd9\u4e2a\u95ee\u9898\u770b\u4f3c\u5f88\u7b80\u5355\uff0c\u4f46\u662f\u6211\u4eec\u8981\u5c06\u6700\u7b80\u5355\u7684\u95ee\u9898\u7528\u6700\u4e25\u8c28\u7684\u6001\u5ea6\u6765\u5bf9\u5f85\u3002\u5173\u952e\u7684\u5730\u65b9\uff1a\u521d\u59cb\u5316\u3001\u5b57\u7b26\u578b\u3001\u6570\u7ec4\u3002\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662fchar array[];\u3002\u8fd9\u4e2a\u95ee\u9898\u770b\u4f3c\u89e3\u51b3\u4e86\uff0c\u4f46\u662f\u5728\u521d\u59cb\u5316\u4e0a\u597d\u50cf\u8fd8\u6b20\u7f3a\u70b9\u4ec0\u4e48\uff0c\u4e2a\u4eba\u8ba4\u4e3a\uff1achar array[5]={\u20191\u2032,\u20192\u2032,\u20193\u2032,\u20194\u2032,\u20195\u2032};\u6216\u8005char array[5]={\u201c12345\u2033};\u6216\u8005char array[2][10]={\u201cChina\u201d,\u201dBeijing\u201d};\u4e5f\u8bb8\u66f4\u7b26\u5408\u201c\u521d\u59cb\u5316\u201d\u7684\u610f\u601d\u3002", "2\u3001 \u5982\u4f55\u5728C\u4e2d\u4e3a\u4e00\u4e2a\u6570\u7ec4\u5206\u914d\u7a7a\u95f4\u3002", "\n\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\uff1achar array[5]\uff1b\u610f\u601d\u662f\u5206\u914d\u7ed9\u6570\u7ec4array\u4e00\u4e2a5\u4e2a\u5b57\u8282\u7684\u7a7a\u95f4\u3002\u4f46\u662f\u6211\u4eec\u8981\u77e5\u9053\u5728C\u4e2d\u6570\u7ec4\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u540d\u5b57\uff0c\u5176\u5b9e\u8d28\u542b\u4e49\u5c31\u662f\u6307\u9488\uff0c\u6bd4\u5982char array[]\uff1b\u662f\u5230\u5e95\u5206\u914d\u7684\u591a\u5c11\u7a7a\u95f4\uff1f\u6240\u4ee5\u6211\u4eec\u8981\u5c06\u5176\u5206\u6210\u4e3a\u4e24\u79cd\u4e0d\u540c\u7684\u5f62\u5f0f\u7ed9\u51fa\u7b54\u6848\uff1a", "\n\u4e00\u79cd\u662f\u6808\u7684\u5f62\u5f0f\uff1achar array[5]\uff1b", "\n\u4e00\u79cd\u662f\u5806\u7684\u5f62\u5f0f\uff1achar *array; array=(char *)malloc(5);//C++: array=new char[5];", "\n\u5806\u548c\u6808\u7684\u542b\u4e49\u5176\u5b9e\u6211\u4e5f\u6ca1\u5f04\u592a\u900f\u5f7b\uff0c\u6539\u5929\u660e\u767d\u4e86\u518d\u53d1\u4e00\u7bc7\u3002", "\n\u6211\u4eec\u8981\u660e\u767d\u7684\u662f\uff0c\u7b2c\u4e00\u79cd\u5f62\u5f0f\u7a7a\u95f4\u5206\u914d\u7684\u5927\u5c0f\u53ef\u80fd\u4f1a\u53d7\u64cd\u4f5c\u7cfb\u7edf\u7684\u9650\u5236,\u6bd4\u5982windows\u4f1a\u9650\u5236\u57282M\uff1b\u7b2c\u4e8c\u79cd\u5f62\u5f0f\u6210\u7a7a\u95f4\u5206\u914d\u5f88\u7075\u6d3b\uff0c\u60f3\u5206\u914d\u591a\u5c11\u5206\u914d\u591a\u5c11\uff0c\u53ea\u8981RAM\u591f\u5927\u3002", "3\u3001 \u5982\u4f55\u521d\u59cb\u5316\u4e00\u4e2a\u6307\u9488\u6570\u7ec4\u3002", "\n\u9996\u5148\u660e\u786e\u4e00\u4e2a\u6982\u5ff5\uff0c\u5c31\u662f\u6307\u5411\u6570\u7ec4\u7684\u6307\u9488\uff0c\u548c\u5b58\u653e\u6307\u9488\u7684\u6570\u7ec4\u3002", "\n\u6307\u5411\u6570\u7ec4\u7684\u6307\u9488\uff1achar (*array)[5];\u542b\u4e49\u662f\u4e00\u4e2a\u6307\u5411\u5b58\u653e5\u4e2a\u5b57\u7b26\u7684\u6570\u7ec4\u7684\u6307\u9488\u3002", "\n\u5b58\u653e\u6307\u9488\u7684\u6570\u7ec4\uff1achar *array[5];\u542b\u4e49\u662f\u4e00\u4e2a\u6570\u7ec4\u4e2d\u5b58\u653e\u4e865\u4e2a\u6307\u5411\u5b57\u7b26\u578b\u6570\u636e\u7684\u6307\u9488\u3002", "\n\u6309\u7167\u9898\u610f\uff0c\u6211\u7406\u89e3\u4e3a\u521d\u59cb\u5316\u4e00\u4e2a\u5b58\u653e\u6307\u9488\u7684\u6570\u7ec4\uff0cchar *array[2]={\u201cChina\u201d,\u201dBeijing\u201d}\uff1b\u5176\u542b\u4e49\u662f\u521d\u59cb\u5316\u4e86\u4e00\u4e2a\u6709\u4e24\u4e2a\u6307\u5411\u5b57\u7b26\u578b\u6570\u636e\u7684\u6307\u9488\u7684\u6570\u7ec4\uff0c\u8fd9\u4e24\u4e2a\u6307\u9488\u5206\u522b\u6307\u5411\u5b57\u7b26\u4e32\u201dChina\u201d\u548c\u201dBeijing\u201d\u3002", "4\u3001\u5982\u4f55\u5b9a\u4e49\u4e00\u4e2a\u670910\u4e2a\u5143\u7d20\u7684\u6574\u6570\u578b\u6307\u9488\u6570\u7ec4\u3002", "\n\u65e2\u7136\u53ea\u662f\u5b9a\u4e49\u800c\u4e0d\u662f\u521d\u59cb\u5316\uff0c\u90a3\u5c31\u5f88\u7b80\u5355\u4e14\u6ca1\u6709\u4e89\u8bae\u4e86\uff1aint *array[10];\u3002", "5\u3001 s[10]\u7684\u53e6\u5916\u4e00\u79cd\u8868\u8fbe\u65b9\u5f0f\u662f\u4ec0\u4e48\u3002", "\n\u524d\u9762\u8bf4\u8fc7\u4e86\uff0c\u6570\u7ec4\u548c\u6307\u9488\u5176\u5b9e\u662f\u6570\u636e\u5b58\u5728\u5f62\u6001\u7684\u4e24\u79cd\u8868\u73b0\u5f62\u5f0f\uff0c\u5982\u679c\u8bf4\u5bf9\u4e8e\u6570\u7ec4s[]\uff0c\u6211\u4eec\u77e5\u9053*s=s[0]\uff0c\u90a3\u4e48s[10]\u7684\u53e6\u4e00\u79cd\u8868\u8fbe\u65b9\u5f0f\u5c31\u662f\uff1a*(s+10)\u3002", "6\u3001 GCC3.2.2\u7248\u672c\u4e2d\u652f\u6301\u54ea\u51e0\u79cd\u7f16\u7a0b\u8bed\u8a00\u3002", "\n\u8fd9\u4e2a\u95ee\u9898\u5b9e\u5728\u53d8\u6001\uff0c\u5c31\u50cf\u95ee\u4f60#error\u7684\u4f5c\u7528\u662f\u4ec0\u4e48\u4e00\u6837\u3002\u4e0d\u53ef\u5426\u8ba4\uff0cgcc\u662flinux\u4e0b\u4e00\u4e2a\u4eae\u70b9\uff0c\u662f\u4e00\u4e2a\u5907\u53d7\u65e0\u6570\u7a0b\u5e8f\u5458\u63a8\u5d07\u7684\u7f16\u8bd1\u5668\uff0c\u5176\u4f18\u70b9\u7701\u75651000\u5b57\uff0c\u6709\u5174\u8da3\u53ef\u4ee5\u81ea\u5df1\u67e5\uff0c\u6211\u7ffb\u4e86\u7ffb\u4e66\uff0c\u4e66\u4e0a\u66f0\uff1a\u652f\u6301C,C++,Java,Obj-C,Ada,Fortran,Pascal,Modula-3\u7b49\u8bed\u8a00\uff0c\u8fd9\u4e2a\u201c\u7b49\u201d\u6bd4\u8f83\u8981\u547d\uff0c\u4e0d\u8fc7\u6211\u8ba4\u4e3a\u5df2\u7ecf\u5f88\u5168\u4e86\uff0c\u5982\u679c\u8ba4\u4e3a\u8fd8\u662f\u4e0d\u5168\uff0c\u5e72\u8106\u628aASM\u4e5f\u52a0\u4e0a\u7b97\u4e86\uff0c\u4e0d\u8fc7\u90a3\u5df2\u7ecf\u4e0d\u7b97\u662f\u7f16\u8bd1\u4e86\u3002", "7\u3001 \u8981\u4f7f\u7528CHAR_BIT\u9700\u8981\u5305\u542b\u54ea\u4e2a\u5934\u6587\u4ef6\u3002", "\n\u5982\u679c\u7ed3\u5408\u4e0a\u9762\u7684\u95ee\u9898\uff0c\u7b54\u9898\u7684\u4eba\u4f30\u8ba1\u4f1a\u8ba4\u4e3a\u81ea\u5df1\u649e\u9b3c\u4e86\uff0c\u8fd9\u4e2a\u95ee\u9898\u5b9e\u5728\u662f\u2026\u2026\u641c\u7d22\u4e86\u4e00\u4e0b\uff0c\u5e94\u8be5\u662flimits.h\u3002", "8\u3001 \u5bf9(-1.2345)\u53d6\u6574\u662f\u591a\u5c11\uff1f", "\n\u5176\u5b9e\u4e0d\u540c\u7684\u53d6\u6574\u51fd\u6570\u53ef\u80fd\u6709\u4e0d\u540c\u7684\u7ed3\u679c\uff0c\u4e0d\u8fc7\u8fd9\u4e2a\u6570\u6ca1\u6709\u592a\u5927\u7684\u4e89\u8bae\uff0c\u7b54\u6848\u662f-1\u3002", "9\u3001 \u5982\u4f55\u8ba9\u5c40\u90e8\u53d8\u91cf\u5177\u6709\u5168\u5c40\u751f\u547d\u671f\u3002", "\n\u5177\u4f53\u7684\u751f\u547d\u671f\u7684\u6982\u5ff5\u6211\u89c9\u5f97\u6211\u8fd8\u8981\u597d\u597d\u6df1\u5165\u7684\u5b66\u4e60\u4e00\u4e0b\uff0c\u4f46\u662f\u8fd9\u4e2a\u9898\u76ee\u8fd8\u7b97\u6bd4\u8f83\u7b80\u5355\uff0c\u5373\u7528static\u4fee\u9970\u5c31\u53ef\u4ee5\u4e86\uff0c\u4f46\u662f\u53ea\u662f\u751f\u547d\u671f\u5ef6\u957f\uff0c\u8303\u56f4\u5e76\u6ca1\u6709\u6269\u5927\uff0c\u9664\u975e\u628a\u8fd9\u4e2a\u53d8\u91cf\u5b9a\u4e49\u5728\u51fd\u6570\u4f53\u5916\u7684\u9759\u6001\u533a\uff0c\u4e0d\u8fc7\u90a3\u6837\u5c31\u53d8\u6210\u5168\u5c40\u53d8\u91cf\u4e86\uff0c\u4eff\u4f5b\u4e0d\u7b26\u5408\u9898\u76ee\u8981\u6c42\u3002", "10\u3001C\u4e2d\u7684\u5e38\u91cf\u5b57\u7b26\u4e32\u5e94\u5728\u4f55\u65f6\u5b9a\u4e49\uff1f", "\n\u8fd9\u4e2a\u95ee\u9898\u8bf4\u5b9e\u8bdd\u4e0d\u662f\u5f88\u7406\u89e3\u9898\u5e72\u7684\u610f\u601d\uff0c\u636e\u6211\u7406\u89e3\uff0c\u6709\u4e24\u79cd\u60c5\u51b5\uff0c\u4e00\u79cd\u662f\u9884\u5904\u7406\u9636\u6bb5\uff0c\u7528#define\u5b9a\u4e49\uff1b\u8fd8\u6709\u5c31\u662f\u4f7f\u7528const\u4fee\u9970\u8bcd\uff0c\u4e0d\u8fc7const\u4fee\u9970\u7684\u662f\u4e00\u4e2a\u53d8\u91cf\uff0c\u5176\u542b\u4e49\u662f\u201c\u53ea\u8bfb\u201d\uff0c\u79f0\u4e4b\u4e3a\u5e38\u91cf\u5e76\u4e0d\u51c6\u786e\uff0c\u4f46\u662f\u786e\u5b9e\u53ef\u4ee5\u7528\u64cd\u4f5c\u53d8\u91cf\u7684\u65b9\u6cd5\u5f53\u5e38\u91cf\u7528\u3002\u6240\u4ee5\u8fd8\u662f\u7b2c\u4e00\u79cd\u6bd4\u8f83\u9760\u8c31\u3002", "11\u3001\u5982\u4f55\u5728\u4e24\u4e2a.c\u6587\u4ef6\u4e2d\u5f15\u7528\u5bf9\u65b9\u7684\u53d8\u91cf\u3002", "\n\u8fd9\u4e2a\u95ee\u9898\u4e5f\u95ee\u7684\u633a\u542b\u7cca\u7684\uff0c\u600e\u4e48\u8bf4\u5462\uff0c\u6700\u7b80\u5355\u6700\u76f4\u63a5\u7684\u65b9\u6cd5\u662f\u4e3a\u53d8\u91cf\u6dfb\u52a0extern\u4fee\u9970\u8bcd\uff0c\u5f53\u7136\uff0c\u8fd9\u4e2a\u53d8\u91cf\u5fc5\u987b\u662f\u5168\u5c40\u53d8\u91cf\u3002\u8fd8\u6709\u4e00\u79cd\u5c31\u662f\u5229\u7528\u51fd\u6570\u8c03\u7528\u6765\u8fdb\u884c\u53d8\u91cf\u7684\u95f4\u63a5\u5f15\u7528\uff0c\u6bd4\u5982\u8fd9\u4e2aC\u6587\u4ef6\u4e2d\u7684\u4e00\u4e2a\u51fd\u6570\u5f15\u7528\u53e6\u5916\u4e00\u4e2aC\u4e2d\u7684\u51fd\u6570\uff0c\u5c06\u53d8\u91cf\u901a\u8fc7\u5b9e\u53c2\u7684\u5f62\u5f0f\u4f20\u9012\u8fc7\u53bb\u3002\u4e0d\u8fc7\u9898\u76ee\u65e2\u7136\u8bf4\u662f\u5f15\u7528\uff0c\u90a3\u4e48\u8fd8\u662f\u7528\u7b2c\u4e00\u4e2a\u7b54\u6848\u597d\u4e86\u3002", "12\u3001\u4f7f\u7528malloc\u4e4b\u524d\u9700\u8981\u505a\u4ec0\u4e48\u51c6\u5907\u5de5\u4f5c\u3002", "\n\u5176\u5b9e\u51c6\u5907\u5de5\u4f5c\u5f88\u591a\u554a\uff0c\u6bd4\u5982\u4f60\u9700\u8981\u4e00\u53f0\u8ba1\u7b97\u673a\u4e4b\u7c7b\u7684\u3002\u73a9\u7b11\u8bdd\uff0c\u6211\u4eec\u9996\u5148\u8981\u77e5\u9053malloc\u7684\u7528\u9014\uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u52a8\u6001\u7684\u5206\u914d\u4e00\u6bb5\u7a7a\u95f4\uff0c\u8fd4\u56de\u8fd9\u6bb5\u7a7a\u95f4\u7684\u5934\u6307\u9488\u3002\u5b9e\u9645\u7684\u51c6\u5907\u5de5\u4f5c\u53ef\u4ee5\u8fd9\u4e48\u5206\uff1a\u9700\u8981\u8fd9\u6bb5\u7a7a\u95f4\u7684\u6307\u9488\u662f\u5426\u5b58\u5728\uff0c\u82e5\u4e0d\u5b58\u5728\uff0c\u5219\u5b9a\u4e49\u4e00\u4e2a\u6307\u9488\u7528\u6765\u88ab\u8d4b\u503c\uff0c\u8fd8\u8981\u6e05\u695a\u8981\u8fd4\u56de\u4e00\u4e2a\u4ec0\u4e48\u7c7b\u578b\u7684\u6307\u9488\uff0c\u5206\u914d\u7684\u7a7a\u95f4\u662f\u5426\u5408\u7406\uff1b\u5982\u679c\u6307\u9488\u5df2\u7ecf\u5b58\u5728\uff0c\u90a3\u4e48\u5728\u91cd\u65b0\u5c06\u65b0\u7684\u7a7a\u95f4\u5934\u5730\u5740\u8d4b\u503c\u7ed9\u8fd9\u4e2a\u6307\u9488\u4e4b\u524d\uff0c\u8981\u5148\u5224\u65ad\u6307\u9488\u662f\u5426\u4e3aNULL\uff0c\u5982\u679c\u4e0d\u662f\u8981free\u4e00\u4e0b\uff0c\u5426\u5219\u539f\u6765\u7684\u7a7a\u95f4\u5c31\u4f1a\u88ab\u6d6a\u8d39\uff0c\u6216\u8005\u51fa\u9519\uff0cfree\u4e4b\u540e\u5c31\u6309\u7167\u524d\u4e00\u79cd\u60c5\u5f62\u8003\u8651\u5c31\u53ef\u4ee5\u4e86\u3002", "13\u3001realloc\u51fd\u6570\u5728\u4f7f\u7528\u4e0a\u8981\u6ce8\u610f\u4ec0\u4e48\u95ee\u9898\u3002", "\n\u8fd9\u4e2a\u51fd\u6570\u6211\u4e5f\u624d\u77e5\u9053\u7684\uff0c\u6c57\u4e00\u4e2a\u3002\u636e\u6211\u7684\u521d\u6b65\u7406\u89e3\uff0c\u8fd9\u4e2a\u51fd\u6570\u7684\u4f5c\u7528\u662f\u91cd\u65b0\u5206\u914d\u7a7a\u95f4\u5927\u5c0f\uff0c\u8fd4\u56de\u7684\u5934\u6307\u9488\u4e0d\u53d8\uff0c\u53ea\u662f\u6539\u53d8\u7a7a\u95f4\u5927\u5c0f\u3002\u65e2\u7136\u662f\u6539\u53d8\uff0c\u5c31\u6709\u53d8\u5927\u3001\u53d8\u5c0f\u548c\u4e3a\u4ec0\u4e48\u6539\u53d8\u7684\u95ee\u9898\u3002\u53d8\u5927\uff0c\u8981\u6ce8\u610f\u4e0d\u80fd\u5927\u5230\u5185\u5b58\u6ea2\u51fa\uff1b\u53d8\u5c0f\uff0c\u90a3\u53d8\u5c0f\u7684\u90a3\u90e8\u5206\u7a7a\u95f4\u4f1a\u88ab\u5f81\u7528\uff0c\u539f\u6709\u6570\u636e\u4e0d\u518d\u5b58\u5728\uff1b\u4e3a\u4ec0\u4e48\u6539\u53d8\uff0c\u5982\u679c\u662f\u60f3\u91cd\u65b0\u632a\u4f5c\u4ed6\u7528\uff0c\u8fd8\u662f\u5148free\u4e86\u5427\u3002", "14\u3001strtok\u51fd\u6570\u5728\u4f7f\u7528\u4e0a\u8981\u6ce8\u610f\u4ec0\u4e48\u95ee\u9898\u3002", "\n\u8fd9\u4e2a\u95ee\u9898\u6211\u4e0d\u77e5\u9053\u80fd\u4e0d\u80fd\u56de\u7b54\u5168\u9762\uff0c\u56e0\u4e3a\u5b9e\u5728\u662f\u7528\u7684\u5f88\u5c11\u3002\u8fd9\u4e2a\u51fd\u6570\u7684\u4f5c\u7528\u662f\u5206\u5272\u5b57\u7b26\u4e32\uff0c\u4f46\u662f\u8981\u5206\u5272\u7684\u5b57\u7b26\u4e32\u4e0d\u80fd\u662f\u5e38\u91cf\uff0c\u8fd9\u662f\u8981\u6ce8\u610f\u7684\u3002\u6bd4\u5982\u5148\u5b9a\u4e49\u4e00\u4e2a\u5b57\u7b26\u4e32\uff1achar array[]=\u201dpart1,part2\u2033;\uff0cstrtok\u7684\u539f\u5f62\u662fchar *strtok(char *string, char *delim);\uff0c\u6211\u4eec\u5c06\u201d,\u201d\u4f5c\u4e3a\u5206\u9694\u7b26\uff0c\u5148\u7528pt=strtok(array,\u201d,\u201d);\uff0c\u5f97\u5230\u7684\u7ed3\u679cprint\u51fa\u6765\u5c31\u662f\u201dpart1\u2033\uff0c\u90a3\u540e\u9762\u7684\u5462\uff0c\u8981\u5199\u6210pt=strtok(NULL,\u201d,\u201d);\uff0c\u6ce8\u610f\uff0c\u8981\u7528NULL\uff0c\u5982\u679c\u88ab\u5206\u5272\u7684\u5b57\u7b26\u4e32\u4f1a\u88ab\u5206\u6210N\u6bb5\uff0c\u90a3\u4ece\u7b2c\u4e8c\u6b21\u5f00\u59cb\u5c31\u4e00\u76f4\u8981\u7528NULL\u3002\u603b\u7ed3\u8d77\u6765\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff1a\u88ab\u5206\u5272\u7684\u5b57\u7b26\u4e32\u548c\u5206\u9694\u7b26\u90fd\u8981\u4f7f\u7528\u53d8\u91cf\uff1b\u9664\u7b2c\u4e00\u6b21\u4f7f\u7528\u6307\u5411\u5b57\u7b26\u4e32\u7684\u6307\u9488\u5916\uff0c\u4e4b\u540e\u7684\u90fd\u8981\u4f7f\u7528NULL\uff1b\u6ce8\u610f\u4f7f\u7528\u8fd9\u4e2a\u51fd\u6570\u7684\u65f6\u5019\u5343\u4e07\u522b\u628a\u6307\u9488\u8ddf\u4e22\u4e86\uff0c\u4e0d\u7136\u5c31\u5168\u4e71\u4e86\u3002", "15\u3001gets\u51fd\u6570\u5728\u4f7f\u7528\u4e0a\u8981\u6ce8\u610f\u4ec0\u4e48\u95ee\u9898\u3002", "\n\u8fd9\u662f\u4e00\u4e2a\u952e\u76d8\u8f93\u5165\u51fd\u6570\uff0c\u5c06\u8f93\u5165\u5b57\u7b26\u4e32\u7684\u5934\u5730\u5740\u8fd4\u56de\u3002\u8bf4\u5230\u8981\u6ce8\u610f\u7684\u95ee\u9898\uff0c\u6211\u8fd8\u662f\u5148\u67e5\u4e86\u4e00\u4e0b\u7f51\u4e0a\u7684\u4e00\u4e9b\u60c5\u51b5\uff0c\u9700\u8981\u6ce8\u610f\u7684\u5c31\u662fgets\u4ee5\u8f93\u5165\u56de\u8f66\u7ed3\u675f\uff0c\u8fd9\u4e2a\u5730\u7403\u4eba\u90fd\u77e5\u9053\uff0c\u4f46\u662f\u5f88\u591a\u4eba\u4e0d\u77e5\u9053\u7684\u662f\uff0c\u5f53\u4f60\u8f93\u5165\u5b8c\u4e00\u4e2a\u5b57\u7b26\u4e32\u540e\uff0c\u8fd9\u4e2a\u5b57\u7b26\u4e32\u53ef\u80fd\u4f9d\u7136\u5b58\u5728\u4e8e\u8fd9\u4e2a\u6807\u51c6\u8f93\u5165\u6d41\u4e4b\u4e2d\uff0c\u5f53\u518d\u6b21\u4f7f\u7528gets\u7684\u65f6\u5019\uff0c\u4e5f\u8bb8\u4f1a\u628a\u4e0a\u6b21\u8f93\u5165\u7684\u4e1c\u897f\u8bfb\u51fa\u6765\uff0c\u6240\u4ee5\u5e94\u8be5\u5728\u4f7f\u7528\u4e4b\u540e\u7528fflush(stdin);\u5904\u7406\u4e00\u4e0b\uff0c\u5c06\u8f93\u5165\u6d41\u6e05\u7a7a\u3002\u6700\u540e\u4e5f\u8fd8\u662f\u8981\u6ce8\u610f\u6ea2\u51fa\u7684\u95ee\u9898\u3002\u5173\u4e8e\u8fd9\u4e2a\u7b54\u6848\u6211\u6bd4\u8f83\u542b\u7cca\uff0c\u4e0d\u77e5\u9053\u6709\u6ca1\u6709\u9ad8\u4eba\u9ad8\u89c1\uff1f", "16\u3001C\u8bed\u8a00\u7684\u8bcd\u6cd5\u5206\u6790\u5728\u957f\u5ea6\u89c4\u5219\u65b9\u9762\u91c7\u7528\u7684\u662f\u4ec0\u4e48\u7b56\u7565\uff1f", "\n\u6211\u65e0\u8bed\u2026\u2026\u95fb\u6240\u672a\u95fb\u554a\u2026\u2026\u8fd8\u662f\u641c\u7d22\u4e86\u4e00\u4e0b\uff0c\u6709\u4e00\u7bc7\u6587\u7ae0\uff0c\u5730\u5740\u662f\uff1ahttp://202.117.80.9/jp2005/20/kcwz/wlkc/wlkc/03/3_5_2.htm\uff0c\u662f\u5173\u4e8e\u8bcd\u6cd5\u5206\u6790\u5668\u7684\u3002\u5176\u4e2d\u63d0\u5230\u4e86\u4e24\u70b9\u7b56\u7565\uff1a (1) \u6309\u6700\u957f\u5339\u914d\u539f\u5219\u786e\u5b9a\u88ab\u9009\u7684\u8bcd\u578b\uff1b(2) \u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u4e32\u80fd\u4e3a\u82e5\u5e72\u4e2a\u8bcd\u578b\u5339\u914d\uff0c\u5219\u6392\u5217\u5728\u6700\u524d\u9762\u7684\u8bcd\u578b\u88ab\u9009\u4e2d\u3002\u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u9898\u5e72\u7684\u8981\u6c42\uff0c\u8fd8\u662f\u5176\u4ed6\u4ec0\u4e48\u3002\u6211\u4e43\u4e00\u4ecb\u8349\u6c11\uff0c\u671b\u8fbe\u4eba\u6307\u70b9\u8ff7\u6d25\uff01", "17\u3001a+++++b\u6240\u8868\u793a\u7684\u662f\u4ec0\u4e48\u610f\u601d\uff1f\u6709\u4ec0\u4e48\u95ee\u9898\uff1f", "\n\u8fd9\u4e2a\u4e1c\u897f\uff08\u79f0\u4e4b\u4e3a\u4e1c\u897f\u4e00\u70b9\u90fd\u4e0d\u8fc7\u5206\uff09\u5176\u5b9e\u5e76\u6ca1\u6709\u8bed\u6cd5\u9519\u8bef\uff0c\u6309\u7167C\u5bf9\u8fd0\u7b97\u7b26\u7b49\u7ea7\u7684\u5212\u5206\uff0c++\u7684\u4f18\u5148\u7ea7\u5927\u4e8e+\uff0c\u90a3\u4e48\u8fd9\u53e5\u8bdd\u4f1a\u88ab\u7f16\u8bd1\u5668\u770b\u505a\uff1a(a++)+(++b)\uff0c\u8fd9\u56de\u660e\u767d\u4e86\u5427\u3002\u6709\u4ec0\u4e48\u95ee\u9898\uff0c\u8bed\u6cd5\u4e0a\u6ca1\u6709\u95ee\u9898\uff0c\u6709\u7684\u662f\u9053\u5fb7\u4e0a\u7684\u95ee\u9898\uff01\u4f5c\u4e3a\u4e00\u4e2a\u4f18\u79c0\u7684\u7a0b\u5e8f\u5458\uff0c\u6211\u4eec\u8981\u529b\u6c42\u8bed\u53e5\u7684\u5408\u6cd5\u6027\u548c\u53ef\u8bfb\u6027\uff0c\u5982\u679c\u5199\u8fd9\u53e5\u7684\u4eba\u662f\u5728\u4e00\u4e2ateam\u91cc\uff0c\u90a3\u4e48\u4ed6\u57fa\u672c\u4f1a\u88ab\u6253\u7684\u534a\u6b7b\u2026\u2026\u6700\u540e\u8ba8\u8bba\u4e00\u4e0b\u7ed3\u679c\uff1a\u5047\u8bbea\u4e4b\u524d\u7684\u503c\u662f3\uff0cb\u662f4\uff0c\u90a3\u4e48\u8fd0\u884c\u5b8c\u8fd9\u4e2a\u53d8\u6001\u8bed\u53e5\u540e\uff0ca\u7684\u503c\u662f4\uff0cb\u662f5\uff0c\u8bed\u53e5\u7684\u7ed3\u679c\u662f8\u3002", "18\u3001\u5982\u4f55\u5b9a\u4e49Bool\u53d8\u91cf\u7684TRUE\u548cFALSE\u7684\u503c\u3002", "\n\u4e0d\u77e5\u9053\u8fd9\u4e2a\u9898\u6709\u4ec0\u4e48\u9677\u9631\uff0c\u5199\u5230\u73b0\u5728\u795e\u7ecf\u5df2\u7ecf\u5927\u4e86\uff0c\u4e00\u822c\u6765\u8bf4\u5148\u8981\u628aTURE\u548cFALSE\u7ed9\u5b9a\u4e49\u4e86\uff0c\u4f7f\u7528#define\u5c31\u53ef\u4ee5\uff1a", "\n#define TURE 1", "\n#define FALSE 0", "\n\u5982\u679c\u6709\u4e00\u4e2a\u53d8\u91cf\u9700\u8981\u5b9a\u4e49\u6210bool\u578b\u7684\uff0c\u4e3e\u4e2a\u4f8b\u5b50\uff1abool a=TURE;\u5c31\u53ef\u4ee5\u4e86\u3002", "19\u3001C\u8bed\u8a00\u7684const\u7684\u542b\u4e49\u662f\u4ec0\u4e48\u3002\u5728\u5b9a\u4e49\u5e38\u91cf\u65f6\uff0c\u4e3a\u4ec0\u4e48\u63a8\u8350\u4f7f\u7528const\uff0c\u800c\u4e0d\u662f#define\u3002", "\n\u9996\u5148\uff0c\u8fd9\u4e2a\u9898\u5e72\u62bd\u4e8610\u9898\u56de\u7b54\u7684\u4e00\u4e2a\u5927\u5634\u5df4\u3002\u5173\u4e8e\u5e38\u91cf\u7684\u6982\u5ff5\u770b\u6765\u6211\u8981\u597d\u597d\u770b\u770b\u4e66\u4e86\u2026\u2026\u6211\u8bf4\u8fc7\u4e86\uff0cconst\u4fee\u9970\u8bcd\u53ef\u4ee5\u5c06\u4e00\u4e2a\u53d8\u91cf\u4fee\u9970\u4e3a\u201c\u53ea\u8bfb\u201d\uff0c\u8fd9\u4e2a\u5c31\u80fd\u79f0\u4e3a\u5e38\u91cf\u4e48\uff1f\u59d1\u4e14\u8ba4\u4e3a\u53ef\u4ee5\u3002\u56de\u5230\u9898\u76ee\u4e2d\uff0cconst\u662f\u53ea\u8bfb\u7684\u610f\u601d\uff0c\u5b83\u9650\u5b9a\u4e00\u4e2a\u53d8\u91cf\u4e0d\u5141\u8bb8\u88ab\u6539\u53d8\uff0c\u8c01\u90fd\u4e0d\u80fd\u6539\uff01\u65e2\u7136\u662f\u4fee\u9970\u53d8\u91cf\uff0c\u90a3\u4e48\u53d8\u91cf\u7684\u7c7b\u578b\u5c31\u53ef\u4ee5\u4e30\u5bcc\u591a\u5f69\uff0cint\u554a\uff0cchar\u554a\uff0c\u53ea\u8981C\u8ba4\u8bc6\u7684\u90fd\u53ef\u4ee5\uff1b\u4f46\u662f#define\u5c31\u4e0d\u53ef\u4ee5\u4e86\uff0c\u5728\u9884\u5904\u7406\u9636\u6bb5\u7f3a\u4e4f\u7c7b\u578b\u68c0\u6d4b\u673a\u5236\uff0c\u6709\u53ef\u80fd\u4f1a\u51fa\u9519\u3002\u8fd8\u6709\u5c31\u662f\u53d8\u91cf\u53ef\u4ee5extern\uff0c\u4f46\u662f#define\u5c31\u4e0d\u53ef\u4ee5\u3002\u8c8c\u4f3cconst\u8fd8\u53ef\u4ee5\u8282\u7701RAM\uff0c\u8fd9\u4e2a\u6211\u5012\u662f\u6ca1\u6709\u8003\u8bc1\u8fc7\u3002\u81f3\u4e8econst\u7684\u7528\u6cd5\u548c\u4f5c\u7528\uff0c\u6709\u5f88\u591a\uff0c\u6211\u4f1a\u603b\u7ed3\u540e\u53d1\u4e0a\u6765\u3002", "20\u3001C\u8bed\u8a00\u7684volatile\u7684\u542b\u4e49\u662f\u4ec0\u4e48\u3002\u4f7f\u7528\u65f6\u4f1a\u5bf9\u7f16\u8bd1\u5668\u6709\u4ec0\u4e48\u6697\u793a\u3002", "\n\u7ec8\u4e8e\u6700\u540e\u4e00\u9898\u4e86\uff0c\u5bb9\u6613\u4e48\u2026\u2026\u5982\u679c\u8fd9\u4e2a\u6d4b\u8bd5\u662f\u4e00\u4e2a\u5173\u4e8e\u5d4c\u5165\u5f0f\u7684\uff0c\u90a3\u4e48\u8fd9\u9053\u9898\u975e\u5e38\u91cd\u8981\uff01\uff01\u4ece\u8bcd\u9762\u4e0a\u8bb2\uff0cvolatile\u7684\u610f\u601d\u662f\u6613\u53d8\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0c\u6709\u4e00\u4e9b\u53d8\u91cf\u53ef\u80fd\u4f1a\u88ab\u83ab\u540d\u5176\u5999\u7684\u6539\u53d8\uff0c\u800c\u4f18\u5316\u5668\u4e3a\u4e86\u8282\u7ea6\u65f6\u95f4\uff0c\u6709\u65f6\u5019\u4e0d\u4f1a\u91cd\u8bfb\u8fd9\u4e2a\u53d8\u91cf\u7684\u771f\u5b9e\u503c\uff0c\u800c\u662f\u53bb\u8bfb\u5728\u5bc4\u5b58\u5668\u7684\u5907\u4efd\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u8fd9\u4e2a\u53d8\u91cf\u7684\u771f\u5b9e\u503c\u53cd\u800c\u88ab\u4f18\u5316\u5668\u7ed9\u201c\u4f18\u5316\u201d\u6389\u4e86\uff0c\u7528\u65f6\u9ae6\u7684\u8bcd\u8bf4\u5c31\u662f\u88ab\u201c\u548c\u8c10\u201d\u4e86\u3002\u5982\u679c\u4f7f\u7528\u4e86\u8fd9\u4e2a\u4fee\u9970\u8bcd\uff0c\u5c31\u662f\u901a\u77e5\u7f16\u8bd1\u5668\u522b\u72af\u61d2\uff0c\u8001\u8001\u5b9e\u5b9e\u53bb\u91cd\u65b0\u8bfb\u4e00\u904d\uff01\u53ef\u80fd\u6211\u8bf4\u7684\u592a\u201c\u901a\u4fd7\u201d\u4e86\uff0c\u90a3\u4e48\u6211\u5f15\u7528\u4e00\u4e0b\u201c\u5927\u5e08\u201d\u7684\u6807\u51c6\u89e3\u91ca\uff1a", "\nvolatile\u7684\u672c\u610f\u662f\u201c\u6613\u53d8\u7684\u201d \u3002", "\n\u7531\u4e8e\u8bbf\u95ee\u5bc4\u5b58\u5668\u7684\u901f\u5ea6\u8981\u5feb\u8fc7RAM,\u6240\u4ee5\u7f16\u8bd1\u5668\u4e00\u822c\u90fd\u4f1a\u4f5c\u51cf\u5c11\u5b58\u53d6\u5916\u90e8RAM\u7684\u4f18\u5316\uff0c\u4f46\u6709\u53ef\u80fd\u4f1a\u8bfb\u810f\u6570\u636e\u3002\u5f53\u8981\u6c42\u4f7f\u7528volatile \u58f0\u660e\u7684\u53d8\u91cf\u7684\u503c\u7684\u65f6\u5019\uff0c\u7cfb\u7edf\u603b\u662f\u91cd\u65b0\u4ece\u5b83\u6240\u5728\u7684\u5185\u5b58\u8bfb\u53d6\u6570\u636e\uff0c\u5373\u4f7f\u5b83\u524d\u9762\u7684\u6307\u4ee4\u521a\u521a\u4ece\u8be5\u5904\u8bfb\u53d6\u8fc7\u6570\u636e\u3002\u800c\u4e14\u8bfb\u53d6\u7684\u6570\u636e\u7acb\u523b\u88ab\u4fdd\u5b58\u3002", "\n\u7cbe\u786e\u5730\u8bf4\u5c31\u662f\uff0c\u4f18\u5316\u5668\u5728\u7528\u5230\u8fd9\u4e2a\u53d8\u91cf\u65f6\u5fc5\u987b\u6bcf\u6b21\u90fd\u5c0f\u5fc3\u5730\u91cd\u65b0\u8bfb\u53d6\u8fd9\u4e2a\u53d8\u91cf\u7684\u503c\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u4fdd\u5b58\u5728\u5bc4\u5b58\u5668\u91cc\u7684\u5907\u4efd\u3002", "\n\u4e0b\u9762\u662fvolatile\u53d8\u91cf\u7684\u51e0\u4e2a\u4f8b\u5b50\uff1a", "\n1). \u5e76\u884c\u8bbe\u5907\u7684\u786c\u4ef6\u5bc4\u5b58\u5668\uff08\u5982\uff1a\u72b6\u6001\u5bc4\u5b58\u5668\uff09", "\n2). \u4e00\u4e2a\u4e2d\u65ad\u670d\u52a1\u5b50\u7a0b\u5e8f\u4e2d\u4f1a\u8bbf\u95ee\u5230\u7684\u975e\u81ea\u52a8\u53d8\u91cf(Non-automatic variables)", "\n3). \u591a\u7ebf\u7a0b\u5e94\u7528\u4e2d\u88ab\u51e0\u4e2a\u4efb\u52a1\u5171\u4eab\u7684\u53d8\u91cf", "\n\u5d4c\u5165\u5f0f\u7cfb\u7edf\u7a0b\u5e8f\u5458\u7ecf\u5e38\u540c\u786c\u4ef6\u3001\u4e2d\u65ad\u3001RTOS\u7b49\u7b49\u6253\u4ea4\u9053\uff0c\u6240\u7528\u8fd9\u4e9b\u90fd\u8981\u6c42volatile\u53d8\u91cf\u3002\u4e0d\u61c2\u5f97volatile\u5185\u5bb9\u5c06\u4f1a\u5e26\u6765\u707e\u96be\u3002"], "title": "C\u8bed\u8a00\u7b14\u8bd5\u96c6"},
{"contents": ["1\u3002\u7f16\u5199\u4e00\u4e2a C \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5728\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u627e\u5230\u53ef\u80fd\u7684\u6700\u957f\u7684\u5b50\u5b57\u7b26\u4e32\uff0c\u4e14\u8be5\u5b57\u7b26\u4e32\u662f\u7531\u540c\u4e00\u5b57\u7b26\u7ec4\u6210\u7684\u3002", "\nchar * search(char *cpSource, char ch)", "\n{", "\n         char *cpTemp=NULL, *cpDest=NULL;", "\n         int iTemp, iCount=0;", "\n         while(*cpSource)", "\n         {", "\n                 if(*cpSource == ch)", "\n                 {", "\n                          iTemp = 0;", "\n                          cpTemp = cpSource;", "\n                          while(*cpSource == ch)", "\n++iTemp, ++cpSource;", "\n                          if(iTemp > iCount)", "\niCount = iTemp, cpDest = cpTemp;", "\n        if(!*cpSource)", "\nbreak;", "\n                 }", "\n                 ++cpSource;", "\n }", "\n return cpDest;", "\n}", "\n2\u3002\u8bf7\u7f16\u5199\u4e00\u4e2a C \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5728\u7ed9\u5b9a\u7684\u5185\u5b58\u533a\u57df\u641c\u7d22\u7ed9\u5b9a\u7684\u5b57\u7b26\uff0c\u5e76\u8fd4\u56de\u8be5\u5b57\u7b26\u6240\u5728\u4f4d\u7f6e\u7d22\u5f15\u503c\u3002", "\nint search(char *cpSource, int n, char ch)", "\n{", "\n         int i;", "\n         for(i=0; i", "\n         return i;", "\n}", "\n\u4e00\u4e2a\u5355\u5411\u94fe\u8868\uff0c\u4e0d\u77e5\u9053\u5934\u8282\u70b9,\u4e00\u4e2a\u6307\u9488\u6307\u5411\u5176\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\uff0c\u95ee\u5982\u4f55\u5220\u9664\u8fd9\u4e2a\u6307\u9488\u6307\u5411\u7684\u8282\u70b9\uff1f", "\n\u5c06\u8fd9\u4e2a\u6307\u9488\u6307\u5411\u7684next\u8282\u70b9\u503ccopy\u5230\u672c\u8282\u70b9\uff0c\u5c06next\u6307\u5411next->next,\u5e76\u968f\u540e\u5220\u9664\u539fnext\u6307\u5411\u7684\u8282\u70b9\u3002", "#include ", "2.\u5199\u4e00\u51fd\u6570\uff0c\u5b9e\u73b0\u5220\u9664\u5b57\u7b26\u4e32str1\u4e2d\u542b\u6709\u7684\u5b57\u7b26\u4e32str2.", "\n\u7b2c\u4e8c\u4e2a\u5c31\u662f\u5229\u7528\u4e00\u4e2aKMP\u5339\u914d\u7b97\u6cd5\u627e\u5230str2\u7136\u540e\u5220\u9664\uff08\u7528\u94fe\u8868\u5b9e\u73b0\u7684\u8bdd\uff0c\u4fbf\u6377\u4e8e\u6570\u7ec4\uff09", "/*\u96c5\u864e\u7b14\u8bd5\u9898(\u5b57\u7b26\u4e32\u64cd\u4f5c)", "\n\u7ed9\u5b9a\u5b57\u7b26\u4e32A\u548cB,\u8f93\u51faA\u548cB\u4e2d\u7684\u6700\u5927\u516c\u5171\u5b50\u4e32\u3002", "\n\u6bd4\u5982A=\u201daocdfe\u201d B=\u201dpmcdfa\u201d \u5219\u8f93\u51fa\u201dcdf\u201d", "\n*/", "\n//Author: azhen", "\n#include", "main()", "\n{", "\nchar *str1=malloc(256);", "\nchar *str2=malloc(256);", "\nchar *comman=NULL;", "\ngets(str1);", "\ngets(str2);", "\nif(strlen(str1)>strlen(str2))                         //\u5c06\u77ed\u7684\u5b57\u7b26\u4e32\u653e\u524d\u9762", "\ncomman=commanstring(str2, str1);", "\nelse", "\ncomman=commanstring(str1, str2);", "\nprintf(\u201cthe longest comman string is: %s\\n\u201d, comman);", "\n}", "11.\u5199\u4e00\u4e2a\u51fd\u6570\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32str1\u548cstr2\u7684\u5927\u5c0f\uff0c\u82e5\u76f8\u7b49\u8fd4\u56de0\uff0c\u82e5str1\u5927\u4e8e", "\nstr2\u8fd4\u56de1\uff0c\u82e5str1\u5c0f\u4e8estr2\u8fd4\u56de\uff0d1", "\nint strcmp ( const char * src,const char * dst)", "\n{", "\n        int ret = 0 ;", "\n        while( ! (ret = *(unsigned char *)src \u2013 *(unsigned char *)dst) && *dst)", "\n{", "\n                ++src;", "\n++dst;", "\n}", "\n        if ( ret \n                ret = -1 ;", "\n        else if ( ret > 0 )", "\n                ret = 1 ;", "\n        return( ret );", "\n}", "3,\u6c421000\uff01\u7684\u672a\u5c3e\u6709\u51e0\u4e2a0\uff08\u7528\u7d20\u6570\u76f8\u4e58\u7684\u65b9\u6cd5\u6765\u505a\uff0c\u598272=2*2*2*3*3\uff09;", "\n\u6c42\u51fa1->1000\u91cc,\u80fd\u88ab5\u6574\u9664\u7684\u6570\u7684\u4e2a\u6570n1,\u80fd\u88ab25\u6574\u9664\u7684\u6570\u7684\u4e2a\u6570n2,\u80fd\u88ab125\u6574\u9664\u7684\u6570\u7684\u4e2a\u6570n3,", "\n\u80fd\u88ab625\u6574\u9664\u7684\u6570\u7684\u4e2a\u6570n4.", "\n1000!\u672b\u5c3e\u7684\u96f6\u7684\u4e2a\u6570=n1+n2+n3+n4;", "\n#include"], "title": "C\u8bed\u8a00\u9762\u8bd5\u9898"},
{"contents": ["\u5199\u4e00\u4e2aSQL\u5b58\u50a8\u8fc7\u7a0b\uff0c\u5efa\u7acb\u4e00\u4e2a\u8868USER \u5b57\u6bb5\u662f\u59d3\u540d\uff0c\u5e74\u9f84\uff0c\u804c\u4f4d\uff0c\u6743\u9650\uff0c\u7136\u540e\u5411\u91cc\u9762\u63d2\u51656\u6761\u6570\u636e\uff0c\u7136\u540e\u67e5\u8be2\u51fa\u5e74\u9f84\u5927\u4e8e18\u7684\u6240\u6709\u4fe1\u606f\u3002", "\u7528C\u8bed\u8a00\u5199\u4e2a\u51fd\u6570\uff0c\u5b8c\u6210\u53bb\u6389\u5b57\u7b26\u4e32\u5de6\u8fb9\u7684\u7a7a\u683c\uff0c\u628a\u53f3\u8fb9\u7684\u7a7a\u683c\u75280\u586b\u5145\u3002\u8c03\u7528\u4e4b\uff0c\u7136\u540e\u6253\u5370\u51fa\u6765\u3002", "\u7528VB\u5199\u51fa\u548c\u6570\u636e\u5e93\u8fde\u63a5\u7684\u8fc7\u7a0b\u3002"], "title": "\u5357\u4eac-\u65b9\u7acb\u6570\u7801"},
{"contents": ["\u4e00\u3001\u9009\u62e9\u9898", "\n1.\t\u4e0b\u5217\u9009\u9879\u4e2d\uff0c\uff08\uff09\u662f\u5f15\u7528\u7c7b\u578b\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)enum\u7c7b\u578b", "\nb)struct\u7c7b\u578b", "\nc)string\u7c7b\u578b", "\nd)int\u7c7b\u578b", "2.\t\u4ee5\u4e0b\u63cf\u8ff0\u9519\u8bef\u7684\u662f\uff08\uff09\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\u5728C++\u4e2d\u652f\u6301\u62bd\u8c61\u7c7b\u800c\u5728C#\u4e2d\u4e0d\u652f\u6301\u62bd\u8c61\u7c7b\u3002", "\nb)C++\u4e2d\u53ef\u5728\u5934\u6587\u4ef6\u4e2d\u58f0\u660e\u7c7b\u7684\u6210\u5458\u800c\u5728CPP\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7c7b\u7684\u6210\u5458\uff0c\u5728    C#\u4e2d\u6ca1\u6709\u5934\u6587\u4ef6\u5e76\u4e14\u5728\u540c\u4e00\u5904\u58f0\u660e\u548c\u5b9a\u4e49\u7c7b\u7684\u6210\u5458\u3002", "\nc)\u5728C#\u4e2d\u53ef\u4f7f\u7528 new \u4fee\u9970\u7b26\u663e\u5f0f\u9690\u85cf\u4ece\u57fa\u7c7b\u7ee7\u627f\u7684\u6210\u5458\u3002", "\nd)\u5728C#\u4e2d\u8981\u5728\u6d3e\u751f\u7c7b\u4e2d\u91cd\u65b0\u5b9a\u4e49\u57fa\u7c7b\u7684\u865a\u51fd\u6570\u5fc5\u987b\u5728\u524d\u9762\u52a0Override\u3002", "3.\tC#\u7684\u6570\u636e\u7c7b\u578b\u6709\uff08\uff09\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\u503c\u7c7b\u578b\u548c\u8c03\u7528\u7c7b\u578b\uff1b", "\nb)\u503c\u7c7b\u578b\u548c\u5f15\u7528\u7c7b\u578b\uff1b", "\nc)\u5f15\u7528\u7c7b\u578b\u548c\u5173\u7cfb\u7c7b\u578b\uff1b", "\nd)\u5173\u7cfb\u7c7b\u578b\u548c\u8c03\u7528\u7c7b\u578b\uff1b", "4.\t\u4e0b\u5217\u6709\u5173.NET\u7c7b\u7684\u63cf\u8ff0\u9519\u8bef\u7684\u662f\uff08\uff09\uff08\u9009\u62e9\u4e09\u9879\uff09", "\na)\u7c7b\u4e0d\u53ef\u4ee5\u591a\u5c42\u7ee7\u627f\u800c\u63a5\u53e3\u53ef\u4ee5\uff1b", "\nb)\u62bd\u8c61\u7c7b\u81ea\u8eab\u53ef\u4ee5\u5b9a\u4e49\u6210\u5458\u800c\u63a5\u53e3\u4e0d\u53ef\u4ee5\uff1b", "\nc)\u62bd\u8c61\u7c7b\u548c\u63a5\u53e3\u90fd\u4e0d\u80fd\u88ab\u5b9e\u4f8b\u5316\uff1b", "\nd)\u4e00\u4e2a\u7c7b\u53ef\u4ee5\u6709\u591a\u4e2a\u57fa\u7c7b\u548c\u591a\u4e2a\u57fa\u63a5\u53e3\uff1b", "5.\t\u4e0b\u5217\u5173\u4e8e.NET\u6784\u9020\u51fd\u6570\u7684\u63cf\u8ff0\u6b63\u786e\u7684\u662f\uff08\uff09\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u58f0\u660e\u8fd4\u56de\u7c7b\u578b\u3002", "\nb)\u6784\u9020\u51fd\u6570\u4e0d\u53ef\u4ee5\u7528private\u4fee\u9970", "\nc)\u6784\u9020\u51fd\u6570\u5fc5\u987b\u4e0e\u7c7b\u540d\u76f8\u540c", "\nd)\u6784\u9020\u51fd\u6570\u4e0d\u80fd\u5e26\u53c2\u6570", "6.\t\u4ee5\u4e0b\u662f\u4e00\u4e9bC#\u4e2d\u7684\u679a\u4e3e\u578b\u7684\u5b9a\u4e49\uff0c\u5176\u4e2d\u9519\u8bef\u7684\u7528\u6cd5\u6709\uff08\uff09\uff08\u9009\u62e9\u4e00\u9879\uff09", "a)public enum var1{ Mike = 100, Nike = 102, Jike }", "\nb)public enum var1{ Mike = 100, Nike, Jike }", "\nc)public enum var1{ Mike=-1.23 , Nike, Jike }      \u679a\u4e3e\u578b\u5e94\u4e3a\u6574\u578b\u7684", "\nd)public enum var1{ Mike , Nike , Jike }", "7.\t\u4e0b\u5217\u4ee3\u7801\u6267\u884c\u7ed3\u679c\u662f\uff08\uff09\uff08\u9009\u62e9\u4e00\u9879\uff09", "\npublic static void Main(string[] args)", "\n{", "\nint i = 2000;", "\nobject o = i;", "\ni = 2001;", "\nint j =(int) o;", "\nConsole.WriteLine(\u201ci={0},o={1}, j={2}\u201d,i,o,j);", "\n}", "\na) i=2001,o=2000,j=2000", "\nb) i=2001,o=2001,,j=2001", "\nc) i=2000,o=2001,,j=2000", "\nd) i=2001,o=2000,j=2001", "\n8.\t\u4e0b\u5217\u5173\u4e8eC#\u4e2d\u7d22\u5f15\u5668\u7406\u89e3\u6b63\u786e\u7684\u662f( ) \uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\u7d22\u5f15\u5668\u7684\u53c2\u6570\u5fc5\u987b\u662f\u4e24\u4e2a\u6216\u4e24\u4e2a\u4ee5\u4e0a", "\nb)\u7d22\u5f15\u5668\u7684\u53c2\u6570\u7c7b\u578b\u5fc5\u987b\u662f\u6574\u6570\u578b", "\nc)\u7d22\u5f15\u5668\u6ca1\u6709\u540d\u5b57", "\nd)\u4ee5\u4e0a\u7686\u975e", "9.\t\u8981\u5bf9\u591a\u7ebf\u7a0b\u8fdb\u884c\u64cd\u4f5c\u5219\u5fc5\u987b\u5305\u542b( ) \uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)System.ComponentModel\u547d\u540d\u7a7a\u95f4\uff1b", "\nb)System. Collections\u547d\u540d\u7a7a\u95f4\uff1b", "\nc)System. Threading\u547d\u540d\u7a7a\u95f4\uff1b", "\nd)Microsoft.Win32\u547d\u540d\u7a7a\u95f4\uff1b", "10.", "\n\u4ee5\u4e0b\u8bf4\u6cd5\u6b63\u786e\u7684\u662f\uff08\uff09\uff08\u9009\u62e9\u4e00\u9879\uff09", "\n\u2460\u6267\u884c\u8be5\u7a0b\u5e8f\u53d1\u751f\u5f02\u5e38", "\n\u2461catch\u5757\u6267\u884c", "\n\u2462finally\u5757\u6267\u884c", "\n\u2463catch\u5757\u4e0d\u6267\u884c", "\na) \u2460\u2462\u2463", "\nb) \u2460\u2462", "\nc) \u2460\u2461\u2462", "\nd) \u2462\u2463", "11)\u5728C#\u4e2d\uff0c\u5141\u8bb8\u591a\u63a5\u53e3\u7ee7\u627f\uff0c\u4ece\u591a\u4e2a\u63a5\u53e3\u7ee7\u627f\u65f6\uff0c\u4f7f\u7528\u201c\uff1a\u201d\u540e\u8ddf\u88ab\u7ee7\u627f\u7684\u63a5\u53e3\u7684\u540d\u5b57\uff0c\u591a\u4e2a\u63a5\u53e3\u540d\u79f0\u4e4b\u95f4\u4f7f\u7528\uff08\uff09\u7b26\u53f7\u8fdb\u884c\u5206\u5272\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na\uff09\u201c.\u201d", "\nb\uff09\u201c\uff0c\u201d", "\nc)\u201c-\u3009\u201d", "\nd\uff09\u201c\uff1a\uff1a\u201d", "12)\t\u6709C#\u4ee3\u7801\u5982\u4e0b\uff1a", "\u5728\u6a2a\u7ebf\u5904\u586b\u5165\u8bed\u53e5\uff08\uff09\uff0c\u8f93\u51fa\u4e3a\uff1aC# is simple\u3002\uff08\u9009\u62e9\u4e24\u9879\uff09", "\na)\tConsole.PrintLine(\u201cC# is simple\u201d)", "\nb)\tConsole.WriteLine(\u201cC# is simple\u201d)", "\nc)\tSystem.Console.WriteLine(\u201cC# is simple\u201d)", "13)\t\u9605\u8bfb\u4e0b\u5217\u7a0b\u5e8f", "\u5728myClass\u7684Main\uff08\uff09\u51fd\u6570\u4e2d\uff0c\u6709\u4ee3\u7801\u5982\u4e0b\uff1amethod1( );\u4ee3\u7801\u6267\u884c\u540e\uff0c", "\n\u8f93\u51fa\u4e3a\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\t3", "\nb)\t0", "\nc)\t\u975e\u6cd5\u7684\u65b9\u6cd5\u8c03\u7528\uff0c\u6ca1\u6709\u8f93\u51fa", "14)\tC#\u4e2d\uff0c\u58f0\u660e\u4e00\u4e2a\u5e26\u53c2\u6570\u7684Main\u65b9\u6cd5\uff0c\u4ee3\u7801\u4e3a\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\tpublic static void Main()", "\nb)\tpublic static void Main(String[])", "\nc)\tpublic static void Main(String[] args)", "\nd)\tpublic static void Main(String * args)", "15)\t\u8981\u5c06\u4e00\u4e2aC#\u7a0b\u5e8f\u7f16\u8bd1\u4e3a\u6269\u5c55\u540d\u4e3aDLL\u7684\u7a0b\u5e8f\u5e93\u5e94\u7528\u7a0b\u5e8f\uff0c\u8981\u6253\u5f00\u7684\u7f16\u8bd1\u5668\u9009\u9879\u4e3a\uff08\uff09\u3002\uff08\u9009\u62e9\u4e24\u9879\uff09", "\na) /target\uff1alibrary", "\nb) /t: library", "\nc) /t: exe", "\nd) /target: winexe", "16)\t\u5728C#\u7a0b\u5e8f\u4e2d\uff0c\u5982\u679c\u7c7bB\u8981\u7ee7\u627fA\uff0c\u7c7bB\u6b63\u786e\u7684\u5b9a\u4e49\u4e3a\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na) public class B inheritA", "\nb) public class B:A", "\nc) public classB::A", "\nd) public class B form A", "17)\u4e0b\u5217\u8bf4\u6cd5\u6b63\u786e\u7684\u662f\uff08\uff09(\u9009\u62e9\u4e00\u9879)", "\n\u2460c#\u662f\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u8bed\u8a00", "\n\u2461\u88c5\u7bb1\u662f\u4ece\u503c\u7c7b\u578b\u5230\u5f15\u7528\u7c7b\u578b\u7684\u8f6c\u6362", "\n\u2462cla(\u516c\u5171\u8bed\u8a00\u89c4\u8303)\u662fcts\u7684\u5b50\u96c6\uff0c\u786e\u4fdd\u4e86\u8de8\u8bed\u8a00\u4e92\u64cd\u4f5c", "\n\u2463.NET\u5e73\u53f0\u4f7f\u7528\u7edf\u4e00\u7684API", "\na)\t\u4ee5\u4e0a\u90fd\u6b63\u786e", "\nb)\t\u2463\u6b63\u786e", "\nc) \u2460\u2462\u2463\u6b63\u786e", "\nd) \u2460\u2461\u2462\u6b63\u786e", "18)\u4e0b\u5217\u8bf4\u6cd5\u6b63\u786e\u7684\u662f\uff08\uff09\uff08\u9009\u62e9\u4e24\u9879\uff09", "\na)\t\u5728c#\u4e2d\u4f7f\u7528\u5173\u952e\u5b57static\u5b9a\u4e49\u9759\u6001\u6210\u5458", "\nb)\t\u9759\u6001\u6210\u5458\u4e0d\u4e0e\u4efb\u4f55\u7279\u5b9a\u5bf9\u8c61\u76f8\u5173\u8054", "\nc)\t\u53d8\u91cf\u540d\u547d\u540d\u4e3a@\u5173\u952e\u5b57\u662f\u4e0d\u5408\u6cd5\u7684", "19)\u4e0b\u5217\u8bf4\u6cd5\u6b63\u786e\u7684\u662f\uff08\uff09\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\tc#\u652f\u6301for\u3001foreach\u3001while\u548cdo-while\u5faa\u73af\u8bed\u53e5", "\nb)\tc#\u53ea\u652f\u6301for\u3001while\u548cdo-while\u5faa\u73af\u8bed\u53e5", "\nc)\tc#\u652f\u6301foreach\u3001while\u548cdo-while\u5faa\u73af\u8bed\u53e5", "\nd)\tc#\u652f\u6301for\u3001foreach\u3001\u548cwhile\u5faa\u73af\u8bed\u53e5", "20)\u53ef\u7528\u4e8e\u5728\u63a7\u5236\u53f0\u663e\u793a\u6587\u672c\u7684\u65b9\u6cd5\u662f\uff08\uff09\uff08\u9009\u62e9\u4e24\u9879\uff09", "\na)\tSystem.Console.Read\u65b9\u6cd5", "\nb)\tSystem.Console.ReadLine\u65b9\u6cd5", "\nc)\tSystem.Console.Write\u65b9\u6cd5", "\nd)\tSystem.Console.WriteLine\u65b9\u6cd5", "21)\u4e0b\u5217\u8bf4\u6cd5\u9519\u8bef\u7684\u662f\uff08\uff09\uff08\u9009\u62e9\u4e24\u9879\uff09", "\na).NET\u63d0\u4f9b\u591a\u8bed\u8a00\u652f\u6301", "\nb).NET\u5e94\u7528\u7a0b\u5e8f\u4e0d\u9700\u8981CLR\u7684\u7ba1\u7406\u5373\u53ef\u6267\u884c", "\nc).NET\u5e94\u7528\u7a0b\u5e8f\u8981\u7ecf\u8fc7\u4e24\u6b21\u7f16\u8bd1\u65b9\u53ef\u6267\u884c", "\nd)IL\u662f\u673a\u5668\u7801", "22)\u5728c#\u4e2d\u5bc6\u5c01\u7c7b\uff08\uff09\uff08\u9009\u62e9\u4e24\u9879\uff09", "\na)\t\u7528final\u6307\u5b9a", "\nb)\t\u7528\u5bf9\u6307\u5b9a", "\nc)\t\u53ef\u4ee5\u88ab\u7ee7\u627f", "\nd)\t\u4e0d\u53ef\u4ee5\u88ab\u7ee7\u627f", "23\uff09\u4e0b\u5217\u6709\u5173\u4e8b\u4ef6\u7684\u8bf4\u6cd5\u6b63\u786e\u7684\u662f\uff08\uff09\uff08\u9009\u62e9\u4e00\u9879\uff09", "\n\u2460\u5b9a\u4e49\u4e8b\u4ef6\u65f6\u9996\u5148\u5b9a\u4e49\u59d4\u6258", "\n\u2461\u53ef\u4ee5\u8ba9\u591a\u4e2a\u5bf9\u8c61\u9884\u8ba2\u4e8b\u4ef6", "\n\u2462\u5f15\u53d1\u4e8b\u4ef6\u65f6\uff0c\u5c06\u8c03\u7528\u6240\u6709\u9884\u8ba2\u4e86\u8be5\u4e8b\u4ef6\u7684\u5bf9\u8c61\u7684\u59d4\u6258", "\na) \u2460\u2461\u2462", "\nb) \u2460", "\nc) \u2461\u2462", "24)\uff08\uff09\u5173\u952e\u5b57\u7528\u4e8e\u521b\u5efa\u62bd\u8c61\u7c7b\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\tinterface", "\nb)\tinternal", "\nc)\tusing", "\nd)\tabstract", "25)\u5728.NET\u4e2d\uff0c\u4ee5\u4e0b\u5173\u4e8e\u547d\u540d\u7a7a\u95f4\u7684\u63cf\u8ff0\uff0c\u6b63\u786e\u7684\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na\uff09\t\u547d\u540d\u7a7a\u95f4\u4e0d\u53ef\u4ee5\u8fdb\u884c\u5d4c\u5957", "\nb\uff09\t\u5728\u4e00\u4e2a.cs\u6587\u4ef6\u4e2d\uff0c\u53ea\u80fd\u5b58\u5728\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4", "\nc\uff09\t\u7528using\u5bfc\u5165\u547d\u540d\u7a7a\u95f4", "26)\u5728.NET\u4e2d\uff0c\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\u53ef\u4ee5\u5212\u5206\u4e3a\u4ee5\u4e0b\u4e09\u7c7b\uff0c\u9664\u4e86\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na) \u903b\u8f91\u9519\u8bef", "\nb) \u8bed\u4e49\u9519\u8bef", "\nc) \u8bed\u6cd5\u9519\u8bef", "\nd) \u89c4\u683c\u9519\u8bef", "27)\u4e0b\u5217\u8bf4\u6cd5\u4e2d\u6b63\u786e\u7684\u662f\uff08\uff09\uff08\u9009\u62e9\u4e00\u9879\uff09", "\n\u2460\u4f7f\u7528.NET\u57fa\u7c7b\u5e93\u53ef\u4ee5\u8bfb\u53d6\u6587\u672c\u6587\u4ef6", "\n\u2461\u4f7f\u7528.NET\u57fa\u7c7b\u5e93\u53ef\u4ee5\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6\u6570\u636e\u548c\u5c06\u6570\u636e\u5199\u5165\u5185\u5b58\u4e2d", "\n\u2462System.IO\u547d\u540d\u7a7a\u95f4\u5305\u542b\u7528\u4e8e\u5728\u6570\u636e\u6d41\u548c\u6587\u4ef6\u4e2d\u8bfb\u53d6\u548c\u5199\u5165\u6570\u636e\u7684\u7c7b", "\n\u2463\u4f7f\u7528.NET\u57fa\u7c7b\u5e93\u53ef\u4ee5\u8bfb\u53d6\u4e8c\u8fdb\u5236\u6587\u4ef6", "\na) \u2460\u2461\u2462", "\nb) \u2460\u2461\u2462\u2463", "\nc) \u2462\u2463", "\nd) \u2460\u2461", "28)\u53ea\u8bfb\u5c5e\u6027\u901a\u8fc7\uff08\uff09\u5173\u952e\u5b57\u6765\u8bbe\u7f6e\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\tGet       \u5f97\u5230", "\nb)\treadonly", "\nc)\tset                 \u8bbe\u7f6e", "\nd)\tthis", "29)\u4e0b\u5217\u8bf4\u6cd5\u6b63\u786e\u7684\u662f\uff08\uff09\uff08\u9009\u62e9\u4e24\u9879\uff09", "\na)\tc#\u64cd\u4f5c\u7b26\u91cd\u8f7d\u4e0d\u4f7f\u7528\u4efb\u4f55\u5173\u952e\u5b57\u5373\u53ef\u5b8c\u6210", "\nb)\tnamespace\u8868\u793a\u547d\u540d\u7a7a\u95f4", "\nc)\t\u4f7f\u7528internal\u4fee\u9970\u7684\u6210\u5458\u4ec5\u53ef\u4ee5\u4ece\u58f0\u660e\u5b83\u7684\u7a0b\u5e8f\u96c6\u5185\u90e8\u8bbf\u95ee", "\nd) \u547d\u540d\u7a7a\u95f4\u4e0d\u53ef\u4ee5\u5d4c\u5957", "30)c#\u7684\u6570\u7ec4\u5c5e\u4e8e\u5f15\u7528\u7c7b\u578b\uff0c\u5176\u6b63\u786e\u4f7f\u7528\u65b9\u6cd5\u662f\uff08\uff09(\u9009\u62e9\u4e24\u9879)", "\na)\tstring [] str = new string [6];", "\nb)\tstring str[] = new string [6];", "\nc)\tint [] array = {1,2,3,4,5};               \u62ec\u53f7\u5728\u53d8\u91cf\u4e4b\u524d", "31)\u4e0b\u5217\u6709\u5173\u547d\u540d\u7a7a\u95f4\u548c\u7a0b\u5e8f\u96c6\u7684\u8bf4\u6cd5\u6b63\u786e\u7684\u662f\uff08\uff09\uff08\u9009\u62e9\u4e00\u9879\uff09", "\n\u2460\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\u53ef\u4ee5\u5206\u5e03\u5728\u591a\u4e2a\u7a0b\u5e8f\u96c6\u4e2d", "\n\u2461\u4e00\u4e2a\u7a0b\u5e8f\u96c6\u4e2d\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u547d\u540d\u7a7a\u95f4", "\n\u2462\u7a0b\u5e8f\u96c6\u7684\u7c7b\u578b\u5305\u542b\u79c1\u6709\u7a0b\u5e8f\u96c6\u548c\u5171\u4eab\u7a0b\u5e8f\u96c6", "\n\u2463.NET\u4f7f\u7528\u7a0b\u5e8f\u96c6\u7684\u6a21\u5f0f\u5171\u4eab\u548c\u91cd\u7528\u4ee3\u7801", "\na) \u2461\u2462", "\nb) \u2460\u2461\u2462", "\nc) \u2460\u2461", "\nd) \u2460\u2461\u2462\u2463", "32)\u4e0b\u5217\u8bf4\u6cd5\u662f\u5426\u5168\u90e8\u6b63\u786e\uff08\uff09\uff08\u9009\u62e9\u4e00\u9879\uff09", "\n\u2460\u591a\u6001\u53ef\u4ee5\u901a\u8fc7\u865a\u65b9\u6cd5\u3001\u62bd\u8c61\u57fa\u7c7b\u548c\u63a5\u53e3\u7684\u6280\u672f\u6765\u5b9e\u73b0", "\n\u2461\u591a\u6001\u662f\u6307\u540c\u4e00\u64cd\u4f5c\u7528\u4e8e\u4e0d\u540c\u7684\u7c7b\u7684\u5b9e\u4f8b\uff0c\u4e0d\u540c\u7684\u7c7b\u5c06\u8fdb\u884c\u4e0d\u540c\u7684\u89e3\u91ca\uff0c\u6700\u540e\u4ea7\u751f\u4e0d\u540c\u7684\u6267\u884c\u7ed3\u679c", "\n\u2462\u865a\u65b9\u6cd5\u5728\u57fa\u7c7b\u4e2d\u7528virtual\u6765\u4fee\u9970\uff0c\u5728\u6d3e\u751f\u7c7b\u4e2d\u4f7f\u7528override\u6765\u4fee\u9970\u65b9\u6cd5\u91cd\u5199\u57fa\u7c7b\u7684\u865a\u65b9\u6cd5", "\n\u2463\u4e00\u4e2a\u63a5\u53e3\u53ef\u4ee5\u4ece\u5176\u4ed6\u63a5\u53e3\u7ee7\u627f", "\na)\t\u662f", "\nb)\t\u5426", "33)c#\u7684\u6784\u9020\u51fd\u6570\uff0c\u63cf\u8ff0\u9519\u8bef\u7684\u662f\uff08\uff09\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\t\u652f\u6301\u5b9e\u4f8b\u6784\u9020\u548c\u9759\u6001\u6784\u9020", "\nb)\t\u53ef\u4ee5\u91cd\u8f7d", "\nc)\t\u548c\u7c7b\u540c\u540d", "\nd)\t\u9759\u6001\u6784\u9020\u53ef\u4ee5\u5e26\u6709\u53c2\u6570", "34)\u6709\u5173\u7ed3\u6784\u7684\u8bf4\u6cd5\uff0c\u9519\u8bef\u7684\u662f\uff08\uff09\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\t\u4f7f\u7528struct\u5173\u952e\u5b57", "\nb)\t\u53ef\u4ee5\u5305\u542b\u6570\u636e\u6210\u5458\u548c\u51fd\u6570\u6210\u5458", "\nc)\t\u652f\u6301\u7ee7\u627f         \u7ed3\u6784\u4e0d\u80fd\u7ee7\u627f", "\nd)\t\u662f\u503c\u7c7b\u578b\u5e76\u4e14\u4e0d\u9700\u8981\u5806\u5206\u914d", "1.\u5206\u6790\u5982\u4e0b\u6240\u793aC#\u4ee3\u7801\uff0c\u7f16\u8bd1\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff08  \uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\npublic static void Main(string[] args)", "\n{", "\n\tint param = 2;", "\n\tstring position = \u201c\u201d;", "\n\tswitch (param)", "\n\t{", "\n\t\tcase 1:", "\n\t\t\tposition = \u201c\u5144\u957f\u201d;", "\n\t\t\tbreak;", "\n\t\tcase 2:", "\n\t\t\tposition = \u201c\u5144\u5f1f\u201d;", "\n\t\t\tbreak;", "\n\t}", "\n\tConsole.WriteLine(position);", "\n}", "\n  a)  \u5144\u957f", "\n  b)  \u5144\u5f1f", "\n  c)  \u5c0f\u59b9", "\nd)  \u5144\u957f\u5144\u5f1f", "2.\u73b0\u6709\u5982\u4e0b\u4e00\u6bb5C#\u4ee3\u7801\uff0c\u8be5\u4ee3\u7801\u7684\u8fd0\u884c\u7ed3\u679c\u662f\uff08  \uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\n  public static void Main\uff08\uff09{", "\n     for (int i=1;i\n         switch(i){", "\n              case 1:", "\n                 Console.Write(i.ToString());", "\n                 break;", "\n              default:", "\n                 Console.Write((i*3).ToString());", "\n         }", "\n}", "\n}", "\n  a)  169", "\n  b)  \u6709\u7f16\u8bd1\u9519\u8bef                 \u6ca1\u6709break!!!", "\n  c)  369", "\n  d)  123", "3.\u770b\u4ee5\u4e0b\u4e00\u6bb5\u7a0b\u5e8f\uff1a", "\nConsole.Write(\"hello world !\");", "\nConsole.WriteLine(\"friend.\");", "\nint i=0;", "\ndo", "\n{", "\n\tConsole.Write(\"thank you !\");", "\n\ti++;", "\n}while(i\n\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff08  \uff09\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\thello world ! friend thank you !thank you !", "\nb)\thello world ! friend", "\nthank you !thank you!                       Writeline \u4ee3\u8868\u80fd\u6362\u884c", "\nc)\thello world ! friend. thank you ! thank you !", "\nd)\thello world !", "\nfriend. thank you !", "4. using System;", "\n   class Test{", "\n      static void Main(String [] args){", "\nint a=10,b=20\uff0cc=30;", "\n if(a>b||b>c)", "\n   Console.WriteLine(a);", "\n     else if(a", "\n        Console.WriteLine(b+c);", "\n     else", "\n       Console.WriteLine(c);", "\n}", "\n}", "\n  a)  10", "\n  b)  20", "\n  c)  50", "\n  d)  60", "5. \u4ee5\u4e0bC#\u7a0b\u5e8f\uff1a", "\nstatic void Main(string[] args)", "\n{", "\n\tint val = 1;", "\n\tfor (int i=3;i\n\t{", "\n\t\tConsole.WriteLine(i);", "\n\t}", "\n}", "\n\u8fd0\u884c\u65f6\u5c06\u8f93\u51fa\uff08  \uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\n  a)  3", "\n5", "\n7", "\n9", "\n  b)  5", "\n7", "\n9", "\n  c)  5", "\n7", "\n9", "\n11", "\n  d)  9", "6. \u5206\u6790\u4e0b\u9762\u7684\u4ee3\u7801\u7247\u6bb5\uff0c\u6b63\u786e\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff08  \uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\n    int i=0;", "\n    for(;i\n      Console.Write(i+\u201d,\u201d);", "\n    }", "\n    Console.Write (i);", "\na)  0,2", "\nb)  0,2,4", "\nc)  0,2,4,6", "\nd)  0,1,2,3", "7. \u7ed9\u5b9a\u5982\u4e0bC#\u4ee3\u7801\u7247\u6bb5\uff0c\u7f16\u8bd1\u8fd0\u884c\u7ed3\u679c\u662f\uff08  \uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\nint i = 0, j = -1;", "\nswitch (i){", "\n   case 0,1: j=1;", "\n   case 2: j=2;", "\n}", "\nConsole.Write (\u201cj=\u201d+j);", "\n  a)  \u7a0b\u5e8f\u7f16\u8bd1\u51fa\u9519", "\n  b)  \u8f93\u51fa\uff1aj=1", "\n  c)   \u8f93\u51fa\uff1aj=2", "\n  d)  \u8f93\u51fa\uff1aj=0", "8. \u5728C#\u4e2d\uff0c\u4e0b\u5217\u4ee3\u7801\u7684\u8fd0\u884c\u7ed3\u679c\u662f\uff08  \uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\n    using System;", "\n    class Test{", "\n       static void Main(string[] args){", "\n           int a=21,b=22,c=23;", "\n           if (a>b\u2016b>c)", "\n              Console.WriteLine(++b);", "\n           else", "\n              Console.WriteLine(a+b+c);", "\n}", "\n}", "\n  a)  22", "\n  b)  23", "\n  c)  66", "\n  d)  \u7f16\u8bd1\u51fa\u9519", "9. \u4ee5\u4e0b\u5173\u4e8eC#\u4ee3\u7801\u7684\u8bf4\u6cd5\u6b63\u786e\u7684\u662f\uff08  \uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\nfor(int i=1;i\n{", "\n    switch(i)", "\n    {", "\n         case 1:", "\n             Console.Write(i.ToString();", "\n         case 2:", "\n             Console.Write((i*2).ToString();", "\n         case 3:", "\n             Console.Write((i*3).ToString()", "\n}", "\n}", "\n  a)  \u6709\u7f16\u8bd1\u9519\u8bef\uff0c\u63d0\u793acase\u6807\u7b7e\u4e0d\u80fd\u8d2f\u7a7f\u5230\u53e6\u4e00\u4e2a\u6807\u7b7e\uff0c\u4e0d\u80fd\u8fd0\u884c                    \u6ca1\u6709\u5199Break!!!!", "\n  b)  \u8f93\u51fa149", "\n  c)  \u8f93\u51fa123246369", "\n  d)  \u6b63\u786e\u8fd0\u884c\uff0c\u4f46\u6ca1\u6709\u8f93\u51fa", "10. \u9488\u5bf9\u4ee5\u4e0b\u7684C#\u4ee3\u7801:", "\nusing System;", "\nclass A", "\n{", "\n\tstatic void Main()", "\n\t{", "\n\t\tint[] B = new int[10];", "\n\t\tfor(int I=1;I\n\t\t{", "\n   \t\t\t//\u7a7a\u767d\u5904", "\n\t\t}", "\n\t\tforeach (int C in B)", "\n\t\t{", "\n   \t\t\tConsole.WriteLine (C);", "\n\t\t}", "\n\t}", "\n}", "\n\u8981\u5728\u63a7\u5236\u53f0\u8f93\u51fa1\u523010\u7684\u6570\u5b57\uff0c\u7a7a\u767d\u5904\u5e94\u586b\u5199\u7684\u6b63\u786e\u7684\u4ee3\u7801\u4e3a\uff08  \uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\n  a)  B[I]=I+1;", "\n  b)  B[I]=I;", "\n  c)  B[I-1]=I;", "\nd)  B[I+1]=I;", "11.\u5728C#\u4e2d\uff0c\u4e0b\u5217\u4ee3\u7801\u7684\u8fd0\u884c\u7ed3\u679c\u662f\uff08  \uff09\uff08\u9009\u62e9\u4e00\u9879\uff09", "\nint a=30,b=20;", "\nb=a;", "\na=10;", "\nConlose.WriteLine(a);", "\nConlose.WriteLine(b);", "\na)  10", "\n10", "\nb)  10", "\n30", "\nc)  30", "\n20", "\nd)  10", "\n20", "12.\u4e0b\u5217\u8bed\u53e5\u6267\u884c\u540e\uff0c\u53d8\u91cfi\u7684\u503c\u4e3a\u591a\u5c11\uff1f\uff08  \uff09\uff08\u9009\u62e9\u4e00\u9879\uff09", "\nstring str = @\u201d\"\u201dAhoy\u201d\",cried the caption. \u201c;", "\nstring str2 = \u201c\\\u201dAhoy\\\u201d,cried the caption. \u201c;", "\nint I = string.Compare(str,str2);", "\n  a)  false", "\n  b)  -1", "\n  c)  1", "\n d)  0", "\n13.\u5728VS.Net\u5f00\u53d1\u73af\u5883\u4e2d\uff0c\u4e3a\u7a0b\u5e8f\u4ee3\u7801\u589e\u52a0\u65ad\u70b9\uff0c\u5feb\u6377\u952e\u4e3a\uff08  \uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\n  a)  F2", "\n  b)  F5", "\n  c)  F8", "\n  d)  F9", "\n14.\u5728ADO.NET\u4e2d\uff0c\uff08  \uff09\u5bf9\u8c61\u7684\u7ed3\u6784\u7c7b\u4f3c\u4e8e\u5173\u7cfb\u6570\u636e\u5e93\u7684\u7ed3\u6784\uff0c\u5e76\u5728\u4e0e\u6570\u636e\u5e93\u65ad\u5f00\u7684\u60c5\u51b5\u4e0b\uff0c\u5728\u7f13\u5b58\u4e2d\u5b58\u50a8\u6570\u636e\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\n  a)  DataAdapter       \u52a0\u8f7d\u6570\u636e\u6e90", "\n  b)  DataSet           \u91cd\u8f7d", "\n  c)  DataTable", "\n  d)  DataReader        \u8bfb\u53d6\u673a\u5236", "15. \u4e0b\u9762\u5173\u4e8e\u6570\u636e\u5e93\u64cd\u4f5c\u7684\u4ee3\u7801\uff0c\u9519\u8bef\u7684\u662f\uff08  \uff09\uff08\u9009\u62e9\u4e24\u9879\uff09", "\n  a)  SqlConnection conn = new SqlConnection();", "\n\t\tSqlCommand comm = new SqlCommand();", "\n\t\tcomm.ExecuteNonQuery();", "\n  b)  SqlConnection conn = new SqlConnection(\u201cserver=.;uid=sa;pwd=sa;database=db1\u201d);", "\n\t\tconn.Open();", "\n\t\tSqlCommand comm = new SqlCommand(\u201cdelete * from table1\u201d, conn);", "\n\t\tcomm.ExecuteNonQuery();", "\n\t\tconn.Close()", "\n  c)  SqlConnection conn = new SqlConnection(\u201cserver=.,uid=sa,pwd=sa,database=db1\u201d);", "\n\t\tconn.Open();", "\n\t\tSqlCommand comm = new SqlCommand(\u201cdelete * from table1\u201d);", "\n\t\tcomm.ExecuteNonQuery();", "\n\t\tconn.Close();", "\n  d)  SqlConnection conn = new SqlConnection(\u201cserver=.;uid=sa;pwd=sa;database=db1\u201d);", "\n\t\tconn.Open();", "\n\t\tSqlCommand comm = new SqlCommand(\u201cdelete * from table1\u201d, conn);", "\n\t\tcomm.ExecuteNonQuery();", "16.\u8fd0\u884c\u4e0b\u9762\u4e00\u6bb5\u4ee3\u7801\uff1a", "\nclass Class1", "\n{", "\n\tpublic static int count = 0;", "\n\tstatic Class1()", "\n\t{", "\n\t\tcount++;", "\n\t}", "\n\tpublic Class1()", "\n\t{", "\n\t\tcount++;", "\n\t}", "\n}", "\nClass1 o1 = new Class1();", "\nClass1 o2 = new Class1();", "\n\u8bf7\u95ee\uff0co1.count\u7684\u503c\u662f\u591a\u5c11\uff1f\uff08  \uff09\uff08\u9009\u62e9\u4e00\u9879\uff09", "\n  a)  1", "\n  b)  2", "\n  c)  3", "\n  d)  4", "17.\u5728C#\u4e2d\uff0c\u4e0b\u5217\u4ee3\u7801\u7684\u8fd0\u884c\u7ed3\u679c\u662f\uff08  \uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\nclass A{", "\n    public void printStr(string str){", "\n        Console.WriteLine(str);", "\n    }", "\n}", "\nclass B:A{", "\n    new public void printStr(string str){", "\n        str=str+\u201d(override)\u201d;", "\n        Console.WriteLine(str);", "\n    }", "\npublic static void Mail(string[] args){", "\n\tA a=new A();", "\nB b=new B();", "\na.printStr(\u201ctest\u201d);", "\n\tb.printStr(\u201ctest\u201d);", "\n}", "\n}", "\n  a)  test", "\ntest(override)", "\n  b)  test(override)", "\n  c)  test", "\n  d)  test(override)", "\ntest(override)", "\n18.\u5206\u6790\u4ee5\u4e0bC#\u4ee3\u7801\uff0c\u6839\u636e\u9762\u5411\u5bf9\u8c61\u7684\u591a\u6001\u6027\uff0c\u4ee3\u7801\u7684\u8fd0\u884c\u7ed3\u679c\u662f\uff08  \uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\nclass A{", "\n    public void F(){", "\n        Console.Write(\u201cA\u201d);", "\n}", "\n\u65b9\u6cd5\u91cd\u8f7d", "\n    public void F(string chr){", "\n        Console.Write(chr);", "\n    }", "\n}", "\nclass B:A{", "\n    public void F(){", "\n        Console.Write(\u201cB\u201d);", "\n}", "\n}", "\npublic class Test{", "\npublic static void Main(string[] args){", "\n\t\tA a = new B();", "\n\t\ta.F();", "\n}", "\n}", "\n  a)  B", "\n  b)  A", "\n  c)  AB", "\n  d)  BA", "\u4e8c\u3001\u5224\u65ad\u9898:", "\n( \u9519)\u5728C#\u4e2d\uff0c\u7d22\u5f15\u5668\u662f\u4e13\u95e8\u7528\u6765\u8bbf\u95ee\u5bf9\u8c61\u4e2d\u7684\u6570\u7ec4\u4fe1\u606f\u7684\u3002", "\n( \u5bf9)\u5728C#\u4e2d\uff0c\u63a5\u53e3\u53ef\u4ee5\u88ab\u591a\u91cd\u7ee7\u627f\u800c\u7c7b\u4e0d\u80fd\u3002", "\n( \u5bf9)\u5f02\u5e38\u7c7b\u5bf9\u8c61\u5747\u4e3aSystem\uff0eException\u7c7b\u7684\u5bf9\u8c61\u3002", "\n(\u5bf9)\u58f0\u660e\u59d4\u6258\u5b9e\u9645\u4e0a\u662f\u58f0\u660e\u4e86\u4e00\u4e2a\u65b9\u6cd5\u3002", "\n(\u5bf9)\u4efb\u4f55\u4e8b\u7269\u90fd\u662f\u5bf9\u8c61\u3002", "\u4e09\u3001\u95ee\u7b54", "\n1\u3001this\u5173\u952e\u5b57\u6709\u4ec0\u4e48\u4f5c\u7528\uff0c\u8bf7\u63cf\u8ff0", "\n2\u3001\u8bf7\u53d9\u8ff0const\u4e0ereadonly\u4fee\u9970\u5f97\u7c7b\u6210\u5458\u7684\u533a\u522b\u3002", "\n\u4e00\u4e2a\u662f\u5e38\u91cf\uff0c\u4e00\u4e2a\u662f\u53d8\u91cf", "\n3\u3001\u6839\u636e\u4e8b\u4ef6(event)\u7684\u77e5\u8bc6\uff0c\u8bf7\u5199\u51fa\u5b8c\u6574\u7684\u8fd0\u7528\u4e8b\u4ef6\uff0c\u5e76\u89e6\u53d1\u4e8b\u4ef6\u7684\u7a0b\u5e8f\u3002", "\n P74"], "title": "C\u8bed\u8a00\u5f00\u53d1\u5de5\u7a0b\u5e08\u6d4b\u8bd5\u9898"},
{"contents": ["1.\u4e00\u7fa4\u4eba\u56f4\u6210\u4e00\u5708\uff0c123\u7684\u62a5\u6570\uff0c\u62a53\u8005\u51fa\u5217\uff0c\u6c42\u6700\u540e\u4e00\u4e2a\u4eba\u3002", "\n2.\u5229\u7528\u94fe\u8868\u5b9e\u73b0\u5c06\u4e24\u4e2a\u6709\u5e8f\u961f\u5217A\u548cB\u5408\u5e76\u5230\u6709\u5e8f\u961f\u5217H\u4e2d\uff0c\u4e0d\u51c6\u589e\u52a0\u5176\u4ed6\u7a7a\u95f4\u3002", "\n\u8bf7\u63d0\u4f9b\u5168\u4e00\u70b9\u7684\u7a0b\u5e8f", "\u7b2c\u4e00\u9898\uff1a ", "// kickout.cpp : Defines the entry point for the console application.", "\n//", "#include \u201cstdafx.h\u201d", "\n#include \u201cmalloc.h\u201d", "\n#include \u201cstdio.h\u201d", "int main()", "\n{", "\nint m,n;", "\nint kickouts = 0;", "\nint *p = NULL;", "\nint i ,j;", "\ni=j=0;", "\nprintf(\u201cPlease input m,n:\u201d);", "\nscanf(\u201c%d,%d\u201d,&m,&n);", "while(n\n{", "\nprintf(\"n doen't less 0 , retry n:\");", "\nscanf(\"%d\",&n);", "\n}", "p=(int*)malloc(m*sizeof(int));", "\nfor(i=0;i", "\np[i]=1;", "\ni = 0;", "\nwhile(1)", "\n{", "\ni = i%m;", "\nif(p[i++]) j++;", "\nif(j == n)", "\n{", "\np[i-1]=0;", "\nj = 0;", "\nkickouts++;", "\n}", "\nif(kickouts == m-1)", "\nbreak;", "\n}", "\nfor(i = 0;i", "\nif(p[i]) printf(\"%d\\n\",i+1);", "\nreturn 0;", "\n}", "2\u3001\u5347\u5e8f\u8fd8\u662f\u964d\u5e8f\uff1f", "\n\u4ee5\u5347\u5e8f\u4e3a\u4f8b\uff1a", "\nwhile(a != NULL && b!= NULL)", "\n{", "\nif (a->data data)", "\n{", "\nh->data = a->data;", "\na = a->next;", "\n}", "\nelse if (a->data == b->data)", "\n{", "\nh->data = a->data;", "\na = a->next;", "\nb = b->next;", "\n}", "\nelse", "\n{", "\nh->data = b->data;", "\nb = b->next", "\n}", "\nh = h->next;", "\n}", "\nif (a == NULL)", "\n{", "\nwhile (b != NULL)", "\n{", "\nh->data = b->data;", "\nh = h->next;", "\nb = b->next;", "\n}", "\n}", "\nelse", "\n{", "\nwhile(a != NULL)", "\n{", "\nh->data = a->next;", "\nh = h->next;", "\na = a->next;", "\n}", "\n}"], "title": "c/c++\u67d0\u5927\u516c\u53f8\u7684\u4e24\u9053\u7b14\u8bd5\u9898(\u542b\u53c2\u8003\u7b54\u6848 )"},
{"contents": ["1\u3001C\u8bed\u8a00\u7a0b\u5e8f\u7684\u57fa\u672c\u5355\u4f4d\u662f____ A) \u7a0b\u5e8f\u884c B) \u8bed\u53e5 C) \u51fd\u6570 D) \u5b57\u7b26\u3001C\u30011", "\n2\u3001C\u8bed\u8a00\u7a0b\u5e8f\u7684\u4e09\u79cd\u57fa\u672c\u7ed3\u6784\u662f____ A\u3001\u987a\u5e8f\u7ed3\u6784\uff0c\u9009\u62e9\u7ed3\u6784\uff0c\u5faa\u73af\u7ed3\u6784 B\u3001\u9012\u5f52\u7ed3\u6784\uff0c\u5faa\u73af\u7ed3\u6784\uff0c\u8f6c\u79fb\u7ed3\u6784 C\u3001\u5d4c\u5957\u7ed3\u6784\uff0c\u9012\u5f52\u7ed3\u6784\uff0c\u987a\u5e8f\u7ed3\u6784 D\u3001\u5faa\u73af\u7ed3\u6784\uff0c\u8f6c\u79fb\u7ed3\u6784\uff0c\u987a\u5e8f\u7ed3\u6784\u3001A\u30011", "\n3\u3001C\u8bed\u8a00\u89c4\u5b9a\uff0c\u7a0b\u5e8f\u4e2d\u5404\u51fd\u6570\u4e4b\u95f4 A) \u65e2\u5141\u8bb8\u76f4\u63a5\u9012\u5f52\u8c03\u7528\u4e5f\u5141\u8bb8\u95f4\u63a5\u9012\u5f52\u8c03\u7528 B) \u4e0d\u5141\u8bb8\u76f4\u63a5\u9012\u5f52\u8c03\u7528\u4e5f\u4e0d\u5141\u8bb8\u95f4\u63a5\u9012\u5f52\u8c03\u7528 C) \u5141\u8bb8\u76f4\u63a5\u9012\u5f52\u8c03\u7528\u4e0d\u5141\u8bb8\u95f4\u63a5\u9012\u5f52\u8c03\u7528 D) \u4e0d\u5141\u8bb8\u76f4\u63a5\u9012\u5f52\u8c03\u7528\u5141\u8bb8\u95f4\u63a5\u9012\u5f52\u8c03\u7528\u3001A\u30011", "\n4\u3001C\u8bed\u8a00\u4e2d\u53ef\u5904\u7406\u7684\u6587\u4ef6\u7c7b\u578b\u662f\uff08 \uff09 A) \u6587\u672c\u6587\u4ef6\u548c\u6570\u636e\u6587\u4ef6 B)\u6587\u672c\u6587\u4ef6\u548c\u4e8c\u8fdb\u5236\u6587\u4ef6 C) \u6570\u636e\u6587\u4ef6\u548c\u4e8c\u8fdb\u5236\u6587\u4ef6 D)\u6570\u636e\u4ee3\u7801\u6587\u4ef6\u3001B\u30011", "\n5\u3001C\u8bed\u8a00\u53ef\u6267\u884c\u7a0b\u5e8f\u7684\u5f00\u59cb\u6267\u884c\u70b9\u662f\uff08 \uff09 A) \u7a0b\u5e8f\u4e2d\u7b2c\u4e00\u6761\u53ef\u6267\u884c\u8bed\u53e5 B) \u7a0b\u5e8f\u4e2d\u7b2c\u4e00\u4e2a\u51fd\u6570 C) \u7a0b\u5e8f\u4e2d\u7684main\u51fd\u6570 D) \u5305\u542b\u6587\u4ef6\u4e2d\u7684\u7b2c\u4e00\u4e2a\u51fd\u6570\u3001C\u30011", "\n6\u3001C\u8bed\u8a00\u63d0\u4f9b\u7684\u5408\u6cd5\u7684\u6570\u636e\u7c7b\u578b\u5173\u952e\u5b57\u662f A)double B) short C) integer D) char\u3001B\u30011", "\n7\u3001C\u8bed\u8a00\u4e2d,\u8fd0\u7b97\u5bf9\u8c61\u5fc5\u987b\u662f\u6574\u578b\u6570\u7684\u8fd0\u7b97\u7b26\u662f A) % B) \\ C) %\u548c\\ D) * *\u3001A\u30011", "\n8\u3001C\u8bed\u8a00\u4e2d\u51fd\u6570\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u662f\u7531\uff08 \uff09\u51b3\u5b9a\u3002 A) return\u8bed\u53e5\u4e2d\u7684\u8868\u8fbe\u5f0f\u7c7b\u578b B) \u8c03\u7528\u51fd\u6570\u7684\u4e3b\u8c03\u51fd\u6570\u7c7b\u578b C) \u8c03\u7528\u51fd\u6570\u65f6\u4e34\u65f6 D) \u5b9a\u4e49\u51fd\u6570\u65f6\u6240\u6307\u5b9a\u7684\u51fd\u6570\u7c7b\u578b\u3001D\u30011", "\n9\u3001C\u8bed\u8a00\u4e2d\u6570\u7ec4\u540d\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u51fd\u6570\uff0c\u4f5c\u4e3a\u5b9e\u5728\u53c2\u6570\u7684\u6570\u7ec4\u540d\u88ab\u5904\u7406\u4e3a_____\u3002 A\u3001 \u8be5\u6570\u7ec4\u7684\u957f\u5ea6\u3002 B\u3001 \u8be5\u6570\u7ec4\u7684\u5143\u7d20\u4e2a\u6570\u3002 C\u3001 \u8be5\u6570\u7ec4\u4e2d\u5404\u5143\u7d20\u7684\u503c\u3002 D\u3001 \u8be5\u6570\u7ec4\u7684\u9996\u5730\u5740\u3002\u3001D\u30011", "\n10\u3001C\u8bed\u8a00\u4e2d\u6570\u7ec4\u4e0b\u6807\u7684\u4e0b\u9650\u662f________\u3002 A\u30011 B\u30010 C\u3001\u89c6\u5177\u4f53\u60c5\u51b5 D\u3001\u65e0\u56fa\u5b9a\u4e0b\u9650\u3001B\u30011", "\n11\u3001C\u8bed\u8a00\u4e2d\u63d0\u4f9b\u7684\u5408\u6cd5\u5173\u952e\u5b57\u662f____ A\u3001swith B\u3001cher C\u3001case D\u3001default\u3001D\u30011", "\n12\u3001C\u8bed\u8a00\u4e2d\u6587\u4ef6\u7684\u5b58\u53d6\u65b9\u5f0f\u662f________\u3002 A\u3001\u987a\u5e8f\u5b58\u53d6 B\u3001\u968f\u673a\u5b58\u53d6 C\u3001\u987a\u5e8f\u5b58\u53d6\u3001\u968f\u673a\u5b58\u53d6\u5747\u53ef D\u3001\u987a\u5e8f\u5b58\u53d6\u3001\u968f\u673a\u5b58\u53d6\u5747\u4e0d\u53ef\u3001C\u30011", "\n13\u3001C\u8bed\u8a00\u4e2d\u6700\u7b80\u5355\u7684\u6570\u636e\u7c7b\u578b\u5305\u62ec A) \u6574\u578b\u3001\u5b9e\u578b\u3001\u903b\u8f91\u578b B) \u6574\u578b\u3001\u5b9e\u578b\u3001\u5b57\u7b26\u578b C) \u6574\u578b\u3001\u5b57\u7b26\u578b\u3001\u903b\u8f91\u578b D) \u6574\u578b\u3001\u5b9e\u578b\u3001\u903b\u8f91\u578b\u3001\u5b57\u7b26\u578b\u3001B\u30011", "\n14\u3001sizeof(float)\u662f\uff08 \uff09 A) \u4e00\u79cd\u51fd\u6570\u8c03\u7528 B) \u4e00\u4e2a\u4e0d\u5408\u6cd5\u7684\u8868\u793a\u5f62\u5f0f C) \u4e00\u4e2a\u6574\u578b\u8868\u8fbe\u5f0f D) \u4e00\u4e2a\u6d6e\u70b9\u8868\u8fbe\u5f0f\u3001C\u30011", "\n15\u3001x\u3001y\u3001z\u88ab\u5b9a\u4e49\u4e3aint\u578b\u53d8\u91cf\uff0c\u82e5\u4ece\u952e\u76d8\u7ed9x\u3001y\u3001z\u8f93\u5165\u6570\u636e\uff0c\u6b63\u786e\u7684\u8f93\u5165\u8bed\u53e5\u662f A) input x,y,z; B) scanf(\u201c%d%d%d\u201d,&x,&y,&z); C) scanf(\u201c%d%d%d\u201d,x,y,z); D) read(\u201c%d%d%d\u201d,&x,&y,&z);\u3001B\u30011", "\n16\u3001\u8868\u8fbe\u5f0f:10!=9\u7684\u503c\u662f A) true B) \u975e\u96f6\u503c C) 0 D) 1\u3001D\u30011", "\n17\u3001\u8868\u793a\u5173\u7cfbx\n18\u3001\u7a0b\u5e8f\u7247\u6bb5\uff1a\u5728TC20\u4e2d, int i=65536; printf(\"%d\",i);\u7684\u8f93\u51fa\u7ed3\u679c\u662f____ A) 65536 B) 0 C) \u6709\u8bed\u6cd5\u9519\u8bef\uff0c\u65e0\u8f93\u51fa\u7ed3\u679c D) -1\u3001B\u30011", "\n19\u3001\u5f53\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u5b9e\u53c2\u662f\u4e00\u4e2a\u6570\u7ec4\u540d\uff0c\u5219\u5411\u51fd\u6570\u4f20\u9001\u7684\u662f____ A) \u6570\u7ec4\u7684\u957f\u5ea6 B) \u6570\u7ec4\u7684\u9996\u5730\u5740 C) \u6570\u7ec4\u6bcf\u4e00\u4e2a\u5143\u7d20\u7684\u5730\u5740 D) \u6570\u7ec4\u6bcf\u4e2a\u5143\u7d20\u4e2d\u7684\u503c\u3001B\u30011", "\n20\u3001\u5bf9\u5d4c\u5957\u5b50\u7a0b\u5e8f\u8c03\u7528\u8bf4\u6cd5\u6b63\u786e\u7684\u662f____\u3002 A\u3001 \u5916\u5c42\u5b50\u7a0b\u5e8f\u53ef\u4ee5\u8c03\u7528\u6240\u6709\u7684\u5185\u5c42\u5b50\u7a0b\u5e8f B\u3001 \u5185\u5c42\u4e86\u7a0b\u5e8f\u53ea\u53ef\u4ee5\u8c03\u7528\u5305\u542b\u672c\u8eab\u7684\u5916\u5c42\u5b50\u7a0b\u5e8f\uff0c\u4e0d\u53ef\u4ee5\u9694\u5c42\u8c03\u7528 C\u3001 \u5916\u5206\u7a0b\u5e8f\u5fc5\u987b\u80fd\u5b8c\u5168\u5957\u4f4f\u5185\u5206\u7a0b\u5e8f D\u3001 \u4ee5\u4e0a\u8bf4\u6cd5\u5747\u4e0d\u6b63\u786e\u3001C\u30011", "\n21\u3001\u5bf9\u4e8e\u57fa\u7c7b\u578b\u76f8\u540c\u7684\u4e24\u4e2a\u6307\u9488\u53d8\u91cf\u4e4b\u95f4\uff0c\u4e0d\u80fd\u8fdb\u884c\u7684\u8fd0\u7b97\u662f A) \n22\u3001\u5408\u6cd5\u7684C\u8bed\u8a00\u4e2d\uff0c\u5408\u6cd5\u7684\u957f\u6574\u578b\u5e38\u6570\u662f A) '\\t' B) \"A\" C) 65 D) A\u3001A\u30011", "\n23\u3001\u5047\u5b9aint\u7c7b\u578b\u53d8\u91cf\u5360\u7528\u4e24\u4e2a\u5b57\u8282\uff0c\u5176\u6709\u5b9a\u4e49\uff1aint x[10]={0,2,4};\uff0c\u5219\u6570\u7ec4x\u5728\u5185\u5b58\u4e2d\u6240\u5360\u5b57\u8282\u6570\u662f A) 3 B) 6 C) 10 D) 20\u3001D\u30011", "\n24\u3001\u5047\u5b9a\u6709\u4ee5\u4e0b\u53d8\u91cf\u5b9a\u4e49: int k=7 ,x=12; \u5219\u80fd\u4f7f\u503c\u4e3a3\u7684\u8868\u8fbe\u5f0f\u662f A x%=(k%=5) B x%=(k-k%5) C x%=k-k%5 D (x%=k)-(k%=5)\u3001D\u30011", "\n25\u3001\u8bf7\u8bfb\u7a0b\u5e8f\u7247\u6bb5(\u5b57\u7b26\u4e32\u5185\u6ca1\u6709\u7a7a\u683c): printf(\"%d\",strlen(\"ATS012\\1\\\\\"));\u7684\u8f93\u51fa\u7ed3\u679c\u662f A) 11 B) 10 C) 9 D) 8 \u3001C\u30011", "\n26\u3001\u8bf7\u9009\u51fa\u5408\u6cd5\u7684C\u8bed\u8a00\u8d4b\u503c\u8bed\u53e5 A) a=b=58 B) i++; C) a=58,b=58 D) k=int(a+b);\u3001B\u30011", "\n27\u3001\u82e5a\u4e3aint\u7c7b\u578b\uff0c\u4e14\u5176\u503c\u4e3a3\uff0c\u5219\u6267\u884c\u5b8c\u8868\u8fbe\u5f0fa+=a-=a*a\u540e\uff0ca\u7684\u503c\u662f A) -3 B) 9 C) -12 D) 6\u3001C\u30011", "\n28\u3001\u82e5int\u7c7b\u578b\u5360\u4e24\u4e2a\u5b57\u8282\uff0c\u5219\u4ee5\u4e0b\u8bed\u53e5\u8f93\u51fa\u4e3a________\u3002 int k=-1; printf(\"%d,u%\",k,k); A\u3001-1,-1 B\u3001-1,65536 C\u3001-1,32768 D\u3001-1,65535\u3001D\u30011", "\n29\u3001\u82e5\u53d8\u91cfa\u662fint\u7c7b\u578b\uff0c\u5e76\u6267\u884c\u4e86\u8bed\u53e5\uff1aa=\u2018A'+1\u30016\uff1b\uff0c\u5219\u6b63\u786e\u7684\u53d9\u8ff0\u662f A) a\u7684\u503c\u662f\u5b57\u7b26C B) a\u7684\u503c\u662f\u6d6e\u70b9\u578b C) \u4e0d\u5141\u8bb8\u5b57\u7b26\u578b\u548c\u6d6e\u70b9\u578b\u76f8\u52a0 D) a\u7684\u503c\u662f\u5b57\u7b26\u2018A\u2019\u7684ASCII\u503c\u52a0\u4e0a1\u3002\u3001D\u30011", "\n30\u3001\u82e5\u53d8\u91cf\u5df2\u6b63\u786e\u8bf4\u660e\u4e3afloat\u7c7b\u578b\uff0c\u8981\u901a\u8fc7\u8bed\u53e5scanf(\"%f %f %f \",&a,&b,&c);\u7ed9a\u8d4b\u4e8e10\u30010\uff0cb\u8d4b\u4e8822\u30010\uff0cc\u8d4b\u4e8833\u30010\uff0c\u4e0d\u6b63\u786e\u7684\u8f93\u5165\u5f62\u5f0f\u662f\uff1a A) 10 B) 10\u30010,22\u30010,33\u30010 22 33 C) 10\u30010 D) 10 22 22\u30010 33\u30010 33\u3001B\u30011", "\n31\u3001\u82e5\u8981\u6c42\u5728if\u540e\u4e00\u5bf9\u5706\u62ec\u53f7\u4e2d\u8868\u793aa\u4e0d\u7b49\u4e8e0\u7684\u5173\u7cfb,\u5219\u80fd\u6b63\u786e\u8868\u793a\u8fd9\u4e00\u5173\u7cfb\u7684\u8868\u8fbe\u5f0f\u4e3a A) a0 B) !a C) a=0 D) a\u3001B\u30011", "\n32\u3001\u82e5\u5df2\u5b9a\u4e49x\u548cy\u4e3adouble\u7c7b\u578b\uff0c\u5219\u8868\u8fbe\u5f0f:x=1\uff0cy=x+3/2\u7684\u503c\u662f A)1 B)2 C)2\u30010 D)2\u30015\u3001C\u30011", "\n33\u3001\u82e5\u6709\u5b9a\u4e49\uff1aint a=8\uff0cb=5\uff0cc\uff1b\uff0c\u6267\u884c\u8bed\u53e5c=a/b+0\u30014;\u540e\uff0cc\u7684\u503c\u4e3a A) 1\u30014 B) 1 C) 2\u30010 D) 2\u3001B\u30011", "\n34\u3001\u82e5\u6709\u5b9a\u4e49:int x,y;char a,b,c;\u5e76\u6709\u4ee5\u4e0b\u8f93\u5165\u6570\u636e(\u6b64\u5904 \u4ee3\u8868\u6362\u884c\u7b26\uff0c/u\u4ee3\u8868\u7a7a\u683c): 1u2 AuBuC \u5219\u80fd\u7ed9x\u8d4b\u6574\u65701\uff0c\u7ed9y\u8d4b\u6574\u65702\uff0c\u7ed9a\u8d4b\u5b57\u7b26A\uff0c\u7ed9b\u8d4b\u5b57\u7b26B\uff0c\u7ed9c\u8d4b\u5b57\u7b26C \u7684\u6b63\u786e\u7a0b\u5e8f\u6bb5\u662f A) scanf(\u201cx=%d y+%d\u201d,&x,&y);a=getchar();b=getchar();c=getchar(); B) scanf(\u201c%d %d\u201d,&x,&y);a=getchar();b=getchar();c=getchar(); C) scanf(\u201c%d%d%c%c%c,&x,&y,&a,&b,&c); D) scanf(\u201c%d%d%c%c%c%c%c%c:&x,&y,&a,&a,&b,&b,&c,&c);\u3001D\u30011", "\n35\u3001\u82e5\u6709\u5b9a\u4e49\u548c\u8bed\u53e5: char s[10]:s=\u201dabcd\u201d;printf(\u201c%s\u201d,s); \u5219\u7ed3\u679c\u662f(\u4ee5\u4e0bu\u4ee3\u8868\u7a7a\u683c) A) \u8f93\u51faabcd B) \u8f93\u51faa C) \u8f93\u51faabcduuuuu D) \u7f16\u8bd1\u4e0d\u901a\u8fc7\u3001D\u30011", "\n36\u3001\u82e5\u6709\u4ee5\u4e0b\u7a0b\u5e8f\u6bb5\uff0c int c1=1,c2=2,c3; c3=1\u30010/c2*c1; \u5219\u6267\u884c\u540e\uff0cc3\u4e2d\u7684\u503c\u662f A) 0 B) 0\u30015 C) 1 D) 2\u3001A\u30011", "\n37\u3001\u82e5\u6709\u4ee5\u4e0b\u5b9a\u4e49: char a; int b; float c; double d; \u5219\u8868\u8fbe\u5f0fa*b+d-c\u503c\u7684\u7c7b\u578b\u4e3a A) float B) int C) char D) double\u3001D\u30011", "\n38\u3001\u82e5\u6709\u4ee5\u4e0b\u5b9a\u4e49\u548c\u8bed\u53e5 char c1=\u2019b',c2=\u2019e'; printf(\u201c%d,%c\u201d,c2-c1,c2-\u2019a'+\u201dA\u201d); \u5219\u8f93\u51fa\u7ed3\u679c\u662f: A)2,M B)3,E C)2,E D)\u8f93\u51fa\u9879\u4e0e\u5bf9\u5e94\u7684\u683c\u5f0f\u63a7\u5236\u4e0d\u4e00\u81f4\uff0c\u8f93\u51fa\u7ed3\u679c\u4e0d\u786e\u5b9a\u3001B\u30011", "\n39\u3001\u82e5\u6709\u4ee5\u4e0b\u51fd\u6570\u8c03\u7528\u8bed\u53e5\uff1a fun(a+b,(x,y),fun(n+k,d,(a,b)));\u5728\u6b64\u51fd\u6570\u8c03\u7528\u8bed\u53e5\u4e2d\u5b9e\u53c2\u7684\u4e2a\u6570\u662f A\uff093 B\uff094 C\uff095 D\uff096\u3001A\u30011", "\n40\u3001\u82e5\u6267\u884c\u4e0b\u9762\u7684\u7a0b\u5e8f\u65f6\u4ece\u952e\u76d8\u4e0a\u8f93\u51653\u548c4\uff0c\u5219\u8f93\u51fa\u662f____ A) 14 B) 16 C) 18 D) 20 main( ) { int a,b,s; scanf(\u201c%d %d\u201d,&a,&b); s=a; if(a\u3001B\u30011", "\n41\u3001\u82e5\u6267\u884c\u4e0b\u9762\u7684\u7a0b\u5e8f\u65f6\u4ece\u952e\u76d8\u4e0a\u8f93\u51655\uff0c\u5219\u8f93\u51fa\u662f A) 7 B) 6 C) 5 D) 4 main() { int x; scanf(\u201c%d\u201d,&x); if(x++>5) printf(\u201c%d\u201d,x); else printf(\u201c%d\u201d,x\u2013);}\u3001B\u30011", "\n42\u3001\u82e5\u6267\u884c\u4ee5\u4e0b\u7a0b\u5e8f\u65f6\u4ece\u952e\u76d8\u4e0a\u8f93\u51659\uff0c\u5219\u8f93\u51fa\u7ed3\u679c\u662f A) 11 B) 10 C) 9 D) 8 main( ) { int n; scanf(\u201c%d\u201d,&n); if(n++\u3001B\u30011", "\n43\u3001\u8bbe a\u3001b\u3001c\u3001d\u3001m\u3001n\u5747\u4e3a int\u578b\u53d8\u91cf\uff0c\u4e14 a=5\u3001b=6\u3001c=7\u3001d=8\u3001m=2\u3001n=2\uff0c\u5219\u903b\u8f91\u8868\u8fbe\u5f0f (m=a>b)&&(n=c>d)\u8fd0\u7b97\u540e\uff0cn\u7684\u503c\u4e3a____ A) 0 B) 1 C) 2 D) 3\u3001C\u30011", "\n44\u3001\u8bbe int a=12\uff0c\u5219\u6267\u884c\u5b8c\u8bed\u53e5 a+=a-=a*a\u540e\uff0ca\u7684\u503c\u662f A) 552 B) 264 C) 144 D) -264\u3001D\u30011", "\n45\u3001\u8bbe int b=2;\u8868\u8fbe\u5f0f(b>>2)/(b>>1)\u7684\u503c\u662f A) 0 B) 2 C) 4 D) 8\u3001A\u30011", "\n46\u3001\u8bbea,b\u548cc\u90fd\u662fint\u578b\u53d8\u91cf\uff0c\u4e14a=3,b=4,c=5,\u5219\u4e0b\u5217\u8868\u8fbe\u5f0f\u4e2d\uff0c\u503c\u4e3a0\u7684\u8868\u8fbe\u5f0f\u662f________ A)\u2019a'&&\u2019b\u2019 B)a\n47\u3001\u8bbex\u3001y\u3001z\u548ck\u90fd\u662fint\u578b\u53d8\u91cf,\u5219\u6267\u884c\u8868\u8fbe\u5f0f:x=(y=4,z=16,k=32)\u540e,x\u7684\u503c\u4e3a A 4 B 16 C 32 D 52\u3001C\u30011", "\n48\u3001\u8bbex=3,y=-4,z=6\uff0c\u5199\u51fa\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u3002 !(x>y)+(y!=z)||(x+y)&&(y-z) A\u30010 B\u30011 C\u3001-1 D\u30016\u3001B\u30011", "\n49\u3001\u8bbex\u548cy\u5747\u4e3aint \u578b\u53d8\u91cf,\u5219\u4ee5\u4e0b\u8bed\u53e5:x+=y;y=x-y;y=x-y;x-=y;\u7684\u529f\u80fd\u662f A\u3001\u628ax \u548cy\u6309\u4ece\u5927\u5230\u5c0f\u6392\u5217 B\u3001\u628ax\u548cy\u6309\u4ece\u5c0f\u5230\u5927\u6392\u5217 C\u3001\u65e0\u786e\u5b9a\u7ed3\u679c D\u3001\u4ea4\u6362x\u548cy\u4e2d\u7684\u503c\u3001D\u30011", "\n50\u3001\u8bbe\u6709 int x=11; \u5219\u8868\u8fbe\u5f0f (x++ * 1/3) \u7684\u503c\u662f A) 3 B) 4 C) 11 D) 12\u3001A\u30011"], "title": "C\u8bed\u8a00\u57fa\u7840\u7b14\u8bd5\u9898"},
{"contents": ["\u4e00:\u586b\u7a7a:", "\n1.\t\u73b0\u6709\u7c7bpublic void CCompany,\u8bf7\u5199\u51fa\u5b83\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570_____________,\u6790\u6784\u51fd\u6570___________,\u8fd0\u7b97\u7b26+=\u7684\u91cd\u8f7d\u51fd\u6570____________.", "\n2.\tint i = 10, j = 10, k = 3, k  /=  i + j, k = ___________.", "\n3.\t\u73b0\u6709\u51fd\u6570Setattr(int a, int b, int c). \u5df2\u77e5b\u65e0\u521d\u59cb\u503c, a\u7684\u521d\u59cb\u503c\u7b49\u4e8e1, c\u7684\u521d\u59cb\u503c\u7b49\u4e8e0, \u90a3\u4e48\u6b64\u51fd\u6570\u7684\u58f0\u660e\u5f62\u5f0f\u4e3a:___________________.", "\n4.\t\u5728C\u4e2d,\u9884\u7f16\u8bd1\u5b9a\u4e49\u7684\u5173\u952e\u5b57\u662f__________, \u5e38\u91cf\u5b9a\u4e49\u7684\u5173\u952e\u5b57\u662f:_____________.", "\n5.\t\u5728C\u4e2d,\u68c0\u6d4b\u5b57\u7b26\u4e32\u957f\u5ea6\u7684\u51fd\u6570\u662f:______________, \u62f7\u8d1d\u5b57\u7b26\u4e32\u7684\u51fd\u6570\u662f:_________,", "\n\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u51fd\u6570\u662f:______________,\u8fde\u63a5\u5b57\u7b26\u4e32\u7684\u51fd\u6570\u662f:___________,\u4f7f\u7528\u8fd9\u4e9b\u51fd\u6570\u9700\u8c03\u7528\u7684\u5934\u6587\u4ef6\u662f:________________.", "\n6.\t\u5df2\u77e5\u5b57\u7b26\u4e32char[] topic = \u201chello,hello hello money!\u201d, sizeof(topic) = _________, strlen(topic)=___________.", "\n\u4e8c:\u95ee\u7b54\u9898:", "\n1.\tmain\u51fd\u6570\u7684\u53c2\u6570argc\u548cargv\u7684\u4f5c\u7528\u662f\u4ec0\u4e48?\u5982\u4f55\u83b7\u5f97\u67d0\u4e2a\u5e94\u7528\u7a0b\u5e8f\u7684\u7b2c\u4e09\u4e2a\u547d\u4ee4\u884c\u53c2\u6570.", "\n2.\tif( n == 10)  \u20141.", "\nif( 10 == n)  \u20142", "\n\u54ea\u4e00\u79cd\u5199\u6cd5\u662f\u6b63\u786e\u7684, \u4e3a\u4ec0\u4e48?", "3.\t-\uf0e01.const char *p;", "\n-\uf0e02.char const *p;", "\n-\uf0e03.char * const p;", "\n-\uf0e04 const char * const p;", "\n\u8bf7\u63cf\u8ff0\u4e00\u4e0b\u4ee5\u4e0a\u56db\u79cd\u5199\u6cd5\u7684\u533a\u522b.", "4.\t\u8bf7\u7f16\u5199\u4e00\u4e2a\u7c7b, \u4f7f\u5176\u5177\u6709\u6574\u5f62\u53d8\u91cfi\u7684i++\u4ee5\u53ca++i\u7684\u529f\u80fd.", "\n5.\t\u8bf7\u5199\u51faC++\u4e2d\u7684\u6240\u6709\u8bbf\u95ee\u7ea7\u522b,\u5e76\u6bd4\u8f83\u5b83\u4eec\u7684\u4e0d\u540c.", "\n6.\t\u73b0\u6709\u8868department(dep_Id, depart_name, wage), \u67e5\u8be2\u9664human resource\u4ee5\u5916\u7684\u90e8\u95e8\u540d\u53ca\u8be5\u90e8\u95e8\u7684\u5e73\u5747\u5de5\u8d44,\u5e76\u6309\u5b57\u7b26\u7684\u987a\u5e8f\u5bf9\u67e5\u8be2\u7ed3\u679c\u8fdb\u884c\u6392\u5e8f.", "\u4e09:\u5206\u6790\u9898:", "\n   \u8003\u70b9:\u51fd\u6570\u7684\u6309\u503c\u4f20\u9012\u53ca\u5f15\u7528\u4f20\u9012.", "\n       \u591a\u6001(\u57fa\u7c7b\u6307\u9488\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61, \u57fa\u7c7b\u5f15\u7528\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61).", "\n       \u51fd\u6570\u91cd\u8f7d,", "\n       \u9759\u6001\u6210\u5458(\u9759\u6001\u65b9\u6cd5).", "\u56db.\u7f16\u7a0b\u9898.", "\n   1. \u5df2\u77e5\u5b57\u7b26\u4e32\u64cd\u4f5c\u51fd\u6570\u4e2d\u6709\u5b57\u7b26\u4e32\u62f7\u8d1d\u51fd\u6570strcpy().\u73b0\u6709\u81ea\u5b9a\u4e49\u5b57\u7b26\u4e32\u62f7\u8d1d\u51fd\u6570Strcpy\u7684\u58f0\u660e: char* Strcpy(char* strDest, const char* strSrc).", "\n     -\uf0e01.\u5b9e\u73b0\u8be5\u81ea\u5b9a\u4e49\u5b57\u7b26\u4e32\u62f7\u8d1d\u51fd\u6570.", "\n     -\uf0e02.\u8be5\u51fd\u6570\u5177\u5907\u62f7\u8d1d\u5b57\u7b26\u4e32\u7684\u529f\u80fd,\u4e3a\u4ec0\u4e48\u8981\u8fd4\u56dechar*\u578b\u53d8\u91cf.", "\n   2.\u5df2\u77e5\u4e00\u4e2a\u94fe\u8868\u4e2d\u5b58\u653e\u4e8610\u4e2a\u6570,\u8bf7\u5bf9\u8be5\u94fe\u8868\u8fdb\u884c\u9006\u7f6e.\u4ee5\u4e0b\u662f\u8be5\u94fe\u8868\u7ed3\u70b9\u7684\u58f0\u660e:", "\n      struct node", "\n      {", "\n          int num;", "\n          struct node* next;", "\n}", "  3.\u2013>1.\u4e3a\u4e00\u4e2a\u6574\u578b\u6570\u7ec4\u6dfb\u52a0\u4e00\u7ec4\u968f\u673a\u6570.", "\n   \u2013\uf0e02.\u5206\u533a\u6392\u5e8f:\u4ece\u6570\u7ec4\u4e2d\u4efb\u610f\u9009\u53d6\u4e00\u4e2a\u6570\u4f5c\u4e3a\u53c2\u7167\u6570,\u904d\u5386\u8be5\u6570\u7ec4,\u5c06\u5927\u4e8e\u6b64\u6570\u7684\u6570\u7684\u6570\u653e\u5728\u4e00\u8fb9, \u5c06\u5c0f\u4e8e\u6b64\u6570\u7684\u6570\u7684\u6570\u653e\u5728\u53e6\u4e00\u8fb9, \u4f9d\u6b21\u7c7b\u63a8,\u5b8c\u6210\u6392\u5e8f."], "title": "\u5357\u4eac-\u56db\u8fbe\u8363\u5408C/C++\u7b14\u8bd5\u9898"},
{"contents": ["C\u65b9\u5411", "\n1.\u5728X86\u7cfb\u7edf\u4e2d\uff0c\u5982\u4e0b\u53d8\u91cf\u5728\u5185\u5b58\u4e2d\u7684\u5b57\u8282\u5b58\u653e\u987a\u5e8f\u3002", "\nDWORD Value1=0x8010011c", "\nUINT  Value2=12801", "\n2.ASCII\u548cUnicode\u6709\u4ec0\u4e48\u533a\u522b\uff1f\u6c49\u5b57\u662f\u5982\u4f55\u663e\u793a\u7684\uff1f", "\n3.\u8bf4\u51fa\u4f60\u6700\u719f\u6089\u7684\u4e09\u79cd\u6392\u5e8f\u65b9\u6cd5\uff0c\u7528\u4f60\u6700\u719f\u6089\u7684\u8bed\u8a00\u5199\u51fa\u5176\u4e2d\u4e00\u79cd\u3002", "\n4.Bool flag", "\n        Floot x          \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83", "\n        Char *p", "\n5.\u662f\u5426\u4e86\u89e3MVC\u6a21\u5f0f,\u5176\u4e2dM\u3001V\u3001C\u5404\u8868\u793a\u4ec0\u4e48\uff1f", "\n6.\u5217\u4e3e\u51fa\u4f60\u66fe\u7ecf\u7528\u8fc7\u6216\u8005\u4e86\u89e3\u7684\u51e0\u79cd\u8bbe\u8ba1\u6a21\u5f0f\uff1f", "\n7.int iVal1 = 0, iVal2 = 0;", "\n  int * ipVal;", "\n  ipVal = &iVal1;      What is the Value of  ipVal  = *ipVal  =", "\n  ipVal = (int*)iVal1; What is the Value of  ipVal  =   *ipVal  =", "\n  iVal2 = (int)&iVal1; What is the Value of  ipVal  =   *ipVal  =", "\n8.void SwapAB(int A, int B)", "\n  {", "\n\tA=B;", "\n\tB=A;", "\n  }", "  int main()", "\n  {", "\n\tint A,B;", "\n\tA=1;", "\n\tB=2;", "\n\tSwapAB(A,B);", "\n\treturn 0;\t\t// A= ?, B= ?", "\n  }", "\nWhat is the value of A and B ?", "\nWhat is the difference between STRUCTURE and OBJECT ORIENTED PROGRAMMING ?", "\nWhat is the difference between C and C++ ?", "\nWhat is an interpreter ?"], "title": "\u4e0a\u6d77C\u8bed\u8a00\u9762\u8bd5\u9898"},
{"contents": ["4. #include \u201cstdio.h\u201d \u548c include ", "1. Bool bstate, float fnum, int nierp, \u5199\u51fa\u8fd9\u51e0\u4e2a\u6570\u4e0e\u96f6\u503c\u7684\u6bd4\u8f83"], "title": "\u5357\u4eac-\u8fc8\u7279\u671bC/C++\u9762\u8bd5\u9898"},
{"contents": ["1 OSI\u7f51\u7edc\u6a21\u578b\u6709\uff08\uff09\u5c42\uff0c\u4e2d\u7ee7\u5668\uff0c\u7f51\u6865\uff0c\u8def\u7531\u5668\u5206\u522b\u662f\u7b2c\u51e0\u5c42\uff1f ", "2 \u64cd\u4f5c\u7cfb\u7edf\u662f\uff08\uff09\u8f6f\u4ef6\uff0c\u8fdb\u7a0b\u8c03\u5ea6\u901a\u8fc7\uff08\uff09\u8c03\u7528\u6765\u5b8c\u6210\uff0c\u4e09\u4e2a\u8fc7\u7a0b\u4e8b\u4ec0\u4e48\uff08\u5c31\u7eea\uff0c\u7b49\u5f85 ", "\uff0c\u8fd0\u884c\u4ec0\u4e48\u7684\uff09 ", "3 \u4e00\u4e2a\u6570\u79df\uff0c\u884c\u4e0b\u68070-8\uff0c\u5217\u4e0b\u68071-5\uff0c\u6bcf\u4e2a\u6570\u636e\u5360\u636e4\u5404\u5b57\u8282\uff0c\u7b2c\u4e00\u4e2a\u6570\u636e\u7684\u9996\u5730\u5740\u662f0 ", "\uff0c\u6700\u540e\u4e00\u4e2a\u7684\u9996\u5730\u5740\u662f\uff08\uff09\uff0c\u6309\u7167\u884c\u5730\u5740\u65b9\u5f0f\uff0cA[3][5]\u548cA[5][3]\u7684\u9996\u5730\u5740\u662f\u4ec0\u4e48\uff0c\u6309 ", "\u7167\u5217\u5730\u5740\u65b9\u5f0f\uff0cA[7][1]\u548cA[6][3]\u7684\u9996\u5730\u5740\u662f\u4ec0\u4e48\uff1f", "\n4 \u5173\u7cfb\u6570\u636e\u5e93\u662f\uff08\uff09\u72b6\u7ed3\u6784\uff1f ", "5 \u7f16\u7a0b ", "\u904d\u5386\u5b57\u7b26\u4e32s,\u6ee1\u8db3\u4e24\u4e2a\u6761\u4ef6 ", "\uff081\uff09  \u201c\uff08\u201d\u5fc5\u987b\u5c0f\u4e8e\u7b49\u4e8e\u201c\uff09\u201d\u7684\u4e2a\u6570 ", "\uff082\uff09\u904d\u5386\u5b8c\u6bd5\u540e\uff0c\u5de6\u53f3\u62ec\u53f7\u7684\u4e2a\u6570\u5fc5\u987b\u76f8\u7b49 ", "\u6ee1\u8db3\u4ee5\u4e0a\u4e24\u4e2a\u6761\u4ef6\uff0c\u8fd4\u56de\u975e0\uff0c\u5426\u5219\uff0c\u8fd4\u56de0 ", "int xxxx(s) ", "_________; ", "{ int pr,sr; ", "  pr=0;sr=0; ", "  while(______) ", "  {   if (*s==\u2019(\u2018) ", "       pr++; ", "      else ", "      {   sr++; ", "         if ______ ", "          return 0; ", "      } ", "      ________; ", "    } ", "      return _____:1; ", "} "], "title": "NEC\u8bd5\u9898\u56de\u5fc6"},
{"contents": ["A. (C/C++\u7a0b\u5e8f\u5458) \u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\u5b8c\u6210\u4ee5\u4e0b\u529f\u80fd\uff1a", "\n       \u2013 \u4ece\u78c1\u76d8\u4e0a\u8bfb\u5165\u4e00\u4e2a\u6587\u4ef6\uff0c\u8fd9\u4e2a\u6587\u4ef6\u53ef\u80fd\u662f\u4e00\u4e2aHTML\u683c\u5f0f\u7684\u6587\u4ef6\u6216\u8005\u5176\u4ed6\u683c\u5f0f\u7684", "\n       \u2013  parse\u6b64\u6587\u4ef6\u4e2d\u53ef\u80fd\u5305\u542b\u7684RSS\u94fe\u63a5 \uff08\u53ef\u80fd0\u6216\u591a\u4e2a\uff09\u3002", "\n       \u2013 \u5217\u51fa\u627e\u5230\u7684RSS\u94fe\u63a5", "       \u6ce8\u610f\uff1a\u8bf7\u4e0d\u8981\u4f7f\u7528\u4efb\u4f55Parse HTML, XML, RSS\u76f8\u5173\u7684\u5e93\uff0c\u76f4\u63a5\u5199C/C++\u4ee3\u7801\u6765\u5904\u7406\u8bfb\u5165\u7684\u5185\u5bb9\u3002\u8bf7\u6ce8\u610f\u4ee3\u7801\u7684\u98ce\u683c\uff0c\u6587\u4ef6\u7684\u5206\u5e03\u5b89\u6392\u3001\u6587\u4ef6\u540d\u3001\u53d8\u91cf\u3001\u6837\u5f0f\u7b49\u7684\u547d\u540d\u3001\u9875\u9762\u7684\u7f8e\u89c2\u7b49\uff0c\u8fd9\u4e9b\u90fd\u5c06\u5f71\u54cd\u60a8\u7684\u5f97\u5206\u3002", "\n       \u63d0\u793a\uff1a1\u3001\u6ce8\u610f\u5404\u79cd\u5f02\u5e38\u60c5\u51b5\u7684\u5904\u7406\u3002 2\u3001\u6ce8\u610f\u4ee3\u7801\u7684\u7b80\u6d01\u548c\u6548\u7387\u3002"], "title": "\u5357\u4eac-uu zone C/C++\u7a0b\u5e8f\u5458\u9762\u8bd5\u9898"},
{"contents": ["\u6a21\u62df\u7b14\u8bd5\u9898\u4e00", "\n1.\t\u7f16\u5199\u51fd\u6570fun(char*str),\u627e\u51fa\u5b57\u7b26\u4e32str\u4e2dASCII\u503c\u6700\u5927\u7684\u5b57\u7b26\u3002\u4e3b\u7a0b\u5e8f\u8c03\u7528\u51fd\u6570fun()", "\n\u6c42\u5b57\u7b26\u4e32\u4e2d\u7684\u6700\u5927\u5b57\u7b26\u5e76\u8f93\u51fa\u3002\u4e3b\u7a0b\u5e8f\u5982\u4e0b\uff1a", "\nvoid main()", "\n{  char source[1024];", "\n4\uff0e\u4e00\u5c0f\u7403\u4ece\u4e00\u767e\u7c73\u7684\u9ad8\u5ea6\u81ea\u7531\u843d\u4e0b\uff0c\u6bcf\u6b21\u843d\u5730\u540e\u53cd\u8df3\u56de\u539f\u6765\u7684\u4e00\u534a\uff0c\u518d\u843d\u4e0b\u3002\u8ba1\u7b97\u5c0f\u7403\u5728\u7b2c\u5341\u6b21\u843d\u5730\u65f6\uff0c\u5171\u7ecf\u8fc7\u591a\u5c11\u7c73\uff1f\u7b2c\u5341\u6b21\u53cd\u5f39\u591a\u9ad8\uff1f", "\n\tprintf(\u201c\u8bf7\u8f93\u5165\u4e00\u884c\u82f1\u6587\u5b57\u7b26\u4e32\uff1a\\n\u201d);", "\n\tgets(source);", "\n\tprintf(\u201c\u6700\u5927\u7684\u5b57\u6bcd\u662f\uff1a%c\u201d,fun(source));", "\n}", "\nchar fun(char*str)", "\n{           }", "\n2.\u5199\u51fa\u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\uff1a", "\nmain()", "\n{ int h,j,k;", "\n5\uff0e\u7f16\u5199\u51fd\u6570fact(int n),\u8ba1\u7b97n!", "\n\u7f16\u5199\u51fd\u6570sum(int n),\u8c03\u7528\u51fd\u6570fact(),", "\n\u8ba1\u7b97\uff1a1\uff01+2\uff01+3\uff01+\u2026\u2026+n!\u3002\u7f16\u5199\u4e3b\u7a0b\u5e8f main(),\u8c03\u7528sum()\u51fd\u6570\u8ba1\u7b97\uff1a1\uff01+2\uff01+3\uff01+\u2026\u2026+n!\u3002", "\n\tfor(h=0;h\n\t{  for(j=0;j\n\t\tfor(k=0;k\n\t\tprintf(\"\\n\");", "\n\t}", "\n\tfor(h=0;h\n\t{  for(j=0;j\n\t\tfor(k=0;k\n\t\tprintf(\"\\n\");", "\n\t}", "\n}", "\n6\uff0e\u5c0f\u5f20\uff0c\u5c0f\u674e\uff0c\u5c0f\u738b\uff0c\u5c0f\u5218\u5171\u4e70\u82f9\u679c144\u4e2a\u3002\u5176\u4e2d\uff0c\u5c0f\u5f20\u4e70\u7684\u82f9\u679c\u6bd4\u5c0f\u674e\u591a10\u4e2a\uff0c\u6bd4\u5c0f\u738b\u591a26\u4e2a\uff0c\u6bd4\u5c0f\u516d\u591a32\u4e2a\u3002\u95ee\u5c0f\u5f20\u4e70\u4e86\u591a\u5c11\u4e2a\u82f9\u679c\uff1f\uff08 \uff09", "\nA. 73  B. 63  C. 53  D. 43  E. 27", "\n3. \u5199\u51fa\u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\uff1a", "\nvoid main()", "\n{   int s=0,k;", "\n\tfor(k=7;k>=0;k\u2013)", "\n\t{", "\nswitch(k)", "\n\t  {", "\ncase 1:", "\n\t\tcase 4:", "\ncase 7:s++;break;", "\n\t\tcase 2:", "\n\t\tcase 3:", "\n\t\tcase 6:break;", "\n\t\tcase 0:", "\n\t\tcase 5:s+=2;break;", "\n\t\t}", "\n\t}", "\n\tprintf(\u201cs=%d\u201d,s);", "\n}"], "title": "C\u8bed\u8a00\u6a21\u62df\u7b14\u8bd5\u9898\u4e00"},
{"contents": ["C\u8bed\u8a00", "\n\u4e00\u3001\u9009\u62e9\u9898", "\n1\u3001\u4e0b\u5217\u5173\u4e8ec\u8bed\u8a00\u6807\u8bc6\u7b26\u7684\u53d9\u8ff0\u4e2d\u6b63\u786e\u7684\u662f\uff08\uff09", "\nA  \u7528\u6237\u6807\u8bc6\u7b26\u4e2d\u53ef\u4ee5\u51fa\u73b0\u4e0b\u5212\u7ebf\u548c\u4e2d\u5212\u7ebf\uff08\u51cf\u53f7\uff09", "\nB  \u7528\u6237\u6807\u8bc6\u7b26\u4e2d\u4e0d\u53ef\u4ee5\u51fa\u73b0\u4e2d\u5212\u7ebf\uff0c\u4f46\u53ef\u4ee5\u51fa\u73b0\u4e0b\u5212\u7ebf", "\nC  \u7528\u6237\u6807\u8bc6\u7b26\u4e2d\u53ef\u4ee5\u51fa\u73b0\u4e0b\u5212\u7ebf\uff0c\u4f46\u4e0d\u53ef\u4ee5\u653e\u5728\u7528\u6237\u6807\u8bc6\u7b26\u7684\u5f00\u5934", "\nD  \u7528\u6237\u6807\u8bc6\u7b26\u4e2d\u53ef\u4ee5\u51fa\u73b0\u4e0b\u5212\u7ebf\u548c\u6570\u5b57\uff0c\u4ed6\u4eec\u90fd\u53ef\u4ee5\u653e\u5728\u7528\u6237\u6807\u8bc6\u7b26\u7684\u5f00\u5934", "\n2\u3001\u4ee5\u4e0b\u53ef\u4ee5\u4f5c\u4e3ac\u8bed\u8a00\u5408\u6cd5\u5e38\u91cf\u7684\u662f", "\nA  -80  B  -080  C  -8e1.0  D  -80.0e", "\n3\u3001\u4ee5\u4e0b\u53d9\u8ff0\u4e2d\u6b63\u786e\u7684\u662f", "\nA  \u7528c\u8bed\u8a00\u5b9e\u73b0\u7684\u7b97\u6cd5\u5fc5\u987b\u8981\u6709\u8f93\u5165\u548c\u8f93\u51fa\u624d\u505a", "\nB  \u7528c\u8bed\u8a00\u5b9e\u73b0\u7684\u7b97\u6cd5\u53ef\u4ee5\u6ca1\u6709\u8f93\u51fa\u4f46\u5fc5\u987b\u8981\u6709\u8f93\u5165", "\nC  \u7528c\u8bed\u8a00\u5b9e\u73b0\u7684\u7b97\u6cd5\u53ef\u4ee5\u6ca1\u6709\u8f93\u5165\u4f46\u5fc5\u987b\u8981\u6709\u8f93\u51fa", "\nD  \u7528c\u8bed\u8a00\u5b9e\u73b0\u7684\u7b97\u6cd5\u53ef\u4ee5\u65e2\u6ca1\u6709\u8f93\u5165\u6709\u6ca1\u6709\u8f93\u51fa", "\n4\u3001\u6570\u5b57\u5b57\u7b260\u7684ASCII\u503c\u4e3a48\uff0c\u82e5\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "\nmain()", "\n{", "\nchar a=\u20191\u2019,b=\u20192\u2019;", "\nprintf(\u201c%c,\u201d,b++);", "\nprintf(\u201c%d\\n,\u201d,b-a);", "\n}", "\n\u7a0b\u5e8f\u8fd0\u884c\u540e\u8f93\u51fa\u7684\u7ed3\u679c\u662f", "\nA  3\uff0c2  B  50\uff0c2  C  2\uff0c2  D  2\uff0c 50", "\n5\u3001\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "\nmain()", "\n{", "\nint  m=12,n=34;", "\nprintf(\u201c%d%d\u201d,m++,n++);", "\nprintf(\u201c%d%d\\n\u201d, n++,++m);", "\n}", "\n\u7a0b\u5e8f\u8fd0\u884c\u540e\u8f93\u51fa\u7684\u7ed3\u679c\u662f", "\nA  12353514  B  12353513  C  12343514  D12343513", "\n6\u3001\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "\nmain()", "\n{", "\nint  m,n,p;", "\nscanf(\u201cm=%dn=%dp=%d\u201d,&m,&n,&p);", "\nprintf(\u201c%d%d%d\\n\u201d, n,m,p);", "\n}", "\n\u82e5\u60f3\u4ece\u952e\u76d8\u8f93\u5165\u6570\u636e\uff0c\u4f7f\u53d8\u91cfm\u4e2d\u7684\u503c\u4e3a123\uff0cn\u4e2d\u7684\u503c\u4e3a456\uff0cp\u4e2d\u7684\u503c\u4e3a789\uff0c\u5219\u6b63\u786e\u7684\u662f\u5982\u662f", "\nA  m=123n=456p=789", "\nB  m=123  n=456  p=789", "\nC  m=123\uff0cn=456\uff0cp=789", "\nD  123  456  789", "\n7\u3001\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "\nmain()", "\n{", "\nint  a,b,d=25;", "\na=d/10%9;", "\nb=a&&(-1);", "\nprintf(\u201c%d,%d\\n\u201d,a,b);", "\n}", "\n\u7a0b\u5e8f\u8fd0\u884c\u540e\u8fd0\u884c\u7684\u7ed3\u679c\u662f", "\nA  6\uff0c1  B  2\uff0c1  C  6\uff0c0  D  2\uff0c0", "\n8\u3001\u4ee5\u4e0b\u80fd\u6b63\u786e\u5b9a\u4e49\u4e00\u7ef4\u6570\u7ec4\u7684\u662f", "\nA  int a[5]={0,1,2,3,4,5};", "\nB  char a[]={0,1,2,3,4,5};", "\nC  char a={\u2018A\u2019,\u2019B\u2019,\u2019C\u2019};", "\nD  int a[5]=\u201d0123\u201d;", "\n9\u3001\u5df2\u6709\u5b9a\u4e49\uff1achar a[]=\u201dxyz\u201d,b[]={\u2018x\u2019,\u2019y\u2019,\u2019z\u2019};\uff0c\u4ee5\u4e0b\u53d9\u8ff0\u4e2d\u6b63\u786e\u7684\u662f", "\nA  \u6570\u7ec4a\u548cb\u7684\u957f\u5ea6\u76f8\u7b49", "\nB  a\u6570\u7ec4\u957f\u5ea6\u5c0f\u4e8eb\u7684\u957f\u5ea6", "\nC  a\u6570\u7ec4\u957f\u5ea6\u5927\u4e8eb\u7684\u957f\u5ea6", "\nD  \u4e0a\u8ff0\u8bf4\u6cd5\u90fd\u4e0d\u5bf9", "\n10\u3001\u8bbe\u6709\u5982\u4e0b\u8bf4\u660e typedef struct ST { long a;int b;char c[2];}NEW;", "\n\u5219\u4e0b\u5217\u53d9\u8ff0\u4e2d\u6b63\u786e\u7684\u662f", "\nA  \u4ee5\u4e0a\u7684\u8bf4\u660e\u661f\u662f\u975e\u6cd5", "\nB  ST\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\u7c7b\u578b", "\nC  NEW\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\u7c7b\u578b", "\nD  NEW\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\u53d8\u91cf", "\n\u4e8c\u3001\u7a0b\u5e8f", "\n1\u3001#include \u201cstdio.h\u201d", "\n   int main()", "\n   {", "\n \t\tint a,*p;", "\n        p=&a;", "\n\t\t*p=0\u00d7500;", "\n\t\ta=(int)(*(&p));", "\n\t\ta=(int)(&(*p));", "\n\t\tif(a==(int)p)", "\n\t\t\tprintf(\u201cequal!\\n\u201d);", "\n        else", "\n\t\t\tprintf(\u201cno equal!\\n\u201d);", "\n\t}", "\n\u8bf7\u95ee\u672c\u7a0b\u5e8f\u7684\u8f93\u51fa\u662f\u4ec0\u4e48\uff1f", "\n2\u3001struct a {", "\n\tint x;", "\nchar y;", "\nstruct a z;", "\nstruct a *p;", "\n}", "\n\u8bf7\u95ee\u8fd9\u79cd\u5b9a\u4e49\u7ed3\u6784\u662f\u5426\u6b63\u786e\uff1f\u5982\u679c\u6709\u95ee\u63d0\uff0c\u95ee\u9898\u5728\u54ea\u91cc\uff1f", "\n3\u3001printf(\u201c%d%d\\n\u201d,++n,power(2,n));\u5176\u4e2dpower(2,n)\u4e3a\u5b9e\u73b0\u4e00\u5b9a\u529f\u80fd\u7684\u51fd\u6570\uff0c\u59822^n\uff0c\u8bf7\u95ee\u8fd9\u79cd\u8868\u793a\u65b9\u6cd5\u6709\u4ec0\u4e48\u6f5c\u5728\u7684\u95ee\u9898\uff1f", "\n4\u3001\u201d\\n\u201d  \u2018\\n\u2019 \u7684\u533a\u522b\uff1f", "\n5\u3001\u5305\u542b\u9884\u5b9a\u4e49\u5934\u6587\u4ef6\u3008\u3009\u548c\u201c \u201d\u7684\u533a\u522b\uff1f", "\n6\u3001\u5168\u5c40\u53d8\u91cf\u53ef\u4e0d\u53ef\u4ee5\u5b9a\u4e49\u5728\u53ef\u88ab\u591a\u4e2a.c\u6587\u4ef6\u5305\u542b\u7684\u5934\u6587\u4ef6\u4e2d\uff1f\u4e3a\u4ec0\u4e48\uff1f", "\n7\u3001\u8bf7\u5199\u51fa\u4e0b\u5217\u4ee3\u7801\u7684\u8f93\u51fa\u5185\u5bb9", "\n#include"], "title": "C\u8bed\u8a00\u7b14\u8bd5\u9898"},
{"contents": ["\u6a21\u62df\u7b14\u8bd5\u9898\u4e8c", "\n\u4e00\u3001\t\u9009\u62e9\u9898", "\n1\uff0e\tC\u8bed\u8a00\u7a0b\u5e8f\u7684\u4e09\u79cd\u57fa\u672c\u7ed3\u6784\u662f\uff3f\uff3f", "\nA\u3001\u987a\u5e8f\u7ed3\u6784\uff0c\u9009\u62e9\u7ed3\u6784\uff0c\u5faa\u73af\u7ed3\u6784\t\t\tB\u3001\u9012\u5f52\u7ed3\u6784\uff0c\u5faa\u73af\u7ed3\u6784\uff0c\u8f6c\u79fb\u7ed3\u6784", "\nC\u3001\u5d4c\u5957\u7ed3\u6784\uff0c\u9012\u5f52\u7ed3\u6784\uff0c\u987a\u5e8f\u7ed3\u6784\t\t\tD\u3001\u5faa\u73af\u7ed3\u6784\uff0c\u8f6c\u79fb\u7ed3\u6784\uff0c\u987a\u5e8f\u7ed3\u6784", "\n2\uff0eC\u8bed\u8a00\u4e2d\u53ef\u5904\u7406\u7684\u6587\u4ef6\u7c7b\u578b\u662f\uff3f\uff3f", "\n\tA\u3001\u6587\u672c\u6587\u4ef6\u548c\u6570\u636e\u6587\u4ef6\t\t\t\t\tB\u3001\u6587\u672c\u6587\u4ef6\u548c\u4e8c\u8fdb\u5236\u6587\u4ef6", "\n\tC\u3001\u6570\u636e\u6587\u4ef6\u548c\u4e8c\u8fdb\u5236\u6587\u4ef6\t\t\t\t\tD\u3001\u6570\u636e\u4ee3\u7801\u6587\u4ef6", "\n3\uff0eC\u8bed\u8a00\u53ef\u6267\u884c\u7a0b\u5e8f\u7684\u5f00\u59cb\u6267\u884c\u70b9\u662f\uff3f\uff3f", "\n\tA\u3001\u7a0b\u5e8f\u4e2d\u7b2c\u4e00\u6761\u53ef\u6267\u884c\u8bed\u53e5\t\t\t\tB\u3001\u7a0b\u5e8f\u4e2d\u7b2c\u4e00\u4e2a\u51fd\u6570", "\nC\u3001\u7a0b\u5e8f\u4e2d\u7684main\u51fd\u6570\t\t\t\t\tD\u3001\u5305\u542b\u6587\u4ef6\u4e2d\u7684\u7b2c\u4e00\u4e2a\u51fd\u6570", "\n4\uff0eC\u8bed\u8a00\u4e2d\u51fd\u6570\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u662f\u7531\uff3f\uff3f\u51b3\u5b9a\u3002", "\n\tA\u3001return\u8bed\u53e5\u4e2d\u7684\u8868\u8fbe\u5f0f\u7c7b\u578b\t\t\t\tB\u3001\u8c03\u7528\u51fd\u6570\u7684\u4e3b\u8c03\u51fd\u6570\u7c7b\u578b", "\nC\u3001\u8c03\u7528\u51fd\u6570\u65f6\u4e34\u65f6\t\t\t\t\t\tD\u3001\u5b9a\u4e49\u51fd\u6570\u65f6\u6240\u6307\u5b9a\u7684\u51fd\u6570\u7c7b\u578b", "\n5\uff0eC\u8bed\u8a00\u4e2d\u6700\u7b80\u5355\u7684\u6570\u636e\u7c7b\u578b\u5305\u62ec\uff3f\uff3f", "\n\tA\u3001\u6574\u578b\u3001\u5b9e\u578b\u3001\u903b\u8f91\u578b\t\t\t\t\tB\u3001\u6574\u578b\u3001\u5b9e\u578b\u3001\u5b57\u7b26\u578b", "\nC\u3001\u6574\u578b\u3001\u5b57\u7b26\u578b\u3001\u903b\u8f91\u578b\t\t\t\t\tD\u3001\u6574\u578b\u3001\u5b9e\u578b\u3001\u903b\u8f91\u578b\u3001\u5b57\u7b26\u578b", "\n6\uff0e\u8bbe\u6709\u6570\u7ec4\u5b9a\u4e49\uff1achar array[]=\u201cChina\u201d;\u5219\u6570\u7ec4array\u6240\u5360\u7684\u7a7a\u95f4\u4e3a\uff3f\uff3f", "\n\tA\u30014\u4e2a\u5b57\u8282\t\t\t\t\t\t\t\tB\u30015\u4e2a\u5b57\u8282", "\nC\u30016\u4e2a\u5b57\u8282\t\t\t\t\t\t\t\tD\u30017\u4e2a\u5b57\u8282", "\n7\uff0e\u4e0b\u5217\u8fd0\u7b97\u7b26\u5176\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u662f\uff3f\uff3f", "\n\tA\u3001||\t\t\tB\u3001&&\t\t\tC\u3001+\t\t\tD\u3001=", "\n8.\u82e5\u6709\u4ee5\u4e0b\u5b9a\u4e49\uff1achar a;int b;float c;double d;\u5219\u8868\u8fbe\u5f0fa*b+d-c\u503c\u7684\u7c7b\u578b\u4e3a\uff3f\uff3f", "\n\tA\u3001float\t\tB\u3001int\t\t\tC\u3001char\t\t\tD\u3001double", "\n9.\u5df2\u77e5int x=1,y=2,z=3;\u5219z+=x>y? ++x:++y\u7684\u503c\u662f\uff3f\uff3f", "\n\tA\u30012\t\t\tB\u30014\t\t\tC\u30013\t\t\tD\u30016", "\n10.\u5df2\u77e5int a[]={10,9,8,7,6},*p=a;\u5219*(p+1)*(p+2)[2]\u7684\u503c\u662f\uff3f\uff3f", "\n\tA\u300172\t\t\tB\u300180\t\t\tC\u300154\t\t\tD\u3001\u6709\u8bed\u6cd5\u9519\u8bef", "\n\u4e8c\u3001\u586b\u7a7a\u9898", "\n1\uff0e\u5df2\u77e5\u4e0b\u5217\u53d8\u91cf\uff0c\u8bf7\u8ba1\u7b97\u8be5\u53d8\u91cf\u5927\u5c0f\uff1a", "\n\tshort  a[100];", "\n\tshort  *b;", "\nshort  (*c)[100];", "\nshort  *d[100];", "\n\u90a3\u4e48sizeof(a)\u7b49\u4e8e\uff3f\uff3f\uff0csizeof(b)\u7b49\u4e8e\uff3f\uff3f\uff0csizeof(c)\u7b49\u4e8e\uff3f\uff3f\uff0csizeof(d)\u7b49\u4e8e\uff3f\uff3f", "\n2\uff0e\tint  a=1;", "\nint  b=8;", "\nswitch(a)", "\n\t {", "\n   case 0:", "\n   b=0;", "\n\t   case 1:", "\n\t   b++\u2019", "\ncase 2:", "\nb++;", "\nbreak;", "\n}", "\n\u4e0a\u9762\u4ee3\u7801\u6267\u884c\u540e\uff0cb\u7b49\u4e8e\uff3f\uff3f", "\n3\uff0e\tvoid fun(short a[100])", "\n {  printf(\u201c%d\u201d,sizeof(a));\t }", "\n\u6253\u5370\u7684\u7ed3\u679c\u662f\uff3f\uff3f", "\n4\uff0e#define  A1(a,b)  a*b", "\n   int A2(int a,int b)", "\n    {\treturn a*b;  }", "\n   \u67d0\u51fd\u6570\u5185\u6709", "\nint c1, c2;", "\nc1=40/A1(2+3,4);", "\nc2=40/A2(2+3,4);", "\n\u5219\u7ed3\u679cc1\u7b49\u4e8e\uff3f\uff3f\uff0cc2\u7b49\u4e8e\uff3f\uff3f", "\n4\uff0e\tshort a[5][3];", "\n\u4ece\u672c\u8d28\u4e0a\u770b\uff0ca\u662f\u7531\uff3f\uff3f\u4e2a\u5143\u7d20\u7ec4\u6210\u7684\u4e00\u7ef4\u6570\u7ec4\uff0c\u8fd9\u4e2a\u4e00\u7ef4\u6570\u7ec4\u7684\u6bcf\u4e2a\u5143\u7d20\u672c\u8eab\u53c8\u662f\u7531\uff3f\uff3f\u4e2ashort\u7c7b\u578b\u6574\u6570\u7ec4\u6210\u7684\u4e00\u7ef4\u6570\u7ec4\u3002", "\n\u4e09\u3001\u7b80\u7b54\u9898", "\n1.char *GetMemory(void)", "\n\t{", "\n \t\tchar p[]=\u201chello world\u201d;", "\n\t\treturn p;", "\n\t}", "\n  void Test(void)", "\n\t{", "\n\t \tchar *str=NULL;", "\n\t\tstr= GetMemory();", "\n\t\tprintf(str);", "\n\t}", "\n\u8bf7\u95ee\u8fd0\u884cTest\u51fd\u6570\u540e\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n2\uff0evoid  GetMemory(char *p)", "\n\t {", "\n\t   p=(char *)malloc(100);", "\n\t  }", "\nvoid  Test(void)", "\n  {", "\n    char *str=NULL;", "\n\tGetMemory(str);", "\n\tstrcpy(str,\u201chello world\u201d);", "\n\tprintf(str);", "\n   }", "\n\u8bf7\u95ee\u8fd0\u884cTest\u51fd\u6570\u540e\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n3\uff0e1\u3001\u5934\u6587\u4ef6\u4e2d\u7684ifndef/define/endif\u5e72\u4ec0\u4e48\u7528\uff1f", "\n\u56db\uff0e\u7f16\u7a0b\u9898", "\n1\uff0e\u4e0b\u9762\u51fd\u6570chnum\u5c06\u4e00\u4e2a\u6574\u6570\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u4e00\u4e2a\u6574\u6570\u3002\u8bf7\u5728[1]\u3001[2]\u3001[3]\u3001[4]\u5904\u586b\u5165\u6b63\u786e\u5185\u5bb9\u3002\uff088\u5206\uff09", "\nint chnum(char *str)", "\n{", "\n   int i,j,k,h,len,num=0;", "\n   len=strlen(str);", "\nfor(i=0;[1];i++)", "\n{   k=1;", "\n      j=len-1;", "\nwhile([2])", "\n     {", "\n       k=k*10;", "\n\t    j\u2013;", "\n     }", "\n    h=[3]-\u20180\u2019;", "\n    num=num+h*[4];", "\n}", "\nreturn num;", "\n  }", "\n2.\u4e0b\u5217shape\u7c7b\u662f\u4e00\u4e2a\u8868\u793a\u5f62\u72b6\u7684\u62bd\u8c61\u7c7b\uff0carea()\u4e3a\u6c42\u56fe\u5f62\u9762\u79ef\u7684\u51fd\u6570\uff0ctotal()\u5219\u662f\u4e00\u4e2a\u901a\u7528\u7684\u7528\u4ee5\u6c42\u4e0d\u540c\u5f62\u72b6\u7684\u56fe\u5f62\u9762\u79ef\u603b\u548c\u7684\u51fd\u6570\u3002\u8bf7\u4eceshape\u7c7b\u6d3e\u751f\u4e09\u89d2\u5f62\u7c7b(triangle)\u3001\u77e9\u5f62\u7c7b(rectangle)\uff0c\u5e76\u7ed9\u51fa\u5177\u4f53\u7684\u6c42\u9762\u79ef\u51fd\u6570\u3002\uff087\u5206\uff09", "\nclass shape", "\n{", "\npublic:", "\nvirtual float area()=0", "\n};", "\nfloat  total(shape *s[],int n)", "\n {", "\nfloat sum=0.0;", "\nfor(int i=0;i", "\nsum+=s[i]->area();", "\nreturn sum;", "\n  } "], "title": "C\u8bed\u97f3\u6a21\u62df\u7b14\u8bd5\u9898\u4e8c"},
{"contents": ["typedef struct linknode", "\n{", "\nint data;", "\nstruct linknode *next;", "\n}node;", "\n//\u5c06\u4e00\u4e2a\u94fe\u8868\u9006\u7f6e", "\nnode *reverse(node *head)", "\n{", "\nnode *p,*q,*r;", "\np=head;", "\nq=p->next;", "\nwhile(q!=NULL)", "\n{", "\nr=q->next;", "\nq->next=p;", "\np=q;", "\nq=r;", "\n}", "\nhead->next=NULL;", "\nhead=p;", "\nreturn head;", "\n}"], "title": "\u5199\u51fa\u7a0b\u5e8f\u628a\u4e00\u4e2a\u94fe\u8868\u4e2d\u7684\u63a5\u70b9\u987a\u5e8f\u5012\u6392"},
{"contents": ["\u6bd4\u5982 N = 3\uff0c\u6253\u5370\uff1a", "\n1 2 3", "\n8 9 4", "\n7 6 5", "\nN = 4\uff0c\u6253\u5370\uff1a", "\n1  2  3  4", "\n12 13 14 5", "\n11 16 15 6", "\n10  9  8 7", "\n1 #define N 15", "\nint s[N][N];", "\nvoid main()", "\n{", "\nint k = 0, i = 0, j = 0;", "\nint a = 1;", "\nfor( ; k \n{", "\nwhile( j \nwhile( i \nwhile( j > k-1 ) s[i][j--] = a++; i\u2013; j++;", "\nwhile( i > k ) s[i--][j] = a++; i++; j++;", "\n}", "\nfor( i = 0; i \n{", "\nfor( j = 0; j \ncout \ncout \n}", "\n}", "\n2 define MAX_N 100", "\nint matrix[MAX_N][MAX_N];", "\n/*", "\n*\uff08x,y\uff09\uff1a\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u5750\u6807", "\n* start\uff1a\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u503c", "\n* n\uff1a\u77e9\u9635\u7684\u5927\u5c0f", "\n*/", "\nvoid SetMatrix(int x, int y, int start, int n) {", "\nint i, j;", "\nif (n \nreturn;", "\nif (n == 1) { //\u77e9\u9635\u5927\u5c0f\u4e3a1\u65f6", "\nmatrix[x][y] = start;", "\nreturn;", "\n}", "\nfor (i = x; i \nmatrix[y][i] = start++;", "\nfor (j = y; j \nmatrix[j][x+n-1] = start++;", "\nfor (i = x+n-1; i > x; i\u2013) //\u5e95\u90e8", "\nmatrix[y+n-1][i] = start++;", "\nfor (j = y+n-1; j > y; j\u2013) //\u5de6\u90e8", "\nmatrix[j][x] = start++;", "\nSetMatrix(x+1, y+1, start, n-2); //\u9012\u5f52", "\n}", "\nvoid main() {", "\nint i, j;", "\nint n;", "\nscanf(\u201c%d\u201d, &n);", "\nSetMatrix(0, 0, 1, n);", "\n//\u6253\u5370\u87ba\u65cb\u77e9\u9635", "\nfor(i = 0; i \nfor (j = 0; j \nprintf(\u201c%4d\u201d, matrix[i][j]);", "\nprintf(\u201c\\n\u201d);", "\n}", "\n} "], "title": "\u8f93\u5165N, \u6253\u5370 N*N \u77e9\u9635"},
{"contents": ["int search(char *cpSource, int n, char ch)", "\n{", "\nint i;", "\nfor(i=0; i", "\nreturn i;", "\n} "], "title": "\u8bf7\u7f16\u5199\u4e00\u4e2a C \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5728\u7ed9\u5b9a\u7684\u5185\u5b58\u533a\u57df\u641c\u7d22\u7ed9\u5b9a\u7684\u5b57\u7b26\uff0c\u5e76\u8fd4\u56de\u8be5\u5b57\u7b26\u6240\u5728\u4f4d\u7f6e\u7d22\u5f15\u503c\u3002"},
{"contents": ["int checkCPU()", "\n{", "\n\u3000{", "\n\u3000\u3000union w", "\n\u3000\u3000{", "\n\u3000\u3000\u3000int a;", "\n\u3000\u3000\u3000char b;", "\n\u3000\u3000} c;", "\n\u3000\u3000c.a = 1;", "\n\u3000\u3000return (c.b == 1);", "\n\u3000}", "\n}"], "title": "\u8bf7\u5199\u4e00\u4e2aC\u51fd\u6570\uff0c\u82e5\u5904\u7406\u5668\u662fBig_endian\u7684\uff0c\u5219\u8fd4\u56de0\uff1b\u82e5\u662fLittle_endian\u7684\uff0c\u5219\u8fd4\u56de1"},
{"contents": ["char * search(char *cpSource, char ch)", "\n{", "\nchar *cpTemp=NULL, *cpDest=NULL;", "\nint iTemp, iCount=0;", "\nwhile(*cpSource)", "\n{", "\nif(*cpSource == ch)", "\n{", "\niTemp = 0;", "\ncpTemp = cpSource;", "\nwhile(*cpSource == ch)", "\n++iTemp, ++cpSource;", "\nif(iTemp > iCount)", "\niCount = iTemp, cpDest = cpTemp;", "\nif(!*cpSource)", "\nbreak;", "\n}", "\n++cpSource;", "\n}", "\nreturn cpDest;", "\n} "], "title": "\u7f16\u5199\u4e00\u4e2a C \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5728\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u627e\u5230\u53ef\u80fd\u7684\u6700\u957f\u7684\u5b50\u5b57\u7b26\u4e32\uff0c\u4e14\u8be5\u5b57\u7b26\u4e32\u662f\u7531\u540c\u4e00\u5b57\u7b26\u7ec4\u6210\u7684"},
{"contents": ["\t   \u2460 \u5f15\u7528\u5fc5\u987b\u88ab\u521d\u59cb\u5316\uff0c\u6307\u9488\u4e0d\u5fc5\uff1b", "\n         \u2461 \u5f15\u7528\u521d\u59cb\u5316\u540e\u4e0d\u80fd\u6539\u53d8\uff0c\u6307\u9488\u53ef\u4ee5\u6539\u53d8\u6240\u6307\u7684\u5bf9\u8c61\uff1b", "\n         \u2462 \u4e0d\u5b58\u5728\u6307\u5411\u7a7a\u503c\u7684\u5f15\u7528\uff0c\u4f46\u662f\u5b58\u5728\u6307\u5411\u7a7a\u503c\u7684\u6307\u9488\u3002"], "title": "\u6307\u9488\u548c\u5f15\u7528\u6709\u4ec0\u4e48\u533a\u522b"},
{"contents": ["4.    static\u6709\u4ec0\u4e48\u7528\u9014\uff1f\uff08\u8bf7\u81f3\u5c11\u8bf4\u660e\u4e24\u79cd\uff09", "\n1.\u9650\u5236\u53d8\u91cf\u7684\u4f5c\u7528\u57df", "\n2.\u8bbe\u7f6e\u53d8\u91cf\u7684\u5b58\u50a8\u57df", "\n7.    \u5f15\u7528\u4e0e\u6307\u9488\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n1) \u5f15\u7528\u5fc5\u987b\u88ab\u521d\u59cb\u5316\uff0c\u6307\u9488\u4e0d\u5fc5\u3002", "\n2) \u5f15\u7528\u521d\u59cb\u5316\u4ee5\u540e\u4e0d\u80fd\u88ab\u6539\u53d8\uff0c\u6307\u9488\u53ef\u4ee5\u6539\u53d8\u6240\u6307\u7684\u5bf9\u8c61\u3002", "\n2) \u4e0d\u5b58\u5728\u6307\u5411\u7a7a\u503c\u7684\u5f15\u7528\uff0c\u4f46\u662f\u5b58\u5728\u6307\u5411\u7a7a\u503c\u7684\u6307\u9488\u3002", "\n8.    \u63cf\u8ff0\u5b9e\u65f6\u7cfb\u7edf\u7684\u57fa\u672c\u7279\u6027", "\n\u5728\u7279\u5b9a\u65f6\u95f4\u5185\u5b8c\u6210\u7279\u5b9a\u7684\u4efb\u52a1\uff0c\u5b9e\u65f6\u6027\u4e0e\u53ef\u9760\u6027", "\n9.    \u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u5728\u5185\u5b58\u4e2d\u662f\u5426\u6709\u533a\u522b\uff1f\u5982\u679c\u6709\uff0c\u662f\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u5168\u5c40\u53d8\u91cf\u50a8\u5b58\u5728\u9759\u6001\u6570\u636e\u5e93\uff0c\u5c40\u90e8\u53d8\u91cf\u5728\u5806\u6808", "\n10.   \u4ec0\u4e48\u662f\u5e73\u8861\u4e8c\u53c9\u6811\uff1f", "\n\u5de6\u53f3\u5b50\u6811\u90fd\u662f\u5e73\u8861\u4e8c\u53c9\u6811 \u4e14\u5de6\u53f3\u5b50\u6811\u7684\u6df1\u5ea6\u5dee\u503c\u7684\u7edd\u5bf9\u503c\u4e0d\u5927\u4e8e1", "\n11.   \u5806\u6808\u6ea2\u51fa\u4e00\u822c\u662f\u7531\u4ec0\u4e48\u539f\u56e0\u5bfc\u81f4\u7684\uff1f", "\n\u6ca1\u6709\u56de\u6536\u5783\u573e\u8d44\u6e90", "\n12.   \u4ec0\u4e48\u51fd\u6570\u4e0d\u80fd\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff1f", "\nconstructor", "\n13.   \u5192\u6ce1\u6392\u5e8f\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u4ec0\u4e48\uff1f", "\nO(n^2)", "\n14.   \u5199\u51fafloat x \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684if\u8bed\u53e5\u3002", "\nif(x>0.000001&&x\n16.   Internet\u91c7\u7528\u54ea\u79cd\u7f51\u7edc\u534f\u8bae\uff1f\u8be5\u534f\u8bae\u7684\u4e3b\u8981\u5c42\u6b21\u7ed3\u6784\uff1f", "\ntcp/ip \u5e94\u7528\u5c42/\u4f20\u8f93\u5c42/\u7f51\u7edc\u5c42/\u6570\u636e\u94fe\u8def\u5c42/\u7269\u7406\u5c42", "\n17.   Internet\u7269\u7406\u5730\u5740\u548cIP\u5730\u5740\u8f6c\u6362\u91c7\u7528\u4ec0\u4e48\u534f\u8bae\uff1f", "\nARP (Address Resolution Protocol)\uff08\u5730\u5740\u89e3\u6790\u5354\u8b70\uff09", "\n18.IP\u5730\u5740\u7684\u7f16\u7801\u5206\u4e3a\u54ea\u4fe9\u90e8\u5206\uff1f", "\nIP\u5730\u5740\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff0c\u7f51\u7edc\u53f7\u548c\u4e3b\u673a\u53f7\u3002\u4e0d\u8fc7\u662f\u8981\u548c\u201c\u5b50\u7f51\u63a9\u7801\u201d\u6309\u4f4d\u4e0e\u4e0a\u4e4b\u540e\u624d\u80fd\u533a\u5206", "\n\u54ea\u4e9b\u662f\u7f51\u7edc\u4f4d\u54ea\u4e9b\u662f\u4e3b\u673a\u4f4d\u3002", "2.\u7528\u6237\u8f93\u5165M,N\u503c\uff0c\u4ece1\u81f3N\u5f00\u59cb\u987a\u5e8f\u5faa\u73af\u6570\u6570\uff0c\u6bcf\u6570\u5230M\u8f93\u51fa\u8be5\u6570\u503c\uff0c\u76f4\u81f3\u5168\u90e8\u8f93\u51fa\u3002\u5199\u51fa", "\nC\u7a0b\u5e8f\u3002", "\n\u5faa\u73af\u94fe\u8868\uff0c\u7528\u53d6\u4f59\u64cd\u4f5c\u505a", "\n3.\u4e0d\u80fd\u505aswitch()\u7684\u53c2\u6570\u7c7b\u578b\u662f\uff1a", "\nswitch\u7684\u53c2\u6570\u4e0d\u80fd\u4e3a\u5b9e\u578b\u3002", "\n\u83ef\u70ba", "\n1\u3001\u5c40\u90e8\u53d8\u91cf\u80fd\u5426\u548c\u5168\u5c40\u53d8\u91cf\u91cd\u540d\uff1f", "\n\u7b54\uff1a\u80fd\uff0c\u5c40\u90e8\u4f1a\u5c4f\u853d\u5168\u5c40\u3002\u8981\u7528\u5168\u5c40\u53d8\u91cf\uff0c\u9700\u8981\u4f7f\u7528\"::\"", "\n\u5c40\u90e8\u53d8\u91cf\u53ef\u4ee5\u4e0e\u5168\u5c40\u53d8\u91cf\u540c\u540d\uff0c\u5728\u51fd\u6570\u5185\u5f15\u7528\u8fd9\u4e2a\u53d8\u91cf\u65f6\uff0c\u4f1a\u7528\u5230\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u800c\u4e0d", "\n\u4f1a\u7528\u5230\u5168\u5c40\u53d8\u91cf\u3002\u5bf9\u4e8e\u6709\u4e9b\u7f16\u8bd1\u5668\u800c\u8a00\uff0c\u5728\u540c\u4e00\u4e2a\u51fd\u6570\u5185\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c", "\n\u6bd4\u5982\u5728\u4e24\u4e2a\u5faa\u73af\u4f53\u5185\u90fd\u5b9a\u4e49\u4e00\u4e2a\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u800c\u90a3\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u5c31\u5728\u90a3\u4e2a\u5faa\u73af", "\n\u4f53\u5185", "\n2\u3001\u5982\u4f55\u5f15\u7528\u4e00\u4e2a\u5df2\u7ecf\u5b9a\u4e49\u8fc7\u7684\u5168\u5c40\u53d8\u91cf\uff1f", "\n\u7b54\uff1aextern", "\n\u53ef\u4ee5\u7528\u5f15\u7528\u5934\u6587\u4ef6\u7684\u65b9\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u7528extern\u5173\u952e\u5b57\uff0c\u5982\u679c\u7528\u5f15\u7528\u5934\u6587\u4ef6\u65b9\u5f0f\u6765\u5f15\u7528\u67d0\u4e2a\u5728", "\n\u5934\u6587\u4ef6\u4e2d\u58f0\u660e\u7684\u5168\u5c40\u53d8\u7406\uff0c\u5047\u5b9a\u4f60\u5c06\u90a3\u4e2a\u53d8\u5199\u9519\u4e86\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4\u4f1a\u62a5\u9519\uff0c\u5982\u679c\u4f60\u7528ex", "\ntern\u65b9\u5f0f\u5f15\u7528\u65f6\uff0c\u5047\u5b9a\u4f60\u72af\u4e86\u540c\u6837\u7684\u9519\u8bef\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4\u4e0d\u4f1a\u62a5\u9519\uff0c\u800c\u5728\u8fde\u63a5\u671f\u95f4\u62a5\u9519", "\n3\u3001\u5168\u5c40\u53d8\u91cf\u53ef\u4e0d\u53ef\u4ee5\u5b9a\u4e49\u5728\u53ef\u88ab\u591a\u4e2a.C\u6587\u4ef6\u5305\u542b\u7684\u5934\u6587\u4ef6\u4e2d\uff1f\u4e3a\u4ec0\u4e48\uff1f", "\n\u7b54\uff1a\u53ef\u4ee5\uff0c\u5728\u4e0d\u540c\u7684C\u6587\u4ef6\u4e2d\u4ee5static\u5f62\u5f0f\u6765\u58f0\u660e\u540c\u540d\u5168\u5c40\u53d8\u91cf\u3002", "\n\u53ef\u4ee5\u5728\u4e0d\u540c\u7684C\u6587\u4ef6\u4e2d\u58f0\u660e\u540c\u540d\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u524d\u63d0\u662f\u5176\u4e2d\u53ea\u80fd\u6709\u4e00\u4e2aC\u6587\u4ef6\u4e2d\u5bf9\u6b64\u53d8\u91cf\u8d4b\u521d", "\n\u503c\uff0c\u6b64\u65f6\u8fde\u63a5\u4e0d\u4f1a\u51fa\u9519", "\n4\u3001\u8bed\u53e5for( \uff1b1 \uff1b)\u6709\u4ec0\u4e48\u95ee\u9898\uff1f\u5b83\u662f\u4ec0\u4e48\u610f\u601d\uff1f", "\n\u7b54\uff1a\u548cwhile(1)\u76f8\u540c\u3002", "\n5\u3001do\u2026\u2026while\u548cwhile\u2026\u2026do\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u7b54\uff1a\u524d\u4e00\u4e2a\u5faa\u73af\u4e00\u904d\u518d\u5224\u65ad\uff0c\u540e\u4e00\u4e2a\u5224\u65ad\u4ee5\u540e\u518d\u5faa\u73af", "\n6\u3001\u8bf7\u5199\u51fa\u4e0b\u5217\u4ee3\u7801\u7684\u8f93\u51fa\u5185\u5bb9", "\n#include", "static\u5168\u5c40\u53d8\u91cf\u4e0e\u666e\u901a\u7684\u5168\u5c40\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u5168\u5c40\u53d8\u91cf\u53ea\u521d\u4f7f\u5316\u4e00\u6b21\uff0c\u9632\u6b62\u5728\u5176", "\n\u4ed6\u6587\u4ef6\u5355\u5143\u4e2d\u88ab\u5f15\u7528;", "\nstatic\u5c40\u90e8\u53d8\u91cf\u548c\u666e\u901a\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u5c40\u90e8\u53d8\u91cf\u53ea\u88ab\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u4e0b\u4e00\u6b21\u4f9d", "\n\u636e\u4e0a\u4e00\u6b21\u7ed3\u679c\u503c\uff1b", "\nstatic\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u51fd\u6570\u5728\u5185\u5b58\u4e2d\u53ea\u6709\u4e00\u4efd\uff0c\u666e\u901a\u51fd\u6570\u5728\u6bcf\u4e2a\u88ab\u8c03", "\n\u7528\u4e2d\u7ef4\u6301\u4e00\u4efd\u62f7\u8d1d", "\n2\u3001\u7a0b\u5e8f\u7684\u5c40\u90e8\u53d8\u91cf\u5b58\u5728\u4e8e\uff08\u5806\u6808\uff09\u4e2d\uff0c\u5168\u5c40\u53d8\u91cf\u5b58\u5728\u4e8e\uff08\u9759\u6001\u533a \uff09\u4e2d\uff0c\u52a8\u6001\u7533\u8bf7\u6570\u636e\u5b58", "\n\u5728\u4e8e\uff08 \u5806\uff09\u4e2d\u3002", "\n3\u3001\u8bbe\u6709\u4ee5\u4e0b\u8bf4\u660e\u548c\u5b9a\u4e49\uff1a", "\ntypedef union {long i; int k[5]; char c;} DATE;", "\nstruct data { int cat; DATE cow; double dog;} too;", "\nDATE max;", "\n\u5219\u8bed\u53e5 printf(\u201c%d\u201d,sizeof(struct date)+sizeof(max));\u7684\u6267\u884c\u7ed3\u679c\u662f\uff1a___52____", "\n\u7b54\uff1aDATE\u662f\u4e00\u4e2aunion, \u53d8\u91cf\u516c\u7528\u7a7a\u95f4. \u91cc\u9762\u6700\u5927\u7684\u53d8\u91cf\u7c7b\u578b\u662fint[5], \u5360\u752820\u4e2a\u5b57\u8282. \u6240", "\n\u4ee5\u5b83\u7684\u5927\u5c0f\u662f20", "\ndata\u662f\u4e00\u4e2astruct, \u6bcf\u4e2a\u53d8\u91cf\u5206\u5f00\u5360\u7528\u7a7a\u95f4. \u4f9d\u6b21\u4e3aint4 + DATE20 + double8 = 32.", "\n\u6240\u4ee5\u7ed3\u679c\u662f 20 + 32 = 52.", "\n\u5f53\u7136\u2026\u5728\u67d0\u4e9b16\u4f4d\u7f16\u8f91\u5668\u4e0b, int\u53ef\u80fd\u662f2\u5b57\u8282,\u90a3\u4e48\u7ed3\u679c\u662f int2 + DATE10 + double8 =", "\n 20", "\n4\u3001\u961f\u5217\u548c\u6808\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u961f\u5217\u5148\u8fdb\u5148\u51fa\uff0c\u6808\u540e\u8fdb\u5148\u51fa", "\n5\u3001\u5199\u51fa\u4e0b\u5217\u4ee3\u7801\u7684\u8f93\u51fa\u5185\u5bb9", "\n#include", "     for(ucCmdNum=0;ucCmdNum", "\n      {", "\n      ......;", "\n      }", "\n\u6b7b\u5faa\u73af", "\n   3.\u4ee5\u4e0b\u662f\u6c42\u4e00\u4e2a\u6570\u7684\u5e73\u65b9\u7684\u7a0b\u5e8f,\u8bf7\u627e\u51fa\u9519\u8bef:", "\n    #define SQUARE(a)((a)*(a))", "\n    int a=5;", "\n    int b;", "\n    b=SQUARE(a++);", "\n   4.typedef unsigned char BYTE", "\n     int examply_fun(BYTE gt_len; BYTE *gt_code)", "\n      {", "\n      BYTE *gt_buf;", "\n      gt_buf=(BYTE *)MALLOC(Max_GT_Length);", "\n      ......", "\n      if(gt_len>Max_GT_Length)", "\n        {", "\n        return GT_Length_ERROR;", "\n        }", "\n        \u2026\u2026.", "\n      }", "\n\u4e94.\u95ee\u7b54\u9898:", "\n   1.IP Phone\u7684\u539f\u7406\u662f\u4ec0\u4e48?", "\nIPV6", "\n   2.TCP/IP\u901a\u4fe1\u5efa\u7acb\u7684\u8fc7\u7a0b\u600e\u6837\uff0c\u7aef\u53e3\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f", "\n\u4e09\u6b21\u63e1\u624b\uff0c\u786e\u5b9a\u662f\u54ea\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u8be5\u534f\u8bae", "\n   3.1\u53f7\u4fe1\u4ee4\u548c7\u53f7\u4fe1\u4ee4\u6709\u4ec0\u4e48\u533a\u522b\uff0c\u6211\u56fd\u67d0\u524d\u5e7f\u6cdb\u4f7f\u7528\u7684\u662f\u90a3\u4e00\u79cd\uff1f", "\n   4.\u5217\u4e3e5\u79cd\u4ee5\u4e0a\u7684\u7535\u8bdd\u65b0\u4e1a\u52a1\uff1f"], "title": "c\u8bed\u8a00\u9762\u8bd5\u9898\u5927\u6c47\u603b"},
{"contents": ["\u4e0b\u9762\u662f\u4e00\u4e2aC\u7a0b\u5e8f\uff0c\u5176\u60f3\u8981\u8f93\u51fa20\u4e2a\u51cf\u53f7\uff0c\u4e0d\u8fc7\uff0c\u7c97\u5fc3\u7684\u7a0b\u5e8f\u5458\u628a\u4ee3\u7801\u5199\u9519\u4e86\uff0c\u4f60\u9700\u8981\u628a\u4e0b\u9762\u7684\u4ee3\u7801\u4fee\u6539\u6b63\u786e\uff0c\u4e0d\u8fc7\uff0c\u4f60\u53ea\u80fd\u589e\u52a0\u6216\u662f\u4fee\u6539\u5176\u4e2d\u7684\u4e00\u4e2a\u5b57\u7b26\uff0c\u8bf7\u4f60\u7ed9\u51fa\u4e09\u79cd\u7b54\u6848\u3002", "int n = 20;", "for(int i = 0; i \n    printf(\u201c-\u201d);", "\n}"], "title": "\u201c\u706b\u67f4\u68cd\u5f0f\u201d\u7a0b\u5e8f\u5458\u9762\u8bd5\u9898"},
{"contents": ["1\uff09\u00a0\u00a0 \u00a0\u8bfb\u6587\u4ef6file1.txt\u7684\u5185\u5bb9\uff08\u4f8b\u5982\uff09\uff1a", "\n12", "\n34", "\n56", "\n\u8f93\u51fa\u5230file2.txt\uff1a", "\n56", "\n34", "\n12", "\n\uff08\u9006\u5e8f\uff09", "\n2\uff09\u8f93\u51fa\u548c\u4e3a\u4e00\u4e2a\u7ed9\u5b9a\u6574\u6570\u7684\u6240\u6709\u7ec4\u5408", "\n\u4f8b\u5982n=5", "\n5=1+4\uff1b5=2+3\uff08\u76f8\u52a0\u7684\u6570\u4e0d\u80fd\u91cd\u590d\uff09", "\n\u5219\u8f93\u51fa", "\n1\uff0c4\uff1b2\uff0c3\u3002", "\n\u7b2c\u4e00\u9898,\u6ce8\u610f\u53ef\u589e\u957f\u6570\u7ec4\u7684\u5e94\u7528.", "\n#include <stdio.h>", "\n#include <stdlib.h>", "\nint main(void)", "\n{\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int MAX = 10;", "\nint *a = (int *)malloc(MAX * sizeof(int));", "\nint *b;", "\nFILE *fp1;", "\nFILE *fp2;", "\nfp1 = fopen(\u201ca.txt\u201d,\u201dr\u201d);", "\nif(fp1 == NULL)", "\n{printf(\u201cerror1\u2033);", "\nexit(-1);", "\n}", "\nfp2 = fopen(\u201cb.txt\u201d,\u201dw\u201d);", "\nif(fp2 == NULL)", "\n{printf(\u201cerror2\u2033);", "\nexit(-1);", "\n}", "\nint i = 0;", "\nint j = 0;", "\nwhile(fscanf(fp1,\u201d%d\u201d,&a[i]) != EOF)", "\n{i++;", "\nj++;", "\nif(i >= MAX)", "\n{", "\nMAX = 2 * MAX;", "\nb = (int*)realloc(a,MAX * sizeof(int));", "\nif(b == NULL)", "\n{printf(\u201cerror3\u2033);", "\nexit(-1);", "\n}a = b;", "\n}}", "\nfor(;\u2013j >= 0;)", "\nfprintf(fp2,\u201d%d\\n\u201d,a[j]);", "\nfclose(fp1);", "\nfclose(fp2);", "\nreturn 0;", "\n}", "\n\u7b2c\u4e8c\u9898.", "\n#include <stdio.h>", "\nint main(void)", "\n{unsigned long int i,j,k;", "\nprintf(\u201cplease input the number\\n\u201d);", "\nscanf(\u201c%d\u201d,&i);", "\nif( i % 2 == 0)", "\nj = i / 2;", "\nelse", "\nj = i / 2 + 1;", "\nprintf(\u201cThe result is \\n\u201d);", "\nfor(k = 0; k < j; k++)", "\nprintf(\u201c%d = %d + %d\\n\u201d,i,k,i \u2013 k);", "\nreturn 0;", "\n}", "\n#include <stdio.h>", "\nvoid main()", "\n{unsigned long int a,i=1;", "\nscanf(\u201c%d\u201d,&a);", "\nif(a%2==0)", "\n{\u00a0\u00a0\u00a0\u00a0 for(i=1;i<a/2;i++)", "\nprintf(\u201c%d\u201d,a,a-i);", "\n}", "\nelse", "\nfor(i=1;i<=a/2;i++)", "\nprintf(\u201d %d, %d\u201d,i,a-i);", "\n}", "\n\u5144\u5f1f,\u8fd9\u6837\u7684\u9898\u76ee\u82e5\u662f\u505a\u4e0d\u51fa\u6765\u5b9e\u5728\u662f\u6709\u4e9b\u4e0d\u5e94\u8be5, \u7ed9\u4f60\u4e00\u4e2a\u9012\u89c4\u53cd\u5411\u8f93\u51fa\u5b57\u7b26\u4e32\u7684\u4f8b\u5b50,\u53ef\u8c13\u662f\u53cd\u5e8f\u7684\u7ecf\u5178\u4f8b\u7a0b.", "\nvoid inverse(char *p)", "\n{\u00a0\u00a0\u00a0 if( *p = = \u2018\\0\u2032 )", "\nreturn;", "\ninverse( p+1 );", "\nprintf( \u201c%c\u201d, *p );", "\n}", "\nint main(int argc, char *argv[])", "\n{", "\ninverse(\u201cabc\\0\u2033);", "\nreturn 0;", "\n}", "\n\u501f\u7b7e\u4e86\u697c\u4e0a\u7684\u201c\u9012\u89c4\u53cd\u5411\u8f93\u51fa\u201d", "\n#include <stdio.h>", "\nvoid test(FILE *fread, FILE *fwrite)", "\n{\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 char buf[1024] = {0};", "\nif (!fgets(buf, sizeof(buf), fread))", "\nreturn;", "\ntest( fread, fwrite );", "\nfputs(buf, fwrite);", "\n}", "\nint main(int argc, char *argv[])", "\n{\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 FILE *fr = NULL;", "\nFILE *fw = NULL;", "\nfr = fopen(\u201cdata\u201d, \u201crb\u201d);", "\nfw = fopen(\u201cdataout\u201d, \u201cwb\u201d);", "\ntest(fr, fw);", "\nfclose(fr);", "\nfclose(fw);", "\nreturn 0;", "\n}", "\n\u5728\u5bf9\u9f50\u4e3a4\u7684\u60c5\u51b5\u4e0b", "\nstruct BBB", "\n{\u00a0\u00a0 long num\uff1b", "\nchar *name;", "\nshort int data;", "\nchar ha;", "\nshort ba[5];", "\n}*p;", "\np=0\u00d71000000;", "\np+0\u00d7200=____;", "\n(Ulong)p+0\u00d7200=____;", "\n(char*)p+0\u00d7200=____;", "\n\u89e3\u7b54\uff1a\u5047\u8bbe\u572832\u4f4dCPU\u4e0a\uff0c", "\nsizeof(long) = 4 bytes", "\nsizeof(char *) = 4 bytes", "\nsizeof(short int) = sizeof(short) = 2 bytes", "\nsizeof(char) = 1 bytes", "\n\u7531\u4e8e\u662f4\u5b57\u8282\u5bf9\u9f50\uff0c", "\nsizeof(struct BBB) = sizeof(*p)", "\n= 4 + 4 + 2 + 1 + 1/*\u8865\u9f50*/ + 2*5 + 2/*\u8865\u9f50*/ = 24 bytes\u00a0 (\u7ecfDev-C++\u9a8c\u8bc1)", "\np=0\u00d71000000;", "\np+0\u00d7200=____;", "\n= 0\u00d71000000 + 0\u00d7200*24", "\n(Ulong)p+0\u00d7200=____;", "\n= 0\u00d71000000 + 0\u00d7200", "\n(char*)p+0\u00d7200=____;", "\n= 0\u00d71000000 + 0\u00d7200*4", "\n\u4f60\u53ef\u4ee5\u53c2\u8003\u4e00\u4e0b\u6307\u9488\u8fd0\u7b97\u7684\u7ec6\u8282", "\n\u5199\u4e00\u6bb5\u7a0b\u5e8f\uff0c\u627e\u51fa\u6570\u7ec4\u4e2d\u7b2ck\u5927\u5c0f\u7684\u6570\uff0c\u8f93\u51fa\u6570\u6240\u5728\u7684\u4f4d\u7f6e\u3002\u4f8b\u5982{2\uff0c4\uff0c3\uff0c4\uff0c7}\u4e2d\uff0c\u7b2c\u4e00\u5927\u7684\u6570\u662f7\uff0c\u4f4d\u7f6e\u57284\u3002\u7b2c\u4e8c\u5927\u3001\u7b2c\u4e09\u5927\u7684\u6570\u90fd\u662f4\uff0c\u4f4d\u7f6e\u57281\u30013\u968f\u4fbf\u8f93\u51fa\u54ea\u4e00\u4e2a\u5747\u53ef\u3002\u51fd\u6570\u63a5\u53e3\u4e3a\uff1aint find_orderk(const int* narry,const int n,const int k)", "\n\u8981\u6c42\u7b97\u6cd5\u590d\u6742\u5ea6\u4e0d\u80fd\u662fO(n^2\uff09", "\n\u8c22\u8c22\uff01", "\n\u53ef\u4ee5\u5148\u7528\u5feb\u901f\u6392\u5e8f\u8fdb\u884c\u6392\u5e8f\uff0c\u5176\u4e2d\u7528\u53e6\u5916\u4e00\u4e2a\u8fdb\u884c\u5730\u5740\u67e5\u627e", "\n\u4ee3\u7801\u5982\u4e0b\uff0c\u5728VC++6.0\u8fd0\u884c\u901a\u8fc7\u3002\u7ed9\u5206\u5427^-^", "\n//\u5feb\u901f\u6392\u5e8f", "\n#include<iostream>", "\nusingnamespacestd;", "\nintPartition (int*L,intlow,int high)", "\n{inttemp = L[low];", "\nintpt = L[low];", "\nwhile (low < high)", "\n{while (low < high && L[high] >= pt)", "\n\u2013high;", "\nL[low] = L[high];", "\nwhile (low < high && L[low] <= pt)", "\n++low;", "\nL[low] = temp;", "\n}", "\nL[low] = temp;", "\nreturnlow;", "\n}", "\nvoidQSort (int*L,intlow,int high)", "\n{if (low < high)", "\n{", "\nintpl = Partition (L,low,high);", "\nQSort (L,low,pl \u2013 1);", "\nQSort (L,pl + 1,high);", "\n}}", "\nintmain ()", "\n{intnarry[100],addr[100];", "\nintsum = 1,t;", "\ncout << \u201cInput number:\u201d << endl;", "\ncin >> t;", "\nwhile (t != -1)", "\n{narry[sum] = t;", "\naddr[sum - 1] = t;", "\nsum++;", "\ncin >> t;", "\n}", "\nsum -= 1;", "\nQSort (narry,1,sum);", "\nfor (int i = 1; i <= sum;i++)", "\ncout << narry[i] << \u2018\\t\u2019;", "\ncout << endl;", "\nintk;", "\ncout << \u201cPlease input place you want:\u201d << endl;", "\ncin >> k;", "\nintaa = 1;", "\nintkk = 0;", "\nfor (;;)", "\n{if (aa == k)", "\nbreak;", "\nif (narry[kk] != narry[kk + 1])", "\n{aa += 1;", "\nkk++;", "\n}", "\n}", "\ncout << \u201cThe NO.\u201d << k << \u201cnumber is:\u201d << narry[sum - kk] << endl;", "\ncout << \u201cAnd it\u2019s place is:\u201d ;", "\nfor (i = 0;i < sum;i++)", "\n{if (addr[i] == narry[sum - kk])", "\ncout << i << \u2018\\t\u2019;", "\n}return0;", "\n}", "\n1\u3001\u627e\u9519", "\nVoid test1()", "\n{", "\nchar string[10];", "\nchar* str1=\u201d0123456789\u2033;", "\nstrcpy(string, str1);// \u6ea2\u51fa\uff0c\u5e94\u8be5\u5305\u62ec\u4e00\u4e2a\u5b58\u653e\u2019\\0\u2032\u7684\u5b57\u7b26string[11]", "\n}", "\nVoid test2()", "\n{", "\nchar string[10], str1[10];", "\nfor(I=0; I<10;I++)", "\n{str1[i] =\u2019a';", "\n}", "\nstrcpy(string, str1);// I\uff0ci\u6ca1\u6709\u58f0\u660e\u3002", "\n}", "\nVoid test3(char* str1)", "\n{char string[10];", "\nif(strlen(str1)<=10)// \u6539\u6210<10,\u5b57\u7b26\u6ea2\u51fa\uff0c\u5c06strlen\u6539\u4e3asizeof\u4e5f\u53ef\u4ee5", "\n{strcpy(string, str1);", "\n}}", "\n2. void g(int**);", "\nint main()", "\n{int line[10],i;", "\nint *p=line; //p\u662f\u5730\u5740\u7684\u5730\u5740", "\nfor (i=0;i<10;i++)", "\n{*p=i;", "\ng(&p);//\u6570\u7ec4\u5bf9\u5e94\u7684\u503c\u52a01", "\n}", "\nfor(i=0;i<10;i++)", "\nprintf(\u201c%d\\n\u201d,line[i]);", "\nreturn 0;", "\n}", "\nvoid g(int**p)", "\n{ (**p)++;", "\n(*p)++;// \u65e0\u6548", "\n}", "\n\u8f93\u51fa\uff1a", "\n1", "\n2", "\n3", "\n4", "\n5", "\n6", "\n7", "\n8", "\n9", "\n10", "\n3. \u5199\u51fa\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u679c", "\nint sum(int a)", "\n{auto int c=0;", "\nstatic int b=3;", "\nc+=1;", "\nb+=2;", "\nreturn(a+b+c);", "\n}", "\nvoid main()", "\n{int I;", "\nint a=2;", "\nfor(I=0;I<5;I++)", "\n{printf(\u201c%d,\u201d, sum(a));", "\n}", "\n}", "\n// static\u4f1a\u4fdd\u5b58\u4e0a\u6b21\u7ed3\u679c\uff0c\u8bb0\u4f4f\u8fd9\u4e00\u70b9\uff0c\u5269\u4e0b\u7684\u81ea\u5df1\u5199", "\n\u8f93\u51fa\uff1a8,10,12,14,16,", "\n4.", "\nint func(int a)", "\n{int b;", "\nswitch(a)", "\n{case 1: 30;", "\ncase 2: 20;", "\ncase 3: 16;", "\ndefault: 0", "\n}", "\nreturn b;", "\n}", "\n\u5219func(1)=?", "\n// b\u5b9a\u4e49\u540e\u5c31\u6ca1\u6709\u8d4b\u503c\u3002", "\n5:", "\nint a[3];", "\na[0]=0; a[1]=1; a[2]=2;", "\nint *p, *q;", "\np=a;", "\nq=&a[2];", "\n\u5219a[q-p]=a[2]", "\n\u89e3\u91ca\uff1a\u6307\u9488\u4e00\u6b21\u79fb\u52a8\u4e00\u4e2aint\u4f46\u8ba1\u6570\u4e3a1", "\n\u4eca\u5929\u65e9\u4e0a\u7684\u9762\u8bd5\u98989\u9053\uff0c\u6bd4\u8f83\u96be\uff0c\u5411\u725b\u4eba\u8bf7\u6559\uff0c\u56fd\u5185\u7684\u4e00\u725b\u516c\u53f8\uff0c\u5750\u843d\u5728\u5317\u4eac\u5317\u56db\u73af\u67d0\u5927\u53a6\uff1a", "\n1\u3001\u7ebf\u5f62\u8868a\u3001b\u4e3a\u4e24\u4e2a\u6709\u5e8f\u5347\u5e8f\u7684\u7ebf\u5f62\u8868\uff0c\u7f16\u5199\u4e00\u7a0b\u5e8f\uff0c\u4f7f\u4e24\u4e2a\u6709\u5e8f\u7ebf\u5f62\u8868\u5408\u5e76\u6210\u4e00\u4e2a\u6709\u5e8f\u5347\u5e8f\u7ebf\u5f62\u8868h\uff1b", "\n\u7b54\u6848\u5728 \u8bf7\u5316\u5927\u5b66 \u4e25\u9510\u654f\u300a\u6570\u636e\u7ed3\u6784\u7b2c\u4e8c\u7248\u300b\u7b2c\u4e8c\u7ae0\u4f8b\u9898\uff0c\u6570\u636e\u7ed3\u6784\u5f53\u4e2d\uff0c\u8fd9\u4e2a\u53eb\u505a\uff1a\u4e24\u8def\u5f52\u5e76\u6392\u5e8f", "\nLinklist *unio(Linklist *p,Linklist *q){", "\nlinklist *R,*pa,*qa,*ra;", "\npa=p;", "\nqa=q;", "\nR=ra=p;", "\nwhile(pa->next!=NULL&&qa->next!=NULL){", "\nif(pa->data>qa->data){", "\nra->next=qa;", "\nqa=qa->next;", "\n}", "\nelse{ra->next=pa;", "\npa=pa->next;", "\n}}", "\nif(pa->next!=NULL)", "\nra->next=pa;", "\nif(qa->next!=NULL)", "\nra->next==qa;", "\nreturn R;", "\n}", "\n2\u3001\u8fd0\u7528\u56db\u8272\u5b9a\u7406\uff0c\u4e3aN\u4e2a\u5c40\u57df\u4e3e\u884c\u914d\u8272\uff0c\u989c\u8272\u4e3a1\u30012\u30013\u30014\u56db\u79cd\uff0c\u53e6\u6709\u6570\u7ec4adj[][N]\uff0c\u5982adj[i][j]=1\u5219\u8868\u793ai\u533a\u57df\u4e0ej\u533a\u57df\u76f8\u90bb\uff0c\u6570\u7ec4color[N]\uff0c\u5982color[i]=1,\u8868\u793ai\u533a\u57df\u7684\u989c\u8272\u4e3a1\u53f7\u989c\u8272\u3002", "\n\u56db\u8272\u586b\u5145", "\n3\u3001\u7528\u9012\u5f52\u7b97\u6cd5\u5224\u65ad\u6570\u7ec4a[N]\u662f\u5426\u4e3a\u4e00\u4e2a\u9012\u589e\u6570\u7ec4\u3002", "\n\u9012\u5f52\u7684\u65b9\u6cd5\uff0c\u8bb0\u5f55\u5f53\u524d\u6700\u5927\u7684\uff0c\u5e76\u4e14\u5224\u65ad\u5f53\u524d\u7684\u662f\u5426\u6bd4\u8fd9\u4e2a\u8fd8\u5927\uff0c\u5927\u5219\u7ee7\u7eed\uff0c\u5426\u5219\u8fd4\u56defalse\u7ed3\u675f\uff1a", "\nbool fun( int a[], int n )", "\n{", "\nif( n= =1 )", "\nreturn true;", "\nif( n= =2 )", "\nreturn a[n-1] >= a[n-2];", "\nreturn fun( a,n-1) && ( a[n-1] >= a[n-2] );", "\n}", "\n4\u3001\u7f16\u5199\u7b97\u6cd5\uff0c\u4ece10\u4ebf\u4e2a\u6d6e\u70b9\u6570\u5f53\u4e2d\uff0c\u9009\u51fa\u5176\u4e2d\u6700\u5927\u768410000\u4e2a\u3002", "\n1.\u7ed9\u4e24\u4e2a\u6570\u7ec4\u548c\u4ed6\u4eec\u7684\u5927\u5c0f\uff0c\u8fd8\u6709\u4e00\u52a8\u6001\u5f00\u8f9f\u7684\u5185\u5b58\uff0c\u6c42\u4ea4\u96c6\uff0c\u628a\u4ea4\u96c6\u653e\u5230\u52a8\u6001\u5185\u5b58dongtai\uff0c\u5e76\u4e14\u8fd4\u56de\u4ea4\u96c6\u4e2a\u6570", "\nlong jiaoji(long* a[],long b[],long* alength,long blength,long* dongtai[])", "\n2.\u5355\u8fde\u8868\u7684\u5efa\u7acb\uff0c\u628a\u2019a'\u2013\u2019z\u201926\u4e2a\u5b57\u6bcd\u63d2\u5165\u5230\u8fde\u8868\u4e2d\uff0c\u5e76\u4e14\u5012\u53d9\uff0c\u8fd8\u8981\u6253\u5370\uff01", "\n\u65b9\u6cd51\uff1a", "\ntypedef struct val", "\n{\u00a0\u00a0 int date_1;", "\nstruct val *next;", "\n}*p;", "\nvoid main(void)", "\n{\u00a0\u00a0 char c;", "\nfor(c=122;c>=97;c\u2013)", "\n{ p.date=c;", "\np=p->next;", "\n}", "\np.next=NULL;", "\n} }", "\n\u65b9\u6cd52\uff1a", "\nnode *p = NULL;", "\nnode *q = NULL;", "\nnode *head = (node*)malloc(sizeof(node));", "\nhead->data = \u2018 \u2018;head->next=NULL;", "\nnode *first = (node*)malloc(sizeof(node));", "\nfirst->data = \u2018a\u2019;first->next=NULL;head->next = first;", "\np = first;", "\nint longth = \u2018z\u2019 \u2013 \u2018b\u2019;", "\nint i=0;", "\nwhile ( i<=longth )", "\n{", "\nnode *temp = (node*)malloc(sizeof(node));", "\ntemp->data = \u2018b\u2019+i;temp->next=NULL;q=temp;", "\nhead->next = temp; temp->next=p;p=q;", "\ni++;", "\n}", "\nprint(head);", "\n3.\u53ef\u6015\u7684\u9898\u76ee\u7ec8\u4e8e\u6765\u4e86", "\n\u8c61\u641c\u7d22\u7684\u8f93\u5165\u4fe1\u606f\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u7edf\u8ba1300\u4e07\u8f93\u5165\u4fe1\u606f\u4e2d\u7684\u6700\u70ed\u95e8\u7684\u524d\u5341\u6761\uff0c\u6211\u4eec\u6bcf\u6b21\u8f93\u5165\u7684\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e3a\u4e0d\u8d85\u8fc7255byte,\u5185\u5b58\u4f7f\u7528\u53ea\u67091G,", "\n\u8bf7\u63cf\u8ff0\u601d\u60f3\uff0c\u5199\u51fa\u7b97\u53d1\uff08c\u8bed\u8a00\uff09\uff0c\u7a7a\u95f4\u548c\u65f6\u95f4\u590d\u6742\u5ea6\uff0c", "\n4.\u56fd\u5185\u7684\u4e00\u4e9b\u5e16\u5427\uff0c\u5982baidu,\u6709\u51e0\u5341\u4e07\u4e2a\u4e3b\u9898\uff0c\u5047\u8bbe\u6bcf\u4e00\u4e2a\u4e3b\u9898\u90fd\u6709\u4e0a\u4ebf\u7684\u8ddf\u5e16\u5b50\uff0c\u600e\u4e48\u6837\u8bbe\u8ba1\u8fd9\u4e2a\u7cfb\u7edf\u901f\u5ea6\u6700\u597d\uff0c\u8bf7\u63cf\u8ff0\u601d\u60f3\uff0c\u5199\u51fa\u7b97\u53d1\uff08c\u8bed\u8a00\uff09\uff0c\u7a7a\u95f4\u548c\u65f6\u95f4\u590d\u6742\u5ea6\uff0c", "\n#include\u00a0\u00a0 string.h", "\nmain(void)", "\n{\u00a0\u00a0 char\u00a0\u00a0 *src=\u201dhello,world\u201d;", "\nchar\u00a0\u00a0 *dest=NULL;", "\ndest=(char\u00a0\u00a0 *)malloc(strlen(src));", "\nint\u00a0\u00a0 len=strlen(str);", "\nchar\u00a0\u00a0 *d=dest;", "\nchar\u00a0\u00a0 *s=src[len];", "\nwhile(len\u2013!=0)", "\nd++=s\u2013;", "\nprintf(\u201c%s\u201d,dest);", "\n}", "\n\u627e\u51fa\u9519\u8bef\uff01\uff01", "\n#include\u00a0\u00a0 \u201cstring.h\u201d", "\n#include \u201cstdio.h\u201d", "\n#include \u201cmalloc.h\u201d", "\nmain(void)", "\n{", "\nchar\u00a0\u00a0 *src=\u201dhello,world\u201d;", "\nchar\u00a0\u00a0 *dest=NULL;", "\ndest=(char\u00a0\u00a0 *)malloc(sizeof(char)*(strlen(src)+1));", "\nint\u00a0\u00a0 len=strlen(src);", "\nchar\u00a0\u00a0 *d=dest;", "\nchar\u00a0\u00a0 *s=src+len-1;", "\nwhile(len\u2013!=0)", "\n*d++=*s\u2013;", "\n*d=\u2019\\0\u2032;", "\nprintf(\u201c%s\u201d,dest);", "\n}", "\n1.\u00a0\u00a0\u00a0 \u7b80\u8ff0\u4e00\u4e2aLinux\u9a71\u52a8\u7a0b\u5e8f\u7684\u4e3b\u8981\u6d41\u7a0b\u4e0e\u529f\u80fd\u3002", "\n2.\u00a0\u00a0\u00a0 \u8bf7\u5217\u4e3e\u4e00\u4e2a\u8f6f\u4ef6\u4e2d\u65f6\u95f4\u6362\u7a7a\u95f4\u6216\u8005\u7a7a\u95f4\u6362\u65f6\u95f4\u7684\u4f8b\u5b50\u3002", "\nvoid swap(int a,int b)", "\n{", "\nint c; c=a;a=b;b=a;", "\n}", "\n\u2014>\u7a7a\u4f18", "\nvoid swap(int a,int b)", "\n{", "\na=a+b;b=a-b;a=a-b;", "\n}", "\n6.\u00a0\u00a0\u00a0 \u8bf7\u95ee\u4e00\u4e0b\u7a0b\u5e8f\u5c06\u8f93\u51fa\u4ec0\u4e48\u7ed3\u679c\uff1f", "\nchar *RetMenory(void)", "\n{\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 char p[] = \u201chellow world\u201d;", "\nreturn p;", "\n}", "\nvoid Test(void)", "\n{\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 char *str = NULL;", "\nstr = RetMemory();", "\nprintf(str);", "\n}", "\nRetMenory\u6267\u884c\u5b8c\u6bd5\uff0cp\u8d44\u6e90\u88ab\u56de\u6536\uff0c\u6307\u5411\u672a\u77e5\u5730\u5740\u3002\u8fd4\u56de\u5730\u5740\uff0cstr\u7684\u5185\u5bb9\u5e94\u662f\u4e0d\u53ef\u9884\u6d4b\u7684, \u6253\u5370\u7684\u5e94\u8be5\u662fstr\u7684\u5730\u5740", "\n\u5199\u4e00\u4e2a\u51fd\u6570,\u5b83\u7684\u539f\u5f62\u662fint continumax(char *outputstr,char *intputstr)", "\n\u529f\u80fd\uff1a", "\n\u5728\u5b57\u7b26\u4e32\u4e2d\u627e\u51fa\u8fde\u7eed\u6700\u957f\u7684\u6570\u5b57\u4e32\uff0c\u5e76\u628a\u8fd9\u4e2a\u4e32\u7684\u957f\u5ea6\u8fd4\u56de\uff0c\u5e76\u628a\u8fd9\u4e2a\u6700\u957f\u6570\u5b57\u4e32\u4ed8\u7ed9\u5176\u4e2d\u4e00\u4e2a\u51fd\u6570\u53c2\u6570outputstr\u6240\u6307\u5185\u5b58\u3002\u4f8b\u5982\uff1a\u201dabcd12345ed125ss123456789\u2033\u7684\u9996\u5730\u5740\u4f20\u7ed9intputstr\u540e\uff0c\u51fd\u6570\u5c06\u8fd4\u56de", "\n9\uff0coutputstr\u6240\u6307\u7684\u503c\u4e3a123456789", "\nint continumax(char *outputstr, char *inputstr)", "\n{char *in = inputstr, *out = outputstr, *temp, *final;", "\nint count = 0, maxlen = 0;", "\nwhile( *in != \u2018\\0\u2032 )", "\n{if( *in > 47 && *in < 58 )", "\n{for(temp = in; *in > 47 && *in < 58 ; in++ )", "\ncount++;", "\n}", "\nelse", "\nin++;", "\nif( maxlen < count )", "\n{maxlen = count;", "\ncount = 0;", "\nfinal = temp;", "\n}}", "\nfor(int i = 0; i < maxlen; i++)", "\n{*out = *final;", "\nout++;", "\nfinal++;", "\n}", "\n*out = \u2018\\0\u2032;", "\nreturn maxlen;", "\n}"], "title": "C\u9762\u8bd5\u9898\uff08\u7f16\u7a0b\uff09"},
{"contents": ["Q:\u00a0\u00a0 All-time Most-Popular-Question: How to reverse a single link list? (Most companies ask!)", "\nA:\u00a0\u00a0\u00a0 At least 2 popular/elegant ways to do this without using additional memory:", "\nNon-Recursive & Recursive.", "\nTell me what\u2019s the disadvantage of recursion? It\u2019s damn expensive, be aware of stack overflow if the list is long.", "\n// Non-Recursively (Most interviewers expect this sort of answer!)", "\nNode *p\u00a0 = head;\u00a0 // h points to head of the linklist.", "\nIf( p == NULL)", "\nreturn NULL;", "\nlink *h;\u00a0 //C++ style C programming", "\nh = p;", "\nif(p->next)", "\np = p->next;", "\nh->next = NULL;\u00a0\u00a0 // h is now an isolated node which will be the tail node eventually", "\nwhile( p != NULL) {", "\nlink *t = p->next;\u00a0 //tmp node.", "\np->next = h;", "\nh = p;", "\np = t;", "\n}", "\nreturn h;\u00a0 //h points to the new Head.", "\n//-END-", "// Recursively, In case you forgot.", "\nreverse_ll(struct node ** hashref) {", "\nstruct node * first,\u00a0 last;", "\nif(*hashref == NULL) return -1;", "\nfirst = *hashref;", "\nrest = first->next;", "\nif(rest == NULL) return;", "reverse_ll(&rest);", "first->next->next = first;\u00a0 //reversion happens.", "\nfirst->next = NULL;", "\n} //-END-", "Collateral Questions: Why recursion is evil?", "\nA: Potential of Stack overflow for extensively nested recursions.", "Q:\u00a0\u00a0 How to print a link list reversely?\u00a0\u00a0 (NetScreen, Netli, Yahoo!)", "\nA:\u00a0\u00a0 If Recursively:", "\nrev_ll (Node *h) {", "\nIf(!h) return(-1) ;", "\nelse { rev_ll(h->next); print(h->data);}", "\n}", "\nIf Non-Recursively:", "\nSame as last Q/A: reverse the link-list then print out from the new head. Complexity: O(2*N)", "//Similar question:\u00a0 How to reverse a string?\u00a0 Complexity O(N/2); exchange first\uf0df\uf0e0last, 2nd\uf0df\uf0e02nd-to-the-last, etc\u2026", "Q:\u00a0 How to reverse doubly-linked list? (Akamai onsite San Mateo, CA)", "\nA:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Basically, double linklist is easier to reverse, the only 2 things need to do are:", "\n//\u00a0 tail\uf0df\uf0e0 head exchange;\u00a0 prev \uf0df\uf0e0next exchange;", "\nNode *PCurrent = pHead, *pTemp;", "\nWhile(pCurrent) {", "\npTemp = pCurrent->next;", "\npCurrent->next = pCurrent->prev;", "\npCurrent->prev = pTemp;", "\npHead = pCurrent;", "\npCurrent = pTemp;", "\n}", "\n// pHead will point to the newly reversed head of the double link-list", "\n// -END-", "Q: How to insert a node into an ASCENDly sorted double link list? (Infoblox onsite)", "\nA:\u00a0 // Note: the following code concerns all boundary conditions!!!", "\nAssume we have a struct:", "\nStruct Node {", "\nInt data;", "\nNode * prev;", "\nNode *next;", "\n};", "//pHead, pCur, nn (new node), ppCur (pre-pCur)", "\nif(pHead == NULL) return(0);", "\npCur = pHead;", "\nwhile(pCur) {", "\nif(pCur != pHead) {", "\nppCur = pCur->prev;\u00a0 //keep track of prev node.", "\n}", "\nif(pCur->data >= nn->data) {", "\nif(pCur == pHead) {\u00a0 // insert at the head", "\npHead = nn;", "\nnn->prev = NULL;", "\nnn->next = pCur;", "\npCur->prev = nn;", "\n} else { // insert at non head.", "\nIf(pCur->next == NULL) { // insert at the tail.", "\nnn->next = NULL;", "\npCur->next = nn;", "\nnn->prev = pCur;", "\n} else { // insert somewhere in the middle.", "\nnn->next = pCur;", "\npCur->prev = nn;", "\nppCur->next = nn;", "\nnn->prev = ppCur;", "\n}", "\nreturn(pHead);\u00a0 // return head of double-linklist.", "\n}", "\n} else { // keep going!", "\npCur = pCur->next;", "\n}", "\n} // end of while()", "Q: How to find a loop in a linked list (single link-list)/ Yahoo! Favorite onsite question.", "\nA:", "\nNode *p1, *p2, *head;", "\np1 = p2 = head;", "\ndo {", "\np1 = p1->next;", "\np2 = p2->next->next;", "\n} while ( p1 != p2 && p1->next != NULL && p2->next != NULL && p2->next->next != NULL )", "\nif ( p1->next == NULL || p2->next == NULL || p2->next->next == NULL) {", "\nprintf(\u201cNone loop found!\\n\u201d;", "\n} else if ( p1 == p2 && p1 != NULL ) {", "\nprintf(\u201cLoop found!\\n\u201d;", "\n} // -END-", "//Story Telling:\u00a0 A Yahoo! Director ever asked this question and he challenged me with this scenario: What if p1 and p2 fall into an endlessly looping hole?\u00a0 This imagined scenario/dilemma will NEVER happen as a simple reply! Don\u2019t be afraid to stand off. This also propelled me to think what made one a Technical/Engineering Director? Stupidness, Arrogance or Ignorance? Maybe all.", "Q:\u00a0 Print UNIQUE Array Element\u00a0 (PayPal onsite interview question)\u00a0\u00a0 \uff1f\uff1f\uff1f\uff1f", "\nA: \u00a0\u00a0\u00a0 \u00a0// Assume it\u2019s a char * array", "\nchar * unique_array(char *s, int size)", "\n{", "\nint i = 1,\u00a0 c = 1;", "\nfor(c=1; c<=size; ++c) {", "\nif (s[c] != s[i-1]) { s[i] = s[c]; i++; }", "\n}", "\ns[i] = \u2018\\0\u2019;\u00a0 //NULL terminate the string!", "return(s);", "\n} //-END-", "Q: Filter out matching char in a char * array", "\nA: \u00a0\u00a0\u00a0 \u00a0//", "\nchar * filter_array(char *s, int size, char tgt) {", "\nint i = 0, c;", "\nfor(c = 0; c<size; c++) {", "\nif(s[c] != tgt) { s[i] = s[c]; i++; }", "\n}", "\ns[i] = \u2018\\0\u2019;", "\nreturn(s);", "\n} \u2013END-", "Q:\u00a0 Implement your atoi()", "\nA:\u00a0 // char *a \uf0e8 int i;", "\nInt len = strlen(a);", "\nInt i = 0, j = 0, sign = 2;\u00a0 // 2 stands for \u2018+\u2019", "\nIf (a[0] == \u2018-\u2018) {", "\nsign = 1;", "\n++j;", "\n} else if(a[0] == \u2018+\u2019 ) {", "\nsign = 2;", "\n++j;", "\n}", "\n++j;", "\nwhile(j < len) {", "\ni =\u00a0 10 * i + (a[j] \u2013 48);\u00a0 // 48 = 0\u00d730 which is ASCII \u20180\u2019", "\n++j;", "\n}", "\n//-END-", "\n//NOTE:\u00a0 a-z: 0\u00d741-5a(65-90);\u00a0\u00a0 A-Z:\u00a0 0\u00d761-7a(97-122)", "Q: Write a function that takes in a string parameter and checks to see whether or not it is an integer, and if it is then return the integer value.", "\nA:", "\nint str2int(const char *str)", "\n{", "\nint value = 0;", "\nint sign = (str[0] == \u2018-\u2019)?-1:1;\u00a0 // decide sign", "\nint i = (str[0] == \u2018-\u2019)?1:0;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // decide starting index", "\nchar ch;", "while(ch = str[i++])", "\n{", "\nif ((ch >= \u20190\u2032)&&(ch <= \u20199\u2032))", "\nvalue = value*10 + (ch \u2013 \u20190\u2032);", "\nelse", "\nreturn 0;\u00a0 // non-integer", "\n}", "\nreturn value*sign;", "\n}\u00a0 /* end of str2int()", "Q: Implement your itoa() ?", "\nA:", "\nSolution 1:\u00a0 sprintf(s, \u201c%d\u201d, i);", "\nSolution 2:\u00a0 Convert every digit to ASCII naturally and dump to char * array. Or just putchar() recursively.", "Q:Print an integer using only putchar. Try doing it without using extra storage.", "\nA: // recusion is one way. (since integer is only 16 or 32 or 64 bits long)", "\nvoid putlong(long ln)", "\n{", "\nif (ln == 0) return;", "\nif (ln < 0) {", "\nputchar(\u2018-\u2019);\u00a0 // print \u2013 sign first", "\nputlong(abs(ln));\u00a0\u00a0\u00a0 // print as positive number", "\nreturn;", "\n}", "\nputlong(ln/10);\u00a0\u00a0\u00a0\u00a0\u00a0 // print higher digits,", "\nputchar(\u20190\u2032 + ln%10); // print last digit(mod), \u20190\u2032 + will convert to ASCII printable char.", "\n} // end of putlong()"], "title": "C/Algorithm/Data Structure/Compiler Related Questions \uff081\uff09"},
{"contents": ["I. History", "1. C was originally designed for and implemented on the (what) operating system on the DEC PDP-11, by (who) .", "2. The most recently approved ANSI/ISO C standard was issued in (when) , and single line comments notation \u201c//\u201d is or isn\u2019t a feature of C89.", "II. Syntax and Semantics", "1. In a runtime C program, auto variables are stored in , static variables are stored in , and function parameters are stored in .", "a. stack b. heap c. neither stack nor heap", "2. The statement \u201cextern int x;\u201d is a , and the keyword extern is used during .", "a. variable declaration b. variable definition", "c. compilation time d. runtime", "3. There is a complicated declaration: void ( * signal (int, void (*)(int)) ) (int);", "If a statement \u201ctypedef void (*p) (int);\u201d is given, please rewrite this complicated declaration.", "4. The following code is a segment of C program.", "\u2026\u2026\u2026.", "void func(int *p)", "{\u2026\u2026\u2026..}", "\u2026\u2026\u2026.", "main()", "{", "int num=0;", "\u2026\u2026\u2026", "func(&num);", "\u2026\u2026..", "}", "\u2026\u2026\u2026.", "Here, the function argument \u201c&num\u201d is passed .", "a. by value b. by reference", "III. Practice", "Create a tree, which has h (h>0) layers, and its each node has w (w>0) sub-nodes.", "Please complete the following incomplete solution.", "#include <stdlib.h>", "#include <string.h>", "struct tree{", "char info;", "p_sub; //link to sub-nodes", "};", "// allocate memory and initiate", "void dnode ( struct tree* tmp )", "{", "= malloc( sizeof (struct tree) );", "= 0\u00d741;", "= NULL;", "}", "struct tree *dtree (struct tree* subtree, int height, int width)", "{", "int i;", "if ( !subtree ) //if necessary, allocte memory for subtree", "denode(subtree);", "if ( height == 1 )", "return subtree;", "else if ( height == 2 ) {", "struct tree *leaf = NULL;", "for ( i=0; i<width; i++ ) {", "denode ( );", ";", "leaf = NULL;", "}", "return subtree;", "}", "else {", "for ( i=0; i<width; i++ ) {", "}", "return subtree;", "}", "}", "main()", "{", "\u2026\u2026\u2026", "struct tree *root = NULL;", "root = dtree (root, h, w) ; // h and w are integers get from input", "\u2026\u2026\u2026", "}"], "title": "\u610f\u6cd5\u534a\u5bfc\u4f53\u8f6f\u4ef6\u8bd5\u9898 Test for The C Programming Language"},
{"contents": ["1) \u8bbex,y\u5747\u4e3a\u6574\u578b\u53d8\u91cf\uff0c\u4e14x=10 y=3,\u5219\u4ee5\u4e0bC\u8bed\u8a00\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\nprintf(\u201c%d,%d\\n\u201d,x\u2013,\u2013y);", "\na)\t10,3", "\nb)\t9,3", "\nc)\t9,2", "\nd)\t10,2", "2\uff09\t\u5728C\u8bed\u8a00\u4e2d\uff0c\u8981\u8ba1\u7b97\u4e00\u4e2a\u6570(\u53d8\u91cfi)\u7684\u5f00\u5e73\u65b9\uff0c\u4e0b\u9762\u4ee3\u7801\u6b63\u786e\u7684\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\tprintf(sqrt(t), \u201c\\n Square of%d\u201d,i)", "\nb)\tprintf(\u201c\\n Square of %d is %d\u201d,i,sqrt(i))", "\nc)\tprintf(sqrt(i),i,t, \u201c\\n Sqrt of %d is %d\u201d)", "\nd)\tprintf(i,t,\u201d\\n Square of%d\u201d)", "\ne)\tscanf(i,\u201d\\n Square of%d is %d\u201d,sqrt(i))", "3\uff09\t\u8fd0\u884c\u4e0b\u5217C\u7a0b\u5e8f\uff1a", "\n#include ", "4\uff09\t\u5728C\u8bed\u8a00\u4e2d\uff0c\u4e0b\u9762\u9009\u9879\uff08\uff09\u662f\u5408\u6cd5\u7684\u53d8\u91cf\u540d\u3002\uff08\u9009\u62e9\u4e24\u9879\uff09", "\na)\tMinimum", "\nb)\t3 rd_row", "\nc)\tn1+n2;", "\nd)\tDoubles", "\ne)\tFirst.name", "5\uff09\t\u8fd0\u884c\u4e0b\u9762\u7684C\u7a0b\u5e8f\uff1a", "\n#include ", "6\uff09\t\u8fd0\u884c\u4e0b\u9762\u7684C\u7a0b\u5e8f\uff1a", "\n#include ", "7\uff09\t\u5728C\u8bed\u8a00\u4e2d\uff0c\u5f53\u8bf4\u660e\u4e00\u4e2a\u7ed3\u6784\u4f53\u53d8\u91cf\u65f6\u7cfb\u7edf\u5206\u914d\u7ed9\u5b83\u7684\u5185\u5b58\u662f()\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\t\u5404\u6210\u5458\u6240\u9700\u5185\u5b58\u91cf\u7684\u603b\u548c", "\nb)\t\u7ed3\u6784\u4e2d\u7b2c\u4e00\u4e2a\u6210\u5458\u6240\u9700\u5185\u5b58\u91cf", "\nc)\t\u6210\u5458\u4e2d\u5360\u5185\u5b58\u91cf\u6700\u5927\u8005\u6240\u9700\u7684\u5bb9\u91cf", "\nd)\t\u7ed3\u6784\u4e2d\u6700\u540e\u4e00\u4e2a\u6210\u5458\u6240\u9700\u7684\u5185\u5b58\u91cf", "8\uff09\t\u5728C\u8bed\u8a00\u4e2d\uff0c\u4e0b\u5217\u5173\u4e8e\u6761\u4ef6\u8bed\u53e5\u7684\u63cf\u8ff0\u4e2d\uff0c\u6b63\u786e\u7684\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e24\u9879\uff09", "\na)\t\u5f53if\u8bed\u53e5\u5d4c\u5957\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u6700\u540e\u4e00\u4e2aelse\u548c\u6700\u8fd1\u7684\u4e00\u4e2a\u6ca1\u6709else\u5339\u914d\u7684if\u5339\u914d", "\nb)\t\u4e00\u4e2aif\u53ef\u4ee5\u6709\u591a\u4e2aelse\u4e0e\u4e4b\u5339\u914d", "\nc)\t\u4e00\u4e2aswitch\u8bed\u53e5\u603b\u662f\u53ef\u4ee5\u88ab\u4e00\u7cfb\u5217if\u2026else\u8bed\u53e5\u66ff\u6362", "\nd)\t\u5f53\u6267\u884cbreak\u8bed\u53e5\u65f6\u7a0b\u5e8f\u5c06\u505c\u6b62\u6267\u884c", "9\uff09\t\u5728C\u8bed\u8a00\u4e2d\uff0c\u4e0b\u9762\u4e0d\u6b63\u786e\u7684\u5b57\u7b26\u4e32\u5e38\u91cf\u662f()\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\t\u2018abc\u2019", "\nb)\t\u201c12\u201912\u201d", "\nc)\t\u201c0\u201d", "\nd)\t\u201c \u201d", "\n10\uff09\tint a=4,b=20;", "\nif (a>b && ++a", "\nprintf(\u201cb=%d\u201d,b)", "\nelse", "\nprintf(\u201ca=%d\u201d,a);", "\n\u4e0a\u9762\u7684C\u7a0b\u5e8f\u6bb5\u7684\u8f93\u51fa\u7ed3\u679c\u662f()\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\tb=20", "\nb)\ta=5", "\nc)\ta=4", "\nd)\tb=21", "\n11\uff09\t\u5728C\u8bed\u8a00\u4e2d\uff0c\u6709\u5982\u4e0b\u5b9a\u4e49", "\nvoid f(int x,int y)", "\n{", "\n\tint t;", "\nif(x", "\n\t{t=x;x=y;y=t;}", "\n}", "\nmain()", "\n{", "\n\tint a=4,b=3,c=5;", "\n\tf(a,b);", "\nf(a,c);", "\nf(b,c);", "\nprintf(\u201c%d,%d,%d\\n\u201d,a,b,c);", "\n}", "\n\u6267\u884c\u540e\u8f93\u51fa\u7684\u7ed3\u679c\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\t3,4,5", "\nb)\t5,3,4", "\nc)\t5,4,3", "\nd)\t4,3,5", "13) int a[5]={3,9,5,6,4};", "\n\tprintf(\u201c%d\u201d,*(a+4));", "\n\u4ee5\u4e0aC\u7a0b\u5e8f\u6bb5\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\t3", "\nb)\t5", "\nc)\t4", "\nd)\t6", "14) \u5206\u6790\u4e0b\u9762\u7684C\u8bed\u8a00\u4ee3\u7801\uff1a", "\nint a=1,b=10;", "\ndo{", "\nb-=a; a++;", "\n}while (b--\n\u5219\u6267\u884c\u5faa\u73af\u8bed\u53e5\u540eb\u7684\u503c\u4e3a\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\t9", "\nb)\t\u20132", "\nc)\t\u20131", "\nd)\t8", "\n15) \u8bbei\u662fint\u578b\u53d8\u91cf,f\u662ffloat\u578b\u53d8\u91cf,\u7528\u4e0b\u9762\u7684\u8bed\u53e5\u7ed9\u8fd9\u4e24\u4e2a\u53d8\u91cf\u8f93\u5165\u503c:", "\nscanf(\"i=%d,f=%f\",&i,&f);", "\n\u4e3a\u4e86\u628a100\u548c765.12\u5206\u522b\u8d4b\u7ed9i\u548cf,\u5219\u6b63\u786e\u7684\u8f93\u5165\u4e3a\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na) 100 765.12", "\nb) i=100,f=765.12", "\nc) 100 765.12", "\nd) x=100 y=765.12", "16\uff09\u5728C\u8bed\u8a00\u4e2d\uff0c\u4e0b\u5217\uff08\uff09\u662f\u5408\u6cd5\u7684\u6807\u8bc6\u7b26\u3002\uff08\u9009\u62e9\u4e24\u9879\uff09", "\na) COUNT", "\nb) P234", "\nc) 4x", "\ne)\tshort", "17) \u6709\u6570\u7ec4int num [5] = {10,20,30,40,50};", "\nnum[3]\u7684\u503c\u4e3a\uff08\uff09\u3002 \uff08\u9009\u62e9\u4e00\u9879\uff09", "\na) 30", "\nb) 50", "\nc) 40", "\nd) 20", "\ne) 10", "18) #include", " 19) void main()", "\n{", "\n\tint i, x[3][3]={1,2,3,4,5,6,7,8,9};", "\n\tfor(i=0;i\n\t\tprintf(\"%d \",x[i][2-i]);", "\n}", "\n\u4ee5\u4e0aC\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na) 1 5 9", "\nb) 1 4 7", "\nc) 3 5 7", "\ne)\t3 6 9", " 20) C\u8bed\u8a00\u4e2d\uff0cwhile\u548cdo\u2026while\u5faa\u73af\u7684\u4e3b\u8981\u533a\u522b\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na) while\u7684\u5faa\u73af\u63a7\u5236\u6761\u4ef6\u6bd4do\u2026while\u7684\u5faa\u73af\u63a7\u5236\u6761\u4ef6\u4e25\u683c", "\nb) do\u2026while\u7684\u5faa\u73af\u4f53\u81f3\u5c11\u65e0\u6761\u4ef6\u6267\u884c\u4e00\u6b21", "\nc) do\u2026while\u5141\u8bb8\u4ece\u5916\u90e8\u8f6c\u5230\u5faa\u73af\u4f53\u5185", "\nd) do\u2026while\u7684\u5faa\u73af\u4f53\u4e0d\u80fd\u662f\u590d\u5408\u8bed\u53e5", "21) \u6267\u884c\u4e0b\u9762\u7684C\u7a0b\u5e8f\u6bb5\u540e\uff0c\u8f93\u51fa\u7ed3\u679c\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\nint a=5;", "\nwhile( a--);", "\nprintf( \"%d\", a);", "a) 54321", "\nb) 4321", "\nc) 0", "\nd) -1", "22) \u4ee5\u4e0b\u6b63\u786e\u7684\u53d9\u8ff0\u6709\uff08\uff09\u3002\uff08\u9009\u62e9\u4e24\u9879\uff09", "\na) \u5728C\u7a0b\u5e8f\u4e2d\uff0c\u6bcf\u884c\u4e2d\u53ea\u80fd\u5199\u4e00\u6761\u8bed\u53e5", "\nb) \u5728C\u7a0b\u5e8f\u4e2d\uff0cAbc\u548cabc\u662f2\u4e2a\u76f8\u540c\u7684\u53d8\u91cf", "\nc) \u82e5a\u548cb \u7684\u7c7b\u578b\u76f8\u540c\uff0c\u5728\u8ba1\u7b97\u4e86\u8d4b\u503c\u8868\u8fbe\u5f0fa=b\u540eb\u7684\u503c\u5c06\u653e\u5165a\uff0c\u800cb\u7684\u503c\u4e0d\u53d8", "\nd) \u82e5a\u662ffloat\u578b\u53d8\u91cf\uff0ca=10\u662f\u5408\u6cd5\u7684\uff0c\u56e0\u4e3afloat\u578b\u53d8\u91cf\u5141\u8bb8\u5b58\u653e\u6574\u578b\u6570", "23) \u4e0b\u9762C\u4ee3\u7801\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\nint answer,result;", "\nanswer=100;", "\nresult=answer-10;", "\nprintf(\u201cThe result is %d\u201d, result+5);", "a) The result is 90", "\nb) The result is 95", "\nc) The result is 10", "\nd) The result is 100", "24) char *p=\"happy new year\";", "\n   char *q=p;", "\n   int k;", "\n   for( k=1;k\n   {", "\n\t   putchar(*q);   //putchar\u51fd\u6570\u7528\u6765\u8f93\u51fa\u5355\u4e2a\u5b57\u7b26", "\n\t   q++;", "\n   }", "\n\u4e0a\u9762C\u7a0b\u5e8f\u6bb5\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "a) happy new year", "\nb) happy new", "\nc) happy n", "\nd) happy", "\ne) appy n", "25) \u5728C\u8bed\u8a00\u4e2d\uff0c\u6839\u636e\u4e0b\u9762\u7684\u5b9a\u4e49,\u80fd\u6253\u5370\u51fa\u5b57\u6bcdm\u7684\u8bed\u53e5\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\nstruct person{ char name[9]; int age; };", "\nstruct person per[10]={\"john\",17,", "\n\"paul\",19,", "\n\"mary\",18,", "\n\"adam\",16};", "a) printf(\"%c\\n\",per[3].name);", "\nb) printf(\"%c\\n\",per[3].name[1]);", "\nc) printf(\"%c\\n\",per[2].name[1]);", "\nd) printf(\"%c\\n\",per[2].name[0]);", "26) \u5728C\u8bed\u8a00\u4e2d\uff0c\u5b58\u50a8\u7c7b\u522b\u5b9a\u4e49\u4e86\u53d8\u91cf\u7684\uff08\uff09\u3002\uff08\u9009\u62e9\u4e24\u9879\uff09", "\na) \u751f\u547d\u5468\u671f", "\nb) \u53ef\u89c1\u6027", "\nc) \u5173\u7cfb\u6027", "27) \u5728C\u8bed\u8a00\u4e2d\uff0c\u8bbe\u6709\u6570\u7ec4\u5b9a\u4e49: char array [ ]=\"China\"; \u5219\u6570\u7ec4 array\u6240\u5360\u7684\u7a7a\u95f4\u4e3a\uff08 \uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\n   a) 4\u4e2a\u5b57\u8282", "\n   b) 5\u4e2a\u5b57\u8282", "\n   c) 6\u4e2a\u5b57\u8282", "\n   d) 7\u4e2a\u5b57\u8282", "28) \u5728C\u8bed\u8a00\u4e2d\uff0c\uff08\uff09\u662f\u5728\u6240\u6709\u51fd\u6570\u5916\u90e8\u58f0\u660e\u7684\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\n   a) \u5168\u5c40\u53d8\u91cf", "\n   b) \u5c40\u90e8\u53d8\u91cf", "\n   c) \u5f62\u53c2", "\n29) \u4ee5\u4e0b\u5bf9C\u8bed\u8a00\u51fd\u6570\u7684\u6709\u5173\u63cf\u8ff0\u4e2d,\u6b63\u786e\u7684\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\n   a) \u8c03\u7528\u51fd\u6570\u65f6\uff0c\u53ea\u80fd\u628a\u5b9e\u53c2\u7684\u503c\u4f20\u9001\u7ed9\u5f62\u53c2,\u5f62\u53c2\u7684\u503c\u4e0d\u80fd\u4f20\u9001\u7ed9\u5b9e\u53c2", "\n   b) C\u51fd\u6570\u65e2\u53ef\u4ee5\u5d4c\u5957\u5b9a\u4e49\u53c8\u53ef\u4ee5\u9012\u5f52\u8c03\u7528", "\n   c) \u51fd\u6570\u5fc5\u987b\u6709\u8fd4\u56de\u503c,\u5426\u5219\u4e0d\u80fd\u4f7f\u7528\u51fd\u6570", "\n   d) C\u7a0b\u5e8f\u4e2d\u6709\u8c03\u7528\u5173\u7cfb\u7684\u6240\u6709\u51fd\u6570\u5fc5\u987b\u653e\u5728\u540c\u4e00\u4e2a\u6e90\u7a0b\u5e8f\u6587\u4ef6\u4e2d", "30) \u5206\u6790\u4e0b\u9762\u7684C\u7a0b\u5e8f:", "\n#include", "31) \u5206\u6790\u4e0b\u9762\u7684\u7a0b\u5e8f\uff1a", "\nvoid fun (int a,int b,int c)", "\n{", "\n\ta=456; b=567; c=678;", "\n}", "\nvoid main()", "\n{", "\n\tint x=10, y=20,z=30;", "\n\tfun (x,y,z);", "\n\tprintf(\"%d,%d,%d\\n\",z,y,x);", "\n}", "\n\u8f93\u51fa\u7ed3\u679c\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\t30,20,10", "\nb)\t10,20,30", "\nc)\t456,567,678", "\nd)\t678,567,456", " 32) \u7814\u7a76\u4e0b\u9762\u7684C\u7a0b\u5e8f\u6bb5\uff1a", "\n    int i,j;", "\n    for (i=5;i;i--)", "\n\t   for(j=0;j\n\u5faa\u73af\u4f53\u7684\u603b\u6267\u884c\u6b21\u6570\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\t20", "\nb)\t25", "\nc)\t24", "\nd)\t30", "\n33) \u8bbex,y,z,t\u5747\u4e3aint\u578b\u53d8\u91cf\uff0c\u5219\u6267\u884c\u4ee5\u4e0b\u8bed\u53e5\u540e\uff0ct\u7684\u503c\u4e3a\uff08\uff09\u3002", "\nx=y=z=1;", "\nt=++x||--y&&++z;\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\t\u4e0d\u5b9a\u503c", "\nb)\t2", "\nc)\t1", "\nd)\t0", "34) void fun(int *x, int *y) {   *x=3;\t*y=4; }", "\nvoid main()", "\n{", "\n\tint x=1,y=2;", "\n    printf(\"%d %d \",x, y);", "\n\tfun(&y,&x);", "\n\tprintf(\"%d %d\",x, y);", "\n}", "\n\u4e0a\u9762\u7684C\u7a0b\u5e8f\u6bb5\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\t2 1 4 3", "\nb)\t1 2 1 2", "\nc)\t1 2 4 3", "\nd)\t2 1 1 2", "35) \u5206\u6790\u4e0b\u9762\u7684C\u8bed\u8a00\u7a0b\u5e8f\uff1a", "\n#include", "36) \u9605\u8bfb\u4e0b\u9762\u7684C\u8bed\u8a00\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u662f\uff08\uff09\u3002", "\nint x, y = 1, z=0;", "\nif ( z \nx = 3;", "\nelse if ( y == 0 )", "\nx = 5;", "\nelse", "\nx = 7;", "\nprintf(\"%d, %d\", x, y);\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\t7, 0", "\nb)\t7, 1", "\nc)\t3, 3", "\nd)\t\u4ee5\u4e0a\u90fd\u4e0d\u6b63\u786e", "37) \u8981\u5c0620\u8d4b\u503c\u5230\u6570\u7ec4Num\u7684\u7b2c\u4e09\u4e2a\u5143\u7d20\uff0c\u6b63\u786e\u7684\u65b9\u6cd5\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\tNum[3]=20", "\nb)\tNum[2]=20", "\nc)\tNum[4]=20", "\nd)\t[3] Num=20", "38) \u5728C\u8bed\u8a00\u4e2d\uff0c\u5df2\u77e5\u5b57\u6bcdA\u7684ASCII\u7801\u662f65\uff0c\u5219\u6267\u884c\u8bed\u53e5\uff1achar ch='A'+3; \u540ech\u7684\u503c\u4e3a\uff08 \uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\t\u4e0d\u80fd\u786e\u5b9a", "\nb)\t68", "\nc)\tC", "\nd)\tD", "39) \u5728C\u8bed\u8a00\u4e2d\uff0c\u4ee5\u4e0b\u6240\u5217\u7684\u5404\u51fd\u6570\u9996\u90e8\u4e2d\uff0c\u6b63\u786e\u7684\u662f\uff08 \uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\tvoid play(var :Integer,var b:Integer)", "\nb)\tvoid play(int a,b)", "\nc)\tvoid play(int a,int b)", "\nd)\tSub play(a as integer,b as integer)", "40) C\u8bed\u8a00\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u6307\u9488\u8bbf\u95ee\u4e00\u4e2a\u53d8\u91cf\uff0c\u8868\u793a\u6307\u9488\u7684\u8fd0\u7b97\u7b26\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\t&", "\nb)\t*", "\nc)\t^", "\nd)\t%", "\ne)\t@", "41) \u4e0b\u9762\u7684C\u7a0b\u5e8f\u6bb5\u6267\u884c\u5b8c\u540e\uff0cx\u7684\u503c\u4e3a\uff08 \uff09\u3002", "\nint x=3, y=2;", "\nx*=x+y;\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\t2", "\nb)\t10", "\nc)\t15", "\nd)\t3", "42) \u5728C\u8bed\u8a00\u4e2d\uff0c\u80fd\u6b63\u786e\u8868\u793aa\u548cb\u540c\u65f6\u4e3a\u6b63\u6216\u540c\u65f6\u4e3a\u8d1f\u7684\u903b\u8f91\u8868\u8fbe\u5f0f\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\t(a>=0\u2016b>=0)&&(a\nb)\t(a>=0&&b>=0)&&(a\nc)\t(a+b>0)&&(a+b\nd)\ta*b>0", "43) \u4e0b\u9762\u7684C\u8bed\u8a00\u4ee3\u7801\u6bb5\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\nint j;", "\nfor(j=1; j\nprintf(\"%d \",j);", "a)\t1 2 3 4 5 6 7 8 9", "\nb)\t2 4 6 8", "\nc)\t1 3 5 7 9", "\nd)\t1 2 4 6 8", "44) \u7528\u6765\u5c06\u4e24\u4e2a\u5b57\u7b26\u4e32\u5408\u5e76\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u51fd\u6570\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\tstrcat()", "\nb)\tstrcpy()", "\nc)\tstrlen()", "45) \u5728C\u8bed\u8a00\u4e2d,\u8868\u8fbe\u5f0f:10!=9 \u7684\u503c\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\ttrue", "\nb)\t\u975e\u96f6\u503c", "\nc)\t0", "\nd)\t1", "46) \u5206\u6790\u4e0b\u9762\u7684C\u4ee3\u7801\u6bb5:", "\n\tchar str1[15] = \"Sea View\";", "\n\tchar str2[15] = \"Sea Breeze\";", "\n\tstrcpy(str1,str2);", "\n\tprintf(\"%s\\n\",str1);", "\n\u5219\u8f93\u51fa\u7ed3\u679c\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\tSea View", "\nb)\tSea Breeze", "\nc)\tSea View Sea Breeze", "\nd)\tSea Breeze Sea View", "47) \u5728C\u8bed\u8a00\u4e2d\uff0c\u4e0b\u5217\u6b63\u786e\u7684\u5b57\u7b26\u578b\u5e38\u91cf\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\t\u201cf \u201d", "\nb)\t\u20189\u2019", "\nc)\t #", "\nd)\t365", "48) \u4e0b\u9762\u8bf4\u6cd5\u6b63\u786e\u7684\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e09\u9879\uff09", "\n1\uff09C\u8bed\u8a00\u4e2dfor \u5faa\u73af\u53ef\u4ee5\u91cd\u590d\u6267\u884c\u64cd\u4f5c", "\n2\uff09do \u64cd\u4f5c\u81f3\u5c11\u8981\u6267\u884c\u4e00\u6b21", "\n3\uff09exit()\u51fd\u6570\u4f1a\u7acb\u5373\u4f7f\u7a0b\u5e8f\u7ed3\u675f", "a)\t1\uff09\u548c2\uff09\u90fd\u662f\u9519\u8bef\u7684", "\nb)\t1\uff09\u662f\u6b63\u786e\u7684", "\nc)\t2\uff09\u662f\u6b63\u786e\u7684", "\nd)\t3\uff09\u662f\u6b63\u786e\u7684", "49) \u5728C\u8bed\u8a00\u4e2d\uff0c\u4ee5\u4e0b\u4e0d\u4f1a\u51fa\u73b0\u6b7b\u5faa\u73af\u7684\u8bed\u53e5\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\n   a)  int x=0;", "\ndo{x++;}while(x=1);", "\n   b)  for(k=10; ; k--);", "\n   c\uff09for(y=0, x=1; x>++y; x=k++) k=x;", "\nd)while(1) {x++;}", "\n50) \u5206\u6790\u4e0b\u9762\u7684C\u8bed\u8a00\u7a0b\u5e8f\uff1a", "\nvoid main()", "\n{", "\n\tint a,b,c=246;", "\n\ta=c/100%9;", "\n\tb=(-1)&&(-1);", "\n\tprintf(\u201c%d,%d\\n\u201d,a,b);", "\n}", "\n\u8f93\u51fa\u7ed3\u679c\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\t2,1", "\nb)\t3,2", "\nc)\t4,3", "\nd)\t2,-1", "52) \u5728C\u8bed\u8a00\u4e2d\uff0c\u4e0b\u9762\uff08 \uff09\u662f\u903b\u8f91\u8fd0\u7b97\u7b26\u4e2d\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\t!", "\nb)\t&&", "\nc)\t||", "\nd)\t|", "\ne)\t&", "  53) \u8bbeP1\u548cP2\u662f\u6307\u5411\u540c\u4e00\u4e2aint\u578b\u4e00\u7ef4\u6570\u7ec4\u7684\u6307\u9488\u53d8\u91cf\uff0ck\u4e3aint\u578b\u53d8\u91cf,\u5219\u4e0d\u80fd\u6b63\u786e\u6267\u884c\u7684\u8bed\u53e5\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\tk=*P1+*P2;", "\nb)\tP2=k;", "\nc)\tP1=P2;", "\nd)\tk=(*P1) * (*P2);", "  55) \u8fd0\u884c\u5982\u4e0b\u7a0b\u5e8f\uff1a", "\n#include", "a)\t0", "\nb)\t3", "\nc)\t2", "\nd)\t4", "56) \u5728C\u8bed\u8a00\u4e2d\uff0c\u4e0b\u5217\uff08\uff09\u662f\u5408\u6cd5\u7684\u6807\u8bc6\u7b26\u3002\uff08\u9009\u62e9\u4e24\u9879\uff09", "\na)\tMinimum", "\nb)\t3rd_row", "\nc)\tn1+n2", "\nd)\tDoubles", "57) #include ", "58) \u5728C\u8bed\u8a00\u4e2d\uff0c\u4ee5\u4e0b\u8868\u8fbe\u5f0f\u8ba1\u7b97\u7ed3\u679c\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\n15 + 80 / 2 * 10 \u2013 12 * 2 / 3 \u2013 10", "\na)\t298", "\nb)\t553", "\nc)\t397", "\nd)\t507", " 59) \u4ee5\u4e0bC\u8bed\u8a00\u4ee3\u7801\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff08 \uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\n#include ", "a)\t16", "\nb)\t45", "\nc)\t20", "\nd)\t25", "60) \u4ee5\u4e0b\u5b9a\u4e49\u8bed\u53e5\u4e2d\uff0c\u9519\u8bef\u7684\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\tint a[]={1,2};", "\nb)\tchar a[3]={ '1', '2', '3'};", "\nc)\tchar s[10]= \"test\";", "\nd)\tint n=5,a[n];", "      61) \u5728C\u8bed\u8a00\u4e2d\uff0c\u5047\u5b9a\u6240\u6709\u53d8\u91cf\u5747\u4e3a\u6574\u578b\uff0c\u5219\u4e0b\u5217\u4ee3\u7801\u6267\u884c\u540ec\u7684\u503c\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na=2; b=5; b++; c=a+b;", "\na)\t2", "\nb)\t6", "\nc)\t7", "\nd)\t8", "61) \u5728C\u8bed\u8a00\u4e2d,\u5047\u8bbe\uff0cchar w; int x; float y; double z;", "\n\u5219\u8868\u8fbe\u5f0f\uff1aw*x+z-y\u503c\u7684\u6570\u636e\u7c7b\u578b\u4e3a\uff08 \uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\tfloat", "\nb)\tchar", "\nc)\tint", "\nd)\tdouble", "\n62) \u4e0b\u5217C\u8bed\u8a00\u4ee3\u7801\u7684\u8f93\u51fa\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\nvoid main()", "\n{", "\n      int temp=10;", "\n      printf(\u201c%d \u201d,temp++);", "\n      temp++;", "\n      printf(\u201c%d\u201d,temp);", "\n}", "\na)\t10 12", "\nb)\t11 12", "\nc)\t10 11", "\nd)\t\u4ee5\u4e0a\u90fd\u4e0d\u662f", "64) \u9605\u8bfb\u4e0b\u9762\u7684C\u8bed\u8a00\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u662f\uff08 \uff09\u3002", "\nint x, y = 1, z=0;", "\nif ( z \nx = 3;", "\nelse if ( y == 0 )", "\nx = 5;", "\nelse", "\nx = 7;", "\nprintf(\"%d, %d\", x, y);\uff08\u9009\u62e9\u4e00\u9879\uff09", "a)\t7, 0", "\nb)\t7, 1", "\nc)\t3, 3", "\nd)\t\u4ee5\u4e0a\u90fd\u4e0d\u6b63\u786e", "65) \u5728C\u8bed\u8a00\u4e2d\uff0c\u4ee5\u4e0b\u6240\u5217\u7684\u5404\u51fd\u6570\u9996\u90e8\u4e2d\uff0c\u6b63\u786e\u7684\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\tvoid play(var :Integer,var b:Integer)", "\nb)\tvoid play(int a,b)", "\nc)\tvoid play(int a,int b)", "\nd)\tSub play(a as integer,b as integer)", "66) C\u8bed\u8a00\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u6307\u9488\u8bbf\u95ee\u4e00\u4e2a\u53d8\u91cf\uff0c\u8868\u793a\u6307\u9488\u7684\u8fd0\u7b97\u7b26\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\t&", "\nb)\t*", "\nc)\t^", "\nd)\t%", "\ne)\t@", "67) \u82e5\u6709\u8bf4\u660e:int a[10];\u5219\u5bf9a\u6570\u7ec4\u5143\u7d20\u7684\u6b63\u786e\u5f15\u7528\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e24\u9879\uff09", "\na)\ta[10]", "\nb)\ta[3+1]", "\nc)\ta(5)", "\nd)\ta[0]", "68) \u5728C\u8bed\u8a00\u4e2d\uff0c\u58f0\u660em,n\u4e3a\u6574\u578b\u53d8\u91cf\uff0cp1,p2\u4e3a\u6574\u578b\u6307\u9488\uff0c\u4e0b\u5217\u8bed\u53e5\u4e0d\u6b63\u786e\u7684\u662f()\uff08\u9009\u62e9\u4e09\u9879\uff09", "\na)\tp1=&m\uff1b", "\nb)\tp2=n\uff1b", "\nc)\t*p1=&n", "\nd)\tp1=&p2\uff1b", "69) #include", "70) \u4efb\u4f55\u6574\u6570\u4e0e\u5176\u672c\u8eab\u8fdb\u884c\u201c\u5f02\u6216\u201d\u8fd0\u7b97\u7684\u7ed3\u679c\u4e3a\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\t0", "\nb)\t\u672c\u8eab", "\nc)\t1", "\nd)\t\u20131", "71) \u6709\u5982\u4e0bC\u8bed\u8a00\u7a0b\u5e8f\u6bb5\uff1a", "\n\tint *p,a=10,b=1;", "\np=&a;", "\na=*p+b;", "\n\u6267\u884c\u8be5\u7a0b\u5e8f\u6bb5\u540e\uff0ca\u7684\u503c\u4e3a\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\t12", "\nb)\t11", "\nc)\t10", "\nd)\t\u7f16\u8bd1\u51fa\u9519", "72) \u5728\u4ee5\u4e0bC\u4ee3\u7801\u6267\u884c\u540e\uff0c*x\u7684\u503c\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\nint a=20,b=50;", "\nint *x;", "\nx=&a;", "\nx=&b;", "\na)\t20", "\nb)\t50", "\nc)\ta", "\nd)\tb", "73) \u5728C\u8bed\u8a00\u4e2d\uff0c\u201819+12\u2019\u5728\u8fd9\u91cc\uff0c19\u548c12\u662f\uff08\uff09\u3002\u2018+\u2019\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\t\u64cd\u4f5c\u6570\uff0c\u64cd\u4f5c\u7b26", "\nb)\t\u64cd\u4f5c\u7b26\uff0c\u64cd\u4f5c\u6570", "\nc)\t\u53d8\u91cf\uff0c\u64cd\u4f5c\u6570", "\nd)\t\u64cd\u4f5c\uff0c\u64cd\u4f5c\u6570", "74) \u5728C\u8bed\u8a00\u4e2d\uff0c\u4e0b\u5217\uff08\uff09\u662f\u5408\u6cd5\u7684\u6807\u8bc6\u7b26\u3002\uff08\u9009\u62e9\u4e24\u9879\uff09", "\na)\tCOUNT", "\nb)\tP234", "\nc)\t4x", "\nd)\tshort", "75) \u5728C\u8bed\u8a00\u4e2d\uff0c\u6709\u4ee5\u4e0b\u7a0b\u5e8f\uff1a", "\nint*f(int*x,int*y)", "\n{if(*x\nelse return y;}", "\nmain(){", "\nint a=7,b=8,*p,*q,*r;", "\np=&a;", "\nq=&b;", "\nr=f(p,q);", "\nprintf(\u201c%d,%d,%d\\n\u201d,*p,*q,*r);}", "\n\u6267\u884c\u540e\u8f93\u51fa\u7684\u7ed3\u679c\u662f\uff08 \uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\t7,8,8", "\nb)\t7,8,7", "\nc)\t8,7,7", "\nd)\t8,7,8", "76) void main()", "\n{", "\n\tint i, x[3][3]={1,2,3,4,5,6,7,8,9};", "\n\tfor(i=0;i\n\t\tprintf(\"%d \",x[i][2-i]);", "\n}", "\n\u4ee5\u4e0aC\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff08 \uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\t1 5 9", "\nb)\t1 4 7", "\nc)\t3 5 7", "\nd)\t3 6 9", "77) (10*(2-8)+10)/(5-5*2)", "\n   \u5728C\u8bed\u8a00\u4e2d\uff0c\u4e0a\u9762\u7684\u8868\u8fbe\u5f0f\u8ba1\u7b97\u7ed3\u679c\u4e3a\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\t\u201310", "\nb)\t10", "\nc)\t30", "\nd)\t32", "78) \u4e0b\u9762\u9009\u9879\uff08\uff09\u662fC\u8bed\u8a00\u4e2d\u5b9a\u4e49\u7684\u5faa\u73af\u8bed\u53e5\u7c7b\u578b\u3002\uff08\u9009\u62e9\u4e24\u9879\uff09", "\na)\tif else", "\nb)\twhile", "\nc)\tswich\u2026case", "\nd)\tfor", "\ne)\trepeat\u2026until", "79) int n=2;", "\nwhile(n=0)", "\n{", "\nprintf(\u201c%d\u201d,n);", "\nn--;", "\n}", "\n\u5728C\u8bed\u8a00\u4e2d\uff0c\u4e0a\u8ff0\u5faa\u73af\u4f53\u6267\u884c\u7684\u6b21\u6570\u662f\uff08 \uff09\uff0c\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\t0\u6b21", "\nb)\t1\u6b21", "\nc)\t2\u6b21", "\nd)\t\u65e0\u9650\u6b21", "80) \u5206\u6790\u4e0b\u9762\u7684C\u7a0b\u5e8f:", "\n#include", "81) sub(int x,int y,int *z)", "\n     {", "\n        *z=y-x;", "\n      }", "\n      main()", "\n      {", "\n         int a,b,c;", "\n         sub(10,5,&a);", "\n         sub(7,a,&b);", "\n         sub(a,b,&c);", "\n         printf(\u201c%d,%d,%d\u201d,a,b,c);", "\n       }", "\n\u5728C\u8bed\u8a00\u4e2d\uff0c\u4ee5\u4e0a\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f\uff08 \uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\t5,2,3", "\nb)\t-5,-12,-17", "\nc)\t5,-2,-7", "\nd)\t-5,-12,-7", "84) \u5728C\u8bed\u8a00\u4e2d\uff0c\u6709\u4ee5\u4e0b\u7a0b\u5e8f\uff1a", "\n     main()", "\n     {", "\n      int x[8]={8,7,6,5,2,0},*s;", "\n      s=x+3;", "\n      printf(\u201c%d\\n\u201d,s[2]);", "\n      }", "\n\u6267\u884c\u540e\u8f93\u51fa\u7684\u7ed3\u679c\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\t\u968f\u673a\u503c", "\nb)\t0", "\nc)\t5", "\nd)\t6", "86 )int a[2][3]={{4,5,6},{7,8,9}};", "\n     int*p[]={a[0],a[1]};", "\n     int m,n;", "\n     m=0;", "\n     for(n=0;n\n     printf(\u201ca[%d][%d]=%d\u201d,m,n,*(p[m]+n));", "\n    \u5728C\u8bed\u8a00\u4e2d\uff0c\u4ee5\u4e0a\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\uff0c\u6b63\u786e\u7684\u662f\uff08\uff09\u3002", "\n\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\ta[1][1]=4 a[2][2]=5 a[3][3]=6", "\nb)\ta[0][0]=4 a[0][1]=5 a[0][2]=6", "\nc)\ta[0][0]=7 a[0][1]=8 a[0][2]=9", "\nd)\ta[1][1]=7 a[2][2]=8 a[3][3]=9", "87) \u5728C\u8bed\u8a00\u4e2d\uff0c\u4ee5\u4e0b\u4e0d\u6b63\u786e\u7684\u53d9\u8ff0\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\t\u5728C\u7a0b\u5e8f\u7684\u7b97\u672f\u8fd0\u7b97\u7b26\u4e2d\uff0c\u53d6\u6a21\uff08%\uff09\u7684\u4f18\u5148\u7ea7\u6700\u9ad8", "\nb)\t\u5728C\u7a0b\u5e8f\u4e2d\uff0cAph\u548caph\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u53d8\u91cf", "\nc)\t\u82e5a\u548cb\u7c7b\u578b\u76f8\u540c\uff0c\u5728\u52a8\u884c\u4e86\u8d4b\u503c\u8868\u8fbe\u5f0fa=b\u540e\uff0c\u5c06b\u7684\u503c\u8d4b\u7ed9a,\u800cb\u7684\u503c\u4e0d\u53d8", "\nd)\t\u5f53\u4ece\u952e\u76d8\u8f93\u5165\u6570\u636e\u65f6\uff0c\u5bf9\u4e8e\u6574\u578b\u53d8\u91cf\u53ea\u80fd\u8f93\u5165\u6574\u578b\u6570\u503c\uff0c\u5bf9\u4e8e\u5b9e\u578b\u53d8\u91cf\u53ea\u80fd\u8f93\u5165\u5b9e\u578b\u6570\u503c", "88) \u5728C\u8bed\u8a00\u4e2d\uff0c\u4e0b\u9762\u9009\u9879\uff08\uff09\u58f0\u660e\u4e00\u4e2a\u6570\u7ec4\u7528\u4e8e\u4fdd\u5b584\u4e2a\u53c2\u8d5b\u8005\u53c2\u52a05\u4e2a\u4e0d\u540c\u9879\u76ee\u7684\u6bd4\u8d5b\u6210\u7ee9\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\tscore[5][6]", "\nb)\tscore[4][5]", "\nc)\tscore[5][4]", "89) \u8003\u8651\u4ee5\u4e0b\u7684C\u7a0b\u5e8f\uff1a", "\n\t#include", "91) \u5173\u4e8eC\u8bed\u8a00\u4e2d\u7684\u51fd\u6570\uff0c\u6b63\u786e\u7684\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e24\u9879\uff09", "\na)\t\u51fd\u6570\u5e94\u8be5\u4ee5\u5b83\u4eec\u8c03\u7528\u7684\u987a\u5e8f\u6765\u5b9a\u4e49", "\nb)\treturn\u8bed\u53e5\u53ef\u4ee5\u51fa\u73b0\u5728\u51fd\u6570\u7684\u4efb\u4f55\u5730\u65b9", "\nc)\t\u51fd\u6570\u5b9a\u4e49\u53ef\u4ee5\u5728\u4e3b\u51fd\u6570\u524d\u9762\u4e5f\u53ef\u4ee5\u51fa\u73b0\u5728\u4e3b\u51fd\u6570\u540e\u9762", "\nd)\t\u6bcf\u4e00\u4e2a\u51fd\u6570\u5fc5\u987b\u6709\u4e00\u4e2areturn\u8bed\u53e5", "\ne)\t\u51fd\u6570\u603b\u662f\u8fd4\u56de\u4e00\u4e2a\u6574\u578b\u6570\u636e", "93) \u4e0b\u9762C\u8bed\u8a00\u4ee3\u7801\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\n\tprintf(\u201c[%8.4s]\u201d,\u201dHello world!\u201d);", "\na)\t[Hello world!]", "\nb)\t[Hell    ]", "\nc)\t[    Hell]", "\nd)\t[Hello wo]", "94) \u7814\u7a76\u5982\u4e0bC\u8bed\u8a00\u7a0b\u5e8f\uff1a", "\n#include", "95) \u5728C\u8bed\u8a00\u4e2d\uff0c\u4e0b\u9762\u4e0d\u80fd\u5bf9\u5b57\u7b26\u4e32\u6b63\u786e\u8d4b\u521d\u503c\u7684\u8bed\u53e5\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\tchar str[5]=\u201dgood!\u201d;", "\nb)\tchar str[]=\u201dgood!\u201d;", "\nc)\tchar *str=\u201dgood!\u201d;", "\nd)\tchar str[5]={\u2018g\u2019,\u2019o\u2019,\u2019o\u2019,\u2019d\u2019};", "96) C\u8bed\u8a00\u4e2d\uff0c\u53ef\u4ee5\u7528\u4ee5\u4e0b\uff08\uff09\u9000\u51fa\u5faa\u73af\uff0c\u7ee7\u7eed\u6267\u884c\u5faa\u73af\u4e4b\u540e\u7684\u8bed\u53e5\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\tbreak", "\nb)\tloop", "\nc)\texit(0)", "\nd)\tcontinue", "97) \u5728C\u8bed\u8a00\u4e2d\uff0c\u4e3a\u4e00\u4e2a\u7279\u5b9a\u7684\u6570\u636e\u5206\u914d\u5185\u5b58\u65f6\uff0c\u6211\u4eec\u5fc5\u987b\u505a\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\t\u5b9a\u4e49\u4e00\u4e2a\u7279\u5b9a\u6570\u636e\u7c7b\u578b\u7684\u53d8\u91cf", "\nb)\t\u5b9a\u4e49\u4e00\u4e2a\u503c", "\nc)\t\u5b9a\u4e49\u4e00\u4e2a\u7279\u5b9a\u6570\u636e\u7c7b\u578b\u7684\u6307\u9488", "\nd)\t\u4ee5\u4e0a\u90fd\u4e0d\u662f", "100) \u5728C\u8bed\u8a00\u4e2d\uff0c\u4e0b\u5217\u5bf9\u6570\u7ec4\u7684\u58f0\u660e\u4e2d\uff0c\u975e\u6cd5\u7684\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e09\u9879\uff09", "\na)\tint score(100);", "\nb)\tfloat values[10][15];", "\nc)\tfloat average[ROW],[COLUMN];", "\nd)\tchar name[15];", "\ne)\tint sum[];", "\n101\uff09\u5728C\u8bed\u8a00\u4e2d\uff0c\u6709\u5982\u4e0b\u5b9a\u4e49", "\nmain(){int i=0,s=0;", "\ndo{", "\nif(i%2){i=i+2;}", "\ni++;", "\ns=s+i;}while(i\nprintf(\"%d\\n\",s);", "\n}", "\n\u6267\u884c\u540e\u8f93\u51fa\u7684\u7ed3\u679c\u662f\uff08 \uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\t16", "\nb)\t12", "\nc)\t18", "\nd)\t21", "102) \u5728C\u8bed\u8a00\u4e2d\uff0c\u8bbe\u6709\u5b9a\u4e49\uff1a", "\nstruct cust_type", "\n{", "\n  char name[20]", "\n  float balance;", "\n}cust;", "\nFILE *fp", "\n\u4e0b\u5217\u5c06\u53d8\u91cfcust\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0f\u4fdd\u5b58\u5230\u6587\u4ef6fp\u7684\u8bed\u53e5\u6b63\u786e\u7684\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)fwrite(cust,sizeof(struct cust_type),1,fp);", "\nb)fwrite(&cust,sizeof(cust),1,fp);", "\nc)fwrite(fp, sizeof(struct cust_type),1,cust);", "\nd)fwrite(fp, sizeof(cust),1,&cust);", "\n103) \u5728C\u8bed\u8a00\u4e2d\uff0c\u5224\u65adchar\u578b\u53d8\u91cfch\u662f\u5426\u4e3a\u5927\u5199\u5b57\u6bcd\u7684\u6b63\u786e\u903b\u8f91\u8868\u8fbe\u5f0f\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\t\u2018A\u2019\nb)\t(ch>=\u2019A\u2019)\u2016(ch\nc)\t(ch>=\u2019A\u2019)&&(ch\nd)\t(\u2018A\u2019=ch)", "104) \u5728C\u8bed\u8a00\u4e2d\uff0c\u7528\u4f5c\u8ba1\u6570\u5668\u7684\u53d8\u91cf\u901a\u5e38\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e24\u9879\uff09", "\na) \u7528\u5728\u5faa\u73af\u8bed\u53e5\u4e2d", "\nb) \u7528\u4e8e\u4fdd\u5b58\u5faa\u73af\u4e2d\u53d8\u91cf\u7684\u603b\u6570\u91cf", "\nc) \u7528\u4e8e\u4fdd\u5b58\u8f93\u5165\u7684\u6570\u503c", "\nd) \u7528\u4e8e\u8bb0\u5f55\u5faa\u73af\u88ab\u6267\u884c\u7684\u6b21\u6570", "106) #include ", "107) \u5728C\u8bed\u8a00\u4e2d\uff0c\u4e0b\u5217\uff08\uff09\u683c\u5f0f\u7528\u4e8e\u5728printf() \u8bed\u53e5\u4e2d\u4ee5\u5341\u516d\u65f6\u5236\u7684\u683c\u5f0f\u663e\u793a\u53d8\u91cf\u7684\u503c\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na) %o", "\nb)%x", "\nc)%a", "\nd)%octal", "\n108) \u7814\u7a76\u4e0b\u9762C\u7a0b\u5e8f\uff1a", "\n#include ", "109) \u7814\u7a76\u4e0b\u9762\u7684C\u8bed\u8a00\u4ee3\u7801\uff1a", "\n#include ", "110) \u8003\u8651\u4ee5\u4e0b\u7684C\u7a0b\u5e8f\uff1a", "\n#include ", "112) \u4e0b\u5217C\u8bed\u8a00\u7a0b\u5e8f\u6bb5\u4e0d\u662f\u6b7b\u5faa\u73af\u7684\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na) int i=100;", "\nwhile(1)", "\n{i=i%100+1;", "\n if(i>100)", "\n break;}", "\nb) for(; ; );", "\nc) int k=0;", "\ndo", "\n{++k;}", "\nwhile(k\nd)int s=36;", "\nwhile(s);", "113) #include ", "114) #include ", "115)#include ", "117) \u5728C\u8bed\u8a00\u4e2d\uff0c\u4ee5\u4e0b\u5bf9\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\u4e0d\u6b63\u786e\u7684\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)  typedef struct aa{", "\nint a;", "\nfloat b;", "\n} AA;", "\nAA xx;", "\nb)  struct aa,AA{", "\nint a;", "\nfloat b;}", "\nc)  struct {", "\nint a;", "\nfloat b;", "\n} AA;", "\nstruct AA xx;", "\nd)  struct {", "\nint a;", "\nfloat b;};", "\n   118) \u8fd0\u884c\u4e0b\u5217C\u7a0b\u5e8f\uff1a", "\n#include ", "119) \u8fd0\u884c\u4e0b\u9762\u7684C\u7a0b\u5e8f\uff1a", "\n#include ", "120) int a=4,b=20;", "\nif (a>b && ++a", "\nprintf(\u201cb=%d\u201d,b)", "\nelse", "\nprintf(\u201ca=%d\u201d,a);", "\n\u4e0a\u9762\u7684C\u7a0b\u5e8f\u6bb5\u7684\u8f93\u51fa\u7ed3\u679c\u662f()\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\tb=20", "\nb)\ta=5", "\nc)\ta=4", "\nd)\tb=21", "121) \u5728C\u8bed\u8a00\u4e2d\uff0c\u6709\u5982\u4e0b\u5b9a\u4e49", "\nvoid f(int x,int y)", "\n{", "\n\tint t;", "\nif(x", "\n\t{t=x;x=y;y=t;}", "\n}", "\nmain()", "\n{", "\n\tint a=4,b=3,c=5;", "\n\tf(a,b);", "\nf(a,c);", "\nf(b,c);", "\nprintf(\u201c%d,%d,%d\\n\u201d,a,b,c);", "\n}", "\n\u6267\u884c\u540e\u8f93\u51fa\u7684\u7ed3\u679c\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\t3,4,5", "\nb)\t5,3,4", "\nc)\t5,4,3", "\nd)\t4,3,5", "122) \u8003\u8651\u4ee5\u4e0b\u7684C\u7a0b\u5e8f\uff1a", "\n\t#include", "123) \u5173\u4e8eC\u8bed\u8a00\u4e2d\u7684\u51fd\u6570\uff0c\u6b63\u786e\u7684\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e24\u9879\uff09", "\na)\t\u51fd\u6570\u5e94\u8be5\u4ee5\u5b83\u4eec\u8c03\u7528\u7684\u987a\u5e8f\u6765\u5b9a\u4e49", "\nb)\treturn\u8bed\u53e5\u53ef\u4ee5\u51fa\u73b0\u5728\u51fd\u6570\u7684\u4efb\u4f55\u5730\u65b9", "\nc)\t\u51fd\u6570\u5b9a\u4e49\u53ef\u4ee5\u5728\u4e3b\u51fd\u6570\u524d\u9762\u4e5f\u53ef\u4ee5\u51fa\u73b0\u5728\u4e3b\u51fd\u6570\u540e\u9762", "\nd)\t\u6bcf\u4e00\u4e2a\u51fd\u6570\u5fc5\u987b\u6709\u4e00\u4e2areturn\u8bed\u53e5", "\ne)\t\u51fd\u6570\u603b\u662f\u8fd4\u56de\u4e00\u4e2a\u6574\u578b\u6570\u636e", "124) \u8fd0\u884c\u5982\u4e0b\u7a0b\u5e8f\uff1a", "\n\t#include", "125) \u5728C\u8bed\u8a00\u4e2d\uff0c\u4e0b\u9762\u4e0d\u80fd\u5bf9\u5b57\u7b26\u4e32\u6b63\u786e\u8d4b\u521d\u503c\u7684\u8bed\u53e5\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na) char str[5]=\u201dgood!\u201d;", "\nb) char str[]=\u201dgood!\u201d;", "\nc) char *str=\u201dgood!\u201d;", "\nd) char str[5]={\u2018g\u2019,\u2019o\u2019,\u2019o\u2019,\u2019d\u2019};", "126) \u5728C\u8bed\u8a00\u4e2d\uff0c\u5047\u8bbe", "\n\tchar w;", "\n\tint x;", "\n\tfloat y;", "\n\tdouble z;", "\n\t\u5219\u8868\u8fbe\u5f0f\uff1aw*x+z-y\u503c\u7684\u6570\u636e\u7c7b\u578b\u4e3a\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\tfloat", "\nb)\tchar", "\nc)\tint", "\nd)\tdouble", "127) \u4ed4\u7ec6\u9605\u8bfb\u4e0b\u6210\u7684C\u8bed\u8a00\u4ee3\u7801\uff1a", "\nvoid main()", "\n{", "\n  int varl=3,var2=4,*ptr;", "\n  ptr=&varl;", "\n  var2=*ptr", "\n  printf(\u201c%d\u201d,var2);", "\n}", "\n\u53d8\u91cfvar2\u7684\u6700\u540e\u7684\u503c\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\t3", "\nb)\t34", "\nc)\t4", "\nd)\tvarl\u5728\u5185\u5b58\u4e2d\u7684\u5730\u5740", "128) \u5728C\u8bed\u8a00\u4e2d\uff0c\u6709\u5982\u4e0b\u5b9a\u4e49", "\n    main()", "\n   {int i=0,s=0;", "\n    do{", "\n    if(i%1){i=i+2;}", "\n     i++;", "\n     s=s+i;}", "\n   while(i\n   printf(\u201c%d\\n\u201d,s);}", "\n   \u6267\u884c\u540e\u8f93\u51fa\u7684\u7ed3\u679c\u662f\uff08\uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\t16", "\nb)\t12", "\nc)\t28", "\nd)\t21", "129) \u5728C\u8bed\u8a00\u4e2d\uff0c\u6709\u4ee5\u4e0b\u7a0b\u5e8f\uff1a", "\n     main()", "\n     {", "\n      int x[8]={8,7,6,5,0},*s;", "\n      s=x+3;", "\n      printf(\u201c%d\\n\u201d,s[2]);", "\n      }", "\n      \u6267\u884c\u540e\u8f93\u51fa\u7684\u7ed3\u679c\u662f\uff08 \uff09\u3002\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\t\u968f\u673a\u503c", "\nb)\t0", "\nc)\t5", "\nd)\t6", "\n130) main()", "\n{int x,y;", "\n scanf(\u201c%d\u201d,&x);", "\n scanf(\u201c%d\u201d,&y);", "\n   if(x>y){x+=y;y++;}", "\n   else y+=x; x++;", "\n   printf(\u201c%d,%d\u201d,x,y);", "\n}", "\n\u5728C\u8bed\u8a00\u4e2d\uff0c\u5bf9\u4e0a\u9762\u7684\u7a0b\u5e8f\uff0c\u6b63\u786e\u7684\u53db\u65ad\u662f\uff08\uff09\u3002", "\n\uff08\u9009\u62e9\u4e00\u9879\uff09", "\na)\t\u82e5\u8f93\u5165\u6570\u636e1\u548c4\uff0c\u5219\u8f93\u51fa2\u548c6", "\nb)\t\u82e5\u8f93\u5165\u6570\u636e4\u548c1\uff0c\u5219\u8f93\u51fa6\u548c2", "\nc)\t\u82e5\u8f93\u5165\u6570\u636e4\u548c4\uff0c\u5219\u8f93\u51fa5\u548c8", "\nd)\t\u6709\u8bed\u6cd5\u9519\u8bef\uff0c\u4e0d\u80fd\u901a\u8fc7\u7f16\u8bd1", "\n131) "], "title": "C\u8bed\u8a00\u7b14\u8bd5\u9898"},
{"contents": ["1\uff0e\t\u627e\u9519", "\nvoid test1()", "\n{", "\nchar string[10]; //string\u7684\u957f\u5ea6\u5e94\u8be5\u8bbe\u4e3a11\uff0c\u8981\u7ed9\u201d\u7559\u51fa\u4f4d\u7f6e", "\nchar* str1=\u201d0123456789\u2033;", "\nstrcpy( string, str1);", "\n} ", "void test1()", "\n{", "\nchar string[10], str1[10];", "\nfor(I=0; I\n//I\u4e0d\u80fd\u53d6\u52309\uff0c\u540c\u4e0a\u4e00\u9898\u4e00\u6837\u8981\u7ed9''\u7559\u51fa\u4f4d\u7f6e", "\n//\u5e94\u8be5\u6539\u6210for(I=0; I\n{", "\nstr1[i] = 'a'; //\u53d8\u91cfi\u6ca1\u5b9a\u4e49\uff0c\u6539\u4e3astr1[I] = 'a';", "\n}", "\n//\u6b64\u5904\u8981\u52a0\u4e0a\u7ed3\u5c3e\u6807\u8bc6 str1[i]='';", "\nstrcpy(string, str1);", "\n}", "void test3(char* str1)", "\n{", "\nchar string[10];", "\nif( strlen(str1) \n// if( strlen(str1) \n{", "\nstrcpy(string, str1);", "\n}", "\n} ", "2\u3002", "\n#define MAX_SRM 256 ", "DSN get_SRM_no()", "\n{", "\nstatic int SRM_no; //\u9759\u6001\u53d8\u91cf\u6ca1\u6709\u521d\u59cb\u5316", "\nint I; ", "for(I=0; I { //\u6b64\u5904\u4e0d\u77e5\u6240\u4e91", "\nSRM_no %= MAX_SRM;", "\nif( MY_SRM.state == IDLE ) //MY_SRM IDLE\u672a\u5b9a\u4e49", "\n{", "\nbreak;", "\n}", "\n}", "\nif( I>=MAX_SRM)", "\nreturn NULL_SRM; //NULL_SRM\u672a\u5b9a\u4e49", "\nelse", "\nreturn SRM_no;", "\n} ", "3\u3002", "\n8,10,12,14,16", "4.", "\n\u9898\u76ee\u6709\u9519\u5427? \u662f\u4e0d\u662f\u5e94\u8be5\u6539\u6210\u8fd9\u6837:", "\nint func( int a )", "\n{", "\nint b;", "\nswitch( a )", "\n{", "\ncase 1: b=30;", "\ncase 2: b=20;", "\ncase 3: b=16;", "\ndefault: b=0;", "\n}", "\nreturn b;", "\n}", "\u5982\u679c\u662f\u8fd9\u6837func(1) = 0; ", "5.", "\n\u3000\u3000 2 ", "6.", "\nsizeof(int) *12 = 4*12 = 64 (byte)", "4. static\u6709\u4ec0\u4e48\u7528\u9014\uff1f\uff08\u8bf7\u81f3\u5c11\u8bf4\u660e\u4e24\u79cd\uff09", "\n1.\u9650\u5236\u53d8\u91cf\u7684\u4f5c\u7528\u57df", "\n2.\u8bbe\u7f6e\u53d8\u91cf\u7684\u5b58\u50a8\u57df", "\n7. \u5f15\u7528\u4e0e\u6307\u9488\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n1) \u5f15\u7528\u5fc5\u987b\u88ab\u521d\u59cb\u5316\uff0c\u6307\u9488\u4e0d\u5fc5\u3002", "\n2) \u5f15\u7528\u521d\u59cb\u5316\u4ee5\u540e\u4e0d\u80fd\u88ab\u6539\u53d8\uff0c\u6307\u9488\u53ef\u4ee5\u6539\u53d8\u6240\u6307\u7684\u5bf9\u8c61\u3002", "\n2) \u4e0d\u5b58\u5728\u6307\u5411\u7a7a\u503c\u7684\u5f15\u7528\uff0c\u4f46\u662f\u5b58\u5728\u6307\u5411\u7a7a\u503c\u7684\u6307\u9488\u3002", "8. \u63cf\u8ff0\u5b9e\u65f6\u7cfb\u7edf\u7684\u57fa\u672c\u7279\u6027", "\n\u5728\u7279\u5b9a\u65f6\u95f4\u5185\u5b8c\u6210\u7279\u5b9a\u7684\u4efb\u52a1\uff0c\u5b9e\u65f6\u6027\u4e0e\u53ef\u9760\u6027", "\n9. \u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u5728\u5185\u5b58\u4e2d\u662f\u5426\u6709\u533a\u522b\uff1f\u5982\u679c\u6709\uff0c\u662f\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u5168\u5c40\u53d8\u91cf\u50a8\u5b58\u5728\u9759\u6001\u6570\u636e\u5e93\uff0c\u5c40\u90e8\u53d8\u91cf\u5728\u5806\u6808", "\n10. \u4ec0\u4e48\u662f\u5e73\u8861\u4e8c\u53c9\u6811\uff1f", "\n\u5de6\u53f3\u5b50\u6811\u90fd\u662f\u5e73\u8861\u4e8c\u53c9\u6811 \u4e14\u5de6\u53f3\u5b50\u6811\u7684\u6df1\u5ea6\u5dee\u503c\u7684\u7edd\u5bf9\u503c\u4e0d\u5927\u4e8e1", "\n11. \u5806\u6808\u6ea2\u51fa\u4e00\u822c\u662f\u7531\u4ec0\u4e48\u539f\u56e0\u5bfc\u81f4\u7684\uff1f", "\n\u6ca1\u6709\u56de\u6536\u5783\u573e\u8d44\u6e90", "\n12. \u4ec0\u4e48\u51fd\u6570\u4e0d\u80fd\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff1f", "\nconstructor", "\n13. \u5192\u6ce1\u6392\u5e8f\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u4ec0\u4e48\uff1f", "\nO(n^2)", "\n14. \u5199\u51fafloat x \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684if\u8bed\u53e5\u3002", "\nif(x>0.000001&&x\n16. Internet\u91c7\u7528\u54ea\u79cd\u7f51\u7edc\u534f\u8bae\uff1f\u8be5\u534f\u8bae\u7684\u4e3b\u8981\u5c42\u6b21\u7ed3\u6784\uff1f", "\ntcp/ip \u5e94\u7528\u5c42/\u4f20\u8f93\u5c42/\u7f51\u7edc\u5c42/\u6570\u636e\u94fe\u8def\u5c42/\u7269\u7406\u5c42", "\n17. Internet\u7269\u7406\u5730\u5740\u548cIP\u5730\u5740\u8f6c\u6362\u91c7\u7528\u4ec0\u4e48\u534f\u8bae\uff1f", "\nARP (Address Resolution Protocol)\uff08\u5730\u5740\u89e3\u6790\u5354\u8b70\uff09", "\n18.IP\u5730\u5740\u7684\u7f16\u7801\u5206\u4e3a\u54ea\u4fe9\u90e8\u5206\uff1f", "\nIP\u5730\u5740\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff0c\u7f51\u7edc\u53f7\u548c\u4e3b\u673a\u53f7\u3002\u4e0d\u8fc7\u662f\u8981\u548c\u201c\u5b50\u7f51\u63a9\u7801\u201d\u6309\u4f4d\u4e0e\u4e0a\u4e4b\u540e\u624d\u80fd\u533a\u5206\u54ea\u4e9b\u662f\u7f51\u7edc\u4f4d\u54ea\u4e9b\u662f\u4e3b\u673a\u4f4d\u3002", "2.\u7528\u6237\u8f93\u5165M,N\u503c\uff0c\u4ece1\u81f3N\u5f00\u59cb\u987a\u5e8f\u5faa\u73af\u6570\u6570\uff0c\u6bcf\u6570\u5230M\u8f93\u51fa\u8be5\u6570\u503c\uff0c\u76f4\u81f3\u5168\u90e8\u8f93\u51fa\u3002\u5199\u51faC\u7a0b\u5e8f\u3002", "\n\u5faa\u73af\u94fe\u8868\uff0c\u7528\u53d6\u4f59\u64cd\u4f5c\u505a", "\n3.\u4e0d\u80fd\u505aswitch()\u7684\u53c2\u6570\u7c7b\u578b\u662f\uff1a", "\nswitch\u7684\u53c2\u6570\u4e0d\u80fd\u4e3a\u5b9e\u578b\u3002"], "title": "\u5357\u4eac-C\u8bed\u8a00\u9762\u8bd5\u9898\u6c47\u603b"},
{"contents": ["#include \u201cstdafx.h\u201d", "\ntypedef char eleType;\u00a0\u00a0\u00a0\u00a0// \u5b9a\u4e49\u94fe\u8868\u4e2d\u7684\u6570\u636e\u7c7b\u578b", "\ntypedef struct listnode\u00a0 {\u00a0\u00a0\u00a0// \u5b9a\u4e49\u5355\u94fe\u8868\u7ed3\u6784", "\n\u00a0eleType data;", "\n\u00a0struct listnode *next;", "\n}node;", "node *create(int n) {\u00a0\u00a0\u00a0\u00a0// \u521b\u5efa\u5355\u94fe\u8868\uff0cn\u4e3a\u8282\u70b9\u4e2a\u6570", "\n\u00a0node *p = (node *)malloc(sizeof(node));\u00a0", "\n\u00a0node *head = p; \u00a0head->data = \u2018A\u2019;", "\n\u00a0for(int i=\u2019B'; i<\u2019A'+n; i++) {", "\n\u00a0\u00a0p = (p->next = (node *)malloc(sizeof(node)));", "\n\u00a0\u00a0p->data = i;", "\n\u00a0\u00a0p->next = NULL;", "\n\u00a0}", "\n\u00a0return head;", "\n}", "void addCircle(node *head, int n) {\u00a0// \u589e\u52a0\u73af\uff0c\u5c06\u94fe\u5c3e\u6307\u5411\u94fe\u4e2d\u7b2cn\u4e2a\u8282\u70b9", "\n\u00a0node *q, *p = head;", "\n\u00a0for(int i=1; p->next; i++) {", "\n\u00a0\u00a0if(i==n) q = p;", "\n\u00a0\u00a0p = p->next;", "\n\u00a0}", "\n\u00a0p->next = q;", "\n}", "int isCircle(node *head) {\u00a0\u00a0\u00a0// \u8fd9\u662f\u7b14\u8bd5\u65f6\u9700\u8981\u5199\u7684\u6700\u4e3b\u8981\u51fd\u6570\uff0c\u5176\u4ed6\u51fd\u6570\u53ef\u4ee5\u4e0d\u5199", "\n\u00a0node *p=head,*q=head;", "\n\u00a0while( p->next && q->next) {", "\n\u00a0\u00a0p = p->next;", "\n\u00a0\u00a0if (NULL == (q=q->next->next))\u00a0return 0;", "\n\u00a0\u00a0if (p == q)\u00a0return 1;", "\n\u00a0}", "\n\u00a0return 0;", "\n}", "int main(int argc, char* argv[]) {", "\n\u00a0node *head = create(12);", "\n\u00a0addCircle(head, 8);\u00a0\u00a0\u00a0// \u6ce8\u91ca\u6389\u6b64\u884c\uff0c\u8fde\u8868\u5c31\u6ca1\u6709\u73af\u4e86", "\n\u00a0printf(\u201c%d\\n\u201d, isCircle(head));", "\n}"], "title": "\u5224\u65ad\u5355\u94fe\u8868\u4e2d\u662f\u5426\u5b58\u5728\u73af\uff08\u7f51\u4e0a\u8bf4\u7684\u7b14\u8bd5\u9898\uff09"},
{"contents": ["\u4e0d\u5f00\u8f9f\u7528\u4e8e\u4ea4\u6362\u6570\u636e\u7684\u4e34\u65f6\u7a7a\u95f4\uff0c\u5982\u4f55\u5b8c\u6210\u5b57\u7b26\u4e32\u7684\u9006\u5e8f(\u5728\u6280\u672f\u4e00\u8f6e\u9762\u8bd5\u4e2d\uff0c\u6709\u4e9b\u9762\u8bd5\u5b98\u4f1a\u8fd9\u6837\u95ee)", "\n#include \u201cstdafx.h\u201d", "\nvoid change(char *str) {", "\n\u00a0for(int i=0,j=strlen(str)-1; i<j; i++, j\u2013){", "\n\u00a0\u00a0str[i] ^= str[j] ^= str[i] ^= str[j];", "\n\u00a0}", "\n}", "\nint main(int argc, char* argv[]) {", "\n\u00a0char str[] = \u201cabcdefg\u201d;", "\n\u00a0printf(\u201cstrSource=%s\\n\u201d, str);", "\n\u00a0change(str);", "\n\u00a0printf(\u201cstrResult=%s\\n\u201d, str);", "\n\u00a0return getchar();", "\n}"], "title": "\u4e0d\u5f00\u8f9f\u7528\u4e8e\u4ea4\u6362\u6570\u636e\u7684\u4e34\u65f6\u7a7a\u95f4\uff0c\u5982\u4f55\u5b8c\u6210\u5b57\u7b26\u4e32\u7684\u9006\u5e8f"},
{"contents": ["#include \u201cstdafx.h\u201d", "\nchar *MaxSubString(char *str1, char *str2) {", "\n\u00a0int i, j, k, index, max=0;", "\n\u00a0for(i=0; str1[i]; i++)", "\n\u00a0\u00a0for(j=0; str2[j]; j++) {", "\n\u00a0\u00a0\u00a0for(k=0; str1[i+k]==str2[j+k] && (str2[i+k] || str1[i+k]); k++);", "\n\u00a0\u00a0\u00a0if(k>max) {\u00a0\u00a0// \u51fa\u73b0\u5927\u4e8e\u5f53\u524d\u5b50\u4e32\u957f\u5ea6\u7684\u5b50\u4e32\uff0c\u5219\u66ff\u6362\u5b50\u4e32\u4f4d\u7f6e\u548c\u7a0b\u5ea6", "\n\u00a0\u00a0\u00a0\u00a0index = j;\u00a0max = k;", "\n\u00a0\u00a0\u00a0}", "\n\u00a0\u00a0}", "\n\u00a0char *strResult = (char *)calloc(sizeof(char), max+1);", "\n\u00a0for(i=0; i<max; i++)\u00a0\u00a0", "\n\u00a0\u00a0strResult[i] = str2[index++];", "\n\u00a0return strResult;", "\n}", "int main(int argc, char* argv[]) {", "\n\u00a0char str1[] = \u201cabractyeyt\u201d, str2[] = \u201cdgdsaeactyey\u201d;", "\n\u00a0char *strResult = MaxSubString(str1, str2);", "\n\u00a0printf(\u201cstr1=%s\\nstr2=%s\\nMaxSubString=%s\\n\u201d, str1, str2, strResult);", "\n}"], "title": "\u6c42\u4e24\u4e2a\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u6700\u957f\u5b50\u4e32\uff08\u795e\u5dde\u6570\u7801\u4ee5\u524d\u8bd5\u9898\uff09\u3002\u5982\u201dabractyeyt\u201d,\u201ddgdsaeactyey\u201d\u7684\u6700\u5927\u5b50\u4e32\u4e3a\u201dactyet\u201d\u3002"},
{"contents": ["#include \u201cstdafx.h\u201d", "\n#define N 10", "\nint part(int list[], int low, int high) {\u00a0\u00a0// \u4e00\u8d9f\u6392\u5e8f\uff0c\u8fd4\u56de\u5206\u5272\u70b9\u4f4d\u7f6e", "\n\u00a0int tmp = list[low];", "\n\u00a0while(low<high) {", "\n\u00a0\u00a0while(low<high && list[high]>=tmp) \u2013high;", "\n\u00a0\u00a0list[low] = list[high];", "\n\u00a0\u00a0while(low<high && list[low]<=tmp)\u00a0 ++low;", "\n\u00a0\u00a0list[high] = list[low];", "\n\u00a0}", "\n\u00a0list[low] = tmp;", "\n\u00a0return low;", "\n}", "\nvoid QSort(int list[], int low, int high)\u00a0{\u00a0// \u5e94\u7528\u9012\u5f52\u8fdb\u884c\u5feb\u901f\u6392\u5e8f", "\n\u00a0if(low<high) {", "\n\u00a0\u00a0int mid = part(list, low, high);", "\n\u00a0\u00a0QSort(list, low, mid-1);", "\n\u00a0\u00a0QSort(list, mid+1, high);", "\n\u00a0}", "\n}", "\nvoid show(int list[], int n) {\u00a0\u00a0\u00a0\u00a0// \u8f93\u51fa\u5217\u8868\u4e2d\u5143\u7d20", "\n\u00a0for(int i=0; i<n; i++)", "\n\u00a0\u00a0printf(\u201c%d \u201c, list[i]);", "\n\u00a0printf(\u201c\\n\u201d);", "\n}", "\nint main(int argc, char* argv[]) {", "\n\u00a0int list[N] = {23, 65, 26, 1, 6, 89, 3, 12, 33, 8};", "\n\u00a0show(list, N);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// \u8f93\u51fa\u6392\u5e8f\u524d\u5e8f\u5217", "\n\u00a0QSort(list, 0, N-1);\u00a0\u00a0\u00a0\u00a0\u00a0// \u5feb\u901f\u6392\u5e8f", "\n\u00a0show(list, N);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// \u8f93\u51fa\u6392\u5e8f\u540e\u5e8f\u5217", "\n}"], "title": "\u5feb\u901f\u6392\u5e8f\uff08\u4e1c\u8f6f\u559c\u6b22\u8003\u7c7b\u4f3c\u7684\u7b97\u6cd5\u586b\u7a7a\u9898\uff0c\u53c8\u5982\u5806\u6392\u5e8f\u7684\u7b97\u6cd5\u7b49\uff09"},
{"contents": ["Q:\u00a0 Difference between run time binding and compile time binding", "\nA:\u00a0 compile time bind(early binding) includes:\u00a0 function overloading, operator overloading.", "\nrun-time binding(late binding): polymorphism(virtual function), i.e:\u00a0 base class pointer(or reference) is allocated a pointer(or reference) of derived class, the actual func call is only determined during runtime through virtual table entry(and vfptr).", "Notes about (pure) Virtual function: The two most salient features of pure virtual functions are that they must be redeclared by any concrete class that inherits them, and they typically have no definition in abstract classes.", "\n\u2022\u00a0\u00a0 \u00a0The purpose of declaring a pure virtual function is to have derived classes inherit a function interface only", "\n\u2022\u00a0\u00a0 \u00a0The purpose of declaring a simple virtual function is to have derived classes inherit a function interface as well as a default implementation.", "Some sample code:", "\nclass B {", "\npublic:", "\nvoid mf();", "\n\u2026", "\n};", "class D: public B {", "\npublic:", "\nvoid mf();\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // hides B::mf; see Item 50", "\n\u2026", "\n};", "D x;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // x is an object of type D", "\nB *pB = &x;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // get pointer to x", "\n*pD = &x;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // get pointer to x", "\npB->mf();\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // call mf through pointer", "\npD->mf();\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // call mf through pointer", "\n//Note: pB->mf() binds to B::mf()", "\n//\u00a0\u00a0\u00a0\u00a0\u00a0 pD->mf() binds to D::mf()", "\n//However, if B::mf() is declared virtual, \u201cdynmica binding\u201d will come into play, which will have both calls to D::mf()!!!", "Q: Why does C/C++ give better run-time performance than Java?", "\nA:\u00a0 Java bytecode is interpreted instead of compiled(as of C/C++), platform independence askes Java virtual machine to \u201cinterpret\u201d Java bytecode(*.class) again on a particular computer architecture, thus execute more machine-language instructions.", "Q:\u00a0 What errors are caught at compile time vs link time?", "\nA:\u00a0\u00a0 compile time: syntactical & semantical errors are caught.", "\nlink time:\u00a0 dependcncy errors (i.e: resolval of function calls or errors in including other modules)", "Q: C or C++ conditional compilation", "\nA:", "\n#ifdef/ifndef", "\n#else/elif", "\n#error \u201c__FILE \u2026..\u201d\u00a0\u00a0 # print out diagnostic msg.", "\n#endif", "Q: What is the value of \u201ca\u201d after this?\u00a0 (Similar question asked by Fortinet during onsite coding interview)", "\nint (*a) [10];", "\na++;", "\nA: if size of int is 4 bytes, a++ will points to somewhere about 4*10 bytes after intially set: 0\u00d70 (possibly, not 100% sure, only static variable will be allocated virtual addr: 0\u00d70), thus value of \u201ca\u201d could be: 40.", "Q:\u00a0 Given a struct:", "\nstruct s {", "\nint a;", "\nchar b;", "\nint c;", "\nchar d;", "\n};", "\nWhat\u2019s your take on the size of s?\u00a0 (Yahoo! Onsite)", "\nA:\u00a0 If you answer 10 and you think you are alright, you are wrecked, it\u2019s 16.", "\nWhat about\u00a0 struct s { int a; int c; char b; char d; }; ?\u00a0 It\u2019s 12 bytes dude.", "\nWhy?\u00a0 Each char will occupy a full word(4-bytes)", "\nWhen a very very long link-list with element the size of struct s, sequence of definition matters!", "Q:\u00a0 Tell me which is faster? Strcpy() or memcpy()?\u00a0 (Netli onsite)", "\nA:\u00a0\u00a0 memcpy() is way faster than strcpy(). Why?\u00a0 Memcpy() copies by word boundry, that is 4-byte a time.", "Q: Is it possible to keep 2 stacks in a single array, if one grows from position one of the array, and the other grows from the last position. Write a procedure PUSH(x,s) that pushes element x onto stack S, where S is one or the other of these two stacks. Include all necessary error checks", "\nA:\u00a0\u00a0\u00a0\u00a0 The array shud be visible to both stacks (and therefore be global, or should provide equivalent effect). Also the stack tops shud be taken care of. one top will decrement everytime the push method is called and one would be incremented. As soon as s1.top==s2.top we shud throw an exception.", "Q:\u00a0 fibonacci 0 1 1 2 3 5 8 13 21 \u2026.", "\nA:\u00a0 int fib( int n ){", "\nif (n==1) return 1;", "\nelse if(n==0) return 0;", "\nelse return fib(n-1) + fib(n-2);", "\n}", "Q:\u00a0 sort a link-list . (single link-list)", "\nA:\u00a0 Mergesort, quick-sort(? for array?), heapsort(),\u00a0 LBucketSort \u2026", "void LBucketSort(PNODE phead)", "\n{", "\nPNODE pstep, pnode;", "\nint t;", "\nif(phead == NULL) return(NULL);", "\npnode = phead;", "\nwhile (pnode)", "\n{", "\npstep = pnode->next;", "\nwhile (pstep)", "\n{", "\nif (pnode->d > pstep->d)", "\n{", "\nt = pnode->d;", "\npnode->d = pstep->d;", "\npstep->d = t;", "\n}", "\npstep = pstep->next;", "\n}", "\npnode = pnode->next;", "\n}", "\n} //-END-", "================================ Sort and Searching in-depth review ================================", "Note:", "\nSorting:", "\nfor arrays:\u00a0 bubble sort, linear insertion, quicksort, shell sort, heap sort, \u2026", "\nfor other data strucutures(list..):\u00a0 merge sort, quicksort for lists, bucket sort, radix sort, treesort,", "Merging:", "\nlist merging:\u00a0\u00a0\u00a0 O(N), merge_2_lists(list *a, list *b); while() loop one a or b once is enough.", "http://www.dcc.uchile.cl/~rbaeza/handbook/algs/4/431.merge.c.html", "array merging:"], "title": "C/Algorithm/Data Structure/Compiler Related Questions \uff082\uff09"},
{"contents": ["#include \u201cstdafx.h\u201d", "\n#include \u201cmath.h\u201d", "\nint main(int argc, char* argv[]) {", "\n\u00a0int Even=78, Prime1, Prime2, Tmp1, Tmp2;", "\n\u00a0for(Prime1=3; Prime1<=Even/2; Prime1+=2) {", "\n\u00a0\u00a0for(Tmp1=2,Tmp2=sqrt(float(Prime1)); Tmp1<=Tmp2 && Prime1%Tmp1 != 0; Tmp1++);", "\n\u00a0\u00a0if(Tmp1<=Tmp2) continue;", "\n\u00a0\u00a0Prime2 = Even-Prime1;", "\n\u00a0\u00a0for(Tmp1=2,Tmp2=sqrt(float(Prime2)); Tmp1<=Tmp2 && Prime2%Tmp1 != 0; Tmp1++);", "\n\u00a0\u00a0if(Tmp1<=Tmp2) continue;", "\n\u00a0\u00a0printf(\u201c%d=%d+%d\\n\u201d, Even, Prime1, Prime2);", "\n\u00a0}", "\n}"], "title": "\u6b4c\u5fb7\u5df4\u8d6b\u731c\u60f3\u3002\u4efb\u4f55\u4e00\u4e2a\u5076\u6570\u90fd\u53ef\u4ee5\u5206\u89e3\u4e3a\u4e24\u4e2a\u7d20\u6570\u4e4b\u548c\u3002\uff08\u5176\u5b9e\u8fd9\u662f\u4e2aC\u4e8c\u7ea7\u8003\u8bd5\u7684\u6a21\u62df\u8bd5\u9898\uff09"},
{"contents": ["2005\u5e7411\u6708\u91d1\u5c71\u7b14\u8bd5\u9898\u3002\u7f16\u7801\u5b8c\u6210\u4e0b\u9762\u7684\u5904\u7406\u51fd\u6570\u3002\u51fd\u6570\u5c06\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u2019*'\u79fb\u5230\u4e32\u7684\u524d\u90e8\u5206\uff0c\u524d\u9762\u7684\u975e\u2019*'\u5b57\u7b26\u540e\u79fb\uff0c\u4f46\u4e0d\u80fd\u6539\u53d8\u975e\u2019*'\u5b57\u7b26\u7684\u5148\u540e\u987a\u5e8f\uff0c\u51fd\u6570\u8fd4\u56de\u4e32\u4e2d\u5b57\u7b26\u2019*'\u7684\u6570\u91cf\u3002\u5982\u539f\u59cb\u4e32\u4e3a\uff1aab**cd**e*12\uff0c\u5904\u7406\u540e\u4e3a*****abcde12\uff0c\u51fd\u6570\u5e76\u8fd4\u56de\u503c\u4e3a5\u3002\uff08\u8981\u6c42\u4f7f\u7528\u5c3d\u91cf\u5c11\u7684\u65f6\u95f4\u548c\u8f85\u52a9\u7a7a\u95f4\uff09", "\nint change(char *str) {\u00a0\u00a0\u00a0\u00a0\u00a0/* \u8fd9\u4e2a\u7b97\u6cd5\u5e76\u4e0d\u9ad8\u6548\uff0c\u4ece\u540e\u5411\u524d\u641c\u7d22\u6548\u7387\u8981\u9ad8\u4e9b */", "\n\u00a0int count = 0;\u00a0\u00a0\u00a0\u00a0\u00a0/* \u8bb0\u5f55\u4e32\u4e2d\u5b57\u7b26\u2019*'\u7684\u4e2a\u6570 */", "\n\u00a0for(int i=0, j=0; str[i]; i++) {\u00a0\u00a0/* \u91cd\u4e32\u9996\u5f00\u59cb\u904d\u5386 */", "\n\u00a0\u00a0if(str[i]==\u2019*') {\u00a0\u00a0\u00a0\u00a0/* \u9047\u5230\u5b57\u7b26\u2019*\u2019 */", "\n\u00a0\u00a0\u00a0for(j=i-1; str[j]!=\u2019*'&&j>=0; j\u2013) /* \u91c7\u7528\u7c7b\u4f3c\u63d2\u5165\u6392\u5e8f\u7684\u601d\u60f3\uff0c\u5c06*\u524d\u9762 */", "\n\u00a0\u00a0\u00a0\u00a0str[j+1]=str[j];\u00a0\u00a0\u00a0\u00a0 /* \u7684\u975e*\u5b57\u7b26\u9010\u4e2a\u540e\u79fb\uff0c\u76f4\u5230\u9047\u5230*\u5b57\u7b26 */", "\n\u00a0\u00a0\u00a0str[j+1] = \u2018*\u2019;", "\n\u00a0\u00a0\u00a0count++;", "\n\u00a0\u00a0}", "\n\u00a0}", "\n\u00a0return count;", "\n}", "\nint main(int argc, char* argv[]) {", "\n\u00a0char str[] = \u201cab**cd**e*12\u2033;", "\n\u00a0printf(\u201cstr1=%s\\n\u201d, str);", "\n\u00a0printf(\u201cstr2=%s, count=%d\u201d, str, change(str));", "\n}", "\n// \u7ec8\u4e8e\u5f97\u5230\u4e00\u4e2a\u6bd4\u8f83\u9ad8\u6548\u7684\u7b97\u6cd5\uff0c\u4e00\u4e2a\u7f51\u53cb\u63d0\u4f9b\uff0c\u4f30\u8ba1\u5e94\u8be5\u548c\u91d1\u5c71\u9762\u8bd5\u5b98\u7684\u60f3\u6cd5\u4e00\u81f4\u3002\u7b97\u6cd5\u5982\u4e0b\uff1a", "\nint change(char *str) {", "\n\u00a0int i,j=strlen(str)-1;", "\n\u00a0for(i=j; j>=0; j\u2013) {", "\n\u00a0\u00a0if(str[i]!=\u2019*') {", "\n\u00a0\u00a0\u00a0i\u2013;", "\n\u00a0\u00a0} else if(str[j]!=\u2019*') {", "\n\u00a0\u00a0\u00a0str[i] = str[j];", "\n\u00a0\u00a0\u00a0str[j] = \u2018*\u2019;", "\n\u00a0\u00a0\u00a0i\u2013;", "\n\u00a0\u00a0}", "\n\u00a0}", "\n\u00a0return i+1;", "\n}"], "title": "2005\u5e7411\u6708\u91d1\u5c71\u7b14\u8bd5\u9898"},
{"contents": ["\u7f16\u7801\u5b9e\u73b0\u5b57\u7b26\u4e32\u8f6c\u6574\u578b\u7684\u51fd\u6570\uff08\u5b9e\u73b0\u51fd\u6570atoi\u7684\u529f\u80fd\uff09\uff0c\u636e\u8bf4\u662f\u795e\u5dde\u6570\u7801\u7b14\u8bd5\u9898\u3002\u5982\u5c06\u5b57\u7b26\u4e32 \u201d+123\u201d\uf0e0123, \u201d-0123\u201d\uf0e0-123, \u201c123CS45\u201d\uf0e0123, \u201c123.45CS\u201d\uf0e0123, \u201cCS123.45\u201d\uf0e00", "\n#include \u201cstdafx.h\u201d", "\nint str2int(const char *str) {\u00a0\u00a0\u00a0\u00a0// \u5b57\u7b26\u4e32\u8f6c\u6574\u578b\u51fd\u6570", "\n\u00a0int i=0, sign=1, value = 0;", "\n\u00a0if(str==NULL)\u00a0 return NULL;\u00a0\u00a0\u00a0\u00a0// \u7a7a\u4e32\u76f4\u63a5\u8fd4\u56de NULL", "\n\u00a0if(str[0]==\u2019-\u2019 || str[0]==\u2019+') {\u00a0\u00a0\u00a0// \u5224\u65ad\u662f\u5426\u5b58\u5728\u7b26\u53f7\u4f4d", "\n\u00a0\u00a0i = 1;", "\n\u00a0\u00a0sign = (str[0]==\u2019-\u2019 ? -1 : 1);", "\n\u00a0}", "\n\u00a0for(; str[i]>=\u20190\u2032 && str[i]<=\u20199\u2032; i++)\u00a0// \u5982\u679c\u662f\u6570\u5b57\uff0c\u5219\u7ee7\u7eed\u8f6c\u6362", "\n\u00a0\u00a0value = value * 10 + (str[i] \u2013 \u20190\u2032);", "\n\u00a0return sign * value;", "\n}", "int main(int argc, char *argv[]) {", "\n\u00a0char *str = \u201c-123.45CS67\u2033;", "\n\u00a0int\u00a0 val\u00a0 = str2int(str);", "\n\u00a0printf(\u201cstr=%s\\tval=%d\\n\u201d, str, val);", "\n}"], "title": "\u7f16\u7801\u5b9e\u73b0\u5b57\u7b26\u4e32\u8f6c\u6574\u578b\u7684\u51fd\u6570"},
{"contents": ["50\uff0e\u5df2\u77e5\u5b66\u751f\u7684\u8bb0\u5f55\u7531\u5b66\u53f7\u548c\u5b66\u4e60\u6210\u7ee9\u6784\u6210\uff0cN\u540d\u5b66\u751f\u7684\u6570\u636e\u5df2\u5b58\u5165a\u7ed3\u6784\u4f53\u6570\u7ec4\u4e2d\u3002\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u8be5\u51fd\u6570\u7684\u529f\u80fd\u662f\uff1a\u627e\u51fa\u6210\u7ee9\u6700\u9ad8\u7684\u5b66\u751f\u8bb0\u5f55\uff0c\u901a\u8fc7\u5f62\u53c2\u8fd4\u56de\u4e3b\u51fd\u6570(\u89c4\u5b9a\u53ea\u6709\u4e00\u4e2a\u6700\u9ad8\u5206)\u3002\u5df2\u7ed9\u51fa\u51fd\u6570\u7684\u9996\u90e8\uff0c\u8bf7\u5b8c\u6210\u8be5\u51fd\u6570\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "#include <string.h>", "#include <conio.h>", "#define\u00a0 N\u00a0 10", "\u00a0", "typedef\u00a0 struct\u00a0 ss", "{", "char\u00a0 num[10];", "int\u00a0 s;", "} STU;", "void\u00a0 fun(STU a[], STU *s)", "{", "\u00a0", "}", "main ( )", "{", "STU a[N]={ {\u201cA01\u2033,81},{\u201cA02\u2033,89},{\u201cA03\u2033,66},{\u201cA04\u2033,87},{\u201cA05\u2033,77},", "{\u201cA06\u2033,90},{\u201cA07\u2033,79},{\u201cA08\u2033,61},{\u201cA09\u2033,80},{\u201cA10\u2033,71} }, m\u00a0 ;", "int\u00a0 i;", "clrscr();", "printf(\u201c***** The original data *****\\n\u201d);", "for ( i=0; i<N; i++ )", "printf(\u201cN0=%s\u00a0 Mark=%d\\n\u201d, a[i].num,a[i].s);", "fun ( a, &m);", "printf(\u201c***** THE RESULT*****\\n\u201d);", "printf(\u201cThe top\u00a0 :\u00a0 %s , %d\\n\u201d, m.num, m.s);", "}", "\u00a0", "54\uff0e\u5b66\u751f\u7684\u8bb0\u5f55\u7531\u5b66\u53f7\u548c\u6210\u7ee9\u7ec4\u6210\uff0cN\u540d\u5b66\u751f\u7684\u6570\u636e\u5df2\u5728\u4e3b\u51fd\u6570\u4e2d\u653e\u5165\u7ed3\u6784\u4f53\u6570\u7ec4s\u4e2d\uff0c\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\uff1b\u628a\u4f4e\u4e8e\u5e73\u5747\u5206\u7684\u5b66\u751f\u6570\u636e\u653e\u5728b\u6240\u6307\u7684\u6570\u7ec4\u4e2d\uff0c\u4f4e\u4e8e\u5e73\u5747\u5206\u7684\u5b66\u751f\u4eba\u6570\u901a\u8fc7\u5f62\u53c2n\u4f20\u56de\uff0c\u5e73\u5747\u5206\u901a\u8fc7\u51fd\u6570\u503c\u8fd4\u56de\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include\u00a0 <stdio.h>", "#define\u00a0\u00a0\u00a0 N\u00a0\u00a0\u00a0 8", "typedef\u00a0\u00a0 struct", "{", "char\u00a0 num[10];", "double\u00a0\u00a0 s;", "}\u00a0 STREC;", "double\u00a0 fun ( STREC\u00a0 *a,\u00a0 STREC\u00a0 *b,\u00a0 int\u00a0 *n )", "{", "\u00a0", "}", "main()", "{", "STREC\u00a0\u00a0 s[N]={{\u201cGA05\u2033,85}, {\u201cGA03\u2033,76}, {\u201cGA02\u2033,69}, {\u201cGA04\u2033,85},", "{\u201cGA01\u2033,91}, {\u201cGA07\u2033,72}, {\u201cGA08\u2033,64}, {\u201cGA06\u2033, 87}};", "STREC\u00a0\u00a0 h[N]; t;FILE *out ;", "int\u00a0 i, j, n;", "double\u00a0\u00a0 ave;", "ave=fun ( s, h, &n );", "printf (\u201cThe %d student data which is lower than %7.3f:\\n\u201d, n, ave );", "for (i=0; i<n; i++)", "printf (\u201c%s %4.1f\\n\u201d, h[i]. num, h[i]. s);", "printf (\u201c\\n\u201d);", "out=fopen (\u201cout13.dat\u201d,\u201dw\u201d);", "fprintf (out,\u00a0 \u201c%d\\n%7.3f\\n\u201d,\u00a0 n,\u00a0 ave);", "for (i=0; i<n; i++)", "for(j=i+1;j<n;j++)", "if(h[i].s>h[j].s)", "{", "t=h[i] ;", "h[i]=h[j];", "h[j]=t;", "}", "for(i=0;i<n; i++)", "fprintf (out, \u201c%4.1f\\n\u201d, h[i].s );", "fclose (out );", "}", "\u00a0", "16\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\u7684\u51fd\u6570Creatlink\u7684\u529f\u80fd\u662f\uff1a\u521b\u5efa\u5e26\u5934\u7ed3\u70b9\u7684\u5355\u5411\u94fe\u8868\uff0c\u5e76\u4e3a\u5404\u7ed3\u70b9\u6570\u636e\u57df\u8d4b0\u5230m-1\u7684\u503c\u3002", "\u8bf7\u6539\u6b63\u51fd\u6570Creatlink\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <stdio.h>", "#include <conio.h>", "#include <stdlib.h>", "typedef struct aa", "{", "int data;", "struct aa *next;", "} NODE;", "NODE *Creatlink(int n, int m)", "{", "NODE *h=NULL, *p, *s;", "int i;", "s=(NODE *)malloc(sizeof(NODE));", "h=p;", "/********found********/", "p->next=NULL;", "for(i=1;i<n;i++)", "{", "s=(NODE *)malloc(sizeof(NODE));", "/********found********/", "s->data=rand()%m;", "s->next=p->next;", "p->next=s;", "p=p->next;", "}", "/********found********/", "return p;", "}", "outlink(NODE *h)", "{", "NODE *p;", "p=h->next;", "printf(\u201c\\n\\nTHE LIST :\\n\\n HEAD\u201d);", "while(p)", "{", "printf(\u201c->%d \u201c,p->data);", "p=p->next;", "}", "printf(\u201c\\n\u201d);", "}", "main()", "{", "NODE *head;", "clrscr();", "head=Creatlink(8,22);", "outlink(head);", "}", "\u00a0", "\u00a0", "18\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u5b9e\u73b0\u4e24\u4e2a\u6574\u6570\u7684\u4ea4\u6362\u3002\u4f8b\u5982\u7ed9a\u548cb\u5206\u522b\u8f93", "\u516560\u548c65\uff0c\u8f93\u51fa\u4e3a\uff1aa=65 b=60\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <stdio.h>", "#include <conio.h>", "/********found********/", "void fun(int a,int b)", "{", "int t;", "/********found********/", "t=b;", "b=a;", "a=t;", "}", "\u00a0", "main()", "{", "int a,b;", "clrscr();", "printf(\u201cEnter a,b: \u201c);", "scanf(\u201c%d%d\u201d,&a,&b);", "fun(&a,&b);", "printf(\u201ca=%d b=%d\\n\u201d,a,b);", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u5341\u516d\u5957\uff09"},
{"contents": ["46\uff0e\u5b66\u751f\u7684\u8bb0\u5f55\u7531\u5b66\u53f7\u548c\u6210\u7ee9\u7ec4\u6210\uff0cN\u540d\u5b66\u751f\u7684\u6570\u636e\u5df2\u5728\u4e3b\u51fd\u6570\u4e2d\u653e\u5165\u7ed3\u6784\u4f53\u6570\u7ec4s\u4e2d\uff0c\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\uff1a\u6309\u5206\u6570\u7684\u9ad8\u4f4e\u6392\u5217\u5b66\u751f\u7684\u8bb0\u5f55\uff0c\u9ad8\u5206\u5728\u524d\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include\u00a0 <stdio.h>", "#define\u00a0\u00a0\u00a0 N\u00a0 16", "typedef\u00a0\u00a0 struct", "{\u00a0 char\u00a0 num[10];", "int\u00a0\u00a0 s;", "}\u00a0 STREC;", "int\u00a0 fun ( STREC\u00a0 a[ ] )", "{", "\u00a0", "}", "main ()", "{\u00a0 STREC\u00a0 s[N]= {{\u201cGA005\u2033,85}, {\u201cGA003\u2033,76}, {\u201cGA002\u2033,69}, {\u201cGA004\u2033,85},", "{\u201cGA001\u2033,91}, {\u201cGA007\u2033,72}, {\u201cGA008\u2033,64}, {\u201cGA006\u2033, 87},", "{\u201cGA015\u2033,85}, {\u201cGA013\u2033,91}, {\u201cGA012\u2033,64}, {\u201cGA014\u2033,91},", "{\u201cGA011\u2033,66}, {\u201cGA017\u2033,64}, {\u201cGA018\u2033,64}, {\u201cGA016\u2033,72}};", "int\u00a0 i; FILE\u00a0 *out;", "fun ( s );", "printf (\u201cThe\u00a0 data\u00a0 after\u00a0 sorted\u00a0 :\\n\u201d);", "for (i=0; i<N;\u00a0 i++)", "{\u00a0 if\u00a0 ( (i)%4==0 ) printf (\u201c\\n\u201d);", "printf (\u201c%s\u00a0 %4d\u00a0 \u201c, s[i].num, s[i].s);", "}", "printf (\u201c\\n\u201d);", "out=fopen (\u201cout16.dat\u201d, \u201cw\u201d);", "for (i=0; i<N;\u00a0 i++)", "{\u00a0 if (\u00a0 (i)%4==0 && i )\u00a0 fprintf\u00a0 (out,\u00a0 \u201c\\n\u201d );", "fprintf (out,\u00a0 \u201c%4d\u201d, s[i].s);", "}", "fprintf ( out, \u201c\\n\u201d );", "fclose (out );", "}", "\u00a0", "47\uff0e\u8bf7\u7f16\u5199\u4e00\u4e2a\u51fd\u6570void fun(char*ss)\uff0c\u5176\u529f\u80fd\u662f\uff1a\u5c06\u5b57\u7b26\u4e32ss\u4e2d\u6240\u6709\u4e0b\u6807\u4e3a\u5947\u6570\u4f4d\u7f6e\u4e0a\u7684\u5b57\u6bcd\u8f6c\u6362\u4e3a\u5927\u5199(\u82e5\u8be5\u4f4d\u7f6e\u4e0a\u4e0d\u662f\u5b57\u6bcd\uff0c\u5219\u4e0d\u8f6c\u6362)\u3002", "\u4f8b\u5982\uff0c\u82e5\u8f93\u5165abc4EFgh\uff0c\u5219\u5e94\u8f93\u51faaBc4EFgH\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <conio.h>", "#include <stdio.h>", "void fun(char *ss)", "{", "\u00a0", "}", "\u00a0", "\u00a0", "void main( void )", "{", "char tt[51];", "clrscr();", "printf(\u201c\\nPlease enter an character string within 50 characters:\\n\u201d );", "gets( tt );", "printf(\u201c\\n\\nAfter changing, the string\\n\u00a0 %s\u201d, tt );", "fun(tt) ;", "printf( \u201c\\nbecomes\\n\u00a0 %s\u201d, tt );", "}", "\u00a0", "14.\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u548cfunx\u7684\u529f\u80fd\u662f\uff1a\u7528\u4e8c\u5206\u6cd5\u6c42\u65b9\u7a0b2x", "-4x", "+3x-6=0\u7684\u6839\uff0c\u5e76\u8981\u6c42\u7edd\u5bf9\u8bef\u5dee\u4e0d\u8d85\u8fc70.001\u3002\u4f8b\u5982\uff0c\u82e5\u7ed9m\u8f93\u5165-100\uff0c\u7ed9n\u8f93\u516590\uff0c\u5219\u51fd\u6570\u6c42\u5f97\u7684\u4e00\u4e2a\u6839\u503c\u4e3a2.000\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784\u3002", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include \u201cstdio.h\u201d", "#include \u201cmath.h\u201d", "double funx(double x)", "{", "return (2*x*x*x-4*x*x+3*x-6);", "}", "double fun(double m,double n)", "{", "/********found********/", "int r;", "r=(m+n)/2;", "/********found********/", "while(fabs(n-m)<0.001)", "{", "if(funx(r)*funx(n)<0)", "m=r;", "else", "n=r;", "r=(m+n)/2;", "}", "return r;", "}", "main()", "{", "double m,n,root;", "printf(\u201cEnter m n : \\n\u201d);", "scanf(\u201c%lf%lf\u201d,&m,&n);", "root=fun(m,n);", "printf(\u201croot=%6.3f\\n\u201d,root);", "}", "\u00a0", "\u00a0", "15\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u5224\u65ad\u5b57\u7b26ch\u662f\u5426\u4e0estr\u6240\u6307\u4e32\u4e2d\u7684\u67d0\u4e2a\u5b57", "\u7b26\u76f8\u540c\uff1b\u82e5\u76f8\u540c\uff0c\u5219\u4ec0\u4e48\u4e5f\u4e0d\u505a\uff0c\u82e5\u4e0d\u540c\uff0c\u5219\u5c06\u5176\u63d2\u5728\u4e32\u7684\u6700\u540e\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u8fdb\u884c\u6b63\u786e\u7684\u64cd\u4f5c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include<conio.h>", "#include<stdio.h>", "#include<string.h>", "/********found********/", "void fun(char str,char ch)", "{", "while ( *str && *str !=ch )", "str++;", "/********found********/", "if(*str==ch)", "{", "str[0]=ch;", "/********found********/", "str[1]=\u20190\u2032;", "}", "}", "main()", "{", "char s[81],c;", "clrscr();", "printf(\u201c\\n Please enter a string:\\n\u201d);", "gets(s);", "printf(\u201c\\n Please enter the character to search:\u201d);", "c=getchar();", "fun(s,c);", "printf(\u201c\\nThe result is %s\\n\u201d,s);", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u5341\u4e94\u5957\uff09"},
{"contents": ["43\uff0e\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u4ece\u4f20\u5165\u7684num\u4e2a\u5b57\u7b26\u4e32\u4e2d\u627e\u51fa\u6700\u957f\u7684\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5e76\u901a\u8fc7\u5f62\u53c2\u6307\u9488max\u4f20\u56de\u8be5\u4e32\u5730\u5740(\u7528****\u4f5c\u4e3a\u7ed3\u675f\u8f93\u5165\u7684\u6807\u5fd7)\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "#include <string.h>", "#include <conio.h>", "\u00a0", "char *fun(char (*a)[81],int num)", "{", "\u00a0", "}", "main()", "{", "char ss[10][81],*max;", "int n,i=0;", "clrscr() ;", "printf(\u201c\u8f93\u5165\u82e5\u5e72\u4e2a\u5b57\u7b26\u4e32:\u201d);", "gets(ss[i]);", "puts(ss[i]);", "while(!strcmp(ss[i],\u201d****\u201d)==0)", "{", "i++;", "gets(ss[i]);", "puts(ss[i]);", "}", "n=i;", "max=fun(ss,n);", "printf(\u201c\\nmax=%s\\n\u201d,max);", "}", "\u00a0", "45\uff0e\u5047\u5b9a\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u4e2d\u53ea\u5305\u542b\u5b57\u6bcd\u548c*\u53f7\u3002\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\uff1a\u53ea\u5220\u9664\u5b57\u7b26\u4e32\u524d\u5bfc\u548c\u5c3e\u90e8\u7684*\u53f7\uff0c\u4e32\u4e2d\u5b57\u6bcd\u4e4b\u95f4\u7684*\u53f7\u90fd\u4e0d\u5220\u9664\u3002\u5f62\u53c2n\u7ed9\u51fa\u4e86\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff0c\u5f62\u53c2h\u7ed9\u51fa\u4e86\u5b57\u7b26\u4e32\u4e2d\u524d\u5bfc*\u53f7\u7684\u4e2a\u6570\uff0c\u5f62\u53c2e\u7ed9\u51fa\u4e86\u5b57\u7b26\u4e32\u4e2d\u6700\u540e*\u53f7\u7684\u4e2a\u6570\u3002\u5728\u7f16\u5199\u51fd\u6570\u65f6\uff0c\u4e0d\u5f97\u4f7f\u7528C\u8bed\u8a00\u63d0\u4f9b\u7684\u5b57\u7b26\u4e32\u51fd\u6570\u3002", "\u4f8b\u5982\uff0c\u82e5\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u4e3a****A*BC*DEF*G*******\uff0c\u5220\u9664\u540e\uff0c\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u5219\u5e94\u5f53\u662fA*BC*DEF*G\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "#include <conio.h>", "\u00a0", "void\u00a0 fun( char *a, int n, int h, int e)", "{", "}", "\u00a0", "main()", "{", "char s[81],*t,*f;", "int m=0, tn=0, fn=0;", "printf(\u201cEnter a string:\\n\u201d);", "gets(s);", "t=f=s;", "while(*t)", "{", "t++;", "m++;", "}", "t\u2013;", "while(*t==\u2019*')", "{", "t\u2013;", "tn++;", "}", "while(*f==\u2019*')", "{", "f++;", "fn++;", "}", "fun( s, m,fn,tn );", "printf(\u201cThe string after deleted:\\n\u201d);", "puts(s);", "}", "\u00a0", "9\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u4ecen\u4e2a\u5b66\u751f\u7684\u6210\u7ee9\u4e2d\u7edf\u8ba1\u51fa\u4f4e\u4e8e\u5e73\u5747\u5206\u7684\u5b66\u751f\u4eba\u6570\uff0c\u6b64\u4eba\u6570\u7531\u51fd\u6570\u503c\u8fd4\u56de\uff0c\u5e73\u5747\u5206\u5b58\u653e\u5728\u5f62\u53c2aver\u6240\u6307\u7684\u5b58\u50a8\u5355\u5143\u4e2d\u3002\u4f8b\u5982\uff0c\u82e5\u8f93\u51658\u540d\u5b66\u751f\u7684\u6210\u7ee9\uff1a", "80.5 60 72 90.5 98 51.5\u00a0 88 64", "\u5219\u4f4e\u4e8e\u5e73\u5747\u5206\u7684\u5b66\u751f\u4eba\u6570\u4e3a4(\u5e73\u5747\u5206\u4e3a\uff1a75.5625)\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u7edf\u8ba1\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <conio.h>", "#include <stdio.h>", "#define N 20", "int fun(float *s,int n,float *aver)", "{", "float ave,t=0.0;", "int count=0,k,i;", "/********found********/", "for(k=0;k<n;k++)", "t=s[k];", "ave=t/n;", "for(i=0;i<n;i++)", "if(s[i]<ave)", "count++;", "/********found********/", "*aver=&ave;", "return count;", "}", "\u00a0", "main()", "{", "float s[30],aver;", "int m,i;", "clrscr();", "printf(\u201c\\nPlease enter m: \u201c);", "scanf(\u201c%d\u201d, &m);", "printf(\u201c\\nPlease enter %d mark :\\n \u201c, m);", "for(i=0;i<m;i++)", "scanf(\u201c%f\u201d,s+i);", "printf(\u201c\\nThe number of students : %d\\n\u201d,fun(s,m,&aver));", "printf(\u201cAve=%f\\n\u201d,aver);", "}", "\u00a0", "\u00a0", "11\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u5c06\u4e00\u4e2a\u7531\u516b\u8fdb\u5236\u6570\u5b57\u5b57\u7b26\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u4e0e\u5176\u9762\u503c\u76f8\u7b49\u7684\u5341\u8fdb\u5236\u6574\u6570\u3002\u89c4\u5b9a\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u6700\u591a\u53ea\u80fd\u5305\u542b5\u4f4d8\u8fdb\u5236\u6570\u5b57\u3002\u4f8b\u5982\uff0c\u82e5\u8f93\u516577777\uff0c\u5219\u8f93\u51fa\u5c06\u662f32767\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784\u3002", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <stdio.h>", "int fun(char *p)", "{", "int n;", "/********found********/", "n=*p-\u2019o';", "p++;", "/********found********/", "while(*p!=0)", "{", "n=n*7+*p-\u2019o';", "p++;", "}", "return n;", "}", "main()", "{", "char s[6];", "int i;", "int n;", "printf(\u201cEnter a string (0catal digits): \u201c);", "gets(s);", "if(strlen(s)>5)", "{", "printf(\u201cError:string too longer !\\n\\n\u201d);", "exit(0);", "}", "for(i=0;s[i];i++)", "if(s[i]<\u20190\u2032||s[i]>\u20197\u2032)", "{", "printf(\u201cError: %c not is ocatal digits!\\n\\n\u201d,s[i]);", "exit(0);", "}", "printf(\u201cThe original string: \u201c);", "puts(s);", "n=fun(s);", "printf(\u201c\\n%s is convered to intege number: %d\\n\\n\u201d,s,n);", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u5341\u56db\u5957\uff09"},
{"contents": ["40\uff0e\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u8be5\u51fd\u6570\u7684\u529f\u80fd\u662f\uff1a\u79fb\u52a8\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\uff0c\u79fb\u52a8\u7684\u89c4\u5219\u5982\u4e0b\uff1a\u628a\u7b2c1\u5230\u7b2cm\u4e2a\u5b57\u7b26\uff0c\u5e73\u79fb\u5230\u5b57\u7b26\u4e32\u7684\u6700\u540e\uff0c\u628a\u7b2cm+l\u5230\u6700\u540e\u7684\u5b57\u7b26\u79fb\u5230\u5b57\u7b26\u4e32\u7684\u524d\u90e8\u3002", "\u4f8b\u5982\uff0c\u5b57\u7b26\u4e32\u4e2d\u539f\u6709\u7684\u5185\u5bb9\u4e3aABCDEFGHIJK\uff0cm\u7684\u503c\u4e3a3\uff0c\u79fb\u52a8\u540e\uff0c\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u5e94\u8be5\u662fDEFGHIJKABC\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "#include <string.h>", "#define\u00a0\u00a0\u00a0 N\u00a0\u00a0\u00a0 80", "\u00a0", "void fun(char *w, int m)", "{\u00a0 char t;", "t=*w;*w=*(w+m-1);*(w+m-1)+t;", "if(m>1)", "fun(w+1,m-2);", "else return;", "}", "main()", "{", "char\u00a0 a[N]= \u201cABCDEFGHIJK\u201d;", "int m;", "printf(\u201cThe original string:\\n\u201d);", "puts(a);", "printf(\u201c\\n\\nEnter\u00a0 m:\u00a0 \u201c);", "scanf(\u201c%d\u201d,&m);", "fun(a,m);", "printf(\u201c\\nThe string after moving:\\n\u201d);", "puts(a);", "printf(\u201c\\n\\n\u201d);", "}", "\u00a0", "41\uff0e\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u8be5\u51fd\u6570\u7684\u529f\u80fd\u662f\uff1a\u5c06M\u884cN\u5217\u7684\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u7684\u5b57\u7b26\u6570\u636e\uff0c\u6309\u5217\u7684\u987a\u5e8f\u4f9d\u6b21\u653e\u5728\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u3002", "\u4f8b\u5982\uff0c\u82e5\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u7684\u6570\u636e\u4e3a\uff1a", "\u00a0", "\u5219\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u5e94\u662fWSHWSHWSHWSH\u3002", "\u6ce8\u610f\uff1b\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "#define\u00a0\u00a0\u00a0 M\u00a0\u00a0\u00a0 3", "#define\u00a0\u00a0\u00a0 N\u00a0\u00a0\u00a0 4", "void\u00a0 fun(char\u00a0 (*s)[N], char *b)", "{ \u00a0\u00a0\u00a0 int i,j,k=0;", "for(i=0;i<N;i++)", "for(j=0;j<M;j++)", "b[k++]=s[j][i];", "b[k]=\u2019\\0\u2032;", "\u00a0", "}", "main()", "{", "char\u00a0 a[100],w[M][N]={{\u2018w\u2019,'w\u2019, \u2018w\u2019,'w\u2019},{\u2018S\u2019,'S\u2019,'S\u2019,'S\u2019},{\u2018H\u2019,'H\u2019,'H\u2019,'H\u2019}};", "int\u00a0 i,j;", "printf(\u201cThe matrix:\\n\u201d);", "for(i=0; i<M; i++)", "{", "for(j=0;j<N; j++)", "printf(\u201c%3c\u201d,w[i][j]);", "printf(\u201c\\n\u201d);", "}", "fun(w,a);", "printf(\u201cThe A string:\\n\u201d);", "puts(a);", "printf(\u201c\\n\\n\u201d);", "}", "\u00a0", "4\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0cfun\u51fd\u6570\u7684\u529f\u80fd\u662f\uff1a\u5206\u522b\u7edf\u8ba1\u5b57\u7b26\u4e32\u4e2d\u5927\u5199\u5b57\u6bcd\u548c\u5c0f\u5199\u5b57\u6bcd\u7684\u4e2a\u6570\u3002", "\u4f8b\u5982\uff0c\u7ed9\u5b57\u7b26\u4e32S\u8f93\u5165\uff1aAaaaBBb123CCccccd\uff0c\u5219\u5e94\u8f93\u51fa\u7ed3\u679c\uff1aupper=5\uff0clower=9\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u8ba1\u7b97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <conio.h>", "#include <stdio.h>", "/********found********/", "void fun(char *s,int a,int b)", "{", "while(*s)", "{", "/********found********/", "if (*s>=\u2019A'&&*s<=\u2019Z')", "a++;", "/********found********/", "if(*s>=\u2019a'&&*s<=\u2019z')", "b++;", "s++;", "}", "}", "main()", "{", "char s[100];", "int upper=0, lower=0;", "clrscr();", "printf(\u201c\\nPlease a string : \u201c);", "gets(s);", "fun(s,&upper,&lower);", "printf(\u201c\\n upper=%d lower=%d\\n\u201d, upper,lower);", "}", "\u00a0", "\u00a0", "7\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u7528\u9009\u62e9\u6cd5\u5bf9\u6570\u7ec4\u4e2d\u7684n\u4e2a\u5143\u7d20\u6309\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u8fdb\u884c\u6392\u5e8f\u3002", "\u8bf7\u4fee\u6539\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u8ba1\u7b97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u548c\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <stdio.h>", "#define N 20", "void fun(int a[],int n)", "{", "int i,j,t,p;", "for(j=0;j<n-1;j++)", "{", "/********found********/", "p=j", "for(i=j;i<n;i++)", "{", "if(a[i]<a[p])", "{", "/********found********/", "p=i;", "t=a[p];", "a[p]=a[i];", "a[i]=t;", "}", "}", "}", "}", "\u00a0", "main()", "{", "int a[N]={9,6,8,3,-1},i,m=5;", "printf(\u201cdfrgddfgd:\u201d);", "for(i=0;i<m;i++)", "printf(\u201c%d\u201d,a[i]);", "printf(\u201c\\n\u201d);", "fun(a,m);", "printf(\u201cgfdghfg : \u201c);", "for(i=0;i<m;i++)", "printf(\u201c%d\u201d,a[i]);", "printf(\u201c\\n\u201d);", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u5341\u4e09\u5957\uff09"},
{"contents": ["29\uff0e\u8bf7\u7f16\u5199\u4e00\u4e2a\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\uff1a\u5c06ss\u6240\u6307\u5b57\u7b26\u4e32\u4e2d\u6240\u6709\u4e0b\u6807\u4e3a\u5947\u6570\u4f4d\u7f6e\u4e0a\u7684\u5b57\u6bcd\u8f6c\u6362\u4e3a\u5927\u5199(\u82e5\u8be5\u4f4d\u7f6e\u4e0a\u4e0d\u662f\u5b57\u6bcd\uff0c\u5219\u4e0d\u8f6c\u6362)\u3002", "\u4f8b\u5982\uff0c\u82e5\u8f93\u5165abc4EFg\uff0c\u5219\u5e94\u8f93\u51faaBc4EFg\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <conio.h>", "#include <stdio.h>", "#include <string.h>", "void fun\u00a0 ( char *ss)", "{", "}", "main( )", "{", "char tt[81];", "printf(\u201c\\n Please enter an string within 80 characters:\\n\u201d);", "gets( tt );", "printf(\u201c\\n\\nAfter changing, the string\\n\u00a0 \\%s\\n\u201d, tt );", "fun( tt );", "printf( \u201c\\nbecomes \\n\u00a0 \\%s\\n\u201d,\u00a0 tt\u00a0 );", "}", "\u00a0", "30\uff0e\u8bf7\u7f16\u5199\u4e00\u4e2a\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\uff1a\u6c42\u51fa\u4e00\u4e2a2xM\u6574\u578b\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u6700\u5927\u5143\u7d20\u7684\u503c\uff0c\u5e76\u5c06\u6b64\u503c\u8fd4\u56de\u8c03\u7528\u51fd\u6570\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684", "\u82e5\u5e72\u8bed\u53e5\u3002", "#define M 4", "#include <stdio.h>", "fun (int a[][M])", "{", "}", "main()", "{", "int arr[2][M]={5,8,3,45,76,-4,12,82} ;", "printf(\u201cmax=%d\\n\u201d, fun(arr)) ;", "}", "\u00a0", "61\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u6839\u636e\u6574\u578b\u5f62\u53c2m\uff0c\u8ba1\u7b97\u5982\u4e0b\u516c\u5f0f\u7684\u503c\u3002", "1\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a01\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a01\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a01", "y=\u00a0 \u2014\u2014\u2014\u2014\u00a0\u00a0 +\u00a0 \u2014\u2014\u2014\u2014\u00a0\u00a0\u00a0 + \u2014\u2014\u2014\u2014 \u2026 + \u2014\u2014\u2014\u2014", "100\u00d7100\u00a0 \u00a0\u00a0\u00a0\u00a0200\u00d7200\u00a0 \u00a0\u00a0\u00a0\u00a0300\u00d7300\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0m\u00d7m", "\u4f8b\u5982\uff0c\u82e5m=2000\uff0c\u5219\u5e94\u8f93\u51fa\uff1a0.000160\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u8ba1\u7b97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <conio.h>", "#include <stdio.h>", "\u00a0", "/********found********/", "fun ( int\u00a0 m )", "{", "double y = 0, d ;", "int\u00a0\u00a0\u00a0 i ;", "/********found********/", "for( i = 100, i <= m, i += 100 )", "{", "d = (double)i * (double)i ;", "y += 1.0 / d ;", "}", "return( y ) ;", "}", "\u00a0", "main( )", "{", "int\u00a0 n = 2000 ;", "clrscr( ) ;", "printf( \u201c\\nThe result is %lf\\n\u201d, fun ( n ) ) ;", "}", "\u00a0", "\u00a0", "62\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u8ba1\u7b97\u5e76\u8f93\u51fahigh\u4ee5\u5185\u6700\u5927\u768410\u4e2a\u7d20\u6570\u4e4b\u548c\u3002", "high\u7531\u4e3b\u51fd\u6570\u4f20\u7ed9fun\u51fd\u6570\u3002\u82e5high\u7684\u503c\u4e3a100\uff0c\u5219\u51fd\u6570\u7684\u503c\u4e3a732\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u7a0b\u5e8f\u80fd\u8f93\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <conio.h>", "#include <stdio.h>", "#include <math.h>", "\u00a0", "int fun( int high )", "{", "int sum = 0,\u00a0 n=0,\u00a0 j,\u00a0 yes;", "while ((high >= 2) && (n < 10))", "{", "yes = 1;", "for (j=2; j<=high/2; j++)", "/********found********/", "if (high % j ==0 )", "{", "yes=0;", "break", "}", "if (yes)", "{", "sum +=high;", "n++;", "}", "high\u2013;", "}", "return sum;", "}", "\u00a0", "main ( )", "{", "clrscr( );", "printf(\u201c%d\\n\u201d, fun (100));", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u4e5d\u5957\uff09"},
{"contents": ["36\uff0e\u5047\u5b9a\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u4e2d\u53ea\u5305\u542b\u5b57\u6bcd\u548c*\u53f7\u3002\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\uff1a\u5c06\u5b57\u7b26\u4e32\u4e2d\u7684\u524d\u5bfc*\u53f7\u5168\u90e8\u79fb\u5230\u5b57\u7b26\u4e32\u7684\u5c3e\u90e8\u3002", "\u4f8b\u5982\uff0c\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u4e3a*******A*BC*DEF*G****\uff0c\u79fb\u52a8\u540e\uff0c\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u5e94\u5f53\u662fA*BC*DEF*G***********\u3002\u5728\u7f16\u5199\u51fd\u6570\u65f6\uff0c\u4e0d\u5f97\u4f7f\u7528C\u8bed\u8a00\u63d0\u4f9b\u7684\u5b57\u7b26\u4e32\u51fd\u6570\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "#include <conio.h>", "void fun ( char *a)", "{", "\u00a0", "}", "main()", "{", "char\u00a0 s[81],*p;", "printf(\u201cEnter a string:\\n\u201d);", "gets(s);", "fun( s );", "printf(\u201cThe string after moveing:\\n\u201d);", "puts(s);", "}", "\u00a0", "37\uff0e\u67d0\u5b66\u751f\u7684\u8bb0\u5f55\u7531\u5b66\u53f7\u30018\u95e8\u8bfe\u7a0b\u6210\u7ee9\u548c\u5e73\u5747\u5206\u7ec4\u6210\uff0c\u5b66\u53f7\u548c8\u95e8\u8bfe\u7a0b\u7684\u6210\u7ee9\u5df2\u5728\u4e3b\u51fd\u6570\u4e2d\u7ed9\u51fa\u3002\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\uff1a\u6c42\u51fa\u8be5\u5b66\u751f\u7684\u5e73\u5747\u5206\u653e\u5728\u8bb0\u5f55\u7684ave\u6210\u5458\u4e2d\u3002\u8bf7\u81ea\u5df1\u5b9a\u4e49\u6b63\u786e\u7684\u5f62\u53c2\u3002", "\u4f8b\u5982\uff0c\u82e5\u5b66\u751f\u7684\u6210\u7ee9\u662f85.5\uff0c76\uff0c69.5\uff0c85\uff0c91\uff0c72\uff0c64.5\uff0c87.5\uff0c\u5219\u4ed6\u7684\u5e73\u5747\u5206\u5e94\u5f53\u662f78.875\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "#define\u00a0 N\u00a0 8", "typedef\u00a0 struct", "{", "char\u00a0 num[10];", "double\u00a0 s[N];", "double\u00a0 ave;", "} STREC;", "void fun()", "{", "}", "main()", "{", "STREC\u00a0 s={\u201cGA005\u2033,85.5,76,69.5,85,91,72,64.5,87.5};", "int\u00a0 i;", "fun( &s );", "printf(\u201cThe %s\u2019s student data:\\n\u201d, s.num);", "for(i=0;i<N;i++)", "printf(\u201c%4.1f\\n\u201d,s.s[i]);", "printf(\u201c\\nave=%7.3f\\n\u201d,s.ave);", "}", "\u00a0", "71\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u6c42k!(k<13)\uff0c\u6240\u6c42\u9636\u4e58\u7684\u503c\u4f5c\u4e3a\u51fd\u6570\u503c\u8fd4", "\u56de\u3002\u4f8b\u5982\uff1a\u82e5k=10\uff0c\u5219\u5e94\u8f93\u51fa3628800\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <conio.h>", "#include <stdio.h>", "long fun ( int k )", "{", "/********found********/", "if k > 0", "return (k*fun(k-1));", "/********found********/", "else", "if ( k=0 )", "return 1;", "}", "main()", "{", "int k = 10 ;", "clrscr() ;", "printf(\u201c%d!=%ld\\n\u201d, k, fun (k)) ;", "}", "\u00a0", "\u00a0", "73\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0cfun\u51fd\u6570\u7684\u529f\u80fd\u662f\uff1a\u4f20\u5165\u4e00\u4e2a\u6574\u6570m\uff0c\u8ba1\u7b97\u5982\u4e0b\u516c\u5f0f\u7684\u503c\u3002", "1\u00a0\u00a0\u00a0\u00a0 1\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1", "T=1- \uff0d \u2013 \uff0d -\u2026- \uff0d", "2\u00a0 \u00a0\u00a0\u00a03\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0m", "\u4f8b\u5982\uff0c\u82e5\u8f93\u51655\uff0c\u5219\u5e94\u8f93\u51fa-0.283333\u3002", "\u8bf7\u6539\u6b63\u51fd\u6570fun\u4e2d\u7684\u9519\u8bef\u6216\u5728\u6a2a\u7ebf\u5904\u586b\u4e0a\u9002\u5f53\u7684\u5185\u5bb9\u5e76\u628a\u6a2a\u7ebf\u5220\u9664\uff0c\u4f7f\u5b83\u80fd\u8ba1\u7b97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include<conio.h>", "#include<stdio.h>", "double fun(int m)", "{", "double t=1.0;", "int i;", "/********found********/", "for(i=2; i<=m;i++)", "t=1.0-1/i;", "/********found********/", "\u586b\u7a7a_______", "}", "main()", "{", "int m;", "clrscr();", "printf(\u201c\\nPlease enter 1 integer numbers:\\n\u201d);", "scanf(\u201c%d\u201d,&m);", "printf(\u201c\\n\\nThe result is %lf\\n\u201d,fun( m ) );", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u5341\u4e00\u5957\uff09"},
{"contents": ["24\uff0e\u8bf7\u7f16\u5199\u4e00\u4e2a\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\uff1a\u5c06\u4e00\u4e2a\u6570\u5b57\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u4e00\u4e2a\u6574\u6570(\u4e0d\u5f97\u8c03\u7528C\u8bed\u8a00\u63d0\u4f9b\u7684\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u6574\u6570\u7684\u51fd\u6570)\u3002", "\u4f8b\u5982\uff0c\u82e5\u8f93\u5165\u5b57\u7b26\u4e32\u201c-1234\u201d\uff0c\u5219\u51fd\u6570\u628a\u5b83\u8f6c\u6362\u4e3a\u6574\u6570\u503c-1234\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "#include <string.h>", "long fun ( char *p)", "{", "\u00a0", "}", "main()", "{", "char s[6];", "long\u00a0\u00a0\u00a0 n;", "printf(\u201cEnter a string:\\n\u201d);", "gets(s);", "n = fun(s);", "printf(\u201c%ld\\n\u201d,n);", "}", "\u00a0", "25\uff0e\u8bf7\u7f16\u5199\u4e00\u4e2a\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\uff1a\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff0c(\u4e0d\u5f97\u8c03\u7528C\u8bed\u8a00\u63d0\u4f9b\u7684\u6c42\u5b57\u7b26\u4e32\u957f\u5ea6\u7684\u51fd\u6570)\uff0c\u51fd\u6570\u8fd4\u56de\u8f83\u957f\u7684\u5b57\u7b26\u4e32\u3002\u82e5\u4e24\u4e2a\u5b57\u7b26\u4e32\u957f\u5ea6\u76f8\u540c\uff0c\u5219\u8fd4\u56de\u7b2c\u4e00\u4e2a\u5b57", "\u7b26\u4e32\u3002", "\u4f8b\u5982\uff0c\u8f93\u5165\uff1abeijing shanghai<CR>(<CR>\u4e3a\u56de\u8f66\u952e)\uff0c\u51fd\u6570\u5c06\u8fd4\u56deshanghai\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "char *fun ( char *s,\u00a0 char *t)", "{", "}", "\u00a0", "main( )", "{", "char a[20],b[10],*p,*q;", "int\u00a0 i;", "printf(\u201cInput 1th string:\u201d);", "gets(a);", "printf(\u201cInput 2th string:\u201d);", "gets( b);", "printf(\u201c%s\\n\u201d, fun(a, b ));", "}", "\u00a0", "38\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u901a\u8fc7\u67d0\u79cd\u65b9\u5f0f\u5b9e\u73b0\u4e24\u4e2a\u53d8\u91cf\u503c\u7684\u4ea4\u6362\uff0c\u89c4\u5b9a\u4e0d\u5141\u8bb8\u589e\u52a0\u8bed\u53e5\u548c\u8868\u8fbe\u5f0f\u3002\u4f8b\u5982\u53d8\u91cfa\u4e2d\u7684\u503c\u539f\u4e3a8\uff0cb\u4e2d\u7684\u503c\u539f\u4e3a3\uff0c\u7a0b\u5e8f\u8fd0\u884c\u540ea\u4e2d\u7684\u503c\u4e3a3\uff0cb\u4e2d\u7684\u503c\u4e3a8\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include<conio.h>", "#include<stdio.h>", "int fun(int *x,int y)", "{", "int t;", "/********found********/", "t = x ;", "x = y ;", "/********found********/", "return(y) ;", "}", "\u00a0", "main()", "{", "int a = 3, b = 8 ;", "clrscr() ;", "printf(\u201c%d\u00a0 %d\\n\u201d, a, b) ;", "b = fun(&a, b) ;", "printf(\u201c%d \u00a0%d\\n\u201d, a, b) ;", "}", "\u00a0", "50\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u5148\u5c06\u5728\u5b57\u7b26\u4e32s\u4e2d\u7684\u5b57\u7b26\u6309\u9006\u5e8f\u5b58\u653e\u5230t\u4e32\u4e2d\uff0c\u7136\u540e\u628as\u4e2d\u7684\u5b57\u7b26\u6309\u6b63\u5e8f\u8fde\u63a5\u5230t\u4e32\u7684\u540e\u9762\u3002\u4f8b\u5982\uff1a\u5f53s\u4e2d\u7684\u5b57\u7b26\u4e32\u4e3aABCDE\u65f6\uff0c\u5219t\u4e2d\u7684\u5b57\u7b26\u4e32\u5e94\u4e3aEDCBAABCDE\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <conio.h>", "#include <stdio.h>", "#include <string.h>", "\u00a0", "void fun(char *s,char *t)", "{", "int s1, i;", "s1 = strlen(s);", "/********found********/", "for (i=0; i<s1; i++)", "t[i] = s[s1-i];", "for (i=0; i<s1; i++)", "t[s1+i] = s[i];", "t[2*s1] = \u2018\\0\u2032;", "}", "\u00a0", "main()", "{", "char s[100], t[100];", "clrscr();", "printf(\u201c\\nPlease enter string s:\u201d);", "scanf(\u201c%s\u201d, s);", "fun(s, t);", "printf(\u201cThe result is: %s\\n\u201d,t);", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u4e03\u5957\uff09"},
{"contents": ["21\uff0e\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5bf9\u957f\u5ea6\u4e3a7\u4e2a\u5b57\u7b26\u7684\u5b57\u7b26\u4e32\uff0c\u9664\u9996\u3001\u5c3e\u5b57\u7b26\u5916\uff0c\u5c06\u5176\u4f595\u4e2a\u5b57\u7b26\u6309ASCII\u7801\u964d\u5e8f\u6392\u5217\u3002", "\u4f8b\u5982\uff0c\u82e5\u539f\u6765\u7684\u5b57\u7b26\u4e32\u4e3aCEAedca\uff0c\u5219\u6392\u5e8f\u540e\u8f93\u51fa\u4e3aCedcEAa\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "#include <ctype.h>", "#include <conio.h>", "void fun( char *s,int num)", "{", "}", "main()", "{", "char s[10];", "printf(\u201c\u8f93\u51657\u4e2a\u5b57\u7b26\u7684\u5b57\u7b26\u4e32:\u201d);", "gets(s);", "fun(s,7);", "printf(\u201c\\n%s\u201d, s);", "}", "\u00a0", "23\uff0e\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u8be5\u51fd\u6570\u7684\u529f\u80fd\u662f\uff1a\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u56de\u6587?\u82e5\u662f\u5219\u51fd\u6570\u8fd4\u56de1\uff0c\u4e3b\u51fd\u6570\u4e2d\u8f93\u51faYES\uff0c\u5426\u5219\u8fd4\u56de0\uff0c\u4e3b\u51fd\u6570\u4e2d\u8f93\u51faNO\u3002\u56de\u6587\u662f\u6307\u987a\u8bfb\u548c\u5012\u8bfb\u90fd\u4e00\u6837\u7684\u5b57\u7b26\u4e32\u3002", "\u4f8b\u5982\uff0c\u5b57\u7b26\u4e32LEVEL\u662f\u56de\u6587\uff0c\u800c\u5b57\u7b26\u4e32123312\u5c31\u4e0d\u662f\u56de\u6587\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "#define N 80", "int fun(char *str)", "{", "\u00a0", "}", "main()", "{", "char s[N] ;", "printf(\u201cEnter a string: \u201c) ;", "gets(s) ;", "printf(\u201c\\n\\n\u201d) ;", "puts(s) ;", "if(fun(s))", "printf(\u201c\u00a0 YES\\n\u201d) ;", "else", "printf(\u201c\u00a0 NO\\n\u201d) ;", "}", "\u00a0", "33\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u5c06s\u6240\u6307\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u6bcd\u8f6c\u6362\u4e3a\u6309\u5b57\u6bcd\u5e8f\u5217\u7684\u540e\u7eed\u5b57\u6bcd(\u4f46Z\u8f6c\u6362\u4e3aA\uff0cz\u8f6c\u6362\u4e3aa)\uff0c\u5176\u4ed6\u5b57\u7b26\u4e0d\u53d8\u3002", "\u8bf7\u6539\u6b63\u51fd\u6570fun\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include<stdio.h>", "#include<ctype.h>", "#include<conio.h>", "void fun(char *s)", "{", "/********found********/", "while(*s != \u2018@\u2019)", "{", "if(*s>=\u2019A'&&*s<=\u2019Z\u2019 || *s>=\u2019a'&&*s<=\u2019z')", "{", "if(*s==\u2019Z')", "*s=\u2019A';", "else", "if(*s==\u2019z')", "*s=\u2019a';", "else", "*s+=1;", "}", "/********found********/", "(*s)++;", "}", "}", "main()", "{", "char s[80];", "clrscr();", "printf(\u201c\\n Enter a string with length<80. :\\n\\n \u201c);", "gets(s);", "printf(\u201c\\n The string: \\n\\n \u201c);", "puts(s);", "fun(s);", "printf(\u201c\\n\\n The Cords:\\n\\n \u201c);", "puts(s);", "}", "\u00a0", "35\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0cfun\u51fd\u6570\u7684\u529f\u80fd\u662f\uff1a\u5c06p\u6240\u6307\u5b57\u7b26\u4e32\u4e2d\u6bcf\u4e2a\u5355\u8bcd\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd\u6539\u6210\u5927\u5199(\u8fd9\u91cc\u7684\u201c\u5355\u8bcd\u201d\u662f\u6307\u7531\u7a7a\u683c\u9694\u5f00\u7684\u5b57\u7b26\u4e32)\u3002\u4f8b\u5982\uff0c\u82e5\u8f93\u5165\uff1a", "I am a student to take the examination\uff0e", "\u5219\u5e94\u8f93\u51fa\uff1aI aM A studenT tO takE thE examination\uff0e", "\u8bf7\u4fee\u6539\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\u4e4b\u5904\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <conio.h>", "#include <ctype.h>", "#include <stdio.h>", "void fun ( char *p )", "{", "int k = 0;", "for( ; *p; p++ )", "/********found********/", "if( k )", "{", "if(p==\u2019 \u2018)", "{", "k = 0;", "/********found********/", "* p = toupper ( * (p-1) );", "}", "}", "else", "k = 1;", "}", "\u00a0", "main()", "{", "char chrstr[64];", "int d;", "clrscr();", "printf(\u201c\\nPlease enter an english sentence within 63 letters: \u201c);", "gets(chrstr);", "d=strlen(chrstr) ;", "chrstr[d+1]=\u2019 \u2018 ;", "chrstr[d+1] = 0 ;", "printf(\u201c\\n\\nBefor changing: %s\u201d, chrstr);", "fun(chrstr);", "printf(\u201c\\nAfter changing:\\n\u00a0 %s\u201d, chrstr);", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u516d\u5957\uff09"},
{"contents": ["15\uff0e\u8bf7\u7f16\u5199\u4e00\u4e2a\u51fd\u6570unsigned fun(unsigned\u00a0 w)\uff0cw\u662f\u4e00\u4e2a\u5927\u4e8e10\u7684\u65e0\u7b26\u53f7\u6574\u6570\uff0c\u82e5w\u662fn(n\u22652)\u4f4d\u7684\u6574\u6570\uff0c\u5219\u51fd\u6570\u6c42\u51faw\u7684\u540en-1\u4f4d\u7684\u6570\u4f5c\u4e3a\u51fd\u6570\u503c\u8fd4\u56de\u3002", "\u4f8b\u5982\uff1aw\u503c\u4e3a5923\uff0c\u5219\u51fd\u6570\u8fd4\u56de923\uff1b\u82e5w\u503c\u4e3a923\uff0c\u5219\u51fd\u6570\u8fd4\u56de23\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <conio.h>", "#include <stdio.h>", "unsigned fun ( unsigned w )", "{", "\u00a0", "}", "\u00a0", "main( )", "{", "unsigned x;", "clrscr( );", "printf ( \u201cEnter a unsigned integer number :\u00a0 \u201d );", "scanf ( \u201c%u\u201d, &x );", "printf ( \u201cThe original data is :\u00a0 %u\\n\u201d, x );", "if ( x<10 )", "printf (\u201cData error !\u201d);", "else", "printf ( \u201cThe result\u00a0 :\u00a0 %u\\n\u201d, fun ( x ) );", "}", "\u00a0", "19\uff0e\u7f16\u5199\u51fd\u6570fun\uff0c\u8be5\u51fd\u6570\u7684\u529f\u80fd\u662f\uff1a\u4ece\u5b57\u7b26\u4e32\u4e2d\u5220\u9664\u6307\u5b9a\u7684\u5b57\u7b26\u3002\u540c\u4e00\u5b57\u6bcd\u7684\u5927\u3001\u5c0f\u5199\u6309\u4e0d\u540c\u5b57\u7b26\u5904\u7406\u3002", "\u4f8b\u5982\uff1a\u82e5\u7a0b\u5e8f\u6267\u884c\u65f6\u8f93\u5165\u5b57\u7b26\u4e32\u4e3a\uff1aturbo c and borland c++\uff0c\u4ece\u952e\u76d8\u4e0a\u8f93\u5165\u5b57\u7b26n\uff0c\u5219\u8f93\u51fa\u540e\u53d8\u4e3a\uff1aturbo c ad borlad c++\uff1b\u5982\u679c\u8f93\u5165\u7684\u5b57\u7b26\u5728\u5b57\u7b26\u4e32\u4e2d\u4e0d\u5b58\u5728\uff0c\u5219\u5b57\u7b26\u4e32\u7167\u539f\u6837\u8f93\u51fa\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684", "\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "#include <conio.h>", "int fun(char s[],int c)", "{", "}", "main()", "{", "static char str[]=\u201dturbo c and borland c++\u201d;", "char ch;", "clrscr();", "printf(\u201c\u539f\u59cb\u5b57\u7b26\u4e32:%s\\n\u201d,str);", "printf(\u201c\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26:\u201d);", "scanf(\u201c%c\u201d,&ch);", "fun(str,ch);", "printf(\u201cstr[]=%s\\n\u201d,str);", "}", "\u00a0", "30\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u8ba1\u7b97\u6b63\u6574\u6570num\u7684\u5404\u4f4d\u4e0a\u7684\u6570\u5b57\u4e4b\u79ef\u3002\u4f8b\u5982\uff0c\u82e5\u8f93\u5165252\uff0c\u5219\u8f93\u51fa\u5e94\u8be5\u662f20\u3002\u82e5\u8f93\u5165202\uff0c\u5219\u8f93\u51fa\u5e94\u8be5\u662f0\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include<stdio.h>", "#include<conio.h>", "long fun(long num)", "{", "/********found********/", "long k;", "do", "{", "k*=num%10;", "/********found********/", "num\\=10;", "} while(num);", "return(k);", "}", "main()", "{", "long n;", "clrscr();", "printf(\u201c\\please enter a number:\u201d);", "scanf(\u201c%ld\u201d,&n);", "printf(\u201c\\n%ld\\n\u201d,fun(n));", "}", "\u00a0", "\u00a0", "31\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u5c06\u5b57\u7b26\u4e32tt\u4e2d\u7684\u5c0f\u5199\u5b57\u6bcd\u90fd\u6539\u4e3a\u5bf9\u5e94\u7684\u5927\u5199\u5b57\u6bcd\uff0c\u5176\u4ed6\u5b57\u7b26\u4e0d\u53d8\u3002\u4f8b\u5982\uff0c\u82e5\u8f93\u5165\u201cAb\uff0ccD\u201d\uff0c\u5219\u8f93\u51fa\u201cAB\uff0cCD\u201d\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u7edf\u8ba1\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <conio.h>", "#include <stdio.h>", "#include <string.h>", "char *fun(char tt[])", "{", "int i;", "/********found********/", "for(i=0;tt[i];i++)", "if((\u2018a\u2019<=tt[i])||(tt[i]<=\u2019z'))", "/********found********/", "tt[i]+=32;", "return(tt);", "}", "main()", "{", "int i;", "char tt[81];", "clrscr();", "printf(\u201c\\nPlease enter a string:\u201d);", "gets(tt);", "printf(\u201c\\nThe result string is :\\n%s\u201d,fun(tt));", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u4e94\u5957\uff09"},
{"contents": ["34\uff0e\u5b66\u751f\u7684\u8bb0\u5f55\u7531\u5b66\u53f7\u548c\u6210\u7ee9\u7ec4\u6210\uff0cN\u540d\u5b66\u751f\u7684\u6570\u636e\u5df2\u5728\u4e3b\u51fd\u6570\u4e2d\u653e\u5165\u7ed3\u6784\u4f53\u6570\u7ec4s\u4e2d\uff0c\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\uff1a\u628a\u5206\u6570\u6700\u9ad8\u7684\u5b66\u751f\u6570\u636e\u653e\u5728h\u6240\u6307\u7684\u6570\u7ec4\u4e2d\uff0c\u6ce8\u610f\uff1a\u5206\u6570\u6700\u9ad8\u7684\u5b66\u751f\u53ef\u80fd\u4e0d\u53ea\u4e00\u4e2a\uff0c\u51fd\u6570\u8fd4\u56de\u5206\u6570\u6700\u9ad8\u7684\u5b66\u751f\u7684\u4eba\u6570\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "#define\u00a0 N\u00a0 16", "\u00a0", "typedef\u00a0 struct", "{", "char\u00a0 num[10];", "int\u00a0\u00a0 s;", "}\u00a0 STREC;", "int\u00a0 fun ( STREC\u00a0 *a,\u00a0 STREC\u00a0 *b )", "{", "}", "main ()", "{", "STREC\u00a0 s[N]= {{\u201cGA05\u2033,85}, {\u201cGA03\u2033,76}, {\u201cGA02\u2033,69}, {\u201cGA04\u2033,85},", "{\u201cGA01\u2033,91}, {\u201cGA07\u2033,72}, {\u201cGA08\u2033,64}, {\u201cGA06\u2033, 87},", "{\u201cGA015\u2033,85}, {\u201cGA013\u2033,91}, {\u201cGA012\u2033,64}, {\u201cGA014\u2033,91},", "{\u201cGA011\u2033,77}, {\u201cGA017\u2033,64}, {\u201cGA018\u2033,64}, {\u201cGA016\u2033,72}};", "STREC\u00a0 h[N];", "int\u00a0 i, n;", "FILE *out;", "n=fun ( s, h );", "printf (\u201cThe\u00a0 %d\u00a0 highest\u00a0 score\u00a0 :\\n\u201d, n);", "for (i=0; i<n;\u00a0 i++)", "printf (\u201c%s\u00a0 %4d\\n\u201d, h[i]. num, h[i]. s);", "printf (\u201c\\n\u201d);", "out=fopen (\u201cout15.dat\u201d, \u201cw\u201d);", "fprintf (out, \u201c%d\\n\u201d, n);", "for (i=0;\u00a0 i<n;\u00a0 i++)", "fprintf (out,\u00a0 \u201c%4d\\n\u201d, h[i].s);", "fclose (out );", "}", "\u00a0", "35\uff0e\u8bf7\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u7528\u6765\u5220\u9664\u5b57\u7b26\u4e32\u4e2d\u7684\u6240\u6709\u7a7a\u683c\u3002", "\u4f8b\u5982\uff0c\u8f93\u5165asd af aa z67\uff0c\u5219\u8f93\u51fa\u4e3aasdafaaz67\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "#include <ctype.h>", "#include <conio.h>", "void fun(char *str)", "{", "}", "main()", "{", "char str[81];", "int n;", "clrscr() ;", "printf(\u201cInput a string:\u201d) ;", "gets(str);", "puts(str);", "fun(str);", "printf(\u201c*** str: %s\\n\u201d, str);", "}", "\u00a0", "64\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u5c06\u5927\u5199\u5b57\u6bcd\u8f6c\u6362\u4e3a\u5bf9\u5e94\u5c0f\u5199\u5b57\u6bcd\u4e4b\u540e\u7684\u7b2c\u4e94\u4e2a\u5b57\u6bcd\uff1b\u82e5\u5c0f\u5199\u5b57\u6bcd\u4e3av\uff5ez\uff0c\u4f7f\u5c0f\u5199\u5b57\u6bcd\u7684\u503c\u51cf21\u3002\u8f6c\u6362\u540e\u7684\u5c0f\u5199\u5b57\u6bcd\u4f5c\u4e3a\u51fd\u6570\u503c\u8fd4\u56de\u3002\u4f8b\u5982\uff0c\u82e5\u5f62\u53c2\u662f\u5b57\u6bcdA\uff0c\u5219\u8f6c\u6362\u4e3a\u5c0f\u5199\u5b57\u6bcdf\uff1b\u82e5\u5f62\u53c2\u662f\u5b57\u6bcdW\uff0c\u5219\u8f6c\u6362\u4e3a\u5c0f\u5199\u5b57\u6bcdb\u3002", "\u8bf7\u6539\u6b63\u51fd\u6570fun\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <stdio.h>", "#include <ctype.h>", "char\u00a0 fun(char\u00a0 c)", "{", "/********found********/", "if( c>=\u2019A\u2019 && c<=\u2019Z')", "c=c-32;", "/********found********/", "if(c>=\u2019a\u2019 && c<=\u2019u')", "c=c-5;", "else if(c>=\u2019v'&&c<=\u2019z')", "c=c-21;", "return c;", "}", "main()", "{", "char c1,c2;", "printf(\u201c\\nEnter a letter(A-Z):\u00a0 \u201c);", "c1=getchar();", "if( isupper(c1))", "{", "c2=fun(c1);", "printf(\u201c\\n\\nThe letter %c change to %c\\n\u201d, c1,c2);", "\u00a0", "}", "else", "printf(\u201c\\nEnter (A-Z)!\\n\u201d);", "}", "\u00a0", "\u00a0", "68\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u6839\u636e\u8f93\u5165\u7684\u4e09\u4e2a\u8fb9\u957f(\u6574\u578b\u503c)\uff0c\u5224\u65ad\u80fd\u5426\u6784\u6210\u4e09\u89d2\u5f62\uff1b\u6784\u6210\u7684\u662f\u7b49\u8fb9\u4e09\u89d2\u5f62\uff0c\u8fd8\u662f\u7b49\u8170\u4e09\u89d2\u5f62\u3002\u82e5\u80fd\u6784\u6210\u7b49\u8fb9\u4e09\u89d2\u5f62\u51fd\u6570\u8fd4\u56de3\uff0c\u82e5\u80fd\u6784\u6210\u7b49\u8170\u4e09\u89d2\u5f62\u51fd\u6570\u8fd4\u56de2\uff0c\u82e5\u80fd\u6784\u6210\u4e09\u89d2\u5f62\u51fd\u6570\u8fd4\u56de1\uff0c\u82e5\u4e0d\u80fd\u6784\u6210\u4e09\u89d2\u5f62\u51fd\u6570\u8fd4\u56de0\u3002", "\u8bf7\u6539\u6b63\u51fd\u6570fun\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <math.h>", "int fun(int\u00a0 a,int\u00a0 b,int\u00a0 c)", "{", "if(a+b>c && b+c>a && a+c>b)", "{", "/********found********/", "if(a==b && b==c)", "return 1;", "else", "if(a==b || b==c || a==c)", "return 2;", "else", "/********found********/", "return 3;", "}", "else", "return 0;", "}", "main()", "{", "int a,b,c,shape;", "printf(\u201c\\nInput a,b,c:\u00a0 \u201c);", "scanf(\u201c%d%d%d\u201d,&a,&b,&c);", "printf(\u201c\\na=%d,\u00a0 b=%d,\u00a0 c=%d\\n\u201d,a,b,c);", "shape=fun(a,b,c);", "printf(\u201c\\n\\nThe shape\u00a0 :\u00a0 %d\\n\u201d, shape);", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u5341\u5957\uff09"},
{"contents": ["4\uff0e\u8bf7\u7f16\u5199\u4e00\u4e2a\u51fd\u6570void fun(char *tt\uff0cint pp[])\uff0c\u7edf\u8ba1\u5728tt\u5b57\u7b26\u4e32\u4e2d\u201ca\u201d\u5230\u201cz\u201d26\u4e2a\u5b57\u6bcd\u5404\u81ea\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5e76\u4f9d\u6b21\u653e\u5728pp\u6240\u6307\u6570\u7ec4\u4e2d\u3002", "\u4f8b\u5982\uff0c\u5f53\u8f93\u5165\u5b57\u7b26\u4e32abcdefgabcdeabc\u540e\uff0c\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u5e94\u8be5\u662f\uff1a3 3 3 2 2 1 1 0 0 \u00a00\u00a0 0\u00a0 0\u00a0 0\u00a0 0\u00a0 0\u00a0 0\u00a0 0\u00a0 0\u00a0 0\u00a0 0\u00a0 0\u00a0 0\u00a0 0\u00a0 0\u00a0 0\u00a0 0", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "# include <conio.h>", "# include <stdio.h>", "void fun(char *tt, int pp[])", "{", "\u00a0", "}", "main()", "{\u00a0\u00a0 char aa[1000];", "int bb[26], k, n;", "clrscr() ;", "printf(\u201c\\nPlease enter a char string:\u201d);", "scanf(\u201c%s\u201d,aa);", "fun(aa,bb);", "for(k=0;k<26 ; k++)printf(\u201c%d\u201d,bb[k]);", "printf(\u201c\\n\u201d);", "}", "\u00a0", "7\uff0e\u8bf7\u7f16\u5199\u4e00\u4e2a\u51fd\u6570int fun(int*s\uff0cint t\uff0cint *k)\uff0c\u7528\u6765\u6c42\u51fa\u6570\u7ec4\u7684\u6700\u5927\u5143\u7d20\u5728\u6570\u7ec4\u4e2d\u7684\u4e0b\u6807\u5e76\u5b58\u653e\u5728k\u6240\u6307\u7684\u5b58\u50a8\u5355\u5143\u4e2d\u3002", "\u4f8b\u5982\uff0c\u8f93\u5165\u5982\u4e0b\u6574\u6570\uff1a876\u00a0 675\u00a0 896\u00a0 10l\u00a0 30l\u00a0 40l\u00a0 980\u00a0 43l\u00a0 451\u00a0 777 \uff0c\u5219\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a6\uff0c980\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "# include <conio.h>", "# include <stdio.h>", "\u00a0", "void fun(int *s, int t , int *k)", "{", "}", "main( )", "{", "int a[10]={876,675,896,101,301,401,980,431,451,777}, k ;", "clrscr( ) ;", "fun(a,10,&k);", "printf(\u201c%d, %d\\n\u201d, k, a[k]);", "}", "\u00a0", "25\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u8ba1\u7b97n!\u3002\u4f8b\u5982\uff0c\u7ed9n\u8f93\u51655\uff0c\u5219\u8f93\u51fal20.000000\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u7a0b\u5e8f\u80fd\u8f93\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <stdio.h>", "#include <conio.h>", "double fun(int n)", "{", "double result=1.0;", "/********found********/", "if n==0", "return 1.0;", "while(n>1&&n<170)", "/********found********/", "result =n\u2013;", "return result;", "}", "main()", "{", "int n;", "printf(\u201cInput N:\u201d);", "scanf(\u201c%d\u201d,&n);", "printf(\u201c\\n\\n%d!=%1f\\n\\n\u201d,n,fun(n));", "}", "\u00a0", "\u00a0", "26\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u5148\u4ece\u952e\u76d8\u4e0a\u8f93\u5165\u4e00\u4e2a3\u884c3\u5217\u77e9\u9635\u7684\u5404\u4e2a\u5143\u7d20\u7684\u503c\uff0c\u7136\u540e\u8f93\u51fa\u4e3b\u5bf9\u89d2\u7ebf\u5143\u7d20\u4e4b\u548c\u3002", "\u8bf7\u6539\u6b63\u51fd\u6570fun\u4e2d\u7684\u9519\u8bef\u6216\u5728\u6a2a\u7ebf\u5904\u586b\u4e0a\u9002\u5f53\u7684\u5185\u5bb9\u5e76\u628a\u6a2a\u7ebf\u5220\u9664\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include<stdio.h>", "int fun()", "{", "int a[3][3],sum;", "int i,j;", "/********found********/", "_____;", "for (i=0;i<3;i++)", "{", "for (j=0;j<3;j++)", "/********found********/", "scanf(\u201c%d,\u201d, a[i][j]);", "}", "for (i=0;i<3;i++)", "sum=sum+a[i][i];", "printf(\u201csum=%d\\n\u201d,sum);", "}", "\u00a0", "main()", "{", "fun();", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u56db\u5957\uff09"},
{"contents": ["38\uff0e\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\uff1a\u6c42\u51fass\u6240\u6307\u5b57\u7b26\u4e32\u4e2d\u6307\u5b9a\u5b57\u7b26\u7684\u4e2a\u6570\uff0c\u5e76\u8fd4\u56de\u6b64\u503c\u3002", "\u4f8b\u5982\uff0c\u82e5\u8f93\u5165\u5b57\u7b26\u4e32123412132\uff0c\u8f93\u5165\u5b57\u7b261\uff0c\u5219\u8f93\u51fa3\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <conio.h>", "#include <stdio.h>", "#define\u00a0 M 81", "int fun(char *ss, char c)", "{", "\u00a0", "}", "\u00a0", "main()", "{", "char\u00a0 a[M],\u00a0 ch;", "clrscr();", "printf(\u201c\\nPlease enter a string:\u201d);", "gets(a);", "printf(\u201c\\nPlease enter a char:\u201d);", "ch = getchar();", "printf(\u201c\\nThe number of the char is: %d\\n\u201d, fun(a, ch));", "}", "\u00a0", "39\uff0e\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u8be5\u51fd\u6570\u7684\u529f\u80fd\u662f\uff1a\u79fb\u52a8\u4e00\u7ef4\u6570\u7ec4\u4e2d\u7684\u5185\u5bb9\uff1b\u82e5\u6570\u7ec4\u4e2d\u6709n\u4e2a\u6574\u6570\uff0c\u8981\u6c42\u628a\u4e0b\u6807\u4ece0\u5230p\uff08p\u5c0f\u4e8e\u7b49\u4e8en-1\uff09\u7684\u6570\u7ec4\u5143\u7d20\u5e73\u79fb\u5230\u6570\u7ec4\u7684\u6700\u540e\u3002", "\u4f8b\u5982\uff0c\u4e00\u7ef4\u6570\u7ec4\u4e2d\u7684\u539f\u59cb\u5185\u5bb9\u4e3a\uff1a1\uff0c2\uff0c3\uff0c4\uff0c5\uff0c6\uff0c7\uff0c8\uff0c9\uff0c10\uff1bp\u7684\u503c\u4e3a3\u3002\u79fb\u52a8\u540e\uff0c\u4e00\u7ef4\u6570\u7ec4\u4e2d\u7684\u5185\u5bb9\u5e94\u4e3a\uff1a5\uff0c6\uff0c7\uff0c8\uff0c9\uff0c10\uff0c1\uff0c2\uff0c3\uff0c4\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "#define\u00a0\u00a0\u00a0 N\u00a0\u00a0\u00a0 80", "void fun(int *w,int p,int n)", "{", "\u00a0", "}", "main()", "{", "int\u00a0 a[N]={1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};", "int\u00a0 i,p,n=15;", "printf(\u201cThe original data:\\n\u201d);", "for(i=0; i<n; i++)", "printf(\u201c%3d\u201d,a[i]);", "printf(\u201c\\n\\nEnter\u00a0 p:\u00a0 \u201c);", "scanf(\u201c%d\u201d,&p);", "fun(a,p,n);", "printf(\u201c\\nThe data after moving :\\n\u201d);", "for(i=0; i<n; i++)", "printf(\u201c%3d\u201d,a[i]);", "printf(\u201c\\n\\n\u201d);", "}", "\u00a0", "74\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u5229\u7528\u63d2\u5165\u6392\u5e8f\u6cd5\u5bf9\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u6309\u4ece\u5c0f\u5230", "\u5927\u7684\u987a\u5e8f\u8fdb\u884c\u6392\u5e8f\u3002\u63d2\u5165\u6cd5\u7684\u57fa\u672c\u7b97\u6cd5\u662f\uff1a\u5148\u5bf9\u5b57\u7b26\u4e32\u4e2d\u7684\u5934\u4e24\u4e2a\u5143\u7d20\u8fdb\u884c\u6392\u5e8f\u3002\u7136\u540e\u628a\u7b2c\u4e09\u4e2a\u5b57\u7b26\u63d2\u5165\u5230\u524d\u4e24\u4e2a\u5b57\u7b26\u4e2d\uff0c\u63d2\u5165\u540e\u524d\u4e09\u4e2a\u5b57\u7b26\u4f9d\u7136\u6709\u5e8f\uff1b\u518d\u628a\u7b2c\u56db\u4e2a\u5b57\u7b26\u63d2\u5165\u5230\u524d\u4e09\u4e2a\u5b57\u7b26\u4e2d\uff0c\u2026\u2026\u3002\u5f85\u6392\u5e8f\u7684\u5b57\u7b26\u4e32\u5df2\u5728\u4e3b\u51fd\u6570\u4e2d\u8d4b\u4e88\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784\u3002", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#define\u00a0 N\u00a0 80", "#include \u201cstdio.h\u201d", "#include \u201cstring.h\u201d", "void insert(char *aa)", "{", "int i,j,n;", "char ch;", "n=strlen(aa);", "for(i=1; i<n ;i++ )", "{", "/********found********/", "c=aa[i];", "j=i-1;", "while ((j>=0) && (ch<aa[j] ))", "{", "aa[j+1]=aa[j];", "j\u2013;", "}", "aa[j+1]=ch;", "}", "}", "main( )", "{", "char a[N]=\u201dQWERTYUIOPASDFGHJKLMNBVCXZ\u201d;", "int\u00a0 i;", "printf(\u201cThe original string :\u00a0\u00a0\u00a0\u00a0 %s\\n\u201d,a);", "insert(a);", "printf(\u201cThe string after sorting :\u00a0 %s\\n\\n\u201d,a);", "}", "\u00a0", "\u00a0", "79\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u5220\u9664\u5b57\u7b26\u4e32s\u4e2d\u7684\u6240\u6709\u7a7a\u767d\u5b57\u7b26(\u5305\u62ecTab\u5b57\u7b26\u3001\u56de\u8f66\u7b26\u53ca\u6362\u884c\u7b26)\u3002\u8f93\u5165\u5b57\u7b26\u4e32\u65f6\u7528\u201c#\u201d\u7ed3\u675f\u8f93\u5165\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u8f93\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <string.h>", "#include <stdio.h>", "#include <ctype.h>", "\u00a0", "void fun(char *p)", "{", "int i,t;", "char c[80];", "for(i=0,t=0;p[i];i++)", "if(!isspace(*(p+i)))", "c[t++]=p[i];", "/********found********/", "c[t]=\u201d\\0\u2033;", "strcpy(p,c);", "}", "\u00a0", "main( )", "{", "char c,s[80];", "int i=0;", "printf(\u201cInput a string: \u201c);", "c=getchar();", "while(c!=\u2019#')", "{", "s[i]=c;", "i++;", "c=getchar();", "}", "s[i]=\u2019\\0\u2032;", "fun(s);", "puts(s);", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u5341\u4e8c\u5957\uff09"},
{"contents": ["27\uff0e\u8bf7\u7f16\u5199\u4e00\u4e2a\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\uff1a\u6c42\u51fa1\u5230m\u4e4b\u5185(\u542bm)\u80fd\u88ab7\u621611\u6574\u9664\u7684\u6240\u6709\u6574\u6570\u653e\u5728\u6570\u7ec4a\u4e2d\uff0c\u901a\u8fc7n\u8fd4\u56de\u8fd9\u4e9b\u6570\u7684\u4e2a\u6570\u3002", "\u4f8b\u5982\uff0c\u82e5\u4f20\u9001\u7ed9m\u7684\u503c\u4e3a50\uff0c\u5219\u7a0b\u5e8f\u8f93\u51fa\uff1a", "7\u00a0\u00a0\u00a0 11\u00a0\u00a0\u00a0 14\u00a0\u00a0\u00a0 21\u00a0\u00a0\u00a0 22\u00a0\u00a0\u00a0 28\u00a0\u00a0\u00a0 33\u00a0\u00a0\u00a0 35\u00a0\u00a0\u00a0 42\u00a0\u00a0\u00a0 44\u00a0\u00a0\u00a0 49", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <conio.h>", "#include <stdio.h>", "#define M 100", "void fun ( int m, int *a, int *n )", "{", "}", "main()", "{", "int aa[M], n, k;", "clrscr();", "fun ( 50, aa, &n );", "for ( k = 0; k < n; k++ )", "if((k+1)%20==0)", "printf(\u201c\\n\u201d);", "else", "printf(\u201c%4d\u201d, aa[k] );", "printf(\u201c\\n\u201d);", "}", "\u00a0", "28\uff0e\u8bf7\u7f16\u5199\u4e00\u4e2a\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\uff1a\u627e\u51fa\u4e00\u7ef4\u6574\u578b\u6570\u7ec4\u5143\u7d20\u4e2d\u6700\u5927\u7684\u503c\u548c\u5b83\u6240\u5728\u7684\u4e0b\u6807\uff0c\u6700\u5927\u7684\u503c\u548c\u5b83\u6240\u5728\u7684\u4e0b\u6807\u901a\u8fc7\u5f62\u53c2\u4f20\u56de\u3002\u6570\u7ec4\u5143\u7d20\u4e2d\u7684\u503c\u5df2\u5728\u4e3b\u51fd\u6570\u4e2d\u8d4b\u4e88\u3002", "\u4e3b\u51fd\u6570\u4e2dx\u662f\u6570\u7ec4\u540d\uff0cn\u662fx\u4e2d\u7684\u6570\u636e\u4e2a\u6570\uff0cmax\u5b58\u653e\u6700\u5927\u503c\uff0cindex\u5b58\u653e\u6700\u5927\u503c\u6240\u5728\u5143\u7d20\u7684\u4e0b\u6807\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdlib.h>", "#include <stdio.h>", "void fun ( int\u00a0 a[],\u00a0 int\u00a0 n,\u00a0 int\u00a0 *max,\u00a0 int\u00a0 *d )", "{", "\u00a0", "}", "main()", "{", "int i,\u00a0 x[20],\u00a0 max,\u00a0 index,\u00a0 n=10;", "randomize() ;", "for (i=0; i < n; i++)", "{", "x[i] = rand()%50;", "printf(\u201c%4d\u201d, x[i]) ;", "}", "printf(\u201c\\n\u201d);", "fun( x, n , &max, &index);", "printf(\u201cMax=%5d, Index=%4d\\n\u201d, max, index);", "}", "\u00a0", "52\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u7ed9\u5b9an\u4e2a\u5b9e\u6570\uff0c\u8f93\u51fa\u5e73\u5747\u503c\uff0c\u5e76\u7edf\u8ba1\u5728\u5e73\u5747\u503c\u4ee5\u4e0a(\u542b\u5e73\u5747\u503c)\u7684\u5b9e\u6570\u4e2a\u6570\u3002\u4f8b\u5982\uff0cn=8\u65f6\uff0c\u8f93\u5165l93.199\uff0c195.673\uff0c195.757\uff0c196.051\uff0c 196.092\uff0c196.596\uff0c196.579\uff0c196.763\u6240\u5f97\u5e73\u5747\u503c\u4e3a195.838745\uff0c\u5728\u5e73\u5747\u503c\u4ee5\u4e0a\u7684\u5b9e\u6570\u4e2a\u6570\u5e94\u4e3a5\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u7a0b\u5e8f\u80fd\u8f93\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <conio.h>", "#include <stdio.h>", "\u00a0", "/********found********/", "int fun(float x[],int n)", "int j, c=0;", "float xa=0.0;", "for (j=0; j<n; j++ )", "xa += x[j]/n;", "printf(\u201cave =%f\\n\u201d,xa);", "for (j=0; j<n; j++ )", "if (x[j] >= xa)", "c++;", "return c;", "}", "\u00a0", "main ( )", "{", "float x[100]={193.199, 195.673, 195.757, 196.051, 196.092, 196.596, 196.579, 196.763};", "clrscr();", "printf(\u201c%d\\n\u201d,fun(x,8));", "}", "\u00a0", "53\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u7528\u9012\u5f52\u7b97\u6cd5\u8ba1\u7b97\u6590\u6ce2\u62c9\u5951\u7ea7\u6570\u6570\u5217\u4e2d\u7b2cn\u9879\u7684\u503c\uff1a\u4ece\u7b2c1\u9879\u8d77\uff0c\u6590\u6ce2\u62c9\u5951\u7ea7\u6570\u5e8f\u5217\u4e3a1\u30011\u30012\u30013\u30015\u30018\u300113\u300121\u3001\u2026\u4f8b\u5982\uff0c\u82e5\u7ed9n\u8f93\u51657\uff0c\u8be5\u9879\u7684\u6590\u6ce2\u62c9\u5951\u7ea7\u6570\u503c\u4e3a13\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784\u3002", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include\u00a0 <stdio.h>", "long fun(int\u00a0 g)", "{", "/********found********/", "switch(g);", "{", "case 0: return 0;", "/********found********/", "case 1 ;", "case 2 : return 1 ;", "}", "return( fun(g-1)+fun(g-2) );", "}", "main()", "{", "long\u00a0 fib;", "int\u00a0 n;", "printf(\u201cInput n:\u00a0 \u201c);", "scanf(\u201c%d\u201d,&n);", "printf(\u201cn=%d\\n\u201d,n);", "fib=fun(n);", "printf(\u201cfib = %d\\n\\n\u201d,fib);", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u516b\u5957\uff09"},
{"contents": ["16\uff0e\u8bf7\u7f16\u4e00\u4e2a\u51fd\u6570float fun(double h)\uff0c\u51fd\u6570\u7684\u529f\u80fd\u662f\u5bf9\u53d8\u91cfh\u4e2d\u7684\u503c\u4fdd\u75592\u4f4d\u5c0f\u6570\uff0c\u5e76\u5bf9\u7b2c\u4e09\u4f4d\u8fdb\u884c\u56db\u820d\u4e94\u5165(\u89c4\u5b9ah\u4e2d\u7684\u503c\u4e3a\u6b63\u6570)\u3002", "\u4f8b\u5982\uff1a\u82e5h\u503c\u4e3a8.32433\uff0c\u5219\u51fd\u6570\u8fd4\u56de8.32\uff1b\u82e5h\u503c\u4e3a8.32533\uff0c\u5219\u51fd\u6570\u8fd4\u56de8.33\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "#include <conio.h>", "\u00a0", "float fun ( float\u00a0 h )", "{", "}", "main( )", "{", "float\u00a0 a;", "clrscr();", "printf ( \u201cEnter\u00a0 a:\u00a0 \u201c);", "scanf ( \u201c%f\u201d, &a );", "printf ( \u201cThe original data is:\u00a0 \u201c);", "printf ( \u201c%f \\n\\n\u201d, a );", "printf ( \u201cThe result : %f\\n\u201d, fun ( a ) );", "}", "\u00a0", "17\uff0e\u8bf7\u7f16\u4e00\u4e2a\u51fd\u6570fun(char*s)\uff0c\u8be5\u51fd\u6570\u7684\u529f\u80fd\u662f\u628a\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u9006\u7f6e\u3002", "\u4f8b\u5982\uff1a\u5b57\u7b26\u4e32\u4e2d\u539f\u6709\u7684\u5b57\u7b26\u4e32\u4e3aabcdefg\uff0c\u5219\u8c03\u7528\u8be5\u51fd\u6570\u540e\uff0c\u4e32\u4e2d\u7684\u5185\u5bb9\u4e3agfedcba\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <string.h>", "#include <conio.h>", "#include <stdio.h>", "#define\u00a0 N\u00a0 81", "\u00a0", "void fun ( char *s)", "{", "}", "main()", "{", "char\u00a0 a[N];", "clrscr( );", "printf ( \u201cEnter\u00a0 a\u00a0 string :\u00a0 \u201c);", "gets ( a );", "printf ( \u201cThe original string is: \u201d );", "puts( a );", "fun ( a );", "printf(\u201c\\n\u201d);", "printf ( \u201cThe string after modified : \u201c);", "puts ( a );", "}", "\u00a0", "13\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0cfun\u51fd\u6570\u7684\u529f\u80fd\u662f\uff1a\u6839\u636e\u5f62\u53c2m\uff0c\u8ba1\u7b97\u5982\u4e0b\u516c\u5f0f\u7684\u503c\u3002", "1\u00a0\u00a0\u00a0 1\u00a0\u00a0\u00a0 1\u00a0\u00a0\u00a0\u00a0\u00a0 1", "t=1+ \uff0d + \uff0d + \uff0d\u2026 + \uff0d", "2\u00a0\u00a0\u00a0 3\u00a0\u00a0\u00a04\u00a0\u00a0\u00a0\u00a0\u00a0 m", "\u4f8b\u5982\uff0c\u82e5\u8f93\u51655\uff0c\u5219\u5e94\u8f93\u51fa2.283333\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\u6216\u5728\u6a2a\u7ebf\u5904\u586b\u4e0a\u9002\u5f53\u7684\u5185\u5bb9\u5e76\u628a\u6a2a\u7ebf\u5220\u9664\uff0c\u4f7f\u5b83\u80fd\u8ba1\u7b97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include<conio.h>", "#include<stdio.h>", "double fun(int m)", "{", "double t=1.0;", "int i;", "/********found********/", "for(i=2;i<=m;i++)", "t+=1.0/k;", "/********found********/", "___\u586b\u7a7a____", "\u00a0", "}", "main()", "{", "int m;", "clrscr();", "printf(\u201c\\nplease enter 1 integer numbers:\\n\u201d);", "scanf(\u201c%d\u201d,&m);", "printf(\u201c\\n\\nthe result is %lf\\n\u201d,fun(m));", "}", "\u00a0", "\u00a0", "17\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u8ba1\u7b97\u5e76\u8f93\u51fak\u4ee5\u5185\u6700\u5927\u768410\u4e2a\u80fd\u88ab13\u621617\u6574\u9664\u7684\u81ea\u7136\u6570\u4e4b\u548c\u3002k\u7684\u503c\u7531\u4e3b\u51fd\u6570\u4f20\u5165\uff0c\u82e5k\u7684\u503c\u4e3a500\uff0c\u5219\u51fd\u6570\u503c\u4e3a4622\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u7a0b\u5e8f\u80fd\u8f93\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <conio.h>", "#include <stdio.h>", "int fun(int k)", "{", "int m=0, mc=0, j;", "while((k>=2)&&(mc<10))", "{", "/********found********/", "if((k%13=0)||(k%17=0))", "{", "m=m+k;", "mc++;", "}", "k\u2013;", "}", "return m;", "/********found********/", "\u586b\u7a7a_____", "\u00a0", "main()", "{", "clrscr();", "printf(\u201c%d\\n\u201d, fun(500));", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u4e8c\u5957\uff09"},
{"contents": ["18\uff0e\u7f16\u5199\u7a0b\u5e8f\uff0c\u5b9e\u73b0\u77e9\u9635(3\u884c3\u5217)\u7684\u8f6c\u7f6e(\u5373\u884c\u5217\u4e92\u6362)\u3002", "\u4f8b\u5982\uff0c\u82e5\u8f93\u5165\u4e0b\u9762\u7684\u77e9\u9635\uff1a\uff0c\u5219\u7a0b\u5e8f\u8f93\u51fa\uff1a", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "#include <conio.h>", "\u00a0", "void fun(int array[3][3])", "{", "}", "\u00a0", "main()", "{", "int i,j;", "int array[3][3]={{100,200,300},", "{400,500,600},", "{700,800,900}};", "clrscr();", "for (i=0;i<3;i++)", "{", "for(j=0;j<3;j++)", "printf(\u201c%7d\u201d,array[i][j]);", "printf(\u201c\\n\u201d);", "}", "fun(array);", "printf(\u201cConverted array:\\n\u201d);", "for\u00a0 (i=0;i<3;i++)", "{", "for(j=0;j<3;j++)", "printf(\u201c%7d\u201d,array[i][j]);", "printf(\u201c\\n\u201d);", "}", "}", "\u00a0", "82\uff0e\u8bf7\u7f16\u5199\u4e00\u4e2a\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\uff1a\u8ba1\u7b97n\u95e8\u8bfe\u7a0b\u7684\u5e73\u5747\u5206\uff0c\u8ba1\u7b97\u7ed3\u679c\u4f5c\u4e3a\u51fd\u6570\u503c\u8fd4\u56de\u3002", "\u4f8b\u5982\uff1a\u82e5\u67095\u95e8\u8bfe\u7a0b\u7684\u6210\u7ee9\u662f\uff1a90.5\uff0c72\uff0c80\uff0c61.5\uff0c55\uff0c\u5219\u51fd\u6570\u7684\u503c\u4e3a71.80\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "float fun ( float *a, int n )", "{", "}", "main()", "{", "float score[30]={90.5,72,80,61.5,55}, aver;", "aver=fun(score,5);", "printf(\u201c\\nAverage score is :%5.2f\\n\u201d,aver);", "}", "\u00a0", "22\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u6839\u636e\u6574\u578b\u5f62\u53c2m\uff0c\u8ba1\u7b97\u5982\u4e0b\u516c\u5f0f\u7684\u503c\u3002", "1\u00a0\u00a0\u00a0\u00a0 1\u00a0\u00a0\u00a0\u00a0 1\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1", "Y=1+ \uff0d\u00a0 + \uff0d\u00a0 + \uff0d + \u2026 + \uff0d", "2\u00d72\u00a0\u00a0 3\u00d73\u00a0\u00a0 4\u00d74\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 mxm", "\u4f8b\u5982\uff0c\u82e5m\u4e2d\u7684\u503c\u4e3a5\uff0c\u5219\u5e94\u8f93\u51fa\uff1a1.463611\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <conio.h>", "#include <stdio.h>", "\u00a0", "double fun(int m)", "{", "double y=1.0;", "int i;", "/********found********/", "for(i=2;i<m;i++)", "/********found********/", "y+=1/(i*i);", "return(y);", "}", "\u00a0", "main()", "{", "int n=5;", "clrscr();", "printf(\u201c\\nThe result is %1f\\n\u201d,fun(n));", "}", "\u00a0", "\u00a0", "23\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u6309\u4ee5\u4e0b\u9012\u5f52\u516c\u5f0f\u6c42\u51fd\u6570\u503c\u3002", "10\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 (n=1)", "fun(n)=", "fun(n-1)+2\u00a0\u00a0\u00a0 (n>1)", "\u4f8b\u5982\uff0c\u5f53\u7ed9n\u8f93\u51655\u65f6\uff0c\u51fd\u6570\u503c\u4e3a18\uff1b\u5f53\u7ed9n\u8f93\u51653\u65f6\uff0c\u51fd\u6570\u503c\u4e3a14\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784\u3002", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <stdio.h>", "/********found********/", "fun(n)", "{", "int c;", "/********found********/", "if(n=1)", "c=10;", "else", "c=fun(n-1)+2;", "return(c);", "}", "main()", "{", "int n;", "printf(\u201cEnter n: \u201c);", "scanf(\u201c%d\u201d,&n);", "printf(\u201cThe result:%d\\n\\n\u201d,fun(n));", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u4e09\u5957\uff09"},
{"contents": ["1\uff0em\u4e2a\u4eba\u7684\u6210\u7ee9\u5b58\u653e\u5728score\u6570\u7ec4\u4e2d\uff0c\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\uff1a\u5c06\u4f4e\u4e8e\u5e73\u5747\u5206\u7684\u4eba\u6570\u4f5c\u4e3a\u51fd\u6570\u503c\u8fd4\u56de\uff0c\u5c06\u4f4e\u4e8e\u5e73\u5747\u5206\u7684\u5206\u6570\u653e\u5728below\u6240\u6307\u7684\u6570\u7ec4\u4e2d\u3002", "\u4f8b\u5982\uff0c\u5f53score\u6570\u7ec4\u4e2d\u7684\u6570\u636e\u4e3a10\u300120\u300130\u300140\u300150\u300160\u300170\u300180\u300190\u65f6\uff0c\u51fd\u6570\u8fd4\u56de\u7684\u4eba\u6570\u5e94\u8be5\u662f4\uff0cbelow\u4e2d\u7684\u6570\u636e\u5e94\u4e3a10\u300120\u300130\u300140\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <conio.h>", "#include <stdio.h>", "#include <string.h>", "\u00a0", "int fun(int score[],int m, int below[])", "{", "\u00a0", "}", "main()", "{", "int i,n,below[9];", "int score[9]={10,20,30,40,50,60,70,80,90};", "clrscr();", "n=fun(score,9,below);", "printf(\u201c\\nBelow the average score are :\u201d);", "for(i=0;i<n;i++)", "printf(\u201c%d \u201c,below[i]);", "}", "\u00a0", "8\uff0e\u7f16\u5199\u51fd\u6570fun\uff0c\u51fd\u6570\u7684\u529f\u80fd\u662f\uff1a\u6839\u636e\u4ee5\u4e0b\u516c\u5f0f\u8ba1\u7b97s\uff0c\u8ba1\u7b97\u7ed3\u679c\u4f5c\u4e3a\u51fd\u6570\u503c\u8fd4\u56de\uff1bn\u901a\u8fc7\u5f62\u53c2\u4f20\u5165\u3002", "S=1+1/(1+2)+1/(1+2+3)+\u2026\u20261/(1+2+3+\u2026+n)", "\u4f8b\u5982\uff1a\u82e5n\u7684\u503c\u4e3a11\u65f6\uff0c\u51fd\u6570\u7684\u503c\u4e3a1.833333\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include<conio.h>", "#include<stdio.h>", "#include<string.h>", "\u00a0", "float fun (int n)", "{", "}", "main()", "{", "int n;", "float s;", "clrscr();", "printf(\u201c\\nPlease enter N:\u201d);", "scanf(\u201c%d\u201d,&n);", "s=fun(n);", "printf(\u201cThe result is: %f\\n\u201d,s);", "}", "\u00a0", "1\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u7684\u529f\u80fd\u662f\uff1a\u8bfb\u5165\u4e00\u4e2a\u6574\u6570k(2\u2264k\u226410000)\uff0c\u6253\u5370\u5b83\u7684\u6240\u6709\u8d28\u56e0\u5b50(\u5373\u6240\u6709\u4e3a\u7d20\u6570\u7684\u56e0\u5b50)\u3002\u4f8b\u5982\uff0c\u82e5\u8f93\u5165\u6574\u65702310\uff0c\u5219\u5e94\u8f93\u51fa\uff1a2\u30013\u30015\u30017\u300111\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u7a0b\u5e8f\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include\u00a0\u00a0 \u00a0 \u201cconio.h\u201d", "#include\u00a0\u00a0 \u00a0 \u201cstdio.h\u201d", "/********found********/", "IsPrime\u00a0\u00a0\u00a0 ( int n\u00a0\u00a0\u00a0 ) ;", "{", "int i, m;", "m=1;", "/********found********/", "for(i=2;i<n;i++)", "if !(n%i)", "{", "m=0;", "break;", "}", "return(m);", "}", "\u00a0", "main()", "{", "int j, k;", "clrscr();", "printf(\u201c\\nplease enter an integer number between 2 and 10000:\u201d);", "scanf(\u201c%d\u201d,&k);", "printf(\u201c\\n\\nThe\u00a0\u00a0 prime factor(s)\u00a0\u00a0 of %d is(are):\u201d,k);", "for(j=2;j<k;j++)", "if((!(k%j))&&(IsPrime(j)))", "printf(\u201d %4d,\u201d,j);", "printf(\u201c\\n\u201d);", "}", "\u00a0", "\u00a0", "6\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u6839\u636e\u6574\u578b\u5f62\u53c2m\u7684\u503c\uff0c\u8ba1\u7b97\u5982\u4e0b\u516c\u5f0f\u7684\u503c\u3002", "1\u00a0\u00a0\u00a0\u00a0 1\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1", "T=1- \u2015\u00a0 \u2013 \uff0d\u00a0 -\u2026 \uff0d", "2\u00d72\u00a0\u00a0 3\u00d73\u00a0\u00a0\u00a0\u00a0 mxm", "\u4f8b\u5982\uff0c\u82e5m\u4e2d\u7684\u503c\u4e3a5\uff0c\u5219\u5e94\u8f93\u51fa\uff1a0\uff0e536389\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <conio.h>", "#include <stdio.h>", "double fun(int m)", "{", "double y=1.0;", "int i;", "/********found********/", "for(i=2;i<m;i++)", "/********found********/", "y-=1/(i*i);", "return(y);", "}", "main()", "{", "int n=5;", "clrscr();", "printf(\u201c\\nThe result is %1f\\n\u201d,fun(n));", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u4e00\u5957\uff09"},
{"contents": ["1. C\u4e2dstatic\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f", "\n\uff081\uff09\u9690\u85cf\u3002 \u5f53\u6211\u4eec\u540c\u65f6\u7f16\u8bd1\u591a\u4e2a\u6587\u4ef6\u65f6\uff0c\u6240\u6709\u672a\u52a0static\u524d\u7f00\u7684\u5168\u5c40\u53d8\u91cf\u548c\u51fd\u6570\u90fd\u5177\u6709\u5168\u5c40\u53ef\u89c1\u6027,\u6545\u4f7f\u7528static\u5728\u4e0d\u540c\u7684\u6587\u4ef6\u4e2d\u5b9a\u4e49\u540c\u540d\u51fd\u6570\u548c\u540c\u540d\u53d8\u91cf\uff0c\u800c\u4e0d\u5fc5\u62c5\u5fc3\u547d\u540d\u51b2\u7a81\u3002", "\n\uff082\uff09static\u7684\u7b2c\u4e8c\u4e2a\u4f5c\u7528\u662f\u4fdd\u6301\u53d8\u91cf\u5185\u5bb9\u7684\u6301\u4e45\u3002\u5b58\u50a8\u5728\u9759\u6001\u6570\u636e\u533a\u7684\u53d8\u91cf\u4f1a\u5728\u7a0b\u5e8f\u521a\u5f00\u59cb\u8fd0\u884c\u65f6\u5c31\u5b8c\u6210\u521d\u59cb\u5316\uff0c\u4e5f\u662f\u552f\u4e00\u7684\u4e00\u6b21\u521d\u59cb\u5316\u3002\u5171\u6709\u4e24\u79cd\u53d8\u91cf\u5b58\u50a8\u5728\u9759\u6001\u5b58\u50a8\u533a\uff1a\u5168\u5c40\u53d8\u91cf\u548cstatic\u53d8\u91cf\u3002", "\n\uff083\uff09static\u7684\u7b2c\u4e09\u4e2a\u4f5c\u7528\u662f\u9ed8\u8ba4\u521d\u59cb\u5316\u4e3a0\u3002\u5176\u5b9e\u5168\u5c40\u53d8\u91cf\u4e5f\u5177\u5907\u8fd9\u4e00\u5c5e\u6027\uff0c\u56e0\u4e3a\u5168\u5c40\u53d8\u91cf\u4e5f\u5b58\u50a8\u5728\u9759\u6001\u6570\u636e\u533a\u3002\u5728\u9759\u6001\u6570\u636e\u533a\uff0c\u5185\u5b58\u4e2d\u6240\u6709\u7684\u5b57\u8282\u9ed8\u8ba4\u503c\u90fd\u662f0\u00d700\uff0c\u67d0\u4e9b\u65f6\u5019\u8fd9\u4e00\u7279\u70b9\u53ef\u4ee5\u51cf\u5c11\u7a0b\u5e8f\u5458\u7684\u5de5\u4f5c\u91cf\u3002", "\n2\uff0eC++\u4e2dconst\u6709\u4ec0\u4e48\u7528\uff1f\u4e0d\u8981\u4e00\u542c\u5230const\u5c31\u8bf4\u662f\u5e38\u91cf\uff0c\u8fd9\u6837\u7ed9\u8003\u5b98\u4e00\u79cd\u5728\u548c\u4e00\u4e2a\u5916\u884c\u4ea4\u8c08\u7684\u611f\u89c9\u3002\u5e94\u8be5\u8bf4const\u4fee\u9970\u7684\u5185\u5bb9\u4e0d\u53ef\u6539\u53d8\u5c31\u884c\u4e86\uff0c \u5b9a\u4e49\u5e38\u91cf\u53ea\u662f\u4e00\u79cd\u4f7f\u7528\u65b9\u5f0f\u800c\u5df2\uff0c\u8fd8\u6709const\u6570\u636e\u6210\u5458\uff0cconst\u53c2\u6570\uff0c const\u8fd4\u56de\u503c\uff0c const\u6210\u5458\u51fd\u6570\u7b49, \u88abconst\u4fee\u9970\u7684\u4e1c\u897f\u90fd\u53d7\u5230\u5f3a\u5236\u4fdd\u62a4\uff0c\u53ef\u4ee5\u9884\u9632\u610f\u5916\u7684\u53d8\u52a8\uff0c\u80fd\u63d0\u9ad8\u7a0b\u5e8f\u7684\u5065\u58ee\u6027\u3002", "3. C\u4e0eC++\u5404\u81ea\u662f\u5982\u4f55\u5b9a\u4e49\u5e38\u91cf\u7684\uff1f\u6709\u4ec0\u4e48\u4e0d\u540c\uff1fC\u4e2d\u662f\u4f7f\u7528\u5b8f#define\u5b9a\u4e49\uff0c C++\u4f7f\u7528\u66f4\u597d\u7684const\u6765\u5b9a\u4e49\u3002", "\n\u533a\u522b\uff1a1\uff09const\u662f\u6709\u6570\u636e\u7c7b\u578b\u7684\u5e38\u91cf\uff0c\u800c\u5b8f\u5e38\u91cf\u6ca1\u6709\uff0c\u7f16\u8bd1\u5668\u53ef\u4ee5\u5bf9\u524d\u8005\u8fdb\u884c\u9759\u6001\u7c7b\u578b\u5b89\u5168\u68c0\u67e5\uff0c\u5bf9\u540e\u8005\u4ec5\u662f\u5b57\u7b26\u66ff\u6362\uff0c\u6ca1\u6709\u7c7b\u578b\u5b89\u5168\u68c0\u67e5\uff0c\u800c\u4e14\u5728\u5b57\u7b26\u66ff\u6362\u65f6\u53ef\u80fd\u4f1a\u4ea7\u751f\u610f\u6599\u4e0d\u5230\u7684\u9519\u8bef\uff08\u8fb9\u9645\u6548\u5e94\uff09\u30022\uff09\u6709\u4e9b\u7f16\u8bd1\u5668\u53ef\u4ee5\u5bf9const\u5e38\u91cf\u8fdb\u884c\u8c03\u8bd5\uff0c \u4e0d\u80fd\u5bf9\u5b8f\u8c03\u8bd5\u3002", "\n4. \u65e2\u7136C++\u4e2d\u6709\u66f4\u597d\u7684const\u4e3a\u4ec0\u4e48\u8fd8\u8981\u4f7f\u7528\u5b8f\uff1fconst\u65e0\u6cd5\u4ee3\u66ff\u5b8f\u4f5c\u4e3a\u536b\u54e8\u6765\u9632\u6b62\u6587\u4ef6\u7684\u91cd\u590d\u5305\u542b\u3002", "\n5. C++\u4e2d\u5f15\u7528\u548c\u6307\u9488\u7684\u533a\u522b?\u5f15\u7528\u662f\u5bf9\u8c61\u7684\u522b\u540d, \u64cd\u4f5c\u5f15\u7528\u5c31\u662f\u64cd\u4f5c\u8fd9\u4e2a\u5bf9\u8c61, \u5fc5\u987b\u5728\u521b\u5efa\u7684\u540c\u65f6\u6709\u6548\u5f97\u521d\u59cb\u5316(\u5f15\u7528\u4e00\u4e2a\u6709\u6548\u7684\u5bf9\u8c61, \u4e0d\u53ef\u4e3aNULL), \u521d\u59cb\u5316\u5b8c\u6bd5\u5c31\u518d\u4e5f\u4e0d\u53ef\u6539\u53d8, \u5f15\u7528\u5177\u6709\u6307\u9488\u7684\u6548\u7387, \u53c8\u5177\u6709\u53d8\u91cf\u4f7f\u7528\u7684\u65b9\u4fbf\u6027\u548c\u76f4\u89c2\u6027, \u5728\u8bed\u8a00\u5c42\u9762\u4e0a\u5f15\u7528\u548c\u5bf9\u8c61\u7684\u7528\u6cd5\u4e00\u6837, \u5728\u4e8c\u8fdb\u5236\u5c42\u9762\u4e0a\u5f15\u7528\u4e00\u822c\u90fd\u662f\u901a\u8fc7\u6307\u9488\u6765\u5b9e\u73b0\u7684, \u53ea\u662f\u7f16\u8bd1\u5668\u5e2e\u6211\u4eec\u5b8c\u6210\u4e86\u8f6c\u6362. \u4e4b\u6240\u4ee5\u4f7f\u7528\u5f15\u7528\u662f\u4e3a\u4e86\u7528\u9002\u5f53\u7684\u5de5\u5177\u505a\u6070\u5982\u5176\u5206\u7684\u4e8b, \u4f53\u73b0\u4e86\u6700\u5c0f\u7279\u6743\u539f\u5219.", "\n6. \u8bf4\u4e00\u8bf4C\u4e0eC++\u7684\u5185\u5b58\u5206\u914d\u65b9\u5f0f\uff1f1\uff09\u4ece\u9759\u6001\u5b58\u50a8\u533a\u57df\u5206\u914d\u3002\u5185\u5b58\u5728\u7a0b\u5e8f\u7f16\u8bd1\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u5206\u914d\u597d\uff0c\u8fd9\u5757\u5185\u5b58\u5728\u7a0b\u5e8f\u7684\u6574\u4e2a\u8fd0\u884c\u671f\u95f4\u90fd\u5b58\u5728\uff0c\u5982\u5168\u5c40\u53d8\u91cf\uff0cstatic\u53d8\u91cf\u30022\uff09\u5728\u6808\u4e0a\u521b\u5efa\u3002\u5728\u6267\u884c\u51fd\u6570\u65f6\uff0c\u51fd\u6570\u5185\u5c40\u90e8\u53d8\u91cf\u7684\u5b58\u50a8\u5355\u5143\u90fd\u53ef\u4ee5\u5728\u6808\u4e0a\u521b\u5efa\uff0c\u51fd\u6570\u6267\u884c\u7ed3\u675f\u65f6\u8fd9\u4e9b\u5b58\u50a8\u5355\u5143\u81ea\u52a8\u88ab\u91ca\u653e\u3002\u6808\u5185\u5b58\u5206\u914d\u8fd0\u7b97\u5185\u7f6e\u4e8e\u5904\u7406\u5668\u7684\u6307\u4ee4\u96c6\u4e2d\uff0c\u6548\u7387\u5f88\u9ad8\uff0c\u4f46\u662f\u5206\u914d\u7684\u5185\u5b58\u5bb9\u91cf\u6709\u9650\u30023\uff09\u4ece\u5806\u4e0a\u5206\u914d\uff08\u52a8\u6001\u5185\u5b58\u5206\u914d\uff09\u7a0b\u5e8f\u5728\u8fd0\u884c\u7684\u65f6\u5019\u7528malloc\u6216new\u7533\u8bf7\u4efb\u610f\u591a\u5c11\u7684\u5185\u5b58\uff0c\u7a0b\u5e8f\u5458\u8d1f\u8d23\u5728\u4f55\u65f6\u7528free\u6216delete\u91ca\u653e\u5185\u5b58\u3002\u52a8\u6001\u5185\u5b58\u7684\u751f\u5b58\u671f\u81ea\u5df1\u51b3\u5b9a\uff0c\u4f7f\u7528\u975e\u5e38\u7075\u6d3b\u3002", "\n7. new/delete \u4e0e malloc()/free() \u7684\u533a\u522b?malloc() \u4e0e free() \u662fC\u8bed\u8a00\u7684\u6807\u51c6\u5e93\u51fd\u6570, new/delete \u662fC++\u7684\u8fd0\u7b97\u7b26, \u4ed6\u4eec\u90fd\u53ef\u4ee5\u7528\u6765\u7533\u8bf7\u548c\u91ca\u653e\u5185\u5b58, malloc()\u548cfree()\u4e0d\u5728\u7f16\u8bd1\u5668\u63a7\u5236\u6743\u9650\u4e4b\u5185, \u4e0d\u80fd\u628a\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u7684\u4efb\u52a1\u5f3a\u52a0\u7ed9\u4ed6\u4eec.", "\n8. #include<a.h>\u548c#include\u201ca.h\u201d \u6709\u4ec0\u4e48\u533a\u522b?\u7b54\uff1a\u5bf9\u4e8e#include <a.h> \uff0c\u7f16\u8bd1\u5668\u4ece\u6807\u51c6\u5e93\u8def\u5f84\u5f00\u59cb\u641c\u7d22 a.h\u5bf9\u4e8e#include \u201ca.h\u201d \uff0c\u7f16\u8bd1\u5668\u4ece\u7528\u6237\u7684\u5de5\u4f5c\u8def\u5f84\u5f00\u59cb\u641c\u7d22 a.h", "\n9. \u5728C++ \u7a0b\u5e8f\u4e2d\u8c03\u7528\u88ab C\u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u7684\u51fd\u6570\uff0c\u4e3a\u4ec0\u4e48\u8981\u52a0 extern \u201cC\u201d\uff1f C++\u8bed\u8a00\u652f\u6301\u51fd\u6570\u91cd\u8f7d\uff0cC\u8bed\u8a00\u4e0d\u652f\u6301\u51fd\u6570\u91cd\u8f7d\u3002\u51fd\u6570\u88abC++\u7f16\u8bd1\u540e\u5728\u5e93\u4e2d\u7684\u540d\u5b57\u4e0eC\u8bed\u8a00\u7684\u4e0d\u540c\u3002\u5047\u8bbe\u67d0\u4e2a\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a void foo(int x, int y);\u8be5\u51fd\u6570\u88abC\u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u5728\u5e93\u4e2d\u7684\u540d\u5b57\u4e3a_foo\uff0c\u800cC++\u7f16\u8bd1\u5668\u5219\u4f1a\u4ea7\u751f\u50cf_foo_int_int\u4e4b\u7c7b\u7684\u540d\u5b57\u3002C++\u63d0\u4f9b\u4e86C\u8fde\u63a5\u4ea4\u6362\u6307\u5b9a\u7b26\u53f7extern\u201cC\u201d\u6765\u89e3\u51b3\u540d\u5b57\u5339\u914d\u95ee\u9898\u3002", "\n10. C++\u4e2d\u7684\u4ec0\u4e48\u662f\u591a\u6001\u6027\uff1f \u662f\u5982\u4f55\u5b9e\u73b0\u7684\uff1f\u591a\u6001\u6027\u662f\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u7ee7\u6570\u636e\u62bd\u8c61\u548c\u7ee7\u627f\u4e4b\u540e\u7684\u7b2c\u4e09\u4e2a\u57fa\u672c\u7279\u5f81\u3002\u5b83\u662f\u5728\u8fd0\u884c\u65f6\u51fa\u73b0\u7684\u591a\u6001\u6027\u901a\u8fc7\u6d3e\u751f\u7c7b\u548c\u865a\u51fd\u6570\u5b9e\u73b0\u3002\u57fa\u7c7b\u548c\u6d3e\u751f\u7c7b\u4e2d\u4f7f\u7528\u540c\u6837\u7684\u51fd\u6570\u540d, \u5b8c\u6210\u4e0d\u540c\u7684\u64cd\u4f5c\u5177\u4f53\u5b9e\u73b0\u76f8\u9694\u79bb\u7684\u53e6\u4e00\u7c7b\u63a5\u53e3\uff0c\u5373\u628a\u201c w h a t\u201d\u4ece\u201ch o w\u201d\u5206\u79bb\u5f00\u6765\u3002\u591a\u6001\u6027\u63d0\u9ad8\u4e86\u4ee3\u7801\u7684\u7ec4\u7ec7\u6027\u548c\u53ef\u8bfb\u6027\uff0c\u865a\u51fd\u6570\u5219\u6839\u636e\u7c7b\u578b\u7684\u4e0d\u540c\u6765\u8fdb\u884c\u4e0d\u540c\u7684\u9694\u79bb\u3002", "\n11. \u4ec0\u4e48\u662f\u52a8\u6001\u7279\u6027?\u5728\u7edd\u5927\u591a\u6570\u60c5\u51b5\u4e0b, \u7a0b\u5e8f\u7684\u529f\u80fd\u662f\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u5c31\u786e\u5b9a\u4e0b\u6765\u7684, \u6211\u4eec\u79f0\u4e4b\u4e3a\u9759\u6001\u7279\u6027. \u53cd\u4e4b, \u5982\u679c\u7a0b\u5e8f\u7684\u529f\u80fd\u662f\u5728\u8fd0\u884c\u65f6\u523b\u624d\u80fd\u786e\u5b9a\u4e0b\u6765\u7684, \u5219\u79f0\u4e4b\u4e3a\u52a8\u6001\u7279\u6027\u3002C++\u4e2d, \u865a\u51fd\u6570\uff0c\u62bd\u8c61\u57fa\u7c7b\uff0c \u52a8\u6001\u7ed1\u5b9a\u548c\u591a\u6001\u6784\u6210\u4e86\u51fa\u8272\u7684\u52a8\u6001\u7279\u6027\u3002", "\n12\uff0e\u4ec0\u4e48\u662f\u5c01\u88c5?C++\u4e2d\u662f\u5982\u4f55\u5b9e\u73b0\u7684\uff1f\u5c01\u88c5\u6765\u6e90\u4e8e\u4fe1\u606f\u9690\u85cf\u7684\u8bbe\u8ba1\u7406\u5ff5\uff0c \u662f\u901a\u8fc7\u7279\u6027\u548c\u884c\u4e3a\u7684\u7ec4\u5408\u6765\u521b\u5efa\u65b0\u6570\u636e\u7c7b\u578b\u8ba9\u63a5\u53e3\u4e0e\u5177\u4f53\u5b9e\u73b0\u76f8\u9694\u79bb\u3002C++\u4e2d\u662f\u901a\u8fc7\u7c7b\u6765\u5b9e\u73b0\u7684, \u4e3a\u4e86\u5c3d\u91cf\u907f\u514d\u67d0\u4e2a\u6a21\u5757\u7684\u884c\u4e3a\u5e72\u6270\u540c\u4e00\u7cfb\u7edf\u4e2d\u7684\u5176\u5b83\u6a21\u5757,\u5e94\u8be5\u8ba9\u6a21\u5757\u4ec5\u4ec5\u516c\u5f00\u5fc5\u987b\u8ba9\u5916\u754c\u77e5\u9053\u7684\u63a5\u53e3.", "\n13. \u4ec0\u4e48\u662fRTTI?RTTI\u4e8b\u6307\u8fd0\u884c\u65f6\u7c7b\u578b\u8bc6\u522b\uff08Run-time type identification\uff09\u5728\u53ea\u6709\u4e00\u4e2a\u6307\u5411\u57fa\u7c7b\u7684\u6307\u9488\u6216\u5f15\u7528\u65f6\u786e\u5b9a\u4e00\u4e2a\u5bf9\u8c61\u7684\u51c6\u786e\u7c7b\u578b\u3002", "\n14. \u4ec0\u4e48\u662f\u62f7\u8d1d\u6784\u9020\u51fd\u6570?\u5b83\u662f\u5355\u4e2a\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\uff0c\u5176\u53c2\u6570\u662f\u4e0e\u5b83\u540c\u5c5e\u4e00\u7c7b\u7684\u5bf9\u8c61\u7684(\u5e38)\u5f15\u7528\uff1b\u7c7b\u5b9a\u4e49\u4e2d\uff0c\u5982\u679c\u672a\u63d0\u4f9b\u81ea\u5df1\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0cC++\u63d0\u4f9b\u4e00\u4e2a\u9ed8\u8ba4\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u8be5\u9ed8\u8ba4\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u5b8c\u6210\u4e00\u4e2a\u6210\u5458\u5230\u4e00\u4e2a\u6210\u5458\u7684\u62f7\u8d1d", "\n15. \u4ec0\u4e48\u662f\u6df1\u6d45\u62f7\u8d1d?\u6d45\u62f7\u8d1d\u662f\u521b\u5efa\u4e86\u4e00\u4e2a\u5bf9\u8c61\u7528\u4e00\u4e2a\u73b0\u6210\u7684\u5bf9\u8c61\u521d\u59cb\u5316\u5b83\u7684\u65f6\u5019\u53ea\u662f\u590d\u5236\u4e86\u6210\u5458(\u7b80\u5355\u8d4b\u503c)\u800c\u6ca1\u6709\u62f7\u8d1d\u5206\u914d\u7ed9\u6210\u5458\u7684\u8d44\u6e90(\u5982\u7ed9\u5176\u6307\u9488\u53d8\u91cf\u6210\u5458\u5206\u914d\u4e86\u52a8\u6001\u5185\u5b58); \u6df1\u62f7\u8d1d\u662f\u5f53\u4e00\u4e2a\u5bf9\u8c61\u521b\u5efa\u65f6\uff0c\u5982\u679c\u5206\u914d\u4e86\u8d44\u6e90\uff0c\u5c31\u9700\u8981\u5b9a\u4e49\u81ea\u5df1\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u4f7f\u4e4b\u4e0d\u4f46\u62f7\u8d1d\u6210\u5458\u4e5f\u62f7\u8d1d\u5206\u914d\u7ed9\u5b83\u7684\u8d44\u6e90.", "\n16\uff0e\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u4f18\u70b9?\u5f00\u53d1\u65f6\u95f4\u77ed, \u6548\u7387\u9ad8, \u53ef\u9760\u6027\u9ad8\u3002\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u7f16\u7801\u5177\u6709\u9ad8\u53ef\u91cd\u7528\u6027\uff0c\u53ef\u4ee5\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5927\u91cf\u91c7\u7528\u6210\u719f\u7684\u7c7b\u5e93\uff08\u5982STL\uff09,\u4ece\u800c\u867d\u77ed\u4e86\u5f00\u53d1\u65f6\u95f4\uff0c\u8f6f\u4ef6\u6613\u4e8e\u7ef4\u62a4\u548c\u5347\u7ea7\u3002"], "title": "c/c++ \u7a0b\u5e8f\u5458\u7b14\u8bd5\u9762\u8bd5\u9898\u578b"},
{"contents": ["\u770b\u89c1\u6709\u4e2a\u9762\u8bd5\u9898\u76ee\uff0c\u6c42x, y\u7684\u503c\uff1a", "\nint i = 3, j = 3;", "\nint x = (++i) + (++i) + (++i);", "\nint y = (j++) + (j++) + (j++);", "\u770b\u5230\u633a\u591a\u4eba\u5728\u4e89\u8bba\uff0c\u8fd9\u6837\u7684\u8868\u8fbe\u5f0f\u503c\u5e94\u8be5\u662f\u591a\u5c11\uff1f\u751a\u81f3\u62ff\u51fa\u51e0\u4e2a\u4e0d\u540c\u7684\u7f16\u8bd1\u5668\u6765\u7f16\u8bd1\u8fd0\u884c\u5f97\u5230\u51e0\u4e2a\u4e0d\u540c\u7684\u7ed3\u679c\u3002\u5bf9\u4e8e\u6b64\u9898\u7684\u7b54\u6848\uff0c\u4e00\u53e5\u8bdd\uff0cThe behavior is undefined! \u8be6\u7ec6\u89e3\u91ca\u5f85\u6211\u6162\u6162\u8bf4\u6765\u3002", "\u5927\u5bb6\u77e5\u9053\uff0c\u901a\u5e38\u800c\u8a00\uff0c\u6211\u4eec\u5199\u7684\u8ba1\u7b97\u673a\u7a0b\u5e8f\u90fd\u662f\u4ece\u4e0a\u5230\u4e0b\uff0c\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u6267\u884c\u3002\u7136\u800c\uff0c\u6211\u53ea\u662f\u8bf4\u901a\u5e38\uff0c\u56e0\u4e3a\u5728\u7f16\u8bd1\u7684\u8fc7\u7a0b\u4e2d\uff0ccompiler\u5e76\u4e0d\u4ec5\u4ec5\u662f\u628asource code\u7ffb\u8bd1\u6210binary code\u5c31\u7b97\u4e86\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u91cc\u9762\u53ef\u80fd\u8fd8\u4f1a\u5bf9\u4ee3\u7801\u8fdb\u884c\u4f18\u5316\uff0c\u8fd9\u79cd\u4f18\u5316\u53ef\u80fd\u5e26\u6765\u7684\u7ed3\u679c\u662f\uff1a\u4ee3\u7801\u6216\u8005\u8868\u8fbe\u5f0fevaluation\u7684\u987a\u5e8f\u53ef\u80fd\u53d1\u751f\u53d8\u5316\u3002\u8fd9\u53ef\u662f\u4e00\u4e2a\u975e\u5e38\u4e25\u91cd\u7684\u95ee\u9898\uff0c\u5f53\u67d0\u4e2a\u8868\u8fbe\u5f0f\u5e26\u6709side-effect\uff08\u6bd4\u5982\u6539\u53d8\u4e86\u4e00\u4e2a\u53d8\u91cf\u7684\u503c\uff09\uff0c\u90a3\u4e48\u5b83\u7684\u6267\u884c\u987a\u5e8f\u76f4\u63a5\u5f71\u54cd\u5230\u4e86\u7a0b\u5e8f\u6267\u884c\u7684\u7ed3\u679c\u3002", "\u4e3a\u4e86\u4fdd\u8bc1\u7a0b\u5e8f\u6267\u884c\u5177\u6709\u786e\u5b9a\u6027\u7684\u7ed3\u679c\uff0cC++\u6807\u51c6\u5f15\u5165Sequence Point\u8fd9\u4e2a\u6982\u5ff5\uff0c\u6309\u7167ISO/IEC\u7684\u5b9a\u4e49\uff1a", "At certain specified points in the execution sequence called sequence points. All side effects of previous evaluations shall be complete and no side effects of subsequent evaluations shall have taken place.", "\u7b80\u800c\u8a00\u4e4b\uff0cSequence Point\u5c31\u662f\u8fd9\u4e48\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5728\u5b83\u4e4b\u524d\u6240\u6709\u7684side effect\u5df2\u7ecf\u53d1\u751f\uff0c\u5728\u5b83\u4e4b\u540e\u7684\u6240\u6709side effect\u4ecd\u672a\u5f00\u59cb\uff0c\u800c\u4e24\u4e2aSequence Point\u4e4b\u95f4\u6240\u6709\u7684\u8868\u8fbe\u5f0f\u6216\u8005\u4ee3\u7801\u6267\u884c\u7684\u987a\u5e8f\u662f\u672a\u5b9a\u4e49\u7684\uff01", "\u800cC++\u6807\u51c6\u53c8\u8fdb\u4e00\u6b65\u89c4\u5b9a\u4e86Sequence Point\u51fa\u73b0\u76845\u79cd\u60c5\u51b5\uff1a", "At the end of a full expression", "\nAfter the evaluation of all function arguments in a function call and before execution of any expressions in the function body", "\nAfter copying of a returned value and before execution of any expressions outside the function", "\nAfter evaluation of the first expression in a&&b, a||b, a?b:c, or a,b", "\nAfter the initialization of each base and member in the constructor initialization list", "\n\u5177\u4f53\u6211\u4e0d\u8be6\u7ec6\u8ba8\u8bba\uff0c\u53ea\u770b\u7b2c\u4e00\u4e2a\u60c5\u51b5\uff1aAt the end of a full expression\uff0c\u8fd9\u91cc\u7b80\u5316\u95ee\u9898\uff0cfull expression\u7b80\u5355\u8ba4\u4e3a\u662f\u4e00\u4e2a\u5e26\u6709;\u7684\u8bed\u53e5\uff08\u5177\u4f53\u53ef\u4ee5\u518d\u53bb\u67e5\u6807\u51c6\uff09\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4efb\u4f55\u4e00\u4e2a\u72ec\u7acb\u7684\u8868\u8fbe\u5f0f\u8bed\u53e5\u7684\u7ed3\u675f\u90fd\u662f\u4e00\u4e2aSequence Point\uff0c\u56de\u5230\u6211\u4eec\u7684\u9898\u76ee\uff1a", "int y = (++i) + (++i) + (++i);", "\u6574\u4e2a\u7684\u8bed\u53e5\u91cc\u9762\uff0c\u53ea\u67091\u4e2aSequence Point\uff0c\u4e5f\u5c31\u662f\u8bed\u53e5\u7684\u7ed3\u675f\u70b9\uff0c\u5bf9\u4e8e\u53f3\u8fb9\u8868\u8fbe\u5f0f\u7684\u8ba1\u7b97\u987a\u5e8f\u6ca1\u6709\u4efb\u4f55\u7684\u89c4\u5b9a\uff0c\u663e\u7136\uff0c\u5404\u79cd\u7f16\u8bd1\u5668\u90fd\u53ef\u4ee5\u6309\u7167\u4ed6\u4eec\u89c9\u5f97\u201c\u8212\u670d\u201d\u7684\u65b9\u5f0f\u6765\u8fdb\u884c\u8ba1\u7b97\uff0c\u8fd9\u6837\u7684\u4ee3\u7801\uff0c\u5982\u679c\u53ea\u8981\u6c42\u5728\u7279\u5b9a\u7684\u5e73\u53f0\u6216\u8005\u7f16\u8bd1\u5668\u8fd0\u884c\uff0c\u90a3\u4e48\u5e26\u6765\u7684\u53ef\u80fd\u53ea\u662f\u53ef\u8bfb\u6027\u5dee\u7684\u95ee\u9898\uff0c\u4f46\u5982\u679c\u8003\u8651\u8de8\u5e73\u53f0\u6216\u8005\u7f16\u8bd1\u5668\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u5c31\u662f\u5b8c\u5b8c\u5168\u5168\u7684\u9519\u8bef\uff01", "\u53e6\u5916\uff0c\u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f\uff0c\u5bf9\u4e8e\u8d4b\u503c\u53f7(assignment operator)\uff0cC++\u4e5f\u6ca1\u6709\u628a\u5b83\u5b9a\u4e49\u6210Sequence Point\uff0c\u4e5f\u5c31\u8bf4\u8fd9\u6837\u7684\u8bed\u53e5\uff1a", "buffer = i++;", "\u540c\u6837\u662fundefined\u7684\uff0c\u56e0\u4e3a\uff0c\u5bf9\u4e8e\u7b49\u53f7\u5de6\u53f3\u4e24\u8fb9\u7684\u8868\u8fbe\u5f0f\u8fd0\u7b97\u987a\u5e8f\uff0c\u4f60\u5e76\u4e0d\u80fd\u6709\u4efb\u4f55\u7684\u5047\u5b9a\u3002"], "title": "c\u8bed\u8a00\u81ea\u52a0\u95ee\u9898"},
{"contents": ["\n", "\n", "\nunsigned char Count(unsigned char byt)", "\n{", "\nunsigned char num=0;", "\nwhile (byt)", "\n{", "\nnum += (byt & 0\u00d701);", "\nbyt >>= 1;", "\n}", "\nreturn num;", "\n}", "\n\u4e0d\u7ba1\u6709\u591a\u5c11\u4e2a1\u90fd\u8981\u5faa\u73af8\u6b21\uff0c\u6267\u884c\u6548\u7387\u4e0d\u9ad8\uff0c\u4f46\u662f\u6267\u884c\u8be5\u51fd\u6570\u7684\u65f6\u95f4\u6bcf\u6b21\u90fd\u662f\u786e\u5b9a\u7684\u3002", "\u65b9\u6cd5\u4e8c\uff1a", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n"], "title": "\u66fe\u7ecf\u9047\u5230\u7684\u4e00\u4e2ac\u8bed\u8a00\u9762\u8bd5\u9898"},
{"contents": ["\u5b83\u524d\u4e00\u90e8\u5206\u662f\u7eaf\u82f1\u8bed\u7b14\u8bd5\uff0c10\u9053\u9009\u62e9\u9898\u518d\u52a0\u4e00\u9053\u9605\u8bfb\u7406\u89e3\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u6bd4\u8f83\u6b63\u5e38\u7684\u6280\u672f\u9898\uff0c\u4e3b\u8981\u662f\u8003C\u7684\uff0c\u6765\u8c08\u8c08\u51e0\u9053\u6bd4\u8f83\u6709\u610f\u601d\u7684\u9898\u3002", "\n\u6709\u4e00\u9053\u662f\u8003\u5355\u76ee\u8fd0\u7b97\u7b26\u201c++\u201d\uff0c\u539f\u9898\u5927\u6982\u662fint d=0\uff0ca=1\uff1bd=10*a++\u3002\u89e3\u6cd5\u662f\u5148\u7b9710*a\u8d4b\u7ed9d\uff0c\u518d\u628aa++\uff0c\u6240\u4ee5d=10\uff0ca=2\u3002\u662f\u4e0d\u662f\u89c9\u5f97\u8fd8\u7b97\u7b80\u5355\uff0c\u4e0b\u9762\u6765\u4e24\u9053\u590d\u6742\u7684\u3002", "\n\u7b2c\u4e00\u9053\uff1a", "\nint a,x;", "\nfor(a=0,x=0;a<=1 && !x++;a++)", "\n{", "\na++;", "\n}", "\nprintf(\u201ca=%d,x=%d\\n\u201d,a,x);", "for (a=0,x=0;a<=1 && !x++;)", "\n{", "\na++;", "\n}", "\nprintf(\u201ca=%d,x=%d\\n\u201d,a,x);", "\n\u4ee5\u4e0a\u4e24\u884c\u8f93\u51fa\uff0c\u6709\u4f55\u4e0d\u540c\uff1f", "\n\u8fd9\u91cc\u5c24\u5176\u8981\u6ce8\u610f\u7684\u662f&&\u7b26\uff0c\u5f53a=2\u65f6a<=1\u4e3a\u5047\uff0c\u5219\u540e\u9762\u7684\u201c!x++\u201d\u5c31\u4e0d\u6267\u884c\uff0c\u6240\u4ee5\u7b2c\u4e00\u884c\u8f93\u51faa=2,x=1\uff0c\u7b2c\u4e8c\u884c\u8f93\u51faa=1,x=2\u3002\u4e5f\u4e0d\u662f\u5f88\u96be\u5bf9\u5427\uff0c\u6765\u770b\u4e0b\u4e00\u9053\u3002", "\n\u7b2c\u4e8c\u9053\uff1a", "\nint arr[]={6,7,8,9,10};", "\nint *ptr=arr;", "\n*(ptr++)+=123;", "\nprintf(\u201c%d,%d\\n\u201d,*ptr,*(++ptr));", "\n\u5982\u679c\u4f60\u80fd\u6b63\u786e\u7684\u8bf4\u51fa\u7ed3\u679c\uff0c\u8bf4\u660e\u4f60C\u8bed\u8a00\u5b66\u7684\u8fd8\u4e0d\u9519\u3002", "\n\u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0b\uff0c*(ptr++)+=123\u5e94\u4e3a*ptr=*ptr+123;ptr++,\u6240\u4ee5\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u53d8\u4e3a129\uff0cptr\u6307\u5411\u7b2c\u4e8c\u4e2a\u5143\u7d207\u3002\u63a5\u4e0b\u6765\u662f\u4e2a\u96be\u70b9\uff0c\u4f60\u9996\u5148\u8981\u77e5\u9053C\u4e2dprintf\u8ba1\u7b97\u53c2\u6570\u65f6\u662f\u4ece\u53f3\u5230\u5de6\u538b\u6808\u7684\uff0c\u6240\u4ee5printf(\u201c%d,%d\\n\u201d,*ptr,*(++ptr))\u4ece\u53f3\u5230\u5de6\u8fd0\u7b97\uff0c\u5148\u538b*\uff08++ptr\uff09\uff0c\u56e0\u4e3a\u662f++ptr\uff0c\u6240\u4ee5ptr\u5148++\uff0c\u8fd9\u65f6ptr\u6307\u5411\u6570\u7ec4\u7b2c\u4e09\u4e2a\u5143\u7d208\uff08\u5982\u679c\u662fptr++\uff0c\u5219\u8df3\u51fa\u51fd\u6570\u518d++\uff0c\u8fd9\u65f6ptr\u8fd8\u662f\u6307\u54117\uff09\uff0c\u6240\u4ee5\u8f93\u51fa\u7ed3\u679c\u4e3a8,8\u3002", "\n\u662f\u4e0d\u662f\u89c9\u5f97\u201c++\u201d\u5df2\u7ecf\u6709\u70b9\u53d8\u6001\u4e86\uff0c\u5176\u5b9e\u8fd8\u4e0d\u7b97\uff0cJava\u4e2d\u7684\u201c++\u201d\u66f4\u8ba9\u4eba\u7ea0\u7ed3\uff0c\u8bf7\u770b\u4e0b\u9762\u8fd9\u9053\uff1a", "\nint count = 0;", "\ncount += count++;", "\nSystem.out.println(count);", "\n\u60f3\u60f3\u8f93\u51fa\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f\u7ed3\u679c\u662f0\u3002\u201c++\u201d\u4e0d\u7ba1\u7528\u4e86\uff0c\u8fd9\u662f\u4e3a\u4ec0\u4e48\u5462\uff1f\u8ba9\u6211\u4eec\u5148\u770b\u4e2a\u7b80\u5355\u70b9\u7684\uff1a", "\nint i = 0;", "\ni = i++;", "\nSystem.out.println(i);", "\n\u8f93\u51fa\u7ed3\u679c\u8fd8\u662f0\uff0c\u6655\u554a\uff0c\u8fd9\u662f\u4e3a\u4ec0\u4e48\u5462\uff0c\u201c++\u201d\u90fd\u5e72\u4ec0\u4e48\u53bb\u4e86\u3002", "\n\u8fd9\u5c31\u8981\u7275\u626f\u5230Java\u865a\u62df\u673a\u7684\u5185\u5bb9\u4e86\uff0c\u6211\u6d89\u730e\u4e0d\u6df1\uff0c\u7ed3\u5408\u67e5\u5230\u7684\u8d44\u6599\u548c\u6211\u7684\u7406\u89e3\uff0c\u89e3\u91ca\u5982\u4e0b\u3002", "\n\u5bf9\u4e8e\u8d4b\u503c\u8868\u8fbe\u5f0f\u8fd0\u7b97\u4f18\u5148\u7ea7\u7684\u95ee\u9898\uff0c\u6838\u5fc3\u5728\u4e8e\uff1a\u8d4b\u503c\u8fd0\u7b97\u5e94\u8be5\u5728\u6700\u540e\u8fdb\u884c\u3002", "\n\u5bf9\u4e8ei=i++\u8fd9\u4e2a\u8bed\u53e5\uff1a", "\n\u7b2c\u4e00\u6b65\uff0c\u8868\u8fbe\u5f0f\u8fd0\u7b97\uff0c\u8ba1\u7b97 i++ \u8868\u8fbe\u5f0f\u7684\u503c\uff08\u8bbe\u4e3a x \uff0c\u5f53\u524dx=0\uff09\uff0c\u5e76\u4fdd\u5b58\u5230\u67d0\u4e2a\u5185\u5b58\u5730\u5740\uff0c\u5f53\u524d i=0;", "\n\u7b2c\u4e8c\u6b65\uff0c\u81ea\u589e\u53d8\u91cf\u503c\u8fd0\u7b97\uff0c\u8ba1\u7b97 i++ \u5bf9 i \u7684\u5f71\u54cd (i=i+1, i=1)\uff0c\u5e76\u4fdd\u5b58\u5230\u53d8\u91cf i \u7684\u5185\u5b58\u5730\u5740\uff0c\u5f53\u524d i=1;", "\n\u7b2c\u4e09\u6b65\uff0c\u8d4b\u503c\u8fd0\u7b97\uff0c\u4ece\u5185\u5b58\u5730\u5740\u4e2d\u83b7\u53d6\u7b2c\u4e00\u6b65\u7684\u8ba1\u7b97\u7ed3\u679c(\u8868\u8fbe\u5f0f\u7684\u503cx\uff0c\u5f53\u524dx=0\uff09\u8d4b\u503c\u7ed9 i\uff0c\u5f53\u524d i=0;", "\n\u8fd0\u7b97\u7ed3\u675f\u540e i=0\u3002", "\n\u5373\u201di = i++;\u201d\u4e0d\u662f\u7b49\u4ef7\u4e8e\uff08C\u8bed\u8a00\u7684\uff09 \u201ci = i; i = i + 1;\u201d\uff0c\u800c\u662f(\u903b\u8f91)\u7b49\u4ef7\u201dx = i; i = i + 1; i = x\u201d\uff0c\u6240\u4ee5\u7ed3\u679c\u662f0 \u3002", "\n\u987a\u4fbf\u63d0\u4e00\u4e0b\u201di = ++i\u201d(\u903b\u8f91)\u7b49\u4ef7\u201di = i + 1; a = i; i = a\u201d\uff0c\u6240\u4ee5\u7ed3\u679c\u4f1a\u662f1\u3002", "\n\u5373i = x\u8d4b\u503c\u603b\u662f\u5728i = i + 1\u64cd\u4f5c\u7684\u540e\u5934\uff0c\u539f\u7406\u662f\u4ece\u53f3\u5230\u5de6\u8ba1\u7b97\uff0c\u8d4b\u503c\u8fd0\u7b97\u5e94\u8be5\u5728\u6700\u540e\u8fdb\u884c\u3002", "\n\u662f\u4e0d\u662f\u6709\u70b9\u5934\u5927\u4e86\uff0c\u6ca1\u5173\u7cfb\uff0c\u6765\u4e00\u4e2a\u603b\u7ed3\uff0c\u603b\u7ed3\u5982\u4e0b\uff1a", "\n\u4e00\u822c\u7684\u8d4b\u503c\u8868\u8fbe\u5f0f\uff0c\u8ba1\u7b97\u4f18\u5148\u7ea7\u4e3a\uff1a", "\n1\u3001\u8ba1\u7b97\u5404\u5355\u5143\u7684\u503c", "\n2\u3001\u8ba1\u7b97\u8868\u8fbe\u5f0f\u7684\u503c", "\n3\u3001\u8d4b\u503c", "\n\u597d\uff0c\u5148\u6765\u9053\u590d\u6742\u70b9\u7684\u7ec3\u7ec3\u624b\uff1a", "\ni=i++ + i++;[\u5185\u5b58\u4e2d i=0]", "\n\u8fd0\u7b97\u8fc7\u7a0b\uff1a", "\n1\u3001i=0 + i++ [\u5185\u5b58\u4e2d i=1];", "\n2\u3001i=0+ 1 [\u5185\u5b58\u4e2d i=2];", "\n3\u3001i=1 [\u5185\u5b58\u4e2d i=2];", "\n4\u3001\u8f93\u51fa\u7ed3\u679c\u4e3a1\u3002", "\n\u597d\u4e86\uff0c\u7406\u89e3\u5230\u8fd9\u91cc\u5c31\u591f\u4e86\uff0c\u8c01\u7f16\u7a0b\u6ca1\u4e8b\u6765\u4e00\u4e32\u7684\u201c++\u201d\uff0c\u73b0\u5728\u56de\u5230\u6211\u4eec\u6700\u5f00\u59cb\u7684\u95ee\u9898count += count++\u3002", "\n\u9996\u5148\u6839\u636e\u4f18\u5148\u7ea7\u95ee\u9898\uff0c\u53f3\u8fb9\u7684+=\u64cd\u4f5c\u5e94\u8be5\u6700\u5148\u6267\u884c\uff0c\u6240\u4ee5\uff08\u903b\u8f91\uff09\u7b49\u4ef7\u4e0e\u201ccount += count\uff1bx=count\uff1bcount = count + 1\uff1bcount = x\u201d\uff08\u8fd9\u91cc\u6211\u7684\u7406\u89e3\u6709\u70b9\u865a\uff0c\u5982\u679c\u6709\u66f4\u597d\u7684\u89e3\u91ca\u53ef\u4ee5\u544a\u8bc9\u6211\uff09\uff0c\u5373\u7ed3\u679c\u5c31\u662fcount\u7684\u4e24\u500d\uff0c\u6240\u4ee5\u5982\u679ccount\u521d\u503c\u4e3a2\u65f6\uff0c\u7ed3\u679c\u4e3a4\uff0c\u8fd9\u4e5f\u5c31\u53ef\u4ee5\u89e3\u91cacount += ++count \u7ed3\u679c\u4e3a5\uff08\u521d\u503c\u4e5f\u4e3a2\uff09\u7684\u539f\u56e0\uff1a\uff08\u903b\u8f91\uff09\u7b49\u4ef7\u4e0e\u201ccount += count\uff1bcount = count + 1\uff1bx=count\uff1bcount = x\u201d\u3002", "\nOver\u4e86\uff0c\u7d2f\u6b7b\u6211\u4e86\u3002\u672c\u6765\u60f3\u591a\u603b\u7ed3\u51e0\u9053\uff0c\u4e00\u9053\u5c31\u5199\u4e86\u8fd9\u4e48\u591a\uff0c\u60f3\u5bf9Java\u201c++\u201d\u8fd9\u7c7b\u95ee\u9898\u7406\u89e3\u7684\u66f4\u6df1\uff0c\u5c31\u53bb\u770b\u770bJava\u865a\u62df\u673a\u7684\u5185\u5bb9\u5427\u3002"], "title": "\u552f\u4e00\u4e00\u6b21\u7b14\u8bd5\u7684\u7ecf\u5386\u2014\u2014\u6c5f\u82cf\u8f6f\u4ef6\u5b9e\u8bad\u57fa\u5730\u7b14\u8bd5"},
{"contents": ["1.\u6539\u9519(5\u5206)", "\nvoidtest()", "\n{", "\ncharstr[10];", "\nchar*str1=\u201d0123456789\u2033;", "\nstrcpy(str,str1);", "\n}", "\n2.\u6539\u9519(5\u5206)", "\nvoidtest()", "\n{", "\ncharstr[10],str1[10];", "\nfor(int=0;i<10;i++)", "\n{", "\nstr=\u2019a';", "\n}", "\nstrcpy(str,str1);", "\n}", "\n3.\u8bfb\u7a0b\u5e8f,\u5199\u51fa\u7ed3\u679c(5\u5206)", "\nintsum(inta)", "\n{", "\nintc=0;", "\nstaticintb=3;", "\nc+=1;", "\nb+=2;", "\nreturn(a+b+c)", "\n}", "\nintmain()", "\n{", "\ninta=2;", "\nfor(inti=0;i<5;i++)", "\n{", "\nprintf(\u201c%d,\u201d,sum(a));", "\n}", "\nreturn0;", "\n}", "\n4.\u8bfb\u7a0b\u5e8f,\u5199\u51fa\u7ed3\u679c(5\u5206)", "\nintmain()", "\n{", "\ninta[3];", "\na[0]=0;", "\na[1]=1;", "\na[2]=2;", "\nint*p,*q;", "\np=a;", "\nq=&a[2];", "\nintc=a[q-p];", "\nprintf(\u201cvaluec=%d\\n\u201d,c++);", "\nprintf(\u201cvaluec=%d\\n\u201d,c);", "\nreturn0;", "\n}", "\n5.\u8bfb\u7a0b\u5e8f,\u5199\u51fa\u7ed3\u679c(10\u5206,\u9009\u505a)", "\n#defineSTRCPY(a,b)strcpy(a##_p,#b)", "\nintmain()", "\n{", "\ncharvar1_p[20];", "\ncharvar2_p[30];", "\nstrcpy(var1_p,\u201daaaa\u201d);", "\nstrcpy(var2_p,\u201dbbbb\u201d);", "\nSTRCPY(var1,var2);", "\nSTRCPY(var2,var1);", "\nprintf(\u201cvar1=%s\\n\u201d,var1_p);", "\nprintf(\u201cvar2=%s\\n\u201d,var2_p);", "\nreturn0;", "\n}", "\n6.(10\u5206)\u4e0d\u7528\u9664\u6cd5(\u5373\u4e0d\u80fd\u4f7f\u7528\u201d/\u201d\u53f7)\u548c\u5e93\u51fd\u6570,\u8ba1\u7b97285/16\u7684\u5546\u548c\u4f59\u6570,\u8981\u6c42\u6548\u7387\u5c3d\u91cf\u9ad8.", "\n7.(15\u5206)\u7f16\u5199\u5b57\u7b26\u4e32\u53cd\u8f6c\u51fd\u6570:strrev.\u8981\u6c42\u65f6\u95f4\u548c\u7a7a\u95f4\u6548\u7387\u90fd\u5c3d\u91cf\u9ad8.", "\n(\u6d4b\u8bd5\u7528\u4f8b:\u8f93\u5165\u201dabcd\u201d,\u8f93\u51fa\u5e94\u4e3a\u201ddcba\u201d)", "\n\u51fd\u6570\u539f\u578b\u4e3a:", "\nchar*strrev(char*dest,char*src);", "\n\u63d0\u793a:dest\u548csrc\u53ef\u80fd\u662f\u540c\u4e00\u4e2a\u5b57\u7b26\u4e32.", "\n8.(15\u5206)\u7f16\u5199\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u6574\u6570\u7684\u51fd\u6570atoi,\u53ea\u5904\u7406\u8f93\u5165\u5b57\u7b26\u4e32\u4ec5\u75310-9,\u2019-',\u2019+',\u548c\u7a7a\u683c\u7684\u60c5\u51b5.", "\n\u51fd\u6570\u539f\u578b\u4e3a:", "\nintatoi(char*str);", "\n\u63d0\u793a:\u5982\u679c\u5b57\u7b26\u4e32\u4e0d\u80fd\u6784\u6210\u4e00\u6574\u6570,\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de0.\u4f46\u662f\u5bf9\u4e8e\u4ee5\u7a7a\u683c\u5f00\u59cb\u7684\u5b57\u7b26\u4e32\u5e94\u7279\u6b8a\u5904\u7406.", "\n9.(30\u5206)\u7f16\u5199\u4e00\u7ec4\u5355\u94fe\u8868\u64cd\u4f5c\u51fd\u6570.\u94fe\u8868\u7684\u7ed3\u6784\u5982\u4e0b:", "\nstructListNode", "\n{", "\nlongid;", "\nstructListNode*next;", "\n};", "\n\u94fe\u8868\u8282\u70b9\u4ee5id\u7684\u4ece\u5c0f\u5230\u5927\u6392\u5217,\u5f53id\u76f8\u7b49\u65f6,\u8282\u70b9\u987a\u5e8f\u6ca1\u6709\u7ea6\u5b9a,\u8c01\u5728\u524d\u90fd\u53ef\u4ee5.", "\n\u8981\u6c42\u7f16\u5199\u7684\u51fd\u6570\u6709:", "\n\u904d\u5386\u51fd\u6570:\u8fd4\u56decur\u4e0b\u4e00\u4e2a\u8282\u70b9,\u5982\u679c\u6ca1\u6709\u66f4\u591a\u7684\u8282\u70b9,\u8fd4\u56de0;", "\nstructListNode*ListNext(structListNode*cur);", "\n\u63d2\u5165\u51fd\u6570:\u5c06newNode\u63d2\u5165\u5230head\u94fe\u8868\u4e2d,\u7136\u540e\u8fd4\u56denewNode\u7684\u524d\u4e00\u8282\u70b9,", "\n\u5982\u679cnewNode\u5df2\u7ecf\u5728\u94fe\u8868\u4e2d,\u8fd4\u56de0.", "\nstructListNode*ListInsert(structListNode*head,structListNode*newNode);", "\n\u5220\u9664\u51fd\u6570:\u4ecehead\u4e2d\u5220\u9664theNode\u8282\u70b9.\u8fd4\u56detheNode\u7684\u524d\u4e00\u8282\u70b9.", "\n\u5982\u679ctheNode\u4e0d\u5728\u94fe\u8868\u4e2d,\u8fd4\u56de0;", "\nstructListNode*ListRemove(structListNode*head,structListNode*theNode);"], "title": "c\u9762\u8bd5\u77e5\u8bc6"},
{"contents": ["1.\u5199\u7a0b\u5e8f\u5224\u65adBig-Endian \u8fd8\u662f little endian", "2.\u4e24\u4e2a\u8bfbC\u7a0b\u5e8f\u5199\u7ed3\u679c\u7684\u95ee\u9898", "3.Osi\u6a21\u578b\u4e0etcp/ip\u6a21\u578b", "4.Ip\u534f\u8bae\u5185\u5bb9\uff0ctcp udp\u4e0d\u540c", "5.\u89e6\u53d1\u7535\u5e73\u6709\u54ea\u4e9b\uff0cTTL CMOS\u4e0d\u540c", "6.\u5355\u7247\u673a\u4e0a\u7535\u6ca1\u53cd\u5e94,\u9996\u5148\u68c0\u67e5\u54ea\u91cc", "7.Const\u4e0e#define\u533a\u522b", "8.\u8fd8\u6709\u4e00\u4e2a\u9002\u7528EDA\u5de5\u5177\u8bbe\u8ba1\u7535\u8def\u7684\u95ee\u9898,\u8fd9\u4e2a\u4e0d\u4f1a\u6240\u4ee5\u6ca1\u8bb0\u4f4f", "9.Setup\u548choldup\u4e0d\u540c", "10.\u6700\u540e\u662f\u4e00\u4e2a\u82f1\u8bed\u7ffb\u8bd1\u6458\u81eas3c2440\u7684\u82af\u7247\u624b\u518c,\u4e00\u90e8\u5206\u662fnand flash\u542f\u52a8\uff0c\u4e00\u90e8\u5206\u662fUART\u4e5f\u4e0d\u592a\u96be", "\u00a0", "\u7b14\u8bd5\u9898\u8bb0\u4f4f\u7684\u5c31\u8fd9\u4e9b\uff0c\u4e00\u5171\u5927\u6982\u4e5f\u5c3114\uff0c15\u9053\uff0c\u9762\u8bd5\u4f1a\u95ee\u4f60\u505a\u7684\u9879\u76ee\u7684\u5927\u6982\u60c5\u51b5, \u4f60\u8d1f\u8d23\u9879\u76ee\u7684\u90a3\u4e00\u90e8\u5206\uff0c\u8fd8\u6709\u5173\u4e8e\u5de5\u8d44\u52a0\u73ed\u7684\u4e00\u4e9b\u4e2a\u4eba\u60c5\u51b5."], "title": "\u516d\u5408\u4e07\u901a\u5fae\u7535\u5b50 Linux C\u9762\u8bd5\u9898"},
{"contents": ["1\u3001\u5c40\u90e8\u53d8\u91cf\u80fd\u5426\u548c\u5168\u5c40\u53d8\u91cf\u91cd\u540d\uff1f", "2\u3001\u5982\u4f55\u5f15\u7528\u4e00\u4e2a\u5df2\u7ecf\u5b9a\u4e49\u8fc7\u7684\u5168\u5c40\u53d8\u91cf\uff1f", "3\u3001\u5168\u5c40\u53d8\u91cf\u53ef\u4e0d\u53ef\u4ee5\u5b9a\u4e49\u5728\u53ef\u88ab\u591a\u4e2a.C\u6587\u4ef6\u5305\u542b\u7684\u5934\u6587\u4ef6\u4e2d\uff1f\u4e3a\u4ec0\u4e48\uff1f", "4\u3001\u8bed\u53e5for( \uff1b1 \uff1b)\u6709\u4ec0\u4e48\u95ee\u9898\uff1f\u5b83\u662f\u4ec0\u4e48\u610f\u601d\uff1f", "5\u3001do\u2026\u2026while\u548cwhile\u2026\u2026do\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "8\u3001\u961f\u5217\u548c\u6808\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "9.\u5bf9\u4e8e\u4e00\u4e2a\u9891\u7e41\u4f7f\u7528\u7684\u77ed\u5c0f\u51fd\u6570,\u5728C\u8bed\u8a00\u4e2d\u5e94\u7528\u4ec0\u4e48\u5b9e\u73b0,\u5728C++\u4e2d\u5e94\u7528\u4ec0\u4e48\u5b9e\u73b0?", "10.\u76f4\u63a5\u94fe\u63a5\u4e24\u4e2a\u4fe1\u4ee4\u70b9\u7684\u4e00\u7ec4\u94fe\u8def\u79f0\u4f5c\u4ec0\u4e48?", "13.\u8f6f\u4ef6\u6d4b\u8bd5\u90fd\u6709\u90a3\u4e9b\u79cd\u7c7b?", "14.\u786e\u5b9a\u6a21\u5757\u7684\u529f\u80fd\u548c\u6a21\u5757\u7684\u63a5\u53e3\u662f\u5728\u8f6f\u4ef6\u8bbe\u8ba1\u7684\u90a3\u4e2a\u961f\u6bb5\u5b8c\u6210\u7684?", "\u00a0", "\u00a0", "\u00a0"], "title": "C\u8bed\u8a00\u4e4b07\u5e74\u534e\u4e3a\u9762\u8bd5\u9898"},
{"contents": ["1. \u6c42\u4e8c\u4e2a\u96c6\u5408A\u3001B\u4ea4\u96c6\u7684\u8865\u96c6\uff1a", "\n\u4ee5\u6574\u578b\u96c6\u5408\u4e3a\u4f8b\u3002", "\nset<int> f(set<int> A, set<int> B)", "\n{", "\nset<int>C(A);", "\npair<set<int>::iterator, bool> ele;", "\nfor (set<int>::iterator iter=B.begin(); iter!=B.end(); iter++)", "\n{", "\nele = C.insert(*iter);", "\nif (!ele.second)", "\nC.erase(*iter);", "\n}", "\nreturn C;", "\n}", "\n\u8fd9\u4e2a\u4e0d\u591f\u9ad8\u6548\uff0c\u8981\u505a\u53c2\u6570\u7684\u590d\u5236\uff0c\u53ca\u8fd4\u56de\u65f6\u7684\u4e34\u65f6\u5bf9\u8c61\uff0c\u4e0b\u9762\u7684\u66f4\u52a0\u597d\uff1a", "\nvoid f(const set<int>& A, const set<int>& B, set<int>& C)", "\n{", "\nC = A;", "\npair<set<int>::iterator, bool> ele;//\u7528\u4e8e\u5b58\u653e\u63d2\u5165\u5143\u7d20\u662f\u5426\u6210\u529f", "\nfor (set<int>::", " iter=B.begin(); iter!=B.end(); iter++)", "\n{", "\nele = C.insert(*iter);", "\nif (!ele.second)//\u5982\u679c\u63d2\u5165\u5931\u8d25\uff0c\u8bf4\u660e\u662f\u4ea4\u96c6\u5143\u7d20\uff0c\u5c06\u5b83\u5220\u9664", "\nC.erase(*iter);", "\n}", "\n}", "2. \u8f93\u5165\u4e00\u884c\u5b57\u7b26\uff0c\u6c42\u82f1\u6587\u5b57\u6bcd\uff0c\u6570\u5b57\uff0c\u7a7a\u683c\uff0c\u5176\u5b83\u5b57\u7b26\u7684\u4e2a\u6570\uff0e", "\n\u4e00 \u4e2a\u6709\u7528\u7684string IO\u64cd\u4f5c\uff1agetling\u3002\u8fd9\u4e2a\u51fd\u6570\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\uff1a\u4e00\u4e2a\u8f93\u5165\u6d41\u5bf9\u8c61\u548c\u4e00\u4e2astring\u5bf9\u8c61\u3002getline\u51fd\u6570\u4ece\u8f93\u5165\u6d41\u7684\u4e0b\u4e00\u884c\u8bfb\u53d6\uff0c\u5e76\u4fdd\u5b58\u8bfb\u53d6\u7684\u5185\u5bb9\u5230 string\u4e2d\uff0c\u4f46\u4e0d\u5305\u62ec\u6362\u884c\u7b26\u3002\u548c\u8f93\u5165\u64cd\u4f5c\u7b26\u4e0d\u4e00\u6837\u7684\u662f\uff0cgetline\u5e76\u4e0d\u5ffd\u7565\u884c\u5f00\u5934\u7684\u6362\u884c\u7b26\u3002\u53ea\u8981getline\u9047\u5230\u6362\u884c\u7b26\uff0c\u5373\u4fbf\u5b83\u662f\u8f93\u5165\u7684\u7b2c\u4e00\u4e2a \u5b57\u7b26\uff0cgetline\u4e5f\u5c06\u505c\u6b62\u8bfb\u5165\u5e76\u8fd4\u56de\u3002\u5982\u679c\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5c31\u662f\u6362\u884c\u7b26\uff0c\u5219string\u53c2\u6570\u5c06\u88ab\u7f6e\u4e3a\u7a7astring\u3002", "\ngetline\u51fd\u6570\u5c06istream\u53c2\u6570\u4f5c\u4e3a\u8fd4\u56de\u503c\uff0c\u548c\u8f93\u5165\u64cd\u4f5c\u7b26\u4e00\u6837\u4e5f\u628a\u5b83\u7528\u4f5c\u5224\u65ad\u6761\u4ef6\u3002", "#include <iostream>", "\n#include <string>", "\nusing namespace std;", "\nint main()", "\n{", "\nint letter = 0;", "\nint number = 0;", "\nint space = 0;", "\nint other = 0;", "\nstring line;", "\ngetline(cin, line);", "\nint len = line.length();", "\nfor (int i=0; i<len; i++)", "\n{", "\nif ((line<=\u2019z\u2019 && line >=\u2019a') || (line<=\u2019Z\u2019 && line>=\u2019A') )", "\nletter++;", "\nelse if (line<=\u20199\u2032 && line>=\u20190\u2032)", "\nnumber++;", "\nelse if (line == \u2018 \u2018)", "\nspace++;", "\nelse", "\nother++;", "\n}", "\ncout << \u201cletter: \u201d << letter << endl;", "\ncout << \u201cnumber: \u201d << number << endl;", "\ncout << \u201cspace: \u201d << space << endl;", "\ncout << \u201cother: \u201d << other << endl;", "\n}", "3. \u5224\u65ad\u4e00\u4e2a\u6570\u662f\u5426\u662f2\u7684\u4e58\u65b9\uff0e", "\n\u53ef\u4ee5\u7528\u79fb\u4f4d\u8fd0\u7b97\uff0e\u5982\u679c\u662f2\u7684\u4e58\u65b9\uff0c\u90a3\u5e94\u8be5\u53ea\u6709\u6700\u5de6\u7684\u4e00\u4e2a\u662f1\uff0e\u4ece\u53f3\u5411\u5de6\u627e\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a1\u65f6\u505c\u6b62\uff0c\u8bb0\u5f55\u4e0b\u79fb\u4e86\u591a\u5c11\u4f4dn\uff0c\u90a32\u7684n\u6b21\u65b9\u5982\u679c\u548c\u539f\u6765\u7684\u6570\u76f8\u7b49\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u5c31\u662f2\u7684\u4e58\u65b9\uff0c\u5426\u5219\u4e0d\u662f\uff0e", "\n\u4e4b\u524d\u4ee5\u4e3a\u79fb\u4f4d\u662f\u76f4\u63a5\u5230\u6570\u672c\u8eab\u7684\u64cd\u4f5c\uff0c\u539f\u6765\u4e0d\u662f\uff0c\u5b83\u64cd\u4f5c\u662f\u7ed9\u51fa\u4e00\u4e2a\u79fb\u4f4d\u540e\u7684\u8fd4\u56de\u503c\uff0c\u800c\u64cd\u4f5c\u6570\u672c\u8eab\u6ca1\u6709\u6539\u53d8\uff0e", "\nbool judge(int number)", "\n{", "\nif (number == 0)//\u8fd9\u91cc\u4e0d\u80fd\u5c11\uff0c\u5426\u5219\u8f93\u51650\u7684\u8bdd\uff0c\u4f1a\u8fdb\u5165\u6b7b\u5faa\u73af", "\nreturn false;", "\nint n = 0;", "\nint copy = number;", "\nwhile ((copy&1) == 0)//\u5982\u679ccopy&1 == 1\uff0c\u8bf4\u660e\u627e\u5230\u4e86\u6700\u9760\u53f3\u76841", "\n{", "\ncout << copy << endl;", "\nn++;", "\ncopy = copy >> 1;//\u8fd9\u91cc\u4e0d\u80fd\u7528copy>>1\uff0c\u8fd9\u6837copy\u6ca1\u6709\u53d8\u5316\uff0c\u6b7b\u5faa\u73af", "\n}", "\nreturn !(number&~(1<<n)); //\u5982\u679c1\u5de6\u79fbn\u4f4d\u4e0e\u539f\u6570\u4e0d\u76f8\u7b49\uff0c\u8bf4\u660e\u539f\u6570\u4e0d\u6b62\u4e00\u4e2a1\uff0c\u4e0d\u662f2\u7684n\u6b21\u65b9", "}", "\n4. \u5224\u65ad\u4e00\u4e2a\u6570\u662f\u4e0d\u662f\u5947\u6570", "\nreturn number&1;", "\n5. \u6c42\u6570\u7ec4\u6570\u5b57\u7684\u5168\u6392\u5217\uff0e", "\n\u8f6c\u81ea\uff1ahttp://tieba.baidu.com/f?kz=478333827", "\n\u5168\u6392\u5217\u662f\u5c06\u4e00\u7ec4\u6570\u6309\u4e00\u5b9a\u987a\u5e8f\u8fdb\u884c\u6392\u5217\uff0c\u5982\u679c\u8fd9\u7ec4\u6570\u6709n\u4e2a\uff0c\u90a3\u4e48\u5168\u6392\u5217\u6570\u4e3an!\u4e2a\u3002\u73b0\u4ee5{1, 2, 3, 4, 5}\u4e3a\u4f8b\u8bf4\u660e\u5982\u4f55\u7f16\u5199\u5168\u6392\u5217\u7684\u9012\u5f52\u7b97\u6cd5\u3002", "1\u3001\u9996\u5148\u770b\u6700\u540e\u4e24\u4e2a\u65704, 5\u3002 \u5b83\u4eec\u7684\u5168\u6392\u5217\u4e3a4 5\u548c5 4, \u5373\u4ee54\u5f00\u5934\u76845\u7684\u5168\u6392\u5217\u548c\u4ee55\u5f00\u5934\u76844\u7684\u5168\u6392\u5217\u3002\u7531\u4e8e\u4e00\u4e2a\u6570\u7684\u5168\u6392\u5217\u5c31\u662f\u5176\u672c\u8eab\uff0c\u4ece\u800c\u5f97\u5230\u4ee5\u4e0a\u7ed3\u679c\u3002", "2\u3001 \u518d\u770b\u540e\u4e09\u4e2a\u65703, 4, 5\u3002\u5b83\u4eec\u7684\u5168\u6392\u5217\u4e3a3 4 5\u30013 5 4\u3001 4 3 5\u3001 4 5 3\u3001 5 3 4\u3001 5 4 3 \u516d\u7ec4\u6570\u3002\u5373\u4ee53\u5f00\u5934\u7684\u548c4,5\u7684\u5168\u6392\u5217\u7684\u7ec4\u5408\u3001\u4ee54\u5f00\u5934\u7684\u548c3,5\u7684\u5168\u6392\u5217\u7684\u7ec4\u5408\u548c\u4ee55\u5f00\u5934\u7684\u548c3,4\u7684\u5168\u6392\u5217\u7684\u7ec4\u5408.\u4ece\u800c\u53ef\u4ee5\u63a8\u65ad\uff0c\u8bbe\u4e00\u7ec4\u6570p = {r1, r2, r3, \u2026 ,rn}, \u5168\u6392\u5217\u4e3aperm(p)\uff0cpn = p \u2013 {rn}\u3002\u56e0\u6b64perm(p) = r1perm(p1), r2perm(p2), r3perm(p3), \u2026 , rnperm(pn)\u3002\u5f53n = 1\u65f6perm(p} = r1\u3002", "\u4e3a\u4e86\u66f4\u5bb9\u6613\u7406\u89e3\uff0c\u5c06\u6574\u7ec4\u6570\u4e2d\u7684\u6240\u6709\u7684\u6570\u5206\u522b\u4e0e\u7b2c\u4e00\u4e2a\u6570\u4ea4\u6362\uff0c\u8fd9\u6837\u5c31\u603b\u662f\u5728\u5904\u7406\u540en-1\u4e2a\u6570\u7684\u5168\u6392\u5217\u3002", "\u7b97\u6cd5\u5982\u4e0b\uff1a", "#include <stdio.h>", "int n = 0;", "void swap(int *a, int *b) // \u4ea4\u6362", "\n{", "\nint m;", "\nm = *a;", "\n*a = *b;", "\n*b = m;", "\n}", "void perm(int list[], int k, int m)", "\n{", "\nint i;", "\nif(k > m)", "\n{", "\nfor(i = 0; i <= m; i++)", "\nprintf(\u201c%d \u201c, list);", "\nprintf(\u201c\\n\u201d);", "\nn++;", "\n}", "\nelse", "\n{", "\nfor(i = k; i <= m; i++)", "\n{", "\nswap(&list[k], &list);", "\nperm(list, k + 1, m);", "\nswap(&list[k], &list);", "\n}", "\n}", "\n}", "int main()", "\n{", "\nint list[] = {1, 2, 3, 4, 5};", "\nperm(list, 0, 4);", "\nprintf(\u201ctotal:%d\\n\u201d, n);", "\nreturn 0;", "\n}"], "title": "c/c++\u7a0b\u5e8f\u5458\u5e94\u8058\u9762\u8bd5\u9898"},
{"contents": ["1\u3001 int a=5;", "\na=(a=3*5,a*4),a+5;", "\na=\uff1f", "\n\u6ce8\uff1a\u8d4b\u503c\u8fd0\u7b97\u7b26\u8981\u4f18\u5148\u4e8e\u9017\u53f7\u8fd0\u7b97\u7b26\uff0c\u6545 a = 60;", "2\u3001\u4ea4\u6362\u4e24\u4e2a\u53d8\u91cf\uff08\u6574\u578b\uff09\u7684\u503c\uff0c\u4e14\u4e0d\u5141\u8bb8\u4f7f\u7528\u4e2d\u95f4\u503c", "\nint a,b;", "\na^=b;", "\nb^=a;", "\na^=b;", "\n\u6ce8\uff1aa,b\u5fc5\u987b\u4e3a\u6574\u578b\u53d8\u91cf", "3\u3001int a=3;", "\na+=a-=a*a;", "\na=?", "\n\u201c=\u201d\u4e3a\u81ea\u53f3\u5411\u5de6\u7ed3\u5408\uff0c\u6545a=a-a*a,a=-6; a=a+a,a=-12;", "4\u3001int a;", "\nscanf(\u201d %d\\n\u201d,&a);", "\n\u6ce8\uff1a\u4f7f\u7528scanf\u51fd\u6570\u65f6\uff0c\u5efa\u8bae\u4e0d\u8981\u5305\u542b\u2019\\n\u2019\u3002\u5982\u679c\u8fd9\u6837\u4f7f\u7528\uff0c\u5219\u5728\u8f93\u5165\u53d8\u91cfa\u7684\u503c\u65f6\uff0c\u5e94\u8be5\u6309\u4e24\u6b21<Enter>\u952e\uff0c\u56e0\u4e3a\u5b57\u7b26\u2019\\n\u2019\u7684\u4f5c\u7528\u76f8\u5f53\u4e8e<Enter>\u952e\u3002", "5\u3001switch\u8bed\u53e5\u7684\u4e00\u822c\u5f62\u5f0f\u4e3a\uff1a", "\nswitch(\u8868\u8fbe\u5f0f\uff09", "\n{", "\ncase \u5e38\u91cf\u8868\u8fbe\u5f0f1\uff1a\u8bed\u53e51", "\ncase \u5e38\u91cf\u8868\u8fbe\u5f0f2\uff1a\u8bed\u53e52", "\n\u2026\u2026", "\ncase \u5e38\u91cf\u8868\u8fbe\u5f0fn\uff1a\u8bed\u53e5n", "\ndefault:\u8bed\u53e5n+1", "\n}", "\n\u6ce8\uff1aswitch\u8868\u8fbe\u5f0f\u6240\u8ba1\u7b97\u7684\u7ed3\u679c\u5fc5\u987b\u4e3a\u6574\u578b\uff0c\u5e38\u91cf\u8868\u8fbe\u5f0f\u4e5f\u5fc5\u987b\u662f\u6574\u578b\u6570\u503c\uff0c\u4e14\u4e0d\u80fd\u4e3a\u53d8\u91cf\u3002", "6\u3001\u5199\u51fafloat\u7c7b\u578b\u7684\u53d8\u91cfi\u4e0e\u96f6\u503c\u6bd4\u8f83\u7684\u8bed\u53e5\u3002", "\nif ((x >=0.00001) &&(x<=-0.00001))", "7\u3001", "\n\uff081\uff09\u7528\u903b\u8f91\u8868\u8fbe\u5f0f\u3001for\u5faa\u73af\u8bed\u53e5\u6c42\u89e3\u903b\u8f91\u9898\u30025\u4f4d\u8fd0\u52a8\u5458\u53c2\u52a0\u4e8610\u7c73\u53f0\u8df3\u6c34\u6bd4\u8d5b\uff0c\u6709\u4eba\u8ba9\u4ed6\u4eec\u9884\u6d4b\u6bd4\u8d5b\u7ed3\u679c", "\nA\u9009\u624b\u8bf4\uff1aB\u7b2c\u4e00\uff0c\u6211\u7b2c\u4e09\u3002", "\nB\u9009\u624b\u8bf4\uff1a\u6211\u7b2c\u4e8c\uff0cE\u7b2c\u56db\u3002", "\nC\u9009\u624b\u8bf4\uff1a\u6211\u7b2c\u4e00\uff0cD\u7b2c\u4e8c\u3002", "\nD\u9009\u624b\u8bf4\uff1aC\u6700\u540e\uff0c\u6211\u7b2c\u4e09\u3002", "\nE\u9009\u624b\u8bf4\uff1a\u6211\u7b2c\u56db\uff0cA\u7b2c\u4e00\u3002", "\n\u6bd4\u8d5b\u7ed3\u675f\u540e\uff0c\u6bcf\u4f4d\u9009\u624b\u90fd\u8bf4\u5bf9\u4e86\u4e00\u534a\uff0c\u8bf7\u7f16\u7a0b\u786e\u5b9a\u6bd4\u8d5b\u7684\u540d\u6b21\u3002", "\n\uff082\uff09\u65e5\u672c\u67d0\u5730\u53d1\u751f\u4e86\u4e00\u4ef6\u8c0b\u6740\u6848\uff0c\u8b66\u5bdf\u901a\u8fc7\u6392\u67e5\u786e\u5b9a\u6740\u4eba\u51f6\u624b\u5fc5\u4e3a4\u4e2a\u5acc\u7591\u72af\u7684\u4e00\u4e2a\u3002\u4ee5\u4e0b\u4e3a4\u4e2a\u5acc\u7591\u72af\u7684\u4f9b\u8bcd\u3002", "\nA\u8bf4\uff1a\u4e0d\u662f\u6211\u3002", "\nB\u8bf4\uff1a\u662fC\u3002", "\nC\u8bf4\uff1a\u662fD\u3002", "\nD\u8bf4\uff1aC\u5728\u80e1\u8bf4", "\n\u5df2\u77e53\u4e2a\u4eba\u8bf4\u4e86\u771f\u8bdd\uff0c1\u4e2a\u4eba\u8bf4\u7684\u662f\u5047\u8bdd\u3002\u73b0\u5728\u8bf7\u6839\u636e\u8fd9\u4e9b\u4fe1\u606f\uff0c\u5199\u4e00\u4e2a\u7a0b\u5e8f\u6765\u786e\u5b9a\u5230\u5e95\u8c01\u662f\u51f6\u624b\u3002", "\n\u89e3\uff1a", "\n#include<stdio.h>", "\nint main()", "\n{", "\nint i,sum=0,flag=0;", "\nchar killer;", "\nfor(i=1;i<=4;i++)", "\n{", "\nkiller =64 +i;", "\nsum = (killer !=\u2019A\u2019)+(killer ==\u2019C\u2019)+(killer == \u2018D\u2019) +(killer!=\u2019D\u2019);", "\nif(sum ==3)", "\n{", "\nflag=1;", "\nprintf(\u201c%c is the killer.\\n\u201d,killer);", "\nbreak;", "\n}", "\n}", "\nif(flag ==0)", "\nprintf(\u201cCan not find\\n\u201d);", "\nreturn 0;", "\n}", "8\u3001", "\n\u6a21\u5757\u5316\u51c6\u5219\u5c31\u662f\u628a\u4e00\u4e2a\u5927\u95ee\u9898\u5206\u89e3\u4e3a\u8bb8\u591a\u5c0f\u95ee\u9898\uff0c\u6bcf\u4e2a\u5c0f\u95ee\u9898\u7531\u4e00\u4e2a\u51fd\u6570\u6765\u89e3\u51b3\uff0c\u6bcf\u4e2a\u51fd\u6570\u90fd\u5b8c\u6210\u4e00\u4e2a\u7279\u5b9a\u7684\u529f\u80fd\uff0c\u5404\u4e2a\u5c0f\u95ee\u9898\u5e94\u8be5\u5c3d\u91cf\u72ec\u7acb\uff0c\u5373\u6240\u8c13\u9ad8\u5185\u805a\uff0c\u4f4e\u8026\u5408\u3002\u51fd\u6570\u5185\u90e8\u5e94\u8be5\u662f\u9ad8\u5185\u805a\uff0c\u5b8c\u6210\u4e00\u4e9b\u7d27\u5bc6\u76f8\u5173\u7684\u4efb\u52a1\uff0c\u51fd\u6570\u4e4b\u95f4\u5e94\u8be5\u53ea\u6709\u4e00\u4e9b\u975e\u5e38\u5fc5\u8981\u7684\u8054\u7cfb\uff0c\u5373\u4f4e\u8026\u5408\u3002", "9\u3001", "\nextern \u7684\u4f7f\u7528\uff08\u53d8\u91cf\u548c\u51fd\u6570\uff09", "\n\u6e90\u6587\u4ef6file1.c:", "\n#include<stdio.h>", "extern long power(int);", "\nint A=2;", "\nmain()", "\n{", "\nint n =10,total;", "\ntotal = power(n);", "\nreturn 0;", "\n}", "\n\u6e90\u6587\u4ef6file2.c", "\nextern A;\u00a0 \u00a0//\u5916\u90e8\u58f0\u660e \u4e00\u822c\u53ea\u53ea\u9488\u5bf9\u7684\u662f\u5168\u5c40\u53d8\u91cf", "\nlong power(int n)", "\n{", "\nlong total =1;", "\nint i;", "\nfor(i=1;i<=n;i++)", "\ntotal = total * A;", "\nreturn total;", "\n}", "10\u3001", "\n\u6570\u7ec4\u521d\u59cb\u5316\uff1a", "\n\u5728\u6240\u6709\u51fd\u6570\u5916\u5b9a\u4e49\u7684\u6570\u7ec4\u7684\u6240\u6709\u5143\u7d20\u5c06\u88ab\u81ea\u52a8\u8d4b\u4e88\u521d\u503c0\uff0c\u5728\u51fd\u6570\u5185\u90e8\u5b9a\u4e49\u7684\u6570\u7ec4\uff0c\u7cfb\u7edf\u4e0d\u4f1a\u4e3a\u5176\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5728\u4f7f\u7528\u6570\u7ec4\u5143\u7d20\u524d\u5fc5\u987b\u5bf9\u5143\u7d20\u8fdb\u884c\u521d\u59cb\u5316\u3002", "11\u3001", "\nint a[5]={1,2,3,4,5};", "\nint *p=a;", "\np = a +10 \uff1b//\u4e0d\u5408\u6cd5\u7684, \u56e0\u4e3a\u8be5\u6570\u7ec4\u53ea\u67095\u4e2a\u5143\u7d20", "\np= a +5 ; //\u5408\u6cd5\u7684\uff0c\u867d\u7136\u8be5\u6570\u7ec4\u53ea\u67095\u4e2a\u5143\u7d20\uff0c\u4ecea[0]\u5230a[4],\u4f46p\u53ef\u4ee5\u6307\u5411\u6570\u7ec4\u5b58\u50a8\u7a7a\u95f4\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u3002\u4f46\u4e0d\u80fd\u5bf9\u8be5\u53d8\u91cf\u6267\u884c*p\u8fd0\u7b97\uff0c\u5373\u4e0d\u80fd\u83b7\u5f97\u6b64\u65f6\u6307\u9488p\u6240\u6307\u5411\u7684\u53d8\u91cf\u7684\u503c\u3002", "\na++;//\u4e0d\u5408\u6cd5\u7684\uff0c\u4e0d\u80fd\u5bf9\u6570\u7ec4\u540d\u6267\u884c++\u3001\u2013\u64cd\u4f5c\u3002\u8fd9\u662f\u56e0\u4e3aa\u662f\u6570\u7ec4\u540d\uff0c\u5b83\u662f\u6570\u7ec4\u7684\u9996\u5730\u5740\uff0c\u5b83\u7684\u503c\u5728\u7a0b\u5e8f\u7684\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u5f0f\u56fa\u5b9a\u4e0d\u53d8\u7684\uff0c\u662f\u5e38\u91cf\u3002", "\n\u6ce8\uff1a\u5728\u6307\u9488\u4e0a\u8fdb\u884c\u52a0\u51cf\u8fd0\u7b97\u540e\u6240\u5f97\u5230\u7684\u6307\u9488\uff0c\u5fc5\u987b\u6307\u5411\u540c\u4e00\u4e2a\u6570\u7ec4\u6216\u6307\u5411\u6570\u7ec4\u5b58\u50a8\u7a7a\u95f4\u7684\u4e0b\u4e00\u4e2a\u5355\u5143\u3002", "12\u3001", "\n\u533a\u522bint (*p)[5]\u548cint *p[5]\u3002", "\n\u524d\u8005\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u5b83\u6307\u5411\u4e00\u4e2a\u542b\u67095\u4e2a\u5143\u7d20\u7684\u6570\u7ec4\u3002\u540e\u8005\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u5b83\u7684\u957f\u5ea6\u4e3a5\uff0c\u6570\u7ec4\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u6307\u5411\u4e00\u4e2a\u6574\u578b\u53d8\u91cf\u3002", "\n\u533a\u522bint *f( int i, int j)\u548c int (*p)( int i ,int j)", "\n\u524d\u8005\u662f\u8fd4\u56de\u6307\u9488\u7684\u51fd\u6570\uff0c\u5b83\u662f\u4e00\u4e2a\u51fd\u6570\u7684\u58f0\u660e\uff0c\u540e\u8005\u662f\u6307\u5411\u51fd\u6570\u7684\u6307\u9488\uff0c\u5b83\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6307\u9488\u3002", "13\u3001", "\nvoid change(int i, int *p)", "\n{", "\ni++;", "\nif(p != NULL)", "\n(*p)++;", "\n}", "\n\u5bf9\u4e8e\u6307\u9488\u578b\u5f62\u53c2\uff0c\u5b9e\u53c2\u4e5f\u53ef\u4ee5\u662fNULL\uff0c\u56e0\u6b64change\u51fd\u6570\u4e2d\u5fc5\u987b\u68c0\u67e5p\u662f\u5426\u4e3aNULL\u3002\u5982\u679c\u5b9e\u53c2\u4e3aNULL\uff0c\u90a3\u4e48\u8bed\u53e5\uff08*p)++\u5c06\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\u3002", "\n\u6ce8\uff1a\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u7684\u53c2\u6570\u4e2d\u6709\u6307\u9488\uff0c\u90a3\u4e48\u51fa\u4e8e\u7a0b\u5e8f\u5065\u58ee\u6027\u7684\u8003\u8651\uff0c\u5728\u8be5\u51fd\u6570\u4e2d\u987b\u68c0\u67e5\u53c2\u6570\u662f\u5426\u4e3aNULL.", "14\u3001", "\n\u51fd\u6570\u6307\u9488\u7684\u4f7f\u7528\u793a\u4f8b\uff1a", "\n#include <stdio.h>", "\n#define GET_MAX 0", "\n#define GET_MIN 1", "int get_max(int i, int j)", "\n{", "\nreturn i>j?i : j ;", "\n}", "\nint get_min(int i, int j)", "\n{", "\nreturn i<j?i:j ;", "\n}", "\nint compare(int i, int j,int flag)", "\n{", "\nint ret;", "\nint (*p)(int,int);", "\nif(flag == GET_MAX)", "\np = get_max;", "\nelse", "\np = get_min;", "\nret = p(i,j);", "\nreturn ret;", "\n}", "\nint main()", "\n{", "\nint i =5,j = 10,ret;", "\nret = compare(i,j,GET_MAX);", "\nprintf(\u201cThe MAX is %d\\n\u201d,ret);", "\nreturn 0;", "\n}", "\n\u6ce8\uff1a\uff081\uff09\u4e0d\u80fd\u5bf9\u6307\u5411\u51fd\u6570\u7684\u6307\u9488\u505a\u4efb\u4f55\u8fd0\u7b97\uff0c\u5982p++\u3001p\u2013\u3001p+n\u3001p-n\u90fd\u662f\u9519\u8bef\u7684\u3002", "\n\uff082\uff09\u6307\u5411\u51fd\u6570\u7684\u6307\u9488\u80fd\u901a\u8fc7\u540c\u7c7b\u578b\u7684\u51fd\u6570\uff08\u5373\u53c2\u6570\u76f8\u540c\u3001\u8fd4\u56de\u7c7b\u578b\u76f8\u540c\uff09\u540d\u3001\u51fd\u6570\u6307\u9488\u6216NULL\u6765\u8fdb\u884c\u521d\u59cb\u5316\u6216\u8d4b\u503c\u3002\u5c06\u51fd\u6570\u6307\u9488\u521d\u59cb\u5316\u6216\u8d4b\u503c\u4e3aNULL\uff0c\u8868\u793a\u8be5\u6307\u9488\u76ee\u524d\u4e0d\u6307\u5411\u4efb\u4f55\u51fd\u6570\u3002", "\n\u51fd\u6570\u6307\u9488\u505a\u5f62\u53c2\uff1a", "\n#include<stdio.h>", "\nint get_big(int i, int j)", "\n{", "\nreturn i>j?i:j ;", "\n}", "\nint get_max(int i, int j,int k,int (*p)(int,int))", "\n{", "\nint ret;", "\nret = p(i,j);", "\nret = p(ret,k);", "\nreturn ret;", "\n}", "\nint main()", "\n{", "\nint i =5 ,j =10, k =15,ret;", "\nret =get_max(i,j,k,get_big);", "\nreturn 0;", "\n}", "\n\u51fd\u6570\u6307\u9488\u4f5c\u51fd\u6570\u8fd4\u56de\u503c\uff1a", "\n#include <stdio.h>", "\nint get_big(int i, int j)", "\n{", "\nreturn i>j?i:j;", "\n}", "\nint (*get_function(int a))(int ,int )", "\n{", "\nprintf(\u201cthe number is %d\\n\u201d,a);", "\nreturn get_big;", "\n}", "\nint main()", "\n{", "\nint i=5,j=10,max;", "\nint (*p)(int,int);", "\np = get_function(100);", "\nmax = p(i,j);", "\nprintf(\u201cThe MAX is %d\\n\u201d,max);", "\nreturn 0;", "\n}", "\n\u6ce8\uff1aint (*get_function(int a0)(int ,int)\u662f\u4e00\u4e2a\u8fd4\u56de\u51fd\u6570\u6307\u9488\u7684\u51fd\u6570\u3002\u8fd9\u4e2a\u53ef\u80fd\u6bd4\u8f83\u96be\u4ee5\u7406\u89e3\u3002\u6211\u4eec\u9996\u5148\u6293\u4f4fget_function,\u56e0\u4e3a\u8fd0\u7b97\u7b26\uff08\uff09\u7684\u4f18\u5148\u7ea7\u6bd4*\u9ad8\uff0c\u4ed6\u7684\u8fd4\u56de\u503c\u662fint(*)(int,int),\u4e5f\u5c31\u662f\u5b83\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u6307\u5411\u51fd\u6570\u7684\u6307\u9488\u3002\u8be5\u6307\u9488\u6240\u6307\u5411\u7684\u51fd\u6570\u6709\u4e24\u4e2a\u6574\u578b\u53c2\u6570\u3002get_function\u4e2d\uff0c\u5c06get_big\u4f5c\u4e3a\u51fd\u6570\u7684\u8fd4\u56de\u503c\u3002get_big\u662f\u4e00\u4e2a\u51fd\u6570\u540d\uff0c\u4e5f\u662f\u51fd\u6570get_big\u7684\u5165\u53e3\u5730\u5740\uff0c\u4ed6\u662f\u4e00\u4e2a\u6307\u9488\u3002", "\n15\u3001", "\nchar string[] = \u201cLinux C\u201d;", "\nchar *p = \u201cLinux C\u201d;", "\n//\u201dLinux C\u201d\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u5e38\u91cf\u3002C\u8bed\u8a00\u5bf9\u4e8e\u5b57\u7b26\u4e32\u5e38\u91cf\u901a\u5e38\u662f\u8fd9\u6837\u5904\u7406\u7684\uff1a\u5728\u5185\u5b58\u4e2d\u5f00\u8f9f\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4\u6765\u5b58\u50a8\u8be5\u5b57\u7b26\u4e32\u5e38\u91cf\uff0c\u5e76\u628a\u5f00\u8f9f\u51fa\u7684\u5b57\u7b26\u6570\u7ec4\u7684\u9996\u5730\u5740\u8d4b\u7ed9p.", "\n\u6ce8\uff1astring[0] = \u2018a\u2019\u662f\u53ef\u4ee5\u7684\uff0c\u800cp[0] = \u2018a\u2019\u662f\u975e\u6cd5\u7684\uff0c\u56e0\u4e3ap\u6307\u5411\u7684\u662f\u5b57\u7b26\u4e32\u5e38\u91cf\uff0c\u5e38\u91cf\u7684\u5185\u5bb9\u4e0d\u53ef\u6539\u53d8\u3002\u628ap\u6307\u5411\u4e00\u4e2a\u5b57\u7b26\u4e32\u5e38\u91cf\u6216\u5b57\u7b26\u6570\u7ec4\u65f6\u5408\u6cd5\u7684\uff0c\u4f8b\u5982\uff1ap = \u201cHello World!\u201d; p= string;", "\n16\u3001", "\n\u4e0b\u9762\u8fd9\u6bb5\u5c0f\u7a0b\u5e8f\u7684\u8f93\u51fa\u662f\u4ec0\u4e48\uff1f", "\n#include<stdio.h>", "\nvoid main()", "\n{", "\nint a[5] = {1,2,3,4,5};", "\nint *ptr = (int *)(&a+1);", "\nprintf(\u201c%d,%d\\n\u201d,*(a+1),*(ptr-));", "\n}", "\n\u6ce8\uff1a &a+1\u4e0d\u662f\u9996\u5730\u5740+1\uff0c\u7cfb\u7edf\u4f1a\u8ba4\u4e3a\u52a0\u4e00\u4e2aa\u6570\u7ec4\u7684\u504f\u79fb\uff0c\u662f\u504f\u79fb\u4e86\u4e00\u4e2a\u6570\u7ec4\u7684\u5927\u5c0f\uff08\u672c\u4f8b\u662f5\u4e2aint\uff09\u3002\u5bf9\u4e8eint *ptr=(int *)(&a+1)\uff0cptr\u662f&(a[5]0,\u4e5f\u5c31\u662fa+5\u3002ptr\u4e0e(&a+1)\u7c7b\u578b\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u6240\u4ee5ptr-1\u53ea\u4f1a\u51cf\u53bbsizeof(int *)\u3002a\uff0c&a\u7684\u5730\u5740\u662f\u4e00\u6837\u7684\uff0c\u4f46\u542b\u4e49\u4e0d\u4e00\u6837\uff0ca\u662f\u6570\u7ec4\u9996\u5730\u5740\uff0c\u4e5f\u5c31\u662fa[0]\u7684\u5730\u5740\uff0c&a\u662f\u5bf9\u8c61\uff08\u6570\u7ec4\uff09\u9996\u5730\u5740\uff0ca+1\u662f\u6570\u7ec4\u4e0b\u4e00\u5143\u7d20\u7684\u5730\u5740\uff0c\u5373a[1]\uff0c&a+1\u662f\u4e0b\u4e00\u4e2a\u5bf9\u8c61\u7684\u5730\u5740\uff0c\u5373a[5]\u3002*(a+1)\u5c31\u662fa[1] \uff0c*(ptr-1)\u662fa[4]\uff0c\u6267\u884c\u7ed3\u679c\u662f2\uff0c5\u3002", "\n17\u3001", "\n\u5047\u8bbe\u4f60\u53ea\u77e5\u9053\u4e00\u4e2a\u6570\u7ec4\u7684\u6570\u7ec4\u540d\uff08a[]),\u5982\u4f55\u786e\u5b9a\u8fd9\u4e2a\u6570\u7ec4\u7684\u957f\u5ea6\uff1f", "\nint length = sizeof(a)/sizeof(a[0]);", "\n18\u3001", "\n\u4e0b\u9762\u8fd9\u4e2a\u7a0b\u5e8f\u7f16\u8bd1\u65f6\u4f1a\u62a5\u9519\uff0c\u8bf7\u6307\u51fa\u9519\u8bef\u5e76\u6539\u6b63\u3002", "\n#include<stdio.h>", "\nint main(void)", "\n{", "\nint **p;", "\nint arr[100];", "\np = &arr;", "\nreturn 0;", "\n}", "\n&arr\u662f\u4e00\u4e2a\u6307\u5411\u957f\u5ea6\u4e3a100\u7684\u6570\u7ec4\u7684\u6307\u9488\uff0c\u800cp\u662f\u6307\u5411\u6307\u9488\uff08\u8be5\u6307\u9488\u6307\u5411\u7684\u662fint\u578b\u53d8\u91cf\uff09\u7684\u6307\u9488\u3002\u4e3b\u51fd\u6570\u53ef\u4ee5\u6539\u4e3a\uff1a", "\nint main(void)", "\n{", "\nint **p,*q;", "\nint arr[100];", "\nq=arr;", "\np =&q;", "\nreturn 0;", "\n}", "\n\u7528\u6307\u9488q\u8fdb\u884c\u8fc7\u6e21\u3002", "\n\u6ce8\uff1a\u4e24\u4e2a\u6307\u9488\u53ea\u6709\u5728\u6240\u6307\u5411\u7684\u6570\u636e\u7684\u7c7b\u578b\u4e00\u81f4\u65f6\u624d\u53ef\u4ee5\u76f8\u4e92\u8d4b\u503c\u3002", "\n19\u3001", "\n\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u4ee5\u9012\u5f52\u65b9\u5f0f\u53cd\u5e8f\u8f93\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\u5982\u7ed9\u5b9a\u5b57\u7b26\u4e32\u201cabc\u201d\u8f93\u51fa\u201ccba \u201d\u3002", "\n#include<stdio.h>", "\nvoid reverse(char *p)", "\n{", "\nif( *p == \u2018\\0\u2032)", "\nreturn;", "\nreverse(p+1);", "\nprintf(\u201c%c\u201d,*p);", "\n}", "\nint main()", "\n{", "\nreverse(\u201cabc\u201d);", "\nprintf(\u201c\\n\u201d);", "\nreturn 0;", "\n}", "\n20\u3001\u5199\u4e00\u4e2a\u9012\u5f52\u7a0b\u5e8f\uff0c\u5224\u65ad\u6570\u7ec4a[n]\u662f\u5426\u662f\u4e00\u4e2a\u9012\u589e\u7684\u6570\u7ec4\u3002", "\n#include<stdio.h>", "\nint fun( int a[],int n)", "\n{", "\nif(n ==1)", "\nreturn 1;", "\nif( n == 2)", "\nreturn (a[n-1]>=a[n-2];", "\nreturn (fun(a,n-1)&&(a[n-1]>=a[n-2]));", "\n}", "\nint main()", "\n{", "\nint a[] = {1,2,3,4,5,6};", "\nif( fun(a,sizeof(a)/sizeof(a[0]) == 1)", "\nprintf(\u201ca:ok\\n\u201d);", "\nelse", "\nprintf(\u201ca:no\\n\u201d);", "\nreturn 0;", "\n}", "\n21\u3001", "\n\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u7684\u539f\u578b\u662f\uff1a", "\nint findnumstring (char *outputsr, char *intputstr)", "\n\u529f\u80fd\uff1a\u5728\u5b57\u7b26\u4e32\u4e2d\u627e\u51fa\u8fde\u7eed\u6700\u957f\u7684\u6570\u5b57\u4e32\uff0c\u628a\u8fd9\u4e2a\u4e32\u7684\u957f\u5ea6\u8fd4\u56de\uff0c\u5e76\u628a\u8fd9\u4e2a\u6700\u957f\u6570\u5b57\u4e32\u8d4b\u7ed9\u5176\u4e2d\u4e00\u4e2a\u51fd\u6570\u53c2\u6570outputstr\u6240\u6307\u5185\u5b58\u3002", "\n\u4f8b\u5982\uff1a\u201cabcd12345eee125sss123456789 \u201c\u7684\u9996\u5730\u5740\u4f20\u7ed9 intputstr\u540e\uff0c\u51fd\u6570\u5c06\u8fd4\u56de9\uff0coutputstr\u6240\u6307\u7684\u503c\u4e3a123456789\u3002", "\n#include<stdio.h>", "\n#include<string.h>", "\n#include<stdlib.h>", "\nint findnumstring(char *outputstr,char *inputstr)", "\n{", "\nchar *in = inputstr , *out = outputstr , *temp , *final;", "\nint count = 0,maxlen = 0;", "\nwhile( *in != \u2018\\0\u2032)", "\n{", "\nif( *in > 47 && *in <58\uff09", "\n{", "\nfor( temp = in; *in >47 && *in <58; in++)", "\ncount ++;", "\n}", "\nelse", "\nin++;", "\nif( maxlen < count )", "\n{", "\nmaxlen = count;", "\nfinal = temp;", "\n}", "\ncount = 0 ;", "\n}", "\nfor( int i=0;i <maxlen;i++)", "\n{", "\n*out = *final;", "\nout++;", "\nfinal++;", "\n}", "\n*out = \u2018\\0\u2032;", "\nreturn maxlen;", "\n}", "\nvoid main()", "\n{", "\nchar string[] =\u201dabcd12345eee125ss123456789\u2033;", "\nchar *p = (char *)malloc( strlen(string) +1);", "\nint count = findnumstring(p,string);", "\nprintf(\u201c%s\\n number string length =%d\\n\u201d,p ,count);", "\n}", "\n22\u3001", "\n\u5199\u4e00\u4e2a\u5b9e\u73b0\u5b57\u7b26\u4e32\u62f7\u8d1d\u7684\u51fd\u6570\u3002\u7ed9\u5b9a\u5b57\u7b26\u4e32\u62f7\u8d1d\u51fd\u6570strcpy\u7684\u539f\u578b\uff1a", "\nchar *strcpy(char *dest,const char *src);", "\n\u8981\u6c42\uff1a\uff081\uff09\u4e0d\u8c03\u7528\u4efb\u4f55\u5e93\u51fd\u6570\u3002\uff082\uff09\u8bf4\u660e\u51fd\u6570\u4e3a\u4ec0\u4e48\u8fd4\u56dechar *.", "\nchar *strcpy(char *dest,char *src)", "\n{", "\nif( (dest == NULL) || (src == NULL) )", "\n{", "\nreturn NULL;", "\n}", "\nchar *ret_string = dest;", "\nwhile( *dest ++ = *src++)!=\u2019\\0\u2032);", "\nreturn ret_string;", "\n}", "\n\u6ce8\uff1a\u8fd4\u56dechar * \u6307\u9488\u7684\u539f\u56e0\u662f\u4e3a\u4e86\u5b9e\u73b0\u94fe\u5f0f\u8868\u8fbe\u5f0f\uff0c\u5982\uff1a", "\nint length = strlen( strcpy( dest, \u201chello world\u201d) );", "\n23\u3001", "\n\u7ec3\u4e60\u9898\uff1a", "\n\uff081\uff09\u7528\u9012\u5f52\u7684\u65b9\u6cd5\u6c42\u4e00\u4e2a\u6709n\u4e2a\u5143\u7d20\u7684int\u578b\u6570\u7ec4\u7684\u6700\u5927\u503c\u3002", "\n\uff082\uff09\u5229\u7528\u6570\u7ec4\u53ef\u4ee5\u5b9e\u73b0\u9ad8\u7cbe\u5ea6\u8ba1\u7b97\uff0c\u65b9\u6cd5\u662f\u5c06\u5927\u6574\u6570\u6bcf\u4f4d\u4e0a\u7684\u6570\u5b57\u5b58\u50a8\u4e3a\u6570\u7ec4\u7684\u4e00\u4e2a\u5143\u7d20\u3002\u5bf9\u4e8e\uff1a", "\nm= 88200807199688", "\nn= 345678912345678", "\n\u7f16\u5199\u51fd\u6570\uff0c\u5b9e\u73b0\u5927\u6574\u6570m\u3001n\u7684\u52a0\u3001\u51cf\u3001\u4e58\u8fd0\u7b97\u3002", "\n\uff083\uff09\u7ea6\u745f\u592b\u95ee\u9898\uff1a", "\n\u53e4\u4ee3\u67d0\u6cd5\u5b98\u8981\u5224\u51b3n\u4e2a\u72af\u4eba\u6b7b\u5211\uff0c\u4ed6\u6709\u4e00\u6761\u8352\u5510\u7684\u903b\u8f91\uff0c\u5c06\u72af\u4eba\u9996\u5c3e\u7684\u76f8\u63a5\u6392\u6210\u5706\u5708\uff0c\u7136\u540e\u4ece\u7b2cs\u4e2a\u4eba\u5f00\u59cb\u6570\u8d77\uff0c\u6bcf\u6570\u5230\u7b2cm\u4e2a\u72af\u4eba\uff0c\u5c31\u62c9\u51fa\u6765\u5904\u51b3\uff1b\u7136\u540e\u53c8\u6570m\u4e2a\uff0c\u6570\u5230\u7684\u72af\u4eba\u53c8\u62c9\u51fa\u6765\u5904\u51b3\uff0c\u4f9d\u6b21\u7c7b\u63a8\u3002\u5269\u4e0b\u7684\u6700\u540e\u4e00\u4eba\u53ef\u4ee5\u8c41\u514d\u3002", "\n\u7f16\u5199\u7a0b\u5e8f\uff0c\u7ed9\u51fa\u5904\u51b3\u987a\u5e8f\uff0c\u5e76\u7ed9\u51fa\u54ea\u4e00\u4e2a\u4eba\u53ef\u4ee5\u6d3b\u4e0b\u6765\u3002", "\n\uff084\uff09\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u6c42\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u6700\u5927\u7684\u516c\u5171\u5b50\u4e32\u3002", "\n24\u3001", "\n\u5b8f\u7684\u4f5c\u7528\u8303\u56f4\u662f\u4ece\u5b8f\u5b9a\u4e49\u5f00\u59cb\u5230\u672c\u6e90\u7a0b\u5e8f\u6587\u4ef6\u7ed3\u675f\u4e3a\u6b62\u3002\u4e5f\u53ef\u4ee5\u4f7f\u7528#undef\u6765\u63d0\u524d\u7ec8\u6b62\u4f5c\u7528\u8303\u56f4\u3002\u4f8b\u5982\uff1a", "\n#define MAX 256", "\nint main()", "\n{", "\n\u2026\u2026\u2026", "\n}", "\n#undef MAX", "\nint f()", "\n{", "\n\u2026..", "\n}", "\n\u7531\u4e8e\u4f7f\u7528\u4e86#undef\uff0c\u4f7f\u5b8f\u540dMAX\u53ea\u5728main\u51fd\u6570\u4e2d\u6709\u6548\u3002", "\n25\u3001\u7f16\u7a0b\u5c0f\u6280\u5de7", "\n\u793a\u4f8b\uff1a#ifdef DEBUG", "\nprintf(\u201ca=%d,b=%d\u201d,a,b);", "\n#endif", "\n\u5728\u8c03\u8bd5\u7a0b\u5e8f\u65f6\uff0c\u53ef\u4ee5\u5728\u6e90\u7a0b\u5e8f\u5934\u90e8\u52a0\u5165\u5982\u4e0b\u8bed\u53e5\uff1a", "\n#define DEBUG", "\n\u8fd9\u6837\u5728\u8f6f\u4ef6\u5f00\u53d1\u9636\u6bb5\uff0c\u7f16\u8bd1\u8fd0\u884c\u7a0b\u5e8f\u65f6\u4f1a\u8f93\u51fa\u53d8\u91cfa,b\u7684\u503c\u3002\u5f53\u7a0b\u5e8f\u8c03\u8bd5\u5b8c\u6bd5\uff0c\u5728\u6e90\u7a0b\u5e8f\u6587\u4ef6\u5934\u90e8\u5220\u9664\u8fd9\u4e00\u884c\uff0c\u5219\u7528\u6237\u8fd0\u884c\u65f6\u4e0d\u4f1a\u8f93\u51faa,b\u7684\u503c\u3002\u8fd9\u91cc\u6253\u5370\u51faa,b\u503c\u53ea\u662f\u4f9b\u8c03\u8bd5\u4f7f\u7528\u3002", "\n26\u3001", "\n\u4e0d\u80fd\u628a\u5171\u7528\u4f53\u53d8\u91cf\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\uff0c\u4e5f\u4e0d\u80fd\u4f7f\u51fd\u6570\u8fd4\u56de\u5171\u7528\u4f53\u53d8\u91cf\uff0c\u4f46\u53ef\u4ee5\u4f7f\u7528\u6307\u5411\u5171\u7528\u4f53\u53d8\u91cf\u7684\u6307\u9488\u3002", "\n27\u3001", "\ntypedif int NUMBER[10];", "\nNUMBER \u58f0\u660e\u4e3a\u542b\u670910\u4e2a\u5143\u7d20\u7684\u6570\u7ec4\u7c7b\u578b\u3002", "\nNUMBER n;", "\nn[0] =1;", "\nn\u4e3a\u542b\u670910\u4e2a\u5143\u7d20\u7684\u6570\u7ec4\u3002", "\n28\u3001", "\nC\u8bed\u8a00\u5141\u8bb8\u5728\u4e00\u4e2a\u7ed3\u6784\u4f53\u91cd\u4ee5\u4f4d\u4e3a\u5355\u4f4d\u6765\u4f7f\u7528\u5185\u5b58\uff0c\u8fd9\u79cd\u4ee5\u4e3a\u4e3a\u5355\u4f4d\u7684\u6210\u5458\u79f0\u4e3a\u4f4d\u57df\u6216\u4f4d\u6bb5\u3002", "\nstruct bit_data", "\n{", "\nint a:6;", "\nint b:4;", "\nint c:4;", "\nint d;", "\n}", "\n\u6ce8\uff1a0~5\u76846\u4f4d\u5b58\u653ea\uff0c6~9\u76844\u4f4d\u5b58\u653eb,10~13\u76844\u4f4d\u5b58\u653ec\uff0c14~31\u768418\u4f4d\u7a7a\u95f2\uff0c32~63\u768432\u4f4d\u5b58\u653ed.", "\n\u82e5\u67d0\u4e00\u4f4d\u6bb5\u8981\u4ece\u53e6\u5916\u4e00\u4e2a\u5b58\u50a8\u5355\u5143\u5f00\u59cb\u5b58\u653e\uff0c\u7ed3\u6784\u4f53\u4e2d\u7684\u6210\u5458\u53ef\u4ee5\u5b9a\u4e49\u6210\u5982\u4e0b\u5f62\u5f0f\uff1a", "\nint a:6;", "\nint b:4;", "\nint :0;", "\nint c:4;", "\nint d;", "\n\u6ce8\uff1aa\u4f7f\u75280~5\u76846\u4f4d\uff0cb\u4f7f\u75286~9\u76844\u4f4d\u3002c\u4ece\u4e0b\u4e00\u4e2a\u5b58\u50a8\u5355\u5143\u5f00\u59cb\u5b58\u653e\uff0c\u5373\u5b58\u653e\u572832~35\u4f4d\uff0c10~31\u4f4d\u7a7a\u95f2\u3002", "\nstruct bit_data", "\n{", "\nint a:6;", "\nint b:4;", "\nint :8;", "\nint c:4;", "\nint d;", "\n};", "\n\u6ce8\uff1a0~5\u4f4d\u5b58\u653ea\uff0c6~9\u4f4d\u5b58\u653eb\uff0c10~17\u4f4d\u76848\u4f4d\u5f3a\u5236\u7a7a\u95f2\uff0c18~21\u4f4d\u5b58\u653ec,22~31\u4f4d\u768410\u4f4d\u4e5f\u7a7a\u95f2\u300232~63\u768432\u4f4d\u5b58\u653ed\u3002", "\n29\u3001", "\n\u5feb\u901f\u7edf\u8ba1\u7ed9\u5b9a\u6574\u6570\u4e8c\u8fdb\u5236\u5f62\u5f0f\u4e2d1\u7684\u4e2a\u6570.", "\nint func( int x\uff09", "\n{", "\nint count = 0;", "\nwhile (x)", "\n{", "\ncount ++;", "\nx = x & (x-1);", "\n}", "\nreturn count;", "\n}", "\n\u5982\u8f93\u51659999\uff0c\u8be5\u51fd\u6570\u8fd4\u56de8\u3002", "\n\u6ce8\uff1a9999 = 9 x1024 +512 +256 +15"], "title": "\u3010\u597d\u4e1c\u897f\u6709\u9700\u8981\u7684\u6536\u85cf\u4e0b\u3011\u300alinuxC\u7f16\u7a0b\u5b9e\u6218\u300b\u9762\u8bd5\u9898\u6458\u9009"},
{"contents": ["\n1\uff09\u7a0b\u5e8f\u7ed3\u6784\u662f\u4e09\u79cd: \u987a\u5e8f\u7ed3\u6784 , \u5faa\u73af\u7ed3\u6784(\u4e09\u4e2a\u5faa\u73af\u7ed3\u6784), \u9009\u62e9\u7ed3\u6784(if \u548c switch)", "\n2\uff09\u8bfb\u7a0b\u5e8f\u90fd\u8981\u4ecemain()\u5165\u53e3, \u7136\u540e\u4ece\u6700\u4e0a\u9762\u987a\u5e8f\u5f80\u4e0b\u8bfb(\u78b0\u5230\u5faa\u73af\u505a\u5faa\u73af,\u78b0\u5230\u9009\u62e9\u505a\u9009\u62e9)\u3002", "\n3\uff09\u8ba1\u7b97\u673a\u7684\u6570\u636e\u5728\u7535\u8111\u4e2d\u4fdd\u5b58\u662f\u4ee5 \u4e8c\u8fdb\u5236\u7684\u5f62\u5f0f. \u6570\u636e\u5b58\u653e\u7684\u4f4d\u7f6e\u5c31\u662f \u4ed6\u7684\u5730\u5740.", "\n4\uff09bit\u662f\u4f4d \u662f\u6307\u4e3a0 \u6216\u80051\u3002 byte \u662f\u6307\u5b57\u8282, \u4e00\u4e2a\u5b57\u8282 = \u516b\u4e2a\u4f4d.", "\n5\uff09\u4e00\u5b9a\u8981\u8bb0\u4f4f \u4e8c\u8fdb\u5236 \u5982\u4f55\u5212\u6210 \u5341\u8fdb\u5236\u3002", "\n", "4\uff09\u7b97\u6cd5\u662f\u4e00\u5b9a\u8981\u6709\u8f93\u51fa\u7684\uff0c\u4ed6\u53ef\u4ee5\u6ca1\u6709\u8f93\u5165\u3002", "\n5\uff09break\u53ef\u7528\u4e8e\u5faa\u73af\u7ed3\u6784\u548cswitch\u8bed\u53e5\u3002", "\n6\uff09\u9017\u53f7\u8fd0\u7b97\u7b26\u7684\u7ea7\u522b\u6700\u4f4e\u3002", "\n", "\n1\uff09\u5408\u6cd5\u7684\u7528\u6237\u6807\u8bc6\u7b26\u8003\u67e5\uff1a", "\n\u5408\u6cd5\u7684\u8981\u6c42\u662f\u7531\u5b57\u6bcd\uff0c\u6570\u5b57\uff0c\u4e0b\u5212\u7ebf\u7ec4\u6210\u3002\u6709\u5176\u5b83\u5143\u7d20\u5c31\u9519\u4e86\u3002", "\n\u5e76\u4e14\u7b2c\u4e00\u4e2a\u5fc5\u987b\u4e3a\u5b57\u6bcd\u6216\u8005\u662f\u4e0b\u5212\u7ebf\u3002\u7b2c\u4e00\u4e2a\u4e3a\u6570\u5b57\u5c31\u9519\u4e86\u3002", "\n\u5173\u952e\u5b57\u4e0d\u53ef\u4ee5\u4f5c\u4e3a\u7528\u6237\u6807\u8bc6\u7b26\u53f7\u3002main define scanf printf \u90fd\u4e0d\u662f\u5173\u952e\u5b57\u3002\u8ff7\u60d1\u4f60\u7684\u5730\u65b9If\u662f\u53ef\u4ee5\u505a\u4e3a\u7528\u6237\u6807\u8bc6\u7b26\u3002\u56e0\u4e3aIf\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u5927\u5199\u4e86\uff0c\u6240\u4ee5\u4e0d\u662f\u5173\u952e\u5b57\u3002", "\n2\uff09\u5b9e\u578b\u6570\u636e\u7684\u5408\u6cd5\u5f62\u5f0f\uff1a", "\n2.333e-1 \u5c31\u662f\u5408\u6cd5\u7684\uff0c\u4e14\u6570\u636e\u662f2.333\u00d710-1\u3002", "\n\u8003\u8bd5\u53e3\u8bc0\uff1ae\u524de\u540e\u5fc5\u6709\u6570\uff0ce\u540e\u5fc5\u4e3a\u6574\u6570\u3002.", "\n3\uff09\u5b57\u7b26\u6570\u636e\u7684\u5408\u6cd5\u5f62\u5f0f:\uff1a", "\n\u20191\u2032 \u662f\u5b57\u7b26\u5360\u4e00\u4e2a\u5b57\u8282\uff0c\u201d1\u2033\u662f\u5b57\u7b26\u4e32\u5360\u4e24\u4e2a\u5b57\u8282(\u542b\u6709\u4e00\u4e2a\u7ed3\u675f\u7b26\u53f7)\u3002", "\n\u20190\u2032 \u7684ASCII\u6570\u503c\u8868\u793a\u4e3a48\uff0c\u2019a\u2019 \u7684ASCII\u6570\u503c\u662f97\uff0c\u2019A'\u7684ASCII\u6570\u503c\u662f65\u3002", "\n\u4e00\u822c\u8003\u8bd5\u8868\u793a\u5355\u4e2a\u5b57\u7b26\u9519\u8bef\u7684\u5f62\u5f0f\uff1a\u201965\u2032 \u201c1\u2033", "\n\u5b57\u7b26\u662f\u53ef\u4ee5\u8fdb\u884c\u7b97\u672f\u8fd0\u7b97\u7684\uff0c\u8bb0\u4f4f\uff1a\u3000\u20190\u2032-0=48", "\n\u5927\u5199\u5b57\u6bcd\u548c\u5c0f\u5199\u5b57\u6bcd\u8f6c\u6362\u7684\u65b9\u6cd5\uff1a\u3000\u2019A'+32=\u2019a\u2019 \u76f8\u4e92\u4e4b\u95f4\u76f8\u5dee32\u3002", "\n4\uff09 \u6574\u578b\u4e00\u822c\u662f\u4e24\u4e2a\u5b57\u8282, \u5b57\u7b26\u578b\u662f\u4e00\u4e2a\u5b57\u8282\uff0c\u53cc\u7cbe\u5ea6\u4e00\u822c\u662f4\u4e2a\u5b57\u8282\uff1a", "\n\u8003\u8bd5\u65f6\u5019\u4e00\u822c\u4f1a\u8bf4\uff0c\u572816\u4f4d\u7f16\u8bd1\u7cfb\u7edf\uff0c\u6216\u8005\u662f32\u4f4d\u7cfb\u7edf\u3002\u78b0\u5230\u8fd9\u79cd\u60c5\u51b5\uff0c\u4e0d\u8981\u53bb\u7ba1\uff0c\u4e00\u6837\u505a\u9898\u3002\u638c\u63e1\u6574\u578b\u4e00\u822c\u662f\u4e24\u4e2a\u5b57\u8282, \u5b57\u7b26\u578b\u662f\u4e00\u4e2a\u5b57\u8282\uff0c\u53cc\u7cbe\u5ea6\u4e00\u822c\u662f4\u4e2a\u5b57\u8282\u5c31\u53ef\u4ee5\u4e86\u3002", "\n5\uff09\u8f6c\u4e49\u5b57\u7b26\u7684\u8003\u67e5\uff1a", "\n\u5728\u7a0b\u5e8f\u4e2d int a = 0x6d\uff0c\u662f\u628a\u4e00\u4e2a\u5341\u516d\u8fdb\u5236\u7684\u6570\u7ed9\u53d8\u91cfa \u6ce8\u610f\u8fd9\u91cc\u76840x\u5fc5\u987b\u5b58\u5728\u3002", "\n\u5728\u7a0b\u5e8f\u4e2d int a = 06d, \u662f\u4e00\u4e2a\u516b\u8fdb\u5236\u7684\u5f62\u5f0f\u3002", "\n\u5728\u8f6c\u4e49\u5b57\u7b26\u4e2d\uff0c\u2019\\x6d\u2019 \u624d\u662f\u5408\u6cd5\u7684\uff0c0\u4e0d\u80fd\u5199\uff0c\u5e76\u4e14x\u662f\u5c0f\u5199\u3002", "\n\u2018\\141\u2019 \u662f\u5408\u6cd5\u7684\uff0c 0\u662f\u4e0d\u80fd\u5199\u7684\u3002", "\n\u2018\\108\u2019\u662f\u975e\u6cd5\u7684\uff0c\u56e0\u4e3a\u4e0d\u53ef\u4ee5\u51fa\u73b08\u3002", "\n6\uff09\u7b97\u672f\u8fd0\u7b97\u7b26\u53f7\u7684\u4f18\u5148\u7ea7\u522b\uff1a", "\n\u540c\u7ea7\u522b\u7684\u6709\u7684\u662f\u4ece\u5de6\u5230\u53f3\uff0c\u6709\u7684\u662f\u4ece\u53f3\u5230\u5de6\u3002", "\n7\uff09\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff1a", "\n\u4e00\u5b9a\u662f \uff08int\uff09a \u4e0d\u662f int\uff08a\uff09\uff0c\u6ce8\u610f\u7c7b\u578b\u4e0a\u4e00\u5b9a\u6709\u62ec\u53f7\u7684\u3002", "\n\u6ce8\u610f\uff08int\uff09\uff08a+b\uff09 \u548c\uff08int\uff09a+b \u7684\u533a\u522b\u3002 \u524d\u662f\u628aa+b\u8f6c\u578b\uff0c\u540e\u662f\u628aa\u8f6c\u578b\u518d\u52a0b\u3002", "\n8\uff09\u8868\u8fbe\u5f0f\u7684\u8003\u67e5\uff1a", "\n", "\n", "\uff1a\u8868\u8fbe\u5f0f\u6570\u503c\u662f\u6700\u5de6\u8fb9\u7684\u6570\u503c\uff0ca=b=5;\u8be5\u8868\u8fbe\u5f0f\u4e3a5\uff0c\u5e38\u91cf\u4e0d\u53ef\u4ee5\u8d4b\u503c\u3002", "\n\u81ea\u52a0\u3001\u81ea\u51cf\u8868\u8fbe\u5f0f\uff1a\u5047\u8bbea=5\uff0c++a\uff08\u662f\u4e3a6\uff09\uff0c a++\uff08\u4e3a5\uff09\uff1b", "\n\u8fd0\u884c\u7684\u673a\u7406\uff1a++a \u662f\u5148\u628a\u53d8\u91cf\u7684\u6570\u503c\u52a0\u4e0a1\uff0c\u7136\u540e\u628a\u5f97\u5230\u7684\u6570\u503c\u653e\u5230\u53d8\u91cfa\u4e2d\uff0c\u7136\u540e\u518d\u7528\u8fd9", "\n\u4e2a++a\u8868\u8fbe\u5f0f\u7684\u6570\u503c\u4e3a6\uff0c\u800ca++\u662f\u5148\u7528\u8be5\u8868\u8fbe\u5f0f\u7684\u6570\u503c\u4e3a5\uff0c\u7136\u540e\u518d\u628aa\u7684\u6570\u503c\u52a0\u4e0a1\u4e3a6\uff0c", "\n\u518d\u653e\u5230\u53d8\u91cfa\u4e2d\u3002 \u8fdb\u884c\u4e86++a\u548ca++\u540e \u5728\u4e0b\u9762\u7684\u7a0b\u5e8f\u4e2d\u518d\u7528\u5230a\u7684\u8bdd\u90fd\u662f\u53d8\u91cfa\u4e2d\u76846\u4e86\u3002", "\n\u8003\u8bd5\u53e3\u8bc0\uff1a++\u5728\u524d\u5148\u52a0\u540e\u7528\uff0c++\u5728\u540e\u5148\u7528\u540e\u52a0\u3002", "\n", "\uff1a\u4f18\u5148\u7ea7\u522b\u6700\u4f4e \uff1b \u8868\u8fbe\u5f0f\u7684\u6570\u503c\u9017\u53f7\u6700\u53f3\u8fb9\u7684\u90a3\u4e2a\u8868\u8fbe\u5f0f\u7684\u6570\u503c\u3002", "\n\uff082\uff0c3\uff0c4\uff09\u7684\u8868\u8fbe\u5f0f\u7684\u6570\u503c\u5c31\u662f4\u3002", "\n9\uff09\u4f4d\u8fd0\u7b97\u7684\u8003\u67e5\uff1a", "\n\u4f1a\u6709\u4e00\u5230\u4e8c\u9898\u8003\u8bd5\u9898\u76ee\u3002", "\n\u603b\u7684\u5904\u7406\u65b9\u6cd5\uff1a\u51e0\u4e4e\u6240\u6709\u7684\u4f4d\u8fd0\u7b97\u7684\u9898\u76ee\u90fd\u8981\u6309\u8fd9\u4e2a\u6d41\u7a0b\u6765\u5904\u7406\uff08\u5148\u628a\u5341\u8fdb\u5236\u53d8\u6210\u4e8c\u8fdb\u5236\u518d\u53d8\u6210\u5341\u8fdb\u5236\uff09\u3002", "\n\u4f8b1\uff1a\u3000char a = 6, b;", "\nb = a<<2; \u8fd9\u79cd\u9898\u76ee\u7684\u8ba1\u7b97\u662f\u5148\u8981\u628aa\u7684\u5341\u8fdb\u52366\u5316\u6210\u4e8c\u8fdb\u5236\uff0c\u518d\u505a\u4f4d\u8fd0\u7b97\u3002", "\n\u4f8b2\uff1a\u3000\u4e00\u5b9a\u8981\u8bb0\u4f4f\uff0c\u5f02\u6216\u7684\u4f4d\u8fd0\u7b97\u7b26\u53f7\u30020 \u5f02\u6216 1\u5f97\u52301\u3002", "\n0 \u5f02\u6216 0\u5f97\u52300\u3002", "\n1 \u5f02\u6216 1\u5f97\u52300\u3002", "\n\u8003\u8bd5\u8bb0\u5fc6\u65b9\u6cd5\uff1a\u76f8\u540c\u4e3a0\uff0c\u4e0d\u540c\u4e3a1", "\n\u4f8b3\uff1a\u3000\u5728\u6ca1\u6709\u820d\u53bb\u6570\u636e\u7684\u65f6\u5019\uff0c<<\u5de6\u79fb\u4e00\u4f4d\u8868\u793a\u4e58\u4ee52\uff1b>>\u53f3\u79fb\u4e00\u4f4d\u8868\u793a\u9664\u4ee52\u3002", "10\uff09018\u7684\u6570\u503c\u662f\u975e\u6cd5\u7684\uff0c\u516b\u8fdb\u5236\u662f\u6ca1\u67098\u7684\uff0c\u90228\u8fdb1\u3002", "\n11\uff09%\u7b26\u53f7\u4e24\u8fb9\u8981\u6c42\u662f\u6574\u6570\u3002\u4e0d\u662f\u6574\u6570\u5c31\u9519\u4e86\u3002", "\n12)\u3000\u4e09\u79cd\u53d6\u6574\u4e22\u5c0f\u6570\u7684\u60c5\u51b5\uff1a", "\n\uff11\u3001int a =1.6\uff1b", "\n\uff12\u3001(int)a\uff1b", "\n\uff13\u30011/2\uff1b 3/2\uff1b", "\n13)\u5b57\u7b26\u578b\u548c\u6574\u6570\u662f\u8fd1\u4eb2\uff1a", "\n", "char a = 65 ;", "\nprintf(\u201c%c\u201d, a); \u5f97\u5230\u7684\u8f93\u51fa\u7ed3\u679c\uff1aa", "\nprintf(\u201c%d\u201d, a);\u3000\u5f97\u5230\u7684\u8f93\u51fa\u7ed3\u679c\uff1a65", "\n1\uff09printf\u51fd\u6570\u7684\u683c\u5f0f\u8003\u67e5\uff1a", "\n%d\u5bf9\u5e94\u6574\u578b\uff1b%c\u5bf9\u5e94\u5b57\u7b26\uff1b%f\u5bf9\u5e94\u5355\u7cbe\u5ea6\u7b49\u7b49\u3002\u5bbd\u5ea6\u7684\uff0c\u5de6\u5bf9\u9f50\u7b49\u4fee\u9970\u3002", "\n%ld\u5bf9\u5e94 long int\uff1b%lf \u5bf9\u5e94double\u3002", "\n2\uff09scanf\u51fd\u6570\u7684\u683c\u5f0f\u8003\u5bdf\uff1a", "\n\u6ce8\u610f\u8be5\u51fd\u6570\u7684\u7b2c\u4e8c\u4e2a\u90e8\u5206\u662f&a \u8fd9\u6837\u7684\u5730\u5740\uff0c\u4e0d\u662fa\uff1b", "\nscanf(\u201c%d%d%*d%d\u201d,&a,&b,&c); \u8df3\u8fc7\u8f93\u5165\u7684\u7b2c\u4e09\u4e2a\u6570\u636e\u3002", "\n3\uff09putchar ,getchar \u51fd\u6570\u7684\u8003\u67e5\uff1a", "\nchar a = getchar() \u662f\u6ca1\u6709\u53c2\u6570\u7684\uff0c\u4ece\u952e\u76d8\u5f97\u5230\u4f60\u8f93\u5165\u7684\u4e00\u4e2a\u5b57\u7b26\u7ed9\u53d8\u91cfa\u3002", "\nputchar(\u2018y\u2019)\u628a\u5b57\u7b26y\u8f93\u51fa\u5230\u5c4f\u5e55\u4e2d\u3002", "\n4\uff09\u5982\u4f55\u5b9e\u73b0\u4e24\u4e2a\u53d8\u91cfx \uff0cy\u4e2d\u6570\u503c\u7684\u4e92\u6362\uff08\u8981\u6c42\u80cc\u4e0b\u6765\uff09", "\n\u4e0d\u53ef\u4ee5\u628a x=y ,y=x; \u8981\u7528\u4e2d\u95f4\u53d8\u91cf t=x\uff1bx=y\uff1by=t\u3002", "\n5\uff09\u5982\u4f55\u5b9e\u73b0\u4fdd\u7559\u4e09\u4f4d\u5c0f\u6570\uff0c\u7b2c\u56db\u4f4d\u56db\u820d\u4e94\u5165\u7684\u7a0b\u5e8f\uff0c\uff08\u8981\u6c42\u80cc\u4e0b\u6765\uff09", "\n\u8fd9\u4e2a\u6709\u63a8\u5e7f\u7684\u610f\u4e49\uff0c\u6ce8\u610f x = \uff08int\uff09x \u8fd9\u6837\u662f\u628a\u5c0f\u6570\u90e8\u5206\u53bb\u6389\u3002", "\n", "\n1\uff09\u5173\u7cfb\u8868\u8fbe\u5f0f\uff1a", "\n\u8868\u8fbe\u5f0f\u7684\u6570\u503c\u53ea\u80fd\u4e3a1\uff08\u8868\u793a\u4e3a\u771f\uff09\uff0c\u62160\uff08\u8868\u793a\u5047\uff09", "\n\u5f53\u5173\u7cfb\u7684\u8868\u8fbe\u662f\u4e3a\u771f\u7684\u65f6\u5019\u5f97\u52301\u3002\u5982 9>8\u8fd9\u4e2a\u662f\u771f\u7684\uff0c\u6240\u4ee5\u8868\u8fbe\u5f0f\u7684\u6570\u503c\u5c31\u662f1\uff1b", "\n2\uff09\u903b\u8f91\u8868\u8fbe\u5f0f\uff1a", "\n\u53ea\u80fd\u4e3a1\uff08\u8868\u793a\u4e3a\u771f\uff09\uff0c\u62160\uff08\u8868\u793a\u5047\uff09", "3\uff09\uff49f \u8bed\u53e5", "\nelse \u662f\u4e0e\u6700\u63a5\u8fd1\u7684if\u4e14\u6ca1\u6709else\u7684\u76f8\u7ec4\u5408\u7684\u3002", "\n4\uff09\u6761\u4ef6\u8868\u8fbe\u5f0f\uff1a", "\n\u8868\u8fbe\u5f0f1 \uff1f\u8868\u8fbe\u5f0f2 \uff1a\u8868\u8fbe\u5f0f3", "\n\u6ce8\u610f\u662f\u5f53", "\u65f6\u5019 \u662f\u8868\u8fbe\u5f0f2\u7684\u6570\u503c\uff0c\u5f53", "\u65f6\u5c31\u662f\u8868\u8fbe\u5f0f3\u7684\u6570\u503c\u3002", "\n\u8003\u8bd5\u53e3\u8bc0\uff1a\u771f\u524d\u5047\u540e\u3002", "\n5\uff09switch\u8bed\u53e5\uff1a", "\na) \u4e00\u5b9a\u8981\u6ce8\u610f \u6709break \u548c\u6ca1\u6709break\u7684\u5dee\u522b\uff0c\u4e66\u4e0a\uff0834\u9875\uff09\u7684\u4e24\u4e2a\u4f8b\u5b50\uff0c\u6ca1\u6709break\u65f6\u5019\uff0c\u53ea\u8981\u6709\u4e00\u4e2acase\u5339\u914d\u4e86\uff0c\u5269\u4e0b\u7684\u90fd\u8981\u6267\u884c\uff0c\u6709break\u5219\u662f\u76f4\u63a5\u8df3\u51fa\u4e86swiche\u8bed\u53e5\u3002", "\nb) switch\u53ea\u53ef\u4ee5\u548cbreak\u4e00\u8d77\u7528\uff0c\u4e0d\u53ef\u4ee5\u548ccontinue\u7528\u3002", "\nc) switch(x) x\uff1a\u662f\u6574\u578b\u5e38\u91cf\uff0c\u5b57\u7b26\u578b\u5e38\u91cf\uff0c\u679a\u4e3e\u578b\u6570\u636e\u3002", "\n{case 1: \u2026. \u4e0d\u53ef\u4ee5\u662f\u53d8\u91cf\u3002", "\ncase 2: \u2026.", "\n}", "\n1\uff09\u4e09\u79cd\u5faa\u73af\u7ed3\u6784\uff1a", "\na\uff09for\uff08\uff09 \uff1b while()\uff1b do- while()\u4e09\u79cd\u3002", "\nb\uff09for\u5faa\u73af\u5f53\u4e2d\u5fc5\u987b\u662f\u4e24\u4e2a\u5206\u53f7\uff0c\u5343\u4e07\u4e0d\u8981\u5fd8\u8bb0\u3002", "\nc\uff09\u5199\u7a0b\u5e8f\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u6ce8\u610f\uff0c\u5faa\u73af\u4e00\u5b9a\u8981\u6709\u7ed3\u675f\u7684\u6761\u4ef6\uff0c\u5426\u5219\u6210\u4e86\u6b7b\u5faa\u73af\u3002", "\nd) do-while()\u5faa\u73af\u7684\u6700\u540e\u4e00\u4e2awhile();\u7684\u5206\u53f7\u4e00\u5b9a\u4e0d\u80fd\u591f\u4e22\u3002\uff08\u5f53\u5fc3\u4e0a\u673a\u6539\u9519\uff09\uff0cdo\uff0dwhile\u5faa\u73af\u662f\u81f3\u5c11\u6267\u884c\u4e00\u6b21\u5faa\u73af\u3002", "\n2) break \u548c continue\u7684\u5dee\u522b", "\n\u8bb0\u5fc6\u65b9\u6cd5\uff1a", "\nbreak\uff1a\u662f\u6253\u7834\u7684\u610f\u601d\uff0c\uff08\u7834\u4e86\u6574\u4e2a\u5faa\u73af\uff09\u6240\u4ee5\u770b\u89c1break\u5c31\u9000\u51fa\u6574\u4e2a\u4e00\u5c42\u5faa\u73af\u3002", "\ncontinue\uff1a \u662f\u7ee7\u7eed\u7684\u610f\u601d\uff0c\uff08\u7ee7\u7eed\u5faa\u73af\u8fd0\u7b97\uff09\uff0c\u4f46\u662f\u8981\u7ed3\u675f\u672c\u6b21\u5faa\u73af\uff0c\u5c31\u662f\u5faa\u73af\u4f53\u5185\u5269\u4e0b\u7684\u8bed\u53e5\u4e0d\u518d\u6267\u884c\uff0c\u8df3\u5230\u5faa\u73af\u5f00\u59cb\uff0c\u7136\u540e\u5224\u65ad\u5faa\u73af\u6761\u4ef6\uff0c\u8fdb\u884c\u65b0\u4e00\u8f6e\u7684\u5faa\u73af\u3002", "\n3\uff09\u5d4c\u5957\u5faa\u73af", "\n\u5c31\u662f\u6709\u5faa\u73af\u91cc\u9762\u8fd8\u6709\u5faa\u73af\uff0c\u8fd9\u79cd\u6bd4\u8f83\u590d\u6742\uff0c\u8981\u4e00\u5c42\u4e00\u5c42\u4e00\u6b65\u4e00\u6b65\u8010\u5fc3\u7684\u8ba1\u7b97\uff0c\u4e00\u822c\u8bb0\u4f4f\u4e24\u5c42\u662f\u5904\u7406\u4e8c\u7ef4\u6570\u7ec4\u7684\u3002", "\n4) while\uff08\uff08c=getchar()\uff09!=\u2019\\n\u2019\uff09 \u548c while\uff08c=getchar() !=\u2019\\n\u2019\uff09\u7684\u5dee\u522b", "\n\u5148\u770ba = 3 != 2 \u548c \uff08a=3\uff09\uff01=2 \u7684\u533a\u522b\uff1a", "\n", "\u7b2c\u4e00\u4e2aa\u7684\u6570\u503c\u662f\u5f97\u5230\u76841\uff1b\u7b2c\u4e8c\u4e2aa\u7684\u6570\u503c\u662f3\u3002", "\n", "\u00a0\u62ec\u53f7\u5728\u8fd9\u91cc\u7684\u91cd\u8981\u6027\u3002", "\n\u51fd\u6570\uff1a\u662f\u5177\u6709\u4e00\u5b9a\u529f\u80fd\u7684\u4e00\u4e2a\u7a0b\u5e8f\u5757\uff1b\u662fC\u8bed\u8a00\u7684\u57fa\u672c\u7ec4\u6210\u5355\u4f4d\u3002", "\n1) \u51fd\u6570\u7684\u53c2\u6570\uff0c\u8fd4\u56de\u6570\u503c\uff08\u793a\u610f\u56fe\uff09\uff1a", "\n", "\n2\uff09\u4e00\u5b9a\u8981\u6ce8\u610f\u53c2\u6570\u4e4b\u95f4\u7684\u4f20\u9012", "\n", "\n\u4f20\u6570\u503c\u7684\u8bdd\uff0c\u5f62\u53c2\u7684\u53d8\u5316\u4e0d\u4f1a\u6539\u53d8\u5b9e\u53c2\u7684\u53d8\u5316\u3002", "\n\u4f20\u5730\u5740\u7684\u8bdd\uff0c\u5f62\u53c2\u7684\u53d8\u5316\u5c31\u4f1a\u6709\u53ef\u80fd\u6539\u53d8\u5b9e\u53c2\u7684\u53d8\u5316\u3002", "\n3\uff09\u51fd\u6570\u58f0\u660e\u7684\u8003\u67e5\uff1a", "\n\u4e00\u5b9a\u8981\u6709\uff1a\u51fd\u6570\u540d\uff0c\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b\uff0c\u51fd\u6570\u7684\u53c2\u6570\u7c7b\u578b\u3002", "\n\u4e0d\u4e00\u5b9a\u8981\u6709\uff1a\u5f62\u53c2\u7684\u540d\u79f0\u3002", "\n4\uff09\u8981\u6c42\u638c\u63e1\u7684\u5e93\u51fd\u6570\uff1a", "\nsqrt( ) fabs( ) pow( ) sin( ) \u5176\u4e2dpow(a\uff0cb)\u662f\u91cd\u70b9\u300223\u662f\u7531pow(2\uff0c3)\u8868\u793a\u7684\u3002", "\n", "\nint *p \u4e2d *p\u548cp\u7684\u5dee\u522b\uff1a", "\n*p\u53ef\u4ee5\u5f53\u505a\u53d8\u91cf\u6765\u7528\uff1b*\u7684\u4f5c\u7528\u662f\u53d6\u540e\u9762\u5730\u5740p\u91cc\u9762\u7684\u6570\u503c", "\np\u662f\u5f53\u4f5c\u5730\u5740\u6765\u4f7f\u7528\u3002", "\n*p++ \u548c \uff08*p\uff09++\u7684\u4e4b\u95f4\u7684\u5dee\u522b\uff1a\u6539\u9519\u9898\u76ee\u4e2d\u5f88\u91cd\u8981", "\n*p++\u662f \u5730\u5740\u4f1a\u53d8\u5316\u3002", "\n\uff08*p\uff09++ \u662f\u6570\u503c\u4f1a\u8981\u53d8\u5316\u3002", "\n\u4e09\u540d\u4e3b\u4e49\uff1a\uff08\u8003\u8bd5\u7684\u91cd\u70b9\uff09", "\n\u6570\u7ec4\u540d\uff1a\u8868\u793a\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u5730\u5740\u3002\u6570\u7ec4\u540d\u4e0d\u53ef\u4ee5\u81ea\u52a0\uff0c\u4ed6\u662f\u5730\u5740\u5e38\u91cf\u540d\u3002\uff08\u8003\u4e86\u5f88\u591a\u6b21\uff09", "\n\u51fd\u6570\u540d\uff1a\u8868\u793a\u8be5\u51fd\u6570\u7684\u5165\u53e3\u5730\u5740\u3002", "\n\u5b57\u7b26\u4e32\u5e38\u91cf\u540d\uff1a\u8868\u793a\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684\u5730\u5740\u3002", "\n\u8003\u8bd5\u91cd\u8981\u7684\u8bdd\u8bed\uff1a", "\n\u6307\u9488\u53d8\u91cf\u662f\u5b58\u653e", "\u7684\u3002\u5e76\u4e14\u6307\u5411\u54ea\u4e2a\u5c31\u7b49\u4ef7\u54ea\u4e2a\uff0c\u6240\u6709\u51fa\u73b0*p\u7684\u5730\u65b9\u90fd\u53ef\u4ee5\u7528\u5b83\u7b49\u4ef7\u7684\u4ee3\u66ff\u3002", "\n\u4f8b\u5982\uff1aint a=2\uff0c*p=&a\uff1b", "\n*p=*p+2;", "\n(\u7531\u4e8e*p\u6307\u5411\u53d8\u91cf\uff41,\u6240\u4ee5\u6307\u5411\u54ea\u4e2a\u5c31\u7b49\u4ef7\u54ea\u4e2a\uff0c\u8fd9\u91cc*p\u7b49\u4ef7\u4e8e\uff41\uff0c\u53ef\u4ee5\u76f8\u5f53\u4e8e\u662fa=a+2)", "\n\u6307\u9488\u53d8\u91cf\u4e24\u79cd\u521d\u59cb\u5316", "\n\u65b9\u6cd5\u4e00\uff1aint a=2\uff0c*p=&a\uff1b(\u5b9a\u4e49\u7684\u540c\u65f6\u521d\u59cb\u5316)", "\n\u65b9\u6cd5\u4e8c\uff1aint a=2\uff0c*p\uff1b\u3000\u3000(\u5b9a\u4e49\u4e4b\u540e\u521d\u59cb\u5316)", "\np=&a\uff1b", "\n", "\n1\uff09\u4e00\u7ef4\u6570\u7ec4\u7684\u91cd\u8981\u6982\u5ff5\uff1a", "\n\u5bf9a[10]\u8fd9\u4e2a\u6570\u7ec4\u7684\u8ba8\u8bba\u3002", "\n\uff11\u3001a\u8868\u793a\u6570\u7ec4\u540d\uff0c\u662f\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u5730\u5740\uff0c\u4e5f\u5c31\u662f\u5143\u7d20a[0]\u7684\u5730\u5740\u3002", "\n\uff12\u3001a\u662f\u5730\u5740\u5e38\u91cf\uff0c\u6240\u4ee5\u53ea\u8981\u51fa\u73b0a++\uff0c\u6216\u8005\u662fa=a+2\u8d4b\u503c\u7684\u90fd\u662f\u9519\u8bef\u7684\u3002", "\n\uff13\u3001a\u662f\u4e00\u7ef4\u6570\u7ec4\u540d\uff0c\u6240\u4ee5\u5b83\u662f\u5217\u6307\u9488\uff0c\u4e5f\u5c31\u662f\u8bf4a+1\u662f\u8df3\u4e00\u5217\u3002", "\n\u5bf9a[3][3]\u7684\u8ba8\u8bba\u3002", "\n\uff11\u3001a\u8868\u793a\u6570\u7ec4\u540d\uff0c\u662f\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u5730\u5740\uff0c\u4e5f\u5c31\u662f\u5143\u7d20a[0] [0]\u7684\u5730\u5740\u3002", "\n\uff12\u3001a\u662f\u5730\u5740\u5e38\u91cf\uff0c\u6240\u4ee5\u53ea\u8981\u51fa\u73b0a++\uff0c\u6216\u8005\u662fa=a+2\u8d4b\u503c\u7684\u90fd\u662f\u9519\u8bef\u7684\u3002", "\n\uff13\u3001a\u662f\u4e8c\u7ef4\u6570\u7ec4\u540d\uff0c\u6240\u4ee5\u5b83\u662f\u884c\u6307\u9488\uff0c\u4e5f\u5c31\u662f\u8bf4a+1\u662f\u8df3\u4e00\u884c\u3002", "\n\uff14\u3001a[0]\u3001a[1]\u3001a[2]\u4e5f\u90fd\u662f\u5730\u5740\u5e38\u91cf\uff0c\u4e0d\u53ef\u4ee5\u5bf9\u5b83\u8fdb\u884c\u8d4b\u503c\u64cd\u4f5c\uff0c\u540c\u65f6\u5b83\u4eec\u90fd\u662f\u5217\u6307\u9488\uff0ca[0]+1\uff0ca[1]+1\uff0ca[2]+1\u90fd\u662f\u8df3\u4e00\u5217\u3002", "\n\uff15\u3001\u6ce8\u610fa\u548ca[0] \u3001a[1]\u3001a[2]\u662f\u4e0d\u540c\u7684\uff0c\u5b83\u4eec\u7684\u57fa\u7c7b\u578b\u662f\u4e0d\u540c\u7684\u3002\u524d\u8005\u662f\u4e00\u884c\u5143\u7d20\uff0c\u540e\u4e09\u8005\u662f\u4e00\u5217\u5143\u7d20\u3002", "\n2) \u4e8c\u7ef4\u6570\u7ec4\u505a\u9898\u76ee\u7684\u6280\u5de7\uff1a", "\n\u5982\u679c\u6709a[3][3]={1,2,3,4,5,6,7,8,9}\u8fd9\u6837\u7684\u9898\u76ee\u3002", "\n\u6b65\u9aa4\u4e00\uff1a\u628a\u4ed6\u4eec\u5199\u6210\uff1a\u3000\u3000\u3000\u3000\u3000\u3000\u7b2c\u4e00\u5217\u3000\u7b2c\u4e8c\u5217\u3000\u7b2c\u4e09\u5217", "\na[0]?\u3000 1 \u3000\u3000 2 \u3000\u3000 3 \uff0d>\u7b2c\u4e00\u884c", "\na[1]? 4 \u3000\u30005 \u3000\u3000 6\u3000 \u2014>\u7b2c\u4e8c\u884c", "\na[2]? 7 \u3000\u30008 \u3000\u3000 9\u3000 \uff0d>\u7b2c\u4e09\u884c", "\n\u6b65\u9aa4\u4e8c\uff1a\u8fd9\u6837\u4f5c\u9898\u76ee\u95f4\u5f88\u7b80\u5355\uff1a", "\n*(a[0]+1)\u6211\u4eec\u5c31\u77e5\u9053\u662f\u7b2c\u4e00\u884c\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f80\u540e\u9762\u8df3\u4e00\u5217\uff0c\u90a3\u4e48\u8fd9\u91cc\u5c31\u662fa[0][1]\u5143\u7d20\uff0c\u6240\u4ee5\u662f\uff11\u3002", "\n*(a[1]+2)\u6211\u4eec\u5c31\u77e5\u9053\u662f\u7b2c\u4e8c\u884c\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f80\u540e\u9762\u8df3\u4e8c\u5217\u3002\u90a3\u4e48\u8fd9\u91cc\u5c31\u662fa[1][2]\u5143\u7d20\uff0c\u6240\u4ee5\u662f6\u3002", "\n\u4e00\u5b9a\u8bb0\u4f4f\uff1a\u53ea\u8981\u662f\u4e8c\u7ef4\u6570\u7ec4\u7684\u9898\u76ee\uff0c\u4e00\u5b9a\u662f\u5199\u6210\u5982\u4e0a\u7684\u683c\u5f0f\uff0c\u518d\u53bb\u505a\u9898\u76ee\uff0c\u8fd9\u6837\u4f1a\u6bd4\u8f83\u7b80\u5355\u3002", "\n3) \u6570\u7ec4\u7684\u521d\u59cb\u5316\uff0c\u4e00\u7ef4\u548c\u4e8c\u7ef4\u7684\uff0c\u4e00\u7ef4\u53ef\u4ee5\u4e0d\u5199\uff0c\u4e8c\u7ef4\u7b2c\u4e8c\u4e2a\u4e00\u5b9a\u8981\u5199", "\nint a[]={1\uff0c2} \u5408\u6cd5\u3002 int a[][4]={2\uff0c3\uff0c4}\u5408\u6cd5\u3002 \u4f46int a[4][]={2\uff0c3\uff0c4}\u975e\u6cd5\u3002", "\n4) \u4e8c\u7ef4\u6570\u7ec4\u4e2d\u7684\u884c\u6307\u9488", "\nint a[1][2]\uff1b", "\n\u5176\u4e2da\u73b0\u5728\u5c31\u662f\u4e00\u4e2a\u884c\u6307\u9488\uff0ca+1\u8df3\u4e00\u884c\u6570\u7ec4\u5143\u7d20\u3002 \u642d\u914d\uff08*p\uff09[2]\u6307\u9488", "\na[0]\uff0ca[1]\u73b0\u5728\u5c31\u662f\u4e00\u4e2a\u5217\u6307\u9488\u3002a[0]+1 \u8df3\u4e00\u4e2a\u6570\u7ec4\u5143\u7d20\u3002\u642d\u914d*p[2]\u6307\u9488\u6570\u7ec4\u4f7f\u7528", "\n5) \u8fd8\u6709\u8bb0\u4f4f\u8131\u8863\u670d\u6cd5\u5219\uff1a", "\na[2] \u53d8\u6210 *\uff08a+2\uff09 a[2][3]\u53d8\u6210 *\uff08a+2\uff09[3]\u518d\u53ef\u4ee5\u53d8\u6210 *\uff08*\uff08a+2\uff09+3\uff09", "\n\u8fd9\u4e2a\u601d\u60f3\u5f88\u91cd\u8981\uff01", "\n\u6587\u4ef6\u7684\u590d\u4e60\u65b9\u6cd5\uff1a", "\n\u628a\u4e0a\u8bfe\u65f6\u5019\u8bb2\u7684\u6587\u4ef6\u8fd9\u4e00\u7ae0\u7684\u9898\u76ee\u8981\u505a\u4e00\u904d\uff0c\u4e00\u5b9a\u8981\u505a\uff0c\u57fa\u672c\u4e0a\u8003\u8bd5\u7684\u90fd\u4f1a\u5728\u7ec3\u4e60\u5f53\u4e2d\u3002", "\n1\uff09\u5b57\u7b26\u4e32\u7684 strlen() \u548c strcat\uff08\uff09 \u548cstrcmp\uff08\uff09 \u548cstrcpy\uff08\uff09\u7684\u4f7f\u7528\u65b9\u6cd5\u4e00\u5b9a\u8981\u8bb0\u4f4f\u3002\u4ed6\u4eec\u7684\u53c2\u6570\u90fd\u662f\u5730\u5740\u3002\u5176\u4e2dstrcat\uff08\uff09 \u548cstrcmp\uff08\uff09\u6709\u4e24\u4e2a\u53c2\u6570\u3002", "2\uff09strlen \u548c sizeof\u7684\u533a\u522b\u4e5f\u662f\u8003\u8bd5\u7684\u91cd\u70b9\uff1b", "3\uff09define f\uff08x\uff09\uff08x*x\uff09 \u548c define f\uff08x\uff09 x*x \u4e4b\u95f4\u7684\u5dee\u522b\u3002\u4e00\u5b9a\u8981\u597d\u597d\u7684\u6ce8\u610f\u8fd9\u5199\u5bb9\u6613\u9519\u7684\u5730\u65b9\uff0c\u66ff\u6362\u7684\u65f6\u5019\u6709\u62ec\u53f7\u548c\u6ca1\u6709\u62ec\u53f7\u662f\u5f88\u5927\u7684\u533a\u522b\u3002", "\n4\uff09int *p\uff1b", "\np = \uff08int *\uff09malloc\uff082\uff09\uff1b", "\np = \uff08int *\uff09malloc\uff08sizeof\uff08int\uff09\uff09\uff1b\u4ee5\u4e0a\u4e24\u4e2a\u7b49\u4ef7", "\n\u5f53\u5fc3\u586b\u7a7a\u9898\u76ee\uff0cmalloc\u7684\u8fd4\u56de\u7c7b\u578b\u662f void *", "5\uff09\u8fd8\u6709main\uff08int argc\uff0cchar **argv\uff09 {} \u8fd9\u79cd\u542b\u6709\u53c2\u6570\u7684\u9898\u76ee\uff0c\u662f\u5f88\u5446\u677f\u7684\u9898\u76ee\u3002\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u8868\u793a\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u7684\u6570\u76ee\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u6307\u5411\u5b58\u653e\u7684\u5b57\u7b26\u4e32\u3002", "6\uff09\u51fd\u6570\u7684\u9012\u5f52\u8c03\u7528\u4e00\u5b9a\u8981\u8bb0\u5f97\u6709\u7ed3\u675f\u7684\u6761\u4ef6\uff0c\u5e76\u4e14\u8981\u4f1a\u7b97\u7b80\u5355\u7684\u9012\u5f52\u9898\u76ee\u3002\u8981\u4f1a\u4f5c\u9012\u5f52\u7684\u9898\u76ee", "7\uff09\u7ed3\u6784\u4f53\u548c\u5171\u7528\u4f53\u4ee5\u53ca\u94fe\u8868\u8981\u638c\u63e1\u6700\u7b80\u5355\u7684\u3002typedef\u8003\u7684\u5f88\u591a\uff0c\u800c\u4e14\u4e00\u5b9a\u8981\u77e5\u9053\u5982\u4f55\u5f15\u7528\u7ed3\u6784\u4f53\u4e2d\u7684\u5404\u4e2a\u53d8\u91cf\uff0c\u94fe\u8868\u4e2d\u5982\u4f55\u586b\u52a0\u548c\u5220\u9664\u8282\u70b9\uff0c\u4ee5\u53ca\u5982\u4f55\u6784\u6210\u4e00\u4e2a\u7b80\u5355\u7684\u94fe\u8868\uff0c\u4e00\u5b9a\u8bb0\u4f4f\u94fe\u8868\u4e2d\u7684\u8282\u70b9\u662f\u6709\u4e24\u4e2a\u57df\uff0c", "\n8\uff09\u51fd\u6570\u6307\u9488\u7684\u7528\u6cd5\uff08*f\uff09\uff08\uff09\u8bb0\u4f4f\u4e00\u4e2a\u4f8b\u5b50\uff1a", "\nint add(int x, int y)", "\n{\u2026.}", "\nmain()", "\n{ int \uff08*f\uff09\uff08\uff09;", "\n", "\n}", "\n\u8d4b\u503c\u4e4b\u540e\uff1a\u5408\u6cd5\u7684\u8c03\u7528\u5f62\u5f0f\u4e3a\uff11\u3001add(2\uff0c3)\uff1b", "\n\uff12\u3001f(2\uff0c3)\uff1b", "\n\uff13\u3001\uff08*f\uff09\uff082\uff0c3\uff09", "\n9\uff09\u4e24\u79cd\u91cd\u8981\u7684\u6570\u7ec4\u957f\u5ea6\uff1a", "\nchar a[]={\u2018a\u2019,\u2019b\u2019,\u2019c\u2019};\u3000\u3000\u6570\u7ec4\u957f\u5ea6\u4e3a\uff13\uff0c\u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u5b9a\u3002sizeof(a)\u4e3a\uff13\u3002", "\nchar a[5]={ \u2018a\u2019,\u2019b\u2019,\u2019c\u2019}\u3000\u3000\u6570\u7ec4\u957f\u5ea6\u4e3a\uff15\uff0c\u5b57\u7b26\u4e32\u957f\u5ea6\uff13\u3002sizeof(a)\u4e3a\uff15\u3002", "\n10\uff09scanf \u548c\u3000gets\u7684\u6570\u636e\uff1a", "\n\u5982\u679c\u8f93\u5165\u7684\u662f\u3000good good study\uff01", "\n\u90a3\u4e48scanf(\u201c%s\u201d,a); \u53ea\u4f1a\u63a5\u6536\u3000good.\u3000\u8003\u70b9\uff1a\u4e0d\u53ef\u4ee5\u63a5\u6536\u7a7a\u683c\u3002", "\ngets(a); \u4f1a\u63a5\u6536\u3000good good study!\u3000\u8003\u70b9\uff1a\u53ef\u4ee5\u63a5\u6536\u7a7a\u683c\u3002", "\n11\uff09\u5171\u7528\u4f53\u7684\u8003\u67e5\uff1a", "\nunion TT", "\n{ int a;", "\nchar ch[2];}", "\n\u8003\u70b9\u4e00\uff1a\u3000sizeof (struct TT) = 2;", "\n\u8003\u70b9\u4e8c\uff1a\u3000TT\u3000t1 ; t1=0\u00d71234;", "\n\u90a3\u4e48\u3000ch[0]=0x 34; ch[1]=0\u00d712", "12)\u201c\u6587\u4ef6\u5305\u542b\u201d\u7684\u8003\u67e5\u70b9\uff1a", "\u8fd9\u91cc\u4e00\u4e2aC\u8bed\u8a00\u7a0b\u5e8f\u662f\u6709\u4e24\u4e2a\u6587\u4ef6\u7ec4\u6210\uff0c\u5206\u522b\u662fno1.c\uff0c no2.c\u3002\u90a3\u4e48no1.c\u4e2d\u6700\u5f00\u59cb\u6709\u4e2a#include\u201dno2.c\u201d\u4ed6\u8868\u793a\u628a\u7b2c\u4e8c\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\u7ed9\u5305\u542b\u8fc7\u6765\uff0c\u90a3\u4e48no1.c\u4e2d\u8c03\u7528add()\u51fd\u6570\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u4e86\u628a\u6570\u503c\u4f20\u5230no2.c\u4e2d\u7684\u88ab\u8c03\u7528\u51fd\u6570add()\u4e86\u3002", "\n\u4e00\u4e2a\u6587\u4ef6\u5fc5\u987b\u8981\u6709main\u51fd\u6570\u3002\u3000\u8fd9\u53e5\u8bdd\u9519\u4e86\u3002\u3000\u4f8b\u5982\uff1ano2.c\u5c31\u6ca1\u6709\u3002", "\n\u5934\u6587\u4ef6\u4e00\u5b9a\u662f\u4ee5.h\u7ed3\u675f\u7684\u3002\u3000\u8fd9\u53e5\u8bdd\u9519\u4e86\u3002\u4f8b\u5982\uff1ano1.c\u4e2d\u5c31\u662f#include\u201dno2.c\u201d\u4ee5.c\u7ed3\u5c3e\u7684\u3002"], "title": "C\u8bed\u8a00\u6700\u91cd\u8981\u7684\u77e5\u8bc6\u70b9\u590d\u4e60\u8d44\u6599"},
{"contents": ["*1", "A", "\u4e00\u4e2aC\u7a0b\u5e8f\u7684\u6267\u884c\u662f\u4ece_____\u3002", "A)\u672c\u7a0b\u5e8f\u7684main\u51fd\u6570\u5f00\u59cb,\u5230main\u51fd\u6570\u7ed3\u675f", "B)\u672c\u7a0b\u5e8f\u6587\u4ef6\u7684\u7b2c\u4e00\u4e2a\u51fd\u6570\u5f00\u59cb,\u5230\u672c\u7a0b\u5e8f\u6587\u4ef6\u7684\u6700\u540e\u4e00\u4e2a\u51fd\u6570\u7ed3\u675f", "C)\u672c\u7a0b\u5e8f\u7684main\u51fd\u6570\u5f00\u59cb,\u5230\u672c\u7a0b\u5e8f\u6587\u4ef6\u7684\u6700\u540e\u4e00\u4e2a\u51fd\u6570\u7ed3\u675f", "D)\u672c\u7a0b\u5e8f\u6587\u4ef6\u7684\u7b2c\u4e00\u4e2a\u51fd\u6570\u5f00\u59cb,\u5230\u672c\u7a0b\u5e8fmain\u51fd\u6570\u7ed3\u675f", "*2", "C", "\u4ee5\u4e0b\u53d9\u8ff0\u6b63\u786e\u7684\u662f:", "A)\u5728C\u7a0b\u5e8f\u4e2d,main\u51fd\u6570\u5fc5\u987b\u4f4d\u4e8e\u7a0b\u5e8f\u7684\u6700\u524d\u9762", "B)C\u7a0b\u5e8f\u7684\u6bcf\u884c\u4e2d\u53ea\u80fd\u5199\u4e00\u6761\u8bed\u53e5", "C)C\u8bed\u8a00\u672c\u8eab\u6ca1\u6709\u8f93\u5165\u8f93\u51fa\u8bed\u53e5", "D)\u5728\u5bf9\u4e00\u4e2aC\u7a0b\u5e8f\u8fdb\u884c\u7f16\u8bd1\u7684\u8fc7\u7a0b\u4e2d,\u53ef\u53d1\u73b0\u6ce8\u91ca\u4e2d\u7684\u62fc\u5199\u9519\u8bef", "*3", "D", "\u4ee5\u4e0b\u53d9\u8ff0\u4e0d\u6b63\u786e\u7684\u662f\u3002", "A)\u4e00\u4e2aC\u6e90\u7a0b\u5e8f\u53ef\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u51fd\u6570\u7ec4\u6210", "B)\u4e00\u4e2aC\u6e90\u7a0b\u5e8f\u5fc5\u987b\u5305\u542b\u4e00\u4e2amain\u51fd\u6570", "C)C\u7a0b\u5e8f\u7684\u57fa\u672c\u7ec4\u6210\u5355\u4f4d\u662f\u51fd\u6570", "D)\u5728C\u7a0b\u5e8f\u4e2d,\u6ce8\u91ca\u8bf4\u660e\u53ea\u80fd\u4f4d\u4e8e\u4e00\u6761\u8bed\u53e5\u7684\u540e\u9762", "*4", "C", "C\u8bed\u8a00\u89c4\u5b9a:\u5728\u4e00\u4e2a\u6e90\u7a0b\u5e8f\u4e2d,main\u51fd\u6570\u7684\u4f4d\u7f6e \u3002", "A)\u5fc5\u987b\u5728\u6700\u5f00\u59cb", "B)\u5fc5\u987b\u5728\u7cfb\u7edf\u8c03\u7528\u7684\u5e93\u51fd\u6570\u7684\u540e\u9762", "C)\u53ef\u4ee5\u4efb\u610f", "D)\u5fc5\u987b\u5728\u6700\u540e", "*5", "B", "\u4e00\u4e2aC\u8bed\u8a00\u7a0b\u5e8f\u662f\u7531", "A)\u4e00\u4e2a\u4e3b\u7a0b\u5e8f\u548c\u82e5\u5e72\u5b50\u7a0b\u5e8f\u7ec4\u6210\u00a0\u00a0\u00a0 B)\u51fd\u6570\u7ec4\u6210", "C)\u82e5\u5e72\u8fc7\u7a0b\u7ec4\u6210\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)\u82e5\u5e72\u5b50\u7a0b\u5e8f\u7ec4\u6210", "*6", "A", "\u5728C\u8bed\u8a00\u4e2d(\u4ee516\u4f4dPC\u673a\u4e3a\u4f8b),5\u79cd\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u5b58\u50a8\u7a7a\u95f4\u957f\u5ea6\u7684\u6392\u5217\u987a\u5e8f\u4e3a", "A)char<INT&NBSP;&NBSP;<1ONG&NBSP;&NBSP;INT<=FLOAT", "B)char=int<1ong\u00a0 int<=float", "C)char<\u00a0 int\u00a0 <1ong\u00a0 int=float=double", "D)char=int\u00a0 =1ong\u00a0 int<=float", "*7", "C", "\u82e5x,i,j\u548ck\u90fd\u662fint\u578b\u53d8\u91cf,\u5219\u6267\u884c\u4e0b\u9762\u8868\u8fbe\u5f0f\u540ex\u7684\u503c\u4e3a", "x=(i=4,j=16,k=32)", "A)4\u00a0\u00a0 B)16\u00a0 C)32\u00a0\u00a0\u00a0\u00a0 D)52", "*8", "B", "\u5047\u8bbe\u6240\u6709\u53d8\u91cf\u5747\u4e3a\u6574\u578b,\u5219\u8868\u8fbe\u5f0f(a=2,b=5,b++,a+b)\u7684\u503c\u662f:", "A)7\u00a0\u00a0\u00a0 B)8\u00a0\u00a0 C)6\u00a0\u00a0 D)2", "*9", "A", "\u4e0b\u5217\u56db\u7ec4\u9009\u9879\u4e2d,\u5747\u4e0d\u662fC\u8bed\u8a00\u5173\u952e\u5b57\u7684\u9009\u9879\u662f", "A)define\u00a0\u00a0\u00a0 B)getc\u00a0\u00a0\u00a0 C)include\u00a0\u00a0 D)while", "IF\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 char\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 scanf\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 go", "type\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 case\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 pow", "*10", "B", "\u4e0b\u9762\u56db\u4e2a\u9009\u9879\u4e2d,\u5747\u662fC\u8bed\u8a00\u5173\u952e\u5b57\u7684\u9009\u9879\u662f", "A)auto\u00a0\u00a0\u00a0\u00a0\u00a0 B)switch\u00a0\u00a0\u00a0 C)signed\u00a0\u00a0\u00a0 D)if", "enum\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 typedef\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 union\u00a0\u00a0\u00a0\u00a0\u00a0 struct", "include\u00a0\u00a0\u00a0\u00a0 continue\u00a0\u00a0\u00a0\u00a0\u00a0 scanf\u00a0\u00a0\u00a0\u00a0\u00a0 type", "*11", "C", "\u4e0b\u9762\u56db\u4e2a\u9009\u9879\u4e2d,\u5747\u662f\u4e0d\u5408\u6cd5\u7684\u7528\u6237\u6807\u8bc6\u7b26\u7684\u9009\u9879\u662f\u3002", "A)\u00a0 A\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)float\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)b-a\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)\u4e00123", "P_0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a01a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 goto\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 temp", "do\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u4e00A\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 INT", "*12", "C", "C\u8bed\u8a00\u4e2d\u7684\u6807\u8bc6\u7b26\u53ea\u80fd\u7531\u5b57\u6bcd\u3001\u6570\u5b57\u548c\u4e0b\u5212\u7ebf\u4e09\u79cd\u5b57\u7b26\u7ec4\u6210,\u4e14\u7b2c\u4e00\u4e2a\u5b57\u7b26", "A)\u5fc5\u987b\u4e3a\u5b57\u6bcd\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)\u5fc5\u987b\u4e3a\u4e0b\u5212\u7ebf", "C)\u5fc5\u987b\u4e3a\u5b57\u6bcd\u6216\u4e0b\u5212\u7ebf\u00a0\u00a0 D)\u53ef\u4ee5\u662f\u5b57\u6bcd,\u6570\u5b57\u548c\u4e0b\u5212\u7ebf\u4e2d\u4efb\u4e00\u79cd\u5b57\u7b26", "*13", "A", "\u4e0b\u9762\u56db\u4e2a\u9009\u9879\u4e2d,\u5747\u662f\u5408\u6cd5\u6574\u578b\u5e38\u91cf\u7684\u9009\u9879\u662f:", "A)160\u00a0\u00a0\u00a0\u00a0\u00a0 B)\u4e000xcdf\u00a0\u00a0\u00a0 C)\u4e0001\u00a0\u00a0\u00a0 D)\u4e000x48a", "\u4e000xffff\u00a0\u00a0\u00a0\u00a0\u00a001a\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 986, 012\u00a0\u00a0\u00a0\u00a0\u00a0 2e5", "011\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 0xe\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 0668\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 0x", "*14", "D", "\u4e0b\u9762\u56db\u4e2a\u9009\u9879\u4e2d,\u5747\u662f\u4e0d\u5408\u6cd5\u7684\u6574\u578b\u5e38\u91cf\u7684\u9009\u9879\u662f:", "A)\u4e00\u4e000f1\u00a0\u00a0\u00a0 B)\u4e000Xcdf\u00a0 C)\u4e00018\u00a0\u00a0\u00a0 D)\u4e000x48eg", "\u4e000xffff\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 017\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 999\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u4e00068", "0011\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 12,456\u00a0\u00a0\u00a0\u00a0\u00a0 5e2\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a003f", "*15", "B", "\u4e0b\u9762\u56db\u4e2a\u9009\u9879\u4e2d,\u5747\u662f\u4e0d\u5408\u6cd5\u7684\u6d6e\u70b9\u6570\u7684\u9009\u9879\u662f", "A)\u00a0 160.\u00a0\u00a0\u00a0 B)\u00a0123\u00a0\u00a0\u00a0\u00a0 C)\u4e00.18\u00a0\u00a0\u00a0 D)\u4e00e3", "0.12\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 2e4.2\u00a0 \u00a0\u00a0\u00a0123e4\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 .234", "e3\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 .e5\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 0.0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1e3", "*16", "b", "\u4e0b\u9762\u56db\u4e2a\u9009\u9879\u4e2d,\u5747\u662f\u5408\u6cd5\u6d6e\u70b9\u6570\u7684\u9009\u9879\u662f", "A)\u00a0 +le+1\u00a0\u00a0\u00a0 B)-.60\u00a0\u00a0\u00a0 C)\u00a0 123e\u00a0\u00a0\u00a0\u00a0\u00a0 D)\u4e00e3", "5e\u4e009.4\u00a0\u00a0\u00a0 12e-4\u00a0\u00a0\u00a0\u00a0 1.2e-.4\u00a0\u00a0\u00a0\u00a0 .8e4", "03e2\u00a0\u00a0\u00a0\u00a0 \u4e008e5\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 +2e\u4e001\u00a0\u00a0\u00a0\u00a0 5.e\u4e000", "*17", "A", "\u4e0b\u9762\u56db\u4e2a\u9009\u9879\u4e2d,\u5747\u662f\u5408\u6cd5\u8f6c\u4e49\u5b57\u7b26\u7684\u9009\u9879\u662f", "A)\u2019\\\u201d\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)\u2019\\'\u00a0\u00a0\u00a0 C)\u2019\\018\u2032\u00a0\u00a0 D)\u2019\\\\0\u2032", "\u2018\\\\\u2019\u00a0\u00a0\u00a0\u00a0 \u2018\\017\u2032\u00a0\u00a0\u00a0 \u2018\\f\u2019\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2019101\u2032", "\u2018\\n\u2019\u00a0\u00a0\u00a0\u00a0 \u2018\\\u201d\u2018\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2018xab\u2019\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2018xlf\u2019", "*18", "B", "\u4e0b\u9762\u56db\u4e2a\u9009\u9879\u4e2d,\u5747\u662f\u4e0d\u5408\u6cd5\u7684\u8f6c\u4e49\u5b57\u7b26\u7684\u9009\u9879\u662f", "A)\u2019\\\u201d\u00a0\u00a0\u00a0\u00a0 B)\u2019\\1011\u2032\u00a0\u00a0\u00a0 C)\u2019\\011\u2032\u00a0\u00a0\u00a0 D)\u2019\\abc\u2019", "\u2018\\\\\u2019\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2018\\\u2019\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2018\\f\u2019\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2019\\101\u2032", "\u2018\\xf\u2019\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2018\\a\u2019\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2018\\}\u2019\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2018xlf\u2019", "*19", "C", "\u4e0b\u9762\u6b63\u786e\u7684\u5b57\u7b26\u5e38\u91cf\u662f:", "A)\u201da\u201d\u00a0\u00a0\u00a0 B)\u2019\\\\\u201d\u00a0\u00a0\u00a0 C)\u2019W'\u00a0\u00a0\u00a0 D)\u201d", "*20", "d", "\u4e0b\u9762\u56db\u4e2a\u9009\u9879\u4e2d,\u5747\u662f\u4e0d\u6b63\u786e\u7684\u516b\u8fdb\u5236\u6570\u6216\u5341\u516d\u8fdb\u5236\u6570\u7684\u9009\u9879\u662f\u3002", "A)\u00a0 016\u00a0\u00a0\u00a0\u00a0\u00a0 B)oabc\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)010\u00a0\u00a0\u00a0\u00a0\u00a0 D)\u00a00a12", "0x8f\u00a0 017 -0\u00d711\u00a0\u00a0 7ff", "018\u00a0\u00a0 0\u00d78\u00a0 0\u00d716\u00a0\u00a0 -123", "*21", "C", "\u4e0b\u9762\u56db\u4e2a\u9009\u9879\u4e2d,\u5747\u662f\u6b63\u786e\u7684\u516b\u8fdb\u5236\u6570\u6216\u5341\u516d\u8fdb\u5236\u6570\u7684\u9009\u9879\u662f\u3002", "A)\u4e0010 B)0abc\u00a0\u00a0\u00a0\u00a0\u00a0 C)0010\u00a0\u00a0 0)\u00a0 0al2", "0x8f\u00a0\u00a0\u00a0 \u4e00017\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u4e000\u00d711-0xl23", "\u4e00011\u00a0\u00a0\u00a0\u00a0 0xc 0xf1\u00a0\u00a0\u00a0\u00a0\u00a0 \u4e000\u00d78", "*22", "d", "\u4e0b\u9762\u56db\u4e2a\u9009\u9879\u4e2d\u3001\u5747\u662f\u6b63\u786e\u7684\u6570\u503c\u5e38\u91cf\u6216\u5b57\u7b26\u5e38\u91cf\u7684\u9009\u9879\u662f:", "A)0.0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u65e5)\u201da\u201d\u00a0\u00a0\u00a0\u00a0 C)\u20193\u2032D)\u5341001", "0f\u00a0 3.9E-2.5\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 011\u00a0\u00a0\u00a0\u00a0 0xabcd", "8.9e\u00a0\u00a0 lel0xFFOO\u00a0 2e2", "\u2018&\u2019 \u2018\\\u201d\u2019\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00a\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 50.", "*23", "A", "\u4e0b\u9762\u4e0d\u6b63\u786e\u7684\u5b57\u7b26\u4e32\u5e38\u91cf\u662f\u3002", "A)\u2019abc\u2019\u00a0 B)\u201d12\u201912\u2033\u00a0\u00a0\u00a0\u00a0 C)\u201d0\u2033\u00a0\u00a0\u00a0\u00a0 D)\u201d\"", "*24", "c", "\u82e5\u6709\u4ee3\u6570\u5f0f3ae/bc,\u5219\u4e0d\u6b63\u786e\u7684C\u8bed\u8a00\u8868\u8fbe\u5f0f\u662f:", "A) a/b/c*e*3\u00a0\u00a0\u00a0\u00a0\u00a0 B)3*a*e/b/c", "C)3*a*e/b*c\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)a*e/c/b*3", "*25", "A", "\u5df2\u77e5\u5404\u53d8\u91cf\u7684\u7c7b\u578b\u8bf4\u660e\u5982\u4e0b:", "int\u00a0\u00a0 k,a,b;", "unsigned\u00a0 long\u00a0 w= 5;", "double\u00a0\u00a0\u00a0 x=1.42;", "\u5219\u4ee5\u4e0b\u4e0d\u7b26\u5408C\u8bed\u8a00\u8bed\u6cd5\u7684\u8868\u8fbe\u5f0f\u662f:", "A)\u00a0 x%(\u4e003)\u00a0\u00a0 B)\u00a0 w+=-2", "C)k=(a=2,b=3,a\u5341b)\u00a0\u00a0\u00a0\u00a0\u00a0 D)a\u5341= a\u4e00=(b=4)*(a=3)", "*26", "A", "\u5df2\u77e5\u5404\u53d8\u91cf\u7684\u7c7b\u578b\u8bf4\u660e\u5982\u4e0b:", "int i=8,k,a,b;", "unsigned\u00a0 long\u00a0 w=5;", "double\u00a0 x=1.42,y=5.2;", "\u5219\u4ee5\u4e0b\u7b26\u5408C\u8bed\u8a00\u8bed\u6cd5\u7684\u8868\u8fbe\u5f0f\u662f:", "A)\u00a0 a\u5341=a\u4e00=(b= 4)*(a=3)\u00a0 B)a=a*3=2", "C)\u00a0 x%(\u4e003)\u00a0 D)y=f1oat(i)", "*27", "D", "\u4ee5\u4e0b\u4e0d\u6b63\u786e\u7684\u53d9\u8ff0\u662f", "A)\u5728C\u7a0b\u5e8f\u4e2d,\u9017\u53f7\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u6700\u4f4e", "B)\u5728C\u7a0b\u5e8f\u4e2d,APH\u548caph\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u53d8\u91cf", "C)\u82e5a\u548cb\u7c7b\u578b\u76f8\u540c,\u5728\u6267\u884c\u4e86\u8d4b\u503c\u8868\u8fbe\u5f0fa=b\u540eb\u4e2d\u7684\u503c\u5c06\u653e\u4ebaa\u4e2d,\u800cb\u4e2d\u7684\u503c\u4e0d\u53d8\u3002", "D)\u5f53\u4ece\u952e\u76d8\u8f93\u5165\u6570\u636e\u65f6,\u5bf9\u4e8e\u6574\u578b\u53d8\u91cf\u53ea\u80fd\u8f93\u5165\u6574\u578b\u6570\u503c,\u5bf9\u4e8e\u5b9e\u578b\u53d8\u91cf\u53ea\u80fd\u8f93\u5165\u5b9e\u578b\u6570\u503c\u3002", "*28", "D", "\u4ee5\u4e0b\u6b63\u786e\u7684\u53d9\u8ff0\u662f:", "A)\u5728C\u7a0b\u5e8f\u4e2d,\u6bcf\u884c\u4e2d\u53ea\u80fd\u5199\u4e00\u6761\u8bed\u53e5", "B)\u82e5a\u662f\u5b9e\u578b\u53d8\u91cf,C\u7a0b\u5e8f\u4e2d\u5141\u8bb8\u8d4b\u503ca=10,\u56e0\u6b64\u5b9e\u578b\u53d8\u91cf\u4e2d\u5141\u8bb8\u5b58\u653e\u6574\u578b\u6570", "C)\u5728C\u7a0b\u5e8f\u4e2d,\u65e0\u8bba\u662f\u6574\u6570\u8fd8\u662f\u5b9e\u6570,\u90fd\u80fd\u88ab\u51c6\u786e\u65e0\u8bef\u5730\u8868\u793a", "D)\u5728C\u7a0b\u5e8f\u4e2d,%\u662f\u53ea\u80fd\u7528\u4e8e\u6574\u6570\u8fd0\u7b97\u7684\u8fd0\u7b97\u7b26", "*29", "B", "\u4ee5\u4e0b\u7b26\u5408C\u8bed\u8a00\u8bed\u6cd5\u7684\u8d4b\u503c\u8868\u8fbe\u5f0f\u662f", "A)d=9+e+f=d+9B)\u00a0 d=9+e,f=d+9", "C)d=9\u5341e,e++,d\u53419\u00a0\u00a0\u00a0\u00a0 D)d=9\u5341e++=d\u53417", "*30", "A", "\u5df2\u77e5\u5b57\u6bcdA\u7684ASCII\u7801\u4e3a\u5341\u8fdb\u5236\u657065,\u4e14c2\u4e3a\u5b57\u7b26\u578b,\u5219\u6267\u884c\u8bed\u53e5c2=\u2019A'\u5341\u20196\u2032\u4e00\u20193\u2032;\u540e,c2\u4e2d\u7684\u503c\u4e3a", "A)D\u00a0\u00a0\u00a0\u00a0 B)68\u00a0\u00a0 C)\u4e0d\u786e\u5b9a\u7684\u503c\u00a0\u00a0\u00a0\u00a0 D)C", "*31", "D", "\u5728C\u8bed\u8a00\u4e2d,\u8981\u6c42\u8fd0\u7b97\u6570\u5fc5\u987b\u662f\u6574\u578b\u7684\u8fd0\u7b97\u7b26\u662f\u3002", "A) /\u00a0\u00a0 B) ++\u00a0 c) !=\u00a0\u00a0 D)%", "*32", "B", "\u82e5\u4ee5\u4e0b\u53d8\u91cf\u5747\u662f\u6574\u578b,\u4e14num=sum=7;\u5219\u6267\u884c\u8868\u8fbe\u5f0fsUM=num++,sUM++,++num\u540esum\u7684\u503c\u4e3a", "A)\u00a0 7\u00a0\u00a0\u00a0 B)\u00a08\u00a0 C)\u00a0 9\u00a0 D)\u00a0 10", "*33", "D", "\u5728C\u8bed\u8a00\u4e2d,int\u3001char\u548cshort\u79cd\u7c7b\u578b\u6570\u636e\u5728\u5185\u5b58\u4e2d\u6240\u5360\u7528\u7684\u5b57\u8282\u6570", "A)\u7531\u7528\u6237\u81ea\u5df1\u5b9a\u4e49\u00a0\u00a0\u00a0\u00a0 B)\u5747\u4e3a2\u4e2a\u5b57\u8282", "C)\u662f\u4efb\u610f\u7684\u00a0 \u00a0D)\u7531\u6240\u7528\u673a\u5668\u7684\u673a\u5668\u5b57\u957f\u51b3\u5b9a", "*34", "A", "\u82e5\u6709\u8bf4\u660e\u8bed\u53e5:char c=\u2019\\72\u2032\u5219\u53d8\u91cfc", "A)\u5305\u542b1\u4e2a\u5b57\u7b26\u00a0\u00a0 B)\u5305\u542b2\u4e2a\u5b57\u7b26", "C)\u5305\u542b3\u4e2a\u5b57\u7b26\u00a0\u00a0 D)\u8bf4\u660e\u4e0d\u5408\u6cd5,c\u7684\u503c\u4e0d\u786e\u5b9a", "*35", "A", "\u82e5\u6709\u5b9a\u4e49:int a=7;float x=2.5,y=4.7;\u5219\u8868\u8fbe\u5f0fx+a%3*(int)(x+y)%2/4\u7684\u503c\u662f", "A)2\u2022500000\u00a0 B)2.7500OO\u00a0 c)\u00a0 3.500000\u00a0 D)\u00a0 0.000000\u3002", "*36", "B", "sizeof(float)\u662f:", "A)\u4e00\u4e2a\u53cc\u7cbe\u5ea6\u578b\u8868\u8fbe\u5f0f \u00a0B)\u4e00\u4e2a\u6574\u578b\u8868\u8fbe\u5f0f", "C)\u4e00\u79cd\u51fd\u6570\u8c03\u7528D)\u4e00\u4e2a\u4e0d\u5408\u6cd5\u7684\u8868\u8fbe\u5f0f", "*37", "C", "\u8bbe\u53d8\u91cfa\u662f\u6574\u578b,f\u662f\u5b9e\u578b,i\u662f\u53cc\u7cbe\u5ea6\u578b,\u5219\u8868\u8fbe\u5f0f10+\u2019a'+i*f\u503c\u7684\u6570\u636e\u7c7b\u578b\u4e3a", "A)int\u00a0\u00a0\u00a0\u00a0 B)\u00a0 float\u00a0 C)\u00a0 double\u00a0 D)\u4e0d\u786e\u5b9a", "*38", "A", "\u4e0b\u9762\u56db\u4e2a\u9009\u9879\u4e2d,\u5747\u662f\u975e\u6cd5\u5e38\u91cf\u7684\u9009\u9879\u662f\u3002", "A)\u2019as\u2019\u00a0\u00a0\u00a0 B)\u2019\\\\\u2019\u00a0 c)-0xl8\u00a0\u00a0\u00a0 D)0xabc", "-0fff \u2018\\01\u2032\u00a0\u00a0\u00a0 01177\u00a0\u00a0\u00a0\u00a0 \u2018\\0\u2032", "\u2018\\0xa\u2019\u00a0\u00a0\u00a0\u00a0 12,456\u00a0\u00a0\u00a0\u00a0 0xf\u201da\u201d", "*39", "D", "\u5728C\u8bed\u8a00\u4e2d,\u00a0 char\u578b\u6570\u636e\u5728\u5185\u5b58\u4e2d\u7684\u5b58\u50a8\u5f62\u5f0f\u662f:", "A)\u8865\u7801 B)\u53cd\u7801 C)\u539f\u7801\u00a0\u00a0\u00a0\u00a0 D)ASCII\u7801", "*40", "B", "\u8bbe\u53d8\u91cfn\u4e3af1oat\u7c7b\u578b,m\u4e3aint\u7c7b\u578b,\u5219\u4ee5\u4e0b\u80fd\u5b9e\u73b0\u5c06n\u4e2d\u7684\u6570\u503c\u4fdd\u7559\u5c0f\u6570\u70b9\u540e\u4e24\u4f4d,\u7b2c\u4e09\u4f4d\u8fdb\u884c\u56db\u820d\u4e94\u4eba\u8fd0\u7b97\u7684\u8868\u8fbe\u5f0f\u662f\u4e00\u4e00\u4e00\u3002", "A) n=(n*100+0.5)/100.0\u00a0\u00a0\u00a0\u00a0 B)m=n*100+0.5 ,n= m/100.0", "C) n=n*100+0.5/100.0\u00a0\u00a0 D)n=(n/100+0.5)*100.0", "*41", "C", "\u8868\u8fbe\u5f0f18/4*sqrt(4.0)/8\u503c\u7684\u6570\u636e\u7c7b\u578b\u4e3a:", "A)\u00a0 int\u00a0\u00a0\u00a0 B)float\u00a0\u00a0 C)double\u00a0 D)\u4e0d\u786e\u5b9a", "*42", "C", "\u8bbeC\u8bed\u8a00\u4e2d,\u4e00\u4e2aint\u578b\u6570\u636e\u5728\u5185\u5b58\u4e2d\u53602\u4e2a\u5b57\u8282,\u5219unsigned\u00a0 int\u578b\u6570\u636e\u7684\u53d6\u503c\u8303\u56f4\u4e3a:", "A)\u00a0 0\uff5e255\u00a0\u00a0 B) 0\uff5e32767\u00a0\u00a0\u00a0\u00a0 C) 0\uff5e65535\u00a0 D)\u00a0 0\uff5e2147483647", "*43", "D", "\u8bbe\u6709\u8bf4\u660e:\u00a0 char w; int\u00a0 x;\u00a0 f1oat\u00a0 y;\u00a0 double\u00a0 z;\u5219\u8868\u8fbe\u5f0fw* x+z\u4e00y\u503c\u7684\u6570\u636e\u7c7b\u578b\u4e3a:", "A)float\u00a0\u00a0\u00a0 B)char\u00a0\u00a0 C)int\u00a0\u00a0\u00a0\u00a0 D)double", "*44", "D", "\u82e5\u6709\u4ee5\u4e0b\u5b9a\u4e49,\u5219\u80fd\u4f7f\u503c\u4e3a3\u7684\u8868\u8fbe\u5f0f\u662f:", "int\u00a0 k= 7,x =12;", "A)\u00a0 x%=(k%= 5)B)\u00a0 x%=(k\u4e00k%5)", "C)\u00a0 x%=k- k%5\u00a0\u00a0 D)\u00a0 (x%=k)\u4e00(k%=5)", "*45", "C", "\u8bbe\u4ee5\u4e0b\u53d8\u91cf\u5747\u4e3aint\u7c7b\u578b,\u5219\u503c\u4e0d\u7b49\u4e8e7\u7684\u8868\u8fbe\u5f0f\u662f", "A)\u00a0 (x= y= 6,\u00a0 x+y,x+1)\u00a0\u00a0 B)(x= y= 6,x+y,y+1)", "C)\u00a0 (x= 6,x+1,y= 6,x+y)\u00a0\u00a0 D)\u00a0 (y=6,y+l,x = y,x+1)", "*46", "D", "putchar\u51fd\u6570\u53ef\u4ee5\u5411\u7ec8\u7aef\u8f93\u51fa\u4e00\u4e2a:", "A)\u6574\u578b\u53d8\u91cf\u8868\u8fbe\u5f0f\u503c", "B)\u5b9e\u578b\u53d8\u91cf\u503c", "C)\u5b57\u7b26\u4e32", "D)\u5b57\u7b26\u6216\u5b57\u7b26\u578b\u53d8\u91cf\u503c", "*47", "B", "printf\u51fd\u6570\u4e2d\u7528\u5230\u683c\u5f0f\u7b26%5s ,\u5176\u4e2d\u6570\u5b575\u8868\u793a\u8f93\u51fa\u7684\u5b57\u7b26\u4e32\u5360\u75285\u5217\u3002\u5982\u679c\u5b57\u7b26\u4e32\u957f\u5ea6\u5927\u4e8e5,\u5219\u8f93\u51fa\u6309\u65b9\u5f0f", "A)\u4ece\u5de6\u8d77\u8f93\u51fa\u8be5\u5b57\u4e32,\u53f3\u8865\u7a7a\u683c", "B)\u6309\u539f\u5b57\u7b26\u957f\u4ece\u5de6\u5411\u53f3\u5168\u90e8\u8f93\u51fa", "C)\u53f3\u5bf9\u9f50\u8f93\u51fa\u8be5\u5b57\u4e32,\u5de6\u8865\u7a7a\u683c", "D)\u8f93\u51fa\u9519\u8bef\u4fe1\u606f", "*48", "C", "printf\u51fd\u6570\u4e2d\u7528\u5230\u683c\u5f0f\u7b26%5s ,\u5176\u4e2d\u6570\u5b575\u8868\u793a\u8f93\u51fa\u7684\u5b57\u7b26\u4e32\u5360\u75285\u5217\u3002\u5982\u679c\u5b57\u7b26\u4e32\u957f\u5ea6\u5c0f\u4e8e5,\u5219\u8f93\u51fa\u6309\u65b9\u5f0f\u3002", "A)\u4ece\u5de6\u8d77\u8f93\u51fa\u8be5\u5b57\u4e32,\u53f3\u8865\u7a7a\u683c", "B)\u6309\u539f\u5b57\u7b26\u957f\u4ece\u5de6\u5411\u53f3\u5168\u90e8\u8f93\u51fa", "C)\u53f3\u5bf9\u9f50\u8f93\u51fa\u8be5\u5b57\u4e32,\u5de6\u8865\u7a7a\u683c", "D)\u8f93\u51fa\u9519\u8bef\u4fe1\u606f", "*49", "D", "\u5df2\u6709\u5b9a\u4e49 int a=-2;\u548c\u8f93\u51fa\u8bed\u53e5:printf(\u201c%8lx\u201d,a);\u4ee5\u4e0b\u6b63\u786e\u7684\u53d9\u8ff0\u662f:", "A)\u6574\u578b\u53d8\u91cf\u7684\u8f93\u51fa\u683c\u5f0f\u7b26\u53ea\u6709%d\u4e00\u79cd", "B)%x \u662f\u683c\u5f0f\u7b26\u7684\u4e00\u79cd,\u5b83\u53ef\u4ee5\u9002\u7528\u4e8e\u4efb\u4f55\u4e00\u79cd\u7c7b\u578b\u7684\u6570\u636e", "C)%x \u662f\u683c\u5f0f\u7b26\u7684\u4e00\u79cd,\u5176\u53d8\u91cf\u7684\u503c\u6309\u5341\u516d\u8fdb\u5236\u8f93\u51fa,\u4f46%8lx \u662f\u9519\u8bef\u7684", "D)%8lx \u4e0d\u662f\u9519\u8bef\u7684\u683c\u5f0f\u7b26,\u5176\u4e2d\u6570\u5b578\u89c4\u5b9a\u4e86\u8f93\u51fa\u5b57\u6bb5\u7684\u5bbd\u5ea6", "*50", "D", "\u82e5x ,y\u5747\u5b9a\u4e49\u4e3aint\u578b,z\u5b9a\u4e49\u4e3adouble\u578b,\u4ee5\u4e0b\u4e0d\u5408\u6cd5\u7684scanf\u51fd\u6570\u8c03\u7528\u8bed\u53e5\u662f:", "A)\u00a0 scanf(\u201d %d%lx,%le\u201d,&x,&y,&z);", "B)\u00a0 scanf(\u201c%2d * %d%lf\u201d&x,&y,&z );", "C)\u00a0 scanf(\u201c%x %* d%o\u201d,&x,&y);", "D)\u00a0 scanf(\u201c%x%o%6.2f\u201d,&x,&y,&z);", "*51", "A", "\u5df2\u6709\u5982\u4e0b\u5b9a\u4e49\u548c\u8f93\u5165\u8bed\u53e5 ,\u82e5\u8981\u6c42a1,a2,c1,c2\u503c\u5206\u522b\u4e3a10,20,A\u548cB,\u5f53\u4ece\u7b2c\u4e00\u5217\u5f00\u59cb\u8f93\u5165\u6570\u636e\u65f6,\u6b63\u786e\u7684\u6570\u636e\u8f93\u5165\u65b9\u5f0f\u662f", "int\u00a0 a1,a2;\u00a0 char\u00a0 c1,c2;", "scanf(\u201c%d%c%d%c\u201d,&a1,&c1,&a2,&c2);", "A)10A20B< CR>\u00a0\u00a0\u00a0\u00a0 B)10 A20 B", "C)10A20\u00a0\u00a0 D)10A20 B\u3002", "*52", "B", "\u5df2\u6709\u5b9a\u4e49int\u00a0 x;\u00a0 f1oat\u00a0 y;\u4e14\u6267\u884cscanf(\u201c%3d%f\u201d,&x,&y);\u8bed\u53e5,\u82e5\u4ece\u7b2c\u4e00\u5217\u5f00\u59cb\u8f93\u5165\u6570\u636e12345\u00a0 678(\u56de\u8f66),\u5219x \u7684\u503c\u4e3a", "A)12345\u00a0 B)123\u00a0\u00a0 \u3002\u00a0 C)\u00a0 45 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)\u00a0 345", "*53", "B", "\u5df2\u6709\u5b9a\u4e49int\u00a0 x;\u00a0 f1oat\u00a0 y;\u4e14\u6267\u884cscanf(\u201c%3d%f\u201d,&x,&y);\u8bed\u53e5,\u82e5\u4ece\u7b2c\u4e00\u5217\u5f00\u59cb\u8f93\u5165\u6570\u636e12345\u00a0 678(\u56de\u8f66),\u5219y \u7684\u503c\u4e3a:", "A)\u65e0\u5b9a\u503cB)45.0000\u00a0 C)\u00a0 678.000000\u00a0 D)\u00a0 123.00000", "*54", "D", "\u5df2\u6709\u5982\u4e0b\u5b9a\u4e49\u548c\u8f93\u5165\u8bed\u53e5,\u82e5\u8981\u6c42a1,a2,c1,c2\u7684\u503c\u5206\u522b\u4e3a10,20,A,B,\u5f53\u4ece\u7b2c\u4e00\u5217\u5f00\u59cb\u8f93\u5165\u6570\u636e\u65f6,\u6b63\u786e\u7684\u6570\u636e\u8f93\u5165\u65b9\u5f0f\u662f:", "int\u00a0 a1,a2;\u00a0 char\u00a0 c1,c2;", "scanf(\u201c%d%d\u201d,&a1,&a2);", "scanf(\u201c%c%c\u201d,&c1,&c2);", "A)\u00a0 1020AB\u00a0\u00a0\u00a0 B)10\u00a0 20AB", "C)10\u00a0 20\u00a0\u00a0 AB\u00a0\u00a0 D)10 20AB", "*55", "D", "\u5df2\u6709\u7a0b\u5e8f\u6bb5\u548c\u8f93\u5165\u6570\u636e\u7684\u5f62\u5f0f\u5982\u4e0b,\u7a0b\u5e8f\u4e2d\u8f93\u5165\u8bed\u53e5\u7684\u6b63\u786e\u5f62\u5f0f\u5e94\u5f53\u4e3a", "main()", "{int\u00a0 a;float f;", "printf(\u201c\\nInput number:\u201d);", "\u8f93\u5165\u8bed\u53e5", "printf(\u201c\\nf=%f,a= %d\\n ,f,a);", "}", "Input\u00a0 number:\u00a0 4.5\u00a0\u00a0 2", "A )scanf(\u201c%d,%f\u201d,&a,&f);\u00a0 B)scanf(\u201c%f,%d\u201d,&f,&a)", "C)scanf(\u201c%d%f\u201d,&a,&f);\u00a0\u00a0 D)scanf(\u201c%f%d\u201d,&f,&a);", "*56", "B", "\u6839\u636e\u5b9a\u4e49\u548c\u6570\u636e\u7684\u8f93\u5165\u65b9\u5f0f,\u8f93\u5165\u8bed\u53e5\u7684\u6b63\u786e\u5f62\u5f0f\u4e3a:", "\u5df2\u6709\u5b9a\u4e49:\u00a0 float\u00a0 fl,f2;", "\u6570\u636e\u7684\u8f93\u5165\u65b9\u5f0f:4.52", "3. 5", "A)scanf(\u201c%f,%f\u201d,&f1,&f2);\u00a0 B)scanf(\u201c%f%f\u201d,&f1,&f2 );", "C)scanf(\u201c%3.2f%2.1f\u201d,&f1,&f); D)scanf(\u201c%3.2f%2.1f\u201d,&f1,&f2);", "*57", "D", "\u9605\u8bfb\u4ee5\u4e0b\u7a0b\u5e8f,\u5f53\u8f93\u5165\u6570\u636e\u7684\u5f62\u5f0f\u4e3a25,13,10\u6b63\u786e\u7684\u8f93\u51fa\u7ed3\u679c\u4e3a:", "main()", "{int\u00a0 x,y,z", "scanf(\u201c%d%d%d\u201d,&x,&y,&z );", "printf(\u201cx+y+z=%d\\n ,x+y+z);\u3002", "}", "A)x +y+z=48\u00a0\u00a0\u00a0\u00a0\u00a0 B)x +y+z=35", "C)x +z=35D)\u4e0d\u786e\u5b9a\u503c", "*58", "B", "\u9605\u8bfb \u4e0b\u7a0b\u5e8f,\u82e5\u8fd0\u884c\u7ed3\u679c\u4e3a\u5982\u4e0b\u5f62\u5f0f\u00a0 ,\u8f93\u5165\u8f93\u51fa\u8bed\u53e5\u7684\u6b63\u786e\u5185\u5bb9\u662f:", "main()", "{int\u00a0 x;\u00a0 float\u00a0 y;printf(\u201center\u00a0 x,y\u00a0 :\u201d)", "\u8f93\u5165\u8bed\u53e5\u00a0\u00a0\u00a0 \u8f93\u51fa\u8bed\u53e5", "}", "\u8f93\u5165\u5f62\u5f0f\u00a0\u00a0\u00a0 enter\u00a0 x,y:\u00a0 2\u00a0 3.4", "\u8f93\u51fa\u5f62\u5f0f\u00a0\u00a0\u00a0 x+y=5.40", "A)scanf(\u201c%d,%f\u201d,&x,&y);printf(\u201c\\nx+y= %4.2f\u201d,x+y);", "B)scanf(\u201c%d%f\u201d,&x,&y );printf(\u201c\\nx+y=%4.2f\u201d,x+y);", "C)scanf(\u201c%d%f\u201d,&x,&y); printf(\u201c\\nx+y=%6.lf\u201d,x+y);", "D)scanf(\u201c%d%3.1f\u201d,&x,&y );printf(\u201c\\nx\u5341y=%4.2f\u201d,x+y);", "*59", "D", "\u4ee5\u4e0b\u8bf4\u6cd5\u6b63\u786e\u7684\u662f:", "A)\u8f93\u5165\u9879\u53ef\u4ee5\u4e3a\u4e00\u5b9e\u578b\u5e38\u91cf,\u5982scanf(\u201c%f\u201d,3.5);", "B)\u53ea\u6709\u683c\u5f0f\u63a7\u5236,\u6ca1\u6709\u8f93\u5165\u9879,\u4e5f\u80fd\u8fdb\u884c\u6b63\u786e\u8f93\u5165,\u5982scanf(\u201ca=%d,b=%d\u201d);", "C)\u5f53\u8f93\u5165\u4e00\u4e2a\u5b9e\u578b\u6570\u636e\u65f6,\u683c\u5f0f\u63a7\u5236\u90e8\u5206\u5e94\u89c4\u5b9a\u5c0f\u6570\u70b9\u540e\u7684\u4f4d\u6570,", "\u5982scanf(\u201c%4.2f\u201d,&f);", "D)\u5f53\u8f93\u5165\u6570\u636e\u65f6,\u5fc5\u987b\u6307\u660e\u53d8\u91cf\u7684\u5730\u5740,\u5982scanf(\u201c%f\u201d,&f);", "*60", "A", "\u6839\u636e\u4e0b\u9762\u7684\u7a0b\u5e8f\u53ca\u6570\u636e\u7684\u8f93\u5165\u65b9\u5f0f\u548c\u8f93\u51fa\u5f62\u5f0f,\u7a0b\u5e8f\u4e2d\u8f93\u5165\u8bed\u53e5\u7684\u6b63\u786e\u5f62\u5f0f\u5e94\u8be5\u4e3a:", "main()", "{char\u00a0 ch1\u00a0 ,ch2\u00a0 ,ch3;", "\u8f93\u5165\u8bed\u53e5", "printf(\u201c%c%c%c\u201d,ch1,ch2,ch3);}", "\u8f93\u5165\u5f62\u5f0f:\u00a0 A B C", "\u8f93\u51fa\u5f62\u5f0f:\u00a0 A B", "A)\u00a0 scanf(\u201c%c%c%c\u201d,&ch1,&ch2,&ch3);", "B)\u00a0 scanf(\u201c%c,%c,%c\u201d, &ch1,&ch2, &ch3);", "C)\u00a0 scanf(\u201c%c %c %c\u201d,&ch1,&ch2,&ch3);", "D)\u00a0 scanf(\u201c%c%c\u201d,&ch1,&ch2,&ch3);", "*61", "D", "\u6709\u8f93\u5165\u8bed\u53e5:\u00a0 scanf(\u201ca= %d,b= %d,c=%d\u201d,&a,&b,&c);\u4e3a\u4f7f\u53d8\u91cfa\u7684\u503c\u4e3a1,b\u4e3a3,c\u4e3a2,\u4ece\u952e\u76d8\u8f93\u5165\u6570\u636e\u7684\u6b63\u786e\u5f62\u5f0f\u5e94\u5f53\u662f", "A)132(\u56de\u8f66)", "B)1,3,2(\u56de\u8f66)", "C)a=1b=3c=2(\u56de\u8f66)", "D)a=1,b =3,c =2(\u56de\u8f66)", "*62", "A", "\u4ee5\u4e0b\u80fd\u6b63\u786e\u5730\u5b9a\u4e49\u6574\u578b\u53d8\u91cfa,b\u548cc \u5e76\u4e3a\u5176\u8d4b\u521d\u503c5\u7684\u8bed\u53e5\u662f", "A)int a=b= c= 5;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B) int a,b, c= 5;", "C)a= 5,b=5,c=5;\u00a0\u00a0\u00a0\u00a0 D)\u00a0 a= b= c=5;", "*63", "A", "\u5df2\u77e5ch\u662f\u5b57\u7b26\u578b\u53d8\u91cf,\u4e0b\u9762\u4e0d\u6b63\u786e\u7684\u8d4b\u503c\u8bed\u53e5\u662f", "A)ch=\u2019a+b\u2019;\u00a0 B)ch=\u2019\\0\u2032;\u00a0 C)ch=\u20197\u2032+\u20199\u2032;\u00a0 D)\u00a0 ch=5+9;", "*64", "B", "\u5df2\u77e5ch\u662f\u5b57\u7b26\u578b\u53d8\u91cf,\u4e0b\u9762\u6b63\u786e\u7684\u8d4b\u503c\u8bed\u53e5\u662f", "A)\u00a0 ch= \u2019123\u2032;\u00a0 B)\u00a0 ch= \u2018\\xff\u2019;\u00a0 C)\u00a0 ch= \u2018\\08\u2032;\u00a0 D)\u00a0 ch=\u201d\\\u201d;", "*65", "B", "\u82e5\u6709\u4ee5\u4e0b\u5b9a\u4e49,\u5219\u6b63\u786e\u7684\u8d4b\u503c\u8bed\u53e5\u662f:", "int\u00a0 a,b;float\u00a0 x;", "A)\u00a0 a=1,b=2,\u00a0\u00a0\u00a0 B)b++;\u00a0 C)\u00a0 a= b= 5\u00a0\u00a0\u00a0\u00a0 D)\u00a0 b= int(x);", "*66", "B", "\u8bbex \u3001y\u5747\u4e3af1oat\u578b\u53d8\u91cf,\u5219\u4ee5\u4e0b\u4e0d\u5408\u6cd5\u7684\u8d4b\u503c\u8bed\u53e5\u662f", "A)++x;\u00a0\u00a0 B)y=(x%2)/10; C)\u00a0 x*=y+8;\u00a0 D)x=y=0;", "*67", "A", "x,y,z\u5747\u4e3aint\u578b\u53d8\u91cf,\u5219\u6267\u884c\u8bed\u53e5x=(y=(z=10)+5)\u4e005;\u540e,x \u3001y \u548c\u4e4b\u7684\u503c\u662f:", "A)\u00a0 x=10\u00a0\u00a0\u00a0 B)\u00a0 x=10\u00a0 C)\u00a0 x=10\u00a0 D)\u00a0 x=10", "y=15 y=10\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 y=10\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 y=5", "z=10 z=10\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 z=15\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 z=10", "*68", "D", "\u903b\u8f91\u8fd0\u7b97\u7b26\u4e24\u4fa7\u8fd0\u7b97\u5bf9\u8c61\u7684\u6570\u636e\u7c7b\u578b\u4e00\u4e00\u4e00\u3002", "A)\u53ea\u80fd\u662f0\u62161", "B)\u53ea\u80fd\u662f0\u6216\u975e0\u6b63\u6570", "C)\u53ea\u80fd\u662f\u6574\u578b\u6216\u5b57\u7b26\u578b\u6570\u636e", "D)\u53ef\u4ee5\u662f\u4efb\u4f55\u7c7b\u578b\u7684\u6570\u636e", "*69", "C", "\u4e0b\u5173\u4e8e\u8fd0\u7b97\u7b26\u4f18\u5148\u987a\u5e8f\u7684\u63cf\u8ff0\u4e2d\u6b63\u786e\u7684\u662f\u4e00\u4e00\u4e00\u3002", "A)\u5173\u7cfb\u8fd0\u7b97\u7b26< \u7b97\u672f\u8fd0\u7b97\u7b26< \u8d4b\u503c\u8fd0\u7b97\u7b26< \u903b\u8f91\u4e0e\u8fd0\u7b97\u7b26", "B)\u903b\u8f91 \u8fd0\u7b97\u7b26< \u5173\u7cfb\u8fd0\u7b97\u7b26< \u7b97\u672f\u8fd0\u7b97\u7b26< \u8d4b\u503c\u8fd0\u7b97\u7b26", "C)\u8d4b\u503c\u8fd0\u7b97\u7b26< \u903b\u8f91\u4e0e\u8fd0\u7b97\u7b26< \u5173\u7cfb\u8fd0\u7b97\u7b26< \u7b97\u672f\u8fd0\u7b97\u7b26", "D)\u7b97\u672f\u8fd0\u7b97\u7b26< \u5173\u7cfb\u8fd0\u7b97\u7b26< \u8d4b\u503c\u8fd0\u7b97\u7b26< \u903b\u8f91\u4e0e\u8fd0\u7b97\u7b26", "*70", "B", "\u4e0b\u5217\u8fd0\u7b97\u7b26\u4e2d\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u662f\u4e00\u4e00\u4e00\u3002", "A)<\u00a0\u00a0 B)\u5341\u00a0\u00a0 C)&&\u00a0\u00a0\u00a0\u00a0 D)!=", "*71", "C", "\u80fd\u6b63\u786e\u8868\u793a\u201d\u5f53x \u7684\u53d6\u503c\u5728[1,10]\u548c[200,210]\u8303\u56f4\u5185\u4e3a\u771f,\u5426\u5219\u4e3a\u5047\u201d\u7684\u8868\u8fbe\u5f0f\u662f\u4e00\u4e00\u4e00\u3002", "A)\u00a0 (x>=1)\u00a0 &&(x<=10)\u00a0 &&(x> = 200)\u00a0 &&(x<=210)", "B)\u00a0 (x>=1)\u00a0 || (x<=10)\u00a0 ||(x>=200)\u00a0 ||(x<=210)", "c)\u00a0 (x>=1)\u00a0 &&(x<=10)||(x>= 200)\u00a0 &&(x<=210)", "D) (x > =1)||(x< =10)\u00a0 &&\u00a0 (x> = 200)||(x<=210)", "*72", "C", "\u8868\u793a\u56fe\u4e2d\u5750\u6807\u8f74\u4e0a\u9634\u5f71\u90e8\u5206\u7684\u6b63\u786e\u8868\u8fbe\u5f0f\u662f:", "/////||//////|", "/////||//////|", "\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013>\u00a0\u00a0 X", "a\u00a0 b\u00a0\u00a0\u00a0\u00a0\u00a0 c", "A)(X<=A)&&(X>=B)&&(X<=C)", "B) (x< =a)||(b<=x<=c)", "C)(x<=a)|| (x> =b)\u00a0 &&\u00a0 (x<=c)", "D)(x < =a)&&(b< = x < = c)", "*73", "C", "\u5224\u65adchar\u578b\u53d8\u91cfch\u662f\u5426\u4e3a\u5927\u5199\u5b57\u6bcd\u7684\u6b63\u786e\u8868\u8fbe\u5f0f\u662f\u4e00\u4e00\u4e00\u3002", "A)\u2019 A\u2019 <=ch<=\u2019z'\u00a0\u00a0\u00a0\u00a0 B)(ch> = \u2018A\u2019)&(ch<=\u2019 z\u2019 )", "C)(ch>=\u2019 A\u2019 )&&(ch<=\u2019z') D)(\u2018 A\u2019 < = ch)AND(\u2018z\u2019> = ch)", "*74", "D", "\u8bbex,y \u548cz\u662fint\u578b\u53d8\u91cf,\u4e14x = 3,y= 4,z= 5,\u5219\u4e0b\u9762\u8868\u8fbe\u5f0f\u4e2d\u503c\u4e3a0\u7684\u662f", "A)\u2019y'&&\u2019y\u2019", "B)x < =y", "C) x||y+z&&y-z", "D) !(x<Y)&&!Z||1)", "*75", "C", "\u5df2\u77e5x =43,ch=\u2019A',y=0\u5219\u8868\u8fbe\u5f0f(x > = y && ch<\u2019B'&&!Y) \u7684\u503c\u662f", "A)0\u00a0\u00a0 B)\u8bed\u6cd5\u9519\u00a0 \u00a0C)1\u00a0\u00a0 D)\u201d\u5047\u201d", "*76", "C", "\u82e5\u5e0c\u671b\u5f53A\u7684\u503c\u4e3a\u5947\u6570\u65f6,\u8868\u8fbe\u5f0f\u7684\u503c\u4e3a\u201d\u771f\u201d,A\u7684\u503c\u4e3a\u5076\u6570 \u8868\u8fbe\u5f0f\u7684\u503c", "\u4e3a\u201d\u5047\u201d\u3002\u5219\u4ee5\u4e0b\u4e0d\u80fd\u6ee1\u8db3\u8981\u6c42\u7684\u8868\u8fbe\u5f0f\u662f:", "A)\u00a0 A%2= =1\u00a0\u00a0\u00a0 B)!(A%2 = =0)\u00a0\u00a0 C)!(A%2)\u00a0\u00a0\u00a0 D)\u00a0 A%2", "*77", "B", "\u8bbe\u6709 int a = 1,b=2,c =3, d =4, m=2, n=2;", "\u6267\u884c(m= a>b)&&(n=c>d)\u540en\u7684\u503c\u4e3a:", "A)1B )2\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)3\u00a0\u00a0\u00a0\u00a0\u00a0 D)4", "*78", "D", "\u5224\u65adchar\u578b\u53d8\u91cfc1\u662f\u5426\u4e3a\u5c0f\u5199\u5b57\u6bcd \u6b63\u786e\u8868\u8fbe\u5f0f\u4e3a:", "A)\u2019 a\u2019 <=cl<=\u2019 z\u2019\u00a0\u00a0\u00a0 B)\u00a0 (cl> = a)&&(cl<=z)", "C)(\u2018 a\u2019 >=cl)||(\u2018 z\u2019 < = cl)\u00a0 D)(c1>=\u2019a')&&(cl<=\u2019z')", "*79", "B", "\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f:", "#include\u00a0 \u201cstdio.h\u201d", "main()\u00a0\u00a0\u00a0\u00a0\u00a0 ,,\u00a0 \\", "{int\u00a0 a,b,d= 241;", "a=d/100 % 9", "b= (\u4e001)&&(\u4e001);", "printf(\u201c%d,%d\u201d,a\u00a0 ,b);", "}", "A)6,1\u00a0\u00a0\u00a0\u00a0 B)2,1\u00a0\u00a0\u00a0\u00a0 C) 6,0\u00a0\u00a0\u00a0\u00a0 D)2,0", "*80", "C", "\u6267\u884c\u4ee5\u4e0b\u8bed\u53e5\u540ea\u7684\u503c\u4e3a:", "int a,b,c;", "a= b= c= 1;", "++a||++b&&++c", "A)\u9519\u8bef\u00a0\u00a0\u00a0 B)\u00a00\u00a0\u00a0\u00a0\u00a0\u00a0 C)\u00a0 2\u00a0 D)\u00a0 1", "*81", "A", "\u6267\u884c\u4ee5\u4e0b\u8bed\u53e5\u540eb \u7684\u503c\u4e3a:", "int\u00a0 a=5,b=6,w=1,x=2,y=3,z=4;", "(a=w>x)&&(b=y>z);", "A)\u00a0 6\u00a0\u00a0\u00a0\u00a0 B)\u00a00\u00a0\u00a0\u00a0\u00a0 C)\u00a0 1\u00a0\u00a0\u00a0\u00a0\u00a0 D)\u00a0 4", "*82", "C", "\u4ee5\u4e0b\u4e0d\u6b63\u786e\u7684if\u8bed\u53e5\u5f62\u5f0f\u662f:", "A)if(x>y && x!=y);", "B)if(x= =y)\u00a0 x+=y", "C)if(x != y)scanf(\u201c%d\u201d,&x )else scanf(\u201c%d\u201d,&y);", "D)if(X<Y)&NBSP;{X++;Y++;}", "*83", "A", "\u4e0b\u5217\u8fd0\u7b97\u7b26\u4e2d\u4f18\u5148\u7ea7\u6700\u4f4e\u7684\u662f:", "A)?:\u00a0\u00a0 B)&&\u00a0 \u00a0\u00a0\u00a0c)+\u00a0\u00a0\u00a0\u00a0 D)\u00a0 !=", "*84", "B", "\u4ee5\u4e0bif\u8bed\u53e5\u8bed\u6cd5\u6b63\u786e\u7684\u662f\u4e00\u4e00\u4e00\u3002", "A)if(x>0)", "printf(\u201c%f\u201d,x)", "else\u00a0 printf(\u201c%f\u201d,- -x);", "B) if (x>0)", "{x=x+y;printf(\u201c%f\u201d,x);}", "else\u00a0 printf(\u201cf\u201d,-x);", "C) if(x>0)", "{x=x+y;\u00a0 prinrf(\u201c%f\u201d,x);};", "else\u00a0 printf(\u201c%f\u201d,-x);", "D) if(x > 0)", "{ x = x +y;printf(\u201c%f\u201d,x)}", "else\u00a0 printf(\u201c%f\u201d,-x);", "*85", "D", "\u8bf7\u9605\u8bfb\u4ee5\u4e0b\u7a0b\u5e8f:", "main()", "{int\u00a0 a=5,b=0,c=0;", "if(a=b+c)\u00a0 printf(\u201c***\\n\u00a0 \u201c);", "e1se\u00a0\u00a0 printf(\u201c$$$\\n\u201d);", "\u4ee5\u4e0a\u7a0b\u5e8f :", "A)\u6709\u8bed\u6cd5\u9519\u4e0d\u80fd\u901a\u8fc7\u7f16\u8bd1\u00a0\u00a0 B)\u53ef\u4ee5\u901a\u8fc7\u7f16\u8bd1\u4f46\u4e0d\u80fd\u901a\u8fc7\u8fde\u63a5", "C)\u8f93\u51fa***D)\u8f93\u51fa$$$", "*86", "C", "\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f :", "main()", "{int m=5;", "if(m++> 5)\u00a0 printf(\u201d %d\\n\u201d,m);", "e1se\u00a0\u00a0\u00a0\u00a0 printf(\u201c%d\\n\u201d,m- \u2013 );", "}", "A)4\u00a0\u00a0\u00a0 B)5\u00a0\u00a0 C)6\u00a0\u00a0\u00a0 D)7", "*87", "B", "\u5f53a=1,b=3,c=5,d=4 ,\u6267\u884c\u5b8c\u4e0b\u9762\u4e00\u6bb5\u7a0b\u5e8f\u540ex \u7684\u503c\u662f :", "if(a", "if(c", "else", "if(a", "if(b", "else x= 3;", "else x=6;", "else x=7;", "A)18)2\u00a0\u00a0\u00a0\u00a0\u00a0 C)3\u00a0\u00a0\u00a0\u00a0\u00a0 D)6", "*88", "C", "\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f:", "main()", "{int\u00a0 a=100,x =10,y=20,okl=5,ok2=0;", "if\u00a0 (x", "if(y ! =10)", "if(!okl)\u00a0 a=1;", "else", "if(ok2)\u00a0 a=10;", "a=-1:", "printf( \u201c%d\\n\u201d,a )", "}", "A)\u00a0 1\u00a0\u00a0\u00a0\u00a0\u00a0 B)\u00a00\u00a0\u00a0\u00a0 C)\u4e001\u00a0\u00a0\u00a0 D)\u503c\u4e0d\u786e\u5b9a", "*89", "B", "\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f:", "main()", "{int\u00a0 x= 2,y= \u4e001,z=2;", "if (x<Y)&NBSP;", "if(y<0)\u00a0 z= 0;", "else\u00a0\u00a0\u00a0 z+ =1;", "printf(\u201c%d\\n\u201d,z);", "}", "A)3\u00a0\u00a0\u00a0\u00a0\u00a0 B )2\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0C)1\u00a0\u00a0\u00a0\u00a0\u00a0 D) 0", "*90", "B", "\u4e3a\u4e86\u907f\u514d\u5728\u5d4c\u5957\u7684\u6761\u4ef6\u8bed\u53e5If\u4e00else\u4e2d\u4ea7\u751f\u4e8c\u4e49\u6027,C\u8bed\u8a00\u89c4\u5b9aelse\u5b50\u53e5", "\u603b\u662f\u4e0e(\u00a0 )\u914d\u5bf9\u3002", "A)\u7f29\u6392\u4f4d\u7f6e\u76f8\u540c\u7684if\u00a0\u00a0\u00a0\u00a0 B)\u5176\u4e4b\u524d\u6700\u8fd1\u7684if", "C) \u4e4b\u540e\u6700\u8fd1\u7684if D)\u540c\u4e00\u884c\u4e0a\u7684if", "*91", "B", "\u4ee5\u4e0b\u4e0d\u6b63\u786e\u7684\u8bed\u53e5\u4e3a:", "A)\u00a0 if(x>y);", "B)\u00a0 if\u00a0 (x= y) &&(x! = 0)\u00a0 x+= y;", "C)\u00a0 if(x!= y)scanf(\u201c%d\u201d,&x);\u00a0 else\u00a0 scanf(\u201c%d\u201d,&y);", "D)if(x< y){x++ ;y\u5341\u5341;}", "*92", "B", "\u8bf7\u9605\u8bfb\u4ee5\u4e0b\u7a0b\u5e8f:", "#include<STDIO.&NBSP;H />", "main()", "{float\u00a0 a,b", "scanf(\u201c%f\u201d,&a);", "if (a<10.0) b=1.0/x;", "else if((a<0.5)&&(a!=2.0))b= 1.0/(a\u53412.0);", "else\u00a0 if(a<10.0)\u00a0 b= 1.0/x ;", "else\u00a0 b=10.0;", "printf(\u201c%f\\n\u201d,y);", "}", "\u82e5\u8fd0\u884c\u65f6\u8f93\u51652.0(\u56de\u8f66),\u5219\u4e0a\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f:", "A)0.000000\u00a0\u00a0 B)0.500000\u00a0 C)\u00a0 1. 000000\u00a0\u00a0 D) 0.250000", "*93", "B", "\u82e5\u6709\u6761\u4ef6\u8868\u8fbe\u5f0f(exp) ?\u00a0 a++:b\u2013,\u5219\u4ee5\u4e0b\u8868\u8fbe\u5f0f\u4e2d\u80fd\u5b8c\u5168\u7b49\u4ef7\u4e8e\u8868", "\u8fbe\u5f0f(exp)\u7684\u662f:", "A)\u00a0 (exp==0) B)\u00a0 (exp!=0)", "C)\u00a0 (exp== 1) D)\u00a0 (exp!=1)", "*94", "A", "\u82e5\u8fd0\u884c\u65f6\u7ed9\u53d8\u91cfx \u8f93\u516512,\u5219\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f:", "main()", "{int\u00a0 x,y;", "scanf(\u201c%d\u201d,&x);", "y=x > 12?x+10:\u00a0 x\u4e0012;", "printf(\u201c%d\\n\u201d,y);", "}", "A)0\u00a0\u00a0\u00a0\u00a0\u00a0 B)22C)12\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 0)10", "*95", "D", "\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f:", "main()", "{int\u00a0 k= 4,a=3,b=2,c=1;", "printf(\u201c\\n %d\\n\u201d,k< a ? k:c", "}", "A)4\u00a0\u00a0\u00a0\u00a0\u00a0 B )3\u00a0\u00a0\u00a0\u00a0 C)2\u00a0\u00a0\u00a0\u00a0\u00a0 D)1", "*96", "B", "\u6267\u884c\u4ee5\u4e0b\u7a0b\u5e8f\u6bb5\u540e\u3001\u53d8\u91cfa,b,c\u7684\u503c\u5206\u522b\u662f\u4e00\u3002", "int\u00a0 x=10,y=9;", "int\u00a0 a,b,c;", "a =(- -x = = y++)?- -x:++y ;", "b = x ++;", "c = y;", "A)a=9,b= 9,c= 9\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B )a=8,b=8,c=10", "C)a=9,b= 10,c=9\u00a0\u00a0\u00a0\u00a0\u00a0 0)a=1,b= 11,c=10", "*97", "A", "\u82e5w,x,y,z,m\u5747\u4e3aint\u578b\u53d8\u91cf,\u5219\u6267\u884c\u4e0b\u9762\u8bed\u53e5\u540e\u7684m\u503c\u662f:", "w= 1;x = 2;y= 3;z=4;", "m=(w", "m= (m", "m=(m", "A)1B )2\u00a0\u00a0\u00a0\u00a0 C)3D)4", "*98", "D", "\u82e5w=1,X = 2,y= 3,z=4,\u5219\u6761\u4ef6\u8868\u8fbe\u5f0fw<Y<Z?Y:Z\u7684\u503c\u662f:&NBSP;&NBSP;", "A)4\u00a0\u00a0\u00a0\u00a0\u00a0 B)3\u00a0\u00a0\u00a0\u00a0\u00a0 C)20)1", "*99", "C", "\u6267\u884c\u4ee5\u4e0b\u7a0b\u5e8f\u6bb5\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f", "int\u00a0 w=3,\u00a0 z=7,x =10;", "printf(\u201c%d\\n\u201d,x> 10?\u00a0 x+100:x \u4e0010);", "printf(\u201c%d\\n\u201d,w++||z++ );", "printf(\u201c%d\\n\u201d,!w>z);", "printf(\u201c%d\\n\u201d,w&&z);", "A)0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)\u00a0\u00a01\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)0\u00a0\u00a0\u00a0\u00a0\u00a0 D) 0", "1\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a01", "1\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 0", "1\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 0", "*100", "C", "\u8bbe\u6709\u7a0b\u5e8f\u6bb5", "int\u00a0 k=10;", "while\u00a0 (k=0)\u00a0 k= k\u20141;", "\u5219\u4e0b\u9762\u63cf\u8ff0\u4e2d\u6b63\u786e\u7684\u662f", "A)\u00a0 while\u5faa\u73af\u6267\u884c10\u6b21\u00a0\u00a0\u00a0\u00a0\u00a0 B)\u5faa\u73af\u662f\u65e0\u9650\u5faa\u73af", "C)\u5faa\u73af\u4f53\u8bed\u53e5\u4e00\u6b21\u4e5f\u4e0d\u6267\u884c\u00a0\u00a0 D)\u5faa\u73af\u4f53\u8bed\u53e5\u6267\u884c\u4e00\u6b21", "*101", "B", "\u6709\u4ee5\u4e0b\u7a0b\u5e8f\u6bb5", "int\u00a0 x=0,s=0;", "while\u00a0 (!\u00a0 x!= 0)\u00a0 s+=++x;", "printf(\u201c%d\u201d,s);", "\u5219", "A)\u8fd0\u884c\u7a0b\u5e8f\u6bb5\u540e\u8f93\u51fa0 B)\u8fd0\u884c\u7a0b\u5e8f\u6bb5\u540e\u8f93\u51fa1", "C)\u7a0b\u5e8f\u6bb5\u4e2d\u7684\u63a7\u5236\u8868\u8fbe\u5f0f\u662f\u975e\u6cd5\u7684\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)\u7a0b\u5e8f\u6bb5\u6267\u884c\u65e0\u9650\u6b21", "*101", "A", "\u8bed\u53e5while(!E)\u4e2d\u7684\u8868\u8fbe\u5f0f!E\u7b49\u4ef7\u4e8e:", "A)\u00a0 E==0\u00a0\u00a0 B)\u00a0 E!=1\u00a0 C)\u00a0 E!=0\u00a0\u00a0\u00a0 D)\u00a0 E==1", "*", "A", "\u4e0b\u9762\u7a0b\u5e8f\u6bb5\u7684\u8fd0\u884c\u7ed3\u679c\u662f", "a=1;b= 2;c=2;", "while(a<B<C)&NBSP;&NBSP;{&NBSP;&NBSP;&NBSP;T=&NBSP;A;A=&NBSP;B;&NBSP;&NBSP;B=T;&NBSP;C-&NBSP;-;}", "printf(\u201c%d,%d,%d\u201d,a,b,c);", "A)1,2,0\u00a0\u00a0\u00a0 B)2,1,0\u00a0\u00a0\u00a0 C)1,2,1\u00a0\u00a0\u00a0 D)2,1,1", "*102", "D", "\u4e0b\u9762\u7a0b\u5e8f\u6bb5\u7684\u8fd0\u884c\u7ed3\u679c\u662f:", "x = y= 0;", "while(x<15)\u00a0 y++,x + = ++y;", "printf(\u201c%d,%d\u201d,y,x);", "A)\u00a0 20,7\u00a0\u00a0 \u00a0B)6,12\u00a0\u00a0\u00a0\u00a0\u00a0 c)\u00a0 20,8\u00a0\u00a0\u00a0\u00a0\u00a0 D)8,20", "*", "C", "\u3010\u98985.6\u3011\u4e0b\u9762\u7a0b\u5e8f\u6bb5\u7684\u8fd0\u884c\u7ed3\u679c\u662f", "if\u00a0\u00a0\u00a0 n=0;", "while(n++<=2);\u00a0 printf(\u201c%d\u201d,n);\u00a0 A)\u00a0 2\u00a0\u00a0\u00a0\u00a0\u00a0 B)\u00a03C)\u00a0 4\u00a0\u00a0\u00a0\u00a0 D)\u6709\u8bed\u6cd5\u9519", "*103", "B", "\u8bbe\u6709\u7a0b\u5e8f\u6bb5", "t=0;", "while\u00a0 (printf\u201d*\u201d))", "{t++;", "if(t<3)\u00a0 break", "}", "\u9762\u63cf\u8ff0\u6b63\u786e\u7684\u662f:", "A)\u5176\u4e2d\u5faa\u73af\u63a7\u5236\u8868\u8fbe\u5f0f\u4e0e0\u7b49\u4ef7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)\u5176\u4e2d\u5faa\u73af\u63a7\u5236\u8868\u8fbe\u5f0f\u4e0e\u20190\u2032\u7b49\u4ef7", "C)\u5176\u4e2d\u5faa\u73af\u63a7\u5236\u8868\u8fbe\u5f0f\u662f\u4e0d\u5408\u6cd5\u7684\u00a0\u00a0\u00a0\u00a0 D)\u4ee5\u4e0a\u8bf4\u6cd5\u90e8\u4e0d\u5bf9", "*104", "B", "\u4e0b\u9762\u7a0b\u5e8f\u7684\u529f\u80fd\u662f\u5c06\u4ece\u952e\u76d8\u8f93\u5165\u7684\u4e00\u5bf9\u6570,\u7531\u5c0f\u5230\u5927\u6392\u5e8f\u8f93\u51fa\u3002\u5f53\u8f93\u5165\u4e00\u5bf9\u76f8\u7b49\u6570\u65f6\u7ed3\u675f\u5faa\u73af,\u8bf7\u9009\u62e9\u586b\u7a7a:", "#indude", "main()", "{int\u00a0 a,b,t;", "scanf(\u201c%d%d\u201d,&a,&b);", "while(\u00a0 \u30101\u3011\u00a0 )", "{if(a>b)", "{t=a;a=b;b=t;}", "printf(\u201c%d,%d\u201d,a,b);", "scahf(\u201c%d%d\u201d,&a,&b);\u4eba", "}", "\u30101\u3011\u00a0\u00a0 A)\u00a0 !a=b\u00a0\u00a0\u00a0 B)\u00a0 a!=b\u00a0\u00a0\u00a0\u00a0 C)\u00a0 a= =b\u00a0\u00a0\u00a0\u00a0 D)\u00a0 a=b", "*105", "C", "\u4e0b\u9762\u7a0b\u5e8f\u7684\u529f\u80fd\u662f\u4ece\u952e\u76d8\u8f93\u5165\u7684\u4e00\u7ec4\u5b57\u7b26\u4e2d\u7edf\u8ba1\u51fa\u5927\u5199\u5b57\u6bcd\u7684\u4e2a\u6570m\u548c\u5c0f\u5199\u5b57\u6bcd\u7684\u4e2a\u6570n,\u5e76\u8f93\u51fam\u3001n\u4e2d\u7684\u8f83\u5927\u8005,\u8bf7\u9009\u62e9\u586b\u7a7a:", "#indude\u00a0\u00a0 \u201cstdio.h\u201d", "main()", "{int\u00a0 m=0,n=0;", "char\u00a0\u00a0\u00a0 c;\u00a0 1", "while((\u30101\u3011)!=\u2019\\n\u2019)", "{ if(c>=\u2019A\u2019 && C<=\u2019Z') m++ ;", "if(c>=\u2019a'\u00a0 && c<=\u2019z')\u00a0 n++; }", "printf(\u201c%d\\n\u201d,\u00a0 m<M);&NBSP;&NBSP;&NBSP;&NBSP;}&NBSP;&NBSP;&NBSP;&NBSP;&NBSP;", "1\u3011 A) c=getchar()\u00a0 B)\u00a0 getchar()\u00a0 C)c=getchar()\u00a0 D)\u00a0 scanf(\u201c%c\u201d,c)", "*106", "C", "\u4e0b\u9762\u7a0b\u5e8f\u7684\u529f\u80fd\u662f\u5c06\u5c0f\u5199\u5b57\u6bcd\u53d8\u6210\u5bf9\u5e94\u5927\u5199\u5b57\u6bcd\u540e\u7684\u7b2c\u4e8c\u4e2a\u5b57\u6bcd\u3002\u5176\u4e2dy\u53d8\u6210A,z \u53d8\u6210B.\u8bf7\u9009\u62e9\u586b\u7a7a\u3002", "#include \u201cstdio. H\u201d", "main()", "{\u00a0\u00a0\u00a0 char c;", "while((c=getchar())!=\u2019\\n\u2019)", "{if(c>= \u2018a\u2019&& c<=\u2019z')", "c \u2013 = 30;", "if(c>\u2019z\u2019 && c<=\u2019z'+ 2)", "\u30102\u3011; }", "printf(\u201d %c\u201d,c)", "}", "\u30102\u3011A)\u00a0 c=\u2019B'\u00a0\u00a0 B)\u00a0 c=\u2019A'\u00a0\u00a0\u00a0\u00a0\u00a0 C)\u00a0 c-=26\u00a0\u00a0\u00a0\u00a0 D)\u00a0 c=c+26", "*107", "B", "\u4e0b\u9762\u7a0b\u5e8f\u7684\u529f\u80fd\u662f\u5728\u8f93\u5165\u7684\u4e00\u6279\u6b63\u6574\u6570\u4e2d\u6c42\u51fa\u6700\u5927\u8005,\u8f93\u51650\u7ed3\u675f\u5faa\u73af,\u8bf7\u9009\u62e9\u586b\u7a7a\u3002", "#include", "main()", "{int a,max= 0;", "scanf(\u201c%d\u201d,&a)", "while(\u30101\u3011)", "{if(max<A&NBSP;&NBSP;MAX=&NBSP;A;&NBSP;&NBSP;&NBSP;&NBSP;&NBSP;&NBSP;", "scanf(\u201c%d\u201d,&a); }", "printf(\u201c%d\u201d ,max\u00a0 );}", "\u30101\u3011\u00a0 A)\u00a0 a==o\u00a0\u00a0\u00a0 B)A\u00a0\u00a0\u00a0\u00a0 C)\u00a0 !A = = 1D)!a", "*108", "C", "\u4e0b\u9762\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f\u3002", "#include<STDIO.H&NBSP;&NBSP; />", "main()", "{ int\u00a0 num= 0;", "while(num<= 2)", "{num++", "printf (\u201c%d\\n\u201d, num);}", "}", "A)1\u00a0\u00a0\u00a0\u00a0\u00a0 B )\u00a01\u00a0\u00a0 c)1D)1", "2\u00a0\u00a0\u00a0\u00a0\u00a0 2\u00a0 2", "3\u00a0 3", "4", "*109", "C", "\u4ee5\u4e0b\u7a0b\u5e8f\u6bb5", "x= -1;", "do", "{x=x*x;}", "while(!x);", "A)\u662f\u6b7b\u5faa\u73af B)\u5faa\u73af\u6267\u884c\u4e8c\u6b21", "C)\u5faa\u73af\u6267\u884c\u4e00\u6b21\u00a0\u00a0\u00a0\u00a0 D)\u6709\u8bed\u6cd5\u9519\u8bef", "*110", "C", "\u4ee5\u4e0b\u63cf\u8ff0\u4e2d\u6b63\u786e\u7684\u662f:", "A)\u7531\u4e8edo\u4e00while\u5faa\u73af\u4e2d\u5faa\u73af\u4f53\u8bed\u53e5\u53ea\u80fd\u662f\u4e00\u6761\u53ef\u6267\u884c\u8bed\u53e5,\u6240\u4ee5\u5faa\u73af\u4f53\u5185\u4e0d\u80fd\u4f7f\u7528\u590d\u5408\u8bed\u53e5", "B)\u00a0 do\u4e00while\u5faa\u73af\u7531do\u5f00\u59cb,\u7528while\u7ed3\u675f,\u5728while(\u8868\u8fbe\u5f0f)\u540e\u9762\u4e0d\u80fd\u5199\u5206\u53f7", "C)\u5728do\u4e00while\u5faa\u73af\u4f53\u4e2d,\u4e00\u5b9a\u8981\u6709\u80fd\u4f7fwhile\u540e\u8868\u8fbe\u5f0f\u503c\u53d8\u4e3a\u96f6(\u201c\u5047\u201d)\u7684\u64cd\u4f5c", "D)do\u4e00while\u5faa\u73af\u4e2d,\u6839\u636e\u60c5\u51b5\u53ef\u4ee5\u7701\u7565while", "*111", "B", "\u82e5\u6709\u5982\u4e0b\u8bed\u53e5", "int\u00a0 x=3;", "do { printf(\u201d %d\\n\u201d,x -=2);} while(!(\u2013x));", "\u5219\u4e0a\u9762\u7a0b\u5e8f\u6bb5", "A)\u8f93\u51fa\u7684\u662f 1\u00a0 B)\u8f93\u51fa\u7684\u662f1\u548c-2", "C)\u8f93\u51fa\u7684\u662f3\u548c0\u00a0\u00a0\u00a0\u00a0\u00a0 D)\u662f\u6b7b\u5faa\u73af", "*112", "C", "\u4e0b\u9762\u7a0b\u5e8f\u7684\u529f\u80fd\u662f\u8ba1\u7b97\u6b63\u6574\u65702345\u7684\u5404\u4f4d\u6570\u5b57\u5e73\u65b9\u548c,\u8bf7\u9009\u62e9\u586b\u7a7a\u3002", "#include<STDIO.&NBSP;H />", "main()", "{int\u00a0 n,sum=0;", "n=2345", "do{ sum=sum+(n%10)*n%10);", "n=\u30102\u3011;", "}while(n);", "printf(\u201csum=%d\u201d,sum);}", "\u30102\u3011 A)\u00a0 n/1000\u00a0\u00a0 B)n/100\u00a0\u00a0\u00a0\u00a0\u00a0 C)\u00a0 n/10\u00a0\u00a0\u00a0 D)\u00a0 n%10", "*113", "B", "\u4e0b\u9762\u7a0b\u5e8f\u662f\u4ece\u952e\u76d8\u8f93\u5165\u5b66\u53f7,\u7136\u540e\u8f93\u51fa\u5b66\u53f7\u4e2d\u767e\u4f4d\u6570\u5b57\u662f3\u7684\u5b66\u53f7,\u8f93\u51650\u65f6\u7ed3\u675f\u5faa\u73af\u3002\u8bf7\u9009\u62e9\u586b\u7a7a\u3002", "#\u00a0 include<STDIO.&NBSP;H />", "main()", "{1ong\u00a0 int\u00a0 num;", "scanf(\u201c%ld\u201d,&num);", "do\u00a0 { if( \u30101\u3011) printf(\u201c%ld\u201d,num);", "scanf(\u201c%ld\u201d,&num);", "}while(!num==0);}", "\u30101\u3011 A)num%100/10==3 B)num/100%10==3", "C)num%10/10==3 D)num/10%10==3", "\u00a0", "*114", "B", "\u4e0b\u9762\u7a0b\u5e8f\u7684\u529f\u80fd\u662f\u628a316\u8868\u793a\u4e3a\u4e24\u4e2a\u52a0\u6570\u7684\u548c,\u4f7f\u4e24\u4e2a\u52a0\u6570\u5206\u522b\u80fd\u88ab13\u548c11\u6574\u9664\u3002\u8bf7\u9009\u62e9\u586b\u7a7a\u3002", "#include", "main()", "{int\u00a0 i=0,j,k;", "do{\u00a0 i++;k=316\u4e0013*i;}", "while(\u30101\u3011);j=k/11;", "printf(\u201d 316=13* %d\u534111*%d\u201d,i,j);", "}", "\u30101\u3011A)k/11\u00a0\u00a0\u00a0 B) k%11\u00a0\u00a0\u00a0 C) k/11==0\u00a0\u00a0 D) k/11== 0", "*115", "D", "\u4e0b\u9762\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f:", "#indude", "main()", "{int\u00a0 y=10;", "do{y\u2013;}", "while(\u2013y);", "printf(\u201c%d\\n\u201d,y\u2013);", "}", "A)\u4e001B)1\u00a0\u00a0\u00a0\u00a0\u00a0 C)8\u00a0\u00a0\u00a0\u00a0\u00a0 D) 0", "*116", "D", "\u82e5\u8fd0\u884c\u4ee5\u4e0b\u7a0b\u5e8f\u65f6,\u4ece\u952e\u76d8\u8f93\u5165ADescriptor(CR)\u8868\u793a\u56de\u8f66),\u5219\u4e0b\u9762\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f:", "#include<STDIO.&NBSP;H />", "main()", "{ char c;", "int v0=0.v1=0,v2=0;", "do{", "switch(c=getchar())", "{case \u2018a\u2019:case\u00a0 \u2018A\u2019\u00a0 :", "case \u2018e\u2019:case\u00a0 \u2018 E\u2019 :", "case \u2018i\u2019:case \u2018I\u2019 :", "case \u2018o\u2019:Case\u00a0 \u2018O\u2019\u00a0 :", "case \u2018u\u2019:case\u00a0 \u2018U\u2019\u00a0 :vl+=1;", "default:v0+=1;v2+=1\u00a0 ;}\u00a0\u00a0\u00a0\u00a0 ;", "while(c!=\u2019\\n\u2019);", "printf(\u201cv0=%d,v1=%d,v2=%d\\n\u201d,v0,v1,v2);", "\u00a0", "}", "A)v0=7,v1=4,v2=7B)\u00a0 v0=8,v 1=4,v2=8", "C)v0= 11,v1=4,v2=11\u00a0\u00a0\u00a0\u00a0\u00a0 D)\u00a0 v0=12,vl=4,v2=12", "*117", "B", "\u4e0b\u9762\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f:", "#include<STDIO.&NBSP;H />", "main()", "{int\u00a0\u00a0 a==1,b=10;", "do", "{b-=a;a++;}while(b\u2013<0);", "printf(\u201ca=%d,b=%d\\n\u201d,a,b);", "}\u00a0\u00a0\u00a0 \u2018", "A)a=3,b=11\u00a0\u00a0 B )a=2,b=8\u00a0\u00a0\u00a0 C)a=1,\u00a0 b=\u4e001\u00a0\u00a0\u00a0 D)a=4,b=9", "*118", "D", "\u4e0b\u9762\u6709\u5173for\u5faa\u73af\u7684\u6b63\u786e\u63cf\u8ff0\u662f:", "A)\u00a0 for\u5faa\u73af\u53ea\u80fd\u7528\u4e8e\u5faa\u73af\u6b21\u6570\u5df2\u7ecf\u786e\u5b9a\u7684\u60c5\u51b5", "B)\u00a0 for\u5faa\u73af\u662f\u5148\u6267\u884c\u5faa\u73af\u4f53\u8bed\u53e5,\u540e\u5224\u65ad\u8868\u8fbe\u5f0f", "C)\u00a0 \u5728for\u5faa\u73af\u4e2d,\u4e0d\u80fd\u7528break\u8bed\u53e5\u8df3\u51fa\u5faa\u73af\u4f53", "D)\u00a0 for\u5faa\u73af\u7684\u5faa\u73af\u4f53\u8bed\u53e5\u4e2d, \u53ef\u4ee5\u5305\u542b\u591a\u6761\u8bed\u53e5,\u4f46\u5fc5\u987b\u7528\u82b1\u62ec\u53f7\u62ec\u8d77\u6765", "*119", "B", "\u5bf9for(\u8868\u8fbe\u5f0f1;;\u8868\u8fbe\u5f0f3)\u53ef\u7406\u89e3\u4e3a:", "A)\u00a0 for(\u8868\u8fbe\u5f0f1;\u00a0 0;\u8868\u8fbe\u5f0f3)", "B)\u00a0 for(\u8868\u8fbe\u5f0f1;1;\u8868\u8fbe\u5f0f3)", "C)\u00a0\u00a0\u00a0 for(\u8868\u8fbe\u5f0f1;\u8868\u8fbe\u5f0f1;\u8868\u8fbe\u5f0f3)", "D)\u00a0\u00a0\u00a0 for(\u8868\u8fbe\u5f0f1;\u8868\u8fbe\u5f0f3;\u8868\u8fbe\u5f0f3)", "*120", "B", "\u82e5i\u4e3a\u6574\u578b\u53d8\u91cf,\u5219\u4ee5\u4e0b\u5faa\u73af\u6267\u884c\u6b21\u6570\u662f:", "for\u00a0 (i=2;i==0;)\u00a0 printf(\u201c%d\u201d,i\u2013 );", "A)\u65e0\u9650\u6b21\u00a0\u00a0 B) 0\u6b21\u00a0\u00a0 C) 1 \u6b21\u00a0\u00a0\u00a0\u00a0 D)\u00a0 2\u6b21", "*121", "C", "\u4ee5\u4e0bfor\u5faa\u73af\u7684\u6267\u884c\u6b21\u6570\u662f:", "for\u00a0 (x=0,y\u4e000;\u00a0 (y=123)&&(x<4);\u00a0 x++);", "A)\u662f\u65e0\u9650\u5faa\u73af B)\u5faa\u73af\u6b21\u6570\u4e0d\u5b9a C)\u6267\u884c4\u6b21\u00a0 D)\u6267\u884c3\u6b21", "*122", "A", "\u4ee5\u4e0b\u4e0d\u662f\u65e0\u9650\u5faa\u73af\u7684\u8bed\u53e5\u4e3a:", "A)\u00a0 for\u00a0 (y=0,x=1;x > ++y;x =i++)\u00a0 i=x ;", "B)\u00a0\u00a0 for (;;\u00a0 x++=i);", "C)\u00a0 while\u00a0 (1){x ++;}", "D)\u00a0 for(i=10; ;i\u2013)sum+=i;", "*123", "C", "\u4e0b\u9762\u7a0b\u5e8f\u6bb5\u7684\u8fd0\u884c\u7ed3\u679c\u662f:", "for (y= 1;y<10;) y=((x=3* y,x+1),x-1);", "printf\u00a0 (\u201cx=%d,y=%d\u201d,x,y);", "A)x=27,y=27\u00a0\u00a0 B)x=12,y=13\u00a0\u00a0 C)x=15,y=14\u00a0\u00a0 D)x=y=27", "*124", "D", "\u4e0b\u9762\u7a0b\u5e8f\u6bb5\u7684\u8fd0\u884c\u7ed3\u679c\u662f", "for(x=3;x<6;x++)printf((x %2)?(\u201c**%d\u201d):(\u201d ##%d\\n\u201d),x);", "A)**3\u00a0\u00a0\u00a0\u00a0\u00a0 B )##3\u00a0\u00a0\u00a0\u00a0 C)##3\u00a0 D)**3##4", "##4\u00a0 **4 **4##5 **5", "**5\u00a0 ##5", "*125", "C", "\u4e0b\u5217\u7a0b\u5e8f\u6bb5\u4e0d\u662f\u6b7b\u5faa\u73af\u7684\u662f", "A)\u00a0 int\u00a0 i=100;", "whiLe\u00a0 (1)", "{i=i%100+1;", "if\u00a0 (i>100)\u00a0 break;", "}", "B)\u00a0 for(;;);", "C)\u00a0 int\u00a0 k=0;", "do{++k;}\u00a0 while\u00a0 (k> =0)\u00a0 ;", "D)\u00a0 int\u00a0 s=36;", "while\u00a0 (s);\u2013s", "*126", "C", "\u6267\u884c\u8bed\u53e5for(i=1;i++<4;);\u540e\u53d8\u91cfi\u7684\u503c\u662f", "A)3\u00a0\u00a0\u00a0 B )4\u00a0\u00a0\u00a0\u00a0 C)5\u00a0\u00a0\u00a0 D)\u4e0d\u5b9a", "*127", "D", "\u4e0b\u9762\u7a0b\u5e8f\u7684\u529f\u80fd\u662f\u8ba1\u7b97:\u81f350\u4e2d\u662f7\u7684\u500d\u6570\u7684\u6570\u503c\u4e4b\u548c,\u8bf7\u9009\u62e9\u586b\u7a7a\u3002", "#include<STDIO.&NBSP;H />\u00a0\u00a0\u00a0 \u2022", "main()", "{int\u00a0 i,sum= 0;", "for(i=1;i<=50;i++)", "if([1])\u00a0 sum+=i;", "printf(\u201c%d\u201d,sum);", "}", "A) (int)(i/7)==i/7", "B) (int)i/7==i/7", "C)\u00a0 i%7= 0", "D)\u00a0 i%7==0", "*128", "B", "\u4e0b\u9762\u7a0b\u5e8f\u7684\u529f\u80fd\u662f\u8ba1\u7b97 1\u81f310\u4e4b\u95f4\u7684\u5947\u6570\u4e4b\u548c\u53ca\u5076\u6570\u4e4b\u548c\u3002\u8bf7\u9009\u62e9\u586b\u7a7a;", "# include <STDIO.&NBSP;H />", "main()", "{int\u00a0 a,b,c,i;", "a=c=0;", "for(i=0;i<=10;i+=2)", "{ a+=i;", "[1];", "c+=b;", "}", "printf(\u201c\u5076\u6570\u4e4b\u548c=%d\\n\u201d,a);", "printf(\u201c\u5947\u6570\u4e4b\u548c=%d\\n\u201d,c-11),", "}", "[1] A )b=i\u2013\u00a0 B)\u00a0 b=i+1\u00a0\u00a0 C)\u00a0 b=i++\u00a0\u00a0 D)b=i-1", "*129", "B", "\u4e0b\u9762\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f:", "#include\u00a0 <STDIO.&NBSP;H />", "main()", "{int i;", "for(i=1;i<=5;i++)", "switch(i%5)", "{case\u00a0 0:printf(\u201c* \u201c);break;", "case\u00a0 1\u00a0 :printf(\u201c#\u201d);break;", "default\u00a0 :printf(\u201c\\n\u201d);", "case\u00a0 2\u00a0 :printf(\u201c&\u201d);", "}", "A)#&&&*\u00a0 B) #&\u00a0\u00a0 C)\u00a0 #\u00a0\u00a0\u00a0 D)#&", "&\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 &", "&\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 &", "*", "*130", "D", "\u4e0b\u9762\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f:", "#include <STDIO.&NBSP;H />", "main()", "{\u00a0 int\u00a0\u00a0\u00a0 x,i;", "for(j-1;i<=100;i++)", "{x=i;", "if(++x%2==0)", "if(++x%3==0)", "if(++x%7==0)", "printf(\u201c%d\u201d,x);", "}", "}", "A)39\u00a0 81\u00a0\u00a0\u00a0\u00a0 \u65e5)42\u00a084\u00a0\u00a0\u00a0\u00a0\u00a0 C)26\u00a0 68\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)\u00a0 28\u00a0 70", "*131", "C", "\u4e0b\u9762\u7a0b\u5e8f\u6bb5\u7684\u529f\u80fd\u662f\u8ba1\u7b971000!\u7684\u672b\u5c3e\u542b\u6709\u591a\u5c11\u4e2a\u96f6\u3002\u8bf7\u9009\u62e9\u586b\u7a7a\u3002", "(\u63d0\u793a:\u53ea\u8981\u7b97\u51fa1000!\u4e2d\u542b\u6709\u56e0\u65705\u7684\u4e2a\u6570\u5373\u53ef", "for(k=0,i=5;i<=1000;\u00a0 i+=5)", "while(\u30101\u3011){k++; m=m/5;}", "\u30101\u3011A)m%5==0\u00a0\u00a0 B)m=m%5==0\u00a0 C)m%5==0\u00a0 D)m%5!=0", "*132", "D", "\u4e0b\u9762\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f:", "#include", "main()", "{int i,b,k=0;", "for(i=1;i< =5;i++)", "{b=i%2;", "while(b\u2013>=0)\u00a0\u00a0\u00a0\u00a0 k++;", "}", "printf(\u201c%d,%d\u201d,k,b);", "}", "A)3,-1\u00a0\u00a0\u00a0\u00a0 B )8,-1\u00a0\u00a0\u00a0 C)3,0\u00a0\u00a0\u00a0\u00a0 D)8,-2", "*133", "B", "\u4ee5\u4e0b\u6b63\u786e\u7684\u63cf\u8ff0\u662f\u3002", "A)continue\u8bed\u53e5\u7684\u4f5c\u7528\u662f\u7ed3\u675f\u6574\u4e2a\u5faa\u73af\u7684\u6267\u884c", "B)\u53ea\u80fd\u5728\u5faa\u73af\u4f53\u5185\u548cswitch\u8bed\u53e5\u4f53\u5185\u4f7f\u7528break\u8bed\u53e5", "C)\u5728\u5faa\u73af\u4f53\u5185\u4f7f\u7528break\u8bed\u53e5\u6216continue\u8bed\u53e5\u7684\u4f5c\u7528\u76f8\u540c", "D)\u4ece\u591a\u5c42\u5faa\u73af\u5d4c\u5957\u4e2d\u9000\u51fa\u65f6, \u53ea\u80fd\u4f7f\u7528goto\u8bed\u53e5", "*134", "D", "\u4e0b\u9762\u7a0b\u5e8f\u6bb5:", "for\u00a0 (t=1;\u00a0 t<=100;t++)", "{scanf(\u201c%d\u201d,&x);", "if(x<0)\u00a0 continue;", "printf(\u201c%3d\u201d,t);}", "A) \u5f53x<0\u65f6\u6574\u4e2a\u5faa\u73af\u7ed3\u675f", "B) x>=0\u65f6\u4ec0\u4e48\u4e5f\u4e0d\u8f93\u51fa", "C) printf\u51fd\u6570\u6c38\u8fdc\u4e5f\u4e0d\u6267\u884c", "D)\u6700\u591a\u5141\u8bb8\u8f93\u51fa100\u4e2a\u975e\u8d1f\u6574\u6570", "*135", "C", "\u4e0b\u9762\u7a0b\u5e8f\u6bb5:", "x=3;", "do", "{y=x\u2013;", "if(!y){ printf(\u201cx\u201d);continue;}", "printf(\u201c#\u201d);", "}\u00a0 while (1<=x<=2);", "A)\u5c06\u8f93\u51fa##\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0B)\u5c06\u8f93\u51fa##*", "C)\u662f\u6b7b\u5faa\u73af D)\u542b\u6709\u4e0d\u5408\u6cd5\u7684\u63a7\u5236\u8868\u8fbe\u5f0f", "*136", "C", "\u4ee5\u4e0b\u63cf\u8ff0\u6b63\u786e\u7684\u662f", "A)\u00a0 goto\u8bed\u53e5\u53ea\u80fd\u7528\u4e8e\u9000\u51fa\u591a\u5c42\u5faa\u73af", "B)\u00a0 switch\u8bed\u53e5\u4e2d\u4e0d\u80fd\u51fa\u73b0continue\u8bed\u53e5", "C)\u00a0 \u53ea\u80fd\u7528continue\u8bed\u53e5\u6765\u7ec8\u6b62\u672c\u6b21\u5faa\u73af", "D)\u00a0 \u5728\u5faa\u73af\u4e2dbreak\u8bed\u53e5\u4e0d\u80fd\u72ec\u7acb\u51fa\u73b0", "*137", "C", "\u4e0e\u4e0b\u9762\u7a0b\u5e8f\u6bb5\u7b49\u4ef7\u7684\u662f:", "for(n=100;n<= 200; n++)", "{if (n%3==0)\u00a0 continue;", "printf(\u201c%4d\u201d,n);}", "A) for(n=100;(n%3)&& n<=200;n++) printf(\u201c%4d\u201d,n);", "B)\u00a0 for(n=100;(n%3)|| n<=200;n++) printf(\u201c%4d\u201d,n);", "C) for(n=100;n<=200;n++)if(n%3!=0)printf(\u201c%4d\u201d,n)", "D) for(n=100;n<=200;\u00a0 n++)", "{if(n%3)\u00a0 printf(\u201c%4d\u201d,n);", "else\u00a0 continue;", "break;}", "*138", "B", "\u4e0b\u9762\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f:", "#include", "{ int k=0;", "char\u00a0 c=\u2019A';", "do", "{switch(c++)", "{case\u00a0 \u2018A\u2019:k++;break;", "case\u00a0 \u2018B\u2019:k\u2013;", "case\u00a0 \u2018C\u2019:k+=2;break;", "case\u00a0 \u2018D\u2019:k=k%2;continue;", "case\u00a0 \u2018E\u2019:k=k*10;breab;", "default:k=k/3;}", "k++;}", "while(c<\u2019G')", "printf(\u201ck=%d\u201d,k);}", "A)k=3\u00a0\u00a0\u00a0\u00a0 B)k=4\u00a0\u00a0\u00a0 C)k=2\u00a0\u00a0\u00a0 D)k=0", "*139", "B", "\u82e5\u8fd0\u884c\u4ee5\u4e0b\u7a0b\u5e8f\u65f6,\u4ece\u952e\u76d8\u8f93\u51653.6,2.4,(\u8868\u793a\u56de\u8f66),\u5219\u4e0b\u9762\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f:", "#indude", "# include", "main()", "{float x,y,z;", "scanf(\u201c%f%f\u201d,&x,&y);", "z=x/y;", "while(1)", "{if(fabs(z)>1.0) {x=y;y=z;z=x/y;}", "else break;}", "printf(\u201c%f\u201d,y);}", "A) 1.5\u00a0 B)1.6 C) 2.0 D)\u00a0 2.4", "*140", "B", "\u4e0b\u9762\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f:", "#include\u00a0 \u201cstdio.h\u201d", "main()", "{int a,b;", "for(a=1,b=1;a<=100;a++)", "{if (b>=20) break;", "if(b%3==1) {b+=3;continue;}", "b-=5;}", "printf(\u201c%d\\n\u201d,a);}", "A) 7\u00a0\u00a0\u00a0\u00a0\u00a0 B)8\u00a0\u00a0\u00a0\u00a0 C)9\u00a0\u00a0\u00a0\u00a0\u00a0 D) 10", "*141", "B", "\u4e0b\u9762\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f:", "#include \u201cstdio.h\u201d", "main()", "{int i;", "for(i=1;i<=5;i++)", "{if (i%2) printf(\u201c#\u201d);", "else continue;", "printf(\u201c*\u201d);", "}", "printf(\u201c$\u201d);}", "A) *#*#$\u00a0\u00a0 B)\u00a0\u00a0 #*#*#*$\u00a0\u00a0 C) *#*#$\u00a0\u00a0 D)#*#*$", "*142", "A", "\u4e0b\u9762\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f:", "\u00a0", "main()", "{int i,j,a=0;", "for (i=0;i<2;i++)", "{ for (j=0;j<=4;j++)", "{if (j%2)\u00a0 break;", "a++;}", "a++;}", "printf(\u201c%d\\n\u201d,a);", "}", "A)\u00a0 4\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)\u00a05\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)\u00a0 6\u00a0\u00a0\u00a0\u00a0\u00a0 D)\u00a0 7", "*179", "c", "\u5728c\u8bed\u8a00\u4e2d,\u5f15\u7528\u6570\u7ec4\u5143\u7d20\u65f6,\u5176\u6570\u7ec4\u4e0b\u6807\u7684\u6570\u636e\u7c7b\u578b\u5141\u8bb8\u662f__.", "A)\u6574\u578b\u5e38\u91cf\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)\u6574\u578b\u8868\u8fbe\u5f0f", "c)\u6574\u578b\u5e38\u91cf\u6216\u6574\u578b\u8868\u8fbe\u5f0fD)\u4efb\u4f55\u7c7b\u578b\u7684\u8868\u8fbe\u5f0f", "*180", "D", "\u4ee5\u4e0b\u5bf9\u4e00\u7ef4\u6574\u578b\u6570\u7ec4a\u7684\u6b63\u786e\u8bf4\u660e\u662f__\u3002", "A)\u00a0 int a(10);\u00a0 B)int n= 10,a[n];", "c)\u00a0 int\u00a0 n;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)\u00a0 #define\u00a0 SIZE\u00a0 10;", "scanf(\u201c%\u201d,&J1);\u00a0 int a[SIZE];", "int a[n];", "*181", "D", "\u82e5\u6709\u8bf4\u660e:int a[10];\u5219\u5bf9a\u6570\u7ec4\u5143\u7d20\u7684\u6b63\u786e\u5f15\u7528\u662f__\u3002", "A)a[10] B) a[3.5] C) a(5) D) a[10-10]", "*182", "A", "\u5728C\u8bed\u8a00\u4e2d,\u4e00\u7ef4\u6570\u7ec4\u7684\u5b9a\u4e49\u65b9\u5f0f\u4e3a:,\u7c7b\u578b\u8bf4\u8bf4\u660e\u7b26 \u6570\u7ec4\u540d__\u3002", "A) [\u5e38\u91cf\u8868\u8fbe\u5f0f]\u00a0\u00a0 B) [\u6574\u5f62\u8868\u8fbe\u5f0f]", "c)[ \u6574\u578b\u5e38\u91cf]\u6216[\u6574\u578b\u8868\u8fbe\u5f0f] D)[\u6574\u578b\u5e38\u91cf]", "*183", "C", "\u4ee5\u4e0b\u80fd\u5bf9\u4e00\u7ef4\u6570\u7ec4a\u8fdb\u884c\u6b63\u786e\u521d\u59cb\u5316\u7684\u8bed\u53e5\u662f__\u3002", "A)\u00a0 int a[10]=(0,0,0,0,0) B)int\u00a0 a[10]={}", "C)\u00a0 int\u00a0 a[]={0};D) int a[10]={10*1};", "*184", "C", "\u4ee5\u4e0b\u5bf9\u4e8c\u7ef4\u6570\u7ec4a\u7684\u6b63\u786e\u8bf4\u660e\u662f__\u3002", "A)\u00a0 int a[3][];\u00a0\u00a0 B)\u00a0 floatf a(3,4);", "c)\u00a0 double a[1][4];\u00a0 D)\u00a0 float a(3)(4);", "*185", "C", "\u82e5\u6709\u8bf4\u660e:int a[3][4]; \u5219\u5bf9a\u6570\u7ec4\u5143\u7d20\u7684\u6b63\u786e\u5f15\u7528\u662f__\u3002", "A)\u00a0 a[2][4]\u00a0\u00a0\u00a0\u00a0 B)\u00a0 a[1,3]\u00a0\u00a0 C)\u00a0 a[1+1][0]\u00a0\u00a0\u00a0 D)\u00a0 a(2)(1);", "*186", "D", "\u82e5\u6709\u8bf4\u660e:int a[3][4];\u5219\u5bf9a\u6570\u7ec4\u5143\u7d20\u7684\u975e\u6cd5\u5f15\u7528\u662f__\u3002", "A)\u00a0 a[0][2*1]\u00a0 B)\u00a0 a[1][3]\u00a0 C)a[4-2][0]\u00a0\u00a0\u00a0 D)a[0][4]\u201c\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u201d", "*187", "B", "\u4ee5\u4e0b\u80fd\u5bf9\u4e8c\u7ef4\u6570\u7ec4a\u8fdb\u884c\u6b63\u786e\u521d\u59cb\u5316\u7684\u8bed\u53e5\u662f__\u3002", "A)\u00a0 int a[2][]={{1,0,1},{5,2,3}};", "B)\u00a0 int a[][3\u300d={{1,2,3},{4,5,6}};", "C)\u00a0\u00a0 int\u00a0 a\u00a0 [2][4]={{1,2,3},{4,5},{6}};", "D)\u00a0 int\u00a0 a[][3={{1,0,1},{},{1,1}};", "*188", "C", "\u4ee5\u4e0b\u4e0d\u80fd\u5bf9\u4e8c\u7ef4\u6570\u7ec4a\u8fdb\u884c\u6b63\u786e\u521d\u59cb\u5316\u7684\u8bed\u53e5\u662f__\u3002", "A)\u00a0 int\u00a0 a[2][3]={0};", "B)\u00a0 int\u00a0 a[][3\u300d={{1,2,3},{4,5,6}};", "C)\u00a0 int\u00a0 a[2][4]={{1,2,3},{4,5}{6}};", "D)\u00a0\u00a0 int\u00a0 a[][3]={{1,0,1},{0},{1,1}};", "*189", "D", "\u82e5\u6709\u8bf4\u660e\uff1a\u00a0 int\u00a0 a[3]\u300c4]={0};\u5219\u4e0b\u9762\u6b63\u786e\u7684\u53d9\u8ff0\u662f", "A\uff09\u53ea\u6709\u5143\u7d20a[0][0]\u53ef\u5f97\u5230\u521d\u503c0", "B\uff09\u6b64\u8bf4\u660e\u8bed\u53e5\u4e0d\u6b63\u786e\uff1a\u3002", "C\uff09\u6570\u7ec4a\u4e2d\u5404\u5143\u7d20\u90fd\u53ef\u5f97\u5230\u521d\u503c\uff0c\u4f46\u5176\u503c\u4e0d\u4e00\u5b9a\u4e3a0\u3002", "D\uff09\u6570\u7ec4a\u4e2d\u6bcf\u4e2a\u5143\u7d20\u5747\u53ef\u5f97\u5230\u521d\u503c0", "\u00a0", "*190", "D", "\u82e5\u6709\u8bf4\u660e\uff1aint\u00a0 a[][4]={0,0};\u5219\u4e0b\u9762\u4e0d\u6b63\u786e\u7684\u53d9\u8ff0\u662f__\u3002", "A\uff09\u6570\u7ec4a\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u53ef\u5f97\u5230\u521d\u503c0", "B\uff09\u4e8c\u7ef4\u6570\u7ec4a\u7684\u7b2c\u4e00\u7ef4\u5927\u5c0f\u4e3a1", "C\uff09\u56e0\u4e3a\u4e8c\u7ef4\u6570\u7ec40\u4e2d\u7b2c\u4e8c\u7ef4\u5927\u5c0f\u7684\u503c\u9664\u4ee5\u521d\u503c\u4e2a\u6570\u7684\u5546\u4e3a1,\u6545\u6570\u7ec4a\u884c", "\u6570\u4e3a1", "D\uff09\u53ea\u6709\u5143\u7d20a[0]\u300c0\u300d\u548ca[0]\u300c1\u300d\u53ef\u5f97\u521d\u503c0\uff0c\u5176\u4f59\u5143\u7d20\u5747\u5f97\u4e0d\u5230\u521d\u503c0", "*191", "B", "\u82e5\u6709\u8bf4\u660e\uff1aint\u00a0 a[3]\u300c4]\uff1b\u5219\u6570\u7ec4a\u5404\u5143\u7d20", "A\uff09\u53ef\u5728\u7a0b\u5e8f\u7684\u8fd0\u884c\u9636\u6bb5\u5f97\u5230\u521d\u503c0", "B\uff09\u53ef\u5728\u7a0b\u5e8f\u7684\u7f16\u8bd1\u9636\u6bb5\u5f97\u5230\u521d\u503c0", "C\uff09\u4e0d\u80fd\u5f97\u5230\u786e\u5b9a\u7684\u521d\u503c", "D\uff09\u53ef\u5728\u7a0b\u5e8f\u7684\u7f16\u8bd1\u6216\u8fd0\u884c\u9636\u6bb5\u5f97\u521d\u503c0", "*192", "C", "\u4ee5\u4e0b\u5404\u7ec4\u9009\u9879\u4e2d\uff0c\u5747\u80fd\u6b63\u786e\u5b9a\u4e49\u4e8c\u7ef4\u5b9e\u578b\u6570\u7ec4a\u7684\u9009\u9879\u662f", "A\uff09float a[3][4];\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0B\uff09float a(3,4);", "float a[][4];\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 float a[3][4];", "float a[3][]={{1},{0}};\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 float a[][]={{0},{0}};", "C\uff09float a[3][4];\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D\uff09float a[3][4];", "static float a[][4]={{0},{0}};\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 float a[3][];", "auto float a[][4]={{0},{0},{0}};\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 float a[][4]", "*193", "A", "\u4e0b\u9762\u7a0b\u5e8f(\u6bcf\u884c\u7a0b\u5e8f\u524d\u9762\u7684\u6570\u5b57\u8868\u793a\u884c\u53f7)", "1\u00a0\u00a0 main()", "2\u00a0\u00a0\u00a0\u00a0 {", "3\u00a0\u00a0\u00a0\u00a0 int\u00a0 a[3]={3*0};", "4\u00a0\u00a0\u00a0\u00a0 int\u00a0 i;", "5\u00a0\u00a0\u00a0\u00a0 for(i=0;i<3;i++)\u00a0 scanf(\u201c%d\u201d,&a[ i]);", "6\u00a0\u00a0\u00a0\u00a0 for(i=1;i<3;i++) a[0]=a[0]+a[ i] ;", "7\u00a0\u00a0\u00a0\u00a0 printf(\u201c%d\\n\u201d,a[0]); }", "A)\u6ca1\u6709\u9519\u8befB)\u7b2c3\u884c\u6709\u9519\u8bef", "C)\u7b2c5\u884c\u6709\u9519\u8bef D)\u7b2c7\u884c\u6709\u9519\u8bef", "*194", "C", "\u4e0b\u9762\u7a0b\u5e8f\u4e00\u4e00\u4e00(\u6bcf\u884c\u7a0b\u5e8f\u524d\u9762\u7684\u6570\u5b57\u8868\u793a\u884c\u53f7)\u3002", "1\u00a0\u00a0\u00a0 main()", "2\u00a0\u00a0\u00a0 {", "3\u00a0\u00a0\u00a0\u00a0 float a[10]={0.0};", "4\u00a0\u00a0\u00a0\u00a0 int\u00a0 i", "5\u00a0\u00a0\u00a0\u00a0 for(i=0;i<3;i++)\u00a0 scanf(\u201c%d\u201d,&a[ i]);", "6\u00a0\u00a0\u00a0\u00a0 for(i=0;i<10;i++)\u00a0 a[0]=a[0]+a[ i];", "7\u00a0\u00a0\u00a0\u00a0 printf(\u201c%d\\n\u201d,a[0]);", "8\u00a0\u00a0\u00a0\u00a0 }", "A)\u6ca1\u6709\u9519\u8bef\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)\u7b2c3\u884c\u6709\u9519\u8bef", "C)\u7b2c5\u884c\u6709\u9519\u8bef\u00a0\u00a0\u00a0\u00a0\u00a0 D)\u7b2c7\u884c\u6709\u9519\u8bef", "*195", "D", "\u4e0b\u9762\u7a0b\u5e8f\u6709\u9519\u7684\u884c\u662f", "1\u00a0 main()", "2{", "3\u00a0\u00a0 int\u00a0 a[3]={1};", "4\u00a0\u00a0 int\u00a0 i;", "5\u00a0\u00a0 scanf(\u201c%d\u201d,&a);", "6\u00a0\u00a0 for(i=1;i<3;i++)\u00a0 a[0]=a[0]+a[ i];", "7\u00a0\u00a0 printf(\u201ca[0]=%d\\n\u201d,a[0]);", "8\u00a0\u00a0 }", "A)3\u00a0 \u00a0\u00a0\u00a0\u00a0B)6\u00a0\u00a0 C)7\u00a0\u00a0\u00a0\u00a0\u00a0 D)5", "*196", "D", "\u4e0b\u9762\u7a0b\u5e8f(\u6bcf\u884c\u7a0b\u5e8f\u524d\u9762\u7684\u6570\u5b57\u8868\u793a\u884c\u53f7)", "1\u00a0 main()", "2\u00a0 {", "3\u00a0\u00a0 int a[3]={0};", "4\u00a0\u00a0 int i;", "5\u00a0\u00a0 for(i=0;i<3;i++)scanf(\u201c%d\u201d,&a[ i]);", "6\u00a0\u00a0 for(i=1;i<4;i++)a[0]=a[0]+a[ i];", "7\u00a0\u00a0 printf(\u201c%d\\n\u201d,a[0]);", "8\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\u00a0", "A)\u6ca1\u6709\u9519\u8bef\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)\u7b2c3\u884c\u6709\u9519\u8bef", "C)\u7b2c5\u884c\u6709\u9519\u8bef\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)\u7b2c6\u884c\u6709\u9519\u8bef", "*197", "D", "\u82e5\u4e8c\u7ef4\u6570\u7ec4a\u6709m\u5217,\u5219\u8ba1\u7b97\u4efb\u4e00\u5143\u7d20a[ i][j]\u5728\u6570\u7ec4\u4e2d\u4f4d\u7f6e\u7684\u516c\u5f0f\u4e3a", "(\u5047\u8bbea[0][0]\u4f4d\u4e8e\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u3002)", "A)i*m+j\u00a0\u00a0\u00a0 B)j*p+i\u3002C)i*m+j-1\u00a0\u00a0\u00a0 D)i*m+j+1", "*198", "B", "\u5bf9\u4ee5\u4e0b\u8bf4\u660e\u8bed\u53e5\u7684\u6b63\u786e\u7406\u89e3\u662f", "int a[10]={6,7,8,9,10};", "A)\u5c065\u4e2a\u521d\u503c\u4f9d\u6b21\u8d4b\u7ed9a[1]\u81f3a[5]", "B)\u5c065\u4e2a\u521d\u503c\u4f9d\u6b21\u8d4b\u7ed9a[0]\u81f3a[4]", "C)\u5c065\u4e2a\u521d\u503c\u4f9d\u6b21\u8d4b\u7ed9a[6]\u81f3a[10]", "D)\u56e0\u4e3a\u6570\u7ec4\u957f\u5ea6\u4e0e\u521d\u503c\u7684\u4e2a\u6570\u4e0d\u76f8\u540c,\u6240\u4ee5\u6b64\u8bed\u53e5\u4e0d\u6b63\u786e", "*199", "B", "\u4ee5\u4e0b\u4e0d\u6b63\u786e\u7684\u5b9a\u4e49\u8bed\u53e5\u662f__.", "A)\u00a0 double\u00a0 x[5]={2.0,4.0,6.0,8.0,10.0};", "B)\u00a0 int\u00a0 y\u300c5\u300d={0,1,3,5,7,9};", "C)\u00a0 char\u00a0 c1[]={\u20191\u2019,\u20192\u2019,\u20193\u2019,\u20194\u2019,\u20195\u2019};\u00a0\u00a0\u00a0 4\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u3002\u4e8c\u5165\u5e7f\u00a0\u00a0\u00a0 \\\u00a0\u00a0 \u201c\u2019\u00a0\u00a0 (:", "D)\u00a0 char c2[]=}{\u2018\\x10\u2032,\u2019\\xa\u2019,'\\x8\u2032};", "*200", "B", "\u82e5\u6709\u8bf4\u660e:int\u00a0 a[\u300d\u300c3\u300d={1,2,3,4,5,6,7};\u5219a\u6570\u7ec4\u7b2c\u4e00\u7ef4\u7684\u5927\u5c0f\u662f__.", "A)\u00a0 2\u00a0\u00a0\u00a0 B)\u00a03\u00a0 C)\u00a0 4\u00a0 D)\u65e0\u786e\u5b9a\u503c", "*201", "B", "\u82e5\u4e8c\u7ef4\u6570\u7ec4a\u6709m\u5217,\u5219\u5728a[ i][j]\u524d\u7684\u5143\u7d20\u4e2a\u6570\u4e3a__.", "A)j*m+j\u00a0 B)i*m+j\u00a0\u00a0\u00a0 C)i*m+j\u00a0 D)i*m+j+1", "*202", "A", "\u5b9a\u4e49\u5982\u4e0b\u53d8\u91cf\u548c\u6570\u7ec4:", "int k;", "int a[3][3]={1,2,3,4,5,6,7,8,9};", "\u5219\u4e0b\u9762\u8bed\u53e5\u7684\u8f93\u51fa\u7ed3\u679c\u662f\u00a0\u00a0\u00a0 \u3002\u201d", "for(k=0;k<3;k++)\u00a0 printf\u00a0 (\u201c%d\u201d,a[k][2-k]);", "A)\u00a0 3\u00a0 5\u00a0 7B)3 6\u00a09\u00a0\u00a0 C) 1 5 9 D)\u00a0 1 4 7", "*203", "B", "\u82e5\u6709\u4ee5\u4e0b\u7a0b\u5e8f\u6bb5:", "\u2026\u2026", "int a[]={4,0,2,3,1};i,j,t;", "for(i=1;i<5;i++)", "{t=a[ i];j=i-1;", "while(j>=0&&t>a[j])", "{a[j+1]=a[j];j\u2013;}", "\u2026\u2026", "\u5219\u8be5\u7a0b\u5e8f\u6bb5\u7684\u529f\u80fd\u662f __.", "A)\u5bf9\u6570\u7ec4a\u8fdb\u884c\u63d2\u5165\u6392\u5e8f(\u5347\u5e8f)", "B)\u5bf9\u6570\u7ec4a\u8fdb\u884c\u63d2\u5165\u6392\u5e8f(\u964d\u5e8f)", "C)\u5bf9\u6570\u7ec4a\u8fdb\u884c\u9009\u62e9\u6392\u5e8f(\u5347\u5e8f)", "D)\u5bf9\u6570\u7ec4a\u8fdb\u884c\u9009\u62e9\u6392\u5e8f(\u964d\u5e8f)", "*204", "D", "\u4ee5\u4e0b\u6b63\u786e\u7684\u5b9a\u4e49\u8bed\u53e5\u662f__.", "A)\u00a0 int\u00a0 a[1\u300d[4\u300d={1,2,3,4,5};", "B)\u00a0 float x[3][]={{1},{2},{3}};", "C)\u00a0 long b[2][3]={{1},{1,2},{1,2,3}};", "D)\u00a0 double\u00a0 y[][3]={0};", "*205", "C", "\u4e0b\u9762\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f__.", "main()", "{int\u00a0 a[6\u300d\u300c6\u300d,i,j;", "for(i=1;i<6;i++)", "for(j=1;j<6,j++)", "a[ i][j]=(i/j)*(j/i);", "for(i=1;i<6;i++)", "{for(j=1;j<6;j\u5341\u5341)", "printf(\u201c%2d\u201d,a[ i][j]);", "printf(\u201c\\n\u201d_);}", "}", "A)11111\u00a0\u00a0\u00a0\u00a0 B)00001 C)10000\u00a0\u00a0 \u00a0\u00a0D)10001", "11111\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 00010\u00a0\u00a0\u00a0 01000\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 01010", "11111\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 00100\u00a0\u00a0\u00a0 00100\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 00100", "11111\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 01000\u00a0\u00a0\u00a0 00010\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 01010", "11111\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 10000\u00a0\u00a0\u00a0 00001\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 10001", "*206", "C", "\u4e0b\u9762\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f __.", "main()", "{int\u00a0 a[6],i;", "for(i=1;i<6;i\u5341\u5341)", "{a[ i]=9*(i-2+4*(i>3))%5;", "printf(\u201c%2d\u201d,a[ i]);", "}", "}", "A)\u201440404B)\u201440403", "C)\u4e0040443D)\u4e0040440", "*207", "D", "\u4e0b\u9762\u662f\u5bf9s\u7684\u521d\u59cb\u5316,\u5176\u4e2d\u4e0d\u6b63\u786e\u7684\u662f__.", "A)\u00a0 char\u00a0 s[5\u300d={\"abc\"} B)char s[5]={\u2018a\u2019,'b\u2019,'c\u2019};", "C)\u00a0 char\u00a0 s[5]=\u201d\"\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D) char s[5]=\u201dabcdef\u201d;", "*208", "B", "\u4e0b\u9762\u7a0b\u5e8f\u6bb5\u7684\u8fd0\u884c\u7ed3\u679c\u662f __.", "char\u00a0 c[5]={\u2018a\u2019,'b\u2019,'\\0\u2032,\u2019c',\u2019\\0\u2032};", "printf(\u201c%s\u201d,c);}", "A)\u2019a\u2019\u2019b\u2019 B)\u00a0 ab\u00a0\u00a0 C)\u00a0 ab c\u00a0\u00a0 D)\u00a0 ab", "(\u5176\u4e2d \u8868\u793a\u7a7a\u683c)", "*209", "D", "\u5bf9\u4e24\u4e2a\u6570\u7ec4a\u548c6\u8fdb\u884c\u5982\u4e0b\u521d\u59cb\u5316", "char\u00a0 a[]=\u201dABCDEF\u201d;", "char\u00a0 b[]={\u2019A\u2019,\u2019B\u2019,\u2019C\u2019,\u2019D\u2019,\u2019E\u2019,\u2019F\u2019};\u535c", "\u5219\u4ee5\u4e0b\u53d9\u8ff0\u6b63\u786e\u7684\u662f __.", "A)\u00a0 a\u4e0eb\u6570\u7ec4\u5b8c\u5168\u76f8\u540c\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)\u00a0 a\u4e0eb\u957f\u5ea6\u76f8\u540c", "C)\u00a0 a\u548cb\u4e2d\u90fd\u5b58\u653e\u5b57\u7b26\u4e32\u00a0\u00a0\u00a0\u00a0 D)\u00a0 a\u6570\u7ec4\u6bd4b\u6570\u7ec4\u957f\u5ea6\u957f", "*210", "B", "\u6709\u4e24\u4e2a\u5b57\u7b26\u6570\u7ec4a\u3001b,\u5219\u4ee5\u4e0b\u6b63\u786e\u7684\u8f93\u5165\u683c\u5f0f\u662f\u00a0 __.", "A)\u00a0 gets\u00a0 (a,b);\u00a0\u00a0 B)\u00a0 scanf\u00a0 (\u201c%s%s\u201d,a,b);", "C)\u00a0 scanf\u00a0 (\u201c%s%s\u201d,&a,&b);\u00a0 D)\u00a0 gets\u00a0 (\u201ca\u201d),\u00a0 gets\u00a0 (\u201cb\u201d);", "*211", "D", "\u6709\u5b57\u7b26\u6570\u7ec4a[80]\u548cb[80],\u5219\u6b63\u786e\u7684\u8f93\u51fa\u5f62\u5f0f\u662f__.", "A)\u00a0 puts\u00a0 (a,b);\u00a0 B)\u00a0 printf\u00a0 (\u201c%s,%s,a[],b[]);", "C)\u00a0 putchar(a,b);\u00a0 D)\u00a0 puts\u00a0 (a),\u00a0 puts\u00a0 (b);", "*212", "D", "\u4e0b\u9762\u7a0b\u5e8f\u6bb5\u7684\u8fd0\u884c\u7ed3\u679c\u662f__.", "char\u00a0 a[7]=\u201dabcdef\u201d;", "char\u00a0 b[4]=\u201dABC\u201d;", "strcpy(a,b);", "printf\u00a0 (\u201c%c\u201d,a[5]);", "J\u3002\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u201c\u00a0\u00a0\u00a0\u00a0\u00a0 \u4e86", "A)\u4e00\u00a0\u00a0 B)\\O\u00a0 C) e D)f(\u5176\u4e2d\u4e00\u8868\u793a\u7a7a\u683c)", "*213", "D", "\u6709\u4e0b\u9762\u7684\u7a0b\u5e8f\u6bb5", "char\u00a0 a[3],b[]=\u201dchina\u201d;", "a=b;", "printf(\u201c%s\u201d,a);", "\u5219__.", "A)\u8fd0\u884c\u540e\u2022\u5c06\u8f93\u51faChm\u3001\u201d\u3001B)\u8fd0\u884c\u540e\u5c06\u8f93\u51faCh\u2019\u4e00", "C)\u8fd0\u884c\u540e\u5c06\u8f93\u51faChi\u00a0\u00a0\u00a0\u00a0\u00a0 D)\u7f16\u8bd1\u51fa\u9519", "*214", "B", "\u4e0b\u9762\u7a0b\u5e8f\u6bb5\u7684\u8fd0\u884c\u7ed3\u679c\u662f__.", "char\u00a0 c[]=\u201d\\t\\v\\\\\\0will\\n\u201d;", "printf(\u201c%d\u201d,strlen(c));", "A)14\u00a0\u00a0\u00a0\u00a0 B)\u00a03\u00a0 C)\u00a0 9\u00a0 D)\u5b57\u7b26\u4e32\u4e2d\u6709\u975e\u6cd5\u5b57\u7b26,\u8f93\u51fa\u503c\u4e0d\u786e\u5b9a", "*215", "D", "\u5224\u65ad\u5b57\u7b26\u4e32a\u548cb\u662f\u5426\u76f8\u7b49,\u5e94\u5f53\u4f7f\u7528__.", "A)\u00a0 if\u00a0 (a==b)\u00a0\u00a0 B)\u00a0 if\u00a0 (a=b)", "C)\u00a0 if\u00a0 (strcpy(a,b)),\u00a0 D)\u00a0 if\u00a0 (strcmp(a,b))", "*216", "D", "\u5224\u65ad\u5b57\u7b26\u4e32s1\u662f\u5426\u5927\u4e8e\u5b57\u7b26\u4e32s2\u5e94\u5f53\u4f7f\u7528__.", "A)\u00a0 if\u00a0 (sl>s2)\u00a0\u00a0 B)\u00a0 if\u00a0 (strcmp(s1,s2))", "C)\u00a0 if\u00a0 (strcmp(s2,sl)>0)\u00a0 D)\u00a0 if\u00a0 (strcmp(s1,s2)>0)", "*217", "A", "\u4e0b\u9762\u7a0b\u5e8f\u6bb5\u662f\u8f93\u51fa\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u5bf9\u5e94\u5b57\u7b26\u76f8\u7b49\u7684\u5b57\u7b26\u3002\u8bf7\u9009\u62e9\u586b\u7a7a\u3002", "char\u00a0 x[]=\u201dprogramming\u201d;", "char\u00a0 y[]=\u201dFortran\u201d;", "int\u00a0 i=0;", "while\u00a0 (x[ i]!=\u2019\\0\u2032&& y[ i]!=\u2019\\0\u2032)", "{if\u00a0 (x[i ]==y[ i]) printf\u00a0 (\u201c%c\u201d, 1\u00a0 );", "else i++;}", "}", "\u00a0", "\u30101\u3011A)x[i++] B)y[++i]\u00a0 C)x[ i]\u00a0\u00a0\u00a0 D)y[ i]", "*218", "D", "\u4e0b\u9762\u63cf\u8ff0\u6b63\u786e\u7684\u662f__.", "A)\u4e24\u4e2a\u5b57\u7b26\u4e32\u6240\u5305\u542b\u7684\u5b57\u7b26\u4e2a\u6570\u76f8\u540c\u65f6,\u624d\u80fd\u6bd4\u8f83\u5b57\u7b26\u4e32", "B)\u5b57\u7b26\u4e2a\u6570\u591a\u7684\u5b57\u7b26\u4e32\u6bd4\u5b57\u7b26\u4e2a\u6570\u5c11\u7684\u5b57\u7b26\u4e32\u5927", "C)\u5b57\u7b26\u4e32\u201dSTOP \u201c\u4e0e\u201dSTOp\u201d\u76f8\u7b49", "D)\u5b57\u7b26\u4e32\u201dhat\u201d\u5c0f\u4e8e\u5b57\u7b26\u4e32\u201dhe\u201d", "*219", "C", "\u4e0b\u8ff0\u5bf9C\u8bed\u8a00\u5b57\u7b26\u6570\u7ec4\u7684\u63cf\u8ff0\u4e2d\u9519\u8bef\u7684\u662f", "A)\u5b57\u7b26\u6570\u7ec4\u53ef\u4ee5\u5b58\u653e\u5b57\u7b26\u4e32", "B)\u5b57\u7b26\u6570\u7ec4\u7684\u5b57\u7b26\u4e32\u53ef\u4ee5\u6574\u4f53\u8f93\u5165\u3001\u8f93\u51fa", "C)\u53ef\u4ee5\u5728\u8d4b\u503c\u8bed\u53e5\u4e2d\u901a\u8fc7\u8d4b\u503c\u8fd0\u7b97\u7b26\u201d=\u201d\u5bf9\u5b57\u7b26\u6570\u7ec4\u6574\u4f53\u8d4b\u503c", "D)\u4e0d\u53ef\u4ee5\u7528\u5173\u7cfb\u8fd0\u7b97\u7b26\u5bf9\u5b57\u7b26\u6570\u7ec4\u4e2d\u7684\u5b57\u7b26\u4e32\u8fdb\u884c\u6bd4\u8f83", "*220", "B", "\u6709\u5df2\u6392\u597d\u5e8f\u7684\u5b57\u7b26\u4e32a,\u4e0b\u9762\u7684\u7a0b\u5e8f\u662f\u5c06\u5b57\u7b26\u4e32s\u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\u6309a\u4e2d\u5143\u7d20", "\u7684\u89c4\u5f8b\u63d2\u5165\u5230a\u4e2d\u3002\u8bf7\u9009\u62e9\u586b\u7a7a\u3002", "#indude", "main()", "{char\u00a0 a[20\u300d=\"cehiknqtw\";", "char\u00a0 s[]=\u201dfbla\u201d;", "int i,k,j;", "for(k=0;s[k]!=\u2019\\0\u2032;k\u5341+)", "{j=0;", "while(s[k]>=a[j]&&a[j]!=\u2019\\0\u2032)j++;", "for(i=str1en(a);i>=j;i\u2013) \u30102\u3011;", "a[j\u300d=S[k\u300d;", "}", "puts(a);", "}", "\u30102\u3011\u00a0 A)\u00a0 a[ i]=a[i+1]\u00a0 B)\u00a0 a[i+1]=a[ i];", "C)\u00a0\u00a0 a[ i]=a[i-1] D) a[i-1]=a[ i];", "*221", "A", "\u4e0b\u9762\u7a0b\u5e8f\u7684\u529f\u80fd\u662f\u5c06\u5b57\u7b26\u4e325\u4e2d\u6240\u6709\u7684\u5b57\u7b26c\u5220\u9664\u3002\u8bf7\u9009\u62e9\u586b\u7a7a\u3002", "#include", "main()", "{char\u00a0 s[80];", "int i,j;", "gets(s);", "for(i=j=0;s[ i]!=\u2019\\0\u2032;i++)", "if(s[ i]!=\u2019c')\u30101\u3011", "puts(s);", "\u00a0", "\u30101\u3011A)s[j++]=s[ i]\u00a0 B)s[++j]=s[ i];", "C)\u00a0 s[j]=s[ i];j++;\u00a0\u00a0 D)\u00a0 s[j]=s[ i];", "*222", "B", "\u4e0b\u9762\u7a0b\u5e8f\u7684\u529f\u80fd\u662f\u4ece\u952e\u76d8\u8f93\u5165\u4e00\u884c\u5b57\u7b26,\u7edf\u8ba1\u5176\u4e2d\u6709\u591a\u5c11\u4e2a\u5355\u8bcd,\u5355\u8bcd\u4e4b\u95f4", "\u7528\u7a7a\u683c\u5206\u9694\u3002\u8bf7\u9009\u62e9\u586b\u7a7a\u3002", "#indude", "main()", "{char\u00a0 s[80\u300d,c1,c2='';", "int\u00a0 i=0,num=0;", "gets(s);", "while(s[ i]!=\u2019\\0\u2032)", "{c1=s[ i];", "1f(i==0)\u00a0 c2=\u201d;", "else\u00a0 c2=s[i-1];", "if(\u30101\u3011)\u00a0 num++;", "i++;", ")", "printf(\u201cThere are %d words.\\n\u201d,num);", "}", "\u30101\u3011A)c1=\u201d && c2==\u201d B)cl!=\u201d && c2==\u201d", "C)c1==\u201d && c2!=\u201d D)cl!=\u201d && c2!=\u201d", "*223", "A", "\u4e0b\u9762\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f", "#indude", "main()", "{char\u00a0 ch[7]={\u201c12ab56\u2033};", "int\u00a0 i,s=0;", "for(i=0;ch[ i]>=\u20190\u2032&&ch[ i]<=\u20199\u2032;i+=2)", "s=10*s+ch[ i]-\u20190\u2032;", "printf(\u201c%d\\n\u201d,s);", "}", "A)1\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)1256\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)\u00a0 12ab56\u00a0\u00a0\u00a0\u00a0\u00a0 D)1", "2", "5", "6", "*224", "A", "\u5f53\u8fd0\u884c\u4ee5\u4e0b\u7a0b\u5e8f\u65f6,\u4ece\u952e\u76d8\u8f93\u5165:aa\u00a0 bb", "cc dd", "(\u8868\u793a\u56de\u8f66),\u5219\u4e0b\u9762\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f", "#\u00a0 include", "main()", "{char\u00a0 a1[5],a2[5\u300d,a3[5],a4[5];", "scanf(\u201c%s%s\u201d,a1,a2);", "gets(a3);\u00a0 gets(a4);", "puts(al);\u00a0 puts(a2);", "puts(a3);\u00a0 puts(a4);", "}", "A)\u00a0 aa\u00a0\u00a0\u00a0\u00a0 B)\u00a0 aa ()aa\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)\u00a0 aa bb", "bb\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 bb\u00a0\u00a0\u00a0 bb\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 cc", "cc\u00a0\u00a0\u00a0 cc\u00a0 dd\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 dd", "cc dd\u00a0\u00a0\u00a0\u00a0\u00a0 dd ee", "\u00a0", "*225", "D", "\u5f53\u8fd0\u884c\u4ee5\u4e0b\u7a0b\u5e8f\u65f6,\u4ece\u952e\u76d8\u8f93\u5165:ab", "c", "dd", "(\u8868\u793a\u56de\u8f66),\u5219\u4e0b\u9762\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f", "#include", "#difine N 6", "main()", "{\u00a0 char\u00a0 c[N];", "int\u00a0 i=0;", "for\u00a0 (;i", "for(i=0;\u00a0 i<N;&NBSP;&NBSP;I++)&NBSP;&NBSP;PUTCHAR(C[", "\u3001", "A)abcdef\u00a0\u00a0 B)a\u00a0\u00a0\u00a0 C)b\u00a0\u00a0\u00a0\u00a0\u00a0 D)ab", "b\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 c\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 c", "c\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 d\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 d", "e", "f", "*226", "A", "\u5f53\u8fd0\u884c\u4ee5\u4e0b\u7a0b\u5e8f\u65f6,\u4ece\u952e\u76d8\u8f93\u5165:AhaMA\u00a0 Aha(", "\u5219\u4e0b\u9762\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f", "#include\u00a0 \"stdio.h\"", "main()", "{char\u00a0 s[80],c=\u2019a';", "int i=0;", "scanf(\u201c%s\u201d,s);", "while(s[ i]!=\u2019\\0\u2032)", "{if(s[ i]==c)\u00a0 s[ i]=s[ i]-32;", "else\u00a0 if(s[ i]==c-32)\u00a0 s[ i]=s[ i]+32;", "i++;", "}", "puts(s);", ")", "A)ahAMa\u00a0\u00a0\u00a0\u00a0\u00a0 B)AhAMa\u00a0\u00a0\u00a0\u00a0\u00a0 C)\u00a0 AhAMa\u00a0 ahA\u00a0 D)\u00a0 ahAMa ahA", "*227", "D", "\u4e0b\u9762\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f\u4e00\u4e00\u4e00\u3002", "#include", "#inc1ude", "main()", "{char\u00a0 a[80\u300d=\"AB\",b[80]=\u201dLMNP\u201d;", "int\u00a0 i=0;", "strcat(a,b);", "whi1e(a[i++]!=\u2019\\0\u2032)b[ i]=a[ i];", "puts(b);", "}", "A)LB\u00a0\u00a0 B)ABLMNP\u00a0\u00a0\u00a0\u00a0 C)AB\u00a0\u00a0\u00a0\u00a0 D)LBLMNP", "*228", "B", "\u4e0b\u9762\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f", "#include", "main()", "{", "char str[]=\u201dSSSWLIA\u201d,c;", "int k;", "for(k=2;(c=str[k])!=\u2019\\0\u2032;k++)", "{switch(c)", "{case \u2018I\u2019:++k;break;", "case \u2018L\u2019:continue;", "default:putchar(c);continue;", "}", "putchar(\u2018*\u2019);", "}", "}", "A)SSW*\u00a0\u00a0\u00a0 B)SW*\u00a0\u00a0 C)\u00a0 SW*A\u00a0 D)SW", "*229", "B", "\u4e0b\u9762\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f", "#include", "main()", "{char a[]=\u201dmorning\u201d,t;", "int i,j=0;", "for(i=1;i<7;i++) if(a[j]", "t=a[j];a[j]=a[7];", "a[7]=a[j];puts(a);", "}", "A)\u00a0 mogninr\u00a0 B)\u00a0 mo\u00a0 C)\u00a0 morning\u00a0 D)\u00a0 mornin", "\u5c06\u4e24\u4e2a\u65e0\u5e8f\u6570\u7ec4\u5408\u5e76\u4e3a\u6709\u5e8f\u94fe\u8868", "\u5b9e\u73b0\u601d\u60f3\uff1a", "\u628a\u4e24\u4e2a\u65e0\u5e8f\u7684\u6570\u7ec4\u9996\u5148\u6392\u5e8f\uff0c\u7136\u540e\u518d\u6309\u7167\u94fe\u8868\u7ed3\u6784\u628a\u5b83\u4eec\u5206\u522b\u6784\u9020\u597d\uff0c\u7136\u540e\u518d\u628a\u4e24\u4e2a\u6709\u5e8f\u94fe\u8868\u5408\u5e76\u3002", "int const array1_size = 5;//\u6570\u7ec41\u7684\u957f\u5ea6", "int const array2_size = 7;//\u6570\u7ec42\u7684\u957f\u5ea6", "//\u94fe\u8868\u7ed3\u6784\u4f53", "typedef struct ListNode", "{", "int data;", "ListNode * next;", "}ListNode;", "//\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u94fe\u8868\u8fd4\u56de\u4e0d\u5e26\u5934\u7ed3\u70b9\u7684\u5934\u6307\u9488", "ListNode * MergeList(ListNode *p,ListNode *q)", "{", "ListNode *h,*r;", "h = new ListNode;", "h->next = NULL;", "r = h;", "while(p !=NULL && q != NULL)", "{", "if(p->data <= q->data)", "{", "r->next = p;", "r =p;", "p = p->next;", "}", "else", "{", "r->next = q;", "r =q;", "q = q->next;", "}", "}", "if(p != NULL)", "r->next = p;", "else", "r->next = q;", "p = h;", "h = h->next;", "delete p;", "return h;", "}", "//\u6784\u9020\u4e00\u4e2a\u94fe\u8868\uff08\u6ca1\u6709\u5934\u7ed3\u70b9\u7684\uff09", "ListNode * GenerateList(int array[],int length)", "{", "ListNode * h,*temp,*old_head ;", "h = new ListNode;", "h->next = NULL;", "temp = h;", "for(int i = 0; i< length;i++)", "{", "ListNode *p = new ListNode;", "p->data = array[i];", "temp->next = p;", "temp = p;", "}", "temp->next = NULL;", "old_head = h;", "h = h->next;", "delete old_head;", "return h;", "}", "//\u6253\u5370\u94fe\u8868", "void Print_List(ListNode *h)", "{", "ListNode *p;", "p = h;", "for(;p!=NULL;p=p->next)", "printf(\u201c%d \u201c,p->data);", "}", "//\u5f15\u5165\u5192\u6ce1\u6392\u5e8f\u7b97\u6cd5", "void Swap(int *a,int *b)", "{", "int temp;", "temp = *a;", "*a = *b;", "*b = temp;", "}", "void Bubble_Sort(int *array,int length)", "{", "int pass,j;", "for(pass =1;pass<=length-1;pass++)", "for(j=0;j<=length-2;j++)", "if(array[j]>array[j+1])", "Swap(&array[j],&array[j+1]);", "}", "/*********************OK\uff0c\u6240\u6709\u51c6\u5907\u5de5\u4f5c\u5df2\u7ecf\u505a\u597d\uff0c\u5f00\u59cbmain()\u51fd\u6570**********/", "//\u8f93\u5165\u5b57\u7b26\u8868\u793a\u7ed3\u675f", "int _tmain(int argc, _TCHAR* argv[])", "{", "char end;", "int List1[array1_size]={9,5,6,10,45};", "int List2[array2_size]={3,1,4,6,7,9,0};", "Bubble_Sort(List1,array1_size);", "Bubble_Sort(List2,array2_size);", "ListNode * m_list1,*m_list2,*m_list;", "m_list1 = GenerateList(List1,array1_size);", "m_list2 = GenerateList(List2,array2_size);", "m_list = MergeList(m_list1,m_list2);", "Print_List(m_list);", "scanf(\u201c%c\u201d,&end);", "return 0;", "}"], "title": "C\u8bed\u8a00\u9898\u5e93"},
{"contents": ["\u4e00\u3001\u9009\u62e9\u9898((1)\uff5e(10)\u6bcf\u5c0f\u98982\u5206\uff0c(11)\uff5e(50)\u6bcf\u5c0f\u98981\u5206\uff0c\u517160\u5206)", "\u4e0b\u5217\u5404\u9898A)\u3001B)\u3001C)\u3001D)\u56db\u4e2a\u9009\u9879\u4e2d\uff0c\u53ea\u6709\u4e00\u4e2a\u9009\u9879\u662f\u6b63\u786e\u7684\uff0c\u8bf7\u5c06\u6b63\u786e\u9009\u9879\u6d82\u5199\u5728\u7b54\u9898\u5361\u76f8\u5e94\u4f4d\u7f6e\u4e0a\uff0c\u7b54\u5728\u8bd5\u5377\u4e0a\u4e0d\u5f97\u5206\u3002", "(1)\u7b97\u6cd5\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u662f\u6307________\u3002", "A)\u7b97\u6cd5\u7a0b\u5e8f\u7684\u957f\u5ea6\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)\u7b97\u6cd5\u7a0b\u5e8f\u4e2d\u7684\u6307\u4ee4\u6761\u6570", "C)\u7b97\u6cd5\u7a0b\u5e8f\u6240\u5360\u7684\u5b58\u50a8\u7a7a\u95f4\u00a0\u00a0\u00a0 D)\u7b97\u6cd5\u6267\u884c\u8fc7\u7a0b\u4e2d\u6240\u9700\u8981\u7684\u5b58\u50a8\u7a7a\u95f4", "D", "\u4e00\u4e2a\u7b97\u6cd5\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\uff0c\u4e00\u822c\u662f\u6307\u6267\u884c\u8fd9\u4e2a\u7b97\u6cd5\u6240\u9700\u7684\u5185\u5b58\u7a7a\u95f4\u3002", "\u4e00\u4e2a\u7b97\u6cd5\u6240\u5360\u7528\u7684\u5b58\u50a8\u7a7a\u95f4\u5305\u62ec\u7b97\u6cd5\u7a0b\u5e8f\u6240\u5360\u7684\u7a7a\u95f4\u3001\u8f93\u5165\u7684\u521d\u59cb\u6570\u636e\u6240\u5360\u7684\u5b58\u50a8\u7a7a\u95f4\u4ee5\u53ca\u7b97\u6cd5\u6267\u884c\u8fc7\u7a0b\u4e2d\u6240\u9700\u8981\u7684\u989d\u5916\u7a7a\u95f4\u3002", "\u00a0", "(2)\u4e0b\u5217\u5173\u4e8e\u6808\u7684\u53d9\u8ff0\u4e2d\u6b63\u786e\u7684\u662f________\u3002", "A)\u5728\u6808\u4e2d\u53ea\u80fd\u63d2\u5165\u6570\u636e\u00a0\u00a0\u00a0 \u00a0\u00a0B)\u5728\u6808\u4e2d\u53ea\u80fd\u5220\u9664\u6570\u636e", "C)\u6808\u662f\u5148\u8fdb\u5148\u51fa\u7684\u7ebf\u6027\u8868\u00a0\u00a0\u00a0 D)\u6808\u662f\u5148\u8fdb\u540e\u51fa\u7684\u7ebf\u6027\u8868", "D", "\u6808\u662f\u9650\u5b9a\u5728\u4e00\u7aef\u8fdb\u884c\u63d2\u5165\u4e0e\u5220\u9664\u7684\u7ebf\u6027\u8868\u3002", "\u6808\u662f\u6309\u7167\u201c\u5148\u8fdb\u540e\u51fa\u201d\u7684\u6216\u201c\u540e\u8fdb\u5148\u51fa\u201d\u7684\u539f\u5219\u7ec4\u7ec7\u6570\u636e\u7684\uff0c\u56e0\u6b64\uff0c\u6808\u4e5f\u88ab\u79f0\u4e3a\u201c\u5148\u8fdb\u540e\u51fa\u201d\u8868\u6216\u201c\u540e\u8fdb\u5148\u51fa\u201d\u8868\u3002", "\u00a0", "(3)\u5728\u6df1\u5ea6\u4e3a5\u7684\u6ee1\u4e8c\u53c9\u6811\u4e2d\uff0c\u53f6\u5b50\u7ed3\u70b9\u7684\u4e2a\u6570\u4e3a________\u3002", "A)32\u00a0\u00a0\u00a0 B)31\u00a0\u00a0\u00a0 C)16 \u00a0\u00a0\u00a0\u00a0D)15", "C", "\u6240\u8c13\u6ee1\u4e8c\u53c9\u6811\u662f\u6307\u9664\u6700\u540e\u4e00\u5c42\u5916\uff0c\u6bcf\u5c42\u4e0a\u7684\u6240\u6709\u7ed3\u70b9\u90fd\u6709\u4e24\u4e2a\u5b50\u7ed3\u70b9\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u6ee1\u4e8c\u53c9\u6811\u4e2d\uff0c\u6bcf\u4e00\u5c42\u4e0a\u7684\u7ed3\u70b9\u6570\u90fd\u8fbe\u5230\u6700\u5927\u503c\uff0c\u5373\u5728\u6ee1\u4e8c\u53c9\u6811\u7684\u7b2cK\u5c42\u4e0a\u67092K-1\u4e2a\u7ed3\u70b9\uff0c\u4e14\u6df1\u5ea6\u4e3am\u7684\u6ee1\u4e8c\u53c9\u6811\u67092m\u4e2a\u7ed3\u70b9\u3002", "\u5728\u6ee1\u4e8c\u53c9\u6811\u4e2d\uff0c\u6700\u540e\u4e00\u5c42\u7684\u7ed3\u70b9\u4e2a\u6570\u5c31\u662f\u53f6\u5b50\u7ed3\u70b9\u7684\u4e2a\u6570\uff0c\u672c\u9898\u4e2d\u6df1\u5ea6\u4e3a5\uff0c\u6545\u53f6\u5b50\u7ed3\u70b9\u6570\u4e3a25-1=24=16\u3002", "\u00a0", "(4)\u5bf9\u5efa\u7acb\u826f\u597d\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u98ce\u683c\uff0c\u4e0b\u9762\u63cf\u8ff0\u6b63\u786e\u7684\u662f________\u3002", "A)\u7a0b\u5e8f\u5e94\u7b80\u5355\u3001\u6e05\u6670\u3001\u53ef\u8bfb\u6027\u597d\u00a0\u00a0\u00a0 B)\u7b26\u53f7\u540d\u7684\u547d\u540d\u8981\u7b26\u5408\u8bed\u6cd5", "C)\u5145\u5206\u8003\u8651\u7a0b\u5e8f\u7684\u6267\u884c\u6548\u7387\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0D)\u7a0b\u5e8f\u7684\u6ce8\u91ca\u53ef\u6709\u53ef\u65e0", "A", "\u8981\u5f62\u6210\u826f\u597d\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u98ce\u683c\uff0c\u4e3b\u8981\u5e94\u6ce8\u91cd\u548c\u8003\u8651\u4e0b\u8ff0\u4e00\u4e9b\u56e0\u7d20\uff1a\u7b26\u53f7\u540d\u7684\u547d\u540d\u5e94\u5177\u6709\u4e00\u5b9a\u7684\u5b9e\u9645\u542b\u4e49\uff0c\u4ee5\u4fbf\u4e8e\u5bf9\u7a0b\u5e8f\u529f\u80fd\u7684\u7406\u89e3\uff1b\u6b63\u786e\u7684\u6ce8\u91ca\u80fd\u591f\u5e2e\u52a9\u8bfb\u8005\u7406\u89e3\u7a0b\u5e8f\uff1b\u7a0b\u5e8f\u7f16\u5199\u5e94\u4f18\u5148\u8003\u8651\u6e05\u6670\u6027\uff0c\u9664\u975e\u5bf9\u6548\u7387\u6709\u7279\u6b8a\u8981\u6c42\uff0c\u7a0b\u5e8f\u7f16\u5199\u8981\u505a\u5230\u6e05\u6670\u7b2c\u4e00\uff0c\u6548\u7387\u7b2c\u4e8c\u3002", "\u00a0", "(5)\u4e0b\u9762\u5bf9\u5bf9\u8c61\u6982\u5ff5\u63cf\u8ff0\u9519\u8bef\u7684\u662f________\u3002", "A)\u4efb\u4f55\u5bf9\u8c61\u90fd\u5fc5\u987b\u6709\u7ee7\u627f\u6027\u00a0\u00a0\u00a0 B)\u5bf9\u8c61\u662f\u5c5e\u6027\u548c\u65b9\u6cd5\u7684\u5c01\u88c5\u4f53", "C)\u5bf9\u8c61\u95f4\u7684\u901a\u8baf\u9760\u6d88\u606f\u4f20\u9012\u00a0\u00a0\u00a0 D)\u64cd\u4f5c\u662f\u5bf9\u8c61\u7684\u52a8\u6001\u6027\u5c5e\u6027", "A", "\u5bf9\u8c61\u662f\u7531\u6570\u636e\u548c\u5bb9\u8bb8\u7684\u64cd\u4f5c\u7ec4\u6210\u7684\u5c01\u88c5\u4f53\uff0c\u4e0e\u5ba2\u89c2\u5b9e\u4f53\u6709\u76f4\u63a5\u7684\u5bf9\u5e94\u5173\u7cfb\u3002\u5bf9\u8c61\u4e4b\u95f4\u901a\u8fc7\u4f20\u9012\u6d88\u606f\u4e92\u76f8\u8054\u7cfb\uff0c\u4ee5\u6a21\u62df\u73b0\u5b9e\u4e16\u754c\u4e2d\u4e0d\u540c\u4e8b\u7269\u5f7c\u6b64\u4e4b\u95f4\u7684\u8054\u7cfb\u3002", "\u00a0", "(6)\u4e0b\u9762\u4e0d\u5c5e\u4e8e\u8f6f\u4ef6\u5de5\u7a0b\u76843\u4e2a\u8981\u7d20\u7684\u662f________\u3002", "A)512\u5177\u00a0\u00a0\u00a0 B)\u8fc7\u7a0b\u00a0\u00a0\u00a0 C)\u65b9\u6cd5\u00a0\u00a0\u00a0 D)\u73af\u5883", "D", "\u8f6f\u4ef6\u5de5\u7a0b\u5305\u62ec3\u4e2a\u8981\u7d20\uff0c\u5373\u65b9\u6cd5\u3001\u5de5\u5177\u548c\u8fc7\u7a0b\u3002", "\u00a0", "(7)\u7a0b\u5e8f\u6d41\u7a0b\u56fe(PFD)\u4e2d\u7684\u7bad\u5934\u4ee3\u8868\u7684\u662f________\u3002", "A)\u6570\u636e\u6d41\u00a0\u00a0\u00a0 B)\u63a7\u5236\u6d41\u00a0\u00a0\u00a0 C)\u8c03\u7528\u5173\u7cfb\u00a0\u00a0\u00a0 D)\u7ec4\u6210\u5173\u7cfb", "B", "\u7a0b\u5e8f\u6d41\u7a0b\u56fe(PFD)\u662f\u4e00\u79cd\u4f20\u7edf\u7684\u3001\u5e94\u7528\u5e7f\u6cdb\u7684\u8f6f\u4ef6\u8fc7\u7a0b\u8bbe\u8ba1\u8868\u793a\u5de5\u5177\uff0c\u901a\u5e38\u4e5f\u79f0\u4e3a\u7a0b\u5e8f\u6846\u56fe\uff0c\u5176\u7bad\u5934\u4ee3\u8868\u7684\u662f\u63a7\u5236\u6d41\u3002", "\u00a0", "(8)\u5728\u6570\u636e\u7ba1\u7406\u6280\u672f\u7684\u53d1\u5c55\u8fc7\u7a0b\u4e2d\uff0c\u7ecf\u5386\u4e86\u4eba\u5de5\u7ba1\u7406\u9636\u6bb5\u3001\u6587\u4ef6\u7cfb\u7edf\u9636\u6bb5\u548c\u6570\u636e\u5e93\u7cfb\u7edf\u9636\u00a0\u00a0\u00a0 \u6bb5\u3002\u5176\u4e2d\u6570\u636e\u72ec\u7acb\u6027\u6700\u9ad8\u7684\u9636\u6bb5\u662f________\u3002", "A)\u6570\u636e\u5e93\u7cfb\u7edf\u00a0\u00a0\u00a0\u00a0 B)\u6587\u4ef6\u7cfb\u7edf\u00a0\u00a0\u00a0 C)\u4eba\u5de5\u7ba1\u7406\u00a0\u00a0\u00a0 D)\u6570\u636e\u9879\u7ba1\u7406", "A", "\u5728\u6570\u636e\u7ba1\u7406\u6280\u672f\u7684\u53d1\u5c55\u8fc7\u7a0b\u4e2d\uff0c\u7ecf\u5386\u4e86\u4eba\u5de5\u7ba1\u7406\u9636\u6bb5\u3001\u6587\u4ef6\u7cfb\u7edf\u9636\u6bb5\u548c\u6570\u636e\u5e93\u7cfb\u7edf\u9636\u6bb5\u3002\u5176\u4e2d\u6570\u636e\u72ec\u7acb\u6027\u6700\u9ad8\u7684\u9636\u6bb5\u662f\u6570\u636e\u5e93\u7cfb\u7edf\u3002", "\u00a0", "(9)\u7528\u6811\u5f62\u7ed3\u6784\u6765\u8868\u793a\u5b9e\u4f53\u4e4b\u95f4\u8054\u7cfb\u7684\u6a21\u578b\u79f0\u4e3a________\u3002", "A)\u5173\u7cfb\u6a21\u578b\u00a0 \u00a0\u00a0\u00a0B)\u5c42\u6b21\u6a21\u578b\u00a0 \u00a0\u00a0C)\u7f51\u72b6\u6a21\u578b\u00a0\u00a0\u00a0 D)\u6570\u636e\u6a21\u578b", "B", "\u5c42\u6b21\u6a21\u578b\u662f\u6700\u65e9\u53d1\u5c55\u51fa\u6765\u7684\u6570\u636e\u5e93\u6a21\u578b\u3002\u5b83\u7684\u57fa\u672c\u7ed3\u6784\u662f\u6811\u5f62\u7ed3\u6784\uff0c\u8fd9\u79cd\u7ed3\u6784\u65b9\u5f0f\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\u5f88\u666e\u904d\uff0c\u5982\u5bb6\u65cf\u7ed3\u6784\u3001\u884c\u653f\u7ec4\u7ec7\u673a\u6784\uff0c\u5b83\u4eec\u81ea\u9876\u5411\u4e0b\u3001\u5c42\u6b21\u5206\u660e\u3002", "\u00a0", "(10)\u5173\u7cfb\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\u80fd\u5b9e\u73b0\u7684\u4e13\u95e8\u5173\u7cfb\u8fd0\u7b97\u5305\u62ec________\u3002", "A)\u6392\u5e8f\u3001\u7d22\u5f15\u3001\u7edf\u8ba1\u00a0\u00a0\u00a0 B)\u9009\u62e9\u3001\u6295\u5f71\u3001\u8fde\u63a5", "C)\u5173\u8054\u3001\u66f4\u65b0\u3001\u6392\u5e8f\u00a0\u00a0\u00a0 D)\u663e\u793a\u3001\u6253\u5370\u3001\u5236\u8868", "B", "\u5173\u7cfb\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\u80fd\u5b9e\u73b0\u7684\u4e13\u95e8\u5173\u7cfb\u8fd0\u7b97\uff0c\u5305\u62ec\u9009\u62e9\u8fd0\u7b97\u3001\u6295\u5f71\u8fd0\u7b97\u3001\u8fde\u63a5\u8fd0\u7b97\u3002", "\u00a0", "(11)\u4e0b\u5217\u8bed\u53e5\u4e2d\u7b26\u5408C\u8bed\u8a00\u8bed\u6cd5\u7684\u8d4b\u503c\u8bed\u53e5\u662f________\u3002", "A)a\u20137+b+c\u2013a+7\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0B)a=a+7", "C)a=7+b\uff0cb++\uff0ca+7\uff1b\u00a0\u00a0\u00a0 D)a=7+b\uff0cc=a\u53417\uff1b", "D", "\u7531\u4e8e\u8d4b\u503c\u8bed\u53e5\u662f\u7531\u8d4b\u503c\u8868\u8fbe\u5f0f\u52a0\u5206\u53f7\u6784\u6210\uff0c\u6240\u4ee5\u9009\u9879A\u3001B\u5747\u4e0d\u662f\u5408\u6cd5\u7684\u8d4b\u503c\u8bed\u53e5\uff1b\u9009\u9879c\u4e2d\uff0c\u5b58\u5728\u4e24\u79cd\u8fd0\u7b97\u7b26\uff1a\u9017\u53f7\u8fd0\u7b97\u7b26\u548c\u8d4b\u503c\u8fd0\u7b97\u7b26\uff0c\u5176\u4e2d\u8d4b\u503c\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u9ad8\uff0c\u9009\u9879c\u4e5f\u4e0d\u662f\u3002", "\u00a0", "(12)\u4e0b\u9762\u7a0b\u5e8f", "main()", "{\u00a0 int y=9\uff1b", "for(\uff1by>O\uff1by\u2013i){", "if (y\uff053==O)", "{\u00a0 printf(\u201c\uff05d\u201d,\u2013y)\uff1b", "continuei", "}", "}", "}", "\u7684\u8f93\u51fa\u662f________\u3002", "A)741\u00a0\u00a0\u00a0 B)852\u00a0\u00a0\u00a0 C)963\u00a0\u00a0\u00a0 D)875421", "B", "\u201c\uff05\u201d\u662f\u6c42\u4f59\u8fd0\u7b97\u7b26\uff0c\u6240\u4ee5if\u5224\u65ad\u8bed\u53e5\u4e2d\u5b9e\u9645\u662f\u6307\u51fa\u53ea\u6709\u5f53y\u53ef\u4ee5\u88ab3\u6574\u9664\u65f6\u65b9\u53ef\u4ee5\u7ee7\u7eed\uff1b\u2013y\u662f\u5148\u8fdb\u884cy\u7684\u81ea\u51cf\u8fd0\u7b97\uff0c\u518d\u4f7f\u7528y\u503c\u3002\u6240\u4ee5\uff0c\u6700\u540e\u7684\u6253\u5370\u7ed3\u679c\u5e94\u5f53\u4e3a\u201c852\u201d\u3002", "\u00a0", "(13)\u4e0b\u5217\u56db\u4e2a\u53d9\u8ff0\u4e2d\uff0c\u9519\u8bef\u7684\u662f________\u3002", "A)C\u8bed\u8a00\u4e2d\u7684\u5173\u952e\u5b57\u5fc5\u987b\u5c0f\u5199", "B)c\u8bed\u8a00\u4e2d\u7684\u6807\u8bc6\u7b26\u5fc5\u987b\u5168\u90e8\u7531\u5b57\u6bcd\u7ec4\u6210", "C)c\u8bed\u8a00\u4e0d\u63d0\u4f9b\u8f93\u5165\u8f93\u51fa\u8bed\u53e5", "D)C\u8bed\u8a00\u4e2d\u7684\u6ce8\u91ca\u884c\u53ef\u4ee5\u51fa\u73b0\u5728\u7a0b\u5e8f\u7684\u4efb\u4f55\u4f4d\u7f6e", "B", "c\u8bed\u8a00\u89c4\u5b9a\u6807\u8bc6\u7b26\u53ea\u80fd\u7531\u5b57\u6bcd\u3001\u6570\u5b57\u548c\u4e0b\u5212\u7ebf3\u79cd\u5b57\u7b26\u7ec4\u6210\uff0c\u4e14\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5fc5\u987b\u4e3a\u5b57\u6bcd\u6216\u4e0b\u5212\u7ebf\u3002", "\u00a0", "(14)\u4e0b\u9762\u7a0b\u5e8f", "main()", "{", "int a=-l,b=4,k\uff1b", "k=(a++<=0)&&(!(b\u4e00\u4e00<=O))\uff1b", "printf(\u201c\uff05d\uff05d\uff05d\uff3cn\u201d\uff0ck\uff0ca,b)\uff1b", "}", "\u7684\u8f93\u51fa\u662f________\u3002", "A)0 0 3\u00a0\u00a0\u00a0 B)0 12\u00a0\u00a0\u00a0 C)1 0 3\u00a0\u00a0\u00a0 D)1 1 2", "C", "a++\u662f\u5148\u4f7f\u7528a\u503c\u518d\u5c06a\u7684\u503c\u52a01\uff0cb\u2013\u662f\u5148\u4f7f\u7528b\u7684\u503c\u518d\u5c06b\u7684\u503c\u51cf1\uff0c\u6240\u4ee5\u9898\u4e2d\u7684\u903b\u8f91\u8fd0\u7b97\u8868\u8fbe\u5f0f\u7684\u503c\u5e94\u5f53\u4e3a\u771f\uff0c\u5373\u4e3a1\uff0c\u800c\u7ecf\u8fc7\u8fd0\u7b97\u540e\uff0ca\u548cb\u7684\u503c\u5df2\u7ecf\u5206\u522b\u53d8\u62100\u548c3\u4e86\u3002", "\u00a0", "(15)\u4ee5\u4e0b\u53d9\u8ff0\u4e2d\u6b63\u786e\u7684\u662f________\u3002", "A)\u9884\u5904\u7406\u662f\u6307\u5b8c\u6210\u5b8f\u66ff\u6362\u548c\u6587\u4ef6\u5305\u542b\u4e2d\u6307\u5b9a\u6587\u4ef6\u7684\u8c03\u7528", "B)\u9884\u5904\u7406\u4e5f\u662fC\u8bed\u53e5", "C)C\u6e90\u7a0b\u5e8f\u4e2d\uff0c\u51e1\u662f\u884c\u9996\u4ee5\u6323\u6807\u8bc6\u7684\u63a7\u5236\u884c\u90fd\u662f\u9884\u5904\u7406\u6307\u4ee4", "D)\u9884\u5904\u7406\u5c31\u662f\u5b8c\u6210c\u7f16\u8bd1\u7a0b\u5e8f\u5bf9c\u6e90\u7a0b\u5e8f\u7684\u7b2c\u4e00\u904d\u626b\u63cf\uff0c\u4e3a\u7f16\u8bd1\u7684\u8bcd\u6cd5\u5206\u6790\u548c\u8bed\u6cd5\u5206\u6790\u4f5c\u51c6\u5907", "C", "\u9884\u5904\u7406\u529f\u80fd\u4e3b\u8981\u6709\u4ee5\u4e0b\u4e09\u79cd\uff1a\u5b8f\u5b9a\u4e49\u3001\u6587\u4ef6\u5305\u542b\u548c\u6761\u4ef6\u7f16\u8bd1\uff0c\u6240\u4ee5A\u4e0d\u6b63\u786e\u3002\u9884\u5904\u7406\u4e0d\u662fc\u8bed\u53e5\uff0c\u6240\u4ee5B\u4e0d\u6b63\u786e\u3002\u9884\u5904\u7406\u547d\u4ee4\u662f\u7531ANSI c\u7edf\u4e00\u89c4\u5b9a\u7684\uff0c\u7f16\u8bd1\u7a0b\u5e8f\u4e0d\u80fd\u8bc6\u522b\u5b83\u4eec\uff0cD\u4e5f\u4e0d\u6b63\u786e\u3002", "\u00a0", "(16)\u4e0b\u9762\u7684\u7a0b\u5e8f\u7247\u6bb5", "y=-l\uff1b", "If(x!=0)", "If(x>0) y=1;else y=0;", "\u6240\u8868\u793a\u7684\u6570\u5b66\u51fd\u6570\u5173\u7cfb\u662f_________.", "-1(x<O)\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0l (x<O)", "A)y=\u00a0\u00a0 0 (x=0)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)y=\u00a0\u00a0\u00a0 -1(x=0)", "1 (x>0)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 0 (x>0)", "0 (x<0)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 -1 (x<0)", "C)y=\u00a0\u00a0 -1(x=O)\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0D)y= \u00a0\u00a0\u00a0l (x=O)", "1 (x>O) \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00 (x>O)", "C", "\u672c\u9898\u7684\u8003\u67e5\u70b9\u662f\u6839\u636e\u7a0b\u5e8f\u5199\u51fa\u6570\u5b66\u51fd\u6570\u5173\u7cfb\u3002", "\u9898\u4e2d\u7684\u4e24\u4e2a\u5224\u65ad\u8bed\u53e5\u5b9e\u9645\u4e0a\u6307\u51fa\u4e86y\u53d6\u503c\u7684\u6761\u4ef6\uff0c\u5373\u662f\u5f53x\u5927\u4e8e\u96f6\u65f6y\u53d6l\uff1b\u5f53x\u5c0f\u4e8e\u96f6\u65f6y\u53d60\uff1b\u5f53x\u7b49\u4e8e\u96f6\u65f6y\u503c\u4e0d\u53d8\uff0c\u4e3a-1\u3002", "\u00a0", "(17)\u4e0b\u9762\u7684\u7a0b\u5e8f", "main()", "{\u00a0 int x=3,y=O,z=O\uff1b", "if(x=y+z)printf(\u201c* * * *\u201d)\uff1b", "else printf(\u201d####\u201d)\uff1b", "}", "_________\u3002", "A)\u6709\u8bed\u6cd5\u9519\u8bef\u4e0d\u80fd\u901a\u8fc7\u7f16\u8bd1", "B)\u8f93\u51fa* * * *\u3002", "C)\u53ef\u4ee5\u901a\u8fc7\u7f16\u8bd1\uff0c\u4f46\u662f\u4e0d\u80fd\u901a\u8fc7\u8fde\u63a5\uff0c\u56e0\u800c\u4e0d\u80fd\u8fd0\u884c", "D)\u8f93\u51fa####", "D", "\u672c\u9898\u7684\u8003\u67e5\u70b9\u662f\u8fd0\u7b97\u7b26\u5728\u8868\u8fbe\u5f0f\u4e2d\u7684\u5904\u7406\u539f\u5219\u3002", "\u672c\u9898\u4e2d\u628ay+z\u7684\u503c\u8d4b\u7ed9x\uff0c\u7531\u4e8ey\u548cz\u90fd\u7b49\u4e8e0\uff0c\u6240\u4ee5x\u7684\u503c\u4e5f\u4e3a0\uff0c\u8868\u8fbe\u5f0f\u503c\u4e3afalse\uff0c\u8f93\u51fa\u6491\u6491\u6491\u6491\u3002if\u8bed\u53e5\u4e2dif\u540e\u9762\u7684\u8868\u8fbe\u5f0f\u4e00\u822c\u4e3a\u903b\u8f91\u6216\u5173\u7cfb\u8868\u8fbe\u5f0f\uff0c\u4f46\u4e5f\u53ef\u4ee5\u662f\u4efb\u610f\u7684\u6570\u503c\u7c7b\u578b\u3002", "\u00a0", "(18)\u5728c\u8bed\u8a00\u4e2d\uff0c\u5408\u6cd5\u7684\u957f\u6574\u578b\u5e38\u6570\u662f________\u3002", "A)OL\u00a0\u00a0\u00a0 B)4962710\u00a0\u00a0\u00a0 C)04312765\u00a0\u00a0\u00a0 D)0xa34b7fe", "A", "\u5728\u4e00\u4e2a\u6574\u5e38\u91cf\u540e\u9762\u52a0\u4e00\u4e2a\u5b57\u6bcdl\u6216L\uff0c\u5219\u8ba4\u4e3a\u662flong int\u578b\u5e38\u91cf\u3002", "\u00a0", "(19)\u4e0b\u9762\u51fd\u6570", "int funl(char*x)", "{ char*y=x\uff1b", "while(*y++)\uff1b", "return(y-x-1)\uff1b", "}", "\u7684\u529f\u80fd\u662f__________\u3002", "A)\u6c42\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u5927\u5c0f", "C)\u5c06\u5b57\u7b26\u4e32x\u590d\u5236\u5230\u5b57\u7b26\u4e32y\u00a0 \u00a0D)\u5c06\u5b57\u7b26\u4e32x\u8fde\u63a5\u5230\u5b57\u7b26\u4e32y\u540e\u9762", "A", "\u8bc4\u6298\uff1a\u672c\u9898\u7684\u8003\u67e5\u70b9\u662fwhile()\u5faa\u73af\u8bed\u53e5\u3002", "\u672c\u9898\u9996\u5148\u8981\u6ce8\u610f\u7684\u662f\u5bf9*y++\u7684\u8fd0\u7b97\uff0c\u7531\u4e8e++\u548c*\u4e3a\u540c\u4e00\u4f18\u5148\u7ea7\u522b\uff0c\u4e14\u7ed3\u5408\u65b9\u5411\u4e3a\u81ea\u53f3\u5411\u5de6\uff0c\u56e0\u6b64\u5b83\u76f8\u5f53\u4e8e*(y++)\u3002\u7531\u4e8e++\u5728y\u7684\u53f3\u4fa7\uff0c\u662f\u201c\u540e\u52a0\u201d\uff0c\u56e0\u6b64\u5148\u5bf9y\u7684\u539f\u503c\u8fdb\u884c*\u8fd0\u7b97\uff0c\u7136\u540e\u4f7fy\u7684\u503c\u6539\u53d8\u3002", "\u00a0", "(20)\u8bbeint i=2j=l\uff0ck=3\uff0c\u5219\u8868\u8fbe\u5f0fi\uff06&(i+j)&k\ufe31i+j\u7684\u503c\u662f________\u3002", "A)O\u00a0\u00a0\u00a0 B)2\u00a0\u00a0\u00a0 C)l\u00a0\u00a0\u00a0 D)3", "C", "\u672c\u9898\u8868\u8fbe\u5f0f\u4e2d\u4f18\u5148\u7ea7\u987a\u5e8f\u4ece\u9ad8\u5230\u4f4e\u4e3a\u62ec\u53f7\u3001+\u3001&\u3001\ufe31\u3001&&\u3002", "\u00a0", "(21)\u5df2\u77e5\u5b57\u6bcdA\u7684ASCII\u7801\u4e3a\u5341\u8fdb\u5236\u768465\uff0c\u4e0b\u9762\u7a0b\u5e8f", "main()", "{\u00a0 char chl,ch2\uff1b", "chl=\u2019A\u2019+\u20195\u2019-\u20193\u2019\uff1a", "ch2=\u2019A\u2019+\u20196\u2019-\u20193\u2019\uff1a", "printf(\u201d\uff05d,\uff05Cn\u201d,chl,ch2)\uff1b", "}", "\u7684\u8f93\u51fa_________\u3002", "A)67\uff0cD\u00a0\u00a0\u00a0 B)B\uff0cC\u00a0\u00a0\u00a0 C)C\uff0cD\u00a0\u00a0\u00a0\u00a0\u00a0 D)\u4e0d\u786e\u5b9a\u7684\u503c", "A", "\u7531\u4e8e\u5b57\u7b26\u201c5\u201d\u548c\u201c3\u201d\u7684ASCII\u7801\u76f8\u5dee\u4e3a2\uff0c\u6240\u4ee5ch1\u8fc7\u8fd0\u7b97\u540e\u7684\u503c\u5e94\u4e3a65+2=67\uff1b\u540c\u7406\uff0cch2\u7ecf\u8fc7\u8fd0\u7b97\u540e\u7684\u503c\u5e94\u4e3a65+3=68\uff0c\u5373\u662f\u5b57\u7b26\u201cD\u201d\u3002", "\u00a0", "(22)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "#include<stdio\uff0eh>", "main()", "{", "int a,b,d=24l\uff1a", "a=d\uff0fl00\uff059\uff1b", "b=(-1)&&(-1)\uff1b", "printf(\u201d\uff05d\uff0c\uff05d\uff3cn\u201d\uff0ca\uff0cb)\uff1b", "}", "A)6\uff0c1\u00a0\u00a0\u00a0 B)2\uff0c1\u00a0\u00a0\u00a0 C)6\uff0c0\u00a0\u00a0\u00a0 D)2\uff0c0", "B", "\u7b2c\u4e00\u4e2a\u8868\u8fbe\u5f0f\u4e2d\uff0c\u8fd0\u7b97\u7684\u65b9\u5411\u662f\u4ece\u5de6\u81f3\u53f3\uff0c\u6240\u4ee5a\u7684\u503c\u4e3a2\uff1b\u7b2c\u4e8c\u4e2a\u8868\u8fbe\u5f0f\u4e2d\uff0c\u7b49\u5f0f\u53f3\u8fb9\u662f\u4e00\u4e2a\u903b\u8f91\u8868\u8fbe\u5f0f\uff0c\u7531\u4e8e\u7ed3\u679c\u4e3a\u771f\uff0c\u6240\u4ee5\u8868\u8fbe\u5f0f\u7684\u503c\u4e3al\uff0c\u5373b\u4e3a1\u3002", "\u00a0", "(23)\u4e0b\u5217\u9009\u9879\u4e2d\u975e\u6cd5\u7684\u8868\u8fbe\u5f0f\u662f________\u3002", "A)0<=x<100\u00a0\u00a0\u00a0 B)I=j==0\u00a0\u00a0\u00a0 C)(char)(65+3)\u00a0 \u00a0D)x-t-l=x+l", "D", "\u503c\u8868\u8fbe\u5f0f\u7684\u5de6\u4fa7\u4e0d\u80fd\u4e3a\u5e38\u91cf\u6216\u8868\u8fbe\u5f0f\uff0c\u6240\u4ee5D\u662f\u975e\u6cd5\u7684\u8868\u8fbe\u5f0f\u3002", "\u00a0", "(24)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "#include<stdio\uff0eh>", "main()", "{", "print\u5216\uff05~n\u201d,NULL)\uff1b", "}", "A)\u4e0d\u786e\u5b9a\u7684(\u56e0\u53d8\u91cf\u65e0\u5b9a\u4e49)\u00a0\u00a0\u00a0 \u00a0\u00a0B)0", "C)-l\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)l", "B", "NULL\u5728c\u7f16\u8bd1\u5668\u4e2d\u662f\u4e00\u4e2a\u503c\u4e3a0\u7684\u5e38\u91cf\uff0c\u5b83\u7684\u5b9a\u4e49\u5728\u5934\u6587\u4ef6\u201cstdio\uff0eh\u201d\u4e2d\uff0c\u672c\u9898\u7684\u7a0b\u5e8f\u5728\u4e00\u5f00\u59cb\u5c31\u5305\u542b\u4e86\u8fd9\u4e2a\u5934\u6587\u4ef6\u2019\uff0c\u6240\u4ee5\uff0c\u5728\u6253\u5370\u7684\u65f6\u5019\uff0c\u5c06\u6253\u5370\u51fa0\u3002", "\u00a0", "(25)\u5728\u4e0b\u9762\u7684\u8bed\u53e5\u4e2d\uff0c\u8d4b\u503c\u8bed\u53e5\u9519\u8bef\u7684\u662f________\u3002", "A)a=(b=(c=2\uff0cd=3))\uff1b\u00a0\u00a0\u00a0 B)i++\uff1a", "C)a\u2013a\uff0fb=2\uff1b\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)a=a<a+1\uff1a", "C", "c\u8bed\u8a00\u4e2d\u7684\u8d4b\u503c\u53f7\u201c=\u201d\u662f\u4e00\u4e2a\u8fd0\u7b97\u7b26\uff1b\u2461\u8d4b\u503c\u8bed\u53e5\u662f\u7531\u8d4b\u503c\u8868\u8fbe\u5f0f\u52a0\u4e0a\u4e00\u4e2a\u5206\u53f7\u6784\u6210\u3002\u8d4b\u503c\u8868\u8fbe\u5f0f\u7684\u5de6\u4fa7\u4e0d\u80fd\u4e3a\u5e38\u91cf\u6216\u8868\u8fbe\u5f0f\u3002", "\u00a0", "(26)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "main()", "{\u00a0 int k=4\uff0cm=1\uff0cp\uff1b", "p=func(k\uff0cm)\uff1bprintf(\u201c\uff05d\uff0c\u201d\uff0cp)\uff1b", "p=func(k\uff0cm)\uff1bprintf(\u201d\uff05d\uff3cn\u201d\uff0cp)\uff1b", "}", "func(int a,int b)", "{\u00a0 static int m\uff1aO\uff0ci=2\uff1b", "i+=m+l\uff1bm=i+a+b\uff1b", "return(m)\uff1b", "}", "A)8\uff0c17\u00a0\u00a0\u00a0 B)8\uff0c16\u00a0\u00a0\u00a0 C)8\uff0c20\u00a0\u00a0\u00a0 D)8\uff0e8", "A", "k\u548cm\u7684\u503c\u5e26\u5165\u51fd\u6570func\u4e2d\uff0c\u7b2c\u4e00\u6b21\u8c03\u7528\u5b8cfunc()\u540e\uff0c\u5176\u4e2dm\u548ci\u7684\u503c\u8981\u4fdd\u7559\uff0c\u5e76\u5728\u7b2c\u4e8c\u6b21\u8c03\u7528\u65f6\u4f7f\u7528\uff0c\u8fd9\u662f\u56e0\u4e3a\u4e24\u8005\u90fd\u662f\u5c40\u90e8\u9759\u6001\u53d8\u91cf\u3002\u6240\u4ee5\u6700\u540e\u7684\u7ed3\u679c\u662f8\u548c17\u3002", "\u00a0", "(27)\u4ee5\u4e0b\u7a0b\u5e8f\u8c03\u7528findmax\u51fd\u6570\u6c42\u6570\u7ec4\u4e2d\u503c\u6700\u5927\u7684\u5143\u7d20\u5728\u6570\u7ec4\u4e2d\u7684\u4e0b\u6807\uff0c\u8bf7\u9009\u62e9\u586b\u7a7a\uff1a", "#include<stdio\uff0eh>", "findmax(int*s,int t,int*k)", "{\u00a0 int p\uff1b", "for(p=0\uff0c*k=p\uff1bp<t\uff1bp++)", "if(s[p]>s[*k])___________\uff1b", "}", "main()", "{\u00a0 int a[10]\uff0ci\uff0ck\uff1b", "for(i=0\uff1bi<10\uff1bi++)scanf(\u201d\uff05d\u201d\uff0c&a[I])\uff1b", "findmax(a,lO,&k)\uff1b", "printf(\u201d\uff05d\uff0c\uff05d\uff3cn\u201d\uff0ck\uff0ca[k])\uff1b", "}", "A)k=p\u00a0\u00a0\u00a0 B)*k=p-s\u00a0\u00a0\u00a0 C)k=p\u2014s\u00a0\u00a0\u00a0 D)*k=p", "D", "k\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u5b83\u7684\u503c\u662f\u4e00\u4e2a\u5730\u5740\uff0c\u8981\u901a\u8fc7\u5b83\u4e3a\u4e3b\u51fd\u6570\u7684\u53d8\u91cf\u6539\u53d8\u6570\u636e\uff0c\u5fc5\u987b\u4f7f\u7528*p\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u628a\u4e00\u4e2a\u4e0b\u6807\u6570\u8d4b\u7ed9p\u6307\u9488\u6307\u5411\u7684\u90a3\u4e2a\u5185\u5b58\u5355\u5143\uff0c\u6240\u4ee5\u6a2a\u7ebf\u5904\u5e94\u586b\u5165*k=p\u3002", "\u00a0", "(28)\u5728\u6267\u884c\u4ee5\u4e0b\u7a0b\u5e8f\u65f6\uff0c\u4e3a\u4e86\u4f7f\u8f93\u51fa\u7ed3\u679c\u4e3at=4\uff0c\u7ed9a\u548cb\u8f93\u5165\u7684\u503c\u5e94\u8be5\u6ee1\u8db3\u7684\u6761\u4ef6\u662f_________\u3002", "main()", "{", "int s\uff0ct\uff0ca\uff0cb\uff1b", "scanf(\u201d\uff05d\uff05d\u201d\uff0c&a\uff0c&b)\uff1b", "s=l\uff1bt=I\uff1b", "if(a>O)s=s+1\uff1b", "if(a>b)t=s+t\uff1b", "else if(a==b)t=5\uff1b", "else t=20s\uff1a", "printf(\u201dt=\uff05d\uff3cn\u201d\uff0ct)\uff1b", "}", "A)a>b\u00a0\u00a0\u00a0 B)a<b<0\u00a0\u00a0\u00a0 C)0<a<b\u00a0\u00a0\u00a0 D)0>a>b", "C", "\u8981\u4f7f\u8f93\u51fa\u7ed3\u679c\u4e3at=4\uff0c\u5fc5\u987b\u8981\u6267\u884celse t=2*s\uff1b\u548cif(a>b)t=s+t\uff1b\u8bed\u53e5\u3002\u5982\u679c\u6267\u884cif(a>b)t=s+t\uff1b\u8bed\u53e5\uff0c\u5219\u6761\u4ef6\u4e3aa>b\uff0c\u8981\u6c42s=3\uff0c\u5728\u8be5\u8bed\u53e5\u524d\u9762\u7684\u8bed\u53e5\u4e2d\u6ca1\u6709\u6761\u4ef6\u53ef\u4ee5\u6ee1\u8db3s=3\uff1b\u5982\u679c\u6267\u884celse t=2*s\uff1b\u8bed\u53e5\uff0c\u5219\u6761\u4ef6\u4e3aa<b\uff0c\u8981\u6c42s=2\uff0c\u9700\u8981\u6267\u884cif(a>O)s=s+l\uff1b\u8bed\u53e5\uff0c\u6240\u4ee5\u5e94\u6ee1\u8db3\u6761\u4ef60<a<b\u3002", "\u00a0", "(29)\u4ee5\u4e0b\u51fd\u6570\u8c03\u7528\u8bed\u53e5\u4e2d\u542b\u6709_________\u4e2a\u5b9e\u53c2\u3002", "func((expl,exp2)\uff0c(exp3,exp4,exp5))\uff1b", "A)l\u00a0\u00a0\u00a0 B)2\u00a0\u00a0\u00a0 C)4\u00a0\u00a0\u00a0 D)5", "B", "\u5b9e\u53c2\u53ef\u4ee5\u662f\u5e38\u91cf\u3001\u53d8\u91cf\u6216\u8868\u8fbe\u5f0f\uff0c(expl,exp2)\u662f\u9017\u53f7\u8868\u8fbe\u5f0f\uff0c\u5b83\u7684\u503c\u662fexp2\u7684\u503c\uff1b(exp3,exp4,exp5)\u662f\u9017\u53f7\u8868\u8fbe\u5f0f\uff0c\u5b83\u7684\u503c\u662fexp5\u7684\u503c\u3002\u6240\u4ee5\u8be5\u51fd\u6570\u8c03\u7528\u8bed\u53e5\u542b\u6709\u7684\u5b9e\u53c2\u4e2a\u6570\u662f2\uff0c\u5373\uff1a(expl,exp2)\u548c(exp3,exp4,exp5)\u3002", "\u00a0", "(30)\u6267\u884c\u4ee5\u4e0b\u7a0b\u5e8f\u540e\uff0c\u8f93\u51fa\u7684\u7ed3\u679c\u662f__________\u3002", "main()", "{", "int y=10\uff1b", "do{y\u2013\uff1b}while(\u2013y)\uff1b", "printf(\u201d\uff05d\uff3cn\u201d,y\u2013)\uff1b", "}", "A)\u4e00l\u00a0\u00a0\u00a0 B)l\u00a0\u00a0\u00a0 C)8\u00a0\u00a0\u00a0 D)0", "D", "do-while\u8bed\u53e5\u7684\u7279\u70b9\u662f\u5148\u6267\u884c\u5faa\u73af\u4f53\uff0c\u7136\u540e\u5224\u65ad\u5faa\u73af\u6761\u4ef6\u662f\u5426\u6210\u7acb\uff0c\u5f53\u5faa\u73af\u6761\u4ef6\u7684\u503c\u4e3a0\u65f6\u5faa\u73af\u7ed3\u675f\u3002\u5f53y=O\u65f6\u5faa\u73af\u7ed3\u675f\uff0cprintf(\u201c\uff05d\\n\u201d,y\u2013)\uff1b\u8bed\u53e5\u662f\u5148\u8f93\u51fay\u518d\u81ea\u51cf\uff0c\u6240\u4ee5\u8f93\u51fa\u7ed3\u679c\u4e3a0\u3002", "\u00a0", "(31)\u5728C\u8bed\u8a00\u4e2d\uff0c\u8981\u6c42\u8fd0\u7b97\u6570\u5fc5\u987b\u662f\u6574\u578b\u7684\u8fd0\u7b97\u7b26\u662f__________\u3002", "A)\uff05\u00a0\u00a0\u00a0 B)\uff0f\u00a0\u00a0\u00a0 C)<\u00a0\u00a0\u00a0 D)!", "A", "\u9898\u76ee\u7684\u56db\u4e2a\u9009\u9879\u4e2d\uff0c(B)(C)(D)\u90fd\u4e0d\u8981\u6c42\u8fd0\u7b97\u6570\u5fc5\u987b\u4e3a\u6574\u6570\uff0c\u53c2\u4e0e\u6a21\u8fd0\u7b97(\uff05)\u7684\u8fd0\u7b97\u6570\u5fc5\u987b\u662f\u6574\u578b\u6570\u636e\u3002", "\u00a0", "(32)c\u8bed\u8a00\u63d0\u4f9b\u7684\u5408\u6cd5\u7684\u6570\u636e\u7c7b\u578b\u5173\u952e\u5b57\u662f__________\u3002", "A)DoubIe\u00a0\u00a0\u00a0 B)noat\u00a0\u00a0\u00a0 C)integer\u00a0\u00a0\u00a0 D)Char", "B", "\u9009\u9879A\u548cD\u4e2d\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u5927\u5199\uff0c\u4e0d\u6b63\u786e\uff1b", "\u9009\u9879c\u662fPASCAL\u4e2d\u7684\u6574\u578b\u5173\u952e\u5b57\uff0c\u4e0d\u662fc\u8bed\u8a00\u4e2d\u7684\u5173\u952e\u5b57\u3002", "\u00a0", "(33)\u8bbe\u6709\u4ee5\u4e0b\u5b9a\u4e49\uff1a", "int a[3][3]={1,2,3,4,5,6,7,8,9}\uff1b", "int(*ptr)[3]=a\uff0c*p=a[0]\uff1b", "\u5219\u4e0b\u5217\u80fd\u591f\u6b63\u786e\u8868\u793a\u6570\u7ec4\u5143\u7d20a[1][2]\u7684\u8868\u8fbe\u5f0f\u662f___________\u3002", "A)*((*ptr+1)[2])\u00a0\u00a0\u00a0 B)*(*(p+5))", "C)(*ptr+1)+2\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0D)*(*(a+1)+2)", "D", "+(p+5)\u6240\u6307\u5411\u7684\u6570\u7ec4\u5143\u7d20\u662fa[1][2]\uff0c\u6240\u4ee5B\u4e0d\u5bf9\uff1bptr\u6240\u6307\u5411\u7684\u662f\u4e00\u4e2a\u542b\u6709\u4e09\u4e2a\u5143\u7d20\u7684\u4e00\u7ef4\u6570\u7ec4\uff0c\u6240\u4ee5A\u548cC\u662f\u9519\u8bef\u7684\u3002", "\u00a0", "(34)\u82e5\u6709\u4ee5\u4e0b\u8bf4\u660e\uff1a", "int a[10]={1,2,3,4,5,6,7,8,9,10}\uff0c*p=a\uff1b", "\u5219\u503c\u4e3a6\u7684\u8868\u8fbe\u5f0f\u662f__________\u3002", "A)*p+6\u00a0\u00a0\u00a0 B)*(p+6)\u00a0\u00a0\u00a0 C)*p+=5\u00a0\u00a0\u00a0 D)p+5", "C", "\u9009\u9879A\uff0c*p+6\uff0c\u5176\u503c\u7b49\u4e8e1+6=7\uff1b\u9009\u9879B\uff0c*(p+6)\uff0c\u5176\u503c\u7b49\u4e8ea[6]=7\uff1b\u9009\u9879c\uff0c*p+=5\uff0c\u5176\u503c\u7b49\u4e8e*p=*p+5=l+5=6\uff1b\u9009\u9879D\uff0cp+5\u662f\u4e2a\u5730\u5740\u503c\u3002", "\u00a0", "(35)\u4e0b\u5217\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f__________\u3002", "fun()", "{", "static int x=5\uff1a", "if(x++>5)printtf(\u201d\uff05dft\uff0cx)\uff1b", "else printf(\u201d\uff05d\uff0e\u2019\uff0c)\u6c41+)\uff1b", "}", "mainO", "{", "fun()\uff1bfun()\uff1b", "}", "A)67\u00a0\u00a0\u00a0 B)69\u00a0\u00a0\u00a0 C)68\u00a0\u00a0\u00a0 D)78", "C", "\u6a21\u5757\u7684\u4ee3\u7801\u5f00\u59cb\u8fd0\u884c\u540e\uff0c\u4f7f\u7528static\u8bed\u53e5\u58f0\u660e\u7684\u53d8\u91cf\u4f1a\u4e00\u76f4\u4fdd\u6301\u5176\u503c\uff0c\u76f4\u81f3\u8be5\u6a21\u5757\u590d\u4f4d\u6216\u91cd\u65b0\u542f\u52a8\u3002\u5728\u7b2c1\u6b21\u8c03\u7528fun\u51fd\u6570\u65f6\uff0cx\u7684\u521d\u503c\u4e3a5\uff0cif\u8bed\u53e5\u7684\u6761\u4ef6\u4e0d\u6210\u7acb\uff0c\u6267\u884celse printf(\u201c\uff05d\u201dx++)\uff1b\u8bed\u53e5\uff0c\u8f93\u51fa6\uff0c\u6267\u884c\u540ex\u7684\u503c\u53d8\u4e3a7\uff0c\u7531\u4e8ex\u662f\u9759\u6001\u5c40\u90e8\u53d8\u91cf\uff0c\u5728\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u540e\uff0c\u5b83\u5e76\u4e0d\u91ca\u653e\uff0c\u4ecd\u4fdd\u7559x=7\u3002\u5728\u7b2c2\u6b21\u8c03\u7528fun\u51fd\u6570\u65f6\uff0cif\u8bed\u53e5\u7684\u6761\u4ef6\u6210\u7acb\uff0c\u6267\u884cprint\u63a3\uff05\u223dx)\uff1b\u8bed\u53e5\uff0c\u8f93\u51fa8\u3002", "\u00a0", "(36)\u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u662f__________\u3002", "main()", "{", "int m=Oxa,n=2\uff1b", "m+=n\uff1a", "printf(\u201c\u201d\uff05x\uff3cn\u201d\u201d\uff0cm)\uff1b", "}", "A)C\u00a0\u00a0\u00a0 B)c\u00a0\u00a0\u00a0 C)99\u00a0\u00a0\u00a0 D)2", "A", "\u683c\u5f0f\u63a7\u5236\u7b26x\u8868\u793a\u6570\u636e\u6309\u5341\u516d\u8fdb\u5236\u5f62\u5f0f\u8f93\u51fa(\u4e0d\u8f93\u51fa\u524d\u5bfc\u7b260x)\u3002\u672c\u9898\u5728\u6267\u884c\u8bed\u53e5m\u5341\u4e00n\uff1a\u540e\uff0cm\u7684\u503c\u53d8\u4e3a\u5b57\u6bcdc\uff0c\u53c8\u56e0\u4e3a\u5728\u8f93\u51faa-f\u65f6\uff0c\u5982\u679c\u683c\u5f0f\u63a7\u5236\u7b26\u7528x\uff0c\u5219\u4ee5\u5927\u5199\u5b57\u6bcd\u8f93\u51fa\uff1b\u5982\u679c\u7528x\uff0c\u5219\u4ee5\u5c0f\u5199\u5b57\u6bcd\u8f93\u51fa\uff0c\u6545\u672c\u9898\u7b54\u6848\u4e3aA\u3002", "\u00a0", "(37)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "#include<string\uff0eh>", "main()", "{char*a=\u201dabcdefghi\u201d\uff1bint k\uff1b", "fun(a)\uff1bputs(a)\uff1b", "}", "fun(char\u00a0 *s)", "{\u00a0 intx\uff0cy\uff1bchar c\uff1b", "for(x=O,y=strlen(s)-l\uff1bx<y\uff1bx++,y\u2013)", "{ C=S[y]\uff1bs[y]=s[x]\uff1bs[x]=c\uff1b}", "}", "A)ihgfedcba\u00a0\u00a0\u00a0 B)abcde\u7535hi\u00a0\u00a0\u00a0 C)abcdedcba\u00a0\u00a0\u00a0 D)ihgfefghi", "A", "\u89c2\u5bdf\u5b50\u51fd\u6570fun()\u53ef\u77e5\uff0c\u5b83\u662f\u5b9e\u73b0\u4e00\u4e2a\u6570\u7ec4\u9996\u672b\u5143\u7d20\u4f4d\u7f6e\u4e92\u76f8\u4f9d\u6b21\u4ea4\u6362\u3002\u8054\u7cfb\u4e3b\u51fd\u6570\uff0c\u53ef\u4ee5\u770b\u51fa\uff0c\u662f\u5bf9\u5b57\u7b26\u4e32\u4e2d\u7684\u5143\u7d20\u4f9d\u6b21\u8fdb\u884c\u9996\u672b\u4f4d\u7f6e\u7684\u5bf9\u8c03\u3002", "\u00a0", "(38)\u8bbe\u6709\u5982\u4e0b\u51fd\u6570\u5b9a\u4e49\uff0c\u5219\u8f93\u51fa\u7ed3\u679c\u4e3a_________\u3002", "Char*fun(char*str)", "{", "char*p=str\uff1b", "while(*p)", "{if(*p>\u2019d\u2019)continue\uff1b", "p++\uff1b", "}", "return p\uff1b", "}", "main()", "{", "printF\uff05s\uff3cn\u201d,fun(\u201dwelcome!\u201d))\uff1b", "}", "A)welcome\u00a0\u00a0\u00a0 B)come!\u00a0\u00a0\u00a0 C)w\u00a0\u00a0\u00a0 D)\u7a0b\u5e8f\u8fdb\u5165\u6b7b\u5faa\u73af", "D", "continue\u8bed\u53e5\u7684\u4f5c\u7528\u662f\u7528\u4e8e\u7ed3\u675f\u672c\u6b21\u5faa\u73af\uff0c\u5373\u8df3\u8fc7\u5faa\u73af\u4f53\u4e2d\u4e0b\u9762\u5c1a\u672a\u6267\u884c\u7684\u8bed\u53e5\uff0c\u63a5\u7740\u8fdb\u884c\u4e0b\u4e00\u6b21\u662f\u5426\u6267\u884c\u5faa\u73af\u7684\u5224\u5b9a\u3002\u7531\u4e8e\u2018w\u2019>\u2018d\u2019\u6267\u884ccontinue\u8bed\u53e5\uff0c\u7ed3\u675f\u672c\u6b21\u5faa\u73af(\u5373\u8df3\u8fc7p++\uff1b\u8bed\u53e5)\uff0c\u8fd8\u662f\u7ee7\u7eed\u6bd4\u8f83\u2018w\u2019>\u2018d\u2019\uff0c\u7a0b\u5e8f\u8fdb\u5165\u6b7b\u5faa\u73af\u3002", "\u00a0", "(39)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "main()", "{\u00a0 union{char i[2]\uff1b", "int\u00a0 k\uff1a", "}r\uff1b", "r\uff0ei[0]=2\uff1br\uff0ei[1]=0\uff1b", "printf(\u201d\uff05d\uff3cn\u201d\uff0cr\uff0ek)\uff1b", "}", "A)2\u00a0\u00a0\u00a0 B)l\u00a0\u00a0\u00a0 C)0\u00a0\u00a0\u00a0 D)\u4e0d\u786e\u5b9a", "A", "\u6839\u636e\u5171\u7528\u4f53\u7684\u5b9a\u4e49\u53ef\u77e5\uff1a\u5171\u7528\u4f53r\u7684\u6210\u5458k\u548c\u6210\u5458i[2]\u662f\u5171\u7528\u540c\u4e00\u6bb5\u5185\u5b58\u7a7a\u95f4\uff0c\u6240\u4ee5\uff0c\u5f53\u7a0b\u5e8f\u7ed9r\uff0ei[0]\u8d4b\u503c\u540e\uff0c\u5b9e\u9645\u4e0a\uff0c\u5171\u7528\u4f53\u6210\u5458k\u7684\u503c\u4e5f\u786e\u5b9a\u4e86\uff0c\u4e3a2\u3002\u6240\u4ee5\u6253\u5370\u8f93\u51fa\u7684\u7ed3\u679c\u5e94\u5f53\u4e3a2\u3002", "\u00a0", "(40)\u8bbep1\u548cp2\u662f\u6307\u5411\u540c\u4e00\u4e2aint\u578b\u4e00\u7ef4\u6570\u7ec4\u7684\u6307\u9488\u53d8\u91cf\uff0ck\u4e3aint\u578b\u53d8\u91cf\uff0c\u5219\u4e0b\u5217\u4e0d\u80fd\u6b63\u786e\u6267\u884c\u7684\u8bed\u53e5\u662f_________\u3002", "A)l(=*pl+*p2\uff1b\u00a0\u00a0\u00a0 B)p2=k\uff1b\u00a0\u00a0\u00a0 C)pl=p2\uff1b\u00a0\u00a0\u00a0 D)k=*pl*(*p2)\uff1b", "B", "\u6307\u9488\u53d8\u91cf\u4e2d\u53ea\u5b58\u653e\u5730\u5740(\u6307\u9488)\uff0c\u4e0d\u8981\u5c06\u4e00\u4e2a\u6574\u578b\u91cf(\u6216\u4efb\u4f55\u5176\u4ed6\u975e\u5730\u5740\u7c7b\u578b\u7684\u6570\u636e)\u8d4b\u7ed9\u4e00\u4e2a\u6307\u9488\u53d8\u91cf\uff0c\u6240\u4ee5B\u662f\u4e0d\u6b63\u786e\u7684\u3002", "\u00a0", "(41)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f__________\u3002", "#define f(x)\u00a0 X*X", "main()", "{\u00a0 int a=6\uff0cb=2\uff0cc\uff1b", "c=f(a)\uff0ff(b)\uff1b", "printf(\u201d\uff05d\uff3cn\u201d\uff0cC)\uff1b", "}", "A)9\u00a0\u00a0\u00a0 B)6\u00a0\u00a0\u00a0 C)36\u00a0\u00a0\u00a0 D)18", "C", "\u89c2\u5bdf\u7a0b\u5e8f\u6bb5\u53ef\u77e5\uff0c\u5bf9\u5e26\u53c2\u6570\u7684\u5b8f\u7684\u5c55\u5f00\u53ea\u662f\u5c06\u8bed\u53e5\u4e2d\u7684\u5b8f\u540d\u540e\u9762\u62ec\u53f7\u5185\u7684\u5b9e\u53c2\u5b57\u7b26\u4e32\u4ee3\u66ff#define\u547d\u4ee4\u884c\u4e2d\u7684\u5f62\u53c2\u3002\u672c\u9898\u4e2dc=f(a)\uff0ff(b)\u7528#define f(x)X*X\u4ee3\u66ff\u5f97c=f(6)\uff0ff(2)\uff0c\u5373c=6*6\uff0f2*2\uff0c\u7ed3\u679c\u4e3a36\u3002", "\u00a0", "(42)\u82e5\u6709\u4ee5\u4e0b\u5b9a\u4e49\uff1a", "char s[20]=\u201dprogramming\u201d,*ps=s\uff1b", "\u5219\u4e0d\u80fd\u4ee3\u8868\u5b57\u7b26\u3002\u7684\u8868\u8fbe\u5f0f\u662f__________\u3002", "A)ps+2\u00a0\u00a0\u00a0 B)s[2]\u00a0\u00a0\u00a0 C)ps[2]\u00a0\u00a0\u00a0 D)ps+=2,*ps", "A", "ps+2\u5c31\u662fs[21\u7684\u5730\u5740\uff0c\u5373\u5b58\u653e\u5b57\u7b26\u3002\u7684\u5730\u5740\u3001\u6240\u4ee5A\u662f\u9519\u8bef\u7684\u3002", "\u00a0", "(43)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "main()", "{\u00a0 int\u00a0 i\uff1b", "for(i=1\uff1bi<6\uff1bi++)", "{\u00a0 if(i\uff052){printf(\u201d\u2225)\uff1bcontinue\uff1b}", "printf(\u201d\u5f15\u2019)\uff1b", "}", "printf(\u201d\uff3cn\u201d)\uff1b", "}", "A)#*#*#\u00a0\u00a0\u00a0 B)#####\u00a0\u00a0\u00a0 C)*****\u00a0\u00a0\u00a0 D)*#*#*", "A", "i\u4ece1\u52305\u5faa\u73af5\u6b21\uff0ci\u4e3a1\u65f6\uff0c\u6ee1\u8db3\u6761\u4ef6\uff0c\u6253\u5370\u8f93\u51fa\u201c#\u201d\uff1ai\u4e3a2\u65f6\uff0c\u6761\u4ef6\u4e3a\u5047\uff0c\u6253\u5370\u8f93\u51fa\u201c*\u201d\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53i\u4e3a\u5947\u6570\u65f6\uff0c\u6761\u4ef6\u4e3a\u771f\uff0c\u7a0b\u5e8f\u6253\u5370\u8f93\u51fa\u201c#\u201d\uff0c\u5426\u5219\uff0c\u8f93\u51fa\u201c*\u201d\u3002", "\u00a0", "(44)\u6709\u5982\u4e0b\u7a0b\u5e8f", "main()", "{", "int n=9\uff1a", "while(n>6)", "{", "n--\uff1b", "printf(\u201d\uff05d|\uff0e\uff0cn)\uff1b", "}", "}", "\u8be5\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f__________\u3002", "A)987\u00a0\u00a0\u00a0 B)876\u00a0\u00a0\u00a0 C)8765\u00a0\u00a0\u00a0 D)9876", "B", "\u7b26\u5408n>6\u7684n\u53ea\u67097\uff0c8\uff0c9\uff1b\u6240\u4ee5\u5faa\u73af\u6b21\u6570\u4e3a3\u3002\u9009\u9879c\u3001D\u53ef\u4ee5\u6392\u9664\u3002\u53c8\u56e0n\u5728\u8f93\u51fa\u4e4b\u524d\u8981\u6267\u884cn--\uff0c\u6240\u4ee5\u8f93\u51fa\u7ed3\u679c\u53ea\u80fd\u662f876\u3002", "\u00a0", "(45)\u4e0b\u5217\u7a0b\u5e8f\u662f\u5c06\u4e00\u4e2a\u5341\u8fdb\u5236\u6b63\u6574\u6570\u8f6c\u5316\u4e3a\u4e00\u4e2a\u516b\u8fdb\u5236\u6570\uff0c\u5728\u7a0b\u5e8f\u7684\u7a7a\u767d\u5904\u5e94\u586b\u5165\u7684\u8bed\u53e5\u662f__________\u3002", "#include<stdio\uff0eh>", "main()", "{", "int I=9\uff0ca\uff0cb[10]={0}\uff1b", "scanf(\u201d\uff05d\u201d\uff0c&a)\uff1b", "sub(a\uff0cb)\uff1b", "for(\uff1bi>=O\uff1bi\u2013)printf(\u201d\uff05d\u201d\uff0cb[I])\uff1b", "}", "sub(int c,int d[])", "{\u00a0 int e\uff0ci=O\uff1b", "while(c!=0)", "{e=c\uff058\uff1b", "d[i]=e\uff1b", "__________;", "i++\uff1a", "}", "return\uff1b", "}", "A)c=e\uff0f8\u00a0\u00a0\u00a0 B)C=C\uff058\u00a0\u00a0\u00a0 C)C=C\uff0f8\u00a0\u00a0\u00a0 D)c=e\uff058", "C", "\u672c\u9898\u4e3b\u8981\u8003\u67e5\u4e86\u8fdb\u5236\u8f6c\u6362\u7684\u9664\u4f59\u53d6\u6574\u6cd5\u3002\u672c\u7b97\u6cd5\u4e2d\uff0c\u662f\u5148\u5bf9\u6570c\u96648\u53d6\u4f59\u4f5c\u4e3a\u8f6c\u6362\u540e\u76848\u8fdb\u5236\u6570\u7684\u7b2cl\u4f4d\uff0c\u7136\u540e\u5bf9c\u6574\u9664\u4ee58\u7684\u5546\u4f5c\u540c\u6837\u7684\u64cd\u4f5c\uff0c\u76f4\u5230\u5546\u4e3a0\u4e3a\u6b62\uff0c\u56e0\u6b64\u672c\u9898\u5e94\u9009c\u3002", "\u00a0", "(46)\u6267\u884c\u4e0b\u9762\u7684\u7a0b\u5e8f\u6bb5", "int x=35\uff1b", "char z=\u2019A\u2019;", "int B\uff1a", "B=((x&15)&&(z<\u2019a\u2019))\uff1b", "\u540e\uff0cB\u7684\u503c\u4e3a____________\u3002", "A)0\u00a0\u00a0\u00a0 B)1\u00a0\u00a0\u00a0 C)2\u00a0\u00a0\u00a0 D)3", "B", "\u4ece\u6574\u4e2a\u8868\u8fbe\u5f0f\u6765\u770b\u662f\u4e2a\u903b\u8f91\u8868\u8fbe\u5f0f\uff0c\u800c\u4e0e\u8fd0\u7b97\u7b26\u201c&&\u201d\u7684\u53f3\u8fb9\u7684\u5b50\u8868\u8fbe\u5f0f\u4e2d\u7531\u4e8ez\u7684\u503c\u4e3a\u201cA\u201d\uff0c\u800cA\u7684ASCII\u7801\u7684\u503c\u5c0f\u4e8ea\u7684ASCII\u7801\u503c\uff0c\u6240\u4ee5\u8fd9\u4e2a\u5b50\u8868\u8fbe\u5f0f\u7684\u503c\u4e3a\u771f\uff0c\u5373l\uff1b\u5728\u4e0e\u8fd0\u7b97\u7b26\u201c&&\u201d\u7684\u5de6\u8fb9\u7684\u5b50\u8868\u8fbe\u5f0f\u662f\u4e2a\u57fa\u4e8e\u4f4d\u8fd0\u7b97\u7684\u5b50\u8868\u8fbe\u5f0f\uff0c\u5c06<\u7684\u503c\u4e0e15\u505a\u4f4d\u4e0e\u8fd0\u7b97\uff0c\u8868\u8fbe\u5f0f\u503c\u4e0d\u4e3a\u96f6\uff0c\u6240\u4ee5\u4e24\u4e2a\u5b50\u8868\u8fbe\u5f0f\u7684\u4e0e\u503c\u5e94\u5f53\u4e3a1\u3002", "\u00a0", "(47)\u8981\u4e3a\u8bfb\uff0f\u5199\u64cd\u4f5c\u6253\u5f00\u4e00\u4e2a\u5b57\u7b26\u6587\u4ef6\uff0c\u5176\u6b63\u786e\u7684\u6253\u5f00\u65b9\u5f0f\u4e3a__________\u3002", "A)wr\u00a0\u00a0\u00a0 B)r+\u00a0\u00a0\u00a0 C)rb+\u00a0\u00a0\u00a0 D)rw", "B", "\u5728c\u4e2d\u53ef\u4ee5\u901a\u8fc7fopen\u51fd\u6570\u6765\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\uff0c\u5728\u8be5\u51fd\u6570\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e2d\u6307\u5b9a\u5176\u6253\u5f00\u65b9\u5f0f\u3002\u8981\u4ee5\u8bfb\u5199\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\u53ef\u4ee5\u7528\u201cr++\u201d\u3001\u201cw+\u201d\u3001\u201ca+\u201d\u6765\u8868\u793a\uff0c\u8981\u6253\u5f00\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u53ef\u4ee5\u5728\u6253\u5f00\u65b9\u5f0f\u4e2d\u52a0\u4e0a\u5b57\u6bcdb\uff0c\u5bf9\u4e8e\u5b57\u7b26\u6587\u4ef6\u4e0d\u8981\u52a0b\u3002", "\u00a0", "(48)\u4e0b\u5217\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "#include<stdio\uff0eh>", "main()", "{", "union", "{", "int k\uff1a", "chari[2]\uff1b", "}*s\uff0ca\uff1b", "s=&a\uff1a", "s->i[0]=Ox39\uff1bs->I[l]=0\u00d738\uff1b", "printf(\u201d\uff05x\uff3cn\u201d\uff0cs->k)\uff1b", "}", "A)3839\u00a0\u00a0\u00a0 B)3938\u00a0\u00a0\u00a0 C)380039\u00a0\u00a0\u00a0 D)390038", "A", "\u5728\u4e3b\u51fd\u6570\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5171\u7528\u4f53\u53d8\u91cfa\uff0c\u53ca\u4e00\u4e2a\u6307\u5411\u8be5\u53d8\u91cf\u7684\u6307\u9488s\u3002\u6267\u884cs->i[0]=0\u00d739\uff1bs->i[1]=0\u00d738\uff1b\uff0c\u5c06\u5206\u522b\u5171\u7528\u4f53\u7684\u7b2c\u4e00\u5b57\u8282\u53ca\u7b2c\u4e8c\u5b57\u8282\u5b58\u5165\u5341\u516d\u8fdb\u5236\u6570\u636e0\u00d739\u53ca0\u00d738\uff0c\u7531\u4e8e\u5728\u5171\u7528\u4f53\u4e2d\uff0c\u53d8\u91cf\u5171\u540c\u5360\u7528\u5b58\u50a8\u7a7a\u95f4\uff0c\u5728\u8f93\u51fas->k\uff0e\u65f6\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u8f93\u51fa\u5f00\u59cb\u5199\u5165\u7684\u6570\u636e\uff0c\u800c\u5bf9\u4e8ePC\u673a\uff0c\u5728\u5b58\u653eint\u578b\u6570\u636e\u65f6\uff0c\u4f4e\u4f4d\u5728\u524d\uff0c\u9ad8\u4f4d\u5728\u540e\uff0c\u6545\u672c\u9898\u8f93\u51fa\u4e3a3839\u3002", "\u00a0", "(49)\u82e5\u6709\u4ee5\u4e0b\u5b9a\u4e49\uff1aint t[3][2]\uff1b\u80fd\u6b63\u786e\u8868\u793at\u6570\u7ec4\u5143\u7d20\u5730\u5740\u7684\u8868\u8fbe\u5f0f\u662f_______\u3002", "A)&t[3][2]\u00a0\u00a0\u00a0 B)t[3]\u00a0\u00a0\u00a0 C)t[1]\u00a0\u00a0\u00a0 D)*t[2]", "C", "\u9009\u9879A\u548cB\u4e24\u4e2a\u8868\u8fbe\u5f0f\u90fd\u8d8a\u754c\u4e86\uff1b\u9009\u9879D\u4e2d\uff0c*t[2]\u662f\u76ee\u6807\u53d8\u91cf\uff0c\u5373\u4e00\u4e2a\u6574\u578b\u503c\uff0c\u800c\u4e0d\u662f\u5730\u5740\u503c\u3002", "\u00a0", "(50)\u4ee5\u4e0b\u5bf9\u7ed3\u6784\u4f53\u7c7b\u578b\u53d8\u91cf\u7684\u5b9a\u4e49\u4e2d\uff0c\u4e0d\u6b63\u786e\u7684\u662f___________\u3002", "A)typedef struct aa", "{", "int n\uff1a", "float m\uff1a", "}aa\uff1b", "aatdl\uff1b", "B)#define aa struct aa", "aa{", "int n\uff1a", "float m\uff1a", "}tdl\uff1b", "C)struct", "{", "int n\uff1a", "float m\uff1a", "}aa\uff1b", "structaatdl\uff1b", "D)struct", "{", "int n\uff1a", "float m\uff1a", "}tdl\uff1b", "C", "\u5728\u9898\u7684\u8003\u67e5\u70b9\u662f\u7ed3\u6784\u4f53\u7c7b\u578b\u53d8\u91cf\u7684\u5b9a\u4e49\u3002", "\u5728\u9009\u9879c\u4e2d\uff0caa\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\u53d8\u91cf\uff0c\u800c\u4e0d\u662f\u7ed3\u6784\u4f53\u540d\uff0c\u6240\u4ee5struct aatdl\uff1b\u662f\u975e\u6cd5\u7684\u3002", "\u4e8c\u3001\u586b\u7a7a\u9898(\u6bcf\u7a7a2\u5206\uff0c\u517140\u5206)", "\u8bf7\u5c06\u6bcf\u4e00\u4e2a\u7a7a\u7684\u6b63\u786e\u7b54\u6848\u5199\u5728\u7b54\u9898\u5361\u7684\u30101\u3011\u81f3\u301020\u3011\u5e8f\u53f7\u7684\u6a2a\u7ebf\u4e0a\uff0c\u7b54\u5728\u8bd5\u5377\u4e0a\u4e0d\u5f97\u5206\u3002", "(1)\u8bbe\u4e00\u68f5\u5b8c\u5168\u4e8c\u53c9\u6811\u5171\u6709500\u4e2a\u7ed3\u70b9\uff0c\u5219\u5728\u8be5\u4e8c\u53c9\u6811\u4e2d\u6709", "\u4e2a\u53f6\u5b50\u7ed3\u70b9\u3002", "\u3010l\u3011250", "\u6240\u8c13\u5b8c\u5168\u4e8c\u53c9\u6811\u662f\u6307\u9664\u6700\u540e\u4e00\u5c42\u5916\uff0c\u6bcf\u4e00\u5c42\u4e0a\u7684\u7ed3\u70b9\u6570\u5747\u8fbe\u5230\u6700\u5927\u503c\uff1b\u5728\u6700\u540e\u4e00\u5c42\u4e0a\u53ea\u7f3a\u5c11\u53f3\u8fb9\u7684\u82e5\u5e72\u7ed3\u70b9\u3002", "\u5177\u6709n\u4e2a\u7ed3\u70b9\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u5176\u7236\u7ed3\u70b9\u6570\u4e3aint(n\uff0f2)\uff0c\u800c\u53f6\u5b50\u7ed3\u70b9\u6570\u7b49\u4e8e\u603b\u7ed3\u70b9\u6570\u51cf\u53bb\u7236\u7ed3\u70b9\u6570\u3002\u672c\u9898n=500\uff0c\u6545\u7236\u7ed3\u70b9\u6570\u7b49\u4e8eint(500\uff0f2)=250\uff0c\u53f6\u5b50\u7ed3\u70b9\u6570\u7b49\u4e8e500-250=250\u3002", "\u00a0", "(2)\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u5192\u6ce1\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a", "\u3002", "\u30102\u3011n(n-1)\uff0f2\u6216O(n(n-1)\uff0f21", "\u5192\u6ce1\u6392\u5e8f\u6cd5\u662f\u4e00\u79cd\u6700\u7b80\u5355\u7684\u4ea4\u6362\u7c7b\u6392\u5e8f\u65b9\u6cd5\uff0c\u5b83\u662f\u901a\u8fc7\u76f8\u90bb\u6570\u636e\u5143\u7d20\u7684\u4ea4\u6362\u9010\u6b65\u5c06\u7ebf\u6027\u8868\u53d8\u6210\u6709\u5e8f\u3002", "\u5047\u8bbe\u7ebf\u6027\u8868\u7684\u957f\u5ea6\u4e3an\uff0c\u5219\u5728\u6700\u574f\u7684\u60c5\u51b5\u4e0b\uff0c\u5192\u6ce1\u6392\u5e8f\u9700\u8981\u7ecf\u8fc7n\uff0f2\u904d\u7684\u4ece\u524d\u5f80\u540e\u7684\u626b\u63cf\u548cn\uff0f2\u904d\u7684\u4ece\u540e\u5f80\u524d\u7684\u626b\u63cf\uff0c\u9700\u8981\u7684\u6bd4\u8f83\u6b21\u6570\u4e3an(n-1)\uff0f2\u3002", "\u00a0", "(3)\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u65b9\u6cd5\u4e2d\u6d89\u53ca\u7684\u5bf9\u8c61\u662f\u7cfb\u7edf\u4e2d\u7528\u6765\u63cf\u8ff0\u5ba2\u89c2\u4e8b\u7269\u7684\u4e00\u4e2a", "\u3002", "\u30103\u3011\u5b9e\u4f53", "\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u65b9\u6cd5\u4e2d\u6d89\u53ca\u7684\u5bf9\u8c61\u662f\u7cfb\u7edf\u4e2d\u7528\u6765\u63cf\u8ff0\u5ba2\u89c2\u4e8b\u7269\u7684\u4e00\u4e2a\u5b9e\u4f53\uff0c\u662f\u6784\u6210\u7cfb\u7edf\u7684\u4e00\u4e2a\u57fa\u672c\u5355\u4f4d\uff0c\u5b83\u7531\u4e00\u7ec4\u8868\u793a\u5176\u9759\u6001\u7279\u5f81\u7684\u5c5e\u6027\u548c\u5b83\u53ef\u6267\u884c\u7684\u4e00\u7ec4\u64cd\u4f5c\u7ec4\u6210\u3002", "\u00a0", "(4)\u8f6f\u4ef6\u7684\u9700\u96b6\u5206\u6790\u9636\u6bb5\u7684\u5de5\u4f5c\uff0c\u53ef\u4ee5\u6982\u62ec\u4e3a\u56db\u4e2a\u65b9\u9762\uff1a", "\u3001\u9700\u6c42\u5206\u6790\u3001\u7f16\u5199\u9700\u6c42\u89c4\u683c\u8bf4\u660e\u4e66\u548c\u9700\u6c42\u8bc4\u5ba1\u3002", "\u30104\u3011\u9700\u6c42\u83b7\u53d6", "\u8f6f\u4ef6\u7684\u9700\u6c42\u5206\u6790\u9636\u6bb5\u7684\u5de5\u4f5c\uff0c\u53ef\u4ee5\u6982\u62ec\u4e3a\u56db\u4e2a\u65b9\u9762\uff1a\u9700\u6c42\u83b7\u53d6\u3001\u9700\u6c42\u5206\u6790\u3001\u7f16\u5199\u9700\u6c42\u89c4\u683c\u8bf4\u660e\u4e66\u548c\u9700\u6c42\u8bc4\u5ba1\u3002\u9700\u6c42\u83b7\u53d6\u7684\u76ee\u7684\u662f\u786e\u5b9a\u5bf9\u76ee\u6807\u7cfb\u7edf\u7684\u5404\u65b9\u9762\u9700\u6c42\u3002\u6d89\u53ca\u5230\u7684\u4e3b\u8981\u4efb\u52a1\u662f\u5efa\u7acb\u83b7\u53d6\u7528\u6237\u9700\u6c42\u7684\u65b9\u6cd5\u6846\u67b6\uff0c\u5e76\u652f\u6301\u548c\u76d1\u63a7\u9700\u6c42\u83b7\u53d6\u7684\u8fc7\u7a0b\u3002", "\u00a0", "(5)", "\u662f\u6570\u636e\u5e93\u5e94\u7528\u7684\u6838\u5fc3\u3002", "\u30105\u3011\u6570\u636e\u5e93\u8bbe\u8ba1", "\u6570\u636e\u5e93\u8bbe\u8ba1\u662f\u6570\u636e\u5e93\u5e94\u7528\u7684\u6838\u5fc3\u3002\u5728\u6570\u636e\u5e93\u5e94\u7528\u7cfb\u7edf\u4e2d\u7684\u4e00\u4e2a\u6838\u5fc3\u95ee\u9898\u5c31\u662f\u8bbe\u8ba1\u4e00\u4e2a\u80fd\u6ee1\u8db3\u7528\u6237\u8981\u6c42\uff0c\u6027\u80fd\u826f\u597d\u7684\u6570\u636e\u5e93\uff0c\u8fd9\u5c31\u662f\u6570\u636e\u5e93\u8bbe\u8ba1\u3002", "\u00a0", "(6)\u82e5\u7531\u4ee5\u4e0b\u5b9a\u4e49\uff0c\u5219\u4e0d\u79fb\u52a8\u6307\u9488p\uff0c\u4e14\u901a\u8fc7\u6307\u9488p\u5f15\u7528\u503c\u4e3a98\u7684\u6570\u7ec4\u5143\u7d20\u7684\u8868\u8fbe\u5f0f\u662f", "\u3002", "int w[10]\uff1a{23,54,10,33,47,98,72,80,61}\uff0c*p=w\uff1b", "\u30106\u3011*(p+5)\u6216p[5]", "\u672c\u9898\u7684\u8003\u67e5\u70b9\u662f\u901a\u8fc7\u6307\u9488\u5f15\u7528\u6570\u7ec4\u5143\u7d20\u3002", "98\u662f\u6570\u7ec4w\u7684\u7b2c5\u4e2a\u5143\u7d20(\u6700\u5f00\u59cb\u7684\u4e3a\u7b2c0\u4e2a)\uff0c\u800c\u901a\u8fc7+p=w\u5df2\u7ecf\u5c06p\u6307\u5411\u4e86\u6570\u7ec4w\uff0c\u8981\u60f3\u4e0d\u79fb\u52a8\u6307\u9488p\u800c\u5f15\u752898\uff0c\u53ef\u4ee5\u6709\u4ee5\u4e0b\u4e24\u79cd\u65b9\u6cd5\uff1ap[5]\u3001*(p+5)\u3002", "\u00a0", "(7)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f", "\u3002", "#define MAX(x\uff0cy)(x)>(y)?(x)\uff1a(y)", "main()", "{", "int a=5,b=2\uff0cc=3\uff0cd=3\uff0ct\uff1b", "t=MAX(a+b\uff0cc+d)*lO\uff1b", "printf(\u201d\uff05d\uff3cn\u201d\uff0ct)\uff1b", "}", "\u30107\u30117", "\u5b8f\u66ff\u6362\u540e\uff0c\u8868\u8fbe\u5f0ft=MAX(a+b\uff0cc+d)*10\u5373\u53d8\u4e3a\uff1at=(a+b)>(c+d)?(a+b)\uff1a(c+d)*10\uff1b", "\u7531\u4e8e(a+b)>(c+d)\u4e3a\u771f\uff0c\u00a0 \u6240\u4ee5t=(a+b)\uff0c\u5373\u4e3a7\u3002", "\u00a0", "(8)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f", "\u3002", "main()", "{", "unsigned short a=65536\uff1b", "int b\uff1a", "primf(\u201d\uff05d\uff3cn\u201d\uff0cb=a)\uff1b", "}", "\u30108\u30110", "\u5bf9\u4e8e\u4e00\u4e2aunsigned short\u6765\u8bf4\uff0c\u5b83\u80fd\u53d6\u7684\u6700\u5927\u503c\u662f65535\u3002\u8fd9\u91cc\u7ed9a\u8d4b\u503c\uff0e65536\uff0c\u5df2\u7ecf\u8d85\u51fa\u4e86\u5b83\u7684\u53d6\u503c\u8303\u56f4\uff0c\u8fd9\u6837\u5b83\u7684\u9ad8\u4f4d\u5c06\u88ab\u622a\u6389\uff0c\u53ea\u628a\u4f4e\u4f4d\u8d4b\u7ed9\u5b83(\u5168\u96f6)\u3002\u6240\u4ee5a\u7684\u503c\u5b9e\u9645\u4e3a0\u3002", "\u00a0", "(9)\u82e5\u5df2\u7ecf\u5b9a\u4e49im a=25,b\uff1a14,c=19\uff1b\uff0c\u4ee5\u4e0b\u4e09\u76ee\u8fd0\u7b97\u7b26(?\uff1a)\u6240\u6784\u6210\u7684\u8bed\u53e5\u7684\u6267\u884c\u7ed3\u679c\u662f\u00a0\u00a0\u00a0 ", "\u3002", "a++<=2&&b\u2013<=2&&c++?printf(\u201d***", "a=\uff05d\uff0cb=\uff05d\uff0cc=\uff05d\uff3cn\u201d\uff0ca\uff0cb\uff0cC)\uff1aprintf(\u201da=\uff05d\uff0cb=\uff05d\uff0cc=\uff05d\uff3cn\u201d\uff0ca\uff0cb\uff0cC)\uff1b", "\u30109\u3011a=26,b=14,c=19", "\u8fd9\u79cd\u6761\u4ef6\u8868\u8fbe\u5f0f\u7684\u4e00\u822c\u5f62\u5f0f\u4e3a\uff1a\u8868\u8fbe\u5f0f17\u8868\u8fbe\u5f0f2\uff1a\u8868\u8fbe\u5f0f3\uff0c\u4e09\u76ee\u8fd0\u7b97\u7b26\u7684\u6267\u884c\u987a\u5e8f\uff1a\u5148\u6c42\u89e3\u8868\u8fbe\u5f0f1\uff0c\u82e5\u975e0\u5219\u6c42\u89e3\u8868\u8fbe\u5f0f2\uff0c\u6b64\u65f6\u8868\u8fbe\u5f0f2\u7684\u503c\u5c31\u4f5c\u4e3a\u6574\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\uff0c\u82e5\u8868\u8fbe\u5f0f1\u7684\u503c\u4e3a0\uff0c\u5219\u6c42\u89e3\u8868\u8fbe\u5f0f3\uff0c\u6b64\u65f6\u8868\u8fbe\u5f0f3\u7684\u503c\u5c31\u4f5c\u4e3a\u6574\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\u3002c\u8bed\u8a00\u5728\u505a\u4e00\u7cfb\u5217\u8868\u8fbe\u5f0f\u76f8\u4e0e\u65f6\uff0c\u4ece\u5de6\u5230\u53f3\u5206\u522b\u8ba1\u7b97\u5404\u8868\u8fbe\u5f0f\u7684\u503c\uff0c\u4e00\u65e6\u9047\u5230\u4e00\u4e2a\u8868\u8fbe\u5f0f\u4e3afalse\uff0c\u5219\u5269\u4f59\u7684\u8868\u8fbe\u5f0f\u90fd\u4e0d\u518d\u8fdb\u884c\u8fd0\u7b97\u3002\u8be5\u9898\u4e2d\uff0ca++(=2\u7684\u503c\u4e3afalse\uff0c\u5219b\u2013<=2\u548cc++\u5c31\u90fd\u4e0d\u518d\u8fd0\u7b97\u3002", "\u00a0", "(10)\u4e0b\u9762\u7684if\u8bed\u53e5\u4e0ey=(x>=10)?3*x-11\uff1a(x<1)?x\uff1a2\u2018x\uff0e1\uff1b\u7684\u529f\u80fd\u76f8\u540c\uff0c\u8bf7\u8865\u5145\u5b8c\u6574\u3002", "If(", ")", "if(", ")y=2*x-1\uff1b", "else y=x\uff1b", "else y=3*x-11\uff1a", "\u301010\u3011x<10", "\u301011\u3011x>=1", "\u6761\u4ef6\u8868\u8fbe\u5f0f\u7684\u4e00\u822c\u5f62\u5f0f\u4e3a\uff1a\u8868\u8fbe\u5f0fl?\u8868\u8fbe\u5f0f2\uff1a\u8868\u8fbe\u5f0f3", "\u6761\u4ef6\u8fd0\u7b97\u7b26\u7684\u6267\u884c\u987a\u5e8f\uff1a\u5148\u6c42\u89e3\u8868\u8fbe\u5f0f1\uff0c\u82e5\u4e3a\u975e0(\u771f)\u5219\u6c42\u89e3\u8868\u8fbe\u5f0f2\uff0c\u6b64\u65f6\u8868\u8fbe\u5f0f2\u7684\u503c\u5c31\u4f5c\u4e3a\u6574\u4e2a\u6761\u4ef6\u8868\u8fbe\u5f0f\u7684\u503c\uff1b\u82e5\u8868\u8fbe\u5f0f1\u7684\u503c\u4e3aO(\u5047)\uff0c\u5219\u6c42\u89e3\u8868\u8fbe\u5f0f3\uff0c\u8868\u8fbe\u5f0f3\u7684\u503c\u5c31\u662f\u6574\u4e2a\u6761\u4ef6\u8868\u8fbe\u5f0f\u7684\u503c\u3002y\u3002(x>\u300210)?3\u3002x-1 1\uff1a(x>=1)?x\uff1a2*x-1\uff1b\u7684\u529f\u80fd\u662f\u5148\u6c42(x>=1)?x\uff1a2*x-1\uff1a\u7684\u503c\uff0c\u6240\u7684\u7684\u7ed3\u679c\u518d\u4e0e\u524d\u9762\u7684\u8bed\u53e5\u6784\u6210\u6761\u4ef6\u8868\u8fbe\u5f0f\u8fdb\u884c\u6c42\u503c\u3002\u6240\u4ee5\u301010\u3011\u5e94\u8be5\u586bx<10\uff0c\u301011\u3011\u5e94\u8be5\u586bx>=1\u3002", "\u00a0", "(11)\u4ee5\u4e0b\u7a0b\u5e8f\u4e2d\u7528\u6237\u7531\u952e\u76d8\u8f93\u5165\u4e00\u4e2a\u6587\u4ef6\u540d\uff0c\u7136\u540e\u8f93\u5165\u4e00\u4e32\u5b57\u7b26(\u7528\u62cc\u7ed3\u675f\u8f93\u5165)\u5b58\u653e\u5230\u6b64", "\u6587\u4ef6\u4e2d\uff0c\u5f62\u6210\u6587\u672c\u6587\u4ef6\uff0c\u5e76\u5c06\u5b57\u7b26\u7684\u4e2a\u6570\u5199\u5230\u6587\u4ef6\u7684\u5c3e\u90e8\u3002\u8bf7\u586b\u7a7a\u3002", "#include<stdio\uff0eh>", "main()", "{\u00a0 FILE\u00a0 *fp\uff1b", "char\u00a0 ch,fname[32]\uff1bim count=0\uff1b", "printf(\u201dInput the filename\uff1a\u201d)\uff1b", "scanf(\u201d\uff05s\u201d,fname)\uff1b", "if((\u5e01=fopen(", "\uff0c\u201dw+\u201d))==NULL)", "{\u00a0 print\u5370Can\u2019t open file\uff1a\uff05s\uff3cn\u201d,fname}\uff1bexit(0)\uff1b}", "printf(\u201dEnter data\uff1ain\u201d)\uff1b", "while((ch=getchar())!_1\u2260)\u2019)", "{\u00a0 fputc(ch\uff0cfp)\uff1bcount++\uff1b}", "fprintf(", ",\u201d\uff3cn\uff05d\uff3cn\u201d,count)\uff1b", "fclose(fp)\uff1b", "}", "\u301012\u3011fname", "\u301013\u3011fp", "fopen()\u51fd\u6570\u5b9e\u73b0\u6253\u5f00\u6587\u4ef6\u7684\u529f\u80fd\uff0c\u901a\u5e38\u7684\u8c03\u7528\u65b9\u5f0f\u4e3a\uff1aFILE*fp\uff1bfp=fopen(\u6587\u4ef6\u540d\uff0c\u4f7f\u7528\u6587\u4ef6\u65b9\u5f0f)\uff0c\u56e0\u6b64\uff0c\u7b2c\u4e00\u4e2a\u6a2a\u7ebf\u5904\u8981\u6c42\u586b\u5199\u8981\u6253\u5f00\u6587\u4ef6\u7684\u540d\u5b57fname\u3002fprintf()\u51fd\u6570\u7684\u4e00\u822c\u8c03\u7528\u65b9\u5f0f\u4e3a\uff1afprintf (\u6587\u4ef6\u6307\u9488\uff0c\u683c\u5f0f\u5b57\u7b26\u4e32\uff0c\u8f93\u51fa\u8868\u5217)\uff0c\u6240\u4ee5\u7b2c\u4e8c\u4e2a\u6a2a\u7ebf\u5904\u5e94\u586b\u5199fb\u3002", "\u00a0", "(12)\u51fd\u6570void fun(noat*sn,int n)\u7684\u529f\u80fd\u662f\uff1a\u6839\u636e\u4ee5\u4e0b\u516c\u5f0f\u8ba1\u7b97s\uff0c\u8ba1\u7b97\u7ed3\u679c\u901a\u8fc7\u5f62\u53c2\u6307\u9488sn\u4f20\u56de\uff1bn\u901a\u8fc7\u5f62\u53c2\u4f20\u5165\uff0cn\u7684\u503c\u5927\u4e8e\u7b49\u4e8e0\u3002\u8bf7\u8865\u5168\u7a0b\u5e8f\u3002", "S=I-1\uff0f3+1\uff0f5\u20141\uff0f7+\uff0e\uff0e\uff0e+1\uff0f(2n+1)", "void fun(float*sn,int n)", "{\u00a0\u00a0 float s=O\uff0eO,w,f=-1\uff0e0\uff1b", "int i=0\uff1a", "for(I=0\uff1bi<=n\uff1bi++)", "{ f=", "*f;", "w=f\uff0f(2*i+1)\uff1b", "S+=W\uff1a", "}", "\u00a0=s\uff1b", "}", "\u301014\u3011-1\u6216-1\uff0e0", "\u301015\u3011*sn", "\u7531\u4e8e\u5728\u5bf9s\u6c42\u548c\u65f6\uff0c\u76f8\u90bb\u4e24\u9879\u7684\u7b26\u53f7\u521a\u597d\u76f8\u53cd\uff0c\u800c\u5728\u51fd\u6570fun\u4e2d\u6ca1\u6709\u5bf9\u6570\u636e\u8fdb\u884c\u53d6\u53cd\u7684\u64cd\u4f5c\uff0c\u6545\u7b2c\u4e00\u7a7a\u7684\u76ee\u7684\u662f\u5bf9\u6570\u636e\u8fdb\u884c\u53d6\u53cd\uff0c\u4ee5\u4fdd\u8bc1\u5e8f\u5217\u4e2d\u76f8\u90bb\u4e24\u9879\u7684\u7b26\u53f7\u4e0d\u540c\u3002\u6545\u7b2c\u4e00\u4e2a\u5e94\u586b-1\u6216-1\uff0e0\u3002\u5728\u6267\u884c\u5b8c\u5faa\u73af\u4f53\u540e\uff0c\u8981\u5c06\u6c42\u548c\u7ed3\u679c\u901a\u8fc7\u6307\u9488\u53c2\u6570\u7684\u5f62\u5f0f\u4f20\u9012\u7ed9\u8c03\u7528fun\u7684\u51fd\u6570\uff0c\u6545\u7b2c\u4e8c\u7a7a\u5e94\u586b*sn\u3002", "\u00a0", "(13)\u4e0b\u9762\u7684\u51fd\u6570strcat(strl,str2)\u5b9e\u73b0\u5c06\u5b57\u7b26\u4e32str2\u62fc\u63a5\u5230\u5b57\u7b26\u4e32strl\u540e\u9762\u7684\u529f\u80fd\u3002\u8bf7\u586b\u7a7a\u4f7f\u4e4b\u5b8c\u6574\u3002", "Char*strcat(strl,str2)", "char*strl\uff0e*str2\uff1b", "{\u00a0 char*t=strl\uff1b", "while(", ")strl++\uff1b", "while(", ")\uff1b", "return(t)\uff1b}", "\u301016\u3011*strl\u6216*str1!=\u2018\uff3c0\u2019\u6216*str1!=0\u6216*strl!=NULL", "\u301017\u3011*strl++=*str2++\u6216*strl++=*str2,*str2++", "\u51fd\u6570strcat(strl,str2)\u5b9e\u73b0\u5c06\u5b57\u7b26\u4e32str2\u8fde\u63a5\u5230\u5b57\u7b26\u4e32strl\u540e\u9762\uff0c\u6240\u4ee5\u9996\u5148\u8981\u627e\u5230\u5b57\u7b26\u4e32strl\u7684\u4e32\u5c3e\uff0c\u6839\u636ec\u8bed\u8a00\u7684\u8bed\u6cd5\u89c4\u5b9a\uff0c\u4e00\u4e2a\u4e32\u7684\u4e32\u5c3e\u4e00\u5b9a\u662f\u4e00\u4e2a\u9690\u542b\u5b57\u7b26\u201c\uff3c0\u201d\uff0c\u800c\u5728\u7a0b\u5e8f\u4e2d\uff0c\u5bf9\u5b57\u7b26\u4e32\u4e2d\u5b57\u7b26\u7684\u8bbf\u95ee\u662f\u901a\u8fc7\u4e24\uff0f\u535c\u6307\u9488\u53d8\u91cf\u6765\u5b8c\u6210\u7684\uff0c\u56e0\u6b64\u8981\u627e\u5230\u5b57\u7b26\u4e32strl\u7684\u4e32\u5c3e\uff0c\u8981\u5224\u65ad*strl\u662f\u5426\u4e3a\u201c\uff3c0\u201d\uff0c\u8981\u627e\u5230\u5b57\u7b26\u4e32str2\u7684\u4e32\u5c3e\uff0c\u8981\u5224\u65ad*str2\u662f\u5426\u4e3a\u201c\uff3c0\u201d\uff0c\u7a0b\u5e8f\u4e2d\u5fc5\u987b\u53ef\u4ee5\u4f7f\u5b57\u7b26\u4e32\u4e2d\u5b57\u7b26\u9010\u4e00\u987a\u5e8f\u4f53\u73b0\uff0c\u6240\u4ee5\u5728\u9898\u4e2d\u6211\u4eec\u5e94\u586b\u5199\u201c*str1\u201d\u548c\u201c*strl++=*str2++\u201d\u3002", "\u00a0", "(14)\u4ee5\u4e0b\u51fd\u6570fun\u7528\u4e8e\u6c42\u4e24\u4e2a\u6574\u6570a\u548cb\u7684\u6700\u5927\u516c\u7ea6\u6570\u3002", "fun(a\u2019b)", "int a\u2019b\uff1b", "{int I,J\uff0cm\uff0cn\uff1b", "if(a>b)", "{m=a\uff1ba=b\uff1b", "\uff1b}", "i=a\uff0ej=b\uff1b", "while((n=", ")!=O)", "{j=i\uff1bi=", "\uff1b}", "retum(i)\uff1b", "}", "\u301018\u3011b=m", "\u301019\u3011j\uff05i", "\u301020\u3011n", "\u51fd\u6570\u4e2d\u7684\u53d8\u91cfi\u548cj\u5206\u522b\u5b58\u653e\u4e24\u4e2a\u5f62\u53c2\u7684\u6700\u5c0f\u6570\u548c\u6700\u5927\u6570\uff0c\u5728\u8bed\u53e5i=a\u548ci=b\u6267\u884c\u4e4b\u524d\uff0c\u8981\u5c06a\u548cb\u5206\u522b\u53d8\u4e3a\u6700\u5c0f\u6570\u548c\u6700\u5927\u6570\uff0c\u5f53a>b\u65f6\uff0c\u7a0b\u5e8f\u4f7f\u7528\u4e2d\u95f4\u53d8\u91cf\u5c06\u4e24\u8005\u4ea4\u6362\uff0c\u6240\u4ee5\u9898\u4e2d\u7b2c\u4e00\u4e2a\u7a7a\u4e2d\u5e94\u5f53\u586b\u5199\u201cb=m\u201d\uff1b\u4e3a\u6c42\u4e24\u4e2a\u6574\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570\uff0c\u7a0b\u5e8f\u7684where\u5faa\u73af\u6761\u4ef6\u5fc5\u987b\u4e3aj\u6574\u9664i\u6210\u7acb\uff0c\u6240\u4ee5\u9898_\u4e2d\u7b2c\u4e8c\u4e2a\u7a7a\u4e2d\u5e94\u5f53\u586b\u5199\u201cj\uff05i\u201d\uff1b\u7a0b\u5e8f\u8981\u901a\u8fc7i\u7684\u503c\u8fd4\u56de\u6700\u5927\u516c\u7ea6\u6570\uff0c\u56e0\u6b64\u5728\u5faa\u73af\u4e2d\u8981\u5c06\u6bcf\u6b21\u6574\u9664\u7684\u516c\u7ea6\u6570\u8d4b\u7ed9i\uff0c\u4ee5\u4fdd\u8bc1\u6700\u540e\u8fd4\u56de\u7684\u662f\u4e24\u4e2a\u6574\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570\uff0c\u6240\u4ee5\u7b2c\u4e09\u4e2a\u7a7a\u4e2d\u5e94\u5f53\u586b\u5199\u201cn\u201d\u3002", "\u00a0"], "title": "C\u8bed\u8a00\u7b14\u8bd5\u9898\u5e26\u7b54\u6848\uff08\u56db\uff09"},
{"contents": ["\u4e00\u3001\u9009\u62e9\u9898((1)\uff5e(10)\u6bcf\u5c0f\u98982\u5206\uff0c(11)\uff5e(50)\u6bcf\u5c0f\u98981\u5206\uff0c\u517160\u5206)", "\u4e0b\u5217\u5404\u9898A)\u3001B)\u3001C)\u3001D)\u56db\u4e2a\u9009\u9879\u4e2d\uff0c\u53ea\u6709\u4e00\u4e2a\u9009\u9879\u662f\u6b63\u786e\u7684\uff0c\u8bf7\u5c06\u6b63\u786e\u7684\u9009", "\u9879\u6d82\u5199\u5728\u7b54\u9898\u5361\u76f8\u5e94\u4f4d\u7f6e\u4e0a\uff0c\u7b54\u5728\u8bd5\u5377\u4e0a\u4e0d\u5f97\u5206\u3002", "(1)\u6570\u636e\u7684\u5b58\u50a8\u7ed3\u6784\u662f\u6307________\u3002", "A)\u5b58\u50a8\u5728\u5916\u5b58\u4e2d\u7684\u6570\u636e\u00a0\u00a0\u00a0 B)\u6570\u636e\u6240\u5360\u7684\u5b58\u50a8\u7a7a\u95f4\u91cf", "C)\u6570\u636e\u5728\u8ba1\u7b97\u673a\u4e2d\u7684\u987a\u5e8f\u5b58\u50a8\u65b9\u5f0f\u00a0\u00a0\u00a0 D)\u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u5728\u8ba1\u7b97\u673a\u4e2d\u7684\u8868\u793a", "D", "\u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u5728\u8ba1\u7b97\u673a\u5b58\u50a8\u7a7a\u95f4\u4e2d\u7684\u5b58\u653e\u5f62\u5f0f\u5f62\u5f0f\u79f0\u4e3a\u6570\u636e\u7684\u5b58\u50a8\u7ed3\u6784(\u4e5f\u79f0\u6570\u636e\u7684\u7269\u7406\u7ed3\u6784)\u3002", "\u00a0", "(2)\u4e0b\u5217\u5173\u4e8e\u6808\u7684\u63cf\u8ff0\u4e2d\u9519\u8bef\u7684\u662f________\u3002", "A)\u6808\u662f\u5148\u8fdb\u540e\u51fa\u7684\u7ebf\u6027\u8868", "B)\u6808\u53ea\u80fd\u987a\u5e8f\u5b58\u50a8", "C)\u6808\u5177\u6709\u8bb0\u5fc6\u4f5c\u7528", "D)\u5bf9\u6808\u7684\u63d2\u5165\u4e0e\u5220\u9664\u64cd\u4f5c\u4e2d\uff0c\u4e0d\u9700\u8981\u6539\u53d8\u6808\u5e95\u6307\u9488", "B", "\u6808\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u7ebf\u6027\u8868\uff0c\u53c8\u79f0\u5148\u8fdb\u540e\u51fa\u8868(FILO\u2014First In Last Out)\u3002", "\u00a0", "(3)\u5bf9\u4e8e\u957f\u5ea6\u4e3an\u7684\u7ebf\u6027\u8868\uff0c\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u4e0b\u5217\u5404\u6392\u5e8f\u6cd5\u6240\u5bf9\u5e94\u7684\u6bd4\u8f83\u6b21\u6570\u4e2d\u6b63\u786e\u7684\u662f", "________\u3002", "A)\u5192\u6ce1\u6392\u5e8f\u4e3an2\u00a0\u00a0\u00a0 B)\u5192\u6ce1\u6392\u5e8f\u4e3an", "C)\u5feb\u901f\u6392\u5e8f\u4e3an\u00a0\u00a0\u00a0 \u00a0D)\u5feb\u901f\u6392\u5e8f\u4e3an(n\u4e001)\uff0f2", "D", "\u5047\u8bbe\u7ebf\u6027\u8868\u7684\u957f\u5ea6\u4e3an\uff0c\u5219\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u5192\u6ce1\u6392\u5e8f\u9700\u8981\u7ecf\u8fc7n\uff0f2\u904d\u7684\u4ece\u524d\u5f80\u540e\u626b\u63cf\u548cn\uff0f2\u904d\u7684\u4ece\u540e\u5f80\u524d\u626b\u63cf\uff0c\u9700\u8981\u6bd4\u8f83\u6b21\u6570\u4e3an(n-1)\uff0f2\u3002\u5feb\u901f\u6392\u5e8f\u6cd5\u7684\u6700\u574f\u60c5\u51b5\u6bd4\u8f83\u6b21\u6570\u4e5f\u662fn(n-1)\uff0f2\u3002", "\u00a0", "(4)\u5bf9\u957f\u5ea6\u4e3an\u7684\u7ebf\u6027\u8868\u8fdb\u884c\u987a\u5e8f\u67e5\u627e\uff0c\u5728\u6700\u574f\u60c5\u51b5\u4e0b\u6240\u9700\u8981\u7684\u6bd4\u8f83\u6b21\u6570\u4e3a________\u3002", "A)log2n\u00a0\u00a0\u00a0 B)n\uff0f2\u00a0\u00a0 \u00a0\u00a0\u00a0C)n\u00a0 \u00a0\u00a0\u00a0\u00a0D)n+l", "C", "\u987a\u5e8f\u67e5\u627e\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u88ab\u67e5\u627e\u7684\u5143\u7d20\u662f\u7ebf\u6027\u8868\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u6216\u8005\u5143\u7d20\u4e0d\u5728\u7ebf\u6027\u8868\u4e2d\uff0c\u5219\u9700\u8981\u4e0e\u7ebf\u6027\u8868\u4e2d\u6240\u6709\u7684\u5143\u7d20\u8fdb\u884c\u6bd4\u8f83\u3002\u5bf9\u957f\u5ea6\u4e3an\u7684\u7ebf\u6027\u8868\u8fdb\u884c\u987a\u5e8f\u67e5\u627e\uff0c\u5728\u6700\u574f\u60c5\u51b5\u4e0b\u9700\u8981\u6bd4\u8f83n\u6b21\u3002", "\u00a0", "(5)\u4e0b\u5217\u5bf9\u4e8e\u7ebf\u6027\u94fe\u8868\u7684\u63cf\u8ff0\u4e2d\u6b63\u786e\u7684\u662f________\u3002", "A)\u5b58\u50a8\u7a7a\u95f4\u4e0d\u4e00\u5b9a\u662f\u8fde\u7eed\uff0c\u4e14\u5404\u5143\u7d20\u7684\u5b58\u50a8\u987a\u5e8f\u662f\u4efb\u610f\u7684", "B)\u5b58\u50a8\u7a7a\u95f4\u4e0d\u4e00\u5b9a\u662f\u8fde\u7eed\uff0c\u4e14\u524d\u4ef6\u5143\u7d20\u4e00\u5b9a\u5b58\u50a8\u5728\u540e\u4ef6\u5143\u7d20\u7684\u524d\u9762", "C)\u5b58\u50a8\u7a7a\u95f4\u5fc5\u987b\u8fde\u7eed\uff0c\u4e14\u524d\u4ef6\u5143\u7d20\u4e00\u5b9a\u5b58\u50a8\u5728\u540e\u4ef6\u5143\u7d20\u7684\u524d\u9762", "D)\u5b58\u50a8\u7a7a\u95f4\u5fc5\u987b\u8fde\u7eed\uff0c\u4e14\u5404\u5143\u7d20\u7684\u5b58\u50a8\u987a\u5e8f\u662f\u4efb\u610f\u7684", "A", "\u5728\u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784\u4e2d\uff0c\u5b58\u50a8\u6570\u636e\u7ed3\u6784\u7684\u5b58\u50a8\u7a7a\u95f4\u53ef\u4ee5\u4e0d\u8fde\u7eed\uff0c\u5404\u6570\u636e\u7ed3\u70b9\u7684\u5b58\u50a8\u987a\u5e8f\u4e0e\u6570\u636e\u5143\u7d20\u4e4b\u95f4\u7684\u903b\u8f91\u5173\u7cfb\u53ef\u4ee5\u4e0d\u4e00\u81f4\uff0c\u800c\u6570\u636e\u5143\u7d20\u4e4b\u95f4\u7684\u903b\u8f91\u5173\u7cfb\u662f\u7531\u6307\u9488\u57df\u6765\u786e\u5b9a\u7684\u3002", "\u00a0", "(6)\u4e0b\u5217\u5bf9\u4e8e\u8f6f\u4ef6\u6d4b\u8bd5\u7684\u63cf\u8ff0\u4e2d\u6b63\u786e\u7684\u662f________\u3002", "A)\u8f6f\u4ef6\u6d4b\u8bd5\u7684\u76ee\u7684\u662f\u8bc1\u660e\u7a0b\u5e8f\u662f\u5426\u6b63\u786e", "B)\u8f6f\u4ef6\u6d4b\u8bd5\u7684\u76ee\u7684\u662f\u4f7f\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u679c\u6b63\u786e", "C)\u8f6f\u4ef6\u6d4b\u8bd5\u7684\u76ee\u7684\u662f\u5c3d\u53ef\u80fd\u591a\u5730\u53d1\u73b0\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef", "D)\u8f6f\u4ef6\u6d4b\u8bd5\u7684\u76ee\u7684\u662f\u4f7f\u7a0b\u5e8f\u7b26\u5408\u7ed3\u6784\u5316\u539f\u5219", "C", "\u5173\u4e8e\u8f6f\u4ef6\u6d4b\u8bd5\u7684\u76ee\u7684\uff0cGrenford J\uff0eMyers\u518d\u300aThe Art of Software Testing\u300b\u4e00\u4e66\u4e2d\u7ed9\u51fa\u4e86\u6df1\u523b\u7684\u9610\u8ff0\uff0c\u6574\u4f53\u6765\u8bf4\uff0c\u8f6f\u4ef6\u6d4b\u8bd5\u7684\u76ee\u7684\u5c31\u662f\u5c3d\u53ef\u80fd\u591a\u5730\u53d1\u73b0\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\u3002", "\u00a0", "(7)\u4e3a\u4e86\u4f7f\u6a21\u5757\u5c3d\u53ef\u80fd\u72ec\u7acb\uff0c\u8981\u6c42________\u3002", "A)\u6a21\u5757\u7684\u5185\u805a\u7a0b\u5ea6\u8981\u5c3d\u91cf\u9ad8\uff0c\u4e14\u5404\u6a21\u5757\u95f4\u7684\u8026\u5408\u7a0b\u5ea6\u8981\u5c3d\u91cf\u5f3a", "B)\u6a21\u5757\u7684\u5185\u805a\u7a0b\u5ea6\u8981\u5c3d\u91cf\u9ad8\uff0c\u4e14\u5404\u6a21\u5757\u95f4\u7684\u8026\u5408\u7a0b\u5ea6\u8981\u5c3d\u91cf\u5f31", "C)\u6a21\u5757\u7684\u5185\u805a\u7a0b\u5ea6\u8981\u5c3d\u91cf\u4f4e\uff0c\u4e14\u5404\u6a21\u5757\u95f4\u7684\u8026\u5408\u7a0b\u5ea6\u8981\u5c3d\u91cf\u5f31", "D)\u6a21\u5757\u7684\u5185\u805a\u7a0b\u5ea6\u8981\u5c3d\u91cf\u4f4e\uff0c\u4e14\u5404\u6a21\u5757\u95f4\u7684\u8026\u5408\u7a0b\u5ea6\u8981\u5c3d\u91cf\u5f3a", "B", "\u6a21\u5757\u72ec\u7acb\u6027\u662f\u6307\u6bcf\u4e2a\u6a21\u5757\u53ea\u5b8c\u6210\u7cfb\u7edf\u8981\u6c42\u7684\u72ec\u7acb\u7684\u5b50\u529f\u80fd\uff0c\u5e76\u4e14\u4e0e\u5176\u4ed6\u6a21\u5757\u7684\u8054\u7cfb\u6700\u5c11\u4e14\u63a5\u53e3\u7b80\u5355\u3002\u8f6f\u4ef6\u8bbe\u8ba1\uff0c\u5e94\u5c3d\u91cf\u505a\u5230\u9ad8\u5185\u805a\uff0c\u4f4e\u8026\u5408\uff0c\u6709\u5229\u4e8e\u63d0\u9ad8\u6a21\u5757\u7684\u72ec\u7acb\u6027\u3002", "\u00a0", "(8)\u4e0b\u5217\u63cf\u8ff0\u4e2d\u6b63\u786e\u7684\u662f________\u3002", "A)\u7a0b\u5e8f\u5c31\u662f\u8f6f\u4ef6", "B)\u8f6f\u4ef6\u5f00\u53d1\u4e0d\u53d7\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u9650\u5236", "C)\u8f6f\u4ef6\u65e2\u662f\u903b\u8f91\u5b9e\u4f53\uff0c\u53c8\u662f\u7269\u7406\u5b9e\u4f53", "D)\u8f6f\u4ef6\u662f\u7a0b\u5e8f\u3001\u6570\u636e\u4e0e\u76f8\u5173\u6587\u6863\u7684\u96c6\u5408", "D", "\u8ba1\u7b97\u673a\u8f6f\u4ef6\u662f\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e2d\u4e0e\u786c\u4ef6\u76f8\u4e92\u4f9d\u5b58\u7684\u53e6\u4e00\u90e8\u5206\uff0c\u662f\u5305\u62ec\u7a0b\u5e8f\u3001\u6570\u636e\u53ca\u76f8\u5173\u6587\u6863\u7684\u5b8c\u6574\u96c6\u5408\u3002", "\u00a0", "(9)\u6570\u636e\u72ec\u7acb\u6027\u662f\u6570\u636e\u5e93\u6280\u672f\u7684\u91cd\u8981\u7279\u70b9\u4e4b\u4e00\uff0c\u6240\u8c13\u6570\u636e\u72ec\u7acb\u6027\u662f\u6307________\u3002", "A)\u6570\u636e\u4e0e\u7a0b\u5e8f\u72ec\u7acb\u5b58\u653e", "B)\u4e0d\u540c\u7684\u6570\u636e\u88ab\u5b58\u653e\u5728\u4e0d\u540c\u7684\u6587\u4ef6\u4e2d", "C)\u4e0d\u540c\u7684\u6570\u636e\u53ea\u80fd\u88ab\u5bf9\u5e94\u7684\u5e94\u7528\u7a0b\u5e8f\u6240\u4f7f\u7528", "D)\u4ee5\u4e0a\u4e09\u79cd\u8bf4\u6cd5\u90fd\u4e0d\u5bf9", "D", "\u6570\u636e\u72ec\u7acb\u6027\u662f\u6570\u636e\u4e0e\u7a0b\u5e8f\u95f4\u7684\u4e92\u4e0d\u4f9d\u8d56\u6027\uff0c\u5373\u6570\u636e\u5e93\u4e2d\u6570\u636e\u72ec\u7acb\u4e8e\u5e94\u7528\u7a0b\u5e8f\u800c\u4e0d\u4f9d\u8d56\u4e8e\u5e94\u7528\u7a0b\u5e8f\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u3001\u5b58\u50a8\u7ed3\u6784\u4e0e\u5b58\u53d6\u65b9\u5f0f\u7684\u6539\u53d8\u4e0d\u4f1a\u5f71\u54cd\u5e94\u7528\u7a0b\u5e8f\u3002\u9009\u9879A\u3001B\u3001C\u4e09\u79cd\u8bf4\u6cd5\u90fd\u662f\u9519\u8bef\u7684\u3002", "\u00a0", "(10)\u7528\u6811\u5f62\u7ed3\u6784\u8868\u793a\u5b9e\u4f53\u4e4b\u95f4\u8054\u7cfb\u7684\u6a21\u578b\u662f________\u3002", "A)\u5173\u7cfb\u6a21\u578b\u00a0\u00a0\u00a0 B)\u7f51\u72b6\u6a21\u578b\u00a0\u00a0\u00a0 C)\u5c42\u6b21\u6a21\u578b\u00a0\u00a0\u00a0 D)\u4ee5\u4e0a\u4e09\u4e2a\u90fd\u662f", "C", "\u5c42\u6b21\u6a21\u578b\u662f\u6700\u65e9\u53d1\u5c55\u8d77\u6765\u7684\u6570\u636e\u5e93\u6a21\u578b\uff0c\u5b83\u7684\u57fa\u672c\u7ed3\u6784\u662f\u6811\u5f62\u7ed3\u6784\u3002", "\u00a0", "(11)\u7b97\u6cd5\u5177\u6709\u4e94\u4e2a\u7279\u6027\uff0c\u4ee5\u4e0b\u9009\u9879\u4e2d\u4e0d\u5c5e\u4e8e\u7b97\u6cd5\u7279\u6027\u7684\u662f________\u3002", "A)\u6709\u7a77\u6027\u00a0\u00a0\u00a0 B)\u7b80\u6d01\u6027\u00a0\u00a0\u00a0 C)\u53ef\u884c\u6027\u00a0\u00a0\u00a0 D)\u786e\u5b9a\u6027", "B", "\u6709\u7a77\u6027\u3001\u786e\u5b9a\u6027\u3001\u6709\u96f6\u4e2a\u6216\u591a\u4e2a\u8f93\u5165\u3001\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u8f93\u51fa\u3001\u6709\u6548\u6027\u662f\u7b97\u6cd5\u7684\u57fa\u672c\u7279\u6027\u3002", "\u00a0", "(12)\u4ee5\u4e0b\u9009\u9879\u4e2d\u53ef\u4f5c\u4e3ac\u8bed\u8a00\u5408\u6cd5\u5e38\u91cf\u7684\u662f________\u3002", "A)-80\uff0e\u00a0\u00a0\u00a0 B)-080\u00a0\u00a0\u00a0 C)-8e1\uff0e0\u00a0\u00a0\u00a0 D)-80\uff0e0e", "A", "c\u8bed\u8a00\u7684\u5e38\u91cf\u5206\u4e3a\u6574\u578b\u5e38\u91cf\u3001\u5b9e\u578b\u5e38\u91cf\u548c\u5b57\u7b26\u578b\u5e38\u91cf\u3002\u9009\u9879A\u5c5e\u4e8e\u5b9e\u578b\u5e38\u91cf\u4e2d\u7684\u5341\u8fdb\u5236\u5c0f\u6570\u5f62\u5f0f\u7684\u8868\u793a\u6cd5\uff0c\u662f\u5408\u6cd5\u7684\u3002", "\u00a0", "(13)\u4ee5\u4e0b\u53d9\u8ff0\u4e2d\u6b63\u786e\u7684\u662f________\u3002", "A)\u7528C\u7a0b\u5e8f\u5b9e\u73b0\u7684\u7b97\u6cd5\u5fc5\u987b\u8981\u6709\u8f93\u5165\u548c\u8f93\u51fa\u64cd\u4f5c", "B)\u7528C\u7a0b\u5e8f\u5b9e\u73b0\u7684\u7b97\u6cd5\u53ef\u4ee5\u6ca1\u6709\u8f93\u51fa\u4f46\u5fc5\u987b\u8981\u8f93\u5165", "C)\u7528C\u7a0b\u5e8f\u5b9e\u73b0\u7684\u7b97\u6cd5\u53ef\u4ee5\u6ca1\u6709\u8f93\u5165\u4f46\u5fc5\u987b\u8981\u6709\u8f93\u51fa", "D)\u7528C\u7a0b\u5e8f\u5b9e\u73b0\u7684\u7b97\u6cd5\u53ef\u4ee5\u65e2\u6ca1\u6709\u8f93\u5165\u4e5f\u6ca1\u6709\u8f93\u51fa", "C", "\u7b97\u6cd5\u7684\u7279\u6027\u4e2d\u5305\u62ec\u201c\u6709\u96f6\u4e2a\u6216\u591a\u4e2a\u8f93\u5165\u201d\u53ca\u201c\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u8f93\u51fa\u201d\u8fd9\u4e24\u4e2a\u7279\u6027\u3002\u4e00\u4e2a\u7b97\u6cd5\u5f97\u5230\u7684\u7ed3\u679c\u5c31\u662f\u7b97\u6cd5\u7684\u8f93\u51fa\uff0c\u6ca1\u6709\u8f93\u51fa\u7684\u7b97\u6cd5\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u6240\u4ee5\u4e00\u4e2a\u7b97\u6cd5\u5fc5\u987b\u81f3\u5c11\u6709\u4e00\u4e2a\u8f93\u51fa\u3002", "\u00a0", "(14)\u4ee5\u4e0b\u4e0d\u80fd\u5b9a\u4e49\u4e3a\u7528\u6237\u6807\u8bc6\u7b26\u7684\u662f________\u3002", "A)Main\u00a0\u00a0\u00a0 B)_0\u00a0\u00a0 \u00a0\u00a0\u00a0C)_int\u00a0\u00a0\u00a0\u00a0 D)sizeof", "D", "C\u8bed\u8a00\u89c4\u5b9a\u6807\u8bc6\u7b26\u53ea\u80fd\u7531\u5b57\u6bcd\u3001\u6570\u5b57\u548c\u4e0b\u5212\u7ebf\u4e09\u79cd\u7b26\u53f7\u7ec4\u6210\uff0c\u800c\u4e14\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5fc5\u987b\u662f\u5b57\u6bcd\u6216\u4e0b\u5212\u7ebf\u3002\u6ce8\u610f\uff1a\u5927\u5199\u5b57\u6bcd\u548c\u5c0f\u5199\u5b57\u6bcd\u88ab\u8ba4\u4e3a\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u5b57\u7b26\u3002A\u4e2dMain\u4e0e\u4e3bi\u51fd\u6570\u540dmain\u4e0d\u540c\u3002", "\u00a0", "(15)\u4ee5\u4e0b\u9009\u9879\u4e2d\u4e0d\u80fd\u4f5c\u4e3a\u5408\u6cd5\u5e38\u91cf\u7684\u662f________\u3002", "A)1\uff0e234e04\u00a0\u00a0\u00a0 B)1\uff0e234e0\uff0e4\u00a0\u00a0\u00a0 C)1\uff0e234e+4 D)1\uff0e234e0", "B", "\u6307\u6570\u5f62\u5f0f\u7684\u5b9e\u578b\u5e38\u91cf\u8981\u6c42\u5b57\u6bcfe(\u6216E)\u4e4b\u524d\u5fc5\u9700\u6709\u6570\u5b57\uff0c\u4e14e\u540e\u9762\u7684\u6307\u6570\u5fc5\u987b\u4e3a\u6574\u6570\uff0c\u6240\u4ee5\u672c\u9898\u4e2d\u9009\u9879B\u975e\u6cd5\u3002", "\u00a0", "(16)\u6570\u5b57\u5b57\u7b260\u7684ASCII\u503c\u4e3a48\uff0c\u82e5\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "main()", "{char a=\u201d1\u2033,b=\u201d2\u2033\uff1b", "printf(\u201c\uff05c\uff0c\u201d\uff0cb++)\uff1b", "printf(\u201c\uff05d\\n\u201d,b-a)\uff1b", ")", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "A)\u00a0 3\uff0c2\u00a0\u00a0\u00a0 B)50\uff0c2\u00a0\u00a0\u00a0 C)2\uff0c2\u00a0\u00a0\u00a0 D)2\uff0c50", "C", "\u8bc4\u6790l\u6267\u884c\u8bed\u53e5\u201cprintf(\u201c\uff05c\uff0cll\uff0cb++)\uff1b\u201d\u540e\uff0cb\u7684\u503c\u53d8\u6210\u5b57\u7b263\uff0c\u6267\u884c\u201cprintf(\u201c\uff05d\\n\u201d,b-a)\uff1b\u201d\uff0c\u5373\u20183\u2019-\u20181\u2019\u3002", "\u00a0", "(17)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "main(\u00a0 )", "{", "int m=12, n=34\uff1b", "printf(\u201c\uff05d\uff05d\u201d\uff0cm++\uff0c++n);", "printf(\u201c\uff05d\uff05d\\n\u201d\uff0cn++\uff0c++m);", "}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "A)12353514\u00a0\u00a0\u00a0 B)12353513\u00a0\u00a0\u00a0 C)12343514\u00a0\u00a0\u00a0 D)12343513", "A", "\u6267\u884c\u201cprintf(\u201c\uff05d\uff05d\u201dm++\uff0c++n)\uff1b\u201d\u540e\uff0c\u8f93\u51fa\u7684\u662fm\u548cn+l\u7684\u503c1235\uff0c\u63a5\u7740\u6267\u884c", "\u201cprintf(\u201c\uff05d\uff05d\uff3cn\u201d\uff0cn++\uff0c++m)\uff1b\u201d\u8f93\u51fan\u548cm+l\u7684\u503c3514\u3002", "\u00a0", "(18)\u6709\u5b9a\u4e49\u8bed\u53e5\uff1aint b\uff1bchar c[10\u3011\uff1b\uff0c\u5219\u6b63\u786e\u7684\u8f93\u5165\u8bed\u53e5\u662f________\u3002", "A)\u00a0 scanf(\"\uff05d\uff05s\"\uff0c&b\uff0c&C);\u00a0\u00a0\u00a0 B)\u00a0 scanf(\"\uff05d\uff05s\"\uff0c&b\uff0cC);", "C)\u00a0 scanf(\"\uff05d\uff05s\"\uff0cb\uff0cC);\u00a0\u00a0 \u00a0\u00a0\u00a0D)\u00a0 scanf(\"\uff05d\uff05s\"\uff0cb\uff0c&C);", "B", "\u8bc4\u6790:scanf\u51fd\u6570\u4e2d\u7684\u201c\u683c\u5f0f\u63a7\u5236\u201d\u540e\u9762\u5e94\u5f53\u662f\u5730\u5740\uff0c\u800c\u4e0d\u662f\u53d8\u91cf\u540d\u3002\u5bf9\u4e8e\u53d8\u91cf\uff0c\u901a\u8fc7\u5730\u5740\u8fd0\u7b97\u7b26\u201c&\u201d\u6c42\u51fa\u5185\u5b58\u4e2d\u7684\u5730\u5740\uff1b\u5bf9\u4e8e\u6570\u7ec4c[10]\uff0c\u6570\u7ec4\u540dc\u5373\u4e3a\u6570\u7ec4\u5728\u5185\u5b58\u4e2d\u7684\u5730\u5740\u3002", "\u00a0", "(19)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "main()", "{int m\uff0cn\uff0cp\uff1b", "scanf(\u201cm=\uff05dn=\uff05dp=\uff05d\u201d\uff0c&m\uff0c&n\uff0c&p);", "printf(\u201c\uff05d\uff05d\uff05d\uff3cn\u201d\uff0cm\uff0cn\uff0cp);", "}", "\u82e5\u60f3\u4ece\u952e\u76d8\u4e0a\u8f93\u5165\u6570\u636e\uff0c\u4f7f\u53d8\u91cfm\u4e2d\u7684\u503c\u4e3a123\uff0cn\u4e2d\u7684\u503c\u4e3a456\uff0cp\u4e2d\u7684\u503c\u4e3a789\uff0c", "\u5219\u6b63\u786e\u7684\u8f93\u5165\u662f________\u3002", "A)\u00a0 m\u3002123n=456p=789\u00a0\u00a0 \u00a0\u00a0\u00a0B)\u00a0 m=123\u00a0 n=456\u00a0 p=789", "C)\u00a0 m=123\uff0cn=456\uff0cp=789\u00a0\u00a0\u00a0 D)\u00a0 123\u00a0 456\u00a0 789", "A", "\u6839\u636e\u672c\u9898\u7684\u6570\u636e\u8f93\u5165\u5f62\u5f0f\u201cscanf(\u201cm=\uff05dn=\uff05dp=\uff05d\u201d&m\uff0c&n\uff0c&p)\uff1b\u201d\u8bf4\u660e\u5728\u8f93\u5165\u6570\u636e\u65f6\uff0c\u5fc5\u987b\u8f93\u5165\u201cm=\u201d\u3001\u201cn=\u201d\u3001\u201cp=\u201d\u5b57\u7b26\uff0c\u4e14\u4e2d\u95f4\u4e0d\u80fd\u542b\u6709\u7a7a\u683c\u3002", "\u00a0", "(20)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "main()", "{ int a,b,d=25;", "a=d\uff0f10\uff059;", "b=a&&(-1);", "printf(\u201d\uff05d\uff0c\uff05d\uff3cn\u201d\uff0ca\uff0cb);", "}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "A)6\uff0cl\u00a0\u00a0 \u00a0\u00a0\u00a0B)2\uff0cl\u00a0 \u00a0\u00a0\u00a0\u00a0C)6\uff0c0\u00a0\u00a0 \u00a0\u00a0\u00a0D)2\uff0c0", "B", "\u672c\u9898\u4e2d\u201ca=d\uff0f10\uff059\uff1b\u201d\u7684\u503c\u4e3a25\uff0f10\uff059=2; \u201cb=a&&(-1)\uff1b\u201d\u4e3a2&&(-1)=1(\u6ce8\u610f\uff1a-1\u8868\u793a\u771f\uff0c\u53ea\u6709O\u624d\u8868\u793a\u5047)\uff0c\u6240\u4ee5a\uff0cb\u7684\u503c\u5206\u522b\u4e3a2,1\u3002", "\u00a0", "(21)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "main()", "{", "int i=1 j=2\uff0ck=3;", "if(i++==1&&(++j==3||k++==3))", "printf(\u201c\uff05d\uff05d\uff05d\uff3cn\u201d\uff0ci,j\uff0ck);", "}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "A)l 2 3\u00a0 \u00a0\u00a0\u00a0B)2 34\u00a0\u00a0 \u00a0\u00a0\u00a0C)\u00a0 2 2 3\uff0e\u00a0\u00a0\u00a0 D)2 3 3", "D", "\u6267\u884c\u201ci++==1&&(++j==3\u2016k++==3)\u201d\u65f6\uff0c\u8868\u8fbe\u5f0f\u201ci++==1\u201d\u55e8\u503c\u4e3a\u771f\uff0c\u5176\u503c\u4e3a1\uff0c\u8868\u8fbe\u5f0f\u201c++j=3\u201d\u7684\u503c\u4e3a\u771f\uff0c\u6839\u636e\u77ed\u8def\u539f\u7406\uff0c\u53f3\u8fb9\u7684\u8868\u8fbe\u5f0f\u201ck++==3\u201d\u4e0d\u518d\u8fdb\u884c\u8fd0\u7b97\u3002\u62ec\u53f7\u4e2d\u8868\u8fbe\u7684\u503c\u4e3al\uff0c\u4f5c\u4e0e\u8fd0\u7b97\u540e\u6574\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\u4e5f\u4e3al\uff0c\u8f93\u51fai.j\uff0ck\u65f6\uff0c\u7531\u4e8e\u672a\u6267\u884c\u8fc7k\uff0c\u6240\u4ee5\u5b83\u4eec\u7684\u503c\u5206\u522b\u4e3a2,3,3\u3002", "\u00a0", "(22)\u82e5\u6574\u578b\u53d8\u91cfa\u3001b\u3001c\u3001d\u4e2d\u7684\u503c\u4f9d\u6b21\u4e3a\uff1a1\u30014\u30013\u30012\u3002\u5219\u6761\u4ef6\u8868\u8fbe\u5f0fa<b?a\uff1ac<d?c\uff1ad\u7684\u503c\u662f________\u3002", "A)l\u00a0 \u00a0\u00a0\u00a0\u00a0B)2\u00a0 \u00a0\u00a0\u00a0\u00a0C)3\u00a0 \u00a0\u00a0\u00a0\u00a0D)4", "A", "\u6761\u4ef6\u8868\u8fbe\u5f0f\u7684\u4e00\u822c\u5f62\u5f0f\u4e3a\uff1a\u8868\u8fbe\u5f0f17\u8868\u8fbe\u5f0f2\uff1a\u8868\u8fbe\u5f0f3", "\u672c\u9898\u5148\u6c42\u7684\u662fa<b\u7684\u503c\uff0c\u4e3a\u771f\uff0c\u6240\u4ee5\u6574\u4e2a\u8868\u8fbe\u5f0f\u201ca<b?a\uff1ac<d?c\uff1ad\u201d\u7684\u503c\u4e3aa\u7684\u503c1\u3002", "\u00a0", "(23)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "main( )", "{", "int p[8]={11,12,13,14,15,16,17,18}\uff0ci=O,j=0;", "while(i++<7)if p[i]\uff052)j+-=p[i];", "printf(\u201c\uff05d\uff3cn\u201d,j);", "}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "A)42 \u00a0\u00a0\u00a0\u00a0B)45 \u00a0\u00a0\u00a0\u00a0C)56\u00a0\u00a0\u00a0 D)60", "B", "\u672c\u7a0b\u5e8f\u7684\u4f5c\u7528\u662f\u6c42\u9664p[O]\u5916\u7684\u5176\u5b83\u5947\u6570\u7684\u548c\u3002", "\u00a0", "(24)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "main()", "{", "char a[7]= \u201ca0\uff3cOaO\uff3c0\u201d; int i,j;", "i=sizeof(a);j=strlen(a);", "printf(\u201c\uff05d\uff05d\uff3cn\u201d\uff0ci,j);", ")", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "A)2 2\u00a0\u00a0\u00a0 \u00a0B)76 \u00a0\u00a0\u00a0\u00a0C)7 2 \u00a0\u00a0\u00a0\u00a0D)6 2", "C", "c\u8bed\u8a00\u4e2d\u4ee5\u2018\uff3c0\u2019\u4f5c\u4e3a\u5b57\u7b26\u4e32\u7684\u7ed3\u675f\u7b26\uff0c\u4e14strlen()\u51fd\u6570\u8ba1\u7b97\u7684\u662f\u2018\uff3c0\u2019\u5b57\u7b26\u524d\u7684\u6240\u6709\u5b57\u7b26\u7684\u4e2a\u6570\u3002\u6570\u7ec4\u5b9a\u4e49\u4ee5\u540e\u7cfb\u7edf\u5c31\u4e3a\u5176\u5206\u914d\u76f8\u5e94\u5927\u5c0f\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u800c\u4e0d\u8bba\u5176\u4e2d\u6709\u6ca1\u6709\u5185\u5bb9\u3002", "\u00a0", "(25)\u4ee5\u4e0b\u80fd\u6b63\u786e\u5b9a\u4e49\u4e00\u7ef4\u6570\u7ec4\u7684\u9009\u9879\u662f________\u3002", "A)int a[5]={0\uff0c1\uff0c2\uff0c3\uff0c4\uff0c5;\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0B)char a[]={0,1,2,3,4,5};", "C)char a={\u2019A\u2019\uff0c\u2019B\u2019\uff0c\u2019C\u2019}; \u00a0\u00a0\u00a0\u00a0D)int a[5]=\u201d0123\u2033;", "B", "\u9009\u9879A\u4e2d\u5b9a\u4e49\u7684\u662f5\u4e2a\u6570\u7ec4\u5143\u7d20\uff0c\u4f46\u8d4b\u503c\u7684\u65f6\u5019\u8d4b\u7684\u662f6\u4e2a\u5143\u7d20\uff0c\u6240\u4ee5\u51fa\u9519\uff1b\u9009\u9879c\u4e0d\u7b26\u5408\u6570\u7ec4\u5b9a\u4e49\u5f62\u5f0f\uff0c\u6570\u7ec4\u540d\u540e\u5e94\u52a0\u4e0a\u201c[]\u201d\uff1b\u9009\u9879D\u7684\u7c7b\u578b\u8bf4\u660e\u7b26\u9519\u8bef\uff0c\u5982\u679c\u7528char\u5b9a\u4e49\u5c31\u5bf9\u4e86\uff1b\u9009\u9879B\u4e2d\u76840,1,2,3,4,5\u5206\u522b\u8868\u793a\u5bf9\u5e94\u5b57\u7b26\u7684ASCII\u7801\uff0c\u6240\u4ee5\u9009\u9879B\u662f\u6b63\u786e\u7684\u3002", "\u00a0", "(26)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "int fl(int x,int y){return x>y?x\uff1ay;}", "int f2(int x,int y){return x>y?y\uff1ax;}", "main()", "{", "int a=4\uff0cb=3\uff0cc=5\uff0cd=2\uff0ce\uff0cf,g;", "e=f2(f1(a\uff0cb)\uff0cf1(c\uff0cd))\uff1bf=fl(f2(a\uff0cb)\uff0cf2(c\uff0cd));", "g=a+b+c+d-e-f;", "printf(\u201c\uff05d\uff0c\uff05d\uff0c\uff05d\uff3cn\u201d\uff0ce,f,g);", ")", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "A)4,3,7 \u00a0\u00a0\u00a0\u00a0\u00a0B)3,4,7\u00a0\u00a0 \u00a0\u00a0\u00a0C)5,2,7\u00a0\u00a0\u00a0\u00a0 \u00a0D)2,5,7", "A", "\u51fd\u6570n\u7684\u529f\u80fd\u662f\u8fd4\u56de\u4e24\u4e2a\u6570\u4e2d\u6bd4\u8f83\u5927\u7684\u503c\uff0cf2\u7684\u529f\u80fd\u662f\u8fd4\u56de\u4e24\u4e2a\u6570\u4e2d\u6bd4\u8f83\u5c0f\u7684\u503c\u3002", "\u00a0", "(27)\u5df2\u6709\u5b9a\u4e49\uff1achar a[]=\u201dxyz\u201d,b[]={\u2019x\u2019\uff0c\u2019y\u2019\uff0c\u2019z};\uff0c\u4ee5\u4e0b\u53d9\u8ff0\u4e2d\u6b63\u786e\u7684\u662f________\u3002", "A)\u6570\u7ec4a\u548cb\u7684\u957f\u5ea6\u76f8\u540c\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0B)a\u6570\u7ec4\u957f\u5ea6\u5c0f\u4e8eb\u6570\u7ec4\u957f\u5ea6", "C)a\u6570\u7ec4\u957f\u5ea6\u5927\u4e8eb\u6570\u7ec4\u957f\u5ea6\u00a0 \u00a0\u00a0D)\u4e0a\u8ff0\u8bf4\u6cd5\u90fd\u4e0d\u5bf9", "C", "c\u8bed\u8a00\u89c4\u5b9a\u2018\uff3c0\u2019\u4e3a\u5b57\u7b26\u4e32\u7ed3\u675f\u6807\u5fd7\u3002\u6240\u4ee5\u201cchar a[]=\u201cxyz\u201d\u201d\u7684\u6570\u7ec4\u957f\u5ea6\u4e3a4\uff0c\u800c\u201cb[]={\u2018x\u2019\uff0c\u2018y\u2019\uff0c\u2018z\u2019}\uff1b\u201d\u7684\u6570\u7ec4\u957f\u5ea6\u4e3a3\uff0c\u6570\u7ec4\u957f\u5ea6\u4e0estrlen\u51fd\u6570\u6240\u6c42\u7684\u957f\u5ea6\u4e0d\u540c\uff0c\u672c\u9898\u662f\u6307\u6570\u7ec4\u5360\u5185\u5b58\u7a7a\u95f4\u7684\u5927\u5c0f\u3002", "\u00a0", "(28)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "Void f(int *x, int *y)", "{", "int t;", "t= *x; *x=*y;\u2019*y=t;", ")", "main( )", "{", "int a[8]={1\uff0c2\uff0c3\uff0c4\uff0c5\uff0c6\uff0c7\uff0c8}\uff0ci\uff0c*p\uff0c*q;", "p=a\uff1bq=&a[7];", "while(p<q)", "{f(p\uff0cq); p++; q\u2013;}\u00a0\u00a0\u00a0 \u3002", "for(i=0;i<3;i++) printf(\u201c\uff05d\u201d\uff0ca[1][i]);", "}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "A)8,2,3,4,5,6,7,1\uff0c\u00a0\u00a0\u00a0 B)5,6,7,8,1,2,3,4\uff0e", "C)1,2,3,4,5,6,7,8\uff0c\u00a0\u00a0\u00a0 D)8,7,6,5,4,3,2,l\uff0c", "D", "\u8bc4\u6790\uff1b\u672c\u7a0b\u5e8f\u4e2d\u51fd\u6570f\u7684\u4f5c\u7528\u662f\u4ea4\u6362\u6307\u9488\u53d8\u91cfx\u548cy\u6240\u6307\u5411\u7684\u5b58\u50a8\u5355\u5143\u7684\u503c\u3002", "\u00a0", "(29)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "main()", "{", "im a[3][3]\uff0c*p\uff0ci\uff1b", "p=&a[0][o];", "for(i=0;j<9;i++) p[i]=I;", "for(i=0;j<3;i++)printf(\u201c\uff05d\u201d\uff0ca[1][i]);", ")", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "A)012\u00a0\u00a0\u00a0 B)123\u00a0\u00a0\u00a0 C)234\u00a0\u00a0\u00a0 D)345", "D", "\u672c\u9898\u8d4b\u503c\u540e\uff0ca\u7684\u6570\u7ec4\u5143\u7d20\u7684\u503c\u5206\u522b\u4e3aa[01[0]=0\uff0ca[0][1]=1\uff0ca[0][2]=2\uff0ca[1][0]=3\uff0ca[1][1]=4\uff0ca[1][2]=5\uff0ca[2][0]=6\uff0ca[2][1]=7\uff0ca[2][2]=8\uff0c\u6545\u672c\u9898\u8f93\u51fa\u7684\u503c\u4e3a345\u3002", "\u00a0", "(30)\u4ee5\u4e0b\u53d9\u8ff0\u4e2d\u9519\u8bef\u7684\u662f________\u3002", "A)\u5bf9\u4e8edouble\u7c7b\u578b\u6570\u7ec4\uff0c\u4e0d\u53ef\u4ee5\u76f4\u63a5\u7528\u6570\u7ec4\u540d\u5bf9\u6570\u7ec4\u8fdb\u884c\u6574\u4f53\u8f93\u5165\u6216\u8f93\u51fa", "B)\u6570\u7ec4\u540d\u4ee3\u8868\u7684\u662f\u6570\u7ec4\u6240\u5360\u5b58\u50a8\u533a\u7684\u9996\u5730\u5740\uff0c\u5176\u503c\u4e0d\u53ef\u6539\u53d8", "C)\u5f53\u7a0b\u5e8f\u6267\u884c\u4e2d\uff0c\u6570\u7ec4\u5143\u7d20\u7684\u4e0b\u6807\u8d85\u51fa\u6240\u5b9a\u4e49\u7684\u4e0b\u6807\u8303\u56f4\u65f6\uff0c\u7cfb\u7edf\u5c06\u7ed9\u51fa\u201c\u4e0b\u6807\u8d8a", "\u754c\u201d\u7684\u51fa\u9519\u4fe1\u606f", "D)\u53ef\u4ee5\u901a\u8fc7\u8d4b\u521d\u503c\u7684\u65b9\u5f0f\u786e\u5b9a\u6570\u7ec4\u5143\u7d20\u7684\u4e2a\u6570", "C", "\u5728c\u8bed\u8a00\u4e2d\uff0c\u5982\u679c\u51fa\u73b0\u4e0b\u6807\u8d8a\u754c\u7684\u60c5\u51b5\uff0c\u7cfb\u7edf\u4e0d\u7ba1\u5728\u7f16\u8bd1\u8fd8\u662f\u6267\u884c\u65f6\u90fd\u4e0d\u4f1a\u7ed9\u51fa\u201c\u4e0b\u6807\u8d8a\u754c\u201d\u7684\u9519\u8bef\u63d0\u793a\u3002", "\u00a0", "(31)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "#define N20", "fun(int a[]\uff0cint n,int m)", "{\u00a0\u00a0\u00a0 int i,j;", "for(i=m;i>=n;i\u2013)a[i+1]=a[i];", "}", "main()", "{", "int i\uff0ca[N]={1\uff0c2\uff0c3\uff0c4\uff0c5\uff0c6\uff0c7\uff0c8\uff0c9\uff0c10};", "fun(a,2,9);", "for(i=O;i<5;i++) printf(\u201c\uff05d\u201d\uff0ca[i]);", "}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "A)10234\u00a0\u00a0\u00a0 B)12344\u00a0\u00a0\u00a0 C)12334\u00a0\u00a0\u00a0 D)12234", "C", "\u672c\u9898\u51fd\u6570fun\u7684\u4f5c\u7528\u662f\u5c06\u6307\u5b9a\u7684\u6570\u7ec4\u5143\u7d20(\u4ece\u4e0b\u6807n\u5230\u4e0b\u6807m)\u5411\u540e\u79fb\u4e00\u4f4d\u3002\u7531\u51fd\u6570\u8c03\u7528\u201cfun(a,2,9)\uff1b\u201d\u53ef\u77e5\uff0c\u51fd\u6570fun\u7528\u4e8e\u5c06a[2]\u5230a[9]\u7684\u5404\u5143\u7d20\u4f9d\u6b21\u5411\u540e\u79fb\u4e00\u4f4d\uff0c\u79fb\u5b8c\u540e\uff0ca\u6570\u7ec4\u4e2d\u5404\u5143\u7d20\u7684\u503c\u5206\u522b\u4e3a1,2,3,3,4,5,6,7,8,9,10\uff0c\u6545\u8f93\u51fa\u7684\u524d5\u4e2a\u6570\u7ec4\u5143\u7d20\u4e3a12334\u3002", "\u00a0", "(32)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "main()", "{", "int a[3][2]={0}\uff0c(*ptr)[2]\uff0ci,j;", "for(i=0;i<2;i++)\u00a0 {ptr=a+i;\u00a0 scanf(\u201c\uff05d\u201d,ptr);\u00a0 ptr++;}", "for(i=0;i<3;i++)", "{\u00a0 for(i=0;j<2;j++) printf(\u201c\uff052d\u201d,a[i][j]);", "printf(\u201c\uff3cn\u201d);", "}", "}", "\u82e5\u8fd0\u884c\u65f6\u8f93\u5165\uff1a1 2 3<\u56de\u8f66>\uff0c\u5219\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "A)\u4ea7\u751f\u9519\u8bef\u4fe1\u606f", "B)l0\u00a0\u00a0\u00a0 C)l 2\u00a0\u00a0\u00a0 D)l 0", "2 O\u00a0\u00a0 \u00a0\u00a0\u00a03 0\u00a0 \u00a0\u00a0\u00a0\u00a02 0", "0 0\u00a0\u00a0\u00a0 \u00a0\u00a00 O\u00a0\u00a0\u00a0 \u00a0\u00a03 0", "B", "\u4e8c\u7ef4\u6570\u7ec4a\uff0c\u901a\u8fc7a[3][2]={0}\u5c06\u6570\u7ec4\u4e2d\u7684\u5404\u4e2a\u5143\u7d20\u521d\u59cb\u5316\u4e3a0\uff0c\u6307\u9488\u53d8\u91cfptr\uff0c\u6307\u5411\u5305\u542b2\u4e2a\u5143\u7d20\u7684\u4e00\u7ef4\u6570\u7ec4\u3002a[0][0]\uff1al\uff0ca[1][0]=2\uff0c\u6545\u672c\u9898\u7684\u8f93\u51fa\u9009B\u3002", "\u00a0", "(33)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "prt(int *m, int n)", "{\u00a0 int i;", "for(i=O;i<n;i++) m[i]++;", ")", "main()", "{", "int a[]={ 1,2,3,4,5 },i;", "prt(a,5);", "for(i=O;i<5;i++)", "printf(\u201c%d,\u201d,a[i]);", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "A)l\uff0c2\uff0c3\uff0c4\uff0c5\uff0c\u00a0\u00a0\u00a0 B)2,3,4,5,6\uff0c\u00a0\u00a0\u00a0 C)3,4,5,6,7\uff0c\u00a0\u00a0\u00a0 D)2,3,4,5,1\uff0c", "B", "\u7528\u6570\u7ec4\u540d\u4f5c\u51fd\u6570\u5b9e\u53c2\u65f6\uff0c\u4e0d\u662f\u628a\u6570\u7ec4\u7684\u503c\u4f20\u9012\u7ed9\u5f62\u53c2\uff0c\u800c\u662f\u628a\u5b9e\u53c2\u6570\u7ec4\u7684\u8d77\u59cb\u5730\u5740\u4f20\u9012\u7ed9\u5f62\u53c2\u6570\u7ec4\uff0c\u8fd9\u6837\u4e24\u4e2a\u6570\u7ec4\u5c31\u5171\u540c\u5360\u7528\u540c\u4e00\u6bb5\u5185\u5b58\u5355\u5143\u3002", "\u00a0", "(34)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "main()", "{\u00a0 int a[]={1,2,3,4,5,6,7,8,9,0}\uff0c*p;", "for(p=a;p<a+10;p++)printf(\u201c\uff05d,\u201d\uff0c*p);", "}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "A)l\uff0c2\uff0c3\uff0c4\uff0c5\uff0c6\uff0c7\uff0c8\uff0c9\uff0c0\uff0c\u00a0\u00a0\u00a0 B)2,3,4,5,6,7,8,9,10,1\uff0c", "C)0,1,2,3,4,5,6,7,8,9\uff0c\u00a0\u00a0\u00a0 D)l\uff0cl\uff0c1\uff0cl\uff0cl\uff0cl\uff0cl\uff0cl\uff0cl\uff0cl\uff0c", "A", "c\u8bed\u8a00\u89c4\u5b9a\u6570\u7ec4\u53d8\u91cf\u540d\u4ee3\u8868\u6570\u7ec4\u7684\u9996\u5730\u5740\uff0c\u5373\u7b2c0\u53f7\u5143\u7d20\u7684\u5730\u5740\u3002\u672c\u9898\u5c06a\u6570\u7ec4\u4e2d\u7684\u503c\u5168\u90e8\u8f93\u51fa\uff0c\u5373\u4e3al\uff0c2\uff0c3\uff0c4\uff0c5\uff0c6\uff0c7\uff0c8\uff0c9\uff0c0\uff0c\u3002", "\u00a0", "(35)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "#define P 3", "void F(int x){return(P*x*x);}", "main()", "{printf(\u201c\uff05d\uff3cn\u201d,F(3+5))\uff1b}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "A)192\u00a0\u00a0\u00a0 B)29\u00a0\u00a0\u00a0 C)25\u00a0\u00a0\u00a0 D)\u7f16\u8bd1\u51fa\u9519", "D", "return\u8bed\u53e5\u7528\u4e8e\u4ece\u88ab\u8c03\u51fd\u6570\u5e26\u56de\u4e00\u4e2a\u51fd\u6570\u503c\u3002void\u5173\u952e\u5b57\u8868\u793a\u201c\u65e0\u7c7b\u578b\u201d\uff0c\u5373\u4e0d\u9700\u8981\u4ece\u88ab\u8c03\u51fd\u6570\u4e2d\u5e26\u56de\u51fd\u6570\u503c\uff0c\u6240\u4ee5\u4e0d\u9700\u8981return\u8bed\u53e5\uff0c\u6545\u7f16\u8bd1\u65f6\u51fa\u9519\u3002", "\u00a0", "(36)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "main()", "{int c=35;printf(\u201c\uff05d\uff3cn\u201d,c&C);}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "A)0\u00a0\u00a0\u00a0 B)70\u00a0\u00a0\u00a0 C)35\u00a0\u00a0\u00a0 D)1", "C", "\u6309\u4f4d\u201c\u4e0e\u201d\u65f6\uff0c1&1=1\uff0c\u5176\u4ed6\u90fd\u7b49O\u3002\u56e0\u4e3a\u672c\u9898\u4e2d\u76f8\u4e0e\u7684\u4e24\u4e2a\u503c\u76f8\u7b49\uff0c\u5373\u5bf9\u5e94\u4f4d\u4e0a\u7684\u4e8c\u8fdb\u5236\u503c\u76f8\u7b49\uff0c\u6240\u4ee5\u201c\u4e0e\u201d\u7684\u7ed3\u679c\u4e5f\u5373\u4e3a\u5176\u503c\u672c\u8eab\u3002", "\u00a0", "(37)\u4ee5\u4e0b\u53d9\u8ff0\u4e2d\u6b63\u786e\u7684\u662f________\u3002", "A)\u9884\u5904\u7406\u547d\u4ee4\u884c\u5fc5\u987b\u4f4d\u4e8e\u6e90\u6587\u4ef6\u7684\u5f00\u5934", "B)\u5728\u6e90\u6587\u4ef6\u7684\u4e00\u884c\u4e0a\u53ef\u4ee5\u6709\u591a\u6761\u9884\u5904\u7406\u547d\u4ee4", "C)\u5b8f\u540d\u5fc5\u987b\u7528\u5927\u5199\u5b57\u6bcd\u8868\u793a", "D)\u5b8f\u66ff\u6362\u4e0d\u5360\u7528\u7a0b\u5e8f\u7684\u8fd0\u884c\u65f6\u95f4", "D", "\u901a\u5e38\uff0c\u9884\u5904\u7406\u547d\u4ee4\u4f4d\u4e8e\u6e90\u6587\u4ef6\u7684\u5f00\u5934\uff0c\u4e5f\u53ef\u4ee5\u5199\u5728\u51fd\u6570\u4e0e\u51fd\u6570\u4e4b\u95f4\uff1b\u4e0d\u80fd\u5728\u4e00\u884c\u4e0a\u5199\u591a\u6761\u9884\u5904\u7406\u547d\u4ee4\uff1a\u5b8f\u540d\u4e00\u822c\u4e60\u60ef\u7528\u5927\u5199\u5b57\u6bcd\u8868\u793a\uff0c\u4ee5\u4fbf\u4e0e\u53d8\u91cf\u540d\u76f8\u533a\u522b\uff0c\u4f46\u8fd9\u5e76\u975e\u89c4\u5b9a\uff0c\u4e5f\u53ef\u7528\u5c0f\u5199\u5b57\u6bcd\u3002", "\u00a0", "(38)\u82e5\u6709\u4ee5\u4e0b\u8bf4\u660e\u548c\u5b9a\u4e49", "union dt", "{int a;har b;ouble c;}data;", "\u4ee5\u4e0b\u53d9\u8ff0\u4e2d\u9519\u8bef\u7684\u662f________\u3002", "A)data\u7684\u6bcf\u4e2a\u6210\u5458\u8d77\u59cb\u5730\u5740\u90fd\u76f8\u540c", "B)\u53d8\u91cfdata\u6240\u5360\u7684\u5185\u5b58\u5b57\u8282\u6570\u4e0e\u6210\u5458c\u6240\u5360\u5b57\u8282\u6570\u76f8\u7b49", "C)\u7a0b\u5e8f\u6bb5\uff1adata\uff0ea=5;pintf(\u201c%f\\n\u201d\uff0cdata\uff0eC);\u8f93\u51fa\u7ed3\u679c\u4e3a5\uff0e000000", "D)data\u53ef\u4ee5\u4f5c\u4e3a\u51fd\u6570\u7684\u5b9e\u53c2", "C", "union\u662f\u8868\u793a\u5171\u7528\u4f53\u7684\u5173\u952e\u5b57\uff0c\u6210\u5458a,b,c\u5171\u5360\u7528\u540c\u4e00\u4e2a\u5185\u5b58\u7a7a\u95f4\uff0cdata\u7684\u6bcf\u4e2a\u6210\u5458\u8d77\u59cb\u5730\u5740\u90fd\u76f8\u540c\uff1b\u5171\u7528\u4f53\u53d8\u91cf\u6240\u5360\u7684\u5185\u5b58\u957f\u5ea6\u7b49\u4e8e\u6700\u957f\u7684\u6210\u5458\u7684\u957f\u5ea6\uff0c\u6545\u53d8\u91cf\u2019data\u6240\u5360\u7684\u5185\u5b58\u5b57\u8282\u6570\u4e0e\u6210\u5458c\u6240\u5360\u5b57\u8282\u6570\u76f8\u7b49\uff1b\u6267\u884c\u201cdata\uff0ea=5\uff1bprintf(\u201c\uff05f\\n\u201d,data\uff0eC)\uff1b\u201dprintf\u51fd\u6570\u53ea\u662f\u5c06\u5185\u5b58\u4e2d\u7684\u6570\u636e\u4ee5\u4e0d\u540c\u7684\u7c7b\u578b\u8f93\u51fa\uff0c\u800c\u4e0d\u80fd\u5c06\u5185\u5b58\u4e2d\u7684\u6574\u578b\u6570\u636e\u81ea\u52a8\u8f6c\u6362\u4e3a\u7b49\u503c\u7684\u6d6e\u70b9\u6570\uff0c\u6545C\u662f\u9519\u8bef\u7684\u3002", "\u00a0", "(39)\u4ee5\u4e0b\u8bed\u53e5\u6216\u8bed\u53e5\u7ec4\u4e2d\uff0c\u80fd\u6b63\u786e\u8fdb\u884c\u5b57\u7b26\u4e32\u8d4b\u503c\u7684\u662f________\u3002", "A)char*sp;*sp=\u201dright!\u201d;\u00a0\u00a0\u00a0 B)char s[lO];s=\u201dright! \u201c;", "C)char s[10];*s=\u201dright! \u201c;\u00a0 \u00a0D)char*sp=\u201dright! \u201c;", "D", "\u8bc4\u6790:\u9009\u9879A\u5b9a\u4e49\u4e86\u5b57\u7b26\u578b\u7684\u6307\u9488\u53d8\u91cfsp\uff0c\u5219*sp\u5b58\u50a8\u7684\u662f\u7b2c\u4e00\u4e2a\u5b57\u7b26\uff0c\u800c\u7ed9\u5b83\u8d4b\u7684\u662f\u5b57\u7b26\u4e32\uff0c\u6545\u9519\uff1b", "\u9009\u9879B\u8868\u793a\u4ee3\u8868\u6570\u7ec4\u7684\u9996\u5730\u5740\uff0c\u800c\u9898\u4e2d\u7ed9\u5b83\u8d4b\u7684\u662f\u5b57\u7b26\u4e32\uff0c\u6240\u4ee5\u9519\u8bef\uff1b", "\u9009\u9879c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5b57\u7b26\u578b\u7684\u6570\u7ec4s[10]\uff0c\u518d\u901a\u8fc7+s\u7ed9\u6570\u7ec4\u5143\u7d20\u8d4b\u521d\u503c\uff0c\u8fd9\u65f6\u662f\u4e0e\u9009\u9879A\u76f8\u540c\u7684\u9519\u8bef\u3002", "\u00a0", "(40)\u8bbe\u6709\u5982\u4e0b\u8bf4\u660e", "typedef struct ST", "{long a; int b; char c[2];}NEW;", "\u5219\u4e0b\u9762\u53d9\u8ff0\u4e2d\u6b63\u786e\u7684\u662f________\u3002", "A)\u4ee5\u4e0a\u7684\u8bf4\u660e\u5f62\u5f0f\u975e\u6cd5\u00a0\u00a0\u00a0 B)ST\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\u7c7b\u578b", "C)NEW\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\u7c7b\u578b\u00a0\u00a0\u00a0 D)NEW\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\u53d8\u91cf", "C", "typedef\u5173\u952e\u5b57\u7528\u4e8e\u58f0\u660e\u4e00\u4e2a\u65b0\u7684\u7c7b\u578b\u540d\u4ee3\u66ff\u5df2\u6709\u7684\u7c7b\u578b\u540d\u3002", "\u672c\u9898\u4e2d\u5982\u679c\u6ca1\u6709\u7528typedef\u8fdb\u884c\u5b9a\u4e49\u7684\u8bdd\uff0c\u5219struct ST\u4e3a\u7ed3\u6784\u4f53\u7c7b\u578b\uff0c\u73b0\u5728\u7528typedef\u5b9a\u4e49\u540e\uff0c\u76f8\u5f53\u4e8e\u7528NEW\u4ee3\u8868\u4e86struct ST\u8fd9\u4e00\u7ed3\u6784\u4f53\u7c7b\u578b\uff0c\u6545NEW\u4e3a\u7ed3\u6784\u4f53\u7c7b\u578b\u3002", "\u00a0", "(41)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "main()", "{\u00a0\u00a0\u00a0 int a=1\uff0cb;", "for(b=l;b<10;b++)", "{\u00a0 if(a>=8)break;", "if(a\uff052==1){a+=5;continue;}", "a-=3;", ")", "printf(\u201c\uff05d\uff3cn\u201d\uff0cb);", "}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "A) 3\u00a0 \u00a0\u00a0\u00a0B)4\u00a0 \u00a0\u00a0\u00a0C) 5\u00a0 \u00a0\u00a0\u00a0D) 6", "B", "break\u548ccontinue\u7684\u533a\u522b\u662f\uff1acontinue\u8bed\u53e5\u53ea\u7ed3\u675f\u672c\u6b21\u5faa\u73af\uff0c\u800c\u4e0d\u662f\u7ec8\u6b62\u6574\u4e2a\u5faa\u73af\u7684\u6267\u884c\uff1b\u800cbreak\u8bed\u53e5\u5219\u662f\u7ed3\u675f\u6574\u4e2a\u5faa\u73af\u8fc7\u7a0b\uff0c\uff0e\u4e0d\u518d\u5224\u65ad\u6267\u884c\u7684\u6761\u4ef6\u662f\u5426\u6210\u7acb\u3002", "\u00a0", "(42)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "main()", "{\u00a0 char s[]=\u201dl 59\u2033\uff0c*p;", "p=s;", "printf(\u201c\uff05c\u201d\uff0c*p++);printf(\u201c\uff05c\u201d\uff0c*p++);", "}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "A)15\u00a0\u00a0\u00a0 B)16\u00a0\u00a0\u00a0 C)12\u00a0\u00a0\u00a0 D)59", "A", "\u672c\u9898\u901a\u8fc7\u201cp=s\u201d\u5c06\u6307\u9488\u53d8\u91cfp\u6307\u5411\u5b57\u7b26\u6570\u7ec4s\uff0c\u5728\u7b2c\u4e00\u6b21\u8f93\u51fa\u65f6\uff0c\u7531\u4e8e++\u548c*\u4e3a\u540c\u4e00\u4f18\u5148\u7ea7\uff0c\u201c*p++\u201d\u76f8\u4e8e\u201c+(p++)\u201d\u3002p\u6307\u5411s[1]\uff0c\u8f93\u51fa\u4e3as[1]\u7684\u503c\u3002", "\u00a0", "(43)\u6709\u4ee5\u4e0b\u51fd\u6570", "fun(char*a,char*b)", "{\u00a0 while((*a!=\u2019\uff3c0\u2019)&&(*b!=\u2019\uff3c0\u2019)&&(*a==b))", "{a++;b++; }", "return(*a-*b);", "}", "\u8be5\u51fd\u6570\u7684\u529f\u80fd\u662f________\u3002", "A)\u8ba1\u7b97a\u548cb\u6240\u6307\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e4b\u5dee", "B)\u5c06b\u6240\u6307\u5b57\u7b26\u4e32\u8fde\u63a5\u5230a\u6240\u6307\u5b57\u7b26\u4e32\u4e2d", "C)\u5c06b\u6240\u6307\u5b57\u7b26\u4e32\u8fde\u63a5\u5230a\u6240\u6307\u5b57\u7b26\u4e32\u540e\u9762", "D)\u6bd4\u8f83a\u548cb\u6240\u6307\u5b57\u7b26\u4e32\u7684\u5927\u5c0f", "D", "\u5b57\u7b26\u4e32\u7684\u6bd4\u8f83\u89c4\u5219\u662f\u5bf9\u4e24\u4e2a\u5b57\u7b26\u4e32\u81ea\u5de6\u81f3\u53f3\u9010\u4e2a\u5b57\u7b26\u76f8\u6bd4(\u6309ASCII\u7801\u503c\u5927\u5c0f\u6bd4\u8f83)\uff0c\u76f4\u5230\u51fa\u73b0\u4e0d\u540c\u7684\u5b57\u7b26\u6216\u9047\u5230\u2018\uff3c0\u2019\u4e3a\u6b62\uff0c\u76f8\u7b49\uff0c\u5219\u8fd4\u56de0\uff0c\u5426\u5219\u8fd4\u56de\u7b2c\u4e00\u4e2a\u4e0d\u7b49\u5b57\u7b26\u4e32\u7684ASCII\u7801\u7684\u5dee\u503c\u3002", "\u00a0", "(44)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "main()", "{\u00a0 int num[4][4]={{1\uff0c2\uff0c3\uff0c4}\uff0c{5,6,7,8)\uff0c{9,10,11,12}\uff0c{13,14,15,16}}\uff0ci,j;", "for(i=O;i<4;i++)", "{\u00a0\u00a0\u00a0 for(j=0;j<=i\uff0ej++)printf(\u201c\uff054c\u201d\uff0c\u2019\u00a0 \u2019);", "for(j______; j<4;j++)printf(\u201c\uff054d\u201d,num[i][j]);", "printf(\u201c\uff3cn\u201d);", "}", "}", "\u82e5\u8981\u6309\u4ee5\u4e0b\u5f62\u5f0f\u8f93\u51fa\u6570\u7ec4\u53f3\u4e0a\u534a\u4e09\u89d2", "l\u00a0\u00a0\u00a0 2\u00a0\u00a0\u00a0 3\u00a0\u00a0\u00a0 4", "6\u00a0\u00a0\u00a0 7\u00a0\u00a0\u00a0 8", "11\u00a0 12", "16", "\u5219\u5728\u7a0b\u5e8f\u4e0b\u5212\u7ebf\u5904\u5e94\u586b\u5165\u7684\u662f________", "A)i-l\u00a0\u00a0\u00a0 B)i\u00a0\u00a0\u00a0 C)i+1\u00a0\u00a0\u00a0 D)4-i", "B", "\u672c\u9898\u7a0b\u5e8f\u4e3a\u4e8c\u91cd\u5faa\u73af\uff0c\u5916\u5faa\u73af\u63a7\u5236\u8f93\u51fa\u6570\u636e\u7684\u884c\u6570\uff0c\u5185\u5faa\u73af\u63a7\u5236\u8f93\u51fa\u6570\u636e\u7684\u5217\u6570\u3002\u4ece\u672c\u9898\u8f93\u51fa\u7684\u5f62\u5f0f\u6765\u770b\uff0c\u7a0b\u5e8f\u8981\u6c42\u8f93\u51fa\u7684\u662f4\u884c4\u5217\u3002", "\u00a0", "(45)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "point(char*p){p+=3\uff1b}", "main()", "{\u00a0 char b[4]={\u2019at\uff0clb\u2019\uff0c\u2019c\u2019\uff0c\u2019d\uff0e}\uff0c*p=b\uff1b", "poim(p)\uff1bprimf(\u201d\uff05c\uff3cn\u201d\uff0c*p)\uff1b", "}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f________.", "A)a\u00a0\u00a0\u00a0 B)b\u00a0\u00a0\u00a0 C)c\u00a0\u00a0\u00a0 D)d", "A", "\u5728c\u8bed\u8a00\u4e2d\uff0c\u51fd\u6570\u7684\u53c2\u6570\u4f20\u9012\u65b9\u5f0f\u91c7\u7528\u6309\u503c\u4f20\u9012\uff0c\u56e0\u6b64\u4e0d\u80fd\u901a\u8fc7\u8c03\u7528\u51fd\u6570\u7684\u65b9\u5f0f\u6765\u6539\u53d8\u6307\u9488\u672c\u8eab\u7684\u503c\uff0c\u53ea\u80fd\u6539\u53d8\u6307\u9488\u6240\u6307\u53d8\u91cf\u7684\u503c\u3002", "\u00a0", "(46)\u7a0b\u5e8f\u4e2d\u82e5\u6709\u5982\u4e0b\u8bf4\u660e\u548c\u5b9a\u4e49\u8bed\u53e5", "char fun(char*)\uff1b", "main()", "{", "char *s=\u201done; a[5]={O}\uff0c(*f1)()=fun,ch;", "}", "\u4ee5\u4e0b\u9009\u9879\u4e2d\u5bf9\u51fd\u6570fun\u7684\u6b63\u786e\u8c03\u7528\u8bed\u53e5\u662f________.", "A)(*f1)(a);\u00a0\u00a0\u00a0 B)*f1(*s);\u00a0\u00a0\u00a0 C)fun(&a);\u00a0\u00a0\u00a0 D)ch=*fl(s);", "A", "\u9898\u4e2d\u5c06\u51fd\u6570fun\u7684\u5165\u53e3\u5730\u5740\u8d4b\u7ed9\u4e86\u6307\u9488\u53d8\u91cff1\uff0c\u8fd9\u65f6f1\u548cfun\u90fd\u6307\u5411\u51fd\u6570\u7684\u5f00\u5934\uff0c\u8c03\u7528*fl\u3002\u5c31\u662f\u8c03\u7528\u51fd\u6570fun\uff0e", "\u00a0", "(47)\u6709\u4ee5\u4e0b\u7ed3\u6784\u4f53\u8bf4\u660e\u548c\u53d8\u91cf\u5b9a\u4e49\uff0c\u5982\u56fe\u6240\u793a\uff1a", "struct node", "{int data\uff1bstruct node *next;} *p\uff0c*q\uff0c*r;", "\u00a0", "\u73b0\u8981\u5c06q\u6240\u6307\u7ed3\u70b9\u4ece\u94fe\u8868\u4e2d\u5220\u9664\uff0c\u540c\u65f6\u8981\u4fdd\u6301\u94fe\u8868\u7684\u8fde\u7eed\uff0c\u4ee5\u4e0b\u4e0d\u80fd\u5b8c\u6210\u6307\u5b9a\u64cd\u4f5c", "\u7684\u8bed\u53e5\u662f________\u3002", "A)P->next=q->next;\u00a0\u00a0\u00a0 B)p->next=p->next->next;", "C)p->next=r;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)p=q->next;", "D", "\u8981\u60f3\u5c06q\u6240\u6307\u7ed3\u70b9\u4ece\u94fe\u8868\u4e2d\u5220\u9664\uff0c\u540c\u65f6\u4fdd\u6301\u94fe\u8868\u7684\u8fde\u7eed\uff0c\u5fc5\u9700\u4f7fp\u7ed3\u70b9\u7684next\u6307\u5411r\uff0c\u5728\u56db\u4e2a\u9009\u9879\u4e2d\uff0c\u53ea\u6709\u9009\u9879D\u4e0d\u80fd\u505a\u5230\u3002", "\u00a0", "(48)\u4ee5\u4e0b\u5bf9\u7ed3\u6784\u4f53\u7c7b\u578b\u53d8\u91cftd\u7684\u5b9a\u4e49\u4e2d\uff0c\u9519\u8bef\u7684\u662f________\u3002", "A) typedef struct aa\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B) struct aa", "{ int n;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 { int n;", "float m;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0float m;", "}AA;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }td;", "AA td;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 struct aa td;", "C) street\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D) struct", "{ int n;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 { int n;", "float m;\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0float m;", "}aa;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }td;", "struct aa td;", "C", "\u9009\u9879c\u4e2d\u7684aa\u672c\u8eab\u5c31\u4e3a\u7ed3\u6784\u4f53\u53d8\u91cf\u540d\uff0c\u6240\u4ee5\u4e0d\u80fd\u518d\u7528\u5b83\u6765\u5b9a\u4e49\u7ed3\u6784\u4f53\u53d8\u91cf\uff0c\u6545\u6b64\u79cd\u5b9a\u4e49\u65b9\u6cd5\u662f\u9519\u8bef\u7684\uff1a", "\u00a0", "(49)\u4ee5\u4e0b\u4e0e\u51fd\u6570fseek(f1),0L,SEEK_SET)\u6709\u76f8\u540c\u4f5c\u7528\u7684\u662f________\u3002", "A)feof(fp) \u00a0\u00a0\u00a0\u00a0B)ftell(fp) \u00a0\u00a0\u00a0\u00a0C)fgetc(fp)\u00a0\u00a0\u00a0 D)rewind(fp)", "D", "fseek\u51fd\u6570\u7528\u4e8e\u6539\u53d8\u6587\u4ef6\u7684\u4f4d\u7f6e\u6307\u9488\u3002", "\u672c\u9898\u4e2d\u201cfseek(fp\uff0c0L,SEEK_SET)\u201d\u7684\u4f5c\u7528\u662f\u5c06\u4f4d\u7f6e\u6307\u9488\u79fb\u5230\u6587\u4ef6\u5934\u3002", "feof\u7684\u4f5c\u7528\u662f\u5224\u65ad\u6587\u4ef6\u662f\u5426\u7ed3\u675f\uff0c\u5df2\u6307\u5230\u6587\u4ef6\u7684\u672b\u5c3e\uff0c\u5219\u8fd4\u56de\u503c\u4e3a\u975e\u96f6\uff0c\u5426\u5219\u4e3a\u96f6\u3002", "ftell\u7684\u4f5c\u7528\u662f\u5f97\u5230\u6d41\u5f0f\u6587\u4ef6\u4e2d\u7684\u5f53\u524d\u4f4d\u7f6e\uff0c\u7528\u76f8\u5bf9\u4e8e\u6587\u4ef6\u5f00\u5934\u7684\u4f4d\u79fb\u91cf\u6765\u8868\u793a\u3002", "fgets\u7684\u4f5c\u7528\u662f\u6307\u5b9a\u6587\u4ef6\u8bfb\u5165\u4e8c\u4e2a\u5b57\u7b26\u4e32\u3002", "\u00a0", "(50)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "#include <stdio.h>", "void WriteStr(char *fn, char *str)", "{\u00a0 FILE *fp;", "fp=fopen(fn,\u201dw\u201d);fputs(str, fp);fclose(fp);", "}", "main()", "{", "WriteStr(\u201ct1.dat\u201d,\u201dstart\u201d);", "WriteStr(\u201ctl.dat\u201d,\u201dend\u201d);", "}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\uff0c\u6587\u4ef6t1\uff0edat\u4e2d\u7684\u5185\u5bb9\u662f________\u3002", "A)start \u00a0\u00a0\u00a0\u00a0\u00a0B)end \u00a0\u00a0\u00a0\u00a0\u00a0C)startend \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)endrt", "B", "\u8bc4\u6790:\u4e24\u6b21\u4f7f\u7528\u201c\u5199\u5165\u201d\u7684\u65b9\u5f0f\u6253\u5f00\u540c\u4e00\u4e2a\u6587\u4ef6\uff0c\u5728\u7b2c\u4e8c\u6b21\u6253\u5f00\u65f6\uff0c\u6587\u4ef6\u6307\u9488\u6307\u5411\u6587\u4ef6\u5934\uff0c\u6240\u4ee5\u6b64\u6b21\u5199\u5165\u7684\u6570\u636e\u8986\u76d6\u4e86\u6587\u4ef6\u539f\u6709\u7684\u6570\u636e\uff0c\u6545\u672c\u9898\u4e2dt1\uff0edat\u7684\u5185\u5bb9\u4e3aend\u3002", "\u00a0", "\u4e8c\u3001\u586b\u7a7a\u9898(\u6bcf\u7a7a2\u5206\uff0c\u517140\u5206)", "\u8bf7\u5c06\u6bcf\u7a7a\u7684\u6b63\u786e\u7b54\u6848\u5199\u5728\u30101\u3011\u81f3\u301020\u3011\u5e8f\u53f7\u7684\u6a2a\u7ebf\u4e0a\uff0c\u7b54\u5728\u8bd5\u5377\u4e0a\u4e0d\u5f97\u5206\u3002(1)\u67d0\u4e8c\u53c9\u6811\u4e2d\u5ea6\u4e3a2\u7684\u7ed3\u70b9\u670918\u4e2a\uff0c\u5219\u8be5\u4e8c\u53c9\u6811\u4e2d\u6709\u4e00__", "__ \u4e00\u4e2a\u53f6\u5b50\u7ed3\u70b9\u3002", "\u30101\u301119", "\u4e8c\u53c9\u6811\u7684\u6027\u8d283\uff1a\u5728\u4efb\u610f\u4e00\u68f5\u4e8c\u53c9\u6811\u4e2d\uff0c\u5ea6\u4e3a0\u7684\u7ed3\u70b9(\u5373\u53f6\u5b50\u7ed3\u70b9)\u603b\u662f\u6bd4\u5ea6\u4e3a2\u7684\u7ed3\u70b9\u591a\u4e00\u4e2a\u3002\u672c\u9898\u4e2d\u5ea6\u4e3a2\u7684\u7ed3\u70b9\u6570\u4e3a18\uff0c\u6545\u53f6\u5b50\u7ed3\u70b9\u6570\u4e3a18+1=19\u4e2a\u3002", "\u00a0", "(2)\u5728\u9762\u5411\u5bf9\u8c61\u65b9\u6cd5\u4e2d\uff0c\u7c7b\u7684\u5b9e\u4f8b\u79f0\u4e3a___", "___.", "\u30102\u3011\u5bf9\u8c61", "\u8bc4\u6790\uff1b\u5c06\u5c5e\u6027\u3001\u64cd\u4f5c\u76f8\u4f3c\u7684\u5bf9\u8c61\u5f52\u4e3a\u7c7b\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u7c7b\u662f\u5177\u6709\u5171\u540c\u5c5e\u6027\u3001\u5171\u540c\u65b9\u6cd5\u7684\u5bf9\u8c61\u7684\u96c6\u5408\u3002\u6240\u4ee5\uff0c\u7c7b\u662f\u5bf9\u8c61\u7684\u62bd\u8c61\uff0c\u5b83\u63cf\u8ff0\u4e86\u5c5e\u4e8e\u8be5\u5bf9\u8c61\u7c7b\u578b\u7684\u6240\u6709\u5bf9\u8c61\u7684\u6027\u8d28\uff0c\u800c\u4e00\u4e2a\u5bf9\u8c61\u5219\u662f\u5176\u5bf9\u5e94\u7c7b\u7684\u4e00\u4e2a\u5b9e\u4f8b\u3002", "\u00a0", "(3)\u8bca\u65ad\u548c\u6539\u6b63\u7a0b\u5e8f\u4e2d\u9519\u8bef\u7684\u5de5\u4f5c\u901a\u5e38\u79f0\u4e3a___", "___.", "\u30103\u3011\u7a0b\u5e8f\u8c03\u8bd5", "\u7a0b\u5e8f\u8c03\u8bd5\u7684\u4efb\u52a1\u662f\u8bca\u65ad\u548c\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\u3002\u5b83\u4e0e\u8f6f\u4ef6\u6d4b\u8bd5\u4e0d\u540c\uff0c\u8f6f\u4ef6\u6d4b\u8bd5\u662f\u5c3d\u53ef\u80fd\u591a\u5730\u53d1\u73b0\u8f6f\u4ef6\u4e2d\u7684\u9519\u8bef\u3002\u5148\u8981\u53d1\u73b0\u8f6f\u4ef6\u7684\u9519\u8bef\uff0c\u7136\u540e\u501f\u52a9\u4e8e\u4e00\u5b9a\u7684\u8c03\u8bd5\u5de5\u5177\u53bb\u627e\u51fa\u8f6f\u4ef6\u9519\u8bef\u7684\u5177\u4f53\u4f4d\u7f6e\u3002\u8f6f\u4ef6\u6d4b\u8bd5\u8d2f\u7a7f\u6574\u4e2a\u8f6f\u4ef6\u751f\u547d\u671f\uff0c\u8c03\u8bd5\u4e3b\u8981\u518d\u5f00\u53d1\u9636\u6bb5\u3002", "\u00a0", "(4)\u5728\u5173\u7cfb\u6570\u636e\u5e93\u4e2d\uff0c\u628a\u6570\u636e\u8868\u793a\u6210\u4e8c\u7ef4\u8868\uff0c\u6bcf\u4e00\u4e2a\u4e8c\u7ef4\u8868\u79f0\u4e3a___", "___\u3002", "\u30104\u3011\u5173\u7cfb", "\u5728\u5173\u7cfb\u6570\u636e\u5e93\u4e2d\uff0c\u628a\u6570\u636e\u8868\u793a\u6210\u4e8c\u7ef4\u8868\uff0c\u800c\u4e00\u4e2a\u4e8c\u7ef4\u8868\u5c31\u662f\u4e00\u4e2a\u5173\u7cfb\u3002", "\u00a0", "(5)\u95ee\u9898\u5904\u7406\u65b9\u6848\u7684\u6b63\u786e\u800c\u5b8c\u6574\u7684\u63cf\u8ff0\u79f0\u4e3a__", "___\u3002", "\u30105\u3011\u7b97\u6cd5", "\u6240\u8c13\u7b97\u6cd5\u662f\u6307\u89e3\u9898\u65b9\u6848\u7684\u51c6\u786e\u800c\u5b8c\u6574\u7684\u63cf\u8ff0\u3002", "\u00a0", "(6)\u4ee5\u4e0b\u7a0b\u5e8f\u8fd0\u884c\u65f6\uff0c\u82e5\u4ece\u952e\u76d8\u8f93\u5165\uff1a10 20 30<\u56de\u8f66>\uff0c\u8f93\u51fa\u7684\u7ed3\u679c\u662f___", "___.\u00a0\u00a0\u00a0\u00a0 #include<stdio\uff0eh>", "main()", "{\u00a0 int i=0,j=0\uff0ck=0;", "scanf(\u201c\uff05d\uff05*d\uff05d\u201d\uff0c&i\uff0c&j\uff0c&k);", "printf(\u201c\uff05d\uff05d\uff05d\uff3cn\u201dI,j,k);", "}", "\u30106\u301110300", "\u5728scanf\u683c\u5f0f\u63a7\u5236\u7b26\u4e2d\uff0c\u5982\u679c\u5728\uff05\u540e\u6709\u4e00\u4e2a\u201c*\u201d\u9644\u52a0\u8bf4\u660e\u7b26\uff0c\u8868\u793a\u8df3\u8fc7\u5b83\u6307\u5b9a\u7684\u5217\u6570\u3002\u672c\u9898\u4e2d\u201c\u201c\uff05d\uff05*d\uff05d\u201d\u201d\u8868\u793a\u5c0610\u8d4b\u7ed9i\uff0c\uff05+d\u8868\u793a\u8bfb\u5165\u6574\u6570\u4f46\u4e0d\u8d4b\u7ed9\u4efb\u4f55\u53d8\u91cf\uff0c\u7136\u540e\u518d\u8bfb\u5165\u6574\u657030\u8d4b\u7ed9\u53d8\u91cfj\uff0c\u90a3\u4e48\u53d8\u91cfk\u5e76\u6ca1\u6709\u91cd\u65b0\u8d4b\u503c\uff0c\u4ecd\u4e3a\u521d\u59cb\u503c0\u3002\u6240\u4ee5\u8f93\u51fa\u7684\u7ed3\u679c\u4e3a10300\u3002", "\u00a0", "(7)\u4ee5\u4e0b\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f__", "___\u3002", "#define S(x)4*x*x+l", "main()", "{\u00a0 inti=6,j=8;", "printf(\u201c\uff05d\uff3c11\u2033\uff0cS(i+j));", "}", "\u30107\u301181", "\u8bc4\u6790\uff1b\u5e26\u53c2\u6570\u7684\u5b8f\u5b9a\u4e49\u662f\u6309#define\u547d\u4ee4\u884c\u4e2d\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u4ece\u5de6\u5230\u53f3\u8fdb\u884c\u8f6c\u6362\u3002\u672c\u9898\u4e2d\u66ff\u6362\u7684\u5f0f\u5b50\u4e3a\uff1a4*i+j*i+j+l\uff0c\u4ee3\u5165i\uff0cj\u7684\u503c\u5f9781\u3002", "\u00a0", "(8)\u4ee5\u4e0b\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f___", "__\u3002", "main()", "{ int a=3\uff0cb=4\uff0cc=5\uff0ct=99;", "if(b<a&&a<C)t=a;a=c;c=t;", "if(a<c&&b<C)t=b;b=a;a=t;", "printf(\u201c\uff05d\uff05d\uff05d\uff3cn\u201d\uff0ca\uff0cb\uff0cC);", "}", "\u30108\u30114 5 99", "\u672c\u9898\u9700\u7279\u522b\u6ce8\u610f\u7684\u662f\u201c\uff1b\u201d\u7684\u95ee\u9898\uff0c\u4e0d\u80fd\u628a\u201ct=a\uff1ba=c\uff1bc=t\uff1b\u201d\u8bef\u8ba4\u4e3a\u662f\u7b2c\u4e00\u4e2aif\u7684\u8bed\u53e5\uff0c\u5b9e\u9645\u4e0a\uff0c\u53ea\u6709\u201ct=a\uff1b\u201d\u624d\u662f\u7b2c\u4e00\u4e2aif\u7684\u8bed\u53e5\u3002", "\u00a0", "(9)\u4ee5\u4e0b\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f___", "__\u3002", "main()", "{\u00a0 int a\uff0cb\uff0cc\uff1b", "a=10;b=20;c=(a\uff05b<1)||(a\uff0fb>1);", "printf(\u201c\uff05d\u00a0 \uff05d\u00a0 \uff05d\\n\u201d\uff0ca,b,C)\uff1b", "}", "\u30109\u301110 20 0", "\u672c\u9898\u4e2d\u201c(a\uff05b<1)\u2016(a\uff0fb>1)\u201d\u7684\u8fd0\u7b97\u987a\u5e8f\u4e3a\u5148\u7b97\u62ec\u53f7\u2192\u7b97\u672f\u8fd0\u7b97\u7b26\u2192\u5173\u7cfb\u8fd0\u7b97\u7b26\u2192\u903b\u8f91\u8fd0\u7b97\u7b26\u3002\u5176\u4e2da\uff05b=10\uff0ca\uff0fb=0\uff0c\u6240\u4ee5a\uff05b<l\u7684\u503c\u4e3a0\uff0ca\uff0fb>l\u503c\u4e5f\u662f0\uff0c\u6545\u6574\u4e2a\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u4e3a0\uff0c\u6240\u4ee5\u8f93\u51fa\u7684a,b,c\u7684\u503c\u4e3a10 20 0\u3002", "\u00a0", "(10)\u4ee5\u4e0b\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f___", "___\u3002", "main()", "{char c1,c2;", "for(c1=\u20190\u2019\uff0cc2=\u20199\u2019;c1<c2;c1++,c2\u2013)\u00a0 printf(\u201c\uff05c\uff05c\u201d\uff0cc1,c2);", "printf(\u201c\uff3cn\u201d);", "}", "\u301010\u30110918273645", "\u672c\u9898\u7a0b\u5e8f\u7684\u4f5c\u7528\u662f\u901a\u8fc7for\u5faa\u73af\u5c060-9\u8fd910\u4e2a\u6570\u5b57\u4ece\u524d\u5411\u540e\uff0c\u540c\u65f6\u4e5f\u4ece\u540e\u5411\u524d\u4f9d\u6b21\u8f93\u51fa\u3002", "\u00a0", "(11)\u5df2\u77e5\u5b57\u7b26A\u7684ASCII\u4ee3\u7801\u503c\u4e3a65\uff0c\u4ee5\u4e0b\u7a0b\u5e8f\u8fd0\u884c\u65f6\u82e5\u4ece\u952e\u76d8\u8f93\u5165\uff1aB33<\u56de\u8f66>\uff0c", "\u5219\u8f93\u51fa\u7ed3\u679c\u662f_____\u3002", "#include<stdio\uff0eh>", "main()", "{chara\uff0cb;", "a=getchar();scanf(\u201c\uff05dt\u201d\uff0c&b);", "a=a-\u2019a\u2019+\u2019O\u2019;b=b*2;", "printf(\u201c\uff05c\uff05c\uff3cn\u201d\uff0ca\uff0cb);", "}", "\u301011\u30111 B", "c\u8bed\u8a00\u4f7f\u5b57\u7b26\u578b\u6570\u636e\u548c\u6574\u578b\u6570\u636e\u4e4b\u95f4\u53ef\u4ee5\u901a\u7528\u3002\u9898\u4e2d\u6267\u884c\u201ca=getchar()\uff1b\u201d\u540e\uff0ca\u7684\u503cB\uff0c\u5728\u5185\u5b58\u4e2d\u7684\u8868\u73b0\u5f62\u5f0f\u4e3aASCII\u780166\uff1b\u6267\u884c\u201cscanf(\u201c\uff05d\u201d&b)\uff1b\u201d\u540e\uff0cb\u5728\u5185\u5b58\u4e2d\u7684\u8868\u73b0\u5f62\u5f0f\u4e3a33\uff0c\u7136\u540e\u7ecf\u8fc7\u201ca=a-\u2018A\u2019+\u20180\u2019\uff1bb=b*2\uff1b\u201d\u8fd0\u7b97\uff0c\u5f97\u51faa\u7684\u503c\u4e3a\u5b57\u7b26\u20181\u2019\uff0cb\u7684\u503c\u4e3aASCII\u780166\uff0c\u6700\u540e\u4ee5\u5b57\u7b26\u578b\u8f93\u51fa\u4e3al B\u3002", "\u00a0", "(12)\u4ee5\u4e0b\u7a0b\u5e8f\u4e2d\uff0cfun\u51fd\u6570\u7684\u529f\u80fd\u662f\u6c423\u884c4\u5217\u4e8c\u7ef4\u6570\u7ec4\u6bcf\u884c\u5143\u7d20\u4e2d\u7684\u6700\u5927\u503c\u3002\u8bf7\u586b\u7a7a\u3002", "void fun(int, int, int(*)[4],int *);", "main()", "{ int a[a][4]={{12,41,36,28},{19,33,15,27},{3,27,19,1}},b[3],i;", "fun(3,4,a,b);", "for(i=O;i<3;i++) printf(\u201c%4d\u201d,b [i]);", "printf(\u201c\\n\u201d);", "}", "void fun(int m,int n, int ar[][4],int *br)", "{\u00a0 int i,j,x;", "for(i=O;i<m;i++)", "( x=ar[i][0];", "For(j=O;j<n;j++) if(x<ar[i][j]) x=ar[i][j];", "___", "___=x;", "}", "}", "\u301012\u3011br[I]\u6216*(br+i)", "\u4e8c\u7ef4\u6570\u7ec4a\u5b58\u653e3\u884c4\u5217\u7684\u6570\u7ec4\u5143\u7d20\uff0c\u4e00\u7ef4\u6570\u7ec4b\u7528\u4e8e\u5b58\u653e\u6bcf\u884c\u7684\u6700\u5927\u6570\u3002\u5728\u51fd\u6570fun\u4e2d\uff0c\u5916\u5c42for\u5faa\u73af\u7528\u4e8e\u63a7\u5236\u884c\u6570\uff0c\u5185\u5c42for\u5faa\u73af\u7528\u4e8e\u63a7\u5236\u5217\u6570\u3002", "\u00a0", "(13)\u4ee5\u4e0b\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f___", "__\u3002", "void swap(int x, int y)", "{ int t;", "t=x;x=y;y=t;printf(\u201c%d %d \u201c,x,y);", "}", "main()", "{\u00a0 int a=3,b=4;", "swap(a,b); printf(\u201c%d %d\u201d,a,b);", "\u301013\u30114 3 3 4", "\u7528\u53d8\u91cf\u4f5c\u4e3a\u51fd\u6570\u7684\u5b9e\u53c2\u65f6\uff0c\u5c5e\u5355\u5411\u4f20\u9012\uff0c\u5373\u201c\u503c\u4f20\u9001\u201d\u65b9\u5f0f\uff0c\u6b64\u79cd\u51fd\u6570\u53c2\u6570\u7684\u4f20\u9012\u65b9\u5f0f\u53ea\u80fd\u7531\u5b9e\u53c2\u4f20\u7ed9\u5f62\u53c2\uff0c\u4e0d\u80fd\u7531\u5f62\u53c2\u4f20\u56de\u6765\u7ed9\u5b9e\u53c2\u3002", "\u00a0", "(14)\u4ee5\u4e0b\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f__", "__\u3002", "#include <string.h>", "void fun(char *s, int p, int k)", "{ int i;", "for(i=p;i<k-1;i++) s[i]=s[i+2];", "}", "main()", "{\u00a0 char s[]=\u201dabcdefg\u201d;", "fun(s,3,strlen(s)); puts(s);", "}", "\u301014\u3011abcfg", "\u51fd\u6570fun\u7684\u4f5c\u7528\u662f\u5c06s\u6240\u6307\u7684\u5b57\u7b26\u4e32\u4e2d\u4ece\u7b2cp\u53413\u5230\u7b2ck+1\u4e2a\u5b57\u7b26\u5411\u524d\u79fb\u52a8\u4e24\u4e2a\u4f4d\u7f6e\u3002\u672c\u9898\u7a0b\u5e8f\u662f\u5c06\u6570\u7ec4s\u4e2d\u4ece\u7b2c6\u4e2a\u5143\u7d20\u5f00\u59cb\u7684\u503c\u5206\u522b\u5411\u524d\u79fb\u52a8\u4e24\u4e2a\u4f4d\u7f6e\u3002\u5728\u6267\u884cfun\u51fd\u6570\u65f6\uff0cp\u7684\u503c\u662f3\uff0ck\u7684\u503c\u662f7\uff0c", "\u6240\u4ee5\uff0c\u5177\u4f53\u6267\u884c\u201cfor(i=p\uff1bi<k-1\uff1bi++)s[i]=s[i+2]\uff1b\u201d\u8bed\u53e5\u7684\u8fc7\u7a0b\u5982\u4e0b\uff1a", "i=3\uff1a\u5224\u65adi<k-1\u6210\u7acb\uff0c\u6267\u884cs[3]=s[5]\uff0c\u6b64\u65f6\uff0cs[3l=f\uff1b", "i=4\uff1a\u5224\u65adi<k-1\u6210\u7acb\uff0c\u6267\u884cs[4]=s[6]\uff0c\u6b64\u65f6\uff0cs[4]=g\uff1b", "i=5\uff1a\u5224\u65adi<k-l\u6210\u7acb\uff0c\u6267\u884cs[5]=s[7]\uff0c\u6b64\u65f6\uff0cs[5]=\u2018\uff3cO\u2019\uff1a", "i=6\uff1a\u5224\u65adi<k-1\u4e0d\u6210\u7acb\uff0c\u8fd4\u56de\u4e3b\u51fd\u6570\u8f93\u51fas\u7684\u503c\uff0c\u5373\u4e3aabcfg\u3002", "\u00a0", "(15)\u4ee5\u4e0b\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f___", "___\u3002", "#include <string.h>", "main()", "{\u00a0 char ch[]=\u201dabc\u201d,x[3][4]; int i;", "for(i=O;i<3;i++) strcpy(x[i],ch);", "for(i=O;i<3;i++) printf(\u201c%s\u201d,&x[i][i]);", "printf(\u201c\\n\u201d);", "}", "\u301015\u3011abcbcc", "\u8bc4\u6790:\u5b57\u7b26\u6570\u7ec4ch\u7684\u503c\u2018abc\u2019\u5206\u522b\u590d\u5236\u5230\u4e86\u4e8c\u7ef4\u6570\u7ec4x\u7684\u6bcf\u4e00\u884c\uff0c\u4f7f\u5f97\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u6bcf\u4e00\u884c\u7684\u503c\u5747\u4e3a\u2018abc\u2019\uff0c\u518d\u901a\u8fc7\u7b2c\u4e8c\u4e2afor\u5faa\u73af\u6253\u5370\u51fa\u6bcf\u4e00\u884c\u4e0a\u6240\u8981\u6c42\u8f93\u51fa\u7684\u5b57\u7b26\u4e32\u3002", "\u00a0", "(16)\u4ee5\u4e0b\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f___", "___\u3002", "fun(int a)", "int b=0;static int c=3;", "b++;c++;", "return(a+b+C);", "}", "main()", "{int i\uff0ca=5;", "for(i=0;i<3;i++)printf(\u201c\uff05d\uff05d\u201d,i,fun(a));", "printf(\u201c\uff3cn\u201d);", "}", "\u301016\u3011010111212", "\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u662f\u5728\u7f16\u8bd1\u65f6\u8d4b\u521d\u503c\u7684\uff0c\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u5b83\u5df2\u6709\u521d\u503c\u3002", "\u00a0", "(17)\u4ee5\u4e0b\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f__", "__\u3002", "struct NODE", "{ int k;", "struct NODE *link;", "};", "main()", "{\u00a0 struct NODE m[5],*p=m,*q=m+4;", "int i=0;", "while(p!=q) {", "p->k=++i; p++;", "q->k=i++; q\u2013;", "}", "q->k=i;", "for(i=0;i<5;i++) printf(\u201c%d\u201d,m[i].k);", "printf(\u201cn\u201d);", "}", "\u301017\u301113431", "\u7a0b\u5e8f\u6267\u884c\u8fc7\u7a0b\u5982\u4e0b\uff1a", "p=m\uff0cq=m+4\uff0c\u6761\u4ef6p!=q\u6210\u7acb\uff0c\u6267\u884cp->k=++i\uff1b\uff0c\u7531\u4e8e\u662f\u201c\u524d\u52a0\u201d\uff0c\u6240\u4ee5m[O]\uff0ek=1\uff0e\u6267\u884cp++\u540ep=m+l\uff1b\u6267\u884cq->k=i++\uff1b\uff0c\u7531\u4e8e\u662f\u201c\u540e\u52a0\u201d\uff0c\u6240\u4ee5m[4]\uff0ek=1\uff0c\u7136\u540e\u4f7f\u5f97i\u52a0\u4e0a1\uff0c\u5373i=2\uff0cq\u2013\u540e\uff0cq=m+3\uff1a", "p=m+l\uff0cq=m+3\uff0c\u6761\u4ef6p!=q\u6210\u7acb\uff0c\u6267\u884cp->k=++i\uff1b\uff0c\u7531\u4e8e\u662f\u201c\u524d\u52a0\u201d\uff0c\u6240\u4ee5i=3\uff0cm[0]\uff0ek=3\uff0c\u6267\u884cp++\u540ep=m+2\uff1b\u6267\u884cq->k=i++\uff1b\uff0c\u7531\u4e8e\u662f\u201c\u540e\u52a0\u201d\uff0c\u6240\u4ee5m[4]\uff0ek=3\uff0ci=4\uff0cq\u2013\u540e\uff0cq=m+2\uff1b", "p=m+2\uff0cq=m+2\uff0c\u6761\u4ef6p!=q\u4e0d\u6210\u7acb\uff0c\u5219\u6267\u884cq->k=i\uff1b\u5373m[2]\uff0ek=4\uff1b\u6545\u8f93\u51fa\u7684\u503c\u4e3a13431\u3002", "\u00a0", "(18)\u4ee5\u4e0b\u7a0b\u5e8f\u4e2d\u51fd\u6570huiwen\u7684\u529f\u80fd\u662f\u68c0\u67e5\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u662f\u56de\u6587\uff0c\u5f53\u5b57\u7b26\u4e32\u662f\u56de\u6587\uff0c", "\u65f6\uff0c\u51fd\u6570\u8fd4\u56de\u5b57\u7b26\u4e32\uff1ayes!\uff0c\u5426\u5219\u51fd\u6570\u8fd4\u56de\u5b57\u7b26\u4e32\uff1ano!\uff0c\u5e76\u5728\u4e3b\u51fd\u6570\u4e2d\u8f93\u51fa\uff0c\u6240\u8c13\u56de", "\u6587\u5373\u6b63\u5411\u4e0e\u53cd\u5411\u7684\u62fc\u5199\u90fd\u4e00\u6837\uff0c\u4f8b\u5982\uff1aadgda\u3002\u8bf7\u586b\u7a7a\u3002", "#include <string.h>", "char *huiwen(char *str)", "{\u00a0 char *pl,*p2; int i,t=0;", "pl=str;p2=___", "___;", "for(i=0;i<=strlen(str)/2;i++)", "if(*pl ++!=*p2\u2013) {t=l ;break;}", "if(__", "___) retum(\u201cyes!\u201d);", "else return(\u201cno!\u201d);", "}", "main()", "{ char str[50];", "printf(\u201cInput:\u201d); scanf(\u201c%s\u201d,str);", "printf(\u201c%s\\n\u201d,__", "__ );", "}", "\u301018\u3011pl+(strlen(str)-1)\u6216str+(strlen(str)-1)", "\u301019\u3011t==0\u6216!(tl=0)\u6216t!=l\u6216!t", "\u301020\u3011huiwen(str)", "\u672c\u9898\u7684\u8981\u6c42\u662f\u5224\u65ad\u4ece\u952e\u76d8\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u662f\u5426\u662f\u56de\u6587\uff0c\u4f46\u5728\u4e3b\u51fd\u6570\u4e2d\u5e76\u6ca1\u6709\u5b8c\u6210\u6b64\u529f\u80fd\u7684\u4ee3\u7801\uff0c\u6545\u7b2c20\u7a7a\u5e94\u8be5\u586b\u8c03\u7528\u51fd\u6570huiwen\u4ee3\u7801\uff0c\u5373huiwen(str)\u3002", "\u7531\u4e8e\u56de\u6587\u5b57\u7b26\u4e32\u662f\u6307\u6b63\u5411\u4e0e\u53cd\u5411\u62fc\u5199\u90fd\u4e00\u6837\uff0c\u6240\u4ee5\u5bf9\u4e8e\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5982\u679c\u6b63\u5411\u987a\u5e8f\u4e0e\u53cd\u5411\u987a\u5e8f\u5bf9\u5e94\u4f4d\u7f6e\u4e0a\u7684\u5b57\u7b26\u4e00\u6837\uff0c\u5219\u6b64\u5b57\u7b26\u4e32\u5373\u4e3a\u56de\u6587\u3002\u5728\u51fd\u6570huiwen\u4e2d\uff0c\u5df2\u7528\u201cpl=str\u201d\u4f7f\u5f97pl\u6307\u5411\u5b57\u7b26\u4e32str\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684\u5730\u5740\uff0c\u5219\u7b2c18\u7a7a\u8bed\u53e5\u7684\u529f\u80fd\u5e94\u8be5\u662f\u4f7f\u5f97p2\u6307\u5411\u5b57\u7b26\u4e32str\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5730\u5740\uff0c\u6545\u586bpl+(strlen(str)-1)\uff0c\u7531\u4e8ep1\u4e0estr\u6307\u5411\u7684\u662f\u540c\u4e00\u4e2a\u5730\u5740\uff0c\u6240\u4ee5\uff0c\u7b2c18\u7a7a\u4e5f\u53ef\u4ee5\u586bstr+(strlen(str)-1)\u3002", "\u5728\u8fdb\u884cfor\u5faa\u73af\u65f6\uff0c\u5982\u679cpl\u6240\u6307\u5411\u7684\u5b57\u7b26\u4e0ep2\u6307\u5411\u7684\u5b57\u7b26\u4e0d\u76f8\u540c\uff0c\u5219\u8bf4\u660e\uff0c\u5b57\u7b26\u4e32str\u4e0d\u662f\u56de\u6587\uff0c\u5219\u7528t=l\u6807\u8bb0\uff0c\u5e76\u9000\u51fa\u5faa\u73af\uff0c\u6267\u884c\u4e0b\u9762\u7684if\u8bed\u53e5\uff0c\u7531\u4e8e\u9898\u4e2d\u8981\u6c42\u5982\u679c\u662f\u56de\u6587\uff0c\u5219\u8fd4\u56de\u201cyes!\u201d\uff0c\u5426\u5219\uff0c\u8fd4\u56de\u201cno!\u201d\u3002\u6545\u5f53t=O\u7684\u65f6\u5019\uff0c\u8bf4\u660e\u5b57\u7b26\u4e32str\u4e3a\u56de\u6587\uff0c\u6240\u4ee5\u7b2c19\u5e94\u586bt==O\u6216!\uff08t!=O\uff09\u6216t!=l\u6216!t\u3002"], "title": "C\u8bed\u8a00\u7b14\u8bd5\u9898\u5e26\u7b54\u6848\uff08\u5341\uff09"},
{"contents": ["\u9762\u8bd5\u98981\uff1a\u53d8\u91cf\u7684\u58f0\u660e\u548c\u5b9a\u4e49\u6709\u4ec0\u4e48\u533a\u522b", "\n\u4e3a\u53d8\u91cf\u5206\u914d\u5730\u5740\u548c\u5b58\u50a8\u7a7a\u95f4\u7684\u79f0\u4e3a\u5b9a\u4e49\uff0c\u4e0d\u5206\u914d\u5730\u5740\u7684\u79f0\u4e3a\u58f0\u660e\u3002\u4e00\u4e2a\u53d8\u91cf\u53ef\u4ee5\u5728\u591a\u4e2a\u5730\u65b9\u58f0\u660e\uff0c\u4f46\u662f\u53ea\u5728\u4e00\u4e2a\u5730\u65b9\u5b9a\u4e49\u3002\u52a0\u5165extern\u4fee\u9970\u7684\u662f\u53d8\u91cf\u7684\u58f0\u660e\uff0c\u8bf4\u660e\u6b64\u53d8\u91cf\u5c06\u5728\u6587\u4ef6\u4ee5\u5916\u6216\u5728\u6587\u4ef6\u540e\u9762\u90e8\u5206\u5b9a\u4e49\u3002", "\n\u8bf4\u660e\uff1a\u5f88\u591a\u65f6\u5019\u4e00\u4e2a\u53d8\u91cf\uff0c\u53ea\u662f\u58f0\u660e\u4e0d\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff0c\u76f4\u5230\u5177\u4f53\u4f7f\u7528\u65f6\u624d\u521d\u59cb\u5316\uff0c\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff0c\u5982\u5916\u90e8\u53d8\u91cf\u3002", "\n\u9762\u8bd5\u98982\uff1a\u5199\u51fabool \u3001int\u3001 float\u3001\u6307\u9488\u53d8\u91cf\u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684if\u8bed\u53e5", "\nbool\u578b\u6570\u636e\uff1a if( flag ) { A; } else { B\uff1b }", "\nint\u578b\u6570\u636e\uff1a if( 0 != flag ) { A; } else { B\uff1b }", "\n\u6307\u9488\u578b\u6570\uff1a if( NULL == flag ) { A; } else { B\uff1b }", "\nfloat\u578b\u6570\u636e\uff1a if ( ( flag >= NORM ) && ( flag <= NORM ) ) { A\uff1b", "\n2", "\n}", "\n\u6ce8\u610f\uff1a\u5e94\u7279\u522b\u6ce8\u610f\u5728int\u3001\u6307\u9488\u578b\u53d8\u91cf\u548c\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684\u65f6\u5019\uff0c\u628a\u201c\u96f6\u503c\u201d\u653e\u5728\u5de6\u8fb9\uff0c\u8fd9\u6837\u5f53\u628a\u201c==\u201d\u8bef\u5199\u6210\u201c=\u201d\u65f6\uff0c\u7f16\u8bd1\u5668\u53ef\u4ee5\u62a5\u9519\uff0c\u5426\u5219\u8fd9\u79cd\u903b\u8f91\u9519\u8bef\u4e0d\u5bb9\u6613\u53d1\u73b0\uff0c\u5e76\u4e14\u53ef\u80fd\u5bfc\u81f4\u5f88\u4e25\u91cd\u7684\u540e\u679c\u3002", "\n\u9762\u8bd5\u98983\uff1asizeof\u548cstrlen\u7684\u533a\u522b", "\nsizeof\u548cstrlen\u6709\u4ee5\u4e0b\u533a\u522b\uff1a", "\n\uf071 sizeof\u662f\u4e00\u4e2a\u64cd\u4f5c\u7b26\uff0cstrlen\u662f\u5e93\u51fd\u6570\u3002", "\n\uf071 sizeof\u7684\u53c2\u6570\u53ef\u4ee5\u662f\u6570\u636e\u7684\u7c7b\u578b\uff0c\u4e5f\u53ef\u4ee5\u662f\u53d8\u91cf\uff0c\u800cstrlen\u53ea\u80fd\u4ee5\u7ed3\u5c3e\u4e3a\u2018\\0\u2018\u7684\u5b57\u7b26\u4e32\u4f5c\u53c2\u6570\u3002", "\n\uf071 \u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u65f6\u5c31\u8ba1\u7b97\u51fa\u4e86sizeof\u7684\u7ed3\u679c\u3002\u800cstrlen\u51fd\u6570\u5fc5\u987b\u5728\u8fd0\u884c\u65f6\u624d\u80fd\u8ba1\u7b97\u51fa\u6765\u3002\u5e76\u4e14sizeof\u8ba1\u7b97\u7684\u662f\u6570\u636e\u7c7b\u578b\u5360\u5185\u5b58\u7684\u5927\u5c0f\uff0c\u800cstrlen\u8ba1\u7b97\u7684\u662f\u5b57\u7b26\u4e32\u5b9e\u9645\u7684\u957f\u5ea6\u3002", "\n\uf071 \u6570\u7ec4\u505asizeof\u7684\u53c2\u6570\u4e0d\u9000\u5316\uff0c\u4f20\u9012\u7ed9strlen\u5c31\u9000\u5316\u4e3a\u6307\u9488\u4e86\u3002", "\n\u6ce8\u610f\uff1a\u6709\u4e9b\u662f\u64cd\u4f5c\u7b26\u770b\u8d77\u6765\u50cf\u662f\u51fd\u6570\uff0c\u800c\u6709\u4e9b\u51fd\u6570\u540d\u770b\u8d77\u6765\u53c8\u50cf\u64cd\u4f5c\u7b26\uff0c\u8fd9\u7c7b\u5bb9\u6613\u6df7\u6dc6\u7684\u540d\u79f0\u4e00\u5b9a\u8981\u52a0\u4ee5\u533a\u5206\uff0c\u5426\u5219\u9047\u5230\u6570\u7ec4\u540d\u8fd9\u7c7b\u7279\u6b8a\u6570\u636e\u7c7b\u578b\u4f5c\u53c2\u6570\u65f6\u5c31\u5f88\u5bb9\u6613\u51fa\u9519\u3002\u6700\u5bb9\u6613\u6df7\u6dc6\u4e3a\u51fd\u6570\u7684\u64cd\u4f5c\u7b26\u5c31\u662fsizeof\u3002", "\n\u9762\u8bd5\u98984\uff1aC\u8bed\u8a00\u7684\u5173\u952e\u5b57 static \u548c C++ \u7684\u5173\u952e\u5b57 static \u6709\u4ec0\u4e48\u533a\u522b", "\n\u5728C\u4e2dstatic\u7528\u6765\u4fee\u9970\u5c40\u90e8\u9759\u6001\u53d8\u91cf\u548c\u5916\u90e8\u9759\u6001\u53d8\u91cf\u3001\u51fd\u6570\u3002\u800cC++\u4e2d\u9664\u4e86\u4e0a\u8ff0\u529f\u80fd\u5916\uff0c\u8fd8\u7528\u6765\u5b9a\u4e49\u7c7b\u7684\u6210\u5458\u53d8\u91cf\u548c\u51fd\u6570\u3002\u5373\u9759\u6001\u6210\u5458\u548c\u9759\u6001\u6210\u5458\u51fd\u6570\u3002", "\n\u6ce8\u610f\uff1a\u7f16\u7a0b\u65f6static\u7684\u8bb0\u5fc6\u6027\uff0c\u548c\u5168\u5c40\u6027\u7684\u7279\u70b9\u53ef\u4ee5\u8ba9\u5728\u4e0d\u540c\u65f6\u671f\u8c03\u7528\u7684\u51fd\u6570\u8fdb\u884c\u901a\u4fe1\uff0c\u4f20\u9012\u4fe1\u606f\uff0c\u800cC++\u7684\u9759\u6001\u6210\u5458\u5219\u53ef\u4ee5\u5728\u591a\u4e2a\u5bf9\u8c61\u5b9e\u4f8b\u95f4\u8fdb\u884c\u901a\u4fe1\uff0c\u4f20\u9012\u4fe1\u606f\u3002", "\n\u9762\u8bd5\u98985\uff1a\uff23\u4e2d\u7684malloc\u548c\uff23\uff0b\uff0b\u4e2d\u7684new\u6709\u4ec0\u4e48\u533a\u522b", "\nmalloc\u548cnew\u6709\u4ee5\u4e0b\u4e0d\u540c\uff1a", "\n\uff081\uff09new\u3001delete \u662f\u64cd\u4f5c\u7b26\uff0c\u53ef\u4ee5\u91cd\u8f7d\uff0c\u53ea\u80fd\u5728C++\u4e2d\u4f7f\u7528\u3002", "\n\uff082\uff09malloc\u3001free\u662f\u51fd\u6570\uff0c\u53ef\u4ee5\u8986\u76d6\uff0cC\u3001C++\u4e2d\u90fd\u53ef\u4ee5\u4f7f\u7528\u3002", "\n\uff083\uff09new \u53ef\u4ee5\u8c03\u7528\u5bf9\u8c61\u7684\u6784\u9020\u51fd\u6570\uff0c\u5bf9\u5e94\u7684delete\u8c03\u7528\u76f8\u5e94\u7684\u6790\u6784\u51fd\u6570\u3002", "\n\uff084\uff09malloc\u4ec5\u4ec5\u5206\u914d\u5185\u5b58\uff0cfree\u4ec5\u4ec5\u56de\u6536\u5185\u5b58\uff0c\u5e76\u4e0d\u6267\u884c\u6784\u9020\u548c\u6790\u6784\u51fd\u6570", "\n\uff085\uff09new\u3001delete\u8fd4\u56de\u7684\u662f\u67d0\u79cd\u6570\u636e\u7c7b\u578b\u6307\u9488\uff0cmalloc\u3001free\u8fd4\u56de\u7684\u662fvoid\u6307\u9488\u3002", "\n\u6ce8\u610f\uff1amalloc\u7533\u8bf7\u7684\u5185\u5b58\u7a7a\u95f4\u8981\u7528free\u91ca\u653e\uff0c\u800cnew\u7533\u8bf7\u7684\u5185\u5b58\u7a7a\u95f4\u8981\u7528delete\u91ca\u653e\uff0c\u4e0d\u8981\u6df7\u7528\u3002\u56e0\u4e3a\u4e24\u8005\u5b9e\u73b0\u7684\u673a\u7406\u4e0d\u540c\u3002", "\n\u9762\u8bd5\u98986\uff1a\u5199\u4e00\u4e2a\u201c\u6807\u51c6\u201d\u5b8fMIN #define min(a,b)((a)<=(b)?(a):(b))", "\n\u6ce8\u610f\uff1a\u5728\u8c03\u7528\u65f6\u4e00\u5b9a\u8981\u6ce8\u610f\u8fd9\u4e2a\u5b8f\u5b9a\u4e49\u7684\u526f\u4f5c\u7528\uff0c\u5982\u4e0b\u8c03\u7528\uff1a ((++*p)<=(x)?(++*p):(x)\u3002", "\np\u6307\u9488\u5c31\u81ea\u52a0\u4e86\u4e24\u6b21\uff0c\u8fdd\u80cc\u4e86MIN\u7684\u672c\u610f\u3002", "\n3", "\n\u9762\u8bd5\u98987\uff1a\u4e00\u4e2a\u6307\u9488\u53ef\u4ee5\u662fvolatile\u5417", "\n\u53ef\u4ee5\uff0c\u56e0\u4e3a\u6307\u9488\u548c\u666e\u901a\u53d8\u91cf\u4e00\u6837\uff0c\u6709\u65f6\u4e5f\u6709\u53d8\u5316\u7a0b\u5e8f\u7684\u4e0d\u53ef\u63a7\u6027\u3002\u5e38\u89c1\u4f8b\uff1a\u5b50\u4e2d\u65ad\u670d\u52a1\u5b50\u7a0b\u5e8f\u4fee\u6539\u4e00\u4e2a\u6307\u5411\u4e00\u4e2abuffer\u7684\u6307\u9488\u65f6\uff0c\u5fc5\u987b\u7528volatile\u6765\u4fee\u9970\u8fd9\u4e2a\u6307\u9488\u3002", "\n\u8bf4\u660e\uff1a\u6307\u9488\u662f\u4e00\u79cd\u666e\u901a\u7684\u53d8\u91cf\uff0c\u4ece\u8bbf\u95ee\u4e0a\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c\u4e8e\u5176\u4ed6\u53d8\u91cf\u7684\u7279\u6027\u3002\u5176\u4fdd\u5b58\u7684\u6570\u503c\u662f\u4e2a\u6574\u578b\u6570\u636e\uff0c\u548c\u6574\u578b\u53d8\u91cf\u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u4e2a\u6574\u578b\u6570\u636e\u6307\u5411\u7684\u662f\u4e00\u6bb5\u5185\u5b58\u5730\u5740\u3002", "\n\u9762\u8bd5\u98988\uff1aa\u548c&a\u6709\u4ec0\u4e48\u533a\u522b", "\n\u8bf7\u5199\u51fa\u4ee5\u4e0b\u4ee3\u7801\u7684\u6253\u5370\u7ed3\u679c\uff0c\u4e3b\u8981\u76ee\u7684\u662f\u8003\u5bdfa\u548c&a\u7684\u533a\u522b\u3002 #include<stdio.h> void main( void ) { int a[5]={1,2,3,4,5}; int *ptr=(int *)(&a+1); printf(\u201c%d,%d\u201d,*(a+1),*(ptr-1)); return; }", "\n\u8f93\u51fa\u7ed3\u679c\uff1a2\uff0c5\u3002", "\n\u6ce8\u610f\uff1a\u6570\u7ec4\u540da\u53ef\u4ee5\u4f5c\u6570\u7ec4\u7684\u9996\u5730\u5740\uff0c\u800c&a\u662f\u6570\u7ec4\u7684\u6307\u9488\u3002\u601d\u8003\uff0c\u5c06\u539f\u5f0f\u7684int *ptr=(int *)(&a+1);\u6539\u4e3aint *ptr=(int *)(a+1);\u65f6\u8f93\u51fa\u7ed3\u679c\u5c06\u662f\u4ec0\u4e48\u5462\uff1f", "\n\u9762\u8bd5\u98989\uff1a\u7b80\u8ff0C\u3001C++\u7a0b\u5e8f\u7f16\u8bd1\u7684\u5185\u5b58\u5206\u914d\u60c5\u51b5", "\nC\u3001C++\u4e2d\u5185\u5b58\u5206\u914d\u65b9\u5f0f\u53ef\u4ee5\u5206\u4e3a\u4e09\u79cd\uff1a", "\n\uff081\uff09\u4ece\u9759\u6001\u5b58\u50a8\u533a\u57df\u5206\u914d\uff1a", "\n\u5185\u5b58\u5728\u7a0b\u5e8f\u7f16\u8bd1\u65f6\u5c31\u5df2\u7ecf\u5206\u914d\u597d\uff0c\u8fd9\u5757\u5185\u5b58\u5728\u7a0b\u5e8f\u7684\u6574\u4e2a\u8fd0\u884c\u671f\u95f4\u90fd\u5b58\u5728\u3002\u901f\u5ea6\u5feb\u3001\u4e0d\u5bb9\u6613\u51fa\u9519\uff0c\u56e0\u4e3a\u6709\u7cfb\u7edf\u4f1a\u5584\u540e\u3002\u4f8b\u5982\u5168\u5c40\u53d8\u91cf\uff0cstatic\u53d8\u91cf\u7b49\u3002", "\n\uff082\uff09\u5728\u6808\u4e0a\u5206\u914d\uff1a", "\n\u5728\u6267\u884c\u51fd\u6570\u65f6\uff0c\u51fd\u6570\u5185\u5c40\u90e8\u53d8\u91cf\u7684\u5b58\u50a8\u5355\u5143\u90fd\u5728\u6808\u4e0a\u521b\u5efa\uff0c\u51fd\u6570\u6267\u884c\u7ed3\u675f\u65f6\u8fd9\u4e9b\u5b58\u50a8\u5355\u5143\u81ea\u52a8\u88ab\u91ca\u653e\u3002\u6808\u5185\u5b58\u5206\u914d\u8fd0\u7b97\u5185\u7f6e\u4e8e\u5904\u7406\u5668\u7684\u6307\u4ee4\u96c6\u4e2d\uff0c\u6548\u7387\u5f88\u9ad8\uff0c\u4f46\u662f\u5206\u914d\u7684\u5185\u5b58\u5bb9\u91cf\u6709\u9650\u3002", "\n\uff083\uff09\u4ece\u5806\u4e0a\u5206\u914d\uff1a", "\n\u5373\u52a8\u6001\u5185\u5b58\u5206\u914d\u3002\u7a0b\u5e8f\u5728\u8fd0\u884c\u7684\u65f6\u5019\u7528malloc\u6216new\u7533\u8bf7\u4efb\u610f\u5927\u5c0f\u7684\u5185\u5b58\uff0c\u7a0b\u5e8f\u5458\u81ea\u5df1\u8d1f\u8d23\u5728\u4f55\u65f6\u7528free\u6216delete\u91ca\u653e\u5185\u5b58\u3002\u52a8\u6001\u5185\u5b58\u7684\u751f\u5b58\u671f\u7531\u7a0b\u5e8f\u5458\u51b3\u5b9a\uff0c\u4f7f\u7528\u975e\u5e38\u7075\u6d3b\u3002\u5982\u679c\u5728\u5806\u4e0a\u5206\u914d\u4e86\u7a7a\u95f4\uff0c\u5c31\u6709\u8d23\u4efb\u56de\u6536\u5b83\uff0c\u5426\u5219\u8fd0\u884c\u7684\u7a0b\u5e8f\u4f1a\u51fa\u73b0\u5185\u5b58\u6cc4\u6f0f\uff0c\u53e6\u5916\u9891\u7e41\u5730\u5206\u914d\u548c\u91ca\u653e\u4e0d\u540c\u5927\u5c0f\u7684\u5806\u7a7a\u95f4\u5c06\u4f1a\u4ea7\u751f\u5806\u5185\u788e\u5757\u3002", "\n\u4e00\u4e2aC\u3001C++\u7a0b\u5e8f\u7f16\u8bd1\u65f6\u5185\u5b58\u5206\u4e3a5\u5927\u5b58\u50a8\u533a\uff1a\u5806\u533a\u3001\u6808\u533a\u3001\u5168\u5c40\u533a\u3001\u6587\u5b57\u5e38\u91cf\u533a\u3001\u7a0b\u5e8f\u4ee3\u7801\u533a\u3002", "\n4", "\n\u9762\u8bd5\u989810\uff1a\u7b80\u8ff0strcpy\u3001sprintf\u4e0ememcpy\u7684\u533a\u522b", "\n\u4e09\u8005\u4e3b\u8981\u6709\u4ee5\u4e0b\u4e0d\u540c\u4e4b\u5904\uff1a", "\n\uff081\uff09\u64cd\u4f5c\u5bf9\u8c61\u4e0d\u540c\uff0cstrcpy\u7684\u4e24\u4e2a\u64cd\u4f5c\u5bf9\u8c61\u5747\u4e3a\u5b57\u7b26\u4e32\uff0csprintf\u7684\u64cd\u4f5c\u6e90\u5bf9\u8c61\u53ef\u4ee5\u662f\u591a\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u76ee\u7684\u64cd\u4f5c\u5bf9\u8c61\u662f\u5b57\u7b26\u4e32\uff0cmemcpy \u7684\u4e24\u4e2a\u5bf9\u8c61\u5c31\u662f\u4e24\u4e2a\u4efb\u610f\u53ef\u64cd\u4f5c\u7684\u5185\u5b58\u5730\u5740\uff0c\u5e76\u4e0d\u9650\u4e8e\u4f55\u79cd\u6570\u636e\u7c7b\u578b\u3002", "\n\uff082\uff09\u6267\u884c\u6548\u7387\u4e0d\u540c\uff0cmemcpy\u6700\u9ad8\uff0cstrcpy\u6b21\u4e4b\uff0csprintf\u7684\u6548\u7387\u6700\u4f4e\u3002", "\n\uff083\uff09\u5b9e\u73b0\u529f\u80fd\u4e0d\u540c\uff0cstrcpy\u4e3b\u8981\u5b9e\u73b0\u5b57\u7b26\u4e32\u53d8\u91cf\u95f4\u7684\u62f7\u8d1d\uff0csprintf\u4e3b\u8981\u5b9e\u73b0\u5176\u4ed6\u6570\u636e\u7c7b\u578b\u683c\u5f0f\u5230\u5b57\u7b26\u4e32\u7684\u8f6c\u5316\uff0cmemcpy\u4e3b\u8981\u662f\u5185\u5b58\u5757\u95f4\u7684\u62f7\u8d1d\u3002", "\n\u8bf4\u660e\uff1astrcpy\u3001sprintf\u4e0ememcpy\u90fd\u53ef\u4ee5\u5b9e\u73b0\u62f7\u8d1d\u7684\u529f\u80fd\uff0c\u4f46\u662f\u9488\u5bf9\u7684\u5bf9\u8c61\u4e0d\u540c\uff0c\u6839\u636e\u5b9e\u9645\u9700\u6c42\uff0c\u6765\u9009\u62e9\u5408\u9002\u7684\u51fd\u6570\u5b9e\u73b0\u62f7\u8d1d\u529f\u80fd\u3002", "\n\u9762\u8bd5\u989811\uff1a\u8bbe\u7f6e\u5730\u5740\u4e3a0x67a9\u7684\u6574\u578b\u53d8\u91cf\u7684\u503c\u4e3a0xaa66 int *ptr; ptr = (int *)0x67a9; *ptr = 0xaa66;", "\n\u8bf4\u660e\uff1a\u8fd9\u9053\u9898\u5c31\u662f\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u7684\u5178\u578b\u4f8b\u5b50\uff0c\u65e0\u8bba\u5728\u4ec0\u4e48\u5e73\u53f0\u5730\u5740\u957f\u5ea6\u548c\u6574\u578b\u6570\u636e\u7684\u957f\u5ea6\u662f\u4e00\u6837\u7684\uff0c\u5373\u4e00\u4e2a\u6574\u578b\u6570\u636e\u53ef\u4ee5\u5f3a\u5236\u8f6c\u6362\u6210\u5730\u5740\u6307\u9488\u7c7b\u578b\uff0c\u53ea\u8981\u6709\u610f\u4e49\u5373\u53ef\u3002", "\n\u9762\u8bd5\u989812\uff1a\u9762\u5411\u5bf9\u8c61\u7684\u4e09\u5927\u7279\u5f81", "\n\u9762\u5411\u5bf9\u8c61\u7684\u4e09\u5927\u7279\u5f81\u662f\u5c01\u88c5\u6027\u3001\u7ee7\u627f\u6027\u548c\u591a\u6001\u6027\uff1a", "\n\uf071 \u5c01\u88c5\u6027\uff1a\u5c06\u5ba2\u89c2\u4e8b\u7269\u62bd\u8c61\u6210\u7c7b\uff0c\u6bcf\u4e2a\u7c7b\u5bf9\u81ea\u8eab\u7684\u6570\u636e\u548c\u65b9\u6cd5\u5b9e\u884cprotection\uff08private\uff0c protected\uff0cpublic\uff09\u3002", "\n\uf071 \u7ee7\u627f\u6027\uff1a\u5e7f\u4e49\u7684\u7ee7\u627f\u6709\u4e09\u79cd\u5b9e\u73b0\u5f62\u5f0f\uff1a\u5b9e\u73b0\u7ee7\u627f\uff08\u4f7f\u7528\u57fa\u7c7b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u800c\u65e0\u9700\u989d\u5916\u7f16\u7801\u7684\u80fd\u529b)\u3001\u53ef\u89c6\u7ee7\u627f(\u5b50\u7a97\u4f53\u4f7f\u7528\u7236\u7a97\u4f53\u7684\u5916\u89c2\u548c\u5b9e\u73b0\u4ee3\u7801)\u3001\u63a5\u53e3\u7ee7\u627f(\u4ec5\u4f7f\u7528\u5c5e\u6027\u548c\u65b9\u6cd5,\u5b9e\u73b0\u6ede\u540e\u5230\u5b50\u7c7b\u5b9e\u73b0)\u3002", "\n\uf071 \u591a\u6001\u6027\uff1a\u662f\u5c06\u7236\u7c7b\u5bf9\u8c61\u8bbe\u7f6e\u6210\u4e3a\u548c\u4e00\u4e2a\u6216\u66f4\u591a\u5b83\u7684\u5b50\u5bf9\u8c61\u76f8\u7b49\u7684\u6280\u672f\u3002\u7528\u5b50\u7c7b\u5bf9\u8c61\u7ed9\u7236\u7c7b\u5bf9\u8c61\u8d4b\u503c\u4e4b\u540e\uff0c\u7236\u7c7b\u5bf9\u8c61\u5c31\u53ef\u4ee5\u6839\u636e\u5f53\u524d\u8d4b\u503c\u7ed9\u5b83\u7684\u5b50\u5bf9\u8c61\u7684\u7279\u6027\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u8fd0\u4f5c\u3002", "\n\u8bf4\u660e\uff1a\u9762\u5411\u5bf9\u8c61\u7684\u4e09\u4e2a\u7279\u5f81\u662f\u5b9e\u73b0\u9762\u5411\u5bf9\u8c61\u6280\u672f\u7684\u5173\u952e\uff0c\u6bcf\u4e00\u4e2a\u7279\u5f81\u7684\u76f8\u5173\u6280\u672f\u90fd\u975e\u5e38\u7684\u590d\u6742\uff0c\u7a0b\u5e8f\u5458\u5e94\u8be5\u591a\u770b\u3001\u591a\u7ec3\u3002", "\n\u9762\u8bd5\u989813\uff1aC++\u7684\u7a7a\u7c7b\u6709\u54ea\u4e9b\u6210\u5458\u51fd\u6570", "\n\uf071 \u7f3a\u7701\u6784\u9020\u51fd\u6570\u3002", "\n\uf071 \u7f3a\u7701\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002", "\n\uf071 \u7f3a\u7701\u6790\u6784\u51fd\u6570\u3002", "\n\uf071 \u7f3a\u7701\u8d4b\u503c\u8fd0\u7b97\u7b26\u3002", "\n\uf071 \u7f3a\u7701\u53d6\u5740\u8fd0\u7b97\u7b26\u3002", "\n\uf071 \u7f3a\u7701\u53d6\u5740\u8fd0\u7b97\u7b26 const\u3002", "\n\u6ce8\u610f\uff1a\u6709\u4e9b\u4e66\u4e0a\u53ea\u662f\u7b80\u5355\u7684\u4ecb\u7ecd\u4e86\u524d\u56db\u4e2a\u51fd\u6570\u3002\u6ca1\u6709\u63d0\u53ca\u540e\u9762\u8fd9\u4e24\u4e2a\u51fd\u6570\u3002\u4f46\u540e\u9762\u8fd9\u4e24\u4e2a\u51fd\u6570\u4e5f\u662f\u7a7a\u7c7b\u7684\u9ed8\u8ba4\u51fd\u6570\u3002\u53e6\u5916\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u53ea\u6709\u5f53\u5b9e\u9645\u4f7f\u7528\u8fd9\u4e9b\u51fd\u6570\u7684\u65f6\u5019\uff0c\u7f16\u8bd1\u5668\u624d\u4f1a\u53bb\u5b9a\u4e49\u5b83\u4eec\u3002", "\n5", "\n\u9762\u8bd5\u989814\uff1a\u8c08\u8c08\u4f60\u5bf9\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u8d4b\u503c\u8fd0\u7b97\u7b26\u7684\u8ba4\u8bc6", "\n\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u8d4b\u503c\u8fd0\u7b97\u7b26\u91cd\u8f7d\u6709\u4ee5\u4e0b\u4e24\u4e2a\u4e0d\u540c\u4e4b\u5904\uff1a", "\n\uff081\uff09\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u751f\u6210\u65b0\u7684\u7c7b\u5bf9\u8c61\uff0c\u800c\u8d4b\u503c\u8fd0\u7b97\u7b26\u4e0d\u80fd\u3002", "\n\uff082\uff09\u7531\u4e8e\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u662f\u76f4\u63a5\u6784\u9020\u4e00\u4e2a\u65b0\u7684\u7c7b\u5bf9\u8c61\uff0c\u6240\u4ee5\u5728\u521d\u59cb\u5316\u8fd9\u4e2a\u5bf9\u8c61\u4e4b\u524d\u4e0d\u7528\u68c0\u9a8c\u6e90\u5bf9\u8c61\u662f\u5426\u548c\u65b0\u5efa\u5bf9\u8c61\u76f8\u540c\u3002\u800c\u8d4b\u503c\u8fd0\u7b97\u7b26\u5219\u9700\u8981\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u53e6\u5916\u8d4b\u503c\u8fd0\u7b97\u4e2d\u5982\u679c\u539f\u6765\u7684\u5bf9\u8c61\u4e2d\u6709\u5185\u5b58\u5206\u914d\u8981\u5148\u628a\u5185\u5b58\u91ca\u653e\u6389", "\n\u6ce8\u610f\uff1a\u5f53\u6709\u7c7b\u4e2d\u6709\u6307\u9488\u7c7b\u578b\u7684\u6210\u5458\u53d8\u91cf\u65f6\uff0c\u4e00\u5b9a\u8981\u91cd\u5199\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u8d4b\u503c\u8fd0\u7b97\u7b26\uff0c\u4e0d\u8981\u4f7f\u7528\u9ed8\u8ba4\u7684\u3002", "\n\u9762\u8bd5\u989815\uff1a\u7528C++\u8bbe\u8ba1\u4e00\u4e2a\u4e0d\u80fd\u88ab\u7ee7\u627f\u7684\u7c7b template <typename T> class A { friend T; private: A() {} ~A() {} }; class B : virtual public A<B> { public: B() {} ~B() {} }; class C : virtual public B { public: C() {} ~C() {} }; void main( void ) { B b; //C c; return; }", "\n\u6ce8\u610f\uff1a\u6784\u9020\u51fd\u6570\u662f\u7ee7\u627f\u5b9e\u73b0\u7684\u5173\u952e\uff0c\u6bcf\u6b21\u5b50\u7c7b\u5bf9\u8c61\u6784\u9020\u65f6\uff0c\u9996\u5148\u8c03\u7528\u7684\u662f\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u7136\u540e\u624d\u662f\u81ea\u5df1\u7684\u3002", "\n\u9762\u8bd5\u989816\uff1a\u8bbf\u95ee\u57fa\u7c7b\u7684\u79c1\u6709\u865a\u51fd\u6570", "\n\u5199\u51fa\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\uff1a #include <iostream.h> class A", "\n6", "\n{ virtual void g() { cout << \u201cA::g\u201d << endl; } private: virtual void f() { cout << \u201cA::f\u201d << endl; } }; class B : public A { void g() { cout << \u201cB::g\u201d << endl; } virtual void h() { cout << \u201cB::h\u201d << endl; } }; typedef void( *Fun )( void ); void main() { B b; Fun pFun; for(int i = 0 ; i < 3; i++) { pFun = ( Fun )*( ( int* ) * ( int* )( &b ) + i ); pFun(); } }", "\n\u8f93\u51fa\u7ed3\u679c\uff1a B::g A::f B::h", "\n\u6ce8\u610f\uff1a\u672c\u9898\u4e3b\u8981\u8003\u5bdf\u4e86\u9762\u8bd5\u8005\u5bf9\u865a\u51fd\u6570\u7684\u7406\u89e3\u7a0b\u5ea6\u3002\u4e00\u4e2a\u5bf9\u865a\u51fd\u6570\u4e0d\u4e86\u89e3\u7684\u4eba\u5f88\u96be\u6b63\u786e\u7684\u505a\u51fa\u672c\u9898\u3002\u5728\u5b66\u4e60\u9762\u5411\u5bf9\u8c61\u7684\u591a\u6001\u6027\u65f6\u4e00\u5b9a\u8981\u6df1\u523b\u7406\u89e3\u865a\u51fd\u6570\u8868\u7684\u5de5\u4f5c\u539f\u7406\u3002", "\n\u9762\u8bd5\u989817\uff1a\u7b80\u8ff0\u7c7b\u6210\u5458\u51fd\u6570\u7684\u91cd\u5199\u3001\u91cd\u8f7d\u548c\u9690\u85cf\u7684\u533a\u522b", "\n\uff081\uff09\u91cd\u5199\u548c\u91cd\u8f7d\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u70b9\u4e0d\u540c\u3002", "\n\uf071 \u8303\u56f4\u7684\u533a\u522b\uff1a\u88ab\u91cd\u5199\u7684\u548c\u91cd\u5199\u7684\u51fd\u6570\u5728\u4e24\u4e2a\u7c7b\u4e2d\uff0c\u800c\u91cd\u8f7d\u548c\u88ab\u91cd\u8f7d\u7684\u51fd\u6570\u5728\u540c\u4e00\u4e2a\u7c7b\u4e2d\u3002", "\n\uf071 \u53c2\u6570\u7684\u533a\u522b\uff1a\u88ab\u91cd\u5199\u51fd\u6570\u548c\u91cd\u5199\u51fd\u6570\u7684\u53c2\u6570\u5217\u8868\u4e00\u5b9a\u76f8\u540c\uff0c\u800c\u88ab\u91cd\u8f7d\u51fd\u6570\u548c\u91cd\u8f7d\u51fd\u6570\u7684\u53c2\u6570\u5217\u8868\u4e00\u5b9a\u4e0d\u540c\u3002", "\n\uf071 virtual\u7684\u533a\u522b\uff1a\u91cd\u5199\u7684\u57fa\u7c7b\u4e2d\u88ab\u91cd\u5199\u7684\u51fd\u6570\u5fc5\u987b\u8981\u6709virtual\u4fee\u9970\uff0c\u800c\u91cd\u8f7d\u51fd\u6570\u548c\u88ab\u91cd\u8f7d\u51fd\u6570\u53ef\u4ee5\u88ab", "\n7", "\nvirtual\u4fee\u9970\uff0c\u4e5f\u53ef\u4ee5\u6ca1\u6709\u3002", "\n\uff082\uff09\u9690\u85cf\u548c\u91cd\u5199\u3001\u91cd\u8f7d\u6709\u4ee5\u4e0b\u51e0\u70b9\u4e0d\u540c\u3002", "\n\uf071 \u4e0e\u91cd\u8f7d\u7684\u8303\u56f4\u4e0d\u540c\uff1a\u548c\u91cd\u5199\u4e00\u6837\uff0c\u9690\u85cf\u51fd\u6570\u548c\u88ab\u9690\u85cf\u51fd\u6570\u4e0d\u5728\u540c\u4e00\u4e2a\u7c7b\u4e2d\u3002", "\n\uf071 \u53c2\u6570\u7684\u533a\u522b\uff1a\u9690\u85cf\u51fd\u6570\u548c\u88ab\u9690\u85cf\u7684\u51fd\u6570\u7684\u53c2\u6570\u5217\u8868\u53ef\u4ee5\u76f8\u540c\uff0c\u4e5f\u53ef\u4e0d\u540c\uff0c\u4f46\u662f\u51fd\u6570\u540d\u80af\u5b9a\u8981\u76f8\u540c\u3002\u5f53\u53c2\u6570\u4e0d\u76f8\u540c\u65f6\uff0c\u65e0\u8bba\u57fa\u7c7b\u4e2d\u7684\u53c2\u6570\u662f\u5426\u88abvirtual\u4fee\u9970\uff0c\u57fa\u7c7b\u7684\u51fd\u6570\u90fd\u662f\u88ab\u9690\u85cf\uff0c\u800c\u4e0d\u662f\u88ab\u91cd\u5199\u3002", "\n\u8bf4\u660e\uff1a\u867d\u7136\u91cd\u8f7d\u548c\u8986\u76d6\u90fd\u662f\u5b9e\u73b0\u591a\u6001\u7684\u57fa\u7840\uff0c\u4f46\u662f\u4e24\u8005\u5b9e\u73b0\u7684\u6280\u672f\u5b8c\u5168\u4e0d\u76f8\u540c\uff0c\u8fbe\u5230\u7684\u76ee\u7684\u4e5f\u662f\u5b8c\u5168\u4e0d\u540c\u7684\uff0c\u8986\u76d6\u662f\u52a8\u6001\u6001\u7ed1\u5b9a\u7684\u591a\u6001\uff0c\u800c\u91cd\u8f7d\u662f\u9759\u6001\u7ed1\u5b9a\u7684\u591a\u6001\u3002", "\n\u9762\u8bd5\u989818\uff1a\u7b80\u8ff0\u591a\u6001\u5b9e\u73b0\u7684\u539f\u7406", "\n\u7f16\u8bd1\u5668\u53d1\u73b0\u4e00\u4e2a\u7c7b\u4e2d\u6709\u865a\u51fd\u6570\uff0c\u4fbf\u4f1a\u7acb\u5373\u4e3a\u6b64\u7c7b\u751f\u6210\u865a\u51fd\u6570\u8868 vtable\u3002\u865a\u51fd\u6570\u8868\u7684\u5404\u8868\u9879\u4e3a\u6307\u5411\u5bf9\u5e94\u865a\u51fd\u6570\u7684\u6307\u9488\u3002\u7f16\u8bd1\u5668\u8fd8\u4f1a\u5728\u6b64\u7c7b\u4e2d\u9690\u542b\u63d2\u5165\u4e00\u4e2a\u6307\u9488vptr\uff08\u5bf9vc\u7f16\u8bd1\u5668\u6765\u8bf4\uff0c\u5b83\u63d2\u5728\u7c7b\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\uff09\u6307\u5411\u865a\u51fd\u6570\u8868\u3002\u8c03\u7528\u6b64\u7c7b\u7684\u6784\u9020\u51fd\u6570\u65f6\uff0c\u5728\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d\uff0c\u7f16\u8bd1\u5668\u4f1a\u9690\u542b\u6267\u884cvptr\u4e0evtable\u7684\u5173\u8054\u4ee3\u7801\uff0c\u5c06vptr\u6307\u5411\u5bf9\u5e94\u7684vtable\uff0c\u5c06\u7c7b\u4e0e\u6b64\u7c7b\u7684vtable\u8054\u7cfb\u4e86\u8d77\u6765\u3002\u53e6\u5916\u5728\u8c03\u7528\u7c7b\u7684\u6784\u9020\u51fd\u6570\u65f6\uff0c\u6307\u5411\u57fa\u7840\u7c7b\u7684\u6307\u9488\u6b64\u65f6\u5df2\u7ecf\u53d8\u6210\u6307\u5411\u5177\u4f53\u7684\u7c7b\u7684this\u6307\u9488\uff0c\u8fd9\u6837\u4f9d\u9760\u6b64this\u6307\u9488\u5373\u53ef\u5f97\u5230\u6b63\u786e\u7684vtable\uff0c\u3002\u5982\u6b64\u624d\u80fd\u771f\u6b63\u4e0e\u51fd\u6570\u4f53\u8fdb\u884c\u8fde\u63a5\uff0c\u8fd9\u5c31\u662f\u52a8\u6001\u8054\u7f16\uff0c\u5b9e\u73b0\u591a\u6001\u7684\u57fa\u672c\u539f\u7406\u3002", "\n\u6ce8\u610f\uff1a\u4e00\u5b9a\u8981\u533a\u5206\u865a\u51fd\u6570\uff0c\u7eaf\u865a\u51fd\u6570\u3001\u865a\u62df\u7ee7\u627f\u7684\u5173\u7cfb\u548c\u533a\u522b\u3002\u7262\u8bb0\u865a\u51fd\u6570\u5b9e\u73b0\u539f\u7406\uff0c\u56e0\u4e3a\u591a\u6001C++\u9762\u8bd5\u7684\u91cd\u8981\u8003\u70b9\u4e4b\u4e00\uff0c\u800c\u865a\u51fd\u6570\u662f\u5b9e\u73b0\u591a\u6001\u7684\u57fa\u7840\u3002", "\n\u9762\u8bd5\u989819\uff1a\u94fe\u8868\u548c\u6570\u7ec4\u6709\u4ec0\u4e48\u533a\u522b", "\n\u6570\u7ec4\u548c\u94fe\u8868\u6709\u4ee5\u4e0b\u51e0\u70b9\u4e0d\u540c\uff1a", "\n\uff081\uff09\u5b58\u50a8\u5f62\u5f0f\uff1a\u6570\u7ec4\u662f\u4e00\u5757\u8fde\u7eed\u7684\u7a7a\u95f4\uff0c\u58f0\u660e\u65f6\u5c31\u8981\u786e\u5b9a\u957f\u5ea6\u3002\u94fe\u8868\u662f\u4e00\u5757\u53ef\u4e0d\u8fde\u7eed\u7684\u52a8\u6001\u7a7a\u95f4\uff0c\u957f\u5ea6\u53ef\u53d8\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u8981\u4fdd\u5b58\u76f8\u90bb\u7ed3\u70b9\u6307\u9488\u3002", "\n\uff082\uff09\u6570\u636e\u67e5\u627e\uff1a\u6570\u7ec4\u7684\u7ebf\u6027\u67e5\u627e\u901f\u5ea6\u5feb\uff0c\u67e5\u627e\u64cd\u4f5c\u76f4\u63a5\u4f7f\u7528\u504f\u79fb\u5730\u5740\u3002\u94fe\u8868\u9700\u8981\u6309\u987a\u5e8f\u68c0\u7d22\u7ed3\u70b9\uff0c\u6548\u7387\u4f4e\u3002", "\n\uff083\uff09\u6570\u636e\u63d2\u5165\u6216\u5220\u9664\uff1a\u94fe\u8868\u53ef\u4ee5\u5feb\u901f\u63d2\u5165\u548c\u5220\u9664\u7ed3\u70b9\uff0c\u800c\u6570\u7ec4\u5219\u53ef\u80fd\u9700\u8981\u5927\u91cf\u6570\u636e\u79fb\u52a8\u3002", "\n\uff084\uff09\u8d8a\u754c\u95ee\u9898\uff1a\u94fe\u8868\u4e0d\u5b58\u5728\u8d8a\u754c\u95ee\u9898\uff0c\u6570\u7ec4\u6709\u8d8a\u754c\u95ee\u9898\u3002", "\n\u8bf4\u660e\uff1a\u5728\u9009\u62e9\u6570\u7ec4\u6216\u94fe\u8868\u6570\u636e\u7ed3\u6784\u65f6\uff0c\u4e00\u5b9a\u8981\u6839\u636e\u5b9e\u9645\u9700\u8981\u8fdb\u884c\u9009\u62e9\u3002\u6570\u7ec4\u4fbf\u4e8e\u67e5\u8be2\uff0c\u94fe\u8868\u4fbf\u4e8e\u63d2\u5165\u5220\u9664\u3002\u6570\u7ec4\u8282\u7701\u7a7a\u95f4\u4f46\u662f\u957f\u5ea6\u56fa\u5b9a\uff0c\u94fe\u8868\u867d\u7136\u53d8\u957f\u4f46\u662f\u5360\u4e86\u66f4\u591a\u7684\u5b58\u50a8\u7a7a\u95f4\u3002", "\n\u9762\u8bd5\u989820\uff1a\u600e\u6837\u628a\u4e00\u4e2a\u5355\u94fe\u8868\u53cd\u5e8f", "\n\uff081\uff09\u53cd\u8f6c\u4e00\u4e2a\u94fe\u8868\u3002\u5faa\u73af\u7b97\u6cd5\u3002 List reverse(List n) { if(!n) //\u5224\u65ad\u94fe\u8868\u662f\u5426\u4e3a\u7a7a\uff0c\u4e3a\u7a7a\u5373\u9000\u51fa\u3002 { return n; } list cur = n.next; //\u4fdd\u5b58\u5934\u7ed3\u70b9\u7684\u4e0b\u4e2a\u7ed3\u70b9 list pre = n; //\u4fdd\u5b58\u5934\u7ed3\u70b9 list tmp;", "\n8", "\npre.next = null; //\u5934\u7ed3\u70b9\u7684\u6307\u9488\u6307\u7a7a\uff0c\u8f6c\u6362\u540e\u53d8\u5c3e\u7ed3\u70b9 while ( NULL != cur.next ) //\u5faa\u73af\u76f4\u5230cur.next\u4e3a\u7a7a { tmp = cur; //\u5b9e\u73b0\u5982\u56fe10.3\u2014\u56fe10.5\u6240\u793a tmp.next = pre pre = tmp; cur = cur.next; } return tmp; //f\u8fd4\u56de\u5934\u6307\u9488 }", "\n\uff082\uff09\u53cd\u8f6c\u4e00\u4e2a\u94fe\u8868\u3002\u9012\u5f52\u7b97\u6cd5\u3002 List *reverse( List *oldList, List *newHead = NULL ) { List *next = oldList-> next; //\u8bb0\u5f55\u4e0a\u6b21\u7ffb\u8f6c\u540e\u7684\u94fe\u8868 oldList-> next = newHead; //\u5c06\u5f53\u524d\u7ed3\u70b9\u63d2\u5165\u5230\u7ffb\u8f6c\u540e\u94fe\u8868\u7684\u5f00\u5934 newHead = oldList; //\u9012\u5f52\u5904\u7406\u5269\u4f59\u7684\u94fe\u8868 return ( next==NULL )? newHead: reverse( t, newHead ); }", "\n\u8bf4\u660e\uff1a\u5faa\u73af\u7b97\u6cd5\u5c31\u662f\u56fe10.2\u2014\u56fe10.5\u7684\u79fb\u52a8\u8fc7\u7a0b\uff0c\u6bd4\u8f83\u597d\u7406\u89e3\u548c\u60f3\u5230\u3002\u9012\u5f52\u7b97\u6cd5\u7684\u8bbe\u8ba1\u867d\u6709\u4e00\u70b9\u96be\u5ea6\uff0c\u4f46\u662f\u7406\u89e3\u4e86\u5faa\u73af\u7b97\u6cd5\uff0c\u518d\u8bbe\u8ba1\u9012\u5f52\u7b97\u6cd5\u5c31\u7b80\u5355\u591a\u4e86\u3002", "\n\u9762\u8bd5\u9898\u00a021\uff1a\u7b80\u8ff0\u961f\u5217\u548c\u6808\u7684\u5f02\u540c", "\n\u961f\u5217\u548c\u6808\u90fd\u662f\u7ebf\u6027\u5b58\u50a8\u7ed3\u6784\uff0c\u4f46\u662f\u4e24\u8005\u7684\u63d2\u5165\u548c\u5220\u9664\u6570\u636e\u7684\u64cd\u4f5c\u4e0d\u540c\uff0c\u961f\u5217\u662f\u201c\u5148\u8fdb\u5148\u51fa\u201d\uff0c\u6808\u662f\u201c\u540e\u8fdb\u5148\u51fa\u201d\u3002", "\n\u6ce8\u610f\uff1a\u533a\u522b\u6808\u533a\u548c\u5806\u533a\u3002\u5806\u533a\u7684\u5b58\u53d6\u662f\u201c\u987a\u5e8f\u968f\u610f\u201d\uff0c\u800c\u6808\u533a\u662f\u201c\u540e\u8fdb\u5148\u51fa\u201d\u3002\u6808\u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u5206\u914d\u91ca\u653e \uff0c\u5b58\u653e\u51fd\u6570\u7684\u53c2\u6570\u503c\uff0c\u5c40\u90e8\u53d8\u91cf\u7684\u503c\u7b49\u3002\u5176\u64cd\u4f5c\u65b9\u5f0f\u7c7b\u4f3c\u4e8e\u6570\u636e\u7ed3\u6784\u4e2d\u7684\u6808\u3002\u5806\u4e00\u822c\u7531\u7a0b\u5e8f\u5458\u5206\u914d\u91ca\u653e\uff0c \u82e5\u7a0b\u5e8f\u5458\u4e0d\u91ca\u653e\uff0c\u7a0b\u5e8f\u7ed3\u675f\u65f6\u53ef\u80fd\u7531OS\u56de\u6536\u3002\u5206\u914d\u65b9\u5f0f\u7c7b\u4f3c\u4e8e\u94fe\u8868\u3002", "\n\u5b83\u4e0e\u672c\u9898\u4e2d\u7684\u5806\u548c\u6808\u662f\u4e24\u56de\u4e8b\u3002\u5806\u6808\u53ea\u662f\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u800c\u5806\u533a\u548c\u6808\u533a\u662f\u7a0b\u5e8f\u7684\u4e0d\u540c\u5185\u5b58\u5b58\u50a8\u533a\u57df\u3002", "\n\u9762\u8bd5\u989822\uff1a\u80fd\u5426\u7528\u4e24\u4e2a\u6808\u5b9e\u73b0\u4e00\u4e2a\u961f\u5217\u7684\u529f\u80fd", "\n\u7ed3\u70b9\u7ed3\u6784\u4f53\uff1a typedef struct node { int data; node *next; }node,*LinkStack;", "\n\u521b\u5efa\u7a7a\u6808\uff1a LinkStack CreateNULLStack( LinkStack &S) { S = (LinkStack)malloc( sizeof( node ) ); //\u7533\u8bf7\u65b0\u7ed3\u70b9 if( NULL == S) { printf(\u201cFail to malloc a new node.\\n\u201d);", "\n9", "\nreturn NULL; } S->data = 0; //\u521d\u59cb\u5316\u65b0\u7ed3\u70b9 S->next = NULL; return S; }", "\n\u6808\u7684\u63d2\u5165\u51fd\u6570\uff1a LinkStack Push( LinkStack &S, int data) { if( NULL == S) //\u68c0\u9a8c\u6808 { printf(\u201cThere no node in stack!\u201d); return NULL; } LinkStack p = NULL; p = (LinkStack)malloc( sizeof( node ) ); //\u7533\u8bf7\u65b0\u7ed3\u70b9 if( NULL == p) { printf(\u201cFail to malloc a new node.\\n\u201d); return S; } if( NULL == S->next) { p->next = NULL; } else { p->next = S->next; } p->data = data; //\u521d\u59cb\u5316\u65b0\u7ed3\u70b9 S->next = p; //\u63d2\u5165\u65b0\u7ed3\u70b9 return S; }", "\n\u51fa\u6808\u51fd\u6570\uff1a node Pop( LinkStack &S) { node temp; temp.data = 0; temp.next = NULL; if( NULL == S) //\u68c0\u9a8c\u6808 { printf(\u201cThere no node in stack!\u201d); return temp; } temp = *S;", "\n10", "\nif( S->next == NULL ) { printf(\u201cThe stack is NULL,can\u2019t pop!\\n\u201d); return temp; } LinkStack p = S ->next; //\u8282\u70b9\u51fa\u6808 S->next = S->next->next; temp = *p; free( p ); p = NULL; return temp; }", "\n\u53cc\u6808\u5b9e\u73b0\u961f\u5217\u7684\u5165\u961f\u51fd\u6570\uff1a LinkStack StackToQueuPush( LinkStack &S, int data) { node n; LinkStack S1 = NULL; CreateNULLStack( S1 ); //\u521b\u5efa\u7a7a\u6808 while( NULL != S->next ) //S\u51fa\u6808\u5165S1 { n = Pop( S ); Push( S1, n.data ); } Push( S1, data ); //\u65b0\u7ed3\u70b9\u5165\u6808 while( NULL != S1->next ) //S1\u51fa\u6808\u5165S { n = Pop( S1 ); Push( S, n.data ); } return S; }", "\n\u8bf4\u660e\uff1a\u7528\u4e24\u4e2a\u6808\u80fd\u591f\u5b9e\u73b0\u4e00\u4e2a\u961f\u5217\u7684\u529f\u80fd\uff0c\u90a3\u7528\u4e24\u4e2a\u961f\u5217\u80fd\u5426\u5b9e\u73b0\u4e00\u4e2a\u961f\u5217\u7684\u529f\u80fd\u5462\uff1f\u7ed3\u679c\u662f\u5426\u5b9a\u7684\uff0c\u56e0\u4e3a\u6808\u662f\u5148\u8fdb\u540e\u51fa\uff0c\u5c06\u4e24\u4e2a\u6808\u8fde\u5728\u4e00\u8d77\uff0c\u5c31\u662f\u5148\u8fdb\u5148\u51fa\u3002\u800c\u961f\u5217\u662f\u73b0\u5148\u8fdb\u5148\u51fa\uff0c\u65e0\u8bba\u591a\u5c11\u4e2a\u8fde\u5728\u4e00\u8d77\u90fd\u662f\u5148\u8fdb\u5148\u51fa\uff0c\u800c\u65e0\u6cd5\u5b9e\u73b0\u5148\u8fdb\u540e\u51fa\u3002", "\n\u9762\u8bd5\u989823\uff1a\u8ba1\u7b97\u4e00\u9897\u4e8c\u53c9\u6811\u7684\u6df1\u5ea6", "\n\u6df1\u5ea6\u7684\u8ba1\u7b97\u51fd\u6570\uff1a int depth(BiTree T) { if(!T) return 0; //\u5224\u65ad\u5f53\u524d\u7ed3\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u7ed3\u70b9", "\n11", "\nint d1= depth(T->lchild); //\u6c42\u5f53\u524d\u7ed3\u70b9\u7684\u5de6\u5b69\u5b50\u6811\u7684\u6df1\u5ea6 int d2= depth(T->rchild); //\u6c42\u5f53\u524d\u7ed3\u70b9\u7684\u53f3\u5b69\u5b50\u6811\u7684\u6df1\u5ea6 return (d1>d2?d1:d2)+1; }", "\n\u6ce8\u610f\uff1a\u6839\u636e\u4e8c\u53c9\u6811\u7684\u7ed3\u6784\u7279\u70b9\uff0c\u5f88\u591a\u7b97\u6cd5\u90fd\u53ef\u4ee5\u7528\u9012\u5f52\u7b97\u6cd5\u6765\u5b9e\u73b0\u3002", "\n\u9762\u8bd5\u989824\uff1a\u7f16\u7801\u5b9e\u73b0\u76f4\u63a5\u63d2\u5165\u6392\u5e8f", "\n\u76f4\u63a5\u63d2\u5165\u6392\u5e8f\u7f16\u7a0b\u5b9e\u73b0\u5982\u4e0b\uff1a #include<iostream.h> void main( void ) { int ARRAY[10] = { 0, 6, 3, 2, 7, 5, 4, 9, 1, 8 }; int i,j; for( i = 0; i < 10; i++) { cout<<ARRAY<<\u201d \u201c; } cout<<endl; for( i = 2; i <= 10; i++ ) //\u5c06ARRAY[2],\u2026,ARRAY[n]\u4f9d\u6b21\u6309\u5e8f\u63d2\u5165 { if(ARRAY < ARRAY[i-1]) //\u5982\u679cARRAY\u5927\u4e8e\u4e00\u5207\u6709\u5e8f\u7684\u6570\u503c\uff0c //ARRAY\u5c06\u4fdd\u6301\u539f\u4f4d\u4e0d\u52a8 { ARRAY[0] = ARRAY; //\u5c06ARRAY[0]\u770b\u505a\u662f\u54e8\u5175,\u662fARRAY\u7684\u526f\u672c j = i \u2013 1; do{ //\u4ece\u53f3\u5411\u5de6\u5728\u6709\u5e8f\u533aARRAY[1\uff0e\uff0ei-1]\u4e2d //\u67e5\u627eARRAY\u7684\u63d2\u5165\u4f4d\u7f6e ARRAY[j+1] = ARRAY[j]; //\u5c06\u6570\u503c\u5927\u4e8eARRAY\u8bb0\u5f55\u540e\u79fb j\u2013 ; }while( ARRAY[0] < ARRAY[j] ); ARRAY[j+1]=ARRAY[0]; //ARRAY\u63d2\u5165\u5230\u6b63\u786e\u7684\u4f4d\u7f6e\u4e0a } } for( i = 0; i < 10; i++) { cout<<ARRAY<<\u201d \u201c; } cout<<endl; }", "\n12", "\n\u6ce8\u610f\uff1a\u6240\u6709\u4e3a\u7b80\u5316\u8fb9\u754c\u6761\u4ef6\u800c\u5f15\u5165\u7684\u9644\u52a0\u7ed3\u70b9\uff08\u5143\u7d20\uff09\u5747\u53ef\u79f0\u4e3a\u54e8\u5175\u3002\u5f15\u5165\u54e8\u5175\u540e\u4f7f\u5f97\u67e5\u627e\u5faa\u73af\u6761\u4ef6\u7684\u65f6\u95f4\u5927\u7ea6\u51cf\u5c11\u4e86\u4e00\u534a\uff0c\u5bf9\u4e8e\u8bb0\u5f55\u6570\u8f83\u5927\u7684\u6587\u4ef6\u8282\u7ea6\u7684\u65f6\u95f4\u5c31\u76f8\u5f53\u53ef\u89c2\u3002\u7c7b\u4f3c\u4e8e\u6392\u5e8f\u8fd9\u6837\u4f7f\u7528\u9891\u7387\u975e\u5e38\u9ad8\u7684\u7b97\u6cd5\uff0c\u8981\u5c3d\u53ef\u80fd\u5730\u51cf\u5c11\u5176\u8fd0\u884c\u65f6\u95f4\u3002\u6240\u4ee5\u4e0d\u80fd\u628a\u4e0a\u8ff0\u7b97\u6cd5\u4e2d\u7684\u54e8\u5175\u89c6\u4e3a\u96d5\u866b\u5c0f\u6280\u3002", "\n\u9762\u8bd5\u989825\uff1a\u7f16\u7801\u5b9e\u73b0\u5192\u6ce1\u6392\u5e8f", "\n\u5192\u6ce1\u6392\u5e8f\u7f16\u7a0b\u5b9e\u73b0\u5982\u4e0b\uff1a #include <stdio.h> #define LEN 10 //\u6570\u7ec4\u957f\u5ea6 void main( void ) { int ARRAY[10] = { 0, 6, 3, 2, 7, 5, 4, 9, 1, 8 }; //\u5f85\u6392\u5e8f\u6570\u7ec4 printf( \u201c\\n\u201d ); for( int a = 0; a < LEN; a++ ) //\u6253\u5370\u6570\u7ec4\u5185\u5bb9 { printf( \u201c%d \u201c, ARRAY[a] ); } int i = 0; int j = 0; bool isChange; //\u8bbe\u5b9a\u4ea4\u6362\u6807\u5fd7 for( i = 1; i < LEN; i++ ) { //\u6700\u591a\u505aLEN-1\u8d9f\u6392\u5e8f isChange = 0; //\u672c\u8d9f\u6392\u5e8f\u5f00\u59cb\u524d,\u4ea4\u6362\u6807\u5fd7\u5e94\u4e3a\u5047 for( j = LEN-1; j >= i; j\u2013 ) //\u5bf9\u5f53\u524d\u65e0\u5e8f\u533aARRAY[i..LEN]\u81ea\u4e0b\u5411\u4e0a\u626b\u63cf { if( ARRAY[j+1] < ARRAY[j] ) { //\u4ea4\u6362\u8bb0\u5f55 ARRAY[0] = ARRAY[j+1]; //ARRAY[0]\u4e0d\u662f\u54e8\u5175,\u4ec5\u505a\u6682\u5b58\u5355\u5143 ARRAY[j+1] = ARRAY[j]; ARRAY[j] = ARRAY[0]; isChange = 1; //\u53d1\u751f\u4e86\u4ea4\u6362,\u6545\u5c06\u4ea4\u6362\u6807\u5fd7\u7f6e\u4e3a\u771f } } printf( \u201c\\n\u201d ); for( a = 0; a < LEN; a++) //\u6253\u5370\u672c\u6b21\u6392\u5e8f\u540e\u6570\u7ec4\u5185\u5bb9 { printf( \u201c%d \u201c, ARRAY[a] ); } if( !isChange ) //\u672c\u8d9f\u6392\u5e8f\u672a\u53d1\u751f\u4ea4\u6362,\u63d0\u524d\u7ec8\u6b62\u7b97\u6cd5 { break; } } printf( \u201c\\n\u201d ); return; }", "\n13", "\n\u9762\u8bd5\u989826\uff1a\u7f16\u7801\u5b9e\u73b0\u76f4\u63a5\u9009\u62e9\u6392\u5e8f #include\u201dstdio.h\u201d #define LEN 9 void main( void ) { int ARRAY[LEN]={ 5, 6, 8, 2, 4, 1, 9, 3, 7 }; //\u5f85\u5e8f\u6570\u7ec4 printf(\u201cBefore sorted:\\n\u201d); for( int m = 0; m < LEN; m++ ) //\u6253\u5370\u6392\u5e8f\u524d\u6570\u7ec4 { printf( \u201c%d \u201c, ARRAY"], "title": "c/c++\u7ecf\u5178\u9762\u8bd5\u9898"},
{"contents": ["\u4e00\u3001\u9009\u62e9\u9898((1)\uff5e(10)\u6bcf\u5c0f\u98982\u5206\uff0c(11)-(50)\u6bcf\u5c0f\u98981\u5206\uff0c\u517160\u5206)", "\u4e0b\u5217\u5404\u9898A)\u3001B)\u3001C)\u3001D)\u56db\u4e2a\u9009\u9879\u4e2d\uff0c\u53ea\u6709\u4e00\u4e2a\u9009\u9879\u662f\u6b63\u786e\u7684\uff0c\u8bf7\u5c06\u6b63\u786e\u9009\u9879\u6d82\u5199\u5728\u7b54\u9898\u5361\u76f8\u5e94\u4f4d\u7f6e\u4e0a\uff0c\u7b54\u5728\u8bd5\u5377\u4e0a\u4e0d\u5f97\u5206\u3002", "(1)\u5728\u4e0b\u5217\u9009\u9879\u4e2d\uff0c_________\u4e0d\u662f\u4e00\u4e2a\u7b97\u6cd5\u4e00\u822c\u5e94\u8be5\u5177\u6709\u7684\u57fa\u672c\u7279\u5f81\u3002", "A)\u786e\u5b9a\u6027\u00a0\u00a0\u00a0 B)\u53ef\u884c\u6027\u00a0\u00a0\u00a0 C)\u65e0\u7a77\u6027\u00a0\u00a0\u00a0 D)\u62e5\u6709\u8db3\u591f\u7684\u60c5\u62a5", "C", "\u4e00\u4e2a\u7b97\u6cd5\uff0c\u4e00\u822c\u5e94\u5177\u6709\u4ee5\u4e0b\u51e0\u4e2a\u57fa\u672c\u7279\u5f81\u3002\u2460\u53ef\u884c\u6027\u2461\u786e\u5b9a\u6027\u2462\u6709\u7a77\u6027\u2463\u62e5\u6709\u8db3\u591f\u7684\u60c5\u62a5", "\u00a0", "(2)\u5e0c\u5c14\u6392\u5e8f\u6cd5\u5c5e\u4e8e_________\u7c7b\u578b\u7684\u6392\u5e8f\u6cd5\u3002", "A)\u4ea4\u6362\u7c7b\u6392\u5e8f\u6cd5\u00a0\u00a0\u00a0 B)\u63d2\u5165\u7c7b\u6392\u5e8f\u6cd5", "C)\u9009\u62e9\u7c7b\u6392\u5e8f\u6cd5\u00a0\u00a0\u00a0 D)\u5efa\u5806\u6392\u5e8f\u6cd5", "B", "\u5e0c\u5c14\u6392\u5e8f\u6cd5\u7684\u57fa\u672c\u601d\u60f3\u662f\uff1a\u5c06\u6574\u4e2a\u65e0\u5e8f\u5e8f\u5217\u5206\u5272\u6210\u82e5\u5e72\u5c0f\u7684\u5b50\u5e8f\u5217\u5206\u522b\u8fdb\u884c\u63d2\u5165\u6392\u5e8f\u3002\u6240\u4ee5\u5e0c\u5c14\u6392\u5e8f\u6cd5\u5c5e\u4e8e\u63d2\u5165\u7c7b\u6392\u5e8f\uff0c\u4f46\u5b83\u5bf9\u7b80\u5355\u63d2\u5165\u6392\u5e8f\u505a\u4e86\u5f88\u5927\u7684\u6539\u8fdb\u3002", "\u00a0", "(3)\u4e0b\u5217\u5173\u4e8e\u961f\u5217\u7684\u53d9\u8ff0\u4e2d\u6b63\u786e\u7684\u662f_________\u3002", "A)\u5728\u961f\u5217\u4e2d\u53ea\u80fd\u63d2\u5165\u6570\u636e\u00a0\u00a0\u00a0 \u00a0\u00a0B)\u5728\u961f\u5217\u4e2d\u53ea\u80fd\u5220\u9664\u6570\u636e", "C)\u961f\u5217\u662f\u5148\u8fdb\u5148\u51fa\u7684\u7ebf\u6027\u8868\u00a0\u00a0\u00a0 D)\u961f\u5217\u662f\u5148\u8fdb\u540e\u51fa\u7684\u7ebf\u6027\u8868", "C", "\u961f\u5217\u662f\u6307\u5141\u8bb8\u5728\u4e00\u7aef\u8fdb\u884c\u63d2\u5165\u3001\u800c\u5728\u53e6\u4e00\u7aef\u8fdb\u884c\u5220\u9664\u7684\u7ebf\u6027\u8868\u3002\u5b83\u53c8\u79f0\u4e3a\u201c\u5148\u8fdb\u5148\u51fa\u201d\u6216\u201c\u540e\u8fdb\u540e\u51fa\u201d\u7684\u7ebf\u6027\u8868\uff0c\u4f53\u73b0\u4e86\u201c\u5148\u6765\u5148\u670d\u52a1\u201d\u7684\u539f\u5219\u3002", "\u00a0", "(4)\u5bf9\u957f\u5ea6\u4e3aN\u7684\u7ebf\u6027\u8868\u8fdb\u884c\u987a\u5e8f\u67e5\u627e\uff0c\u5728\u6700\u574f\u60c5\u51b5\u4e0b\u6240\u9700\u8981\u7684\u6bd4\u8f83\u6b21\u6570\u4e3a_________\u3002", "A)N+I\u00a0\u00a0\u00a0 B)N\u00a0\u00a0\u00a0 C)(N+I)\uff0f2 \u00a0\u00a0\u00a0D)N\uff0f2", "B", "\u5728\u8fdb\u884c\u987a\u5e8f\u67e5\u627e\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u88ab\u67e5\u7684\u5143\u7d20\u662f\u7ebf\u6027\u8868\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\uff0c\u6216\u8005\u88ab\u67e5\u5143\u7d20\u6839\u672c\u4e0d\u5728\u7ebf\u6027\u8868\u4e2d\uff0c\u5219\u4e3a\u4e86\u67e5\u627e\u8fd9\u4e2a\u5143\u7d20\u9700\u8981\u4e0e\u7ebf\u6027\u8868\u4e2d\u6240\u6709\u5143\u7d20\u8fdb\u884c\u6bd4\u8f83\uff0c\u8fd9\u662f\u987a\u5e8f\u67e5\u627e\u6700\u574f\u7684\u60c5\u51b5\u3002", "\u00a0", "(5)\u4fe1\u606f\u9690\u853d\u7684\u6982\u5ff5\u4e0e\u4e0b\u8ff0_________\u6982\u5ff5\u76f4\u63a5\u76f8\u5173\u3002", "A)\u8f6f\u4ef6\u7ed3\u6784\u5b9a\u4e49\u00a0\u00a0\u00a0 B)\u6a21\u5757\u72ec\u7acb\u6027", "C)\u6a21\u5757\u7c7b\u578b\u5212\u5206\u00a0\u00a0\u00a0 D)\u6a21\u62df\u8026\u5408\u5ea6", "B", "\u4fe1\u606f\u9690\u853d\u662f\u6307\u5728\u4e00\u4e2a\u6a21\u5757\u5185\u5305\u542b\u7684\u4fe1\u606f(\u8fc7\u7a0b\u6216\u6570\u636e)\uff0c\u5bf9\u4e8e\u4e0d\u9700\u8981\u8fd9\u4e9b\u4fe1\u606f\u7684\u5176\u4ed6\u6a21\u5757\u6765\u8bf4\u662f\u4e0d\u80fd\u8bbf\u95ee\u7684\u3002\u6a21\u5757\u72ec\u7acb\u6027\u662f\u6307\u6bcf\u4e2a\u6a21\u5757\u53ea\u5b8c\u6210\u7cfb\u7edf\u8981\u6c42\u7684\u72ec\u7acb\u7684\u5b50\u529f\u80fd\uff0c\u5e76\u4e14\u4e0e\u5176\u4ed6\u6a21\u5757\u7684\u8054\u7cfb\u6700\u5c11\u4e14\u63a5\u53e3\u7b80\u5355\u3002\u8861\u91cf\u8f6f\u4ef6\u7684\u6a21\u5757\u72ec\u7acb\u6027\u7684\u5ea6\u91cf\u6807\u51c6\u662f\u8026\u5408\u6027\u548c\u5185\u805a\u6027\u3002\u4e00\u4e2a\u6a21\u5757\u7684\u5185\u805a\u6027\u8d8a\u5f3a\uff0c\u5219\u8be5\u6a21\u5757\u7684\u6a21\u5757\u72ec\u7acb\u6027\u8d8a\u5f3a\u3002\u800c\u5185\u805a\u6027\u662f\u4fe1\u606f\u9690\u853d\u548c\u5c40\u90e8\u5316\u6982\u5ff5\u7684\u81ea\u7136\u6269\u957f\u3002", "\u00a0", "(6)\u9762\u5411\u5bf9\u8c61\u7684\u8bbe\u8ba1\u65b9\u6cd5\u4e0e\u4f20\u7edf\u7684\u9762\u5411\u8fc7\u7a0b\u7684\u65b9\u6cd5\u6709\u672c\u8d28\u4e0d\u540c\uff0c\u5b83\u7684\u57fa\u672c\u539f\u7406\u662f_________\u3002", "A)\u6a21\u62df\u73b0\u5b9e\u4e16\u754c\u4e2d\u4e0d\u540c\u4e8b\u7269\u4e4b\u95f4\u7684\u8054\u7cfb", "B)\u5f3a\u8c03\u6a21\u62df\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u7b97\u6cd5\u800c\u4e0d\u5f3a\u8c03\u6982\u5ff5", "C)\u4f7f\u7528\u73b0\u5b9e\u4e16\u754c\u7684\u6982\u5ff5\u62bd\u8c61\u5730\u601d\u8003\u95ee\u9898\u4ece\u800c\u81ea\u7136\u5730\u89e3\u51b3\u95ee\u9898", "D)\u9f13\u52b1\u5f00\u53d1\u8005\u5728\u8f6f\u4ef6\u5f00\u53d1\u7684\u7edd\u5927\u90e8\u5206\u4e2d\u90fd\u7528\u5b9e\u9645\u9886\u57df\u7684\u6982\u5ff5\u53bb\u601d\u8003", "C", "\u9762\u5411\u5bf9\u8c61\u7684\u8bbe\u8ba1\u65b9\u6cd5\u57fa\u672c\u539f\u7406\uff1a\u4f7f\u7528\u73b0\u5b9e\u4e16\u754c\u7684\u6982\u5ff5\u62bd\u8c61\u5730\u601d\u8003\u95ee\u9898\u4ece\u800c\u81ea\u7136\u5730\u89e3\u51b3\u95ee\u9898\u3002\u5f3a\u8c03\u6a21\u62df\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u6982\u5ff5\u800c\u4e0d\u5f3a\u8c03\u7b97\u6cd5\uff0c\u9f13\u52b1\u5f00\u53d1\u8005\u5728\u8f6f\u4ef6\u5f00\u53d1\u7684\u7edd\u5927\u90e8\u5206\u4e2d\u90fd\u7528\u5e94\u7528\u9886\u57df\u7684\u6982\u5ff5\u53bb\u601d\u8003\u3002", "\u00a0", "(7)\u5728\u7ed3\u6784\u5316\u65b9\u6cd5\u4e2d\uff0c\u8f6f\u4ef6\u529f\u80fd\u5206\u89e3\u5c5e\u4e8e\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u7684_________\u9636\u6bb5\u3002", "A)\u8be6\u7ec6\u8bbe\u8ba1\u00a0 B)\u9700\u6c42\u5206\u6790\u00a0\u00a0\u00a0 C)\u603b\u4f53\u8bbe\u8ba1\u00a0\u00a0\u00a0 D)\u7f16\u7a0b\u8c03\u8bd5", "C", "\u603b\u4f53\u8bbe\u8ba1\u8fc7\u7a0b\u901a\u5e38\u7531\u4e24\u4e2a\u4e3b\u8981\u9636\u6bb5\u7ec4\u6210\uff1a\u7cfb\u7edf\u8bbe\u8ba1\uff0c\u786e\u5b9a\u7cfb\u7edf\u7684\u5177\u4f53\u5b9e\u73b0\u65b9\u6848\uff1b\u7ed3\u6784\u8bbe\u8ba1\uff0c\u786e\u5b9a\u8f6f\u4ef6\u7ed3\u6784\u3002\u4e3a\u786e\u5b9a\u8f6f\u4ef6\u7ed3\u6784\uff0c\u9996\u5148\u9700\u8981\u4ece\u5b9e\u73b0\u89d2\u5ea6\u628a\u590d\u6742\u7684\u529f\u80fd\u8fdb\u4e00\u6b65\u5206\u89e3\u3002", "\u00a0", "(8)\u8f6f\u4ef6\u8c03\u8bd5\u7684\u76ee\u7684\u662f_________\u3002", "A)\u53d1\u73b0\u9519\u8bef\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0B)\u6539\u6b63\u9519\u8bef", "C)\u6539\u5584\u8f6f\u4ef6\u7684\u6027\u80fd\u00a0\u00a0\u00a0 D)\u6316\u6398\u8f6f\u4ef6\u7684\u6f5c\u80fd", "B", "\u7531\u7a0b\u5e8f\u8c03\u8bd5\u7684\u6982\u5ff5\u53ef\u77e5\uff1a\u7a0b\u5e8f\u8c03\u8bd5\u6d3b\u52a8\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff0c\u5176\u4e00\u662f\u6839\u636e\u9519\u8bef\u7684\u8ff9\u8c61\u786e\u5b9a\u7a0b\u5e8f\u4e2d\u9519\u8bef\u7684\u786e\u5207\u6027\u8d28\u3001\u539f\u56e0\u548c\u4f4d\u7f6e\u3002\u5176\u4e8c\uff0c\u5bf9\u7a0b\u5e8f\u8fdb\u884c\u4fee\u6539\uff0c\u6392\u9664\u8fd9\u4e2a\u9519\u8bef\u3002\u6240\u4ee5\u7a0b\u5e8f\u8c03\u8bd5\u7684\u76ee\u7684\u5c31\u662f\u8bca\u65ad\u548c\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\u3002", "\u00a0", "(9)\u6309\u6761\u4ef6f\u5bf9\u5173\u7cfbR\u8fdb\u884c\u9009\u62e9\uff0c\u5176\u5173\u7cfb\u4ee3\u6570\u8868\u8fbe\u5f0f\u4e3a_________\u3002", "RooR", "A)RooR\u00a0\u00a0\u00a0 B)\u00a0 f\u00a0\u00a0\u00a0 C)6f(R)\u00a0\u00a0\u00a0 D)\u5140f(R)", "C", "\u9009\u62e9\u8fd0\u7b97\u662f\u4e00\u4e2a\u4e00\u5143\u8fd0\u7b97\uff0c\u5173\u7cfbR\u901a\u8fc7\u9009\u62e9\u8fd0\u7b97(\u5e76\u7531\u8be5\u8fd0\u7b97\u7ed9\u51fa\u6240\u9009\u62e9\u7684\u903b\u8f91\u6761\u4ef6)\u540e\u4ecd\u4e3a\u4e00\u4e2a\u5173\u7cfb\u3002\u8fd9\u4e2a\u5173\u7cfb\u662f\u7531R\u4e2d\u90a3\u4e9b\u6ee1\u8db3\u903b\u8f91\u6761\u4ef6\u7684\u5143\u7ec4\u6240\u7ec4\u6210\u3002\u5982\u679c\u5173\u7cfb\u7684\u903b\u8f91\u6761\u4ef6\u4e3aC\u5219R\u6ee1\u8db3f\u7684\u9009\u62e9\u8fd0\u7b97\u53ef\u4ee5\u5199\u6210\uff1a6f(R)\u3002", "\u00a0", "(10)\u6570\u636e\u5e93\u7684\u7269\u7406\u8bbe\u8ba1\u662f\u4e3a\u4e00\u4e2a\u7ed9\u5b9a\u7684\u903b\u8f91\u7ed3\u6784\u9009\u53d6\u4e00\u4e2a\u9002\u5408\u5e94\u7528\u73af\u5883\u7684_______\u7684\u8fc7\u7a0b\uff0c\u00a0\u00a0\u00a0 \u5305\u62ec\u786e\u5b9a\u6570\u636e\u5e93\u5728\u7269\u7406\u8bbe\u5907\u4e0a\u7684\u5b58\u50a8\u7ed3\u6784\u548c\u5b58\u53d6\u65b9\u6cd5\u3002", "A)\u903b\u8f91\u7ed3\u6784\u00a0 B)\u7269\u7406\u7ed3\u6784\u00a0\u00a0\u00a0 C)\u6982\u5ff5\u7ed3\u6784\u00a0\u00a0\u00a0 D)\u5c42\u6b21\u7ed3\u6784", "B", "\u6839\u636e\u6570\u636e\u5e93\u7269\u7406\u8bbe\u8ba1\u7684\u6982\u5ff5\u53ef\u77e5\uff1a\u4e3a\u4e00\u4e2a\u7ed9\u5b9a\u7684\u903b\u8f91\u6570\u636e\u6a21\u578b\u9009\u53d6\u4e00\u4e2a\u6700\u5408\u9002\u5e94\u7528\u8981\u6c42\u7684\u7269\u7406\u7ed3\u6784\u7684\u8fc7\u7a0b\uff0c\u5c31\u662f\u6570\u636e\u5e93\u7684\u7269\u7406\u8bbe\u8ba1\u3002\u6570\u636e\u5e93\u7684\u7269\u7406\u7ed3\u6784\u5c31\u662f\u6307\u6570\u636e\u5e93\u5728\u7269\u7406\u8bbe\u5907\u4e0a\u7684\u5b58\u50a8\u7ed3\u6784\u4e0e\u5b58\u53d6\u65b9\u6cd5\u3002", "\u00a0", "(11)\u4e0b\u5217\u53d9\u8ff0\u4e2d\u6b63\u786e\u7684\u662f_______\u3002", "A)C\u8bed\u8a00\u7f16\u8bd1\u65f6\u4e0d\u68c0\u67e5\u8bed\u6cd5", "B)C\u8bed\u8a00\u7684\u5b50\u7a0b\u5e8f\u6709\u8fc7\u7a0b\u548c\u51fd\u6570\u4e24\u79cd", "C)C\u8bed\u8a00\u7684\u51fd\u6570\u53ef\u4ee5\u5d4c\u5957\u5b9a\u4e49", "D)C\u8bed\u8a00\u4e2d\uff0c\u6839\u636e\u51fd\u6570\u80fd\u5426\u88ab\u5176\u5b83\u6e90\u6587\u4ef6\u8c03\u7528\uff0c\u88ab\u533a\u5206\u4e3a\u5185\u90e8\u51fd\u6570\u548c\u5916\u90e8\u51fd\u6570", "D", "\u9009\u9879A\u7684\u9519\u8bef\u5728\u4e8e\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u662f\u68c0\u67e5\u8bed\u6cd5\u7684\uff0c\u82e5\u53d1\u73b0\u6e90\u7a0b\u5e8f\u6709\u8bed\u6cd5\u9519\u8bef\uff0c\u5219\u7cfb\u7edf\u4f1a\u63d0\u793a\u51fa\u9519\u4fe1\u606f\uff1b\u9009\u9879B\u7684\u9519\u8bef\u5728\u4e8ec\u8bed\u8a00\u4e2d\uff0c\u5b50\u7a0b\u5e8f\u7684\u4f5c\u7528\u662f\u7531\u51fd\u6570\u6765\u5b8c\u6210\u7684\uff0c\u65e0\u8fc7\u7a0b\u7684\u6982\u5ff5\uff1b\u9009\u9879c\u7684\u9519\u8bef\u5728\u4e8e\u51fd\u6570\u4e0d\u53ef\u4ee5\u5d4c\u5957\u5b9a\u4e49\uff0c\u4f46\u53ef\u4ee5\u5d4c\u5957\u8c03\u7528\u3002", "\u00a0", "(12)\u6709\u4ee5\u4e0b\u7a0b\u5e8f\uff1a", "main()", "{", "int a\uff1a", "char c=10\uff1b", "float f=100\uff0e0\uff1bdouble x\uff1b", "a=f\uff0f=c*=(x=6\uff0e5)\uff1b", "printf(\u201c\uff05d\uff05d\uff053\uff0e1f\uff053\uff0e1f\uff3cn\u201d\uff0ca\uff0cc\uff0cf,x)\uff1b", "}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f_______\u3002", "A)1 65 1 6.5\u00a0 \u00a0B)1 65 1\uff0e56.5\u00a0 \u00a0C)l 65 1.0 6\uff0e5\u00a0 \u00a0D)2 65 1.5 6\uff0e5", "B", "\u672c\u9898\u6c42\u89e3\u6b65\u9aa4\u5982\u4e0b\uff1a\u5148\u8fdb\u884c\u201cc*=(x=6\uff0e5)\u201d\u7684\u8fd0\u7b97\uff0c\u7531\u4e8ex=6\uff0e5\uff0c\u8868\u8fbe\u5f0f\u76f8\u5f53\u4e8ec=c*6\uff0e5=10*6\uff0e5=65\uff0e\u518d\u8fdb\u884c\u201df\uff0f=65\u2033\u7684\u8fd0\u7b97\uff0c\u76f8\u5f53\u4e8ef=-f\uff0f65=100\uff0e0\uff0f65\uff0c\u7531\u4e8ef\u4e3a\u5355\u7cbe\u5ea6\u5b9e\u578b\u53d8\u91cf\uff0c\u56e0\u6b64f\u7684\u503c\u7ea6\u4e3a1\uff0e538462\uff0e\u7136\u540e\u8fdb\u884c\u201ca=f\u201d\u7684\u8fd0\u7b97\uff0c\u7531\u4e8ea\u4e3a\u6574\u578b\u53d8\u91cf\uff0c\u56e0\u6b64a=1\uff0e\u6700\u540e\u5c06\u5404\u4e2a\u53d8\u91cf\u7684\u503c\u6309\u7167printf\u4e2d\u7684\u683c\u5f0f\u8981\u6c42\u8f93\u51fa\u5230\u5c4f\u5e55\uff0c\u6ce8\u610f\u53d8\u91cff\uff0cx\u6309\u7167\u201c\uff053\uff0e1f\u201d\u683c\u5f0f\u8f93\u51fa\uff0c\uff0c\u5373\u53ea\u8f93\u51fa\u4e00\u4f4d\u5c0f\u6570\u3002", "\u00a0", "(13)\u4ee5\u4e0b\u53d8\u91cfx\u3001y\u3001z\u5747\u4e3adouble\u7c7b\u578b\u4e14\u5df2\u6b63\u786e\u8d4b\u503c\uff0c\u4e0d\u80fd\u6b63\u786e\u8868\u793a\u6570\u5b66\u5f0f\u5b50x/(y*z)\u7684C\u8bed\u8a00\u8868\u8fbe\u5f0f\u662f_______\u3002", "A)x\uff0fy*z\u00a0\u00a0\u00a0 B)x*(1\uff0f(y*z))\u00a0\u00a0\u00a0 C)x\uff0fy*1\uff0fz\u00a0\u00a0\u00a0 D)x\uff0fy\uff0fz", "A", "\u6309\u7167\u81ea\u5de6\u5411\u53f3\u7684\u8fd0\u7b97\u903b\u8f91\uff0c\u9009\u9879A\u662f\u5148\u505ax\uff0fy\uff0c\u7136\u540e\u518d\u4e58\u4ee5x\uff0c\u663e\u7136\u4e0e\u9898\u610f\u4e0d\u7b26\u3002", "\u00a0", "(14)\u82e5a\u4e3aint\u7c7b\u578b\uff0c\u4e14\u5176\u503c\u4e3a3\uff0c\u5219\u6267\u884c\u5b8c\u8868\u8fbe\u5f0fa+=a-=a*a\u540e\uff0ca\u7684\u503c\u662f_______\u3002", "A)-3\u00a0\u00a0\u00a0 B)9\u00a0\u00a0\u00a0 C)-12\u00a0\u00a0\u00a0 D)6", "C", "c\u8bed\u8a00\u4e2d\u5bf9\u8d4b\u503c\u8fd0\u7b97\u7684\u8fd0\u7b97\u987a\u5e8f\u662f\u81ea\u53f3\u5411\u5de6\u3002\u672c\u9898\u4e2d\uff0c\u8ba1\u7b97a*a\u4e4b\u540e\uff0ca\u7684\u503c\u4f9d\u7136\u4e3a3\uff0c\u8868\u8fbe\u5f0fa*a\u7684\u503c\u4e3a9\uff1ba-=9\uff0ca=3-9=-6\uff1ba+=-6\uff0ca=-6+-6=-12\u3002", "\u00a0", "(15)\u4ee5\u4e0b\u7a0b\u5e8f\u6bb5\u4e2d\u4e0e\u8bed\u53e5k=a>b?(b>c?1\uff1a0)\uff1a0\uff1b\u529f\u80fd\u7b49\u4ef7\u7684\u662f_______\u3002", "A)if((a>b)&&(b>C))k=l\uff1belse k=0\uff1b", "B)if((a>b)\u2016(b>C))k=l\uff1belse k=O\uff1b", "C)if(a<=b)k=0;else if(b<=C)k=1\uff1b", "D)if(a>b)k=1\uff0celse if(b>C)k=l\uff1belse k=0\uff1b", "A", "\u201ca>b?(b>c?1\uff1a0)\uff1a0\u201d\u7684\u6c42\u89e3\u987a\u5e8f\u662f\uff1a\u5148\u5224\u65ada>b\u662f\u5426\u4e3a\u771f\uff0c\u5982\u679c\u4e3a\u771f\uff0c\u5219\u6267\u884cb>c?1\uff1a0\uff1a\u5982\u679cb>c\u4e3a\u771f\uff0c\u5219(b>c?l\uff1a0)\u7684\u503c\u4e3a1\uff0c\u4ece\u800c\u6574\u4e2a\u8868\u8fbe\u5f0f\u8fd4\u56de1\uff0c\u5426\u5219\u6574\u4e2a\u8868\u8fbe\u5f0f\u8fd4\u56de0\uff1b\u5982\u679ca<=b\uff0c\u5219\u8868\u8fbe\u5f0f\u8fd4\u56de0\u3002\u56e0\u6b64\u529f\u80fd\u7b49\u4ef7\u7684\u8bed\u53e5\u5e94\u4e3aif((a>b)&&(b>C))k=l\uff1belse k=0\uff1b\u3002", "\u00a0", "(16)\u8bbex\u3001y\u3001t\u5747\u4e3aint\u578b\u53d8\u91cf\uff0c\u5219\u6267\u884c\u8bed\u53e5\uff1ax=y=3\uff1bt=++x\u2016++y\uff1b\u540e\uff0cy\u7684\u503c\u4e3a_______\u3002", "A)\u4e0d\u5b9a\u503c\u00a0\u00a0\u00a0 B)4\u00a0\u00a0\u00a0 C)3\u00a0\u00a0\u00a0 D)1", "C", "e\u8bed\u8a00\u4e2d\u5728\u505a\u903b\u8f91\u6216\u8fd0\u7b97\u65f6\uff0c\u81ea\u5de6\u5411\u53f3\u5224\u65ad\u5404\u4e2a\u53c2\u52a0\u6216\u8fd0\u7b97\u7684\u8868\u8fbe\u5f0f\uff0c\u4e00\u65e6\u8fd0\u7b97\u5230\u67d0\u5f0f\u7684\u503c\u4e3a\u975e\u96f6\u65f6\uff0c\u8868\u660e\u6574\u4e2a\u8868\u8fbe\u5f0f\u4e00\u5b9a\u4e3a\u771f\uff0c\u4f59\u4e0b\u7684\u8bed\u53e5\u5219\u4e0d\u518d\u8fdb\u884c\u8fd0\u7b97\u3002\u672c\u9898\u4e2d\uff0c++x\u7684\u503c\u4e3a\u771f\uff0c\u5219++y\u5e76\u6ca1\u6709\u8fdb\u884c\u8fd0\u7b97\uff0c\u6240\u4ee5y\u503c\u4e0d\u53d8\u3002", "\u00a0", "(17)\u5047\u8bbea\u548cb\u4e3aint\u578b\u53d8\u91cf\uff0c\u5219\u6267\u884c\u4ee5\u4e0b\u8bed\u53e5\u540e\uff0cb\u7684\u503c\u4e3a_______\u3002", "a=l\uff1ab=10\uff1a", "do", "{\u00a0 b-=a\uff1a\u00a0 a++\uff1a", "}\u00a0 while(b\u4e00<0)\uff1a", "A)9\u00a0\u00a0\u00a0 B)-2\u00a0\u00a0\u00a0 C)-l\u00a0\u00a0\u00a0 D)8", "D", "\u672c\u9898\u7a0b\u5e8f\u7b2c\u4e00\u8f6e\u5faa\u73af\u540eb\u7684\u503c\u4e3a9\uff0c\u5728\u8fdb\u884c\u5faa\u73af\u6761\u4ef6\u6d4b\u8bd5\u65f6\uff0c\u5148\u53d6b\u7684\u73b0\u503c9\u4e0eO\u6bd4\u8f83\uff0c\u7136\u540e\u518d\u5c06b\u51cfl\u3002\u7531\u4e8e9<0\u4e0d\u6210\u7acb\uff0c\u56e0\u6b64\u5faa\u73af\u7ed3\u675f\uff0c\u8fd9\u65f6b\u7684\u503c\u5df2\u53d8\u62108\uff0c\u672c\u9898\u6b63\u786e\u7b54\u6848\u4e3aD\u3002", "\u00a0", "(18)\u82e5\u6267\u884c\u4ee5\u4e0b\u7a0b\u5e8f\u65f6\u4ece\u952e\u76d8\u4e0a\u8f93\u51659\uff0c\u5219\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "main()", "{", "int n\uff1a", "scanf(\u201d\uff05d\uff1a\u201d\uff0c&n)\uff1b", "if(n++<10)printf(\u201c\uff05d\uff3cn\u201d,n)\uff1b", "else printf(\u201d\uff05d\uff3cn\u201d,n\u2013)\uff1b", "}", "A)ll\u00a0\u00a0\u00a0 B)lO\u00a0\u00a0\u00a0 C)9\u00a0\u00a0\u00a0 D)8", "B", "n++\u662f\u5728\u8bed\u53e5\u7ed3\u675f\u540e\u518d\u52a0l\uff0c\u56e0\u6b64\uff0cif\u8bed\u53e5\u4e2d\u76f8\u5f53\u4e8e\u5224\u65ad\u7684\u662f9<10\uff0c\u5f53\u7136\u662f\u6267\u884cif\u8bed\u53e5\u540e\u9762\u7684lorintf\u8bed\u53e5\uff0c\u800c\u8fd9\u65f6\uff0c\u56e0\u4e3aif\u8bed\u53e5\u88ab\u6267\u884c\uff0cn\u7684\u503c\u4e5f\u88ab\u52a01\uff0c\u6240\u4ee5\u5728\u6253\u5370\u65f6\uff0cn\u503c\u4e3a10\uff0c\u800cn\u2013\u662f\u5728printf\u8bed\u53e5\u6267\u884c\u5b8c\u6bd5\u540e\u518d\u51cf1\u7684\u3002", "\u00a0", "(19)\u6709\u4ee5\u4e0b\u7a0b\u5e8f\u6bb5", "int k=O\uff1a", "while(k=l)k++\uff1b", "while\u5faa\u73af\u6267\u884c\u7684\u6b21\u6570\u662f_________\u3002", "A)\u65e0\u9650\u6b21\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)\u6709\u8bed\u6cd5\u9519\uff0c\u4e0d\u80fd\u6267\u884c", "C)\u4e00\u6b21\u4e5f\u4e0d\u6267\u884c\u00a0 \u00a0\u00a0\u00a0\u00a0D)\u6267\u884c1\u6b21", "A", "c\u8bed\u8a00\u91cc\u5173\u7cfb\u8868\u8fbe\u5f0f\u7684\u7b49\u4e8e\u5e94\u8be5\u662f\u201c==\u201d\u3002\u4e00\u4e2a\u7b49\u4e8e\u53f7\u8868\u793a\u8d4b\u503c\uff0c\u5373\u8fd9\u91cc\u9762\u91cd\u590d\u7684\u628a1\u8d4b\u7ed9k\uff0c\u81ea\u7136\u8868\u8fbe\u5f0fk=l\u7684\u503c\u603b\u4e3a1\uff0cwhile\u540e\u9762\u7684\u8868\u8fbe\u5f0f\u6052\u4e3a\u771f\uff0c\u5f53\u7136\u4f1a\u8fdb\u5165\u6b7b\u5faa\u73af\u3002", "\u00a0", "(20)\u6709\u4ee5\u4e0b\u7a0b\u5e8f\uff1a", "void sum(int*a)", "{a[O]=a[1]\uff1b}", "main()", "{", "Int aa[10]={1,2,3,4,5,6,7,8,9,10}\uff0ci\uff1b", "for(i=1\uff1bi>O\uff1bi\u2013)sum(&aa[i])\uff1b", "printf(\u201d\uff05d\\n\u201d\uff0caa[0])\uff1b", ")", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "A)4\u00a0\u00a0\u00a0 B)3\u00a0\u00a0\u00a0 C)2\u00a0\u00a0\u00a0\u00a0\u00a0 D)1", "D", "c\u8bed\u8a00\u89c4\u5b9a\uff0c\u5b9e\u53c2\u53d8\u91cf\u5bf9\u5f62\u53c2\u53d8\u91cf\u7684\u6570\u636e\u4f20\u9012\u662f\u201c\u503c\u4f20\u9012\u201d\uff0c\u53ea\u7531\u5b9e\u53c2\u4f20\u7ed9\u5f62\u53c2\uff0c\u800c\u4e0d\u80fd\u7531\u5f62\u53c2\u4f20\u56de\u6765\u7ed9\u5b9e\u53c2\u3002\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u540e\uff0c\u5f62\u53c2\u5355\u5143\u88ab\u91ca\u653e\uff0c\u5b9e\u53c2\u5355\u5143\u4ecd\u4fdd\u7559\u5e76\u7ef4\u6301\u539f\u503c\u3002\u672c\u9898\u8981\u6c42\u8f93\u51faaa[0]\u7684\u503c\uff0c\u7ed3\u679c\u5e94\u4e3a1\u3002", "\u00a0", "(21)\u4ee5\u4e0b\u7a0b\u5e8f\u6267\u884c\u540esum\u7684\u503c\u662f_________\u3002", "main()", "{", "int I,sum\uff1b", "for(i=1\uff1bi<6\uff1bi++)sum+=i\uff1b", "printf(\u201d\uff05d\uff3cn\u201d,sum)\uff1b", "}", "A)15\u00a0\u00a0\u00a0 B)14\u00a0\u00a0\u00a0 C)\u4e0d\u786e\u5b9a\u00a0\u00a0\u00a0 D)0", "C", "\u53d8\u91cfsum\u5728\u4f7f\u7528\u65f6\u672a\u8d4b\u521d\u503c\uff0c\u6240\u4ee5\u65e0\u6cd5\u786e\u5b9asum\u6700\u7ec8\u7684\u503c\u3002", "\u00a0", "(22)\u6709\u4ee5\u4e0b\u7a0b\u5e8f\uff1a", "main()", "{", "int x[8]={8,7,6,5,0,0}\uff0c*s\uff1b", "s=x+3\uff1a", "printf(\u201d\uff05d\uff3cn\u201d\uff0cs[2])\uff1b", "}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "A)\u968f\u673a\u503c\u00a0\u00a0\u00a0 B)0\u00a0\u00a0\u00a0 C)5\u00a0\u00a0\u00a0 D)6", "B", "\u672c\u9898\u5b9a\u4e49\u4e86\u6570\u7ec4x[8]\u548c\u6307\u9488\u53d8\u91cfs\uff0c\u7531c\u8bed\u8a00\u89c4\u5b9a\uff0c\u6307\u9488\u52a01\u7684\u542b\u4e49\u662f\u4f7f\u6307\u9488\u6307\u5411\u6570\u7ec4\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u800c\u4e0d\u662f\u6307\u9488\u503c\u7b80\u5355\u7684\u52a0l\uff0c\u56e0\u6b64\u901a\u8fc7s=x+3\uff1b\u4f7fs\u6307\u5411\u6570\u7ec4\u5143\u7d20x[3]\u3002\u7531\u4e8e\u6307\u5411\u6570\u636e\u7684\u6307\u9488\u53d8\u91cf\u53ef\u4ee5\u5e26\u4e0b\u6807\u8868\u793a\uff0c\u5982s[i]\u4e0e*(s+i)\u7b49\u4ef7\u3002\u56e0\u6b64\u9898\u76ee\u8981\u6c42\u8f93\u51fas[2]\u7684\u503c\uff0c\u5373+(s+2)\u7684\u503c\uff0c\u4e5f\u5c31\u662fx[51\u7684\u503c\uff0c\u4e3a0\u3002", "\u00a0", "(23)\u6709\u4ee5\u4e0b\u7a0b\u5e8f\u6bb5", "int x=3\uff1a", "do", "{", "printf(\u201d\uff05d\u201d\uff0cx-=2)\uff1b", "}", "while(!(--x))\uff1b", "\u5176\u8f93\u51fa\u7ed3\u679c\u662f_______\u3002", "A)l\u00a0\u00a0\u00a0 B)3\u00a00\u00a0\u00a0\u00a0 C)1\u00a0 -2\u00a0\u00a0\u00a0 D)\u6b7b\u5faa\u73af", "C", "\u672c\u9898\u4e2d\u5faa\u73af\u6267\u884c\u4e86\u4e24\u6b21\uff0c\u7b2c\u4e00\u6b21\uff0c\u6267\u884c\u5b8cprintf\u8bed\u53e5\u540e\uff0cx=l\uff0c\u800c--X\u662f\u5148\u81ea\u51cf\u540e\u6267\u884c\u8bed\u53e5\uff0c\u6240\u4ee5(!(--X))\u7684\u503c\u4e3a\u975e\u96f6\uff0c\u6240\u4ee5\u53c8\u6267\u884c\u4e86\u4e00\u6b21\u3002\u7b2c\u4e8c\u6b21x\u7684\u503c\u4e3a-2\uff0c--x\u7684\u503c\u4e3a-3\uff0c\u6c42\u975e\u540e\uff0c\u503c\u4e3a0\uff0c\u8df3\u51fa\u5faa\u73af\u3002", "\u00a0", "(24)\u82e5\u53d8\u91cfc\u4e3achar\u7c7b\u578b\uff0c\u80fd\u6b63\u786e\u5224\u65ad\u51fac\u4e3a\u5c0f\u5199\u5b57\u6bcd\u7684\u8868\u8fbe\u5f0f\u662f_______\u3002", "A)\u2019a\u2019<=c<=\u2019z\u2019\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)(c>=\u2019a\u2019)\u2016(c<=\u2019z\u2019)", "C)(\u2019a\u2019<=C)and(\u2019z\u2019>=C)\u00a0\u00a0\u00a0 D)(c>=\u2019a\u2019)&&(c<=\u2019z\u2019)", "D", "(c>=\u2018a\u2019)\u548c(c<=\u2018z\u2019)\u7684\u5173\u7cfb\u5e94\u8be5\u662f\u201c\u4e0e\u201d\u7684\u5173\u7cfb\u3002", "\u00a0", "(25)\u4e0b\u5217\u4e0d\u5408\u6cd5\u7684main\u51fd\u6570\u547d\u4ee4\u884c\u53c2\u6570\u7684\u8868\u793a\u5f62\u5f0f\u662f_______\u3002", "A)main(n a,char*c[])\uff1b\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0B)main(ac,av)int arc\uff1bchar**av\uff1b", "C)main(C,V)int c,char*v[]\uff1b\u00a0\u00a0\u00a0 D)main(argc\uff0cargv)int argc\uff1bchar argv[]\uff1b", "D", "main\u51fd\u6570\u7684\u53c2\u6570\u901a\u5e38\u6709\u4e24\u4e2a\uff0c\u524d\u8005\u4e3a\u6574\u578b\uff0c\u540e\u8005\u4e3a\u5b57\u7b26\u578b\u6307\u9488\u6570\u7ec4\u3002\u53c2\u6570\u7684\u540d\u5b57\u53ef\u4ee5\u662f\u4efb\u610f\u5408\u6cd5\u7684\u6807\u8bc6\u7b26\u3002\u800c\u4e14\uff0c\u5f62\u5982**av\u4e0e*av[]\u7b49\u4ef7\uff0c\u6240\u4ee5\u9009\u9879A\u3001B\u3001c\u5747\u6b63\u786e\uff0c\u9009\u9879D\u662f\u9519\u8bef\u7684\u3002", "\u00a0", "(26)\u4ee5\u4e0b\u6240\u5217\u7684\u5404\u51fd\u6570\u9996\u90e8\u4e2d\uff0c\u6b63\u786e\u7684\u662f_______\u3002", "A)void play(var a\uff1aInteger,var b\uff1aInteger)", "B)void play(int a,b)", "C)void play(int a,int b)", "D)Sub play(a as integer,b as integer)", "C", "\u9664\u9009\u9879c\u9879\u5916\uff0c\u5176\u5b83\u5404\u9879\u90fd\u6ca1\u6709\u6309\u7167c\u8bed\u8a00\u4e2d\u7684\u51fd\u6570\u5b9a\u4e49\u89c4\u5219\u5b9a\u4e49\u51fd\u6570\u3002", "\u00a0", "(27)\u5728c\u8bed\u8a00\u4e2d\uff0c\u5f15\u7528\u6570\u7ec4\u5143\u7d20\u65f6\uff0c\u5176\u6570\u7ec4\u4e0b\u6807\u7684\u6570\u636e\u7c7b\u578b\u5141\u8bb8\u662f_______\u3002", "A)\u6574\u578b\u5e38\u91cf\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)\u6574\u578b\u8868\u8fbe\u5f0f", "C)\u6574\u578b\u5e38\u91cf\u6216\u6574\u578b\u8868\u8fbe\u5f0f\u00a0\u00a0 D)\u4efb\u4f55\u7c7b\u578b\u7684\u8868\u8fbe\u5f0f", "C", "c\u8bed\u8a00\u89c4\u5b9a\u53ea\u80fd\u9010\u4e2a\u5f15\u7528\u6570\u7ec4\u5143\u7d20\u800c\u4e0d\u80fd\u4e00\u6b21\u5f15\u7528\u6574\u4e2a\u6570\u7ec4\uff0c\u6570\u636e\u5143\u7d20\u7684\u8868\u793a\u5f62\u5f0f\u4e3a\u6570\u7ec4\u540d[\u4e0b\u6807]\uff0c\u4e0b\u6807\u53ef\u4ee5\u662f\u6574\u578b\u5e38\u91cf\u6216\u6574\u578b\u8868\u8fbe\u5f0f\u3002", "\u00a0", "(28)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f_______\u3002", "fun(int x,inty,int z)", "{z=x*x+y*y\uff1b}", "main()", "{", "int a=3l\uff1a", "fun(5,2,a)\uff1b", "printf(\u201d\uff05d\u201d\uff0ca)\uff1b", "}", "A)0\u00a0\u00a0\u00a0 B)29\u00a0\u00a0\u00a0 C)3l\u00a0\u00a0\u00a0 D)\u65e0\u5b9a\u503c", "C", "\u672c\u9898\u4e2d\uff0ca\u7684\u503c\u5e76\u6ca1\u6709\u6539\u53d8\uff0c\u56e0\u4e3a\u4f20\u9012\u5230\u51fd\u6570\u4e2d\u7684\u662f\u53d8\u91cf\u503c\u3002", "\u00a0", "(29)\u4e0b\u5217\u7a0b\u5e8f\u6bb5\u7684\u8f93\u51fa\u7ed3\u679c\u662f__________\u3002", "void fun(\u3001int *x,int *y)", "{primf(\u201d\uff05d\uff05d\u201d\uff0c*x\uff0c*y)\uff1b*x=3\uff1b*y=4\uff1b}", "main()", "{", "int\u00a0 x=l\uff0cy=2\uff1b", "fun(&y\uff0c&x)\uff1b", "printf(\u201d\uff05d\uff05d\u201d\uff0cx\uff0cy)\uff1b", "}", "A)2 1 4 3\u00a0\u00a0\u00a0 B)12 l2\u00a0\u00a0\u00a0 C)l 2 3 4\u00a0\u00a0\u00a0 D)21 l2", "A", "\u672c\u9898\u4e2d\u51fd\u6570\u4f20\u9012\u7684\u662f\u53d8\u91cf\u7684\u5730\u5740\uff0c\u5982\u679c\u5f62\u53c2\u5728\u51fd\u6570\u4e2d\u53d1\u751f\u6539\u53d8\uff0c\u76f8\u5bf9\u5e94\u7684\u5b9e\u53c2\u4e5f\u5c31\u6709\u4e86\u6539\u53d8\u3002", "\u00a0", "(30)\u5bf9\u4e8e\u4e0b\u9762\u7684\u7a0b\u5e8f", "#include<stdio\uff0eh>", "#include<string\uff0eh>", "char*scmp(char*s1,char*s2)", "{", "if(strcmp(sl,s2)<0)retum(s1)\uff1b", "else return(s2)\uff1b", "}", "main()", "{", "int i\uff1bchar string[20]\uff0cstr[3][20]\uff1b", "for(I=0\uff1bi<3\uff1bi++)gets(str[i])\uff1b", "strcpy(string,scmp(str[0],str[1]))\uff1b", "strcpy(string,scmp(string,str[2]))\uff1b", "printf(\u201d\uff05s\uff3cn\u201d,string)\uff1b", "}", "\u82e5\u8fd0\u884c\u65f6\u4f9d\u6b21\u8f93\u5165\uff1aabcd\u3001abba\u548cabc\u4e09\u4e2a\u5b57\u7b26\u4e32\uff0c\u5219\u8f93\u51fa\u7ed3\u679c\u4e3a________\u3002", "A)abcd\u00a0\u00a0\u00a0 B)abba\u00a0\u00a0\u00a0 C)abc\u00a0\u00a0\u00a0 D)abca", "B", "\u672c\u9898\u81ea\u5b9a\u4e49\u51fd\u6570semp()\u7684\u4f5c\u7528\u662f\u6bd4\u8f83\u5b57\u7b26\u4e32s1\u548cs2\u7684\u5927\u5c0f\uff0c\u5982\u679csl<s2\uff0c\u51fd\u6570\u8fd4\u56des1\u7684\u503c\uff0c\u5426\u5219\u8fd4\u56des2\u7684\u503c\u3002\u82e5\u8fd0\u884c\u65f6\u4f9d\u6b21\u8f93\u5165abed\u3001abba\u548cabe\u4e09\u4e2a\u5b57\u7b26\u4e32\uff0c\u6267\u884cstrcpy(string,scmp(str[O]\uff0cstr[1]))\uff1b\u540e\uff0cstring\u7684\u503c\u4e3aabba\uff0c\u518d\u6267\u884cstrepy(string,scmp(string,str[2]))\uff1b\uff0c\u7531\u4e8escmp(string,str[2])\u8fd4\u56destring\u7684\u503c", "abba\uff0c\u518d\u62f7\u8d1d\u5230\u5b57\u7b26\u4e32\u6570\u7ec4string\u4e2d\uff0c\u6240\u4ee5\u672c\u9898\u8f93\u51faabba\u3002", "\u00a0", "(31)\u4e0b\u5217\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f__________\u3002", "main()", "{", "char a[10]={9,8,7,6,5,4,3,2,1\uff0cO}\uff0c*p=a+5\uff1b", "print\u201d\uff05d*\u2013p)\uff1b", "}", "A)\u975e\u6cd5\u00a0\u00a0\u00a0 B)a[4]\u7684\u5730\u5740\u00a0 \u00a0\u00a0C)5\u00a0\u00a0\u00a0 D)3", "C", "\u672c\u9898\u4e2dchar*p=a+5\uff1b\u5373\u76f8\u5f53\u4e8ep=&a[5]\uff0c\u800c\u2013p\uff0c\u662f\u5148\u8981\u51cf1\uff0c\u5219printf\u8bed\u53e5\u8981\u8f93\u51fa\u7684\u503c\u5c31\u662fa[4]\u3002", "\u00a0", "(32)\u5bf9\u4e0b\u9762\u7684\u7a0b\u5e8f\u8fdb\u884c\u7f16\u8bd1\u4e0e\u8fde\u63a5\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6c\uff0eexe\uff0c\u5e76\u5728DOS\u547d\u4ee4\u63d0\u793a\u7b26\u4e0b\u8f93\u5165\uff1a", "c I said\u201dI loveChina\u201d!", "\u7a0b\u5e8f\u4ee3\u7801\u5982\u4e0b\uff1a", "main(\u3001int argc,char*argv[])", "{", "printf(\u201c\uff05d\u201d,argC)\uff1b", "}", "\u5176\u8f93\u51fa\u7ed3\u679c\u4e3a________\u3002", "A)4\u00a0\u00a0\u00a0 B)5\u00a0\u00a0\u00a0 C)6\u00a0\u00a0\u00a0 D)7", "B", "\u5e26\u53c2\u6570\u7684main()\u51fd\u6570\u5e38\u7528\u5f62\u5f0f\u4e3a\uff1amain(int argc,ehar*argv[])", "\u5176\u4e2d\uff0c\u53c2\u6570\u7684\u4e2a\u6570\u7531C\u7a0b\u5e8f\u8fd0\u884c\u65f6\u81ea\u52a8\u8ba1\u7b97\u51fa\u6765\u3002\u5b57\u7b26\u578b\u6307\u9488\u6570\u7ec4argv\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5b58\u653e\u547d\u4ee4\u540d\uff0c\u5176\u540e\u5404\u4e2a\u5143\u7d20\u4f9d\u6b21\u5b58\u653e\u547d\u4ee4\u884c\u4e2d\u5404\u4e2a\u53c2\u6570\u7684\u9996\u5730\u5740\uff1b\u6574\u578b\u53d8\u91cfarge\u7528\u6765\u8bb0\u5f55\u547d\u4ee4\u884c\u4e2d\u7684\u53c2\u6570\u4e2a\u6570\uff0c\u6587\u4ef6\u540d\u4e5f\u4f5c\u4e3a\u4e00\u4e2a\u53c2\u6570\uff0c\u5bf9\u4e8e\u547d\u4ee4\u884c\u4e2d\u53cc\u5f15\u53f7\u5185\u7684\u5b57\u7b26\u4e32\uff0c\u5373\u4f7f\u6709\u7a7a\u683c\u5206\u5f00\uff0c\u4e5f\u53ea\u7b97\u662f\u4e00\u4e2a\u53c2\u6570\uff0c\u540c\u65f6\u53cc\u5f15\u53f7\u672c\u8eab\u4e0d\u7b97\u53c2\u6570\u7684\u5185\u5bb9\uff0c\u56e0\u6b64\u672c\u9898argc\u7684\u503c\u7b49\u4e8e5", "\u00a0", "(33)\u4e0b\u5217\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f________\u3002", "void fun(int *a,int *b)", "{", "int *k\uff1a", "k=a\uff1ba-b\uff1bb=k\uff1b", "}", "main()", "{", "int a=3\uff0cb=6\uff0c*x=&a\uff0c*y=&b\uff1b", "fun(x\uff0cy)\uff1b", "printf[\u201d\uff05d\uff05d\uff0ef\uff0ca\uff0cb)\uff1b", "}", "A)6 3\u00a0\u00a0\u00a0 B)36\u00a0\u00a0\u00a0 C)\u7f16\u8bd1\u51fa\u9519\u00a0\u00a0\u00a0 D)0 0", "B", "\u672c\u9898\u4e2d\u4e3b\u51fd\u6570\u91cc\u7684x\u3001y\uff0cfun\u51fd\u6570\u91cc\u7684a\u3001b\u3001k\uff0c\u8fd9\u4e9b\u90fd\u662f\u6307\u9488\uff0cfun\u51fd\u6570\u4e2d\u53ea\u662f\u5c06a\u3001b\u8fd9\u4e24\u4e2a\u6307\u9488\u4ea4\u6362\u4e86\u4f4d\u7f6e\uff0c\u800c\u5e76\u6ca1\u6709\u6539\u53d8\u4e3b\u51fd\u6570\u4e2d\u53d8\u91cfa\u3001b\u7684\u503c\u3002", "\u00a0", "(34)\u82e5\u6709\u5b9a\u4e49\uff1aint*p[3]\uff1b\uff0c\u5219\u4ee5\u4e0b\u53d9\u8ff0\u4e2d\u6b63\u786e\u7684\u662f________\u3002", "A)\u5b9a\u4e49\u4e86\u4e00\u4e2a\u57fa\u7c7b\u578b\u4e3aint\u7684\u6307\u9488\u53d8\u91cfp\uff0c\u8be5\u53d8\u91cf\u6709\u4e09\u4e2a\u6307\u9488", "B)\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6307\u9488\u6570\u7ec4p\uff0c\u8be5\u6570\u7ec4\u542b\u6709\u4e09\u4e2a\u5143\u7d20\uff0c\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f\u57fa\u7c7b\u578b\u4e3aint\u7684\u6307\u9488", "C)\u5b9a\u4e49\u4e86\u4e00\u4e2a\u540d\u4e3a+p\u7684\u6574\u578b\u6570\u7ec4\uff0c\u8be5\u6570\u7ec4\u542b\u6709\u4e09\u4e2aint\u7c7b\u578b\u5143\u7d20", "D)\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53ef\u6307\u5411\u4e00\u7ef4\u6570\u7ec4\u7684\u6307\u9488\u53d8\u91cfp\uff0c\u6240\u6307\u4e00\u7ef4\u6570\u7ec4\u5e94\u5177\u6709\u4e09\u4e2aint\u7c7b\u578b\u5143\u7d20", "B", "\u7531\u4e8e\u8fd0\u7b97\u7b26[]\u4f18\u5148\u7ea7\u6bd4*\u9ad8\uff0cint*p[3]\uff1b\u76f8\u5f53\u4e8eint *(p[3])\uff1b\u8868\u793a\u6570\u7ec4p\u7684\u4e09\u4e2a\u5143\u7d20\u90fd\u662f\u6307\u9488\u53d8\u91cf\uff0c\u4e14\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f\u57fa\u7c7b\u578b\u4e3aint\u7684\u6307\u9488\u3002", "\u00a0", "(35)\u6709\u4ee5\u4e0b\u7a0b\u5e8f\uff1a", "void swapl(int *a,int *b)", "{int *c=a\uff1b", "a=b\uff0cb=c\uff1b", "}", "void swap2(int *a,int *b)", "{", "int c=*a\uff1a", "*a=*b\uff0c*b=c\uff1b", "}", "main()", "(int a=lO,b=15\uff1b", "swapl(&a\uff0c&b)\uff1b", "printf(\u201d\uff05d\uff0c\uff05d\uff0c\u201d\uff0ca\uff0cb)\uff1b", "a=lO,b=15\uff1b", "swap2(&a\uff0c&b)\uff1b", "printf(\u201d\uff05d\uff0c\uff05dt\uff0e\uff0ca\uff0cb)\uff1b", "}", "\u5176\u8f93\u51fa\u7ed3\u679c\u4e3a_________\u3002", "A)15,10,10,15 \u00a0\u00a0\u00a0B)15,10,15,10 \u00a0\u00a0C)10,15,10,15 \u00a0\u00a0D)10,15,15,10", "D", "C\u8bed\u8a00\u89c4\u5b9a\uff0c\u5b9e\u53c2\u53d8\u91cf\u5bf9\u5f62\u53c2\u53d8\u91cf\u7684\u6570\u636e\u4f20\u9012\u662f\u201c\u503c\u4f20\u9012\u201d\uff0c\u53ea\u7531\u5b9e\u53c2\u4f20\u7ed9\u5f62\u53c2\uff0c\u800c\u4e0d\u80fd\u7531\u5f62\u53c2\u4f20\u56de\u6765\u7ed9\u5b9e\u53c2\u3002\u5728\u5185\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u540e\uff0c\u5f62\u53c2\u5355\u5143\u88ab\u91ca\u653e\uff0c\u5b9e\u53c2\u5355\u5143\u4ecd\u4fdd\u7559\u5e76\u7ef4\u6301\u539f\u503c\u3002\u672c\u9898\u4e2dswapl()\u51fd\u6570\u4e2d\uff0c\u867d\u7136\u6539\u53d8\u4e86\u5f62\u53c2\u6307\u9488\u7684\u503c\uff0c\u4f46\u5b9e\u53c2\u6307\u9488\u7684\u503c\u5e76\u6ca1\u6709\u6539\u53d8\uff0c\u6240\u4ee5\u6267\u884c\u7b2c\u4e00\u4e2aprintf\u540e\u5e94\u8f93\u51fa10,15,\uff1bswap2()\u51fd\u6570\u5b9e\u73b0\u4e86\u4ea4\u6362\u4e24\u4e2a\u53d8\u91cfa\u548cb\u7684\u503c\uff0c\u56e0\u6b64\u6267\u884c\u7b2c\u4e8c\u4e2aprintf\u540e\u8f93\u51fa\u4ea4\u6362\u540e\u7684\u503c15,10\uff0c\u6240\u4ee5\u672c\u9898\u7b54\u6848\u4e3aD\u3002", "\u00a0", "(36)\u5f53\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u5b9e\u53c2\u662f\u4e00\u4e2a\u6570\u7ec4\u540d\uff0c\u5219\u5411\u51fd\u6570\u4f20\u9001\u7684\u662f__________\u3002", "A)\u6570\u7ec4\u7684\u957f\u5ea6\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)\u6570\u7ec4\u7684\u9996\u5730\u5740", "C)\u6570\u7ec4\u6bcf\u4e00\u4e2a\u5143\u7d20\u7684\u5730\u5740\u00a0\u00a0\u00a0 D)\u6570\u7ec4\u6bcf\u4e2a\u5143\u7d20\u4e2d\u7684\u503c", "B", "\u5f53\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u5b9e\u53c2\u662f\u4e00\u4e2a\u6570\u7ec4\u540d\uff0c\u5219\u5411\u51fd\u6570\u4f20\u9001\u7684\u662f\u6570\u7ec4\u7684\u9996\u5730\u5740\uff0c\u51fd\u6570\u4e2d\u7684\u5f62\u53c2\u53ef\u5b9a\u4e49\u6210\u4ee5\u4e0b\u4e09\u79cd\u5f62\u5f0f\uff1a", "\u2460\u5f62\u53c2\u5b9a\u4e49\u6210\u6570\u7ec4\uff1b", "\u2461\u5f62\u53c2\u5b9a\u4e49\u6210\u53ef\u53d8\u957f\u6570\u7ec4\uff1b", "\u2462\u5f62\u53c2\u5b9a\u4e49\u4e3a\u6307\u9488\u53d8\u91cf\u3002", "\u00a0", "(37)\u4e0b\u9762\u7684\u7a0b\u5e8f\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "#define r16", "#ifr==16", "void p(int a)", "{", "printf(\u201c\uff05x\u201d,a)\uff1b", "}", "#else", "voidp(int a)", "{", "printf(\u201c\uff05d\u201d,a)\uff1b", "}", "#endif", "main()", "{", "p(32)\uff1b", "}", "A)32\u00a0\u00a0\u00a0 B)20\u00a0\u00a0\u00a0 C)\u7f16\u8bd1\u65f6\u9519\u8bef\u00a0 D)\u8fd0\u884c\u65f6\u9519\u8bef", "B", "\u201c#define r16\u201d\u7684\u4f5c\u7528\u662f\u6307\u5b9a\u7528\u6807\u8bc6\u7b26r\u6765\u4ee3\u66ff16\uff0c\u56e0\u6b64\u7a0b\u5e8f\u7f16\u8bd1\u65f6\u53ea\u7f16\u8bd1#if\u90e8\u5206\uff0c\u6545\u7a0b\u5e8f\u8fd0\u884c\u65f6\uff0c\u6253\u5370\u8f93\u51fa\u5341\u516d\u8fdb\u5236\u768432\uff0c\u537320\u3002", "\u00a0", "(38)\u8bbe\u6709\u4ee5\u4e0b\u58f0\u660e\u8bed\u53e5", "struct ex", "{\u00a0\u00a0 intx\uff1bfloaty\uff1bchar z\uff1b}example\uff1b", "\u5219\u4e0b\u9762\u7684\u53d9\u8ff0\u4e2d\u4e0d\u6b63\u786e\u7684\u662f_________\u3002", "A)struct\u662f\u7ed3\u6784\u4f53\u7c7b\u578b\u7684\u5173\u952e\u5b57\u00a0 \u00a0\u00a0B)example\u662f\u7ed3\u6784\u4f53\u7c7b\u578b\u540d", "C)x\uff0cy\uff0cz\u90fd\u662f\u7ed3\u6784\u4f53\u6210\u5458\u540d\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)struct ex\u662f\u7ed3\u6784\u4f53\u7c7b\u578b", "B", "example\u662f\u7ed3\u6784\u4f53\u53d8\u91cf\u540d\u3002", "\u00a0", "(39)\u4ee5\u4e0b\u53ea\u6709\u5728\u4f7f\u7528\u65f6\u624d\u4e3a\u8be5\u7c7b\u578b\u53d8\u91cf\u5206\u914d\u5185\u5b58\u7684\u5b58\u50a8\u7c7b\u8bf4\u660e\u662f_________\u3002", "A)auto\u548cstmic\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)auto\u548cregister", "C)register\u548cstatic\u00a0\u00a0\u00a0 \u00a0\u00a0D)extem\u548cregister", "B", "extem\u3001register\u3001static\u3001auto\u5206\u522b\u662f\u5b9a\u4e49\u5916\u90e8\u53d8\u91cf\u3001\u5bc4\u5b58\u5668\u53d8\u91cf\u3001\u9759\u6001\u53d8\u91cf\u3001\u81ea\u52a8\u53d8\u91cf\uff0c\u5176\u4e2d\uff0c\u81ea\u52a8\u53d8\u91cf\u548c\u5bc4\u5b58\u5668\u53d8\u91cf\u5c5e\u4e8e\u52a8\u6001\u5b58\u50a8\uff0c\u8c03\u7528\u65f6\u4e34\u65f6\u5206\u914d\u5355\u5143\uff1b\u800c\u9759\u6001\u53d8\u91cf\u548c\u5916\u90e8\u53d8\u91cf\u5c5e\u4e8e\u9759\u6001\u5b58\u50a8\uff0c\u5728\u6574\u4e2a\u7a0b\u5e8f\u8fd0\u884c\u65f6\u90fd\u5b58\u5728\u3002", "\u00a0", "(40)\u4e0b\u9762\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f__________\u3002", "fut(int**s,int p[2][3])", "{", "**s=p[l][1]\uff1b", "}", "main()", "{", "int a[2][3]={1\uff0c3\uff0c5\uff0c7\uff0c9\uff0c1l}\uff0c*p\uff1b", "p=(int*)malloc(sizeof(int))\uff1b", "fut(&p\uff0ca)\uff1b", "printf(\u201d\uff05d\uff3cn\u201d\uff0c*p)\uff1b", "}", "A)l\u00a0\u00a0\u00a0 B)7\u00a0\u00a0\u00a0 C)9\u00a0\u00a0\u00a0 D)ll", "C", "\u672c\u9898a[2][3]\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u5177\u6709\u4e24\u884c\u4e09\u5217\u7684\u5143\u7d20\u7684\u6570\u7ec4\uff0cmalloc()\u51fd\u6570\u7684\u4f5c\u7528\u662f\u5f00\u8f9f\u4e86\u4e00\u4e2a\u957f\u5ea6\u4e3asizeof(int)\u7684\u5185\u5b58\u533a\uff0cp\u4e3a\u6307\u5411\u6574\u578b\u6570\u636e\u7684\u6307\u9488\u53d8\u91cf\uff0c\u7a0b\u5e8f\u8c03\u7528fur()\u51fd\u6570\uff0c\u5c06\u7b2c\u4e00\u884c\u7b2c\u4e00\u5217\u5bf9\u5e94\u7684\u5143\u7d20\u503c\u8d4b\u7ed9\u4e00s\uff0c\u7531\u4e8e\u6570\u7ec4\u4e2d\u7b2c\u4e00\u884c\u7b2c\u4e00\u5217\u5bf9\u5e94\u7684\u5143\u7d20\u4e3a9\uff0c\u6240\u4ee5\u672c\u9898\u8f93\u51fa\u503c9\u3002", "\u00a0", "(41)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "main()", "{", "inti\uff0ck\uff0ca[10]\uff0cp[3]\uff1b", "k=5\uff1b", "for(I=O\uff1bi<10\uff1bi++)a[i]=i\uff1b", "for(i=0\uff1bi<3\uff1bi++)p[i]=a[I*(i+1)]\uff1b", "fbr(i=O\uff1bi<3\uff1bi++)k+=p[I]*2\uff1b", "printf(\u201d\uff05d\uff3cn\u201d\uff0ck)\uff1b", "}", "A)20\u00a0\u00a0\u00a0 B)2l\u00a0\u00a0\u00a0 C)22\u00a0\u00a0\u00a0 D)23", "B", "\u6309\u7167\u7a0b\u5e8f\u7684\u6d41\u7a0b\u8d70\u4e00\u904d\uff0c\u53ef\u4ee5\u5f97\u5230\uff0cp[O]=0\uff0cp[1]=2\uff0cp[3]=6\uff1b\u6267\u884c\u4e09\u6b21k+=p[i]*2\uff0c\u76f8\u5f53\u4e8ek=5+0*2+2*2+6*2=21", "\u00a0", "(42)\u5f53\u6267\u884c\u4e0b\u9762\u7684\u7a0b\u5e8f\u65f6\uff0c\u5176\u8f93\u51fa\u7ed3\u679c\u4e3a__________\u3002", "union st", "{", "int a\uff1a", "charb\uff1a", "}", "main()", "{", "union st s\uff1a", "char*p=(char*)&s\uff1b", "s\uff0ea=Ox3132\uff1b", "s\uff0eb=Ox33\uff1b", "printf(\u201d\uff05c\u201d\uff0c*p)\uff1b", "}", "A)l\u00a0\u00a0\u00a0 B)2\u00a0\u00a0\u00a0 C)3\u00a0\u00a0\u00a0 D)\u4e0d\u786e\u5b9a", "C", "\u5171\u7528\u4f53\u7c7b\u578b\u7ed3\u6784\u7684\u7279\u70b9\u662f\u4f7f\u51e0\u4e2a\u4e0d\u540c\u7684\u53d8\u91cf\u5171\u5360\u540c\u4e00\u6bb5\u5185\u5b58\uff0c\u4f46\u5728\u6bcf\u4e00\u77ac\u65f6\u53ea\u80fd\u5b58\u653e\u5176\u4e2d\u4e00\u79cd\uff0c\u800c\u4e0d\u662f\u540c\u65f6\u5b58\u653e\u51e0\u79cd\uff0c\u5171\u7528\u4f53\u53d8\u91cf\u4e2d\u8d77\u4f5c\u7528\u7684\u6210\u5458\u662f\u6700\u540e\u4e00\u6b21\u5b58\u653e\u7684\u6210\u5458\uff0c\u5728\u5b58\u5165\u4e00\u4e2a\u65b0\u7684\u6210\u5458\u540e\u539f\u6709\u7684\u6210\u5458\u5c31\u5931\u53bb\u4f5c\u7528\u3002\u56e0\u6b64\u672c\u9898\u8d77\u4f5c\u7528\u7684\u662f\u6210\u5458b\u7684\u503c\uff0c\u6240\u4ee5\u7a0b\u5e8f\u6253\u5370\u8f93\u51fa3\u3002", "\u00a0", "(43)\u5f53\u6267\u884c\u4e0b\u9762\u7684\u7a0b\u5e8f\u65f6\uff0c\u5982\u679c\u8f93\u5165ABc\uff0c\u5219\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "#include\u201dstdio\uff0eh\u201d", "#include\u201dstring\uff0eH\u201d", "main()", "{\u00a0 char ss[10]=\u201d12345\u201d\uff1b", "gets(ss)\uff1bstrcat(ss,\u201d6789\u2033)\uff1b", "printf(\u201d\uff05s\uff3cn\u201d\uff0css)\uff1b", "}", "A)ABC6789\u00a0\u00a0\u00a0 B)ABC67\u00a0\u00a0\u00a0 C)12345ABC6\u00a0 \u00a0\u00a0D)ABC456789", "A", "strcat(str1\uff0cstr2)\u5408\u5e76\u5b57\u7b26\u4e32\u51fd\u6570\u7684\u4f5c\u7528\u662f\u628astr2\u6240\u6307\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\u8fde\u63a5\u5230strl\u5b57\u7b26\u4e32\u7684\u540e\u9762\uff0c\u81ea\u52a8\u5220\u53bbstrl\u539f\u6765\u4e32\u4e2d\u7684\u2018\uff3c0\u2019\u3002\u4e3a\u4e86\u8fdb\u884c\u8fd9\u9879\u64cd\u4f5c\uff0c\u8981\u6c42strl\u6240\u6307\u7684\u5b57\u7b26\u4e32\u540e\u9762\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u6765\u5bb9\u7eb3\u2019str2\u6240\u6307\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u3002\u51fd\u6570\u503c\u4e3astrl\u6240\u6307\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684\u5730\u5740\u3002", "\u00a0", "(44)main(im argo\uff0cchar*argv[])", "{", "while(\u2013argc>0)printf(\u201d\uff05s\u201d,argv[argc])\uff1b", "printf(\u201d\uff3cn\u201d)\uff1b", "}", "\u5047\u5b9a\u4ee5\u4e0a\u7a0b\u5e8f\u7ecf\u7f16\u8bd1\u548c\u8fde\u63a5\u540e\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6PROG\uff0eExE\uff0c\u5982\u679c\u5728\u6b64\u53ef\u6267\u884c\u6587\u4ef6\u6240", "\u5728\u76ee\u5f55\u7684Dos\u63d0\u793a\u7b26\u4e0b\u952e\u5165\uff1aPROG ABcDEFGHIJKL\u2199\uff0c\u5219\u8f93\u51fa\u7ed3\u679c\u4e3a_________\u3002", "A)ABCDEFG\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)IJHL", "C)ABCDEFGHIJKL\u00a0\u00a0\u00a0 \u00a0D)lJKLABCDEFGH", "C", "\u672c\u9898\u4e3b\u51fd\u6570\u5e26\u6709\u4e24\u4e2a\u53c2\u6570\uff0c\u4e00\u4e2aint\u578b\u53d8\u91cfargc\uff0c\u53e6\u4e00\u4e2a\u662fchar\u578b\u7684\u4e00\u7ef4\u4e00\u7ea7\u6307\u9488\u6570\u7ec4argv\u3002\u5f53\u4e3b\u51fd\u6570\u88ab\u6267\u884c\u65f6\uff0c\u7cfb\u7edf\u81ea\u52a8\u5c06\u6839\u636e\u547d\u4ee4\u884c\u7684\u60c5\u51b5\uff0c\u5206\u522b\u7ed9\u4e3b\u51fd\u6570\u7684\u4e24\u4e2a\u53c2\u6570\u8d4b\u503c\u3002Arge\u4e2d\u5b58\u653e\u547d\u4ee4\u884c\u4e2d\u547d\u4ee4\u5b57\u548c\u53c2\u6570\u7684\u603b\u548c\u7684\u4e2a\u6570\uff0cargv\u7528\u6765\u5b58\u653e\u547d\u4ee4\u884c\u4e2d\u547d\u4ee4\u5b57\u548c\u6240\u6709\u53c2\u6570\u7684\u5b57\u7b26\u4e32\u7684\uff0c\u5e76\u89c4\u5b9aargv[0]\u5b58\u653e\u547d\u4ee4\u5b57\u5b57\u7b26\u4e32\uff0cargv[1]\u7528\u6765\u5b58\u653e\u7b2c\u4e00\u4e2a\u53c2\u6570\u7684\u5b57\u7b26\u4e32\uff0cargv[2]\u7528\u6765\u5b58\u653e\u7b2c2\u4e2a\u53c2\u6570\u7684\u5b57\u7b26\u4e32\uff0c\u4f9d\u6b21\u7c7b\u63a8\u3002", "\u9898\u4e2dargc\u7684\u503c\u662f2\uff0c\u6267\u884c\u5b8c\u2013argc\u540e\u4e3a1\uff0c\u8f93\u51faargv[1]\uff0c\u6b64\u6570\u7ec4\u5b58\u5728\u7b2c\u4e00\u4e2a\u53c2\u6570\u7684\u5b57\u7b26\u4e32ABCDEFGHIJKL\u3002", "\u00a0", "(45)\u8bbechar\u578b\u53d8\u91cfx\u4e2d\u7684\u503c\u4e3a10100lll\uff0c\u5219\u8868\u8fbe\u5f0f(2+x)\u201c(\uff5e3)\u7684\u503c\u4e3a_________\u3002", "A)10101001\u00a0\u00a0\u00a0 B)10101000\u00a0\u00a0\u00a0 C)lll11101\u00a0\u00a0\u00a0 D)0101010l", "D", "\u5f02\u6216\u8fd0\u7b97\u7b26(n)\u7684\u8fd0\u7b97\u89c4\u5219\u662f\uff1a\u53c2\u52a0\u8fd0\u7b97\u7684\u4e24\u4e2a\u76f8\u5e94\u4f4d\u540c\u53f7\uff0c\u5219\u7ed3\u679c\u4e3a0(\u5047)\uff1a\u5f02\u53f7\u5219\u4e3a-1(\u771f)\u3002", "\u53d6\u53cd\u8fd0\u7b97\u7b26(\uff5e)\u7684\u8fd0\u7b97\u89c4\u5219\u662f\uff1a\u5bf9\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\u6309\u4f4d\u53d6\u53cd\uff0c\u5373\u5c060\u53d8\u4e3al\uff0cl\u53d8\u4e3aO\u3002\u672c\u9898(\uff5e3)\u662f\u5bf93(\u4e8c\u8fdb\u5236\u5f62\u5f0f\u4e3a00000011)\u6309\u4f4d\u53d6\u53cd\u537311111100\u3002", "\u8868\u8fbe\u5f0f(2+x)n(\uff5e3)\u7684\u503c\u5c31\u7b49\u4ef7\u4e8e(00000010+10100111)^11111100\uff0c\u7ed3\u679c\u4e3a01010101\u3002", "\u00a0", "(46)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "long fun(int n)", "{\u00a0\u00a0 long s\uff1b", "if(n==1\u2016n==2)s=2\uff1b", "else s=n-fun(n-1)\uff1b", "return S\uff1a", "}", "main()", "{primf(\u201d\uff05ld\uff3cn\u201d\uff0cfun(3))\uff1b}", "A)l\u00a0\u00a0\u00a0 B)2\u00a0\u00a0\u00a0 C)3\u00a0\u00a0\u00a0 D)4", "A", "\u8fd9\u662f\u4e00\u4e2a\u9012\u5f52\u51fd\u6570\u3002\u9012\u5f52\u7684\u7ed3\u675f\u6761\u4ef6\u662f\uff0cn=l\u6216\u8005n=2\u3002\u6309\u7167\u7a0b\u5e8f\u987a\u5e8f\uff0c\u5373\u53ef\u5f97\u51fa\u672c\u9898\u7ed3\u679c\u4e3al\u3002", "\u00a0", "(47)\u4ee5\u4e0b\u7a0b\u5e8f\u8bd5\u56fe\u628a\u4ece\u7ec8\u7aef\u8f93\u5165\u7684\u5b57\u7b26\u8f93\u51fa\u5230\u540d\u4e3aabe\uff0etxt\u7684\u6587\u4ef6\u4e2d\uff0c\u76f4\u5230\u4ece\u7ec8\u7aef\u8bfb\u5165\u5b57\u00a0 \u7b26\u4e32\u6491\u53f7\u65f6\u7ed3\u675f\u8f93\u5165\u548c\u8f93\u51fa\u64cd\u4f5c\uff0c\u4f46\u7a0b\u5e8f\u6709\u9519", "#include<stdio\uff0eh>", "main()", "{", "FILE*fout\uff1a", "char ch\uff1a", "fout=fopen(\u2019abc\uff0etxt\u2019\uff0c\u2019w\u2019)\uff1b", "ch=fgetc(stdin)\uff1b", "while(chI_\u2019))\u2019)", "{", "fputc(ch\uff0cfout)\uff1b", "ch=fgetc(stdin)\uff1b", "}", "fclose(fout)\uff1b", "}", "\u51fa\u9519\u7684\u539f\u56e0\u662f_________\u3002", "A)\u51fd\u6570fopen\u8c03\u7528\u5f62\u5f0f\u9519\u8bef\u00a0\u00a0\u00a0 B)\u8f93\u5165\u6587\u4ef6\u6ca1\u6709\u5173\u95ed", "C)\u51fd\u6570\u9f9fetc\u8c03\u7528\u5f62\u5f0f\u9519\u8bef\u00a0\u00a0\u00a0 D)\u6587\u4ef6\u6307\u9488stdin\u6ca1\u6709\u5b9a\u4e49", "A", "\u672c\u9898\u8003\u67e5\u7684\u662f\u6587\u4ef6\u7684\u6253\u5f00\u51fd\u6570fopen()\uff0c\u5176\u8c03\u7528\u65b9\u5f0f\u901a\u5e38\u4e3a\uff1aFLIE*fp\uff1bfp=fopen(\u6587\u4ef6\u540d\uff0c\u4f7f\u7528\u6587\u4ef6\u65b9\u5f0f)\uff1b\uff0c\u5982\uff1afp=fopen(\u201cabc\uff0etxt\u201d,\u201dw\u201d)\uff1b\u8868\u793a\u8981\u6253\u5f00\u540d\u5b57\u4e3aabc\uff0etxt\u7684\u6587\u4ef6\uff0c\u4f7f\u7528\u6587\u4ef6\u65b9\u5f0f\u5199\u5165\u3002fopen\u51fd\u6570\u5e26\u56de\u6307\u5411abc\uff0etxt\u6587\u4ef6\u7684\u6307\u9488\u5e76\u8d4b\u7ed9fp\uff0c\u5373\u5ba1\u6307\u5411\u6587\u4ef6abc\uff0etxt\u3002", "\u00a0", "(48)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f_______\u3002", "#define SQR(X) X*X", "main()", "{ \u00a0\u00a0int a=16,k=2,m=l\uff1b", "a\uff0f=SQR(k+m)\uff0fSQR(k+m)\uff1b", "printf(\u201c\uff05d\uff3cn\u201d,a)\uff1b", "}", "A)16\u00a0\u00a0\u00a0 B)2\u00a0\u00a0\u00a0 C)9\u00a0\u00a0\u00a0 D)l", "B", "c\u8bed\u8a00\u5728\u9884\u7f16\u8bd1\u65f6\u9047\u5230\u5e26\u5b9e\u53c2\u7684\u5b8f\u540d\uff0c\u5219\u6309\u547d\u4ee4\u884c\u4e2d\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u4ece\u5de6\u5230\u53f3\u8fdb\u884c\u7f6e\u6362\u3002\u5728\u505a\u8fd9\u9898\u65f6\uff0c\u4e5f\u4e0d\u59a8\u5c06\u8fd0\u7528\u7f6e\u6362\u6cd5\u3002\u5f97\u5230\uff1aa\uff0f=k+m*k+m\uff0fk+m*k+m=16\uff0f7=2\u3002\u6ce8\uff1aa\u4e3a\u6574\u578b\uff0c\u6240\u4ee5\u5728\u505a\u9664\u6cd5\u65f6\uff0c\u81ea\u52a8\u53d6\u6574\u3002", "\u00a0", "(49)\u5047\u5b9a\u5efa\u7acb\u4e86\u4ee5\u4e0b\u94fe\u8868\u7ed3\u6784\uff0c\u6307\u9488p\u3001q\u5206\u522b\u6307\u5411\u5982\u56fe\u6240\u793a\u7684\u7ed3\u70b9\uff0c\u5219\u4ee5\u4e0b\u53ef\u4ee5\u5c06q\u6240\u6307\u7ed3\u70b9\u4ece\u94fe\u8868\u4e2d\u5220\u9664\u5e76\u91ca\u653e\u8be5\u7ed3\u70b9\u7684\u8bed\u53e5\u7ec4\u662f________\u3002", "\u2193p \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2193q", "head\u2192\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2192\u2026\u2192\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2192\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2192\u2026\u2026", "datanext", "A)free(q)\uff1bp->next=q->next\uff1b", "B)(*p)\uff0enext=(*q)\uff0enext\uff1bfree(q)\uff1b", "C)q=(*q)\uff0enext\uff1b(*p)\uff0enext=q\uff1bfree(q)\uff1b", "D)q=q->next\uff1bp->next=q\uff1bp=p->next\uff1bfree(p)\uff1b", "B", "\u9009\u9879A\u7684\u9519\u8bef\u5728\u4e8e\uff0c\u5148\u5df2\u7ecf\u628aq\u7ed3\u70b9\u7ed9\u91ca\u653e\uff0c\u65e0\u6cd5\u518d\u8fdb\u884c\u4f59\u4e0b\u8bed\u53e5\u4e86\uff1a\u9009\u9879c\u548cD\u7684\u9519\u8bef\u5728\u4e8e\u56e0\u4e3a\u6709\u4e86q=(*q)\uff0enext\u505a\u4e86\u8d4b\u503c\uff0c\u5219free(q)\u91ca\u653e\u4e86\u539f\u6765q\u540e\u9762\u7684\u4e00\u4e2a\u7ed3\u70b9\u3002", "\u00a0", "(50)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f__________\u3002", "main()", "{\u00a0\u00a0 int x=05\uff1bchar z=\u2019a\u2019\uff1b", "printf(\u201c\uff05d\uff3cn\u201d,(x&1)&&(z<\u2019z\u2018))\uff1b)", "A)0\u00a0\u00a0\u00a0 B)1\u00a0\u00a0\u00a0 C)2\u00a0\u00a0\u00a0 D)3", "B", "\u201c&\u201d\u662f\u4f4d\u8fd0\u7b97\u7b26\u8868\u793a\u6309\u4f4d\u4e0e\u8fd0\u7b97\uff0c\u201c&&\u201d\u662f\u903b\u8f91\u8fd0\u7b97\u7b26\u5f53\u5176\u4e24\u8fb9\u7684\u8868\u8fbe\u5f0f\u90fd\u4e3a\u771f\u65f6\u8fd4\u56de\u771f\u503c\u3002\u5173\u7cfb\u8868\u8fbe\u5f0f()&1)&&(z<\u2018z\u2019)\uff0c(x&1)\u4e3a\u771f\uff0c(Z<\u2018Z\u2019)\u4e5f\u4e3a\u771f\uff0c\u4e24\u8005\u76f8\u4e0e\uff0c\u81ea\u7136\u4e5f\u4e3a\u771f\uff0c\u4ee5\u6574\u578b\u8f93\u51fa\uff0c\u5219\u8f93\u51fa1\u3002", "\u00a0", "\u4e8c\u3001\u586b\u7a7a\u9898(\u6bcf\u7a7a2\u5206\uff0c\u517140\u5206)", "\u8bf7\u5c06\u6bcf\u4e00\u4e2a\u7a7a\u7684\u6b63\u786e\u7b54\u6848\u5199\u5728\u7b54\u9898\u5361\u7684\u30101\u3011\u81f3\u301020\u3011\u5e8f\u53f7\u7684\u6a2a\u7ebf\u4e0a\uff0c\u7b54\u5728\u8bd5\u5377\u4e0a\u4e0d\u5f97\u00a0\u00a0\u00a0 \u5206\u3002", "(1)\u6808\u7684\u57fa\u672c\u8fd0\u7b97\u6709\u4e09\u79cd\uff1a\u5165\u6808\u3001\u9000\u6808\u548c", "\u3002", "\u30101\u3011\u8bfb\u6808\u9876\u5143\u7d20", "\u6808\u7684\u57fa\u672c\u8fd0\u7b97\u6709\u4e09\u79cd\uff1a\u5165\u6808\u3001\u9000\u6808\u548c\u8bfb\u6808\u9879\u5143\u7d20\u3002", "\u5165\u6808\u8fd0\u7b97\u662f\u6307\u5728\u6808\u9879\u4f4d\u7f6e\u63d2\u5165\u4e00\u4e2a\u65b0\u5143\u7d20\u3002\u8fd9\u4e2a\u8fd0\u7b97\u6709\u4e24\u4e2a\u57fa\u672c\u64cd\u4f5c\uff1a\u9996\u5148\u5c06\u6808\u9876\u6307\u9488\u8fdb\u4e00(\u5373top\u52a01)\uff0c\u7136\u540e\u5c06\u65b0\u5143\u7d20\u63d2\u5165\u5230\u6808\u9876\u6307\u9488\u6307\u5411\u7684\u4f4d\u7f6e\u3002", "\u9000\u6808\u8fd0\u7b97\u662f\u6307\u53d6\u51fa\u6808\u9876\u5143\u7d20\u5e76\u8d4b\u7ed9\u4e00\u4e2a\u6307\u5b9a\u7684\u53d8\u91cf\u3002\u8fd9\u4e2a\u8fd0\u7b97\u6709\u4e24\u4e2a\u57fa\u672c\u64cd\u4f5c\uff1a\u9996\u5148\u5c06\u6808\u9876\u5143\u7d20(\u6808\u9879\u6307\u9488\u6307\u5411\u7684\u5143\u7d20)\u8d4b\u7ed9\u4e00\u4e2a\u6307\u5b9a\u7684\u53d8\u91cf\uff0c\u7136\u540e\u5c06\u6808\u9879\u6307\u9488\u9000\u4e00(\u5373top\u51cf1)\u3002", "\u8bfb\u6808\u9876\u5143\u7d20\u662f\u6307\u5c06\u6808\u9876\u5143\u7d20\u8d4b\u7ed9\u4e00\u4e2a\u6307\u5b9a\u7684\u53d8\u91cf\u3002\u8fd9\u4e2a\u8fd0\u7b97\u4e0d\u5220\u9664\u6808\u9876\u5143\u7d20\uff0c\u53ea\u662f\u5c06\u5b83\u7684\u503c\u8d4b\u7ed9\u4e00\u4e2a\u53d8\u91cf\u3002", "\u00a0", "(2)\u5728\u9762\u5411\u5bf9\u8c61\u65b9\u6cd5\u4e2d\uff0c\u4fe1\u606f\u9690\u853d\u662f\u901a\u8fc7\u5bf9\u8c61\u7684", "\u6027\u6765\u5b9e\u73b0\u7684\u3002", "\u30102\u3011\u5c01\u88c5", "\u8f6f\u4ef6\u5de5\u7a0b\u7684\u57fa\u672c\u539f\u5219\u5305\u62ec\u62bd\u8c61\u3001\u4fe1\u606f\u9690\u853d\u3001\u6a21\u5757\u5316\u3001\u5c40\u90e8\u5316\u3001\u786e\u5b9a\u6027\u3001\u4e00\u81f4\u6027\u3001\u5b8c\u5907\u6027\u548c\u53ef\u9a8c\u8bc1\u6027\u3002", "\u4fe1\u606f\u9690\u853d\u662f\u6307\u91c7\u7528\u5c01\u88c5\u6280\u672f\uff0c\u5c06\u7a0b\u5e8f\u6a21\u5757\u7684\u5b9e\u73b0\u7ec6\u8282\u9690\u85cf\u8d77\u6765\uff0c\u4f7f\u6a21\u5757\u63a5\u53e3\u5c3d\u91cf\u7b80\u5355\u3002", "\u00a0", "(3)\u6570\u636e\u6d41\u7684\u7c7b\u578b\u6709", "\u548c\u4e8b\u52a1\u578b\u3002", "\u30103\u3011\u53d8\u6362\u578b", "\u5178\u578b\u7684\u6570\u636e\u6d41\u7c7b\u578b\u6709\u4e24\u79cd\uff1a\u53d8\u6362\u578b\u548c\u4e8b\u52a1\u578b\u3002", "\u53d8\u6362\u578b\uff1a\u662f\u6307\u4fe1\u606f\u6cbf\u8f93\u5165\u901a\u8def\u8fdb\u5165\u7cfb\u7edf\uff0c\u540c\u65f6\u7531\u5916\u90e8\u5f62\u5f0f\u53d8\u6362\u4e3a\u5185\u90e8\u5f62\u5f0f\uff0c\u8fdb\u5165\u7cfb\u7edf\u7684\u4fe1\u606f\u901a\u8fc7\u53d8\u6362\u4e2d\u5fc3\uff0c\u7ecf\u52a0\u5de5\u5904\u7406\u4ee5\u540e\u518d\u6cbf\u8f93\u51fa\u901a\u8def\u53d8\u6362\u6210\u5916\u90e8\u5f62\u5f0f\u79bb\u5f00\u8f6f\u4ef6\u7cfb\u7edf\u3002", "\u4e8b\u52a1\u578b\uff1a\u5728\u5f88\u591a\u8f6f\u4ef6\u5e94\u7528\u4e2d\uff0c\u5b58\u5728\u67d0\u79cd\u4f5c\u4e1a\u6570\u636e\u6d41\uff0c\u5b83\u53ef\u4ee5\u5f15\u53d1\u4e00\u4e2a\u6216\u591a\u4e2a\u5904\u7406\uff0c\u8fd9\u4e9b\u5904\u7406\u80fd\u591f\u5b8c\u6210\u8be5\u4f5c\u4e1a\u8981\u6c42\u7684\u529f\u80fd\uff0c\u8fd9\u79cd\u6570\u636e\u6d41\u5c31\u53eb\u505a\u4e8b\u52a1\u3002", "\u00a0", "(4)\u6570\u636e\u5e93\u7cfb\u7edf\u4e2d\u5b9e\u73b0\u5404\u79cd\u6570\u636e\u7ba1\u7406\u529f\u80fd\u7684\u6838\u5fc3\u8f6f\u4ef6\u79f0\u4e3a", "\u3002", "\u30104\u3011\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\u6216DBMS", "\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\u662f\u6570\u636e\u5e93\u7684\u673a\u6784\uff0c\u5b83\u662f\u4e00\u79cd\u7cfb\u7edf\u8f6f\u4ef6\uff0c\u8d1f\u8d23\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\u7ec4\u7ec7\u3001\u6570\u636e\u64cd\u7eb5\u3001\u6570\u636e\u7ef4\u62a4\u3001\u63a7\u5236\u53ca\u4fdd\u62a4\u548c\u6570\u636e\u670d\u52a1\u7b49\u3002\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\u662f\u6570\u636e\u5e93\u7cfb\u7edf\u7684\u6838\u5fc3\u3002", "\u00a0", "(5)\u5173\u7cfb\u6a21\u578b\u7684\u6570\u636e\u64cd\u7eb5\u5373\u662f\u5efa\u7acb\u5728\u5173\u7cfb\u4e0a\u7684\u6570\u636e\u64cd\u7eb5\uff0c\u4e00\u822c\u6709", "\u00a0\u3001\u589e\u52a0\u3001\u5220\u9664\u00a0\u00a0\u00a0 \u548c\u4fee\u6539\u56db\u79cd\u64cd\u4f5c\u3002", "\u30105\u3011\u67e5\u8be2", "\u5173\u7cfb\u6a21\u578b\u7684\u6570\u636e\u64cd\u7eb5\u5373\u662f\u5efa\u7acb\u5728\u5173\u7cfb\u4e0a\u7684\u6570\u636e\u64cd\u7eb5\uff0c\u4e00\u822c\u6709\u67e5\u8be2\u3001\u589e\u52a0\u3001\u5220\u9664\u548c\u4fee\u6539\u56db\u79cd\u64cd\u4f5c\u3002", "\u6570\u636e\u67e5\u8be2\uff1a\u7528\u6237\u53ef\u4ee5\u67e5\u8be2\u5173\u7cfb\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\uff0c\u5b83\u5305\u62ec\u4e00\u4e2a\u5173\u7cfb\u5185\u7684\u67e5\u8be2\u4ee5\u53ca\u591a\u4e2a\u5173\u7cfb\u95f4\u7684\u67e5\u8be2\u3002", "\u6570\u636e\u5220\u9664\u7684\u57fa\u672c\u5355\u4f4d\u662f\u4e00\u4e2a\u5173\u7cfb\u5185\u7684\u5143\u7ec4\uff0c\u5b83\u7684\u529f\u80fd\u662f\u5c06\u6307\u5b9a\u5173\u7cfb\u5185\u7684\u6307\u5b9a\u5143\u7ec4\u5220\u9664\u3002", "\u6570\u636e\u63d2\u5165\u4ec5\u5bf9\u4e00\u4e2a\u5173\u7cfb\u800c\u8a00\uff0c\u5728\u6307\u5b9a\u5173\u7cfb\u4e2d\u63d2\u5165\u4e00\u4e2a\u6216\u591a\u4e2a\u5143\u7ec4\u3002", "\u6570\u636e\u4fee\u6539\u662f\u5728\u4e00\u4e2a\u5173\u7cfb\u4e2d\u4fee\u6539\u6307\u5b9a\u7684\u5143\u7ec4\u548c\u5c5e\u6027\u3002", "\u00a0", "(6)\u4e0b\u5217\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f", "\u3002", "main()", "{", "int a=l\uff0cb=2\uff1b", "a=a+b\uff1bb=a-b\uff1ba=a-b\uff1b", "printf(\u201d\uff05d\uff0c\uff05d\uff3cn\u201d\uff0ca\uff0cb)\uff1b", "}", "\u30106\u30112,1", "\u672c\u9898\u4e2d\uff0c\u6267\u884ca=a+b\u65f6\uff0ca=l\uff0cb=2\uff0ca=l+2=3\uff1bb=a-b\u65f6\uff0ca=3\uff0cb=2\uff0cb=3-2=1\uff1ba=a-b\u65f6\uff0ca=3\uff0cb=l\uff0ca=3\uff0e1=2\uff1b\u56e0\u6b64\uff0c\u672c\u9898\u7684\u8f93\u51fa\u662f2,1\uff0e", "\u00a0", "(7)\u4e0b\u5217\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f16\uff0e00\uff0c\u8bf7\u586b\u7a7a\uff1b\uff0c", "main()", "{", "int a=9,b=2\uff1a", "float x=", "\uff0cy=1\uff0e1\uff0cz\uff1b", "z=a\uff0f2+b*x\uff0fy+l\uff0f2\uff1b", "printf(\u201d\uff055\uff0e2tin\u201d,z)\uff1b", "}", "\u30107\u30116\uff0e6", "\u672c\u9898\uff0c\u5df2\u77e5\u7ed3\u679cz=16\uff0e00\uff0c\u537316\uff0e0=a\uff0f2+b*x\uff0fy+l\uff0f2\uff0c\u5206\u522b\u628aa\u3001b\u4ee3\u5165\uff0c\u5f97\u523016\uff0e0=9\uff0f2+2\u2033x\uff0f1\uff0e1+1\uff0f2\u3002", "\u56e0\u4e3aa=9\uff0ca\u662f\u6574\u578b\uff0c\u6240\u4ee59\uff0f2\u7684\u503c\u5728\u6ca1\u6709\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\u65f6\uff0c\u7b49\u4e8e4\uff0c1\uff0f2\u540c\u7406\uff0c\u7b49\u4e8e0\u3002\u4ee3\u5165\u6c42\u4e00\u5143\u4e00\u6b21\u65b9\u7a0b\uff0c\u5f88\u5bb9\u6613\u5c31\u53ef\u4ee5\u5f97\u51fax=6\uff0e6\u3002", "\u00a0", "(8)\u7528\u4ee5\u4e0b\u8bed\u53e5\u8c03\u7528\u5e93\u51fd\u6570malloc\uff0c\u4f7f\u5b57\u7b26\u6307\u9488st\u6307\u5411\u5177\u670911\u4e2a\u5b57\u8282\u7684\u52a8\u6001\u5b58\u50a8\u7a7a\u95f4\uff0c\u00a0\u00a0\u00a0 \u8bf7\u586b\u7a7a\u3002", "st=(chhr*)", "\uff1b", "181 malloc(11)", "malloc\u51fd\u6570\u7684\u683c\u5f0f\u662f\uff1avoid*(\u6216char*)malloc(size)\uff0csize\u8868\u793a\u5e94\u5206\u914d\u7684\u5b58\u50a8\u533a\u3002\u6b64\u9898\u8981\u5206\u914d11\u5b57\u8282\u7684\u5355\u5143\uff0c\u628a11\u4ee3\u5165\u5373\u53ef\u3002", "\u00a0", "(9)\u4e0b\u5217\u7a0b\u5e8f\u6bb5\u7684\u8f93\u51fa\u7ed3\u679c\u662f", "\u3002", "main()", "{char b[]=\u201dHello\uff0cyou\u201d\uff1b", "b[5]=0\uff1b", "printf(\u201d\uff05s\uff3cn\u201d\uff0cb)\uff1b", "}", "\u30109\u3011Hello", "\u5b57\u7b26\u4e32\u4e2d\uff0c\u6570\u503c0\u6216\u7b26\u53f7\u2018\uff3cO\u2019\u8868\u793a\u5b57\u7b26\u4e32\u7684\u7ed3\u675f\u3002\u672c\u9898\u4e2d\uff0cb[5]\u88ab\u8d4b\u4e860\u503c\uff0c\u8868\u660e\u5b57\u7b26\u4e32b\u7684\u7b2c\u516d\u4e2a\u5b57\u7b26\u5c31\u662f\u7ed3\u675f\u6807\u5fd7\u3002\u56e0\u6b64\uff0c\u53ea\u8f93\u51fa\u524d\u4e94\u4e2a\u5b57\u7b26\uff0c\u5373Hello\u3002", "\u00a0", "(10)\u4e0b\u5217\u7a0b\u5e8f\u6bb5\u7684\u8f93\u51fa\u7ed3\u679c\u662f", "\u3002", "int\u00a0 n=\u2019c\u2019\uff1a", "switch(n++)", "{default\uff1aprintf(\u201derror\u201d)\uff1bbreak\uff1b", "case\u3002a\u2019\uff1a", "case\u2019A\u3002\uff1a", "caseIb\u2019\uff1a", "tase\u2019B\u2019\uff1aprintf(\u201dgood\u201d)\uff1bbreak\uff1b", "case\u2019c\u2019\uff1acase\u2019C\u2019\uff1aprintf(\u201dpass\u201d)\uff1b", "case\u2019d\u2019\uff1acase\u2019D\u2019\uff1aprintf(\u201dwarn\u201d)\uff1b", "}", "\u301010\u3011passwarn", "n++\u662f\u5728\u6267\u884c\u5b8c\u5176\u6240\u5728\u7684\u8bed\u53e5\u540e\u518d\u52a0l\uff0c\u56e0\u6b64\uff0c\u5728\u6267\u884ccase\u7684\u65f6\u5019\uff0cn\u7684\u503c\u4f9d\u7136\u4e3a\u2018c\u2019\uff0c\u6267\u884ccase\u2018c\u2019\u540e\u9762\u7684\u8bed\u53e5\uff0c\u5148\u6253\u5370\u51fa\u201cpass\u201d\uff1b\u5728\u6267\u884c\u5b8ccase\u2018c\u2019\u540e\uff0c\u672a\u9047\u5230break\u8df3\u51faswitch\uff0c\u4fbf\u63a5\u7740\u6267\u884c\u4e0b\u9762\u7684\u8bed\u53e5\uff0c\u53c8\u6253\u5370\u51fawarn\u3002\u6240\u4ee5\u6b64\u9898\u8f93\u51fa\u7ed3\u679c\u662f\uff1apasswarn\u3002", "\u00a0", "(11)\u4ee5\u4e0b\u7a0b\u5e8f\u901a\u8fc7\u51fd\u6570\u6307\u9488p\u8c03\u7528\u51fd\u6570mn\uff0c\u8bf7\u5728\u586b\u7a7a\u680f\u5185\uff0c\u5199\u51fa\u5b9a\u4e49\u53d8\u91cfp\u7684\u8bed\u53e5\u3002", "void fun(int\u2018x,int*y)", "{\u00a0 \u2026\u2026\u00a0 }", "main()", "{ int a=lO,b=20\uff1b", "\uff1a", "p=fun\uff1b\u00a0 p(&a\uff0c&b)\uff1b", "\u2026\u2026", "}", "\u301011\u3011void(*p)()\uff1b", "\u8981\u5b9a\u4e49p\u4e3a\u6307\u5411\u51fd\u6570\u7684\u6307\u9488\u53d8\u91cf\uff0c\u9700\u5199\u6210\uff1avoid(*p)()\uff1b\u6ce8\u610f+p\u4e24\u4fa7\u7684\u62ec\u5f27\u4e0d\u53ef\u4ee5\u7701\u7565\uff0c\u8868\u793ap\u5148\u4e0e*\u7ed3\u5408\uff0c\u662f\u6307\u9488\u53d8\u91cf\uff0c\u518d\u4e0e\u540e\u9762\u7684()\u7ed3\u5408\uff0c\u8868\u793a\u6b64\u6307\u9488\u53d8\u91cf\u6307\u5411\u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u65e0\u8fd4\u56de\u503c(\u540cfun\u51fd\u6570)\u3002", "\u00a0", "(12)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c", "\u3002", "main()", "{", "int p[7]={ll\uff0c13,14,15,16,17,18}\uff1b", "int i=0,J=0\uff1b", "while(1<7&&p[i]\uff052==1)j+=p[i++]\uff1b", "printf(\u201d\uff05d\uff3cn\u201dJ)\uff1b", "}", "\u301012\u301124", "\u672c\u9898\u7a0b\u5e8f\u5b9a\u4e49\u4e86\u4e00\u7ef4\u6570\u7ec4p\uff0c\u6709\u4e03\u4e2a\u6570\u7ec4\u5143\u7d20\uff0c\u6574\u578b\u53d8\u91cfi\uff0c\uff0ej\u521d\u503c\u5206\u522b\u4e3a0\uff0c\u5f53while\u7684\u6761\u4ef6\u8868\u8fbe\u5f0f(i<7&&p[i]\uff052==1)\u7684\u503c\u4e3a\u771f\u65f6\uff0c\u6267\u884c\u8bed\u53e5j+=p[i++]\uff1b\uff0c\u5982\uff1a\u5f53i=0\u65f6\uff0ci<7\u4e3a\u771f\uff0cp[I]\uff052=11\uff052=1\uff0c\u8868\u8fbe\u5f0f(p[i]\uff052\uff1a=1)\u7684\u503c\u4e3a\u771f\uff0c\u6240\u4ee5\u6574\u4e2a\u8868\u8fbe\u5f0f(i<7&&p[i]\uff052==1)\u7684\u503c\u4e3a\u771f\uff0c\u6267\u884cj=j+p[i++]=0+11=11\uff0ci=l\uff1b\u4f9d\u6b21\u7c7b\u63a8\u53ef\u4ee5\u5f97\u51fa\u7b54\u684824\u3002", "\u00a0", "(13)\u4e0b\u5217\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f", "\u00a0\u3002", "void fun(int *n)", "{", "while((*n)\u2013)\uff1b", "printf(\u201d\uff05d\u201d\uff0c++(*n))\uff1b", "}", "main()", "{\u00a0 int\u00a0 a=100\uff1b", "fun(&a)\uff1b", "}", "\u301013\u30110", "\u5728\u51fd\u6570fun()\u4e2d\uff0cwhile((*n)\u2013)\u662f\u5148\u5f15\u7528+n\u7684\u503c\uff0c\u518d\u505a(*n)\u2013\u8fd0\u7b97\uff0c\u6240\u4ee5\u5faa\u73af\u7ed3\u675f\u65f6*n\u7684\u503c\u4e3aO\uff0c\u518d\u505a(+n)\u2013\u8fd0\u7b97\u540e\uff0c*n\u7684\u503c\u4e3a-1\uff1b\u6267\u884c++(*n)\u540e\uff0c*n\u7684\u503c\u662fO\u3002", "\u00a0", "(14)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f", "\u3002", "main()", "{", "int arr[]={30,25,20,15\uff0c10\uff0c5}\uff0c*p=arr\uff1b", "p++\uff1b", "printf(\u201d\uff05d\uff3cn\u201d\uff0c*(p+3))\uff1b", ")", "\u301014\u301110", "\u6574\u578b\u6307\u9488\u6700\u521d\u88ab\u8d4b\u7684\u503c\u662f\u6570\u7ec4art\u7684\u5934\u6307\u9488\uff0c\u5373\u6307\u5411\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d2030\uff0cp++\u540e\uff0c\u6307\u9488\u6307\u5411\u6570\u7ec4\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u5373*p=arr[1]=25\uff0c\u5728\u6267\u884c*(p+3)\u65f6\uff0c\u5219\u76f8\u5f53\u4e8ea[1+3]\uff0c\u537310\u3002\u56e0\u6b64\uff0c\u8f93\u51fa\u5e94\u4e3a10\u3002", "\u00a0", "(15)\u4ee5\u4e0b\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f", "\u3002", "main()", "{", "char a[]=\u201dLanguage\u201d\uff0cb[]=\u201dPrograme\u201d\uff1b", "char *p1\uff0c*p2\uff1b", "int k\uff1a", "pl=a,p2=b\uff1b", "for(k=0\uff1bk<=7\uff1bk++)", "if(*(pl+k)==*(p2+k))printf(\u201d\uff05c\u201d\uff0c*(pl+k))\uff1b", "}", "\u301015\u3011gae", "\u672c\u9898\u5b9a\u4e49\u4e86\u4e24\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4a[]\uff0cb[]\uff0c\u5b57\u7b26\u578b\u6307\u9488\u53d8\u91cfp1\u548cp2\uff0c\u4e14\u5206\u522b\u6307\u5411\u5b57\u7b26\u4e32\u6570\u7ec4a\u548cb\uff0c\u6267\u884cfor\u5faa\u73af\uff0c\u5f53if(*(pl+k)==*(p2+k))\u6761\u4ef6\u4e3a\u771f\uff0c\u6267\u884c\u8f93\u51fa*(pl+k)\u5bf9\u5e94\u7684\u5b57\u7b26\u3002\u5373\u5f53k=0\u65f6\uff0c*(pl+k)\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\u6570\u7ec4a\uff0e\u4e2d\u7684\u5b57\u7b26L\uff0c*(p2+k)\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\u6570\u7ec4b\u4e2d\u7684\u5b57\u7b26P\uff0c\u56e0\u6b64if(*(pl+k)==*(p2+k))\u6761\u4ef6\u4e3a\u5047\uff0c\u4e0d\u6267\u884cprintf\u8bed\u53e5\uff0c\u4f9d\u6b21\u7c7b\u63a8\uff0c\u5c06\u5b57\u7b26\u4e32\u6570\u7ec4a\u548cb\u4e2d\u5bf9\u5e94\u4f4d\u7f6e\u4e0a\u7684\u5b57\u7b26\u4e00\u4e00\u6bd4\u8f83\uff0c\u5982\u679c\u5bf9\u5e94\u4f4d\u7f6e\u4e0a\u7684\u5b57\u7b26\u76f8\u540c\uff0c\u5219\u8f93\u51fa\u8be5\u5b57\u7b26\u3002", "\u00a0", "(16)\u4e0b\u9762\u7a0b\u5e8f\u628a\u4ece\u7ec8\u7aef\u8bfb\u5165\u7684\u6587\u672c(\u7528@\u4f5c\u4e3a\u6587\u672c\u7ed3\u675f\u6807\u5fd7)\u8f93\u51fa\u5230\u4e00\u4e2a\u540d\u4e3abi\uff0edat\u7684\u65b0\u6587\u00a0\u00a0\u00a0 \u4ef6\u4e2d\uff0c\u8bf7\u586b\u7a7a\u3002", "#include\u00a0 \u201dstdio\uff0eH\u201d", "FILE\u00a0 *fp\uff1b", "main()", "{\u00a0\u00a0 char ch\uff1b", "if((fp=fopen(", "))==NULL)exit(0)\uff1b", "while((ch=getchar())!=\u2019@\u2019)fputc(ch\uff0cfp)\uff1b", "fclose(fp)\uff1b", "}", "\u3010l6\u3011\u201cbi\uff0eDat\u201d, \u201cw\u201d\u6216\u201cbi\uff0edat\u201d\uff0c\u201cw+\u201d\u6216\u201cbi\uff0edat\u201d\uff0c\u201cr+\u201d", "\u672c\u9898\u7684\u8003\u70b9\u662ffopen()\u51fd\u6570\uff0c\u6b64\u51fd\u6570\u7684\u683c\u5f0f\u662ffopen(\u6587\u4ef6\u540d\uff0c\u4f7f\u7528\u6587\u4ef6\u65b9\u5f0f)\uff0c\u9898\u76ee\u7684\u8981\u6c42\u662f\u5c06\u4ece\u952e\u76d8\u8bfb\u5165\u7684\u6587\u672c\u5199\u5230\u6587\u4ef6\u4e2d\uff0c\u56e0\u6b64\u9009\u62e9\u7684\u6253\u5f00\u65b9\u5f0f\u5e94\u8be5\u662f\u201cw\u201d(\u53ea\u5199)\u3002\u6216\u8005\u662f\u8bfb\u5199\u201cr+\u201d\u6216\u201cw+\u201d\u3002", "\u00a0", "(17)\u4ee5\u4e0b\u7a0b\u5e8f\u662f\u4ece\u7ec8\u7aef\u8bfb\u5165\u6570\u636e\u5230\u6570\u7ec4\u4e2d\uff0c\u7edf\u8ba1\u5176\u4e2d\u6b63\u6570\u7684\u4e2a\u6570\uff0c\u5e76\u8ba1\u7b97\u5b83\u4eec\u7684\u548c\u3002\u8bf7\u586b\u7a7a\u3002", "main()", "{", "int i\uff0ca[20]\uff0csum,count\uff1b", "sum=count=", "\uff1b", "for(i=0\uff1bi<20\uff1bi++)scanf(\u201d\uff05d\u201d\uff0c", "\u00a0)\uff1b", "for(i=0\uff1bi<20\uff1bi++)", "{", "if(a[I]>0)", "{ count++\uff1b", "sum+= ", "\uff1b", "}", "}", "printf(\u201dsum=\uff05d,count=\uff05d\uff3cn\u201d,sum,count)\uff1b", "}", "\u301017\u30110", "\u301018\u3011&a[i]", "\u301019\u3011a[i]", "\u672c\u9898\u8981\u6c42\u4ece\u7ec8\u7aef\u8bfb\u5165\u6570\u636e\u5230\u6570\u7ec4\u4e2d\uff0c\u7edf\u8ba1\u5176\u4e2d\u6b63\u6570\u7684\u4e2a\u6570\uff0c\u5e76\u8ba1\u7b97\u5b83\u4eec\u7684\u548c\u3002\u7a0b\u5e8f\u4e2d\u9996\u5148\u8981\u5bf9\u5b58\u653e\u6b63\u6570\u4e2a\u6570\u7684\u53d8\u91cfcount\u53ca\u5b58\u653e\u548c\u503c\u7684\u53d8\u91cfsum\u521d\u59cb\u5316\u4e3a0\uff0c\u6240\u4ee5\u7b2c\u4e00\u7a7a\u5e94\u586b\uff1a0\u3002\u63a5\u7740\u8981\u6c42\u4ece\u7ec8\u7aef\u8bfb\u5165\u6570\u636e\u5230\u6570\u7ec4\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7scanf\u51fd\u6570\u5b9e\u73b0\uff0c\u56e0\u6b64\u7b2c\u4e8c\u7a7a\u5e94\u586b\uff1a&a[i]\u3002\u6700\u540e\u901a\u8fc7sum+=a[i]\uff1b\u8bed\u53e5\u7d2f\u52a0\u6b63\u6570a[i]\u7684\u503c\u5230sum\u4e2d\uff0c\u56e0\u6b64\u7b2c\u4e09\u7a7a\u5e94\u586b\uff1aa[i]\u3002", "\u00a0", "(18)\u82e5\u53d8\u91cfn\u4e2d\u7684\u503c\u4e3a24\uff0c\u5219pint\u51fd\u6570\u5171\u8f93\u51fa", "\u884c\u3002", "void prnt(int n\uff0cint aa[])", "{\u00a0 int i\uff1b", "for(I=1\uff1bi<=n\uff1bi++)", "{\u00a0\u00a0 printf(\u201d\uff056d\u201d,aa[I])\uff1b", "if(!(i\uff055\uff0cJ)printf(\u201c\uff3cn\u201d)\uff1b", "}", "printf(\u201d\uff3cn\u201d)\uff1b", "}", "\u301020\u30115", "\u672c\u9898\u7684\u5173\u952e\u5728\u4e8eif(!(i\uff055))printf(\u201c\uff3cn\u201d)\uff1b\u8fd9\u53e5\uff0c\u5373\u5982\u679ci\u53ef\u88ab5\u6574\u9664\u65f6\uff0c\u5219\u6362\u884c\u3002i\u503c\u4e3a24\uff0c\u53ef\u4ee5\u88ab5\u6574\u96644\u6b21\uff0c\u5e76\u4f594\uff0c\u56e0\u6b64\uff0cprnt\u51fd\u6570\u5171\u8f93\u51fa5\u884c\uff0c\u6700\u540e\u4e00\u884c\u67094\u4e2a"], "title": "C\u8bed\u8a00\u7b14\u8bd5\u9898\u5e26\u7b54\u6848\uff08\u516d\uff09"},
{"contents": ["\u4e00\u3001\u9009\u62e9\u9898((1)\uff5e(10)\u6bcf\u5c0f\u98982\u5206\uff0c(11)-(50)\u6bcf\u5c0f\u98981\u5206\uff0c\u517160\u5206)", "\u4e0b\u5217\u5404\u9898A)\u3001B)\u3001C)\u3001D)\u56db\u4e2a\u9009\u9879\u4e2d\uff0c\u53ea\u6709\u4e00\u4e2a\u9009\u9879\u662f\u6b63\u786e\u7684\uff0c\u8bf7\u5c06\u6b63\u786e\u9009\u9879\u6d82\u5199", "\u5728\u7b54\u9898\u5361\u76f8\u5e94\u4f4d\u7f6e\u4e0a\uff0c\u7b54\u5728\u8bd5\u5377\u4e0a\u4e0d\u5f97\u5206\u3002", "(1)\u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u7b97\u6cd5\u662f\u6307_______\u3002", "A)\u67e5\u8be2\u65b9\u6cd5\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)\u52a0\u5de5\u65b9\u6cd5", "C)\u89e3\u9898\u65b9\u6848\u7684\u51c6\u786e\u800c\u5b8c\u6574\u7684\u63cf\u8ff0\u00a0\u00a0\u00a0 \u00a0\u00a0D)\u6392\u5e8f\u65b9\u6cd5", "C", "\u8ba1\u7b97\u673a\u7b97\u6cd5\u662f\u6307\u89e3\u9898\u65b9\u6848\u7684\u51c6\u786e\u800c\u5b8c\u6574\u7684\u63cf\u8ff0\uff0c\u5b83\u6709\u4ee5\u4e0b\u51e0\u4e2a\u57fa\u672c\u7279\u5f81:\u53ef\u884c\u6027\u3001\u786e\u5b9a\u6027\u3001\u6709\u7a77\u6027\u548c\u62e5\u6709\u8db3\u591f\u7684\u60c5\u62a5\u3002", "\u00a0", "(2)\u6808\u548c\u961f\u5217\u7684\u5171\u540c\u70b9\u662f_______\u3002", "A)\u90fd\u662f\u5148\u8fdb\u540e\u51fa\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)\u90fd\u662f\u5148\u8fdb\u5148\u51fa", "C)\u53ea\u5141\u8bb8\u5728\u7aef\u70b9\u5904\u63d2\u5165\u548c\u5220\u9664\u5143\u7d20\u00a0\u00a0\u00a0 D)\u6ca1\u6709\u5171\u540c\u70b9", "C", "\u6808\u548c\u961f\u5217\u90fd\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u64cd\u4f5c\u53d7\u9650\u7684\u7ebf\u6027\u8868\uff0c\u53ea\u5141\u8bb8\u5728\u7aef\u70b9\u5904\u8fdb\u884c\u63d2\u5165\u548c\u5220\u9664\u3002\u4e8c\u8005\u7684\u533a\u522b\u662f\uff1a\u6808\u662f\u4e00\u79cd\u201c\u540e\u8fdb\u5148\u51fa\u201d\u7684\u7ebf\u6027\u8868\uff1b\u800c\u961f\u5217\u662f\u4e00\u79cd\u201c\u5148\u8fdb\u5148\u51fa\u201d\u7684\u7ebf\u6027\u8868\u3002", "\u00a0", "(3)\u5df2\u77e5\u4e8c\u53c9\u6811BT\u7684\u540e\u5e8f\u904d\u5386\u5e8f\u5217\u662fdabec\uff0c\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u662fdebac\uff0c\u5b83\u7684\u524d\u5e8f\u904d\u5386\u5e8f\u5217\u662f_______\u3002", "A)cedba\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)acbed \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)decab\u00a0\u00a0\u00a0\u00a0 \u00a0D)deabc", "A", "\u4e8c\u53c9\u6811BT\u7684\u540e\u5e8f\u904d\u5386\u5e8f\u5217\u4e3adabec\uff0c\u6545BT\u7684\u6839\u7ed3\u70b9\u4e3ac\uff1b\u800cBT\u7684\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u662fdebac\uff0c\u5373\u904d\u5386\u5e8f\u5217\u4e2d\u6700\u540e\u4e00\u4e2a\u7ed3\u70b9\u4e3a\u8ddf\u7ed3\u70b9\uff0c\u8bf4\u660eBT\u7684\u53f3\u5b50\u6811\u4e3a\u7a7a\u3002\u7531BT\u7684\u7684\u540e\u5e8f\u904d\u5386\u5e8f\u5217\u548c\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u53ef\u77e5BT\u7684\u5de6\u5b50\u6811(LST)\u7684\u540e\u5e8f\u904d\u5386\u5e8f\u5217\u548c\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u5206\u522b\u4e3adabe\u548cdeba(\u6811\u662f\u9012\u5f52\u5b9a\u4e49\u7684)\uff1a\u6545LST\u7684\u6839\u7ed3\u70b9\u662fe\uff0c\u5728\u7531LST\u7684\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u53ef\u77e5\u5176\u5de6\u5b50\u6811\u4e3ad\u3002\u56e0\u6b64BT\u7684\u524d\u5e8f\u904d\u5386\u5e8f\u5217\u4e3acedba\u3002", "\u00a0", "(4)\u5728\u4e0b\u5217\u51e0\u79cd\u6392\u5e8f\u65b9\u6cd5\u4e2d\uff0c\u8981\u6c42\u5185\u5b58\u91cf\u6700\u5927\u7684\u662f_______\u3002", "A)\u63d2\u5165\u6392\u5e8f\u00a0 \u00a0\u00a0\u00a0B)\u9009\u62e9\u6392\u5e8f\u00a0\u00a0\u00a0 C)\u5feb\u901f\u6392\u5e8f\u00a0\u00a0\u00a0 D)\u5f52\u5e76\u6392\u5e8f", "D", "\u5feb\u901f\u6392\u5e8f\u7684\u57fa\u672c\u601d\u60f3\u662f\uff0c\u901a\u8fc7\u4e00\u8d9f\u6392\u5e8f\u5c06\u5f85\u6392\u5e8f\u8bb0\u5f55\u5206\u5272\u6210\u72ec\u7acb\u7684\u4e24\u90e8\u5206\uff0c\u5176\u4e2d\u4e00\u90e8\u5206\u8bb0\u5f55\u7684\u5173\u952e\u5b57\u5747\u6bd4\u53e6\u4e00\u90e8\u5206\u8bb0\u5f55\u7684\u5173\u952e\u5b57\u5c0f\uff0c\u518d\u5206\u522b\u5bf9\u8fd9\u4e24\u90e8\u5206\u8bb0\u5f55\u7ee7\u7eed\u8fdb\u884c\u6392\u5e8f\uff0c\u4ee5\u8fbe\u5230\u6574\u4e2a\u5e8f\u5217\u6709\u5e8f\uff1b\u63d2\u5165\u6392\u5e8f\u7684\u57fa\u672c\u64cd\u4f5c\u662f\u6307\u5c06\u65e0\u5e8f\u5e8f\u5217\u4e2d\u7684\u5404\u5143\u7d20\u4f9d\u6b21\u63d2\u5165\u5230\u5df2\u7ecf\u6709\u5e8f\u7684\u7ebf\u6027\u8868\u4e2d\uff0c\u4ece\u800c\u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u5e8f\u5217\uff1b\u9009\u62e9\u6392\u5e8f\u7684\u57fa\u672c\u601d\u60f3\u662f\uff1a\u626b\u63cf\u6574\u4e2a\u7ebf\u6027\u8868\uff0c\u4ece\u4e2d\u9009\u51fa\u6700\u5c0f\u7684\u5143\u7d20\uff0c\u5c06\u5b83\u4ea4\u6362\u5230\u8868\u7684\u6700\u524d\u9762(\u8fd9\u662f\u5b83\u5e94\u6709\u7684\u4f4d\u7f6e)\uff0c\u7136\u540e\u5bf9\u5269\u4e0b\u7684\u5b50\u8868\u91c7\u7528\u540c\u6837\u7684\u65b9\u6cd5\uff0c\u76f4\u5230\u8868\u7a7a\u4e3a\u6b62\uff1b\u5f52\u5e76\u6392\u5e8f\u662f\u5c06\u4e24\u4e2a\u6216\u4e24\u4e2a\u4ee5\u4e0a\u7684\u6709\u5e8f\u8868\u7ec4\u5408\u6210\u4e00\u4e2a\u65b0\u7684\u6709\u5e8f\u8868\u3002", "\u00a0", "(5)\u5728\u8bbe\u8ba1\u7a0b\u5e8f\u65f6\uff0c\u5e94\u91c7\u7eb3\u7684\u539f\u5219\u4e4b\u4e00\u662f_______\u3002", "A)\u7a0b\u5e8f\u7ed3\u6784\u5e94\u6709\u52a9\u4e8e\u8bfb\u8005\u7406\u89e3 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)\u4e0d\u9650\u5236goto\u8bed\u53e5\u7684\u4f7f\u7528", "C)\u51cf\u5c11\u6216\u53d6\u6d88\u6ce8\u89e3\u884c\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)\u7a0b\u5e8f\u8d8a\u77ed\u8d8a\u597d", "A", "\u6ee5\u7528goto\u8bed\u53e5\u5c06\u4f7f\u7a0b\u5e8f\u6d41\u7a0b\u65e0\u89c4\u5f8b\uff0c\u53ef\u8bfb\u6027\u5dee\uff1b\u6dfb\u52a0\u7684\u6ce8\u89e3\u884c\u6709\u5229\u4e8e\u5bf9\u7a0b\u5e8f\u7684\u7406\u89e3\uff0c\u4e0d\u5e94\u51cf\u5c11\u6216\u53d6\u6d88\uff1b\u7a0b\u5e8f\u7684\u957f\u77ed\u8981\u4f9d\u7167\u5b9e\u9645\u9700\u8981\u800c\u5b9a\uff0c\u5e76\u4e0d\u662f\u8d8a\u77ed\u8d8a\u597d\u3002", "\u00a0", "(6)\u4e0b\u5217\u4e0d\u5c5e\u4e8e\u8f6f\u4ef6\u8c03\u8bd5\u6280\u672f\u7684\u662f_______\u3002", "A)\u5f3a\u884c\u6392\u9519\u6cd5\u00a0\u00a0 B)\u96c6\u6210\u6d4b\u8bd5\u6cd5\u00a0 C)\u56de\u6eaf\u6cd5\u00a0\u00a0 \u00a0\u00a0D)\u539f\u56e0\u6392\u9664\u6cd5", "B", "\u8c03\u8bd5\u7684\u5173\u952e\u5728\u4e8e\u63a8\u65ad\u7a0b\u5e8f\u5185\u90e8\u7684\u9519\u8bef\u4f4d\u7f6e\u53ca\u539f\u56e0\u3002\u4e3b\u8981\u7684\u8c03\u8bd5\u65b9\u6cd5\u6709\u5f3a\u884c\u6392\u9519\u6cd5\u3001\u56de\u6eaf\u6cd5\u548c\u539f\u56e0\u6392\u9664\u6cd5\u3002", "\u00a0", "(7)\u4e0b\u5217\u53d9\u8ff0\u4e2d\uff0c\u4e0d\u5c5e\u4e8e\u8f6f\u4ef6\u9700\u6c42\u89c4\u683c\u8bf4\u660e\u4e66\u7684\u4f5c\u7528\u7684\u662f_______\u3002", "A)\u4fbf\u4e8e\u7528\u6237\u3001\u5f00\u53d1\u4eba\u5458\u8fdb\u884c\u7406\u89e3\u548c\u4ea4\u6d41", "B)\u53cd\u6620\u51fa\u7528\u6237\u95ee\u9898\u7684\u7ed3\u6784\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u8f6f\u4ef6\u5f00\u53d1\u5de5\u4f5c\u7684\u57fa\u7840\u548c\u4f9d\u636e", "C)\u4f5c\u4e3a\u786e\u8ba4\u6d4b\u8bd5\u548c\u9a8c\u6536\u7684\u4f9d\u636e", "D)\u4fbf\u4e8e\u5f00\u53d1\u4eba\u5458\u8fdb\u884c\u9700\u6c42\u5206\u6790", "D", "\u8f6f\u4ef6\u9700\u6c42\u89c4\u683c\u8bf4\u660e\u4e66\u662f\u9700\u6c42\u5206\u6790\u9636\u6bb5\u7684\u6700\u540e\u6210\u679c\uff0c\u662f\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u7684\u91cd\u8981\u6587\u6863\u4e4b\u4e00\u3002\u5b83\u4e0d\u80fd\u65b9\u4fbf\u5f00\u53d1\u4eba\u5458\u8fdb\u884c\u9700\u6c42\u5206\u6790\u3002", "\u00a0", "(8)\u5728\u6570\u636e\u6d41\u56fe(DFD)\u4e2d\uff0c\u5e26\u6709\u540d\u5b57\u7684\u7bad\u5934\u8868\u793a_______\u3002", "A)\u63a7\u5236\u7a0b\u5e8f\u7684\u6267\u884c\u987a\u5e8f\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)\u6a21\u5757\u4e4b\u95f4\u7684\u8c03\u7528\u5173\u7cfb", "C)\u6570\u636e\u7684\u6d41\u5411\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)\u7a0b\u5e8f\u7684\u7ec4\u6210\u6210\u5206", "C", "\u5728\u6570\u636e\u6d41\u56fe\u4e2d\uff0c\u7528\u6807\u6709\u540d\u5b57\u7684\u7bad\u5934\u8868\u793a\u6570\u636e\u6d41\u3002\u6570\u636e\u6d41\u53ef\u4ee5\u4ece\u52a0\u5de5\u6d41\u5411\u52a0\u5de5\uff0c\u4e5f\u53ef\u4ee5\u4ece\u52a0\u5de5\u6d41\u5411\u6587\u4ef6\u6216\u4ece\u6587\u4ef6\u6d41\u5411\u52a0\u5de5\uff0c\u5e76\u4e14\u53ef\u4ee5\u4ece\u5916\u90e8\u5b9e\u4f53\u6d41\u5411\u7cfb\u7edf\u6216\u4ece\u7cfb\u7edf\u6d41\u5411\u5916\u90e8\u5b9e\u4f53\u3002", "\u00a0", "(9)SQL\u8bed\u8a00\u53c8\u79f0\u4e3a______\u3002", "A)\u7ed3\u6784\u5316\u5b9a\u4e49\u8bed\u8a00\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)\u7ed3\u6784\u5316\u63a7\u5236\u8bed\u8a00", "C)\u7ed3\u6784\u5316\u67e5\u8be2\u8bed\u8a00\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)\u7ed3\u6784\u5316\u64cd\u7eb5\u8bed\u8a00", "C", "\u7ed3\u6784\u5316\u67e5\u8be2\u8bed\u8a00(Structured Query Language\uff0c\u7b80\u79f0SQL)\u662f\u96c6\u6570\u636e\u5b9a\u4e49\u3001\u6570\u636e\u64cd\u7eb5\u548c\u6570\u636e\u63a7\u5236\u529f\u80fd\u4e8e\u4e00\u4f53\u7684\u6570\u636e\u5e93\u8bed\u8a00\u3002", "\u00a0", "(10)\u89c6\u56fe\u8bbe\u8ba1\u4e00\u822c\u67093\u79cd\u8bbe\u8ba1\u6b21\u5e8f\uff0c\u4e0b\u5217\u4e0d\u5c5e\u4e8e\u89c6\u56fe\u8bbe\u8ba1\u7684\u662f______\u3002", "A)\u81ea\u9876\u5411\u4e0b \u00a0\u00a0\u00a0\u00a0B)\u7531\u5916\u5411\u5185\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)\u7531\u5185\u5411\u5916\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)\u81ea^\u82aa\u5411\u4e0a", "B", "\u89c6\u56fe\u8bbe\u8ba1\u4e00\u822c\u67093\u79cd\u8bbe\u8ba1\u6b21\u5e8f\uff0c\u5b83\u4eec\u5206\u522b\u662f\u81ea\u9876\u5411\u4e0b\u3001\u81ea\u5e95\u5411\u4e0a\u548c\u7531\u5185\u5411\u5916\uff0c\u5b83\u4eec\u53c8\u4e3a\u89c6\u56fe\u8bbe\u8ba1\u63d0\u4f9b\u4e86\u5177\u4f53\u7684\u64cd\u4f5c\u65b9\u6cd5\uff0c\u8bbe\u8ba1\u8005\u53ef\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u7075\u6d3b\u638c\u63e1\uff0c\u53ef\u4ee5\u5355\u72ec\u4f7f\u7528\u4e5f\u53ef\u6df7\u5408\u4f7f\u7528\u3002", "\u00a0", "(11)\u4ee5\u4e0b\u67094\u7ec4\u7528\u6237\u6807\u8bc6\u7b26\uff0c\u5176\u4e2d\u5408\u6cd5\u7684\u4e00\u7ec4\u662f______\u3002", "A)FOR\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)4d\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)f2\u4e00G3\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)WORD", "-sub \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0DO\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0IF\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0void", "Case\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Size\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0abc \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0define", "C", "c\u8bed\u8a00\u7684\u6807\u8bc6\u7b26\u7684\u5b9a\u4e49\u4e3a\uff1a\u4ee5\u5b57\u6bcd\u6216\u4e0b\u5212\u7ebf\u5f00\u5934\u7684\u7531\u5b57\u6bcd\u3001\u6570\u5b57\u5b57\u7b26\u3001\u4e0b\u5212\u7ebf\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u3002\u800c\u4e14\u6807\u8bc6\u7b26\u4e0d\u80fd\u4e0e\u5173\u952e\u5b57\u76f8\u540c\u3002", "\u00a0", "(12)\u4e0b\u5217\u5c5e\u4e8ec\u8bed\u8a00\u8bed\u53e5\u7684\u662f______\u3002", "A)print(\u201c\uff05d\\n\u201d,a)\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)#include<stdio.h>", "C)a=b\uff1bb=c\uff1bc=a\uff1b\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)\uff0f*this is a program*\uff0f", "C", "\u5728c\u8bed\u8a00\u4e2d\uff0c\u4e00\u4e2a\u5b8c\u6574\u7684c\u8bed\u53e5\u5fc5\u987b\u5728\u8bed\u53e5\u672b\u5c3e\u51fa\u73b0\u5206\u53f7\uff0c\u5206\u53f7\u662fc\u8bed\u53e5\u7684\u5fc5\u8981\u7ec4\u6210\u90e8\u5206\u3002\u672c\u9898\u7b54\u6848\u4e3aC\u3002", "\u00a0", "(13)\u4e0b\u5217\u53d9\u8ff0\u4e2d\u6b63\u786e\u7684\u662f______\u3002", "A)C\u7a0b\u5e8f\u4e2d\u6ce8\u91ca\u90e8\u5206\u53ef\u4ee5\u51fa\u73b0\u5728\u7a0b\u5e8f\u4e2d\u4efb\u4f55\u5408\u9002\u7684\u5730\u65b9", "B)\u82b1\u62ec\u53f7\u201d\u201d{\u201c\u201d\u548c\u201d\u201d}\u201d\u201d\u53ea\u80fd\u4f5c\u4e3a\u51fd\u6570\u4f53\u7684\u5b9a\u754c\u7b26", "C)\u6784\u6210C\u7a0b\u5e8f\u7684\u57fa\u672c\u5355\u4f4d\u662f\u51fd\u6570\uff0c\u6240\u6709\u51fd\u6570\u540d\u90fd\u53ef\u4ee5\u7531\u7528\u6237\u547d\u540d", "D)\u5206\u53f7\u662fC\u8bed\u53e5\u4e4b\u95f4\u7684\u5206\u9694\u7b26\uff0c\u4e0d\u662f\u8bed\u53e5\u7684\u4e00\u90e8\u5206", "A", "c\u7a0b\u5e8f\u4e2d\u6ce8\u91ca\u90e8\u5206\u7528\u201c/*\u201d\u548c\u201c*\uff0f\u201d\u62ec\u8d77\u6765\uff0c\u53ef\u4ee5\u51fa\u73b0\u5728\u7a0b\u5e8f\u4e2d\u4efb\u4f55\u5408\u9002\u7684\u5730\u65b9\uff1b\u82b1\u62ec\u53f7\u201c{\u201d\u548c\u201c}\u201d\u4e0d\u4ec5\u53ef\u4f5c\u4e3a\u51fd\u6570\u4f53\u7684\u5b9a\u754c\u7b26\uff0c\u4e5f\u53ef\u4f5c\u4e3a\u590d\u5408\u8bed\u53e5\u7684\u5b9a\u754c\u7b26\uff1b\u6784\u6210C\u7a0b\u5e8f\u7684\u57fa\u672c\u5355\u4f4d\u662f\u51fd\u6570\uff1b\u4e00\u4e2a\u8bed\u53e5\u5fc5\u987b\u5728\u6700\u540e\u51fa\u73b0\u5206\u53f7\uff0c\u5206\u53f7\u662fC\u8bed\u53e5\u4e2d\u4e0d\u53ef\u7f3a\u5c11\u7684\u90e8\u5206\u3002", "\u00a0", "(14)\u4ee5\u4e0b\u5408\u6cd5\u7684\u8d4b\u503c\u8bed\u53e5\u662f______\u3002", "A)X=Y=100\u00a0 \u00a0\u00a0\u00a0\u00a0B)D\u2013\uff1b\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)X+Y\uff1b\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)C=int(A+B)", "B", "\u672c\u9898\u4e2d\u7684\u7b54\u6848A\u4e0eD\u90fd\u7f3a\u5c11\u201c\uff1b\u201d\uff0c\u800c\u7b54\u6848c\u4e2d\uff0c\u8868\u8fbe\u5f0f\u662f\u4e0d\u80fd\u72ec\u7acb\u6210\u4e3a\u8bed\u53e5\u7684\uff0c\u7b54\u6848B\u4f7f\u7528\u4e86c\u8bed\u8a00\u7684\u81ea\u51cf\u8fd0\u7b97\u7b26\u5b83\u5c31\u76f8\u5f53\u4e8eD=D-l\uff0c\u6240\u4ee5\u7b54\u6848B\u4e3a\u4e00\u8d4b\u503c\u8bed\u53e5\u3002", "\u00a0", "(15)\u8fd0\u884c\u4e0b\u9762\u7684\u7a0b\u5e8f\uff0c\u5176\u8f93\u51fa\u7ed3\u679c\u4e3a______\u3002", "main()", "{", "printf(\u201c\uff05d\uff0c\uff05d\u201d\uff0c5\uff05-3\uff0c-5\uff053)\uff1b", "}", "A)2,-2\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)-2,2\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)-2,-2\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)2,2", "A", "\u5728c\u4e2d\uff0c\u53c2\u4e0e\uff05\u8fd0\u7b97\u7684\u4e24\u4e2a\u53c2\u6570\u90fd\u5fc5\u987b\u4e3a\u6574\u578b\uff0c\u5728\u5927\u591a\u6570c\u7f16\u8bd1\u5668\u4e0b(\u5305\u62ecTurboC)\u90fd\u91c7\u7528\u4e86\u201c\u54110\u9760\u8fd1\u201d\u7684\u539f\u5219\uff0c\u5373\u5f53\u4e24\u4e2a\u8fd0\u7b97\u91cf\u6709\u4e00\u4e2a\u4e3a\u8d1f\u6570\u65f6\uff0c\u4f59\u6570\u7684\u7b26\u53f7\u7531\u88ab\u9664\u6570\u7684\u7b26\u53f7\u51b3\u5b9a\u3002\u6545\u672c\u9898\u7b54\u6848\u4e3aA\u3002", "\u00a0", "(16)\u8bbex,y\u5747\u4e3aint\u578b\u53d8\u91cf\uff0c\u4e14x=10\uff0cy=3\uff0c\u5219print\uff08\u201d\uff05d,\uff05d\\n\u201d,x- -,- -y)\uff1b\u8bed\u53e5\u7684\u8f93\u51fa\u7ed3\u679c\u662f______\u3002", "A)10,3\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)9,3\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)9,2\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)10,2}", "D", "c\u8bed\u8a00\u7684\u81ea\u51cf\u8fd0\u7b97\u7b26\u6709\u524d\u7f6e\u4e0e\u540e\u7f6e\u4e24\u79cd\u5f62\u5f0f\u3002\u5f53\u81ea\u51cf\u8fd0\u7b97\u7b26\u524d\u7f6e\u65f6\uff0c\u53d8\u91cf\u5148\u81ea\u51cf\u4e00\u540e\u518d\u53c2\u4e0e\u8868\u8fbe\u5f0f\u8fd0\u7b97\uff1b\u800c\u540e\u7f6e\u65f6\uff0c\u53d8\u91cf\u5148\u53c2\u4e0e\u8868\u8fbe\u5f0f\u8fd0\u7b97\u540e\u518d\u81ea\u8eab\u51cf\u4e00\u3002", "\u00a0", "(17)\u8bbex\u4e3aint\u578b\u53d8\u91cf\uff0c\u6267\u884c\u4ee5\u4e0b\u8bed\u53e5\uff0cx=10\uff1bx+=x-=x-x\uff1bx\u7684\u503c\u4e3a______\u3002", "A)10\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)20\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)30\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)40", "B", "\u672c\u9898x=10\uff0c\u8868\u8fbe\u5f0f\u201cX+=X-=X-X\uff1b\u201d\u7684\u6c42\u89e3\u6b65\u9aa4\u5982\u4e0b\uff1a\u5148\u8fdb\u884cX-=X-X\u7684\u8fd0\u7b97\uff0c\u76f8\u5f53\u4e8eX=X-(X-x)=x=10;\u518d\u8fdb\u884cX+=X\u7684\u8fd0\u7b97\uff0c\u5373x=x+x=20\u3002", "\u00a0", "(18)X\u3001Y\u3001Z\u88ab\u5b9a\u4e49\u4e3aint\u578b\u53d8\u91cf\uff0c\u82e5\u4ece\u952e\u76d8\u7ed9X\u3001Y\u3001Z\u8f93\u5165\u6570\u636e\uff0c\u6b63\u786e\u7684\u8f93\u5165\u8bed\u53e5\u662f\u00a0\u00a0\u00a0 ______\u3002", "A)INPUT X\uff0cY\uff0cZ\uff1b\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)scanf(\u201d\uff05d\uff05d\uff05d\u201d\uff0c&X\uff0c&Y\uff0c&Z)\uff1b", "C)scanf(\u201d\uff05d\uff05d\uff05d\u2019\uff0cX\uff0cY\uff0cZ)\uff1b\u00a0\u00a0 \u00a0\u00a0D)read(\u201d\uff05d\uff05d\uff05d\u201d\uff0c &X\uff0c&Y\uff0c&Z)\uff1b", "B", "c\u8bed\u8a00\u4e2d\u6ca1\u6709\u8f93\u5165\u8f93\u51fa\u8bed\u53e5\uff0c\u5b83\u662f\u901a\u8fc7c\u8bed\u8a00\u63d0\u4f9b\u7684\u51fd\u6570\u6765\u5b9e\u73b0\u7684\uff0c\u672c\u9898c\u4e2d\uff0c\u5e94\u4e3a\u53d8\u91cf\u5730\u5740\u3002", "\u00a0", "(19)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f______ \u3002", "main()", "{int a=3\uff1b", "printf(\u201d\uff05d\\n\u201d\uff0c(a+=a-=a*a))\uff1b", "}", "A)-6\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)1\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)2 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)-12", "D", "\u8d4b\u503c\u8fd0\u7b97\u7b26\u7684\u7ed3\u5408\u65b9\u5411\u662f\u81ea\u53f3\u81f3\u5de6\uff0c\u6240\u4ee5\u8868\u8fbe\u5f0fa+=a-=a*a\u5148\u8fd0\u7b97\u6700\u53f3\u8fb9\u7684a*a\u5f979\uff0c\u518d\u8fd0\u7b97a=a-9\uff0c\u5373a=3-9\uff0c\u6240\u4ee5\u6b64\u65f6a\u7684\u503c\u75313\u53d8\u6210\u4e86-6\uff0c\u6700\u540e\u8fd0\u7b97a=a+(-6)\uff0c\u5373a=(-6)+(-6)=-12\u3002", "\u00a0", "(20)\u8bbeint\u578b\u53602\u4e2a\u5b57\u8282\uff0c\u5219unsigned int\u6240\u80fd\u8868\u793a\u7684\u6570\u636e\u8303\u56f4\u662f______ \u3002", "A)0\uff5e65535\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0B)-32769\uff5e32767\u00a0\u00a0\u00a0 \u00a0C)1\uff5e65536 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)0\uff5e32767", "A", "\u672c\u9898int\u578b\u53602\u4e2a\u5b57\u8282\uff0c\u537316\u4f4d\uff0cunsigned m\u6240\u80fd\u8868\u793a\u7684\u6570\u636e\u8303\u56f4\u662fO\uff5e(2^16-1)\uff0c\u53730-65535\u3002", "\u00a0", "(21)\u8bbea\u3001b\u3001c\u3001d\u3001m\u3001n\u5747\u4e3aint\u578b\u53d8\u91cf\uff0c\u4e14a=5\u3001b=6\u3001c=7\u3001d=8\u3001m=2\u3001n=2\u5219\u903b\u8f91\u8868\u8fbe\u5f0f(m=a>b)&&(n=c>d)\u8fd0\u7b97\u540e\uff0cn\u7684\u503c\u4e3a______\u3002", "A)0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)1\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)2\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0D)3", "A", "c\u8bed\u8a00\u4e2d\u6bd4\u8f83\u8868\u8fbe\u5f0f\u7684\u8fd0\u7b97\u7ed3\u679c\u4e3a0\u62161\u30020\u4ee3\u8868\u4e0d\u6210\u7acb\uff0cl\u8868\u793a\u6210\u7acb\u3002", "\u00a0", "(22)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f______ \u3002", "main()", "{im\u00a0 num=0\uff1b", "while(num<=2)", "{\u00a0 num++\uff1bprintf(\u201d\uff05d\uff3cn\u201d\uff0cnum)\uff1b\u00a0 }", "}", "A)\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)", "1\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a01\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a01\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a01", "2\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a02\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a02", "3\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a03", "4", "B", "while\u7684\u6267\u884c\u8fc7\u7a0b\u662f\uff1a\u5148\u8ba1\u7b97\u6761\u4ef6\u8868\u8fbe\u5f0f\u7684\u503c\uff0c\u82e5\u6210\u7acb\u5219\u6267\u884c\u5faa\u73af\u4f53\uff0c\u91cd\u590d\u4e0a\u8ff0\u8fc7\u7a0b\uff0c\u76f4\u5230\u6761\u4ef6\u8868\u8fbe\u5f0f\u7684\u503c\u4e3a\u201c\u5047\u201d(\u503c\u4e3a\u96f6)\u65f6\uff0c\u9000\u51fa\u5faa\u73af\uff0c\u5e76\u8f6c\u4e0b\u4e00\u8bed\u53e5\u53bb\u6267\u884c\u3002\u672c\u9898\u5728\u8f93\u51fanum\u7684\u503c\u4e3a3\u4e4b\u540e\uff0cr\u518d\u5224\u65adwhile\u7684\u5faa\u73af\u6761\u4ef63<=2\uff0c\u4e0d\u6210\u7acb\uff0c\u6240\u4ee5\u4e0d\u518d\u8f93\u51fanum\u7684\u503c\uff0c\u6545\u672c\u9898\u7684\u7b54\u6848\u9009B\u3002", "\u00a0", "(23)\u4e0b\u9762\u7684\u5173\u952e\u5b57\u4e2d\uff0c\u4e0d\u80fd\u591f\u4ece\u5faa\u73af\u4f53\u4e2d\u8df3\u5230\u5faa\u73af\u4f53\u5916\u7684\u662f______\u00a0 \u3002", "A)goto\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)break\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)return\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)continue", "B", "\u5728c\u8bed\u8a00\u4e2d\uff1b\u53ef\u4ee5\u7528break\u8bed\u53e5\u548ccontinue\u8bed\u53e5\u8df3\u51fa\u672c\u5c42\u5faa\u73af\u548c\u7ed3\u675f\u672c\u6b21\u5faa\u73af\u3002goto\u8bed\u53e5\u53ef\u8df3\u51fa\u591a\u5c42\u5faa\u73af\uff0c\u5982\u679c\u5728\u51fd\u6570\u7684\u5faa\u73af\u4f53\u5185\u4f7f\u7528return\u8bed\u53e5\uff0c\u5c31\u4f1a\u76f4\u63a5\u7ed3\u675f\u5faa\u73af\u8fd4\u56de\u51fd\u6570\u503c\u3002", "\u00a0", "(24)\u4ee5\u4e0b\u5404\u9009\u9879\u4f01\u56fe\u8bf4\u660e\u4e00\u79cd\u65b0\u7684\u7c7b\u578b\u540d\uff0c\u5176\u4e2d\u6b63\u786e\u7684\u662f______\u3002", "A)tyrpedef vl int\uff1b\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)typedef v2=int\uff1b", "C)typedef int v3\uff1b\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)typedef v4\uff1aint", "C", "c\u8bed\u8a00\u4e2d\u53ef\u4ee5\u4f7f\u7528typedef\u6765\u91cd\u65b0\u5b9a\u4e49\u5df2\u6709\u7684\u6570\u636e\u7c7b\u578b\uff0c\u76f8\u5f53\u4e8e\u4e3a\u6570\u636e\u7c7b\u578b\u53d6\u4e2a\u522b\u540d\u3002", "\u00a0", "(25)\u4e3a\u4e86\u907f\u514d\u5d4c\u5957\u7684if-else\u7684\u4e8c\u4e49\u6027\uff0cC\u8bed\u8a00\u89c4\u5b9a\uff1aelse\u4e0e______\u914d\u5bf9\u3002", "A)\u7f29\u6392\u4f4d\u7f6e\u76f8\u540c\u7684if\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)\u5176\u4e4b\u524d\u6700\u8fd1\u7684if", "C)\u5176\u4e4b\u540e\u6700\u8fd1\u7684if\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0D)\u540c\u4e00\u884c\u4e0a\u7684if", "B", "\u5728if\u8bed\u53e5\u4e2d\u53c8\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2aif\u8bed\u53e5\u79f0\u4e3aif\u8bed\u53e5\u7684\u5d4c\u5957\u3002\u5e94\u5f53\u6ce8\u610fif\u4e0eelse\u7684\u914d\u5bf9\u5173\u7cfb\uff0c\u5728c\u8bed\u8a00\u4e2d\uff0c\u4ece\u6700\u5185\u5c42\u5f00\u59cb\uff0celse\u603b\u662f\u4e0e\u5b83\u4e0a\u9762\u6700\u8fd1\u7684(\u672a\u66fe\u914d\u5bf9\u7684)if\u914d\u5bf9\u3002", "\u00a0", "(26)\u5728\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u5982\u679c\u5b9e\u53c2\u662f\u7b80\u5355\u53d8\u91cf\uff0c\u5b83\u4e0e\u5bf9\u5e94\u5f62\u53c2\u4e4b\u95f4\u7684\u6570\u636e\u4f20\u9012\u65b9\u5f0f\u662f______\u00a0 \u3002", "A)\u5730\u5740\u4f20\u9012\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)\u5355\u5411\u503c\u4f20\u9012", "C)\u7531\u5b9e\u53c2\u4f20\u7ed9\u5f62\uff0c\u518d\u7531\u5f62\u53c2\u4f20\u56de\u5b9e\u53c2\u00a0\u00a0\u00a0 D)\u4f20\u9012\u65b9\u5f0f\u7531\u7528\u6237\u6307\u5b9a", "B", "c\u8bed\u8a00\u51fd\u6570\u4e2d\u7684\u53c2\u6570\u4f20\u9012\u65b9\u5f0f\u6709\u4f20\u503c\u4e0e\u4f20\u5740\u4e24\u79cd\u65b9\u5f0f\uff0c\u4f20\u503c\u65b9\u5f0f\u662f\u6307\u5c06\u5b9e\u53c2\u7684\u503c\u590d\u5236\u4e00\u4efd\u4f20\u9012\u7ed9\u5f62\u53c2\uff0c\u800c\u4f20\u5740\u65b9\u5f0f\u662f\u6307\u5c06\u5b9e\u53c2\u7684\u53d8\u91cf\u5730\u5740\u4f20\u9012\u7ed9\u5f62\u53c2\uff0c\u4e5f\u5c31\u662f\u5b9e\u53c2\u7684\u5f15\u7528\u3002", "\u00a0", "(27)\u4ee5\u4e0b\u51fd\u6570\u503c\u7684\u7c7b\u578b\u662f______\u3002", "fun(float x)", "{float y\uff1b", "y=3*x-4\uff1b", "Return y\uff1b", "}", "A)int\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)\u4e0d\u786e\u5b9a\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)void\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)float", "A", "c\u8bed\u8a00\u4e2d\u5982\u679c\u51fd\u6570\u524d\u4e0d\u52a0\u4efb\u4f55\u6570\u636e\u7c7b\u578b\u65f6\uff0c\u7f3a\u7701\u51fd\u6570\u7684\u7c7b\u578b\u4e3a\u6574\u578b\uff0c\u51fd\u6570\u7684\u7c7b\u578b\u5c31\u662f\u51fd\u6570\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u3002", "\u00a0", "(28)\u4ee5\u4e0b\u9009\u9879\u4e2d\uff0c\u975e\u6cd5\u7684\u5b57\u7b26\u5e38\u91cf\u662f ______\u3002", "A)\u2019\uff3ct\u2019\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0B)\u2019\uff3c17\u2019\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)\u201d\uff3cn\u201d\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)\u2019\uff3cxaa\u2019", "C", "C\u8bed\u8a00\u4e2d\u5b57\u7b26\u5e38\u91cf\u662f\u4ee5\u5355\u5f15\u53f7\u62ec\u8d77\u6765\u7684\u5355\u4e2a\u5b57\u7b26\uff0c\u6216\u4e3a\u4ee5\u201c\uff3c\u201d\u4e0e\u4e09\u4f4d\u516b\u8fdb\u5236\u6570\u503c\u6216\u4e24\u4f4d\u5341\u516d\u8fdb\u5236\u6570\u503c\u4ee3\u66ff\u5355\u4e2a\u5b57\u7b26\u3002", "\u00a0", "(29)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f______ \u3002", "#include<stdio.h>", "main()", "{", "int a=200\uff1b", "#define a lOO", "printf(\u201c\uff05d\u201d\uff0ca)\uff1b", "#undef a", "printf (\u201c\uff05dt\u201d\uff0ca)\uff1b", "}", "A)200 100\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0B)100100 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)100 200\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0D)200 200", "C", "#define\u5b8f\u540d\u7684\u6709\u6548\u8303\u56f4\u4e3a\u5b9a\u4e49\u547d\u4ee4\u4e4b\u540e\u5230\u672c\u6e90\u6587\u4ef6\u7ed3\u675f\uff0c\u53ef\u4ee5\u5728\u7a0b\u5e8f\u4e2d\u4f7f\u7528#undef\u547d\u4ee4\u7ec8\u6b62\u5b8f\u5b9a\u4e49\u7684\u4f5c\u7528\u57df\u3002\u672c\u9898\u7531\u4e8e#undef\u7684\u4f5c\u7528\uff0c\u4f7fa\u7684\u4f5c\u7528\u8303\u56f4\u5728#define a 100\u5230#undefa\u4e4b\u95f4\uff0c\u6545\u7b54\u6848\u4e3ac\u3002", "\u00a0", "(30)\u82e5\u6709\u8bf4\u660e\uff1aint i,j=2\uff0c*p=\uff06i\uff1b\uff0c\u5219\u80fd\u5b8c\u6210i=j\u8d4b\u503c\u529f\u80fd\u7684\u8bed\u53e5\u662f______\u3002", "A)i=*p\uff1b\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)*p=*\uff06j\uff1b\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0C)i=\uff06j\uff1b\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)i=**p\uff1b", "B", "\u6307\u9488\u662f\u4e00\u79cd\u7528\u6765\u5b58\u653e\u53d8\u91cf\u5730\u5740\u7684\u7279\u6b8a\u53d8\u91cf\u3002\u672c\u9898\u4e2d\u6307\u9488\u53d8\u91cfp\u7528\u4e8e\u5b58\u653e\u6574\u578b\u53d8\u91cfi\u7684\u5730\u5740\uff0c\u6539\u53d8*p\u7684\u503c\u5373\u4e3a\u6539\u53d8i\u7684\u503c\u3002\u53c8\u56e0\u4e3a\u201c&\u201d\u548c\u201c\u2225\u4e24\u4e2a\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u522b\u76f8\u540c\uff0c\u6309\u81ea\u53f3\u800c\u5de6\u7684\u65b9\u5411\u7ed3\u5408\uff0c\u6240\u4ee5\u3002&j\u5148\u8fdb\u884c&j\u8fd0\u7b97\uff0c\u5f97j\u7684\u5730\u5740\uff0c\u518d\u8fdb\u884c+\u8fd0\u7b97\uff0c\u53d6\u6240\u5f97\u5730\u5740\u91cc\u9762\u7684\u503c\uff0c\u6545t&j\u4e0ei\u7b49\u4ef7\u3002", "\u00a0", "(31)\u5047\u5b9aint\u7c7b\u578b\u53d8\u91cf\u5360\u7528\u4e24\u4e2a\u5b57\u8282\uff0c\u82e5\u6709\u5b9a\u4e49\uff1aint \u00a0x[10]={0,2,4}\uff1b\uff0c\u5219\u6570\u7ec4x\u5728\u5185\u5b58\u4e2d\u6240\u5360\u5b57\u8282\u6570\u662f______\u3002", "A)3\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)6\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)10\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)20", "D", "\u5f53\u6570\u7ec4\u5b9a\u4e49\u540e\uff0c\u7cfb\u7edf\u5c31\u4e3a\u5176\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff0c\u800c\u4e0d\u8bba\u5176\u4e2d\u6709\u6ca1\u6709\u5185\u5bb9\u3002\u56e0\u6b64\uff0c\u672c\u9898\u4e2d\u6570\u7ec4x[10]\u4e0d\u8bba\u662f\u5426\u4e3a\u5176\u5143\u7d20\u521d\u59cb\u5316\uff0c\u5b83\u6240\u5206\u914d\u7684\u5b58\u50a8\u7a7a\u95f4\u4ecd\u4e3a2+10=20\u4e2a\u5b57\u8282\u3002", "\u00a0", "(32)\u6267\u884c\u4ee5\u4e0b\u7684\u7a0b\u5e8f\u6bb5\u540e\uff0cm\u7684\u503c\u662f______\u3002", "int a[2][3]={{l\uff0c2\uff0c3}\uff0c{4,5,6}}\uff1b", "int m\uff0c*p\uff1b", "p=\uff06a[0][0]\uff1b", "m=p[41\uff1b", "A)4\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)5\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0C)3\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0D)\u4e0d\u786e\u5b9a", "B", "\u7a0b\u5e8f\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6307\u5411\u6574\u578b\u53d8\u91cf\u7684\u6307\u9488\u53d8\u91cf\uff0c\u5e76\u5bf9\u5176\u8d4b\u503c\u4e3a\u4e8c\u7ef4\u6574\u578b\u6570\u7ec4a\u7684\u9996\u5143\u7d20\u7684\u5730\u5740\u3002P[4]\u7b49\u4ef7\u4e8e*(p+4)\uff0c\u5373\u4e8c\u7ef4\u6570\u7ec4a\u4e2d\u7b2c\u56db\u4e2a\u5143\u7d20\u7684\u503c\uff0c\u800ca\u662f\u4e00\u4e2a2*3\u7684\u4e8c\u7ef4\u6570\u7ec4\uff0c\u5176\u7b2c\u56db\u4e2a\u5143\u7d20\u4e3aa[1][1]\uff0c\u53735\u3002", "\u00a0", "(33)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f______\u3002", "main()", "{int\u00a0 i\uff0ca[10]\uff1b", "for(i=9\uff1bi>=O\uff1bi\u2013) a[i]=lO-i\uff1b", "printf(\u201c\uff05d\uff05d\uff05d\u201d\uff0ca[2]\uff0ca[5]\uff0ca[8])\uff1b", "}", "A)258\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)74l\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)852\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0D)369", "C", "\u5728\u672c\u9898\u8fd0\u884c\u65f6\u4e3b\u8981\u6ce8\u610f\u7684\u662f\u5f53i=9\u65f6\uff0ca[i]=10-9=1\uff1bi=8\u65f6\uff0ca[i]=10-8=2\uff1bi=7\u65f6\uff0ca[i]=10-7=3\uff1a\u2026\u2026\u4f9d\u6b64\u7c7b\u63a8\uff0c\uff0c\u76f4\u5230i=0\u65f6\uff0ca[i]=10-0=10\uff1b\u6b64\u65f6\uff0ci\u7684\u503c\u5df2\u53d8\u4e3a\uff0e1\uff0c\u5224\u65adfor\u7684\u5faa\u73af\u6761\u4ef6\uff0c\u4e0d\u6210\u7acb\uff0c\u7136\u540e\u8f93\u51faa[2]\uff0ca[5]\uff0ca[8]\u5206\u522b\u4e3a8\uff0c5\uff0c2\u3002", "\u00a0", "(34)\u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u4e3a______\u00a0 \u3002", "#include<string.h>", "main()", "{", "char pl[7]=\u201dabc\u201d,p2[]=\u201dABC\u201d,str[50]= \u201cxyz\u201d\uff1b", "strcpy(str,strcat(pl\uff0cp2))\uff1b", "printf(\u201c\uff05s\u201d\uff0cstr)\uff1b", "}", "A)xyzabcABC\u00a0 \u00a0\u00a0B)abcABC\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)xyzabc\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)xyzABC", "B", "strcpy(strl\uff0cs1)\uff1a\u4f5c\u7528\u662f\u5c06\u5b57\u7b26\u4e32s1\u62f7\u8d1d\u5230\u5b57\u7b26\u6570\u7ec4strl\u4e2d\u53bb\u3002strcat(\u5b57\u7b26\u6570\u7ec41\uff0c\u5b57\u7b26\u6570\u7ec42)\uff1a\u628a\u3002\u5b57\u7b26\u4e322\u63a5\u5230\u5b57\u7b26\u4e32l\u7684\u540e\u9762\uff0c\u7ed3\u679c\u653e\u5728\u5b57\u7b26\u6570\u7ec41\u4e2d\uff0c\u51fd\u6570\u8c03\u7528\u540e\u8fd4\u56de\u5b57\u7b26\u6570\u7ec4l\u7684\u5730\u5740\u3002", "\u672c\u9898\u5b9a\u4e49\u4e86\u4e09\u4e2a\u5b57\u7b26\u6570\u7ec4pl,p2,str\uff0cstrcat(p1,p2)\u51fd\u6570\u7684\u4f5c\u7528\u662f\u5c06\u5b57\u7b26\u4e32\u6570\u7ec4p2\u63a5\u5230\u5b57\u7b26\u4e32p1\u7684\u540e\u9762\uff0c\u7ed3\u679c\u653e\u5728\u5b57\u7b26\u6570\u7ec4p1\uff0c\u518d\u901a\u8fc7sffcpy()\u51fd\u6570\u5c06\u8be5\u5b57\u7b26\u4e32\u62f7\u8d1d\u5230str\u6570\u7ec4\u4e2d\uff0c\u539fstr\u6570\u7ec4\u4e2d\u7684\u5b57\u7b26\u4e32xyz\u88ab\u8986\u76d6\uff0c\u56e0\u6b64\u6253\u5370\u8f93\u51fa\u5b57\u7b26\u4e32str\u5373\u53ef\u5f97\u5230abcABC\u3002", "\u00a0", "(35)\u4ee5\u4e0b\u6570\u7ec4\u5b9a\u4e49\u4e2d\u4e0d\u6b63\u786e\u7684\u662f______\u3002", "A)int a[2\u21613]\uff1b\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)int b[][3]={0,1\uff0c2)\uff1b", "C)int c[100][100]={0}\uff1b\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0D)int d[3][]={{l\uff0c2}\uff0c{l\uff0c2\uff0c3}\uff0c{1\uff0c2\uff0c3\uff0c4}}\uff1b", "D", "\u4e00\u7ef4\u6570\u7ec4\u7684\u5b9a\u4e49\u65b9\u5f0f\u4e3a\uff1a", "\u7c7b\u578b\u8bf4\u660e\u7b26\u6570\u7ec4\u540d[\u5e38\u91cf\u8868\u8fbe\u5f0f]\uff1b", "\u9009\u9879A\u7b26\u5408\u6b64\u5b9a\u4e49\u5f62\u5f0f\uff0c\u6b63\u786e\uff1bc\u8bed\u8a00\u4e2d\u591a\u7ef4\u6570\u7ec4\u8d4b\u521d\u503c\u65f6\u53ef\u4ee5\u90e8\u5206\u8d4b\u503c\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u6307\u5b9a\u9664\u7b2c\u4e00\u7ef4\u4ee5\u5916\u7684\u5176\u5b83\u7ef4\u7684\u5927\u5c0f\uff0c\u6545\u9009\u9879c\u6b63\u786e\uff1b\u53e6\u5916\uff0c\u5982\u679c\u5bf9\u5168\u90e8\u6570\u7ec4\u5143\u7d20\u90fd\u8d4b\u521d\u503c\uff0c\u5219\u5b9a\u4e49\u6570\u7ec4\u65f6\u5bf9\u7b2c\u4e00\u7ef4\u7684\u957f\u5ea6\u53ef\u4ee5\u4e0d\u6307\u5b9a\uff0c\u4f46\u7b2c\u4e8c\u7ef4\u7684\u957f\u5ea6\u4e0d\u80fd\u7701\uff0c\u6240\u4ee5\u9009\u9879B\u6b63\u786e\uff0c\u800c\u9009\u9879D\u662f\u9519\u8bef\u7684\u3002", "\u00a0", "(36)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f______\u3002", "main()", "{\u00a0 jnt a[4][4]\uff1a{{1\uff0c3\uff0c5}\uff0c{2,4,6}\uff0c{3,5,7}}\uff1b", "printf(\u201c\uff05d\uff05d\uff05d\uff05d\uff3cn\u201d\uff0ca[0][3]\uff0ca[1][2]\uff0ca[2][1]\uff0ca[3][0])\uff1b", "}", "A)0650\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)1470\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)5430 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)\u8f93\u51fa\u503c\u4e0d\u5b9a", "A", "\u5bf9\u672a\u7ed9\u51fa\u521d\u59cb\u503c\u7684\u6574\u6570\u6570\u7ec4\u5143\u7d20\uff0c\u88ab\u7f3a\u7701\u521d\u59cb\u5316\u4e3a\u96f6\u3002", "\u00a0", "(37)\u5728\u8bf4\u660e\u8bed\u53e5\uff1aint *f()\uff1b\u4e2d\uff0c\u6807\u8bc6\u7b26f\u4ee3\u8868\u7684\u662f______\u3002", "A)\u4e00\u4e2a\u7528\u4e8e\u6307\u5411\u6574\u578b\u6570\u636e\u7684\u6307\u9488\u53d8\u91cf\u00a0\u00a0\u00a0 B)\u4e00\u4e2a\u7528\u4e8e\u6307\u5411\u4e00\u7ef4\u6570\u7ec4\u7684\u884c\u6307\u9488", "C)\u4e00\u4e2a\u7528\u4e8e\u6307\u5411\u51fd\u6570\u7684\u6307\u9488\u53d8\u91cf\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0D)\u4e00\u4e2a\u8fd4\u56de\u503c\u4e3a\u6307\u9488\u578b\u7684\u51fd\u6570\u540d", "D", "\u5e26\u56de\u6307\u9488\u503c\u7684\u51fd\u6570\uff0c\u5176\u4e00\u822c\u5b9a\u4e49\u5f62\u5f0f\u4e3a\uff1a", "\u7c7b\u578b\u6807\u8bc6\u7b26\u00a0 *\u51fd\u6570\u540d(\u53c2\u6570\u8868)\uff1b", "\u4f8b\u5982\uff1aint *f(x,y)\uff1b", "\u5176\u4e2d\uff0cf\u662f\u51fd\u6570\u540d\uff0c\u8c03\u7528\u5b83\u4ee5\u540e\u80fd\u5f97\u5230\u4e00\u4e2a\u6307\u5411\u6574\u578b\u6570\u636e\u7684\u6307\u9488(\u5730\u5740)\uff0cx,y\u662f\u51fd\u6570f\u7684\u5f62\u53c2\u3002\u5728f\u7684\u4e24\u4fa7\u5206\u522b\u4e3a\u3002\u8fd0\u7b97\u7b26\u548c()\u8fd0\u7b97\u7b26\uff0c\u800c()\u4f18\u5148\u7ea7\u9ad8\u4e8es\uff0c\u56e0\u6b64f\u5148\u4e0e()\u7ed3\u5408\uff0c\u663e\u7136\u662f\u51fd\u6570\u5f62\u5f0f\u3002\u8fd9\u4e2a\u51fd\u6570\u524d\u9762\u6709\u4e00\u4e2a\u3002\uff0c\u8868\u793a\u6b64\u51fd\u6570\u662f\u6307\u9488\u578b\u51fd\u6570(\u51fd\u6570\u503c\u662f\u6307\u9488)\u3002\u524d\u9762\u7684int\u8868\u793a\u8fd4\u56de\u7684\u6307\u9488\u6307\u5411\u6574\u578b\u53d8\u91cf\u3002", "\u00a0", "(38)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f______\u3002", "main()", "{\u00a0 char st[20]= \u201chello\\0\\t\\\\\u201d;", "printf(\u201c\uff05d\uff05d\uff3cn\u201d,strlen(st)\uff0csizeof(st))\uff1b", "}", "A)99\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)520\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)1320\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)2020", "B", "c\u8bed\u8a00\u4e2d\u5b57\u7b26\u4e32\u662f\u4ee5\u2018\uff3c0\u2019\u5b57\u7b26\u7ed3\u675f\u7684\uff0c\u4e14strlen()\u51fd\u6570\u8ba1\u7b97\u7684\u662f\u2018\uff3c0\u2019\u5b57\u7b26\u524d\u7684\u6240\u6709\u5b57\u7b26\u7684\u4e2a\u6570\u3002\u672c\u9898\u4e2dstrlen(st)\u5e94\u4e3a5\u3002\u6570\u7ec4\u5b9a\u4e49\u4ee5\u540e\u7cfb\u7edf\u5c31\u4e3a\u5176\u5206\u914d\u76f8\u5e94\u5927\u5c0f\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u800c\u4e0d\u8bba\u5176\u4e2d\u6709\u6ca1\u6709\u5185\u5bb9\u3002sizeof()\u51fd\u6570\u662f\u8ba1\u7b97\u53d8\u91cf\u6216\u6570\u7ec4\u7684\u6240\u5206\u914d\u5230\u7684\u5185\u5b58\u7a7a\u95f4\u7684\u5927\u5c0f\u3002\u6240\u4ee5\u672c\u9898\u7684sizeof(st)\u4e3a20\u3002", "\u00a0", "(39)\u4e0b\u9762\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f______\u3002", "int d=1\uff1a", "fun(int p)", "{ static int d=5\uff1bd+=p\uff1b", "printf(\u201c\uff05d\u201d\uff0cd)\uff1breturn d\uff1b", "}", "main()", "{int a=3\uff1bprintf(\u201c\uff05d\uff3cn\u201d,fun(a+fun(d)))\uff1b}", "A)6 9 9\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)6 69 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)6 15 15 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)6 6 15", "C", "\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u5728\u7f16\u8bd1\u65f6\u8d4b\u521d\u503c\uff0c\u5373\u53ea\u8d4b\u521d\u503c\u4e00\u6b21\uff0c\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u5b83\u5df2\u6709\u521d\u503c\u3002\u4ee5\u540e\u6bcf\u6b21\u8c03\u7528\u65f6\u4e0d\u518d\u91cd\u65b0\u8d4b\u521d\u503c\u800c\u53ea\u662f\u4fdd\u7559\u4e0a\u6b21\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u65f6\u7684\u503c\uff0c\u800c\u5bf9\u81ea\u52a8\u53d8\u91cf\u8d4b\u521d\u503c\uff0c\u4e0d\u662f\u5728\u7f16\u8bd1\u65f6\u8fdb\u884c\u7684\uff0c\u800c\u5728\u51fd\u6570\u8c03\u7528\u65f6\u8fdb\u884c\uff0c\u6bcf\u8c03\u7528\u4e00\u6b21\u51fd\u6570\u91cd\u65b0\u7ed9\u4e00\u6b21\u521d\u503c\uff0c\u76f8\u5f53\u4e8e\u6267\u884c\u4e00\u6b21\u8d4b\u503c\u8bed\u53e5\u3002", "\u672c\u9898\u5728\u7a0b\u5e8f\u5f00\u5934\u5b9a\u4e49\u4e86\u5168\u5c40\u53d8\u91cfd\u5e76\u8d4b\u521d\u503c1\uff0c\u5728\u88ab\u8c03\u51fd\u6570fun()\u4e2d\uff0c\u5b9a\u4e49\u4e86\u9759\u6001\u5c40\u90e8\u53d8\u91cfd\uff0c\u521d\u503c\u4e3a5\u3002\u5728\u7b2c\u4e00\u6b21\u8c03\u7528\u51fd\u6570fun\u65f6\uff0cd\u521d\u503c\u4e3a5\uff0cp\u7531\u4e3b\u51fd\u6570\u4f20\u9012\u8fc7\u6765\u7684\u503c\u4e3a1\uff0c\u5219d=d+p=5+l=6\uff0c\u7531\u4e8ed\u662f\u9759\u6001\u5c40\u90e8\u53d8\u91cf\uff0c\u5728\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u540e\uff0c\u5b83\u4ecd\u4fdd\u7559d=6\u3002\u518d\u6b21\u8c03\u7528fun\u51fd\u6570\uff0cd\u7684\u521d\u503c\u4e3a6\uff0c\u800c\u7531\u4e3b\u51fd\u6570\u4f20\u9012\u7684p\u7684\u503c\u4e3a9\uff0c\u5219\u6b64\u65f6d=d+p=6+9=15\uff0c\u6700\u540e\u6253\u5370\u8f93\u51fad\u7684\u503c\u5e76\u8fd4\u56de\u4e3b\u51fd\u6570\u3002", "\u00a0", "(40)\u4ee5\u4e0b\u9009\u9879\u4e2d\uff0c\u4e0d\u80fd\u6b63\u786e\u8d4b\u503c\u7684\u662f______\u3002", "A)char s1[10]\uff1bsl=\u201dchest\u201d\uff1b\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0B)char s2[]\u3002{\u2019C\u2019\uff0c\u2019t\u2019,\u2019e\u2019\uff0c\u2019s\u2019\uff0c\u2019t\u2019)\uff1b", "C)char s3[20]= \u201cChest\u201d\uff1b\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0D)char*s4=\u201dCtest\\n\u201d\u2019", "A", "c\u8bed\u8a00\u4e2d\u4e0d\u80fd\u5c06\u5b57\u7b26\u4e32\u5e38\u91cf\u76f4\u63a5\u8d4b\u7ed9\u6570\u7ec4\u3002\u4f46\u5728\u8d4b\u521d\u503c\u65f6\u53ef\u4ee5\u3002", "\n", "(41)\u4ee5\u4e0b\u7a0b\u5e8f\u8f93\u51fa\u6b63\u786e\u7684\u662f______\u3002", "alnovep(int *p\uff0cint(*a)[3]\uff0cint n)", "{int i,j\uff1b", "for(i=0\uff1bi<n\uff1bi++)", "for(j=0 ;j<n;j++){ *p=a[i][j]\uff1bp++\uff1b}", "}", "main()", "{int *p\uff0ca[3][3]={{1\uff0c3\uff0c5}\uff0c{2,4\uff0c6}}\uff1b", "p=(int*)malloc(100);", "amovep(p\uff0ca,3)\uff1b", "printf(\u201d\uff05d\uff05d\uff3cn\u201d\uff0cp[2]\uff0cp[5])\uff1bfree(p)\uff1b", "}", "A)56\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)25\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)34\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)\u7a0b\u5e8f\u9519\u8bef", "A", "\u672c\u9898main\u51fd\u6570\u4e2d\u5b9a\u4e49\u4e86\u6307\u9488p\u548c\u4e8c\u7ef4\u6570\u7ec4a\uff0c\u901a\u8fc7\u51fd\u6570amovep\u5c06\u6570\u7ec4\u7684\u503c\u5b58\u5165\u6307\u9488p\u6240\u6307\u5411\u7684\u5b58\u50a8\u5355\u5143\u4e2d\uff0ca\u7684\u5404\u5143\u7d20\u5206\u522b\u4e3a\uff1aa[0][0]=l\uff0ca[0][1]=3\uff0ca[0][2]=5\uff0ca[1][0]=2\uff0ca[l][1]=4\uff0ca[1][2]=6\uff0ca[2][O]=0\uff0ca[2][1]=0\uff0ca[2][2]=0a", "\u901a\u8fc7malloc()\u51fd\u6570\u7ed9\u6307\u9488\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff0cfree()\u51fd\u6570\u7528\u4e8e\u91ca\u653e\u6307\u9488\u53d8\u91cf\u6240\u7528\u5185\u5b58\u7a7a\u95f4\u3002\u5728\u4e3b\u51fd\u6570\u4e2d\u901a\u8fc7amovep(p\uff0ca,3)\u8c03\u7528\u51fd\u6570amovep\uff0c\u4f7f\u5f97\u5b9e\u53c2p\u4e0e\u5f62\u53c2p\uff0c\u5b9e\u53c2\u6570\u7ec4a\u4e0e\u5f62\u53c2\u4e2d\u6307\u5411\u6570\u7ec4\u7684\u6307\u9488\u53d8\u91cf\u5171\u7528\u540c\u4e00\u5b58\u50a8\u7a7a\u95f4\u3002\u6700\u540e\u8f93\u51fap[2]\uff0cp[5]\u4e3a56\u3002", "\u00a0", "(42)\u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f______\u3002", "#define a 121", "const b=12\uff1a", "enum c{a1\uff0ca2}\uff1b", "main()", "{", "printf(\u201d\uff05d\uff0c\uff05d\uff0c\uff05d\uff0e\u201d\uff0csizeOf(a)\uff0csizeOf(b)\uff0csizeof(enum C))\uff1b", "}", "A)121,0\uff0c4\u00a0\u00a0 \u00a0\u00a0\u00a0B)2\uff0c2\uff0c2\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)0\uff0c2\uff0c4\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)0\uff0c2\uff0c2", "B", "sizeof\u51fd\u6570\u662f\u53d6\u53d8\u91cf\u6240\u5360\u7684\u5b58\u50a8\u7a7a\u95f4\u7684\u5b57\u8282\u6570\uff0c\u6807\u8bc6a\u4ee3\u8868\u5e38\u91cf121\uff1bconst b=12\uff1b\uff0c\u5176\u4e2d\u6570\u636e\u7c7b\u578b\u53ef\u4ee5\u7f3a\u7701\uff0c\u9ed8\u8ba4\u4e3a\u6574\u578b\uff1benum c{al,a2}\uff1b\u5b9a\u4e49\u4e86\u4e00\u4e2a\u679a\u4e3e\u7c7b\u578benum c\uff0cal,a2\u4e3a\u679a\u4e3e\u5143\u7d20\uff0c\u5728c\u7f16\u8bd1\u65f6\uff0c\u5bf9\u679a\u4e3e\u5143\u7d20\u6309\u5e38\u91cf\u5904\u7406\uff0c\u5b83\u4eec\u7684\u503c\u6309\u5b9a\u4e49\u987a\u5e8f\u4f9d\u6b21\u4e3a0\uff0c1\u3002\u56e0\u6b64\u5b83\u4eec\u7684\u5b57\u8282\u6570\u5747\u4e3a2,2,2\u3002", "\u00a0", "(43)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f______\u3002", "struct HAR", "{int\u00a0 x\uff0cy\uff1bstruct HAR *p\uff1b} h[2]\uff1b", "main()", "{\u00a0 h[0].X=1; h[O].y=2\uff1b", "h[1].x=3\uff1bh[1].y=4\uff1b", "h[0].p=&h[1]\uff1bh[1].p=h\uff1b", "printf(\u201d\uff05d\uff05d\\n\u201d\uff0c(h[O].p)->x\uff0c(h[1].p)->y)\uff1b", "}", "A)12\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)23\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)14\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)32", "D", "\u672c\u9898\u4e2d\u662f\u4e00\u4e2a\u542b\u6709\u4e24\u4e2a\u7ed3\u70b9\u7684\u5faa\u73af\u94fe\u8868\u3002", "c\u8bed\u8a00\u4e2d\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\u4e3a\uff1a\uff0e", "struct\u7ed3\u6784\u4f53\u7c7b\u578b\u540d", "{", "\u6210\u5458\u9879\u8868\uff1a", "}\uff1b", "\u00a0", "\u00a0", "(44)\u53d8\u91cfa\u6240\u5360\u7684\u5185\u5b58\u5b57\u8282\u6570\u662f______\u00a0 \u3002", "A)4\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)5\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)6\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)8", "Union U", "{\u00a0 char st[4]\uff1b", "Int i\uff1a", "Long l\uff1b", "}\uff1b", "Struct A", "{\u00a0 int c\uff1b", "Union U u\uff1b", "}a\uff1b", "C", "\u7ed3\u6784\u4f53\u53d8\u91cf\u6240\u5360\u5185\u5b58\u957f\u5ea6\u662f\u5404\u6210\u5458\u5360\u5185\u5b58\u957f\u5ea6\u4e4b\u548c\uff0c\u800c\u5171\u7528\u4f53\u53d8\u91cf\u6240\u5360\u7684\u5185\u5b58\u957f\u5ea6\u7b49\u4e8e\u6700\u957f\u7684\u6210\u5458\u7684\u957f\u5ea6\u3002\u672c\u9898\u7ed3\u6784\u4f53\u53d8\u91cfa\u4e2d\u6210\u5458c\u4e3a\u6574\u578b\u53602\u4e2a\u5b57\u8282\uff0c\u5171\u7528\u4f53\u53d8\u91cfu\u6700\u5927\u957f\u5ea6\u4e3a4\u4e2a\u5b57\u8282\uff0c\u6545\u9009C\u3002", "\u00a0", "(45)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u7ed3\u679c\u662f______\u3002", "int\u00a0 a,b\uff1b", "void fun()", "{\u00a0 a=100\uff1bb=200\uff1b)", "main()", "{int a=5,b=7\uff1b", "fun()\uff1b", "printf(\u201d\uff05d\uff05d\uff3cn\u201d\uff0ca\uff0cb)\uff1b", "}", "A)100200\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0B)57\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)200100 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)75", "B", "\u5168\u7a0b\u53d8\u91cf\u662f\u53ef\u4ee5\u5728\u5b50\u51fd\u6570\u4e2d\u5bf9\u5176\u503c\u4f5c\u6539\u53d8\uff0c\u4e14\u5b83\u4e5f\u53ef\u4f5c\u4e3a\u51fd\u6570\u95f4\u7684\u503c\u4f20\u9012\u3002\u4f46\u5f53\u51fd\u6570\u6216\u5b50\u51fd\u6570\u4e2d\u5b9a\u4e49\u4e86\u4e0e\u5168\u7a0b\u53d8\u91cf\u540d\u79f0\u76f8\u540c\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u5219\u5168\u7a0b\u53d8\u91cf\u5c06\u88ab\u5c4f\u853d\u3002", "\u00a0", "(46)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f______\u3002", "#define\u00a0 M(x,y,z) x*y+z", "main()", "{\u00a0 int a=l\uff0cb=2\uff0cc=3\uff1b", "printf(\u201d\uff05d\uff3cn\u201d\uff0cM(a+b\uff0cb+c\uff0cc+a))\uff1b", "}", "A)19\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)17\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)15\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)12", "D", "c\u8bed\u8a00\u7684\u5b8f\u5b9a\u4e49\u5305\u62ec\u4e0d\u5e26\u53c2\u6570\u7684\u5b8f\u5b9a\u4e49\u4e0e\u5e26\u53c2\u6570\u7684\u5b8f\u5b9a\u4e49\u3002\u672c\u9898\u4e3a\u5e26\u53c2\u6570\u7684\u5b8f\u5b9a\u4e49\uff0c\u5176\u5f62\u5f0f\u4e3a\uff1a#define\u5b8f\u540d(\u5f62\u53c2\u8868)\u00a0 \u5b57\u7b26\u4e32\uff0c\u672c\u9898\u7684M(a\u5341b\uff0cb+c\uff0cc+a)\u88ab\u5b57\u7b26\u4e32a+b*b+c+c+a\u4ee3\u66ff\u3002", "\u00a0", "(47)\u82e5\u6709\u4ee5\u4e0b\u8bf4\u660e\u548c\u8bed\u53e5\uff1a", "struct st", "{int n\uff1bchar *ch\uff1b)\uff1b", "struct st a[3]={5\uff0c\u201dabc\u201d\uff0c7\uff0c\u201ddef\u2019\uff0c9\uff0c\u201dghK\u201d}\uff0c*p=a\uff1b\u5219\u503c\u4e3a6\u7684\u8868\u8fbe\u5f0f\u662f______\u3002", "A)p++ ->n\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0B)p\u4e00>n++\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)(*p).n++\u00a0\u00a0 \u00a0\u00a0\u00a0D)+\u5341p->n", "D", "\u6839\u636e\u7ed3\u6784\u53d8\u91cf\u7684\u5b58\u50a8\u7279\u70b9\uff0cp+l\u610f\u5473\u7740\u589e\u52a0\u5730\u5740\u503c\u4e3a\u7ed3\u6784\u4f53\u6570\u7ec4a\u7684\u4e00\u4e2a\u5143\u7d20\u6240\u5360\u7684\u5b57\u8282\u6570\uff0c\u2018\u5373p++\u4f7fp\u7531a[0]\u6307\u5411a[1]\u8d77\u59cb\u5730\u5740\u3002\u672c\u9898++p>n\u5f97\u5230p\u6307\u5411\u7684\u7ed3\u6784\u4f53\u53d8\u91cf\u4e2d\u6210\u5458n\u7684\u503c\u4f7f\u4e4b\u52a0l\u3002\u56e0\u4e3ap\u6307\u5411\u6570\u7ec4a\u8d77\u59cb\u5730\u5740\uff0cp->n\u7684\u503c\u4e3a5\uff0c\u518d\u6267\u884c\u81ea\u52a0l\u8fd0\u884c\uff0c\u7ed3\u679c\u4e3a6\u3002", "\u00a0", "(48)\u6574\u578b\u53d8\u91cfx\u548cY\u7684\u503c\u76f8\u7b49\uff0c\u4e14\u4e3a\u975eO\u503c\uff0c\u5219\u4ee5\u4e0b\u9009\u9879\u4e2d\u7ed3\u679c\u4e3a0\u7684\u8868\u8fbe\u5f0f\u662f______\u3002", "A)x||Y\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)X|Y\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)X&Y\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)X^Y", "D", "\u201c\u2016\u201d\u4e3a\u6216\u8fd0\u7b97\u7b26\uff0c\u5f53\u5176\u5de6\u53f3\u8868\u8fbe\u5f0f\u4e2d\u53ea\u8981\u4e00\u4e2a\u4e3a\u975e\u96f6\u5219\u6574\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c1\u3002\ufe31\u662f\u6309\u4f4d\u6216\uff0c&\u662f\u6309\u4f4d\u4e0e\uff0c^\u662f\u6309\u4f4d\u5f02\u6216\uff0c\u8fd9\u4e09\u4f4d\u8fd0\u7b97\u7b26\u662f\u6309\u503c\u7684\u4e8c\u8fdb\u5236\u4f4d\u6765\u6bd4\u8f83\u7684\u3002", "\u00a0", "(49)C\u8bed\u8a00\u4e2d\uff0c\u7ec4\u6210\u6570\u636e\u6587\u4ef6\u7684\u6210\u5206\u662f______\u3002", "A)\u8bb0\u5f55\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)\u6570\u636e\u884c\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)\u6570\u636e\u5757\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)\u5b57\u7b26(\u5b57\u8282)\u5e8f\u5217", "D", "c\u8bed\u8a00\u4e2d\u7684\u6587\u4ef6\u662f\u6d41\u5f0f\u6587\u4ef6\u3002\u6d41\u5f0f\u6587\u4ef6\u662f\u4e00\u79cd\u65e0\u7ed3\u6784\u6587\u4ef6\uff0c\u5373\u6574\u4e2a\u6587\u4ef6\u662f\u4e00\u4e32\u5b57\u7b26\u6d41\u6216\u4e8c\u8fdb\u5236\u6d41\u3002\u6587\u4ef6\u7684\u5b58\u53d6\u4ee5\u5b57\u7b26\u6216\u5b57\u8282\u4e3a\u5355\u4f4d\u3002", "\u00a0", "(50)\u4e0b\u9762\u7684\u7a0b\u5e8f\u6267\u884c\u540e\uff0c\u6587\u4ef6test.t\u4e2d\u5185\u5bb9\u662f______\u3002", "#include<stdio.h>", "void fun(char *fname,char *st)", "{ FILE\u00a0 *myf\uff1bint i\uff1b", "myf=fopen(fname, \u201cw\u201d)\uff1b", "for(i=0\uff1bi<strlen(st)\uff1bi++)fputc(st[i]\uff0cmyf)\uff1b", "fclose(myf)\uff1b", "}", "main()", "{fun(\u201ctest.t\u201d,\u201dnew world\u201d)\uff1bfun(\u201ctest.t\u201d,\u201dhello,\u201d)\uff1b}", "A)hello\uff0c\u00a0\u00a0\u00a0 B)new worldhello\u00a0 C)new world\u00a0\u00a0\u00a0 D)hello,rid", "A", "c\u8bed\u8a00\u4e2d\u6587\u4ef6\u6709\u6587\u672c\u6587\u4ef6\u4e0e\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5bf9\u6587\u4ef6\u7684\u4f7f\u7528\u524d\u5fc5\u987b\u5148\u6253\u5f00\uff0c\u6253\u5f00\u65b9\u5f0f\u6709\u53ea\u8bfb\u3001\u5199\u5165\u3001\u8bfb\u5199\u7b49\u65b9\u5f0f\u3002", "\u00a0", "\u4e8c\u3001\u586b\u7a7a\u9898(\u6bcf\u7a7a2\u5206\uff0c\u517140\u5206)", "\u8bf7\u5c06\u6bcf\u4e00\u4e2a\u7a7a\u7684\u6b63\u786e\u7b54\u6848\u5199\u5728\u7b54\u9898\u5361\u7684\u30101\u3011\u81f3\u301020\u3011\u5e8f\u53f7\u7684\u6a2a\u7ebf\u4e0a\uff0c\u7b54\u5728\u8bd5\u5377\u4e0a\u4e0d\u5f97\u5206\u3002", "(1)\u5b9e\u73b0\u7b97\u6cd5\u6240\u9700\u7684\u5b58\u50a8\u5355\u5143\u591a\u5c11\u548c\u7b97\u6cd5\u7684\u5de5\u4f5c\u91cf\u5927\u5c0f\u5206\u522b\u79f0\u4e3a\u7b97\u6cd5\u7684", "\u00a0\u3002", "\u30101\u3011\u7a7a\u95f4\u590d\u6742\u5ea6\u548c\u65f6\u95f4\u590d\u6742\u5ea6", "\u7b97\u6cd5\u7684\u590d\u6742\u6027\u662f\u6307\u5bf9\u4e00\u4e2a\u5728\u6709\u9650\u6b65\u9aa4\u5185\u7ec8\u6b62\u7b97\u6cd5\u548c\u6240\u9700\u5b58\u50a8\u7a7a\u95f4\u5927\u5c0f\u7684\u4f30\u8ba1\u3002\u7b97\u6cd5\u6240\u9700\u5b58\u50a8\u7a7a\u95f4\u5927\u5c0f\u662f\u7b97\u6cd5\u7684\u7a7a\u95f4\u590d\u6742\u6027\uff0c\u7b97\u6cd5\u7684\u8ba1\u7b97\u91cf\u662f\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u6027\u3002", "\u00a0", "(2)\u6570\u636e\u7ed3\u6784\u5305\u62ec\u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u3001\u6570\u636e\u7684", "\u4ee5\u53ca\u5bf9\u6570\u636e\u7684\u64cd\u4f5c\u8fd0\u7b97\u3002", "\u30102\u3011\u5b58\u50a8\u7ed3\u6784", "\u6570\u636e\u7ed3\u6784\u5305\u62ec3\u4e2a\u65b9\u9762\uff0c\u5373\u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u3001\u6570\u636e\u7684\u5b58\u50a8\u7ed3\u6784\u53ca\u5bf9\u6570\u636e\u7684\u64cd\u4f5c\u8fd0\u7b97\u3002", "\u00a0", "(3)\u4e00\u4e2a\u7c7b\u53ef\u4ee5\u4ece\u76f4\u63a5\u6216\u95f4\u63a5\u7684\u7956\u5148\u4e2d\u7ee7\u627f\u6240\u6709\u5c5e\u6027\u548c\u65b9\u6cd5\u3002\u91c7\u7528\u8fd9\u4e2a\u65b9\u6cd5\u63d0\u9ad8\u4e86\u8f6f\u4ef6\u7684\u00a0 ", "\u3002", "\u30103\u3011\u53ef\u91cd\u7528\u6027", "\u7ee7\u627f\u7684\u4f18\u70b9\uff1a\u76f8\u4f3c\u7684\u5bf9\u8c61\u53ef\u4ee5\u5171\u4eab\u7a0b\u5e8f\u4ee3\u7801\u548c\u6570\u636e\u7ed3\u6784\uff0c\u4ece\u800c\u5927\u5927\u51cf\u5c11\u4e86\u7a0b\u5e8f\u4e2d\u7684\u5197\u4f59\uff0c\u63d0\u9ad8\u8f6f\u4ef6\u7684\u53ef\u91cd\u7528\u6027\u3002", "\u00a0", "(4)\u9762\u5411\u5bf9\u8c61\u7684\u6a21\u578b\u4e2d\uff0c\u6700\u57fa\u672c\u7684\u6982\u5ff5\u662f\u5bf9\u8c61\u548c ", "\u3002", "\u30104\u3011\u7c7b", "\u9762\u5411\u5bf9\u8c61\u6a21\u578b\u4e2d\uff0c\u6700\u57fa\u672c\u7684\u6982\u5ff5\u662f\u5bf9\u8c61\u548c\u7c7b\u3002\u5bf9\u8c61\u662f\u73b0\u5b9e\u4e16\u754c\u4e2d\u5b9e\u4f53\u7684\u6a21\u578b\u5316\uff1b\u5c06\u5c5e\u6027\u96c6\u548c\u65b9\u6cd5\u96c6\u76f8\u540c\u7684\u6240\u6709\u5bf9\u8c61\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u53ef\u4ee5\u6784\u6210\u4e00\u4e2a\u7c7b\u3002", "\u00a0", "(5)\u8f6f\u4ef6\u7ef4\u62a4\u6d3b\u52a8\u5305\u62ec\u4ee5\u4e0b\u51e0\u7c7b\uff1a\u6539\u6b63\u6027\u7ef4\u62a4\u3001\u9002\u5e94\u6027\u7ef4\u62a4\u3001", "\u7ef4\u62a4\u548c\u9884\u9632\u6027\u7ef4\u62a4\u3002", "\u30105\u3011\u5b8c\u5584\u6027", "\u8f6f\u4ef6\u7ef4\u62a4\u6d3b\u52a8\u5305\u62ec\u4ee5\u4e0b\u51e0\u7c7b\uff1a\u6539\u6b63\u6027\u7ef4\u62a4\u3001\u9002\u5e94\u6027\u7ef4\u62a4\u3001\u5b8c\u5584\u6027\u7ef4\u62a4\u548c\u9884\u9632\u6027\u7ef4\u62a4\u3002\u5b8c\u5584\u6027\u7ef4\u62a4\u662f\u6307\u4e3a\u4e86\u6ee1\u8db3\u7528\u6237\u5bf9\u8f6f\u4ef6\u63d0\u51fa\u7684\u65b0\u529f\u80fd\u4e0e\u6027\u80fd\u8981\u6c42\uff0c\u9700\u8981\u4fee\u6539\u6216\u518d\u5f00\u53d1\u8f6f\u4ef6\uff0c\u4ee5\u6269\u5145\u8f6f\u4ef6\u529f\u80fd\u3001\u589e\u5f3a\u8f6f\u4ef6\u6027\u80fd\u3001\u6539\u8fdb\u52a0\u5de5\u6548\u7387\u3001\u63d0\u9ad8\u8f6f\u4ef6\u7684\u53ef\u7ef4\u62a4\u6027\u3002", "\u00a0", "(6)\u8bed\u53e5\uff1aX++\uff1b\u3001++X\uff1b\u3001X=X+1\uff1b\u3001X=l+X\uff1b\uff0c\u6267\u884c\u540e\u90fd\u4f7f\u53d8\u91cfX\u4e2d\u7684\u503c\u589el\uff0c\u8bf7\u5199\u51fa\u4e00\u6761\u540c\u4e00\u529f\u80fd\u7684\u8d4b\u503c\u8bed\u53e5(\u4e0d\u5f97\u4e0e\u5217\u4e3e\u7684\u76f8\u540c)", "\u3002", "\u30106\u3011X+=1\uff1a", "\u5728c\u8bed\u8a00\u4e2d\u4f7f\u53d8\u91cf\u589el\u7684\u65b9\u6cd5\u6709\uff1a\u81ea\u589e\u8fd0\u7b97\u7b26\u4e0e\u8d4b\u503c\u8bed\u53e5\u3002\u5176\u4e2d\u81ea\u589e\u8fd0\u7b97\u7b26\u6709\u524d\u7f6e\u4e0e\u540e\u7f6e\u65b9\u5f0f\uff0c\u8d4b\u503c\u8bed\u53e5\u4e5f\u6709\u4e24\u79cd\u7c7b\u578b\u3002", "\u672c\u9898\u4e2d\u7684\u4e3b\u8981\u589el\u65b9\u5f0f\u6709\uff1ax++\uff1b\u3001++x\uff1b\u3001X=X+I\uff1b\u3001x=1+x\uff1b\u3001x+=l\uff1b\u3002", "\u00a0", "(7)\u8bbeY\u662fint\u578b\u53d8\u91cf\uff0c\u8bf7\u5199\u51fa\u5224\u65adY\u4e3a\u5947\u6570\u7684\u5173\u7cfb\u8868\u8fbe\u5f0f", "\u30107\u3011Y\uff052==1\u00a0 \u6216Y\uff052!=0", "\u5224\u65ad\u53d8\u91cf\u662f\u5426\u4e3a\u5947\u6570\u53ef\u4ee5\u7528\u53d8\u91cf\u4e0e2\u53d6\u6a21\uff0c\u5224\u65ad\u7ed3\u679c\u662f\u4e3a1\u6216\u4e0d\u4e3a0\u3002\u672c\u9898\u5177\u4f53\u505a\u6cd5\u5982\u4e0b\uff1aY\uff052==1\u6216Y\uff052 1=0\u3002", "\u00a0", "(8)\u00a0 \u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u662f", "\u3002", "main()", "{", "char strl[]=\u201dHow do you do\u201d,*pl=strl\uff1a", "strcpy(strl+strlen(strl)\uff0f2,\u201des she\u201d)\uff1b", "printf(\u201c\uff05s\uff3cn\u201d,p1)\uff1b", "}", "\u30108\u3011How does she", "strcpy(strl\uff0cs1)\uff1a\u5b57\u7b26\u4e32\u62f7\u8d1d\u51fd\u6570\uff0c\u4f5c\u7528\u662f\u5c06\u5b57\u7b26\u4e32s1\u62f7\u8d1d\u5230\u5b57\u7b26\u6570\u7ec4strl\u4e2d\u53bb\u3002strlen(str)\uff1a\u6d4b\u8bd5\u5b57\u7b26\u4e32str\u7684\u957f\u5ea6\uff0c\u51fd\u6570\u7684\u503c\u4e3a\u5b57\u7b26\u4e32\u4e2d\u5b9e\u9645\u957f\u5ea6\uff0c\u4e0d\u5305\u62ec\u2018\uff3cO\u2019\u5728\u5185\u3002\u672c\u9898\u4e2dstrlen(strll\u7684\u503c\u4e3a13\uff0c\u5219strcpy(strl+strlen(strl)\uff0f2,\u201des she\u201d\uff0c)\uff1b\u76f8\u5f53\u4e8estrcpy(strl+6,\u201des she\u201d)\uff1b\uff0c\u56e0\u6b64\u53ef\u5f97\u7b54\u6848\u4e3aHow does she\u3002", "\u00a0", "(9)\u4ee5\u4e0a\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f", "\u3002", "main()", "{int i=10,J=0\uff1b", "do", "{j=j+i\uff1bi\u2013\uff1b}", "while(i>2)\uff1b", "printf(\u201c\uff05d\uff3cn\u201d,j)\uff1b", "}", "\u30109\u301152", "do\uff0e\uff0e\uff0ewhile\u8bed\u53e5\u7684\u5f62\u5f0f\u4e3a\uff1a", "do", "{", "\u8bed\u53e5\uff1a", "}while(\u6761\u4ef6\u8868\u8fbe\u5f0f)", "\u5f53\u6761\u4ef6\u8868\u8fbe\u5f0f\u4e3a\u975e\u96f6\u65f6\uff0c\u7ee7\u7eed\u6267\u884c\u5faa\u73af\u4f53\uff0c\u76f4\u5230\u6761\u4ef6\u8868\u8fbe\u5f0f\u4e3a\u96f6\u65f6\u9000\u51fa\u5faa\u73af\u3002", "\u00a0", "(10)\u8bbe\u6709\u5982\u4e0b\u7a0b\u5e8f\uff1a", "main()", "{int nl\uff0cn2\uff1b", "scanf(\u201c\uff05df\u201d\uff0c&n2)\uff1b", "while(n2!=0)", "{\u00a0 nl=n2\uff05lO\uff1b", "n2=n2\uff0f10\uff1a", "printf(\u201c\uff05d\u201d\uff0cn1)\uff1b", "}", "}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\uff0c\u5982\u679c\u4ece\u952e\u76d8\u4e0a\u8f93\u51651298\uff0c\u5219\u8f93\u51fa\u7ed3\u679c\u4e3a", "\u3002", "\u301010\u30118921", "\u672c\u9898\u7684\u7a0b\u5e8f\u7684\u529f\u80fd\u662f\u5c06\u8f93\u5165\u7684\u6574\u6570\u53cd\u5411\u8f93\u51fa\u3002", "\u00a0", "(11)\u4ee5\u4e0b\u7a0b\u5e8f\u8f93\u51fa\u7684\u6700\u540e\u4e00\u4e2a\u503c", "\u3002", "Int\u00a0\u00a0 ff(int n)", "{static int f=1\uff1a", "f=f*n\uff1a", "retun f", "}", "main()", "{ int i\uff1b", "for(i=1\uff1bi<=5\uff1bi++)printf(\u201c\uff05d\uff3cn\u201d\uff0cff(i))\uff1b", "}", "\u3010ll\u3011120", "\u9759\u6001\u53d8\u91cf\u7684\u7c7b\u578b\u8bf4\u660e\u7b26\u662fstatic\uff0c\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u5c5e\u4e8e\u9759\u6001\u5b58\u50a8\u65b9\u5f0f\uff0c\u5b83\u5177\u6709\u4ee5\u4e0b\u7279\u70b9\uff1a", "\u2460\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u5c5e\u4e8e\u9759\u6001\u5b58\u50a8\u7c7b\u522b\uff0c\u5728\u9759\u6001\u5b58\u50a8\u533a\u5185\u5206\u914d\u5b58\u50a8\u5355\u5143\u3002\u5728\u7a0b\u5e8f\u6574\u4e2a\u8fd0\u884c\u671f\u95f4\u90fd\u4e0d\u91ca\u653e\u3002", "\u2461\u5bf9\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u662f\u5728\u7f16\u8bd1\u65f6\u8d4b\u521d\u503c\u7684\uff0c\u5373\u53ea\u8d4b\u521d\u503c\u4e00\u6b21\uff0c\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u5b83\u5df2\u6709\u521d\u503c\u3002\u4ee5\u540e\u6bcf\u6b21\u8c03\u7528\u51fd\u6570\u65f6\u4e0d\u518d\u91cd\u65b0\u8d4b\u521d\u503c\u800c\u53ea\u662f\u4fdd\u7559\u4e0a\u6b21\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u65f6\u7684\u503c\u3002", "\u2462\u5982\u5728\u5b9a\u4e49\u5c40\u90e8\u53d8\u91cf\u65f6\u4e0d\u8d4b\u521d\u503c\u7684\u8bdd\uff0c\u5219\u5bf9\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u6765\u8bf4\uff0c\u7f16\u8bd1\u65f6\u81ea\u52a8\u8d4b\u521d\u503c0(\u5bf9\u6570\u503c\u578b\u53d8\u91cf)\u6216\u7a7a\u5b57\u7b26(\u5bf9\u5b57\u7b26\u53d8\u91cf)\u3002(\u6ce8\u610f\uff1ac\u8bed\u8a00\u4e2d\u7684\u975e\u9759\u6001\u53d8\u91cf\u5728\u5b9a\u4e49\u65f6\uff0c\u7cfb\u7edf\u5e76\u4e0d\u4f1a\u81ea\u52a8\u7ed9\u5b83\u8d4b\u521d\u503c)", "\u2463\u867d\u7136\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u5728\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u540e\u4ecd\u7136\u5b58\u5728\uff0c\u4f46\u5176\u4ed6\u51fd\u6570\u662f\u4e0d\u80fd\u5f15\u7528\u5b83\u7684\u3002", "\u672c\u9898\u4e2d\u51fd\u6570\u7684\u529f\u80fd\u662f\uff1a\u4e0efor\u8bed\u53e5\u4e00\u8d77\u6c42\u4e00\u4e2a\u6574\u6570\u7684\u9636\u4e58\u3002", "\u00a0", "(12)\u4ee5\u4e0b\u51fd\u6570\u7684\u529f\u80fd\u662f\uff1a\u6c42x\u7684y\u6b21\u65b9\uff0c\u8bf7\u586b\u7a7a\uff0e", "double fun(double x,int y)", "{int i\uff1b", "double z\uff1b", "for(i=1,z=x\uff1bi<y\uff1bi++)z=z*", "\uff1b", "return z\uff1a", ")", "\u301012\u3011x", "\u51fd\u6570\u7684\u5b9a\u4e49\u5f62\u5f0f\u4e3a\uff1a", "\u51fd\u6570\u7c7b\u578b\u51fd\u6570\u540d(\u5f62\u53c2\u8868)", "{", "\u7c7b\u578b\u8bf4\u660e\u8bed\u53e5\uff1b", "\u6267\u884c\u8bed\u53e5\uff1a", "}", "\u672c\u9898\u4e2d\u51fd\u6570\u7684\u529f\u80fd\u662f\uff1a\u7d2f\u79ef\u53d8\u91cf\u4ee5\u6c42\u5f97\u53d8\u91cf\u7684Y\u6b21\u65b9\u3002", "\u00a0", "(13)\u4e0b\u5217\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f", "\u00a0\u3002", "main()", "{", "int a[]={2\uff0c4\uff0c6}\uff0c*ptr=&a[0]\uff0cx=8\uff0cy,z\uff1b", "for(y=O\uff1by<3\uff1by++)", "z=(*(ptr+y)<x)?*(ptr\u5341y)\uff1ax\uff1b", "printf(\u201d\uff05d\uff3cn\u201d\uff0cz)\uff1b", "}", "\u301013\u30116", "\u6761\u4ef6\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u8d4b\u503c\u8fd0\u7b97\u7b26\uff0c\u56e0\u6b64\u672c\u9898\u5148\u8ba1\u7b97\u5173\u7cfb\u8868\u8fbe\u5f0f(*(ptr+y)<x)?*(ptr+y)\uff1ax\u7684\u503c\uff0c\u518d\u8d4b\u7ed9\u53d8\u91cfz\u3002\u5f53y=O\u65f6\uff0c*(ptr+y)=2\uff0c\u800cx=8\uff0c(*ptr+y)<x)\u6761\u4ef6\u4e3a\u771f\uff0c\u5219\u6574\u4e2a\u6761\u4ef6\u8868\u8fbe\u5f0f\u7684\u503c\u4e3a*(ptr+y)=2\uff0c\u6240\u4ee5Z=2\uff1b\u5f53y=l\u65f6\uff0c*(ptr+y)=4\uff0c(*(pty+y)<x)\u6761\u4ef6\u4e3a\u771f\uff0c\u5219\u6574\u4e2a\u6761\u4ef6\u8868\u8fbe\u5f0f\u7684\u503c\u4e3a*(ptr+y)=4\uff0c\u6240\u4ee5z=4\uff1b\u5f53y=2\u65f6\uff0c*(ptr+y)=6\uff0c(*(ptr+y)<x)\u6761\u4ef6\u4e3a\u771f\uff0c\u5219\u6574\u4e2a\u6761\u4ef6\u8868\u8fbe\u5f0f\u7684\u503c\u4e3a*(ptr+y)=6\uff0c\u6240\u4ee5z=6\uff1b\u5faa\u73af\u7ed3\u675f\u3002\u56e0\u6b64\u8f93\u51faz\u7684\u7ed3\u679c\u4e3a6\u3002", "\u00a0", "(14)\u4ee5\u4e0b\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f", "\u3002", "main()", "{ char s[]=\u201d9876\u201d\uff0c*p\uff1b", "for(p=s\uff1bp<s+2\uff1bp++)printf(\u201c\uff05s\uff3cn\u201d\uff0cp)\uff1b", "}", "\u301014\u30119876", "876", "\u6307\u9488\u662f\u4e00\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u8fd9\u79cd\u6570\u636e\u7c7b\u578b\u7684\u53d8\u91cf\u7528\u6765\u5b58\u653e\u5185\u5b58\u4e2d\u5206\u914d\u7684\u5b58\u50a8\u5355\u5143\u7684\u9996\u5730\u5740\u3002", "\u6307\u9488\u7684\u5b9a\u4e49\uff1a", "\u7c7b\u578b\u8bf4\u660e\u7b26\u00a0 *\u6307\u9488\u53d8\u91cf\u540d\uff1b", "\u00a0", "(15)\u82e5\u6709\u5b9a\u4e49\u8bed\u53e5\uff1achar s[100]\uff0cd[100]\uff1bint j=0\uff0ci=0\uff1b\u4e14s\u4e2d\u5df2\u8d4b\u5b57\u7b26\u4e32\uff0c\u8bf7\u586b\u7a7a\u4ee5\u5b9e\u73b0\u62f7\u8d1d\u3002(\u6ce8\uff1a\u4e0d\u4f7f\u7528\u9017\u53f7\u8868\u8fbe\u5f0f)", "while(s[i]){d[j]=", "\u00a0;j++\uff1b}", "d[j]=0\uff1b", "\u301015\u3011s[i++]", "\u672c\u9898\u4e2d\u4e3a\u4e86\u80fd\u5b9e\u73b0\u5b57\u7b26\u4e32\u7684\u62f7\u8d1d\uff0c\u9700\u8981\u4f7f\u5b57\u7b26\u6570\u7ec4s\u4ece\u5934\u5230\u5c3e\u4f9d\u6b21\u904d\u5386\u5176\u6240\u6709\u5143\u7d20\u3002\u672c\u9898\u5e94\u4f7f\u7528i\u7684\u81ea\u589e\u540e\u7f6e\u6765\u5b9e\u73b0\u3002", "\u00a0", "(16)\u82e5\u6709\u5982\u4e0b\u7ed3\u6784\u4f53\u8bf4\u660e\uff1a", "struct STRU", "{ int a,b\uff1bchar c\uff1adouble d\uff1a", "struct STRU\u00a0 *pl\uff0c*p2\uff1b", "}\uff1b", "\u8bf7\u586b\u7a7a\uff0c\u4ee5\u5b8c\u6210\u5bf9t\u6570\u7ec4\u7684\u5b9a\u4e49\uff0ct\u6570\u7ec4\u7684\u6bcf\u4e2a\u5143\u7d20\u4e3a\u8be5\u7ed3\u6784\u4f53\u7c7b\u578b\u3002", "\u00a0t[20]", "\u301016\u3011struct STRU", "\u7ed3\u6784\u4f53\u7c7b\u578b\u662f\u6784\u9020\u6570\u636e\u7c7b\u578b\uff0c\u662f\u7528\u6237\u81ea\u5df1\u5b9a\u4e49\u7684\u4e00\u79cd\u7c7b\u578b\u3002", "\u7ed3\u6784\u4f53\u7c7b\u578b\u7684\u5b9a\u4e49\uff1a", "struct\u7ed3\u6784\u4f53\u7c7b\u578b\u540d", "{", "\u6210\u5458\u9879\u8868\uff1a", "}\uff1b", "\u5b9a\u4e49\u7ed3\u6784\u4f53\u53d8\u91cf\u7684\u7684\u5f62\u5f0f\u4e3a\uff1a", "struct\u7ed3\u6784\u4f53\u7c7b\u578b\u540d\u00a0 \u53d8\u91cf1\uff0c\u53d8\u91cf2\uff0c\uff0e\uff0e\uff0e", "\u5176\u4e2d\u53d8\u91cf\u5305\u62ec\uff1a\u4e00\u822c\u53d8\u91cf\u3001\u6307\u9488\u53d8\u91cf\u3001\u6570\u7ec4\u53d8\u91cf\u7b49\u3002", "\u00a0", "(17)\u4e0b\u9762\u7684\u7a0b\u5e8f\u53ef\u5bf9\u6307\u5b9a\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u4e32\u8fdb\u884c\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u8bf7\u5c06\u7a0b\u5e8f\u586b\u5b8c\u6574(\u6ce8\uff1a\u7a0b\u5e8f\u91c7\u7528\u4e86\u5192\u6ce1\u6392\u5e8f\u7b97\u6cd5)", "#include<stdio.h>", "#include<string.h>", "main()", "{\u00a0 char *str=\u201dABCDabcd\u201d,temp\uff1b", "Int n\uff0ci\uff1b", "n=strlen(str)\uff1b", "while(n\u2013>1)", "for(i=0\uff1bi<n\uff1bi++)", "if(str[i]<str[i+1])", "{ temp=", "str[i]=str[i+1]\uff1b", "=temp\uff1b", "}", "Printf(", "\uff1b", "}", "\u301017\u3011str[i]", "\u301018\u3011str[i+1]", "\u301019\u3011\u201c\uff05s\u201d,str", "\u672c\u9898\u8981\u6c42\u5c06\u5b57\u7b26\u4e32str\u4e2d\u7684\u5b57\u7b26\u7528\u5192\u6ce1\u6392\u5e8f\u7b97\u6cd5\u4ece\u5927\u5230\u5c0f\u6392\u5217\uff0c\u5176\u5b9e\u73b0\u8fc7\u7a0b\u662f\u5c06\u76f8\u90bb\u4e24\u4e2a\u5b57\u7b26\u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u5f53\u524d\u5b57\u7b26\u5c0f\u4e8e\u4e0b\u4e00\u4e2a\u5b57\u7b26\uff0c\u5219\u901a\u8fc7\u4e2d\u95f4\u53d8\u91cftemp\u5c06\u5b57\u7b26\u4e24\u4e24\u4ea4\u6362\uff0c\u6240\u4ee5\u7b2c\u4e00\u7a7a\u5e94\u586b\uff1astr[i]\uff0c\u7b2c\u4e8c\u7a7a\u5e94\u586b\uff1astr[i+1]\u3002\u6700\u7ec8\u6253\u5370\u8f93\u51fa\u5f97\u5230\u7684\u5b57\u7b26\u4e32str\uff0c\u6240\u4ee5\u7b2c\u4e09\u7a7a\u5e94\u586b\uff1b\u201c\uff05s\u201d,str\u3002", "\u00a0", "(18)\u4ee5\u4e0b\u7a0b\u5e8f\u6bb5\u6253\u5f00\u6587\u4ef6\u540e\uff0c\u5148\u5229\u7528fseek\u51fd\u6570\u5c06\u6587\u4ef6\u4f4d\u7f6e\u6307\u9488\u5b9a\u4f4d\u5728\u6587\u4ef6\u672b\u5c3e\uff0c\u7136\u540e\u8c03\u00a0\u00a0\u00a0 \u7528ftell\u51fd\u6570\u8fd4\u56de\u5f53\u524d\u6587\u4ef6\u4f4d\u7f6e\u6307\u9488\u7684\u5177\u4f53\u4f4d\u7f6e\uff0c\u4ece\u800c\u786e\u5b9a\u6587\u4ef6\u957f\u5ea6\uff0c\u8bf7\u586b\u7a7a\u3002", "FILE *myf\uff1blong\u00a0 fl\uff1b", "myf=", "(\u201ctest.t\u201d\uff0c\u201drb\u201d)\uff1b", "fseek(myf,()\uff0cSEEK_END)\uff1bfl+ftell(myf)\uff1b", "fclose(myf)\uff1b", "printf(\u201d\uff05l d\uff3cn\u201d,f1)\uff1b", "\u301020\u3011fopen", "C\u8bed\u8a00\u4e2d\u7684\u6587\u4ef6\u5206\u4e3a\uff1aASCII\u6587\u4ef6\u4e0e\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u6587\u4ef6\u5728\u4f7f\u7528\u524d\u6253\u5f00\uff0c\u4f7f\u7528\u540e\u8981\u5173\u95ed\u3002", "\u6253\u5f00\u6587\u4ef6\u7684\u51fd\u6570\u4e3a\uff1afopen()\uff0c\u8c03\u7528\u5f62\u5f0f\u4e3a\uff1afp=fopen(\u201c\u6587\u4ef6\u540d\u201d\uff0c\u201c\u4f7f\u7528\u6587\u4ef6\u65b9\u5f0f\u201d)\uff1b", "\u5173\u95ed\u6587\u4ef6\u7684\u51fd\u6570\u4e3a\uff1afclose()\uff0c\u8c03\u7528\u5f62\u5f0f\u4e3a\uff1afclose(fp)\uff1b\u5176\u4e2dfp\u4e3a\u6587\u4ef6\u6307\u9488\u3002"], "title": "C\u8bed\u8a00\u7b14\u8bd5\u9898\u5e26\u7b54\u6848\uff08\u4e03\uff09"},
{"contents": ["\u4e00\u3001\u9009\u62e9\u9898((1)\uff5e(10)\u6bcf\u5c0f\u98982\u5206\uff0c(11)-(50)\u6bcf\u5c0f\u98981\u5206\uff0c\u517160\u5206)", "\u4e0b\u5217\u5404\u9898A)\u3001B)\u3001C)\u3001D)\u56db\u4e2a\u9009\u9879\u4e2d\uff0c\u53ea\u6709\u4e00\u4e2a\u9009\u9879\u662f\u6b63\u786e\u7684\uff0c\u8bf7\u5c06\u6b63\u786e\u9009\u9879\u6d82\u5199\u5728\u7b54\u9898\u5361\u76f8\u5e94\u4f4d\u7f6e\u4e0a\uff0c\u7b54\u5728\u8bd5\u5377\u4e0a\u4e0d\u5f97\u5206\u3002", "(1)\u7b97\u6cd5\u80fd\u6b63\u786e\u5730\u5b9e\u73b0\u9884\u5b9a\u529f\u80fd\u7684\u7279\u6027\u79f0\u4e3a\u7b97\u6cd5\u7684__________\u3002", "A)\u786e\u5b9a\u6027\u00a0\u00a0\u00a0 B)\u6613\u8bfb\u6027\u00a0\u00a0\u00a0 C)\u5065\u58ee\u6027\u00a0\u00a0\u00a0 D)\u9ad8\u6548\u6027", "A", "\u7b97\u6cd5\u7684\u786e\u5b9a\u6027\u662f\u6307\u7b97\u6cd5\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6b65\u9aa4\u90fd\u5fc5\u987b\u662f\u6709\u660e\u786e\u5b9a\u4e49\u7684\uff0c\u4e0d\u5141\u8bb8\u6709\u6478\u68f1\u4e24\u53ef\u7684\u89e3\u91ca\uff0c\u4e5f\u4e0d\u5141\u8bb8\u6709\u591a\u4e49\u6027\uff0c\u5373\u6bcf\u4e2a\u6b65\u9aa4\u90fd\u662f\u9884\u5148\u5b9a\u4e49\u597d\u7684\u3002", "\u00a0", "(2)\u6570\u636e\u5728\u8ba1\u7b97\u673a\u5b58\u50a8\u5668\u5185\u8868\u793a\u65f6\uff0c\u7269\u7406\u5730\u5740\u4e0e\u903b\u8f91\u5730\u5740\u76f8\u540c\u5e76\u4e14\u662f\u8fde\u7eed\u7684\uff0c\u79f0\u4e4b\u4e3a__________\u3002", "A)\u5b58\u50a8\u7ed3\u6784\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0B)\u903b\u8f91\u7ed3\u6784", "C)\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784\u00a0\u00a0\u00a0 D)\u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784", "C", "\u8bc4\u6790:\u5982\u679c\u6570\u636e\u4e4b\u95f4\u5728\u903b\u8f91\u4e0a\u6709\u76f8\u90bb\u5173\u7cfb\u65f6\uff0c\u80fd\u591f\u5728\u7269\u7406\u4f4d\u7f6e\u4e0a\u4f53\u73b0\u51fa\u6765\uff0c\u5219\u8fd9\u79cd\u5b58\u50a8\u7ed3\u6784\u79f0\u4e3a\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784\u3002\u5982\u679c\u6570\u636e\u4e4b\u95f4\u7684\u903b\u8f91\u76f8\u90bb\u5173\u7cfb\u5728\u5b58\u50a8\u65f6\u662f\u9760\u5b58\u50a8\u5730\u5740\u7684\u6307\u9488\u6765\u4f53\u73b0\u7684\uff0c\u5219\u79f0\u4e3a\u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784\u3002", "\u00a0", "(3)\u4ece\u672a\u6392\u5e8f\u5e8f\u5217\u4e2d\u4f9d\u6b21\u53d6\u51fa\u4e00\u4e2a\u5143\u7d20\u4e0e\u5df2\u6392\u5e8f\u5e8f\u5217\u4e2d\u7684\u5143\u7d20\u4f9d\u6b21\u8fdb\u884c\u6bd4\u8f83\uff0c\u7136\u540e\u5c06\u5176\u653e\u00a0\u00a0 \u5728\u5df2\u6392\u5e8f\u5e8f\u5217\u7684\u5408\u9002\u4f4d\u7f6e\uff0c\u8be5\u6392\u5e8f\u65b9\u6cd5\u79f0\u4e3a__________\u3002", "A)\u5e0c\u5c14\u6392\u5e8f\u00a0\u00a0\u00a0 B)\u5192\u6ce1\u6392\u5e8f\u00a0\u00a0\u00a0 C)\u63d2\u5165\u6392\u5e8f\u00a0\u00a0\u00a0 D)\u9009\u62e9\u6392\u5e8f", "C", "\u8bc4\u6790:\u6700\u57fa\u672c\u7684\u6392\u5e8f\u65b9\u6cd5\u6709\u4e09\u5927\u7c7b\uff0c\u5373\u9009\u62e9\u6392\u5e8f\u3001\u4ea4\u6362\u6392\u5e8f\u548c\u63d2\u5165\u6392\u5e8f\u3002", "\u00a0", "(4)\u5bf9\u7ebf\u6027\u8868\u8fdb\u884c\u6298\u534a\u67e5\u627e\u65f6\uff0c\u8981\u6c42\u7ebf\u6027\u8868\u5fc5\u987b__________\u3002", "A)\u4ee5\u987a\u5e8f\u65b9\u5f0f\u5b58\u50a8", "B)\u4ee5\u94fe\u63a5\u65b9\u5f0f\u5b58\u50a8", "C)\u4ee5\u987a\u5e8f\u65b9\u5f0f\u5b58\u50a8\uff0c\u4e14\u7ed3\u70b9\u6309\u5173\u952e\u5b57\u6709\u5e8f\u6392\u5217", "D)\u4ee5\u94fe\u63a5\u65b9\u5f0f\u5b58\u50a8\uff0c\u4e14\u7ed3\u70b9\u6309\u5173\u952e\u5b57\u6709\u5e8f\u6392\u5217", "C", "\u8bc4\u6790:\u6298\u534a\u67e5\u627e\u7b97\u6cd5\u8981\u6c42\u88ab\u67e5\u627e\u7684\u5bf9\u8c61\u5fc5\u987b\u91c7\u7528\u987a\u5e8f\u7684\u5b58\u50a8\u7ed3\u6784\uff0c\u5e76\u4e14\u5173\u952e\u5b57\u6709\u5e8f\u6392\u5217\u3002", "\u00a0", "(5)\u94fe\u8868\u4e0d\u5177\u5907\u7684\u7279\u70b9\u662f__________\u3002", "A)\u53ef\u968f\u673a\u8bbf\u95ee\u4efb\u610f\u4e00\u4e2a\u7ed3\u70b9", "B)\u63d2\u5165\u548c\u5220\u9664\u4e0d\u9700\u8981\u79fb\u52a8\u4efb\u4f55\u5143\u7d20", "C)\u4e0d\u5fc5\u4e8b\u5148\u4f30\u8ba1\u5b58\u50a8\u7a7a\u95f4", "D)\u6240\u9700\u7a7a\u95f4\u4e0e\u5176\u957f\u5ea6\u6210\u6b63\u6bd4", "A", "\u987a\u5e8f\u8868\u53ef\u4ee5\u968f\u673a\u8bbf\u95ee\u4efb\u610f\u4e00\u4e2a\u7ed3\u70b9\uff0c\u800c\u94fe\u8868\u5fc5\u987b\u4ece\u7b2c\u4e00\u4e2a\u6570\u636e\u7ed3\u70b9\u51fa\u53d1\uff0c\u9010\u4e00\u67e5\u627e\u6bcf\u4e2a\u7ed3\u70b9\u3002", "\u00a0", "(6)\u4e0b\u5217\u63cf\u8ff0\u4e2d\u6b63\u786e\u7684\u662f__________\u3002", "A)\u8f6f\u4ef6\u662f\u7269\u7406\u4ea7\u54c1", "B)\u7a0b\u5e8f\u5c31\u662f\u8f6f\u4ef6", "C)\u8f6f\u4ef6\u5de5\u7a0b\u7531\u65b9\u6cd5\u3001\u5de5\u5177\u548c\u8fc7\u7a0b\u4e09\u90e8\u5206\u7ec4\u6210", "D)\u8f6f\u4ef6\u5de5\u7a0b\u662f\u4e00\u4e2a\u673a\u68b0\u5de5\u7a0b", "B", "\u8bc4\u6790:\u8f6f\u4ef6\u662f\u4e0e\u8ba1\u7b97\u673a\u7cfb\u7edf\u64cd\u4f5c\u6709\u5173\u7684\u7a0b\u5e8f\u3001\u89c4\u7a0b\u3001\u89c4\u5219\u53ca\u4efb\u4f55\u4e0e\u4e4b\u6709\u5173\u7684\u6587\u6863\u548c\u6570\u636e\u3002\u8ba1\u7b97\u673a\u8f6f\u4ef6\u662f\u4e00\u79cd\u903b\u8f91\u4ea7\u54c1\uff0c\u800c\u4e0d\u662f\u7269\u7406\u4ea7\u54c1\u3002\u8f6f\u4ef6\u5de5\u7a0b\u662f\u7528\u5de5\u7a0b\u3001\u79d1\u5b66\u548c\u6570\u5b66\u7684\u539f\u5219\u4e0e\u65b9\u6cd5\u7814\u5236\u3001\u7ef4\u62a4\u8ba1\u7b97\u673a\u8f6f\u4ef6\u7684\u6709\u5173\u6280\u672f\u53ca\u7ba1\u7406\u65b9\u6cd5\u3002\u8f6f\u4ef6\u5de5\u5177\u53ef\u4ee5\u81ea\u52a8\u6216\u534a\u81ea\u52a8\u7684\u751f\u6210\u8f6f\u4ef6\u6587\u6863\u3002\u8f6f\u4ef6\u5de5\u7a0b\u8fc7\u7a0b\u662f\u7ba1\u7406\u8005\u63a7\u5236\u8f6f\u4ef6\u5f00\u53d1\u5404\u73af\u8282\u7684\u57fa\u672c\u65b9\u6cd5\u3002", "\u00a0", "(7)\u8f6f\u4ef6\u6d4b\u8bd5\u662f\u4fdd\u8bc1\u8f6f\u4ef6\u8d28\u91cf\u6700\u5173\u952e\u7684\u6b65\u9aa4\uff0c\u4e0b\u5217\u5173\u4e8e\u767d\u76d2\u6d4b\u8bd5\u6280\u672f\u63cf\u8ff0\u4e2d\u4e0d\u6b63\u786e\u7684\u662f_______\u3002", "A)\u4fdd\u8bc1\u6a21\u5757\u4e2d\u6bcf\u4e00\u72ec\u7acb\u7684\u8def\u5f84\u81f3\u5c11\u6267\u884c\u4e00\u6b21", "B)\u4fdd\u8bc1\u6240\u6709\u5224\u65ad\u7684\u6bcf\u4e00\u5206\u652f\u81f3\u5c11\u6267\u884c\u4e00\u6b21", "C)\u4fdd\u8bc1\u6bcf\u4e00\u5faa\u73af\u90fd\u5728\u8fb9\u754c\u6761\u4ef6\u548c\u4e00\u822c\u6761\u4ef6\u4e0b\u6700\u591a\u6267\u884c\u4e00\u6b21", "D)\u9a8c\u8bc1\u6240\u6709\u5185\u90e8\u6570\u636e\u7ed3\u6784\u7684\u6709\u6548\u6027", "C", "\u8bc4\u6790:\u8f6f\u4ef6\u6d4b\u8bd5\u6280\u672f\u4e2d\uff0c\u767d\u76d2\u6d4b\u8bd5\u6280\u672f\u548c\u9ed1\u76d2\u6d4b\u8bd5\u6280\u672f\u662f\u4e24\u79cd\u57fa\u672c\u7684\u8f6f\u4ef6\u6d4b\u8bd5\u624b\u6bb5\u3002\u767d\u76d2\u6d4b\u8bd5\u6280\u672f\u6709\u56db\u4e2a\u539f\u5219\uff1a\u4fdd\u8bc1\u6a21\u5757\u4e2d\u6bcf\u4e00\u4e2a\u72ec\u7acb\u7684\u8def\u5f84\u81f3\u5c11\u6267\u884c\u4e00\u6b21\uff1b\u4fdd\u8bc1\u6240\u6709\u5224\u65ad\u7684\u6bcf\u4e00\u5206\u652f\u81f3\u5c11\u6267\u884c\u4e00\u6b21\uff1b\u4fdd\u8bc1\u6bcf\u4e00\u5faa\u73af\u90fd\u5728\u8fb9\u754c\u6761\u4ef6\u548c\u4e00\u822c\u6761\u4ef6\u4e0b\u81f3\u5c11\u6267\u884c\u4e00\u6b21\uff1b\u9a8c\u8bc1\u6240\u6709\u5185\u90e8\u6570\u636e\u7ed3\u6784\u7684\u6709\u6548\u6027\u3002", "\u00a0", "(8)\u5ba2\u89c2\u4e16\u754c\u4e2d\u4efb\u4f55\u4e00\u4e2a\u4e8b\u7269\u90fd\u53ef\u4ee5\u770b\u6210\u4e00\u4e2a\u5bf9\u8c61\u3002\u4f46\u662f\u4ece\u8ba1\u7b97\u673a\u7684\u89d2\u5ea6\u770b\uff0c\u4e00\u4e2a\u5bf9\u8c61\u5e94\u00a0\u00a0\u00a0 \u8be5\u5305\u542b\u4e24\u4e2a\u8981\u7d20\uff1a\u4e00\u4e2a\u662f_______\uff0c\u53e6\u4e00\u4e2a\u662f\u9700\u8981\u8fdb\u884c\u7684\u64cd\u4f5c\u3002", "A)\u8bed\u53e5\u00a0\u00a0\u00a0 B)\u547d\u4ee4\u00a0\u00a0\u00a0 C)\u7b97\u6cd5\u00a0\u00a0\u00a0 D)\u6570\u636e", "D", "\u8bc4\u6790:\u5728\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\uff0c\u4ece\u8ba1\u7b97\u673a\u7684\u89d2\u5ea6\u770b\uff0c\u4e00\u4e2a\u5bf9\u8c61\u5e94\u8be5\u5305\u542b\u4e24\u4e2a\u5143\u7d20\uff1a\u6570\u636e\uff0c\u76f8\u5f53\u4e8e\u5bb6\u5ead\u4e2d\u7684\u6210\u5458\uff1b\u64cd\u4f5c\uff0c\u76f8\u5f53\u4e8e\u5bb6\u5ead\u6210\u5458\u7684\u6d3b\u52a8\u3002\u5bf9\u8c61\u5c31\u662f\u4e00\u4e2a\u5305\u542b\u6570\u636e\u4e0e\u8fd9\u4e9b\u6570\u636e\u6709\u5173\u7684\u64cd\u4f5c\u7684\u96c6\u5408\u3002", "\u00a0", "(9)\u4e0b\u5217\u6982\u5ff5\u4e2d\uff0c\u4e0d\u662f\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\u5fc5\u987b\u63d0\u4f9b\u7684\u6570\u636e\u63a7\u5236\u529f\u80fd\u7684\u662f_______\u3002", "A)\u5b89\u5168\u6027\u00a0\u00a0\u00a0 B)\u5b8c\u6574\u6027\u00a0\u00a0\u00a0 C)\u79fb\u690d\u6027\u00a0\u00a0\u00a0 D)\u4e00\u81f4\u6027", "C", "\u8bc4\u6790:\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\u63d0\u4f9b\u7684\u6570\u636e\u63a7\u5236\u529f\u80fd\u662f\u6307\u5728\u6570\u636e\u5e93\u5efa\u7acb\u3001\u8fd0\u884c\u548c\u7ef4\u62a4\u65f6\uff0c\u7531DBMS\u7edf\u4e00\u7ba1\u7406\u3001\u7edf\u4e00\u63a7\u5236\uff0c\u4ee5\u4fdd\u8bc1\u6570\u636e\u7684\u5b89\u5168\u6027\u3001\u5b8c\u6574\u6027\u548c\u4e00\u81f4\u6027\u3002", "\u00a0", "(10)\u8bbe\u5173\u7cfbR\u548c\u5173\u7cfbS\u7684\u5143\u6570\u5206\u522b\u662f3\u548c4\uff0c\u5173\u7cfbT\u662fR\u548cS\u7684\u7b1b\u5361\u513f\u79ef\uff0c\u5373T=R\u00d7S\uff0c\u5219\u5173\u7cfbT\u7684\u5143\u6570\u662f_______\u3002", "A)7\u00a0\u00a0\u00a0 B)9\u00a0\u00a0\u00a0 C)12 \u00a0\u00a0\u00a0D)16", "A", "\u8bc4\u6790:\u7b1b\u5361\u513f\u79ef\u7684\u5b9a\u4e49\u662f\u8bbe\u5173\u7cfbR\u548cs\u7684\u5143\u6570\u5206\u522b\u662fr\u548cs\uff0cR\u548cs\u7684\u7b1b\u5361\u513f\u79ef\u662f\u4e00\u4e2a(r\u5341s)\u5143\u5c5e\u6027\u7684\u96c6\u5408\uff0c\u6bcf\u4e00\u4e2a\u5143\u7ec4\u7684mr\u4e2a\u5206\u91cf\u6765\u81eaR\u7684\u4e00\u4e2a\u5143\u7ec4\uff0c\u3001\u540es\u722a\u5206\u91cf\u6765\u81eas\u7684\u4e00\u4e2a\u5143\u7ec4\u3002\u6240\u4ee5\u5173\u7cfbT\u7684\u5c5e\u6027\u5143\u6570\u662f3+4=7\u3002", "\u00a0", "(11)\u4ee5\u4e0b\u53d9\u8ff0\u4e2d\u6b63\u786e\u7684\u662f_______\u3002", "A)C\u8bed\u8a00\u4e2d\u7684\u5168\u90e8\u6570\u636e\u7c7b\u578b\u90fd\u662f\u57fa\u672c\u7c7b\u578b", "B)C\u8bed\u8a00\u4e2d\u7684\u5168\u90e8\u6570\u636e\u7c7b\u578b\u90fd\u662f\u6784\u9020\u7c7b\u578b", "C)C\u8bed\u8a00\u4e2d\u7684\u6570\u636e\u7c7b\u578b\u53ea\u6709\u4e24\u79cd\uff0c\u5373\u57fa\u672c\u7c7b\u578b\u548c\u6784\u9020\u7c7b\u578b", "D)\u4ee5\u4e0a\u90fd\u4e0d\u5bf9", "D", "c\u8bed\u8a00\u4e2d\u7684\u6570\u636e\u7c7b\u578b\u6709\u56db\u79cd\uff0c\u5373\u57fa\u672c\u7c7b\u578b\u3001\u6784\u9020\u7c7b\u578b\u3001\u6307\u9488\u7c7b\u578b\u548c\u7a7a\u7c7b\u578b\u3002", "\u00a0", "(12)\u4e0b\u5217\u53ef\u4f5c\u4e3aC\u8bed\u8a00\u8d4b\u503c\u8bed\u53e5\u7684\u662f_______\u3002", "A)x=3,y=5\u00a0\u00a0\u00a0 B)a=b=6\u00a0\u00a0\u00a0 C)i\u2013\uff1b\u00a0\u00a0 D)y=6", "C", "\u8bc4\u6790:\u6b64\u9898\u5b9e\u9645\u4e0a\u662f\u8003\u67e5\u5bf9c\u8bed\u8a00\u4e2d\u201c\u8bed\u53e5\u201d\u6982\u5ff5\u7684\u7406\u89e3\u3002\u8868\u8fbe\u5f0f\u540e\u9762\u53ea\u6709\u52a0\u4e0a\u5206\u53f7\u624d\u80fd\u6210\u4e3a\u8bed\u53e5\uff0c\u56e0\u6b64\uff0cA)\uff0cB)\uff0cD)\u5747\u662f\u8868\u8fbe\u5f0f\uff0c\u53ea\u6709C)\u4e3a\u8bed\u53e5\u3002\u4e14\u5229\u7528\u81ea\u51cf\u8fd0\u7b97\u7b26\u4f7fi\u503c\u51cfl\u3002", "\u00a0", "(13)\u4ee5\u4e0b\u53ef\u4ee5\u5b9a\u4e49\u4e3a\u7528\u6237\u6807\u8bc6\u7b26\u7684\u662f_______\u3002", "A)printf\u00a0\u00a0\u00a0 B)net\u00a0\u00a0\u00a0 C)3com D)int", "B", "\u8bc4\u6790:c\u8bed\u8a00\u4e2d\u7684\u6807\u8bc6\u7b26\u5206\u4e3a\u4e24\u7c7b\u3002\u4e00\u7c7b\u662f\u7cfb\u7edf\u6807\u8bc6\u7b26\uff0c\u5373\u7cfb\u7edf\u5b9a\u4e49\u4f7f\u7528\u7684\u5173\u952e\u5b57\u6807\u8bc6\u7b26\u7b49\u3002\u53e6\u4e00\u7c7b\u662f\u7528\u6237\u81ea\u5b9a\u4e49\u6807\u8bc6\u7b26\u3002\u4e24\u7c7b\u6807\u8bc6\u7b26\u90fd\u53ea\u80fd\u7528\u5b57\u6bcd\u3001\u6570\u5b57\u548c\u4e0b\u5212\u7ebf\u4e09\u79cd\u5b57\u7b26\u7ec4\u6210\u3002\u4e14\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u5fc5\u987b\u4e3a\u5b57\u6bcd\u6216\u4e0b\u5212\u7ebf\u3002\u5e76\u4e14\u7528\u6237\u81ea\u5b9a\u4e49\u6807\u8bc6\u7b26\u4e0d\u80fd\u4f7f\u7528\u7cfb\u7edf\u5173\u952e\u5b57\u76f8\u540c\u7684\u6807\u8bc6\u7b26\u3002", "\u00a0", "(14)\u4ee5\u4e0b\u9009\u9879\u4e2d\uff0c\u4e0d\u80fd\u4f5c\u4e3a\u5408\u6cd5\u5e38\u91cf\u7684\u662f_______\u3002", "A)0X2A\u00a0\u00a0\u00a0 B)015\u00a0\u00a0\u00a0 C)\uff0e2\uff0e8e9 \u00a0\u00a0\u00a0D)123\uff0e6e0\uff0e4", "D", "c\u7a0b\u5e8f\u4e2d\u7684\u57fa\u672c\u6570\u636e\u7c7b\u578b\u6709\u6574\u578b\u3001\u5b9e\u578b\u548c\u5b57\u7b26\u578b\u3002\u5176\u4e2d\u6574\u578b\u5e38\u91cf\u4e09\u79cd\u5f62\u5f0f\uff0c\u5373\u516b\u8fdb\u5236\u3001\u5341\u8fdb\u5236\u548c\u5341\u516d\u8fdb\u5236\u3002\u800c\u5b9e\u578b\u5e38\u91cf\u6709\u5341\u8fdb\u5236\u5c0f\u6570\u548c\u6307\u6570\u5f62\u5f0f\u4e24\u79cd\u3002", "\u00a0", "(15)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "main()", "{", "int a\uff1b\u00a0\u00a0\u00a0 char c=10\uff1a", "float f=-100\uff0e0\uff1bdouble x\uff1b", "clrscrO\uff1b", "a=f\uff0f=c*=(x=6\uff0e5)\uff1b", "printf(\u201d\uff05d\uff0c\uff05c\uff0c\uff053\uff0e1C\uff053\uff0e1f\uff3cn\u201d\uff0ca\uff0cc\uff0cCx)\uff1b", "}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f_______\u3002", "A)1,65\uff0c1,6.5\u00a0 \u00a0\u00a0B)1,A,1.5,6.5\u00a0\u00a0\u00a0 C)1,65\uff0c1.5,6.5\u00a0\u00a0\u00a0 D)2,65\uff0c1.5,6.5", "B", "\u5728\u8d4b\u503c\u8bed\u53e5a=f\uff0f=c*=(x=6\uff0e5)\uff1b\u4e2d\uff0c\u53ef\u5f97x=6\uff0e5\uff0c\u5c06x\u7684\u503c\u4e58\u4ee510\u8d4b\u4e88c\uff0c\u4e3a65\uff0c\u518d\u5c06f=100\u7684\u503c\u9664\u4ee565\uff0c\u5e76\u6309\u7167\u56db\u820d\u4e94\u5165\u7684\u539f\u5219\uff0c\u91cd\u65b0\u8d4b\u7ed9f\u2019\u5f97\u5230f=-I\uff0e5\u3002\u6700\u540e\u5c06f\u7684\u503c\u8d4b\u7ed9a\uff0c\u7531\u4e8ea\u662f\u6574\u578b\uff0c\u6240\u4ee5\u5f97\u5230a=l\u3002", "\u00a0", "(16)\u4ee5\u4e0b\u8bed\u53e5\u5e8f\u5217\u4e2d\u9519\u8bef\u7684\u662f_______\u3002", "A)int x=l\uff1b\u00a0\u00a0\u00a0 B)int x=0\uff1b\u00a0\u00a0\u00a0 C)int x=2\uff0e3\uff1b\u00a0\u00a0 D)int x=l,y=l\uff1b", "x++\uff1b\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0(x+1)++\uff1b\u00a0\u00a0\u00a0 \u00a0\u00a0(x++)+1\uff1b\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0(x++)+(y\u4e00)\uff1b", "B", "c\u8bed\u8a00\u4e2d\u7684\u81ea\u52a0\u3001\u81ea\u51cf\u8fd0\u7b97\u53ea\u80fd\u7528\u4e8e\u53d8\u91cf\uff0c\u800c\u4e0d\u80fd\u7528\u4e8e\u5e38\u91cf\u6216\u8868\u8fbe\u5f0f\u3002", "\u00a0", "(17)\u6709\u5b9a\u4e49\u8bed\u53e5\uff1aim\uff0ea\uff1bchar\u00a0 b[10]\uff0cc\uff1b\u5219\u9519\u8bef\u7684\u8f93\u5165\u8bed\u53e5\u662f__________\u3002", "A)scanf(\u201c\uff05d\uff05s\uff05c\u201d\uff0c&a,D\uff0c&C)\uff1b\u00a0\u00a0\u00a0 \u00a0\u00a0B)scanf(\u201c\uff05d\uff05s\uff05c\u201d\uff0c&a\uff0c&b\uff0c&C)\uff1b", "C)scanf(\u201c\uff05d\uff05s\uff05d\u201d\uff0c&a\uff1bb\uff0c&C)\uff1b\u00a0\u00a0\u00a0 \u00a0D)scanf(\u201c\uff05d\uff05s\u201d\uff06c\uff0ca\uff0c\uff05\uff0c\uff06C)\uff1b", "D", "\u5728scanf()\u8bed\u53e5\u4e2d\uff0c\u5728\u7ed9\u6574\u578b\u53d8\u91cf\u548c\u5b57\u7b26\u578b\u8d4b\u503c\u65f6\uff0c\u5fc5\u987b\u8981\u5728\u53d8\u91cf\u540d\u524d\u52a0\u53d6\u5730\u5740\u7b26\u53f7(&)\uff0c\u800c\u5bf9\u5b57\u7b26\u578b\u6570\u7ec4\u8d4b\u503c\u65f6\uff0c\u53ef\u4ee5\u4e0d\u5728\u53d8\u91cf\u540d\u524d\u4e0d\u52a0\u53d6\u5730\u5740\u7b26\u53f7\uff0c\u4e5f\u53ef\u4ee5\u52a0\u53d6\u5730\u5740\u7b26\u53f7\u3002\u800c\u4e14\u5bf9\u4e8e\u5b57\u7b26\u578b\u53d8\u91cf\u65e2\u53ef\u4ee5\u8d4b\u7ed9\u6574\u578b\u503c\uff0c\u4e5f\u53ef\u4ee5\u8d4b\u7ed9\u5b57\u7b26\u578b\u503c\u3002", "\u00a0", "(18)\u6709\u5b9a\u4e49\u8bed\u53e5\uff1aint x\uff0cy\uff1b\uff0c\u82e5\u8981\u901a\u8fc7scan\u5373x=\uff05d\uff0cy=\uff05n&x\uff0c&y)\uff1b\u8bed\u53e5\u4f7f\u53d8\u91cfx\u5f97\u5230\u6570\u503c11\uff0c\u53d8\u91cfy\u5f97\u5230\u6570\u503c12\uff0c\u4e0b\u9762\u56db\u7ec4\u8f93\u5165\u5f62\u5f0f\u4e2d\uff0c\u6b63\u786e\u7684\u662f________\u3002", "A)1l\u00a0\u00a0\u00a0 12<\u56de\u8f66>\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0B)ll\uff0c12<\u56de\u8f66>", "C)x=l l\uff0cy=12<\u56de\u8f66>\u00a0\u00a0\u00a0 D)x=ll\uff0c<\u56de\u8f66>12\uff0c<\u56de\u8f66>", "C", "\u5728scanf()\u8bed\u53e5\u4e2d\uff0c\u5bf9\u4e8e\u53d8\u91cf\u7684\u8d4b\u503c\u5fc5\u987b\u4e0e\u6570\u636e\u7684\u8f93\u5165\u683c\u5f0f\u76f8\u4e00\u81f4\u3002\u7279\u522b\u662f\u4e00\u4e9b\u5b57\u7b26\u8bf4\u660e\u3002", "\u00a0", "(19)\u8bbe\u6709\u5982\u4e0b\u7a0b\u5e8f\u6bb5\uff1a", "int x=6\uff0c\u00a0 y=4\uff1b", "printf(\u201d\uff05d\uff3cn\u201d\uff0c(x\uff05y,x&&y))\uff1b", "\u5219\u4ee5\u4e0b\u53d9\u8ff0\u4e2d\u6b63\u786e\u7684\u662f__________\u3002", "A)\u8f93\u51fa\u8bed\u53e5\u4e2d\u683c\u5f0f\u8bf4\u660e\u7b26\u7684\u4e2a\u6570\u5c11\u4e8e\u8f93\u51fa\u9879\u7684\u4e2a\u6570\uff0c\u4e0d\u80fd\u6b63\u786e\u8f93\u51fa", "B)\u8fd0\u884c\u65f6\u4ea7\u751f\u51fa\u9519\u4fe1\u606f", "C)\u8f93\u51fa\u503c\u4e3a2", "D)\u8f93\u51fa\u503c\u4e3al", "D", "\u5728\u9017\u53f7\u8868\u8fbe\u5f0f(\u8868\u8fbe\u5f0f1\uff0c\u8868\u8fbe\u5f0f2)\u4e2d\uff0c\u5176\u8fd0\u7b97\u65b9\u6cd5\u662f\u5148\u6c42\u8868\u8fbe\u5f0f1\u7684\u503c\uff0c\u7136\u540e\u6c42\u8868\u8fbe2\u7684\u503c\uff0c\u6574\u4e2a\u9017\u53f7\u8868\u8fbe\u5f0f\u7684\u503c\u662f\u8868\u8fbe\u5f0f2\u7684\u503c\u3002", "\u00a0", "(20)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "main()", "{", "int\u00a0 i=1\uff0ej=2\uff0ck=3\uff1b", "clrscr()\uff1b", "if(i++==j&&k\u2013==j)", "printf(\u201d\uff05d\uff0c\uff05d\uff0c\uff05d\u201d\uff0ci++\u2019j\uff0ck)\uff1b", "else", "printf(\u201d\uff05d\uff0c\uff05d\uff0c\uff05d\u201d\uff0c++i\uff0c++j\uff0ck\u2013)\uff1b", "}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "A)l\uff0c2\uff0c3\u00a0\u00a0\u00a0 B)2,2\uff0c3\u00a0\u00a0\u00a0 C)2\uff0c3\uff0c2\u00a0\u00a0\u00a0 D)3,3\uff0c3", "D", "\u6309\u7167\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\uff0c\u6700\u5148\u8ba1\u7b97\u7684\u662f\u5173\u7cfb\u8fd0\u7b97i++==j\uff0c\u7531\u4e8e\u6b64\u5173\u7cfb\u5f0f\u4e0d\u6210\u7acb\uff0c\uff0c\u5b83\u7684\u7ed3\u679c\u662f\u4e3a\u201c\u5047\u201d\u503c\uff0c\u7531\u6b64\u53ef\u4ee5\u786e\u5b9a\u903b\u8f91\u4e0e\u8fd0\u7b97\u7684\u7ed3\u679c\u5fc5\u7136\u662f\u201c\u5047\u201d\u503c\uff0c\u56e0\u6b64\u53c2\u52a0\u903b\u8f91\u4e0e\u8fd0\u7b97\u7684\u53e6\u4e00\u4e2a\u5173\u7cfb\u8868\u8fbe\u5f0f\u201ck\u2013==j\u201d\u7684\u503c\uff0c\u7cfb\u7edf\u4e0d\u518d\u5bf9\u5b83\u8fdb\u884c\u8fd0\u7b97\u3002\u6b64\u65f6\u53d8\u91cfi\u7684\u503c\u81ea\u52a01\u53d8\u62102\uff0c\u7136\u540e\u6267\u884celse\u8bed\u53e5\u540e\u7684printf\u8bed\u53e5\u3002", "\u00a0", "(21)\u6709\u5b9a\u4e49\u8bed\u53e5\uff1aint a=l\uff0cb=l\uff0cc=3\uff0cx\uff1b\uff0c\u5219\u4ee5\u4e0b\u9009\u9879\u4e2d\u5404\u7a0b\u5e8f\u6bb5\u6267\u884c\u540e\uff0cx\u7684\u503c\u4e0d\u7b49\u4e8e3\u662f__________\u3002", "A)if(c<a)x=l\uff1b\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)if(a<3&&b<C)\u00a0 x=3\uff1b", "else if(b<a\u2016b<C)x=3\uff1b\u00a0\u00a0\u00a0 else if(a<2)\u00a0 x\uff1a2\uff1b", "C)if(a\uff05b>a)\u00a0 x=3\uff1b\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0D)if(a<b+C)x\uff1ab\uff1b", "if(a<2)x=2\uff1b\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if(b\uff06&a<C)x=c=", "if(a<1)z=l\uff1b\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if(c<a)x=a\uff1b", "C", "\u5728\u5404\u79cd\u8fd0\u7b97\u7b26\u4e2d\uff0c\u8fd0\u7b97\u7ea7\u522b\u6700\u9ad8\u7684\u662f\u7b97\u672f\u8fd0\u7b97\uff0c\u5982\u679c\u6709\u62ec\u53f7\uff0c\u5f53\u7136\u5148\u7b97\u62ec\u53f7\u5185\u7684\u8868\u8fbe\u5f0f\u7684\u503c\u3002", "\u00a0", "(22)\u6709\u4ee5\u4e0b\u7a0b\u5e8f\uff0c\u5176\u8f93\u51fa\u7ed3\u679c\u662f____________\u3002", "main()", "{\u00a0\u00a0 float x=l\uff1b\u00a0 int y\uff1b", "X++\uff1a", "y=x+l\uff1b", "printf(\u201dx=\uff05d\uff0cy=\uff05f\u201d\uff0cx\uff0c\u00a0 y)\uff1b", "}", "A)x=2\uff0cy=3\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0B)x=2\uff0cy=3\uff0e0", "C)x=2\uff0e0\uff0cy=3\u00a0\u00a0\u00a0 D)x=0\uff0ey=O\uff0e000000", "D", "\u4e00\u822c\u5728\u5bf9\u53d8\u91cf\u5b9a\u4e49\u4e3a\u4f55\u79cd\u7c7b\u578b\u7684\u6570\u636e\u65f6\uff0c\u5bf9\u8f93\u51fa\u5e94\u6709\u5b8c\u5168\u4e00\u81f4\u7684\u6570\u636e\u7c7b\u578b\u683c\u5f0f\u3002\u4f46\u6574\u578b\u4e0e\u5b9e\u578b\u6570\u636e\u5728\u8fdb\u884c\u6df7\u5408\u8fd0\u7b97\u65f6\uff0c\u4e00\u822c\u5176\u6570\u636e\u7c7b\u578b\u53ef\u4ee5\u81ea\u52a8\u8f6c\u6362\u3002\u5982\u672c\u9898\u7684y=x+l\uff1b\u8bed\u53e5\u4e2d\uff0c\u7cfb\u7edf\u81ea\u52a8\u5c06\u5b9e\u578b\u8868\u8fbe\u5f0fx+l\u7684\u7ed3\u679c\u8f6c\u6362\u4e3a\u6574\u6570\u8d4b\u7ed9\u6574\u578b\u53d8\u91cfy\uff0c\u4f46\u6574\u578b\u53d8\u91cfy\u53ea\u80fd\u5f97\u5230\u5b9e\u578b\u6570\u7684\u6574\u6570\u90e8\u5206\u3002", "\u00a0", "(23)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "main()", "{", "int a[6]={5\uff0c6\uff0c7\uff0c8\uff0c9\uff0c10}\uff0cs=0\uff0cI=0\uff1b", "clrserO\uff1b", "do", "{", "if(a[i]\uff052 I-0)", "s+=a[I]\uff1b", "}while(++i<5)\uff1b", "primf(\u201d\uff05d\uff3cn\u201d\uff0cs)\uff1b", "}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "A)21\u00a0\u00a0\u00a0 B)22\u00a0\u00a0\u00a0 C)23\u00a0\u00a0\u00a0 D)24", "A", "\u5f15\u7528\u6570\u7ec4\u4e2d\u7684\u67d0\u4e2a\u5143\u7d20\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u6570\u7ec4\u540d\u52a0\u4e0b\u6807\u7684\u5f62\u5f0f\u3002\u5982p[1]\uff0c\u5c31\u662f\u6570\u7ec4\u4e2d\u4e0b\u6807\u4e3a1\u7684\u5143\u7d20\uff0c\u6309\u987a\u5e8f\u6570\uff0c\u662f\u7b2c2\u4e2a\u5143\u7d20\uff0c\u56e0\u4e3a\u6570\u7ec4\u7684\u4e0b\u6807\u662f\u4ece0\u5f00\u59cb\u7684\u3002\u672c\u9898\u5b9e\u9645\u4e0a\u662f\u6c42\u6570\u7ec4\u4e2d\u6240\u6709\u5947\u6570\u5143\u7d20\u7684\u548c\u3002", "\u00a0", "(24)\u82e5\u6709\u5982\u4e0b\u7a0b\u5e8f\u6bb5\uff0c", "main()", "{", "char a[7]=\u201d123\uff3c010\uff3c032\u2033\uff1b", "int\u00a0 i\uff0cj=0\uff1b", "clrscr0\uff1b", "for (I=0\uff1bi<strlen(a)\uff1bi++)", "j+=sizeof(a)\uff1b", "printf(\u201d\uff05d\uff0c\uff05d\\n\u201d\uff0cI,J)\uff1b", "}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "A)5,30\u00a0\u00a0\u00a0 B)5,35\u00a0\u00a0\u00a0 C)5,25\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)5,20", "\u7b54\u6848:B", "\u6570\u7ec4\u7684\u5b58\u50a8\u7a7a\u95f4\u662f\u5728\u5176\u5b9a\u4e49\u540e\u5c31\u5206\u914d\u7684\u3002\u5b57\u7b26\u6570\u7ec4a[7]=\u201d123\uff3c010\uff3c032\u2033\u7684\u5b58\u50a8\u7a7a\u95f4\u662f7\u4e2a\u5355\u5143\u3002\u5373sizeof(a)=7\u3002\u800c\u51fd\u6570strlen()\u662f\u6c42\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u7684\u3002a[7]=\u201d123\uff3c010\uff3c032\u2033\u4e2d\uff0c\u6709\u4e24\u4e2a\u8f6c\u4e49\u5b57\u7b26\uff0c\u56e0\u6b64\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u5b9e\u9645\u4e0a\u662f5\u4e2a\u5b57\u7b26\u3002\u6240\u4ee5strlen(a)=5\u3002\u5728\u7a0b\u5e8f\u7684for\u5faa\u73af\u4e2d\uff0c\u5176\u5faa\u73af\u7684\u6b21\u6570\u662f5\u6b21\uff0cj\u6bcf\u6b21\u52a07\uff0c\u6240\u4ee5\u6700\u540e\u7684\u7ed3\u679c\u662f35\u3002i\u7684\u503c\u5c31\u662f\u5faa\u73af\u7684\u6b21\u6570\u3002", "\u00a0", "(25)\u5982\u679c\u5728c\u7a0b\u5e8f\u4e2d\u8981\u7528\u5230\u5e93\u51fd\u6570\u4e2d\u7684\u5b57\u7b26\u4e32\u6bd4\u8f83\u51fd\u6570strcmp()\uff0c\u90a3\u4e48\u5728\u7a0b\u5e8f\u524d\u9762\u5e94\u8be5\u00a0\u00a0\u00a0 \u6dfb\u52a0\u7684\u5934\u6587\u4ef6\u662f__________\u3002", "A)stdio\uff0eh\u00a0\u00a0\u00a0 B)string\uff0eh\u00a0\u00a0\u00a0 C)alloc\uff0eh\u00a0\u00a0\u00a0 D)math\uff0eH", "\u7b54\u6848:B", "\u5e93\u51fd\u6570\u5e76\u4e0d\u662fc\u8bed\u8a00\u7684\u4e00\u90e8\u5206\uff0c\u5b83\u662f\u7531\u4eba\u4eec\u6839\u636e\u9700\u8981\u7f16\u5236\u5e76\u63d0\u4f9b\u7528\u6237\u4f7f\u7528\u7684\u3002\u5728\u8c03\u7528\u4e0d\u540c\u7c7b\u522b\u7684\u5e93\u51fd\u6570\u65f6\uff0c\u5fc5\u987b\u5728\u7a0b\u5e8f\u524d\u6dfb\u52a0\u76f8\u5e94\u7684\u5934\u6587\u4ef6\u3002", "\u00a0", "(26)\u82e5\u5df2\u5b9a\u4e49\u7684\u51fd\u6570\u6709\u8fd4\u56de\u503c\uff0c\u5219\u4ee5\u4e0b\u5173\u4e8e\u8be5\u51fd\u6570\u8c03\u7528\u7684\u53d9\u8ff0\u4e2d\u9519\u8bef\u7684\u662f_________\u3002", "A)\u51fd\u6570\u8c03\u7528\u53ef\u4ee5\u5d4c\u5957\u548c\u9012\u5f52", "B)\u51fd\u6570\u8c03\u7528\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u51fd\u6570\u7684\u5b9e\u53c2", "C)\u51fd\u6570\u8c03\u7528\u53ef\u4ee5\u51fa\u73b0\u5728\u8868\u8fbe\u5f0f\u4e2d", "D)\u51fd\u6570\u8c03\u7528\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u51fd\u6570\u7684\u5f62\u53c2", "\u7b54\u6848:D", "\u51fd\u6570\u7684\u8c03\u7528\u6709\u4e09\u79cd\u65b9\u5f0f\u3002\u4e00\u662f\u5c06\u51fd\u6570\u8c03\u7528\u4f5c\u4e3a\u4e00\u4e2a\u8bed\u53e5\u3002\u4e8c\u662f\u51fd\u6570\u51fa\u73b0\u5728_\u4e2a\u8868\u8fbe\u5f0f\u4e2d\u3002\u4e09\u662f\u4f5c\u4e3a\u4e00\u4e2a\u51fd\u6570\u7684\u5b9e\u53c2\u3002\u4f46\u662f\u6ca1\u6709\u51fd\u6570\u8c03\u7528\u4f5c\u4e3a\u5f62\u53c2\u3002\u800c\u4e14\u51fd\u6570\u5728\u8c03\u7528\u65f6\u8fd8\u6709\u5d4c\u5957\u548c\u9012\u5f52\u4e24\u79cd\u7279\u6b8a\u7684\u60c5\u5f62\u3002", "\u00a0", "(27)\u4e0b\u5217\u5173\u4e8ec\u8bed\u8a00\u4e2d\u5b57\u7b26\u5e38\u91cf\u4e0e\u5b57\u7b26\u4e32\u5e38\u91cf\u7684\u53d9\u8ff0\u4e2d\uff0c\u9519\u8bef\u7684\u662f_________\u3002", "A)\u5b57\u7b26\u5e38\u91cf\u662f\u7528\u5355\u6487\u53f7\u62ec\u8d77\u6765\u7684\u4e00\u4e2a\u5b57\u7b26", "B)\u7a7a\u683c\u5b57\u7b26\u4e5f\u53ef\u7528\u4f5c\u5b57\u7b26\u5e38\u91cf", "C)\u5b57\u7b26\u4e32\u5e38\u91cf\u662f\u7528\u5355\u6487\u53f7\u62ec\u8d77\u6765\u7684\u4e00\u4e2a\u5b57\u7b26\u5e8f\u5217", "D)\u5b57\u7b26\u4e32\u5e38\u91cf\u662f\u7528\u53cc\u6487\u53f7\u62ec\u8d77\u6765\u7684\u4e00\u4e2a\u5b57\u7b26\u5e8f\u5217", "\u7b54\u6848:C", "c\u8bed\u8a00\u4e2d\u7684\u5b57\u7b26\u578b\u6570\u636e\u5e38\u91cf\u6709\u4e24\u7c7b\uff0c\u4e00\u7c7b\u662f\u7528\u5355\u6487\u53f7\u62ec\u8d77\u6765\u7684\u5b57\u7b26\u5e38\u91cf\u3002\u5b57\u7b26\u5e38\u91cf\u9664\u4e86\u5e38\u7528\u7684\u5b57\u7b26\u5916\uff0c\u8fd8\u5305\u62ec\u7279\u6b8a\u7684\u7a7a\u683c\u7b26\u548c\u4ee5\u201c\uff3c\u201d\u5f00\u5934\u7684\u8f6c\u4e49\u5b57\u7b26\u3002\u5b57\u7b26\u4e32\u5e38\u91cf\u5219\u662f\u7528\u53cc\u6487\u53f7\u62ec\u8d77\u6765\u7684\u4e00\u4e2a\u5b57\u7b26\u5e8f\u5217\u3002", "\u00a0", "(28)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "void fun(char *a\uff0cchar *b)", "{\u00a0\u00a0\u00a0 a=b\uff1b", "(*a)++\uff1b", "}", "main()", "{", "char\u00a0 c1=\u2019A\u2019\uff0cc2=\u2019a\uff0c*p1\uff0c*p2\uff1b", "clrscr0\uff1b", "pl=&cl\uff1b", "p2=&c2\uff1b", "fun(p1,p2)\uff1b", "printf(\u201c\uff05c\uff05c\uff3cn\u201d,cl,c2)\uff1b", "}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f__________\u3002", "A)Ab\u00a0\u00a0\u00a0 B)aa\u00a0\u00a0\u00a0 C)Aa\u00a0 \u00a0\u00a0\u00a0D)Bb", "\u7b54\u6848:A", "\u5728\u51fd\u6570\u8c03\u7528\u4e2d\uff0c\u53ef\u4ee5\u5206\u503c\u4f20\u9012\u548c\u5730\u5740\u4f20\u9012\u3002\u82e5\u53c2\u6570\u4f20\u9012\u7684\u662f\u7b80\u5355\u6570\u636e\u7c7b\u578b\u7684\u6570\u503c\uff0c\u79f0\u4e3a\u503c\u4f20\u9012\u65b9\u5f0f\u3002\u82e5\u53c2\u6570\u4f20\u9012\u7684\u662f\u53d8\u91cf\u7684\u5730\u5740\uff0c\u79f0\u4e3a\u5730\u5740\u4f20\u9012\u65b9\u5f0f\u3002", "\u00a0", "(29)\u82e5\u6709\u5b9a\u4e49\uff1astatic int fun(int a\uff0cint b)\uff0c\u5219\u4ee5\u4e0b\u53d9\u8ff0\u4e2d\u9519\u8bef\u7684\u662f_________\u3002", "A)\u5b9a\u4e49\u4e86\u4e00\u4e2a\u8fd4\u56de\u503c\u4e3a\u6574\u578b\u7684\u9759\u6001\u51fd\u6570", "B)\u8be5\u51fd\u6570\u53ea\u80fd\u88ab\u540c\u4e00\u6587\u4ef6\u5185\u7684\u51fd\u6570\u8c03\u7528", "C)\u8be5\u51fd\u6570\u53ef\u4ee5\u5728\u4efb\u4f55\u6587\u4ef6\u4e2d\u88ab\u8c03\u7528", "D)\u8be5\u51fd\u6570\u5c5e\u4e8e\u5185\u90e8\u51fd\u6570", "\u7b54\u6848:C", "\u6839\u636e\u51fd\u6570\u80fd\u5426\u88ab\u5176\u4ed6\u6e90\u6587\u4ef6\u8c03\u7528\uff0c\u5c06\u51fd\u6570\u533a\u5206\u4e3a\u5185\u90e8\u548c\u5916\u90e8\u51fd\u6570\u3002\u5982\u679c\u5c06\u51fd\u6570\u5b9a\u4e49\u4e3a\u5916\u90e8\u51fd\u6570\uff0c\u5219\u5728\u51fd\u6570\u9996\u90e8\u6700\u5de6\u7aef\u51a0\u4ee5\u5173\u952e\u5b57eXtem\u3002\u5982\u679c\u5c06\u51fd\u6570\u5b9a\u4e49\u4e3a\u5185\u90e8\u51fd\u6570\uff0c\u5219\u5728\u51fd\u6570\u9996\u90e8\u6700\u5de6\u7aef\u51a0\u4ee5\u5173\u952e\u5b57static\u3002\u5185\u90e8\u51fd\u6570\u53ea\u80fd\u88ab\u672c\u6587\u4ef6\u4e2d\u7684\u5176\u5b83\u51fd\u6570\u8c03\u7528\u3002\u800c\u5916\u90e8\u51fd\u6570\u5219\u53ef\u4ee5\u88ab\u5176\u4ed6\u4efb\u4f55c\u7a0b\u5e8f\u6587\u4ef6\u8c03\u7528\u3002", "\u00a0", "(30)\u4ee5\u4e0b\u80fd\u6b63\u786e\u5b9a\u4e49\u4e00\u7ef4\u6570\u7ec4\u7684\u9009\u9879\u662f_________\u3002", "A)int\u00a0 num[]\uff1b\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0B)int\u00a0 num[0..100]\uff1b", "C)#define N 100\uff1b\u00a0\u00a0\u00a0 D)int N=100\uff1b", "int num[N]\uff1b\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0int num[N]\uff1b", "\u7b54\u6848:C", "\u8bc4\u6790:\u6709\u4e8c\u79cd\u65b9\u6cd5\u6307\u5b9a\u6570\u7ec4\u957f\u5ea6\u3002\u5176\u4e00\u662f\u76f4\u63a5\u5728\u6570\u7ec4\u540d\u540e\u9762\u7684\u65b9\u62ec\u53f7\u5185\u8f93\u5165\u6570\u7ec4\u7684\u957f\u5ea6\u3002\u5176\u4e8c\u662f\uff0c\u5728\u5b9a\u4e49\u6570\u7ec4\u7684\u540c\u65f6\u5bf9\u5176\u8d4b\u503c\uff0c\u7531\u5b9e\u9645\u8d4b\u503c\u7684\u5143\u7d20\u4e2a\u6570\u81ea\u52a8\u786e\u5b9a\u6570\u7ec4\u7684\u957f\u5ea6\u3002", "\u00a0", "(31)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "fun(int a[]\uff0cintm\uff0cint n)", "{\u00a0 int\u00a0 I,J\uff1b", "for(i=m\uff1bi<n\uff1bi++)", "a[i+ll=a[I]+3\uff1b", "}", "main()", "{", "int i,a[6l={2,4,6,8,10,12}\uff1b", "clrscr0\uff1b", "fun(a,2,5)\uff1b", "for(i=O\uff1bi<6\uff1bi++)", "printf(\u201c\uff05\u201da[I])\uff1b", "}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u8f93\u51fa\u7684\u7ed3\u679c\u662f__________\u3002", "A)24691315\u00a0\u00a0\u00a0 B)24691215\u00a0\u00a0\u00a0 C)249121518\u00a0\u00a0\u00a0 D)249121415", "\u7b54\u6848:B", "\u5728\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u65e2\u53ef\u4ee5\u7528\u5355\u4e2a\u7684\u53d8\u91cf\u4f5c\u4e3a\u53c2\u6570\uff0c\u4e5f\u53ef\u4ee5\u7528\u6570\u7ec4\u540d\u4f5c\u4e3a\u53c2\u6570\u3002\u8fd8\u53ef\u5c06\u6570\u7ec4\u7684\u4e0b\u6807\u503c\u4f5c\u4e3a\u5b9e\u53c2\u4f7f\u7528\u3002\u5728\u672c\u9898\u4e2d\uff0c\u662f\u5c06\u6570\u7ec4\u540d\u548c\u6570\u7ec4\u7684\u4e0b\u6807\u503c\u4f5c\u4e3a\u5b9e\u53c2\u3002", "\u00a0", "(32)\u4ee5\u4e0b\u4e0d\u6b63\u786e\u7684\u53d9\u8ff0\u662f__________\uff0e", "A)\u5728C\u7a0b\u5e8f\u4e2d\uff0c\u9017\u53f7\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u6700\u4f4e\u3002", "B)\u5728C\u7a0b\u5e8f\u4e2d\uff0cT\u548ct\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u53d8\u91cf", "C)\u82e5a\u548cb\u7c7b\u578b\u76f8\u540c\uff0c\u5728\u6267\u884c\u4e86\u8d4b\u503c\u8868\u8fbe\u5f0fa=b\u540e\uff0cb\u4e2d\u7684\u503c\u5c06\u653e\u5165a\u4e2d\uff0c\u800cb\u4e2d\u7684\u503c\u4e0d\u53d8\u3002", "D)\u5f53\u4ece\u952e\u76d8\u8f93\u5165\u6570\u636e\u65f6\uff0c\u5bf9\u4e8e\u6574\u578b\u53d8\u91cf\u53ea\u80fd\u8f93\u5165\u6574\u578b\u6570\u636e\u3002\u5bf9\u4e8e\u5b9e\u578b\u53d8\u91cf\u53ea\u80fd\u8f93\u5165\u5b9e\u578b\u6570\u636e\u3002", "\u7b54\u6848:D", "\u5728c\u8bed\u8a00\u4e2d\uff0c\u4e3a\u65b9\u4fbf\u8868\u8fbe\u5f0f\u7684\u8fd0\u7b97\uff0c\u5bf9\u6240\u6709\u7684\u8fd0\u7b97\u7b26\u90fd\u8bbe\u5b9a\u4e86\u4e00\u5b9a\u7684\u4f18\u5148\u7ea7\uff0c\u5176\u4e2d\u9017\u53f7\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u6700\u4f4e\u3002c\u8bed\u8a00\u4e2d\u7684\u6570\u636e\u6709\u5e38\u91cf\u548c\u53d8\u91cf\u4e4b\u5206\uff0c\u5176\u4e2d\u53d8\u91cf\u662f\u533a\u5206\u5927\u5c0f\u5199\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4T\u548ct\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u53d8\u91cf\u540d\u3002\u5c06\u67d0\u4e2a\u53d8\u91cf\u7684\u503c\u8d4b\u7ed9\u5176\u5b83\u7684\u53d8\u91cf\u4e4b\u540e\uff0c\u5e76\u4e0d\u5f71\u54cd\u5176\u672c\u8eab\u7684\u503c\u3002\u5f53\u5b9a\u4e49\u4e00\u4e2a\u6574\u578b\u53d8\u91cf\u540e\uff0c\u53ef\u4ee5\u4ece\u952e\u76d8\u4e0a\u5bf9\u5176\u8f93\u5165\u6574\u578b\u503c\uff0c\u4e5f\u53ef\u4ee5\u662f\u5b57\u7b26\u578b\u7684\u6570\u636e\u3002\u5982\u679c\u5c06\u5b57\u7b26\u578b\u7684\u503c\u8d4b\u7ed9\u6574\u578b\u53d8\u91cf\uff0c\u5219\u5b83\u63a5\u53d7\u7684\u662f\u5b57\u7b26\u5e38\u91cf\u7684ASCII\u7801\u503c\u3002\u5b9e\u578b\u53d8\u91cf\u4e5f\u53ef\u4ee5\u63a5\u6536\u6574\u578b\u503c\u3002", "\u00a0", "(33)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "pf(char *p\uff0cint n)", "{\u00a0 int\u00a0 i\uff1b", "for(i=0\uff1bi<n\uff1bi++1", "p[i]=p[I]+32\uff1b", "}", "main()", "{", "char a[]=\u201dABCD\u201d\uff1b", "int i\uff1a", "clrscr()\uff1b", "pf(a\uff0c4)\uff1b", "for(i=0\uff1bi<4\uff1bi++)", "printf(\u201d\uff05c\u201d\uff0ca[I])\uff1b", "}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "A)ABCD\u00a0\u00a0\u00a0 B)ABCD\uff3c0\u00a0\u00a0\u00a0 C)abcd\u00a0\u00a0\u00a0 D)abed\uff3c0", "\u7b54\u6848:C", "\u901a\u8fc7\u6307\u5411\u6570\u7ec4\u7684\u6307\u9488\u53ef\u4ee5\u5f15\u7528\u6570\u7ec4\u4e2d\u7684\u4efb\u4f55\u5143\u7d20\uff0c\u5e76\u4e14\u5bf9\u5176\u8fdb\u884c\u5404\u79cd\u8fd0\u7b97\u3002\u672c\u9898\u4e2d\u5c31\u662f\u901a\u8fc7\u6307\u5411\u6570\u7ec4\u7684\u6307\u9488\u5c06\u4e00\u5b57\u7b26\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u5927\u5199\u5b57\u6bcd\u8f6c\u6362\u6210\u76f8\u5e94\u7684\u5c0f\u5199\u5b57\u6bcd\u3002", "\u00a0", "(34)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "main()", "{", "int\u00a0 a[3][3]\uff0c*p\uff0ci\uff1b", "clrscr()\uff1b", "p=&a[0][0]\uff1b", "for(i=0\uff1bi<9\uff1bi++)", "p[i]\uff1ai+2\uff1b", "printf(\u201d\uff05d\uff3cn\u201d\uff0ca[2][11)\uff1b", "}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "A)3\u00a0\u00a0\u00a0 B)6\u00a0\u00a0\u00a0 C)9\u00a0\u00a0\u00a0 D)2", "\u7b54\u6848:C", "\u5f53\u67d0\u4e2a\u6307\u9488\u53d8\u91cf\u6307\u5411\u591a\u7ef4\u6570\u7ec4\u65f6\uff0c\u53ef\u4ee5\u7528\u5176\u6bcf\u6b21\u52a0l\u6765\u987a\u5e8f\u64cd\u4f5c\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u3002\u5728\u6b64\u9898\u4e2d\uff0ca[3][3]={{2\uff0c3\uff0c4}\uff0c{5\uff0c6\uff0c7}\uff0c{8\uff0c9\uff0c10}}\u3002\u800c\u6700\u540e\u8f93\u51fa\u7684a[2][1]\u5c31\u662f\u7b2c3\u884c\u7684\u7b2c2\u5217\u7684\u5143\u7d20\uff0c\u53739\u3002", "\u00a0", "(35)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "#include<stdio\uff0eh>", "#define F(X\uff0cY)(X)*(Y)", "main()", "{", "int a=3\uff0cb=4\uff1b", "clrscr()\uff1b", "printf(\u201c\uff05d\uff3cn\u201d\uff0cF(a\u2013\uff0c++b))\uff1b", "}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "A)8\u00a0\u00a0\u00a0 B)10\u00a0\u00a0\u00a0 C)12\u00a0\u00a0\u00a0 D)15", "\u7b54\u6848:D", "\u8bc4\u6790\u3002\u5728\u5e26\u53c2\u6570\u7684\u5b8f\u5b9a\u4e49\u4e2d\uff0c\u4e0d\u662f\u7b80\u5355\u7684\u5b57\u7b26\u66ff\u6362\u3002\u5176\u65b9\u6cd5\u662f\uff1a\u5728\u7a0b\u5e8f\u4e2d\u5982\u679c\u6709\u5e26\u5b9e\u53c2\u7684\u5b8f\uff0c\u00a0 (\u5982F(x\uff0cY))\uff0c\u5219\u6309#define\u547d\u4ee4\u884c\u4e2d\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u8fdb\u884c\u7f6e\u6362\u3002\u5982\u679c\u4e32\u4e2d\u5305\u542b\u5b8f\u4e2d\u7684\u5f62\u53c2(\u5973NX\uff0cY)\uff0c\u3001\u5219\u5c06\u7a0b\u5e8f\u8bed\u53e5\u4e2d\u76f8\u5e94\u7684\u5b9e\u53c2\u4ee3\u66ff\u5f62\u53c2\u3002\u672c\u9898\u4e2d\u7684\u5b8f\u5b9a\u4e49\u5c55\u5f00\u540e\u4e3a\uff1a(a\uff0e\u2013)*(++b)=(3)*(5)=15\u3002", "\u00a0", "(36)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "main()", "{", "int x=3\uff0cy=2\uff0cz=l\uff1b", "printf(\u201d\uff05d\uff3cn\u201d\uff0cx\uff0fy&&z)\uff1b", "}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "A)0\u00a0\u00a0\u00a0 B)l\u00a0\u00a0\u00a0 C)2\u00a0\u00a0\u00a0 D)3", "\u7b54\u6848:B", "\u5728c\u7a0b\u5e8f\u7684\u6807\u51c6\u8f93\u51fa\u51fd\u6570prim\u51b2\uff0c\u8981\u6ce8\u610f\u8868\u8fbe\u5f0f\u7684\u4f18\u5148\u7ea7\u3002\u5982\u672c\u9898\u7684\u8868\u8fbe\u5f0fx\uff0fy&&z\uff0c\u5148\u8fd0\u7b97\u7684\u662f\u7b97\u672f\u8fd0\u7b97x\uff0fv\uff0c\u7ed3\u679c\u662f1\uff0c\u7136\u540e\u624d\u8fd0\u7b97l&&z\uff0c\u7ed3\u679c\u662f1\u3002", "\u00a0", "(37)\u4e0b\u5217\u5173\u4e8ec\u7a0b\u5e8f\u7f16\u8bd1\u7684\u63cf\u8ff0\u4e2d\uff0c\u9519\u8bef\u7684\u662f_________\u3002", "A)\u5728\u7a0b\u5e8f\u7684\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u53d1\u73b0\u6240\u6709\u7684\u8bed\u6cd5\u9519\u8bef", "B)\u5728\u7a0b\u5e8f\u7684\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u53d1\u73b0\u90e8\u5206\u7684\u8bed\u6cd5\u9519\u8bef", "C)\u5728\u7a0b\u5e8f\u7684\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u4e0d\u80fd\u53d1\u73b0\u903b\u8f91\u9519\u8bef", "D)\u7a0b\u5e8f\u7f16\u8bd1\u662f\u8c03\u8bd5\u7a0b\u5e8f\u7684\u5fc5\u7ecf\u8fc7\u7a0b", "\u7b54\u6848:B", "\u7f16\u8bd1\u8fc7\u7a0b\u5b9e\u9645\u4e0a\u5c31\u662f\u8c03\u8bd5\u7a0b\u5e8f\uff0c\u627e\u51fa\u7a0b\u5e8f\u4e2d\u6240\u6709\u53ef\u80fd\u5b58\u5728\u7684\u8bed\u6cd5\u9519\u8bef\u3002\u4f46\u662f\uff0c\u5bf9\u4e8e\u7a0b\u5e8f\u903b\u8f91\u4e0a\u7684\u4e00\u4e9b\u9519\u8bef\uff0c\u7f16\u8bd1\u8fc7\u7a0b\u65e0\u80fd\u4e3a\u529b\uff0c\u53ea\u6709\u7a0b\u5e8f\u7f16\u5199\u4eba\u5458\u81ea\u5df1\u901a\u8fc7\u4e00\u4e9b\u826f\u597d\u7684\u7f16\u7a0b\u6280\u5de7\u548c\u65b9\u6cd5\u6765\u6392\u9664\u3002", "\u00a0", "(38)\u82e5\u6709\u4ee5\u4e0b\u8bf4\u660e\u548c\u5b9a\u4e49", "union\u3001s", "{\u00a0 int i\uff1b", "char ch", "float e", "}a\uff1b", "\u4e0b\u5217\u5bf9\u5171\u7528\u4f53\u7684\u64cd\u4f5c\u6b63\u786e\u7684\u662f________\u3002", "A)a=\u2019A\u2019;\u00a0\u00a0\u00a0 \u00a0B)re=a\uff1b", "C)a\uff0ei=3\uff1b\u00a0\u00a0\u00a0 \u00a0D)printf(\u201d\uff05dha\u201d,a)\uff1b", "\u7b54\u6848:C", "\u5171\u7528\u4f53\u5b9e\u9645\u4e0a\u7528\u540c\u4e00\u5185\u5b58\u6bb5\u6765\u5b58\u653e\u51e0\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u6210\u5458\uff0c\u4f46\u5728\u6bcf\u4e00\u77ac\u65f6\u53ea\u80fd\u5b58\u653e\u5176\u4e2d\u4e00\u79cd\uff0c\u800c\u4e0d\u662f\u73b0\u65f6\u5b58\u653e\u51e0\u79cd\u3002\u56e0\u6b64\uff0c\u4e0d\u80fd\u5bf9\u5171\u7528\u4f53\u540d\u8d4b\u503c\uff0c\u4e0d\u80fd\u5f15\u7528\u5171\u7528\u4f53\u540d\u4ee5\u5f97\u5230\u67d0\u4e00\u4e2a\u503c\uff0c\u4e5f\u4e0d\u80fd\u628a\u5171\u7528\u4f53\u53d8\u91cf\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u3002", "\u00a0", "(39)\u4e0b\u5217\u9009\u9879\u4e2d\u6b63\u786e\u7684\u8bed\u53e5\u7ec4\u662f_________\u3002", "A)char s[8]\uff1bs={\u201cBeijing\u201d}\uff1b\u00a0\u00a0\u00a0 \u00a0B)char *s\uff1bs={\u201cBeijing\u201d}\uff1b", "C)char s[8]\uff1bs=\u201dBeijing\u201d\uff1b\u00a0\u00a0\u00a0 \u00a0\u00a0D)char *s\uff1bs=\u201dBeijing\u201d\uff1b", "\u7b54\u6848:D", "\u5b57\u7b26\u4e32\u901a\u5e38\u662f\u6307\u7528\u4e00\u5bf9\u53cc\u5f15\u53f7\u62ec\u8d77\u6765\u7684\u4e00\u7ec4\u5b57\u7b26\u5e38\u91cf\u5e8f\u5217\u3002\u5728c\u8bed\u8a00\u4e2d\uff0c\u53ef\u4ee5\u76f4\u63a5\u5b9a\u4e49\u4e00\u4e2a\u6307\u5411\u5b57\u7b26\u4e32\u7684\u6307\u9488\u53d8\u91cf\uff0c\u7136\u540e\u5bf9\u5176\u8d4b\u503c\u4e3a\u5b57\u7b26\u4e32\u5e38\u91cf\u540e\uff0c\u6307\u5411\u5b57\u7b26\u4e32\u7684\u6307\u9488\u5c31\u6307\u5411\u4e86\u5b57\u7b26\u4e32\u7684\u9996\u5730\u5740\u3002", "\u00a0", "(40)\u5982\u679c\u4e00\u4e2aC\u7a0b\u5e8f\u7531\u591a\u4e2a\u6587\u4ef6\u7ec4\u6210\uff0c\u5728\u5c06\u591a\u4e2a\u6587\u4ef6\u7f16\u8bd1\u8fde\u63a5\u6210\u4e00\u4e2a\u7edf\u4e00\u7684\u53ef\u6267\u884c\u6587\u4ef6\u65f6\uff0c\u53ef\u91c7\u7528\u7684\u65b9\u6cd5\u6709\u591a\u79cd\uff0c\u4ee5\u4e0b\u53d9\u8ff0\u4e2d\u9519\u8bef\u7684\u662f__________\u3002", "A)\u53ef\u4ee5\u5229\u7528Turbo c\u96c6\u6210\u73af\u5883\u00a0\u00a0\u00a0 B)\u5728MS C\u4e0a\u8fdb\u884c\u7f16\u8bd1\u8fde\u63a5", "C)\u7528#include\u547d\u4ee4\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)\u7528\u6587\u5b57\u5904\u7406\u8f6f\u4ef6Word", "\u7b54\u6848:D", "\u8fd0\u7b97\u591a\u4e2a\u6587\u4ef6\u7684\u7a0b\u5e8f\u67093\u79cd\u65b9\u6cd5\uff0c\u7b2c1\u79cd\u662f\u5229\u7528Turbo c\u96c6\u6210\u73af\u5883\uff0c\u5148\u5c06\u6bcf\u4e2a\u6587\u4ef6\u8f93\u5165\u5e76\u5b58\u50a8\u5728\u78c1\u76d8\u4e0a\uff0c\u7136\u540e\u5728\u7f16\u8bd1\u5728\u72b6\u6001\u4e0b\u5efa\u7acb\u4e00\u4e2a\u201c\u9879\u76ee\u6587\u4ef6\u201d\uff0c\u6700\u540e\u518d\u7f16\u8bd1\u8fde\u63a5\u3002\u7b2c2\u79cd\u65b9\u6cd5\u662f\u5728MS c\u4e0a\u5148\u5206\u522b\u5bf9\u591a\u4e2a\u6587\u4ef6\u8fdb\u884c\u7f16\u8bd1\u5f97\u5230\uff0eobj\u6587\u4ef6\uff0c\u7136\u540e\u7528link\u547d\u4ee4\u628a\u56db\u4e2a\u6587\u4ef6\u8fde\u63a5\u8d77\u6765\u3002\u7b2c3\u79cd\u65b9\u6cd5\u662f\u7528#include\u547d\u4ee4\u5c06\u591a\u4e2a\u6587\u4ef6\u5305\u542b\u8fdb\u67d0\u4e2a\u6587\u4ef6\u4e2d\u3002", "\u00a0", "(41)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "main()", "{", "int n\uff0cs=0\uff1b", "clrscr0\uff1b", "for(n=10\uff1bn<30\uff1bn++)", "{", "if(n\uff053==O)", "{\u00a0 s+=n\uff1b", "continue\uff1b", "}", "if(s>100)break\uff1b", "}", "printf(\u201c\uff05d\u201d,s)\uff1b", "}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f___________\u3002", "A)117\u00a0\u00a0\u00a0 B)147\u00a0\u00a0\u00a0 C)127 \u00a0\u00a0\u00a0D)137", "\u7b54\u6848:A", "continue\u8bed\u53e5\u7684\u529f\u80fd\u662f\u7ed3\u675f\u672c\u6b21\u5faa\u73af\uff0c\u5373\u8df3\u8fc7\u5faa\u73af\u4f53\u4e2d\u4e0b\u9762\u5c1a\u672a\u6267\u884c\u7684\u8bed\u53e5\uff0c\u63a5\u7740\u6267\u884c\u4e0b\u4e00\u6b21\u662f\u5426\u6267\u884c\u5faa\u73af\u7684\u5224\u5b9a\u3002\u800cbreak\u8bed\u53e5\u662f\u4ece\u5faa\u73af\u4f53\u5185\u8df3\u51fa\uff0c\u5373\u63d0\u524d\u7ed3\u675f\u5faa\u73af\u3002", "\u00a0", "(42)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "main()", "{", "char\u00a0 s[]={\u2018T\u2019\uff0c\u2018E\u2019\uff0c\u2018A\u2019\uff0c\u2018C\u2019\uff0c\u2018H\u2019\uff0c\u2018E\u2019\uff0c\u2018R\u2019}\uff0c*p\uff1b", "clrscr0\uff1b", "p=s+3\uff1b", "printf(\u201d\uff05c\u201d\uff0c*p++)\uff1b", "printf(\u201d\uff05c\u201d\uff0c*p++)\uff1b", "}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "A)AC\u00a0\u00a0\u00a0 B)CH\u00a0\u00a0\u00a0 C)HE\u00a0\u00a0\u00a0 D)TEA", "\u7b54\u6848:B", "\u8bc4\u6790:\u5982\u679c\u6709\u6307\u5411\u5b57\u7b26\u6570\u7ec4\u7684\u6307\u9488\uff0c\u90a3\u4e48\u5b57\u7b26\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u53ef\u4ee5\u7528\u6307\u9488\u53d8\u91cf\u8868\u793a\uff0c\u6267\u884c\u7b2c\u4e00\u4e2a\u8f93\u51fa\u8bed\u53e5printf(\u201c\uff05c\u201d\uff0c*p++)\uff1b\u540e\uff0c\u8f93\u51fa\u5b57\u7b26\u2018C\u2019\uff0c\u6267\u884c\u7b2c\u4e8c\u4e2a\u8f93\u51fa\u8bed\u53e5printr(\u201c\uff05c\u201d\uff0c*p++)\uff1b\u540e\uff0c\u8f93\u51fa\u5b57\u7b26\u2018H\u2019\u3002", "\u00a0", "(43)\u5df2\u5b9a\u4e49\u4ee5\u4e0b\u51fd\u6570", "fun(char *pl\uff0cchar*p2)", "{", "while((\u2018pl=\u2018p2)\u300e-\u2019\uff3c0\u2019\u300f", "{", "pl++\uff1b", "p2++\uff1b", "}", "}", "\u51fd\u6570\u7684\u529f\u80fd\u662f__________\u3002", "A)\u5c06p2\u6240\u6307\u5b57\u7b26\u4e32\u590d\u5236\u5230pl\u6240\u6307\u5185\u5b58\u7a7a\u95f4", "B)\u5c06p2\u6240\u6307\u5b57\u7b26\u4e32\u7684\u5730\u5740\u8d4b\u7ed9\u6307\u9488p1", "C)\u5bf9pl\u548cp2\u4e24\u4e2a\u6307\u9488\u6240\u6307\u5b57\u7b26\u4e32\u8fdb\u884c\u6bd4\u8f83", "D)\u68c0\u67e5pl\u548cp2\u4e24\u4e2a\u6307\u9488\u6240\u6307\u5b57\u7b26\u4e32\u4e2d\u662f\u5426\u6709\u2019\uff3cO\u2019", "\u7b54\u6848:A", "\u6307\u9488\u7684\u767d\u52a0\u6216\u81ea\u51cf\u8fd0\u7b97\uff0c\u8868\u793a\u6307\u9488\u5411\u524d\u6216\u5411\u540e\u79fb\u52a8\u4e00\u4e2a\u5b58\u50a8\u5355\u5143\u3002", "\u00a0", "(44)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "main()", "{", "char s[][5]={{\u201c\uff0c\u201d\uff0c\u2018*\u2019}\uff0c{\u201c\uff0c\u2018*\u2019\uff0c\u201d\uff0c\u2018*\u2019}\uff0c{\u2018*\u2019\u201c\uff0c\u201d\uff0c\u201d\uff0c\u2018*\u2019}\uff0c{\u201c\uff0c\u2018*\u2019\uff0c\u201d\uff0c\u2018*\u2019}\uff0c{\u201c\uff0c\u201d\uff0c\u2018*\u2019}}\uff1b", "int\u00a0 i\uff0c\u00a0 j\uff1b", "for(i=0\uff1bi<5\uff1bi\u5341+)", "{", "for(j=O\uff1b__________j++)", "printf(\u201c\uff05c\u201d\uff0cs[i][I])\uff1b", "printf(\u201d\uff3cn\u201d)\uff1b", "}", "}", "\u82e5\u8f93\u51fa\u5982\u4e0b\u7684\u94bb\u77f3\u5f62\u5e73\u9762\u56fe\uff0c\u5219\u5728\u7a0b\u5e8f\u7684\u4e0b\u5212\u7ebf\u5904\u5e94\u586b\u5165\u7684\u8868\u8fbe\u5f0f\u662f__________\u3002", "*", "*\u00a0\u00a0\u00a0 *", "*\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 *", "*\u00a0\u00a0\u00a0 *", "*", "A)j<5\u00a0\u00a0\u00a0 B)j<=5\u00a0\u00a0\u00a0 C)j>5\u00a0\u00a0\u00a0 D)j>=5", "\u7b54\u6848:A", "\u5728\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u5176\u884c\u6807\u548c\u5217\u6807\u6765\u63a7\u5236\u5176\u8f93\u51fa\u7684\u6570\u636e\u5143\u7d20\u3002", "\u00a0", "(45)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "sum(char *p)", "{\u00a0 *p=*p+3\uff1b}", "main()", "{", "char str[10]={\u201cabcde\u201d}\uff0c*p=str\uff1b", "clrscr0\uff1b", "sum(p)\uff1b", "primf(\u201c\uff05c\uff3cn\u201d,*p\u2013)\uff1b", "}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "A)c\u00a0\u00a0\u00a0 B)d\u00a0\u00a0\u00a0 C)e \u00a0\u00a0\u00a0\u00a0D)f", "\u7b54\u6848:B", "\u5728\u7528\u5b57\u7b26\u6307\u9488\u4f5c\u4e3a\u5f62\u5f0f\u53c2\u6570\u65f6\uff0c\u5148\u8ba9\u6307\u9488p\u6307\u5411\u5b57\u7b26\u6570\u7ec4\u7684\u9996\u5730\u5740\uff0c\u7136\u540e\u53ef\u4ee5\u7528*(p+i)\u7684\u5f62\u5f0f\u76f4\u63a5\u5b58\u53d6\u5404\u5bf9\u5e94\u5355\u5143\u4e2d\u7684\u5143\u7d20\uff0c\u800c*p+i\u7684\u610f\u4e49\u5219\u4e0d\u6837\uff0c\u5b83\u662f\u6307\u5c06\u6307\u9488\u53d8\u91cfp\u6240\u6307\u5411\u7684\u5b58\u50a8\u5355\u5143\u7684\u503c\u52a0\u4e0ai\u3002", "\u00a0", "(46)\u5df2\u5b9a\u4e49\u4ee5\u4e0b\u51fd\u6570", "fun(int *p)", "(return\u00a0 *p\uff1b)", "\u8be5\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f_________\u3002", "A)\u4e0d\u786e\u5b9a\u7684\u503c\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)\u5f62\u53c2p\u4e2d\u5b58\u653e\u7684\u503c", "C)\u5f62\u53c2p\u6240\u6307\u5b58\u50a8\u5355\u5143\u7684\u503c\u00a0\u00a0\u00a0 D)\u5f62\u53c2p\u7684\u5730\u5740\u503c", "\u7b54\u6848:C", "\u6307\u9488p\u662f\u6307\u5411\u4e00\u4e2a\u5730\u5740\uff0c\u800c*p\u662f\u8868\u793a\u6307\u9488p\u6307\u5411\u5b58\u50a8\u5355\u5143\u4e2d\u7684\u6570\u636e\u3002", "\u00a0", "(47)\u6709\u5982\u4e0b\u8bed\u53e5", "int\u00a0 *p\uff0c\u00a0 a[]={2\uff0c4\uff0c6\uff0c8\uff0c10}\uff1b", "p=a\uff1b", "\u5219\u4e0e\u8bed\u53e5*p++\uff1b\u7b49\u4ef7\u7684\u8bed\u53e5\u662f__________\u3002", "A)(*p)++\uff1b\u00a0\u00a0\u00a0 B)*(p++)\uff1b\u00a0\u00a0\u00a0 C)*(++p)\uff1b\u00a0\u00a0\u00a0 D)++*p\uff1b", "\u7b54\u6848:B", "\u7531\u4e8e++\u548c*\u540c\u4f18\u5148\u7ea7\uff0c\u7ed3\u5408\u65b9\u5411\u4e3a\u81ea\u53f3\u5411\u5de6\uff0c\u56e0\u6b64\u8bed\u53e5*p++\uff1b\u7b49\u4ef7\u4e8e*(p++)\uff1b\uff0c\u800c*(++p)\u662f\u5148\u4f7fp\u52a0l\uff0c\u518d\u53d6*p\u7684\u503c\u3002\u8bed\u53e5++*p\uff1b\u76f8\u5f53\u4e8e++\uff08*p\uff09\uff0c\u5219\u662f\u5148\u53d6p\u6240\u6307\u53d8\u91cf\u7684\u503c\uff0c\u7136\u540e\u81ea\u52a0l\u3002", "\u00a0", "(48)\u4e0b\u5217\u5173\u4e8e\u7ed3\u6784\u4f53\u4e0e\u82ef\u7528\u4f53\u7684\u8bf4\u6cd5\u4e2d\uff0c\u9519\u8bef\u7684\u662f_________\u3002", "A)\u7ed3\u6784\u4f53\u53d8\u91cf\u6240\u5360\u5185\u5b58\u957f\u5ea6\u662f\u5404\u6210\u5458\u5360\u7684\u5185\u5b58\u957f\u5ea6\u4e4b\u548c", "B)\u5171\u7528\u4f53\u53d8\u91cf\u6240\u5360\u5185\u5b58\u957f\u5ea6\u662f\u5404\u6210\u5458\u5360\u7684\u5185\u5b58\u957f\u5ea6\u4e4b\u548c", "C)\u5171\u7528\u4f53\u53d8\u91cf\u6240\u5360\u5185\u5b58\u957f\u5ea6\u7b49\u4e8e\u6700\u957f\u6210\u5458\u7684\u957f\u5ea6", "D)\u5171\u7528\u4f53\u53d8\u91cf\u548c\u7ed3\u6784\u4f53\u53d8\u91cf\u4e2d\u7684\u6240\u6709\u6210\u5458\u53ef\u4ee5\u662f\u4e0d\u540c\u6570\u636e\u7c7b\u578b", "\u7b54\u6848:B", "\u5171\u7528\u4f53\u4e5f\u79f0\u201c\u8054\u5408\u4f53\u201d\uff0c\u4e0e\u7ed3\u6784\u4f53\u5b9a\u4e49\u5f62\u5f0f\u76f8\u540c\uff0c\u800c\u5b83\u4eec\u662f\u542b\u4e49\u4e0d\u540c\u7684\u4e24\u7c7b\u6784\u9020\u6570\u636e\u7c7b\u578b\u3002\u7ed3\u6784\u4f53\u4e2d\u6bcf\u4e2a\u6210\u5458\u90fd\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u662f\u6240\u6709\u6210\u5458\u7684\u5185\u5b58\u957f\u5ea6\u4e4b\u548c\u3002\u800c\u5171\u7528\u4f53\u4e0d\u540c\uff0c\u6240\u6709\u6210\u5458\u662f\u5171\u7528\u4e00\u4e2a\u5185\u5b58\u533a\u7684\uff0c\u6240\u4ee5\u5171\u7528\u4f53\u53d8\u91cf\u7684\u5185\u5b58\u957f\u5ea6\u662f\u6700\u957f\u6210\u5458\u7684\u957f\u5ea6\u3002", "\u00a0", "(49)\u4e0b\u5217\u5bf9\u4e8e\u6587\u4ef6\u7684\u6253\u5f00\u65b9\u5f0f\u53d9\u8ff0\u4e2d\uff0c\u9519\u8bef\u7684\u662f_________\u3002", "A)\u7528\u201dr\u201d\u65b9\u5f0f\u6253\u5f00\u7684\u6587\u4ef6\u53ea\u80fd\u8bfb", "B)\u7528\u201dw\u201d\u65b9\u5f0f\u6253\u5f00\u7684\u6587\u4ef6\u53ea\u80fd\u5411\u8be5\u6587\u4ef6\u5199\u6570\u636e", "C)\u7528\u201da\u201d\u65b9\u5f0f\u6253\u5f00\u7684\u6587\u4ef6\u65e2\u80fd\u8bfb\uff0c\u53c8\u53ef\u4ee5\u5411\u8be5\u6587\u4ef6\u5199\u6570\u636e", "D)\u5982\u679c\u4e0d\u80fd\u6253\u5f00\u6587\u4ef6\uff0cfopen\u51fd\u6570\u5c06\u4f1a\u5e26\u56de\u4e00\u4e2a\u9519\u4fe1\u606f", "\u7b54\u6848:C", "\u5728c\u7a0b\u5e8f\u4e2d\u6253\u5f00\u6587\u4ef6\u65f6\uff0c\u5fc5\u987b\u8981\u786e\u5b9a\u6587\u4ef6\u7684\u6253\u5f00\u65b9\u5f0f\u3002\u5728\u6587\u4ef6\u6253\u5f00\u51fd\u6570fopen\u4e2d\uff0c\u7528\u201cr\u201d\u65b9\u5f0f\u6253\u5f00\u7684\u6587\u4ef6\u53ea\u80fd\u8bfb\uff0c\u5373\u4ece\u6587\u4ef6\u5411\u8ba1\u7b97\u673a\u8f93\u5165\uff0c\u800c\u4e0d\u662f\u5411\u6587\u4ef6\u8f93\u5165\uff1b\u7528\u201cw\u201d\u65b9\u5f0f\u6253\u5f00\u7684\u6587\u4ef6\u53ea\u80fd\u5199\uff0c\u5373\u5411\u6587\u4ef6\u5199\u5165\u6570\u636e\uff0c\u800c\u4e0d\u80fd\u4ece\u6587\u4ef6\u4e2d\u5411\u8ba1\u7b97\u673a\u8f93\u5165\u6570\u636e\u3002\u7528\u201ca\u201d\u65b9\u5f0f\u6253\u5f00\u7684\u6587\u4ef6\u53ea\u80fd\u5728\u6587\u4ef6\u672b\u5c3e\u6dfb\u52a0\u6570\u636e\u3002\u5728\u7528\u201cr\u201d\u65b9\u5f0f\u6253\u5f00\u65f6\uff0cfopen\u51fd\u6570\u5982\u679c\u4e0d\u80fd\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\uff0c\u4f1a\u8fd4\u56de\u4e00\u4e2a\u51fa\u9519\u4fe1\u606f\u3002", "\u00a0", "(50)\u4e0b\u5217\u5173\u4e8ec\u8bed\u8a00\u6570\u636e\u6587\u4ef6\u7684\u53d9\u8ff0\u4e2d\u6b63\u786e\u7684_________\u3002", "A)\u6587\u4ef6\u7531ASCII\u7801\u5b57\u7b26\u5e8f\u5217\u7ec4\u6210\uff0cc\u8bed\u8a00\u53ea\u80fd\u8bfb\u5199\u6587\u672c\u6587\u4ef6", "B)\u6587\u4ef6\u7531\u4e8c\u8fdb\u5236\u6570\u636e\u5e8f\u5217\u7ec4\u6210\uff0cc\u8bed\u8a00\u53ea\u80fd\u8bfb\u5199\u4e8c\u8fdb\u5236\u6587\u4ef6", "C)\u6587\u4ef6\u7531\u8bb0\u5f55\u5e8f\u5217\u7ec4\u6210\uff0c\u53ef\u6309\u6570\u636e\u7684\u5b58\u653e\u5f62\u5f0f\u5206\u4e3a\u4e8c\u8fdb\u5236\u6587\u4ef6\u548c\u6587\u672c\u6587\u4ef6", "D)\u6587\u4ef6\u7531\u6570\u636e\u6d41\u5f62\u5f0f\u7ec4\u6210\uff0c\u53ef\u6309\u6570\u636e\u7684\u5b58\u653e\u5f62\u5f0f\u5206\u4e3a\u4e8c\u8fdb\u5236\u6587\u4ef6\u548c\u6587\u672c\u6587\u4ef6", "\u7b54\u6848:D", "c\u8bed\u8a00\u628a\u6587\u4ef6\u770b\u4f5c\u4e00\u4e2a\u5b57\u7b26(\u5b57\u8282)\u7684\u5e8f\u5217\uff0c\u5373\u7531\u4e00\u4e2a\u4e00\u4e2a\u5b57\u7b26(\u5b57\u8282)\u6570\u636e\u987a\u5e8f\u7ec4\u6210\u3002\u6839\u636e\u6570\u636e\u7684\u7ec4\u7ec7\u5f62\u5f0f\uff0c\u53ef\u5206\u4e3aASCII\u7801\u6587\u4ef6\u548c\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u56e0\u6b64\uff0c\u4e00\u4e2ac\u6587\u4ef6\u662f\u4e00\u4e2a\u5b57\u8282\u6d41\u6216\u4e8c\u8fdb\u5236\u6d41\u3002\u5b83\u628a\u6570\u636e\u770b\u4f5c\u662f\u4e00\u8fde\u4e32\u7684\u5b57\u7b26(\u5b57\u8282)\u3002\u800c\u4e0d\u8003\u8651\u8bb0\u5f55\u7684\u754c\u9650\u3002\u6362\u53e5\u8bdd\u8bf4\uff0cc\u8bed\u8a00\u6587\u4ef6\u5e76\u4e0d\u662f\u7531\u8bb0\u5f55\u7ec4\u6210\u7684\u3002", "\u00a0", "\u4e8c\u3001\u586b\u7a7a\u9898(\u6bcf\u7a7a2\u5206\uff0c\u517140\u5206)", "\u8bf7\u5c06\u6bcf\u4e00\u4e2a\u7a7a\u7684\u6b63\u786e\u7b54\u6848\u5199\u5728\u7b54\u9898\u5361\u7684\u30101\u3011\u81f3\u301020\u3011\u5e8f\u53f7\u7684\u6a2a\u7ebf\u4e0a\uff0c\u7b54\u5728\u8bd5\u5377\u4e0a\u4e0d\u5f97\u5206\u3002", "(1)\u67d0\u4e8c\u53c9\u6811\u4e2d\u5171\u670927\u4e2a\u7ed3\u70b9\uff0c\u5176\u4e2d\u5ea6\u4e3a2\u7684\u7ed3\u70b9\u670910\u4e2a\uff0c\u5219\u8be5\u4e8c\u53c9\u6811\u4e2d\u6709", "\u4e2a\u5ea6\u4e3al\u7684\u7ed3\u70b9\u3002", "\u7b54\u6848:\u30101\u30116", "\u5df2\u77e5n2=10\uff0c\u6839\u636e\u4e8c\u53c9\u6811\u4e2d\u5ea6\u4e3a2\u7684\u7ed3\u70b9\u4e0e\u53f6\u5b50\u7ed3\u70b9\u7684\u5173\u7cfb\uff1an0=n2+l\u53ef\u77e5\uff0c\u4e3a1l\u3002\u56e0\u6b64\uff0c\u5ea6\u4e3al\u7684\u7ed3\u70b9\u6570\u4e3a\uff1an1=n-n0-n2=27-10-l1=6", "\u00a0", "(2)1973\u5e74\u7f8e\u56fd\u5b66\u8005I\uff0eNassi\u548cB\uff0eShneiderman\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u6d41\u7a0b\u56fe\u5f62\u5f0f\u3002\u5728\u8fd9\u79cd\u65b0\u7684\u6d41\u7a0b\u56fe\u4e2d\uff0c\u5b8c\u5168\u53bb\u6389\u4e86\u5e26\u7bad\u5934\u7684\u6d41\u7a0b\u7ebf\uff0c\u5168\u90e8\u7b97\u6cd5\u5199\u5728\u4e00\u4e2a\u77e9\u5f62\u6846\u5185\u3002\u8fd9\u79cd\u6d41\u7a0b\u56fe\u79f0\u4e3a", "\u6d41\u7a0b\u56fe\u3002", "\u7b54\u6848:\u30102\u3011N-S", "\u57fa\u4e8e\u53ef\u4ee5\u7528\u987a\u5e8f\u7ed3\u6784\u8868\u793a\u4efb\u4f55\u590d\u6742\u7b97\u6cd5\u7ed3\u6784\u7684\u601d\u60f3\uff0c1973\u5e74\u7f8e\u56fd\u5b66\u8005I\uff0eNassi\u548cB\uff0eShneiderman\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u6d41\u7a0b\u56fe\u5f62\u5f0f\u3002\u8fd9\u79cd\u6d41\u7a0b\u56fe\u79f0\u4e3aN-S\u6d41\u7a0b\u56fe(N\u548cs\u662f\u4e24\u4f4d\u7f8e\u56fd\u5b66\u8005\u7684\u82f1\u6587\u59d3\u540d\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd)\u3002", "\u00a0", "(3)\u5728\u8f6f\u4ef6\u6d4b\u8bd5\u8fc7\u7a0b\u4e2d\uff0c\u5355\u5143\u6d4b\u8bd5\u7684\u76ee\u7684", "\uff0c\u591a\u91c7\u7528\u767d\u76d2\u6d4b\u8bd5\u6cd5\u3002", "\u7b54\u6848:\u30103\u3011\u4fdd\u8bc1\u6bcf\u4e2a\u6a21\u5757\u5355\u72ec\u8fd0\u884c\u6b63\u786e", "\u8f6f\u4ef6\u6d4b\u8bd5\u7684\u5b9e\u65bd\u8fc7\u7a0b\u5206\u4e3a\u56db\u6b65\uff0c\u5373\u5355\u5143\u6d4b\u8bd5\u3001\u7efc\u5408\u6d4b\u8bd5\u3001\u786e\u8ba4\u6d4b\u8bd5\u5229\u7cfb\u7edf\u6d4b\u8bd5\u3002\u5176\u4e2d\u5355\u5143\u6d4b\u8bd5\u7684\u4e3b\u8981\u7684\u76ee\u7684\u662f\u4fdd\u8bc1\u6bcf\u4e2a\u6a21\u5757\u5355\u72ec\u8fd0\u884c\u6b63\u786e\uff1a\u591a\u91c7\u7528\u767d\u76d2\u6d4b\u8bd5\u6cd5\uff0c\u68c0\u67e5\u6a21\u5757\u63a7\u5236\u7ed3\u6784\u7684\u67d0\u4e9b\u7279\u6b8a\u8def\u5f84\uff0c\u671f\u671b\u8986\u76d6\u5c3d\u53ef\u80fd\u591a\u7684\u51fa\u9519\u70b9\u3002", "\u00a0", "(4)\u5728\u6570\u636e\u5e93\u7cfb\u7edf\u4e2d\uff0c\u6570\u636e\u5197\u4f59\u5ea6\u5927\u5927\u964d\u4f4e\u7684\u6700\u4e3b\u8981\u539f\u56e0\u662f", "\u3002", "\u7b54\u6848:\u30104\u3011\u5b9e\u73b0\u6570\u636e\u5171\u4eab", "\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\u662f\u53ef\u4ee5\u88ab\u591a\u4e2a\u7528\u6237\u5171\u4eab\u7684\uff0c\u8fd9\u548c\u4ee5\u524d\u7684\u6587\u4ef6\u7cfb\u7edf\u6709\u6240\u4e0d\u540c\u3002\u7531\u4e8e\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\u5b9e\u73b0\u6570\u636e\u5171\u4eab\uff0c\u53ef\u4ee5\u6781\u5927\u7684\u964d\u4f4e\u6570\u636e\u5197\u4f59\u5ea6\uff0c\u5e76\u4e14\u53ea\u82b1\u8d39\u5f88\u5c11\u7684\u5b58\u50a8\u7a7a\u95f4\u3002", "\u00a0", "(5)\u5728\u8f6f\u4ef6\u751f\u5b58\u5468\u671f\u4e2d\uff0c\u8f6f\u4ef6\u5b9a\u4e49\u9636\u6bb5\u7684\u4e3b\u8981\u4efb\u52a1\u662f", "\u00a0\u3002", "\u7b54\u6848:\u30105\u3011\u786e\u5b9a\u8f6f\u4ef6\u7cfb\u7edf\u7684\u5de5\u7a0b\u9700\u6c42", "\u4e00\u4e2a\u8f6f\u4ef6\u751f\u5b58\u5468\u671f\u4e3b\u8981\u5305\u542b\u4e09\u4e2a\u9636\u6bb5\uff0c\u5373\u8f6f\u4ef6\u5b9a\u4e49\u3001\u8f6f\u4ef6\u5f00\u53d1\u3001\u8f6f\u4ef6\u7ef4\u62a4\u3002\u8f6f\u4ef6\u5b9a\u4e49\u9636\u6bb5\u4e3b\u8981\u4efb\u52a1\u662f\u786e\u5b9a\u8f6f\u4ef6\u7cfb\u7edf\u7684\u5de5\u7a0b\u9700\u6c42\u3002\u4e3a\u51c6\u786e\u660e\u786e\u8f6f\u4ef6\u7684\u5de5\u7a0b\u9700\u6c42\uff0c\u8f6f\u4ef6\u5b9a\u4e49\u53c8\u5206\u6210\u8f6f\u4ef6\u7cfb\u7edf\u7684\u53ef\u884c\u7814\u7a76\u548c\u9700\u6c42\u5206\u6790\u4e24\u4e2a\u5b50\u9636\u6bb5\u3002", "\u00a0", "(6)\u5982\u679c\u5728\u8fd0\u884c\u4ee5\u4e0b\u7a0b\u5e8f\u65f6\u4ece\u952e\u76d8\u8f93\u5165\uff1abcd<\u56de\u8f66>\u3002\u8f93\u51fa\u7ed3\u679c", "\u3002", "#include<stdio\uff0eh>", "main()", "{", "char I=\u2019a\u2019J=\u2019a\u2019\uff0ck=\u2019a\u2019\uff1b", "clrscr()\uff1b", "scanf(\u201d\uff05c\uff05*c\uff05c\u201d\uff0c&i\uff0c\uff06j\uff0c&k)\uff1b", "printf(\u201d\uff05c\uff05c\uff05c\u201d\uff0ci\uff0cj\uff0ck)\uff1b", "}", "\u7b54\u6848:\u30106\u3011bda", "\u5728scanf()\u8bed\u53e5\u4e2d\uff0c\u5982\u679c\u8f93\u5165\u683c\u5f0f\u4e2d\u5e26\u6709\u201c*\u201d\uff0c\u5219\u53d8\u91cf\u5728\u63a5\u6536\u6570\u636e\u65f6\uff0c\u81ea\u52a8\u5ffd\u7565\u6389\u6570\u636e\u8f93\u5165\u5e8f\u5217\u4e2d\u201c*\u2019\u5bf9\u5e94\u4f4d\u7f6e\u7684\u7684\u6570\u636e\u5143\u7d20\uff0c\u5176\u5bf9\u5e94\u53d8\u91cf\u7684\u503c\u4ece\u201c*\u201d\u5bf9\u5e94\u4f4d\u7f6e\u7684\u4e0b\u4e00\u4e2a\u6570\u636e\u5f00\u59cb\u63a5\u6536\u3002", "\u00a0", "(7)\u4ee5\u4e0b\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f", "\u3002", "#define\u00a0 SQ(y)\u00a0\u00a0\u00a0 y*y", "main()", "{\u00a0 int x=lO,y\uff1b", "y=SQ(x+3)\uff1b", "primf(\u201d\uff05d\u201d\uff0cy)\uff1b", "}", "\u7b54\u6848:\u30107\u301143", "\u5728\u4f7f\u7528\u5e26\u53c2\u6570\u7684\u5b8f\u5b9a\u4e49\u65f6\u4e0d\u662f\u8fdb\u884c\u7b80\u5355\u7684\u5b57\u7b26\u66ff\u6362\u3002\u5982\u679c\u5728\u7a0b\u5e8f\u6709\u5e26\u5b9e\u53c2\u7684\u5b8f\uff0c\u5219\u6309#define\u547d\u4ee4\u884c\u4e2d\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u4ece\u5de6\u5230\u53f3\u8fdb\u884c\u7f6e\u6362\u3002\u5982\u679c\u662f\u8868\u8fbe\u5f0f\u65f6\uff0c\u4e00\u5b9a\u8981\u6ce8\u610f\u5176\u66ff\u6362\u540e\u5f97\u5230\u7684\u8868\u8fbe\u5f0f\u3002\u672c\u9898\u4e2d\uff0c\u6709\u5b8f\u5b9a\u4e49\u884c#define sQ(y) y*y\u3002\u5728\u7528\u5b9e\u53c2x+3\u8fdb\u884c\u66ff\u6362\u540e\uff0c\u5176\u5f97\u5230\u7684\u5b57\u7b26\u4e32\u8868\u8fbe\u5f0f\u4e3a\uff1ax+3*x+3=10+3*10+3=43\u3002", "\u00a0", "(8)\u5df2\u77e5\u5b57\u7b26\u201cA\u201d\u7684ASCII\u503c\u4e3a65\uff0c\u4ee5\u4e0b\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f", "\u3002", "main()", "{", "int x=30\uff0cy=50\uff0ct=4\uff1b", "char z=\u2019A\u2019\uff1a", "clrscr()\uff1b", "if(y>x+2&&y<z-12)", "x=y\uff1b", "y=t\uff1b", "if(y<z&&y>z-20)", "t=x\uff1a", "x=y\uff1b", "y=t\uff1b", "printf(\u201d\uff05d\uff0c\uff05d\uff0c\uff05d\uff3cn\u201d\uff0cx\uff0cy\uff0cz)\uff1b", "}", "\u7b54\u6848:\u30108\u30114\uff0c4\uff0c 65", "\u5982\u679c\u591a\u4e2a\u5206\u652f\u7ed3\u6784\u5904\u4e8e\u987a\u5e8f\u5173\u7cfb\u65f6\uff0c\u6bcf\u4e2a\u5206\u652f\u8bed\u53e5\u90fd\u8981\u6267\u884c\u3002\u672c\u9898\u4e2d\u7684\u4e24\u4e2aif\u8bed\u53e5\u5c31\u662f\u8fd9\u79cd\u5173\u7cfb\u3002", "\u00a0", "(9)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f", "\u3002", "main()", "{", "int a=4\uff0cb=8\uff0cc\uff1b", "c=(\u201cb==a)&&(a+b!=20)\uff1b", "printf(\u201d\uff05d\uff0c\uff05d\uff0c\uff05d\uff3cn\u201d\uff0ca\uff0cb\uff0cC)\uff1b", "}", "\u7b54\u6848:\u30109\u30114\uff0c8\uff0c0", "\u5982\u679c\u5728\u8868\u8fbe\u4e2d\u51fa\u73b0\u591a\u79cd\u8fd0\u7b97\u7b26\u65f6\uff0c\u4e00\u5b9a\u8981\u6482\u7167\u4ed6\u4eec\u7684\u4f18\u5148\u7ea7\u522b\u8fdb\u884c\u8fd0\u7b97\uff0c\u5426\u5219\u5176\u7ed3\u679c\u53ef\u80fd\u4f1a\u4ea7\u751f\u9519\u8bef\u3002\u672c\u9898\u4e2d\uff0c\u7531\u4e8e\u8d4b\u503c\u8868\u8fbe\u4e2d\u5f0fc=(a\uff0fb==a)&&(a+b!=20)\u4e2d\u6709\u4e24\u4e2a\u62ec\u53f7\uff0c\u800c\u4e14\u4e24\u4e2a\u62ec\u53f7\u662f\u8fdb\u884c\u903b\u8f91\u4e0e\u8fd0\u7b97\u3002\u5f53\u7b2c1\u4e2a\u62ec\u53f7\u5185\u7684\u503c\u4e3a\u5047\u65f6\uff0c\u4e0d\u7ba1\u540e\u9762\u62ec\u53f7\u5185\u7684\u503c\u662f\u5426\u4e3a\u5047\uff0c\u4e24\u4e2a\u62ec\u53f7\u5185\u7684\u503c\u8fdb\u884c\u903b\u8f91\u4e0e(&&)\u8fd0\u7b97\u65f6\uff0c\u5176\u7ed3\u679c\u80af\u5b9a\u4e3a\u5047\u3002", "\u00a0", "(10)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f", "\u3002", "main()", "{", "char a=\u2019A\u2019\uff0cb=\u2019E\u2019\uff1b", "int sum=1\uff0ci=1\uff1b", "do", "{", "sum*=i\uff1b", "i++\uff1a", "}while(i<=b-a)\uff1b", "printf(\u201c\uff05d\u201d,sum)\uff1b", "}", "\u7b54\u6848:\u301010\u301124", "\u5b57\u7b26\u6570\u636e\u8fdb\u884c\u7b97\u672f\u8fd0\u7b97\u65f6\uff0c\u662f\u5c06\u5b57\u7b26\u5bf9\u5e94\u7684ASCII\u503c\u5f53\u4f5c\u4e00\u4e2a\u6574\u578b\u6570\u636e\u6765\u5904\u7406\u3002\u540c\u6837\u8981\u5c06\u6574\u6570\u8fdb\u884c\u5b57\u7b26\u8fd0\u7b97\u65f6\uff0c\u53ef\u4ee5\u5c06\u6574\u6570\u8f6c\u6362\u6210ASCII\u503c\u4e0e\u5176\u76f8\u7b49\u7684\u5b57\u7b26\u3002", "\u00a0", "(11)\u5df2\u77e5\u6570\u5b57\u20180\u2019\u7684AsCII\u7801\u503c\u4e3a48\uff0c\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u82e5\u4ece\u952e\u76d8\u8f93\u5165\uff1a096<\u56de\u8f66>\uff0c\u5219\u4e0b\u5217\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f", "\u3002", "#include<stdio\uff0eh>", "main()", "{\u00a0 char\u00a0 x\uff0cy\uff1b", "x=getchar()\uff1b", "scanf(\u201d\uff05d\u201d\uff0c&y)\uff1b", "x=x+4\uff1b\u00a0 y=y\uff0f2\uff1b", "printf(\u201d%c%C\u201d,x,y)\uff1b", "}", "\u7b54\u6848:\u301011\u301140", "\u4ee5ASCII\u7801\u503c\u4e3a\u6865\u6881\uff0c\u53ef\u4ee5\u5c06\u5b57\u7b26\u6570\u636e\u4e0e\u5176ASCII\u503c\u76f8\u7b49\u7684\u6574\u578b\u6570\u8fdb\u884c\u76f8\u4e92\u8f6c\u6362\uff0c\u5e76\u4e14\u53ef\u4ee5\u7528\u8fd9\u4e2a\u7279\u6027\u5bf9\u5b57\u7b26\u8fdb\u884c\u4e00\u4e9b\u6574\u578b\u6570\u636e\u7684\u8fd0\u7b97\u3002", "\u00a0", "(12)\u4ee5\u4e0b\u7a0b\u5e8f\u4e2d\uff0cmin\u51fd\u6570\u7684\u529f\u80fd\u662f\u6c424\u884c5\u5217\u4e8c\u7ef4\u6570\u7ec4\u6bcf\u5217\u5143\u7d20\u7684\u6700\u5c0f\u503c\u3002\u8bf7\u586b\u7a7a\u3002", "Void min(int m\uff0cint n\uff0cint fI)[5]\uff0cint *bt)", "{\u00a0 inti\uff0cj\uff0ck=0\uff1b", "for (j=0;j<n;j++)", "{\u00a0 k=f[0][j]}\uff1b", "for(i=0\uff1bi<m\uff1bi++)", "if(", ")k=f[i][j]\uff1b", "bt[j]=k\uff1b", "}", "}", "main()", "{\u00a0 int a[4][5]\uff0ci\uff0cj\uff0cb[5]\uff1b", "for(i=0\uff1bi<4\uff0ei++)", "for(j=0;0<5\uff0eJ++)", "scanf(\u201d\uff05d\u201d\uff0c&a[i][j])\uff1b", "min(4\uff0c5,a,b)\uff1b", "f\u20190r(j=0;j<5;j++)", "printf(\u201c\uff05d\u201d,b[j])\uff1b", "primf(\u201d\\n\u201d)\uff1b", "}", "\u7b54\u6848:\u301012\u3011k>f[i][j]", "\u6c42\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u6bcf\u5217\u7684\u6700\u5c0f\u503c\u65f6\uff0c\u5176\u65b9\u6cd5\u662f\u5148\u8ba9\u6bcf\u5217\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u540c\u7b2c\u4e8c\u4e2a\u5143\u7d20\u6bd4\u8f83\uff0c\u7136\u540e\u5c06\u8f83\u5c0f\u7684\u503c\u4fdd\u5b58\u5728\u4e34\u65f6\u53d8\u91cfk\u4e2d\uff0c\u6700\u540e\u518d\u5c06k\u4e2d\u7684\u503c\u4e0e\u95ee\u5217\u4e2d\u5269\u4f59\u7684\u5143\u7d20\u8fdb\u884c\u6bd4\u8f83\uff0c\u6bcf\u6b21\u90fd\u662f\u5c06\u8f83\u5c0f\u7684\u503c\u4fdd\u5b58\u5728\u4e34\u65f6\u53d8\u91cfk\u4e2d\u3002\u9773\u5217\u6bd4\u8f83\u540e\u5b8c\u6210\u540e\uff0c\u5176\u6700\u5c0f\u503c\u5c31\u662fk\u7684\u503c\u3002\u7136\u540e\u5c06k\u503c\u8d4b\u7ed9\u4e00\u7ef4\u6570\u7ec4b\u556a\u4e2d\u5bf9\u5e94\u7684\u5355\u5143\u3002\u6700\u540e\u5f97\u5230\u7684\u4e00\u7ef4\u6570\u7ec4b\u556a\u4e2d\u7684\u6240\u6709\u503c\u5c31\u662f\u6240\u8981\u6c42\u7684\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u6bcf\u5217\u7684\u6700\u5c0f\u503c\u3002", "\u00a0", "(13)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "main()", "{\u00a0 int a\uff0cb\uff0cc\uff0cd\uff1b", "clrsc()\uff1b", "scanf(\u201d\uff05o\u201d\uff0c&a)\uff1b", "b=a>>4\uff1a", "c\uff1a\uff5e(\uff5e0<<4)\uff1b", "d=b&c\uff1a", "printf(\u201d\uff05d\uff0c\uff05d\uff3cn\u201d\uff0ca\uff0cd)\uff1b", "}", "\u82e5\u4ece\u952e\u76d8\u4e0a\u8f93\u5165331\uff0c\u5219\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c", "\u3002", "\u7b54\u6848:\u301013\u3011217\uff0c13", "\u8bc4\u6790: c\u8bed\u8a00\u4e2d\u7684\u4f4d\u8fd0\u7b97\u7b26\u67096\u79cd\uff0c\u672c\u7a0b\u5e8f\u6709\u5176\u4e2d4\u79cd\u4f4d\u8fd0\u7b97\u7b26\uff0c\u5206\u522b\u662f\u5de6\u79fb\u3001\u53f3\u79fb\u3001\u53d6\u53cd\u548c\u6309\u4f4d\u4e0e\u8fd0\u7b97\u3002", "\u00a0", "(14)\u4ee5\u4e0b\u7a0b\u5e8f\u8fd0\u884c\u540e\u8f93\u51fa\u7ed3\u679c\u662f", "\u00a0\u3002", "int a=30,b=40\uff1b", "voidfun(int x,inty)", "{\u00a0 int z\uff1b", "z=(x>y)?x\uff1ay\uff1b", "a=z+10\uff1b", "b=z+20\uff1b", "}", "main()", "{", "printf(\u201da=\uff05d\uff0cb=\uff05d\uff3cn\u201d\uff0ca\uff0cb)\uff1b", "fun(a\uff0cb)\uff1b", "printf(\u201ca=\uff05d,b=\uff05d\uff3cn\u201d\uff0ca\uff0cb)\uff1b", "}", "\u7b54\u6848:\u301014\u3011a=30,b=40", "a=50,b=60", "\u8bc4\u6790:\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u662f\u4ece\u5b9a\u4e49\u53d8\u91cf\u7684\u4f4d\u7f6e\u5f00\u59cb\u5230\u672c\u6e90\u6587\u4ef6\u7684\u7ed3\u675f\u3002\u5728\u672c\u9898\u4e2d\uff0c\u53d8\u91cfa\uff0cb\u5c31\u662f\u5c5e\u4e8e\u5168\u5c40\u53d8\u91cf\u3002\u5176\u521d\u503c\u5206\u522b\u4e3aa=30\uff0cb=4O\u3002\u5728\u6ca1\u6709\u5bf9\u4e24\u4e2a\u5168\u5c40\u53d8\u91cf\u4f5c\u4efb\u4f55\u5904\u7406\u524d\uff0c\u5b83\u4eec\u7684\u503c\u4fdd\u6301\u539f\u503c\uff0c\u6240\u4ee5\u7b2c1\u6b21\u8f93\u51faa\uff0cb\u7684\u503c\u5206\u522b\u662f\u521d\u503ca=30,b=40\u3002\u4f46\u5728fun\u51fd\u6570\u4e2da\uff0cb\u7684\u503c\u6539\u53d8\u540e\uff0c\u5176\u503c\u5728\u7ed3\u675ffun\u51fd\u6570\u540e\u4ecd\u7136\u4fdd\u7559\uff0c\u6240\u4ee5\u7b2c2\u6b21\u8f93\u51faa\uff0cb\u7684\u503c\u5206\u522b\u4e3aa=50,b=60\u3002", "\u00a0", "(15)\u4ee5\u4e0b\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f", "\u3002", "#include<string\uff0eh>", "main()", "{", "int i\uff1a", "char a[]\u3002\u201dabcdef\u2019\uff0c*p\uff0c*s\uff1b", "p=a\uff1b", "for(I=O\uff1bi<strlen(a)\uff0f2\uff1bi++)", "{", "a[strlen(a)-i-1]=*p\uff1b", "p++\uff1b", "}", "s=strupr(a)\uff1b", "puts(s)\uff1b", "}", "\u7b54\u6848:\u301015\u3011ABCCBA", "for\u5faa\u73af\u662f\u5c06\u5b57\u7b26\u6570\u7ec4a\u7684\u524d\u534a\u6bb5\u5143\u7d20\u53d6\u51fa\uff0c\u7136\u540e\u6309\u539f\u6765\u76f8\u53cd\u7684\u987a\u5e8f\u8986\u76d6\u5b57\u7b26\u6570\u7ec4\u7684\u540e\u534a\u6bb5\u3002\u5b57\u7b26\u4e32\u51fd\u6570strupr\u7684\u529f\u80fd\u662f\u5c06\u5b57\u7b26\u4e32\u4e2d\u5c0f\u5199\u5b57\u6bcd\u8f6c\u6362\u4e3a\u5927\u5199\u5b57\u6bcd\u3002\u7136\u540e\u7528\u5b57\u7b26\u4e32\u8f93\u51fa\u51fd\u6570puts\u8f93\u51fa\u3002", "\u00a0", "(16)\u4ee5\u4e0b\u7a0b\u5e8f\u8fd0\u884c\u540e\u5176\u8f93\u51fa\u7684\u7ed3\u679c\u662f", "\u3002", "ma(int a)", "{\u00a0 static int y=l\uff0cz=2\uff1b", "y*=a\uff1b", "Z*=a\uff1a", "printf(\u201dy=\uff05d\uff0cz=\uff05d\u201d\uff0cy\uff0cz)\uff1b", "}", "main()", "{", "int i\uff0ca=2\uff1a", "clrsc\u201c)\uff1b", "for(i=0\uff1bi<3\uff1bI++)", "{ printf(\u201d\uff05d\u201d\uff0ci)\uff1b", "ma(a)\uff1b", "printf(\u201d\uff3cn\u201d)\uff1b", "}", "}", "\u7b54\u6848:\u301016\u30110\u00a0 y=2\uff0cz=4", "l\u00a0 y=4\uff0cz=8", "2\u00a0 y=8\uff0cz=16", "\u9759\u6001\u5b58\u50a8\u53d8\u91cf\u7684\u5b9a\u4e49\u65b9\u6cd5\u662f\u5728\u5b9a\u4e49\u53d8\u91cf\u91cc\uff0c\u524d\u9762\u52a0\u5173\u952e\u5b57static\uff0c\u800c\u4e14\u4e00\u6b21\u5141\u8bb8\u5b9a\u4e49\u591a\u4e2a\u9759\u6001\u53d8\u91cf\u3002\u4e00\u65e6\u67d0\u4e2a\u53d8\u91cf\u5728\u51fd\u6570\u4e2d\u88ab\u5b9a\u4e49\u6210\u9759\u6001\u7684\u7c7b\u578b\uff0c\u5728\u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4\uff0c\u6bcf\u6b21\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u5b83\u4e0d\u518d\u91cd\u65b0\u8d4b\u521d\u503c\uff0c\u800c\u662f\u4fdd\u7559\u4e0a\u6b21\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u65f6\u7684\u503c\u3002\uff0e\u5982\u672c\u9898\u4e2d\uff0c\u5728\u7b2c1\u6b21\u8c03\u7528\u51fd\u6570ma()\u7ed3\u675f\u65f6\uff0cy\u3001z\u7684\u503c\u5206\u522b\u662fy=2\uff0cz=4\u3002\u5728\u7b2c2\u6b21\u8c03\u7528ma()\u51fd\u6570\u65f6\uff0c\u9759\u6001\u5b58\u50a8\u53d8\u91cfy\u3001z\u4e0d\u518d\u91cd\u65b0\u88ab\u8d4b\u521d\u503c\uff0c\u800c\u662f\u4fdd\u7559\u4e0a\u6b21\u7ed3\u675f\u65f6\u7684\u503c\u3002", "\u00a0", "(17)\u5df2\u77e5\u6709\u5982\u56fe\u6240\u793a\u7684\u5355\u94fe\u8868\uff0c\u5219\u4ee5\u4e0b\u51fd\u6570\u7684\u529f\u80fd\u662f", "\u3002", "\u00a0", "#include<stdio.h>", "typedef struct node", "{\u00a0 int data;", "struct node *next;", "}Node;", "Node *reverlist(Llist *head)", "{", "Node\u00a0 *p,*q;", "if(head&&head->nex0", "{", "p=head;", "q=p->next;", "p->next=null;", "while(q)", "{", "p=q;", "q=q->next;", "p->next=head;", "head=p;", "}", "}", "return(head);", "\u301017\u3011\u9006\u7f6e\u5355\u94fe\u8868", "\u77e5\u8bc6\u70b9\uff1a\u5355\u94fe\u8868\u7684\u8fd0\u7b97", "\u8be5\u51fd\u6570\u662f\u9996\u5148\u5c06head\u6307\u5411\u7684\u94fe\u8868\u5728\u7b2cl\u548c\u7b2c2\u4e2a\u7ed3\u70b9\u95f4\u65ad\u5f00\u6210\u524d\u540e\u4e24\u4e2a\u94fe\u8868\uff0c\u7528\u6307\u9488head\u6307\u5411\u524d\u9762\u5355\u4e2a\u7ed3\u70b9\u7684\u94fe\u8868\uff0c\u800c\u7528\u6307\u9488q\u6307\u5411\u540e\u9762\u65ad\u5f00\u90e8\u5206\u7684\u94fe\u8868\uff0c\u6bcf\u6b21\u5c06\u6307\u9488q\u6307\u5411\u94fe\u8868\u7684\u7b2c1\u4e2a\u7ed3\u70b9\u53d6\u51fa\uff0c\u7136\u540e\u63d2\u5165\u5230head\u6307\u9488\u6307\u5411\u94fe\u8868\u7684\u6700\u524d\u9762\uff0c\u76f4\u5230q\u6307\u9488\u6307\u5411\u94fe\u8868\u7684\u7ed3\u70b9\u5168\u90e8\u53d6\u51fa\uff0c\u5e76\u63d2\u5165\u5230head\u6307\u9488\u6307\u5411\u7684\u94fe\u8868\u4e2d\uff0c\u6700\u540e\u6307\u9488head\u6307\u5411\u7684\u94fe\u8868\u5c31\u662f\u539f\u6765\u94fe\u8868\u7684\u9006\u7f6e\u94fe\u8868\u3002", "\u00a0", "(18)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u529f\u80fd\u662f\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32sl\u4e2d\u7684\u5185\u5bb9\u590d\u5236\u5230\u5b57\u7b26\u4e32s2\u4e2d\uff0c\u8bf7\u586b\u7a7a\u3002", "void copy_string(char *pl,char\u00a0 *p2)", "{", "for ( ;*p1 !=\u2019\\0\u2032 ;p1 ++,p2++)", ";", ";", ";", "}", "main( )", "{", "char * s1 =\u201dhello!\u201d;", "char *s2=\u201dGood morning!\u201d;", "prinff(\u201c\\nstring sl=%s\\nstring s2=%s\\n\u201d,sl,s2);", "copy_string(", "\u00a0);", "printf(\u201c\\nstring sl=%s\\nstring s2=%s\\n\u201d,sl,s2);", "\u301018\u3011*p2=*pl", "\u301019\u3011*p2=\u2018\uff3c0\u2019", "\u301020\u3011sl,s2", "\u5f62\u5f0f\u53c2\u6570\u53ef\u4ee5\u6709\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5176\u4e2d\u672c\u9898\u4e2d\u7684\u5b57\u7b26\u6307\u9488\u4e5f\u662f\u4e00\u79cd\u5f62\u5f0fa\u5728\u672c\u9898\u4e2d\uff0cpl,p2\u90fd\u662f\u5b57\u7b26\u6307\u9488\uff0c\u5728\u8c03\u7528copy_string\u51fd\u6570\u65f6\uff0c\u5c06\u6570\u7ec4s1\u7684\u9996\u5730\u5740\u4f20\u7ed9p1\uff0c\u628a\u6570\u7ec4s2\u7684\u9996\u5730\u5740\u4f20\u7ed9p2\u3002\u5728\u51fd\u6570copy_string\u4e2d\u7684for\u5faa\u73af\u4e2d\uff0c\u6bcf\u6b21\u5c06*pl\u8d4b\u7ed9*p2\uff0c\u7b2c1\u6b21\u5c31\u662f\u5c06s1\u6570\u7ec4\u7684\u7b2c1\u4e2a\u5b57\u7b26\u8d4b\u7ed9s2\u6570\u7ec4\u3002\u5728\u6267\u884cpl++\u548cp2++\u540e\uff0cp1\u548cp2\u5c31\u5206\u522b\u6307\u5411s1[1]\u548cs2[1]\u3002\u7136\u540e\u4f9d\u6b64\u7c7b\u63a8\u3002\u5728\u590d\u5236\u6240\u6709\u5b57\u7b26\u540e\uff0c\u8fd8\u8981\u8bb0\u5f97\u5728\u6700\u540e\u5c06\u7ed3\u675f\u7b26\u2018\uff3c0\u2019\u8d4b\u7ed9p2\u3002"], "title": "C\u8bed\u8a00\u7b14\u8bd5\u9898\u5e26\u7b54\u6848\uff08\u4e5d\uff09"},
{"contents": ["\u4e00\u3001\u9009\u62e9\u9898((1)\uff5e(10)\u6bcf\u5c0f\u98982\u5206\uff0c(11)\uff5e(50)\u6bcf\u5c0f\u98981\u5206\uff0c\u517160\u5206)", "\u4e0b\u5217\u5404\u9898A)\u3001B)\u3001C)\u3001D)\u56db\u4e2a\u9009\u9879\u4e2d\uff0c\u53ea\u6709\u4e00\u4e2a\u9009\u9879\u662f\u6b63\u786e\u7684\uff0c\u8bf7\u5c06\u6b63\u786e\u9009\u9879\u6d82\u5199\u00a0\u00a0\u00a0 \u5728\u7b54\u9898\u5361\u76f8\u5e94\u4f4d\u7f6e\u4e0a\uff0c\u7b54\u5728\u8bd5\u5377\u4e0a\u4e0d\u5f97\u5206\u3002", "(1)\u7b97\u6cd5\u4e00\u822c\u90fd\u53ef\u4ee5\u7528________\u63a7\u5236\u7ed3\u6784\u7ec4\u5408\u800c\u6210\u3002", "A)\u5faa\u73af\u3001\u5206\u652f\u3001\u9012\u5f52\u00a0\u00a0\u00a0 B)\u987a\u5e8f\u3001\u5faa\u73af\u3001\u5d4c\u5957", "C)\u5faa\u73af\u3001\u9012\u5f52\u3001\u9009\u62e9\u00a0\u00a0\u00a0 D)\u987a\u5e8f\u3001\u9009\u62e9\u3001\u5faa\u73af", "D", "\u7b97\u6cd5\u7684\u63a7\u5236\u7ed3\u6784\u7ed9\u51fa\u4e86\u7b97\u6cd5\u7684\u57fa\u672c\u6846\u67b6\uff0c\u4e0d\u4ec5\u51b3\u5b9a\u4e86\u7b97\u6cd5\u4e2d\u5404\u64cd\u4f5c\u7684\u6267\u884c\u987a\u5e8f\uff0c\u4e5f\u76f4\u63a5\u53cd\u6620\u4e86\u7b97\u6cd5\u7684\u8bbe\u8ba1\u662f\u5426\u7b26\u5408\u7ed3\u6784\u5316\u539f\u5219\u3002\u4e00\u4e2a\u7b97\u6cd5\u4e00\u822c\u90fd\u53ef\u4ee5\u7528\u987a\u5e8f\u3001\u9009\u62e9\u3001\u5faa\u73af\u4e09\u79cd\u57fa\u672c\u63a7\u5236\u7ed3\u6784\u7ec4\u5408\u800c\u6210\u3002", "\u00a0", "(2)\u6570\u636e\u7684\u5b58\u50a8\u7ed3\u6784\u662f\u6307________\u3002", "A)\u6570\u636e\u6240\u5360\u7684\u5b58\u50a8\u7a7a\u95f4\u91cf", "B)\u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u5728\u8ba1\u7b97\u673a\u4e2d\u7684\u8868\u793a", "C)\u6570\u636e\u5728\u8ba1\u7b97\u673a\u4e2d\u7684\u987a\u5e8f\u5b58\u50a8\u65b9\u5f0f", "D)\u5b58\u50a8\u5728\u5916\u5b58\u4e2d\u7684\u6570\u636e", "B", "\u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u5728\u8ba1\u7b97\u673a\u5b58\u50a8\u7a7a\u95f4\u4e2d\u7684\u5b58\u653e\u5f62\u5f0f\u79f0\u4e3a\u6570\u636e\u7684\u5b58\u50a8\u7ed3\u6784\u3002", "\u00a0", "(3)\u8bbe\u6709\u4e0b\u5217\u4e8c\u53c9\u6811\uff1a", "\u00a0", "\u5bf9\u6b64\u4e8c\u53c9\u6811\u4e2d\u5e8f\u904d\u5386\u7684\u7ed3\u679c\u4e3a________\u3002", "A)ABCDEF\u00a0 \u00a0\u00a0\u00a0B)DBEAFC\u00a0\u00a0\u00a0 C)ABDECF \u00a0\u00a0\u00a0D)DEBFCA", "B", "\u4e2d\u5e8f\u904d\u5386\u662f\u6307\u9996\u5148\u904d\u5386\u5de6\u5b50\u6811\uff0c\u7136\u540e\u8bbf\u95ee\u6839\u7ed3\u70b9\uff0c\u6700\u540e\u904d\u5386\u53f3\u5b50\u6811\uff1b\u5e76\u4e14\u5728\u904d\u5386\u5de6\u3001\u53f3\u5b50\u6811\u65f6\uff0c\u4ecd\u7136\u5148\u904d\u5386\u5de6\u5b50\u6811\uff0c\u7136\u540e\u8bbf\u95ee\u6839\u7ed3\u70b9\uff0c\u6700\u540e\u904d\u5386\u53f3\u5b50\u6811\u7684\u4e00\u79cd\u4e8c\u53c9\u6811\u904d\u5386\u7b97\u6cd5\u3002", "\u00a0", "(4)\u5728\u9762\u5411\u5bf9\u8c61\u65b9\u6cd5\u4e2d\uff0c\u4e00\u4e2a\u5bf9\u8c61\u8bf7\u6c42\u53e6\u4e00\u5bf9\u8c61\u4e3a\u5176\u670d\u52a1\u7684\u65b9\u5f0f\u662f\u901a\u8fc7\u53d1\u9001________\u3002", "A)\u8c03\u7528\u8bed\u53e5\u00a0 \u00a0\u00a0B)\u547d\u4ee4\u00a0\u00a0\u00a0 C)\u53e3\u4ee4\u00a0\u00a0\u00a0 D)\u6d88\u606f", "D", "\u9762\u5411\u5bf9\u8c61\u7684\u4e16\u754c\u662f\u901a\u8fc7\u5bf9\u8c61\u4e0e\u5bf9\u8c61\u95f4\u5f7c\u6b64\u7684\u76f8\u4e92\u5408\u4f5c\u6765\u63a8\u52a8\u7684\uff0c\u5bf9\u8c61\u95f4\u7684\u8fd9\u79cd\u76f8\u4e92\u5408\u4f5c\u9700\u8981\u4e00\u4e2a\u673a\u5236\u534f\u52a9\u8fdb\u884c\uff0c\u8fd9\u6837\u7684\u673a\u5236\u79f0\u4e3a\u6d88\u606f\u3002\u6d88\u606f\u662f\u4e00\u4e2a\u5b9e\u4f8b\u4e0e\u53e6\u4e00\u4e2a\u5b9e\u4f8b\u4e4b\u95f4\u4f20\u9012\u7684\u4fe1\u606f\uff0c\u5b83\u8bf7\u6c42\u5bf9\u8c61\u6267\u884c\u67d0\u4e00\u5904\u7406\u6216\u56de\u7b54\u67d0\u4e00\u8981\u6c42\u7684\u4fe1\u606f\uff0c\u5b83\u7edf\u4e00\u4e86\u6570\u636e\u6d41\u548c\u63a7\u5236\u6d41\u3002", "\u00a0", "(5)\u68c0\u67e5\u8f6f\u4ef6\u4ea7\u54c1\u662f\u5426\u7b26\u5408\u9700\u6c42\u5b9a\u4e49\u7684\u8fc7\u7a0b\u79f0\u4e3a________\u3002", "A)\u786e\u8ba4\u6d4b\u8bd5\u00a0 \u00a0\u00a0\u00a0B)\u96c6\u6210\u6d4b\u8bd5\u00a0\u00a0\u00a0 C)\u9a8c\u8bc1\u6d4b\u8bd5\u00a0\u00a0\u00a0 D)\u9a8c\u6536\u6d4b\u8bd5", "A", "\u786e\u8ba4\u6d4b\u8bd5\u7684\u4efb\u52a1\u662f\u9a8c\u8bc1\u8f6f\u4ef6\u7684\u529f\u80fd\u548c\u6027\u80fd\u53ca\u5176\u4ed6\u7279\u6027\u662f\u5426\u6ee1\u8db3\u4e86\u9700\u6c42\u89c4\u683c\u8bf4\u660e\u4e2d\u7684\u786e\u5b9a\u7684\u5404\u79cd\u9700\u6c42\uff0c\u4ee5\u53ca\u8f6f\u4ef6\u914d\u7f6e\u662f\u5426\u5b8c\u5168\u3001\u6b63\u786e\u3002", "\u00a0", "(6)\u4e0b\u5217\u5de5\u5177\u4e2d\u4e3a\u9700\u6c42\u5206\u6790\u5e38\u7528\u5de5\u5177\u7684\u662f________\u3002", "A)PAD\u00a0\u00a0\u00a0 B)PFD\u00a0\u00a0\u00a0 C)N-S \u00a0\u00a0\u00a0\u00a0D)DFD", "D", "\u5e38\u89c1\u7684\u9700\u6c42\u5206\u6790\u65b9\u6cd5\u6709\uff1a\u7ed3\u6784\u5316\u5206\u6790\u65b9\u6cd5\u548c\u9762\u5411\u5bf9\u8c61\u7684\u5206\u6790\u65b9\u6cd5\u3002\u7ed3\u6784\u5316\u5206\u6790\u7684\u5e38\u7528\u5de5\u5177\u6709\uff1a\u6570\u636e\u6d41\u56fe(DFD)\u3001\u6570\u636e\u5b57\u5178(DD)\u3001\u5224\u5b9a\u6811\u548c\u5224\u5b9a\u8868\u7b49\u3002", "\u00a0", "(7)\u4e0b\u9762\u4e0d\u5c5e\u4e8e\u8f6f\u4ef6\u8bbe\u8ba1\u539f\u5219\u7684\u662f________\u3002", "A)\u62bd\u8c61\u00a0\u00a0\u00a0 B)\u6a21\u5757\u5316\u00a0\u00a0\u00a0 C)\u81ea\u5e95\u5411\u4e0a\u00a0\u00a0\u00a0 D)\u4fe1\u606f\u9690\u853d", "C", "\u5728\u8f6f\u4ef6\u8bbe\u8ba1\u8fc7\u7a0b\u4e2d\uff0c\u5fc5\u987b\u9075\u5faa\u8f6f\u4ef6\u5de5\u7a0b\u7684\u57fa\u672c\u539f\u5219\uff1a\u8fd9\u4e9b\u539f\u5219\u5305\u62ec\u62bd\u8c61\u3001\u4fe1\u606f\u9690\u853d\u3001\u6a21\u5757\u5316\u3001\u5c40\u90e8\u5316\u3001\u786e\u5b9a\u6027\u3001\u4e00\u81f4\u6027\u3001\u5b8c\u5907\u6027\u548c\u53ef\u9760\u6027\u3002", "\u00a0", "(8)\u7d22\u5f15\u5c5e\u4e8e_________\u3002", "A)\u6a21\u5f0f\u00a0\u00a0\u00a0 B)\u5185\u6a21\u5f0f\u00a0\u00a0\u00a0 C)\u5916\u6a21\u5f0f\u00a0\u00a0\u00a0 D)\u6982\u5ff5\u6a21\u5f0f", "B", "\u5185\u6a21\u5f0f(Internal Schema)\u53c8\u79f0\u7269\u7406\u6a21\u5f0f(Physical Schema)\uff0c\u5b83\u7ed9\u51fa\u4e86\u6570\u636e\u5e93\u7269\u7406\u5b58\u50a8\u7ed3\u6784\u4e0e\u7269\u7406\u5b58\u53d6\u65b9\u6cd5\uff0c\u5982\u6570\u636e\u5b58\u50a8\u7684\u6587\u4ef6\u7ed3\u6784\u3001\u7d22\u5f15\u3001\u96c6\u7c07\u53cahash\u7b49\u5b58\u53d6\u65b9\u5f0f\u4e0e\u5b58\u53d6\u8def\u5f84\u3002", "\u00a0", "(9)\u5728\u5173\u7cfb\u6570\u636e\u5e93\u4e2d\uff0c\u7528\u6765\u8868\u793a\u5b9e\u4f53\u4e4b\u95f4\u8054\u7cfb\u7684\u662f_________\u3002", "A)\u6811\u7ed3\u6784\u00a0\u00a0\u00a0 B)\u7f51\u7ed3\u6784\u00a0\u00a0\u00a0 C)\u7ebf\u6027\u8868\u00a0\u00a0\u00a0 D)\u4e8c\u7ef4\u8868", "D", "\u5728\u5173\u7cfb\u6570\u636e\u5e93\u4e2d\uff0c\u7528\u4e8c\u7ef4\u8868\u6765\u8868\u793a\u5b9e\u4f53\u4e4b\u95f4\u8054\u7cfb\u3002", "\u00a0", "(10)\u5c06E-R\u56fe\u8f6c\u6362\u5230\u5173\u7cfb\u6a21\u5f0f\u65f6\uff0c\u5b9e\u4f53\u4e0e\u8054\u7cfb\u90fd\u53ef\u4ee5\u8868\u793a\u6210_________\u3002", "A)\u5c5e\u6027\u00a0\u00a0\u00a0 B)\u5173\u7cfb\u00a0\u00a0\u00a0 C)\u952e\u00a0\u00a0\u00a0 D)\u57df", "B", "\u5173\u7cfb\u662f\u7531\u82e5\u5e72\u4e2a\u4e0d\u540c\u7684\u5143\u7ec4\u6240\u7ec4\u6210\uff0c\u56e0\u6b64\u5173\u7cfb\u53ef\u89c6\u4e3a\u5143\u7ec4\u7684\u96c6\u5408\uff0c\u5c06E-R\u56fe\u8f6c\u6362\u5230\u5173\u7cfb\u6a21\u5f0f\u65f6\uff0c\u5b9e\u4f53\u4e0e\u8054\u7cfb\u90fd\u53ef\u4ee5\u8868\u793a\u6210\u5173\u7cfb\u3002", "\u00a0", "(11)\u6709\u5982\u4e0b\u7a0b\u5e8f", "main()", "{", "char ch[2][5]={\u201c6937\u2033,\u201d8254\u2033}\uff0c*p[2]\uff1b", "int I,j\uff0cs=0\uff1b", "for(I=O\uff1bi<2\uff1bi++)p[i]=ch[I]\uff1b", "for(I=O\uff1bi<2\uff1bi++)", "for(j=0\uff1bp[i][j]>\u2019\uff3c0\u2019\uff1bj+=2)", "s=10*s+(p[i][j]\uff0e\u20190\u2019)\uff1b", "printf(\u201d\uff05d\uff3cn\u201d\uff0cs)\uff1b", "}", "\u8be5\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "A)69825\u00a0\u00a0\u00a0 B)63825\u00a0\u00a0\u00a0 C)6385\u00a0\u00a0\u00a0 D)693825", "C", "\u672c\u9898\u201cch[2][5]={\u201c6937\u2033,\u201d8254\u2033}\u201d\u7528\u4e8e2\u884c5\u5217\u7684\u4e8c\u7ef4\u6570\u7ec4\u521d\u59cb\u5316\uff0cch[O][0]-ch[O][4]\u7684\u503c\u5206\u522b\u4e3a\uff1a6\uff0c9\uff0c3\uff0c7\uff0c\uff3c0\uff1bch[1][0]-ch[1][4]\u7684\u503c\u5206\u522b\u4e3a\uff1a8\uff0c2\uff0c5\uff0c4\uff0c\uff3c0\uff1b\u7b2c\u4e00\u4e2afor\u5faa\u73af\u7528\u4e8e\u5c06\u6570\u7ec4\u6307\u9488\u5206\u522b\u6307\u5411\u4e8c\u7ed9\u6570\u7ec4\u7684\u7b2c\u4e00\u884c\u548c\u7b2c\u4e8c\u884c\uff1b\u7b2c\u4e8c\u4e2afor\u5d4c\u5957\u5faa\u73af\u7528\u4e8e\u53d6\u51fap[O][0]\uff0cp[O][2]\uff0cp[1][0]\uff0cp[1][2]\u56db\u4e2a\u5b58\u50a8\u5355\u5143\u7684\u6570\u7ec4\u6210\u4e00\u4e2a\u56db\u4f4d\u6570\u8fdb\u884c\u8f93\u51fa\u3002", "\u00a0", "(12)\u4ee5\u4e0b\u53d9\u8ff0\u4e0d\u6b63\u786e\u7684\u662f_________\u3002", "A)\u5206\u53f7\u662fC\u8bed\u8a00\u7684\u5fc5\u8981\u7ec4\u6210\u90e8\u5206", "B)C\u7a0b\u5e8f\u7684\u6ce8\u91ca\u53ef\u4ee5\u5199\u5728\u53e5\u7684\u540e\u9762", "C)\u51fd\u6570\u662fC\u7a0b\u5e8f\u7684\u57fa\u672c\u5355\u4f4d", "D)\u4e3b\u51fd\u6570\u7684\u540d\u5b57\u4e0d\u4e00\u5b9a\u7528main\u8868\u793a", "D", "c\u8bed\u8a00\u7684\u7a0b\u5e8f\u662f\u7531\u4e3b\u51fd\u6570main()\u5f00\u59cb\u8fd0\u884c\uff0c\u7531\u4e3b\u51fd\u6570\u6765\u8c03\u7528\u5176\u4ed6\u51fd\u6570\uff0c\u6240\u4ee5D\u662f\u9519\u8bef\u7684\u3002", "\u00a0", "(13)\u82e5\u53d8\u91cf\u5df2\u6b63\u786e\u5b9a\u4e49\u5e76\u8d4b\u503c\uff0c\u4e0b\u9762\u7b26\u5408c\u8bed\u8a00\u7684\u8868\u8fbe\u5f0f\u662f_________\u3002", "A)a\uff1a_b+1\u00a0\u00a0\u00a0 B)a=b=c+2\u00a0\u00a0\u00a0 C)int 18\uff0e5\uff053\u00a0\u00a0\u00a0 D)a=a+7=c+b", "B", "\u9009\u9879A\u548cc\u4e00\u671b\u800c\u77e5\u5176\u9519\uff1a\u5bf9\u4e8e\u8868\u8fbe\u5f0fa=a+7=c+b(\u7b54\u6848D)\uff0c\u662f\u5148\u6267\u884c\u8d4b\u503c\u8868\u8fbe\u5f0fa+7=c+b\uff0c\u518d\u628a\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\u8d4b\u7ed9a\uff0c\u663e\u7136\uff0c\u8868\u8fbe\u5f0fa+7=c+b\u975e\u6cd5\uff0c\u56e0\u4e3a\u8d4b\u503c\u8868\u8fbe\u5f0f\u7684\u5de6\u4fa7\u4e0d\u80fd\u4e3a\u5e38\u91cf\u6216\u8868\u8fbe\u5f0f\u3002", "\u00a0", "(14)C\u8bed\u8a00\u8fd0\u7b97\u5bf9\u8c61\u5fc5\u987b\u662f\u6574\u578b\u7684\u8fd0\u7b97\u7b26\u662f_________\u3002", "A)\uff05=\u00a0\u00a0\u00a0 B)\uff0f\u00a0\u00a0\u00a0 C)=\u00a0\u00a0\u00a0 D)<\uff1a", "A", "\u5728C\u8bed\u8a00\u4e2d\uff0c\u6a21\u8fd0\u7b97(\u5373\u53d6\u4f59\u8fd0\u7b97\uff05)\u7684\u8fd0\u7b97\u5bf9\u8c61\u5fc5\u987b\u662f\u6574\u578b\u6570\u636e(\u5e38\u91cf\u3001\u53d8\u91cf\u6216\u8868\u8fbe\u5f0f)\u3002", "\u00a0", "(15)\u4e0b\u9762\u4e00\u7ec4\u4e2d\u90fd\u662fC\u8bed\u8a00\u5173\u952e\u5b57\u7684\u662f_________\u3002", "A)double Int for\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0B)main while goto", "C)volatile break static\u00a0\u00a0\u00a0 D)malloc sizeof new", "C", "c\u8bed\u8a00\u4e2d\u7684\u5173\u952e\u5b57\u670932\u4e2a\u5173\u952e\u5b57(\u53c2\u89c1c\u8bed\u8a00\u6559\u7a0b)\uff0c\u672c\u9898\u4e2d\u53ea\u6709C\u7b26\u5408\u9898\u610f\u3002", "\u00a0", "(16)\u82e5\u5df2\u5b9a\u4e49x\u548cy\u4e3adouble\u7c7b\u578b\uff0c\u5219\u8868\u8fbe\u5f0fx=1,y=x+3\uff0f2\u7684\u503c\u662f_________\u3002", "A)l\u00a0\u00a0\u00a0 B)2\u00a0\u00a0\u00a0 C)2\uff0e0\u00a0\u00a0\u00a0 D)2\uff0e5", "C", "\u8fd9\u662f\u4e00\u4e2a\u9017\u53f7\u8868\u8fbe\u5f0f\uff0c\u5b83\u7684\u503c\u5e94\u4e3a\u8868\u8fbe\u5f0fy=x+3\uff0f2\u7684\u503c\uff0c\u800c\u524d\u4e00\u4e2a\u8868\u8fbe\u5f0f\u5df2\u7ed9x\u8d4b\u503cl\uff0c\u5728\u6ca1\u6709\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\u7684t\u7559\u4e0b\uff0c3\uff0f2\u7684\u503c\u4e3a1\uff0c\u6240\u4ee5x+3\uff0f2\u7684\u503c\u5e94\u4e3a2\uff0e0\u3002", "\u00a0", "(17)\u6267\u884c\u8bed\u53e5\uff1afor(\u3001i=1\uff1bi++<4\uff1b)\uff1b\u540e\u53d8\u91cfi\u7684\u503c\u662f_________\u3002", "A)3\u00a0\u00a0\u00a0 B)4\u00a0\u00a0\u00a0 C)5\u00a0\u00a0\u00a0 D)\u4e0d\u5b9a", "C", "for\u8bed\u53e5\u7684\u4e00\u822c\u5f62\u5f0f\u4e3a\uff1afor(\u8868\u8fbe\u5f0f1\uff1b\u8868\u8fbe\u5f0f2\uff1b\u8868\u8fbe\u5f0f3)\u8bed\u53e5\uff0c\u5faa\u73af\u7ed3\u675f\u7684\u6761\u4ef6\u662fi++<4\uff0c\u6240\u4ee5\u5f53i++_4\u65f6\uff0c\u5faa\u73af\u7ed3\u675f\uff0c\u6b64\u65f6\u53d8\u91cfi\u7684\u503c\u4e3a5\u3002", "\u00a0", "(18)\u82e5\u53d8\u91cfa\u3001i\u5df2\u6b63\u786e\u5b9a\u4e49\uff0c\u4e14i\u5df2\u6b63\u786e\u8d4b\u503c\uff0c\u5408\u6cd5\u7684\u8bed\u53e5\u662f_________\u3002", "A)a==l\u00a0\u00a0\u00a0 B)++i\uff1b\u00a0\u00a0\u00a0 C)a=a++=5\uff1b\u00a0\u00a0\u00a0 D)a=int(i)\uff1b", "B", "\u9009\u9879D\u663e\u7136\u662f\u9519\u7684\uff0c\u800c\u9009\u9879A\u6ca1\u6709\u5206\u53f7\u7ed3\u675f\uff0c\u4e0d\u662fc\u8bed\u53e5\uff1ba++=5\u8fdd\u53cd\u4e86\u8d4b\u503c\u8868\u8fbe\u5f0f\u5de6\u4fa7\u5fc5\u987b\u4e3a\u4e00\u4e2a\u53d8\u91cf(\u4e0d\u80fd\u662f\u5e38\u91cf\u6216\u8868\u8fbe\u5f0f)\u7684\u89c4\u5b9a\uff0e", "\u00a0", "(19)\u6709\u5982\u4e0b\u7a0b\u5e8f", "main()", "{\u00a0 int\u00a0 y=3\uff0cx=3\uff0cz=l\uff1b", "printf(\u201d\uff05d \uff05d\\n\u201d\uff0c(++x\uff0cy++)\uff0cz+2)\uff1b", "}", "\u8fd0\u884c\u8be5\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "A)3\u00a0 4\u00a0\u00a0\u00a0 B)4\u00a02\u00a0\u00a0\u00a0 C)4\u00a0 3\u00a0\u00a0\u00a0 D)3\u00a0 3", "D", "\u9017\u53f7\u8868\u8fbe\u5f0f(++X\uff0cy++)\u7684\u503c\u5e94\u8be5\u662fy++\u7684\u503c\uff0c\u7531\u4e8ey++\u662f\u5148\u5f15\u7528\u540e\u81ea\u589e\uff0c\u6240\u4ee5y++\u7684\u503c\u662f3\u3002", "\u00a0", "(20)\u8fd0\u884c\u4ee5\u4e0b\u7a0b\u5e8f\u540e\uff0c\u5982\u679c\u4ece\u952e\u76d8\u4e0a\u8f93\u516565 14<\u56de\u8f66>\uff0c\u5219\u8f93\u51fa\u7ed3\u679c\u4e3a________\u3002", "main()", "{", "int m\uff0cn\uff1b", "printf(\u201dEnter m\uff0cn\uff1a\u201d)\uff1b", "scanf(\u201d\uff05d\uff05dt\uff0e\uff0c&m\uff0c&n)\uff1b", "while(mI-n)", "{", "while(m>n)re-=n,", "while(n>m)n-=m\uff1b", "}", "printf(\u201dm=\uff05d\uff3cn\u201d\uff0cm)\uff1b", "}", "A)m=3\u00a0\u00a0\u00a0 B)m=2\u00a0\u00a0\u00a0 C)m=l\u00a0\u00a0\u00a0 D)m=O", "C", "\u5206\u6790\u7a0b\u5e8f\u53ef\u77e5\uff0c\u8be5\u7a0b\u5e8f\u5b9e\u73b0\u7684\u529f\u80fd\u662f\u5bf9\u6570m,n\u6c42\u5176\u6700\u5927\u516c\u7ea6\u6570\u3002\u5728\u672c\u9898\u4e2dm\u4e0en\u7684\u503c\u5206\u522b\u4e3a65\u4e0e14\uff0c\u5176\u6700\u5927\u516c\u7ea6\u6570\u4e3a1\uff0c\u6545\u5176\u8f93\u51fa\u7ed3\u679c\u4e3am=l\u3002", "\u00a0", "(21)\u80fd\u6b63\u786e\u8868\u793a\u903b\u8f91\u5173\u7cfb\uff1a\u201d\u201da\u226510\u6216a\u22640\u201d\u201d\u7684C\u8bed\u8a00\u8868\u8fbe\u5f0f\u662f________\u3002", "A)a>=10 or a<=O\u00a0\u00a0\u00a0 B)a>=0 I a<=10", "C)a>=10&&a<=0\u00a0\u00a0\u00a0 \u00a0\u00a0D)a>=10 ll a<=10", "D", "c\u8bed\u8a00\u4e2d\u7684\u201c\u6216\u201d\u5173\u7cfb\u7528\u201c\u2016\u201d\u8868\u793a\uff0c\u5176\u5b83\u76f8\u5173\u903b\u8f91\u8fd0\u7b97\u7b26\u201c\u4e0e\u201d\u7528\u201c&&\u201d\u8868\u793a\uff1b\u8fd0\u7b97\u7b26\u201c\u975e\u201d\u7528\u201c!\u201d\u6765\u8868\u793a\u3002", "\u00a0", "(22)\u5df2\u7ecf\u5b9a\u4e49ch\u4e3a\u5b57\u7b26\u578b\u53d8\u91cf\uff0c\u4ee5\u4e0b\u8d4b\u503c\u8868\u8fbe\u5f0f\u4e2d\u9519\u8bef\u7684\u662f________\u3002", "A)ch=\u2019\uff3c\u2019\u00a0\u00a0 B)ch=62+3\u00a0\u00a0\u00a0 C)ch=NULL\u00a0\u00a0\u00a0 D)ch=\u2019\uff3cxaa\u2019", "A", "\u53cd\u659c\u6760\u5b57\u7b26\u201c\uff3c\u201d\u8d4b\u7ed9\u5b57\u7b26\uff0c\u5e94\u8be5\u5199\u6210ch=\u2018\\\\\u2019\uff0c\u6240\u4ee5A\u662f\u9519\u8bef\u7684\u3002", "\u00a0", "(23)\u6709\u5982\u4e0b\u7a0b\u5e8f", "main()", "{\u00a0 int\u00a0 x=l\uff0ca=0\uff0cb=0\uff1b", "switch(x){", "case 0\uff1ab++\uff1a", "case 1\uff1aa++\uff1a", "case 2\uff1aa++\uff1bb++\uff1b", "}", "printf(\u201da=\uff05d\uff0cb\u3002\uff05d\uff3cn\u201d\uff0ca\uff0cb)\uff1b", ")", "\u8be5\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f__________\u3002", "A)a\uff1a2\uff0cb=1\u00a0\u00a0\u00a0 B)a=l\uff0cb=1 \u00a0\u00a0\u00a0C)a=l\uff0cb\uff1aO\u00a0\u00a0\u00a0 D)a=2\uff0cb=2", "A", "\u8bc4\u6790:\u5728\u8fd9\u4e2aswitch\u8bed\u53e5\u4e2d\uff0c\u56e0\u4e3ax\u7684\u503c\u4e3a1\uff0c\u6240\u4ee5\u6267\u884ccase 1\uff1a\u540e\u9762\u7684a++\uff0c\u8fd9\u6837a=1\u3002\u4f46\u53c8\u7531\u4e8e\u5176\u4e0b\u6ca1\u6709break\u8bed\u53e5\uff0c\u6240\u4ee5\u5176\u540e\u9762\u7684\u8bed\u53e5\u201ca++\uff1bb++\u201d\u4e5f\u5c06\u88ab\u6267\u884c\uff0c\u8fd9\u6837\u4e00\u6765\uff0ca=2\uff0cb=1\u3002", "\u00a0", "(24)\u6709\u5982\u4e0b\u7a0b\u5e8f", "main()", "{\u00a0\u00a0 float x=2\uff0e0,y\uff1b", "if(x<O\uff0eO)y=0\uff0e0\uff1b", "else if(x<lO\uff0eO)y=1\uff0eO\uff0fx\uff1b", "else y=1\uff0eO\uff1b", "printf(\uff05f\uff3cn\u201d\uff0cy)\uff1b", "}", "\u8be5\u7a0b\u5e8f\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "A)0\uff0e000000\u00a0 \u00a0\u00a0B)0\uff0e250000\u00a0\u00a0\u00a0 C)0\uff0e500000\u00a0\u00a0\u00a0 D)1\uff0e000000", "C", "\u672c\u9898\u8003\u67e5\u7684\u662fif\uff0e\uff0eelse\u8bed\u53e5\u7684\u4f7f\u7528\u3002x=2\uff0e0\uff0c\u7b26\u5408\u7b2c\u4e8c\u4e2aIF\u8bed\u53e5\u7684\u6761\u4ef6x<lO\uff0eO\uff0c\u6240\u4ee5\u6267\u884cy=1\uff0e0\uff0fx\u8bed\u53e5\uff0c\u5373y=1\uff0e0\uff0f2\uff0e0=0\uff0e500000\u3002", "\u00a0", "(25)\u6709\u4ee5\u4e0b\u51fd\u6570\u5b9a\u4e49\uff1a", "void fun(int n,double x){\u2026\u2026}", "\u82e5\u4ee5\u4e0b\u9009\u9879\u4e2d\u7684\u53d8\u91cf\u90fd\u5df2\u6b63\u786e\u5b9a\u4e49\u5e76\u8d4b\u503c\uff0c\u5219\u5bf9\u51fd\u6570fun\u6b63\u786e\u8c03\u7528\u8bed\u53e5\u662f_______\u3002", "A)fun(int y,double m)\uff1b\u00a0\u00a0\u00a0 B)k=fun(10,12\uff0e5)\uff1b", "C)fun(x,n)\uff1b\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)void fun(n\uff0cx)\uff1b", "C", "\u51fd\u6570\u8c03\u7528\u7684\u4e00\u822c\u5f62\u5f0f\u4e3a\uff1a\u51fd\u6570\u540d(\u5b9e\u53c2\u8868\u5217)\uff1b\uff0c\u5b9e\u53c2\u4e0e\u5f62\u53c2\u7684\u4e2a\u6570\u5e94\u76f8\u7b49\uff0c\u7c7b\u578b\u5e94\u4e00\u81f4\uff0c\u5728\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u4e0d\u8981\u6307\u5b9a\u5176\u8fd4\u56de\u7c7b\u578b\uff0c\u5bf9\u4e8e\u8fd4\u56de\u7c7b\u578b\u4e3avoid\u7684\u51fd\u6570\uff0c\u4e0d\u80fd\u4f5c\u4e3a\u8d4b\u503c\u8868\u8fbe\u5f0f\u7684\u7ec4\u6210\u90e8\u5206\uff0c\u6240\u4ee5\u9009C\u3002", "\u00a0", "(26)\u6709\u5982\u4e0b\u7a0b\u5e8f", "main()", "{\u00a0 int i,sum\uff1b", "for(i=l\uff1bi<=3\uff1bsum++)\u00a0 sum+=i\uff1b", "printf(\u201d\uff05d\uff3cn\u201d,sum)\uff1b", "}", "\u8be5\u7a0b\u5e8f\u7684\u6267\u884c\u7ed3\u679c\u662f_________\u3002", "A)6\u00a0\u00a0\u00a0\u00a0\u00a0 B)3\u00a0\u00a0\u00a0 \u00a0\u00a0C)\u6b7b\u5faa\u73af\u00a0\u00a0 \u00a0\u00a0\u00a0D)O", "C", "\u5728\u5faa\u73af\u8fc7\u7a0b\u4e2d\uff0ci\u7684\u503c\u4e00\u76f4\u6ca1\u6709\u88ab\u6539\u53d8\uff0c\u6240\u4ee5\u8fd9\u662f\u4e00\u4e2a\u6b7b\u5faa\u73af\u3002", "\u00a0", "(27)\u4e0b\u5217\u51fd\u6570\u5b9a\u4e49\u4e2d\uff0c\u4f1a\u51fa\u73b0\u7f16\u8bd1\u9519\u8bef\u7684\u662f_________\u3002", "A)max(int x,int y,int*z)\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)int max(im x,y)", "{\u00a0 *z=x>y?x\uff1ay\uff1b}\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ int z\uff1b", "z=x>y?x\uff1ay\uff1b", "return z\uff1b}", "C)max(intx,inty)\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)intmax(intx,inty)", "{int z\uff1b\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{return x>y?x\uff1ay\uff1b}", "z=x>y?x\uff1ay\uff1b", "return(z)\uff1b}", "B", "\u5728c\u8bed\u8a00\u4e2d\uff0c\u4e0d\u53ef\u4ee5\u5728\u51fd\u6570\u7684\u53c2\u6570\u58f0\u660e\u5217\u8868\u4e2d\u7528\u4e00\u4e2a\u7c7b\u578b\u540d\u6307\u5b9a\u591a\u4e2a\u53c2\u6570\u3002\u6545\u9009\u9879B\u662f\u9519\u8bef\u7684\u3002", "\u5176\u6b63\u786e\u7684\u8868\u793a\u65b9\u5f0f\u5e94\u4e3a", "int max(int x,int y){\u2026\u2026}", "\u6216", "int max(x\uff0cy)", "int x\uff0cy\uff1b", "{\u2026\u2026}", "\u00a0", "(28)\u6709\u5982\u4e0b\u7a0b\u5e8f", "main()", "{\u00a0 int x=3\uff1b", "do", "{\u00a0 printf(\u201d\uff05d\u201d\uff0cx\u2013)\uff1b}", "while(!x)\uff1b", "}", "\u8be5\u7a0b\u5e8f\u7684\u6267\u884c\u7ed3\u679c\u662f________\u3002", "A)321\u00a0\u00a0\u00a0 B)3\u00a0\u00a0\u00a0 C)\u4e0d\u8f93\u51fa\u4efb\u4f55\u5185\u5bb9\u00a0\u00a0\u00a0 D)\u9677\u5165\u6b7b\u5faa\u73af", "B", "\u672c\u9898x\u8d4b\u521d\u503c\u4e3a3\uff0c\u5f53\u6267\u884cprintf(\u201c%d\u201d,x\u2013)\uff1b\u65f6\uff0c\u7531\u4e8eX\u2013\u7684\u4f5c\u7528\u662f\u5148\u8fd0\u7b97x\uff0c\u518d\u5c06x\u7684\u503c\u51cfl\uff0c\u6240\u4ee5\uff0cprintf\u8f93\u51fa\u7684x\u503c\u4e3a3\uff0c\u7b49\u8f93\u51fa\u540e\uff0cx\u7684\u503c\u51cf1\u53d8\u4e3a2\uff0c\u7ee7\u7eed\u6267\u884c\uff0c\u5224\u65ad\u6761\u4ef6!x\u4e3a\u5047\uff0c\u5faa\u73af\u53ea\u88ab\u6267\u884c\u4e00\u6b21\u3002", "\u00a0", "(29)\u8bbe\u6709\u58f0\u660e\u8bed\u53e5:char a=\u2019\uff3c72\u2032\uff1b\u5219\u53d8\u91cfa__________", "A)\u5305\u542b1\u4e2a\u5b57\u7b26\u00a0\u00a0\u00a0 B)\u5305\u542b2\u4e2a\u5b57\u7b26", "C)\u5305\u542b3\u4e2a\u5b57\u7b26\u00a0\u00a0\u00a0 D)\u58f0\u660e\u4e0d\u5408\u6cd5", "A", "\u8f6c\u4e49\u5b57\u7b26\u5e38\u91cf\u2018\\xx\u2019\u53ef\u4ee5\u628a\u2018\uff3c\u2019\u540e\u9762\u7684\u6570\u5b57\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684ASCII\u5b57\u7b26\u3002", "\u00a0", "(30)\u6709\u4ee5\u4e0b\u7a0b\u5e8f\u6bb5\uff1a", "main()", "{", "int a=5,*b,**c", "c==&b\uff1bb=&a\uff1b", "}", "\u7a0b\u5e8f\u5728\u6267\u884c\u4e86c=\uff06b\uff1bb=&a\uff1b\u8bed\u53e5\u540e\uff0c\u8868\u8fbe\u5f0fttc\u7684\u503c\u662f__________\u3002", "A)\u53d8\u91cfa\u7684\u5730\u5740\u00a0\u00a0\u00a0 B)\u53d8\u91cfb\u4e2d\u7684\u5730\u5740", "C)\u53d8\u91cfa\u4e2d\u7684\u503c\u00a0\u00a0\u00a0 D)\u53d8\u91cfb\u7684\u5730\u5740", "C", "\u6307\u9488\u53d8\u91cf\u662f\u7528\u6765\u5b58\u653e\u5730\u5740\u7684\u3002&\uff1a\u53d6\u5730\u5740\u8fd0\u7b97\u7b26\u3002+\uff1a\u6307\u9488\u8fd0\u7b97\u7b26\u3002**c\u4e3a\u6307\u9488\u53d8\u91cf*c\u6240\u6307\u5411\u7684\u5b58\u50a8\u5355\u5143\uff0c*c\u4e3a\u6307\u9488\u6307\u9488\u53d8\u91cfc\u6240\u6307\u5411\u7684\u5b58\u50a8\u5355\u5143\uff0c\u800cc=&b\u8868\u793ac\u4e3a\u53d8\u91cfb\u7684\u5730\u5740\uff0cb=&a\u8868\u793ab\u4e3a\u53d8\u91cfa\u7684\u5730\u5740\u3002\u8868\u8fbe\u5f0f\u4e00c\u7684\u503c\u5c31\u662f\u53d8\u91cfa\u4e2d\u7684\u503c\u3002", "\u00a0", "(31)\u6709\u5982\u4e0b\u51fd\u6570\u8c03\u7528\u8bed\u53e5", "func(recl,rec2+rec3,(rec4,rec5))\uff1b", "\u8be5\u51fd\u6570\u8c03\u7528\u8bed\u53e5\u4e2d\uff0c\u542b\u6709\u7684\u5b9e\u53c2\u4e2a\u6570\u662f________\u3002", "A)3\u00a0\u00a0\u00a0 B)4\u00a0\u00a0\u00a0 C)5 \u00a0\u00a0\u00a0\u00a0D)\u6709\u8bed\u6cd5\u9519\u8bef", "A", "(rec4,rec5)\u662f\u9017\u53f7\u8868\u8fbe\u5f0f\uff0c\u5b83\u7684\u503c\u662frec5\u7684\u503c\u3002\u6240\u4ee5\u8be5\u51fd\u6570\u8c03\u7528\u8bed\u53e5\u542b\u6709\u7684\u5b9e\u53c2\u4e2a\u6570\u662f3\u3002", "\u00a0", "(32)\u6709\u5982\u4e0b\u7a0b\u5e8f", "main()", "{", "char s[115]={\uff0etabc\u201d\uff0c\u201dde\u201d\uff0c\u201dfgh\u201d}\uff1b", "printf(\u201c\uff05e\u201d,s[2][6])\uff1b", "}", "\u5176\u8f93\u51fa\u4e3a__________\u3002", "A)\u4e0d\u786e\u5b9a\u00a0\u00a0\u00a0 B)\u7f16\u8bd1\u9519\u8bef\u00a0\u00a0\u00a0 C)g \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)\u8f93\u51fanull\u5b57\u7b26", "A", "\u7531\u4e8es[2116]\u8868\u793a\u5b57\u7b26\u4e32\u5df2\u8d85\u51fa\u4e86\u6570\u7ec4s\u7684\u8868\u793a\u8303\u56f4\uff0c\u5728c\u4e2d\u4e0d\u4f1a\u5bf9\u6570\u7ec4\u8d8a\u754c\u8fdb\u884c\u68c0\u67e5\uff0c\u5f53\u6570\u7ec4\u8d8a\u754c\u65f6\uff0c\u4f1a\u5f97\u5230\u4e00\u4e2a\u4e0d\u786e\u5b9a\u7684\u503c\u3002", "\u00a0", "(33)\u6709\u5982\u4e0b\u7a0b\u5e8f", "int rune(ira a\uff0cint b)", "{\u00a0 remm(a+b)\uff1b}", "main()", "{\u00a0 int x=2,y=5,z=8,r\uff1b", "r=func(func(x\uff0cy)\uff0cz)\uff1b", "primf(\u201d\uff05d\\n\u201d\uff0cr)\uff1b", "}", "\u8be5\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "A)12\u00a0\u00a0\u00a0 B)13\u00a0\u00a0\u00a0 C)14 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)15", "D", "\u8c03\u7528\u51fd\u6570func(x,y)\uff0c\u8fd4\u56dex+y\uff0c\u53737\uff1b\u518d\u8c03\u7528\u51fd\u6570func(7,z)\uff0c\u8fd4\u56de7+z\uff0c\u537315\u3002", "\u00a0", "(34)\u6709\u5982\u4e0b\u7a0b\u5e8f\u6bb5", "int\u00a0 \u00a0*p,a=10,b=l\uff1b", "p=&a\uff1b\u00a0 a=*p+b\uff1b", "\u6267\u884c\u8be5\u7a0b\u5e8f\u6bb5\u540e\uff0ca\u7684\u503c\u4e3a_________\u3002", "A)12\u00a0\u00a0\u00a0 B)11\u00a0\u00a0\u00a0 C)10\u00a0\u00a0\u00a0 D)\u7f16\u8bd1\u51fa\u9519", "B", "\u6267\u884cp=&a\uff1b\u540e\uff0cp\u6307\u5411\u6574\u6570a\uff0c*p\u5373p\u7684\u76ee\u6807\u53d8\u91cf\uff0c\u4e5f\u5c31\u662fa\uff1b\u6240\u4ee5a=*p+b\u7b49\u4ef7\u4e8ea=a+b\uff0c\u53ef\u77e5a\u7684\u503c\u6700\u7ec8\u4e3a11\u3002", "\u00a0", "(35)\u6709\u4ee5\u4e0b\u7a0b\u5e8f\uff1a", "int*f(int*x,int*y)", "{\u00a0\u00a0 if(*x<*y)return x\uff1b", "else returny\uff1b", "}", "main()", "{", "int a=7\uff0cb=8\uff0c*p\uff0c*q\uff0c*r\uff1b", "p=&a\uff1bq=&b;", "r=f(p\uff0cq)\uff1b", "printf(\u201d\uff05d\uff0c\uff05d\uff0c\uff05d\uff3cn\u201d\uff0c*p\uff0c*q\uff0c*r)\uff1b", "}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "A)7,8,8\u00a0\u00a0\u00a0 B)7,8,7\u00a0\u00a0\u00a0 C)8,7,7\u00a0\u00a0\u00a0 D)8,7,8", "B", "f\u51fd\u6570\u7684\u529f\u80fd\u662f\u8fd4\u56de\u5730\u5740\u4e3ax,y\u7684\u4e24\u4e2a\u6570\u4e2d\u503c\u8f83\u7684\u6570\u7684\u5730\u5740\uff0c\u672c\u9898\u8f93\u51fa\u7ed3\u679c\u662f7,8,7\u3002", "\u00a0", "(36)\u6709\u5982\u4e0b\u7a0b\u5e8f", "long fib(im n)", "{\u00a0 if(n>2)\u00a0 return(fib(n-1)+fib(n-2))\uff1b", "else return(2)\uff1b", ")", "main()", "{\u00a0 printf(\uff05ld\uff3cn\u201d,fib(3))\uff1b}", "\u8be5\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "A)2\u00a0\u00a0\u00a0 B)4\u00a0\u00a0\u00a0 C)6\u00a0\u00a0\u00a0 D)8", "B", "\u51fd\u6570\u8236\u5185\u90e8\u6709\u4e24\u4e2a\u9012\u5f52\u8c03\u7528\uff0c\u5f53n=3\u65f6\uff0cfib(n-1)\u8fd4\u56de2\uff0cfib(n-2)\u4e5f\u8fd4\u56de2\uff0c\u6240\u4ee5fib(n-I)+fib(n-21\u7684\u503c\u4e3a4\u3002", "\u00a0", "(37)\u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "main()", "{", "char str[10]\uff0cc=\u2019a\u2019\uff1b", "inti=0\uff1a", "for(\uff1bi<5\uff1bi++)", "str[I]=c++\uff1b", "printf(\u201d\uff05s\u201d\uff0cstr)\uff1b", "}", "A)abcde\u00a0\u00a0\u00a0 B)a\u00a0\u00a0\u00a0 C)\u4e0d\u786e\u5b9a\u00a0\u00a0\u00a0 D)bcdef", "C", "\u5b57\u7b26\u4e32\u5c11\u4e00\u4e2a\u7ed3\u675f\u6807\u5fd7\uff0c\u6240\u4ee5\u8f93\u51fa\u7684\u7ed3\u679c\u4e0d\u786e\u5b9a\u3002", "\u00a0", "(38)\u5728c\u8bed\u8a00\u4e2d\uff0c\u51fd\u6570\u4e2d\u53d8\u91cf\u7684\u9690\u542b\u5b58\u50a8\u7c7b\u522b\u662f__________\u3002", "A)auto\u00a0\u00a0\u00a0 B)static\u00a0\u00a0\u00a0 C)extern\u00a0\u00a0\u00a0 D)\u65e0\u5b58\u50a8\u7c7b\u522b", "A", "\u51fd\u6570\u4e2d\u53d8\u91cf\u7684\u5b58\u50a8\u7c7b\u522b\u5305\u62ecauto\uff0cstatic\uff0cextern\uff0c\u5176\u4e2dauto\u4e3a\u9690\u542b\u5b58\u50a8\u7c7b\u522b\uff0cstatic\u4e3a\u9759\u6001\u5b58\u50a8\u7c7b\u522b\uff0cregister\u662f\u5bc4\u5b58\u5668\u5b58\u50a8\u7c7b\u522b\u3002A", "\u51fd\u6570\u4e2d\u53d8\u91cf\u7684\u5b58\u50a8\u7c7b\u522b\u5305\u62ecauto\uff0cstatic\uff0cextern\uff0c\u5176\u4e2dauto\u4e3a\u9690\u542b\u5b58\u50a8\u7c7b\u522b\uff0cstatic\u4e3a\u9759\u6001\u5b58\u50a8\u7c7b\u522b\uff0cregister\u662f\u5bc4\u5b58\u5668\u5b58\u50a8\u7c7b\u522b\u3002", "\u00a0", "(39)\u6709\u5982\u4e0b\u7a0b\u5e8f", "#define \u00a0n\u00a0 2", "#define \u00a0m \u00a0N+I", "#define \u00a0NUM \u00a0\u00a02*m+l", "main()", "{\u00a0 int i\uff1b", "for(i=1\uff1bi<=NUM\uff1bi++)printtf(\u201d\uff05d\uff3cn\u201d\uff0ci)\uff1b", "}", "\u8be5\u7a0b\u5e8f\u4e2d\u7684for\u5faa\u73af\u6267\u884c\u7684\u6b21\u6570\u662f_________\u3002", "A)5\u00a0\u00a0\u00a0 B)6\u00a0\u00a0\u00a0 C)7\u00a0\u00a0\u00a0 D)8", "B", "\u5728c\u8bed\u8a00\u4e2d\uff0c\u5b8f\u5b9a\u4e49\u5728\u7f16\u8bd1\u65f6\u5c06\u88ab\u76f4\u63a5\u66ff\u6362\uff0c\u6240\u4ee5NUM\u6700\u540e\u4f1a\u88ab\u66ff\u6362\u62102*N+l+l\uff0c\u53732*2+1+1\uff0c\u503c\u4e3a6\u3002\u56e0\u6b64\uff0cfor\u5faa\u73af\u6267\u884c\u7684\u6b21\u6570\u4e3a6\u3002", "\u00a0", "(40)\u5047\u8bbe\u5728turboc2\uff0e0\u91c7\u7528small\u6a21\u5f0f\u7f16\u8bd1\u5982\u4e0b\u7a0b\u5e8f", "main()", "{", "char a[4]\uff1a{\u2019a\u2019\uff0c\u2019b\u2019}\uff1b", "char\uff05=\u201dabc\uff0et\uff1a", "printf(\u201d\uff05d,\uff05d\u201d,sizeof(a)\uff0csizeof(b))\uff1b", "}", "\u5176\u8f93\u51fa\u7ed3\u679c\u4e3a_________\u3002", "A)4,2\u00a0\u00a0\u00a0 B)4,4\u00a0\u00a0\u00a0 C)4,3\u00a0 \u00a0\u00a0D)2,2", "A", "\u7528small\u6a21\u5f0f\u7f16\u8bd1\uff0c\u6307\u9488\u53d8\u91cf\u53602\u4e2a\u5b57\u8282\u3002sizeof(array)\uff1a\u6570\u7ec4\u540darray\u4ee3\u8868\u6570\u7ec4\u672c\u8eab\uff0csizeof\u51fd\u6570\u6d4b\u51fa\u7684\u662f\u6574\u4e2a\u6570\u7ec4\u7684\u5927\u5c0f\u3002a\u6570\u7ec4\u7684\u5927\u5c0f\u4e3a4\uff0cb\u6307\u9488\u53d8\u91cf\u7684\u5927\u5c0f\u4e3a2\u3002", "\u00a0", "(41)\u6709\u4ee5\u4e0b\u51fd\u6570", "char\u00a0 *fun(char *p)", "{\u00a0\u00a0 retum p\uff1b\u00a0 }", "\u8be5\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f_________\u3002", "A)\u65e0\u786e\u5207\u7684\u503c\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)\u5f62\u53c2p\u4e2d\u5b58\u653e\u7684\u5730\u5740\u503c", "C)\u4e00\u4e2a\u4e34\u65f6\u5b58\u50a8\u5355\u5143\u7684\u5730\u5740\u00a0\u00a0\u00a0 D)\u5f62\u53c2p\u81ea\u8eab\u7684\u5730\u5740\u503c", "B", "p\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u5b57\u7b26\u578b\u6307\u9488\u53d8\u91cf\uff0c\u8fd4\u56dep\u4e5f\u5c31\u662f\u8fd4\u56de\u53d8\u91cfp\u4e2d\u5b58\u653e\u7684\u5730\u5740\u503c\u3002", "\u00a0", "(42)\u6709\u5982\u4e0b\u7a0b\u5e8f\u6bb5\uff1a", "#include<stdio\uff0eh>", "#define Max(a\uff0cb)a>b?a\uff1ab", "main()", "{", "int a=5\uff0cb=6\uff0cc=4\uff0cd\uff1b", "d=c+Max(a\uff0cb)\uff1b", "printf(\u201d\uff05d\u201d\uff0cd)\uff1b", "}", "\u5176\u8f93\u51fa\u7ed3\u679c\u4e3a__________\u3002", "A)10\u00a0\u00a0\u00a0 B)5\u00a0\u00a0\u00a0 C)6\u00a0\u00a0\u00a0 D)\u7f16\u8bd1\u9519\u8bef", "B", "\u5728c\u8bed\u8a00\u4e2d\uff0c\u5b8f\u5b9a\u4e49\u662f\u76f4\u63a5\u66ff\u6362\u7684\uff0c\u6240\u4ee5\u5728c+a>b?a\uff1ab\u8fd9\u4e2a\u6761\u4ef6\u8868\u8fbe\u5f0f\u4e2d\uff0cc+a>b\u4e3a\u771f\uff0c\u6240\u4ee5\u7528a\u7684\u503c\u4f5c\u4e3a\u6574\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\uff0c\u800ca\u7684\u503c\u4e3a5\uff0c\u6240\u4ee5\u6574\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\u4e3a5\u3002", "\u00a0", "(43)\u6709\u5982\u4e0b\u7a0b\u5e8f\u6bb5", "int\u00a0 a=14,b=l 5,x\uff1b", "char c=\u2019A\u2019\uff1a", "x=(a&&b)\u00a0 &&(c<\u2019B\u2019)\uff1b", "\u6267\u884c\u8be5\u7a0b\u5e8f\u6bb5\u540e\uff0cx\u7684\u503c\u4e3a________\u3002", "A)true\u00a0\u00a0\u00a0 B)false\u00a0\u00a0\u00a0 C)0\u00a0\u00a0\u00a0 D)l", "D", "a&&b\u7684\u503c\u4e3atrue\uff0cc<\u2018B\u2019\u7684\u503c\u4e5f\u4e3atrue\uff0c\u6240\u4ee5(a&&b)&&(c<\u2018B\u2019)\u7684\u503c\u4e3atrue\u3002\u4f46x\u662fint\u578b\u53d8\u91cf\uff0c\u6240\u4ee5(\u62ab&b)&&(c<\u2018B\u2019)\u7684\u503c\u6700\u540e\u8981\u4ecebool\u578b\u8f6c\u6362\u4e3aint\u578b\u8d4b\u7ed9x\u3002\u8fd9\u6837x\u7684\u503c\u5e94\u4e3al\u3002", "\u00a0", "(44)\u4e0b\u8ff0\u5173\u4e8eC\u8bed\u8a00\u6587\u4ef6\u7684\u64cd\u4f5c\u7684\u7ed3\u8bba\u4e2d\uff0c\u6b63\u786e\u7684\u662f________\u3002", "A)\u5bf9\u6587\u4ef6\u64cd\u4f5c\u5fc5\u987b\u5148\u5173\u95ed\u6587\u4ef6", "B)\u5bf9\u6587\u4ef6\u64cd\u4f5c\u5fc5\u987b\u5148\u6253\u5f00\u6587\u4ef6", "C)\u5bf9\u6587\u4ef6\u64cd\u4f5c\u987a\u5e8f\u65e0\u8981\u6c42", "D)\u5bf9\u6587\u4ef6\u64cd\u4f5c\u524d\u5fc5\u987b\u5148\u6d4b\u6587\u4ef6\u662f\u5426\u5b58\u5728\uff0c\u7136\u540e\u518d\u6253\u5f00\u6587\u4ef6\u3002", "B", "\u5728c\u4e2d\u5bf9\u6587\u4ef6\u64cd\u4f5c\u5fc5\u987b\u5148\u6253\u5f00\u6587\u4ef6\uff0c\u5f85\u6587\u4ef6\u64cd\u4f5c\u5b8c\u6bd5\u540e\u8981\u5173\u95ed\u6587\u4ef6\u3002\u5bf9\u6587\u4ef6\u4ee5\u8bfb\u7684\u65b9\u5f0f\u8fdb\u884c\u6253\u5f00\u64cd\u4f5c\u65f6\uff0c\u540c\u65f6\u4f1a\u6267\u884c\u6587\u4ef6\u7684\u68c0\u67e5\u6587\u4ef6\u662f\u5426\u5b58\u5728\uff0c\u4e0d\u5b58\u5728\u5c06\u4f1a\u8fd4\u56de\u7a7a\u7684\u6587\u4ef6\u6307\u9488\uff0c\u5982\u679c\u5bf9\u6587\u4ef6\u4ee5\u5199\u7684\u65b9\u5f0f\u6253\u5f00\u65f6\uff0c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u5c06\u4f1a\u81ea\u52a8\u521b\u5efa\u6587\u4ef6\uff0c\uff0e\u56e0\u6b64\u5728C\u4e2d\u6253\u5f00\u6587\u4ef6\u524d\u4e0d\u5fc5\u5bf9\u5176\u68c0\u67e5\u6587\u4ef6\u662f\u5426\u5b58\u5728\uff0c\u6545\u7b54\u6848\u4e3aB\u3002", "\u00a0", "(45)\u4e0b\u5217\u5173\u952e\u5b57\u4e2d\uff0c\u4e0d\u5c5e\u4e8eC\u8bed\u8a00\u53d8\u91cf\u5b58\u50a8\u7c7b\u522b\u7684\u662f________\u3002", "A)register\u00a0\u00a0\u00a0 B)auto\u00a0\u00a0\u00a0 C)extem\u00a0\u00a0\u00a0 D)public", "D", "\u53d8\u91cf\u7684\u5b58\u50a8\u7c7b\u522b\u5177\u4f53\u5305\u542b\u56db\u79cd\uff1a\u81ea\u52a8\u7684(auto)\uff0c\u9759\u6001\u7684(statiC)\uff0c\u5bc4\u5b58\u5668\u7684(register)\uff0c\u5916\u90e8\u7684(extern)\u3002", "\u00a0", "(46)\u6709\u5982\u4e0b\u8bf4\u660e", "im a[10]={l\uff0c2\uff0c3\uff0c4\uff0c5\uff0c6\uff0c7\uff0c8\uff0c9\uff0c10}\uff0c*p=a\uff1b", "\u5219\u6570\u503c\u4e3a9\u7684\u8868\u8fbe\u5f0f\u662f________\u3002", "A)\u6728p+9\u00a0\u00a0\u00a0 B)\u534a(p+8)\u00a0\u00a0\u00a0 C)\u725bp+=9\u00a0\u00a0\u00a0 D)p+8", "B", "p\u662f\u6307\u9488\uff0cp+8\u662f\u5730\u5740\u503c\uff0cD\u662f\u9519\u7684\uff1b*p\u662fp\u7684\u76ee\u6807\u53d8\u91cf\uff0c\u5373a[0]\uff0c\u503c\u4e3a1\uff0c\u6240\u4ee5+p+9\u7684\u503c\u662flO\uff0c\u800c*p+=9\u503c\u662f\u91cd\u65b0\u7ed9a[O]\u8d4b\u4e86\u503c(1+9)\uff1b\u6240\u4ee5A\u548cC\u4e5f\u662f\u9519\u7684\u3002p+8\u662f\u5730\u5740\u503c\uff0c\u6307\u5411a[8]\uff0c\u90a3\u4e48*(p+8)\u3002\u7684\u503c\u5c31\u662fa[81\u7684\u503c\uff0c\u53739\u3002", "\u00a0", "(47)\u82e5\u6709\u4ee5\u4e0b\u5b9a\u4e49\uff1aint t[3][2]\uff1b\u80fd\u6b63\u786e\u8868\u793at\u6570\u7ec4\u5143\u7d20\u5730\u5740\u7684\u8868\u8fbe\u5f0f\u662f________\u3002", "A)&t[3][2]\u00a0\u00a0\u00a0 B]t[3]\u00a0\u00a0\u00a0 C]t[1]\u00a0\u00a0\u00a0 D]*t[2]", "C", "A\u548cB\u4e24\u4e2a\u8868\u8fbe\u5f0f\u90fd\u5df2\u8d8a\u754c\u4e86\uff1b*t[2]\u662f\u76ee\u6807\u53d8\u91cf\uff0c\u5373\u4e00\u4e2a\u6574\u6570\uff0c\u800c\u4e0d\u662f\u5730\u5740\u503c\u3002", "\u00a0", "(48)\u4e0b\u9762\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "struct abc", "{", "int a\uff0cb\uff0cc\uff1b", "}", "main()", "{", "struct abc s[2]={{1\uff0c2\uff0c3}\uff0c{4\uff0c5\uff0c6}}\uff1b", "int t=-s[0]\uff0ea+s[1]\uff0eb\uff1b", "printf(\u201c\uff05d\uff3cn\u201d,t)\uff1b", "}", "A)5\u00a0\u00a0\u00a0 B)6\u00a0\u00a0\u00a0 C)7\u00a0\u00a0\u00a0 D)8", "B", "\u5728main\u51fd\u6570\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2astruct abc\u7c7b\u578b\u7684\u6570\u7ec4\uff0c\u540c\u65f6\u5206\u522b\u5229\u7528{1\uff0c2\uff0c3}\u53ca{4\uff0c5\uff0c6}\u5bf9\u6570\u7ec4\u4e2d\u4e24\u4e2a\u5143\u7d20\u8fdb\u884c\u521d\u59cb\u5316\u3002\u5728\u8be5\u7ed3\u6784\u4f53\uff0c\u4f9d\u6b21\u5bf9\u5176\u4e2d\u7684a,b,c\u4e09\u4e2a\u53d8\u91cf\u8fdb\u884c\u521d\u59cb\u5316\u3002\u6545s[O]\uff0ea=l\uff0cs[1]\uff0eb=5\uff0c\u6240\u4ee5\u672c\u9898\u8f93\u51fa\u4e3a6\u3002", "\u00a0", "(49)\u6709\u5982\u4e0b\u7a0b\u5e8f", "main()", "{", "int a[31131\u3002{{1\uff0c2}\uff0c{3\uff0c4}\uff0c{5\uff0c6}}\uff0ci,j,s=0\uff1b", "for(i=l\uff1bi<3\uff1bi++)", "for(j=0\uff1bj<=i\uff1bj++)", "s+=a[I][j]\uff1b", "printf(\u201c\uff05d\uff3cn\u201d,s)\uff1b", "}", "\u8be5\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "A)18\u00a0\u00a0\u00a0 B)19\u00a0\u00a0\u00a0 C)20\u00a0\u00a0\u00a0 D)2l", "A", "\u9898\u4e2d\u7684\u5916\u5faa\u73af\u53ea\u6267\u884c\u4e862\u6b21\uff1a", "\u7b2c1\u6b21\uff1aa[1][0]=3\uff0ca[1][1]=4\uff0c\u6240\u4ee5s=7\uff1b", "\u7b2c2\u6b21\uff1aa[2][O]=5\uff0ca[2][1]=6\uff0ca[2][2]=0\uff0c\u6240\u4ee5s=7+5+6+0=18\u3002", "\u00a0", "(50)\u82e5\u5df1\u5efa\u7acb\u5982\u4e0b\u56fe\u6240\u793a\u7684\u5355\u5411\u94fe\u8868\u7ed3\u6784\uff1a", "\u00a0", "\u5728\u8be5\u94fe\u8868\u7ed3\u6784\u4e2d\uff0c\u6307\u9488p\u3001s\u5206\u522b\u6307\u5411\u56fe\u4e2d\u6240\u793a\u7ed3\u70b9\uff0c\u5219\u4e0d\u80fd\u5c06s\u6240\u6307\u7684\u7ed3\u70b9\u63d2\u5165\u5230\u94fe\u8868\u672b\u5c3e\u4ecd\u6784\u6210\u5355\u5411\u94fe\u8868\u7684\u8bed\u53e5\u7ec4\u662f__________\u3002", "A)p=p->next\uff1bs->next\uff1ap\uff1bp->next=s\uff1b", "B)p=p->next\uff1bs->next\uff1ap->next\uff1bp->next=s\uff1b", "C)s->next\uff1aNULL\uff1bp=p->next\uff1bp->next\uff1as\uff1b", "D)p=(*p)\uff0enext\uff1b(*s)\uff0enext=(*p)\uff0enext\uff1b(*p)\uff0enext=s\uff1b", "A", "\u5728\u7b54\u6848A\u4e2d\uff1ap=p->next\uff1bs->next=p\uff1bp->next=s\uff1bs\u7684\u786e\u5df2\u63d2\u5230\u4e86\u94fe\u8868\u7684\u672b\u5c3e\uff0c\u4f46\u5b83\u7684next\u5374\u5e76\u6ca1\u6709\u4e3aNULL\uff0c\u800c\u662f\u6307\u5411\u4e86\u5b83\u7684\u76f4\u63a5\u524d\u8d8bp\uff0c\u8fd9\u6837\u5b83\u5c31\u4e0d\u662f\u4e00\u4e2a\u5355\u5411\u94fe\u8868(\u5355\u5411\u94fe\u8868\u6700\u540e\u4e00\u4e2a\u7ed3\u70b9\u7684next\u6307\u9488\u4e00\u5b9a\u662f\u4e00\u4e2aNULL)\u3002", "\u00a0", "\u4e8c\u3001\u586b\u7a7a\u9898(\u6bcf\u7a7a2\u5206\uff0c\u517140\u5206)\u2018", "\u8bf7\u5c06\u6bcf\u4e00\u4e2a\u7a7a\u7684\u6b63\u786e\u7b54\u6848\u5199\u5728\u7b54\u9898\u5361\u7684\u30101\u3011\u81f3\u301020\u3011\u5e8f\u53f7\u7684\u6a2a\u7ebf\u4e0a\uff0c\u7b54\u5728\u8bd5\u5377\u4e0a\u4e0d\u5f97\u00a0\u00a0 \u00a0\u5206\u3002", "(1)\u5728\u8fd0\u7b97\u8fc7\u7a0b\u4e2d\uff0c\u80fd\u591f\u4f7f\u7a7a\u8868\u4e0e\u975e\u7a7a\u8868\u7684\u8fd0\u7b97\u7edf\u4e00\u7684\u7ed3\u6784\u662f", "\u3002", "\u30101\u3011\u5faa\u73af\u94fe\u8868", "\u5728\u94fe\u8868\u7684\u8fd0\u7b97\u8fc7\u7a0b\u4e2d\uff0c\u91c7\u7528\u94fe\u63a5\u65b9\u5f0f\u5373\u5faa\u73af\u94fe\u8868\u7684\u7ed3\u6784\u628a\u7a7a\u8868\u4e0e\u975e\u7a7a\u8868\u7684\u8fd0\u7b97\u7edf\u4e00\u8d77\u6765\u3002\u5faa\u73af\u94fe\u8868\u5177\u6709\u4e24\u4e2a\u7279\u70b9\uff1a", "\u2460\u5728\u5faa\u73af\u94fe\u8868\u4e2d\u589e\u52a0\u4e86\u4e00\u4e2a\u8868\u5934\u7ed3\u70b9\uff0c\u5176\u6570\u636e\u57df\u4e3a\u4efb\u610f\u6216\u6839\u636e\u9700\u8981\u6765\u8bbe\u7f6e\uff0c\u6307\u9488\u57df\u6307\u5411\u7ebf\u6027\u8868\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u7ed3\u70b9\u3002\u5faa\u73af\u94fe\u8868\u7684\u5934\u6307\u9488\u6307\u5411\u8868\u5934\u7ed3\u70b9\u3002", "\u2461\u5faa\u73af\u94fe\u8868\u4e2d\u6700\u540e\u4e00\u4e2a\u7ed3\u70b9\u7684\u6307\u9488\u4e0d\u662f\u7a7a\uff0c\u800c\u662f\u6307\u5411\u8868\u5934\u7ed3\u70b9\u3002", "\u00a0", "(2)\u8f6f\u4ef6\u5de5\u7a0b\u7814\u7a76\u7684\u5185\u5bb9\u4e3b\u8981\u5305\u62ec\uff1a", "\u6280\u672f\u548c\u8f6f\u4ef6\u5de5\u7a0b\u7ba1\u7406\u3002", "\u30102\u3011\u8f6f\u4ef6\u5f00\u53d1", "\u57fa\u4e8e\u8f6f\u4ef6\u5de5\u7a0b\u7684\u76ee\u6807\uff0c\u8f6f\u4ef6\u5de5\u7a0b\u7684\u7406\u8bba\u548c\u6280\u672f\u6027\u7814\u7a76\u7684\u5185\u5bb9\u4e3b\u8981\u5305\u62ec\uff1a\u8f6f\u4ef6\u5f00\u53d1\u6280\u672f\u548c\u8f6f\u4ef6\u5de5\u7a0b\u7ba1\u7406\u3002", "\u8f6f\u4ef6\u5f00\u53d1\u6280\u672f\u5305\u62ec\uff1a\u8f6f\u4ef6\u5f00\u53d1\u65b9\u6cd5\u5b66\u3001\u5f00\u53d1\u8fc7\u7a0b\u3001\u5f00\u53d1\u5de5\u5177\u548c\u8f6f\u4ef6\u5de5\u7a0b\u73af\u5883\uff0c\u5176\u4e3b\u4f53\u5185\u5bb9\u662f\u8f6f\u4ef6\u5f00\u53d1\u65b9\u6cd5\u5b66\u3002", "\u8f6f\u4ef6\u5de5\u7a0b\u7ba1\u7406\u5305\u62ec\uff1a\u8f6f\u4ef6\u7ba1\u7406\u5b66\u3001\u8f6f\u4ef6\u5de5\u7a0b\u7ecf\u6d4e\u5b66\u3001\u8f6f\u4ef6\u5fc3\u7406\u5b66\u7b49\u5185\u5bb9\u3002", "\u00a0", "(3)\u4e0e\u7ed3\u6784\u5316\u9700\u6c42\u5206\u6790\u65b9\u6cd5\u76f8\u5bf9\u5e94\u7684\u662f", "\u65b9\u6cd5\u3002", "\u30103\u3011\u7ed3\u6784\u5316\u8bbe\u8ba1", "\u4e0e\u7ed3\u6784\u5316\u9700\u6c42\u5206\u6790\u65b9\u6cd5\u76f8\u5bf9\u5e94\u7684\u662f\u7ed3\u6784\u5316\u8bbe\u8ba1\u65b9\u6cd5\u3002\u7ed3\u6784\u5316\u8bbe\u8ba1\u5c31\u662f\u91c7\u7528\u6700\u4f73\u7684\u53ef\u80fd\u65b9\u6cd5\u8bbe\u8ba1\u7cfb\u7edf\u7684\u5404\u4e2a\u7ec4\u6210\u90e8\u5206\u4ee5\u53ca\u5404\u4e2a\u6210\u5206\u4e4b\u95f4\u7684\u5185\u90e8\u8054\u7cfb\u7684\u6280\u672f\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u7ed3\u6784\u5316\u8bbe\u8ba1\u662f\u8fd9\u6837\u4e00\u4e2a\u8fc7\u7a0b\uff0c\u5b83\u51b3\u5b9a\u7528\u54ea\u4e9b\u65b9\u6cd5\u628a\u54ea\u4e9b\u90e8\u5206\u8054\u7cfb\u8d77\u6765\uff0c\u624d\u80fd\u89e3\u51b3\u597d\u67d0\u4e2a\u5177\u4f53\u4e14\u6709\u6e05\u695a\u5b9a\u4e49\u7684\u95ee\u9898\u3002", "\u00a0", "(4)\u5173\u7cfb\u6a21\u578b\u7684\u5b8c\u6574\u6027\u89c4\u5219\u662f\u5bf9\u5173\u7cfb\u7684\u67d0\u79cd\u7ea6\u675f\u6761\u4ef6\uff0c\u5305\u62ec\u5b9e\u4f53\u5b8c\u6574\u6027\u3001", "\u548c\u81ea\u5b9a\u4e49\u5b8c\u6574\u6027\u3002", "\u30104\u3011\u53c2\u7167\u5b8c\u6574\u6027", "\u5173\u7cfb\u6a21\u578b\u5141\u8bb8\u5b9a\u4e49\u4e09\u7c7b\u6570\u636e\u7ea6\u675f\uff0c\u5b83\u4eec\u662f\u5b9e\u4f53\u5b8c\u6574\u6027\u3001\u53c2\u7167\u5b8c\u6574\u6027\u4ee5\u53ca\u7528\u6237\u5b9a\u4e49\u7684\u5b8c\u6574\u6027\u7ea6\u675f\uff0c\u5176\u4e2d\u524d\u4e24\u79cd\u5b8c\u6574\u6027\u7ea6\u675f\u7531\u5173\u7cfb\u6570\u636e\u5e93\u7cfb\u7edf\u81ea\u52a8\u652f\u6301\u3002", "\u5b9e\u4f53\u5b8c\u6574\u6027\u7ea6\u675f\u8981\u6c42\u5173\u7cfb\u7684\u4e3b\u952e\u4e2d\u5c5e\u6027\u503c\u4e0d\u80fd\u4e3a\u7a7a\uff0c\u8fd9\u662f\u6570\u636e\u5e93\u5b8c\u6574\u6027\u7684\u6700\u57fa\u672c\u8981\u6c42\uff0c\u56e0\u4e3a\u4e3b\u952e\u662f\u60df\u4e00\u51b3\u5b9a\u5143\u7ec4\u7684\uff0c\u5982\u4e3a\u7a7a\u5219\u5176\u60df\u4e00\u6027\u5c31\u6210\u4e3a\u4e0d\u53ef\u80fd\u7684\u4e86\u3002", "\u53c2\u7167\u5b8c\u6574\u6027\u7ea6\u675f\u662f\u5173\u7cfb\u4e4b\u95f4\u76f8\u5173\u8054\u7684\u57fa\u672c\u7ea6\u675f\uff0c\u5b83\u4e0d\u5141\u8bb8\u5173\u7cfb\u5f15\u7528\u4e0d\u5b58\u5728\u7684\u5143\u7ec4\uff1a\u5373\u5728\u5173\u7cfb\u4e2d\u7684\u5916\u952e\u8981\u4e48\u662f\u6240\u5173\u8054\u5173\u7cfb\u4e2d\u5b9e\u9645\u5b58\u5728\u7684\u5143\u7ec4\uff0c\u8981\u4e48\u662f\u7a7a\u503c\u3002", "\u81ea\u5b9a\u4e49\u5b8c\u6574\u6027\u662f\u9488\u5bf9\u5177\u4f53\u6570\u636e\u73af\u5883\u4e0e\u5e94\u7528\u73af\u5883\u7531\u7528\u6237\u5177\u4f53\u8bbe\u7f6e\u7684\u7ea6\u675f\uff0c\u5b83\u53cd\u6620\u4e86\u5177\u4f53\u5e94\u7528\u4e2d\u6570\u636e\u7684\u8bed\u4e49\u8981\u6c42\u3002", "\u00a0", "(5)\u6570\u636e\u6a21\u578b\u6309\u4e0d\u540c\u7684\u5e94\u7528\u5c42\u6b21\u5206\u4e3a\u4e09\u79cd\u7c7b\u578b\uff0c\u5b83\u4eec\u662f", "\u00a0\u6570\u636e\u6a21\u578b\u3001\u903b\u8f91\u6570\u636e\u6a21\u578b\u548c\u7269\u7406\u6570\u636e\u6a21\u578b\u3002", "\u30105\u3011\u6982\u5ff5", "\u6570\u636e\u6a21\u578b\u6309\u4e0d\u540c\u7684\u5e94\u7528\u5c42\u6b21\u5206\u4e3a\u4e09\u79cd\u7c7b\u578b\uff0c\u5b83\u4eec\u662f\u6982\u5ff5\u6570\u636e\u6a21\u578b\u3001\u903b\u8f91\u6570\u636e\u6a21\u578b\u548c\u7269\u7406\u6570\u636e\u6a21\u578b\u3002", "\u6982\u5ff5\u6570\u636e\u6a21\u578b\u7b80\u79f0\u6982\u5ff5\u6a21\u578b\uff0c\u662f\u4e00\u79cd\u9762\u5411\u5ba2\u89c2\u4e16\u754c\u3001\u9762\u5411\u7528\u6237\u7684\u6a21\u578b\uff1b\u5b83\u4e0e\u5177\u4f53\u7684\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\u65e0\u5173\u3002", "\u00a0", "(6)\u8868\u793a\u201d\u201d\u6574\u6570x\u7684\u7edd\u5bf9\u503c\u5927\u4e8e5\u201d\u201d\u65f6\u503c\u4e3a\u201d\u201d\u771f\u201d\u201d\u7684C\u8bed\u8a00\u8868\u8fbe\u5f0f\u662f", "\u00a0\u3002", "\u30106\u3011x>5\u2016x<-5\u6216k<-5\u2016x>5", "\u8981\u4f7f\u6574\u6570x\u7684\u7edd\u5bf9\u503c\u5927\u4e8e5\uff0c\u5219x\u5927\u4e8e5\u6216x\u5c0f\u4e8e-5\uff0c\u7528c\u8bed\u8a00\u8868\u793a\u5373\u4e3a\uff1ax>5\u2016x<-5\u6216\u8005x<-5\u2016x>5\u3002", "\u6545\u672c\u9898\u7b54\u6848\u4e3a\uff1ax>5\u2016x<-5\u6216\u8005x<-5\u2016x>5\u3002", "(7)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f", "\u3002", "main()", "{\u00a0\u00a0\u00a0 unsigned short a=65536\uff1bint b\uff1b", "printf(\u201d\uff05d\uff3cn\u201d\uff0cb=a)\uff1b", "}", "\u30107\u30110", "\u5bf9\u4e8e\u4e00\u4e2aunsigned short\u6765\u8bf4\uff0c\u5b83\u80fd\u53d6\u7684\u6700\u5927\u503c\u662f65535\u3002\u8fd9\u91cc\u7ed9a\u8d4b\u503c65536\uff0c\u5df2\u7ecf\u8d85\u51fa\u4e86\u5b83\u7684\u53d6\u503c\u8303\u56f4\uff0c\u8fd9\u6837\u5b83\u7684\u9ad8\u4f4d\u5c06\u88ab\u622a\u6389\uff0c\u53ea\u628a\u4f4e\u4f4d\u8d4b\u7ed9\u5b83(\u5168\u96f6)\u3002\u6240\u4ee5a\u7684\u503c\u5b9e\u9645\u4e3a0\u3002", "\u00a0", "(8)\u82e5\u6709\u5b9a\u4e49\uff1aira a=lO,b=9,c=8\uff1b\uff0c\u63a5\u7740\u987a\u5e8f\u6267\u884c\u4e0b\u5217\u8bed\u53e5\uff0c\u53d8\u91cfb\u4e2d\u7684\u503c\u662f", "\u3002", "c=(a-=(b-5))\uff1b", "c=(a\uff0511)+(b=3)\uff1b", "\u30108\u30113", "\u8fd9\u91cc\uff1ab-5=4\uff0ca\uff0e=4\u4e4b\u540ea\u7684\u503c\u4e3a6\uff0c\u5e76\u628a\u5b83\u8d4b\u7ed9c\u3002\u6b64\u65f6b\u7684\u503c\u5e76\u672a\u88ab\u6539\u53d8\u3002\u5728\u7b2c2\u4e2a\u8868\u8fbe\u5f0f\u4e2d\uff0c\u4e5f\u53ea\u6709\u8d4b\u503c\u8868\u8fbe\u5f0fb=3\u6539\u53d8\u4e86b\u7684\u503c\u3002\u6240\u4ee5\u4e24\u884c\u8bed\u53e5\u6267\u884c\u5b8c\u6bd5\uff0cb\u7684\u503c\u5e94\u8be5\u4e3a3\u3002", "\u00a0", "(9)\u4ee5\u4e0b\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f", "\u3002", "main()", "{", "int p=30\uff1b", "primf(\u201c\uff05d\uff3cn\u201d,(p\uff0f3>O?p\uff0f10\uff1ap\uff053))\uff1b", "}", "\u30109\u30113", "\u6761\u4ef6\u8868\u8fbe\u5f0f\u7684\u4e00\u822c\u5f62\u5f0f\u4e3a\uff1a\u8868\u8fbe\u5f0f17\u8868\u8fbe\u5f0f2\uff1a\u8868\u8fbe\u5f0f3\u6761\u4ef6\u8fd0\u7b97\u7b26\u7684\u6267\u884c\u987a\u5e8f\uff1a\u5148\u6c42\u89e3\u8868\u8fbe\u5f0f1\uff0c\u82e5\u4e3a\u975e0(\u771f)\u5219\u6c42\u89e3\u8868\u8fbe\u5f0f2\uff0c\u6b64\u65f6\u8868\u8fbe\u5f0f2\u7684\u503c\u5c31\u4f5c\u4e3a\u6574\u4e2a\u6761\u4ef6\u8868\u8fbe\u5f0f\u7684\u503c\uff1b\u82e5\u8868\u8fbe\u5f0fl\u7684\u503c\u4e3a0(\u5047)-\uff0c\u5219\u6c42\u89e3\u8868\u8fbe\u5f0f3\uff0c\u8868\u8fbe\u5f0f3\u7684\u503c\u5c31\u662f\u6574\u4e2a\u6761\u4ef6\u8868\u8fbe\u5f0f\u7684\u503c\u300230\uff0f3=10>0\uff0c\u6240\u4ee5\u6267\u884cp\uff0flO\uff0c\u7ed3\u679c\u4e3a3\u3002", "\u00a0", "(10)\u51fd\u6570pi\u7684\u529f\u80fd\u662f\u6839\u636e\u4ee5\u4e0b\u8fd1\u4f3c\u516c\u5f0f\u6c42n\u503c\uff1a", "(\u220f*\u220f)\uff0f6=1+1\uff0f(2*2)+1\uff0f(3*3)+\u2026+1(n*n)", "\u73b0\u5728\u8bf7\u4f60\u5728\u4e0b\u9762\u7684\u51fd\u6570\u4e2d\u586b\u7a7a\uff0c\u5b8c\u6210\u6c42n\u7684\u529f\u80fd\u3002", "#include\u201dmath\uff0eH\u201d", "{\u00a0 double s=0\uff0e0\uff1blong i\uff1b", "for(i=1\uff1bi<=n\uff1bi++)s=s+", "\uff1b", "retum(sqrt(6*s))\uff1b", "}", "\u301010\u30111\uff0eO\uff0f(i*i1\u6216(double)l\uff0f(i*i)", "\u8868\u8fbe\u5f0f1+1\uff0f(2*2)+l\uff0f(3*3)+\u2026+1(n*n)\u53ef\u5199\u4e3a\uff1a1\uff0f(1*1)+1\uff0f(2*2)+1\uff0f(3*3)+\u2026+1(n*n)", "n", "\u5373\uff1a\u2211l\u00f7(i\u00d7i)", "i-l", "\u5bf9\u5e94\u7684c\u8bed\u8a00\u7684\u8868\u8fbe\u5f0f\uff1as=s+1\uff0eO\uff0f(i*i)\u3002\u6ce8\uff1a\u5fc5\u987b\u8981\u5199\u62101\uff0e0\u7684\u5f62\u5f0f\uff0c\u5426\u52191\uff0f(i*i)\u8fd4\u56de\u503c\u4e3a\u5176\u503c\u622a\u5c3e\u53d6\u6574\uff0c\u5373\u6052\u4e3aO\u3002", "\u00a0", "(11)\u51fd\u6570pi\u7684\u529f\u80fd\u662f\u6839\u636e\u4ee5\u4e0b\u516c\u5f0f\u8fd1\u4f3c\u6c42\u5f97\u7684\uff1a", "pi*pi\uff0f6=1+1\uff0f(2*2)+1\uff0f(3*3)+\u2026+1\uff0f(n*n)", "\u8bf7\u5728\u4e0b\u9762\u7684\u51fd\u6570\u4e2d\u586b\u7a7a\uff0c\u5b8c\u6210\u6c42pi\u7684\u529f\u80fd\u3002", "#include<math\uff0eh>", "double pi(10ng n1", "{\u00a0 double s=O\uff0eO,long i\uff1b", "for(i=1\uff1bi<=n\uff1bI++)s=s+", "\uff1b", "return(sqrt(6*s))\uff1b", "}", "\u301011\u30111\uff0e0\uff0fi\uff0fi\u62161\uff0eO\uff0f(i*i)", "\u7531\u9898\u9762\u4e2d\u63d0\u4f9b\u7684\u8ba1\u7b97pi\u7684\u516c\u5f0f\u53ef\u77e5\uff1a\u5728\u7b2ci\u9879\u5176\u503c\u4e3a1\uff0f(i*i)\uff0c\u8003\u8651\u5230\u8fd0\u7b97\u7ed3\u679c\u4e3a\u6d6e\u70b9\u6570\uff0c\u6545\u5fc5\u987b\u8981\u5c06l\u8f6c\u5316\u4e3a\u6d6e\u70b9\u6570\u6216\u91c7\u75281\uff0eO\uff0f(i*i)\u7684\u5f62\u5f0f\u3002\u6545\u672c\u9898\u5e94\u586b1\uff0eO\uff0f(i*i)\u6216\u5176\u7b49\u6548\u5f62\u5f0f\u3002", "\u00a0", "(12)\u82e5\u8f93\u5165\u5b57\u7b26\u4e32\uff1aabcde\uff0f\uff0c\u5219\u4ee5\u4e0bwhile\u5faa\u73af\u4f53\u5c06\u6267\u884c", "\u6b21\u3002", "while((ch=getchar())==\u2019e\u2019)printf(\u201c*\u201d)\uff1b", "\u301012\u30110", "\u51fd\u6570getchar()\u662f\u4ece\u952e\u76d8\u5f97\u5230\u7528\u6237\u8f93\u5165\u7684\u4e00\u4e2a\u5b57\u7b26\u3002\u7528\u6237\u8f93\u5165\u7684\u7b2c1\u4e2a\u5b57\u7b26\u662fa\uff0c\u4e0d\u7ba1\u540e\u9762\u8f93\u5165\u7684\u662f\u4ec0\u4e48ch\u7684\u503c\u90fd\u662f\u2018a\u2019\uff0c\u56e0\u6b64\u6761\u4ef6(ch=getchar())==\u2018e\u2019\u4e3a\u5047\uff0c\u8fd9\u4e2a\u5faa\u73af\u4e0d\u4f1a\u88ab\u6267\u884c\u3002", "\u00a0", "(13)\u4ee5\u4e0b\u51fd\u6570\u7528\u6765\u6c42\u51fa\u4e24\u6574\u6570\u4e4b\u548c\uff0c\u5e76\u901a\u8fc7\u5f62\u53c2\u5c06\u7ed3\u679c\u4f20\u56de\uff0c\u8bf7\u586b\u7a7a\u3002", "voidfunc(intx,inty,", "z]", "{\u00a0 *z-x+y\uff1b}\uff0c", "\u301013\u3011int*", "\u4ece\u9898\u4e2d\u4ee3\u7801\u53ef\u77e5\uff1az\u5e94\u8be5\u662f\u4e00\u4e2a\u6574\u578b\u6307\u9488\uff0c\u56e0\u6b64\u5e94\u586b\uff1aint*", "\u00a0", "(14)\u82e5\u6709\u4ee5\u4e0b\u5b9a\u4e49\uff0c\u5219\u4e0d\u79fb\u52a8\u6307\u9488p\uff0c\u4e14\u901a\u8fc7\u6307\u9488p\u5f15\u7528\u503c\u4e3a98\u7684\u6570\u7ec4\u5143\u7d20\u7684\u8868\u8fbe\u5f0f\u662f", "\u3002", "int w[10]={23,54,10,33,47,98,72,80,61}\uff0c*p=w\uff1b", "\u301014\u3011p[5]\u6216*(p+5)", "98\u662f\u6570\u7ec4w\u7684\u7b2c5\u4e2a\u5143\u7d20(\u6700\u5f00\u59cb\u7684\u4e3a\u7b2cO\u4e2a)\uff0c\u800c\u901a\u8fc7*p=w\u5df2\u7ecf\u5c06p\u6307\u5411\u4e86\u6570\u7ec4w\uff0c\u8981\u60f3\u4e0d\u79fb\u52a8\u6307\u9488p\u800c\u5f15\u752898\uff0c\u53ef\u4ee5\u6709\u4ee5\u4e0b\u4e24\u79cd\u5199\u6cd5\uff1ap[5]\u3001*(p+5)\u3002", "\u00a0", "(15)\u8bbe\u5728\u4e3b\u51fd\u6570\u4e2d\u6709\u4ee5\u4e0b\u5b9a\u4e49\u548c\u51fd\u6570\u8c03\u7528\u8bed\u53e5\uff0c\u4e14fun\u51fd\u6570\u4e3avoid\u7c7b\u578b\uff1b\u8bf7\u5199\u51fafun\u51fd\u00a0\u00a0\u00a0 \u6570\u7684\u9996\u90e8", "\u3002\u8981\u6c42\u5f62\u53c2\u540d\u4e3ab\u3002", "main()", "{\u00a0\u00a0 double s[10][22]\uff1b", "int\u00a0 n\uff1a", "\u2026\u2026", "fun(s)\uff1b", "\u2026\u2026", "}", "\u301015\u3011void fun(double b[1011221]", "\u672c\u9898", "void fun(double b[10][22])", "\u00a0", "(16)\u6709\u4ee5\u4e0b\u7a0b\u5e8f\uff1a", "int f(int n)", "{\u00a0\u00a0 if(n==1)return 1\uff1b", "else return f(n-1)+1\uff1b}", "main()", "{\u00a0 int i j=0\uff1b", "for(i=1\uff1bi<3\uff1bi++)j+=f(i)\uff1b", "printf(\u201d\uff05d\uff3cn\u201d\u2019j)\uff1b", "}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f", "\u3002", "\u301016\u30113", "i=l\u65f6\uff0cf(1)=1 J=j+f(1)=0+1=1\uff1bi=2\u65f6\uff0cf(2)=f(1)+l=1+1=2 j=j+f(2)=l+3=3\uff1b\u6b64\u65f6\u5faa\u73af\u7ed3\u675f\uff0c\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f3\u3002", "\u00a0", "(17)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f", "\u3002", "void fun()", "{\u00a0 static\u00a0 int\u00a0 a\uff1a0\uff1b", "a+=2\uff1bprintf(\u201d\uff05d\u201d\uff0ca)\uff1b", "}", "main()", "{\u00a0 int cc\uff1b", "for(CC=1\uff1bcc<4\uff1bcc++)fun()\uff1b", "printf(\u201d\uff3cn\u201d)\uff1b", "}", "\u301017\u3011246", "\u5faa\u73affor(cc=l\uff1bcc<4\uff1bcc++)\u88ab\u6267\u884c\u4e863\u6b21\u3002\u5728\u51fd\u6570fun\u4e2d\uff0c\u7531\u4e8ea\u662fstatic\u578b\u53d8\u91cf\uff0c\u6240\u4ee5\u51fd\u6570\u7b2c1\u6b21\u8c03\u7528\u540e\uff0ca=2\uff1b\u7b2c2\u6b21\u8c03\u7528\u540e\uff0ca=4\uff1b\u7b2c3\u6b21\u8c03\u7528\u540e\uff0ca=6\u3002", "\u00a0", "(18)\u5b9e\u73b0\u7a0b\u5e8f\u53ef\u5c06\u78c1\u76d8\u4e2d\u7684\u4e00\u4e2a\u6587\u4ef6\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u6587\u4ef6\u4e2d\uff0c\u4e24\u4e2a\u6587\u4ef6\u7684\u6587\u4ef6\u540d\u5728\u53ef\u6267\u884c\u547d\u4ee4\u7684\u547d\u4ee4\u884c\u4e2d(\u76f8\u5f53\u4e8ecopy\u547d\u4ee4)\uff0c\u5047\u5b9a\u6587\u4ef6\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u3002\u8bf7\u8865\u5168\u7a0b\u5e8f\u3002", "#include<stdio\uff0eh>", "void main(int argc,char\u3002argv[])", "{\u00a0 FILE *f1\uff0c*f2\uff1b", "if(argc<", ")", "{\u00a0\u00a0 printf(\u201cparameter error!\\n\u201d)\uff1bexit(0)\uff1b}", "fl=fopen(argv[1],\u201dr\u201d)\uff1b", "f2=fopen(argv[2],\u201dw\u201d)\uff1b", "while(", ")fputc(fgetc(f1)\uff0cf2)\uff1b", "fclose(f1)\uff1b", "fclose(f2)\uff1b", "}", "\u301018\u30113", "\u301019\u3011!feof(f1)", "\u5728c\u8bed\u8a00\u4e2d\uff0c\u5b8f\u5b9a\u4e49\u662f\u76f4\u63a5\u66ff\u6362\u7684\uff0c\u6240\u4ee5\u5728\u5bf9\u8868\u8fbe\u5f0fMAX(a+b,c+d)*10\u8fdb\u884c\u6216\u66ff\u6362\u540e\uff0c\u8868\u8fbe\u5f0f\u53d8\u4e3a\uff1a(a+b)>(c+d)?(a+b)\uff1a(c+d)*10", "\u5728\u8fd9\u4e2a\u6761\u4ef6\u8868\u8fbe\u5f0f\u4e2d\uff0c(a+b)>(c+d)\u4e3a\u771f\uff0c\u6240\u4ee5\u7528(a+b)\u7684\u503c\u4f5c\u4e3a\u6574\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c(\u5426\u5219\u7528(c+d)*10\u7684\u503c\u4f5c\u4e3a\u6574\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c)\uff0c\u800c(a+b)\u7684\u503c\u4e3a7\u3002\u6240\u4ee5\u6574\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\u4e3a7\u3002", "\u00a0", "(19)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f", "\u3002", "#define\u00a0 \u00a0MAX(x,y)(x)>(y)?(x)\uff1a(y)", "main()", "f\u00a0 int \u00a0\u00a0\u00a0a=5,b=2,c=3\uff0cd=3\uff0ct\uff1b", "t=MAX(a+b,c+d)*10\uff1b", "printf(\u201d\uff05d\uff3cn\u201d\uff0ct)\uff1b", "}", "\u00a0"], "title": "C\u8bed\u8a00\u7b14\u8bd5\u9898\u5e26\u7b54\u6848\uff08\u4e94\uff09"},
{"contents": ["\u4e00\u3001\u9009\u62e9\u9898((1)\uff5e(10)\u6bcf\u5c0f\u98982\u5206\uff0c(11)-(50)\u6bcf\u5c0f\u98981\u5206\uff0c\u517160\u5206)", "\u4e0b\u5217\u5404\u9898A)\u3001B)\u3001C)\u3001D)\u56db\u4e2a\u9009\u9879\u4e2d\uff0c\u53ea\u6709\u4e00\u4e2a\u9009\u9879\u662f\u6b63\u786e\u7684\uff0c\u8bf7\u5c06\u6b63\u786e\u9009\u9879\u6d82\u5199\u5728\u7b54\u9898\u5361\u76f8\u5e94\u4f4d\u7f6e\u4e0a\uff0c\u7b54\u5728\u8bd5\u5377\u4e0a\u4e0d\u5f97\u5206\u3002", "(1)\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u6307_______\u3002", "A)\u6267\u884c\u7b97\u6cd5\u7a0b\u5e8f\u6240\u9700\u8981\u7684\u65f6\u95f4", "B)\u7b97\u6cd5\u7a0b\u5e8f\u7684\u957f\u5ea6", "C)\u7b97\u6cd5\u6267\u884c\u8fc7\u7a0b\u4e2d\u6240\u9700\u8981\u7684\u57fa\u672c\u8fd0\u7b97\u6b21\u6570", "D)\u7b97\u6cd5\u7a0b\u5e8f\u4e2d\u7684\u6307\u4ee4\u6761\u6570", "C", "\u6240\u8c13\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u662f\u6307\u6267\u884c\u7b97\u6cd5\u6240\u9700\u8981\u7684\u8ba1\u7b97\u5de5\u4f5c\u91cf\u3002", "\u00a0", "(2)\u4e0b\u5217\u53d9\u8ff0\u4e2d\u6b63\u786e\u7684\u662f________\u3002", "A)\u7ebf\u6027\u8868\u662f\u7ebf\u6027\u7ed3\u6784\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0B)\u6808\u4e0e\u961f\u5217\u662f\u975e\u7ebf\u6027\u7ed3\u6784", "C)\u7ebf\u6027\u94fe\u8868\u662f\u975e\u7ebf\u6027\u7ed3\u6784\u00a0\u00a0\u00a0\u00a0 D)\u4e8c\u53c9\u6811\u662f\u7ebf\u6027\u7ed3\u6784", "A", "\u4e00\u822c\u5c06\u6570\u636e\u7ed3\u6784\u5206\u4e3a\u4e24\u5927\u7c7b\u578b\uff1a\u7ebf\u6027\u7ed3\u6784\u4e0e\u975e\u7ebf\u6027\u7ed3\u6784\u3002\u7ebf\u6027\u8868\u3001\u6808\u4e0e\u961f\u5217\u3001\u7ebf\u6027\u94fe\u8868\u90fd\u662f\u7ebf\u6027\u7ed3\u6784\uff0c\u800c\u4e8c\u53c9\u6811\u662f\u975e\u7ebf\u6027\u7ed3\u6784\u3002", "\u00a0", "(3)\u4e0b\u9762\u5173\u4e8e\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u53d9\u8ff0\u4e2d\uff0c\u9519\u8bef\u7684\u662f_________\u3002", "A)\u9664\u4e86\u6700\u540e\u4e00\u5c42\u5916\uff0c\u6bcf\u4e00\u5c42\u4e0a\u7684\u7ed3\u70b9\u6570\u5747\u8fbe\u5230\u6700\u5927\u503c", "B)\u53ef\u80fd\u7f3a\u5c11\u82e5\u5e72\u4e2a\u5de6\u53f3\u53f6\u5b50\u7ed3\u70b9", "C)\u5b8c\u5168\u4e8c\u53c9\u6811\u4e00\u822c\u4e0d\u662f\u6ee1\u4e8c\u53c9\u6811", "D)\u5177\u6709\u7ed3\u70b9\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u6df1\u5ea6\u4e3a[log2n]+1", "B", "\u6ee1\u4e8c\u53c9\u6811\u6307\u9664\u6700\u540e\u4e00\u5c42\u5916\u6bcf\u4e00\u5c42\u4e0a\u6240\u6709\u7ed3\u70b9\u90fd\u6709\u4e24\u4e2a\u5b50\u7ed3\u70b9\u7684\u4e8c\u53c9\u6811\u3002\u5b8c\u5168\u4e8c\u53c9\u6811\u6307\u9664\u6700\u540e\u4e00\u5c42\u5916\uff0c\u6bcf\u4e00\u5c42\u4e0a\u7684\u7ed3\u70b9\u6570\u5747\u8fbe\u5230\u6700\u5927\u503c\uff0c\u5728\u6700\u540e\u4e00\u5c42\u4e0a\u53ea\u7f3a\u5c11\u53f3\u8fb9\u7684\u82e5\u5e72\u5b50\u7ed3\u70b9(\u53f6\u5b50\u7ed3\u70b9)\u7684\u4e8c\u53c9\u6811\u3002", "\u00a0", "(4)\u7ed3\u6784\u5316\u7a0b\u5e8f\u8bbe\u8ba1\u4e3b\u8981\u5f3a\u8c03\u7684\u662f_________\u3002", "A)\u7a0b\u5e8f\u7684\u89c4\u6a21\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)\u7a0b\u5e8f\u7684\u6613\u8bfb\u6027", "C)\u7a0b\u5e8f\u7684\u6267\u884c\u6548\u7387\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0D)\u7a0b\u5e8f\u7684\u53ef\u79fb\u690d\u6027", "B", "\u7ed3\u6784\u5316\u7a0b\u5e8f\u8bbe\u8ba1\u4e3b\u8981\u5f3a\u8c03\u7684\u662f\u7ed3\u6784\u5316\u7a0b\u5e8f\u6e05\u6670\u6613\u8bfb\uff0c\u53ef\u7406\u89e3\u6027\u597d\uff0c\u7a0b\u5e8f\u5458\u80fd\u591f\u8fdb\u884c\u9010\u6b65\u6c42\u7cbe\u3001\u7a0b\u5e8f\u8bc1\u660e\u548c\u6d4b\u8bd5\uff0c\u4ee5\u4fdd\u8bc1\u7a0b\u5e8f\u7684\u6b63\u786e\u6027\u3002", "\u00a0", "(5)\u5728\u8f6f\u4ef6\u751f\u547d\u5468\u671f\u4e2d\uff0c\u80fd\u51c6\u786e\u5730\u786e\u5b9a\u8f6f\u4ef6\u7cfb\u7edf\u5fc5\u987b\u505a\u4ec0\u4e48\u548c\u5fc5\u987b\u5177\u5907\u54ea\u4e9b\u529f\u80fd\u7684\u9636\u6bb5\u662f________\u3002", "A)\u6982\u8981\u8bbe\u8ba1\u00a0 B)\u8be6\u7ec6\u8bbe\u8ba1\u00a0\u00a0\u00a0 C)\u53ef\u884c\u6027\u5206\u6790\u00a0 D)\u9700\u6c42\u5206\u6790", "D", "\u9700\u6c42\u5206\u6790\u662f\u5bf9\u5f85\u5f00\u53d1\u8f6f\u4ef6\u63d0\u51fa\u7684\u9700\u6c42\u8fdb\u884c\u5206\u6790\u5e76\u7ed9\u51fa\u8be6\u7ec6\u5b9a\u4e49\uff0c\u5373\u51c6\u786e\u5730\u786e\u5b9a\u8f6f\u4ef6\u7cfb\u7edf\u7684\u529f\u80fd\u3002\u7f16\u5199\u8f6f\u4ef6\u89c4\u683c\u8bf4\u660e\u4e66\u53ca\u521d\u6b65\u7684\u7528\u6237\u624b\u518c\uff0c\u63d0\u4ea4\u8bc4\u5ba1\u3002", "\u00a0", "(6)\u6570\u636e\u6d41\u56fe\u7528\u4e8e\u62bd\u8c61\u63cf\u8ff0\u4e00\u4e2a\u8f6f\u4ef6\u7684\u903b\u8f91\u6a21\u578b\uff0c\u6570\u636e\u6d41\u56fe\u7531\u4e00\u4e9b\u7279\u5b9a\u7684\u56fe\u7b26\u6784\u6210\u3002\u4e0b\u5217\u00a0\u00a0\u00a0 \u56fe\u7b26\u540d\u6807\u8bc6\u7684\u56fe\u7b26\u4e0d\u5c5e\u4e8e\u6570\u636e\u6d41\u56fe\u5408\u6cd5\u56fe\u7b26\u7684\u662f_________\u3002", "A)\u63a7\u5236\u6d41\u00a0\u00a0\u00a0 B)\u52a0\u5de5\u00a0\u00a0\u00a0 C)\u6570\u636e\u5b58\u50a8\u00a0\u00a0\u00a0 D)\u6e90\u548c\u6f6d", "A", "\u6570\u636e\u6d41\u56fe\u4ece\u6570\u636e\u4f20\u9012\u548c\u52a0\u5de5\u7684\u89d2\u5ea6\uff0c\u6765\u523b\u753b\u6570\u636e\u6d41\u4ece\u8f93\u5165\u5230\u8f93\u51fa\u7684\u79fb\u52a8\u53d8\u6362\u8fc7\u7a0b\u3002\u6570\u636e\u6d41\u56fe\u4e2d\u7684\u4e3b\u8981\u56fe\u5f62\u5143\u7d20\u6709\uff1a\u52a0\u5de5(\u8f6c\u6362)\u3001\u6570\u636e\u6d41\u3001\u5b58\u50a8\u6587\u4ef6(\u6570\u636e\u6e90)\u3001\u6e90\u548c\u6f6d\u3002", "\u00a0", "(7)\u8f6f\u4ef6\u9700\u6c42\u5206\u6790\u4e00\u822c\u5e94\u786e\u5b9a\u7684\u662f\u7528\u6237\u5bf9\u8f6f\u4ef6\u7684__________\u3002", "A)\u529f\u80fd\u9700\u6c42\u00a0 B)\u975e\u529f\u80fd\u9700\u6c42\u00a0 C)\u6027\u80fd\u9700\u6c42\u00a0\u00a0\u00a0 D)\u529f\u80fd\u9700\u6c42\u548c\u975e\u529f\u80fd\u9700\u6c42", "D", "\u8f6f\u4ef6\u9700\u6c42\u5206\u6790\u4e2d\u9700\u8981\u6784\u9020\u4e00\u4e2a\u5b8c\u5168\u7684\u7cfb\u7edf\u903b\u8f91\u6a21\u578b\uff0c\u7406\u89e3\u7528\u6237\u63d0\u51fa\u7684\u6bcf\u4e00\u529f\u80fd\u4e0e\u6027\u80fd\u8981\u6c42\uff0c\u662f\u7528\u6237\u660e\u786e\u81ea\u5df1\u7684\u4efb\u52a1\u3002\u56e0\u6b64\uff0c\u9700\u6c42\u5206\u6790\u5e94\u786e\u5b9a\u7528\u6237\u5bf9\u8f6f\u4ef6\u7684\u529f\u80fd\u9700\u6c42\u548c\u975e\u529f\u80fd\u9700\u6c42\u3002", "\u00a0", "(8)\u4e0b\u8ff0\u5173\u4e8e\u6570\u636e\u5e93\u7cfb\u7edf\u7684\u53d9\u8ff0\u4e2d\u6b63\u786e\u7684\u662f________\u3002", "A)\u6570\u636e\u5e93\u7cfb\u7edf\u51cf\u5c11\u4e86\u6570\u636e\u5197\u4f59", "B)\u6570\u636e\u5e93\u7cfb\u7edf\u907f\u514d\u4e86\u4e00\u5207\u5197\u4f59", "C)\u6570\u636e\u5e93\u7cfb\u7edf\u4e2d\u6570\u636e\u7684\u4e00\u81f4\u6027\u662f\u6307\u6570\u636e\u7c7b\u578b\u7684\u4e00\u81f4", "D)\u6570\u636e\u5e93\u7cfb\u7edf\u6bd4\u6587\u4ef6\u7cfb\u7edf\u80fd\u7ba1\u7406\u66f4\u591a\u7684\u6570\u636e", "A", "\u7531\u6570\u636e\u7684\u5171\u4eab\u81ea\u8eab\u53c8\u53ef\u6781\u5927\u5730\u51cf\u5c11\u6570\u636e\u5197\u4f59\u6027\uff0c\u4e0d\u4ec5\u51cf\u5c11\u4e86\u4e0d\u5fc5\u8981\u7684\u5b58\u50a8\u7a7a\u95f4\uff0c\u66f4\u4e3a\u91cd\u8981\u7684\u662f\u53ef\u4ee5\u907f\u514d\u6570\u636e\u7684\u4e0d\u4e00\u81f4\u6027\u3002\u6240\u8c13\u6570\u636e\u7684\u4e00\u81f4\u6027\u662f\u6307\u5728\u7cfb\u7edf\u4e2d\u540c\u4e00\u6570\u636e\u7684\u4e0d\u540c\u51fa\u73b0\u5e94\u4fdd\u6301\u76f8\u540c\u7684\u503c\u3002", "\u00a0", "(9)\u5173\u7cfb\u8868\u4e2d\u7684\u6bcf\u4e00\u6a2a\u884c\u79f0\u4e3a\u4e00\u4e2a________\u3002", "A)\u5143\u7ec4\u00a0\u00a0\u00a0 B)\u5b57\u6bb5\u00a0\u00a0 \u00a0C)\u5c5e\u6027\u00a0\u00a0\u00a0 D)\u7801", "A", "\u5728\u5173\u7cfb\u6570\u636e\u5e93\u4e2d\uff0c\u5173\u7cfb\u6a21\u578b\u91c7\u7528\u4e8c\u7ef4\u8868\u6765\u8868\u793a\uff0c\u7b80\u79f0\u201c\u8868\u201d\u3002\u4e8c\u7ef4\u8868\u662f\u7531\u8868\u6846\u67b6\u53ca\u8868\u5143\u7ec4\u7ec4\u6210\u3002\u5728\u8868\u6846\u67b6\u4e2d\uff0c\u6309\u884c\u53ef\u4ee5\u5b58\u653e\u6570\u636e\uff0c\u6bcf\u884c\u6570\u636e\u79f0\u4e3a\u5143\u7ec4\u3002", "\u00a0", "(10)\u6570\u636e\u5e93\u8bbe\u8ba1\u5305\u62ec\u4e24\u4e2a\u65b9\u9762\u7684\u8bbe\u8ba1\u5185\u5bb9\uff0c\u5b83\u4eec\u662f________\u3002", "A)\u6982\u5ff5\u8bbe\u8ba1\u548c\u903b\u8f91\u8bbe\u8ba1\u00a0\u00a0\u00a0 \u00a0\u00a0B)\u6a21\u5f0f\u8bbe\u8ba1\u548c\u5185\u6a21\u5f0f\u8bbe\u8ba1", "C)\u5185\u6a21\u5f0f\u8bbe\u8ba1\u548c\u7269\u7406\u8bbe\u8ba1\u00a0\u00a0\u00a0 D)\u7ed3\u6784\u7279\u6027\u8bbe\u8ba1\u548c\u884c\u4e3a\u7279\u6027\u8bbe\u8ba1", "A", "\u6570\u636e\u5e93\u8bbe\u8ba1\u53ef\u5206\u4e3a\u6982\u5ff5\u8bbe\u8ba1\u4e0e\u903b\u8f91\u8bbe\u8ba1\u3002\u6982\u5ff5\u8bbe\u8ba1\u7684\u76ee\u7684\u662f\u5206\u6790\u6570\u636e\u95f4\u5185\u5728\u8bed\u4e49\u5173\u8054\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u5efa\u7acb\u4e00\u4e2a\u6570\u636e\u7684\u62bd\u8c61\u6a21\u578b\u3002\u903b\u8f91\u8bbe\u8ba1\u7684\u4e3b\u8981\u5de5\u4f5c\u662f\u5c06ER\u56fe\u8f6c\u6362\u4e3a\u6307\u5b9a\u7684RDBMS\u4e2d\u7684\u5173\u7cfb\u6a21\u578b\u3002", "\u00a0", "(11)\u8bf7\u8bfb\u7a0b\u5e8f\uff1a", "#include<stdio\uff0eh>", "main()", "{", "int a\uff1bfloat b\uff0cc\uff1b", "scanf(\u201c\uff052d\uff053P%4f\u2019,&a,&b,&C)\uff1b", "printf(\u201d\uff3cna=\uff05d\uff0cb=\uff05ec\u3002\uff05f\uff3cn\u201d\uff0ca\uff0cb\uff0cC)\uff1b", "}", "\u82e5\u8fd0\u884c\u65f6\u4ece\u952e\u76d8\u4e0a\u8f93\u51659876543210l\uff0c\u5219\u4e0a\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "A)a=98,b=765,c=432 1", "B)a=1 0,b=432,c=8765", "C)a=98,b=765\uff0e000000,c=432 1\uff0e000000", "D)a=98,b=765\uff0e0,c=432 1\uff0e0", "C", "scanf()\u628a\u7528\u6237\u4ece\u952e\u76d8\u5f55\u5165\u7684\u6570\u5b57\u7684\u7b2c1\u30012\u4f4d\u5b58\u5165\u6574\u578b\u53d8\u91cfa\uff1b\u628a\u7b2c3\u30014\u30015\u4f4d\u5b58\u5165\u5355\u7cbe\u5ea6\u5b9e\u578b\u53d8\u91cfb\uff0c\u628a\u7b2c6\u30017\u30018\u30019\u4f4d\u5b58\u5165\u5355\u7cbe\u5ea6\u5b9e\u578b\u53d8\u91cfc\uff0c\u7528\u6237\u5f55\u5165\u7684\u7b2c10\u4f4d\u88abscanf()\u9057\u5f03\u3002\u8fd9\u65f6\u53d8\u91cfa\u3001b\u3001c\u7684\u503c\u5206\u522b\u4e3a\uff1a98\u3001765\uff0e000000\u30014321\uff0e000000\u3002", "\u00a0", "(12)\u4e00\u4e2a\u826f\u597d\u7684\u7b97\u6cd5\u7531\u4e0b\u9762\u7684\u57fa\u672c\u7ed3\u6784\u7ec4\u6210\uff0c\u4f46\u4e0d\u5305\u62ec__________\u3002", "A)\u987a\u5e8f\u7ed3\u6784\u00a0 B)\u9009\u62e9\u7ed3\u6784\u00a0\u00a0\u00a0 C)\u5faa\u73af\u7ed3\u6784\u00a0\u00a0\u00a0 D)\u8df3\u8f6c\u7ed3\u6784", "D", "1966\u5e74\uff0cBohra\u548cJacopini\u63d0\u51fa\u4e86\u4ee5\u4e0b\u4e09\u79cd\u57fa\u672c\u7ed3\u6784\uff0c\u7528\u8fd9\u4e09\u79cd\u57fa\u672c\u7ed3\u6784\u4f5c\u4e3a\u8868\u793a\u4e00\u4e2a\u826f\u597d\u7b97\u6cd5\u7684\u57fa\u672c\u5355\u5143\uff1a1\u3001\u987a\u5e8f\u7ed3\u6784\uff1b2\u3001\u9009\u62e9\u7ed3\u6784\uff1b3\u3001\u5faa\u73af\u7ed3\u6784\u3002", "\u00a0", "(13)\u8bf7\u9009\u51fa\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c________\u3002", "#include<stdio\uff0eh>", "sub(x,y,z)", "int x,y,*z\uff1a", "{*z=y-x\uff1b}", "main(){", "int a,b,c\uff1b", "sub(10\uff0c5\uff0c&a)\uff1bsub(7\uff0ca\uff0c&b)\uff1bsub(a\uff0cb\uff0c&C)\uff1b", "printf(\u201d\uff05d\uff0c\uff05d\uff0c\uff05d\uff3cn\u201d\uff0ca\uff0cb\uff0cC)\uff1b", "}", "A)5,2,3\u00a0\u00a0\u00a0 B)-5\uff0c-12,-7\u00a0\u00a0\u00a0 C)-5\uff0c-12,-17\u00a0\u00a0\u00a0 D)5,-2,-7", "B", "sub()\u51fd\u6570\u7684\u4f5c\u7528\u662f\u5c06\u5f62\u53c2y\u548cx\u7684\u5dee\u8d4b\u7ed9\u4e86z\u6307\u5411\u7684\u90a3\u4e2a\u5185\u5b58\u5730\u5740\uff0c\u6240\u4ee5\u5728sub(10,5,&a\uff0fI\uff0c10\u548c5\u5c5e\u4e8e\u503c\u4f20\u9012\uff0ca\u662f\u5c5e\u4e8e\u5730\u5740\u4f20\u9012\uff0c\u4e5f\u5c31\u662fa\u4e0ez\u6307\u5411\u4e86\u540c\u4e00\u4e2a\u5b58\u50a8\u5355\u5143\uff0c\u5728\u6267\u884c\u51fd\u6570\u540e\uff0ca\u7684\u503c\u968f*z\u53d8\u5316\uff0c\u6240\u4ee5\u6b64\u6b21\u51fd\u6570\u88ab\u8c03\u7528\u540e\uff0ca\u7684\u503c\u4e3ay-x=-5\uff0c\u540c\u7406\u53ef\u77e5\uff0c\u5728sub(7,a,&b)\u540e\uff0cb\u7684\u503c\u53d1\u751f\u53d8\u5316\uff0c\u5176\u503c\u4e3a-5-7=-12\uff0c\u5728sub(a,b,&C)\u540e\uff0cc\u7684\u503c\u53d1\u751f\u53d8\u5316\uff0c\u5176\u503c\u4e3a-12-(-5)=-7\u3002", "\u00a0", "(14)\u4e0b\u9762\u7a0b\u5e8f\u5728\u5c4f\u5e55\u4e0a\u7684\u8f93\u51fa\u662f________\u3002", "main()", "{", "printf(\u201dab\uff3cb\uff3cb c\u201d)\uff1b", "}", "A)ab\uff3cb\uff3cb c\u00a0\u00a0\u00a0 B)a c\u00a0\u00a0\u00a0 C)abc\u00a0\u00a0\u00a0 D)ab c", "B", "c\u8bed\u8a00\u4e2d\u5141\u8bb8\u4f7f\u7528\u4e00\u79cd\u7279\u6b8a\u5f62\u5f0f\u7684\u5b57\u7b26\u5e38\u91cf\uff0c\u3001\u5c31\u662f\u4ee5\u4e00\u4e2a\u201c\uff3c\u201d\u5f00\u5934\u7684\u5b57\u7b26\u5e8f\u5217\uff0c\u8fd9\u6837\u7684\u5b57\u7b26\u79f0\u4e3a\u201c\u8f6c\u4e49\u5b57\u7b26\u201d\u3002\u5e38\u7528\u7684\u8f6c\u4e49\u5b57\u7b26\u6709\uff1a\uff3cn\uff0c\u6362\u884c\uff1b\uff3ct\uff0c\u6c34\u5e73\u5236\u8868\uff1b\uff3cb\uff0c\u9000\u683c\uff1b\uff3cr\uff0c\u56de\u8f66\u3002", "\u00a0", "(15)\u82e5x\u662f\u6574\u578b\u53d8\u91cf\uff0cpb\u662f\u57fa\u7c7b\u578b\u4e3a\u6574\u578b\u7684\u6307\u9488\u53d8\u91cf\uff0c\u5219\u6b63\u786e\u7684\u8d4b\u503c\u8868\u8fbe\u5f0f\u662f_______\u3002", "A)pb=&x\uff1b\u00a0\u00a0\u00a0 B)pb=x\uff1b\u00a0\u00a0\u00a0 C)*pb=&x\uff1b\u00a0\u00a0\u00a0 D)*pb=*x", "A", "\u9009\u9879A\u5c06\u53d8\u91cfx\u7684\u5730\u5740\u8d4b\u7ed9\u6307\u9488\u53d8\u91cfpb\uff0c\u4f7fpb\u6307\u5411x\u2018\u9009\u9879B\u662f\u5c06x\u7684\u503c\u5f53\u4f5c\u5730\u5740\u8d4b\u7ed9\u6307\u9488pb\uff0cDb\u6307\u5411\u4e00\u4e2a\u5730\u5740\u7b49\u4e8ex\u503c\u7684\u5185\u5b58\u5355\u5143\uff1b\u9009\u9879c\u5c06x\u7684\u5730\u5740\u8d4b\u7ed9\u6307\u9488pb\u6307\u5411\u7684\u5730\u5740\u7b49\u4e8ex\u7684\u5185\u5b58\u5355\u5143\u3002", "\u00a0", "(16)\u8bbe\u6574\u578b\u6570i=5\uff0c\u5219printf(\u201c\uff05d\u201d\uff0ci+++++i)\uff1b\u7684\u8f93\u51fa\u4e3a________\u3002", "A)10\u00a0\u00a0\u00a0 B)1l\u00a0\u00a0\u00a0 C)12\u00a0\u00a0\u00a0 D)\u8bed\u6cd5\u9519\u8bef", "D", "c\u8bed\u8a00\u4e2d\u6709\u57fa\u672c\u7684\u7b97\u672f\u8fd0\u7b97\u7b26(+\u3001-\u3001*\u3001\uff0f)\u8fd8\u5305\u62ec\u81ea\u589e\u81ea\u51cf\u8fd0\u7b97\u7b26(++\u3001\u2013)\uff0c\u5728c\u8bed\u8a00\u89e3\u6790\u8868\u8fbe\u5f0f\u65f6\uff0c\u5b83\u603b\u662f\u8fdb\u884c\u8d2a\u5a6a\u5480\u56bc\uff0c\u8fd9\u6837\uff0c\u8be5\u8868\u8fbe\u5f0f\u5c31\u88ab\u89e3\u6790\u4e3ai++ ++ +i\uff0c\u663e\u7136\u8be5\u8868\u8fbe\u5f0f\u4e0d\u5408c\u8bed\u8a00\u8bed\u6cd5\u3002", "\u00a0", "(17)\u82e5\u8981\u7528\u4e0b\u9762\u7684\u7a0b\u5e8f\u7247\u6bb5\u4f7f\u6307\u9488\u53d8\u91cfp\u6307\u5411\u4e00\u4e2a\u5b58\u50a8\u6574\u578b\u53d8\u91cf\u7684\u52a8\u6001\u5b58\u50a8\u5355\u5143", "int\u00a0 \u00a0\u00a0\u00a0\u00a0*p\uff1b", "p=___________malloc(sizeof(im))\uff1b", "\u5219\u5e94\u586b\u5165__________\u3002", "A)int\u00a0\u00a0\u00a0 B)int \u00a0\u00a0\u00a0\u00a0C)(*int)\u00a0\u00a0\u00a0 D)(int*)", "D", "\u4e0d\u8bbap\u662f\u6307\u5411\u4ec0\u4e48\u7c7b\u578b\u7684\u6307\u9488\u53d8\u91cf\uff0c\u90fd\u53ef\u4ee5\u901a\u8fc7\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u7684\u65b9\u6cd5\u4f7f\u4e4b\u7c7b\u578b\u4e00\u81f4\uff0c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u7684\u683c\u5f0f\u4e3a(\u6570\u636e\u7c7b\u578b+)\u3002", "\u00a0", "(18)\u4e0b\u9762\u7a0b\u5e8f\u8f93\u51fa\u7684\u7ed3\u679c\u662f__________\u3002", "main()", "{", "int i=5,J=9\uff0cx\uff1b", "x=(I==j?i\uff1a(j=7))\uff1b", "printf(\u201d\uff3cn\uff05d\uff0c\uff05d\u201d\uff0cI,J)\uff1b", "}", "A)5,7\u00a0\u00a0\u00a0 B)5,5\u00a0\u00a0\u00a0 C)\u8bed\u6cd5\u9519\u8bef\u00a0\u00a0\u00a0 D)7,5", "A", "\u6761\u4ef6\u8868\u8fbe\u5f0f\u7684\u4e00\u822c\u5f62\u5f0f\u4e3a\uff1a\u8868\u8fbe\u5f0fI?\u8868\u8fbe\u5f0f2\uff1a\u8868\u8fbe\u5f0f3\uff1b\u5148\u6c42\u89e3\u8868\u8fbe\u5f0f1\uff0c\u82e5\u4e3a\u771f\u5219\u6c42\u89e3\u8868\u8fbe\u5f0f2\uff1b\u82e5\u8868\u8fbe\u5f0fl\u7684\u503c\u4e3a\u5047\uff0c\u5219\u6c42\u89e3\u8868\u8fbe\u5f0f3\u3002\u672c\u9898\u4e2d\u5148\u5224\u65adi==j\uff0c\u4e0d\u7b49\uff0c\u6267\u884cj=7\uff1b\u7136\u540e\u6267\u884cx=7\u3002\u6545\u672c\u9898\u4e3aA\u3002", "\u00a0", "(19)\u82e5\u6267\u884c\u4e0b\u9762\u7a0b\u5e8f\u65f6\u4ece\u952e\u76d8\u4e0a\u8f93\u51655\uff0c", "main()", "{", "int x\uff1a", "scanf(\u201d\uff05d\u201d\uff0c&x)\uff1b", "if(x++>5)printf(\u201d\uff05d\uff3cn\u201d\uff0cx)\uff1b", "else printf(\u201d\uff05d\uff3cn\u201d,x\u2013)\uff1b", "}", "\u5219\u8f93\u51fa\u662f________\u3002", "A)7\u00a0\u00a0\u00a0 B)6\u00a0\u00a0\u00a0 C)5\u00a0\u00a0\u00a0 D)4", "B", "\u6839\u636ec\u8bed\u8a00\u7684\u8bed\u6cd5\uff0cx++\u662f\u5728\u4f7f\u7528x\u4e4b\u540e\uff0c\u518d\u5c06x\u7684\u503c\u52a01\uff0c\u5728if\u8bed\u53e5\u4e2d\uff0cx\u7684\u503c\u4e3a5\uff0c\u6761\u4ef6\u4e0d\u6210\u7acb\uff0c\u6267\u884celse\u540e\u9762\u7684\u8bed\u53e5\uff0c\u56e0\u4e3ax\u7684\u503c\u5df2\u7ecf\u52a01\uff0c\u4e3a6\uff0c\u6240\u4ee5\u6253\u5370\u7ed3\u679c\u4e3a6\u3002", "\u00a0", "(20)\u82e5\u6709\u4ee5\u4e0b\u5b9a\u4e49\u548c\u8bed\u53e5\uff1a", "int a[]={l\uff0c2\uff0c3\uff0c4\uff0c5\uff0c6\uff0c7\uff0c8\uff0c9,10}\uff0c*p=a\uff1b", "\u5219\u503c\u4e3a3\u7684\u8868\u8fbe\u5f0f\u662f_________\u3002", "A)p+=2\uff0c*(p++)\u00a0\u00a0\u00a0 \u00a0\u00a0B)p+=2\uff0c*++p", "C)p+=3\uff0c*p++\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0D)p+=2\uff0c++*p", "A", "\u5f15\u7528\u4e00\u4e2a\u6570\u7ec4\u5143\u7d20\uff0c\u53ef\u4ee5\u7528\uff1a(1)\u4e0b\u6807\u6cd5\uff0c\u5982a[i]\u5f62\u5f0f\uff1b(2)\u6307\u9488\u6cd5\uff0c\u5982*(a+i)\u6216*(p+i)\u3002\u6570\u7ec4\u7684\u4e0b\u6807\u4ece0\u5f00\u59cb\uff0c\u503c\u4e3a3\u7684\u6570\u7ec4\u5143\u7d20\u662fa[2]\u3002B\u3001c\u7684\u5185\u5bb9\u4e3aa[3]\uff0cD\u5c06a[2]\u524d\u81ea\u52a0\uff0c\u7ed3\u679c\u4e3a4\u3002", "\u00a0", "(21)\u8bbea\u3001b\u548cc\u90fd\u662fint\u578b\u53d8\u91cf\uff0c\u4e14a=3\u3001b=4\u3001c=5\uff0c\u5219\u4e0b\u9762\u7684\u8868\u8fbe\u5f0f\u4e2d\uff0c\u503c\u4e3a0\u7684\u8868", "\u8fbe\u5f0f\u662f___________\u3002", "A)\u2019a\u2019&&\u2019b\u2019\u00a0\u00a0\u00a0 B)a<=b\u00a0\u00a0\u00a0 C)a\u2016+c&&b-c\u00a0\u00a0\u00a0 D)!((a<b)&&!c\u20161)", "D", "\u8bc4\u6790z\u9009\u9879A\uff1a\u2018a\u2019&&\u2018b\u2019\u662f\u5b57\u7b26a\u4e0eb\u7684\u76f8\u4e0e\uff0c\u4e0d\u4e3a0\uff1b\u9009\u9879B\uff1aa<=b\uff0c\u7531\u9898\u4e2d\u53d8\u91cf\u8d4b\u503c\u53ef\u77e5\uff0c\u7ed3\u679c\u4e3a1\u3002\u9009\u9879c\uff1aa\u2016+c&&b-c\uff0c\u7ed3\u679c\u4e3a1\uff1b\u9009\u9879D\uff1a!((a<b)&&!c\u20161)\uff0c\u8fd0\u7b97\u7ed3\u679c\u4e3aO\u3002", "\u00a0", "(22)\u4ee5\u4e0b\u7a0b\u5e8f\u8fd0\u884c\u540e\uff0c\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "main()", "{", "char*d[]\u3002{\u201cab\u201d\uff0c\u201dcde\u201d}\uff1b", "printf(\u201d\uff05x\u201d\uff0cd[1])\uff1b", "}", "A)cde\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)\u5b57\u7b26c\u7684ASCII\u7801\u503c", "C)\u5b57\u7b26c\u7684\u5730\u5740\u00a0\u00a0\u00a0 \u00a0\u00a0D)\u51fa\u9519", "C", "\u6307\u9488\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u76f8\u5f53\u4e8e\u4e00\u4e2a\u6307\u9488\u53d8\u91cf\u3002\u4e00\u7ef4\u6307\u9488\u6570\u7ec4\u7684\u5b9a\u4e49\u5f62\u5f0f\u4e3a\uff1a\u7c7b\u578b\u540d+\u6570\u7ec4\u540d[\u6570\u7ec4\u957f\u5ea6]\uff0c\u5728\u672c\u9898main\u51fd\u6570\u4e2d\u5b9a\u4e49\u6307\u9488\u6570\u7ec4d\uff0c\u5b83\u6709\u4e24\u4e2a\u5143\u7d20\uff0c\u5176\u521d\u503c\u5206\u522b\u662f\u201cab\u201d\u3001\u201ccde\u201d\u7684\u9996\u5730\u5740\u3002dB]\u7684\u503c\u4e3a\u201dcde\u201d\u7684\u9996\u5730\u5740\u3002\uff05x\u662f\u6307\u4ee5\u5341\u516d\u8fdb\u5236\u6570\u5f62\u5f0f\u8f93\u51fa\u6574\u6570\u3002", "\u00a0", "(23)\u8bbe\u6709\u5982\u4e0b\u7a0b\u5e8f", "#include<stdio\uff0eh>", "main()", "{", "int**k\uff0c*j\uff0ci=100\uff1b", "j=&i\uff1b\u00a0 k=&j\uff1b", "printf(\u201d\uff05d\uff3cn\u201d\uff0c**k)\uff1b", "}", "\u4e0a\u8ff0\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "A)\u8fd0\u884c\u9519\u8bef\u00a0 \u00a0\u00a0\u00a0B)100\u00a0\u00a0\u00a0 C)i\u7684\u5730\u5740\u00a0\u00a0\u00a0 D)j\u7684\u5730\u5740", "B", "j=&i\uff0cj\u7684\u503c\u5c31\u662fi\u7684\u5730\u5740\uff0c*j=100\uff0c\u5c06j\u7684\u5730\u5740\u8d4b\u7ed9k\uff0c\u8fd9\u65f6*k=j\uff0c\u90a3\u4e48\uff0c**k=*j\uff0c\u800c1=100\uff0c\u6240\u4ee5**k=100\uff0c\u6700\u540e\u7684\u6253\u5370\u7ed3\u679c\u5e94\u5f53\u4e3a100\u3002", "\u00a0", "(24)\u8bbe\u6709\u4ee5\u4e0b\u8bed\u53e5\uff0c\u5176\u4e2d\u4e0d\u662f\u5bf9a\u6570\u7ec4\u5143\u7d20\u7684\u6b63\u786e\u5f15\u7528\u7684\u662f\uff1a_______(\u5176\u4e2dO\u2264i<10)", "int a=[10]={0\uff0c1\uff0c2\uff0c3\uff0c4\uff0c5\uff0c6\uff0c7\uff0c8\uff0c9\uff0c}\uff0c*p=a\uff1b", "A)a[p-a]\u00a0\u00a0\u00a0 B)\u3002(&a[i])\u00a0\u00a0\u00a0 C)p[I]\u00a0\u00a0\u00a0 D)*(*(a+i))", "D", "\u89c2\u5bdf\u7a0b\u5e8f\u53ef\u77e5\uff0ca\u5b9e\u9645\u4e0a\u5c31\u662f\u6570\u7ec4a\u7684\u9996\u5730\u5740\uff0c\u6240\u4ee5\u201c+(a+i)\u201d\u8868\u793a\u7684\u5c31\u662f\u6570\u7ec4a\u4e2d\u7684\u7b2ci\u4e2a\u5143\u7d20\u7684\u503c\uff0c\u8fdb\u800c\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053+(t(a+i))\u5fc5\u7136\u4e0d\u662f\u5bf9a\u6570\u7ec4\u5143\u7d20\u7684\u6b63\u786e\u5f15\u7528\u3002", "\u00a0", "(25)\u4ee5\u4e0b\u7a0b\u5e8f\u8fd0\u884c\u540e\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a________\u3002", "main()", "{", "int a[2][3]={1,3,5,7,9,1 1}\uff0c*s[2]\uff0c**pp\uff0c*p\uff1b", "s[0]=a[0]\uff0cs[1]=a[1]\uff1b", "pp=s\uff1b", "p=(int*)malloc(sizeof(int))\uff1b", "**pp=s[1][1]\uff1b", "p=*PP\uff1b", "printf(\u201d\uff05d\uff3cn\u201d\uff0c*p)\uff1b", "}", "A)l\u00a0\u00a0\u00a0 B)7\u00a0\u00a0\u00a0 C)9\u00a0\u00a0\u00a0 D)1l", "C", "s\u662f\u4e00\u4e2a\u542b\u6709\u4e24\u4e2a\u5143\u7d20\u7684\u6307\u9488\u6570\u7ec4\uff0cpp\u662f\u4e00\u4e2a\u6307\u5411\u6307\u9488\u53d8\u91cf\u7684\u6307\u9488\uff0cs[O]\u662f\u6307\u5411\u4e8c\u7ef4\u6570\u7ec4a\u884c\u4e0b\u6807\u4e3a0\u7684\u5143\u7d20\u7684\u9996\u5730\u5740\uff0c\u5373a[0\u513f0]\u7684\u5730\u5740\uff0cs[1]\u4e3aa[1][0]\u7684\u5730\u5740\u3002pp\u7684\u503c\u4e3as[O]\u7684\u5730\u5740\u3002**pp=s[1][l]\u540e\uff0ca[0][0]\u7684\u503c\u5c06\u88ab\u8d4b\u503c\u4e3aall][l]\u7684\u503c\uff0c\u6267\u884cp=*pp\uff1b\u540e\uff0cp\u4e2d\u5c06\u662fs[0]\u7684\u503c\uff0c\u6700\u540e\u7684\u8f93\u51fa\u8bed\u53e5\u5c06\u8f93\u51fa\u5730\u5740s[0]\u6240\u6307\u5411\u7684\u6570\u636e\uff0c\u5373a[0][O]\u3002", "\u00a0", "(26)\u6709\u4ee5\u4e0b\u7a0b\u5e8f\uff1a", "#include<stdio\uff0eh>", "main(){", "char c[6]\uff1b", "int I=0\uff1a", "for(\uff1bi<6\uff1bc[-]=getchar()\uff0ci++)\uff1b", "for(I=0\uff1bi<6\uff1bi++)putchar(c[i])\uff1b", "primf(\u201d\uff3cn\u201d)\uff1b", "}", "\u5982\u679c\u4ece\u952e\u76d8\u4e0a\u8f93\u5165\uff1a", "ab<\u56de\u8f66>", "c<\u56de\u8f66>", "def<\u56de\u8f66>", "\u5219\u8f93\u51fa\u7ed3\u679c\u4e3a_________.", "A)a\u00a0\u00a0\u00a0 B)a\u00a0\u00a0\u00a0 C)ab\u00a0\u00a0\u00a0 D)abcdef", "b\u00a0\u00a0\u00a0 \u00a0\u00a0b\u00a0\u00a0\u00a0 \u00a0\u00a0c", "c\u00a0\u00a0\u00a0 \u00a0\u00a0c\u00a0\u00a0\u00a0 \u00a0\u00a0d", "d\u00a0\u00a0\u00a0 \u00a0\u00a0d", "e", "f", "C", "1\uff0egetchar()\uff1a\u6b64\u51fd\u6570\u7684\u4f5c\u7528\u662f\u4ece\u7ec8\u7aef(\u6216\u7cfb\u7edf\u9690\u542b\u6307\u5b9a\u7684\u8f93\u5165\u8bbe\u5907)\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u3002", "2\uff0eputchar()\uff1a\u6b64\u51fd\u6570\u7684\u4f5c\u7528\u662f\u5411\u7ec8\u7aef\u8f93\u51fa\u4e00\u4e2a\u5b57\u7b26\uff0c\u4e5f\u53ef\u4ee5\u8f93\u51fa\u63a7\u5236\u5b57\u7b26\u3002", "\u672c\u9898\u5728\u8f93\u5165\u5b57\u7b26\u65f6\uff0cab\u548cc\u540e\u9762\u7684\u56de\u8f66\u7b26\u5206\u522b\u8d4b\u7ed9\u4e86c[2]\u548ce[4]\uff0c\u6240\u4ee5\uff0c\u6b63\u786e\u7b54\u6848\u4e3ac\u3002", "\u00a0", "(27)\u5728\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u5982\u679c\u5b9e\u53c2\u662f\u7b80\u5355\u53d8\u91cf\uff0c\u5b83\u4e0e\u5bf9\u5e94\u5f62\u53c2\u4e4b\u95f4\u7684\u6570\u636e\u4f20\u9012\u65b9\u5f0f\u662f_______\u3002", "A)\u5730\u5740\u4f20\u9012\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)\u5355\u5411\u503c\u4f20\u9012", "C)\u7531\u5b9e\u53c2\u4f20\u9012\u7ed9\u5f62\u53c2\uff0c\u518d\u7531\u5f62\u53c2\u4f20\u9012\u7ed9\u5b9e\u53c2", "D)\u4f20\u9012\u65b9\u5f0f\u7531\u7528\u6237\u6307\u5b9a", "B", "c\u8bed\u8a00\u89c4\u5b9a\uff0c\u5b9e\u53c2\u53d8\u91cf\u5bf9\u5f62\u53c2\u53d8\u91cf\u7684\u6570\u636e\u4f20\u9012\u662f\u201c\u5355\u5411\u503c\u4f20\u9012\u201d\uff0c\u53ea\u7531\u5b9e\u53c2\u4f20\u7ed9\u5f62\u53c2\u3002\u5728\u5185\u5b58\u4e2d\uff0c\u5b9e\u53c2\u5355\u5143\u4e0e\u5f62\u53c2\u5355\u5143\u662f\u4e0d\u540c\u7684\u5355\u5143\u3002\u8c03\u7528\u7ed3\u675f\u540e\uff0c\u5b9e\u53c2\u5355\u5143\u4ecd\u4fdd\u7559\u5e76\u7ef4\u6301\u539f\u503c\u3002", "\u00a0", "(28)\u4e0b\u9762\u7a0b\u5e8f", "#include<stdio\uff0eh>", "#include<string\uff0eh>", "main()", "{\u00a0 char*p1=\u201dabc\u201d\uff0c*p2=\u201dABC\u201d,str[50]=\u201dxyz\u201d\uff1b", "strcpy(str+2,strcat(p1,p2))\uff1b", "printf(\u201d\uff05s\uff3cn\u201d,str)\uff1b", "}", "\u7684\u8f93\u51fa\u662f_________\u3002", "A)xyzabcABC\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)zabcABC", "C)yzabcABC\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0D)xyabcABC", "D", "strcat(pl,p2)\u5c06\u5b57\u7b26\u4e32abcABC\u653e\u5230\u4e86*pl\u6240\u6307\u5411\u7684\u5b58\u50a8\u5355\u5143\u4e2d\uff1bstrcpy\u5728\u672c\u9898\u5c06abcABC\u590d\u5236\u5230str+2\u6240\u6307\u5411\u7684\u5b58\u50a8\u5355\u5143\u4e2d\uff0c\u5373\u8986\u76d6\u539fstr\u6570\u7ec4\u4e2d\u7684\u5b57\u7b26z\u53ca\u5176\u540e\u7684\u6240\u6709\u5b57\u7b26\uff0c\u6545str\u7684\u503c\u4e3a\u201dxyabcABC\u201d\u3002", "\u00a0", "(29)\u4e0b\u9762\u7a0b\u5e8f", "int aa[3][3]\uff1a{{2}\uff0c{4}\uff0c{6}}\uff1b", "main()", "{\u00a0\u00a0 int i\uff0c*p\uff1a&aa[0][0]\uff1b", "for(I=0\uff1bi<2\uff1bi++){", "if(i==0)aa[I][i+l]=*p+1\uff1b", "else++p\uff1b", "printf(\u201d\uff05d\u2019\uff0e\uff0c\u3002p)\uff1b", "}", "}", "\u7684\u8f93\u51fa\u662f__________\u3002", "A)23\u00a0\u00a0\u00a0 B)26\u00a0\u00a0\u00a0 C)33\u00a0\u00a0\u00a0 D)36", "A", "\u89c2\u5bdf\u9898\u76ee\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c*p=&aa[01[o]\u8bed\u53e5\u5b9e\u9645\u662f\u5c06\u6570\u7ec4aa\u7684\u9996\u5730\u5740\u8d4b\u7ed9\u4e86\u6307\u9488\u53d8\u91cfp\uff0c\u5c06i\u7684\u503c\u5e26\u5165for\u5faa\u73af\u4e2d\uff0ci=0\u65f6\uff0caa[0][1]=3\uff0c+p=2\uff1b*p\u8f93\u51fa\u7684\u662f\u6307\u9488\u6240\u6307\u5411\u7684\u6570\u7ec4\u503c\uff0c\u6b64\u65f6p\u6240\u6307\u5411\u7684\u662faa[O][O]\uff0c\u8f93\u51fa2\uff0c\u800ci=l\u65f6\u6267\u884c\u4e86++p\u64cd\u4f5c\u4f7f\u6307\u9488\u5411\u540e\u79fb\u52a8\u6307\u5411\u4e86aa[O\u513f1]\uff0c\u6240\u4ee5\u5728\u8f93\u51fa*p\u65f6\u5e94\u4e3a3\u3002", "\u00a0", "(30)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "#include<stdio\uff0eh>", "#include<s~ing\uff0eh>", "fun(char*w,int n)", "{", "char t\uff0c*s1,*s2\uff1b", "s1=w\uff1bs2=w+n-l\uff1a", "while(s1<s2)", "{", "t=*s1++\uff1a", "*sl=*s2\u2013\uff1b", "*s2=t\uff1b", "}", "}", "main()", "{", "char*p\uff1b", "p=\u201d1234567\u2033\uff1b", "fun(p\uff0cstrlen(p))\uff1b", "puts(p)\uff1b", "}", "A)1234567\u00a0\u00a0\u00a0 B)7654321\u00a0\u00a0\u00a0 C)1711717\u00a0\u00a0\u00a0 D)717717l", "C", "\u5728\u5b50\u51fd\u6570fun\u4e2d\uff0csl\u4e3a\u5b57\u7b26\u4e32w\u7684\u8d77\u59cb\u5730\u5740\uff0cs2\u4e3a\u5b57\u7b26\u4e32\u7684\u7ed3\u675f\u5730\u5740(\u5b57\u7b26\u2018\uff3cO\u2019\u9664\u5916)\uff0c\u5f53\u6267\u884c\u5faa\u73af\u7ed3\u675f\u5faa\u73af\uff0cw=\u201c1711717\u201d\u3002", "\u00a0", "\u00a0", "(31)\u4e0b\u9762\u7a0b\u5e8f", "main()", "{\u00a0 int x=100\uff0ca=10\uff0cb=20\uff0cokl=5\uff0cok2=0\uff1b", "if(a<b)", "if(b!=15)", "if(10k1)\u00a0 x=l\uff1b", "else i\u201coL2)x\u300210\uff1b", "X=-1\uff1b", "Printf(\uff05d\uff3cn\u201d\uff0cx)\uff1b", "}", "\u7684\u8f93\u51fa\u662f________\u3002", "A)-1\u00a0\u00a0\u00a0 B)0\u00a0\u00a0\u00a0 C)1\u00a0\u00a0\u00a0 D)\u4e0d\u786e\u5b9a\u7684\u503c", "A", "\u7b2c\u4e00\u4e2a\u5224\u65ad\u503c\u4e3a\u771f\uff0c\u8fc7\u6e21\u5230\u4e0b\u4e00\u4e2a\u5224\u65ad\uff0c\u7b2c\u4e8c\u4e2a\u5224\u65ad\u4e3a\u771f\uff0c\u8fc7\u6e21\u5230\u7b2c\u4e09\u4e2a\u5224\u65ad\u2026\u2026\u5982\u6b64\u5faa\u73af,\u5728\u6253\u5370\u8f93\u51fa\u8bed\u53e5\u7684\u524d\u4e00\u884c\uff0c\u7a0b\u5e8f\u7ed9\u53d8\u91cfx\u8d4b\u4e86\u503c\uff0c\u4e3a\uff0e1\uff0c\u6240\u4ee5\uff0c\u65e0\u8bba\u524d\u671f\u5982\u4f55\u53d8\u5316\uff0c\u6700\u540e\u7684x\u503c\u4f9d\u7136\u4e3a-1\u3002", "\u00a0", "(32)\u4e0b\u9762\u7a0b\u5e8f", "main()", "{", "int x=32\uff1a", "printf(\u201d\uff05d\uff3cn\u201d\uff0cx=x<<1)\uff1b", "}", "\u7684\u8f93\u51fa\u662f________\u3002", "A)100\u00a0\u00a0\u00a0 B)160\u00a0\u00a0\u00a0 C)120\u00a0\u00a0\u00a0 D)64", "D", "<<\u662fc\u8bed\u8a00\u4e2d\u89c4\u5b9a\u7684\u5de6\u79fb\u8fd0\u7b97\u7b26\uff0c\u4f8b\u5982\uff0ca=a<<2\uff0c\u8fd9\u4e2a\u8bed\u53e5\u5373\u662f\u5c06a\u7684\u4e8c\u8fdb\u5236\u6570\u5de6\u79fb\u4e24\u4f4d\uff0c\u5de6\u79fb\u4e00\u4f4d\u76f8\u5f53\u4e8e\u8be5\u6570\u4e58\u4e8e2\uff0c\u5de6\u79fb\u4e24\u4f4d\u76f8\u5f53\u4e8e\u8be5\u6570\u4e58\u4ee52\u76842\u6b21\u65b9\u3002\u6240\u4ee5\uff0cx<<1=32\uff0e2=64\u3002", "\u00a0", "(33)\u8bbe\u6709\u4ee5\u4e0b\u5b9a\u4e49\u548c\u8bed\u53e5\uff0c\u8f93\u51fa\u7684\u7ed3\u679c\u662f(\u7528small\u6a21\u5f0f\u7f16\u8bd1\uff0c\u6307\u9488\u53d8\u91cf\u53602\u4e2a\u5b57\u8282)_________\u3002", "\u00a0", "struct date", "{", "long *cat\uff1b", "struct date *next\uff1b", "double dog\uff1b", "}too\uff1b", "printf(\u201d\uff05d\u201d,sizeof(too))\uff1b", "A)20\u00a0\u00a0\u00a0 B)16\u00a0\u00a0\u00a0 C)14\u00a0\u00a0\u00a0 D)12", "D", "sizeof\u51fd\u6570\u8ba1\u7b97\u5df2\u77e5\u7c7b\u578b\u6240\u5360\u7684\u5b57\u8282\u6570\u3002\u7ed3\u6784\u4f53\u53d8\u91cf\u6240\u5360\u5185\u5b58\u957f\u5ea6\u662f\u5404\u6210\u5458\u5360\u7684\u5185\u5b58\u957f\u5ea6\u4e4b\u548c\u3002\u6307\u9488\u53d8\u91cf\u53602\u4e2a\u5b57\u8282\uff0c\u6240\u4ee5cat\u548c*next\u5404\u53602\u4e2a\u5b57\u8282\uff1bdouble\u578b\u53608\u4e2a\u5b57\u8282\uff0c\u6545too\u5171\u536012\u4e2a\u5b57\u8282\u3002", "\u00a0", "(34)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "#include<stdio\uff0eh>", "#define FUDGE(y)\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a02\uff0e84+y", "#define PR(a)printf\u00a0\u00a0\u00a0 (\u201d\uff05d\u201d\uff0c(int)(a))", "#define PRINT l(a)\u00a0 \u00a0\u00a0\u00a0PR(a)\uff1bputchar(\u2019\uff3cn\u2019)", "main()", "{\u00a0 intx=2\uff1b", "PRINTl(FUDGE(5)*x)\uff1b", "}", "A)ll\u00a0\u00a0\u00a0 B)12\u00a0\u00a0\u00a0 C)13\u00a0\u00a0\u00a0 D)15", "B", "\u5728\u7a0b\u5e8f\u4e2d\u5982\u679c\u6709\u5e26\u5b9e\u53c2\u7684\u5b8f\uff0c\u5219\u6309#define\u547d\u4ee4\u884c\u4e2d\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u4ece\u5de6\u5230\u53f3\u8fdb\u884c\u7f6e\u6362\uff0c\u5982\u679c\u4e32\u4e2d\u5305\u542b\u5b8f\u4e2d\u7684\u5f62\u53c2\uff0c\u5219\u5c06\u7a0b\u5e8f\u8bed\u53e5\u4e2d\u76f8\u5e94\u7684\u5b9e\u53c2\u4ee3\u66ff\u5f62\u53c2\u3002\u5c06\u5b9e\u53c2\u5e26\u5165\u5df2\u7ecf\u5b9a\u4e49\u7684\u5b8f\u4e2d\uff0c\u53ef\u4ee5\u5f97\u51fa\u7b54\u6848\u706f\u201c12\u201d\u3002", "\u00a0", "(35)\u4ee5\u4e0b\u7a0b\u5e8f\u6bb5\u7ed9\u6570\u7ec4\u6240\u6709\u7684\u5143\u7d20\u8f93\u5165\u6570\u636e\uff0c\u8bf7\u9009\u62e9\u6b63\u786e\u7b54\u6848\u586b\u5165\uff1a", "#include<stdio\uff0eh>", "main()", "{", "int a[10]\uff0ci=O\uff1b", "while(i<l0)scanf(\u201d\uff05d\u201d\uff0c________)\uff1b", ":", ":", "}", "A)a+(i++)\u00a0\u00a0\u00a0 B)&a[i+l]\u00a0\u00a0\u00a0 C)a+i\u00a0\u00a0\u00a0 D)\uff06a[++I]", "A", "a\u5c31\u662f\u6570\u7ec4a\u7684\u9996\u5730\u5740\uff0c\u800ca+x\u662f\u6570\u7ec4\u4e2d\u7b2cx\u4e2a\u5143\u7d20\u7684\u5730\u5740\uff0c\u3002\u6240\u4ee5\u5728\u56db\u4e2a\u9009\u9879\u4e2d\uff0c\u9009\u9879B\u548cc\u53ea\u80fd\u8f93\u5165\u4e00\u4e2a\u6570\u636e\uff0c\u9009\u9879D\u4e0d\u80fd\u7ed9a[O]\u8f93\u5165\u6570\u636e\uff0c\u53ea\u6709A\u53ef\u4ee5\u5b8c\u6210\u7ed9\u6570\u7ec4\u6240\u6709\u7684\u5143\u7d20\u8f93\u5165\u6570\u636e\u7684\u4efb\u52a1\u3002", "\u00a0", "(36)\u4ee5\u4e0b\u5bf9\u679a\u4e3e\u7c7b\u578b\u540d\u7684\u5b9a\u4e49\u4e2d\u6b63\u786e\u7684\u662f________\u3002", "A)enum a={one,two,three}\uff1b\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)enum a{one=9,two=-1\uff0cthree}\uff1b", "C)enum a={\u201cone\u201d\uff0c\u201dtwo\u201d,\u201dthree\u201d}\uff1b\u00a0 D)enum a{\u201cone\u201d\uff0c\u201dtwo\u201d,\u201dthree\u201d}\uff1b", "B", "\u58f0\u660e\u679a\u4e3e\u7c7b\u578b\u7528enum\u5f00\u5934\u3002\u4f8b\u5982\uff1aenum weekday(sun,mon,tue,wed,thu,fri,sat)\uff1b", "\u8bf4\u660e\uff1a1\u3001\u5728c\u7f16\u8bd1\u4e2d\uff0c\u5bf9\u679a\u4e3e\u5143\u7d20\u6309\u5e38\u91cf\u5904\u7406\uff0c\u540c\u65f6\u53ef\u4ee5\u6539\u53d8\u4ed6\u4eec\u7684\u503c\u30022\u3001\u679a\u4e3e\u503c\u53ef\u4ee5\u7528\u6765\u505a\u5224\u65ad\u6bd4\u8f83\u30023\u3001\u4e00\u4e2a\u6574\u6570\u4e0d\u80fd\u76f4\u63a5\u8d4b\u7ed9\u4e00\u4e2a\u679a\u4e3e\u53d8\u91cf\u3002", "\u00a0", "(37)\u5b57\u7b26(char)\u578b\u6570\u636e\u5728\u5fae\u673a\u5185\u5b58\u4e2d\u7684\u5b58\u50a8\u5f62\u5f0f\u662f________.", "A)\u53cd\u7801\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)\u8865\u7801", "C)EBCDIC\u7801\u00a0\u00a0\u00a0 \u00a0\u00a0D)ASCII\u7801", "D", "\u5c06\u4e00\u4e2a\u5b57\u7b26\u5e38\u91cf\u653e\u5230\u4e00\u4e2a\u5b57\u7b26\u53d8\u91cf\u4e2d\uff0c\u5b9e\u9645\u4e0a\u5e76\u4e0d\u662f\u628a\u8be5\u5b57\u7b26\u672c\u8eab\u653e\u5230\u5185\u5b58\u5355\u5143\u4e2d\u53bb\uff0c\u800c\u662f\u5c06\u8be5\u5b57\u7b26\u7684ASCII\u7801\u503c\u653e\u5230\u5b58\u50a8\u5355\u5143\u4e2d\u3002", "\u00a0", "(38)\u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u662f________\u3002", "typedef union", "{\u00a0 long x[2]\uff1b", "int y[4]\uff1b", "char z[8]\uff1b", "}MYTYPE\uff1b", "MYTYPE them\uff1b", "main()", "{\u00a0 printf(\u201d\uff05d\uff3cn\u201d,sizeof(them))\uff1b}", "A)32\u00a0\u00a0\u00a0 B)16\u00a0\u00a0\u00a0 C)8\u00a0\u00a0\u00a0 D)24", "C", "sizeof(x)\u662f\u4e00\u4e2a\u6807\u51c6c\u51fd\u6570\uff0c\u5b83\u7684\u8fd4\u56de\u503c\u662fx\u578b\u7684\u6570\u636e\u7ed3\u6784\u5360\u7528\u7684\u5185\u5b58\u5b57\u8282\u6570\u3002\u9898\u76ee\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5171\u7528\u4f53\uff0c\u5171\u7528\u4f53\u53d8\u91cf\u5728\u5185\u5b58\u4e2d\u6240\u5360\u7684\u957f\u5ea6\u7b49\u4e8e\u6700\u957f\u7684\u6210\u5458\u7684\u957f\u5ea6\u3002", "\u00a0", "(39)\u6709\u4ee5\u4e0b\u7a0b\u5e8f\uff0c\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "Int f(intb[][4])", "{\u00a0 int I,J\uff0cs=O\uff1b", "for(j=00<4;j++)", "{", "I=j\uff1b", "if(I>2)i=3-j\uff1b", "s+=b[i][j]\uff1b", "}", "return s\uff1a", "}", "main()", "{", "int a[4][4]={{1\uff0c2\uff0c3\uff0c4}\uff0c{O\uff0c2\uff0c4\uff0c6}\uff0c{3\uff0c6\uff0c9\uff0c12}\uff0c{3\uff0c2\uff0c1\uff0c0}}\uff1b", "printf(\u201d\uff05d\uff3cn\u201d\uff0cf(a))\uff1b", "}", "A)22\u00a0\u00a0\u00a0 B)ll\u00a0\u00a0\u00a0 C)18\u00a0\u00a0\u00a0 D)16", "D", "\u672c\u9898\u901a\u8fc7\u51fd\u6570\u8c03\u7528\u5bf9\u6570\u7ec4a[0][0]\u3001a[1][l]\u3001a[2112]\u3001a[0][3]\u8fdb\u884c\u6c42\u548c\uff0c\u7136\u540e\u7528return\u8bed\u53e5\u8fd4\u56des\u7684\u503c\u3002", "\u00a0", "(40)\u4e0d\u80fd\u628a\u5b57\u7b26\u4e32\uff1aHello!\u8d4b\u7ed9\u6570\u7ec4b\u7684\u8bed\u53e5\u662f_________\u3002", "A)charb[10]={\u2018H\u2019\uff0c\u2019e\u2019\uff0c\u20191\u2019,\u2019l\u2019\uff0c\u20190\u2019\uff0c\u2019!\u2019}\uff1b", "B)char b[10]={\u2018h\u2019\uff0c\u2019e\u2019\uff0c\u20191\u2019,\u2019l\u2019\u2019O\u2019\uff0c\u2019!\u2019}\uff1b", "C)charb[10]\uff1bstrcpy(b\uff0c\u201dHello!\u201d)\uff1b", "D)char b[10]=\u201dHello!\u201d\uff1b", "B", "\u5728c\u8bed\u8a00\u4e2d\uff0c\u5927\u5199\u5b57\u6bcd\u548c\u5c0f\u5199\u5b57\u6bcd\u88ab\u8ba4\u4e3a\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u5b57\u7b26\uff0c\u56e0\u6b64\uff0c\u201chello!\u201d\u548c\u201cHello!\u201d\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u5b57\u7b26\u4e32\u3002", "\u00a0", "(41)\u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u662f_________\u3002", "main()", "{\u00a0 int x=3\uff0cy=6\uff0ca=0\uff1b", "while(x++!=(y-=1))", "{\u00a0 a+=1\uff1b", "if(y<x)break\uff1b", "}", "primf(\u201dx=\uff05d\uff0cy=\uff05d\uff0ca=\uff05d\uff3cn\u201d\uff0cx\uff0cy\uff0ca)\uff1b", "}", "A)x=4\uff0cy=4\uff0ca=1\u00a0\u00a0\u00a0 B)X=5\uff0cy=5\uff0ca=1", "C)x=5\uff0cy=4\uff0ca=3\u00a0\u00a0\u00a0 D)x=5\uff0cy=4\uff0ca=l", "D", "\u6ce8\u610f\u7684\u662fx++\u4e2dx\u503c\u7684\u5f15\u7528\u65f6\uff0c\u8fd9\u91cc\u5e94\u5f53\u662f\u5148\u5f15\u7528\uff0c\u540e\u81ea\u52a0\uff0c\u5177\u4f53\u6267\u884c\u8fc7\u7a0b\u5982\u4e0b\uff1a", "\u7b2c\u4e00\u6b21while\u5faa\u73af\uff1a\u6761\u4ef6\u4e3a\u771f\uff0c\u6267\u884ca=a+l=l\uff1b\u6b64\u65f6\uff0cx\u7684\u503c\u5df2\u4e3a4\uff0c\u5224\u65ady<x\u4e0d\u6210\u7acb\uff0c\u7ee7\u7eed\u6267\u884c\u5faa\u73af\uff1b", "\u7b2c\u4e8c\u6b21while\u5faa\u73af\uff1a\u6761\u4ef6\u4e3a\u5047\uff0c\u6b64\u65f6x\u7684\u503c\u5df2\u4e3a5\uff0c\u9000\u51fawhile\u5faa\u73af\uff0c\u6267\u884cprintf\u3002", "\u00a0", "(42)\u82e5\u6709\u7a0b\u5e8f\uff1a", "fun(int a\uff0cint b)", "{", "static int c=O\uff1a", "c+\uff1aa+b\uff1a", "return C\uff1b", "}", "main()", "{", "int x=5\uff0cy=3\uff0cz=7\uff0cr\uff1b", "r=fun((y\uff0cx+y)\uff0cz)\uff1b", "r=fun(x,y)\uff1b", "printf(\u201d\uff05d\uff3cn\u201d\uff0cr)\uff1b", "}", "\u4e0a\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f__________\u3002", "A)23\u00a0\u00a0\u00a0 B)15\u00a0\u00a0\u00a0 \u00a0\u00a0C)19\u00a0\u00a0\u00a0 D)18", "A", "stoic\u58f0\u660e\u7684\u5916\u90e8\u53d8\u91cf\u53ea\u9650\u4e8e\u88ab\u672c\u6587\u4ef6\u5f15\u7528\uff0c\u800c\u4e0d\u80fd\u88ab\u5176\u4ed6\u6587\u4ef6\u5f15\u7528\u3002\u7528static\u6765\u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\u7684\u4f5c\u7528\u6709\uff1a\u2460\u5bf9\u5c40\u90e8\u53d8\u91cf\u7528static\u58f0\u660e\uff0c\u5219\u4e3a\u8be5\u53d8\u91cf\u5206\u914d\u7684\u7a7a\u95f4\u5728\u6574\u4e2a\u7a0b\u5e8f\u6267\u884c\u671f\u95f4\u59cb\u7ec8\u5b58\u5728\uff1b\u2461\u5168\u90e8\u53d8\u91cf\u7528static\u58f0\u660e\uff0c\u5219\u8be5\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u53ea\u9650\u4e8e\u672c\u6587\u4ef6\u6a21\u5757(\u5373\u88ab\u58f0\u660e\u7684\u6587\u4ef6\u4e2d)\u3002\u8c03\u7528\u7b2c\u4e00\u4e2afun\uff0c\u5176\u4e24\u4e2a\u5b9e\u53c2\u7684\u503c\u4e3a(3\uff0c5+3)\u4e0e7\u53738\u4e0e7\uff0c\u5728\u51fd\u6570fun\u6267\u884c\u7ed3\u675f\u8fd4\u56de15\u3002\u7b2c\u4e8c\u6b21\u8c03\u7528fun\u65f6\uff0c\u7531\u4e8estat~\u4e3a\u9759\u6001\u7c7b\u578b\uff0c\u5176\u503c\u4fdd\u7559\uff0c\u6267\u884cfun(5,3)\u540e\uff0c\u5176\u8fd4\u56de\u503c\u4e3a23\uff0c\u6545\u9009A\u3002", "\u00a0", "(43)\u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u662f________\u3002", "main()", "{char*s=\u201d12134211\u201d\uff1b", "int vl=0,v2=0,v3=0,v4=0\uff0ck\uff1b", "for(k=0\uff1bs[k]\uff1bk++)", "switch(s[k])", "{\u00a0\u00a0 default\uff1av4++\uff1b", "case\u2019l'\uff1avl++\uff1b", "case\u20193\u2032\uff1av3++\uff1b", "case\u20192\u2032\uff1av2++\uff1b", "}", "printf(\u201dv1=\uff05d,v2=\uff05d,v3=\uff05d,v4=\uff05d\uff3cn\u201d,v1,v2,v3,v4)\uff1b", "}", "A)vl=4,v2=2,v3=l,v4=l\u00a0\u00a0\u00a0 B)vl=4,v2=9,v3=3,v4=l", "C)vl=5,v2=8,v3=6,v4=l\u00a0\u00a0\u00a0 D)vl=8,v2=8,v3=8,v4=8", "C", "\u5f53switch\u540e\u9762\u62ec\u5f27\u5185\u7684\u8868\u8fbe\u5f0f\u7684\u503c\u4e0e\u67d0\u4e00\u4e2acase\u540e\u9762\u7684\u5e38\u91cf\u7684\u8868\u8fbe\u5f0f\u7684\u503c\u76f8\u7b49\u65f6\uff0c\u5c31\u6267\u884c\u6b64caSe\u540e\u9762\u7684\u8bed\u53e5\uff0c\u82e5\u6240\u6709\u7684case\u4e2d\u7684\u5e38\u91cf\u8868\u8fbe\u5f0f\u7684\u503c\u90fd\u6ca1\u6709\u4e0e\u8868\u8fbe\u5f0f\u7684\u503c\u5339\u914d\u7684\uff0c\u5c31\u6267\u884cdefault\u540e\u9762\u7684\u8bed\u53e5\u3002", "\u00a0", "(44)\u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u662f_________\u3002", "main()", "{ int k=11\uff1b", "printf(\u201dk=\uff05d\uff0ck=\uff05o\uff0ck=\uff05x\uff3cn\u201d\uff0ck\uff0ck\uff0ck)\uff1b", "}", "A)k=l1,k=12,k=l1\u00a0\u00a0\u00a0 \u00a0\u00a0B)k=ll,k=13,k=13", "C)k=l1,k=013,k=0xb\u00a0\u00a0\u00a0 D)k=l1,k=13,k=B", "D", "\u5728C\u8bed\u8a00\u683c\u5f0f\u5b57\u7b26\u7684\u8f93\u51fa\u4e2d\uff0c\u201c\uff05d\u201d\u662f\u4ee5\u5e26\u7b26\u53f7\u7684\u5341\u8fdb\u5236\u5f62\u5f0f\u8f93\u51fa\u6574\u6570\uff1b\u201c\uff050\u201d\u662f\u4ee58\u8fdb\u5236\u65e0\u7b26\u53f7\u5f62\u5f0f\u8f93\u51fa\u6574\u6570(\u4e0d\u8f93\u51fa\u524d\u5bfc\u7b26O)\uff1b\u201cO\uff0fox\u201d\u662f\u4ee516\u8fdb\u5236\u65e0\u7b26\u53f7\u5f62\u5f0f\u8f93\u51fa\u6574\u6570(\u4e0d\u8f93\u51fa\u524d\u5bfc\u7b260x)\u3002", "\u00a0", "(45)\u4e0b\u9762\u7a0b\u5e8f\u6bb5\u4e2dc\u7684\u4e8c\u8fdb\u5236\u503c\u662f__________\u3002", "char a=3\uff0cb=6\uff0cc\uff1b", "c=a^b<<1\uff1a", "A)00001011\u00a0 \u00a0\u00a0\u00a0B)00001111\u00a0\u00a0\u00a0 C)00011110\u00a0\u00a0\u00a0 D)00011100", "B", "c\u8bed\u8a00\u63d0\u4f9b\u516d\u79cd\u4f4d\u8fd0\u7b97\u7b26\uff0c\u6309\u4f18\u5148\u7ea7\u7531\u9ad8\u5230\u4f4e\u7684\u987a\u5e8f\u5206\u522b\u4e3a\uff1a\u53d6\u53cd(\uff5e)\u3001\u5de6\u79fb((<)\u548c\u53f3\u79fb(>>)\u3001\u6309\u4f4d\u4e0e(&)\u3001\u6309\u4f4d\u5f02\u6216(\u516b)\u3001\u6309\u4f4d\u6216(I)\u3002\u6240\u4ee5\u8868\u8fbe\u5f0fc=aAb<<l\u5148\u8fd0\u7b97b<<l\u5f97\u4e8c\u8fdb\u5236\u503c\u4e3a00001 100\uff0c\u518d\u8fd0\u7b97aA00001 100\uff0c\u6700\u540e\u5f97\u4e8c\u8fdb\u5236\u503c00001ll1\u3002B", "c\u8bed\u8a00\u63d0\u4f9b\u516d\u79cd\u4f4d\u8fd0\u7b97\u7b26\uff0c\u6309\u4f18\u5148\u7ea7\u7531\u9ad8\u5230\u4f4e\u7684\u987a\u5e8f\u5206\u522b\u4e3a\uff1a\u53d6\u53cd(\uff5e)\u3001\u5de6\u79fb((<)\u548c\u53f3\u79fb(>>)\u3001\u6309\u4f4d\u4e0e(&)\u3001\u6309\u4f4d\u5f02\u6216(\u516b)\u3001\u6309\u4f4d\u6216(I)\u3002\u6240\u4ee5\u8868\u8fbe\u5f0fc=aAb<<l\u5148\u8fd0\u7b97b<<l\u5f97\u4e8c\u8fdb\u5236\u503c\u4e3a00001 100\uff0c\u518d\u8fd0\u7b97aA00001 100\uff0c\u6700\u540e\u5f97\u4e8c\u8fdb\u5236\u503c00001ll1\u3002", "\u00a0", "(46)\u4ee5\u4e0b\u53d9\u8ff0\u4e2d\u6b63\u786e\u7684\u662f__________\u3002", "A)C\u8bed\u8a00\u6bd4\u5176\u4ed6\u8bed\u8a00\u9ad8\u7ea7", "B)C\u8bed\u8a00\u53ef\u4ee5\u4e0d\u7528\u7f16\u8bd1\u5c31\u80fd\u88ab\u8ba1\u7b97\u673a\u8bc6\u522b\u6267\u884c", "C)C\u8bed\u8a00\u4ee5\u63a5\u8fd1\u82f1\u8bed\u56fd\u5bb6\u7684\u81ea\u7136\u8bed\u8a00\u548c\u6570\u5b66\u8bed\u8a00\u4f5c\u4e3a\u8bed\u8a00\u7684\u8868\u8fbe\u5f62\u5f0f", "D)C\u8bed\u8a00\u51fa\u73b0\u7684\u6700\u665a\uff0c\u5177\u6709\u5176\u4ed6\u8bed\u8a00\u7684\u4e00\u5207\u4f18\u70b9", "C", "\u8ba1\u7b97\u673a\u8bed\u8a00\u5206\u4e3a\u4f4e\u7ea7\u8bed\u8a00\u3001\u6c47\u7f16\u8bed\u8a00\u548c\u9ad8\u7ea7\u8bed\u8a00\uff0cc\u8bed\u8a00\u5c5e\u4e8e\u9ad8\u7ea7\u8bed\u8a00\uff0c\u4f46\u5e76\u4e0d\u662f\u8bf4c\u8bed\u8a00\u6bd4\u5176\u4ed6\u8bed\u8a00\u9ad8\u7ea7\uff0c\u6240\u4ee5\u9009\u9879A\u9519\u8bef\uff1b\u9664\u4e86\u4f4e\u7ea7\u8bed\u8a00\u5916\uff0c\u5176\u4ed6\u5404\u79cd\u8bed\u8a00\u90fd\u5fc5\u987b\u7f16\u8bd1\u6210\u80fd\u88ab\u8ba1\u7b97\u673a\u8bc6\u522b\u7684\u4e8c\u8fdb\u5236\u6570\u624d\u80fd\u6267\u884c\uff0c\u9009\u9879B\u9519\u8bef\uff1bC\u8bed\u8a00\u51fa\u73b0\u4ece1972\u5e74\u52301973\u5e74\u95f4\uff0c\u5e76\u4e0d\u662f\u51fa\u73b0\u6700\u665a\u7684\u8bed\u8a00\uff0c\u6240\u4ee5\u9009\u9879D\u4e5f\u662f\u9519\u8bef\u7684\u3002", "\u00a0", "(47)\u4e0b\u5217\u53ef\u7528\u4e8eC\u8bed\u8a00\u7528\u6237\u6807\u8bc6\u7b26\u7684\u4e00\u7ec4\u662f__________\u3002", "A)void define WORD\u00a0\u00a0\u00a0 \u00a0\u00a0B)a3_b3 _123 Car", "C)For -abc IFCase\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0D)2aDO sizeof", "B", "c\u8bed\u8a00\u89c4\u5b9a\u6807\u8bc6\u7b26\u53ea\u80fd\u7531\u5b57\u6bcd\u3001\u6570\u5b57\u548c\u4e0b\u5212\u7ebf3\u79cd\u5b57\u7b26\u7ec4\u6210\uff0c\u4e14\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5fc5\u987b\u4e3a\u5b57\u6bcd\u6216\u4e0b\u5212\u7ebf\uff0c\u6240\u4ee5\u6392\u9664c\u548cD\u3002c\u8bed\u8a00\u8fd8\u89c4\u5b9a\u6807\u8bc6\u7b26\u4e0d\u80fd\u4e3ac\u8bed\u8a00\u7684\u5173\u952e\u5b57\uff0c\u4ece\u800c\u9009\u9879A(void\u662f\u5173\u952e\u5b57)\u662f\u9519\u8bef\u7684\u3002", "\u00a0", "(48)fgetc\u51fd\u6570\u7684\u4f5c\u7528\u662f\u4ece\u6307\u5b9a\u6587\u4ef6\u8bfb\u5165\u4e00\u4e2a\u5b57\u7b26\uff0c\u8be5\u6587\u4ef6\u7684\u6253\u5f00\u65b9\u5f0f\u5fc5\u987b\u662f________\u3002", "A)\u53ea\u8bfb\u00a0\u00a0\u00a0 B)\u8ffd\u52a0\u00a0\u00a0\u00a0 C)\u8bfb\u6216\u8bfb\u5199\u00a0\u00a0\u00a0 D)\u4ee5\u4e0a\u5747\u6b63\u786e", "D", "fgetc\u51fd\u6570\u662f\u6307\u4ece\u6307\u5b9a\u7684\u6587\u4ef6\u8bfb\u5165\u4e00\u4e2a\u5b57\u7b26\uff0c\u8be5\u6587\u4ef6\u5fc5\u987b\u662f\u4ee5\u8bfb\u6216\u8bfb\u5199\u65b9\u5f0f\u6253\u5f00\u7684\u3002\u7535etc\u201d\u51fd\u6570\u7684\u8c03\u7528\u5f62\u5f0f\u4e3a\uff1ach=fgetc(fp)\uff1b\u3002", "\u00a0", "(49)\u8bf7\u9009\u51fa\u6b63\u786e\u7684\u7a0b\u5e8f\u6bb5_________\u3002", "A)int*p\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)int*s\uff0ck\uff1b", "Scanf(\u201c\u201d\uff05d\u201d\u201d\uff0cp)\uff1b\u00a0\u00a0 *s=100\uff1b", "\u2026\u2026\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2026\u2026", "C)int*s\uff0ck\uff1b\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)int*s\uff0ck\uff1b", "Char *p\uff0cc\uff1b\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0char *p\uff0ce\uff1b", "s=&k\uff1a\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0s=&k", "p=&c\uff1b\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0p=&c\uff1b", "*p=\u2019a\u2019\uff1b\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0s=p\uff1b", "\u2026\u2026\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0*s=l\uff1b", "\u2026\u2026", "C", "\u672c\u9898\u7684A\u548cB\u72af\u4e86\u4e00\u4e2a\u540c\u6837\u7684\u9519\u8bef\uff0c\u5373\u6307\u9488\u53d8\u91cfp\u5b9a\u4e49\u540e\u5e76\u6ca1\u6709\u6307\u5411\u5177\u4f53\u7684\u53d8\u91cf\uff0c\u56e0\u6b64\u4e0d\u80fd\u8fdb\u884c\u8d4b\u503c\u64cd\u4f5c\u3002\u53e6\u5916\uff0c\u5728\u9009\u9879D\u4e2d\uff0cs\u662fint\u6307\u9488\u53d8\u91cf\uff0cp\u662fchar\u578b\u6307\u9488\u53d8\u91cf\uff0c\u6240\u6307\u5411\u7684\u5185\u5b58\u5355\u5143\u6240\u5360\u7528\u7684\u5b57\u8282\u6570\u662f\u4e0d\u540c\u7684\uff0c\u56e0\u800c\u4e0d\u80fd\u5c06\u5b57\u7b26\u6307\u9488\u53d8\u91cfp\u7684\u503c\u8d4b\u7ed9\u6574\u578b\u6307\u9488\u53d8\u91cfs\u3002", "\u00a0", "(50)\u82e5\u6709\u4e0b\u9762\u7684\u8bf4\u660e\u548c\u5b9a\u4e49\uff0c\u5219sizeof(struct aa)\u7684\u503c\u662f__________\u3002", "struct aa", "{", "int rl\uff1bdouble r2\uff1bfloat r3\uff1a", "union uu{char u1[5]\uff1blong u2[2]}ua\uff1b", "}mya\uff1b", "A)30\u00a0\u00a0\u00a0 B)29\u00a0\u00a0\u00a0 C)24\u00a0\u00a0\u00a0 D)22", "D", "\u7ed3\u6784\u4f53\u53d8\u91cf\u6240\u5360\u5185\u5b58\u957f\u5ea6\u662f\u5404\u6210\u5458\u5360\u7684\u5185\u5b58\u957f\u5ea6\u4e4b\u548c\uff0c\u6bcf\u4e2a\u6210\u5458\u5206\u522b\u5360\u6709\u81ea\u5df1\u7684\u5185\u5b58\u5355\u5143\uff1b\u5171\u7528\u4f53\u53d8\u91cf\u6240\u5360\u7684\u5185\u5b58\u957f\u5ea6\u7b49\u4e8e\u6700\u957f\u7684\u6210\u5458\u7684\u957f\u5ea6\u3002\u7ed3\u6784\u4f53\u53d8\u91cfaa\u4e2d\uff0c\u6210\u5458r1\u53602\u4e2a\u5b57\u8282\uff0cr2\u53608\u4e2a\u5b57\u8282\uff0cr3\u53e44\u4e2a\u5b57\u8282\uff0c\u5171\u7528\u4f53ua\u53608\u4e2a\u5b57\u8282\uff0c\u6240\u4ee5\u5171\u5360\u75282+8+4+8=22\u4e2a\u5b57\u8282\u3002", "\u00a0", "\u4e8c\u3001\u586b\u7a7a\u9898(\u6bcf\u7a7a2\u5206\uff0c\u517140\u5206)", "\u8bf7\u5c06\u6bcf\u4e00\u4e2a\u7a7a\u7684\u6b63\u786e\u7b54\u6848\u5199\u5728\u7b54\u9898\u5361\u7684\u30101\u3011\u81f3\u301020\u3011\u5e8f\u53f7\u7684\u6a2a\u7ebf\u4e0a\uff0c\u7b54\u5728\u8bd5\u5377\u4e0a\u4e0d\u5f97\u00a0\u00a0\u00a0 \u5206\u3002", "(1)\u5728\u5148\u5de6\u540e\u53f3\u7684\u539f\u5219\u4e0b\uff0c\u6839\u636e\u8bbf\u95ee\u6839\u7ed3\u70b9\u7684\u6b21\u5e8f\uff0c\u4e8c\u53c9\u6811\u7684\u904d\u5386\u53ef\u4ee5\u5206\u4e3a\u4e09\u79cd\uff1a\u524d\u5e8f\u904d\u00a0\u00a0\u00a0 \u5386\u3001", "\u904d\u5386\u548c\u540e\u5e8f\u904d\u5386\u3002", "\u30101\u3011\u4e2d\u5e8f", "\u5728\u5148\u5de6\u540e\u53f3\u7684\u539f\u5219\u4e0b\uff0c\u6839\u636e\u8bbf\u95ee\u6839\u7ed3\u70b9\u7684\u6b21\u5e8f\uff0c\u4e8c\u53c9\u6811\u7684\u904d\u5386\u53ef\u4ee5\u5206\u4e3a\u4e09\u79cd\uff1a\u524d\u5e8f\u904d\u5386\u3001\u4e2d\u5e8f\u904d\u5386\u548c\u540e\u5e8f\u904d\u5386\u3002", "\u524d\u5e8f\u904d\u5386\u662f\u6307\u5728\u8bbf\u95ee\u6839\u7ed3\u70b9\u3001\u904d\u5386\u5de6\u5b50\u6811\u4e0e\u904d\u5386\u53f3\u5b50\u6811\u8fd9\u4e09\u8005\u4e2d\uff0c\u9996\u5148\u8bbf\u95ee\u6839\u7ed3\u70b9\uff0c\u7136\u540e\u904d\u5386\u5de6\u5b50\u6811\uff0c\u6700\u540e\u904d\u5386\u53f3\u5b50\u6811\uff1b\u5e76\u4e14\u904d\u5386\u5de6\u3001\u53f3\u5b50\u6811\u65f6\uff0c\u4ecd\u7136\u5148\u8bbf\u95ee\u6839\u7ed3\u70b9\uff0c\u7136\u540e\u904d\u5386\u5de6\u5b50\u6811\uff0c\u6700\u540e\u904d\u5386\u53f3\u5b50\u6811\u3002", "\u4e2d\u5e8f\u904d\u5386\u6307\u5728\u8bbf\u95ee\u6839\u7ed3\u70b9\u3001\u904d\u5386\u5de6\u5b50\u6811\u4e0e\u904d\u5386\u53f3\u5b50\u6811\u8fd9\u4e09\u8005\u4e2d\uff0c\u9996\u5148\u904d\u5386\u5de6\u5b50\u6811\uff0c\u7136\u540e\u8bbf\u95ee\u6839\u7ed3\u70b9\uff0c\u6700\u540e\u904d\u5386\u53f3\u5b50\u6811\uff1b\u5e76\u4e14\u904d\u5386\u5de6\u3001\u53f3\u5b50\u6811\u65f6\uff0c\u4ecd\u7136\u5148\u904d\u5386\u5de6\u5b50\u6811\uff0c\u7136\u540e\u8bbf\u95ee\u6839\u7ed3\u70b9\uff0c\u6700\u540e\u904d\u5386\u53f3\u5b50\u6811\u3002", "\u540e\u5e8f\u904d\u5386\u6307\u5728\u8bbf\u95ee\u6839\u7ed3\u70b9\u3001\u904d\u5386\u5de6\u5b50\u6811\u4e0e\u904d\u5386\u53f3\u5b50\u6811\u8fd9\u4e09\u8005\u4e2d\uff0c\u9996\u5148\u904d\u5386\u53f3\u5b50\u6811\uff0c\u7136\u540e\u8bbf\u95ee\u6839\u7ed3\u70b9\uff0c\u6700\u540e\u904d\u5386\u5de6\u5b50\u6811\uff1b\u5e76\u4e14\u904d\u5386\u5de6\u3001\u53f3\u5b50\u6811\u65f6\uff0c\u4ecd\u7136\u5148\u904d\u5386\u53f3\u5b50\u6811\uff0c\u7136\u540e\u8bbf\u95ee\u6839\u7ed3\u70b9\uff0c\u6700\u540e\u904d\u5386\u5de6\u5b50\u6811\u3002", "\u00a0", "(2)\u7ed3\u6784\u5316\u7a0b\u5e8f\u8bbe\u8ba1\u65b9\u6cd5\u7684\u4e3b\u8981\u539f\u5219\u53ef\u4ee5\u6982\u62ec\u4e3a\u81ea\u9876\u5411\u4e0b\u3001\u9010\u6b65\u6c42\u7cbe\u3001", "\u548c\u9650\u5236\u4f7f\u7528goto\u8bed\u53e5\u3002", "\u30102\u3011\u6a21\u5757\u5316", "\u7ed3\u6784\u5316\u7a0b\u5e8f\u8bbe\u8ba1\u65b9\u6cd5\u7684\u4e3b\u8981\u539f\u5219\u53ef\u4ee5\u6982\u62ec\u4e3a\u81ea\u9879\u5411\u4e0b\u3001\u9010\u6b65\u6c42\u7cbe\u3001\u6a21\u5757\u5316\u548c\u9650\u5236\u4f7f\u7528goto\u8bed\u53e5\u3002", "\u81ea\u9876\u5411\u4e0b\uff1a\u7a0b\u5e8f\u8bbe\u8ba1\u65f6\uff0c\u5e94\u5148\u8003\u8651\u603b\u4f53\uff0c\u540e\u8003\u8651\u7ec6\u8282\uff1b\u5148\u8003\u8651\u5168\u5c40\u76ee\u6807\uff0c\u540e\u8003\u8651\u5c40\u90e8\u76ee\u6807\u3002\u4e0d\u8981\u4e00\u5f00\u59cb\u5c31\u8fc7\u591a\u8ffd\u6c42\u4f17\u591a\u7684\u7ec6\u8282\uff0c\u5148\u4ece\u6700\u4e0a\u5c42\u603b\u76ee\u6807\u5f00\u59cb\u8bbe\u8ba1\uff0c\u9010\u6b65\u4f7f\u95ee\u9898\u5177\u4f53\u5316\u3002", "\u9010\u6b65\u6c42\u7cbe\uff1a\u5bf9\u590d\u6742\u95ee\u9898\uff0c\u5e94\u8bbe\u8ba1\u4e00\u4e9b\u5b50\u76ee\u6807\u4f5c\u8fc7\u5ea6\uff0c\u9010\u6b65\u7ec6\u5316\u3002", "\u6a21\u5757\u5316\uff1a\u4e00\u4e2a\u590d\u6742\u95ee\u9898\uff0c\u80af\u5b9a\u662f\u7531\u82e5\u5e72\u7a0d\u7b80\u5355\u7684\u95ee\u9898\u6784\u6210\u3002\u6a21\u5757\u5316\u662f\u628a\u7a0b\u5e8f\u8981\u89e3\u51b3\u7684\u603b\u76ee\u6807\u5206\u89e3\u4e3a\u5206\u76ee\u6807\uff0c\u518d\u8fdb\u4e00\u6b65\u5206\u89e3\u4e3a\u5177\u4f53\u7684\u5c0f\u76ee\u6807\uff0c\u628a\u6bcf\u4e2a\u5c0f\u76ee\u6807\u79f0\u4e3a\u4e00\u4e2a\u6a21\u5757\u3002", "\u9650\u5236\u4f7f\u7528goto\u8bed\u53e5\u3002", "\u00a0", "(3)\u8f6f\u4ef6\u6d4b\u8bd5\u662f\u4fdd\u8bc1\u8f6f\u4ef6\u8d28\u91cf\u7684\u91cd\u8981\u624b\u6bb5\uff0c\u800c\u8f6f\u4ef6\u6d4b\u8bd5\u7684\u4e3b\u8981\u548c\u91cd\u8981\u7684\u6d4b\u8bd5\u65b9\u6cd5\u662f\u901a\u8fc7\u6d4b\u00a0\u00a0\u00a0 \u8bd5\u6570\u636e\u548c", "\u00a0\u7684\u8bbe\u8ba1\u6765\u5b9e\u73b0\u3002", "\u30103\u3011\u6d4b\u8bd5\u5b9e\u4f8b", "\u8fdb\u884c\u8f6f\u4ef6\u6d4b\u8bd5\u65f6\uff0c\u5e94\u7cbe\u5fc3\u8bbe\u8ba1\u6d4b\u8bd5\u5b9e\u4f8b\u548c\u9009\u62e9\u6d4b\u8bd5\u6570\u636e\uff0c\u4ee5\u5bf9\u7cfb\u7edf\u8fdb\u884c\u5168\u9762\u6d4b\u8bd5\u3002", "\u00a0", "(4)\u6570\u636e\u5e93\u7cfb\u7edf\u7684\u4e09\u7ea7\u6a21\u5f0f\u5206\u522b\u4e3a", "\u6a21\u5f0f\u3001\u5185\u90e8\u7ea7\u6a21\u5f0f\u4e0e\u5916\u90e8\u7ea7\u6a21\u5f0f\u3002", "\u30104\u3011\u6982\u5ff5 \u6216 \u6982\u5ff5\u7ea7", "\u6570\u636e\u5e93\u7cfb\u7edf\u5728\u5176\u5185\u90e8\u5177\u6709\u4e09\u7ea7\u6a21\u5f0f\u53ca\u4e8c\u7ea7\u6620\u5c04\uff0c\u4e09\u7ea7\u6a21\u5f0f\u5206\u522b\u662f\u6982\u5ff5\u7ea7\u6a21\u5f0f\u3001\u5185\u90e8\u7ea7\u6a21\u5f0f\u548c\u5916\u90e8\u7ea7\u6a21\u5f0f\u3002", "\u6982\u5ff5\u6a21\u5f0f\u662f\u6570\u636e\u5e93\u7cfb\u7edf\u4e2d\u5168\u5c40\u6570\u636e\u903b\u8f91\u7ed3\u6784\u7684\u63cf\u8ff0\uff0c\u662f\u5168\u4f53\u7528\u6237(\u5e94\u7528)\u516c\u5171\u6570\u636e\u89c6\u56fe\u3002", "\u5185\u6a21\u5f0f\u53c8\u79f0\u7269\u7406\u6a21\u5f0f\uff0c\u5b83\u7ed9\u51fa\u4e86\u6570\u636e\u5e93\u7269\u7406\u5b58\u50a8\u7ed3\u6784\u4e0e\u7269\u7406\u5b58\u53d6\u65b9\u6cd5\uff0c\u5982\u6570\u636e\u5b58\u50a8\u7684\u6587\u4ef6\u7ed3\u6784\u3001\u7d22\u5f15\u3001\u96c6\u7c07\u53cahash\u7b49\u5b58\u53d6\u65b9\u5f0f\u4e0e\u5b58\u53d6\u8def\u5f84\uff0c\u5185\u6a21\u5f0f\u7684\u7269\u7406\u6027\u4e3b\u8981\u4f53\u73b0\u5728\u64cd\u4f5c\u7cfb\u7edf\u53ca\u6587\u4ef6\u7ea7\u4e0a\uff0c\uff0e\u5b83\u8fd8\u672a\u6df1\u5165\u5230\u8bbe\u5907\u7ea7\u4e0a(\u5982\u78c1\u76d8\u53ca\u78c1\u76d8\u64cd\u4f5c)\u3002", "\u5916\u6a21\u5f0f\u4e5f\u79f0\u5b50\u6a21\u5f0f\u6216\u7528\u6237\u6a21\u5f0f\uff0c\u5b83\u662f\u7528\u6237\u7684\u6570\u636e\u89c6\u56fe\uff0c\u4e5f\u5c31\u662f\u7528\u6237\u6240\u89c1\u5230\u7684\u6570\u636e\u6a21\u5f0f\uff0c\u5b83\u7531\u6982\u5ff5\u6a21\u5f0f\u63a8\u5bfc\u9762\u51fa\u3002", "\u00a0", "(5)\u6570\u636e\u5b57\u5178\u662f\u5404\u7c7b\u6570\u636e\u63cf\u8ff0\u7684\u96c6\u5408\uff0c\u5b83\u901a\u5e38\u5305\u62ec5\u4e2a\u90e8\u5206\uff0c\u5373\u6570\u636e\u9879\u3001\u6570\u636e\u7ed3\u6784\u3001\u6570\u636e\u6d41\u3001", "\u548c\u5904\u7406\u8fc7\u7a0b\u3002", "\u30105\u3011\u6570\u636e\u5b58\u50a8", "\u6570\u636e\u5b57\u5178\u662f\u5404\u7c7b\u6570\u636e\u63cf\u8ff0\u7684\u96c6\u5408\uff0c\u5b83\u901a\u5e38\u5305\u62ec5\u4e2a\u90e8\u5206\uff0c\u5373\u6570\u636e\u9879\uff0c\u662f\u6570\u636e\u7684\u6700\u5c0f\u5355\u4f4d\uff1b\u6570\u636e\u7ed3\u6784\uff0c\u662f\u82e5\u5e72\u6570\u636e\u9879\u6709\u610f\u4e49\u7684\u96c6\u5408\uff1b\u6570\u636e\u6d41\uff0c\u53ef\u4ee5\u662f\u6570\u636e\u9879\uff0c\u4e5f\u53ef\u4ee5\u662f\u6570\u636e\u7ed3\u6784\uff0c\u8868\u793a\u67d0\u4e00\u5904\u7406\u8fc7\u7a0b\u7684\u8f93\u5165\u6216\u8f93\u51fa\uff1b\u6570\u636e\u5b58\u50a8\uff0c\u5904\u7406\u8fc7\u7a0b\u4e2d\u5b58\u53d6\u7684\u6570\u636e\uff0c\u5e38\u5e38\u662f\u624b\u5de5\u51ed\u8bc1\u3001\u624b\u5de5\u6587\u6863\u6216\u8ba1\u7b97\u673a\u6587\u4ef6\uff1b\u5904\u7406\u8fc7\u7a0b\u3002", "\u00a0", "(6)\u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u662f", "\u3002", "main()", "{int arr[10],i,k=O\uff1a", "for(i=0\uff1bi<10\uff1bi++)", "arr[i]=i\uff1b", "for(I=1\uff1bi<4\uff1bi++)", "k+=arr[I]+i\uff1b", "printf(\u201d\uff05d\uff3cn\u201d\uff0ck)\uff1b}", "\u30106\u301112", "\u672c\u9898\u901a\u8fc7\u7b2c\u4e00\u4e2afor\u5faa\u73af\u5c06\u6570\u7ec4arr[O]-arr[9]\u5206\u522b\u8d4b\u503c\u4e3a0-9\uff0c\u901a\u8fc7\u7b2c\u4e8c\u4e2afor\u5faa\u73af\u7684\u4e09\u6b21\u5faa\u73af\u7d2f\u52a0\uff0c\u6c42\u51fa\u7ed3\u679c\u4e3a12\uff0c\u5177\u4f53\u5206\u6790\u5982\u4e0b\uff1a", "i=l\uff1ak=0+arr[1]+l\u5373k=2\uff1a", "i=2\uff1ak=2+arr[2]+2\u5373k=6\uff1a", "i=3\uff1ak=6+arr[3]+3\u5373k=12\uff1b", "\u00a0", "(7)\u82e5a=10\uff0cb=20\uff0c\u5219\u8868\u8fbe\u5f0f!(a<b)\u7684\u503c\u662f", "\u3002", "\u30107\u30110", "\u5df2\u77e5a=10\uff0cb=20\uff0c\u6240\u4ee5\u903b\u8f91\u8868\u8fbe\u5f0fa<b\u7684\u503c\u4e3atrue\uff0c\u5373\u4e3a1\uff0c\u5728\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u524d\u9762\u6709\u4e00\u4e2a\u903b\u8f91\u8fd0\u7b97\u7b26!\uff0c\u8868\u793a\u53cd\u64cd\u4f5c\uff0c\u6240\u4ee5\u6574\u4e2a\u8bed\u53e5\u7684\u503c\u5e94\u5f53\u4e3afalse\uff0c\u5373\u4e3a0\u3002", "\u00a0", "(8)\u6709\u4ee5\u4e0b\u7a0b\u5e8f\uff1a", "int fa(int x){return x*x\uff1b}", "int fb(int x){return x*x*x\uff1b}", "int f(int(*f1)()\uff0cint(*f2)()\uff0cint x)", "{return f2(X)-n(x)\uff1b}", "main()", "{int i\uff1bi=f(fa,fb,2)\uff1bprintf(\u201d\uff05d\uff3cn\u201d\uff0ci)\uff1b}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\uff0c\u8f93\u51fa\u7ed3\u679c\u662f", "\u3002", "\u30108\u30114", "\u5728\u4e3b\u51fd\u6570\u4e2d\u8c03\u7528\u51fd\u6570f\uff0c\u51fd\u6570f\u6709\u4e09\u4e2a\u53c2\u6570\uff0c\u5f62\u53c2f1\u4e0ef2\u5206\u522b\u662f\u4e24\u4e2a\u6307\u5411\u51fd\u6570\u7684\u6307\u9488\u3002\u5728f\u4e2d\u6267\u884cr2(x)-f1(x)\uff0c\u5b9e\u9645\u4e0a\u662f\u6267\u884c\u4e86fb(2)\uff0efa(2)\uff0c\u6545\u6267\u884ci=(fa,fb\uff0c2)\u540ei\u7684\u503c\u4e3a2^3-2^2=4\u3002", "\u00a0", "(9)\u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u662f", "\u3002", "main()", "{enum em{eml=3,em2=1,em3}\uff1b", "char*aa[]={\u201cAA\u201d\uff0c\u201dBB\u201d\uff0c\u201dCC\u201d\uff0c\u201dDD\u201d}\uff1b", "primf(\u201d\uff05s\uff05s\uff05s\uff3cn\u201d\uff0caa[eml]\uff0caa[em2]\uff0caa[em3])\uff1b", "}", "\u30109\u3011DDBBCC", "c\u8bed\u8a00\u5bf9\u679a\u4e3e\u7684\u5b9a\u4e49\u89c4\u5b9a\uff1a\u5728\u679a\u4e3e\u4e2d\u58f0\u660e\u7684\u5404\u4e2a\u679a\u4e3e\u5143\u7d20\uff0c\u5982\u679c\u6ca1\u6709\u660e\u786e\u6307\u51fa\u67d0\u4e2a\u679a\u4e3e\u5143\u7d20\u7684\u503c\uff0c\u5b83\u7684\u4e0a\u4e00\u4e2a\u5143\u7d20\u5b58\u5728\u5e76\u6709\u660e\u786e\u503c\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e2a\u679a\u4e3e\u5143\u7d20\u7684\u503c\u4e3a\u5176\u4e0a\u4e00\u4e2a\u5143\u7d20\u7684\u503c+1\u3002", "\u5728\u672c\u9898\u4e2d\uff0c\u6ca1\u6709\u660e\u786e\u8bf4\u660e\u679a\u4e3e\u5143\u7d20em3\u7684\u503c\uff0c\u5219em3=em2+l=1+l=2\uff0c\u8fdb\u800c\u53ef\u77e5\uff0c\u5728printf()\u6253\u5370\u51fd\u6570\u4e2d\uff0c\u8981\u6253\u5370\u7684\u6570\u7ec4\u5143\u7d20\u662faa[3]\u3001aa[1]\u3001aa[2]\uff0c\u56e0\u6b64\u6700\u540e\u7684\u6253\u5370\u7ed3\u679c\u5e94\u5f53\u4e3a\u201cDDBBCC\u201d\u3002", "\u00a0", "(10)\u82e5\u60f3\u901a\u8fc7\u4ee5\u4e0b\u8f93\u5165\u8bed\u53e5\u4f7fa=5\uff0e0\uff0cb=4\uff0cc=3\uff0c\u5219\u8f93\u5165\u6570\u636e\u7684\u5f62\u5f0f\u5e94\u8be5\u662f", "\u3002", "int b\uff0cc\uff1bfloat a\uff1b", "scanf(\u201d\uff05\uffe1\uff05d\uff0cc=\uff05d\u201d\uff0c&a\uff0c&b\uff0c&C)", "\u301010\u30115.0,4,c=3", "scanf(\u683c\u5f0f\u63a7\u5236\uff0c\u5730\u5740\u8868\u5217)\uff0c\u5982\u679c\u5728\u201c\u683c\u5f0f\u63a7\u5236\u201d\u5b57\u7b26\u4e32\u4e2d\u9664\u4e86\u683c\u5f0f\u8bf4\u660e\u4ee5\u5916\u8fd8\u6709\u5176\u5b83\u5b57\u7b26\uff0c\u5219\u5728\u8f93\u5165\u6570\u636e\u65f6\u5e94\u8f93\u5165\u4e0e\u8fd9\u4e9b\u5b57\u7b26\u76f8\u540c\u7684\u5b57\u7b26\u3002\u6240\u4ee5\u6b64\u9898\u4e2d\u8f93\u5165\u6570\u636e\u7684\u5f62\u5f0f\u662f5.0\uff1b4,c=3\u3002", "\u00a0", "(11)\u4e0b\u5217\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f", "\u3002", "int t(int x\uff0cint y,int cp,int dp)", "{\u00a0 \u00a0cp=x*x+y*y\uff1b", "dp=x*x-y*y\uff1b", "}", "main()", "{\u00a0\u00a0\u00a0 int a=4,b=3\uff0cc=5\uff0cd=6\uff1b", "t(a\uff0cb\uff0cc\uff0cd)\uff1b", "printf(\u201d\uff05d\uff05d\uff3cn\u201d\uff0cc\uff0cd)\uff1b", "}", "\u3010ll\u30115 6", "\u672c\u9898\u4e2da\uff0cb\uff0cc\uff0cd\u662f\u5b9e\u53c2\uff0cx\uff0c\u591a\uff0ccp\uff0cdp\u662f\u5f62\u53c2\u3002c\u8bed\u8a00\u89c4\u5b9a\uff0c\u5b9e\u53c2\u53d8\u91cf\u5bf9\u5f62\u53c2\u53d8\u91cf\u7684\u6570\u636e\u4f20\u9012\u662f\u201c\u503c\u4f20\u9012\u201d\uff0c\u5373\u5355\u5411\u4f20\u9012\uff0c\u53ea\u7531\u5b9e\u53c2\u4f20\u7ed9\u5f62\u53c2\uff0c\u800c\u4e0d\u80fd\u7531\u5f62\u53c2\u4f20\u56de\u6765\u7ed9\u5b9e\u53c2\u3002\u5728\u5185\u5b58\u4e2d\uff0c\u5b9e\u53c2\u5355\u5143\u4e0e\u5f62\u53c2\u5355\u5143\u662f\u4e0d\u540c\u7684\u5355\u5143\u3002\u5728\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u7ed9\u5f62\u53c2\u5206\u914d\u5b58\u50a8\u5355\u5143\uff0c\u5e76\u5c06\u5b9e\u53c2\u5bf9\u5e94\u7684\u503c\u4f20\u9012\u7ed9\u5f62\u53c2\uff0c\u8c03\u7528\u7ed3\u675f\u540e\uff0c\u5f62\u53c2\u5355\u5143\u88ab\u91ca\u653e\uff0c\u5b9e\u53c2\u5355\u5143\u4ecd\u4fdd\u7559\u5e76\u7ef4\u6301\u539f\u503c\u3002\u56e0\u6b64\uff0c\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f5 6\u3002", "\u00a0", "(12)\u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f", "\u3002", "char b[]=\u201dABCD\u201d\uff1b", "main()", "{", "char b[30]\uff1b", "strcpy(&b[0],\u201dGH\u201d)\uff1b", "strcpy(&b[1]\uff0c\u201dGH\u201d)\uff1b", "strcpy(&b[2],\u201dGH\u201d)\uff1b", "printf(\u201d\uff05s\uff3cn\u201d\uff0cb)\uff1b", "}", "\u301012\u3011GGGH", "\u7531\u4e8e\u5728\u51fd\u6570main\u4e2d\u5b9a\u4e49\u4e86\u6570\u7ec4\u53d8\u91cfb\uff0c\u5176\u5c06\u5c4f\u853d\u5168\u5c40\u53d8\u91cfb\u3002\u5bf9\u4e8e\u4e00\u7ef4\u6570\u7ec4\u53d8\u91cf\uff0c\u5176\u503c\u4e3a\u4e00\u5e38\u6570\uff0c\u7b49\u4e8e\u6570\u7ec4\u9996\u5143\u7d20\u5730\u5740\u3002strcpy(&b[0]\uff0c\u201cGH\u201d)\uff0c\u662f\u5c06\u5b57\u7b26\u4e32\u3002\u201cGH\u201d\u590d\u5236\u5230\u6570\u7ec4b\u4e2d\u4ece\u9996\u5143\u6570\u5f00\u59cb\u7684\u7a7a\u95f4\u4e2d\uff0c\u6b64\u662fb\u4e2d\u7684\u5b57\u7b26\u4e32\u4e3a\u201cGH\u201d\uff1bstrcpy(&b[1]\uff0c\u201cGH\u201d)\uff0c\u662f\u5c06\u5b57\u7b26\u4e32\u3002\u201cGH\u201d\u590d\u5236\u5230\u6570\u7ec4b\u4e2d\u4ece\u7b2c\u4e8c\u4e2a\u5143\u7d20\u5f00\u59cb\u7684\u7a7a\u95f4\u4e2d\uff0c\u6b64\u662fb\u4e2d\u7684\u5b57\u7b26\u4e32\u4e3a\u201cGH\u201d\u3002\u6267\u884c\u7b2c\u4e09\u6b21strcpy\u51fd\u6570\u540e\uff0cb\u4e2d\u7684\u5b57\u7b26\u4e32\u4e3a\u201dGGGH\u201d\u3002", "\u00a0", "(13)\u6709\u4ee5\u4e0b\u5b9a\u4e49\u548c\u8bed\u53e5\uff0c\u5219sizeof(a)\u7684\u503c\u662f", "\uff0c\u800csizeof(a\uff0eshare)\u7684\u503c\u662f", "\u3002", "struct date", "{\u00a0 int day\uff1b", "int mouth\uff1b", "int year\uff1b", "union{int sharel\uff1b", "float share2\uff1b", "}share\uff1b", "}a\uff1b", "\u301013\u301110", "\u301014\u30114", "\u7ed3\u6784\u4f53\u53d8\u91cf\u6240\u5360\u5185\u5b58\u957f\u5ea6\u662f\u5404\u6210\u5458\u5360\u7684\u5185\u5b58\u957f\u5ea6\u4e4b\u548c\u3002\u6bcf\u4e2a\u6210\u5458\u5206\u522b\u5360\u6709\u5176\u81ea\u5df1\u7684\u5185\u5b58\u5355\u5143\u3002int\u53602\u4e2a\u5b57\u8282\uff0cfloat\u53604\u4e2a\u5b57\u8282\uff0c\u5171\u7528\u4f53\u53d8\u91cf\u6240\u5360\u7684\u5185\u5b58\u957f\u5ea6\u7b49\u4e8e\u6700\u957f\u7684\u6210\u5458\u7684\u957f\u5ea6\u3002\u6240\u4ee5\uff0csizeof(a\uff0eshare)\u7684\u503c\u662f4\uff0csizeof(a)\u7684\u503c\u662f2+2+2+4=10\u3002", "\u00a0", "(14)\u4e0b\u8ff0\u51fd\u6570\u7528\u4e8e\u7edf\u8ba1\u4e00\u884c\u5b57\u7b26\u4e2d\u7684\u5355\u8bcd\u4e2a\u6570\uff0c\u5355\u8bcd\u4e4b\u95f4\u7528\u7a7a\u683c\u5206\u9694\u3002", "Word_num(str)", "char str[]\uff1b", "{int i,num=O,word=O\uff1b", "for(i=0\uff1bstr[i]!=", "\uff1bi++)", "if(", "==\u2019\u2019)word=0\uff1b", "else if(word==0)", "{", "word=l\uff1b", "\uff1b", "}", "return(num)\uff1b", "}", "\u301015\u3011\u2018\uff3c0\u2019\u62160\u6216NULL", "\u301016\u3011str[I]", "\u301017\u3011num++\u6216num=num+l\u6216num+=1", "\u89c2\u5bdf\u9898\u76ee\u8981\u6c42\uff0c\u53ef\u4ee5\u77e5\u9053\u4ee5\u4e0b\u51e0\u70b9\uff1a", "\u2460for\u5faa\u73af\u7684\u7ed3\u675f\u6761\u4ef6\u5e94\u5f53\u662f\uff1astr[i]\u5df2\u662f\u5b57\u7b26\u4e32\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\uff1b", "\u2461str\u2162\u4ee3\u8868\u5b57\u7b26\u4e32str\u4e2d\u7684\u7b2ci+1\u4e2a\u5b57\u7b26\uff1b", "\u2462\u6574\u578b\u53d8\u91cfnum\u7684\u503c\u662f\u8981\u8bb0\u5f55\u7684\u5355\u8bcd\u7684\u4e2a\u6570\u3002", "c\u8bed\u8a00\u4e2d\u89c4\u5b9a\u5b57\u7b26\u4e32\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u662f\u4e00\u4e2a\u9690\u542b\u7684\u5b57\u7b26\u4e32\u7ed3\u675f\u7b26\u201c\uff3c0\u201d\uff0c\u6240\u4ee5\u5728\u9898\u4e2d\u7b2c\u4e00\u4e2a\u7a7a\u4e2d\u5e94\u586b\u5199\u201c\uff3c0\u201d\uff1b\u9898\u4e2d\u7b2c\u4e8c\u4e2a\u7a7a\u5e94\u586b\u5199\u201cstr[i]\u201d\uff0c\u4ee5\u5224\u65ad\u5f53\u524d\u4f4d\u7f6e\u7684\u5b57\u7b26\u662f\u5426\u4e3a\u7a7a\u683c\uff1b\u9898\u4e2d\u7b2c\u4e09\u4e2a\u7a7a\u4e2d\u5e94\u5f53\u586b\u5199\u201cnum++\u201d\uff0c\u901a\u8fc7\u53d8\u91cfnum\u7684\u52a0l\u7d2f\u52a0\u5f97\u5230\u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd\u4e2a\u6570\u3002", "\u00a0", "(15)\u6709\u4e00\u4e2a\u5df2\u6392\u597d\u5e8f\u7684\u6570\u7ec4\uff0c\u4eca\u8f93\u5165\u4e00\u4e2a\u6570\uff0c\u8981\u6c42\u6309\u539f\u6765\u7684\u987a\u5e8f\u89c4\u5f8b\u5c06\u5b83\u63d2\u5165\u5230\u6570\u7ec4\u4e2d\u3002\u7b97\u6cd5\u662f\uff1a\u5047\u8bbe\u6392\u5e8f\u987a\u5e8f\u662f\u4ece\u5c0f\u5230\u5927\uff0c\u5bf9\u8f93\u5165\u7684\u6570\uff0c\u68c0\u67e5\u5b83\u5728\u6570\u7ec4\u4e2d\u54ea\u4e2a\u6570\u4e4b\u540e\uff0c\u7136\u540e\u5c06\u6bd4\u8fd9\u4e2a\u6570\u5927\u7684\u6570\u987a\u5e8f\u540e\u79fb\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5728\u7a7a\u51fa\u7684\u4f4d\u7f6e\u4e0a\u5c06\u8be5\u6570\u63d2\u5165\u3002\u8bf7\u5728\u7a0b\u5e8f\u4e2d\u7684\u7a7a\u767d\u5904\u586b\u4e0a\u4e00\u6761\u8bed\u53e5\u6216\u4e00\u4e2a\u8868\u8fbe\u5f0f\u3002", "#defineN 100", "main()", "{\u00a0 float a[N+1]\uff0cx\uff1b", "inti\uff0cp\uff1b", "for(i=0\uff1bi<N\uff1bi++)", "scanf(\u201d\uff05f\u201d\uff0c&a[I])\uff1b", "scanf(\u201d\uff05f\u201d\uff0c&x)\uff1b", "for(I=0\uff0cp=N\uff1bi<N\uff1bi++)", "if(x<a[I])", "{", "\uff1b", "break\uff1b}", "for(i=N-1\uff1b", "\uff1bI\u2013)", "a[I+1]=a[I]\uff1b", "a[p]_x\uff1b", "for(i=0\uff1b", "\uff1bi++)", "{ primf(\u201d\uff058\uff0e2f\u201d\uff0ca[i])\uff1b", "if(i\uff055==O)", "printf(\u201d\uff3cn\u201d)\uff1b", "}", "}", "\u301018\u3011p=i\uff1b", "\u301019\u3011i>=p", "\u301020\u3011i<=N", "\u672c\u9898\u4e3b\u8981\u8003\u67e5\u4e86\u63d2\u5165\u6392\u5e8f\u3002\u7531\u4e8e\u7a0b\u5e8f\u4e2d\u7684\u6570\u7ec4\u5728\u5f00\u59cb\u5df2\u7ecf\u6309\u4ece\u5c0f\u5230\u7684\u5927\u987a\u5e8f\u6392\u597d\u3002\u5728\u63d2\u5165\u65f6\uff0c\u9996\u5148\u8981\u67e5\u5230\u7b2c\u4e00\u4e2a\u5927\u4e8e\u5f85\u63d2\u5165\u6570\u7684\u6570\u7ec4\u4e0b\u6807\uff0c\u5373\u5f53\u5f85\u63d2\u5165\u5143\u7d20\u5c0f\u4e8e\u6570\u7ec4\u4e2d\u5f53\u524d\u5143\u7d20\u65f6\uff0c\u8bb0\u4e0b\u6570\u7ec4\u7684\u5f53\u524d\u4e0b\u6807p\uff0c\u5e76\u7ed3\u675f\u5faa\u73af\u3002\u6545\u7b2c\u4e00\u7a7a\u76ee\u7684\u662f\u4e3a\u4e86\u8bb0\u4e0b\u6570\u7ec4\u4e0b\u6807\uff0c\u5e94\u586bp=i\uff1b\u63d2\u5165\u6392\u5e8f\u7684\u7b2c\u4e8c\u90e8\u662f\u5c06\u5927\u4e8e\u5f85\u63d2\u5165\u5143\u7d20\u7684\u6240\u6709\u5143\u7d20\u90fd\u5411\u540e\u79fb\u52a8\u4e00\u4f4d\uff0c\u6545\u5728\u5faa\u73af\u65f6\uff0c\u8981\u4ece\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5230\u7b2cp\u4e2a\u5143\u7d20\u90fd\u8981\u540e\u79fb\u4e00\u4f4d\uff0c\u56e0\u6b64\u7b2c\u4e8c\u7a7a\u5e94\u57f4i>=p\u3002\u6700\u540e\u4e00\u4e2a\u5faa\u73af\u662f\u5c06N+1\u4e2a\u5143\u7d20\u90fd\u8f93\u51fa\uff0c\u6545\u6700\u540e\u4e00\u7a7a\u5e94\u4e3ai<=N\u3002(\u6ce8\uff1a\u672c\u9898\u6709\u591a\u79cd\u7b54\u6848\uff0c\u4ee5\u4e0a\u4ec5\u63d0\u4f9b\u4e00\u79cd)"], "title": "C\u8bed\u8a00\u7b14\u8bd5\u9898\u5e26\u7b54\u6848\uff08\u4e09\uff09"},
{"contents": ["\u4e00\u3001\u9009\u62e9\u9898(1)\uff5e(10)\u6bcf\u5c0f\u98982\u5206\uff0c(11)-(50)\u6bcf\u5c0f\u98981\u5206\uff0c\u517160\u5206)", "\u4e0b\u5217\u5404\u9898A)\u3001B)\u3001C)\u3001D)\u56db\u4e2a\u9009\u9879\u4e2d\uff0c\u53ea\u6709\u4e00\u4e2a\u9009\u9879\u662f\u6b63\u786e\u7684\uff0c\u8bf7\u5c06\u6b63\u786e\u9009\u9879\u6d82\u5199\u5728\u7b54\u9898\u5361\u76f8\u5e94\u4f4d\u7f6e\u4e0a\uff0c\u7b54\u5728\u8bd5\u5377\u4e0a\u4e0d\u5f97\u5206\u3002", "(1)\u4e0b\u9762\u53d9\u8ff0\u6b63\u786e\u7684\u662f________\u3002", "A)\u7b97\u6cd5\u7684\u6267\u884c\u6548\u7387\u4e0e\u6570\u636e\u7684\u5b58\u50a8\u7ed3\u6784\u65e0\u5173", "B)\u7b97\u6cd5\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u662f\u6307\u7b97\u6cd5\u7a0b\u5e8f\u4e2d\u6307\u4ee4(\u6216\u8bed\u53e5)\u7684\u6761\u6570", "C)\u7b97\u6cd5\u7684\u6709\u7a77\u6027\u662f\u6307\u7b97\u6cd5\u5fc5\u987b\u80fd\u5728\u6267\u884c\u6709\u9650\u4e2a\u6b65\u9aa4\u4e4b\u540e\u7ec8\u6b62", "D)\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u6307\u6267\u884c\u7b97\u6cd5\u7a0b\u5e8f\u6240\u9700\u8981\u7684\u65f6\u95f4", "C", "\u7b97\u6cd5\u7684\u8bbe\u8ba1\u53ef\u4ee5\u907f\u5f00\u5177\u4f53\u7684\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\uff0c\u4f46\u7b97\u6cd5\u7684\u5b9e\u73b0\u5fc5\u987b\u501f\u52a9\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u4e2d\u63d0\u4f9b\u7684\u6570\u636e\u7c7b\u578b\u53ca\u5176\u7b97\u6cd5\u3002\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u4e24\u4e2a\u91cd\u8981\u652f\u67f1\u3002", "\u00a0", "(2)\u4ee5\u4e0b\u6570\u636e\u7ed3\u6784\u5c5e\u4e8e\u975e\u7ebf\u6027\u6570\u636e\u7ed3\u6784\u7684________\u3002", "A)\u961f\u5217\u00a0\u00a0\u00a0 B)\u7ebf\u6027\u8868\u00a0\u00a0\u00a0 C)\u4e8c\u53c9\u6811\u00a0\u00a0\u00a0 D)\u6808", "C", "\u7ebf\u6027\u8868\u3001\u6808\u548c\u961f\u5217\u7b49\u6570\u636e\u7ed3\u6784\u6240\u8868\u8fbe\u548c\u5904\u7406\u7684\u6570\u636e\u4ee5\u7ebf\u6027\u7ed3\u6784\u4e3a\u7ec4\u7ec7\u5f62\u5f0f\u3002\u6808\u53c8\u79f0\u540e\u8fdb\u5148\u51fa\u8868(Last In First Out)\uff1b\u961f\u5217\u53c8\u79f0\u5148\u8fdb\u5148\u51fa\u8868(First\uff1aIn First Out)\u3002\u4e8c\u53c9\u6811\u7684\u6570\u636e\u7ed3\u6784\u662f\u6811\u578b\u7ed3\u6784\uff0c\u7ed3\u6784\u4e2d\u6570\u636e\u5143\u7d20\u4e4b\u95f4\u5b58\u5728\u7740\u4e00\u5bf9\u591a\u7684\u5173\u7cfb\uff0c\u56e0\u6b64\u5b83\u662f\u4e00\u79cd\u975e\u7ebf\u6027\u6570\u636e\u7ed3\u6784\u3002", "\u00a0", "(3)\u5728\u4e00\u68f5\u4e8c\u53c9\u6811\u4e0a\u7b2c8\u5c42\u7684\u7ed3\u70b9\u6570\u6700\u591a\u662f________\u3002", "A)8\u00a0\u00a0\u00a0 B)16\u00a0\u00a0\u00a0 C)128 \u00a0\u00a0\u00a0D)256", "C", "\u6839\u636e\u4e8c\u53c9\u6811\u7684\u6027\u8d28\uff1a\u4e8c\u53c9\u6811\u7b2ci(i\u22651)\u5c42\u4e0a\u81f3\u591a\u67092i-1\u4e2a\u7ed3\u70b9\u3002\u5f97\u5230\u7b2c8\u5c42\u7684\u7ed3\u70b9\u6570\u6700\u591a\u662f128\u3002", "\u00a0", "(4)\u4e0b\u9762\u63cf\u8ff0\u4e2d\uff0c\u4e0d\u7b26\u5408\u7ed3\u6784\u5316\u7a0b\u5e8f\u8bbe\u8ba1\u98ce\u683c\u7684\u662f________\u3002", "A)\u4f7f\u7528\u987a\u5e8f\u3001\u9009\u62e9\u548c\u91cd\u590d(\u5faa\u73af)\u4e09\u79cd\u57fa\u672c\u63a7\u5236\u7ed3\u6784\u8868\u793a\u7a0b\u5e8f\u7684\u63a7\u5236\u903b\u8f91", "B)\u81ea\u9876\u5411\u4e0b", "C)\u6ce8\u91cd\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6267\u884c\u6548\u7387", "D)\u9650\u5236\u4f7f\u7528goto\u8bed\u53e5", "C", "\u7ed3\u6784\u5316\u7a0b\u5e8f\u8bbe\u8ba1\u65b9\u6cd5\u7684\u56db\u6761\u539f\u5219\u662f\uff1a1\uff0e\u81ea\u9879\u5411\u4e0b\uff1b2\uff0e\u9010\u6b65\u6c42\u7cbe\uff1b3\uff0e\u6a21\u5757\u5316\uff1b4\uff0e\u9650\u5236\u4f7f\u7528goto\u8bed\u53e5\u3002", "\u00a0", "(5)\u4e0b\u9762\u6982\u5ff5\u4e2d\uff0c\u4e0d\u5c5e\u4e8e\u9762\u5411\u5bf9\u8c61\u65b9\u6cd5\u7684\u662f________\u3002", "A)\u5bf9\u8c61\u3001\u6d88\u606f\u00a0 \u00a0B)\u7ee7\u627f\u3001\u591a\u6001\u00a0 \u00a0\u00a0C)\u7c7b\u3001\u5c01\u88c5\u00a0\u00a0\u00a0 D)\u8fc7\u7a0b\u8c03\u7528", "D", "\u9762\u5411\u5bf9\u8c61\u65b9\u6cd5\u662f\u4e00\u79cd\u8fd0\u7528\u5bf9\u8c61\u3001\u7c7b\u3001\u5c01\u88c5\u3001\u7ee7\u627f\u3001\u591a\u6001\u548c\u6d88\u606f\u7b49\u6982\u5ff5\u6765\u6784\u9020\u3001\u6d4b\u8bd5\u3001\u91cd\u6784\u8f6f\u4ef6\u7684\u65b9\u6cd5\u3002\u9762\u5411\u5bf9\u8c61\u65b9\u6cd5\u4ece\u5bf9\u8c61\u51fa\u53d1\uff0c\u53d1\u5c55\u51fa\u5bf9\u8c61\u3001\u7c7b\u3001\u6d88\u606f\u3001\u7ee7\u627f\u7b49\u6982\u5ff5\u3002", "\u00a0", "(6)\u5728\u7ed3\u6784\u5316\u65b9\u6cd5\u4e2d\uff0c\u7528\u6570\u636e\u6d41\u7a0b\u56fe(DFD)\u4f5c\u4e3a\u63cf\u8ff0\u5de5\u5177\u7684\u8f6f\u4ef6\u5f00\u53d1\u9636\u6bb5\u662f________\u3002", "A)\u53ef\u884c\u6027\u5206\u6790\u00a0 B)\u9700\u6c42\u5206\u6790\u00a0\u00a0\u00a0 C)\u8be6\u7ec6\u8bbe\u8ba1\u00a0\u00a0\u00a0 D)\u7a0b\u5e8f\u7f16\u7801", "B", "\u8f6f\u4ef6\u5f00\u53d1\u9636\u6bb5\u5305\u62ec\u9700\u6c42\u5206\u6790\u3001\u603b\u4f53\u8bbe\u8ba1\u3001\u8be6\u7ec6\u8bbe\u8ba1\u3001\u7f16\u7801\u548c\u6d4b\u8bd5\u4e94\u4e2a\u9636\u6bb5\u3002\u5176\u4e2d\u9700\u6c42\u5206\u6790\u9636\u6bb5\u5e38\u7528\u7684\u5de5\u5177\u662f\u6570\u636e\u6d41\u56fe\u548c\u6570\u636e\u5b57\u5178\u3002", "\u00a0", "(7)\u8f6f\u4ef6\u751f\u547d\u5468\u671f\u4e2d\u6240\u82b1\u8d39\u7528\u6700\u591a\u7684\u9636\u6bb5\u662f________\u3002", "A)\u8be6\u7ec6\u8bbe\u8ba1\u00a0\u00a0\u00a0 B)\u8f6f\u4ef6\u7f16\u7801\u00a0\u00a0\u00a0 C)\u8f6f\u4ef6\u6d4b\u8bd5\u00a0\u00a0\u00a0 D)\u8f6f\u4ef6\u7ef4\u62a4", "D", "\u8f6f\u4ef6\u751f\u547d\u5468\u671f\u5206\u4e3a\u8f6f\u4ef6\u5b9a\u4e49\u3001\u8f6f\u4ef6\u5f00\u53d1\u53ca\u8f6f\u4ef6\u8fd0\u884c\u7ef4\u62a43\u4e2a\u9636\u6bb5\u3002\u672c\u9898\u4e2d\u8be6\u7ec6\u8bbe\u8ba1\u3001\u8f6f\u4ef6\u7f16\u7801\u548c\u8f6f\u4ef6\u6d4b\u8bd5\u90fd\u5c5e\u4e8e\u8f6f\u4ef6\u5f00\u53d1\u9636\u6bb5\uff1b\u7ef4\u62a4\u662f\u8f6f\u4ef6\u751f\u547d\u5468\u671f\u7684\u6700\u540e\u4e00\u4e2a\u9636\u6bb5\u3002", "\u00a0", "(8)\u6570\u636e\u5e93\u7cfb\u7edf\u7684\u6838\u5fc3\u662f________\u3002", "A)\u6570\u636e\u6a21\u578b\u00a0\u00a0\u00a0 B)DBMS\u00a0\u00a0\u00a0 C)\u8f6f\u4ef6\u5de5\u5177\u00a0\u00a0\u00a0 D)\u6570\u636e\u5e93", "B", "\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edfDBMS\u662f\u6570\u636e\u5e93\u7cfb\u7edf\u7684\u6838\u5fc3\u3002DBMS\u662f\u8d1f\u8d23\u6570\u636e\u5e93\u7684\u5efa\u7acb\u3001\u4f7f\u7528\u548c\u7ef4\u62a4\u7684\u8f6f\u4ef6\u3002DBMS\u5efa\u7acb\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e4b\u4e0a\uff0c\u5b9e\u65bd\u5bf9\u6570\u636e\u5e93\u7684\u7edf\u4e00\u7ba1\u7406\u548c\u63a7\u5236\u3002\u7528\u6237\u4f7f\u7528\u7684\u5404\u79cd\u6570\u636e\u5e93\u547d\u4ee4\u4ee5\u53ca\u5e94\u7528\u7a0b\u5e8f\u7684\u6267\u884c\uff0c\u6700\u7ec8\u90fd\u5fc5\u987b\u901a\u8fc7DBMS\u3002", "\u00a0", "(9)\u4e0b\u5217\u53d9\u8ff0\u4e2d\u6b63\u786e\u7684________\u3002", "A)\u6570\u636e\u5904\u7406\u662f\u5c06\u4fe1\u606f\u8f6c\u5316\u4e3a\u6570\u636e\u7684\u8fc7\u7a0b", "B)\u6570\u636e\u5e93\u8bbe\u8ba1\u662f\u6307\u8bbe\u8ba1\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf", "C)\u5982\u679c\u4e00\u4e2a\u5173\u7cfb\u4e2d\u7684\u5c5e\u6027\u6216\u5c5e\u6027\u7ec4\u5e76\u975e\u8be5\u5173\u7cfb\u7684\u5173\u952e\u5b57\uff0c\u4f46\u5b83\u662f\u53e6\u4e00\u4e2a\u5173\u7cfb\u7684\u5173\u952e\u5b57\uff0c\u5219\u79f0\u5176\u4e3a\u672c\u5173\u7cfb\u7684\u5916\u5173\u952e\u5b57", "D)\u5173\u7cfb\u4e2d\u7684\u6bcf\u5217\u79f0\u4e3a\u5143\u7ec4\uff0c\u4e00\u4e2a\u5143\u7ec4\u5c31\u662f\u4e00\u4e2a\u5b57\u6bb5", "C", "\u6570\u636e\u5904\u7406\u662f\u6307\u5c06\u6570\u636e\u8f6c\u6362\u6210\u4fe1\u606f\u7684\u8fc7\u7a0b\uff0c\u6545\u9009\u9879A\u53d9\u8ff0\u9519\u8bef\uff1b\u8bbe\u8ba1\u6570\u636e\u5e93\u7684\u76ee\u7684\u5b9e\u8d28\u4e0a\u662f\u8bbe\u8ba1\u51fa\u6ee1\u8db3\u5b9e\u9645\u5e94\u7528\u9700\u6c42\u7684\u5b9e\u9645\u5173\u7cfb\u6a21\u578b\uff1b\u5173\u7cfb\u4e2d\u7684\u884c\u79f0\u4e3a\u5143\u7ec4\uff0c\u5bf9\u5e94\u5b58\u50a8\u6587\u4ef6\u4e2d\u7684\u8bb0\u5f55\uff0c\u5173\u7cfb\u4e2d\u7684\u5217\u79f0\u4e3a\u5c5e\u6027\uff0c\u5bf9\u5e94\u5b58\u50a8\u6587\u4ef6\u4e2d\u7684\u5b57\u6bb5\uff0c\u6545D\u9009\u9879\u53d9\u8ff0\u9519\u8bef\u3002", "\u00a0", "(10)\u4e0b\u5217\u6a21\u5f0f\u4e2d\uff0c________\u662f\u7528\u6237\u6a21\u5f0f\u3002", "A)\u5185\u6a21\u5f0f\u00a0 B)\u5916\u6a21\u5f0f\u00a0\u00a0\u00a0 C)\u6982\u5ff5\u6a21\u5f0f\u00a0\u00a0\u00a0 D)\u903b\u8f91\u6a21\u5f0f", "B", "\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\u7684\u4e09\u7ea7\u6a21\u5f0f\u7ed3\u6784\u7531\u5916\u6a21\u5f0f\u3001\u6a21\u5f0f\u548c\u5185\u6a21\u5f0f\u7ec4\u6210\u3002\u5916\u6a21\u5f0f\uff0c\u6307\u6570\u636e\u5e93\u7528\u6237\u6240\u770b\u5230\u7684\u6570\u636e\u7ed3\u6784\uff0c\u662f\u7528\u6237\u770b\u5230\u7684\u6570\u636e\u89c6\u56fe\u3002\u6a21\u5f0f\uff0c\u662f\u6570\u636e\u5e93\u4e2d\u5bf9\u5168\u4f53\u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u548c\u7279\u6027\u7684\u63cf\u8ff0\uff0c\u662f\u6240\u6709\u7528\u6237\u6240\u89c1\u5230\u7684\u6570\u636e\u89c6\u56fe\u7684\u603b\u548c\u3002\u5185\u6a21\u5f0f\u662f\u6307\u6570\u636e\u5728\u6570\u636e\u5e93\u7cfb\u7edf\u5185\u7684\u5b58\u50a8\u4ecb\u8d28\u4e0a\u7684\u8868\u793a\uff0c\u5373\u5bf9\u6570\u636e\u7684\u7269\u7406\u7ed3\u6784\u548c\u5b58\u53d6\u65b9\u5f0f\u7684\u63cf\u8ff0\u3002", "\u00a0", "(11)C\u8bed\u8a00\u89c4\u5b9a\uff0c\u7a0b\u5e8f\u4e2d\u5404\u51fd\u6570\u4e4b\u95f4________\u3002", "A)\u65e2\u5141\u8bb8\u76f4\u63a5\u9012\u5f52\u8c03\u7528\u4e5f\u5141\u8bb8\u95f4\u63a5\u9012\u5f52\u8c03\u7528", "B)\u4e0d\u5141\u8bb8\u76f4\u63a5\u9012\u5f52\u8c03\u7528\u4e5f\u4e0d\u5141\u8bb8\u95f4\u63a5\u9012\u5f52\u8c03\u7528", "C)\u5141\u8bb8\u76f4\u63a5\u9012\u5f52\u8c03\u7528\u4e0d\u5141\u8bb8\u95f4\u63a5\u9012\u5f52\u8c03\u7528", "D)\u4e0d\u5141\u8bb8\u76f4\u63a5\u9012\u5f52\u8c03\u7528\u5141\u8bb8\u95f4\u63a5\u9012\u5f52\u8c03\u7528", "A", "c\u8bed\u8a00\u89c4\u5b9a\uff0c\u7a0b\u5e8f\u4e2d\u5404\u51fd\u6570\u4e4b\u95f4\u65e2\u5141\u8bb8\u76f4\u63a5\u9012\u5f52\u8c03\u7528\u4e5f\u5141\u8bb8\u95f4\u63a5\u9012\u5f52\u8c03\u7528\u3002", "\u00a0", "(12)\u5728\u4f7f\u7528\u7a0b\u5e8f\u6d41\u7a0b\u56fe\u6765\u8868\u793a\u7b97\u6cd5\u65f6\uff0c\u83f1\u5f62\u7528\u6765\u8868\u793a________\u3002", "A)\u8f93\u5165\u4e0e\u8f93\u51faB)\u5b50\u7a0b\u5e8f\u00a0\u00a0\u00a0 C)\u5224\u65ad\u5206\u652f\u00a0\u00a0\u00a0 D)\u5faa\u73af\u8fb9\u754c", "C", "\u7f8e\u56fd\u56fd\u5bb6\u6807\u51c6\u5316\u534f\u4f1aANSI\u89c4\u5b9a\u4e86\u4e00\u4e9b\u5e38\u7528\u7684\u6d41\u7a0b\u56fe\u7b26\u53f7\uff0c\u5176\u4e2d\u692d\u5706\u6846\u8868\u793a\u8d77\u6b62\u6846\uff0c\u65b9\u6846\u8868\u793a\u5904\u7406\u6846\uff0c\u83f1\u5f62\u6846\u8868\u793a\u5224\u65ad\u5206\u652f\uff0c\u7bad\u5934\u8868\u793a\u6d41\u7a0b\u7ebf\u3002", "\u00a0", "(13)C\u8bed\u8a00\u4e2d\u4e0b\u5217\u53d9\u8ff0\u6b63\u786e\u7684\u662f________\u3002", "A)\u4e0d\u80fd\u4f7f\u7528do\u2026while\u8bed\u53e5\u6784\u6210\u7684\u5faa\u73af", "B)do\u2026while\u8bed\u53e5\u6784\u6210\u7684\u5faa\u73af\uff0c\u5fc5\u987b\u7528break\u8bed\u53e5\u624d\u80fd\u9000\u51fa", "C)do\u2026while\u8bed\u53e5\u6784\u6210\u7684\u5faa\u73af\uff0c\u5f53while\u8bed\u53e5\u4e2d\u7684\u8868\u8fbe\u5f0f\u503c\u4e3a\u975e\u96f6\u65f6\u7ed3\u675f\u5faa\u73af", "D)do\u2026while\u8bed\u53e5\u6784\u6210\u7684\u5faa\u73af\uff0c\u5f53while\u8bed\u53e5\u4e2d\u7684\u8868\u8fbe\u5f0f\u503c\u4e3a\u96f6\u65f6\u7ed3\u675f\u5faa\u73af", "D", "\u9009\u9879A\u662f\u9519\u8bef\u7684\uff0cc\u8bed\u8a00\u652f\u6301d0\u2026while\u8bed\u53e5\uff1b\u9009\u9879B\u662f\u9519\u8bef\u7684\uff0cdo\uff0e\uff0e\uff0ewhile\u6784\u6210\u7684\u5faa\u73af\uff0c\u5f53while\u8bed\u53e5\u4e2d\u7684\u8868\u8fbe\u5f0f\u503c\u4e3a\u96f6\u65f6\u7ed3\u675f\u5faa\u73af\uff0c\u800c\u4e0d\u662f\u975e\u96f6\uff1b\u9009\u9879c\u4e5f\u662f\u9519\u8bef\u7684\u3002", "\u00a0", "(14)\u4ee5\u4e0b\u9009\u9879\u4e2d\u5c5e\u4e8eC\u8bed\u8a00\u7684\u6570\u636e\u7c7b\u578b\u662f________\u3002", "A)\u590d\u6570\u578b\u00a0 B)\u903b\u8f91\u578b\u00a0\u00a0\u00a0 C)\u53cc\u7cbe\u5ea6\u578b\u00a0\u00a0\u00a0 D)\u96c6\u5408\u578b", "C", "c\u8bed\u8a00\u7684\u6570\u636e\u7c7b\u578b\u5206\u4e3a\u57fa\u672c\u7c7b\u578b\u3001\u6784\u9020\u7c7b\u578b\u3001\u6307\u9488\u7c7b\u578b\u3001\u7a7a\u7c7b\u578b\u56db\u5927\u7c7b\u3002\u5176\u4e2d\uff0c\u57fa\u672c\u7c7b\u578b\u5206\u4e3a\u6574\u578b\u3001\u5b57\u7b26\u578b\u3001\u5b9e\u578b\u4e09\u7c7b\u3002\u5b9e\u578b\u53c8\u79f0\u6d6e\u70b9\u578b\uff0c\u5305\u62ec\u5355\u7cbe\u5ea6\u578b\u548c\u53cc\u7cbe\u5ea6\u578b\u4e24\u79cd\u7c7b\u578b\u3002", "\u00a0", "(15)\u5728C\u8bed\u8a00\u4e2d\uff0c\u4e0d\u6b63\u786e\u7684int\u7c7b\u578b\u7684\u5e38\u6570\u662f________\u3002", "A)32768\u00a0\u00a0\u00a0 B)0\u00a0\u00a0\u00a0 C)037 \u00a0\u00a0\u00a0\u00a0D)0xAF", "A", "c\u8bed\u8a00\u4e2dint\u7c7b\u578b\u7684\u5e38\u6570\u7684\u8303\u56f4\u662f\uff1a-32768\uff5e32767\u3002c\u6574\u5e38\u6570\u53ef\u7528\u4e09\u79cd\u5f62\u5f0f\u8868\u793a\uff1a\u5341\u8fdb\u5236\u6574\u6570\uff0c\u516b\u8fdb\u5236\u6574\u6570\uff0c\u5341\u516d\u8fdb\u5236\u6574\u6570\u3002\u9009\u9879A\u8d85\u51fa\u8303\u56f4\uff0c\u4e0d\u6b63\u786e\u3002", "\u00a0", "(16)\u4ee5\u4e0b\u7a0b\u5e8f\u8f93\u51fa\u7684\u7ed3\u679c\u662f________\u3002", "main()", "{", "int a=65535\uff1b", "printf(\u201c\uff05d\uff05u\u201d\uff0ca\uff0ca)\uff1b", "}", "A)-1 -1\u00a0\u00a0\u00a0 B)6553565535\u00a0 \u00a0\u00a0\u00a0C)-1 65535 \u00a0\u00a0\u00a0D)65535 \u2013l", "C", "printf\u51fd\u6570\u4e2d\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\u7528\u4e0d\u540c\u7684\u683c\u5f0f\u5b57\u7b26\uff0c\u5176\u4e2d\uff05d\u662f\u6309\u6574\u578b\u6570\u636e\u7684\u5b9e\u9645\u957f\u5ea6\u8f93\u51fa\u5341\u8fdb\u5236\u6574\u6570\u3002\u53d8\u91cfa=65535\u4ee5\uff05d\u683c\u5f0f\u8f93\u51fa\u65f6\u6ea2\u51fa\u8f93\u51fa\u503c\u4e3a\u8be5\u6570\u7684\u8865\u7801\u503c\uff0c\u5373\uff0e1\uff1b\uff05u\u7528\u6765\u8f93\u51faunsigned\u578b\u6570\u636e\uff0c\u65e0\u7b26\u53f7\u6574\u578b\u53d8\u91cf\u7684\u6570\u503c\u8303\u56f4\u4e3a0~65535\uff0c\u6240\u4ee5\u53d8\u91cfa=65535\u4ee5\uff05u\u683c\u5f0f\u8f93\u51fa\u7684\u503c\u4e3a65535\u3002", "\u00a0", "(17)\u4e0b\u5217\u63cf\u8ff0\u4e2d\u4e0d\u6b63\u786e\u7684\u662f________\u3002", "A)\u5b57\u7b26\u578b\u6570\u7ec4\u4e2d\u53ef\u4ee5\u5b58\u653e\u5b57\u7b26\u4e32", "B)\u53ef\u4ee5\u5bf9\u5b57\u7b26\u578b\u6570\u7ec4\u8fdb\u884c\u6574\u4f53\u8f93\u5165\u3001\u8f93\u51fa", "C)\u53ef\u4ee5\u5bf9\u6574\u578b\u6570\u7ec4\u8fdb\u884c\u6574\u4f53\u8f93\u5165\u3001\u8f93\u51fa", "D)\u4e0d\u80fd\u5728\u8d4b\u503c\u8bed\u53e5\u4e2d\u901a\u8fc7\u8d4b\u503c\u8fd0\u7b97\u7b26\u201d=\u201d\u5bf9\u5b57\u7b26\u578b\u6570\u7ec4\u8fdb\u884c\u6574\u4f53\u8d4b\u503c", "C", "c\u8bed\u8a00\u89c4\u5b9a\u53ea\u80fd\u9010\u4e2a\u5f15\u7528\u6570\u7ec4\u5143\u7d20\u800c\u4e0d\u80fd\u4e00\u6b21\u5f15\u7528\u6574\u4e2a\u6570\u7ec4\u3002\u5b57\u7b26\u6570\u7ec4\u7684\u8f93\u5165\u3001\u8f93\u51fa\u53ef\u4ee5\u5c06\u6574\u4e2a\u5b57\u7b26\u4e32\u4e00\u6b21\u8f93\u5165\u6216\u8f93\u51fa\u3002\u6240\u4ee5\uff0c\u9009\u9879c\u7684\u8bf4\u6cd5\u662f\u4e0d\u6b63\u786e\u7684\u3002", "\u00a0", "(18)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "main()", "{\u00a0 int i\uff0cx[3][3]={9,8,7,6,5,4,3,2,1}\uff0c*p=&x[1][1]\uff1b", "for(I=0\uff1bi<4\uff1bi+=2)printf(\u201d\uff05d\u201d\uff0cp[I])\uff1b", "}", "A)5\u00a0 2\u00a0\u00a0\u00a0 B)5\u00a0 l\u00a0\u00a0\u00a0 C)5\u00a0 3\u00a0\u00a0\u00a0 D)9\u00a0 7", "C", "\u9898\u4e2d*p=&x[1][1]\uff1b\u662f\u6307\u5c06\u6570\u7ec4x\u7684\u6570\u7ec4\u5143\u7d20x[1][1]\u7684\u5730\u5740\u8d4b\u503c\u7ed9\u6307\u9488\u53d8\u91cfp\uff0c\u4f7fp\u6307\u5411x[11[1]\u8fd9\u4e2a\u6570\u7ec4\u5143\u7d20\uff0c\u90a3\u4e48p[0]\u5373\u4e3a\u6307\u9488\u53d8\u91cfp\u5f53\u524d\u6240\u6307\u5411\u7684\u6570\u7ec4\u5143\u7d20x[1][1]\u7684\u503c\u3002", "\u00a0", "(19)\u4e0b\u5217\u53ef\u7528\u4e8eC\u8bed\u8a00\u6807\u8bc6\u7b26\u7684\u4e00\u7ec4\u662f________\u3002", "A)voidWORDdefine\u00a0\u00a0\u00a0 B)a 6$sysFor", "C)2asizeof abc\u00a0\u00a0\u00a0 \u00a0D)Int define sizeof", "D", "c\u8bed\u8a00\u89c4\u5b9a\u6807\u8bc6\u7b26\u53ea\u80fd\u7531\u5b57\u6bcd\u3001\u6570\u5b57\u548c\u4e0b\u5212\u7ebf\u4e09\u79cd\u5b57\u7b26\u7ec4\u6210\uff0c\u4e14\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5fc5\u987b\u4e3a\u5b57\u6bcd\u6216\u4e0b\u5212\u7ebf\u3002\u6ce8\u610f\uff0c\u5927\u5199\u5b57\u6bcd\u548c\u5c0f\u5199\u5b57\u6bcd\u88ab\u8ba4\u4e3a\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u5b57\u7b26\u3002C\u8bed\u8a00\u4e2d\u7684\u5173\u952e\u5b57\u4e0d\u80fd\u7528\u4f5c\u6807\u8bc6\u7b26\u3002", "\u00a0", "(20)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f__________\u3002", "#include\u00a0 \u201cstdio\uff0eH\u201d", "main()", "{", "int a[]={1\uff0c2,3,4,5,6,7,8,9,10,1 1,12}\uff1b", "int*p=a+5\uff0c*q=NULL\uff1b", "*q=*(p\u53415)\uff1b", "printf(\u201d\uff05d\u00a0\u00a0\u00a0 \uff05d\u3001n\u201d\uff0c\u2018p\uff0c*q)\uff1b", "}", "A)\u8fd0\u884c\u540e\u62a5\u9519\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0B)6\u00a0 6", "C)6\u00a0 12\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)5\u00a0 5", "A", "\u9898\u76ee\u4e2d\u6ca1\u6709\u7ed9q\u5206\u914d\u5b58\u50a8\u5355\u5143\uff0c\u53ea\u662f\u7b80\u5355\u7684\u7ed9\u5b83\u8d4b\u4e86\u4e00\u4e2a\u503c\uff0c\u6240\u4ee5\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f6 \u00a0ll \u00a0NULL pointer assignment\uff0c\u4e5f\u5c31\u662f\u8fd0\u884c\u540e\u62a5\u9519\u3002", "\u00a0", "(21)\u4ee5\u4e0b\u8bf4\u6cd5\u4e2d\u6b63\u786e\u7684\u662f_________\u3002", "A)C\u8bed\u8a00\u7a0b\u5e8f\u603b\u662f\u4ece\u7b2c\u4e00\u4e2a\u51fd\u6570\u5f00\u59cb\u6267\u884c", "B)\u5728C\u8bed\u8a00\u7a0b\u5e8f\u4e2d\uff0c\u8981\u8c03\u7528\u51fd\u6570\u5fc5\u987b\u5728main()\u51fd\u6570\u4e2d\u5b9a\u4e49", "C)c\u8bed\u8a00\u7a0b\u5e8f\u603b\u662f\u4ecemain()\u51fd\u6570\u5f00\u59cb\u6267\u884c", "D)c\u8bed\u8a00\u7a0b\u5e8f\u4e2d\u7684main()\u51fd\u6570\u5fc5\u987b\u653e\u5728\u7a0b\u5e8f\u7684\u5f00\u59cb\u90e8\u5206", "C", "c\u8bed\u8a00\u7684\u7a0b\u5e8f\u662f\u7531\u4e3b\u51fd\u6570main()\u5f00\u59cb\u8fd0\u884c\uff0c\u7531\u4e3b\u51fd\u6570\u6765\u8c03\u7528\u5176\u4ed6\u51fd\u6570\uff0c\u51fd\u6570\u5fc5\u987b\u662f\u5e76\u5217\u7684\uff0c\u5b9a\u4e49\u540e\u4f7f\u7528\uff0c\u4e0d\u80fd\u5728\u4e00\u4e2a\u51fd\u6570\u4e2d\u5b9a\u4e49\u5176\u4ed6\u51fd\u6570\uff0cmain()\u51fd\u6570\u4e0d\u4e00\u5b9a\u8981\u653e\u5728\u7a0b\u5e8f\u7684\u5f00\u59cb\u90e8\u5206\uff0c\u6545\u9009c\u3002", "\u00a0", "(22)\u6709\u5982\u4e0b\u7a0b\u5e8f", "float fun(int x,int y){return(x+y)\uff1b}", "main()", "{", "int a=2\uff0cb=5\uff0cc=8\uff1b", "printf(\u201d\uff053\uff0e0f\\n\u201d,fun((int)fun(a+c,b)\uff0c(a-C)))\uff1b", "}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u4e3a__________\u3002", "A)\u7f16\u8bd1\u51fa\u9519\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)9\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0C)21\u00a0\u00a0\u00a0 \u00a0D)9\uff0e0", "B", "\u672c\u9898\u4e2d\u5148\u6267\u884c(int)fun(a+c,b)\u51fd\u6570\u7684\u8c03\u7528\uff0c\u503c\u4e3a\u6574\u578b\u6570\u503c15\uff1b\u7136\u540e\u518d\u6267\u884cfun(15\uff0c(a-e))\u51fd\u6570\u8c03\u7528\uff0c\u503c\u4e3a\u5355\u7cbe\u5ea6\u5b9e\u578b\u6570\u503c9\uff0e000000\u3002\u8f93\u51fa\u4e3a\uff053\uff0e0f\uff0c\u5373\u6709\u6548\u6570\u957f\u5ea6\u4e3a3\uff0c\u6ca1\u6709\u5c0f\u6570\u4f4d\u6570\uff0c\u6240\u4ee5\u6700\u540e\u7ed3\u679c\u4e3a9\u3002", "\u00a0", "(23)\u80fd\u6b63\u786e\u8868\u793aa\u548cb\u540c\u65f6\u4e3a\u6b63\u6216\u540c\u65f6\u4e3a\u8d1f\u7684\u903b\u8f91\u8868\u8fbe\u5f0f\u662f_________\u3002", "A)(a>=\u2016b>=0)&&(a<O\u2016b<O)\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0B)(a>=0&&b>=O)&&(a<0&&b<O)", "C)(a+b>0)&&(a+b<=0)\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)a*b>0", "D", "\u9009\u9879A\u4e2d\uff0c\u8868\u8fbe\u5f0f\u8868\u793a\u7684\u662fa\uff0cb\u4e3a\u5f02\u53f7\uff1b\u9009\u9879B\u4e2d\uff0c\u8868\u8fbe\u5f0f\u8868\u793a\u7684\u662f0\uff0c\u56e0\u4e3a\u6ca1\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u503c\uff1b\u9009\u9879c\u4e2d\uff0c\u8868\u8fbe\u5f0f\u8868\u793a\u7684\u662f0\uff0c\u56e0\u4e3a\u6ca1\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u503c\uff1b\u9009\u9879D\u8868\u793a\u7684\u662fa\u548cb\u4e3a\u540c\u53f7\u3002", "\u00a0", "(24)\u82e5\u5df1\u5b9a\u4e49\uff1aint a[9]\uff0c*p=a\uff1b\u5e76\u5728\u4ee5\u540e\u7684\u8bed\u53e5\u4e2d\u672a\u6539\u53d8p\u7684\u503c\uff0c\u4e0d\u80fd\u8868\u793aa[l]\u5730\u5740\u7684", "\u8868\u8fbe\u5f0f\u662f__________\u3002", "A)p+l\u00a0\u00a0\u00a0 B)a+l\u00a0\u00a0\u00a0 C)a++\u00a0\u00a0\u00a0 D)++p", "C", "\u6570\u7ec4\u540d\u662f\u6307\u9488\u5e38\u91cf\uff0c\u662f\u4e2a\u56fa\u5b9a\u7684\u6307\u9488\uff0c\u4e0d\u80fd\u5bf9\u6570\u7ec4\u540d\u8d4b\u4e88\u4e00\u4e2a\u65b0\u7684\u5730\u5740\u503c\uff0c\u4e5f\u4e0d\u80fd\u4f7f\u8fd9\u4e2a\u6307\u9488\u5e38\u91cf\u201c\u79fb\u52a8\u201d\uff0c\u6307\u5411\u6570\u7ec4\u7684\u5176\u5b83\u5143\u7d20\u3002", "\u00a0", "(25)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f__________\u3002", "main()", "{\u00a0\u00a0 int a==-1\uff0cb=1\uff0ck\uff1b", "if((++a<0)&&!(b\u2013<=0))", "printf(\u201d\uff05d\u00a0 \uff05d\\n\u201d\uff0ca\uff0cb)\uff1b", "else", "printf(\u201d\uff05d\u00a0 \uff05d\uff3cn\u201d\uff0cb\uff0ca)\uff1b", "}", "A)-1\u00a0 l\u00a0\u00a0\u00a0 B)0\u00a0 l", "C)1\u00a0 0\u00a0\u00a0\u00a0 \u00a0D)0\u00a0 0", "C", "\u903b\u8f91\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u6b21\u5e8f\u5982\u4e0b\uff1a!(\u975e)\u2192&&(\u4e0e)\u2192\u2016(\u6216)\uff0c\u4f46\u672c\u9898\u9700\u7279\u522b\u3001\u6ce8\u610f\u7684\u662f\u77ed\u8def\u7684\u6982\u5ff5\u3002", "\u00a0", "(26)\u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f__________\u3002", "#define P1(x)printf(x)", "main()", "{", "char d[]\u3002\u201dp\u201d\uff1b", "Pl(d)\uff1b", "P1(\u201dd\u201d)\uff1b", "}", "A)pd\u00a0\u00a0\u00a0 B)d\u201dd\u201d\u00a0\u00a0\u00a0 C)\u201dp\u201dd\u00a0\u00a0\u00a0 D)\u201dp\u201d\u201dd\u201d", "A", "\u5e26\u53c2\u6570\u7684\u5b8f\u5b9a\u4e49\u7684\u4e00\u822c\u5f62\u5f0f\u4e3a\uff1a#define\u5b8f\u540d(\u53c2\u6570\u8868)\u5b57\u7b26\u4e32", "\u7a0b\u5e8f\u4e2d\u7684Pl(d)\uff1b\u7ecf\u5b8f\u7f6e\u6362\u540e\u4e3aprintf(d)\uff1b\uff0c\u6240\u4ee5\u8f93\u51fa\u5b57\u7b26\u4e32p\uff1b\u7a0b\u5e8f\u4e2d\u7684Pl(\u201cd\u201d)\uff1b\u7ecf\u5b8f\u7f6e\u6362\u540eprintf(\u201cd\u201d)\u3002", "\u00a0", "(27)\u4ee5\u4e0b\u9009\u9879\u4e2d\uff0c\u80fd\u5b9a\u4e49s\u4e3a\u5408\u6cd5\u7684\u7ed3\u6784\u4f53\u53d8\u91cf\u7684\u662f__________\u3002", "A)\u00a0 typedef struct abc", "{\u00a0\u00a0\u00a0 double a\uff1b", "charb[10]\uff1b", "}s\uff1b", "B)\u00a0 struct", "{\u00a0\u00a0\u00a0 double a\uff1b", "char b[10]\uff1b", "}s\uff1b", "C)\u00a0 struct ABC", "{\u00a0\u00a0\u00a0 double a\uff1b", "char b[10]\uff1b", "}", "ABC s\uff1a", "D)\u00a0 typedef\u00a0 ABC", "{\u00a0\u00a0\u00a0 double a\uff1b", "char b[10]\uff1b", "}", "ABC s\uff1a", "B", "\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u53ef\u91c7\u7528\u4e09\u79cd\u65b9\u6cd5\uff1a", "\u2460\u5148\u5b9a\u4e49\u7ed3\u6784\u4f53\u7c7b\u578b\uff0c\u518d\u5b9a\u4e49\u53d8\u91cf\u540d\uff1b\u2461\u5728\u5b9a\u4e49\u7c7b\u578b\u7684\u540c\u65f6\u5b9a\u4e49\u53d8\u91cf\uff1a\u2462\u76f4\u63a5\u5b9a\u4e49\u7ed3\u6784\u7c7b\u578b\u53d8\u91cf\uff0c\u5373\u4e0d\u51fa\u73b0\u7ed3\u6784\u4f53\u540d\uff1a\u9009\u9879B\u7b26\u5408\u7b2c\u4e09\u79cd\u5b9a\u4e49\u65b9\u6cd5\u3002", "\u00a0", "(28)\u8bf7\u8bfb\u7a0b\u5e8f\uff1a", "#include<stdiO\uff0eh>", "#include<string-h>", "main()", "{", "char*s1=\u201dAbCdEf\u201d\uff0c *s2=\u201daB\u201d\uff1b", "s1++\uff1b\u00a0 s2++\uff1b", "printf(\u201d\uff05d\u3001n\u201d,strcmp(sl,s2))\uff1b", "}", "\u4e0a\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "A)\u6b63\u6570\u00a0\u00a0\u00a0 B)\u8d1f\u6570\u00a0\u00a0\u00a0 C)\u96f6\u00a0\u00a0\u00a0 D)\u4e0d\u786e\u5b9a\u7684\u503c", "A", "strcmp(X1,X2)\u662f\u4e32\u6bd4\u8f83\u51fd\u6570\uff0c\u672c\u9898\u4e2d\u201cs1\u201d\u3001\u201cs2\u201d\u5206\u522b\u8868\u793a\u8fd9\u4e24\u4e2a\u4e32\u4e2d\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684\u5730\u5740\uff0cs1++\u548cs2++\u662f\u5c06\u6307\u9488\u6307\u5411\u4e32\u7684\u7b2c\u4e8c\u4e2a\u5b57\u7b26\uff0c\u5219*sl\u4e3a\u201cbCdEf\u2019\u2019\uff0c*s2\u4e3a\u201cB\u201d\u3002\u5728\u5b57\u7b26\u4e32\u6bd4\u8f83\u4e2d\uff0c\u5927\u5c0f\u7684\u786e\u5b9a\u662f\u5404\u4e2a\u5b57\u7b26\u4e32\u76f8\u5e94\u4f4d\u7f6e\u5b57\u7b26\u7684ASCII\u7801\u503c\u7684\u5927\u5c0f\u51b3\u5b9a\u7684\uff0c\u00a0 sl>s2\uff0c\u8fd4\u56de\u503c\u4e3a\u6b63\u6570\u3002", "\u00a0", "(29)\u8bf7\u8bfb\u7a0b\u5e8f\uff1a", "#include<stdiO\uff0eh>", "main()", "{", "int a=5\uff0cb=7\uff0cc=9\uff1b", "printf(\u201d\uff05d\uff0c\uff05d\uff0c\u201d\uff0ca,b\uff0cC)\uff1b", "printf(\u201d\uff05d\uff0c\uff05d\uff0c\uff05d\uff0c\u201da\uff0cb)\uff1b", "}", "\u4e0a\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "A)5\uff0c7,9\uff0c5\uff0c7\u00a0 \u00a0\u00a0B)5\uff0c7\uff0c5\uff0c7\u00a0\u00a0\u00a0 C)5,7\uff0c\u4e0d\u5b9a\uff0c7\uff0c9\u00a0 \u00a0\u00a0D)5\uff0c7\uff0c5,7\uff0c\u4e0d\u5b9a", "D", "printf\u51fd\u6570\u6309\u683c\u5f0f\u63a7\u5236\u7b26\u7684\u4e2a\u6570\u8f93\u51fa\u8868\u5217\u4e2d\u5bf9\u5e94\u7684\u6570\u636e\uff0c\u82e5\u8f93\u51fa\u8868\u5217\u7684\u4e2a\u6570\u5927\u4e8e\u683c\u5f0f\u63a7\u5236\u7b26\u4e2a\u6570\uff0c\u5219\u8f93\u51fa\u4e0e\u683c\u5f0f\u63a7\u5236\u7b26\u5bf9\u5e94\u7684\u8f93\u51fa\u8868\u5217\u7684\u6570\u636e\uff0c\u8f93\u51fa\u8868\u5217\u4e2d\u591a\u7684\u5219\u7701\u7565\uff1b\u82e5\u683c\u5f0f\u63a7\u5236\u7b26\u4e2a\u6570\u5927\u4e8e\u8f93\u51fa\u8868\u5217\u7684\u4e2a\u6570\uff0c\u5219\u8f93\u51fa\u4e0e\u683c\u5f0f\u63a7\u5236\u7b26\u5bf9\u5e94\u7684\u8f93\u51fa\u8868\u5217\u7684\u6570\u636e\uff0c\u683c\u5f0f\u63a7\u5236\u7b26\u591a\u7684\u90e8\u5206\u8f93\u51fa\u7684\u6570\u636e\u662f\u968f\u673a\u7684\u3002", "\u00a0", "(30)\u8bf7\u8bfb\u7a0b\u5e8f\uff1a", "#incIude<stdio\uff0eh>", "func(int a,int b){", "Int C\uff1b", "c=a+b\uff1a", "return C\uff1a", "}", "main(){", "int x=6\uff0cy=7\uff0cz=8\uff0cr\uff1b", "r=func((x\u2013\uff0cy++\uff0cx+y)\uff0cz\u2013)\uff1b", "printf(\u201d\uff05d\\n\u201d\uff0cr)\uff1b", "}", "\u4e0a\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "A)ll\u00a0\u00a0\u00a0 B)20\u00a0\u00a0\u00a0 C)2l\u00a0\u00a0\u00a0 D)31", "C", "\u51fd\u6570func()\u7684\u4f5c\u7528\u662f\u8fd4\u56de\u4e24\u4e2a\u5f62\u53c2\u7684\u548c\uff0c\u7b2c\u4e00\u4e2a\u5f62\u53c2\u662fx\u3001y\u5206\u522b\u81ea\u51cf\u548c\u81ea\u589e\u540e\u7684\u548c\uff0c\u5176\u4e2d(x\u2013,y++,x+y)\u662f\u4e00\u4e2a\u9017\u53f7\u8868\u8fbe\u5f0f\uff0c\u5b83\u7684\u503c\u5e94\u8be5\u7b49\u4e8ex+y\uff0c\u6240\u4ee5\u6574\u4e2a\u8868\u8fbe\u5f0f(x\u2013\uff0cy++\uff0cx+y)\u7684\u503c\u4e3a13\uff0c\u800c\u7b2c\u4e8c\u4e2a\u5f62\u53c2\u7684\u503c\u4e3a8(\u6839\u636e\u8bed\u6cd5\u89c4\u5219\uff0c\u5e94\u5f53\u5148\u4f7f\u7528\uff0c\u540e\u81ea\u589e)\uff0c\u6240\u4ee5func()\u7684\u8fd4\u56de\u503c\u4e3a13+8=21\u3002", "\u00a0", "(31)\u8bf7\u8bfb\u7a0b\u5e8f\uff1a", "#include<stdiO.h>", "main()", "{", "int a\uff0cb\uff1b", "for(a=l\uff0cb=1\uff1ba<=100\uff1ba\u5341+){", "if(b>=20)break\uff1b", "if(b\uff053==1){b+=3\uff1bcontinue\uff1b}", "b-=5\uff1a", "}", "printf(\u201d\uff05d\\n\u201d\uff0ca)\uff1b", "}", "\u4e0a\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "A)7\u00a0\u00a0\u00a0 B)8\u00a0\u00a0\u00a0 C)9\u00a0\u00a0\u00a0 D)10", "B", "break\u8bed\u53e5\u7684\u4f5c\u7528\u662f\u7528\u4e8e\u8df3\u51fa\u5faa\u73af\u4f53\uff1b\u00a0 continue\u8bed\u53e5\u7684\u4f5c\u7528\u662f\u7528\u4e8e\u8df3\u51fa\u672c\u6b21\u5faa\u73af\u3002\u6267\u884c\u7b2c\u4e00\u6b21\u5faa\u73af\u65f6\uff0c\uff08b\uff053==1\uff09\u4e3a\u771f\uff0cb=4\uff0c\u7ee7\u7eed\u4e0b\u4e00\u6b21\u5faa\u73af\uff0c\u5982\u6b64\u53cd\u590d\uff0c\u5f53b=22\u65f6\u7ed3\u675f\u5faa\u73af\uff0c\u5171\u5faa\u73af8\u6b21\uff0c\u5373a=8\u3002", "\u00a0", "(32)\u8bbe\u53d8\u91cfx\u4e3afloat\u578b\u4e14\u5df2\u7ecf\u8d4b\u503c\uff0c\u5219\u4ee5\u4e0b\u8bed\u53e5\u4e2d\u80fd\u591f\u5c06x\u4e2d\u7684\u6570\u503c\u4fdd\u7559\u5230\u5c0f\u6570\u70b9\u540e\u9762\u4e24\u4f4d\uff0c\u5e76\u5c06\u7b2c\u4e09\u4f4d\u56db\u820d\u4e94\u5165\u7684\u662f__________\u3002", "A)X=X*100+0\uff0e5\uff0f100\uff0e0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)x=(X*100+0\uff0e5)\uff0f100", "C)x=(int)(x*100+0\uff0e5)\uff0f100\uff0e0\u00a0\u00a0\u00a0 D)x=(x\uff0f100+0\uff0e5)*100\uff0e0", "C", "\u672c\u9898\u901a\u8fc7\u7b97\u672f\u8868\u8fbe\u5f0f\u7684\u8fd0\u7b97\u5b9e\u73b0\u5c0f\u6570\u4f4d\u6570\u4fdd\u7559\u4e24\u4f4d\u5e76\u56db\u820d\u4e94\u5165\u7684\u64cd\u4f5c\uff0c\u5176\u4e2d(int)(x*100+0\uff0e5)\u662f\u6307\u5c06(x*100+0\uff0e5)\u7684\u503c\u5f3a\u5236\u8f6c\u6362\u6210\u6574\u578b\u3002", "\u00a0", "(33)\u8bf7\u8bfb\u7a0b\u5e8f\u7247\u6bb5(\u5b57\u7b26\u4e32\u5185\u6ca1\u6709\u7a7a\u683c\u5b57\u7b26)\uff1a", "printf(\u201d\uff05d\\n\u201d,strlen(\u201dATS\uff3cn012\uff3c1\uff3c\\\u201d))\uff1b", "\u4e0a\u9762\u7a0b\u5e8f\u7247\u6bb5\u7684\u8f93\u51fa\u7ed3\u679c\u662f____________\u3002", "A)ll\u00a0\u00a0\u00a0 B)10\u00a0\u00a0\u00a0 C)9\u00a0\u00a0\u00a0 \u00a0\u00a0D)8", "C", "\u8fd9\u4e2a\u8bed\u53e5\u7684\u76ee\u7684\u662f\u8f93\u51fa\u201cATS\uff3cn012\uff3c1\uff3c\uff3c\u201d\u8fd9\u4e2a\u4e32\u7684\u957f\u5ea6\uff0c\u5728\u4e32\u4e2d\u201c\uff3c\\\u201d\u4ee3\u8868\u4e00\u4e2a\u201c\uff3c\u201d\uff0c\u800c\u201c\uff3c1\u201d\u4ee3\u8868\u6570\u5b571\uff0c\u4e5f\u5360\u4e00\u4e2a\u5b57\u7b26\uff0c\u201c\uff3cn\u201d\u662f\u56de\u8f66\u6362\u884c\u7b26\uff0c\u4e5f\u5360\u4e00\u4e2a\u5b57\u7b26\uff0c\u52a0\u4e0aA\u3001T\u3001s\u30010\u3001l\u30012\uff0c\u51719\u4e2a\u5b57\u7b26\u3002", "\u00a0", "(34)\u8fd0\u884c\u4ee5\u4e0b\u7a0b\u5e8f\u540e\uff0c\u5982\u679c\u4ece\u952e\u76d8\u4e0a\u8f93\u5165china\u6491<\u56de\u8f66>\uff0c\u5219\u8f93\u51fa\u7ed3\u679c\u4e3a_________\u3002", "#include<stdio\uff0eh>", "main()", "{", "int v1=0,v2=0\uff1bchar ch\uff1a", "while((ch=getchar())!=\u2019#\u2019)", "switch(ch)", "{", "case\u2019a\u2019\uff1a", "case \u2018h\u2019\uff1a", "default\uff1av1++\uff1b", "case\u20190\u2019\uff1av2++\uff1a", "}", "printf(\u201d\uff05d\uff0c\uff05d\uff3cn\u201d\uff0cv1\uff0cv2)\uff1b", "}", "A)2,0\u00a0\u00a0\u00a0 B)5,0\u00a0\u00a0\u00a0 C)5,5\u00a0\u00a0\u00a0 D)2,5", "C", "\u6267\u884c\u5b8c\u4e00\u4e2acase\u540e\u9762\u7684\u8bed\u53e5\u540e\uff0c\u6d41\u7a0b\u63a7\u5236\u8f6c\u79fb\u5230\u4e0b\u4e00\u4e2acase\u7ee7\u7eed\u6267\u884c\u3002\u201ccase\u5e38\u91cf\u8868\u8fbe\u5f0f\u201d\u53ea\u662f\u8d77\u8bed\u53e5\u6807\u53f7\u4f5c\u7528\uff0c\u5e76\u4e0d\u662f\u5728\u8be5\u5904\u8fdb\u884c\u6761\u4ef6\u5224\u65ad\u3002\u5728\u6267\u884cswitch\u8bed\u53e5\u65f6\uff0c\u6839\u636eswitch\u540e\u9762\u8868\u8fbe\u5f0f\u7684\u503c\u627e\u5230\u5339\u914d\u7684\u5165\u53e3\u6807\u53f7\uff0c\u5c31\u4ece\u6b64\u6807\u53f7\u5f00\u59cb\u6267\u884c\u4e0b\u53bb\uff0c\u4e0d\u518d\u8fdb\u884c\u5224\u65ad\u3002", "\u00a0", "(35)\u8bf7\u9009\u51fa\u53ef\u7528\u4f5cc\u8bed\u8a00\u7528\u6237\u6807\u8bc6\u7b26\u7684\u4e00\u7ec4\u6807\u8bc6\u7b26__________\u3002", "A)void\u00a0\u00a0\u00a0 \u00a0\u00a0B)a3\uff0eb3\u00a0\u00a0\u00a0 \u00a0\u00a0C)For\u00a0\u00a0\u00a0 \u00a0\u00a0D)2a", "define\u00a0\u00a0\u00a0 \u00a0\u00a0-123\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0-abc \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0DO", "WORD\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0IF\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0case\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0sizeof", "B", "\u8bc4\u6790:c\u8bed\u8a00\u89c4\u5b9a\u6807\u8bc6\u7b26\u53ea\u80fd\u7531\u5b57\u6bcd\u3001\u6570\u5b57\u548c\u4e0b\u5212\u7ebf\u4e09\u79cd\u7b26\u53f7\u7ec4\u6210\uff0c\u800c\u4e14\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5fc5\u987b\u662f\u5b57\u6bcd\u6216\u4e0b\u5212\u7ebf\u3002\u9009\u9879A\u4e2d\u7684void\u662fc\u8bed\u8a00\u7684\u5173\u952e\u5b57\uff0c\u4e0d\u5408\u6cd5\uff1b\u9009\u9879c\u4e2d\u7684case\u548cc\u8bed\u8a00\u7684\u5173\u952e\u5b57\u91cd\u540d\uff0c\u4e0d\u5408\u6cd5\uff1b\u9009\u9879D\u4e2d\u76842a\u662f\u6570\u5b57\u6253\u5934\u800c\u4e14sizeof\u548cc\u8bed\u8a00\u7684\u5173\u952e\u5b57\u91cd\u540d\uff0c\u4e0d\u5408\u6cd5\u3002", "\u00a0", "(36)\u4e0b\u9762\u80fd\u6b63\u786e\u5b9a\u4e49\u6570\u7ec4\uff0c\u5e76\u6b63\u786e\u8d4b\u503c\u7684\u8bed\u53e5\u662f_________\u3002", "A)int N=5,b[N][N]\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B]int a[1][2]={{1}\uff0c{3}}", "C)int c[2][]={{1,2}\uff0c{3\uff0c4}}\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0D)int d[3][2]={{1\uff0c2}\uff0c{34}}", "D", "\u8bc4\u6790:\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u65b9\u6cd5\u5bf9\u4e8c\u7ef4\u6570\u7ec4\u521d\u59cb\u5316\uff1a", "l\u3001\u5206\u884c\u7ed9\u4e8c\u7ef4\u6570\u7ec4\u8d4b\u521d\u503c\u3002\u5982int a[3][4]={{1\uff0c2\uff0c3\uff0c4}\uff0c{5\uff0c6,7,8}\uff0c{9,10,11\uff0c12}}\uff1b", "2\u3001\u53ef\u4ee5\u5c06\u6240\u6709\u6570\u636e\u5199\u5728\u4e00\u4e2a\u82b1\u62ec\u5f27\u5185\uff0c\u6309\u6570\u7ec4\u6392\u5217\u7684\u987a\u5e8f\u5bf9\u5404\u5143\u7d20\u8d4b\u521d\u503c\u3002\u5982\uff1a", "int a[3][4]={1,2,3,4,5,6,7,8\uff1b9,10,1 l\uff0c12)\uff1b", "3\u3001\u53ef\u4ee5\u5bf9\u90e8\u5206\u5143\u7d20\u8d4b\u521d\u503c\uff1aint a[3][4]={{1}\uff0c{5}\uff0c{9}}\uff1b", "\u5b83\u7684\u4f5c\u7528\u662f\u53ea\u5bf9\u5404\u884c\u7b2c\u4e00\u5217\u7684\u5143\u7d20\u8d4b\u521d\u503c\uff0c\u5176\u4f59\u5143\u7d20\u503c\u81ea\u52a8\u4e3a0\u3002", "4\u3001\u5982\u679c\u5bf9\u5168\u90e8\u5143\u7d20\u90fd\u8d4b\u521d\u503c(\u5373\u63d0\u4f9b\u5168\u90e8\u521d\u59cb\u6570\u636e)\uff0c\u5219\u5b9a\u4e49\u6570\u7ec4\u65f6\u5bf9\u7b2c\u4e00\u7ef4\u7684\u957f\u5ea6\u53ef\u4ee5\u4e0d\u6307\u5b9a\uff0c\u4f46\u7b2c\u4e8c\u7ef4\u7684\u957f\u5ea6\u4e0d\u80fd\u7701\u3002\u5982\uff1aint a[3][4]={1,2,3,4,5,6,7,8,9,10,11\uff0c12}\uff1b", "\u4e0e\u4e0b\u9762\u7684\u5b9a\u4e49\u7b49\u4ef7\uff1aint a[][4]={1,2,3,4,5,6,7,8,9,10,1l\uff0c12}\uff1b", "\u00a0", "(37)\u8bf7\u9009\u51fa\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c___________\u3002", "#include<stdio\uff0eh>", "sub(int*s,int y)", "{\u00a0 static int t=3\uff1b", "y=s[t]\uff1bt\u2013\uff1b", "}", "main()", "{\u00a0 int a[]={1,2,3,4}\uff0ci\uff0cx=0\uff1b", "for(i=0\uff1bi<4\uff1bi++){", "sub(a\uff0cx)\uff1bprintf(\u201d\uff05d\u201d\uff0cx)\uff1b)", "printf(\u201d\uff3cn\u201d)\uff1b", "}", "A)1234\u00a0\u00a0\u00a0 B)432l\u00a0\u00a0\u00a0 C)0000\u00a0\u00a0\u00a0 D)4444", "C", "x\u4f5c\u4e3a\u51fd\u6570sub()\u7684\u5b9e\u53c2\u65f6\uff0c\u51fd\u6570\u5bf9x\u503c\u7684\u6539\u53d8\u6ca1\u6709\u8fd4\u56de\u4e3b\u51fd\u6570\uff0c\u5e76\u4e0d\u80fd\u4f7f\u5f97x\u7684\u503c\u53d8\u5316\uff0c\u6240\u4ee5\u5728\u6253\u5370\u65f6\uff0cx\u7684\u503c\u662f\u59cb\u7ec8\u4e0d\u53d8\u7684\uff0c\u5373\u4e3a0\u3002", "\u00a0", "(38)\u5047\u5b9a\u4e0b\u9762\u7a0b\u5e8f\u53ef\u6267\u884c\u6587\u4ef6\u540dprg\uff0eexe\uff0c\u5219\u8be5\u7a0b\u5e8f\u6240\u5728\u7684\u5b50\u76ee\u5f55\u4e0b\u8f93\u5165\u547d\u4ee4\u884c\uff1aprg hello", "good<\u56de\u8f66>\u540e\uff0c\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "main(int argc,char*argv[])", "{", "int i\uff1b", "for=1\uff1bi<argc\uff1bi++)printf(\u201d\uff05c\u201d\uff0c*argv[I])\uff1b", "}", "A)heUo good \u00a0\u00a0\u00a0\u00a0B)hg\u00a0\u00a0\u00a0 C)hel\u00a0\u00a0\u00a0 \u00a0D)hellogood", "B", "\u5e26\u53c2\u6570\u7684main()\u51fd\u6570\u5e38\u7528\u5f62\u5f0f\u4e3a\uff1amain(int argc,char\uff0e*argv[])\uff0c\u5176\u4e2d\uff0c\u6574\u578b\u53d8\u91cfargc\u7528\u6765\u8bb0\u5f55\u547d\u4ee4\u884c\u4e2d\u7684\u53c2\u6570\u4e2a\u6570\u3002\u53c2\u6570\u7684\u4e2a\u6570\u7531c\u7a0b\u5e8f\u8fd0\u884c\u65f6\u81ea\u52a8\u8ba1\u7b97\u51fa\u6765\u3002\u5b57\u7b26\u578b\u6307\u9488\u6570\u7ec4argv\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5b58\u653e\u547d\u4ee4\u540d\uff0c\u5176\u540e\u5404\u4e2a\u5143\u7d20\u4f9d\u6b21\u5b58\u653e\u547d\u4ee4\u884c\u4e2d\u5404\u4e2a\u53c2\u6570\u7684\u9996\u5730\u5740\uff0c\u6570\u7ec4\u7684\u5927\u5c0f\u7531argc\u786e\u5b9a\u3002for\u5faa\u73af\u8bed\u53e5\u5b9e\u73b0\u8f93\u51fa\u5404\u53c2\u6570\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u3002", "\u00a0", "(39)\u82e5\u6709\u4ee5\u4e0b\u8bf4\u660e\u548c\u8bed\u53e5\uff0c\u8bf7\u9009\u51fa\u54ea\u4e2a\u662f\u5bf9c\u6570\u7ec4\u5143\u7d20\u7684\u6b63\u786e\u5f15\u7528_________\u3002", "int c[4][5]\uff0c(*cp)[5]\uff1b", "cp=c\uff1b", "A)cp+l\u00a0\u00a0\u00a0 B)*(cp+3)\u00a0\u00a0\u00a0 C)*(cp+1)+3\u00a0\u00a0\u00a0 D)*(*cp+2)", "D", "cp=c\u8fd9\u4e2a\u8bed\u53e5\u662f\u5c06\u6570\u7ec4\u7b2c0\u884c\u7684\u5730\u5740\u8d4b\u7ed9\u4e86cp\u3002cp+1\u4f7f\u6307\u9488\u6307\u5411\u4e8c\u7ef4\u6570\u7ec4c\u7684\u7b2c\u4e00\u884c\uff1b+(cp+3)\u662f\u6570\u7ec4c\u7684\u7b2c\u4e09\u884c\u7684\u7b2c0\u5217\u7684\u5730\u5740\u503c\uff1b+(cp+1)+3\u662f\u6570\u7ec4c\u7684\u7b2c\u4e00\u884c\u7b2c\u4e09\u5217\u7684\u5730\u5740\u503c\u3002", "\u00a0", "(40)\u4e0b\u5217\u9009\u9879\u4e2d\u4e0d\u80fd\u6b63\u786e\u5b9a\u4e49\u7ed3\u6784\u4f53\u7684\u662f_________\u3002", "A)typede fstruct\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)struct color c1", "{ int red\uff1b\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ int red\uff1b", "int green\uff1b\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int green\uff1b", "int blue\uff1b\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int blue\uff1b", "}cOLOR\uff1b\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\uff1b", "COLOR cl\uff1b", "C)struct color\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)struct", "{ int red\uff1b\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ int red\uff1b", "int green\uff1b\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int green\uff1b", "int blue\uff1b\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int blue\uff1b", "}cl\uff1b\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}cl\uff1b", "B", "\u5c06\u4e00\u4e2a\u53d8\u91cf\u5b9a\u4e49\u4e3a\u6807\u51c6\u7c7b\u578b\u4e0e\u5b9a\u4e49\u4e3a\u7ed3\u6784\u4f53\u7c7b\u578b\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff1a\u540e\u8005\u4e0d\u4ec5\u8981\u6c42\u6307\u5b9a\u53d8\u91cf\u4e3a\u7ed3\u6784\u4f53\u7c7b\u578b\uff0c\u800c\u4e14\u8981\u6c42\u6307\u5b9a\u4e3a\u67d0\u4e00\u7279\u5b9a\u7684\u7ed3\u6784\u4f53\u7c7b\u578b(\u4f8b\u5982\uff0cstruct color)\uff0c\u4e0d\u80fd\u53ea\u6307\u5b9a\u7ed3\u6784\u4f53\u540d\u3002\u5176\u4e2d\u53ef\u4ee5\u4e0d\u51fa\u73b0\u7ed3\u6784\u4f53\u540d\uff0c\u7b54\u6848D\u5c31\u662f\u7f3a\u7701\u7ed3\u6784\u4f53\u540d\u7684\u60c5\u51b5\u3002\u800c\u53d8\u91cf\u540d\u5217\u8868\u5fc5\u987b\u653e\u5728\u6210\u5458\u5217\u8868\u540e\u9762\uff0c\u6240\u4ee5B\u7b54\u6848\u4e0d\u80fd\u6b63\u786e\u5c06c1\u5b9a\u4e49\u4e3a\u7ed3\u6784\u4f53\u53d8\u91cf\u3002", "\u00a0", "(41)\u8bbe\u6709\u4ee5\u4e0b\u8bed\u53e5", "char a=3,b=6,c\uff1b", "c=a^b<<2\uff1a", "\u5219c\u7684\u4e8c\u8fdb\u5236\u503c\u662f_________\u3002", "A)00011011 \u00a0\u00a0\u00a0\u00a0\u00a0B)00010100\u00a0 \u00a0\u00a0\u00a0C)00011100\u00a0\u00a0\u00a0\u00a0\u00a0 D)00011000", "A", "\u201c<<\u201d\u662fc\u8bed\u8a00\u4e2d\u89c4\u5b9a\u7684\u5de6\u79fb\u8fd0\u7b97\u7b26\uff0cn\u662f\u5f02\u6216\u8fd0\u7b97\u7b26\uff0c\u6240\u4ee5\uff0cc\u7684\u4e8c\u8fdb\u5236\u503c\u5e94\u4e3a0001 1011\u3002", "\u00a0", "(42)\u8bbe\u6709\u5982\u4e0b\u5b9a\u4e49", "struct ss", "{\u00a0\u00a0 char name[10]\uff1b", "int age\uff1b", "char sex\uff1b", "}std[3]\uff0c*p=std\uff1b", "\u4e0b\u5217\u5404\u8f93\u5165\u8bed\u53e5\u4e2d\u9519\u8bef\u7684\u662f__________.", "A)scanf(\u201d\uff05d\u201d\uff0c&(*p)\uff0eage)\uff1b\u00a0\u00a0\u00a0 \u00a0\u00a0B)scanf(\u201d\uff05s\u201d\uff0c&std\uff0ename)\uff1b", "C)scanf(\u201d\uff05c\u201d\uff0c&std[O]\uff0esex)\uff1b\u00a0\u00a0\u00a0 D)SCanf(\u201d\uff05c\u201d\uff0c\uff06(p->SEX))\uff1b", "B", "\u5728c\u8bed\u8a00\u4e2d\uff0c\u7ed3\u6784\u4f53\u53d8\u91cf\u7684\u5f15\u7528\u6709\u4e09\u79cd\u7b49\u4ef7\u65b9\u5f0f\uff1a", "1\u3001\u7ed3\u6784\u4f53\u53d8\u91cf\uff0e\u6210\u5458\u540d\uff1b2\u3001(*p)\uff0e\u6210\u5458\u540d\uff1b3\u3001p->\u6210\u5458\u540d\u3002", "\u56e0\u4e3astd\uff0ename\u662f\u5b57\u7b26\u6570\u7ec4\u540d\uff0c-\u672c\u8eab\u4ee3\u8868\u5730\u5740\uff0c\u5176\u524d\u9762\u4e0d\u5e94\u8be5\u4f7f\u7528\u201c&\u201d\u7b26\u53f7\uff0c\u6240\u4ee5\u9009\u9879B\u9519\u8bef\u3002", "\u00a0", "(43)\u8bbe\u6709", "static char str[]=\u201dBeijing\u201d\uff1b", "\u5219\u6267\u884c", "printf(\uff05d\uff3cn\u201d,strlen(strcpy(str,\u201dChina\u201d)))\uff1b", "\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u4e3a__________\u3002", "A)5\u00a0\u00a0\u00a0 B)7\u00a0\u00a0\u00a0 C)12\u00a0\u00a0\u00a0 D)14", "A", "\u5728\u6267\u884cprintf()\u51fd\u6570\u524d\uff0c\u6570\u7ec4str\u7684\u957f\u5ea6\u662f7\uff0c\u4f46\u662f\u5f53\u4f7f\u7528strcpy()\u51fd\u6570\u5c06\u65b0\u7684\u503c\u8d4b\u7ed9str\u540e\uff0cstrlenr)\u51fd\u6570\u8fd4\u56de\u7684\u5e94\u5f53\u662f\u73b0\u5728\u7684str\u5b57\u7b26\u4e32\u7684\u5b57\u7b26\u4e2a\u6570\uff0c\u5373\u662f5\u3002", "\u00a0", "(44)\u4e0b\u5217\u7a0b\u5e8f\u6bb5\u4e2d\uff0c\u4e0d\u662f\u6b7b\u5faa\u73af\u7684\u662f__________\u3002", "A)int i=100\uff1b\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)unsigned k=0\uff1b", "while(1)\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0do", "{\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{", "i=i\uff05100+l\uff1a\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0++k\uff1b", "if(i>=100)break\uff1b\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0}", "}\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 while(k>=0)\uff1b", "C)for(\uff1b\uff1b)\uff1b\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)int s=3379\uff1b", "while(s++\uff052+s\uff052)s++\uff1b", "A", "\u5f53\u8868\u8fbe\u5f0f\u4e3a\u975e0\u503c\u65f6\uff0c\u6267\u884cwhile\u8bed\u53e5\u4e2d\u7684\u5185\u5d4c\u8bed\u53e5\uff0c\u53ef\u7528break\u8bed\u53e5\u8df3\u51fa\u5faa\u73af\uff0c\u7528continue\u8bed\u53e5\u7ed3\u675f\u672c\u6b21\u5faa\u73af\u3002\u9009\u9879A\u4e0d\u662f\u6b7b\u5faa\u73af\uff0c\u5f53i=100\u65f6\u8df3\u51fa\u5faa\u73af\u3002\u9009\u9879c\u4e3a\u7a7a\u5faa\u73af\u8bed\u53e5\u3002", "\u00a0", "(45)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "#include<stdio\uff0eh>", "main()", "{\u00a0 int i\uff1b", "for(i=l\uff1bi<5\uff1bi++){", "if(i\uff052)print\u5f15\u5243\u2019)\uff1b", "else continue\uff1b", "printf(\u201d\u2260f\u201d)\uff1b", "}", "printf(\u201d$\uff3cn\u201d)\uff1b", "}", "A)*#*#*#$\u00a0 \u00a0\u00a0B)#*#*#*$\u00a0 \u00a0\u00a0\u00a0C)*#*#$\u00a0\u00a0\u00a0 \u00a0D)#*#*$", "C", "\u5f53i\u4e0d\u53ef\u4ee5\u6574\u96642\u65f6\u6253\u5370\u201c*\u201d\uff0c\u7136\u540e\u6253\u5370\u201c\u62cc\u201d\uff0c\u4e0d\u80fd\u6574\u96642\u5219\u6267\u884ccontinue\uff0c\u8df3\u8fc7printf(\u201c#\u201d)\uff1a\u8bed\u53e5\uff0c\u7ed3\u675f\u672c\u6b21\u5faa\u73af\uff0c\u8fd4\u56de\u5230\u5faa\u73af\u7684\u8d77\u59cb\u70b9\u3002\u5f53\u5faa\u73af\u7ed3\u675f\u540e\uff0c\u6253\u5370\u201c$\u201d\u3002", "\u00a0", "(46)\u5e93\u51fd\u6570strcpy\u7528\u4ee5\u590d\u5236\u5b57\u7b26\u4e32\uff0c\u82e5\u6709\u4ee5\u4e0b\u5b9a\u4e49\u548c\u8bed\u53e5\uff1a", "char strl[]=\u201dchina\u201d,str2[10]\uff0c*str3,*str4=\u201dchina\u201d\uff1b", "\u5219\u5bf9\u5e93\u51fd\u6570strcpy\u7684\u6b63\u786e\u7684\u8c03\u7528\u662f_________\u3002", "A)strcpy(strl\uff0c\u201dpeople\u201d)\uff1b\u00a0\u00a0\u00a0 B)strcpy(str2,\u201dpeople\u201d)\uff1b", "C)strcpy(str3\uff0c\u201dpeople\u201d)\uff1b\u00a0\u00a0\u00a0 D)strcpy(str4,\u201dpeople\u201d)\uff1b", "B", "strcpy(\u5b57\u7b26\u6570\u7ec41\uff0c\u5b57\u7b26\u4e322)\u5176\u4f5c\u7528\u662f\u5c06\u5b57\u7b26\u4e322\u590d\u5236\u5230\u5b57\u7b26\u6570\u7ec4l\u4e2d\u53bb\u3002", "\u6ce8\uff1a(1)\u5b57\u7b26\u6570\u7ec4l\u5fc5\u987b\u5b9a\u4e49\u5f97\u8db3\u591f\u5927\uff1b(2)\u201c\u5b57\u7b26\u6570\u7ec41\u201d\u5fc5\u987b\u5199\u6210\u6570\u7ec4\u540d\u7684\u5f62\u5f0f\uff1b\u00a0 (3)\u590d\u5236\u65f6\u8fde\u540c\u5b57\u7b26\u4e32\u540e\u9762\u7684\u2018\uff3c0\u2019\u4e00\u8d77\u590d\u5236\u5230\u5b57\u7b26\u6570\u7ec41\u4e2d\u3002", "\u00a0", "(47)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "#include<stdio\uff0eh>", "main()", "{int c\uff1b", "while((c=getchar())!=\u2019\uff3cn\u2019){", "switch(C-\u20192\u2032){", "case 0\uff1acase 1\uff1aputchar(c+4)\uff1b", "case 2\uff1aputchar(c+4)\uff1bbreak\uff1b", "case 3\uff1aputchar(c+3)\uff1b", "default\uff1aputchar(c+2)\uff1bbreak\uff1b}", "}", "}", "\u4ece\u7b2c\u4e00\u5217\u5f00\u59cb\u8f93\u5165\u4ee5\u4e0b\u6570\u636e\uff0c\u2199\u4ee3\u8868\u4e00\u4e2a\u56de\u8f66\u7b26\u3002", "2473\u2199", "\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "A)668977\u00a0 \u00a0\u00a0\u00a0B)668966\u00a0\u00a0\u00a0 \u00a0\u00a0C)66778777\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0D)6688766", "A", "getchar()\u51fd\u6570\u662f\u4ece\u952e\u76d8\u63a5\u53d7\u4e00\u4e2a\u5b57\u7b26\u8f93\u5165\uff1b\u5f53\u7528\u6237\u952e\u5165\u7684\u5b57\u7b26\u4e0d\u662f\u56de\u8f66\u7b26\u65f6\uff0c\u4f1a\u8fdb\u5165\u4e00\u4e2a\u591a\u5206\u652f\u9009\u62e9\u8bed\u53e5\uff0c\u6839\u636eC-\u20182\u2032\u7684\u503c\u8fdb\u884c\u5206\u652f\u9009\u62e9\uff1bputchar()\u662f\u5728\u5c4f\u5e55\u4e0a\u6253\u5370\u4e00\u4e2a\u5b57\u7b26\uff0c\u6700\u540e\u7684\u7ed3\u679c\u5e94\u5f53\u4e3a668977\u3002", "\u00a0", "(48)\u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "Union un", "{ int a[4]\uff1b", "long b\uff1a", "char c[6]\uff1b}", "main()", "{", "union un u\uff1a", "printf(\u201d\uff05d\uff05d\u201d,sizeof(u)\uff0csizeof(u\uff0ea))\uff1b", "}", "A)82\u00a0\u00a0\u00a0 B)88\u00a0\u00a0\u00a0 C)188\u00a0\u00a0\u00a0 D)182", "B", "sizeof\u51fd\u6570\u8ba1\u7b97\u5df2\u77e5\u7c7b\u578b\u6240\u5360\u7684\u5b57\u8282\u6570\u3002\u5171\u7528\u4f53\u53d8\u91cf\u6240\u5360\u7684\u5185\u5b58\u957f\u5ea6\u7b49\u4e8e\u6700\u957f\u7684\u6210\u5458\u7684\u957f\u5ea6\u3002", "\u00a0", "(49)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "main()", "{\u00a0 int w=5\uff1bfun(w)\uff1bprintf(\u201d\uff3cn\u201d)\uff1b}", "fun(int k)", "{\u00a0 if(k>0)\u00a0 fun(k-1)\uff1b", "printf(\u201d\uff05d\uff0et\uff0ck)\uff1b", "}", "A)5\u00a0 4\u00a0 3\u00a02\u00a0 l\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0B)0\u00a0 1\u00a0 2\u00a0 3\u00a0 4\u00a0 5", "C)l\u00a0 2\u00a0 3\u00a0 4\u00a0 5\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0D)5\u00a0 4\u00a0 3\u00a02\u00a0 l\u00a0 0", "B", "\u51fd\u6570\u7684\u9012\u5f52\u8c03\u7528\u5c31\u662f\u5728\u8c03\u7528\u4e00\u4e2a\u51fd\u6570\u7684\u8fc7\u7a0b\u4e2d\u53c8\u51fa\u73b0\u76f4\u63a5\u6216\u95f4\u63a5\u5730\u8c03\u7528\u8be5\u51fd\u6570\u672c\u8eab\u3002fun\u51fd\u6570\u5171\u88ab\u8c03\u75286\u6b21\uff0c\u5373fun(5)\u3001fun(4)\u3001fun(3)\u3001fun(2)\u3001\u5411n(1)\u3001fun(0)\u3002\u5176\u4e2dfun(5)\u662fmain\u51fd\u6570\u8c03\u7528\u7684\u3002", "\u00a0", "(50)\u82e5\u5dfe\u662f\u6307\u5411\u67d0\u6587\u4ef6\u7684\u6307\u9488\uff0c\u4e14\u5df2\u8bfb\u5230\u6b64\u6587\u4ef6\u7684\u672b\u5c3e\uff0c\u5219\u51fd\u6570feof(f1))\u7684\u8fd4\u56de\u503c\u662f", "A)EOF\u00a0\u00a0\u00a0 B)O\u00a0\u00a0\u00a0 C)\u975e\u96f6\u503c\u00a0\u00a0\u00a0 D)NULL", "C", "\u51fd\u6570feof\u662f\u7528\u6765\u5224\u65ad\u6587\u4ef6\u662f\u5426\u5df2\u8bfb\u5230\u672b\u5c3e\uff0c\u5982\u679c\u5df2\u8bfb\u5230\u672b\u5c3e\u5219\u8fd4\u56de\u975e\u96f6\u503c\uff0c\u5426\u5219\u8fd4\u56deO\u3002", "\u00a0", "\u4e8c\u3001\u586b\u7a7a\u9898(\u6bcf\u7a7a2\u5206\uff0c\u517140\u5206)", "\u8bf7\u5c06\u6bcf\u4e00\u4e2a\u7a7a\u7684\u6b63\u786e\u7b54\u6848\u5199\u5728\u7b54\u9898\u5361\u7684\u30101\u3011\u81f3\u301020\u3011\u5e8f\u53f7\u7684\u6a2a\u7ebf\u4e0a\uff0c\u7b54\u5728\u8bd5\u5377\u4e0a\u4e0d\u5f97\u00a0\u00a0\u00a0 \u5206\u3002", "(1)\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u4e3b\u8981\u5305\u62ec\u65f6\u95f4\u590d\u6742\u5ea6\u548c", "\u590d\u6742\u5ea6\u3002", "\u30101\u3011\u7a7a\u95f4", "\u4e60\u60ef\u4e0a\u5e38\u5e38\u628a\u8bed\u53e5\u91cd\u590d\u6267\u884c\u7684\u6b21\u6570\u4f5c\u4e3a\u7b97\u6cd5\u8fd0\u884c\u65f6\u95f4\u7684\u76f8\u5bf9\u91cf\u5ea6\uff0c\u79f0\u4f5c\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u7b97\u6cd5\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u9700\u8f85\u52a9\u5b58\u50a8\u7a7a\u95f4\u7684\u5927\u5c0f\u79f0\u4e3a\u7b97\u6cd5\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u3002", "\u00a0", "(2)\u6570\u636e\u7684\u7269\u7406\u7ed3\u6784\u5728\u8ba1\u7b97\u673a\u5b58\u50a8\u7a7a\u95f4\u4e2d\u7684\u5b58\u653e\u5f62\u5f0f\u79f0\u4e3a\u6570\u636e\u7684", "\u3002", "\u30102\u3011\u5185\u6a21\u5f0f\u6216\u7269\u7406\u6a21\u5f0f\u6216\u5b58\u50a8\u6a21\u5f0f", "\u4e00\u4e2a\u6570\u636e\u5e93\u53ea\u6709\u4e00\u4e2a\u5185\u6a21\u5f0f\uff0c\u5b83\u662f\u6570\u636e\u7269\u7406\u7ed3\u6784\u548c\u5b58\u50a8\u65b9\u5f0f\u7684\u63cf\u8ff0\uff0c\u662f\u6570\u636e\u5e93\u5185\u90e8\u7684\u8868\u793a\u65b9\u6cd5\u3002\u4f8b\u5982\uff0c\u8bb0\u5f55\u7684\u5b58\u50a8\u65b9\u5f0f\u662f\u987a\u5e8f\u5b58\u50a8\u3001\u7d22\u5f15\u6309\u7167\u4ec0\u4e48\u65b9\u5f0f\u7ec4\u7ec7\uff1b\u6570\u636e\u662f\u5426\u538b\u7f29\u5b58\u50a8\uff0c\u662f\u5426\u52a0\u5bc6\u7b49\u3002", "\u00a0", "(3)\u82e5\u6309\u529f\u80fd\u5212\u5206\uff0c\u8f6f\u4ef6\u6d4b\u8bd5\u7684\u65b9\u6cd5\u901a\u5e38\u5206\u4e3a", "\u6d4b\u8bd5\u65b9\u6cd5\u548c\u9ed1\u76d2\u6d4b\u8bd5\u65b9\u6cd5\u3002", "\u30103\u3011\u767d\u76d2", "\u8f6f\u4ef6\u6d4b\u8bd5\u7684\u65b9\u6cd5\u6709\u4e09\u79cd\uff1a\u52a8\u6001\u6d4b\u8bd5\u3001\u9759\u6001\u6d4b\u8bd5\u548c\u6b63\u786e\u6027\u8bc1\u660e\u3002\u8bbe\u8ba1\u6d4b\u8bd5\u5b9e\u4f8b\u7684\u65b9\u6cd5\u4e00\u822c\u6709\u4e24\u7c7b\uff1a\u9ed1\u76d2\u6d4b\u8bd5\u65b9\u6cd5\u548c\u81ea\u76d2\u6d4b\u8bd5\u65b9\u6cd5\u3002", "\u00a0", "(4)\u6570\u636e\u5e93\u4e09\u7ea7\u6a21\u5f0f\u4f53\u7cfb\u7ed3\u6784\u7684\u5212\u5206\uff0c\u6709\u5229\u4e8e\u4fdd\u6301\u6570\u636e\u5e93\u7684", "\u3002", "\u30104\u3011\u6570\u636e\u72ec\u7acb\u6027", "\u6570\u636e\u5e93\u7684\u4e09\u7ea7\u6a21\u5f0f\u4f53\u7cfb\u7ed3\u6784\u628a\u6570\u636e\u7684\u7ec4\u7ec7\u7ba1\u7406\u5de5\u4f5c\u8fdb\u884c\u4e86\u5212\u5206\uff0c\u628a\u6570\u636e\u7684\u5177\u4f53\u7ec4\u7ec7\u7559\u7ed9DBMS\u7ba1\u7406\uff0c\u4f7f\u7528\u6237\u80fd\u903b\u8f91\u5730\u3001\u62bd\u8c61\u5730\u5904\u7406\u6570\u636e\uff0c\u800c\u4e0d\u5fc5\u5173\u5fc3\u6570\u636e\u5728\u8ba1\u7b97\u673a\u4e2d\u7684\u5177\u4f53\u8868\u793a\u65b9\u5f0f\u4e0e\u5b58\u50a8\u65b9\u5f0f\uff0c\u4fdd\u8bc1\u4e86\u6570\u636e\u7684\u72ec\u7acb\u6027\u3002", "\u00a0", "(5)\u5728\u5173\u7cfb\u8fd0\u7b97\u4e2d\uff0c\u67e5\u627e\u6ee1\u8db3\u4e00\u5b9a\u6761\u4ef6\u7684\u5143\u7ec4\u7684\u8fd0\u7b97\u79f0\u4e4b\u4e3a", "\u3002", "\u30105\u3011\u9009\u62e9", "\u5728\u5173\u7cfb\u6570\u636e\u5e93\u4e2d\uff0c\u9009\u62e9\u8fd0\u7b97\u4e5f\u662f\u4e00\u4e2a\u5143\u8fd0\u7b97\uff0c\u5173\u7cfbR\u901a\u8fc7\u9009\u62e9\u8fd0\u7b97(\u5e76\u7531\u8be5\u8fd0\u7b97\u7ed9\u51fa\u6240\u9009\u62e9\u7684\u903b\u8f91\u6761\u4ef6)\u540e\u4ecd\u4e3a\u4e00\u4e2a\u5173\u7cfb\u3002\u8fd9\u4e2a\u5173\u7cfb\u662f\u7531R\u4e2d\u7684\u90a3\u4e9b\u6ee1\u8db3\u903b\u8f91\u6761\u4ef6\u7684\u5143\u7ec4\u6240\u7ec4\u6210\u3002", "\u00a0", "(6)\u5728C\u8bed\u8a00\u4e2d(\u4ee516\u4f4dPC\u673a\u4e3a\u4f8b)\uff0c\u4e00\u4e2afloat\u578b\u6570\u636e\u5728\u5185\u5b58\u4e2d\u6240\u5360\u7684\u5b57\u8282\u6570\u4e3a4\uff1b\u4e00\u4e2adouble\u578b\u6570\u636e\u5728\u5185\u5b58\u4e2d\u6240\u5360\u7684\u5b57\u8282\u6570\u4e3a", "\u3002", "\u30106\u30118", "\u5728\u4e00\u822c16\u4f4dPC\u673a\u4e2d\uff0c\u4e00\u4e2afloat\u578b\u6570\u636e\u5728\u5185\u5b58\u4e2d\u53604\u4e2a\u5b57\u8282(32\u4f4d)\uff0c\u4e00\u4e2adouble\u578b\u6570\u636e\u53608\u4e2a\u5b57\u8282\u3002", "\u00a0", "(7)\u8bbe\u6709\u4ee5\u4e0b\u53d8\u91cf\u5b9a\u4e49\uff0c\u5e76\u5df2\u8d4b\u786e\u5b9a\u7684\u503c\uff0c", "char w\uff1bint x\uff1bfloat y\uff1bdouble z\uff1b", "\u5219\u8868\u8fbe\u5f0f\uff1aw*x+z-y\u6240\u6c42\u5f97\u7684\u6570\u636e\u7c7b\u578b\u4e3a", "\u3002", "\u30107\u3011double\u578b\u6216\u53cc\u7cbe\u5ea6\u578b", "\u2460\u5148\u8fdb\u884cW*X\u7684\u8fd0\u7b97\uff0c\u5148\u5c06\u5b57\u7b26\u578bw\u8f6c\u6362\u6210\u6574\u578b\uff0c\u8fd0\u7b97\u7ed3\u679c\u4e3a\u6574\u578b\uff1b\u2461\u518d\u5c06W*X\u7684\u7ed3\u679c\u4e0ez\u76f8\u52a0\uff0c\u8981\u5148\u5c06\u7b2c\u4e00\u6b65\u7684\u6574\u578b\u8f6c\u6362\u4e3adouble\u578b\uff0c\u8fd0\u7b97\u7ed3\u679c\u4e3adouble\u578b\uff1b\u2462\u6700\u540e\u5c06W*X+Z\u7684\u7ed3\u679c\u4e0ey\u76f8\u51cf\uff0c\u8981\u5148\u5c06float\u578by\u8f6c\u6362\u6210double\u578b\uff0c\u7ed3\u679c\u4e3adouble\u578b\u3002", "\u00a0", "(8)\u82e5\u8fd0\u884c\u65f6\u7ed9\u53d8\u91cfx\u8f93\u516512\uff0c\u5219\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f", "\uff1b", "main(){", "int\uff0cy\uff1b", "scanf(\u201d\u201d\uff05d\u201d\u201d\uff0c&X)\uff1b", "y=x>12?x+lO\uff1ax-12\uff1b", "printf(\u201c\u201d\uff05d\uff3cn\u201d\",y)\uff1b", "}", "\u30108\u30110", "\u4e09\u76ee\u8fd0\u7b97\u7b26\u7684\u5f62\u5f0f\u4e3a(\u8868\u8fbe\u5f0f1)7(\u8868\u8fbe\u5f0f2)\uff1a(\u8868\u8fbe\u5f0f3)\u3002\u5f53(\u8868\u8fbe\u5f0f1)\u503c\u4e3a\u771f\u65f6\uff0c\u8fd4\u56de(\u8868\u8fbe\u5f0f2)\u7684\u503c\uff1b\u4e3a\u5047\u65f6\uff0c\u8fd4\u56de(\u8868\u8fbe\u5f0f3)\u7684\u503c\u3002\u9898\u4e2d\u56e0\u4e3ax>t2\u4e3a\u5047\uff0c\u6240\u4ee5\u7ed3\u679c\u4e3ax-12\uff0c\u5373\u4e3a0\u3002", "\u00a0", "(9)\u56db\u6761\u8bed\u53e5\uff1ax++\uff1b\u3001++x\uff1b\u3001x=x+l\uff1b\u3001x=l+x\uff1b\uff0c\u6267\u884c\u540e\u90fd\u4f7f\u53d8\u91cfx\u4e2d\u7684\u503c\u589el\uff0c\u8bf7\u5199\u51fa\u4e00\u6761\u540c\u4e00\u529f\u80fd\u7684\u8d4b\u503c\u8bed\u53e5(\u4e0d\u5f97\u4e0e\u5217\u4e3e\u7684\u76f8\u540c)", "\u3002", "\u30109\u3011x+=1\uff1a", "\u9898\u9762\u4e2d\u7684\u56db\u6761\u8bed\u53e5\u7684\u4f5c\u7528\u662f\u4f7fx\u7684\u503c\u52a01\uff0c\u5728c\u4e2d\u6709\u591a\u79cd\u65b9\u6cd5\u53ef\u4ee5\u5bf9\u53d8\u91cf\u8fdb\u884c\u52a01\u64cd\u4f5c\uff0c\u8fd9\u91cc\u53ef\u4ee5\u5229\u7528C\u7684\u590d\u5408\u8d4b\u503c\u8fd0\u7b97\u7b26+=\u5b9e\u73b0\uff0c\u672c\u9898\u7b54\u6848\u4e3ax+=1\uff1a\u3002", "\u00a0", "(10)\u8bbe\u6709\u4ee5\u4e0b\u5b9a\u4e49\u548c\u8bed\u53e5\uff0c\u5219*(*(p+2)+1)\u7684\u503c\u4e3a", "\u3002", "int[3][2]={10,20,30,40,50,60},(*p)[2]\uff1b", "p=a\uff1b", "\u301010\u301160", "\u672c\u9898\u5b9a\u4e49\u4e86\u4e00\u4e2a3\u884c2\u5217\u7684\u4e8c\u7ef4\u6570\u7ec4a\uff0c\u5e76\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6307\u5411\u4e24\u4e2a\u5143\u7d20\u7684\u4e00\u7ef4\u6570\u7ec4\u6307\u9488p\uff0c\u8ba9p\u6307\u5411\u4e8c\u7ef4\u6570\u7ec4a\u7684\u9996\u884c\u3002*(*(p+2)+1)\u662f\u5f15\u7528a[2][1]\uff0c\u5176\u503c\u662f60\u3002", "\u00a0", "(11)\u82e5\u8981\u4f7f\u6307\u9488p\u6307\u5411\u4e00\u4e2adouble\u7c7b\u578b\u7684\u52a8\u6001\u5b58\u50a8\u5355\u5143\uff0c\u8bf7\u586b\u7a7a\u3002", "p=", "malloc(sizeof(double))\uff1b", "\u301011\u3011(double*)", "\u51fd\u6570malloc\u8fd4\u56de\u7684\u662fvoid*\uff0c\u6240\u4ee5\u82e5\u8981\u4f7f\u6307\u9488\u6307\u5411\u4e00\u4e2adouble\u7c7b\u578b\uff0c\u5219\u5fc5\u987b\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\uff0c\u7c7b\u578b\u8f6c\u6362\u683c\u5f0f\u4e3a\uff1a(\u6570\u636e\u7c7b\u578b*)\u3002", "\u00a0", "(12)\u4e0b\u9762\u7a0b\u5e8f\u7684\u529f\u80fd\uff1a\u8f93\u51fa100\u4ee5\u5185\u80fd\u88ab3\u6574\u9664\u4e14\u4e2a\u4f4d\u6570\u4e3a6\u7684\u6240\u6709\u6574\u6570\uff0c\u8bf7\u8865\u5145\u5b8c\u6574\u3002", "main()\uff0e", "{\u00a0 int ij\uff1b", "for(i=O\uff1b", "\uff1bi++)", "{ j=I*10+6\uff1b", "if(", "continue\uff1b", "printf(\u201c\uff05d\u201d,j)\uff1b", "}", "}", "\u301012\u3011i<lO", "\u301013\u3011j\uff053\uff01=0", "\u672c\u9898\u8981\u6c42\u8f93\u51fa100\u4ee5\u5185\u80fd\u88ab3\u6574\u9664\u4e14\u4e2a\u4f4d\u6570\u4e3a6\u7684\u6240\u6709\u6574\u6570\uff0c\u7a0b\u5e8f\u4e2dj=i*10+6\uff1b\u8bed\u53e5\u662f\u6c42\u4e2a\u4f4d\u6570\u4e3a6\u7684\u6574\u6570\uff0c\u7531\u6b64\u53ef\u5f97\u51fa\u7a0b\u5e8f\u7684\u5faa\u73af\u6b21\u6570\u4e3ai<lO\u3002\u7136\u540e\u901a\u8fc7if\u8bed\u53e5\u5224\u65ad\u6574\u6570\u662f\u5426\u80fd\u88ab3\u6574\u9664\uff0c\u82e5\u4e0d\u80fd\u5219\u7ee7\u7eed\u4e0b\u4e00\u6b21\u5faa\u73af\uff0c\u82e5\u80fd\u5219\u8f93\u51fa\u8be5\u6574\u6570\uff0c\u6240\u4ee5\u903b\u8f91\u8868\u8fbe\u5f0f\u4e3ai\uff053 1=00", "\u00a0", "(13)\u51fd\u6570mycmp(char*s,char\u3002t)\u7684\u529f\u80fd\u662f\u6bd4\u8f83\u5b57\u7b26\u4e32s\u548ct\u7684\u5927\u5c0f\uff0c\u5f53s\u7b49\u4e8et\u65f6\u8fd4\u56de0\uff0c", "\u5f53s>t\u8fd4\u56de\u6b63\u503c\uff0c\u5f53s<t\u65f6\u8fd4\u56de\u8d1f\u503c\u3002\u8bf7\u586b\u7a7a\u3002", "mycmp(char*s,char*t)", "{\u00a0 while(*s==*t)", "{\u00a0 if(*s==\u2019\uff3c0\u2019)return 0\uff1b", "++s\uff1b++t\uff1b", "}", "return(", ")\uff1b", "}", "\u301014\u3011*s-*t\u6216-*t+*s", "\u51fd\u6570\u7684\u4e24\u4e2a\u5f62\u53c2\u662f\u4e24\u4e2a\u5b57\u7b26\u6307\u9488\u53d8\u91cf\uff0c\u5b57\u7b26\u4e32\u7684\u9996\u5730\u5740\u662f\u6307\u9488\u53d8\u91cf\u7684\u503c\uff0c*s\u548c*t\u8868\u793a\u5b57\u7b26\u4e32\u6570\u7ec4s\u548ct\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\uff0c\u5728while\u5faa\u73af\u4e2d\uff0c\u662f\u901a\u8fc7s\u548ct\u503c\u7684\u4e0d\u65ad\u53d8\u5316\u6765\u6539\u53d8\u6307\u9488\u6240\u6307\u5411\u7684\u5b57\u7b26\uff0c\u8981\u6539\u53d8s\u548ct\u6240\u6307\u4e0d\u540c\u5b57\u7b26\u7684ASCII\u7801\u7684\u5dee\u503c\uff0c\u5fc5\u987b\u4f7f\u7528\u201c*s-*t\u201d\u5f97\u51fa\u3002", "\u00a0", "(14)\u4ee5\u4e0b\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f", "\u3002", "void fun(\u3001)", "{", "static int a=0\uff1a", "a+=2\uff1bprintf(\u201d\uff05d\u201d\uff0ca)\uff1b", "}", "main()", "{\u00a0 int cc\uff1b", "for(CC=1\uff1bcc<4\uff1bcc++)fun()\uff1b", "printf(\u201d\uff3cn\u201d)\uff1b", "}", "\u301015\u30112 4 6", "static\u58f0\u660e\u7684\u5916\u90e8\u53d8\u91cf\u53ea\u9650\u4e8e\u88ab\u672c\u6587\u4ef6\u5f15\u7528\uff0c\u800c\u4e0d\u80fd\u88ab\u5176\u4ed6\u6587\u4ef6\u5f15\u7528\u3002\u7528static\u6765\u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\u7684\u4f5c\u7528\u6709\uff1a\u2460\u5bf9\u5c40\u90e8\u53d8\u91cf\u7528static\u58f0\u660e\uff0c\u5219\u4e3a\u8be5\u53d8\u91cf\u5206\u914d\u7684\u7a7a\u95f4\u5728\u6574\u4e2a\u7a0b\u5e8f\u6267\u884c\u671f\u95f4\u59cb\u7ec8\u5b58\u5728\uff1b\u2461\u5168\u90e8\u53d8\u91cf\u7528static\u58f0\u660e\uff0c\u5219\u8be5\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u53ea\u9650\u4e8e\u672c\u6587\u4ef6\u6a21\u5757(\u5373\u88ab\u58f0\u660e\u7684\u6587\u4ef6\u4e2d)\u3002", "\u00a0", "(15)\u4e0b\u5217\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f", "\u3002", "main()", "{\u00a0 union EXAMPLE", "{ struct", "{int x\uff1bint y\uff1b}in\uff1b", "int a\uff1b", "int b\uff1a", "}e\uff1b", "e\uff0ea=1\uff1be\uff0eb=2\uff1b", "e\uff0ein\uff0ex=e\uff0ea*e\uff0eb\uff1b", "e\uff0ein\uff0ey=e\uff0ea+e\uff0eb\uff1b", "printf(\u201d\uff05d\uff0c\uff05d\uff3cn\u201d\uff0ce\uff0ein\uff0ex\uff0ce\uff0ein\uff0ey)\uff1b", "}", "\u301016\u30114,8", "c\u8bed\u8a00\u89c4\u5b9a\uff0c\u5171\u7528\u4f53\u4e2d\u5404\u4e2a\u6210\u5458\u53d8\u91cf\u5728\u5185\u5b58\u4e2d\u5360\u7528\u540c\u4e00\u6bb5\u5185\u5b58\u5355\u5143\uff0c\u5373e\uff0ein\uff0ex\u548ce\uff0ea\u3001e\uff0eb\u5360\u7528\u540c\u4e00\u6bb5\u5185\u5b58\u5355\u5143\uff0c\u7531\u4e8ee\uff0ein\uff0ex\u548ce\uff0ea\u3001e\uff0eb\u5360\u7528\u7684\u662f\u540c\u4e00\u6bb5\u5185\u5b58\u5355\u5143\uff0c\u6240\u4ee5\u7a0b\u5e8f\u6700\u540e\u7684\u6253\u5370\u7ed3\u679c\u4e3a\u201c4,8\u201d\u3002", "\u00a0", "(16)\u5728\u5bf9\u6587\u4ef6\u8fdb\u884c\u64cd\u4f5c\u7684\u8fc7\u7a0b\u4e2d\uff0c\u82e5\u8981\u6c42\u6587\u4ef6\u7684\u4f4d\u7f6e\u56de\u5230\u6587\u4ef6\u7684\u5f00\u5934\uff0c\u5e94\u5f53\u8c03\u7528\u7684\u51fd\u6570\u00a0\u00a0\u00a0 \u662f", "\u51fd\u6570\u3002", "\u301017\u3011[NNlrewind\u6216fseek", "\u5728\u5bf9\u6587\u4ef6\u8fdb\u884c\u64cd\u4f5c\u7684\u8fc7\u7a0b\u4e2d\uff0c\u82e5\u8981\u6c42\u6587\u4ef6\u7684\u4f4d\u7f6e\u56de\u5230\u6587\u4ef6\u7684\u5f00\u5934\uff0c\u53ef\u4ee5\u8c03\u7528rewind\u6216fseek\u51fd\u6570\u3002\u5176\u4e2drewind\u51fd\u6570\u7684\u4f5c\u7528\u662f\u5c06\u4f4d\u7f6e\u6307\u9488\u91cd\u65b0\u8fd4\u56de\u6587\u4ef6\u7684\u5f00\u5934\uff0c\u800cfseek\u51fd\u6570\u53ef\u4ee5\u5b9e\u73b0\u6587\u4ef6\u6307\u9488\u7684\u5b9a\u4f4d\u3002", "\u00a0", "(17)\u4ee5\u4e0b\u51fd\u6570\u7528\u4e8e\u6c42\u51fa\u4e00\u4e2a2\u00d74\u77e9\u9635\u4e2d\u7684\u6700\u5927\u5143\u7d20\u503c\u3002", "max_value(arr)", "int arr[][4]\uff1b", "{", "int I,J\uff0cmax\uff1b", "max=alT[0][0]\uff1b", "for(i=0\uff1bi<2\uff1bi++)", "for(j=0;", ";J++)", "if(", ">max)max=[2Q]\uff1b", "return(max)\uff1b", "}", "\u301018\u3011j<4", "\u301019\u3011arr[i][j]", "\u301020\u3011arr[i][j]", "2*4\u77e9\u9635\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u7ed3\u5408\u672c\u9898\u5e94\u4e3aarr[2][4]\uff0c\u6240\u4ee5\u5728\u7b2c\u4e00\u4e2a\u5faa\u73af\u4e2d\u5e94\u5f53\u586b\u5199\u201c4\u201d\uff1b\u7b2c\u4e8c\u4e2a\u6a2a\u7ebf\u5904\u662f\u8981\u5224\u65ad\u5f53\u524d\u7684\u6570\u7ec4\u5143\u7d20\u503c\u662f\u5426\u5927\u4e8emax\uff0c\u6240\u4ee5\u5e94\u586b\u5199arr[i][j]\uff1b\u7b2c\u4e09\u4e2a\u6a2a\u7ebf\u5904\u662f\u8981\u5c06\u5f53\u524d\u5927\u4e8emax\u7684\u6570\u7ec4\u5143\u7d20\u7684\u503c\u8d4b\u7ed9\u53d8\u91cfmax\uff0c\u6240\u4ee5\u5e94\u5f53\u586b\u5199\u201carr[i][il\u201d\u3002"], "title": "C\u8bed\u8a00\u7b14\u8bd5\u9898\u5e26\u7b54\u6848\uff08\u4e8c\uff09"},
{"contents": ["\u4e00\u3001\u9009\u62e9\u9898((1)\uff5e(10)\u6bcf\u5c0f\u98982\u5206\uff0c(11)-(50)\u6bcf\u5c0f\u98981\u5206\uff0c\u517160\u5206)", "\u4e0b\u5217\u5404\u9898A)\u3001B)\u3001C)\u3001D)\u56db\u4e2a\u9009\u9879\u4e2d\uff0c\u53ea\u6709\u4e00\u4e2a\u9009\u9879\u662f\u6b63\u786e\u7684\uff0c\u8bf7\u5c06\u6b63\u786e\u9009\u9879\u6d82\u5199", "\u5728\u7b54\u9898\u5361\u76f8\u5e94\u4f4d\u7f6e\u4e0a\uff0c\u7b54\u5728\u8bd5\u5377\u4e0a\u4e0d\u5f97\u5206\u3002", "(1)\u6570\u636e\u7ed3\u6784\u4e2d\uff0c\u4e0e\u6240\u4f7f\u7528\u7684\u8ba1\u7b97\u673a\u65e0\u5173\u7684\u662f\u6570\u636e\u7684________\u3002", "A)\u5b58\u50a8\u7ed3\u6784\u00a0 \u00a0\u00a0\u00a0B)\u7269\u7406\u7ed3\u6784\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)\u903b\u8f91\u7ed3\u6784\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)\u7269\u7406\u548c\u5b58\u50a8\u7ed3\u6784", "C", "\u6570\u636e\u7ed3\u6784\u6982\u5ff5\u4e00\u822c\u5305\u62ec3\u4e2a\u65b9\u9762\u7684\u5185\u5bb9\uff0c\u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u3001\u5b58\u50a8\u7ed3\u6784\u53ca\u6570\u636e\u4e0a\u7684\u8fd0\u7b97\u96c6\u5408\u3002\u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u53ea\u62bd\u8c61\u7684\u53cd\u6620\u6570\u636e\u5143\u7d20\u4e4b\u95f4\u7684\u903b\u8f91\u5173\u7cfb\uff0c\u800c\u4e0d\u7ba1\u5b83\u5728\u8ba1\u7b97\u673a\u4e2d\u7684\u5b58\u50a8\u8868\u793a\u5f62\u5f0f\u3002", "\u00a0", "(2)\u6808\u5e95\u81f3\u6808\u9876\u4f9d\u6b21\u5b58\u653e\u5143\u7d20A\u3001B\u3001C\u3001D\uff0c\u5728\u7b2c\u4e94\u4e2a\u5143\u7d20E\u5165\u6808\u524d\uff0c\u6808\u4e2d\u5143\u7d20\u53ef\u4ee5\u51fa\u6808\uff0c", "\u5219\u51fa\u6808\u5e8f\u5217\u53ef\u80fd\u662f________\u3002", "A)ABCED\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0B)DBCEA\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)CDABE\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0D)DCBEA", "D", "\u6808\u64cd\u4f5c\u539f\u5219\u4e0a\u201c\u540e\u8fdb\u5148\u51fa\u201d\uff0c\u6808\u5e95\u81f3\u6808\u9876\u4f9d\u6b21\u5b58\u653e\u5143\u7d20A\u3001B\u3001c\u3001D\uff0c\u5219\u8868\u660e\u8fd94\u4e2a\u5143\u7d20\u4e2dD\u662f\u6700\u540e\u8fdb\u6808\uff0cB\u3001c\u5904\u4e8e\u4e2d\u95f4\uff0cA\u6700\u65e9\u8fdb\u6808\u3002\u6240\u4ee5\u51fa\u6808\u65f6\u4e00\u5b9a\u662f\u5148\u51faD\uff0c\u518d\u51fac\uff0c\u6700\u540e\u51faA\u3002", "\u00a0", "(3)\u7ebf\u6027\u8868\u7684\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784\u548c\u7ebf\u6027\u8868\u7684\u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784\u5206\u522b\u662f________\u3002", "A)\u987a\u5e8f\u5b58\u53d6\u7684\u5b58\u50a8\u7ed3\u6784\u3001\u968f\u673a\u5b58\u53d6\u7684\u5b58\u50a8\u7ed3\u6784", "B)\u968f\u673a\u5b58\u53d6\u7684\u5b58\u50a8\u7ed3\u6784\u3001\u987a\u5e8f\u5b58\u53d6\u7684\u5b58\u50a8\u7ed3\u6784", "C)\u968f\u673a\u5b58\u53d6\u7684\u5b58\u50a8\u7ed3\u6784\u3001\u968f\u673a\u5b58\u53d6\u7684\u5b58\u50a8\u7ed3\u6784", "D)\u4efb\u610f\u5b58\u53d6\u7684\u5b58\u50a8\u7ed3\u6784\u3001\u4efb\u610f\u5b58\u53d6\u7684\u5b58\u50a8\u7ed3\u6784", "B", "\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784\u4e2d\uff0c\u6570\u636e\u5143\u7d20\u5b58\u653e\u5728\u4e00\u7ec4\u5730\u5740\u8fde\u7eed\u7684\u5b58\u50a8\u5355\u5143\u4e2d\uff0c\u6bcf\u4e2a\u6570\u636e\u5143\u7d20\u5730\u5740\u53ef\u901a\u8fc7\u516c\u5f0fLOC(ai)\u3002LOC(a1)+(i-1)L\u8ba1\u7b97\u5f97\u5230\uff0c\u4ece\u800c\u5b9e\u73b0\u4e86\u968f\u673a\u5b58\u53d6\u3002\u5bf9\u4e8e\u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784\uff0c\u8981\u5bf9\u67d0\u7ed3\u70b9\u8fdb\u884c\u5b58\u53d6\uff0c\u90fd\u5f97\u4ece\u94fe\u7684\u5934\u6307\u9488\u6307\u5411\u7684\u7ed3\u70b9\u5f00\u59cb\uff0c\u8fd9\u662f\u4e00\u79cd\u987a\u5e8f\u5b58\u53d6\u7684\u5b58\u50a8\u7ed3\u6784\u3002", "\u00a0", "(4)\u5728\u5355\u94fe\u8868\u4e2d\uff0c\u589e\u52a0\u5934\u7ed3\u70b9\u7684\u76ee\u7684\u662f________\u3002", "A)\u65b9\u4fbf\u8fd0\u7b97\u7684\u5b9e\u73b0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)\u4f7f\u5355\u94fe\u8868\u81f3\u5c11\u6709\u4e00\u4e2a\u7ed3\u70b9", "C)\u6807\u8bc6\u8868\u7ed3\u70b9\u4e2d\u9996\u7ed3\u70b9\u7684\u4f4d\u7f6e\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)\u8bf4\u660e\u5355\u94fe\u8868\u662f\u7ebf\u6027\u8868\u7684\u94fe\u5f0f\u5b58\u50a8\u5b9e\u73b0", "A", "\u5934\u7ed3\u70b9\u4e0d\u4ec5\u6807\u8bc6\u4e86\u8868\u4e2d\u9996\u7ed3\u70b9\u7684\u4f4d\u7f6e\uff0c\u800c\u4e14\u6839\u636e\u5355\u94fe\u8868(\u5305\u542b\u5934\u7ed3\u70b9)\u7684\u7ed3\u6784\uff0c\u53ea\u8981\u638c\u63e1\u4e86\u8868\u5934\uff0c\u5c31\u80fd\u591f\u8bbf\u95ee\u6574\u4e2a\u94fe\u8868\uff0c\u56e0\u6b64\u589e\u52a0\u5934\u7ed3\u70b9\u76ee\u7684\u662f\u4e3a\u4e86\u4fbf\u4e8e\u8fd0\u7b97\u7684\u5b9e\u73b0\u3002", "\u00a0", "(5)\u8f6f\u4ef6\u8bbe\u8ba1\u5305\u62ec\u8f6f\u4ef6\u7684\u7ed3\u6784\u3001\u6570\u636e\u63a5\u53e3\u548c\u8fc7\u7a0b\u8bbe\u8ba1\uff0c\u5176\u4e2d\u8f6f\u4ef6\u7684\u8fc7\u7a0b\u8bbe\u8ba1\u662f\u6307________\u3002", "A)\u6a21\u5757\u95f4\u7684\u5173\u7cfb\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)\u7cfb\u7edf\u7ed3\u6784\u90e8\u4ef6\u8f6c\u6362\u6210\u8f6f\u4ef6\u7684\u8fc7\u7a0b\u63cf\u8ff0", "C)\u8f6f\u4ef6\u5c42\u6b21\u7ed3\u6784\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)\u8f6f\u4ef6\u5f00\u53d1\u8fc7\u7a0b", "B", "\u8f6f\u4ef6\u8bbe\u8ba1\u5305\u62ec\u8f6f\u4ef6\u7ed3\u6784\u8bbe\u8ba1\u3001\u6570\u636e\u8bbe\u8ba1\u3001\u63a5\u53e3\u8bbe\u8ba1\u548c\u8fc7\u7a0b\u8bbe\u8ba1\u3002\u5176\u4e2d\u7ed3\u6784\u8bbe\u8ba1\u662f\u5b9a\u4e49\u8f6f\u4ef6\u7cfb\u7edf\u5404\u4e3b\u8981\u90e8\u4ef6\u4e4b\u95f4\u7684\u5173\u7cfb\uff1b\u6570\u636e\u8bbe\u8ba1\u662f\u5c06\u5206\u6790\u65f6\u521b\u5efa\u7684\u6a21\u578b\u8f6c\u5316\u4e3a\u6570\u636e\u7ed3\u6784\u7684\u5b9a\u4e49\uff1b\u63a5\u53e3\u8bbe\u8ba1\u662f\u63cf\u8ff0\u8f6f\u4ef6\u5185\u90e8\u3001\u8f6f\u4ef6\u548c\u64cd\u4f5c\u7cfb\u7edf\u4e4b\u95f4\u53ca\u8f6f\u4ef6\u4e0e\u4eba\u4e4b\u95f4\u5982\u4f55\u901a\u4fe1\uff1b\u8fc7\u7a0b\u8bbe\u8ba1\u5219\u662f\u628a\u7cfb\u7edf\u7ed3\u6784\u90e8\u4ef6\u8f6c\u6362\u6210\u8f6f\u4ef6\u7684\u8fc7\u7a0b\u6027\u63cf\u8ff0\u3002", "\u00a0", "(6)\u4e3a\u4e86\u907f\u514d\u6d41\u7a0b\u56fe\u5728\u63cf\u8ff0\u7a0b\u5e8f\u903b\u8f91\u65f6\u7684\u7075\u6d3b\u6027\uff0c\u63d0\u51fa\u4e86\u7528\u65b9\u6846\u56fe\u6765\u4ee3\u66ff\u4f20\u7edf\u7684\u7a0b\u5e8f\u6d41\u7a0b\u00a0\u00a0\u00a0 \u56fe\uff0c\u901a\u5e38\u4e5f\u628a\u8fd9\u79cd\u56fe\u79f0\u4e3a________\u3002", "A)PAD\u56fe\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0B)N-S\u56fe\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)\u7ed3\u6784\u56fe\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)\u6570\u636e\u6d41\u56fe", "B", "\u5e38\u89c1\u7684\u8fc7\u7a0b\u8bbe\u8ba1\u5de5\u5177\u6709\uff1a\u7a0b\u5e8f\u6d41\u7a0b\u56fe\u3001N-S\u56fe\u3001PAD\u56fe\u548cHIPO\u56fe\u3002\u5176\u4e2d\uff0c\u4e3a\u4e86\u907f\u514d\u6d41\u7a0b\u56fe\u5728\u63cf\u8ff0\u7a0b\u5e8f\u903b\u8f91\u65f6\u7684\u7075\u6d3b\u6027\uff0c\u63d0\u51fa\u4e86\u7528\u65b9\u6846\u56fe\u6765\u4ee3\u66ff\u4f20\u7edf\u7684\u7a0b\u5e8f\u6d41\u7a0b\u56fe\uff0c\u901a\u5e38\u4e5f\u628a\u8fd9\u79cd\u56fe\u79f0\u4e3aN-S\u56fe\u3002", "\u00a0", "(7)\u6570\u636e\u5904\u7406\u7684\u6700\u5c0f\u5355\u4f4d\u662f________\u3002", "A)\u6570\u636e\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0B)\u6570\u636e\u5143\u7d20\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)\u6570\u636e\u9879\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)\u6570\u636e\u7ed3\u6784", "C", "\u6570\u636e\u5904\u7406\u7684\u6700\u5c0f\u5355\u4f4d\u662f\u6570\u636e\u9879\uff1b\u7531\u82e5\u5e72\u6570\u636e\u9879\u7ec4\u6210\u6570\u636e\u5143\u7d20\uff1b\u800c\u6570\u636e\u662f\u6307\u80fd\u591f\u88ab\u8ba1\u7b97\u673a\u8bc6\u522b\u3001\u5b58\u50a8\u548c\u52a0\u5de5\u5904\u7406\u7684\u4fe1\u606f\u8f7d\u4f53\uff1b\u6570\u636e\u7ed3\u6784\u662f\u6307\u6570\u636e\u4e4b\u95f4\u7684\u76f8\u4e92\u5173\u7cfb\u548c\u6570\u636e\u8fd0\u7b97\u3002", "\u00a0", "(8)\u4e0b\u5217\u6709\u5173\u6570\u636e\u5e93\u7684\u63cf\u8ff0\uff0c\u6b63\u786e\u7684\u662f________\u3002", "A)\u6570\u636e\u5e93\u662f\u4e00\u4e2aDBF\u6587\u4ef6\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)\u6570\u636e\u5e93\u662f\u4e00\u4e2a\u5173\u7cfb", "C)\u6570\u636e\u5e93\u662f\u4e00\u4e2a\u7ed3\u6784\u5316\u7684\u6570\u636e\u96c6\u5408\u00a0\u00a0 \u00a0\u00a0\u00a0D)\u6570\u636e\u5e93\u662f\u4e00\u7ec4\u6587\u4ef6", "C", "\u6570\u636e\u5e93(Database\uff0c\u7b80\u79f0DB)\u662f\u6570\u636e\u7684\u96c6\u5408\uff0c\u5b83\u5177\u6709\u7edf\u4e00\u7684\u7ed3\u6784\u5f62\u5f0f\u5e76\u5b58\u653e\u4e8e\u7edf\u4e00\u7684\u5b58\u50a8\u4ecb\u8d28\u5185\uff0c\u662f\u591a\u79cd\u5e94\u7528\u6570\u636e\u7684\u96c6\u6210\uff0c\u5e76\u53ef\u88ab\u5404\u4e2a\u5e94\u7528\u7a0b\u5e8f\u6240\u5171\u4eab\u3002\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\u5177\u6709\u201c\u96c6\u6210\u201d\u3001\u201c\u5171\u4eab\u201d\u4e4b\u7279\u70b9\u3002", "\u00a0", "(9)\u5355\u4e2a\u7528\u6237\u4f7f\u7528\u7684\u6570\u636e\u89c6\u56fe\u7684\u63cf\u8ff0\u79f0\u4e3a ______ \u3002", "A)\u5916\u6a21\u5f0f\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0B)\u6982\u5ff5\u6a21\u5f0f\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)\u5185\u6a21\u5f0f\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)\u903b\u8f91\u6a21\u5f0f", "A", "\u5916\u6a21\u5f0f\u662f\u7528\u6237\u7684\u6570\u636e\u89c6\u56fe\uff0c\u4e5f\u5c31\u662f\u7528\u6237\u6240\u89c1\u5230\u7684\u6570\u636e\u6a21\u5f0f\uff1b\u5168\u5c40\u6570\u636e\u89c6\u56fe\u7684\u63cf\u8ff0\u79f0\u4e3a\u6982\u5ff5\u6a21\u5f0f\uff0c\u5373\u6570\u636e\u5e93\u4e2d\u5168\u90e8\u6570\u636e\u7684\u6574\u4f53\u903b\u8f91\u7ed3\u6784\u7684\u63cf\u8ff0\uff1b\u7269\u7406\u5b58\u50a8\u6570\u636e\u89c6\u56fe\u7684\u63cf\u8ff0\u79f0\u4e3a\u5185\u6a21\u5f0f\uff0c\u5373\u6570\u636e\u5e93\u5728\u7269\u7406\u5b58\u50a8\u65b9\u9762\u7684\u63cf\u8ff0\uff1b\u5b58\u50a8\u6a21\u5f0f\u5373\u4e3a\u5185\u6a21\u5f0f\u3002", "\u00a0", "(10)\u9700\u6c42\u5206\u6790\u9636\u6bb5\u7684\u4efb\u52a1\u662f\u786e\u5b9a______\u3002", "A)\u8f6f\u4ef6\u5f00\u53d1\u65b9\u6cd5\u00a0\u00a0 B)\u8f6f\u4ef6\u5f00\u53d1\u5de5\u5177\u00a0\u00a0\u00a0 C)\u8f6f\u4ef6\u5f00\u53d1\u8d39\u7528\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0D)\u8f6f\u4ef6\u7cfb\u7edf\u529f\u80fd", "D", "\u9700\u6c42\u5206\u6790\u662f\u8f6f\u4ef6\u5b9a\u4e49\u65f6\u671f\u7684\u6700\u540e\u4e00\u4e2a\u9636\u6bb5\uff0c\u5b83\u7684\u57fa\u672c\u4efb\u52a1\u5c31\u662f\u8be6\u7ec6\u8c03\u67e5\u73b0\u5b9e\u4e16\u754c\u8981\u5904\u7406\u7684\u5bf9\u8c61(\u7ec4\u7ec7\u3001\u90e8\u95e8\u3001\u4f01\u4e1a\u7b49)\uff0c\u5145\u5206\u4e86\u89e3\u539f\u7cfb\u7edf\u7684\u5de5\u4f5c\u6982\u51b5\uff0c\u660e\u786e\u7528\u6237\u7684\u5404\u79cd\u9700\u6c42\uff0c\u7136\u540e\u5728\u6b64\u57fa\u7840\u4e0a\u786e\u5b9a\u65b0\u7cfb\u7edf\u7684\u529f\u80fd\u3002", "\u00a0", "(11)\u82e5\u53d8\u91cfa\u662fint\u7c7b\u578b\uff0c\u5e76\u6267\u884c\u4e86\u8bed\u53e5\uff1aa=\u2019A\u2019+1\uff0e6\uff1b\uff0c\u5219\u6b63\u786e\u53d9\u8ff0\u662f______\u3002", "A)a\u7684\u503c\u662f\u5b57\u7b26C\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)a\u7684\u503c\u662f\u6d6e\u70b9\u578b", "C)\u4e0d\u5141\u8bb8\u5b57\u7b26\u578b\u548c\u6d6e\u70b9\u578b\u76f8\u52a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)a\u7684\u503c\u662f\u5b57\u7b26\u2019A\u2019\u7684ASCII\u503c\u52a0\u4e0al", "D", "\u5728\u8d4b\u503c\u8868\u8fbe\u5f0f\u4e2d\uff0c\u8d4b\u503c\u7b26\u53f3\u8fb9\u7684\u503c\u7684\u7c7b\u578b\u4f1a\u81ea\u52a8\u8f6c\u6362\u6210\u8d4b\u503c\u7b26\u5de6\u8fb9\u7684\u53d8\u91cf\u7684\u7c7b\u578b\u3002\u5728\u672c\u9898\u4e2d\uff0c\u5148\u7528\u201cA\u201d\u7684ASCII\u7801\u503c\u52a0\u4e0a1\uff0e46\u5f97\u523066\uff0e46\uff0c\u7136\u540e\u5c06\u5b83\u5f3a\u5236\u8f6c\u6362\u6210int\u578b\uff0c\u8f6c\u6362\u540e\uff0c\u5b9e\u6570\u7684\u5c0f\u6570\u90e8\u5206\u5168\u90e8", "\u00a0", "(12)\u82e5\u4ee5\u4e0b\u9009\u9879\u4e2d\u53d8\u91cf\u5df2\u6b63\u786e\u5b9a\u4e49\uff0c\u5219\u6b63\u786e\u7684\u8d4b\u503c\u8bed\u53e5\u662f______\u3002", "A)x1=26\uff0e8\uff053\uff1b\u00a0\u00a0\u00a0 B)1+2=x2\uff1b\u00a0 \u00a0\u00a0\u00a0\u00a0C)x3=0\u00d712\uff1b\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)x4=1+2=3\uff1b", "C", "\u8d4b\u503c\u7b26\u53f7\u201c=\u201d\u5c31\u662f\u8d4b\u503c\u8fd0\u7b97\u7b26\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u5c06\u4e00\u4e2a\u6570\u636e\u8d4b\u7ed9\u4e00\u4e2a\u53d8\u91cf\u3002\u5982\u679c\u8d4b\u503c\u8fd0\u7b97\u7b26\u4e24\u4fa7\u7684\u7c7b\u578b\u4e0d\u4e00\u81f4\uff0c\u4f46\u90fd\u662f\u6570\u503c\u578b\u6216\u5b57\u7b26\u578b\u65f6\uff0c\u5728\u8d4b\u503c\u65f6\u8981\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\uff0c\u6240\u4ee5\u9009\u9879A\u9519\u8bef\u3002\u5728\u8d4b\u503c\u8868\u8fbe\u5f0f\u4e2d\uff0c\u8d4b\u503c\u8fd0\u7b97\u7b26\u7684\u5de6\u4fa7\u5fc5\u987b\u662f\u4e00\u4e2a\u53d8\u91cf\uff0c\u6240\u4ee5\u9009\u9879B\u3001D\u9519\u8bef\u3002\u9009\u9879C\u662f\u5c06\u4e00\u4e2a\u5341\u516d\u8fdb\u5236\u6570\u8d4b\u503c\u7ed9\u53d8\u91cfx3\u3002", "\u00a0", "(13)\u4ee5\u4e0b\u7a0b\u5e8f\u6bb5\u7684\u8f93\u51fa\u7ed3\u679c\u662f______\u3002", "int a=1234\uff1b", "printf(\u201d\uff052d\uff3cn\u201d\uff0ca)\uff1b", "A)12\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)34\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)1234 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)\u63d0\u793a\u51fa\u9519\u3001\u65e0\u7ed3\u679c", "C", "\u672c\u9898\u4e3b\u8981\u8003\u67e5\u5bf9primf\u51fd\u6570\u57df\u5bbd\u63cf\u8ff0\u7b26\u7684\u7406\u89e3\uff0c\u5728\u8fd9\u91cc\u6211\u4eec\u8981\u7279\u522b\u6ce8\u610f\uff1a\u8f93\u51fa\u6570\u636e\u7684\u5b9e\u9645\u7cbe\u5ea6\u5e76\u4e0d\u4e3b\u8981\u51b3\u5b9a\u4e8e\u683c\u5f0f\u9879\u4e2d\u7684\u57df\u5bbd\u4e0e\u7cbe\u5ea6\uff0c\u4e5f\u4e0d\u51b3\u5b9a\u4e8e\u8f93\u5165\u7684\u6570\u636e\u7cbe\u5ea6\uff0c\u800c\u4e3b\u8981\u51b3\u5b9a\u4e8e\u6570\u636e\u5728\u673a\u5668\u5185\u7684\u5b58\u50a8\u7cbe\u5ea6\u3002", "\u00a0", "(14)\u4ee5\u4e0b\u9009\u9879\u4e2d\u4e0d\u5c5e\u4e8eC\u8bed\u8a00\u7684\u7c7b\u578b\u7684\u662f______\u3002", "A)signed short int\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)unsigned char", "C)signed long\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0D)long short", "D", "c\u8bed\u8a00\u4e2d\u5f52\u7eb3\u8d77\u6765\uff0c\u57fa\u672c\u7c7b\u578b\u6570\u636e\u6709\u4ee5\u4e0b\u51e0\u79cd\uff1a", "[signed]char\uff1bunsigned char\uff1b[signed]short[int]\uff1bunsigned short[int]\uff1b[signed]long[int]\uff1bunsigned long[int]\uff1bfloat\uff1bdouble\uff0e", "\u00a0", "(15)\u8bbe\u6709\u5b9a\u4e49\uff1aint a,*pa=\uff06a\uff1b\u4ee5\u4e0bscanf\u8bed\u53e5\u80fd\u6b63\u786e\u4e3a\u53d8\u91cfa\u8bfb\u5165\u6570\u636e\u7684\u662f______\u3002", "A)scanf(\u201c\uff05d\u201d,B)\uff1b\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)scanf\uff08\u201d\uff05d\u201d,a)\uff1b", "C)scanf(\u201c\uff05d\u201d\uff0c&pa)\uff1b \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)scanf(\u201c\uff05d\u201d,*pa)\uff1b", "C", "scanf\u51fd\u6570\u8981\u6c42\u5176\u4e2d\u7684\u8f93\u5165\u9879\u5fc5\u987b\u662f\u5730\u5740\u5f62\u5f0f\uff0c\u6bd4\u5982\uff1a\u666e\u901a\u53d8\u91cf\u7684\u5730\u5740\u3001\u6570\u7ec4\u540d\u3001\u6307\u9488\u53d8\u91cf\u7b49\u3002\u5bf9\u4e8e\u666e\u901a\u53d8\u91cf\uff0c\u5730\u5740\u5f62\u5f0f\u4e3a\uff1a&\u53d8\u91cf\u540d\uff1b\u5f53\u4e00\u4e2a\u666e\u901a\u53d8\u91cf\u7684\u5730\u5740\u8d4b\u4e88\u4e86\u4e00\u4e2a\u6307\u9488\u53d8\u91cf\u540d\uff0cscanf\u51fd\u6570\u7684\u8f93\u5165\u9879\u5904\u5c31\u53ef\u4ee5\u76f4\u63a5\u5199\u8fd9\u4e2a\u6307\u9488\u53d8\u91cf\u540d\u3002", "\u00a0", "(16)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f______\u3002", "main()", "{int a=5\uff0cb=4\uff0cc=6\uff0cd\uff1b", "printf(\u201d\uff05d\uff3cn\u201d\uff0cd=a>c?(a>c?a\uff1aC)\uff1a(b))\uff1b", "}", "A)5\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)4\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)6 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)\u4e0d\u786e\u5b9a", "B", "\u8bc4\u6790:\u672c\u9898\u6700\u91cd\u8981\u7684\u5206\u6790d=a>c?(a>c?a\uff1aC)\uff1a(b))\uff0c\u9996\u5148\u8fd0\u7b97\u62ec\u53f7\u5185\u7684\u5f0f\u5b50a>c?a\uff1ac\uff0c\u5b83\u7684\u503c\u662fc\u7684\u503c6\uff0c\u5373\u5f0f\u5b50\u5316\u6210d=a>c?6\uff1a4\u3002\u663e\u7136a=c\uff0c\u6240\u4ee5\u5c064\u8d4b\u7ed9d\u3002", "\u00a0", "(17)\u4ee5\u4e0b\u7a0b\u5e8f\u4e2d\uff0cwhile\u5faa\u73af\u7684\u5faa\u73af\u6b21\u6570\u662f______\u00a0 \u3002", "main()", "{ int i=0\uff1a", "while(i<10)", "{if(i<1)continue\uff1b", "if(i==5)break\uff1b", "i++\uff1a", "}", "\u2026\u2026", "}", "A)1\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)10\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)6 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)\u6b7b\u5faa\u73af\uff0c\u4e0d\u80fd\u786e\u5b9a\u6b21\u6570", "D", "\u8fdb\u5165\u5faa\u73af\u540e\uff0c\u5148\u6267\u884c\u4e00\u4e2a\u6761\u4ef6\u8bed\u53e5\uff0c\u5982\u679ci\u7684\u503c\u5c0f\u4e8el\uff0c\u90a3\u4e48\u76f4\u63a5\u8fdb\u5165\u4e0b\u4e00\u8f6e\u5faa\u73af\uff0c\u56e0\u4e3ai\u7684\u521d\u59cb\u503c\u662f0\uff0c\u5c0f\u4e8el\uff0c\u6545\u76f4\u63a5\u8fdb\u5165\u4e0b\u4e00\u8f6e\u5faa\u73af\uff0c\u53c8\u56e0\u4e3ai\u7684\u503c\u59cb\u7ec8\u6ca1\u6709\u6539\u53d8\uff0c\u6240\u4ee5\u8fd9\u4e2a\u5faa\u73af\u6210\u4e86\u6b7b\u5faa\u73af\u3002", "\u00a0", "(18)\u6709\u4ee5\u4e0b\u7a0b\u5e8f\uff1a", "main()", "{", "char k\uff1bint i\uff1b", "for(i=1\uff1bi<3\uff1bi++)", "{", "scanf(\u201d\uff05c\u201d\uff0c&k)\uff1b", "switch(k)", "{", "case\u20190\u2032\uff1aprintf[\"another\\n\"]\uff1b", "case\u20191\u2032\uff1aprintf[\"number\uff3cn\")\uff1b", "}", "}", "}", "\u7a0b\u5e8f\u8fd0\u884c\u65f6\uff0c\u4ece\u952e\u76d8\u8f93\u5165\uff1a0l<\u56de\u8f66>\uff0c\u7a0b\u5e8f\u6267\u884c\u540e\u8f93\u51fa\u7ed3\u679c\u662f______\u3002", "A)another\u00a0\u00a0 \u00a0\u00a0\u00a0B)another\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)another\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)number", "number \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0number\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0number\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0number", "another\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0number", "C", "switch\u8bed\u53e5\u662f\u591a\u5206\u652f\u9009\u62e9\u8bed\u53e5\uff0c\u6267\u884c\u5b8c\u4e00\u4e2acase\u540e\u9762\u7684\u8bed\u53e5\u540e\uff0c\u6d41\u7a0b\u63a7\u5236\u8f6c\u79fb\u5230\u4e0b\u4e00\u4e2acase\u7ee7\u7eed\u6267\u884c\u3002\u201ccase\u5e38\u91cf\u8868\u8fbe\u5f0f\u201d\u53ea\u662f\u8d77\u8bed\u53e5\u6807\u53f7\u4f5c\u7528\uff0c\u5e76\u4e0d\u662f\u5728\u8be5\u5904\u8fdb\u884c\u6761\u4ef6\u5224\u65ad\u3002\u5728\u6267\u884cswitch\u8bed\u53e5\u65f6\uff0c\u6839\u636eswitch\u540e\u9762\u8868\u8fbe\u5f0f\u7684\u503c\u627e\u5230\u5339\u914d\u7684\u5165\u53e3\u6807\u53f7\uff0c\u5c31\u4ece\u6b64\u6807\u53f7\u5f00\u59cb\u6267\u884c\u4e0b\u53bb\uff0c\u4e0d\u518d\u8fdb\u884c\u5224\u65ad\u3002", "\u00a0", "(19)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f______\u3002", "main()", "{Int a=O\uff0ci\uff1b", "for(i=1\uff1bi<5\uff1bi++)", "{switch(i)", "{\u00a0 case 0\uff1a", "case 3\uff1aa+=2\uff1a", "case l\uff1a", "case 2\uff1aa+=3\uff1a", "default\uff1aa+=5\uff1b", "}", "}", "printf(\u201d\uff05d\uff3cn\u201d\uff0ca)", "}", "A)3l\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)13\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)10\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)20", "A", "\u8bc4\u6790:switch\u7ed3\u6784\u7684\u6267\u884c\u8fc7\u7a0b\u540c\u4e0a\u9898\u3002", "\u00a0", "(20)\u5df1\u5b9a\u4e49c\u4e3a\u5b57\u7b26\u578b\u5e38\u91cf\uff0c\u5219\u4e0b\u5217\u8bed\u53e5\u4e2d\u6b63\u786e\u7684\u662f______\u3002", "A)C=\u201997\u2019\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0B)c=\u201d97\u201d\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)c=97\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)c=\u201da\u201d", "C", "\u8bc4\u6790:\u5b57\u7b26\u53d8\u91cf\u5360\u5185\u5b58\u4e00\u4e2a\u5b57\u8282\uff0c\u53ea\u80fd\u653e\u4e00\u4e2a\u5b57\u7b26\uff1b\u5b57\u7b26\u5e38\u91cf\u4e3a\u5355\u5f15\u53f7\u62ec\u8d77\u7684\u5355\u4e2a\u5b57\u7b26\uff1b\u5b57\u7b26\u4e32\u5e38\u91cf\u4e3a\u53cc\u5f15\u53f7\u62ec\u8d77\u7684\u4e00\u4e32\u5b57\u7b26(\u53ef\u4ee50\u4e2a\u5b57\u7b26\uff0c\u5373\uff02\uff02\uff0c\u79f0\u4e3a\u7a7a\u4e32)\u3002\u9009\u9879c\u4e3a\u5b57\u7b26ASCII\u7801\u7684\u6574\u6570\u5f62\u5f0f\u3002", "\u00a0", "(21)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "main()", "f int a=4\uff0cb=5\uff0cc=0\uff0cd\uff1b", "d=!a&&!b||!c\uff1b", "printf(\"\uff05d\\n\",d)\uff1b", "}", "A)l\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)\u975e0\u7684\u6570 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)-1", "A", "!a\u503c\u4e3a0\uff0c\u6545!a&&!b\u7684\u503c\u4e3a0\uff0c!c\u7684\u503c\u4e3al\uff0c\u800c0IIl\u7684\u503c\u5e94\u8be5\u662fl\u3002\u6240\u4ee5\u7b54\u6848\u662fA\u3002", "\u00a0", "(22)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "#include<stdio.h>", "main()", "{int i=0\uff0ca=0\uff1b", "while(i<20)", "{for(\uff1b\uff1b)", "{if((i\uff0510)==0)break\uff1b", "else\u00a0\u00a0\u00a0 I--\uff1a", "}", "i+=ll\uff1ba+=i\uff1b", "}", "printf(\u201d\uff05d\uff3cn\u201d\uff0ca)\uff1b", "}", "A)21\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)32\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)33\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)11", "B", "\u672c\u9898\u4e2d\uff0c\u6709\u4e24\u4e2a\u5faa\u73af\u8bed\u53e5\u3002\u9996\u5148\uff0ci=0\uff0c\u8fdb\u5165while\u5faa\u73af\uff0cfor\u8bed\u53e5\u4e2d\u5bf9\u5faa\u73af\u6ca1\u6709\u4efb\u4f55\u6761\u4ef6\uff0c\u6545\u76f4\u63a5\u8fdb\u5165for\u5faa\u73af\uff0c\u56e0\u4e3a0\uff0510\u7ed3\u679c\u8fd8\u662fO\uff0c\u6240\u4ee5\u8df3\u51fafor\u5faa\u73af\uff0c\u6267\u884ci+\uff1a11\uff0ci\u7684\u503c\u53d8\u4e3a11\uff0c\u6267\u884ca+=i\uff0ca\u7684\u503c\u53d8\u4e3a11\uff1a\u63a5\u7740\u8fdb\u5165\u4e0b\u4e00\u8f6ewhile\u5faa\u73af\uff0c\u5728for\u5faa\u73af\u4e2d\uff0c\u56e0\u4e3ai\u7684\u503c\u662f11\uff0c\u5bf910\u53d6\u4f59\u7ed3\u679c\u4e3al\uff0c\u6240\u4ee5\u6267\u884ci\u81ea\u51cf\uff0ci\u7684\u503c\u53d8\u621010\uff0c\u8fdb\u5165\u53c8\u4e00\u8f6efor\u5faa\u73af\uff0c\u56e0\u4e3a10\uff0510==0\uff0c\u6240\u4ee5\u8df3\u51fafor\u5faa\u73af\uff0c\u6267\u884ci+=1l\uff0ci\u7684\u503c\u53d8\u621021\uff0c\u6267\u884ca+=i\uff0c\u4e5f\u5c31\u662f\u5c0621+1 1\u7684\u548c\u8d4b\u7ed9a\uff0ca=32\uff0c\u56e0\u4e3a\u6b64\u65f6i\u7684\u503c\u4e0d\u518d\u5c0f\u4e8e20\uff0c\u6240\u4ee5\u7ed3\u675f\u5faa\u73af\uff0c", "\u6545\u8f93\u51fa\u7ed3\u679c\u662f32\u3002", "\u00a0", "(23)\u6709\u4ee5\u4e0b\u7a0b\u5e8f\uff1a", "int n(int x\uff0cint y)", "{retum x>y?x\uff1ay\uff1b}", "Int f2(int x\uff0cint y)", "{return x>y?y\uff1ax\uff1b)", "main()", "{ int a=4\uff0cb=3\uff0cc=5\uff0cd\uff0ce\uff0cf;", "d=f1(a\uff0cb)\uff1bd=fl(d\uff0cC)\uff1b", "e=f2(a\uff0cb)\uff1be=f2(e\uff0cC)\uff1b", "f=a+b+C-d-e;", "printf(\u201d\uff05d\uff0c\uff05d\uff0c\uff05d\uff3cn\u201d\uff0cd\uff0ce\uff0cf)\uff1b", "}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f_________ \u3002", "A)3,4\uff0c5\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0B)5\uff0c3\uff0c4\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)5\uff0c4\uff0c3\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)3\uff0c5\uff0c4", "B", "\u51fd\u6570n\u662f\u4e00\u4e2a\u6c42\u4e24\u4e2a\u6574\u6570\u4e2d\u6700\u5927\u503c\u7684\u51fd\u6570\uff0c\u51fd\u6570f2\u662f\u4e00\u4e2a\u6c42\u4e24\u4e2a\u6574\u6570\u4e2d\u6700\u5c0f\u503c\u7684\u51fd\u6570\u3002\u5728main\u51fd\u6570\u4e2d\u4e24\u6b21\u8c03\u7528\u51fd\u6570n\uff0c\u6c42\u5f97\u53d8\u91cfa\u3001b\u3001\u3001c\u4e2d\u7684\u6700\u5927\u503c\u8d4b\u503c\u7ed9d\uff1b\u4e24\u6b21\u8c03\u7528\u51fd\u6570f2\uff0c\u6c42\u5f97\u53d8\u91cfa\u3001b\u3001c\u4e2d\u7684\u6700\u5c0f\u503c\u8d4b\u503c\u7ed9e\uff1b\u8868\u8fbe\u5f0fa+b+c-d-e\u5f97\u5230\u4e2d\u95f4\u503c\uff0c\u8f93\u51fa5\uff0c3\uff0c4\u3002", "\u00a0", "(24)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "int\u00a0 f()", "{static int i=0\uff1b", "int s=1\uff1a", "s+=i\uff1bi++\uff1b", "return s\uff1b", "}", "main()", "{inti\uff0ca=0\uff1b", "for(i=0\uff1bi<5\uff1bj++)a+=f()\uff1b", "printf(\u201d\uff05d\uff3cn\u201d\uff0ca)\uff1b", "}", "A)20\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)24\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)25\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)15", "D", "\u9759\u6001\u53d8\u91cf\uff0c\u5728\u7f16\u8bd1\u65f6\u5c31\u4e3a\u5176\u5206\u914d\u4e86\u5b58\u50a8\u7a7a\u95f4\uff0c\u7a0b\u5e8f\u4e00\u5f00\u59cb\u6267\u884c\u4fbf\u88ab\u5efa\u7acb\uff0c\u76f4\u5230\u8be5\u7a0b\u5e8f\u6267\u884c\u7ed3\u675f\u90fd\u5b58\u5728\uff0c\u800c\u4e0d\u50cf\u52a8\u6001\u53d8\u91cf\u53ea\u5b58\u5728\u4e8e\u51fd\u6570\u6216\u5206\u7a0b\u5e8f\u88ab\u8c03\u7528\u671f\u95f4\u3002\u5728\u51fd\u6570\u591a\u6b21\u88ab\u8c03\u7528\u7684\u8fc7\u7a0b\u4e2d\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u7684\u503c\u5177\u6709\u53ef\u7ee7\u627f\u6027\u3002", "\u00a0", "(25)\u5df2\u5b9a\u4e49\u4ee5\u4e0b\u51fd\u6570\uff1a", "fun(int *p)", "{retum *p\uff1b}", "\u8be5\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f______ \u3002", "A)\u4e0d\u786e\u5b9a\u7684\u503c\u00a0 B)\u5f62\u53c2p\u4e2d\u5b58\u653e\u7684\u503c \u00a0C)\u5f62\u53c2p\u6240\u6307\u5b58\u50a8\u5355\u5143\u4e2d\u7684\u503c\u00a0 D)\u5f62\u53c2p\u7684\u5730\u5740\u503c", "C\uff0e", "\u51fd\u6570\u9996\u90e8fun(int*p)\u4e2d+p\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u6307\u9488\u53d8\u91cf\uff0c\u6307\u5411\u6574\u578b\u6570\u636e\uff0c\u7528\u6765\u4ece\u4e3b\u8c03\u51fd\u6570\u63a5\u6536\u5730\u5740\uff1b\u800c\u8bed\u53e5return *p\uff1b\u4e2d\u7684*p\u4ee3\u8868p\u6240\u6307\u5411\u5b58\u50a8\u5355\u5143\u4e2d\u7684\u503c\u3002", "\u00a0", "(26)\u82e5\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "#include<stdio.h>", "Void f(int n)\uff1b", "main()", "{void f(int n)\uff1b", "f(5)\uff1b", "}", "Void f(int n)", "{print(\u201c\uff05d\uff3cn\u201d\uff0cn)\uff1b}", "\u5219\u4ee5\u4e0b\u53d9\u8ff0\u4e2d\u4e0d\u6b63\u786e\u7684\u662f______\u00a0 \u3002", "A)\u82e5\u53ea\u5728\u4e3b\u51fd\u6570\u4e2d\u5bf9\u51fd\u6570f\u8fdb\u884c\u8bf4\u660e\uff0c\u5219\u53ea\u80fd\u5728\u4e3b\u51fd\u6570\u4e2d\u6b63\u786e\u8c03\u7528\u51fd\u6570f", "B)\u82e5\u5728\u4e3b\u51fd\u6570\u524d\u5bf9\u51fd\u6570f\u8fdb\u884c\u8bf4\u660e\uff0c\u5219\u5728\u4e3b\u51fd\u6570\u548c\u5176\u540e\u7684\u5176\u5b83\u51fd\u6570\u4e2d\u90fd\u53ef\u4ee5\u6b63\u786e\u8c03\u7528\u51fd\u6570f", "C)\u5bf9\u4e8e\u4ee5\u4e0a\u51fd\u6570\u7a0b\u5e8f\uff0c\u7f16\u8bd1\u65f6\u7cfb\u7edf\u4f1a\u63d0\u793a\u51fa\u9519\u4fe1\u606f\uff1b\u63d0\u793a\u5bf9f\u51fd\u6570\u91cd\u590d\u8bf4\u660e", "D)\u51fd\u6570f\u65e0\u8fd4\u56de\u503c\uff0c\u6240\u4ee5\u53ef\u7528void\u5c06\u5176\u7c7b\u578b\u5b9a\u4e49\u4e3a\u65e0\u503c\u578b", "C", "\u8bc4\u6790:\u4e00\u4e2a\u51fd\u6570\u5728\u4e00\u4e2a\u6587\u4ef6\u4e2d\u7684\u5b9a\u4e49\u53ea\u80fd\u6709\u4e00\u6b21\uff0c\u4f46\u5bf9\u5b83\u7684\u58f0\u660e\u5374\u53ef\u4ee5\u6709\u5f88\u591a\u4e2a\u3002\u4e00\u4e2a\u51fd\u6570\u53ef\u4ee5\u6b63\u786e\u8c03\u7528\u5728\u5f53\u524d\u51fd\u6570\u4e4b\u524d\u58f0\u660e\u7684\u51fd\u6570\u3002", "\u00a0", "(27)\u6709\u4ee5\u4e0b\u7a0b\u5e8f\u6bb5\uff1a", "int a[10]={1\uff0c2\uff0c3\uff0c4\uff0c5\uff0c6\uff0c7\uff0c8\uff0c9\uff0c10}\uff0c*p=&a[3]\uff0cb\uff1b", "b=p[5];", "b\u4e2d\u7684\u503c\u662f______\u3002", "A)5\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)6\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)8\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)9", "D", "\u6570\u7ec4a\u5404\u5143\u7d20a[O]\uff5ea[9]\u7684\u503c\u4f9d\u6b21\u4e3a1\uff5e10\uff1b\u5728\u7a0b\u5e8f\u7684\u8bf4\u660e\u90e8\u5206\uff0c\u6307\u9488\u53d8\u91cfp\u521d\u59cb\u5316\u4e3a&a[3](\u5373a+3)\uff0c\u5219p[5]\u76f8\u5f53\u4e8e\u00b7(p+5)\uff0c\u76f8\u5f53\u4e8ea[8]\uff0c\u6240\u4ee5\u6267\u884c\u8bed\u53e5b=p[5]\uff1b\u540e\uff0cb\u7684\u503c\u4e3a9\u3002", "\u00a0", "(28)\u5728C\u8bed\u8a00\u4e2d\uff0c\u5f62\u53c2\u7684\u7f3a\u7701\u5b58\u50a8\u7c7b\u662f______\u3002", "A)auto\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)register\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)static\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)extern", "A", "\u7a0b\u5e8f\u8fdb\u884c\u7f16\u8bd1\u65f6\uff0c\u5e76\u4e0d\u4e3a\u5f62\u5f0f\u53c2\u6570\u5206\u914d\u5b58\u50a8\u7a7f\u95f4\u3002\u53ea\u6709\u5728\u88ab\u8c03\u7528\u65f6\uff0c\u5f62\u5f0f\u53c2\u6570\u624d\u4e34\u65f6\u5730\u5360\u6709\u5b58\u50a8\u7a7a\u95f4\u3002\u5f62\u5f0f\u53c2\u6570\u7528\u5173\u952e\u5b57auto\u4f5c\u5b58\u50a8\u7c7b\u522b\u7684\u58f0\u660e\u65f6\uff0c\u5173\u952e\u5b57\u201cauto\u201d\u53ef\u4ee5\u7701\u7565\uff0cauto\u4e0d\u5199\u5219\u9690\u542b\u786e\u5b9a\u4e3a\u201c\u81ea\u52a8\u5b58\u50a8\u7c7b\u522b\u201d\uff0c\u5b83\u5c5e\u4e8e\u52a8\u6001\u5b58\u50a8\u65b9\u5f0f\u3002", "\u00a0", "(29)\u6709\u4ee5\u4e0b\u5b9a\u4e49\uff1a", "#include<stdio.h>", "char a[10]\uff0c*b=a\uff1b", "\u4e0d\u80fd\u7ed9\u6570\u7ec4a\u8f93\u5165\u5b57\u7b26\u4e32\u7684\u8bed\u53e5\u662f______\u3002", "A)gets(a)\uff1b\u00a0\u00a0\u00a0 B)gets(a[0])\uff1b\u00a0\u00a0\u00a0 C)gets(&a[0])\uff1b\u00a0 D)gets(b)\uff1b", "B", "\u8bc4\u6790:\u51fd\u6570gets\u7684\u683c\u5f0f\u4e3a\uff1agets(\u5b57\u7b26\u6570\u7ec4\u540d)", "c\u8bed\u8a00\u4e2d\uff0c\u5b57\u7b26\u6570\u7ec4\u540d\u4ee3\u8868\u6570\u7ec4\u7684\u9996\u5143\u7d20\u5730\u5740\uff0c\u5373&a[O]\uff0c\u5b57\u7b26\u6307\u9488\u53d8\u91cflb\u503c\u4e5f\u4e3a\u6570\u7ec4a\u7684\u9996\u5730\u5740\uff0c\u9009\u9879A\u3001c\u3001D\u5747\u80fd\u7ed9\u6570\u7ec4a\u8f93\u5165\u5b57\u7b26\u4e32\u3002\u9009\u9879B\u4e2da[O]\u4e3a\u6570\u7ec4\u5143\u7d20\uff0c\u662f\u4e00\u4e2a\u6570\u636e\u53d8\u91cf\u3002", "\u00a0", "(30)\u82e5\u6307\u9488p\u5df2\u6b63\u786e\u5b9a\u4e49\uff0c\u8981\u4f7fp\u6307\u5411\u4e24\u4e2a\u8fde\u7eed\u7684\u6574\u578b\u52a8\u6001\u5b58\u50a8\u5355\u5143\uff0c\u4e0d\u6b63\u786e\u7684\u8bed\u53e5\u662f\u00a0 ______.", "A)p=2*(int*)malloc(sizeof(int))\uff1b\u00a0\u00a0\u00a0 B)p=(int*)malloc(2*sizeof(int))", "C)p=(int*)malloc(2*2)\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)p=(int*)calloc(2\uff0csizeof(int))", "A", "malloe\u51fd\u6570\u7684\u4f5c\u7528\u662f\u5728\u5185\u5b58\u5f00\u8f9f\u6307\u5b9a\u5927\u5c0f\u7684\u5b58\u50a8\u7a7a\u95ee\uff0c\u5e76\u5c06\u6b64\u5b58\u50a8\u7a7a\u95f4\u7684\u5730\u5740\u4f5c\u4e3a\u51fd\u6570\u503c\u5e26\u56de\uff0c\u5b83\u7684\u539f\u578b\u4e3avoid\u3002malloe(unsigned int size)\uff0c\u51fd\u6570\u503c\u4e3a\u6307\u9488\uff0c\u8fd9\u4e2a\u6307\u9488\u662f\u6307\u5411void\u7c7b\u578b\u3002\u5982\u679c\u8981\u5c06\u6b64\u8fd4\u56de\u5730\u5740\u8d4b\u7ed9\u4e00\u4e2a\u6307\u5411\u7279\u5b9a\u7c7b\u578b\u7684\u6307\u9488\u53d8\u91cf\uff0c\u5219\u5e94\u8fdb\u884c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u3002", "calloc\u51fd\u6570\u7684\u6a21\u578b\u662f\uff1avoid*calloc(unsigned int num,unsigned int size)\u4f5c\u7528\u662f\u5206\u914dnum\u4e2a\u5927\u5c0f\u4e3asize\u5b57\u8282\u7684\u7a7a\u95f4\u3002", "\u00a0", "(31)\u4e0b\u9762\u7a0b\u5e8f\u6bb5\u7684\u8f93\u51fa\u7ed3\u679c\u662f______ \u3002", "main()", "{", "char strl [10]={\u2018s\u2019,\u2019t\u2019\uff0c\u2019u\u2019\uff0c\u2019d\u2019,\u2019e\u2019\uff0c\u2019n\u2019\uff0c\u2019t\u2019}\uff1b", "printf(\u201c\uff05d\\n\u201d,strlen(strl))\uff1b", "}", "A)7\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)8\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)10\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)\u5b58\u5728\u8bed\u6cd5\u9519\u8bef", "A", "strlen()\u51fd\u6570\u5f97\u5230\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff0c\u8fd4\u56de\u503c\u4e3a\u6570\u503c\u578b\u3002\u5b57\u7b26\u6570\u7ec4\u521d\u59cb\u5316\uff0c\u82e5\u63d0\u4f9b\u7684\u521d\u503c\u4e2a\u6570\u5927\u4e8e\u6570\u7ec4\u957f\u5ea6\uff0c\u5219\u6309\u8bed\u6cd5\u9519\u8bef\u5904\u7406\u3002\u5982\u679c\u521d\u503c\u4e2a\u6570\u5c0f\u4e8e\u6570\u7ec4\u957f\u5ea6\uff0c\u5219\u53ea\u5c06\u8fd9\u4e9b\u5b57\u7b26\u8d4b\u7ed9\u6570\u7ec4\u4e2d\u524d\u9762\u90a3\u4e9b\u5143\u7d20\uff0c\u5176\u4f59\u7684\u5143\u7d20\u81ea\u52a8\u5b9a\u4e49\u4e3a\u7a7a\u5b57\u7b26\u3002", "\u00a0", "(32)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f______\u3002", "main()", "{int \u00a0x=040\uff1b", "printf(\u201c\uff05o\uff3cn\u201d\uff0cx<<1)\uff1b", "}", "A)100\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)80\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)64\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)32", "A", "040\u7528\u4e8c\u8fdb\u5236\u8868\u793a\u5c31\u662f00100000\uff0c\u5de6\u79fb\u4e00\u4f4d\uff0c\u5f97\u5230\u7684\u503c\u5e94\u8be5\u662f01000000\uff0c\u5316\u6210\u516b\u8fdb\u5236\u5e94\u8be5\u662f0100\u3002", "\u00a0", "(33)\u4e0b\u9762\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f______\u3002", "main()", "{", "char arr[2][4]\uff1b", "strcpy(arr[0],\u201dyou\u201d)\uff1bstrcpy(arr[1]\uff0c\u201dme\u201d)\uff1b", "arr[0][3]=\u2019&\u2019\uff1b", "print\u201d\uff05s\uff3cn\u201d,arr[0])\uff1b", "}", "A)you&me\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0B)you\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)me\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)err", "A", "\u5728\u4e3b\u51fd\u6570\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a2*4\u7684\u4e8c\u7ef4\u5b57\u7b26\u6570\u7ec4\uff0c\u6267\u884cstrcpy(arr[O]\u201cfIyou\u201d)\uff1b\u540e\uff0carr[0]={\u2018y\u2019\u2018o\u2019\uff0c\u2018u\u2019\uff0c\u2018\uff3c0\u2019}\uff0c\u6267\u884cstrcpy(arr[1]\uff0c\u201cme\u201d)\uff1b\u540earr[1]={ \u2018m\u2019\uff0c \u2018e\u2019\uff0c\u2018\uff3c0\u2019\uff0c\u4e0d\u5b9a}\uff0c\u5f53\u6267\u884c\u5b8carr[O][3]\uff1b\u2018&\u2019\uff1b\u4ecearr[O]\u5f00\u59cb\u7684\u5b58\u50a8\u7a7a\u95f4\u4e2d\u7684\u5b57\u7b26\u4f9d\u6b21\u662f\u2018y\u2019\uff0c\u2018o\u2019\uff0c\u2018u\u2019\uff0c\u2018&\u2019\uff0c\u2018m\u2019\uff0c\u2018e\u2019\uff0c\u2018\\0\u2019\uff0c\u6545\u6267\u884cprintf(\u201c\uff05s\uff3cn\u201d,arr[O])\uff1b\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u4e3a\u201dyou&me\u201d\uff0c\u9009A\u3002", "\u00a0", "(34)\u82e5\u8981\u6253\u5f00A\u76d8\u4e0a\u7684user\u5b50\u76ee\u5f55\u4e0b\u540d\u4e3aabc\uff0etxt\u7684\u6587\u672c\u6587\u4ef6\u8fdb\u884c\u8bfb\u3001\u5199\u64cd\u4f5c\uff0c\u4e0b\u9762\u7b26\u5408\u00a0\u00a0\u00a0 \u6b64\u8981\u6c42\u7684\u51fd\u6570\u8c03\u7528\u662f______\u3002", "A)fopen(\u201cA\uff1a\\user\\abc\uff0etxt\u201d\uff0c\u201dr\u201d)\u00a0\u00a0 \u00a0\u00a0\u00a0B)fopen(\u201cA\uff1a\\\\user\\\\abc.txt\u201d\uff0c\u201dr+\u201d)", "C)fopen(\u201cA\uff1a\\user\\abc.txt\u201d\uff0c\u201drb\u201d)\u00a0\u00a0\u00a0 \u00a0\u00a0D)fopen(\u201cA\uff1a\\\\user\\\\abc.txt\u201d\uff0c\u201dw\u201d)", "B", "\u672c\u9898\u8003\u67e5\u70b9\u662ffopen\u51fd\u6570\u4e2d\u6587\u4ef6\u4f7f\u7528\u65b9\u5f0f\u7684\u6307\u5b9a\u3002", "\u6587\u4ef6\u4f7f\u7528\u65b9\u5f0f\u201cr\u201d\uff0c\u8868\u793a\u4ee5\u201c\u53ea\u8bfb\u201d\u65b9\u5f0f\u6253\u5f00\u4e00\u4e2a\u5b57\u7b26\u6587\u4ef6\u3002", "\u6587\u4ef6\u4f7f\u7528\u65b9\u5f0f\u201cr+\u201d\uff0c\u8868\u793a\u4ee5\u201c\u8bfb\u5199\u201d\u65b9\u5f0f\u6253\u5f00\u4e00\u4e2a\u5b57\u7b26\u6587\u4ef6\u3002", "\u6587\u4ef6\u4f7f\u7528\u65b9\u5f0f\u201d\u201crb\u201d\uff0c\u8868\u793a\u4ee5\u201c\u53ea\u8bfb\u201d\u65b9\u5f0f\u6253\u5f00\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002", "\u6587\u4ef6\u4f7f\u7528\u65b9\u5f0f\u201cw\u201d\uff0c\u8868\u793a\u4ee5\u201c\u53ea\u5199\u201d\u65b9\u5f0f\u6253\u5f00\u4e00\u4e2a\u5b57\u7b26\u6587\u4ef6\u3002", "\u00a0", "(35)\u4ee5\u4e0b\u4e0d\u80fd\u6b63\u786e\u8fdb\u884c\u5b57\u7b26\u4e32\u8d4b\u521d\u503c\u7684\u8bed\u53e5\u4e3a______\u3002", "A)char\u00a0 str[5]= \u201cgood! \u201c\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)char\u00a0 str[]=\u201dgood! \u201d", "C)char\u00a0 *str=\u201dgood! \u201c\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)char\u00a0 str[5]={\u2019g\u2019,\u20190\u2019,\u2019o\u2019\uff0c\u2019d\u2019}", "A", "\u7528\u5b57\u7b26\u4e32\u4f5c\u521d\u503c\u4e3a\u5b57\u7b26\u6570\u7ec4\u8d4b\u503c\u65f6\uff0c\u7cfb\u7edf\u603b\u4f1a\u81ea\u52a8\u5728\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u8865\u4e0a\u4e00\u4e2a\u201c\uff3cO\u201d\uff0c\u5982\u9009\u9879A\u4e2d\u5b9a\u4e49\u7684\u8bdd\uff0c\u628a\u7b2c6\u4e2a\u5b57\u7b26\u4e5f\u5c31\u662f\u201c\uff3c0\u201d\u8d4b\u7ed9str\u6570\u7ec4\uff0c\u4f46\u6b64\u6570\u7ec4\u53ea\u542b5\u4e2a\u5143\u7d20\uff0c\u800c\u653e\u5230\u4e86s\u4ec3\u6570\u7ec4\u4e4b\u540e\u7684\u5b58\u50a8\u5355\u5143\u4e2d\uff0c\u8fd9\u5c31\u53ef\u80fd\u4f1a\u7834\u574f\u5176\u5b83\u6570\u636e\u533a\u6216\u7a0b\u5e8f\u672c\u8eab\u3002", "\u00a0", "(36)\u6709\u4ee5\u4e0b\u7a0b\u5e8f\uff1a", "#include<string.h>", "main(int argc,char*argv[])", "{", "int i,len=O\uff1b", "for(i=1\uff1bi<argc\uff1bi+=2)len+=strlen(argv[i])\uff1b", "Print(\u201c\uff05d\uff3cn\u201d,len)\uff1b", "}", "\u7ecf\u7f16\u8bd1\u8fde\u63a5\u540e\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6ex\uff0eexe\uff0c\u82e5\u8fd0\u884c\u65f6\u8f93\u5165\u4ee5\u4e0b\u5e26\u53c2\u6570\u7684\u547d\u4ee4\u884c", "ex abcd efg h3 k44", "\u8fd0\u884c\u540e\u8f93\u51fa\u7ed3\u679c\u662f______\u3002", "A)14\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)12\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)8\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)6", "C", "main\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570argc\u662fint\u578b\u53d8\u91cf\uff0c\u7528\u6765\u7edf\u8ba1\u547d\u4ee4\u884c\u4e2d\u7684\u5b57\u7b26\u4e32\u4e2a\u6570\uff0c\u672c\u9898\u8f93\u5165\u5e26\u53c2\u6570\u7684\u547d\u4ee4\u884c\u201cex abed efg h3 k44<\u56de\u8f66>\u201d\uff0cargc\u7684\u503c\u662f5\uff1b\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u5b57\u7b26\u578b\u6307\u9488\u6570\u7ec4\uff0c\u957f\u5ea6\u7531argc\u7684\u503c\u51b3\u5b9a\uff0c\u6bcf\u4e2a\u6570\u7ec4\u5143\u7d20\u5b58\u653e\u4e00\u4e2a\u6307\u5411\u5b57\u7b26\u4e32\u6570\u636e\u7684\u6307\u9488\u3002for\u8bed\u53e5\u5c06\u547d\u4ee4\u884c\u4e2d\u4e24\u4e2a\u5b57\u7b26\u4e32abed\u548ch3\u7684\u957f\u5ea6\u8fdb\u884c\u7d2f\u52a0\uff0c\u653e\u5728\u53d8\u91cflen\u4e2d\u3002", "\u00a0", "(37)\u82e5\u6709\u4e0b\u9762\u7684\u8bf4\u660e\u548c\u5b9a\u4e49\uff1a", "struct test", "{ int ml\uff1bchar m2\uff1bfloat m3\uff1b", "union uu{char ul[5]\uff1bint u2[2]\uff1b}ua\uff1b", "}myaa\uff1b", "\u5219sizeof(stuct test)\u7684\u503c\u662f______\u3002", "A)12\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)16\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)14\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)9", "A", "\u5728\u5b9a\u4e49\u4e86\u7ed3\u6784\u4f53\u53d8\u91cf\u540e\uff0c\u7cfb\u7edf\u4f1a\u4e3a\u4e4b\u5206\u914d\u5185\u5b58\u5355\u5143\uff0c\u5728\u5185\u5b58\u4e2d\u4e00\u4e2a\u6574\u578b\u53602\u4e2a\u5b57\u8282\uff0c\u4e00\u4e2a\u5b57\u7b26\u53601\u4e2a\u5b57\u8282\uff0c\u4e00\u4e2a\u6570\u7ec4\u5143\u7d20\u53601\u4e2a\u5b57\u8282\uff0c\u4e00\u4e2a\u6d6e\u70b9\u578b\u53604\u4e2a\u5b57\u8282\u3002\u7ed3\u6784\u4f53\u53d8\u91cf\u6240\u5360\u5185\u5b58\u957f\u5ea6\u662f\u5404\u6210\u5458\u5360\u7684\u5185\u5b58\u957f\u5ea6\u4e4b\u548c\uff1b\u800c\u5171\u7528\u4f53\u53d8\u91cf\u6240\u5360\u7684\u5185\u5b58\u957f\u5ea6\u7b49\u4e8e\u6700\u957f\u7684\u6210\u5458\u7684\u957f\u5ea6\u3002\u6240\u4ee5test\u5728\u5185\u5b58\u4e2d\u536012\u4e2a\u5b57\u8282(2+l+4+5=12)\u3002", "\u00a0", "(38)\u82e5\u6709\u5b9a\u4e49\uff1aint aa[8]\uff1b\uff0c\u5219\u4ee5\u4e0b\u8a8a\u8fbe\u5f0f\u4e2d\u4e0d\u80fd\u4ee3\u8868\u6570\u7ec4\u5143\u7d20aa[1]\u7684\u5730\u5740\u7684\u662f______\u3002", "A)&aa[0]+l\u00a0\u00a0\u00a0 \u00a0B)&aa[1]\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)aa[0]++\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)aa+1", "C", "\u7b54\u6848A\u4e2d&aa[0]\u8868\u793aaa[0]\u7684\u5730\u5740\uff0c\u52a0\u4e0a1\u5c31\u662faa[1]\u7684\u5730\u5740\u3002\u540c\u6837aa[1]\u7684\u5730\u5740\u4e5f\u53ef\u4ee5\u76f4\u63a5\u7528&aa[1]\u6216aa+l\u8868\u793a\u3002", "\u00a0", "(39)\u4e0b\u9762\u53d9\u8ff0\u4e2d\u6b63\u786e\u7684\u662f______\u3002", "A)\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u4e00\u5b9a\u6bd4\u5c40\u90e8\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u8303\u56f4\u5927", "B)\u9759\u6001\u7c7b\u522b\u53d8\u91cf\u7684\u751f\u5b58\u671f\u8d2f\u7a7f\u4e8e\u6574\u4e2a\u7a0b\u5e8f\u7684\u8fd0\u884c\u671f\u95f4", "C)\u51fd\u6570\u7684\u5f62\u53c2\u90fd\u5c5e\u4e8e\u5168\u5c40\u53d8\u91cf", "D)\u672a\u5728\u5b9a\u4e49\u8bed\u53e5\u4e2d\u8d4b\u503c\u7684auto\u53d8\u91cf\u548cstatic\u53d8\u91cf\u7684\u521d\u503c\u90fd\u662f\u968f\u673a\u503c", "B", "\u8bc4\u6790:c\u8bed\u8a00\u4e2d\uff0c\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u8303\u56f4\u662f\u4ece\u5b9a\u4e49\u5904\u5230\u7a0b\u5e8f\u7ed3\u675f\uff0c\u56e0\u6b64\u5168\u5c40\u53d8\u91cf\u7684\u5b9a\u4e49\u70b9\u76f4\u63a5\u5f71\u54cd\u5176\u4f5c\u7528\u8303\u56f4\uff0c\u56e0\u6b64\u9009\u9879A\u9519\u8bef\u3002\u9759\u6001(statiC)\u5b58\u50a8\u7c7b\u522b\u53d8\u91cf\u662f\u5728\u7a0b\u5e8f\u7f16\u8bd1\u65f6\u5206\u914d\u5b58\u50a8\u7a7a\u95f4\uff0c\u8be5\u7c7b\u522b\u53d8\u91cf\u5728\u6574\u4e2a\u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4\u5360\u636e\u7740\u56fa\u5b9a\u7684\u5b58\u50a8\u5355\u5143\uff0c\u5f53\u591a\u6b21\u8c03\u7528\u5176\u6240\u5728\u7684\u51fd\u6570\u65f6\uff0c\u8be5\u7c7b\u522b\u53d8\u91cf\u7684\u503c\u4e3a\u4e0a\u4e00\u6b21\u8c03\u7528\u7684\u503c\uff0c\u76f4\u81f3\u6574\u4e2a\u7a0b\u5e8f\u7ed3\u675f\u8fd0\u884c\u540e\u624d\u91ca\u653e\u8be5\u53d8\u91cf\u6240\u5360\u5b58\u50a8\u5355\u5143\u3002\u56e0\u6b64\u9009\u9879B\u6b63\u786e\uff0c\u9009\u9879D\u9519\u8bef\u3002c\u8bed\u8a00\u89c4\u5b9a\uff1a\u51fd\u6570\u7684\u5f62\u53c2\u662fauto\u578b\u5c40\u90e8\u53d8\u91cf\uff0c\u56e0\u6b64\u9009\u9879c\u9519\u8bef\u3002", "\u00a0", "(40)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f______ \u3002", "f(int b[]\uff0cint m,int n)", "{jnt i\uff0cs=0\uff1b", "for(i=m\uff1bi<n\uff1bi=i+2)s=s+b[i]\uff1b", "return s\uff1b", ")", "main()", "{int x\uff0ca[]\uff1a{1,2,3,4,5,6,7,8,9}\uff1b", "x=f(a\uff0c3\uff0c7)\uff1b", "printf(\u201d\uff05d\uff3cn\u201d\uff0cx)\uff1b", ")", "A)10\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)18\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)8\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)15", "A", "\u672c\u9898\u4e2d\uff0c\u4e3b\u51fd\u6570\u8c03\u7528f\u51fd\u6570\uff0c\u5728f\u51fd\u6570\u4e2d\u6267\u884c\u4e86\u4e24\u6b21\u5faa\u73af\uff0c\u7b2c\u4e00\u6b21i=3\uff0cs=0+b[i]\uff1a4\uff0c\u7136\u540ei\u7684\u503c\u88ab\u4fee\u6539\u62105\uff0c\u4ecd\u7136\u6ee1\u8db3\u5faa\u73af\u6761\u4ef6\uff0c\u8fdb\u5165\u7b2c\u4e8c\u8f6e\u5faa\u73af\uff0cs=4+b[5]=4+6=10\uff0c\u968f\u540e\uff0ci\u7684\u503c\u88ab\u4fee\u6539\u62107\uff0c\u4e0d\u518d\u6ee1\u8db3\u5faa\u73af\u6761\u4ef6\uff0c\u9000\u51fa\u5faa\u73af\uff0c\u8fd4\u56des\u7684\u503c\u3002\u6240\u4ee5\u6700\u540e\u8f93\u51fa\u7ed3\u679c\u662f10\u3002", "\u00a0", "(41)\u82e5\u6709\u4ee5\u4e0b\u5b9a\u4e49\u548c\u8bed\u53e5\uff1a", "int\u00a0 s[4][5]\uff0c(*ps)[5]\uff1b", "ps=s\uff1b", "\u5219\u5bf9s\u6570\u7ec4\u5143\u7d20\u7684\u6b63\u786e\u5f15\u7528\u5f62\u5f0f\u662f______ \u3002", "A)ps+l\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)*(ps+3)\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)ps[0][2]\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)*(ps+1)+3", "C", "\u9009\u9879A\u5f97\u5230\u7684\u662fs\u6570\u7ec4\u7b2c\u4e00\u884c\u7684\u5730\u5740\uff0c\u9009\u9879B\u5f97\u5230\u7684\u662fs\u6570\u7ec4\u7b2c\u4e09\u884c\u7b2c\u96f6\u5217\u5143\u7d20\u7684\u5730\u5740\uff0c\u800c\u9009\u9879D\u5f97\u5230\u7684\u662fs\u6570\u7ec4\u7b2c\u4e00\u884c\u7b2c\u4e09\u5217\u5143\u7d20\u7684\u5730\u5740\u3002\u53ea\u6709\u9009\u9879c\u6b63\u786e\u5f15\u7528\u4e86ps\u6570\u7ec4\u7b2c\u96f6\u884c\u7b2c\u4e8c\u5217\u7684\u5143\u7d20\u3002", "\u00a0", "(42)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f______\u3002", "main()", "{int b[3][3]={0,1,2,0,1,2,0,1,2}\uff0ci\uff0cj,t=1\uff1b", "for(i=0\uff1bi<3\uff1bi++)", "fbr(j=I;J<=I;J++)t=t+b[i][b[j][j]]\uff1b", "printf(\u201d\uff05d\uff3cn\u201d\uff0ct)\uff1b", "}", "A)3\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)4\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)l\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)9", "B", "\u8bc4\u6790:`\u4e24\u4e2a\u5faa\u73af\u8bed\u53e5\u5d4c\u5957\u4f7f\u7528\uff0c\u5728\u7b2c\u4e00\u6b21\u5916\u5faa\u73af\u4e2d\uff0ci=0\uff0c\u6267\u884c\u5185\u5faa\u73af\u65f6\uff0c\u5c06j\u8d4b\u503c\u4e3ai\u7684\u503cO\uff0c\u6267\u884c\u4e00\u6b21t=t+b[i][b[j][j]]\uff0c\u5f97\u5230t=1\uff0c\u9000\u51fa\u5185\u5faa\u73af\uff0c\u63a5\u7740\u8fdb\u5165\u7b2c\u4e8c\u6b21\u5916\u5faa\u73af\uff0c\u5728\u7b2c\u4e8c\u6b21\u5916\u5faa\u73af\u7ed3\u675f\u65f6t=2\uff0c\u7136\u540e\u6267\u884c\u7b2c\u4e09\u6b21\u5916\u5faa\u73af\uff0c\u5f97\u5230t=4\uff0c\u9000\u51fa\u5faa\u73af\uff0c\u8f93\u51fat\u7684\u503c\u3002", "\u00a0", "(43)\u6709\u4ee5\u4e0b\u7a0b\u5e8f\uff1a", "#definef (x)X*X", "main()", "{", "int i\uff1a", "i=f(4+4)\uff0ff(2+2)\uff1b", "printf(\u201d\uff05d\\n\u201d\uff0ci)\uff1b", "}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f______\u3002", "A)28\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)22\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)16\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)4", "A", "\u4e3b\u51fd\u6570\u4e2df(4+4)\uff0ff(2+2)\u53ef\u6309\u5e26\u53c2\u5b8f\u5b9a\u4e49\u5c55\u5f00\u4e3a4+4*4+4\uff0f2+2*2+2(\u5343\u4e07\u4e0d\u8981\u968f\u610f\u5730\u6dfb\u52a0\u62ec\u53f7)\uff0c\u6c42\u5f97\u7ed3\u679c\u4e3a28\u3002", "\u00a0", "(44)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f______\u3002", "#inclue<stdio.h>", "#inclue<string.h>", "main()", "{char b1[8]=\u201dgoddwer\u201d,b2[8]\uff0c*pb=bl+3\uff1b", "while(\u2013pb>=b1) strcpy(b2,pb)\uff1b", "print(\u201c\uff05dha\u201d,strlen(b2))\uff1b", ")", "A)8\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)3\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)l\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)7", "D", "\u6bcf\u6b21\u6267\u884c\u5faa\u73af\uff0c\u90fd\u662f\u5c06pb\u6307\u9488\u6307\u5411\u7684\u5185\u5bb9\u590d\u5236\u5230b2\u4e2d\uff0c\u7b2c\u4e00\u6b21\u5faa\u73af\u4e2d\uff0c\u5c06b1[2]\uff5eb1[7]\u516d\u4e2a\u5b57\u7b26\u590d\u5236\u5230b2\u4e2d\uff0c\u7b2c\u4e8c\u6b21\u5faa\u73af\uff0c\u5c06b[1]\uff5eb[7]\u4e03\u4e2a\u5b57\u7b26\u590d\u5236\u5230b2\u4e2d\uff0c\u7b2c\u4e09\u6b21\u5faa\u73af\uff0c\u5c06b1\u6570\u7ec4\u7684\u5168\u90e8\u5185\u5bb9\u590d\u5236\u5230b2\u4e2d\u3002\u800c\u540e\u4e00\u6b21\u590d\u5236\u4f1a\u8986\u76d6\u524d\u9762\u7684\u590d\u5236\uff0c\u6700\u540eb2\u7684\u5b9e\u9645\u957f\u5ea6\u5e94\u8be5\u662f\u516b\uff0c\u800cstrlen()\u51fd\u6570\u6d4b\u51fa\u7684\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u201c\uff3cO\u201d\u4e4b\u524d\u7684\u5168\u90e8\u5b57\u7b26\u7684\u4e2a\u6570\uff0c\u6240\u4ee5\u6700\u540e\u8f93\u51fa\u7684\u503c\u662f70", "\u00a0", "(45)\u5728\u8bf4\u660e\u8bed\u53e5\uff1aint *f()\uff1b\u4e2d\uff0c\u6807\u8bc6\u7b26f\u4ee3\u8868\u7684\u662f______\u3002", "A)\u4e00\u4e2a\u7528\u4e8e\u6307\u5411\u6574\u578b\u6570\u636e\u7684\u6307\u9488\u53d8\u91cf", "B)\u4e00\u4e2a\u7528\u4e8e\u6307\u5411\u4e00\u7ef4\u6570\u7ec4\u7684\u884c\u6307\u9488", "C)\u4e00\u4e2a\u7528\u4e8e\u6307\u5411\u51fd\u6570\u7684\u6307\u9488\u53d8\u91cf", "D)\u4e00\u4e2a\u8fd4\u56de\u503c\u4e3a\u6307\u9488\u578b\u7684\u51fd\u6570\u540d", "D", "\u8bc4\u6790:\u4e00\u4e2a\u51fd\u6570\u5728\u7f16\u8bd1\u65f6\u88ab\u5206\u914d\u7ed9\u4e00\u4e2a\u5165\u53e3\u5730\u5740\uff0c\u8fd9\u4e2a\u5165\u53e3\u5730\u5740\u5c31\u79f0\u4e3a\u51fd\u6570\u7684\u6307\u9488\u3002\u53ef\u4ee5\u7528\u4e00\u4e2a\u6307\u9488\u53d8\u91cf\u6307\u5411\u51fd\u6570\uff0c\u7136\u540e\u901a\u8fc7\u8be5\u6307\u9488\u53d8\u91cf\u8c03\u7528\u6b64\u51fd\u6570\u3002Int*f()\u8868\u793af\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u5e26\u56de\u4e00\u4e2a\u6307\u9488\u503c\uff0c\u8fd9\u4e2a\u6307\u9488\u662f\u6307\u5411\u4e00\u4e2a\u6574\u578b\u6570\u636e\u7684\u3002", "\u00a0", "(46)\u4e0b\u9762\u51fd\u6570\u4e2d\uff0c\u53ef\u4ee5\u628a\u6574\u6570\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0f\u5b58\u653e\u5230\u6587\u4ef6\u4e2d\u7684\u51fd\u6570\u662f______\u3002", "A)fprintf\u51fd\u6570\u00a0\u00a0\u00a0 B)fread\u51fd\u6570\u00a0\u00a0\u00a0 \u00a0\u00a0C)fwrite\u51fd\u6570 \u00a0\u00a0\u00a0\u00a0D)fputc\u51fd\u6570", "C", "ANSI c\u6807\u51c6\u63d0\u51fa\u8bbe\u7f6e\u4e24\u4e2a\u51fd\u6570(fread\u548cfwrite)\uff0c\u7528\u6765\u8bfb\u5199\u4e00\u4e2a\u6570\u636e\u5757\u3002\u5b83\u4eec\u7684\u4e00\u822c\u8c03\u7528\u5f62\u5f0f\u4e3a\uff1a", "fread(buffer,size,count,fp)\uff1b", "fwrite(buffer,size,count,fp)\uff1b", "\u5176\u4e2d\uff1abuffer\u662f\u4e00\u4e2a\u6307\u9488\uff1bsize\u662f\u8981\u8bfb\u5199\u7684\u5b57\u8282\u6570\uff1bcount\u662f\u8981\u8fdb\u884c\u8bfb\u5199\u591a\u5c11\u4e2asize\u5b57\u8282\u7684\u6570\u636e\u9879\uff1b", "fb\u662f\u6307\u6587\u4ef6\u578b\u6307\u9488\u3002\u5982\u679c\u6587\u4ef6\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0f\u6253\u5f00\uff0c\u7528fread\u548cfwrite\u51fd\u6570\u5c31\u53ef\u4ee5\u8bfb\u5199\u4efb\u4f55\u7c7b\u578b\u7684\u4fe1\u606f\u3002", "\u00a0", "(47)\u4e0d\u5408\u6cd5\u7684main\u51fd\u6570\u547d\u4ee4\u884c\u53c2\u6570\u8868\u793a\u5f62\u5f0f\u662f______\u3002", "A)main(int a,char*c[])\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)main(int arc,char **arv)", "C)main(int argc,char *argv)\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0D)main(int argv,char *arge[])", "C", "\u672c\u9898\u4e3b\u8981\u8003\u67e5\u4e86\u5bf9main\u51fd\u6570\u53c2\u6570\u7684\u4e86\u89e3\uff0cmain\u51fd\u6570\u53ef\u4ee5\u6709\u4e24\u4e2a\u5f62\u53c2\uff0c\u4e00\u822c\u5f62\u5f0f\u662f\uff1amain(int argc,char*argv[])\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u7684\u7b2c\u4e00\u4e2a\u5f62\u53c2\u662f\u4e00\u4e2a\u6574\u578b\u53d8\u91cf\uff0c\u7b2c\u4e8c\u4e2a\u5f62\u53c2\u662f\u4e00\u4e2a\u6307\u9488\u6570\u7ec4\uff0c\u5176\u5143\u7d20\u6307\u5411\u5b57\u7b26\u578b\u6570\u636e\u3002", "\u00a0", "(48)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f______.", "\nint x=3;", "main()", "{int i\uff1b", "for(i=l\uff1bi<x\uff1bi++)incre()\uff1b", "}", "incre()", "{ static int x=l\uff1b", "X*=x+l\uff1a", "printf(\u201d\uff05Di\u201d\uff0cx)\uff1b", "}", "A)3\u00a0 3\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)2\u00a02\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C)2\u00a0 6\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)2\u00a0 5", "C", "incre()\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u9759\u6001\u5c40\u90e8\u53d8\u91cfx\uff0c\u5b83\u7684\u4f5c\u7528\u8303\u56f4\u4ec5\u9650\u4e8e\u672c\u51fd\u6570\u4e2d\uff0c\u800c\u4e0d\u4f1a\u5f71\u54cdmain()\u51fd\u6570\u4e2d\u7684x\u503c\u3002", "\u00a0", "(49)\u6709\u4ee5\u4e0b\u7ed3\u6784\u4f53\u8bf4\u660e\u548c\u53d8\u91cf\u7684\u5b9a\u4e49\uff0c\u4e14\u5982\u56fe\u6240\u793a\u6307\u9488p\u6307\u5411\u53d8\u91cfa\uff0c\u6307\u9488q\u6307\u5411\u53d8\u91cfb\u3002\u5219\u4e0d\u80fd\u628a\u7ed3\u70b9b\u8fde\u63a5\u5230\u7ed3\u70b9a\u4e4b\u540e\u7684\u8bed\u53e5\u662f________\u3002", "\u00a0", "struct node", "{ char data\uff1b", "struct node *next\uff1b", "}a,b\uff0c*p=&a\uff0c*q=&b\uff1b", "A)a\uff0enext=q\uff1b\u00a0 B)p\uff0enext=&b\uff1b\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0C)p->next=&b\uff1b\u00a0\u00a0\u00a0\u00a0\u00a0 D)(*p).next=q\uff1b", "B", "\u7531\u4e8ep\u662f\u4e00\u4e2a\u6307\u5411struct node\u578b\u7684\u6307\u9488\u53d8\u91cf\uff0c\u8981\u8bbf\u95ee\u8be5\u6307\u9488\u53d8\u91cf\u6307\u5411\u7684\u7ed3\u6784\u4f53\u6210\u5458\uff0c\u5fc5\u987b\u4f7f\u7528->\u8fd0\u7b97\u7b26\u6216\u201c(*p)\uff0e\u6210\u5458\u201d\u7684\u5f62\u5f0f\uff0c\u6545\u9009\u9879B\u662f\u9519\u8bef\u7684\u3002", "\u00a0", "(50)\u82e5\u6709\u4ee5\u4e0b\u5b9a\u4e49\uff1a", "struct link", "{ int data\uff1b", "struct link*next\uff1b", "}a\uff0cb\uff0cc\uff0c*p\uff0c*q\uff1b", "\u4e14\u53d8\u91cfa\u548cb\u4e4b\u95f4\u5df2\u6709\u5982\u56fe\u6240\u793a\u7684\u94fe\u8868\u7ed3\u6784\uff1a", "\u00a0", "\u6307\u9488p\u6307\u5411\u53d8\u91cfa\uff0cq\u6307\u5411\u53d8\u91cfc\u3002\u5219\u80fd\u591f\u628ac\u63d2\u5165\u5230a\u548cb\u4e4b\u95f4\u5e76\u5f62\u6210\u65b0\u7684\u94fe\u8868\u7684\u8bed\u53e5\u7ec4\u662f______\u3002", "A)a.next=c\uff1bc.next=b\uff1b\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)p.next=q\uff1bq.next=p.next\uff1b", "C)p->next=&c\uff1bq->next=p->next\uff1b \u00a0\u00a0\u00a0\u00a0D)(*p).next=q\uff1b(*q).next=&b\uff1b", "D", "\u672c\u9898\u8003\u7684\u662f\u6307\u9488\u7684\u8fd0\u7528\u3002\u5373\u5148\u5c06\u5143\u7d20a\u7684\u6307\u9488\u6307\u5411q\u6307\u9488\u6240\u6307\u5411\u7684\u5143\u7d20\u5373c\uff0c\u7136\u540e\u5c06c\u7684\u6307\u9488\u6307\u5411b\u5143\u7d20\uff0c\u91c7\u53d6\u7684\u662f\u76f4\u63a5\u53d6\u5143\u7d20\u5730\u5740\u7684\u65b9\u5f0f\u3002", "\u00a0", "\u4e8c\u3001\u586b\u7a7a\u9898(\u6bcf\u7a7a2\u5206\uff0c\u517140\u5206)", "\u8bf7\u5c06\u6bcf\u4e00\u4e2a\u7a7a\u7684\u6b63\u786e\u7b54\u6848\u5199\u5728\u7b54\u9898\u5361\u7684\u30101\u3011\u81f3\u301020\u3011\u5e8f\u53f7\u7684\u6a2a\u7ebf\u4e0a\uff0c\u7b54\u5728\u8bd5\u5377\u4e0a\u4e0d\u5f97\u5206\u3002", "(1)\u7b97\u6cd5\u7684\u57fa\u672c\u7279\u5f81\u662f\u53ef\u884c\u6027\u3001\u786e\u5b9a\u6027\u3001", "\u00a0\u548c\u62e5\u6709\u8db3\u591f\u7684\u60c5\u62a5\u3002", "\u30101\u3011\u6709\u7a77\u6027", "\u7b97\u6cd5\u662f\u6307\u89e3\u9898\u65b9\u6848\u7684\u51c6\u786e\u800c\u5b8c\u6574\u7684\u63cf\u8ff0\u3002\u5b83\u67094\u4e2a\u57fa\u672c\u7279\u5f81\uff0c\u5206\u522b\u662f\u53ef\u884c\u6027\u3001\u786e\u5b9a\u6027\u3001\u6709\u7a77\u6027\u548c\u62e5\u6709\u8db3\u591f\u7684\u60c5\u62a5\u3002", "\u00a0", "(2)\u987a\u5e8f\u5b58\u50a8\u65b9\u6cd5\u662f\u628a\u903b\u8f91\u4e0a\u76f8\u90bb\u7684\u7ed3\u70b9\u5b58\u50a8\u5728\u7269\u7406\u4f4d\u7f6e", "\u7684\u5b58\u50a8\u5355\u5143\u4e2d\u3002", "\u30102\u3011\u76f8\u90bb", "\u5e38\u7528\u7684\u5b58\u50a8\u8868\u793a\u65b9\u6cd5\u67094\u79cd\uff0c\u987a\u5e8f\u5b58\u50a8\u3001\u94fe\u5f0f\u5b58\u50a8\u3001\u7d22\u5f15\u5b58\u50a8\u3001\u6563\u5217\u5b58\u50a8\u3002\u5176\u4e2d\uff0c\u987a\u5e8f\u5b58\u50a8\u65b9\u6cd5\u662f\u628a\u903b\u8f91\u4e0a\u76f8\u90bb\u7684\u7ed3\u70b9\u5b58\u50a8\u5728\u7269\u7406\u4f4d\u7f6e\u4e5f\u76f8\u90bb\u7684\u5b58\u50a8\u5355\u5143\u4e2d\u3002", "\u00a0", "(3)Jackson\u7ed3\u6784\u5316\u7a0b\u5e8f\u8bbe\u8ba1\u65b9\u6cd5\u662f\u82f1\u56fd\u7684M\uff0eJackson\u63d0\u51fa\u7684\uff0c\u5b83\u662f\u4e00\u79cd\u9762\u5411", "\u7684\u8bbe\u8ba1\u65b9\u6cd5\u3002", "\u30103\u3011\u6570\u636e\u7ed3\u6784", "\u7ed3\u6784\u5316\u5206\u6790\u65b9\u6cd5\u4e3b\u8981\u5305\u62ec\uff1a\u9762\u5411\u6570\u636e\u6d41\u7684\u7ed3\u6784\u5316\u5206\u6790\u65b9\u6cd5(SA-Structured analysis)\uff0c\u9762\u5411\u6570\u636e\u7ed3\u6784\u7684Jackson\u65b9\u6cd5(JSD-Jackson system development method)\u548c\u9762\u5411\u6570\u636e\u7ed3\u6784\u7684\u7ed3\u6784\u5316\u6570\u636e\u7cfb\u7edf\u5f00\u53d1\u65b9\u6cd5(DSSD-Data structured system development method)\u3002", "\u00a0", "(4)\u6570\u636e\u5e93\u8bbe\u8ba1\u5206\u4e3a\u4ee5\u4e0b6\u4e2a\u8bbe\u8ba1\u9636\u6bb5\uff1a\u9700\u6c42\u5206\u6790\u9636\u6bb5\u3001", "\u3001\u903b\u8f91\u8bbe\u8ba1\u9636\u6bb5\u3001\u7269\u7406\u00a0\u00a0\u00a0 \u8bbe\u8ba1\u9636\u6bb5\u3001\u5b9e\u65bd\u9636\u6bb5\u3001\u8fd0\u884c\u548c\u7ef4\u62a4\u9636\u6bb5\u3002", "\u30104\u3011\u6982\u5ff5\u8bbe\u8ba1\u9636\u6bb5\u6216\u6570\u636e\u5e93\u6982\u5ff5\u8bbe\u8ba1\u9636\u6bb5", "\u6570\u636e\u5e93\u8bbe\u8ba1\u5206\u4e3a\u4ee5\u4e0b6\u4e2a\u8bbe\u8ba1\u9636\u6bb5\uff1a\u9700\u6c42\u5206\u6790\u9636\u6bb5\u3001\u6982\u5ff5\u8bbe\u8ba1\u9636\u6bb5\u3001\u903b\u8f91\u8bbe\u8ba1\u9636\u6bb5\u3001\u7269\u7406\u8bbe\u8ba1\u9636\u6bb5\u3001\u5b9e\u65bd\u9636\u6bb5\u53ca\u6570\u636e\u5e93\u8fd0\u884c\u548c\u7ef4\u62a4\u9636\u6bb5\u3002", "\u00a0", "(5)\u6570\u636e\u5e93\u4fdd\u62a4\u5206\u4e3a\uff1a\u5b89\u5168\u6027\u63a7\u5236\u3001", "\u3001\u5e76\u53d1\u6027\u63a7\u5236\u548c\u6570\u636e\u7684\u6062\u590d\u3002", "\u30105\u3011\u5b8c\u5168\u6027\u63a7\u5236", "\u8003\u67e5\u8003\u751f\u5bf9\u6570\u636e\u5e93\u57fa\u672c\u77e5\u8bc6\u7684\u4e86\u89e3\u3002", "\u5b89\u5168\u6027\u63a7\u5236\uff1a\u9632\u6b62\u672a\u7ecf\u6388\u6743\u7684\u7528\u6237\u6709\u610f\u6216\u65e0\u610f\u5b58\u53d6\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\uff0c\u4ee5\u514d\u6570\u636e\u88ab\u6cc4\u9732\u3001\u66f4\u6539\u6216\u7834\u574f\uff1b\u5b8c\u6574\u6027\u63a7\u5236\uff1a\u4fdd\u8bc1\u6570\u636e\u5e93\u4e2d\u6570\u636e\u53ca\u8bed\u4e49\u7684\u6b63\u786e\u6027\u548c\u6709\u6548\u6027\uff0c\u9632\u6b62\u4efb\u4f55\u5bf9\u6570\u636e\u9020\u6210\u9519\u8bef\u7684\u64cd\u4f5c\uff1b\u5e76\u53d1\u6027\u63a7\u5236\uff1a\u6b63\u786e\u5904\u7406\u597d\u591a\u7528\u6237\u3001\u591a\u4efb\u52a1\u73af\u5883\u4e0b\u7684\u5e76\u53d1\u64cd\u4f5c\uff0c\u9632\u6b62\u9519\u8bef\u53d1\u751f\uff1b\u6570\u636e\u7684\u6062\u590d\uff1a\u5f53\u6570\u636e\u5e93\u88ab\u7834\u574f\u6216\u6570\u636e\u4e0d\u6b63\u786e\u65f6\uff0c\u4f7f\u6570\u636e\u5e93\u80fd\u6062\u590d\u5230\u6b63\u786e\u7684\u72b6\u6001\u3002", "\u00a0", "(6)\u8bbe\u6709int x=ll\uff1b\uff0c\u5219\u8868\u8fbe\u5f0f(x++ *1\uff0f3)\u7684\u503c\u4e3a", "\u3002", "\u30106\u30113", "\u767d\u589e\u81ea\u51cf\u8fd0\u7b97\u7b26\u7684\u4f5c\u7528\u662f\u4f7f\u53d8\u91cf\u7684\u503c\u589e1\u6216\u51cf1\uff0c\u5982\uff1a", "++i\uff0c\u2013i \u00a0(\u5728\u4f7f\u7528i\u4e4b\u524d\uff0c\u5148\u4f7fi\u7684\u503c\u52a0(\u51cf)1)", "i++\uff0ci\u2013\u00a0 (\u5728\u4f7f\u7528i\u4e4b\u540e\uff0c\u4f7fi\u7684\u503c\u52a0(\u51cf)1)", "\u6240\u4ee5\u8868\u8fbe\u5f0f(x++*1\uff0f3)\u7684\u503c\u537311\uff0f3\u7684\u503c\uff1a3\u3002", "\u00a0", "(7)\u82e5\u4ece\u952e\u76d8\u8f93\u516558\uff0c\u5219\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f", "\u3002", "main()", "{ int\u00a0 a\uff1b", "Scanf(\u201c\uff05d\u201d,&a)\uff1b", "If(a>50)printf(\u201c\uff05d\u201d,a)\uff1b", "If(a>40)printf(\u201c\uff05d\u201d,a)\uff1b", "if(a>30)printf(\u201c\uff05d\u201d,a)\uff1b", "}", "\u30107\u3011585858", "\u672c\u9898\u9996\u5148\u4e3aa\u8f93\u5165\u4e00\u4e2a\u503c58\uff0c\u7136\u540e\u6267\u884c\u4e09\u4e2a\u5224\u65ad\u8bed\u53e5\uff0c\u5728\u6bcf\u4e00\u4e2a\u5224\u65ad\u4e2d\uff0c\u5982\u679c\u6ee1\u8db3\u5224\u65ad\u6761\u4ef6\u7684\u8bdd\uff0c\u5c31\u8f93\u51faa\uff0c\u56e0\u4e3a\u4e09\u6b21\u5224\u65ad\uff0c\u6761\u4ef6\u90fd\u6ee1\u8db3\uff0c\u6240\u4ee5\u4e09\u6b21\u8f93\u51faa\u3002", "\u00a0", "(8)\u4e0b\u5217\u7a0b\u5e8f\u8fd0\u884c\u7684\u7ed3\u679c\u662f", "\u3002", "#include<stdio.h>", "main()", "{", "int x=l,i=l\uff1a", "fOr(\uff1bx<50\uff1bi++)", "{if(x>=10)break\uff1b", "if(x\uff052!=1)", "{x+=3\uff1bcontinue\uff1b}", "x-=1\uff1b", "}", "printf(\u201dx=\uff05d\uff0ci=\uff05d\uff3cn\u201d\uff0cx\uff0ci)\uff1b", "}", "\u30108\u3011x=11,i=11", "\u672c\u9898\u7a0b\u5e8f\u6bb5\u901a\u8fc7for\u5faa\u73af\u8bed\u53e5\u5b9e\u73b0\u5f53x\u7684\u503c\u4e3a\u5947\u6570\u65f6\uff0cx\u81ea\u51cf1\uff1a\u5f53x\u4e3a\u5076\u6570\u65f6\u81ea\u52a03\u7684\u529f\u80fd\u3002\u7a0b\u5e8f\u5171\u6267\u884c\u4e8611\u6b21\u5faa\u73af\uff0c\u5f53x=11\u65f6\u9000\u51fa\u5faa\u73af\u3002", "\u00a0", "(9)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f", "\u3002", "main()", "fint a=177\uff1b", "printf(\u201c\uff05o\uff3cn\u201d,a)\uff1b", "}", "\u30109\u3011261", "\u672c\u9898\u8003\u70b9\u662fprintf\u51fd\u6570\u7684\u683c\u5f0f\u5b57\u7b26\u3002\u201c\uff050\u201d\u8868\u793a\u4ee5\u516b\u8fdb\u5236\u6574\u6570\u5f62\u5f0f\u8f93\u51fa\u3002", "\u00a0", "(10)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f", "\u3002", "main()", "{int a\uff1aO\uff1b", "a+=(a=8)\uff1b", "printf(\u201d\uff05d\\n\u201d\uff0ca)\uff1b", "}", "\u301010\u301116", "\u672c\u9898\u4e3b\u8981\u8003\u7684\u662f\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u3002", "A+=(a=8)\u53ef\u4ee5\u5199\u6210a\uff1a=a+(a=8)\u7684\u5f62\u5f0f\uff0c\u62ec\u53f7\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u201c+\u201d\uff0c\u800c\u201c+\u201d\u7684\u4f18\u5148\u7ea7\u53c8\u9ad8\u4e8e\u201c=\u201d\uff0c\u6240\u4ee5\u5148\u6267\u884c\u62ec\u53f7\u5185\u7684\u8fd0\u7b97\uff0c\u5c06a\u8d4b\u503c\u4e3a8\uff0c\u7136\u540e\u518d\u6267\u884c+\u8fd0\u7b97\u3002", "\u00a0", "(11)\u4ee5\u4e0b\u5b9a\u4e49\u7684\u7ed3\u6784\u4f53\u7c7b\u578b\u62df\u5305\u542b\u4e24\u4e2a\u6210\u5458\uff0c\u5176\u4e2d\u6210\u5458\u53d8\u91cfinfo\u7528\u6765\u5b58\u653e\u6574\u578b\u6570\u636e\uff1b\u6210\u00a0\u00a0\u00a0 \u5458\u53d8\u91cflink\u662f\u6307\u5411\u81ea\u8eab\u7ed3\u6784\u7684\u6307\u9488\u3002\u8bf7\u5c06\u5b9a\u4e49\u8865\u5145\u5b8c\u6574\u3002", "struct node", "{int info\uff1b", "link\uff1b", "}\uff1b", "\u301011\u3011struct node*", "\u672c\u9898\u8003\u7684\u662f\u5982\u4f55\u5b9a\u4e49\u4e00\u4e2a\u6307\u5411\u7ed3\u6784\u4f53\u53d8\u91cf\u7684\u6307\u9488\u3002", "\u4e00\u4e2a\u7ed3\u6784\u4f53\u53d8\u91cf\u6307\u9488\u5c31\u662f\u8be5\u53d8\u91cf\u6240\u5360\u636e\u7684\u5185\u5b58\u6bb5\u7684\u8d77\u59cb\u5730\u5740\u3002\u53ef\u4ee5\u8bbe\u4e00\u4e2a\u6307\u9488\u53d8\u91cf\uff0c\u7528\u6765\u6307\u5411\u4e00\u4e2a\u7ed3\u6784\u4f53\u53d8\u91cf\uff0c\u6b64\u65f6\u8be5\u6307\u9488\u53d8\u91cf\u7684\u503c\u662f\u7ed3\u6784\u4f53\u53d8\u91cf\u7684\u8d77\u59cb\u5730\u5740\u3002\u6307\u9488\u53d8\u91cf\u4e5f\u53ef\u4ee5\u7528\u6765\u6307\u5411\u7ed3\u6784\u4f53\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u3002", "\u00a0", "(12)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f", "\u3002", "main()", "{int s\uff0ci\uff1b", "for(s=O,i=O\uff1bi<3\uff1bi++\uff0cs+=i)\uff1b", "printf(\u201d\uff05d\uff3cn\u201d\uff0cs)\uff1b", "}", "\u301012\u30116", "\u5728\u9017\u53f7\u8868\u8fbe\u5f0f\u5185\u6309\u81ea\u5de6\u81f3\u53f3\u987a\u5e8f\u6c42\u89e3\uff0c\u56e0\u6b64\u672c\u9898\u5171\u6267\u884c\u4e09\u6b21\u5faa\u73af\uff0c\u5177\u4f53\u60c5\u5f62\u5982\u4e0b\uff1a", "\u7b2c\u4e00\u6b21\u5f53i=O\u65f6\uff0c\u6267\u884ci++\uff0cs+=i\uff0c\u5219i=l\uff0cs=l\uff1a", "\u7b2c\u4e8c\u6b21\u5f53i=l\u65f6\uff0c\u6267\u884ci++\uff0cs+=i\uff0c\u5219i=2\uff0cs=3\uff1b", "\u7b2c\u4e09\u6b21\u5f53i=2\u65f6\uff0c\u6267\u884ci++\uff0cs+=i\uff0c\u5219i=3\uff0cs=6\u3002", "\u5f53i=3\u540e\u9000\u51fa\u5faa\u73af\u3002", "\u00a0", "(13)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f", "\u3002", "main()", "{char\u00a0 *p=\u201dabcdefgh\u201d\uff0c*r\uff1b", "1ong\u00a0 *q\uff1b", "q=(1ong*)p\uff1b", "q++\uff1b", "r=(char*)q\uff1b", "printf(\u201d\uff05s\\n\u201d\uff0cr)\uff1b", "}", "\u301013\u3011efgh", "\u6307\u9488\u53d8\u91cfp\uff0cr\u6307\u5411\u5b57\u7b26\u578b\u6570\u636e\uff0c\u800c\u6307\u9488\u53d8\u91cfq\u6307\u5411\u957f\u6574\u578b\u6570\u636e\u3002\u9996\u5148\u901a\u8fc7\u7c7b\u578b\u8f6c\u6362\u5c06\u6307\u9488p\u7684\u503c\u8d4b\u7ed9q\uff0c\u7136\u540e\u6267\u884cq\u81ea\u52a0\uff0c\u56e0\u4e3aq\u662f\u5b9a\u4e49\u4e3a\u6307\u5411\u957f\u6574\u578b\u6570\u636e\u7684\u53d8\u91cf\uff0c\u800c\u957f\u6574\u578b\u6570\u636e\u4e00\u822c\u53604\u4e2a\u5b57\u8282\u7684\u7a7a\u95f4\uff0c\u6240\u4ee5\u5b9e\u9645\u4e0a\uff0cq\u7684\u503c\u589e\u52a0\u4e864\uff0c\u5f53\u518d\u5c06q\u7684\u503c\u7ecf\u8fc7\u5f3a\u884c\u7c7b\u578b\u8f6c\u6362\u8d4b\u7ed9r\u7684\u65f6\u5019\uff0c\u5b9e\u9645\u4e0a\u8fd9\u65f6\u5019r\u662f\u6307\u5411\u4e86\u5b57\u7b26e\uff0c\u6240\u4ee5\u6700\u540e\u6253\u5370\u5b57\u7b26\u4e32\u65f6\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u662f\u201cefgh\u201d\u3002", "\u00a0", "(14)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f", "\u3002", "main()", "{int\u00a0 x=0\uff1b", "sub(&x,8,1)\uff1b", "printf(\u201c\uff05d\uff3cn\u201d,x)\uff1b", "}", "sub(int *a,int n,int k\u3001", "{if(k<=n) sub(a,n\uff0f2,2*k)\uff1b", "*a+\uff1ak\uff1a", "}", "\u301014\u30117", "\u672c\u9898\u662f\u4e00\u4e2a\u9012\u5f52\u8c03\u7528\u3002", "\u4e3b\u51fd\u6570\u4e2d\u8c03\u7528sub\u51fd\u6570\u6d41\u7a0b\u5982\u4e0b\uff1a", "sub(*x\uff0c8\uff0c1)-sub(*x,4,2)-sub(*x,2,4)-x=x+k=4", "\ufe31\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\ufe31", "x=x+k=7 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0x=x+k=6", "\u00a0", "(15)\u4ee5\u4e0b\u7a0b\u5e8f\u53ef\u4ee5\u5c06\u4ece\u952e\u76d8\u8f93\u5165\u7684\u5341\u8fdb\u5236\u6570(1ong\u578b)\u4ee5\u4e8c\u5230\u5341\u516d\u8fdb\u5236\u6570\u7684\u5f62\u5f0f\u8f93\u51fa\uff0c\u8bf7\u586b\u7a7a\u3002", "#include<stdio.h>", "main()", "{char b[16]={\u2019O\u2019\uff0c\u2019l\u2019\uff0c\u20192\u2019\uff0c\u20193\u2019\uff0c\u20194\u2019\uff0c\u20195\u2019\uff0c\u20196\u2019\uff0c\u20197\u2019\uff0c\u20198\u2019\uff0c", "\u20199\u2019\uff0c\u2019A\u2019\uff0c\u2019B\u2019\uff0cC\u2019\uff0c\u2019D\u2019\uff0c\u2019E\u2019\uff0c\u2019F\u2019}\uff1b", "int c[64]\uff0cd,i=0,base\uff1b", "long n\uff1a", "print(\u201cEnter a number\uff1a\\n\u201d)\uff1bscanlf[\"\uff051d'\uff0c&n)\uff1b", "print(\"Enter new base:\\n\")\uff1bscanf(\"\uff05ld\",&base)\uff1b", "do", "{", "C[i]=", "i++\uff1bn=n\uff0fbase\uff1b", "}while [n!=0)\uff1b", "pdntf(\u201d'Transmite new base\uff1a\uff3cn\")\uff1b", "f0\u201c--i\uff1bi>=O\uff1b--i)", "{\u00a0 d=c[I]\uff1b", "printf(\u201d\uff05c\u201d\uff0cb ", "\uff1b", "}", "}", "\u301015\u3011n\uff05base", "\u301016\u3011[d]", "\u8bc4\u6790:\u8fdb\u5236\u8f6c\u6362\u7684\u9664\u4f59\u53d6\u6574\u6cd5\u3002\u5728\u5faa\u73af\u4e2d\uff0c\u662f\u5148\u5bf9\u6570n\u6574\u9664\u4ee5base\u53d6\u4f59\u4f5c\u4e3a\u8f6c\u6362\u540e\u7684base\u8fdb\u5236\u6570\u7684\u7b2ci\u4f4d\u5b58\u653e\u5230\u6570\u7ec4\u5143\u7d20c[i\u3011\u4e2d\uff0c\u7136\u540e\u5bf9n\u6574\u9664\u4ee5base\u7684\u5546\u4f5c\u540c\u6837\u7684\u64cd\u4f5c\uff0c\u76f4\u5230\u5546\u4e3aO\u4e3a\u6b62\uff0c\u6545\u7b2c\u4e00\u7a7a\u4e3an\uff05base\u3002", "\u7531\u4e8e\u5b58\u5165\u5230\u6570\u7ec4c\u4e2d\u7684\u5404\u4e2a\u5143\u7d20\u4e3a\u5bf9\u5e94\u6570\u5236\u5728\u5341\u8fdb\u5236\u4e0a\u8868\u793a\u7684\u5404\u4f4d\u7684\u6743\u503c\uff0c\u5728\u8f93\u51fa\u65f6\u5fc5\u987b\u5c06\u5176\u8f6c\u6362\u6210\u5bf9\u5e94\u7684\u5b57\u7b26\u8f93\u51fa\uff0c\u800c\u5728\u6570\u7ec4b\u4e2d\u5bf9\u5e94\u5b58\u653e\u4e86\u5404\u4e2a\u6570\u5bf9\u5e94\u7684\u5b57\u7b26\uff0c\u6545\u7b2c\u4e8c\u7a7a\u5e94\u586b[d]\u3002", "\u00a0", "(16)\u8bbe\u6709\u5982\u4e0b\u5b8f\u5b9a\u4e49", "#define\u00a0 MYSWAP(z,x,y)\u00a0 {z=x\uff1bx=f\uff1by=z\uff1b}", "\u4ee5\u4e0b\u7a0b\u5e8f\u6bb5\u901a\u8fc7\u5b8f\u8c03\u7528\u5b9e\u73b0\u53d8\u91cfa\uff0cb\u5185\u5bb9\u7684\u4ea4\u6362\uff0c\u8bf7\u586b\u7a7a\u3002", "float a=5,b=16,c\uff1b", "MYSWAPI( ", "\uff0ca,b)\uff1b", "\u301017\u3011c", "\u8bc4\u6790:\u672c\u9898\u6700\u91cd\u8981\u7684\u662f\u7406\u89e3\u5b8fMYSWAP(z,x,y)\u7684\u4f5c\u7528\uff1a\u901a\u8fc7z\u5b9e\u73b0x\uff0cy\u7684\u5185\u5bb9\u4ea4\u6362\u3002\u6240\u4ee5MYSWAP(c,a,b)\u53ef\u4ee5\u901a\u8fc7c\u5b9e\u73b0a\uff0cb\u5185\u5bb9\u7684\u4ea4\u6362\u3002", "\u00a0", "(17)\u4ee5\u4e0b\u7a0b\u5e8f\u7528\u6765\u7edf\u8ba1\u6587\u4ef6\u5b57\u7b26\u7684\u4e2a\u6570\uff0c\u8bf7\u586b\u7a7a\u3002", "#include\u00a0 \u201cstdio.h\u201d", "main ()", "{FILE\u00a0 *fp;long num=0\uff1b", "if((fp=fopen(\u201cfname.dat\u201d,\u201dr\u201d))==NULl)", "{printf(\u201cOpen error\\n\u201d)\uff1b,exit,(O)\uff1b}", "while(", ")", "{num++\uff1b}", "Printf[\"num=\uff05ld\\n\",num]\uff1b", "Fclose(fp)\uff1b", ")", "\u301018\u3011fgetc(fp)!=EOF\u6216!feof(fp)", "\u8bc4\u6790:\u672c\u7a0b\u5e8f\u8003\u7684\u662f\u9f9fetc\u51fd\u6570\u3002", "\u6b64\u51fd\u6570\u7684\u529f\u80fd\u662f\u4ece\u6307\u9488\u53d8\u91cf\u5370\u6240\u6307\u5411\u7684\u6587\u4ef6\u4e2d\u8bfb\u5165\u4e00\u4e2a\u5b57\u7b26\uff0c\u5982\u679c\u6267\u884c\u9f9fetc\u51fd\u6570\u65f6\u9047\u5230\u6587\u4ef6\u7ed3\u675f\u7b26\uff0c\u5219\u51fd\u6570\u8fd4\u56de\u6587\u4ef6\u7ed3\u675f\u7b26EOF\u3002", "\u00a0", "(18)\u4ee5\u4e0b\u7a0b\u5e8f\u7528\u6765\u8f93\u51fa\u7ed3\u6784\u4f53\u53d8\u91cfex\u6240\u5360\u5b58\u50a8\u5355\u5143\u7684\u5b57\u8282\u6570\uff0c\u8bf7\u586b\u7a7a\u3002", "struct st", "{char *name\uff1bdouble score\uff1b}\uff1b", "main()", "{ struct st ex\uff1b", "print(\u201cex size\uff1a\uff05d\\n\u201d,sizeof(", "))\uff1b", "}", "\u301019\u3011ex", "sizeof\u51fd\u6570\u8ba1\u7b97\u5df2\u77e5\u7c7b\u578b\u6240\u5360\u7684\u5b57\u8282\u6570\u3002sizeof(ex)\u5373\u8ba1\u7b97\u7ed3\u6784\u4f53\u53d8\u91cfex\u5728\u5185\u5b58\u4e2d\u6240\u5360\u7684\u5b57\u8282\u6570\u3002", "\u00a0", "(19)\u4ee5\u4e0b\u7a0b\u5e8f\u4e2d\uff0cselect\u51fd\u6570\u7684\u529f\u80fd\u662f\uff1a\u5728N\u884cM\u5217\u7684\u4e8c\u7ef4\u6570\u7ec4\u4e2d\uff0c\u9009\u51fa\u4e00\u4e2a\u6700\u5927\u503c\u4f5c\u4e3a\u51fd\u6570\u503c\u8fd4\u56de\uff0c\u5e76\u901a\u8fc7\u5f62\u53c2\u4f20\u56de\u6b64\u6700\u5927\u503c\u6240\u5728\u7684\u884c\u4e0b\u6807\uff0c\u8bf7\u586b\u7a7a\u3002", "#define\u00a0\u00a0\u00a0 N\u00a0\u00a0\u00a0 3", "#define \u00a0\u00a0\u00a0M \u00a0\u00a0\u00a03", "select(int a[N][M]\uff0cint *n)", "{int i,j\uff0crow=O,colum=O\uff1b", "for(i=0\uff1bi<N\uff1bi++)", "for(j=0;j<M;j++)", "if(a[i][j]>a[row][colum]){row=i\uff1bcolum=j\uff1b}", "*n=row\uff1b", "retum(", "\u00a0)\uff1b", "}", "main()", "{int a[N][M]={9\uff0c11\uff0c23\uff0c6\uff0cl\uff0c15,9\uff0c17\uff0c20),max,n\uff1b", "max=select(a\uff0c&n)\uff1b", "printf(\u201dmax=\uff05d\uff0cline=\uff05d\uff3cn\u201d,max,n)\uff1b", "}", "\u301020\u3011a[row][colum]", "\u672c\u9898\u901a\u8fc7\u5224\u65ad\u8bed\u53e5\uff0c\u5c06\u8f83\u5927\u503c\u7684\u884c\u4e0b\u6807\u8d4b\u7ed9row\uff0c\u5217\u4e0b\u6807\u8d4b\u7ed9colum\uff0c\u5faa\u73af\u7ed3\u675f\u540e\uff0ca[row][colum]\u4e2d\u662f\u6570\u7ec4\u5143\u7d20\u7684\u6700\u5927\u503c\uff0c\u6240\u4ee5\u5e94\u8be5\u628a\u5b83\u7684\u884c\u4e0b\u6807\u8d4b\u7ed9*n\uff0c\u5c06a[row][colum]\u7684\u503c\u8fd4\u56de\u3002", "\n", "\u00a0\u00a0\u00a0 (\u8003\u8bd5\u65f6\u95f4120\u5206\u949f\uff0c\u6ee1\u5206100\u5206)", "\u4e00\u3001\u9009\u62e9\u9898((1)\uff5e(10)\u6bcf\u5c0f\u98982\u5206\uff0c(11)-(50)\u6bcf\u5c0f\u98981\u5206\uff0c\u517160\u5206)", "\u4e0b\u5217\u5404\u9898A)\u3001B)\u3001C)\u3001D)\u56db\u4e2a\u9009\u9879\u4e2d\uff0c\u53ea\u6709\u4e00\u4e2a\u9009\u9879\u662f\u6b63\u786e\u7684\uff0c\u8bf7\u5c06\u6b63\u786e\u9009\u9879\u6d82\u5199\u5728\u7b54\u9898\u5361\u76f8\u5e94\u4f4d\u7f6e\u4e0a\uff0c\u7b54\u5728\u8bd5\u5377\u4e0a\u4e0d\u5f97\u5206\u3002", "(1)\u7b97\u6cd5\u5206\u6790\u7684\u76ee\u7684\u662f________\u3002", "A)\u627e\u51fa\u6570\u636e\u7ed3\u6784\u7684\u5408\u7406\u6027\u00a0\u00a0\u00a0 \u00a0\u00a0B)\u627e\u51fa\u7b97\u6cd5\u4e2d\u8f93\u5165\u548c\u8f93\u51fa\u4e4b\u95f4\u7684\u5173\u7cfb", "C)\u5206\u6790\u7b97\u6cd5\u7684\u6613\u61c2\u6027\u548c\u53ef\u9760\u6027\u00a0 D)\u5206\u6790\u7b97\u6cd5\u7684\u6548\u7387\u4ee5\u6c42\u6539\u8fdb", "D", "\u7b97\u6cd5\u5206\u6790\u662f\u6307\u5bf9\u4e00\u4e2a\u7b97\u6cd5\u7684\u8fd0\u884c\u65f6\u95f4\u548c\u5360\u7528\u7a7a\u95f4\u505a\u5b9a\u91cf\u7684\u5206\u6790\uff0c\u4e00\u822c\u8ba1\u7b97\u51fa\u76f8\u5e94\u7684\u6570\u638c\u7ea7\uff0c\u5e38\u7528\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u8868\u793a\u3002\u5206\u6790\u7b97\u6cd5\u7684\u76ee\u7684\u5c31\u662f\u8981\u964d\u4f4e\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\uff0c\u63d0\u9ad8\u7b97\u6cd5\u7684\u6267\u884c\u6548\u7387\u3002", "\u00a0", "(2)n\u4e2a\u9876\u70b9\u7684\u5f3a\u8fde\u901a\u56fe\u7684\u8fb9\u6570\u81f3\u5c11\u6709________\u3002", "A)n-1\u00a0\u00a0\u00a0 B)n(n-1)\u00a0\u00a0\u00a0 C)n \u00a0\u00a0\u00a0\u00a0\u00a0D)n+l", "C", "\u5728\u6709\u5411\u56fe\u4e2d\uff0c\u82e5\u4efb\u610f\u4e24\u4e2a\u9876\u70b9\u90fd\u8fde\u901a\uff0c\u5219\u79f0\u8be5\u56fe\u662f\u5f3a\u8fde\u901a\u56fe\uff0c\u8fd9\u6837\u7684\u6709\u5411\u56fe\u7684\u5f62\u72b6\u662f\u73af\u72b6\uff0c\u56e0\u800c\u81f3\u5c11\u5e94\u6709n\u6761\u8fb9\u3002", "\u00a0", "(3)\u5df2\u77e5\u6570\u636e\u8868A\u4e2d\u6bcf\u4e2a\u5143\u7d20\u8ddd\u5176\u6700\u7ec8\u4f4d\u7f6e\u4e0d\u8fdc\uff0c\u4e3a\u8282\u7701\u65f6\u95f4\uff0c\u5e94\u91c7\u7528\u7684\u7b97\u6cd5\u662f________\u3002", "A)\u5806\u6392\u5e8f\u00a0\u00a0\u00a0 B)\u76f4\u63a5\u63d2\u5165\u6392\u5e8f\u00a0\u00a0 C)\u5feb\u901f\u6392\u5e8f\u00a0 D)\u76f4\u63a5\u9009\u62e9\u6392\u5e8f", "B", "\u5f53\u6570\u636e\u8868A\u4e2d\u6bcf\u4e2a\u5143\u7d20\u8ddd\u5176\u6700\u7ec8\u4f4d\u7f6e\u4e0d\u8fdc\uff0c\u8bf4\u660e\u6570\u636e\u8868A\u6309\u5173\u952e\u5b57\u503c\u57fa\u672c\u6709\u5e8f\uff0c\u5728\u5f85\u6392\u5e8f\u5e8f\u5217\u57fa\u672c\u6709\u5e8f\u7684\u60c5\u51b5\uff0e\u4e0b\uff0c\u91c7\u7528\u63d2\u5165\u6392\u5e8f\u6240\u7528\u65f6\u95f4\u6700\u5c11\uff0c\u6545\u7b54\u6848\u4e3a\u9009\u9879B\u3002", "\u00a0", "(4)\u7528\u94fe\u8868\u8868\u793a\u7ebf\u6027\u8868\u7684\u4f18\u70b9\u662f________\u3002", "A)\u4fbf\u4e8e\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)\u6570\u636e\u5143\u7d20\u7684\u7269\u7406\u987a\u5e8f\u4e0e\u903b\u8f91\u987a\u5e8f\u76f8\u540c", "C)\u82b1\u8d39\u7684\u5b58\u50a8\u7a7a\u95f4\u8f83\u987a\u5e8f\u5b58\u50a8\u5c11\u00a0 D)\u4fbf\u4e8e\u968f\u673a\u5b58\u53d6", "A", "\u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784\u514b\u670d\u4e86\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784\u7684\u7f3a\u70b9\uff1a\u5b83\u7684\u7ed3\u70b9\u7a7a\u95f4\u53ef\u4ee5\u52a8\u6001\u7533\u8bf7\u548c\u91ca\u653e\uff1b\u5b83\u7684\u6570\u636e\u5143\u7d20\u7684\u903b\u8f91\u6b21\u5e8f\u9760\u7ed3\u70b9\u7684\u6307\u9488\u6765\u6307\u793a\uff0c\u4e0d\u9700\u8981\u79fb\u52a8\u6570\u636e\u5143\u7d20\u3002\u6545\u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784\u4e0b\u7684\u7ebf\u6027\u8868\u4fbf\u4e8e\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u3002", "\u00a0", "(5)\u4e0b\u5217\u4e0d\u5c5e\u4e8e\u7ed3\u6784\u5316\u5206\u6790\u7684\u5e38\u7528\u5de5\u5177\u7684\u662f________\u3002", "A)\u6570\u636e\u6d41\u56fe\u00a0 \u00a0\u00a0B)\u6570\u636e\u5b57\u5178\u00a0\u00a0\u00a0 C)\u5224\u5b9a\u6811\u00a0\u00a0\u00a0 D)PAD\u56fe", "D", "\u7ed3\u6784\u5316\u5206\u6790\u7684\u5e38\u7528\u5de5\u5177\u6709\u6570\u636e\u6d41\u56fe\u3001\u6570\u636e\u5b57\u5178\u3001\u5224\u5b9a\u6811\u548c\u5224\u5b9a\u8868\u3002\u800cPAD\u56fe\u662f\u5e38\u89c1\u7684\u8fc7\u7a0b\u8bbe\u8ba1\u5de5\u5177\u4e2d\u7684\u56fe\u5f62\u8bbe\u8ba1\u3002", "\u00a0", "(6)\u8f6f\u4ef6\u5f00\u53d1\u7684\u7ed3\u6784\u5316\u751f\u547d\u5468\u671f\u65b9\u6cd5\u5c06\u8f6f\u4ef6\u751f\u547d\u5468\u671f\u5212\u5206\u6210________\u3002", "A)\u5b9a\u4e49\u3001\u5f00\u53d1\u3001\u8fd0\u884c\u7ef4\u62a4", "B)\u8bbe\u8ba1\u9636\u6bb5\u3001\u7f16\u7a0b\u9636\u6bb5\u3001\u6d4b\u8bd5\u9636\u6bb5", "C)\u603b\u4f53\u8bbe\u8ba1\u3001\u8be6\u7ec6\u8bbe\u8ba1\u3001\u7f16\u7a0b\u8c03\u8bd5", "D)\u9700\u6c42\u5206\u6790\u3001\u529f\u80fd\u5b9a\u4e49\u3001\u7cfb\u7edf\u8bbe\u8ba1", "A", "\u901a\u5e38\uff0c\u5c06\u8f6f\u4ef6\u4ea7\u54c1\u4ece\u63d0\u51fa\u3001\u5b9e\u73b0\u3001\u4f7f\u7528\u7ef4\u62a4\u5230\u505c\u6b62\u4f7f\u7528\u9000\u5f79\u7684\u8fc7\u7a0b\u79f0\u4e3a\u8f6f\u4ef6\u751f\u547d\u5468\u671f\u3002\u5b83\u53ef\u4ee5\u5206\u4e3a\u8f6f\u4ef6\u5b9a\u4e49\u3001\u8f6f\u4ef6\u5f00\u53d1\u53ca\u8f6f\u4ef6\u8fd0\u884c\u7ef4\u62a4\u4e09\u4e2a\u9636\u6bb5\u3002", "\u00a0", "(7)\u5728\u8f6f\u4ef6\u5de5\u7a0b\u4e2d\uff0c\u767d\u76d2\u6d4b\u8bd5\u6cd5\u53ef\u7528\u4e8e\u6d4b\u8bd5\u7a0b\u5e8f\u7684\u5185\u90e8\u7ed3\u6784\u3002\u6b64\u65b9\u6cd5\u5c06\u7a0b\u5e8f\u770b\u505a\u662f________\u3002", "A)\u00a0 \u5faa\u73af\u7684\u96c6\u5408\u00a0 B)\u5730\u5740\u7684\u96c6\u5408\u00a0 C)\u8def\u5f84\u7684\u96c6\u5408\u00a0 D)\u76ee\u6807\u7684\u96c6\u5408", "C", "\u8f6f\u4ef6\u7684\u767d\u76d2\u6d4b\u8bd5\u65b9\u6cd5\u662f\u628a\u6d4b\u8bd5\u5bf9\u8c61\u770b\u505a\u4e00\u4e2a\u6253\u5f00\u7684\u76d2\u5b50\uff0c\u5b83\u5141\u8bb8\u6d4b\u8bd5\u4eba\u5458\u5229\u7528\u7a0b\u5e8f\u5185\u90e8\u7684\u903b\u8f91\u7ed3\u6784\u53ca\u6709\u5173\u4fe1\u606f\uff0c\u8bbe\u8ba1\u6216\u9009\u62e9\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5bf9\u7a0b\u5e8f\u6240\u6709\u903b\u8f91\u8def\u5f84\u8fdb\u884c\u6d4b\u8bd5\u3002", "\u00a0", "(8)\u5728\u6570\u636e\u7ba1\u7406\u6280\u672f\u53d1\u5c55\u8fc7\u7a0b\u4e2d\uff0c\u6587\u4ef6\u7cfb\u7edf\u4e0e\u6570\u636e\u5e93\u7cfb\u7edf\u7684\u4e3b\u8981\u533a\u522b\u662f\u6570\u636e\u5e93\u7cfb\u7edf\u5177\u6709________\u3002", "A)\u6570\u636e\u65e0\u5197\u4f59\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0B)\u6570\u636e\u53ef\u5171\u4eab", "C)\u4e13\u95e8\u7684\u6570\u636e\u7ba1\u7406\u8f6f\u4ef6\u00a0\u00a0\u00a0 D)\u7279\u5b9a\u7684\u6570\u636e\u6a21\u578b", "D", "\u5728\u6587\u4ef6\u7cfb\u7edf\u4e2d\uff0c\u76f8\u4e92\u72ec\u7acb\u7684\u8bb0\u5f55\u5176\u5185\u90e8\u7ed3\u6784\u7684\u6700\u7b80\u5355\u5f62\u5f0f\u662f\u7b49\u957f\u540c\u683c\u5f0f\u8bb0\u5f55\u7684\u96c6\u5408\uff0c\u6613\u9020\u6210\u5b58\u50a8\u7a7a\u95f4\u5927\u91cf\u6d6a\u8d39\uff0c\u4e0d\u65b9\u4fbf\u4f7f\u7528\u3002\u800c\u5728\u6570\u636e\u5e93\u7cfb\u7edf\u4e2d\uff0c\u6570\u636e\u662f\u7ed3\u6784\u5316\u7684\uff0c\u8fd9\u79cd\u7ed3\u6784\u5316\u8981\u6c42\u5728\u63cf\u8ff0\u6570\u636e\u65f6\u4e0d\u4ec5\u63cf\u901f\u6570\u636e\u672c\u8eab\uff0c\u8fd8\u8981\u63cf\u8ff0\u6570\u636e\u95f4\u7684\u5173\u7cfb\uff0c\u8fd9\u6b63\u662f\u901a\u8fc7\u91c7\u7528\u7279\u5b9a\u7684\u6570\u636e\u6a21\u578b\u6765\u5b9e\u73b0\u7684\u3002", "\u00a0", "(9)\u5206\u5e03\u5f0f\u6570\u636e\u5e93\u7cfb\u7edf\u4e0d\u5177\u6709\u7684\u7279\u70b9\u662f________\u3002", "A)\u5206\u5e03\u5f0f\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)\u6570\u636e\u5197\u4f59", "C)\u6570\u636e\u5206\u5e03\u6027\u548c\u903b\u8f91\u6574\u4f53\u6027\u00a0\u00a0\u00a0 D)\u4f4d\u7f6e\u900f\u660e\u6027\u548c\u590d\u5236\u900f\u660e\u6027", "B", "\u5206\u5e03\u5f0f\u6570\u636e\u5e93\u7cfb\u7edf\u5177\u6709\u6570\u636e\u5206\u5e03\u6027\u3001\u903b\u8f91\u6574\u4f53\u6027\u3001\u4f4d\u7f6e\u900f\u660e\u6027\u548c\u590d\u5236\u900f\u660e\u6027\u7684\u7279\u70b9\uff0c\u5176\u6570\u636e\u4e5f\u662f\u5206\u5e03\u7684\uff1b\u4f46\u5206\u5e03\u5f0f\u6570\u636e\u5e93\u7cfb\u7edf\u4e2d\u6570\u636e\u7ecf\u5e38\u91cd\u590d\u5b58\u50a8\uff0c\u6570\u636e\u4e5f\u5e76\u975e\u5fc5\u987b\u91cd\u590d\u5b58\u50a8\uff0c\u4e3b\u8981\u89c6\u6570\u636e\u7684\u5206\u914d\u6a21\u5f0f\u800c\u5b9a\u3002\u82e5\u5206\u914d\u6a21\u5f0f\u662f\u4e00\u5bf9\u591a\uff0c\u5373\u4e00\u4e2a\u7247\u6bb5\u5206\u914d\u5230\u591a\u4e2a\u573a\u5730\u5b58\u653e\uff0c\u5219\u662f\u5197\u4f59\u7684\u6570\u636e\u5e93\uff0c\u5426\u5219\u662f\u975e\u5197\u4f59\u7684\u6570\u636e\u5e93\u3002", "\u00a0", "(10)\u4e0b\u5217\u8bf4\u6cd5\u4e2d\uff0c\u4e0d\u5c5e\u4e8e\u6570\u636e\u6a21\u578b\u6240\u63cf\u8ff0\u7684\u5185\u5bb9\u7684\u662f________\u3002", "A)\u6570\u636e\u7ed3\u6784\u00a0 B)\u6570\u636e\u64cd\u4f5c\u00a0\u00a0\u00a0 C)\u6570\u636e\u67e5\u8be2\u00a0\u00a0\u00a0 D)\u6570\u636e\u7ea6\u675f", "C", "\u6570\u636e\u6a21\u578b\u6240\u63cf\u8ff0\u7684\u5185\u5bb9\u67093\u4e2a\u90e8\u5206\uff0c\u5b83\u4eec\u662f\u6570\u636e\u7ed3\u6784\u3001\u6570\u636e\u64cd\u4f5c\u548c\u6570\u636e\u7ea6\u675f\u3002\u6570\u636e\u64cd\u4f5c\u4e3b\u8981\u662f\u63cf\u8ff0\u5728\u76f8\u5e94\u6570\u636e\u7ed3\u6784\u4e0a\u7684\u64cd\u4f5c\u7c7b\u578b\u4e0e\u64cd\u4f5c\u65b9\u5f0f\uff1b\u6570\u636e\u6a21\u578b\u4e2d\u7684\u6570\u636e\u7ea6\u675f\u4e3b\u8981\u63cf\u8ff0\u6570\u636e\u7ed3\u6784\u5185\u6570\u636e\u95f4\u7684\u8bed\u6cd5\u3001\u8bed\u4e49\u8054\u7cfb\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u5236\u7ea6\u4e0e\u4f9d\u5b58\u5173\u7cfb\uff0c\u4ee5\u53ca\u6570\u636e\u52a8\u6001\u53d8\u5316\u7684\u89c4\u5219\uff0c\u4ee5\u4fdd\u8bc1\u6570\u636e\u7684\u6b63\u786e\u3001\u6709\u6548\u4e0e\u80e1\u5bb9\u3002", "\u00a0", "(11)\u5728\u7ed3\u6784\u5316\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\uff0c\u9650\u5236\u4f7f\u7528goto\u8bed\u53e5\u7684\u539f\u56e0\u662f________\u3002", "A)\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6267\u884c\u6548\u7387", "B)\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6e05\u6670\u6027\u548c\u53ef\u9760\u6027", "C)\u4fbf\u4e8e\u7a0b\u5e8f\u7684\u5408\u6210", "D)\u8be5\u8bed\u53e5\u5bf9\u4efb\u4f55\u7ed3\u6784\u7684\u7a0b\u5e8f\u90fd\u4e0d\u9002\u7528", "B", "\u5728c\u8bed\u8a00\u4e2d\uff0c\u9650\u5236\u4f7f\u7528goto\u8bed\u53e5\uff0c\u5176\u76ee\u7684\u662f\u4e3a\u4e86\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6e05\u6670\u6027\u4e0e\u53ef\u9760\u6027\uff0c\u4e00\u822c\u6765\u8bf4\uff0c\u9664\u4e86\u4ece\u591a\u91cd\u5faa\u73af\u4e2d\u8df3\u51fa\uff0c\u4e00\u822c\u4e0d\u4f7f\u7528goto\u8bed\u53e5\u3002", "\u00a0", "(12)\u4ee5\u4e0b\u9009\u9879\u4e2d\u5408\u6cd5\u7684\u5b9e\u578b\u5e38\u6570\u662f________\u3002", "A)5E2\uff0e0\u00a0\u00a0\u00a0 B)E-3\u00a0\u00a0\u00a0 C)\uff0e2E0\u00a0\u00a0\u00a0 D)1\uff0e3E", "C", "\u4ee5\u6307\u6570\u5f62\u5f0f\u8868\u793a\u5b9e\u6570\u65f6\uff0c\u5b57\u6bcde(\u6216E)\u4e4b\u524d\u5fc5\u987b\u6709\u6570\u5b57\uff0c\u4e14e\u540e\u9762\u6307\u6570\u5fc5\u987b\u4e3a\u6574\u6570\u3002", "\u00a0", "(13)\u4e0b\u5217\u53d9\u8ff0\u4e2d\uff0c\u6b63\u786e\u7684\u662f________\u3002", "A)C\u8bed\u8a00\u4e2d\u65e2\u6709\u903b\u8f91\u7c7b\u578b\u4e5f\u6709\u96c6\u5408\u7c7b\u578b", "B)c\u8bed\u8a00\u4e2d\u6ca1\u6709\u903b\u8f91\u7c7b\u578b\u4f46\u6709\u96c6\u5408\u7c7b\u578b", "B)C\u8bed\u8a00\u4e2d\u6709\u903b\u8f91\u7c7b\u578b\u4f46\u6ca1\u6709\u96c6\u5408\u7c7b\u578b", "B)C\u8bed\u8a00\u4e2d\u6ca1\u6709\u903b\u8f91\u7c7b\u578b\u4e5f\u6ca1\u6709\u96c6\u5408\u7c7b\u578b", "B", "\u5728c\u8bed\u8a00\u4e2d\u53ea\u63d0\u4f9b\u4e86\u6574\u578b\u3001\u6d6e\u70b9\u578b\u3001\u5b57\u7b26\u578b\u8fd9\u51e0\u79cd\u57fa\u672c\u7c7b\u578b\uff0cc\u8bed\u8a00\u6ca1\u6709\u63d0\u4f9b\u903b\u8f91\u7c7b\u578b\uff0c\u5728c\u4e2d\u4e00\u822c\u7528\u6574\u578b\u6765\u8868\u793a\u903b\u8f91\u7c7b\u578b\u3002\u5728\u81ea\u5b9a\u4e49\u7c7b\u578b\u4e2d\uff0cc\u63d0\u4f9b\u4e86struct\uff0cenum\u53caunion\u7c7b\u578b\uff0c\u4f46\u6ca1\u6709\u63d0\u4f9b\u96c6\u5408\u7c7b\u578b\uff0c\u5728pascal\u4e2d\u63d0\u4f9b\u4e86\u96c6\u5408\u7c7b\u578bset\u3002", "\u00a0", "(14)\u5df2\u77e5\u5927\u5199\u5b57\u6bcdA\u7684ASCII\u7801\u662f65\uff0c\u5c0f\u5199\u5b57\u6bcda\u7684ASCII\u7801\u662f97\uff0c\u5219\u7528\u516b\u8fdb\u5236\u8868\u793a\u7684\u5b57\u7b26\u5e38\u91cf\u2019\uff3c10l\u2019\u662f________\u3002", "A)\u5b57\u7b26A\u00a0\u00a0\u00a0 B)\u5b57\u7b26a\u00a0\u00a0\u00a0 C)\u5b57\u7b26e\u00a0\u00a0\u00a0 D)\u975e\u6cd5\u7684\u5e38\u91cf", "A", "\u516b\u8fdb\u5236101\u8f6c\u6362\u4e3a\u5341\u8fdb\u5236\u5373\u4e3a65\uff0c\u800c\u5b57\u6bcdA\u7684ASCII\u7801\u662f65\uff0c\u6240\u4ee5\u7528\u516b\u8fdb\u5236\u8868\u793a\u7684\u5b57\u7b26\u5e38\u91cf\u2018\uff3c101\u2019\u662fA\u3002", "\u00a0", "(15)\u8bbea\u548cb\u5747\u4e3adouble\u578b\u5e38\u91cf\uff0c\u4e14a=5\uff0e5\u3001b=2\uff0e5\uff0c\u5219\u8868\u8fbe\u5f0f(int)a+b\uff0fb\u7684\u503c\u662f________\u3002", "A)6\uff0e500000\u00a0 B)6\u00a0\u00a0\u00a0 C)5\uff0e500000\u00a0\u00a0\u00a0 D)6\uff0e000000", "D", "\u5404\u7c7b\u6570\u503c\u578b\u6570\u636e\u5728\u8fdb\u884c\u6df7\u5408\u8fd0\u7b97\u65f6\uff0c\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\u8981\u5148\u8f6c\u6362\u6210\u540c\u4e00\u7c7b\u578b\uff0c\u7136\u540e\u8fdb\u884c\u8fd0\u7b97\u3002\u8f6c\u6362\u7684\u89c4\u5219\u4e3a\uff1a\u603b\u662f\u8f6c\u6362\u4e3a\u7cbe\u5ea6\u66f4\u5927\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5b57\u7b26\u6570\u636e\u8f6c\u6362\u4e3a\u6574\u6570\uff0cshort\u578b\u8f6c\u4e3aint\u578b\uff0cfloat\u578b\u6570\u636e\u5728\u8fd0\u7b97\u65f6\u8f6c\u6362\u6210\u53cc\u7cbe\u5ea6\u578b\uff0c\u4ee5\u63d0\u9ad8\u8fd0\u7b97\u7cbe\u5ea6\u3002", "\u00a0", "(16)\u4ee5\u4e0b\u56db\u4e2a\u9009\u9879\u4e2d\u4e0d\u80fd\u770b\u4f5c\u4e00\u6761\u8bed\u53e5\u7684\u662f________\u3002", "A){\uff1b}\u00a0\u00a0\u00a0 B)a=0\uff0cb\uff1a0\uff0cc=0\uff1b\u00a0 C)if(a>0)\uff1b\u00a0\u00a0\u00a0 D)if(b==0)m=l\uff1bn=2\uff1b", "D", "\u9009\u9879A\u4e3a\u7a7a\u8bed\u53e5\uff0c\u9009\u9879B\u662f\u4e00\u4e2a\u7531\u9017\u53f7\u8fd0\u7b97\u7b26\u8868\u8fbe\u5f0f\u5f62\u6210\u7684\u8bed\u53e5\uff0c\u9009\u9879c\u4e3a\u4e00\u4e2a\u6761\u4ef6\u8bed\u53e5\uff0c\u9009\u9879D\u6709\u4e24\u4e2a\u5206\u53f7\uff0c\u662f\u7531\u4e24\u4e2a\u8bed\u53e5\u6784\u6210\uff0c\u4e0d\u80fd\u770b\u6210\u4e00\u6761\u8bed\u53e5\u3002", "\u00a0", "(17)\u5df2\u77e5i\u3001j\u3001k\u4e3aint\u578b\u53d8\u91cf\uff0c\u82e5\u4ece\u952e\u76d8\u8f93\u5165\uff1a1\uff0c2\uff0c3\u2199\uff0c\u4f7fi\u7684\u503c\u4e3al\u3001j\u7684\u503c\u4e3a2\u3001k\u7684\u503c\u4e3a3\uff0c\u4ee5\u4e0b\u9009\u9879\u4e2d\u6b63\u786e\u7684\u8f93\u5165\u8bed\u53e5\u662f________\u3002", "A)scanf(\u201d\uff052d\uff052d\uff052 dtt\uff0c&i\uff0c\uff06j\uff0c&k)\uff1b", "B)scanf(\u201c\uff05d\u00a0 \uff05d\u00a0 \uff05d\u201d\uff0c&i\uff0c\uff06j\uff0c\uff06k)\uff1b", "C)scanf(\u201d\uff05d\uff0c\uff05d\uff0c\uff05dfI\uff0c\uff06i\uff0c\uff06j\uff0c\uff06k)\uff1b", "D)scanf(\u201di=\uff05d\uff0cj=\uff05d\uff0ck=\uff05d-t\uff0c&i\uff0c&j\uff0c&k)\uff1b", "C", "\u5982\u679c\u5728\u201c\u683c\u5f0f\u63a7\u5236\u201d\u5b57\u7b26\u4e32\u4e2d\u9664\u4e86\u683c\u5f0f\u8bf4\u660e\u4ee5\u5916\u8fd8\u6709\u5176\u5b83\u5b57\u7b26\uff0c\u5219\u5728\u8f93\u5165\u6570\u636e\u65f6\u5e94\u8f93\u5165\u4e0e\u8fd9\u4e9b\u5b57\u7b26\u76f8\u540c\u7684\u5b57\u7b26\u3002", "\u00a0", "(18)\u5173\u4e8egoto\u8bed\u53e5\u7684\u4f7f\u7528\uff0c\u4e0b\u9762\u6b63\u786e\u7684\u662f________\u3002", "A)goto 2\uff1b\u00a0\u00a0\u00a0 \u00a0\u00a0B)goto g\uff1b\u00a0\u00a0\u00a0 \u00a0C)goto g\uff1a\uff1b\u00a0\u00a0\u00a0 \u00a0\u00a0D)goto 2\uff1b", "2\uff1aexit(0)\uff1b\u00a0\u00a0\u00a0 g\uff1aexit(O)\uff1b\u00a0\u00a0\u00a0 g\uff1aexit(O)\uff1b\u00a0\u00a0\u00a0 2 exit(0)\uff1b", "B", "\u5728c\u4e2d\uff0cgoto\u8bed\u53e5\u540e\u9762\u7684\u6807\u53f7\u7684\u547d\u540d\u89c4\u5219\u4e0ec\u8bed\u8a00\u4e2d\u6807\u8bc6\u7b26\u7684\u547d\u540d\u89c4\u5219\u76f8\u540c\uff0c\u5728goto\u8bed\u53e5\u540e\u9762\u7684\u6807\u53f7\u540e\u4e0d\u8981\u52a0\u201c\uff1a\u201d\u53f7\uff0c\u5728\u67d0\u4e00\u884c\u4e0a\u6dfb\u52a0\u6807\u53f7\u65f6\uff0c\u5728\u6807\u53f7\u7684\u540e\u9762\u8981\u6dfb\u52a0\u201c\uff1a\u201d\u53f7\u3002", "\u00a0", "(19)\u82e5\u6709\u4ee5\u4e0b\u7a0b\u5e8f\uff1a", "main()", "{int k=2\uff0ci=2\uff0cm\uff1b", "m=(k+=I*=k)\uff1b", "printf(\u201d\uff05d\uff0c\uff05d\u3001n\u201d\uff0cm\uff0ci)\uff1b", "}", "\u6267\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f__________\u3002", "A)8\uff0c6\u00a0\u00a0\u00a0 B)8\uff0c3\u00a0\u00a0\u00a0 C)6\uff0c4\u00a0\u00a0\u00a0 D) 7\uff0c4", "C", "\u5728\u8d4b\u503c\u7b26\u201c=\u201d\u4e4b\u524d\u52a0\u4e0a\u5176\u5b83\u8fd0\u7b97\u7b26\uff0c\u53ef\u4ee5\u6784\u6210\u590d\u5408\u7684\u8fd0\u7b97\u7b26\u3002\u6b64\u8fd0\u7b97\u4e3a\u53f3\u7ed3\u5408\u6027\uff0c\u5373\u4ece\u53f3\u5f80\u5de6\u8ba1\u7b97\u3002I*=k\u5373i=i*k=2*2=4\uff0ck=k+i=2+4=6\uff0c\u7136\u540e\u5c06k\u7684\u503c\u8d4b\u7ed9m\u3002", "\u00a0", "(20)\u4ee5\u4e0b\u51fd\u6570\u7684\u529f\u80fd\u662f\uff1a\u901a\u8fc7\u952e\u76d8\u8f93\u5165\u6570\u636e\uff0c\u4e3a\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u5143\u7d20\u8d4b\u503c\u3002", "#define N 10", "void arrin(int x[N])", "{\u00a0 int i=0\uff1b", "while(i<N)scanf(\u201d\uff05d\u201d\uff0c_________)\uff1b", "}", "\u5728\u4e0b\u5212\u7ebf\u5904\u5e94\u586b\u5165\u7684\u662f_________\u3002", "A)x+i\u00a0\u00a0\u00a0 B)&x[i+l]\u00a0\u00a0\u00a0 C)x+(i++)\u00a0\u00a0\u00a0 D)&x[++I]", "C", "\u5728c\u4e2d\uff0c\u5bf9\u4e8e\u4e00\u7ef4\u6570\u7ec4\u800c\u8a00\uff0c\u6570\u7ec4\u53d8\u91cf\u8868\u793a\u6570\u7ec4\u4e2d\u9996\u5143\u7d20\u7684\u7684\u5730\u5740\u3002\u5f53\u7528scanf\u51fd\u6570\u5411\u6570\u7ec4x\u7684\u7b2ci\u4e2a\u5143\u7d20\u4e2d\u8f93\u5165\u6574\u578b\u6570\u636e\u65f6\uff0c\u53ea\u8981\u6267\u884cscanf(\u201c\uff05d\u201dx+i)\uff1a\u7531\u4e8e\u8981\u5faa\u73af\u8f93\u5165\u6570\u7ec4\u4e2d\u548c\u5404\u4e2a\u5143\u7d20\uff0c\u5fc5\u987b\u8981\u4f7f\u5176\u5730\u5740\u503c\u4e0d\u65ad\u81ea\u589e\u3002\u6545\u672c\u9898\u7b54\u6848\u4e3ac\u3002", "\u00a0", "(21)\u5df2\u6709\u5b9a\u4e49\uff1aint x=3\uff0cy=4,z=5\uff1b\uff0c\u5219\u8868\u8fbe\u5f0f!(x+y)+z-l\uff06&y+z\uff0f2\u7684\u503c\u662f_________\u3002", "A)6\u00a0\u00a0\u00a0 B)0\u00a0\u00a0\u00a0 C)2\u00a0\u00a0\u00a0 D)1", "D", "\u5728\u672c\u9898\u4e2d\uff0c\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u5206\u522b\u4e3a\uff1a!>/>+,->&&\u5373\uff1a!(3+4)+5-1&&4+5\uff0f2=0+5-1&&4+2=4&&6=l\u3002", "\u00a0", "(22)\u4ee5\u4e0b\u9009\u9879\u4e2d\uff0c\u4e0ek=11++\u5b8c\u5168\u7b49\u4ef7\u7684\u8868\u8fbe\u5f0f\u662f__________\u3002", "A)k=n\uff0cn=n+1\u00a0\u00a0\u00a0 B)n=n+1\uff0cl(=n\u00a0\u00a0\u00a0 C)l(=\u4ec0n\u00a0\u00a0\u00a0 D)k+\u2013n+1", "A", "n++\u662f\u81ea\u589e\u8fd0\u7b97\uff0c\u662f\u5148\u4f7f\u7528\uff0c\u7136\u540e\u518d\u4f7fn\u52a01\uff0c\u5206\u5f00\u6765\u5199\u5373\u4e3a\uff1ak=n,n=n+l\u3002", "\u00a0", "(23)\u4ee5\u4e0b\u7a0b\u5e8f\u8fd0\u884c\u540e\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a__________\u3002", "main()", "{", "int y=18,i=0J\uff0ca[8]\uff1b", "do", "{a[I]=y\uff052\uff1bi++\uff1by\u3002y\uff0f2\uff1b", "}while(y>\u30021)\uff1b", "for(j=i\u4e001 0>=00\u4e00)", "printf(\u201c\uff05d\u201da[j])\uff1b", "printf(\u201d\uff3cn\u201d)\uff1b", "}", "A)10000\u00a0\u00a0\u00a0 B)10010\u00a0\u00a0\u00a0 C)00l10\u00a0\u00a0\u00a0 D)10100", "B", "\u5206\u6790\u7a0b\u5e8f\u4e0d\u96be\u5f97\u77e5\u8be5\u7a0b\u5e8f\u7684\u529f\u80fd\u5b9e\u9645\u4e0a\u5c31\u662f\u91c7\u7528\u9664\u4f59\u53d6\u6574\u6cd5\u5b9e\u73b0\u5c0610\u8fdb\u5236\u6570\u636e\u8f6c\u6362\u6210\u4e8c\u8fdb\u5236\u6570\u3002\u5bf9\u4e8e10\u8fdb\u5236\u657018\uff0c\u5176\u8f6c\u5316\u4e3a\u4e8c\u8fdb\u5236\u6570\u540e\uff0c\u7ed3\u679c\u4e3a10010\u3002", "\u00a0", "(24)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u529f\u80fd\u662f\uff1a\u6309\u987a\u5e8f\u8bfb\u516510\u540d\u5b66\u751f4\u95e8\u8bfe\u7a0b\u7684\u6210\u7ee9\uff0c\u8ba1\u7b97\u51fa\u6bcf\u4f4d\u5b66\u751f\u7684\u5e73\u5747\u5206\u5e76\u8f93\u51fa\uff0c\u7a0b\u5e8f\u5982\u4e0b\uff1a", "main()", "{int n\uff0ck\uff1b", "float score,sum,ave\uff1b", "sum=0\uff0e0\uff1b", "for(n=1\uff1bn<=10\uff1bn++)", "{for(k=l\uff1bk<=4\uff1bk++)", "{seal3f(\u201d\uff05f\u201d,&score)\uff1b", "sum+=score\uff1b", "}", "ave=sum\uff0f4\uff0e0\uff1b", "printf(\u201dNO\uff05d\uff1a\uff05f\\n\u201d,n,ave)\uff1b", "}", "}", "\u4e0a\u8ff0\u7a0b\u5e8f\u8fd0\u884c\u540e\u7ed3\u679c\u4e0d\u6b63\u786e\uff0c\u8c03\u8bd5\u4e2d\u53d1\u73b0\u6709\u4e00\u6761\u8bed\u53e5\u51fa\u73b0\u5728\u7a0b\u5e8f\u7684\u4f4d\u7f6e\u4e0d\u6b63\u786e\u3002\u8fd9\u6761\u00a0\u00a0\u00a0 \u8bed\u53e5\u662f________\u3002", "A)sum=O\uff0eO\uff1b\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0B)sum+=score\uff1b", "C)ave=sum\uff0f4\uff0e0\uff1b\u00a0\u00a0\u00a0 D)printf(\u201dNO\uff05d\uff1a\uff05fua\u201d,n,ave)\uff1b", "A", "\u9898\u76ee\u4e2d\u8981\u6c42\u6bcf\u4f4d\u5b66\u751f\u7684\u5e73\u5747\u5206\u6570\uff0c\u9996\u5148\u8981\u6c42\u6bcf\u4f4d\u5b66\u751f\u7684\u603b\u5206\uff0c\u4e5f\u5c31\u662f\u7a0b\u5e8f\u4e2d\u7684Sum\uff0c\u6240\u4ee5sum\u5e94\u5728\u7b2c\u4e00\u4e2afor\u5faa\u73af\u4f53\u5185\u8d4b\u521d\u503c\uff0c\u5982\u679c\u5728\u5faa\u73af\u4f53\u5916\u8d4b\u521d\u503c\u5c31\u4f1a\u5f97\u5230\u6240\u6709\u5b66\u751f\u7684\u5206\u6570\u603b\u548c\uff0c\u4e0d\u5408\u9898\u610f\u3002", "\u00a0", "(25)\u4e0b\u9762\u7a0b\u5e8f\u6267\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f__________\u3002", "main()", "{", "charx=Oxddff\uff1b", "printf(\u201d\uff05d\uff3cn\u201d\uff0cx)\uff1b", "}", "A)-35\u00a0\u00a0\u00a0 B)-1\u00a0\u00a0\u00a0 C)255\u00a0\u00a0\u00a0 D)-8705", "B", "\u7531\u4e8e\u7a0b\u5e8f\u4e2d\u5bf9\u5b57\u7b26\u53d8\u91cfx\u8d4b\u503c\u4e3a0xddff,\u800c\u5b57\u7b26\u578b\u53d8\u91cf\u53ea\u5360\u4e00\u4e2a\u5b57\u8282\uff0c\u6545\u5b9e\u9645\u5b58\u5165c\u5355\u5143\u7684\u4e3a\u8be516\u8fdb\u5236\u7684\u4f4e\u5b57\u8282\u90e8\u5206\uff0c\u5373ff\u3002\u5bf9\u8be5\u6570\u6309\u6574\u578b\u683c\u5f0f\u8f93\u51fa\uff0c\u5176\u7ed3\u679c\u4e3a-1\u3002", "\u00a0", "(26)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "main()", "{ int a=15,b=21,m=O\uff1b", "switch(a\uff053)", "{ case O\uff1am++\uff1bbreak\uff1b", "case l\uff1am++\uff1a", "switch(b\uff052)", "{ default\uff1am++\uff1b", "case O\uff1am++\uff1bbreak\uff1b", "}", "}", "printf(\u201d\uff05d\uff3cn\u201d\uff0cm)\uff1b", "}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "A)l\u00a0\u00a0\u00a0 B)2\u00a0\u00a0 \u00a0C)3\u00a0\u00a0\u00a0 D)4", "A", "\u56e0\u4e3aa\uff053\u662f\u4e2a\u5e38\u6570\uff0c\u6240\u4ee5\u53ea\u6267\u884c\u4e00\u6b21\u5c31\u8df3\u51faswitch\u7ed3\u6784\u3002\u5373\u53ea\u6267\u884cm++\uff0c\u6b64\u65f6m\u4e3a1\u3002", "\u00a0", "(27)\u82e5\u6709\u8bf4\u660e\uff1aint n=2\uff0c*p=&n\uff0c*q=p\uff1b\uff0c\u5219\u4ee5\u4e0b\u975e\u6cd5\u7684\u8d4b\u503c\u8bed\u53e5\u662f_________\u3002", "A)p=q\uff1b\u00a0\u00a0\u00a0 B)*p=*q\uff1b\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)n=*q\uff1b\u00a0\u00a0\u00a0 D)p*n\uff1b", "D", "\u6307\u9488\u53d8\u91cf\u4e0d\u540c\u4e8e\u6574\u578b\u53d8\u91cf\u548c\u5176\u5b83\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u5b83\u662f\u7528\u6765\u5b58\u653e\u5730\u5740(\u6307\u9488)\u7684\uff0c\u4e0d\u80fd\u5c06\u4e00\u4e2a\u6574\u578b\u91cf(\u6216\u4efb\u4f55\u5176\u5b83\u975e\u5730\u5740\u7c7b\u578b\u7684\u6570\u636e)\u8d4b\u7ed9\u4e00\u4e2a\u6307\u9488\u53d8\u91cf\uff0c\u8fd9\u6837\u7684\u8d4b\u503c\u662f\u4e0d\u5408\u6cd5\u7684\u3002", "\u00a0", "(28)\u5df2\u5b9a\u4e49\u4ee5\u4e0b\u51fd\u6570\uff1a", "fun(char*p2,char*p1)", "{while((*p2=*p1)!=\u2019\uff3c0\u2019){pl++\uff1bp2++\uff1b}}", "\u51fd\u6570\u7684\u529f\u80fd\u662f__________\u3002", "A)\u5c06p1\u6240\u6307\u5b57\u7b26\u4e32\u590d\u5236\u5230p2\u6240\u6307\u5185\u5b58\u7a7a\u95f4", "B)\u5c06pl\u6240\u6307\u5b57\u7b26\u4e32\u7684\u5730\u5740\u8d4b\u7ed9\u6307\u9488p2", "C)\u5bf9p1\u548cp2\u4e24\u4e2a\u6307\u9488\u6240\u6307\u5b57\u7b26\u4e32\u8fdb\u884c\u6bd4\u8f83", "D)\u68c0\u67e5p1\u548cp2\u4e24\u4e2a\u6307\u9488\u6240\u6307\u5b57\u7b26\u4e32\u4e2d\u662f\u5426\u6709\u2019\uff3cO\u2019", "A", "\u7531\u4e8e\u5728while\u5faa\u73af\u7684\u6761\u4ef6\u4e2d\u6267\u884c\u4e86*p2=*pl\u8fd0\u7b97\uff0c\u5176\u4f5c\u7528\u662f\u5c06*pl\u4e2d\u7684\u5185\u5bb9\u590d\u5236\u5230*p2\u4e2d\uff0c\u800c(*p2=*p1)!=\u2018\uff3c0\u2019\u7684\u4f5c\u7528\u662f\u5224\u65ad\u5f53\u524d\u5b57\u7b26\u662f\u5426\u4e3a\u5b57\u7b26\u4e32\u7ed3\u675f\u5b57\u7b26\u2018\uff3cO\u2019\u3002\u5728\u5faa\u73af\u4f53\u4e2dp1++\uff0cp2++\u7684\u76ee\u7684\u662f\u79fb\u52a8\u5b57", "\u00a0", "(29)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "void fun(char*c,int d)", "{*c=*c+1\uff1bd=d+1\uff1b", "printf(\u201d\uff05c\uff0c\uff05c\uff0c\u201d\uff0c*c\uff0cd)\uff1b", "}", "main()", "{char a\uff1a\u3002A\u2019\uff0cb\u3002\u2019a\u2019\uff1b", "fun(&b\uff0ca)\uff1bprintf(\u201d\uff05c\uff0c\uff05c\uff3cn\u201d\uff0ca\uff0cb)\uff1b", ")", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "A)B,a,B,a\u00a0\u00a0\u00a0 B)a,B,a,B\u00a0\u00a0\u00a0 C)A\uff0cb\uff0cA,b\u00a0\u00a0\u00a0 D)b\uff0cB\uff0cA\uff0cb", "D", "\u5c06a\uff0cb\u4ee3\u5165\u51fd\u6570\u5f97+&b=\u3002&b+1=a+l=b\uff0c\u6240\u4ee5\u6253\u5370\u51fa\u7b2c\u4e00\u4e2a\u5b57\u6bcdb\uff1b", "a=a+l=A+l=B\uff0c\u6253\u5370\u51fa\u7b2c\u4e8c\u4e2a\u5b57\u7b26B\uff1b", "a=\u2018A\u2019\uff0c\u8f93\u51fa\u5b57\u6bcdA\uff1b", "b\u7531\u4e8e\u662f\u6309\u5730\u5740\u4f20\u5230\u51fd\u6570\u800c\u88ab\u4fee\u6539\uff0c\u4e3a\u2018b\u2019\uff0c\u8f93\u51fa\u5b57\u6bcdb", "\u00a0", "(30)\u4ee5\u4e0b\u7a0b\u5e8f\u4e2d\u51fd\u6570sort\u7684\u529f\u80fd\u662f\u5bf9a\u6240\u6307\u6570\u7ec4\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u7531\u5927\u5230\u5c0f\u7684\u6392\u5e8f\u3002", "void sort(int a[]\uff0cim n)", "{intiJ\uff0ct\uff1b", "for(i=O\uff1bi<n-1\uff1bi++)", "for=i+1 0<n0++)", "if(a[i]<aD))\u00a0 {t=-a[I]\uff1ba[I=a[j]\uff1ba[j]=t\uff1b}", "}", "main()", "{int aa[10]\uff1a{1,2,3,4,5,6,7,8,9,10}\uff0ci\uff1b", "sort(&aa[3]\uff0c5)\uff1b", "for(i=0\uff1bi<lO\uff1bi++)primf(\u201d\uff05d\uff0c\u201d\uff0caa[I])\uff1b", "printf(\u201d\uff3cn\u201d)\uff1b", ")", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "A)l\uff0c2\uff0c3\uff0c4\uff0c5\uff0c6\uff0c7\uff0c8\uff0c9\uff0c10\uff0c\u00a0\u00a0\u00a0 B)10,9,8,7,6,5,4,3\uff0c2,1\uff0c", "C)l\uff0c2\uff0c3\uff0c8\uff0c7\uff0c6\uff0c5\uff0c4\uff0c9\uff0c10\uff0c\u00a0\u00a0\u00a0 D)l,2,10,9,8,7,6,5,4,3\uff0c", "C", "\u672c\u9898\u5e76\u4e0d\u662f\u5bf9\u6570\u7ec4\u7684\u6240\u6709\u5143\u7d20\u8fdb\u884c\u6392\u5e8f\uff0c\u800c\u662f\u5bf9\u4ecea[3]\u5f00\u59cb\u5f80\u540e\u76844\u4e2a\u5143\u7d20\u8fdb\u884c\u6392\u5e8f\u3002", "\u00a0", "(31)\u5bf9\u4e8e\u57fa\u7c7b\u578b\u76f8\u540c\u7684\u4e24\u4e2a\u6307\u9488\u53d8\u91cf\uff0c\u4e0d\u80fd\u8fdb\u884c\u7684\u8fd0\u7b97\u662f________\u3002", "A)<\u00a0\u00a0\u00a0 B)=\u00a0\u00a0\u00a0 C)+\u00a0\u00a0\u00a0 D)", "C", "\u5bf9\u4e8e\u6307\u9488\u53d8\u91cf\uff0c\u9664\u4e86\u5e38\u89c4\u7684*\u3001&\u3001=\u8fd0\u7b97\u5916\uff0c\u8fd8\u53ef\u4ee5\u5bf9\u5176\u6bd4\u8f83\u5730\u5740\u7684\u5927\u5c0f\uff0c\u8ba1\u7b97\u4e24\u6307\u9488\u53d8\u91cf\u7684\u5dee\u503c\uff0c\u4f46\u5bf9\u4e8e\u5730\u5740\u6267\u884c+\u3001*\u3001\uff0f\u3001\uff05\u7b49\u7b97\u672f\u8fd0\u7b97\u90fd\u662f\u65e0\u610f\u4e49\u7684\u3002", "\u00a0", "(32)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "main()", "{char a[]={\u2018a\u2019\uff0c\u2018b\u2019\uff0c\u2018c\u2019\uff0c\u2018d\u2019,\u2018e\u2019\uff0c\u2018f\u2019\uff0c\u2018g\u2019,\u2018h\u2019\uff0c\u2018\uff3cO\u2019}\uff1bint I,J\uff1b", "i=sizeof(a)\uff1b\u00a0 j=strlen(a)\uff1b", "printf(\u201d\uff05d\uff0c\uff05d\uff3cn\u201d\uff0cI,J)\uff1b", "}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "A)9,9\u00a0\u00a0\u00a0 B)8,9\u00a0\u00a0\u00a0 C)1,8\u00a0\u00a0\u00a0 D)9,8", "D", "sizeof()\u51fd\u6570\u662f\u8ba1\u7b97\u5b57\u7b26\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u56e0\u4e3a\u2018\uff3c0\u2019\u4e5f\u662f\u4e00\u4e2a\u5b57\u7b26\uff0c\u8981\u8ba1\u7b97\u5728\u5185\u3002strlen()\u662f\u8ba1\u7b97\u5b57\u7b26\u4e32\u957f\u5ea6\u7684\u51fd\u6570\uff0c\u9047\u5230\u2018\uff3c0\u2019\u5373\u8ba4\u4e3a\u662f\u5b57\u7b26\u4e32\u7ed3\u675f\uff0c\u4e0d\u628a\u7a7a\u5b57\u7b26\u8ba1\u5165\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002", "\u00a0", "(33)\u4ee5\u4e0b\u4e0d\u80fd\u6b63\u786e\u5b9a\u4e49\u4e8c\u7ef4\u6570\u7ec4\u7684\u9009\u9879\u662f_________\u3002", "A)int a[2][2]={{1}\uff0c{2}}\u00a0\u00a0\u00a0 B)int a[][2]={l\uff0c2\uff0c3\uff0c4}", "C)int a[2][2]={{l}\uff0c2,3}\u00a0\u00a0\u00a0 D)int a[2][]={{1\uff0c2}\uff0c{3\uff0c4}}", "D", "\u5728\u4e8c\u7ef4\u6570\u7ec4\u8fdb\u884c\u521d\u59cb\u5316\u65f6\uff0c\u53ef\u4ee5\u7701\u7565\u6570\u7ec4\u7684\u4e00\u4e2a\u7ef4\u5ea6\uff0c\u4f46\u7701\u7565\u7684\u7ef4\u6570\u53ea\u80fd\u662f\u9ad8\u7ef4\u90e8\u5206\uff0c\u4e0d\u80fd\u662f\u4f4e\u7ef4\u3002\u5bf9\u4e8e\u591a\u7ef4\u6570\u7ec4\u7684\u521d\u59cb\u5316\u65f6\uff0c\u4e5f\u662f\u540c\u6837\u5904\u7406\uff0c\u56e0\u6b64\uff0c\u672c\u9898\u7b54\u6848\u5e94\u9009D\uff0c\u5176\u5b83\u9009\u9879\u5747\u80fd\u5bf9\u6570\u7ec4\u8fdb\u884c\u6b63\u786e\u7684\u521d\u59cb\u5316\u3002", "\u00a0", "(34)\u6709\u4e00\u51fd\u6570", "\u250f\u00a0\u00a0 l x>O", "y=\u2528\u00a0 \u00a0O x=O", "\u2517\u00a0 -1 x<O", "\u4ee5\u4e0b\u7a0b\u5e8f\u6bb5\u4e2d\u4e0d\u80fd\u6839\u636ex\u7684\u503c\u6b63\u786e\u8ba1\u7b97\u51fay\u7684\u503c\u7684\u662f___________\u3002", "A)if(x>O)y=l\uff1belse if(x==O)y=0\uff1belse y=-l\uff1b", "B)y=O\uff1bif(x>O)y=1\uff1belse if(x<O)y=-1\uff1b", "C)y=0;if(x>=0)if(x>O)y=1\uff1belse y=-l\uff1b", "D)if(x>=0)if(x>O)y=l\uff1belse y=O\uff1belse y=-1\uff1b", "C", "\u672c\u9898\u5e94\u5f53\u6ce8\u610fif\u4e0eelse\u7684\u914d\u5bf9\u5173\u7cfb\u3002\u4ece\u6700\u5185\u5c42\u5f00\u59cb\uff0celse\u603b\u662f\u4e0e\u5b83\u4e0a\u9762\u6700\u8fd1\u7684(\u672a\u66fe\u914d\u5bf9\u7684)if\u914d\u5bf9\u3002", "\u00a0", "(35)\u4ee5\u4e0b\u7a0b\u5e8f\u4e2d\u7684\u51fd\u6570reverse\u7684\u529f\u80fd\u662f\u5c06a\u6240\u6307\u6570\u7ec4\u4e2d\u7684\u5185\u5bb9\u8fdb\u884c\u9006\u7f6e\u3002", "void reverse(int a[]\uff0cim n)", "{int i\uff0ct\uff1b", "for(i=O\uff1bi<n\uff0f2\uff1bi++)", "{t=a[i]\uff1ba[i]=a[n-l-i]\uff1ba[n-1-i]=t\uff1b}", "}", "main()", "{int b[10]={1,2,3,4,5,6,7,8,9,10}\uff1bint i\uff0cs=0\uff1b", "reverse(b\uff0c8)\uff1b", "for(i=6\uff1bi<10\uff1bi++)s+=b[I]\uff1b", "printf(\u201d\uff05d\uff3cn\u201d\uff0cs)\uff1b", "}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f", "A)22\u00a0\u00a0\u00a0 B)10\u00a0\u00a0\u00a0 C)34\u00a0\u00a0\u00a0 D)30", "A", "\u672c\u9898\u5e76\u4e0d\u662f\u5c06\u6574\u4e2a\u6570\u7ec4\u4e2d\u7684\u5185\u5bb9\u9006\u7f6e\uff0c\u800c\u662f\u9006\u7f6e\u524d8\u4e2a\u5143\u7d20\u3002\u9006\u7f6e\u540e\u7684\u6570\u7ec4\u4e3a\uff1a8\uff0c7\uff0c6\uff0c5\uff0c4\uff0c3\uff0c2\uff0c1\uff0c9\uff0c10\u901a\u8fc7for\u5faa\u73af\u8ba1\u7b97b[6]+b[7]+b[8]+b[9]\u53732+1+9+10=22\u3002", "\u00a0", "(36)\u6267\u884c\u4e0b\u9762\u7684\u7a0b\u5e8f\u6bb5\u540e\uff0c\u53d8\u91cfk\u7684\u503c\u4e3a___________\u3002", "int k=3,s[2]\uff1b", "s[0]=k\uff1bk=s[1]*10\uff1b", "A)\u4e0d\u786e\u5b9a\u00a0\u00a0\u00a0 B)33\u00a0\u00a0\u00a0 C)30\u00a0\u00a0\u00a0 D)10", "A", "\u7531\u4e8e\u672c\u9898\u4e2d\u672a\u5bf9\u6570\u7ec4\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u56e0\u6b64\u7a0b\u5e8f\u8fd0\u884c\u65f6\uff0c\u6570\u7ec4s\u4e2d\u5404\u4e2a\u5143\u7d20\u7684\u503c\u90fd\u662f\u4e0d\u786e\u5b9a\u7684\uff0c\u867d\u7136\u5728\u4ee3\u7801\u4e2d\u5bf9s[O]\u8fdb\u884c\u4e86\u8d4b\u503c\uff0c\u4f46\u6ca1\u6709\u5bf9s[1]\u8fdb\u884c\u8d4b\u503c\uff0c\u6545\u6267\u884cl(=s[1]+10\uff1b\u540e\uff0ck\u7684\u503c\u4e0d\u786e\u5b9a\u3002", "\u00a0", "(37)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "#include<string\uff0eh>", "main()", "{ char\u2018p=\u201dabcde\uff3c0fghjik\uff3cO\u201d\uff1b", "printf(\u201d\uff05d\uff3cn\u201d,strlen(p))\uff1b", "}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f__________\u3002", "A)12\u00a0\u00a0\u00a0 B)15\u00a0\u00a0\u00a0 C)6\u00a0\u00a0\u00a0 D)5", "D", "\u201c\uff3c0\u201d\u662f\u5b57\u7b26\u4e32\u7ed3\u675f\u6807\u5fd7\uff0c\u5f53\u9047\u5230\u6b64\u6807\u5fd7\u65f6\u5b57\u7b26\u4e32\u5df2\u7ed3\u675f\u3002\u6240\u4ee5\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e3a5\u3002", "\u00a0", "(38)\u7a0b\u5e8f\u4e2d\u5934\u6587\u4ef6t)rpel_h\u7684\u5185\u5bb9\u662f\uff1a", "#define N 5", "#define Ml N*3", "\u7a0b\u5e8f\u5982\u4e0b\uff1a", "#include\u201dtype 1.h\u201d", "#define M2 N*2", "main()", "{ int i\uff1b", "i=MI+M2\uff1b", "printf(\u201d\uff05d\uff3cn\u201d\uff0ci)\uff1b", "}", "\u7a0b\u5e8f\u7f16\u8bd1\u540e\u8fd0\u884c\u7684\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "A)lO\u00a0\u00a0\u00a0 B)20\u00a0\u00a0\u00a0 C)25\u00a0\u00a0\u00a0 D)30", "C", "\u5b8f\u5b9a\u4e49\u5c31\u662f\u7528\u4e00\u4e2a\u6307\u5b9a\u7684\u6807\u8bc6\u7b26(\u5373\u540d\u5b57)\u6765\u4ee3\u8868\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5b83\u7684\u4e00\u822c\u5f62\u5f0f\u4e3a\uff1a", "#define\u00a0\u00a0\u00a0 \u6807\u8bc6\u7b26\u00a0\u00a0\u00a0\u00a0\u00a0 \u5b57\u7b26\u4e32", "\u8fd9\u79cd\u65b9\u6cd5\u4f7f\u7528\u6237\u80fd\u4ee5\u4e00\u4e2a\u7b80\u5355\u7684\u540d\u5b57\u4ee3\u66ff\u4e00\u4e2a\u957f\u7684\u5b57\u7b26\u4e32\uff0c\u56e0\u6b64\u628a\u8fd9\u4e2a\u6807\u8bc6\u7b26(\u540d\u5b57)\u79f0\u4e3a\u201c\u5b8f\u540d\u201d\u3002", "\u00a0", "(39)\u82e5\u6709\u4ee5\u4e0b\u7684\u7a0b\u5e8f\u6bb5\uff0c\u5219\u5728\u6267\u884cfor\u8bed\u53e5\u540e\uff0c*(*(pt+1)+2)\u8868\u793a\u7684\u6570\u7ec4\u5143\u7d20\u662f________\u3002", "int t[3][3]\uff0c*pt[3]\uff0ck\uff1b", "for(k=0\uff1bk<3\uff1bk++)pt[k]=&t[k][O]\uff1b", "A)t[2][0]\u00a0\u00a0\u00a0 B]t[2][2]\u00a0\u00a0\u00a0 C]t[1][2]\u00a0\u00a0\u00a0 D]t[2][1]", "C", "\u5728\u9898\u9762\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4l\uff0c\u53ca\u4e00\u4e2a\u4e00\u7ef4\u6307\u9488\u6570\u7ec4pt\uff0c\u5728\u5faa\u73af\u8bed\u53e5\u4e2d\u5206\u522b\u5bf9\u6307\u9488\u6570\u7ec4\u8d4b\u503c\u4e3a\u4e8c\u7ef4\u6570\u7ec4t\u7684\u7b2ck\u884c\u9996\u5143\u7d20\u7684\u5730\u5740\u3002*(pt+1)\uff0c\u8868\u793a\u7684\u662f\u6570\u7ec4pt\u4e2d\u4e0b\u6807\u4e3a1\u7684\u5143\u7d20\u7684\u503c\uff0c\u800c\u8be5\u503c\u4e3a\u4e8c\u7ef4\u6570\u7ec4t\u7684\u7b2cl\u884c(\u4ece\u7b2c0\u884c\u7b97\u8d77)\u7684\u9996\u5143\u7d20\u7684\u5730\u5740\uff0c\u6545*(*(pt+1)+2)\u8868\u793a\u7684\u662f\u6570\u7ec4t\u4e2dt[1][2]\u7684\u5143\u7d20\u7684\u503c\u3002", "\u00a0", "(40)\u4ee5\u4e0b\u53d9\u8ff0\u4e2d\u9519\u8bef\u7684\u662f_________\u3002", "A)\u4e8c\u8fdb\u5236\u6587\u4ef6\u6253\u5f00\u540e\u53ef\u4ee5\u5148\u8bfb\u6587\u4ef6\u7684\u672b\u5c3e\uff0c\u800c\u987a\u5e8f\u6587\u4ef6\u4e0d\u53ef\u4ee5", "B)\u5728\u7a0b\u5e8f\u7ed3\u675f\u65f6\uff0c\u5e94\u5f53\u7528fclose\u51fd\u6570\u5173\u95ed\u5df2\u6253\u5f00\u7684\u6587\u4ef6", "C)\u5229\u7528fread\u51fd\u6570\u4ece\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\u8bfb\u6570\u636e\uff0c\u53ef\u4ee5\u7528\u6570\u7ec4\u540d\u7ed9\u6570\u7ec4\u4e2d\u6240\u6709\u5143\u7d20\u8bfb\u5165\u6570\u00a0\u00a0\u00a0 \u636e", "D)\u4e0d\u53ef\u4ee5\u7528FILE\u5b9a\u4e49\u6307\u5411\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u6587\u4ef6\u6307\u9488", "D", "\u6bcf\u4e2a\u88ab\u4f7f\u7528\u7684\u6587\u4ef6\u90fd\u5728\u5185\u5b58\u4e2d\u5f00\u8f9f\u4e00\u4e2a\u533a\uff0c\u7528\u6765\u5b58\u653e\u6587\u4ef6\u7684\u6709\u5173\u4fe1\u606f\uff0c\u8fd9\u4e9b\u4fe1\u606f\u662f\u4fdd\u5b58\u5728\u4e00\u4e2a\u540d\u4e3aFILE\u7684\u7ed3\u6784\u4f53\u7c7b\u578b\u7684\u7ed3\u6784\u4f53\u53d8\u91cf\u4e2d\u7684\u3002\u800c\u6587\u4ef6\u53c8\u5206\u4e3aASCII\u6587\u4ef6\u548c\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u6240\u4ee5\uff0c\u3001\u53ef\u4ee5\u7528FILE\u5b9a\u4e49\u6307\u5411\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u6587\u4ef6\u6307\u9488\u3002", "\u00a0", "(41)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "#include<string\uff0eh>", "main(int argc,char *argv[])", "{ inti,len=0\uff1b", "for(i=1\uff1bi<argc\uff1bi++)len+=strlen(argv[I])\uff1b", "printf(\u201d\uff05d\uff3cn\u201d,len)\uff1b", ")", "\u7a0b\u5e8f\u7f16\u8bd1\u8fde\u63a5\u540e\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u662fexl\uff0eexe\uff0c\u82e5\u8fd0\u884c\u65f6\u8f93\u5165\u5e26\u53c2\u6570\u7684\u547d\u4ee4\u884c\u662f\uff1a", "exl \u00a0\u00a0abcd \u00a0\u00a0efg\u00a0\u00a0 10\u2199", "\u5219\u8fd0\u884c\u7684\u7ed3\u679c\u662f________\u3002", "A)22\u00a0\u00a0\u00a0 B)17\u00a0\u00a0\u00a0 C)12\u00a0\u00a0\u00a0 D)9", "D", "\u672c\u9898\u4e3b\u51fd\u6570\u5e26\u6709\u4e24\u4e2a\u53c2\u6570\uff0c\u4e00\u4e2aint\u578b\u53d8\u91cfargc\uff0c\u53e6\u4e00\u4e2a\u662fchar\u578b\u7684\u4e00\u7ef4\u4e00\u7ea7\u6307\u9488\u6570\u7ec4argv\u3002\u5f53\u4e3b\u51fd\u6570\u88ab\u6267\u884c\u65f6\uff0c\u7cfb\u7edf\u81ea\u52a8\u5c06\u6839\u636e\u547d\u4ee4\u884c\u7684\u60c5\u51b5\uff0c\u5206\u522b\u7ed9\u4e3b\u51fd\u6570\u7684\u4e24\u4e2a\u53c2\u6570\u8d4b\u503c\u3002argc\u7528\u4e8e\u5b58\u653e\u547d\u4ee4\u884c\u4e2d\u547d\u4ee4\u5b57\u548c\u53c2\u6570\u7684\u603b\u548c\u7684\u4e2a\u65704\uff0cargv\u7528\u6765\u5b58\u653e\u547d\u4ee4\u884c\u4e2d\u547d\u4ee4\u5b57\u548c\u6240\u6709\u53c2\u6570\u7684\u5b57\u7b26\u4e32\uff0c\u5e76\u89c4\u5b9aargv[0]\u5b58\u653e\u547d\u4ee4\u5b57\u5b57\u7b26\u4e32exl\uff0cargv[1]\u7528\u6765\u5b58\u653e\u7b2c\u4e00\u4e2a\u53c2\u6570\u7684\u5b57\u7b26\u4e32abcd\uff0cargv[21\u7528\u6765\u5b58\u653e\u7b2c\u4e8c\u4e2a\u53c2\u6570\u7684\u5b57\u7b26\u4e32e\u9f9f\uff0cargv[3]\u7528\u6765\u5b58\u653e\u7b2c\u4e09\u4e2a\u53c2\u6570\u7684\u5b57\u7b26\u4e3210\u3002\u90a3\u4e48for\u5faa\u73af\u5c06\u5faa\u73af3\u6b21\u5206\u522b\u5c06argv\u6570\u7ec4\u4e2d\u5143\u7d20\u7684\u957f\u5ea6\u7d2f\u52a0\u5230len\u4e2d\uff0c\u6240\u4ee5\u7b54\u6848\u4e3a9\u3002", "\u00a0", "(42)\u82e5\u6709\u4ee5\u4e0b\u8bf4\u660e\u548c\u5b9a\u4e49\uff1a__________\u3002", "fun(*C){\u2026}", "main()", "{int(*a)()=fun\uff0c(*b)()\uff0cw[10]\uff0cc\uff1b}", "\u5728\u5fc5\u8981\u7684\u8d4b\u503c\u540e\uff0c\u5bf9fun\u51fd\u6570\u8c03\u7528\u6b63\u786e\u7684\u662f_________\u3002", "A)a=a(w)\uff1b\u00a0\u00a0\u00a0 B) (*a)(&C)\uff1b\u00a0\u00a0\u00a0 C)b=*b(w)\uff1b\u00a0\u00a0\u00a0 D)fun(b)\uff1b", "B", "\u5728\u4e3b\u51fd\u6570\u4e2d\u5b9a\u4e49\u4e86\u4e8c\u4e2a\u6307\u5411\u51fd\u6570\u7684\u6307\u9488a,b\uff0c\u5176\u4e2d\u6307\u9488a\u6307\u5411\u51fd\u6570fun\uff0c\u6307\u9488b\u672a\u521d\u59cb\u5316\u3002\u5bf9\u4e8e\u9009\u9879A\u3001c\uff0c\u5176\u8fd4\u56de\u7c7b\u578b\u662f\u9519\u8bef\u7684\uff0c\u5bf9\u4e8eD\uff0c\u5176\u8c03\u7528\u7684\u53c2\u6570\u662f\u9519\u8bef\u7684\uff0c\u9009\u9879B\u662f\u6b63\u786e\u7684\uff0c\u5176\u76f8\u5f53\u4e8e\u8c03\u7528\u51fd\u6570fhll(&C)\uff1b\u3002", "\u00a0", "(43)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "intfa(intx\u3001", "{returnx*x\uff1b}", "int fb(intxl", "{returnX*X*x\uff1b}", "int f(int(*f1)()\uff0cint(*f2)()\uff0cint x)", "{return f2(x)-fl(x)\uff1b)", "main()", "{ int i\uff1b", "i=f(fa,fb,2)\uff1bprintf(\u201d\uff05d\uff3cn\u201d\uff0ci)\uff1b", "}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f", "A) 4\u00a0\u00a0\u00a0 B)1\u00a0\u00a0\u00a0 C)4\u00a0\u00a0\u00a0 D)8", "C", "f[fa,fb,2]\u5373\u4e3afb(2)-fa(2)=2*2*2-2*2=8-4=4\u3002", "\u00a0", "(44)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "void ss(char *s\uff0cchar t)", "{while(*s)", "{ if(*s==t)*s=t-\u2019a\u2019+\u2019A\u2019\uff1b", "s++\uff1a", "}", "}", "main()", "{char strl[100]=\u201dabcddfefdbd\u201d\uff0cc=\u2019d\u2019\uff1b", "ss(strl\uff0cC)\uff1b\u00a0 printf(\u201d\uff05s\uff3cn\u201d\uff0cstrl)\uff1b", "}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "A)ABCDDEFEDBD\u00a0\u00a0\u00a0 B)abcDDfefDbD", "C)abcAAfefAbA\u00a0\u00a0\u00a0 D)Abcddfefdbd", "B", "\u5728\u4e3b\u51fd\u6570\u4e2d\u56e0\u4e3ac\u88ab\u8d4b\u503c\u4e3a\u5b57\u7b26\u2019d\uff0e\uff0c\u6240\u4ee5\u51fd\u6570\u7684\u529f\u80fd\u662f\u5c06\u5b57\u7b26\u4e32\u4e2dd\u5b57\u6bcd\u8f6c\u6362\u4e3a\u5927\u5199\u3002", "\u00a0", "(45)\u4e0b\u9762\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f__________\u3002", "intf()", "{", "static int i=O\uff1a", "int s=l\uff1a", "s+=i\uff1bi++\uff1b", "return s\uff1a", "}", "main()", "{", "inti\uff0ca=0\uff1b", "for(I=0\uff1bi<5\uff1bi++)a+=f()\uff1b", "printf(\u201d\uff05dha\u201d\uff0ca)\uff1b", ")", "A)20\u00a0\u00a0\u00a0 B)24\u00a0\u00a0\u00a0 C)25\u00a0\u00a0\u00a0 D)15", "D", "\u5728\u4e3b\u51fd\u6570main\u4e2d\uff0c\u5f53I=0\u65f6\uff0cf()\u8fd4\u56de1\uff1b\u5f53I=1\u65f6\uff0cf()\u4e2d\u4fdd\u7559\u524d\u6b21\u6267\u884c\u540e\u7684i\uff0c\u8fd4\u56de2\uff0ci\u4e3an\u65f6\uff1bf()\u8fd4\u56den+l\uff0c\uff0c\u5728\u4e3b\u51fd\u6570main\u4e2d\u4e00\u5171\u8c03\u7528\u4e865\u6b21f()\uff0c\u5176\u8fd4\u56de\u503c\u5206\u522b\u662f1,2,3,4,5\uff0c\u5bf9\u5404\u6b21\u7684\u8fd4\u56de\u503c\u8fdb\u884c\u7d2f\u52a0\uff0c\u5176\u548c\u4e3a15\u3002", "\u00a0", "(46)\u8bbe\u6709\u5982\u4e0b\u5b9a\u4e49\uff1a", "struct sk", "{int a\uff1b", "float b\uff1a", "}data\uff1b", "int*p\uff1b", "\u82e5\u8981\u4f7fp\u6307\u5411data\u4e2d\u7684a\u57df\uff0c\u6b63\u786e\u7684\u8d4b\u503c\u8bed\u53e5\u662f_________\u3002", "A)p=&a\uff1b\u00a0\u00a0\u00a0 B)p=data\uff0ea\uff1b\u00a0\u00a0\u00a0 C)p=\uff06data\uff0ea\uff1b\u00a0\u00a0\u00a0 D)*p\u3002data\uff0ea", "C", "\u5c06data\uff0ea\u7684\u8d77\u59cb\u5730\u5740\u8d4b\u7ed9\u6307\u9488\u53d8\u91cfp\uff0c\u4e5f\u5c31\u662f\u4f7fp\u6307\u5411data\uff0ea\u3002", "\u00a0", "(47)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "#include<stdlib.h>", "struct NoDE", "{int num\uff1bstruct NoDE\u3002next\uff1b}", "main()", "{struct NODE *p\uff0c*q\uff0c*r\uff1b", "p=(struct NoDE*)malloc(sizeof(struct NODE))\uff1b", "q=(struct NODE*)malloc(sizeof(struct NODE))\uff1b", "r==(struct NODE*)malloc(sizeof(struct NODE))\uff1b", "p->num=10\uff1bq->num=20\uff1br->num=30\uff1b", "p->next=q\uff1bq->next=r\uff1b", "pdntf(\u201c\uff05d\\n\u201d,p->num+q->next->num)\uff1b", "}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f____________\u3002", "A)10\u00a0\u00a0\u00a0 B)20\u00a0\u00a0\u00a0 C)30\u00a0\u00a0\u00a0 D)40", "D", "\u8bc4\u6790:p->num\u5373\u4e3a10\uff0cq->next->num\u5373\u4e3ar->num\uff0c\u4e3a30\uff0c\u6240\u4ee5p->num+q->next=>num=10+30=40\u3002", "\u00a0", "(48)\u82e5\u6709\u4ee5\u4e0b\u8bf4\u660e\u548c\u5b9a\u4e49", "typedef int *INTEGER", "INTEGER p\uff0c*q\uff1b", "\u4ee5\u4e0b\u53d9\u8ff0\u6b63\u786e\u7684\u662f________\u3002", "A)p\u662fint\u578b\u53d8\u91cf\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)p\u662f\u57fa\u7c7b\u578b\u4e3aint\u7684\u6307\u9488\u53d8\u91cf", "C)q\u662f\u57fa\u7c7b\u578b\u4e3aint\u7684\u6307\u9488\u53d8\u91cf\u00a0 D)\u7a0b\u5e8f\u4e2d\u53ef\u7528INTEGER\u4ee3\u66ffint\u7c7b\u578b\u540d", "B", "typedef int*INTEGER\uff1b(\u58f0\u660eINTEGER\u4e3a\u6574\u578b\u6307\u9488\u7c7b\u578b)\uff1a", "INTEGER p\uff0c*q\uff1b(\u5b9a\u4e49p\uff0c*q\u4e3a\u6574\u578b\u6307\u9488\u7c7b\u578b)\uff0c\u6240\u4ee5p\u662f\u57fa\u7c7b\u578b\u4e3aint\u7684\u6307\u9488\u53d8\u91cf\uff1b*q\u662f\u57fa\u7c7b\u578b\u4e3aint\u7684\u6307\u9488\u53d8\u91cf\uff1b\u7a0b\u5e8f\u4e2d\u53ef\u7528*INTEGER\u4ee3\u66ffint\u7c7b\u578b\u540d\u3002", "\u00a0", "(49)\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "main()", "{unsigned char a\uff0cb\uff0cc\uff1b", "a=0\u00d73\uff1bb=a\ufe310\u00d78\uff1bc=b<<l\uff1b", "printf(\u201d\uff05d\uff05d\uff3cn\u201d\uff0cb\uff0cC)\uff1b", "}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f___________\u3002", "A)-11\u00a0 12\u00a0\u00a0\u00a0 B)-6\u00a0-13\u00a0\u00a0\u00a0 C)12\u00a0 24\u00a0\u00a0\u00a0 D)l1\u00a0 22", "D", "0\u00d73\u8868\u793a16\u8fdb\u5236\u8868\uff0c\u201c\ufe31\u201d\u4e3a\u6309\u4f4d\u6216\uff0c\u201c<<\u201d\u4e3a\u6309\u4f4d\u5de6\u79fb\uff0c\u5c06a\uff0cb\u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236\u6570\u8fdb\u884c\u4f4d\u8fd0\u7b97\uff0c\u518d\u5c06\u7ed3\u679c\u4ee5\u5341\u8fdb\u5236\u6253\u5370\u51fa\uff0c\u7ed3\u679c\u4e3a11\u00a0 22\u3002", "\u00a0", "(50)\u4ee5\u4e0b\u7a0b\u5e8f\u4e2d\u51fd\u6570f\u7684\u529f\u80fd\u662f\u5c06n\u4e2a\u5b57\u7b26\u4e32\uff0c\u6309\u7531\u5927\u5230\u5c0f\u7684\u987a\u5e8f\u8fdb\u884c\u6392\u5e8f\u3002", "#include<string\uff0eh>", "void f(char p[][lO]\uff0cint n)", "{chart[201\uff1bint ij\uff1b", "for(i=0\uff1bi<n-1\uff1bi++)", "for 0=i+l;j<n;j++)", "if[strcmp(p[i]\uff0cp[j])<O]", "{strcpy(t,p[i])\uff1bstrcpy(p[i]\uff0cpD)}\uff1bstrcpy(p[j]\uff0ct)\uff1b)", "}", "main()", "{char p[][10]={\u201cabc\u201d,\u201daabdfg\u201d,\u201dabbd\u201d,\u201ddcdbe\u201d,\u201dcd\u201d}\uff1bint i\uff1b", "f(p\uff0c5)\uff1bprint\u201d\uff05d\uff3cn\u201d,strlen(p[0]))\uff1b", "}", "\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f__________\u3002", "A)6\u00a0\u00a0\u00a0 B)4\u00a0\u00a0\u00a0 C)5\u00a0\u00a0\u00a0 D)3", "C", "\u6bd4\u8f83\u5b57\u7b26\u4e32\u7684\u5927\u5c0f\u662f\u4ece\u5b57\u7b26\u4e32\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u5f00\u59cb\u6bd4\u8f83\uff0c\u5982\u679c\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u76f8\u540c\u5219\u6bd4\u8f83\u7b2c\u4e8c\u4e2a\u5b57\u6bcd\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u76f4\u81f3\u5b57\u7b26\u4e32\u7ed3\u675f\u3002", "\u00a0", "\u4e8c\u3001\u586b\u7a7a\u9898(\u6bcf\u7a7a2\u5206\uff0c\u517140\u5206)", "\u8bf7\u5c06\u6bcf\u4e00\u4e2a\u7a7a\u7684\u6b63\u786e\u7b54\u6848\u5199\u5728\u7b54\u9898\u5361\u7684\u3010l\u3011\u81f3\u301020\u3011\u5e8f\u53f7\u7684\u6a2a\u7ebf\u4e0a\uff0c\u7b54\u5728\u8bd5\u5377\u4e0a\u4e0d\u5f97 \u00a0\u00a0\u00a0\u5206\u3002", "(1)\u6d4b\u8bd5\u7684\u76ee\u7684\u662f\u66b4\u9732\u9519\u8bef\uff0c\u8bc4\u4ef7\u7a0b\u5e8f\u7684\u53ef\u9760\u6027\uff1b\u800c", "\u7684\u76ee\u7684\u662f\u53d1\u73b0\u9519\u8bef\u7684\u4f4d\u7f6e\u5e76\u00a0\u00a0\u00a0 \u6539\u6b63\u9519\u8bef\u3002", "\u30101\u3011\u8c03\u8bd5", "\u8f6f\u4ef6\u6d4b\u8bd5\u7684\u76ee\u6807\u662f\u5728\u7cbe\u5fc3\u63a7\u5236\u7684\u73af\u5883\u4e0b\u6267\u884c\u7a0b\u5e8f\uff0c\u4ee5\u53d1\u73b0\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u7ed9\u51fa\u7a0b\u5e8f\u53ef\u9760\u6027\u7684\u9274\u5b9a\uff1a\u8c03\u8bd5\u662f\u4e00\u4e2a\u4e0e\u6d4b\u8bd5\u6709\u8054\u7cfb\u53c8\u6709\u533a\u522b\u7684\u6982\u5ff5\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u6d4b\u8bd5\u7684\u76ee\u7684\u662f\u66b4\u9732\u9519\u8bef\uff0c\u8bc4\u4ef7\u7a0b\u5e8f\u7684\u53ef\u9760\u6027\uff0c\u800c\u8c03\u8bd5\u7684\u76ee\u7684\u662f\u53d1\u73b0\u9519\u8bef\u7684\u4f4d\u7f6e\uff0c\u5e76\u6539\u6b63\u9519\u8bef\u3002", "\u00a0", "(2)\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u5806\u6392\u5e8f\u9700\u8981\u6bd4\u8f83\u7684\u6b21\u6570\u4e3a", "\u3002", "\u30102\u3011O(nlog2n1)", "\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u5192\u6ce1\u6392\u5e8f\u6240\u9700\u8981\u7684\u6bd4\u8f83\u6b21\u6570\u4e3an(n-1)\uff0f2\uff1b\u7b80\u5355\u63d2\u5165\u6392\u5e8f\u6240\u9700\u8981\u7684\u6bd4\u8f83\u6b21\u6570\u4e3an(n-1)\uff0f2\uff1b\u5e0c\u5c14\u6392\u5e8f\u6240\u9700\u8981\u7684\u6bd4\u8f83\u6b21\u6570\u4e3aO(n^1.5)\uff1b\u5806\u6392\u5e8f\u6240\u9700\u8981\u7684\u6bd4\u8f83\u6b21\u6570\u4e3aO(nlog2n)\u3002", "\u00a0", "(3)\u82e5\u4e32s=\u201dProgram,,\uff0c\u5219\u5176\u5b50\u4e32\u7684\u6570\u76ee\u662f", "\u3002", "\u30103\u301129", "\u4e32s\u4e2d\u5171\u67097\u4e2a\u5b57\u7b26\uff0c\u7531\u4e8e\u4e32\u4e2d\u5b57\u7b26\u5404\u4e0d\u76f8\u540c\uff0c\u5219\u5176\u5b50\u4e32\u4e2d\u5b57\u7b26\u4e2a\u6570\u4e3a0\u7684\u4e32\u67091\u4e2a\uff0c\u5373\u7a7a\u4e32;\u5b57\u7b26\u4e2a\u6570\u4e3a1\u7684\u5b57\u7b26\u4e32\u67097\u4e2a\uff1b\u5b57\u7b26\u4e2a\u6570\u4e3a2\u7684\u5b57\u7b26\u4e32\u67096\u4e2a\uff1b\u5b57\u7b26\u4e2a\u6570\u4e3a3\u7684\u5b57\u7b26\u4e32\u67095\u4e2a\uff1b\u5b57\u7b26\u4e2a\u6570\u4e3a4\u7684\u5b57\u7b26\u4e32\u67094\u4e2a\uff1b\u5b57\u7b26\u4e2a\u6570\u4e3a5\u7684\u5b57\u7b26\u4e32\u67093\u4e2a\uff1b\u5b57\u7b26\u4e2a\u6570\u4e3a6\u7684\u5b57\u7b26\u4e32\u67092\u4e2a\uff1b\u5b57\u7b26\u4e2a\u6570\u4e3a7\u7684\u5b57\u7b26\u4e32\u67091\u4e2a\uff1b\u5171\u67091+2+3+4+5+6+7+1=29\u3002", "\u00a0", "(4)\u4e00\u4e2a\u9879\u76ee\u5177\u6709\u4e00\u4e2a\u9879\u76ee\u4e3b\u7ba1\uff0c\u4e00\u4e2a\u9879\u76ee\u4e3b\u7ba1\u53ef\u7ba1\u7406\u591a\u4e2a\u9879\u76ee\uff0c\u5219\u5b9e\u4f53\u201d\u201d\u9879\u76ee\u4e3b\u7ba1\u201d\u201d\u4e0e\u5b9e\u4f53\u201d\u201d\u9879\u76ee\u201d\u201d\u7684\u8054\u7cfb\u5c5e\u4e8e", "\u7684\u8054\u7cfb\u3002", "\u30104\u3011l\u5bf9\u591a\u62161\uff1aN", "\u4e24\u4e2a\u5b9e\u4f53\u96c6\u95f4\u7684\u8054\u7cfb\u5b9e\u9645\u4e0a\u662f\u5b9e\u4f53\u96c6\u95f4\u7684\u51fd\u6570\u5173\u7cfb\uff0c\u8fd9\u79cd\u51fd\u6570\u5173\u7cfb\u53ef\u4ee5\u67093\u79cd\uff0c\u5373\u4e00\u5bf9\u4e00(1\uff1a1)\u7684\u8054\u7cfb\u3001\u4e00\u5bf9\u591a(1\uff1aN)\u6216\u591a\u5bf9\u4e00(N\uff1a1)\u7684\u8054\u7cfb\u548c\u591a\u5bf9\u591a(N\uff1aN)\u7684\u8054\u7cfb\u3002", "\u00a0", "(5)\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\u5e38\u89c1\u7684\u6570\u636e\u6a21\u578b\u6709\u5c42\u6b21\u6a21\u578b\u3001\u7f51\u72b6\u6a21\u578b\u548c", "\u4e09\u79cd\u3002", "\u30105\u3011\u5173\u7cfb\u6a21\u578b", "\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\u662f\u4f4d\u4e8e\u7528\u6237\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u4e4b\u95f4\u7684\u4e00\u5c42\u7cfb\u7edf\u7ba1\u7406\u8f6f\u4ef6\uff0c\u662f\u4e00\u79cd\u7cfb\u7edf\u8f6f\u4ef6\uff0c\u662f\u7528\u6237\u4e0e\u6570\u636e\u5e93\u4e4b\u95f4\u7684\u4e00\u4e2a\u6807\u51c6\u63a5\u53e3\uff0c\u5176\u603b\u662f\u57fa\u4e8e\u67d0\u79cd\u6570\u636e\u6a21\u578b\uff0c\u53ef\u4ee5\u5206\u4e3a\u5c42\u6b21\u6a21\u578b\u3001\u7f51\u72b6\u6a21\u578b\u548c\u5173\u7cfb\u6a21\u578b\u3002", "\u00a0", "(6)\u4ee5\u4e0b\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f", "\u3002", "main()", "{ int x=10,y=20,t=O\uff1b", "if(x==y)t=x\uff1bx=y\uff1by=t\uff1b", "printf(\u201d\uff05d\uff0c\uff05d\uff3cn\u201d\uff0cx\uff0cy)\uff1b", "}", "\u30106\u301120,0", "\u5728\u672c\u9898\u7ed9\u51fa\u7684\u7a0b\u5e8f\u4e2d\uff0cif\u6761\u4ef6\u4e3a\u5047\uff0c\u4e0d\u6267\u884ct=x\uff1b\u8bed\u53e5\uff0c\u800c\u53bb\u6267\u884cx=y\uff1b\u548cy=t\uff1b\u8bed\u53e5\uff0c\u6240\u4ee5\u6253\u5370\u51fax\u7684\u503c\u4e3a20\uff0cy\u7684\u503c\u4e3a0\uff1b\u4f46\u662f\u5982\u679c\u7a0b\u5e8f\u8fd9\u6837\u5199{t=-x\uff1bx=y\uff1by=t\uff1b}\uff0c\u90a3\u4e48\u5c31\u662f\u5b9e\u73b0x\u4e0ey\u7684\u4ea4\u6362\u3002", "\u00a0", "(7)\u82e5\u5df2\u77e5a=20,b=lO\uff0c\u5219\u8868\u8fbe\u5f0f!a>b\u7684\u503c\u4e3a", "\u3002", "\u30107\u3011O", "c\u8bed\u8a00\u4e2d\u903b\u8f91\u8fd0\u7b97\u7b26\u6309\u7531\u9ad8\u5230\u4f4e\u987a\u5e8f\u4f9d\u6b21\u4e3a\uff1a\u903b\u8f91\u975e(!)\u3001\u7b97\u672f\u8fd0\u7b97\u7b26\u3001\u5173\u7cfb\u8fd0\u7b97\u7b26\u3001\u903b\u8f91\u4e0e(&&)\u548c\u903b\u8f91\u6216(1f)\u3001\u8d4b\u503c\u8fd0\u7b97\u7b26\u3002\u6240\u4ee5\u8868\u8fbe\u5f0f!a>b\u5148\u8fd0\u7b97!a\u7684\u503c\u4e3a0\uff0c\u518d\u8fd0\u7b970>b\uff0c\u6240\u4ee5\u7ed3\u679c\u4e3a0\u3002", "\u00a0", "(8)\u4ee5\u4e0b\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f", "\u3002", "main()", "{intx=15\uff1b", "while(x>10&&x<50)", "{x++\uff1b", "if(x\uff0f3){x++\uff1bbreak\uff1b)", "else continue\uff1b", "}", "print(\u201d\uff05d\uff3cn\u201d\uff0cx)\uff1b", "}", "\u30108\u301117", "\u5f53x=15\u65f6\uff0cwhile\u6761\u4ef6\u4e3a\u771f\uff0c\u6267\u884cx++\uff1b\uff0c\u8fd9\u65f6x\u7684\u503c\u4e3a16\uff0cif\u6761\u4ef6\u4e3a\u771f\uff0c\u6267\u884cx++\uff1a\u540e\u8df3\u51fa\u5faa\u73af\u4f53\uff0c\u6b64\u65f6x\u7684\u503c\u4e3a17a", "\u00a0", "(9)\u6709\u4ee5\u4e0b\u7a0b\u5e8f\uff1a", "#include<stdio\uff0eh>", "main()", "{charc\uff1b", "while((c=getchar())!d?\u3002)putchat(\u2013C)\uff1b", "}", "\u7a0b\u5e8f\u8fd0\u884c\u65f6\uff0c\u5982\u679c\u4ece\u952e\u76d8\u8f93\u5165\uff1aY?N?\u2199\uff0c\u5219\u8f93\u51fa\u7ed3\u679c\u4e3a", "\u3002", "\u30109\u3011X", "getchar()\u53ea\u80fd\u63a5\u6536\u4e00\u4e2a\u5b57\u7b26\uff0c\u5f53\u4ece\u952e\u76d8\u8f93\u5165Y?N?\u2199\uff0c\u7cfb\u7edf\u5224\u65ad\u51fa\u7b2c\u4e00\u4e2a\u5b57\u7b26Y!=\u2018?\u2019\u6761\u4ef6\u4e3a\u771f\uff0c\u8f93\u51fax\uff0c\u7ee7\u7eed\u5faa\u73af\uff0c\u8fd9\u65f6while\u6761\u4ef6\u4e0d\u6210\u7acb\uff0c\u5faa\u73af\u7ed3\u675f\u3002", "\u00a0", "(10)\u4ee5\u4e0b\u51fd\u6570\u7684\u529f\u80fd\u662f\u8ba1\u7b97s=1+1\uff0f2!+1\uff0f3!+\u2026\u2026+l\uff0fn!\uff0c\u8bf7\u586b\u7a7a\u3002", "double fun(int n)", "{double s=0\uff0e0,fac=1\uff0eO\uff1bint i\uff1b", "for(i=1\uff1bi<=n\uff1bi++)", "{ fac=fac ", "\uff1b", "s=s+fac\uff1b", "}", "return s\uff1b", "}", "\u301010\u3011\uff0fi\u6216*1\uff0e0\uff0fi\u6216*1\uff0fI\u6216*(1\uff0e0\uff0fi)\u6216\uff0f(double)i", "\u8be5\u7a0b\u5e8f\u5b9e\u73b0\u7684\u529f\u80fd\u662f\u6c42\u5404\u4e2a\u56e0\u5f0f\u7684\u548c\uff0c\u89c2\u5bdf\u8868\u8fbe\u5f0f\u53ef\u4ee5\u770b\u51fa\uff0c\u53ea\u8981\u5c06i\u7684\u503c\u7684\u5012\u6570\u4e58\u4ee5fac\u5c31\u5f97\u5230\u6bcf\u4e2a\u56e0\u5f0f\u7684\u503c\u3002", "\u00a0", "(11)\u4e0b\u9762\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f\uff1a", "\u3002", "#define N 10", "#define s(x)X*X", "#define f\uff08x\uff09(x*x)", "main()", "{int i1\uff0ci2\uff1b", "il=1000\uff0fs(N)\uff1bi2=1000\uff0ff(N)\uff1b", "printf(\u201d\uff05d\uff05d\uff3cn\u201d\uff0ct1\uff0ci2)\uff1b", "}", "\u301011\u30111000 10", "\u6839\u636e\u5b8f\u5b9a\u4e49\uff0c\u53d8\u91cfi1\u7684\u503c\u4e3a1000\uff0f10*10=1000\uff0c\u53d8\u91cfi2\u7684\u503c\u4e3a1000\uff0f(10*lO)=lO", "\u00a0", "(12)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f", "\u3002", "main()", "{", "static int a[]={l\uff0c2\uff0c3\uff0c4}\uff1b", "int iJ=2\uff1b", "for(I=l\uff1bi<3\uff1bi++)", "{n(a);J++\uff1b}", "printf(%d\uff0c\uff05d\uff3cn\u201d\uff0ca[0],J)\uff1b", "}", "f1(int a[4])", "{", "int I,J=l\uff1b", "for(I=1\uff1bi<4\uff1bi+|+)", "a[I-1]=a[I]\uff1b", "j++\uff1b", "}", "\u301012\u30113,4", "\u7528static\u5bf9\u5c40\u90e8\u53d8\u91cf\u58f0\u660e\uff0c\u5219\u4e3a\u8be5\u53d8\u91cf\u5206\u914d\u7684\u7a7a\u95f4\u5728\u6574\u4e2a\u7a0b\u5e8f\u6267\u884c\u671f\u95f4\u59cb\u7ec8\u5b58\u5728\u3002n\u51fd\u6570\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\u4e3a\u5c40\u90e8\u53d8\u91cf\uff0c\u4e3b\u51fd\u6570\u4e2dj\u7684\u521d\u503c\u4e3a2\uff0c\u5faa\u73af\u6267\u884c\u4e86\u4e24\u6b21\uff0c\u6240\u4ee5j=4\u3002\u4e3b\u51fd\u6570\u901a\u8fc7\u5bf9n\u7684\u8c03\u7528\u8f93\u51fa\u539f\u6570\u7ec4a[3]\u7684\u503c\u3002", "\u00a0", "(13)\u4e0b\u9762\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f\uff1a", "\u3002", "typedef union student", "{char name[10]\uff1b", "long sno\uff1b", "char sex\uff1b", "float score[4]\uff1b", "}STU\uff1b", "main()", "{STU a[5]\uff1b", "primf(\u201d\uff05d\uff3cn\u201d,sizeof(a))\uff1b", "}", "\u301013\u301180", "\u5171\u7528\u4f53\u53d8\u91cf\u6240\u5360\u7684\u5185\u5b58\u957f\u5ea6\u7b49\u4e8e\u6700\u957f\u7684\u6210\u5458\u7684\u957f\u5ea6\uff0c\u6240\u4ee5\u53d8\u91cf\u3001STU\u6240\u5360\u7684\u5b57\u8282\u6570\u7b49\u4e8e\u5176\u6210\u5458score[4]\u6240\u5360\u7684\u5b57\u8282\u6570\uff0c\u5373\u4e3a16\u4e2a\u5b57\u8282\uff0c\u6700\u7ec8\u6253\u5370\u51fa\u5171\u7528\u4f53\u6570\u7ec4a[5]\u7684\u957f\u5ea6\u4e3aJ6*5=80\u3002", "\u00a0", "(14)\u82e5f1)\u5df2\u6b63\u786e\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u6587\u4ef6\u6307\u9488\uff0cd1\uff0edat\u4e3a\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u8bf7\u586b\u7a7a\uff0c\u4ee5\u4fbf\u4e3a\u201d\u8bfb\u201d\u800c\u6253\u5f00\u6b64\u6587\u4ef6\uff1af1)\uff1afopen(", ")\uff1b\u3002", "\u301014\u3011\u201cd1\uff0edat\u201d\uff0e\u201crb\u201d", "ANSIC\u89c4\u5b9a\u4e86\u6807\u51c6\u8f93\u5165\u8f93\u51fa\u51fd\u6570\u5e93\uff0c\u7528fopen()\u51fd\u6570\u6765\u5b9e\u73b0\u6253\u5f00\u6587\u4ef6\uff0c\u5176\u8c03\u7528\u65b9\u5f0f\u4e3a(fb\u5df2\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u6587\u4ef6\u6307\u9488)\uff1afb=fopen(\u6587\u4ef6\u540d\uff0c\u4f7f\u7528\u6587\u4ef6\u65b9\u5f0f)\u3002", "\u00a0", "(15)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u529f\u80fd\u662f\u5c06\u65e0\u7b26\u53f7\u516b\u8fdb\u5236\u6570\u6784\u6210\u7684\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5341\u8fdb\u5236\u7684\u6574\u6570\uff0c\u8bf7\u586b\u7a7a\u3002", "#include<stdio-b>", "main()", "{", "char*p\uff0cs[6]\uff1b", "int n\uff1a", "p=s\uff1b", "gets(p)\uff1b", "n=*p-\u20180\u2019\uff1b", "while(", "!=\u2019\uff3c0\u2019)n=n*8+*p-\u20190\u2019\uff1b", "printf(\u201d\uff05d\uff3cn\u201d\uff0cn)\uff1b", "}", "\u301015\u3011*++D", "\u672c\u9898\u4e2d\uff0c\u4e3b\u8981\u662f\u901a\u8fc7\u5c068\u8fdb\u5236\u6570\u5404\u4f4d\u4e0a\u7684\u6570\u4e58\u4ee5\u5bf9\u5e94\u4f4d\u7684\u6743\u503c\uff0c\u7136\u540e\u7d2f\u52a0\u8f6c\u6362\u621010\u8fdb\u5236\u6570\u7684\u3002\u5728\u7a0b\u5e8f\u4e2d\uff0cn=*p-\u20180\u2019\uff0c\u7528\u4e8e\u5c068\u8fdb\u5236\u5b57\u7b26\u4e32\u7684\u6700\u9ad8\u4f4d\u8f6c\u6362\u621010\u8fdb\u5236\u5b57\u7b26\u3002\u5728while\u5faa\u73af\u4e2d\uff0c\u901a\u8fc7\u4e0d\u65ad\u5bf9\u5df2\u8f6c\u6362\u768410\u8fdb\u5236\u6570*8+*p-\u20180\u2019\u5f62\u6210\u65b0\u768410\u8fdb\u5236\u6570\u3002\u7531\u4e8e\u5728\u8be5\u5faa\u73af\u4e2d\u6ca1\u6709\u5176\u5b83\u5730\u65b9\u5bf9\u6307\u9488p\u7684\u503c\u8fdb\u884c\u66f4\u6539\uff0c\u8981\u5b9e\u73b0\u5bf98\u8fdb\u5236\u5b57\u7b26\u4e32\u7684\u904d\u5386\uff0c\u5fc5\u987b\u8981\u5bf9\u5176\u8fdb\u884c\u81ea\u52a0\uff0c\u800c\u5728\u5faa\u73af\u7684\u5916\u9762\u5df1\u5904\u7406\u4e86\u7b2c1\u4e2a8\u8fdb\u5236\u5b57\u7b26\uff0c\u6545\u5e94\u8be5\u662f\u91c7\u7528\u5148\u81ea\u52a0\u7684\u5f62\u5f0f\uff0c\u540c\u65f6\u8981\u5bf9\u81ea\u52a0\u540e\u7684p\u6240\u5bf9\u5e94\u7684\u5b57\u7b26\u8fdb\u884c\u5224\u65ad\u4ee5\u786e\u5b9a\u8be5\u5b57\u7b26\u4e32\u662f\u5426\u7ed3\u675f\uff0c\u6545\u8be5\u7a7a\u5e94\u586b*++p\u3002", "\u00a0", "(16)\u8bbe\u6709\u5b9a\u4e49\uff1aint n\uff0c*k=&n\uff1b\uff0c\u4ee5\u4e0b\u8bed\u53e5\u5c06\u5229\u7528\u6307\u9488\u53d8\u91cfk\u8bfb\u5199\u53d8\u91cfn\u4e2d\u7684\u5185\u5bb9\uff0c\u8bf7\u5c06\u8bed\u00a0\u00a0\u00a0 \u53e5\u8865\u5145\u5b8c\u6574\u3002", "scanf(\u201d\uff05d\u201d,", ")\uff1b", "printf(\u201c\uff05d\u201d\uff0c", ")\uff1b", "\u301016\u3011k", "\u301017\u3011*k", "\u672c\u9898\u4e2d\u7684\u7b2b\u4e00\u7a7a\uff0c\u8981\u6c42\u8f93\u5165\u53d8\u91cfn\u7684\u5730\u5740\uff0c\u800c\u6307\u9488\u53d8\u91cfk\u6307\u5411\u6574\u578b\u53d8\u91cfn\uff0c\u6545\u586b\u5199k\uff0e\u7b2c\u4e8c\u7a7a\u8981\u6c42\u6253\u5370\u8f93\u51fa\u53d8\u91cfn\u7684\u503c\uff0c\u5e94\u8be5\u586b\u5165*k\u3002", "\u00a0", "(17)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u529f\u80fd\u662f\uff1a\u4ece\u952e\u76d8\u8f93\u5165\u4e00\u884c\u5b57\u7b26\uff0c\u5b58\u5165\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4\u4e2d\uff0c\u7136\u540e\u8f93\u51fa\u8be5\u5b57\u7b26\u00a0\u00a0\u00a0 \u4e32\uff0c\u8bf7\u586b\u7a7a\u3002", "#include<ctype\uff0eH>", "#include<stdio\uff0eh>", "main()", "{", "char str[8l]\uff0c*sptr\uff1b", "int i\uff1a", "for(I=0\uff1bi<80\uff1bi++)", "{\u00a0 str[I]=getchar()\uff1b", "if(str[I]==\u2019\uff3cn\u2019)break\uff1b", "}", "str[i]=", "\uff1b", "sptr=str\uff1b", "while(*sptr)putchar(*sptr", ")\uff1b", "}", "\u301018\u30110\u6216NULL", "\u301019\u3011++", "\u5728for\u5faa\u73af\u4e2d\uff0c\u5176\u4f5c\u7528\u662f\u76f4\u63a5\u4ece\u6807\u51c6\u8f93\u5165\u8bbe\u5907\u83b7\u53d6\u5b57\u7b26\uff0c\u76f4\u5230\u9047\u5230\u56de\u8f66\u7b26\u7ed3\u675f\u3002\u7531\u4e8e\u5728while\u5faa\u73af\u8f93\u51fa\u5b57\u7b26\u65f6\uff0c\u662f\u6839\u636e*sptr\u6765\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u7ed3\u675f\uff0c\u6545\u5728\u5b57\u7b26\u4e32\u7684\u7ed3\u675f\u90e8\u5206\u5fc5\u987b\u6dfb\u52a0\u4e0a\u5b57\u7b26\u2018\uff3c0\u2019\u3002\u5bf9\u4e8e\u7b2c\u4e8c\u7a7a\uff0c\u8981\u5b9e\u73b0\u5bf9\u5b57\u7b26\u4e32\u7684\u904d\u5386\uff0c\u5fc5\u987b\u8981\u8fdb\u884c\u81ea\u52a0\u64cd\u4f5c\uff0c\u4ee5\u4f7f\u4e0b\u6b21\u8bbf\u95ee\u65f6\u80fd\u591f\u8bbf\u95ee\u4e0b\u4e00\u4e2a\u5b57\u7b26\uff0c\u6545\u7b2c\u4e8c\u7a7a\u5e94\u4e3a++\u3002", "\u00a0", "(18)fun\u51fd\u6570\u7684\u529f\u80fd\u662f\uff1a\u9996\u5148\u5bf9a\u6240\u6307\u7684N\u884cN\u5217\u7684\u77e9\u9635\uff0c\u627e\u51fa\u5404\u884c\u4e2d\u7684\u6700\u5927\u7684\u6570\uff0c\u518d\u6c42\u8fd9N\u4e2a\u6700\u5927\u503c\u4e2d\u7684\u6700\u5c0f\u7684\u90a3\u4e2a\u6570\u4f5c\u4e3a\u51fd\u6570\u503c\u8fd4\u56de\u3002\u8bf7\u586b\u7a7a\u3002", "#include<stdio.h>", "#define N 100", "int fun(im(*a)[N])", "{ int row,col,max,min\uff1b", "for(row=0\uff1brow<N\uff1brow++)", "{for(max=a[row][0]\uff0ccol=1\uff1bcoI<N\uff1bcol++)", "if(", "]max=a[row][col]\uff1b", "if(row==0)min=max\uff1b", "else if(max<min)min=max\uff1b", "}", "retummin\uff1b", "}", "\u301020\u3011max<a[row][col]\u6216max<=a[row][col]\u6216a[row][col]>max\u6216a[row][col]>=max", "\u672c\u9898\u7a7a\u683c\u6240\u5728\u7684if\u6761\u4ef6\u8981\u6c42\u5224\u65ad\u51fa\u6bcf\u4e00\u884c\u4e2d\u7684\u6700\u5927\u6570\uff0c\u5e94\u8be5\u586b\u5199\u6761\u4ef6max<a[row][col]\u3002"], "title": "C\u8bed\u8a00\u7b14\u8bd5\u9898\u5e26\u7b54\u6848\uff08\u516b\uff09"},
{"contents": ["\u9898\u76ee\u5982\u4e0b\uff1a\u8981\u6c42\u9006\u5e8f\u8f93\u51fa\u8f93\u5165\u7684\u5b57\u7b26\u4e32\uff0c\u5e76\u4e14\u4e0d\u80fd\u7528\u7b2c\u4e09\u65b9\u53d8\u91cf\uff0c", "\u51fd\u6570\u7684\u539f\u578b\u662f char* strNCopy(const char* source,char* dest)", "\u8981\u6c42\u4e0d\u7528\u5e93\u51fd\u6570", "\u6211\u5199\u7684\u7a0b\u5e8f\u5982\u4e0b\uff1a", "#include #include char* strNCopy(const char* source,char* dest);", "int main(int argc, char *argv[])", "{ char* source=\u201d1241654654\u2033;", "char dest[strlen(source)];", "printf(\u201c%d\\n\u201d,strlen(dest));", "strNCopy(source,dest);", "printf(\u201c%s\\n\u201d,dest);", "system(\u201cPAUSE\u201d);", "return 0; } /*** *\u9006\u5e8f\u590d\u5236 */ char* strNCopy(const char* source,char* dest) { if(source!=NULL&&dest!=NULL) { while(*++source) ; while(*dest++=*\u2013source) ; return dest; } return NULL; } \u00a0\u4ee5\u4e0a\u4ee3\u7801\u770b\u4f3c\u5b9e\u73b0\u4e86\u6240\u8981\u6c42\u7684\u529f\u80fd\uff0c\u4f46\u662f\u6ca1\u6709\u5224\u65addest\u7684\u957f\u5ea6\uff0c\u6ca1\u6709\u8003\u8651\u76ee\u6807\u4e32\u80fd\u5426\u5bb9\u7eb3\u7684\u4e0b\u539f\u5b57\u7b26\u4e32"], "title": "C\u8bed\u8a00\u7684\u5b57\u7b26\u4e32\u590d\u5236\u9762\u8bd5\u9898"},
{"contents": ["\u8981\u6c42\uff1a", "1\u3001\u5b8c\u6210\u9700\u6c42\uff0c\u7a0b\u5e8f\u8fd0\u884c\u6b63\u786e\u3002", "2\u3001\u5de5\u4f5c\u539f\u7406\u6587\u6863\uff0c\u4f7f\u7528\u6587\u6863\u5b8c\u6574\u3002", "3\u3001\u4ee3\u7801\u89c4\u6574\u4f18\u7f8e\u3002\u6ce8\u91ca\u5f97\u5f53\u3002", "4\u3001\u8fd0\u884c\u901f\u5ea6\u8db3\u591f\u5feb\u3002", "5\u3001\u7528\u5de5\u5177\u5206\u6790\u51fa\u662f\u54ea\u4e9b\u4ee3\u7801\u6216\u51fd\u6570\u9020\u6210\u901f\u5ea6\u74f6\u9888\u3002", "\u00a0", "1\u3001\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\u7f16\u5199\u4e00\u4e2a\u6392\u5e8f\u7a0b\u5e8f\u3002\u88ab\u6392\u5e8f\u7684\u6587\u4ef6\u67098MB\u5927\u5c0f\uff0c\u4e00\u884c\u4e00\u4e2a\u968f\u673a\u6574\u6570(ASCII\u683c\u5f0f)\u3002\u8981\u6c42\u5bf9\u8fd9\u4e9b\u6574\u6570\u8fdb\u884c\u6392\u5e8f\uff0c\u5e76\u8ba1\u7b97\u5e73\u5747\u503c\uff0c\u6253\u5370\u51fa\u6392\u5e8f\u6240\u9700\u7684\u65f6\u95f4\u3002(20\u5206)", "\u00a0", "2\u3001\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\u7528dummy header\u6280\u5de7\u5b9e\u73b0\u4e00\u4e2a\u94fe\u8868DEMO\u3002\u8981\u6c42\u5177\u6709create, insert, delete, search\u529f\u80fd\u3002", "\u7f16\u5199\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f7f\u7528\u4e0a\u9762\u7684\u51fd\u6570\u3002\u4f7f\u7528dummy header\u6280\u5de7\u6709\u4ec0\u4e48\u4f18\u70b9\u3002(20\u5206)", "\u00a0", "3\u3001\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\u7528heapsort\u7b97\u6cd5\u5b9e\u73b0\u4f18\u5148\u961f\u5217\u3002\u8981\u6c42\u5177\u6709create, insert, delete\u529f\u80fd\u3002", "\u7f16\u5199\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f7f\u7528\u4e0a\u9762\u7684\u51fd\u6570\u3002\u4f7f\u7528heapsort\u7b97\u6cd5\u6709\u4ec0\u4e48\u4f18\u70b9\u3002(20\u5206)", "\u00a0", "\u7528trie(\u4e00\u79cd\u591a\u53c9\u6811)\u5b9e\u73b0\u4e00\u4e2a\u5b57\u5178\u3002\u8981\u6c42\u5177\u6709create, insert, delete, search\u529f\u80fd\u3002", "\u7f16\u5199\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f7f\u7528\u4e0a\u9762\u7684\u51fd\u6570\u3002\u4f7f\u7528trie\u6811\u6709\u4ec0\u4e48\u4f18\u70b9\u3002(20\u5206)"], "title": "C\u8bed\u8a00\u7efc\u5408\u7f16\u7a0b\u9898"},
{"contents": ["1\u3001\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\u201c\u5308\u7259\u5229\u547d\u540d\u6cd5\u201d\u6709\u4ec0\u4e48\u4f18\u7f3a\u70b9\uff1f(2\u5206)", "\u00a0", "2\u3001\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\u4e0b\u9762x, y, *p\u7684\u503c\u662f\u591a\u5c11\uff0c\u6709\u4ec0\u4e48\u95ee\u9898\uff1f(2\u5206)", "int x, y, z = 2;", "int *p=&z;", "x=sizeof*p;", "y=x/*p; /* x=?, *p=?, y=?, \u6709\u4ec0\u4e48\u95ee\u9898\uff1f*/", "\u00a0", "3\u3001\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\u4e0b\u9762\u7684\u8bed\u53e5\u662f\u4ec0\u4e48\u610f\u601d\uff1f\u5982\u4f55\u58f0\u660e\u6216\u5b9a\u4e49\u624d\u4f7f\u5b83\u4eec\u66f4\u6613\u61c2\uff1f(10\u5206)", "int (*foo())();", "int (*foo())[];", "int (*foo[])();", "(*(void(*)())0)();", "void (*signal(int,void(*)(int)))(int);", "\u00a0", "4\u3001\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\u672c\u9898(2\u5206)\u3002\u4e00\u822c\u4f7f\u7528malloc\u65f6\uff0c\u9700\u8981\u8fdb\u884c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u5982\uff1a", "char *s; s = (char *)malloc(31);", "\u4e0b\u9762\u4e2d???\u8be5\u5982\u4f55\u586b\u5199\uff0c\u624d\u53ef\u4ee5\u6b63\u786e\u6267\u884c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff1f", "int (*monthp)[31]; monthp = (???)malloc(31);", "\u00a0", "5\u3001\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\u5173\u4e8eC\u8bed\u8a00\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u7684\u8bb0\u5fc6\u6280\u5de7\u662f\u4ec0\u4e48\uff1f(2\u5206)", "/* \u4e0b\u9762r\u7684\u503c\u662f\u591a\u5c11 */", "int hi, low, r;", "hi=7;low=3;", "r=hi<<4+low;", "\u00a0", "6\u3001\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\u6307\u9488\u548c\u6570\u7ec4\u7684\u533a\u522b\u662f\u4ec0\u4e48\uff1f\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u58f0\u660e\u628a\u5b83\u4eec\u533a\u5206\u5f00\u3002(2\u5206)", "\u6307\u9488\u548c\u6570\u7ec4\u7684\u58f0\u660e\u5728\u4ec0\u4e48\u60c5\u51b5\u4e0b\u662f\u76f8\u540c\u7684\uff1f(2\u5206)", "\u00a0", "7\u3001\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "C\u8bed\u8a00\u7684\u5de6\u503c(lvalue)\u548c\u53f3\u503c(rvalue)\u7684\u542b\u4e49\u662f\u4ec0\u4e48\uff1f(2\u5206)", "\u00a0", "8\u3001\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\u4e3a\u4ec0\u4e48C\u8bed\u8a00\u53ef\u4ee5\u5b9e\u73b0printf(char *format, \u2026)\u8fd9\u6837\u53ef\u53d8\u53c2\u6570\u7684\u8c03\u7528\u5f62\u5f0f\uff1f\u8fd9\u6837\u6709\u4ec0\u4e48\u7f3a\u70b9\uff1f(2\u5206)", "\u00a0", "9\u3001\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\u8bf4\u660eC\u8bed\u8a00\u4e2d\u672f\u8bed\u201d\u58f0\u660e\u201d\u201d\u5b9a\u4e49\u201d\u201d\u539f\u578b\u201d\u7684\u542b\u4e49\uff1f(2\u5206)", "\u00a0", "10\u3001\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff0c\u8bf4\u660e\u4f7f\u7528assert\u548c\u9632\u9519\u4ee3\u7801\u7684\u533a\u522b\u3002(5\u5206)", "\u00a0", "11\u3001\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\u5bf9\u8bed\u53e5 if else \u4e0e\u64cd\u4f5c\u7b26 ? : \u4f7f\u7528\u573a\u5408\u7684\u6bd4\u8f83\u3002(2\u5206)", "\u00a0", "12\u3001\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u8f93\u5165\u4e00\u4e2a\u7684\u6574\u578b\u6570\u5b57\uff0c\u53ef\u4ee5\u9009\u62e9\u6309\u71678/10/16\u8fdb\u5236\u8f93\u51fa\u5b57\u7b26\u4e32\u3002\u6ce8\u610f\u8fb9\u754c\u503c\u3002(5\u5206)", "\u00a0", "13\u3001\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\u00a0", "\u672c\u9898(2\u5206)\u3002\u4e0b\u9762\u662f\u4e00\u4e2a16\u00d716\u7684\u9ed1\u767d\u56fe\u6807\uff1a", "static unsigned short stopwatch[] = {", "0\u00d707c6,", "0\u00d71ff7,", "0\u00d7383b,", "0\u00d7600c,", "0\u00d7600c,", "0xc006,", "0xc006,", "0xdf06,", "0xc106,", "0xc106,", "0\u00d7610c,", "0\u00d7610c,", "0\u00d73838,", "0\u00d71ff0,", "0\u00d707c0,", "0\u00d70000,", "};", "\u5982\u4f55\u4fee\u6539\u58f0\u660e\uff0c\u53ef\u4ee5\u4f7f\u4e4b\u5728\u6e90\u4ee3\u7801\u4e2d\u5f62\u8c61\u5730\u8868\u73b0\u51fa\u56fe\u5f62\u7684\u6a21\u6837\u3002", "\u00a0", "14\u3001\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\u8bf4\u51fa\u53ef\u4ee5\u4f7f\u7528calendar[11][30]\u53d8\u91cf\u7684\u56db\u79cd\u7c7b\u578b\u5b9a\u4e49\u3002(5\u5206)", "\u5982\uff1aint calendar[12][31]; /* \u4e8c\u7ef4\u6570\u7ec4 */", "\u00a0", "15\u3001\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\u4f7f\u7528strcmp\uff0c\u5f53\u5b57\u7b26\u4e32\u76f8\u540c\u65f6\u4f1a\u8fd4\u56de\u2019\\0\u2032\u3002\u4f46\u2019\\0\u2032\u4e00\u822c\u4f5c\u4e3a\u903b\u8f91\u5047\uff0c\u56e0\u6b64\u4e0b\u9762\u7684\u8bed\u53e5\u4e0d\u5bb9\u6613\u7406\u89e3:", "if (!strcmp(s, \u201cstring\u201d)) return EQUATION;", "\u5982\u4f55\u7ecf\u8fc7\u7b80\u5355\u4fee\u6539\uff0c\u4f7f\u4e4b\u66f4\u6613\u61c2\uff1f(2\u5206)", "\u00a0", "16\u3001\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\u7f16\u5199\u4e00\u4e2a\u81ea\u5df1\u7684\u5b8c\u5168C\u8bed\u8a00\u7248\u672c\u7684memset\u51fd\u6570\uff0c\u5e76\u4e14\u8bc4\u4ef7\u8fd9\u4e2a\u5b9e\u73b0\u7684\u6027\u80fd\u548c\u53ef\u79fb\u690d\u6027\u3002(5\u5206)", "\u00a0", "17\u3001\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\u5728\u6811\u548c\u56fe\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\u4e2d\uff0c\u901a\u5e38\u4f7f\u7528\u6307\u9488\u6765\u7ec4\u7ec7\u6570\u636e\u3002\u5982\u679c\u6211\u4eec\u8981\u628a\u8fd9\u4e9b\u6570\u636e\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\uff0c\u6307\u9488\u662f\u6ca1\u6709\u610f\u4e49\u7684\u3002\u6211\u4eec\u8be5\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002(2\u5206)", "\u00a0", "18\u3001\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\u75282\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u8ba1\u7b97long\u53d8\u91cf\u7684\u201d1\u2033bit\u7684\u4e2a\u6570\u3002(2\u5206)", "\u00a0", "19\u3001\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\u4efb\u610f\u7ed9\u51fa\u4e00\u4e2aC\u7684\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u5982\u4f55\u7f16\u7801\u5224\u65ad\u8fd9\u4e2a\u6570\u636e\u7c7b\u578b\u662f\u6709\u7b26\u53f7\u8fd8\u662f\u65e0\u7b26\u53f7\u7684\uff1f(2\u5206)", "\u4e0d\u5f97\u4e0a\u673a\u5b9e\u9a8c\uff0c\u5199\u51fa\u4e0b\u9762\u4ee3\u7801\u7684\u8f93\u51fa\u3002\u89e3\u91ca\u8fd9\u4e2a\u884c\u4e3a\u662f\u6807\u51c6\u5b9a\u4e49\u7684\uff0c\u8fd8\u662f\u4f9d\u8d56\u5b9e\u73b0\u7684\u3002(2\u5206)", "int i;", "for (i = 0; i < 10; i++) {", "int j = i;", "printf (\u201d%d\\n\u201d, j);", "}", "\u00a0", "20\u3001\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013", "\u5217\u51fa5\u79cd\u4ee5\u4e0a\u4f60\u6240\u770b\u8fc7\u7684C\u7f16\u7a0b\u7684\u4e66\u7c4d\uff0c\u5e76\u5199\u7b80\u8981\u4e66\u8bc4\u3002(5\u5206)", "\u5bf9C\u7684\u8bc4\u4ef7\u3002\u5982\u679c\u8981\u4f60\u6539\u9020\u4e00\u628a\u83dc\u5200\uff0c\u4f7f\u4e4b\u66f4\u52a0\u5b89\u5168\uff0c\u4f60\u662f\u5426\u4f1a\u4f7f\u7528\u8fd9\u6837\u7684\u83dc\u5200\uff0c\u4e3a\u4ec0\u4e48\uff1f(5\u5206)"], "title": "C\u8bed\u8a00\u9762\u8bd5\u95ee\u7b54\u9898"},
{"contents": [], "title": "C\u8bed\u8a00\u7b14\u8bd5"},
{"contents": ["C\u3001\u4f20\u7edf C++", "#include ", "//////////////////////////////////////////////////////////////////////////", "\u6807\u51c6 C++\u3000\uff08\u540c\u4e0a\u7684\u4e0d\u518d\u6ce8\u91ca\uff09", "#include ", "using namespace std;", "//////////////////////////////////////////////////////////////////////////", "C99 \u589e\u52a0", "#include "], "title": "C++\u6807\u51c6\u5e93\u5934\u6587\u4ef6\u90fd\u6709\u54ea\u4e9b\uff1f"},
{"contents": ["21\uff0e\u4ee5\u4e0b\u5173\u4e8eC\u8bed\u8a00\u6e90\u7a0b\u5e8f\u7684\u53d9\u8ff0\u4e2d\u9519\u8bef\u7684\u662f         \u3002", "\n    A\uff0e\u4e00\u4e2aC\u6e90\u7a0b\u5e8f\u7531\u82e5\u5e72\u4e2a\u51fd\u6570\u5b9a\u4e49\u7ec4\u6210\uff0c\u5176\u4e2d\u5fc5\u987b\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u540d\u4e3amain\u7684\u51fd\u6570\u5b9a\u4e49", "\n    B\uff0e\u51fd\u6570\u5b9a\u4e49\u7531\u51fd\u6570\u5934\u90e8\u548c\u51fd\u6570\u4f53\u4e24\u90e8\u5206\u7ec4\u6210", "\n    C\uff0e\u5728\u4e00\u4e2a\u51fd\u6570\u5b9a\u4e49\u7684\u51fd\u6570\u4f53\u4e2d\u5141\u8bb8\u5b9a\u4e49\u53e6\u4e00\u4e2a\u51fd\u6570", "\n    D\uff0e\u5728\u4e00\u4e2a\u51fd\u6570\u5b9a\u4e49\u7684\u51fd\u6570\u4f53\u4e2d\u5141\u8bb8\u8c03\u7528\u53e6\u4e00\u4e2a\u51fd\u6570\u6216\u8c03\u7528\u51fd\u6570\u81ea\u8eab", "\n22\uff0e\u4ee5\u4e0b\u8868\u793a\u4e2d\u4e0d\u80fd\u7528\u505aC\u8bed\u8a00\u5e38\u91cf\u7684\u662f           \u3002", "\n    A\uff0e0UL    B\uff0e(long)123    C\uff0e1e0    D\uff0e\u2019\\x2a\u2019", "23\uff0e\u4ee5\u4e0b\u6807\u8bc6\u7b26\u4e2d\u4e0d\u80fd\u7528\u505a\u53d8\u91cf\u540d\u6216\u81ea\u5b9a\u4e49\u51fd\u6570\u540d\u7684\u662f         \u3002", "\n    A\uff0emain    B\uff0escanf    C\uff0e_float    D. sizeof", "\n24\uff0e\u4ee5\u4e0b\u8868\u793a\u6570\u5b66\u5f0f\u201ca", "\n    A\uff0ea", "\n    C\uff0e!(a>=b)&&!(b>=c)    \tD\uff0e!(a>=b Il b>=c)", "\n25\uff0e\u4ee5\u4e0b\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f        \u3002", "\n    A\uff0e2  2    \tB\uff0e7  2    \tC\uff0e7  5    \tD\uff0e6  2", "\n    main()", "\n    {\t  chat a[7]=\u201da0\\0a0\\0\u201d\uff1bint i\uff0cj\uff1b", "\n    \t  i=sizeof(a);j=strlen(a)\uff1bprintf(\u201c%d%\u201c,i,j)\uff1b", "\n    }", "26\uff0e\u4e0b\u9762\u5173\u4e8e\u5faa\u73af\u8bed\u53e5for\u3001while\u3001do\u4e00while\u7684\u53d9\u8ff0\u4e2d\u6b63\u786e\u7684\u662f       \u3002", "\n    A\uff0e\u4e09\u79cd\u5faa\u73af\u8bed\u53e5\u7684\u5faa\u73af\u4f53\u90fd\u5fc5\u987b\u653e\u5165\u4e00\u5bf9\u82b1\u62ec\u53f7\u4e2d", "\n    B\uff0e\u4e09\u79cd\u5faa\u73af\u8bed\u53e5\u4e2d\u90fd\u53ef\u4ee5\u7f3a\u7701\u5faa\u73af\u7ec8\u6b62\u6761\u4ef6\u8868\u8fbe\u5f0f", "\n    C\uff0e\u4e09\u79cd\u5faa\u73af\u8bed\u53e5\u7684\u5faa\u73af\u4f53\u90fd\u81f3\u5c11\u88ab\u65e0\u6761\u4ef6\u5730\u6267\u884c\u4e00\u6b21", "\n    D\uff0e\u4e09\u79cd\u5faa\u73af\u8bed\u53e5\u90fd\u53ef\u80fd\u51fa\u73b0\u65e0\u7a77\u5faa\u73af", "27\uff0e\u4ee5\u4e0b\u7a0b\u5e8f\u6bb5\u4e2d\u6709\u8bed\u6cd5\u9519\u8bef\u7684\u662f        \u3002", "\n  A\uff0efun(char aa[10])", "\n    {    while(*aa)printf(\u201d\uff05c\u201d\uff0c*aa++)\uff1b}", "\n  B\uff0efun(char*aa)", "\n    {    while(aa[0])printf(\u201d\uff05c\u201d\uff0c*aa++)\uff1b}", "\n  C\uff0emain()", "\n    {    char*aa=\u201dHello!\u201d\uff1a}", "\n    \t   while(*aa)printf(\u201d\uff05c\u201d\uff0c*aa++)\uff1b", "\n    }", "\n  D\uff0emain()", "\n    {    char aa[10]=\u201dHello!\u201d\uff1b}", "\n    \t    while(*aa)printf(\u201d\uff05c\u201d\uff0c*aa++)\uff1b", "\n    }", "28\uff0e\u82e5\u6709\u58f0\u660e\u201cint a[]={1\uff0c2\uff0c3\uff0c4}\uff0c*p\uff0ci\uff1b\u201d\uff0c\u5219\u4ee5\u4e0b\u7a0b\u5e8f\u6bb5\u4e2d\u4e0d\u80fd\u8f93\u51fa13\u7684\u662f       \u3002", "\n    A\uff0efor(i=0;i\n    B\uff0efor(p=0; p\n    C\uff0efor(p=a; p", "\n    D\uff0efor(p=a,i=0;i\n", "29\uff0e\u82e5\u6709\u5982\u4e0b\u7684\u7c7b\u578b\u5b9a\u4e49\u548c\u53d8\u91cf\u58f0\u660e\uff0c\u5219\u5728\u7ed9\u51fa\u7684\u9009\u9879\u4e2d\u503c\u4e0d\u4e3a7\u7684\u8868\u8fbe\u5f0f\u662f        \u3002", "\n    A\uff0eptr->a       B\uff0e(++ptr)->a", "\n    C\uff0ex[1].a        D\uff0ex[0].b->a", "\n    struct ss", "\n    {  int a\uff1bstruct ss*b\uff1b}x[3]={{5\uff0c&x[1]}\uff0c{7\uff0c&x[2]}\uff0c{9\uff0c0}}\uff0c*ptr=&x[0]\uff1b", "\n30\uff0e\u82e5\u9700\u8981\u5bf9\u4e00\u4e2a\u6570\u636e\u6587\u4ef6abe\uff0etxt\u4e2d\u7684\u6570\u636e\u505a\u52a0\u5bc6\u5904\u7406\u5e76\u4e14\u9650\u5b9a\u53ea\u80fd\u505a\u4e00\u6b21\u6253\u5f00\u6587\u4ef6\u64cd\u4f5c\uff0c\u5219\u5728\u201cfp=fopen(\u201dabc.txt\u201d\uff0c\u6a21\u5f0f\u5b57\u7b26\u4e32)\uff1b\u201d\u4e2d\uff0c\u6a21\u5f0f\u5b57\u7b26\u4e32\u5e94\u5f53\u662f       \u3002", "\n  A\uff0e\u201cw+\u201c    B\uff0e\u201cr+\u201c    C\uff0e\u201ca+\u201c\tD\uff0e\u201dr\u201d", "1\uff0e\u5728\u58f0\u660e\u5c40\u90e8\u53d8\u91cf\u65f6\uff0c\u4e0d\u80fd\u4f7f\u7528\u7684\u5b58\u50a8\u7c7b\u522b\u6807\u8bc6\u7b26\u662f          \u3002", "\n2\uff0e\u4e0e\u6570\u5b66\u7b97\u5f0f          \u7b49\u4ef7\u7684c\u8bed\u8a00\u8868\u8fbe\u5f0f\u662f", "\n                                                        \u3002", "\n3\uff0e\u5728\u4ee5\u4e0b\u7a0b\u5e8f\u7684main\u51fd\u6570\u4e2d\uff0c\u8bed\u53e5\u201cfun(x\uff0c10)\uff1b\u201d\u5185\u7684\u5b9e\u53c2x\u8868\u793a\u6570\u7ec4x\u7684                     \u3002", "\n    void fun(int a[10]\uff0cint n)", "\n    {\tint i\uff1bfor(i=0\uff1bi\n    main()", "\n    {  int x[10]\uff1a{0}\uff1bfun(x\uff0c10)\uff1b}", "\n4\uff0e\u5df2\u77e5\u7a0b\u5e8f\u4e2d\u6709\u58f0\u660e\u201cint a\uff1blong b\uff1b\u201d\uff0c\u82e5\u9700\u8981\u63a5\u6536\u4ece\u952e\u76d8\u8f93\u5165\u7684\u7535\u8bdd\u53f7\u7801\u5b57\u7b26\u4e32(010)64782656(\u5176\u4e2d010\u662f\u533a\u53f7\uff0c64782656\u662f\u7535\u8bdd\u53f7\u7801)\uff0c\u5e76\u5c06\u5176\u4e2d\u7684\u533a\u53f7\u3001\u7535\u8bdd\u53f7\u7801\u5206\u522b\u5b58\u50a8\u5230\u53d8\u91cfa\u3001b\u4e2d\uff0c\u5219\u5b9e\u73b0\u8be5\u529f\u80fd\u7684\u8f93\u5165\u8bed\u53e5\u5e94\u4e3a\u201cseanf(\u201d                 \u201d\uff0c&a\uff0c&b)\uff1b\u201d\u3002", "\n5\uff0e\u82e5\u8981\u4f7f\u8868\u8fbe\u5f0fp=\u201djiangsu\u201d\u65e0\u4efb\u4f55\u9519\u8bef(\u5305\u62ec\u8bed\u6cd5\u9519\u8bef\u548c\u8b66\u544a\u9519\u8bef)\uff0cp\u7684\u58f0\u660e\u5f62\u5f0f\u5e94\u4e3a                \u3002", "6\uff0e\u4ee5\u4e0b\u7a0b\u5e8f\u8fd0\u884c\u540e\u8f93\u51fa\u7ed3\u679c\u4e3a          \u3002", "\n#include\u201dstdio h\u201d", "\nint a\uff1b", "\nint m(int a)", "\n{    static int s\uff1breturn(++s)+(--a)\uff1b  }", "\nvoid main()", "\n{\tint a=2\uff1bprintf(\u201d\uff05d\u201d\uff0cm(m(a)))\uff1b  }", "\n7\uff0e\u4ee5\u4e0b\u7a0b\u5e8f\u8fd0\u884c\u540e\u8f93\u51fa\u7ed3\u679c\u4e3a       \u3002", "\n    #include\u201dstdio\uff0eh\u201d", "\n    enum days", "\n    {  mon=1,tue,wed,thu,fri,sat,sun}today=tue\uff1b", "\n    void main()", "\n    {\t  printf(\u201d\uff05d\u201d\uff0c(today+2)\uff057)\uff1b}", "8\uff0e\u4ee5\u4e0b\u7a0b\u5e8f\u8fd0\u884c\u540e\u8f93\u51fa\u7ed3\u679c\u4e3a       \u3002", "\n    #include\u201cstdio.h\u201c", "\n    int mystery(int a\uff0cint b)", "\n    {     if(b==1)return a\uff1b", "\n    \t     else  return a+mystery(a\uff0cb-1)\uff1b", "\n    }", "\n    void main()", "\n    {     int x=5\uff0cy=3\uff1b", "\n          printf(\u201d\uff05d\\n\u201d\uff0c  mystery(x\uff0cy))\uff1b", "\n    }", "9\uff0e\u4ee5\u4e0b\u7a0b\u5e8f\u8fd0\u884c\u540e\u8f93\u51fa\u7ed3\u679c\u7684\u7b2c\u4e00\u884c\u4e3a       \uff0c\u7b2c\u4e8c\u884c\u4e3a        \u3002", "\n    #include\u201cstdio.h\u201c", "\n    void main()", "\n    {    int i=5\uff1b", "\n         do", "\n         {    switch(i\uff052)", "\n              {    case 0\uff1ai--\uff1bbreak\uff1b", "\n                   case 1\uff1ai--\uff1bcontinue\uff1b", "\n              }", "\n              i--\uff1bprintf(\u201d%d\\n\u201d\uff0ci)\uff1b", "\n         }while(i>0)\uff1b", "\n    }", "10\uff0e\u4ee5\u4e0b\u7a0b\u5e8f\u8fd0\u884c\u540e\u8f93\u51fa\u7ed3\u679c\u7684\u7b2c\u4e00\u884c\u4e3a          \uff0c\u7b2c\u4e8c\u884c\u4e3a             \u3002", "\n#include", "11\uff0e\u4ee5\u4e0b\u7a0b\u5e8f\u8fd0\u884c\u540e\u8f93\u51fa\u7ed3\u679c\u7684\u7b2c\u4e00\u884c\u4e3a             \uff0c\u7b2c\u4e8c\u884c\u4e3a            \uff0c\u7b2c\u4e09\u884c\u4e3a              \u3002", "\n#include\u201dstdio\uff0eh\u201d", "\n#define N 3", "\nmain()", "\n{  \t int a[N][N]\uff0cb[N*N]={1\uff0c1}\uff0ci\uff0cj\uff1b", "\n       for(i=2\uff1bi", "\n       for(i=0\uff1bi", "\n    \t      for(j=0\uff1bj", "\n      for(i=0\uff1bi", "\n      {   for(j=0\uff1bj", "\n    \t     printf(\u201d\\n\u201d)\uff1b", "\n      }", "\n}", "12\uff0e\u4ee5\u4e0b\u7a0b\u5e8f\u8fd0\u884c\u540e\u8f93\u51fa\u7ed3\u679c\u7684\u7b2c\u4e00\u884c\u4e3a             \uff0c\u7b2c\u4e8c\u884c\u4e3a            \uff0c\u7b2c\u4e09\u884c\u4e3a           \u3002", "\n#include\u201dstdio\uff0eh\u201d", "\n#include\u201cstdlib\uff0eh\u201c", "\nstruct node", "\n{\tchar data\uff1bstruct node *next\uff1b}\uff1b", "\nvoid main()", "\n{\t struet node*head=NULL\uff1b", "\n       char*item=\u201c32659\u201d\uff0c*p=item\uff1b", "\n       puts(item)\uff1b", "\n       while(*p)head=insert(head\uff0c*p++)\uff1b", "\n       print(head)\uff1b", "\n       del(head)\uff1b", "\n       print(head)\uff1b", "\n}"], "title": "2007\u5e74(\u6625)\u7b14\u8bd5\u8bd5\u5377 C\u7a0b\u5e8f\u8bbe\u8ba1"},
{"contents": ["\u9884\u5904\u7406\u5668\uff08Preprocessor\uff09", "\n1. \u7528\u9884\u5904\u7406\u6307\u4ee4#define \u58f0\u660e\u4e00\u4e2a\u5e38\u6570\uff0c\u7528\u4ee5\u8868\u660e1\u5e74\u4e2d\u6709\u591a\u5c11\u79d2\uff08\u5ffd\u7565\u95f0\u5e74\u95ee\u9898\uff09", "\n#define SECONDS_PER_YEAR (60 * 60 * 24 * 365)UL", "\n\u6211\u5728\u8fd9\u60f3\u770b\u5230\u51e0\u4ef6\u4e8b\u60c5\uff1a", "\n1). #define \u8bed\u6cd5\u7684\u57fa\u672c\u77e5\u8bc6\uff08\u4f8b\u5982\uff1a\u4e0d\u80fd\u4ee5\u5206\u53f7\u7ed3\u675f\uff0c\u62ec\u53f7\u7684\u4f7f\u7528\uff0c\u7b49\u7b49\uff09", "\n2). \u61c2\u5f97\u9884\u5904\u7406\u5668\u5c06\u4e3a\u4f60\u8ba1\u7b97\u5e38\u6570\u8868\u8fbe\u5f0f\u7684\u503c\uff0c\u56e0\u6b64\uff0c\u76f4\u63a5\u5199\u51fa\u4f60\u662f\u5982\u4f55\u8ba1\u7b97\u4e00\u5e74\u4e2d\u6709\u591a\u5c11\u79d2\u800c\u4e0d\u662f\u8ba1\u7b97\u51fa\u5b9e\u9645\u7684\u503c\uff0c\u662f\u66f4\u6e05\u6670\u800c\u6ca1\u6709\u4ee3\u4ef7\u7684\u3002", "\n3). \u610f\u8bc6\u5230\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u5c06\u4f7f\u4e00\u4e2a16\u4f4d\u673a\u7684\u6574\u578b\u6570\u6ea2\u51fa-\u56e0\u6b64\u8981\u7528\u5230\u957f\u6574\u578b\u7b26\u53f7L,\u544a\u8bc9\u7f16\u8bd1\u5668\u8fd9\u4e2a\u5e38\u6570\u662f\u7684\u957f\u6574\u578b\u6570\u3002", "\n4). \u5982\u679c\u4f60\u5728\u4f60\u7684\u8868\u8fbe\u5f0f\u4e2d\u7528\u5230UL\uff08\u8868\u793a\u65e0\u7b26\u53f7\u957f\u6574\u578b\uff09\uff0c\u90a3\u4e48\u4f60\u6709\u4e86\u4e00\u4e2a\u597d\u7684\u8d77\u70b9\u3002\u8bb0\u4f4f\uff0c\u7b2c\u4e00\u5370\u8c61\u5f88\u91cd\u8981\u3002", "\n2. \u5199\u4e00\u4e2a\u201c\u6807\u51c6\u201d\u5b8fMIN\uff0c\u8fd9\u4e2a\u5b8f\u8f93\u5165\u4e24\u4e2a\u53c2\u6570\u5e76\u8fd4\u56de\u8f83\u5c0f\u7684\u4e00\u4e2a\u3002", "\n#define MIN(A,B) ((A) \n\u8fd9\u4e2a\u6d4b\u8bd5\u662f\u4e3a\u4e0b\u9762\u7684\u76ee\u7684\u800c\u8bbe\u7684\uff1a", "\n1). \u6807\u8bc6#define\u5728\u5b8f\u4e2d\u5e94\u7528\u7684\u57fa\u672c\u77e5\u8bc6\u3002\u8fd9\u662f\u5f88\u91cd\u8981\u7684\uff0c\u56e0\u4e3a\u76f4\u5230\u5d4c\u5165(inline)\u64cd\u4f5c\u7b26\u53d8\u4e3a\u6807\u51c6C\u7684\u4e00\u90e8\u5206\uff0c\u5b8f\u662f\u65b9\u4fbf\u4ea7\u751f\u5d4c\u5165\u4ee3\u7801\u7684\u552f\u4e00\u65b9\u6cd5\uff0c\u5bf9\u4e8e\u5d4c\u5165\u5f0f\u7cfb\u7edf\u6765\u8bf4\uff0c\u4e3a\u4e86\u80fd\u8fbe\u5230\u8981\u6c42\u7684\u6027\u80fd\uff0c\u5d4c\u5165\u4ee3\u7801\u7ecf\u5e38\u662f\u5fc5\u987b\u7684\u65b9\u6cd5\u3002", "\n2). \u4e09\u91cd\u6761\u4ef6\u64cd\u4f5c\u7b26\u7684\u77e5\u8bc6\u3002\u8fd9\u4e2a\u64cd\u4f5c\u7b26\u5b58\u5728C\u8bed\u8a00\u4e2d\u7684\u539f\u56e0\u662f\u5b83\u4f7f\u5f97\u7f16\u8bd1\u5668\u80fd\u4ea7\u751f\u6bd4if-then-else\u66f4\u4f18\u5316\u7684\u4ee3\u7801\uff0c\u4e86\u89e3\u8fd9\u4e2a\u7528\u6cd5\u662f\u5f88\u91cd\u8981\u7684\u3002", "\n3). \u61c2\u5f97\u5728\u5b8f\u4e2d\u5c0f\u5fc3\u5730\u628a\u53c2\u6570\u7528\u62ec\u53f7\u62ec\u8d77\u6765", "\n4). \u6211\u4e5f\u7528\u8fd9\u4e2a\u95ee\u9898\u5f00\u59cb\u8ba8\u8bba\u5b8f\u7684\u526f\u4f5c\u7528\uff0c\u4f8b\u5982\uff1a\u5f53\u4f60\u5199\u4e0b\u9762\u7684\u4ee3\u7801\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\u4e8b\uff1f", "\nleast = MIN(*p++, b);", "\n3. \u9884\u5904\u7406\u5668\u6807\u8bc6#error\u7684\u76ee\u7684\u662f\u4ec0\u4e48\uff1f", "\n\u5982\u679c\u4f60\u4e0d\u77e5\u9053\u7b54\u6848\uff0c\u8bf7\u770b\u53c2\u8003\u6587\u732e1\u3002\u8fd9\u95ee\u9898\u5bf9\u533a\u5206\u4e00\u4e2a\u6b63\u5e38\u7684\u4f19\u8ba1\u548c\u4e00\u4e2a\u4e66\u5446\u5b50\u662f\u5f88\u6709\u7528\u7684\u3002\u53ea\u6709\u4e66\u5446\u5b50\u624d\u4f1a\u8bfbC\u8bed\u8a00\u8bfe\u672c\u7684\u9644\u5f55\u53bb\u627e\u51fa\u8c61\u8fd9\u79cd", "\n\u95ee\u9898\u7684\u7b54\u6848\u3002\u5f53\u7136\u5982\u679c\u4f60\u4e0d\u662f\u5728\u627e\u4e00\u4e2a\u4e66\u5446\u5b50\uff0c\u90a3\u4e48\u5e94\u8bd5\u8005\u6700\u597d\u5e0c\u671b\u81ea\u5df1\u4e0d\u8981\u77e5\u9053\u7b54\u6848\u3002", "\n\u6b7b\u5faa\u73af\uff08Infinite loops\uff09", "\n4. \u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\u7ecf\u5e38\u8981\u7528\u5230\u65e0\u9650\u5faa\u73af\uff0c\u4f60\u600e\u4e48\u6837\u7528C\u7f16\u5199\u6b7b\u5faa\u73af\u5462\uff1f", "\n\u8fd9\u4e2a\u95ee\u9898\u7528\u51e0\u4e2a\u89e3\u51b3\u65b9\u6848\u3002\u6211\u9996\u9009\u7684\u65b9\u6848\u662f\uff1a", "\nwhile(1) { }", "\n\u4e00\u4e9b\u7a0b\u5e8f\u5458\u66f4\u559c\u6b22\u5982\u4e0b\u65b9\u6848\uff1a", "\nfor(;;) { }", "\n\u8fd9\u4e2a\u5b9e\u73b0\u65b9\u5f0f\u8ba9\u6211\u4e3a\u96be\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u8bed\u6cd5\u6ca1\u6709\u786e\u5207\u8868\u8fbe\u5230\u5e95\u600e\u4e48\u56de\u4e8b\u3002\u5982\u679c\u4e00\u4e2a\u5e94\u8bd5\u8005\u7ed9\u51fa\u8fd9\u4e2a\u4f5c\u4e3a\u65b9\u6848\uff0c\u6211\u5c06\u7528\u8fd9\u4e2a\u4f5c\u4e3a\u4e00\u4e2a\u673a\u4f1a\u53bb\u63a2\u7a76\u4ed6\u4eec\u8fd9\u6837\u505a\u7684", "\n\u57fa\u672c\u539f\u7406\u3002\u5982\u679c\u4ed6\u4eec\u7684\u57fa\u672c\u7b54\u6848\u662f\uff1a\u201c\u6211\u88ab\u6559\u7740\u8fd9\u6837\u505a\uff0c\u4f46\u4ece\u6ca1\u6709\u60f3\u5230\u8fc7\u4e3a\u4ec0\u4e48\u3002\u201d\u8fd9\u4f1a\u7ed9\u6211\u7559\u4e0b\u4e00\u4e2a\u574f\u5370\u8c61\u3002", "\n\u7b2c\u4e09\u4e2a\u65b9\u6848\u662f\u7528 goto", "\nLoop:", "\n...", "\ngoto Loop;", "\n\u5e94\u8bd5\u8005\u5982\u7ed9\u51fa\u4e0a\u9762\u7684\u65b9\u6848\uff0c\u8fd9\u8bf4\u660e\u6216\u8005\u4ed6\u662f\u4e00\u4e2a\u6c47\u7f16\u8bed\u8a00\u7a0b\u5e8f\u5458\uff08\u8fd9\u4e5f\u8bb8\u662f\u597d\u4e8b\uff09\u6216\u8005\u4ed6\u662f\u4e00\u4e2a\u60f3\u8fdb\u5165\u65b0\u9886\u57df\u7684BASIC/FORTRAN\u7a0b\u5e8f\u5458\u3002", "\n\u6570\u636e\u58f0\u660e\uff08Data declarations\uff09", "\n5. \u7528\u53d8\u91cfa\u7ed9\u51fa\u4e0b\u9762\u7684\u5b9a\u4e49", "\na) \u4e00\u4e2a\u6574\u578b\u6570\uff08An integer\uff09", "\nb) \u4e00\u4e2a\u6307\u5411\u6574\u578b\u6570\u7684\u6307\u9488\uff08A pointer to an integer\uff09", "\nc) \u4e00\u4e2a\u6307\u5411\u6307\u9488\u7684\u7684\u6307\u9488\uff0c\u5b83\u6307\u5411\u7684\u6307\u9488\u662f\u6307\u5411\u4e00\u4e2a\u6574\u578b\u6570\uff08A pointer to a pointer to an integer\uff09", "\nd) \u4e00\u4e2a\u670910\u4e2a\u6574\u578b\u6570\u7684\u6570\u7ec4\uff08An array of 10 integers\uff09", "\ne) \u4e00\u4e2a\u670910\u4e2a\u6307\u9488\u7684\u6570\u7ec4\uff0c\u8be5\u6307\u9488\u662f\u6307\u5411\u4e00\u4e2a\u6574\u578b\u6570\u7684\uff08An array of 10 pointers to integers\uff09", "\nf) \u4e00\u4e2a\u6307\u5411\u670910\u4e2a\u6574\u578b\u6570\u6570\u7ec4\u7684\u6307\u9488\uff08A pointer to an array of 10 integers\uff09", "\ng) \u4e00\u4e2a\u6307\u5411\u51fd\u6570\u7684\u6307\u9488\uff0c\u8be5\u51fd\u6570\u6709\u4e00\u4e2a\u6574\u578b\u53c2\u6570\u5e76\u8fd4\u56de\u4e00\u4e2a\u6574\u578b\u6570\uff08A pointer to a function that takes an integer as an argument and returns an integer\uff09", "\nh) \u4e00\u4e2a\u670910\u4e2a\u6307\u9488\u7684\u6570\u7ec4\uff0c\u8be5\u6307\u9488\u6307\u5411\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u6709\u4e00\u4e2a\u6574\u578b\u53c2\u6570\u5e76\u8fd4\u56de\u4e00\u4e2a\u6574\u578b\u6570\uff08 An array of ten pointers to functions that take an integer argument and return an integer \uff09", "\n\u7b54\u6848\u662f\uff1a", "\na) int a; // An integer", "\nb) int *a; // A pointer to an integer", "\nc) int **a; // A pointer to a pointer to an integer", "\nd) int a[10]; // An array of 10 integers", "\ne) int *a[10]; // An array of 10 pointers to integers", "\nf) int (*a)[10]; // A pointer to an array of 10 integers", "\ng) int (*a)(int); // A pointer to a function a that takes an integer argument and returns an integer", "\nh) int (*a[10])(int); // An array of 10 pointers to functions that take an integer argument and return an integer", "\n\u4eba\u4eec\u7ecf\u5e38\u58f0\u79f0\u8fd9\u91cc\u6709\u51e0\u4e2a\u95ee\u9898\u662f\u90a3\u79cd\u8981\u7ffb\u4e00\u4e0b\u4e66\u624d\u80fd\u56de\u7b54\u7684\u95ee\u9898\uff0c\u6211\u540c\u610f\u8fd9\u79cd\u8bf4\u6cd5\u3002\u5f53\u6211\u5199\u8fd9\u7bc7\u6587\u7ae0\u65f6\uff0c\u4e3a\u4e86\u786e\u5b9a\u8bed\u6cd5\u7684\u6b63\u786e\u6027\uff0c\u6211\u7684\u786e\u67e5\u4e86\u4e00\u4e0b\u4e66\u3002", "\n\u4f46\u662f\u5f53\u6211\u88ab\u9762\u8bd5\u7684\u65f6\u5019\uff0c\u6211\u671f\u671b\u88ab\u95ee\u5230\u8fd9\u4e2a\u95ee\u9898\uff08\u6216\u8005\u76f8\u8fd1\u7684\u95ee\u9898\uff09\u3002\u56e0\u4e3a\u5728\u88ab\u9762\u8bd5\u7684\u8fd9\u6bb5\u65f6\u95f4\u91cc\uff0c\u6211\u786e\u5b9a\u6211\u77e5\u9053\u8fd9\u4e2a\u95ee\u9898\u7684\u7b54\u6848\u3002\u5e94\u8bd5\u8005\u5982\u679c\u4e0d\u77e5\u9053", "\n\u6240\u6709\u7684\u7b54\u6848\uff08\u6216\u81f3\u5c11\u5927\u90e8\u5206\u7b54\u6848\uff09\uff0c\u90a3\u4e48\u4e5f\u5c31\u6ca1\u6709\u4e3a\u8fd9\u6b21\u9762\u8bd5\u505a\u51c6\u5907\uff0c\u5982\u679c\u8be5\u9762\u8bd5\u8005\u6ca1\u6709\u4e3a\u8fd9\u6b21\u9762\u8bd5\u505a\u51c6\u5907\uff0c\u90a3\u4e48\u4ed6\u53c8\u80fd\u4e3a\u4ec0\u4e48\u51fa\u51c6\u5907\u5462\uff1f", "\nStatic", "\n6. \u5173\u952e\u5b57static\u7684\u4f5c\u7528\u662f\u4ec0\u4e48\uff1f", "\n\u8fd9\u4e2a\u7b80\u5355\u7684\u95ee\u9898\u5f88\u5c11\u6709\u4eba\u80fd\u56de\u7b54\u5b8c\u5168\u3002\u5728C\u8bed\u8a00\u4e2d\uff0c\u5173\u952e\u5b57static\u6709\u4e09\u4e2a\u660e\u663e\u7684\u4f5c\u7528\uff1a", "\n1). \u5728\u51fd\u6570\u4f53\uff0c\u4e00\u4e2a\u88ab\u58f0\u660e\u4e3a\u9759\u6001\u7684\u53d8\u91cf\u5728\u8fd9\u4e00\u51fd\u6570\u88ab\u8c03\u7528\u8fc7\u7a0b\u4e2d\u7ef4\u6301\u5176\u503c\u4e0d\u53d8\u3002", "\n2). \u5728\u6a21\u5757\u5185\uff08\u4f46\u5728\u51fd\u6570\u4f53\u5916\uff09\uff0c\u4e00\u4e2a\u88ab\u58f0\u660e\u4e3a\u9759\u6001\u7684\u53d8\u91cf\u53ef\u4ee5\u88ab\u6a21\u5757\u5185\u6240\u7528\u51fd\u6570\u8bbf\u95ee\uff0c\u4f46\u4e0d\u80fd\u88ab\u6a21\u5757\u5916\u5176\u5b83\u51fd\u6570\u8bbf\u95ee\u3002\u5b83\u662f\u4e00\u4e2a\u672c\u5730\u7684\u5168\u5c40\u53d8\u91cf\u3002", "\n3). \u5728\u6a21\u5757\u5185\uff0c\u4e00\u4e2a\u88ab\u58f0\u660e\u4e3a\u9759\u6001\u7684\u51fd\u6570\u53ea\u53ef\u88ab\u8fd9\u4e00\u6a21\u5757\u5185\u7684\u5176\u5b83\u51fd\u6570\u8c03\u7528\u3002\u90a3\u5c31\u662f\uff0c\u8fd9\u4e2a\u51fd\u6570\u88ab\u9650\u5236\u5728\u58f0\u660e\u5b83\u7684\u6a21\u5757\u7684\u672c\u5730\u8303\u56f4\u5185\u4f7f\u7528\u3002", "\n\u5927\u591a\u6570\u5e94\u8bd5\u8005\u80fd\u6b63\u786e\u56de\u7b54\u7b2c\u4e00\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u80fd\u6b63\u786e\u56de\u7b54\u7b2c\u4e8c\u90e8\u5206\uff0c\u540c\u662f\u5f88\u5c11\u7684\u4eba\u80fd\u61c2\u5f97\u7b2c\u4e09\u90e8\u5206\u3002\u8fd9\u662f\u4e00\u4e2a\u5e94\u8bd5\u8005\u7684\u4e25\u91cd\u7684\u7f3a\u70b9\uff0c\u56e0\u4e3a\u4ed6\u663e\u7136\u4e0d\u61c2\u5f97\u672c\u5730\u5316\u6570\u636e\u548c\u4ee3\u7801\u8303\u56f4\u7684\u597d\u5904\u548c\u91cd\u8981\u6027\u3002", "\nConst", "\n7\uff0e\u5173\u952e\u5b57const\u662f\u4ec0\u4e48\u542b\u610f\uff1f", "\n\u6211\u53ea\u8981\u4e00\u542c\u5230\u88ab\u9762\u8bd5\u8005\u8bf4\uff1a\u201cconst\u610f\u5473\u7740\u5e38\u6570\u201d\uff0c\u6211\u5c31\u77e5\u9053\u6211\u6b63\u5728\u548c\u4e00\u4e2a\u4e1a\u4f59\u8005\u6253\u4ea4\u9053\u3002\u53bb\u5e74Dan Saks\u5df2\u7ecf\u5728\u4ed6\u7684\u6587\u7ae0\u91cc\u5b8c\u5168\u6982\u62ec\u4e86const\u7684\u6240\u6709\u7528\u6cd5\uff0c\u56e0\u6b64ESP(\u8bd1\u8005\uff1aEmbedded Systems Programming)\u7684\u6bcf\u4e00\u4f4d\u8bfb\u8005\u5e94\u8be5\u975e\u5e38\u719f\u6089const\u80fd\u505a\u4ec0\u4e48\u548c\u4e0d\u80fd\u505a\u4ec0\u4e48.", "\n\u5982\u679c\u4f60\u4ece\u6ca1\u6709\u8bfb\u5230\u90a3\u7bc7\u6587\u7ae0\uff0c\u53ea\u8981\u80fd\u8bf4\u51faconst\u610f\u5473\u7740\u201c\u53ea\u8bfb\u201d\u5c31\u53ef\u4ee5\u4e86\u3002\u5c3d\u7ba1\u8fd9\u4e2a\u7b54\u6848\u4e0d\u662f\u5b8c\u5168\u7684\u7b54\u6848\uff0c\u4f46\u6211\u63a5\u53d7\u5b83\u4f5c\u4e3a\u4e00\u4e2a\u6b63\u786e\u7684\u7b54\u6848\u3002\uff08\u5982\u679c\u4f60\u60f3\u77e5\u9053\u66f4\u8be6\u7ec6\u7684\u7b54\u6848\uff0c\u4ed4\u7ec6\u8bfb\u4e00\u4e0bSaks\u7684\u6587\u7ae0\u5427\u3002\uff09\u5982\u679c\u5e94\u8bd5\u8005\u80fd\u6b63\u786e\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u5c06\u95ee\u4ed6\u4e00\u4e2a\u9644\u52a0\u7684\u95ee\u9898\uff1a\u4e0b\u9762\u7684\u58f0\u660e\u90fd\u662f\u4ec0\u4e48\u610f\u601d\uff1f", "\nconst int a;", "\nint const a;", "\nconst int *a;", "\nint * const a;", "\nint const * a const;", "\n\u524d\u4e24\u4e2a\u7684\u4f5c\u7528\u662f\u4e00\u6837\uff0ca\u662f\u4e00\u4e2a\u5e38\u6574\u578b\u6570\u3002\u7b2c\u4e09\u4e2a\u610f\u5473\u7740a\u662f\u4e00\u4e2a\u6307\u5411\u5e38\u6574\u578b\u6570\u7684\u6307\u9488\uff08\u4e5f\u5c31\u662f\uff0c\u6574\u578b\u6570\u662f\u4e0d\u53ef\u4fee\u6539\u7684\uff0c\u4f46\u6307\u9488\u53ef\u4ee5\uff09\u3002\u7b2c\u56db\u4e2a\u610f\u601da\u662f\u4e00\u4e2a\u6307\u5411\u6574\u578b\u6570\u7684\u5e38\u6307\u9488\uff08\u4e5f\u5c31\u662f\u8bf4\uff0c\u6307\u9488\u6307\u5411\u7684\u6574\u578b\u6570\u662f\u53ef\u4ee5\u4fee\u6539\u7684\uff0c\u4f46\u6307\u9488\u662f\u4e0d\u53ef\u4fee\u6539\u7684\uff09\u3002\u6700\u540e\u4e00\u4e2a\u610f\u5473\u7740a\u662f\u4e00\u4e2a\u6307\u5411\u5e38\u6574\u578b\u6570\u7684\u5e38\u6307\u9488\uff08\u4e5f\u5c31\u662f\u8bf4\uff0c\u6307\u9488\u6307\u5411\u7684\u6574\u578b\u6570\u662f\u4e0d\u53ef\u4fee\u6539\u7684\uff0c\u540c\u65f6\u6307\u9488\u4e5f\u662f\u4e0d\u53ef\u4fee\u6539\u7684\uff09\u3002\u5982\u679c\u5e94\u8bd5\u8005\u80fd\u6b63\u786e\u56de\u7b54\u8fd9\u4e9b\u95ee\u9898\uff0c\u90a3\u4e48\u4ed6\u5c31\u7ed9\u6211\u7559\u4e0b\u4e86\u4e00\u4e2a\u597d\u5370\u8c61\u3002\u987a\u5e26\u63d0\u4e00\u53e5\uff0c\u4e5f\u8bb8\u4f60\u53ef\u80fd\u4f1a\u95ee\uff0c\u5373\u4f7f\u4e0d\u7528\u5173\u952e\u5b57 const\uff0c\u4e5f\u8fd8\u662f\u80fd\u5f88\u5bb9\u6613\u5199\u51fa\u529f\u80fd\u6b63\u786e\u7684\u7a0b\u5e8f\uff0c\u90a3\u4e48\u6211\u4e3a\u4ec0\u4e48\u8fd8\u8981\u5982\u6b64\u770b\u91cd\u5173\u952e\u5b57const\u5462\uff1f\u6211\u4e5f\u5982\u4e0b\u7684\u51e0\u4e0b\u7406\u7531\uff1a", "\n1). \u5173\u952e\u5b57const\u7684\u4f5c\u7528\u662f\u4e3a\u7ed9\u8bfb\u4f60\u4ee3\u7801\u7684\u4eba\u4f20\u8fbe\u975e\u5e38\u6709\u7528\u7684\u4fe1\u606f\uff0c\u5b9e\u9645\u4e0a\uff0c\u58f0\u660e\u4e00\u4e2a\u53c2\u6570\u4e3a\u5e38\u91cf\u662f\u4e3a\u4e86\u544a\u8bc9\u4e86\u7528\u6237\u8fd9\u4e2a\u53c2\u6570\u7684\u5e94\u7528\u76ee\u7684\u3002\u5982\u679c\u4f60\u66fe\u82b1\u5f88\u591a\u65f6\u95f4\u6e05\u7406\u5176\u5b83\u4eba\u7559\u4e0b\u7684\u5783\u573e\uff0c\u4f60\u5c31\u4f1a\u5f88\u5feb\u5b66\u4f1a\u611f\u8c22\u8fd9\u70b9\u591a\u4f59\u7684\u4fe1\u606f\u3002\uff08\u5f53\u7136\uff0c\u61c2\u5f97\u7528const\u7684\u7a0b\u5e8f\u5458\u5f88\u5c11\u4f1a\u7559\u4e0b\u7684\u5783\u573e\u8ba9\u522b\u4eba\u6765\u6e05\u7406\u7684\u3002\uff09", "\n2). \u901a\u8fc7\u7ed9\u4f18\u5316\u5668\u4e00\u4e9b\u9644\u52a0\u7684\u4fe1\u606f\uff0c\u4f7f\u7528\u5173\u952e\u5b57const\u4e5f\u8bb8\u80fd\u4ea7\u751f\u66f4\u7d27\u51d1\u7684\u4ee3\u7801\u3002", "\n3). \u5408\u7406\u5730\u4f7f\u7528\u5173\u952e\u5b57const\u53ef\u4ee5\u4f7f\u7f16\u8bd1\u5668\u5f88\u81ea\u7136\u5730\u4fdd\u62a4\u90a3\u4e9b\u4e0d\u5e0c\u671b\u88ab\u6539\u53d8\u7684\u53c2\u6570\uff0c\u9632\u6b62\u5176\u88ab\u65e0\u610f\u7684\u4ee3\u7801\u4fee\u6539\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11bug\u7684\u51fa\u73b0\u3002", "\nVolatile", "\n8. \u5173\u952e\u5b57volatile\u6709\u4ec0\u4e48\u542b\u610f \u5e76\u7ed9\u51fa\u4e09\u4e2a\u4e0d\u540c\u7684\u4f8b\u5b50\u3002", "\n\u4e00\u4e2a\u5b9a\u4e49\u4e3avolatile\u7684\u53d8\u91cf\u662f\u8bf4\u8fd9\u53d8\u91cf\u53ef\u80fd\u4f1a\u88ab\u610f\u60f3\u4e0d\u5230\u5730\u6539\u53d8\uff0c\u8fd9\u6837\uff0c\u7f16\u8bd1\u5668\u5c31\u4e0d\u4f1a\u53bb\u5047\u8bbe\u8fd9\u4e2a\u53d8\u91cf\u7684\u503c\u4e86\u3002\u7cbe\u786e\u5730\u8bf4\u5c31\u662f\uff0c\u4f18\u5316\u5668\u5728\u7528\u5230\u8fd9\u4e2a\u53d8\u91cf\u65f6\u5fc5\u987b\u6bcf\u6b21\u90fd\u5c0f\u5fc3\u5730\u91cd\u65b0\u8bfb\u53d6\u8fd9\u4e2a\u53d8\u91cf\u7684\u503c\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u4fdd\u5b58\u5728\u5bc4\u5b58\u5668\u91cc\u7684\u5907\u4efd\u3002\u4e0b\u9762\u662fvolatile\u53d8\u91cf\u7684\u51e0\u4e2a\u4f8b\u5b50\uff1a", "\n1). \u5e76\u884c\u8bbe\u5907\u7684\u786c\u4ef6\u5bc4\u5b58\u5668\uff08\u5982\uff1a\u72b6\u6001\u5bc4\u5b58\u5668\uff09", "\n2). \u4e00\u4e2a\u4e2d\u65ad\u670d\u52a1\u5b50\u7a0b\u5e8f\u4e2d\u4f1a\u8bbf\u95ee\u5230\u7684\u975e\u81ea\u52a8\u53d8\u91cf(Non-automatic variables)", "\n3). \u591a\u7ebf\u7a0b\u5e94\u7528\u4e2d\u88ab\u51e0\u4e2a\u4efb\u52a1\u5171\u4eab\u7684\u53d8\u91cf", "\n\u56de\u7b54\u4e0d\u51fa\u8fd9\u4e2a\u95ee\u9898\u7684\u4eba\u662f\u4e0d\u4f1a\u88ab\u96c7\u4f63\u7684\u3002\u6211\u8ba4\u4e3a\u8fd9\u662f\u533a\u5206C\u7a0b\u5e8f\u5458\u548c\u5d4c\u5165\u5f0f\u7cfb\u7edf\u7a0b\u5e8f\u5458\u7684\u6700\u57fa\u672c\u7684\u95ee\u9898\u3002\u5d4c\u5165\u5f0f\u7cfb\u7edf\u7a0b\u5e8f\u5458\u7ecf\u5e38\u540c\u786c\u4ef6\u3001\u4e2d\u65ad\u3001RTOS\u7b49\u7b49\u6253\u4ea4\u9053\uff0c\u6240\u7528\u8fd9\u4e9b\u90fd\u8981\u6c42volatile\u53d8\u91cf\u3002\u4e0d\u61c2\u5f97volatile\u5185\u5bb9\u5c06\u4f1a\u5e26\u6765\u707e\u96be\u3002", "\n\u5047\u8bbe\u88ab\u9762\u8bd5\u8005\u6b63\u786e\u5730\u56de\u7b54\u4e86\u8fd9\u662f\u95ee\u9898\uff08\u55ef\uff0c\u6000\u7591\u8fd9\u5426\u4f1a\u662f\u8fd9\u6837\uff09\uff0c\u6211\u5c06\u7a0d\u5fae\u6df1\u7a76\u4e00\u4e0b\uff0c\u770b\u4e00\u4e0b\u8fd9\u5bb6\u4f19\u662f\u4e0d\u662f\u76f4\u6b63\u61c2\u5f97volatile\u5b8c\u5168\u7684\u91cd\u8981\u6027\u3002", "\n1). \u4e00\u4e2a\u53c2\u6570\u65e2\u53ef\u4ee5\u662fconst\u8fd8\u53ef\u4ee5\u662fvolatile\u5417\uff1f\u89e3\u91ca\u4e3a\u4ec0\u4e48\u3002", "\n2). \u4e00\u4e2a\u6307\u9488\u53ef\u4ee5\u662fvolatile \u5417\uff1f\u89e3\u91ca\u4e3a\u4ec0\u4e48\u3002", "\n3). \u4e0b\u9762\u7684\u51fd\u6570\u6709\u4ec0\u4e48\u9519\u8bef\uff1a", "\nint square(volatile int *ptr)", "\n{ return *ptr * *ptr;", "\n} \u4e0b\u9762\u662f\u7b54\u6848\uff1a", "\n1). \u662f\u7684\u3002\u4e00\u4e2a\u4f8b\u5b50\u662f\u53ea\u8bfb\u7684\u72b6\u6001\u5bc4\u5b58\u5668\u3002\u5b83\u662fvolatile\u56e0\u4e3a\u5b83\u53ef\u80fd\u88ab\u610f\u60f3\u4e0d\u5230\u5730\u6539\u53d8\u3002\u5b83\u662fconst\u56e0\u4e3a\u7a0b\u5e8f\u4e0d\u5e94\u8be5\u8bd5\u56fe\u53bb\u4fee\u6539\u5b83\u3002", "\n2). \u662f\u7684\u3002\u5c3d\u7ba1\u8fd9\u5e76\u4e0d\u5f88\u5e38\u89c1\u3002\u4e00\u4e2a\u4f8b\u5b50\u662f\u5f53\u4e00\u4e2a\u4e2d\u670d\u52a1\u5b50\u7a0b\u5e8f\u4fee\u8be5\u4e00\u4e2a\u6307\u5411\u4e00\u4e2abuffer\u7684\u6307\u9488\u65f6\u3002", "\n3). \u8fd9\u6bb5\u4ee3\u7801\u7684\u6709\u4e2a\u6076\u4f5c\u5267\u3002\u8fd9\u6bb5\u4ee3\u7801\u7684\u76ee\u7684\u662f\u7528\u6765\u8fd4\u6307\u9488*ptr\u6307\u5411\u503c\u7684\u5e73\u65b9\uff0c\u4f46\u662f\uff0c\u7531\u4e8e*ptr\u6307\u5411\u4e00\u4e2avolatile\u578b\u53c2\u6570\uff0c\u7f16\u8bd1\u5668\u5c06\u4ea7\u751f\u7c7b\u4f3c\u4e0b\u9762\u7684\u4ee3\u7801\uff1a", "\nint square(volatile int *ptr)", "\n{ int a,b;", "\na = *ptr;", "\nb = *ptr;", "\nreturn a * b;", "\n} \u7531\u4e8e*ptr\u7684\u503c\u53ef\u80fd\u88ab\u610f\u60f3\u4e0d\u5230\u5730\u8be5\u53d8\uff0c\u56e0\u6b64a\u548cb\u53ef\u80fd\u662f\u4e0d\u540c\u7684\u3002\u7ed3\u679c\uff0c\u8fd9\u6bb5\u4ee3\u7801\u53ef\u80fd\u8fd4\u4e0d\u662f\u4f60\u6240\u671f\u671b\u7684\u5e73\u65b9\u503c\uff01\u6b63\u786e\u7684\u4ee3\u7801\u5982\u4e0b\uff1a", "\nlong square(volatile int *ptr)", "\n{ int a;", "\na = *ptr;", "\nreturn a * a;", "\n}", "\n\u4f4d\u64cd\u4f5c\uff08Bit manipulation\uff09", "\n9. \u5d4c\u5165\u5f0f\u7cfb\u7edf\u603b\u662f\u8981\u7528\u6237\u5bf9\u53d8\u91cf\u6216\u5bc4\u5b58\u5668\u8fdb\u884c\u4f4d\u64cd\u4f5c\u3002\u7ed9\u5b9a\u4e00\u4e2a\u6574\u578b\u53d8\u91cfa\uff0c\u5199\u4e24\u6bb5\u4ee3\u7801\uff0c\u7b2c\u4e00\u4e2a\u8bbe\u7f6ea\u7684bit 3\uff0c\u7b2c\u4e8c\u4e2a\u6e05\u9664a \u7684bit 3\u3002\u5728\u4ee5\u4e0a\u4e24\u4e2a\u64cd\u4f5c\u4e2d\uff0c\u8981\u4fdd\u6301\u5176\u5b83\u4f4d\u4e0d\u53d8\u3002", "\n\u5bf9\u8fd9\u4e2a\u95ee\u9898\u6709\u4e09\u79cd\u57fa\u672c\u7684\u53cd\u5e94", "\n1). \u4e0d\u77e5\u9053\u5982\u4f55\u4e0b\u624b\u3002\u8be5\u88ab\u9762\u8005\u4ece\u6ca1\u505a\u8fc7\u4efb\u4f55\u5d4c\u5165\u5f0f\u7cfb\u7edf\u7684\u5de5\u4f5c\u3002", "\n2). \u7528bit fields\u3002Bit fields\u662f\u88ab\u6254\u5230C\u8bed\u8a00\u6b7b\u89d2\u7684\u4e1c\u897f\uff0c\u5b83\u4fdd\u8bc1\u4f60\u7684\u4ee3\u7801\u5728\u4e0d\u540c\u7f16\u8bd1\u5668\u4e4b\u95f4\u662f\u4e0d\u53ef\u79fb\u690d\u7684\uff0c\u540c\u65f6\u4e5f\u4fdd\u8bc1\u4e86\u7684\u4f60\u7684\u4ee3\u7801\u662f\u4e0d\u53ef\u91cd\u7528\u7684\u3002\u6211\u6700\u8fd1\u4e0d\u5e78\u770b\u5230 Infineon\u4e3a\u5176\u8f83\u590d\u6742\u7684\u901a\u4fe1\u82af\u7247\u5199\u7684\u9a71\u52a8\u7a0b\u5e8f\uff0c\u5b83\u7528\u5230\u4e86bit fields\u56e0\u6b64\u5b8c\u5168\u5bf9\u6211\u65e0\u7528\uff0c\u56e0\u4e3a\u6211\u7684\u7f16\u8bd1\u5668\u7528\u5176\u5b83\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0bit fields\u7684\u3002\u4ece\u9053\u5fb7\u8bb2\uff1a\u6c38\u8fdc\u4e0d\u8981\u8ba9\u4e00\u4e2a\u975e\u5d4c\u5165\u5f0f\u7684\u5bb6\u4f19\u7c98\u5b9e\u9645\u786c\u4ef6\u7684\u8fb9\u3002", "\n3). \u7528 #defines \u548c bit masks \u64cd\u4f5c\u3002\u8fd9\u662f\u4e00\u4e2a\u6709\u6781\u9ad8\u53ef\u79fb\u690d\u6027\u7684\u65b9\u6cd5\uff0c\u662f\u5e94\u8be5\u88ab\u7528\u5230\u7684\u65b9\u6cd5\u3002\u6700\u4f73\u7684\u89e3\u51b3\u65b9\u6848\u5982\u4e0b\uff1a", "\n#define BIT3 (0x1\nstatic int a;", "\nvoid set_bit3(void)", "\n{ a |= BIT3;", "\n} void clear_bit3(void)", "\n{ a &= ~BIT3;", "\n} \u4e00\u4e9b\u4eba\u559c\u6b22\u4e3a\u8bbe\u7f6e\u548c\u6e05\u9664\u503c\u800c\u5b9a\u4e49\u4e00\u4e2a\u63a9\u7801\u540c\u65f6\u5b9a\u4e49\u4e00\u4e9b\u8bf4\u660e\u5e38\u6570\uff0c\u8fd9\u4e5f\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002\u6211\u5e0c\u671b\u770b\u5230\u51e0\u4e2a\u8981\u70b9\uff1a\u8bf4\u660e\u5e38\u6570\u3001|=\u548c&=~\u64cd\u4f5c\u3002", "\n10. \u5d4c\u5165\u5f0f\u7cfb\u7edf\u7ecf\u5e38\u5177\u6709\u8981\u6c42\u7a0b\u5e8f\u5458\u53bb\u8bbf\u95ee\u67d0\u7279\u5b9a\u7684\u5185\u5b58\u4f4d\u7f6e\u7684\u7279\u70b9\u3002\u5728\u67d0\u5de5\u7a0b\u4e2d\uff0c\u8981\u6c42\u8bbe\u7f6e\u4e00\u7edd\u5bf9\u5730\u5740\u4e3a0x67a9\u7684\u6574\u578b\u53d8\u91cf\u7684\u503c\u4e3a0xaa66\u3002\u7f16\u8bd1\u5668\u662f\u4e00\u4e2a\u7eaf\u7cb9\u7684ANSI\u7f16\u8bd1\u5668\u3002\u5199\u4ee3\u7801\u53bb\u5b8c\u6210\u8fd9\u4e00\u4efb\u52a1\u3002", "\n\u8fd9\u4e00\u95ee\u9898\u6d4b\u8bd5\u4f60\u662f\u5426\u77e5\u9053\u4e3a\u4e86\u8bbf\u95ee\u4e00\u7edd\u5bf9\u5730\u5740\u628a\u4e00\u4e2a\u6574\u578b\u6570\u5f3a\u5236\u8f6c\u6362\uff08typecast\uff09\u4e3a\u4e00\u6307\u9488\u662f\u5408\u6cd5\u7684\u3002\u8fd9\u4e00\u95ee\u9898\u7684\u5b9e\u73b0\u65b9\u5f0f\u968f\u7740\u4e2a\u4eba\u98ce\u683c\u4e0d\u540c\u800c\u4e0d\u540c\u3002\u5178\u578b\u7684\u7c7b\u4f3c\u4ee3\u7801\u5982\u4e0b\uff1a", "\nint *ptr;", "\nptr = (int *)0x67a9;", "\n*ptr = 0xaa55;", "\n\u4e00\u4e2a\u8f83\u6666\u6da9\u7684\u65b9\u6cd5\u662f\uff1a", "\n*(int * const)(0x67a9) = 0xaa55;", "\n\u5373\u4f7f\u4f60\u7684\u54c1\u5473\u66f4\u63a5\u8fd1\u7b2c\u4e8c\u79cd\u65b9\u6848\uff0c\u4f46\u6211\u5efa\u8bae\u4f60\u5728\u9762\u8bd5\u65f6\u4f7f\u7528\u7b2c\u4e00\u79cd\u65b9\u6848\u3002", "\n\u4e2d\u65ad\uff08Interrupts\uff09", "\n11. \u4e2d\u65ad\u662f\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\u91cd\u8981\u7684\u7ec4\u6210\u90e8\u5206\uff0c\u8fd9\u5bfc\u81f4\u4e86\u5f88\u591a\u7f16\u8bd1\u5f00\u53d1\u5546\u63d0\u4f9b\u4e00\u79cd\u6269\u5c55\u2014\u8ba9\u6807\u51c6C\u652f\u6301\u4e2d\u65ad\u3002\u5177\u4ee3\u8868\u4e8b\u5b9e\u662f\uff0c\u4ea7\u751f\u4e86\u4e00\u4e2a\u65b0\u7684\u5173\u952e\u5b57 __interrupt\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u5c31\u4f7f\u7528\u4e86__interrupt\u5173\u952e\u5b57\u53bb\u5b9a\u4e49\u4e86\u4e00\u4e2a\u4e2d\u65ad\u670d\u52a1\u5b50\u7a0b\u5e8f(ISR)\uff0c\u8bf7\u8bc4\u8bba\u4e00\u4e0b\u8fd9\u6bb5\u4ee3\u7801\u7684\u3002", "\n__interrupt double compute_area (double radius)", "\n{ double area = PI * radius * radius;", "\nprintf(\" Area = %f\", area);", "\nreturn area;", "\n}", "\n\u8fd9\u4e2a\u51fd\u6570\u6709\u592a\u591a\u7684\u9519\u8bef\u4e86\uff0c\u4ee5\u81f3\u8ba9\u4eba\u4e0d\u77e5\u4ece\u4f55\u8bf4\u8d77\u4e86\uff1a", "\n1). ISR \u4e0d\u80fd\u8fd4\u56de\u4e00\u4e2a\u503c\u3002\u5982\u679c\u4f60\u4e0d\u61c2\u8fd9\u4e2a\uff0c\u90a3\u4e48\u4f60\u4e0d\u4f1a\u88ab\u96c7\u7528\u7684\u3002", "\n2). ISR \u4e0d\u80fd\u4f20\u9012\u53c2\u6570\u3002\u5982\u679c\u4f60\u6ca1\u6709\u770b\u5230\u8fd9\u4e00\u70b9\uff0c\u4f60\u88ab\u96c7\u7528\u7684\u673a\u4f1a\u7b49\u540c\u7b2c\u4e00\u9879\u3002", "\n3). \u5728\u8bb8\u591a\u7684\u5904\u7406\u5668/\u7f16\u8bd1\u5668\u4e2d\uff0c\u6d6e\u70b9\u4e00\u822c\u90fd\u662f\u4e0d\u53ef\u91cd\u5165\u7684\u3002\u6709\u4e9b\u5904\u7406\u5668/\u7f16\u8bd1\u5668\u9700\u8981\u8ba9\u989d\u5904\u7684\u5bc4\u5b58\u5668\u5165\u6808\uff0c\u6709\u4e9b\u5904\u7406\u5668/\u7f16\u8bd1\u5668\u5c31\u662f\u4e0d\u5141\u8bb8\u5728ISR\u4e2d\u505a\u6d6e\u70b9\u8fd0\u7b97\u3002\u6b64\u5916\uff0cISR\u5e94\u8be5\u662f\u77ed\u800c\u6709\u6548\u7387\u7684\uff0c\u5728ISR\u4e2d\u505a\u6d6e\u70b9\u8fd0\u7b97\u662f\u4e0d\u660e\u667a\u7684\u3002", "\n4). \u4e0e\u7b2c\u4e09\u70b9\u4e00\u8109\u76f8\u627f\uff0cprintf()\u7ecf\u5e38\u6709\u91cd\u5165\u548c\u6027\u80fd\u4e0a\u7684\u95ee\u9898\u3002\u5982\u679c\u4f60\u4e22\u6389\u4e86\u7b2c\u4e09\u548c\u7b2c\u56db\u70b9\uff0c\u6211\u4e0d\u4f1a\u592a\u4e3a\u96be\u4f60\u7684\u3002\u4e0d\u7528\u8bf4\uff0c\u5982\u679c\u4f60\u80fd\u5f97\u5230\u540e\u4e24\u70b9\uff0c\u90a3\u4e48\u4f60\u7684\u88ab\u96c7\u7528\u524d\u666f\u8d8a\u6765\u8d8a\u5149\u660e\u4e86\u3002", "\n\u4ee3\u7801\u4f8b\u5b50\uff08Code examples\uff09", "\n12 . \u4e0b\u9762\u7684\u4ee3\u7801\u8f93\u51fa\u662f\u4ec0\u4e48\uff0c\u4e3a\u4ec0\u4e48\uff1f", "\nvoid foo(void)", "\n{ unsigned int a = 6;", "\nint b = -20;", "\n(a+b > 6) puts(\u201c> 6\u2033) : puts(\u201c\n}", "\n\u8fd9\u4e2a\u95ee\u9898\u6d4b\u8bd5\u4f60\u662f\u5426\u61c2\u5f97C\u8bed\u8a00\u4e2d\u7684\u6574\u6570\u81ea\u52a8\u8f6c\u6362\u539f\u5219\uff0c\u6211\u53d1\u73b0\u6709\u4e9b\u5f00\u53d1\u8005\u61c2\u5f97\u6781\u5c11\u8fd9\u4e9b\u4e1c\u897f\u3002\u4e0d\u7ba1\u5982\u4f55\uff0c\u8fd9\u65e0\u7b26\u53f7\u6574\u578b\u95ee\u9898\u7684\u7b54\u6848\u662f\u8f93\u51fa\u662f\u201c>6\u201d\u3002\u539f\u56e0\u662f\u5f53\u8868\u8fbe\u5f0f\u4e2d\u5b58\u5728\u6709\u7b26\u53f7\u7c7b\u578b\u548c\u65e0\u7b26\u53f7\u7c7b\u578b\u65f6\u6240\u6709\u7684\u64cd\u4f5c\u6570\u90fd\u81ea\u52a8\u8f6c\u6362\u4e3a\u65e0\u7b26\u53f7\u7c7b\u578b\u3002\u56e0\u6b64-20\u53d8\u6210\u4e86\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u6b63\u6574\u6570\uff0c\u6240\u4ee5\u8be5\u8868\u8fbe\u5f0f\u8ba1\u7b97\u51fa\u7684\u7ed3\u679c\u5927\u4e8e6\u3002\u8fd9\u4e00\u70b9\u5bf9\u4e8e\u5e94\u5f53\u9891\u7e41\u7528\u5230\u65e0\u7b26\u53f7\u6570\u636e\u7c7b\u578b\u7684\u5d4c\u5165\u5f0f\u7cfb\u7edf\u6765\u8bf4\u662f\u4e30\u5e38\u91cd\u8981\u7684\u3002\u5982\u679c\u4f60\u7b54\u9519\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f60\u4e5f\u5c31\u5230\u4e86\u5f97\u4e0d\u5230\u8fd9\u4efd\u5de5\u4f5c\u7684\u8fb9\u7f18\u3002", "\n13. \u8bc4\u4ef7\u4e0b\u9762\u7684\u4ee3\u7801\u7247\u65ad\uff1a", "\nunsigned int zero = 0;", "\nunsigned int compzero = 0xFFFF;", "\n/*1\u2032s complement of zero */", "\n\u5bf9\u4e8e\u4e00\u4e2aint\u578b\u4e0d\u662f16\u4f4d\u7684\u5904\u7406\u5668\u4e3a\u8bf4\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u662f\u4e0d\u6b63\u786e\u7684\u3002\u5e94\u7f16\u5199\u5982\u4e0b\uff1a", "\nunsigned int compzero = ~0;", "\n\u8fd9\u4e00\u95ee\u9898\u771f\u6b63\u80fd\u63ed\u9732\u51fa\u5e94\u8bd5\u8005\u662f\u5426\u61c2\u5f97\u5904\u7406\u5668\u5b57\u957f\u7684\u91cd\u8981\u6027\u3002\u5728\u6211\u7684\u7ecf\u9a8c\u91cc\uff0c\u597d\u7684\u5d4c\u5165\u5f0f\u7a0b\u5e8f\u5458\u975e\u5e38\u51c6\u786e\u5730\u660e\u767d\u786c\u4ef6\u7684\u7ec6\u8282\u548c\u5b83\u7684\u5c40\u9650\uff0c\u7136\u800cPC\u673a\u7a0b\u5e8f\u5f80\u5f80\u628a\u786c\u4ef6\u4f5c\u4e3a\u4e00\u4e2a\u65e0\u6cd5\u907f\u514d\u7684\u70e6\u607c\u3002", "\n\u5230\u4e86\u8fd9\u4e2a\u9636\u6bb5\uff0c\u5e94\u8bd5\u8005\u6216\u8005\u5b8c\u5168\u5782\u5934\u4e27\u6c14\u4e86\u6216\u8005\u4fe1\u5fc3\u6ee1\u6ee1\u5fd7\u5728\u5fc5\u5f97\u3002\u5982\u679c\u663e\u7136\u5e94\u8bd5\u8005\u4e0d\u662f\u5f88\u597d\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6d4b\u8bd5\u5c31\u5728\u8fd9\u91cc\u7ed3\u675f\u4e86\u3002\u4f46\u5982\u679c\u663e\u7136\u5e94\u8bd5\u8005\u505a\u5f97\u4e0d\u9519\uff0c\u90a3\u4e48\u6211\u5c31\u6254\u51fa\u4e0b\u9762\u7684\u8ffd\u52a0\u95ee\u9898\uff0c\u8fd9\u4e9b\u95ee\u9898\u662f\u6bd4\u8f83\u96be\u7684\uff0c\u6211\u60f3\u4ec5\u4ec5\u975e\u5e38\u4f18\u79c0\u7684\u5e94\u8bd5\u8005\u80fd\u505a\u5f97\u4e0d\u9519\u3002\u63d0\u51fa\u8fd9\u4e9b\u95ee\u9898\uff0c\u6211\u5e0c\u671b\u66f4\u591a\u770b\u5230\u5e94\u8bd5\u8005\u5e94\u4ed8\u95ee\u9898\u7684\u65b9\u6cd5\uff0c\u800c\u4e0d\u662f\u7b54\u6848\u3002\u4e0d\u7ba1\u5982\u4f55\uff0c\u4f60\u5c31\u5f53\u662f\u8fd9\u4e2a\u5a31\u4e50\u5427\u2026", "\n\u52a8\u6001\u5185\u5b58\u5206\u914d\uff08Dynamic memory allocation\uff09", "\n14. \u5c3d\u7ba1\u4e0d\u50cf\u975e\u5d4c\u5165\u5f0f\u8ba1\u7b97\u673a\u90a3\u4e48\u5e38\u89c1\uff0c\u5d4c\u5165\u5f0f\u7cfb\u7edf\u8fd8\u662f\u6709\u4ece\u5806\uff08heap\uff09\u4e2d\u52a8\u6001\u5206\u914d\u5185\u5b58\u7684\u8fc7\u7a0b\u7684\u3002\u90a3\u4e48\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u52a8\u6001\u5206\u914d\u5185\u5b58\u53ef\u80fd\u53d1\u751f\u7684\u95ee\u9898\u662f\u4ec0\u4e48\uff1f", "\n\u8fd9\u91cc\uff0c\u6211\u671f\u671b\u5e94\u8bd5\u8005\u80fd\u63d0\u5230\u5185\u5b58\u788e\u7247\uff0c\u788e\u7247\u6536\u96c6\u7684\u95ee\u9898\uff0c\u53d8\u91cf\u7684\u6301\u884c\u65f6\u95f4\u7b49\u7b49\u3002\u8fd9\u4e2a\u4e3b\u9898\u5df2\u7ecf\u5728ESP\u6742\u5fd7\u4e2d\u88ab\u5e7f\u6cdb\u5730\u8ba8\u8bba\u8fc7\u4e86\uff08\u4e3b\u8981\u662f P.J. Plauger, \u4ed6\u7684\u89e3\u91ca\u8fdc\u8fdc\u8d85\u8fc7\u6211\u8fd9\u91cc\u80fd\u63d0\u5230\u7684\u4efb\u4f55\u89e3\u91ca\uff09\uff0c\u6240\u6709\u56de\u8fc7\u5934\u770b\u4e00\u4e0b\u8fd9\u4e9b\u6742\u5fd7\u5427\uff01\u8ba9\u5e94\u8bd5\u8005\u8fdb\u5165\u4e00\u79cd\u865a\u5047\u7684\u5b89\u5168\u611f\u89c9\u540e\uff0c\u6211\u62ff\u51fa\u8fd9\u4e48\u4e00\u4e2a\u5c0f\u8282\u76ee\uff1a\u4e0b\u9762\u7684\u4ee3\u7801\u7247\u6bb5\u7684\u8f93\u51fa\u662f\u4ec0\u4e48\uff0c\u4e3a\u4ec0\u4e48\uff1f", "\nchar *ptr;", "\nif ((ptr = (char *)malloc(0)) == NULL)", "\nputs(\u201cGot a null pointer\u201d);", "\nelse", "\nputs(\u201cGot a valid pointer\u201d);", "\n\u8fd9\u662f\u4e00\u4e2a\u6709\u8da3\u7684\u95ee\u9898\u3002\u6700\u8fd1\u5728\u6211\u7684\u4e00\u4e2a\u540c\u4e8b\u4e0d\u7ecf\u610f\u628a0\u503c\u4f20\u7ed9\u4e86\u51fd\u6570malloc\uff0c\u5f97\u5230\u4e86\u4e00\u4e2a\u5408\u6cd5\u7684\u6307\u9488\u4e4b\u540e\uff0c\u6211\u624d\u60f3\u5230\u8fd9\u4e2a\u95ee\u9898\u3002\u8fd9\u5c31\u662f\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u8be5\u4ee3\u7801\u7684\u8f93\u51fa\u662f\u201cGot a valid pointer\u201d\u3002\u6211\u7528\u8fd9\u4e2a\u6765\u5f00\u59cb\u8ba8\u8bba\u8fd9\u6837\u7684\u4e00\u95ee\u9898\uff0c\u770b\u770b\u88ab\u9762\u8bd5\u8005\u662f\u5426\u60f3\u5230\u5e93\u4f8b\u7a0b\u8fd9\u6837\u505a\u662f\u6b63\u786e\u3002\u5f97\u5230\u6b63\u786e\u7684\u7b54\u6848\u56fa\u7136\u91cd\u8981\uff0c\u4f46\u89e3\u51b3\u95ee\u9898\u7684\u65b9\u6cd5\u548c\u4f60\u505a\u51b3\u5b9a\u7684\u57fa\u672c\u539f\u7406\u66f4\u91cd\u8981\u4e9b\u3002", "\nTypedef", "\n15. Typedef \u5728C\u8bed\u8a00\u4e2d\u9891\u7e41\u7528\u4ee5\u58f0\u660e\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u6570\u636e\u7c7b\u578b\u7684\u540c\u4e49\u5b57\u3002\u4e5f\u53ef\u4ee5\u7528\u9884\u5904\u7406\u5668\u505a\u7c7b\u4f3c\u7684\u4e8b\u3002\u4f8b\u5982\uff0c\u601d\u8003\u4e00\u4e0b\u4e0b\u9762\u7684\u4f8b\u5b50\uff1a", "\n#define dPS struct s *", "\ntypedef struct s * tPS;", "\n\u4ee5\u4e0a\u4e24\u79cd\u60c5\u51b5\u7684\u610f\u56fe\u90fd\u662f\u8981\u5b9a\u4e49dPS \u548c tPS \u4f5c\u4e3a\u4e00\u4e2a\u6307\u5411\u7ed3\u6784s\u6307\u9488\u3002\u54ea\u79cd\u65b9\u6cd5\u66f4\u597d\u5462\uff1f\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u4e3a\u4ec0\u4e48\uff1f", "\n\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u5fae\u5999\u7684\u95ee\u9898\uff0c\u4efb\u4f55\u4eba\u7b54\u5bf9\u8fd9\u4e2a\u95ee\u9898\uff08\u6b63\u5f53\u7684\u539f\u56e0\uff09\u662f\u5e94\u5f53\u88ab\u606d\u559c\u7684\u3002\u7b54\u6848\u662f\uff1atypedef\u66f4\u597d\u3002\u601d\u8003\u4e0b\u9762\u7684\u4f8b\u5b50\uff1a", "\ndPS p1,p2;", "\ntPS p3,p4;", "\n\u7b2c\u4e00\u4e2a\u6269\u5c55\u4e3a", "\nstruct s * p1, p2;", "\n\u4e0a\u9762\u7684\u4ee3\u7801\u5b9a\u4e49p1\u4e3a\u4e00\u4e2a\u6307\u5411\u7ed3\u6784\u7684\u6307\uff0cp2\u4e3a\u4e00\u4e2a\u5b9e\u9645\u7684\u7ed3\u6784\uff0c\u8fd9\u4e5f\u8bb8\u4e0d\u662f\u4f60\u60f3\u8981\u7684\u3002\u7b2c\u4e8c\u4e2a\u4f8b\u5b50\u6b63\u786e\u5730\u5b9a\u4e49\u4e86p3 \u548cp4 \u4e24\u4e2a\u6307\u9488\u3002", "\n\u6666\u6da9\u7684\u8bed\u6cd5", "\n16. C\u8bed\u8a00\u540c\u610f\u4e00\u4e9b\u4ee4\u4eba\u9707\u60ca\u7684\u7ed3\u6784,\u4e0b\u9762\u7684\u7ed3\u6784\u662f\u5408\u6cd5\u7684\u5417\uff0c\u5982\u679c\u662f\u5b83\u505a\u4e9b\u4ec0\u4e48\uff1f", "\nint a = 5, b = 7, c;", "\nc = a+++b;", "\n\u8fd9\u4e2a\u95ee\u9898\u5c06\u505a\u4e3a\u8fd9\u4e2a\u6d4b\u9a8c\u7684\u4e00\u4e2a\u6109\u5feb\u7684\u7ed3\u5c3e\u3002\u4e0d\u7ba1\u4f60\u76f8\u4e0d\u76f8\u4fe1\uff0c\u4e0a\u9762\u7684\u4f8b\u5b50\u662f\u5b8c\u5168\u5408\u4e4e\u8bed\u6cd5\u7684\u3002\u95ee\u9898\u662f\u7f16\u8bd1\u5668\u5982\u4f55\u5904\u7406\u5b83\uff1f\u6c34\u5e73\u4e0d\u9ad8\u7684\u7f16\u8bd1\u4f5c\u8005\u5b9e\u9645\u4e0a\u4f1a\u4e89\u8bba\u8fd9\u4e2a\u95ee\u9898\uff0c\u6839\u636e\u6700\u5904\u7406\u539f\u5219\uff0c\u7f16\u8bd1\u5668\u5e94\u5f53\u80fd\u5904\u7406\u5c3d\u53ef\u80fd\u6240\u6709\u5408\u6cd5\u7684\u7528\u6cd5\u3002\u56e0\u6b64\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u88ab\u5904\u7406\u6210\uff1a", "\nc = a++ + b;", "\n\u56e0\u6b64, \u8fd9\u6bb5\u4ee3\u7801\u6301\u884c\u540ea = 6, b = 7, c = 12\u3002", "\n\u5982\u679c\u4f60\u77e5\u9053\u7b54\u6848\uff0c\u6216\u731c\u51fa\u6b63\u786e\u7b54\u6848\uff0c\u505a\u5f97\u597d\u3002\u5982\u679c\u4f60\u4e0d\u77e5\u9053\u7b54\u6848\uff0c\u6211\u4e5f\u4e0d\u628a\u8fd9\u4e2a\u5f53\u4f5c\u95ee\u9898\u3002\u6211\u53d1\u73b0\u8fd9\u4e2a\u95ee\u9898\u7684\u6700\u5927\u597d\u5904\u662f:\u8fd9\u662f\u4e00\u4e2a\u5173\u4e8e\u4ee3\u7801\u7f16\u5199\u98ce\u683c\uff0c\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\uff0c\u4ee3\u7801\u7684\u53ef\u4fee\u6539\u6027\u7684\u597d\u7684\u8bdd\u9898", "\nWhat will print out?", "\nmain()", "\n{ char *p1=\u201cname\u201d;", "\nchar *p2;", "\np2=(char*)malloc(20);", "\nmemset (p2, 0, 20);", "\nwhile(*p2++ = *p1++);", "\nprintf(\u201c%sn\u201d,p2);", "\n}", "\nAnswer:empty string.", "\nWhat will be printed as the result of the operation below:", "\nmain()", "\n{ int x=20,y=35;", "\nx=y++ + x++;", "\ny= ++y + ++x;", "\nprintf(\u201c%d%dn\u201d,x,y);", "\n}", "\nAnswer : 5794", "\nWhat will be printed as the result of the operation below:", "\nmain()", "\n{ int x=5;", "\nprintf(\u201c%d,%d,%dn\u201d,x,x>2);", "\n}", "\nAnswer: 5,20,1", "\nWhat will be printed as the result of the operation below:", "\n#define swap(a,b) a=a+b;b=a-b;a=a-b;", "\nvoid main()", "\n{ int x=5, y=10;", "\nswap (x,y);", "\nprintf(\u201c%d %dn\u201d,x,y);", "\nswap2(x,y);", "\nprintf(\u201c%d %dn\u201d,x,y);", "\n}", "\nint swap2(int a, int b)", "\n{ int temp;", "\ntemp=a;", "\nb=a;", "\na=temp;", "\nreturn 0;", "\n}", "\nAnswer: 10, 5", "\n10, 5", "\nWhat will be printed as the result of the operation below:", "\nmain()", "\n{ char *ptr = \u201d Cisco Systems\u201d;", "\n*ptr++; printf(\u201c%sn\u201d,ptr);", "\nptr++;", "\nprintf(\u201c%sn\u201d,ptr);", "\n}", "\nAnswer:Cisco Systems", "\nisco systems", "\nWhat will be printed as the result of the operation below:", "\nmain()", "\n{ char s1[]=\u201cCisco\u201d;", "\nchar s2[]= \u201csystems\u201d;", "\nprintf(\u201c%s\u201d,s1);", "\n} Answer: Cisco", "\nWhat will be printed as the result of the operation below:", "\nmain()", "\n{ char *p1;", "\nchar *p2;", "\np1=(char *)malloc(25);", "\np2=(char *)malloc(25);", "\nstrcpy(p1,\u201dCisco\u201d);", "\nstrcpy(p2,\u201csystems\u201d);", "\nstrcat(p1,p2);", "\nprintf(\u201c%s\u201d,p1);", "\n}", "\nAnswer: Ciscosystems", "\nThe following variable is available in file1.c, who can access it?:", "\nstatic int average;", "\nAnswer: all the functions in the file1.c can access the variable.", "\nWHat will be the result of the following code?", "\n#define TRUE 0 // some code", "\nwhile(TRUE)", "\n{", "\n// some code", "\n}", "\nAnswer: This will not go into the loop as TRUE is defined as 0.", "\nWhat will be printed as the result of the operation below:", "\nint x;", "\nint modifyvalue()", "\n{ return(x+=10);", "\n} int changevalue(int x)", "\n{ return(x+=1);", "\n}", "\nvoid main()", "\n{ int x=10;", "\nx++;", "\nchangevalue(x);", "\nx++;", "\nmodifyvalue();", "\nprintf(\u201cFirst output:%dn\u201d,x);", "\nx++;", "\nchangevalue(x);", "\nprintf(\u201cSecond output:%dn\u201d,x);", "\nmodifyvalue();", "\nprintf(\u201cThird output:%dn\u201d,x);", "\n}", "\nAnswer: 12 , 13 , 13", "\nWhat will be printed as the result of the operation below:", "\nmain()", "\n{ int x=10, y=15;", "\nx = x++;", "\ny = ++y;", "\nprintf(\u201c%d %dn\u201d,x,y);", "\n}", "\nAnswer: 11, 16", "\nWhat will be printed as the result of the operation below:", "\nmain()", "\n{ int a=0;", "\nif(a==0)", "\nprintf(\u201cCisco Systemsn\u201d);", "\nprintf(\u201cCisco Systemsn\u201d);", "\n}", "\nAnswer: Two lines with \u201cCisco Systems\u201d will be printed.", "\n\u518d\u6b21\u66f4\u65b0C++\u76f8\u5173\u9898\u96c6", "\n1. \u4ee5\u4e0b\u4e09\u6761\u8f93\u51fa\u8bed\u53e5\u5206\u522b\u8f93\u51fa\u4ec0\u4e48\uff1f[C\u6613]", "\nchar str1[] = \u201cabc\u201d;", "\nchar str2[] = \u201cabc\u201d;", "\nconst char str3[] = \u201cabc\u201d;", "\nconst char str4[] = \u201cabc\u201d;", "\nconst char* str5 = \u201cabc\u201d;", "\nconst char* str6 = \u201cabc\u201d;", "\ncout \ncout \ncout \n13. \u975eC++\u5185\u5efa\u578b\u522b A \u548c B\uff0c\u5728\u54ea\u51e0\u79cd\u60c5\u51b5\u4e0bB\u80fd\u9690\u5f0f\u8f6c\u5316\u4e3aA\uff1f[C++\u4e2d\u7b49]", "\n\u7b54\uff1a", "\na. class B : public A { \u2026\u2026} // B\u516c\u6709\u7ee7\u627f\u81eaA\uff0c\u53ef\u4ee5\u662f\u95f4\u63a5\u7ee7\u627f\u7684", "\nb. class B { operator A( ); } // B\u5b9e\u73b0\u4e86\u9690\u5f0f\u8f6c\u5316\u4e3aA\u7684\u8f6c\u5316", "\nc. class A { A( const B& ); } // A\u5b9e\u73b0\u4e86non-explicit\u7684\u53c2\u6570\u4e3aB\uff08\u53ef\u4ee5\u6709\u5176\u4ed6\u5e26\u9ed8\u8ba4\u503c\u7684\u53c2\u6570\uff09\u6784\u9020\u51fd\u6570", "\nd. A& operator= ( const A& ); // \u8d4b\u503c\u64cd\u4f5c\uff0c\u867d\u4e0d\u662f\u6b63\u5b97\u7684\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\uff0c\u4f46\u4e5f\u53ef\u4ee5\u52c9\u5f3a\u7b97\u4e00\u4e2a", "\n12. \u4ee5\u4e0b\u4ee3\u7801\u4e2d\u7684\u4e24\u4e2asizeof\u7528\u6cd5\u6709\u95ee\u9898\u5417\uff1f[C\u6613]", "\nvoid UpperCase( char str[] ) // \u5c06 str \u4e2d\u7684\u5c0f\u5199\u5b57\u6bcd\u8f6c\u6362\u6210\u5927\u5199\u5b57\u6bcd", "\n{ for( size_t i=0; i", "\nif( 'a'\nstr[i] -= ('a'-'A' );", "\n} char str[] = \"aBcDe\";", "\ncout \nUpperCase( str );", "\ncout \n7. \u4ee5\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1f[C\u96be]", "\nvoid char2Hex( char c ) // \u5c06\u5b57\u7b26\u4ee516\u8fdb\u5236\u8868\u793a", "\n{ char ch = c/0x10 + '0'; if( ch > \u20199\u2032 ) ch += (\u2018A\u2019-\u20199\u2032-1);", "\nchar cl = c%0\u00d710 + \u20190\u2032; if( cl > \u20199\u2032 ) cl += (\u2018A\u2019-\u20199\u2032-1);", "\ncout \n} char str[] = \"I love \u4e2d\u56fd\";", "\nfor( size_t i=0; i", "\nchar2Hex( str[i] );", "\ncout \n4. \u4ee5\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1f[C++\u6613]", "\nstruct Test", "\n{ Test( int ) {}", "\nTest() {}", "\nvoid fun() {}", "\n};", "\nvoid main( void )", "\n{ Test a(1);", "\na.fun();", "\nTest b();", "\nb.fun();", "\n}", "\n5. \u4ee5\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1f[C++\u6613]", "\ncout \n8. \u4ee5\u4e0b\u4ee3\u7801\u80fd\u591f\u7f16\u8bd1\u901a\u8fc7\u5417\uff0c\u4e3a\u4ec0\u4e48\uff1f[C++\u6613]", "\nunsigned int const size1 = 2;", "\nchar str1[ size1 ];", "\nunsigned int temp = 0;", "\ncin >> temp;", "\nunsigned int const size2 = temp;", "\nchar str2[ size2 ];", "\n9. \u4ee5\u4e0b\u4ee3\u7801\u4e2d\u7684\u8f93\u51fa\u8bed\u53e5\u8f93\u51fa0\u5417\uff0c\u4e3a\u4ec0\u4e48\uff1f[C++\u6613]", "\nstruct CLS", "\n{ int m_i;", "\nCLS( int i ) : m_i(i) {}", "\nCLS()", "\n{ CLS(0);", "\n} };", "\nCLS obj;", "\ncout \n10. C++\u4e2d\u7684\u7a7a\u7c7b\uff0c\u9ed8\u8ba4\u4ea7\u751f\u54ea\u4e9b\u7c7b\u6210\u5458\u51fd\u6570\uff1f[C++\u6613]", "\n\u7b54\uff1a", "\nclass Empty", "\n{ public:", "\nEmpty(); // \u7f3a\u7701\u6784\u9020\u51fd\u6570", "\nEmpty( const Empty& ); // \u62f7\u8d1d\u6784\u9020\u51fd\u6570", "\n~Empty(); // \u6790\u6784\u51fd\u6570", "\nEmpty& operator=( const Empty& ); // \u8d4b\u503c\u8fd0\u7b97\u7b26", "\nEmpty* operator&(); // \u53d6\u5740\u8fd0\u7b97\u7b26", "\nconst Empty* operator&() const; // \u53d6\u5740\u8fd0\u7b97\u7b26 const", "\n};", "\n3. \u4ee5\u4e0b\u4e24\u6761\u8f93\u51fa\u8bed\u53e5\u5206\u522b\u8f93\u51fa\u4ec0\u4e48\uff1f[C++\u96be]", "\nfloat a = 1.0f;", "\ncout \ncout \ncout \nfloat b = 0.0f;", "\ncout \ncout \ncout \n2. \u4ee5\u4e0b\u53cd\u5411\u904d\u5386array\u6570\u7ec4\u7684\u65b9\u6cd5\u6709\u4ec0\u4e48\u9519\u8bef\uff1f[STL\u6613]", "\nvector array;", "\narray.push_back( 1 );", "\narray.push_back( 2 );", "\narray.push_back( 3 );", "\nfor( vector::size_type i=array.size()-1; i>=0; \u2013i ) // \u53cd\u5411\u904d\u5386array\u6570\u7ec4", "\n{ cout \n}", "\n6. \u4ee5\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1f[STL\u6613]", "\ntypedef vector IntArray;", "\nIntArray array;", "\narray.push_back( 1 );", "\narray.push_back( 2 );", "\narray.push_back( 2 );", "\narray.push_back( 3 );", "\n// \u5220\u9664array\u6570\u7ec4\u4e2d\u6240\u6709\u76842", "\nfor( IntArray::iterator itor=array.begin(); itor!=array.end(); ++itor )", "\n{ if( 2 == *itor ) array.erase( itor );", "\n}", "\n11. \u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u5b8c\u6210\u5185\u5b58\u4e4b\u95f4\u7684\u62f7\u8d1d\u3002[\u8003\u8651\u95ee\u9898\u662f\u5426\u5168\u9762]", "\n\u7b54\uff1a", "\nvoid* mymemcpy( void *dest, const void *src, size_t count )", "\n{", "\nchar* pdest = static_cast"], "title": "\u5d4c\u5165\u5f0f\u5f00\u53d1\u2014C\u8bed\u8a00\u9762\u8bd5\u9898\uff08\u7b14\u8bd5\u90e8\u5206\uff09"},
{"contents": ["\u4e00\u3001\u9009\u62e9\u9898(1)\uff5e(10)\u6bcf\u5c0f\u98982\u5206\uff0c\u00a0 (11)\uff5e(50)\u6bcf\u5c0f\u98981\u5206\uff0c\u517160\u5206)", "\u4e0b\u5217\u5404\u9898A)\u3001B)\u3001C)\u3001D)\u56db\u4e2a\u9009\u9879\u4e2d\uff0c\u53ea\u6709\u4e00\u4e2a\u9009\u9879\u662f\u6b63\u786e\u7684\uff0c\u8bf7\u5c06\u6b63\u786e\u7684\u9009\u9879\u6d82\u5199\u5728\u7b54\u9898\u5361\u76f8\u5e94\u4f4d\u7f6e\u4e0a\uff0c\u7b54\u5728\u8bd5\u5377\u4e0a\u4e0d\u5f97\u5206\u3002", "(1)\u5728\u6570\u636e\u7ed3\u6784\u4e2d\uff0c\u4ece\u903b\u8f91\u4e0a\u53ef\u4ee5\u628a\u6570\u636e\u7ed3\u6784\u5206\u4e3a_______\u3002", "A)\u52a8\u6001\u7ed3\u6784\u548c\u9759\u6001\u7ed3\u6784\u00a0\u00a0\u00a0 \u00a0\u00a0B)\u7d27\u51d1\u7ed3\u6784\u548c\u975e\u7d27\u51d1\u7ed3\u6784", "C)\u7ebf\u6027\u7ed3\u6784\u548c\u975e\u7ebf\u6027\u7ed3\u6784\u00a0\u00a0\u00a0 D)\u5185\u90e8\u7ed3\u6784\u548c\u5916\u90e8\u7ed3\u6784", "C", "\u903b\u8f91\u7ed3\u6784\u53cd\u6620\u6570\u636e\u5143\u7d20\u4e4b\u95f4\u7684\u903b\u8f91\u5173\u7cfb\uff0c\u7ebf\u6027\u7ed3\u6784\u8868\u793a\u6570\u636e\u5143\u7d20\u4e4b\u95f4\u4e00\u5bf9\u4e00\u7684\u5173\u7cfb\uff0c\u975e\u7ebf\u6027\u7ed3\u6784\u8868\u793a\u6570\u636e\u5143\u7d20\u4e4b\u95f4\u4e00\u5bf9\u591a\u6216\u591a\u5bf9\u4e00\u7684\u5173\u7cfb\u3002", "\u00a0", "(2)\u82e5\u8fdb\u6808\u5e8f\u5217\u4e3al\uff0c2\uff0c3\uff0c4\uff0c\u8fdb\u6808\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u51fa\u6808\uff0c\u5219\u4e0b\u5217\u4e0d\u53ef\u80fd\u7684\u4e00\u4e2a\u51fa\u6808\u5e8f\u5217\u662f_______\u3002", "A)1\uff0c4\uff0c3\uff0c2\u00a0\u00a0\u00a0 B)2\uff0c3\uff0c4\uff0cl", "C)3\uff0c1\uff0c4\uff0c2 \u00a0\u00a0\u00a0D)3\uff0c4, 2\uff0c1", "C", "\u6808\u662f\u4e00\u79cd\u540e\u8fdb\u5148\u51fa\u8868\uff0c\u9009\u9879c\u4e2d\uff0c\u5148\u51fa\u6808\u7684\u662f3\uff0c\u8bf4\u660e\u6b64\u65f6\u6808\u5185\u5fc5\u7136\u67091\uff0c2\uff0c\u7531\u4e8el\u5148\u4e8e2\u8fdb\u6808\uff0c\u6240\u4ee5l\u4e0d\u53ef\u80fd\u57282\u4e4b\u524d\u51fa\u6808\uff0c\u6545\u9009\u9879C\u8fd9\u79cd\u51fa\u6808\u5e8f\u5217\u662f\u4e0d\u53ef\u80fd\u7684\u3002", "\u00a0", "(3)\u6392\u5e8f\u65b9\u6cd5\u4e2d\uff0c\u5c06\u6574\u4e2a\u65e0\u5e8f\u5e8f\u5217\u5206\u5272\u6210\u82e5\u5e72\u5c0f\u7684\u5b50\u5e8f\u5217\u5e76\u5206\u522b\u8fdb\u884c\u63d2\u5165\u6392\u5e8f\u7684\u65b9\u6cd5\uff0c\u79f0\u4e3a_______\u3002", "A)\u5e0c\u5c14\u6392\u5e8f\u00a0\u00a0\u00a0 B)\u5192\u6ce1\u6392\u5e8f\u00a0\u00a0\u00a0 C)\u63d2\u5165\u6392\u5e8f\u00a0\u00a0\u00a0 D)\u9009\u62e9\u6392\u5e8f", "A", "\u5e0c\u5c14\u6392\u5e8f\u6cd5\u7684\u57fa\u672c\u601d\u60f3\u662f\uff1a\u5c06\u6574\u4e2a\u65e0\u5e8f\u5e8f\u5217\u5206\u5272\u6210\u82e5\u5e72\u5c0f\u7684\u5b50\u5e8f\u5217\u5206\u522b\u8fdb\u884c\u63d2\u5165\u6392\u5e8f\u3002", "\u00a0", "(4)\u5728\u987a\u5e8f\u8868(3\uff0c6\uff0c8\uff0c10\uff0c12\uff0c15\uff0c16\uff0c18\uff0c21\uff0c25\uff0c30)\u4e2d\uff0c\u7528\u4e8c\u5206\u6cd5\u67e5\u627e\u5173\u952e\u7801\u503c11\uff0c\u6240\u9700\u7684\u5173\u952e\u7801\u6bd4\u8f83\u6b21\u6570\u4e3a_______\u3002", "A)2\u00a0\u00a0\u00a0 \u00a0\u00a0B)3\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)4 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)5", "C", "\u4e8c\u5206\u6cd5\u67e5\u627e\u662f\u7528\u5173\u952e\u7801\u4e0e\u7ebf\u6027\u8868\u7684\u4e2d\u95f4\u5143\u7d20\u6bd4\u8f83\uff0c\u7136\u540e\u6839\u636e\u6bd4\u8f83\u7ed3\u679c\u6765\u5224\u65ad\u662f\u7ed3\u675f\u67e5\u627e\uff0c\u8fd8\u662f\u5728\u5de6\u8fb9\u6216\u8005\u53f3\u8fb9\u5b50\u8868\u6309\u76f8\u540c\u7684\u65b9\u6cd5\u7ee7\u7eed\u67e5\u627e\u3002\u672c\u9898\u4e2d\uff0c\u4e0ell\u6bd4\u8f83\u7684\u5173\u952e\u7801\u5206\u522b\u4e3a15\uff0c8\uff0c10\uff0c12\u56db\u4e2a\u3002", "\u00a0", "(5)\u5bf9\u4e8en\u4e2a\u7ed3\u70b9\u7684\u5355\u5411\u94fe\u8868(\u65e0\u8868\u5934\u7ed3\u70b9)\uff0c\u9700\u8981\u6307\u9488\u5355\u5143\u7684\u4e2a\u6570\u81f3\u5c11\u4e3a_______\u3002", "A)n-1\u00a0\u00a0\u00a0 B)n\u00a0\u00a0\u00a0 C)n+l \u00a0\u00a0\u00a0\u00a0\u00a0D)2n", "C", "\u5728n\u4e2a\u7ed3\u70b9\u7684\u5355\u5411\u94fe\u8868(\u65e0\u8868\u5934\u7ed3\u70b9)\u4e2d\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u90fd\u6709\u4e00\u4e2a\u6307\u9488\u5355\u5143(\u5373\u6307\u9488\u57df)\uff0c\u52a0\u4e0a\u5934\u6307\u9488\uff0c\u81f3\u5c11\u9700\u8981n+1\u4e2a\u6307\u9488\u5355\u5143\u3002", "\u00a0", "(6)\u5728\u8f6f\u4ef6\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u8f6f\u4ef6\u7ed3\u6784\u8bbe\u8ba1\u662f\u63cf\u8ff0_______\u3002", "A)\u6570\u636e\u5b58\u50a8\u7ed3\u6784\u00a0\u00a0 \u00a0\u00a0B)\u8f6f\u4ef6\u4f53\u7cfb\u7ed3\u6784\u00a0\u00a0\u00a0 C)\u8f6f\u4ef6\u7ed3\u6784\u6d4b\u8bd5\u00a0\u00a0\u00a0 D)\u8f6f\u4ef6\u63a7\u5236\u8fc7\u7a0b", "B", "\u4ece\u5de5\u7a0b\u7ba1\u7406\u89d2\u5ea6\u6765\u770b\uff0c\u8f6f\u4ef6\u8bbe\u8ba1\u5206\u4e24\u6b65\u5b8c\u6210\uff1a\u6982\u8981\u8bbe\u8ba1\u548c\u8be6\u7ec6\u8bbe\u8ba1\u3002\u6982\u8981\u8bbe\u8ba1(\u53c8\u79f0\u7ed3\u6784\u8bbe\u8ba1)\u5c06\u8f6f\u4ef6\u9700\u6c42\u8f6c\u5316\u4e3a\u8f6f\u4ef6\u4f53\u7cfb\u7ed3\u6784\u3001\u786e\u5b9a\u7cfb\u7edf\u7ea7\u63a5\u53e3\u3001\u5168\u5c40\u6570\u636e\u7ed3\u6784\u6216\u6570\u636e\u5e93\u6a21\u5f0f\u3002", "\u00a0", "(7)\u6a21\u5757\u672c\u8eab\u7684\u5185\u805a\u662f\u6a21\u5757\u72ec\u7acb\u6027\u7684\u91cd\u8981\u6027\u5ea6\u91cf\u56e0\u7d20\u4e4b\u4e00\u3002\u57287\u7c7b\u5185\u805a\u4e2d\uff0c\u5177\u6709\u6700\u5f3a\u5185\u805a\u00a0\u00a0\u00a0 \u7684\u4e00\u7c7b\u662f_______\u3002", "A)\u987a\u5e8f\u6027\u5185\u805a\u00a0 \u00a0\u00a0\u00a0B)\u8fc7\u7a0b\u6027\u5185\u805a\u00a0 \u00a0\u00a0\u00a0\u00a0C)\u903b\u8f91\u6027\u5185\u805a\u00a0\u00a0\u00a0 D)\u529f\u80fd\u6027\u5185\u805a", "D", "\u5185\u805a\u6027\u662f\u4e00\u4e2a\u6a21\u5757\u5185\u90e8\u5404\u5143\u7d20\u95f4\u5f7c\u6b64\u7ed3\u5408\u7684\u7d27\u5bc6\u7a0b\u5ea6\u7684\u5ea6\u91cf\u3002\u5185\u805a\u5171\u67097\u7c7b\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u5185\u805a\u6027\u7531\u5f31\u5230\u5f3a\u6392\u5217\u987a\u5e8f\u4e3a\uff1a\u5076\u7136\u5185\u805a\u3001\u903b\u8f91\u5185\u805a\u3001\u65f6\u95f4\u5185\u805a\u3001\u8fc7\u7a0b\u5185\u805a\u3001\u901a\u4fe1\u5185\u805a\u3001\u987a\u5e8f\u5185\u805a\u548c\u529f\u80fd\u5185\u805a\u3002", "\u00a0", "(8)\u6570\u636e\u5b58\u50a8\u548c\u6570\u636e\u6d41\u90fd\u662f_______\uff0c\u4ec5\u4ec5\u662f\u6240\u5904\u7684\u72b6\u6001\u4e0d\u540c\u3002", "A)\u5206\u6790\u7ed3\u679c\u00a0\u00a0\u00a0 B)\u4e8b\u4ef6\u00a0\u00a0\u00a0 C)\u52a8\u4f5c\u00a0\u00a0\u00a0 D)\u6570\u636e", "D", "\u6570\u636e\u6d41\u56fe\u67094\u79cd\u6210\u5206\uff1a\u6e90\u70b9\u6216\u7ec8\u70b9\u3001\u5904\u7406\u3001\u6570\u636e\u5b58\u50a8\u548c\u6570\u636e\u6d41\u3002\u6570\u636e\u5b58\u50a8\u662f\u5904\u4e8e\u9759\u6b62\u72b6\u6001\u7684\u6570\u636e\uff0c\u6570\u636e\u6d41\u662f\u5904\u4e8e\u8fd0\u52a8\u4e2d\u7684\u6570\u636e\u3002", "\u00a0", "(9)\u6570\u636e\u7684\u5b8c\u6574\u6027\u662f\u6307\u6570\u636e\u7684\u6b63\u786e\u6027\u3001\u6709\u6548\u6027\u548c_______\u3002", "A)\u53ef\u7ef4\u62a4\u6027\u00a0\u00a0\u00a0 B)\u72ec\u7acb\u6027\u00a0\u00a0\u00a0 C)\u5b89\u5168\u6027\u00a0\u00a0\u00a0 D)\u76f8\u5bb9\u6027", "D", "\u6570\u636e\u6a21\u578b\u7684\u5b8c\u6574\u6027\u89c4\u5219\u662f\u7ed9\u5b9a\u7684\u6570\u636e\u6a21\u578b\u4e2d\u6570\u636e\u53ca\u5176\u8054\u7cfb\u6240\u5177\u6709\u7684\u5236\u7ea6\u548c\u4f9d\u5b58\u89c4\u5219\uff0c\u7528\u4ee5\u9650\u5b9a\u7b26\u5408\u6570\u636e\u6a21\u578b\u7684\u6570\u636e\u5e93\u72b6\u6001\u53ca\u5176\u72b6\u6001\u7684\u53d8\u5316\uff0c\u4ee5\u4fdd\u8bc1\u6570\u636e\u7684\u6b63\u786e\u6027\u3001\u6709\u6548\u6027\u548c\u76f8\u5bb9\u6027\u3002", "\u00a0", "(10)\u5173\u7cfb\u4ee3\u6570\u8fd0\u7b97\u662f\u4ee5_______\u4e3a\u57fa\u7840\u7684\u8fd0\u7b97\u3002", "A)\u5173\u7cfb\u8fd0\u7b97\u00a0\u00a0\u00a0 B)\u8c13\u8bcd\u8fd0\u7b97\u00a0\u00a0\u00a0 C)\u96c6\u5408\u8fd0\u7b97\u00a0\u00a0\u00a0\u00a0 D)\u4ee3\u6570\u8fd0\u7b97", "C", "\u5173\u7cfb\u4ee3\u6570\u8fd0\u7b97\u662f\u4ee5\u5173\u7cfb\u4ee3\u6570\u4f5c\u4e3a\u8fd0\u7b97\u5bf9\u8c61\u7684\u4e00\u7ec4\u9ad8\u7ea7\u8fd0\u7b97\u7684\u96c6\u5408\u3002\u5b83\u7684\u57fa\u672c\u64cd\u4f5c\u662f\u5e76\u3001\u4ea4\u3001\u5dee\u3001\u7b1b\u5361\u5c14\u79ef\uff0c\u53e6\u5916\u8fd8\u5305\u5782\u76f4\u5206\u5272(\u6295\u5f71)\u3001\u6c34\u5e73\u5206\u5272(\u9009\u62e9)\u3001\u5173\u7cfb\u7684\u7ed3\u5408(\u8fde\u63a5)\u7b49\u3002", "\u00a0", "(11)\u80fd\u5c06\u9ad8\u7ea7\u8bed\u8a00\u7a0b\u5e8f\u8f6c\u6362\u6210\u76ee\u6807\u8bed\u8a00\u7a0b\u5e8f\u7684\u662f_______\u3002", "A)\u8c03\u8bd5\u7a0b\u5e8f\u00a0\u00a0\u00a0 B)\u89e3\u91ca\u7a0b\u5e8f\u00a0\u00a0\u00a0 C)\u7f16\u8bd1\u7a0b\u5e8f\u00a0\u00a0\u00a0\u00a0\u00a0 D)\u7f16\u8f91\u7a0b\u5e8f", "C", "\u7528\u9ad8\u7ea7\u8bed\u8a00\u7f16\u5199\u7684\u7a0b\u5e8f\u79f0\u4e3a\u201c\u6e90\u7a0b\u5e8f\u201d\uff0c\u800c\u8ba1\u7b97\u673a\u53ea\u80fd\u8bc6\u522b\u548c\u6267\u884c\u75310\u548cl\u7ec4\u6210\u7684\u4e8c\u8fdb\u5236\u6307\u4ee4\uff0c\u6240\u4ee5\u9ad8\u7ea7\u8bed\u8a00\u5fc5\u987b\u5148\u7528\u4e00\u79cd\u79f0\u4e3a\u201c\u7f16\u8bd1\u7a0b\u5e8f\u201d\u7684\u8f6f\u4ef6\uff0c\u628a\u6e90\u7a0b\u5e8f\u7ffb\u8bd1\u6210\u4e8c\u8fdb\u5236\u5f62\u5f0f\u7684\u201c\u76ee\u6807\u7a0b\u5e8f\u201d\u3002", "\u00a0", "(12) _______\u662f\u6784\u6210c\u8bed\u8a00\u7a0b\u5e8f\u7684\u57fa\u672c\u5355\u4f4d\u3002", "A)\u51fd\u6570\u00a0\u00a0\u00a0 B)\u8fc7\u7a0b\u00a0\u00a0\u00a0 C)\u5b50\u7a0b\u5e8f\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)\u5b50\u4f8b\u7a0b", "A", "c\u7a0b\u5e8f\u662f\u7531\u51fd\u6570\u6784\u6210\u7684\u3002\u4e00\u4e2ac\u6e90\u7a0b\u5e8f\u81f3\u5c11\u5305\u542b\u4e00\u4e2amain\u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\u5305\u542b\u4e00\u4e2amain\u51fd\u6570\u548c\u82e5\u5e72\u4e2a\u5176\u4ed6\u51fd\u6570\uff0c\u56e0\u6b64\uff0c\u51fd\u6570\u662fc\u7a0b\u5e8f\u7684\u57fa\u672c\u5355\u4f4d\u3002", "\u00a0", "(13)\u53ef\u4ee5\u5728C\u8bed\u8a00\u4e2d\u7528\u505a\u7528\u6237\u6807\u8bc6\u7b26\u7684\u662f_______\u3002", "A)void\u00a0\u00a0\u00a0 B)as_b3\u00a0\u00a0\u00a0 C)for\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)2c", "define\u00a0\u00a0\u00a0 _123\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0-abc\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Do", "WORD\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0If\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0cas\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 SIG", "B", "c\u8bed\u8a00\u89c4\u5b9a\uff0c\u6807\u8bc6\u7b26\u53ea\u80fd\u7531\u5b57\u6bcd\u3001\u6570\u5b57\u548c\u4e0b\u5212\u7ebf\u4e09\u79cd\u7b26\u53f7\u7ec4\u6210\uff0c\u800c\u4e14\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5fc5\u987b\u662f\u5b57\u6bcd\u6216\u4e0b\u5212\u7ebf\u3002\u53e6\u5916\u8fd8\u9700\u8981\u6ce8\u610f\u7684\u662f\u5173\u952e\u5b57\u4e0d\u80fd\u4f5c\u6807\u8bc6\u7b26\u3002\u9009\u9879A\u4e2dvoid\uff0cC\u4e2dfor\u90fd\u4e3a\u5173\u952e\u5b57\uff0cD\u4e2d2c\u4ee5\u5b57\u6bcd\u5f00\u5934\u3002", "\u00a0", "(14)\u82e5\u6709\u4ee5\u4e0b\u7c7b\u578b\u8bf4\u660e\u8bed\u53e5\uff1a", "char w\uff1bint x\uff1bfloat y\uff0cz\uff1b", "\u5219\u8868\u8fbe\u5f0fw*x+z-y\u7684\u7ed3\u679c\u4e3a________\u7c7b\u578b\u3002", "A)float\u00a0\u00a0\u00a0 B)char\u00a0\u00a0\u00a0\u00a0 C)int\u00a0\u00a0 D)double", "A", "\u5728\u8fdb\u884c\u8fd0\u7b97\u65f6\uff0c\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\u53c2\u52a0\u8fd0\u7b97\uff0c\u9700\u8981\u5148\u5c06\u5176\u8f6c\u6362\u6210\u540c\u4e00\u7c7b\u578b\u7684\u6570\u636e\uff0c\u7136\u540e\u518d\u8fdb\u884c\u8fd0\u7b97\u3002\u8f6c\u6362\u7684\u987a\u5e8f\u7531\u4f4e\u5230\u9ad8\u4e3a\uff1achar\uff0cshort\u2192int\u2192unsigned\u2192long\u2192double\u2192float\uff0c\u6545\u7ed3\u679c\u4e3afloat\u578b\u3002", "\u00a0", "(15)main(()", "{\u00a0 float x=123A56\uff1b", "printf(\u201c\uff05-5\uff0e2f\\n\u201d,x)\uff1b", "}", "\u4ee5\u4e0a\u7a0b\u5e8f\u8f93\u51fa\u7684\u7ed3\u679c\u662f________\u3002", "A)123\uff0e4\u00a0\u00a0\u00a0 B)123\uff0e5\u00a0\u00a0\u00a0\u00a0\u00a0 C)123\uff0e45\u00a0\u00a0\u00a0 D)123\uff0e46", "D", "f\u683c\u5f0f\u7b26\uff0c\u7528\u6765\u8f93\u51fa\u5b9e\u6570\uff0c\u4ee5\u5c0f\u6570\u5f62\u5f0f\u8f93\u51fa\u3002\u201c\uff05-m\uff0enf\u201d\u7684\u542b\u4e49\u662f\uff1a\u8f93\u51fa\u6570\u636e\u5171\u5360m\u5217\uff0c\u5176\u4e2dn\u4f4d\u5c0f\u6570\uff0c\u5982\u679c\u8f93\u51fa\u4f4d\u6570\u5c0f\u4e8em\u3002\u5219\u53f3\u7aef\u8865\u7a7a\u683c\u3002\u5982\u679c\u603b\u957f\u5ea6\u5927\u4e8e\u5217\u6570\uff0c\u5219\u6309\u5b9e\u9645\u60c5\u51b5\u56db\u820d\u4e94\u5165\u8f93\u51fa\u3002", "\u00a0", "(16)\u4e0b\u9762\u8bed\u53e5\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "Printf(\u201c\uff05d\uff3cn\u201d,strlen(\u201c\uff3ct\uff3c\u201d\uff3c065\uff3cxff\uff3cn\u201d))\uff1b", "A)14\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)8", "C)5\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)\u8f93\u51fa\u9879\u4e0d\u5408\u6cd5\uff0c\u65e0\u6b63\u5e38\u8f93\u51fa", "C", "\u5728c\u8bed\u8a00\u4e2d\uff0c\u4ee5\u201c\uff3c\u201d\u5f00\u5934\u7684\u5b57\u7b26\u5747\u4e3a\u8f6c\u4e49\u5b57\u7b26\uff0c\u5176\u4e2d\u201c\uff3c\u201d\u540e\u53ef\u8ddfl\uff5e3\u4f4d\u516b\u8fdb\u5236\u6570\u6216\u5728\u201c\uff3c\u201d\u540e\u8ddf\u5b57\u6bcdx\u53cal\uff5e2\u4f4d\u5341\u516d\u8fdb\u5236\u6570\uff0c\u4ee5\u6b64\u6765\u4ee3\u8868\u4e00\u4e2a\u7279\u5b9a\u7684\u5b57\u7b26\u3002", "\u00a0", "(17)\u4e0b\u5217\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "main()", "{\u00a0 int a=0\uff0cb=0\uff0cc=0\uff1b", "if(++a>0lI++b>0)++c\uff1b", "printf(\u201c\uff3cna=\uff05d\uff0cb=\uff05d\uff0cc=\uff05d\u201d\uff0ca\uff0cb\uff0cC)\uff1b", "}", "A)a=0,b=0\uff0cc=0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)a=l\uff0cb=l\uff0cc=1", "C)a=l,b=O, c=I\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)a=0, b=1\uff0ec=1", "C", "\u201c\ufe31\ufe31\u201d\u662f\u6216\u8fd0\u7b97\uff0c\u5b83\u6709\u4e2a\u201c\u77ed\u8def\u201d\u7684\u7279\u70b9\u9700\u7279\u522b\u6ce8\u610f\uff0c\u5f53\u201c\ufe31\ufe31\u201d\u8fd0\u7b97\u7b26\u5de6\u8fb9\u7684\u8868\u8fbe\u5f0f\u7684\u503c\u4e3a\u771f\u65f6\uff0c\u5219\u7a0b\u5e8f\u5c31\u4e0d\u518d\u5bf9\u201c\ufe31\ufe31\u201d\u53f3\u8fb9\u7684\u8868\u8fbe\u5f0f\u7684\u503c\u8fdb\u884c\u8fd0\u7b97\uff0c\u800c\u662f\u4f7f\u5f97\u6574\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\u76f4\u63a5\u4e3a\u771f\u3002", "\u00a0", "(18)\u4e0b\u5217\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "Main()", "{\u00a0 int i\uff1b", "for(i=1\uff1bi+l\uff1bi++)", "{\u00a0 if(i>4){printlf(\u201d\uff05d\u201d\uff0ci++)\uff1bbreak\uff1b}", "}", "printf(\u201c\uff05d\u201d\uff0ci++)\uff1b", "}", "A)55\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)56", "C)\u7a0b\u5e8f\u9519\u8bef\uff0c\u6ca1\u6709\u8f93\u51fa\u00a0\u00a0\u00a0 D)\u5faa\u73af\u6761\u4ef6\u6c38\u8fdc\u4e3a\u771f\uff0c\u6b7b\u5faa\u73af", "B", "\u672c\u7a0b\u5e8f\u4e2d\u6709\u4e2afor\u5faa\u73af\uff0c\u4f46\u6ce8\u610f\u5230for\u5faa\u73af\u7684\u6761\u4ef6\u662f\u201ci+l\u201d\uff0c\u4e5f\u5c31\u662f\u53ea\u8981i+l\u7684\u503c\u4e3a\u771f(\u975e\u96f6\u503c\u5747\u4e3a\u771f)\uff0c\u5c31\u6267\u884c\u5faa\u73af\u3002\u5f53i=l\u7684\u65f6\uff0ci+l\u7684\u503c\u4e3a\u771f\uff0c\u5224\u65adif\u6761\u4ef6\u4e0d\u6210\u7acb\uff0c\u6267\u884ci++\uff0c\u8f93\u51fai\u7684\u503c\u4e3a5\u3002", "\u00a0", "(19)\u4e0b\u5217\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "#define A 100", "main()", "{\u00a0 int i=O,sum=O\uff1b", "do{\u00a0 if(I==(i\uff0f2)*2)continue\uff1b", "sum+=i\uff1b", "}while(++i<A)\uff1b", "printf(\u201c\uff05d\uff3cn\u201d,sum)\uff1b", "}", "A)2500\u00a0\u00a0\u00a0 B)2050\u00a0\u00a0\u00a0 C)4\u00a0\u00a0\u00a0 D)O", "A", "\u672c\u9898\u7a0b\u5e8f\u7684\u529f\u80fd\u662f\u6c421\u5230_99\u4e4b\u95ee(\u5305\u62ec1\u548c99)\u6240\u6709\u5947\u6570\u4e4b\u548c\u3002\u7a0b\u5e8f\u4e2d\u7684while\u5faa\u73af\u7684\u7ec8\u6b62\u6761\u4ef6\u4e3a++i=100\uff0c\u5728while\u5faa\u73af\u4f53\u5185\uff0c\u5982\u679ci\u662f\u5076\u6570\uff0c\u5219\u6267\u884ccontinue\uff0c\u8df3\u8fc7\u8fd9\u4e00\u6b21\u5faa\u73af\uff0c\u6267\u884c\u4e0b\u4e00\u6b21\u5faa\u73af\uff0c\u5426\u5219\u6c42\u548c\u3002\u6700\u540e\u8f93\u51fa\u7684\u503c\u662f1\u523099\u4e4b\u95f4(\u5305\u62ecl\u548c99)\u6240\u6709\u5947\u6570\u4e4b\u548c(1+99)*50\uff0f2=2500\u3002", "\u00a0", "(20)\u4e0b\u5217\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "main()", "{\u00a0 int I=3\uff1b", "switch(i)", "{ case 1\uff1a", "case 2\uff1aprintf(\u201d\uff05d\u201d\uff0ci)\uff1b", "case 3\uff1a", "case 4\uff1abreak\uff1b", "default\uff1aprintf(\u201dOK\u201d)\uff1b", "}", "}", "A)0\u00a0\u00a0\u00a0 B)3\u00a0\u00a0\u00a0 C)OK\u00a0\u00a0\u00a0 D)\u6ca1\u6709\u4efb\u4f55\u8f93\u51fa", "D", "\u5728\u9898\u4e2d\uff0ci\u7684\u503c\u4e3a3\uff0c\u7531\u4e8e\u201ccase 3\uff1a\u201d\u540e\u9762\u6ca1\u6709break\u8bed\u53e5\uff0c\u6240\u4ee5\u7ee7\u7eed\u5411\u4e0b\u6267\u884c\u201ccase 4\uff1a\u201d\u540e\u9762\u7684\u8bed\u53e5\uff0c\u7531\u4e8e\u201ccase 4\uff1a\u201d\u540e\u9762\u7684\u8bed\u53e5\u4e3abreak\u5f3a\u884c\u9000\u51faswitch\u8bed\u53e5\uff0c\u6240\u4ee5\uff0c\u672c\u9898\u6ca1\u6709\u4efb\u4f55\u8f93\u51fa\u3002", "\u00a0", "(21)\u4e0b\u5217\u7a0b\u5e8f\u6267\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "main()", "{\u00a0 int m[][3]={1,4,7,2,5,8,3,6,9}\uff1b", "int i\uff0ck=2\uff1a", "for(I=0\uff1bi<3\uff1bi++)", "{printf(\u201d\uff05d\u201d\uff0cm[k][i])\uff1b}", "}", "A)456\u00a0\u00a0\u00a0 B)258\u00a0\u00a0\u00a0 C)369\u00a0\u00a0\u00a0 D)789", "C", "\u6839\u636e\u4e8c\u7ef4\u6570\u7ec4\u7684\u5b9a\u4e49\u5f97\u51fa\uff1am[O][O]=1\uff0cm[O][1]=4\uff0cm[O][2]=7\uff0cm[1][0]=2\uff0crail][1]=5\uff0cm[1][2]=8\uff0cm[2][0]=3\uff0cm[2][l]=6\uff0cm[2][2]=9\uff0c\u6240\u4ee5\u672c\u9898\u7684\u8f93\u51fa\u662f\u7b2c3\u884c\u7684\u503cm[2][0]\uff0cm[2][1]\uff0cm[2][2]\uff0c\u5373369\u3002", "\u00a0", "(22)\u8bbe\u5df2\u5b9a\u4e49\u6d31\u53e3k\u4e3aint\u7c7b\u578b\u53d8\u91cf\uff0c\u5219\u4ee5\u4e0bfor\u5faa\u73af\u8bed\u53e5_________\u3002", "for(i=0\uff1bk=-1\uff0ck=1\uff1bi++\uff0ck++)", "printf(\u201d****\uff3cn\u201d)\uff1b", "A)\u5224\u65ad\u5faa\u73af\u7ed3\u675f\u7684\u6761\u4ef6\u4e0d\u5408\u6cd5\u00a0\u00a0\u00a0 B)\u662f\u65e0\u9650\u5faa\u73af", "C)\u5faa\u73af\u4e00\u6b21\u4e5f\u4e0d\u6267\u884c\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)\u5faa\u73af\u53ea\u6267\u884c\u4e00\u6b21", "B", "\u672c\u9898\u5b9a\u4e49\u4e86\u4e00\u4e2afor\u5faa\u73af\uff0c\u5faa\u73af\u53d8\u91cf\u662fi\uff0c\u4f46\u7531\u4e8e\u672c\u9898\u5e76\u6ca1\u6709\u8bbe\u7f6e\u5faa\u73af\u6761\u4ef6\uff0c\u6240\u4ee5\u5faa\u73af\u7684\u6761\u4ef6\u6c38\u8fdc\u9ed8\u8ba4\u4e3a\u771f\uff0c\u5373\u65e0\u9650\u6b21\u6267\u884c\u5faa\u73af\u3002", "\u00a0", "(23)\u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f___________\u3002", "unsigned fun(unsigned num)", "{\u00a0\u00a0 unsigned k=1\uff1b", "do{", "k*=num\uff05lO\uff1b", "num\uff0f=lO\uff1b", "}while(num)\uff1b", "return(k)\uff1b", "}", "main()", "{\u00a0 unsigned n\u300226\uff1b", "printf(\u201d\uff05d\uff3cn\u201d,fun(n))\uff1b", "}", "A)0\u00a0\u00a0\u00a0 B)4\u00a0\u00a0\u00a0 C)12\u00a0\u00a0\u00a0 D)\u65e0\u9650\u6b21\u5faa\u73af", "C", "\u672c\u9898\u5b9a\u4e49\u4e86\u4e00\u4e2afun\u51fd\u6570\uff0c\u7528\u4e8enum\u6c42\u548c\uff0c\u5177\u4f53\u6267\u884c\u8fc7\u7a0b\u5982\u4e0b\uff1a", "num=26\uff1ak=k*(num\uff0510)=1*(26\uff0510)\uff0c\u6240\u4ee5k=6\uff0cnum=num\uff0f10=2\uff1b", "num=2\uff1ak=k*(num\uff0510)=6*(2\uff0510)\uff0c\u6240\u4ee5k=12\uff0cnum=num\uff0flO=O\uff1b", "num=O\uff1awhile\u6761\u4ef6\u4e0d\u6210\u7acb\uff0c\u6240\u4ee5\u8fd4\u56dek\u7684\u503c12\uff0e", "\u00a0", "(24)\u5df2\u77e5\u5b57\u6bcdA\u7684ASCII\u7801\u503c\u662f65\uff0c\u5b57\u6bcda\u7684ASCII\u7801\u503c\u662f97\uff0c\u4ee5\u4e0b\u7a0b\u5e8f_______\u3002", "main()", "{\u00a0 char a=\u2018A\u2019\uff1b", "int b=20\uff1b", "printf(\u201c\uff05d\uff0c\uff05o\u201d\uff0c(a=a+a,a+b,b)\uff0ca+\u2018a\u2019-\u2018A\u2019\uff0cb)\uff1b", "}", "A)\u8868\u8fbe\u5f0f\u975e\u6cd5\uff0c\u8f93\u51fa\u96f6\u6216\u4e0d\u786e\u5b9a\u503c", "B)\u56e0\u8f93\u51fa\u9879\u8fc7\u591a\uff0c\u65e0\u8f93\u51fa\u6216\u8f93\u51fa\u4e0d\u786e\u5b9a\u503c", "C)\u8f93\u51fa\u7ed3\u679c\u4e3a20,141", "D)\u8f93\u51fa\u7ed3\u679c\u4e3a20,141,20", "C", "\u672c\u9898\u4e2d\u9996\u5148\u8f93\u51fa\u9017\u53f7\u8868\u8fbe\u5f0f\u201ca=a+a\uff0ca+b\uff0cb\u201d\u7684\u503c\uff0c\u537320\u3002\u7136\u540e\u4ee5\u516b\u8fdb\u5236\u7684\u5f62\u5f0f\u8f93\u51faa+\u2018a\u2019-\u2018A\u2019\u7684\u503c\u4e3a97\u5bf9\u5e94\u7684\u516b\u8fdb\u5236\u6570141\uff0c\u7531\u4e8e\u6700\u540e\u4e00\u4e2a\u8868\u8fbe\u5f0fb\u6ca1\u6709\u5bf9\u5e94\u8f93\u51fa\u683c\u5f0f\u7684\u8f93\u51fa\u9879\u8868\u5217\u5c31\u4e0d\u4f1a\u8f93\u51fa\u3002", "\u00a0", "(25)C\u8bed\u8a00\u51fd\u6570\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u662f\u7531__________\u51b3\u5b9a\u7684\u3002", "A)return\u8bed\u53e5\u4e2d\u7684\u8868\u8fbe\u5f0f\u7c7b\u578b\u00a0\u00a0\u00a0 B)\u8c03\u7528\u51fd\u6570\u7684\u4e3b\u8c03\u51fd\u6570\u7c7b\u578b", "C)\u8c03\u7528\u51fd\u6570\u65f6\u4e34\u65f6\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)\u5b9a\u4e49\u51fd\u6570\u65f6\u6240\u6307\u5b9a\u7684\u51fd\u6570\u7c7b\u578b", "D", "\u51fd\u6570\u503c\u7684\u7c7b\u578b\u5e94\u5f53\u662f\u5728\u5b9a\u4e49\u51fd\u6570\u65f6\u6307\u5b9a\u7684\u3002\u5728\u5b9a\u4e49\u51fd\u6570\u65f6\u5bf9\u51fd\u6570\u503c\u8bf4\u660e\u7684\u7c7b\u578b\u4e00\u822c\u5e94\u8be5\u548creturn\u8bed\u53e5\u4e2d\u7684\u8868\u8fbe\u5f0f\u7c7b\u578b\u4e00\u81f4\uff0c\u5982\u679c\u4e0d_\u81f4\uff0c\u5219\u4ee5\u51fd\u6570\u7c7b\u578b\u4e3a\u51c6\uff0c\u5373\u51fd\u6570\u7c7b\u578b\u51b3\u5b9a\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u3002", "\u00a0", "(26)\u4e0b\u5217\u7a0b\u5e8f\u6267\u884c\u540e\u8f93\u51fa\u7684\u7ed3\u679c\u662f___________\u3002", "int d=l\uff1a", "fun(int p)", "{\u00a0 int d\u30025\uff1b", "d+=p++\uff1b", "printf(\u201d\uff05d\uff0c\u201d\uff0cd)\uff1b", "}", "main()", "{\u00a0 int a=3\uff1b", "fun(a)\uff1b", "d+=a++\uff1a", "printf(\u201d\uff05d\uff3cn\u201d\uff0cd)\uff1b", "}", "A)8\uff0c12\u00a0\u00a0\u00a0 B)9\uff0c13\u00a0\u00a0\u00a0 C)8,4\u00a0\u00a0\u00a0 D)9,5", "C", "\u672c\u9898\u6267\u884c\u8fc7\u7a0b\u5982\u4e0b\uff1a\u9996\u5148\u8c03\u7528fun\u51fd\u6570\uff0c\u4f7f\u5f97\u5b9e\u53c2a\u7684\u503c3\u4f20\u9012\u7ed9\u5f62\u53c2p\uff0c\u5f97\u5230\u5c40\u90e8\u53d8\u91cfd=8\uff0c\u6253\u5370\u51fa\u5c40\u90e8\u53d8\u91cfd\u7684\u503c8\uff1b\u8fd4\u56de\u4e3b\u51fd\u6570\u6267\u884c\u201cd+=a++\u201d\uff0c\u6b64\u5904\u7684d\u4e3a\u5168\u5c40\u53d8\u91cf\uff0c\u6240\u4ee5d=1+3=4(\u7531\u4e8e\u672c\u9898\u662f\u503c\u4f20\u9012\uff0c\u6240\u4ee5\u5728\u51fd\u6570fun\u4e2d\u5bf9p\u503c\u7684\u6539\u53d8\u5e76\u4e0d\u80fd\u5f15\u8d77a\u7684\u6539\u53d8)\uff0c\u6545\u672c\u9898\u7684\u8f93\u51fa\u662f8,4\u3002", "\u00a0", "(27)\u5df2\u77e5\u4e0b\u9762\u7684\u7a0b\u5e8f\u6bb5\uff0c\u6b63\u786e\u7684\u5224\u65ad\u662f_________\u3002", "#define A 3", "#define B(A)((_A+1)\u2018a)", "int a=3\uff1a", "\u2026\u2026", "X=3*(A+B(7))\uff1b", "A)\u7a0b\u5e8f\u9519\u8bef\uff0c\u4e0d\u5141\u8bb8\u5d4c\u5957\u5b9a\u4e49\u00a0\u00a0\u00a0 B)X=93", "C)X=8l\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)\u7a0b\u5e8f\u9519\u8bef\uff0c\u5b8f\u5b9a\u4e49\u4e0d\u5141\u8bb8\u6709\u53c2\u6570", "C", "\u672c\u9898\u7684\u5b8f\u5b9a\u4e49\u662f\u5408\u6cd5\u7684\uff0c\u5b8f\u5b9a\u4e49\u5c55\u5f00\u4e3a3*(3+((A+1)*a))=3*(3+((7+1)*3))=81\u3002", "\u00a0", "(28)\u5b9a\u4e49int*swap()\u6307\u7684\u662f_______\u3002", "A)\u4e00\u4e2a\u8fd4\u56de\u6574\u578b\u503c\u7684\u51fd\u6570swap()", "B)\u4e00\u4e2a\u8fd4\u56de\u6307\u5411\u6574\u578b\u503c\u6307\u9488\u7684\u51fd\u6570swap()", "C)\u4e00\u4e2a\u6307\u5411\u51fd\u6570swap()\u7684\u6307\u9488\uff0c\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u6574\u578b\u503c", "D)\u4ee5\u4e0a\u8bf4\u6cd5\u5747\u9519", "B", "\u4e00\u4e2a\u51fd\u6570\u53ef\u4ee5\u5e26\u56de\u4e00\u4e2a\u6574\u578b\u503c\u3001\u5b57\u7b26\u503c\u3001\u5b9e\u578b\u503c\u7b49\uff0c\u4f46\u4e5f\u53ef\u4ee5\u5e26\u56de\u6307\u9488\u578b\u6570\u636e\uff0c\u5373\u5730\u5740\u3002\u672c\u9898\u7684\u5b9a\u4e49\u4e2d\uff0c\u5305\u62ec\u62ec\u53f7\u548c\u00b7\u53f7\uff0c\u7531\u4e8ef)\u4f18\u5148\u7ea7\u9ad8\u4e8et\u3002\u6545\u5b83\u662f\u4e00\u4e2a\u8fd4\u56de\u6574\u578b\u6307\u9488\u7684\u51fd\u6570\u3002", "\u00a0", "(29)\u4ee5\u4e0b\u7a0b\u5e8f\u6bb5\u7684\u8f93\u51fa\u7ed3\u679c\u662f__________\u3002", "main()", "{\u00a0\u00a0 char s1[10]\uff0cs2[10]\uff0cs3[10]\uff1b", "scanf(\u201d\uff05s\u201d\uff0cs1)\uff1bgets(s2)\uff1bgets(s3)\uff1b", "puts(s 1)\uff1bputs(s2)\uff1bputs(s3)\uff1b", "}", "\u8f93\u5165\u6570\u636e\u5982\u4e0b\uff1a\u00a0 (\u6b64\u5904<cR>\u4ee3\u8868\u56de\u8f66\u7b26)", "aaa<CR>", "bbb<CR>", "A)aaa\u00a0\u00a0\u00a0 B)aaa\u00a0\u00a0\u00a0 C)aaa\uff3c0bbb\uff3c0\u00a0\u00a0\u00a0 D)aaabbb", "bbb", "bbb", "B", "scanf\u662f\u6807\u51c6\u8f93\u5165\u51fd\u6570\uff0c\u5728\u8f93\u5165\u5b57\u7b26\u4e32aaa\u65f6\uff0c\u5b9e\u9645\u7684\u5185\u5bb9\u4e3a\u201caaa\\0\u201d\uff0c\u201c\uff3c0\u201d\u662f\u7531\u7cfb\u7edf\u81ea\u52a8\u52a0\u5165\u7684\uff1bgets\u7684\u529f\u80fd\u662f\u4ece\u7ec8\u7aef\u8bfb\u5165\u4e00\u884c\u5b57\u7b26\uff0c\u5373\u4e00\u76f4\u8bfb\u5230\u6362\u884c\u7b26\u4e3a\u6b62\uff0c\u5e76\u7531\u7cfb\u7edf\u81ea\u52a8\u4ee5\u201c\uff3c0\u201d\u4ee3\u66ff\u6362\u884c\u7b26\u3002", "\u00a0", "(30)\u4e0b\u8ff0\u51fd\u6570\u529f\u80fd\u662f________\u3002", "Int fun(char*x)", "{\u00a0 char*y=x\uff1b", "while(*y++)\uff1b", "return y-x-l\uff1b", "}", "A)\u6c42\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)\u6c42\u5b57\u7b26\u4e32\u5b58\u653e\u7684\u4f4d\u7f6e", "C)\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u5927\u5c0f\u00a0\u00a0\u00a0 D)\u5c06\u5b57\u7b26\u4e32x\u8fde\u63a5\u5230\u5b57\u7b26\u4e32y\u540e\u9762", "A", "\u5728\u51fd\u6570\u4f53\u5185\u5b9a\u4e49\u4e00\u5b57\u7b26\u578b\u6307\u9488\u5e76\u6307\u5411\u5f62\u53c2\uff0c\u7136\u540e\u904d\u5386\u5176\u4e2d\u5404\u5b57\u7b26\u76f4\u5230NULL\uff0c\u6700\u540e\u8fd4\u56de\u5b57\u7b26\u4e32\u9996\u5c3e\u5730\u5740\u7684\u5dee\u503c\uff0c\u5373\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002", "\u00a0", "(31)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "main()", "{ char str[12]={\u2018s\u2019,\u2018t\u2019,\u2018r\u2019,\u2018i\u2019,\u2018n\u2019,\u2018 g\u2019}\uff1b", "printf(\u201d\uff05d\uff3cn\u201d,strlen(str))\uff1b", "}", "A)6\u00a0\u00a0\u00a0 B)7\u00a0\u00a0\u00a0 C)ll\u00a0\u00a0\u00a0 D)12", "A", "\u5728c\u8bed\u8a00\u4e2d\uff0c\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u662f\u5176\u9996\u5b57\u7b26\u5230NULL(\u4e0d\u542b)\u5b57\u7b26\u7684\u603b\u5b57\u7b26\u4e2a\u6570\u3002\u672c\u9898\u5b9a\u4e49\u5b57\u7b26\u6570\u7ec4str\u7684\u540c\u65f6\uff0c\u5bf9\u7b2c7\u4e2a\u5143\u7d20\uff0c\u7531\u7cfb\u7edf\u81ea\u52a8\u6dfb\u52a0\u4e0a\u201c\uff3c0\u201d\uff0c\u6545\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e3a6\u3002", "\u00a0", "(32)\u8bf7\u8bfb\u7a0b\u5e8f\u6bb5\uff1a", "char str[]=\u201dABCD\u201d,*p=str\uff1b", "printf(\u201d\uff05d\uff3cn\u201d\uff0c*(p+4))\uff1b", "\u7a0b\u5e8f\u6bb5\u7684\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "A)68\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)0", "C)\u5b57\u7b26\u2018D\u2019\u7684\u5730\u5740\u00a0\u00a0\u00a0 D)\u4e0d\u786e\u5b9a\u7684\u503c", "B", "\u5728\u5bf9\u5b57\u7b26\u6570\u7ec4\u8d4b\u5b57\u7b26\u4e32\u503c\u65f6\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u5728\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u52a0\u4e0a\u4e00\u4e2a\u5b57\u7b26\u4e32\u7ed3\u675f\u6807\u5fd7\u201c\uff3c0\u201d\uff0c\u6545\u6307\u5411\u5b57\u7b26\u6570\u7ec4\u7684\u6307\u9488p\u7684+(p+4)\u7684\u503c\u4e3a\u201c\uff3c0\u201d\u3002\u7531\u4e8e\u201c\uff3c0\u201d\u7684\u7f16\u7801\u503c\u5c31\u662f0\uff0c\u6240\u4ee5\u672c\u9898\u8f93\u51fa\u4e3a0\u3002", "\u00a0", "(33)\u82e5\u6709\u5b9a\u4e49\uff1aint a[4][10]\uff1b\uff0c\u5219\u4ee5\u4e0b\u9009\u9879\u4e2d\u5bf9\u6570\u7ec4\u5143\u7d20a[i][j]\u5f15\u7528\u9519\u8bef\u7684\u662f________\u3002", "(0<=i<4\uff0c0<=j<10)", "A)*(\uff06a[O][O]+10*i+j)\u00a0\u00a0\u00a0 \u00a0B)*(a+i)+j", "C)*(*(a+i)+j)\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)*(a[i]+j)", "B", "\u672c\u9898\u4e2d\u9009\u9879B\u662f\u9519\u8bef\u7684\u5f15\u7528\uff0c*(a+i)+j\u53ea\u4ee3\u8868\u4e86a[i][i]\u7684\u5730\u5740\u3002", "\u00a0", "(34)\u8bbe\u6709\u4ee5\u4e0b\u8bed\u53e5\uff1a", "char strl[]=\u201dstring\u201d\uff0cstr2[8]\uff0c\u3002str3\uff0c\u3002str4=\u201dstrin\u2225\uff1b", "\u5219__________\u4e0d\u662f\u5bf9\u5e93\u51fd\u6570\u7684\u6b63\u786e\u8c03\u7528\u3002", "A)strcpy(strl\uff0c\u201dHELLOl\u201d)\uff1b\u00a0\u00a0\u00a0 B)strcpy(str2\uff0c\u201dHELL02\u201d)\uff1b", "C)strcpy(str3\uff0c\u201dHELL03\u201d)\uff1b\u00a0\u00a0\u00a0 D)strcpy(str4,\u201dHELL04\u201d)\uff1b", "C", "c\u8bed\u8a00\u4e2d\uff1asgcpy(stl,st2)\uff1b\uff0c\u5176\u4e24\u4e2a\u53c2\u6570\u5747\u4e3a\u5b57\u7b26\u6307\u9488\u6216\u5b57\u7b26\u6570\u7ec4\uff0c\u9009\u9879c\u4e2d\u7684\u76ee\u7684\u4e32\u6307\u9488str3\u6ca1\u6709\u6307\u5411\u5177\u4f53\u6709\u6548\u7684\u5b58\u50a8\u5355\u5143\uff0c\u6545\u662f\u9519\u8bef\u7684\u8c03\u7528\u3002", "\u00a0", "(35)\u8bf7\u8bfb\u7a0b\u5e8f\uff1a", "#include<stdio.h>", "#include<string.h>", "main()", "{\u00a0 char*sl=\u201dAbCdEf\u201d\uff0c*s2=\u201daB\u201d\uff1b", "s1++\uff1bs2++\uff1b", "printf(\u201d\uff05d\uff3cn\u201d,strcmp(s 1\uff0cs2))\uff1b", "}", "\u4e0a\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f___________\u3002", "A)\u6b63\u6570\u00a0\u00a0\u00a0 B)\u8d1f\u6570\u00a0\u00a0\u00a0 C)\u96f6\u00a0\u00a0\u00a0 D)\u4e0d\u786e\u5b9a\u7684\u503c", "A", "\u51fd\u6570strcmp\u7684\u529f\u80fd\u662f\u6bd4\u8f83\u5b57\u7b26\u4e32s1\u548cs2\uff0c\u5982\u679csl>s2\uff0c\u5219\u8fd4\u56de\u4e2a\u6b63\u6570\uff1b\u5982\u679csl<s2\uff0c\u5219\u8fd4\u56de\u8d1f\u6570\uff0c\u5426\u5219\u8fd4\u56de\u96f6\u3002\u7531\u4e8e\u672c\u9898\u4e2d\u5c0f\u5199\u5b57\u6bcdb\u7684ASCII\u7801\u503c\u5927\u4e8e\u5927\u5199\u5b57\u6bcdB\uff0c\u6545sl>s2\uff0c\u6240\u4ee5\u51fd\u6570\u7684\u503c\u4e3a\u6b63\u6570\u3002", "\u00a0", "(36)\u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u662f_________\u3002", "char s[]=\u201dABcD\u201d\uff1b", "main()", "{\u00a0 char*p\uff1b", "for(p=s\uff1bp<s+4\uff1bp++)", "printf(\u201d\uff05s\uff3cn\u201d\uff0cp)\uff1b", "}", "A)ABCD\u00a0\u00a0\u00a0 B)A\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)D\u00a0\u00a0\u00a0 D)ABCD", "BCD\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0B\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C\u00a0\u00a0\u00a0 \u00a0\u00a0ABC", "CD\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0C\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B\u00a0\u00a0\u00a0 \u00a0\u00a0AB", "D\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0D\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0A\u00a0\u00a0\u00a0 \u00a0\u00a0A", "A", "\u5728\u7b2c\u4e00\u6b21\u6267\u884cfor\u5faa\u73af\u65f6\uff0c\u5b57\u7b26\u6570\u7ec4\u7684\u9996\u5730\u5740\u8d4b\u7ed9\u4e86\u6307\u9488\u53d8\u91cfp\uff0c\u4f7f\u5f97\u6307\u9488\u53d8\u91cfp\u6307\u5411\u4e86s\u7684\u9996\u5730\u5740\uff0c\u8f93\u51fap\u6240\u6307\u5411\u7684\u5b57\u7b26\u4e32\uff1b\u7b2c\u4e8c\u6b21\u6267\u884cfor\u5faa\u73af\u65f6\uff0cp\u503c\u589e\u52a01\uff0cp\u6307\u5411\u4e86s\u7684\u7b2c\u4e8c\u4e2a\u5143\u7d20\u8f93\u51faBCD\uff1b\u7b2c\u4e09\u6b21\u8f93\u51faCD\uff1b\u7b2c\u56db\u6b21\u8f93\u51faD\uff1b\u76f4\u5230p\u6307\u5411\u5b57\u7b26\u4e32\u7684\u7ed3\u675f\u5b57\u7b26\u201c\uff3c0\u201d\uff0cfor\u5faa\u73af\u7ec8\u6b62\u6267\u884c\u3002", "\u00a0", "(37)\u4ee5\u4e0b\u7a0b\u5e8f\u8f93\u51fa\u7684\u7ed3\u679c\u4e3a__________\u3002", "main()", "{ \u00a0char* alpha[6]={\u201cABCD\u201d\uff0cEFGH\u201d\uff0c\u201dIJKL\u201d\uff0c\u201dMNOP\u201d\uff0c\u201dQRST\u201d\uff0c\u201dUVwX\u201d}\uff1b", "char**p\uff1b", "int i\uff1a", "p=alpha\uff1b", "for(I=0\uff1bi<4\uff1bi++)", "printf(\u201d\uff05s\u201d\uff0cp[I])\uff1b", "}", "A)ABCDEFGHIJKL\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)ABCD", "C)ABCDEFGHIJKLMNOP\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0D)AEIM", "C", "\u8bc4\u6790:alpha[O]\u6307\u5411\u201cABCD\u201d\u7684\u9996\u5730\u5740\uff1balpha[1]\u6307\u5411\u201cEFGH\u201d\u7684\u9996\u5730\u5740\uff1balpha[2]\u6307\u5411\u201cIJKL\u201d\u7684\u9996\u5730\u5740\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002\u5f53\u6267\u884cp=alpha\u540e\uff0cp\u6307\u5411\u6307\u9488\u6570\u7ec4alpha\u7684\u9996\u5730\u5740\u3002for\u5faa\u73af\u4e2d\u8f93\u51fa\u4e864\u4e2a\u5b57\u7b26\u4e32\u3002", "\u00a0", "(38)\u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "#include<stdio\uff0eh>", "main()", "{\u00a0 char*p[]={\u201dB00L\u201d\uff0c\u201d0PK\u201d\uff0c\u201dH\u201d\uff0c\u201dSP\u201d}\uff1b", "int i\uff1a", "for(i=3\uff1bi>=0\uff1bi\u2013,i\u2013)", "printf(\u201c\uff05c\u201d,*p[i])\uff1b", "printf(\u201d\uff3cn\u201d)\uff1b", "}", "A)SO\u00a0\u00a0\u00a0 B)SP\u00a0\u00a0\u00a0 C)SPOPK\u00a0\u00a0\u00a0 D)SHOB", "A", "p[0]\u5b58\u653e\u7684\u662f\u201cBOOL\uff3c0\u201d\u7684\u9996\u5730\u5740\uff1bp[1]\u5b58\u653e\u7684\u662f\u201cOPK\uff3c0\u201d\u7684\u9996\u5740\u7b49\u3002", "\u5728printf\u8bed\u53e5\u4e2d\u8f93\u51fa\u7684+p[I]\u8868\u793ap[i]\u5b57\u7b26\u4e32\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u3002\u5728for\u5faa\u73af\u4e2d\uff0ci\u7684\u521d\u503c\u4e3a3\uff0c\u90a3\u4e48\u8f93\u51fa\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e3a\u201cs\u201d\uff0c\u63a5\u7740\u4e24\u6b21i\u2013\uff0c\u5219\u8f93\u51fa\u7684\u503c\u4e3a+p[1]\uff0c\u5373\u5b57\u7b26\u201c0\u201d\uff0c\u6240\u4ee5\u672c\u9898\u7684\u8f93\u51fa\u4e3aSO\u3002", "\u00a0", "(39)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "#include<stdio\uff0eh>", "void prt(int*x,int*y,int*z)", "{\u00a0\u00a0 printf(\u201d\uff05d\uff0c\uff05d\uff0c\uff05d\uff3cn\u201d\uff0c++*x\uff0c++*y*(z++))\uff1b}", "int a=10,b=40,c=20\uff1b", "main()", "{\u00a0 prt(&a\uff0c&b&C)\uff1b", "prt(&a\uff0c&b\uff0c&C)\uff1b", "}", "A)ll,42,3l\u00a0\u00a0\u00a0 B)ll,41,20\u00a0\u00a0\u00a0 C)1l,21,40\u00a0\u00a0\u00a0 D)11,41\uff0c2l", "12,22,41\u00a0\u00a0\u00a0 \u00a0\u00a012,42,20\u00a0\u00a0\u00a0 \u00a0\u00a011,2l,41\u00a0\u00a0\u00a0 \u00a0\u00a012,42,22", "B", "\u7531\u4e8e\u5b9e\u53c2\u4f20\u9001\u7684\u662f\u53d8\u91cf\u7684\u5730\u5740\uff0c\u6240\u4ee5\u5bf9\u5f62\u53c2\u6307\u9488\u6240\u6307\u5411\u7684\u5355\u5143\u5185\u5bb9\u7684\u6539\u53d8\uff0c\u5373\u5bf9\u5b9e\u53c2\u5185\u5bb9\u7684\u6539\u53d8\u3002", "\u00a0", "(40)\u82e5\u4e00\u4e2a\u5916\u90e8\u53d8\u91cf\u7684\u5b9a\u4e49\u5f62\u5f0f\u4e3astatic int x\uff1b\uff0c\u90a3\u4e48\uff0c\u5176\u4e2dstatic\u7684\u4f5c\u7528\u5e94\u8be5\u662f_______\u3002", "A)\u5c06\u53d8\u91cf\u5b58\u50a8\u5728\u9759\u6001\u5b58\u50a8\u533a", "B)\u4f7f\u53d8\u91cfx\u53ef\u4ee5\u7531\u7cfb\u7edf\u81ea\u52a8\u521d\u59cb\u5316", "C)\u4f7fx\u53ea\u80fd\u5728\u672c\u6587\u4ef6\u5185\u5f15\u7528", "D)\u4f7fx\u7684\u503c\u53ef\u4ee5\u6c38\u4e45\u4fdd\u7559", "C", "\u4e8b\u5b9e\u4e0a\uff0c\u65e0\u8bba\u6709\u65e0static\u4fee\u9970\uff0c\u5916\u90e8\u53d8\u91cf\u90fd\u5177\u6709A\u3001B\u548cc\u4e09\u79cd\u7279\u6027\u3002\u4f5c\u4e3a\u4e00\u79cd\u4fee\u9970\uff0cstatic\u4ec5\u662f\u9650\u5236\u6b64\u7c7b\u578b\u5916\u90e8\u53d8\u91cf\u7684\u5f15\u7528\u8303\u56f4\uff1a\u53ea\u80fd\u5728\u5b9a\u4e49\u5b83\u7684\u6587\u4ef6\u8303\u56f4\u5185\u4f7f\u7528\u3002", "\u00a0", "(41)\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f________\u3002", "#include<stdio\uff0eh>", "#define SQR(x)x*x", "main()", "{\u00a0 int a\uff0ck=3\uff1b", "a=++SQR(k+1)\uff1b", "printf(\u201d\uff05d\uff3cn\u201d\uff0ca)\uff1b", "}", "A)8\u00a0\u00a0\u00a0 B)9\u00a0\u00a0\u00a0 C)17\u00a0\u00a0\u00a0 D)20", "B", "\u672c\u9898\u5b8f\u66ff\u6362\u4e2d\u9047\u5230\u5f62\u53c2x\u4ee5\u5b9e\u53c2k+l\u4ee3\u66ff\uff0c\u5176\u5b83\u5b57\u7b26\u4e0d\u53d8\u3002sQR(k+1)\u5c55\u5f00\u540e\u5e94\u4e3a\u5b57\u7b26\u4e32k+l*k+l\u3002", "\u00a0", "(42)\u4e0b\u9762\u662f\u5bf9\u5b8f\u5b9a\u4e49\u7684\u63cf\u8ff0\uff0c\u4e0d\u6b63\u786e\u7684\u662f_______\u3002", "A)\u5b8f\u4e0d\u5b58\u5728\u7c7b\u578b\u95ee\u9898\uff0c\u5b8f\u540d\u65e0\u7c7b\u578b\uff0c\u5b83\u7684\u53c2\u6570\u4e5f\u65e0\u7c7b\u578b", "B)\u5b8f\u66ff\u6362\u4e0d\u5360\u7528\u8fd0\u884c\u65f6\u95f4", "C)\u5b8f\u66ff\u6362\u65f6\u5148\u6c42\u51fa\u5b9e\u53c2\u8868\u8fbe\u5f0f\u7684\u503c\uff0c\u7136\u540e\u4ee3\u5165\u5f62\u53c2\u8fd0\u7b97\u6c42\u503c", "D)\u5b8f\u66ff\u6362\u53ea\u4e0d\u8fc7\u662f\u5b57\u7b26\u66ff\u4ee3\u800c\u5df2", "C", "\u5b8f\u66ff\u6362\u5b9e\u8d28\u4e0a\u5c31\u662f\u5b57\u7b26\u66ff\u4ee3\uff0c\u5b83\u4e0d\u53ef\u80fd\u8fdb\u884c\u8ba1\u7b97\uff0c\u6545c\u9519\u8bef\u3002\u5e26\u53c2\u6570\u7684\u5b8f\u4e0e\u51fd\u6570\u76f8\u6bd4\uff0c\u5b8f\u5728\u7a0b\u5e8f\u7f16\u8bd1\u4e4b\u524d\u5df2\u7ecf\u5c06\u4ee3\u7801\u66ff\u6362\u5230\u7a0b\u5e8f\u5185\uff0c\u6267\u884c\u65f6\u4e0d\u4f1a\u4ea7\u751f\u7c7b\u4f3c\u4e8e\u51fd\u6570\u8c03\u7528\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u8bf4\u4e0d\u5360\u7528\u8fd0\u884c\u65f6\u95f4\u3002", "\u00a0", "(43)\u4ee5\u4e0b\u7a0b\u5e8f(\u7a0b\u5e8f\u5de6\u8fb9\u7684\u6570\u5b57\u4e3a\u9644\u52a0\u7684\u884c\u53f7)________\u3002", "1#include<str\uff0eh>", "2#include<stdio\uff0eh>", "3main()", "4{char s[]=\u201dstring\u201d\uff1b", "5 \u00a0puts(s)\uff1b", "6\u00a0 strcpy(s,\u201dhello\u201d)\uff1b", "7 \u00a0printf(\u201d\uff053s\uff3cn\u201d\uff0cs)\uff1b}", "A)\u6ca1\u6709\u9519\u00a0\u00a0\u00a0 \u00a0\u00a0B)\u7b2cl\u884c\u6709\u9519\u00a0\u00a0\u00a0 \u00a0\u00a0C)\u7b2c6\u884c\u6709\u9519\u00a0\u00a0\u00a0 D)\u7b2c7\u884c\u6709\u9519", "B", "\u5b57\u7b26\u4e32\u590d\u5236\u51fd\u6570strcpy\u5305\u542b\u5728\u5934\u6587\u4ef6string\uff0eh\u4e2d\uff0c\u56e0\u6b64\uff0c\u7a0b\u5e8f\u4e2d\u7684\u7b2cl\u884c\u6587\u4ef6\u5305\u542b\u547d\u4ee4\u662f\u9519\u8bef\u7684\u3002", "\u00a0", "(44)\u82e5\u6709\u5982\u4e0b\u8bf4\u660e\uff0c\u5219__________\u7684\u53d9\u8ff0\u662f\u6b63\u786e\u7684\u3002", "struct st", "{\u00a0 int a\uff1b", "int b[2l\uff1b", "}a\uff1b", "A)\u7ed3\u6784\u4f53\u53d8\u91cfa\u4e0e\u7ed3\u6784\u4f53\u6210\u5458a\u540c\u540d\uff0c\u5b9a\u4e49\u662f\u975e\u6cd5\u7684", "B)\u7a0b\u5e8f\u53ea\u5728\u6267\u884c\u5230\u8be5\u5b9a\u4e49\u65f6\u624d\u4e3a\u7ed3\u6784\u4f53st\u5206\u914d\u5b58\u50a8\u5355\u5143", "C)\u7a0b\u5e8f\u8fd0\u884c\u65f6\u4e3a\u7ed3\u6784\u4f53st\u5206\u914d6\u4e2a\u5b57\u8282\u5b58\u50a8\u5355\u5143", "D)\u7c7b\u578b\u540dstruct st\u53ef\u4ee5\u901a\u8fc7extern\u5173\u952e\u5b57\u63d0\u524d\u5f15\u7528(\u5373\u5f15\u7528\u5728\u524d\uff0c\u8bf4\u660e\u5728\u540e)", "D", "\u7ed3\u6784\u4f53\u53d8\u91cfa\u4e0e\u7ed3\u6784\u4f53\u6210\u5458a\u540c\u540d\u662f\u5408\u6cd5\u7684\u5b9a\u4e49\uff0c\u5f15\u7528\u6210\u5458a\u7684\u65b9\u6cd5\u662fa\uff0ea\uff0c\u53d8\u91cfa\u5904\u4e8e\u4e0d\u540c\u7684\u201c\u5c42\u6b21\u201d\u4e0a\uff0c\u7cfb\u7edf\u5b8c\u5168\u80fd\u591f\u5206\u6e05\u3002st\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\u540d\uff0c\u4e0d\u4f1a\u4e3a\u7ed3\u6784\u4f53\u540d\u5206\u914d\u5b58\u50a8\u7a7a\u95f4\uff0c\u5e94\u8be5\u662f\u5728\u8fd0\u884c\u65f6\u4e3a\u7ed3\u6784\u4f53\u53d8\u91cfa\u5206\u914d6\u4e2a\u5b57\u8282\u7684\u5b58\u50a8\u5355\u5143\uff0c\u6545\u9009\u9879B\u548c\u9009\u9879C\u9519\u8bef\u3002", "\u00a0", "(45)\u82e5\u6709\u4ee5\u4e0b\u7ed3\u6784\u4f53\u5b9a\u4e49\uff0c\u5219________\u662f\u6b63\u786e\u7684\u5f15\u7528\u6216\u5b9a\u4e49\u3002", "struct example", "{\u00a0 int x\uff1b", "int y\uff1b", "}v1\uff1b", "A)example\uff0ex=10\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)example v2\uff0ex=10", "C)struct v2\uff1bv2\uff0ex=lO\u00a0\u00a0\u00a0 D)struct example v2={10}\uff1b", "D", "\u5728\u5b9a\u4e49\u7ed3\u6784\u4f53\u53d8\u91cf\u65f6\uff0c\u4e0d\u80fd\u53ea\u7528\u7ed3\u6784\u4f53\u540dexample\u6216\u5173\u952e\u5b57strum\u8fdb\u884c\u5b9a\u4e49\uff0c\u5fc5\u9700\u8981\u7528\u7ed3\u6784\u4f53\u7c7b\u578b\u540dstruct example\u5b9a\u4e49\uff0c\u5728\u5f15\u7528\u7ed3\u6784\u4f53\u6210\u5458\u53d8\u91cf\u65f6\uff0c\u9700\u8981\u7528\u7ed3\u6784\u4f53\u53d8\u91cf\u540d\u8fdb\u884c\u5f15\u7528\uff0c\u6240\u4ee5\u9009D\u3002", "\u00a0", "(46)\u4e0b\u5217\u7a0b\u5e8f\u7684\u6267\u884c\u7ed3\u679c\u662f_________\u3002", "#include<stdio\uff0eh>", "union un", "{\u00a0 int i\uff1b", "char c[21\uff1b", "}\uff1b", "void main()", "{ union un x\uff1b", "x\uff0ec[0]=10\uff1a", "x\uff0ec[1]=1\uff1a", "printf(\u201c\uff3cn\uff05d\u201d,x\uff0ei)\uff1b", "}", "A)266\u00a0\u00a0\u00a0 B)ll\u00a0\u00a0\u00a0 C)265\u00a0\u00a0\u00a0 D)138", "A", "\u7531\u4e8e\u672c\u9898\u5b9a\u4e49\u7684\u662f\u5171\u7528\u4f53\uff0c\u6240\u4ee5\u6210\u5458\u8868\u5217\u4e2d\u7684\u6574\u578b\u53d8\u91cfx\u4e0e\u5b57\u7b26\u6570\u7ec4c\u5171\u5360\u7528\u540c\u4e00\u4e2a\u5b58\u50a8\u5355\u5143\uff0c\u4e14\u6b64\u5b58\u50a8\u5355\u5143\u4e3a2\u4e2a\u5b57\u8282\uff0c\u901a\u5e38c[O]\u4f4d\u4e8e\u4f4e\u5b57\u8282\uff0cc[1]\u4f4d\u4e8e\u9ad8\u5b57\u8282\uff0c\u6240\u4ee5x\uff0ei\u7684\u503c\u4e3a266\u3002", "\u00a0", "\u00a0", "(47)\u5df2\u77e5\u5f62\u6210\u94fe\u8868\u7684\u5b58\u50a8\u7ed3\u6784\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5219\u4e0b\u8ff0\u7c7b\u578b\u63cf\u8ff0\u4e2d\u7684\u7a7a\u767d\u5904\u5e94\u586b_______\u3002", "struct link", "{\u00a0\u00a0 char data\uff1b", "___________", "}node\uff1b", "A)struct link next\u00a0\u00a0\u00a0 B)link*next", "C)struct next link\u00a0\u00a0\u00a0 D)struct link*next", "D", "\u5728\u5355\u5411\u94fe\u8868\u4e2d\uff0c\u7531\u4e8e\u6bcf\u4e2a\u7ed3\u70b9\u9700\u8981\u5b58\u50a8\u4e0b\u4e00\u4e2a\u7ed3\u70b9\u7684\u5730\u5740\uff0c\u4e14\u4e0b\u4e00\u4e2a\u7ed3\u70b9\u7684\u6570\u636e\u7c7b\u578b\u4e0e\u524d\u4e00\u4e2a\u7ed3\u70b9\u7684\u6570\u636e\u7c7b\u578b\u5b8c\u5168\u76f8\u540c\uff0c\u6545\u5e94\u4e3astruct link*next\u3002", "\u00a0", "(48)\u5df2\u77e5\u5c0f\u5199\u5b57\u6bcda\u7684ASCII\u7801\u4e3a97\uff0c\u5927\u5199\u5b57\u6bcdA\u7684ASCII\uff0e\u7801\u4e3a65\uff0c\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u7ed3\u679c\u662f__________\u3002", "main()", "{ \u00a0unsigned int a=32,b=66\uff1b", "printf(\u201c\uff05c\uff3cn\u201d,atb)\uff1b", "}", "A)66\u00a0\u00a0\u00a0 B)98\u00a0\u00a0\u00a0 C)b\u00a0\u00a0\u00a0 D)B", "C", "\u4f4d\u8fd0\u7b97\u7b26\u201cl\u201d\u7684\u4f5c\u7528\u662f\u6309\u4f4d\u6216\uff0c\u5373\u4e24\u4e2a\u4e8c\u8fdb\u5236\u6570\u7684\u76f8\u5e94\u4f4d\u4e2d\u53ea\u8981\u6709\u4e00\u4e2a\u4e3a1\uff0c\u8be5\u4f4d\u7684\u7ed3\u679c\u503c\u4e3al\u3002\u6700\u540e\u4ee5\u5b57\u7b26\u578b\u8f93\u51fa\uff0c\u00a0 98\u5bf9\u5e94\u7684\u5b57\u7b26\u201cb\u201d\u3002", "\u00a0", "(49)C\u8bed\u8a00\u5e93\u51fd\u6570\u9f9fets(str,n,fp)\u7684\u529f\u80fd\u662f_________\u3002", "A)\u4ecefp\u6307\u5411\u7684\u6587\u4ef6\u4e2d\u8bfb\u53d6\u957f\u5ea6n\u7684\u5b57\u7b26\u4e32\u5b58\u5165str\u6307\u5411\u7684\u5185\u5b58", "B)\u4ecefp\u6307\u5411\u7684\u6587\u4ef6\u4e2d\u8bfb\u53d6\u957f\u5ea6\u4e0d\u8d85\u8fc7n-l\u7684\u5b57\u7b26\u4e32\u5b58\u5165str\u6307\u5411\u7684\u5185\u5b58", "C)\u4ecefp\u6307\u5411\u7684\u6587\u4ef6\u4e2d\u8bfb\u53d6n\u4e2a\u5b57\u7b26\u4e32\u5b58\uff0fXstr\u6307\u5411\u7684\u5185\u5b58", "D)\u4ecestr\u8bfb\u53d6\u81f3\u591an\u4e2a\u5b57\u7b26\u5230\u6587\u4ef6fp", "B", "fgets\u51fd\u6570\u7684\u4f5c\u7528\u662f\u4ece\u6307\u5b9a\u7684\u6587\u4ef6\u8bfb\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002fgets(str,n,fp)\uff1b\u4e2d\u7684n\u4e3a\u8981\u6c42\u5f97\u5230\u7684\u5b57\u7b26\u7684\u4e2a\u6570\uff0c\u4f46\u53ea\u4ecefb\u6307\u5411\u7684\u6587\u4ef6\u8f93\u5165n-1\u4e2a\u5b57\u7b26\uff0c\u7136\u540e\u5728\u6700\u540e\u52a0\u4e00\u4e2a\u2018\uff3cO\u2019\u5b57\u7b26\uff0c\u56e0\u6b64\u5f97\u5230\u7684\u5b57\u7b26\u4e32\u5171\u6709n\u4e2a\u5b57\u7b26\u3002", "\u00a0", "(50)\u4e0b\u8ff0\u7a0b\u5e8f\u5411\u6587\u4ef6\u8f93\u51fa\u7684\u7ed3\u679c\u662f__________\u3002", "#include<stdio\uff0eh>", "void main()", "{\u00a0 FILE*fp=fopen(\u201cTEST\u201d,\u201dwb\u201d)\uff1b", "fprintf(fp,\u201d\uff05d\uff055\uff0e0f\uff05c\uff05d\u201d,58,76273\uff0e0,\u2019-',2278)\uff1b", "fclose(fp)\uff1b", "}", "A)58 76273-2278\u00a0\u00a0\u00a0 \u00a0\u00a0B)5876273\u3002\uff0e000000-2278", "C)5876273-2278\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0D)\u56e0\u6587\u4ef6\u4e3a\u4e8c\u8fdb\u5236\u6587\u4ef6\u800c\u4e0d\u53ef\u8bfb", "C", "fprintf\u51fd\u6570\u5de5\u4f5c\u65f6\uff0c\u591a\u4e2a\u6570\u636e\u95f4\u4e0d\u4f1a\u81ea\u52a8\u52a0\u5206\u9694\u7b26\uff0c\u9009\u9879A\u9519\u8bef\uff1b\u6d6e\u70b9\u6570\u7684\u8f93\u51fa\u683c\u5f0f\u662f\u201c\uff055\uff0e0f\u201d\u8868\u660e\u5176\u5c0f\u6570\u90e8\u5206\u8f93\u51faO\u4f4d\uff0c\u5373\u6ca1\u6709\u8f93\u51fa\uff0c\u6240\u4ee5\u9009\u9879B\u4e5f\u662f\u9519\u8bef\u7684\u3002", "\u00a0", "\u4e8c\u3001\u586b\u7a7a\u9898(\u6bcf\u7a7a2\u5206\uff0c\u517140\u5206)", "\u8bf7\u5c06\u6bcf\u7a7a\u7684\u6b63\u786e\u7b54\u6848\u5199\u5728\u3010l\u3011\u81f3\u301020\u3011\u5e8f\u53f7\u7684\u6a2a\u7ebf\u4e0a\uff0c\u7b54\u5728\u8bd5\u5377\u4e0a\u4e0d\u5f97\u5206\u3002", "(1)\u5bf9\u4e8e\u957f\u5ea6\u4e3an\u7684\u987a\u5e8f\u5b58\u50a8\u7684\u7ebf\u6027\u8868\uff0c\u5f53\u968f\u673a\u63d2\u5165\u548c\u5220\u9664\u4e00\u4e2a\u5143\u7d20\u65f6\uff0c\u9700\u5e73\u5747\u79fb\u52a8\u5143\u7d20\u00a0\u00a0\u00a0 \u7684\u4e2a\u6570\u4e3a", "\u3002", "\u30101\u3011n\uff0f2", "\u5220\u9664\u4e00\u4e2a\u5143\u7d20\uff0c\u5e73\u5747\u79fb\u52a8\u7684\u5143\u7d20\u4e2a\u6570\u4e3a(n-l+n-2+\u2026\u2026+0)n=(n-1)\uff0f2\uff1b\u63d2\u5165\u4e00\u4e2a\u5143\u7d20\uff0c\u5e73\u5747\u79fb\u52a8\u5143\u7d20\u4e2a\u6570\u4e3a(n+n-l+n-2+\u2026\u2026+1)n=(n+1)\uff0f2\uff1b\u6240\u4ee5\u603b\u4f53\u5e73\u5747\u79fb\u52a8\u5143\u7d20\u4e2a\u6570\u4e3an\uff0f2\u3002", "\u00a0", "(2)\u6ce8\u91ca\u8bf4\u660e\u4e86\u7a0b\u5e8f\u7684\u529f\u80fd\uff0c\u5b83\u5206\u4e3a", "\u6ce8\u91ca\u548c\u529f\u80fd\u6027\u6ce8\u91ca\u3002", "\u30102\u3011\u5e8f\u8a00\u6027", "\u6ce8\u91ca\u4e00\u822c\u5206\u4e3a\u5e8f\u8a00\u6027\u6ce8\u91ca\u548c\u529f\u80fd\u6027\u6ce8\u91ca\u3002", "\u00a0", "(3)\u8f6f\u4ef6\u6d4b\u8bd5\u4e2d\u8def\u5f84\u8986\u76d6\u6d4b\u8bd5\u662f\u6574\u4e2a\u6d4b\u8bd5\u7684\u57fa\u7840\uff0c\u5b83\u662f\u5bf9\u8f6f\u4ef6", "\u8fdb\u884c\u6d4b\u8bd5\u3002", "\u30103\u3011\u7ed3\u6784", "\u8def\u5f84\u6d4b\u8bd5\u662f\u767d\u76d2\u6d4b\u8bd5\u65b9\u6cd5\u4e2d\u7684\u4e00\u79cd\uff0c\u5b83\u8981\u6c42\u5bf9\u7a0b\u5e8f\u4e2d\u7684\u6bcf\u6761\u8def\u5f84\u6700\u5c11\u68c0\u67e5\u4e00\u6b21\uff0c\u76ee\u7684\u662f\u5bf9\u8f6f\u4ef6\u7684\u7ed3\u6784\u8fdb\u884c\u6d4b\u8bd5\u3002", "\u00a0", "(4)\u6570\u636e\u5e93\u6280\u672f\u7684\u4e3b\u8981\u7279\u70b9\u4e3a\u6570\u636e\u7684\u96c6\u6210\u6027\u3001\u6570\u636e\u7684\u9ad8", "\u548c\u4f4e\u5197\u4f59\u6027\u3001\u6570\u636e\u72ec\u7acb\u6027\u548c\u6570\u636e\u7edf\u4e00\u7ba1\u7406\u4e0e\u63a7\u5236\u3002", "\u30104\u3011\u5171\u4eab\u6027", "\u6570\u636e\u5e93\u6280\u672f\u7684\u4e3b\u8981\u7279\u70b9\u6709\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\uff1a\u6570\u636e\u7684\u96c6\u6210\u6027\uff0c\u6570\u636e\u7684\u9ad8\u5171\u4eab\u6027\u4e0e\u4f4e\u5197\u4f59\u6027\uff0c\u6570\u636e\u97f5\u72ec\u7acb\u6027\uff0c\u6570\u636e\u7edf\u4e00\u7ba1\u7406\u4e0e\u63a7\u5236\u3002", "\u00a0", "(5)\u6570\u636e\u5143\u7d20\u4e4b\u95f4", "\u7684\u6574\u4f53\u79f0\u4e3a\u903b\u8f91\u7ed3\u6784\u3002", "\u30105\u3011\u903b\u8f91\u5173\u7cfb", "\u6570\u636e\u5143\u7d20\u4e4b\u95f4\u903b\u8f91\u5173\u7cfb\u7684\u6574\u4f53\u79f0\u4e3a\u903b\u8f91\u7ed3\u6784\u3002\u6570\u636e\u7684\u903b\u8f91\u7ed3\u6784\u5c31\u662f\u6570\u636e\u7684\u7ec4\u7ec7\u5f62\u5f0f\u3002", "\u00a0", "(6)\u82e5\u6709\u5b9a\u4e49int m=5,y=2\uff0c\u5219\u6267\u884c\u8868\u8fbe\u5f0fy+=y-=m*=y\u540e\uff0cy\u7684\u503c\u4e3a", "\u3002", "\u30106\u3011\uff0e16", "\u5c06\u8d4b\u503c\u8fd0\u7b97\u7b26\u53f3\u4fa7\u7684\u201c\u8868\u8fbe\u5f0f\u201d\u7684\u503c\u8d4b\u7ed9\u5de6\u4fa7\u7684\u53d8\u91cf\uff0c\u5e76\u4e14\u8d4b\u503c\u8fd0\u7b97\u7b26\u6309\u7167\u201c\u767d\u53f3\u800c\u5de6\u201d\u7684\u7ed3\u5408\u987a\u5e8f\uff0c\u672c\u9898\u8868\u8fbe\u5f0f\u5e94\u5148\u7b97m\u7684\u503c\u4e3a10\uff0c\u518d\u8fd0\u7b97y\u7684\u503c\u4e3a8\uff0c\u6700\u540e\u8ba1\u7b97y=y+(-8)=-8+(-8)=-16\u3002", "\u00a0", "(7)\u82e5x\u548cy\u90fd\u662fdouble\u578b\u53d8\u91cf\uff0c]ix\u7684\u521d\u503c\u4e3a3\uff0e0\uff0cy\u7684\u521d\u503c\u4e3a2\uff0e0\uff0c\u5219\u8868\u8fbe\u5f0fpow(y\uff0cfabs(x))\u7684\u503c\u4e3a", "\u3002", "\u30107\u30118\uff0e000000", " fabs\u51fd\u6570\u529f\u80fd\u662f\u6c42x\u7684\u7edd\u5bf9\u503c\uff0c\u8ba1\u7b97\u7ed3\u679c\u4e3adouble\u578b\u3002pow\u529f\u80fd\u662f\u8ba1\u7b97x\u7684y\u6b21\u65b9\u7684\u503c\uff0c\u8ba1\u7b97\u7ed3\u679c\u540c\u6837\u4e3adouble\u578b\u3002\u6240\u4ee5\u672c\u9898\u8868\u8fbe\u5f0f\u76f8\u5f53\u4e8e2\uff0e0\u76843\uff0e0\u6b21\u65b9\uff0c\u7ed3\u679c\u4e3a8\uff0e000000\u3002", "\u00a0", "(8)\u8bbe\u6709char a\uff0cb\uff1b\uff0c\u82e5\u8981\u901a\u8fc7a&b\u8fd0\u7b97\u5c4f\u853d\u6389a\u4e2d\u7684\u5176\u5b83\u4f4d\uff0c\u53ea\u4fdd\u7559\u7b2c2\u4f4d\u548c\u7b2c8\u4f4d(\u53f3\u8d77\u4e3a\u7b2c1\u4f4d)\uff0c\u5219b\u7684\u4e8c\u8fdb\u5236\u662f", "\u3002", "\u30108\u301110000010", "\u8fd0\u7b97\u201c&\u201d\u7684\u89c4\u5219\u662f\u53ea\u6709\u5f53\u4e24\u4e2a\u76f8\u5e94\u7684\u4e8c\u8fdb\u5236\u4f4d\u90fd\u4e3a1\u65f6\uff0c\u8be5\u4f4d\u7684\u7ed3\u679c\u624d\u4e3a1\u3002\u8981\u4fdd\u7559\u7b2c2\u30018\u4f4d\uff0c\u53ea\u8981\u5c06\u5176\u4e0e\u4e8c\u8fdb\u5236\u657010000010\u76f8\u4e0e\u3002", "\u00a0", "(9)\u4e0b\u5217\u7a0b\u5e8f\u6267\u884c\u540e\u8f93\u51fa\u7684\u7ed3\u679c\u662f", "\u3002", "f(int a)", "{\u00a0 static c=0\uff1b", "C=a+C++\uff1a", "return(C)\uff1b", "}", "main()", "{\u00a0 int a=2\uff0ci\uff0ck\uff1b", "for(i=O\uff1bi<2\uff1bi++)", "k=f(a++)\uff1b", "printf(\u201d\uff05d\uff3cn\u201d\uff0ck)\uff1b", "}", "\u30109\u30117", "\u5728\u7a0b\u5e8f\u6267\u884c\u65f6\uff0cstatic\u53d8\u91cf\u4ec5\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u4e0b\u6b21\u4f7f\u7528\u65f6\u5c06\u4f7f\u7528\u4e0a\u6b21\u4fdd\u5b58\u7684\u503c\u3002", "\u00a0", "(10)\u4e0b\u9762\u7a0b\u5e8f\u6267\u884c\u540e\u8f93\u51fa\u7684\u7ed3\u679c\u662f", "\u3002", "int m=13\uff1a", "int fun(int x\uff0cint y)", "{\u00a0 int m=3\uff1b", "return(x*y-m)\uff1b", "}", "main()", "{\u00a0 int a=7,b=5\uff1b", "printf(\u201d\uff05d\uff3cn\u201d,fun(a\uff0cb)\uff0fm)\uff1b", "}", "\u301010\u30112", "\u672c\u9898\u53d8\u91cfm\u65e2\u662f\u5916\u90e8\u53d8\u91cf(\u503c\u662f13)\uff0c\u53c8\u662ffun\u51fd\u6570\u7684\u5c40\u90e8\u53d8\u91cf(\u503c\u4e3a3)\u3002\u51fd\u6570fun(x*y-m)\u7684\u503c\u4e3a7*5-3=32\uff0c\u5728main\u51fd\u6570\u4e2d\uff0cftm(a,b)\uff0fm\u4e2d\u7684m\u5e94\u53d6\u5916\u90e8\u53d8\u91cf\u7684\u503c13\uff0c\u56e0\u6b64\u8f93\u51fa2\u3002", "\u00a0", "(11)\u4e0b\u5217\u7a0b\u5e8f\u6267\u884c\u540e\u8f93\u51fa\u7684\u7ed3\u679c\u662f", "\u3002", "main()", "{\u00a0 nt arr[10],i\uff0ck=0\uff1b", "for(I=0\uff1bi<l0\uff1bi++)arr[I]=i\uff1b", "for(I=1\uff1bi<4\uff1bi++)k+=arr[i]+i\uff1b", "printf(\u201d\uff05d\uff3cn\u201d\uff0ck)\uff1b", "}", "\u301011\u301112", "\u672c\u9898\u7684\u7b2c\u4e00\u4e2afur\u5faa\u73af\u7528\u4e8e\u7ed9\u6570\u7ec4arr\u8d4b\u521d\u503c\uff0c\u7b2c\u4e8c\u4e2afor\u5faa\u73af\u7528\u4e8e\u6c42\u548c\u8fd0\u7b97\u3002\u7531\u4e8e\u7b2c\u4e8c\u4e2afur\u5faa\u73af\u521d\u59cb\u503c\u4e3a1\uff0c\u800c\u5faa\u73af\u6761\u4ef6\u4e3ai<4\uff0c\u6240\u4ee5\u6c42\u7684\u662fart[1]\u5230arr[3]\u53cai\u7684\u548c\uff0c\u6240\u4ee5\u8f93\u51fa\u7ed3\u679c\u4e3a12\u3002", "\u00a0", "(12)\u4e0b\u5217\u7a0b\u5e8f\u6267\u884c\u540e\u8f93\u51fa\u7684\u7ed3\u679c\u662f ", "\u3002", "struct s", "{int x\uff0cy\uff1b}data[2]={10,100,20,200}\uff1b", "main()", "{", "struct s*p=data\uff1b", "printf(\u201d\uff05d\\n\u201d\uff0c++(p->x))\uff1b", "}", "\u301012\u301111", "\u7a0b\u5e8f\u4e2d\u7ed3\u6784\u4f53\u6570\u7ec4data\u9996\u5730\u5740(\u5373&data[0])\u8d4b\u503c\u7ed9\u7ed3\u6784\u4f53\u6307\u9488\u53d8\u91cfp\uff0c++(p->x)\u8868\u793a\u5148\u5c06p\u6240\u6307\u5411\u7684\u7ed3\u6784\u4f53\u53d8\u91cf\u7684\u6210\u5458x\u503c\u52a01\uff0c\u7136\u540e\u5c06\u6b64x(\u5373data[01\uff0ex]\u8f93\u51fa\u3002", "\u00a0", "(13)\u4e0b\u9762\u7a0b\u5e8f\u6709\u4e24\u4e2aprintf\u8bed\u53e5\uff0c\u5982\u679c\u7b2c\u4e00\u4e2aprintf\u8bed\u53e5\u8f93\u51fa\u7684\u662f194\uff0c\u5219\u7b2c\u4e8c\u4e2aprint\u8bed\u53e5\u7684\u8f93\u51fa\u7ed3\u679c\u662f", "\u3002", "main()", "{ int a [10]={1,2,3,4,5,6,7,8,9,0}\uff0c*p\uff1b", "p=a\uff1b", "printf(\u201d\uff05X\uff3cn\u201d\uff0cp)\uff1b", "printf(\u201d\uff05x\uff3cn\u201d\uff0cp+9)\uff1b", "}", "\u301013\u3011la6", "\u8bc4\u6790:\u5bf9\u4e8e\u6307\u9488\u53d8\u91cf\u7684\u8fd0\u7b97\uff0c\u5c31\u662f\u5bf9\u5730\u5740\u7684\u8fd0\u7b97\u3002\u672c\u9898\u4e2d\u7531\u4e8e\u6307\u9488\u6307\u5411\u7684\u662f\u6574\u578b\u53d8\u91cf\uff0c\u6240\u4ee5\uff0c\u4f7f\u6307\u9488\u53d8\u91cf\u79fb\u52a89\u4e2a\u4f4d\u7f6e\u4e5f\u5c31\u662f\u79fb\u52a818\u4e2a\u5b57\u8282\u3002\u6ce8\u610f\uff0c\u672c\u9898\u662f\u4ee516\u8fdb\u5236\u8f93\u51fa\u7684\u3002", "\u00a0", "(14)\u4ee5\u4e0b\u51fd\u6570\u7684\u529f\u80fd\u662f\u8ba1\u7b97s=l+l\uff0f2!+l\uff0f3!+\u2026+l\uff0fn!\uff0c\u8bf7\u586b\u7a7a.", "double fun(int n)", "{\u00a0 double s=O\uff0eO,fac=1\uff0eO\uff1b", "int i\uff0ck=1\uff1b", "for(i=l\uff1bi<=n\uff1bi++)", "{\u00a0 ", "\uff1b", "fat=fat\uff0fk\uff1b", "s=s+fac\uff1b", "}", "}", "\u301014\u3011k=k*i", "\u672c\u9898\u4e2d\u901a\u8fc7for\u5faa\u73af\u6c42s\u8868\u8fbe\u5f0f\u4e2d\u6bcf\u4e00\u9879\u7684\u548c\uff0c\u8868\u8fbe\u5f0f\u201cfac=fac\uff0fk\uff1b\u201d\u6c42\u7684\u662f\u6bcf\u4e00\u9879\u7684\u503c\uff0c\u6240\u4ee5k\u7684\u503c\u5e94\u4e3an!\uff0c\u5728\u6c42n!\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u7528\u4e0a\u6b21\u5faa\u73af\u9636\u4e58\u7684\u503c\u4e58i\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u5f97\u6b64\u6b21n!\uff0c\u6545\u672c\u9898\u586bk=k*i\u3002", "\u00a0", "(15)\u4e0b\u9762\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f", "\u3002", "main()", "{\u00a0 unsigned a=0112,x\uff1b", "x=a>>3\uff1a", "printf(\u201dx=\uff05o\u201d\uff0cx)\uff1b", "}", "\u301015\u3011x=11", "\u5728\u5bf9\u65e0\u7b26\u53f7\u6570\u7684\u53f3\u79fb\u662f\u9ad8\u4f4d\u88650\u3002", "\u00a0", "(16)\u51fd\u6570delete(s,i,n)\u662f\u4f5c\u7528\u662f\u4ece\u5b57\u7b26\u4e32s\u4e2d\u5220\u9664\u4ece\u7b2ci\u4e2a\u5b57\u7b26\u5f00\u59cb\u7684n\u4e2a\u5b57\u7b26\uff0c\u8bf7\u586b\u7a7a\u3002", "void delete(char s[]\uff0cint i,int n)", "{\u00a0 int j\uff0ck,length=O\uff1b", "while(s[1ength])", "\uff1b", "\u2013i\uff1a", "j=i\uff1b", "}", "if(", ")", "{\u00a0 k=i+n\uff1b", "if(i+n<=length)", "while(k<length)", "s[j++]=s[k++]\uff1b", "s[j]=\u2018\uff3c0\u2019;", "}", "\u301016\u3011length++", "\u301017\u3011i<length", "\u7b2c\u4e00\u4e2a\u5faa\u73af\u6781\u6709\u53ef\u80fd\u662f\u8ba1\u7b97\u4e32\u7684\u957f\u5ea6\uff0c\u5728i<=length\u65f6\u5b57\u7b26\u624d\u88ab\u5220\u9664\uff0c\u88ab\u5220\u9664\u7684\u662f\u4ece\u7b2ci\u4e2a\u5230\u7b2ci+n\u6216\u6700\u540e\u4e00\u4e2a\u95f4\u7684\u6240\u6709\u5b57\u7b26\u3002\u5220\u9664\u524d\uff0c\u5e94\u5224\u65adi<=length\u3002\u7531\u4e8e\u5df2\u7ecf\u8fdb\u884c\u4e86\u4e00i\u8fd0\u7b97\uff0c\u6545\u5b9e\u9645\u5e94\u586b\u5165i<length\u3002", "\u00a0", "(17)\u4e0b\u8ff0\u51fd\u6570\u7edf\u8ba1\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd\u4e2a\u6570\uff0c\u5355\u8bcd\u662f\u6307\u5904\u5728\u7a7a\u683c\u4e4b\u95f4\u7684\u5b57\u7b26\u5e8f\u5217\uff0c\u8bf7\u586b\u7a7a\u3002", "int word(char*s)", "{ int num=O,flag=O\uff1b", "while(*s)", "{ if(", "==\u201d)flag=O\uff1b", "else if(", "){flag=1\uff1bnum++}", "}", "return", "\uff1b", "}", "\u301018\u3011*s++", "\u301019\u3011flag==O\u6216*\uff08s-1\uff09==\u201d", "\u301020\u3011num", "\u5728\u7edf\u8ba1\u5b57\u7b26\u4e32\u5355\u8bcd\u4e2a\u6570\u7684\u7b97\u6cd5\u4e2d\uff0c\u672c\u9898\u7684flag\u662f\u4e3a\u4e86\u8bb0\u5f55\u4e00\u4e2a\u5355\u8bcd\u662f\u5426\u7ed3\u675f\u3002\u7b2c18\u7a7a\u5e94\u586b*s++\uff1b\u5982\u679c\u67d0\u4e2a\u5b57\u7b26\u4e0d\u662f\u7a7a\u683c\uff0c\u5219\u5fc5\u9700\u5224\u65ad\u5b83\u662f\u5426\u662f\u5355\u8bcd\uff0c\u5982\u662f\uff0c\u5219\u4f7f\u5f97flag\u7684\u6807\u5fd7\u4e3a1\uff0cnum\u7684\u503c\u52a01\u3002\u672c\u9898\u5224\u65ad\u65b9\u6cd5\u662f\uff1a\u5148\u5224\u65ads\u6240\u6307\u5411\u7684\u5b57\u7b26\u662f\u5426\u4e3a\u7a7a\u683c\uff0c\u5982\u679c\u662f\u5219\u4f7f\u5f97flag=O\uff0c\u5426\u5219\u5224\u65ad\u524d\u4e00\u4e2a\u5b57\u7b26\u662f\u5426\u662f\u7a7a\u683c\uff0c\u5982\u679c\u662f\u5219\u8bf4\u660e\u8fd9\u4e2a\u5b57\u7b26\u662f\u4e00\u4e2a\u5355\u8bcd\u7684\u5f00\u59cb\uff0c\u5c06flag\u6807\u5fd7\u4e3a1\uff0cnum\u7684\u503c\u52a01\uff0c\u5982\u679c\u4e0d\u662f\uff0c\u5219\u4e0d\u5fc5\u8bb0\u5f55\u3002\u6545\u7b2c19\u7a7a\u5e94flag==O\u6216*(s-1)==\u201d\uff1b\u6700\u540e\u4e00\u4e2a\u7a7a\u683c\u9700\u586b\u5199\u7684\u662f\u8fd4\u56de\u7684\u5355\u8bcd\u7684\u4e2a\u6570\uff0c\u5373num\u3002"], "title": "C\u8bed\u8a00\u7b14\u8bd5\u9898\u5e26\u7b54\u6848\uff08\u4e00\uff09"},
{"contents": ["A frequent reader of this site sent this in. No answers, but a nice set of questions. Consider getting Kernighan and Ritchie title if you find many things puzzling here.", "What does static variable mean?", "\nWhat is a pointer?", "\nWhat is a structure?", "\nWhat are the differences between structures and arrays?", "\nIn header files whether functions are declared or defined?", "\nWhat are the differences between malloc() and calloc()?", "\nWhat are macros? What are the advantages and disadvantages?", "\nDifference between pass by reference and pass by value?", "\nWhat is static identifier?", "\nWhere are the auto variables stored?", "\nWhere does global, static, local, register variables, free memory and C Program instructions get stored?", "\nDifference between arrays and linked list?", "\nWhat are enumerations?", "\nDescribe about storage allocation and scope of global, extern, static, local and register variables?", "\nWhat are register variables? What are the advantage of using register variables?", "\nWhat is the use of typedef?", "\nCan we specify variable field width in a scanf() format string? If possible how?", "\nOut of fgets() and gets() which function is safe to use and why?", "\nDifference between strdup and strcpy?", "\nWhat is recursion?", "\nDifferentiate between a for loop and a while loop? What are it uses?", "\nWhat are the different storage classes in C?", "\nWrite down the equivalent pointer expression for referring the same element a[i][j][k][l]?", "\nWhat is difference between Structure and Unions?", "\nWhat the advantages of using Unions?", "\nWhat are the advantages of using pointers in a program?", "\nWhat is the difference between Strings and Arrays?", "\nIn a header file whether functions are declared or defined?", "\nWhat is a far pointer? where we use it?", "\nHow will you declare an array of three function pointers where each function receives two ints and returns a float?", "\nWhat is a NULL Pointer? Whether it is same as an uninitialized pointer?", "\nWhat is a NULL Macro? What is the difference between a NULL Pointer and a NULL Macro?", "\nWhat does the error \u2018Null Pointer Assignment\u2019 mean and what causes this error?", "\nWhat is near, far and huge pointers? How many bytes are occupied by them?", "\nHow would you obtain segment and offset addresses from a far address of a memory location?", "\nAre the expressions arr and *arr same for an array of integers?", "\nDoes mentioning the array name gives the base address in all the contexts?", "\nExplain one method to process an entire string as one unit?", "\nWhat is the similarity between a Structure, Union and enumeration?", "\nCan a Structure contain a Pointer to itself?", "\nHow can we check whether the contents of two structure variables are same or not?", "\nHow are Structure passing and returning implemented by the complier?", "\nHow can we read/write Structures from/to data files?", "\nWhat is the difference between an enumeration and a set of pre-processor # defines?", "\nWhat do the \u2018c\u2019 and \u2018v\u2019 in argc and argv stand for?", "\nAre the variables argc and argv are local to main?", "\nWhat is the maximum combined length of command line arguments including the space between adjacent arguments?", "\nIf we want that any wildcard characters in the command line arguments should be appropriately expanded, are we required to make any special provision? If yes, which?", "\nDoes there exist any way to make the command line arguments available to other functions without passing them as arguments to the function?", "\nWhat are bit fields? What is the use of bit fields in a Structure declaration?", "\nTo which numbering system can the binary number 1101100100111100 be easily converted to?", "\nWhich bit wise operator is suitable for checking whether a particular bit is on or off?", "\nWhich bit wise operator is suitable for turning off a particular bit in a number?", "\nWhich bit wise operator is suitable for putting on a particular bit in a number?", "\nWhich bit wise operator is suitable for checking whether a particular bit is on or off?", "\nWhich one is equivalent to multiplying by 2?", "\nLeft shifting a number by 1", "\nLeft shifting an unsigned int or char by 1?", "\nWrite a program to compare two strings without using the strcmp() function.", "\nWrite a program to concatenate two strings.", "\nWrite a program to interchange 2 variables without using the third one.", "\nWrite programs for String Reversal. The same for Palindrome check.", "\nWrite a program to find the Factorial of a number.", "\nWrite a program to generate the Fibonacci Series?", "\nWrite a program which employs Recursion?", "\nWrite a program which uses command line arguments.", "\nWrite a program which uses functions like strcmp(), strcpy(), etc.", "\nWhat are the advantages of using typedef in a program?", "\nHow would you dynamically allocate a one-dimensional and two-dimensional array of integers?", "\nHow can you increase the size of a dynamically allocated array?", "\nHow can you increase the size of a statically allocated array?", "\nWhen reallocating memory if any other pointers point into the same piece of memory do you have to readjust these other pointers or do they get readjusted automatically?", "\nWhich function should be used to free the memory allocated by calloc()?", "\nHow much maximum can you allocate in a single call to malloc()?", "\nCan you dynamically allocate arrays in expanded memory?", "\nWhat is object file? How can you access object file?", "\nWhich header file should you include if you are to develop a function which can accept variable number of arguments?", "\nCan you write a function similar to printf()?", "\nHow can a called function determine the number of arguments that have been passed to it?", "\nCan there be at least some solution to determine the number of arguments passed to a variable argument list function?", "\nHow do you declare the following:", "\nAn array of three pointers to chars", "\nAn array of three char pointers", "\nA pointer to array of three chars", "\nA pointer to function which receives an int pointer and returns a float pointer", "\nA pointer to a function which receives nothing and returns nothing", "\nWhat do the functions atoi(), itoa() and gcvt() do?", "\nDoes there exist any other function which can be used to convert an integer or a float to a string?", "\nHow would you use qsort() function to sort an array of structures?", "\nHow would you use qsort() function to sort the name stored in an array of pointers to string?", "\nHow would you use bsearch() function to search a name stored in array of pointers to string?", "\nHow would you use the functions sin(), pow(), sqrt()?", "\nHow would you use the functions memcpy(), memset(), memmove()?", "\nHow would you use the functions fseek(), freed(), fwrite() and ftell()?", "\nHow would you obtain the current time and difference between two times?", "\nHow would you use the functions randomize() and random()?", "\nHow would you implement a substr() function that extracts a sub string from a given string?", "\nWhat is the difference between the functions rand(), random(), srand() and randomize()?", "\nWhat is the difference between the functions memmove() and memcpy()?", "\nHow do you print a string on the printer?", "\nCan you use the function fprintf() to display the output on the screen? "], "title": "C interview questions\uff08\u8d85\u7ea7\u7ecf\u5178\uff09"},
{"contents": ["What will print out?", "\nmain()", "\n{", "\n        char *p1=\u201cname\u201d;", "\n        char *p2;", "\n        p2=(char*)malloc(20);", "\n        memset (p2, 0, 20);", "\n        while(*p2++ = *p1++);", "\n        printf(\u201c%sn\u201d,p2); ", "} ", "Answer:empty string. ", "What will be printed as the result of the operation below:", "main()", "\n{", "\n    int x=20,y=35;", "\n    x=y++ + x++;", "\n    y= ++y + ++x;", "\n    printf(\u201c%d%dn\u201d,x,y);", "\n} ", "Answer : 5794 ", "What will be printed as the result of the operation below:", "main()", "\n{", "\n    int x=5;", "\n    printf(\u201c%d,%d,%dn\u201d,x,x>2);", "\n}", "Answer: 5,20,1 ", "What will be printed as the result of the operation below:", "#define swap(a,b) a=a+b;b=a-b;a=a-b;", "\nvoid main()", "\n{", "\n    int x=5, y=10;", "\n    swap (x,y);", "\n    printf(\u201c%d %dn\u201d,x,y);", "\n    swap2(x,y);", "\n    printf(\u201c%d %dn\u201d,x,y);", "\n} ", "int swap2(int a, int b)", "\n{", "\n    int temp;", "\n    temp=a;", "\n    b=a;", "\n    a=temp;", "\n    return 0; ", "} ", "Answer: 10, 5", "\n10, 5 ", "What will be printed as the result of the operation below:", "main()", "\n{", "\n    char *ptr = \u201d Cisco Systems\u201d;", "\n    *ptr++; printf(\u201c%sn\u201d,ptr);", "\n    ptr++;", "\n    printf(\u201c%sn\u201d,ptr);", "\n} ", "Answer:Cisco Systems", "\nisco systems ", "What will be printed as the result of the operation below:", "main()", "\n{", "\n    char s1[]=\u201cCisco\u201d;", "\n    char s2[]= \u201csystems\u201d;", "\n    printf(\u201c%s\u201d,s1);", "\n}", "\nAnswer: Cisco ", "What will be printed as the result of the operation below:", "main()", "\n{", "\n    char *p1;", "\n    char *p2;", "\n    p1=(char *)malloc(25);", "\n    p2=(char *)malloc(25); ", "    strcpy(p1,\u201dCisco\u201d);", "\n    strcpy(p2,\u201csystems\u201d);", "\n    strcat(p1,p2); ", "    printf(\u201c%s\u201d,p1); ", "} ", "Answer: Ciscosystems ", "The following variable is available in file1.c, who can access it?:", "static int average;", "Answer: all the functions in the file1.c can access the variable. ", "WHat will be the result of the following code?", "#define TRUE 0 // some code", "\nwhile(TRUE)", "\n{ ", "    // some code ", "} ", "Answer: This will not go into the loop as TRUE is defined as 0. ", "What will be printed as the result of the operation below:", "int x;", "\nint modifyvalue()", "\n{", "\n    return(x+=10);", "\n}", "\nint changevalue(int x)", "\n{", "\n    return(x+=1);", "\n} ", "void main()", "\n{", "\n    int x=10;", "\n    x++;", "\n    changevalue(x);", "\n    x++;", "\n    modifyvalue();", "\n    printf(\u201cFirst output:%dn\u201d,x); ", "    x++;", "\n    changevalue(x);", "\n    printf(\u201cSecond output:%dn\u201d,x);", "\n    modifyvalue();", "\n    printf(\u201cThird output:%dn\u201d,x); ", "} ", "Answer: 12 , 13 , 13 ", "What will be printed as the result of the operation below:", "main()", "\n{", "\n    int x=10, y=15;", "\n    x = x++;", "\n    y = ++y;", "\n    printf(\u201c%d %dn\u201d,x,y);", "\n} ", "Answer: 11, 16 ", "What will be printed as the result of the operation below:", "main()", "\n{", "\n    int a=0;", "\n    if(a==0)", "\n        printf(\u201cCisco Systemsn\u201d);", "\n        printf(\u201cCisco Systemsn\u201d);", "\n} ", "Answer: Two lines with \u201cCisco Systems\u201d will be printed. "], "title": "C\u9762\u8bd5\u65f6\u7684\u8bfb\u7a0b\u5e8f\u9898"},
{"contents": ["\u7b2c\u4e00\u90e8\u5206\uff1a\u57fa\u672c\u6982\u5ff5\u53ca\u5176\u5b83\u95ee\u7b54\u9898", "\n1\u3001\u5173\u952e\u5b57static\u7684\u4f5c\u7528\u662f\u4ec0\u4e48\uff1f", "\n\u8fd9\u4e2a\u7b80\u5355\u7684\u95ee\u9898\u5f88\u5c11\u6709\u4eba\u80fd\u56de\u7b54\u5b8c\u5168\u3002\u5728C\u8bed\u8a00\u4e2d\uff0c\u5173\u952e\u5b57static\u6709\u4e09\u4e2a\u660e\u663e\u7684\u4f5c\u7528\uff1a", "\n1). \u5728\u51fd\u6570\u4f53\uff0c\u4e00\u4e2a\u88ab\u58f0\u660e\u4e3a\u9759\u6001\u7684\u53d8\u91cf\u5728\u8fd9\u4e00\u51fd\u6570\u88ab\u8c03\u7528\u8fc7\u7a0b\u4e2d\u7ef4\u6301\u5176\u503c\u4e0d\u53d8\u3002", "\n2). \u5728\u6a21\u5757\u5185\uff08\u4f46\u5728\u51fd\u6570\u4f53\u5916\uff09\uff0c\u4e00\u4e2a\u88ab\u58f0\u660e\u4e3a\u9759\u6001\u7684\u53d8\u91cf\u53ef\u4ee5\u88ab\u6a21\u5757\u5185\u6240\u7528\u51fd\u6570\u8bbf\u95ee\uff0c\u4f46\u4e0d\u80fd\u88ab\u6a21\u5757\u5916\u5176\u5b83\u51fd\u6570\u8bbf\u95ee\u3002\u5b83\u662f\u4e00\u4e2a\u672c\u5730\u7684\u5168\u5c40\u53d8\u91cf\u3002", "\n3). \u5728\u6a21\u5757\u5185\uff0c\u4e00\u4e2a\u88ab\u58f0\u660e\u4e3a\u9759\u6001\u7684\u51fd\u6570\u53ea\u53ef\u88ab\u8fd9\u4e00\u6a21\u5757\u5185\u7684\u5176\u5b83\u51fd\u6570\u8c03\u7528\u3002\u90a3\u5c31\u662f\uff0c\u8fd9\u4e2a\u51fd\u6570\u88ab\u9650\u5236\u5728\u58f0\u660e\u5b83\u7684\u6a21\u5757\u7684\u672c\u5730\u8303\u56f4\u5185\u4f7f\u7528\u3002", "\n\u5927\u591a\u6570\u5e94\u8bd5\u8005\u80fd\u6b63\u786e\u56de\u7b54\u7b2c\u4e00\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u80fd\u6b63\u786e\u56de\u7b54\u7b2c\u4e8c\u90e8\u5206\uff0c\u540c\u662f\u5f88\u5c11\u7684\u4eba\u80fd\u61c2\u5f97\u7b2c\u4e09\u90e8\u5206\u3002\u8fd9\u662f\u4e00\u4e2a\u5e94\u8bd5\u8005\u7684\u4e25\u91cd\u7684\u7f3a\u70b9\uff0c\u56e0\u4e3a\u4ed6\u663e\u7136\u4e0d\u61c2\u5f97\u672c\u5730\u5316\u6570\u636e\u548c\u4ee3\u7801\u8303\u56f4\u7684\u597d\u5904\u548c\u91cd\u8981\u6027\u3002", "2\u3001\u201c\u5f15\u7528\u201d\u4e0e\u6307\u9488\u7684\u533a\u522b\u662f\u4ec0\u4e48\uff1f", "\n\u7b54 \u30011) \u5f15\u7528\u5fc5\u987b\u88ab\u521d\u59cb\u5316\uff0c\u6307\u9488\u4e0d\u5fc5\u3002", "\n2) \u5f15\u7528\u521d\u59cb\u5316\u4ee5\u540e\u4e0d\u80fd\u88ab\u6539\u53d8\uff0c\u6307\u9488\u53ef\u4ee5\u6539\u53d8\u6240\u6307\u7684\u5bf9\u8c61\u3002", "\n3) \u4e0d\u5b58\u5728\u6307\u5411\u7a7a\u503c\u7684\u5f15\u7528\uff0c\u4f46\u662f\u5b58\u5728\u6307\u5411\u7a7a\u503c\u7684\u6307\u9488\u3002", "\n\u6307\u9488\u901a\u8fc7\u67d0\u4e2a\u6307\u9488\u53d8\u91cf\u6307\u5411\u4e00\u4e2a\u5bf9\u8c61\u540e\uff0c\u5bf9\u5b83\u6240\u6307\u5411\u7684\u53d8\u91cf\u95f4\u63a5\u64cd\u4f5c\u3002\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u6307\u9488\uff0c\u7a0b\u5e8f\u7684\u53ef\u8bfb\u6027\u5dee\uff1b\u800c\u5f15\u7528\u672c\u8eab\u5c31\u662f\u76ee\u6807\u53d8\u91cf\u7684\u522b\u540d\uff0c\u5bf9\u5f15\u7528\u7684\u64cd\u4f5c\u5c31\u662f\u5bf9\u76ee\u6807\u53d8\u91cf\u7684\u64cd\u4f5c\u3002", "\n\u6d41\u64cd\u4f5c\u7b26>\u3001\u8d4b\u503c\u64cd\u4f5c\u7b26=\u7684\u8fd4\u56de\u503c\u3001\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u7684\u53c2\u6570\u3001\u8d4b\u503c\u64cd\u4f5c\u7b26=\u7684\u53c2\u6570\u3001\u5176\u5b83\u60c5\u51b5\u90fd\u63a8\u8350\u4f7f\u7528\u5f15\u7528\u3002", "3\u3001.h\u5934\u6587\u4ef6\u4e2d\u7684ifndef/define/endif \u7684\u4f5c\u7528\uff1f", "\n\u7b54\uff1a\u9632\u6b62\u8be5\u5934\u6587\u4ef6\u88ab\u91cd\u590d\u5f15\u7528\u3002", "4\u3001#include", "5\u3001\u63cf\u8ff0\u5b9e\u65f6\u7cfb\u7edf\u7684\u57fa\u672c\u7279\u6027", "\n\u7b54 \uff1a\u5728\u7279\u5b9a\u65f6\u95f4\u5185\u5b8c\u6210\u7279\u5b9a\u7684\u4efb\u52a1\uff0c\u5b9e\u65f6\u6027\u4e0e\u53ef\u9760\u6027\u3002", "6\u3001\u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u5728\u5185\u5b58\u4e2d\u662f\u5426\u6709\u533a\u522b\uff1f\u5982\u679c\u6709\uff0c\u662f\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u7b54 \uff1a\u5168\u5c40\u53d8\u91cf\u50a8\u5b58\u5728\u9759\u6001\u6570\u636e\u533a\uff0c\u5c40\u90e8\u53d8\u91cf\u5728\u5806\u6808\u4e2d\u3002", "7\u3001\u4ec0\u4e48\u662f\u5e73\u8861\u4e8c\u53c9\u6811\uff1f", "\n\u7b54 \uff1a\u5de6\u53f3\u5b50\u6811\u90fd\u662f\u5e73\u8861\u4e8c\u53c9\u6811 \u4e14\u5de6\u53f3\u5b50\u6811\u7684\u6df1\u5ea6\u5dee\u503c\u7684\u7edd\u5bf9\u503c\u4e0d\u5927\u4e8e1\u3002", "8\u3001\u5806\u6808\u6ea2\u51fa\u4e00\u822c\u662f\u7531\u4ec0\u4e48\u539f\u56e0\u5bfc\u81f4\u7684\uff1f", "\n\u7b54 \uff1a1.\u6ca1\u6709\u56de\u6536\u5783\u573e\u8d44\u6e90", "\n\t 2.\u5c42\u6b21\u592a\u6df1\u7684\u9012\u5f52\u8c03\u7528", "9\u3001\u5192\u6ce1\u6392\u5e8f\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u4ec0\u4e48\uff1f", "\n\u7b54 \uff1aO(n^2)", "\n10\u3001\u4ec0\u4e48\u51fd\u6570\u4e0d\u80fd\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff1f", "\n\u7b54\uff1aconstructor", "11\u3001\u961f\u5217\u548c\u6808\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u7b54\uff1a\u961f\u5217\u5148\u8fdb\u5148\u51fa\uff0c\u6808\u540e\u8fdb\u5148\u51fa", "12\u3001\u4e0d\u80fd\u505aswitch()\u7684\u53c2\u6570\u7c7b\u578b", "\n\u7b54 \uff1aswitch\u7684\u53c2\u6570\u4e0d\u80fd\u4e3a\u5b9e\u578b\u3002", "13\u3001\u5c40\u90e8\u53d8\u91cf\u80fd\u5426\u548c\u5168\u5c40\u53d8\u91cf\u91cd\u540d\uff1f", "\n\u7b54\uff1a\u80fd\uff0c\u5c40\u90e8\u4f1a\u5c4f\u853d\u5168\u5c40\u3002\u8981\u7528\u5168\u5c40\u53d8\u91cf\uff0c\u9700\u8981\u4f7f\u7528\u201d::\u201d", "\n\u5c40\u90e8\u53d8\u91cf\u53ef\u4ee5\u4e0e\u5168\u5c40\u53d8\u91cf\u540c\u540d\uff0c\u5728\u51fd\u6570\u5185\u5f15\u7528\u8fd9\u4e2a\u53d8\u91cf\u65f6\uff0c\u4f1a\u7528\u5230\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u800c\u4e0d\u4f1a\u7528\u5230\u5168\u5c40\u53d8\u91cf\u3002\u5bf9\u4e8e\u6709\u4e9b\u7f16\u8bd1\u5668\u800c\u8a00\uff0c\u5728\u540c\u4e00\u4e2a\u51fd\u6570\u5185\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u6bd4\u5982\u5728\u4e24\u4e2a\u5faa\u73af\u4f53\u5185\u90fd\u5b9a\u4e49\u4e00\u4e2a\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u800c\u90a3\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u5c31\u5728\u90a3\u4e2a\u5faa\u73af\u4f53\u5185", "14\u3001\u5982\u4f55\u5f15\u7528\u4e00\u4e2a\u5df2\u7ecf\u5b9a\u4e49\u8fc7\u7684\u5168\u5c40\u53d8\u91cf\uff1f", "\n\u7b54 \u3001\u53ef\u4ee5\u7528\u5f15\u7528\u5934\u6587\u4ef6\u7684\u65b9\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u7528extern\u5173\u952e\u5b57\uff0c\u5982\u679c\u7528\u5f15\u7528\u5934\u6587\u4ef6\u65b9\u5f0f\u6765\u5f15\u7528\u67d0\u4e2a\u5728\u5934\u6587\u4ef6\u4e2d\u58f0\u660e\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u5047\u5b9a\u4f60\u5c06\u90a3\u4e2a\u53d8\u91cf\u5199\u9519\u4e86\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4\u4f1a\u62a5\u9519\uff0c\u5982\u679c\u4f60\u7528extern\u65b9\u5f0f\u5f15\u7528\u65f6\uff0c\u5047\u5b9a\u4f60\u72af\u4e86\u540c\u6837\u7684\u9519\u8bef\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4\u4e0d\u4f1a\u62a5\u9519\uff0c\u800c\u5728\u8fde\u63a5\u671f\u95f4\u62a5\u9519\u3002", "15\u3001\u5168\u5c40\u53d8\u91cf\u53ef\u4e0d\u53ef\u4ee5\u5b9a\u4e49\u5728\u53ef\u88ab\u591a\u4e2a.C\u6587\u4ef6\u5305\u542b\u7684\u5934\u6587\u4ef6\u4e2d\uff1f\u4e3a\u4ec0\u4e48\uff1f", "\n\u7b54 \u3001\u53ef\u4ee5\uff0c\u5728\u4e0d\u540c\u7684C\u6587\u4ef6\u4e2d\u4ee5static\u5f62\u5f0f\u6765\u58f0\u660e\u540c\u540d\u5168\u5c40\u53d8\u91cf\u3002", "\n\u53ef\u4ee5\u5728\u4e0d\u540c\u7684C\u6587\u4ef6\u4e2d\u58f0\u660e\u540c\u540d\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u524d\u63d0\u662f\u5176\u4e2d\u53ea\u80fd\u6709\u4e00\u4e2aC\u6587\u4ef6\u4e2d\u5bf9\u6b64\u53d8\u91cf\u8d4b\u521d\u503c\uff0c\u6b64\u65f6\u8fde\u63a5\u4e0d\u4f1a\u51fa\u9519\u3002", "16\u3001\u8bed\u53e5for( \uff1b1 \uff1b)\u6709\u4ec0\u4e48\u95ee\u9898\uff1f\u5b83\u662f\u4ec0\u4e48\u610f\u601d\uff1f", "\n\u7b54 \u3001\u548cwhile(1)\u76f8\u540c\uff0c\u65e0\u9650\u5faa\u73af\u3002", "17\u3001do\u2026\u2026while\u548cwhile\u2026\u2026do\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u7b54 \u3001\u524d\u4e00\u4e2a\u5faa\u73af\u4e00\u904d\u518d\u5224\u65ad\uff0c\u540e\u4e00\u4e2a\u5224\u65ad\u4ee5\u540e\u518d\u5faa\u73af\u3002", "18\u3001statac \u5168\u5c40\u53d8\u91cf\u3001\u5c40\u90e8\u53d8\u91cf\u3001\u51fd\u6570\u4e0e\u666e\u901a\u5168\u5c40\u53d8\u91cf\u3001\u5c40\u90e8\u53d8\u91cf\u3001\u51fd\u6570", "\nstatic\u5168\u5c40\u53d8\u91cf\u4e0e\u666e\u901a\u7684\u5168\u5c40\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1fstatic\u5c40\u90e8\u53d8\u91cf\u548c\u666e\u901a\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1fstatic\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u7b54 \u3001\u5168\u5c40\u53d8\u91cf(\u5916\u90e8\u53d8\u91cf)\u7684\u8bf4\u660e\u4e4b\u524d\u518d\u51a0\u4ee5static \u5c31\u6784\u6210\u4e86\u9759\u6001\u7684\u5168\u5c40\u53d8\u91cf\u3002\u5168\u5c40\u53d8\u91cf\u672c\u8eab\u5c31\u662f\u9759\u6001\u5b58\u50a8\u65b9\u5f0f\uff0c \u9759\u6001\u5168\u5c40\u53d8\u91cf\u5f53\u7136\u4e5f\u662f\u9759\u6001\u5b58\u50a8\u65b9\u5f0f\u3002 \u8fd9\u4e24\u8005\u5728\u5b58\u50a8\u65b9\u5f0f\u4e0a\u5e76\u65e0\u4e0d\u540c\u3002\u8fd9\u4e24\u8005\u7684\u533a\u522b\u867d\u5728\u4e8e\u975e\u9759\u6001\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u662f\u6574\u4e2a\u6e90\u7a0b\u5e8f\uff0c \u5f53\u4e00\u4e2a\u6e90\u7a0b\u5e8f\u7531\u591a\u4e2a\u6e90\u6587\u4ef6\u7ec4\u6210\u65f6\uff0c\u975e\u9759\u6001\u7684\u5168\u5c40\u53d8\u91cf\u5728\u5404\u4e2a\u6e90\u6587\u4ef6\u4e2d\u90fd\u662f\u6709\u6548\u7684\u3002 \u800c\u9759\u6001\u5168\u5c40\u53d8\u91cf\u5219\u9650\u5236\u4e86\u5176\u4f5c\u7528\u57df\uff0c \u5373\u53ea\u5728\u5b9a\u4e49\u8be5\u53d8\u91cf\u7684\u6e90\u6587\u4ef6\u5185\u6709\u6548\uff0c \u5728\u540c\u4e00\u6e90\u7a0b\u5e8f\u7684\u5176\u5b83\u6e90\u6587\u4ef6\u4e2d\u4e0d\u80fd\u4f7f\u7528\u5b83\u3002\u7531\u4e8e\u9759\u6001\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u5c40\u9650\u4e8e\u4e00\u4e2a\u6e90\u6587\u4ef6\u5185\uff0c\u53ea\u80fd\u4e3a\u8be5\u6e90\u6587\u4ef6\u5185\u7684\u51fd\u6570\u516c\u7528\uff0c \u56e0\u6b64\u53ef\u4ee5\u907f\u514d\u5728\u5176\u5b83\u6e90\u6587\u4ef6\u4e2d\u5f15\u8d77\u9519\u8bef\u3002", "\n\u4ece\u4ee5\u4e0a\u5206\u6790\u53ef\u4ee5\u770b\u51fa\uff0c \u628a\u5c40\u90e8\u53d8\u91cf\u6539\u53d8\u4e3a\u9759\u6001\u53d8\u91cf\u540e\u662f\u6539\u53d8\u4e86\u5b83\u7684\u5b58\u50a8\u65b9\u5f0f\u5373\u6539\u53d8\u4e86\u5b83\u7684\u751f\u5b58\u671f\u3002\u628a\u5168\u5c40\u53d8\u91cf\u6539\u53d8\u4e3a\u9759\u6001\u53d8\u91cf\u540e\u662f\u6539\u53d8\u4e86\u5b83\u7684\u4f5c\u7528\u57df\uff0c \u9650\u5236\u4e86\u5b83\u7684\u4f7f\u7528\u8303\u56f4\u3002", "\nstatic\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u4f5c\u7528\u57df\u4e0d\u540c\u3002\u4ec5\u5728\u672c\u6587\u4ef6\u3002\u53ea\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4e2d\u4f7f\u7528\u7684\u51fd\u6570\u5e94\u8be5\u8bf4\u660e\u4e3a\u5185\u90e8\u51fd\u6570(static)\uff0c\u5185\u90e8\u51fd\u6570\u5e94\u8be5\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4e2d\u8bf4\u660e\u548c\u5b9a\u4e49\u3002\u5bf9\u4e8e\u53ef\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4ee5\u5916\u4f7f\u7528\u7684\u51fd\u6570\uff0c\u5e94\u8be5\u5728\u4e00\u4e2a\u5934\u6587\u4ef6\u4e2d\u8bf4\u660e\uff0c\u8981\u4f7f\u7528\u8fd9\u4e9b\u51fd\u6570\u7684\u6e90\u6587\u4ef6\u8981\u5305\u542b\u8fd9\u4e2a\u5934\u6587\u4ef6", "\nstatic\u5168\u5c40\u53d8\u91cf\u4e0e\u666e\u901a\u7684\u5168\u5c40\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u5168\u5c40\u53d8\u91cf\u53ea\u521d\u4f7f\u5316\u4e00\u6b21\uff0c\u9632\u6b62\u5728\u5176\u4ed6\u6587\u4ef6\u5355\u5143\u4e2d\u88ab\u5f15\u7528;", "\nstatic\u5c40\u90e8\u53d8\u91cf\u548c\u666e\u901a\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u5c40\u90e8\u53d8\u91cf\u53ea\u88ab\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u4e0b\u4e00\u6b21\u4f9d\u636e\u4e0a\u4e00\u6b21\u7ed3\u679c\u503c\uff1b", "\nstatic\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u51fd\u6570\u5728\u5185\u5b58\u4e2d\u53ea\u6709\u4e00\u4efd\uff0c\u666e\u901a\u51fd\u6570\u5728\u6bcf\u4e2a\u88ab\u8c03\u7528\u4e2d\u7ef4\u6301\u4e00\u4efd\u62f7\u8d1d", "19\u3001\u7a0b\u5e8f\u7684\u5185\u5b58\u5206\u914d", "\n\u7b54\uff1a\u4e00\u4e2a\u7531c/C++\u7f16\u8bd1\u7684\u7a0b\u5e8f\u5360\u7528\u7684\u5185\u5b58\u5206\u4e3a\u4ee5\u4e0b\u51e0\u4e2a\u90e8\u5206", "\n1\u3001\u6808\u533a\uff08stack\uff09\u2014\u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u5206\u914d\u91ca\u653e\uff0c\u5b58\u653e\u51fd\u6570\u7684\u53c2\u6570\u503c\uff0c\u5c40\u90e8\u53d8\u91cf\u7684\u503c\u7b49\u3002\u5176\u64cd\u4f5c\u65b9\u5f0f\u7c7b\u4f3c\u4e8e\u6570\u636e\u7ed3\u6784\u4e2d\u7684\u6808\u3002", "\n2\u3001\u5806\u533a\uff08heap\uff09\u2014\u4e00\u822c\u7531\u7a0b\u5e8f\u5458\u5206\u914d\u91ca\u653e\uff0c\u82e5\u7a0b\u5e8f\u5458\u4e0d\u91ca\u653e\uff0c\u7a0b\u5e8f\u7ed3\u675f\u65f6\u53ef\u80fd\u7531OS\u56de\u6536\u3002\u6ce8\u610f\u5b83\u4e0e\u6570\u636e\u7ed3\u6784\u4e2d\u7684\u5806\u662f\u4e24\u56de\u4e8b\uff0c\u5206\u914d\u65b9\u5f0f\u5012\u662f\u7c7b\u4f3c\u4e8e\u94fe\u8868\uff0c\u5475\u5475\u3002", "\n3\u3001\u5168\u5c40\u533a\uff08\u9759\u6001\u533a\uff09\uff08static\uff09\u2014\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\u7684\u5b58\u50a8\u662f\u653e\u5728\u4e00\u5757\u7684\uff0c\u521d\u59cb\u5316\u7684\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\u5728\u4e00\u5757\u533a\u57df\uff0c\u672a\u521d\u59cb\u5316\u7684\u5168\u5c40\u53d8\u91cf\u548c\u672a\u521d\u59cb\u5316\u7684\u9759\u6001\u53d8\u91cf\u5728\u76f8\u90bb\u7684\u53e6\u4e00\u5757\u533a\u57df\u3002\u7a0b\u5e8f\u7ed3\u675f\u540e\u7531\u7cfb\u7edf\u91ca\u653e\u3002", "\n4\u3001\u6587\u5b57\u5e38\u91cf\u533a\u2014\u5e38\u91cf\u5b57\u7b26\u4e32\u5c31\u662f\u653e\u5728\u8fd9\u91cc\u7684\u3002\u7a0b\u5e8f\u7ed3\u675f\u540e\u7531\u7cfb\u7edf\u91ca\u653e\u3002", "\n5\u3001\u7a0b\u5e8f\u4ee3\u7801\u533a\u2014\u5b58\u653e\u51fd\u6570\u4f53\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801", "\u4f8b\u5b50\u7a0b\u5e8f", "\n\u8fd9\u662f\u4e00\u4e2a\u524d\u8f88\u5199\u7684\uff0c\u975e\u5e38\u8be6\u7ec6", "\n//main.cpp", "\n  int a=0;    //\u5168\u5c40\u521d\u59cb\u5316\u533a", "\n  char *p1;   //\u5168\u5c40\u672a\u521d\u59cb\u5316\u533a", "\n  main()", "\n  {", "\n   intb;\u6808", "\n   char s[]=\u201dabc\u201d;   //\u6808", "\n   char *p2;         //\u6808", "\n   char *p3=\u201d123456\u2033;   //123456\\0\u5728\u5e38\u91cf\u533a\uff0cp3\u5728\u6808\u4e0a\u3002", "\n   static int c=0\uff1b   //\u5168\u5c40\uff08\u9759\u6001\uff09\u521d\u59cb\u5316\u533a", "\n   p1 = (char*)malloc(10);", "\n   p2 = (char*)malloc(20);   //\u5206\u914d\u5f97\u6765\u5f9710\u548c20\u5b57\u8282\u7684\u533a\u57df\u5c31\u5728\u5806\u533a\u3002", "\n   strcpy(p1,\u201d123456\u2033);   //123456\\0\u653e\u5728\u5e38\u91cf\u533a\uff0c\u7f16\u8bd1\u5668\u53ef\u80fd\u4f1a\u5c06\u5b83\u4e0ep3\u6240\u5411\u201d123456\u2033\u4f18\u5316\u6210\u4e00\u4e2a\u5730\u65b9\u3002", "\n}", "20\u3001\u89e3\u91ca\u5806\u548c\u6808\u7684\u533a\u522b", "\n\u7b54\uff1a\u5806\uff08heap\uff09\u548c\u6808(stack)\u7684\u533a\u522b", "\n\uff081\uff09\u7533\u8bf7\u65b9\u5f0f", "\nstack:\u7531\u7cfb\u7edf\u81ea\u52a8\u5206\u914d\u3002\u4f8b\u5982\uff0c\u58f0\u660e\u5728\u51fd\u6570\u4e2d\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cfint b;\u7cfb\u7edf\u81ea\u52a8\u5728\u6808\u4e2d\u4e3ab\u5f00\u8f9f\u7a7a\u95f4", "\nheap:\u9700\u8981\u7a0b\u5e8f\u5458\u81ea\u5df1\u7533\u8bf7\uff0c\u5e76\u6307\u660e\u5927\u5c0f\uff0c\u5728c\u4e2dmalloc\u51fd\u6570", "\n\u5982p1=(char*)malloc(10);", "\n\u5728C++\u4e2d\u7528new\u8fd0\u7b97\u7b26", "\n\u5982p2=(char*)malloc(10);", "\n\u4f46\u662f\u6ce8\u610fp1\u3001p2\u672c\u8eab\u662f\u5728\u6808\u4e2d\u7684\u3002", "\n\uff082\uff09\u7533\u8bf7\u540e\u7cfb\u7edf\u7684\u54cd\u5e94", "\n\u6808\uff1a\u53ea\u8981\u6808\u7684\u5269\u4f59\u7a7a\u95f4\u5927\u4e8e\u6240\u7533\u8bf7\u7a7a\u95f4\uff0c\u7cfb\u7edf\u5c06\u4e3a\u7a0b\u5e8f\u63d0\u4f9b\u5185\u5b58\uff0c\u5426\u5219\u5c06\u62a5\u5f02\u5e38\u63d0\u793a\u6808\u6ea2\u51fa\u3002", "\n\u5806\uff1a\u9996\u5148\u5e94\u8be5\u77e5\u9053\u64cd\u4f5c\u7cfb\u7edf\u6709\u4e00\u4e2a\u8bb0\u5f55\u7a7a\u95f2\u5185\u5b58\u5730\u5740\u7684\u94fe\u8868\uff0c\u5f53\u7cfb\u7edf\u6536\u5230\u7a0b\u5e8f\u7684\u7533\u8bf7\u65f6\uff0c", "\n\u4f1a\u904d\u5386\u8be5\u94fe\u8868\uff0c\u5bfb\u627e\u7b2c\u4e00\u4e2a\u7a7a\u95f4\u5927\u4e8e\u6240\u7533\u8bf7\u7a7a\u95f4\u7684\u5806\u7ed3\u70b9\uff0c\u7136\u540e\u5c06\u8be5\u7ed3\u70b9\u4ece\u7a7a\u95f2\u7ed3\u70b9\u94fe\u8868\u4e2d\u5220\u9664\uff0c\u5e76\u5c06\u8be5\u7ed3\u70b9\u7684\u7a7a\u95f4\u5206\u914d\u7ed9\u7a0b\u5e8f\uff0c\u53e6\u5916\uff0c\u5bf9\u4e8e\u5927\u591a\u6570\u7cfb\u7edf\uff0c\u4f1a\u5728\u8fd9\u5757\u5185\u5b58\u7a7a\u95f4\u4e2d\u7684\u9996\u5730\u5740\u5904\u8bb0\u5f55\u672c\u6b21\u5206\u914d\u7684\u5927\u5c0f\uff0c\u8fd9\u6837\uff0c\u4ee3\u7801\u4e2d\u7684delete\u8bed\u53e5\u624d\u80fd\u6b63\u786e\u7684\u91ca\u653e\u672c\u5185\u5b58\u7a7a\u95f4\u3002\u53e6\u5916\uff0c\u7531\u4e8e\u627e\u5230\u7684\u5806\u7ed3\u70b9\u7684\u5927\u5c0f\u4e0d\u4e00\u5b9a\u6b63\u597d\u7b49\u4e8e\u7533\u8bf7\u7684\u5927\u5c0f\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u7684\u5c06\u591a\u4f59\u7684\u90a3\u90e8\u5206\u91cd\u65b0\u653e\u5165\u7a7a\u95f2\u94fe\u8868\u4e2d\u3002", "\n\uff083\uff09\u7533\u8bf7\u5927\u5c0f\u7684\u9650\u5236", "\n\u6808\uff1a\u5728Windows\u4e0b,\u6808\u662f\u5411\u4f4e\u5730\u5740\u6269\u5c55\u7684\u6570\u636e\u7ed3\u6784\uff0c\u662f\u4e00\u5757\u8fde\u7eed\u7684\u5185\u5b58\u7684\u533a\u57df\u3002\u8fd9\u53e5\u8bdd\u7684\u610f\u601d\u662f\u6808\u9876\u7684\u5730\u5740\u548c\u6808\u7684\u6700\u5927\u5bb9\u91cf\u662f\u7cfb\u7edf\u9884\u5148\u89c4\u5b9a\u597d\u7684\uff0c\u5728WINDOWS\u4e0b\uff0c\u6808\u7684\u5927\u5c0f\u662f2M\uff08\u4e5f\u6709\u7684\u8bf4\u662f1M\uff0c\u603b\u4e4b\u662f\u4e00\u4e2a\u7f16\u8bd1\u65f6\u5c31\u786e\u5b9a\u7684\u5e38\u6570\uff09\uff0c\u5982\u679c\u7533\u8bf7\u7684\u7a7a\u95f4\u8d85\u8fc7\u6808\u7684\u5269\u4f59\u7a7a\u95f4\u65f6\uff0c\u5c06\u63d0\u793aoverflow\u3002\u56e0\u6b64\uff0c\u80fd\u4ece\u6808\u83b7\u5f97\u7684\u7a7a\u95f4\u8f83\u5c0f\u3002", "\n\u5806\uff1a\u5806\u662f\u5411\u9ad8\u5730\u5740\u6269\u5c55\u7684\u6570\u636e\u7ed3\u6784\uff0c\u662f\u4e0d\u8fde\u7eed\u7684\u5185\u5b58\u533a\u57df\u3002\u8fd9\u662f\u7531\u4e8e\u7cfb\u7edf\u662f\u7528\u94fe\u8868\u6765\u5b58\u50a8\u7684\u7a7a\u95f2\u5185\u5b58\u5730\u5740\u7684\uff0c\u81ea\u7136\u662f\u4e0d\u8fde\u7eed\u7684\uff0c\u800c\u94fe\u8868\u7684\u904d\u5386\u65b9\u5411\u662f\u7531\u4f4e\u5730\u5740\u5411\u9ad8\u5730\u5740\u3002\u5806\u7684\u5927\u5c0f\u53d7\u9650\u4e8e\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e2d\u6709\u6548\u7684\u865a\u62df\u5185\u5b58\u3002\u7531\u6b64\u53ef\u89c1\uff0c\u5806\u83b7\u5f97\u7684\u7a7a\u95f4\u6bd4\u8f83\u7075\u6d3b\uff0c\u4e5f\u6bd4\u8f83\u5927\u3002", "\n\uff084\uff09\u7533\u8bf7\u6548\u7387\u7684\u6bd4\u8f83\uff1a", "\n\u6808:\u7531\u7cfb\u7edf\u81ea\u52a8\u5206\u914d\uff0c\u901f\u5ea6\u8f83\u5feb\u3002\u4f46\u7a0b\u5e8f\u5458\u662f\u65e0\u6cd5\u63a7\u5236\u7684\u3002", "\n\u5806:\u662f\u7531new\u5206\u914d\u7684\u5185\u5b58\uff0c\u4e00\u822c\u901f\u5ea6\u6bd4\u8f83\u6162\uff0c\u800c\u4e14\u5bb9\u6613\u4ea7\u751f\u5185\u5b58\u788e\u7247,\u4e0d\u8fc7\u7528\u8d77\u6765\u6700\u65b9\u4fbf.", "\n\u53e6\u5916\uff0c\u5728WINDOWS\u4e0b\uff0c\u6700\u597d\u7684\u65b9\u5f0f\u662f\u7528Virtual Alloc\u5206\u914d\u5185\u5b58\uff0c\u4ed6\u4e0d\u662f\u5728\u5806\uff0c\u4e5f\u4e0d\u662f\u5728\u6808,\u800c\u662f\u76f4\u63a5\u5728\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4\u4e2d\u4fdd\u7559\u4e00\u5757\u5185\u5b58\uff0c\u867d\u7136\u7528\u8d77\u6765\u6700\u4e0d\u65b9\u4fbf\u3002\u4f46\u662f\u901f\u5ea6\u5feb\uff0c\u4e5f\u6700\u7075\u6d3b\u3002", "\n\uff085\uff09\u5806\u548c\u6808\u4e2d\u7684\u5b58\u50a8\u5185\u5bb9", "\n\u6808\uff1a\u5728\u51fd\u6570\u8c03\u7528\u65f6\uff0c\u7b2c\u4e00\u4e2a\u8fdb\u6808\u7684\u662f\u4e3b\u51fd\u6570\u4e2d\u540e\u7684\u4e0b\u4e00\u6761\u6307\u4ee4\uff08\u51fd\u6570\u8c03\u7528\u8bed\u53e5\u7684\u4e0b\u4e00\u6761\u53ef\u6267\u884c\u8bed\u53e5\uff09\u7684\u5730\u5740\uff0c\u7136\u540e\u662f\u51fd\u6570\u7684\u5404\u4e2a\u53c2\u6570\uff0c\u5728\u5927\u591a\u6570\u7684C\u7f16\u8bd1\u5668\u4e2d\uff0c\u53c2\u6570\u662f\u7531\u53f3\u5f80\u5de6\u5165\u6808\u7684\uff0c\u7136\u540e\u662f\u51fd\u6570\u4e2d\u7684\u5c40\u90e8\u53d8\u91cf\u3002\u6ce8\u610f\u9759\u6001\u53d8\u91cf\u662f\u4e0d\u5165\u6808\u7684\u3002", "\n\u5f53\u672c\u6b21\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u540e\uff0c\u5c40\u90e8\u53d8\u91cf\u5148\u51fa\u6808\uff0c\u7136\u540e\u662f\u53c2\u6570\uff0c\u6700\u540e\u6808\u9876\u6307\u9488\u6307\u5411\u6700\u5f00\u59cb\u5b58\u7684\u5730\u5740\uff0c\u4e5f\u5c31\u662f\u4e3b\u51fd\u6570\u4e2d\u7684\u4e0b\u4e00\u6761\u6307\u4ee4\uff0c\u7a0b\u5e8f\u7531\u8be5\u70b9\u7ee7\u7eed\u8fd0\u884c\u3002", "\n\u5806\uff1a\u4e00\u822c\u662f\u5728\u5806\u7684\u5934\u90e8\u7528\u4e00\u4e2a\u5b57\u8282\u5b58\u653e\u5806\u7684\u5927\u5c0f\u3002\u5806\u4e2d\u7684\u5177\u4f53\u5185\u5bb9\u7531\u7a0b\u5e8f\u5458\u5b89\u6392\u3002", "\n\uff086\uff09\u5b58\u53d6\u6548\u7387\u7684\u6bd4\u8f83", "\nchar s1[]=\u201daaaaaaaaaaaaaaa\u201d;", "\nchar *s2=\u201dbbbbbbbbbbbbbbbbb\u201d;", "\naaaaaaaaaaa\u662f\u5728\u8fd0\u884c\u65f6\u523b\u8d4b\u503c\u7684\uff1b", "\n\u800cbbbbbbbbbbb\u662f\u5728\u7f16\u8bd1\u65f6\u5c31\u786e\u5b9a\u7684\uff1b", "\n\u4f46\u662f\uff0c\u5728\u4ee5\u540e\u7684\u5b58\u53d6\u4e2d\uff0c\u5728\u6808\u4e0a\u7684\u6570\u7ec4\u6bd4\u6307\u9488\u6240\u6307\u5411\u7684\u5b57\u7b26\u4e32(\u4f8b\u5982\u5806)\u5feb\u3002", "\n\u6bd4\u5982\uff1a", "\n#include", "\nvoidmain()", "\n{", "\nchar a=1;", "\nchar c[]=\u201d1234567890\u2033;", "\nchar *p=\u201d1234567890\u2033;", "\na = c[1];", "\na = p[1];", "\nreturn;", "\n}", "\n\u5bf9\u5e94\u7684\u6c47\u7f16\u4ee3\u7801", "\n10:a=c[1];", "\n004010678A4DF1movcl,byteptr[ebp-0Fh]", "\n0040106A884DFCmovbyteptr[ebp-4],cl", "\n11:a=p[1];", "\n0040106D8B55ECmovedx,dwordptr[ebp-14h]", "\n004010708A4201moval,byteptr[edx+1]", "\n004010738845FCmovbyteptr[ebp-4],al", "\n\u7b2c\u4e00\u79cd\u5728\u8bfb\u53d6\u65f6\u76f4\u63a5\u5c31\u628a\u5b57\u7b26\u4e32\u4e2d\u7684\u5143\u7d20\u8bfb\u5230\u5bc4\u5b58\u5668cl\u4e2d\uff0c\u800c\u7b2c\u4e8c\u79cd\u5219\u8981\u5148\u628a\u6307\u9488\u503c\u8bfb\u5230edx\u4e2d\uff0c\u5728\u6839\u636eedx\u8bfb\u53d6\u5b57\u7b26\uff0c\u663e\u7136\u6162\u4e86\u3002", "\n21\u3001\u4ec0\u4e48\u662f\u9884\u7f16\u8bd1,\u4f55\u65f6\u9700\u8981\u9884\u7f16\u8bd1?", "\n\u7b54\uff1a\u9884\u7f16\u8bd1\u53c8\u79f0\u4e3a\u9884\u5904\u7406,\u662f\u505a\u4e9b\u4ee3\u7801\u6587\u672c\u7684\u66ff\u6362\u5de5\u4f5c\u3002\u5904\u7406#\u5f00\u5934\u7684\u6307\u4ee4,\u6bd4\u5982\u62f7\u8d1d#include\u5305\u542b\u7684\u6587\u4ef6\u4ee3\u7801\uff0c#define\u5b8f\u5b9a\u4e49\u7684\u66ff\u6362,\u6761\u4ef6\u7f16\u8bd1\u7b49\uff0c\u5c31\u662f\u4e3a\u7f16\u8bd1\u505a\u7684\u9884\u5907\u5de5\u4f5c\u7684\u9636\u6bb5\uff0c\u4e3b\u8981\u5904\u7406#\u5f00\u59cb\u7684\u9884\u7f16\u8bd1\u6307\u4ee4\uff0c\u9884\u7f16\u8bd1\u6307\u4ee4\u6307\u793a\u4e86\u5728\u7a0b\u5e8f\u6b63\u5f0f\u7f16\u8bd1\u524d\u5c31\u7531\u7f16\u8bd1\u5668\u8fdb\u884c\u7684\u64cd\u4f5c\uff0c\u53ef\u4ee5\u653e\u5728\u7a0b\u5e8f\u4e2d\u7684\u4efb\u4f55\u4f4d\u7f6e\u3002", "\nc\u7f16\u8bd1\u7cfb\u7edf\u5728\u5bf9\u7a0b\u5e8f\u8fdb\u884c\u901a\u5e38\u7684\u7f16\u8bd1\u4e4b\u524d\uff0c\u5148\u8fdb\u884c\u9884\u5904\u7406\u3002c\u63d0\u4f9b\u7684\u9884\u5904\u7406\u529f\u80fd\u4e3b\u8981\u6709\u4ee5\u4e0b\u4e09\u79cd\uff1a1\uff09\u5b8f\u5b9a\u4e49\u30002\uff09\u6587\u4ef6\u5305\u542b\u30003\uff09\u6761\u4ef6\u7f16\u8bd1", "1\u3001\t\u603b\u662f\u4f7f\u7528\u4e0d\u7ecf\u5e38\u6539\u52a8\u7684\u5927\u578b\u4ee3\u7801\u4f53\u3002", "\n\uff12\u3001\u7a0b\u5e8f\u7531\u591a\u4e2a\u6a21\u5757\u7ec4\u6210\uff0c\u6240\u6709\u6a21\u5757\u90fd\u4f7f\u7528\u4e00\u7ec4\u6807\u51c6\u7684\u5305\u542b\u6587\u4ef6\u548c\u76f8\u540c\u7684\u7f16\u8bd1\u9009\u9879\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u5c06\u6240\u6709\u5305\u542b\u6587\u4ef6\u9884\u7f16\u8bd1\u4e3a\u4e00\u4e2a\u9884\u7f16\u8bd1\u5934\u3002", "22\u3001\u5173\u952e\u5b57const\u662f\u4ec0\u4e48\u542b\u610f\uff1f", "\n\u7b54\uff1a\u6211\u53ea\u8981\u4e00\u542c\u5230\u88ab\u9762\u8bd5\u8005\u8bf4\uff1a\u201cconst\u610f\u5473\u7740\u5e38\u6570\u201d\uff0c\u6211\u5c31\u77e5\u9053\u6211\u6b63\u5728\u548c\u4e00\u4e2a\u4e1a\u4f59\u8005\u6253\u4ea4\u9053\u3002\u53bb\u5e74Dan Saks\u5df2\u7ecf\u5728\u4ed6\u7684\u6587\u7ae0\u91cc\u5b8c\u5168\u6982\u62ec\u4e86const\u7684\u6240\u6709\u7528\u6cd5\uff0c\u56e0\u6b64ESP(\u8bd1\u8005\uff1aEmbedded Systems Programming)\u7684\u6bcf\u4e00\u4f4d\u8bfb\u8005\u5e94\u8be5\u975e\u5e38\u719f\u6089const\u80fd\u505a\u4ec0\u4e48\u548c\u4e0d\u80fd\u505a\u4ec0\u4e48.\u5982\u679c\u4f60\u4ece\u6ca1\u6709\u8bfb\u5230\u90a3\u7bc7\u6587\u7ae0\uff0c\u53ea\u8981\u80fd\u8bf4\u51faconst\u610f\u5473\u7740\u201c\u53ea\u8bfb\u201d\u5c31\u53ef\u4ee5\u4e86\u3002\u5c3d\u7ba1\u8fd9\u4e2a\u7b54\u6848\u4e0d\u662f\u5b8c\u5168\u7684\u7b54\u6848\uff0c\u4f46\u6211\u63a5\u53d7\u5b83\u4f5c\u4e3a\u4e00\u4e2a\u6b63\u786e\u7684\u7b54\u6848\u3002\uff08\u5982\u679c\u4f60\u60f3\u77e5\u9053\u66f4\u8be6\u7ec6\u7684\u7b54\u6848\uff0c\u4ed4\u7ec6\u8bfb\u4e00\u4e0bSaks\u7684\u6587\u7ae0\u5427\u3002\uff09\u5982\u679c\u5e94\u8bd5\u8005\u80fd\u6b63\u786e\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u5c06\u95ee\u4ed6\u4e00\u4e2a\u9644\u52a0\u7684\u95ee\u9898\uff1a\u4e0b\u9762\u7684\u58f0\u660e\u90fd\u662f\u4ec0\u4e48\u610f\u601d\uff1f", "\nconst int a;", "\nint const a;", "\nconst int *a;", "\nint * const a;", "\nint const * a const;", "\n\u524d\u4e24\u4e2a\u7684\u4f5c\u7528\u662f\u4e00\u6837\uff0ca\u662f\u4e00\u4e2a\u5e38\u6574\u578b\u6570\u3002\u7b2c\u4e09\u4e2a\u610f\u5473\u7740a\u662f\u4e00\u4e2a\u6307\u5411\u5e38\u6574\u578b\u6570\u7684\u6307\u9488\uff08\u4e5f\u5c31\u662f\uff0c\u6574\u578b\u6570\u662f\u4e0d\u53ef\u4fee\u6539\u7684\uff0c\u4f46\u6307\u9488\u53ef\u4ee5\uff09\u3002\u7b2c\u56db\u4e2a\u610f\u601da\u662f\u4e00\u4e2a\u6307\u5411\u6574\u578b\u6570\u7684\u5e38\u6307\u9488\uff08\u4e5f\u5c31\u662f\u8bf4\uff0c\u6307\u9488\u6307\u5411\u7684\u6574\u578b\u6570\u662f\u53ef\u4ee5\u4fee\u6539\u7684\uff0c\u4f46\u6307\u9488\u662f\u4e0d\u53ef\u4fee\u6539\u7684\uff09\u3002\u6700\u540e\u4e00\u4e2a\u610f\u5473\u7740a\u662f\u4e00\u4e2a\u6307\u5411\u5e38\u6574\u578b\u6570\u7684\u5e38\u6307\u9488\uff08\u4e5f\u5c31\u662f\u8bf4\uff0c\u6307\u9488\u6307\u5411\u7684\u6574\u578b\u6570\u662f\u4e0d\u53ef\u4fee\u6539\u7684\uff0c\u540c\u65f6\u6307\u9488\u4e5f\u662f\u4e0d\u53ef\u4fee\u6539\u7684\uff09\u3002\u5982\u679c\u5e94\u8bd5\u8005\u80fd\u6b63\u786e\u56de\u7b54\u8fd9\u4e9b\u95ee\u9898\uff0c\u90a3\u4e48\u4ed6\u5c31\u7ed9\u6211\u7559\u4e0b\u4e86\u4e00\u4e2a\u597d\u5370\u8c61\u3002\u987a\u5e26\u63d0\u4e00\u53e5\uff0c\u4e5f\u8bb8\u4f60\u53ef\u80fd\u4f1a\u95ee\uff0c\u5373\u4f7f\u4e0d\u7528\u5173\u952e\u5b57 const\uff0c\u4e5f\u8fd8\u662f\u80fd\u5f88\u5bb9\u6613\u5199\u51fa\u529f\u80fd\u6b63\u786e\u7684\u7a0b\u5e8f\uff0c\u90a3\u4e48\u6211\u4e3a\u4ec0\u4e48\u8fd8\u8981\u5982\u6b64\u770b\u91cd\u5173\u952e\u5b57const\u5462\uff1f\u6211\u4e5f\u5982\u4e0b\u7684\u51e0\u4e0b\u7406\u7531\uff1a", "\n1). \u5173\u952e\u5b57const\u7684\u4f5c\u7528\u662f\u4e3a\u7ed9\u8bfb\u4f60\u4ee3\u7801\u7684\u4eba\u4f20\u8fbe\u975e\u5e38\u6709\u7528\u7684\u4fe1\u606f\uff0c\u5b9e\u9645\u4e0a\uff0c\u58f0\u660e\u4e00\u4e2a\u53c2\u6570\u4e3a\u5e38\u91cf\u662f\u4e3a\u4e86\u544a\u8bc9\u4e86\u7528\u6237\u8fd9\u4e2a\u53c2\u6570\u7684\u5e94\u7528\u76ee\u7684\u3002\u5982\u679c\u4f60\u66fe\u82b1\u5f88\u591a\u65f6\u95f4\u6e05\u7406\u5176\u5b83\u4eba\u7559\u4e0b\u7684\u5783\u573e\uff0c\u4f60\u5c31\u4f1a\u5f88\u5feb\u5b66\u4f1a\u611f\u8c22\u8fd9\u70b9\u591a\u4f59\u7684\u4fe1\u606f\u3002\uff08\u5f53\u7136\uff0c\u61c2\u5f97\u7528const\u7684\u7a0b\u5e8f\u5458\u5f88\u5c11\u4f1a\u7559\u4e0b\u7684\u5783\u573e\u8ba9\u522b\u4eba\u6765\u6e05\u7406\u7684\u3002\uff09", "\n2). \u901a\u8fc7\u7ed9\u4f18\u5316\u5668\u4e00\u4e9b\u9644\u52a0\u7684\u4fe1\u606f\uff0c\u4f7f\u7528\u5173\u952e\u5b57const\u4e5f\u8bb8\u80fd\u4ea7\u751f\u66f4\u7d27\u51d1\u7684\u4ee3\u7801\u3002", "\n3). \u5408\u7406\u5730\u4f7f\u7528\u5173\u952e\u5b57const\u53ef\u4ee5\u4f7f\u7f16\u8bd1\u5668\u5f88\u81ea\u7136\u5730\u4fdd\u62a4\u90a3\u4e9b\u4e0d\u5e0c\u671b\u88ab\u6539\u53d8\u7684\u53c2\u6570\uff0c\u9632\u6b62\u5176\u88ab\u65e0\u610f\u7684\u4ee3\u7801\u4fee\u6539\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11bug\u7684\u51fa\u73b0", "23\u3001\u5173\u952e\u5b57volatile\u6709\u4ec0\u4e48\u542b\u610f \u5e76\u7ed9\u51fa\u4e09\u4e2a\u4e0d\u540c\u7684\u4f8b\u5b50\u3002", "\n\u7b54\uff1a\u4e00\u4e2a\u5b9a\u4e49\u4e3avolatile\u7684\u53d8\u91cf\u662f\u8bf4\u8fd9\u53d8\u91cf\u53ef\u80fd\u4f1a\u88ab\u610f\u60f3\u4e0d\u5230\u5730\u6539\u53d8\uff0c\u8fd9\u6837\uff0c\u7f16\u8bd1\u5668\u5c31\u4e0d\u4f1a\u53bb\u5047\u8bbe\u8fd9\u4e2a\u53d8\u91cf\u7684\u503c\u4e86\u3002\u7cbe\u786e\u5730\u8bf4\u5c31\u662f\uff0c\u4f18\u5316\u5668\u5728\u7528\u5230\u8fd9\u4e2a\u53d8\u91cf\u65f6\u5fc5\u987b\u6bcf\u6b21\u90fd\u5c0f\u5fc3\u5730\u91cd\u65b0\u8bfb\u53d6\u8fd9\u4e2a\u53d8\u91cf\u7684\u503c\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u4fdd\u5b58\u5728\u5bc4\u5b58\u5668\u91cc\u7684\u5907\u4efd\u3002\u4e0b\u9762\u662fvolatile\u53d8\u91cf\u7684\u51e0\u4e2a\u4f8b\u5b50\uff1a", "\n1). \u5e76\u884c\u8bbe\u5907\u7684\u786c\u4ef6\u5bc4\u5b58\u5668\uff08\u5982\uff1a\u72b6\u6001\u5bc4\u5b58\u5668\uff09", "\n2). \u4e00\u4e2a\u4e2d\u65ad\u670d\u52a1\u5b50\u7a0b\u5e8f\u4e2d\u4f1a\u8bbf\u95ee\u5230\u7684\u975e\u81ea\u52a8\u53d8\u91cf(Non-automatic variables)", "\n3). \u591a\u7ebf\u7a0b\u5e94\u7528\u4e2d\u88ab\u51e0\u4e2a\u4efb\u52a1\u5171\u4eab\u7684\u53d8\u91cf", "\n\u56de\u7b54\u4e0d\u51fa\u8fd9\u4e2a\u95ee\u9898\u7684\u4eba\u662f\u4e0d\u4f1a\u88ab\u96c7\u4f63\u7684\u3002\u6211\u8ba4\u4e3a\u8fd9\u662f\u533a\u5206C\u7a0b\u5e8f\u5458\u548c\u5d4c\u5165\u5f0f\u7cfb\u7edf\u7a0b\u5e8f\u5458\u7684\u6700\u57fa\u672c\u7684\u95ee\u9898\u3002\u5d4c\u5165\u5f0f\u7cfb\u7edf\u7a0b\u5e8f\u5458\u7ecf\u5e38\u540c\u786c\u4ef6\u3001\u4e2d\u65ad\u3001RTOS\u7b49\u7b49\u6253\u4ea4\u9053\uff0c\u6240\u7528\u8fd9\u4e9b\u90fd\u8981\u6c42volatile\u53d8\u91cf\u3002\u4e0d\u61c2\u5f97volatile\u5185\u5bb9\u5c06\u4f1a\u5e26\u6765\u707e\u96be\u3002", "\n\u5047\u8bbe\u88ab\u9762\u8bd5\u8005\u6b63\u786e\u5730\u56de\u7b54\u4e86\u8fd9\u662f\u95ee\u9898\uff08\u55ef\uff0c\u6000\u7591\u8fd9\u5426\u4f1a\u662f\u8fd9\u6837\uff09\uff0c\u6211\u5c06\u7a0d\u5fae\u6df1\u7a76\u4e00\u4e0b\uff0c\u770b\u4e00\u4e0b\u8fd9\u5bb6\u4f19\u662f\u4e0d\u662f\u76f4\u6b63\u61c2\u5f97volatile\u5b8c\u5168\u7684\u91cd\u8981\u6027\u3002", "\n1). \u4e00\u4e2a\u53c2\u6570\u65e2\u53ef\u4ee5\u662fconst\u8fd8\u53ef\u4ee5\u662fvolatile\u5417\uff1f\u89e3\u91ca\u4e3a\u4ec0\u4e48\u3002", "\n2). \u4e00\u4e2a\u6307\u9488\u53ef\u4ee5\u662fvolatile \u5417\uff1f\u89e3\u91ca\u4e3a\u4ec0\u4e48\u3002", "\n3). \u4e0b\u9762\u7684\u51fd\u6570\u6709\u4ec0\u4e48\u9519\u8bef\uff1a", "\nint square(volatile int *ptr)", "\n{", "\nreturn *ptr * *ptr;", "\n}", "\n\u4e0b\u9762\u662f\u7b54\u6848\uff1a", "\n1). \u662f\u7684\u3002\u4e00\u4e2a\u4f8b\u5b50\u662f\u53ea\u8bfb\u7684\u72b6\u6001\u5bc4\u5b58\u5668\u3002\u5b83\u662fvolatile\u56e0\u4e3a\u5b83\u53ef\u80fd\u88ab\u610f\u60f3\u4e0d\u5230\u5730\u6539\u53d8\u3002\u5b83\u662fconst\u56e0\u4e3a\u7a0b\u5e8f\u4e0d\u5e94\u8be5\u8bd5\u56fe\u53bb\u4fee\u6539\u5b83\u3002", "\n2). \u662f\u7684\u3002\u5c3d\u7ba1\u8fd9\u5e76\u4e0d\u5f88\u5e38\u89c1\u3002\u4e00\u4e2a\u4f8b\u5b50\u662f\u5f53\u4e00\u4e2a\u4e2d\u670d\u52a1\u5b50\u7a0b\u5e8f\u4fee\u8be5\u4e00\u4e2a\u6307\u5411\u4e00\u4e2abuffer\u7684\u6307\u9488\u65f6\u3002", "\n3). \u8fd9\u6bb5\u4ee3\u7801\u7684\u6709\u4e2a\u6076\u4f5c\u5267\u3002\u8fd9\u6bb5\u4ee3\u7801\u7684\u76ee\u7684\u662f\u7528\u6765\u8fd4\u6307\u9488*ptr\u6307\u5411\u503c\u7684\u5e73\u65b9\uff0c\u4f46\u662f\uff0c\u7531\u4e8e*ptr\u6307\u5411\u4e00\u4e2avolatile\u578b\u53c2\u6570\uff0c\u7f16\u8bd1\u5668\u5c06\u4ea7\u751f\u7c7b\u4f3c\u4e0b\u9762\u7684\u4ee3\u7801\uff1a", "\nint square(volatile int *ptr)", "\n{", "\nint a,b;", "\na = *ptr;", "\nb = *ptr;", "\nreturn a * b;", "\n}", "\n\u7531\u4e8e*ptr\u7684\u503c\u53ef\u80fd\u88ab\u610f\u60f3\u4e0d\u5230\u5730\u8be5\u53d8\uff0c\u56e0\u6b64a\u548cb\u53ef\u80fd\u662f\u4e0d\u540c\u7684\u3002\u7ed3\u679c\uff0c\u8fd9\u6bb5\u4ee3\u7801\u53ef\u80fd\u8fd4\u4e0d\u662f\u4f60\u6240\u671f\u671b\u7684\u5e73\u65b9\u503c\uff01\u6b63\u786e\u7684\u4ee3\u7801\u5982\u4e0b\uff1a", "\nlong square(volatile int *ptr)", "\n{", "\nint a;", "\na = *ptr;", "\nreturn a * a;", "\n}", "24\u3001\u4e09\u79cd\u57fa\u672c\u7684\u6570\u636e\u6a21\u578b", "\n\u7b54\uff1a\u6309\u7167\u6570\u636e\u7ed3\u6784\u7c7b\u578b\u7684\u4e0d\u540c\uff0c\u5c06\u6570\u636e\u6a21\u578b\u5212\u5206\u4e3a\u5c42\u6b21\u6a21\u578b\u3001\u7f51\u72b6\u6a21\u578b\u548c\u5173\u7cfb\u6a21\u578b\u3002", "25\u3001\u7ed3\u6784\u4e0e\u8054\u5408\u6709\u548c\u533a\u522b\uff1f", "\n\u7b54\uff1a(1). \u7ed3\u6784\u548c\u8054\u5408\u90fd\u662f\u7531\u591a\u4e2a\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u6210\u5458\u7ec4\u6210, \u4f46\u5728\u4efb\u4f55\u540c\u4e00\u65f6\u523b, \u8054\u5408\u4e2d\u53ea\u5b58\u653e\u4e86\u4e00\u4e2a\u88ab\u9009\u4e2d\u7684\u6210\u5458\uff08\u6240\u6709\u6210\u5458\u5171\u7528\u4e00\u5757\u5730\u5740\u7a7a\u95f4\uff09, \u800c\u7ed3\u6784\u7684\u6240\u6709\u6210\u5458\u90fd\u5b58\u5728\uff08\u4e0d\u540c\u6210\u5458\u7684\u5b58\u653e\u5730\u5740\u4e0d\u540c\uff09\u3002", "\n (2). \u5bf9\u4e8e\u8054\u5408\u7684\u4e0d\u540c\u6210\u5458\u8d4b\u503c, \u5c06\u4f1a\u5bf9\u5176\u5b83\u6210\u5458\u91cd\u5199, \u539f\u6765\u6210\u5458\u7684\u503c\u5c31\u4e0d\u5b58\u5728\u4e86, \u800c\u5bf9\u4e8e\u7ed3\u6784\u7684\u4e0d\u540c\u6210\u5458\u8d4b\u503c\u662f\u4e92\u4e0d\u5f71\u54cd\u7684", "26\u3001\u63cf\u8ff0\u5185\u5b58\u5206\u914d\u65b9\u5f0f\u4ee5\u53ca\u5b83\u4eec\u7684\u533a\u522b?", "\n\u7b54\uff1a1\uff09 \u4ece\u9759\u6001\u5b58\u50a8\u533a\u57df\u5206\u914d\u3002\u5185\u5b58\u5728\u7a0b\u5e8f\u7f16\u8bd1\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u5206\u914d\u597d\uff0c\u8fd9\u5757\u5185\u5b58\u5728\u7a0b\u5e8f\u7684\u6574\u4e2a\u8fd0\u884c\u671f\u95f4\u90fd\u5b58\u5728\u3002\u4f8b\u5982\u5168\u5c40\u53d8\u91cf\uff0cstatic \u53d8\u91cf\u3002", "\n2\uff09 \u5728\u6808\u4e0a\u521b\u5efa\u3002\u5728\u6267\u884c\u51fd\u6570\u65f6\uff0c\u51fd\u6570\u5185\u5c40\u90e8\u53d8\u91cf\u7684\u5b58\u50a8\u5355\u5143\u90fd\u53ef\u4ee5\u5728\u6808\u4e0a\u521b\u5efa\uff0c\u51fd\u6570\u6267\u884c\u7ed3\u675f\u65f6\u8fd9\u4e9b\u5b58\u50a8\u5355\u5143\u81ea\u52a8\u88ab\u91ca\u653e\u3002\u6808\u5185\u5b58\u5206\u914d\u8fd0\u7b97\u5185\u7f6e\u4e8e\u5904\u7406\u5668\u7684\u6307\u4ee4\u96c6\u3002", "\n3\uff09 \u4ece\u5806\u4e0a\u5206\u914d\uff0c\u4ea6\u79f0\u52a8\u6001\u5185\u5b58\u5206\u914d\u3002\u7a0b\u5e8f\u5728\u8fd0\u884c\u7684\u65f6\u5019\u7528malloc \u6216new \u7533\u8bf7\u4efb\u610f\u591a\u5c11\u7684\u5185\u5b58\uff0c\u7a0b\u5e8f\u5458\u81ea\u5df1\u8d1f\u8d23\u5728\u4f55\u65f6\u7528free \u6216delete \u91ca\u653e\u5185\u5b58\u3002\u52a8\u6001\u5185\u5b58\u7684\u751f\u5b58\u671f\u7531\u7a0b\u5e8f\u5458\u51b3\u5b9a\uff0c\u4f7f\u7528\u975e\u5e38\u7075\u6d3b\uff0c\u4f46\u95ee\u9898\u4e5f\u6700\u591a", "27\u3001\u8bf7\u8bf4\u51faconst\u4e0e#define \u76f8\u6bd4\uff0c\u6709\u4f55\u4f18\u70b9\uff1f", "\n\u7b54\uff1aConst\u4f5c\u7528\uff1a\u5b9a\u4e49\u5e38\u91cf\u3001\u4fee\u9970\u51fd\u6570\u53c2\u6570\u3001\u4fee\u9970\u51fd\u6570\u8fd4\u56de\u503c\u4e09\u4e2a\u4f5c\u7528\u3002\u88abConst\u4fee\u9970\u7684\u4e1c\u897f\u90fd\u53d7\u5230\u5f3a\u5236\u4fdd\u62a4\uff0c\u53ef\u4ee5\u9884\u9632\u610f\u5916\u7684\u53d8\u52a8\uff0c\u80fd\u63d0\u9ad8\u7a0b\u5e8f\u7684\u5065\u58ee\u6027\u3002", "\n1\uff09 const \u5e38\u91cf\u6709\u6570\u636e\u7c7b\u578b\uff0c\u800c\u5b8f\u5e38\u91cf\u6ca1\u6709\u6570\u636e\u7c7b\u578b\u3002\u7f16\u8bd1\u5668\u53ef\u4ee5\u5bf9\u524d\u8005\u8fdb\u884c\u7c7b\u578b\u5b89\u5168\u68c0\u67e5\u3002\u800c\u5bf9\u540e\u8005\u53ea\u8fdb\u884c\u5b57\u7b26\u66ff\u6362\uff0c\u6ca1\u6709\u7c7b\u578b\u5b89\u5168\u68c0\u67e5\uff0c\u5e76\u4e14\u5728\u5b57\u7b26\u66ff\u6362\u53ef\u80fd\u4f1a\u4ea7\u751f\u610f\u6599\u4e0d\u5230\u7684\u9519\u8bef\u3002", "\n      2\uff09 \u6709\u4e9b\u96c6\u6210\u5316\u7684\u8c03\u8bd5\u5de5\u5177\u53ef\u4ee5\u5bf9const \u5e38\u91cf\u8fdb\u884c\u8c03\u8bd5\uff0c\u4f46\u662f\u4e0d\u80fd\u5bf9\u5b8f\u5e38\u91cf\u8fdb\u884c\u8c03\u8bd5\u3002", "28\u3001\u7b80\u8ff0\u6570\u7ec4\u4e0e\u6307\u9488\u7684\u533a\u522b\uff1f", "\n\u7b54\uff1a\u6570\u7ec4\u8981\u4e48\u5728\u9759\u6001\u5b58\u50a8\u533a\u88ab\u521b\u5efa\uff08\u5982\u5168\u5c40\u6570\u7ec4\uff09\uff0c\u8981\u4e48\u5728\u6808\u4e0a\u88ab\u521b\u5efa\u3002\u6307\u9488\u53ef\u4ee5\u968f\u65f6\u6307\u5411\u4efb\u610f\u7c7b\u578b\u7684\u5185\u5b58\u5757\u3002", "\n    (1)\u4fee\u6539\u5185\u5bb9\u4e0a\u7684\u5dee\u522b", "\n      char a[] = \u201chello\u201d;", "\n      a[0] = \u2018X\u2019;", "\n      char *p = \u201cworld\u201d; // \u6ce8\u610fp \u6307\u5411\u5e38\u91cf\u5b57\u7b26\u4e32", "\n      p[0] = \u2018X\u2019; // \u7f16\u8bd1\u5668\u4e0d\u80fd\u53d1\u73b0\u8be5\u9519\u8bef\uff0c\u8fd0\u884c\u65f6\u9519\u8bef", "\n   (2) \u7528\u8fd0\u7b97\u7b26sizeof \u53ef\u4ee5\u8ba1\u7b97\u51fa\u6570\u7ec4\u7684\u5bb9\u91cf\uff08\u5b57\u8282\u6570\uff09\u3002sizeof(p),p \u4e3a\u6307\u9488\u5f97\u5230\u7684\u662f\u4e00\u4e2a \u6307\u9488\u53d8\u91cf\u7684\u5b57\u8282\u6570\uff0c\u800c\u4e0d\u662fp \u6240\u6307\u7684\u5185\u5b58\u5bb9\u91cf\u3002C++/C \u8bed\u8a00\u6ca1\u6709\u529e\u6cd5\u77e5\u9053\u6307\u9488\u6240\u6307\u7684\u5185\u5b58\u5bb9\u91cf\uff0c\u9664\u975e\u5728\u7533\u8bf7\u5185\u5b58\u65f6\u8bb0\u4f4f\u5b83\u3002\u6ce8\u610f\u5f53\u6570\u7ec4\u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570\u8fdb\u884c\u4f20\u9012\u65f6\uff0c\u8be5\u6570\u7ec4\u81ea\u52a8\u9000\u5316\u4e3a\u540c\u7c7b\u578b\u7684\u6307\u9488\u3002", "\n     char a[] = \u201chello world\u201d;", "\n     char *p = a;", "\n     cout\n     cout\n     \u8ba1\u7b97\u6570\u7ec4\u548c\u6307\u9488\u7684\u5185\u5b58\u5bb9\u91cf", "\n     void Func(char a[100])", "\n     {", "\n      cout\n     }", "29\u3001\u5206\u522b\u5199\u51faBOOL,int,float,\u6307\u9488\u7c7b\u578b\u7684\u53d8\u91cfa \u4e0e\u201c\u96f6\u201d\u7684\u6bd4\u8f83\u8bed\u53e5\u3002", "\n\u7b54\uff1aBOOL :    if ( !a ) or if(a)", "\nint :     if ( a == 0)", "\nfloat :   const EXPRESSION EXP = 0.000001", "\n          if ( a -EXP)", "\npointer : if ( a != NULL) or if(a == NULL) ", "30\u3001\u5982\u4f55\u5224\u65ad\u4e00\u6bb5\u7a0b\u5e8f\u662f\u7531C \u7f16\u8bd1\u7a0b\u5e8f\u8fd8\u662f\u7531C++\u7f16\u8bd1\u7a0b\u5e8f\u7f16\u8bd1\u7684\uff1f", "\n\u7b54\uff1a#ifdef __cplusplus", "\ncout\n#else", "\ncout\n#endif", "\n31\u3001\u8bba\u8ff0\u542b\u53c2\u6570\u7684\u5b8f\u4e0e\u51fd\u6570\u7684\u4f18\u7f3a\u70b9", "\n\u7b54\uff1a        \u5e26\u53c2\u5b8f                  \u51fd\u6570", "\n\u5904\u7406\u65f6\u95f4    \u7f16\u8bd1\u65f6               \u7a0b\u5e8f\u8fd0\u884c\u65f6", "\n\u53c2\u6570\u7c7b\u578b   \u6ca1\u6709\u53c2\u6570\u7c7b\u578b\u95ee\u9898      \u5b9a\u4e49\u5b9e\u53c2\u3001\u5f62\u53c2\u7c7b\u578b", "\n\u5904\u7406\u8fc7\u7a0b   \u4e0d\u5206\u914d\u5185\u5b58            \u5206\u914d\u5185\u5b58", "\n\u7a0b\u5e8f\u957f\u5ea6   \u53d8\u957f                  \u4e0d\u53d8", "\n\u8fd0\u884c\u901f\u5ea6   \u4e0d\u5360\u8fd0\u884c\u65f6\u95f4          \u8c03\u7528\u548c\u8fd4\u56de\u5360\u7528\u65f6\u95f4", "\n32\u3001\u7528\u4e24\u4e2a\u6808\u5b9e\u73b0\u4e00\u4e2a\u961f\u5217\u7684\u529f\u80fd\uff1f\u8981\u6c42\u7ed9\u51fa\u7b97\u6cd5\u548c\u601d\u8def\uff01", "\n\u7b54 \u3001\u8bbe2\u4e2a\u6808\u4e3aA,B, \u4e00\u5f00\u59cb\u5747\u4e3a\u7a7a.", "\n\u5165\u961f:", "\n\u5c06\u65b0\u5143\u7d20push\u5165\u6808A;", "\n\u51fa\u961f:", "\n(1)\u5224\u65ad\u6808B\u662f\u5426\u4e3a\u7a7a\uff1b", "\n(2)\u5982\u679c\u4e0d\u4e3a\u7a7a\uff0c\u5219\u5c06\u6808A\u4e2d\u6240\u6709\u5143\u7d20\u4f9d\u6b21pop\u51fa\u5e76push\u5230\u6808B\uff1b", "\n(3)\u5c06\u6808B\u7684\u6808\u9876\u5143\u7d20pop\u51fa\uff1b", "\n\u8fd9\u6837\u5b9e\u73b0\u7684\u961f\u5217\u5165\u961f\u548c\u51fa\u961f\u7684\u5e73\u644a\u590d\u6742\u5ea6\u90fd\u8fd8\u662fO(1), \u6bd4\u4e0a\u9762\u7684\u51e0\u79cd\u65b9\u6cd5\u8981\u597d", "33\u3001\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\u7ecf\u5e38\u8981\u7528\u5230\u65e0\u9650\u5faa\u73af\uff0c\u4f60\u600e\u4e48\u6837\u7528C\u7f16\u5199\u6b7b\u5faa\u73af\u5462\uff1f", "\n\u7b54\uff1a\u8fd9\u4e2a\u95ee\u9898\u7528\u51e0\u4e2a\u89e3\u51b3\u65b9\u6848\u3002\u6211\u9996\u9009\u7684\u65b9\u6848\u662f\uff1a", "\nwhile(1)", "\n{", "\n}", "\n\u4e00\u4e9b\u7a0b\u5e8f\u5458\u66f4\u559c\u6b22\u5982\u4e0b\u65b9\u6848\uff1a", "\nfor(;;)", "\n{", "\n}", "\n\u8fd9\u4e2a\u5b9e\u73b0\u65b9\u5f0f\u8ba9\u6211\u4e3a\u96be\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u8bed\u6cd5\u6ca1\u6709\u786e\u5207\u8868\u8fbe\u5230\u5e95\u600e\u4e48\u56de\u4e8b\u3002\u5982\u679c\u4e00\u4e2a\u5e94\u8bd5\u8005\u7ed9\u51fa\u8fd9\u4e2a\u4f5c\u4e3a\u65b9\u6848\uff0c\u6211\u5c06\u7528\u8fd9\u4e2a\u4f5c\u4e3a\u4e00\u4e2a\u673a\u4f1a\u53bb\u63a2\u7a76\u4ed6\u4eec\u8fd9\u6837\u505a\u7684", "\n\u57fa\u672c\u539f\u7406\u3002\u5982\u679c\u4ed6\u4eec\u7684\u57fa\u672c\u7b54\u6848\u662f\uff1a\u201c\u6211\u88ab\u6559\u7740\u8fd9\u6837\u505a\uff0c\u4f46\u4ece\u6ca1\u6709\u60f3\u5230\u8fc7\u4e3a\u4ec0\u4e48\u3002\u201d\u8fd9\u4f1a\u7ed9\u6211\u7559\u4e0b\u4e00\u4e2a\u574f\u5370\u8c61\u3002", "\n\u7b2c\u4e09\u4e2a\u65b9\u6848\u662f\u7528 goto", "\nLoop:", "\n...", "\ngoto Loop;", "\n\u5e94\u8bd5\u8005\u5982\u7ed9\u51fa\u4e0a\u9762\u7684\u65b9\u6848\uff0c\u8fd9\u8bf4\u660e\u6216\u8005\u4ed6\u662f\u4e00\u4e2a\u6c47\u7f16\u8bed\u8a00\u7a0b\u5e8f\u5458\uff08\u8fd9\u4e5f\u8bb8\u662f\u597d\u4e8b\uff09\u6216\u8005\u4ed6\u662f\u4e00\u4e2a\u60f3\u8fdb\u5165\u65b0\u9886\u57df\u7684BASIC/FORTRAN\u7a0b\u5e8f\u5458\u3002", "34\u3001\u4f4d\u64cd\u4f5c\uff08Bit manipulation\uff09", "\n\u7b54\uff1a \u5d4c\u5165\u5f0f\u7cfb\u7edf\u603b\u662f\u8981\u7528\u6237\u5bf9\u53d8\u91cf\u6216\u5bc4\u5b58\u5668\u8fdb\u884c\u4f4d\u64cd\u4f5c\u3002\u7ed9\u5b9a\u4e00\u4e2a\u6574\u578b\u53d8\u91cfa\uff0c\u5199\u4e24\u6bb5\u4ee3\u7801\uff0c\u7b2c\u4e00\u4e2a\u8bbe\u7f6ea\u7684bit 3\uff0c\u7b2c\u4e8c\u4e2a\u6e05\u9664a \u7684bit 3\u3002\u5728\u4ee5\u4e0a\u4e24\u4e2a\u64cd\u4f5c\u4e2d\uff0c\u8981\u4fdd\u6301\u5176\u5b83\u4f4d\u4e0d\u53d8\u3002", "\n\u5bf9\u8fd9\u4e2a\u95ee\u9898\u6709\u4e09\u79cd\u57fa\u672c\u7684\u53cd\u5e94", "\n1)\u4e0d\u77e5\u9053\u5982\u4f55\u4e0b\u624b\u3002\u8be5\u88ab\u9762\u8005\u4ece\u6ca1\u505a\u8fc7\u4efb\u4f55\u5d4c\u5165\u5f0f\u7cfb\u7edf\u7684\u5de5\u4f5c\u3002", "\n2) \u7528bit fields\u3002Bit fields\u662f\u88ab\u6254\u5230C\u8bed\u8a00\u6b7b\u89d2\u7684\u4e1c\u897f\uff0c\u5b83\u4fdd\u8bc1\u4f60\u7684\u4ee3\u7801\u5728\u4e0d\u540c\u7f16\u8bd1\u5668\u4e4b\u95f4\u662f\u4e0d\u53ef\u79fb\u690d\u7684\uff0c\u540c\u65f6\u4e5f\u4fdd\u8bc1\u4e86\u7684\u4f60\u7684\u4ee3\u7801\u662f\u4e0d\u53ef\u91cd\u7528\u7684\u3002\u6211\u6700\u8fd1\u4e0d\u5e78\u770b\u5230 Infineon\u4e3a\u5176\u8f83\u590d\u6742\u7684\u901a\u4fe1\u82af\u7247\u5199\u7684\u9a71\u52a8\u7a0b\u5e8f\uff0c\u5b83\u7528\u5230\u4e86bit fields\u56e0\u6b64\u5b8c\u5168\u5bf9\u6211\u65e0\u7528\uff0c\u56e0\u4e3a\u6211\u7684\u7f16\u8bd1\u5668\u7528\u5176\u5b83\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0bit fields\u7684\u3002\u4ece\u9053\u5fb7\u8bb2\uff1a\u6c38\u8fdc\u4e0d\u8981\u8ba9\u4e00\u4e2a\u975e\u5d4c\u5165\u5f0f\u7684\u5bb6\u4f19\u7c98\u5b9e\u9645\u786c\u4ef6\u7684\u8fb9\u3002", "\n3) \u7528 #defines \u548c bit masks \u64cd\u4f5c\u3002\u8fd9\u662f\u4e00\u4e2a\u6709\u6781\u9ad8\u53ef\u79fb\u690d\u6027\u7684\u65b9\u6cd5\uff0c\u662f\u5e94\u8be5\u88ab\u7528\u5230\u7684\u65b9\u6cd5\u3002\u6700\u4f73\u7684\u89e3\u51b3\u65b9\u6848\u5982\u4e0b\uff1a", "\n#define BIT3 (0x1 \nstatic int a;", "void set_bit3(void)", "\n{", "\n    a |= BIT3;", "\n}", "\nvoid clear_bit3(void)", "\n{", "\n    a &= ~BIT3;", "\n}", "\n    \u4e00\u4e9b\u4eba\u559c\u6b22\u4e3a\u8bbe\u7f6e\u548c\u6e05\u9664\u503c\u800c\u5b9a\u4e49\u4e00\u4e2a\u63a9\u7801\u540c\u65f6\u5b9a\u4e49\u4e00\u4e9b\u8bf4\u660e\u5e38\u6570\uff0c\u8fd9\u4e5f\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002\u6211\u5e0c\u671b\u770b\u5230\u51e0\u4e2a\u8981\u70b9\uff1a\u8bf4\u660e\u5e38\u6570\u3001|=\u548c&=~\u64cd\u4f5c\u3002", "35\u3001\u8bbf\u95ee\u56fa\u5b9a\u7684\u5185\u5b58\u4f4d\u7f6e\uff08Accessing fixed memory locations\uff09", "\n\u7b54\uff1a\u5d4c\u5165\u5f0f\u7cfb\u7edf\u7ecf\u5e38\u5177\u6709\u8981\u6c42\u7a0b\u5e8f\u5458\u53bb\u8bbf\u95ee\u67d0\u7279\u5b9a\u7684\u5185\u5b58\u4f4d\u7f6e\u7684\u7279\u70b9\u3002\u5728\u67d0\u5de5\u7a0b\u4e2d\uff0c\u8981\u6c42\u8bbe\u7f6e\u4e00\u7edd\u5bf9\u5730\u5740\u4e3a0x67a9\u7684\u6574\u578b\u53d8\u91cf\u7684\u503c\u4e3a0xaa66\u3002\u7f16\u8bd1\u5668\u662f\u4e00\u4e2a\u7eaf\u7cb9\u7684ANSI\u7f16\u8bd1\u5668\u3002\u5199\u4ee3\u7801\u53bb\u5b8c\u6210\u8fd9\u4e00\u4efb\u52a1\u3002", "\n\u8fd9\u4e00\u95ee\u9898\u6d4b\u8bd5\u4f60\u662f\u5426\u77e5\u9053\u4e3a\u4e86\u8bbf\u95ee\u4e00\u7edd\u5bf9\u5730\u5740\u628a\u4e00\u4e2a\u6574\u578b\u6570\u5f3a\u5236\u8f6c\u6362\uff08typecast\uff09\u4e3a\u4e00\u6307\u9488\u662f\u5408\u6cd5\u7684\u3002\u8fd9\u4e00\u95ee\u9898\u7684\u5b9e\u73b0\u65b9\u5f0f\u968f\u7740\u4e2a\u4eba\u98ce\u683c\u4e0d\u540c\u800c\u4e0d\u540c\u3002\u5178\u578b\u7684\u7c7b\u4f3c\u4ee3\u7801\u5982\u4e0b\uff1a", "\n    int *ptr;", "\n    ptr = (int *)0x67a9;", "\n    *ptr = 0xaa66;", "\n A more obscure approach is:", "\n\u4e00\u4e2a\u8f83\u6666\u6da9\u7684\u65b9\u6cd5\u662f\uff1a", "\n *(int * const)(0x67a9) = 0xaa55;", "\n\u5373\u4f7f\u4f60\u7684\u54c1\u5473\u66f4\u63a5\u8fd1\u7b2c\u4e8c\u79cd\u65b9\u6848\uff0c\u4f46\u6211\u5efa\u8bae\u4f60\u5728\u9762\u8bd5\u65f6\u4f7f\u7528\u7b2c\u4e00\u79cd\u65b9\u6848\u3002", "36\u3001\u4e2d\u65ad\uff08Interrupts\uff09", "\n\u7b54\uff1a \u4e2d\u65ad\u662f\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\u91cd\u8981\u7684\u7ec4\u6210\u90e8\u5206\uff0c\u8fd9\u5bfc\u81f4\u4e86\u5f88\u591a\u7f16\u8bd1\u5f00\u53d1\u5546\u63d0\u4f9b\u4e00\u79cd\u6269\u5c55\u2014\u8ba9\u6807\u51c6C\u652f\u6301\u4e2d\u65ad\u3002\u5177\u4ee3\u8868\u4e8b\u5b9e\u662f\uff0c\u4ea7\u751f\u4e86\u4e00\u4e2a\u65b0\u7684\u5173\u952e\u5b57 __interrupt\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u5c31\u4f7f\u7528\u4e86__interrupt\u5173\u952e\u5b57\u53bb\u5b9a\u4e49\u4e86\u4e00\u4e2a\u4e2d\u65ad\u670d\u52a1\u5b50\u7a0b\u5e8f(ISR)\uff0c\u8bf7\u8bc4\u8bba\u4e00\u4e0b\u8fd9\u6bb5\u4ee3\u7801\u7684\u3002", "__interrupt double compute_area (double radius)", "\n{", "\n    double area = PI * radius * radius;", "\n    printf(\"\\nArea = %f\", area);", "\n    return area;", "\n}", "\n\u8fd9\u4e2a\u51fd\u6570\u6709\u592a\u591a\u7684\u9519\u8bef\u4e86\uff0c\u4ee5\u81f3\u8ba9\u4eba\u4e0d\u77e5\u4ece\u4f55\u8bf4\u8d77\u4e86\uff1a", "\n1)ISR \u4e0d\u80fd\u8fd4\u56de\u4e00\u4e2a\u503c\u3002\u5982\u679c\u4f60\u4e0d\u61c2\u8fd9\u4e2a\uff0c\u90a3\u4e48\u4f60\u4e0d\u4f1a\u88ab\u96c7\u7528\u7684\u3002", "\n2) ISR \u4e0d\u80fd\u4f20\u9012\u53c2\u6570\u3002\u5982\u679c\u4f60\u6ca1\u6709\u770b\u5230\u8fd9\u4e00\u70b9\uff0c\u4f60\u88ab\u96c7\u7528\u7684\u673a\u4f1a\u7b49\u540c\u7b2c\u4e00\u9879\u3002", "\n3) \u5728\u8bb8\u591a\u7684\u5904\u7406\u5668/\u7f16\u8bd1\u5668\u4e2d\uff0c\u6d6e\u70b9\u4e00\u822c\u90fd\u662f\u4e0d\u53ef\u91cd\u5165\u7684\u3002\u6709\u4e9b\u5904\u7406\u5668/\u7f16\u8bd1\u5668\u9700\u8981\u8ba9\u989d\u5904\u7684\u5bc4\u5b58\u5668\u5165\u6808\uff0c\u6709\u4e9b\u5904\u7406\u5668/\u7f16\u8bd1\u5668\u5c31\u662f\u4e0d\u5141\u8bb8\u5728ISR\u4e2d\u505a\u6d6e\u70b9\u8fd0\u7b97\u3002\u6b64\u5916\uff0cISR\u5e94\u8be5\u662f\u77ed\u800c\u6709\u6548\u7387\u7684\uff0c\u5728ISR\u4e2d\u505a\u6d6e\u70b9\u8fd0\u7b97\u662f\u4e0d\u660e\u667a\u7684\u3002", "\n4) \u4e0e\u7b2c\u4e09\u70b9\u4e00\u8109\u76f8\u627f\uff0cprintf()\u7ecf\u5e38\u6709\u91cd\u5165\u548c\u6027\u80fd\u4e0a\u7684\u95ee\u9898\u3002\u5982\u679c\u4f60\u4e22\u6389\u4e86\u7b2c\u4e09\u548c\u7b2c\u56db\u70b9\uff0c\u6211\u4e0d\u4f1a\u592a\u4e3a\u96be\u4f60\u7684\u3002\u4e0d\u7528\u8bf4\uff0c\u5982\u679c\u4f60\u80fd\u5f97\u5230\u540e\u4e24\u70b9\uff0c\u90a3\u4e48\u4f60\u7684\u88ab\u96c7\u7528\u524d\u666f\u8d8a\u6765\u8d8a\u5149\u660e\u4e86\u3002", "\n37\u3001\u52a8\u6001\u5185\u5b58\u5206\u914d\uff08Dynamic memory allocation\uff09", "\n\u7b54\uff1a\u5c3d\u7ba1\u4e0d\u50cf\u975e\u5d4c\u5165\u5f0f\u8ba1\u7b97\u673a\u90a3\u4e48\u5e38\u89c1\uff0c\u5d4c\u5165\u5f0f\u7cfb\u7edf\u8fd8\u662f\u6709\u4ece\u5806\uff08heap\uff09\u4e2d\u52a8\u6001\u5206\u914d\u5185\u5b58\u7684\u8fc7\u7a0b\u7684\u3002\u90a3\u4e48\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u52a8\u6001\u5206\u914d\u5185\u5b58\u53ef\u80fd\u53d1\u751f\u7684\u95ee\u9898\u662f\u4ec0\u4e48\uff1f", "\n\u8fd9\u91cc\uff0c\u6211\u671f\u671b\u5e94\u8bd5\u8005\u80fd\u63d0\u5230\u5185\u5b58\u788e\u7247\uff0c\u788e\u7247\u6536\u96c6\u7684\u95ee\u9898\uff0c\u53d8\u91cf\u7684\u6301\u884c\u65f6\u95f4\u7b49\u7b49\u3002\u8fd9\u4e2a\u4e3b\u9898\u5df2\u7ecf\u5728ESP\u6742\u5fd7\u4e2d\u88ab\u5e7f\u6cdb\u5730\u8ba8\u8bba\u8fc7\u4e86\uff08\u4e3b\u8981\u662f P.J. Plauger, \u4ed6\u7684\u89e3\u91ca\u8fdc\u8fdc\u8d85\u8fc7\u6211\u8fd9\u91cc\u80fd\u63d0\u5230\u7684\u4efb\u4f55\u89e3\u91ca\uff09\uff0c\u6240\u6709\u56de\u8fc7\u5934\u770b\u4e00\u4e0b\u8fd9\u4e9b\u6742\u5fd7\u5427\uff01\u8ba9\u5e94\u8bd5\u8005\u8fdb\u5165\u4e00\u79cd\u865a\u5047\u7684\u5b89\u5168\u611f\u89c9\u540e\uff0c\u6211\u62ff\u51fa\u8fd9\u4e48\u4e00\u4e2a\u5c0f\u8282\u76ee\uff1a", "\n\u4e0b\u9762\u7684\u4ee3\u7801\u7247\u6bb5\u7684\u8f93\u51fa\u662f\u4ec0\u4e48\uff0c\u4e3a\u4ec0\u4e48\uff1f", "\nchar *ptr;", "\nif ((ptr = (char *)malloc(0)) == NULL)", "\n    puts(\"Got a null pointer\");", "\nelse", "\n    puts(\"Got a valid pointer\");", "\n    \u8fd9\u662f\u4e00\u4e2a\u6709\u8da3\u7684\u95ee\u9898\u3002\u6700\u8fd1\u5728\u6211\u7684\u4e00\u4e2a\u540c\u4e8b\u4e0d\u7ecf\u610f\u628a0\u503c\u4f20\u7ed9\u4e86\u51fd\u6570malloc\uff0c\u5f97\u5230\u4e86\u4e00\u4e2a\u5408\u6cd5\u7684\u6307\u9488\u4e4b\u540e\uff0c\u6211\u624d\u60f3\u5230\u8fd9\u4e2a\u95ee\u9898\u3002\u8fd9\u5c31\u662f\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u8be5\u4ee3\u7801\u7684\u8f93\u51fa\u662f\"Got a valid pointer\"\u3002\u6211\u7528\u8fd9\u4e2a\u6765\u5f00\u59cb\u8ba8\u8bba\u8fd9\u6837\u7684\u4e00\u95ee\u9898\uff0c\u770b\u770b\u88ab\u9762\u8bd5\u8005\u662f\u5426\u60f3\u5230\u5e93\u4f8b\u7a0b\u8fd9\u6837\u505a\u662f\u6b63\u786e\u3002\u5f97\u5230\u6b63\u786e\u7684\u7b54\u6848\u56fa\u7136\u91cd\u8981\uff0c\u4f46\u89e3\u51b3\u95ee\u9898\u7684\u65b9\u6cd5\u548c\u4f60\u505a\u51b3\u5b9a\u7684\u57fa\u672c\u539f\u7406\u66f4\u91cd\u8981\u4e9b\u3002", "\n38\u3001Typedef", "\n\u7b54\uff1aTypedef \u5728C\u8bed\u8a00\u4e2d\u9891\u7e41\u7528\u4ee5\u58f0\u660e\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u6570\u636e\u7c7b\u578b\u7684\u540c\u4e49\u5b57\u3002\u4e5f\u53ef\u4ee5\u7528\u9884\u5904\u7406\u5668\u505a\u7c7b\u4f3c\u7684\u4e8b\u3002\u4f8b\u5982\uff0c\u601d\u8003\u4e00\u4e0b\u4e0b\u9762\u7684\u4f8b\u5b50\uff1a", "\n#define dPS struct s *", "\ntypedef struct s * tPS;", "\n   \u4ee5\u4e0a\u4e24\u79cd\u60c5\u51b5\u7684\u610f\u56fe\u90fd\u662f\u8981\u5b9a\u4e49dPS \u548c tPS \u4f5c\u4e3a\u4e00\u4e2a\u6307\u5411\u7ed3\u6784s\u6307\u9488\u3002\u54ea\u79cd\u65b9\u6cd5\u66f4\u597d\u5462\uff1f\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u4e3a\u4ec0\u4e48\uff1f", "\n   \u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u5fae\u5999\u7684\u95ee\u9898\uff0c\u4efb\u4f55\u4eba\u7b54\u5bf9\u8fd9\u4e2a\u95ee\u9898\uff08\u6b63\u5f53\u7684\u539f\u56e0\uff09\u662f\u5e94\u5f53\u88ab\u606d\u559c\u7684\u3002\u7b54\u6848\u662f\uff1atypedef\u66f4\u597d\u3002\u601d\u8003\u4e0b\u9762\u7684\u4f8b\u5b50\uff1a", "\ndPS p1,p2;", "\ntPS p3,p4;", "\n\u7b2c\u4e00\u4e2a\u6269\u5c55\u4e3a", "\nstruct s * p1, p2;", "\n    \u4e0a\u9762\u7684\u4ee3\u7801\u5b9a\u4e49p1\u4e3a\u4e00\u4e2a\u6307\u5411\u7ed3\u6784\u7684\u6307\uff0cp2\u4e3a\u4e00\u4e2a\u5b9e\u9645\u7684\u7ed3\u6784\uff0c\u8fd9\u4e5f\u8bb8\u4e0d\u662f\u4f60\u60f3\u8981\u7684\u3002\u7b2c\u4e8c\u4e2a\u4f8b\u5b50\u6b63\u786e\u5730\u5b9a\u4e49\u4e86p3 \u548cp4 \u4e24\u4e2a\u6307\u9488\u3002", "39\u3001\u7528\u53d8\u91cfa\u7ed9\u51fa\u4e0b\u9762\u7684\u5b9a\u4e49", "\n\u7b54\uff1aa) \u4e00\u4e2a\u6574\u578b\u6570\uff08An integer\uff09", "\nb) \u4e00\u4e2a\u6307\u5411\u6574\u578b\u6570\u7684\u6307\u9488\uff08A pointer to an integer\uff09", "\nc) \u4e00\u4e2a\u6307\u5411\u6307\u9488\u7684\u7684\u6307\u9488\uff0c\u5b83\u6307\u5411\u7684\u6307\u9488\u662f\u6307\u5411\u4e00\u4e2a\u6574\u578b\u6570\uff08A pointer to a pointer to an integer\uff09", "\nd) \u4e00\u4e2a\u670910\u4e2a\u6574\u578b\u6570\u7684\u6570\u7ec4\uff08An array of 10 integers\uff09", "\ne) \u4e00\u4e2a\u670910\u4e2a\u6307\u9488\u7684\u6570\u7ec4\uff0c\u8be5\u6307\u9488\u662f\u6307\u5411\u4e00\u4e2a\u6574\u578b\u6570\u7684\uff08An array of 10 pointers to integers\uff09", "\nf) \u4e00\u4e2a\u6307\u5411\u670910\u4e2a\u6574\u578b\u6570\u6570\u7ec4\u7684\u6307\u9488\uff08A pointer to an array of 10 integers\uff09", "\ng) \u4e00\u4e2a\u6307\u5411\u51fd\u6570\u7684\u6307\u9488\uff0c\u8be5\u51fd\u6570\u6709\u4e00\u4e2a\u6574\u578b\u53c2\u6570\u5e76\u8fd4\u56de\u4e00\u4e2a\u6574\u578b\u6570\uff08A pointer to a function that takes an integer as an argument and returns an integer\uff09", "\nh) \u4e00\u4e2a\u670910\u4e2a\u6307\u9488\u7684\u6570\u7ec4\uff0c\u8be5\u6307\u9488\u6307\u5411\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u6709\u4e00\u4e2a\u6574\u578b\u53c2\u6570\u5e76\u8fd4\u56de\u4e00\u4e2a\u6574\u578b\u6570\uff08 An array of ten pointers to functions that take an integer", "\nargument and return an integer \uff09", "\u7b54\u6848\u662f\uff1a", "\na) int a; // An integer", "\nb) int *a; // A pointer to an integer", "\nc) int **a; // A pointer to a pointer to an integer", "\nd) int a[10]; // An array of 10 integers", "\ne) int *a[10]; // An array of 10 pointers to integers", "\nf) int (*a)[10]; // A pointer to an array of 10 integers", "\ng) int (*a)(int); // A pointer to a function a that takes an integer argument and returns an integer", "\nh) int (*a[10])(int); // An array of 10 pointers to functions that take an integer argument and return an integer", "40\u3001\u89e3\u91ca\u5c40\u90e8\u53d8\u91cf\u3001\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\u7684\u542b\u4e49\u3002", "\n\u7b54\uff1a", "\n41\u3001\u5199\u4e00\u4e2a\u201c\u6807\u51c6\u201d\u5b8f", "\n\u7b54\uff1a\u4ea4\u6362\u4e24\u4e2a\u53c2\u6570\u503c\u7684\u5b8f\u5b9a\u4e49\u4e3a\uff1a. #define SWAP(a,b)\\", "\n (a)=(a)+(b);\\", "\n(b)=(a)-(b);\\", "\n(a)=(a)-(b);", "\n\u8f93\u5165\u4e24\u4e2a\u53c2\u6570\uff0c\u8f93\u51fa\u8f83\u5c0f\u7684\u4e00\u4e2a\uff1a#define MIN(A,B) ((A) \n\u8868\u660e1\u5e74\u4e2d\u6709\u591a\u5c11\u79d2\uff08\u5ffd\u7565\u95f0\u5e74\u95ee\u9898\uff09\uff1a#define SECONDS_PER_YEAR (60 * 60 * 24 * 365)UL", "\n#define DOUBLE(x) x+x  \u4e0e          #define DOUBLE(x) \uff08\uff08x\uff09+\uff08x\uff09\uff09", "\ni = 5*DOUBLE(5)\uff1b i\u4e3a30           i = 5*DOUBLE(5)\uff1b i\u4e3a50", "\n\u5df2\u77e5\u4e00\u4e2a\u6570\u7ec4table\uff0c\u7528\u4e00\u4e2a\u5b8f\u5b9a\u4e49\uff0c\u6c42\u51fa\u6570\u636e\u7684\u5143\u7d20\u4e2a\u6570", "\n#define NTBL", "\n#define NTBL (sizeof(table)/sizeof(table[0]))", "42\u3001A.c \u548cB.c\u4e24\u4e2ac\u6587\u4ef6\u4e2d\u4f7f\u7528\u4e86\u4e24\u4e2a\u76f8\u540c\u540d\u5b57\u7684static\u53d8\u91cf,\u7f16\u8bd1\u7684\u65f6\u5019\u4f1a\u4e0d\u4f1a\u6709\u95ee\u9898?\u8fd9\u4e24\u4e2astatic\u53d8\u91cf\u4f1a\u4fdd\u5b58\u5230\u54ea\u91cc\uff08\u6808\u8fd8\u662f\u5806\u6216\u8005\u5176\u4ed6\u7684\uff09?", "\n\u7b54\uff1astatic\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u8868\u660e\u8fd9\u4e2a\u53d8\u91cf\u4ec5\u5728\u672c\u6a21\u5757\u4e2d\u6709\u610f\u4e49\uff0c\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u6a21\u5757\u3002", "\n\u4ed6\u4eec\u90fd\u653e\u5728\u6570\u636e\u533a\uff0c\u4f46\u662f\u7f16\u8bd1\u5668\u5bf9\u4ed6\u4eec\u7684\u547d\u540d\u662f\u4e0d\u540c\u7684\u3002", "\n\u5982\u679c\u8981\u4f7f\u53d8\u91cf\u5728\u5176\u4ed6\u6a21\u5757\u4e5f\u6709\u610f\u4e49\u7684\u8bdd\uff0c\u9700\u8981\u4f7f\u7528extern\u5173\u952e\u5b57\u3002", "43\u3001\u4e00\u4e2a\u5355\u5411\u94fe\u8868\uff0c\u4e0d\u77e5\u9053\u5934\u8282\u70b9,\u4e00\u4e2a\u6307\u9488\u6307\u5411\u5176\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\uff0c\u95ee\u5982\u4f55\u5220\u9664\u8fd9\u4e2a\u6307\u9488\u6307\u5411\u7684\u8282\u70b9\uff1f", "\n\u7b54\uff1a\u5c06\u8fd9\u4e2a\u6307\u9488\u6307\u5411\u7684next\u8282\u70b9\u503ccopy\u5230\u672c\u8282\u70b9\uff0c\u5c06next\u6307\u5411next->next,\u5e76\u968f\u540e\u5220\u9664\u539fnext\u6307\u5411\u7684\u8282\u70b9\u3002", "\n\u7b2c\u4e8c\u90e8\u5206\uff1a\u7a0b\u5e8f\u4ee3\u7801\u8bc4\u4ef7\u6216\u8005\u627e\u9519", "\n1\u3001\u4e0b\u9762\u7684\u4ee3\u7801\u8f93\u51fa\u662f\u4ec0\u4e48\uff0c\u4e3a\u4ec0\u4e48\uff1f", "\nvoid foo(void)", "\n{", "\n    unsigned int a = 6;", "\n    int b = -20;", "\n    (a+b > 6) ? puts(\u201c> 6\u2033) : puts(\u201c\n}", "\n\u8fd9\u4e2a\u95ee\u9898\u6d4b\u8bd5\u4f60\u662f\u5426\u61c2\u5f97C\u8bed\u8a00\u4e2d\u7684\u6574\u6570\u81ea\u52a8\u8f6c\u6362\u539f\u5219\uff0c\u6211\u53d1\u73b0\u6709\u4e9b\u5f00\u53d1\u8005\u61c2\u5f97\u6781\u5c11\u8fd9\u4e9b\u4e1c\u897f\u3002\u4e0d\u7ba1\u5982\u4f55\uff0c\u8fd9\u65e0\u7b26\u53f7\u6574\u578b\u95ee\u9898\u7684\u7b54\u6848\u662f\u8f93\u51fa\u662f \">6\u2033\u3002\u539f\u56e0\u662f\u5f53\u8868\u8fbe\u5f0f\u4e2d\u5b58\u5728\u6709\u7b26\u53f7\u7c7b\u578b\u548c\u65e0\u7b26\u53f7\u7c7b\u578b\u65f6\u6240\u6709\u7684\u64cd\u4f5c\u6570\u90fd\u81ea\u52a8\u8f6c\u6362\u4e3a\u65e0\u7b26\u53f7\u7c7b\u578b\u3002\u56e0\u6b64-20\u53d8\u6210\u4e86\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u6b63\u6574\u6570\uff0c\u6240\u4ee5\u8be5\u8868\u8fbe\u5f0f\u8ba1\u7b97\u51fa\u7684\u7ed3\u679c\u5927\u4e8e6\u3002\u8fd9\u4e00\u70b9\u5bf9\u4e8e\u5e94\u5f53\u9891\u7e41\u7528\u5230\u65e0\u7b26\u53f7\u6570\u636e\u7c7b\u578b\u7684\u5d4c\u5165\u5f0f\u7cfb\u7edf\u6765\u8bf4\u662f\u4e30\u5e38\u91cd\u8981\u7684\u3002\u5982\u679c\u4f60\u7b54\u9519\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f60\u4e5f\u5c31\u5230\u4e86\u5f97\u4e0d\u5230\u8fd9\u4efd\u5de5\u4f5c\u7684\u8fb9\u7f18\u3002", "2\u3001\u8bc4\u4ef7\u4e0b\u9762\u7684\u4ee3\u7801\u7247\u65ad\uff1a", "\nunsigned int zero = 0;", "\nunsigned int compzero = 0xFFFF;", "\n/*1\u2032s complement of zero */", "\n\u5bf9\u4e8e\u4e00\u4e2aint\u578b\u4e0d\u662f16\u4f4d\u7684\u5904\u7406\u5668\u4e3a\u8bf4\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u662f\u4e0d\u6b63\u786e\u7684\u3002\u5e94\u7f16\u5199\u5982\u4e0b\uff1a", "\nunsigned int compzero = ~0;", "\n    \u8fd9\u4e00\u95ee\u9898\u771f\u6b63\u80fd\u63ed\u9732\u51fa\u5e94\u8bd5\u8005\u662f\u5426\u61c2\u5f97\u5904\u7406\u5668\u5b57\u957f\u7684\u91cd\u8981\u6027\u3002\u5728\u6211\u7684\u7ecf\u9a8c\u91cc\uff0c\u597d\u7684\u5d4c\u5165\u5f0f\u7a0b\u5e8f\u5458\u975e\u5e38\u51c6\u786e\u5730\u660e\u767d\u786c\u4ef6\u7684\u7ec6\u8282\u548c\u5b83\u7684\u5c40\u9650\uff0c\u7136\u800cPC\u673a\u7a0b\u5e8f\u5f80\u5f80\u628a\u786c\u4ef6\u4f5c\u4e3a\u4e00\u4e2a\u65e0\u6cd5\u907f\u514d\u7684\u70e6\u607c\u3002", "\n3\u3001 C\u8bed\u8a00\u540c\u610f\u4e00\u4e9b\u4ee4\u4eba\u9707\u60ca\u7684\u7ed3\u6784,\u4e0b\u9762\u7684\u7ed3\u6784\u662f\u5408\u6cd5\u7684\u5417\uff0c\u5982\u679c\u662f\u5b83\u505a\u4e9b\u4ec0\u4e48\uff1f", "\nint a = 5, b = 7, c;", "\nc = a+++b;", "\n\u8fd9\u4e2a\u95ee\u9898\u5c06\u505a\u4e3a\u8fd9\u4e2a\u6d4b\u9a8c\u7684\u4e00\u4e2a\u6109\u5feb\u7684\u7ed3\u5c3e\u3002\u4e0d\u7ba1\u4f60\u76f8\u4e0d\u76f8\u4fe1\uff0c\u4e0a\u9762\u7684\u4f8b\u5b50\u662f\u5b8c\u5168\u5408\u4e4e\u8bed\u6cd5\u7684\u3002\u95ee\u9898\u662f\u7f16\u8bd1\u5668\u5982\u4f55\u5904\u7406\u5b83\uff1f\u6c34\u5e73\u4e0d\u9ad8\u7684\u7f16\u8bd1\u4f5c\u8005\u5b9e\u9645\u4e0a\u4f1a\u4e89\u8bba\u8fd9\u4e2a\u95ee\u9898\uff0c\u6839\u636e\u6700\u5904\u7406\u539f\u5219\uff0c\u7f16\u8bd1\u5668\u5e94\u5f53\u80fd\u5904\u7406\u5c3d\u53ef\u80fd\u6240\u6709\u5408\u6cd5\u7684\u7528\u6cd5\u3002\u56e0\u6b64\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u88ab\u5904\u7406\u6210\uff1a", "\nc = a++ + b;", "\n\u56e0\u6b64, \u8fd9\u6bb5\u4ee3\u7801\u6301\u884c\u540ea = 6, b = 7, c = 12\u3002", "\n\u5982\u679c\u4f60\u77e5\u9053\u7b54\u6848\uff0c\u6216\u731c\u51fa\u6b63\u786e\u7b54\u6848\uff0c\u505a\u5f97\u597d\u3002\u5982\u679c\u4f60\u4e0d\u77e5\u9053\u7b54\u6848\uff0c\u6211\u4e5f\u4e0d\u628a\u8fd9\u4e2a\u5f53\u4f5c\u95ee\u9898\u3002\u6211\u53d1\u73b0\u8fd9\u4e2a\u95ee\u9898\u7684\u6700\u5927\u597d\u5904\u662f\u8fd9\u662f\u4e00\u4e2a\u5173\u4e8e\u4ee3\u7801\u7f16\u5199\u98ce\u683c\uff0c\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\uff0c\u4ee3\u7801\u7684\u53ef\u4fee\u6539\u6027\u7684\u597d\u7684\u8bdd\u9898\u3002", "4\u3001\u8bbe\u6709\u4ee5\u4e0b\u8bf4\u660e\u548c\u5b9a\u4e49\uff1a", "\ntypedef union {long i; int k[5]; char c;} DATE;", "\nstruct data { int cat; DATE cow; double dog;} too;", "\nDATE max;", "\n\u5219\u8bed\u53e5 printf(\u201c%d\u201d,sizeof(struct date)+sizeof(max));\u7684\u6267\u884c\u7ed3\u679c\u662f\uff1f", "\n\u7b54 \u3001\u7ed3\u679c\u662f\uff1a52\u3002DATE\u662f\u4e00\u4e2aunion, \u53d8\u91cf\u516c\u7528\u7a7a\u95f4. \u91cc\u9762\u6700\u5927\u7684\u53d8\u91cf\u7c7b\u578b\u662fint[5], \u5360\u752820\u4e2a\u5b57\u8282. \u6240\u4ee5\u5b83\u7684\u5927\u5c0f\u662f20", "\ndata\u662f\u4e00\u4e2astruct, \u6bcf\u4e2a\u53d8\u91cf\u5206\u5f00\u5360\u7528\u7a7a\u95f4. \u4f9d\u6b21\u4e3aint4 + DATE20 + double8 = 32.", "\n\u6240\u4ee5\u7ed3\u679c\u662f 20 + 32 = 52.", "\n\u5f53\u7136\u2026\u5728\u67d0\u4e9b16\u4f4d\u7f16\u8f91\u5668\u4e0b, int\u53ef\u80fd\u662f2\u5b57\u8282,\u90a3\u4e48\u7ed3\u679c\u662f int2 + DATE10 + double8 = 20", "5\u3001\u8bf7\u5199\u51fa\u4e0b\u5217\u4ee3\u7801\u7684\u8f93\u51fa\u5185\u5bb9", "\n#include", "6\u3001\u5199\u51fa\u4e0b\u5217\u4ee3\u7801\u7684\u8f93\u51fa\u5185\u5bb9", "\n#include", "void show(FUNC2 fun,int arg1, int*arg2)", "\n{", "\nINCp=&inc;", "\nint temp =p(arg1);", "\nfun(&temp,&arg1, arg2);", "\nprintf(\u201c%d\\n\u201d,*arg2);", "\n}", "main()", "\n{", "\nint a;", "\nshow(multi,10,&a);", "\nreturn 0;", "\n}", "\n\u7b54\uff1a110", "7\u3001\u8bf7\u627e\u51fa\u4e0b\u9762\u4ee3\u7801\u4e2d\u7684\u6240\u4ee5\u9519\u8bef", "\n\u8bf4\u660e\uff1a\u4ee5\u4e0b\u4ee3\u7801\u662f\u628a\u4e00\u4e2a\u5b57\u7b26\u4e32\u5012\u5e8f\uff0c\u5982\u201cabcd\u201d\u5012\u5e8f\u540e\u53d8\u4e3a\u201cdcba\u201d", "1\u3001#include\u201dstring.h\u201d", "\n2\u3001main()", "\n3\u3001{", "\n4\u3001 char*src=\u201dhello,world\u201d;", "\n5\u3001 char* dest=NULL;", "\n6\u3001 int len=strlen(src);", "\n7\u3001 dest=(char*)malloc(len);", "\n8\u3001 char* d=dest;", "\n9\u3001 char* s=src[len];", "\n10\u3001 while(len\u2013!=0)", "\n11\u3001 d++=s\u2013;", "\n12\u3001 printf(\u201c%s\u201d,dest);", "\n13\u3001 return 0;", "\n14\u3001}", "\n\u7b54\uff1a", "\n\u65b9\u6cd51\uff1a", "\nint main(){", "\nchar* src = \u201chello,world\u201d;", "\nint len = strlen(src);", "\nchar* dest = (char*)malloc(len+1);//\u8981\u4e3a\\0\u5206\u914d\u4e00\u4e2a\u7a7a\u95f4", "\nchar* d = dest;", "\nchar* s = &src[len-1];//\u6307\u5411\u6700\u540e\u4e00\u4e2a\u5b57\u7b26", "\nwhile( len\u2013 != 0 )", "\n*d++=*s\u2013;", "\n*d = 0;//\u5c3e\u90e8\u8981\u52a0\\0", "\nprintf(\u201c%s\\n\u201d,dest);", "\nfree(dest);// \u4f7f\u7528\u5b8c\uff0c\u5e94\u5f53\u91ca\u653e\u7a7a\u95f4\uff0c\u4ee5\u514d\u9020\u6210\u5185\u5b58\u6c47\u6cc4\u9732", "\nreturn 0;", "\n}", "\n\u65b9\u6cd52\uff1a", "\n#include ", "8\u3001\u8bf7\u95ee\u4e0b\u9762\u7a0b\u5e8f\u6709\u4ec0\u4e48\u9519\u8bef?", "\n   int a[60][250][1000],i,j,k;", "\n   for(k=0;k\n    for(j=0;j\n     for(i=0;i\n      a[i][j][k]=0;", "\n\u7b54\u6848\uff1a\u628a\u5faa\u73af\u8bed\u53e5\u5185\u5916\u6362\u4e00\u4e0b", "9\u3001\u8bf7\u95ee\u4e0b\u9762\u7a0b\u5e8f\u4f1a\u51fa\u73b0\u4ec0\u4e48\u60c5\u51b5?", "\n.    #define Max_CB 500", "\n    void LmiQueryCSmd(Struct MSgCB * pmsg)", "\n     {", "\n     unsigned char ucCmdNum;", "\n     ......", "     for(ucCmdNum=0;ucCmdNum", "\n      {", "\n      ......;", "\n      }", "\n\u7b54\u6848\uff1a\u6b7b\u5faa\u73af", "10\u3001\u4ee5\u4e0b3\u4e2a\u6709\u4ec0\u4e48\u533a\u522b", "\nchar * const p; //\u5e38\u91cf\u6307\u9488\uff0cp\u7684\u503c\u4e0d\u53ef\u4ee5\u4fee\u6539", "\nchar const * p\uff1b//\u6307\u5411\u5e38\u91cf\u7684\u6307\u9488\uff0c\u6307\u5411\u7684\u5e38\u91cf\u503c\u4e0d\u53ef\u4ee5\u6539", "\nconst char *p\uff1b //\u548cchar const *p", "11\u3001\u5199\u51fa\u4e0b\u9762\u7684\u7ed3\u679c", "\nchar str1[] = \"abc\";", "\nchar str2[] = \"abc\";", "const char str3[] = \"abc\";", "\nconst char str4[] = \"abc\";", "const char *str5 = \"abc\";", "\nconst char *str6 = \"abc\";", "char *str7 = \"abc\";", "\nchar *str8 = \"abc\";", "cout \ncout \ncout \ncout \n", "\u7ed3\u679c\u662f\uff1a0 0 1 1", "\n\u89e3\u7b54\uff1astr1,str2,str3,str4\u662f\u6570\u7ec4\u53d8\u91cf\uff0c\u5b83\u4eec\u6709\u5404\u81ea\u7684\u5185\u5b58\u7a7a\u95f4\uff1b", "\n\u800cstr5,str6,str7,str8\u662f\u6307\u9488\uff0c\u5b83\u4eec\u6307\u5411\u76f8\u540c\u7684\u5e38\u91cf\u533a\u57df\u3002", "12\u3001\u4ee5\u4e0b\u4ee3\u7801\u4e2d\u7684\u4e24\u4e2asizeof\u7528\u6cd5\u6709\u95ee\u9898\u5417\uff1f", "\nvoid UpperCase( char str[] ) // \u5c06 str \u4e2d\u7684\u5c0f\u5199\u5b57\u6bcd\u8f6c\u6362\u6210\u5927\u5199\u5b57\u6bcd", "\n{", "\n    for( size_t i=0; i", "\n        if( 'a'\n            str[i] -= ('a'-'A' );", "\n}", "\nchar str[] = \"aBcDe\";", "\ncout \nUpperCase( str );", "\ncout \n\u7b54\uff1a\u51fd\u6570\u5185\u7684sizeof\u6709\u95ee\u9898\u3002\u6839\u636e\u8bed\u6cd5\uff0csizeof\u5982\u7528\u4e8e\u6570\u7ec4\uff0c\u53ea\u80fd\u6d4b\u51fa\u9759\u6001\u6570\u7ec4\u7684\u5927\u5c0f\uff0c\u65e0\u6cd5\u68c0\u6d4b\u52a8\u6001\u5206\u914d\u7684\u6216\u5916\u90e8\u6570\u7ec4\u5927\u5c0f\u3002\u51fd\u6570\u5916\u7684str\u662f\u4e00\u4e2a\u9759\u6001\u5b9a\u4e49\u7684\u6570\u7ec4\uff0c\u56e0\u6b64\u5176\u5927\u5c0f\u4e3a6\uff0c\u51fd\u6570\u5185\u7684str\u5b9e\u9645\u53ea\u662f\u4e00\u4e2a\u6307\u5411\u5b57\u7b26\u4e32\u7684\u6307\u9488\uff0c\u6ca1\u6709\u4efb\u4f55\u989d\u5916\u7684\u4e0e\u6570\u7ec4\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u56e0\u6b64sizeof\u4f5c\u7528\u4e8e\u4e0a\u53ea\u5c06\u5176\u5f53\u6307\u9488\u770b\uff0c\u4e00\u4e2a\u6307\u9488\u4e3a4\u4e2a\u5b57\u8282\uff0c\u56e0\u6b64\u8fd4\u56de4\u3002", "13\u3001\u5199\u51fa\u8f93\u51fa\u7ed3\u679c", "\nmain()", "\n{", "\n  int a[5]={1,2,3,4,5};", "\n   int *ptr=(int *)(&a+1);", "\nprintf(\"%d,%d\",*(a+1),*(ptr-1));", "\n}", "\n\u8f93\u51fa\uff1a2,5", "\n*(a+1\uff09\u5c31\u662fa[1]\uff0c*(ptr-1)\u5c31\u662fa[4],\u6267\u884c\u7ed3\u679c\u662f2\uff0c5", "\n&a+1\u4e0d\u662f\u9996\u5730\u5740+1\uff0c\u7cfb\u7edf\u4f1a\u8ba4\u4e3a\u52a0\u4e00\u4e2aa\u6570\u7ec4\u7684\u504f\u79fb\uff0c\u662f\u504f\u79fb\u4e86\u4e00\u4e2a\u6570\u7ec4\u7684\u5927\u5c0f\uff08\u672c\u4f8b\u662f5\u4e2aint\uff09", "\nint *ptr=(int *)(&a+1);", "\n\u5219ptr\u5b9e\u9645\u662f&(a[5]),\u4e5f\u5c31\u662fa+5", "\n\u539f\u56e0\u5982\u4e0b\uff1a", "\n&a\u662f\u6570\u7ec4\u6307\u9488\uff0c\u5176\u7c7b\u578b\u4e3a int (*)[5];", "\n\u800c\u6307\u9488\u52a01\u8981\u6839\u636e\u6307\u9488\u7c7b\u578b\u52a0\u4e0a\u4e00\u5b9a\u7684\u503c\uff0c", "\n\u4e0d\u540c\u7c7b\u578b\u7684\u6307\u9488+1\u4e4b\u540e\u589e\u52a0\u7684\u5927\u5c0f\u4e0d\u540c", "\na\u662f\u957f\u5ea6\u4e3a5\u7684int\u6570\u7ec4\u6307\u9488\uff0c\u6240\u4ee5\u8981\u52a0 5*sizeof(int)", "\n\u6240\u4ee5ptr\u5b9e\u9645\u662fa[5]", "\n\u4f46\u662fprt\u4e0e(&a+1)\u7c7b\u578b\u662f\u4e0d\u4e00\u6837\u7684(\u8fd9\u70b9\u5f88\u91cd\u8981)", "\n\u6240\u4ee5prt-1\u53ea\u4f1a\u51cf\u53bbsizeof(int*)", "\na,&a\u7684\u5730\u5740\u662f\u4e00\u6837\u7684\uff0c\u4f46\u610f\u601d\u4e0d\u4e00\u6837\uff0ca\u662f\u6570\u7ec4\u9996\u5730\u5740\uff0c\u4e5f\u5c31\u662fa[0]\u7684\u5730\u5740\uff0c&a\u662f\u5bf9\u8c61\uff08\u6570\u7ec4\uff09\u9996\u5730\u5740\uff0ca+1\u662f\u6570\u7ec4\u4e0b\u4e00\u5143\u7d20\u7684\u5730\u5740\uff0c\u5373a[1],&a+1\u662f\u4e0b\u4e00\u4e2a\u5bf9\u8c61\u7684\u5730\u5740\uff0c\u5373a[5].", "\n14\u3001\u8bf7\u95ee\u4ee5\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1a", "\nint  main()", "\n{", "\nchar a;", "\nchar *str=&a;", "\nstrcpy(str,\"hello\");", "\nprintf(str);", "\nreturn 0;", "\n}", "\n\u6ca1\u6709\u4e3astr\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff0c\u5c06\u4f1a\u53d1\u751f\u5f02\u5e38", "\n\u95ee\u9898\u51fa\u5728\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u590d\u5236\u8fdb\u4e00\u4e2a\u5b57\u7b26\u53d8\u91cf\u6307\u9488\u6240\u6307\u5730\u5740\u3002\u867d\u7136\u53ef\u4ee5\u6b63\u786e\u8f93\u51fa\u7ed3\u679c\uff0c\u4f46\u56e0\u4e3a\u8d8a\u754c\u8fdb\u884c\u5185\u5728\u8bfb\u5199\u800c\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\u3002", "\nchar* s=\"AAA\";", "\nprintf(\"%s\",s);", "\ns[0]='B';", "\nprintf(\"%s\",s);", "\n\u6709\u4ec0\u4e48\u9519\uff1f", "\n\"AAA\"\u662f\u5b57\u7b26\u4e32\u5e38\u91cf\u3002s\u662f\u6307\u9488\uff0c\u6307\u5411\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5e38\u91cf\uff0c\u6240\u4ee5\u58f0\u660es\u7684\u65f6\u5019\u5c31\u6709\u95ee\u9898\u3002", "\ncosnt char* s=\"AAA\";", "\n\u7136\u540e\u53c8\u56e0\u4e3a\u662f\u5e38\u91cf\uff0c\u6240\u4ee5\u5bf9\u662fs[0]\u7684\u8d4b\u503c\u64cd\u4f5c\u662f\u4e0d\u5408\u6cd5\u7684\u3002", "15\u3001\u6709\u4ee5\u4e0b\u8868\u8fbe\u5f0f\uff1a", "\nint a=248; b=4;int const c=21;const int *d=&a;", "\nint *const e=&b;int const *f const =&a;", "\n\u8bf7\u95ee\u4e0b\u5217\u8868\u8fbe\u5f0f\u54ea\u4e9b\u4f1a\u88ab\u7f16\u8bd1\u5668\u7981\u6b62\uff1f\u4e3a\u4ec0\u4e48\uff1f", "\n*c=32;d=&b;*d=43;e=34;e=&a;f=0x321f;", "\n*c \u8fd9\u662f\u4e2a\u4ec0\u4e48\u4e1c\u4e1c\uff0c\u7981\u6b62", "\n*d \u8bf4\u4e86\u662fconst\uff0c \u7981\u6b62", "\ne = &a \u8bf4\u4e86\u662fconst \u7981\u6b62", "\nconst *f const =&a; \u7981\u6b62", "16\u3001\u4ea4\u6362\u4e24\u4e2a\u53d8\u91cf\u7684\u503c\uff0c\u4e0d\u4f7f\u7528\u7b2c\u4e09\u4e2a\u53d8\u91cf\u3002", "\n\u5373a=3,b=5,\u4ea4\u6362\u4e4b\u540ea=5,b=3;", "\n\u6709\u4e24\u79cd\u89e3\u6cd5, \u4e00\u79cd\u7528\u7b97\u672f\u7b97\u6cd5, \u4e00\u79cd\u7528^(\u5f02\u6216)", "\na = a + b;", "\nb = a - b;", "\na = a - b;", "\nor", "\na = a^b;// \u53ea\u80fd\u5bf9int,char..", "\nb = a^b;", "\na = a^b;", "\nor", "\na ^= b ^= a;", "\n17\u3001\u4e0b\u9762\u7684\u7a0b\u5e8f\u4f1a\u51fa\u73b0\u4ec0\u4e48\u7ed3\u679c", "\n.#include ", "18\u3001\u4e0b\u9762\u7684\u8bed\u53e5\u4f1a\u51fa\u73b0\u4ec0\u4e48\u7ed3\u679c\uff1f", "\nchar szstr[10];", "\n   strcpy(szstr,\u201d0123456789\u2033);", "\n\u7b54\u6848\uff1a\u957f\u5ea6\u4e0d\u4e00\u6837\uff0c\u4f1a\u9020\u6210\u975e\u6cd5\u7684OS\uff0c\u5e94\u8be5\u6539\u4e3achar szstr[11]\uff1b", "19\u3001(void *)ptr \u548c (*(void**))ptr\u7684\u7ed3\u679c\u662f\u5426\u76f8\u540c\uff1f", "\n\u7b54\uff1a\u5176\u4e2dptr\u4e3a\u540c\u4e00\u4e2a\u6307\u9488", "\n.(void *)ptr \u548c (*(void**))ptr\u503c\u662f\u76f8\u540c\u7684", "20\u3001\u95ee\u51fd\u6570\u65e2\u7136\u4e0d\u4f1a\u88ab\u5176\u5b83\u51fd\u6570\u8c03\u7528\uff0c\u4e3a\u4ec0\u4e48\u8981\u8fd4\u56de1\uff1f", "\nint main()", "\n   {", "\n    int x=3;", "\n    printf(\u201c%d\u201d,x);", "\n    return 1;", "\n    }", "\n\u7b54\uff1amian\u4e2d\uff0cc\u6807\u51c6\u8ba4\u4e3a0\u8868\u793a\u6210\u529f\uff0c\u975e0\u8868\u793a\u9519\u8bef\u3002\u5177\u4f53\u7684\u503c\u662f\u67d0\u4e2d\u5177\u4f53\u51fa\u9519\u4fe1\u606f", "21\u3001\u5bf9\u7edd\u5bf9\u5730\u57400\u00d7100000\u8d4b\u503c\u4e14\u60f3\u8ba9\u7a0b\u5e8f\u8df3\u8f6c\u5230\u7edd\u5bf9\u5730\u5740\u662f0\u00d7100000\u53bb\u6267\u884c", "\n(unsigned int*)0\u00d7100000 = 1234;", "\n\u9996\u5148\u8981\u5c060\u00d7100000\u5f3a\u5236\u8f6c\u6362\u6210\u51fd\u6570\u6307\u9488,\u5373:", "\n(void (*)())0\u00d7100000", "\n\u7136\u540e\u518d\u8c03\u7528\u5b83:", "\n*((void (*)())0\u00d7100000)();", "\n\u7528typedef\u53ef\u4ee5\u770b\u5f97\u66f4\u76f4\u89c2\u4e9b:", "\ntypedef void(*)() voidFuncPtr;", "\n*((voidFuncPtr)0\u00d7100000)();", "22\u3001\u8f93\u51fa\u591a\u5c11\uff1f\u5e76\u5206\u6790\u8fc7\u7a0b", "\nunsigned short A = 10;", "\nprintf(\u201c~A = %u\\n\u201d, ~A);", "char c=128;", "\nprintf(\u201cc=%d\\n\u201d,c);", "\n    \u7b2c\u4e00\u9898\uff0c\uff5eA \uff1d0xfffffff5,int\u503c \u4e3a\uff0d11\uff0c\u4f46\u8f93\u51fa\u7684\u662fuint\u3002\u6240\u4ee5\u8f93\u51fa4294967285", "\n\u7b2c\u4e8c\u9898\uff0cc\uff1d0\u00d710,\u8f93\u51fa\u7684\u662fint\uff0c\u6700\u9ad8\u4f4d\u4e3a1\uff0c\u662f\u8d1f\u6570\uff0c\u6240\u4ee5\u5b83\u7684\u503c\u5c31\u662f0\u00d700\u7684\u8865\u7801\u5c31\u662f128\uff0c\u6240\u4ee5\u8f93\u51fa\uff0d128\u3002", "\n\u8fd9\u4e24\u9053\u9898\u90fd\u662f\u5728\u8003\u5bdf\u4e8c\u8fdb\u5236\u5411int\u6216uint\u8f6c\u6362\u65f6\u7684\u6700\u9ad8\u4f4d\u5904\u7406\u3002", "23\u3001\u5206\u6790\u4e0b\u9762\u7684\u7a0b\u5e8f\uff1a", "\nvoid GetMemory(char **p,int num)", "\n{", "\n    *p=(char *)malloc(num);", "\n}", "\nint main()", "\n{", "\n    char *str=NULL;", "\n    GetMemory(&str,100);", "\n    strcpy(str,\u201dhello\u201d);", "\n    free(str);", "\n    if(str!=NULL)", "\n    {", "\n        strcpy(str,\u201dworld\u201d);", "\n    }", "\n    printf(\u201c\\n str is %s\u201d,str);", "\n    getchar();", "\n}", "\n\u95ee\u8f93\u51fa\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f\u5e0c\u671b\u5927\u5bb6\u80fd\u8bf4\u8bf4\u539f\u56e0\uff0c\u5148\u8c22\u8c22\u4e86", "\n\u8f93\u51fastr is world\u3002", "\nfree \u53ea\u662f\u91ca\u653e\u7684str\u6307\u5411\u7684\u5185\u5b58\u7a7a\u95f4,\u5b83\u672c\u8eab\u7684\u503c\u8fd8\u662f\u5b58\u5728\u7684.", "\n\u6240\u4ee5free\u4e4b\u540e\uff0c\u6709\u4e00\u4e2a\u597d\u7684\u4e60\u60ef\u5c31\u662f\u5c06str=NULL.", "\n\u6b64\u65f6str\u6307\u5411\u7a7a\u95f4\u7684\u5185\u5b58\u5df2\u88ab\u56de\u6536,\u5982\u679c\u8f93\u51fa\u8bed\u53e5\u4e4b\u524d\u8fd8\u5b58\u5728\u5206\u914d\u7a7a\u95f4\u7684\u64cd\u4f5c\u7684\u8bdd,\u8fd9\u6bb5\u5b58\u50a8\u7a7a\u95f4\u662f\u53ef\u80fd\u88ab\u91cd\u65b0\u5206\u914d\u7ed9\u5176\u4ed6\u53d8\u91cf\u7684,", "\n\u5c3d\u7ba1\u8fd9\u6bb5\u7a0b\u5e8f\u786e\u5b9e\u662f\u5b58\u5728\u5927\u5927\u7684\u95ee\u9898\uff08\u4e0a\u9762\u5404\u4f4d\u5df2\u7ecf\u8bf4\u5f97\u5f88\u6e05\u695a\u4e86\uff09\uff0c\u4f46\u662f\u901a\u5e38\u4f1a\u6253\u5370\u51faworld\u6765\u3002", "\n\u8fd9\u662f\u56e0\u4e3a\uff0c\u8fdb\u7a0b\u4e2d\u7684\u5185\u5b58\u7ba1\u7406\u4e00\u822c\u4e0d\u662f\u7531\u64cd\u4f5c\u7cfb\u7edf\u5b8c\u6210\u7684\uff0c\u800c\u662f\u7531\u5e93\u51fd\u6570\u81ea\u5df1\u5b8c\u6210\u7684\u3002", "\n\u5f53\u4f60malloc\u4e00\u5757\u5185\u5b58\u7684\u65f6\u5019\uff0c\u7ba1\u7406\u5e93\u5411\u64cd\u4f5c\u7cfb\u7edf\u7533\u8bf7\u4e00\u5757\u7a7a\u95f4\uff08\u53ef\u80fd\u4f1a\u6bd4\u4f60\u7533\u8bf7\u7684\u5927\u4e00\u4e9b\uff09\uff0c\u7136\u540e\u5728\u8fd9\u5757\u7a7a\u95f4\u4e2d\u8bb0\u5f55\u4e00\u4e9b\u7ba1\u7406\u4fe1\u606f\uff08\u4e00\u822c\u662f\u5728\u4f60\u7533\u8bf7\u7684\u5185\u5b58\u524d\u9762\u4e00\u70b9\uff09\uff0c\u5e76\u5c06\u53ef\u7528\u5185\u5b58\u7684\u5730\u5740\u8fd4\u56de\u3002\u4f46\u662f\u91ca\u653e\u5185\u5b58\u7684\u65f6\u5019\uff0c\u7ba1\u7406\u5e93\u901a\u5e38\u90fd\u4e0d\u4f1a\u5c06\u5185\u5b58\u8fd8\u7ed9\u64cd\u4f5c\u7cfb\u7edf\uff0c\u56e0\u6b64\u4f60\u662f\u53ef\u4ee5\u7ee7\u7eed\u8bbf\u95ee\u8fd9\u5757\u5730\u5740\u7684\uff0c\u53ea\u4e0d\u8fc7\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u697c\u4e0a\u90fd\u8bf4\u8fc7\u4e86\uff0c\u6700\u597d\u522b\u8fd9\u4e48\u5e72\u3002", "\n24\u3001char a[10],strlen(a)\u4e3a\u4ec0\u4e48\u7b49\u4e8e15\uff1f\u8fd0\u884c\u7684\u7ed3\u679c", "\n#include \u201cstdio.h\u201d", "\n#include \u201cstring.h\u201d", "void main()", "\n{", "\nchar aa[10];", "\nprintf(\u201c%d\u201d,strlen(aa));", "\n}", "sizeof()\u548c\u521d\u4e0d\u521d\u59cb\u5316\uff0c\u6ca1\u6709\u5173\u7cfb\uff1b", "\nstrlen()\u548c\u521d\u59cb\u5316\u6709\u5173\u3002", "char (*str)[20];/*str\u662f\u4e00\u4e2a\u6570\u7ec4\u6307\u9488\uff0c\u5373\u6307\u5411\u6570\u7ec4\u7684\u6307\u9488\uff0e*/", "\nchar *str[20];/*str\u662f\u4e00\u4e2a\u6307\u9488\u6570\u7ec4\uff0c\u5176\u5143\u7d20\u4e3a\u6307\u9488\u578b\u6570\u636e\uff0e*/", "25\u3001long a=0\u00d7801010;a+5=?", "\n\u7b54\uff1a0\u00d7801010\u7528\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a\uff1a\u201c1000 0000 0001 0000 0001 0000\u201d\uff0c\u5341\u8fdb\u5236\u7684\u503c\u4e3a8392720\uff0c\u518d\u52a0\u4e0a5\u5c31\u662f8392725", "26\u3001\u7ed9\u5b9a\u7ed3\u6784struct A", "\n{", "\n       char t:\uff1a4;", "\n       char k:4;", "\n       unsigned short i:8;", "\n       unsigned long m;", "\n};\u95eesizeof(A) = ?", "\n\u7ed9\u5b9a\u7ed3\u6784struct A", "\n{", "\n       char t:4; 4\u4f4d", "\n       char k:4; 4\u4f4d", "\n       unsigned short i:8; 8\u4f4d", "\n       unsigned long m; // \u504f\u79fb2\u5b57\u8282\u4fdd\u8bc14\u5b57\u8282\u5bf9\u9f50", "\n}; // \u51718\u5b57\u8282", "27\u3001\u4e0b\u9762\u7684\u51fd\u6570\u5b9e\u73b0\u5728\u4e00\u4e2a\u6570\u4e0a\u52a0\u4e00\u4e2a\u6570\uff0c\u6709\u4ec0\u4e48\u9519\u8bef\uff1f\u8bf7\u6539\u6b63\u3002", "\nint add_n ( int n )", "\n{", "\n    static int i = 100;", "\n    i += n;", "\n    return i;", "\n}", "\n\u5f53\u4f60\u7b2c\u4e8c\u6b21\u8c03\u7528\u65f6\u5f97\u4e0d\u5230\u6b63\u786e\u7684\u7ed3\u679c\uff0c\u96be\u9053\u4f60\u5199\u4e2a\u51fd\u6570\u5c31\u662f\u4e3a\u4e86\u8c03\u7528\u4e00\u6b21\uff1f\u95ee\u9898\u5c31\u51fa\u5728 static\u4e0a", "\n28\u3001\u7ed9\u51fa\u4e0b\u9762\u7a0b\u5e8f\u7684\u7b54\u6848", "\n#include", "29\u3001\u6c42\u51fd\u6570\u8fd4\u56de\u503c\uff0c\u8f93\u5165x=9999;", "\nint func \uff08 x \uff09", "\n{", "\n    int countx = 0;", "\n    while ( x )", "\n    {", "\n        countx ++;", "\n        x = x&(x-1);", "\n    }", "\n    return countx;", "\n}", "\n\u7ed3\u679c\u5462\uff1f", "\n\u77e5\u9053\u4e86\u8fd9\u662f\u7edf\u8ba19999\u7684\u4e8c\u8fdb\u5236\u6570\u503c\u4e2d\u6709\u591a\u5c11\u4e2a1\u7684\u51fd\u6570\uff0c\u4e14\u6709", "\n9999\uff1d9\u00d71024\uff0b512\uff0b256\uff0b15", "9\u00d71024\u4e2d\u542b\u67091\u7684\u4e2a\u6570\u4e3a2\uff1b", "\n512\u4e2d\u542b\u67091\u7684\u4e2a\u6570\u4e3a1\uff1b", "\n256\u4e2d\u542b\u67091\u7684\u4e2a\u6570\u4e3a1\uff1b", "\n15\u4e2d\u542b\u67091\u7684\u4e2a\u6570\u4e3a4\uff1b", "\n\u6545\u5171\u67091\u7684\u4e2a\u6570\u4e3a8\uff0c\u7ed3\u679c\u4e3a8\u3002", "\n1000 - 1 = 0111\uff0c\u6b63\u597d\u662f\u539f\u6570\u53d6\u53cd\u3002\u8fd9\u5c31\u662f\u539f\u7406\u3002", "\n\u7528\u8fd9\u79cd\u65b9\u6cd5\u6765\u6c421\u7684\u4e2a\u6570\u662f\u5f88\u6548\u7387\u5f88\u9ad8\u7684\u3002", "\n\u4e0d\u5fc5\u53bb\u4e00\u4e2a\u4e00\u4e2a\u5730\u79fb\u4f4d\u3002\u5faa\u73af\u6b21\u6570\u6700\u5c11\u3002", "30\u3001\u5206\u6790\uff1a", "\nstruct bit", "\n{   int a:3;", "\n    int  b:2;", "\n    int c:3;", "\n};", "\nint main()", "\n{", "\n  bit s;", "\n  char *c=(char*)&s;", "\n   cout\n  *c=0x99;", "\n   cout \n     int a=-1;", "\n   printf(\"%x\",a);", "\n  return 0;", "\n}", "\n\u8f93\u51fa\u4e3a\u4ec0\u4e48\u662f", "\n4", "\n1", "\n-1", "\n-4", "\nffffffff", "\n\u56e0\u4e3a0x99\u5728\u5185\u5b58\u4e2d\u8868\u793a\u4e3a 100 11 001 , a = 001, b = 11, c = 100", "\n\u5f53c\u4e3a\u6709\u7b26\u5408\u6570\u65f6, c = 100, \u6700\u9ad81\u4e3a\u8868\u793ac\u4e3a\u8d1f\u6570\uff0c\u8d1f\u6570\u5728\u8ba1\u7b97\u673a\u7528\u8865\u7801\u8868\u793a\uff0c\u6240\u4ee5c = -4;\u540c\u7406", "\nb = -1;", "\n\u5f53c\u4e3a\u6709\u7b26\u5408\u6570\u65f6, c = 100,\u5373 c = 4,\u540c\u7406 b = 3", "31\u3001\u4e0b\u9762\u8fd9\u4e2a\u7a0b\u5e8f\u6267\u884c\u540e\u4f1a\u6709\u4ec0\u4e48\u9519\u8bef\u6216\u8005\u6548\u679c:", "\n #define MAX 255", "\n int main()", "\n{", "\n   unsigned char A[MAX],i;//i\u88ab\u5b9a\u4e49\u4e3aunsigned char", "\n   for (i=0;i\n      A[i]=i;", "\n}", "\n\u89e3\u7b54\uff1a\u6b7b\u5faa\u73af\u52a0\u6570\u7ec4\u8d8a\u754c\u8bbf\u95ee\uff08C/C++\u4e0d\u8fdb\u884c\u6570\u7ec4\u8d8a\u754c\u68c0\u67e5\uff09", "\nMAX=255", "\n\u6570\u7ec4A\u7684\u4e0b\u6807\u8303\u56f4\u4e3a:0..MAX-1,\u8fd9\u662f\u5176\u4e00..", "\n\u5176\u4e8c.\u5f53i\u5faa\u73af\u5230255\u65f6,\u5faa\u73af\u5185\u6267\u884c:", "\n  A[255]=255;", "\n\u8fd9\u53e5\u672c\u8eab\u6ca1\u6709\u95ee\u9898..\u4f46\u662f\u8fd4\u56defor (i=0;i\n\u7531\u4e8eunsigned char\u7684\u53d6\u503c\u8303\u56f4\u5728(0..255),i++\u4ee5\u540ei\u53c8\u4e3a0\u4e86..\u65e0\u9650\u5faa\u73af\u4e0b\u53bb.", "32\u3001\u5199\u51fasizeof(struct name1)=,sizeof(struct name2)=\u7684\u7ed3\u679c", "\nstruct name1{", "\n   char  str;", "\n   short x;", "\n   int   num;", "\n}", "struct name2{", "\n   char str;", "\n   int num;", "\n   short x;", "\n}", "sizeof(struct name1)=8,sizeof(struct name2)=12", "\n\u5728\u7b2c\u4e8c\u4e2a\u7ed3\u6784\u4e2d\uff0c\u4e3a\u4fdd\u8bc1num\u6309\u56db\u4e2a\u5b57\u8282\u5bf9\u9f50\uff0cchar\u540e\u5fc5\u987b\u7559\u51fa3\u5b57\u8282\u7684\u7a7a\u95f4\uff1b\u540c\u65f6\u4e3a\u4fdd\u8bc1\u6574\u4e2a\u7ed3\u6784\u7684\u81ea\u7136\u5bf9\u9f50\uff08\u8fd9\u91cc\u662f4\u5b57\u8282\u5bf9\u9f50\uff09\uff0c\u5728x\u540e\u8fd8\u8981\u8865\u9f502\u4e2a\u5b57\u8282\uff0c\u8fd9\u6837\u5c31\u662f12\u5b57\u8282\u3002", "33\u3001struct s1", "\n{", "\n  int i: 8;", "\n  int j: 4;", "\n  int a: 3;", "\n  double b;", "\n};", "struct s2", "\n{", "\n  int i: 8;", "\n  int j: 4;", "\n  double b;", "\n  int a:3;", "\n};", "printf(\"sizeof(s1)= %d\\n\", sizeof(s1));", "\nprintf(\"sizeof(s2)= %d\\n\", sizeof(s2));", "\nresult: 16, 24", "\n\u7b2c\u4e00\u4e2astruct s1", "\n{", "\n  int i: 8;", "\n  int j: 4;", "\n  int a: 3;", "\n  double b;", "\n};", "\n\u7406\u8bba\u4e0a\u662f\u8fd9\u6837\u7684\uff0c\u9996\u5148\u662fi\u5728\u76f8\u5bf90\u7684\u4f4d\u7f6e\uff0c\u53608\u4f4d\u4e00\u4e2a\u5b57\u8282\uff0c\u7136\u540e\uff0cj\u5c31\u5728\u76f8\u5bf9\u4e00\u4e2a\u5b57\u8282\u7684\u4f4d\u7f6e\uff0c\u7531\u4e8e\u4e00\u4e2a\u4f4d\u7f6e\u7684\u5b57\u8282\u6570\u662f4\u4f4d\u7684\u500d\u6570\uff0c\u56e0\u6b64\u4e0d\u7528\u5bf9\u9f50\uff0c\u5c31\u653e\u5728\u90a3\u91cc\u4e86\uff0c\u7136\u540e\u662fa\uff0c\u8981\u57283\u4f4d\u7684\u500d\u6570\u5173\u7cfb\u7684\u4f4d\u7f6e\u4e0a\uff0c\u56e0\u6b64\u8981\u79fb\u4e00\u4f4d\uff0c\u572815\u4f4d\u7684\u4f4d\u7f6e\u4e0a\u653e\u4e0b\uff0c\u76ee\u524d\u603b\u5171\u662f18\u4f4d\uff0c\u6298\u7b97\u8fc7\u6765\u662f2\u5b57\u82822\u4f4d\u7684\u6837\u5b50\uff0c\u7531\u4e8edouble\u662f8\u5b57\u8282\u7684\uff0c\u56e0\u6b64\u8981\u5728\u76f8\u5bf90\u8981\u662f8\u4e2a\u5b57\u8282\u7684\u4f4d\u7f6e\u4e0a\u653e\u4e0b\uff0c\u56e0\u6b64\u4ece18\u4f4d\u5f00\u59cb\u52308\u4e2a\u5b57\u8282\u4e4b\u95f4\u7684\u4f4d\u7f6e\u88ab\u5ffd\u7565\uff0c\u76f4\u63a5\u653e\u57288\u5b57\u8282\u7684\u4f4d\u7f6e\u4e86\uff0c\u56e0\u6b64\uff0c\u603b\u5171\u662f16\u5b57\u8282\u3002", "\n\u7b2c\u4e8c\u4e2a\u6700\u540e\u4f1a\u5bf9\u7167\u662f\u4e0d\u662f\u7ed3\u6784\u4f53\u5185\u6700\u5927\u6570\u636e\u7684\u500d\u6570\uff0c\u4e0d\u662f\u7684\u8bdd\uff0c\u4f1a\u8865\u6210\u662f\u6700\u5927\u6570\u636e\u7684\u500d\u6570", "34\u3001\u5728\u5bf9\u9f50\u4e3a4\u7684\u60c5\u51b5\u4e0b", "\nstruct BBB", "\n{", "\n   long num\uff1b", "\n   char *name;", "\n   short int data;", "\n   char ha;", "\n   short ba[5];", "\n}*p;", "\np=0x1000000;", "\np+0x200=____;", "\n(Ulong)p+0x200=____;", "\n(char*)p+0x200=____;", "\n\u5e0c\u671b\u5404\u4f4d\u8fbe\u4eba\u7ed9\u51fa\u7b54\u6848\u548c\u539f\u56e0\uff0c\u8c22\u8c22\u62c9", "\n\u89e3\u7b54\uff1a\u5047\u8bbe\u572832\u4f4dCPU\u4e0a\uff0c", "\nsizeof(long) = 4 bytes", "\nsizeof(char *) = 4 bytes", "\nsizeof(short int) = sizeof(short) = 2 bytes", "\nsizeof(char) = 1 bytes", "\u7531\u4e8e\u662f4\u5b57\u8282\u5bf9\u9f50\uff0c", "\nsizeof(struct BBB) = sizeof(*p)", "\n= 4 + 4 + 2 + 1 + 1/*\u8865\u9f50*/ + 2*5 + 2/*\u8865\u9f50*/ = 24 bytes  (\u7ecfDev-C++\u9a8c\u8bc1)", "p=0x1000000;", "\np+0x200=____;", "\n    = 0x1000000 + 0x200*24", "(Ulong)p+0x200=____;", "\n    = 0x1000000 + 0x200", "(char*)p+0x200=____;", "\n    = 0x1000000 + 0x200*4", "35\u3001\u627e\u9519", "\nVoid test1()", "\n{", "\nchar string[10];", "\nchar* str1=\"0123456789\";", "\nstrcpy(string, str1);// \u6ea2\u51fa\uff0c\u5e94\u8be5\u5305\u62ec\u4e00\u4e2a\u5b58\u653e'\\0'\u7684\u5b57\u7b26string[11]", "\n}", "Void test2()", "\n{", "\nchar string[10], str1[10];", "\nfor(I=0; I\n{", "\nstr1[i] ='a';", "\n}", "\nstrcpy(string, str1);// I\uff0ci\u6ca1\u6709\u58f0\u660e\u3002", "\n}", "Void test3(char* str1)", "\n{", "\nchar string[10];", "\nif(strlen(str1)\n{", "\nstrcpy(string, str1);", "\n}", "\n}", "36\u3001\u5199\u51fa\u8f93\u51fa\u7ed3\u679c", "\nvoid g(int**);", "\nint main()", "\n{", "\nint line[10],i;", "\nint *p=line; //p\u662f\u5730\u5740\u7684\u5730\u5740", "\nfor (i=0;i\n{", "\n*p=i;", "\ng(&p);//\u6570\u7ec4\u5bf9\u5e94\u7684\u503c\u52a01", "\n}", "\nfor(i=0;i\nprintf(\"%d\\n\",line[i]);", "\nreturn 0;", "\n}", "void g(int**p)", "\n{", "\n(**p)++;", "\n(*p)++;// \u65e0\u6548", "\n}", "\n\u8f93\u51fa\uff1a", "\n1", "\n2", "\n3", "\n4", "\n5", "\n6", "\n7", "\n8", "\n9", "\n10", "37\u3001\u5199\u51fa\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u679c", "\nint sum(int a)", "\n{", "\nauto int c=0;", "\nstatic int b=3;", "\nc+=1;", "\nb+=2;", "\nreturn(a+b+c);", "\n}", "void main()", "\n{", "\nint I;", "\nint a=2;", "\nfor(I=0;I\n{", "\nprintf(\"%d,\", sum(a));", "\n}", "\n}", "\n// static\u4f1a\u4fdd\u5b58\u4e0a\u6b21\u7ed3\u679c\uff0c\u8bb0\u4f4f\u8fd9\u4e00\u70b9\uff0c\u5269\u4e0b\u7684\u81ea\u5df1\u5199", "\n\u8f93\u51fa\uff1a8,10,12,14,16,", "38\u3001\u8bc4\u4ef7\u4ee3\u7801", "\nint func(int a)", "\n{", "\nint b;", "\nswitch(a)", "\n{", "\ncase 1: 30;", "\ncase 2: 20;", "\ncase 3: 16;", "\ndefault: 0", "\n}", "\nreturn b;", "\n}", "\n\u5219func(1)=?", "\n// b\u5b9a\u4e49\u540e\u5c31\u6ca1\u6709\u8d4b\u503c", "int a[3];", "\na[0]=0; a[1]=1; a[2]=2;", "\nint *p, *q;", "\np=a;", "\nq=&a[2];", "\n\u5219a[q-p]=a[2]", "\n\u89e3\u91ca\uff1a\u6307\u9488\u4e00\u6b21\u79fb\u52a8\u4e00\u4e2aint\u4f46\u8ba1\u6570\u4e3a1", "39\u3001\u8bf7\u95ee\u4e00\u4e0b\u7a0b\u5e8f\u5c06\u8f93\u51fa\u4ec0\u4e48\u7ed3\u679c\uff1f", "\nchar *RetMenory(void)", "\n{", "\n       char p[] = \u201chellow world\u201d;", "\n       return p;", "\n}", "\nvoid Test(void)", "\n{", "\n       char *str = NULL;", "\n       str = RetMemory();", "\n       printf(str);", "\n}", "\nRetMenory\u6267\u884c\u5b8c\u6bd5\uff0cp\u8d44\u6e90\u88ab\u56de\u6536\uff0c\u6307\u5411\u672a\u77e5\u5730\u5740\u3002\u8fd4\u56de\u5730\u5740\uff0cstr\u7684\u5185\u5bb9\u5e94\u662f\u4e0d\u53ef\u9884\u6d4b\u7684, \u6253\u5370\u7684\u5e94\u8be5\u662fstr\u7684\u5730\u5740", "40\u3001\u5199\u51fa\u8f93\u51fa\u7ed3\u679c", "\ntypedef struct", "\n  {", "\n     int a:2;", "\n     int b:2;", "\n     int c:1;", "\n  }test;", "  test t;", "\n  t.a = 1;", "\n  t.b = 3;", "\n  t.c = 1;", "  printf(\"%d\",t.a);", "\n  printf(\"%d\",t.b);", "\n  printf(\"%d\",t.c);", "t.a\u4e3a01,\u8f93\u51fa\u5c31\u662f1", "\nt.b\u4e3a11\uff0c\u8f93\u51fa\u5c31\u662f\uff0d1", "\nt.c\u4e3a1\uff0c\u8f93\u51fa\u4e5f\u662f-1", "\n3\u4e2a\u90fd\u662f\u6709\u7b26\u53f7\u6570int\u561b\u3002", "\n\u8fd9\u662f\u4f4d\u6269\u5c55\u95ee\u9898", "\n01", "\n11", "\n1", "\n\u7f16\u8bd1\u5668\u8fdb\u884c\u7b26\u53f7\u6269\u5c55", "41\u3001\u5bf9\u4e0b\u9762\u7a0b\u5e8f\u8fdb\u884c\u5206\u6790", "\nvoid test2()", "\n{", "\n   char string[10], str1[10];", "\n   int i;", "\n   for(i=0; i\n   {", "\n      str1[i] = 'a';", "\n   }", "\n   strcpy( string, str1 );", "\n}", "\n\u89e3\u7b54\uff1a\u5982\u679c\u9762\u8bd5\u8005\u6307\u51fa\u5b57\u7b26\u6570\u7ec4str1\u4e0d\u80fd\u5728\u6570\u7ec4\u5185\u7ed3\u675f\u53ef\u4ee5\u7ed93\u5206\uff1b\u5982\u679c\u9762\u8bd5\u8005\u6307\u51fastrcpy(string, str1)\u8c03\u7528\u4f7f\u5f97\u4ecestr1\u5185\u5b58\u8d77\u590d\u5236\u5230string\u5185\u5b58\u8d77\u6240\u590d\u5236\u7684\u5b57\u8282\u6570\u5177\u6709\u4e0d\u786e\u5b9a\u6027\u53ef\u4ee5\u7ed97\u5206\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u6307\u51fa\u5e93\u51fd\u6570strcpy\u5de5\u4f5c\u65b9\u5f0f\u7684\u7ed910\u5206\uff1b", "\nstr1\u4e0d\u80fd\u5728\u6570\u7ec4\u5185\u7ed3\u675f:\u56e0\u4e3astr1\u7684\u5b58\u50a8\u4e3a\uff1a{a,a,a,a,a,a,a,a,a,a},\u6ca1\u6709'\\0'(\u5b57\u7b26\u4e32\u7ed3\u675f\u7b26)\uff0c\u6240\u4ee5\u4e0d\u80fd\u7ed3\u675f", "\nstrcpy( char *s1,char *s2)\u4ed6\u7684\u5de5\u4f5c\u539f\u7406\u662f\uff0c\u626b\u63cfs2\u6307\u5411\u7684\u5185\u5b58\uff0c\u9010\u4e2a\u5b57\u7b26\u4ed8\u5230s1\u6240\u6307\u5411\u7684\u5185\u5b58\uff0c\u76f4\u5230\u78b0\u5230'\\0',\u56e0\u4e3astr1\u7ed3\u5c3e\u6ca1\u6709'\\0'\uff0c\u6240\u4ee5\u5177\u6709\u4e0d\u786e\u5b9a\u6027\uff0c\u4e0d\u77e5\u9053\u4ed6\u540e\u9762\u8fd8\u4f1a\u4ed8\u4ec0\u4e48\u4e1c\u4e1c\u3002", "\n\u6b63\u786e\u5e94\u5982\u4e0b", "\nvoid test2()", "\n{", "\n   char string[10], str1[10];", "\n   int i;", "\n   for(i=0; i\n   {", "\n      str1[i] = 'a'+i; //\u628aabcdefghi\u8d4b\u503c\u7ed9\u5b57\u7b26\u6570\u7ec4", "\n   }", "\n   str[i]='\\0';//\u52a0\u4e0a\u7ed3\u675f\u7b26", "\n   strcpy( string, str1 );", "\n}", "42\u3001\u5206\u6790\uff1a", "\nint arr[] = {6,7,8,9,10};", "\nint *ptr = arr;", "\n*(ptr++)+=123;", "\nprintf(\u201c %d %d \u201d, *ptr, *(++ptr));", "\n\u8f93\u51fa\uff1a8 8", "\n\u8fc7\u7a0b\uff1a\u5bf9\u4e8e*(ptr++)+=123;\u5148\u505a\u52a0\u6cd56+123\uff0c\u7136\u540e++\uff0c\u6307\u9488\u6307\u54117\uff1b\u5bf9\u4e8eprintf(\u201c %d %d \u201d, *ptr, *(++ptr));\u4ece\u540e\u5f80\u524d\u6267\u884c\uff0c\u6307\u9488\u5148++\uff0c\u6307\u54118\uff0c\u7136\u540e\u8f93\u51fa8\uff0c\u7d27\u63a5\u7740\u518d\u8f93\u51fa8", "43\u3001\u5206\u6790\u4e0b\u9762\u7684\u4ee3\u7801\uff1a", "\nchar *a = \"hello\";", "\nchar *b = \"hello\";", "\nif(a= =b)", "\nprintf(\"YES\");", "\nelse", "\nprintf(\"NO\");", "\n\u8fd9\u4e2a\u7b80\u5355\u7684\u9762\u8bd5\u9898\u76ee,\u6211\u9009\u8f93\u51fa no(\u5bf9\u6bd4\u7684\u5e94\u8be5\u662f\u6307\u9488\u5730\u5740\u5427),\u53ef\u5728VC\u662fYES \u5728C\u662fNO", "\nlz\u7684\u5462\uff0c\u662f\u4e00\u4e2a\u5e38\u91cf\u5b57\u7b26\u4e32\u3002\u4f4d\u4e8e\u9759\u6001\u5b58\u50a8\u533a\uff0c\u5b83\u5728\u7a0b\u5e8f\u751f\u547d\u671f\u5185\u6052\u5b9a\u4e0d\u53d8\u3002\u5982\u679c\u7f16\u8bd1\u5668\u4f18\u5316\u7684\u8bdd\uff0c\u4f1a\u6709\u53ef\u80fda\u548cb\u540c\u65f6\u6307\u5411\u540c\u4e00\u4e2ahello\u7684\u3002\u5219\u5730\u5740\u76f8\u540c\u3002\u5982\u679c\u7f16\u8bd1\u5668\u6ca1\u6709\u4f18\u5316\uff0c\u90a3\u4e48\u5c31\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u5730\u5740\uff0c\u5219\u4e0d\u540c", "44\u3001\u5199\u51fa\u8f93\u51fa\u7ed3\u679c", "\n#include ", "int main()", "\n{", "\n    int b = 3;", "\n    foo(b+=3, ++b);", "\n    printf(\u201cb=%d\\n\u201d, b);", "\nreturn 0;", "\n}", "\n\u8f93\u51fa\uff1am=7,n=4,b=7(VC6.0)", "\n\u8fd9\u79cd\u65b9\u5f0f\u548c\u7f16\u8bd1\u5668\u4e2d\u5f97\u51fd\u6570\u8c03\u7528\u5173\u7cfb\u76f8\u5173\u5373\u5148\u540e\u5165\u6808\u987a\u5e8f\u3002\u4e0d\u8fc7\u4e0d\u540c", "\n\u7f16\u8bd1\u5668\u5f97\u5904\u7406\u4e0d\u540c\u3002\u4e5f\u662f\u56e0\u4e3aC\u6807\u51c6\u4e2d\u5bf9\u8fd9\u79cd\u65b9\u5f0f\u8bf4\u660e\u4e3a\u672a\u5b9a\u4e49\uff0c\u6240\u4ee5", "\n\u5404\u4e2a\u7f16\u8bd1\u5668\u5382\u5546\u90fd\u6709\u81ea\u5df1\u5f97\u7406\u89e3\uff0c\u6240\u4ee5\u6700\u540e\u4ea7\u751f\u5f97\u7ed3\u679c\u5b8c\u5168\u4e0d\u540c\u3002", "\n\u56e0\u4e3a\u8fd9\u6837\uff0c\u6240\u4ee5\u9047\u89c1\u8fd9\u79cd\u51fd\u6570\uff0c\u6211\u4eec\u9996\u5148\u8981\u8003\u8651\u6211\u4eec\u5f97\u7f16\u8bd1\u5668\u4f1a\u5982\u4f55\u5904\u7406", "\n\u8fd9\u6837\u5f97\u51fd\u6570\uff0c\u5176\u6b21\u770b\u51fd\u6570\u5f97\u8c03\u7528\u65b9\u5f0f\uff0c\u4e0d\u540c\u5f97\u8c03\u7528\u65b9\u5f0f\uff0c\u53ef\u80fd\u4ea7\u751f\u4e0d\u540c\u5f97", "\n\u7ed3\u679c\u3002\u6700\u540e\u662f\u770b\u7f16\u8bd1\u5668\u4f18\u5316\u3002", "45\u3001\u627e\u51fa\u9519\u8bef", "\n#include   string.h", "\nmain(void)", "\n{   char   *src=\u201dhello,world\u201d;", "\n    char   *dest=NULL;", "\n    dest=(char   *)malloc(strlen(src));", "\n    int   len=strlen(str);", "\n    char   *d=dest;", "\n    char   *s=src[len];", "\n    while(len\u2013!=0)", "\n      d++=s\u2013;", "\n    printf(\u201c%s\u201d,dest);", "\n}", "\n\u627e\u51fa\u9519\u8bef\uff01\uff01", "\n#include   \u201cstring.h\u201d", "\n#include \u201cstdio.h\u201d", "\n#include \u201cmalloc.h\u201d", "\nmain(void)", "\n{", "\nchar   *src=\u201dhello,world\u201d;", "\n    char   *dest=NULL;", "\n    dest=(char   *)malloc(sizeof(char)*(strlen(src)+1));", "\n    int   len=strlen(src);", "\n    char   *d=dest;", "\n    char   *s=src+len-1;", "\n    while(len\u2013!=0)", "\n      *d++=*s\u2013;", "\n*d=\u2019\\0\u2032;", "\n    printf(\u201c%s\u201d,dest);", "\n}", "\u7b2c\u4e09\u90e8\u5206\uff1a\u7f16\u7a0b\u9898", "\n1\u3001\u8bfb\u6587\u4ef6file1.txt\u7684\u5185\u5bb9\uff08\u4f8b\u5982\uff09\uff1a", "\n12", "\n34", "\n56", "\n\u8f93\u51fa\u5230file2.txt\uff1a", "\n56", "\n34", "\n12", "\n#include ", "int main(void)", "\n{", "\n         int MAX = 10;", "\nint *a = (int *)malloc(MAX * sizeof(int));", "\nint *b;", "FILE *fp1;", "\nFILE *fp2;", "fp1 = fopen(\u201ca.txt\u201d,\u201dr\u201d);", "\nif(fp1 == NULL)", "\n{printf(\u201cerror1\u2033);", "\n    exit(-1);", "\n}", "    fp2 = fopen(\u201cb.txt\u201d,\u201dw\u201d);", "\nif(fp2 == NULL)", "\n{printf(\u201cerror2\u2033);", "\n    exit(-1);", "\n}", "int i = 0;", "\n    int j = 0;", "while(fscanf(fp1,\u201d%d\u201d,&a[i]) != EOF)", "\n{", "\ni++;", "\nj++;", "\nif(i >= MAX)", "\n{", "\nMAX = 2 * MAX;", "\nb = (int*)realloc(a,MAX * sizeof(int));", "\nif(b == NULL)", "\n{", "\nprintf(\u201cerror3\u2033);", "\nexit(-1);", "\n}", "\na = b;", "\n}", "\n}", "for(;\u2013j >= 0;)", "\n   fprintf(fp2,\u201d%d\\n\u201d,a[j]);", "fclose(fp1);", "\nfclose(fp2);", "return 0;", "}", "2\u3001\u8f93\u51fa\u548c\u4e3a\u4e00\u4e2a\u7ed9\u5b9a\u6574\u6570\u7684\u6240\u6709\u7ec4\u5408", "\n\u4f8b\u5982n=5", "\n5=1+4\uff1b5=2+3\uff08\u76f8\u52a0\u7684\u6570\u4e0d\u80fd\u91cd\u590d\uff09", "\n\u5219\u8f93\u51fa", "\n1\uff0c4\uff1b2\uff0c3\u3002", "\n#include ", "int main(void)", "\n{", "\nunsigned long int i,j,k;", "printf(\u201cplease input the number\\n\u201d);", "\nscanf(\u201c%d\u201d,&i);", "\n    if( i % 2 == 0)", "\n        j = i / 2;", "\nelse", "\nj = i / 2 + 1;", "printf(\u201cThe result is \\n\u201d);", "\n    for(k = 0; k \n     printf(\"%d = %d + %d\\n\",i,k,i - k);", "\nreturn 0;", "\n}", "#include ", "3\u3001\u9012\u89c4\u53cd\u5411\u8f93\u51fa\u5b57\u7b26\u4e32\u7684\u4f8b\u5b50,\u53ef\u8c13\u662f\u53cd\u5e8f\u7684\u7ecf\u5178\u4f8b\u7a0b.", "\nvoid inverse(char *p)", "\n{", "\n    if( *p = = '\\0' )", "\nreturn;", "\n    inverse( p+1 );", "\n    printf( \"%c\", *p );", "\n}", "int main(int argc, char *argv[])", "\n{", "\n    inverse(\"abc\\0\");", "    return 0;", "\n}", "\n\u5bf91\u7684\u53e6\u4e00\u79cd\u505a\u6cd5\uff1a", "\n#include ", "4\u3001\u5199\u4e00\u6bb5\u7a0b\u5e8f\uff0c\u627e\u51fa\u6570\u7ec4\u4e2d\u7b2ck\u5927\u5c0f\u7684\u6570\uff0c\u8f93\u51fa\u6570\u6240\u5728\u7684\u4f4d\u7f6e\u3002\u4f8b\u5982{2\uff0c4\uff0c3\uff0c4\uff0c7}\u4e2d\uff0c\u7b2c\u4e00\u5927\u7684\u6570\u662f7\uff0c\u4f4d\u7f6e\u57284\u3002\u7b2c\u4e8c\u5927\u3001\u7b2c\u4e09\u5927\u7684\u6570\u90fd\u662f4\uff0c\u4f4d\u7f6e\u57281\u30013\u968f\u4fbf\u8f93\u51fa\u54ea\u4e00\u4e2a\u5747\u53ef\u3002\u51fd\u6570\u63a5\u53e3\u4e3a\uff1aint find_orderk(const int* narry,const int n,const int k)", "\n\u8981\u6c42\u7b97\u6cd5\u590d\u6742\u5ea6\u4e0d\u80fd\u662fO(n^2\uff09", "\n\u8c22\u8c22\uff01", "\n\u53ef\u4ee5\u5148\u7528\u5feb\u901f\u6392\u5e8f\u8fdb\u884c\u6392\u5e8f\uff0c\u5176\u4e2d\u7528\u53e6\u5916\u4e00\u4e2a\u8fdb\u884c\u5730\u5740\u67e5\u627e", "\n\u4ee3\u7801\u5982\u4e0b\uff0c\u5728VC++6.0\u8fd0\u884c\u901a\u8fc7\u3002\u7ed9\u5206\u5427^-^", "//\u5feb\u901f\u6392\u5e8f", "#include", "usingnamespacestd;", "intPartition (int*L,intlow,int high)", "\n{", "\ninttemp = L[low];", "\nintpt = L[low];", "while (low \n{", "\nwhile (low = pt)", "\n\u2013high;", "\nL[low] = L[high];", "\nwhile (low \n++low;", "\nL[low] = temp;", "\n}", "\nL[low] = temp;", "returnlow;", "\n}", "voidQSort (int*L,intlow,int high)", "\n{", "\nif (low \n{", "\nintpl = Partition (L,low,high);", "QSort (L,low,pl - 1);", "\nQSort (L,pl + 1,high);", "\n}", "\n}", "intmain ()", "\n{", "\nintnarry[100],addr[100];", "\nintsum = 1,t;", "cout \ncin >> t;", "while (t != -1)", "\n{", "\nnarry[sum] = t;", "\naddr[sum - 1] = t;", "\nsum++;", "cin >> t;", "\n}", "sum -= 1;", "\nQSort (narry,1,sum);", "for (int i = 1; i \ncout \ncout \n", "intk;", "\ncout \ncin >> k;", "intaa = 1;", "\nintkk = 0;", "\nfor (;;)", "\n{", "\nif (aa == k)", "\nbreak;", "\nif (narry[kk] != narry[kk + 1])", "\n{", "\naa += 1;", "\nkk++;", "\n}", "}", "cout \ncout \nfor (i = 0;i \n{", "\nif (addr[i] == narry[sum - kk])", "\ncout \n}", "return0;", "\n}", "5\u3001\u4e24\u8def\u5f52\u5e76\u6392\u5e8f", "\nLinklist *unio(Linklist *p,Linklist *q){", "\nlinklist *R,*pa,*qa,*ra;", "\npa=p;", "\nqa=q;", "\nR=ra=p;", "\nwhile(pa->next!=NULL&&qa->next!=NULL){", "\nif(pa->data>qa->data){", "\nra->next=qa;", "\nqa=qa->next;", "\n}", "\nelse{", "\nra->next=pa;", "\npa=pa->next;", "\n}", "\n}", "\nif(pa->next!=NULL)", "\nra->next=pa;", "\nif(qa->next!=NULL)", "\nra->next==qa;", "\nreturn R;", "\n}", "6\u3001\u7528\u9012\u5f52\u7b97\u6cd5\u5224\u65ad\u6570\u7ec4a[N]\u662f\u5426\u4e3a\u4e00\u4e2a\u9012\u589e\u6570\u7ec4\u3002", "\n\u9012\u5f52\u7684\u65b9\u6cd5\uff0c\u8bb0\u5f55\u5f53\u524d\u6700\u5927\u7684\uff0c\u5e76\u4e14\u5224\u65ad\u5f53\u524d\u7684\u662f\u5426\u6bd4\u8fd9\u4e2a\u8fd8\u5927\uff0c\u5927\u5219\u7ee7\u7eed\uff0c\u5426\u5219\u8fd4\u56defalse\u7ed3\u675f\uff1a", "\nbool fun( int a[], int n )", "\n{", "\nif( n= =1 )", "\nreturn true;", "\nif( n= =2 )", "\nreturn a[n-1] >= a[n-2];", "\nreturn fun( a,n-1) && ( a[n-1] >= a[n-2] );", "\n}", "7\u3001\u5355\u8fde\u8868\u7684\u5efa\u7acb\uff0c\u628a\u2019a'\u2013\u2019z\u201926\u4e2a\u5b57\u6bcd\u63d2\u5165\u5230\u8fde\u8868\u4e2d\uff0c\u5e76\u4e14\u5012\u53d9\uff0c\u8fd8\u8981\u6253\u5370\uff01", "\n\u65b9\u6cd51\uff1a", "\ntypedef struct val", "\n{   int date_1;", "\n    struct val *next;", "\n}*p;", "void main(void)", "\n{   char c;", "    for(c=122;c>=97;c\u2013)", "\n       { p.date=c;", "\n         p=p->next;", "\n        }", "    p.next=NULL;", "\n}", "\n}", "\n\u65b9\u6cd52\uff1a", "\nnode *p = NULL;", "\nnode *q = NULL;", "node *head = (node*)malloc(sizeof(node));", "\nhead->data = \u2018 \u2018;head->next=NULL;", "node *first = (node*)malloc(sizeof(node));", "\nfirst->data = \u2018a\u2019;first->next=NULL;head->next = first;", "\np = first;", "int longth = \u2018z\u2019 \u2013 \u2018b\u2019;", "\nint i=0;", "\nwhile ( i\n{", "\nnode *temp = (node*)malloc(sizeof(node));", "\ntemp->data = \u2018b\u2019+i;temp->next=NULL;q=temp;", "head->next = temp; temp->next=p;p=q;", "\ni++;", "\n}", "print(head);", "8\u3001\u8bf7\u5217\u4e3e\u4e00\u4e2a\u8f6f\u4ef6\u4e2d\u65f6\u95f4\u6362\u7a7a\u95f4\u6216\u8005\u7a7a\u95f4\u6362\u65f6\u95f4\u7684\u4f8b\u5b50\u3002", "\nvoid swap(int a,int b)", "\n{", "\nint c; c=a;a=b;b=a;", "\n}", "\n\u2014>\u7a7a\u4f18", "\nvoid swap(int a,int b)", "\n{", "\na=a+b;b=a-b;a=a-b;", "\n}", "9\u3001outputstr\u6240\u6307\u7684\u503c\u4e3a123456789", "\nint continumax(char *outputstr, char *inputstr)", "\n{", "\nchar *in = inputstr, *out = outputstr, *temp, *final;", "\nint count = 0, maxlen = 0;", "while( *in != \u2018\\0\u2032 )", "\n{", "\nif( *in > 47 && *in \n{", "\nfor(temp = in; *in > 47 && *in \ncount++;", "\n}", "\nelse", "\nin++;", "if( maxlen \n{", "\nmaxlen = count;", "\ncount = 0;", "\nfinal = temp;", "\n}", "\n}", "\nfor(int i = 0; i \n{", "\n*out = *final;", "\nout++;", "\nfinal++;", "\n}", "\n*out = '\\0';", "\nreturn maxlen;", "\n}", "10\u3001\u4e0d\u7528\u5e93\u51fd\u6570,\u7528C\u8bed\u8a00\u5b9e\u73b0\u5c06\u4e00\u6574\u578b\u6570\u5b57\u8f6c\u5316\u4e3a\u5b57\u7b26\u4e32", "\n\u65b9\u6cd51\uff1a", "\nint getlen(char *s){", "\n    int n;", "\n    for(n = 0; *s != '\\0'; s++)", "\n           n++;", "\n    return n;", "\n}", "\nvoid reverse(char s[])", "\n{", "\n   int c,i,j;", "\n   for(i = 0,j = getlen(s) - 1; i \n       c = s[i];", "\n       s[i] = s[j];", "\n       s[j] = c;", "\n   }", "\n}", "\nvoid itoa(int n,char s[])", "\n{", "\n   int i,sign;", "\n   if((sign = n) \n        n = -n;", "\n   i = 0;", "\n   do{/*\u4ee5\u53cd\u5e8f\u751f\u6210\u6570\u5b57*/", "\n      s[i++] = n%10 + '0';/*get next number*/", "\n   }while((n /= 10) > 0);/*delete the number*/", "   if(sign \n      s[i++] = '-';", "   s[i] = '\\0';", "\n   reverse(s);", "\n}", "\n\u65b9\u6cd52:", "\n#include ", "void itochar(int num);", "void itochar(int num)", "\n{", "\nint i = 0;", "\nint j ;", "\nchar stra[10];", "\nchar strb[10];", "\nwhile ( num )", "\n{", "\nstra[i++]=num%10+48;", "\nnum=num/10;", "\n}", "\nstra[i] = \u2018\\0\u2032;", "\nfor( j=0; j \n{", "\nstrb[j] = stra[i-j-1];", "\n}", "\nstrb[j] = '\\0';", "\ncout\n", "}", "\nint main()", "\n{", "\nint num;", "\ncin>>num;", "\nitochar(num);", "\nreturn 0;", "\n}", "11\u3001\u6c42\u7ec4\u5408\u6570\uff1a \u6c42n\u4e2a\u6570\uff081\u2026.n\uff09\u4e2dk\u4e2a\u6570\u7684\u7ec4\u5408\u2026.", "\n           \u5982\uff1acombination(5,3)", "\n  \u8981\u6c42\u8f93\u51fa\uff1a543\uff0c542\uff0c541\uff0c532\uff0c531\uff0c521\uff0c432\uff0c431\uff0c421\uff0c321\uff0c", "\n#include", "int pop(int *);", "\nint push(int );", "\nvoid combination(int ,int );", "int stack[3]={0};", "\ntop=-1;", "int main()", "\n{", "\nint n,m;", "\nprintf(\u201cInput two numbers:\\n\u201d);", "\nwhile( (2!=scanf(\u201c%d%*c%d\u201d,&n,&m)) )", "\n{", "\nfflush(stdin);", "\nprintf(\u201cInput error! Again:\\n\u201d);", "\n}", "\ncombination(n,m);", "\nprintf(\u201c\\n\u201d);", "\n}", "\nvoid combination(int m,int n)", "\n{", "\nint temp=m;", "\npush(temp);", "\nwhile(1)", "\n{", "\nif(1==temp)", "\n{", "\nif(pop(&temp)&&stack[0]==n) //\u5f53\u6808\u5e95\u5143\u7d20\u5f39\u51fa&&\u4e3a\u53ef\u80fd\u53d6\u7684\u6700\u5c0f\u503c\uff0c\u5faa\u73af\u9000\u51fa", "\nbreak;", "\n}", "\nelse if( push(\u2013temp))", "\n{", "\nprintf(\u201c%d%d%d  \u201c,stack[0],stack[1],stack[2]);//\u00a7\u00e4\u00a8\u00ec\u00a4@?", "\npop(&temp);", "\n}", "\n}", "\n}", "\nint push(int i)", "\n{", "\nstack[++top]=i;", "\nif(top\nreturn 0;", "\nelse", "\nreturn 1;", "\n}", "\nint pop(int *i)", "\n{", "\n*i=stack[top--];", "\nif(top>=0)", "\nreturn 0;", "\nelse", "\nreturn 1;", "\n}", "12\u3001\u7528\u6307\u9488\u7684\u65b9\u6cd5\uff0c\u5c06\u5b57\u7b26\u4e32\u201cABCD1234efgh\u201d\u524d\u540e\u5bf9\u8c03\u663e\u793a", "\n#include ", "13\u3001\u6709\u4e00\u5206\u6570\u5e8f\u5217\uff1a1/2,1/4,1/6,1/8\u2026\u2026\uff0c\u7528\u51fd\u6570\u8c03\u7528\u7684\u65b9\u6cd5\uff0c\u6c42\u6b64\u6570\u5217\u524d20\u9879\u7684\u548c", "\n#include ", "14\u3001\u6709\u4e00\u4e2a\u6570\u7ec4a[1000]\u5b58\u653e0--1000;\u8981\u6c42\u6bcf\u9694\u4e8c\u4e2a\u6570\u5220\u6389\u4e00\u4e2a\u6570\uff0c\u5230\u672b\u5c3e\u65f6\u5faa\u73af\u81f3\u5f00\u5934\u7ee7\u7eed\u8fdb\u884c\uff0c\u6c42\u6700\u540e\u4e00\u4e2a\u88ab\u5220\u6389\u7684\u6570\u7684\u539f\u59cb\u4e0b\u6807\u4f4d\u7f6e\u3002", "\n\u4ee57\u4e2a\u6570\u4e3a\u4f8b\uff1a", "\n   {0,1,2,3,4,5,6,7} 0-->1\u2013>2\uff08\u5220\u9664\uff09\u2013>3\u2013>4\u2013>5(\u5220\u9664)\u2013>6\u2013>7\u2013>0\uff08\u5220\u9664\uff09\uff0c\u5982\u6b64\u5faa\u73af\u76f4\u5230\u6700\u540e\u4e00\u4e2a\u6570\u88ab\u5220\u9664\u3002", "\n\u65b9\u6cd51\uff1a\u6570\u7ec4", "\n#include ", "int main()", "\n{", "\nint arr[1000];", "\nfor (int i=0;i\narr[i]=i;", "\nint j=0;", "\nint count=0;", "\nwhile(count\n{", "\nwhile(arr[j%1000]==null)", "\nj=(++j)%1000;", "\nj=(++j)%1000;", "\nwhile(arr[j%1000]==null)", "\nj=(++j)%1000;", "\nj=(++j)%1000;", "\nwhile(arr[j%1000]==null)", "\nj=(++j)%1000;", "\narr[j]=null;", "\n++count;", "\n}", "\nwhile(arr[j]==null)", "\nj=(++j)%1000;", "cout\nreturn 0;", "\n}\u65b9\u6cd52\uff1a\u94fe\u8868", "\n#include", " return 0;", "\n}", "\nint main(void) {", "\nint a[MAXLINE],R[MAXLINE],suffix,index,values,start,i,K;", "\nsuffix=index=values=start=0;", "\nK=2;", "for(i=0;i", "\na[i]=i;", "\nR[i]=i+1;", "\n}", "\nR[i-1]=0;", "\nfind_n(a,R,K,index,values,2);", "\nprintf(\"the value is %d,%d\\n\",index,values);", "\nreturn 0;", "\n}", "15\u3001\u5b9e\u73b0strcmp", "\nint StrCmp(const char *str1, const char *str2)", "\n\u505a\u662f\u505a\u5bf9\u4e86\uff0c\u6ca1\u6709\u6284\u641e\uff0c\u6bd4\u8f83\u4e71", "\nint StrCmp(const char *str1, const char *str2)", "\n{", "\n    assert(str1 && srt2);", "\n    while (*str1 && *str2 && *str1 == *str2) {", "\n        str1++, str2++;", "\n    }", "\n    if (*str1 && *str2)", "\n        return (*str1-*str2);", "\n    elseif (*str1 && *str2==0)", "\n        return 1;", "\n    elseif (*str1 = = 0 && *str2)", "\n        return -1;", "\n    else", "\n        return 0;", "\n}", "int StrCmp(const char *str1, const char *str2)", "\n{", "\n         //\u7701\u7565\u5224\u65ad\u7a7a\u6307\u9488(\u81ea\u5df1\u4fdd\u8bc1)", "\nwhile(*str1 && *str1++ = = *str2++);", "\nreturn *str1-*str2;", "\n}", "16\u3001\u5b9e\u73b0\u5b50\u4e32\u5b9a\u4f4d", "\nint FindSubStr(const char *MainStr, const char *SubStr)", "\n\u505a\u662f\u505a\u5bf9\u4e86\uff0c\u6ca1\u6709\u6284\u641e\uff0c\u6bd4\u8f83\u4e71", "\nint MyStrstr(const char* MainStr, const char* SubStr)", "\n{", "\nconst char *p;", "\nconst char *q;", "\nconst char * u = MainStr;", "//assert((MainStr!=NULL)&&( SubStr!=NULL));//\u7528\u65ad\u8a00\u5bf9\u8f93\u5165\u8fdb\u884c\u5224\u65ad", "\nwhile(*MainStr) //\u5185\u90e8\u8fdb\u884c\u9012\u589e", "\n{", "\np = MainStr;", "\nq = SubStr;", "\nwhile(*q && *p && *p++ == *q++);", "\nif(!*q )", "\n{", "\nreturn MainStr - u +1 ;//MainStr\u6307\u5411\u5f53\u524d\u8d77\u59cb\u4f4d\uff0cu\u6307\u5411", "\n}", "\nMainStr ++;", "\n}", "\nreturn -1;", "\n}", "17\u3001\u5df2\u77e5\u4e00\u4e2a\u5355\u5411\u94fe\u8868\u7684\u5934\uff0c\u8bf7\u5199\u51fa\u5220\u9664\u5176\u67d0\u4e00\u4e2a\u7ed3\u70b9\u7684\u7b97\u6cd5\uff0c\u8981\u6c42\uff0c\u5148\u627e\u5230\u6b64\u7ed3\u70b9\uff0c\u7136\u540e\u5220\u9664\u3002", "\nslnodetype *Delete(slnodetype *Head,int key){}\u4e2dif(Head->number==key)", "\n{", "\nHead=Pointer->next;", "\nfree(Pointer);", "\nbreak;", "\n}", "\nBack = Pointer;", "\n        Pointer=Pointer->next;", "\nif(Pointer->number==key)", "\n{", "\n            Back->next=Pointer->next;", "\nfree(Pointer);", "\nbreak;", "\n}", "\nvoid delete(Node* p)", "\n{", "\n    if(Head = Node)", "    while(p)", "\n}", "18\u3001\u67091,2,\u2026.\u4e00\u76f4\u5230n\u7684\u65e0\u5e8f\u6570\u7ec4,\u6c42\u6392\u5e8f\u7b97\u6cd5,\u5e76\u4e14\u8981\u6c42\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n),\u7a7a\u95f4\u590d\u6742\u5ea6O(1),\u4f7f\u7528\u4ea4\u6362,\u800c\u4e14\u4e00\u6b21\u53ea\u80fd\u4ea4\u6362\u4e24\u4e2a\u6570.\uff08\u534e\u4e3a\uff09", "\n#include", "int main()", "\n{", "\n    int a[]  = {10,6,9,5,2,8,4,7,1,3};", "\n    int len = sizeof(a) / sizeof(int);", "\n    int temp;", "    for(int i = 0; i \n    {", "\ntemp = a[a[i] - 1];", "\na[a[i] - 1] = a[i];", "\na[i] = temp;", "if ( a[i] == i + 1)", "\n  i++;", "\n    }", "\n    for (int j = 0; j \n      cout\n", "    return 0;", "\n}", "19\u3001\u5199\u51fa\u7a0b\u5e8f\u628a\u4e00\u4e2a\u94fe\u8868\u4e2d\u7684\u63a5\u70b9\u987a\u5e8f\u5012\u6392", "\ntypedef struct linknode", "\n{", "\nint data;", "\nstruct linknode *next;", "\n}node;", "\n//\u5c06\u4e00\u4e2a\u94fe\u8868\u9006\u7f6e", "\nnode *reverse(node *head)", "\n{", "\nnode *p,*q,*r;", "\np=head;", "\nq=p->next;", "\nwhile(q!=NULL)", "\n{", "\nr=q->next;", "\nq->next=p;", "\np=q;", "\nq=r;", "\n}", "head->next=NULL;", "\nhead=p;", "\nreturn head;", "\n}", "20\u3001\u5199\u51fa\u7a0b\u5e8f\u5220\u9664\u94fe\u8868\u4e2d\u7684\u6240\u6709\u63a5\u70b9", "\nvoid del_all(node *head)", "\n{", "\nnode *p;", "\nwhile(head!=NULL)", "\n{", "\np=head->next;", "\nfree(head);", "\nhead=p;", "\n}", "\ncout\n}", "21\u3001\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0cs,t;\u628at\u5b57\u7b26\u4e32\u63d2\u5165\u5230s\u5b57\u7b26\u4e32\u4e2d\uff0cs\u5b57\u7b26\u4e32\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u5b58\u653et\u5b57\u7b26\u4e32", "\nvoid insert(char *s, char *t, int i)", "\n{", "\nchar *q = t;", "\nchar *p =s;", "\nif(q == NULL)return;", "\nwhile(*p!='\\0')", "\n{", "\np++;", "\n}", "\nwhile(*q!=0)", "\n{", "\n*p=*q;", "\np++;", "\nq++;", "\n}", "\n*p = '\\0';", "\n}", "22\u3001\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u529f\u80fd\uff1a\u5b8c\u6210\u5185\u5b58\u4e4b\u95f4\u7684\u62f7\u8d1d", "\nmemcpy source code:", "\n    270 void* memcpy( void *dst, const void *src, unsigned int len )", "\n    271 {", "\n    272    register char *d;", "\n    273    register char *s;", "\n    27", "\n    275    if (len == 0)", "\n    276       return dst;", "\n    277", "\n    278    if (is_overlap(dst, src, len, len))", "\n    279       complain3(\"memcpy\", dst, src, len);", "\n    280", "\n    281    if ( dst > src ) {", "\n    282       d = (char *)dst + len \u2013 1;", "\n    283       s = (char *)src + len \u2013 1;", "\n    284       while ( len >= 4 ) {", "\n    285          *d\u2013 = *s\u2013;", "\n    286          *d\u2013 = *s\u2013;", "\n    287          *d\u2013 = *s\u2013;", "\n    288          *d\u2013 = *s\u2013;", "\n    289          len -= 4;", "\n    290       }", "\n    291       while ( len\u2013 ) {", "\n    292          *d\u2013 = *s\u2013;", "\n    293       }", "\n    294    } else if ( dst \n    295       d = (char *)dst;", "\n    296       s = (char *)src;", "\n    297       while ( len >= 4 ) {", "\n    298          *d++ = *s++;", "\n    299          *d++ = *s++;", "\n    300          *d++ = *s++;", "\n    301          *d++ = *s++;", "\n    302          len -= 4;", "\n    303       }", "\n    304       while ( len\u2013 ) {", "\n    305          *d++ = *s++;", "\n    306       }", "\n    307    }", "\n    308    return dst;", "\n    309 }", "23\u3001\u516c\u53f8\u8003\u8bd5\u8fd9\u79cd\u9898\u76ee\u4e3b\u8981\u8003\u4f60\u7f16\u5199\u7684\u4ee3\u7801\u662f\u5426\u8003\u8651\u5230\u5404\u79cd\u60c5\u51b5\uff0c\u662f\u5426\u5b89\u5168\uff08\u4e0d\u4f1a\u6ea2\u51fa\uff09", "\n\u5404\u79cd\u60c5\u51b5\u5305\u62ec\uff1a", "\n\uff11\u3001\u53c2\u6570\u662f\u6307\u9488\uff0c\u68c0\u67e5\u6307\u9488\u662f\u5426\u6709\u6548", "\n\uff12\u3001\u68c0\u67e5\u590d\u5236\u7684\u6e90\u76ee\u6807\u548c\u76ee\u7684\u5730\u662f\u5426\u4e3a\u540c\u4e00\u4e2a\uff0c\u82e5\u4e3a\u540c\u4e00\u4e2a\uff0c\u5219\u76f4\u63a5\u8df3\u51fa", "\n\uff13\u3001\u8bfb\u5199\u6743\u9650\u68c0\u67e5", "\n\uff14\u3001\u5b89\u5168\u68c0\u67e5\uff0c\u662f\u5426\u4f1a\u6ea2\u51fa", "\nmemcpy\u62f7\u8d1d\u4e00\u5757\u5185\u5b58\uff0c\u5185\u5b58\u7684\u5927\u5c0f\u4f60\u544a\u8bc9\u5b83", "\nstrcpy\u662f\u5b57\u7b26\u4e32\u62f7\u8d1d\uff0c\u9047\u5230\u2019\\0\u2032\u7ed3\u675f", "/* memcpy \u2500\u2500\u2500 \u62f7\u8d1d\u4e0d\u91cd\u53e0\u7684\u5185\u5b58\u5757 */", "\nvoid memcpy(void* pvTo, void* pvFrom, size_t size)", "\n{", "\nvoid* pbTo = (byte*)pvTo;", "\nvoid* pbFrom = (byte*)pvFrom;", "\nASSERT(pvTo != NULL && pvFrom != NULL); //\u68c0\u67e5\u8f93\u5165\u6307\u9488\u7684\u6709\u6548\u6027", "\nASSERT(pbTo>=pbFrom+size || pbFrom>=pbTo+size);//\u68c0\u67e5\u4e24\u4e2a\u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u662f\u5426\u91cd\u53e0", "\nwhile(size\u2013>0)", "\n*pbTo++ == *pbFrom++;", "\nreturn(pvTo);", "\n}", "24\u3001\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0cs,t;\u628at\u5b57\u7b26\u4e32\u63d2\u5165\u5230s\u5b57\u7b26\u4e32\u4e2d\uff0cs\u5b57\u7b26\u4e32\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u5b58\u653et\u5b57\u7b26\u4e32", "\nvoid insert(char *s, char *t, int i)", "\n{", "\nmemcpy(&s[strlen(t)+i],&s[i],strlen(s)-i);", "\nmemcpy(&s[i],t,strlen(t));", "\ns[strlen(s)+strlen(t)]=\u2019\\0\u2032;", "\n}", "25\u3001\u7f16\u5199\u4e00\u4e2a C \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5728\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u627e\u5230\u53ef\u80fd\u7684\u6700\u957f\u7684\u5b50\u5b57\u7b26\u4e32\uff0c\u4e14\u8be5\u5b57\u7b26\u4e32\u662f\u7531\u540c\u4e00\u5b57\u7b26\u7ec4\u6210\u7684\u3002", "\nchar * search(char *cpSource, char ch)", "\n{", "\n         char *cpTemp=NULL, *cpDest=NULL;", "\n         int iTemp, iCount=0;", "\n         while(*cpSource)", "\n         {", "\n                 if(*cpSource == ch)", "\n                 {", "\n                          iTemp = 0;", "\n                          cpTemp = cpSource;", "\n                          while(*cpSource == ch)", "\n++iTemp, ++cpSource;", "\n                          if(iTemp > iCount)", "\niCount = iTemp, cpDest = cpTemp;", "\n        if(!*cpSource)", "\nbreak;", "\n                 }", "\n                 ++cpSource;", "\n }", "\n return cpDest;", "\n}      ", "26\u3001\u8bf7\u7f16\u5199\u4e00\u4e2a C \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5728\u7ed9\u5b9a\u7684\u5185\u5b58\u533a\u57df\u641c\u7d22\u7ed9\u5b9a\u7684\u5b57\u7b26\uff0c\u5e76\u8fd4\u56de\u8be5\u5b57\u7b26\u6240\u5728\u4f4d\u7f6e\u7d22\u5f15\u503c\u3002", "\nint search(char *cpSource, int n, char ch)", "\n{", "\n         int i;", "\n         for(i=0; i", "\n         return i;", "\n}", "27\u3001\u7ed9\u5b9a\u5b57\u7b26\u4e32A\u548cB,\u8f93\u51faA\u548cB\u4e2d\u7684\u6700\u5927\u516c\u5171\u5b50\u4e32\u3002", "\n\u6bd4\u5982A=\"aocdfe\" B=\"pmcdfa\" \u5219\u8f93\u51fa\"cdf\"", "\n*/", "\n//Author: azhen", "\n#include", "char *commanstring(char shortstring[], char longstring[])", "\n{", "\nint i, j;", "char *substring=malloc(256);", "if(strstr(longstring, shortstring)!=NULL)              //\u5982\u679c\u2026\u2026\uff0c\u90a3\u4e48\u8fd4\u56deshortstring", "\nreturn shortstring;  ", "for(i=strlen(shortstring)-1;i>0; i\u2013)                 //\u5426\u5219\uff0c\u5f00\u59cb\u5faa\u73af\u8ba1\u7b97", "\n{", "\nfor(j=0; j\nmemcpy(substring, &shortstring[j], i);", "\nsubstring[i]='\\0';", "\nif(strstr(longstring, substring)!=NULL)", "\nreturn substring;", "\n}", "\n}", "\nreturn NULL;", "\n}", "main()", "\n{", "\nchar *str1=malloc(256);", "\nchar *str2=malloc(256);", "\nchar *comman=NULL;", "gets(str1);", "\ngets(str2);", "if(strlen(str1)>strlen(str2))                         //\u5c06\u77ed\u7684\u5b57\u7b26\u4e32\u653e\u524d\u9762", "\ncomman=commanstring(str2, str1);", "\nelse", "\ncomman=commanstring(str1, str2);", "printf(\u201cthe longest comman string is: %s\\n\u201d, comman);", "\n}", "\n28\u3001\u5199\u4e00\u4e2a\u51fd\u6570\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32str1\u548cstr2\u7684\u5927\u5c0f\uff0c\u82e5\u76f8\u7b49\u8fd4\u56de0\uff0c\u82e5str1\u5927\u4e8e", "\nstr2\u8fd4\u56de1\uff0c\u82e5str1\u5c0f\u4e8estr2\u8fd4\u56de\uff0d1", "\nint strcmp ( const char * src,const char * dst)", "\n{", "\n        int ret = 0 ;", "\n        while( ! (ret = *(unsigned char *)src \u2013 *(unsigned char *)dst) && *dst)", "\n{", "\n                ++src;", "\n++dst;", "\n}", "\n        if ( ret \n                ret = -1 ;", "\n        else if ( ret > 0 )", "\n                ret = 1 ;", "\n        return( ret );", "\n}", "29\u3001\u6c421000\uff01\u7684\u672a\u5c3e\u6709\u51e0\u4e2a0\uff08\u7528\u7d20\u6570\u76f8\u4e58\u7684\u65b9\u6cd5\u6765\u505a\uff0c\u598272=2*2*2*3*3\uff09;", "\n\u6c42\u51fa1->1000\u91cc,\u80fd\u88ab5\u6574\u9664\u7684\u6570\u7684\u4e2a\u6570n1,\u80fd\u88ab25\u6574\u9664\u7684\u6570\u7684\u4e2a\u6570n2,\u80fd\u88ab125\u6574\u9664\u7684\u6570\u7684\u4e2a\u6570n3,", "\n\u80fd\u88ab625\u6574\u9664\u7684\u6570\u7684\u4e2a\u6570n4.", "\n1000!\u672b\u5c3e\u7684\u96f6\u7684\u4e2a\u6570=n1+n2+n3+n4;", "\n#include", "int find5(int num){", "\nint ret=0;", "\nwhile(num%5==0){", "\nnum/=5;", "\nret++;", "\n}", "\nreturn ret;", "\n}", "\nint main(){", "\nint result=0;", "\nint i;", "\nfor(i=5;i\n{", "\nresult+=find5(i);", "\n}", "\nprintf(\" the total zero number is %d\\n\",result);", "\nreturn 0;", "\n}", "30\u3001\u6709\u53cc\u5411\u5faa\u73af\u94fe\u8868\u7ed3\u70b9\u5b9a\u4e49\u4e3a\uff1a", "\nstruct node", "\n{ int data;", "\nstruct node *front,*next;", "\n};", "\n\u6709\u4e24\u4e2a\u53cc\u5411\u5faa\u73af\u94fe\u8868A\uff0cB\uff0c\u77e5\u9053\u5176\u5934\u6307\u9488\u4e3a\uff1apHeadA,pHeadB\uff0c\u8bf7\u5199\u4e00\u51fd\u6570\u5c06\u4e24\u94fe\u8868\u4e2ddata\u503c\u76f8\u540c\u7684\u7ed3\u70b9\u5220\u9664", "\nBOOL DeteleNode(Node *pHeader, DataType Value)", "\n{", "\nif (pHeader == NULL) return;", "BOOL bRet = FALSE;", "\nNode *pNode = pHead;", "\nwhile (pNode != NULL)", "\n{", "\nif (pNode->data == Value)", "\n{", "\nif (pNode->front == NULL)", "\n{", "\npHeader = pNode->next;", "\npHeader->front = NULL;", "\n}", "\nelse", "\n{", "\nif (pNode->next != NULL)", "\n{", "\npNode->next->front = pNode->front;", "\n}", "\npNode->front->next = pNode->next;", "\n}", "Node *pNextNode = pNode->next;", "\ndelete pNode;", "\npNode = pNextNode;", "bRet = TRUE;", "\n//\u4e0d\u8981break\u6216return, \u5220\u9664\u6240\u6709", "\n}", "\nelse", "\n{", "\npNode = pNode->next;", "\n}", "\n}", "return bRet;", "\n}", "void DE(Node *pHeadA, Node *pHeadB)", "\n{", "\nif (pHeadA == NULL || pHeadB == NULL)", "\n{", "\nreturn;", "\n}", "Node *pNode = pHeadA;", "\nwhile (pNode != NULL)", "\n{", "\nif (DeteleNode(pHeadB, pNode->data))", "\n{", "\nif (pNode->front == NULL)", "\n{", "\npHeadA = pNode->next;", "\npHeadA->front = NULL;", "\n}", "\nelse", "\n{", "\npNode->front->next = pNode->next;", "\nif (pNode->next != NULL)", "\n{", "\npNode->next->front = pNode->front;", "\n}", "\n}", "\nNode *pNextNode = pNode->next;", "\ndelete pNode;", "\npNode = pNextNode;", "\n}", "\nelse", "\n{", "\npNode = pNode->next;", "\n}", "\n}", "\n}", "31\u3001\u7f16\u7a0b\u5b9e\u73b0\uff1a\u627e\u51fa\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u6700\u5927\u516c\u5171\u5b50\u5b57\u7b26\u4e32,\u5982\u201dabccade\u201d,\u201ddgcadde\u201d\u7684\u6700\u5927\u5b50\u4e32\u4e3a\u201dcad\u201d", "\nint GetCommon(char *s1, char *s2, char **r1, char **r2)", "\n{", "\nint len1 = strlen(s1);", "\nint len2 = strlen(s2);", "\nint maxlen = 0;", "for(int i = 0; i \n{", "\nfor(int j = 0; j \n{", "\nif(s1[i] == s2[j])", "\n{", "\nint as = i, bs = j, count = 1;", "\nwhile(as + 1 \ncount++;", "if(count > maxlen)", "\n{", "\nmaxlen = count;", "\n*r1 = s1 + i;", "\n*r2 = s2 + j;", "\n}", "\n}", "\n}", "\n}", "32\u3001\u7f16\u7a0b\u5b9e\u73b0\uff1a\u628a\u5341\u8fdb\u5236\u6570(long\u578b)\u5206\u522b\u4ee5\u4e8c\u8fdb\u5236\u548c\u5341\u516d\u8fdb\u5236\u5f62\u5f0f\u8f93\u51fa\uff0c\u4e0d\u80fd\u4f7f\u7528printf\u7cfb\u5217\u5e93\u51fd\u6570", "\nchar* test3(long num) {", "\nchar* buffer = (char*)malloc(11);", "\nbuffer[0] = \u20190\u2032;", "\nbuffer[1] = \u2018x\u2019;", "\nbuffer[10] = \u2018\\0\u2032;", "char* temp = buffer + 2;", "\nfor (int i=0; i \ntemp[i] = (char)(num>28);", "\ntemp[i] = temp[i] >= 0 ? temp[i] : temp[i] + 16;", "\ntemp[i] = temp[i] \n}", "\nreturn buffer;", "\n}", "33\u3001\u8f93\u5165N, \u6253\u5370 N*N \u77e9\u9635", "\n\u6bd4\u5982 N = 3\uff0c\u6253\u5370\uff1a", "1  2  3", "\n8  9  4", "\n7  6  5", "N = 4\uff0c\u6253\u5370\uff1a", "1   2   3   4", "\n12  13  14  5", "\n11  16  15  6", "\n10  9   8   7", "\n\u89e3\u7b54\uff1a", "\n1 #define N 15", "\nint s[N][N];", "\nvoid main()", "\n{", "\nint k = 0, i = 0, j = 0;", "\nint a = 1;", "\nfor( ; k \n{", "\nwhile( j \nwhile( i \nwhile( j > k-1 ) s[i][j--] = a++; i\u2013; j++;", "\nwhile( i > k )   s[i--][j] = a++; i++; j++;", "\n}", "\nfor( i = 0; i \n{", "\nfor( j = 0; j \ncout \ncout \n}", "\n}", "\n2 define MAX_N  100", "\nint matrix[MAX_N][MAX_N];", "/*", "\n *\uff08x,y\uff09\uff1a\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u5750\u6807", "\n * start\uff1a\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u503c", "\n * n\uff1a\u77e9\u9635\u7684\u5927\u5c0f", "\n */", "\nvoid SetMatrix(int x, int y, int start, int n) {", "\n    int i, j;", "    if (n \n        return;", "\n    if (n == 1) {  //\u77e9\u9635\u5927\u5c0f\u4e3a1\u65f6", "\n        matrix[x][y] = start;", "\n        return;", "\n    }", "\n    for (i = x; i \n        matrix[y][i] = start++;", "    for (j = y; j \n        matrix[j][x+n-1] = start++;", "    for (i = x+n-1; i > x; i\u2013)     //\u5e95\u90e8", "\n        matrix[y+n-1][i] = start++;", "    for (j = y+n-1; j > y; j\u2013)     //\u5de6\u90e8", "\n        matrix[j][x] = start++;", "    SetMatrix(x+1, y+1, start, n-2);   //\u9012\u5f52", "\n}", "void main() {", "\n   int i, j;", "\n   int n;", "   scanf(\u201c%d\u201d, &n);", "\n   SetMatrix(0, 0, 1, n);", "   //\u6253\u5370\u87ba\u65cb\u77e9\u9635", "\n   for(i = 0; i \n      for (j = 0; j \nprintf(\"%4d\", matrix[i][j]);", "\n      printf(\"\\n\");", "\n   }", "\n}", "34\u3001\u6590\u6ce2\u62c9\u5951\u6570\u5217\u9012\u5f52\u5b9e\u73b0\u7684\u65b9\u6cd5\u5982\u4e0b\uff1a", "\n int  Funct( int n )", "\n{", "\n   if(n==0) return 1;", "\n   if(n==1) return 1;", "\n   retrurn  Funct(n-1) + Funct(n-2);", "\n}", "\n\u8bf7\u95ee\uff0c\u5982\u4f55\u4e0d\u4f7f\u7528\u9012\u5f52\uff0c\u6765\u5b9e\u73b0\u4e0a\u8ff0\u51fd\u6570\uff1f", "\n\u8bf7\u6559\u5404\u4f4d\u9ad8\u624b\uff01", "\n\u89e3\u7b54\uff1aint  Funct( int n )  //  n \u4e3a\u975e\u8d1f\u6574\u6570", "\n{", "\n   int a=0;", "\n   int b=1;", "\n   int c;", "\n   if(n==0) c=1;", "\n   else if(n==1) c=1;", "\n   else for(int i=2;i\n   {", "\n     c=a+b;", "\n     a=b;", "\n     b=c;", "\n   }", "\n   return c;", "\n}", "\n\u89e3\u7b54\uff1a", "\n\u73b0\u5728\u5927\u591a\u6570\u7cfb\u7edf\u90fd\u662f\u5c06\u4f4e\u5b57\u4f4d\u653e\u5728\u524d\u9762\uff0c\u800c\u7ed3\u6784\u4f53\u4e2d\u4f4d\u57df\u7684\u7533\u660e\u4e00\u822c\u662f\u5148\u58f0\u660e\u9ad8\u4f4d\u3002", "\n100  \u7684\u4e8c\u8fdb\u5236\u662f 001 100 100", "\n\u4f4e\u4f4d\u5728\u524d   \u9ad8\u4f4d\u5728\u540e", "\n001----s3", "\n100----s2", "\n100----s1", "\n\u6240\u4ee5\u7ed3\u679c\u5e94\u8be5\u662f 1", "\n\u5982\u679c\u5148\u7533\u660e\u7684\u5728\u4f4e\u4f4d\u5219\uff1a", "\n001----s1", "\n100----s2", "\n100----s3", "\n\u7ed3\u679c\u662f 4", "\n1\u3001\u539f\u9898\u8ddflittle-endian\uff0cbig-endian\u6ca1\u6709\u5173\u7cfb", "\n2\u3001\u539f\u9898\u8ddf\u4f4d\u57df\u7684\u5b58\u50a8\u7a7a\u95f4\u5206\u914d\u6709\u5173\uff0c\u5230\u5e95\u662f\u4ece\u4f4e\u5b57\u8282\u5206\u914d\u8fd8\u662f\u4ece\u9ad8\u5b57\u8282\u5206\u914d\uff0c\u4eceDev C++\u548cVC7.1\u4e0a\u770b\uff0c\u90fd\u662f\u4ece\u4f4e\u5b57\u8282\u5f00\u59cb\u5206\u914d\uff0c\u5e76\u4e14\u8fde\u7eed\u5206\u914d\uff0c\u4e2d\u95f4\u4e0d\u7a7a\uff0c\u4e0d\u50cf\u8c2d\u7684\u4e66\u90a3\u6837\u4f1a\u7559\u7a7a\u4f4d", "\n3\u3001\u539f\u9898\u8ddf\u7f16\u8bd1\u5668\u6709\u5173\uff0c\u7f16\u8bd1\u5668\u5728\u672a\u7528\u5806\u6808\u7a7a\u95f4\u7684\u9ed8\u8ba4\u503c\u5206\u914d\u4e0a\u6709\u6240\u4e0d\u540c\uff0cDev C++\u672a\u7528\u7a7a\u95f4\u5206\u914d\u4e3a", "\n01110111b\uff0cVC7.1\u4e0b\u4e3a11001100b,\u6240\u4ee5\u5728Dev C++\u4e0b\u7684\u7ed3\u679c\u4e3a5\uff0c\u5728VC7.1\u4e0b\u4e3a1\u3002", "\u6ce8\uff1aPC\u4e00\u822c\u91c7\u7528little-endian\uff0c\u5373\u9ad8\u9ad8\u4f4e\u4f4e\uff0c\u4f46\u5728\u7f51\u7edc\u4f20\u8f93\u4e0a\uff0c\u4e00\u822c\u91c7\u7528big-endian\uff0c\u5373\u9ad8\u4f4e\u4f4e\u9ad8\uff0c\u534e\u4e3a\u662f\u505a\u7f51\u7edc\u7684\uff0c\u6240\u4ee5\u53ef\u80fd\u8003\u8651big-endian\u6a21\u5f0f\uff0c\u8fd9\u6837\u8f93\u51fa\u7ed3\u679c\u53ef\u80fd\u4e3a4", "35\u3001\u5224\u65ad\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u4e0d\u662f\u56de\u6587", "\nint IsReverseStr(char *aStr)", "\n{", "\nint i,j;", "\nint found=1;", "\nif(aStr==NULL)", "\nreturn -1;", "\nj=strlen(aStr);", "\nfor(i=0;i", "\nif(*(aStr+i)!=*(aStr+j-i-1))", "\n{", "\nfound=0;", "\nbreak;", "\n}", "\nreturn found;", "\n}", "36\u3001Josephu \u95ee\u9898\u4e3a\uff1a\u8bbe\u7f16\u53f7\u4e3a1\uff0c2\uff0c\u2026 n\u7684n\u4e2a\u4eba\u56f4\u5750\u4e00\u5708\uff0c\u7ea6\u5b9a\u7f16\u53f7\u4e3ak\uff081\n", "\u6570\u7ec4\u5b9e\u73b0\uff1a", "\n#include ", "  for (i = 1; tail != head; ++i)", "\n  {", "\n    for (j = 1; j \n    {", "\n      tail = head;", "\n      head = head->next;", "\n    }", "\n    tail->next = head->next;", "\n    printf(\u201c\u7b2c%4d\u4e2a\u51fa\u5c40\u7684\u4eba\u662f\uff1a%4d\u53f7\\n\u201d, i, head->index);", "\n    free(head);", "\n    head = tail->next;", "\n  }", "\n  i = head->index;", "\n  free(head);", "\n  return i;", "\n}", "\nint main()", "\n{", "\n  int n, m;", "\n  scanf(\u201c%d%d\u201d, &n, &m);", "\n  printf(\u201c\u6700\u540e\u80dc\u5229\u7684\u662f%d\u53f7\uff01\\n\u201d, Josephu(n, m));", "\n  system(\u201cpause\u201d);", "\n  return 0;", "\n}", "37\u3001\u5df2\u77e5strcpy\u51fd\u6570\u7684\u539f\u578b\u662f\uff1a", "\n        char * strcpy(char * strDest,const char * strSrc);", "\n    1.\u4e0d\u8c03\u7528\u5e93\u51fd\u6570\uff0c\u5b9e\u73b0strcpy\u51fd\u6570\u3002", "\n    2.\u89e3\u91ca\u4e3a\u4ec0\u4e48\u8981\u8fd4\u56dechar *\u3002", "\n    \u89e3\u8bf4\uff1a", "\n    1.strcpy\u7684\u5b9e\u73b0\u4ee3\u7801", "\n        char * strcpy(char * strDest,const char * strSrc)", "\n        {", "\n                if ((strDest==NULL)||(strSrc==NULL)) file://[/1]", "\n                        throw \u201cInvalid argument(s)\u201d; //[2]", "\n                char * strDestCopy=strDest;  file://[/3]", "\n                while ((*strDest++=*strSrc++)!=\u2019\\0\u2032); file://[/4]", "\n                return strDestCopy;", "\n        }", "\n    \u9519\u8bef\u7684\u505a\u6cd5\uff1a", "\n    [1]", "\n    (A)\u4e0d\u68c0\u67e5\u6307\u9488\u7684\u6709\u6548\u6027\uff0c\u8bf4\u660e\u7b54\u9898\u8005\u4e0d\u6ce8\u91cd\u4ee3\u7801\u7684\u5065\u58ee\u6027\u3002", "\n    (B)\u68c0\u67e5\u6307\u9488\u7684\u6709\u6548\u6027\u65f6\u4f7f\u7528((!strDest)||(!strSrc))\u6216(!(strDest&&strSrc))\uff0c\u8bf4\u660e\u7b54\u9898\u8005\u5bf9C\u8bed\u8a00\u4e2d\u7c7b\u578b\u7684\u9690\u5f0f\u8f6c\u6362\u6ca1\u6709\u6df1\u523b\u8ba4\u8bc6\u3002\u5728\u672c\u4f8b\u4e2dchar *\u8f6c\u6362\u4e3abool\u5373\u662f\u7c7b\u578b\u9690\u5f0f\u8f6c\u6362\uff0c\u8fd9\u79cd\u529f\u80fd\u867d\u7136\u7075\u6d3b\uff0c\u4f46\u66f4\u591a\u7684\u662f\u5bfc\u81f4\u51fa\u9519\u6982\u7387\u589e\u5927\u548c\u7ef4\u62a4\u6210\u672c\u5347\u9ad8\u3002\u6240\u4ee5C++\u4e13\u95e8\u589e\u52a0\u4e86bool\u3001true\u3001false\u4e09\u4e2a\u5173\u952e\u5b57\u4ee5\u63d0\u4f9b\u66f4\u5b89\u5168\u7684\u6761\u4ef6\u8868\u8fbe\u5f0f\u3002", "\n    (C)\u68c0\u67e5\u6307\u9488\u7684\u6709\u6548\u6027\u65f6\u4f7f\u7528((strDest==0)||(strSrc==0))\uff0c\u8bf4\u660e\u7b54\u9898\u8005\u4e0d\u77e5\u9053\u4f7f\u7528\u5e38\u91cf\u7684\u597d\u5904\u3002\u76f4\u63a5\u4f7f\u7528\u5b57\u9762\u5e38\u91cf\uff08\u5982\u672c\u4f8b\u4e2d\u76840\uff09\u4f1a\u51cf\u5c11\u7a0b\u5e8f\u7684\u53ef\u7ef4\u62a4\u6027\u30020\u867d\u7136\u7b80\u5355\uff0c\u4f46\u7a0b\u5e8f\u4e2d\u53ef\u80fd\u51fa\u73b0\u5f88\u591a\u5904\u5bf9\u6307\u9488\u7684\u68c0\u67e5\uff0c\u4e07\u4e00\u51fa\u73b0\u7b14\u8bef\uff0c\u7f16\u8bd1\u5668\u4e0d\u80fd\u53d1\u73b0\uff0c\u751f\u6210\u7684\u7a0b\u5e8f\u5185\u542b\u903b\u8f91\u9519\u8bef\uff0c\u5f88\u96be\u6392\u9664\u3002\u800c\u4f7f\u7528NULL\u4ee3\u66ff0\uff0c\u5982\u679c\u51fa\u73b0\u62fc\u5199\u9519\u8bef\uff0c\u7f16\u8bd1\u5668\u5c31\u4f1a\u68c0\u67e5\u51fa\u6765\u3002", "\n    [2]", "\n    (A)return new string(\u201cInvalid argument(s)\u201d);\uff0c\u8bf4\u660e\u7b54\u9898\u8005\u6839\u672c\u4e0d\u77e5\u9053\u8fd4\u56de\u503c\u7684\u7528\u9014\uff0c\u5e76\u4e14\u4ed6\u5bf9\u5185\u5b58\u6cc4\u6f0f\u4e5f\u6ca1\u6709\u8b66\u60d5\u5fc3\u3002\u4ece\u51fd\u6570\u4e2d\u8fd4\u56de\u51fd\u6570\u4f53\u5185\u5206\u914d\u7684\u5185\u5b58\u662f\u5341\u5206\u5371\u9669\u7684\u505a\u6cd5\uff0c\u4ed6\u628a\u91ca\u653e\u5185\u5b58\u7684\u4e49\u52a1\u629b\u7ed9\u4e0d\u77e5\u60c5\u7684\u8c03\u7528\u8005\uff0c\u7edd\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u8c03\u7528\u8005\u4e0d\u4f1a\u91ca\u653e\u5185\u5b58\uff0c\u8fd9\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f\u3002", "\n    (B)return 0;\uff0c\u8bf4\u660e\u7b54\u9898\u8005\u6ca1\u6709\u638c\u63e1\u5f02\u5e38\u673a\u5236\u3002\u8c03\u7528\u8005\u6709\u53ef\u80fd\u5fd8\u8bb0\u68c0\u67e5\u8fd4\u56de\u503c\uff0c\u8c03\u7528\u8005\u8fd8\u53ef\u80fd\u65e0\u6cd5\u68c0\u67e5\u8fd4\u56de\u503c\uff08\u89c1\u540e\u9762\u7684\u94fe\u5f0f\u8868\u8fbe\u5f0f\uff09\u3002\u5984\u60f3\u8ba9\u8fd4\u56de\u503c\u80a9\u8d1f\u8fd4\u56de\u6b63\u786e\u503c\u548c\u5f02\u5e38\u503c\u7684\u53cc\u91cd\u529f\u80fd\uff0c\u5176\u7ed3\u679c\u5f80\u5f80\u662f\u4e24\u79cd\u529f\u80fd\u90fd\u5931\u6548\u3002\u5e94\u8be5\u4ee5\u629b\u51fa\u5f02\u5e38\u6765\u4ee3\u66ff\u8fd4\u56de\u503c\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u8f7b\u8c03\u7528\u8005\u7684\u8d1f\u62c5\u3001\u4f7f\u9519\u8bef\u4e0d\u4f1a\u88ab\u5ffd\u7565\u3001\u589e\u5f3a\u7a0b\u5e8f\u7684\u53ef\u7ef4\u62a4\u6027\u3002", "\n    [3]", "\n    (A)\u5fd8\u8bb0\u4fdd\u5b58\u539f\u59cb\u7684strDest\u503c\uff0c\u8bf4\u660e\u7b54\u9898\u8005\u903b\u8f91\u601d\u7ef4\u4e0d\u4e25\u5bc6\u3002", "\n    [4]", "\n    (A)\u5faa\u73af\u5199\u6210while (*strDest++=*strSrc++);\uff0c\u540c[1](B)\u3002", "\n    (B)\u5faa\u73af\u5199\u6210while (*strSrc!=\u2019\\0\u2032) *strDest++=*strSrc++;\uff0c\u8bf4\u660e\u7b54\u9898\u8005\u5bf9\u8fb9\u754c\u6761\u4ef6\u7684\u68c0\u67e5\u4e0d\u529b\u3002\u5faa\u73af\u4f53\u7ed3\u675f\u540e\uff0cstrDest\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u6ca1\u6709\u6b63\u786e\u5730\u52a0\u4e0a\u2019\\0\u2032\u3002", "\u7b2c\u56db\u90e8\u5206\uff1a\u9644\u52a0\u90e8\u5206", "\n1\u3001\u4f4d\u57df \uff1a", "\n\u6709\u4e9b\u4fe1\u606f\u5728\u5b58\u50a8\u65f6\uff0c\u5e76\u4e0d\u9700\u8981\u5360\u7528\u4e00\u4e2a\u5b8c\u6574\u7684\u5b57\u8282\uff0c \u800c\u53ea\u9700\u5360\u51e0\u4e2a\u6216\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u3002\u4f8b\u5982\u5728\u5b58\u653e\u4e00\u4e2a\u5f00\u5173\u91cf\u65f6\uff0c\u53ea\u67090\u548c1 \u4e24\u79cd\u72b6\u6001\uff0c \u7528\u4e00\u4f4d\u4e8c\u8fdb\u4f4d\u5373\u53ef\u3002\u4e3a\u4e86\u8282\u7701\u5b58\u50a8\u7a7a\u95f4\uff0c\u5e76\u4f7f\u5904\u7406\u7b80\u4fbf\uff0c\uff23\u8bed\u8a00\u53c8\u63d0\u4f9b\u4e86\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u79f0\u4e3a\u201c\u4f4d\u57df\u201d\u6216\u201c\u4f4d\u6bb5\u201d\u3002\u6240\u8c13\u201c\u4f4d\u57df\u201d\u662f\u628a\u4e00\u4e2a\u5b57\u8282\u4e2d\u7684\u4e8c\u8fdb\u4f4d\u5212\u5206\u4e3a\u51e0\u4e2a\u4e0d\u540c\u7684\u533a\u57df\uff0c \u5e76\u8bf4\u660e\u6bcf\u4e2a\u533a\u57df\u7684\u4f4d\u6570\u3002\u6bcf\u4e2a\u57df\u6709\u4e00\u4e2a\u57df\u540d\uff0c\u5141\u8bb8\u5728\u7a0b\u5e8f\u4e2d\u6309\u57df\u540d\u8fdb\u884c\u64cd\u4f5c\u3002 \u8fd9\u6837\u5c31\u53ef\u4ee5\u628a\u51e0\u4e2a\u4e0d\u540c\u7684\u5bf9\u8c61\u7528\u4e00\u4e2a\u5b57\u8282\u7684\u4e8c\u8fdb\u5236\u4f4d\u57df\u6765\u8868\u793a\u3002\u4e00\u3001\u4f4d\u57df\u7684\u5b9a\u4e49\u548c\u4f4d\u57df\u53d8\u91cf\u7684\u8bf4\u660e\u4f4d\u57df\u5b9a\u4e49\u4e0e\u7ed3\u6784\u5b9a\u4e49\u76f8\u4eff\uff0c\u5176\u5f62\u5f0f\u4e3a\uff1a", "\nstruct \u4f4d\u57df\u7ed3\u6784\u540d", "\n{ \u4f4d\u57df\u5217\u8868 };", "\n\u5176\u4e2d\u4f4d\u57df\u5217\u8868\u7684\u5f62\u5f0f\u4e3a\uff1a \u7c7b\u578b\u8bf4\u660e\u7b26 \u4f4d\u57df\u540d\uff1a\u4f4d\u57df\u957f\u5ea6", "\n\u4f8b\u5982\uff1a", "\nstruct bs", "\n{", "\nint a:8;", "\nint b:2;", "\nint c:6;", "\n};", "\n\u4f4d\u57df\u53d8\u91cf\u7684\u8bf4\u660e\u4e0e\u7ed3\u6784\u53d8\u91cf\u8bf4\u660e\u7684\u65b9\u5f0f\u76f8\u540c\u3002 \u53ef\u91c7\u7528\u5148\u5b9a\u4e49\u540e\u8bf4\u660e\uff0c\u540c\u65f6\u5b9a\u4e49\u8bf4\u660e\u6216\u8005\u76f4\u63a5\u8bf4\u660e\u8fd9\u4e09\u79cd\u65b9\u5f0f\u3002\u4f8b\u5982\uff1a", "\nstruct bs", "\n{", "\nint a:8;", "\nint b:2;", "\nint c:6;", "\n}data;", "\n\u8bf4\u660edata\u4e3abs\u53d8\u91cf\uff0c\u5171\u5360\u4e24\u4e2a\u5b57\u8282\u3002\u5176\u4e2d\u4f4d\u57dfa\u53608\u4f4d\uff0c\u4f4d\u57dfb\u53602\u4f4d\uff0c\u4f4d\u57dfc\u53606\u4f4d\u3002\u5bf9\u4e8e\u4f4d\u57df\u7684\u5b9a\u4e49\u5c1a\u6709\u4ee5\u4e0b\u51e0\u70b9\u8bf4\u660e\uff1a    ", "1. \u4e00\u4e2a\u4f4d\u57df\u5fc5\u987b\u5b58\u50a8\u5728\u540c\u4e00\u4e2a\u5b57\u8282\u4e2d\uff0c\u4e0d\u80fd\u8de8\u4e24\u4e2a\u5b57\u8282\u3002\u5982\u4e00\u4e2a\u5b57\u8282\u6240\u5269\u7a7a\u95f4\u4e0d\u591f\u5b58\u653e\u53e6\u4e00\u4f4d\u57df\u65f6\uff0c\u5e94\u4ece\u4e0b\u4e00\u5355\u5143\u8d77\u5b58\u653e\u8be5\u4f4d\u57df\u3002\u4e5f\u53ef\u4ee5\u6709\u610f\u4f7f\u67d0\u4f4d\u57df\u4ece\u4e0b\u4e00\u5355\u5143\u5f00\u59cb\u3002\u4f8b\u5982\uff1a", "\nstruct bs", "\n{", "\nunsigned a:4", "\nunsigned :0 /*\u7a7a\u57df*/", "\nunsigned b:4 /*\u4ece\u4e0b\u4e00\u5355\u5143\u5f00\u59cb\u5b58\u653e*/", "\nunsigned c:4", "\n}", "\n\u5728\u8fd9\u4e2a\u4f4d\u57df\u5b9a\u4e49\u4e2d\uff0ca\u5360\u7b2c\u4e00\u5b57\u8282\u76844\u4f4d\uff0c\u540e4\u4f4d\u586b0\u8868\u793a\u4e0d\u4f7f\u7528\uff0cb\u4ece\u7b2c\u4e8c\u5b57\u8282\u5f00\u59cb\uff0c\u5360\u75284\u4f4d\uff0cc\u5360\u75284\u4f4d\u3002    ", "2. \u7531\u4e8e\u4f4d\u57df\u4e0d\u5141\u8bb8\u8de8\u4e24\u4e2a\u5b57\u8282\uff0c\u56e0\u6b64\u4f4d\u57df\u7684\u957f\u5ea6\u4e0d\u80fd\u5927\u4e8e\u4e00\u4e2a\u5b57\u8282\u7684\u957f\u5ea6\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e0d\u80fd\u8d85\u8fc78\u4f4d\u4e8c\u8fdb\u4f4d\u3002    ", "3. \u4f4d\u57df\u53ef\u4ee5\u65e0\u4f4d\u57df\u540d\uff0c\u8fd9\u65f6\u5b83\u53ea\u7528\u6765\u4f5c\u586b\u5145\u6216\u8c03\u6574\u4f4d\u7f6e\u3002\u65e0\u540d\u7684\u4f4d\u57df\u662f\u4e0d\u80fd\u4f7f\u7528\u7684\u3002\u4f8b\u5982\uff1a", "\nstruct k", "\n{", "\nint a:1", "\nint :2 /*\u8be52\u4f4d\u4e0d\u80fd\u4f7f\u7528*/", "\nint b:3", "\nint c:2", "\n};", "\n\u4ece\u4ee5\u4e0a\u5206\u6790\u53ef\u4ee5\u770b\u51fa\uff0c\u4f4d\u57df\u5728\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u79cd\u7ed3\u6784\u7c7b\u578b\uff0c \u4e0d\u8fc7\u5176\u6210\u5458\u662f\u6309\u4e8c\u8fdb\u4f4d\u5206\u914d\u7684\u3002    ", "\u4e8c\u3001\u4f4d\u57df\u7684\u4f7f\u7528\u4f4d\u57df\u7684\u4f7f\u7528\u548c\u7ed3\u6784\u6210\u5458\u7684\u4f7f\u7528\u76f8\u540c\uff0c\u5176\u4e00\u822c\u5f62\u5f0f\u4e3a\uff1a \u4f4d\u57df\u53d8\u91cf\u540d\u2022\u4f4d\u57df\u540d \u4f4d\u57df\u5141\u8bb8\u7528\u5404\u79cd\u683c\u5f0f\u8f93\u51fa\u3002", "\nmain(){", "\nstruct bs", "\n{", "\nunsigned a:1;", "\nunsigned b:3;", "\nunsigned c:4;", "\n} bit,*pbit;", "\nbit.a=1;", "\nbit.b=7;", "\nbit.c=15;", "\npri", "\u6539\u9519\uff1a", "\n#include ", "int main(void) {", "    int **p;", "\n    int arr[100];", "    p = &arr;", "    return 0;", "\n}", "\n\u89e3\u7b54\uff1a", "\n\u641e\u9519\u4e86,\u662f\u6307\u9488\u7c7b\u578b\u4e0d\u540c,", "\nint **p; //\u4e8c\u7ea7\u6307\u9488", "\n&arr; //\u5f97\u5230\u7684\u662f\u6307\u5411\u7b2c\u4e00\u7ef4\u4e3a100\u7684\u6570\u7ec4\u7684\u6307\u9488", "\n#include "], "title": "C\u8bed\u8a00\u7ec8\u6781\u9762\u8bd5\u5b9d\u5178_C\u8bed\u8a00\u9762\u8bd5\u5fc5"},
{"contents": ["\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "1 . \u7528\u9884\u5904\u7406\u6307\u4ee4#define \u58f0\u660e\u4e00\u4e2a\u5e38\u6570\uff0c\u7528\u4ee5\u8868\u660e1\u5e74\u4e2d\u6709\u591a\u5c11\u79d2\uff08\u5ffd\u7565\u95f0\u5e74\u95ee\u9898\uff09\n", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\u00a0"], "title": "C\u8bed\u8a00\u7b14\u8bd5\u9898\uff08\u7a0b\u5e8f\u5458\u57f9\u8bad\u5b66\u6821\u63d0\u4f9b\u7684\uff09"},
{"contents": ["\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0", "\n\u00a0"], "title": "\u6570\u636e\u7ed3\u6784\u3001\u7b97\u6cd5\u3001C\u8bed\u8a00\u57fa\u7840\u7b14\u8bd5\u9898\uff08\u5e26\u7b54\u6848\uff09"},
{"contents": ["a)\u00a0\u00a0 TCP/IP\u534f\u8bae", "b)\u00a0\u00a0 \u4e3b\u8981\u5c42\u6b21\u7ed3\u6784\u4e3a\uff1a \u5e94\u7528\u5c42/\u4f20\u8f93\u5c42/\u7f51\u7edc\u5c42/\u6570\u94fe\u8def\u5c42\u3002", "c)\u00a0\u00a0 ARP (Address Resolution Protocol)\uff08\u5730\u636e\u5740\u89e3\u6790\u534f\u8bae\uff09", "\u5b9e\u578b\uff08float\uff0cDouble\uff09", "1\u3001\u81ea\u9876\u5411\u4e0b\u96c6\u6210", "\u4f18\u70b9\uff1a\u8f83\u65e9\u5730\u9a8c\u8bc1\u4e86\u4e3b\u8981\u63a7\u5236\u548c\u5224\u65ad\u70b9\uff1b\u6309\u6df1\u5ea6\u4f18\u5148\u53ef\u4ee5\u9996\u5148\u5b9e\u73b0\u548c\u9a8c\u8bc1\u4e00\u4e2a\u5b8c\u6574\u7684\u8f6f\u4ef6\u529f\u80fd\uff1b\u529f\u80fd\u8f83\u65e9\u8bc1\u5b9e\uff0c\u5e26\u6765\u4fe1\u5fc3\uff1b\u53ea\u9700\u4e00\u4e2a\u9a71\u52a8\uff0c\u51cf\u5c11\u9a71\u52a8\u5668\u5f00\u53d1\u7684\u8d39\u7528\uff1b\u652f\u6301\u6545\u969c\u9694\u79bb\u3002", "\u7f3a\u70b9\uff1a\u67f1\u7684\u5f00\u53d1\u91cf\u5927\uff1b\u5e95\u5c42\u9a8c\u8bc1\u88ab\u63a8\u8fdf\uff1b\u5e95\u5c42\u7ec4\u4ef6\u6d4b\u8bd5\u4e0d\u5145\u5206\u3002", "\u9002\u5e94\u4e8e\u4ea7\u54c1\u63a7\u5236\u7ed3\u6784\u6bd4\u8f83\u6e05\u6670\u548c\u7a33\u5b9a\uff1b\u9ad8\u5c42\u63a5\u53e3\u53d8\u5316\u8f83\u5c0f\uff1b\u5e95\u5c42\u63a5\u53e3\u672a\u5b9a\u4e49\u6216\u7ecf\u5e38\u53ef\u80fd\u88ab\u4fee\u6539\uff1b\u4ea7\u53e3\u63a7\u5236\u7ec4\u4ef6\u5177\u6709\u8f83\u5927\u7684\u6280\u672f\u98ce\u9669\uff0c\u9700\u8981\u5c3d\u65e9\u88ab\u9a8c\u8bc1\uff1b\u5e0c\u671b\u5c3d\u65e9\u80fd\u770b\u5230\u4ea7\u54c1\u7684\u7cfb\u7edf\u529f\u80fd\u884c\u4e3a\u3002", "2\u3001\u81ea\u5e95\u5411\u4e0a\u96c6\u6210", "\u4f18\u70b9\uff1a\u5bf9\u5e95\u5c42\u7ec4\u4ef6\u884c\u4e3a\u8f83\u65e9\u9a8c\u8bc1\uff1b", "\u6700\u521d\u53ef\u4ee5\u5e76\u884c\u96c6\u6210\uff0c\u6bd4\u81ea\u9876\u5411\u4e0b\u6548\u7387\u9ad8\uff1b\u51cf\u5c11\u4e86\u6869\u7684\u5de5\u4f5c\u91cf\uff1b\u652f\u6301\u6545\u969c\u9694\u79bb\u3002", "\u7f3a\u70b9\uff1a\u9a71\u52a8\u7684\u5f00\u53d1\u5de5\u4f5c\u91cf\u5927\uff1b\u5bf9\u9ad8\u5c42\u7684\u9a8c\u8bc1\u88ab\u63a8\u8fdf\uff0c\u8bbe\u8ba1\u4e0a\u7684\u9519\u8bef\u4e0d\u80fd\u88ab\u53ca\u65f6\u53d1\u73b0\u3002", "\n\u9002\u5e94\u4e8e\u5e95\u5c42\u63a5\u53e3\u6bd4\u8f83\u7a33\u5b9a\uff1b\u9ad8\u5c42\u63a5\u53e3\u53d8\u5316\u6bd4\u8f83\u9891\u7e41\uff1b\u5e95\u5c42\u7ec4\u4ef6\u8f83\u65e9\u88ab\u5b8c\u6210\u3002"], "title": "\u4e1c\u8f6fC/C++\u7b14\u8bd5\u9898\u53ca\u53c2\u8003\u7b54\u6848"},
{"contents": ["1.\u5934\u6587\u4ef6\u4e2d\u7684\u00a0ifndef/define/endif\u00a0\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f", "\u00a0", "2.#include\u00a0\u00a0<filename.h>\u00a0\u00a0\u00a0\u548c\u00a0\u00a0#include\u00a0\u00a0\u201cfilename.h\u201d\u00a0\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\u00a0", "3.\u8bf7\u8bf4\u660econst\u00a0\u7684\u7528\u9014\u3002\uff08\u81f3\u5c11\u4e24\u79cd\uff09", "\u00a0", "4.\u8bf7\u6307\u51fa\u5176\u533a\u522b:", "const\u00a0char*\u00a0p:", "char\u00a0const\u00a0*p:", "char*\u00a0const\u00a0p:", "5.\u8bf7\u8bf4\u660econtinue\u548cbreak\u7684\u7528\u9014\u3002", "\u00a0", "6.\u8bf7\u8bf4\u660eassert\u7684\u7528\u9014\u3002", "\u00a0", "7.\u6307\u51fa\u4e0b\u9762\u7c7b\u578b\u5206\u522b\u572832\u4f4d\u7cfb\u7edf64\u4f4d\u7cfb\u7edf\u4e0b\u6240\u5360\u7684\u4f4d\u6570\uff1a", "32\u4f4d\u7cfb\u7edf\uff1a", "char:\u00a0 short int\u00a0 long void\u00a0*", "\u00a0", "64\u4f4d\u7cfb\u7edf\uff1a", "char:\u00a0 short int\u00a0 long void*", "\u00a0", "8.\u5199\u51fa\u4e0b\u9762\u64cd\u4f5c\u7684\u7ed3\u679c(\u6240\u6709\u53d8\u91cf\u5747\u4e3a\u6574\u6570)\uff1a", "a.\u8868\u8fbe\u5f0f(a\u00a0=\u00a02,\u00a0b\u00a0=\u00a05,\u00a0b\u00a0++,\u00a0a\u00a0+\u00a0b)\u7684\u7ed3\u679c\uff1a", "b.\u8868\u8fbe\u5f0f(a\u00a0=\u00a02,\u00a0b\u00a0=\u00a05,\u00a0++\u00a0b,\u00a0a\u00a0+\u00a0b)\u7684\u7ed3\u679c\uff1a", "\u00a0", "9.\u8bf7\u6307\u51fa\u4e0b\u9762\u90a3\u79cd\u7c7b\u578b\u7684\u53d8\u91cf\u4e0d\u80fd\u7528\u4e8eswitch\u8bed\u53e5\uff1a", "char,\u00a0unsigned\u00a0char,\u00a0long,\u00a0float,\u00a0double", "10.\u00a0\u5199\u51fa\u4e0b\u9762\u7a0b\u5e8f\u7247\u7684\u6267\u884c\u7ed3\u679c:", "10.1\uff08\u8054\u5408\u4e0e\u4f4d\u57df\uff09", "union", "{", "struct\u00a0{", "unsigned\u00a0int\u00a0x1:2;", "unsigned\u00a0int\u00a0x2:3;", "unsigned\u00a0int\u00a0x3:3;", "}x;", "char\u00a0y;", "}z;", "z.y\u00a0=\u00a0100;", "z.x.x3\u7684\u503c\u4e3a___", "\u00a0", "10.2\u00a0\uff08switch\u8bed\u53e5\u548cbreak\uff09", "int\u00a0n,\u00a0x\u00a0=\u00a05;", "switch(x){", "case\u00a05:\u00a0n\u00a0=\u00a05;", "case\u00a06:\u00a0n\u00a0=\u00a06;", "default:\u00a0n\u00a0=\u00a0-1;", "}", "\u5219\u00a0n\u00a0=\u00a0__;", "\u00a0", "10.3\u00a0(\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7)", "char\u00a0high,\u00a0low,\u00a0word;", "low\u00a0=\u00a05;", "high\u00a0=\u00a010", "word\u00a0=\u00a0high\u00a0<<\u00a03\u00a0+\u00a0low\u00a0;", "\u5219word\u00a0=\u00a0_____", "\u00a0", "10.4\uff08\u6570\u636e\u6ea2\u51fa\uff09", "char\u00a0x\u00a0=\u00a0119;", "char\u00a0y\u00a0=\u00a083;", "char\u00a0z\u00a0=\u00a0x\u00a0+\u00a0y;", "\u5219z\u7684\u503c____", "\u00a0", "10.5\u00a0(\u6307\u9488\u6570\u7ec4)", "int\u00a0a[3][4],\u00a0(*p)[4];", "p\u00a0=\u00a0a;", "\u5219*p+1\u6307\u5411____\u3002", "\u00a0", "10.6\u4ee5\u4e0b\u4e3aWindows\u00a0NT\u4e0b\u768432\u4f4dC\u7a0b\u5e8f\uff0c\u8bf7\u8ba1\u7b97sizeof\u7684\u503c", "char\u00a0\u00a0str[]\u00a0=\u00a0\u201cHello\u201d\u00a0;", "char\u00a0\u00a0\u00a0*p\u00a0=\u00a0str\u00a0;", "int\u00a0\u00a0\u00a0\u00a0\u00a0n\u00a0=\u00a010;", "\u8bf7\u8ba1\u7b97", "sizeof\u00a0(str\u00a0)\u00a0=_____", "sizeof\u00a0(\u00a0p\u00a0)\u00a0=_____", "sizeof\u00a0(\u00a0n\u00a0)\u00a0=_____", "\u00a0", "void\u00a0Func\u00a0(\u00a0char\u00a0str[100])", "{", "\u8bf7\u8ba1\u7b97sizeof(\u00a0str\u00a0)\u00a0=", "}", "\u00a0", "void\u00a0*p\u00a0=\u00a0malloc(\u00a0100\u00a0);\u00a0\u8bf7\u8ba1\u7b97sizeof\u00a0(\u00a0p\u00a0)\u00a0=", "\u00a0", "char\u00a0*str[]={\u201cHello\u201d,\u201dHI\u201d,\u00a0\u201c\\x0\u201d};", "\u8bf7\u8ba1\u7b97\uff1a", "sizeof(str)\u00a0\u00a0\u00a0=", "sizeof(str[0])\u00a0=", "\u00a0", "11.\u5728\u4e00\u4e2a\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784\u91cc\uff0cLO\u8868\u793a\u7b2c\u4e00\u4e2a\u5b58\u50a8\u5355\u5143\u7684\u5730\u5740\uff0c\u8bbe\u6bcf\u4e2a\u5b58\u50a8\u5355\u5143\u7684\u957f\u5ea6\u4e3am\uff0c\u5219\u7b2cn\u4e2a\u5b58\u50a8\u5355\u5143\u7684\u5730\u5740\u4e3a____\u3002", "\u00a0", "\u00a0", "13.\u6709\u5173\u5185\u5b58\u7684\u601d\u8003\u9898", "\u00a0", "\u00a0", "\u00a0", "14.\u7f16\u5199strcpy\u51fd\u6570", "\u5df2\u77e5strcpy\u51fd\u6570\u7684\u539f\u578b\u662f", "char\u00a0*strcpy(char\u00a0*strDest,\u00a0const\u00a0char\u00a0*strSrc);", "\u5176\u4e2dstrDest\u662f\u76ee\u7684\u5b57\u7b26\u4e32\uff0cstrSrc\u662f\u6e90\u5b57\u7b26\u4e32\u3002", "\u00a0", "\uff081\uff09\u4e0d\u8c03\u7528C++/C\u7684\u5b57\u7b26\u4e32\u5e93\u51fd\u6570\uff0c\u8bf7\u7f16\u5199\u51fd\u6570\u00a0strcpy", "\uff082\uff09strcpy\u80fd\u628astrSrc\u7684\u5185\u5bb9\u590d\u5236\u5230strDest\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u8981char\u00a0*\u00a0\u7c7b\u578b\u7684\u8fd4\u56de\u503c\uff1f", "\u00a0", "\u00a0"], "title": "\u535a\u5927\u6b63\u65b9C\u8bed\u8a00\u53c2\u8003\u8bd5\u9898"},
{"contents": ["4.    static\u6709\u4ec0\u4e48\u7528\u9014\uff1f\uff08\u8bf7\u81f3\u5c11\u8bf4\u660e\u4e24\u79cd\uff09", "\n1.\u9650\u5236\u53d8\u91cf\u7684\u4f5c\u7528\u57df", "\n2.\u8bbe\u7f6e\u53d8\u91cf\u7684\u5b58\u50a8\u57df", "\n7.    \u5f15\u7528\u4e0e\u6307\u9488\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n1) \u5f15\u7528\u5fc5\u987b\u88ab\u521d\u59cb\u5316\uff0c\u6307\u9488\u4e0d\u5fc5\u3002", "\n2) \u5f15\u7528\u521d\u59cb\u5316\u4ee5\u540e\u4e0d\u80fd\u88ab\u6539\u53d8\uff0c\u6307\u9488\u53ef\u4ee5\u6539\u53d8\u6240\u6307\u7684\u5bf9\u8c61\u3002", "\n2) \u4e0d\u5b58\u5728\u6307\u5411\u7a7a\u503c\u7684\u5f15\u7528\uff0c\u4f46\u662f\u5b58\u5728\u6307\u5411\u7a7a\u503c\u7684\u6307\u9488\u3002", "8.    \u63cf\u8ff0\u5b9e\u65f6\u7cfb\u7edf\u7684\u57fa\u672c\u7279\u6027", "\n\u5728\u7279\u5b9a\u65f6\u95f4\u5185\u5b8c\u6210\u7279\u5b9a\u7684\u4efb\u52a1\uff0c\u5b9e\u65f6\u6027\u4e0e\u53ef\u9760\u6027", "\n9.    \u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u5728\u5185\u5b58\u4e2d\u662f\u5426\u6709\u533a\u522b\uff1f\u5982\u679c\u6709\uff0c\u662f\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u5168\u5c40\u53d8\u91cf\u50a8\u5b58\u5728\u9759\u6001\u6570\u636e\u5e93\uff0c\u5c40\u90e8\u53d8\u91cf\u5728\u5806\u6808", "\n10.   \u4ec0\u4e48\u662f\u5e73\u8861\u4e8c\u53c9\u6811\uff1f", "\n\u5de6\u53f3\u5b50\u6811\u90fd\u662f\u5e73\u8861\u4e8c\u53c9\u6811 \u4e14\u5de6\u53f3\u5b50\u6811\u7684\u6df1\u5ea6\u5dee\u503c\u7684\u7edd\u5bf9\u503c\u4e0d\u5927\u4e8e1", "\n11.   \u5806\u6808\u6ea2\u51fa\u4e00\u822c\u662f\u7531\u4ec0\u4e48\u539f\u56e0\u5bfc\u81f4\u7684\uff1f", "\n\u6ca1\u6709\u56de\u6536\u5783\u573e\u8d44\u6e90", "\n12.   \u4ec0\u4e48\u51fd\u6570\u4e0d\u80fd\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff1f", "\nconstructor", "\n13.   \u5192\u6ce1\u6392\u5e8f\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u4ec0\u4e48\uff1f", "\nO(n^2)", "\n14.   \u5199\u51fafloat x \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684if\u8bed\u53e5\u3002", "\nif(x>0.000001&&x\n16.   Internet\u91c7\u7528\u54ea\u79cd\u7f51\u7edc\u534f\u8bae\uff1f\u8be5\u534f\u8bae\u7684\u4e3b\u8981\u5c42\u6b21\u7ed3\u6784\uff1f", "\ntcp/ip \u5e94\u7528\u5c42/\u4f20\u8f93\u5c42/\u7f51\u7edc\u5c42/\u6570\u636e\u94fe\u8def\u5c42/\u7269\u7406\u5c42", "\n17.   Internet\u7269\u7406\u5730\u5740\u548cIP\u5730\u5740\u8f6c\u6362\u91c7\u7528\u4ec0\u4e48\u534f\u8bae\uff1f", "\nARP (Address Resolution Protocol)\uff08\u5730\u5740\u89e3\u6790\u5354\u8b70\uff09", "\n18.IP\u5730\u5740\u7684\u7f16\u7801\u5206\u4e3a\u54ea\u4fe9\u90e8\u5206\uff1f", "\nIP\u5730\u5740\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff0c\u7f51\u7edc\u53f7\u548c\u4e3b\u673a\u53f7\u3002\u4e0d\u8fc7\u662f\u8981\u548c\u201c\u5b50\u7f51\u63a9\u7801\u201d\u6309\u4f4d\u4e0e\u4e0a\u4e4b\u540e\u624d\u80fd\u533a\u5206\u54ea\u4e9b\u662f\u7f51\u7edc\u4f4d\u54ea\u4e9b\u662f\u4e3b\u673a\u4f4d\u3002", "2.\u7528\u6237\u8f93\u5165M,N\u503c\uff0c\u4ece1\u81f3N\u5f00\u59cb\u987a\u5e8f\u5faa\u73af\u6570\u6570\uff0c\u6bcf\u6570\u5230M\u8f93\u51fa\u8be5\u6570\u503c\uff0c\u76f4\u81f3\u5168\u90e8\u8f93\u51fa\u3002\u5199\u51faC\u7a0b\u5e8f\u3002", "\n\u5faa\u73af\u94fe\u8868\uff0c\u7528\u53d6\u4f59\u64cd\u4f5c\u505a", "\n3.\u4e0d\u80fd\u505aswitch()\u7684\u53c2\u6570\u7c7b\u578b\u662f\uff1a", "\nswitch\u7684\u53c2\u6570\u4e0d\u80fd\u4e3a\u5b9e\u578b\u3002", "\u83ef\u70ba", "\n1\u3001\u5c40\u90e8\u53d8\u91cf\u80fd\u5426\u548c\u5168\u5c40\u53d8\u91cf\u91cd\u540d\uff1f", "\n\u7b54\uff1a\u80fd\uff0c\u5c40\u90e8\u4f1a\u5c4f\u853d\u5168\u5c40\u3002\u8981\u7528\u5168\u5c40\u53d8\u91cf\uff0c\u9700\u8981\u4f7f\u7528\"::\"", "\n\u5c40\u90e8\u53d8\u91cf\u53ef\u4ee5\u4e0e\u5168\u5c40\u53d8\u91cf\u540c\u540d\uff0c\u5728\u51fd\u6570\u5185\u5f15\u7528\u8fd9\u4e2a\u53d8\u91cf\u65f6\uff0c\u4f1a\u7528\u5230\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u800c\u4e0d\u4f1a\u7528\u5230\u5168\u5c40\u53d8\u91cf\u3002\u5bf9\u4e8e\u6709\u4e9b\u7f16\u8bd1\u5668\u800c\u8a00\uff0c\u5728\u540c\u4e00\u4e2a\u51fd\u6570\u5185\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u6bd4\u5982\u5728\u4e24\u4e2a\u5faa\u73af\u4f53\u5185\u90fd\u5b9a\u4e49\u4e00\u4e2a\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u800c\u90a3\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u5c31\u5728\u90a3\u4e2a\u5faa\u73af\u4f53\u5185", "\n2\u3001\u5982\u4f55\u5f15\u7528\u4e00\u4e2a\u5df2\u7ecf\u5b9a\u4e49\u8fc7\u7684\u5168\u5c40\u53d8\u91cf\uff1f", "\n\u7b54\uff1aextern", "\n\u53ef\u4ee5\u7528\u5f15\u7528\u5934\u6587\u4ef6\u7684\u65b9\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u7528extern\u5173\u952e\u5b57\uff0c\u5982\u679c\u7528\u5f15\u7528\u5934\u6587\u4ef6\u65b9\u5f0f\u6765\u5f15\u7528\u67d0\u4e2a\u5728\u5934\u6587\u4ef6\u4e2d\u58f0\u660e\u7684\u5168\u5c40\u53d8\u7406\uff0c\u5047\u5b9a\u4f60\u5c06\u90a3\u4e2a\u53d8\u5199\u9519\u4e86\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4\u4f1a\u62a5\u9519\uff0c\u5982\u679c\u4f60\u7528extern\u65b9\u5f0f\u5f15\u7528\u65f6\uff0c\u5047\u5b9a\u4f60\u72af\u4e86\u540c\u6837\u7684\u9519\u8bef\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4\u4e0d\u4f1a\u62a5\u9519\uff0c\u800c\u5728\u8fde\u63a5\u671f\u95f4\u62a5\u9519", "\n3\u3001\u5168\u5c40\u53d8\u91cf\u53ef\u4e0d\u53ef\u4ee5\u5b9a\u4e49\u5728\u53ef\u88ab\u591a\u4e2a.C\u6587\u4ef6\u5305\u542b\u7684\u5934\u6587\u4ef6\u4e2d\uff1f\u4e3a\u4ec0\u4e48\uff1f", "\n\u7b54\uff1a\u53ef\u4ee5\uff0c\u5728\u4e0d\u540c\u7684C\u6587\u4ef6\u4e2d\u4ee5static\u5f62\u5f0f\u6765\u58f0\u660e\u540c\u540d\u5168\u5c40\u53d8\u91cf\u3002", "\n\u53ef\u4ee5\u5728\u4e0d\u540c\u7684C\u6587\u4ef6\u4e2d\u58f0\u660e\u540c\u540d\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u524d\u63d0\u662f\u5176\u4e2d\u53ea\u80fd\u6709\u4e00\u4e2aC\u6587\u4ef6\u4e2d\u5bf9\u6b64\u53d8\u91cf\u8d4b\u521d\u503c\uff0c\u6b64\u65f6\u8fde\u63a5\u4e0d\u4f1a\u51fa\u9519", "\n4\u3001\u8bed\u53e5for( \uff1b1 \uff1b)\u6709\u4ec0\u4e48\u95ee\u9898\uff1f\u5b83\u662f\u4ec0\u4e48\u610f\u601d\uff1f", "\n\u7b54\uff1a\u548cwhile(1)\u76f8\u540c\u3002", "\n5\u3001do\u2026\u2026while\u548cwhile\u2026\u2026do\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u7b54\uff1a\u524d\u4e00\u4e2a\u5faa\u73af\u4e00\u904d\u518d\u5224\u65ad\uff0c\u540e\u4e00\u4e2a\u5224\u65ad\u4ee5\u540e\u518d\u5faa\u73af", "\n6\u3001\u8bf7\u5199\u51fa\u4e0b\u5217\u4ee3\u7801\u7684\u8f93\u51fa\u5185\u5bb9", "\n#include", "1\u3001static\u5168\u5c40\u53d8\u91cf\u4e0e\u666e\u901a\u7684\u5168\u5c40\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1fstatic\u5c40\u90e8\u53d8\u91cf\u548c\u666e\u901a\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1fstatic\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u5168\u5c40\u53d8\u91cf(\u5916\u90e8\u53d8\u91cf)\u7684\u8bf4\u660e\u4e4b\u524d\u518d\u51a0\u4ee5static \u5c31\u6784\u6210\u4e86\u9759\u6001\u7684\u5168\u5c40\u53d8\u91cf\u3002\u5168\u5c40\u53d8\u91cf\u672c\u8eab\u5c31\u662f\u9759\u6001\u5b58\u50a8\u65b9\u5f0f\uff0c \u9759\u6001\u5168\u5c40\u53d8\u91cf\u5f53\u7136\u4e5f\u662f\u9759\u6001\u5b58\u50a8\u65b9\u5f0f\u3002 \u8fd9\u4e24\u8005\u5728\u5b58\u50a8\u65b9\u5f0f\u4e0a\u5e76\u65e0\u4e0d\u540c\u3002\u8fd9\u4e24\u8005\u7684\u533a\u522b\u867d\u5728\u4e8e\u975e\u9759\u6001\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u662f\u6574\u4e2a\u6e90\u7a0b\u5e8f\uff0c \u5f53\u4e00\u4e2a\u6e90\u7a0b\u5e8f\u7531\u591a\u4e2a\u6e90\u6587\u4ef6\u7ec4\u6210\u65f6\uff0c\u975e\u9759\u6001\u7684\u5168\u5c40\u53d8\u91cf\u5728\u5404\u4e2a\u6e90\u6587\u4ef6\u4e2d\u90fd\u662f\u6709\u6548\u7684\u3002 \u800c\u9759\u6001\u5168\u5c40\u53d8\u91cf\u5219\u9650\u5236\u4e86\u5176\u4f5c\u7528\u57df\uff0c \u5373\u53ea\u5728\u5b9a\u4e49\u8be5\u53d8\u91cf\u7684\u6e90\u6587\u4ef6\u5185\u6709\u6548\uff0c \u5728\u540c\u4e00\u6e90\u7a0b\u5e8f\u7684\u5176\u5b83\u6e90\u6587\u4ef6\u4e2d\u4e0d\u80fd\u4f7f\u7528\u5b83\u3002\u7531\u4e8e\u9759\u6001\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u5c40\u9650\u4e8e\u4e00\u4e2a\u6e90\u6587\u4ef6\u5185\uff0c\u53ea\u80fd\u4e3a\u8be5\u6e90\u6587\u4ef6\u5185\u7684\u51fd\u6570\u516c\u7528\uff0c \u56e0\u6b64\u53ef\u4ee5\u907f\u514d\u5728\u5176\u5b83\u6e90\u6587\u4ef6\u4e2d\u5f15\u8d77\u9519\u8bef\u3002", "\n\u4ece\u4ee5\u4e0a\u5206\u6790\u53ef\u4ee5\u770b\u51fa\uff0c \u628a\u5c40\u90e8\u53d8\u91cf\u6539\u53d8\u4e3a\u9759\u6001\u53d8\u91cf\u540e\u662f\u6539\u53d8\u4e86\u5b83\u7684\u5b58\u50a8\u65b9\u5f0f\u5373\u6539\u53d8\u4e86\u5b83\u7684\u751f\u5b58\u671f\u3002\u628a\u5168\u5c40\u53d8\u91cf\u6539\u53d8\u4e3a\u9759\u6001\u53d8\u91cf\u540e\u662f\u6539\u53d8\u4e86\u5b83\u7684\u4f5c\u7528\u57df\uff0c \u9650\u5236\u4e86\u5b83\u7684\u4f7f\u7528\u8303\u56f4\u3002", "\nstatic\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u4f5c\u7528\u57df\u4e0d\u540c\u3002\u4ec5\u5728\u672c\u6587\u4ef6\u3002\u53ea\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4e2d\u4f7f\u7528\u7684\u51fd\u6570\u5e94\u8be5\u8bf4\u660e\u4e3a\u5185\u90e8\u51fd\u6570(static)\uff0c\u5185\u90e8\u51fd\u6570\u5e94\u8be5\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4e2d\u8bf4\u660e\u548c\u5b9a\u4e49\u3002\u5bf9\u4e8e\u53ef\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4ee5\u5916\u4f7f\u7528\u7684\u51fd\u6570\uff0c\u5e94\u8be5\u5728\u4e00\u4e2a\u5934\u6587\u4ef6\u4e2d\u8bf4\u660e\uff0c\u8981\u4f7f\u7528\u8fd9\u4e9b\u51fd\u6570\u7684\u6e90\u6587\u4ef6\u8981\u5305\u542b\u8fd9\u4e2a\u5934\u6587\u4ef6", "static\u5168\u5c40\u53d8\u91cf\u4e0e\u666e\u901a\u7684\u5168\u5c40\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u5168\u5c40\u53d8\u91cf\u53ea\u521d\u4f7f\u5316\u4e00\u6b21\uff0c\u9632\u6b62\u5728\u5176\u4ed6\u6587\u4ef6\u5355\u5143\u4e2d\u88ab\u5f15\u7528;", "\nstatic\u5c40\u90e8\u53d8\u91cf\u548c\u666e\u901a\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u5c40\u90e8\u53d8\u91cf\u53ea\u88ab\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u4e0b\u4e00\u6b21\u4f9d\u636e\u4e0a\u4e00\u6b21\u7ed3\u679c\u503c\uff1b", "\nstatic\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u51fd\u6570\u5728\u5185\u5b58\u4e2d\u53ea\u6709\u4e00\u4efd\uff0c\u666e\u901a\u51fd\u6570\u5728\u6bcf\u4e2a\u88ab\u8c03\u7528\u4e2d\u7ef4\u6301\u4e00\u4efd\u62f7\u8d1d", "\n2\u3001\u7a0b\u5e8f\u7684\u5c40\u90e8\u53d8\u91cf\u5b58\u5728\u4e8e\uff08\u5806\u6808\uff09\u4e2d\uff0c\u5168\u5c40\u53d8\u91cf\u5b58\u5728\u4e8e\uff08\u9759\u6001\u533a \uff09\u4e2d\uff0c\u52a8\u6001\u7533\u8bf7\u6570\u636e\u5b58\u5728\u4e8e\uff08 \u5806\uff09\u4e2d\u3002", "\n3\u3001\u8bbe\u6709\u4ee5\u4e0b\u8bf4\u660e\u548c\u5b9a\u4e49\uff1a", "\ntypedef union {long i; int k[5]; char c;} DATE;", "\nstruct data { int cat; DATE cow; double dog;} too;", "\nDATE max;", "\n\u5219\u8bed\u53e5 printf(\u201c%d\u201d,sizeof(struct date)+sizeof(max));\u7684\u6267\u884c\u7ed3\u679c\u662f\uff1a___52____", "\n\u7b54\uff1aDATE\u662f\u4e00\u4e2aunion, \u53d8\u91cf\u516c\u7528\u7a7a\u95f4. \u91cc\u9762\u6700\u5927\u7684\u53d8\u91cf\u7c7b\u578b\u662fint[5], \u5360\u752820\u4e2a\u5b57\u8282. \u6240\u4ee5\u5b83\u7684\u5927\u5c0f\u662f20", "\ndata\u662f\u4e00\u4e2astruct, \u6bcf\u4e2a\u53d8\u91cf\u5206\u5f00\u5360\u7528\u7a7a\u95f4. \u4f9d\u6b21\u4e3aint4 + DATE20 + double8 = 32.", "\n\u6240\u4ee5\u7ed3\u679c\u662f 20 + 32 = 52.", "\n\u5f53\u7136\u2026\u5728\u67d0\u4e9b16\u4f4d\u7f16\u8f91\u5668\u4e0b, int\u53ef\u80fd\u662f2\u5b57\u8282,\u90a3\u4e48\u7ed3\u679c\u662f int2 + DATE10 + double8 = 20", "\n4\u3001\u961f\u5217\u548c\u6808\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u961f\u5217\u5148\u8fdb\u5148\u51fa\uff0c\u6808\u540e\u8fdb\u5148\u51fa", "5\u3001\u5199\u51fa\u4e0b\u5217\u4ee3\u7801\u7684\u8f93\u51fa\u5185\u5bb9", "\n#include", "void show(FUNC2 fun,int arg1, int*arg2)", "\n{", "\nINCp=&inc;", "\nint temp =p(arg1);", "\nfun(&temp,&arg1, arg2);", "\nprintf(\u201c%d\\n\u201d,*arg2);", "\n}", "main()", "\n{", "\nint a;", "\nshow(multi,10,&a);", "\nreturn 0;", "\n}", "\n\u7b54\uff1a110", "\n7\u3001\u8bf7\u627e\u51fa\u4e0b\u9762\u4ee3\u7801\u4e2d\u7684\u6240\u4ee5\u9519\u8bef", "\n\u8bf4\u660e\uff1a\u4ee5\u4e0b\u4ee3\u7801\u662f\u628a\u4e00\u4e2a\u5b57\u7b26\u4e32\u5012\u5e8f\uff0c\u5982\u201cabcd\u201d\u5012\u5e8f\u540e\u53d8\u4e3a\u201cdcba\u201d", "1\u3001#include\u201dstring.h\u201d", "\n2\u3001main()", "\n3\u3001{", "\n4\u3001 char*src=\u201dhello,world\u201d;", "\n5\u3001 char* dest=NULL;", "\n6\u3001 int len=strlen(src);", "\n7\u3001 dest=(char*)malloc(len);", "\n8\u3001 char* d=dest;", "\n9\u3001 char* s=src[len];", "\n10\u3001 while(len\u2013!=0)", "\n11\u3001 d++=s\u2013;", "\n12\u3001 printf(\u201c%s\u201d,dest);", "\n13\u3001 return 0;", "\n14\u3001}", "\n\u7b54\uff1a", "\n\u65b9\u6cd51\uff1a", "\nint main(){", "\nchar* src = \u201chello,world\u201d;", "\nint len = strlen(src);", "\nchar* dest = (char*)malloc(len+1);//\u8981\u4e3a\\0\u5206\u914d\u4e00\u4e2a\u7a7a\u95f4", "\nchar* d = dest;", "\nchar* s = &src[len-1];//\u6307\u5411\u6700\u540e\u4e00\u4e2a\u5b57\u7b26", "\nwhile( len\u2013 != 0 )", "\n*d++=*s\u2013;", "\n*d = 0;//\u5c3e\u90e8\u8981\u52a0\\0", "\nprintf(\u201c%s\\n\u201d,dest);", "\nfree(dest);// \u4f7f\u7528\u5b8c\uff0c\u5e94\u5f53\u91ca\u653e\u7a7a\u95f4\uff0c\u4ee5\u514d\u9020\u6210\u5185\u5b58\u6c47\u6cc4\u9732", "\nreturn 0;", "\n}", "\n\u65b9\u6cd52\uff1a", "\n#include ", "\u5165\u961f:", "\n\u5c06\u65b0\u5143\u7d20push\u5165\u6808A;", "\u51fa\u961f:", "\n(1)\u5224\u65ad\u6808B\u662f\u5426\u4e3a\u7a7a\uff1b", "\n(2)\u5982\u679c\u4e0d\u4e3a\u7a7a\uff0c\u5219\u5c06\u6808A\u4e2d\u6240\u6709\u5143\u7d20\u4f9d\u6b21pop\u51fa\u5e76push\u5230\u6808B\uff1b", "\n(3)\u5c06\u6808B\u7684\u6808\u9876\u5143\u7d20pop\u51fa\uff1b", "\u8fd9\u6837\u5b9e\u73b0\u7684\u961f\u5217\u5165\u961f\u548c\u51fa\u961f\u7684\u5e73\u644a\u590d\u6742\u5ea6\u90fd\u8fd8\u662fO(1), \u6bd4\u4e0a\u9762\u7684\u51e0\u79cd\u65b9\u6cd5\u8981\u597d\u30023.\u5728c\u8bed\u8a00\u5e93\u51fd\u6570\u4e2d\u5c06\u4e00\u4e2a\u5b57\u7b26\u8f6c\u6362\u6210\u6574\u578b\u7684\u51fd\u6570\u662fatool()\u5417\uff0c\u8fd9\u4e2a\u51fd\u6570\u7684\u539f\u578b\u662f\u4ec0\u4e48\uff1f", "\n\u51fd\u6570\u540d: atol", "\n\u529f \u80fd: \u628a\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u957f\u6574\u578b\u6570", "\n\u7528 \u6cd5: long atol(const char *nptr);", "\n\u7a0b\u5e8f\u4f8b:", "\n#include ", "l = atol(lstr);", "\nprintf(\u201cstring = %s integer = %ld\\n\u201d, str, l);", "\nreturn(0);", "\n}", "2.\u5bf9\u4e8e\u4e00\u4e2a\u9891\u7e41\u4f7f\u7528\u7684\u77ed\u5c0f\u51fd\u6570,\u5728C\u8bed\u8a00\u4e2d\u5e94\u7528\u4ec0\u4e48\u5b9e\u73b0,\u5728C++\u4e2d\u5e94\u7528\u4ec0\u4e48\u5b9e\u73b0?", "\nc\u7528\u5b8f\u5b9a\u4e49\uff0cc++\u7528inline", "\n  3.\u76f4\u63a5\u94fe\u63a5\u4e24\u4e2a\u4fe1\u4ee4\u70b9\u7684\u4e00\u7ec4\u94fe\u8def\u79f0\u4f5c\u4ec0\u4e48?", "\nPPP\u70b9\u5230\u70b9\u8fde\u63a5", "\n  4.\u63a5\u5165\u7f51\u7528\u7684\u662f\u4ec0\u4e48\u63a5\u53e3?", "\n  5.voip\u90fd\u7528\u4e86\u90a3\u4e9b\u534f\u8bae?", "\n  6.\u8f6f\u4ef6\u6d4b\u8bd5\u90fd\u6709\u90a3\u4e9b\u79cd\u7c7b?", "\n\u9ed1\u76d2\uff1a\u9488\u5bf9\u7cfb\u7edf\u529f\u80fd\u7684\u6d4b\u8bd5    \u767d\u5408\uff1a\u6d4b\u8bd5\u51fd\u6570\u529f\u80fd\uff0c\u5404\u51fd\u6570\u63a5\u53e3", "\n  7.\u786e\u5b9a\u6a21\u5757\u7684\u529f\u80fd\u548c\u6a21\u5757\u7684\u63a5\u53e3\u662f\u5728\u8f6f\u4ef6\u8bbe\u8ba1\u7684\u90a3\u4e2a\u961f\u6bb5\u5b8c\u6210\u7684?", "\n\u6982\u8981\u8bbe\u8ba1\u9636\u6bb5", "\n  8.enum string", "\n    {", "\n    x1,", "\n    x2,", "\n    x3=10,", "\n    x4,", "\n    x5,", "\n    }x;", "\n   \u95eex= 0\u00d7801005\uff0c0x8010f4  ;", "\n  9.unsigned char *p1;", "\n    unsigned long *p2;", "\n    p1=(unsigned char *)0\u00d7801000;", "\n    p2=(unsigned long *)0\u00d7810000;", "\n    \u8bf7\u95eep1+5=  ;", "\n        p2+5=  ;", "\n\u4e09.\u9009\u62e9\u9898:", "\n  1.Ethternet\u94fe\u63a5\u5230Internet\u7528\u5230\u4ee5\u4e0b\u90a3\u4e2a\u534f\u8bae?", "\n  A.HDLC;B.ARP;C.UDP;D.TCP;E.ID", "\n  2.\u5c5e\u4e8e\u7f51\u7edc\u5c42\u534f\u8bae\u7684\u662f:", "\n  A.TCP;B.IP;C.ICMP;D.X.25", "\n  3.Windows\u6d88\u606f\u8c03\u5ea6\u673a\u5236\u662f:", "\n  A.\u6307\u4ee4\u961f\u5217;B.\u6307\u4ee4\u5806\u6808;C.\u6d88\u606f\u961f\u5217;D.\u6d88\u606f\u5806\u6808;", "\n  4.unsigned short hash(unsigned short key)", "\n    {", "\n      return (key>>)%256", "\n    }", "\n   \u8bf7\u95eehash(16),hash(256)\u7684\u503c\u5206\u522b\u662f:", "\n  A.1.16;B.8.32;C.4.16;D.1.32", "\n\u56db.\u627e\u9519\u9898:", "\n  1.\u8bf7\u95ee\u4e0b\u9762\u7a0b\u5e8f\u6709\u4ec0\u4e48\u9519\u8bef?", "\n   int a[60][250][1000],i,j,k;", "\n   for(k=0;k\n    for(j=0;j\n     for(i=0;i\n      a[i][j][k]=0;", "\n\u628a\u5faa\u73af\u8bed\u53e5\u5185\u5916\u6362\u4e00\u4e0b", "\n  2.#define Max_CB 500", "\n    void LmiQueryCSmd(Struct MSgCB * pmsg)", "\n     {", "\n     unsigned char ucCmdNum;", "\n     ......", "     for(ucCmdNum=0;ucCmdNum", "\n      {", "\n      ......;", "\n      }", "\n\u6b7b\u5faa\u73af", "\n   3.\u4ee5\u4e0b\u662f\u6c42\u4e00\u4e2a\u6570\u7684\u5e73\u65b9\u7684\u7a0b\u5e8f,\u8bf7\u627e\u51fa\u9519\u8bef:", "\n    #define SQUARE(a)((a)*(a))", "\n    int a=5;", "\n    int b;", "\n    b=SQUARE(a++);", "\n   4.typedef unsigned char BYTE", "\n     int examply_fun(BYTE gt_len; BYTE *gt_code)", "\n      {", "\n      BYTE *gt_buf;", "\n      gt_buf=(BYTE *)MALLOC(Max_GT_Length);", "\n      ......", "\n      if(gt_len>Max_GT_Length)", "\n        {", "\n        return GT_Length_ERROR;", "\n        }", "\n        \u2026\u2026.", "\n      }", "\n\u4e94.\u95ee\u7b54\u9898:", "\n   1.IP Phone\u7684\u539f\u7406\u662f\u4ec0\u4e48?", "\nIPV6", "\n   2.TCP/IP\u901a\u4fe1\u5efa\u7acb\u7684\u8fc7\u7a0b\u600e\u6837\uff0c\u7aef\u53e3\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f", "\n\u4e09\u6b21\u63e1\u624b\uff0c\u786e\u5b9a\u662f\u54ea\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u8be5\u534f\u8bae", "\n   3.1\u53f7\u4fe1\u4ee4\u548c7\u53f7\u4fe1\u4ee4\u6709\u4ec0\u4e48\u533a\u522b\uff0c\u6211\u56fd\u67d0\u524d\u5e7f\u6cdb\u4f7f\u7528\u7684\u662f\u90a3\u4e00\u79cd\uff1f", "\n   4.\u5217\u4e3e5\u79cd\u4ee5\u4e0a\u7684\u7535\u8bdd\u65b0\u4e1a\u52a1\uff1f", "\u5fae\u8f6f\u4e9a\u6d32\u6280\u672f\u4e2d\u5fc3\u7684\u9762\u8bd5\u9898\uff01\uff01\uff01", "\n1\uff0e\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7684\u5dee\u522b\u3002", "\n\u7ebf\u7a0b\u662f\u6307\u8fdb\u7a0b\u5185\u7684\u4e00\u4e2a\u6267\u884c\u5355\u5143,\u4e5f\u662f\u8fdb\u7a0b\u5185\u7684\u53ef\u8c03\u5ea6\u5b9e\u4f53.", "\n\u4e0e\u8fdb\u7a0b\u7684\u533a\u522b:", "\n(1)\u8c03\u5ea6\uff1a\u7ebf\u7a0b\u4f5c\u4e3a\u8c03\u5ea6\u548c\u5206\u914d\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u8fdb\u7a0b\u4f5c\u4e3a\u62e5\u6709\u8d44\u6e90\u7684\u57fa\u672c\u5355\u4f4d", "\n(2)\u5e76\u53d1\u6027\uff1a\u4e0d\u4ec5\u8fdb\u7a0b\u4e4b\u95f4\u53ef\u4ee5\u5e76\u53d1\u6267\u884c\uff0c\u540c\u4e00\u4e2a\u8fdb\u7a0b\u7684\u591a\u4e2a\u7ebf\u7a0b\u4e4b\u95f4\u4e5f\u53ef\u5e76\u53d1\u6267\u884c", "\n(3)\u62e5\u6709\u8d44\u6e90\uff1a\u8fdb\u7a0b\u662f\u62e5\u6709\u8d44\u6e90\u7684\u4e00\u4e2a\u72ec\u7acb\u5355\u4f4d\uff0c\u7ebf\u7a0b\u4e0d\u62e5\u6709\u7cfb\u7edf\u8d44\u6e90\uff0c\u4f46\u53ef\u4ee5\u8bbf\u95ee\u96b6\u5c5e\u4e8e\u8fdb\u7a0b\u7684\u8d44\u6e90.", "\n(4)\u7cfb\u7edf\u5f00\u9500\uff1a\u5728\u521b\u5efa\u6216\u64a4\u6d88\u8fdb\u7a0b\u65f6\uff0c\u7531\u4e8e\u7cfb\u7edf\u90fd\u8981\u4e3a\u4e4b\u5206\u914d\u548c\u56de\u6536\u8d44\u6e90\uff0c\u5bfc\u81f4\u7cfb\u7edf\u7684\u5f00\u9500\u660e\u663e\u5927\u4e8e\u521b\u5efa\u6216\u64a4\u6d88\u7ebf\u7a0b\u65f6\u7684\u5f00\u9500\u3002", "\n2.\u6d4b\u8bd5\u65b9\u6cd5", "\n\u4eba\u5de5\u6d4b\u8bd5\uff1a\u4e2a\u4eba\u590d\u67e5\u3001\u62bd\u67e5\u548c\u4f1a\u5ba1", "\n\u673a\u5668\u6d4b\u8bd5\uff1a\u9ed1\u76d2\u6d4b\u8bd5\u548c\u767d\u76d2\u6d4b\u8bd5", "2\uff0eHeap\u4e0estack\u7684\u5dee\u522b\u3002", "\nHeap\u662f\u5806\uff0cstack\u662f\u6808\u3002", "\nStack\u7684\u7a7a\u95f4\u7531\u64cd\u4f5c\u7cfb\u7edf\u81ea\u52a8\u5206\u914d/\u91ca\u653e\uff0cHeap\u4e0a\u7684\u7a7a\u95f4\u624b\u52a8\u5206\u914d/\u91ca\u653e\u3002", "\nStack\u7a7a\u95f4\u6709\u9650\uff0cHeap\u662f\u5f88\u5927\u7684\u81ea\u7531\u5b58\u50a8\u533a", "\nC\u4e2d\u7684malloc\u51fd\u6570\u5206\u914d\u7684\u5185\u5b58\u7a7a\u95f4\u5373\u5728\u5806\u4e0a,C++\u4e2d\u5bf9\u5e94\u7684\u662fnew\u64cd\u4f5c\u7b26\u3002", "\n\u7a0b\u5e8f\u5728\u7f16\u8bd1\u671f\u5bf9\u53d8\u91cf\u548c\u51fd\u6570\u5206\u914d\u5185\u5b58\u90fd\u5728\u6808\u4e0a\u8fdb\u884c,\u4e14\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u51fd\u6570\u8c03\u7528\u65f6\u53c2\u6570\u7684\u4f20\u9012\u4e5f\u5728\u6808\u4e0a\u8fdb\u884c", "\n3\uff0eWindows\u4e0b\u7684\u5185\u5b58\u662f\u5982\u4f55\u7ba1\u7406\u7684\uff1f", "\n4\uff0e\u4ecb\u7ecd.Net\u548c.Net\u7684\u5b89\u5168\u6027\u3002", "\n5\uff0e\u5ba2\u6237\u7aef\u5982\u4f55\u8bbf\u95ee.Net\u7ec4\u4ef6\u5b9e\u73b0Web Service\uff1f", "\n6\uff0eC/C++\u7f16\u8bd1\u5668\u4e2d\u865a\u8868\u662f\u5982\u4f55\u5b8c\u6210\u7684\uff1f", "\n7\uff0e\u8c08\u8c08COM\u7684\u7ebf\u7a0b\u6a21\u578b\u3002\u7136\u540e\u8ba8\u8bba\u8fdb\u7a0b\u5185/\u5916\u7ec4\u4ef6\u7684\u5dee\u522b\u3002", "\n8\uff0e\u8c08\u8c08IA32\u4e0b\u7684\u5206\u9875\u673a\u5236", "\n\u5c0f\u9875(4K)\u4e24\u7ea7\u5206\u9875\u6a21\u5f0f\uff0c\u5927\u9875(4M)\u4e00\u7ea7", "\n9\uff0e\u7ed9\u4e24\u4e2a\u53d8\u91cf\uff0c\u5982\u4f55\u627e\u51fa\u4e00\u4e2a\u5e26\u73af\u5355\u94fe\u8868\u4e2d\u662f\u4ec0\u4e48\u5730\u65b9\u51fa\u73b0\u73af\u7684\uff1f", "\n\u4e00\u4e2a\u9012\u589e\u4e00\uff0c\u4e00\u4e2a\u9012\u589e\u4e8c\uff0c\u4ed6\u4eec\u6307\u5411\u540c\u4e00\u4e2a\u63a5\u70b9\u65f6\u5c31\u662f\u73af\u51fa\u73b0\u7684\u5730\u65b9", "\n10\uff0e\u5728IA32\u4e2d\u4e00\u5171\u6709\u591a\u5c11\u79cd\u529e\u6cd5\u4ece\u7528\u6237\u6001\u8df3\u5230\u5185\u6838\u6001\uff1f", "\n\u901a\u8fc7\u8c03\u7528\u95e8\uff0c\u4ecering3\u5230ring0\uff0c\u4e2d\u65ad\u4ecering3\u5230ring0\uff0c\u8fdb\u5165vm86\u7b49\u7b49", "\n11\uff0e\u5982\u679c\u53ea\u60f3\u8ba9\u7a0b\u5e8f\u6709\u4e00\u4e2a\u5b9e\u4f8b\u8fd0\u884c\uff0c\u4e0d\u80fd\u8fd0\u884c\u4e24\u4e2a\u3002\u50cfwinamp\u4e00\u6837\uff0c\u53ea\u80fd\u5f00\u4e00\u4e2a\u7a97\u53e3\uff0c\u600e\u6837\u5b9e\u73b0\uff1f", "\n\u7528\u5185\u5b58\u6620\u5c04\u6216\u5168\u5c40\u539f\u5b50\uff08\u4e92\u65a5\u53d8\u91cf\uff09\u3001\u67e5\u627e\u7a97\u53e3\u53e5\u67c4..", "\nFindWindow\uff0c\u4e92\u65a5\uff0c\u5199\u6807\u5fd7\u5230\u6587\u4ef6\u6216\u6ce8\u518c\u8868,\u5171\u4eab\u5185\u5b58\u3002.\u3000", "\n12\uff0e\u5982\u4f55\u622a\u53d6\u952e\u76d8\u7684\u54cd\u5e94\uff0c\u8ba9\u6240\u6709\u7684\u2018a\u2019\u53d8\u6210\u2018b\u2019\uff1f", "\n\u952e\u76d8\u94a9\u5b50SetWindowsHookEx", "\n\u300013\uff0eApartment\u5728COM\u4e2d\u6709\u4ec0\u4e48\u7528\uff1f\u4e3a\u4ec0\u4e48\u8981\u5f15\u5165\uff1f", "\n\u300014\uff0e\u5b58\u50a8\u8fc7\u7a0b\u662f\u4ec0\u4e48\uff1f\u6709\u4ec0\u4e48\u7528\uff1f\u6709\u4ec0\u4e48\u4f18\u70b9\uff1f", "\n\u6211\u7684\u7406\u89e3\u5c31\u662f\u4e00\u5806sql\u7684\u96c6\u5408\uff0c\u53ef\u4ee5\u5efa\u7acb\u975e\u5e38\u590d\u6742\u7684\u67e5\u8be2\uff0c\u7f16\u8bd1\u8fd0\u884c\uff0c\u6240\u4ee5\u8fd0\u884c\u4e00\u6b21\u540e\uff0c\u4ee5\u540e\u518d\u8fd0\u884c\u901f\u5ea6\u6bd4\u5355\u72ec\u6267\u884cSQL\u5feb\u5f88\u591a", "\n\u300015\uff0eTemplate\u6709\u4ec0\u4e48\u7279\u70b9\uff1f\u4ec0\u4e48\u65f6\u5019\u7528\uff1f", "\n16\uff0e\u8c08\u8c08Windows DNA\u7ed3\u6784\u7684\u7279\u70b9\u548c\u4f18\u70b9\u3002", "\u7f51\u7edc\u7f16\u7a0b\u4e2d\u8bbe\u8ba1\u5e76\u53d1\u670d\u52a1\u5668\uff0c\u4f7f\u7528\u591a\u8fdb\u7a0b \u4e0e \u591a\u7ebf\u7a0b \uff0c\u8bf7\u95ee\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n1\uff0c\u8fdb\u7a0b\uff1a\u5b50\u8fdb\u7a0b\u662f\u7236\u8fdb\u7a0b\u7684\u590d\u5236\u54c1\u3002\u5b50\u8fdb\u7a0b\u83b7\u5f97\u7236\u8fdb\u7a0b\u6570\u636e\u7a7a\u95f4\u3001\u5806\u548c\u6808\u7684\u590d\u5236\u54c1\u3002", "\n2\uff0c\u7ebf\u7a0b\uff1a\u76f8\u5bf9\u4e0e\u8fdb\u7a0b\u800c\u8a00\uff0c\u7ebf\u7a0b\u662f\u4e00\u4e2a\u66f4\u52a0\u63a5\u8fd1\u4e0e\u6267\u884c\u4f53\u7684\u6982\u5ff5\uff0c\u5b83\u53ef\u4ee5\u4e0e\u540c\u8fdb\u7a0b\u7684\u5176\u4ed6\u7ebf\u7a0b\u5171\u4eab\u6570\u636e\uff0c\u4f46\u62e5\u6709\u81ea\u5df1\u7684\u6808\u7a7a\u95f4\uff0c\u62e5\u6709\u72ec\u7acb\u7684\u6267\u884c\u5e8f\u5217\u3002", "\n\u4e24\u8005\u90fd\u53ef\u4ee5\u63d0\u9ad8\u7a0b\u5e8f\u7684\u5e76\u53d1\u5ea6\uff0c\u63d0\u9ad8\u7a0b\u5e8f\u8fd0\u884c\u6548\u7387\u548c\u54cd\u5e94\u65f6\u95f4\u3002", "\n\u7ebf\u7a0b\u548c\u8fdb\u7a0b\u5728\u4f7f\u7528\u4e0a\u5404\u6709\u4f18\u7f3a\u70b9\uff1a\u7ebf\u7a0b\u6267\u884c\u5f00\u9500\u5c0f\uff0c\u4f46\u4e0d\u5229\u4e8e\u8d44\u6e90\u7ba1\u7406\u548c\u4fdd\u62a4\uff1b\u800c\u8fdb\u7a0b\u6b63\u76f8\u53cd\u3002\u540c\u65f6\uff0c\u7ebf\u7a0b\u9002\u5408\u4e8e\u5728SMP\u673a\u5668\u4e0a\u8fd0\u884c\uff0c\u800c\u8fdb\u7a0b\u5219\u53ef\u4ee5\u8de8\u673a\u5668\u8fc1\u79fb\u3002", "\u601d\u79d1", "\n1. \u7528\u5b8f\u5b9a\u4e49\u5199\u51faswap\uff08x\uff0cy\uff09", "\n#define swap(x, y)\\", "\nx = x + y;\\", "\ny = x \u2013 y;\\", "\nx = x \u2013 y;", "\n2.\u6570\u7ec4a[N]\uff0c\u5b58\u653e\u4e861\u81f3N-1\u4e2a\u6570\uff0c\u5176\u4e2d\u67d0\u4e2a\u6570\u91cd\u590d\u4e00\u6b21\u3002\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u627e\u51fa\u88ab\u91cd\u590d\u7684\u6570\u5b57.\u65f6\u95f4\u590d\u6742\u5ea6\u5fc5\u987b\u4e3ao\uff08N\uff09\u51fd\u6570\u539f\u578b\uff1a", "\nint do_dup(int a[],int N)", "\n3 \u4e00\u8bed\u53e5\u5b9e\u73b0x\u662f\u5426\u4e3a2\u7684\u82e5\u5e72\u6b21\u5e42\u7684\u5224\u65ad", "\nint i = 512;", "\ncout \n4.unsigned int intvert(unsigned int x,int p,int n)\u5b9e\u73b0\u5bf9x\u7684\u8fdb\u884c\u8f6c\u6362,p\u4e3a\u8d77\u59cb\u8f6c\u5316\u4f4d,n\u4e3a\u9700\u8981\u8f6c\u6362\u7684\u957f\u5ea6,\u5047\u8bbe\u8d77\u59cb\u70b9\u5728\u53f3\u8fb9.\u5982x=0b0001 0001,p=4,n=3\u8f6c\u6362\u540ex=0b0110 0001", "\nunsigned int intvert(unsigned int x,int p,int n){", "\nunsigned int _t = 0;", "\nunsigned int _a = 1;", "\nfor(int i = 0; i \n_t |= _a;", "\n_a = _a \n}", "\n_t = _t \nx ^= _t;", "\nreturn x;", "\n}", "\u6167\u901a\uff1a", "\n\u4ec0\u4e48\u662f\u9884\u7f16\u8bd1", "\n\u4f55\u65f6\u9700\u8981\u9884\u7f16\u8bd1\uff1a", "\n\uff11\u3001\u603b\u662f\u4f7f\u7528\u4e0d\u7ecf\u5e38\u6539\u52a8\u7684\u5927\u578b\u4ee3\u7801\u4f53\u3002", "\n\uff12\u3001\u7a0b\u5e8f\u7531\u591a\u4e2a\u6a21\u5757\u7ec4\u6210\uff0c\u6240\u6709\u6a21\u5757\u90fd\u4f7f\u7528\u4e00\u7ec4\u6807\u51c6\u7684\u5305\u542b\u6587\u4ef6\u548c\u76f8\u540c\u7684\u7f16\u8bd1\u9009\u9879\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u5c06\u6240\u6709\u5305\u542b\u6587\u4ef6\u9884\u7f16\u8bd1\u4e3a\u4e00\u4e2a\u9884\u7f16\u8bd1\u5934\u3002", "\nchar * const p;", "\nchar const * p", "\nconst char *p", "\u4e0a\u8ff0\u4e09\u4e2a\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\nchar * const p; //\u5e38\u91cf\u6307\u9488\uff0cp\u7684\u503c\u4e0d\u53ef\u4ee5\u4fee\u6539", "\nchar const * p\uff1b//\u6307\u5411\u5e38\u91cf\u7684\u6307\u9488\uff0c\u6307\u5411\u7684\u5e38\u91cf\u503c\u4e0d\u53ef\u4ee5\u6539", "\nconst char *p\uff1b //\u548cchar const *p", "char str1[] = \"abc\";", "\nchar str2[] = \"abc\";", "const char str3[] = \"abc\";", "\nconst char str4[] = \"abc\";", "const char *str5 = \"abc\";", "\nconst char *str6 = \"abc\";", "char *str7 = \"abc\";", "\nchar *str8 = \"abc\";", "cout \ncout \ncout \ncout \n", "\u7ed3\u679c\u662f\uff1a0 0 1 1", "\n\u89e3\u7b54\uff1astr1,str2,str3,str4\u662f\u6570\u7ec4\u53d8\u91cf\uff0c\u5b83\u4eec\u6709\u5404\u81ea\u7684\u5185\u5b58\u7a7a\u95f4\uff1b", "\n\u800cstr5,str6,str7,str8\u662f\u6307\u9488\uff0c\u5b83\u4eec\u6307\u5411\u76f8\u540c\u7684\u5e38\u91cf\u533a\u57df\u3002", "12. \u4ee5\u4e0b\u4ee3\u7801\u4e2d\u7684\u4e24\u4e2asizeof\u7528\u6cd5\u6709\u95ee\u9898\u5417\uff1f[C\u6613]", "\nvoid UpperCase( char str[] ) // \u5c06 str \u4e2d\u7684\u5c0f\u5199\u5b57\u6bcd\u8f6c\u6362\u6210\u5927\u5199\u5b57\u6bcd", "\n{", "\n    for( size_t i=0; i", "\n        if( 'a'\n            str[i] -= ('a'-'A' );", "\n}", "\nchar str[] = \"aBcDe\";", "\ncout \nUpperCase( str );", "\ncout \n", "\u7b54\uff1a\u51fd\u6570\u5185\u7684sizeof\u6709\u95ee\u9898\u3002\u6839\u636e\u8bed\u6cd5\uff0csizeof\u5982\u7528\u4e8e\u6570\u7ec4\uff0c\u53ea\u80fd\u6d4b\u51fa\u9759\u6001\u6570\u7ec4\u7684\u5927\u5c0f\uff0c\u65e0\u6cd5\u68c0\u6d4b\u52a8\u6001\u5206\u914d\u7684\u6216\u5916\u90e8\u6570\u7ec4\u5927\u5c0f\u3002\u51fd\u6570\u5916\u7684str\u662f\u4e00\u4e2a\u9759\u6001\u5b9a\u4e49\u7684\u6570\u7ec4\uff0c\u56e0\u6b64\u5176\u5927\u5c0f\u4e3a6\uff0c\u51fd\u6570\u5185\u7684str\u5b9e\u9645\u53ea\u662f\u4e00\u4e2a\u6307\u5411\u5b57\u7b26\u4e32\u7684\u6307\u9488\uff0c\u6ca1\u6709\u4efb\u4f55\u989d\u5916\u7684\u4e0e\u6570\u7ec4\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u56e0\u6b64sizeof\u4f5c\u7528\u4e8e\u4e0a\u53ea\u5c06\u5176\u5f53\u6307\u9488\u770b\uff0c\u4e00\u4e2a\u6307\u9488\u4e3a4\u4e2a\u5b57\u8282\uff0c\u56e0\u6b64\u8fd4\u56de4\u3002", "\u4e00\u4e2a32\u4f4d\u7684\u673a\u5668,\u8be5\u673a\u5668\u7684\u6307\u9488\u662f\u591a\u5c11\u4f4d", "\n\u6307\u9488\u662f\u591a\u5c11\u4f4d\u53ea\u8981\u770b\u5730\u5740\u603b\u7ebf\u7684\u4f4d\u6570\u5c31\u884c\u4e86\u300280386\u4ee5\u540e\u7684\u673a\u5b50\u90fd\u662f32\u7684\u6570\u636e\u603b\u7ebf\u3002\u6240\u4ee5\u6307\u9488\u7684\u4f4d\u6570\u5c31\u662f4\u4e2a\u5b57\u8282\u4e86\u3002", "main()", "\n{", "\n  int a[5]={1,2,3,4,5};", "\n   int *ptr=(int *)(&a+1);", "   printf(\"%d,%d\",*(a+1),*(ptr-1));", "\n}", "\n\u8f93\u51fa\uff1a2,5", "\n*(a+1\uff09\u5c31\u662fa[1]\uff0c*(ptr-1)\u5c31\u662fa[4],\u6267\u884c\u7ed3\u679c\u662f2\uff0c5", "\n&a+1\u4e0d\u662f\u9996\u5730\u5740+1\uff0c\u7cfb\u7edf\u4f1a\u8ba4\u4e3a\u52a0\u4e00\u4e2aa\u6570\u7ec4\u7684\u504f\u79fb\uff0c\u662f\u504f\u79fb\u4e86\u4e00\u4e2a\u6570\u7ec4\u7684\u5927\u5c0f\uff08\u672c\u4f8b\u662f5\u4e2aint\uff09", "\nint *ptr=(int *)(&a+1);", "\n\u5219ptr\u5b9e\u9645\u662f&(a[5]),\u4e5f\u5c31\u662fa+5", "\n\u539f\u56e0\u5982\u4e0b\uff1a", "\n&a\u662f\u6570\u7ec4\u6307\u9488\uff0c\u5176\u7c7b\u578b\u4e3a int (*)[5];", "\n\u800c\u6307\u9488\u52a01\u8981\u6839\u636e\u6307\u9488\u7c7b\u578b\u52a0\u4e0a\u4e00\u5b9a\u7684\u503c\uff0c", "\n\u4e0d\u540c\u7c7b\u578b\u7684\u6307\u9488+1\u4e4b\u540e\u589e\u52a0\u7684\u5927\u5c0f\u4e0d\u540c", "\na\u662f\u957f\u5ea6\u4e3a5\u7684int\u6570\u7ec4\u6307\u9488\uff0c\u6240\u4ee5\u8981\u52a0 5*sizeof(int)", "\n\u6240\u4ee5ptr\u5b9e\u9645\u662fa[5]", "\n\u4f46\u662fprt\u4e0e(&a+1)\u7c7b\u578b\u662f\u4e0d\u4e00\u6837\u7684(\u8fd9\u70b9\u5f88\u91cd\u8981)", "\n\u6240\u4ee5prt-1\u53ea\u4f1a\u51cf\u53bbsizeof(int*)", "\na,&a\u7684\u5730\u5740\u662f\u4e00\u6837\u7684\uff0c\u4f46\u610f\u601d\u4e0d\u4e00\u6837\uff0ca\u662f\u6570\u7ec4\u9996\u5730\u5740\uff0c\u4e5f\u5c31\u662fa[0]\u7684\u5730\u5740\uff0c&a\u662f\u5bf9\u8c61\uff08\u6570\u7ec4\uff09\u9996\u5730\u5740\uff0ca+1\u662f\u6570\u7ec4\u4e0b\u4e00\u5143\u7d20\u7684\u5730\u5740\uff0c\u5373a[1],&a+1\u662f\u4e0b\u4e00\u4e2a\u5bf9\u8c61\u7684\u5730\u5740\uff0c\u5373a[5].", "1.\u8bf7\u95ee\u4ee5\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1a", "\nint  main()", "\n{", "\nchar a;", "\nchar *str=&a;", "\nstrcpy(str,\"hello\");", "\nprintf(str);", "\nreturn 0;", "\n}", "\n\u6ca1\u6709\u4e3astr\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff0c\u5c06\u4f1a\u53d1\u751f\u5f02\u5e38", "\n\u95ee\u9898\u51fa\u5728\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u590d\u5236\u8fdb\u4e00\u4e2a\u5b57\u7b26\u53d8\u91cf\u6307\u9488\u6240\u6307\u5730\u5740\u3002\u867d\u7136\u53ef\u4ee5\u6b63\u786e\u8f93\u51fa\u7ed3\u679c\uff0c\u4f46\u56e0\u4e3a\u8d8a\u754c\u8fdb\u884c\u5185\u5728\u8bfb\u5199\u800c\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\u3002", "char* s=\"AAA\";", "\nprintf(\"%s\",s);", "\ns[0]='B';", "\nprintf(\"%s\",s);", "\n\u6709\u4ec0\u4e48\u9519\uff1f", "\n\"AAA\"\u662f\u5b57\u7b26\u4e32\u5e38\u91cf\u3002s\u662f\u6307\u9488\uff0c\u6307\u5411\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5e38\u91cf\uff0c\u6240\u4ee5\u58f0\u660es\u7684\u65f6\u5019\u5c31\u6709\u95ee\u9898\u3002", "\ncosnt char* s=\"AAA\";", "\n\u7136\u540e\u53c8\u56e0\u4e3a\u662f\u5e38\u91cf\uff0c\u6240\u4ee5\u5bf9\u662fs[0]\u7684\u8d4b\u503c\u64cd\u4f5c\u662f\u4e0d\u5408\u6cd5\u7684\u3002", "1\u3001\u5199\u4e00\u4e2a\u201c\u6807\u51c6\u201d\u5b8f\uff0c\u8fd9\u4e2a\u5b8f\u8f93\u5165\u4e24\u4e2a\u53c2\u6570\u5e76\u8fd4\u56de\u8f83\u5c0f\u7684\u4e00\u4e2a\u3002", "\n.#define Min(X, Y) ((X)>(Y)?(Y):(X))//\u7ed3\u5c3e\u6ca1\u6709;", "\n2\u3001\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\u7ecf\u5e38\u8981\u7528\u5230\u65e0\u9650\u5faa\u73af\uff0c\u4f60\u600e\u4e48\u7528C\u7f16\u5199\u6b7b\u5faa\u73af\u3002", "\nwhile(1){}\u6216\u8005for(;;)", "\n3\u3001\u5173\u952e\u5b57static\u7684\u4f5c\u7528\u662f\u4ec0\u4e48\uff1f", "\n\u5b9a\u4e49\u9759\u6001\u53d8\u91cf", "\n4\u3001\u5173\u952e\u5b57const\u6709\u4ec0\u4e48\u542b\u610f\uff1f", "\n\u8868\u793a\u5e38\u91cf\u4e0d\u53ef\u4ee5\u4fee\u6539\u7684\u53d8\u91cf\u3002", "\n5\u3001\u5173\u952e\u5b57volatile\u6709\u4ec0\u4e48\u542b\u610f\uff1f\u5e76\u4e3e\u51fa\u4e09\u4e2a\u4e0d\u540c\u7684\u4f8b\u5b50\uff1f", "\n\u63d0\u793a\u7f16\u8bd1\u5668\u5bf9\u8c61\u7684\u503c\u53ef\u80fd\u5728\u7f16\u8bd1\u5668\u672a\u76d1\u6d4b\u5230\u7684\u60c5\u51b5\u4e0b\u6539\u53d8\u3002", "int (*s[10])(int) \u8868\u793a\u7684\u662f\u4ec0\u4e48\u554a", "\nint (*s[10])(int) \u51fd\u6570\u6307\u9488\u6570\u7ec4\uff0c\u6bcf\u4e2a\u6307\u9488\u6307\u5411\u4e00\u4e2aint func(int param)\u7684\u51fd\u6570\u3002", "1.\u6709\u4ee5\u4e0b\u8868\u8fbe\u5f0f\uff1a", "\nint a=248; b=4;int const c=21;const int *d=&a;", "\nint *const e=&b;int const *f const =&a;", "\n\u8bf7\u95ee\u4e0b\u5217\u8868\u8fbe\u5f0f\u54ea\u4e9b\u4f1a\u88ab\u7f16\u8bd1\u5668\u7981\u6b62\uff1f\u4e3a\u4ec0\u4e48\uff1f", "\n*c=32;d=&b;*d=43;e=34;e=&a;f=0x321f;", "\n*c \u8fd9\u662f\u4e2a\u4ec0\u4e48\u4e1c\u4e1c\uff0c\u7981\u6b62", "\n*d \u8bf4\u4e86\u662fconst\uff0c \u7981\u6b62", "\ne = &a \u8bf4\u4e86\u662fconst \u7981\u6b62", "\nconst *f const =&a; \u7981\u6b62", "\n2.\u4ea4\u6362\u4e24\u4e2a\u53d8\u91cf\u7684\u503c\uff0c\u4e0d\u4f7f\u7528\u7b2c\u4e09\u4e2a\u53d8\u91cf\u3002\u5373a=3,b=5,\u4ea4\u6362\u4e4b\u540ea=5,b=3;", "\n\u6709\u4e24\u79cd\u89e3\u6cd5, \u4e00\u79cd\u7528\u7b97\u672f\u7b97\u6cd5, \u4e00\u79cd\u7528^(\u5f02\u6216)", "\na = a + b;", "\nb = a \u2013 b;", "\na = a \u2013 b;", "\nor", "\na = a^b;// \u53ea\u80fd\u5bf9int,char..", "\nb = a^b;", "\na = a^b;", "\nor", "\na ^= b ^= a;", "\n3.c\u548cc++\u4e2d\u7684struct\u6709\u4ec0\u4e48\u4e0d\u540c\uff1f", "\nc\u548cc++\u4e2dstruct\u7684\u4e3b\u8981\u533a\u522b\u662fc\u4e2d\u7684struct\u4e0d\u53ef\u4ee5\u542b\u6709\u6210\u5458\u51fd\u6570\uff0c\u800cc++\u4e2d\u7684struct\u53ef\u4ee5\u3002c++\u4e2dstruct\u548cclass\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u9ed8\u8ba4\u7684\u5b58\u53d6\u6743\u9650\u4e0d\u540c\uff0cstruct\u9ed8\u8ba4\u4e3apublic\uff0c\u800cclass\u9ed8\u8ba4\u4e3aprivate", "\n4.#include ", "7.\u8fdb\u7a0b\u4e4b\u95f4\u901a\u4fe1\u7684\u9014\u5f84", "\n\u5171\u4eab\u5b58\u50a8\u7cfb\u7edf", "\n\u6d88\u606f\u4f20\u9012\u7cfb\u7edf", "\n\u7ba1\u9053\uff1a\u4ee5\u6587\u4ef6\u7cfb\u7edf\u4e3a\u57fa\u7840", "\n11.\u8fdb\u7a0b\u6b7b\u9501\u7684\u539f\u56e0", "\n\u8d44\u6e90\u7ade\u4e89\u53ca\u8fdb\u7a0b\u63a8\u8fdb\u987a\u5e8f\u975e\u6cd5", "\n12.\u6b7b\u9501\u76844\u4e2a\u5fc5\u8981\u6761\u4ef6", "\n\u4e92\u65a5\u3001\u8bf7\u6c42\u4fdd\u6301\u3001\u4e0d\u53ef\u5265\u593a\u3001\u73af\u8def", "\n13.\u6b7b\u9501\u7684\u5904\u7406", "\n\u9e35\u9e1f\u7b56\u7565\u3001\u9884\u9632\u7b56\u7565\u3001\u907f\u514d\u7b56\u7565\u3001\u68c0\u6d4b\u4e0e\u89e3\u9664\u6b7b\u9501", "\n15.   \u64cd\u4f5c\u7cfb\u7edf\u4e2d\u8fdb\u7a0b\u8c03\u5ea6\u7b56\u7565\u6709\u54ea\u51e0\u79cd\uff1f", "\nFCFS(\u5148\u6765\u5148\u670d\u52a1)\uff0c\u4f18\u5148\u7ea7\uff0c\u65f6\u95f4\u7247\u8f6e\u8f6c\uff0c\u591a\u7ea7\u53cd\u9988", "\n8.\u7c7b\u7684\u9759\u6001\u6210\u5458\u548c\u975e\u9759\u6001\u6210\u5458\u6709\u4f55\u533a\u522b\uff1f", "\n\u7c7b\u7684\u9759\u6001\u6210\u5458\u6bcf\u4e2a\u7c7b\u53ea\u6709\u4e00\u4e2a\uff0c\u975e\u9759\u6001\u6210\u5458\u6bcf\u4e2a\u5bf9\u8c61\u4e00\u4e2a", "\n9.\u7eaf\u865a\u51fd\u6570\u5982\u4f55\u5b9a\u4e49\uff1f\u4f7f\u7528\u65f6\u5e94\u6ce8\u610f\u4ec0\u4e48\uff1f", "\nvirtual void f()=0;", "\n\u662f\u63a5\u53e3\uff0c\u5b50\u7c7b\u5fc5\u987b\u8981\u5b9e\u73b0", "\n10.\u6570\u7ec4\u548c\u94fe\u8868\u7684\u533a\u522b", "\n\u6570\u7ec4\uff1a\u6570\u636e\u987a\u5e8f\u5b58\u50a8\uff0c\u56fa\u5b9a\u5927\u5c0f", "\n\u8fde\u8868\uff1a\u6570\u636e\u53ef\u4ee5\u968f\u673a\u5b58\u50a8\uff0c\u5927\u5c0f\u53ef\u52a8\u6001\u6539\u53d8", "12.ISO\u7684\u4e03\u5c42\u6a21\u578b\u662f\u4ec0\u4e48\uff1ftcp/udp\u662f\u5c5e\u4e8e\u54ea\u4e00\u5c42\uff1ftcp/udp\u6709\u4f55\u4f18\u7f3a\u70b9\uff1f", "\n\u5e94\u7528\u5c42", "\n\u8868\u793a\u5c42", "\n\u4f1a\u8bdd\u5c42", "\n\u8fd0\u8f93\u5c42", "\n\u7f51\u7edc\u5c42", "\n\u7269\u7406\u94fe\u8def\u5c42", "\n\u7269\u7406\u5c42", "\ntcp /udp\u5c5e\u4e8e\u8fd0\u8f93\u5c42", "\nTCP \u670d\u52a1\u63d0\u4f9b\u4e86\u6570\u636e\u6d41\u4f20\u8f93\u3001\u53ef\u9760\u6027\u3001\u6709\u6548\u6d41\u63a7\u5236\u3001\u5168\u53cc\u5de5\u64cd\u4f5c\u548c\u591a\u8def\u590d\u7528\u6280\u672f\u7b49\u3002", "\n\u4e0e TCP \u4e0d\u540c\uff0c UDP \u5e76\u4e0d\u63d0\u4f9b\u5bf9 IP \u534f\u8bae\u7684\u53ef\u9760\u673a\u5236\u3001\u6d41\u63a7\u5236\u4ee5\u53ca\u9519\u8bef\u6062\u590d\u529f\u80fd\u7b49\u3002\u7531\u4e8e UDP \u6bd4\u8f83\u7b80\u5355\uff0c UDP \u5934\u5305\u542b\u5f88\u5c11\u7684\u5b57\u8282\uff0c\u6bd4 TCP \u8d1f\u8f7d\u6d88\u8017\u5c11\u3002", "\ntcp: \u63d0\u4f9b\u7a33\u5b9a\u7684\u4f20\u8f93\u670d\u52a1\uff0c\u6709\u6d41\u91cf\u63a7\u5236\uff0c\u7f3a\u70b9\u662f\u5305\u5934\u5927\uff0c\u5197\u4f59\u6027\u4e0d\u597d", "\nudp: \u4e0d\u63d0\u4f9b\u7a33\u5b9a\u7684\u670d\u52a1\uff0c\u5305\u5934\u5c0f\uff0c\u5f00\u9500\u5c0f   ", "1\uff1a(void *)ptr \u548c (*(void**))ptr\u7684\u7ed3\u679c\u662f\u5426\u76f8\u540c\uff1f\u5176\u4e2dptr\u4e3a\u540c\u4e00\u4e2a\u6307\u9488", "\n.(void *)ptr \u548c (*(void**))ptr\u503c\u662f\u76f8\u540c\u7684", "\n2\uff1aint main()", "\n   {", "\n    int x=3;", "\n    printf(\u201c%d\u201d,x);", "\n    return 1;", "   }", "\n\u95ee\u51fd\u6570\u65e2\u7136\u4e0d\u4f1a\u88ab\u5176\u5b83\u51fd\u6570\u8c03\u7528\uff0c\u4e3a\u4ec0\u4e48\u8981\u8fd4\u56de1\uff1f", "\nmian\u4e2d\uff0cc\u6807\u51c6\u8ba4\u4e3a0\u8868\u793a\u6210\u529f\uff0c\u975e0\u8868\u793a\u9519\u8bef\u3002\u5177\u4f53\u7684\u503c\u662f\u67d0\u4e2d\u5177\u4f53\u51fa\u9519\u4fe1\u606f", "1\uff0c\u8981\u5bf9\u7edd\u5bf9\u5730\u57400\u00d7100000\u8d4b\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u7528", "\n(unsigned int*)0\u00d7100000 = 1234;", "\n\u90a3\u4e48\u8981\u662f\u60f3\u8ba9\u7a0b\u5e8f\u8df3\u8f6c\u5230\u7edd\u5bf9\u5730\u5740\u662f0\u00d7100000\u53bb\u6267\u884c\uff0c\u5e94\u8be5\u600e\u4e48\u505a\uff1f", "\n*((void (*)( ))0\u00d7100000 ) ( );", "\n\u9996\u5148\u8981\u5c060\u00d7100000\u5f3a\u5236\u8f6c\u6362\u6210\u51fd\u6570\u6307\u9488,\u5373:", "\n(void (*)())0\u00d7100000", "\n\u7136\u540e\u518d\u8c03\u7528\u5b83:", "\n*((void (*)())0\u00d7100000)();", "\n\u7528typedef\u53ef\u4ee5\u770b\u5f97\u66f4\u76f4\u89c2\u4e9b:", "\ntypedef void(*)() voidFuncPtr;", "\n*((voidFuncPtr)0\u00d7100000)();", "\n2\uff0c\u5df2\u77e5\u4e00\u4e2a\u6570\u7ec4table\uff0c\u7528\u4e00\u4e2a\u5b8f\u5b9a\u4e49\uff0c\u6c42\u51fa\u6570\u636e\u7684\u5143\u7d20\u4e2a\u6570", "\n#define NTBL", "\n#define NTBL (sizeof(table)/sizeof(table[0]))", "\u9762\u8bd5\u9898: \u7ebf\u7a0b\u4e0e\u8fdb\u7a0b\u7684\u533a\u522b\u548c\u8054\u7cfb? \u7ebf\u7a0b\u662f\u5426\u5177\u6709\u76f8\u540c\u7684\u5806\u6808? dll\u662f\u5426\u6709\u72ec\u7acb\u7684\u5806\u6808?", "\n\u8fdb\u7a0b\u662f\u6b7b\u7684\uff0c\u53ea\u662f\u4e00\u4e9b\u8d44\u6e90\u7684\u96c6\u5408\uff0c\u771f\u6b63\u7684\u7a0b\u5e8f\u6267\u884c\u90fd\u662f\u7ebf\u7a0b\u6765\u5b8c\u6210\u7684\uff0c\u7a0b\u5e8f\u542f\u52a8\u7684\u65f6\u5019\u64cd\u4f5c\u7cfb\u7edf\u5c31\u5e2e\u4f60\u521b\u5efa\u4e86\u4e00\u4e2a\u4e3b\u7ebf\u7a0b\u3002", "\u6bcf\u4e2a\u7ebf\u7a0b\u6709\u81ea\u5df1\u7684\u5806\u6808\u3002", "\nDLL\u4e2d\u6709\u6ca1\u6709\u72ec\u7acb\u7684\u5806\u6808\uff0c\u8fd9\u4e2a\u95ee\u9898\u4e0d\u597d\u56de\u7b54\uff0c\u6216\u8005\u8bf4\u8fd9\u4e2a\u95ee\u9898\u672c\u8eab\u662f\u5426\u6709\u95ee\u9898\u3002\u56e0\u4e3aDLL\u4e2d\u7684\u4ee3\u7801\u662f\u88ab\u67d0\u4e9b\u7ebf\u7a0b\u6240\u6267\u884c\uff0c\u53ea\u6709\u7ebf\u7a0b\u62e5\u6709\u5806\u6808\uff0c\u5982\u679cDLL\u4e2d\u7684\u4ee3\u7801\u662fEXE\u4e2d\u7684\u7ebf\u7a0b\u6240\u8c03\u7528\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u662f\u4e0d\u662f\u8bf4\u8fd9\u4e2aDLL\u6ca1\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u5806\u6808\uff1f\u5982\u679cDLL\u4e2d\u7684\u4ee3\u7801\u662f\u7531DLL\u81ea\u5df1\u521b\u5efa\u7684\u7ebf\u7a0b\u6240\u6267\u884c\uff0c\u90a3\u4e48\u662f\u4e0d\u662f\u8bf4DLL\u6709\u72ec\u7acb\u7684\u5806\u6808\uff1f", "\u4ee5\u4e0a\u8bb2\u7684\u662f\u5806\u6808\uff0c\u5982\u679c\u5bf9\u4e8e\u5806\u6765\u8bf4\uff0c\u6bcf\u4e2aDLL\u6709\u81ea\u5df1\u7684\u5806\uff0c\u6240\u4ee5\u5982\u679c\u662f\u4eceDLL\u4e2d\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\uff0c\u6700\u597d\u662f\u4eceDLL\u4e2d\u5220\u9664\uff0c\u5982\u679c\u4f60\u4eceDLL\u4e2d\u5206\u914d\u5185\u5b58\uff0c\u7136\u540e\u5728EXE\u4e2d\uff0c\u6216\u8005\u53e6\u5916\u4e00\u4e2aDLL\u4e2d\u5220\u9664\uff0c\u5f88\u6709\u53ef\u80fd\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83", "unsigned short A = 10;", "\nprintf(\u201c~A = %u\\n\u201d, ~A);", "char c=128;", "\nprintf(\u201cc=%d\\n\u201d,c);", "\u8f93\u51fa\u591a\u5c11\uff1f\u5e76\u5206\u6790\u8fc7\u7a0b", "\n\u7b2c\u4e00\u9898\uff0c\uff5eA \uff1d0xfffffff5,int\u503c \u4e3a\uff0d11\uff0c\u4f46\u8f93\u51fa\u7684\u662fuint\u3002\u6240\u4ee5\u8f93\u51fa4294967285", "\n\u7b2c\u4e8c\u9898\uff0cc\uff1d0\u00d710,\u8f93\u51fa\u7684\u662fint\uff0c\u6700\u9ad8\u4f4d\u4e3a1\uff0c\u662f\u8d1f\u6570\uff0c\u6240\u4ee5\u5b83\u7684\u503c\u5c31\u662f0\u00d700\u7684\u8865\u7801\u5c31\u662f128\uff0c\u6240\u4ee5\u8f93\u51fa\uff0d128\u3002", "\n\u8fd9\u4e24\u9053\u9898\u90fd\u662f\u5728\u8003\u5bdf\u4e8c\u8fdb\u5236\u5411int\u6216uint\u8f6c\u6362\u65f6\u7684\u6700\u9ad8\u4f4d\u5904\u7406\u3002", "\u5206\u6790\u4e0b\u9762\u7684\u7a0b\u5e8f\uff1a", "\nvoid GetMemory(char **p,int num)", "\n{", "\n    *p=(char *)malloc(num);", "}", "\nint main()", "\n{", "\n    char *str=NULL;", "    GetMemory(&str,100);", "    strcpy(str,\u201dhello\u201d);", "    free(str);", "    if(str!=NULL)", "\n    {", "\n        strcpy(str,\u201dworld\u201d);", "\n    }    ", "    printf(\u201c\\n str is %s\u201d,str);", "\n    getchar();", "\n}", "\n\u95ee\u8f93\u51fa\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f\u5e0c\u671b\u5927\u5bb6\u80fd\u8bf4\u8bf4\u539f\u56e0\uff0c\u5148\u8c22\u8c22\u4e86", "\n\u8f93\u51fastr is world\u3002", "\nfree \u53ea\u662f\u91ca\u653e\u7684str\u6307\u5411\u7684\u5185\u5b58\u7a7a\u95f4,\u5b83\u672c\u8eab\u7684\u503c\u8fd8\u662f\u5b58\u5728\u7684.", "\n\u6240\u4ee5free\u4e4b\u540e\uff0c\u6709\u4e00\u4e2a\u597d\u7684\u4e60\u60ef\u5c31\u662f\u5c06str=NULL.", "\n\u6b64\u65f6str\u6307\u5411\u7a7a\u95f4\u7684\u5185\u5b58\u5df2\u88ab\u56de\u6536,\u5982\u679c\u8f93\u51fa\u8bed\u53e5\u4e4b\u524d\u8fd8\u5b58\u5728\u5206\u914d\u7a7a\u95f4\u7684\u64cd\u4f5c\u7684\u8bdd,\u8fd9\u6bb5\u5b58\u50a8\u7a7a\u95f4\u662f\u53ef\u80fd\u88ab\u91cd\u65b0\u5206\u914d\u7ed9\u5176\u4ed6\u53d8\u91cf\u7684,", "\n\u5c3d\u7ba1\u8fd9\u6bb5\u7a0b\u5e8f\u786e\u5b9e\u662f\u5b58\u5728\u5927\u5927\u7684\u95ee\u9898\uff08\u4e0a\u9762\u5404\u4f4d\u5df2\u7ecf\u8bf4\u5f97\u5f88\u6e05\u695a\u4e86\uff09\uff0c\u4f46\u662f\u901a\u5e38\u4f1a\u6253\u5370\u51faworld\u6765\u3002", "\n\u8fd9\u662f\u56e0\u4e3a\uff0c\u8fdb\u7a0b\u4e2d\u7684\u5185\u5b58\u7ba1\u7406\u4e00\u822c\u4e0d\u662f\u7531\u64cd\u4f5c\u7cfb\u7edf\u5b8c\u6210\u7684\uff0c\u800c\u662f\u7531\u5e93\u51fd\u6570\u81ea\u5df1\u5b8c\u6210\u7684\u3002", "\n\u5f53\u4f60malloc\u4e00\u5757\u5185\u5b58\u7684\u65f6\u5019\uff0c\u7ba1\u7406\u5e93\u5411\u64cd\u4f5c\u7cfb\u7edf\u7533\u8bf7\u4e00\u5757\u7a7a\u95f4\uff08\u53ef\u80fd\u4f1a\u6bd4\u4f60\u7533\u8bf7\u7684\u5927\u4e00\u4e9b\uff09\uff0c\u7136\u540e\u5728\u8fd9\u5757\u7a7a\u95f4\u4e2d\u8bb0\u5f55\u4e00\u4e9b\u7ba1\u7406\u4fe1\u606f\uff08\u4e00\u822c\u662f\u5728\u4f60\u7533\u8bf7\u7684\u5185\u5b58\u524d\u9762\u4e00\u70b9\uff09\uff0c\u5e76\u5c06\u53ef\u7528\u5185\u5b58\u7684\u5730\u5740\u8fd4\u56de\u3002\u4f46\u662f\u91ca\u653e\u5185\u5b58\u7684\u65f6\u5019\uff0c\u7ba1\u7406\u5e93\u901a\u5e38\u90fd\u4e0d\u4f1a\u5c06\u5185\u5b58\u8fd8\u7ed9\u64cd\u4f5c\u7cfb\u7edf\uff0c\u56e0\u6b64\u4f60\u662f\u53ef\u4ee5\u7ee7\u7eed\u8bbf\u95ee\u8fd9\u5757\u5730\u5740\u7684\uff0c\u53ea\u4e0d\u8fc7\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u697c\u4e0a\u90fd\u8bf4\u8fc7\u4e86\uff0c\u6700\u597d\u522b\u8fd9\u4e48\u5e72\u3002", "char a[10],strlen(a)\u4e3a\u4ec0\u4e48\u7b49\u4e8e15\uff1f\u8fd0\u884c\u7684\u7ed3\u679c", "#include \u201cstdio.h\u201d", "\n#include \u201cstring.h\u201d", "void main()", "\n{", "char aa[10];", "\nprintf(\u201c%d\u201d,strlen(aa));", "\n}", "sizeof()\u548c\u521d\u4e0d\u521d\u59cb\u5316\uff0c\u6ca1\u6709\u5173\u7cfb\uff1b", "\nstrlen()\u548c\u521d\u59cb\u5316\u6709\u5173\u3002", "char (*str)[20];/*str\u662f\u4e00\u4e2a\u6570\u7ec4\u6307\u9488\uff0c\u5373\u6307\u5411\u6570\u7ec4\u7684\u6307\u9488\uff0e*/", "\nchar *str[20];/*str\u662f\u4e00\u4e2a\u6307\u9488\u6570\u7ec4\uff0c\u5176\u5143\u7d20\u4e3a\u6307\u9488\u578b\u6570\u636e\uff0e*/", "long a=0\u00d7801010;", "\na+5=?", "\n0\u00d7801010\u7528\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a\uff1a\u201c1000 0000 0001 0000 0001 0000\u201d\uff0c\u5341\u8fdb\u5236\u7684\u503c\u4e3a8392720\uff0c\u518d\u52a0\u4e0a5\u5c31\u662f8392725\u7f57", "1)\u7ed9\u5b9a\u7ed3\u6784struct A", "\n{", "\n       char t:4;", "\n       char k:4;", "\n       unsigned short i:8;", "\n       unsigned long m;", "\n};\u95eesizeof(A) = ?", "\n\u7ed9\u5b9a\u7ed3\u6784struct A", "\n{", "\n       char t:4; 4\u4f4d", "\n       char k:4; 4\u4f4d", "\n       unsigned short i:8; 8\u4f4d", "\n       unsigned long m; // \u504f\u79fb2\u5b57\u8282\u4fdd\u8bc14\u5b57\u8282\u5bf9\u9f50", "\n}; // \u51718\u5b57\u8282", "\n2)\u4e0b\u9762\u7684\u51fd\u6570\u5b9e\u73b0\u5728\u4e00\u4e2a\u6570\u4e0a\u52a0\u4e00\u4e2a\u6570\uff0c\u6709\u4ec0\u4e48\u9519\u8bef\uff1f\u8bf7\u6539\u6b63\u3002", "\nint add_n ( int n )", "\n{", "\n    static int i = 100;", "\n    i += n;", "\n    return i;", "\n}", "\n\u5f53\u4f60\u7b2c\u4e8c\u6b21\u8c03\u7528\u65f6\u5f97\u4e0d\u5230\u6b63\u786e\u7684\u7ed3\u679c\uff0c\u96be\u9053\u4f60\u5199\u4e2a\u51fd\u6570\u5c31\u662f\u4e3a\u4e86\u8c03\u7528\u4e00\u6b21\uff1f\u95ee\u9898\u5c31\u51fa\u5728 static\u4e0a\uff1f", "// \u5e2e\u5fd9\u5206\u6790\u4e00\u4e0b", "\n#include", "\u6c42\u51fd\u6570\u8fd4\u56de\u503c\uff0c\u8f93\u5165x=9999;", "\nint func \uff08 x \uff09", "\n{", "\n    int countx = 0;", "\n    while ( x )", "\n    {", "\n        countx ++;", "\n        x = x&(x-1);", "\n    }", "\n    return countx;", "\n}", "\n\u7ed3\u679c\u5462\uff1f", "\n\u77e5\u9053\u4e86\u8fd9\u662f\u7edf\u8ba19999\u7684\u4e8c\u8fdb\u5236\u6570\u503c\u4e2d\u6709\u591a\u5c11\u4e2a1\u7684\u51fd\u6570\uff0c\u4e14\u6709", "\n9999\uff1d9\u00d71024\uff0b512\uff0b256\uff0b15", "9\u00d71024\u4e2d\u542b\u67091\u7684\u4e2a\u6570\u4e3a2\uff1b", "\n512\u4e2d\u542b\u67091\u7684\u4e2a\u6570\u4e3a1\uff1b", "\n256\u4e2d\u542b\u67091\u7684\u4e2a\u6570\u4e3a1\uff1b", "\n15\u4e2d\u542b\u67091\u7684\u4e2a\u6570\u4e3a4\uff1b", "\n\u6545\u5171\u67091\u7684\u4e2a\u6570\u4e3a8\uff0c\u7ed3\u679c\u4e3a8\u3002", "\n1000 - 1 = 0111\uff0c\u6b63\u597d\u662f\u539f\u6570\u53d6\u53cd\u3002\u8fd9\u5c31\u662f\u539f\u7406\u3002", "\n\u7528\u8fd9\u79cd\u65b9\u6cd5\u6765\u6c421\u7684\u4e2a\u6570\u662f\u5f88\u6548\u7387\u5f88\u9ad8\u7684\u3002", "\n\u4e0d\u5fc5\u53bb\u4e00\u4e2a\u4e00\u4e2a\u5730\u79fb\u4f4d\u3002\u5faa\u73af\u6b21\u6570\u6700\u5c11\u3002", "int a,b,c \u8bf7\u5199\u51fd\u6570\u5b9e\u73b0C=a+b ,\u4e0d\u53ef\u4ee5\u6539\u53d8\u6570\u636e\u7c7b\u578b,\u5982\u5c06c\u6539\u4e3along int,\u5173\u952e\u662f\u5982\u4f55\u5904\u7406\u6ea2\u51fa\u95ee\u9898", "\nbool add (int a, int b,int *c)", "\n{", "\n*c=a+b;", "\nreturn (a>0 && b>0 &&(*c", "\u5206\u6790\uff1a", "\nstruct bit", "\n{   int a:3;", "\n    int  b:2;", "\n    int c:3;", "\n};", "\nint main()", "\n{", "\n  bit s;", "\n  char *c=(char*)&s;", "\n   cout\n  *c=0x99;", "\n   cout \n     int a=-1;", "\n   printf(\"%x\",a);", "\n  return 0;", "\n}", "\n\u8f93\u51fa\u4e3a\u4ec0\u4e48\u662f", "\n4", "\n1", "\n-1", "\n-4", "\nffffffff", "\n\u56e0\u4e3a0x99\u5728\u5185\u5b58\u4e2d\u8868\u793a\u4e3a 100 11 001 , a = 001, b = 11, c = 100", "\n\u5f53c\u4e3a\u6709\u7b26\u5408\u6570\u65f6, c = 100, \u6700\u9ad81\u4e3a\u8868\u793ac\u4e3a\u8d1f\u6570\uff0c\u8d1f\u6570\u5728\u8ba1\u7b97\u673a\u7528\u8865\u7801\u8868\u793a\uff0c\u6240\u4ee5c = -4;\u540c\u7406", "\nb = -1;", "\n\u5f53c\u4e3a\u6709\u7b26\u5408\u6570\u65f6, c = 100,\u5373 c = 4,\u540c\u7406 b = 3", "\u4f4d\u57df \uff1a", "\n\u6709\u4e9b\u4fe1\u606f\u5728\u5b58\u50a8\u65f6\uff0c\u5e76\u4e0d\u9700\u8981\u5360\u7528\u4e00\u4e2a\u5b8c\u6574\u7684\u5b57\u8282\uff0c \u800c\u53ea\u9700\u5360\u51e0\u4e2a\u6216\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u3002\u4f8b\u5982\u5728\u5b58\u653e\u4e00\u4e2a\u5f00\u5173\u91cf\u65f6\uff0c\u53ea\u67090\u548c1 \u4e24\u79cd\u72b6\u6001\uff0c \u7528\u4e00\u4f4d\u4e8c\u8fdb\u4f4d\u5373\u53ef\u3002\u4e3a\u4e86\u8282\u7701\u5b58\u50a8\u7a7a\u95f4\uff0c\u5e76\u4f7f\u5904\u7406\u7b80\u4fbf\uff0c\uff23\u8bed\u8a00\u53c8\u63d0\u4f9b\u4e86\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u79f0\u4e3a\u201c\u4f4d\u57df\u201d\u6216\u201c\u4f4d\u6bb5\u201d\u3002\u6240\u8c13\u201c\u4f4d\u57df\u201d\u662f\u628a\u4e00\u4e2a\u5b57\u8282\u4e2d\u7684\u4e8c\u8fdb\u4f4d\u5212\u5206\u4e3a\u51e0\u4e2a\u4e0d\u540c\u7684\u533a\u57df\uff0c \u5e76\u8bf4\u660e\u6bcf\u4e2a\u533a\u57df\u7684\u4f4d\u6570\u3002\u6bcf\u4e2a\u57df\u6709\u4e00\u4e2a\u57df\u540d\uff0c\u5141\u8bb8\u5728\u7a0b\u5e8f\u4e2d\u6309\u57df\u540d\u8fdb\u884c\u64cd\u4f5c\u3002 \u8fd9\u6837\u5c31\u53ef\u4ee5\u628a\u51e0\u4e2a\u4e0d\u540c\u7684\u5bf9\u8c61\u7528\u4e00\u4e2a\u5b57\u8282\u7684\u4e8c\u8fdb\u5236\u4f4d\u57df\u6765\u8868\u793a\u3002\u4e00\u3001\u4f4d\u57df\u7684\u5b9a\u4e49\u548c\u4f4d\u57df\u53d8\u91cf\u7684\u8bf4\u660e\u4f4d\u57df\u5b9a\u4e49\u4e0e\u7ed3\u6784\u5b9a\u4e49\u76f8\u4eff\uff0c\u5176\u5f62\u5f0f\u4e3a\uff1a", "\nstruct \u4f4d\u57df\u7ed3\u6784\u540d", "\n{ \u4f4d\u57df\u5217\u8868 };", "\n\u5176\u4e2d\u4f4d\u57df\u5217\u8868\u7684\u5f62\u5f0f\u4e3a\uff1a \u7c7b\u578b\u8bf4\u660e\u7b26 \u4f4d\u57df\u540d\uff1a\u4f4d\u57df\u957f\u5ea6", "\n\u4f8b\u5982\uff1a", "\nstruct bs", "\n{", "\nint a:8;", "\nint b:2;", "\nint c:6;", "\n};", "\n\u4f4d\u57df\u53d8\u91cf\u7684\u8bf4\u660e\u4e0e\u7ed3\u6784\u53d8\u91cf\u8bf4\u660e\u7684\u65b9\u5f0f\u76f8\u540c\u3002 \u53ef\u91c7\u7528\u5148\u5b9a\u4e49\u540e\u8bf4\u660e\uff0c\u540c\u65f6\u5b9a\u4e49\u8bf4\u660e\u6216\u8005\u76f4\u63a5\u8bf4\u660e\u8fd9\u4e09\u79cd\u65b9\u5f0f\u3002\u4f8b\u5982\uff1a", "\nstruct bs", "\n{", "\nint a:8;", "\nint b:2;", "\nint c:6;", "\n}data;", "\n\u8bf4\u660edata\u4e3abs\u53d8\u91cf\uff0c\u5171\u5360\u4e24\u4e2a\u5b57\u8282\u3002\u5176\u4e2d\u4f4d\u57dfa\u53608\u4f4d\uff0c\u4f4d\u57dfb\u53602\u4f4d\uff0c\u4f4d\u57dfc\u53606\u4f4d\u3002\u5bf9\u4e8e\u4f4d\u57df\u7684\u5b9a\u4e49\u5c1a\u6709\u4ee5\u4e0b\u51e0\u70b9\u8bf4\u660e\uff1a    ", "1. \u4e00\u4e2a\u4f4d\u57df\u5fc5\u987b\u5b58\u50a8\u5728\u540c\u4e00\u4e2a\u5b57\u8282\u4e2d\uff0c\u4e0d\u80fd\u8de8\u4e24\u4e2a\u5b57\u8282\u3002\u5982\u4e00\u4e2a\u5b57\u8282\u6240\u5269\u7a7a\u95f4\u4e0d\u591f\u5b58\u653e\u53e6\u4e00\u4f4d\u57df\u65f6\uff0c\u5e94\u4ece\u4e0b\u4e00\u5355\u5143\u8d77\u5b58\u653e\u8be5\u4f4d\u57df\u3002\u4e5f\u53ef\u4ee5\u6709\u610f\u4f7f\u67d0\u4f4d\u57df\u4ece\u4e0b\u4e00\u5355\u5143\u5f00\u59cb\u3002\u4f8b\u5982\uff1a", "\nstruct bs", "\n{", "\nunsigned a:4", "\nunsigned :0 /*\u7a7a\u57df*/", "\nunsigned b:4 /*\u4ece\u4e0b\u4e00\u5355\u5143\u5f00\u59cb\u5b58\u653e*/", "\nunsigned c:4", "\n}", "\n\u5728\u8fd9\u4e2a\u4f4d\u57df\u5b9a\u4e49\u4e2d\uff0ca\u5360\u7b2c\u4e00\u5b57\u8282\u76844\u4f4d\uff0c\u540e4\u4f4d\u586b0\u8868\u793a\u4e0d\u4f7f\u7528\uff0cb\u4ece\u7b2c\u4e8c\u5b57\u8282\u5f00\u59cb\uff0c\u5360\u75284\u4f4d\uff0cc\u5360\u75284\u4f4d\u3002    ", "2. \u7531\u4e8e\u4f4d\u57df\u4e0d\u5141\u8bb8\u8de8\u4e24\u4e2a\u5b57\u8282\uff0c\u56e0\u6b64\u4f4d\u57df\u7684\u957f\u5ea6\u4e0d\u80fd\u5927\u4e8e\u4e00\u4e2a\u5b57\u8282\u7684\u957f\u5ea6\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e0d\u80fd\u8d85\u8fc78\u4f4d\u4e8c\u8fdb\u4f4d\u3002    ", "3. \u4f4d\u57df\u53ef\u4ee5\u65e0\u4f4d\u57df\u540d\uff0c\u8fd9\u65f6\u5b83\u53ea\u7528\u6765\u4f5c\u586b\u5145\u6216\u8c03\u6574\u4f4d\u7f6e\u3002\u65e0\u540d\u7684\u4f4d\u57df\u662f\u4e0d\u80fd\u4f7f\u7528\u7684\u3002\u4f8b\u5982\uff1a", "\nstruct k", "\n{", "\nint a:1", "\nint :2 /*\u8be52\u4f4d\u4e0d\u80fd\u4f7f\u7528*/", "\nint b:3", "\nint c:2", "\n};", "\n\u4ece\u4ee5\u4e0a\u5206\u6790\u53ef\u4ee5\u770b\u51fa\uff0c\u4f4d\u57df\u5728\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u79cd\u7ed3\u6784\u7c7b\u578b\uff0c \u4e0d\u8fc7\u5176\u6210\u5458\u662f\u6309\u4e8c\u8fdb\u4f4d\u5206\u914d\u7684\u3002    ", "\u4e8c\u3001\u4f4d\u57df\u7684\u4f7f\u7528\u4f4d\u57df\u7684\u4f7f\u7528\u548c\u7ed3\u6784\u6210\u5458\u7684\u4f7f\u7528\u76f8\u540c\uff0c\u5176\u4e00\u822c\u5f62\u5f0f\u4e3a\uff1a \u4f4d\u57df\u53d8\u91cf\u540d\u2022\u4f4d\u57df\u540d \u4f4d\u57df\u5141\u8bb8\u7528\u5404\u79cd\u683c\u5f0f\u8f93\u51fa\u3002", "\nmain(){", "\nstruct bs", "\n{", "\nunsigned a:1;", "\nunsigned b:3;", "\nunsigned c:4;", "\n} bit,*pbit;", "\nbit.a=1;", "\nbit.b=7;", "\nbit.c=15;", "\npri", "\u6539\u9519\uff1a", "\n#include ", "int main(void) {", "    int **p;", "\n    int arr[100];", "    p = &arr;", "    return 0;", "\n}", "\n\u89e3\u7b54\uff1a", "\n\u641e\u9519\u4e86,\u662f\u6307\u9488\u7c7b\u578b\u4e0d\u540c,", "\nint **p; //\u4e8c\u7ea7\u6307\u9488", "\n&arr; //\u5f97\u5230\u7684\u662f\u6307\u5411\u7b2c\u4e00\u7ef4\u4e3a100\u7684\u6570\u7ec4\u7684\u6307\u9488", "\n#include ", "\u4e0b\u9762\u8fd9\u4e2a\u7a0b\u5e8f\u6267\u884c\u540e\u4f1a\u6709\u4ec0\u4e48\u9519\u8bef\u6216\u8005\u6548\u679c:", "\n #define MAX 255", "\n int main()", "\n{", "\n   unsigned char A[MAX],i;//i\u88ab\u5b9a\u4e49\u4e3aunsigned char", "\n   for (i=0;i\n      A[i]=i;", "\n}", "\n\u89e3\u7b54\uff1a\u6b7b\u5faa\u73af\u52a0\u6570\u7ec4\u8d8a\u754c\u8bbf\u95ee\uff08C/C++\u4e0d\u8fdb\u884c\u6570\u7ec4\u8d8a\u754c\u68c0\u67e5\uff09", "\nMAX=255", "\n\u6570\u7ec4A\u7684\u4e0b\u6807\u8303\u56f4\u4e3a:0..MAX-1,\u8fd9\u662f\u5176\u4e00..", "\n\u5176\u4e8c.\u5f53i\u5faa\u73af\u5230255\u65f6,\u5faa\u73af\u5185\u6267\u884c:", "\n  A[255]=255;", "\n\u8fd9\u53e5\u672c\u8eab\u6ca1\u6709\u95ee\u9898..\u4f46\u662f\u8fd4\u56defor (i=0;i\n\u7531\u4e8eunsigned char\u7684\u53d6\u503c\u8303\u56f4\u5728(0..255),i++\u4ee5\u540ei\u53c8\u4e3a0\u4e86..\u65e0\u9650\u5faa\u73af\u4e0b\u53bb.", "struct name1{", "\n   char  str;", "\n   short x;", "\n   int   num;", "\n}", "struct name2{", "\n   char str;", "\n   int num;", "\n   short x;", "\n}", "sizeof(struct name1)=8,sizeof(struct name2)=12", "\n\u5728\u7b2c\u4e8c\u4e2a\u7ed3\u6784\u4e2d\uff0c\u4e3a\u4fdd\u8bc1num\u6309\u56db\u4e2a\u5b57\u8282\u5bf9\u9f50\uff0cchar\u540e\u5fc5\u987b\u7559\u51fa3\u5b57\u8282\u7684\u7a7a\u95f4\uff1b\u540c\u65f6\u4e3a\u4fdd\u8bc1\u6574\u4e2a\u7ed3\u6784\u7684\u81ea\u7136\u5bf9\u9f50\uff08\u8fd9\u91cc\u662f4\u5b57\u8282\u5bf9\u9f50\uff09\uff0c\u5728x\u540e\u8fd8\u8981\u8865\u9f502\u4e2a\u5b57\u8282\uff0c\u8fd9\u6837\u5c31\u662f12\u5b57\u8282\u3002", "intel\uff1a", "\nA.c \u548cB.c\u4e24\u4e2ac\u6587\u4ef6\u4e2d\u4f7f\u7528\u4e86\u4e24\u4e2a\u76f8\u540c\u540d\u5b57\u7684static\u53d8\u91cf,\u7f16\u8bd1\u7684\u65f6\u5019\u4f1a\u4e0d\u4f1a\u6709\u95ee\u9898?\u8fd9\u4e24\u4e2astatic\u53d8\u91cf\u4f1a\u4fdd\u5b58\u5230\u54ea\u91cc\uff08\u6808\u8fd8\u662f\u5806\u6216\u8005\u5176\u4ed6\u7684\uff09?", "\nstatic\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u8868\u660e\u8fd9\u4e2a\u53d8\u91cf\u4ec5\u5728\u672c\u6a21\u5757\u4e2d\u6709\u610f\u4e49\uff0c\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u6a21\u5757\u3002", "\n\u4ed6\u4eec\u90fd\u653e\u5728\u6570\u636e\u533a\uff0c\u4f46\u662f\u7f16\u8bd1\u5668\u5bf9\u4ed6\u4eec\u7684\u547d\u540d\u662f\u4e0d\u540c\u7684\u3002", "\n\u5982\u679c\u8981\u4f7f\u53d8\u91cf\u5728\u5176\u4ed6\u6a21\u5757\u4e5f\u6709\u610f\u4e49\u7684\u8bdd\uff0c\u9700\u8981\u4f7f\u7528extern\u5173\u952e\u5b57\u3002", "struct s1", "\n{", "\n  int i: 8;", "\n  int j: 4;", "\n  int a: 3;", "\n  double b;", "\n};", "struct s2", "\n{", "\n  int i: 8;", "\n  int j: 4;", "\n  double b;", "\n  int a:3;", "\n};", "printf(\"sizeof(s1)= %d\\n\", sizeof(s1));", "\nprintf(\"sizeof(s2)= %d\\n\", sizeof(s2));", "\nresult: 16, 24", "\n\u7b2c\u4e00\u4e2astruct s1", "\n{", "\n  int i: 8;", "\n  int j: 4;", "\n  int a: 3;", "\n  double b;", "\n};", "\n\u7406\u8bba\u4e0a\u662f\u8fd9\u6837\u7684\uff0c\u9996\u5148\u662fi\u5728\u76f8\u5bf90\u7684\u4f4d\u7f6e\uff0c\u53608\u4f4d\u4e00\u4e2a\u5b57\u8282\uff0c\u7136\u540e\uff0cj\u5c31\u5728\u76f8\u5bf9\u4e00\u4e2a\u5b57\u8282\u7684\u4f4d\u7f6e\uff0c\u7531\u4e8e\u4e00\u4e2a\u4f4d\u7f6e\u7684\u5b57\u8282\u6570\u662f4\u4f4d\u7684\u500d\u6570\uff0c\u56e0\u6b64\u4e0d\u7528\u5bf9\u9f50\uff0c\u5c31\u653e\u5728\u90a3\u91cc\u4e86\uff0c\u7136\u540e\u662fa\uff0c\u8981\u57283\u4f4d\u7684\u500d\u6570\u5173\u7cfb\u7684\u4f4d\u7f6e\u4e0a\uff0c\u56e0\u6b64\u8981\u79fb\u4e00\u4f4d\uff0c\u572815\u4f4d\u7684\u4f4d\u7f6e\u4e0a\u653e\u4e0b\uff0c\u76ee\u524d\u603b\u5171\u662f18\u4f4d\uff0c\u6298\u7b97\u8fc7\u6765\u662f2\u5b57\u82822\u4f4d\u7684\u6837\u5b50\uff0c\u7531\u4e8edouble\u662f8\u5b57\u8282\u7684\uff0c\u56e0\u6b64\u8981\u5728\u76f8\u5bf90\u8981\u662f8\u4e2a\u5b57\u8282\u7684\u4f4d\u7f6e\u4e0a\u653e\u4e0b\uff0c\u56e0\u6b64\u4ece18\u4f4d\u5f00\u59cb\u52308\u4e2a\u5b57\u8282\u4e4b\u95f4\u7684\u4f4d\u7f6e\u88ab\u5ffd\u7565\uff0c\u76f4\u63a5\u653e\u57288\u5b57\u8282\u7684\u4f4d\u7f6e\u4e86\uff0c\u56e0\u6b64\uff0c\u603b\u5171\u662f16\u5b57\u8282\u3002", "\u7b2c\u4e8c\u4e2a\u6700\u540e\u4f1a\u5bf9\u7167\u662f\u4e0d\u662f\u7ed3\u6784\u4f53\u5185\u6700\u5927\u6570\u636e\u7684\u500d\u6570\uff0c\u4e0d\u662f\u7684\u8bdd\uff0c\u4f1a\u8865\u6210\u662f\u6700\u5927\u6570\u636e\u7684\u500d\u6570", "\u4e0a\u9762\u662f\u57fa\u672c\u95ee\u9898\uff0c\u63a5\u4e0b\u6765\u662f\u7f16\u7a0b\u95ee\u9898\uff1a", "\u672c\u4eba\u5f88\u5f31\uff0c\u8fd9\u51e0\u4e2a\u9898\u4e5f\u641e\u4e0d\u5b9a\uff0c\u7279\u6765\u6c42\u6551\uff1a", "\n1\uff09\u8bfb\u6587\u4ef6file1.txt\u7684\u5185\u5bb9\uff08\u4f8b\u5982\uff09\uff1a", "\n12", "\n34", "\n56", "\n\u8f93\u51fa\u5230file2.txt\uff1a", "\n56", "\n34", "\n12", "\n\uff08\u9006\u5e8f\uff09", "\n2\uff09\u8f93\u51fa\u548c\u4e3a\u4e00\u4e2a\u7ed9\u5b9a\u6574\u6570\u7684\u6240\u6709\u7ec4\u5408", "\n\u4f8b\u5982n=5", "\n5=1+4\uff1b5=2+3\uff08\u76f8\u52a0\u7684\u6570\u4e0d\u80fd\u91cd\u590d\uff09", "\n\u5219\u8f93\u51fa", "\n1\uff0c4\uff1b2\uff0c3\u3002", "\n\u671b\u9ad8\u624b\u8d50\u6559\uff01\uff01", "\u7b2c\u4e00\u9898,\u6ce8\u610f\u53ef\u589e\u957f\u6570\u7ec4\u7684\u5e94\u7528.", "\n#include ", "int main(void)", "\n{", "\n         int MAX = 10;", "\nint *a = (int *)malloc(MAX * sizeof(int));", "\nint *b;", "FILE *fp1;", "\nFILE *fp2;", "fp1 = fopen(\u201ca.txt\u201d,\u201dr\u201d);", "\nif(fp1 == NULL)", "\n{printf(\u201cerror1\u2033);", "\n    exit(-1);", "\n}", "    fp2 = fopen(\u201cb.txt\u201d,\u201dw\u201d);", "\nif(fp2 == NULL)", "\n{printf(\u201cerror2\u2033);", "\n    exit(-1);", "\n}", "int i = 0;", "\n    int j = 0;", "while(fscanf(fp1,\u201d%d\u201d,&a[i]) != EOF)", "\n{", "\ni++;", "\nj++;", "\nif(i >= MAX)", "\n{", "\nMAX = 2 * MAX;", "\nb = (int*)realloc(a,MAX * sizeof(int));", "\nif(b == NULL)", "\n{", "\nprintf(\u201cerror3\u2033);", "\nexit(-1);", "\n}", "\na = b;", "\n}", "\n}", "for(;\u2013j >= 0;)", "\n   fprintf(fp2,\u201d%d\\n\u201d,a[j]);", "fclose(fp1);", "\nfclose(fp2);", "return 0;", "}", "\u7b2c\u4e8c\u9898.", "\n#include ", "int main(void)", "\n{", "\nunsigned long int i,j,k;", "printf(\u201cplease input the number\\n\u201d);", "\nscanf(\u201c%d\u201d,&i);", "\n    if( i % 2 == 0)", "\n        j = i / 2;", "\nelse", "\nj = i / 2 + 1;", "printf(\u201cThe result is \\n\u201d);", "\n    for(k = 0; k \n     printf(\"%d = %d + %d\\n\",i,k,i - k);", "\nreturn 0;", "\n}", "#include ", "\u5144\u5f1f,\u8fd9\u6837\u7684\u9898\u76ee\u82e5\u662f\u505a\u4e0d\u51fa\u6765\u5b9e\u5728\u662f\u6709\u4e9b\u4e0d\u5e94\u8be5, \u7ed9\u4f60\u4e00\u4e2a\u9012\u89c4\u53cd\u5411\u8f93\u51fa\u5b57\u7b26\u4e32\u7684\u4f8b\u5b50,\u53ef\u8c13\u662f\u53cd\u5e8f\u7684\u7ecf\u5178\u4f8b\u7a0b.", "void inverse(char *p)", "\n{", "\n    if( *p = = '\\0' )", "\nreturn;", "\n    inverse( p+1 );", "\n    printf( \"%c\", *p );", "\n}", "int main(int argc, char *argv[])", "\n{", "\n    inverse(\"abc\\0\");", "    return 0;", "\n}", "\u501f\u7b7e\u4e86\u697c\u4e0a\u7684\u201c\u9012\u89c4\u53cd\u5411\u8f93\u51fa\u201d", "\n#include ", "\u5728\u5bf9\u9f50\u4e3a4\u7684\u60c5\u51b5\u4e0b", "\nstruct BBB", "\n{", "\n   long num\uff1b", "\n   char *name;", "\n   short int data;", "\n   char ha;", "\n   short ba[5];", "\n}*p;", "\np=0\u00d71000000;", "\np+0\u00d7200=____;", "\n(Ulong)p+0\u00d7200=____;", "\n(char*)p+0\u00d7200=____;", "\n\u5e0c\u671b\u5404\u4f4d\u8fbe\u4eba\u7ed9\u51fa\u7b54\u6848\u548c\u539f\u56e0\uff0c\u8c22\u8c22\u62c9", "\n\u89e3\u7b54\uff1a\u5047\u8bbe\u572832\u4f4dCPU\u4e0a\uff0c", "\nsizeof(long) = 4 bytes", "\nsizeof(char *) = 4 bytes", "\nsizeof(short int) = sizeof(short) = 2 bytes", "\nsizeof(char) = 1 bytes", "\u7531\u4e8e\u662f4\u5b57\u8282\u5bf9\u9f50\uff0c", "\nsizeof(struct BBB) = sizeof(*p)", "\n= 4 + 4 + 2 + 1 + 1/*\u8865\u9f50*/ + 2*5 + 2/*\u8865\u9f50*/ = 24 bytes  (\u7ecfDev-C++\u9a8c\u8bc1)", "p=0\u00d71000000;", "\np+0\u00d7200=____;", "\n    = 0\u00d71000000 + 0\u00d7200*24", "(Ulong)p+0\u00d7200=____;", "\n    = 0\u00d71000000 + 0\u00d7200", "(char*)p+0\u00d7200=____;", "\n    = 0\u00d71000000 + 0\u00d7200*4", "\u4f60\u53ef\u4ee5\u53c2\u8003\u4e00\u4e0b\u6307\u9488\u8fd0\u7b97\u7684\u7ec6\u8282", "\u5199\u4e00\u6bb5\u7a0b\u5e8f\uff0c\u627e\u51fa\u6570\u7ec4\u4e2d\u7b2ck\u5927\u5c0f\u7684\u6570\uff0c\u8f93\u51fa\u6570\u6240\u5728\u7684\u4f4d\u7f6e\u3002\u4f8b\u5982{2\uff0c4\uff0c3\uff0c4\uff0c7}\u4e2d\uff0c\u7b2c\u4e00\u5927\u7684\u6570\u662f7\uff0c\u4f4d\u7f6e\u57284\u3002\u7b2c\u4e8c\u5927\u3001\u7b2c\u4e09\u5927\u7684\u6570\u90fd\u662f4\uff0c\u4f4d\u7f6e\u57281\u30013\u968f\u4fbf\u8f93\u51fa\u54ea\u4e00\u4e2a\u5747\u53ef\u3002\u51fd\u6570\u63a5\u53e3\u4e3a\uff1aint find_orderk(const int* narry,const int n,const int k)", "\n\u8981\u6c42\u7b97\u6cd5\u590d\u6742\u5ea6\u4e0d\u80fd\u662fO(n^2\uff09", "\n\u8c22\u8c22\uff01", "\n\u53ef\u4ee5\u5148\u7528\u5feb\u901f\u6392\u5e8f\u8fdb\u884c\u6392\u5e8f\uff0c\u5176\u4e2d\u7528\u53e6\u5916\u4e00\u4e2a\u8fdb\u884c\u5730\u5740\u67e5\u627e", "\n\u4ee3\u7801\u5982\u4e0b\uff0c\u5728VC++6.0\u8fd0\u884c\u901a\u8fc7\u3002\u7ed9\u5206\u5427^-^", "//\u5feb\u901f\u6392\u5e8f", "#include", "usingnamespacestd;", "intPartition (int*L,intlow,int high)", "\n{", "\ninttemp = L[low];", "\nintpt = L[low];", "while (low \n{", "\nwhile (low = pt)", "\n\u2013high;", "\nL[low] = L[high];", "\nwhile (low \n++low;", "\nL[low] = temp;", "\n}", "\nL[low] = temp;", "returnlow;", "\n}", "voidQSort (int*L,intlow,int high)", "\n{", "\nif (low \n{", "\nintpl = Partition (L,low,high);", "QSort (L,low,pl - 1);", "\nQSort (L,pl + 1,high);", "\n}", "\n}", "intmain ()", "\n{", "\nintnarry[100],addr[100];", "\nintsum = 1,t;", "cout \ncin >> t;", "while (t != -1)", "\n{", "\nnarry[sum] = t;", "\naddr[sum - 1] = t;", "\nsum++;", "cin >> t;", "\n}", "sum -= 1;", "\nQSort (narry,1,sum);", "for (int i = 1; i \ncout \ncout \n", "intk;", "\ncout \ncin >> k;", "intaa = 1;", "\nintkk = 0;", "\nfor (;;)", "\n{", "\nif (aa == k)", "\nbreak;", "\nif (narry[kk] != narry[kk + 1])", "\n{", "\naa += 1;", "\nkk++;", "\n}", "}", "cout \ncout \nfor (i = 0;i \n{", "\nif (addr[i] == narry[sum - kk])", "\ncout \n}", "return0;", "\n}", "1\u3001\u627e\u9519", "\nVoid test1()", "\n{", "\nchar string[10];", "\nchar* str1=\"0123456789\";", "\nstrcpy(string, str1);// \u6ea2\u51fa\uff0c\u5e94\u8be5\u5305\u62ec\u4e00\u4e2a\u5b58\u653e'\\0'\u7684\u5b57\u7b26string[11]", "\n}", "Void test2()", "\n{", "\nchar string[10], str1[10];", "\nfor(I=0; I\n{", "\nstr1[i] ='a';", "\n}", "\nstrcpy(string, str1);// I\uff0ci\u6ca1\u6709\u58f0\u660e\u3002", "\n}", "Void test3(char* str1)", "\n{", "\nchar string[10];", "\nif(strlen(str1)\n{", "\nstrcpy(string, str1);", "\n}", "\n}", "2.", "\nvoid g(int**);", "\nint main()", "\n{", "\nint line[10],i;", "\nint *p=line; //p\u662f\u5730\u5740\u7684\u5730\u5740", "\nfor (i=0;i\n{", "\n*p=i;", "\ng(&p);//\u6570\u7ec4\u5bf9\u5e94\u7684\u503c\u52a01", "\n}", "\nfor(i=0;i\nprintf(\"%d\\n\",line[i]);", "\nreturn 0;", "\n}", "void g(int**p)", "\n{", "\n(**p)++;", "\n(*p)++;// \u65e0\u6548", "\n}", "\n\u8f93\u51fa\uff1a", "\n1", "\n2", "\n3", "\n4", "\n5", "\n6", "\n7", "\n8", "\n9", "\n10", "\n3. \u5199\u51fa\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u679c", "int sum(int a)", "\n{", "\nauto int c=0;", "\nstatic int b=3;", "\nc+=1;", "\nb+=2;", "\nreturn(a+b+c);", "\n}", "void main()", "\n{", "\nint I;", "\nint a=2;", "\nfor(I=0;I\n{", "\nprintf(\"%d,\", sum(a));", "\n}", "\n}", "\n// static\u4f1a\u4fdd\u5b58\u4e0a\u6b21\u7ed3\u679c\uff0c\u8bb0\u4f4f\u8fd9\u4e00\u70b9\uff0c\u5269\u4e0b\u7684\u81ea\u5df1\u5199", "\n\u8f93\u51fa\uff1a8,10,12,14,16,", "4.", "int func(int a)", "\n{", "\nint b;", "\nswitch(a)", "\n{", "\ncase 1: 30;", "\ncase 2: 20;", "\ncase 3: 16;", "\ndefault: 0", "\n}", "\nreturn b;", "\n}", "\n\u5219func(1)=?", "\n// b\u5b9a\u4e49\u540e\u5c31\u6ca1\u6709\u8d4b\u503c\u3002", "5:", "\nint a[3];", "\na[0]=0; a[1]=1; a[2]=2;", "\nint *p, *q;", "\np=a;", "\nq=&a[2];", "\n\u5219a[q-p]=a[2]", "\n\u89e3\u91ca\uff1a\u6307\u9488\u4e00\u6b21\u79fb\u52a8\u4e00\u4e2aint\u4f46\u8ba1\u6570\u4e3a1", "\u4eca\u5929\u65e9\u4e0a\u7684\u9762\u8bd5\u98989\u9053\uff0c\u6bd4\u8f83\u96be\uff0c\u5411\u725b\u4eba\u8bf7\u6559\uff0c\u56fd\u5185\u7684\u4e00\u725b\u516c\u53f8\uff0c\u5750\u843d\u5728\u5317\u4eac\u5317\u56db\u73af\u67d0\u5927\u53a6\uff1a", "\n1\u3001\u7ebf\u5f62\u8868a\u3001b\u4e3a\u4e24\u4e2a\u6709\u5e8f\u5347\u5e8f\u7684\u7ebf\u5f62\u8868\uff0c\u7f16\u5199\u4e00\u7a0b\u5e8f\uff0c\u4f7f\u4e24\u4e2a\u6709\u5e8f\u7ebf\u5f62\u8868\u5408\u5e76\u6210\u4e00\u4e2a\u6709\u5e8f\u5347\u5e8f\u7ebf\u5f62\u8868h\uff1b", "\n\u7b54\u6848\u5728 \u8bf7\u5316\u5927\u5b66 \u4e25\u9510\u654f\u300a\u6570\u636e\u7ed3\u6784\u7b2c\u4e8c\u7248\u300b\u7b2c\u4e8c\u7ae0\u4f8b\u9898\uff0c\u6570\u636e\u7ed3\u6784\u5f53\u4e2d\uff0c\u8fd9\u4e2a\u53eb\u505a\uff1a\u4e24\u8def\u5f52\u5e76\u6392\u5e8f", "\nLinklist *unio(Linklist *p,Linklist *q){", "\nlinklist *R,*pa,*qa,*ra;", "\npa=p;", "\nqa=q;", "\nR=ra=p;", "\nwhile(pa->next!=NULL&&qa->next!=NULL){", "\nif(pa->data>qa->data){", "\nra->next=qa;", "\nqa=qa->next;", "\n}", "\nelse{", "\nra->next=pa;", "\npa=pa->next;", "\n}", "\n}", "\nif(pa->next!=NULL)", "\nra->next=pa;", "\nif(qa->next!=NULL)", "\nra->next==qa;", "\nreturn R;", "\n}", "\n2\u3001\u8fd0\u7528\u56db\u8272\u5b9a\u7406\uff0c\u4e3aN\u4e2a\u5c40\u57df\u4e3e\u884c\u914d\u8272\uff0c\u989c\u8272\u4e3a1\u30012\u30013\u30014\u56db\u79cd\uff0c\u53e6\u6709\u6570\u7ec4adj[][N]\uff0c\u5982adj[i][j]=1\u5219\u8868\u793ai\u533a\u57df\u4e0ej\u533a\u57df\u76f8\u90bb\uff0c\u6570\u7ec4color[N]\uff0c\u5982color[i]=1,\u8868\u793ai\u533a\u57df\u7684\u989c\u8272\u4e3a1\u53f7\u989c\u8272\u3002", "\n\u56db\u8272\u586b\u5145", "\n3\u3001\u7528\u9012\u5f52\u7b97\u6cd5\u5224\u65ad\u6570\u7ec4a[N]\u662f\u5426\u4e3a\u4e00\u4e2a\u9012\u589e\u6570\u7ec4\u3002", "\n\u9012\u5f52\u7684\u65b9\u6cd5\uff0c\u8bb0\u5f55\u5f53\u524d\u6700\u5927\u7684\uff0c\u5e76\u4e14\u5224\u65ad\u5f53\u524d\u7684\u662f\u5426\u6bd4\u8fd9\u4e2a\u8fd8\u5927\uff0c\u5927\u5219\u7ee7\u7eed\uff0c\u5426\u5219\u8fd4\u56defalse\u7ed3\u675f\uff1a", "\nbool fun( int a[], int n )", "\n{", "\nif( n= =1 )", "\nreturn true;", "\nif( n= =2 )", "\nreturn a[n-1] >= a[n-2];", "\nreturn fun( a,n-1) && ( a[n-1] >= a[n-2] );", "\n}", "\n4\u3001\u7f16\u5199\u7b97\u6cd5\uff0c\u4ece10\u4ebf\u4e2a\u6d6e\u70b9\u6570\u5f53\u4e2d\uff0c\u9009\u51fa\u5176\u4e2d\u6700\u5927\u768410000\u4e2a\u3002", "\n\u7528\u5916\u90e8\u6392\u5e8f\uff0c\u5728\u300a\u6570\u636e\u7ed3\u6784\u300b\u4e66\u4e0a\u6709", "\n\u300a\u8ba1\u7b97\u65b9\u6cd5\u5bfc\u8bba\u300b\u5728\u627e\u5230\u7b2cn\u5927\u7684\u6570\u7684\u7b97\u6cd5\u4e0a\u52a0\u5de5", "\n5\u3001\u7f16\u5199\u4e00unix\u7a0b\u5e8f\uff0c\u9632\u6b62\u50f5\u5c38\u8fdb\u7a0b\u7684\u51fa\u73b0.", "\u540c\u5b66\u76844\u9053\u9762\u8bd5\u9898\uff0c\u5e94\u8058\u7684\u804c\u4f4d\u662f\u641c\u7d22\u5f15\u64ce\u5de5\u7a0b\u5e08\uff0c\u540e\u4e24\u9053\u8d85\u7ea7\u96be\uff0c\uff08\u5e0c\u671b\u5927\u5bb6\u591a\u7ed9\u4e00\u4e9b\u7b97\u53d1\uff09", "\n1.\u7ed9\u4e24\u4e2a\u6570\u7ec4\u548c\u4ed6\u4eec\u7684\u5927\u5c0f\uff0c\u8fd8\u6709\u4e00\u52a8\u6001\u5f00\u8f9f\u7684\u5185\u5b58\uff0c\u6c42\u4ea4\u96c6\uff0c\u628a\u4ea4\u96c6\u653e\u5230\u52a8\u6001\u5185\u5b58dongtai\uff0c\u5e76\u4e14\u8fd4\u56de\u4ea4\u96c6\u4e2a\u6570", "\nlong jiaoji(long* a[],long b[],long* alength,long blength,long* dongtai[])", "\n2.\u5355\u8fde\u8868\u7684\u5efa\u7acb\uff0c\u628a\u2019a'\u2013\u2019z\u201926\u4e2a\u5b57\u6bcd\u63d2\u5165\u5230\u8fde\u8868\u4e2d\uff0c\u5e76\u4e14\u5012\u53d9\uff0c\u8fd8\u8981\u6253\u5370\uff01", "\n\u65b9\u6cd51\uff1a", "\ntypedef struct val", "\n{   int date_1;", "\n    struct val *next;", "\n}*p;", "void main(void)", "\n{   char c;", "    for(c=122;c>=97;c\u2013)", "\n       { p.date=c;", "\n         p=p->next;", "\n        }", "    p.next=NULL;", "\n}", "\n}", "\n\u65b9\u6cd52\uff1a", "\nnode *p = NULL;", "\nnode *q = NULL;", "node *head = (node*)malloc(sizeof(node));", "\nhead->data = \u2018 \u2018;head->next=NULL;", "node *first = (node*)malloc(sizeof(node));", "\nfirst->data = \u2018a\u2019;first->next=NULL;head->next = first;", "\np = first;", "int longth = \u2018z\u2019 \u2013 \u2018b\u2019;", "\nint i=0;", "\nwhile ( i\n{", "\nnode *temp = (node*)malloc(sizeof(node));", "\ntemp->data = \u2018b\u2019+i;temp->next=NULL;q=temp;", "head->next = temp; temp->next=p;p=q;", "\ni++;", "\n}", "print(head);", "3.\u53ef\u6015\u7684\u9898\u76ee\u7ec8\u4e8e\u6765\u4e86", "\n\u8c61\u641c\u7d22\u7684\u8f93\u5165\u4fe1\u606f\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u7edf\u8ba1300\u4e07\u8f93\u5165\u4fe1\u606f\u4e2d\u7684\u6700\u70ed\u95e8\u7684\u524d\u5341\u6761\uff0c\u6211\u4eec\u6bcf\u6b21\u8f93\u5165\u7684\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e3a\u4e0d\u8d85\u8fc7255byte,\u5185\u5b58\u4f7f\u7528\u53ea\u67091G,", "\n\u8bf7\u63cf\u8ff0\u601d\u60f3\uff0c\u5199\u51fa\u7b97\u53d1\uff08c\u8bed\u8a00\uff09\uff0c\u7a7a\u95f4\u548c\u65f6\u95f4\u590d\u6742\u5ea6\uff0c", "\n4.\u56fd\u5185\u7684\u4e00\u4e9b\u5e16\u5427\uff0c\u5982baidu,\u6709\u51e0\u5341\u4e07\u4e2a\u4e3b\u9898\uff0c\u5047\u8bbe\u6bcf\u4e00\u4e2a\u4e3b\u9898\u90fd\u6709\u4e0a\u4ebf\u7684\u8ddf\u5e16\u5b50\uff0c\u600e\u4e48\u6837\u8bbe\u8ba1\u8fd9\u4e2a\u7cfb\u7edf\u901f\u5ea6\u6700\u597d\uff0c\u8bf7\u63cf\u8ff0\u601d\u60f3\uff0c\u5199\u51fa\u7b97\u53d1\uff08c\u8bed\u8a00\uff09\uff0c\u7a7a\u95f4\u548c\u65f6\u95f4\u590d\u6742\u5ea6\uff0c", "#include   string.h", "\nmain(void)", "\n{   char   *src=\u201dhello,world\u201d;", "\n    char   *dest=NULL;", "\n    dest=(char   *)malloc(strlen(src));", "\n    int   len=strlen(str);", "\n    char   *d=dest;", "\n    char   *s=src[len];", "\n    while(len\u2013!=0)", "\n      d++=s\u2013;", "\n    printf(\u201c%s\u201d,dest);", "\n}", "\n\u627e\u51fa\u9519\u8bef\uff01\uff01", "\n#include   \u201cstring.h\u201d", "\n#include \u201cstdio.h\u201d", "\n#include \u201cmalloc.h\u201d", "\nmain(void)", "\n{", "\nchar   *src=\u201dhello,world\u201d;", "\n    char   *dest=NULL;", "\n    dest=(char   *)malloc(sizeof(char)*(strlen(src)+1));", "\n    int   len=strlen(src);", "\n    char   *d=dest;", "\n    char   *s=src+len-1;", "\n    while(len\u2013!=0)", "\n      *d++=*s\u2013;", "\n*d=\u2019\\0\u2032;", "\n    printf(\u201c%s\u201d,dest);", "\n}", "1.    \u7b80\u8ff0\u4e00\u4e2aLinux\u9a71\u52a8\u7a0b\u5e8f\u7684\u4e3b\u8981\u6d41\u7a0b\u4e0e\u529f\u80fd\u3002", "2.    \u8bf7\u5217\u4e3e\u4e00\u4e2a\u8f6f\u4ef6\u4e2d\u65f6\u95f4\u6362\u7a7a\u95f4\u6216\u8005\u7a7a\u95f4\u6362\u65f6\u95f4\u7684\u4f8b\u5b50\u3002", "\nvoid swap(int a,int b)", "\n{", "\nint c; c=a;a=b;b=a;", "\n}", "\n\u2014>\u7a7a\u4f18", "\nvoid swap(int a,int b)", "\n{", "\na=a+b;b=a-b;a=a-b;", "\n}", "\n6.    \u8bf7\u95ee\u4e00\u4e0b\u7a0b\u5e8f\u5c06\u8f93\u51fa\u4ec0\u4e48\u7ed3\u679c\uff1f", "\nchar *RetMenory(void)", "\n{", "\n       char p[] = \u201chellow world\u201d;", "\n       return p;", "\n}", "\nvoid Test(void)", "\n{", "\n       char *str = NULL;", "\n       str = RetMemory();", "\n       printf(str);", "\n}", "\nRetMenory\u6267\u884c\u5b8c\u6bd5\uff0cp\u8d44\u6e90\u88ab\u56de\u6536\uff0c\u6307\u5411\u672a\u77e5\u5730\u5740\u3002\u8fd4\u56de\u5730\u5740\uff0cstr\u7684\u5185\u5bb9\u5e94\u662f\u4e0d\u53ef\u9884\u6d4b\u7684, \u6253\u5370\u7684\u5e94\u8be5\u662fstr\u7684\u5730\u5740", "\u5199\u4e00\u4e2a\u51fd\u6570,\u5b83\u7684\u539f\u5f62\u662fint continumax(char *outputstr,char *intputstr)", "\n\u529f\u80fd\uff1a", "\n\u5728\u5b57\u7b26\u4e32\u4e2d\u627e\u51fa\u8fde\u7eed\u6700\u957f\u7684\u6570\u5b57\u4e32\uff0c\u5e76\u628a\u8fd9\u4e2a\u4e32\u7684\u957f\u5ea6\u8fd4\u56de\uff0c\u5e76\u628a\u8fd9\u4e2a\u6700\u957f\u6570\u5b57\u4e32\u4ed8\u7ed9\u5176\u4e2d\u4e00\u4e2a\u51fd\u6570\u53c2\u6570outputstr\u6240\u6307\u5185\u5b58\u3002\u4f8b\u5982\uff1a\u201dabcd12345ed125ss123456789\u2033\u7684\u9996\u5730\u5740\u4f20\u7ed9intputstr\u540e\uff0c\u51fd\u6570\u5c06\u8fd4\u56de", "\n9\uff0coutputstr\u6240\u6307\u7684\u503c\u4e3a123456789", "\nint continumax(char *outputstr, char *inputstr)", "\n{", "\nchar *in = inputstr, *out = outputstr, *temp, *final;", "\nint count = 0, maxlen = 0;", "while( *in != \u2018\\0\u2032 )", "\n{", "\nif( *in > 47 && *in \n{", "\nfor(temp = in; *in > 47 && *in \ncount++;", "\n}", "\nelse", "\nin++;", "if( maxlen \n{", "\nmaxlen = count;", "\ncount = 0;", "\nfinal = temp;", "\n}", "\n}", "\nfor(int i = 0; i \n{", "\n*out = *final;", "\nout++;", "\nfinal++;", "\n}", "\n*out = '\\0';", "\nreturn maxlen;", "\n}", "\u4e0d\u7528\u5e93\u51fd\u6570,\u7528C\u8bed\u8a00\u5b9e\u73b0\u5c06\u4e00\u6574\u578b\u6570\u5b57\u8f6c\u5316\u4e3a\u5b57\u7b26\u4e32", "\n\u65b9\u6cd51\uff1a", "\nint getlen(char *s){", "\n    int n;", "\n    for(n = 0; *s != '\\0'; s++)", "\n           n++;", "\n    return n;", "\n}", "\nvoid reverse(char s[])", "\n{", "\n   int c,i,j;", "\n   for(i = 0,j = getlen(s) - 1; i \n       c = s[i];", "\n       s[i] = s[j];", "\n       s[j] = c;", "\n   }", "\n}", "\nvoid itoa(int n,char s[])", "\n{", "\n   int i,sign;", "\n   if((sign = n) \n        n = -n;", "\n   i = 0;", "\n   do{/*\u4ee5\u53cd\u5e8f\u751f\u6210\u6570\u5b57*/", "\n      s[i++] = n%10 + '0';/*get next number*/", "\n   }while((n /= 10) > 0);/*delete the number*/", "   if(sign \n      s[i++] = '-';", "   s[i] = '\\0';", "\n   reverse(s);", "\n}", "\n\u65b9\u6cd52:", "\n#include ", "void itochar(int num);", "void itochar(int num)", "\n{", "\nint i = 0;", "\nint j ;", "\nchar stra[10];", "\nchar strb[10];", "\nwhile ( num )", "\n{", "\nstra[i++]=num%10+48;", "\nnum=num/10;", "\n}", "\nstra[i] = \u2018\\0\u2032;", "\nfor( j=0; j \n{", "\nstrb[j] = stra[i-j-1];", "\n}", "\nstrb[j] = '\\0';", "\ncout\n", "}", "\nint main()", "\n{", "\nint num;", "\ncin>>num;", "\nitochar(num);", "\nreturn 0;", "\n}", "\u524d\u51e0\u5929\u9762\u8bd5\uff0c\u6709\u4e00\u9898\u60f3\u4e0d\u660e\u767d,\u8bf7\u6559\u5927\u5bb6\uff01", "\n  typedef struct", "\n  {", "\n     int a:2;", "\n     int b:2;", "\n     int c:1;", "\n  }test;", "  test t;", "\n  t.a = 1;", "\n  t.b = 3;", "\n  t.c = 1;", "  printf(\u201c%d\u201d,t.a);", "\n  printf(\u201c%d\u201d,t.b);", "\n  printf(\u201c%d\u201d,t.c);", "  \u8c22\u8c22!", "\nt.a\u4e3a01,\u8f93\u51fa\u5c31\u662f1", "\nt.b\u4e3a11\uff0c\u8f93\u51fa\u5c31\u662f\uff0d1", "\nt.c\u4e3a1\uff0c\u8f93\u51fa\u4e5f\u662f-1", "\n3\u4e2a\u90fd\u662f\u6709\u7b26\u53f7\u6570int\u561b\u3002", "\n\u8fd9\u662f\u4f4d\u6269\u5c55\u95ee\u9898", "\n01", "\n11", "\n1", "\n\u7f16\u8bd1\u5668\u8fdb\u884c\u7b26\u53f7\u6269\u5c55", "\u6c42\u7ec4\u5408\u6570\uff1a \u6c42n\u4e2a\u6570\uff081\u2026.n\uff09\u4e2dk\u4e2a\u6570\u7684\u7ec4\u5408\u2026.", "\n           \u5982\uff1acombination(5,3)", "\n  \u8981\u6c42\u8f93\u51fa\uff1a543\uff0c542\uff0c541\uff0c532\uff0c531\uff0c521\uff0c432\uff0c431\uff0c421\uff0c321\uff0c", "\n#include", "int pop(int *);", "\nint push(int );", "\nvoid combination(int ,int );", "int stack[3]={0};", "\ntop=-1;", "int main()", "\n{", "\nint n,m;", "\nprintf(\u201cInput two numbers:\\n\u201d);", "\nwhile( (2!=scanf(\u201c%d%*c%d\u201d,&n,&m)) )", "\n{", "\nfflush(stdin);", "\nprintf(\u201cInput error! Again:\\n\u201d);", "\n}", "\ncombination(n,m);", "\nprintf(\u201c\\n\u201d);", "\n}", "\nvoid combination(int m,int n)", "\n{", "\nint temp=m;", "\npush(temp);", "\nwhile(1)", "\n{", "\nif(1==temp)", "\n{", "\nif(pop(&temp)&&stack[0]==n) //\u5f53\u6808\u5e95\u5143\u7d20\u5f39\u51fa&&\u4e3a\u53ef\u80fd\u53d6\u7684\u6700\u5c0f\u503c\uff0c\u5faa\u73af\u9000\u51fa", "\nbreak;", "\n}", "\nelse if( push(\u2013temp))", "\n{", "\nprintf(\u201c%d%d%d  \u201c,stack[0],stack[1],stack[2]);//\u00a7\u00e4\u00a8\u00ec\u00a4@?", "\npop(&temp);", "\n}", "\n}", "\n}", "\nint push(int i)", "\n{", "\nstack[++top]=i;", "\nif(top\nreturn 0;", "\nelse", "\nreturn 1;", "\n}", "\nint pop(int *i)", "\n{", "\n*i=stack[top--];", "\nif(top>=0)", "\nreturn 0;", "\nelse", "\nreturn 1;", "\n}", "1\u3001\u7528\u6307\u9488\u7684\u65b9\u6cd5\uff0c\u5c06\u5b57\u7b26\u4e32\u201cABCD1234efgh\u201d\u524d\u540e\u5bf9\u8c03\u663e\u793a", "\n#include ", "\u6709\u4e00\u4e2a\u6570\u7ec4a[1000]\u5b58\u653e0--1000;\u8981\u6c42\u6bcf\u9694\u4e8c\u4e2a\u6570\u5220\u6389\u4e00\u4e2a\u6570\uff0c\u5230\u672b\u5c3e\u65f6\u5faa\u73af\u81f3\u5f00\u5934\u7ee7\u7eed\u8fdb\u884c\uff0c\u6c42\u6700\u540e\u4e00\u4e2a\u88ab\u5220\u6389\u7684\u6570\u7684\u539f\u59cb\u4e0b\u6807\u4f4d\u7f6e\u3002", "\n\u4ee57\u4e2a\u6570\u4e3a\u4f8b\uff1a", "\n   {0,1,2,3,4,5,6,7} 0-->1\u2013>2\uff08\u5220\u9664\uff09\u2013>3\u2013>4\u2013>5(\u5220\u9664)\u2013>6\u2013>7\u2013>0\uff08\u5220\u9664\uff09\uff0c\u5982\u6b64\u5faa\u73af\u76f4\u5230\u6700\u540e\u4e00\u4e2a\u6570\u88ab\u5220\u9664\u3002", "\n\u65b9\u6cd51\uff1a\u6570\u7ec4", "\n#include ", "int main()", "\n{", "\nint arr[1000];", "\nfor (int i=0;i\narr[i]=i;", "\nint j=0;", "\nint count=0;", "\nwhile(count\n{", "\nwhile(arr[j%1000]==null)", "\nj=(++j)%1000;", "\nj=(++j)%1000;", "\nwhile(arr[j%1000]==null)", "\nj=(++j)%1000;", "\nj=(++j)%1000;", "\nwhile(arr[j%1000]==null)", "\nj=(++j)%1000;", "\narr[j]=null;", "\n++count;", "\n}", "\nwhile(arr[j]==null)", "\nj=(++j)%1000;", "cout\nreturn 0;", "\n}\u65b9\u6cd52\uff1a\u94fe\u8868", "\n#include", " return 0;", "\n}", "\nint main(void) {", "\nint a[MAXLINE],R[MAXLINE],suffix,index,values,start,i,K;", "\nsuffix=index=values=start=0;", "\nK=2;", "for(i=0;i", "\na[i]=i;", "\nR[i]=i+1;", "\n}", "\nR[i-1]=0;", "\nfind_n(a,R,K,index,values,2);", "\nprintf(\"the value is %d,%d\\n\",index,values);", "\nreturn 0;", "\n}", "\u8bd5\u9898\uff1a", "\nvoid test2()", "\n{", "\n   char string[10], str1[10];", "\n   int i;", "\n   for(i=0; i\n   {", "\n      str1[i] = 'a';", "\n   }", "\n   strcpy( string, str1 );", "\n}", "\n\u89e3\u7b54\uff1a\u5bf9\u8bd5\u98982\uff0c\u5982\u679c\u9762\u8bd5\u8005\u6307\u51fa\u5b57\u7b26\u6570\u7ec4str1\u4e0d\u80fd\u5728\u6570\u7ec4\u5185\u7ed3\u675f\u53ef\u4ee5\u7ed93\u5206\uff1b\u5982\u679c\u9762\u8bd5\u8005\u6307\u51fastrcpy(string, str1)\u8c03\u7528\u4f7f\u5f97\u4ecestr1\u5185\u5b58\u8d77\u590d\u5236\u5230string\u5185\u5b58\u8d77\u6240\u590d\u5236\u7684\u5b57\u8282\u6570\u5177\u6709\u4e0d\u786e\u5b9a\u6027\u53ef\u4ee5\u7ed97\u5206\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u6307\u51fa\u5e93\u51fd\u6570strcpy\u5de5\u4f5c\u65b9\u5f0f\u7684\u7ed910\u5206\uff1b", "\nstr1\u4e0d\u80fd\u5728\u6570\u7ec4\u5185\u7ed3\u675f:\u56e0\u4e3astr1\u7684\u5b58\u50a8\u4e3a\uff1a{a,a,a,a,a,a,a,a,a,a},\u6ca1\u6709'\\0'(\u5b57\u7b26\u4e32\u7ed3\u675f\u7b26)\uff0c\u6240\u4ee5\u4e0d\u80fd\u7ed3\u675f", "\nstrcpy( char *s1,char *s2)\u4ed6\u7684\u5de5\u4f5c\u539f\u7406\u662f\uff0c\u626b\u63cfs2\u6307\u5411\u7684\u5185\u5b58\uff0c\u9010\u4e2a\u5b57\u7b26\u4ed8\u5230s1\u6240\u6307\u5411\u7684\u5185\u5b58\uff0c\u76f4\u5230\u78b0\u5230'\\0',\u56e0\u4e3astr1\u7ed3\u5c3e\u6ca1\u6709'\\0'\uff0c\u6240\u4ee5\u5177\u6709\u4e0d\u786e\u5b9a\u6027\uff0c\u4e0d\u77e5\u9053\u4ed6\u540e\u9762\u8fd8\u4f1a\u4ed8\u4ec0\u4e48\u4e1c\u4e1c\u3002", "\n\u6b63\u786e\u5e94\u5982\u4e0b", "\nvoid test2()", "\n{", "\n   char string[10], str1[10];", "\n   int i;", "\n   for(i=0; i\n   {", "\n      str1[i] = 'a'+i; //\u628aabcdefghi\u8d4b\u503c\u7ed9\u5b57\u7b26\u6570\u7ec4", "\n   }", "\n   str[i]='\\0';//\u52a0\u4e0a\u7ed3\u675f\u7b26", "\n   strcpy( string, str1 );", "\n}", "\u7b2c\u4e8c\u4e2acode\u9898\u662f\u5b9e\u73b0strcmp", "\nint StrCmp(const char *str1, const char *str2)", "\n\u505a\u662f\u505a\u5bf9\u4e86\uff0c\u6ca1\u6709\u6284\u641e\uff0c\u6bd4\u8f83\u4e71", "\nint StrCmp(const char *str1, const char *str2)", "\n{", "\n    assert(str1 && srt2);", "\n    while (*str1 && *str2 && *str1 == *str2) {", "\n        str1++, str2++;", "\n    }", "\n    if (*str1 && *str2)", "\n        return (*str1-*str2);", "\n    elseif (*str1 && *str2==0)", "\n        return 1;", "\n    elseif (*str1 = = 0 && *str2)", "\n        return -1;", "\n    else", "\n        return 0;", "\n}", "int StrCmp(const char *str1, const char *str2)", "\n{", "\n         //\u7701\u7565\u5224\u65ad\u7a7a\u6307\u9488(\u81ea\u5df1\u4fdd\u8bc1)", "\nwhile(*str1 && *str1++ = = *str2++);", "\nreturn *str1-*str2;", "\n}", "\n\u7b2c\u4e09\u4e2acode\u9898\u662f\u5b9e\u73b0\u5b50\u4e32\u5b9a\u4f4d", "\nint FindSubStr(const char *MainStr, const char *SubStr)", "\n\u505a\u662f\u505a\u5bf9\u4e86\uff0c\u6ca1\u6709\u6284\u641e\uff0c\u6bd4\u8f83\u4e71", "\nint MyStrstr(const char* MainStr, const char* SubStr)", "\n{", "\nconst char *p;", "\nconst char *q;", "\nconst char * u = MainStr;", "//assert((MainStr!=NULL)&&( SubStr!=NULL));//\u7528\u65ad\u8a00\u5bf9\u8f93\u5165\u8fdb\u884c\u5224\u65ad", "\nwhile(*MainStr) //\u5185\u90e8\u8fdb\u884c\u9012\u589e", "\n{", "\np = MainStr;", "\nq = SubStr;", "\nwhile(*q && *p && *p++ == *q++);", "\nif(!*q )", "\n{", "\nreturn MainStr - u +1 ;//MainStr\u6307\u5411\u5f53\u524d\u8d77\u59cb\u4f4d\uff0cu\u6307\u5411", "\n}", "\nMainStr ++;", "\n}", "\nreturn -1;", "\n}", "\u5206\u6790\uff1a", "\nint arr[] = {6,7,8,9,10};", "\nint *ptr = arr;", "\n*(ptr++)+=123;", "\nprintf(\u201c %d %d \u201d, *ptr, *(++ptr));", "\n\u8f93\u51fa\uff1a8 8", "\n\u8fc7\u7a0b\uff1a\u5bf9\u4e8e*(ptr++)+=123;\u5148\u505a\u52a0\u6cd56+123\uff0c\u7136\u540e++\uff0c\u6307\u9488\u6307\u54117\uff1b\u5bf9\u4e8eprintf(\u201c %d %d \u201d, *ptr, *(++ptr));\u4ece\u540e\u5f80\u524d\u6267\u884c\uff0c\u6307\u9488\u5148++\uff0c\u6307\u54118\uff0c\u7136\u540e\u8f93\u51fa8\uff0c\u7d27\u63a5\u7740\u518d\u8f93\u51fa8", "\u534e\u4e3a\u5168\u5957\u5b8c\u6574\u8bd5\u9898", "\n\u9ad8\u7ea7\u9898", "\n6\u3001\u5df2\u77e5\u4e00\u4e2a\u5355\u5411\u94fe\u8868\u7684\u5934\uff0c\u8bf7\u5199\u51fa\u5220\u9664\u5176\u67d0\u4e00\u4e2a\u7ed3\u70b9\u7684\u7b97\u6cd5\uff0c\u8981\u6c42\uff0c\u5148\u627e\u5230\u6b64\u7ed3\u70b9\uff0c\u7136\u540e\u5220\u9664\u3002", "\nslnodetype *Delete(slnodetype *Head,int key){}\u4e2dif(Head->number==key)", "\n{", "\nHead=Pointer->next;", "\nfree(Pointer);", "\nbreak;", "\n}", "\nBack = Pointer;", "\n        Pointer=Pointer->next;", "\nif(Pointer->number==key)", "\n{", "\n            Back->next=Pointer->next;", "\nfree(Pointer);", "\nbreak;", "\n}", "\nvoid delete(Node* p)", "\n{", "\n    if(Head = Node)", "    while(p)", "\n}", "\u6709\u4e00\u4e2a16\u4f4d\u7684\u6574\u6570\uff0c\u6bcf4\u4f4d\u4e3a\u4e00\u4e2a\u6570\uff0c\u5199\u51fd\u6570\u6c42\u4ed6\u4eec\u7684\u548c\u3002", "\n\u89e3\u91ca\uff1a", "\n\u6574\u65701101010110110111", "\n\u548c  1101+0101+1011+0111", "\n\u611f\u89c9\u5e94\u8be5\u4e0d\u96be\uff0c\u5f53\u65f6\u5bf9\u9898\u7406\u89e3\u7684\u4e0d\u662f\u5f88\u6e05\u695a\uff0c\u6240\u4ee5\u5199\u4e86\u4e00\u4e2a\u51fd\u6570\uff0c\u4e5f\u4e0d\u77e5\u9053\u5bf9\u4e0d\u5bf9\u3002", "\n\u7591\u95ee\uff1a", "\n    \u65e2\u7136\u662f16\u4f4d\u7684\u6574\u6570\uff0c1101010110110111\u662f2\u8fdb\u5236\u7684\uff0c\u90a3\u4e48\u51fd\u6570\u53c2\u6570\u600e\u4e48\u5b9a\u4e49\u5462\uff0c\u8bf7\u5927\u867e\u6307\u6559\u3002", "\n\u7b54\u6848\uff1a\u7528\u5341\u8fdb\u5236\u505a\u53c2\u6570\uff0c\u8ba1\u7b97\u65f6\u6309\u4e8c\u8fdb\u5236\u8003\u8651\u3002", "\n/* n\u5c31\u662f16\u4f4d\u7684\u6570\uff0c\u51fd\u6570\u8fd4\u56de\u5b83\u7684\u56db\u4e2a\u90e8\u5206\u4e4b\u548c */", "\nchar SumOfQuaters(unsigned short n)", "\n{", "\n    char c = 0;", "\n    int i = 4;", "\n    do", "\n    {", "\n        c += n & 15;", "\n        n = n >> 4;", "\n    } while (\u2013i);", "    return c;", "\n}", "\u67091,2,\u2026.\u4e00\u76f4\u5230n\u7684\u65e0\u5e8f\u6570\u7ec4,\u6c42\u6392\u5e8f\u7b97\u6cd5,\u5e76\u4e14\u8981\u6c42\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n),\u7a7a\u95f4\u590d\u6742\u5ea6O(1),\u4f7f\u7528\u4ea4\u6362,\u800c\u4e14\u4e00\u6b21\u53ea\u80fd\u4ea4\u6362\u4e24\u4e2a\u6570.\uff08\u534e\u4e3a\uff09", "\n#include", "int main()", "\n{", "\n    int a[]  = {10,6,9,5,2,8,4,7,1,3};", "\n    int len = sizeof(a) / sizeof(int);", "\n    int temp;", "    for(int i = 0; i \n    {", "\ntemp = a[a[i] - 1];", "\na[a[i] - 1] = a[i];", "\na[i] = temp;", "if ( a[i] == i + 1)", "\n  i++;", "\n    }", "\n    for (int j = 0; j \n      cout\n", "    return 0;", "\n}", "\uff08\u6167\u901a\uff09", "\n1 \u5199\u51fa\u7a0b\u5e8f\u628a\u4e00\u4e2a\u94fe\u8868\u4e2d\u7684\u63a5\u70b9\u987a\u5e8f\u5012\u6392", "\ntypedef struct linknode", "\n{", "\nint data;", "\nstruct linknode *next;", "\n}node;", "\n//\u5c06\u4e00\u4e2a\u94fe\u8868\u9006\u7f6e", "\nnode *reverse(node *head)", "\n{", "\nnode *p,*q,*r;", "\np=head;", "\nq=p->next;", "\nwhile(q!=NULL)", "\n{", "\nr=q->next;", "\nq->next=p;", "\np=q;", "\nq=r;", "\n}", "head->next=NULL;", "\nhead=p;", "\nreturn head;", "\n}", "\n2 \u5199\u51fa\u7a0b\u5e8f\u5220\u9664\u94fe\u8868\u4e2d\u7684\u6240\u6709\u63a5\u70b9", "\nvoid del_all(node *head)", "\n{", "\nnode *p;", "\nwhile(head!=NULL)", "\n{", "\np=head->next;", "\nfree(head);", "\nhead=p;", "\n}", "\ncout\n}", "\n3\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0cs,t;\u628at\u5b57\u7b26\u4e32\u63d2\u5165\u5230s\u5b57\u7b26\u4e32\u4e2d\uff0cs\u5b57\u7b26\u4e32\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u5b58\u653et\u5b57\u7b26\u4e32", "\nvoid insert(char *s, char *t, int i)", "\n{", "\nchar *q = t;", "\nchar *p =s;", "\nif(q == NULL)return;", "\nwhile(*p!=\u2019\\0\u2032)", "\n{", "\np++;", "\n}", "\nwhile(*q!=0)", "\n{", "\n*p=*q;", "\np++;", "\nq++;", "\n}", "\n*p = \u2018\\0\u2032;", "\n}", "\u5206\u6790\u4e0b\u9762\u7684\u4ee3\u7801\uff1a", "\nchar *a = \u201chello\u201d;", "\nchar *b = \u201chello\u201d;", "\nif(a= =b)", "\nprintf(\u201cYES\u201d);", "\nelse", "\nprintf(\u201cNO\u201d);", "\n\u8fd9\u4e2a\u7b80\u5355\u7684\u9762\u8bd5\u9898\u76ee,\u6211\u9009\u8f93\u51fa no(\u5bf9\u6bd4\u7684\u5e94\u8be5\u662f\u6307\u9488\u5730\u5740\u5427),\u53ef\u5728VC\u662fYES \u5728C\u662fNO", "\nlz\u7684\u5462\uff0c\u662f\u4e00\u4e2a\u5e38\u91cf\u5b57\u7b26\u4e32\u3002\u4f4d\u4e8e\u9759\u6001\u5b58\u50a8\u533a\uff0c\u5b83\u5728\u7a0b\u5e8f\u751f\u547d\u671f\u5185\u6052\u5b9a\u4e0d\u53d8\u3002\u5982\u679c\u7f16\u8bd1\u5668\u4f18\u5316\u7684\u8bdd\uff0c\u4f1a\u6709\u53ef\u80fda\u548cb\u540c\u65f6\u6307\u5411\u540c\u4e00\u4e2ahello\u7684\u3002\u5219\u5730\u5740\u76f8\u540c\u3002\u5982\u679c\u7f16\u8bd1\u5668\u6ca1\u6709\u4f18\u5316\uff0c\u90a3\u4e48\u5c31\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u5730\u5740\uff0c\u5219\u4e0d\u540c"], "title": "C\u8bed\u8a00\u9762\u8bd5\u9898\u5927\u6c47\u603b"},
{"contents": ["1.", "255.255.255.245", "255.255.255.240", "\n255.240.240.240", "\n7.0.0.0", "\n\u54ea\u4e2a\u5b50\u7f51\u63a9\u7801\u6709\u9519\uff0c\u5e76\u8bf4\u51fa\u7406\u7531", "\u00a0", "2. \u4e0b\u9762\u54ea\u4e2a\u4e0d\u662f\u52a8\u6001\u8def\u7531\u534f\u8bae\uff08\u9009\u9879\u4e0d\u8bb0\u5f97\u4e86)", "3. nbtstat", "4. ping\u7684\u534f\u8bae", "5. linux\u67e5\u770bcpu\u5360\u7528\u7387\u7684\u547d\u4ee4\uff0c\u67e5\u770b\u78c1\u76d8\u5927\u5c0f\u7684\u547d\u4ee4\uff0c\u6587\u4ef6\u7684\u5c5e\u6027", "6. \u6709\u4e2a\u5199shell\u811a\u672c\u7684\u9898", "7. winrunner\u7684\u4e24\u79cd\u6a21\u5f0f", "8. ftp\u7684\u4e24\u79cd\u6a21\u5f0f", "\u4e3b\u52a8\u6a21\u5f0f\u548c\u88ab\u52a8\u6a21\u5f0f", "9. \u4ec0\u4e48\u662f\u53d1\u6563\uff08\u968f\u673a\uff09\u6d4b\u8bd5\uff1f\u4ec0\u4e48\u65f6\u5019\u505a\uff1f\u600e\u4e48\u505a\uff1f", "10. c\u8bed\u8a00\u7f16\u7a0b\u9898\u548cc\u8bed\u8a00\u6539\u9519\u9898\u3002", "\n\u6539\u9519", "\nvoid main()", "\n{ char str[10],data[10];", "\nfor(i=0;i<10;i++)", "\n{", "\ndata[i]=\u2019a';", "\n}", "\nstrcpy(str,data);", "\n}"], "title": "\u6df1\u4fe1\u670d\u7b14\u8bd5\u9898"},
{"contents": ["\u7b14\u8bd5\u9898\u5206\u4e09\u90e8\u5206,\u90fd\u4ee5\u82f1\u6587\u7ed9\u51fa\u9898\u76ee", "\n\u4e00.C\u8bed\u8a00", "\n1.\u5bf9\u4e0b\u5217\u7684\u7a0b\u5e8f\u8fdb\u884c\u5206\u6790\uff0c\u5982\u6709\u9519\u8bef\u6539\u6b63", "\nstruct EMPLOY", "\n{", "\nchar name[512];", "\nint wage;", "\nint money;", "\n}", "\nvoid fun(EMPLOY *emp)", "\n{", "\nemp->money=3*emp->wage;", "\n}", "\nmain()", "\n{", "\nEMPLOY *emp;", "\nemp->name=\u201dmy name is\u201d;", "\nemp->wage=\u201d280\u2033;", "\nfun(emp);", "\nprintf(\u201cmy name is %s,money is %d\u201d,emp->name,emp->money);", "\n}", "2.\u5bf9\u4e0b\u5217\u7684\u7a0b\u5e8f\u8fdb\u884c\u5206\u6790\uff0c\u5982\u6709\u9519\u8bef\u6539\u6b63", "\nvoid test1()", "\n{", "\nchar *fp;", "\ntest2();", "\nfp=test3();", "\nprintf(\u201c\\n%s\u201d,fp);", "\n}", "\nvoid test2()", "\n{", "\nunsigned int i=0;", "\nchar *buffer[]={", "\n\u201c111111\u2033,", "\n\u201cmy name if\u201d,", "\n\u201cor your are\u201d,", "\n\u201caur ins arem\u201d", "\n};", "\nfor(i=5; i>=0; ++i)", "\n{", "\nprintf(\u201c\\n\u201d);", "\nprintf(\u201c%s\u201d,buffer[i]);", "\nprintf(\u201c\\n\u201d);", "\n}", "\n}", "\nvoid test3()", "\n{", "\nchar buff[120];", "\nchar *pmbuffer=(char *)malloc(150*sizeof(char ));", "\nstrcpy(pmbuffer,(char *)\u201d132132132\u2033);", "\nstrncpy(buffer,pmbuffer,100);", "\nreturn buff;", "\n}", "3.\u5bf9\u4e0b\u5217\u7684\u7a0b\u5e8f\u5206\u6790", "\nstatic int s;", "\nunsign char k", "\nvoid dosomething()", "\n{", "\nstatic int t;", "\nint *c;", "\nc = (int *)maolloc(20*sizeof(int));", "\n}", "\u89e3\u91ca\u4e0bs\u548ct\u7684\u533a\u522b", "\n\u89e3\u91ca\u4e0b\u201c\u5c40\u90e8\u53d8\u91cf\u201c\u548c\u201c\u5168\u5c40\u53d8\u91cf\u201d\uff0c\u8bf4\u4e0bk\u53d8\u91cf\uff0cc\u53d8\u91cf\uff0c*c\u7684\u5b58\u50a8\u53ca\u533a\u522b", "4.\u7f16\u5199\u51fd\u6570:\u5bf9\u4efb\u610f\u4e00\u4e2achar\u578b\u7684\u4e8c\u8fdb\u5236\u4f4d\u8fdb\u884c\u9006\u8f6c\uff0c\u598210001100\uff0c\u9006\u8f6c\u540e\u4e3a\uff1b00110001,\u7f16\u7a0b\u5b9e\u73b0\u3002", "\u4e8c.C++", "\n\u4e24\u9053\u591a\u6001\u7684\u9898,\u8ba9\u4f60\u5199\u51fa\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u679c.", "\u4e24\u9053MFC\u7684\u9898,\u5206\u522b\u662f\u4e00\u4e2a\u5934\u6587\u4ef6\u548c\u4e00\u4e2aCPP\u6587\u4ef6,\u8ba9\u4f60\u89e3\u91ca\u4ee3\u7801\u7684\u542b\u4e49", "\n\u6709", "\n#pragma once", "\n#pragma comment(lib, \u201cXXXLib.lib\u201d)", "\u6709 CreateMutex \u548c ::RegisterWindowMessage\u76f8\u5173", "\u4e09.HTML", "\n1.\u8bf4\u8bf4\u4f60\u5bf9HTML\u548cCSS\u7684\u4e86\u89e3", "\n2.\u4f60\u77e5\u9053\u7684HTML\u63a7\u4ef6", "\n3.HTML\u7684Header\u6709\u54ea\u4e9b\u57df", "\n4.\u5199\u4e00\u4e2aJavaScript\u7a0b\u5e8f,\u6c421+2+3+4+5\u2026.+100", "\u56db.\u5176\u4ed6", "1.\u7f51\u7edc\u901a\u4fe1\u548c\u6570\u636e\u5e93", "\n\u4f7f\u7528VS2003\u548cMFC\u5199\u51fa\u4e00\u4eba\u804a\u5929\u5de5\u5177,\u8fd0\u884c\u5728\u516c\u53f8\u5185\u90e8\u7f51,\u5e76\u4e14\u53ef\u4ee5\u591a\u5b9e\u4f8b\u8fd0\u884c.", "\n\u754c\u9762\u53ef\u4ee5\u5982\u4e0b:", "\nIP:\u00a0\u00a0 .\u00a0\u00a0 .\u00a0\u00a0 .", "\nChat Message:", "New Message:", "\n\u00a0\u00a0Send", "\u804a\u5929\u7684\u8bb0\u5f55\u53ef\u4ee5\u4fdd\u5b58\u5230\u6307\u5b9a\u6570\u636e\u5e93:", "\n\u5730\u5740:", "\n\u7528\u6237\u540d:", "\n\u5bc6\u7801:", "\n\u2026..", "\n\u4e00\u5f20\u56fe,\u8868\u7ed3\u6784", "\u00a0", "2.\u4f4d\u56fe\u64cd\u4f5c", "\n\u4f7f\u7528VS2003\u548cMFC\u5199\u51fa\u5982\u4e0b\u7a0b\u5e8f.", "\na.\u670d\u52a1\u7aef\u7528\u4e8e\u63a5\u6536\u5ba2\u6237\u7684\u8bf7\u6c42\u6765\u5bf9\u4f4d\u56fe\u6587\u4ef6\u8fdb\u884c\u64cd\u4f5c.", "\n\u63a5\u6536\u7684\u4fe1\u606f", "\n1.\u6e90\u6587\u4ef6\u4f4d\u7f6e", "\n2.\u6587\u5b57", "\n3.\u6587\u5b57\u8f93\u51fa\u7684\u5750\u6807", "\n4.\u989c\u8272", "\n5.\u76ee\u6807\u6587\u4ef6\u4f4d\u7f6e", "\nb.\u5ba2\u6237\u7aef\u4f7f\u7528\u754c\u9762\u5411\u670d\u52a1\u7aef\u53d1\u9001\u8bf7\u6c42\u5e76\u663e\u793a\u51fa\u7ed3\u679c."], "title": "\u4f1f\u6613\u8fbe\u7b14\u8bd5\u9898-Windows\u5f00\u53d1"},
{"contents": ["\u4e00\u3001\u8f93\u5165\u4e00\u4e2an \uff0c\u7136\u540e\u5728\u5c4f\u5e55\u4e0a\u6253\u5370\u51faNxN \u7684\u77e9\u9635\uff01\n", "\u4f8b\u5982\uff0c\u8f93\u5165\u4e00\u4e2a3\uff0c\u5219\n", "1 2 3\n", "8 9 4\n", "7 6 5\n", "\u8f93\u5165\u4e00\u4e2a4\uff0c\u5219\n", "1    2  3  4\n", "12 13 14 5\n", "11 16 15 6\n", "10  9  8  7\n", "\u53c2\u8003\u7b54\u6848\uff1a\n", "#include<stdio.h>\n", "#include<conio.h>\n", "#define N 10\n", "\n\u00a0", "void printCube(int a[][N],int n);\n", "\n\u00a0", "void main()\n", "{\n", "  int a[N][N],n;\n", "  printf(\u201cinput n:\\n\u201d);\n", "  scanf(\u201c%d\u201d,&n);\n", "  printCube(&a[0],n);\n", "  getch();\n", "}\n", "\n\u00a0", "void printCube(int a[][N],int n)\n", "{\n", "  int i,j,round=1;\n", "  int m=1;\n", "  for(i=0;i<n;i++)\n", "a[0]=m++;\n", "  for(i=n-1;i>=n/2;i\u2013)\n", "  {\n", "for(j=round;j<=i;j++)\n", "  a[j]=m++;\n", "for(j=i;j>=round;j\u2013)\n", "  a[j-1]=m++;\n", "for(j=i;j>round;j\u2013)\n", "  a[j-1][round-1]=m++;\n", "for(j=round;j<i;j++)\n", "  a[round][j]=m++;\n", "round++;\n", "  }\n", "  for(i=0;i<n;i++){\n", "for(j=0;j<n;j++)\n", " printf(\u201c%3d\u201d,a[j]);\n", "printf(\u201c\\n\u201d);\n", "  }\n", "}\n", "\n\u00a0", "\n\u00a0", "\u4e8c\u3001\u6717\u8baf\u9762\u8bd5\u9898 \uff1a\n", "There are two int variables: a and b, don\u2019t use \u201cif\u201d, \u201c? :\u201d, \u201cswitch\u201d or other judgement statements, find out the biggest one of the two numbers.\n", "\u53c2\u8003\u7b54\u6848\uff1a\n", "\u65b9\u6848\u4e00int max = ((a+b)+abs(a-b)) / 2\n", "\n\u00a0", "\n\u00a0", "\u65b9\u6848\u4e8cint c = a -b;\n", "char *strs[2] = {\u201ca\u5927\u201d,\u201db\u5927\u201d};\n", "c = unsigned(c) >> (sizeof(int) * 8 \u2013 1);\n", "\n\u00a0", "\n\u00a0", "\u4e09\u3001\u6717\u8baf\u9762\u8bd5\u9898 \uff1a\n", "\u5982\u4f55\u6253\u5370\u51fa\u5f53\u524d\u6e90\u6587\u4ef6\u7684\u6587\u4ef6\u540d\u4ee5\u53ca\u6e90\u6587\u4ef6\u7684\u5f53\u524d\u884c\u53f7\uff1f\n", "\u53c2\u8003\u7b54\u6848\uff1a \u901a\u5e38\u4f7f\u7528\u7684\u5c31\u662f__FILE__, __LINE__\uff0c\u5728\u8c03\u8bd5\u51fd\u6570\u4e2d\u5229\u7528\u201d%s\u201d,\u201d%ld\u201d,\u6253\u5370\u5c31\u597d\u4e86\u3002\n", "\n\u00a0", "\n\u00a0", "\u56db\u3001\u6717\u8baf\u9762\u8bd5\u9898 \uff1a\n", "main\u4e3b\u51fd\u6570\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u662f\u5426\u53ef\u80fd\u4f1a\u518d\u6267\u884c\u4e00\u6bb5\u4ee3\u7801\uff0c\u7ed9\u51fa\u8bf4\u660e\uff1f\n", "\u53c2\u8003\u7b54\u6848\uff1a crt\u4f1a\u6267\u884c\u53e6\u4e00\u4e9b\u4ee3\u7801\uff0c\u8fdb\u884c\u5904\u7406\u5de5\u4f5c\u3002\n", "\u5982\u679c\u4f60\u9700\u8981\u52a0\u5165\u4e00\u6bb5\u5728main\u9000\u51fa\u540e\u6267\u884c\u7684\u4ee3\u7801\uff0c\u53ef\u4ee5\u4f7f\u7528atexit()\u51fd\u6570\uff0c\u6ce8\u518c\u4e00\u4e2a\u51fd\u6570\u3002\n", "\u8bed\u6cd5\uff1a\n", "#include <stdlib.h>\n", "int atexit(void (*function\u201d)(void));\n", "#include <stdlib.h>\n", "#include <stdio.h>\n", "\n\u00a0", "void fn1( void ), fn2( void ), fn3( void ), fn4( void );\n", "\n\u00a0", "int main( void )\n", "{\n", "  atexit( fn1 );\n", "  atexit( fn2 );\n", "  atexit( fn3 );\n", "  atexit( fn4 );\n", "  printf( \u201cThis is executed first.\\n\u201d );\n", "}\n", "\n\u00a0", "void fn1()\n", "{\n", "  printf( \u201cnext.\\n\u201d );\n", "}\n", "\n\u00a0", "void fn2()\n", "{\n", "  printf( \u201cexecuted \u201d );\n", "}\n", "\n\u00a0", "void fn3()\n", "{\n", "  printf( \u201cis \u201d );\n", "}\n", "\n\u00a0", "void fn4()\n", "{\n", "  printf( \u201cThis \u201d );\n", "}\n", "\n\u00a0", "\n\u00a0", "\u4e94\u3001\u6717\u8baf\u9762\u8bd5\u9898 \uff1a\n", "\u5982\u4f55\u5224\u65ad\u4e00\u6bb5\u7a0b\u5e8f\u662f\u7531C\u7f16\u8bd1\u7a0b\u5e8f\u8fd8\u662f\u7531C++\u7f16\u8bd1\u7a0b\u5e8f\u7f16\u8bd1\u7684\uff1f\n", "\u53c2\u8003\u7b54\u6848\uff1a c++\u7f16\u8bd1\u65f6\u5b9a\u4e49\u4e86 __cplusplus\n", "c\u7f16\u8bd1\u65f6\u5b9a\u4e49\u4e86 _STDC_\n", "\n\u00a0", "\n\u00a0", "\u516d\u3001\u4e0b\u9762\u8fd9\u9053\u9762\u8bd5\u9898\u600e\u4e48\u505a\uff08\u6307\u9488\uff09\uff1f #include<stdio.h>\n", "main(){\n", "int c[3][3]={1,2,3,4,5,6,7,8,9};\n", "for(int i=0;i<3;i++)\n", "for(int j=0;j<3;j++)\n", "printf(\u201c%ld\\n\u201d,&c[j]);\n", "printf(\u201c\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014-\\n\u201d);\n", "printf(\u201c%ld\\n\u201d,(c+1));\n", "printf(\u201c%ld\\n\u201d,(*c+1));\n", "printf(\u201c%ld\\n\u201d,&c[0][0]);\n", "printf(\u201c%ld\\n\u201d,**c);\n", "printf(\u201c%ld\\n\u201d,*c[0]);\n", "if(int(c)==int(*c))\n", "printf(\u201cequl\u201d);\n", "}\n", "\u4e3a\u4ec0\u4e48c\uff0c*c\u7684\u503c\u76f8\u7b49\uff0c\uff08c+1\uff09\uff0c\uff08*c+1\uff09\u7684\u503c\u4e0d\u7b49\n", "c\uff0c*c\uff0c**c\uff0c\u4ee3\u8868\u4ec0\u4e48\u610f\u601d\uff1f\n", "\n\u00a0", "\n\u00a0", "\u53c2\u8003\u7b54\u6848\uff1a c\u662f\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u5730\u5740\uff0c*c\u662f\u7b2c\u4e00\u884c\u5143\u7d20\u7684\u9996\u5730\u5740\uff0c\u5176\u5b9e\u7b2c\u4e00\u884c\u5143\u7d20\u7684\u5730\u5740\u5c31\u662f\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u5730\u5740\uff0c\u8fd9\u5bb9\u6613\u7406\u89e3\u3002**c\u662f\u63d0\u9886\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002\n", "\u4e3a\u4ec0\u4e48c\uff0c*c\u7684\u503c\u76f8\u7b49\uff1f\n", "int c\u56e0\u4e3a\u76f4\u63a5\u7528c\u8868\u793a\u6570\u7ec4c[0][0]\n", "printf(\u201c%ld\\n\u201d,*c[0]);\u8bed\u53e5\u5df2\u5c06\u6307\u9488\u79fb\u5230\u6570\u7ec4\u5934\u3002\n", "int(*c)\u8868\u793ac0\u7684\u503c\u4e3a1\uff0c\u6240\u4ee5\u76f8\u7b49\u3002\n", "\u6570\u7ec4c\u7684\u5b58\u653e\u7a7a\u95f4\u793a\u610f\u5982\u4e0b\uff1a\uff08\u673a\u5668\u4e2d\u662f\u884c\u4f18\u5148\u5b58\u653e\u7684\uff09\n", "c[0][0] c[0][1] c[0][2]\n", "c[1][0] c[1][1] c[1][2]\n", "c[2][0] c[2][1] c[2][2]\n", "\n\u00a0", "c\u662f\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u540d\uff0c\u5b9e\u9645\u4e0a\u5b83\u662f\u4e00\u4e2a\u6307\u9488\u5e38\u91cf\uff0c\u4e0d\u80fd\u8fdb\u884c\u81ea\u52a0\u3001\u81ea\u51cf\u8fd0\u7b97\uff0c\u5373\uff1ac++\u3001c\u2013\u3001++c\u3001\u2013c\n", "\u90fd\u662f\u4e0d\u5141\u8bb8\u7684\uff1b\n", "c\uff1a  \u6570\u7ec4\u540d\uff1b\u662f\u4e00\u4e2a\u4e8c\u7ef4\u6307\u9488\uff0c\u5b83\u7684\u503c\u5c31\u662f\u6570\u7ec4\u7684\u9996\u5730\u5740\uff0c\u4e5f\u5373\u7b2c\u4e00\u884c\u5143\u7d20\u7684\u9996\u5730\u5740\uff08\u7b49\u4e8e *c\uff09\uff0c\u4e5f\n", "    \u7b49\u4e8e\u7b2c\u4e00\u884c\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u5730\u5740\uff08 & c[0][0]\uff09\uff1b\u53ef\u4ee5\u8bf4\u6210\u662f\u4e8c\u7ef4\u6570\u7ec4\u7684\u884c\u6307\u9488\u3002\n", "*c\uff1a \u7b2c\u4e00\u884c\u5143\u7d20\u7684\u9996\u5730\u5740\uff1b\u662f\u4e00\u4e2a\u4e00\u7ef4\u6307\u9488\uff0c\u53ef\u4ee5\u8bf4\u6210\u662f\u4e8c\u7ef4\u6570\u7ec4\u7684\u5217\u6307\u9488\u3002\n", "**c\uff1a\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u503c\uff1b\u5373\uff1ac[0][0]\n", "\u6240\u4ee5\uff1a\n", "    c \u548c *c\u7684\u503c\u662f\u76f8\u7b49\u7684\uff0c\u4f46\u4ed6\u4eec\u4e24\u8005\u4e0d\u80fd\u76f8\u4e92\u8d4b\u503c\uff0c\uff08\u7c7b\u578b\u4e0d\u540c\uff09\uff1b\n", "    \uff08c + 1\uff09 \uff1ac\u662f\u884c\u6307\u9488\uff0c\uff08c + 1\uff09\u662f\u5728c\u7684\u57fa\u7840\u4e0a\u52a0\u4e0a\u4e8c\u7ef4\u6570\u7ec4\u4e00\u884c\u7684\u5730\u5740\u957f\u5ea6\uff0c\u5373\u4ece&c[0][0]\n", "    \u53d8\u5230\u4e86&c[1][0]\uff1b\n", "   \uff08*c + 1\uff09\uff1a*c\u662f\u5217\u6307\u9488\uff0c\uff08*c + 1\uff09\u662f\u5728*c\u7684\u57fa\u7840\u4e0a\u52a0\u4e0a\u4e8c\u6570\u7ec4\u4e00\u4e2a\u5143\u7d20\u7684\u6240\u5360\u7684\u957f\u5ea6\uff0c\u5373\u4ece\n", "    &c[0][0]\u53d8\u5230\u4e86&c[0][1]\n", "    \u4ece\u800c\uff08c + 1\uff09\u548c\uff08*c + 1\uff09\u7684\u503c\u5c31\u4e0d\u76f8\u7b49\u4e86\n", "\n\u00a0", "\n\u00a0", "\u4e03\u3001\u5b9a\u4e49 int **a[3][4], \u5219\u53d8\u91cf\u5360\u6709\u7684\u5185\u5b58\u7a7a\u95f4\u4e3a\uff1a_____\n", "\u53c2\u8003\u7b54\u6848\uff1a int **p; /*16\u4f4d\u4e0bsizeof(p)=2, 32\u4f4d\u4e0bsizeof(p)=4*/\n", "\u603b\u5171  3*4*sizeof(p)\n", "\n\u00a0", "\n\u00a0", "\u516b\u3001\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u8981\u6c42\u8f93\u5165\u5e74\u6708\u65e5\u65f6\u5206\u79d2\uff0c\u8f93\u51fa\u8be5\u5e74\u6708\u65e5\u65f6\u5206\u79d2\u7684\u4e0b\u4e00\u79d2\u3002\u5982\u8f93\u51652004\u5e7412\u670831\u65e523\u65f659\u520659\u79d2\uff0c\u5219\u8f93\u51fa2005\u5e741\u67081\u65e50\u65f60\u52060\u79d2\u3002\n", "\u53c2\u8003\u7b54\u6848\uff1a \u5224\u65ad\u5e74\u4efd\u662f\u5426\u662f\u95f0\u5e74\uff0c\u6708\u4efd\u7684\u5927\u5c0f\u6708\uff0c\n", "\u6708\uff0812\u8fdb\u5236\uff09\u3001\u65e5\uff08\u4e0e\u95f0\u5e74\u3001\u5927\u5c0f\u6708\u6709\u5173\uff09\u3001\u65f6\uff0824\u8fdb\u5236\uff09\u3001\u5206\uff0860\u8fdb\u5236\uff09\u3001\u5999\uff0860\u8fdb\u5236\uff09\n", "\n\u00a0", "\n\u00a0", "\u4e5d\u3001\u6c64\u59c6\u900a\u7684\u9762\u8bd5\u8bd5\u9898\uff1a\u600e\u4e48\u5feb\u901f\u68c0\u6d4b\u51fa\u4e00\u4e2a\u5de8\u5927\u7684\u94fe\u8868\u4e2d\u7684\u6b7b\u94fe\uff1f \u53c2\u8003\u7b54\u6848\n", "\u5341\u3001\u51e0\u9053\u57fa\u7840\u9898\n", "\u5341\u4e00\u3001\u771f\u6b63\u7684\u5fae\u8f6f\u9762\u8bd5\u9898\n", "\u5341\u4e8c\u3001\u7ecf\u5178\u9898\n", "\u5341\u4e09\u3001\u6587\u4ef6\u64cd\u4f5c\uff0c\u8bfb\u53d6\u4e00\u7ec4\u6570\u8fdb\u884c\u6392\u5e8f\u7136\u540e\u5199\u5165\u6587\u4ef6\n", "\u5341\u56db\u3001\u4ea4\u6362\u4e24\u4e2a\u6570\uff0c\u4e0d\u7528\u7b2c\u4e09\u5757\u513f\u5185\u5b58\uff01\u8bf7\u95ee\u600e\u4e48\u5b9e\u73b0\uff1f\n", "\u5341\u4e94\u3001C/C++\u7b14\u8bd5\u63d0\u95ee\n", "\u5341\u516d\u3001\u86ee\u6709\u610f\u601d\u7684\u9898\u76ee\n", "\u5341\u4e03\u3001\u5173\u4e8eConst\u5e38\u91cf\u95ee\u9898\uff0c\u534e\u4e3a\u9762\u8bd5\u9898\u3002\n", "\u5341\u516b\u3001\u56db\u4e2a\u9762\u8bd5\u95ee\u9898\n", "\u5341\u4e5d\u3001\u96be\u5ea6\u7cfb\u6570\u3001\u5177\u4f53\u7684\u5b9e\u73b0\u7b97\u6cd5\uff1f\n", "\u4e8c\u5341\u3001\u4e24\u9053\u9762\u8bd5\u9898\uff0c\u6700\u597d\u80fd\u63d0\u4f9b\u4e00\u4e2a\u5b8c\u6574\u7684\u5b9e\u73b0\u4ee3\u7801\uff01\n", "\u4e8c\u5341\u4e00\u3001\u6c42\u7528\u4e00\u6bb5C\u6216C++\u7a0b\u5e8f\u5199\u6c42 f(x)=100! \u7684\u5b8c\u6574\u7a0b\u5e8f\uff1f\n", "\u4e8c\u5341\u4e8c\u300125\u5339\u9a6c\uff0c\u6bcf\u6b21\u63615\u5339\u8dd1\uff0c\u51e0\u6b21\u53ef\u627e\u51fa\u6700\u5feb\u76845\u5339\u9a6c\uff1f\n", "\u4e8c\u5341\u4e09\u3001\u4e00\u4e2a\u9762\u8bd5\u9898 \u6c42 n!\n", "\n\u00a0", "IT\u7c7b\u5c31\u4e1a\u653b\u7565", "\u53d1\u4fe1\u4eba: noobody (everybody), \u4fe1\u533a: Job", "\n\u6807  \u9898: \u5317\u90aeIT\u7c7b\u5c31\u4e1a\u653b\u7565", "\n\u53d1\u4fe1\u7ad9: \u5317\u90ae\u4eba\u8bba\u575b (Sun Sep  6 12:16:28 2009), \u7ad9\u5185", "\n \u4e0d\u4e45\u524d\u53d1\u4e86\u90a3\u7bc7\u300a\u76d8\u70b9IT\u7c7b\u5c31\u4e1a\u65b9\u5411\u300b\u7684\u6587\u7ae0\uff0c\u611f\u53d7\u5230\u4e86\u5e08\u5f1f\u5e08\u59b9\u4eec\u5bf9\u627e\u5de5\u4f5c\u65b9\u9762\u4fe1\u606f\u7684\u9700\u6c42\uff0c\u9996\u5148\u8c22\u8c22\u5927\u5bb6\u7684\u652f\u6301\uff0c\u4eca\u5929\u5c31\u5199\u4e00\u4e0b\u81ea\u5df1\u4ee5\u53ca\u540c\u5b66\u627e\u5de5\u4f5c\u8fc7\u7a0b\u4e2d\u7684 \u5fc3\u5f97\u4f53\u4f1a\u5427\uff0c\u627e\u5de5\u4f5c\u5982\u540c\u9ad8\u8003\u3001\u8003\u7814\uff0c\u91cd\u70b9\u662f\u8981\u6709\u9002\u5408\u81ea\u5df1\u7684\u653b\u7565\uff0c\u6211\u7684\u6587\u5b57\u7b97\u662f\u53c2\u8003\u8d44\u6599\u5427\uff0c\u4e0d\u5e9f\u8bdd\u4e86\uff0c\u8fdb\u5165\u6b63\u9898\uff1a", "\u9002\u5408\u4eba\u7fa4\uff1a\u975e\u795e\u4eba", "\n\u4e00\u3001\u4f60\u5c06\u53ef\u80fd\u9762\u4e34\u7684\u5386\u7a0b\uff1a", "\n     \u603b\u4f53\u5386\u7a0b\uff1a\u6c42\u804c\u7684\u5386\u7a0b\u5bf9\u4e8e\u6211\u4eec\u8fd9\u4e9b\u975e\u795e\u4eba\u7684\u51e1\u592b\u4fd7\u5b50\u6765\u8bf4\uff0c\u603b\u4f53\u8fd8\u662f\u5f88\u8270\u8f9b\u7684\u3002\u4e00\u822c\u4e3b\u8981\u7684\u6218\u6597\u65f6\u95f4\u6bb5\u662f9\u6708\u8d77\u81f3\u672c\u5b66\u671f\u7ed3\u675f\uff0c\u6709\u4e9b\u516c\u53f8\u4f1a\u5728\u5e74\u4e09\u5341\uff0c\u5927\u5e74\u521d\u51e0\u5de6\u53f3\u53d1Offer\u6216\u8005\u4f53\u68c0\u901a\u77e5\u3002", "\n      \u5982\u679c\u4f60\u5bd2\u5047\u7ed3\u675f\u8fd8\u6ca1\u6709\u62ff\u5230\u4ee4\u81ea\u5df1\u6ee1\u610f\u7684Offer\uff0c\u4e00\u5b9a\u8981\u575a\u6301\u4e0b\u53bb\uff0c\u56e0\u4e3a\u597d\u591a\u5927\u725b\u5355\u4f4d\u7684\u9762\u8bd5\u6216\u8005\u7ec8\u9762\u90fd\u653e\u5728\u4e86\u5e74\u540e\uff0c\u6211\u5c31\u8ba4\u8bc6\u5e74\u540e\u53bbPICC\uff0c\u4eba\u6c11\u94f6\u884c\uff0c\u5efa \u8bbe\u94f6\u884c\u7684\u670b\u53cb\u3002\u53ea\u662f\u5230\u4e86\u8fd9\u4e2a\u9636\u6bb5\uff0c\u4f60\u4f1a\u6bd4\u8f83\u8f9b\u82e6\uff0c\u65e2\u8981\u505a\u597d\u6bd5\u8bbe\uff0c\u53c8\u8981\u5e94\u4ed8\u5404\u79cd\u5404\u6837\u7684\u6bd5\u4e1a\u9636\u6bb5\u8981\u505a\u7684\u4e8b\u60c5\uff0c\u627f\u53d7\u4e00\u5b9a\u7684\u5fc3\u7406\u538b\u529b\uff0c\u4f46\u662f\uff0c\u4eba\u751f\u80fd\u6709\u51e0\u56de\u640f\uff0c\u5bf9\u4e8e \u6574\u4e2a\u4eba\u751f\u6765\u8bf4\uff0c\u8fd9\u4e00\u4e24\u4e2a\u6708\u7684\u8270\u8f9b\u4ed8\u51fa\u662f\u503c\u5f97\u7684\u3002 ", "//z \u8bf4\u5f97\u975e\u5e38\u597d\uff0c\u5148\u89e3\u51b3\u6709\u65e0\u95ee\u9898\uff0c\u518d\u89e3\u51b3\u522b\u7684\u65b9\u9762\u7684\u95ee\u9898\u3002", "\n1\u3001\u6d77\u6295\u3001\u6d77\u7b14\u3001\u6d77\u9762\u9636\u6bb5", "\n\u5bf9\u4e8eOffer\uff0c\u9996\u5148\u8981\u89e3\u51b3\u7684\u662f\u201d\u6709\u201d\u548c\u201d\u65e0\u201d\u7684\u95ee\u9898\uff0c\u4e4b\u540e\u624d\u80fd\u89e3\u51b3\u201d\u6709\u201d\uff08\u6216\u8005\u81f3\u5c11\u662f\u66fe\u7ecf\u62ff\u5230\uff0c\u81ea\u5df1\u62d2\u4e86\u4f01\u4e1a\uff0c\u800c\u975e\u4f01\u4e1a\u62d2\u4e86\u81ea\u5df1\uff09\u548c\u201d\u597d\u201d\u7684\u95ee\u9898\u3002\u800c\u4e14 \u5f00\u59cb\u7684\u65f6\u5019\uff0c\u5927\u5bb6\u5bf9\u81ea\u5df1\u9002\u5408\u56fd\u4f01\u8fd8\u662f\u9002\u5408\u5916\u4f01\uff0c\u7a76\u7adf\u9002\u5408\u54ea\u4e2a\u884c\u4e1a\uff08\u7535\u4fe1\uff1f\u91d1\u878d\uff1f\u901a\u4fe1\u8bbe\u5907\uff1f\u7f51\u7edc\uff1f\uff09\u90fd\u6ca1\u6709\u6e05\u6670\u7684\u6982\u5ff5\uff0c\u5fc3\u6001\u65b9\u9762\u4e5f\u662f\u53d1\u6bdb\u7684\uff08\u627e\u4e0d\u627e\u5f97\u5230\u5de5\u4f5c \u53ef\u662f\u5173\u4e4e\u81ea\u5df1\u7684\u996d\u7897\u54ea\uff09\uff0c\u56e0\u6b64\u4e00\u5f00\u59cb\u5468\u56f4\u7684\u540c\u5b66\u4eec\u4e00\u822c\u90fd\u662f\u80fd\u6295\u7684\u90fd\u6295\u4e86\uff0c\u80fd\u7b14\u7684\u90fd\u7b14\u4e86\uff0c\u80fd\u9762\u5f97\u90fd\u9762\u4e86\u3002 ", "//z \u8fd8\u662f\u9700\u8981\u5b9e\u8df5", "\n\u8fd9\u4e2a\u9636\u6bb5\u662f\u5f88\u5173\u952e\u7684\uff0c\u201d\u7eb8\u4e0a\u5f97\u6765\u7ec8\u89c9\u6d45\u201d\uff0c\u4f60\u518d\u662f\u770b\u9762\u7ecf\uff0c\u4e5f\u4e0d\u5982\u4f60\u53c2\u52a0\u4e00\u6b21\u7b14\u8bd5\uff0c\u9762\u8bd5\uff0c\u4e4b\u540e\u548c\u540c\u6837\u627e\u5de5\u4f5c\u7684\u5ba4\u53cb\u540c\u5b66\u8ba8\u8bba\u5206\u6790\u6765\u5f97\u5feb\uff0c\u6536\u83b7\u5927\u3002\u8981\u6ce8\u610f\u603b\u7ed3\uff0c\u4e00\u4e2a\u884c\u4e1a\u5f80\u5f80\u4e0d\u662f\u53ea\u6709\u4e00\u5bb6\u516c\u53f8\uff0c\u53ef\u80fd\u8fd9\u5bb6\u516c\u53f8\u7684\u7b14\u8bd5\u4f60\u6ca1\u6709\u901a\u8fc7\uff0c\u4f46\u5230\u4e86\u4e0b\u5bb6\uff0c\u4fa7\u91cd\u70b9\u90fd\u5dee\u4e0d\u591a\u7684\u8bdd\uff0c\u5c31\u4f1a\u76f8\u5bf9\u5bb9\u6613\u4e9b\u3002", "\n \u5bf9\u4e8e\u4e2a\u522b\u795e\u4eba\uff0c\u53ef\u80fd\u662f\u4e00\u6253\u4e00\u4e2a\u51c6\u513f\uff0c\u4e5f\u8bb8\u5e76\u4e0d\u9700\u8981\u6d77\u7b14\u3001\u6d77\u9762\uff0c\u786e\u5b9e\u6709\u8fd9\u6837\u7684\u4eba\u5b58\u5728\uff0c\u4f46\u662f\u8fd8\u662f\u76f8\u5bf9\u4fdd\u9669\u70b9\u513f\u597d\u3002\u800c\u4e14\u6709\u65f6\u5019\u4f60\u90fd\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u540c\u5728\u4e00\u4e2a\u5b9e\u9a8c\u5ba4\uff0c\u7814\u7a76\u65b9\u5411\u3001\u9879\u76ee\u7ecf\u5386\u4e5f\u7c7b\u4f3c\uff0c\u4e3a\u4ec0\u4e48\u6709\u4eba\u80fd\u901a\u8fc7\u7b80\u5386\u7b5b\u9009\uff0c\u6709\u4eba\u5374\u4e0d\u80fd\u3002", "//z \u7ecf\u8fc7\u4e00\u6bb5\u65f6\u95f4\u4e4b\u540e\u5f00\u59cb\u8fdb\u5165\u9009\u62e9\u9636\u6bb5\u3002", "\n2\u3001\u6218\u7565\u76f8\u5bf9\u6e05\u6670\u9636\u6bb5", "\n \u7ecf\u8fc7\u4e86\u4e00\u6bb5\u65f6\u95f4\u7684\u9524\u70bc\uff0c\u4f60\u53ef\u80fd\u5df2\u7ecf\u6e10\u6e10\u77e5\u9053\u81ea\u5df1\u5927\u6982\u9002\u5408\u54ea\u7c7b\u516c\u53f8\u4e86\uff0c\u4f8b\u5982\u4f60\u53bb\u53c2\u52a0\u7f51\u7edc\u516c\u53f8\u7684\u7b14\u8bd5\u3001\u9762\u8bd5\u90fd\u80fd\u901a\u8fc7\uff0c\u800c\u53c2\u52a0\u901a\u4fe1\u8bbe\u5907\u7684\u7b14\u8bd5\uff0c\u5927\u90e8\u5206\u90fd\u6ca1\u901a\u8fc7\uff0c \u8fd9\u4e2a\u65f6\u5019\uff0c\u7ecf\u8fc7\u4e00\u6bb5\u65f6\u95f4\u7684\u5954\u6ce2\uff0c\u4f60\u4e5f\u6709\u4e9b\u75b2\u60eb\u4e86\uff0c\u5f53\u9762\u8bd5\u65f6\u95f4\u6216\u51c6\u5907\u65f6\u95f4\u51b2\u7a81\u7684\u65f6\u5019\uff0c\u4f60\u5c31\u8981\u6709\u6240\u53d6\u820d\u4e86\uff0c\u5e73\u65f6\u4e0d\u53c2\u52a0\u7b14\u8bd5\u3001\u9762\u8bd5\u65f6\uff0c\u6750\u6599\u6536\u96c6\uff0c\u9762\u7ecf\u51c6\u5907\u7684\u9488\u5bf9 \u6027\u4e5f\u8981\u6709\u6240\u52a0\u5f3a\u4e86\u3002 ", "3\u3001\u6536\u83b7\u9636\u6bb5", "\n\u5373\u4f7f\u662f\u5b9e\u529b\u5f88\u5f3a\u7684\u4eba\uff0c\u4e5f\u4f1a\u957f\u671f\u201d\u88f8\u5954\u201d\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u5927\u591a\u6570\u4f01\u4e1a\u6765\u8bb2\uff0c\u5c31\u7b979\u6708\u5f00\u59cb\u62db\u8058\uff0c\u53d1Offer\u4e5f\u5230\u4e8611\u6708\u300112\u6708\u4e86\uff0c\u800c\u4e14\u5982\u679c\u60f3\u53bb\u56fd\u4f01\uff0c\u5c31\u4f1a\u7b49\u5f85\u7684 \u66f4\u4e45\uff0c\u56e0\u4e3a\u5f88\u591a\u56fd\u4f0111\u6708\u624d\u521a\u521a\u5f00\u59cb\u6536\u96c6\u7b80\u5386\uff0c\u6709\u4e9b\u5b9e\u529b\u4e0d\u4fd7\u7684\u6c42\u804c\u8005\uff0c\u5f88\u53ef\u80fd\u4f1a\u572812\u6708\u30011\u6708\u7684\u67d0\u6bb5\u65f6\u95f4\u5185\uff0c\u540c\u65f6\u6536\u5230\u4e0d\u6b62\u4e00\u4e2aOffer\u3002\u5f53\u4f60\u6536\u5230 Offer\u7684\u65f6\u5019\uff0c\u800c\u8fd8\u5728\u7b49\u66f4\u7406\u60f3\u7684\u4e00\u4e2a\u51fa\u7ed3\u679c\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u7528\u5404\u79cd\u501f\u53e3\u5728\u4f01\u4e1a\u80fd\u5141\u8bb8\u7684\u8303\u56f4\u5185\u5c3d\u91cf\u5f80\u540e\u62d6\u5ef6\uff0c\u6536\u96c6\u5145\u8db3\u7684\u4fe1\u606f\uff0c\u505a\u51fa\u53d6\u820d\u3002 ", "\u4e8c\u3001\u6280\u672f\u6027\u51c6\u5907", "\n1\u3001\u7b80\u5386", "\n      \u7b80\u5386\u65b9\u9762\u6211\u770b\u7248\u4e0a\u8ba8\u8bba\u7684\u5df2\u7ecf\u5f88\u591a\u4e86\uff0c\u4e0d\u591a\u5e9f\u8bdd\u4e86\uff0c\u53ea\u8bf4\u4e00\u4e0b\uff0c\u6211\u4e2a\u4eba\u7684\u505a\u6cd5\uff0c\u6211\u51c6\u5907\u4e86\u4e00\u4efd\u5b8c\u6574\u7b80\u5386\uff0c\u6db5\u76d6\u4e86\u6211\u7684\u6240\u6709\u7ecf\u5386\uff0c\u8fd9\u4efd\u7b80\u5386\u4e0d\u662f\u7528\u6765\u6295\u7684\uff0c\u53ef\u4ee5\u8bf4\u662f\u81ea\u5df1\u7684\u4e00\u4e2a\u8d44\u6599\u5e93\uff0c\u9047\u5230\u7f51\u6295\uff0c\u4ece\u8fd9\u4efd\u7b80\u5386\u4e2d\u76f4\u63a5\u590d\u5236\u7c98\u8d34\u5c31\u884c\u4e86\u3002", "\n     \u53e6\u5916\u51c6\u5907\u4e86\u4e24\u4efd\u7528\u6765\u6295\u9012\u7684\u7b80\u5386\uff0c\u4e00\u4efd\u9762\u5411\u7efc\u5408\u6027\u5c97\u4f4d\uff08\uff29\uff34\u54a8\u8be2\u3001\u56fd\u4f01\u7684\u590d\u5408\u578b\u6216\u7ba1\u7406\u578bIT\u5c97\u4f4d\u7b49\uff09\uff0c\u4e00\u4efd\u9762\u5411\u7814\u53d1\u7c7b\u5c97\u4f4d\uff0c\u5176\u5b9e\uff0c\u4e24\u4efd\u533a\u522b\u4e0d\u5927\uff0c\u53ea\u662f\u7814\u53d1\u7c7b\u7b80\u5386\u4e2d\uff0c\u628a\u505a\u8fc7\u7684\u7814\u53d1\u7c7b\u9879\u76ee\u653e\u5728\u4e86\u9879\u76ee\u7ecf\u5386\u4e00\u680f\u7684\u9996\u4f4d\uff0c\u7efc\u5408\u6027\u7b80\u5386\u4e2d\uff0c\u628a\u505a\u8fc7\u7684\uff29\uff34\u54a8\u8be2\u7c7b\u9879\u76ee\u653e\u5728\u4e86\u9879\u76ee\u7ecf\u5386\u4e00\u680f\u7684\u9996\u4f4d\u3002 ", "2\u3001\u77e5\u8bc6\u50a8\u5907", "\n     \u4e0d\u540c\u7c7b\u578b\u7684\u5355\u4f4d\u7b14\u8bd5\u3001\u9762\u8bd5\u8003\u5bdf\u7684\u4fa7\u91cd\u70b9\u4e0d\u4e00\u6837\u3002\u5927\u81f4\u53ef\u4ee5\u5206\u4e3a\u4e09\u5927\u6d41\u6d3e\uff1a\u56fd\u4f01\u3001\u5916\u4f01\u3001\u516c\u52a1\u5458\uff0c\u73b0\u5728\u5df2\u7ecf9\u6708\u4efd\u4e86\uff0c\u5bf9\u4e8e\u4f60\u6211\u8fd9\u6837\u7684\u51e1\u592b\u4fd7\u5b50\u6765\u8bf4\uff0c\u5728\u4f60\u5373\u5c06\u6df9 \u6ca1\u5728\u5404\u79cd\u62db\u8058\u4f1a\u3001\u7b14\u8bd5\u3001\u9762\u8bd5\u7684\u8d76\u573a\u4e2d\u65f6\uff0c\u4f60\u4e0d\u53ef\u80fd\u540c\u65f6\u51fa\u51fb\u6253\u51fb\u4e09\u7c7b\u76ee\u6807\u3002\u4e0b\u9762\u5bf9\u8fd9\u4e09\u5927\u6d41\u6d3e\u505a\u4e0b\u7b80\u5355\u68b3\u7406\uff0c\u4f9b\u4f60\u89c1\u62db\u62c6\u62db\u3002", "\n \u7279\u522b\u8bf4\u660e\uff1a\u7531\u4e8e\u4e2a\u4eba\u80fd\u529b\u53d7\u9650\uff0c\u5728\u6b64\u6211\u53ea\u80fd\u91cd\u70b9\u9610\u8ff0\u7b14\u8bd5\u7684\u4fa7\u91cd\u70b9\uff0c\u56e0\u4e3a\u9762\u8bd5\u4e00\u65b9\u9762\u6211\u53c2\u52a0\u7684\u4e0d\u5168\uff0c\u53e6\u4e00\u65b9\u9762\uff0c\u9762\u8bd5\u7684\u4e0d\u786e\u5b9a\u6027\u6bd4\u7b14\u8bd5\u5927\u591a\u4e86\uff0c\u8c01\u6653\u5f97\u9762\u8bd5\u5b98\u90a3\u5929\u5fc3\u60c5\u600e\u6837\uff0c\u4f1a\u95ee\u4ec0\u4e48\u95ee\u9898\u3002 ", "2.1\u56fd\u4f01\u8003\u5bdf\u4fa7\u91cd\u70b9", "\n\u7b14\u8bd5\uff1a", "\n\u53ea\u8003\u975e\u6280\u672f\u6027\u95ee\u9898\uff1a\u4e00\u822c\u662f\u7535\u4fe1\u9886\u57df\u7684\u7814\u7a76\u9662\u6216\u8005\u8bbe\u8ba1\u9662\u3002\u4f8b\u5982\u7535\u4fe1\u7814\u7a76\u9662\u89c4\u5212\u6240\uff0c\u53ea\u8003\u4e86\u82f1\u8bed\u7ffb\u8bd1\u548c\u6c49\u8bed\u7533\u8bba\uff08\u7ed9\u4e2a\u8bba\u9898\uff0c\u5199\u7bc7\u6587\u7ae0\uff09\u3002\u79fb\u52a8\u7814\u7a76\u9662\u53ea\u8003\u4e86\u884c\u6d4b\uff08\u6709\u6ca1\u6709\u8003\u82f1\u8bed\u5fd8\u4e86\uff09\u3002", "\u53ea\u8003\u6280\u672f\u6027\u95ee\u9898\uff1a\u4f8b\u5982\u4eba\u6c11\u94f6\u884c\u91d1\u878d\u4fe1\u606f\u7ba1\u7406\u4e2d\u5fc3\uff0c\u53ea\u8003\u4e86\u8ba1\u7b97\u673a\u77e5\u8bc6\uff0c\u6ca1\u8003\u884c\u6d4b\u548c\u7533\u8bba\u3002 ", "\u82f1\u8bed+\u6280\u672f\u6027\u95ee\u9898+\u884c\u6d4b\uff1a\u5927\u591a\u6570\u56fd\u4f01\u90fd\u662f\u8fd9\u6837\u8003\u7684\u3002 ", "\u9762\u8bd5\uff1a", "\n\u4efb\u4f55\u95ee\u9898\u90fd\u53ef\u80fd\u4f1a\u95ee\u5230\uff0c\u4e2a\u4eba\u53c2\u52a0\u8fc7\u7684\u90a3\u4e9b\u611f\u89c9\u9664\u4e86\u95ee\u4e9b\u6280\u672f\u6027\u95ee\u9898\u4e4b\u5916\uff0c\u5f80\u5f80\u4f1a\u52a0\u4e0a\u4e9b\u5f00\u653e\u5f0f\u95ee\u9898\uff0c\u4f8b\u5982\u4ea4\u7ed9\u4f60\u4e2a5\u4eba\u56e2\u961f\u7684\u5f00\u53d1\u9879\u76ee\uff0c\u4f60\u600e\u4e48\u7ba1\u7406\u3002\u7279\u522b\u8bf4 \u660e\uff0c\u5f00\u653e\u5f0f\u662f\u8868\u73b0\u4f60\u7efc\u5408\u7d20\u8d28\u7684\u673a\u4f1a\uff0c\u611f\u89c9\u56fd\u4f01\u9762\u8bd5\uff0c\u8fd9\u79cd\u95ee\u9898\u6bd4\u5177\u4f53\u77e5\u8bc6\u6027\u95ee\u9898\u8fd8\u91cd\u8981\u3002\u81f3\u4e8e\u5177\u4f53\u7684\u77e5\u8bc6\u6027\u95ee\u9898\uff0c\u867d\u7136\u4e5f\u5f97\u8ba4\u771f\u5bf9\u5f85\uff0c\u4f46\u5373\u4f7f\u6ca1\u56de\u7b54\u4e0a\u6765\uff0c\u4e5f\u522b\u7070 \u5fc3\uff0c\u672a\u5fc5\u8fdb\u4e0d\u4e86\u4e0b\u4e00\u8f6e\u3002 ", "2.2\u5916\u4f01\u8003\u5bdf\u4fa7\u91cd\u70b9", "\n\u7b14\u8bd5\uff1a", "\n\u91cd\u5728\u5b66\u4e60\u80fd\u529b\u3001\u5206\u6790\u80fd\u529b\u7684\u8003\u5bdf\uff1a\u4e00\u822c\u662f\u975e\u7eaf\uff29\uff34\u7c7b\u5916\u4f01\uff0c\u4f8b\u5982\u6469\u6839IT\uff0c\u6469\u6839IT\u8003\u7684\u5f88\u5168\uff0c\u8fde\u6982\u7387\u8bba\u90fd\u8003\u4e86\uff0c\u4f46\u662f\u5370\u8c61\u4e2d\uff0c\u6ca1\u8003\uff29\uff34\u4e13\u4e1a\u77e5\u8bc6\uff0c\u8bb0\u4e0d\u592a\u6e05\u4e86\u3002", "\n\u91cd\u5728IT\u9886\u57df\u5b66\u4e60\u80fd\u529b\u3001\u5206\u6790\u80fd\u529b\u7b49\u7684\u8003\u5bdf\uff08\u53ef\u80fd\u4f1a\u6d89\u53ca\u7b97\u6cd5\uff09\uff1a\u4e00\u822c\u662f\u5bf9\u7b97\u6cd5\u6709\u4e00\u5b9a\u8981\u6c42\u7684\uff29\uff34\u7c7b\u4f01\u4e1a\u6216\u7f51\u7edc\u516c\u53f8\uff0c\u4f8b\u5982\u767e\u5ea6\u3001\u5fae\u8f6f\uff0c\u9664\u4e86\u9009\u62e9\u9898\uff0c\u5f80\u5f80\u540e\u9762\u4f1a\u6709\u4e00\u4e24\u9053\u6d89\u53ca\u94fe\u8868\u3001\u6811\u7b49\u65b9\u9762\u7684\u5927\u9898\u3002 ", "//z web sense", "\n\u91cd\u5728\u4e13\u4e1a\u9886\u57df\u7684\u8003\u5bdf\uff1a\u4e00\u822c\u662f\u89c4\u6a21\u4e0d\u5927\u6216\u8005\u4e13\u4e1a\u6027\u5f88\u5f3a\u7684\u5916\u4f01\uff0c\u4f8b\u5982web sense\uff0c\u8003\u4e86\u5f88\u591a\u7f51\u7edc\u77e5\u8bc6\u3002 ", "\u5916\u4f01\u7684\u54a8\u8be2\u7c7b\u5c97\u4f4d\uff1a\u4f8b\u5982GBS\u84dd\u8272\u4e4b\u8def\u65f6\u4e3e\u884c\u7684\u8003\u8bd5\uff0c\u7b14\u8bd5\u6ca1\u8003\u6280\u672f\uff0c\u53ea\u8003\u4e86\u6570\u5b57\u5206\u6790\u4e00\u7c7b\u7684\u3002", "\n\u9762\u8bd5\uff1a", "\n     \u5927\u591a\u6570\u5916\u4f01\u90fd\u4f1a\u91cd\u70b9\u8003\u5bdf\u4f60\u7684\u5b66\u4e60\u80fd\u529b\u548c\u6f5c\u529b\uff0c\u5e76\u4e0d\u5728\u4e8e\u4f60\u73b0\u5728\u638c\u63e1\u6709\u591a\u5c11\u77e5\u8bc6\uff0c\u6709\u4e9b\u4f1a\u95ee\u7b97\u6cd5\uff0c\u4f8b\u5982\u767e\u5ea6\u3002", "\n      \u975e\u6280\u672f\u7c7b\u5c97\u4f4d\u5219\u4e00\u822c\u90fd\u4e0d\u95ee\u6280\u672f\u6027\u95ee\u9898\uff0c\u5f80\u5f80\u662f\u7fa4\u9762\uff0c\u5355\u9762\uff0c\u89c2\u5bdf\u4f60\u7684\u7ec4\u7ec7\uff0c\u534f\u8c03\uff0c\u6c9f\u901a\u80fd\u529b\u3002 ", "2.3\u516c\u52a1\u5458\u8003\u8bd5", "\n      \u884c\u6d4b+\u7533\u8bba\uff0c\u5177\u4f53\u4e0d\u5c55\u5f00\u4e86\uff0c\u516c\u52a1\u5458\u7248\u80af\u5b9a\u6709\u66f4\u8be6\u7ec6\u7684\u8d44\u6599\u3002 ", "2.4\u5982\u4f55\u51c6\u5907", "\n\u56fd\u4f01\uff1a", "\n\u56fd\u4f01\u8003\u5bdf\u7684\u6280\u672f\u6027\u95ee\u9898\uff0c\u9762\u5e7f\uff0c\u5f88\u6742\uff0c\u64cd\u4f5c\u7cfb\u7edf\uff0c\u6570\u636e\u5e93\uff0c\u7f51\u7edc\uff0c\u6570\u636e\u7ed3\u6784\u7b49\u90fd\u53ef\u80fd\u6d89\u53ca\uff0c\u4f46\u662f\u8003\u7684\u90fd\u5f88\u57fa\u7840\u3002\u6240\u4ee5\u5efa\u8bae\u51c6\u5907\u4e00\u4e0b\u884c\u6d4b\uff0c\u53e6\u5916\u5bf9\u5404\u79d1\u7684\u57fa\u7840\u77e5\u8bc6\u590d\u4e60\u4e00\u4e0b\uff0c\u5982\u679c\u4eca\u5e74\u6ca1\u6709\u5927\u7684\u53d8\u5316\u7684\u8bdd\uff0c\u8fd9\u4e9b\u77e5\u8bc6\u50a8\u5907\u8db3\u77e3\u5e94\u4ed8\u7b14\u8bd5\u3002", "\n\u5916\u4f01\uff1a", "\n     \u9996\u5148\u8ba1\u7b97\u673a\u6240\u6d89\u53ca\u5404\u9886\u57df\u7684\u57fa\u7840\u77e5\u8bc6\u4f60\u5f97\u5177\u5907\uff0c\u7b14\u8bd5\u3001\u9762\u8bd5\u4e4b\u540e\uff0c\u9047\u5230\u6ca1\u6709\u89e3\u51b3\u7684\u7b97\u6cd5\u9898\uff0c\u8981\u548c\u5e73\u65f6\u7f16\u7a0b\u6bd4\u8f83\u725b\u7684\u4eba\u591a\u8ba8\u8bba\uff0c\u5373\u4f7f\u6ca1\u901a\u8fc7\u7b14\u8bd5\uff0c\u81f3\u5c11\u8981\u6709\u6240\u6536\u83b7\u3002 \u4e0d\u4ec5\u8981\u89e3\u51b3\u95ee\u9898\uff0c\u5982\u6709\u4f59\u529b\uff0c\u53ef\u4ee5\u4e89\u53d6\u7528\u6700\u5de7\u5999\u5730\u65b9\u6cd5\u518d\u89e3\u51b3\u4e00\u4e0b\u8be5\u95ee\u9898\u3002\u53e6\u5916\uff0c\u82f1\u8bed\u80fd\u529b\u8981\u5f3a\uff0c\u50cf\u8981\u53bb\u53c2\u52a0\u6469\u6839\u9762\u8bd5\u7684\u8bdd\uff0c\u53e3\u8bed\u4e5f\u5f97\u8bf4\u7684\u8fc7\u53bb\u3002", "\n      \u5982\u679c\u4f60\u4e0d\u4e70\u4e00\u672c\u4e66\u6765\u770b\u89c9\u5f97\u4e0d\u653e\u5fc3\u7684\u8bdd\uff0c\u53ef\u4ee5\u5f04\u4e00\u672c\u300a\u7a0b\u5e8f\u5458\u9762\u8bd5\u653b\u7565\u300b\uff0c\u9996\u5148\u9700\u8981\u58f0\u660e\uff0c\u8be5\u4e66\u4e0d\u80fd\u5e2e\u52a9\u4f60\u901a\u8fc7\u7b14\u8bd5\u548c\u9762\u8bd5\uff0c\u56e0\u4e3a\u4ed6\u867d\u7136\u5404\u9886\u57df\u90fd\u6d89\u53ca\u4e86\uff0c\u4f46\u662f\u8bf4\u7684 \u90fd\u5f88\u63d0\u7eb2\u6308\u9886\u3002\u4f46\u662f\u8be5\u4e66\u6700\u5927\u7684\u4f5c\u7528\u5c31\u662f\u91cc\u9762\u8be6\u7ec6\u9610\u8ff0\u4e86\u9762\u5bf9\u8003\u5b98\u6240\u63d0\u95ee\u9898\u65f6\uff0c\u5e94\u8058\u8005\u7684\u8be6\u7ec6\u601d\u7ef4\u8fc7\u7a0b\u3002\u8be5\u4e66\u8fd8\u6709\u4e00\u4e2a\u597d\u5904\u5c31\u662f\u8584\uff0c\u5f88\u96be\u60f3\u8c61\uff0c\u90fd\u8fd9\u4e2a\u65f6\u5019\u4e86\uff0c\u4f60\u518d\u53bb\u7ec6\u770b\u300a\u7b97\u6cd5\u5bfc\u8bba\u300b\u3002", "\u4e09\u3001\u5404\u79cd\u7c7b\u578b\u7684\u8003\u8bd5\u7b56\u7565", "\n1\u3001\u7b14\u8bd5\uff1a", "\n     \u7b56\u7565\u5f88\u7b80\u5355\uff0c\u4f1a\u7684\u4fdd\u8bc1\u6b63\u786e\uff0c\u4e0d\u4f1a\u7684\u8499\u4e0a\u53bb\uff0c\u505a\u4e0d\u5b8c\u522b\u62c5\u5fc3\u3002", "\n2\u3001\u7fa4\u9762\uff1a", "\n     \u5ea6\u5f88\u91cd\u8981\uff0c\u65e2\u6709\u6548\u5c55\u73b0\u4e86\u81ea\u5df1\u7684\u80fd\u529b\uff0c\u8868\u8fbe\u4e86\u81ea\u5df1\u7684\u89c2\u70b9\uff0c\u53c8\u7ed9\u522b\u4eba\u8bf4\u8bdd\u7684\u673a\u4f1a\uff0c\u4e00\u70b9\u4e5f\u4e0d\u5f20\u626c\u3002", "\n     \u5728\u7fa4\u9762\u4e2d\uff0c\u4f60\u5982\u679c\u80fd\u591f\u505a\u5230\u51c6\u5907\u628a\u63e1\u56e2\u961f\u8fdb\u7a0b\uff0c\u505a\u56e2\u961f\u4e2d\u7684\u5173\u952e\u4eba\u7269\uff08\u672a\u5fc5\u662f\u7ec4\u957f\uff09\uff0c\u90a3\u7edd\u5bf9\u662f\u4e2a\u4eae\u70b9\uff0c\u4f8b\u5982\u5728\u5927\u5bb6\u5df2\u7ecf\u5bf9\u8be5\u8bba\u9898\u5145\u5206\u53d1\u8868\u81ea\u5df1\u610f\u89c1\u7684\u524d\u63d0\u4e0b\uff0c\u5982\u679c\u6709\u4e9b\u540c\u5b66\u6267\u62d7\u4e8e\u81ea\u5df1\u7684\u89c2\u70b9\uff0c\u6574\u4e2a\u56e2\u961f\u4ecd\u7136\u65e0\u6cd5\u8fbe\u6210\u5171\u8bc6\uff0c\u4f60\u53ef\u4ee5\u9002\u65f6\u7684\u63d0\u9192\u5927\u5bb6\uff0c\u65f6\u95f4\u5df2\u7ecf\u5feb\u6765\u4e0d\u53ca\u4e86\u3002", "\n      \u5982\u679c\u4f60\u4e0d\u5e78\u6ca6\u4e3a\u5c11\u6570\u6d3e\uff0c\u4f60\u53ef\u4ee5\u4fdd\u7559\u81ea\u5df1\u7684\u89c2\u70b9\uff0c\u4f46\u662f\u5982\u679c\u8bf4\u6574\u4e2a\u56e2\u961f\u8981\u51fa\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\uff0c\u4e00\u5b9a\u8981\u8868\u8fbe\u670d\u4ece\u56e2\u961f\u51b3\u7b56\u7684\u610f\u601d\u3002 ", "3\u3001\u5355\u9762\uff1a", "\n     \u8fdb\u5165\u5355\u9762\uff0c\u76ee\u6807\u4f01\u4e1a\u5bf9\u4f60\u5df2\u7ecf\u6bd4\u8f83\u6ee1\u610f\u4e86\uff0c\u5728\u8fd9\u4e2a\u73af\u8282\uff0c\u6280\u672f\u6027\u95ee\u9898\u4e07\u4e00\u56de\u7b54\u4e0d\u4e0a\u6765\uff0c\u53ef\u4ee5\u628a\u76f8\u5173\u9886\u57df\u7684\u7b54\u4e0a\u53bb\u3002\u975e\u6280\u672f\u6027\u95ee\u9898\uff0c\u4e00\u5b9a\u8981\u597d\u597d\u628a\u63e1\uff0c\u8fd9\u662f\u5c55\u73b0\u4f60\u7efc \u5408\u80fd\u529b\u7684\u597d\u673a\u4f1a\u3002\u6211\u5728\u5355\u9762\u7684\u65f6\u5019\uff0c\u72af\u8fc7\u4e0d\u5c11\u4f4e\u7ea7\u9519\u8bef\uff0c\u4e0d\u8981\u8868\u73b0\u51fa\u6765\u81ea\u5df1\u4e0d\u60f3\u4e0b\u57fa\u5c42\uff0c\u6216\u8005\u4e0d\u60f3\u51fa\u5dee\u7b49\u82d7\u5934\uff0c\u5373\u4f7f\u4e8b\u540e\u4f60\u6ca1\u6709\u53bb\u8fd9\u5bb6\u516c\u53f8\uff0c\u4f46\u662f\u4f60\u65e2\u7136\u6765\u4e86\uff0c\u8fd8\u662f \u5148\u62ff\u5230Offer\u518d\u8bf4\u5427\u3002", "\n\u9762\u8bd5\u603b\u7ed3", "\n      \u7537\u751f\u8981\u8863\u7740\u5f97\u4f53\uff0c\u56fd\u4f01\u4ee5\u53ca\u5916\u4f01\u7684\u975e\u6280\u672f\u7c7b\u5c97\u4f4d\uff0c\u4e00\u822c\u90fd\u8981\u7a7f\u6b63\u88c5\uff0c\u8868\u73b0\u8981\u5927\u65b9\uff0c\u4e0d\u8981\u754f\u7f29\u3002\u8981\u8868\u73b0\u7684\u5177\u6709\u56e2\u961f\u610f\u8bc6\uff0c\u4e0d\u8981\u592a\u6ce8\u91cd\u4e2a\u4eba\u8868\u73b0\uff0c\u597d\u50cf\u53ea\u6709\u81ea\u5df1\u624d\u638c\u63e1\u771f\u7406\uff0c\u8fd9\u6837\u4e0d\u4f1a\u7ed9\u8003\u5b98\u7559\u4e0b\u597d\u5370\u8c61\u3002", "\n      \u5973\u751f\u4e0d\u5b9c\u6d53\u5986\u8273\u62b9\uff0c\u76f8\u4fe1\u5317\u90ae\u7684MM\u4eec\u4e5f\u4e0d\u4f1a\u8fd9\u6837\u7684\uff0c\u5475\u5475\uff0c\u53ef\u4ee5\u5c55\u793a\u5973\u751f\u8eab\u4e0a\u7537\u751f\u4e0d\u5177\u5907\u7684\u90a3\u4e9b\u4f18\u70b9\uff0c\u4f8b\u5982\u7ec6\u5fc3\u3002 ", "\u56db\u3001\u65f6\u95f4\u7cbe\u529b\u7684\u5206\u914d", "\n      \u6536\u96c6\u4fe1\u606f\u5f88\u91cd\u8981\uff0c\u4f46\u662f\u66f4\u91cd\u8981\u7684\u662f\u5b9e\u6218\uff08\u53c2\u52a0\u7b14\u8bd5\u3001\u9762\u8bd5\uff09\u548c\u51c6\u5907\uff08\u5bf9\u4e00\u4e9b\u77e5\u8bc6\u70b9\u7684\u590d\u4e60\uff09\uff0c\u4e0d\u80fd\u592a\u6d6e\u8e81\uff0c\u4e0d\u80fd\u4e00\u76f4\u662f\u5728\u6295\u7b80\u5386\u3001\u53c2\u52a0\u5ba3\u8bb2\uff0c\u771f\u6b63\u7ed9\u4e86\u4f60\u673a\u4f1a\uff0c\u5374\u8fde \u7b14\u8bd5\u90fd\u8fc7\u4e0d\u4e86\uff0c\u5047\u5982\u4f60\u5728\u53c2\u52a0\u7b14\u8bd5\u3001\u9762\u8bd5\u4e4b\u4f59\uff0c\u5df2\u7ecf\u6ca1\u6709\u65e2\u51c6\u5907\u56fd\u4f01\u4fa7\u91cd\u7684\u77e5\u8bc6\uff0c\u53c8\u51c6\u5907\u5916\u4f01\u4fa7\u91cd\u7684\u77e5\u8bc6\u7684\u7cbe\u529b\u4e86\uff0c\u90a3\u4e48\u4f60\u5c31\u8981\u6709\u6240\u53d6\u820d\u4e86\uff0c\u4e0d\u8fc7\u56fd\u4f01\u5916\u4f01\u4e5f\u5e76\u975e\u5b8c \u5168\u6ca1\u6709\u4ea4\u96c6\uff0c\u8ba1\u7b97\u673a\u3001\u901a\u4fe1\u7c7b\u7684\u57fa\u7840\u77e5\u8bc6\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u662f\u90fd\u5f97\u5177\u5907\u7684\u3002", "\n\u8bf4\u660e\u4e00\u4e0b\uff0c\u300a\u76d8\u70b9\u300b\u90a3\u7bc7\u6587\u7ae0\uff0c\u4e5f\u53ea\u662f\u5e2e\u52a9\u4f60\u7b80\u5355\u68b3\u7406\u4e00\u4e0b\u8fd9\u4e9b\u5355\u4f4d\u90fd\u662f\u5e72\u4ec0\u4e48\u7684\uff0c\u5e2e\u52a9\u4f60\u786e\u5b9a\u4e00\u4e2a\u5927\u6982\u7684\u65b9\u5411\uff0c\u4f8b\u5982\uff0c\u5207\u4e0d\u8981\u4ee5\u4e3a\u81ea\u5df1\u60f3\u53bb\u56fd\u4f01\uff0c\u90a3\u5916\u4f01\u7684\u7b14\u8bd5\u3001\u9762\u8bd5\u5c31\u4e00\u6982\u4e0d\u53c2\u52a0\uff0c\u975e\u8981\u7b49\u523011\u6708\u4efd\u624d\u5f00\u59cb\u627e\u5de5\u4f5c\u3002 \u60f3\u8fdb\u5916\u4f01\uff0c\u4e5f\u662f\u540c\u6837\u7684\u9053\u7406\u3002 ", "\u4e94\u3001\u5fc3\u6001", "\n      \u9c9c\u6709\u542c\u8bf4\u8c01\u7b14\u8bd5\u53d1\u6325\u5931\u5e38\u7684\uff0c\u6b64\u5904\u7b80\u5355\u8bf4\u4e0b\u9762\u8bd5\u65f6\u7684\u5fc3\u6001\uff0c\u5047\u5982\u4f60\u6280\u672f\u6027\u7684\u51c6\u5907\u5de5\u4f5c\u90fd\u505a\u7684\u5dee\u4e0d\u591a\u4e86\uff0c\u6b63\u88c5\u4e5f\u7a7f\u4e86\uff0c\u76ee\u6807\u4f01\u4e1a\u7684\u9762\u7ecf\u4e5f\u770b\u4e86\uff0c\u90a3\u4e48\u6700\u91cd\u8981\u7684\u5fc3\u6001\u5c31\u662f \u81ea\u4fe1\u4e86\uff0c\u5f88\u4f69\u670d\u6211\u8ba4\u8bc6\u7684\u4e00\u4f4d\u53bb\u767e\u5ea6\u7684\u540c\u5b66\uff0c\u4ed6\u6c42\u804c\u7684\u5fc3\u6001\u5c31\u5f88\u7aef\u6b63\uff0c\u4ed6\u8ba4\u4e3a\u6c42\u804c\u5c31\u662f\u5c97\u4f4d\u4e0e\u80fd\u529b\u5339\u914d\u7684\u53cc\u5411\u9009\u62e9\uff0c\u5982\u679c\u6211\u4e0d\u9002\u5408\u4f60\u7684\u5c97\u4f4d\uff0c\u90a3\u4e00\u5b9a\u8fd8\u4f1a\u6709\u9002\u5408\u6211\u7684 \u5c97\u4f4d\u5728\u7b49\u5f85\u7740\u6211\u3002", "\n\u5728\u8fd9\u91cc\u6211\u8981\u8bf4\uff0c\u65e2\u7136\u5df2\u7ecf\u901a\u8fc7\u4e86\u7b14\u8bd5\u6216\u8005\u7b80\u5386\u7b5b\u9009\uff0c\u5c31\u8bf4\u660e\u4f60\u7684\u80cc\u666f\u57fa\u672c\u662f\u7b26\u5408\u76ee\u6807\u804c\u4f4d\u5bf9\u4f60\u7684\u671f\u5f85\u7684\uff0c\u90a3\u4e48\u53c2\u52a0\u9762\u8bd5\u7684\u65f6\u5019\uff0c\u54ea\u6015\u4f60\u9047\u5230\u7684\u7ade\u4e89\u5bf9\u624b\u662f\u5929\u4e0b\u7b2c\u4e00\u5251\u5ba2\uff0c\u4f60\u4e5f\u8981\u6562\u4e8e\u4eae\u5251\uff0c\u4e0d\u7ba1\u6210\u529f\u4e0e\u5426\uff0c\u6253\u51fa\u81ea\u5df1\u7684\u98ce\u683c\u3002 ", "\u540e\u8bb0", "\n\u5173\u4e8e\u5c0f\u4f01\u4e1a\u4e0e\u975e\u540d\u4f01", "\n      \u672c\u6765\u6ca1\u5fc5\u8981\u4e13\u95e8\u5199\u8fd9\u4e00\u8282\uff0c\u53ea\u8981\u4e2a\u4eba\u6709\u5b9e\u529b\uff0c\u53bb\u5c0f\u4f01\u4e1a\u4e00\u6837\u6709\u53d1\u5c55\uff0c\u5728\u5927\u578b\u4f01\u4e1a\u4e2d\uff0c\u4f60\u4f1a\u611f\u89c9\u5230\u81ea\u5df1\u5c31\u50cf\u662f\u4e00\u9897\u87ba\u4e1d\u9489\uff0c\u672a\u5fc5\u6bd4\u5728\u5c0f\u4f01\u4e1a\u80fd\u591f\u83b7\u5f97\u953b\u70bc\u3002\u540d\u4f01\u4e0e\u975e\u540d\u4f01\u4e5f\u662f\u540c\u6837\u7684\u9053\u7406\uff0c\u53ea\u662f\u975e\u540d\u4f01\u53ef\u80fd\u6b63\u5904\u4e8e\u6210\u957f\u7684\u9636\u6bb5\u3002", "\n    \u300a\u76d8\u70b9\u300b\u548c\u672c\u6587\u6240\u8bb2\u7684\u653b\u7565\u90fd\u6ca1\u6709\u5c06\u5c0f\u4f01\u4e1a\u6392\u65a5\u5728\u5916\uff0c\u53ea\u662f\u56e0\u4e3a\u5c0f\u4f01\u4e1a\u7684\u4fe1\u606f\u76f8\u5bf9\u4e0d\u90a3\u4e48\u900f\u660e\uff0c\u4e0d\u592a\u597d\u6536\u96c6\uff0c\u56e0\u6b64\u300a\u76d8\u70b9\u300b\u4e00\u6587\u4e2d\uff0c\u624d\u6ca1\u6709\u7ed9\u4e88\u8fc7\u591a\u7684\u8bba\u8ff0\u3002", "\n\u5173\u4e8e\u5f85\u9047", "\n     \u300a\u76d8\u70b9\u300b\u4e00\u6587\u7edd\u5bf9\u6ca1\u6709\u8bef\u5bfc\u5927\u5bb6\u4f18\u5148\u8003\u8651\u5f85\u9047\u7684\u610f\u601d\uff0c\u4f46\u662f\u8bf4\u5230\u4f01\u4e1a\u4e0d\u53ef\u907f\u514d\u7684\u8981\u8c08\u5230\u85aa\u916c\uff0c\u800c\u4e14\u85aa\u916c\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u80fd\u591f\u8861\u91cf\u4e00\u4e2a\u5c97\u4f4d\u7684\u4ef7\u503c\u3002\u56e0\u6b64\u4e5f\u53ea\u662f\u628a\u6211\u638c\u63e1\u7684\u4fe1\u606f\u63d0\u4f9b\u51fa\u6765\uff0c\u4f9b\u5927\u5bb6\u53c2\u8003\u3002", "\n\u81f4\u5317\u90aeIT\u6bd5\u4e1a\u751f", "\n      \u5317\u90ae\u7684\uff29\uff34\u5728\u793e\u4f1a\u4e0a\u8fd8\u662f\u6bd4\u8f83\u53d7\u8ba4\u53ef\u7684\uff0c\u636e\u6211\u89c2\u5bdf\uff0c\u4e00\u822c\u6295\uff29\uff34\u7c7b\u7684\u5c97\u4f4d\uff0c\u5c11\u6709\u7b80\u5386\u7b5b\u9009\u90fd\u901a\u4e0d\u8fc7\u7684\uff08\u4e0d\u8fc7\u6211\u4e0d\u592a\u4e86\u89e3\u672c\u79d1\u751f\u7684\u60c5\u51b5\uff09\uff0c\u5230\u4f60\u53c2\u52a0\u9762\u8bd5\u7684\u65f6\u5019\u5c31\u4f1a\u53d1 \u73b0\uff0c\u51e0\u4e4e\u5230\u54ea\u513f\u9047\u5230\u7684\u90fd\u662f\u5317\u90ae\u4eba\u591a\uff08\u5f53\u7136\uff0c\u8fd9\u548c\u54b1\u4eec\u5b66\u6821IT\u7c7b\u4e13\u4e1a\u4eba\u6570\u4f17\u591a\u4e5f\u6709\u5173\u7cfb\uff09\uff0c\u6240\u4ee5\u9047\u5230\u6e05\u534e\u3001\u5317\u5927\u7b49\u9ad8\u6821\u7684\u725b\u4eba\u65f6\uff0c\u4e5f\u4e0d\u5fc5\u6709\u754f\u60e7\u8868\u73b0\uff0c\u4e0d\u5b9c\u5984\u81ea\u83f2 \u8584\uff0c\u76f8\u4fe1\u201dMade in BUPT\u201d\u662f\u54c1\u8d28\u7684\u4fdd\u8bc1\u3002", "\n\u81f4\u5916\u6821IT\u6bd5\u4e1a\u751f", "\n      \u5317\u90ae\u4eba\u8bba\u575b\u4e0a\u4e5f\u6709\u4e0d\u5c11\u5916\u6821\u7684\u5144\u5f1f\u59d0\u59b9\uff0c\u5982\u679c\u4f60\u4eec\u5b66\u6821\u7684\uff29\uff34\u6c34\u5e73\u4e0e\u5317\u90ae\u76f8\u5f53\uff0c\u751a\u81f3\u4e8e\u9ad8\u4e8e\u5317\u90ae\uff0c\u90a3\u4e48\u5bf9\u5317\u90ae\uff29\uff34\u7814\u7a76\u751f\u7684\u5efa\u8bae\u540c\u6837\u9002\u7528\u4e8e\u4f60\u4eec\uff0c\u5982\u679c\u4f60\u4eec\u5b66\u6821\u7684 IT\u5e76\u4e0d\u662f\u5341\u5206\u4e3b\u6d41\uff0c\u4e5f\u4e0d\u5b9c\u5984\u81ea\u83f2\u8584\uff0c\u8be5\u6295\u7b80\u5386\u7684\u5c31\u6295\uff0c\u53ea\u8981\u80fd\u591f\u901a\u8fc7\u7b80\u5386\u7b5b\u9009\uff0c\u54b1\u4eec\u7684\u80cc\u666f\u5c31\u662f\u7b26\u5408\u76ee\u6807\u804c\u4f4d\u7684\uff0c\u540c\u6837\uff0c\u7b14\u8bd5\u3001\u9762\u8bd5\u7684\u65f6\u5019\uff0c\u8981\u6562\u4e8e\u4eae\u5251\u3002", "\n\u81f4\u7ed9\u6211\u53d1\u7ad9\u5185\u4fe1\u7684\u540c\u5b66", "\n     \u7ed9\u6211\u53d1\u7ad9\u5185\u4fe1\u7684\u540c\u5b66\uff0c\u9996\u5148\u611f\u8c22\u4f60\u4eec\u5bf9\u6211\u7684\u4fe1\u4efb\uff0c\u6211\u4f1a\u5c3d\u91cf\u4e88\u4ee5\u7b54\u590d\uff0c\u4f46\u662f\u7531\u4e8e\u79cd\u79cd\u539f\u56e0\u53ef\u80fd\u4e0d\u4f1a\u56de\u590d\u7684\u90a3\u4e48\u53ca\u65f6\uff0c\u5176\u5b9e\u7531\u4e8e\u4e13\u4e1a\u3001\u7814\u7a76\u65b9\u5411\u7b49\u65b9\u9762\u7684\u9650\u5236\uff0c\u5982\u679c \u4f60\u4eec\u60f3\u4e86\u89e3\u4fe1\u606f\uff0c\u6211\u66f4\u5efa\u8bae\u4f60\u4eec\u591a\u548c\u672c\u5b9e\u9a8c\u5ba4\u3001\u672c\u73ed\u4ee5\u5f80\u6bd5\u4e1a\u7684\u5e08\u5144\u5e08\u59d0\u4eec\u6c9f\u901a\uff0c\u770b\u770b\u4ed6\u4eec\u53bb\u4e86\u54ea\u91cc\uff0c\u5bf9\u4f60\u4eec\u7684\u6c42\u804c\u6709\u4ec0\u4e48\u5efa\u8bae\u3002 ", "\u6700\u540e\uff0c\u8c22\u8c22\u9605\u8bfb\uff0c\u795d\u5927\u5bb6\u90fd\u80fd\u62ff\u5230\u7406\u60f3\u7684Offer\uff01"], "title": "C C++\u9762\u8bd5\u7b14\u8bd5\u9898\u76ee\u96c6\u9526"},
{"contents": ["\u4e8c\u5bf9\u4e00\uff0c\u4e24\u4e2a\u9762\u8bd5\u5b98\u90fd\u662f\u7537\u7684\u3002\u9996\u5148\u82f1\u6587\u81ea\u6211\u4ecb\u7ecd\uff0c\u7136\u540e\u5bf9\u8bdd\uff0c\u6ca1\u8bf4\u51e0\u53e5\uff0c\u5b9e\u5728\u522b\u626d\uff0c\u9762\u8bd5\u5b98\u5c31\u8bf4\u7528\u4e2d\u6587\u4e86\u3002", "1.\u865a\u51fd\u6570\u7684\u4f5c\u7528\uff1f\u63a5\u53e3\u91cd\u7528", "\n2.\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u662f\u865a\u51fd\u6570\u5417\uff1f\u4e3a\u4ec0\u4e48\uff1f", "\n\u7b54\uff1a\u4e0d\u53ef\u4ee5\uff0c\u521b\u5efa\u5bf9\u8c61\u65f6\u5fc5\u987b\u786e\u5b9a\u7c7b\u578b\u3002\u4ece\u5185\u5b58\u5206\u914d\uff0c\u865a\u51fd\u6570\u7684\u7528\u5904\u7b49\u65b9\u9762\u6765\u8bb2\u90fd\u53ef\u4ee5\u3002", "\n3.\u6790\u6784\u51fd\u6570\u53ef\u4ee5\u662f\u865a\u51fd\u6570\u5417\uff1f\u4e3a\u4ec0\u4e48\uff1f", "\n\u7b54\uff1a\u53ef\u4ee5\u3002\u91ca\u653e\u6307\u5411\u5b50\u7c7b\u7684\u57fa\u7c7b\u6307\u9488\u65f6\uff0c\u4e0d\u4f1a\u9020\u6210\u5185\u5b58\u6cc4\u9732\u3002\u9ed8\u8ba4\u7684\u6790\u6784\u51fd\u6570\u4e0d\u662f\u865a\u7684\uff0c\u5f53\u7c7b\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u865a\u51fd\u6570\u65f6\uff0c\u9700\u8981\u865a\u6790\u6784\u51fd\u6570\u3002", "\n4.sql\u8bed\u53e5", "\n\u8868store_info : store_name sales date \u8868 region_info\uff1aregion_name store_name", "\nBeijing 300 10.01 north beijing", "\ntianjin 500 10.01 north tianjin", "\nshanghai 500 10.01 south shanghai", "\nbeijing 600 11.01", "\ntianjin 700 11.01", "\nshanghai 500 11.01", "\n\u627e\u51fa\u5317\u65b9\u533a\u57df\u5e97\u9762\u9500\u552e\u603b\u548c\u5927\u4e8e1000\u7684\u5e97\u9762\u548c\u9500\u552e\u989d\u5e76\u6309\u7167\u964d\u5e8f\u6392\u5217\u3002", "\nselect store_name, sum(sales) from store_info , region_info", "\nwhere store_info.store_name = region_info and region_name = \u201cnorth\u201d", "\nand sum(sales)>1000 group by store_name order by sum(sales) dec", "5.\u5c06\u5df2\u6392\u597d\u5e8f\u7684\u4e24\u6570\u7ec4a", "\n\uff0cb[n]\uff0c\u5f52\u5e76\u4e3a\u4e00\u4e2a\u6570\u7ec4\u3002merge\u4e00\u904d\uff0c\u9ed1\u677f\u4e0a\u5199\u4ee3\u7801\uff0c\u8fd8\u597d\u6709\u9ed1\u677f\u64e6\uff0c\u9519\u4e86\u53ef\u4ee5\u6539\u3002", "\n6.\u5b57\u7b26\u4e32\u4e2d\u6709\u8bb8\u591a\u2019*'\uff0c\u5c06\u8fd9\u4e9b\u5168\u90e8\u632a\u5230\u5b57\u7b26\u4e32\u5c3e\u90e8\uff0c\u5176\u4ed6\u5b57\u7b26\u4e0d\u53d8\u3002\u4f8b\u5982a*b**c \u5904\u7406\u540e\u53d8\u4e3a abc***", "\n\u4e24\u4e2a\u6307\u9488first\uff0csecond\u3002second\u9047\u5230\u2018*\u2019\uff0c\u76f4\u63a5++,\u82e5\u662f\u5176\u4ed6\u5b57\u7b26\uff0c\u8d4b\u503c\u7ed9first\uff0c\u6700\u540e\u586b\u5145\u2018*\u2019\u3002O(n)\u65f6\u95f4\u590d\u6742\u5ea6\u3002", "\n\u4e4b\u540e\u95ee\u6211\u6709\u95ee\u9898\u5417\uff0c\u7136\u540e\u5c31\u662f\u51e0\u4e2a\u4e0d\u75db\u4e0d\u75d2\u7684\u95ee\u9898\u4ee5\u53ca\u4e0d\u75db\u4e0d\u75d2\u7684\u56de\u7b54\u3002", "\u6574\u4e2a\u9762\u8bd5\u5927\u69821\u4e2a\u5c0f\u65f6\uff0c\u7136\u540e\u4e24\u4e2a\u9762\u8bd5\u5b98\u51fa\u53bb\uff0c\u8981\u6211\u5728\u8fd9\u91cc\u7b49\u3002\u5927\u698215\u5206\u949f\uff0c\u4e00\u4e2a\u8fc7\u6765\u8bf4\u4eca\u5929\u9762\u8bd5\u5230\u6b64\u7ed3\u675f\uff0c\u56de\u53bb\u7b49\u6d88\u606f\u3002"], "title": "2012\u5e7411\u670820\u65e5 \u4e0b\u53483:00 \u56fd\u8d38sk\u5927\u53a6\uff0cca\u9762\u8bd5"},
{"contents": ["1 \u7f16\u7a0b\u57fa\u7840", "\n1.1 \u57fa\u672c\u6982\u5ff5", "\n1. \u7684\u7406\u89e3\uff1aconst char*, char const*, char*const\u7684\u533a\u522b\u95ee\u9898\u51e0\u4e4e\u662fC++\u9762\u8bd5\u4e2d\u6bcf\u6b21 \u90fd\u4f1a\u6709\u7684\u9898\u76ee\u3002 \u4e8b\u5b9e\u4e0a\u8fd9\u4e2a\u6982\u5ff5\u8c01\u90fd\u6709\u53ea\u662f\u4e09\u79cd\u58f0\u660e\u65b9\u5f0f\u975e\u5e38\u76f8\u4f3c\u5f88\u5bb9\u6613\u8bb0\u6df7\u3002 Bjarne\u5728\u4ed6\u7684The C++ Programming Language\u91cc\u9762\u7ed9\u51fa\u8fc7\u4e00\u4e2a\u52a9\u8bb0\u7684\u65b9\u6cd5\uff1a \u628a\u4e00\u4e2a\u58f0\u660e\u4ece\u53f3\u5411\u5de6\u8bfb\u3002 const", "\nchar * const cp; ( * \u8bfb\u6210 pointer to )", "\ncp is a const pointer to char", "\nconst char * p;", "\np is a pointer to const char;", "\nchar const * p;", "\n\u540c\u4e0a\u56e0\u4e3aC++\u91cc\u9762\u6ca1\u6709const*\u7684\u8fd0\u7b97\u7b26\uff0c\u6240\u4ee5const\u53ea\u80fd\u5c5e\u4e8e\u524d\u9762\u7684\u7c7b\u578b\u3002", "\n2. \u6307\u9488c", "\nint *p[n];\u2014\u2013\u6307\u9488\u6570\u7ec4\uff0c\u6bcf\u4e2a\u5143\u7d20\u5747\u4e3a\u6307\u5411\u6574\u578b\u6570\u636e\u7684\u6307\u9488\u3002", "\nint (*)p[n];\u2014\u2014p\u4e3a\u6307\u5411\u4e00\u7ef4\u6570\u7ec4\u7684\u6307\u9488\uff0c\u8fd9\u4e2a\u4e00\u7ef4\u6570\u7ec4\u6709n\u4e2a\u6574\u578b\u6570\u636e\u3002", "\nint *p();\u2014\u2014\u2014-\u51fd\u6570\u5e26\u56de\u6307\u9488\uff0c\u6307\u9488\u6307\u5411\u8fd4\u56de\u7684\u503c\u3002", "\nint (*)p();\u2014\u2014p\u4e3a\u6307\u5411\u51fd\u6570\u7684\u6307\u9488\u3002", "\n3. \u6570\u7ec4\u8d8a\u754c\u95ee\u9898", "\n\u4e0b\u9762\u8fd9\u4e2a\u7a0b\u5e8f\u6267\u884c\u540e\u4f1a\u6709\u4ec0\u4e48\u9519\u8bef\u6216\u8005\u6548\u679c:", "\n#define MAX 255", "\nint main()", "\n{", "\nunsigned char A[MAX],i;", "\nfor (i=0;i<=MAX;i++)", "\nA[i]=i;", "\n}", "\n\u89e3\u7b54\uff1aMAX=255,\u6570\u7ec4A\u7684\u4e0b\u6807\u8303\u56f4\u4e3a:0..MAX-1,\u8fd9\u662f\u5176\u4e00,\u5176\u4e8c \u5f53i\u5faa\u73af\u5230255\u65f6,\u5faa\u73af\u5185\u6267\u884c: A[255]=255;\u8fd9\u53e5\u672c\u8eab\u6ca1\u6709\u95ee\u9898\uff0c\u4f46\u662f\u8fd4\u56defor (i=0;i<=MAX;i++)\u8bed\u53e5\u65f6,\u7531\u4e8eunsigned char\u7684\u53d6\u503c\u8303\u56f4\u5728(0..255),i++\u4ee5\u540ei\u53c8\u4e3a0\u4e86..\u65e0\u9650\u5faa\u73af\u4e0b\u53bb.", "\n\u6ce8\uff1achar\u7c7b\u578b\u4e3a\u4e00\u4e2a\u5b57\u8282\uff0c\u53d6\u503c\u8303\u56f4\u662f[-128\uff0c127]\uff0cunsigned char [0 ,255]", "\n4. \u548cstrcpy \u7684\u6839\u672c\u533a\u522b\uff1f C++:memset ,memcpy", "\n#include \u201cmemory.h\u201d", "\nmemset\u7528\u6765\u5bf9\u4e00\u6bb5\u5185\u5b58\u7a7a\u95f4\u5168\u90e8\u8bbe\u7f6e\u4e3a\u67d0\u4e2a\u5b57\u7b26\uff0c\u4e00\u822c\u7528\u5728\u5bf9\u5b9a\u4e49\u7684\u5b57\u7b26\u4e32\u8fdb\u884c\u521d\u59cb\u5316\u4e3a\u2018 \u2018\u6216\u2018\\0\u2032\uff1b\u4f8b:char a[100];memset(a, \u2018\\0\u2032, sizeof(a));", "\nmemcpy\u7528\u6765\u505a\u5185\u5b58\u62f7\u8d1d\uff0c\u4f60\u53ef\u4ee5\u62ff\u5b83\u62f7\u8d1d\u4efb\u4f55\u6570\u636e\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u53ef\u4ee5\u6307\u5b9a\u62f7\u8d1d\u7684\u6570\u636e\u957f\u5ea6\uff1b\u4f8b\uff1achar a[100],b[50]; memcpy(b, a, sizeof(b));\u6ce8\u610f\u5982\u7528sizeof(a)\uff0c\u4f1a\u9020\u6210b\u7684\u5185\u5b58\u5730\u5740\u6ea2\u51fa\u3002", "\nstrcpy\u5c31\u53ea\u80fd\u62f7\u8d1d\u5b57\u7b26\u4e32\u4e86\uff0c\u5b83\u9047\u5230\u2019\\0\u2032\u5c31\u7ed3\u675f\u62f7\u8d1d\uff1b\u4f8b\uff1achar a[100],b[50];strcpy(a,b);\u5982\u7528strcpy(b,a)\uff0c\u8981\u6ce8\u610fa\u4e2d\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\uff08\u7b2c\u4e00\u4e2a\u2018\\0\u2032\u4e4b\u524d\uff09\u662f\u5426\u8d85\u8fc750\u4f4d\uff0c\u5982\u8d85\u8fc7\uff0c\u5219\u4f1a\u9020\u6210b\u7684\u5185\u5b58\u5730\u5740\u6ea2\u51fa\u3002", "\nstrcpy", "\n\u539f\u578b\uff1aextern char *strcpy(char *dest,char *src);", "\n\u7528\u6cd5\uff1a#include", "\n\u529f\u80fd\uff1a\u628asrc\u6240\u6307\u7531NULL\u7ed3\u675f\u7684\u5b57\u7b26\u4e32\u590d\u5236\u5230dest\u6240\u6307\u7684\u6570\u7ec4\u4e2d\u3002", "\n\u8bf4\u660e\uff1asrc\u548cdest\u6240\u6307\u5185\u5b58\u533a\u57df\u4e0d\u53ef\u4ee5\u91cd\u53e0\u4e14dest\u5fc5\u987b\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u6765\u5bb9\u7eb3src\u7684\u5b57\u7b26\u4e32\u3002", "\n\u8fd4\u56de\u6307\u5411dest\u7684\u6307\u9488\u3002", "\nmemcpy", "\n\u539f\u578b\uff1aextern void *memcpy(void *dest, void *src, unsigned int count);", "\n\u7528\u6cd5\uff1a#include", "\n\u529f\u80fd\uff1a\u7531src\u6240\u6307\u5185\u5b58\u533a\u57df\u590d\u5236count\u4e2a\u5b57\u8282\u5230dest\u6240\u6307\u5185\u5b58\u533a\u57df\u3002", "\n\u8bf4\u660e\uff1asrc\u548cdest\u6240\u6307\u5185\u5b58\u533a\u57df\u4e0d\u80fd\u91cd\u53e0\uff0c\u51fd\u6570\u8fd4\u56de\u6307\u5411dest\u7684\u6307\u9488\u3002", "\nMemset", "\n\u539f\u578b\uff1aextern void *memset(void *buffer, char c, int count);", "\n\u7528\u6cd5\uff1a#include", "\n\u529f\u80fd\uff1a\u628abuffer\u6240\u6307\u5185\u5b58\u533a\u57df\u7684\u524dcount\u4e2a\u5b57\u8282\u8bbe\u7f6e\u6210\u5b57\u7b26c\u3002", "\n\u8bf4\u660e\uff1a\u8fd4\u56de\u6307\u5411buffer\u7684\u6307\u9488\u3002", "\n5. \u662f\u5e72\u4ec0\u4e48\u7528\u7684ASSERT()", "\nASSERT()\u662f\u4e00\u4e2a\u8c03\u8bd5\u7a0b\u5e8f\u65f6\u7ecf\u5e38\u4f7f\u7528\u7684\u5b8f\uff0c\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u5b83\u8ba1\u7b97\u62ec\u53f7\u5185\u7684\u8868\u8fbe\u5f0f\uff0c\u5982\u679c\u8868\u8fbe\u5f0f\u4e3aFALSE (0), \u7a0b\u5e8f\u5c06\u62a5\u544a\u9519\u8bef\uff0c\u5e76\u7ec8\u6b62\u6267\u884c\u3002\u5982\u679c\u8868\u8fbe\u5f0f\u4e0d\u4e3a0\uff0c\u5219\u7ee7\u7eed\u6267\u884c\u540e\u9762\u7684\u8bed\u53e5\u3002\u8fd9\u4e2a\u5b8f\u901a\u5e38\u539f\u6765\u5224\u65ad\u7a0b\u5e8f\u4e2d\u662f\u5426\u51fa\u73b0\u4e86\u660e\u663e\u975e\u6cd5\u7684\u6570\u636e\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u7ec8\u6b62\u7a0b\u5e8f\u4ee5\u514d\u5bfc\u81f4\u4e25\u91cd\u540e\u679c\uff0c\u540c\u65f6\u4e5f\u4fbf\u4e8e\u67e5\u627e\u9519\u8bef\u3002\u4f8b\u5982\uff0c\u53d8\u91cfn\u5728\u7a0b\u5e8f\u4e2d\u4e0d\u5e94\u8be5\u4e3a0\uff0c\u5982\u679c\u4e3a0\u53ef\u80fd\u5bfc\u81f4\u9519\u8bef\uff0c\u4f60\u53ef\u4ee5\u8fd9\u6837\u5199\u7a0b\u5e8f\uff1a", "\n\u2026\u2026", "\nASSERT( n != 0);", "\nk = 10/ n;", "\n\u2026\u2026", "\nASSERT\u53ea\u6709\u5728Debug\u7248\u672c\u4e2d\u624d\u6709\u6548\uff0c\u5982\u679c\u7f16\u8bd1\u4e3aRelease\u7248\u672c\u5219\u88ab\u5ffd\u7565\u3002", "\nassert()\u7684\u529f\u80fd\u7c7b\u4f3c\uff0c\u5b83\u662fANSI C\u6807\u51c6\u4e2d\u89c4\u5b9a\u7684\u51fd\u6570\uff0c\u5b83\u4e0eASSERT\u7684\u4e00\u4e2a\u91cd\u8981\u533a\u522b\u662f\u53ef\u4ee5\u7528\u5728Release\u7248\u672c\u4e2d\u3002", "\n6. \uff08\u201dpause\u201d);\u7cfb\u7edf\u7684\u6682\u505c\u7a0b\u5e8f\uff0c\u6309\u4efb\u610f\u952e\u7ee7\u7eed\uff0c\u5c4f\u5e55\u4f1a\u6253\u5370\uff0c\u201d\u6309\u4efb\u610f\u952e\u7ee7\u7eed\u3002\u3002\u3002\u3002\u3002\u201d \u7701\u53bb\u4e86\u4f7f\u7528getchar\uff08\uff09\uff1bsystem", "\n7. \u8bf7\u95eeC++\u7684\u7c7b\u548cC\u91cc\u9762\u7684struct\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\nc++\u4e2d\u7684\u7c7b\u5177\u6709\u6210\u5458\u4fdd\u62a4\u529f\u80fd\uff0c\u5e76\u4e14\u5177\u6709\u7ee7\u627f\uff0c\u591a\u6001\u8fd9\u7c7boo\u7279\u70b9\uff0c\u800cc\u91cc\u7684struct\u6ca1\u6709", "\n8. \u8bf7\u8bb2\u4e00\u8bb2\u6790\u6784\u51fd\u6570\u548c\u865a\u51fd\u6570\u7684\u7528\u6cd5\u548c\u4f5c\u7528\uff1f", "\n\u6790\u6784\u51fd\u6570\u4e5f\u662f\u7279\u6b8a\u7684\u7c7b\u6210\u5458\u51fd\u6570\uff0c\u5b83\u6ca1\u6709\u8fd4\u56de\u7c7b\u578b\uff0c\u6ca1\u6709\u53c2\u6570\uff0c\u4e0d\u80fd\u968f\u610f\u8c03\u7528\uff0c\u4e5f\u6ca1\u6709\u91cd\u8f7d\u3002\u77e5\u8bc6\u5728\u7c7b\u5bf9\u8c61\u751f\u547d\u671f\u7ed3\u675f\u7684\u65f6\u5019\uff0c\u7531\u7cfb\u7edf\u81ea\u52a8\u8c03\u7528\u91ca\u653e\u5728\u6784\u9020\u51fd\u6570\u4e2d\u5206\u914d\u7684\u8d44\u6e90\u3002\u8fd9\u79cd\u5728\u8fd0\u884c\u65f6\uff0c\u80fd\u4f9d\u636e\u5176\u7c7b\u578b\u786e\u8ba4\u8c03\u7528\u90a3\u4e2a\u51fd\u6570\u7684\u80fd\u529b\u79f0\u4e3a\u591a\u6001\u6027\uff0c\u6216\u79f0\u8fdf\u540e\u8054\u7f16\u3002\u53e6\uff1a\u6790\u6784\u51fd\u6570\u4e00\u822c\u5728\u5bf9\u8c61\u64a4\u6d88\u524d\u505a\u6536\u5c3e\u5de5\u4f5c\uff0c\u6bd4\u5982\u56de\u6536\u5185\u5b58\u7b49\u5de5\u4f5c\uff0c\u865a\u62df\u51fd\u6570\u7684\u529f\u80fd\u662f\u4f7f\u5b50\u7c7b\u53ef\u4ee5\u7528\u540c\u540d\u7684\u51fd\u6570\u5bf9\u7236\u7c7b\u51fd\u6570\u8fdb\u884c\u91cd\u8f7d\uff0c\u5e76\u4e14\u5728\u8c03\u7528\u65f6\u81ea\u52a8\u8c03\u7528\u5b50\u7c7b\u91cd\u8f7d\u51fd\u6570\uff0c\u5982\u679c\u662f\u7eaf\u865a\u51fd\u6570\uff0c\u5219\u7eaf\u7cb9\u662f\u4e3a\u4e86\u5728\u5b50\u7c7b\u91cd\u8f7d\u65f6\u6709\u4e2a\u7edf\u4e00\u7684\u547d\u540d\u800c\u5df2\u3002", "\n9. \u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1f\u5b9e\u600e\u4e48\u5b9e\u73b0\u7684\uff1f\u64cd\u4f5c\u7cfb\u7edf\u548c\u7f16\u8bd1\u5668\u662f\u600e\u4e48\u77e5\u9053\u7684\uff1f", "\n\u5168\u5c40\u53d8\u91cf\u7684\u751f\u547d\u5468\u671f\u662f\u6574\u4e2a\u7a0b\u5e8f\u8fd0\u884c\u7684\u65f6\u95f4\uff0c\u800c\u5c40\u90e8\u53d8\u91cf\u7684\u751f\u547d\u5468\u671f\u5219\u662f\u5c40\u90e8\u51fd\u6570\u6216\u8fc7\u7a0b\u8c03\u7528\u7684\u65f6\u95f4\u6bb5\u3002\u5176\u5b9e\u73b0\u662f\u7531\u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u65f6\u91c7\u7528\u4e0d\u540c\u5185\u5b58\u5206\u914d\u65b9\u6cd5\u3002\u5168\u5c40\u53d8\u91cf\u5728main\u51fd\u6570\u8c03\u7528\u540e\uff0c\u5c31\u5f00\u59cb\u5206\u914d\uff0c\u5982\u679c\u662f\u9759\u6001\u53d8\u91cf\u5219\u662f\u5728main\u51fd\u6570\u524d\u5c31\u5df2\u7ecf\u521d\u59cb\u5316\u4e86\u3002\u800c\u5c40\u90e8\u53d8\u91cf\u5219\u662f\u5728\u7528\u6237\u6808\u4e2d\u52a8\u6001\u5206\u914d\u7684\uff08\u8fd8\u662f\u5efa\u8bae\u770b\u7f16\u8bd1\u539f\u7406\u4e2d\u7684\u6d3b\u52a8\u8bb0\u5f55\u8fd9\u4e00\u5757\uff09", "\n10. \u662f\u591a\u5c11\u5c09\u7684\u7cfb\u7edf\uff1f\u5728\u6570\u636e\u603b\u7ebf\u4e0a\u662f\u600e\u4e48\u5b9e\u73b0\u7684\uff1f8086", "\n8086\u7cfb\u7edf\u662f16\u4f4d\u7cfb\u7edf\uff0c\u5176\u6570\u636e\u603b\u7ebf\u662f20\u4f4d\u3002", "\n1.2 \u7a0b\u5e8f\u8bbe\u8ba1", "\n1. \u7f16\u5199\u7528C\u8bed\u8a00\u5b9e\u73b0\u7684\u6c42n\u9636\u9636\u4e58\u95ee\u9898\u7684\u9012\u5f52\u7b97\u6cd5\uff1a", "\nlong int fact(int n)", "\n{", "\nint x;", "\nlong int y;", "\nif(n<0)", "\n{", "\nprintf(\u201cerror!\u201d);", "\n}", "\nif(n==0)", "\nreturn 1;", "\nx=n-1;", "\ny=fact(x);", "\nreturn (n*y);", "\n}", "\n2. \u4e8c\u5206\u67e5\u627e\u7b97\u6cd5\uff1a", "\n1) \u9012\u5f52\u65b9\u6cd5\u5b9e\u73b0\uff1a", "\nint BSearch(elemtype a[],elemtype x,int low,int high)", "\n/*\u5728\u4e0b\u5c4a\u4e3alow\uff0c\u4e0a\u754c\u4e3ahigh\u7684\u6570\u7ec4a\u4e2d\u6298\u534a\u67e5\u627e\u6570\u636e\u5143\u7d20x*/", "\n{", "\nint mid;", "\nif(low>high) return -1;", "\nmid=(low+high)/2;", "\nif(x==a[mid]) return mid;", "\nif(x<a[mid]) return(BSearch(a,x,low,mid-1));", "\nelse return(BSearch(a,x,mid+1,high));", "\n}", "\n2) \u975e\u9012\u5f52\u65b9\u6cd5\u5b9e\u73b0\uff1a", "\nint BSearch(elemtype a[],keytype key,int n)", "\n{", "\nint low,high,mid;", "\nlow=0;high=n-1;", "\nwhile(low<=high)", "\n{", "\nmid=(low+high)/2;", "\nif(a[mid].key==key) return mid;", "\nelse if(a[mid].key<key) low=mid+1;", "\nelse high=mid-1;", "\n}", "\nreturn -1;", "\n}", "\n3. \u9012\u5f52\u8ba1\u7b97\u5982\u4e0b\u9012\u5f52\u51fd\u6570\u7684\u503c\uff08\u6590\u6ce2\u62c9\u5951\uff09\uff1a", "\nf(1)=1", "\nf(2)=1", "\nf(n)=f(n-1)+f(n-2) n>2", "\n\u89e3\uff1a", "\nint f(int n)", "\n{", "\nint i,s,s1,s2;", "\ns1=1;/*s1\u7528\u4e8e\u4fdd\u5b58f(n-1)\u7684\u503c*/", "\ns2=1;/*s2\u7528\u4e8e\u4fdd\u5b58f(n-2)\u7684\u503c*/", "\ns=1;", "\nfor(i=3;i<=n;i++)", "\n{", "\ns=s1+s2;", "\ns2=s1;", "\ns1=s;", "\n}", "\nreturn(s);", "\n}", "\n4. \u4ea4\u6362\u4e24\u4e2a\u6570\uff0c\u4e0d\u7528\u7b2c\u4e09\u5757\u513f\u5185\u5b58\uff1a", "\nint a = \u2026\u2026;", "\nint b = \u2026\u2026;", "\na = a + b;", "\nb = a \u2013 b;", "\na = a \u2013 b;", "\n5. \u5192\u6ce1\u6392\u5e8f\uff1a", "\nvoid BubbleSort(elemtype x[],int n)", "\n{", "\nint i,j;", "\nelemtype temp;", "\nfor(i=1;i<n;i++)", "\nfor(j=0;j<n-i;j++)", "\n{", "\nif(x[j].key>x[j+1].key)", "\n{", "\ntemp=x[j];", "\nx[j]=x[j+1];", "\nx[j+1]=temp;", "\n}", "\n}", "\n}", "\n6. \u8bed\u8a00 \u6587\u4ef6\u8bfb\u5199c", "\n#include \u201cstdio.h\u201d", "\nmain()", "\n{", "\nFILE *fp;", "\nchar ch,filename[10];", "\nscanf(\u201c%s\u201d,filename);", "\nif((fp=fopen(filename,\u201dw\u201d)==NULL)", "\n{", "\nprintf(\u201ccann\u2019t open file\\n\u201d);", "\nexit(0);", "\n}", "\nch=getchar();", "\nwhile(ch!=\u2019#')", "\n{", "\nfputc(ch,fp);", "\nputchar(ch);", "\nch=getchar();", "\n}", "\nfclose(fp);", "\n}", "\n7. \u7f16\u7a0bwinsocket", "\n#include <Winsock2.h>", "\n#include <stdio.h>", "\nvoid main()", "\n{", "\nWORDwVersionRequested;", "\nWSADATA wsaData;", "\nint err;", "\nwVersionRequested = MAKEWORD(1,1);", "\nerr = WSAStartup(wVersionRequested,&wsaData);", "\nif( err != 0)", "\n{", "\nreturn;", "\n}", "\nif(LOBYTE( wsaData.wVersion ) != 1||", "\nHIBYTE( wsaData.wVersion) != 1)", "\n{", "\nWSACleanup();", "\nreturn;", "\n}", "\nSOCKET sockSrv=socket(AF_INET,SOCK_STREAM,0);", "\nSOCKADDR_IN addrSrv;", "\naddrSrv.sin_addr.S_un.S_addr=htonl(INADDR_ANY);", "\naddrSrv.sin_family=AF_INET;", "\naddrSrv.sin_port=htons(6000);", "\nbind(sockSrv,(SOCKADDR*)&addrSrv,sizeof(SOCKADDR));", "\nlisten(sockSrv,5);", "\nSOCKADDR_IN addrClient;", "\nint len=sizeof(SOCKADDR);", "\nwhile(1)", "\n{", "\nSOCKET sockConn=accept(sockSrv,(SOCKADDR*)&addrClient,&len);", "\nchar sendBuf[100];", "\nsprint(sendBuf,\u201dWelcome %s to http://www.sunxin.org\u201d,", "\ninet_ntoa(addrClient.sin_addr));", "\nsend(sockConn,sendBuf,strlen(sendBuf)+1,0);", "\nchar recvBuf[100];", "\nrecv(sockConn,recvBuf);", "\nprintf(\u201c%s\\n\u201d,recvBuf);", "\nclosesocket(sockConn);", "\nWSACleanup();", "\n}", "\n}", "\n\u6ce8\uff1a\u8fd9\u662fServer\u7aef\uff1bFile->New->Win32 Console Application\uff0c\u5de5\u7a0b\u540d\uff1aTcpSrv\uff1b\u7136\u540e\uff0cFile->New->C++ Source File\uff0c\u6587\u4ef6\u540d\uff1aTcpSrv\uff1b\u5728\u8be5\u5de5\u7a0b\u7684Setting\u7684Link\u7684Object/library modules\u9879\u8981\u52a0\u5165ws2_32.lib", "\n#include <Winsock2.h>", "\n#include <stdio.h>", "\nvoid main()", "\n{", "\nWORDwVersionRequested;", "\nWSADATA wsaData;", "\nint err;", "\nwVersionRequested = MAKEWORD(1,1);", "\nerr = WSAStartup(wVersionRequested,&wsaData);", "\nif( err != 0)", "\n{", "\nreturn;", "\n}", "\nif(LOBYTE( wsaData.wVersion ) != 1||", "\nHIBYTE( wsaData.wVersion) != 1)", "\n{", "\nWSACleanup();", "\nreturn;", "\n}", "\nSOCKET sockClient=socket(AF_INET,SOCK_STREAM,0);", "\nSOCKADDR_IN addrSrv;", "\naddrSrv.sin_addr.S_un.S_addr=inet_addr(\u201c127.0.0.1\u2033);", "\naddrSrv.sin_family=AF_INET;", "\naddrSrv.sin_porthtons(6000);", "\nconnect(sockClient,(SOCKADDR*)&addrSrv,sizeof(SOCKADDR));", "\nchar recvBuf[100];", "\nrecv(sockClient,recvBuf,100,0);", "\nprintf(\u201c%s\\n\u201d,recvBuf);", "\nsend(sockClient,\u201dThis is zhangsan\u201d,strlen(\u201cThis is zhangsan\u201d)+1,0);", "\nclosesocket(sockClient);", "\nWSACleanup();", "\n}", "\n\u6ce8\uff1a\u8fd9\u662fClient\u7aef\uff1bFile->New->Win32 Console Application\uff0c\u5de5\u7a0b\u540d\uff1aTcpClient\uff1b\u7136\u540e\uff0cFile->New->C++ Source File\uff0c\u6587\u4ef6\u540d\uff1aTcpClient\uff1b\u540c\u7406\uff0c\u5728\u8be5\u5de5\u7a0b\u7684Setting\u7684Link\u7684Object/library modules\u9879\u8981\u52a0\u5165ws2_32.lib", "\n8. \u7c7b\u7684\u77e5\u8bc6", "\nC\uff0b\uff0b", "\n#include <iostream.h>", "\nclass human", "\n{", "\npublic:", "\nhuman(){ human_num++;};", "\nstatic int human_num;", "\n~human()", "\n{", "\nhuman_num\u2013;", "\nprint();", "\n}", "\nvoid print()", "\n{", "\ncout<<\u201dhuman num is: \u201c<<human_num<<endl;", "\n}", "\nprotected:", "\nprivate:", "\n};", "\nint human::human_num = 0;", "\nhuman f1(human x)", "\n{", "\nx.print();", "\nreturn x;", "\n}", "\nint main(int argc, char* argv[])", "\n{", "\nhuman h1;", "\nh1.print();", "\nhuman h2 = f1(h1);", "\nh2.print();", "\nreturn 0;", "\n}", "\n\u8f93\u51fa\uff1a", "\n1", "\n1", "\n0", "\n0", "\n\uff0d1", "\n\uff0d2", "\n\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d", "\n\u5206\u6790\uff1a", "\nhuman h1; //\u8c03\u7528\u6784\u9020\u51fd\u6570,\u2014hum_num = 1;", "\nh1.print(); //\u8f93\u51fa:\u201dhuman is 1\u2033", "\nhuman h2 = f1(h1); //\u518d\u8c03\u7528f1(h1)\u7684\u8fc7\u7a0b\u4e2d,\u7531\u4e8e\u51fd\u6570\u53c2\u6570\u662f\u6309\u503c\u4f20\u9012\u5bf9\u8c61,\u8c03\u7528\u9ed8\u8ba4\u7684\u590d\u5236\u6784\u9020\u51fd\u6570,\u5b83\u5e76\u6ca1\u6709\u5bf9hum_num++,\u6240\u4ee5hum_num \u4ecd= 1,\u6240\u4ee5x.print()\u8f93\u51fa:\u201dhuman is 1\u2033; \u5728\u63a8\u51faf1\u51fd\u6570\u65f6,\u8981\u9500\u6bc1X,\u8c03\u7528\u6790\u6784\u51fd\u6570(human_num\u2013),\u8f93\u51fa:\u201dhuman is 0\u2033(,\u7531\u4e8e\u8be5\u51fd\u6570\u8fd4\u56de\u4e00\u4e2ahuman \u5bf9\u8c61,\u6240\u4ee5\u53c8\u8c03\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570,\u521b\u5efa\u4e00\u4e2a\u4e34\u65f6\u5bf9\u8c61(human_num = 0;),\u628a\u4e34\u65f6\u5bf9\u8c61\u8d4b\u7ed9h2,\u53c8\u8c03\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570( human_num = 0); h2.print(); //\u8f93\u51fa: human is 0;", "\n//\u5728\u9000\u51famain()\u51fd\u6570\u662f,\u5148\u9500\u6bc1h2,\u8c03\u7528\u6790\u6784\u51fd\u6570(human_num\u2013),\u8f93\u51fa\u201dhuman_num is -1\u2033 \u7136\u540e\u9500\u6bc1h1,\u8c03\u7528\u6790\u6784\u51fd\u6570(\u2013),\u8f93\u51fa\u201dhuman_num is -2\u2033", "\n1.3 Windows\u7684\u6d88\u606f\u673a\u5236", "\n1. \u7684\u6d88\u606f\u673a\u52361Windows", "\nWindows\u662f\u4e00\u4e2a\u6d88\u606f\uff08Message\uff09\u9a71\u52a8\u7cfb\u7edf\u3002Windows\u7684\u6d88\u606f\u63d0\u4f9b\u4e86\u5e94\u7528\u7a0b\u5e8f\u4e4b\u95f4\u3001\u5e94\u7528\u7a0b\u5e8f\u4e0eWindows\u7cfb\u7edf\u4e4b\u95f4\u8fdb\u884c\u901a\u4fe1\u7684\u624b\u6bb5\u3002\u5e94\u7528\u7a0b\u5e8f\u60f3\u8981\u5b9e\u73b0\u7684\u529f\u80fd\u7531\u6d88\u606f\u6765\u89e6\u53d1\uff0c\u5e76\u4e14\u9760\u5bf9\u6d88\u606f\u7684\u54cd\u5e94\u548c\u5904\u7406\u6765\u5b8c\u6210\u3002", "\nWindows\u7cfb\u7edf\u4e2d\u6709\u4e24\u79cd\u6d88\u606f\u961f\u5217\uff1a\u7cfb\u7edf\u6d88\u606f\u961f\u5217\u548c\u5e94\u7528\u7a0b\u5e8f\u6d88\u606f\u961f\u5217\u3002\u8ba1\u7b97\u673a\u7684\u6240\u6709\u8f93\u5165\u8bbe\u5907\u7531Windows\u76d1\u63a7\u3002\u5f53\u4e00\u4e2a\u4e8b\u4ef6\u53d1\u751f\u65f6\uff0cWindows\u5148\u5c06\u8f93\u5165\u7684\u6d88\u606f\u653e\u5165\u7cfb\u7edf\u6d88\u606f\u961f\u5217\u4e2d\uff0c\u518d\u5c06\u6d88\u606f\u62f7\u8d1d\u5230\u76f8\u5e94\u7684\u5e94\u7528\u7a0b\u5e8f\u6d88\u606f\u961f\u5217\u4e2d\u3002\u5e94\u7528\u7a0b\u5e8f\u7684\u6d88\u606f\u5904\u7406\u7a0b\u5e8f\u5c06\u53cd\u590d\u68c0\u6d4b\u6d88\u606f\u961f\u5217\uff0c\u5e76\u628a\u68c0\u6d4b\u5230\u7684\u6bcf\u4e2a\u6d88\u606f\u53d1\u9001\u5230\u76f8\u5e94\u7684\u7a97\u53e3\u51fd\u6570\u4e2d\u3002\u8fd9\u4fbf\u662f\u4e00\u4e2a\u4e8b\u4ef6\u4ece\u53d1\u751f\u81f3\u5230\u8fbe\u7a97\u53e3\u51fd\u6570\u5fc5\u987b\u7ecf\u5386\u7684\u8fc7\u7a0b\u3002", "\n\u5fc5\u987b\u6ce8\u610f\u7684\u662f\uff0c\u6d88\u606f\u5e76\u975e\u662f\u62a2\u5360\u6027\u7684\uff0c\u65e0\u8bba\u4e8b\u4ef6\u7684\u7f13\u6025\uff0c\u603b\u662f\u6309\u7167\u5230\u8fbe\u7684\u5148\u540e\u6d3e\u5bf9\uff0c\u4f9d\u6b21\u5904\u7406\uff08\u4e00\u4e9b\u7cfb\u7edf\u6d88\u606f\u9664\u5916\uff09\uff0c\u8fd9\u6837\u53ef\u80fd\u4f7f\u4e00\u4e9b\u5b9e\u65f6\u5916\u90e8\u4e8b\u4ef6\u5f97\u4e0d\u5230\u53ca\u65f6\u5904\u7406\u3002", "\n2. \u7684\u6d88\u606f\u673a\u52362Windows", "\nWindows\u4e2d\u7684\u6d88\u606f\u662f\u653e\u5728\u5bf9\u5e94\u7684\u8fdb\u7a0b\u7684\u6d88\u606f\u961f\u5217\u91cc\u7684\u3002\u53ef\u4ee5\u901a\u8fc7GetMessage\u53d6\u5f97\uff0c\u5e76\u4e14\u5bf9\u4e8e\u4e00\u822c\u7684\u6d88\u606f\uff0c\u6b64\u51fd\u6570\u8fd4\u56de\u975e\u96f6\u503c\uff0c\u4f46\u662f\u5bf9\u4e8eWM_QUIT\u6d88\u606f\uff0c\u8fd4\u56de\u96f6\u3002\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u7279\u5f81\uff0c\u7ed3\u675f\u7a0b\u5e8f\u3002\u5f53\u53d6\u5f97\u6d88\u606f\u4e4b\u540e\uff0c\u5e94\u8be5\u5148\u8f6c\u6362\u6d88\u606f\uff0c\u518d\u5206\u53d1\u6d88\u606f\u3002\u6240\u8c13\u8f6c\u6362\uff0c\u5c31\u662f\u628a\u952e\u76d8\u7801\u7684\u8f6c\u6362\uff0c\u6240\u8c13\u5206\u53d1\uff0c\u5c31\u662f\u628a\u6d88\u606f\u5206\u53d1\u7ed9\u5bf9\u5e94\u7684\u7a97\u53e3\uff0c\u7531\u5bf9\u5e94\u7684\u7a97\u53e3\u5904\u7406\u6d88\u606f\uff0c\u8fd9\u6837\u5bf9\u5e94\u7a97\u4f53\u7684\u6d88\u606f\u5904\u7406\u51fd\u6570\u5c31\u4f1a\u88ab\u8c03\u7528\u3002\u4e24\u4e2a\u51fd\u6570\u53ef\u4ee5\u5b9e\u73b0\u8fd9\u4e24\u4e2a\u529f\u80fd\uff1aTranslateMessage\u548cDispatchMessage\u3002", "\n\u53e6\u5916\uff0c\u9700\u8981\u6ce8\u610f\uff0c\u5f53\u6211\u4eec\u70b9\u51fb\u7a97\u53e3\u7684\u5173\u95ed\u6309\u94ae\u5173\u95ed\u7a97\u53e3\u65f6\uff0c\u7a0b\u5e8f\u5e76\u6ca1\u6709\u81ea\u52a8\u9000\u51fa\uff0c\u800c\u662f\u5411\u7a0b\u5e8f\u53d1\u9001\u4e86\u4e00\u4e2aWM_DESTROY\u6d88\u606f\uff08\u5176\u5b9e\u8fc7\u7a0b\u662f\u8fd9\u6837\u7684\uff0c\u9996\u5148\u5411\u7a0b\u5e8f\u53d1\u9001WM_CLOSE\u6d88\u606f\uff0c\u9ed8\u8ba4\u7684\u5904\u7406\u7a0b\u5e8f\u662f\u8c03\u7528DestroyWindow\u9500\u6bc1\u7a97\u4f53\uff0c\u4ece\u800c\u5f15\u53d1WM_DESTROY\u6d88\u606f\uff09\uff0c\u6b64\u65f6\u5728\u7a97\u4f53\u4e2d\u6211\u4eec\u8981\u54cd\u5e94\u8fd9\u4e2a\u6d88\u606f\uff0c\u5982\u679c\u9700\u8981\u9000\u51fa\u7a0b\u5e8f\uff0c\u90a3\u4e48\u5c31\u8981\u5411\u7a0b\u5e8f\u53d1\u9001WM_QUIT\u6d88\u606f(\u901a\u8fc7PostQuitMessage\u5b9e\u73b0)\u3002\u4e00\u4e2a\u7a97\u4f53\u5982\u679c\u60f3\u8981\u8c03\u7528\u81ea\u5df1\u7684\u6d88\u606f\u5904\u7406\u51fd\u6570\uff0c\u53ef\u4ee5\u4f7f\u7528SendMessage\u5411\u81ea\u5df1\u53d1\u6d88\u606f\u3002", "\n\u5982\u4e0a\u6240\u8ff0\uff0c\u5927\u90e8\u5206\uff08\u6ce8\u610f\u662f\u5927\u90e8\u5206\uff09\u7684\u6d88\u606f\u662f\u8fd9\u6837\u4f20\u9012\u7684\uff1a\u9996\u5148\u653e\u5230\u8fdb\u7a0b\u7684\u6d88\u606f\u961f\u5217\u4e2d\uff0c\u4e4b\u540e\u7531GetMessage\u53d6\u51fa\uff0c\u8f6c\u6362\u540e\uff0c\u5206\u53d1\u7ed9\u5bf9\u5e94\u7684\u7a97\u53e3\u3002\u8fd9\u79cd\u6d88\u606f\u6210\u4e3a\u5b58\u50a8\u5f0f\u6d88\u606f\u3002\u5b58\u50a8\u5f0f\u6d88\u606f\u57fa\u672c\u4e0a\u662f\u4f7f\u7528\u8005\u8f93\u5165\u7684\u7ed3\u679c\uff0c\u4ee5\u51fb\u952e\uff08\u5982WM_KEYDOWN\u548cWM_KEYUP\u8baf\u606f\uff09\u3001\u51fb\u952e\u4ea7\u751f\u7684\u5b57\u7b26\uff08WM_CHAR\uff09\u3001\u9f20\u6807\u79fb\u52a8\uff08WM_MOUSEMOVE\uff09\u548c\u9f20\u6807\u6309\u94ae\uff08WM_LBUTTONDOWN\uff09\u7684\u5f62\u5f0f\u7ed9\u51fa\u3002\u5b58\u50a8\u5f0f\u6d88\u606f\u8fd8\u5305\u542b\u65f6\u949f\u6d88\u606f\uff08WM_TIMER\uff09\u3001\u66f4\u65b0\u6d88\u606f\uff08WM_PAINT\uff09\u548c\u9000\u51fa\u6d88\u606f\uff08WM_QUIT\uff09\u3002\u4f46\u662f\u4e5f\u6709\u7684\u6d88\u606f\u662f\u76f4\u63a5\u53d1\u9001\u7ed9\u7a97\u53e3\u7684\uff0c\u5b83\u4eec\u88ab\u79f0\u4e3a\u975e\u5b58\u50a8\u5f0f\u6d88\u606f\u3002\u4f8b\u5982\uff0c\u5f53WinMain\u8c03\u7528CreateWindow\u65f6\uff0cWindows\u5c06\u5efa\u7acb\u7a97\u53e3\u5e76\u5728\u5904\u7406\u4e2d\u7ed9\u7a97\u53e3\u6d88\u606f\u5904\u7406\u51fd\u6570\u53d1\u9001\u4e00\u4e2aWM_CREATE\u6d88\u606f\u3002\u5f53WinMain\u8c03\u7528ShowWindow\u65f6\uff0cWindows\u5c06\u7ed9\u7a97\u53e3\u6d88\u606f\u5904\u7406\u51fd\u6570\u53d1\u9001WM_SIZE\u548cWM_SHOWWINDOW\u6d88\u606f\u3002\u5f53WinMain\u8c03\u7528UpdateWindow\u65f6\uff0cWindows\u5c06\u7ed9\u7a97\u53e3\u6d88\u606f\u5904\u7406\u51fd\u6570\u53d1\u9001WM_PAINT\u6d88\u606f\u3002", "\n2 \u7f51\u7edc\u77e5\u8bc6", "\n2.1 OSI\u548cTCP/IP", "\n1. \u7684\u4e03\u5c42\u7f51\u7edc\u7ed3\u6784\u56fe\uff08\u529f\u80fd\u53ca\u7279\u70b9\uff09OSI", "\n1) \u7269\u7406\u5c42\uff1a\u4e3a\u6570\u636e\u94fe\u8def\u5c42\u63d0\u4f9b\u7269\u7406\u8fde\u63a5\uff0c\u5728\u5176\u4e0a\u4e32\u884c\u4f20\u9001\u6bd4\u7279\u6d41\uff0c\u5373\u6240\u4f20\u9001\u6570\u636e\u7684\u5355\u4f4d\u662f\u6bd4\u7279\u3002\u6b64\u5916\uff0c\u8be5\u5c42\u4e2d\u8fd8\u5177\u6709\u786e\u5b9a\u8fde\u63a5\u8bbe\u5907\u7684\u7535\u6c14\u7279\u6027\u548c\u7269\u7406\u7279\u6027\u7b49\u529f\u80fd\u3002", "\n2) \u6570\u636e\u94fe\u8def\u5c42\uff1a\u8d1f\u8d23\u5728\u7f51\u7edc\u8282\u70b9\u95f4\u7684\u7ebf\u8def\u4e0a\u901a\u8fc7\u68c0\u6d4b\u3001\u6d41\u91cf\u63a7\u5236\u548c\u91cd\u53d1\u7b49\u624b\u6bb5\uff0c\u65e0\u5dee\u9519\u5730\u4f20\u9001\u4ee5\u5e27\u4e3a\u5355\u4f4d\u7684\u6570\u636e\u3002\u4e3a\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u5728\u6bcf\u4e00\u5e27\u4e2d\u5fc5\u987b\u540c\u65f6\u5e26\u6709\u540c\u6b65\u3001\u5730\u5740\u3001\u5dee\u9519\u63a7\u5236\u53ca\u6d41\u91cf\u63a7\u5236\u7b49\u63a7\u5236\u4fe1\u606f\u3002", "\n3) \u7f51\u7edc\u5c42\uff1a\u4e3a\u4e86\u5c06\u6570\u636e\u5206\u7ec4\u4ece\u6e90\uff08\u6e90\u7aef\u7cfb\u7edf\uff09\u9001\u5230\u76ee\u7684\u5730\uff08\u76ee\u6807\u7aef\u7cfb\u7edf\uff09\uff0c\u7f51\u7edc\u5c42\u7684\u4efb\u52a1\u5c31\u662f\u9009\u62e9\u5408\u9002\u7684\u8def\u7531\u548c\u4ea4\u6362\u8282\u70b9\uff0c\u4f7f\u6e90\u7684\u4f20\u8f93\u5c42\u4f20\u4e0b\u6765\u7684\u5206\u7ec4\u4fe1\u606f\u80fd\u591f\u6b63\u786e\u65e0\u8bef\u5730\u6309\u7167\u5730\u5740\u627e\u5230\u76ee\u7684\u5730\uff0c\u5e76\u4ea4\u4ed8\u7ed9\u76f8\u5e94\u7684\u4f20\u8f93\u5c42\uff0c\u5373\u5b8c\u6210\u7f51\u7edc\u7684\u5bfb\u5740\u529f\u80fd\u3002", "\n4) \u4f20\u8f93\u5c42\uff1a\u4f20\u8f93\u5c42\u662f\u9ad8\u4f4e\u5c42\u4e4b\u95f4\u8854\u63a5\u7684\u63a5\u53e3\u5c42\u3002\u6570\u636e\u4f20\u8f93\u7684\u5355\u4f4d\u662f\u62a5\u6587\uff0c\u5f53\u62a5\u6587\u8f83\u957f\u65f6\u5c06\u5b83\u5206\u5272\u6210\u82e5\u5e72\u5206\u7ec4,\u7136\u540e\u4ea4\u7ed9\u7f51\u7edc\u5c42\u8fdb\u884c\u4f20\u8f93\u3002\u4f20\u8f93\u5c42\u662f\u8ba1\u7b97\u673a\u7f51\u7edc\u534f\u8bae\u5206\u5c42\u4e2d\u7684\u6700\u5173\u952e\u4e00\u5c42\uff0c\u8be5\u5c42\u4ee5\u4e0a\u5404\u5c42\u5c06\u4e0d\u518d\u7ba1\u7406\u4fe1\u606f\u4f20\u8f93\u95ee\u9898\u3002", "\n5) \u4f1a\u8bdd\u5c42\uff1a\u8be5\u5c42\u5bf9\u4f20\u8f93\u7684\u62a5\u6587\u63d0\u4f9b\u540c\u6b65\u7ba1\u7406\u670d\u52a1\u3002\u5728\u4e24\u4e2a\u4e0d\u540c\u7cfb\u7edf\u7684\u4e92\u76f8\u901a\u4fe1\u7684\u5e94\u7528\u8fdb\u7a0b\u4e4b\u95f4\u5efa\u7acb\u3001\u7ec4\u7ec7\u548c\u534f\u8c03\u4ea4\u4e92\u3002\u4f8b\u5982\uff0c\u786e\u5b9a\u662f\u53cc\u5de5\u8fd8\u662f\u534a\u53cc\u5de5\u5de5\u4f5c\u3002", "\n6) \u8868\u793a\u5c42\uff1a\u8be5\u5c42\u7684\u4e3b\u8981\u4efb\u52a1\u662f\u628a\u6240\u4f20\u9001\u7684\u6570\u636e\u7684\u62bd\u8c61\u8bed\u6cd5\u53d8\u6362\u4e3a\u4f20\u9001\u8bed\u6cd5\uff0c\u5373\u628a\u4e0d\u540c\u8ba1\u7b97\u673a\u5185\u90e8\u7684\u4e0d\u540c\u8868\u793a\u5f62\u5f0f\u8f6c\u6362\u6210\u7f51\u7edc\u901a\u4fe1\u4e2d\u7684\u6807\u51c6\u8868\u793a\u5f62\u5f0f\u3002\u6b64\u5916\uff0c\u5bf9\u4f20\u9001\u7684\u6570\u636e\u52a0\u5bc6\uff08\u6216\u89e3\u5bc6\uff09\u3001\u6b63\u6587\u538b\u7f29\uff08\u6216\u8fd8\u539f\uff09\u4e5f\u662f\u8868\u793a\u5c42\u7684\u4efb\u52a1\u3002", "\n7) \u5e94\u7528\u5c42\uff1a\u8be5\u5c42\u76f4\u63a5\u9762\u5411\u7528\u6237\uff0c\u662fOSI\u4e2d\u7684\u6700\u9ad8\u5c42\u3002\u5b83\u7684\u4e3b\u8981\u4efb\u52a1\u662f\u4e3a\u7528\u6237\u63d0\u4f9b\u5e94\u7528\u7684\u63a5\u53e3\uff0c\u5373\u63d0\u4f9b\u4e0d\u540c\u8ba1\u7b97\u673a\u95f4\u7684\u6587\u4ef6\u4f20\u9001\u3001\u8bbf\u95ee\u4e0e\u7ba1\u7406\uff0c\u7535\u5b50\u90ae\u4ef6\u7684\u5185\u5bb9\u5904\u7406\uff0c\u4e0d\u540c\u8ba1\u7b97\u673a\u901a\u8fc7\u7f51\u7edc\u4ea4\u4e92\u8bbf\u95ee\u7684\u865a\u62df\u7ec8\u7aef\u529f\u80fd\u7b49\u3002", "\n2. \uff08\u529f\u80fd\u53ca\u7279\u70b9\uff09TCP/IP", "\n1) \u7f51\u7edc\u63a5\u53e3\u5c42\uff1a\u8fd9\u662fTCP/IP\u534f\u8bae\u7684\u6700\u4f4e\u4e00\u5c42\uff0c\u5305\u62ec\u6709\u591a\u79cd\u903b\u8f91\u94fe\u8def\u63a7\u5236\u548c\u5a92\u4f53\u8bbf\u95ee\u534f\u8bae\u3002\u7f51\u7edc\u63a5\u53e3\u5c42\u7684\u529f\u80fd\u662f\u63a5\u6536IP\u6570\u636e\u62a5\u5e76\u901a\u8fc7\u7279\u5b9a\u7684\u7f51\u7edc\u8fdb\u884c\u4f20\u8f93\uff0c\u6216\u4ece\u7f51\u7edc\u4e0a\u63a5\u6536\u7269\u7406\u5e27\uff0c\u62bd\u53d6\u51faIP\u6570\u636e\u62a5\u5e76\u8f6c\u4ea4\u7ed9\u7f51\u9645\u5c42\u3002", "\n2) \u7f51\u9645\u7f51\u5c42\uff08IP\u5c42\uff09\uff1a\u8be5\u5c42\u5305\u62ec\u4ee5\u4e0b\u534f\u8bae\uff1aIP\uff08\u7f51\u9645\u534f\u8bae\uff09\u3001ICMP\uff08Internet Control Message Protocol,\u56e0\u7279\u7f51\u63a7\u5236\u62a5\u6587\u534f\u8bae\uff09\u3001ARP\uff08Address Resolution Protocol\uff0c\u5730\u5740\u89e3\u6790\u534f\u8bae\uff09\u3001RARP\uff08Reverse Address Resolution Protocol\uff0c\u53cd\u5411\u5730\u5740\u89e3\u6790\u534f\u8bae\uff09\u3002\u8be5\u5c42\u8d1f\u8d23\u76f8\u540c\u6216\u4e0d\u540c\u7f51\u7edc\u4e2d\u8ba1\u7b97\u673a\u4e4b\u95f4\u7684\u901a\u4fe1,\u4e3b\u8981\u5904\u7406\u6570\u636e\u62a5\u548c\u8def\u7531\u3002\u5728IP\u5c42\u4e2d\uff0cARP\u534f\u8bae\u7528\u4e8e\u5c06IP\u5730\u5740\u8f6c\u6362\u6210\u7269\u7406\u5730\u5740,RARP\u534f\u8bae\u7528\u4e8e\u5c06\u7269\u7406\u5730\u5740\u8f6c\u6362\u6210IP\u5730\u5740\uff0cICMP\u534f\u8bae\u7528\u4e8e\u62a5\u544a\u5dee\u9519\u548c\u4f20\u9001\u63a7\u5236\u4fe1\u606f\u3002IP\u534f\u8bae\u5728TCP/IP\u534f\u8bae\u7ec4\u4e2d\u5904\u4e8e\u6838\u5fc3\u5730\u4f4d\u3002", "\n3) \u4f20\u8f93\u5c42\uff1a\u8be5\u5c42\u63d0\u4f9bTCP\uff08\u4f20\u8f93\u63a7\u5236\u534f\u8bae\uff09\u548cUDP\uff08User Datagram Protocol\uff0c\u7528\u6237\u6570\u636e\u62a5\u534f\u8bae\uff09\u4e24\u4e2a\u534f\u8bae\uff0c\u5b83\u4eec\u90fd\u5efa\u7acb\u5728IP\u534f\u8bae\u7684\u57fa\u7840\u4e0a\uff0c\u5176\u4e2dTCP\u63d0\u4f9b\u53ef\u9760\u7684\u9762\u5411\u8fde\u63a5\u670d\u52a1\uff0cUDP\u63d0\u4f9b\u7b80\u5355\u7684\u65e0\u8fde\u63a5\u670d\u52a1\u3002\u4f20\u8f93\u5c42\u63d0\u4f9b\u7aef\u5230\u7aef\uff0c\u5373\u5e94\u7528\u7a0b\u5e8f\u4e4b\u95f4\u7684\u901a\u4fe1\uff0c\u4e3b\u8981\u529f\u80fd\u662f\u6570\u636e\u683c\u5f0f\u5316\u3001\u6570\u636e\u786e\u8ba4\u548c\u4e22\u5931\u91cd\u4f20\u7b49\u3002", "\n4) \u5e94\u7528\u5c42\uff1aTCP/IP\u534f\u8bae\u7684\u5e94\u7528\u5c42\u76f8\u5f53\u4e8eOSI\u6a21\u578b\u7684\u4f1a\u8bdd\u5c42\u3001\u8868\u793a\u5c42\u548c\u5e94\u7528\u5c42\uff0c\u5b83\u5411\u7528\u6237\u63d0\u4f9b\u4e00\u7ec4\u5e38\u7528\u7684\u5e94\u7528\u5c42\u534f\u8bae,\u5176\u4e2d\u5305\u62ec\uff1aTelnet\u3001SMTP\u3001DNS\u7b49\u3002\u6b64\u5916\uff0c\u5728\u5e94\u7528\u5c42\u4e2d\u8fd8\u5305\u542b\u6709\u7528\u6237\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u4eec\u5747\u662f\u5efa\u7acb\u5728TCP/IP\u534f\u8bae\u7ec4\u4e4b\u4e0a\u7684\u4e13\u7528\u7a0b\u5e8f\u3002", "\n3. \u53c2\u8003\u6a21\u578b\u548cTCP/IP\u53c2\u8003\u6a21\u578b\u7684\u533a\u522b\uff1aOSI", "\n1) OSI\u6a21\u578b\u67097\u5c42\uff0cTCP/IP\u53ea\u67094\u5c42\uff1b", "\n2) OSI\u5148\u4e8e\u534f\u8bae\u51fa\u73b0\uff0c\u56e0\u6b64\u4e0d\u4f1a\u504f\u5411\u4e8e\u4efb\u4f55\u4e00\u7ec4\u7279\u5b9a\u7684\u534f\u8bae\uff0c\u901a\u7528\u6027\u66f4\u5f3a\uff0c\u4f46\u6709\u4e9b\u529f\u80fd\u4e0d\u77e5\u8be5\u653e\u54ea\u4e00\u5c42\u4e0a\uff0c\u56e0\u6b64\u4e0d\u5f97\u4e0d\u52a0\u5165\u4e00\u4e9b\u5b50\u5c42\uff1bTCP/IP\u540e\u4e8e\u534f\u8bae\u51fa\u73b0\uff0c\u4ec5\u662f\u5c06\u5df2\u6709\u534f\u8bae\u7684\u4e00\u4e2a\u63cf\u8ff0\uff0c\u56e0\u6b64\u4e24\u8005\u914d\u5408\u7684\u975e\u5e38\u597d\uff1b\u4f46\u4ed6\u4e0d\u9002\u5408\u5176\u4ed6\u7684\u534f\u8bae\u6808\uff0c\u4e0d\u5bb9\u6613\u63cf\u8ff0\u5176\u4ed6\u975eTCP/IP\u7684\u7f51\u7edc\uff1b", "\n3) OSI\u4e2d\u7f51\u7edc\u5c42\u540c\u65f6\u652f\u6301\u65e0\u8fde\u63a5\u548c\u9762\u5411\u8fde\u63a5\u7684\u901a\u4fe1\uff0c\u4f46\u5728\u4f20\u8f93\u5c42\u4e0a\u53ea\u652f\u6301\u9762\u5411\u8fde\u63a5\u7684\u901a\u4fe1\uff1bTCP/IP\u4e2d\u7f51\u7edc\u5c42\u53ea\u652f\u6301\u65e0\u8fde\u63a5\u901a\u4fe1\uff0c\u4f20\u8f93\u5c42\u540c\u65f6\u652f\u6301\u4e24\u79cd\u901a\u4fe1\uff1b", "\n4) \u5728\u6280\u672f\u53d1\u751f\u53d8\u5316\u65f6\uff0cOSI\u6a21\u578b\u6bd4TCP/IP\u6a21\u578b\u4e2d\u7684\u534f\u8bae\u66f4\u5bb9\u6613\u88ab\u66ff\u6362\u3002", "\n4. \u8bf7\u4f60\u8be6\u7ec6\u7684\u89e3\u91ca\u4e00\u4e0bIP\u534f\u8bae\u7684\u5b9a\u4e49\uff0c\u5728\u54ea\u4e2a\u5c42\u4e0a\u9762\uff0c\u4e3b\u8981\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f TCP\u4e0eUDP\u5462\uff1f", "\n\u89e3\uff1a\u4e0eIP\u534f\u8bae\u914d\u5957\u4f7f\u7528\u7684\u8fd8\u6709\u4e09\u4e2a\u534f\u8bae:", "\nARP-\u5730\u5740\u89e3\u6790\u534f\u8bae", "\nRARP\uff0d\u9006\u5730\u5740\u89e3\u6790\u534f\u8bae", "\nICMP\uff0d\u56e0\u7279\u7f51\u63a7\u5236\u62a5\u6587\u534f\u8baeICMP", "\nIP\u534f\u8bae\uff0d\u7f51\u9645\u534f\u8bae", "\nIP\u5730\u5740\u3001IP\u5305\u5934", "\n2.2 \u4ea4\u6362\u673a\u548c\u8def\u7531\u5668", "\n1. \u8bf7\u95ee\u4ea4\u6362\u673a\u548c\u8def\u7531\u5668\u5206\u522b\u7684\u5b9e\u73b0\u539f\u7406\u662f\u4ec0\u4e48\uff1f\u5206\u522b\u5728\u54ea\u4e2a\u5c42\u6b21\u4e0a\u9762\u5b9e\u73b0\u7684\uff1f", "\n\u5c06\u7f51\u7edc\u4e92\u76f8\u8fde\u63a5\u8d77\u6765\u8981\u4f7f\u7528\u4e00\u4e9b\u4e2d\u95f4\u8bbe\u5907\uff08\u6216\u4e2d\u95f4\u7cfb\u7edf\uff09\uff0c\uff29\uff33\uff2f\u7684\u672f\u8bed\u79f0\u4e4b\u4e3a\u4e2d\u7ee7\uff08relay\uff09\u7cfb\u7edf\u3002\u6839\u636e\u4e2d\u7ee7\u7cfb\u7edf\u6240\u5728\u7684\u5c42\u6b21\uff0c\u53ef\u4ee5\u6709\u4ee5\u4e0b\u4e94\u79cd\u4e2d\u7ee7\u7cfb\u7edf\uff1a", "\n1) \u7269\u7406\u5c42\uff08\u5373\u5e38\u8bf4\u7684\u7b2c\u4e00\u5c42\u3001\u5c42\uff2c1\uff09\u4e2d\u7ee7\u7cfb\u7edf\uff0c\u5373\u8f6c\u53d1\u5668\uff08repeater\uff09\u3002", "\n2) \u6570\u636e\u94fe\u8def\u5c42\uff08\u5373\u7b2c\u4e8c\u5c42\uff0c\u5c42\uff2c2\uff09\uff0c\u5373\u7f51\u6865\u6216\u6865\u63a5\u5668\uff08bridge\uff09\u3002", "\n3) \u7f51\u7edc\u5c42\uff08\u7b2c\u4e09\u5c42\uff0c\u5c42\uff2c3\uff09\u4e2d\u7ee7\u7cfb\u7edf\uff0c\u5373\u8def\u7531\u5668\uff08router\uff09\u3002", "\n4) \u7f51\u6865\u548c\u8def\u7531\u5668\u7684\u6df7\u5408\u7269\u6865\u8def\u5668\uff08brouter\uff09\u517c\u6709\u7f51\u6865\u548c\u8def\u7531\u5668\u7684\u529f\u80fd\u3002", "\n5) \u5728\u7f51\u7edc\u5c42\u4ee5\u4e0a\u7684\u4e2d\u7ee7\u7cfb\u7edf\uff0c\u5373\u7f51\u5173\uff08gateway\uff09.", "\n\u5f53\u4e2d\u7ee7\u7cfb\u7edf\u662f\u8f6c\u53d1\u5668\u65f6\uff0c\u4e00\u822c\u4e0d\u79f0\u4e4b\u4e3a\u7f51\u7edc\u4e92\u8054\uff0c\u56e0\u4e3a\u8fd9\u4ec5\u4ec5\u662f\u628a\u4e00\u4e2a\u7f51\u7edc\u6269\u5927\u4e86\uff0c\u800c\u8fd9\u4ecd\u7136\u662f\u4e00\u4e2a\u7f51\u7edc\u3002\u9ad8\u5c42\u7f51\u5173\u7531\u4e8e\u6bd4\u8f83\u590d\u6742\uff0c\u76ee\u524d\u4f7f\u7528\u5f97\u8f83\u5c11\u3002\u56e0\u6b64\u4e00\u822c\u8ba8\u8bba\u7f51\u7edc\u4e92\u8fde\u65f6\u90fd\u662f\u6307\u7528\u4ea4\u6362\u673a\u548c\u8def\u7531\u5668\u8fdb\u884c\u4e92\u8054\u7684\u7f51\u7edc\u3002\u672c\u6587\u4e3b\u8981\u9610\u8ff0\u4ea4\u6362\u673a\u548c\u8def\u7531\u5668\u53ca\u5176\u533a\u522b\u3002", "\n2. \u7b2c\u4e8c\u5c42\u4ea4\u6362\u673a\u548c\u8def\u7531\u5668\u7684\u533a\u522b\uff1a", "\n\u4f20\u7edf\u4ea4\u6362\u673a\u4ece\u7f51\u6865\u53d1\u5c55\u800c\u6765\uff0c\u5c5e\u4e8e\uff2f\uff33\uff29\u7b2c\u4e8c\u5c42\u5373\u6570\u636e\u94fe\u8def\u5c42\u8bbe\u5907\u3002\u5b83\u6839\u636e\uff2d\uff21\uff23\u5730\u5740\u5bfb\u5740\uff0c\u901a\u8fc7\u7ad9\u8868\u9009\u62e9\u8def\u7531\uff0c\u7ad9\u8868\u7684\u5efa\u7acb\u548c\u7ef4\u62a4\u7531\u4ea4\u6362\u673a\u81ea\u52a8\u8fdb\u884c\u3002\u8def\u7531\u5668\u5c5e\u4e8e\uff2f\uff33\uff29\u7b2c\u4e09\u5c42\u5373\u7f51\u7edc\u5c42\u8bbe\u5907\uff0c\u5b83\u6839\u636e\uff29\uff30\u5730\u5740\u8fdb\u884c\u5bfb\u5740\uff0c\u901a\u8fc7\u8def\u7531\u8868\u8def\u7531\u534f\u8bae\u4ea7\u751f\u3002\u56e0\u7279\u7f51\u7684\u8def\u7531\u9009\u62e9\u534f\u8bae\uff1a\u5185\u90e8\u7f51\u5173\u534f\u8baeIGP\u548c\u5916\u90e8\u7f51\u5173\u534f\u8baeEGP", "\n3. \u7b2c\u4e09\u5c42\u4ea4\u6362\u673a\u548c\u8def\u7531\u5668\u7684\u533a\u522b\uff1a", "\n\u5728\u7b2c\u4e09\u5c42\u4ea4\u6362\u6280\u672f\u51fa\u73b0\u4e4b\u524d\uff0c\u51e0\u4e4e\u6ca1\u6709\u5fc5\u8981\u5c06\u8def\u7531\u529f\u80fd\u5668\u4ef6\u548c\u8def\u7531\u5668\u533a\u522b\u5f00\u6765\uff0c\u4ed6\u4eec\u5b8c\u5168\u662f\u76f8\u540c\u7684\uff1a\u63d0\u4f9b\u8def\u7531\u529f\u80fd\u6b63\u5728\u8def\u7531\u5668\u7684\u5de5\u4f5c\uff0c\u7136\u800c\uff0c\u73b0\u5728\u7b2c\u4e09\u5c42\u4ea4\u6362\u673a\u5b8c\u5168\u80fd\u591f\u6267\u884c\u4f20\u7edf\u8def\u7531\u5668\u7684\u5927\u591a\u6570\u529f\u80fd\u3002", "\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u4ea4\u6362\u673a\u4e00\u822c\u7528\u4e8e\uff2c\uff21\uff2e\uff0d\uff37\uff21\uff2e\u7684\u8fde\u63a5\uff0c\u4ea4\u6362\u673a\u5f52\u4e8e\u7f51\u6865\uff0c\u662f\u6570\u636e\u94fe\u8def\u5c42\u7684\u8bbe\u5907\uff0c\u6709\u4e9b\u4ea4\u6362\u673a\u4e5f\u53ef\u5b9e\u73b0\u7b2c\u4e09\u5c42\u7684\u4ea4\u6362\u3002\u8def\u7531\u5668\u7528\u4e8e\uff37\uff21\uff2e\uff0d\uff37\uff21\uff2e\u4e4b\u95f4\u7684\u8fde\u63a5\uff0c\u53ef\u4ee5\u89e3\u51b3\u5f02\u6027\u7f51\u7edc\u4e4b\u95f4\u8f6c\u53d1\u5206\u7ec4\uff0c\u4f5c\u7528\u4e8e\u7f51\u7edc\u5c42\u3002\u4ed6\u4eec\u53ea\u662f\u4ece\u4e00\u6761\u7ebf\u8def\u4e0a\u63a5\u53d7\u8f93\u5165\u5206\u7ec4\uff0c\u7136\u540e\u5411\u53e6\u4e00\u6761\u7ebf\u8def\u8f6c\u53d1\u3002\u8fd9\u4e24\u6761\u7ebf\u8def\u53ef\u80fd\u5206\u5c5e\u4e8e\u4e0d\u540c\u7684\u7f51\u7edc\uff0c\u5e76\u91c7\u7528\u4e0d\u540c\u534f\u8bae\u3002\u76f8\u6bd4\u8f83\u800c\u8a00\uff0c\u8def\u7531\u5668\u7684\u529f\u80fd\u8f83\u4ea4\u6362\u673a\u8981\u5f3a\u5927\uff0c\u4f46\u901f\u5ea6\u76f8\u5bf9\u4e5f\u6162\uff0c\u4ef7\u683c\u6602\u8d35\uff0c\u7b2c\u4e09\u5c42\u4ea4\u6362\u673a\u65e2\u6709\u4ea4\u6362\u673a\u7ebf\u901f\u8f6c\u53d1\u62a5\u6587\u80fd\u529b\uff0c\u53c8\u6709\u8def\u7531\u5668\u826f\u597d\u7684\u63a7\u5236\u529f\u80fd\uff0c\u56e0\u6b64\u5f97\u4ee5\u5e7f\u64ad\u5e94\u7528\u3002", "\n3 \u9ad8\u8d28\u91cf\u7f16\u7a0bC/C++", "\n\u4e00\u3001\u8bf7\u586b\u5199BOOL , float, \u6307\u9488\u53d8\u91cf\u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\u3002\uff0810 \u5206\uff09", "\n\u8bf7\u5199\u51fa BOOL flag \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\u3002\uff083 \u5206\uff09", "\n\u6807\u51c6\u7b54\u6848\uff1a", "\nif ( flag )", "\nif ( !flag )", "\n\u5982\u4e0b\u5199\u6cd5\u5747\u5c5e\u4e0d\u826f\u98ce\u683c\uff0c\u4e0d\u5f97\u5206\u3002", "\nif (flag == TRUE)", "\nif (flag == 1 )", "\nif (flag == FALSE)", "\nif (flag == 0)", "\u8bf7\u5199\u51fa float x \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\u3002\uff084 \u5206\uff09", "\n\u6807\u51c6\u7b54\u6848\u793a\u4f8b\uff1a", "\nconst float EPSINON = 0.000001;", "\nif ((x >= \u2013 EPSINON) && (x <= EPSINON)", "\n\u4e0d\u53ef\u5c06\u6d6e\u70b9\u53d8\u91cf\u7528\u201c==\u201d\u6216\u201c\uff01=\u201d\u4e0e\u6570\u5b57", "\n\u6bd4\u8f83\uff0c\u5e94\u8be5\u8bbe\u6cd5\u8f6c\u5316\u6210\u201c>=\u201d\u6216\u201c<=\u201d\u6b64", "\n\u7c7b\u5f62\u5f0f\u3002", "\n\u5982\u4e0b\u662f\u9519\u8bef\u7684\u5199\u6cd5\uff0c\u4e0d\u5f97\u5206\u3002", "\nif (x == 0.0)", "\nif (x != 0.0)", "\u8bf7\u5199\u51fa char *p \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684 if \u8bed\u53e5\u3002\uff083 \u5206\uff09", "\n\u6807\u51c6\u7b54\u6848\uff1a", "\nif (p == NULL)", "\nif (p != NULL)", "\n\u5982\u4e0b\u5199\u6cd5\u5747\u5c5e\u4e0d\u826f\u98ce\u683c\uff0c\u4e0d\u5f97\u5206\u3002", "\nif (p == 0)", "\nif (p != 0)", "\nif (p)", "\nif (!)", "\n\u4e8c\u3001\u4ee5\u4e0b\u4e3aWindows NT \u4e0b\u768432 \u4f4dC++\u7a0b\u5e8f\uff0c\u8bf7\u8ba1\u7b97sizeof \u7684\u503c\uff0810 \u5206\uff09", "\nvoid Func ( char str[100])", "\n{", "\n\u8bf7\u8ba1\u7b97", "\nsizeof( str ) = 4 \uff082 \u5206\uff09", "\n}", "\nchar str[] = \u201cHello\u201d ;", "\nchar *p = str ;", "\nint n = 10;", "\n\u8bf7\u8ba1\u7b97", "\nsizeof (str ) = 6 \uff082 \u5206\uff09", "\nsizeof ( p ) = 4 \uff082 \u5206\uff09", "\nsizeof ( n ) = 4 \uff082 \u5206\uff09", "\nvoid *p = malloc( 100 );", "\n\u8bf7\u8ba1\u7b97", "\nsizeof ( p ) = 4 \uff082 \u5206\uff09", "\n\u4e09\u3001\u7b80\u7b54\u9898\uff0825 \u5206\uff09", "\n1\u3001\u5934\u6587\u4ef6\u4e2d\u7684 ifndef/define/endif \u5e72\u4ec0\u4e48\u7528\uff1f\uff085 \u5206\uff09", "\n\u7b54\uff1a\u9632\u6b62\u8be5\u5934\u6587\u4ef6\u88ab\u91cd\u590d\u5f15\u7528\u3002", "2\u3001#include <filename.h> \u548c #include \u201cfilename.h\u201d \u6709\u4ec0\u4e48\u533a\u522b\uff1f\uff085 \u5206\uff09", "\n\u7b54\uff1a\u5bf9\u4e8e#include <filename.h> \uff0c\u7f16\u8bd1\u5668\u4ece\u6807\u51c6\u5e93\u8def\u5f84\u5f00\u59cb\u641c\u7d22 filename.h", "\n\u5bf9\u4e8e#include \u201cfilename.h\u201d \uff0c\u7f16\u8bd1\u5668\u4ece\u7528\u6237\u7684\u5de5\u4f5c\u8def\u5f84\u5f00\u59cb\u641c\u7d22 filename.h", "3\u3001const \u6709\u4ec0\u4e48\u7528\u9014\uff1f\uff08\u8bf7\u81f3\u5c11\u8bf4\u660e\u4e24\u79cd\uff09\uff085 \u5206\uff09", "\n\u7b54\uff1a\uff081\uff09\u53ef\u4ee5\u5b9a\u4e49 const \u5e38\u91cf\uff0c\uff082\uff09const \u53ef\u4ee5\u4fee\u9970\u51fd\u6570\u7684\u53c2\u6570\u3001\u8fd4\u56de\u503c\uff0c\u751a\u81f3\u51fd\u6570\u7684\u5b9a\u4e49\u4f53\u3002\u88abconst \u4fee\u9970\u7684\u4e1c\u897f\u90fd\u53d7\u5230\u5f3a\u5236\u4fdd\u62a4\uff0c\u53ef\u4ee5\u9884\u9632\u610f\u5916\u7684\u53d8\u52a8\uff0c\u80fd\u63d0\u9ad8\u7a0b\u5e8f\u7684\u5065\u58ee\u6027\u3002", "\n4\u3001\u5728C++ \u7a0b\u5e8f\u4e2d\u8c03\u7528\u88ab C \u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u7684\u51fd\u6570\uff0c\u4e3a\u4ec0\u4e48\u8981\u52a0 extern \u201cC\u201d\uff1f \uff085 \u5206\uff09", "\n\u7b54\uff1aC++\u8bed\u8a00\u652f\u6301\u51fd\u6570\u91cd\u8f7d\uff0cC \u8bed\u8a00\u4e0d\u652f\u6301\u51fd\u6570\u91cd\u8f7d\u3002\u51fd\u6570\u88abC++\u7f16\u8bd1\u540e\u5728\u5e93\u4e2d\u7684\u540d\u5b57", "\n\u4e0eC \u8bed\u8a00\u7684\u4e0d\u540c\u3002\u5047\u8bbe\u67d0\u4e2a\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a void foo(int x, int y);\u8be5\u51fd\u6570\u88abC \u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u5728\u5e93\u4e2d\u7684\u540d\u5b57\u4e3a_foo \uff0c \u800cC++\u7f16\u8bd1\u5668\u5219\u4f1a\u4ea7\u751f\u50cf_foo_int_int \u4e4b\u7c7b\u7684\u540d\u5b57\u3002C++\u63d0\u4f9b\u4e86C \u8fde\u63a5\u4ea4\u6362\u6307\u5b9a\u7b26\u53f7extern\u201cC\u201d\u6765\u89e3\u51b3\u540d\u5b57\u5339\u914d\u95ee\u9898\u3002", "\n5\u3001\u8bf7\u7b80\u8ff0\u4ee5\u4e0b\u4e24\u4e2afor \u5faa\u73af\u7684\u4f18\u7f3a\u70b9\uff085 \u5206\uff09", "\nfor (i=0; i<N; i++)", "\n{", "\nif (condition)", "\nDoSomething();", "\nelse", "\nDoOtherthing();", "\n}", "\nif (condition)", "\n{", "\nfor (i=0; i<N; i++)", "\nDoSomething();", "\n}", "\nelse", "\n{", "\nfor (i=0; i<N; i++)", "\nDoOtherthing();", "\n}", "\n\u4f18\u70b9\uff1a\u7a0b\u5e8f\u7b80\u6d01", "\n\u7f3a\u70b9\uff1a\u591a\u6267\u884c\u4e86N-1 \u6b21\u903b\u8f91\u5224\u65ad\uff0c\u5e76\u4e14", "\n\u6253\u65ad\u4e86\u5faa\u73af\u201c\u6d41\u6c34\u7ebf\u201d\u4f5c\u4e1a\uff0c\u4f7f\u5f97\u7f16\u8bd1", "\n\u5668\u4e0d\u80fd\u5bf9\u5faa\u73af\u8fdb\u884c\u4f18\u5316\u5904\u7406\uff0c\u964d\u4f4e\u4e86\u6548", "\n\u7387\u3002", "\n\u4f18\u70b9\uff1a\u5faa\u73af\u7684\u6548\u7387\u9ad8", "\n\u7f3a\u70b9\uff1a\u7a0b\u5e8f\u4e0d\u7b80\u6d01", "\n\u56db\u3001\u6709\u5173\u5185\u5b58\u7684\u601d\u8003\u9898\uff08\u6bcf\u5c0f\u98985 \u5206\uff0c\u517120 \u5206\uff09", "\nvoid GetMemory(char *p)", "\n{", "\np = (char *)malloc(100);", "\n}", "\nvoid Test(void)", "\n{", "\nchar *str = NULL;", "\nGetMemory(str);", "\nstrcpy(str, \u201chello world\u201d);", "\nprintf(str);", "\n}", "\n\u8bf7\u95ee\u8fd0\u884cTest \u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n\u7b54\uff1a\u7a0b\u5e8f\u5d29\u6e83\u3002", "\n\u56e0\u4e3aGetMemory \u5e76\u4e0d\u80fd\u4f20\u9012\u52a8\u6001\u5185\u5b58\uff0c", "\nTest \u51fd\u6570\u4e2d\u7684 str \u4e00\u76f4\u90fd\u662f NULL\u3002", "\nstrcpy(str, \u201chello world\u201d);\u5c06\u4f7f\u7a0b\u5e8f\u5d29", "\n\u6e83\u3002", "\nchar *GetMemory(void)", "\n{", "\nchar p[] = \u201chello world\u201d;", "\nreturn p;", "\n}", "\nvoid Test(void)", "\n{", "\nchar *str = NULL;", "\nstr = GetMemory();", "\nprintf(str);", "\n}", "\n\u8bf7\u95ee\u8fd0\u884cTest \u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n\u7b54\uff1a\u53ef\u80fd\u662f\u4e71\u7801\u3002", "\n\u56e0\u4e3aGetMemory \u8fd4\u56de\u7684\u662f\u6307\u5411\u201c\u6808\u5185\u5b58\u201d", "\n\u7684\u6307\u9488\uff0c\u8be5\u6307\u9488\u7684\u5730\u5740\u4e0d\u662f NULL\uff0c\u4f46\u5176\u539f", "\n\u73b0\u7684\u5185\u5bb9\u5df2\u7ecf\u88ab\u6e05\u9664\uff0c\u65b0\u5185\u5bb9\u4e0d\u53ef\u77e5\u3002", "\nvoid GetMemory2(char **p, int num)", "\n{", "\n*p = (char *)malloc(num);", "\n}", "\nvoid Test(void)", "\n{", "\nchar *str = NULL;", "\nGetMemory(&str, 100);", "\nstrcpy(str, \u201chello\u201d);", "\nprintf(str);", "\n}", "\n\u8bf7\u95ee\u8fd0\u884cTest \u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n\u7b54\uff1a\uff081\uff09\u80fd\u591f\u8f93\u51fahello\uff1b\uff082\uff09\u5185\u5b58\u6cc4\u6f0f", "void Test(void)", "\n{", "\nchar *str = (char *) malloc(100);", "\nstrcpy(str, \u201chello\u201d);", "\nfree(str);", "\nif(str != NULL)", "\n{", "\nstrcpy(str, \u201cworld\u201d);", "\nprintf(str);", "\n}", "\n}", "\n\u8bf7\u95ee\u8fd0\u884cTest \u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n\u7b54\uff1a\u7be1\u6539\u52a8\u6001\u5185\u5b58\u533a\u7684\u5185\u5bb9\uff0c\u540e\u679c\u96be\u4ee5\u9884", "\n\u6599\uff0c\u975e\u5e38\u5371\u9669\u3002", "\n\u56e0\u4e3afree(str);\u4e4b\u540e\uff0cstr \u6210\u4e3a\u91ce\u6307\u9488\uff0c", "\nif(str != NULL)\u8bed\u53e5\u4e0d\u8d77\u4f5c\u7528\u3002", "\n\u4e94\u3001\u7f16\u5199strcpy \u51fd\u6570\uff0810 \u5206\uff09", "\n\u5df2\u77e5strcpy \u51fd\u6570\u7684\u539f\u578b\u662f", "\nchar *strcpy(char *strDest, const char *strSrc);", "\n\u5176\u4e2dstrDest \u662f\u76ee\u7684\u5b57\u7b26\u4e32\uff0cstrSrc \u662f\u6e90\u5b57\u7b26\u4e32\u3002", "\n\uff081\uff09\u4e0d\u8c03\u7528C++/C \u7684\u5b57\u7b26\u4e32\u5e93\u51fd\u6570\uff0c\u8bf7\u7f16\u5199\u51fd\u6570 strcpy", "\nchar *strcpy(char *strDest, const char *strSrc);", "\n{", "\nassert((strDest!=NULL) && (strSrc !=NULL)); // 2\u5206", "\nchar *address = strDest; // 2\u5206", "\nwhile( (*strDest++ = * strSrc++) != \u2018\\0\u2019 ) // 2\u5206", "\nNULL ;", "\nreturn address ; // 2\u5206", "\n}", "\n\uff082\uff09strcpy \u80fd\u628astrSrc \u7684\u5185\u5bb9\u590d\u5236\u5230strDest\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u8981char * \u7c7b\u578b\u7684\u8fd4\u56de\u503c\uff1f", "\n\u7b54\uff1a\u4e3a\u4e86\u5b9e\u73b0\u94fe\u5f0f\u8868\u8fbe\u5f0f\u3002 // 2 \u5206", "\n\u4f8b\u5982 int length = strlen( strcpy( strDest, \u201chello world\u201d) );", "\n\u516d\u3001\u7f16\u5199\u7c7bString \u7684\u6784\u9020\u51fd\u6570\u3001\u6790\u6784\u51fd\u6570\u548c\u8d4b\u503c\u51fd\u6570\uff0825 \u5206\uff09", "\n\u5df2\u77e5\u7c7bString \u7684\u539f\u578b\u4e3a\uff1a", "\nclass String", "\n{", "\npublic:", "\nString(const char *str = NULL); // \u666e\u901a\u6784\u9020\u51fd\u6570", "\nString(const String &other); // \u62f7\u8d1d\u6784\u9020\u51fd\u6570", "\n~ String(void); // \u6790\u6784\u51fd\u6570", "\nString & operate =(const String &other); // \u8d4b\u503c\u51fd\u6570", "\nprivate:", "\nchar *m_data; // \u7528\u4e8e\u4fdd\u5b58\u5b57\u7b26\u4e32", "\n};", "\n\u8bf7\u7f16\u5199String \u7684\u4e0a\u8ff04 \u4e2a\u51fd\u6570\u3002", "\n\u6807\u51c6\u7b54\u6848\uff1a", "\n// String \u7684\u6790\u6784\u51fd\u6570", "\nString::~String(void) // 3 \u5206", "\n{", "\ndelete [] m_data;", "\n// \u7531\u4e8em_data \u662f\u5185\u90e8\u6570\u636e\u7c7b\u578b\uff0c\u4e5f\u53ef\u4ee5\u5199\u6210 delete m_data;", "\n}", "// String \u7684\u666e\u901a\u6784\u9020\u51fd\u6570", "\nString::String(const char *str) // 6 \u5206", "\n{", "\nif(str==NULL)", "\n{", "\nm_data = new char[1]; // \u82e5\u80fd\u52a0 NULL \u5224\u65ad\u5219\u66f4\u597d", "\n*m_data = \u2018\\0\u2019;", "\n}", "\nelse", "\n{", "\nint length = strlen(str);", "\nm_data = new char[length+1]; // \u82e5\u80fd\u52a0 NULL \u5224\u65ad\u5219\u66f4\u597d", "\nstrcpy(m_data, str);", "\n}", "\n}", "// \u62f7\u8d1d\u6784\u9020\u51fd\u6570", "\nString::String(const String &other) // 3 \u5206", "\n{", "\nint length = strlen(other.m_data);", "\nm_data = new char[length+1]; // \u82e5\u80fd\u52a0 NULL \u5224\u65ad\u5219\u66f4\u597d", "\nstrcpy(m_data, other.m_data);", "\n}", "// \u8d4b\u503c\u51fd\u6570", "\nString & String::operate =(const String &other) // 13 \u5206", "\n{", "\n// (1) \u68c0\u67e5\u81ea\u8d4b\u503c // 4 \u5206", "\nif(this == &other)", "\nreturn *this;", "\n// (2) \u91ca\u653e\u539f\u6709\u7684\u5185\u5b58\u8d44\u6e90 // 3 \u5206", "\ndelete [] m_data;", "\n// \uff083\uff09\u5206\u914d\u65b0\u7684\u5185\u5b58\u8d44\u6e90\uff0c\u5e76\u590d\u5236\u5185\u5bb9 // 3 \u5206", "\nint length = strlen(other.m_data);", "\nm_data = new char[length+1]; // \u82e5\u80fd\u52a0 NULL \u5224\u65ad\u5219\u66f4\u597d", "\nstrcpy(m_data, other.m_data);", "\n// \uff084\uff09\u8fd4\u56de\u672c\u5bf9\u8c61\u7684\u5f15\u7528 // 3 \u5206", "\nreturn *this;", "\n}"], "title": "C,C++\u7ecf\u5178\u95ee\u9898\uff0c\u53ca\u9762\u8bd5\u7b14\u8bd5\u9898"},
{"contents": ["C\u8bed\u8a00\u9762\u8bd5\u9898\u5927\u6c47\u603b", "\n4. static\u6709\u4ec0\u4e48\u7528\u9014\uff1f\uff08\u8bf7\u81f3\u5c11\u8bf4\u660e\u4e24\u79cd\uff09", "\n1.\u9650\u5236\u53d8\u91cf\u7684\u4f5c\u7528\u57df(DL:\u4f7f\u5176\u53ea\u5728\u5b9a\u4e49\u7684\u5f53\u524d\u6587\u4ef6\u4e2d\u8d77\u4f5c\u7528\uff0cstatic\u662f\u53ea\u80fd\u7531\u4e0e\u53d8\u91cf\u5728\u540c\u4e00\u4e2a\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u7a0b\u5e8f", "\n\u5b58\u53d6\u7684\u5168\u5c40\u53d8\u91cf\u3002\u4e5f\u5c31\u662f\u8bf4\u4f7f\u5168\u5c40\u53d8\u91cf\u6210\u4e3a\u6587\u4ef6\u7684\u79c1\u6709\u53d8\u91cf\uff0c\u4ee5\u81f4\u5176\u4ed6\u6587\u4ef6\u4e0d\u53ef\u4ee5\u901a\u8fc7\u5c06\u5b83\u4eec\u5b9a\u4e49\u4e3aextern\u800c\u5b58", "\n\u53d6\u8fd9\u4e9b\u53d8\u91cf\u3002)", "\n2.\u8bbe\u7f6e\u53d8\u91cf\u7684\u5b58\u50a8\u57df\uff08DL\uff1a\u5b58\u50a8\u5728\u6700\u5f00\u59cb\u7684\u9759\u6001\u5b58\u50a8\u7a7a\u95f4\u91cc\u9762\uff09", "\n7. \u5f15\u7528\u4e0e\u6307\u9488\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n1) \u5f15\u7528\u5fc5\u987b\u88ab\u521d\u59cb\u5316\uff0c\u6307\u9488\u4e0d\u5fc5\u3002", "\n2) \u5f15\u7528\u521d\u59cb\u5316\u4ee5\u540e\u4e0d\u80fd\u88ab\u6539\u53d8\uff0c\u6307\u9488\u53ef\u4ee5\u6539\u53d8\u6240\u6307\u7684\u5bf9\u8c61\u3002", "\n2) \u4e0d\u5b58\u5728\u6307\u5411\u7a7a\u503c\u7684\u5f15\u7528\uff0c\u4f46\u662f\u5b58\u5728\u6307\u5411\u7a7a\u503c\u7684\u6307\u9488\u3002", "8. \u63cf\u8ff0\u5b9e\u65f6\u7cfb\u7edf\u7684\u57fa\u672c\u7279\u6027", "\n\u5728\u7279\u5b9a\u65f6\u95f4\u5185\u5b8c\u6210\u7279\u5b9a\u7684\u4efb\u52a1\uff0c\u5b9e\u65f6\u6027\u4e0e\u53ef\u9760\u6027", "\n9. \u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u5728\u5185\u5b58\u4e2d\u662f\u5426\u6709\u533a\u522b\uff1f\u5982\u679c\u6709\uff0c\u662f\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u5168\u5c40\u53d8\u91cf\u50a8\u5b58\u5728\u9759\u6001\u6570\u636e\u5e93\uff0c\u5c40\u90e8\u53d8\u91cf\u5728\u5806\u6808", "\n10. \u4ec0\u4e48\u662f\u5e73\u8861\u4e8c\u53c9\u6811\uff1f", "\n\u5de6\u53f3\u5b50\u6811\u90fd\u662f\u5e73\u8861\u4e8c\u53c9\u6811 \u4e14\u5de6\u53f3\u5b50\u6811\u7684\u6df1\u5ea6\u5dee\u503c\u7684\u7edd\u5bf9\u503c\u4e0d\u5927\u4e8e1", "\n11. \u5806\u6808\u6ea2\u51fa\u4e00\u822c\u662f\u7531\u4ec0\u4e48\u539f\u56e0\u5bfc\u81f4\u7684\uff1f", "\n\u6ca1\u6709\u56de\u6536\u5783\u573e\u8d44\u6e90", "\n12. \u4ec0\u4e48\u51fd\u6570\u4e0d\u80fd\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff1f", "\nconstructor", "\n13. \u5192\u6ce1\u6392\u5e8f\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u4ec0\u4e48\uff1f", "\nO(n^2)", "\n14. \u5199\u51fafloat x \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684if\u8bed\u53e5\u3002", "\nif(x>0.000001&&x\n16. Internet\u91c7\u7528\u54ea\u79cd\u7f51\u7edc\u534f\u8bae\uff1f\u8be5\u534f\u8bae\u7684\u4e3b\u8981\u5c42\u6b21\u7ed3\u6784\uff1f", "\ntcp/ip \u5e94\u7528\u5c42/\u4f20\u8f93\u5c42/\u7f51\u7edc\u5c42/\u6570\u636e\u94fe\u8def\u5c42/\u7269\u7406\u5c42", "\n17. Internet\u7269\u7406\u5730\u5740\u548cIP\u5730\u5740\u8f6c\u6362\u91c7\u7528\u4ec0\u4e48\u534f\u8bae\uff1f", "\nARP (Address Resolution Protocol)\uff08\u5730\u5740\u89e3\u6790\u5354\u8b70\uff09", "\n18.IP\u5730\u5740\u7684\u7f16\u7801\u5206\u4e3a\u54ea\u4fe9\u90e8\u5206\uff1f", "\nIP\u5730\u5740\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff0c\u7f51\u7edc\u53f7\u548c\u4e3b\u673a\u53f7\u3002\u4e0d\u8fc7\u662f\u8981\u548c\u201c\u5b50\u7f51\u63a9\u7801\u201d\u6309\u4f4d\u4e0e\u4e0a\u4e4b\u540e\u624d\u80fd\u533a\u5206", "\n\u54ea\u4e9b\u662f\u7f51\u7edc\u4f4d\u54ea\u4e9b\u662f\u4e3b\u673a\u4f4d\u3002", "2.\u7528\u6237\u8f93\u5165M,N\u503c\uff0c\u4ece1\u81f3N\u5f00\u59cb\u987a\u5e8f\u5faa\u73af\u6570\u6570\uff0c\u6bcf\u6570\u5230M\u8f93\u51fa\u8be5\u6570\u503c\uff0c\u76f4\u81f3\u5168\u90e8\u8f93\u51fa\u3002\u5199\u51fa", "\nC\u7a0b\u5e8f\u3002", "\n\u5faa\u73af\u94fe\u8868\uff0c\u7528\u53d6\u4f59\u64cd\u4f5c\u505a", "\n3.\u4e0d\u80fd\u505aswitch()\u7684\u53c2\u6570\u7c7b\u578b\u662f\uff1a", "\nswitch\u7684\u53c2\u6570\u4e0d\u80fd\u4e3a\u5b9e\u578b\u3002", "\u83ef\u70ba", "\n1\u3001\u5c40\u90e8\u53d8\u91cf\u80fd\u5426\u548c\u5168\u5c40\u53d8\u91cf\u91cd\u540d\uff1f", "\n\u7b54\uff1a\u80fd\uff0c\u5c40\u90e8\u4f1a\u5c4f\u853d\u5168\u5c40\u3002\u8981\u7528\u5168\u5c40\u53d8\u91cf\uff0c\u9700\u8981\u4f7f\u7528\"::\"", "\n\u5c40\u90e8\u53d8\u91cf\u53ef\u4ee5\u4e0e\u5168\u5c40\u53d8\u91cf\u540c\u540d\uff0c\u5728\u51fd\u6570\u5185\u5f15\u7528\u8fd9\u4e2a\u53d8\u91cf\u65f6\uff0c\u4f1a\u7528\u5230\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u800c\u4e0d", "\n\u4f1a\u7528\u5230\u5168\u5c40\u53d8\u91cf\u3002\u5bf9\u4e8e\u6709\u4e9b\u7f16\u8bd1\u5668\u800c\u8a00\uff0c\u5728\u540c\u4e00\u4e2a\u51fd\u6570\u5185\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c", "\n\u6bd4\u5982\u5728\u4e24\u4e2a\u5faa\u73af\u4f53\u5185\u90fd\u5b9a\u4e49\u4e00\u4e2a\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u800c\u90a3\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u5c31\u5728\u90a3\u4e2a\u5faa\u73af", "\n\u4f53\u5185", "\n2\u3001\u5982\u4f55\u5f15\u7528\u4e00\u4e2a\u5df2\u7ecf\u5b9a\u4e49\u8fc7\u7684\u5168\u5c40\u53d8\u91cf\uff1f", "\n\u7b54\uff1aextern(\u5728\u4f7f\u7528\u8be5\u53d8\u91cf\u7684\u5730\u65b9\u8fd8\u8981\u5b9a\u4e49\u4e00\u6b21\uff0cextern\u53ea\u76f8\u5f53\u4e8e\u58f0\u660e\uff0c\u4e14\u53ea\u80fd\u5728\u51fd\u6570\u4f53\u5916\u5b9a\u4e49)/", "\n    static(\u5728\u4f7f\u7528\u65f6\u4e0d\u7528\u5b9a\u4e49\uff0c\u4e14\u4f5c\u7528\u57df\u9650\u5236\u5728\u5f53\u524d\u6e90\u6587\u4ef6\uff0c\u4e14\u53ea\u80fd\u5728\u51fd\u6570\u4f53\u5185\u91cd\u65b0\u8d4b\u503c)", "\n\u53ef\u4ee5\u7528\u5f15\u7528\u5934\u6587\u4ef6\u7684\u65b9\u5f0f\uff08\u5fc5\u987b\u7528static\u58f0\u660e\uff09\uff0c\u4e5f\u53ef\u4ee5\u7528extern\u5173\u952e\u5b57\uff0c\u5982\u679c\u7528\u5f15\u7528\u5934\u6587\u4ef6\u65b9\u5f0f\u6765\u5f15\u7528\u67d0\u4e2a\u5728", "\n\u5934\u6587\u4ef6\u4e2d\u58f0\u660e\u7684\u5168\u5c40\u53d8\u7406\uff0c\u5047\u5b9a\u4f60\u5c06\u90a3\u4e2a\u53d8\u5199\u9519\u4e86\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4\u4f1a\u62a5\u9519\uff0c\u5982\u679c\u4f60\u7528ex", "\ntern\u65b9\u5f0f\u5f15\u7528\u65f6\uff0c\u5047\u5b9a\u4f60\u72af\u4e86\u540c\u6837\u7684\u9519\u8bef\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4\u4e0d\u4f1a\u62a5\u9519\uff0c\u800c\u5728\u8fde\u63a5\u671f\u95f4\u62a5\u9519", "3\u3001\u5168\u5c40\u53d8\u91cf\u53ef\u4e0d\u53ef\u4ee5\u5b9a\u4e49\u5728\u53ef\u88ab\u591a\u4e2a.C\u6587\u4ef6\u5305\u542b\u7684\u5934\u6587\u4ef6\u4e2d\uff1f\u4e3a\u4ec0\u4e48\uff1f", "\n\u7b54\uff1a\u53ef\u4ee5\uff0c\u5728\u4e0d\u540c\u7684C\u6587\u4ef6\u4e2d\u4ee5static\u5f62\u5f0f\u6765\u58f0\u660e\u540c\u540d\u5168\u5c40\u53d8\u91cf\u3002", "\n\u53ef\u4ee5\u5728\u4e0d\u540c\u7684C\u6587\u4ef6\u4e2d\u58f0\u660e\u540c\u540d\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u524d\u63d0\u662f\u5176\u4e2d\u53ea\u80fd\u6709\u4e00\u4e2aC\u6587\u4ef6\u4e2d\u5bf9\u6b64\u53d8\u91cf\u8d4b\u521d", "\n\u503c\uff0c\u6b64\u65f6\u8fde\u63a5\u4e0d\u4f1a\u51fa\u9519", "\n4\u3001\u8bed\u53e5for( \uff1b1 \uff1b)\u6709\u4ec0\u4e48\u95ee\u9898\uff1f\u5b83\u662f\u4ec0\u4e48\u610f\u601d\uff1f", "\n\u7b54\uff1a\u548cwhile(1)\u76f8\u540c\u3002", "\n5\u3001do\u2026\u2026while\u548cwhile\u2026\u2026do\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u7b54\uff1a\u524d\u4e00\u4e2a\u5faa\u73af\u4e00\u904d\u518d\u5224\u65ad\uff0c\u540e\u4e00\u4e2a\u5224\u65ad\u4ee5\u540e\u518d\u5faa\u73af", "\n6\u3001\u8bf7\u5199\u51fa\u4e0b\u5217\u4ee3\u7801\u7684\u8f93\u51fa\u5185\u5bb9", "\n#include", "1\u3001static\u5168\u5c40\u53d8\u91cf\u4e0e\u666e\u901a\u7684\u5168\u5c40\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1fstatic\u5c40\u90e8\u53d8\u91cf\u548c\u666e\u901a\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48", "\n\u533a\u522b\uff1fstatic\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u5168\u5c40\u53d8\u91cf(\u5916\u90e8\u53d8\u91cf)\u7684\u8bf4\u660e\u4e4b\u524d\u518d\u51a0\u4ee5static \u5c31\u6784\u6210\u4e86\u9759\u6001\u7684\u5168\u5c40\u53d8\u91cf\u3002\u5168\u5c40\u53d8\u91cf\u672c\u8eab\u5c31", "\n\u662f\u9759\u6001\u5b58\u50a8\u65b9\u5f0f\uff0c \u9759\u6001\u5168\u5c40\u53d8\u91cf\u5f53\u7136\u4e5f\u662f\u9759\u6001\u5b58\u50a8\u65b9\u5f0f\u3002 \u8fd9\u4e24\u8005\u5728\u5b58\u50a8\u65b9\u5f0f\u4e0a\u5e76\u65e0\u4e0d\u540c", "\n\u3002\u8fd9\u4e24\u8005\u7684\u533a\u522b\u867d\u5728\u4e8e\u975e\u9759\u6001\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u662f\u6574\u4e2a\u6e90\u7a0b\u5e8f\uff0c \u5f53\u4e00\u4e2a\u6e90\u7a0b\u5e8f\u7531\u591a\u4e2a\u6e90\u6587", "\n\u4ef6\u7ec4\u6210\u65f6\uff0c\u975e\u9759\u6001\u7684\u5168\u5c40\u53d8\u91cf\u5728\u5404\u4e2a\u6e90\u6587\u4ef6\u4e2d\u90fd\u662f\u6709\u6548\u7684\u3002 \u800c\u9759\u6001\u5168\u5c40\u53d8\u91cf\u5219\u9650\u5236\u4e86\u5176\u4f5c", "\n\u7528\u57df\uff0c \u5373\u53ea\u5728\u5b9a\u4e49\u8be5\u53d8\u91cf\u7684\u6e90\u6587\u4ef6\u5185\u6709\u6548\uff0c \u5728\u540c\u4e00\u6e90\u7a0b\u5e8f\u7684\u5176\u5b83\u6e90\u6587\u4ef6\u4e2d\u4e0d\u80fd\u4f7f\u7528\u5b83\u3002", "\n\u7531\u4e8e\u9759\u6001\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u5c40\u9650\u4e8e\u4e00\u4e2a\u6e90\u6587\u4ef6\u5185\uff0c\u53ea\u80fd\u4e3a\u8be5\u6e90\u6587\u4ef6\u5185\u7684\u51fd\u6570\u516c\u7528\uff0c \u56e0\u6b64\u53ef", "\n\u4ee5\u907f\u514d\u5728\u5176\u5b83\u6e90\u6587\u4ef6\u4e2d\u5f15\u8d77\u9519\u8bef\u3002", "\n\u4ece\u4ee5\u4e0a\u5206\u6790\u53ef\u4ee5\u770b\u51fa\uff0c \u628a\u5c40\u90e8\u53d8\u91cf\u6539\u53d8\u4e3a\u9759\u6001\u53d8\u91cf\u540e\u662f\u6539\u53d8\u4e86\u5b83\u7684\u5b58\u50a8\u65b9\u5f0f\u5373\u6539\u53d8\u4e86\u5b83\u7684", "\n\u751f\u5b58\u671f\uff08\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u5728\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u675f\u91ca\u653e\u7a7a\u95f4\uff0c\u800c\u666e\u901a\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u5728\u51fd\u6570\u9000\u51fa\u65f6\u91ca\u653e\u7a7a\u95f4\uff09\u3002", "\n\u628a\u5168\u5c40\u53d8\u91cf\u6539\u53d8\u4e3a\u9759\u6001\u53d8\u91cf\u540e\u662f\u6539\u53d8\u4e86\u5b83\u7684\u4f5c\u7528\u57df\uff0c \u9650\u5236\u4e86\u5b83\u7684\u4f7f\u7528\u8303\u56f4\u3002", "\nstatic\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u4f5c\u7528\u57df\u4e0d\u540c\u3002\u4ec5\u5728\u672c\u6587\u4ef6\u3002\u53ea\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4e2d\u4f7f\u7528\u7684\u51fd\u6570\u5e94\u8be5\u8bf4\u660e", "\n\u4e3a\u5185\u90e8\u51fd\u6570(static)\uff0c\u5185\u90e8\u51fd\u6570\u5e94\u8be5\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4e2d\u8bf4\u660e\u548c\u5b9a\u4e49\u3002\u5bf9\u4e8e\u53ef\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4ee5", "\n\u5916\u4f7f\u7528\u7684\u51fd\u6570\uff0c\u5e94\u8be5\u5728\u4e00\u4e2a\u5934\u6587\u4ef6\u4e2d\u8bf4\u660e\uff0c\u8981\u4f7f\u7528\u8fd9\u4e9b\u51fd\u6570\u7684\u6e90\u6587\u4ef6\u8981\u5305\u542b\u8fd9\u4e2a\u5934\u6587\u4ef6", "\n\uff08\u7528static\u58f0\u660e\u7684\u5373\u5185\u90e8\u51fd\u6570\uff0c\u5185\u90e8\u51fd\u6570\u6307\u53ea\u80fd\u88ab\u672c\u6587\u4ef6\u7684\u5176\u4ed6\u51fd\u6570\u6240\u8c03\u7528\u7684\u51fd\u6570\uff0c", "\n\u5185\u90e8\u51fd\u6570\u5728C++\u5b9e\u9645\u4e0a\u53ef\u4ee5\u901a\u8fc7\u7c7b\u540d\u4fee\u9970\u7b26\u8bbf\u95ee", "\n\u5176\u4ed6\u5747\u4e3a\u5916\u90e8\u51fd\u6570\uff09", "static\u5168\u5c40\u53d8\u91cf\u4e0e\u666e\u901a\u7684\u5168\u5c40\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u5168\u5c40\u53d8\u91cf\u53ea\u521d\u4f7f\u5316\u4e00\u6b21\uff0c\u9632\u6b62\u5728\u5176", "\n\u4ed6\u6587\u4ef6\u5355\u5143\u4e2d\u88ab\u5f15\u7528;", "\nstatic\u5c40\u90e8\u53d8\u91cf\u548c\u666e\u901a\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u5c40\u90e8\u53d8\u91cf\u53ea\u88ab\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u4e0b\u4e00\u6b21\u4f9d", "\n\u636e\u4e0a\u4e00\u6b21\u7ed3\u679c\u503c\uff1b", "\nstatic\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u51fd\u6570\u5728\u5185\u5b58\u4e2d\u53ea\u6709\u4e00\u4efd\uff0c\u666e\u901a\u51fd\u6570\u5728\u6bcf\u4e2a\u88ab\u8c03", "\n\u7528\u4e2d\u7ef4\u6301\u4e00\u4efd\u62f7\u8d1d", "\n2\u3001\u7a0b\u5e8f\u7684\u5c40\u90e8\u53d8\u91cf\u5b58\u5728\u4e8e\uff08\u5806\u6808\uff09\u4e2d\uff0c\u5168\u5c40\u53d8\u91cf\u5b58\u5728\u4e8e\uff08\u9759\u6001\u533a \uff09\u4e2d\uff0c\u52a8\u6001\u7533\u8bf7\u6570\u636e\u5b58", "\n\u5728\u4e8e\uff08 \u5806\uff09\u4e2d\u3002", "\n3\u3001\u8bbe\u6709\u4ee5\u4e0b\u8bf4\u660e\u548c\u5b9a\u4e49\uff1a", "\ntypedef union {long i; int k[5]; char c;} DATE;", "\nstruct data { int cat; DATE cow; double dog;} too;", "\nDATE max;", "\n\u5219\u8bed\u53e5 printf(\u201c%d\u201d,sizeof(struct date)+sizeof(max));\u7684\u6267\u884c\u7ed3\u679c\u662f\uff1a___52____", "\n\u7b54\uff1aDATE\u662f\u4e00\u4e2aunion, \u53d8\u91cf\u516c\u7528\u7a7a\u95f4. \u91cc\u9762\u6700\u5927\u7684\u53d8\u91cf\u7c7b\u578b\u662fint[5], \u5360\u752820\u4e2a\u5b57\u8282. \u6240", "\n\u4ee5\u5b83\u7684\u5927\u5c0f\u662f20", "\ndata\u662f\u4e00\u4e2astruct, \u6bcf\u4e2a\u53d8\u91cf\u5206\u5f00\u5360\u7528\u7a7a\u95f4. \u4f9d\u6b21\u4e3aint4 + DATE20 + double8 = 32.", "\n\u6240\u4ee5\u7ed3\u679c\u662f 20 + 32 = 52.", "\n\u5f53\u7136\u2026\u5728\u67d0\u4e9b16\u4f4d\u7f16\u8f91\u5668\u4e0b, int\u53ef\u80fd\u662f2\u5b57\u8282,\u90a3\u4e48\u7ed3\u679c\u662f int2 + DATE10 + double8 =", "\n 20", "\n4\u3001\u961f\u5217\u548c\u6808\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u961f\u5217\u5148\u8fdb\u5148\u51fa\uff0c\u6808\u540e\u8fdb\u5148\u51fa", "\n5\u3001\u5199\u51fa\u4e0b\u5217\u4ee3\u7801\u7684\u8f93\u51fa\u5185\u5bb9", "\n#include", "void show(FUNC2 fun,int arg1, int*arg2)", "\n{", "\nINCp=&inc;", "\nint temp =p(arg1);", "\nfun(&temp,&arg1, arg2);", "\nprintf(\u201c%d\\n\u201d,*arg2);", "\n}", "main()", "\n{", "\nint a;", "\nshow(multi,10,&a);", "\nreturn 0;", "\n}", "\n\u7b54\uff1a110", "\n7\u3001\u8bf7\u627e\u51fa\u4e0b\u9762\u4ee3\u7801\u4e2d\u7684\u6240\u4ee5\u9519\u8bef", "\n\u8bf4\u660e\uff1a\u4ee5\u4e0b\u4ee3\u7801\u662f\u628a\u4e00\u4e2a\u5b57\u7b26\u4e32\u5012\u5e8f\uff0c\u5982\u201cabcd\u201d\u5012\u5e8f\u540e\u53d8\u4e3a\u201cdcba\u201d", "1\u3001#include\u201dstring.h\u201d", "\n2\u3001main()", "\n3\u3001{", "\n4\u3001 char*src=\u201dhello,world\u201d;", "\n5\u3001 char* dest=NULL;", "\n6\u3001 int len=strlen(src);", "\n7\u3001 dest=(char*)malloc(len);", "\n8\u3001 char* d=dest;", "\n9\u3001 char* s=src[len];", "\n10\u3001 while(len\u2013!=0)", "\n11\u3001 d++=s\u2013;", "\n12\u3001 printf(\u201c%s\u201d,dest);", "\n13\u3001 return 0;", "\n14\u3001}", "\n\u7b54\uff1a", "\n\u65b9\u6cd51\uff1a", "\nint main(){", "\nchar* src = \u201chello,world\u201d;", "\nint len = strlen(src);", "\nchar* dest = (char*)malloc(len+1);//\u8981\u4e3a\\0\u5206\u914d\u4e00\u4e2a\u7a7a\u95f4", "\nchar* d = dest;", "\nchar* s = &src[len-1];//\u6307\u5411\u6700\u540e\u4e00\u4e2a\u5b57\u7b26", "\nwhile( len\u2013 != 0 )", "\n*d++=*s\u2013;", "\n*d = 0;//\u5c3e\u90e8\u8981\u52a0\\0", "\nprintf(\u201c%s\\n\u201d,dest);", "\nfree(dest);// \u4f7f\u7528\u5b8c\uff0c\u5e94\u5f53\u91ca\u653e\u7a7a\u95f4\uff0c\u4ee5\u514d\u9020\u6210\u5185\u5b58\u6c47\u6cc4\u9732", "\nreturn 0;", "\n}", "\n\u65b9\u6cd52\uff1a", "\n#include ", "\u5165\u961f:", "\n\u5c06\u65b0\u5143\u7d20push\u5165\u6808A;", "\u51fa\u961f:", "\n(1)\u5224\u65ad\u6808B\u662f\u5426\u4e3a\u7a7a\uff1b", "\n(2)\u5982\u679c\u4e0d\u4e3a\u7a7a\uff0c\u5219\u5c06\u6808A\u4e2d\u6240\u6709\u5143\u7d20\u4f9d\u6b21pop\u51fa\u5e76push\u5230\u6808B\uff1b", "\n(3)\u5c06\u6808B\u7684\u6808\u9876\u5143\u7d20pop\u51fa\uff1b", "\u8fd9\u6837\u5b9e\u73b0\u7684\u961f\u5217\u5165\u961f\u548c\u51fa\u961f\u7684\u5e73\u644a\u590d\u6742\u5ea6\u90fd\u8fd8\u662fO(1), \u6bd4\u4e0a\u9762\u7684\u51e0\u79cd\u65b9\u6cd5\u8981\u597d\u3002", "3.\u5728c\u8bed\u8a00\u5e93\u51fd\u6570\u4e2d\u5c06\u4e00\u4e2a\u5b57\u7b26\u8f6c\u6362\u6210\u6574\u578b\u7684\u51fd\u6570\u662fatool()\u5417\uff0c\u8fd9\u4e2a\u51fd\u6570\u7684\u539f\u578b\u662f\u4ec0\u4e48\uff1f", "\n\u51fd\u6570\u540d: atol", "\n\u529f \u80fd: \u628a\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u957f\u6574\u578b\u6570", "\n\u7528 \u6cd5: long atol(const char *nptr);", "\n\u7a0b\u5e8f\u4f8b:", "\n#include ", "l = atol(lstr);", "\nprintf(\u201cstring = %s integer = %ld\\n\u201d, str, l);", "\nreturn(0);", "\n}", "2.\u5bf9\u4e8e\u4e00\u4e2a\u9891\u7e41\u4f7f\u7528\u7684\u77ed\u5c0f\u51fd\u6570,\u5728C\u8bed\u8a00\u4e2d\u5e94\u7528\u4ec0\u4e48\u5b9e\u73b0,\u5728C++\u4e2d\u5e94\u7528\u4ec0\u4e48\u5b9e\u73b0?", "\nc\u7528\u5b8f\u5b9a\u4e49\uff0cc++\u7528inline", "3.\u76f4\u63a5\u94fe\u63a5\u4e24\u4e2a\u4fe1\u4ee4\u70b9\u7684\u4e00\u7ec4\u94fe\u8def\u79f0\u4f5c\u4ec0\u4e48?", "\nPPP\u70b9\u5230\u70b9\u8fde\u63a5", "4.\u63a5\u5165\u7f51\u7528\u7684\u662f\u4ec0\u4e48\u63a5\u53e3?", "\nDL:\u63a5\u5165\u7f51\u5728\u63a5\u5165\u8fd9\u4e9b\u7f51\u7edc\u65f6\uff0c\u4e00\u822c\u91c7\u7528E1\u3001V.24\u3001V.35\u30012B1Q\u201cU\u201d\u63a5\u53e3\uff0c\u5176\u4f59\u7c7b\u578b\u7684\u63a5\u53e3\u4f7f\u7528\u8f83\u5c11\u3002", "5.voip\u90fd\u7528\u4e86\u90a3\u4e9b\u534f\u8bae?", "\nVoIP\u4f7f\u7528IETF\u4f1a\u8bdd\u53d1\u8d77\u534f\u8bae\uff08SIP\uff09\u548c\u5b9e\u65f6\u4f20\u8f93\u534f\u8bae\uff08RTP\uff09\u63d0\u4ea4\u547c\u53eb\u4fe1\u4ee4\u548c\u8bed\u97f3\u6d88\u606f", "\n\u4e0eVoIP\u76f8\u5173\u7684\u7f51\u7edc\u6280\u672f\u534f\u8bae\u5f88\u591a\uff0c\u5e38\u89c1\u7684\u6709\u63a7\u5236\u5b9e\u65f6\u6570\u636e\u6d41\u5e94\u7528\u5728IP\u7f51\u7edc\u4f20\u8f93\u7684RTP(\u5b9e\u65f6\u4f20\u8f93\u534f\u8bae)\u548cRTCP(\u5b9e\u65f6", "\n\u4f20\u8f93\u63a7\u5236\u534f\u8bae)\uff1b", "\n\u6709\u4fdd\u8bc1\u7f51\u7edcQoS\u8d28\u91cf\u670d\u52a1\u7684RSVP(\u8d44\u6e90\u9884\u7559\u534f\u8bae)\u548cIP different Service\u7b49\uff0c", "\n\u8fd8\u6709\u4f20\u7edf\u8bed\u97f3\u6570\u5b57\u5316\u7f16\u7801\u7684\u4e00\u7cfb\u5217\u534f\u8bae\u5982G.711\u3001G.728\u3001G.723\u3001G.729\u7b49\u7b49\u3002", "\n\u4f46\u76ee\u524dVoIP\u6280\u672f\u6700\u5e38\u7528\u7684\u8bdd\u97f3\u5efa\u7acb\u548c\u63a7\u5236\u4fe1\u4ee4\u662fH.323\u548cSIP(\u4f1a\u8bdd\u521d\u59cb\u534f\u8bae)\u3002", "6.\u8f6f\u4ef6\u6d4b\u8bd5\u90fd\u6709\u90a3\u4e9b\u79cd\u7c7b?", "\n\u9ed1\u76d2\uff1a\u9488\u5bf9\u7cfb\u7edf\u529f\u80fd\u7684\u6d4b\u8bd5 \u767d\u5408\uff1a\u6d4b\u8bd5\u51fd\u6570\u529f\u80fd\uff0c\u5404\u51fd\u6570\u63a5\u53e3", "7.\u786e\u5b9a\u6a21\u5757\u7684\u529f\u80fd\u548c\u6a21\u5757\u7684\u63a5\u53e3\u662f\u5728\u8f6f\u4ef6\u8bbe\u8ba1\u7684\u90a3\u4e2a\u961f\u6bb5\u5b8c\u6210\u7684?", "\n\u6982\u8981\u8bbe\u8ba1\u9636\u6bb5", "8.enum string", "\n{", "\nx1,", "\nx2,", "\nx3=10,", "\nx4,", "\nx5,", "\n}x;", "\n\u95eex= 0\u00d7801005\uff0c0x8010f4 ;", "9.unsigned char *p1;", "\nunsigned long *p2;", "\np1=(unsigned char *)0\u00d7801000;", "\np2=(unsigned long *)0\u00d7810000;", "\n\u8bf7\u95eep1+5= 0\u00d7801005;", "\np2+5= 0\u00d7810014(\u52a05*4=20\u5b57\u8282\uff0c16\u8fdb\u5236\u4e3a0\u00d714);", "\u4e09.\u9009\u62e9\u9898:", "\n1.Ethternet\u94fe\u63a5\u5230Internet\u7528\u5230\u4ee5\u4e0b\u90a3\u4e2a\u534f\u8bae?", "\nA.HDLC;B.ARP;C.UDP;D.TCP;E.ID", "\n2.\u5c5e\u4e8e\u7f51\u7edc\u5c42\u534f\u8bae\u7684\u662f:", "\nA.TCP;B.IP;C.ICMP;D.X.25", "\n3.Windows\u6d88\u606f\u8c03\u5ea6\u673a\u5236\u662f:", "\nA.\u6307\u4ee4\u961f\u5217;B.\u6307\u4ee4\u5806\u6808;C.\u6d88\u606f\u961f\u5217;D.\u6d88\u606f\u5806\u6808;", "\n4.unsigned short hash(unsigned short key)", "\n{", "\nreturn (key>>)%256", "\n}", "\n\u8bf7\u95eehash(16),hash(256)\u7684\u503c\u5206\u522b\u662f:", "\nA.1.16;B.8.32;C.4.16;D.1.32", "\u56db.\u627e\u9519\u9898:", "\n1.\u8bf7\u95ee\u4e0b\u9762\u7a0b\u5e8f\u6709\u4ec0\u4e48\u9519\u8bef?", "\nint a[60][250][1000],i,j,k;", "\nfor(k=0;k\nfor(j=0;j\nfor(i=0;i\na[i][j][k]=0;", "\n\u628a\u5faa\u73af\u8bed\u53e5\u5185\u5916\u6362\u4e00\u4e0b(DL\uff1a\u6362\u4e00\u4e0b\u597d\u50cf\u8fd8\u662f\u6709\u9519)", "2.#define Max_CB 500", "\nvoid LmiQueryCSmd(Struct MSgCB * pmsg)", "\n{", "\nunsigned char ucCmdNum;", "\n......", "for(ucCmdNum=0;ucCmdNum", "\n{", "\n......;", "\n}", "\n\u6b7b\u5faa\u73af", "3.\u4ee5\u4e0b\u662f\u6c42\u4e00\u4e2a\u6570\u7684\u5e73\u65b9\u7684\u7a0b\u5e8f,\u8bf7\u627e\u51fa\u9519\u8bef:", "\n#define SQUARE(a)((a)*(a))", "\nint a=5;", "\nint b;", "\nb=SQUARE(a++);", "4.typedef unsigned char BYTE", "\nint examply_fun(BYTE gt_len; BYTE *gt_code)", "\n{", "\nBYTE *gt_buf;", "\ngt_buf=(BYTE *)MALLOC(Max_GT_Length);", "\n......", "\nif(gt_len>Max_GT_Length)", "\n{", "\nreturn GT_Length_ERROR;", "\n}", "\n\u2026\u2026.", "\n}", "\n\u4e94.\u95ee\u7b54\u9898:", "\n1.IP Phone\u7684\u539f\u7406\u662f\u4ec0\u4e48?", "\nIPV6", "\n2.TCP/IP\u901a\u4fe1\u5efa\u7acb\u7684\u8fc7\u7a0b\u600e\u6837\uff0c\u7aef\u53e3\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f", "\n\u4e09\u6b21\u63e1\u624b\uff0c\u786e\u5b9a\u662f\u54ea\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u8be5\u534f\u8bae", "\n3.1\u53f7\u4fe1\u4ee4\u548c7\u53f7\u4fe1\u4ee4\u6709\u4ec0\u4e48\u533a\u522b\uff0c\u6211\u56fd\u67d0\u524d\u5e7f\u6cdb\u4f7f\u7528\u7684\u662f\u90a3\u4e00\u79cd\uff1f", "\n\u4e03\u53f7\u4fe1\u4ee4\u7f51\u662f\u7535\u8bdd\u7f51\u3001\u667a\u80fd\u7f51\u4ee5\u53ca\u5404\u79cd\u65b0\u4e1a\u52a1\u7684\u795e\u7ecf\u548c\u652f\u6491\u7f51\uff0c\u662f\u901a\u4fe1\u7f51\u5efa\u8bbe\u7ef4\u62a4\u7684\u91cd\u8981\u90e8\u5206\u3002\u6839\u636e\u6211\u56fd\u4e03\u53f7\u4fe1", "\n\u4ee4\u6280\u672f\u4f53\u5236\u8981\u6c42\uff0c\u6211\u56fd\u4e03\u53f7\u4fe1\u4ee4\u7f51\u6700\u7ec8\u91c7\u7528\u4e09\u7ea7\u51c6\u76f4\u8054\u7ed3\u6784\u65b9\u5f0f\u3002", "\n1\u53f7\u4fe1\u4ee4\u5229\u7528TS16\u4f20\u9001\u65f6\u3002\u6bcf\u4e2aTS16\u8d1f\u8d23\u4f20\u9001\u4e24\u4e2a\u8bdd\u8def\u7684\u7ebf\u8def\u4fe1\u4ee4\uff0cTS16\u548c\u8bdd\u8def\u6709\u7740\u56fa\u5b9a\u7684\u4e00\u4e00\u5bf9\u5e94\u5173\u7cfb\u3002", "\n\u800c7\u53f7\u4fe1\u4ee4\u5229\u7528TS16\u6765\u4f20\u9001\u65f6\uff0c\u53ea\u662f\u5c06\u7ec4\u6210\u4fe1\u4ee4\u5355\u5143\u7684\u82e5\u5e72\u4e2a8\u4f4d\u4f4d\u7ec4\uff0c\u4f9d\u6b21\u63d2\u5165TS16\uff0cTS16\u5e76\u4e0d\u77e5\u9053\u4f20\u9001\u7684\u5185\u5bb9", "\n\uff0c", "\n\u5373\u4fe1\u4ee4\u548c\u8bdd\u8def\u6ca1\u6709\u56fa\u5b9a\u5173\u7cfb\uff0c\u53ea\u4e0d\u8fc7\u5229\u7528TS16\u4f5c\u4e3a\u4f20\u9001\u4fe1\u4ee4\u7684\u8f7d\u4f53\uff0c\u65f6\u4f20\u9001\u4fe1\u4ee4\u6d88\u606f\u7684\u6570\u636e\u94fe\u8def\uff0c", "\n\u56e0\u6b64\uff0c\u9009\u7528\u54ea\u4e2a\u65f6\u9699\u505a\u6570\u636e\u94fe\u8def\u5747\u53ef\u3002 \u2014 \u8fd9\u4e5f\u662f\u968f\u8def\u4fe1\u4ee4\u548c\u516c\u5171\u4fe1\u9053\u4fe1\u4ee4\u7684\u4e00\u4e2a\u672c\u8d28\u533a\u522b\u3002", "4.\u5217\u4e3e5\u79cd\u4ee5\u4e0a\u7684\u7535\u8bdd\u65b0\u4e1a\u52a1\uff1f", "\u5fae\u8f6f\u4e9a\u6d32\u6280\u672f\u4e2d\u5fc3\u7684\u9762\u8bd5\u9898\uff01\uff01\uff01", "\n1\uff0e\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7684\u5dee\u522b\u3002", "\n\u7ebf\u7a0b\u662f\u6307\u8fdb\u7a0b\u5185\u7684\u4e00\u4e2a\u6267\u884c\u5355\u5143,\u4e5f\u662f\u8fdb\u7a0b\u5185\u7684\u53ef\u8c03\u5ea6\u5b9e\u4f53.", "\n\u4e0e\u8fdb\u7a0b\u7684\u533a\u522b:", "\n(1)\u8c03\u5ea6\uff1a\u7ebf\u7a0b\u4f5c\u4e3a\u8c03\u5ea6\u548c\u5206\u914d\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u8fdb\u7a0b\u4f5c\u4e3a\u62e5\u6709\u8d44\u6e90\u7684\u57fa\u672c\u5355\u4f4d", "\n(2)\u5e76\u53d1\u6027\uff1a\u4e0d\u4ec5\u8fdb\u7a0b\u4e4b\u95f4\u53ef\u4ee5\u5e76\u53d1\u6267\u884c\uff0c\u540c\u4e00\u4e2a\u8fdb\u7a0b\u7684\u591a\u4e2a\u7ebf\u7a0b\u4e4b\u95f4\u4e5f\u53ef\u5e76\u53d1\u6267\u884c", "\n(3)\u62e5\u6709\u8d44\u6e90\uff1a\u8fdb\u7a0b\u662f\u62e5\u6709\u8d44\u6e90\u7684\u4e00\u4e2a\u72ec\u7acb\u5355\u4f4d\uff0c\u7ebf\u7a0b\u4e0d\u62e5\u6709\u7cfb\u7edf\u8d44\u6e90\uff0c\u4f46\u53ef\u4ee5\u8bbf\u95ee\u96b6\u5c5e\u4e8e", "\n\u8fdb\u7a0b\u7684\u8d44\u6e90.", "\n(4)\u7cfb\u7edf\u5f00\u9500\uff1a\u5728\u521b\u5efa\u6216\u64a4\u6d88\u8fdb\u7a0b\u65f6\uff0c\u7531\u4e8e\u7cfb\u7edf\u90fd\u8981\u4e3a\u4e4b\u5206\u914d\u548c\u56de\u6536\u8d44\u6e90\uff0c\u5bfc\u81f4\u7cfb\u7edf\u7684\u5f00\u9500", "\n\u660e\u663e\u5927\u4e8e\u521b\u5efa\u6216\u64a4\u6d88\u7ebf\u7a0b\u65f6\u7684\u5f00\u9500\u3002", "\n2.\u6d4b\u8bd5\u65b9\u6cd5", "\n\u4eba\u5de5\u6d4b\u8bd5\uff1a\u4e2a\u4eba\u590d\u67e5\u3001\u62bd\u67e5\u548c\u4f1a\u5ba1", "\n\u673a\u5668\u6d4b\u8bd5\uff1a\u9ed1\u76d2\u6d4b\u8bd5\u548c\u767d\u76d2\u6d4b\u8bd5", "2\uff0eHeap\u4e0estack\u7684\u5dee\u522b\u3002", "\nHeap\u662f\u5806\uff0cstack\u662f\u6808\u3002", "\nStack\u7684\u7a7a\u95f4\u7531\u64cd\u4f5c\u7cfb\u7edf\u81ea\u52a8\u5206\u914d/\u91ca\u653e\uff0cHeap\u4e0a\u7684\u7a7a\u95f4\u624b\u52a8\u5206\u914d/\u91ca\u653e\u3002", "\nStack\u7a7a\u95f4\u6709\u9650\uff0cHeap\u662f\u5f88\u5927\u7684\u81ea\u7531\u5b58\u50a8\u533a", "\nC\u4e2d\u7684malloc\u51fd\u6570\u5206\u914d\u7684\u5185\u5b58\u7a7a\u95f4\u5373\u5728\u5806\u4e0a,C++\u4e2d\u5bf9\u5e94\u7684\u662fnew\u64cd\u4f5c\u7b26\u3002", "\n\u7a0b\u5e8f\u5728\u7f16\u8bd1\u671f\u5bf9\u53d8\u91cf\u548c\u51fd\u6570\u5206\u914d\u5185\u5b58\u90fd\u5728\u6808\u4e0a\u8fdb\u884c,\u4e14\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u51fd\u6570\u8c03\u7528\u65f6\u53c2\u6570\u7684\u4f20", "\n\u9012\u4e5f\u5728\u6808\u4e0a\u8fdb\u884c", "\n3\uff0eWindows\u4e0b\u7684\u5185\u5b58\u662f\u5982\u4f55\u7ba1\u7406\u7684\uff1f", "\n4\uff0e\u4ecb\u7ecd.Net\u548c.Net\u7684\u5b89\u5168\u6027\u3002", "\n5\uff0e\u5ba2\u6237\u7aef\u5982\u4f55\u8bbf\u95ee.Net\u7ec4\u4ef6\u5b9e\u73b0Web Service\uff1f", "\n6\uff0eC/C++\u7f16\u8bd1\u5668\u4e2d\u865a\u8868\u662f\u5982\u4f55\u5b8c\u6210\u7684\uff1f", "\n7\uff0e\u8c08\u8c08COM\u7684\u7ebf\u7a0b\u6a21\u578b\u3002\u7136\u540e\u8ba8\u8bba\u8fdb\u7a0b\u5185/\u5916\u7ec4\u4ef6\u7684\u5dee\u522b\u3002", "\n8\uff0e\u8c08\u8c08IA32\u4e0b\u7684\u5206\u9875\u673a\u5236", "\n\u5c0f\u9875(4K)\u4e24\u7ea7\u5206\u9875\u6a21\u5f0f\uff0c\u5927\u9875(4M)\u4e00\u7ea7", "\n9\uff0e\u7ed9\u4e24\u4e2a\u53d8\u91cf\uff0c\u5982\u4f55\u627e\u51fa\u4e00\u4e2a\u5e26\u73af\u5355\u94fe\u8868\u4e2d\u662f\u4ec0\u4e48\u5730\u65b9\u51fa\u73b0\u73af\u7684\uff1f", "\n\u4e00\u4e2a\u9012\u589e\u4e00\uff0c\u4e00\u4e2a\u9012\u589e\u4e8c\uff0c\u4ed6\u4eec\u6307\u5411\u540c\u4e00\u4e2a\u63a5\u70b9\u65f6\u5c31\u662f\u73af\u51fa\u73b0\u7684\u5730\u65b9", "\n10\uff0e\u5728IA32\u4e2d\u4e00\u5171\u6709\u591a\u5c11\u79cd\u529e\u6cd5\u4ece\u7528\u6237\u6001\u8df3\u5230\u5185\u6838\u6001\uff1f", "\n\u901a\u8fc7\u8c03\u7528\u95e8\uff0c\u4ecering3\u5230ring0\uff0c\u4e2d\u65ad\u4ecering3\u5230ring0\uff0c\u8fdb\u5165vm86\u7b49\u7b49", "\n11\uff0e\u5982\u679c\u53ea\u60f3\u8ba9\u7a0b\u5e8f\u6709\u4e00\u4e2a\u5b9e\u4f8b\u8fd0\u884c\uff0c\u4e0d\u80fd\u8fd0\u884c\u4e24\u4e2a\u3002\u50cfwinamp\u4e00\u6837\uff0c\u53ea\u80fd\u5f00\u4e00\u4e2a\u7a97\u53e3\uff0c", "\n\u600e\u6837\u5b9e\u73b0\uff1f", "\n\u7528\u5185\u5b58\u6620\u5c04\u6216\u5168\u5c40\u539f\u5b50\uff08\u4e92\u65a5\u53d8\u91cf\uff09\u3001\u67e5\u627e\u7a97\u53e3\u53e5\u67c4..", "\nFindWindow\uff0c\u4e92\u65a5\uff0c\u5199\u6807\u5fd7\u5230\u6587\u4ef6\u6216\u6ce8\u518c\u8868,\u5171\u4eab\u5185\u5b58\u3002.\u3000", "\n12\uff0e\u5982\u4f55\u622a\u53d6\u952e\u76d8\u7684\u54cd\u5e94\uff0c\u8ba9\u6240\u6709\u7684\u2018a\u2019\u53d8\u6210\u2018b\u2019\uff1f", "\n\u952e\u76d8\u94a9\u5b50SetWindowsHookEx", "\n\u300013\uff0eApartment\u5728COM\u4e2d\u6709\u4ec0\u4e48\u7528\uff1f\u4e3a\u4ec0\u4e48\u8981\u5f15\u5165\uff1f", "\n\u300014\uff0e\u5b58\u50a8\u8fc7\u7a0b\u662f\u4ec0\u4e48\uff1f\u6709\u4ec0\u4e48\u7528\uff1f\u6709\u4ec0\u4e48\u4f18\u70b9\uff1f", "\n\u6211\u7684\u7406\u89e3\u5c31\u662f\u4e00\u5806sql\u7684\u96c6\u5408\uff0c\u53ef\u4ee5\u5efa\u7acb\u975e\u5e38\u590d\u6742\u7684\u67e5\u8be2\uff0c\u7f16\u8bd1\u8fd0\u884c\uff0c\u6240\u4ee5\u8fd0\u884c\u4e00\u6b21\u540e\uff0c\u4ee5", "\n\u540e\u518d\u8fd0\u884c\u901f\u5ea6\u6bd4\u5355\u72ec\u6267\u884cSQL\u5feb\u5f88\u591a", "\n15\uff0eTemplate\u6709\u4ec0\u4e48\u7279\u70b9\uff1f\u4ec0\u4e48\u65f6\u5019\u7528\uff1f", "\n16\uff0e\u8c08\u8c08Windows DNA\u7ed3\u6784\u7684\u7279\u70b9\u548c\u4f18\u70b9\u3002", "\u7f51\u7edc\u7f16\u7a0b\u4e2d\u8bbe\u8ba1\u5e76\u53d1\u670d\u52a1\u5668\uff0c\u4f7f\u7528\u591a\u8fdb\u7a0b \u4e0e \u591a\u7ebf\u7a0b \uff0c\u8bf7\u95ee\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n1\uff0c\u8fdb\u7a0b\uff1a\u5b50\u8fdb\u7a0b\u662f\u7236\u8fdb\u7a0b\u7684\u590d\u5236\u54c1\u3002\u5b50\u8fdb\u7a0b\u83b7\u5f97\u7236\u8fdb\u7a0b\u6570\u636e\u7a7a\u95f4\u3001\u5806\u548c\u6808\u7684\u590d\u5236\u54c1\u3002", "\n2\uff0c\u7ebf\u7a0b\uff1a\u76f8\u5bf9\u4e0e\u8fdb\u7a0b\u800c\u8a00\uff0c\u7ebf\u7a0b\u662f\u4e00\u4e2a\u66f4\u52a0\u63a5\u8fd1\u4e0e\u6267\u884c\u4f53\u7684\u6982\u5ff5\uff0c\u5b83\u53ef\u4ee5\u4e0e\u540c\u8fdb\u7a0b\u7684\u5176\u4ed6", "\n\u7ebf\u7a0b\u5171\u4eab\u6570\u636e\uff0c\u4f46\u62e5\u6709\u81ea\u5df1\u7684\u6808\u7a7a\u95f4\uff0c\u62e5\u6709\u72ec\u7acb\u7684\u6267\u884c\u5e8f\u5217\u3002", "\n\u4e24\u8005\u90fd\u53ef\u4ee5\u63d0\u9ad8\u7a0b\u5e8f\u7684\u5e76\u53d1\u5ea6\uff0c\u63d0\u9ad8\u7a0b\u5e8f\u8fd0\u884c\u6548\u7387\u548c\u54cd\u5e94\u65f6\u95f4\u3002", "\n\u7ebf\u7a0b\u548c\u8fdb\u7a0b\u5728\u4f7f\u7528\u4e0a\u5404\u6709\u4f18\u7f3a\u70b9\uff1a\u7ebf\u7a0b\u6267\u884c\u5f00\u9500\u5c0f\uff0c\u4f46\u4e0d\u5229\u4e8e\u8d44\u6e90\u7ba1\u7406\u548c\u4fdd\u62a4\uff1b\u800c\u8fdb\u7a0b\u6b63", "\n\u76f8\u53cd\u3002\u540c\u65f6\uff0c\u7ebf\u7a0b\u9002\u5408\u4e8e\u5728SMP\u673a\u5668\u4e0a\u8fd0\u884c\uff0c\u800c\u8fdb\u7a0b\u5219\u53ef\u4ee5\u8de8\u673a\u5668\u8fc1\u79fb\u3002", "\u601d\u79d1", "\n1. \u7528\u5b8f\u5b9a\u4e49\u5199\u51faswap\uff08x\uff0cy\uff09", "\n#define swap(x, y)\\", "\nx = x + y;\\", "\ny = x \u2013 y;\\", "\nx = x \u2013 y;", "2.\u6570\u7ec4a[N]\uff0c\u5b58\u653e\u4e861\u81f3N-1\u4e2a\u6570\uff0c\u5176\u4e2d\u67d0\u4e2a\u6570\u91cd\u590d\u4e00\u6b21\u3002\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u627e\u51fa\u88ab\u91cd\u590d\u7684\u6570\u5b57", "\n.\u65f6\u95f4\u590d\u6742\u5ea6\u5fc5\u987b\u4e3ao\uff08N\uff09\u51fd\u6570\u539f\u578b\uff1a", "\n\u6ce8\u610fa[N]\u4e2d\u5b58\u653e\u7684\u662f1-\u3009N-1\u4e2a\u6570", "\nint do_dup(int a[],int N)", "\n{", "\n    int temp[N]={0};", "\n    for(int i=0;i", "\n      if(temp[a[i]]!=0)", "\n          return i;", "\n}", "3 \u4e00\u8bed\u53e5\u5b9e\u73b0x\u662f\u5426\u4e3a2\u7684\u82e5\u5e72\u6b21\u5e42\u7684\u5224\u65ad", "\nint i = 512;", "\ncout \n\u6309\u4f4d\u4e0e\u8fd0\u7b97\u7b26a&b\uff0c\u5bf9b\u4e2d\u4e3a1\u7684\u4f4d\u5982\u679ca\u4e2d\u4e5f\u4e3a1\u5219\u4fdd\u7559\uff0ca\u4e2d\u5176\u4f59\u4f4d\u5168\u90e8\u7f6e0\uff0c\u5269\u4e0b\u7684a\u5373\u4e3a\u7ed3\u679c", "\n\t\t\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u4fdd\u7559a\u4e2d\u4e0eb\u4e2d\u4f4d1\u5bf9\u5e94\u7684\u4f4d\uff0c\u5176\u4f59\u7f6e0", "\n\u5176\u4f59\u6309\u4f4d\u8fd0\u7b97\u7b26\u7c7b\u4f3c\uff0c\u5c06a\u4e0eb\u6309\u4f4d\u505a\u76f8\u5e94\u8fd0\u7b97\uff0c\u6240\u5f97\u503c\u5373\u7ed3\u679c", "4.unsigned int intvert(unsigned int x,int p,int n)\u5b9e\u73b0\u5bf9x\u7684\u8fdb\u884c\u8f6c\u6362,p\u4e3a\u8d77\u59cb\u8f6c\u5316", "\n\u4f4d,n\u4e3a\u9700\u8981\u8f6c\u6362\u7684\u957f\u5ea6,\u5047\u8bbe\u8d77\u59cb\u70b9\u5728\u53f3\u8fb9.\u5982x=0b0001 0001,p=4,n=3\u8f6c\u6362\u540ex=0b0110 00", "\n01", "\nunsigned int intvert(unsigned int x,int p,int n){", "\nunsigned int _t = 0;", "\nunsigned int _a = 1;", "\nfor(int i = 0; i \n_t |= _a;", "\n_a = _a \n}", "\n//_t\u5305\u542bn\u4e2a1", "\n_t = _t \nx ^= _t;", "\nreturn x;", "\n}", "\u6167\u901a\uff1a", "\n\u4ec0\u4e48\u662f\u9884\u7f16\u8bd1", "\n\u4f55\u65f6\u9700\u8981\u9884\u7f16\u8bd1\uff1a", "\n\uff11\u3001\u603b\u662f\u4f7f\u7528\u4e0d\u7ecf\u5e38\u6539\u52a8\u7684\u5927\u578b\u4ee3\u7801\u4f53\u3002", "\n\uff12\u3001\u7a0b\u5e8f\u7531\u591a\u4e2a\u6a21\u5757\u7ec4\u6210\uff0c\u6240\u6709\u6a21\u5757\u90fd\u4f7f\u7528\u4e00\u7ec4\u6807\u51c6\u7684\u5305\u542b\u6587\u4ef6\u548c\u76f8\u540c\u7684\u7f16\u8bd1\u9009\u9879\u3002\u5728\u8fd9", "\n\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u5c06\u6240\u6709\u5305\u542b\u6587\u4ef6\u9884\u7f16\u8bd1\u4e3a\u4e00\u4e2a\u9884\u7f16\u8bd1\u5934\u3002", "char * const p;", "\nchar const * p", "\nconst char *p", "\u4e0a\u8ff0\u4e09\u4e2a\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\nchar * const p; //\u5e38\u91cf\u6307\u9488\uff0cp\u7684\u503c\u4e0d\u53ef\u4ee5\u4fee\u6539", "\nchar const * p\uff1b//\u6307\u5411\u5e38\u91cf\u7684\u6307\u9488\uff0c\u6307\u5411\u7684\u5e38\u91cf\u503c\u4e0d\u53ef\u4ee5\u6539", "\nconst char *p\uff1b //\u548cchar const *p", "char str1[] = \"abc\";", "\nchar str2[] = \"abc\";", "const char str3[] = \"abc\";", "\nconst char str4[] = \"abc\";", "const char *str5 = \"abc\";", "\nconst char *str6 = \"abc\";", "char *str7 = \"abc\";", "\nchar *str8 = \"abc\";", "cout \ncout \ncout \ncout \n", "\u7ed3\u679c\u662f\uff1a0 0 1 1", "\n\u89e3\u7b54\uff1astr1,str2,str3,str4\u662f\u6570\u7ec4\u53d8\u91cf\uff0c\u5b83\u4eec\u6709\u5404\u81ea\u7684\u5185\u5b58\u7a7a\u95f4\uff1b", "\n\u800cstr5,str6,str7,str8\u662f\u6307\u9488\uff0c\u5b83\u4eec\u6307\u5411\u76f8\u540c\u7684\u5e38\u91cf\u533a\u57df\u3002", "12. \u4ee5\u4e0b\u4ee3\u7801\u4e2d\u7684\u4e24\u4e2asizeof\u7528\u6cd5\u6709\u95ee\u9898\u5417\uff1f[C\u6613]", "\nvoid UpperCase( char str[] ) // \u5c06 str \u4e2d\u7684\u5c0f\u5199\u5b57\u6bcd\u8f6c\u6362\u6210\u5927\u5199\u5b57\u6bcd", "\n{", "\nfor( size_t i=0; i", "\nif( 'a'\nstr[i] -= ('a'-'A' );", "\n}", "\nchar str[] = \"aBcDe\";", "\ncout \nUpperCase( str );", "\ncout \n", "\u7b54\uff1a\u51fd\u6570\u5185\u7684sizeof\u6709\u95ee\u9898\u3002\u6839\u636e\u8bed\u6cd5\uff0csizeof\u5982\u7528\u4e8e\u6570\u7ec4\uff0c\u53ea\u80fd\u6d4b\u51fa\u9759\u6001\u6570\u7ec4\u7684\u5927\u5c0f\uff0c", "\n\u65e0\u6cd5\u68c0\u6d4b\u52a8\u6001\u5206\u914d\u7684\u6216\u5916\u90e8\u6570\u7ec4\u5927\u5c0f\u3002\u51fd\u6570\u5916\u7684str\u662f\u4e00\u4e2a\u9759\u6001\u5b9a\u4e49\u7684\u6570\u7ec4\uff0c\u56e0\u6b64\u5176\u5927\u5c0f\u4e3a\u6570\u7ec4\u5927\u5c0f", "6\uff0c\u51fd\u6570\u5185\u7684str\u5b9e\u9645\u53ea\u662f\u4e00\u4e2a\u6307\u5411\u5b57\u7b26\u4e32\u7684\u6307\u9488\uff0c\u6ca1\u6709\u4efb\u4f55\u989d\u5916\u7684\u4e0e\u6570\u7ec4\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u56e0", "\n\u6b64sizeof\u4f5c\u7528\u4e8e\u4e0a\u53ea\u5c06\u5176\u5f53\u6307\u9488\u770b\uff0c\u4e00\u4e2a\u6307\u9488\u4e3a4\u4e2a\u5b57\u8282\uff0c\u56e0\u6b64\u8fd4\u56de4\u3002", "\u4e00\u4e2a32\u4f4d\u7684\u673a\u5668,\u8be5\u673a\u5668\u7684\u6307\u9488\u662f\u591a\u5c11\u4f4d", "\n\u6307\u9488\u662f\u591a\u5c11\u4f4d\u53ea\u8981\u770b\u5730\u5740\u603b\u7ebf\u7684\u4f4d\u6570\u5c31\u884c\u4e86\u300280386\u4ee5\u540e\u7684\u673a\u5b50\u90fd\u662f32\u7684\u6570\u636e\u603b\u7ebf\u3002\u6240\u4ee5\u6307", "\n\u9488\u7684\u4f4d\u6570\u5c31\u662f4\u4e2a\u5b57\u8282\u4e86\u3002", "main()", "\n{", "\nint a[5]={1,2,3,4,5};", "\nint *ptr=(int *)(&a+1);", "printf(\"%d,%d\",*(a+1),*(ptr-1));", "\n}", "\n\u8f93\u51fa\uff1a2,5", "\n*(a+1\uff09\u5c31\u662fa[1]\uff0c*(ptr-1)\u5c31\u662fa[4],\u6267\u884c\u7ed3\u679c\u662f2\uff0c5", "\n&a+1\u4e0d\u662f\u9996\u5730\u5740+1\uff0c\u7cfb\u7edf\u4f1a\u8ba4\u4e3a\u52a0\u4e00\u4e2aa\u6570\u7ec4\u7684\u504f\u79fb\uff0c\u662f\u504f\u79fb\u4e86\u4e00\u4e2a\u6570\u7ec4\u7684\u5927\u5c0f\uff08\u672c\u4f8b\u662f5", "\n\u4e2aint\uff09", "\nint *ptr=(int *)(&a+1);", "\n\u5219ptr\u5b9e\u9645\u662f&(a[5]),\u4e5f\u5c31\u662fa+5", "\n\u539f\u56e0\u5982\u4e0b\uff1a", "\n&a\u662f\u6570\u7ec4\u6307\u9488\uff0c\u5176\u7c7b\u578b\u4e3a int (*)[5];", "\n\u800c\u6307\u9488\u52a01\u8981\u6839\u636e\u6307\u9488\u7c7b\u578b\u52a0\u4e0a\u4e00\u5b9a\u7684\u503c\uff0c", "\n\u4e0d\u540c\u7c7b\u578b\u7684\u6307\u9488+1\u4e4b\u540e\u589e\u52a0\u7684\u5927\u5c0f\u4e0d\u540c", "\na\u662f\u957f\u5ea6\u4e3a5\u7684int\u6570\u7ec4\u6307\u9488\uff0c\u6240\u4ee5\u8981\u52a0 5*sizeof(int)", "\n\u6240\u4ee5ptr\u5b9e\u9645\u662fa[5]", "\n\u4f46\u662fprt\u4e0e(&a+1)\u7c7b\u578b\u662f\u4e0d\u4e00\u6837\u7684(\u8fd9\u70b9\u5f88\u91cd\u8981)", "\n\u6240\u4ee5prt-1\u53ea\u4f1a\u51cf\u53bbsizeof(int*)", "\na,&a\u7684\u5730\u5740\u662f\u4e00\u6837\u7684\uff0c\u4f46\u610f\u601d\u4e0d\u4e00\u6837\uff0ca\u662f\u6570\u7ec4\u9996\u5730\u5740\uff0c\u4e5f\u5c31\u662fa[0]\u7684\u5730\u5740\uff0c&a\u662f\u5bf9\u8c61\uff08\u6570", "\n\u7ec4\uff09\u9996\u5730\u5740\uff0ca+1\u662f\u6570\u7ec4\u4e0b\u4e00\u5143\u7d20\u7684\u5730\u5740\uff0c\u5373a[1],&a+1\u662f\u4e0b\u4e00\u4e2a\u5bf9\u8c61\u7684\u5730\u5740\uff0c\u5373a[5].", "1.\u8bf7\u95ee\u4ee5\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1a", "\nint main()", "\n{", "\nchar a;", "\nchar *str=&a;", "\nstrcpy(str,\"hello\");", "\nprintf(str);", "\nreturn 0;", "\n}", "\n\u6ca1\u6709\u4e3astr\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff0c\u5c06\u4f1a\u53d1\u751f\u5f02\u5e38", "\n\u95ee\u9898\u51fa\u5728\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u590d\u5236\u8fdb\u4e00\u4e2a\u5b57\u7b26\u53d8\u91cf\u6307\u9488\u6240\u6307\u5730\u5740\u3002\u867d\u7136\u53ef\u4ee5\u6b63\u786e\u8f93\u51fa\u7ed3\u679c\uff0c\u4f46\u56e0", "\n\u4e3a\u8d8a\u754c\u8fdb\u884c\u5185\u5728\u8bfb\u5199\u800c\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\u3002", "char* s=\"AAA\";", "\nprintf(\"%s\",s);", "\ns[0]='B';", "\nprintf(\"%s\",s);", "\n\u6709\u4ec0\u4e48\u9519\uff1f", "\n\"AAA\"\u662f\u5b57\u7b26\u4e32\u5e38\u91cf\u3002s\u662f\u6307\u9488\uff0c\u6307\u5411\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5e38\u91cf\uff0c\u6240\u4ee5\u58f0\u660es\u7684\u65f6\u5019\u5c31\u6709\u95ee\u9898\u3002", "\ncosnt char* s=\"AAA\";", "\n\u7136\u540e\u53c8\u56e0\u4e3a\u662f\u5e38\u91cf\uff0c\u6240\u4ee5\u5bf9\u662fs[0]\u7684\u8d4b\u503c\u64cd\u4f5c\u662f\u4e0d\u5408\u6cd5\u7684\u3002", "1\u3001\u5199\u4e00\u4e2a\u201c\u6807\u51c6\u201d\u5b8f\uff0c\u8fd9\u4e2a\u5b8f\u8f93\u5165\u4e24\u4e2a\u53c2\u6570\u5e76\u8fd4\u56de\u8f83\u5c0f\u7684\u4e00\u4e2a\u3002", "\n#define Min(X, Y) ((X)>(Y)?(Y):(X))//\u7ed3\u5c3e\u6ca1\u6709;\u2014\u2014\u8bed\u6cd5\u4e0a\u5e76\u6ca1\u6709\u9650\u5236\u5b8f\u540e\u9762\u5fc5\u987b\u6ca1\u6709\u5206\u53f7\uff0c", "\n\u5b8f\u53ea\u662f\u7b80\u5355\u7684\u5b57\u7b26\u66ff\u6362\uff0c\u8fd9\u91cc\u662f\u56e0\u4e3a\u4f7f\u7528Min\u7684\u5730\u65b9\u901a\u5e38\u4f1a\u5728\u540e\u9762\u52a0\u5206\u53f7", "2\u3001\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\u7ecf\u5e38\u8981\u7528\u5230\u65e0\u9650\u5faa\u73af\uff0c\u4f60\u600e\u4e48\u7528C\u7f16\u5199\u6b7b\u5faa\u73af\u3002", "\nwhile(1){}\u6216\u8005for(;;)", "\n3\u3001\u5173\u952e\u5b57static\u7684\u4f5c\u7528\u662f\u4ec0\u4e48\uff1f", "\n\u5b9a\u4e49\u9759\u6001\u53d8\u91cf", "\n4\u3001\u5173\u952e\u5b57const\u6709\u4ec0\u4e48\u542b\u610f\uff1f", "\n\u8868\u793a\u5e38\u91cf\u4e0d\u53ef\u4ee5\u4fee\u6539\u7684\u53d8\u91cf\u3002", "\n5\u3001\u5173\u952e\u5b57volatile\u6709\u4ec0\u4e48\u542b\u610f\uff1f\u5e76\u4e3e\u51fa\u4e09\u4e2a\u4e0d\u540c\u7684\u4f8b\u5b50\uff1f", "\n\u63d0\u793a\u7f16\u8bd1\u5668\u5bf9\u8c61\u7684\u503c\u53ef\u80fd\u5728\u7f16\u8bd1\u5668\u672a\u76d1\u6d4b\u5230\u7684\u60c5\u51b5\u4e0b\u6539\u53d8\u3002", "\nvolatile\u5173\u952e\u5b57\u662f\u4e00\u79cd\u7c7b\u578b\u4fee\u9970\u7b26\uff0c\u7528\u5b83\u58f0\u660e\u7684\u7c7b\u578b\u53d8\u91cf\u8868\u793a\u53ef\u4ee5\u88ab\u67d0\u4e9b\u7f16\u8bd1\u5668\u672a\u77e5\u7684\u56e0\u7d20\u66f4\u6539\uff0c", "\n\u6bd4\u5982\uff1a\u64cd\u4f5c\u7cfb\u7edf\u3001\u786c\u4ef6\u6216\u8005\u5176\u5b83\u7ebf\u7a0b\u7b49\u3002\u9047\u5230\u8fd9\u4e2a\u5173\u952e\u5b57\u58f0\u660e\u7684\u53d8\u91cf\uff0c", "\n\u7f16\u8bd1\u5668\u5bf9\u8bbf\u95ee\u8be5\u53d8\u91cf\u7684\u4ee3\u7801\u5c31\u4e0d\u518d\u8fdb\u884c\u4f18\u5316\uff0c\u4ece\u800c\u53ef\u4ee5\u63d0\u4f9b\u5bf9\u7279\u6b8a\u5730\u5740\u7684\u7a33\u5b9a\u8bbf\u95ee\u3002", "\n\u5f53\u8981\u6c42\u4f7f\u7528volatile \u58f0\u660e\u7684\u53d8\u91cf\u7684\u503c\u7684\u65f6\u5019\uff0c\u7cfb\u7edf\u603b\u662f\u91cd\u65b0\u4ece\u5b83\u6240\u5728\u7684\u5185\u5b58\u8bfb\u53d6\u6570\u636e\uff0c", "\n\u5373\u4f7f\u5b83\u524d\u9762\u7684\u6307\u4ee4\u521a\u521a\u4ece\u8be5\u5904\u8bfb\u53d6\u8fc7\u6570\u636e\u3002\u800c\u4e14\u8bfb\u53d6\u7684\u6570\u636e\u7acb\u523b\u88ab\u4fdd\u5b58\u3002", "\nvolatile \u6307\u51fa i\u662f\u968f\u65f6\u53ef\u80fd\u53d1\u751f\u53d8\u5316\u7684\uff0c\u6bcf\u6b21\u4f7f\u7528\u5b83\u7684\u65f6\u5019\u5fc5\u987b\u4ecei\u7684\u5730\u5740\u4e2d\u8bfb\u53d6\uff0c", "\n\u56e0\u800c\u7f16\u8bd1\u5668\u751f\u6210\u7684\u6c47\u7f16\u4ee3\u7801\u4f1a\u91cd\u65b0\u4ecei\u7684\u5730\u5740\u8bfb\u53d6\u6570\u636e\u653e\u5728b\u4e2d\u3002", "\n\u800c\u4f18\u5316\u505a\u6cd5\u662f\uff0c\u7531\u4e8e\u7f16\u8bd1\u5668\u53d1\u73b0\u4e24\u6b21\u4ecei\u8bfb\u6570\u636e\u7684\u4ee3\u7801\u4e4b\u95f4\u7684\u4ee3\u7801\u6ca1\u6709\u5bf9i\u8fdb\u884c\u8fc7\u64cd\u4f5c\uff0c", "\n\u5b83\u4f1a\u81ea\u52a8\u628a\u4e0a\u6b21\u8bfb\u7684\u6570\u636e\u653e\u5728b\u4e2d\u3002\u800c\u4e0d\u662f\u91cd\u65b0\u4ecei\u91cc\u9762\u8bfb\u3002", "\n\u8fd9\u6837\u4ee5\u6765\uff0c\u5982\u679ci\u662f\u4e00\u4e2a\u5bc4\u5b58\u5668\u53d8\u91cf\u6216\u8005\u8868\u793a\u4e00\u4e2a\u7aef\u53e3\u6570\u636e\u5c31\u5bb9\u6613\u51fa\u9519\uff0c", "\n\u6240\u4ee5\u8bf4volatile\u53ef\u4ee5\u4fdd\u8bc1\u5bf9\u7279\u6b8a\u5730\u5740\u7684\u7a33\u5b9a\u8bbf\u95ee\u3002", "\nvc6\u8c03\u8bd5\u6a21\u5f0f\u4e0b\u6ca1\u6709\u4f18\u5316\uff0c\u5173\u952e\u5b57\u7684\u4f5c\u7528\u770b\u4e0d\u51fa\u6765\uff0c\u4f46\u53d1\u884c\u6a21\u5f0f\u5219\u4f1a\u8d77\u4f5c\u7528\uff0c\u6545\u5bf9\u4e8e\u591a\u7ebf\u7a0b\u5171\u4eab\u7684\u53d8\u91cf\u6700\u597d\u7528vola", "\ntile\u4fee\u9970", "int (*s[10])(int) \u8868\u793a\u7684\u662f\u4ec0\u4e48\u554a", "\nint (*s[10])(int) \u51fd\u6570\u6307\u9488\u6570\u7ec4\uff0c\u6bcf\u4e2a\u6307\u9488\u6307\u5411\u4e00\u4e2aint func(int param)\u7684\u51fd\u6570\u3002", "1.\u6709\u4ee5\u4e0b\u8868\u8fbe\u5f0f\uff1a", "\nint a=248; b=4;int const c=21;const int *d=&a;", "\nint *const e=&b;int const *f const =&a;", "\n\u8bf7\u95ee\u4e0b\u5217\u8868\u8fbe\u5f0f\u54ea\u4e9b\u4f1a\u88ab\u7f16\u8bd1\u5668\u7981\u6b62\uff1f\u4e3a\u4ec0\u4e48\uff1f", "\n*c=32;d=&b;*d=43;e=34;e=&a;f=0x321f;", "\n*c \u8fd9\u662f\u4e2a\u4ec0\u4e48\u4e1c\u4e1c\uff0c\u7981\u6b62", "\n*d \u8bf4\u4e86\u662fconst\uff0c \u7981\u6b62", "\ne = &a \u8bf4\u4e86\u662fconst \u7981\u6b62", "\nconst *f const =&a; \u7981\u6b62", "\n2.\u4ea4\u6362\u4e24\u4e2a\u53d8\u91cf\u7684\u503c\uff0c\u4e0d\u4f7f\u7528\u7b2c\u4e09\u4e2a\u53d8\u91cf\u3002\u5373a=3,b=5,\u4ea4\u6362\u4e4b\u540ea=5,b=3;", "\n\u6709\u4e24\u79cd\u89e3\u6cd5, \u4e00\u79cd\u7528\u7b97\u672f\u7b97\u6cd5, \u4e00\u79cd\u7528^(\u5f02\u6216)", "\na = a + b;", "\nb = a \u2013 b;", "\na = a \u2013 b;", "\nor", "\na = a^b;// \u53ea\u80fd\u5bf9int,char..", "\nb = a^b;", "\na = a^b;", "\nor", "\na ^= b ^= a;", "3.c\u548cc++\u4e2d\u7684struct\u6709\u4ec0\u4e48\u4e0d\u540c\uff1f", "\nc\u548cc++\u4e2dstruct\u7684\u4e3b\u8981\u533a\u522b\u662fc\u4e2d\u7684struct\u4e0d\u53ef\u4ee5\u542b\u6709\u6210\u5458\u51fd\u6570\uff0c\u800cc++\u4e2d\u7684struct\u53ef\u4ee5\u3002", "\nc++\u4e2dstruct\u548cclass\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u9ed8\u8ba4\u7684\u5b58\u53d6\u6743\u9650\u4e0d\u540c\uff0cstruct\u9ed8\u8ba4\u4e3apublic\uff0c\u800cclas", "\ns\u9ed8\u8ba4\u4e3aprivate", "4.#include ", "5.char szstr[10];", "\nstrcpy(szstr,\u201d0123456789\u2033);", "\n\u4ea7\u751f\u4ec0\u4e48\u7ed3\u679c\uff1f\u4e3a\u4ec0\u4e48\uff1f", "\n\u957f\u5ea6\u4e0d\u4e00\u6837\uff0c\u4f1a\u9020\u6210\u975e\u6cd5\u7684OS", "6.\u5217\u4e3e\u51e0\u79cd\u8fdb\u7a0b\u7684\u540c\u6b65\u673a\u5236\uff0c\u5e76\u6bd4\u8f83\u5176\u4f18\u7f3a\u70b9\u3002", "\n\u5728\u4e3b\u6d41\u7684Linux\u5185\u6838\u4e2d\u5305\u542b\u4e86\u51e0\u4e4e\u6240\u6709\u73b0\u4ee3\u7684\u64cd\u4f5c\u7cfb\u7edf\u5177\u6709\u7684\u540c\u6b65\u673a\u5236\uff0c\u8fd9\u4e9b\u540c\u6b65\u673a\u5236\u5305\u62ec\uff1a\u539f\u5b50\u64cd\u4f5c\u3001\u4fe1\u53f7\u91cf\uff08", "\nsemaphore\uff09\u3001\u8bfb\u5199\u4fe1\u53f7\u91cf\uff08rw_semaphore\uff09\u3001spinlock\u3001BKL(Big Kernel Lock)\u3001rwlock\u3001brlock", "\n\uff08\u53ea\u5305\u542b\u57282.4\u5185\u6838\u4e2d\uff09\u3001RCU\uff08\u53ea\u5305\u542b\u57282.6\u5185\u6838\u4e2d\uff09\u548cseqlock\uff08\u53ea\u5305\u542b\u57282.6\u5185\u6838\u4e2d\uff09", "\n\u3002", "7.\u8fdb\u7a0b\u4e4b\u95f4\u901a\u4fe1\u7684\u9014\u5f84", "\n\u7ba1\u9053(pipe)\u548c\u6709\u540d\u7ba1\u9053(named pipe)\u3001\u6d88\u606f\u961f\u5217(mesage queue)\u3001\u4fe1\u53f7(signal)\u3001", "\n\u4fe1\u53f7\u91cf(semaphore)\u3001\u5171\u4eab\u5b58\u50a8\u533a(shared memory)\u3001\u5957\u63a5\u53e3(socket)\u7b49", "11.\u8fdb\u7a0b\u6b7b\u9501\u7684\u539f\u56e0", "\n\u8d44\u6e90\u7ade\u4e89\u53ca\u8fdb\u7a0b\u63a8\u8fdb\u987a\u5e8f\u975e\u6cd5", "\n12.\u6b7b\u9501\u76844\u4e2a\u5fc5\u8981\u6761\u4ef6", "\n\u4e92\u65a5\u3001\u8bf7\u6c42\u4fdd\u6301\u3001\u4e0d\u53ef\u5265\u593a\u3001\u73af\u8def", "\n13.\u6b7b\u9501\u7684\u5904\u7406", "\n\u9e35\u9e1f\u7b56\u7565\u3001\u9884\u9632\u7b56\u7565\u3001\u907f\u514d\u7b56\u7565\u3001\u68c0\u6d4b\u4e0e\u89e3\u9664\u6b7b\u9501", "\n15. \u64cd\u4f5c\u7cfb\u7edf\u4e2d\u8fdb\u7a0b\u8c03\u5ea6\u7b56\u7565\u6709\u54ea\u51e0\u79cd\uff1f", "\nFCFS(\u5148\u6765\u5148\u670d\u52a1)\uff0c\u4f18\u5148\u7ea7\uff0c\u65f6\u95f4\u7247\u8f6e\u8f6c\uff0c\u591a\u7ea7\u53cd\u9988", "\n8.\u7c7b\u7684\u9759\u6001\u6210\u5458\u548c\u975e\u9759\u6001\u6210\u5458\u6709\u4f55\u533a\u522b\uff1f", "\n\u7c7b\u7684\u9759\u6001\u6210\u5458\u6bcf\u4e2a\u7c7b\u53ea\u6709\u4e00\u4e2a\uff0c\u975e\u9759\u6001\u6210\u5458\u6bcf\u4e2a\u5bf9\u8c61\u4e00\u4e2a", "\n9.\u7eaf\u865a\u51fd\u6570\u5982\u4f55\u5b9a\u4e49\uff1f\u4f7f\u7528\u65f6\u5e94\u6ce8\u610f\u4ec0\u4e48\uff1f", "\nvirtual void f()=0;", "\n\u662f\u63a5\u53e3\uff0c\u5b50\u7c7b\u5fc5\u987b\u8981\u5b9e\u73b0", "\n10.\u6570\u7ec4\u548c\u94fe\u8868\u7684\u533a\u522b", "\n\u6570\u7ec4\uff1a\u6570\u636e\u987a\u5e8f\u5b58\u50a8\uff0c\u56fa\u5b9a\u5927\u5c0f", "\n\u8fde\u8868\uff1a\u6570\u636e\u53ef\u4ee5\u968f\u673a\u5b58\u50a8\uff0c\u5927\u5c0f\u53ef\u52a8\u6001\u6539\u53d8", "12.ISO\u7684\u4e03\u5c42\u6a21\u578b\u662f\u4ec0\u4e48\uff1ftcp/udp\u662f\u5c5e\u4e8e\u54ea\u4e00\u5c42\uff1ftcp/udp\u6709\u4f55\u4f18\u7f3a\u70b9\uff1f", "\n\u5e94\u7528\u5c42", "\n\u8868\u793a\u5c42", "\n\u4f1a\u8bdd\u5c42", "\n\u8fd0\u8f93\u5c42", "\n\u7f51\u7edc\u5c42", "\n\u7269\u7406\u94fe\u8def\u5c42", "\n\u7269\u7406\u5c42", "\ntcp /udp\u5c5e\u4e8e\u8fd0\u8f93\u5c42", "\nTCP \u670d\u52a1\u63d0\u4f9b\u4e86\u6570\u636e\u6d41\u4f20\u8f93\u3001\u53ef\u9760\u6027\u3001\u6709\u6548\u6d41\u63a7\u5236\u3001\u5168\u53cc\u5de5\u64cd\u4f5c\u548c\u591a\u8def\u590d\u7528\u6280\u672f\u7b49\u3002", "\n\u4e0e TCP \u4e0d\u540c\uff0c UDP \u5e76\u4e0d\u63d0\u4f9b\u5bf9 IP \u534f\u8bae\u7684\u53ef\u9760\u673a\u5236\u3001\u6d41\u63a7\u5236\u4ee5\u53ca\u9519\u8bef\u6062\u590d\u529f\u80fd\u7b49\u3002\u7531\u4e8e", "\n UDP \u6bd4\u8f83\u7b80\u5355\uff0c UDP \u5934\u5305\u542b\u5f88\u5c11\u7684\u5b57\u8282\uff0c\u6bd4 TCP \u8d1f\u8f7d\u6d88\u8017\u5c11\u3002", "\ntcp: \u63d0\u4f9b\u7a33\u5b9a\u7684\u4f20\u8f93\u670d\u52a1\uff0c\u6709\u6d41\u91cf\u63a7\u5236\uff0c\u7f3a\u70b9\u662f\u5305\u5934\u5927\uff0c\u5197\u4f59\u6027\u4e0d\u597d", "\nudp: \u4e0d\u63d0\u4f9b\u7a33\u5b9a\u7684\u670d\u52a1\uff0c\u5305\u5934\u5c0f\uff0c\u5f00\u9500\u5c0f", "1\uff1a(void *)ptr \u548c (*(void**))ptr\u7684\u7ed3\u679c\u662f\u5426\u76f8\u540c\uff1f\u5176\u4e2dptr\u4e3a\u540c\u4e00\u4e2a\u6307\u9488", "\n.(void *)ptr \u548c (*(void**))ptr\u503c\u662f\u76f8\u540c\u7684", "2\uff1aint main()", "\n{", "\nint x=3;", "\nprintf(\u201c%d\u201d,x);", "\nreturn 1;", "\n}", "\n\u95ee\u51fd\u6570\u65e2\u7136\u4e0d\u4f1a\u88ab\u5176\u5b83\u51fd\u6570\u8c03\u7528\uff0c\u4e3a\u4ec0\u4e48\u8981\u8fd4\u56de1\uff1f", "\nmian\u4e2d\uff0cc\u6807\u51c6\u8ba4\u4e3a0\u8868\u793a\u6210\u529f\uff0c\u975e0\u8868\u793a\u9519\u8bef\u3002\u5177\u4f53\u7684\u503c\u662f\u67d0\u4e2d\u5177\u4f53\u51fa\u9519\u4fe1\u606f", "1\uff0c\u8981\u5bf9\u7edd\u5bf9\u5730\u57400\u00d7100000\u8d4b\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u7528", "\n(unsigned int*)0\u00d7100000 = 1234;", "\n\u90a3\u4e48\u8981\u662f\u60f3\u8ba9\u7a0b\u5e8f\u8df3\u8f6c\u5230\u7edd\u5bf9\u5730\u5740\u662f0\u00d7100000\u53bb\u6267\u884c\uff0c\u5e94\u8be5\u600e\u4e48\u505a\uff1f", "\n*((void (*)( ))0\u00d7100000 ) ( );", "\n\u9996\u5148\u8981\u5c060\u00d7100000\u5f3a\u5236\u8f6c\u6362\u6210\u51fd\u6570\u6307\u9488,\u5373:", "\n(void (*)())0\u00d7100000", "\n\u7136\u540e\u518d\u8c03\u7528\u5b83:", "\n*((void (*)())0\u00d7100000)();", "\n\u7528typedef\u53ef\u4ee5\u770b\u5f97\u66f4\u76f4\u89c2\u4e9b:", "\ntypedef void(*)() voidFuncPtr;", "\n*((voidFuncPtr)0\u00d7100000)();", "2\uff0c\u5df2\u77e5\u4e00\u4e2a\u6570\u7ec4table\uff0c\u7528\u4e00\u4e2a\u5b8f\u5b9a\u4e49\uff0c\u6c42\u51fa\u6570\u636e\u7684\u5143\u7d20\u4e2a\u6570", "\n#define NTBL", "\n#define NTBL (sizeof(table)/sizeof(table[0]))", "\u9762\u8bd5\u9898: \u7ebf\u7a0b\u4e0e\u8fdb\u7a0b\u7684\u533a\u522b\u548c\u8054\u7cfb? \u7ebf\u7a0b\u662f\u5426\u5177\u6709\u76f8\u540c\u7684\u5806\u6808? dll\u662f\u5426\u6709\u72ec\u7acb\u7684\u5806\u6808?", "\u8fdb\u7a0b\u662f\u6b7b\u7684\uff0c\u53ea\u662f\u4e00\u4e9b\u8d44\u6e90\u7684\u96c6\u5408\uff0c\u771f\u6b63\u7684\u7a0b\u5e8f\u6267\u884c\u90fd\u662f\u7ebf\u7a0b\u6765\u5b8c\u6210\u7684\uff0c\u7a0b\u5e8f\u542f\u52a8\u7684\u65f6\u5019", "\n\u64cd\u4f5c\u7cfb\u7edf\u5c31\u5e2e\u4f60\u521b\u5efa\u4e86\u4e00\u4e2a\u4e3b\u7ebf\u7a0b\u3002", "\u6bcf\u4e2a\u7ebf\u7a0b\u6709\u81ea\u5df1\u7684\u5806\u6808\u3002", "\nDLL\u4e2d\u6709\u6ca1\u6709\u72ec\u7acb\u7684\u5806\u6808\uff0c\u8fd9\u4e2a\u95ee\u9898\u4e0d\u597d\u56de\u7b54\uff0c\u6216\u8005\u8bf4\u8fd9\u4e2a\u95ee\u9898\u672c\u8eab\u662f\u5426\u6709\u95ee\u9898\u3002\u56e0\u4e3aDLL", "\n\u4e2d\u7684\u4ee3\u7801\u662f\u88ab\u67d0\u4e9b\u7ebf\u7a0b\u6240\u6267\u884c\uff0c\u53ea\u6709\u7ebf\u7a0b\u62e5\u6709\u5806\u6808\uff0c\u5982\u679cDLL\u4e2d\u7684\u4ee3\u7801\u662fEXE\u4e2d\u7684\u7ebf\u7a0b\u6240\u8c03", "\n\u7528\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u662f\u4e0d\u662f\u8bf4\u8fd9\u4e2aDLL\u6ca1\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u5806\u6808\uff1f\u5982\u679cDLL\u4e2d\u7684\u4ee3\u7801\u662f\u7531DLL\u81ea\u5df1\u521b", "\n\u5efa\u7684\u7ebf\u7a0b\u6240\u6267\u884c\uff0c\u90a3\u4e48\u662f\u4e0d\u662f\u8bf4DLL\u6709\u72ec\u7acb\u7684\u5806\u6808\uff1f", "\u4ee5\u4e0a\u8bb2\u7684\u662f\u5806\u6808\uff0c\u5982\u679c\u5bf9\u4e8e\u5806\u6765\u8bf4\uff0c\u6bcf\u4e2aDLL\u6709\u81ea\u5df1\u7684\u5806\uff0c\u6240\u4ee5\u5982\u679c\u662f\u4eceDLL\u4e2d\u52a8\u6001\u5206\u914d\u7684", "\n\u5185\u5b58\uff0c\u6700\u597d\u662f\u4eceDLL\u4e2d\u5220\u9664\uff0c\u5982\u679c\u4f60\u4eceDLL\u4e2d\u5206\u914d\u5185\u5b58\uff0c\u7136\u540e\u5728EXE\u4e2d\uff0c\u6216\u8005\u53e6\u5916\u4e00\u4e2aDLL\u4e2d", "\n\u5220\u9664\uff0c\u5f88\u6709\u53ef\u80fd\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83", "unsigned short A = 10;", "\nprintf(\u201c~A = %u\\n\u201d, ~A);", "char c=128;", "\nprintf(\u201cc=%d\\n\u201d,c);", "\u8f93\u51fa\u591a\u5c11\uff1f\u5e76\u5206\u6790\u8fc7\u7a0b", "\n\u7b2c\u4e00\u9898\uff0c\uff5eA \uff1d0xfffffff5,int\u503c \u4e3a\uff0d11\uff0c\u4f46\u8f93\u51fa\u7684\u662fuint\u3002\u6240\u4ee5\u8f93\u51fa4294967285", "\n\u7b2c\u4e8c\u9898\uff0cc\uff1d0\u00d780,\u8f93\u51fa\u7684\u662fint\uff0c\u6700\u9ad8\u4f4d\u4e3a1\uff0c\u662f\u8d1f\u6570\uff0c\u6240\u4ee5\u5b83\u7684\u503c\u5c31\u662f0\u00d700\u7684\u8865\u7801\u5c31\u662f12", "\n8\uff0c\u6240\u4ee5\u8f93\u51fa\uff0d128\u3002", "\n\u8fd9\u4e24\u9053\u9898\u90fd\u662f\u5728\u8003\u5bdf\u4e8c\u8fdb\u5236\u5411int\u6216uint\u8f6c\u6362\u65f6\u7684\u6700\u9ad8\u4f4d\u5904\u7406\u3002", "\u5206\u6790\u4e0b\u9762\u7684\u7a0b\u5e8f\uff1a", "\nvoid GetMemory(char **p,int num)", "\n{", "\n*p=(char *)malloc(num);", "}", "\nint main()", "\n{", "\nchar *str=NULL;", "GetMemory(&str,100);", "strcpy(str,\u201dhello\u201d);", "free(str);", "if(str!=NULL)", "\n{", "\nstrcpy(str,\u201dworld\u201d);", "\n}", "printf(\u201c\\n str is %s\u201d,str);", "\ngetchar();", "\n}", "\n\u95ee\u8f93\u51fa\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f\u5e0c\u671b\u5927\u5bb6\u80fd\u8bf4\u8bf4\u539f\u56e0\uff0c\u5148\u8c22\u8c22\u4e86", "\n\u8f93\u51fastr is world\u3002", "\nfree \u53ea\u662f\u91ca\u653e\u7684str\u6307\u5411\u7684\u5185\u5b58\u7a7a\u95f4,\u5b83\u672c\u8eab\u7684\u503c\u8fd8\u662f\u5b58\u5728\u7684.", "\n\u6240\u4ee5free\u4e4b\u540e\uff0c\u6709\u4e00\u4e2a\u597d\u7684\u4e60\u60ef\u5c31\u662f\u5c06str=NULL.", "\n\u6b64\u65f6str\u6307\u5411\u7a7a\u95f4\u7684\u5185\u5b58\u5df2\u88ab\u56de\u6536,\u5982\u679c\u8f93\u51fa\u8bed\u53e5\u4e4b\u524d\u8fd8\u5b58\u5728\u5206\u914d\u7a7a\u95f4\u7684\u64cd\u4f5c\u7684\u8bdd,\u8fd9\u6bb5\u5b58\u50a8", "\n\u7a7a\u95f4\u662f\u53ef\u80fd\u88ab\u91cd\u65b0\u5206\u914d\u7ed9\u5176\u4ed6\u53d8\u91cf\u7684,", "\n\u5c3d\u7ba1\u8fd9\u6bb5\u7a0b\u5e8f\u786e\u5b9e\u662f\u5b58\u5728\u5927\u5927\u7684\u95ee\u9898\uff08\u4e0a\u9762\u5404\u4f4d\u5df2\u7ecf\u8bf4\u5f97\u5f88\u6e05\u695a\u4e86\uff09\uff0c\u4f46\u662f\u901a\u5e38\u4f1a\u6253\u5370\u51fa", "\nworld\u6765\u3002", "\n\u8fd9\u662f\u56e0\u4e3a\uff0c\u8fdb\u7a0b\u4e2d\u7684\u5185\u5b58\u7ba1\u7406\u4e00\u822c\u4e0d\u662f\u7531\u64cd\u4f5c\u7cfb\u7edf\u5b8c\u6210\u7684\uff0c\u800c\u662f\u7531\u5e93\u51fd\u6570\u81ea\u5df1\u5b8c\u6210\u7684\u3002", "\n\u5f53\u4f60malloc\u4e00\u5757\u5185\u5b58\u7684\u65f6\u5019\uff0c\u7ba1\u7406\u5e93\u5411\u64cd\u4f5c\u7cfb\u7edf\u7533\u8bf7\u4e00\u5757\u7a7a\u95f4\uff08\u53ef\u80fd\u4f1a\u6bd4\u4f60\u7533\u8bf7\u7684\u5927\u4e00\u4e9b", "\n\uff09\uff0c\u7136\u540e\u5728\u8fd9\u5757\u7a7a\u95f4\u4e2d\u8bb0\u5f55\u4e00\u4e9b\u7ba1\u7406\u4fe1\u606f\uff08\u4e00\u822c\u662f\u5728\u4f60\u7533\u8bf7\u7684\u5185\u5b58\u524d\u9762\u4e00\u70b9\uff09\uff0c\u5e76\u5c06\u53ef\u7528", "\n\u5185\u5b58\u7684\u5730\u5740\u8fd4\u56de\u3002\u4f46\u662f\u91ca\u653e\u5185\u5b58\u7684\u65f6\u5019\uff0c\u7ba1\u7406\u5e93\u901a\u5e38\u90fd\u4e0d\u4f1a\u5c06\u5185\u5b58\u8fd8\u7ed9\u64cd\u4f5c\u7cfb\u7edf\uff0c\u56e0\u6b64\u4f60", "\n\u662f\u53ef\u4ee5\u7ee7\u7eed\u8bbf\u95ee\u8fd9\u5757\u5730\u5740\u7684\uff0c\u53ea\u4e0d\u8fc7\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u697c\u4e0a\u90fd\u8bf4\u8fc7\u4e86\uff0c\u6700\u597d\u522b\u8fd9\u4e48\u5e72\u3002", "\nDL:\u5728C++\u4e2d\u4f7f\u7528\u6307\u9488\u7684\u5f15\u7528\u4e5f\u53ef\u4ee5\u5728\u5176\u4ed6\u51fd\u6570\u5185\u90e8\u7533\u8bf7\u7a7a\u95f4\uff0c\u683c\u5f0f\u4e3aint *&p,\u7136\u540e\u7528\u6cd5\u4e00\u6837\uff0cc\u4e0d\u884c", "char a[10],strlen(a)\u4e3a\u4ec0\u4e48\u7b49\u4e8e15\uff1f\u8fd0\u884c\u7684\u7ed3\u679c", "#include \u201cstdio.h\u201d", "\n#include \u201cstring.h\u201d", "void main()", "\n{", "char aa[10];", "\nprintf(\u201c%d\u201d,strlen(aa));", "\n}", "sizeof()\u548c\u521d\u4e0d\u521d\u59cb\u5316\uff0c\u6ca1\u6709\u5173\u7cfb\uff1b", "\nstrlen()\u548c\u521d\u59cb\u5316\u6709\u5173\u3002", "char (*str)[20];/*str\u662f\u4e00\u4e2a\u6570\u7ec4\u6307\u9488\uff0c\u5373\u6307\u5411\u6570\u7ec4\u7684\u6307\u9488\uff0e*/", "\nchar *str[20];/*str\u662f\u4e00\u4e2a\u6307\u9488\u6570\u7ec4\uff0c\u5176\u5143\u7d20\u4e3a\u6307\u9488\u578b\u6570\u636e\uff0e*/", "1)\u7ed9\u5b9a\u7ed3\u6784struct A", "\n{", "\nchar t:4;", "\nchar k:4;", "\nunsigned short i:8;", "\nunsigned long m;", "\n};\u95eesizeof(A) = ?", "\n\u7ed9\u5b9a\u7ed3\u6784struct A", "\n{", "\nchar t:4; 4\u4f4d", "\nchar k:4; 4\u4f4d", "\nunsigned short i:8; 8\u4f4d", "\nunsigned long m; // \u504f\u79fb2\u5b57\u8282\u4fdd\u8bc14\u5b57\u8282\u5bf9\u9f50", "\n}; // \u51718\u5b57\u8282", "\n2)\u4e0b\u9762\u7684\u51fd\u6570\u5b9e\u73b0\u5728\u4e00\u4e2a\u6570\u4e0a\u52a0\u4e00\u4e2a\u6570\uff0c\u6709\u4ec0\u4e48\u9519\u8bef\uff1f\u8bf7\u6539\u6b63\u3002", "\nint add_n ( int n )", "\n{", "\nstatic int i = 100;", "\ni += n;", "\nreturn i;", "\n}", "\n\u5f53\u4f60\u7b2c\u4e8c\u6b21\u8c03\u7528\u65f6\u5f97\u4e0d\u5230\u6b63\u786e\u7684\u7ed3\u679c\uff0c\u96be\u9053\u4f60\u5199\u4e2a\u51fd\u6570\u5c31\u662f\u4e3a\u4e86\u8c03\u7528\u4e00\u6b21\uff1f\u95ee\u9898\u5c31\u51fa\u5728 s", "\ntatic\u4e0a\uff1f", "// \u5e2e\u5fd9\u5206\u6790\u4e00\u4e0b", "\n#include", "\u6c42\u51fd\u6570\u8fd4\u56de\u503c\uff0c\u8f93\u5165x=9999;", "\nint func \uff08 x \uff09", "\n{", "\nint countx = 0;", "\nwhile ( x )", "\n{", "\ncountx ++;", "\nx = x&(x-1);", "\n}", "\nreturn countx;", "\n}", "\n\u7ed3\u679c\u5462\uff1f", "\n\u77e5\u9053\u4e86\u8fd9\u662f\u7edf\u8ba19999\u7684\u4e8c\u8fdb\u5236\u6570\u503c\u4e2d\u6709\u591a\u5c11\u4e2a1\u7684\u51fd\u6570\uff0c\u4e14\u6709", "\n9999\uff1d9\u00d71024\uff0b512\uff0b256\uff0b15", "9\u00d71024\u4e2d\u542b\u67091\u7684\u4e2a\u6570\u4e3a2\uff1b", "\n512\u4e2d\u542b\u67091\u7684\u4e2a\u6570\u4e3a1\uff1b", "\n256\u4e2d\u542b\u67091\u7684\u4e2a\u6570\u4e3a1\uff1b", "\n15\u4e2d\u542b\u67091\u7684\u4e2a\u6570\u4e3a4\uff1b", "\n\u6545\u5171\u67091\u7684\u4e2a\u6570\u4e3a8\uff0c\u7ed3\u679c\u4e3a8\u3002", "\n1000 - 1 = 0111\uff0c\u6b63\u597d\u662f\u539f\u6570\u53d6\u53cd\u3002\u8fd9\u5c31\u662f\u539f\u7406\u3002", "\n\u7528\u8fd9\u79cd\u65b9\u6cd5\u6765\u6c421\u7684\u4e2a\u6570\u662f\u5f88\u6548\u7387\u5f88\u9ad8\u7684\u3002", "\n\u4e0d\u5fc5\u53bb\u4e00\u4e2a\u4e00\u4e2a\u5730\u79fb\u4f4d\u3002\u5faa\u73af\u6b21\u6570\u6700\u5c11\u3002", "int a,b,c \u8bf7\u5199\u51fd\u6570\u5b9e\u73b0C=a+b ,\u4e0d\u53ef\u4ee5\u6539\u53d8\u6570\u636e\u7c7b\u578b,\u5982\u5c06c\u6539\u4e3along int,\u5173\u952e\u662f\u5982\u4f55\u5904", "\n\u7406\u6ea2\u51fa\u95ee\u9898", "\nbool add (int a, int b,int *c)", "\n{", "\n*c=a+b;", "\nreturn (a>0 && b>0 &&(*c", "\u5206\u6790\uff1a", "\nstruct bit", "\n{ int a:3;", "\nint b:2;", "\nint c:3;", "\n};", "\nint main()", "\n{", "\nbit s;", "\nchar *c=(char*)&s;", "\ncout\n*c=0x99;", "\ncout \nint a=-1;", "\nprintf(\"%x\",a);", "\nreturn 0;", "\n}", "\n\u8f93\u51fa\u4e3a\u4ec0\u4e48\u662f", "\n4", "\n1", "\n-1", "\n-4", "\nffffffff", "\n\u56e0\u4e3a0x99\u5728\u5185\u5b58\u4e2d\u8868\u793a\u4e3a 100 11 001 , a = 001, b = 11, c = 100", "\n\u5f53c\u4e3a\u6709\u7b26\u5408\u6570\u65f6, c = 100, \u6700\u9ad81\u4e3a\u8868\u793ac\u4e3a\u8d1f\u6570\uff0c\u8d1f\u6570\u5728\u8ba1\u7b97\u673a\u7528\u8865\u7801\u8868\u793a\uff0c\u6240\u4ee5c =", "\n-4;\u540c\u7406", "\nb = -1;", "\n\u5f53c\u4e3a\u6709\u7b26\u5408\u6570\u65f6, c = 100,\u5373 c = 4,\u540c\u7406 b = 3", "\u4f4d\u57df \uff1a", "\n\u6709\u4e9b\u4fe1\u606f\u5728\u5b58\u50a8\u65f6\uff0c\u5e76\u4e0d\u9700\u8981\u5360\u7528\u4e00\u4e2a\u5b8c\u6574\u7684\u5b57\u8282\uff0c \u800c\u53ea\u9700\u5360\u51e0\u4e2a\u6216\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u3002\u4f8b\u5982", "\n\u5728\u5b58\u653e\u4e00\u4e2a\u5f00\u5173\u91cf\u65f6\uff0c\u53ea\u67090\u548c1 \u4e24\u79cd\u72b6\u6001\uff0c \u7528\u4e00\u4f4d\u4e8c\u8fdb\u4f4d\u5373\u53ef\u3002\u4e3a\u4e86\u8282\u7701\u5b58\u50a8\u7a7a\u95f4\uff0c\u5e76", "\n\u4f7f\u5904\u7406\u7b80\u4fbf\uff0c\uff23\u8bed\u8a00\u53c8\u63d0\u4f9b\u4e86\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u79f0\u4e3a\u201c\u4f4d\u57df\u201d\u6216\u201c\u4f4d\u6bb5\u201d\u3002\u6240\u8c13\u201c\u4f4d\u57df\u201d\u662f", "\n\u628a\u4e00\u4e2a\u5b57\u8282\u4e2d\u7684\u4e8c\u8fdb\u4f4d\u5212\u5206\u4e3a\u51e0\u4e2a\u4e0d\u540c\u7684\u533a\u57df\uff0c \u5e76\u8bf4\u660e\u6bcf\u4e2a\u533a\u57df\u7684\u4f4d\u6570\u3002\u6bcf\u4e2a\u57df\u6709\u4e00\u4e2a\u57df", "\n\u540d\uff0c\u5141\u8bb8\u5728\u7a0b\u5e8f\u4e2d\u6309\u57df\u540d\u8fdb\u884c\u64cd\u4f5c\u3002 \u8fd9\u6837\u5c31\u53ef\u4ee5\u628a\u51e0\u4e2a\u4e0d\u540c\u7684\u5bf9\u8c61\u7528\u4e00\u4e2a\u5b57\u8282\u7684\u4e8c\u8fdb\u5236\u4f4d", "\n\u57df\u6765\u8868\u793a\u3002\u4e00\u3001\u4f4d\u57df\u7684\u5b9a\u4e49\u548c\u4f4d\u57df\u53d8\u91cf\u7684\u8bf4\u660e\u4f4d\u57df\u5b9a\u4e49\u4e0e\u7ed3\u6784\u5b9a\u4e49\u76f8\u4eff\uff0c\u5176\u5f62\u5f0f\u4e3a\uff1a", "\nstruct \u4f4d\u57df\u7ed3\u6784\u540d", "\n{ \u4f4d\u57df\u5217\u8868 };", "\n\u5176\u4e2d\u4f4d\u57df\u5217\u8868\u7684\u5f62\u5f0f\u4e3a\uff1a \u7c7b\u578b\u8bf4\u660e\u7b26 \u4f4d\u57df\u540d\uff1a\u4f4d\u57df\u957f\u5ea6", "\n\u4f8b\u5982\uff1a", "\nstruct bs", "\n{", "\nint a:8;", "\nint b:2;", "\nint c:6;", "\n};", "\n\u4f4d\u57df\u53d8\u91cf\u7684\u8bf4\u660e\u4e0e\u7ed3\u6784\u53d8\u91cf\u8bf4\u660e\u7684\u65b9\u5f0f\u76f8\u540c\u3002 \u53ef\u91c7\u7528\u5148\u5b9a\u4e49\u540e\u8bf4\u660e\uff0c\u540c\u65f6\u5b9a\u4e49\u8bf4\u660e\u6216\u8005\u76f4", "\n\u63a5\u8bf4\u660e\u8fd9\u4e09\u79cd\u65b9\u5f0f\u3002\u4f8b\u5982\uff1a", "\nstruct bs", "\n{", "\nint a:8;", "\nint b:2;", "\nint c:6;", "\n}data;", "\n\u8bf4\u660edata\u4e3abs\u53d8\u91cf\uff0c\u5171\u5360\u4e24\u4e2a\u5b57\u8282\u3002\u5176\u4e2d\u4f4d\u57dfa\u53608\u4f4d\uff0c\u4f4d\u57dfb\u53602\u4f4d\uff0c\u4f4d\u57dfc\u53606\u4f4d\u3002\u5bf9\u4e8e\u4f4d", "\n\u57df\u7684\u5b9a\u4e49\u5c1a\u6709\u4ee5\u4e0b\u51e0\u70b9\u8bf4\u660e\uff1a", "1. \u4e00\u4e2a\u4f4d\u57df\u5fc5\u987b\u5b58\u50a8\u5728\u540c\u4e00\u4e2a\u5b57\u8282\u4e2d\uff0c\u4e0d\u80fd\u8de8\u4e24\u4e2a\u5b57\u8282\u3002\u5982\u4e00\u4e2a\u5b57\u8282\u6240\u5269\u7a7a\u95f4\u4e0d\u591f\u5b58\u653e\u53e6", "\n\u4e00\u4f4d\u57df\u65f6\uff0c\u5e94\u4ece\u4e0b\u4e00\u5355\u5143\u8d77\u5b58\u653e\u8be5\u4f4d\u57df\u3002\u4e5f\u53ef\u4ee5\u6709\u610f\u4f7f\u67d0\u4f4d\u57df\u4ece\u4e0b\u4e00\u5355\u5143\u5f00\u59cb\u3002\u4f8b\u5982\uff1a", "struct bs", "\n{", "\nunsigned a:4", "\nunsigned :0 /*\u7a7a\u57df*/", "\nunsigned b:4 /*\u4ece\u4e0b\u4e00\u5355\u5143\u5f00\u59cb\u5b58\u653e*/", "\nunsigned c:4", "\n}", "\n\u5728\u8fd9\u4e2a\u4f4d\u57df\u5b9a\u4e49\u4e2d\uff0ca\u5360\u7b2c\u4e00\u5b57\u8282\u76844\u4f4d\uff0c\u540e4\u4f4d\u586b0\u8868\u793a\u4e0d\u4f7f\u7528\uff0cb\u4ece\u7b2c\u4e8c\u5b57\u8282\u5f00\u59cb\uff0c\u5360\u75284", "\n\u4f4d\uff0cc\u5360\u75284\u4f4d\u3002", "2. \u7531\u4e8e\u4f4d\u57df\u4e0d\u5141\u8bb8\u8de8\u4e24\u4e2a\u5b57\u8282\uff0c\u56e0\u6b64\u4f4d\u57df\u7684\u957f\u5ea6\u4e0d\u80fd\u5927\u4e8e\u4e00\u4e2a\u5b57\u8282\u7684\u957f\u5ea6\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e0d\u80fd", "\n\u8d85\u8fc78\u4f4d\u4e8c\u8fdb\u4f4d\u3002", "3. \u4f4d\u57df\u53ef\u4ee5\u65e0\u4f4d\u57df\u540d\uff0c\u8fd9\u65f6\u5b83\u53ea\u7528\u6765\u4f5c\u586b\u5145\u6216\u8c03\u6574\u4f4d\u7f6e\u3002\u65e0\u540d\u7684\u4f4d\u57df\u662f\u4e0d\u80fd\u4f7f\u7528\u7684\u3002\u4f8b\u5982", "\n\uff1a", "\nstruct k", "\n{", "\nint a:1", "\nint :2 /*\u8be52\u4f4d\u4e0d\u80fd\u4f7f\u7528*/", "\nint b:3", "\nint c:2", "\n};", "\n\u4ece\u4ee5\u4e0a\u5206\u6790\u53ef\u4ee5\u770b\u51fa\uff0c\u4f4d\u57df\u5728\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u79cd\u7ed3\u6784\u7c7b\u578b\uff0c \u4e0d\u8fc7\u5176\u6210\u5458\u662f\u6309\u4e8c\u8fdb\u4f4d\u5206\u914d\u7684\u3002", "\u4e8c\u3001\u4f4d\u57df\u7684\u4f7f\u7528\u4f4d\u57df\u7684\u4f7f\u7528\u548c\u7ed3\u6784\u6210\u5458\u7684\u4f7f\u7528\u76f8\u540c\uff0c\u5176\u4e00\u822c\u5f62\u5f0f\u4e3a\uff1a \u4f4d\u57df\u53d8\u91cf\u540d\u2022", "\n\u4f4d\u57df\u540d \u4f4d\u57df\u5141\u8bb8\u7528\u5404\u79cd\u683c\u5f0f\u8f93\u51fa\u3002", "\nmain(){", "\nstruct bs", "\n{", "\nunsigned a:1;", "\nunsigned b:3;", "\nunsigned c:4;", "\n} bit,*pbit;", "\nbit.a=1;", "\nbit.b=7;", "\nbit.c=15;", "\npri", "\u6539\u9519\uff1a", "\n#include ", "int main(void) {", "int **p;", "\nint arr[100];", "p = &arr;", "return 0;", "\n}", "\n\u89e3\u7b54\uff1a", "\n\u641e\u9519\u4e86,\u662f\u6307\u9488\u7c7b\u578b\u4e0d\u540c,", "\nint **p; //\u4e8c\u7ea7\u6307\u9488", "\n&arr; //\u5f97\u5230\u7684\u662f\u6307\u5411\u7b2c\u4e00\u7ef4\u4e3a100\u7684\u6570\u7ec4\u7684\u6307\u9488", "\n#include ", "\u4e0b\u9762\u8fd9\u4e2a\u7a0b\u5e8f\u6267\u884c\u540e\u4f1a\u6709\u4ec0\u4e48\u9519\u8bef\u6216\u8005\u6548\u679c:", "\n#define MAX 255", "\nint main()", "\n{", "\nunsigned char A[MAX],i;//i\u88ab\u5b9a\u4e49\u4e3aunsigned char", "\nfor (i=0;i\nA[i]=i;", "\n}", "\n\u89e3\u7b54\uff1a\u6b7b\u5faa\u73af\u52a0\u6570\u7ec4\u8d8a\u754c\u8bbf\u95ee\uff08C/C++\u4e0d\u8fdb\u884c\u6570\u7ec4\u8d8a\u754c\u68c0\u67e5\uff09", "\nMAX=255", "\n\u6570\u7ec4A\u7684\u4e0b\u6807\u8303\u56f4\u4e3a:0..MAX-1,\u8fd9\u662f\u5176\u4e00..", "\n\u5176\u4e8c.\u5f53i\u5faa\u73af\u5230255\u65f6,\u5faa\u73af\u5185\u6267\u884c:", "\nA[255]=255;", "\n\u8fd9\u53e5\u672c\u8eab\u6ca1\u6709\u95ee\u9898..\u4f46\u662f\u8fd4\u56defor (i=0;i\n\u7531\u4e8eunsigned char\u7684\u53d6\u503c\u8303\u56f4\u5728(0..255),i++\u4ee5\u540ei\u53c8\u4e3a0\u4e86..\u65e0\u9650\u5faa\u73af\u4e0b\u53bb.", "struct name1{", "\nchar str;", "\nshort x;", "\nint num;", "\n}", "struct name2{", "\nchar str;", "\nint num;", "\nshort x;", "\n}", "sizeof(struct name1)=8,sizeof(struct name2)=12", "\n\u5728\u7b2c\u4e8c\u4e2a\u7ed3\u6784\u4e2d\uff0c\u4e3a\u4fdd\u8bc1num\u6309\u56db\u4e2a\u5b57\u8282\u5bf9\u9f50\uff0cchar\u540e\u5fc5\u987b\u7559\u51fa3\u5b57\u8282\u7684\u7a7a\u95f4\uff1b\u540c\u65f6\u4e3a\u4fdd\u8bc1", "\n\u6574\u4e2a\u7ed3\u6784\u7684\u81ea\u7136\u5bf9\u9f50\uff08\u8fd9\u91cc\u662f4\u5b57\u8282\u5bf9\u9f50\uff09\uff0c\u5728x\u540e\u8fd8\u8981\u8865\u9f502\u4e2a\u5b57\u8282\uff0c\u8fd9\u6837\u5c31\u662f12\u5b57\u8282\u3002", "intel\uff1a", "\nA.c \u548cB.c\u4e24\u4e2ac\u6587\u4ef6\u4e2d\u4f7f\u7528\u4e86\u4e24\u4e2a\u76f8\u540c\u540d\u5b57\u7684static\u53d8\u91cf,\u7f16\u8bd1\u7684\u65f6\u5019\u4f1a\u4e0d\u4f1a\u6709\u95ee\u9898?\u8fd9\u4e24", "\n\u4e2astatic\u53d8\u91cf\u4f1a\u4fdd\u5b58\u5230\u54ea\u91cc\uff08\u6808\u8fd8\u662f\u5806\u6216\u8005\u5176\u4ed6\u7684\uff09?", "\nstatic\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u8868\u660e\u8fd9\u4e2a\u53d8\u91cf\u4ec5\u5728\u672c\u6a21\u5757\u4e2d\u6709\u610f\u4e49\uff0c\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u6a21\u5757\u3002", "\n\u4ed6\u4eec\u90fd\u653e\u5728\u6570\u636e\u533a\uff0c\u4f46\u662f\u7f16\u8bd1\u5668\u5bf9\u4ed6\u4eec\u7684\u547d\u540d\u662f\u4e0d\u540c\u7684\u3002", "\n\u5982\u679c\u8981\u4f7f\u53d8\u91cf\u5728\u5176\u4ed6\u6a21\u5757\u4e5f\u6709\u610f\u4e49\u7684\u8bdd\uff0c\u9700\u8981\u4f7f\u7528extern\u5173\u952e\u5b57\u3002", "struct s1", "\n{", "\nint i: 8;", "\nint j: 4;", "\nint a: 3;", "\ndouble b;", "\n};", "struct s2", "\n{", "\nint i: 8;", "\nint j: 4;", "\ndouble b;", "\nint a:3;", "\n};", "printf(\"sizeof(s1)= %d\\n\", sizeof(s1));", "\nprintf(\"sizeof(s2)= %d\\n\", sizeof(s2));", "\nresult: 16, 24", "\n\u7b2c\u4e00\u4e2astruct s1", "\n{", "\nint i: 8;", "\nint j: 4;", "\nint a: 3;", "\ndouble b;", "\n};", "\n\u7406\u8bba\u4e0a\u662f\u8fd9\u6837\u7684\uff0c\u9996\u5148\u662fi\u5728\u76f8\u5bf90\u7684\u4f4d\u7f6e\uff0c\u53608\u4f4d\u4e00\u4e2a\u5b57\u8282\uff0c\u7136\u540e\uff0cj\u5c31\u5728\u76f8\u5bf9\u4e00\u4e2a\u5b57\u8282\u7684", "\n\u4f4d\u7f6e\uff0c\u7531\u4e8e\u4e00\u4e2a\u4f4d\u7f6e\u7684\u5b57\u8282\u6570\u662f4\u4f4d\u7684\u500d\u6570\uff0c\u56e0\u6b64\u4e0d\u7528\u5bf9\u9f50\uff0c\u5c31\u653e\u5728\u90a3\u91cc\u4e86\uff0c\u7136\u540e\u662fa\uff0c\u8981", "\n\u57283\u4f4d\u7684\u500d\u6570\u5173\u7cfb\u7684\u4f4d\u7f6e\u4e0a\uff0c\u56e0\u6b64\u8981\u79fb\u4e00\u4f4d\uff0c\u572815\u4f4d\u7684\u4f4d\u7f6e\u4e0a\u653e\u4e0b\uff0c\u76ee\u524d\u603b\u5171\u662f18\u4f4d\uff0c\u6298\u7b97", "\n\u8fc7\u6765\u662f2\u5b57\u82822\u4f4d\u7684\u6837\u5b50\uff0c\u7531\u4e8edouble\u662f8\u5b57\u8282\u7684\uff0c\u56e0\u6b64\u8981\u5728\u76f8\u5bf90\u8981\u662f8\u4e2a\u5b57\u8282\u7684\u4f4d\u7f6e\u4e0a\u653e\u4e0b", "\n\uff0c\u56e0\u6b64\u4ece18\u4f4d\u5f00\u59cb\u52308\u4e2a\u5b57\u8282\u4e4b\u95f4\u7684\u4f4d\u7f6e\u88ab\u5ffd\u7565\uff0c\u76f4\u63a5\u653e\u57288\u5b57\u8282\u7684\u4f4d\u7f6e\u4e86\uff0c\u56e0\u6b64\uff0c\u603b\u5171\u662f", "\n16\u5b57\u8282\u3002", "\u7b2c\u4e8c\u4e2a\u6700\u540e\u4f1a\u5bf9\u7167\u662f\u4e0d\u662f\u7ed3\u6784\u4f53\u5185\u6700\u5927\u6570\u636e\u7684\u500d\u6570\uff0c\u4e0d\u662f\u7684\u8bdd\uff0c\u4f1a\u8865\u6210\u662f\u6700\u5927\u6570\u636e\u7684\u500d\u6570", "1\uff09\u8bfb\u6587\u4ef6file1.txt\u7684\u5185\u5bb9\uff08\u4f8b\u5982\uff09\uff1a", "\n12", "\n34", "\n56", "\n\u8f93\u51fa\u5230file2.txt\uff1a", "\n56", "\n34", "\n12", "\n\uff08\u9006\u5e8f\uff09", "\n2\uff09\u8f93\u51fa\u548c\u4e3a\u4e00\u4e2a\u7ed9\u5b9a\u6574\u6570\u7684\u6240\u6709\u7ec4\u5408", "\n\u4f8b\u5982n=5", "\n5=1+4\uff1b5=2+3\uff08\u76f8\u52a0\u7684\u6570\u4e0d\u80fd\u91cd\u590d\uff09", "\n\u5219\u8f93\u51fa", "\n1\uff0c4\uff1b2\uff0c3\u3002", "\n\u671b\u9ad8\u624b\u8d50\u6559\uff01\uff01", "\u7b2c\u4e00\u9898,\u6ce8\u610f\u53ef\u589e\u957f\u6570\u7ec4\u7684\u5e94\u7528.", "\n#include ", "int main(void)", "\n{", "\nint MAX = 10;", "\nint *a = (int *)malloc(MAX * sizeof(int));", "\nint *b;", "FILE *fp1;", "\nFILE *fp2;", "fp1 = fopen(\u201ca.txt\u201d,\u201dr\u201d);", "\nif(fp1 == NULL)", "\n{printf(\u201cerror1\u2033);", "\nexit(-1);", "\n}", "fp2 = fopen(\u201cb.txt\u201d,\u201dw\u201d);", "\nif(fp2 == NULL)", "\n{printf(\u201cerror2\u2033);", "\nexit(-1);", "\n}", "int i = 0;", "\nint j = 0;", "while(fscanf(fp1,\u201d%d\u201d,&a[i]) != EOF)", "\n{", "\ni++;", "\nj++;", "\nif(i >= MAX)", "\n{", "\nMAX = 2 * MAX;", "\nb = (int*)realloc(a,MAX * sizeof(int));", "\nif(b == NULL)", "\n{", "\nprintf(\u201cerror3\u2033);", "\nexit(-1);", "\n}", "\na = b;", "\n}", "\n}", "for(;\u2013j >= 0;)", "\nfprintf(fp2,\u201d%d\\n\u201d,a[j]);", "fclose(fp1);", "\nfclose(fp2);", "return 0;", "}", "\u7b2c\u4e8c\u9898.", "\n#include ", "int main(void)", "\n{", "\nunsigned long int i,j,k;", "printf(\u201cplease input the number\\n\u201d);", "\nscanf(\u201c%d\u201d,&i);", "\nif( i % 2 == 0)", "\nj = i / 2;", "\nelse", "\nj = i / 2 + 1;", "printf(\u201cThe result is \\n\u201d);", "\nfor(k = 0; k \nprintf(\"%d = %d + %d\\n\",i,k,i - k);", "\nreturn 0;", "\n}", "#include ", "\u5144\u5f1f,\u8fd9\u6837\u7684\u9898\u76ee\u82e5\u662f\u505a\u4e0d\u51fa\u6765\u5b9e\u5728\u662f\u6709\u4e9b\u4e0d\u5e94\u8be5, \u7ed9\u4f60\u4e00\u4e2a\u9012\u89c4\u53cd\u5411\u8f93\u51fa\u5b57\u7b26\u4e32\u7684\u4f8b\u5b50,", "\n\u53ef\u8c13\u662f\u53cd\u5e8f\u7684\u7ecf\u5178\u4f8b\u7a0b.", "void inverse(char *p)", "\n{", "\nif( *p = = '\\0' )", "\nreturn;", "\ninverse( p+1 );", "\nprintf( \"%c\", *p );", "\n}", "int main(int argc, char *argv[])", "\n{", "\ninverse(\"abc\\0\");", "return 0;", "\n}", "\u501f\u7b7e\u4e86\u697c\u4e0a\u7684\u201c\u9012\u89c4\u53cd\u5411\u8f93\u51fa\u201d", "\n#include ", "\u5728\u5bf9\u9f50\u4e3a4\u7684\u60c5\u51b5\u4e0b", "\nstruct BBB", "\n{", "\nlong num\uff1b", "\nchar *name;", "\nshort int data;", "\nchar ha;", "\nshort ba[5];", "\n}*p;", "\np=0\u00d71000000;", "\np+0\u00d7200=____;", "\n(Ulong)p+0\u00d7200=____;", "\n(char*)p+0\u00d7200=____;", "\n\u5e0c\u671b\u5404\u4f4d\u8fbe\u4eba\u7ed9\u51fa\u7b54\u6848\u548c\u539f\u56e0\uff0c\u8c22\u8c22\u62c9", "\n\u89e3\u7b54\uff1a\u5047\u8bbe\u572832\u4f4dCPU\u4e0a\uff0c", "\nsizeof(long) = 4 bytes", "\nsizeof(char *) = 4 bytes", "\nsizeof(short int) = sizeof(short) = 2 bytes", "\nsizeof(char) = 1 bytes", "\u7531\u4e8e\u662f4\u5b57\u8282\u5bf9\u9f50\uff0c", "\nsizeof(struct BBB) = sizeof(*p)", "\n= 4 + 4 + 2 + 1 + 1/*\u8865\u9f50*/ + 2*5 + 2/*\u8865\u9f50*/ = 24 bytes (\u7ecfDev-C++\u9a8c\u8bc1)", "p=0\u00d71000000;", "\np+0\u00d7200=____;", "\n= 0\u00d71000000 + 0\u00d7200*24", "(Ulong)p+0\u00d7200=____;", "\n= 0\u00d71000000 + 0\u00d7200", "(char*)p+0\u00d7200=____;", "\n= 0\u00d71000000 + 0\u00d7200*4", "\u4f60\u53ef\u4ee5\u53c2\u8003\u4e00\u4e0b\u6307\u9488\u8fd0\u7b97\u7684\u7ec6\u8282", "\u5199\u4e00\u6bb5\u7a0b\u5e8f\uff0c\u627e\u51fa\u6570\u7ec4\u4e2d\u7b2ck\u5927\u5c0f\u7684\u6570\uff0c\u8f93\u51fa\u6570\u6240\u5728\u7684\u4f4d\u7f6e\u3002\u4f8b\u5982{2\uff0c4\uff0c3\uff0c4\uff0c7}\u4e2d\uff0c\u7b2c", "\n\u4e00\u5927\u7684\u6570\u662f7\uff0c\u4f4d\u7f6e\u57284\u3002\u7b2c\u4e8c\u5927\u3001\u7b2c\u4e09\u5927\u7684\u6570\u90fd\u662f4\uff0c\u4f4d\u7f6e\u57281\u30013\u968f\u4fbf\u8f93\u51fa\u54ea\u4e00\u4e2a\u5747\u53ef\u3002\u51fd", "\n\u6570\u63a5\u53e3\u4e3a\uff1aint find_orderk(const int* narry,const int n,const int k)", "\n\u8981\u6c42\u7b97\u6cd5\u590d\u6742\u5ea6\u4e0d\u80fd\u662fO(n^2\uff09", "\n\u8c22\u8c22\uff01", "\n\u53ef\u4ee5\u5148\u7528\u5feb\u901f\u6392\u5e8f\u8fdb\u884c\u6392\u5e8f\uff0c\u5176\u4e2d\u7528\u53e6\u5916\u4e00\u4e2a\u8fdb\u884c\u5730\u5740\u67e5\u627e", "\n\u4ee3\u7801\u5982\u4e0b\uff0c\u5728VC++6.0\u8fd0\u884c\u901a\u8fc7\u3002\u7ed9\u5206\u5427^-^", "//\u5feb\u901f\u6392\u5e8f", "#include", "usingnamespacestd;", "intPartition (int*L,intlow,int high)", "\n{", "\ninttemp = L[low];", "\nintpt = L[low];", "while (low \n{", "\nwhile (low = pt)", "\n\u2013high;", "\nL[low] = L[high];", "\nwhile (low \n++low;", "\nL[low] = temp;", "\n}", "\nL[low] = temp;", "returnlow;", "\n}", "voidQSort (int*L,intlow,int high)", "\n{", "\nif (low \n{", "\nintpl = Partition (L,low,high);", "QSort (L,low,pl - 1);", "\nQSort (L,pl + 1,high);", "\n}", "\n}", "intmain ()", "\n{", "\nintnarry[100],addr[100];", "\nintsum = 1,t;", "cout \ncin >> t;", "while (t != -1)", "\n{", "\nnarry[sum] = t;", "\naddr[sum - 1] = t;", "\nsum++;", "cin >> t;", "\n}", "sum -= 1;", "\nQSort (narry,1,sum);", "for (int i = 1; i \ncout \ncout \n", "intk;", "\ncout \ncin >> k;", "intaa = 1;", "\nintkk = 0;", "\nfor (;;)", "\n{", "\nif (aa == k)", "\nbreak;", "\nif (narry[kk] != narry[kk + 1])", "\n{", "\naa += 1;", "\nkk++;", "\n}", "}", "cout \ncout \nfor (i = 0;i \n{", "\nif (addr[i] == narry[sum - kk])", "\ncout \n}", "return0;", "\n}", "1\u3001\u627e\u9519", "\nVoid test1()", "\n{", "\nchar string[10];", "\nchar* str1=\"0123456789\";", "\nstrcpy(string, str1);// \u6ea2\u51fa\uff0c\u5e94\u8be5\u5305\u62ec\u4e00\u4e2a\u5b58\u653e'\\0'\u7684\u5b57\u7b26string[11]", "\n}", "Void test2()", "\n{", "\nchar string[10], str1[10];", "\nfor(I=0; I\n{", "\nstr1[i] ='a';", "\n}", "\nstrcpy(string, str1);// I\uff0ci\u6ca1\u6709\u58f0\u660e\u3002", "\n}", "Void test3(char* str1)", "\n{", "\nchar string[10];", "\nif(strlen(str1)\n{", "\nstrcpy(string, str1);", "\n}", "\n}", "2.", "\nvoid g(int**);", "\nint main()", "\n{", "\nint line[10],i;", "\nint *p=line; //p\u662f\u5730\u5740\u7684\u5730\u5740", "\nfor (i=0;i\n{", "\n*p=i;", "\ng(&p);//\u6570\u7ec4\u5bf9\u5e94\u7684\u503c\u52a01", "\n}", "\nfor(i=0;i\nprintf(\"%d\\n\",line[i]);", "\nreturn 0;", "\n}", "void g(int**p)", "\n{", "\n(**p)++;", "\n(*p)++;// \u65e0\u6548", "\n}", "\n\u8f93\u51fa\uff1a", "\n1", "\n2", "\n3", "\n4", "\n5", "\n6", "\n7", "\n8", "\n9", "\n10", "\n3. \u5199\u51fa\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u679c", "int sum(int a)", "\n{", "\nauto int c=0;", "\nstatic int b=3;", "\nc+=1;", "\nb+=2;", "\nreturn(a+b+c);", "\n}", "void main()", "\n{", "\nint I;", "\nint a=2;", "\nfor(I=0;I\n{", "\nprintf(\"%d,\", sum(a));", "\n}", "\n}", "\n// static\u4f1a\u4fdd\u5b58\u4e0a\u6b21\u7ed3\u679c\uff0c\u8bb0\u4f4f\u8fd9\u4e00\u70b9\uff0c\u5269\u4e0b\u7684\u81ea\u5df1\u5199", "\n\u8f93\u51fa\uff1a8,10,12,14,16,", "4.", "int func(int a)", "\n{", "\nint b;", "\nswitch(a)", "\n{", "\ncase 1: 30;", "\ncase 2: 20;", "\ncase 3: 16;", "\ndefault: 0", "\n}", "\nreturn b;", "\n}", "\n\u5219func(1)=?", "\n// b\u5b9a\u4e49\u540e\u5c31\u6ca1\u6709\u8d4b\u503c\u3002", "5:", "\nint a[3];", "\na[0]=0; a[1]=1; a[2]=2;", "\nint *p, *q;", "\np=a;", "\nq=&a[2];", "\n\u5219a[q-p]=a[2]", "\n\u89e3\u91ca\uff1a\u6307\u9488\u4e00\u6b21\u79fb\u52a8\u4e00\u4e2aint\u4f46\u8ba1\u6570\u4e3a1", "\u4eca\u5929\u65e9\u4e0a\u7684\u9762\u8bd5\u98989\u9053\uff0c\u6bd4\u8f83\u96be\uff0c\u5411\u725b\u4eba\u8bf7\u6559\uff0c\u56fd\u5185\u7684\u4e00\u725b\u516c\u53f8\uff0c\u5750\u843d\u5728\u5317\u4eac\u5317\u56db\u73af\u67d0\u5927\u53a6", "\n\uff1a", "\n1\u3001\u7ebf\u5f62\u8868a\u3001b\u4e3a\u4e24\u4e2a\u6709\u5e8f\u5347\u5e8f\u7684\u7ebf\u5f62\u8868\uff0c\u7f16\u5199\u4e00\u7a0b\u5e8f\uff0c\u4f7f\u4e24\u4e2a\u6709\u5e8f\u7ebf\u5f62\u8868\u5408\u5e76\u6210\u4e00\u4e2a\u6709\u5e8f", "\n\u5347\u5e8f\u7ebf\u5f62\u8868h\uff1b", "\n\u7b54\u6848\u5728 \u8bf7\u5316\u5927\u5b66 \u4e25\u9510\u654f\u300a\u6570\u636e\u7ed3\u6784\u7b2c\u4e8c\u7248\u300b\u7b2c\u4e8c\u7ae0\u4f8b\u9898\uff0c\u6570\u636e\u7ed3\u6784\u5f53\u4e2d\uff0c\u8fd9\u4e2a\u53eb\u505a\uff1a\u4e24", "\n\u8def\u5f52\u5e76\u6392\u5e8f", "\nLinklist *unio(Linklist *p,Linklist *q){", "\nlinklist *R,*pa,*qa,*ra;", "\npa=p;", "\nqa=q;", "\nR=ra=p;", "\nwhile(pa->next!=NULL&&qa->next!=NULL){", "\nif(pa->data>qa->data){", "\nra->next=qa;", "\nqa=qa->next;", "\n}", "\nelse{", "\nra->next=pa;", "\npa=pa->next;", "\n}", "\n}", "\nif(pa->next!=NULL)", "\nra->next=pa;", "\nif(qa->next!=NULL)", "\nra->next==qa;", "\nreturn R;", "\n}", "\n2\u3001\u8fd0\u7528\u56db\u8272\u5b9a\u7406\uff0c\u4e3aN\u4e2a\u5c40\u57df\u4e3e\u884c\u914d\u8272\uff0c\u989c\u8272\u4e3a1\u30012\u30013\u30014\u56db\u79cd\uff0c\u53e6\u6709\u6570\u7ec4adj[][N]\uff0c\u5982", "\nadj[i][j]=1\u5219\u8868\u793ai\u533a\u57df\u4e0ej\u533a\u57df\u76f8\u90bb\uff0c\u6570\u7ec4color[N]\uff0c\u5982color[i]=1,\u8868\u793ai\u533a\u57df\u7684\u989c\u8272\u4e3a", "\n1\u53f7\u989c\u8272\u3002", "\n\u56db\u8272\u586b\u5145", "\n3\u3001\u7528\u9012\u5f52\u7b97\u6cd5\u5224\u65ad\u6570\u7ec4a[N]\u662f\u5426\u4e3a\u4e00\u4e2a\u9012\u589e\u6570\u7ec4\u3002", "\n\u9012\u5f52\u7684\u65b9\u6cd5\uff0c\u8bb0\u5f55\u5f53\u524d\u6700\u5927\u7684\uff0c\u5e76\u4e14\u5224\u65ad\u5f53\u524d\u7684\u662f\u5426\u6bd4\u8fd9\u4e2a\u8fd8\u5927\uff0c\u5927\u5219\u7ee7\u7eed\uff0c\u5426\u5219\u8fd4\u56defa", "\nlse\u7ed3\u675f\uff1a", "\nbool fun( int a[], int n )", "\n{", "\nif( n= =1 )", "\nreturn true;", "\nif( n= =2 )", "\nreturn a[n-1] >= a[n-2];", "\nreturn fun( a,n-1) && ( a[n-1] >= a[n-2] );", "\n}", "\n4\u3001\u7f16\u5199\u7b97\u6cd5\uff0c\u4ece10\u4ebf\u4e2a\u6d6e\u70b9\u6570\u5f53\u4e2d\uff0c\u9009\u51fa\u5176\u4e2d\u6700\u5927\u768410000\u4e2a\u3002", "\n\u7528\u5916\u90e8\u6392\u5e8f\uff0c\u5728\u300a\u6570\u636e\u7ed3\u6784\u300b\u4e66\u4e0a\u6709", "\n\u300a\u8ba1\u7b97\u65b9\u6cd5\u5bfc\u8bba\u300b\u5728\u627e\u5230\u7b2cn\u5927\u7684\u6570\u7684\u7b97\u6cd5\u4e0a\u52a0\u5de5", "\n5\u3001\u7f16\u5199\u4e00unix\u7a0b\u5e8f\uff0c\u9632\u6b62\u50f5\u5c38\u8fdb\u7a0b\u7684\u51fa\u73b0.", "Top", " \u56de\u590d\u4eba\uff1afree131(\u767d\u65e5?\u505a\u68a6!) ( ) \u4fe1\u8a89\uff1a100 2006-4-17 10:17:34 \u5f97\u5206:0", "?", "\n\u540c\u5b66\u76844\u9053\u9762\u8bd5\u9898\uff0c\u5e94\u8058\u7684\u804c\u4f4d\u662f\u641c\u7d22\u5f15\u64ce\u5de5\u7a0b\u5e08\uff0c\u540e\u4e24\u9053\u8d85\u7ea7\u96be\uff0c\uff08\u5e0c\u671b\u5927\u5bb6\u591a\u7ed9\u4e00\u4e9b\u7b97", "\n\u53d1\uff09", "\n1.\u7ed9\u4e24\u4e2a\u6570\u7ec4\u548c\u4ed6\u4eec\u7684\u5927\u5c0f\uff0c\u8fd8\u6709\u4e00\u52a8\u6001\u5f00\u8f9f\u7684\u5185\u5b58\uff0c\u6c42\u4ea4\u96c6\uff0c\u628a\u4ea4\u96c6\u653e\u5230\u52a8\u6001\u5185\u5b58dong", "\ntai\uff0c\u5e76\u4e14\u8fd4\u56de\u4ea4\u96c6\u4e2a\u6570", "\nlong jiaoji(long* a[],long b[],long* alength,long blength,long* dongtai[])", "\n2.\u5355\u8fde\u8868\u7684\u5efa\u7acb\uff0c\u628a\u2019a'\u2013\u2019z\u201926\u4e2a\u5b57\u6bcd\u63d2\u5165\u5230\u8fde\u8868\u4e2d\uff0c\u5e76\u4e14\u5012\u53d9\uff0c\u8fd8\u8981\u6253\u5370\uff01", "\n\u65b9\u6cd51\uff1a", "\ntypedef struct val", "\n{ int date_1;", "\nstruct val *next;", "\n}*p;", "void main(void)", "\n{ char c;", "for(c=122;c>=97;c\u2013)", "\n{ p.date=c;", "\np=p->next;", "\n}", "p.next=NULL;", "\n}", "\n}", "\n\u65b9\u6cd52\uff1a", "\nnode *p = NULL;", "\nnode *q = NULL;", "node *head = (node*)malloc(sizeof(node));", "\nhead->data = \u2018 \u2018;head->next=NULL;", "node *first = (node*)malloc(sizeof(node));", "\nfirst->data = \u2018a\u2019;first->next=NULL;head->next = first;", "\np = first;", "int longth = \u2018z\u2019 \u2013 \u2018b\u2019;", "\nint i=0;", "\nwhile ( i\n{", "\nnode *temp = (node*)malloc(sizeof(node));", "\ntemp->data = \u2018b\u2019+i;temp->next=NULL;q=temp;", "head->next = temp; temp->next=p;p=q;", "\ni++;", "\n}", "print(head);", "3.\u53ef\u6015\u7684\u9898\u76ee\u7ec8\u4e8e\u6765\u4e86", "\n\u8c61\u641c\u7d22\u7684\u8f93\u5165\u4fe1\u606f\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u7edf\u8ba1300\u4e07\u8f93\u5165\u4fe1\u606f\u4e2d\u7684\u6700\u70ed\u95e8\u7684\u524d\u5341\u6761\uff0c\u6211\u4eec\u6bcf\u6b21\u8f93\u5165", "\n\u7684\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e3a\u4e0d\u8d85\u8fc7255byte,\u5185\u5b58\u4f7f\u7528\u53ea\u67091G,", "\n\u8bf7\u63cf\u8ff0\u601d\u60f3\uff0c\u5199\u51fa\u7b97\u53d1\uff08c\u8bed\u8a00\uff09\uff0c\u7a7a\u95f4\u548c\u65f6\u95f4\u590d\u6742\u5ea6\uff0c", "\n4.\u56fd\u5185\u7684\u4e00\u4e9b\u5e16\u5427\uff0c\u5982baidu,\u6709\u51e0\u5341\u4e07\u4e2a\u4e3b\u9898\uff0c\u5047\u8bbe\u6bcf\u4e00\u4e2a\u4e3b\u9898\u90fd\u6709\u4e0a\u4ebf\u7684\u8ddf\u5e16\u5b50\uff0c\u600e\u4e48", "\n\u6837\u8bbe\u8ba1\u8fd9\u4e2a\u7cfb\u7edf\u901f\u5ea6\u6700\u597d\uff0c\u8bf7\u63cf\u8ff0\u601d\u60f3\uff0c\u5199\u51fa\u7b97\u53d1\uff08c\u8bed\u8a00\uff09\uff0c\u7a7a\u95f4\u548c\u65f6\u95f4\u590d\u6742\u5ea6\uff0c", "#include string.h", "\nmain(void)", "\n{ char *src=\u201dhello,world\u201d;", "\nchar *dest=NULL;", "\ndest=(char *)malloc(strlen(src));", "\nint len=strlen(str);", "\nchar *d=dest;", "\nchar *s=src[len];", "\nwhile(len\u2013!=0)", "\nd++=s\u2013;", "\nprintf(\u201c%s\u201d,dest);", "\n}", "\n\u627e\u51fa\u9519\u8bef\uff01\uff01", "\n#include \u201cstring.h\u201d", "\n#include \u201cstdio.h\u201d", "\n#include \u201cmalloc.h\u201d", "\nmain(void)", "\n{", "\nchar *src=\u201dhello,world\u201d;", "\nchar *dest=NULL;", "\ndest=(char *)malloc(sizeof(char)*(strlen(src)+1));", "\nint len=strlen(src);", "\nchar *d=dest;", "\nchar *s=src+len-1;", "\nwhile(len\u2013!=0)", "\n*d++=*s\u2013;", "\n*d=\u2019\\0\u2032;", "\nprintf(\u201c%s\u201d,dest);", "\n}", "1. \u7b80\u8ff0\u4e00\u4e2aLinux\u9a71\u52a8\u7a0b\u5e8f\u7684\u4e3b\u8981\u6d41\u7a0b\u4e0e\u529f\u80fd\u3002", "2. \u8bf7\u5217\u4e3e\u4e00\u4e2a\u8f6f\u4ef6\u4e2d\u65f6\u95f4\u6362\u7a7a\u95f4\u6216\u8005\u7a7a\u95f4\u6362\u65f6\u95f4\u7684\u4f8b\u5b50\u3002", "\nvoid swap(int a,int b)", "\n{", "\nint c; c=a;a=b;b=a;", "\n}", "\n\u2014>\u7a7a\u4f18", "\nvoid swap(int a,int b)", "\n{", "\na=a+b;b=a-b;a=a-b;", "\n}", "\n6. \u8bf7\u95ee\u4e00\u4e0b\u7a0b\u5e8f\u5c06\u8f93\u51fa\u4ec0\u4e48\u7ed3\u679c\uff1f", "\nchar *RetMenory(void)", "\n{", "\nchar p[] = \u201chellow world\u201d;", "\nreturn p;", "\n}", "\nvoid Test(void)", "\n{", "\nchar *str = NULL;", "\nstr = RetMemory();", "\nprintf(str);", "\n}", "\nRetMenory\u6267\u884c\u5b8c\u6bd5\uff0cp\u8d44\u6e90\u88ab\u56de\u6536\uff0c\u6307\u5411\u672a\u77e5\u5730\u5740\u3002\u8fd4\u56de\u5730\u5740\uff0cstr\u7684\u5185\u5bb9\u5e94\u662f\u4e0d\u53ef\u9884\u6d4b\u7684", "\n, \u6253\u5370\u7684\u5e94\u8be5\u662fstr\u7684\u5730\u5740", "\u5199\u4e00\u4e2a\u51fd\u6570,\u5b83\u7684\u539f\u5f62\u662fint continumax(char *outputstr,char *intputstr)", "\n\u529f\u80fd\uff1a", "\n\u5728\u5b57\u7b26\u4e32\u4e2d\u627e\u51fa\u8fde\u7eed\u6700\u957f\u7684\u6570\u5b57\u4e32\uff0c\u5e76\u628a\u8fd9\u4e2a\u4e32\u7684\u957f\u5ea6\u8fd4\u56de\uff0c\u5e76\u628a\u8fd9\u4e2a\u6700\u957f\u6570\u5b57\u4e32\u4ed8\u7ed9\u5176", "\n\u4e2d\u4e00\u4e2a\u51fd\u6570\u53c2\u6570outputstr\u6240\u6307\u5185\u5b58\u3002\u4f8b\u5982\uff1a\u201dabcd12345ed125ss123456789\u2033\u7684\u9996\u5730\u5740\u4f20\u7ed9", "\nintputstr\u540e\uff0c\u51fd\u6570\u5c06\u8fd4\u56de", "\n9\uff0coutputstr\u6240\u6307\u7684\u503c\u4e3a123456789", "\nint continumax(char *outputstr, char *inputstr)", "\n{", "\nchar *in = inputstr, *out = outputstr, *temp, *final;", "\nint count = 0, maxlen = 0;", "while( *in != \u2018\\0\u2032 )", "\n{", "\nif( *in > 47 && *in \n{", "\nfor(temp = in; *in > 47 && *in \ncount++;", "\n}", "\nelse", "\nin++;", "if( maxlen \n{", "\nmaxlen = count;", "\ncount = 0;", "\nfinal = temp;", "\n}", "\n}", "\nfor(int i = 0; i \n{", "\n*out = *final;", "\nout++;", "\nfinal++;", "\n}", "\n*out = '\\0';", "\nreturn maxlen;", "\n}", "\u4e0d\u7528\u5e93\u51fd\u6570,\u7528C\u8bed\u8a00\u5b9e\u73b0\u5c06\u4e00\u6574\u578b\u6570\u5b57\u8f6c\u5316\u4e3a\u5b57\u7b26\u4e32", "\n\u65b9\u6cd51\uff1a", "\nint getlen(char *s){", "\nint n;", "\nfor(n = 0; *s != '\\0'; s++)", "\nn++;", "\nreturn n;", "\n}", "\nvoid reverse(char s[])", "\n{", "\nint c,i,j;", "\nfor(i = 0,j = getlen(s) - 1; i \nc = s[i];", "\ns[i] = s[j];", "\ns[j] = c;", "\n}", "\n}", "\nvoid itoa(int n,char s[])", "\n{", "\nint i,sign;", "\nif((sign = n) \nn = -n;", "\ni = 0;", "\ndo{/*\u4ee5\u53cd\u5e8f\u751f\u6210\u6570\u5b57*/", "\ns[i++] = n%10 + '0';/*get next number*/", "\n}while((n /= 10) > 0);/*delete the number*/", "if(sign \ns[i++] = '-';", "s[i] = '\\0';", "\nreverse(s);", "\n}", "\n\u65b9\u6cd52:", "\n#include ", "void itochar(int num);", "void itochar(int num)", "\n{", "\nint i = 0;", "\nint j ;", "\nchar stra[10];", "\nchar strb[10];", "\nwhile ( num )", "\n{", "\nstra[i++]=num%10+48;", "\nnum=num/10;", "\n}", "\nstra[i] = \u2018\\0\u2032;", "\nfor( j=0; j \n{", "\nstrb[j] = stra[i-j-1];", "\n}", "\nstrb[j] = '\\0';", "\ncout\n", "}", "\nint main()", "\n{", "\nint num;", "\ncin>>num;", "\nitochar(num);", "\nreturn 0;", "\n}", "\u524d\u51e0\u5929\u9762\u8bd5\uff0c\u6709\u4e00\u9898\u60f3\u4e0d\u660e\u767d,\u8bf7\u6559\u5927\u5bb6\uff01", "\ntypedef struct", "\n{", "\nint a:2;", "\nint b:2;", "\nint c:1;", "\n}test;", "test t;", "\nt.a = 1;", "\nt.b = 3;", "\nt.c = 1;", "printf(\u201c%d\u201d,t.a);", "\nprintf(\u201c%d\u201d,t.b);", "\nprintf(\u201c%d\u201d,t.c);", "\u8c22\u8c22!", "\nt.a\u4e3a01,\u8f93\u51fa\u5c31\u662f1", "\nt.b\u4e3a11\uff0c\u8f93\u51fa\u5c31\u662f\uff0d1", "\nt.c\u4e3a1\uff0c\u8f93\u51fa\u4e5f\u662f-1", "\n3\u4e2a\u90fd\u662f\u6709\u7b26\u53f7\u6570int\u561b\u3002", "\n\u8fd9\u662f\u4f4d\u6269\u5c55\u95ee\u9898", "\n01", "\n11", "\n1", "\n\u7f16\u8bd1\u5668\u8fdb\u884c\u7b26\u53f7\u6269\u5c55", "\u6c42\u7ec4\u5408\u6570\uff1a \u6c42n\u4e2a\u6570\uff081\u2026.n\uff09\u4e2dk\u4e2a\u6570\u7684\u7ec4\u5408\u2026.", "\n\u5982\uff1acombination(5,3)", "\n\u8981\u6c42\u8f93\u51fa\uff1a543\uff0c542\uff0c541\uff0c532\uff0c531\uff0c521\uff0c432\uff0c431\uff0c421\uff0c321\uff0c", "\n#include", "int pop(int *);", "\nint push(int );", "\nvoid combination(int ,int );", "int stack[3]={0};", "\ntop=-1;", "int main()", "\n{", "\nint n,m;", "\nprintf(\u201cInput two numbers:\\n\u201d);", "\nwhile( (2!=scanf(\u201c%d%*c%d\u201d,&n,&m)) )", "\n{", "\nfflush(stdin);", "\nprintf(\u201cInput error! Again:\\n\u201d);", "\n}", "\ncombination(n,m);", "\nprintf(\u201c\\n\u201d);", "\n}", "\nvoid combination(int m,int n)", "\n{", "\nint temp=m;", "\npush(temp);", "\nwhile(1)", "\n{", "\nif(1==temp)", "\n{", "\nif(pop(&temp)&&stack[0]==n) //\u5f53\u6808\u5e95\u5143\u7d20\u5f39\u51fa&&\u4e3a\u53ef\u80fd\u53d6\u7684\u6700\u5c0f\u503c\uff0c\u5faa\u73af\u9000\u51fa", "\nbreak;", "\n}", "\nelse if( push(\u2013temp))", "\n{", "\nprintf(\u201c%d%d%d \u201c,stack[0],stack[1],stack[2]);//\u00a7\u00e4\u00a8\u00ec\u00a4@?", "\npop(&temp);", "\n}", "\n}", "\n}", "\nint push(int i)", "\n{", "\nstack[++top]=i;", "\nif(top\nreturn 0;", "\nelse", "\nreturn 1;", "\n}", "\nint pop(int *i)", "\n{", "\n*i=stack[top--];", "\nif(top>=0)", "\nreturn 0;", "\nelse", "\nreturn 1;", "\n}", "1\u3001\u7528\u6307\u9488\u7684\u65b9\u6cd5\uff0c\u5c06\u5b57\u7b26\u4e32\u201cABCD1234efgh\u201d\u524d\u540e\u5bf9\u8c03\u663e\u793a", "\n#include ", "Top", " \u56de\u590d\u4eba\uff1afree131(\u767d\u65e5?\u505a\u68a6!) ( ) \u4fe1\u8a89\uff1a100 2006-4-17 10:18:33 \u5f97\u5206:0", "?", "\n\u6709\u4e00\u4e2a\u6570\u7ec4a[1000]\u5b58\u653e0--1000;\u8981\u6c42\u6bcf\u9694\u4e8c\u4e2a\u6570\u5220\u6389\u4e00\u4e2a\u6570\uff0c\u5230\u672b\u5c3e\u65f6\u5faa\u73af\u81f3\u5f00\u5934\u7ee7\u7eed\u8fdb", "\n\u884c\uff0c\u6c42\u6700\u540e\u4e00\u4e2a\u88ab\u5220\u6389\u7684\u6570\u7684\u539f\u59cb\u4e0b\u6807\u4f4d\u7f6e\u3002", "\n\u4ee57\u4e2a\u6570\u4e3a\u4f8b\uff1a", "\n{0,1,2,3,4,5,6,7} 0-->1\u2013>2\uff08\u5220\u9664\uff09\u2013>3\u2013>4\u2013>5(\u5220\u9664)\u2013>6\u2013>7\u2013>0\uff08\u5220\u9664\uff09\uff0c\u5982\u6b64", "\n\u5faa\u73af\u76f4\u5230\u6700\u540e\u4e00\u4e2a\u6570\u88ab\u5220\u9664\u3002", "\n\u65b9\u6cd51\uff1a\u6570\u7ec4", "\n#include ", "int main()", "\n{", "\nint arr[1000];", "\nfor (int i=0;i\narr[i]=i;", "\nint j=0;", "\nint count=0;", "\nwhile(count\n{", "\nwhile(arr[j%1000]==null)", "\nj=(++j)%1000;", "\nj=(++j)%1000;", "\nwhile(arr[j%1000]==null)", "\nj=(++j)%1000;", "\nj=(++j)%1000;", "\nwhile(arr[j%1000]==null)", "\nj=(++j)%1000;", "\narr[j]=null;", "\n++count;", "\n}", "\nwhile(arr[j]==null)", "\nj=(++j)%1000;", "cout\nreturn 0;", "\n}\u65b9\u6cd52\uff1a\u94fe\u8868", "\n#include", "return 0;", "\n}", "\nint main(void) {", "\nint a[MAXLINE],R[MAXLINE],suffix,index,values,start,i,K;", "\nsuffix=index=values=start=0;", "\nK=2;", "for(i=0;i", "\na[i]=i;", "\nR[i]=i+1;", "\n}", "\nR[i-1]=0;", "\nfind_n(a,R,K,index,values,2);", "\nprintf(\"the value is %d,%d\\n\",index,values);", "\nreturn 0;", "\n}", "\u8bd5\u9898\uff1a", "\nvoid test2()", "\n{", "\nchar string[10], str1[10];", "\nint i;", "\nfor(i=0; i\n{", "\nstr1[i] = 'a';", "\n}", "\nstrcpy( string, str1 );", "\n}", "\n\u89e3\u7b54\uff1a\u5bf9\u8bd5\u98982\uff0c\u5982\u679c\u9762\u8bd5\u8005\u6307\u51fa\u5b57\u7b26\u6570\u7ec4str1\u4e0d\u80fd\u5728\u6570\u7ec4\u5185\u7ed3\u675f\u53ef\u4ee5\u7ed93\u5206\uff1b\u5982\u679c\u9762\u8bd5\u8005", "\n\u6307\u51fastrcpy(string, str1)\u8c03\u7528\u4f7f\u5f97\u4ecestr1\u5185\u5b58\u8d77\u590d\u5236\u5230string\u5185\u5b58\u8d77\u6240\u590d\u5236\u7684\u5b57\u8282\u6570\u5177", "\n\u6709\u4e0d\u786e\u5b9a\u6027\u53ef\u4ee5\u7ed97\u5206\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u6307\u51fa\u5e93\u51fd\u6570strcpy\u5de5\u4f5c\u65b9\u5f0f\u7684\u7ed910\u5206\uff1b", "\nstr1\u4e0d\u80fd\u5728\u6570\u7ec4\u5185\u7ed3\u675f:\u56e0\u4e3astr1\u7684\u5b58\u50a8\u4e3a\uff1a{a,a,a,a,a,a,a,a,a,a},\u6ca1\u6709'\\0'(\u5b57\u7b26\u4e32\u7ed3", "\n\u675f\u7b26)\uff0c\u6240\u4ee5\u4e0d\u80fd\u7ed3\u675f", "\nstrcpy( char *s1,char *s2)\u4ed6\u7684\u5de5\u4f5c\u539f\u7406\u662f\uff0c\u626b\u63cfs2\u6307\u5411\u7684\u5185\u5b58\uff0c\u9010\u4e2a\u5b57\u7b26\u4ed8\u5230s1\u6240\u6307", "\n\u5411\u7684\u5185\u5b58\uff0c\u76f4\u5230\u78b0\u5230'\\0',\u56e0\u4e3astr1\u7ed3\u5c3e\u6ca1\u6709'\\0'\uff0c\u6240\u4ee5\u5177\u6709\u4e0d\u786e\u5b9a\u6027\uff0c\u4e0d\u77e5\u9053\u4ed6\u540e\u9762\u8fd8\u4f1a", "\n\u4ed8\u4ec0\u4e48\u4e1c\u4e1c\u3002", "\n\u6b63\u786e\u5e94\u5982\u4e0b", "\nvoid test2()", "\n{", "\nchar string[10], str1[10];", "\nint i;", "\nfor(i=0; i\n{", "\nstr1[i] = 'a'+i; //\u628aabcdefghi\u8d4b\u503c\u7ed9\u5b57\u7b26\u6570\u7ec4", "\n}", "\nstr[i]='\\0';//\u52a0\u4e0a\u7ed3\u675f\u7b26", "\nstrcpy( string, str1 );", "\n}", "\u7b2c\u4e8c\u4e2acode\u9898\u662f\u5b9e\u73b0strcmp", "\nint StrCmp(const char *str1, const char *str2)", "\n\u505a\u662f\u505a\u5bf9\u4e86\uff0c\u6ca1\u6709\u6284\u641e\uff0c\u6bd4\u8f83\u4e71", "\nint StrCmp(const char *str1, const char *str2)", "\n{", "\nassert(str1 && srt2);", "\nwhile (*str1 && *str2 && *str1 == *str2) {", "\nstr1++, str2++;", "\n}", "\nif (*str1 && *str2)", "\nreturn (*str1-*str2);", "\nelseif (*str1 && *str2==0)", "\nreturn 1;", "\nelseif (*str1 = = 0 && *str2)", "\nreturn -1;", "\nelse", "\nreturn 0;", "\n}", "int StrCmp(const char *str1, const char *str2)", "\n{", "\n//\u7701\u7565\u5224\u65ad\u7a7a\u6307\u9488(\u81ea\u5df1\u4fdd\u8bc1)", "\nwhile(*str1 && *str1++ = = *str2++);", "\nreturn *str1-*str2;", "\n}", "\n\u7b2c\u4e09\u4e2acode\u9898\u662f\u5b9e\u73b0\u5b50\u4e32\u5b9a\u4f4d", "\nint FindSubStr(const char *MainStr, const char *SubStr)", "\n\u505a\u662f\u505a\u5bf9\u4e86\uff0c\u6ca1\u6709\u6284\u641e\uff0c\u6bd4\u8f83\u4e71", "\nint MyStrstr(const char* MainStr, const char* SubStr)", "\n{", "\nconst char *p;", "\nconst char *q;", "\nconst char * u = MainStr;", "//assert((MainStr!=NULL)&&( SubStr!=NULL));//\u7528\u65ad\u8a00\u5bf9\u8f93\u5165\u8fdb\u884c\u5224\u65ad", "\nwhile(*MainStr) //\u5185\u90e8\u8fdb\u884c\u9012\u589e", "\n{", "\np = MainStr;", "\nq = SubStr;", "\nwhile(*q && *p && *p++ == *q++);", "\nif(!*q )", "\n{", "\nreturn MainStr - u +1 ;//MainStr\u6307\u5411\u5f53\u524d\u8d77\u59cb\u4f4d\uff0cu\u6307\u5411", "\n}", "\nMainStr ++;", "\n}", "\nreturn -1;", "\n}", "\u5206\u6790\uff1a", "\nint arr[] = {6,7,8,9,10};", "\nint *ptr = arr;", "\n*(ptr++)+=123;", "\nprintf(\u201c %d %d \u201d, *ptr, *(++ptr));", "\n\u8f93\u51fa\uff1a8 8", "\n\u8fc7\u7a0b\uff1a\u5bf9\u4e8e*(ptr++)+=123;\u5148\u505a\u52a0\u6cd56+123\uff0c\u7136\u540e++\uff0c\u6307\u9488\u6307\u54117\uff1b\u5bf9\u4e8eprintf(\u201c %d %d", "\n\u201d, *ptr, *(++ptr));\u4ece\u540e\u5f80\u524d\u6267\u884c\uff0c\u6307\u9488\u5148++\uff0c\u6307\u54118\uff0c\u7136\u540e\u8f93\u51fa8\uff0c\u7d27\u63a5\u7740\u518d\u8f93\u51fa8", "\u534e\u4e3a\u5168\u5957\u5b8c\u6574\u8bd5\u9898", "\n\u9ad8\u7ea7\u9898", "\n6\u3001\u5df2\u77e5\u4e00\u4e2a\u5355\u5411\u94fe\u8868\u7684\u5934\uff0c\u8bf7\u5199\u51fa\u5220\u9664\u5176\u67d0\u4e00\u4e2a\u7ed3\u70b9\u7684\u7b97\u6cd5\uff0c\u8981\u6c42\uff0c\u5148\u627e\u5230\u6b64\u7ed3\u70b9\uff0c\u7136\u540e", "\n\u5220\u9664\u3002", "\nslnodetype *Delete(slnodetype *Head,int key){}\u4e2dif(Head->number==key)", "\n{", "\nHead=Pointer->next;", "\nfree(Pointer);", "\nbreak;", "\n}", "\nBack = Pointer;", "\nPointer=Pointer->next;", "\nif(Pointer->number==key)", "\n{", "\nBack->next=Pointer->next;", "\nfree(Pointer);", "\nbreak;", "\n}", "\nvoid delete(Node* p)", "\n{", "\nif(Head = Node)", "while(p)", "\n}", "\u6709\u4e00\u4e2a16\u4f4d\u7684\u6574\u6570\uff0c\u6bcf4\u4f4d\u4e3a\u4e00\u4e2a\u6570\uff0c\u5199\u51fd\u6570\u6c42\u4ed6\u4eec\u7684\u548c\u3002", "\n\u89e3\u91ca\uff1a", "\n\u6574\u65701101010110110111", "\n\u548c 1101+0101+1011+0111", "\n\u611f\u89c9\u5e94\u8be5\u4e0d\u96be\uff0c\u5f53\u65f6\u5bf9\u9898\u7406\u89e3\u7684\u4e0d\u662f\u5f88\u6e05\u695a\uff0c\u6240\u4ee5\u5199\u4e86\u4e00\u4e2a\u51fd\u6570\uff0c\u4e5f\u4e0d\u77e5\u9053\u5bf9\u4e0d\u5bf9\u3002", "\n\u7591\u95ee\uff1a", "\n\u65e2\u7136\u662f16\u4f4d\u7684\u6574\u6570\uff0c1101010110110111\u662f2\u8fdb\u5236\u7684\uff0c\u90a3\u4e48\u51fd\u6570\u53c2\u6570\u600e\u4e48\u5b9a\u4e49\u5462\uff0c\u8bf7\u5927\u867e\u6307\u6559", "\n\u3002", "\n\u7b54\u6848\uff1a\u7528\u5341\u8fdb\u5236\u505a\u53c2\u6570\uff0c\u8ba1\u7b97\u65f6\u6309\u4e8c\u8fdb\u5236\u8003\u8651\u3002", "\n/* n\u5c31\u662f16\u4f4d\u7684\u6570\uff0c\u51fd\u6570\u8fd4\u56de\u5b83\u7684\u56db\u4e2a\u90e8\u5206\u4e4b\u548c */", "\nchar SumOfQuaters(unsigned short n)", "\n{", "\nchar c = 0;", "\nint i = 4;", "\ndo", "\n{", "\nc += n & 15;", "\nn = n >> 4;", "\n} while (\u2013i);", "return c;", "\n}", "\u67091,2,\u2026.\u4e00\u76f4\u5230n\u7684\u65e0\u5e8f\u6570\u7ec4,\u6c42\u6392\u5e8f\u7b97\u6cd5,\u5e76\u4e14\u8981\u6c42\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n),\u7a7a\u95f4\u590d\u6742\u5ea6O(1)", "\n,\u4f7f\u7528\u4ea4\u6362,\u800c\u4e14\u4e00\u6b21\u53ea\u80fd\u4ea4\u6362\u4e24\u4e2a\u6570.\uff08\u534e\u4e3a\uff09", "\n#include", "int main()", "\n{", "\nint a[] = {10,6,9,5,2,8,4,7,1,3};", "\nint len = sizeof(a) / sizeof(int);", "\nint temp;", "for(int i = 0; i \n{", "\ntemp = a[a[i] - 1];", "\na[a[i] - 1] = a[i];", "\na[i] = temp;", "if ( a[i] == i + 1)", "\ni++;", "\n}", "\nfor (int j = 0; j \ncout\n", "return 0;", "\n}", "\uff08\u6167\u901a\uff09", "\n1 \u5199\u51fa\u7a0b\u5e8f\u628a\u4e00\u4e2a\u94fe\u8868\u4e2d\u7684\u63a5\u70b9\u987a\u5e8f\u5012\u6392", "\ntypedef struct linknode", "\n{", "\nint data;", "\nstruct linknode *next;", "\n}node;", "\n//\u5c06\u4e00\u4e2a\u94fe\u8868\u9006\u7f6e", "\nnode *reverse(node *head)", "\n{", "\nnode *p,*q,*r;", "\np=head;", "\nq=p->next;", "\nwhile(q!=NULL)", "\n{", "\nr=q->next;", "\nq->next=p;", "\np=q;", "\nq=r;", "\n}", "head->next=NULL;", "\nhead=p;", "\nreturn head;", "\n}", "\n2 \u5199\u51fa\u7a0b\u5e8f\u5220\u9664\u94fe\u8868\u4e2d\u7684\u6240\u6709\u63a5\u70b9", "\nvoid del_all(node *head)", "\n{", "\nnode *p;", "\nwhile(head!=NULL)", "\n{", "\np=head->next;", "\nfree(head);", "\nhead=p;", "\n}", "\ncout\n}", "\n3\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0cs,t;\u628at\u5b57\u7b26\u4e32\u63d2\u5165\u5230s\u5b57\u7b26\u4e32\u4e2d\uff0cs\u5b57\u7b26\u4e32\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u5b58\u653et\u5b57\u7b26\u4e32", "\nvoid insert(char *s, char *t, int i)", "\n{", "\nchar *q = t;", "\nchar *p =s;", "\nif(q == NULL)return;", "\nwhile(*p!='\\0')", "\n{", "\np++;", "\n}", "\nwhile(*q!=0)", "\n{", "\n*p=*q;", "\np++;", "\nq++;", "\n}", "\n*p = '\\0';", "\n}", "\u5206\u6790\u4e0b\u9762\u7684\u4ee3\u7801\uff1a", "\nchar *a = \"hello\";", "\nchar *b = \"hello\";", "\nif(a= =b)", "\nprintf(\"YES\");", "\nelse", "\nprintf(\"NO\");", "\n\u8fd9\u4e2a\u7b80\u5355\u7684\u9762\u8bd5\u9898\u76ee,\u6211\u9009\u8f93\u51fa no(\u5bf9\u6bd4\u7684\u5e94\u8be5\u662f\u6307\u9488\u5730\u5740\u5427),\u53ef\u5728VC\u662fYES \u5728C\u662fNO", "\nlz\u7684\u5462\uff0c\u662f\u4e00\u4e2a\u5e38\u91cf\u5b57\u7b26\u4e32\u3002\u4f4d\u4e8e\u9759\u6001\u5b58\u50a8\u533a\uff0c\u5b83\u5728\u7a0b\u5e8f\u751f\u547d\u671f\u5185\u6052\u5b9a\u4e0d\u53d8\u3002\u5982\u679c\u7f16\u8bd1\u5668", "\n\u4f18\u5316\u7684\u8bdd\uff0c\u4f1a\u6709\u53ef\u80fda\u548cb\u540c\u65f6\u6307\u5411\u540c\u4e00\u4e2ahello\u7684\u3002\u5219\u5730\u5740\u76f8\u540c\u3002\u5982\u679c\u7f16\u8bd1\u5668\u6ca1\u6709\u4f18\u5316\uff0c\u90a3", "\n\u4e48\u5c31\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u5730\u5740\uff0c\u5219\u4e0d\u540c", "\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u529f\u80fd\uff1a\u5b8c\u6210\u5185\u5b58\u4e4b\u95f4\u7684\u62f7\u8d1d", "\nmemcpy source code:", "\n270 void* memcpy( void *dst, const void *src, unsigned int len )", "\n271 {", "\n272 register char *d;", "\n273 register char *s;", "\n27", "\n275 if (len == 0)", "\n276 return dst;", "\n277", "\n278 if (is_overlap(dst, src, len, len))", "\n279 complain3(\"memcpy\", dst, src, len);", "\n280", "\n281 if ( dst > src ) {", "\n282 d = (char *)dst + len \u2013 1;", "\n283 s = (char *)src + len \u2013 1;", "\n284 while ( len >= 4 ) {", "\n285 *d\u2013 = *s\u2013;", "\n286 *d\u2013 = *s\u2013;", "\n287 *d\u2013 = *s\u2013;", "\n288 *d\u2013 = *s\u2013;", "\n289 len -= 4;", "\n290 }", "\n291 while ( len\u2013 ) {", "\n292 *d\u2013 = *s\u2013;", "\n293 }", "\n294 } else if ( dst \n295 d = (char *)dst;", "\n296 s = (char *)src;", "\n297 while ( len >= 4 ) {", "\n298 *d++ = *s++;", "\n299 *d++ = *s++;", "\n300 *d++ = *s++;", "\n301 *d++ = *s++;", "\n302 len -= 4;", "\n303 }", "\n304 while ( len\u2013 ) {", "\n305 *d++ = *s++;", "\n306 }", "\n307 }", "\n308 return dst;", "\n309 }", "\n\u516c\u53f8\u8003\u8bd5\u8fd9\u79cd\u9898\u76ee\u4e3b\u8981\u8003\u4f60\u7f16\u5199\u7684\u4ee3\u7801\u662f\u5426\u8003\u8651\u5230\u5404\u79cd\u60c5\u51b5\uff0c\u662f\u5426\u5b89\u5168\uff08\u4e0d\u4f1a\u6ea2\u51fa\uff09", "\n\u5404\u79cd\u60c5\u51b5\u5305\u62ec\uff1a", "\n\uff11\u3001\u53c2\u6570\u662f\u6307\u9488\uff0c\u68c0\u67e5\u6307\u9488\u662f\u5426\u6709\u6548", "\n\uff12\u3001\u68c0\u67e5\u590d\u5236\u7684\u6e90\u76ee\u6807\u548c\u76ee\u7684\u5730\u662f\u5426\u4e3a\u540c\u4e00\u4e2a\uff0c\u82e5\u4e3a\u540c\u4e00\u4e2a\uff0c\u5219\u76f4\u63a5\u8df3\u51fa", "\n\uff13\u3001\u8bfb\u5199\u6743\u9650\u68c0\u67e5", "\n\uff14\u3001\u5b89\u5168\u68c0\u67e5\uff0c\u662f\u5426\u4f1a\u6ea2\u51fa", "\nmemcpy\u62f7\u8d1d\u4e00\u5757\u5185\u5b58\uff0c\u5185\u5b58\u7684\u5927\u5c0f\u4f60\u544a\u8bc9\u5b83", "\nstrcpy\u662f\u5b57\u7b26\u4e32\u62f7\u8d1d\uff0c\u9047\u5230\u2019\\0\u2032\u7ed3\u675f", "/* memcpy \u2500\u2500\u2500 \u62f7\u8d1d\u4e0d\u91cd\u53e0\u7684\u5185\u5b58\u5757 */", "\nvoid memcpy(void* pvTo, void* pvFrom, size_t size)", "\n{", "\nvoid* pbTo = (byte*)pvTo;", "\nvoid* pbFrom = (byte*)pvFrom;", "\nASSERT(pvTo != NULL && pvFrom != NULL); //\u68c0\u67e5\u8f93\u5165\u6307\u9488\u7684\u6709\u6548\u6027", "\nASSERT(pbTo>=pbFrom+size || pbFrom>=pbTo+size);//\u68c0\u67e5\u4e24\u4e2a\u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u662f\u5426\u91cd\u53e0", "while(size\u2013>0)", "\n*pbTo++ == *pbFrom++;", "\nreturn(pvTo);", "\n}", "\u534e\u4e3a\u9762\u8bd5\u9898\uff1a\u600e\u4e48\u5224\u65ad\u94fe\u8868\u4e2d\u662f\u5426\u6709\u73af\uff1f", "\nbool CircleInList(Link* pHead)", "\n{", "\nif(pHead = = NULL || pHead->next = = NULL)//\u65e0\u8282\u70b9\u6216\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\u5e76\u4e14\u65e0\u81ea\u73af", "\nreturn (false);", "\nif(pHead->next = = pHead)//\u81ea\u73af", "\nreturn (true);", "\nLink *pTemp1 = pHead;//step 1", "\nLink *pTemp = pHead->next;//step 2", "\nwhile(pTemp != pTemp1 && pTemp != NULL && pTemp->next != NULL)", "\n{", "\npTemp1 = pTemp1->next;", "\npTemp = pTemp->next->next;", "\n}", "\nif(pTemp = = pTemp1)", "\nreturn (true);", "\nreturn (false);", "\n}", "\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0cs,t;\u628at\u5b57\u7b26\u4e32\u63d2\u5165\u5230s\u5b57\u7b26\u4e32\u4e2d\uff0cs\u5b57\u7b26\u4e32\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u5b58\u653et\u5b57\u7b26\u4e32", "\nvoid insert(char *s, char *t, int i)", "\n{", "\nmemcpy(&s[strlen(t)+i],&s[i],strlen(s)-i);", "\nmemcpy(&s[i],t,strlen(t));", "\ns[strlen(s)+strlen(t)]=\u2019\\0\u2032;", "\n}", "1\u3002\u7f16\u5199\u4e00\u4e2a C \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5728\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u627e\u5230\u53ef\u80fd\u7684\u6700\u957f\u7684\u5b50\u5b57\u7b26\u4e32\uff0c\u4e14\u8be5\u5b57\u7b26\u4e32\u662f", "\n\u7531\u540c\u4e00\u5b57\u7b26\u7ec4\u6210\u7684\u3002", "\nchar * search(char *cpSource, char ch)", "\n{", "\nchar *cpTemp=NULL, *cpDest=NULL;", "\nint iTemp, iCount=0;", "\nwhile(*cpSource)", "\n{", "\nif(*cpSource == ch)", "\n{", "\niTemp = 0;", "\ncpTemp = cpSource;", "\nwhile(*cpSource == ch)", "\n++iTemp, ++cpSource;", "\nif(iTemp > iCount)", "\niCount = iTemp, cpDest = cpTemp;", "\nif(!*cpSource)", "\nbreak;", "\n}", "\n++cpSource;", "\n}", "\nreturn cpDest;", "\n}", "\n2\u3002\u8bf7\u7f16\u5199\u4e00\u4e2a C \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5728\u7ed9\u5b9a\u7684\u5185\u5b58\u533a\u57df\u641c\u7d22\u7ed9\u5b9a\u7684\u5b57\u7b26\uff0c\u5e76\u8fd4\u56de\u8be5\u5b57\u7b26\u6240\u5728\u4f4d", "\n\u7f6e\u7d22\u5f15\u503c\u3002", "\nint search(char *cpSource, int n, char ch)", "\n{", "\nint i;", "\nfor(i=0; i", "\nreturn i;", "\n}", "\u4e00\u4e2a\u5355\u5411\u94fe\u8868\uff0c\u4e0d\u77e5\u9053\u5934\u8282\u70b9,\u4e00\u4e2a\u6307\u9488\u6307\u5411\u5176\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\uff0c\u95ee\u5982\u4f55\u5220\u9664\u8fd9\u4e2a\u6307\u9488\u6307\u5411\u7684", "\n\u8282\u70b9\uff1f", "\n\u5c06\u8fd9\u4e2a\u6307\u9488\u6307\u5411\u7684next\u8282\u70b9\u503ccopy\u5230\u672c\u8282\u70b9\uff0c\u5c06next\u6307\u5411next->next,\u5e76\u968f\u540e\u5220\u9664\u539fnext\u6307", "\n\u5411\u7684\u8282\u70b9\u3002", "#include ", "int main()", "\n{", "\nint b = 3;", "\nfoo(b+=3, ++b);", "\nprintf(\u201cb=%d\\n\u201d, b);", "\nreturn 0;", "\n}", "\n\u8f93\u51fa\uff1am=7,n=4,b=7(VC6.0)", "\n\u8fd9\u79cd\u65b9\u5f0f\u548c\u7f16\u8bd1\u5668\u4e2d\u5f97\u51fd\u6570\u8c03\u7528\u5173\u7cfb\u76f8\u5173\u5373\u5148\u540e\u5165\u6808\u987a\u5e8f\u3002\u4e0d\u8fc7\u4e0d\u540c", "\n\u7f16\u8bd1\u5668\u5f97\u5904\u7406\u4e0d\u540c\u3002\u4e5f\u662f\u56e0\u4e3aC\u6807\u51c6\u4e2d\u5bf9\u8fd9\u79cd\u65b9\u5f0f\u8bf4\u660e\u4e3a\u672a\u5b9a\u4e49\uff0c\u6240\u4ee5", "\n\u5404\u4e2a\u7f16\u8bd1\u5668\u5382\u5546\u90fd\u6709\u81ea\u5df1\u5f97\u7406\u89e3\uff0c\u6240\u4ee5\u6700\u540e\u4ea7\u751f\u5f97\u7ed3\u679c\u5b8c\u5168\u4e0d\u540c\u3002", "\n\u56e0\u4e3a\u8fd9\u6837\uff0c\u6240\u4ee5\u9047\u89c1\u8fd9\u79cd\u51fd\u6570\uff0c\u6211\u4eec\u9996\u5148\u8981\u8003\u8651\u6211\u4eec\u5f97\u7f16\u8bd1\u5668\u4f1a\u5982\u4f55\u5904\u7406", "\n\u8fd9\u6837\u5f97\u51fd\u6570\uff0c\u5176\u6b21\u770b\u51fd\u6570\u5f97\u8c03\u7528\u65b9\u5f0f\uff0c\u4e0d\u540c\u5f97\u8c03\u7528\u65b9\u5f0f\uff0c\u53ef\u80fd\u4ea7\u751f\u4e0d\u540c\u5f97", "\n\u7ed3\u679c\u3002\u6700\u540e\u662f\u770b\u7f16\u8bd1\u5668\u4f18\u5316\u3002", "2.\u5199\u4e00\u51fd\u6570\uff0c\u5b9e\u73b0\u5220\u9664\u5b57\u7b26\u4e32str1\u4e2d\u542b\u6709\u7684\u5b57\u7b26\u4e32str2.", "\n\u7b2c\u4e8c\u4e2a\u5c31\u662f\u5229\u7528\u4e00\u4e2aKMP\u5339\u914d\u7b97\u6cd5\u627e\u5230str2\u7136\u540e\u5220\u9664\uff08\u7528\u94fe\u8868\u5b9e\u73b0\u7684\u8bdd\uff0c\u4fbf\u6377\u4e8e\u6570\u7ec4\uff09", "/*\u96c5\u864e\u7b14\u8bd5\u9898(\u5b57\u7b26\u4e32\u64cd\u4f5c)", "\n\u7ed9\u5b9a\u5b57\u7b26\u4e32A\u548cB,\u8f93\u51faA\u548cB\u4e2d\u7684\u6700\u5927\u516c\u5171\u5b50\u4e32\u3002", "\n\u6bd4\u5982A=\u201daocdfe\u201d B=\u201dpmcdfa\u201d \u5219\u8f93\u51fa\u201dcdf\u201d", "\n*/", "\n//Author: azhen", "\n#include", "char *commanstring(char shortstring[], char longstring[])", "\n{", "\nint i, j;", "char *substring=malloc(256);", "if(strstr(longstring, shortstring)!=NULL) //\u5982\u679c\u2026\u2026\uff0c\u90a3\u4e48\u8fd4\u56deshortstring", "\nreturn shortstring;", "for(i=strlen(shortstring)-1;i>0; i\u2013) //\u5426\u5219\uff0c\u5f00\u59cb\u5faa\u73af\u8ba1\u7b97", "\n{", "\nfor(j=0; j\nmemcpy(substring, &shortstring[j], i);", "\nsubstring[i]='\\0';", "\nif(strstr(longstring, substring)!=NULL)", "\nreturn substring;", "\n}", "\n}", "\nreturn NULL;", "\n}", "main()", "\n{", "\nchar *str1=malloc(256);", "\nchar *str2=malloc(256);", "\nchar *comman=NULL;", "gets(str1);", "\ngets(str2);", "if(strlen(str1)>strlen(str2)) //\u5c06\u77ed\u7684\u5b57\u7b26\u4e32\u653e\u524d\u9762", "\ncomman=commanstring(str2, str1);", "\nelse", "\ncomman=commanstring(str1, str2);", "printf(\u201cthe longest comman string is: %s\\n\u201d, comman);", "\n}", "11.\u5199\u4e00\u4e2a\u51fd\u6570\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32str1\u548cstr2\u7684\u5927\u5c0f\uff0c\u82e5\u76f8\u7b49\u8fd4\u56de0\uff0c\u82e5str1\u5927\u4e8e", "\nstr2\u8fd4\u56de1\uff0c\u82e5str1\u5c0f\u4e8estr2\u8fd4\u56de\uff0d1", "\nint strcmp ( const char * src,const char * dst)", "\n{", "\nint ret = 0 ;", "\nwhile( ! (ret = *(unsigned char *)src \u2013 *(unsigned char *)dst) && *dst)", "\n{", "\n++src;", "\n++dst;", "\n}", "\nif ( ret \nret = -1 ;", "\nelse if ( ret > 0 )", "\nret = 1 ;", "\nreturn( ret );", "\n}", "3,\u6c421000\uff01\u7684\u672a\u5c3e\u6709\u51e0\u4e2a0\uff08\u7528\u7d20\u6570\u76f8\u4e58\u7684\u65b9\u6cd5\u6765\u505a\uff0c\u598272=2*2*2*3*3\uff09;", "\n\u6c42\u51fa1->1000\u91cc,\u80fd\u88ab5\u6574\u9664\u7684\u6570\u7684\u4e2a\u6570n1,\u80fd\u88ab25\u6574\u9664\u7684\u6570\u7684\u4e2a\u6570n2,\u80fd\u88ab125\u6574\u9664\u7684\u6570\u7684\u4e2a", "\n\u6570n3,", "\n\u80fd\u88ab625\u6574\u9664\u7684\u6570\u7684\u4e2a\u6570n4.", "\n1000!\u672b\u5c3e\u7684\u96f6\u7684\u4e2a\u6570=n1+n2+n3+n4;", "\n#include", "int find5(int num){", "\nint ret=0;", "\nwhile(num%5==0){", "\nnum/=5;", "\nret++;", "\n}", "\nreturn ret;", "\n}", "\nint main(){", "\nint result=0;", "\nint i;", "\nfor(i=5;i\n{", "\nresult+=find5(i);", "\n}", "\nprintf(\" the total zero number is %d\\n\",result);", "\nreturn 0;", "\n}", "1. \u6709\u53cc\u5411\u5faa\u73af\u94fe\u8868\u7ed3\u70b9\u5b9a\u4e49\u4e3a\uff1a", "\nstruct node", "\n{ int data;", "\nstruct node *front,*next;", "\n};", "\n\u6709\u4e24\u4e2a\u53cc\u5411\u5faa\u73af\u94fe\u8868A\uff0cB\uff0c\u77e5\u9053\u5176\u5934\u6307\u9488\u4e3a\uff1apHeadA,pHeadB\uff0c\u8bf7\u5199\u4e00\u51fd\u6570\u5c06\u4e24\u94fe\u8868\u4e2ddat", "\na\u503c\u76f8\u540c\u7684\u7ed3\u70b9\u5220\u9664", "\nBOOL DeteleNode(Node *pHeader, DataType Value)", "\n{", "\nif (pHeader == NULL) return;", "BOOL bRet = FALSE;", "\nNode *pNode = pHead;", "\nwhile (pNode != NULL)", "\n{", "\nif (pNode->data == Value)", "\n{", "\nif (pNode->front == NULL)", "\n{", "\npHeader = pNode->next;", "\npHeader->front = NULL;", "\n}", "\nelse", "\n{", "\nif (pNode->next != NULL)", "\n{", "\npNode->next->front = pNode->front;", "\n}", "\npNode->front->next = pNode->next;", "\n}", "Node *pNextNode = pNode->next;", "\ndelete pNode;", "\npNode = pNextNode;", "bRet = TRUE;", "\n//\u4e0d\u8981break\u6216return, \u5220\u9664\u6240\u6709", "\n}", "\nelse", "\n{", "\npNode = pNode->next;", "\n}", "\n}", "return bRet;", "\n}", "void DE(Node *pHeadA, Node *pHeadB)", "\n{", "\nif (pHeadA == NULL || pHeadB == NULL)", "\n{", "\nreturn;", "\n}", "Node *pNode = pHeadA;", "\nwhile (pNode != NULL)", "\n{", "\nif (DeteleNode(pHeadB, pNode->data))", "\n{", "\nif (pNode->front == NULL)", "\n{", "\npHeadA = pNode->next;", "\npHeadA->front = NULL;", "\n}", "\nelse", "\n{", "\npNode->front->next = pNode->next;", "\nif (pNode->next != NULL)", "\n{", "\npNode->next->front = pNode->front;", "\n}", "\n}", "\nNode *pNextNode = pNode->next;", "\ndelete pNode;", "\npNode = pNextNode;", "\n}", "\nelse", "\n{", "\npNode = pNode->next;", "\n}", "\n}", "\n}", "\n2. \u7f16\u7a0b\u5b9e\u73b0\uff1a\u627e\u51fa\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u6700\u5927\u516c\u5171\u5b50\u5b57\u7b26\u4e32,\u5982\u201dabccade\u201d,\u201ddgcadde\u201d\u7684\u6700\u5927\u5b50\u4e32\u4e3a", "\n\u201ccad\u201d", "\nint GetCommon(char *s1, char *s2, char **r1, char **r2)", "\n{", "\nint len1 = strlen(s1);", "\nint len2 = strlen(s2);", "\nint maxlen = 0;", "for(int i = 0; i \n{", "\nfor(int j = 0; j \n{", "\nif(s1[i] == s2[j])", "\n{", "\nint as = i, bs = j, count = 1;", "\nwhile(as + 1 \ncount++;", "if(count > maxlen)", "\n{", "\nmaxlen = count;", "\n*r1 = s1 + i;", "\n*r2 = s2 + j;", "\n}", "\n}", "\n}", "\n}", "\n3. \u7f16\u7a0b\u5b9e\u73b0\uff1a\u628a\u5341\u8fdb\u5236\u6570(long\u578b)\u5206\u522b\u4ee5\u4e8c\u8fdb\u5236\u548c\u5341\u516d\u8fdb\u5236\u5f62\u5f0f\u8f93\u51fa\uff0c\u4e0d\u80fd\u4f7f\u7528printf\u7cfb", "\n\u5217\u5e93\u51fd\u6570", "\nchar* test3(long num) {", "\nchar* buffer = (char*)malloc(11);", "\nbuffer[0] = \u20190\u2032;", "\nbuffer[1] = \u2018x\u2019;", "\nbuffer[10] = \u2018\\0\u2032;", "char* temp = buffer + 2;", "\nfor (int i=0; i \ntemp[i] = (char)(num>28);", "\ntemp[i] = temp[i] >= 0 ? temp[i] : temp[i] + 16;", "\ntemp[i] = temp[i] \n}", "\nreturn buffer;", "\n}", "\u8f93\u5165N, \u6253\u5370 N*N \u77e9\u9635", "\n\u6bd4\u5982 N = 3\uff0c\u6253\u5370\uff1a", "1 2 3", "\n8 9 4", "\n7 6 5", "N = 4\uff0c\u6253\u5370\uff1a", "1 2 3 4", "\n12 13 14 5", "\n11 16 15 6", "\n10 9 8 7", "\n\u89e3\u7b54\uff1a", "\n1 #define N 15", "\nint s[N][N];", "\nvoid main()", "\n{", "\nint k = 0, i = 0, j = 0;", "\nint a = 1;", "\nfor( ; k \n{", "\nwhile( j \nwhile( i \nwhile( j > k-1 ) s[i][j--] = a++; i\u2013; j++;", "\nwhile( i > k ) s[i--][j] = a++; i++; j++;", "\n}", "\nfor( i = 0; i \n{", "\nfor( j = 0; j \ncout \ncout \n}", "\n}", "\n2 define MAX_N 100", "\nint matrix[MAX_N][MAX_N];", "/*", "\n*\uff08x,y\uff09\uff1a\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u5750\u6807", "\n* start\uff1a\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u503c", "\n* n\uff1a\u77e9\u9635\u7684\u5927\u5c0f", "\n*/", "\nvoid SetMatrix(int x, int y, int start, int n) {", "\nint i, j;", "if (n \nreturn;", "\nif (n == 1) { //\u77e9\u9635\u5927\u5c0f\u4e3a1\u65f6", "\nmatrix[x][y] = start;", "\nreturn;", "\n}", "\nfor (i = x; i \nmatrix[y][i] = start++;", "for (j = y; j \nmatrix[j][x+n-1] = start++;", "for (i = x+n-1; i > x; i\u2013) //\u5e95\u90e8", "\nmatrix[y+n-1][i] = start++;", "for (j = y+n-1; j > y; j\u2013) //\u5de6\u90e8", "\nmatrix[j][x] = start++;", "SetMatrix(x+1, y+1, start, n-2); //\u9012\u5f52", "\n}", "void main() {", "\nint i, j;", "\nint n;", "scanf(\u201c%d\u201d, &n);", "\nSetMatrix(0, 0, 1, n);", "//\u6253\u5370\u87ba\u65cb\u77e9\u9635", "\nfor(i = 0; i \nfor (j = 0; j \nprintf(\"%4d\", matrix[i][j]);", "\nprintf(\"\\n\");", "\n}", "\n}", "\u6590\u6ce2\u62c9\u5951\u6570\u5217\u9012\u5f52\u5b9e\u73b0\u7684\u65b9\u6cd5\u5982\u4e0b\uff1a", "\nint Funct( int n )", "\n{", "\nif(n==0) return 1;", "\nif(n==1) return 1;", "\nretrurn Funct(n-1) + Funct(n-2);", "\n}", "\n\u8bf7\u95ee\uff0c\u5982\u4f55\u4e0d\u4f7f\u7528\u9012\u5f52\uff0c\u6765\u5b9e\u73b0\u4e0a\u8ff0\u51fd\u6570\uff1f", "\n\u8bf7\u6559\u5404\u4f4d\u9ad8\u624b\uff01", "\n\u89e3\u7b54\uff1aint Funct( int n ) // n \u4e3a\u975e\u8d1f\u6574\u6570", "\n{", "\nint a=0;", "\nint b=1;", "\nint c;", "\nif(n==0) c=1;", "\nelse if(n==1) c=1;", "\nelse for(int i=2;i\n{", "\nc=a+b;", "\na=b;", "\nb=c;", "\n}", "\nreturn c;", "\n}", "\n\u89e3\u7b54\uff1a", "\n\u73b0\u5728\u5927\u591a\u6570\u7cfb\u7edf\u90fd\u662f\u5c06\u4f4e\u5b57\u4f4d\u653e\u5728\u524d\u9762\uff0c\u800c\u7ed3\u6784\u4f53\u4e2d\u4f4d\u57df\u7684\u7533\u660e\u4e00\u822c\u662f\u5148\u58f0\u660e\u9ad8\u4f4d\u3002", "\n100 \u7684\u4e8c\u8fdb\u5236\u662f 001 100 100", "\n\u4f4e\u4f4d\u5728\u524d \u9ad8\u4f4d\u5728\u540e", "\n001----s3", "\n100----s2", "\n100----s1", "\n\u6240\u4ee5\u7ed3\u679c\u5e94\u8be5\u662f 1", "\n\u5982\u679c\u5148\u7533\u660e\u7684\u5728\u4f4e\u4f4d\u5219\uff1a", "\n001----s1", "\n100----s2", "\n100----s3", "\n\u7ed3\u679c\u662f 4", "\n1\u3001\u539f\u9898\u8ddflittle-endian\uff0cbig-endian\u6ca1\u6709\u5173\u7cfb", "\n2\u3001\u539f\u9898\u8ddf\u4f4d\u57df\u7684\u5b58\u50a8\u7a7a\u95f4\u5206\u914d\u6709\u5173\uff0c\u5230\u5e95\u662f\u4ece\u4f4e\u5b57\u8282\u5206\u914d\u8fd8\u662f\u4ece\u9ad8\u5b57\u8282\u5206\u914d\uff0c\u4eceDev C++", "\n\u548cVC7.1\u4e0a\u770b\uff0c\u90fd\u662f\u4ece\u4f4e\u5b57\u8282\u5f00\u59cb\u5206\u914d\uff0c\u5e76\u4e14\u8fde\u7eed\u5206\u914d\uff0c\u4e2d\u95f4\u4e0d\u7a7a\uff0c\u4e0d\u50cf\u8c2d\u7684\u4e66\u90a3\u6837\u4f1a\u7559\u7a7a", "\n\u4f4d", "\n3\u3001\u539f\u9898\u8ddf\u7f16\u8bd1\u5668\u6709\u5173\uff0c\u7f16\u8bd1\u5668\u5728\u672a\u7528\u5806\u6808\u7a7a\u95f4\u7684\u9ed8\u8ba4\u503c\u5206\u914d\u4e0a\u6709\u6240\u4e0d\u540c\uff0cDev C++\u672a\u7528\u7a7a", "\n\u95f4\u5206\u914d\u4e3a", "\n01110111b\uff0cVC7.1\u4e0b\u4e3a11001100b,\u6240\u4ee5\u5728Dev C++\u4e0b\u7684\u7ed3\u679c\u4e3a5\uff0c\u5728VC7.1\u4e0b\u4e3a1\u3002", "\u6ce8\uff1aPC\u4e00\u822c\u91c7\u7528little-endian\uff0c\u5373\u9ad8\u9ad8\u4f4e\u4f4e\uff0c\u4f46\u5728\u7f51\u7edc\u4f20\u8f93\u4e0a\uff0c\u4e00\u822c\u91c7\u7528big-endian\uff0c\u5373", "\n\u9ad8\u4f4e\u4f4e\u9ad8\uff0c\u534e\u4e3a\u662f\u505a\u7f51\u7edc\u7684\uff0c\u6240\u4ee5\u53ef\u80fd\u8003\u8651big-endian\u6a21\u5f0f\uff0c\u8fd9\u6837\u8f93\u51fa\u7ed3\u679c\u53ef\u80fd\u4e3a4", "\u5224\u65ad\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u4e0d\u662f\u56de\u6587", "\nint IsReverseStr(char *aStr)", "\n{", "\nint i,j;", "\nint found=1;", "\nif(aStr==NULL)", "\nreturn -1;", "\nj=strlen(aStr);", "\nfor(i=0;i", "\nif(*(aStr+i)!=*(aStr+j-i-1))", "\n{", "\nfound=0;", "\nbreak;", "\n}", "\nreturn found;", "\n}", "\nJosephu \u95ee\u9898\u4e3a\uff1a\u8bbe\u7f16\u53f7\u4e3a1\uff0c2\uff0c\u2026 n\u7684n\u4e2a\u4eba\u56f4\u5750\u4e00\u5708\uff0c\u7ea6\u5b9a\u7f16\u53f7\u4e3ak\uff081\n1\u5f00\u59cb\u62a5\u6570\uff0c\u6570\u5230m \u7684\u90a3\u4e2a\u4eba\u51fa\u5217\uff0c\u5b83\u7684\u4e0b\u4e00\u4f4d\u53c8\u4ece1\u5f00\u59cb\u62a5\u6570\uff0c\u6570\u5230m\u7684\u90a3\u4e2a\u4eba\u53c8\u51fa\u5217\uff0c\u4f9d", "\n\u6b21\u7c7b\u63a8\uff0c\u76f4\u5230\u6240\u6709\u4eba\u51fa\u5217\u4e3a\u6b62\uff0c\u7531\u6b64\u4ea7\u751f\u4e00\u4e2a\u51fa\u961f\u7f16\u53f7\u7684\u5e8f\u5217\u3002", "\u6570\u7ec4\u5b9e\u73b0\uff1a", "\n#include ", "for (i = 1; tail != head; ++i)", "\n{", "\nfor (j = 1; j \n{", "\ntail = head;", "\nhead = head->next;", "\n}", "\ntail->next = head->next;", "\nprintf(\u201c\u7b2c%4d\u4e2a\u51fa\u5c40\u7684\u4eba\u662f\uff1a%4d\u53f7\\n\u201d, i, head->index);", "\nfree(head);", "\nhead = tail->next;", "\n}", "\ni = head->index;", "\nfree(head);", "\nreturn i;", "\n}", "\nint main()", "\n{", "\nint n, m;", "\nscanf(\u201c%d%d\u201d, &n, &m);", "\nprintf(\u201c\u6700\u540e\u80dc\u5229\u7684\u662f%d\u53f7\uff01\\n\u201d, Josephu(n, m));", "\nsystem(\u201cpause\u201d);", "\nreturn 0;", "\n}", "\u5df2\u77e5strcpy\u51fd\u6570\u7684\u539f\u578b\u662f\uff1a", "\nchar * strcpy(char * strDest,const char * strSrc);", "\n1.\u4e0d\u8c03\u7528\u5e93\u51fd\u6570\uff0c\u5b9e\u73b0strcpy\u51fd\u6570\u3002", "\n2.\u89e3\u91ca\u4e3a\u4ec0\u4e48\u8981\u8fd4\u56dechar *\u3002", "\n\u89e3\u8bf4\uff1a", "\n1.strcpy\u7684\u5b9e\u73b0\u4ee3\u7801", "\nchar * strcpy(char * strDest,const char * strSrc)", "\n{", "\nif ((strDest==NULL)||(strSrc==NULL)) file://[/1]", "\nthrow \u201cInvalid argument(s)\u201d; //[2]", "\nchar * strDestCopy=strDest; file://[/3]", "\nwhile ((*strDest++=*strSrc++)!=\u2019\\0\u2032); file://[/4]", "\nreturn strDestCopy;", "\n}", "\n\u9519\u8bef\u7684\u505a\u6cd5\uff1a", "\n[1]", "\n(A)\u4e0d\u68c0\u67e5\u6307\u9488\u7684\u6709\u6548\u6027\uff0c\u8bf4\u660e\u7b54\u9898\u8005\u4e0d\u6ce8\u91cd\u4ee3\u7801\u7684\u5065\u58ee\u6027\u3002", "\n(B)\u68c0\u67e5\u6307\u9488\u7684\u6709\u6548\u6027\u65f6\u4f7f\u7528((!strDest)||(!strSrc))\u6216(!(strDest&&strSrc))\uff0c\u8bf4\u660e\u7b54", "\n\u9898\u8005\u5bf9C\u8bed\u8a00\u4e2d\u7c7b\u578b\u7684\u9690\u5f0f\u8f6c\u6362\u6ca1\u6709\u6df1\u523b\u8ba4\u8bc6\u3002\u5728\u672c\u4f8b\u4e2dchar *\u8f6c\u6362\u4e3abool\u5373\u662f\u7c7b\u578b\u9690\u5f0f\u8f6c", "\n\u6362\uff0c\u8fd9\u79cd\u529f\u80fd\u867d\u7136\u7075\u6d3b\uff0c\u4f46\u66f4\u591a\u7684\u662f\u5bfc\u81f4\u51fa\u9519\u6982\u7387\u589e\u5927\u548c\u7ef4\u62a4\u6210\u672c\u5347\u9ad8\u3002\u6240\u4ee5C++\u4e13\u95e8\u589e\u52a0", "\n\u4e86bool\u3001true\u3001false\u4e09\u4e2a\u5173\u952e\u5b57\u4ee5\u63d0\u4f9b\u66f4\u5b89\u5168\u7684\u6761\u4ef6\u8868\u8fbe\u5f0f\u3002", "\n(C)\u68c0\u67e5\u6307\u9488\u7684\u6709\u6548\u6027\u65f6\u4f7f\u7528((strDest==0)||(strSrc==0))\uff0c\u8bf4\u660e\u7b54\u9898\u8005\u4e0d\u77e5\u9053\u4f7f\u7528\u5e38\u91cf", "\n\u7684\u597d\u5904\u3002\u76f4\u63a5\u4f7f\u7528\u5b57\u9762\u5e38\u91cf\uff08\u5982\u672c\u4f8b\u4e2d\u76840\uff09\u4f1a\u51cf\u5c11\u7a0b\u5e8f\u7684\u53ef\u7ef4\u62a4\u6027\u30020\u867d\u7136\u7b80\u5355\uff0c\u4f46\u7a0b\u5e8f", "\n\u4e2d\u53ef\u80fd\u51fa\u73b0\u5f88\u591a\u5904\u5bf9\u6307\u9488\u7684\u68c0\u67e5\uff0c\u4e07\u4e00\u51fa\u73b0\u7b14\u8bef\uff0c\u7f16\u8bd1\u5668\u4e0d\u80fd\u53d1\u73b0\uff0c\u751f\u6210\u7684\u7a0b\u5e8f\u5185\u542b\u903b\u8f91", "\n\u9519\u8bef\uff0c\u5f88\u96be\u6392\u9664\u3002\u800c\u4f7f\u7528NULL\u4ee3\u66ff0\uff0c\u5982\u679c\u51fa\u73b0\u62fc\u5199\u9519\u8bef\uff0c\u7f16\u8bd1\u5668\u5c31\u4f1a\u68c0\u67e5\u51fa\u6765\u3002", "\n[2]", "\n(A)return new string(\u201cInvalid argument(s)\u201d);\uff0c\u8bf4\u660e\u7b54\u9898\u8005\u6839\u672c\u4e0d\u77e5\u9053\u8fd4\u56de\u503c\u7684\u7528\u9014", "\n\uff0c\u5e76\u4e14\u4ed6\u5bf9\u5185\u5b58\u6cc4\u6f0f\u4e5f\u6ca1\u6709\u8b66\u60d5\u5fc3\u3002\u4ece\u51fd\u6570\u4e2d\u8fd4\u56de\u51fd\u6570\u4f53\u5185\u5206\u914d\u7684\u5185\u5b58\u662f\u5341\u5206\u5371\u9669\u7684\u505a\u6cd5", "\n\uff0c\u4ed6\u628a\u91ca\u653e\u5185\u5b58\u7684\u4e49\u52a1\u629b\u7ed9\u4e0d\u77e5\u60c5\u7684\u8c03\u7528\u8005\uff0c\u7edd\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u8c03\u7528\u8005\u4e0d\u4f1a\u91ca\u653e\u5185\u5b58\uff0c\u8fd9", "\n\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f\u3002", "\n(B)return 0;\uff0c\u8bf4\u660e\u7b54\u9898\u8005\u6ca1\u6709\u638c\u63e1\u5f02\u5e38\u673a\u5236\u3002\u8c03\u7528\u8005\u6709\u53ef\u80fd\u5fd8\u8bb0\u68c0\u67e5\u8fd4\u56de\u503c\uff0c\u8c03\u7528\u8005\u8fd8", "\n\u53ef\u80fd\u65e0\u6cd5\u68c0\u67e5\u8fd4\u56de\u503c\uff08\u89c1\u540e\u9762\u7684\u94fe\u5f0f\u8868\u8fbe\u5f0f\uff09\u3002\u5984\u60f3\u8ba9\u8fd4\u56de\u503c\u80a9\u8d1f\u8fd4\u56de\u6b63\u786e\u503c\u548c\u5f02\u5e38\u503c\u7684", "\n\u53cc\u91cd\u529f\u80fd\uff0c\u5176\u7ed3\u679c\u5f80\u5f80\u662f\u4e24\u79cd\u529f\u80fd\u90fd\u5931\u6548\u3002\u5e94\u8be5\u4ee5\u629b\u51fa\u5f02\u5e38\u6765\u4ee3\u66ff\u8fd4\u56de\u503c\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u8f7b", "\n\u8c03\u7528\u8005\u7684\u8d1f\u62c5\u3001\u4f7f\u9519\u8bef\u4e0d\u4f1a\u88ab\u5ffd\u7565\u3001\u589e\u5f3a\u7a0b\u5e8f\u7684\u53ef\u7ef4\u62a4\u6027\u3002", "\n[3]", "\n(A)\u5fd8\u8bb0\u4fdd\u5b58\u539f\u59cb\u7684strDest\u503c\uff0c\u8bf4\u660e\u7b54\u9898\u8005\u903b\u8f91\u601d\u7ef4\u4e0d\u4e25\u5bc6\u3002", "\n[4]", "\n(A)\u5faa\u73af\u5199\u6210while (*strDest++=*strSrc++);\uff0c\u540c[1](B)\u3002", "\n(B)\u5faa\u73af\u5199\u6210while (*strSrc!=\u2019\\0\u2032) *strDest++=*strSrc++;\uff0c\u8bf4\u660e\u7b54\u9898\u8005\u5bf9\u8fb9\u754c\u6761\u4ef6\u7684", "\n\u68c0\u67e5\u4e0d\u529b\u3002\u5faa\u73af\u4f53\u7ed3\u675f\u540e\uff0cstrDest\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u6ca1\u6709\u6b63\u786e\u5730\u52a0\u4e0a\u2019\\0\u2032\u3002"], "title": "C\u8bed\u8a00\u9762\u8bd5\u9898\u5927\u6c47\u603b"},
{"contents": ["C\u8bed\u8a00\u7b14\u8bd5\u9898\uff081\uff09", "\n\u3000\u3000\u7b2c1\u9898\uff1a  \u5b8c\u6210\u6587\u4ef6\u7684\u62f7\u8d1d\uff0csrcFileName\u4e3a\u6e90\u6587\u4ef6\u540d\uff0cdstFileName \u4e3a\u76ee\u6807\u6587\u4ef6\u540d\u3002", "\n\u3000\u3000int copy_file\uff08const char *srcFileName, const char *dstFileName\uff09\uff1b", "\n\u3000\u3000\u7b2c2\u9898\uff1a  \u8bbe\u6709\u6587\u4ef6a.file, \u8bf7\u5199\u51fa\u7a0b\u5e8f\u5728\u6587\u4ef6\u7684\u5f00\u5934\u63d2\u5165 \u5b57\u7b26\u4e32 \u201c  file start: \u201d\uff1b", "\n\u3000\u3000\u7b2c3\u9898\uff1a", "\n\u3000\u3000\u5df2\u77e5", "\n\u3000\u3000union un {", "\n\u3000\u3000short s;", "\n\u3000\u3000char a[3];", "\n\u3000\u3000};", "\n\u3000\u3000\u6c42sizeof\uff08union un\uff09\uff1f", "\n\u3000\u3000\u7b2c4\u9898\uff1a", "\n\u3000\u3000\u8bf7\u63cf\u8ff0\u4ee5\u4e0b\u4ee3\u7801\u4e2d\u7684p\uff0c", "\n\u3000\u3000char\uff08*\uff08*p\uff08\uff09\uff09[]\uff09\uff08int, void \uff08*\uff09\uff08\uff09\uff09", "\n\u3000\u3000\u7b2c5\u9898\uff1a", "\n\u3000\u3000\u5df2\u77e5", "\n\u3000\u3000union un {", "\n\u3000\u3000short s;", "\n\u3000\u3000char a[3];", "\n\u3000\u3000};", "\n\u3000\u3000\u6c42sizeof\uff08union un\uff09\uff1f", "\n\u3000\u3000C\u8bed\u8a00\u7b14\u8bd5\u9898\uff082\uff09", "\n\u3000\u3000\u7b2c1\u9898\uff1a  \u5df2\u77e5 char a[] = \u201cabc\\0efg\u201d\uff0c \u6c42sizeof\uff08a\uff09 \u548c strlen\uff08a\uff09\uff1b", "\n\u3000\u3000\u7b2c2\u9898\uff1a  1, \u5199\u7a0b\u5e8f\u5b8c\u6210M\u8fdb\u5236\u8f6cN\u8fdb\u5236\uff0cM\u3001N\u4e3a1~10\u4e4b\u95f4\u3002", "\n\u3000\u3000mton\uff08const char* mNum, int m, char *nNum, int n\uff09\uff1b", "\n\u3000\u3000\u7b2c3\u9898\uff1a  \u5b8c\u621016\u8fdb\u5236\u5b57\u7b26\u4e32\u76f8\u52a0\uff0c\u8fd4\u56de\u76f8\u52a0\u540e\u768416\u8fdb\u5236\u5b57\u7b26\u4e32\u3002", "\n\u3000\u3000char* sum_str16\uff08const char* str1, const char* str2\uff09\uff1b", "\n\u3000\u3000\u7b2c4\u9898\uff1a  \u5b8c\u6210strlen\u51fd\u6570\uff0c\u8981\u6c42\u9664\u53c2\u6570\u5916\uff0c\u4e0d\u80fd\u4f7f\u7528\u53d8\u91cf\u548c\u5e93\u51fd\u6570\u3002", "\n\u3000\u3000\u7b2c5\u9898\uff1a  \u7528\u94fe\u8868\u5b8c\u6210\u7ed3\u70b9\u7684\u6dfb\u52a0\u3001\u5220\u9664\u64cd\u4f5c\u3002", "\n\u3000\u3000typedef struct student", "\n\u3000\u3000{", "\n\u3000\u3000int studentNum,", "\n\u3000\u3000struct student *next;", "\n\u3000\u3000}STU;", "\n\u3000\u3000C\u8bed\u8a00\u7b14\u8bd5\u9898\uff083\uff09", "\n\u3000\u3000\u7b2c1\u9898\uff1a  \u4e24\u4e2a\u5b57\u7b26\u4e32\uff0cs,t;\u628at\u5b57\u7b26\u4e32\u63d2\u5165\u5230s\u5b57\u7b26\u4e32\u4e2d\uff0cs\u5b57\u7b26\u4e32\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u5b58\u653et\u5b57\u7b26\u4e32", "\n\u3000\u3000\u7b2c2\u9898\uff1a  printf \uff08\u201c%d%d\\n\u201d\uff0c++n, power\uff082,n\uff09\uff09\uff1b \u5176\u4e2dpower\uff082,n\uff09\u4e3a\u5b9e\u73b0\u4e00\u5b9a\u529f\u80fd\u7684\u51fd\u6570 \u5982 2^n \u3002\u8bf7\u95ee\u8fd9\u79cd\u8868\u793a\u65b9\u6cd5\u6709\u4ec0\u4e48\u6f5c\u5728\u7684\u95ee\u9898\uff1f", "\n\u3000\u3000\u7b2c3\u9898\uff1a  printf \uff08s\uff09\uff1b", "\n\u3000\u3000\u8bf7\u95ee\u8fd9\u6837\u7684\u8bed\u53e5\u6709\u6ca1\u6709\u95ee\u9898\uff1f\uff08s\u4e3a\u4e00\u6307\u5411\u6709\u6548\u5b57\u7b26\u4e32\u7684\u6307\u9488\uff09", "\n\u3000\u3000\u7b2c4\u9898\uff1a  \u4e24\u6bb5\u4ee3\u7801\u5171\u5b58\u4e8e\u4e00\u4e2a\u6587\u4ef6\uff0c\u7f16\u8bd1\u65f6\u6709\u9009\u62e9\u7684\u7f16\u8bd1\u5176\u4e2d\u7684\u4e00\u90e8\u5206\uff0c\u8bf7\u95ee\u5982\u4f55\u5b9e\u73b0\uff1f", "\n\u3000\u3000\u7b2c5\u9898\uff1a  \u6570\u636e\u7ed3\u6784\u6307\u9488\u4f20\u7ed9\u51fd\u6570\uff0c\u51fd\u6570\u80fd\u8bbf\u95ee\u6570\u636e\u5355\u5143\uff0c\u4f46\u4e0d\u80fd\u4fee\u6539\u5b9e\u9645\u7684\u5185\u5bb9\uff0c\u5982\u4f55\u5b9e\u73b0\uff1f", "\n\u3000\u3000C\u8bed\u8a00\u7b14\u8bd5\u9898\uff084\uff09", "\n\u3000\u3000\u7b2c1\u9898\uff1a  \u4e24\u4e2a\u5b57\u7b26\u4e32\uff0cs,t;\u628at\u5b57\u7b26\u4e32\u63d2\u5165\u5230s\u5b57\u7b26\u4e32\u4e2d\uff0cs\u5b57\u7b26\u4e32\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u5b58\u653et\u5b57\u7b26\u4e32", "\n\u3000\u3000\u7b2c2\u9898\uff1a  char *a = \u201chello\u201d;", "\n\u3000\u3000char *b = \u201chello\u201d;", "\n\u3000\u3000if\uff08a= =b\uff09", "\n\u3000\u3000printf\uff08\u201cYES\u201d\uff09\uff1b", "\n\u3000\u3000else", "\n\u3000\u3000printf\uff08\u201cNO\u201d\uff09\uff1b", "\n\u3000\u3000\u7b2c3\u9898\uff1a  \u7b80\u8ff0stack frame \u7684\u542b\u4e49", "\n\u3000\u3000\u7b2c4\u9898\uff1a  printf \uff08\u201c%d%d\\n\u201d\uff0c++n, power\uff082,n\uff09\uff09\uff1b \u5176\u4e2dpower\uff082,n\uff09\u4e3a\u5b9e\u73b0\u4e00\u5b9a\u529f\u80fd\u7684\u51fd\u6570 \u5982 2^n \u3002\u8bf7\u95ee\u8fd9\u79cd\u8868\u793a\u65b9\u6cd5\u6709\u4ec0\u4e48\u6f5c\u5728\u7684\u95ee\u9898\uff1f", "\n\u3000\u3000\u7b2c5\u9898\uff1a  printf \uff08s\uff09\uff1b", "\n\u3000\u3000\u8bf7\u95ee\u8fd9\u6837\u7684\u8bed\u53e5\u6709\u6ca1\u6709\u95ee\u9898\uff1f\uff08s\u4e3a\u4e00\u6307\u5411\u6709\u6548\u5b57\u7b26\u4e32\u7684\u6307\u9488\uff09", "\n\u3000\u3000C\u8bed\u8a00\u7b14\u8bd5\u9898\uff085\uff09", "\n\u3000\u3000\u7b2c1\u9898\uff1a  \u5728\u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u9759\u6001\u53d8\u91cf\uff0c\u53ef\u80fd\u4ea7\u751f\u4ec0\u4e48\u95ee\u9898\uff1f", "\n\u3000\u3000\u7b2c2\u9898\uff1a  malloc\uff08\uff09\u4e0e calloc\uff08\uff09\u7684\u533a\u522b\uff1f", "\n\u3000\u3000\u7b2c3\u9898\uff1a  \u5bc4\u5b58\u5668\u53d8\u91cf\u53ef\u4e0d\u53ef\u4ee5\u8bbf\u95ee\u5176\u5730\u5740\uff1f\u53ef\u5426\u662f\u5168\u5c40\u53d8\u91cf\uff1f\u5728\u4ec0\u4e48\u573a\u5408\u4f7f\u7528\u5bc4\u5b58\u5668\u53d8\u91cf\uff1f", "\n\u3000\u3000\u7b2c4\u9898\uff1a  \u201c\\n\u201d \u2018\\n\u2019 \u7684\u533a\u522b\uff1f", "\n\u3000\u3000\u7b2c5\u9898\uff1a  #include \u201cstdio.h\u201d", "\n\u3000\u3000int main\uff08\uff09", "\n\u3000\u3000{", "\n\u3000\u3000int a;", "\n\u3000\u3000int *p;", "\n\u3000\u3000p = &a;", "\n\u3000\u3000*p = 0\u00d7500;", "\n\u3000\u3000a = \uff08int \uff09\uff08*\uff08&p\uff09\uff09\uff1b", "\n\u3000\u3000a = \uff08int \uff09\uff08&\uff08*p\uff09\uff09\uff1b", "\n\u3000\u3000if\uff08a == \uff08int\uff09p\uff09", "\n\u3000\u3000printf\uff08\u201cequal !\\n\u201d\uff09\uff1b", "\n\u3000\u3000else", "\n\u3000\u3000printf\uff08\u201cnot equal !\\n\u201d\uff09\uff1b", "\n\u3000\u3000}", "\n\u8bf7\u95ee\u672c\u7a0b\u5e8f\u7684\u8f93\u51fa\u663e\u793a\u662f\u4ec0\u4e48\uff1f"], "title": "\u6765\u81ea\u77e5\u540d\u4f01\u4e1a\u62db\u8058\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u7684C\u8bed\u8a00\u7b14\u8bd5\u9898\uff0c\u51715\u4e2a\u5927\u7c7b\uff0c25\u9898\uff0c\u5927\u5bb6\u4e0d\u59a8\u53ef\u4ee5\u81ea\u6211\u6d4b\u8bd5\u4e00\u4e0b\uff0c\u770b\u770b\u4f60\u662f\u5426\u5177\u5907\u4e86\u8fdb\u5165\u77e5\u540d\u4f01\u4e1a\u7684\u80fd\u529b\u5462\uff1f"},
{"contents": ["1\u3001\u5b8c\u6210\u5b57\u7b26\u4e32\u62f7\u8d1d\u53ef\u4ee5\u4f7f\u7528 sprintf\u3001strcpy \u53ca memcpy \u51fd\u6570\uff0c\u8bf7\u95ee\u8fd9\u4e9b\u51fd\u6570", "\n\u6709\u4ec0\u4e48\u533a\u522b\uff0c\u4f60\u559c\u6b22\u4f7f\u7528\u54ea\u4e2a\uff0c\u4e3a\u4ec0\u4e48\uff1f", "2\u3001\u53d8\u91cf\u7684\u58f0\u660e\u548c\u5b9a\u4e49\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "3\u3001\u8bf7\u5199\u51fa\u4e0b\u9762\u4ee3\u7801\u5728 32 \u4f4d\u5e73\u53f0\u4e0a\u7684\u8fd0\u884c\u7ed3\u679c\uff0c\u5e76\u8bf4\u660e sizeof \u7684\u6027\u8d28\uff1a", "#include <stdio.h>", "\n#include <stdlib.h>", "int main(void)", "\n{", "\nchar a[30];", "\nchar *b = (char *)malloc(20 * sizeof(char));", "\nprintf(\u201c%d\\n\u201d, sizeof(a));", "\nprintf(\u201c%d\\n\u201d, sizeof(b));", "\nprintf(\u201c%d\\n\u201d, sizeof(a[3]));", "\nprintf(\u201c%d\\n\u201d, sizeof(b+3));", "\nprintf(\u201c%d\\n\u201d, sizeof(*(b+4)));", "\nreturn 0 ;", "\n}", "4\u3001\u8bf7\u5b8c\u6210\u4ee5\u4e0b\u9898\u76ee\u3002\u6ce8\u610f\uff0c\u8bf7\u52ff\u76f4\u63a5\u8c03\u7528 ANSI C \u51fd\u6570\u5e93\u4e2d\u7684\u51fd\u6570\u5b9e\u73b0\u3002", "a)\u8bf7\u7f16\u5199\u4e00\u4e2a C \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u7ed9\u51fa\u4e00\u4e2a\u5b57\u8282\u4e2d\u88ab\u7f6e 1 \u7684\u4f4d\u7684\u4e2a\u6570\uff0c\u5e76\u8bf7", "\n\u7ed9\u51fa\u8be5\u9898\u7684\u81f3\u5c11\u4e00\u4e2a\u4e0d\u540c\u89e3\u6cd5\u3002", "\nb)\u8bf7\u7f16\u5199\u4e00\u4e2a C \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5c06\u7ed9\u5b9a\u7684\u4e00\u4e2a\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u6574\u6570\u3002", "\nc)\u8bf7\u7f16\u5199\u4e00\u4e2a C \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5c06\u7ed9\u5b9a\u7684\u4e00\u4e2a\u6574\u6570\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\u3002", "\nd)\u8bf7\u7f16\u5199\u4e00\u4e2a C \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u9006\u5e8f\u3002", "\ne)\u8bf7\u7f16\u5199\u4e00\u4e2a C \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5728\u7ed9\u5b9a\u7684\u5185\u5b58\u533a\u57df\u641c\u7d22\u7ed9\u5b9a\u7684\u5b57\u7b26\uff0c\u5e76\u8fd4\u56de", "\n\u8be5\u5b57\u7b26\u6240\u5728\u4f4d\u7f6e\u7d22\u5f15\u503c\u3002", "\nf)\u8bf7\u7f16\u5199\u4e00\u4e2a C \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5728\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u627e\u5230\u53ef\u80fd\u7684\u6700\u957f\u7684\u5b50\u5b57\u7b26\u4e32\uff0c", "\n\u8be5\u5b57\u7b26\u4e32\u662f\u7531\u540c\u4e00\u5b57\u7b26\u7ec4\u6210\u7684\u3002", "5\u3001\u7ed9\u51fa\u6f14\u793a\u4e0a\u8ff0\u51fd\u6570\u529f\u80fd\u7684\u4e00\u4e2a\u7b80\u5355\u7a0b\u5e8f\uff0c\u5e76\u8bf7\u7f16\u5199\u5bf9\u5e94\u7684 Makefile \u6587\u4ef6\u3002", "\u82e5\u5e94\u8058\u5d4c\u5165\u5f0f\u8f6f\u4ef6\u9ad8\u7ea7\u5de5\u7a0b\u5e08\uff0c\u8bf7\u4f5c\u7b54\u4ee5\u4e0b\u9898\u76ee\uff1a", "6\u3001\u6211\u4eec\u9700\u8981\u7f16\u5199\u4e00\u4e2a\u56fe\u5f62\u76f8\u5173\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u9700\u8981\u5904\u7406\u5927\u91cf\u56fe\u5f62(Shape)\u4fe1\u606f\uff0c", "\n\u56fe\u5f62\u6709\u77e9\u5f62(Rectangle)\uff0c\u6b63\u65b9\u5f62(Square)\uff0c\u5706\u5f62 (Circle)\u7b49\u79cd\u7c7b\uff0c\u5e94\u7528", "\n\u9700\u8981\u8ba1\u7b97\u8fd9\u4e9b\u56fe\u5f62\u7684\u9762\u79ef\uff0c\u5e76\u4e14\u53ef\u80fd\u9700\u8981\u5728\u67d0\u4e2a\u8bbe\u5907\u4e0a\u8fdb\u884c\u663e\u793a(\u4f7f\u7528\u5728\u6807\u51c6", "\n\u8f93\u51fa\u4e0a\u6253\u5370\u4fe1\u606f\u7684\u65b9\u5f0f\u505a\u4e3a\u793a\u610f)\u3002", "a)\u8bf7\u7528\u9762\u5411\u5bf9\u8c61\u7684\u65b9\u6cd5\u5bf9\u4ee5\u4e0a\u5e94\u7528\u8fdb\u884c\u8bbe\u8ba1\uff0c\u7f16\u5199\u53ef\u80fd\u9700\u8981\u7684\u7c7b", "b)\u8bf7\u7ed9\u51fa\u5b9e\u73b0\u4ee5\u4e0a\u5e94\u7528\u529f\u80fd\u7684\u793a\u4f8b\u6027\u4ee3\u7801\uff0c\u4ece\u67d0\u5904\u83b7\u53d6\u56fe\u5f62\u4fe1\u606f\uff0c", "\n\u5e76\u4e14\u8fdb\u884c\u8ba1\u7b97\u548c\u7ed8\u5236", "c)\u5982\u679c\u4f60\u7684Square\u7ee7\u627f\u81eaRectangle\uff0c\u8bf7\u7ed9\u51fa\u7406\u7531\uff0c\u5982\u679c\u4e0d\u662f\uff0c", "\n\u8bf7\u7ed9\u51fa\u7406\u7531\uff0c\u5e76\u4e14\u8bf7\u6bd4\u8f83\u4e24\u79cd\u65b9\u5f0f\u7684\u4f18\u52a3", "d)\u8bf7\u95ee\u4f60\u6240\u7f16\u5199\u7684\u7c7b\uff0c\u5728\u5982\u4e0b\u4ee3\u7801\u4e2d\u4f1a\u6709\u4f55\u8868\u73b0\uff0c\u8bf7\u89e3\u91ca", "void test_rectangle_area(Rectangle& r)", "\n{", "\nr.set_width(10);", "\nr.set_height(15);", "\nassert(r.area() == 150);", "\n}"], "title": "\u98de\u6f2b\u8f6f\u4ef6MiniGUI\u9762\u8bd5\u9898\uff0c\u4e3b\u8981\u662fC\u548cC++\u65b9\u9762\u7684\uff0c\u8bf7\u5728\u4e00\u4e2a\u5c0f\u65f6\u5185\u5b8c\u6210\u3002"},
{"contents": ["\u6700\u8fd1\u611f\u89c9\u5728\u8fd9\u5bb6\u516c\u53f8\u5b9e\u5728\u662f\u5e72\u4e0d\u4e0b\u53bb\u4e86\u3002\u4e8e\u662f\u5c31\u6295\u7b80\u5386\u9762\u8bd5\u5427\u3002", "\n\u60f3\u8981\u627e\u5230\u4e0b\u5bb6\uff0c\u9996\u5148\u662f\u8981\u5199\u597d\u81ea\u5df1\u7684\u7b80\u5386\uff0c\u4e8e\u662f\u547c\uff0c\u60f3\u60f3\u81ea\u5df1\u8fd9\u51e0\u5e74\u5e72\u8fc7\u7684\u4e1c\u897f\uff0c\u547c\u62c9\u4e00\u4e0b\u5168\u5199\u4e0a\u53bb\u4e86\u3002\u7136\u540e\u5c31\u5728\u62db\u8058\u7f51\u7ad9\u4e0a\u9022C/C++\u804c\u4f4d\u5c31\u6295\u3002", "\n\u4e8e\u662f\u5c31\u7b49\u6765\u4e86\u4e0d\u5c11\u9762\u8bd5\u673a\u4f1a\uff0c\u672c\u6765\u60f3\u505aLinux\u4e0bC\u5f00\u53d1\u7684\u3002\u4f46\u662f\u6ca1\u6709\u60f3\u5230\u9762\u8bd5\u7684\u673a\u4f1a\u5168\u662fVC\u7684\uff0c\u81ea\u5df1\u5bf9\u4e8eVC\u53ea\u662f\u4e00\u53ea\u534a\u89e3\uff0c\u4f46\u662f\u8fd9\u9762\u8bd5\u4e5f\u662f\u4e2a\u673a\u4f1a\uff0c\u5c31\u53bb\u770b\u770b\u4e86\u3002", "\n\u5468\u4e94\u4e0a\u5348\u9996\u5148\u53bb\u7684\u662f\u4e00\u5bb6\u5317\u7406\u5de5\u7684\u9644\u5c5e\u516c\u53f8\uff0c\u4eba\u5bb6\u62dbC++\u7684\uff0c\u4e3b\u8981\u662f\u505a3D\u5f00\u53d1\u7684\uff0c\u4f46\u662f\u54b1\u8fd9\u6ca1\u6709\u89c6\u9891\u5f00\u53d1\u7ecf\u9a8c\u554a\uff0c\u8bf4C++\u5427\uff0c\u54b1\u4e5f\u53ea\u662f\u4e86\u89e3\u4e00\u70b9\uff0c\u5bf9\u4e8eVC\u4e5f\u662f\u53ea\u4f1a\u7b80\u5355\u4f7f\u7528\u800c\u5df2\u3002\u6700\u5f00\u59cb\u8ba9\u54b1\u505a\u4e86\u4e00\u4efdJava\u7684\u9898\uff0c\u4eba\u4e8b\u7684\u770b\u5b8c\u4e86\u8bf4\u8fd9\u9053\u9898\u4e0d\u662f\u8ba9C/C++\u7684\u4eba\u505a\u7684\uff0c\u6c57\uff0c\u539f\u6765\u524d\u53f0\u7ed9\u641e\u9519\u4e86\u3002\u4e8e\u662f\u4eba\u4e8b\u90a3\u4e2a\u9ad8\u4e2a\u7f8e\u5973\u5c31\u53bb\u627eC\u7684\u6280\u672f\u8d1f\u8d23\u4eba\u4e86\uff0c\u5341\u51e0\u5206\u949f\u540e\uff0c\u6765\u4e86\u4e00\u4e2a\u4eba\uff0c\u4f46\u662f\u8fd9\u4e0dC\u9879\u76ee\u8d1f\u8d23\u4eba\uff0c\u662f\u5176\u5b83\u7ec4\u7684\uff0c\u56e0\u4e3a\u90a3\u8d1f\u8d23\u4eba\u51fa\u53bb\u529e\u4e8b\u513f\u4e86\u3002\u4e8e\u662f\u4ed6\u5c31\u7b80\u5355\u4ecb\u7ecd\u4e86\u4e00\u4e0b\u4ed6\u4eec\u5f00\u53d1\u7684\u516c\u53f8\uff0c\u8c8c\u4f3c\u62db\u6211\u7684\u9879\u76ee\u7ec4\u5341\u51e0\u4e2a\u4eba\uff0c\u6709\u4e00\u5927\u534a\u662fJava\u7684\u3002C\u8c8c\u4f3c\u53ea\u662f\u4e00\u5c0f\u90e8\u5206\uff0cC\u5f00\u53d1\u670d\u52a1\u5668\u7248\u672c\u7684\uff0c\u7136\u540e\u6709JavaScript\u5c01\u88c5\u8d77\u6765\u518d\u4f1a\u7ed9\u5e94\u7528\u663e\u793a\u7b49\u3002\u603b\u4e4b\u8fd9\u54e5\u4eec\u5bf9\u4e8e\u8fd9\u4e2a\u9879\u76ee\u4e5f\u662f\u4e0d\u592a\u4e86\u89e3\u3002", "\n\u4e8e\u662f\u5c31\u8bf4\u8ba9\u505a\u4e2a\u9898\u5427\uff0c\u7b2c\u4e00\u9898\u662fC++\u7684\u5b9a\u4e49\u4e24\u4e2a\u7c7b\uff0c\u4f46\u662f\u4e24\u4e2a\u7c7b\u7684\u6210\u5458\u53d8\u91cf\u4e92\u4e3a\u5bf9\u65b9\uff0c\u95ee\u662f\u5426\u53ef\u4ee5\u7f16\u8bd1\u5f97\u8fc7\u53bb\uff0c\u5982\u679c\u4e0d\u80fd\uff0c\u5982\u4f55\u4fee\u6539\u3002\u54b1\u4e0d\u4f1a\u3002\u7b2c\u4e8c\u4e2a\u9898\u662f\u95eeSTL\u4e3b\u8981\u6d89\u53ca\u4ec0\u4e48\u4e1c\u897f\uff0c\u54b1\u4e5f\u4e0d\u4f1a\u3002\u7136\u540e\u4e24\u4e2a\u662f\u601d\u7ef4\u9898\uff0c\u4e00\u4e2a\u662f1\u4e2a\u7ec6\u83cc3\u5206\u949f\u5206\u88c2\u4e00\u6b21\uff0c1\u5c0f\u65f6\u88c5\u6ee1\u5bb9\u5668\u3002\u95ee\u5982\u679c\u653e\u4e24\u4e2a\u7ec6\u83cc\u591a\u957f\u65f6\u95f4\u88c5\u6ee1\u5bb9\u5668\u3002\u8fd9\u4e2a\u8fd8\u77e5\u9053\uff0c57\u5206\u949f\u561b\u3002\u7b2c\u4e8c\u4e2a\u9898\u662f\u4f60\u8d70\u5230\u4e86\u4e00\u4e2a\u5341\u5b57\u8def\u53e3\uff0c\u9047\u5230\u4e24\u4e2a\u4eba\uff0c\u4e00\u4e2a\u4eba\u8bf4\u771f\u8bdd\uff0c\u4e00\u4e2a\u4eba\u8bf4\u5047\u8bdd\uff0c\u4f60\u5982\u4f55\u95ee\u80fd\u77e5\u9053\u81ea\u5df1\u5e94\u8be5\u8d70\u54ea\u4e2a\u8def\u53e3\u3002\u8fd9\u4e2a\u54b1\u771f\u6ca1\u6709\u601d\u8003\u8fc7\u3002\u5f97\u4e86\u3002\u8fd8\u662f\u770b\u7f16\u7a0b\u9898\u5427\uff0c\u7b2c\u4e00\u4e2a\u9898\u662f\u5982\u4f55\u5b9e\u73b0trim\u51fd\u6570\uff0c\u5c31\u662f\u628a\u5b57\u7b26\u4e32\u91cc\u6700\u53f3\u90e8\u5206\u7a7a\u683c\u53bb\u6389\uff0c\u5982\u201cBlaider \u201d\uff0c\u4fee\u6539\u540e\u4e3a\u201cBlaider\u201d\u3002\u8fd9\u4e2a\u8fd8\u597d\u505a\uff0c\u5c31\u662f\u8bb0\u5f55\u4e00\u4e0b\u5b57\u7b26\u4e32\u6700\u540e\u4e00\u7ec4\u7a7a\u683c\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c\u5728\u904d\u5386\u7ed3\u675f\u65f6\u628a\u8fd9\u4f4d\u7f6e\u96f6\uff0c\u8fd4\u56de\u6b64\u5b57\u7b26\u4e32\u3002", "\n\u5468\u4e94\u4e0b\u5348\u53bb\u5317\u822a\u7684\u4e00\u4e2a\u5b9e\u9a8c\u5ba4\u9762\u8bd5\u3002\u901a\u77e5\u8bf4\u662f2\uff1a00\uff0d4\uff1a00\u3002\u4e8e\u662f\u5c31\u57282\u70b9\u5de6\u53f3\u5230\u8fbe\uff0c\u6ca1\u6709\u60f3\u5230\u91cc\u9762\u5df2\u7ecf\u6709\u4e00\u4e2a\u4eba\u5728\u9762\u8bd5\uff0c\u90a3\u4e2a\u9762\u8bd5\u5b98\u8bf4\u4f60\u5148\u7b49\u7b49\u5427\uff0c\u5988\u7684\uff0c\u5c31\u8ba9\u6211\u5728\u65b0\u4e3b\u697c\u7684\u8d70\u5eca\u91cc\u786c\u751f\u751f\u5730\u7ad9\u4e86\u534a\u5c0f\u65f6\u3002\u8003\u8651\u5230\u9762\u8bd5\u4e3b\u8981\u662f\u4e3a\u4e86\u589e\u957f\u7ecf\u9a8c\uff0c\u54b1\u4e5f\u5fcd\u4e86\u3002\u534a\u5c0f\u65f6\u540e\uff0c\u7ec8\u4e8e\u8f6e\u5230\u4e86\uff0c\u539f\u6765\u62db\u7684\u4eba\u4e3b\u8981\u662f\u641e\u7b97\u6cd5\u7684\uff0c\u53ea\u662f\u628a\u6559\u6388\u548c\u535a\u58eb\u7684UML\u53ca\u6982\u8981\u8bbe\u8ba1\u8f6c\u6210\u8be6\u7ec6\u8bbe\u8ba1\u548cC++\u4ee3\u7801\uff0c\u95ee\u6211\u4ee5\u524d\u53c2\u52a0\u8fc7\u4ec0\u4e48\u9879\u76ee\uff0c\u7528\u8fc7\u4ec0\u4e48\u7b97\u6cd5\u6216\u8005\u662f\u6570\u636e\u7ed3\u6784\u6ca1\u6709\uff0c\u6211\u542c\u5f88\u5403\u60ca\uff0c\u6d89\u53ca\u5230\u7b97\u6cd5\u548c\u7ed3\u6784\u7684\u4eba\u8fd8\u4f1a\u60a8\u8fd9\u9762\u8bd5\u5417\uff1f\u60a8\u8001\u7528\u5f97\u8d77\u4e13\u95e8\u641e\u7b97\u6cd5\u548c\u7ed3\u6784\u7684\u8bbe\u8ba1\u4eba\u624d\u5417\uff1f\u6211\u8bf4\u57fa\u672c\u6ca1\u6709\uff0c\u5982\u679c\u6709\u7684\u8bdd\u4e5f\u5c31\u662f\u94fe\u8868\u548cFIFO\u5427\u3002\u7136\u540e\u95ee\u5728\u9879\u76ee\u91cc\u662f\u5e72\u4ec0\u4e48\u7684\uff0c\u662f\u6982\u8981\u8bbe\u8ba1\uff1f\u8be6\u7ec6\u8bbe\u8ba1\uff1f\u8fd8\u662f\u5e72\u4ec0\u4e48\uff1f\u6211\u8bf4\u6211\u53c2\u52a0\u7684\u90fd\u662f\u5c0f\u9879\u76ee\uff0c\u90fd\u662f\u5ba2\u6237\u6709\u4ec0\u4e48\u9700\u6c42\u76f4\u63a5\u505a\uff0c\u6ca1\u6709\u8fd9\u4e9b\u4e1c\u897f\u3002\u7136\u540e\u53c8\u95ee\u4e86\u4e00\u4e0b\u865a\u51fd\u6570\u7684\u610f\u601d\uff0c\u592a\u4ed6\u5988\u53ef\u7b11\u4e86\uff0c\u770b\u8fc7\u51e0\u672cC++\u4e66\u7684\u4eba\u90fd\u61c2\u8fd9\u4e2a\u5427\u3002\u5f53\u7136\u7ed3\u679c\u4e0d\u5bb9\u4e50\u89c2\uff0c\u671f\u95f4\u53c8\u6709\u4e00\u4eba\u6765\u9762\u8bd5\uff0c\u4ed6\u76f4\u63a5\u7ed9\u4eba\u5bb6\u8bf4\uff0c\u4f60\u5148\u5728\u5916\u9762\u7b49\u7b49\u5427\u3002\u56fd\u4f01\u7684\u8fd9\u5e2e\u4e1c\u897f\u771f\u4e0d\u62ff\u9762\u8bd5\u7684\u5f53\u4eba\u770b\u554a\u3002", "\n\u5468\u516d\u9762\u8bd5\u7684\u662f\u5317\u7406\u5de5\u7684\u4e00\u4e2a\u5b9e\u9a8c\u5ba4\u3002\u8fdb\u95e8\u8bf4\u4f60\u5148\u4e0a\u673a\u505a\u9898\u5427\uff0c\u4e94\u9053\uff0c\u7b2c\u4e00\u3001\u65b0\u5efa\u4e00\u4e2a\u5de5\u7a0b\uff0c\u5728\u6807\u9898\u680f\u663e\u793a\u7cfb\u7edf\u65f6\u95f4\uff0c\u4e00\u79d2\u66f4\u65b0\u4e00\u6b21\u3002\u7b2c\u4e8c\uff0c\u5b89\u7f6e\u4e24\u4e2a\u6309\u94ae\uff0c\u4e24\u4e2a\u9759\u6001\u63a7\u4ef6\uff0c\u4ece\u6570\u636e\u6587\u4ef6\u8bfb\u53d6\u6570\u636e\uff0c\u5e76\u663e\u793a\u5728\u9759\u6001\u63a7\u4ef6\u91cc\u3002\u7b2c\u4e09\uff0c\u5bf9\u6570\u636e\u8fdb\u884c\u964d\u5e8f\u6392\u5e8f\uff0c\u7b2c\u56db\uff0c\u5728\u9759\u6001\u63a7\u4ef6\u91cc\u753b\u51fa\u8fd9\u4e9b\u5750\u6807\u70b9\u3002\u7b2c\u4e94\uff0c\u5c06\u6b64\u6587\u4ef6\u901a\u8fc7\u7f51\u7edc\u53d1\u9001\u548c\u63a5\u6536\u4fdd\u5b58\u4e00\u4e0b\u3002", "\n\u5e73\u65f6\u505aVC\u90fd\u662f\u76f4\u63a5\u5728\u7f51\u4e0a\u641c\u7d22\u627e\u4ee3\u7801\uff0c\u7136\u540e\u4fee\u6539\uff0c\u81ea\u5df1\u76f4\u63a5\u505a\u54ea\u4f1a\u554a\u3002\u4e8e\u662f\u544a\u8bc9\u9762\u8bd5\u4eba\u5458\u8bf4\uff0c\u6211\u4e0d\u4f1a\u3002\u4e8e\u662f\u8881\u8001\u5e08\u5c31\u8bf4\u90a3\u5c31\u8c08\u8c08\u4f60\u7684\u9879\u76ee\u7ecf\u9a8c\u5427\u3002\u4e8e\u662f\u6765\u5230\u53e6\u5916\u4e00\u4e2a\u4f1a\u8bae\u5ba4\uff0c\u4e3b\u4efb\u548c\u8881\u8001\u5e08\u5f00\u59cb\u8c08\u9879\u76ee\u7ecf\u9a8c\uff0c\u7136\u540e\u6211\u53d1\u73b0\u4ed6\u4eec\u73b0\u5728\u505a\u7684\u5176\u5b9e\u548c\u6211\u66fe\u7ecf\u505a\u8fc7\u7684\u4e00\u4e2a\u5c0f\u9879\u76ee\u5f88\u76f8\u4f3c\uff0c\u53ef\u4ee5\u8bf4\u5c31\u662f\u6211\u90a3\u4e2a\u8f6f\u4ef6\u7684\u7ffb\u7248\u3002\u63a7\u5236PCI\u8bbe\u5907\uff0c\u7528TeeChart\u663e\u793a\u7b49\u3002\u5185\u5bb9\u95ee\u4e86\u5f88\u591a\uff0c\u8fd8\u8ba9\u53e3\u5934\u7ffb\u8bd1\u4e86\u4e24\u6bb5\u82f1\u8bed\u3002\u7b2c\u4e00\u4e2a\u5e38\u7528\u7684\u57fa\u672c\u7ffb\u8bd1\u8fc7\u4e86\uff0c\u7b2c\u4e8c\u4e2a\u4e13\u4e1a\u7684\u6709\u4e24\u4e2a\u5355\u8bcd\u4e0d\u8ba4\u8bc6\u3002\u6700\u540e\u4e3b\u4efb\u8bf4\uff0c\u4f60\u8fd8\u662f\u505a\u4e00\u4e0b\u9898\u5427\uff0c\u53ef\u80fd\u4f1a\u5f71\u54cd\u5230\u4f60\u7684\u5de5\u8d44\uff0c\u4e8e\u662f\u6211\u5c31\u5728\u53ef\u4ee5\u901a\u8fc7\u7f51\u7edc\u7684\u60c5\u51b5\u4e0b\u5f00\u59cb\u505a\u9898\u3002\u7b2c\u4e00\uff0c\u7b2c\u4e8c\u5f88\u5feb\u641e\u5b9a\uff0c\u6392\u5e8f\u77e5\u9053\u662f\u7528\u5192\u6ce1\u6cd5\uff0c\u4f46\u662f\u5b9e\u73b0\u8d77\u6765\u53bb\u53d1\u73b0\u8001\u662f\u6392\u5e8f\u4e0d\u5bf9\uff0c\u8c03\u8bd5\u4e86\u5341\u5206\u5206\u949f\u624d\u641e\u51fa\u6765\u3002\u7b2c\u56db\u6ca1\u6709\u505a\u8fc7\uff0c\u7b2c\u4e94\u7f51\u7edc\u7684\u516c\u53f8\u6709\u70b9\u590d\u6742\uff0c\u4e5f\u4e0d\u662f\u4e00\u65f6\u534a\u4f1a\u53ef\u4ee5\u8c03\u8bd5\u51fa\u6765\u7684\uff0c\u4e8e\u662f\u76f4\u63a5\u4ea4\u5377\uff0c\u8d70\u4eba\u3002\u4f30\u8ba1\u5bf9\u6211\u7684\u7f16\u7a0b\u80fd\u529b\u4ed6\u4eec\u611f\u5230\u6000\u7591\u5427\u3002", "\n\u4e0b\u5348\u5750\u5730\u94c1\u8d76\u5230\u970d\u8425\u3002\u8ba9\u540c\u5b66\u770b\u4e86\u4e00\u4e0b\u6211\u7684\u7b80\u5386\uff0c\u53d1\u73b0\u771f\u7684\u662f\u5f88\u4e71\u3002\u641e\u7b80\u5386\u5e94\u8be5\u4e13\u4e1a\u70b9\uff0c\u540c\u65f6\u81ea\u5df1\u7684\u809a\u5b50\u91cc\u5e94\u8be5\u4e5f\u6709\u70b9\u6599\u3002\u7ecf\u8fc7\u4e09\u573a\u9762\u8bd5\uff0c\u6211\u7ec8\u4e8e\u77e5\u9053\u4ec0\u4e48\u53eb\u4e0d\u80fd\u6df7\u4e86\uff0c\u4e0d\u62ff\u51fa\u70b9\u81ea\u5df1\u7684\u4e1c\u897f\uff0c\u771f\u4e0d\u884c\u3002\u540c\u65f6\u542c\u540c\u5b66\u8bb2\u4e86\u8bb2\u4ed6\u4eec\u90a3\u6837\u5b50\u7684\u5927\u516c\u53f8\uff0c\u6bcf\u4e2a\u4eba\u505a\u5f97\u5f88\u4e13\u3002\u540c\u65f6\u4ed6\u4eec\u9762\u8bd5\u65f6\u95ee\u7684\u4e1c\u897f\u3002\u6211\u624d\u611f\u89c9\u3002\u81ea\u5df1\u8fd9\u6b21\u7684\u9762\u8bd5\u5f88\u5931\u8d25\u554a\u3002\u672c\u6765\u60f3\u627eLinux\u4e0b\u5f00\u53d1\u7684\u5de5\u4f5c\uff0c\u4f46\u662f\u7b80\u5386\u4e0a\u5e76\u6ca1\u6709\u7a81\u51fa\u81ea\u5df1\u5728Linux\u4e0b\u7684\u7ecf\u5386\uff0c\u540c\u65f6\u5bf9\u4e8e\u4e0a\u673a\u9898\u7684\u9762\u8bd5\u8ba9\u6211\u77e5\u9053\uff0c\u4e0d\u80fd\u53ea\u9760\u7f51\u7edc\u554a\uff0c\u81ea\u5df1\u7684\u8111\u888b\u91cc\u8fd8\u662f\u5e94\u8be5\u8bb0\u70b9\u4e1c\u897f\u7684\uff0c\u81f3\u5c11\u628a\u5b66\u7528\u7684\u4e1c\u897f\u90fd\u53ef\u4ee5\u5199\u4e0b\u6765\uff0c\u5982\u7f51\u7edcSocket\u7b49\uff0c\u4e8e\u662f\u51b3\u5b9a\uff0c\u4e0d\u518d\u627e\u5de5\u4f5c\uff0c\u8707\u4f0f\u4e24\u4e2a\u6708\uff0c\u597d\u597d\u6df1\u5316\u4e00\u4e0b\u81ea\u5df1\u5b66\u5230\u7684\u4e1c\u897f\u518d\u51fa\u6765\u627e\u5de5\u4f5c\u3002", "\n\u540c\u90ae\u4ef6\u5217\u8868\u4e0a\u4e00\u4f4d\u5728IBM\u505a\u5185\u6838\u5f00\u53d1\u7684\u54e5\u4eec\u804a\u8fc7\u540e\u4e5f\u660e\u767d\uff0c\u81ea\u5df1\u7684\u7ecf\u5386\u592a\u5927\u592a\u6742\uff0c\u5e76\u6ca1\u6709\u4efb\u4f55\u4eae\u70b9\uff0c\u6c38\u8fdc\u8fdb\u4e0d\u4e86\u5927\u516c\u53f8\u3002\u6211\u53ef\u4ee5\u5148\u5728\u4e00\u5bb6\u5c0f\u516c\u53f8\u5e72\uff0c\u6709\u673a\u4f1a\u518d\u53bb\u5927\u516c\u53f8\u3002\u540c\u65f6\u8981\u53c2\u52a0\u5f00\u6e90\u9879\u76ee\uff0c\u5207\u5b9e\u63d0\u9ad8\u4e00\u4e0b\u81ea\u5df1\u7684\u9879\u76ee\u7ecf\u5386\u548c\u9879\u76ee\u7ecf\u9a8c\uff0c\u5411\u5927\u5e08\u4eec\u5b66\u4e60\u3002"], "title": "2012\u5e746\u6708\u521d\u7684C/C++\u804c\u9762\u8bd5\u7ecf\u8fc7"},
{"contents": [], "title": "c\u8bed\u8a00\u7b14\u8bd5\u6a21\u62df\u9898\u4ee5\u53ca\u7b54\u6848"},
{"contents": [], "title": "c\u8bed\u8a00\u516d\u6708\u7b14\u8bd5\u8003\u8bd5\u6a21\u62df\u53ca\u7b54\u6848"},
{"contents": ["1\uff5e6\u5fc5\u7b54\uff0c7\u63d0\u9ad8\u9898\u4efb\u9009", "\uff081\uff09\u00a0\u00a0\u00a0 \u5199\u51faANSI C\u51fd\u6570\u5e93\u4e2d\u4e09\u4e2a\u5b57\u7b26\u4e32\u64cd\u4f5c\u51fd\u6570\u7684\u540d\u79f0\uff0c\u5199\u51fa\u5176\u4e2d\u4efb\u4e00\u4e2a\u7684\u51fd\u6570\u539f\u578b\uff1b\u67e5\u770bstring.h", "\uff082\uff09\u00a0\u00a0\u00a0\u00a0\u00a0 char *strcat( char *strDestination, const char *strSource );\u628a\u524d\u540e\u4e24\u4e2a\u5b57\u7b26\u4e32\u8fde\u63a5\u8d77\u6765", "\uff083\uff09\u00a0\u00a0\u00a0\u00a0\u00a0 char *strcpy( char *strDestination, const char *strSource );\u62f7\u8d1d\u51fd\u6570\uff0c\u2026\u2026", "\uff084\uff09\u00a0\u00a0\u00a0\u00a0\u00a0 int strcmp( const char *string1, const char *string2 );\u6bd4\u8f83\u51fd\u6570\uff0c\u2026\u2026", "\uff085\uff09\u00a0\u00a0\u00a0\u00a0\u00a0 size_t strlen( const char *string );\u6c42\u957f\u5ea6\u51fd\u6570\uff0c", "\uff086\uff09\u00a0\u00a0\u00a0 char *_strupr( char *string );\u5c0f\u5927\u5199\u8f6c\u6362\u51fd\u6570\uff0c\u8f6c\u6362\u5b57\u7b26\u4e32\u7684\u5927\u5c0f\u5199\u3002", "\uff082\uff09char str[ ]= \uff02Hello\uff02;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 sizeof(str) =", "char *p=str;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 sizeof(p)\u00a0 =", "float n=10.0;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 sizeof(n)\u00a0 =", "\uff083\uff09char a[2][2][3]={{{1,6,3},{5,4,15}},{{22,19,33},{23,12,7}} };", "\n", "char a[1][1][3] = ", "\uff084\uff09\u89e3\u91ca\u5806\u548c\u6808\u5728\u7a0b\u5e8f\u5b58\u50a8\u7a7a\u95f4\u4e0a\u4ee3\u8868\u7684\u542b\u4e49\u3002", "\n", "\uff085\uff09\u7f16\u5199\u4e00\u4e2a\u6807\u51c6C\u51fd\u6570\uff0c\u5c06\u53c2\u6570\u4f20\u9012\u7684\u5b57\u7b26\u4e32\u98a0\u5012\u663e\u793a\uff0c\u6ce8\u610f\u5934\u6587\u4ef6\uff0c\u98ce\u683c\u548c\u6ce8\u91ca\u3002", "#include <stdio.h>", "#include<>", "/*\u5b57\u7b26\u8f6c\u6362\u51fd\u6570*/", "Int Str_Convert(char* str)", "{", "\u00a0 Int nLen=0 ;", "nLen=strlen(str);", "for(int i=0;i<nLen/2;i++)", "{", "char ch;", "ch = str[i];", "str[i] = str[nLen-i];", "str[nLen-i] = ch;", "}", "\n", "}", "\uff086\uff09\u4f7f\u7528\u6807\u51c6C\u5199\u4e00\u4e2amain\u51fd\u6570\uff0c\u7a0b\u5e8f\u7f16\u8bd1\u53ef\u901a\u8fc7\uff0c\u4f46\u8fd0\u884c\u5d29\u6e83\u3002", "\n", "\u8bbe\u8ba1\u51fd\u6570\u5b9e\u73b0 int atoi(char *s)\u3002", "#include<string.h> //\u5c06\u5b57\u7b26\u4e32\u8f6c\u5316\u4e3a\u6574\u6570\u5e76\u8fd4\u56de\u8be5\u503c", "int atoi(char *s)", "{", "int i,result=0,length;", "length=strlen(s);", "if(s[0] == \u2018-\u2019) i=1; //\u82e5\u662f\u8d1f\u6570\uff0c\u5219\u4ece\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5f00\u59cb\u8ba1\u6570", "else i=0; //\u5426\u5219\u4ece0\u53f7\u4f4d\u5f00\u59cb\u8ba1\u6570", "for( ; i < length; ++i)", "{", "result = result * 10 + s[i] \u2013 48; //48\u662f\u5b57\u7b260\u7684ASCII\u7801", "}", "if(s[0] == \u2018-\u2019) return -1 * result;", "else return result;", "\uff087\uff09\u00a0\u00a0\u00a0 }"], "title": "C\u8bed\u8a00\u57fa\u7840\u7b14\u8bd5\u9898"},
{"contents": ["61\uff0e\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u8be5\u51fd\u6570\u7684\u529f\u80fd\u662f\uff1a\u7edf\u8ba1\u5404\u5e74\u9f84\u6bb5\u7684\u4eba\u6570\u3002N\u4e2a\u5e74\u9f84\u901a\u8fc7\u8c03\u7528\u968f\u673a\u51fd\u6570\u83b7\u5f97\uff0c\u5e76\u653e\u5728\u4e3b\u51fd\u6570\u7684age\u6570\u7ec4\u4e2d\uff1b\u8981\u6c42\u51fd\u6570\u628a0\u81f39\u5c81\u5e74\u9f84\u6bb5\u7684\u4eba\u6570\u653e\u5728d[0]\u4e2d\uff0c\u628a10\u81f319\u5c81\u5e74\u9f84\u6bb5\u7684\u4eba\u6570\u653e\u5728d[1]\u4e2d\uff0c\u628a20\u81f329\u5c81\u5e74\u9f84\u6bb5\u7684\u4eba\u6570\u653e\u5728d[2]\u4e2d\uff0c\u5176\u4f59\u4f9d\u6b64\u7c7b\u63a8\uff0c\u628a100\u5c81(\u542b100)\u4ee5\u4e0a\u5e74\u9f84\u7684\u4eba\u6570\u90fd\u653e\u5728d[10]\u4e2d\u3002\u7ed3\u679c\u5728\u4e3b\u51fd\u6570\u4e2d\u8f93\u51fa\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "#define\u00a0 N\u00a0 50", "#define\u00a0 M\u00a0 11", "\u00a0", "void fun(int *a, int *b)", "{", "}", "\u00a0", "double rnd()", "{", "static t=29, c=217, m=1024, r=0;", "r=(r*t+c)%m;", "return((double)r/m);", "}", "\u00a0", "main()", "{", "int\u00a0 age[N], i, d[M];", "for(i=0;\u00a0 i<N; i++)", "age[i]=(int)(115*rnd());", "printf(\u201cThe original data :\\n\u201d);", "for(i=0; i<N; i++)", "printf((i+1)%10==0?\u201d%4d\\n\u201d:\u201d%4d\u201d,age[i]);", "printf(\u201c\\n\\n\u201d);", "fun( age,\u00a0 d);", "for(i=0;i<10;i++)printf(\u201c%4d\u2014%4d\u00a0 :\u00a0 %4d\\n\u201d, i*10, i*10+9, d[i]);", "printf(\u201d\u00a0 Over\u00a0 100\u00a0 :\u00a0 %4d\\n\u201d, d[10]);", "}", "\u00a0", "86\uff0e\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5176\u529f\u80fd\u662f\uff1a\u8ba1\u7b97\u5e76\u8f93\u51fa\u7ed9\u5b9a10\u4e2a\u6570\u7684\u65b9\u5dee\uff1a", "\u00a0", "\u5176\u4e2d\uff1a", "\u00a0", "\u4f8b\u5982\uff0c\u7ed9\u5b9a\u768410\u4e2a\u6570\u4e3a95.0\u300189.0\u300176.0\u300165.0\u300188.0\u300172.0\u300185.0\u300181.0\u300190.0\u300156.0\uff0c\u5219\u8f93\u51fa\u4e3aS=11.730729\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "#include <math.h>", "\u00a0", "double fun(double x[10])", "{", "}", "\u00a0", "main()", "{", "doule s, x[10]={95.0,89.0,76.0,65.0,88.0,72.0,85.0,81.0,90.0,56.0};", "int i;", "printf(\u201c\\nThe original data is :\\n\u201d);", "for(i=0;i<10;i++)", "printf(\u201c%6.1f\u201d,x[i]);", "printf(\u201c\\n\\n\u201d);", "s=fun(x);", "printf(\u201cs=%f\\n\\n\u201d,s);", "}", "\u00a0", "49\uff0e\u4e0b\u9762\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u5bf9N\u540d\u5b66\u751f\u7684\u5b66\u4e60\u6210\u7ee9\uff0c\u4ece\u9ad8\u5230\u4f4e\u7684\u987a\u5e8f\u627e\u51fa\u524dm(m\u22640)\u540d\u5b66\u751f\u6765\uff0c\u5e76\u5c06\u8fd9\u4e9b\u5b66\u751f\u6570\u636e\u5b58\u653e\u5728\u4e00\u4e2a\u52a8\u6001\u5206\u914d\u7684\u8fde\u7eed\u5b58\u50a8\u533a\u4e2d\uff0c\u6b64\u5b58\u50a8\u533a\u7684\u9996\u5730\u5740\u4f5c\u4e3a\u51fd\u6570\u503c\u8fd4\u56de\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include<stdio.h>", "#include<alloc.h>", "#include<string.h>", "#include<conio.h>", "#define\u00a0 N 10", "\u00a0", "typedef struct ss", "{", "char num[10];", "int s;", "} STU;", "\u00a0", "STU *fun(STU a[], int m)", "{", "STU b[N], *t;", "int i,j,k;", "/********found********/", "*t=malloc(sizeof(STU));", "for(i=0; i<N; i++)", "b[i]=a[i];", "for(k=0; k<m; k++)", "{", "for(i=j=0; i<N; i++)", "if(b[i].s > b[j].s)", "j=i;", "/********found********/", "t[k].num=b[j].num;", "t[k].s=b[j].s;", "b[j].s=0;", "}", "return t;", "}", "\u00a0", "outresult(STU a[], FILE *pf)", "{", "int i;", "for(i=0; i<N; i++)", "fprintf(pf,\u201dNo=%s Mark=%d\\n\u201d,a[i].num,a[i].s);", "fprintf(pf,\u201d\\n\\n\u201d);", "}", "\u00a0", "main()", "{", "STU a[N]={ {\u201cA01\u2033,81},{\u201cA02\u2033,89},{\u201cA03\u2033,66},{\u201cA04\u2033,87},{\u201cA05\u2033,77},", "{\u201cA06\u2033,90},{\u201cA07\u2033,79},{\u201cA08\u2033,61},{\u201cA09\u2033,80},{\u201cA10\u2033,71}};", "STU *pOrder;", "int\u00a0 i, m;", "clrscr();", "printf(\u201c***** The Original data *****\\n\u201d);", "outresult(a, stdout);", "printf(\u201c\\nGive the number of the students who have better score: \u201c);", "scanf(\u201c%d\u201d,&m);", "while(m>10)", "{", "printf(\u201c\\nGinve the number of the students who have better score: \u201c);", "scanf(\u201c%d\u201d,&m);", "}", "pOrder=fun(a,m);", "printf(\u201c***** THE RESULT *****\\n\u201d);", "printf(\u201cThe top :\\n\u201d);", "for(i=0; i<m; i++)", "printf(\u201d %s\u00a0 %d\\n\u201d,pOrder[i].num,pOrder[i].s);", "free(pOrder);", "}", "\u00a0", "55\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u4e3a\u4e00\u4e2a\u5076\u6570\u5bfb\u627e\u4e24\u4e2a\u7d20\u6570\uff0c\u8fd9\u4e24\u4e2a\u7d20\u6570\u4e4b\u548c\u7b49\u4e8e\u8be5\u5076\u6570\uff0c\u5e76\u5c06\u8fd9\u4e24\u4e2a\u7d20\u6570\u901a\u8fc7\u5f62\u53c2\u6307\u9488\u4f20\u56de\u4e3b\u51fd\u6570\u3002", "\u8bf7\u6539\u6b63\u51fd\u6570fun\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <stdio.h>", "#include <math.h>", "void fun(int a,int *b,int *c)", "{", "int i,j,d,y;", "for(i=3;i<a/2;i=i+2)", "{", "/********found********/", "y=0;", "for(j=2;j<=sqrt((double)i);j++)", "if(i%j==0)", "y=0;", "if(y==1)", "{", "/********found********/", "d=i-a;", "for(j=2;j<=sqrt((double)i);j++)", "if(d%j==0)", "y=0;", "if(y==1)", "{", "*b=i;", "*c=d;", "}", "}", "}", "}", "main()", "{", "int a,b,c;", "do", "{", "printf(\u201c\\nInput a: \u201c);", "scanf(\u201c%d\u201d,&a);", "}", "while(a%2);", "fun(a,&b,&c);", "printf(\u201c\\n\\n%d=%d + %d\\n\u201d,a,b,c);", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u4e94\u5341\u5957\uff09"},
{"contents": ["100\uff0e\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5176\u529f\u80fd\u662f\uff1a\u8ba1\u7b97\u5e76\u8f93\u51fa", "S=1+(1+2", ")+(1+2", "+3", ")+\u2026+(1+2", "+3", "+\u2026+n", ")", "\u4f8b\u5982\uff0c\u82e5\u4e3b\u51fd\u6570\u4ece\u952e\u76d8\u7ed9n\u8f93\u516520\u540e\uff0c\u5219\u8f93\u51fa\u4e3as=534.188884\u3002", "\u6ce8\u610f\uff1an\u7684\u503c\u8981\u6c42\u5927\u4e8e1\u4f46\u4e0d\u5927\u4e8e100\u3002\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <math.h>", "#include <stdio.h>", "\u00a0", "double fun(int n)", "{", "\u00a0", "}", "\u00a0", "\u00a0", "main()", "{", "int\u00a0 n;", "double\u00a0 s;", "printf(\u201c\\n\\nInput n:\u00a0 \u201c);", "scanf(\u201c%d\u201d,&n);", "s=fun(n);", "printf(\u201c\\n\\ns=%f\\n\\n\u201d,s);", "}", "\u00a0", "10\uff0e\u7f16\u5199\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\uff1a\u5229\u7528\u4ee5\u4e0b\u6240\u793a\u7684\u7b80\u5355\u8fed\u4ee3\u65b9\u6cd5\u6c42\u65b9\u7a0bCOS(X)-X=0\u7684\u4e00\u4e2a\u5b9e\u6839\u3002", "X", "=COS(X", ")", "\u8fed\u4ee3\u6b65\u9aa4\u5982\u4e0b\uff1a", "(1)\u53d6x1\u521d\u503c\u4e3a0.0\uff1b", "(2)x0=x1\uff0c\u628ax1\u7684\u503c\u8d4b\u7ed9x0\uff1b", "(3)x1=COS(x0)\uff0c\u6c42\u51fa\u4e00\u4e2a\u65b0\u7684x1\uff1b", "(4)\u82e5x0\u2014x1\u7684\u7edd\u5bf9\u503c\u5c0f\u4e8e0.000001\uff0c\u5219\u6267\u884c\u6b65\u9aa4(5)\uff0c\u5426\u5219\u6267\u884c\u6b65\u9aa4(2)\uff1b", "(5)\u6240\u6c42x1\u5c31\u662f\u65b9\u7a0bCOS(X)-X=0\u7684\u4e00\u4e2a\u5b9e\u6839\uff0c\u4f5c\u4e3a\u51fd\u6570\u503c\u8fd4\u56de\u3002", "\u7a0b\u5e8f\u5c06\u8f93\u51fa\u7ed3\u679cRoot=0.739085\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <conio.h>", "#include <math.h>", "#include <stdio.h>", "\u00a0", "float fun()", "{", "}", "\u00a0", "main()", "{", "clrscr();", "printf(\u201cRoot=%f\\n\u201d,fun());", "}", "\u00a0", "10\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u5c06s\u6240\u6307\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\u7684t1\u6240\u6307\u5b50\u4e32\u5168\u90e8\u66ff\u6362\u6210t2\u6240\u6307\u5b50\u5b57\u7b26\u4e32\uff0c\u6240\u5f62\u6210\u7684\u65b0\u4e32\u653e\u5728w\u6240\u6307\u7684\u6570\u7ec4\u4e2d\u3002\u5728\u6b64\u5904\uff0c\u8981\u6c42t1\u548ct2\u6240\u6307\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u76f8\u540c\u3002\u4f8b\u5982\uff0c\u5f53s\u6307\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u4e3aabcdabfab\uff0ct1\u6307\u5b50\u4e32\u4e2d\u7684\u5185\u5bb9\u4e3aab\uff0ct2\u6240\u6307\u5b50\u4e32\u4e2d\u7684\u5185\u5bb9\u4e3a99\u65f6\uff0c\u7ed3\u679c\uff0c\u5728w\u6240\u6307\u7684\u6570\u7ec4\u4e2d\u7684\u5185\u5bb9\u5e94\u4e3a99cd99f99\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <conio.h>", "#include <stdio.h>", "#include <string.h>", "/********found********/", "int fun(char *s,char *t1,char *t2,char *w)", "{", "int i;", "char *p,*r,*a;", "strcpy(w,s);", "while(*w)", "{", "p=w; r=t1;", "/********found********/", "while(r)", "if(*r==*p)", "{", "r++;p++;", "}", "else", "break;", "if(*r==\u2019\\0\u2032)", "{", "a=w;", "r=t2;", "while(*r)", "{", "*a=*r;", "a++;", "r++;}", "w+=strlen(t2);", "}", "else", "w++;", "}", "}", "\u00a0", "main()", "{", "char s[100],t1[100],t2[100],w[100];", "clrscr();", "printf(\u201c\\nPlease enter string s:\u201d);", "scanf(\u201c%s\u201d,s);", "printf(\u201c\\nPlease enter substring t1:\u201d);", "scanf(\u201c%s\u201d,t1);", "printf(\u201c\\nPlease enter substring t2:\u201d);", "scanf(\u201c%s\u201d,t2);", "if(strlen(t1)==strlen(t2)){", "fun(s,t1,t2,w);", "printf(\u201c\\nThe result is :%s\\n\u201d,w);", "}", "else", "printf(\u201cError :strlen(t1)!=strlen(t2)\\n\u201d);", "}", "\u00a0", "\u00a0", "45.\u4e0b\u9762\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u5c06s\u6240\u6307\u5b57\u7b26\u4e32\u4e2d\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684t1\u6240\u6307\u5b50\u4e32\u66ff\u6362\u6210t2\u6240\u6307\u5b50\u4e32\u3002\u6240\u5f62\u6210\u7684\u65b0\u4e32\u653e\u5f80w\u6240\u6307\u7684\u6570\u636e\u4e2d\u3002\u5728\u6b64\u5904\uff0c\u8981\u6c42t1\u548ct2\u6240\u6307\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u76f8\u540c\u3002\u4f8b\u5982\uff0c\u5f53s\u6240\u6307\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u4e3aabcdabfabc\uff0ct1\u6240\u6307\u5b50\u4e32\u4e2d\u7684\u5185\u5bb9\u4e3aab\uff0ct2\u6240\u6307\u5b50\u4e32\u4e2d\u7684\u5185\u5bb9\u4e3a99\u65f6\uff0c\u7ed3\u679c\uff0c\u5728w\u6240\u6307\u7684\u6570\u7ec4\u4e2d\u7684\u5185\u5bb9\u4e3aabcdabf99c\u3002", "\u8bf7\u6539\u6b63\u51fd\u6570fun\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u655b\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff1b\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <conio.h>", "#include <stdio.h>", "#include <string.h>", "\u00a0", "/********found********/", "int fun(char *s, char *t1, char *t2, char *w)", "{", "int\u00a0 i;", "char\u00a0 *p,\u00a0 *r,\u00a0 *a;", "strcpy( w, s );", "/********found********/", "while ( w )", "{", "p = w;", "r = t1;", "while ( *r )", "if ( *r == *p )", "{", "r++;", "p++;", "}", "else", "break;", "if ( *r == \u2018\\0\u2032 )", "a=w;", "w++;", "}", "r = t2;", "while ( *r )", "{", "*a = *r;", "a++;", "r++;", "}", "}", "\u00a0", "main()", "{", "char\u00a0 s[100],\u00a0 t1[100],\u00a0 t2[100],\u00a0 w[100];", "clrscr();", "printf(\u201c\\nPlease enter string S:\u201d);", "scanf(\u201c%s\u201d, s);", "printf(\u201c\\nPlease enter substring t1:\u201d);", "scanf(\u201c%s\u201d, t1);", "printf(\u201c\\nPlease enter substring t2:\u201d);", "scanf(\u201c%s\u201d, t2);", "if ( strlen(t1)==strlen(t2) )", "{", "fun( s, t1, t2, w);", "printf(\u201c\\nThe result is :\u00a0 %s\\n\u201d, w);", "}", "else", "printf(\u201c\\nError : strlen(t1) != strlen(t2)\\n\u201d);", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u56db\u5341\u4e5d\u5957\uff09"},
{"contents": ["68\uff0e\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5176\u529f\u80fd\u662f\uff1a\u8ba1\u7b97\u5e76\u8f93\u51fa\u4e0b\u5217\u591a\u9879\u5f0f\u503c\uff1a", "S", "= 1 + 1/1! + 1/2! + 1/3! + 1/4! + \u2026 + 1/n!", "\u4f8b\u5982\uff0c\u82e5\u4e3b\u51fd\u6570\u4ece\u952e\u76d8\u7ed9n\u8f93\u516515\uff0c\u5219\u8f93\u51fa\u4e3as=2.718282\u3002", "\u6ce8\u610f\uff1an\u7684\u503c\u8981\u6c42\u5927\u4e8e1\u4f46\u4e0d\u5927\u4e8e100\u3002\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "\u00a0", "double fun(int n)", "{", "\u00a0", "}", "\u00a0", "\u00a0", "main()", "{", "int n;", "double s;", "printf(\u201cInput n: \u201c);", "scanf(\u201c%d\u201d,&n);", "s=fun(n);", "printf(\u201cs=%f\\n\u201d,s);", "}", "\u00a0", "76\uff0e\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5176\u529f\u80fd\u662f\uff1a\u8ba1\u7b97\u5e76\u8f93\u51fa\u5f53x<0.97\u65f6\u4e0b\u5217\u591a\u9879\u5f0f\u7684\u503c\uff0c\u76f4\u5230|S", "-S", "|<0.000001\u4e3a\u6b62\u3002", "\u00a0", "\u4f8b\u5982\uff0c\u82e5\u4e3b\u51fd\u6570\u4ece\u952e\u76d8\u7ed9x\u8f93\u51650.21\u540e\uff0c\u5219\u8f93\u51fa\u4e3as\uff1a1.100000\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "#include <math.h>", "\u00a0", "double fun(double\u00a0 x)", "{", "}", "\u00a0", "main()", "{", "double\u00a0 x,s;", "printf(\u201cInput x:\u00a0 \u201c);", "scanf(\u201c%lf\u201d,&x);", "s=fun(x);", "printf(\u201cs=%f\\n\u201d,s);", "}", "\u00a0", "92\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0cfun\u51fd\u6570\u7684\u529f\u80fd\u662f\uff1a\u6c42s=aa\u2026aa-\u2026-aaa-aa-a(\u6b64\u5904aa\u2026aa\u8868\u793an\u4e2aa\uff0ca\u548cn\u7684\u503c\u57281\u81f39\u4e4b\u95f4)\u3002\u4f8b\u5982a=3\uff0c n=6\uff0c\u00a0 \u5219\u4ee5\u4e0a\u8868\u8fbe\u5f0f\u4e3a\uff1a", "s=333333-33333-3333-333-33-3", "\u5176\u503c\u662f296298\u3002a\u548cn\u662ffun\u51fd\u6570\u7684\u5f62\u53c2\uff0c\u8868\u8fbe\u5f0f\u7684\u503c\u4f5c\u4e3a\u51fd\u6570\u503c\u4f20\u56demain\u51fd\u6570\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u8ba1\u7b97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <conio.h>", "#include <stdio.h>", "\u00a0", "long fun(int a, int n)", "{", "int j;", "/********found********/", "long s=0,t=1;", "/********found********/", "for(j=0 ; j<=n ; j++)", "t=t*10+a;", "s=t;", "for(j=1;j<n;j++)", "{", "/********found********/", "t=t%10;", "s=s-t;", "}", "return(s);", "}", "\u00a0", "main( )", "{", "int a,n;", "clrscr();", "printf(\u201c\\nPlease enter a and n:\u201d);", "scanf(\u201c%d%d\u201d,&a,&n);", "printf(\u201cThe value of function is %ld\\n\u201d,fun(a,n));", "}", "\u00a0", "100\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u7edf\u8ba1\u4e00\u4e2a\u65e0\u7b26\u53f7\u6574\u6570\u4e2d\u5404\u4f4d\u6570\u5b57\u503c\u4e3a\u96f6\u7684\u4e2a\u6570\uff0c\u901a\u8fc7\u5f62\u53c2\u4f20\u56de\u4e3b\u51fd\u6570\uff1b\u5e76\u628a\u8be5\u6574\u6570\u4e2d\u5404\u4f4d\u4e0a\u6700\u5927\u7684\u6570\u5b57\u503c\u4f5c\u4e3a\u51fd\u6570\u503c\u8fd4\u56de\u3002\u4f8b\u5982\uff0c\u82e5\u8f93\u5165\u65e0\u7b26\u53f7\u6574\u657030800\uff0c\u5219\u6570\u5b57\u503c\u4e3a\u96f6\u7684\u4e2a\u6570\u4e3a3\uff0c\u5404\u4f4d\u4e0a\u6570\u5b57\u503c\u6700\u5927\u7684\u662f8\u3002", "\u8bf7\u6539\u6b63\u51fd\u6570fun\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <stdio.h>", "\u00a0", "int fun(unsigned n, int *zero)", "{", "int count=0,max=0,t;", "do", "{", "t=n%10;", "/********found********/", "if(t=0)", "count++;", "if(max<t)", "max=t;", "n=n/10;", "}while(n);", "/********found********/", "zero=count;", "return max;", "}", "main()", "{", "unsigned n;", "int zero,max;", "printf(\u201c\\nInput n(unsigned):\u00a0 \u201c);", "scanf(\u201c%d\u201d,&n);", "max=fun(n,&zero);", "printf(\u201c\\nThe result: max=%d\u00a0 zero=%d\\n\u201d,max,zero);", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u56db\u5341\u516b\u5957\uff09"},
{"contents": ["53\uff0e\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u8be5\u51fd\u6570\u7684\u529f\u80fd\u662f\uff1a\u5b9e\u73b0B=A+A\u2019\uff0c\u5373\u628a\u77e9\u9635A\u52a0\u4e0aA\u7684\u8f6c\u7f6e\uff0c\u5b58\u653e\u5728\u77e9\u9635B\u4e2d\u3002\u8ba1\u7b97\u7ed3\u679c\u5728main\u51fd\u6570\u4e2d\u8f93\u51fa\u3002", "\u4f8b\u5982\uff0c\u8f93\u5165\u4e0b\u9762\u7684\u77e9\u9635\uff1a\uff0c\u5176\u8f6c\u7f6e\u77e9\u9635\u4e3a\uff1a\uff0c", "\u5219\u7a0b\u5e8f\u8f93\u51fa\uff1a", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684", "\u82e5\u5e72\u8bed\u53e5\u3002", "#include <conio.h>", "#include <stdio.h>", "\u00a0", "void fun ( int a[3][3], int b[3][3])", "{", "}", "\u00a0", "main( )", "{", "int a[3][3]={{1, 2, 3}, {4, 5, 6}, {7, 8, 9}}, t[3][3] ;", "int i, j ;", "clrscr() ;", "fun(a, t) ;", "for (i = 0 ; i < 3 ; i++)", "{", "for (j = 0 ; j < 3 ; j++)", "printf(\u201c%7d\u201d, t[i][j]) ;", "printf(\u201c\\n\u201d) ;", "}", "}", "\u00a0", "67\uff0e\u5b66\u751f\u7684\u8bb0\u5f55\u7531\u5b66\u53f7\u548c\u6210\u7ee9\u7ec4\u6210\uff0cN\u540d\u5b66\u751f\u7684\u6570\u636e\u5df2\u5728\u4e3b\u51fd\u6570\u4e2d\u653e\u5165\u7ed3\u6784\u4f53\u6570\u7ec4s\u4e2d\uff0c\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\uff1a\u51fd\u6570\u8fd4\u56de\u6307\u5b9a\u5b66\u53f7\u7684\u5b66\u751f\u6570\u636e\uff0c\u6307\u5b9a\u7684\u5b66\u53f7\u5728\u4e3b\u51fd\u6570\u4e2d\u8f93\u5165\u3002\u82e5\u6ca1\u627e\u5230\u6307\u5b9a\u5b66\u53f7\uff0c\u5728\u7ed3\u6784\u4f53\u53d8\u91cf\u4e2d\u7ed9\u5b66\u53f7\u7f6e\u7a7a\u4e32\uff0c\u7ed9\u6210\u7ee9\u7f6e-1\uff0c\u4f5c\u4e3a\u51fd\u6570\u503c\u8fd4\u56de\uff08\u7528\u4e8e\u5b57\u7b26\u4e32\u6bd4\u8f83\u7684\u51fd\u6570\u662fstrcmp\uff09\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include\u00a0 <stdio.h>", "#include\u00a0 <string.h>", "#define\u00a0\u00a0\u00a0 N\u00a0 16", "\u00a0", "typedef\u00a0\u00a0 struct", "{", "char\u00a0 num[10];", "int\u00a0\u00a0 s;", "}\u00a0 STREC;", "\u00a0", "STREC\u00a0 fun ( STREC\u00a0 *a,\u00a0 char\u00a0 *b )", "{", "\u00a0", "}", "\u00a0", "main ()", "{", "STREC\u00a0 s[N]= {{\u201cGA005\u2033,85}, {\u201cGA003\u2033,76}, {\u201cGA002\u2033,69}, {\u201cGA004\u2033,85},", "{\u201cGA001\u2033,91}, {\u201cGA007\u2033,72}, {\u201cGA008\u2033,64}, {\u201cGA006\u2033,87},", "{\u201cGA015\u2033,85}, {\u201cGA013\u2033,91}, {\u201cGA012\u2033,64}, {\u201cGA014\u2033,91},", "{\u201cGA011\u2033,77}, {\u201cGA017\u2033,64}, {\u201cGA018\u2033,64}, {\u201cGA016\u2033,72}};", "STREC\u00a0 h;", "char\u00a0 m[10];", "int\u00a0 i, n; FILE\u00a0 *out;", "printf ( \u201cThe original data :\\n\u201d );", "for (i=0;\u00a0 i<N;\u00a0 i++)", "{", "if ( i%4==0 ) printf (\u201c\\n\u201d);", "printf (\u201c%s\u00a0 %3d\u201d, s[i]. num, s[i]. s);", "}", "printf (\u201c\\n\\nEnter\u00a0 the\u00a0 number : \u201c);", "gets ( m );", "h=fun ( s, m );", "printf ( \u201d The\u00a0 data : \u201d );", "printf ( \u201c\\n%s\u00a0 %4d\\n\u201d, h . num, h . s );", "printf ( \u201c\\n\u201d );", "out=fopen (\u201cout17.dat\u201d, \u201cw\u201d);", "h=fun ( s, \u201cGA013\u2033 );", "fprintf (out, \u201c%s\u00a0 %4d\\n\u201d, h . num, h . s);", "fclose (out );", "}", "\u00a0", "88\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u4ece3\u4e2a\u7ea2\u7403\uff0c5\u4e2a\u767d\u7403\uff0c6\u4e2a\u9ed1\u7403\u4e2d\u4efb\u610f\u53d6\u51fa8\u4e2a\u4f5c\u4e3a\u4e00\u7ec4\uff0c\u8fdb\u884c\u8f93\u51fa\u3002\u5728\u6bcf\u7ec4\u4e2d\uff0c\u53ef\u4ee5\u6ca1\u6709\u9ed1\u7403\uff0c\u4f46\u5fc5\u987b\u8981\u6709\u7ea2\u7403\u548c\u767d\u7403\u3002\u7ec4\u5408\u6570\u4f5c\u4e3a\u51fd\u6570\u503c\u8fd4\u56de\u3002\u6b63\u786e\u7684\u7ec4\u5408\u6570\u5e94\u8be5\u662f15\u3002\u7a0b\u5e8f\u4e2di\u7684\u503c\u4ee3\u8868\u7ea2\u7403\u6570\uff0cj\u7684\u503c\u4ee3\u8868\u767d\u7403\u6570\uff0ck\u7684\u503c\u4ee3\u8868\u9ed1\u7403\u6570\u3002", "\u8bf7\u6539\u6b63\u51fd\u6570fun\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <stdio.h>", "\u00a0", "int\u00a0 fun()", "{", "int i,j,k,sum=0;", "printf(\u201c\\nThe result\u00a0 :\\n\\n\u201d);", "/********found********/", "for(i=0; i<=3; i++)", "{", "for(j=1; j<=5; j++)", "{", "k=8-i-j;", "/********found********/", "if(k>=1 && k<=6)", "{", "sum=sum+1;", "printf(\u201cred:%4d white:%4d black:%4d\\n\u201d,i,j,k);", "}", "}", "}", "return sum;", "}", "main()", "{", "int sum;", "sum=fun();", "printf(\u201csum=%4d\\n\\n\u201d,sum);", "}", "\u00a0", "\u00a0", "91\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u8bfb\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\uff08\u957f\u5ea6<20\uff09\uff0c\u5c06\u8be5\u5b57\u7b26\u4e32\u4e2d\u7684\u6240\u6709\u5b57\u7b26\u6309ASCII\u7801\u5347\u5e8f\u6392\u5e8f\u540e\u8f93\u51fa\u3002\u4f8b\u5982\uff0c\u82e5\u8f93\u5165edcba\uff0c\u5219\u5e94\u8f93\u51faabcde\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u7edf\u8ba1\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <conio.h>", "#include <stdio.h>", "\u00a0", "void fun(char t[])", "{", "char c;", "int i, j;", "/********found********/", "for(i=strlen(t); i; i\u2013 )", "/********found********/", "for(j=0;j<i;j++)", "/********found********/", "if(t[j]>t[j+1])", "{", "c=t[j];", "/********found********/", "t[j]=t[j+1];", "/********found********/", "t[j+1]=c;", "}", "}", "\u00a0", "main()", "{", "char s[81];", "clrscr();", "printf(\u201c\\nPlease enter a character string: \u201c);", "gets(s);", "printf(\u201c\\n\\nBefore sorting:\\n %s \u201c, s);", "fun(s);", "printf(\u201c\\nAfter sorting decendingly:\\n\u00a0 %s\u201d, s);", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u56db\u5341\u4e03\u5957\uff09"},
{"contents": ["32\uff0e\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5176\u529f\u80fd\u662f\uff1a\u5c06s\u6240\u6307\u5b57\u7b26\u4e32\u4e2d\u9664\u4e86\u4e0b\u6807\u4e3a\u5947\u6570\u3001\u540c\u65f6ASCII\u503c\u4e5f\u4e3a\u5947\u6570\u7684\u5b57\u7b26\u4e4b\u5916\uff0c\u5176\u4f59\u7684\u6240\u6709\u5b57\u7b26\u90fd\u5220\u9664\uff0c\u4e32\u4e2d\u5269\u4f59\u5b57\u7b26\u6240\u5f62\u6210\u7684\u4e00\u4e2a\u65b0\u4e32\u653e\u5728t\u6240\u6307\u7684\u6570\u7ec4\u4e2d\u3002", "\u4f8b\u5982\uff0c\u82e5s\u6240\u6307\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u4e3aABCDEFGl2345\uff0c\u5176\u4e2d\u5b57\u7b26A\u7684ASCII\u7801\u503c\u867d\u4e3a\u5947\u6570\uff0c\u4f46\u6240\u5728\u5143\u7d20\u7684\u4e0b\u6807\u4e3a\u5076\u6570\uff0c\u56e0\u6b64\u5fc5\u9700\u5220\u9664\uff1b\u800c\u5b57\u7b261\u7684ASCII\u7801\u503c\u4e3a\u5947\u6570\uff0c\u6240\u5728\u6570\u7ec4\u4e2d\u7684\u4e0b\u6807\u4e5f\u4e3a\u5947\u6570\uff0c\u56e0\u6b64\u4e0d\u5e94\u5f53\u5220\u9664\uff0c\u5176\u4ed6\u4f9d\u6b64\u7c7b\u63a8\u3002\u6700\u540et\u6240\u6307\u7684\u6570\u7ec4\u4e2d\u7684\u5185\u5bb9\u5e94\u662f135\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <conio.h>", "#include <stdio.h>", "#include <string.h>", "\u00a0", "void fun(char *s, char t[])", "{", "}", "\u00a0", "main()", "{", "char\u00a0 s[100], t[100];", "clrscr();", "printf(\u201c\\nPlease enter string S:\u201d);", "scanf(\u201c%s\u201d, s);", "fun(s, t);", "printf(\u201c\\nThe result is: %s\\n\u201d, t);", "}", "\u00a0", "33\uff0e\u5047\u5b9a\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u4e2d\u53ea\u5305\u542b\u5b57\u6bcd\u548c*\u53f7\u3002\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\uff1a\u4f7f\u5b57\u7b26\u4e32\u4e2d\u5c3e\u90e8\u7684*\u53f7\u4e0d\u5f97\u591a\u4e8en\u4e2a\uff1b\u82e5\u591a\u4e8en\u4e2a\uff0c\u5219\u5220\u9664\u591a\u4f59\u7684*\u53f7\uff1b\u82e5\u5c11\u4e8e\u6216\u7b49\u4e8en\u4e2a\uff0c\u5219\u4ec0\u4e48\u4e5f\u4e0d\u505a\uff0c\u5b57\u7b26\u4e32\u4e2d\u95f4\u548c\u524d\u9762\u7684*\u53f7\u4e0d\u5220\u9664\u3002", "\u4f8b\u5982\uff0c\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u4e3a****A*BC*DEF*G*******\uff0c\u82e5n\u7684\u503c\u4e3a4\uff0c\u5220\u9664\u540e\uff0c\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u5219\u5e94\u5f53\u662f****A*BC*DEF*G****\uff1b\u82e5n\u7684\u503c\u4e3a7\uff0c\u5219\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u4ecd\u4e3a\u00a0 ****A*BC*DEF*G*******\u3002n\u7684\u503c\u5728\u4e3b\u51fd\u6570\u4e2d\u8f93\u5165\u3002\u5728\u7f16\u5199\u51fd\u6570\u65f6\uff0c\u4e0d\u5f97\u4f7f\u7528C\u8bed\u8a00\u63d0\u4f9b\u7684\u5b57\u7b26\u4e32\u51fd\u6570\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "#include <conio.h>", "\u00a0", "void fun(char *a,int n)", "{", "\u00a0", "}", "\u00a0", "\u00a0", "main()", "{", "char\u00a0 s[81];", "int\u00a0 n;", "printf(\u201cEnter a string :\\n\u201d);", "gets(s);", "printf(\u201cEnter n:\u00a0 \u201c);", "scanf(\u201c%d\u201d,&n);", "fun( s,n );", "printf(\u201cThe string after deleted :\\n\u201d);", "puts(s);", "}", "\u00a0", "77\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u5c06\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u6309\u9006\u5e8f\u8f93\u51fa\uff0c\u4f46\u4e0d\u6539\u53d8\u5b57\u7b26", "\u4e32\u4e2d\u7684\u5185\u5bb9\u3002\u4f8b\u5982\uff0c\u82e5\u5b57\u7b26\u4e32\u4e3aabcd\uff0c\u5219\u5e94\u8f93\u51fadcba\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u8ba1\u7b97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <stdio.h>", "\u00a0", "/********found********/", "fun(char a)", "{", "if(*a)", "{", "fun(a+1);", "printf(\u201c%c\u201d,*a) ;", "}", "}", "main( )", "{", "char s[10]=\u201dabcd\u201d;", "printf(\u201cs =%s\\ns\u2019=\u201d, s);", "fun(s);", "printf(\u201c\\n\u201d);", "}", "\u00a0", "\u00a0", "85\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u4ece\u5b57\u7b26\u4e32s\u4e2d\u5220\u9664\u6240\u6709\u5c0f\u5199\u5b57\u6bcd\u2019c\u2019\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u8ba1\u7b97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <stdio.h>", "void fun(char *s)", "{", "int\u00a0 i,j;", "for(i=j=0; s[i]!=\u2019\\0\u2032; i++)", "/********found********/", "if(s[i]!=\u2019c')", "s[j]=s[i];", "/********found********/", "s[i]=\u2019\\0\u2032;", "}", "main()", "{", "char\u00a0 s[80];", "printf(\u201cEnter a string:\u00a0\u00a0\u00a0 \u201c);", "gets(s);", "printf(\u201cThe original string :\u201d);", "puts(s);", "fun(s);", "printf(\u201cThe string after deleted:\u201d);", "puts(s);", "printf(\u201c\\n\\n\u201d);", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u56db\u5341\u516d\u5957\uff09"},
{"contents": ["6\uff0e\u8bf7\u7f16\u5199\u4e00\u4e2a\u51fd\u6570void fun(char a[]\uff0cchar b[]\uff0cint n)\uff0c\u5176\u529f\u80fd\u662f\uff1a\u5220\u9664\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u6307\u5b9a\u4e0b\u6807\u7684\u5b57\u7b26\u3002\u5176\u4e2d\uff0ca\u6307\u5411\u539f\u5b57\u7b26\u4e32\uff0c\u5220\u9664\u540e\u7684\u5b57\u7b26\u4e32\u5b58\u653e\u5728b\u6240\u6307\u7684\u6570\u7ec4\u4e2d\uff0cn\u4e2d\u5b58\u653e\u6307\u5b9a\u7684\u4e0b\u6807\u3002", "\u4f8b\u5982\uff0c\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32World\uff0c\u7136\u540e\u8f93\u51653\uff0c\u5219\u8c03\u7528\u8be5\u51fd\u6570\u540e\u7684\u7ed3\u679c\u4e3aWord\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "# include <stdio.h>", "# include <conio.h>", "# define LEN 20", "\u00a0", "void fun(char a[], char b[], int n)", "{", "}", "\u00a0", "main()", "{", "char str1[LEN],str2[LEN];", "int n;", "clrscr() ;", "printf(\u201cEnter the string:\\n\u201d);", "gets(str1);", "printf(\u201cEnter the position of the string deleted:\u201d);", "scanf(\u201c%d\u201d,&n);", "fun(str1, str2, n);", "printf(\u201cThe new string is:%s\\n\u201d,str2);;", "}", "\u00a0", "31\uff0e\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5176\u529f\u80fd\u662f\uff1a\u5c06s\u6240\u6307\u5b57\u7b26\u4e32\u4e2d\u9664\u4e86\u4e0b\u6807\u4e3a\u5076\u6570\u3001\u540c\u65f6ASCII\u503c\u4e5f\u4e3a\u5076\u6570\u7684\u5b57\u7b26\u5916\uff0c\u5176\u4f59\u7684\u5168\u90fd\u5220\u9664\uff1b\u4e32\u4e2d\u5269\u4f59\u5b57\u7b26\u6240\u5f62\u6210\u7684\u4e00\u4e2a\u65b0\u4e32\u653e\u5728t\u6240\u6307\u7684\u6570\u7ec4\u4e2d\u3002", "\u4f8b\u5982\uff0c\u82e5s\u6240\u6307\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u4e3aABCDEFG123456\uff0c\u5176\u4e2d\u5b57\u7b26A\u7684ASCII\u7801\u503c\u4e3a\u5947\u6570\uff0c\u56e0\u6b64\u5e94\u5f53\u5220\u9664\uff1b\u5176\u4e2d\u5b57\u7b26B\u7684ASCII\u7801\u503c\u4e3a\u5076\u6570\uff0c\u4f46\u5728\u6570\u7ec4\u4e2d\u7684\u4e0b\u6807\u4e3a\u5947\u6570\uff0c\u56e0\u6b64\u4e5f\u5e94\u5f53\u5220\u9664\uff1b\u800c\u5b57\u7b262\u7684ASCII\u7801\u503c\u4e3a\u5076\u6570\uff0c\u6240\u5728\u6570\u7ec4\u4e2d\u7684\u4e0b\u6807\u4e5f\u4e3a\u5076\u6570\uff0c\u56e0\u6b64\u4e0d\u5e94\u5f53\u5220\u9664\uff0c\u5176\u4ed6\u4f9d\u6b64\u7c7b\u63a8\u3002\u6700\u540et\u6240\u6307\u7684\u6570\u7ec4\u4e2d\u7684\u5185\u5bb9\u5e94\u662f246\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <conio.h>", "#include <stdio.h>", "#include <string.h>", "\u00a0", "void fun(char *s, char t[])", "{", "}", "\u00a0", "main()", "{", "char s[100], t[100];", "clrscr();", "printf(\u201c\\nPlease enter string S:\u201d);", "scanf(\u201c%s\u201d, s);", "fun(s, t);", "printf(\u201c\\nThe result is : %s\\n\u201d, t);", "}", "\u00a0", "63\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u5c06\u5b57\u7b26\u4e32p\u4e2d\u7684\u6240\u6709\u5b57\u7b26\u590d\u5236\u5230\u5b57\u7b26\u4e32b\u4e2d\uff0c", "\u8981\u6c42\u6bcf\u590d\u5236\u4e09\u4e2a\u5b57\u7b26\u4e4b\u540e\u63d2\u5165\u4e00\u4e2a\u7a7a\u683c\u3002\u4f8b\u5982\uff0c\u5728\u8c03\u7528fun\u51fd\u6570\u4e4b\u524d\u7ed9\u5b57\u7b26\u4e32a\u8f93\u5165", "ABCDEFGHIJK\uff0c\u8c03\u7528\u51fd\u6570\u4e4b\u540e\uff0c\u5b57\u7b26\u4e32b\u4e2d\u7684\u5185\u5bb9\u5219\u4e3aABC DEF GHI JK\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784\u3002", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include\u00a0 <stdio.h>", "void fun(char *p, char *b)", "{", "int\u00a0 i, k=0;", "while(*p)", "{", "/********found********/", "i=1;", "/********found********/", "while( i<3||*p )", "{", "b[k]=*p;", "k++;", "p++;", "i++;", "}", "/********found********/", "if(*p)", "{", "b[k]=\u2019 \u2018 ;", "}", "}", "b[k]=\u2019\\0\u2032;", "}", "main()", "{", "char\u00a0 a[80],b[80];", "printf(\u201cEnter a string:\u00a0\u00a0\u00a0\u00a0\u00a0 \u201c);", "gets(a);", "printf(\u201cThe original string:\u00a0 \u201c);", "puts(a);", "fun(a,b);", "printf(\u201c\\nThe string after insert space:\u00a0 \u201c);", "puts(b);", "printf(\u201c\\n\\n\u201d);", "}", "\u00a0", "\u00a0", "69\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u7684\u529f\u80fd\u662f\uff1a\u8bfb\u5165\u4e00\u4e2a\u82f1\u6587\u6587\u672c\u884c\uff0c\u5c06\u5176\u4e2d\u6bcf\u4e2a\u5355\u8bcd\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u6539\u6210", "\u5927\u5199\uff0c\u7136\u540e\u8f93\u51fa\u6b64\u6587\u672c\u884c(\u8fd9\u91cc\u7684\u201c\u5355\u8bcd\u201d\u662f\u6307\u7531\u7a7a\u683c\u9694\u5f00\u7684\u5b57\u7b26\u4e32)\u3002\u4f8b\u5982\uff0c\u82e5\u8f93\u5165I am a student to take the examination\uff0c\u5219\u5e94\u8f93\u51faI Am A Student To Take The Examination\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u7a0b\u5e8f\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <ctype.h>", "#include <string.h>", "#include <stdio.h>", "\u00a0", "/********found********/", "upfst ( char p )", "{", "int k=0;", "for ( ; *p; p++ )", "if ( k )", "{", "if ( *p==\u2019 \u2018 )", "k=0;", "}", "else", "if ( *p!=\u2019 \u2018 )", "{", "k=1;", "*p = toupper( *p );", "}", "}", "\u00a0", "main( )", "{", "char\u00a0 chrstr[81];", "clrscr();", "printf(\u201c\\nPlease enter an English text line: \u201d );", "gets( chrstr );", "printf(\u201c\\n\\nBefore changing:\\n\u00a0 %s\u201d, chrstr );", "upfst( chrstr );", "printf(\u201c\\nAfter changing:\\n %s\\n\u201d, chrstr );", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u56db\u5341\u4e94\u5957\uff09"},
{"contents": ["98\uff0e\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\uff1a\u8ba1\u7b97\u5e76\u8f93\u51fan\uff08\u5305\u62ecn\uff09\u4ee5\u5185\u80fd\u88ab5\u62169\u6574\u9664\u7684\u6240\u6709\u81ea\u7136\u6570\u7684\u5012\u6570\u4e4b\u548c\u3002", "\u4f8b\u5982\uff0c\u82e5\u4e3b\u51fd\u6570\u4ece\u952e\u76d8\u7ed9n\u8f93\u516520\u540e\uff0c\u5219\u8f93\u51fa\u4e3as=0.583333\u3002", "\u6ce8\u610f\uff1an\u7684\u503c\u8981\u6c42\u4e0d\u5927\u4e8e100\u3002\u00a0 \u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "\u00a0", "double fun(int\u00a0 n)", "{", "}", "\u00a0", "main()", "{", "int\u00a0 n;", "double\u00a0 s;", "printf(\u201c\\nInput n:\u00a0 \u201c);", "scanf(\u201c%d\u201d,&n);", "s=fun(n);", "printf(\u201c\\n\\ns=%f\\n\u201d,s);", "}", "\u00a0", "99\uff0e\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5176\u529f\u80fd\u662f\uff1a\u8ba1\u7b97\u5e76\u8f93\u51fa3\u5230n\u4e4b\u95f4\u6240\u6709\u7d20\u6570\u7684\u5e73\u65b9\u6839\u4e4b\u548c\u3002", "\u4f8b\u5982\uff0c\u82e5\u4e3b\u51fd\u6570\u4ece\u952e\u76d8\u7ed9n\u8f93\u5165100\u540e\uff0c\u5219\u8f93\u51fa\u4e3asum\uff1d148.874270\u3002", "\u6ce8\u610f\uff1an\u7684\u503c\u8981\u6c42\u5927\u4e8e2\u4f46\u4e0d\u5927\u4e8e100\u3002\u00a0 \u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <math.h>", "#include <stdio.h>", "\u00a0", "double fun(int n)", "{", "}", "\u00a0", "main()", "{", "int n;", "double\u00a0 sum;", "printf(\u201c\\n\\nInput n:\u00a0 \u201c);", "scanf(\u201c%d\u201d,&n);", "sum=fun(n);", "printf(\u201c\\n\\nsum=%f\\n\\n\u201d,sum);", "}", "\u00a0", "48\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u4eceN\u4e2a\u5b57\u7b26\u4e32\u4e2d\u627e\u51fa\u6700\u957f\u7684\u90a3\u4e2a\u4e32\uff0c\u5e76\u5c06\u5176\u5730\u5740\u4f5c\u4e3a\u51fd\u6570\u503c\u8fd4\u56de\u3002\u5404\u5b57\u7b26\u4e32\u5728\u4e3b\u51fd\u6570\u4e2d\u8f93\u5165\uff0c\u5e76\u653e\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4\u4e2d\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <stdio.h>", "#include <string.h>", "#define\u00a0 N\u00a0 5", "#define\u00a0 M\u00a0 81", "\u00a0", "/********found********/", "fun(char (*sq)[N])", "{", "int\u00a0 i;", "char *sp;", "sp=sq[0];", "for(i=0;i<N;i++)", "if(strlen(sp)<strlen(sq[i]))", "sp=sq[i] ;", "/********found********/", "return sq;", "}", "\u00a0", "main()", "{", "char\u00a0 str[N][M],*longest;", "int\u00a0 i;", "printf(\u201cEnter %d lines:\\n\u201d,N);", "for(i=0; i<N; i++)", "gets(str[i]);", "printf(\u201c\\nThe N string\u00a0 :\\n\u201d,N);", "for(i=0; i<N; i++)", "puts(str[i]);", "longest=fun(str);", "printf(\u201c\\nThe longest string :\\n\u201d);", "puts(longest);", "}", "\u00a0", "\u00a0", "56\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u7528\u5192\u6ce1\u6cd5\u5bf96\u4e2a\u5b57\u7b26\u4e32\u6309\u7531\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u8fdb\u884c\u6392\u5e8f\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <stdio.h>", "#include <conio.h>", "#define MAXLINE 20", "\u00a0", "/********found********/", "fun ( char *pstr[6])", "{", "int\u00a0 i, j;", "char *p ;", "for ( i = 0 ; i < 5 ; i++ )", "{", "for ( j = i + 1; j < 6; j++)", "{", "/********found********/", "if(strcmp(*(pstr + i), pstr + j) > 0)", "{", "p = *(pstr + i) ;", "/********found********/", "*(pstr + i) = pstr + j;", "*(pstr + j) = p ;", "}", "}", "}", "}", "\u00a0", "main( )", "{", "int i;", "char *pstr[6], str[6][MAXLINE] ;", "clrscr();", "for(i = 0; i < 6 ; i++)", "pstr[i] = str[i] ;", "printf(\u201c\\nEnter 6 string(1 string at each line): \\n\u201d ) ;", "for(i = 0 ; i < 6 ; i++)", "scanf(\u201c%s\u201d, pstr[i]) ;", "fun(pstr) ;", "printf(\u201cThe strings after sorting:\\n\u201d);", "for(i = 0 ; i < 6 ; i++)", "printf(\u201c%s\\n\u201d, pstr[i]) ;", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u56db\u5341\u56db\u5957\uff09"},
{"contents": ["95\uff0e\u5047\u5b9a\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u4e2d\u53ea\u5305\u542b\u5b57\u6bcd\u548c*\u53f7\u3002\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\uff1a\u4f7f\u5b57\u7b26\u4e32\u7684\u524d\u5bfc*\u53f7\u4e0d\u5f97\u591a\u4e8en\u4e2a\uff1b\u82e5\u591a\u4e8en\u4e2a\uff0c\u5219\u5220\u9664\u591a\u4f59\u7684*\u53f7\uff1b\u82e5\u5c11\u4e8e\u6216\u7b49\u624bn\u4e2a\uff0c\u5219\u4ec0\u4e48\u4e5f\u4e0d\u505a\uff0c\u5b57\u7b26\u4e32\u4e2d\u95f4\u548c\u5c3e\u90e8\u7684*\u53f7\u4e0d\u5220\u9664\u3002", "\u4f8b\u5982\uff0c\u82e5\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u4e3a*******A*BC*DEF*G****\uff0c\u5047\u8bben\u7684\u503c\u4e3a4\uff0c\u5220\u9664\u540e\uff0c\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u5219\u5e94\u5f53\u662f****A*BC*DEF*G****\uff1b\u82e5n\u7684\u503c\u4e3a8\uff0c\u5219\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u4ecd\u4e3a*******A*BC*DEF*G****\u3002n\u7684\u503c\u5728\u4e3b\u51fd\u6570\u4e2d\u8f93\u5165\u3002\u5728\u7f16\u5199\u51fd\u6570\u65f6\uff0c\u4e0d\u5f97\u4f7f\u7528C\u8bed\u8a00\u63d0\u4f9b\u7684\u5b57\u7b26\u4e32\u51fd\u6570\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "#include <conio.h>", "\u00a0", "void fun( char *a, int\u00a0 n )", "{", "\u00a0", "}", "\u00a0", "main()", "{", "char s[81];", "int n;", "printf(\u201cEnter a string:\\n\u201d);", "gets (s);", "printf(\u201cEnter n: \u201c);", "scanf (\u201c%d\u201d,&n);", "fun( s,n );", "printf(\u201cThe string after deleted:\\n\u201d);", "puts(s);", "}", "\u00a0", "97\uff0e\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5176\u529f\u80fd\u662f\uff1a\u8ba1\u7b97\u5e76\u8f93\u51fa\u4e0b\u5217\u591a\u9879\u5f0f\u503c\uff1a", "\u00a0", "\u4f8b\u5982\uff0c\u82e5\u4e3b\u51fd\u6570\u4ece\u952e\u76d8\u7ed9n\u8f93\u516550\u540e\uff0c\u5219\u8f93\u51fa\u4e3aS=1.960784\u3002", "\u6ce8\u610f\uff1an\u7684\u503c\u8981\u6c42\u5927\u4e8e1\u4f46\u4e0d\u5927\u4e8e100\u3002\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "\u00a0", "double fun(int n)", "{", "}", "\u00a0", "main()", "{", "int\u00a0 n;", "double\u00a0 s;", "printf(\u201c\\nInput n:\u00a0 \u201c);", "scanf(\u201c%d\u201d,&n);", "s=fun(n);", "printf(\u201c\\n\\ns=%f\\n\\n\u201d,s);", "}", "\u00a0", "32\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u6309\u987a\u5e8f\u7ed9s\u6240\u6307\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u8d4b\u4e88\u4ece2\u5f00\u59cb\u7684\u5076\u6570\uff0c\u7136\u540e\u518d\u6309\u987a\u5e8f\u5bf9\u6bcf\u4e94\u4e2a\u5143\u7d20\u6c42\u4e00\u4e2a\u5e73\u5747\u503c\uff0c\u5e76\u5c06\u8fd9\u4e9b\u503c\u4f9d\u6b21\u5b58\u653e\u5728w\u6240\u6307\u7684\u6570\u7ec4\u4e2d\u3002", "\u82e5s\u6240\u6307\u6570\u7ec4\u4e2d\u5143\u7d20\u7684\u4e2a\u6570\u4e0d\u662f5\u7684\u500d\u6570\uff0c\u591a\u4f59\u90e8\u5206\u5ffd\u7565\u4e0d\u8ba1\u3002\u4f8b\u5982\uff0cs\u6240\u6307\u6570\u7ec4\u670914\u4e2a\u5143\u7d20\uff0c\u5219\u53ea\u5bf9\u524dl0\u4e2a\u5143\u7d20\u8fdb\u884c\u5904\u7406\uff0c\u4e0d\u5bf9\u6700\u540e\u76844\u4e2a\u5143\u7d20\u6c42\u5e73\u5747\u503c\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784\u3002", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <stdio.h>", "#define SIZE 20", "int fun(double *s,double *w)", "{", "int k,i;", "double sum;", "for(k=2,i=0;i<SIZE;i++)", "{", "s[i]=k;", "k+=2;", "}", "sum=0.0;", "for(k=0,i=0;i<SIZE;i++)", "{", "sum+=s[i];", "/********found********/", "if(i+1%5==0)", "{", "w[k]=sum/5;", "sum=0;", "k++;", "}", "}", "return k;", "}", "main()", "{", "double a[SIZE],b[SIZE/5];", "int i,k;", "k=fun(a,b);", "printf(\u201cThe original data:\\n\u201d);", "for(i=0;i<SIZE;i++)", "{", "if(i%5==0)", "printf(\u201c\\n\u201d);", "printf(\u201c%4.0f\u201d,a[i]);", "}", "printf(\u201c\\n\\nThe result :\\n\u201d);", "for(i=0;i<k;i++)", "printf(\u201c%6.2f\u201d,b[i]);", "printf(\u201c\\n\\n\u201d);", "}", "\u00a0", "\u00a0", "37\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u8ba1\u7b97s\u6240\u6307\u5b57\u7b26\u4e32\u4e2d\u542b\u6709t\u6240\u6307\u5b57\u7b26\u4e32\u7684\u6570\u76ee\uff0c\u5e76\u4f5c\u4e3a\u51fd\u6570\u503c\u8fd4\u56de\u3002", "\u8bf7\u6539\u6b63\u51fd\u6570fun\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include<conio.h>", "#include<stdio.h>", "#include<string.h>", "#define\u00a0\u00a0 N\u00a0\u00a0 80", "int fun(char *s, char *t)", "{", "int n;", "char *p, *r;", "n=0;", "/********found********/", "p=&s[0];", "*r=t;", "while(*p)", "{", "if(*r==*p)", "{", "r++;", "if(*r==\u2019\\0\u2032)", "{", "n++;", "/********found********/", "/*\u5728\u6b64\u884c\u586b\u9002\u5f53\u7684\u8bed\u53e5 */", "}", "}", "p++;", "}", "return n;", "}", "main()", "{", "char a[N],b[N];", "int m;", "clrscr();", "printf(\u201c\\nPlease enter string a :\u201d);", "gets(a);", "printf(\u201c\\nPlease enter substring b :\u201d);", "gets(b);", "m=fun(a,b);", "m=printf(\u201c\\nThe result is:m=%d\\n\u201d,m);", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u56db\u5341\u4e09\u5957\uff09"},
{"contents": ["92\uff0e\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\u8ba1\u7b97\uff1a", "s =\u00a0 (ln(1)+ln(2)+ln(3)+\u2026+ln(m))", "\uff0c", "s\u4f5c\u4e3a\u51fd\u6570\u503c\u8fd4\u56de\u3002\u5728C\u8bed\u8a00\u4e2d\u53ef\u8c03\u7528log(n)\u51fd\u6570\u6c42ln(n)\u3002log\u51fd\u6570\u7684\u5f15\u7528\u8bf4\u660e\u662f\uff1adouble log(double x)\u3002\u4f8b\u5982\uff0c\u82e5m\u7684\u503c\u4e3a20\uff0c\u5219fun\u51fd\u6570\u503c\u4e3a6.506583\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <conio.h>", "#include <math.h>", "#include <stdio.h>", "\u00a0", "double\u00a0 fun( int\u00a0 m )", "{", "}", "\u00a0", "main()", "{", "clrscr();", "printf(\u201c%f\\n\u201d,fun(20));", "}", "\u00a0", "93\uff0e\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\u8ba1\u7b97\u4e0b\u5217\u7ea7\u6570\u548c\uff0c\u548c\u503c\u7531\u51fd\u6570\u503c\u8fd4\u56de\u3002", "\u00a0", "\u4f8b\u5982\uff0c\u5f53n=10\uff0cx=0.3\u65f6\uff0c\u51fd\u6570\u503c\u4e3a1.349859\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <conio.h>", "#include <stdio.h>", "#include <math.h>", "\u00a0", "double fun( double x, int n)", "{", "}", "\u00a0", "main()", "{", "clrscr();", "printf(\u201c%f\\n\u201d, fun(0.3,10));", "}", "\u00a0", "21\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u662f\u5efa\u7acb\u4e00\u4e2a\u5e26\u5934\u7ed3\u70b9\u7684\u5355\u5411\u94fe\u8868\uff0c\u5e76\u7528\u968f\u673a\u51fd\u6570\u4e3a\u5404\u7ed3\u70b9\u6570\u636e\u57df\u8d4b\u503c\u3002", "\u51fd\u6570fun\u7684\u4f5c\u7528\u662f\u6c42\u51fa\u5355\u5411\u94fe\u8868\u7ed3\u70b9(\u4e0d\u5305\u62ec\u5934\u7ed3\u70b9)\u6570\u636e\u57df\u4e2d\u7684\u6700\u5927\u503c\uff0c\u5e76\u4e14\u4f5c\u4e3a\u51fd\u6570\u503c\u8fd4\u56de\u3002", "\u8bf7\u6539\u6b63\u51fd\u6570fun\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <stdio.h>", "#include<conio.h>", "#include<stdlib.h>", "typedef struct aa", "{", "int data;", "struct aa *next;", "} NODE;", "/********found********/", "fun(NODE *h)", "{", "int max=-1;", "NODE *p;", "p=h;", "while(p)", "{", "if(p->data>max)", "max=p->data;", "/********found********/", "p=h->next;", "}", "return max;", "}", "outresult(int s,FILE *pf)", "{", "fprintf(pf,\u201d\\nThe max in link : %\\n\u201d,s);}", "\u00a0", "NODE *creatlink(int n,int m)", "{", "NODE *h, *p, *s, *q;", "int i, x;", "h=p=(NODE *)malloc(sizeof(NODE));", "h->data=9999;", "for(i=1; i<=n; i++)", "{", "s=(NODE *)malloc(sizeof(NODE));", "s->data=rand()%m;", "s->next=p->next;", "p->next=s;", "p=p->next;", "}", "p->next=NULL;", "return h;", "}", "outlink(NODE *h,FILE *pf)", "{", "NODE *p;", "p=h->next;", "fprintf(pf,\u201d\\nTHE LIST:\\n\\n HEAD\u201d);", "while(p)", "{", "fprintf(pf,\u201d->%d \u201c,p->data);", "p=p->next;", "}", "fprintf(pf,\u201d\\n\u201d);", "}", "main()", "{", "NODE *head; int m;", "clrscr();", "head=creatlink(12,100);", "outlink(head,stdout);", "m=fun(head);", "printf(\u201c\\nTHE RESULT :\\n\u201d);", "outresult(m,stdout);", "}", "\u00a0", "\u00a0", "24\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u4eces\u6240\u6307\u5b57\u7b26\u4e32\u4e2d\uff0c\u627e\u51fat\u6240\u6307\u5b50\u4e32\u7684\u4e2a\u6570\u4f5c\u4e3a\u51fd\u6570\u503c\u8fd4\u56de\u3002\u4f8b\u5982\uff0c\u5f53S\u6240\u6307\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u4e3aabcdabfab\uff0ct\u6240\u6307\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\u4e3aab\uff0c\u5219\u51fd\u6570\u8fd4\u56de\u6574\u65703\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <conio.h>", "#include <stdio.h>", "#include <string.h>", "\u00a0", "int fun(char *s,char *t)", "{", "int n;", "char *p,*r;", "n=0;", "while(*s)", "{", "p=s;", "r=t;", "while(*r)", "/********found********/", "if(r==p)", "{", "r++;", "p++;", "}", "else", "break;", "/********found********/", "if(r==\u2019\\0\u2032)", "n++;", "s++;", "}", "return n;", "}", "\u00a0", "main()", "{", "char s[100],t[100];", "int m;", "clrscr();", "printf(\u201c\\nPlease enter string s:\u201d);", "scanf(\u201c%s\u201d,s);", "printf(\u201c\\nPlease enter substring t:\u201d);", "scanf(\u201c%s\u201d,t);", "m=fun(s,t);", "printf(\u201c\\nThe result is: m=%d\\n\u201d,m);", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u56db\u5341\u4e8c\u5957\uff09"},
{"contents": ["\u73b0\u5728\u5c0f\u660e\u4e00\u5bb6\u8fc7\u4e00\u5ea7\u6865\uff0c\u8fc7\u6865\u7684\u65f6\u5019\u662f\u9ed1\u591c\uff0c\u6240\u4ee5\u5fc5\u987b\u6709\u706f\u3002\u73b0\u5728\u5c0f\u660e\u8fc7\u6865\u89811\u5206\uff0c\u5c0f\u660e\u7684\u5f1f\u5f1f\u89813\u5206\uff0c\u5c0f\u660e\u7684\u7238\u7238\u89816\u5206\uff0c\u5c0f\u660e\u7684\u5988\u5988\u89818\u5206\uff0c\u5c0f\u660e\u7684\u7237\u7237\u898112\u5206\u3002\u6bcf\u6b21\u6b64\u6865\u6700\u591a\u53ef\u8fc7\u4e24\u4eba\uff0c\u800c\u8fc7\u6865\u7684\u901f\u5ea6\u4f9d\u8fc7\u6865\u6700\u6162\u8005\u800c\u5b9a\uff0c\u800c\u4e14\u706f\u5728\u70b9\u71c3\u540e30\u5206\u5c31\u4f1a\u7184\u706d\u3002\u95ee\u5c0f\u660e\u4e00\u5bb6\u5982\u4f55\u8fc7\u6865\u65f6\u95f4\u6700\u77ed\uff1f\uff08\u539f\u672c\u662f\u4e2a\u5c0f\u5c0f\u667a\u529b\u9898\uff0c\u636e\u8bf4\u662f\u5916\u4f01\u7684\u9762\u8bd5\u9898\uff0c\u5728\u8fd9\u91cc\u7528\u7a0b\u5e8f\u6765\u6c42\u89e3\uff09", "\n#include \u201cstdafx.h\u201d", "\n#define N\u00a0\u00a0\u00a0 5", "\n#define SIZE 64", "// \u5c06\u4eba\u5458\u7f16\u53f7\uff1a\u5c0f\u660e-0\uff0c\u5f1f\u5f1f-1\uff0c\u7238\u7238-2\uff0c\u5988\u5988-3\uff0c\u7237\u7237-4", "\n// \u6bcf\u4e2a\u4eba\u7684\u5f53\u524d\u4f4d\u7f6e\uff1a0\u2013\u5728\u6865\u5de6\u8fb9\uff0c 1\u2013\u5728\u6865\u53f3\u8fb9", "\nint Position[N];\u00a0\u00a0\u00a0", "\n// \u8fc7\u6865\u4e34\u65f6\u65b9\u6848\u7684\u6570\u7ec4\u4e0b\u6807\uff1b \u4e34\u65f6\u65b9\u6848\uff1b \u6700\u5c0f\u65f6\u95f4\u65b9\u6848\uff1b", "\nint Index, TmpScheme[SIZE], Scheme[SIZE];\u00a0\u00a0", "\n// \u6700\u5c0f\u8fc7\u6865\u65f6\u95f4\u603b\u548c\uff0c\u521d\u59cb\u503c100\uff1b\u6bcf\u4e2a\u4eba\u8fc7\u6865\u6240\u9700\u8981\u7684\u65f6\u95f4", "\nint MinTime=100, Time[N]={1, 3, 6, 8, 12};\u00a0", "\n// \u5bfb\u627e\u6700\u4f73\u8fc7\u6865\u65b9\u6848\u3002Remnant:\u672a\u8fc7\u6865\u4eba\u6570; CurTime:\u5f53\u524d\u5df2\u7528\u65f6\u95f4;", "\n// Direction:\u8fc7\u6865\u65b9\u5411,1\u2013\u5411\u53f3,0\u2013\u5411\u5de6", "\nvoid Find(int Remnant, int CurTime, int Direction) {", "\n\u00a0\u00a0\u00a0 if(Remnant == 0) {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // \u6240\u6709\u4eba\u5df2\u7ecf\u8fc7\u6865\uff0c\u66f4\u65b0\u6700\u5c11\u65f6\u95f4\u53ca\u65b9\u6848", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 MinTime=CurTime;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(int i=0; i<SIZE && TmpScheme[i]>=0; i++)", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Scheme[i] = TmpScheme[i];", "\n\u00a0\u00a0\u00a0 } else if(Direction == 1) {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // \u8fc7\u6865\u65b9\u5411\u5411\u53f3\uff0c\u4ece\u6865\u5de6\u4fa7\u9009\u51fa\u4e24\u4eba\u8fc7\u6865", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(int i=0; i<N; i++)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(Position[i] == 0 && CurTime + Time[i] < MinTime) {", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 TmpScheme[Index++] = i;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Position[i] = 1;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(int j=0; j<N; j++) {", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int TmpMax = (Time[i] > Time[j] ? Time[i] : Time[j]);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(Position[j] == 0 && CurTime + TmpMax < MinTime) {", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 TmpScheme[Index++] = j;\u00a0\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Position[j] = 1;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Find(Remnant \u2013 2, CurTime + TmpMax, !Direction);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Position[j] = 0;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 TmpScheme[--Index] = -1;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Position[i] = 0;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 TmpScheme[--Index] = -1;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0\u00a0 } else {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // \u8fc7\u6865\u65b9\u5411\u5411\u5de6\uff0c\u4ece\u6865\u53f3\u4fa7\u9009\u51fa\u4e00\u4e2a\u4eba\u56de\u6765\u9001\u706f", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(int j=0; j<N; j++) {", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(Position[j] == 1 && CurTime+Time[j] < MinTime) {", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 TmpScheme[Index++] = j;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Position[j] = 0;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Find(Remnant+1, CurTime+Time[j], !Direction);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Position[j] = 1;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 TmpScheme[--Index] = -1;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0\u00a0 }", "\n}", "\nint main(int argc, char* argv[]) {", "\n\u00a0\u00a0\u00a0 for(int i=0; i<SIZE; i++) \u00a0\u00a0// \u521d\u59cb\u65b9\u6848\u5185\u5bb9\u4e3a\u8d1f\u503c\uff0c\u907f\u514d\u548c\u4eba\u5458\u6807\u53f7\u51b2\u7a81", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Scheme[i] = TmpScheme[i] = -1;", "Find(N, 0, 1);\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0// \u67e5\u627e\u6700\u4f73\u65b9\u6848", "\u00a0\u00a0\u00a0 printf(\u201cMinTime=%d:\u201d, MinTime);\u00a0// \u8f93\u51fa\u6700\u4f73\u65b9\u6848", "\n\u00a0\u00a0\u00a0 for(int i=0; i<SIZE && Scheme[i]>=0; i+=3)", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c\u00a0 %d-%d\u00a0 %d\u201d, Scheme[i], Scheme[i+1], Scheme[i+2]);", "\n\u00a0\u00a0\u00a0 printf(\u201c\\b\\b\u00a0 \u201c);", "\n}"], "title": "\u636e\u8bf4\u662f\u5916\u4f01\u7684\u9762\u8bd5\u9898\uff0c\u5728\u8fd9\u91cc\u7528\u7a0b\u5e8f\u6765\u6c42\u89e3"},
{"contents": ["\u5b9e\u73b0strstr\u529f\u80fd\uff0c\u5373\u5728\u7236\u4e32\u4e2d\u5bfb\u627e\u5b50\u4e32\u9996\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\uff08\u7b14\u8bd5\u4e2d\u5e38\u8ba9\u9762\u8bd5\u8005\u5b9e\u73b0\u6807\u51c6\u5e93\u4e2d\u7684\u4e00\u4e9b\u51fd\u6570\uff09", "\nchar * strstring(char *ParentString, char *SubString) {", "\n\u00a0char *pSubString, *pPareString;", "\n\u00a0for(char *pTmp=ParentString; *pTmp; pTmp++) {", "\n\u00a0\u00a0pSubString = SubString;", "\n\u00a0\u00a0pPareString = pTmp;\u00a0", "\n\u00a0\u00a0while(*pSubString == *pPareString && *pSubString != \u2018\\0\u2032) {", "\n\u00a0\u00a0\u00a0pSubString++;", "\n\u00a0\u00a0\u00a0pPareString++;", "\n\u00a0\u00a0}", "\n\u00a0\u00a0if(*pSubString == \u2018\\0\u2032) \u00a0return pTmp;", "\n\u00a0}", "\n\u00a0return NULL;", "\n}", "int main(int argc, char* argv[]) {", "\n\u00a0char *ParentString = \u201chappy birthday to you!\u201d;", "\n\u00a0char *SubString = \u201cbirthday\u201d;", "\n\u00a0printf(\u201c%s\u201d,strstring(ParentString, SubString));", "\n}"], "title": "\u5b9e\u73b0strstr\u529f\u80fd\uff0c\u5373\u5728\u7236\u4e32\u4e2d\u5bfb\u627e\u5b50\u4e32\u9996\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\uff08\u7b14\u8bd5\u4e2d\u5e38\u8ba9\u9762\u8bd5\u8005\u5b9e\u73b0\u6807\u51c6\u5e93\u4e2d\u7684\u4e00\u4e9b\u51fd\u6570\uff09"},
{"contents": ["\u516b\u7687\u540e\u95ee\u9898\uff0c\u8f93\u51fa\u4e86\u6240\u6709\u60c5\u51b5\uff0c\u4e0d\u8fc7\u6709\u4e9b\u7ed3\u679c\u53ea\u662f\u65cb\u8f6c\u4e8690\u5ea6\u800c\u5df2\u3002\uff08\u56de\u6eaf\u7b97\u6cd5\u7684\u5178\u578b\u4f8b\u9898\uff0c\u662f\u6570\u636e\u7ed3\u6784\u4e66\u4e0a\u7b97\u6cd5\u7684\u5177\u4f53\u5b9e\u73b0\uff0c\u5927\u5bb6\u90fd\u4eb2\u81ea\u52a8\u624b\u5199\u8fc7\u8fd9\u4e2a\u7a0b\u5e8f\u5417\uff1f\uff09", "\n#define N 8", "\nint Board[N][N];", "\nint Valid(int i, int j) {\u00a0\u00a0// \u5224\u65ad\u4e0b\u68cb\u4f4d\u7f6e\u662f\u5426\u6709\u6548", "\n\u00a0int k = 1;", "\n\u00a0for(k=1; i>=k && j>=k;k++)", "\n\u00a0\u00a0if(Board[i-k][j-k])\u00a0return 0;", "\n\u00a0for(k=1; i>=k;k++)", "\n\u00a0\u00a0if(Board[i-k][j])\u00a0\u00a0return 0;", "\n\u00a0for(k=1; i>=k && j+k<N;k++)", "\n\u00a0\u00a0if(Board[i-k][j+k])\u00a0return 0;", "\n\u00a0return 1;", "\n}", "void Trial(int i, int n) {\u00a0\u00a0// \u5bfb\u627e\u5408\u9002\u4e0b\u68cb\u4f4d\u7f6e", "\n\u00a0if(i == n) {", "\n\u00a0\u00a0for(int k=0; k<n; k++) {", "\n\u00a0\u00a0\u00a0for(int m=0; m<n; m++)", "\n\u00a0\u00a0\u00a0\u00a0printf(\u201c%d \u201c, Board[k][m]);", "\n\u00a0\u00a0\u00a0printf(\u201c\\n\u201d);", "\n\u00a0\u00a0}", "\n\u00a0\u00a0printf(\u201c\\n\u201d);", "\n\u00a0} else {", "\n\u00a0\u00a0for(int j=0; j<n; j++) {", "\n\u00a0\u00a0\u00a0Board[i][j] = 1;", "\n\u00a0\u00a0\u00a0if(Valid(i,j))", "\n\u00a0\u00a0\u00a0\u00a0Trial(i+1, n);", "\n\u00a0\u00a0\u00a0Board[i][j] = 0;", "\n\u00a0\u00a0}", "\n\u00a0}", "\n}", "int main(int argc, char* argv[]) {", "\n\u00a0Trial(0, N);", "\n}"], "title": "\u516b\u7687\u540e\u95ee\u9898\uff0c\u8f93\u51fa\u4e86\u6240\u6709\u60c5\u51b5\uff0c\u4e0d\u8fc7\u6709\u4e9b\u7ed3\u679c\u53ea\u662f\u65cb\u8f6c\u4e8690\u5ea6\u800c\u5df2"},
{"contents": ["int GetSubString(char *strSource, char *strResult) {", "\n\u00a0\u00a0\u00a0 int iTmp=0, iHead=0, iMax=0;", "\n\u00a0\u00a0\u00a0 for(int Index=0, iLen=0; strSource[Index]; Index++) {", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(strSource[Index] >= \u20190\u2032 && strSource[Index] <= \u20199\u2032 &&", "\nstrSource[Index-1] > \u20190\u2032 && strSource[Index] == strSource[Index-1]+1) {", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 iLen++;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // \u8fde\u7eed\u6570\u5b57\u7684\u957f\u5ea6\u589e1", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 } else {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // \u51fa\u73b0\u5b57\u7b26\u6216\u4e0d\u8fde\u7eed\u6570\u5b57", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(iLen > iMax) {", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 iMax = iLen; \u00a0iHead = iTmp;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0", "\n\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0 // \u8be5\u5b57\u7b26\u662f\u6570\u5b57\uff0c\u4f46\u6570\u5b57\u4e0d\u8fde\u7eed", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(strSource[Index] >= \u20190\u2032 && strSource[Index] <= \u20199\u2032) {", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 iTmp = Index;", "\niLen = 1;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0\u00a0", "\n\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0\u00a0 for(iTmp=0 ; iTmp < iMax; iTmp++)\u00a0// \u5c06\u539f\u5b57\u7b26\u4e32\u4e2d\u6700\u957f\u7684\u8fde\u7eed\u6570\u5b57\u4e32\u8d4b\u503c\u7ed9\u7ed3\u679c\u4e32", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 strResult[iTmp] = strSource[iHead++];", "\n\u00a0\u00a0\u00a0 strResult[iTmp]=\u2019\\0\u2032;", "\n\u00a0\u00a0\u00a0 return iMax;\u00a0\u00a0\u00a0\u00a0\u00a0// \u8fd4\u56de\u8fde\u7eed\u6570\u5b57\u7684\u6700\u5927\u957f\u5ea6", "\n}", "\nint main(int argc, char* argv[]) {", "\n\u00a0\u00a0\u00a0 char strSource[]=\u201dads3sl456789DF3456ld345AA\u201d, char strResult[sizeof(strSource)];", "\nprintf(\u201cLen=%d, strResult=%s \\nstrSource=%s\\n\u201d,", "\nGetSubString(strSource, strResult), strResult, strSource);", "\n}"], "title": "\u6c42\u6700\u5927\u8fde\u7eed\u9012\u589e\u6570\u5b57\u4e32\uff08\u5982\u201cads3sl456789DF3456ld345AA\u201d\u4e2d\u7684\u201c456789\u201d\uff09"},
{"contents": ["void Multiple(char A[], char B[], char C[]) {", "\u00a0\u00a0\u00a0 int TMP, In=0, LenA=-1, LenB=-1;", "\u00a0\u00a0\u00a0 while(A[++LenA] != \u2018\\0\u2032);", "\u00a0\u00a0\u00a0 while(B[++LenB] != \u2018\\0\u2032);", "\u00a0\u00a0\u00a0 int Index, Start = LenA + LenB \u2013 1;", "\u00a0\u00a0\u00a0 for(int i=LenB-1; i>=0; i\u2013) {", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Index = Start\u2013;", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(B[i] != \u20190\u2032) {", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(int In=0, j=LenA-1; j>=0; j\u2013) {", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 TMP = (C[Index]-\u20190\u2032) + (A[j]-\u20190\u2032) * (B[i] \u2013 \u20190\u2032) + In;", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C[Index--] = TMP % 10 + \u20190\u2032;", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 In = TMP / 10;", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0C[Index] = In + \u20190\u2032;", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\u00a0\u00a0\u00a0 }", "}", "\u00a0", "int main(int argc, char* argv[]) {", "\u00a0\u00a0\u00a0 char A[] = \u201c21839244444444448880088888889\u2033;", "\u00a0\u00a0\u00a0 char B[] = \u201c38888888888899999999999999988\u2033;", "char C[sizeof(A) + sizeof(B) - 1];", "\u00a0", "\u00a0\u00a0\u00a0 for(int k=0; k<sizeof(C); k++)", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C[k] = \u20190\u2032;", "\u00a0\u00a0\u00a0 C[sizeof(C)-1] = \u2018\\0\u2032;", "\u00a0", "\u00a0\u00a0\u00a0 Multiple(A, B, C);", "\u00a0\u00a0\u00a0 for(int i=0; C[i] != \u2018\\0\u2032; i++)", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c%c\u201d, C[i]);", "}"], "title": "\u5927\u6574\u6570\u6570\u76f8\u4e58\u7684\u95ee\u9898\u3002\uff08\u8fd9\u662f2002\u5e74\u5728\u4e00\u8003\u7814\u73ed\u4e0a\u9047\u5230\u7684\u7b97\u6cd5\u9898\uff09"},
{"contents": ["#define N 5", "#define M 5", "int k, Found, Flag[N];", "int Stamp[M] = {0, 1, 4, 12, 21};", "\u00a0", "// \u5728\u5269\u4f59\u5f20\u6570n\u4e2d\u7ec4\u5408\u51fa\u9762\u503c\u548cValue", "int Combine(int n, int Value) {", "\u00a0\u00a0\u00a0\u00a0 if(n >= 0 && Value == 0) {", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Found = 1;", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int Sum = 0;", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(int i=0; i<N && Flag[i] != 0; i++) {", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Sum += Stamp[Flag[i]];", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c%d \u201c, Stamp[Flag[i]]);", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c\\tSum=%d\\n\\n\u201d, Sum);", "\u00a0\u00a0\u00a0\u00a0 }else for(int i=1; i<M && !Found && n>0; i++)", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(Value-Stamp[i] >= 0) {", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Flag[k++] = i;", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Combine(n-1, Value-Stamp[i]);", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Flag[--k] = 0;", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\u00a0\u00a0\u00a0\u00a0 return Found;", "}", "\u00a0", "int main(int argc, char* argv[]) {", "\u00a0\u00a0\u00a0\u00a0 for(int i=1; Combine(N, i); i++, Found=0);", "}"], "title": "\u636e\u8bf4\u662f\u534e\u4e3a2003\u5e74\u6821\u56ed\u62db\u8058\u7b14\u8bd5\u9898"},
{"contents": ["\u6c42\u7f51\u683c\u4e2d\u7684\u9ed1\u70b9\u5206\u5e03\u3002\u73b0\u67096*7\u7684\u7f51\u683c\uff0c\u5728\u67d0\u4e9b\u683c\u5b50\u4e2d\u6709\u9ed1\u70b9\uff0c\u5df2\u77e5\u5404\u884c\u4e0e\u5404\u5217\u4e2d\u6709\u9ed1\u70b9\u7684\u70b9\u6570\u4e4b\u548c\uff0c\u8bf7\u5728\u8fd9\u5f20\u7f51\u683c\u4e2d\u753b\u51fa\u9ed1\u70b9\u7684\u4f4d\u7f6e\u3002\uff08\u8fd9\u662f\u4e00\u7f51\u53cb\u63d0\u51fa\u7684\u9898\u76ee\uff0c\u8bf4\u662f\u4ed6\u7b14\u8bd5\u65f6\u9047\u5230\u7b97\u6cd5\u9898\uff09", "\n#define ROWS 6", "\n#define COLS 7", "\nint iPointsR[ROWS] = {2, 0, 4, 3, 4, 0};\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // \u5404\u884c\u9ed1\u70b9\u6570\u548c\u7684\u60c5\u51b5", "\nint iPointsC[COLS] = {4, 1, 2, 2, 1, 2, 1};\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // \u5404\u5217\u9ed1\u70b9\u6570\u548c\u7684\u60c5\u51b5", "\nint iCount, iFound;", "\nint iSumR[ROWS], iSumC[COLS], Grid[ROWS][COLS];", "int Set(int iRowNo) {", "\nif(iRowNo == ROWS) {", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(int iColNo=0; iColNo < COLS && iSumC[iColNo]==iPointsC[iColNo]; iColNo++)", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(iColNo == COLS-1) {", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c\\nNo.%d:\\n\u201d, ++iCount);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(int i=0; i < ROWS; i++)", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(int j=0; j < COLS; j++)", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c%d%c\u201d, Grid[i][j], (j+1) % COLS ? \u2018 \u2018 : \u2018\\n\u2019);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 iFound = 1;\u00a0// iFound = 1\uff0c\u6709\u89e3", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0\u00a0 } else {", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(int iColNo=0; iColNo < COLS; iColNo++) {", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(iPointsR[iRowNo] == 0) {", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Set(iRowNo + 1);", "\n\u00a0\u00a0 } else if(Grid[iRowNo][iColNo]==0) {", "\nGrid[iRowNo][iColNo] = 1;", "\niSumR[iRowNo]++; iSumC[iColNo]++;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(iSumR[iRowNo]<iPointsR[iRowNo] && iSumC[iColNo]<=iPointsC[iColNo])", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Set(iRowNo);", "\nelse if(iSumR[iRowNo]==iPointsR[iRowNo] && iRowNo < ROWS)", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Set(iRowNo + 1);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Grid[iRowNo][iColNo] = 0;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 iSumR[iRowNo]\u2013;", "\niSumC[iColNo]\u2013;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0\u00a0 }", "\nreturn iFound;\u00a0\u00a0 \u00a0\u00a0// \u7528\u4e8e\u5224\u65ad\u662f\u5426\u6709\u89e3", "\n}", "\nint main(int argc, char* argv[]) {", "\n\u00a0\u00a0\u00a0 if(!Set(0))", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201cFailure!\u201d);", "\n}"], "title": "\u6c42\u7f51\u683c\u4e2d\u7684\u9ed1\u70b9\u5206\u5e03"},
{"contents": ["1.\u7f16\u5199my_strcpy\u51fd\u6570\uff0c\u5b9e\u73b0\u4e0e\u5e93\u51fd\u6570strcpy\u7c7b\u4f3c\u7684\u529f\u80fd\uff0c\u4e0d\u80fd\u4f7f\u7528\u4efb\u4f55\u5e93\u51fd\u6570\uff1b", "\n\u7b54\uff1achar *strcpy(char *strDest, const char *strSrc)", "\n{", "\nif ( strDest == NULL || strSrc == NULL)", "\nreturn NULL ;", "\nif ( strDest == strSrc)", "\nreturnstrDest ;", "\nchar *tempptr = strDest ;", "\nwhile( (*strDest++ = *strSrc++) != \u2018\u2019);", "\nreturntempptr ;", "\n}", "2. \u5934\u6587\u4ef6\u4e2d\u7684ifndef/define/endif\u7684\u4f5c\u7528\uff1f", "\n\u7b54\uff1a\u9632\u6b62\u8be5\u5934\u6587\u4ef6\u88ab\u91cd\u590d\u5f15\u7528\u3002", "3. \uff03i nclude", "4. \u5728C++ \u7a0b\u5e8f\u4e2d\u8c03\u7528\u88abC \u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u7684\u51fd\u6570\uff0c\u4e3a\u4ec0\u4e48\u8981\u52a0extern\u201cC\u201d\uff1f", "\n\u7b54\uff1aextern\u662fC/C++\u8bed\u8a00\u4e2d\u8868\u660e\u51fd\u6570\u548c\u5168\u5c40\u53d8\u91cf\u4f5c\u7528\u8303\u56f4\uff08\u53ef\u89c1\u6027\uff09\u7684\u5173\u952e\u5b57\uff0c\u5176\u58f0\u660e\u7684\u51fd\u6570\u548c\u53d8\u91cf\u53ef\u4ee5\u5728\u672c\u6a21\u5757\u6216\u5176\u5b83\u6a21\u5757\u4e2d\u4f7f\u7528\u3002", "\n\u901a\u5e38\uff0c\u5728\u6a21\u5757\u7684\u5934\u6587\u4ef6\u4e2d\u5bf9\u672c\u6a21\u5757\u63d0\u4f9b\u7ed9\u5176\u5b83\u6a21\u5757\u5f15\u7528\u7684\u51fd\u6570\u548c\u5168\u5c40\u53d8\u91cf\u4ee5\u5173\u952e\u5b57extern\u58f0\u660e\u3002", "5. \u9762\u5411\u5bf9\u8c61\u7684\u4e09\u4e2a\u57fa\u672c\u7279\u5f81\uff0c\u5e76\u7b80\u5355\u53d9\u8ff0\u4e4b\uff1f", "\n\u7b54\uff1a1\uff09\u5c01\u88c5\uff1a\u5c06\u5ba2\u89c2\u4e8b\u7269\u62bd\u8c61\u6210\u7c7b\uff0c\u6bcf\u4e2a\u7c7b\u5bf9\u81ea\u8eab\u7684\u6570\u636e\u548c\u65b9\u6cd5\u5b9e\u884cprotection(private, protected,public)", "\n2\uff09\u7ee7\u627f\uff1a\u5b9e\u73b0\u7ee7\u627f\uff08\u6307\u4f7f\u7528\u57fa\u7c7b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u800c\u65e0\u9700\u989d\u5916\u7f16\u7801\u7684\u80fd\u529b\uff09\u3001\u53ef\u89c6\u7ee7\u627f\uff08\u5b50\u7a97\u4f53\u4f7f\u7528\u7236\u7a97\u4f53\u7684\u5916\u89c2\u548c\u5b9e\u73b0\u4ee3\u7801\uff09\u3001\u63a5\u53e3\u7ee7\u627f\uff08\u4ec5\u4f7f\u7528\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u5b9e\u73b0\u6ede\u540e\u5230\u5b50\u7c7b\u5b9e\u73b0\uff09\u3002", "\n3\uff09\u591a\u6001\uff1a\u5141\u8bb8\u5c06\u5b50\u7c7b\u7c7b\u578b\u7684\u6307\u9488\u8d4b\u503c\u7ed9\u7236\u7c7b\u7c7b\u578b\u7684\u6307\u9488\u3002", "6. \u91cd\u8f7d\uff08overload)\u548c\u91cd\u5199(overried\uff0c\u6709\u7684\u4e66\u4e5f\u53eb\u505a\u201c\u8986\u76d6\u201d\uff09\u7684\u533a\u522b\uff1f", "\n\u7b54\uff1a\u4ece\u5b9a\u4e49\u4e0a\u6765\u8bf4\uff1a", "\n\u91cd\u8f7d\uff1a\u662f\u6307\u5141\u8bb8\u5b58\u5728\u591a\u4e2a\u540c\u540d\u51fd\u6570\uff0c\u800c\u8fd9\u4e9b\u51fd\u6570\u7684\u53c2\u6570\u8868\u4e0d\u540c\uff08\u6216\u8bb8\u53c2\u6570\u4e2a\u6570\u4e0d\u540c\uff0c\u6216\u8bb8\u53c2\u6570\u7c7b\u578b\u4e0d\u540c\uff0c\u6216\u8bb8\u4e24\u8005\u90fd\u4e0d\u540c\uff09\u3002", "\n\u91cd\u5199\uff1a\u662f\u6307\u5b50\u7c7b\u91cd\u65b0\u5b9a\u4e49\u590d\u7c7b\u865a\u51fd\u6570\u7684\u65b9\u6cd5\u3002", "\n\u4ece\u5b9e\u73b0\u539f\u7406\u4e0a\u6765\u8bf4\uff1a", "\n\u91cd\u8f7d\uff1a\u7f16\u8bd1\u5668\u6839\u636e\u51fd\u6570\u4e0d\u540c\u7684\u53c2\u6570\u8868\uff0c\u5bf9\u540c\u540d\u51fd\u6570\u7684\u540d\u79f0\u505a\u4fee\u9970\uff0c\u7136\u540e\u8fd9\u4e9b\u540c\u540d\u51fd\u6570\u5c31\u6210\u4e86\u4e0d\u540c\u7684\u51fd\u6570\u3002", "\n\u91cd\u5199\uff1a\u5f53\u5b50\u7c7b\u91cd\u65b0\u5b9a\u4e49\u4e86\u7236\u7c7b\u7684\u865a\u51fd\u6570\u540e\uff0c\u7236\u7c7b\u6307\u9488\u6839\u636e\u8d4b\u7ed9\u5b83\u7684\u4e0d\u540c\u7684\u5b50\u7c7b\u6307\u9488\uff0c\u52a8\u6001\u7684\u8c03\u7528\u5c5e\u4e8e\u5b50\u7c7b\u7684\u8be5\u51fd\u6570\uff0c\u8fd9\u6837\u7684\u51fd\u6570\u8c03\u7528\u5728\u7f16\u8bd1\u671f\u95f4\u662f\u65e0\u6cd5\u786e\u5b9a\u7684\uff08\u8c03\u7528\u7684\u5b50\u7c7b\u7684\u865a\u51fd\u6570\u7684\u5730\u5740\u65e0\u6cd5\u7ed9\u51fa\uff09\u3002", "7. \u591a\u6001\u7684\u4f5c\u7528\uff1f", "\n\u7b54\uff1a\u4e3b\u8981\u662f\u4e24\u4e2a\uff1a1\uff09\u9690\u85cf\u5b9e\u73b0\u7ec6\u8282\uff0c\u4f7f\u5f97\u4ee3\u7801\u80fd\u591f\u6a21\u5757\u5316\uff1b\u6269\u5c55\u4ee3\u7801\u6a21\u5757\uff0c\u5b9e\u73b0\u4ee3\u7801\u91cd\u7528\uff1b2\uff09\u63a5\u53e3\u91cd\u7528\uff0c\u4e3a\u4e86\u7c7b\u5728\u7ee7\u627f\u548c\u6d3e\u751f\u7684\u65f6\u5019\uff0c\u4fdd\u8bc1\u4f7f\u7528\u5bb6\u65cf\u4e2d\u4efb\u4e00\u7c7b\u7684\u5b9e\u4f8b\u7684\u67d0\u4e00\u5c5e\u6027\u65f6\u7684\u6b63\u786e\u8c03\u7528\u3002", "8. \u5206\u522b\u5199\u51faBOOL,int,float,\u6307\u9488\u7c7b\u578b\u7684\u53d8\u91cfa \u4e0e\u201c\u96f6\u201d\u7684\u6bd4\u8f83\u8bed\u53e5\u3002", "\n\u7b54\uff1aBOOL :if ( !a ) or if(a)", "\nint :if ( a ==0)", "\nfloat :const EXPRESSION EXP = 0.000001", "\nif ( a -EXP)", "\npointer : if ( a != NULL) or if(a == NULL)", "9. \u8bf7\u8bf4\u51faconst\u4e0e#define \u76f8\u6bd4\uff0c\u6709\u4f55\u4f18\u70b9\uff1f", "\n\u7b54\u6848\uff1a1\uff09 const \u5e38\u91cf\u6709\u6570\u636e\u7c7b\u578b\uff0c\u800c\u5b8f\u5e38\u91cf\u6ca1\u6709\u6570\u636e\u7c7b\u578b\u3002\u7f16\u8bd1\u5668\u53ef\u4ee5\u5bf9\u524d\u8005\u8fdb\u884c\u7c7b\u578b\u5b89\u5168\u68c0\u67e5\u3002\u800c\u5bf9\u540e\u8005\u53ea\u8fdb\u884c\u5b57\u7b26\u66ff\u6362\uff0c\u6ca1\u6709\u7c7b\u578b\u5b89\u5168\u68c0\u67e5\uff0c\u5e76\u4e14\u5728\u5b57\u7b26\u66ff\u6362\u53ef\u80fd\u4f1a\u4ea7\u751f\u610f\u6599\u4e0d\u5230\u7684\u9519\u8bef\u3002", "\n2\uff09 \u6709\u4e9b\u96c6\u6210\u5316\u7684\u8c03\u8bd5\u5de5\u5177\u53ef\u4ee5\u5bf9const \u5e38\u91cf\u8fdb\u884c\u8c03\u8bd5\uff0c\u4f46\u662f\u4e0d\u80fd\u5bf9\u5b8f\u5e38\u91cf\u8fdb\u884c\u8c03\u8bd5\u3002", "10.\u7b80\u8ff0\u6570\u7ec4\u4e0e\u6307\u9488\u7684\u533a\u522b\uff1f", "\n\u6570\u7ec4\u8981\u4e48\u5728\u9759\u6001\u5b58\u50a8\u533a\u88ab\u521b\u5efa\uff08\u5982\u5168\u5c40\u6570\u7ec4\uff09\uff0c\u8981\u4e48\u5728\u6808\u4e0a\u88ab\u521b\u5efa\u3002\u6307\u9488\u53ef\u4ee5\u968f\u65f6\u6307\u5411\u4efb\u610f\u7c7b\u578b\u7684\u5185\u5b58\u5757\u3002", "\n(1)\u4fee\u6539\u5185\u5bb9\u4e0a\u7684\u5dee\u522b", "\nchar a[] = \u201chello\u201d;", "\na[0] = \u2018X\u2019;", "\nchar *p = \u201cworld\u201d; // \u6ce8\u610fp \u6307\u5411\u5e38\u91cf\u5b57\u7b26\u4e32", "\np[0] = \u2018X\u2019; // \u7f16\u8bd1\u5668\u4e0d\u80fd\u53d1\u73b0\u8be5\u9519\u8bef\uff0c\u8fd0\u884c\u65f6\u9519\u8bef", "\n(2) \u7528\u8fd0\u7b97\u7b26sizeof \u53ef\u4ee5\u8ba1\u7b97\u51fa\u6570\u7ec4\u7684\u5bb9\u91cf\uff08\u5b57\u8282\u6570\uff09\u3002sizeof(p),p \u4e3a\u6307\u9488\u5f97\u5230\u7684\u662f\u4e00\u4e2a\u6307\u9488\u53d8\u91cf\u7684\u5b57\u8282\u6570\uff0c\u800c\u4e0d\u662fp \u6240\u6307\u7684\u5185\u5b58\u5bb9\u91cf\u3002C++/C \u8bed\u8a00\u6ca1\u6709\u529e\u6cd5\u77e5\u9053\u6307\u9488\u6240\u6307\u7684\u5185\u5b58\u5bb9\u91cf\uff0c\u9664\u975e\u5728\u7533\u8bf7\u5185\u5b58\u65f6\u8bb0\u4f4f\u5b83\u3002\u6ce8\u610f\u5f53\u6570\u7ec4\u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570\u8fdb\u884c\u4f20\u9012\u65f6\uff0c\u8be5\u6570\u7ec4\u81ea\u52a8\u9000\u5316\u4e3a\u540c\u7c7b\u578b\u7684\u6307\u9488\u3002", "\nchar a[] = \u201chello world\u201d;", "\nchar *p = a;", "\ncout\ncout\n\u8ba1\u7b97\u6570\u7ec4\u548c\u6307\u9488\u7684\u5185\u5b58\u5bb9\u91cf", "\nvoidFunc(char a[100])", "\n{", "\ncout\n}", "11.\u53d8\u91cf\u7684\u58f0\u660e\u548c\u5b9a\u4e49\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u7b54\uff1a\u58f0\u660e\u53d8\u91cf\u4e0d\u5206\u914d\u7a7a\u95f4\uff0c\u5b9a\u4e49\u53d8\u91cf\u8981\u5206\u914d\u7a7a\u95f4\u3002\u58f0\u660e\u4e3b\u8981\u662f\u544a\u8bc9\u7f16\u8bd1\u5668,\u540e\u9762\u7684\u5f15\u7528\u90fd\u6309\u58f0\u660e\u7684\u683c\u5f0f\u3002\u5b9a\u4e49\u5176\u5b9e\u5305\u542b\u4e86\u58f0\u660e\u7684\u610f\u601d,\u540c\u65f6\u8981\u5206\u914d\u5185\u5b58\u7a7a\u95f4\u3002", "12. \u89e3\u91ca\u5806\u548c\u6808\u7684\u533a\u522b\u3002", "\n\u7b54\uff1a\u5806\uff08heap\uff09\u2014\u2014\u4e00\u822c\u7531\u7a0b\u5e8f\u5458\u5206\u914d\u91ca\u653e\uff0c\u82e5\u7a0b\u5e8f\u5458\u4e0d\u91ca\u653e\uff0c\u7a0b\u5e8f\u7ed3\u675f\u65f6\u53ef\u80fd\u7531OS\u56de\u6536\u3002\u6ce8\u610f\u5b83\u4e0e\u6570\u636e\u7ed3\u6784\u4e2d\u7684\u5806\u662f\u4e24\u56de\u4e8b\uff0c\u5206\u914d\u65b9\u5f0f\u5012\u662f\u7c7b\u4f3c\u4e8e\u94fe\u8868\u3002\u901f\u5ea6\u6bd4\u8f83\u6162\uff0c\u800c\u4e14\u5bb9\u6613\u4ea7\u751f\u5185\u5b58\u788e\u7247,\u4e0d\u8fc7\u7528\u8d77\u6765\u6700\u65b9\u4fbf\u3002", "\n\u6808\uff08stack\uff09\u2014\u2014\u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u5206\u914d\u91ca\u653e\uff0c\u5b58\u653e\u51fd\u6570\u7684\u53c2\u6570\u503c\uff0c\u5c40\u90e8\u53d8\u91cf\u7684\u503c\u7b49\u3002\u5176\u64cd\u4f5c\u65b9\u5f0f\u7c7b\u4f3c\u4e8e\u6570\u636e\u7ed3\u6784\u4e2d\u7684\u6808\u3002\u7531\u7cfb\u7edf\u81ea\u52a8\u5206\u914d\uff0c\u901f\u5ea6\u8f83\u5feb\u3002\u4f46\u7a0b\u5e8f\u5458\u662f\u65e0\u6cd5\u63a7\u5236\u7684\u3002", "13. const\u7684\u4f5c\u7528\u662f\u4ec0\u4e48?", "\n\u7b54\uff1a\uff081\uff09\u53ef\u4ee5\u5b9a\u4e49const\u5e38\u91cf", "\n\uff082\uff09const\u53ef\u4ee5\u4fee\u9970\u51fd\u6570\u7684\u53c2\u6570\u3001\u8fd4\u56de\u503c\uff0c\u751a\u81f3\u51fd\u6570\u7684\u5b9a\u4e49\u4f53\u3002\u88abconst\u4fee\u9970\u7684\u4e1c\u897f\u90fd\u53d7\u5230\u5f3a\u5236\u4fdd\u62a4\uff0c\u53ef\u4ee5\u9884\u9632\u610f\u5916\u7684\u53d8\u52a8\uff0c\u80fd\u63d0\u9ad8\u7a0b\u5e8f\u7684\u5065\u58ee\u6027\u3002", "14. \u4e0b\u5217\u54ea\u4e24\u4e2a\u662f\u7b49\u540c\u7684", "\nint b;", "\nA constint* a = &b; //\u6307\u5411\u5e38\u91cf\u7684\u6307\u9488\uff0c\u4e0d\u80fd\u901a\u8fc7\u6307\u9488\u6539\u53d8b\uff0c\u4f46\u6307\u9488\u7684\u5730\u5740\u53ef\u4ee5\u6539\u53d8\u3002", "\nB const* int a = &b;// \u6307\u9488\u7684\u5730\u5740\u4e0d\u53ef\u4ee5\u6539\u53d8\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u6307\u9488\u6539\u53d8b\u7684\u503c", "\nC constint* const a = &b; //\u6307\u9488\u6307\u5411\u7684\u503c\uff0c\u548c\u6307\u9488\u672c\u8eab\u7684\u5730\u5740\u90fd\u4e0d\u80fd\u6539\u53d8", "\nD intconst* const a = &b;//\u4e0ec\u76f8\u540c", "15. \u5b8c\u6210\u7a0b\u5e8f\uff0c\u5b9e\u73b0\u5bf9\u6570\u7ec4\u7684\u964d\u5e8f\u6392\u5e8f", "\n#include ", "16. int i=(j=4,k=8,l=16,m=32); printf(\u201c%d\u201d, i); \u8f93\u51fa\u662f\u591a\u5c11\uff1f", "\n\u7b54\uff1a\u76f8\u5f53\u4e8e  i=j=4\uff1bi=k=8\uff1bi=l=16\uff1bi=m=32; \u6545\u6700\u540ei=32\uff1b", "17. \u8bf7\u7b80\u8ff0\u4ee5\u4e0b\u4e24\u4e2afor\u5faa\u73af\u7684\u4f18\u7f3a\u70b9\uff085\u5206\uff09", "\n1\uff09for (i=0; i", "\n{", "\nif (condition)", "\nDoSomething();", "\nelse", "\nDoOtherthing();", "\n}", "\n2\uff09if (condition)", "\n{", "\nfor (i=0; i", "\nDoSomething();", "\n}", "\nelse", "\n{", "\nfor (i=0; i", "19. .C++\u91cc\u9762\u5982\u4f55\u58f0\u660econst void f(void)\u51fd\u6570\u4e3aC\u7a0b\u5e8f\u4e2d\u7684\u5e93\u51fd\u6570\uff1f", "\n\u7b54\uff1a\u5728\u8be5\u51fd\u6570\u524d\u6dfb\u52a0extern \u201cC\u201d\u58f0\u660e\u3002\u7531\u4e8e\u7f16\u8bd1\u540e\u7684\u540d\u5b57\u4e0d\u540c\uff0cC++\u7a0b\u5e8f\u4e0d\u80fd\u76f4\u63a5\u8c03\u7528C \u51fd\u6570\u3002", "20. \u8bf7\u5199\u51fa\u4e0b\u9762\u4ee3\u7801\u5728 32 \u4f4d\u5e73\u53f0\u4e0a\u7684\u8fd0\u884c\u7ed3\u679c\uff0c\u5e76\u8bf4\u660esizeof\u7684\u6027\u8d28\uff1a", "\n#include ", "21. C++\u4e2d\uff0c\u5173\u952e\u5b57struct\u548cclass\u7684\u533a\u522b\u4ec5\u4ec5\u5728\u4e8e\uff1a", "\nstruct\u5b9a\u4e49\u7684\u7c7b\u7684\u7f3a\u7701\u6210\u5458\u4e3a\u516c\u6709\u7684\uff0c\u800cclass\u5b9a\u4e49\u7684\u7c7b\u7684\u7f3a\u7701\u6210\u5458\u4e3a\u79c1\u6709\u7684; ", "22. \u5934\u6587\u4ef6\u7684\u4f5c\u7528\u662f\u4ec0\u4e48?", "\n\u7b54\uff1a1\uff09\u901a\u8fc7\u5934\u6587\u4ef6\u6765\u8c03\u7528\u5e93\u529f\u80fd\u30022\uff09\u5934\u6587\u4ef6\u80fd\u52a0\u5f3a\u7c7b\u578b\u5b89\u5168\u68c0\u67e5\u3002", "23. C++\u51fd\u6570\u4e2d\u503c\u7684\u4f20\u9012\u65b9\u5f0f\u6709\u54ea\u51e0\u79cd?", "\n\u7b54\uff1aC++\u51fd\u6570\u7684\u4e09\u79cd\u4f20\u9012\u65b9\u5f0f\u4e3a\uff1a\u503c\u4f20\u9012\u3001\u6307\u9488\u4f20\u9012\u548c\u5f15\u7528\u4f20\u9012\u3002", "24. \u5185\u5b58\u7684\u5206\u914d\u65b9\u5f0f\u7684\u5206\u914d\u65b9\u5f0f\u6709\u51e0\u79cd?", "\n\u7b54\uff1a1\uff09\u4ece\u9759\u6001\u5b58\u50a8\u533a\u57df\u5206\u914d\u3002\u5185\u5b58\u5728\u7a0b\u5e8f\u7f16\u8bd1\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u5206\u914d\u597d\uff0c\u8fd9\u5757\u5185\u5b58\u5728\u7a0b\u5e8f\u7684\u6574\u4e2a\u8fd0\u884c\u671f\u95f4\u90fd\u5b58\u5728\u3002\u4f8b\u5982\u5168\u5c40\u53d8\u91cf\u3002", "\n2\uff09\u5728\u6808\u4e0a\u521b\u5efa\u3002\u5728\u6267\u884c\u51fd\u6570\u65f6\uff0c\u51fd\u6570\u5185\u5c40\u90e8\u53d8\u91cf\u7684\u5b58\u50a8\u5355\u5143\u90fd\u53ef\u4ee5\u5728\u6808\u4e0a\u521b\u5efa\uff0c\u51fd\u6570\u6267\u884c\u7ed3\u675f\u65f6\u8fd9\u4e9b\u5b58\u50a8\u5355\u5143\u81ea\u52a8\u88ab\u91ca\u653e\u3002\u6808\u5185\u5b58\u5206\u914d\u8fd0\u7b97\u5185\u7f6e\u4e8e\u5904\u7406\u5668\u7684\u6307\u4ee4\u96c6\u4e2d\uff0c\u6548\u7387\u5f88\u9ad8\uff0c\u4f46\u662f\u5206\u914d\u7684\u5185\u5b58\u5bb9\u91cf\u6709\u9650\u3002", "\n3\uff09\u4ece\u5806\u4e0a\u5206\u914d\uff0c\u4ea6\u79f0\u52a8\u6001\u5185\u5b58\u5206\u914d\u3002\u7a0b\u5e8f\u5728\u8fd0\u884c\u7684\u65f6\u5019\u7528malloc\u6216new\u7533\u8bf7\u4efb\u610f\u591a\u5c11\u7684\u5185\u5b58\uff0c\u7a0b\u5e8f\u5458\u81ea\u5df1\u8d1f\u8d23\u5728\u4f55\u65f6\u7528free\u6216delete\u91ca\u653e\u5185\u5b58\u3002\u52a8\u6001\u5185\u5b58\u7684\u751f\u5b58\u671f\u7531\u6211\u4eec\u51b3\u5b9a\uff0c\u4f7f\u7528\u975e\u5e38\u7075\u6d3b\uff0c\u4f46\u95ee\u9898\u4e5f\u6700\u591a\u3002", "25. \u8bbe\u8ba1\u51fd\u6570intatoi(char *s)\u3002", "\n\u7b54\uff1aintatoi (char *s)", "\n{", "\nint i = 0,sum = 0,sign;    //\u8f93\u5165\u7684\u6570\u524d\u9762\u53ef\u80fd\u8fd8\u6709\u7a7a\u683c\u6216\u5236\u8868\u7b26\u5e94\u52a0\u5224\u65ad", "\nwhile(*s==\u201d||*s==\u2019\\t\u2019)", "\n       {", "\ni++;", "\n       }", "\nsign = (*s==\u2019-')?-1:1;", "\nif(*s==\u2019-'|| *s==\u2019+')", "\n       {", "\ni++;", "\n       }", "\nwhile(*s!=\u2019\\0\u2032)", "\n       {", "\nsum = *s-\u20190\u2032+sum*10;", "\ni++;", "\n       }", "\nreturn sign*sum;", "\n}", "26. \u7f16\u5199strcat\u51fd\u6570(6\u5206)", "\n\u5df2\u77e5strcat\u51fd\u6570\u7684\u539f\u578b\u662fchar *strcat (char *strDest, const char *strSrc);", "\n\u5176\u4e2dstrDest\u662f\u76ee\u7684\u5b57\u7b26\u4e32\uff0cstrSrc\u662f\u6e90\u5b57\u7b26\u4e32\u3002", "\n\uff081\uff09\u4e0d\u8c03\u7528C++/C \u7684\u5b57\u7b26\u4e32\u5e93\u51fd\u6570\uff0c\u8bf7\u7f16\u5199\u51fd\u6570strcat", "\n\u7b54\uff1a", "\nchar * __cdeclstrcat(char * dst, const char * src)", "\n{", "\nchar * cp = dst;", "\nwhile( *cp )", "\ncp++; /* find end of dst */", "\nwhile( *cp++ = *src++ ) ; /* Copy src to end of dst */", "\nreturn(dst ); /* return dst */", "\n}", "\n\uff082\uff09strcat\u80fd\u628astrSrc\u7684\u5185\u5bb9\u8fde\u63a5\u5230strDest\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u8981char * \u7c7b\u578b\u7684\u8fd4\u56de\u503c\uff1f", "\n\u7b54\uff1a\u65b9\u4fbf\u8d4b\u503c\u7ed9\u5176\u4ed6\u53d8\u91cf\u3002", "27. MFC\u4e2dCString\u662f\u7c7b\u578b\u5b89\u5168\u7c7b\u4e48\uff1f", "\n\u7b54\uff1a\u4e0d\u662f\uff0c\u5176\u5b83\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u5230CString\u53ef\u4ee5\u4f7f\u7528CString\u7684\u6210\u5458\u51fd\u6570Format\u6765\u8f6c\u6362", "28.\u51fd\u6570\u6a21\u677f\u4e0e\u7c7b\u6a21\u677f\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u7b54\uff1a\u51fd\u6570\u6a21\u677f\u7684\u5b9e\u4f8b\u5316\u662f\u7531\u7f16\u8bd1\u7a0b\u5e8f\u5728\u5904\u7406\u51fd\u6570\u8c03\u7528\u65f6\u81ea\u52a8\u5b8c\u6210\u7684\uff0c\u800c\u7c7b\u6a21\u677f\u7684\u5b9e\u4f8b\u5316\u5fc5\u987b\u7531\u7a0b\u5e8f\u5458\u5728\u7a0b\u5e8f\u4e2d\u663e\u5f0f\u5730\u6307\u5b9a\u3002", "29. \u5199\u4e00\u4e2a\u201c\u6807\u51c6\u201d\u5b8fMIN\uff0c\u8fd9\u4e2a\u5b8f\u8f93\u5165\u4e24\u4e2a\u53c2\u6570\u5e76\u8fd4\u56de\u8f83\u5c0f\u7684\u4e00\u4e2a\u3002", "\n\u7b54\uff1a#define MIN(A,B) ((A) \n", "((*p++) \n", "30. \u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\u7ecf\u5e38\u8981\u7528\u5230\u65e0\u9650\u5faa\u73af\uff0c\u4f60\u600e\u4e48\u6837\u7528C\u7f16\u5199\u6b7b\u5faa\u73af\u5462\uff1f", "\n\u7b54\uff1awhile(1){}\u6216\u8005for(;;)", "31. \u7528\u53d8\u91cfa\u7ed9\u51fa\u4e0b\u9762\u7684\u5b9a\u4e49", "\na) \u4e00\u4e2a\u6574\u578b\u6570\uff08An integer\uff09", "\nb) \u4e00\u4e2a\u6307\u5411\u6574\u578b\u6570\u7684\u6307\u9488\uff08A pointer to an integer\uff09", "\nc) \u4e00\u4e2a\u6307\u5411\u6307\u9488\u7684\u7684\u6307\u9488\uff0c\u5b83\u6307\u5411\u7684\u6307\u9488\u662f\u6307\u5411\u4e00\u4e2a\u6574\u578b\u6570\uff08A pointer to a pointer to an integer\uff09", "\nd) \u4e00\u4e2a\u670910\u4e2a\u6574\u578b\u6570\u7684\u6570\u7ec4\uff08An array of 10 integers\uff09", "\ne) \u4e00\u4e2a\u670910\u4e2a\u6307\u9488\u7684\u6570\u7ec4\uff0c\u8be5\u6307\u9488\u662f\u6307\u5411\u4e00\u4e2a\u6574\u578b\u6570\u7684\uff08An array of 10 pointers to integers\uff09", "\nf) \u4e00\u4e2a\u6307\u5411\u670910\u4e2a\u6574\u578b\u6570\u6570\u7ec4\u7684\u6307\u9488\uff08A pointer to an array of 10 integers\uff09", "\ng) \u4e00\u4e2a\u6307\u5411\u51fd\u6570\u7684\u6307\u9488\uff0c\u8be5\u51fd\u6570\u6709\u4e00\u4e2a\u6574\u578b\u53c2\u6570\u5e76\u8fd4\u56de\u4e00\u4e2a\u6574\u578b\u6570\uff08A pointer to a function that takes an integer as an argument and returns an integer\uff09", "\nh) \u4e00\u4e2a\u670910\u4e2a\u6307\u9488\u7684\u6570\u7ec4\uff0c\u8be5\u6307\u9488\u6307\u5411\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u6709\u4e00\u4e2a\u6574\u578b\u53c2\u6570\u5e76\u8fd4\u56de\u4e00\u4e2a\u6574\u578b\u6570\uff08 An array of ten pointers to functions that take an integer argument and return an integer \uff09", "\n\u7b54\u6848\u662f\uff1a", "\na) int a; // An integer", "\nb) int *a; // A pointer to an integer", "\nc) int **a; // A pointer to a pointer to an integer", "\nd) int a[10]; // An array of 10 integers", "\ne) int *a[10]; // An array of 10 pointers to integers", "\nf) int (*a)[10]; // A pointer to an array of 10 integers", "\ng) int (*a)(int); // A pointer to a function a that takes an integer argument and returns an integer", "\nh) int (*a[10])(int); // An array of 10 pointers to functions that take an integer argument and return an integer", "32. 1\uff09\u5173\u952e\u5b57static\u7684\u4f5c\u7528\u662f\u4ec0\u4e48\uff1f\u7b54\uff1a\uff081\uff09\u7528\u4e8e\u5168\u5c40\u53d8\u91cf\uff1b\uff082\uff09\u7528\u4e8e\u5c40\u90e8\u53d8\u91cf\uff1b\uff083\uff09\u7528\u4e8e\u51fd\u6570\u3002", "\n2\uff09\u5173\u952e\u5b57const\u6709\u4ec0\u4e48\u542b\u610f\uff1f\u7b54\uff1a\u8868\u793a\u5e38\u91cf\u4e0d\u53ef\u4ee5\u4fee\u6539\u7684\u53d8\u91cf\u3002", "33. \u5982\u4f55\u5224\u65ad\u4e00\u6bb5\u7a0b\u5e8f\u662f\u7531C \u7f16\u8bd1\u7a0b\u5e8f\u8fd8\u662f\u7531C++\u7f16\u8bd1\u7a0b\u5e8f\u7f16\u8bd1\u7684\uff1f", "\n\u7b54\u6848\uff1a#ifdef __cplusplus", "\ncout\n#else", "\ncout\n#endif", "34. \u6570\u7ec4a[N]\uff0c\u5b58\u653e\u4e861\u81f3N-1\u4e2a\u6570\uff0c\u5176\u4e2d\u67d0\u4e2a\u6570\u91cd\u590d\u4e00\u6b21\u3002\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u627e\u51fa\u88ab\u91cd\u590d\u7684\u6570\u5b57.\u65f6\u95f4\u590d\u6742\u5ea6\u5fc5\u987b\u4e3ao\uff08N\uff09\u51fd\u6570\u539f\u578b\uff1aintdo_dup(int a[],int N)", "\n\u7b54\u6848\uff1a\u5982\u679c\u6570\u5c31\u662f1\uff0dN-1,\u90a3\u4e48\u6c42\u51faa[N]\u7684\u548c\uff0c\u7136\u540e\u51cf\u53bb1\uff0dN-1\u5c31\u884c\u4e86\u3002(\u786e\u5b9a\u6570\u5b571-N)", "\nS = N * (N-1) / 2;", "\nint i;", "\nint s = 0;", "\nfor(i=0;i", "\n{", "\ns += a[i];", "\n}", "\nint res = s \u2013 S;", "35. \u7a0b\u5e8f\u7531\u591a\u4e2a\u6a21\u5757\u7ec4\u6210\uff0c\u6240\u6709\u6a21\u5757\u90fd\u4f7f\u7528\u4e00\u7ec4\u6807\u51c6\u7684\u5305\u542b\u6587\u4ef6\u548c\u76f8\u540c\u7684\u7f16\u8bd1\u9009\u9879\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u5c06\u6240\u6709\u5305\u542b\u6587\u4ef6\u9884\u7f16\u8bd1\u4e3a\u4e00\u4e2a\u9884\u7f16\u8bd1\u5934\u3002", "\nchar * const p;", "\ncharconst * p", "\nconst char *p", "\n\u4e0a\u8ff0\u4e09\u4e2a\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u7b54\uff1achar * const p; //\u5e38\u91cf\u6307\u9488\uff0cp\u7684\u503c\u4e0d\u53ef\u4ee5\u4fee\u6539", "\nchar const * p\uff1b//\u6307\u5411\u5e38\u91cf\u7684\u6307\u9488\uff0c\u6307\u5411\u7684\u5e38\u91cf\u503c\u4e0d\u53ef\u4ee5\u6539", "\nconst char *p\uff1b //\u548cchar const *p", "36. \u67091,2,\u2026.\u4e00\u76f4\u5230n\u7684\u65e0\u5e8f\u6570\u7ec4,\u6c42\u6392\u5e8f\u7b97\u6cd5,\u5e76\u4e14\u8981\u6c42\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n),\u7a7a\u95f4\u590d\u6742\u5ea6O(1),\u4f7f\u7528\u4ea4\u6362,\u800c\u4e14\u4e00\u6b21\u53ea\u80fd\u4ea4\u6362\u4e24\u4e2a\u6570\u3002", "\n#include", "37. \u5199\u4e00\u4e2a\u51fd\u6570\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32str1\u548cstr2\u7684\u5927\u5c0f\uff0c\u82e5\u76f8\u7b49\u8fd4\u56de0\uff0c\u82e5str1\u5927\u4e8estr2\u8fd4\u56de1\uff0c\u82e5str1\u5c0f\u4e8estr2\u8fd4\u56de\uff0d1", "\nintstrcmp ( const char * src,const char * dst)", "\n{", "\nint ret = 0 ;", "\nwhile( ! (ret = *(unsigned char *)src \u2013 *(unsigned char *)dst) && *dst)//\u5b57\u7b26\u4e4b\u5dee\u4e3a\u6574\u578b", "\n{", "\n++src;", "\n++dst;", "\n}", "\nif ( ret  0 )", "\nret = 1 ;", "\nreturn( ret );", "\n}", "38. \u7528\u9884\u5904\u7406\u6307\u4ee4#define \u58f0\u660e\u4e00\u4e2a\u5e38\u6570\uff0c\u7528\u4ee5\u8868\u660e1\u5e74\u4e2d\u6709\u591a\u5c11\u79d2\uff08\u5ffd\u7565\u95f0\u5e74\u95ee\u9898\uff09", "\n\u7b54\uff1a #define SECONDS_PER_YEAR (60 * 60 * 24 * 365)UL", "39.Typedef\u5728C\u8bed\u8a00\u4e2d\u9891\u7e41\u7528\u4ee5\u58f0\u660e\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u6570\u636e\u7c7b\u578b\u7684\u540c\u4e49\u5b57\u3002\u4e5f\u53ef\u4ee5\u7528\u9884\u5904\u7406\u5668\u505a\u7c7b\u4f3c\u7684\u4e8b\u3002\u4f8b\u5982\uff0c\u601d\u8003\u4e00\u4e0b\u4e0b\u9762\u7684\u4f8b\u5b50\uff1a", "\n#definedPSstruct s *", "\ntypedefstruct s * tPS;", "\n\u4ee5\u4e0a\u4e24\u79cd\u60c5\u51b5\u7684\u610f\u56fe\u90fd\u662f\u8981\u5b9a\u4e49dPS\u548ctPS\u4f5c\u4e3a\u4e00\u4e2a\u6307\u5411\u7ed3\u6784s\u6307\u9488\u3002\u54ea\u79cd\u65b9\u6cd5\u66f4\u597d\u5462\uff1f\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u4e3a\u4ec0\u4e48\uff1f", "\n\u7b54\uff1atypedef\u66f4\u597d\u3002\u601d\u8003\u4e0b\u9762\u7684\u4f8b\u5b50\uff1a", "\ndPS p1,p2;tPS p3,p4;", "\n\u7b2c\u4e00\u4e2a\u6269\u5c55\u4e3a\uff1astruct s * p1, p2;", "\n\u4e0a\u9762\u7684\u4ee3\u7801\u5b9a\u4e49p1\u4e3a\u4e00\u4e2a\u6307\u5411\u7ed3\u6784\u7684\u6307\uff0cp2\u4e3a\u4e00\u4e2a\u5b9e\u9645\u7684\u7ed3\u6784\uff0c\u8fd9\u4e5f\u8bb8\u4e0d\u662f\u4f60\u60f3\u8981\u7684\u3002\u7b2c\u4e8c\u4e2a\u4f8b\u5b50\u6b63\u786e\u5730\u5b9a\u4e49\u4e86p3 \u548cp4 \u4e24\u4e2a\u6307\u9488\u3002", "40. C\u8bed\u8a00\u540c\u610f\u4e00\u4e9b\u4ee4\u4eba\u9707\u60ca\u7684\u7ed3\u6784,\u4e0b\u9762\u7684\u7ed3\u6784\u662f\u5408\u6cd5\u7684\u5417\uff0c\u5982\u679c\u662f\u5b83\u505a\u4e9b\u4ec0\u4e48\uff1f", "\nint a = 5, b = 7, c;", "\nc = a+++b;", "\n\u7b54\uff1a\u4e0a\u9762\u7684\u4ee3\u7801\u88ab\u5904\u7406\u6210\uff1ac = a++ + b;\u56e0\u6b64, \u8fd9\u6bb5\u4ee3\u7801\u6301\u884c\u540ea = 6, b = 7, c = 12\u3002", "41. char* ss = \u201c0123456789\u2033;", "\nsizeof(ss) \u7ed3\u679c 4  //ss\u662f\u6307\u5411\u5b57\u7b26\u4e32\u5e38\u91cf\u7684\u5b57\u7b26\u6307\u9488", "\nsizeof(*ss) \u7ed3\u679c 1  //*ss\u662f\u7b2c\u4e00\u4e2a\u5b57\u7b26", "\nchar ss[] = \u201c0123456789\u2033;", "\nsizeof(ss) \u7ed3\u679c 11   //ss\u662f\u6570\u7ec4\uff0c\u8ba1\u7b97\u5230\\0\u4f4d\u7f6e\uff0c\u56e0\u6b64\u662f10\uff0b1", "\nsizeof(*ss) \u7ed3\u679c 1  //*ss\u662f\u7b2c\u4e00\u4e2a\u5b57\u7b26", "\nchar ss[100] = \u201c0123456789\u2033;", "\nsizeof(ss) \u7ed3\u679c\u662f100  //ss\u8868\u793a\u5728\u5185\u5b58\u4e2d\u7684\u5927\u5c0f 100\u00d71", "\nintss[100] = \u201c0123456789\u2033;", "\nsizeof(ss) \u7ed3\u679c 400  //ss\u8868\u793a\u518d\u5185\u5b58\u4e2d\u7684\u5927\u5c0f 100\u00d74", "\nchar q[]=\u201dabc\u201d;", "\nchar p[]=\u201da\\n\u201d;", "\nsizeof(q),sizeof(p),strlen(q),strlen(p); \u3000\u3000\u7ed3\u679c\u662f 4 3 3 2", "42.\u5192\u6ce1\u6cd5\uff1a//\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u6bd4\u8f83n\u6b21\uff0c\u6bcf\u6b21\u62ff\u4e00\u4e2a\u4ece\u5934\u6bd4\u5230\u5c3e", "\nvoid bubble_sort(int array[],int n)", "\n{", "\ninti,j,temp;", "\nfor(i = 0; i \n{", "\nfor(j = 0; j  array[j+1])", "\n{ temp = array[j]; array[j] = array[j+1]; array[j+1] = temp; }", "\n}", "\nprintf(\u201c%d \u201c, array[j]);", "\n}", "\nreturn;", "\n}", "\n\u9009\u62e9\u6392\u5e8f\u6cd5\uff1a", "\nmain()", "\n{", "\n\u3000\u3000int a[10];", "\n\u3000\u3000inti,j,t,k;", "\nfor ( i = 0; i \nscanf(\u201c%d\u201d,&a[ i ]); //\u8f93\u516510\u4e2a\u6570", "\n\u3000\u3000for ( i = 0; i \n{", "\nk = i;", "\n\u3000\u3000for ( j = i + 1; j  a[ j ] )", "\n k = j; //\u524d\u8fdb", "\n\u3000\u3000if \uff08k\uff01=i\uff09", "\n\u3000\u3000       { t = a[ i ]; a[ i ] = a[ k ]; a[ k ] = t; }/* t \u53d1\u653e\u5956\u54c1*/", "\n\u3000\u3000}", "\nfor( i = 9; i >= 0; i \u2013)", "\nprintf(\u201c%4d\u201d,a[ i ]); /*\u663e\u793a\u6392\u5e8f\u540e\u7684\u7ed3\u679c*/", "\n}"], "title": "C/C++\u7b14\u8bd5\u9898-\u4e3b\u8981\u8003\u5bdfC/C++\u8bed\u8a00\u57fa\u7840\u6982\u5ff5\u3001\u7b97\u6cd5\u53ca\u7f16\u7a0b\uff0c\u9644\u53c2\u8003\u7b54\u6848\uff0c\u5206\u4eab\u7ed9\u5927\u5bb6"},
{"contents": ["\u968f\u673a\u5206\u914d\u5ea7\u4f4d\uff0c\u517150\u4e2a\u5b66\u751f\uff0c\u4f7f\u5b66\u53f7\u76f8\u90bb\u7684\u540c\u5b66\u5ea7\u4f4d\u4e0d\u80fd\u76f8\u90bb(\u65e9\u4e9b\u65f6\u5019\u7528C#\u5199\u7684\uff0c\u6ca1\u6709\u7528C\u6539\u5199\uff09\u3002", "\nstatic void Main(string[] args)", "\n{", "\n\u00a0int Tmp = 0, Count = 50;\u00a0\u00a0\u00a0", "\n\u00a0int[] Seats = new int[Count];\u00a0\u00a0\u00a0", "\n\u00a0bool[] Students = new bool[Count];", "\n\u00a0System.Random RandStudent=new System.Random();", "\n\u00a0Students[Seats[0]=RandStudent.Next(0,Count)]=true;", "\n\u00a0for(int i = 1; i < Count; ) {", "\n\u00a0\u00a0\u00a0\u00a0 Tmp=(int)RandStudent.Next(0,Count);", "\n\u00a0\u00a0\u00a0\u00a0 if((!Students[Tmp])&&(Seats[i-1]-Tmp!=1) && (Seats[i-1] \u2013 Tmp) != -1) {", "\n\u00a0\u00a0\u00a0Seats[i++] = Tmp;", "\nStudents[Tmp] = true;", "\n\u00a0\u00a0}", "\n\u00a0}", "\n\u00a0foreach(int Student in Seats)", "\n\u00a0\u00a0\u00a0\u00a0 System.Console.Write(Student + \u201d \u201c);", "\n\u00a0System.Console.Read();", "\n}"], "title": "\u968f\u673a\u5206\u914d\u5ea7\u4f4d\uff0c\u517150\u4e2a\u5b66\u751f\uff0c\u4f7f\u5b66\u53f7\u76f8\u90bb\u7684\u540c\u5b66\u5ea7\u4f4d\u4e0d\u80fd\u76f8\u90bb"},
{"contents": ["#define MAX_SIZE\u00a0 8", "int H[4] = {0, 1, 0, -1};", "int V[4] = {-1, 0, 1, 0};\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0", "char Maze[MAX_SIZE][MAX_SIZE] = {{\u2018X\u2019,'X\u2019,'X\u2019,'X\u2019,'X\u2019,'X\u2019,'X\u2019,'X\u2019},", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0{\u2018o\u2019,'o\u2019,'o\u2019,'o\u2019,'o\u2019,'X\u2019,'X\u2019,'X\u2019},", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\u2018X\u2019,'o\u2019,'X\u2019,'X\u2019,'o\u2019,'o\u2019,'o\u2019,'X\u2019},", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0 {\u2018X\u2019,'o\u2019,'X\u2019,'X\u2019,'o\u2019,'X\u2019,'X\u2019,'o\u2019},", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {\u2018X\u2019,'o\u2019,'X\u2019,'X\u2019,'X\u2019,'X\u2019,'X\u2019,'X\u2019},", "{\u2018X\u2019,'o\u2019,'X\u2019,'X\u2019,'o\u2019,'o\u2019,'o\u2019,'X\u2019},", "\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {\u2018X\u2019,'o\u2019,'o\u2019,'o\u2019,'o\u2019,'X\u2019,'o\u2019,'o\u2019},", "\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\u2018X\u2019,'X\u2019,'X\u2019,'X\u2019,'X\u2019,'X\u2019,'X\u2019,'X\u2019}};", "void FindPath(int X, int Y) {", "\u00a0\u00a0\u00a0 if(X == MAX_SIZE || Y == MAX_SIZE) {", "\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 for(int i = 0; i < MAX_SIZE; i++)", "for(int j = 0; j < MAX_SIZE; j++)", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0printf(\u201c%c%c\u201d, Maze[i][j], j < MAX_SIZE-1 ? \u2018 \u2018 : \u2018\\n\u2019);", "}else for(int k = 0; k < 4; k++)", "if(X >= 0 && Y >= 0 && Y < MAX_SIZE && X < MAX_SIZE && \u2018o\u2019 == Maze[X][Y]) {", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Maze[X][Y] = \u2018 \u2018;", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 FindPath(X+V[k], Y+H[k]);", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Maze[X][Y] =\u2019o';", "}", "}", "int main(int argc, char* argv[]) {", "\u00a0\u00a0\u00a0 FindPath(1,0);", "}"], "title": "\u5bfb\u627e\u8ff7\u5bab\u7684\u4e00\u6761\u51fa\u8def\uff0co\uff1a\u901a\u8def\uff1b X\uff1a\u969c\u788d"},
{"contents": ["void prim(int m, int n) {", "\u00a0\u00a0\u00a0\u00a0 if(m>n) {", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 while(m%n != 0) n++;", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 m /= n;", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 prim(m, n);", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c%d*\u201d, n);", "\u00a0\u00a0\u00a0\u00a0 }", "}", "int main(int argc, char* argv[]) {", "\u00a0\u00a0\u00a0\u00a0 int n = 435234;", "\u00a0\u00a0\u00a0\u00a0 printf(\u201c%d=\u201d, n);", "\u00a0\u00a0\u00a0\u00a0 prim(n, 2);", "}"], "title": "\u5206\u89e3\u6210\u8d28\u56e0\u6570(\u5982435234=251*17*17*3*2\uff0c\u636e\u8bf4\u662f\u534e\u4e3a\u7b14\u8bd5\u9898)"},
{"contents": ["void find(char *source, char *result, int n) {", "\u00a0\u00a0\u00a0\u00a0 if(n==1) {", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 while(*source)", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 printf(\u201c%s%c\\n\u201d, result, *source++);", "\u00a0\u00a0\u00a0\u00a0 } else {", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int i, j;", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(i=0; source[i] != 0; i++);", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(j=0; result[j] != 0; j++);", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(; i>=n; i\u2013) {", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 result[j] = *source++;", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 result[j+1] = \u2018\\0\u2032;", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 find(source, result, n-1);", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\u00a0\u00a0\u00a0\u00a0 }", "}", "\u00a0", "int main(int argc, char* argv[]) {", "\u00a0\u00a0\u00a0\u00a0 int const n = 3;", "\u00a0\u00a0\u00a0\u00a0 char *source = \u201cABCDE\u201d, result[n+1] = {0};", "\u00a0\u00a0\u00a0\u00a0 if(n>0 && strlen(source)>0 && n<=strlen(source))", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 find(source, result, 3);", "}"], "title": "\u3001\u7ec4\u5408\u95ee\u9898\uff08\u4eceM\u4e2a\u4e0d\u540c\u5b57\u7b26\u4e2d\u4efb\u53d6N\u4e2a\u5b57\u7b26\u7684\u6240\u6709\u7ec4\u5408\uff09"},
{"contents": ["double find(int total, int n) {", "\u00a0\u00a0\u00a0\u00a0 int number, score,\u00a0 average;", "\u00a0\u00a0\u00a0\u00a0 scanf(\u201c%d\u201d, &number);", "\u00a0\u00a0\u00a0\u00a0 if(number != 0) {", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 scanf(\u201c%d\u201d, &score);", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 average = find(total+score, n+1);", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(score >= average)", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c%d:%d\\n\u201d, number, score);", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return average;", "\u00a0\u00a0\u00a0\u00a0 } else {", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201cAverage=%d\\n\u201d, total/n);", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return total/n;", "\u00a0\u00a0\u00a0\u00a0 }", "}", "int main(int argc, char* argv[]) {", "\u00a0\u00a0\u00a0\u00a0 find(0, 0);", "}"], "title": "\u6c42\u9ad8\u4e8e\u5e73\u5747\u5206\u7684\u5b66\u751f\u5b66\u53f7\u53ca\u6210\u7ee9\uff08\u5b66\u53f7\u548c\u6210\u7ee9\u4eba\u5de5\u8f93\u5165\uff09"},
{"contents": ["int find(char *str, int n) {", "\u00a0\u00a0\u00a0\u00a0 if(n<=1) return 1;", "\u00a0\u00a0\u00a0\u00a0 else if(str[0]==str[n-1])\u00a0\u00a0 return find(str+1, n-2);", "\u00a0\u00a0\u00a0\u00a0 else\u00a0\u00a0\u00a0\u00a0 return 0;", "}", "\u00a0", "int main(int argc, char* argv[]) {", "\u00a0\u00a0\u00a0\u00a0 char *str = \u201cabcdedcba\u201d;", "\u00a0\u00a0\u00a0\u00a0 printf(\u201c%s: %s\\n\u201d, str, find(str, strlen(str)) ? \u201cYes\u201d : \u201cNo\u201d);", "}"], "title": "\u9012\u5f52\u5b9e\u73b0\u56de\u6587\u5224\u65ad\uff08\u5982\uff1aabcdedbca\u5c31\u662f\u56de\u6587\uff0c\u5224\u65ad\u4e00\u4e2a\u9762\u8bd5\u8005\u5bf9\u9012\u5f52\u7406\u89e3\u7684\u7b80\u5355\u7a0b\u5e8f\uff09"},
{"contents": ["\u7b54\u6848\uff1a\u53ef\u4ee5\uff0c\u53ef\u4ee5\u7528_onexit \u6ce8\u518c\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u4f1a\u5728main \u4e4b\u540e\u6267\u884cint fn1(void), fn2(void), fn3(void), fn4 (void);", "\nvoid main( void )", "\n{", "\nString str(\u201czhanglin\u201d);", "\n_onexit( fn1 );", "\n_onexit( fn2 );", "\n_onexit( fn3 );", "\n_onexit( fn4 );", "\nprintf( \u201cThis is executed first.\\n\u201d );", "\n}", "\nint fn1()", "\n{", "\nprintf( \u201cnext.\\n\u201d );", "\nreturn 0;", "\n}", "\nint fn2()", "\n{", "\nprintf( \u201cexecuted \u201d );", "\nreturn 0;", "\n}", "\nint fn3()", "\n{", "\nprintf( \u201cis \u201d );", "\nreturn 0;", "\n}", "\nint fn4()", "\n{", "\nprintf( \u201cThis \u201d );", "\nreturn 0;", "\n}", "\nThe _onexit function is passed the address of a function (func) to be called when the program terminates normally. Successive calls to _onexit create a register of functions that are executed in LIFO (last-in-first-out) order. The functions passed to _onexit cannot take parameters."], "title": "main \u4e3b\u51fd\u6570\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u662f\u5426\u53ef\u80fd\u4f1a\u518d\u6267\u884c\u4e00\u6bb5\u4ee3\u7801\uff0c\u7ed9\u51fa\u8bf4\u660e\uff1f"},
{"contents": ["void GetMemory(char *p)", "\n{", "\n\u00a0\u00a0 p = (char *)malloc(100);", "\n}", "\nvoid Test(void)", "\n{", "\n\u00a0\u00a0\u00a0 char *str = NULL;", "\n\u00a0\u00a0\u00a0 GetMemory(str);", "\n\u00a0\u00a0\u00a0 strcpy(str, \u201chello world\u201d);", "\n\u00a0\u00a0\u00a0 printf(str);", "\n}", "\n\u8bf7\u95ee\u8fd0\u884cTest \u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n\u7b54\uff1a\u7a0b\u5e8f\u5d29\u6e83\u3002", "\n\u56e0\u4e3aGetMemory \u5e76\u4e0d\u80fd\u4f20\u9012\u52a8\u6001\u5185\u5b58\uff0c", "\nTest \u51fd\u6570\u4e2d\u7684 str \u4e00\u76f4\u90fd\u662f NULL\u3002", "\nstrcpy(str, \u201chello world\u201d);\u5c06\u4f7f\u7a0b\u5e8f\u5d29", "\n\u6e83\u3002", "\nchar *GetMemory(void)", "\n{", "\n\u00a0\u00a0\u00a0 char p[] = \u201chello world\u201d;", "\n\u00a0\u00a0\u00a0 return p;", "\n}", "\nvoid Test(void)", "\n{", "\n\u00a0\u00a0\u00a0 char *str = NULL;", "\n\u00a0\u00a0\u00a0 str = GetMemory();", "\n\u00a0\u00a0\u00a0 printf(str);", "\n}", "\n\u8bf7\u95ee\u8fd0\u884cTest \u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n\u7b54\uff1a\u53ef\u80fd\u662f\u4e71\u7801\u3002", "\n\u56e0\u4e3aGetMemory \u8fd4\u56de\u7684\u662f\u6307\u5411\u201c\u6808\u5185\u5b58\u201d", "\n\u7684\u6307\u9488\uff0c\u8be5\u6307\u9488\u7684\u5730\u5740\u4e0d\u662f NULL\uff0c\u4f46\u5176\u539f", "\n\u73b0\u7684\u5185\u5bb9\u5df2\u7ecf\u88ab\u6e05\u9664\uff0c\u65b0\u5185\u5bb9\u4e0d\u53ef\u77e5\u3002", "\nvoid GetMemory2(char **p, int num)", "\n{", "\n\u00a0\u00a0\u00a0 *p = (char *)malloc(num);", "\n}", "\nvoid Test(void)", "\n{", "\n\u00a0\u00a0\u00a0 char *str = NULL;", "\n\u00a0\u00a0\u00a0 GetMemory(&str, 100);", "\n\u00a0\u00a0\u00a0 strcpy(str, \u201chello\u201d);", "\n\u00a0\u00a0\u00a0 printf(str);", "\n}", "\n\u8bf7\u95ee\u8fd0\u884cTest \u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n\u7b54\uff1a\uff081\uff09\u80fd\u591f\u8f93\u51fahello\uff1b\uff082\uff09\u5185\u5b58\u6cc4\u6f0f", "void Test(void)", "\n{", "\n\u00a0\u00a0\u00a0 char *str = (char *) malloc(100);", "\n\u00a0\u00a0\u00a0 strcpy(str, \u201chello\u201d);", "\n\u00a0\u00a0\u00a0 free(str);", "\n\u00a0\u00a0\u00a0 if(str != NULL)", "\n\u00a0\u00a0\u00a0 {", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 strcpy(str, \u201cworld\u201d);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(str);", "\n\u00a0\u00a0\u00a0 }", "\n}", "\n\u8bf7\u95ee\u8fd0\u884cTest \u51fd\u6570\u4f1a\u6709\u4ec0\u4e48\u6837\u7684\u7ed3\u679c\uff1f", "\n\u7b54\uff1a\u7be1\u6539\u52a8\u6001\u5185\u5b58\u533a\u7684\u5185\u5bb9\uff0c\u540e\u679c\u96be\u4ee5\u9884", "\n\u6599\uff0c\u975e\u5e38\u5371\u9669\u3002", "\n\u56e0\u4e3afree(str);\u4e4b\u540e\uff0cstr \u6210\u4e3a\u91ce\u6307\u9488\uff0c", "\nif(str != NULL)\u8bed\u53e5\u4e0d\u8d77\u4f5c\u7528\u3002"], "title": "C C++\u6709\u5173\u5185\u5b58\u7684\u601d\u8003\u9898"},
{"contents": ["#include \u201cstdio.h\u201d", "\nmain()", "\n{", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 FILE *fp;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 char ch,filename[10];", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 scanf(\u201c%s\u201d,filename);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if((fp=fopen(filename,\u201dw\u201d)==NULL)", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {", "\nprintf(\u201ccann\u2019t open file\\n\u201d);", "\nexit(0);", "\n\u00a0 }", "\n\u00a0 ch=getchar();", "\n\u00a0 while(ch!=\u2019#')", "\n\u00a0 {", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 fputc(ch,fp);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 putchar(ch);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ch=getchar();", "\n\u00a0 }", "\n\u00a0 fclose(fp);", "\n}"], "title": "\u7528C\u8bed\u8a00\u5b9e\u73b0\u6587\u4ef6\u8bfb\u5199\u64cd\u4f5c"},
{"contents": ["1\u3001\u5934\u6587\u4ef6\u4e2d\u7684 ifndef/define/endif \u5e72\u4ec0\u4e48\u7528\uff1f\uff085 \u5206\uff09", "\n\u7b54\uff1a\u9632\u6b62\u8be5\u5934\u6587\u4ef6\u88ab\u91cd\u590d\u5f15\u7528\u3002", "2\u3001#include <filename.h> \u548c #include \u201cfilename.h\u201d \u6709\u4ec0\u4e48\u533a\u522b\uff1f\uff085 \u5206\uff09", "\n\u7b54\uff1a\u5bf9\u4e8e#include <filename.h> \uff0c\u7f16\u8bd1\u5668\u4ece\u6807\u51c6\u5e93\u8def\u5f84\u5f00\u59cb\u641c\u7d22 filename.h", "\n\u5bf9\u4e8e#include \u201cfilename.h\u201d \uff0c\u7f16\u8bd1\u5668\u4ece\u7528\u6237\u7684\u5de5\u4f5c\u8def\u5f84\u5f00\u59cb\u641c\u7d22 filename.h", "3\u3001const \u6709\u4ec0\u4e48\u7528\u9014\uff1f\uff08\u8bf7\u81f3\u5c11\u8bf4\u660e\u4e24\u79cd\uff09\uff085 \u5206\uff09", "\n\u7b54\uff1a\uff081\uff09\u53ef\u4ee5\u5b9a\u4e49 const \u5e38\u91cf\uff0c\uff082\uff09const \u53ef\u4ee5\u4fee\u9970\u51fd\u6570\u7684\u53c2\u6570\u3001\u8fd4\u56de\u503c\uff0c\u751a\u81f3\u51fd\u6570\u7684\u5b9a\u4e49\u4f53\u3002\u88abconst \u4fee\u9970\u7684\u4e1c\u897f\u90fd\u53d7\u5230\u5f3a\u5236\u4fdd\u62a4\uff0c\u53ef\u4ee5\u9884\u9632\u610f\u5916\u7684\u53d8\u52a8\uff0c\u80fd\u63d0\u9ad8\u7a0b\u5e8f\u7684\u5065\u58ee\u6027\u3002", "\n4\u3001\u5728C++ \u7a0b\u5e8f\u4e2d\u8c03\u7528\u88ab C \u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u7684\u51fd\u6570\uff0c\u4e3a\u4ec0\u4e48\u8981\u52a0 extern \u201cC\u201d\uff1f \uff085 \u5206\uff09", "\n\u7b54\uff1aC++\u8bed\u8a00\u652f\u6301\u51fd\u6570\u91cd\u8f7d\uff0cC \u8bed\u8a00\u4e0d\u652f\u6301\u51fd\u6570\u91cd\u8f7d\u3002\u51fd\u6570\u88abC++\u7f16\u8bd1\u540e\u5728\u5e93\u4e2d\u7684\u540d\u5b57", "\n\u4e0eC \u8bed\u8a00\u7684\u4e0d\u540c\u3002\u5047\u8bbe\u67d0\u4e2a\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a void foo(int x, int y);\u8be5\u51fd\u6570\u88abC \u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u5728\u5e93\u4e2d\u7684\u540d\u5b57\u4e3a_foo \uff0c \u800cC++\u7f16\u8bd1\u5668\u5219\u4f1a\u4ea7\u751f\u50cf_foo_int_int \u4e4b\u7c7b\u7684\u540d\u5b57\u3002C++\u63d0\u4f9b\u4e86C \u8fde\u63a5\u4ea4\u6362\u6307\u5b9a\u7b26\u53f7extern\u201cC\u201d\u6765\u89e3\u51b3\u540d\u5b57\u5339\u914d\u95ee\u9898\u3002", "\n5\u3001\u8bf7\u7b80\u8ff0\u4ee5\u4e0b\u4e24\u4e2afor \u5faa\u73af\u7684\u4f18\u7f3a\u70b9\uff085 \u5206\uff09", "\nfor (i=0; i<N; i++)", "\n{", "\n\u00a0\u00a0\u00a0 if (condition)", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 DoSomething();", "\n\u00a0\u00a0\u00a0 else", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 DoOtherthing();", "\n}", "\nif (condition)", "\n{", "\n\u00a0\u00a0\u00a0 for (i=0; i<N; i++)", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 DoSomething();", "\n}", "\nelse", "\n{", "\n\u00a0\u00a0\u00a0 for (i=0; i<N; i++)", "\n\u00a0\u00a0\u00a0 DoOtherthing();", "\n}", "\n\u4f18\u70b9\uff1a\u7a0b\u5e8f\u7b80\u6d01", "\n\u7f3a\u70b9\uff1a\u591a\u6267\u884c\u4e86N-1 \u6b21\u903b\u8f91\u5224\u65ad\uff0c\u5e76\u4e14", "\n\u6253\u65ad\u4e86\u5faa\u73af\u201c\u6d41\u6c34\u7ebf\u201d\u4f5c\u4e1a\uff0c\u4f7f\u5f97\u7f16\u8bd1", "\n\u5668\u4e0d\u80fd\u5bf9\u5faa\u73af\u8fdb\u884c\u4f18\u5316\u5904\u7406\uff0c\u964d\u4f4e\u4e86\u6548", "\n\u7387\u3002", "\n\u4f18\u70b9\uff1a\u5faa\u73af\u7684\u6548\u7387\u9ad8", "\n\u7f3a\u70b9\uff1a\u7a0b\u5e8f\u4e0d\u7b80\u6d01"], "title": "C\uff0cC++\u7684\u51e0\u4e2a\u9762\u8bd5\u9898\u5c0f\u96c6"},
{"contents": ["\u7b54\u6848\uff1a\u5168\u5c40\u5bf9\u8c61\u7684\u6784\u9020\u51fd\u6570\u4f1a\u5728main \u51fd\u6570\u4e4b\u524d\u6267\u884c\u3002"], "title": "main \u51fd\u6570\u6267\u884c\u4ee5\u524d\uff0c\u8fd8\u4f1a\u6267\u884c\u4ec0\u4e48\u4ee3\u7801\uff1f"},
{"contents": ["\u4ee3\u7801\u5982\u4e0b\uff1a", "long int fact(int n)", "\n{", "\n\u00a0\u00a0\u00a0 int x;", "\n\u00a0\u00a0\u00a0 long int y;", "\n\u00a0\u00a0\u00a0 if(n<0)\u00a0\u00a0", "\n\u00a0\u00a0\u00a0 {", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201cerror!\u201d);", "\n\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0\u00a0 if(n==0)", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return 1;", "\n\u00a0\u00a0\u00a0 x=n-1;", "\n\u00a0\u00a0\u00a0 y=fact(x);", "\n\u00a0\u00a0\u00a0 return (n*y);", "\n}"], "title": "\u7f16\u5199\u7528C\u8bed\u8a00\u5b9e\u73b0\u7684\u6c42n\u9636\u9636\u4e58\u95ee\u9898\u7684\u9012\u5f52\u7b97\u6cd5"},
{"contents": ["1\u3001\u4f5c\u4e3a\u5f00\u53d1\u56e2\u961f\u7684\u4e00\u5458\uff0c\u4f60\u9700\u8981\u5b9e\u73b0\u4e00\u4e9b\u5e93\u51fd\u6570\u63d0\u4f9b\u7ed9\u5176\u4ed6\u4eba\u4f7f\u7528\u3002", "\n\u5047\u8bbe\u4f60\u5b9e\u73b0\u7684\u4e00\u4e2a\u51fd\u6570\u539f\u578b\u5982\u4e0b\uff1a\u00a0\u00a0", "\n\u00a0\u00a0int\u00a0\u00a0 DoSomeThing(char*\u00a0\u00a0 pParam)\u00a0\u00a0", "\n\u00a0\u00a0{\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u2026\u00a0\u00a0", "\n\u00a0\u00a0}\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0", "\n\u00a0\u00a02\u3001\u4e0b\u9762\u7684\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1f\u00a0\u00a0", "\n\u00a0\u00a0char\u00a0\u00a0 *_strdup(\u00a0\u00a0 const\u00a0\u00a0 char\u00a0\u00a0 *strSource\u00a0\u00a0 )\u00a0\u00a0", "\n\u00a0\u00a0{\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0static\u00a0\u00a0 char\u00a0\u00a0 str[MAX_STR_LEN];\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0strcpy(str,\u00a0\u00a0 strSource);\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0return\u00a0\u00a0 str;\u00a0\u00a0", "\n\u00a0\u00a0}\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0", "\n\u00a0\u00a03\u3001\u5b9e\u73b0\u4e00\u4e2a\u51fd\u6570\uff1a\u53d6\u51fa\u4e00\u4e2a\u5168\u8def\u5f84\u6587\u4ef6\u540d\u4e2d\u7684\u5168\u8def\u5f84\u3002\u00a0\u00a0", "\n\u00a0\u00a0/*\u00a0\u00a0 [in]\u00a0\u00a0\u00a0\u00a0 pszFullPath\u00a0\u00a0 \u5168\u8def\u5f84\u6587\u4ef6\u540d\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0[out]\u00a0\u00a0 pszPathName\u00a0\u00a0 \u63a5\u6536\u5168\u8def\u5f84\u7684\u7f13\u51b2\u533a\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0[out]\u00a0\u00a0 nCount\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u7f13\u51b2\u533a\u5927\u5c0f\u00a0\u00a0", "\n\u00a0\u00a0*/\u00a0\u00a0", "\n\u00a0\u00a0int\u00a0\u00a0 ExtractFilePath(char*\u00a0\u00a0 pszFullPath,\u00a0\u00a0 char*\u00a0\u00a0 pszPathName,\u00a0\u00a0 int\u00a0\u00a0 nCount)\u00a0\u00a0", "\n\u00a0\u00a0{\u00a0\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u2026\u00a0\u00a0", "\n\u00a0\u00a0}"], "title": "\u5916\u4f01C\u8bed\u8a00\u7b14\u8bd5\u9898"},
{"contents": ["14\u00a0\u00a0\u00a0 \u7528\u9012\u5f52\u65b9\u6cd5\uff0c\u6c42\uff1a", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 0,\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 n=0", "fib(n)=\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1,\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 n=1", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 fib(n-2)+fib(n-1),\u00a0 n>1", "\u00a0", "\u89e3\uff1a\u00a0\u00a0 #include <stdio.h>", "long\u00a0 fib(int n)", "{\u00a0", "\u00a0\u00a0 if(n= =0)", "\u00a0\u00a0\u00a0\u00a0\u00a0 return(0);", "\u00a0\u00a0\u00a0 else if(n= =1)", "\u00a0\u00a0\u00a0\u00a0\u00a0 return(1);", "\u00a0\u00a0\u00a0\u00a0 else", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return(fib(n-2)+fib(n-1));", "\u00a0\u00a0\u00a0\u00a0 }", "main()", "{", "\u00a0\u00a0 printf(\u201c%ld\\n\u201d,fib(6));", "}", "15\u00a0\u00a0\u00a0 \u7f16\u4e00\u51fd\u6570\uff0c\u8ba1\u7b97\u5e76\u8f93\u51faK\u4ee5\u5185\u6700\u5927\u768410 \u4e2a\u80fd\u88ab13\u621617\u6574\u9664\u7684\u81ea\u7136\u6570\u4e4b\u548c\u3002\u5176\u4e2d\uff0cK \u7684\u503c\u7531\u4e3b\u51fd\u6570\u4f20\u5165\u3002", "\u89e3\uff1a\u00a0\u00a0 #include <conio.h>", "#include <stdio.h>", "int fun(int k)", "{ int m=0,mc=0,j,n;", "\u00a0\u00a0 while((k>=2)&&(mc<10))", "\u00a0\u00a0\u00a0 {", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if((k%13= =0)||(k%17)=0))", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {m=m+k;mc++;}", "\u00a0\u00a0\u00a0\u00a0\u00a0 k- -;", "\u00a0\u00a0 }", "return m;", "}", "main()", "{\u00a0 int d;", "\u00a0 scanf(\u201c%d\u201d,&d);", "\u00a0 clrscr();", "\u00a0 printf(\u201c%d\\n\u201d,fun(d));", "}", "19\u00a0 \u7f16\u4e00\u51fd\u6570\uff0c\u6c42P\u7684\u503c\u3002\u5176\u4e2d\uff1ap=m!/n!(m-n)!", "\u89e3\uff1a\u00a0 #include <stdio.h>", "long jc(int m)", "{\u00a0", "\u00a0 long s=1;", "\u00a0 int i;", "\u00a0 for(i=1;i<=m;i++)", "\u00a0\u00a0\u00a0 s=s*i;", "return s;", "}", "float fun(int m, int n)", "{", "\u00a0\u00a0 float p;", "\u00a0\u00a0 p=1.0*jc(m)/jc(n)/jc(m-n);", "\u00a0\u00a0 return p;", "}", "main()", "{\u00a0", "\u00a0\u00a0 int i,j;", "\u00a0\u00a0 scanf(\u201c%d%d\u201d,&i,&j);", "\u00a0\u00a0 printf(\u201cp=%f\\n\u201d,fun(i,j));", "}"], "title": "C\u8bed\u8a00\u9762\u8bd5\u5927\u5168\u7cfb\u5217\u5e26\u9762\u8bd5\u9898\u7b54\u6848(30)"},
{"contents": ["14\u00a0\u00a0\u00a0 \u00a0\u4e0b\u9762\u662f\u4e00\u4e2a5*5\u9636\u7684\u87ba\u65cb\u65b9\u9635\u3002\u7f16\u7a0b\u6253\u5370\u51fa\u6b64\u5f62\u5f0f\u7684n*n(n<10)\u9636\u7684\u65b9\u9635\uff08\u987a\u65f6\u9488\u65b9\u5411\u65cb\u8fdb\uff09\u3002", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1\u00a0 2\u00a0 3\u00a0 4\u00a0 5", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 16 17 18 19 6", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 15 24 25 20 7", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 14 23 22 21 8", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 13 12 11 10 9", "\u89e3\uff1a\u00a0\u00a0 main()", "{", "\u00a0 int\u00a0 a[10][10],i,j,m,n,k=0;", "\u00a0 printf(\u201cEnter n(n<10):\\n\u201d);", "\u00a0\u00a0 scanf(\u201c%d\u201d,&n);", "\u00a0\u00a0 if(n%2= =0) m=n/2;", "\u00a0\u00a0\u00a0 else m=n/2+1;", "\u00a0\u00a0\u00a0\u00a0 for(i=0;i<m;i++)", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {for(j=i;j<n-i;j++)", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {k++;a[i][j]=k;}", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {for(j=i+1;j<n-i;j++)", "\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{k++;a[j][n-i-1]=k;}", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {for(j=n-i-2;j>=i;j\u2013)", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {k++;a[n-i-1][j]=k;}", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {for(j=n-i-2;j>=i+1;j\u2013)", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {k++; a[j][i]=k;}", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\u00a0\u00a0\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(i=0;i<n;i++)", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {for(j=0;j<n;j++)", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c%5d\u201d,a[i][j]);", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c\\n\u201d);", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\u00a0\u00a0\u00a0 }", "15\u00a0\u00a0\u00a0 \u00a0\u00a0\u952e\u76d8\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u6c11\u7528\u6298\u534a\u67e5\u627e\u6cd5\u627e\u51fa\u8be5\u5b57\u7b26\u5728\u5df2\u6392\u5e8f\u7684\u5b57\u7b26a \u4e2d\u7684\u4f4d\u7f6e\u3002\u82e5\u8be5\u5b57\u7b26\u4e0d\u5728a\u4e2d\uff0c\u5219\u6253\u5370Can\u2019t Search!.", "\u89e3\uff1a\u00a0\u00a0\u00a0 #define m 10", "#include\u00a0 <stdio.h>", "main()", "{", "\u00a0\u00a0 char c,a[m];", "int i,top,bot,mid;", "printf(\u201cTnput a string:\\n\u201d);", "gets(a);", "printf(\u201cTnput a character\\n\u201d);", "scanf(\u201c%c\u201d,&c);", "printf(\u201cc=\\\u2019%c\\\u2019\\n\u201d,c);", "for(top=0,bot=M-1; top<=bot;)", "\u00a0 { mid=(top+bot)/2;", "\u00a0\u00a0\u00a0\u00a0 if(c= =a[mid])", "\u00a0\u00a0\u00a0\u00a0\u00a0 {printf{\u201cThe position is %d\\n\u201d,mid+1};", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 break;", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "else\u00a0 if(c>a[mid]) top=mid+1;", "\u00a0\u00a0\u00a0\u00a0 else bot=mid-1;", "}", "\u00a0 if (top>bot)\u00a0 printf(\u201cCan\u2019t\u00a0 Search!\u201d);", "}", "16\u00a0\u00a0\u00a0 \u7528\u51fd\u6570\u5b9e\u73b0\uff1a\u4ece\u952e\u76d8\u8f93\u5165\u4e00\u4e2a\u6574\u6570\uff0c\u5224\u65ad\u5176\u662f\u5426\u4e3a\u7d20\u6570\uff1b\u82e5\u662f\u7d20\u6570\uff0c\u5219\u6253\u5370YES\uff0c\u5426\u5219\uff0c\u6253\u5370NO\u3002", "\u89e3\uff1a\u00a0\u00a0 #include <stdio.h>", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 main()", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int x;", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c\u8f93\u5165\u4e00\u4e2a\u6574\u6570\u7ed9:\u201d);", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 scanf(\u201c%d\u201d,&x);", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(prime(x))\u00a0 printf(\u201cYES\\n\u201d);", "else printf(\u201cNo\\n\u201d);", "}", "prime(int\u00a0 a)", "{", "\u00a0\u00a0 int e,i,yes;", "yes=1;e=a/2;", "i=2;", "while((i<=e)&&yes)", "\u00a0 if((a%i)= =0) yes=0;", "\u00a0\u00a0 else i++;", "\u00a0return\u00a0 yes;", "}"], "title": "C\u8bed\u8a00\u9762\u8bd5\u5927\u5168\u7cfb\u5217\u5e26\u9762\u8bd5\u9898\u7b54\u6848(29)"},
{"contents": ["\u89e3\uff1a #include \u201cstdio.h\u201d", "main()", "{", "\u00a0 int I,j,ge,shi,bai;", "printf(\u201c\\n\u6240\u6709\u7684\u6c34\u4ed9\u82b1\u6570\u6709:\u201d);", "\u00a0for(I=101;I<100;I++)", "\u00a0 { j=i;", "\u00a0\u00a0 ge=j%10;", "\u00a0\u00a0 j=j%10;", "\u00a0\u00a0 shi=j%10;", "j=j/10;", "bai=j;", "if(i= =ge*ge*ge+shi*shi*shi+bai*bai*bai)", "\u00a0 printf(\u201c\\n%d\u201d,I);", "}", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\u89e3\uff1a\u00a0 #include \u201cstdio.h\u201d", "#include \u201cmath.h\u201d", "main()", "{", "\u00a0 int I,j,k,sum;", "printf(\u201c\\n1000\u4ee5\u5185\u7684\u6240\u6709\u5b8c\u6570\u6709;\u201d);", "for(i=2; i<1000;i++)", "{\u00a0 sum=1;", "k=i/2;", "for(j=2; j<=k;j++)", "\u00a0if(i%j = =0) sum=sum+j;", "if(i= =sum) printf(\u201c\\n%d\u201d,I);", "}", "}", "\u89e3\uff1a\u00a0 #include \u201cstdio.h\u201d", "main()", "{", "\u00a0\u00a0 int year,I=0;", "printf(\u201c\\n\u4ece1000\u5e74\u81f3\u516c\u51432000\u5e74\u4e2d\u95f0\u5e74\u6709:\\n\u201d);", "for(year=1000;year<=2000;)", "{", "\u00a0 if((year%4= =0&&year%100!=0)||year%400= =0)", "\u00a0\u00a0 {", "\u00a0\u00a0\u00a0 printf(\u201c\\t%d\u201d,year);", "\u00a0\u00a0\u00a0 i++;", "\u00a0\u00a0\u00a0 if(i%3= =0) printf(\u201c\\n\u201d);", "\u00a0\u00a0\u00a0 }", "year++;", "}\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\u89e3\uff1a\u00a0 main()", "{", "\u00a0 int\u00a0 i,j,a[2][3]={2,4,6,8,10,12};", "\u00a0\u00a0\u00a0 printf(\u201cThe original array is:\\n\u201d);", "for (i=0; i<2;i++)", "\u00a0 { for(j=0;j<3;j++)", "\u00a0\u00a0\u00a0\u00a0 printf(\u201c%4d\u201d,a[I][j]);", "\u00a0\u00a0 \u00a0\u00a0printf(\u201c\\n\u201d);", "\u00a0\u00a0\u00a0\u00a0 }", "\u00a0 printf(\u201c\\nthe reault is:\\n\u201d);", "for(i=0; i<3;i++)", "\u00a0 {for(j=0;j<2;j++)", "\u00a0\u00a0\u00a0\u00a0 printf(\u201c%4d\u201d,a[j][i]);", "\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c\\n\u201d);", "}", "}", "13\uff0e\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u901a\u8fc7\u5faa\u73af\u6309\u884c\u987a\u5e8f\u4e3a\u4e00\u4e2a5*5\u7684\u4e8c\u7ef4\u6570\u7ec4a\u8d4b1~25\u7684\u81ea\u7136\u6570\uff0c\u7136\u540e\u8f93\u51fa\u8be5\u6570\u7ec4\u7684\u4e0b\u4e09\u89d2\u77e9\u9635.", "\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1 2 3 4 50 \u00a0\u00a0 0 0 0 0 0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 6 7 8 9 10\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 6 0 0 0 0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 11 12 13 14 15\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 11 12\u00a0 0\u00a0 0\u00a0 0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 16 17 18 19 20\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 16 17\u00a0 18\u00a0 0\u00a0 0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 21 22 23 24 25\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 21 22\u00a0 23\u00a0 24 0", "\u89e3\uff1a\u00a0\u00a0 main()", "{ int a[5][5],I,j,n=1;", "\u00a0for(i=0; i<5;i++)", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(j=0; j<5;j++)", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 a[i][j]=n++;", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201cThe result is \\n\u201d);", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for( i=0; i<5; i++)", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {for(j=0;j<5;j++)", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(j>i)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {a[i][j]=0;\u00a0 printf(\u201c%4d\u201d,a[i][j]);}", "\u00a0\u00a0\u00a0\u00a0 \u00a0else printf(\u201c%4d\u201d,a[i][j]);", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c\\n\u201d);", "}", "}"], "title": "C\u8bed\u8a00\u9762\u8bd5\u5927\u5168\u7cfb\u5217\u5e26\u9762\u8bd5\u9898\u7b54\u6848(28)"},
{"contents": ["5.\u00a0\u00a0 \u7ed9\u51fa\u4e00\u4e2a\u4e0d\u591a\u4e8e5\u4f4d\u7684\u6b63\u6574\u6570\uff0c\u6c42\u51fa\u5b83\u662f\u51e0\u4f4d\u6570\uff0c\u5206\u522b\u6253\u5370\u51fa\u6bcf\u4e00\u4f4d\u6570\u5b57\uff0c\u7136\u540e\u518d\u6309\u9006\u5e8f\u6253\u5370\u51fa\u5404\u4f4d\u6570\u5b57\u3002", "\n\u89e3\uff1a\u00a0\u00a0\u00a0 #include \u201cstdio.h\u201d", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 main()", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 unsigned x,m,n=0,w=0;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 unsigned ge=0,shi=0,bai=0,qian=0,wan=0;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c\u8bf7\u8f93\u5165\u4e00\u4e2a\u6b63\u6574\u6570:\u201d);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 scanf(\u201c%u\u201d,&x);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 m=x;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ge=m%10; m=m/10;w=1;n=ge;", "\nif(m) {shi=m%10;m=m/10;w=2;n=n*10+shi;", "\nif(m)\u00a0 {bai=m%10;m=m/10;w=3;n=n*10+bai;", "\nif(m)\u00a0\u00a0 {qian=m%10;m=m/1;w=4;n=n*10+qian;", "\nif(m)\u00a0\u00a0\u00a0 {wan=m;w=5;n=n*10+wan;}", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0 }", "\nprintf(\u201c\\n%u\u4e3a%u\u4f4d\u6570.\u201d,w);", "\nprintf(\u201c\\n\u6b63\u6574\u6570\u7684\u539f\u5e8f\u4e3a\uff1a%u\u201d,x);", "\nprintf(\u201c\\n\u6b63\u6574\u6570\u7684\u9006\u5e8f\u4e3a\uff1a%u\u201d,n);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n6.\u00a0\u7f16\u5199\u7a0b\u5e8f\uff0c\u8f93\u5165\u4e00\u4f4d\u5b66\u751f\u7684\u751f\u65e5\uff0c\u5e76\u8f93\u5165\u5f53\u524d\u7684\u65e5\u671f\uff0c\u8f93\u51fa\u8be5\u751f\u7684\u5b9e\u8db3\u5e74\u9f84\u3002", "\n\u89e3\uff1a\u00a0\u00a0 #include \u201cstdio.h\u201d", "\nmain()", "\n{int sy,sm,sd,cy,cm,cd;", "\n\u00a0\u00a0 printf(\u201c\\n\u8bf7\u8f93\u5165\u5b66\u751f\u7684\u751f\u65e5(\u5e74:\u6708:\u65e5):\u201d);", "\n\u00a0\u00a0 scanf(\u201c%d:%d:%d\u201d,&sy,&sm,&sd);", "\nprintf(\u201c\\n\u8bf7\u8f93\u5165\u5f53\u524d\u7684\u65e5\u671f(\u5e74:\u6708:\u65e5):\u201d);", "\nscanf(\u201c%d%d%d\u201d,&cy,&cm,&cd);", "\nif(cm>=sm&cd.=sd)", "\n\u00a0 printf(\u201c\u5b66\u751f\u7684\u5b9e\u8db3\u5e74\u9f84\u662f:%d\u201d,cy-sy);", "\nelse printf(\u201c\u5b66\u751f\u7684\u5b9e\u8db3\u5e74\u9f84\u662f:%d\u201d,cy-sy-1);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n7.\u00a0\u7f16\u5199\u7a0b\u5e8f\uff0c\u8f93\u5165\u4e00\u4e2a\u6574\u6570\uff0c\u6253\u5370\u5b83\u662f\u5947\u6570\u8fd8\u662f\u5076\u6570\u3002", "\n\u89e3\uff1a\u00a0\u00a0\u00a0 #include\u00a0 \u201cstdio.h\u201d", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 main()", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int x;", "\nprintf(\u201c\\n\u8bf7\u8f93\u5165\u4e00\u4e2a\u6574\u6570:\u201d);", "\nscanf(\u201c%d\u201d,&x);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(x%2==0)", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c%d\u662f\u5076\u6570.\u201d,x);", "\nelse", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c%d\u662f\u5947\u6570.\u201d,x);", "\n}", "\n8.\u00a0\u67d0\u4f01\u4e1a\u5229\u6da6\u63d0\u6210\u7684\u89c4\u5219\u5982\u4e0b\uff1a", "\n\uff081\uff09\u00a0\u5229\u6da6\u4f4e\u4e8e\u6216\u7b49\u4e8e10\u4e07\u5143\u7684\uff0c\u53ef\u63d0\u6210\u5956\u91d1%10\uff1b", "\n\uff082\uff09\u00a0\u5229\u6da6\u9ad8\u4e8e10\u4e07\u5143\uff0c\u4f4e\u4e8e20\u4e07\u5143\u65f6\uff0c\u4f4e\u4e8e10\u4e07\u5143\u7684\u90e8\u5206\u6309%10\u63d0\u6210\uff0c\u53e6\u5916\u90e8\u5206\u53ef\u4ee5\u63d0\u62107.5%;", "\n\uff083\uff09\u00a0\u5229\u6da6\u9ad8\u4e8e20\u4e07\u4f4e\u4e8e40\u4e07\u5143\u7684\uff0c\u5176\u4e2d20\u4e07\u5143\u6309\u524d\u9762\u7684\u65b9\u6cd5\u53d1\u653e\uff0c\u53e6\u5916\u7684\u90e8\u5206\u63095%\u63d0\u6210\uff1b", "\n\uff084\uff09\u00a0\u5229\u6da6\u9ad8\u4e8e40\u4e07\u5143\u7684\uff0c40 \u4e07\u5143\u6309\u524d\u9762\u7684\u65b9\u6cd5\u63d0\u6210\uff0c\u9ad8\u4e8e\u90e8\u5206\u63093%\u63d0\u6210\u3002", "\n\u8bf7\u4ece\u952e\u76d8\u8f93\u5165\u5229\u6da6\uff0c\u8f93\u51fa\u5e94\u53d1\u7684\u63d0\u6210\u3002", "\n\u89e3\uff1a\u00a0 /* \u7528if\u8bed\u53e5*/", "\n#include \u201cstdio.h\u201d", "\nmain()", "\n{", "\n\u00a0 int pf; float\u00a0 pr;", "\n\u00a0\u00a0 printf(\u201c\\n\u8bf7\u8f93\u5165\u5229\u6da6\u603b\u6570(\u5355\u4f4d\uff1a\u4e07\u5143):\u201d);", "\n\u00a0\u00a0 scanf(\u201c%d\u201d,&pf);", "\nif(pf<=10)", "\n\u00a0pr=pf*0.10;", "\nelse if(pf<20)", "\n\u00a0pr=10*0.10+(pf-10)*0.075;", "\nelse if(pf<40)", "\n\u00a0pr=10*0.10+10*0.075+(pf-20)*0.05;", "\n\u00a0 else", "\npr=10*0.10+10*0.075+20*0.05+(pf-40)*0.03;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c\\n\u5e94\u53d1\u7684\u5956\u91d1\u662f\uff1a%f\u4e07\u5143.\u201d,pr);", "\n}", "\n/*\u7528switch\u8bed\u53e5*/", "\n\u00a0 #include \u201cstdio.h\u201d", "\nmain()", "\n{", "\n\u00a0\u00a0 int pf; float\u00a0 pr;", "\n\u00a0\u00a0 printf(\u201c\\n\u8bf7\u8f93\u5165\u5229\u6da6\u603b\u6570(\u5355\u4f4d\uff1a\u4e07\u5143):\u201d);", "\n\u00a0\u00a0 scanf(\u201c%d\u201d,&pf);", "\n\u00a0 switch(pf/10)", "\n\u00a0 {", "\n\u00a0\u00a0\u00a0 case 0: pr=pf*0.10; break;", "\ncase1: pr=10*0.10+(pf-10)*0.075; break;", "\ncase2:", "\ncase3: pr=10*0.10+10*0.075+(pf-20)*0.05; break;", "\ndefault: pr=10*0.10+10*0.075+20*0.05+(pf-40)*0.03;", "\n}", "\nprintf(\u201c\\n\u5e94\u53d1\u7684\u5956\u91d1\u662f:%f\u4e07\u5143.\u201d,pr);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }"], "title": "C\u8bed\u8a00\u9762\u8bd5\u5927\u5168\u7cfb\u5217\u5e26\u9762\u8bd5\u9898\u7b54\u6848(27)"},
{"contents": ["\u4e09\u3001\u7f16\u7a0b\u9898", "\n1\uff0e\u00a0\u7f16\u5199\u7a0b\u5e8f\uff0c\u5c06d\u5929h\u5c0f\u65f6m\u5206\u949f\u6362\u7b97\u6210\u5206\u949f\uff0c\u7136\u540e\u8fdb\u884c\u8f93\u51fa\u3002", "\n\u89e3\uff1a#include \u201cstdio.h\u201d", "\nmain()", "\n{\u00a0", "\nint d, h ,m;", "\n\u00a0\u00a0\u00a0 long\u00a0 main;", "\nprintf(\u201c\\n\u8bf7\u8f93\u5165\u5929\u6570\uff0c\u5c0f\u65f6\u548c\u5206\u949f\uff1a\u201d);", "\nscanf(\u201c%d%d%d\u201d,&d,&h,&m);", "\nmin=(long)((d*24+h)*60+m);", "\nprintf(\u201c%d\u5929%d\u5c0f\u65f6%d\u5206\u949f\u6362\u7b97\u4e3a\u5206\u949f\u4e3a:%ld\u201d,d,h,m,min);", "\n}", "\n2\uff0e\u00a0\u7f16\u5199\u7a0b\u5e8f\uff0c\u8f93\u5165\u4e24\u4e2a\u6574\u6570\uff0c\u6c42\u51fa\u5b83\u4eec\u7684\u5546\u6570\u548c\u4f59\u6570\u5e76\u8fdb\u884c\u8f93\u51fa\u3002", "\n\u89e3\uff1a #include \u201cstdio.h\u201d", "\nmain()", "\n{", "\nint x,y;", "\nint shang ,yu;", "\nprintf(\u201c\\n\u8bf7\u8f93\u5165\u4e24\u4e2a\u6574\u6570\uff1a\u201d)\uff1b", "\nscanf(\u201c%d%d\u201d,&x,&y);\u201d", "\nshang=x/y;", "\nyu=x%y;", "\nprintf(\u201c%d%d\u7684\u5546\u4e3a\uff1a%d,\u4f59\u6570\u4e3a%d\u201d,x,y,shang,yu);", "\n}", "\n3.\u00a0\u7f16\u5199\u7a0b\u5e8f\u8bfb\u51653\u4e2a\u53cc\u7cbe\u5ea6\u6570\uff0c\u6c42\u5b83\u4eec\u7684\u5e73\u5747\u503c\uff0c\u5e76\u4fdd\u7559\u6b64\u5e73\u5747\u503c\u5c0f\u6570\u70b9\u4e00\u4f4d\uff0c", "\n\u5bf9\u5c0f\u6570\u70b9\u540e\u7b2c\u4e8c\u4f4d\u8fdb\u884c\u56db\u820d\u4e94\u5165\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002", "\n\u89e3\uff1a\u00a0 #include \u201cstdio.h\u201d", "\nmian()", "\n{", "\n\u00a0\u00a0 double x,y,z;", "\ndouble aver;", "\nlong temp;", "\nprintf(\u201c\\n\u8bf7\u8f93\u5165\u4e09\u4e2a\u53cc\u7cbe\u5ea6\u6570:\u201d);", "\nscanf(\u201c%lf%lf%lf\u201d,&x,&y,&z);", "\naver=(x+y+z)/3;", "\ntemp=aver*10;", "\ntemp=(aver*10-temp)*2+temp;", "\naver=temp/10.0;", "\nprintf(\u201c\\n\u5e73\u5747\u503c\u4e3a:%.1lf\u201d,aver);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n4.\u00a0 \u7f16\u5199\u7a0b\u5e8f\uff0c\u8bfb\u51653\u4e2a\u6574\u6570a\u3001b\u3001c,\u7136\u540e\u4ea4\u6362\u5b83\u4eec\u4e2d\u7684\u6570\uff0c\u628aa\u4e2d\u539f\u6765\u7684\u503c\u7ed9b,\u628ab\u4e2d\u7684\u503c\u7ed9c,\u628ac\u4e2d\u7684\u503c\u7ed9a.", "\n\u00a0\u89e3\uff1a #include \u201cstdio.h\u201d", "\nmain()", "\n{", "\n\u00a0 int a,b,c,temp;", "\nprintf(\u201c\\n\u8bf7\u8f93\u5165\u4e09\u4e2a\u6570\uff1a\u201d);", "\nscanf(\u201c%d%d%d\u201d,&a,&b,&c);", "\nprintf(\u201c\u4ea4\u6362\u4e4b\u524da=%d,b=%d,c=%d\u201d,a,b,c);", "\ntemp=a;", "\na=c;", "\nc=b;", "\nb=temp;", "\nprintf(\u201c\\n\u4ea4\u6362\u4e4b\u540ea=%d,b=%d,c=%d\u201d,a,b,c);", "\n}"], "title": "C\u8bed\u8a00\u9762\u8bd5\u5927\u5168\u7cfb\u5217\u5e26\u9762\u8bd5\u9898\u7b54\u6848(26)"},
{"contents": ["78\uff0e\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5176\u529f\u80fd\u662f\uff1a\u5c06s\u6240\u6307\u5b57\u7b26\u4e32\u4e2dASCII\u503c\u4e3a\u5076\u6570\u7684\u5b57\u7b26\u5220\u9664\uff0c\u4e32\u4e2d\u5269\u4f59\u5b57\u7b26\u5f62\u6210\u4e00\u4e2a\u65b0\u4e32\u653e\u5728t\u6240\u6307\u7684\u6570\u7ec4\u4e2d\u3002", "\u4f8b\u5982\uff0c\u82e5s\u6240\u6307\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u4e3aABCDEFGl2345\uff0c\u5176\u4e2d\u5b57\u7b26B\u7684ASCII\u7801\u503c\u4e3a\u5076\u6570\u3001\u2026\u3001\u5b57\u7b262\u7684ASCII\u7801\u503c\u4e3a\u5076\u6570\u3001\u2026\u90fd\u5e94\u5f53\u5220\u9664\uff0c\u5176\u4ed6\u4f9d\u6b64\u7c7b\u63a8\u3002\u6700\u540et\u6240\u6307\u7684\u6570\u7ec4\u4e2d\u7684\u5185\u5bb9\u5e94\u662fACEGl35\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u4e8e\u8bed\u53e5\u3002", "#include <conio.h>", "#include <stdio.h>", "#include <string.h>", "\u00a0", "void fun( char *s, char t[])", "{", "\u00a0", "}", "\u00a0", "main()", "{", "char s[100], t[100];", "clrscr();", "printf(\u201c\\nPlease enter string S:\u201d);", "scanf(\u201c%s\u201d, s);", "fun(s, t);", "printf(\u201c\\nThe result is :%s\\n\u201d, t);", "}", "\u00a0", "80\uff0e\u7a0b\u5e8f\u5b9a\u4e49\u4e86NxN\u7684\u4e8c\u7ef4\u6570\u7ec4\uff0c\u5e76\u5728\u4e3b\u51fd\u6570\u4e2d\u81ea\u52a8\u8d4b\u503c\u3002\u8bf7\u7f16\u5199\u51fd\u6570fun(int a[][N]\uff0cint n)\uff0c\u8be5\u51fd\u6570\u7684\u529f\u80fd\u662f\uff1a\u4f7f\u6570\u7ec4\u5de6\u4e0b\u534a\u4e09\u89d2\u5143\u7d20\u4e2d\u7684\u503c\u4e58\u4ee5n\u3002\u4f8b\u5982\uff1a\u82e5n\u7684\u503c\u4e3a3\uff0ca\u6570\u7ec4\u4e2d\u7684\u503c\u4e3a\uff1a\uff0c\u5219\u8fd4\u56de\u4e3b\u7a0b\u5e8f\u540ea\u6570\u7ec4\u4e2d\u7684\u503c\u5e94\u4e3a\uff1a\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "#include <conio.h>", "#include <stdlib.h>", "#define N 5", "int\u00a0 fun ( int a[][N]), int n )", "{", "\u00a0", "}", "\u00a0", "main()", "{\u00a0 int a[N][N], n, i, j;", "clrscr();", "printf(\u201c***** The array *****\\n\u201d);", "for ( i=0; i<N; i++)", "{ for(j=0; j<N; j++)", "{a[i][j]=rand()%10; printf(\u201c%4d\u201d,a[i][j]);}", "printf(\u201c\\n\u201d);", "}", "do n = rand()%10 ; while ( n >=3 );", "printf(\u201cn = %4d\\n\u201d, n);", "fun ( a, n );", "printf(\u201c***** THE RESULT *****\\n\u201d);", "for(i=0;i<N;i++)", "{\u00a0 for ( j=0; j<N; j++ ) printf( \u201c%4d\u201d, a[i][j] );", "printf(\u201c\\n\u201d);", "}", "}", "\u00a0", "5\uff0e\u5047\u5b9a\u6574\u6570\u6570\u5217\u4e2d\u7684\u6570\u4e0d\u91cd\u590d\uff0c\u5e76\u5b58\u653e\u5728\u6570\u7ec4\u4e2d\u3002\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u5220\u9664\u6570\u5217\u4e2d\u503c\u4e3aX\u7684\u5143\u7d20\uff0c\u540c\u65f6\u5c06\u5176\u5b83\u5143\u7d20\u524d\u79fb\u3002n\u4e2d\u5b58\u653e\u7684\u662f\u6570\u5217\u4e2d\u5143\u7d20\u7684\u4e2a\u6570\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784\u3002", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <stdio.h>", "#define N 20", "fun(int *a,int n,int x)", "{", "int p=0,i;", "a[n]=x;", "while(x!=a[p])", "{", "p=p+1;", "}", "if(p==n)", "return -1;", "else", "{", "/********found********/", "for(i=p;i<n;i++)", "a[i+1]=a[i];", "return n-1;", "}", "}", "main()", "{", "int w[N]={-3,0,1,5,7,99,10,15,30,90},x,n,i;", "n=10;", "printf(\u201cThe original data:\\n\u201d);", "for(i=0;i<n;i++) printf(\u201c%5d\u201d,w[i]);", "printf(\u201c\\nInput x (to delete):\u201d);", "scanf(\u201c%d\u201d,&x);", "printf(\u201cDelete :%d\\n\u201d,x);", "n=fun(w,n,x);", "if(n==-1)", "printf(\u201c***Not be found!***\\n\\n\u201d);", "else", "{", "printf(\u201cThe data after delete :\\n\u201d);", "for(i=0;i<n;i++)", "printf(\u201c%5d\u201d,w[i]);", "printf(\u201c\\n\\n\u201d);", "}", "}", "\u00a0", "\u00a0", "8\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u5728\u5b57\u7b26\u4e32str\u4e2d\u627e\u51faASCII\u7801\u503c\u6700\u5927\u7684\u5b57\u7b26\uff0c", "\u5c06\u5176\u653e\u5728\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\uff1b\u5e76\u5c06\u8be5\u5b57\u7b26\u524d\u7684\u539f\u5b57\u7b26\u5411\u540e\u987a\u5e8f\u79fb\u52a8\u3002\u4f8b\u5982\uff0c\u8c03\u7528fun\u51fd\u6570\u4e4b\u524d\u7ed9\u5b57\u7b26\u4e32\u8f93\u5165\uff1aABCDeFGH\uff0c\u8c03\u7528\u540e\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u4e3a\uff1aeABCDFGH\u3002", "\u8bf7\u4fee\u6539\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u8ba1\u7b97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u548c\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <stdio.h>", "/********found********/", "fun(char *p)", "{", "char max,*q; int i=0;", "max=p[i];", "while(p[i]!=0)", "{", "if(max<p[i])", "{", "/********found********/", "max=p[i];", "p=q+i;", "}", "i++;", "}", "while(q>p)", "{", "*q=*(q-1);", "q\u2013;", "}", "p[0]=max;", "}", "\u00a0", "main()", "{", "char str[80];", "printf(\u201cEnter a string: \u201c);", "gets(str);", "printf(\u201c\\nThe original string:\u00a0\u00a0 \u201c);", "puts(str);", "fun(str);", "printf(\u201c\\nThe string after moving:\u00a0 \u201c);", "puts(str);", "printf(\u201c\\n\\n\u201d);", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u56db\u5341\u5957\uff09"},
{"contents": ["72\uff0e\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5176\u529f\u80fd\u662f\uff1a\u5c06s\u6240\u6307\u5b57\u7b26\u4e32\u4e2d\u4e0b\u6807\u4e3a\u5076\u6570\u7684\u5b57\u7b26\u5220\u9664\uff0c\u4e32\u4e2d\u5269\u4f59\u5b57\u7b26\u5f62\u6210\u7684\u65b0\u4e32\u653e\u5728t\u6240\u6307\u6570\u7ec4\u4e2d\u3002", "\u4f8b\u5982\uff0c\u5f53s\u6240\u6307\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u4e3aABCDEFGHIJK\uff0c\u5219\u5728t\u6240\u6307\u6570\u7ec4\u4e2d\u7684\u5185\u5bb9\u5e94\u662f\uff0cBDFHJ", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <conio.h>", "#include <stdio.h>", "#include <string.h>", "\u00a0", "void fun( char *s, char t[])", "{", "\u00a0", "}", "\u00a0", "main()", "{", "char s[100], t[100];", "clrscr();", "printf(\u201c\\nPlease enter string S:\u201d);", "scanf(\u201c%s\u201d, s);", "fun(s,t);", "printf(\u201c\\nThe result is :%s\\n\u201d, t);", "}", "\u00a0", "73\uff0e\u5047\u5b9a\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u4e2d\u53ea\u5305\u542b\u5b57\u6bcd\u548c*\u53f7\u3002\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\uff1a\u9664\u4e86\u5b57\u7b26\u4e32\u524d\u5bfc\u548c\u5c3e\u90e8\u7684*\u53f7\u4e4b\u5916\uff0c\u5c06\u4e32\u4e2d\u5176\u4ed6*\u53f7\u5168\u90e8\u5220\u9664\u3002\u5f62\u53c2h\u5df2\u6307\u5411\u5b57\u7b26\u4e32\u4e2d\u7b2c\u2014\u4e2a\u5b57\u6bcd\uff0c\u5f62\u53c2p\u5df2\u6307\u5411\u5b57\u7b26\u4e32\u4e2d\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd\u3002\u5728\u7f16\u5199\u51fd\u6570\u65f6\uff0c\u4e0d\u5f97\u4f7f\u7528C\u8bed\u8a00\u63d0\u4f9b\u7684\u5b57\u7b26\u4e32\u51fd\u6570\u3002", "\u4f8b\u5982\uff0c\u82e5\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u4e3a****A*BC*DEF*G********\uff0c\u5220\u9664\u540e\uff0c\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u5219\u5e94\u5f53\u662f****ABCDEFG********\u3002\u5728\u7f16\u5199\u51fd\u6570\u65f6\uff0c\u4e0d\u5f97\u4f7f\u7528C\u8bed\u8a00\u63d0\u4f9b\u7684\u5b57\u7b26\u4e32\u51fd\u6570\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "#include <conio.h>", "\u00a0", "void fun( char *a, char *h, char *p)", "{", "}", "\u00a0", "main()", "{", "char s[81],*t,*f;", "printf(\u201cEnter a string:\\n\u201d);", "gets(s);", "t=f=s;", "while(*t)", "t++;", "t\u2013;", "while(*t==\u2019*')", "t\u2013;", "while(*f==\u2019*')", "f++;", "fun(s,f,t);", "printf(\u201cThe string after deleted:\\n\u201d);", "puts(s);", "}", "\u00a0", "2\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u9010\u4e2a\u6bd4\u8f83a\u3001b\u4e24\u4e2a\u5b57\u7b26\u4e32\u5bf9\u5e94\u4f4d\u7f6e\u4e2d\u7684\u5b57\u7b26\uff0c\u628aASCII\u503c\u5927\u6216\u76f8\u7b49\u7684\u5b57\u7b26\u4f9d\u6b21\u5b58\u653e\u5230c\u6570\u7ec4\u4e2d\uff0c\u5f62\u6210\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32\u3002\u4f8b\u5982\uff0c\u82e5a\u4e2d\u7684\u5b57\u7b26\u4e32\u4e3a\uff1aaBCDeFgH\uff0cb\u4e2d\u7684\u5b57\u7b26\u4e32\u4e3a\uff1aABcd\uff0c\u5219C\u4e2d\u7684\u5b57\u7b26\u4e32\u5e94\u4e3a\uff1aaBcdeFgH\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784\u3002", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <stdio.h>", "#include <string.h>", "void fun(char *p,char *q,char *c)", "{", "/********found********/", "int k=1;", "/********found********/", "while(*p != *q)", "{", "if(*p<*q)", "c[k]=*q;", "else", "c[k]=*p;", "if(*p)", "p++;", "if(*q)", "q++;", "k++;", "}", "}", "main()", "{", "char a[10]=\u201daBCDeFgH\u201d,b[10]=\u201dABcd\u201d,c[80]={\u2018\\0\u2032};", "fun(a,b,c);", "printf(\u201cThe string a:\u201d);", "puts(a);", "printf(\u201cThe string b:\u201d);", "puts(b);", "printf(\u201cThe result:\u201d);", "puts(c);", "}", "\u00a0", "\u00a0", "3\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u4f9d\u6b21\u53d6\u51fa\u5b57\u7b26\u4e32\u4e2d\u6240\u6709\u6570\u5b57\u5b57\u7b26\uff0c\u5f62\u6210\u65b0\u7684\u5b57\u7b26\u4e32\uff0c\u5e76\u53d6\u4ee3\u539f\u5b57\u7b26\u4e32\u3002", "\u8bf7\u6539\u6b63\u51fd\u6570fun\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <stdio.h>", "#include <conio.h>", "void fun(char *s)", "{", "int i,j;", "/********found********/", "for(i=0,j=0;s[i]!=\u2019\\0\u2032;i++)", "if(s[i]>=\u20190\u2032 && s[i]<=\u20199\u2032)", "s[j]=s[i];", "/********found********/", "s[j]=\u201d\\0\u2033;", "}", "main()", "{", "char item[80];", "clrscr();", "printf(\u201c\\nEnter a string :\u201d);", "gets(item);", "printf(\u201c\\n\\nThe string is : \\%s\\n\u201d,item);", "fun(item);", "printf(\u201c\\n\\nThe string of changing is : \\%s\\n\u201d,item);", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u4e09\u5341\u4e5d\u5957\uff09"},
{"contents": ["65\uff0e\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5176\u529f\u80fd\u662f\uff1a\u5c06\u4e24\u4e2a\u4e24\u4f4d\u6570\u7684\u6b63\u6574\u6570a\u3001b\u5408\u5e76\u5f62\u6210\u4e00\u4e2a\u6574\u6570\u653e\u5728c\u4e2d\u3002\u5408\u5e76\u7684\u65b9\u5f0f\u662f\uff1a\u5c06a\u6570\u7684\u5341\u4f4d\u548c\u4e2a\u4f4d\u6570\u4f9d\u6b21\u653e\u5728c\u6570\u7684\u767e\u4f4d\u548c\u4e2a\u4f4d\u4e0a\uff0cb\u6570\u7684\u5341\u4f4d\u548c\u4e2a\u4f4d\u6570\u4f9d\u6b21\u653e\u5728c\u6570\u7684\u5341\u4f4d\u548c\u5343\u4f4d\u4e0a\u3002", "\u4f8b\u5982\uff0c\u5f53a=45\uff0cb=12\uff0c\u8c03\u7528\u8be5\u51fd\u6570\u540e\uff0cc=2415\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include\u00a0 <conio.h>", "#include\u00a0 <stdio.h>", "\u00a0", "void fun (int\u00a0 a,\u00a0 int\u00a0 b,\u00a0\u00a0 long\u00a0 *c )", "{", "\u00a0", "}", "\u00a0", "main ()", "{", "int\u00a0 a, b;", "long\u00a0 c;", "clrscr ();", "printf (\u201cInput\u00a0 a,\u00a0 b;\u201d);", "scanf (\u201c%d%d\u201d,\u00a0 &a,\u00a0 &b);", "fun (a,\u00a0 b,\u00a0 &c);", "printf (\u201cThe result is :\u00a0 %ld\\n\u201d,\u00a0 c);", "}", "\u00a0", "66\uff0e\u5047\u5b9a\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u4e2d\u53ea\u5305\u542b\u5b57\u6bcd\u548c*\u53f7\u3002\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\uff1a\u5220\u9664\u5b57\u7b26\u4e32\u4e2d\u6240\u6709\u7684*\u53f7\u3002\u5728\u7f16\u5199\u51fd\u6570\u65f6\uff0c\u4e0d\u5f97\u4f7f\u7528C\u8bed\u8a00\u63d0\u4f9b\u7684\u5b57\u7b26\u4e32\u51fd\u6570\u3002", "\u4f8b\u5982\uff0c\u82e5\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u4e3a****A*BC*DEF*G*******\uff0c\u5220\u9664\u540e\uff0c\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u5219\u5e94\u5f53\u662fABCDEFG\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "#include <conio.h>", "\u00a0", "void fun( char *a )", "{", "\u00a0", "}", "\u00a0", "main()", "{", "char s[81];", "printf(\u201cEnter a string:\\n\u201d);", "gets(s);", "fun( s );", "printf(\u201cThe string after deleted:\\n\u201d);", "puts(s);", "}", "\u00a0", "96\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u6c42s\u7684\u503c\u3002\u8bbe", "1", "\u00a0\u00a0\u00a0 \u00a0\u00a04", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a06", "\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0(2k)", "b= \u2014\u2014 \u00d7 \u2014\u2014 \u00d7 \u2014\u2014 \u00d7 \u2026 \u00d7\u00a0 \u2014\u2014\u2014\u2014\u2014", "1\u00d73\u00a0 \u00a0\u00a03\u00d75 \u00a0\u00a0\u00a0\u00a0\u00a05\u00d77\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 (2k-1)x(2k+1)", "\u4f8b\u5982\uff0c\u5f53k\u4e3a10\u65f6\uff0c\u51fd\u6570\u503c\u5e94\u4e3a1.533852\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u7a0b\u5e8f\u80fd\u8f93\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <conio.h>", "#include <stdio.h>", "#include <math.h>", "\u00a0", "/********found********/", "fun(int k)", "{", "int n;", "float s,w,p,q;", "n=1;", "s=1.0;", "while(n<=k)", "{", "w=2.0*n;", "p=w-1.0;", "q=w+1.0;", "s=s*w*w/p/q;", "n++;", "}", "/********found********/", "return s", "}", "\u00a0", "main( )", "{", "clrscr( );", "printf(\u201c%lf\\n\u201d,fun(10));", "}", "\u00a0", "\u00a0", "97\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u8ba1\u7b97", "S=f(-n)+f(-n+1)+\u2026+f(0)+f(1)+f(2)+\u2026+f(n)\u7684\u503c\u3002", "\u4f8b\u5982\uff0c\u5f53n\u4e3a5\u65f6\uff0c\u51fd\u6570\u503c\u5e94\u4e3a10.407143\u3002f(x)\u51fd\u6570\u5b9a\u4e49\u5982\u4e0b\uff1a", "(x+1)\uff0f(x-2)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 x>O", "f(x)=\u00a0\u00a0\u00a0 \u00a0\u00a00 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0x=0\u6216x=2", "(x-1)/(x-2)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 x<O", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u7a0b\u5e8f\u80fd\u8f93\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <conio.h>", "#include <stdio.h>", "#include <math.h>", "\u00a0", "/********found********/", "f(double x)", "{", "if(x==0.0||x==2.0)", "return 0.0;", "else if(x<0.0)", "return (x-1)/(x-2);", "else", "return (x+1)/(x-2);", "}", "\u00a0", "double fun(int n)", "{ int i;double s=0.0,y;", "for(i=-n;i<=n;i++)", "{y=f(1.0*i);s+=y;}", "/********found********/", "return s", "}", "\u00a0", "main( )", "{ clrscr( );", "printf(\u201c%f\\n\u201d,fun(5) );", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u4e09\u5341\u4e03\u5957\uff09"},
{"contents": ["69\uff0e\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\uff1a\u6c42Fibonacci\u6570\u5217\u4e2d\u5927\u4e8et\u7684\u6700\u5c0f\u7684\u4e00\u4e2a\u6570\uff0c\u7ed3\u679c\u7531\u51fd\u6570\u8fd4\u56de\u3002\u5176\u4e2dFibonacci\u6570\u5217F(n)\u7684\u5b9a\u4e49\u4e3a\uff1a", "F(0)=0\uff0cF(1)=1", "F(n)=F(n-1)+F(n-2)", "\u4f8b\u5982\uff1a\u5f53t=1000\u65f6\uff0c\u51fd\u6570\u503c\u4e3a1597\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <conio.h>", "#include <math.h>", "#include <stdio.h>", "\u00a0", "int fun (int t)", "{", "\u00a0", "}", "\u00a0", "main()", "{", "int n;", "clrscr();", "n=1000;", "printf(\u201cn=%d,f=%d\\n\u201d,n,fun(n));", "}", "\u00a0", "71\uff0e\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5176\u529f\u80fd\u662f\uff1a\u5c06\u4e24\u4e2a\u4e24\u4f4d\u6570\u7684\u6b63\u6574\u6570a\u3001b\u5408\u5e76\u5f62\u6210\u4e00\u4e2a\u6574\u6570\u653e\u5728c\u4e2d\u3002\u5408\u5e76\u7684\u65b9\u5f0f\u662f\uff1a\u5c06a\u6570\u7684\u5341\u4f4d\u548c\u4e2a\u4f4d\u6570\u4f9d\u6b21\u653e\u5728c\u6570\u7684\u5341\u4f4d\u548c\u5343\u4f4d\u4e0a\uff0cb\u6570\u7684\u5341\u4f4d\u548c\u4e2a\u4f4d\u6570\u4f9d\u6b21\u653e\u5728c\u6570\u7684\u767e\u4f4d\u548c\u4e2a\u4f4d\u4e0a\u3002", "\u4f8b\u5982\uff0c\u5f53a=45\uff0cb=12\uff0c\u8c03\u7528\u8be5\u51fd\u6570\u540e\uff0cc=5142\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <conio.h>", "#include <stdio.h>", "\u00a0", "void fun(int a, int b, long *c)", "{", "}", "\u00a0", "main()", "{", "int a,b;", "long c;", "clrscr();", "printf(\u201d Input a, b: \u201c);", "scanf(\u201c%d%d\u201d, &a,&b);", "fun(a,b,&c);", "printf(\u201d The result is :%ld\\n\u201d, c);", "}", "\u00a0", "98\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u8ba1\u7b97\u51fd\u6570F(x\uff0cy\uff0cz)=(x+y)\uff0f(x-y)+(z+y)\uff0f(z-y)\u7684\u503c\u3002\u5176\u4e2dx\u548cy\u7684\u503c\u4e0d\u7b49\uff0cz\u548cy\u7684\u503c\u4e0d\u7b49\u3002\u4f8b\u5982\uff0c\u5f53x\u7684\u503c\u4e3a9\u3001y\u7684\u503c\u4e3a11\u3001z\u7684\u503c\u4e3a15\u65f6\uff0c\u51fd\u6570\u503c\u4e3a-3.50\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784\u3002", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <stdio.h>", "#include <math.h>", "/********found********/", "#define FU(m,n)\u00a0 (m/n)", "\u00a0", "float fun(float a,float b,float c)", "{", "float value;", "value=FU((a+b),(a-b))+FU((c+b),(c-b));", "/********found********/", "Return (value);", "}", "main()", "{", "float x,y,z,sum;", "printf(\u201cInput x y z: \u201c);", "scanf(\u201c%f%f%f\u201d,&x,&y,&z);", "printf(\u201cx=%f,y=%f,z=%f\\n\u201d,x,y,z);", "if (x==y||y==z){printf(\u201cData error!\\n\u201d);", "exit(0);}", "sum=fun(x,y,z);", "printf(\u201cThe result is :%5.2f\\n\u201d,sum);", "}", "\u00a0", "\u00a0", "99\uff0e\u6570\u5217\u4e2d\uff0c\u7b2c\u4e00\u9879\u503c\u4e3a3\uff0c\u540e\u4e00\u9879\u90fd\u6bd4\u524d\u4e00\u9879\u7684\u503c\u589e5\uff1b\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u8ba1\u7b97\u524dn(4<n<50)\u9879\u7684\u7d2f\u52a0\u548c\uff1a\u5728\u7d2f\u52a0\u8fc7\u7a0b\u4e2d\u628a\u90a3\u4e9b\u88ab4\u9664\u540e\u4f592\u7684\u5f53\u524d\u7d2f\u52a0\u503c\u653e\u5165\u6570\u7ec4\u4e2d\uff0c\u7b26\u5408\u6b64\u6761\u4ef6\u7684\u7d2f\u52a0\u503c\u7684\u4e2a\u6570\u4f5c\u4e3a\u51fd\u6570\u503c\u8fd4\u56de\u4e3b\u51fd\u6570\u3002\u4f8b\u5982\uff0c\u5f53n\u7684\u503c\u4e3a20\u65f6\uff0c\u8be5\u6570\u5217\u4e3a3\uff0c8\uff0cl3\uff0c18\uff0c23\uff0c28\uff0c\u2026\uff0c93\uff0c98\u3002\u7b26\u5408\u6b64\u6761\u4ef6\u7684\u7d2f\u52a0\u503c\u5e94\u4e3a42\uff0c126\uff0c366\uff0c570\uff0c1010\u3002", "\u8bf7\u6539\u6b63\u51fd\u6570fun\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <stdio.h>", "#define\u00a0 N\u00a0 20", "\u00a0", "int fun(int n,int *a)", "{", "/********found********/", "int i,j,k,sum;", "sum=0;", "for(k=3,i=0;i<n;i++,k+=5)", "{", "sum=sum+k;", "/********found********/", "if(sum%4=2)", "a[j++]=sum;", "}", "return j;", "}", "main()", "{", "int a[N],d,n,i;", "printf(\u201c\\nEnter n (4<n<=50); \u201c);", "scanf(\u201c%d\u201d,&n);", "d=fun(n,a);", "printf(\u201c\\n\\nThe result :\\n\u201d);", "for(i=0; i<d; i++)printf(\u201c%6d\u201d,a[i]);", "printf(\u201c\\n\\n\u201d);", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u4e09\u5341\u516b\u5957\uff09"},
{"contents": ["57\uff0e\u5b66\u751f\u7684\u8bb0\u5f55\u7531\u5b66\u53f7\u548c\u6210\u7ee9\u7ec4\u6210\uff0cN\u540d\u5b66\u751f\u7684\u6570\u636e\u5df2\u5728\u4e3b\u51fd\u6570\u4e2d\u653e\u5165\u7ed3\u6784\u4f53\u6570\u7ec4s\u4e2d\uff0c\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\uff1a\u628a\u6307\u5b9a\u5206\u6570\u8303\u56f4\u5185\u7684\u5b66\u751f\u6570\u636e\u653e\u5728b\u6240\u6307\u7684\u6570\u7ec4\u4e2d\uff0c\u5206\u6570\u8303\u56f4\u5185\u7684\u5b66\u751f\u4eba\u6570\u7531\u51fd\u6570\u503c\u8fd4\u56de\u3002", "\u4f8b\u5982\uff0c\u8f93\u5165\u7684\u5206\u6570\u662f60\u548c69\uff0c\u00a0 \u5219\u5e94\u5f53\u628a\u5206\u6570\u572860\u523069\u7684\u5b66\u751f\u6570\u636e\u8fdb\u884c\u8f93\u51fa\uff0c\u5305\u542b60\u5206\u548c69\u5206\u7684\u5b66\u751f\u6570\u636e\u3002\u4e3b\u51fd\u6570\u4e2d\u5c06\u628a60\u653e\u5728low\u4e2d\uff0c\u628a69\u653e\u5728heigh\u4e2d\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684", "\u82e5\u5e72\u8bed\u53e5\u3002", "#include\u00a0 <stdio.h>", "#define\u00a0\u00a0\u00a0 N\u00a0 16", "\u00a0", "typedef\u00a0\u00a0 struct", "{", "char\u00a0 num[10];", "int\u00a0\u00a0 s;", "}\u00a0 STREC;", "\u00a0", "int\u00a0 fun ( STREC\u00a0 *a, STREC *b, int l, int h )", "{", "\u00a0", "}", "\u00a0", "main ()", "{", "STREC\u00a0 s[N]= {{\u201cGA005\u2033,85}, {\u201cGA003\u2033,76}, {\u201cGA002\u2033,69}, {\u201cGA004\u2033,85},", "{\u201cGA001\u2033,96}, {\u201cGA007\u2033,72}, {\u201cGA008\u2033,64}, {\u201cGA006\u2033, 87},", "{\u201cGA015\u2033,85}, {\u201cGA013\u2033,94}, {\u201cGA012\u2033,64}, {\u201cGA014\u2033,91},", "{\u201cGA011\u2033,90}, {\u201cGA017\u2033,64}, {\u201cGA018\u2033,64}, {\u201cGA016\u2033,72}};", "STREC\u00a0 h[N],tt;", "FILE *out;", "int\u00a0 i,j,n, low, heigh, t;", "printf ( \u201cEnter 2 integer number low & heigh :\u00a0 \u201c);", "scanf (\u201c%d%d\u201d,\u00a0 &low, &heigh );", "if ( heigh < low )", "{", "t=heigh;", "heigh=low;", "low=t;", "}", "n=fun (s, h, low , heigh );", "printf ( \u201cThe student \u2018s data between %d\u2014-%d : \\n\u201d, low, heigh );", "for (i=0; i<n; i++)", "printf (\u201c%s\u00a0 %4d\\n\u201d, h[i]. num, h[i]. s);", "printf ( \u201c\\n\u201d );", "out=fopen (\u201cout18.dat\u201d, \u201cw\u201d);", "fprintf ( out, \u201c%d\\n\u201d, n );", "n=fun ( s, h, 80, 98 );", "for (i=0; i<n-1; i++)", "for (j=i+1; j<n; j++)", "if(h[i].s>h[j].s)", "{", "tt=h[i] ;", "h[i]=h[j];", "h[j]=tt;", "}", "for(i=0;i<n; i++)", "fprintf (out, \u201c%4d\\n\u201d, h[i]. s);", "fprintf ( out, \u201c\\n\u201d );", "fclose ( out );", "}", "\u00a0", "60\uff0e\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u8be5\u51fd\u6570\u7684\u529f\u80fd\u662f\uff1a\u5220\u53bb\u4e00\u7ef4\u6570\u7ec4\u4e2d\u6240\u6709\u76f8\u540c\u7684\u6570\uff0c\u4f7f\u4e4b\u53ea\u5269\u4e00\u4e2a\u3002\u6570\u7ec4\u4e2d\u7684\u6570\u5df2\u6309\u7531\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u6392\u5217\uff0c\u51fd\u6570\u8fd4\u56de\u5220\u9664\u540e\u6570\u7ec4\u4e2d\u6570\u636e\u7684\u4e2a\u6570\u3002", "\u4f8b\u5982\uff0c\u82e5\u4e00\u7ef4\u6570\u7ec4\u4e2d\u7684\u6570\u636e\u662f\uff1a", "2\u00a0 2\u00a0 2\u00a0 3\u00a0 4\u00a0 4\u00a0 5\u00a0 6\u00a0 6\u00a0 6\u00a0 6\u00a0 7\u00a0 7\u00a0 8\u00a0 9\u00a0 9\u00a0 10\u00a0 10\u00a0 10\u3002", "\u5220\u9664\u540e\uff0c\u6570\u7ec4\u4e2d\u7684\u5185\u5bb9\u5e94\u8be5\u662f\uff1a", "2\u00a0 3\u00a0 4\u00a0 5\u00a0 6\u00a0 7\u00a0 8\u00a0 9\u00a0 10\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "# include <stdio.h>", "# define\u00a0 N\u00a0 80", "int fun(int a[], int n)", "{", "}", "\u00a0", "main()", "{", "int a[N]={2,2,2,3,4,4,5,6,6,6,6,7,7,8,9,9,10,10,10,10}, i,n=20;", "printf(\u201cThe original data :\\n\u201d);", "for(i=0; i<n; i++)", "printf(\u201c%3d\u201d,a[i]);", "n=fun(a,n);", "printf(\u201c\\n\\nThe data after deleted :\\n\u201d);", "for(i=0;i<n;i++)", "printf(\u201c%3d\u201d,a[i]);", "printf(\u201c\\n\\n\u201d);", "}", "\u00a0", "90\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u8ba1\u7b97n\u76845\u6b21\u65b9\u7684\u503c(\u89c4\u5b9an\u7684\u503c\u5927\u4e8e2\u3001\u5c0f\u4e8e8)\uff0c\u901a\u8fc7\u5f62\u53c2\u6307\u9488\u4f20\u56de\u4e3b\u51fd\u6570\uff1b\u5e76\u8ba1\u7b97\u8be5\u503c\u7684\u4e2a\u4f4d\u3001\u5341\u4f4d\u3001\u767e\u4f4d\u4e0a\u6570\u5b57\u4e4b\u548c\u4f5c\u4e3a\u51fd\u6570\u503c\u8fd4\u56de\u3002\u4f8b\u5982\uff0c7\u76845\u6b21\u65b9\u662f16807\uff0c\u5176\u4f4e3\u4f4d\u6570\u7684\u548c\u503c\u662f15\u3002", "\u8bf7\u6539\u6b63\u51fd\u6570fun\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <stdio.h>", "#include <math.h>", "\u00a0", "int fun(int n ,int *value)", "{", "int d,s,i;", "/********found********/", "d=0;", "/********found********/", "s=1;", "for(i=1; i<=5; i++)", "d=d*n;", "*value=d;", "for(i=1; i<=3; i++)", "{", "s=s+d%10;", "/********found********/", "s=s/10;", "}", "return s;", "}", "main()", "{", "int n, sum, v;", "do", "{", "printf(\u201c\\nEnter n(2<n<8): \u201c);", "scanf(\u201c%d\u201d,&n);", "}", "while(n<=2 || n>=8);", "sum=fun(n,&v);", "printf(\u201c\\n\\nThe result:\\n value=%d sum=%d\\n\\n\u201d,v,sum);", "}", "\u00a0", "\u00a0", "93\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u7528\u4e0b\u9762\u7684\u516c\u5f0f\u6c42\u03c0\u7684\u8fd1\u4f3c\u503c\uff0c\u76f4\u5230\u6700\u540e\u4e00\u9879", "\u7684\u7edd\u5bf9\u503c\u5c0f\u4e8e\u6307\u5b9a\u7684\u6570(\u53c2\u6570num)\u4e3a\u6b62\uff1a", "\u03c0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a01 \u00a0\u00a0\u00a01\u00a0\u00a0\u00a0 1", "\uff0d\u2248 1- \uff0d + \uff0d \u2013 \uff0d +\u2026", "4\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a03\u00a0 \u00a0\u00a05\u00a0 \u00a0\u00a07", "\u00a0", "\u4f8b\u5982\uff0c\u7a0b\u5e8f\u8fd0\u884c\u540e\uff0c\u8f93\u51650.0001\uff0c\u5219\u7a0b\u5e8f\u8f93\u51fa3.1414\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u8f93\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <math.h>", "#include <stdio.h>", "\u00a0", "float fun(float num)", "{", "int s;", "float n,t,pi;", "t=1;", "pi=0;", "n=1;", "s=1;", "/********found********/", "while (t>=num)", "{", "pi=pi+t;", "n=n+2;", "s=-s;", "/********found********/", "t=s%n;", "}", "pi=pi*4;", "return pi;", "}", "\u00a0", "main( )", "{", "float n1,n2;", "clrscr();", "printf(\u201cEnter a float number: \u201c);", "scanf(\u201c%f\u201d, &n1);", "n2=fun(n1);", "printf(\u201c%6.4f\\n\u201d, n2);", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u4e09\u5341\u4e94\u5957\uff09"},
{"contents": ["52\uff0e\u7f16\u5199\u4e00\u4e2a\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\uff1a\u5b9e\u73b0\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u8fde\u63a5\uff08\u4e0d\u4f7f\u7528\u5e93\u51fd\u6570strcat\uff09\uff0c\u5373\u628ap2\u6240\u6307\u7684\u5b57\u7b26\u4e32\u8fde\u63a5\u5230p1\u6240\u6307\u7684\u5b57\u7b26\u4e32\u540e\u3002", "\u4f8b\u5982\uff0c\u5206\u522b\u8f93\u5165\u4e0b\u9762\u4e24\u4e2a\u5b57\u7b26\u4e32\uff1a", "FirStString\u2013", "SecondString", "\u5219\u7a0b\u5e8f\u8f93\u51fa\uff1aFirstString\u2013SecondString", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "#include <conio.h>", "\u00a0", "void fun(char p1[], char p2[])", "{", "}", "\u00a0", "main()", "{", "char s1[80], s2[40] ;", "clrscr() ;", "printf(\u201cEnter s1 and s2:\\n\u201d) ;", "scanf(\u201c%s%s\u201d, s1, s2) ;", "printf(\u201cs1=%s\\n\u201d, s1) ;", "printf(\u201cs2=%s\\n\u201d, s2) ;", "printf(\u201cInvoke fun(s1,s2):\\n\u201d) ;", "fun(s1, s2) ;", "printf(\u201cAfter invoking:\\n\u201d) ;", "printf(\u201c%s\\n\u201d, s1) ;", "}", "\u00a0", "56\uff0e\u5047\u5b9a\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u4e2d\u53ea\u5305\u542b\u5b57\u6bcd\u548c*\u53f7\u3002\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\uff1b\u9664\u4e86\u5c3e\u90e8\u7684*\u53f7\u4e4b\u5916\uff0c\u5c06\u5b57\u7b26\u4e32\u4e2d\u5176\u4ed6*\u53f7\u5168\u90e8\u5220\u9664\u3002\u5f62\u53c2p\u5df2\u6307\u5411\u5b57\u7b26\u4e32\u4e2d\u6700\u540e\u7684\u4e00\u4e2a\u5b57\u6bcd\u3002\u5728\u7f16\u5199\u51fd\u6570\u65f6\uff0c\u4e0d\u5f97\u4f7f\u7528C\u8bed\u8a00\u63d0\u4f9b\u7684\u5b57\u7b26\u4e32\u51fd\u6570\u3002", "\u4f8b\u5982\uff0c\u82e5\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u4e3a****A*BC*DEF*G*******\uff0c\u5220\u9664\u540e\uff0c\u5b57\u7b26\u4e32\u4e2d\u7684\u5219\u5185\u5bb9\u5e94\u5f53\u662fABCDEFG*******\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "#include <conio.h>", "\u00a0", "void fun( char *a, char *p)", "{", "}", "\u00a0", "main()", "{", "char\u00a0 s[81],*t;", "printf(\u201cEnter a string:\\n\u201d);", "gets(s);", "t=s;", "while(*t)", "t++;", "t\u2013;", "while(*t==\u2019*\u2019)", "t\u2013;", "fun( s , t );", "printf(\u201cThe string after deleted:\\n\u201d);", "puts(s);", "}", "\u00a0", "87\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u7ed9\u4e00\u7ef4\u6570\u7ec4a\u8f93\u5165\u4efb\u610f4\u4e2a\u6574\u6570\uff0c\u5e76\u6309\u5982\u4e0b\u7684\u89c4\u5f8b\u8f93\u51fa\u3002\u4f8b\u5982\u8f93\u51651\u30012\u30013\u30014\uff0c\u7a0b\u5e8f\u8fd0\u884c\u540e\u5c06\u8f93\u51fa\u4ee5\u4e0b\u65b9\u9635\uff1a", "4\u00a0 1\u00a0 2\u00a0 3", "3\u00a0 4\u00a0 1\u00a0 2", "2\u00a0 3\u00a0 4\u00a0 1", "1\u00a0 2\u00a0 3\u00a0 4", "\u8bf7\u6539\u6b63\u51fd\u6570fun\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <stdio.h>", "#define\u00a0\u00a0 M\u00a0\u00a0 4", "\u00a0", "/********found********/", "int fun(int a)", "{", "int i,j,k,m;", "printf(\u201cEnter 4 number : \u201c);", "for(i=0; i<M; i++)", "scanf(\u201c%d\u201d,&a[i]);", "printf(\u201c\\n\\nThe result\u00a0 :\\n\\n\u201d);", "for(i=M;i>0;i\u2013)", "{", "k=a[M-1];", "/********found********/", "for(j=M-1;j>0;j\u2013)", "a[j]=a[j+1];", "a[0]=k;", "for(m=0; m<M; m++)", "printf(\u201c%d\u00a0 \u201c,a[m]);", "printf(\u201c\\n\u201d);", "}", "}", "main()", "{", "int a[M];", "fun(a);", "printf(\u201c\\n\\n\u201d);", "}", "\u00a0", "\u00a0", "89\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u6c42\u6574\u6570x\u7684y\u6b21\u65b9\u7684\u4f4e3\u4f4d\u503c\u3002\u4f8b\u5982\uff0c\u6574\u65705\u76846\u6b21\u65b9\u4e3a15625\uff0c\u6b64\u6570\u7684\u4f4e3\u4f4d\u503c\u4e3a625\u3002", "\u8bf7\u6539\u6b63\u51fd\u6570fun\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <stdio.h>", "\u00a0", "long fun(int x,int y,long *p)", "{", "int i;", "long t=1;", "/********found********/", "for(i=1; i<y; i++)", "t=t*x;", "*p=t;", "/********found********/", "t=t/1000;", "return t;", "}", "main()", "{", "long t,r;", "int x,y;", "printf(\u201c\\nInput x and y: \u201c);", "scanf(\u201c%ld%ld\u201d,&x,&y);", "t=fun(x,y,&r);", "printf(\u201c\\n\\nx=%d, y=%d, r=%ld, last=%ld\\n\\n\u201d,x,y,r,t);", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u4e09\u5341\u56db\u5957\uff09"},
{"contents": ["49\uff0e\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5176\u529f\u80fd\u662f\uff1a\u5c06s\u6240\u6307\u5b57\u7b26\u4e32\u4e2d\u4e0b\u6807\u4e3a\u5076\u6570\u540c\u65f6ASCII\u503c\u4e3a\u5947\u6570\u7684\u5b57\u7b26\u5220\u9664\uff0cs\u4e2d\u5269\u4f59\u7684\u5b57\u7b26\u5f62\u6210\u7684\u65b0\u4e32\u653e\u5728t\u6240\u6307\u7684\u6570\u7ec4\u4e2d\u3002", "\u4f8b\u5982\uff0c\u82e5s\u6240\u6307\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u4e3aABCDEFGl2345\uff0c\u5176\u4e2d\u5b57\u7b26C\u7684ASCII\u7801\u503c\u4e3a\u5947\u6570\uff0c\u5728\u6570\u7ec4\u4e2d\u7684\u4e0b\u6807\u4e3a\u5076\u6570\uff0c\u56e0\u6b64\u5fc5\u987b\u5220\u9664\uff1b\u800c\u5b57\u7b261\u7684ASCII\u7801\u503c\u4e3a\u5947\u6570\uff0c\u5728\u6570\u7ec4\u4e2d\u7684\u4e0b\u6807\u4e5f\u4e3a\u5947\u6570\uff0c\u56e0\u6b64\u4e0d\u5e94\u5f53\u5220\u9664\uff0c\u5176\u4ed6\u4f9d\u6b64\u7c7b\u63a8\u3002\u6700\u540et\u6240\u6307\u7684\u6570\u7ec4\u4e2d\u7684\u5185\u5bb9\u5e94\u662fBDFl2345\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <conio.h>", "#include <stdio.h>", "#include <string.h>", "\u00a0", "void fun(char *s, char t[])", "{", "}", "\u00a0", "main()", "{", "char s[100], t[100];", "clrscr();", "printf(\u201c\\nPlease enter string S:\u201d);", "scanf(\u201c%s\u201d, s);", "fun(s, t);", "printf(\u201c\\nThe result is : %s\\n\u201d, t);", "}", "\u00a0", "51\uff0e\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5176\u529f\u80fd\u662f\uff1a\u5c06\u6240\u6709\u5927\u4e8e1\u5c0f\u4e8e\u6574\u6570m\u7684\u975e\u7d20\u6570\u5b58\u5165xx\u6240\u6307\u6570\u7ec4\u4e2d\uff0c\u975e\u7d20\u6570\u7684\u4e2a\u6570\u901a\u8fc7k\u4f20\u56de\u3002", "\u4f8b\u5982\uff0c\u82e5\u8f93\u516517\uff0c\u5219\u5e94\u8f93\u51fa\uff1a9\u548c4 6 8 9 10 12 14 15 16\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <conio.h>", "#include <stdio.h>", "\u00a0", "void fun( int m, int *k, int xx[] )", "{", "}", "\u00a0", "main()", "{", "int m, n, zz[100];", "clrscr();", "printf( \u201c\\nPlease enter an integer number between 10 and 100: \u201d );", "scanf( \u201c%d\u201d, &n );", "fun( n, &m, zz );", "printf( \u201c\\n\\nThere are %d non-prime numbers less than %d: \u201c, m, n );", "for( n = 0; n < m; n++ )", "printf( \u201c\\n\u00a0 %4d\u201d, zz[n] );", "}", "\u00a0", "84\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u5c06\u5341\u8fdb\u5236\u6b63\u6574\u6570m\u8f6c\u6362\u6210k(2\u2264k\u22649)\u8fdb\u5236\u6570\uff0c\u5e76\u6309\u4f4d\u8f93\u51fa\u3002\u4f8b\u5982\uff0c\u82e5\u8f93\u51658\u548c2\uff0c\u5219\u5e94\u8f93\u51fa1000(\u5373\u5341\u8fdb\u5236\u65708\u8f6c\u6362\u6210\u4e8c\u8fdb\u5236\u8868\u793a\u662f1000)\u3002", "\u8bf7\u6539\u6b63fun\u51fd\u6570\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <conio.h>", "#include <stdio.h>", "\u00a0", "/********found********/", "fun(int m,int k)", "{", "int aa[20],i;", "for(i=0;m;i++)", "{", "/********found********/", "aa[i]=m/k;", "m/=k;", "}", "for( ; i; i\u2013 )", "/********found********/", "printf(\u201c%d\u201d, aa[i] );", "}", "\u00a0", "main()", "{", "int b,n;", "clrscr();", "printf( \u201c\\nPlease enter a number and a base:\\n\u201d );", "scanf( \u201c%d%d\u201d,&n,&b );", "fun( n, b );", "printf(\u201c\\n\u201d);", "}", "\u00a0", "\u00a0", "86\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u628a\u4e3b\u51fd\u6570\u4e2d\u8f93\u5165\u76843\u4e2a\u6570\uff0c\u6700\u5927\u7684\u653e\u5728a\u4e2d\uff0c\u6700\u5c0f\u7684\u653e\u5728c\u4e2d\u3002\u4f8b\u5982\uff0c\u8f93\u5165\u7684\u6570\u4e3a\uff1a55 12 34\uff0c\u8f93\u51fa\u7ed3\u679c\u5e94\u5f53\u662f\uff1aa=55.0\uff0cb=34.0\uff0cc=12.0\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784\u3002", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include<stdio.h>", "\u00a0", "void fun(float *p,float *q,float *s)", "{", "float\u00a0 *k;", "if ( *p<*q )", "/********found********/", "{", "k=*p;", "*p=*q;", "*q=k;", "}", "/********found********/", "if ( *s<*p )", "/********found********/", "{", "k=*s;", "*s=*p;", "*p=k;", "}", "if( *q<*s )", "/********found********/", "{", "k=*q;", "*q=*s;", "*s=k;", "}", "}", "main()", "{", "float\u00a0 a,b,c;", "printf(\u201cInput a b c:\u201d);", "scanf(\u201c%f%f%f\u201d,&a,&b,&c);", "printf(\u201ca=%4.1f,b=%4.1f,c=%4.1f\\n\\n\u201d,a,b,c);", "fun(&a,&b,&c);", "printf(\u201ca=%4.1f,b=%4.1f,c=%4.1f\\n\\n\u201d,a,b,c);", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u4e09\u5341\u4e09\u5957\uff09"},
{"contents": ["89\uff0e\u5b66\u751f\u7684\u8bb0\u5f55\u7531\u5b66\u53f7\u548c\u6210\u7ee9\u7ec4\u6210\uff0cN\u540d\u5b66\u751f\u7684\u6570\u636e\u5df2\u5728\u4e3b\u51fd\u6570\u4e2d\u653e\u5165\u7ed3\u6784\u4f53\u6570\u7ec4s\u4e2d\uff0c\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\uff1a\u628a\u9ad8\u4e8e\u7b49\u4e8e\u5e73\u5747\u5206\u7684\u5b66\u751f\u6570\u636e\u653e\u5728b\u6240\u6307\u7684\u6570\u7ec4\u4e2d\uff0c\u9ad8\u4e8e\u7b49\u4e8e\u5e73\u5747\u5206\u7684\u5b66\u751f\u4eba\u6570\u901a\u8fc7\u5f62\u53c2n\u4f20\u56de\uff0c\u5e73\u5747\u5206\u901a\u8fc7\u51fd\u6570\u503c\u8fd4\u56de\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "#define\u00a0 N\u00a0 12", "\u00a0", "typedef\u00a0 struct", "{", "char\u00a0 num [10];", "double\u00a0 s;", "}STREC;", "\u00a0", "double\u00a0 fun\u00a0 ( STREC\u00a0 *a,\u00a0 STREC\u00a0 *b,\u00a0 int\u00a0 *n )", "{", "}", "\u00a0", "main ()", "{", "STREC\u00a0 s[N]={{\u201cGA05\u2033,85}, {\u201cGA03\u2033,76}, {\u201cGA02\u2033,69}, {\u201cGA04\u2033,85},", "{\u201cGA01\u2033,91}, {\u201cGA07\u2033,72}, {\u201cGA08\u2033,64}, {\u201cGA06\u2033,87},", "{\u201cGA09\u2033,60}, {\u201cGA11\u2033,79}, {\u201cGA12\u2033,73}, {\u201cGA10\u2033,90}};", "STREC\u00a0 h [N], t;", "FILE\u00a0 *out ;", "int\u00a0 i,j,n;", "double\u00a0 ave;", "ave=fun ( s, h, &n );", "printf ( \u201cThe %d student data which is higher than %7.3f:\\n\u201d, n, ave);", "for ( i=0; i<n; i++ )", "printf\u00a0 (\u201c%s\u00a0 %4.1f\\n\u201d, h[i]. num, h[i]. s);", "printf (\u201c\\n\u201d);", "out=fopen(\u201cout12.dat\u201d,\u201dw\u201d);", "fprintf(out,\u201d%d\\n%7.3f\\n\u201d, n, ave);", "for(i=0;i<n-1;i++)", "for(j=i+1;j<n;j++)", "if(h[i].s<h[j].s)", "{", "t=h[i] ;", "h[i]=h[j];", "h[j]=t;", "}", "for(i=0;i<n; i++)", "fprintf(out, \u201c%4.1f\\n\u201d,h[i].s);", "fclose(out);", "}", "\u00a0", "90\uff0e\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5176\u529f\u80fd\u662f\uff1a\u8ba1\u7b97\u5e76\u8f93\u51fa\u4e0b\u5217\u591a\u9879\u5f0f\u503c\uff1a", "Sn= (1-1/2) + (1/3-1/4)+\u2026+(1/2n-1-1/2n)", "\u4f8b\u5982\uff0c\u82e5\u4e3b\u51fd\u6570\u4ece\u952e\u76d8\u7ed9n\u8f93\u51658\u540e\uff0c\u5219\u8f93\u51fa\u4e3aS=0.662872\u3002", "\u6ce8\u610f\uff1an\u7684\u503c\u8981\u6c42\u5927\u4e8e1\u4f46\u4e0d\u5927\u4e8e100\u3002\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "\u00a0", "double fun(int n)", "{", "}", "\u00a0", "main()", "{", "int\u00a0 n;", "double\u00a0 s;", "printf(\u201c\\nInput n:\u00a0 \u201c);", "scanf(\u201c%d\u201d,&n);", "s=fun(n);", "printf(\u201c\\ns=%f\\n\u201d,s);", "}", "\u00a0", "12\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u6c42\u51fa\u5728\u5b57\u7b26\u4e32\u4e2d\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u5b50\u5b57\u7b26\u4e32\u7684\u5730", "\u5740\uff0c\u901a\u8fc7\u51fd\u6570\u503c\u8fd4\u56de\uff0c\u5728\u4e3b\u51fd\u6570\u4e2d\u8f93\u51fa\u4ece\u6b64\u5730\u5740\u5f00\u59cb\u7684\u5b57\u7b26\u4e32\uff1b\u82e5\u672a\u627e\u5230\uff0c\u5219\u51fd\u6570\u503c\u4e3aNULL\u3002", "\u4f8b\u5982\uff0c\u5f53\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u4e3aabcdabfabcdx\uff0ct\u4e2d\u7684\u5185\u5bb9\u4e3aab\u65f6\uff0c\u8f93\u51fa\u7ed3\u679c\u5e94\u662f\uff1aabcdx\u3002\u5f53\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u4e3aabcdabfabcdx\uff0ct\u4e2d\u7684\u5185\u5bb9\u4e3aabd\u65f6\uff0c\u5219\u7a0b\u5e8f\u8f93\u51fa\u672a\u627e\u5230\u4fe1\u606f\uff1anot be\u00a0 found!\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <conio.h>", "#include <stdio.h>", "#include <string.h>", "char *fun(char *s,char *t)", "{", "char *p,*r,*a;", "/********found********/", "a=NuLL;", "while(*s)", "{", "p=s;r=t;", "while(*r)", "/********found********/", "if(r==p)", "{", "r++;", "p++;", "}", "else", "break;", "if(*r==\u2019\\0\u2032)", "a=s;", "s++;", "}", "return a;", "}", "main()", "{", "char s[100],t[100],*p;", "clrscr();", "printf(\u201c\\nplease enter string s:\u201d);", "scanf(\u201c%s\u201d,s);", "printf(\u201c\\nplease enter substring t:\u201d);", "scanf(\u201c%s\u201d,t);", "p=fun(s,t);", "if(p)", "printf(\u201c\\nthe result is:%s\\n\u201d,p);", "else", "printf(\u201c\\nnot found!\\n\u201d);", "}", "\u00a0", "\u00a0", "20\uff0eN\u4e2a\u6709\u5e8f\u6574\u6570\u6570\u5217\u5df2\u653e\u5728\u4e00\u7ef4\u6570\u7ec4\u4e2d\uff0c\u7ed9\u5b9a\u4e0b\u5217\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u5229\u7528\u6298\u534a\u67e5\u627e\u7b97\u6cd5\u67e5\u627e\u6574\u6570m\u5728\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\u3002\u82e5\u627e\u5230\uff0c\u5219\u8fd4\u56de\u5176\u4e0b\u6807\u503c\uff1b\u53cd\u4e4b\uff0c\u5219\u8fd4\u56de-1\u3002", "\u6298\u534a\u67e5\u627e\u7684\u57fa\u672c\u7b97\u6cd5\u662f\uff1a\u6bcf\u6b21\u67e5\u627e\u524d\u5148\u786e\u5b9a\u6570\u7ec4\u4e2d\u5f85\u67e5\u7684\u8303\u56f4\uff1alow\u548chigh(low<high)\uff0c\u7136\u540e\u628am\u4e0e\u4e2d\u95f4\u4f4d\u7f6e(mid)\u4e2d\u5143\u7d20\u7684\u503c\u8fdb\u884c\u6bd4\u8f83\u3002\u5982\u679cm\u7684\u503c\u5927\u4e8e\u4e2d\u95f4\u4f4d\u7f6e\u5143\u7d20\u4e2d\u7684\u503c\uff0c\u5219\u4e0b\u4e00\u6b21\u7684\u67e5\u627e\u8303\u56f4\u653e\u5728\u4e2d\u95f4\u4f4d\u7f6e\u4e4b\u540e\u7684\u5143\u7d20\u4e2d\uff1b\u53cd\u4e4b\uff0c\u4e0b\u4e00\u6b21\u7684\u67e5\u627e\u8303\u56f4\u843d\u5728\u4e2d\u95f4\u4f4d\u7f6e\u4e4b\u524d\u7684\u5143\u7d20\u4e2d\u3002\u76f4\u5230low>high\uff0c\u67e5\u627e\u7ed3\u675f\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784\u3002", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <stdio.h>", "#define N 10", "/********found********/", "void fun(int a[],int m)", "{", "int low=0,high=N-1,mid;", "while(low<=high)", "{", "mid=(low+high)/2;", "if(m<a[mid])", "high=mid-1;", "/********found********/", "else", "if(m>=a[mid])", "low=mid+1;", "else", "return(mid);", "}", "return (-1);", "}", "main()", "{", "int i,a[N]={-3,4,7,9,13,45,67,89,100,180},k,m;", "printf(\u201ca:\u201d);", "for(i=0;i<N;i++)", "printf(\u201c%d \u201c,a[i]);", "printf(\u201cEnter m:\u201d);", "scanf(\u201c%d\u201d,&m);", "k=fun(a,m);", "if(k>=0)", "printf(\u201cm=%d,index=%d\\n\u201d,m,k);", "else", "printf(\u201cNot be found!\\n\u201d);", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u56db\u5341\u4e00\u5957\uff09"},
{"contents": ["44\uff0e\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u53ef\u4ee5\u7edf\u8ba1\u4e00\u4e2a\u957f\u5ea6\u4e3a2\u7684\u5b57\u7b26\u4e32\u5728\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u3002\u4f8b\u5982\uff0c\u5047\u5b9a\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u4e3a\uff1aasd asasdfg asd as zx67 asd mklo\uff0c\u5b50\u5b57\u7b26\u4e32\u4e3aas\uff0c\u5219\u5e94\u8f93\u51fa6\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "#include <string.h>", "#include <conio.h>", "\u00a0", "int fun(char *str,char *substr)", "{", "\u00a0", "}", "\u00a0", "main()", "{", "char str[81],substr[3];", "int n;", "\u00a0", "clrscr() ;", "printf(\u201c\u8f93\u5165\u4e3b\u5b57\u7b26\u4e32: \u201c);", "gets(str);", "printf(\u201c\u8f93\u5165\u5b50\u5b57\u7b26\u4e32: \u201c);", "gets(substr);", "puts(str);", "puts(substr);", "n=fun(str,substr);", "printf(\u201cn=%d\\n\u201d,n);", "}", "\u00a0", "48\uff0e\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5176\u529f\u80fd\u662f\uff1a\u5c06\u4e24\u4e2a\u4e24\u4f4d\u6570\u7684\u6b63\u6574\u6570a\u3001b\u5408\u5e76\u5f62\u6210\u4e00\u4e2a\u6574\u6570\u653e\u5728c\u4e2d\u3002\u5408\u5e76\u7684\u65b9\u5f0f\u662f\uff1a\u5c06a\u6570\u7684\u5341\u4f4d\u548c\u4e2a\u4f4d\u6570\u4f9d\u6b21\u653e\u5728c\u6570\u7684\u5343\u4f4d\u548c\u5341\u4f4d\u4e0a\uff0cb\u6570\u7684\u5341\u4f4d\u548c\u4e2a\u4f4d\u6570\u4f9d\u6b21\u653e\u5728c\u6570\u7684\u767e\u4f4d\u548c\u4e2a\u4f4d\u4e0a\u3002", "\u4f8b\u5982\uff0c\u5f53a=45\uff0cb=12\uff0c\u8c03\u7528\u8be5\u51fd\u6570\u540e\uff0cc=4152\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <conio.h>", "#include <stdio.h>", "\u00a0", "void fun (int a, int b ,long *c)", "{", "}", "\u00a0", "main ()", "{", "int a,b;", "long c;", "clrscr ();", "printf (\u201cInput a, b:\u201d);", "scanf(\u201c%d%d\u201d, &a, &b);", "fun (a, b, &c);", "printf (\u201cThe result is: %d\\n\u201d,\u00a0 c);", "}", "\u00a0", "82\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u8ba1\u7b97\u6574\u6570n\u7684\u9636\u4e58\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\u6216\u5728\u6a2a\u7ebf\u5904\u586b\u4e0a\u9002\u5f53\u7684\u5185\u5bb9\u5e76\u628a\u6a2a\u7ebf\u5220\u9664\uff0c\u4f7f\u5b83\u80fd\u8ba1\u7b97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include \u201cstdio.h\u201d", "\u00a0", "double fun(int n)", "{", "double result=1.0;", "/********found********/", "while (n>1 && n<170)", "result *=\u2013n;", "/********found********/", "return _____;", "}", "\u00a0", "main()", "{", "int n;", "clrscr();", "printf(\u201cEnter an integer: \u201d );", "scanf(\u201c%d\u201d,&n);", "printf(\u201c\\n\\n%d!=%1g\\n\\n\u201d,n,fun(n));", "}", "\u00a0", "\u00a0", "83\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u4ea4\u6362\u4e3b\u51fd\u6570\u4e2d\u4e24\u4e2a\u53d8\u91cf\u7684\u503c\u3002\u4f8b\u5982\uff1a\u82e5\u53d8\u91cfa\u4e2d\u7684\u503c\u539f\u4e3a8\uff0cb\u4e2d\u7684\u503c\u4e3a3\uff0c\u5219\u7a0b\u5e8f\u8fd0\u884c\u540ea\u4e2d\u7684\u503c\u4e3a3\uff0cb\u4e2d\u7684\u503c\u4e3a8\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u8ba1\u7b97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <stdio.h>", "\u00a0", "/********found********/", "int fun(int x,int y)", "{", "int t;", "/********found********/", "t=x;", "x=y;", "y=t;", "}", "\u00a0", "main()", "{", "int a,b;", "a=8;", "b=3;", "fun(&a,&b);", "printf(\u201c%d,\u00a0 %d\\n\u201d,a,b);", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u4e09\u5341\u4e8c\u5957\uff09"},
{"contents": ["26\uff0e\u8bf7\u7f16\u5199\u4e00\u4e2a\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\uff1a\u6839\u636e\u4ee5\u4e0b\u516c\u5f0f\u6c42\u03c0\u7684\u503c(\u8981\u6c42\u6ee1\u8db3\u7cbe\u5ea60.0005\uff0c\u5373\u67d0\u9879\u5c0f\u4e8e0.0005\u65f6\u505c\u6b62\u8fed\u4ee3)\uff1a", "\u00a0", "\u7a0b\u5e8f\u8fd0\u884c\u540e\uff0c\u5982\u679c\u8f93\u5165\u7cbe\u5ea60.0005\uff0c\u5219\u7a0b\u5e8f\u8f93\u51fa\u4e3a3.14\u2026\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <conio.h>", "#include <stdio.h>", "#include <string.h>", "\u00a0", "void fun(char *s, char t[])", "{", "}", "\u00a0", "main()", "{", "char s[100], t[100];", "clrscr();", "printf(\u201c\\nPlease enter string S:\u201d);", "scanf(\u201c%s\u201d, s);", "fun(s, t);", "printf(\u201c\\nThe result is : %s\\n\u201d, t);", "}", "\u00a0", "42\uff0e\u4e0b\u5217\u7a0b\u5e8f\u5b9a\u4e49\u4e86NxN\u7684\u4e8c\u7ef4\u6570\u7ec4\uff0c\u5e76\u5728\u4e3b\u51fd\u6570\u4e2d\u81ea\u52a8\u8d4b\u503c\u3002\u8bf7\u7f16\u5199\u51fd\u6570fun(int a[][N]\uff0cint n)\uff0c\u8be5\u51fd\u6570\u7684\u529f\u80fd\u662f\uff1a\u4f7f\u6570\u7ec4\u53f3\u4e0a\u534a\u4e09\u89d2\u5143\u7d20\u4e2d\u7684\u503c\u4e58\u4ee5m\u3002\u4f8b\u5982\uff1a\u82e5m\u7684\u503c\u4e3a2\uff0ca\u6570\u7ec4\u4e2d\u7684\u503c\u4e3a\uff1a\uff0c\u5219\u8fd4\u56de\u4e3b\u7a0b\u5e8f\u540ea\u6570\u7ec4\u4e2d\u7684\u503c\u5e94\u4e3a\uff1a\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "#include <conio.h>", "#include <stdlib.h>", "#define\u00a0 N\u00a0 5", "void\u00a0 fun ( int a[][N],\u00a0 int m )", "{", "}", "\u00a0", "main ( )", "{", "int a[N][N], m, i, j;", "clrscr();", "printf(\u201c**** The array *****\\n\u201d);", "for ( i=0;\u00a0 i<N; i++ )", "{", "for( j=0; j<N; j++ )", "{", "a[i][j] = rand()%20;", "printf(\u201c%4d\u201d, a[i][j] );", "}", "printf(\u201c\\n\u201d);", "}", "do {", "m = rand()%10", "}\u00a0\u00a0 while ( m>=3 );", "printf(\u201cm=%4d\\n\u201d, m);", "fun ( a ,m );", "printf (\u201d THE RESULT\\n\u201d);", "for ( i=0;\u00a0 i<N; i++ )", "{", "for ( j=0; j<N; j++ )", "printf( \u201c%4d\u201d, a[i][j] );", "printf(\u201c\\n\u201d);", "}", "}", "\u00a0", "80\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u6c42\u51fa\u4ee5\u4e0b\u5206\u6570\u5e8f\u5217\u7684\u524dn\u9879\u4e4b\u548c\u3002", "2\u00a0\u00a0\u00a0 3\u00a0\u00a0\u00a0 5\u00a0\u00a0\u00a0 8\u00a0\u00a0\u00a0 13\u00a0\u00a0 21", "\uff0d\u00a0\u00a0 \uff0d\u00a0\u00a0 \uff0d\u00a0\u00a0 \uff0d\u00a0\u00a0 \uff0d\u00a0\u00a0 \uff0d", "1\uff0c\u00a0 2\uff0c\u00a0 3\uff0c\u00a0 5\uff0c\u00a0 8\uff0c\u00a0 13\uff0c\u2026", "\u548c\u503c\u901a\u8fc7\u51fd\u6570\u503c\u8fd4\u56demain\u51fd\u6570\u3002\u4f8b\u5982\uff0c\u82e5n=5\uff0c\u5219\u5e94\u8f93\u51fa8.391667\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u8ba1\u7b97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <conio.h>", "#include <stdio.h>", "\u00a0", "/********found********/", "fun (int n )", "{", "int a, b, c, k ;", "double s;", "s = 0.0;", "a = 2;", "b = 1;", "for ( k = 1; k <= n; k++ )", "{", "/********found********/", "s = s + (Double) a / b ;", "c = a;", "a = a + b;", "b = c;", "}", "return s;", "}", "\u00a0", "main( )", "{", "int\u00a0 n = 5 ;", "clrscr( ) ;", "printf(\u201c\\nThe value of function is :%lf\\n\u201d,\u00a0 fun ( n ) ) ;", "}", "\u00a0", "\u00a0", "81.\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u6839\u636e\u6574\u578b\u5f62\u53c2n\uff0c\u8ba1\u7b97\u5982\u4e0b\u516c\u5f0f\u7684\u503c\u3002", "1\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1", "A", "=1\uff0cA", "=\u00a0 \uff0d \uff0cA", "=\u00a0 \uff0d\uff0c\u2026\uff0cA", "=\u00a0 \uff0d", "1+A", "\u00a0\u00a0\u00a0\u00a0\u00a0 1+A", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a01+A", "\u4f8b\u5982\uff0c\u82e5n=10\uff0c\u5219\u5e94\u8f93\u51fa0.617977\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <conio.h>", "#include <stdio.h>", "\u00a0", "/********found********/", "int\u00a0 fun(int n)", "{", "float A=1;int i;", "/********found********/", "for(i=2;i<n;i++)", "A=1.0/(1+A);", "return A;", "}", "\u00a0", "main( )", "{", "int n;", "clrscr();", "printf(\u201c\\nPlease enter n: \u201c);", "scanf(\u201c%d\u201d, &n );", "printf(\u201cA%d=%f\\n\u201d, n, fun(n) );", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u4e09\u5341\u4e00\u5957\uff09"},
{"contents": ["20\uff0e\u7f16\u5199\u51fd\u6570int fun(int lim\uff0cint aa[MAX])\uff0c\u8be5\u51fd\u6570\u7684\u529f\u80fd\u662f\u6c42\u51fa\u5c0f\u4e8e\u6216\u7b49\u4e8elim\u7684\u6240\u6709\u7d20\u6570\u5e76\u653e\u5728aa\u6570\u7ec4\u4e2d\uff0c\u8be5\u51fd\u6570\u8fd4\u56de\u6240\u6c42\u51fa\u7684\u7d20\u6570\u7684\u4e2a\u6570\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "#include <conio.h>", "#define MAX 100", "\u00a0", "int fun( int lim, int aa[MAX])", "{", "}", "\u00a0", "main()", "{", "int limit,i,sum;", "int aa[MAX] ;", "clrscr() ;", "printf(\u201c\u8f93\u5165\u4e00\u4e2a\u6574\u6570\u201d);", "scanf(\u201d %d\u201d, &limit);", "sum=fun(limit, aa);", "for(i=0 ; i < sum; i++)", "{", "if(i%10 == 0 && i !=0)", "printf(\u201c\\n\u201d);", "printf(\u201c%5d\u201d, aa[i]);", "}", "}", "\u00a0", "22\uff0eN\u540d\u5b66\u751f\u7684\u6210\u7ee9\u5df2\u5728\u4e3b\u51fd\u6570\u4e2d\u653e\u5165\u4e00\u4e2a\u5e26\u5934\u8282\u70b9\u7684\u94fe\u8868\u7ed3\u6784\u4e2d\uff0ch\u6307\u5411\u94fe\u8868\u7684\u5934\u8282\u70b9\u3002\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\uff1a\u627e\u51fa\u5b66\u751f\u7684\u6700\u9ad8\u5206\uff0c\u7531\u51fd\u6570\u503c\u8fd4\u56de\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "#include <stdlib.h>", "#define\u00a0 N\u00a0 8", "\u00a0", "struct\u00a0 slist", "{", "double\u00a0 s;", "struct slist *next;", "};", "\u00a0", "typedef\u00a0 struct slist\u00a0 STREC;", "\u00a0", "double\u00a0 fun( STREC *h )", "{", "}", "\u00a0", "STREC *creat( double *s)", "{", "STREC *h,*p,*q;", "int\u00a0 i=0;", "h=p=(STREC*)malloc(sizeof(STREC));", "p->s=0;", "while(i<N)", "{", "q=(STREC*)malloc(sizeof(STREC));", "q->s=s[i];", "i++;", "p->next=q;", "p=q;", "}", "p->next=0;", "return\u00a0 h;", "}", "\u00a0", "outlist(STREC *h)", "{", "STREC\u00a0 *p;", "p=h->next;", "printf(\u201chead\u201d);", "do", "{", "printf(\u201c->%2.0f\u201d,p->s);", "p=p->next;", "}", "while(p!=0);", "printf(\u201c\\n\\n\u201d);", "}", "\u00a0", "main()", "{", "double\u00a0 s[N]={85,76,69,85,91,72,64,87}, max;", "STREC\u00a0 *h;", "h=creat(s);", "outlist(h);", "max=fun(h);", "printf(\u201cmax=%6.1f\\n\u201d,max);", "}", "\u00a0", "76\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u5c06\u957f\u6574\u578b\u6570\u4e2d\u6bcf\u4e00\u4f4d\u4e0a\u4e3a\u5076\u6570\u7684\u6570\u4f9d\u6b21\u53d6\u51fa\uff0c\u6784\u6210\u4e00\u4e2a\u65b0\u6570\u653e\u5728t\u4e2d\u3002\u9ad8\u4f4d\u4ecd\u5728\u9ad8\u4f4d\uff0c\u4f4e\u4f4d\u4ecd\u5728\u4f4e\u4f4d\u3002\u4f8b\u5982\uff0c\u5f53s\u4e2d\u7684\u6570\u4e3a87653142\u65f6\uff0ct\u4e2d\u7684\u6570\u4e3a8642\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5219\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <conio.h>", "#include <stdio.h>", "\u00a0", "void fun(long s,long *t)", "{", "/********found********/", "int d;", "long s1=1;", "*t=0;", "while(s>0)", "{", "d=s%10;", "if (d%2==0)", "{", "*t=d* s1+*t;", "s1*=10;", "}", "/********found********/", "s \\=10;", "}", "}", "main()", "{", "long\u00a0 s, t;", "clrscr();", "printf(\u201c\\nPlease enter s:\u201d);", "scanf(\u201c%ld\u201d, &s);", "fun(s, &t);", "printf(\u201cThe result is :%ld\\n\u201d, t);", "}", "\u00a0", "\u00a0", "78\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u5224\u65ad\u4e00\u4e2a\u6574\u6570m\u662f\u5426\u662f\u7d20\u6570\uff0c\u82e5\u662f\u8fd4\u56de1\uff0c\u5426", "\u5219\u8fd4\u56de0\u3002\u5728main\uff08\uff09\u51fd\u6570\u4e2d\uff0c\u82e5fun\u8fd4\u56de1\u5219\u8f93\u51faYES\uff0c\u82e5fun\u8fd4\u56de0\u5219\u8f93\u51faNO!\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <conio.h>", "#include <stdio.h>", "\u00a0", "int fun(int m)", "{", "int k=2;", "while(k<=m&&(m%k))", "/********found********/", "k++", "/********found********/", "if(m=k)", "return 1;", "else", "return 0;", "}", "\u00a0", "main( )", "{", "int n;", "clrscr( );", "printf( \u201c\\nPlease enter n:\u201d );", "scanf( \u201c%d\u201d,&n );", "if( fun ( n ) )", "printf( \u201cYES\\n\u201d );", "else", "printf(\u201cNO!\\n\u201d);", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u4e09\u5341\u5957\uff09"},
{"contents": ["13\uff0e\u8bf7\u7f16\u4e00\u4e2a\u51fd\u6570void fun(int tt[M][N]\uff0cint pp[N])\uff0ctt\u6307\u5411\u4e00\u4e2aM\u884cN\u5217\u7684\u4e8c\u7ef4\u6570\u7ec4\uff0c\u6c42\u51fa\u4e8c\u7ef4\u6570\u7ec4\u6bcf\u5217\u4e2d\u6700\u5c0f\u5143\u7d20\uff0c\u5e76\u4f9d\u6b21\u653e\u5165pp\u6240\u6307\u4e00\u7ef4\u6570\u7ec4\u4e2d\u3002\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u7684\u6570\u5df2\u5728\u4e3b\u51fd\u6570\u4e2d\u8d4b\u4e88\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570n\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <conio.h>", "#include <stdio.h>", "#define\u00a0 M\u00a0 3", "#define\u00a0 N\u00a0 4", "\u00a0", "void fun ( int tt[M][N],int pp[N] )", "{", "}", "\u00a0", "main( )", "{", "int t [ M ][ N ]={{22,45, 56,30},", "{19,33, 45,38},", "{20,22, 66,40}};", "int\u00a0 p [ N ],\u00a0 i,\u00a0 j,\u00a0 k;", "clrscr();", "printf ( \u201cThe original data is : \\n\u201d );", "for( i=0; i<M; i++ ){", "for( j=0; j<N; j++ )", "printf ( \u201c%6d\u201d, t[i][j] );", "printf(\u201c\\n\u201d);", "}", "fun ( t, p );", "printf( \u201c\\nThe result\u00a0 is:\\n\u201d );", "for ( k = 0; k < N; k++ )", "printf ( \u201d %4d \u201c, p[ k ] );", "printf(\u201c\\n\u201d);", "}", "\u00a0", "14\uff0e\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u51fd\u6570\u7684\u529f\u80fd\u662f\u6c42\u51fa\u4e8c\u7ef4\u6570\u7ec4\u5468\u8fb9\u5143\u7d20\u4e4b\u548c\uff0c\u4f5c\u4e3a\u51fd\u6570\u503c\u8fd4\u56de\u3002\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u7684\u503c\u5728\u4e3b\u51fd\u6570\u4e2d\u8d4b\u4e88\u3002", "\u4f8b\u5982\uff1a\u82e5\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u7684\u503c\u4e3a\uff1a\uff0c\u5219\u51fd\u6570\u503c\u4e3a61\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <conio.h>", "#include <stdio.h>", "#define\u00a0 M\u00a0 4", "#define\u00a0 N\u00a0 5", "\u00a0", "int\u00a0 fun ( int a[M][N] )", "{", "}", "\u00a0", "main( )", "{", "int\u00a0 aa[M][N]={{1,3,5,7,9},", "{2,9,9,9,4},", "{6,9,9,9,8},", "{1,3,5,7,0}};", "int\u00a0 i, j, y;", "clrscr();", "printf ( \u201cThe original data is : \\n\u201d );", "for ( i=0; i<M; i++ )", "{", "for ( j=0; j<N; j++ )", "printf( \u201c%6d\u201d, aa[i][j] );", "printf (\u201c\\n\u201d);", "}", "y = fun ( aa );", "printf( \u201c\\nThe\u00a0 sum:\u00a0 %d\\n\u201d , y);", "printf(\u201c\\n\u201d);", "}", "\u00a0", "72\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u7edf\u8ba1\u5b50\u5b57\u7b26\u4e32substr\u5728\u5b57\u7b26\u4e32str\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u3002\u4f8b\u5982\uff0c\u82e5\u5b57\u7b26\u4e32\u4e3aaaas lkaaas\uff0c\u5b50\u5b57\u7b26\u4e32\u4e3aas\uff0c\u5219\u5e94\u8f93\u51fa2\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u8ba1\u7b97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include<stdio.h>", "\u00a0", "/********found********/", "fun(char *str,char *substr)", "{", "int i,j,k,num=0;", "/********found********/", "for(i = 0, str[i], i++)", "for(j=i,k=0;substr[k]==str[j];k++,j++)", "if(substr[k+1]==\u2019\\0\u2032)", "{", "num++;", "break;", "}", "return num;", "}", "\u00a0", "main()", "{", "char str[80],substr[80];", "printf(\u201cInput a string:\u201d);", "gets(str);", "printf(\u201cInput a substring:\u201d);", "gets(substr);", "printf(\u201c%d\\n\u201d,fun(str,substr));", "}", "\u00a0", "\u00a0", "75\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u8f93\u51faM\u884cM\u5217\u6574\u6570\u65b9\u9635\uff0c\u7136\u540e\u6c42\u4e24\u6761\u5bf9\u89d2\u7ebf\u4e0a\u5404\u5143\u7d20\u4e4b\u548c\uff0c\u8fd4\u56de\u6b64\u548c\u6570\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u8f7b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include<conio.h>", "#include<stdio.h>", "\u00a0", "#define M 5", "/********found********/", "int fun(int m, int xx[][])", "{", "int i,j,sum=0;", "printf(\u201c\\nThe %d x %d matrix:\\n\u201d,M,M );", "for(i=0;i<m;i++)", "{", "/********found********/", "for(j=0;j<m;j++)", "printf(\u201c%4f\u201d,xx[i][j]);", "printf(\u201c\\n\u201d);", "}", "\u00a0", "for(i=0;i<m;i++)", "sum+=xx[i][i]+xx[i][m-i-1];", "if(m%2!=0)", "sum-=xx[m/2][m/2];", "return(sum);", "}", "\u00a0", "main( )", "{", "int aa[M][M]={{1,2,3,4,5},{4,3,2,1,0},", "{6,7,8,9,0},{9,8,7,6,5},{3,4,5,6,7}};", "clrscr();", "printf(\u201c\\nThe sum of all elements on 2 diagnal is %d.\u201d,fun(M,aa));", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u4e8c\u5341\u4e5d\u5957\uff09"},
{"contents": ["11\uff0e\u4e0b\u5217\u7a0b\u5e8f\u5b9a\u4e49\u4e86NXN\u7684\u4e8c\u7ef4\u6570\u7ec4\uff0c\u5e76\u5728\u4e3b\u51fd\u6570\u4e2d\u81ea\u52a8\u8d4b\u503c\u3002\u8bf7\u7f16\u5199\u51fd\u6570fun(int a[][N]\uff0c\u8be5\u51fd\u6570\u7684\u529f\u80fd\u662f\uff1a\u4f7f\u6570\u7ec4\u5de6\u4e0b\u534a\u4e09\u89d2\u5143\u7d20\u4e2d\u7684\u503c\u5168\u90e8\u7f6e\u62100\u3002\u4f8b\u5982\uff1aa\u6570\u7ec4\u4e2d\u7684\u503c\u4e3a\uff1a", "\uff0c\u5219\u8fd4\u56de\u4e3b\u7a0b\u5e8f\u540ea\u6570\u7ec4\u4e2d\u7684\u503c\u5e94\u4e3a\uff1a\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "#include <conio.h>", "#include <stdlib.h>", "#define N 5", "\u00a0", "void fun(int a[][N])", "{", "\u00a0", "}", "main()", "{", "int a[N][N],i,j;", "clrscr();", "printf(\u201c***** The array *****\\n\u201d);", "for(i=0;i<N;i++)", "{", "for(j=0;j<N;j++)", "{", "a[i][j]=rand()%10;", "printf(\u201c%4d\u201d,a[i][j]);", "}", "printf(\u201c\\n\u201d);", "}", "fun(a);", "printf(\u201cTHE RESULT\\n\u201d);", "for(i=0;i<N;i++)", "{", "for(j=0;j<N;j++)", "printf(\u201c%4d\u201d,a[i][j]);", "printf(\u201c\\n\u201d);", "}", "}", "\u00a0", "12\uff0e\u4e0b\u5217\u7a0b\u5e8f\u5b9a\u4e49\u4e86NXN\u7684\u4e8c\u7ef4\u6570\u7ec4\uff0c\u5e76\u5728\u4e3b\u51fd\u6570\u4e2d\u8d4b\u503c\u3002\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u51fd\u6570\u7684\u529f\u80fd\u662f\uff1a\u6c42\u51fa\u6570\u7ec4\u5468\u8fb9\u5143\u7d20\u7684\u5e73\u5747\u503c\u5e76\u4f5c\u4e3a\u51fd\u6570\u503c\u8fd4\u56de\u7ed9\u4e3b\u51fd\u6570\u4e2d\u7684s\u3002\u4f8b\u5982\uff1a\u82e5a\u6570\u7ec4\u4e2d\u7684\u503c\u4e3a\uff1a", "\uff0c\u5219\u8fd4\u56de\u4e3b\u7a0b\u5e8f\u540es\u7684\u503c\u5e94\u4e3a3.375\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "#include <conio.h>", "#include <stdlib.h>", "#define N 5", "\u00a0", "double fun (int w[][N])", "{", "}", "\u00a0", "main()", "{", "int a[N][N]={0,1,2,7,9,1,9,7,4,5,2,3,8,3,1,4,5,6,8,2,5,9,1,4,1};", "int i,j;", "double s;", "clrscr();", "printf(\u201c***** The array *****\\n\u201d);", "for(i=0;i<N;i++)", "{", "for(j=0;j<N;j++)", "{", "printf(\u201c%4d\u201d,a[i][j]);", "}", "printf(\u201c\\n\u201d);", "}", "s=fun(a);", "printf(\u201c***** THE RESULT *****\\n\u201d);", "printf(\u201cThe sum is %lf\\n\u201d,s);", "}", "\u00a0", "67\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u5e94\u7528\u9012\u5f52\u7b97\u6cd5\u6c42\u67d0\u6570a\u7684\u5e73\u65b9\u6839\u3002\u6c42\u5e73\u65b9\u6839\u7684\u8fed\u4ee3\u516c\u5f0f\u5982\u4e0b\uff1a", "1\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 a", "x1= \uff0d\uff08x0 + \uff0d\uff09", "2\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 x0", "\u4f8b\u5982\uff0c2\u7684\u5e73\u65b9\u6839\u503c\u4e3a1.414214\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include\u00a0 <stdio.h>", "#include\u00a0 <math.h>", "\u00a0", "/********found********/", "fun(double a, double x0)", "{", "double\u00a0 x1, y;", "x1=(x0+ a/x0)/2.0;", "/********found********/", "if( fabs(x1-x0)>0.00001 )", "y=fun(a,x1);", "else", "y=x1;", "return y;", "}", "main( )", "{", "double x;", "printf(\u201cEnter x: \u201c);", "scanf(\u201c%lf\u201d,&x);", "printf(\u201cThe square root of %lf is %lf\\n\u201d,x,fun(x,1.0));", "}", "\u00a0", "\u00a0", "70\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u4ece\u6574\u65701\u523055\u4e4b\u95f4\uff0c\u9009\u51fa\u80fd\u88ab3\u6574\u9664\u3001\u4e14\u6709\u4e00\u4f4d\u4e0a\u7684\u6570\u662f5\u7684\u90a3\u4e9b\u6570\uff0c\u5e76\u628a\u8fd9\u4e9b\u6570\u653e\u5728b\u6240\u6307\u7684\u6570\u7ec4\u4e2d\uff0c\u8fd9\u4e9b\u6570\u7684\u4e2a\u6570\u4f5c\u4e3a\u51fd\u6570\u503c\u8fd4\u56de\u3002\u89c4\u5b9a\uff0c\u51fd\u6570\u4e2da1\u653e\u4e2a\u4f4d\u6570\uff0ca2\u653e\u5341\u4f4d\u6570\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u7a0b\u5e8f\u80fd\u5f97\u51fa\u6b63\u786e\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784\u3002", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include<stdio.h>", "\u00a0", "/********found********/", "fun( int\u00a0 *b )", "{", "int\u00a0 k,a1,a2,i=0;", "/********found********/", "for(k=10; k<=55; k++)", "{", "a2=k/10;", "a1=k-a2*10;", "if((k%3==0 && a2==5)||(k%3==0 && a1==5))", "{", "b[i]=k;", "i++;", "}", "}", "/********found********/", "return k;", "}", "main( )", "{", "int\u00a0 a[100],k,m;", "m=fun( a );", "printf(\u201cThe result is:\\n\u201d);", "for(k=0; k<m; k++)", "printf(\u201c%4d\u201d,a[k]);", "printf(\u201c\\n\u201d);", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u4e8c\u5341\u516b\u5957\uff09"},
{"contents": ["5\uff0e\u8bf7\u7f16\u5199\u4e00\u4e2a\u51fd\u6570void fun(int m\uff0cint k\uff0cint xx[])\uff0c\u8be5\u51fd\u6570\u7684\u529f\u80fd\u662f\uff1a\u5c06\u5927\u4e8e\u6574\u6570m\u4e14\u7d27\u9760m\u7684k\u4e2a\u7d20\u6570\u5b58\u5165xx\u6240\u6307\u7684\u6570\u7ec4\u4e2d\u3002", "\u4f8b\u5982\uff0c\u82e5\u8f93\u5165\uff1a17\uff0c5\uff0c\u5219\u5e94\u8f93\u51fa\uff1a19\uff0c23\uff0c29\uff0c31\uff0c37\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <conio.h>", "#include <stdio.h>", "void fun(int m, int k, int xx[])", "{", "\u00a0", "}", "main()", "{", "int m,n,zz[1000];", "clrscr();", "printf(\u201c\\nPlease enter two integers:\u201d);", "scanf(\u201c%d,%d\u201d,&m,&n);", "fun( m,n,zz);", "for(m=0; m<n; m++)", "printf(\u201c%d \u201c, zz[m]);", "printf(\u201c\\n\u201d);", "}", "\u00a0", "9\uff0e\u7f16\u5199\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\uff1a\u6839\u636e\u4ee5\u4e0b\u516c\u5f0f\u6c42P\u7684\u503c\uff0c\u7ed3\u679c\u7531\u51fd\u6570\u503c\u5e26\u56de\u3002m\u4e0en\u4e3a\u4e24\u4e2a\u6b63\u6574\u6570\u4e14\u8981\u6c42m>n\u3002", "\u00a0", "\u4f8b\u5982\uff1am=12\uff0cn=8\u65f6\uff0c\u8fd0\u884c\u7ed3\u679c\u4e3a495.000000\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <conio.h>", "#include <stdio.h>", "float fun( int m, int n)", "{", "\u00a0", "}", "main()", "{", "clrscr();", "printf(\u201cP=%f\\n\u201d, fun(12,8));", "}", "\u00a0", "65\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u4ece\u4f4e\u4f4d\u5f00\u59cb\u53d6\u51fa\u957f\u6574\u578b\u53d8\u91cfs\u4e2d\u5947\u6570\u4f4d\u4e0a\u7684\u6570\uff0c\u4f9d\u6b21\u6784\u6210\u4e00\u4e2a\u65b0\u6570\u653e\u5728t\u4e2d\u3002\u4f8b\u5982\uff0c\u5f53s\u4e2d\u7684\u6570\u4e3a7654321\u65f6\uff0ct\u4e2d\u7684\u6570\u4e3a7531\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include<conio.h>", "#include<stdio.h>", "\u00a0", "/********found********/", "void fun(long\u00a0 s, long t)", "{", "long\u00a0 s1=10;", "*t = s % 10;", "while ( s > 0)", "{", "s = s/100;", "*t = s%10 * s1 + *t;", "/********found********/", "s1 = s1*100;", "}", "}", "\u00a0", "main()", "{", "long s, t;", "clrscr();", "printf(\u201c\\nPlease enter s:\u201d);", "scanf(\u201c%ld\u201d, &s);", "fun(s, &t);", "printf(\u201cThe result is: %ld\\n\u201d, t);", "}", "\u00a0", "\u00a0", "66\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0cfun\u51fd\u6570\u7684\u529f\u80fd\u662f\uff1a\u6c42\u51fa\u4ee5\u4e0b\u5206\u6570\u5e8f\u5217\u7684\u524dn\u9879\u4e4b\u548c\u3002", "2\u00a0\u00a0\u00a0 3\u00a0\u00a0\u00a0 5\u00a0\u00a0\u00a0 8\u00a0\u00a0\u00a0 13\u00a0\u00a0\u00a0 21", "\uff0d\u00a0\u00a0 \uff0d\u00a0\u00a0 \uff0d\u00a0\u00a0 \uff0d\u00a0\u00a0 \uff0d\u00a0\u00a0\u00a0 \uff0d", "1\uff0c\u00a0 2\uff0c\u00a0 3\uff0c\u00a0 5\uff0c\u00a0 8\uff0c\u00a0 \u00a013\uff0c\u2026", "\u548c\u503c\u901a\u8fc7\u51fd\u6570\u503c\u8fd4\u56demain()\u51fd\u6570\u3002\u4f8b\u5982\uff0c\u82e5n=5\uff0c\u5219\u5e94\u8f93\u51fa8.391667\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <conio.h>", "#include <stdio.h>", "\u00a0", "/********found********/", "fun (int n )", "{", "int a=2, b=1, c, k ;", "double s=0.0 ;", "for ( k = 1; k <= n; k++ )", "{", "s = s + 1.0 * a / b ;", "/********found********/", "c = a;", "a += b;", "b += c;", "}", "return s;", "}", "\u00a0", "main( )", "{", "int\u00a0 n = 5 ;", "clrscr( ) ;", "printf(\u201c\\nThe value of function is :%lf\\n\u201d,\u00a0 fun ( n ) ) ;", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u4e8c\u5341\u4e03\u5957\uff09"},
{"contents": ["63\uff0e\u8bf7\u7f16\u5199\u4e00\u4e2a\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\uff1a\u8ba1\u7b97\u5e76\u8f93\u51fa\u7ed9\u5b9a\u6574\u6570n\u7684\u6240\u6709\u56e0\u5b50(\u4e0d\u5305\u62ec1\u4e0e\u81ea\u8eab)\u4e4b\u548c\u3002\u89c4\u5b9an\u7684\u503c\u4e0d\u5927\u4e8e1000\u3002\u5907\u6ce8\uff1a\u6574\u6570n\u7684\u56e0\u5b50\uff0dn\u53ef\u4ee5\u6574\u9664\u7684\u6570\u3002", "\u4f8b\u5982\uff0c\u82e5\u4e3b\u51fd\u6570\u4ece\u952e\u76d8\u7ed9n\u8f93\u5165\u7684\u503c\u4e3a856\uff0c\u5219\u8f93\u51fa\u4e3asum=763\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "\u00a0", "int fun(int n)", "{", "}", "\u00a0", "main()", "{", "int\u00a0 n,sum;", "printf(\u201cInput n:\u00a0 \u201c);", "scanf(\u201c%d\u201d,&n);", "sum=fun(n);", "printf(\u201csum=%d\\n\u201d,sum);", "}", "\u00a0", "64\uff0e\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5176\u529f\u80fd\u662f\uff1a\u5c06s\u6240\u6307\u5b57\u7b26\u4e32\u4e2dASCII\u503c\u4e3a\u5947\u6570\u7684\u5b57\u7b26\u5220\u9664\uff0c\u4e32\u4e2d\u5269\u4f59\u5b57\u7b26\u5f62\u6210\u4e00\u4e2a\u65b0\u4e32\u653e\u5728t\u6240\u6307\u7684\u6570\u7ec4\u4e2d\u3002", "\u4f8b\u5982\uff0c\u82e5s\u6240\u6307\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u4e3aABCDEFGl2345\uff0c\u5176\u4e2d\u5b57\u7b26A\u7684ASCII\u7801\u503c\u4e3a\u5947\u6570\u3001\u2026\u3001\u5b57\u7b261\u7684ASCII\u7801\u503c\u4e5f\u4e3a\u5947\u6570\u3001\u2026\u90fd\u5e94\u5f53\u5220\u9664\uff0c\u5176\u4ed6\u4f9d\u6b21\u7c7b\u63a8\u3002\u6700\u540et\u6240\u6307\u7684\u6570\u7ec4\u4e2d\u7684\u5185\u5bb9\u5e94\u662fBDF24\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <conio.h>", "#include <stdio.h>", "#include <string.h>", "\u00a0", "void fun( char *s, char t[])", "{", "}", "\u00a0", "main()", "{", "char\u00a0 s[100],\u00a0 t[100];", "clrscr();", "printf(\u201c\\nPlease enter string S:\u201d);", "scanf(\u201c%s\u201d, s);", "fun(s, t);", "printf(\u201c\\nThe result is :%s\\n\u201d, t);", "}", "\u00a0", "94\uff0e\u5728\u4e3b\u51fd\u6570\u4e2d\u4ece\u952e\u76d8\u8f93\u5165\u82e5\u5e72\u4e2a\u6570\u653e\u5165\u6570\u7ec4\u4e2d\uff0c\u75280\u7ed3\u675f\u8f93\u5165\u5e76\u653e\u5728\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e2d\u3002\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u8ba1\u7b97\u6570\u7ec4\u5143\u7d20\u4e2d\u503c\u4e3a\u6b63\u6570\u7684\u5e73\u5747\u503c(\u4e0d\u5305\u62ec0)\u3002\u4f8b\u5982\uff1a\u6570\u7ec4\u4e2d\u5143\u7d20\u4e2d\u7684\u503c\u4f9d\u6b21\u4e3a39\uff0c-47\uff0c21\uff0c2\uff0c-8\uff0c15\uff0c0\uff0c\u5219\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u4e3al9\uff0e250000\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <conio.h>", "#include <stdio.h>", "\u00a0", "double fun(int x[])", "{", "/********found********/", "int sum=0.0;", "int c=0,i=0;", "while (x[i]!=0)", "{", "if(x[i]>0)", "{", "sum+=x[i];", "c++;", "}", "i++;", "}", "/********found********/", "sum \\=c;", "return sum;", "}", "\u00a0", "main( )", "{", "int x[1000];", "int i=0;", "clrscr();", "printf(\u201c\\nPlease enter some data(end with 0):\u201d);", "do", "{", "scanf(\u201c%d\u201d,&x[i]);", "}", "while(x[i++]!=0) ;", "printf(\u201c%lf\\n\u201d,fun(x));", "}", "\u00a0", "\u00a0", "95\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u8ba1\u7b97\u5e76\u8f93\u51fa\u4e0b\u5217\u7ea7\u6570\u7684\u524dN\u9879\u4e4b\u548cS", "\u3002\uff0c\u76f4\u5230", "S", "\u5927\u4e8eq\u4e3a\u6b62\uff0cq\u7684\u503c\u901a\u8fc7\u5f62\u53c2\u4f20\u5165\u3002", "2\u00a0 \u00a03 \u00a0\u00a0\u00a04\u00a0\u00a0\u00a0 \u00a0N+1", "S", "=\uff0d + \uff0d + \uff0d+\u2026+\uff0d", "1\u00a0 \u00a02\u00a0 \u00a0\u00a03\u00a0\u00a0 \u00a0\u00a0\u00a0N", "\u4f8b\u5982\uff0c\u82e5q\u7684\u503c\u4e3a50.0\uff0c\u5219\u51fd\u6570\u503c\u4e3a49.394948\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u7a0b\u5e8f\u80fd\u8f93\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <conio.h>", "#include <stdio.h>", "\u00a0", "double fun(double q)", "{", "int n; double s,t;", "n=2;", "s=2.0;", "while(s<=q)", "{", "t=s;", "/********found********/", "s=s+(n+1)/n;", "n++;", "}", "printf(\u201cn=%d\\n\u201d,n);", "/********found********/", "return s;", "}", "\u00a0", "main( )", "{\u00a0 clrscr( );", "printf(\u201c%f\\n\u201d,fun(50));", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u4e09\u5341\u516d\u5957\uff09"},
{"contents": ["94\uff0e\u89c4\u5b9a\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u4e2d\u53ea\u5305\u542b\u5b57\u6bcd\u548c*\u53f7\u3002\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\uff1a\u5c06\u5b57\u7b26\u4e32\u4e2d\u7684\u524d\u5bfc*\u53f7\u5168\u90e8\u5220\u9664\uff0c\u4e2d\u95f4\u548c\u5c3e\u90e8\u7684*\u53f7\u4e0d\u5220\u9664\u3002", "\u4f8b\u5982\uff0c\u82e5\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u4e3a*******A*BC*DEF*G****\uff0c\u5220\u9664\u540e\uff0c\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u5219\u5e94\u5f53\u662f\u00a0 A*BC*DEF*G****\u3002\u5728\u7f16\u5199\u51fd\u6570\u65f6\uff0c\u4e0d\u5f97\u4f7f\u7528C\u8bed\u8a00\u63d0\u4f9b\u7684\u5b57\u7b26\u4e32\u51fd\u6570\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "#include <conio.h>", "void fun(char *a)", "{", "}", "main()", "{", "char s[81];", "printf(\u201cEnter a string :\\n\u201d);", "gets(s);", "fun(s);", "printf(\u201cThe string after deleted :\\n\u201d);", "puts(s);", "}", "\u00a0", "96\uff0e\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5176\u529f\u80fd\u662f\uff1a\u8ba1\u7b97\u5e76\u8f93\u51fa\u7ed9\u5b9a\u6570\u7ec4\uff08\u957f\u5ea6\u4e3a9\uff09\u4e2d\u6bcf\u76f8\u90bb\u4e24\u4e2a\u5143\u7d20\u4e4b\u5e73\u5747\u503c\u7684\u5e73\u65b9\u6839\u4e4b\u548c\u3002", "\u4f8b\u5982\uff0c\u82e5\u7ed9\u5b9a\u6570\u7ec4\u4e2d\u76849\u4e2a\u5143\u7d20\u4f9d\u6b21\u4e3a12.0\u300134.0\u30014.0\u300123.0\u300134.0\u300145.0\u300118.0\u30013.0\u300111.0\uff0c\u5219\u8f93\u51fa\u5e94\u4e3as=35.951014\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "#include <math.h>", "double fun(double x[9])", "{", "}", "main()", "{", "double s,a[9]={12.0,34.0,4.0,23.0,34.0,45.0,18.0,3.0,11.0};", "int i;", "printf(\u201c\\nThe original data is :\\n\u201d);", "for(i=0;i<9;i++)", "printf(\u201c%6.1f\u201d,a[i]);", "printf(\u201c\\n\\n\u201d);", "s=fun(a);", "printf(\u201cs=%f\\n\\n\u201d,s);", "}", "\u00a0", "57\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u9996\u5148\u628ab\u6240\u6307\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u6309\u9006\u5e8f\u5b58\u653e\uff0c\u7136\u540e\u5c06a\u6240\u6307\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u548cb\u6240\u6307\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\uff0c\u6309\u6392\u5217\u7684\u987a\u5e8f\u4ea4\u53c9\u5408\u5e76\u5230c\u6240\u6307\u6570\u7ec4\u4e2d\uff0c\u8fc7\u957f\u7684\u5269\u4f59\u5b57\u7b26\u63a5\u5728c\u6240\u6307\u6570\u7ec4\u7684\u5c3e\u90e8\u3002\u4f8b\u5982\uff0c\u5f53a\u6240\u6307\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u4e3aabcdefg\uff0cb\u6240\u6307\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u4e3a1234\u65f6\uff0cc\u6240\u6307\u6570\u7ec4\u4e2d\u7684\u5185\u5bb9\u5e94\u8be5\u4e3aa4b3c2d1efg\uff1b\u800c\u5f53a\u6240\u6307\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u4e3a1234\uff0cb\u6240\u6307\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u4e3aabcdefg\u65f6\uff0cc\u6240\u6307\u6570\u7ec4\u4e2d\u7684\u5185\u5bb9\u5e94\u8be5\u4e3a1g2f3e4dcba\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <conio.h>", "#include <stdio.h>", "#include <string.h>", "void fun( char *a, char *b, char *c )", "{", "int\u00a0 i, j;", "char\u00a0 ch;", "i = 0;", "j = strlen(b)-1;", "/********found********/", "while ( i > j )", "{", "ch = b[i];", "b[i] = b[j];", "b[j] = ch;", "i++;", "j\u2013;", "}", "while ( *a || *b )", "{", "if ( *a )", "{", "*c = *a;", "c++;", "a++;", "}", "if ( *b )", "{", "*c = *b;", "c++;", "b++;", "}", "}", "/********found********/", "c= 0;", "}", "\u00a0", "main()", "{", "char\u00a0 s1[100],s2[100],t[200];", "clrscr();", "printf(\u201c\\nEnter s1 string : \u201c);", "scanf(\u201c%s\u201d,s1);", "printf(\u201c\\nEnter s2 steing : \u201c);", "scanf(\u201c%s\u201d,s2);", "fun( s1, s2, t );", "printf(\u201c\\nThe result is : %s\\n\u201d, t );", "}", "\u00a0", "58\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u5148\u5c06\u5728\u5b57\u7b26\u4e32s\u4e2d\u7684\u5b57\u7b26\u6309\u6b63\u5e8f\u5b58\u653e\u5230t\u4e32\u4e2d\uff0c\u7136\u540e\u628as\u4e2d\u7684\u5b57\u7b26\u6309\u9006\u5e8f\u8fde\u63a5\u5230t\u4e32\u7684\u5386\u9762\u3002\u4f8b\u5982\uff1a\u5f53s\u4e2d\u7684\u5b57\u7b26\u4e32\u4e3aABCDE\u65f6\uff0c\u5219t\u4e2d\u7684\u5b57\u7b26\u4e32\u5e94\u4e3aABCDEEDCBA\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <conio.h>", "#include <stdio.h>", "#include <string.h>", "void fun(char\u00a0 *s, char\u00a0 *t)", "{", "int i, s1;", "s1 = strlen(s);", "/********found********/", "for( i=0; i<=s1; i ++)", "t[i] = s[i];", "for (i=0; i<s1; i++)", "t[s1+i] = s[s1-i-1];", "/********found********/", "t[s1]=\u2019\\0\u2032;", "}", "main()", "{", "char s[100], t[100];", "clrscr();", "printf(\u201c\\nPlease enter string s:\u201d);", "scanf(\u201c%s\u201d, s);", "fun(s, t);", "printf(\u201cThe result is: %s\\n\u201d, t);", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u4e8c\u5341\u4e94\u5957\uff09"},
{"contents": ["88\uff0e\u5047\u5b9a\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u4e2d\u53ea\u5305\u542b\u5b57\u6bcd\u548c*\u53f7\u3002\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\uff1a\u9664\u4e86\u5b57\u7b26\u4e32\u524d\u5bfc\u7684*\u53f7\u4e4b\u5916\uff0c\u5c06\u4e32\u4e2d\u5176\u4ed6*\u53f7\u5168\u90e8\u5220\u9664\u3002\u5728\u7f16\u5199\u51fd\u6570\u65f6\uff0c\u4e0d\u5f97\u4f7f\u7528C\u8bed\u8a00\u63d0\u4f9b\u7684\u5b57\u7b26\u4e32\u51fd\u6570\u3002", "\u4f8b\u5982\uff0c\u82e5\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u4e3a****A*BC*DEF*G*******\uff0c\u5220\u9664\u540e\uff0c\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u5219\u5e94\u5f53\u662f****ABCDEFG\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "#include <conio.h>", "\u00a0", "void fun(char *a)", "{", "}", "\u00a0", "main()", "{", "char\u00a0 s[81];", "printf(\u201cEnter a string :\\n\u201d);", "gets(s);", "fun( s );", "printf(\u201cThe string after deleted:\\n\u201d);", "puts(s);", "}", "\u00a0", "91\uff0e\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5176\u529f\u80fd\u662f\uff1a\u5c06\u4e24\u4e2a\u4e24\u4f4d\u6570\u7684\u6b63\u6574\u6570a\u3001b\u5408\u5e76\u5f62\u6210\u4e00\u4e2a\u6574\u6570\u653e\u5728c\u4e2d\u3002\u5408\u5e76\u7684\u65b9\u5f0f\u662f\uff1a\u5c06a\u6570\u7684\u5341\u4f4d\u548c\u4e2a\u4f4d\u6570\u4f9d\u6b21\u653e\u5728c\u6570\u7684\u5341\u4f4d\u548c\u5343\u4f4d\u4e0a\uff0cb\u6570\u7684\u5341\u4f4d\u548c\u4e2a\u4f4d\u6570\u4f9d\u6b21\u653e\u5728c\u6570\u7684\u4e2a\u4f4d\u548c\u767e\u4f4d\u4e0a\u3002", "\u4f8b\u5982\uff0c\u5f53a=45\uff0cb=12\uff0c\u8c03\u7528\u8be5\u51fd\u6570\u540e\uff0cc=5241\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <conio.h>", "#include <stdio.h>", "void fun(int a, int b, long *c)", "{", "}", "main()", "{", "int a,b;", "long c;", "clrscr();", "printf(\u201d Input a, b: \u201c);", "scanf(\u201c%d%d\u201d, &a,&b);", "fun(a,b,&c);", "printf(\u201d The result is :%ld\\n\u201d, c);", "}", "\u00a0", "51.\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u5c06m(1\u2264m\u226410)\u4e2a\u5b57\u7b26\u4e32\u8fde\u63a5\u8d77\u6765\uff0c\u7ec4\u6210\u4e00\u4e2a\u65b0\u4e32\uff0c\u653e\u5165pt\u6240\u6307\u5b57\u7b26\u4e32\u4e2d\u3002\u4f8b\u5982\uff1a\u628a3\u4e2a\u4e32abe\uff0cCD\uff0cEF\u4e32\u8fde\u8d77\u6765\uff0c\u7ed3\u679c\u662fabcCDEF\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u8ba1\u7b97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <conio.h>", "#include <stdio.h>", "#include <string.h>", "\u00a0", "/********found********/", "int\u00a0 fun ( char\u00a0 str[][10], int m, char *pt )", "{", "int k, q, i ;", "for ( k = 0; k < m; k++ )", "{", "q = strlen ( str [k] );", "/********found********/", "for (i=0; i<q; i++)", "pt[i] = str[k,i] ;", "pt += q ;", "pt[0] = 0 ;", "}", "}", "main( )", "{", "int\u00a0 m, h ;", "char s[10][10], p[120] ;", "clrscr() ;", "printf(\u201c\\nPlease enter m:\u201d ) ;", "scanf(\u201c%d\u201d, &m) ;", "gets(s[0]) ;", "printf( \u201c\\nPlease enter\u00a0 %d string:\\n\u201d, m );", "for ( h = 0; h < m; h++ )", "gets( s[h]) ;", "fun(s, m, p) ;", "printf( \u201c\\nThe result\u00a0 is : %s\\n\u201d, p) ;", "}", "\u00a0", "\u00a0", "54\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u5c06\u957f\u7684\u90a3\u4e2a\u5b57\u7b26\u4e32\u7684\u9996\u5730\u5740\u4f5c\u4e3a\u51fd\u6570\u503c\u8fd4\u56de\u3002", "\u8bf7\u6539\u6b63\u51fd\u6570fun\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include<conio.h>", "#include<stdio.h>", "/********found********/", "double fun(char*s, char*t)", "{", "int s1=0,t1=0;", "char *ss, *tt;", "ss=s;", "tt=t;", "/********found********/", "while(*ss)", "{", "s1++;", "(*ss)++;", "}", "/********found********/", "while(*tt)", "{", "t1++;", "(*tt)++;", "}", "if(t1>s1)", "return t;", "else", "return s;", "}", "main()", "{", "char a[80],b[80],*p,*q;", "int i;", "clrscr();", "printf(\u201c\\nEnter a string : \u201c);", "gets(a);", "printf(\u201c\\nEnter a string again : \u201c);", "gets(b);", "printf(\u201c\\nThe longer is :\\n\\n%s\\n\u201d,fun(a,b));", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u4e8c\u5341\u56db\u5957\uff09"},
{"contents": ["83\uff0e\u5047\u5b9a\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u4e2d\u53ea\u5305\u542b\u5b57\u6bcd\u548c*\u53f7\u3002\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\uff1a\u5c06\u5b57\u7b26\u4e32\u5c3e\u90e8\u7684*\u53f7\u5168\u90e8\u5220\u9664\uff0c\u524d\u9762\u548c\u4e2d\u95f4\u7684*\u53f7\u4e0d\u5220\u9664\u3002", "\u4f8b\u5982\uff0c\u82e5\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u4e3a****A*BC*DEF*G*******\uff0c\u5220\u9664\u540e\uff0c\u5b57\u7b26\u4e32\u4e2d\u7684\u5185\u5bb9\u5219\u5e94\u5f53\u662f****A*BC*DEF*G\u3002\u5728\u7f16\u5199\u51fd\u6570\u65f6\uff0c\u4e0d\u5f97\u4f7f\u7528C\u8bed\u8a00\u63d0\u4f9b\u7684\u5b57\u7b26\u4e32\u51fd\u6570\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "#include <conio.h>", "void fun(char *a)", "{", "\u00a0", "\u00a0", "\u00a0", "}", "main()", "{", "char s[81];", "printf(\u201cEnter a string:\\n\u201d);", "gets(s);", "fun( s );", "printf(\u201cThe string after deleted:\\n\u201d);", "puts(s);", "}", "\u00a0", "84\uff0e\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5176\u529f\u80fd\u662f\uff1a\u5c06\u4e24\u4e2a\u4e24\u4f4d\u6570\u7684\u6b63\u6574\u6570a\u3001b\u5408\u5e76\u5f62\u6210\u4e00\u4e2a\u6574\u6570\u653e\u5728c\u4e2d\u3002\u5408\u5e76\u7684\u65b9\u5f0f\u662f\uff1a\u5c06a\u6570\u7684\u5341\u4f4d\u548c\u4e2a\u4f4d\u6570\u4f9d\u6b21\u653e\u5728c\u6570\u7684\u4e2a\u4f4d\u548c\u767e\u4f4d\u4e0a\uff0cb\u6570\u7684\u5341\u4f4d\u548c\u4e2a\u4f4d\u6570\u4f9d\u6b21\u653e\u5728c\u6570\u7684\u5343\u4f4d\u548c\u5341\u4f4d\u4e0a\u3002", "\u4f8b\u5982\uff0c\u5f53a=45\uff0cb=12\uff0c\u8c03\u7528\u8be5\u51fd\u6570\u540e\uff0cc=1524\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <conio.h>", "#include <stdio.h>", "void fun(int a, int b, long *c)", "{", "}", "\u00a0", "main()", "{", "int a,b;", "long c;", "clrscr();", "printf(\u201d Input a, b: \u201c);", "scanf(\u201c%d%d\u201d, &a,&b);", "fun(a,b,&c);", "printf(\u201d The result is :%ld\\n\u201d, c);", "}", "\u00a0", "43.\u4e0b\u9762\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0e\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u627e\u51fa100\u81f3n(\u4e0d\u5927\u4e8e1000)\u4e4b\u95f4\u4e09\u4e2a\u4f4d\u4e0a\u7684\u6570\u5b57\u90fd\u76f8\u7b49\u7684\u6240\u6709\u6574\u6570\uff0c\u628a\u8fd9\u4e9b\u6574\u6570\u653e\u5728s\u6240\u6307\u6570\u7ec4\u4e2d\uff0c\u4e2a\u6570\u4f5c\u4e3a\u51fd\u6570\u503c\u8fd4\u56de\u3002", "\u8bf7\u6539\u6b63\u51fd\u6570fun\u4e2d\u7684\u9519\u8bef\uff0e\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u655b\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff1b\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include<stdio.h>", "#define\u00a0 N\u00a0 100", "int fun(int *s,int n)", "{", "int i,j,k,a,b,c;", "j=0;", "for(i=100; i<n; i++)", "{", "/********found********/", "k=n;", "a=k%10;", "k/=10;", "/********found********/", "b=k/10;", "c=k/10;", "if(a==b && a==c)s[j++]=i;", "}", "return j;", "}", "main()", "{", "int a[N], n, num=0, i;", "do", "{", "printf(\u201c\\nEnter n(<=1000): \u201c);", "scanf(\u201c%d\u201d,&n);", "}", "while(n >1000);", "num=fun(a,n);", "printf(\u201c\\n\\nThe result :\\n\u201d);", "for(i=0; i<num; i++)", "printf(\u201c%5d\u201d,a[i]);", "printf(\u201c\\n\\n\u201d);", "}", "\u00a0", "\u00a0", "44.\u4e0b\u5217\u7ed9\u51fa\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u6839\u636e\u5f62\u53c2m\u7684\u503c\uff082\u2264m\u22649\uff09\uff0c\u5728m\u884cm\u5217\u7684\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u5b58\u653e\u5982\u4e0b\u6240\u793a\u7684\u6570\u636e\uff0c\u7531main()\u51fd\u6570\u8f93\u53e3\u3002", "\u4f8b\u5982\uff0c\u82e5\u8f93\u51652\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u82e5\u8f93\u51654", "\u5219\u8f93\u51fa\uff1a\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u5219\u8f93\u51fa\uff1a", "1\u00a0 2\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1\u00a0\u00a0 2\u00a0\u00a0 3\u00a0\u00a0 4", "2 \u00a04\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 2\u00a0\u00a0 4\u00a0\u00a0 6\u00a0\u00a0 8", "3\u00a0\u00a0 6\u00a0\u00a0 9\u00a0\u00a0 12", "4\u00a0\u00a0 8\u00a0\u00a0 12\u00a0 16", "#include <stdio.h>", "#include <conio.h>", "#define M 10", "int\u00a0 a[M][M] = {0} ;", "\u00a0", "/********found********/", "fun(int **a,\u00a0 int m)", "{", "int j,k ;", "for ( j = 0 ; j < m ; j++ )", "for (k = 0 ; k < m ; k++ )", "/********found********/", "a[j][k] = k*j ;", "}", "\u00a0", "main ( )", "{", "int\u00a0 i, j, n ;", "clrscr( ) ;", "printf ( \u201d Enter n:\u201d ) ;", "scanf (\u201c%d\u201d, &n );", "fun ( a, n );", "for ( i = 0 ; i < n ; i++)", "{", "for (j = 0 ; j < n ; j++)", "printf ( \u201c%4d\u201d, a[i][j] );", "printf ( \u201c\\n\u201d ) ;", "}", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u4e8c\u5341\u4e8c\u5957\uff09"},
{"contents": ["85\uff0eN\u540d\u5b66\u751f\u7684\u6210\u7ee9\u5df2\u5728\u4e3b\u51fd\u6570\u4e2d\u653e\u5165\u4e00\u4e2a\u5e26\u5934\u8282\u70b9\u7684\u94fe\u8868\u7ed3\u6784\u4e2d\uff0ch\u6307\u5411\u94fe\u8868\u7684\u5934\u8282\u70b9\u3002\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\uff1a\u6c42\u51fa\u5e73\u5747\u5206\uff0c\u7531\u51fd\u6570\u503c\u8fd4\u56de\u3002", "\u4f8b\u5982\uff0c\u82e5\u5b66\u751f\u7684\u6210\u7ee9\u662f85\uff0c76\uff0c69\uff0c85\uff0c91\uff0c72\uff0c64\uff0c87\uff1b\u5219\u5e73\u5747\u5206\u5e94\u5f53\u662f78.625\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include\u00a0 <stdio.h>", "#include\u00a0 <stdlib.h>", "#define\u00a0\u00a0\u00a0 N\u00a0\u00a0 8", "\u00a0", "struct\u00a0 slist", "{", "double\u00a0\u00a0 s;", "struct\u00a0 slist\u00a0 *next;", "};", "\u00a0", "typedef\u00a0 struct\u00a0 slist\u00a0 STREC;", "\u00a0", "double\u00a0 fun ( STREC\u00a0 *h )", "{", "}", "STREC * creat ( double *s )", "{", "STREC\u00a0 *h, *p, *q;", "int\u00a0 i=0;", "h=p=( STREC* ) malloc (sizeof (STREC ) );", "p->s=0;", "while ( i<N )", "{", "q=( STREC* ) malloc (sizeof ( STREC ) );", "q->s=s[i];", "i++;", "p->next=q;", "p=q;", "}", "p->next=0;", "return\u00a0 h;", "}", "outlist ( STREC *h )", "{", "STREC\u00a0 *p;", "p=h->next;", "printf ( \u201d head \u201d );", "do", "{", "printf ( \u201c->%4.1f\u201d, p->s );", "p=p->next;", "}", "while ( p!=0 );", "printf ( \u201c\\n\\n\u201d );", "}", "\u00a0", "main ()", "{", "double\u00a0 s[N]={85, 76, 69, 85, 91, 72, 64, 87},\u00a0 ave;", "STREC\u00a0 *h;", "h=creat ( s );", "outlist (h);", "ave=fun ( h );", "printf ( \u201cave= %6.3f\\n\u201d, ave );", "}", "\u00a0", "87\uff0e\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5176\u529f\u80fd\u662f\uff1a\u5c06\u4e24\u4e2a\u4e24\u4f4d\u6570\u7684\u6b63\u6574\u6570a\u3001b\u5408\u5e76\u5f62\u6210\u4e00\u4e2a\u6574\u6570\u653e\u5728c\u4e2d\u3002\u5408\u5e76\u7684\u65b9\u5f0f\u662f\uff1a\u5c06a\u6570\u7684\u5341\u4f4d\u548c\u4e2a\u4f4d\u6570\u4f9d\u6b21\u653e\u5728c\u6570\u7684\u5343\u4f4d\u548c\u5341\u4f4d\u4e0a\uff0cb\u6570\u7684\u5341\u4f4d\u548c\u4e2a\u4f4d\u6570\u4f9d\u6b21\u653e\u5728c\u6570\u7684\u4e2a\u4f4d\u548c\u767e\u4f4d\u4e0a\u3002", "\u4f8b\u5982\uff0c\u5f53a=45\uff0cb=12\uff0c\u8c03\u7528\u8be5\u51fd\u6570\u540e\uff0cc=4251\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include\u00a0 <conio.h>", "#include\u00a0 <stdio.h>", "\u00a0", "void fun (int a, int b, long *c)", "{", "}", "\u00a0", "main ()", "{", "int\u00a0 a, b;", "long\u00a0 c;", "clrscr ();", "printf (\u201cInput\u00a0 a,\u00a0 b:\u201d);", "scanf (\u201c%d%d\u201d,\u00a0 &a,\u00a0 &b);", "fun ( a,\u00a0 b,\u00a0 &c );", "printf (\u201cThe\u00a0 result\u00a0 is:\u00a0 %ld\\n\u201d,\u00a0 c);", "}", "\u00a0", "46\uff0e\u5df2\u77e5\u4e00\u4e2a\u6570\u5217\u4ece\u7b2c0\u9879\u5f00\u59cb\u7684\u524d\u4e09\u9879\u5206\u522b\u4e3a0\u30010\u30011\uff0c\u4ee5\u540e\u7684\u5404\u9879\u90fd\u662f\u5176\u76f8\u90bb\u7684\u524d\u4e09\u9879\u4e4b\u548c\u3002\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u8ba1\u7b97\u5e76\u8f93\u51fa\u8be5\u6570\u5217\u524dn\u9879\u7684\u5e73\u65b9\u6839\u4e4b\u548csum\u3002n\u7684\u503c\u901a\u8fc7\u5f62\u53c2\u4f20\u5165\u3002\u4f8b\u5982\uff0c\u5f53n=10\u65f6\uff0c\u7a0b\u5e8f\u8f93\u51fa\u7ed3\u679c\u5e94\u4e3a23.197745\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u655b\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff1b\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <conio.h>", "#include <stdio.h>", "#include <math.h>", "/********found********/", "fun(int n)", "{", "double\u00a0 sum, \u00a0s0,\u00a0 s1,\u00a0 s2,\u00a0 s;", "int k;", "sum=1.0;", "if (n <= 2)", "sum = 0.0;", "s0 = 0.0;", "s1 = 0.0;", "s2 = 1.0;", "for (k = 4; k <= n; k++)", "{", "s = s0 + s1 + s2;", "sum += sqrt(s);", "s0 = s1;", "s1 = s2;", "s2 = s;", "}", "/********found********/", "return sum", "}", "main ( )", "{", "int n;", "clrscr( );", "printf(\u201cInput N=\u201d);", "scanf(\u201c%d\u201d,&n);", "printf(\u201c%f\\n\u201d,fun(n));", "}", "\u00a0", "\u00a0", "47\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u6c42\u51fa\u6570\u7ec4\u4e2d\u6700\u5927\u6570\u548c\u6b21\u6700\u5927\u6570\uff0c\u5e76\u628a\u6700\u5927\u6570\u548ca[0]\u4e2d\u7684\u6570\u5bf9\u8c03\u3001\u6b21\u6700\u5927\u6570\u548ca[1]\u4e2d\u7684\u6570\u5bf9\u8c03\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <conio.h>", "#include <stdio.h>", "#define N 20", "\u00a0", "/********found********/", "int fun ( int *a, int n )", "{", "int i, m, t, k ;", "for(i=0;i<2;i++)", "{", "/********found********/", "m=0;", "for(k=i;k<n;k++)", "if(a[k]>a[m])", "m=k;", "t=a[i];", "a[i]=a[m];", "a[m]=t;", "}", "}", "main( )", "{", "int\u00a0 x, b[N]={11,5,12,0,3,6,9,7,10,8}, n=10, i;", "clrscr( );", "for ( i=0; i<n; i++ )", "printf(\u201c%d\u00a0 \u201c, b[i]);", "printf(\u201c\\n\u201d);", "fun ( b, n );", "for ( i=0; i<n; i++ )", "printf(\u201c%d\u00a0 \u201c, b[i]);", "printf(\u201c\\n\u201d);", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u4e8c\u5341\u4e09\u5957\uff09"},
{"contents": ["79\uff0e\u5df2\u77e5\u5b66\u751f\u7684\u8bb0\u5f55\u7531\u5b66\u53f7\u548c\u5b66\u4e60\u6210\u7ee9\u6784\u6210\uff0cN\u540d\u5b66\u751f\u7684\u6570\u636e\u5df2\u5b58\u5165a\u7ed3\u6784\u4f53\u6570\u7ec4\u4e2d\u3002\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u8be5\u51fd\u6570\u7684\u529f\u80fd\u662f\uff1a\u627e\u51fa\u6210\u7ee9\u6700\u4f4e\u7684\u5b66\u751f\u8bb0\u5f55\uff0c\u901a\u8fc7\u5f62\u53c2\u8fd4\u56de\u4e3b\u51fd\u6570(\u89c4\u5b9a\u53ea\u6709\u4e00\u4e2a\u6700\u4f4e\u5206)\u3002\u5df2\u7ed9\u51fa\u51fd\u6570\u7684\u9996\u90e8\uff0c\u8bf7\u5b8c\u6210\u8be5\u51fd\u6570\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "#include <string.h>", "#include <conio.h>", "#define N 10", "typedef struct ss", "{", "char num[10];", "int s;", "} STU;", "void fun( STU a[], STU *s)", "{", "}", "main()", "{", "STU a[N]={ {\u201cA01\u2033,81},{\u201cA02\u2033,89},{\u201cA03\u2033,66},{\u201cA04\u2033,87},{\u201cA05\u2033,77},", "{\u201cA06\u2033,90},{\u201cA07\u2033,79},{\u201cA08\u2033,61},{\u201cA09\u2033,80},{\u201cA10\u2033,71} }, m ;", "int\u00a0 i;", "clrscr();", "printf(\u201c**** The original data *****\\n\u201d);", "for(i=0;i<N; i++)", "printf(\u201cN0=%s Mark=%d\\n\u201d, a[i].num,a[i].s);", "fun( a,&m);", "printf(\u201c***** THE RESULT *****\\n\u201d);", "printf(\u201d The lowest : %s ,%d\\n\u201d, m.num, m.s);", "}", "\u00a0", "81\uff0e\u8bf7\u7f16\u5199\u51fd\u6570\uff0c\u5176\u529f\u80fd\u662f\uff1a\u5c06\u4e24\u4e2a\u4e24\u4f4d\u6570\u7684\u6b63\u6574\u6570a\u3001b\u5408\u5e76\u5f62\u6210\u4e00\u4e2a\u6574\u6570\u653e\u5728c\u4e2d\u3002\u5408\u5e76\u7684\u65b9\u5f0f\u662f\uff1a\u5c06a\u6570\u7684\u5341\u4f4d\u548c\u4e2a\u4f4d\u6570\u4f9d\u6b21\u653e\u4f4fc\u6570\u7684\u767e\u4f4d\u548c\u4e2a\u4f4d\u4e0a\uff0cb\u6570\u7684\u5341\u4f4d\u548c\u4e2a\u4f4d\u6570\u4f9d\u6b21\u653ec\u6570\u7684\u5343\u4f4d\u548c\u5341\u4f4d\u4e0a\u3002", "\u4f8b\u5982\uff0ca=45\uff0cb=12\uff0c\u8c03\u7528\u8be5\u51fd\u6570\u540e\uff0cc=1425\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684", "\u82e5\u5e72\u8bed\u53e5\u3002", "#include\u00a0 <conio.h>", "#include\u00a0 <stdio.h>", "\u00a0", "void fun (int a, int b, long *c)", "{", "}", "\u00a0", "main ()", "{", "int\u00a0 a, b;", "long\u00a0 c;", "clrscr ();", "printf (\u201cInput\u00a0 a,\u00a0 b:\u201d);", "scanf (\u201c%d%d\u201d,\u00a0 &a,\u00a0 &b);", "fun ( a,\u00a0 b,\u00a0 &c );", "printf (\u201cThe\u00a0 result\u00a0 is:\u00a0 %ld\\n\u201d,\u00a0 c);", "}", "\u00a0", "41.\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u662f\u5efa\u7acb\u4e00\u4e2a\u5e26\u5934\u7ed3\u70b9\u7684\u5355\u5411\u94fe\u8868\uff0c\u5e76\u7528\u968f\u673a\u51fd\u6570\u4e3a\u5404\u7ed3\u70b9\u8d4b\u503c\u3002\u51fd\u6570fun\u7684\u529f\u80fd\u662f\u5c06\u5355\u5411\u94fe\u8868\u7ed3\u70b9(\u5305\u62ec\u5934\u7ed3\u70b9)\u6570\u636e\u57df\u4e3a\u5076\u6570\u7684\u503c\u7d2f\u52a0\u8d77\u6765\uff0c\u5e76\u4e14\u4f5c\u4e3a\u51fd\u6570\u503c\u8fd4\u56de\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include<stdio.h>", "#include<conio.h>", "#include<stdlib.h>", "typedef struct aa", "{", "int data;", "struct aa *next;", "}NODE;", "int fun(NODE *h)", "{", "int sum=0;", "NODE *p;", "p=h;", "/********found********/", "while(p->next)", "{", "if(p->data%2==0)", "sum +=p->data;", "/********found********/", "p=h->next;", "}", "return sum;", "}", "NODE *creatlink(int n)", "{", "NODE *h, *p, *s, *q;", "int i, x;", "h=p=(NODE *)malloc(sizeof(NODE));", "for(i=1;i<n; i++)", "{", "s=(NODE *)malloc(sizeof(NODE));", "s->data=rand()%16;", "s->next=p->next;", "p->next=s;", "p=p->next;", "}", "p->next=NULL;", "return h;", "}", "outlink(NODE *h,FILE *pf)", "{", "NODE *p;", "p=h->next;", "fprintf(pf,\u201d\\n\\nTHE LIST :\\n\\n HEAD\u201d);", "while(p)", "{", "fprintf(pf,\u201d->%d\u201d,p->data);", "p=p->next;", "}", "fprintf(pf,\u201d\\n\u201d);", "}", "outresult(int s,FILE*pf)", "{", "fprintf(pf,\u201d\\nThe sum of even numbers : %d\\n\u201d,s);", "}", "main()", "{", "NODE *head;", "int even;", "clrscr();", "head=creatlink(12);", "head->data=9000;", "outlink(head, stdout);", "even=fun(head);", "printf(\u201c\\nThe result :\\n\u201d);", "outresult(even, stdout);", "}", "\u00a0", "\u00a0", "42.\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0e\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u5c06\u5b57\u7b26\u4e32s\u4e2d\u4f4d\u4e8e\u5947\u6570\u4f4d\u7f6e\u7684\u5b57\u7b26\u6216ASCII\u7801\u4e3a\u5076\u6570\u7684\u5b57\u7b26\u4f9d\u6b21\u653e\u5165\u5b57\u7b26\u4e32t\u4e2d\u3002\u4f8b\u5982\uff0c\u5b57\u7b26\u4e32\u4e2d\u7684\u6570\u636e\u4e3aAABBCCDDEEFF\uff0c\u5219\u8f93\u51fa\u5e94\u5f53\u662fABBCDDEFF\u3002", "\u8bf7\u6539\u6b63\u51fd\u6570fun\u4e2d\u7684\u9519\u8bef\uff0e\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u655b\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff1b\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include<conio.h>", "#include<stdio.h>", "#include<string.h>", "#define N 80", "void fun(char *s, char t[])", "{", "int i, j=0;", "/********found********/", "for(i=0; i<strlen(s); i++)", "if(i%2 && s[i]%2==0)", "t[j++]=s[i];", "/********found********/", "t[i]=\u2019\\0\u2032;", "}", "main()", "{", "char s[N], t[N];", "clrscr();", "printf(\u201c\\nPlease enther string s:\u201d);", "gets(s);", "fun(s, t);", "printf(\u201c\\nThe result is : %s\\n\u201d,t);", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u4e8c\u5341\u4e00\u5957\uff09"},
{"contents": ["75\uff0e\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u8be5\u51fd\u6570\u7684\u529f\u80fd\u662f\uff1a\u5c06M\u884cN\u5217\u7684\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u7684\u6570\u636e\uff0c\u6309\u5217\u7684\u987a\u5e8f\u4f9d\u6b21\u653e\u5230\u4e00\u7ef4\u6570\u7ec4\u4e2d\u3002", "\u4f8b\u5982\uff0c\u82e5\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u7684\u6570\u636e\u4e3a\uff1a\uff0c\u5219\u4e00\u7ef4\u6570\u7ec4\u4e2d\u7684\u5185\u5bb9\u5e94\u662f\uff1a33\u00a0 44\u00a0 55\u00a0 33\u00a0 44\u00a0 55\u00a0 33\u00a0 44\u00a0 55\u00a0 33\u00a0 44\u00a0 55\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "void fun(int\u00a0 (*s)[10], int *b, int *n, int mm, int nn)", "{", "}", "main()", "{", "int w[10][10] = {{33,33,33,33},{44,44,44,44},{55,55,55,55}}, i, j ;", "int a[100] = {0}, n = 0 ;", "printf(\u201cThe matrix:\\n\u201d) ;", "for(i = 0 ; i < 3 ; i++)", "{", "for(j = 0 ; j < 4 ; j++)", "printf(\u201c%3d\u201d,w[i][j]) ;", "printf(\u201c\\n\u201d) ;", "}", "fun(w, a, &n, 3, 4) ;", "printf(\u201cThe A array:\\n\u201d) ;", "for(i = 0 ; i < n ; i++)", "printf(\u201c%3d\u201d,a[i]);", "printf(\u201c\\n\\n\u201d) ;", "}", "\u00a0", "77\uff0e\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5176\u529f\u80fd\u662f\uff1a\u5c06\u4e24\u4e2a\u4e24\u4f4d\u6570\u7684\u6b63\u6574\u6570a\u3001b\u5408\u5e76\u5f62\u6210\u4e00\u4e2a\u6574\u6570\u653e\u5728c\u4e2d\u3002\u5408\u5e76\u7684\u65b9\u5f0f\u662f\uff1a\u5c06a\u6570\u7684\u5341\u4f4d\u548c\u4e2a\u4f4d\u6570\u4f9d\u6b21\u653e\u5728c\u6570\u7684\u4e2a\u4f4d\u548c\u767e\u4f4d\u4e0a\uff0cb\u6570\u7684\u5341\u4f4d\u548c\u4e2a\u4f4d\u6570\u4f9d\u6b21\u653e\u5728c\u6570\u7684\u5341\u4f4d\u548c\u5343\u4f4d\u4e0a\u3002", "\u4f8b\u5982\uff0c\u5f53a=45\uff0cb=12\uff0c\u8c03\u7528\u8be5\u51fd\u6570\u540e\uff0cc=2514\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <conio.h>", "#include <stdio.h>", "void fun(int a,int b , long *c)", "{", "}", "\u00a0", "main()", "{", "int a,b;", "long c;", "clrscr();", "printf(\u201cInput a, b:\u201d);", "scanf(\u201c%d%d\u201d,&a, &b);", "fun(a, b, &c);", "printf(\u201cThe result is :%ld\\n\u201d, c);", "}", "\u00a0", "39\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u5c06s\u6240\u6307\u5b57\u7b26\u4e32\u7684\u6b63\u5e8f\u548c\u53cd\u5e8f\u8fdb\u884c\u8fde\u63a5\uff0c\u5f62", "\u6210\u4e00\u4e2a\u65b0\u4e32\u653e\u5728t\u6240\u6307\u7684\u6570\u7ec4\u4e2d\u3002\u4f8b\u5982\uff0c\u5f53S\u6240\u6307\u5b57\u7b26\u4e32\u4e3aABCD\u65f6\uff0c\u5219t\u6240\u6307\u5b57\u7b26\u4e32\u4e2d\u7684\u5185", "\u5bb9\u5e94\u4e3aABCDDCBA\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <conio.h>", "#include <stdio.h>", "#include <string.h>", "/********found********/", "void fun(char\u00a0 s, char\u00a0 t)", "{", "int\u00a0 i, d;", "d = strlen(s);", "for (i = 0; i<d; i++)", "t[i] = s[i];", "for (i = 0; i<d; i++)", "t[d+i] = s[d-1-i];", "/********found********/", "t[2*d-1] = \u2018\\0\u2032;", "}", "main()", "{", "char\u00a0 s[100], t[100];", "clrscr();", "printf(\u201c\\nPlease enter string S:\u201d);", "scanf(\u201c%s\u201d, s);", "fun(s,t);", "printf(\u201c\\nThe result is : %s\\n\u201d, t);", "}", "\u00a0", "\u00a0", "40.\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2dfun\u51fd\u6570\u7684\u529f\u80fd\u662f\uff1a\u5c06n\u4e2a\u65e0\u5e8f\u6574\u6570\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <conio.h>", "#include <stdio.h>", "#include <stdlib.h>", "fun ( int\u00a0 n, int *a )", "{", "int\u00a0 i, j, p, t;", "for ( j = 0; j<n-1 ; j++ )", "{", "p=j;", "/********found********/", "for ( i=j+1; i<n-1 ; i++ )", "if ( a[p]>a[i] )", "/********found********/", "t=i;", "if ( p!=j )", "{", "t = a[j];", "a[j] = a[p];", "a[p] = t;", "}", "}", "}", "\u00a0", "putarr( int\u00a0 n, int\u00a0 *z )", "{", "int\u00a0 i;", "for ( i = 1; i <= n; i++, z++ )", "{", "printf(\u201c%4d\u201d, *z );", "if ( !(i%10 ) )", "printf( \u201c\\n\u201d );", "}", "printf(\u201c\\n\u201d);", "}", "main()", "{", "int\u00a0 aa[20]={9,3,0,4,1,2,5,6,8,10,7}, n=11;", "clrscr();", "printf(\u201c\\n\\nBefore sorting %d numbers:\\n\u201d, n );", "putarr( n, aa );", "fun( n, aa );", "printf( \u201c\\nAfter sorting %d numbers:\\n\u201d, n );", "putarr( n, aa );", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u4e8c\u5341\u5957\uff09"},
{"contents": ["70\uff0e\u7f16\u5199\u51fd\u6570\u4e5dn\uff0c\u5b83\u7684\u529f\u80fd\u662f\uff1a\u8ba1\u7b97\u5e76\u8f93\u51fa\u4e0b\u5217\u7ea7\u6570\u548c\uff1a", "\u00a0", "\u4f8b\u5982\uff0c\u5f53n=10\u65f6\uff0c\u51fd\u6570\u503c\u4e3a0.909091\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <conio.h>", "#include <stdio.h>", "double fun( int n )", "{", "}", "main()", "{", "clrscr();", "printf(\u201c%f\\n\u201d,fun(10));", "}", "\u00a0", "74\uff0e\u5b66\u751f\u7684\u8bb0\u5f55\u7531\u5b66\u53f7\u548c\u6210\u7ee9\u7ec4\u6210\uff0cN\u540d\u5b66\u751f\u7684\u6570\u636e\u5df2\u5728\u4e3b\u51fd\u6570\u4e2d\u653e\u5165\u7ed3\u6784\u4f53\u6570\u7ec4s\u4e2d\uff0c\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\uff1a\u628a\u5206\u6570\u6700\u4f4e\u7684\u5b66\u751f\u6570\u636e\u653e\u5728h\u6240\u6307\u7684\u6570\u7ec4\u4e2d\uff0c\u6ce8\u610f\uff1a\u5206\u6570\u6700\u4f4e\u7684\u5b66\u751f\u53ef\u80fd\u4e0d\u6b62\u4e00\u4e2a\uff0c\u51fd\u6570\u8fd4\u56de\u5206\u6570\u6700\u4f4e\u7684\u5b66\u751f\u7684\u4eba\u6570\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include\u00a0 <stdio.h>", "#define\u00a0\u00a0\u00a0 N\u00a0 16", "\u00a0", "typedef\u00a0\u00a0 struct", "{", "char\u00a0 num[10];", "int\u00a0\u00a0 s;", "}\u00a0 STREC;", "int\u00a0 fun\u00a0 ( STREC\u00a0 *a,\u00a0 STREC\u00a0 *b )", "{", "}", "main ()", "{", "STREC\u00a0 s[N]= {{\u201cGA05\u2033,85}, {\u201cGA03\u2033,76}, {\u201cGA02\u2033,69}, {\u201cGA04\u2033,85},", "{\u201cGA01\u2033,91}, {\u201cGA07\u2033,72}, {\u201cGA08\u2033,64}, {\u201cGA06\u2033, 87},", "{\u201cGA015\u2033,85}, {\u201cGA013\u2033,91}, {\u201cGA012\u2033,64}, {\u201cGA014\u2033,91},", "{\u201cGA011\u2033,91}, {\u201cGA017\u2033,64}, {\u201cGA018\u2033,64}, {\u201cGA016\u2033,72}};", "STREC\u00a0 h[N];", "int\u00a0 i, n;", "FILE\u00a0 *out;", "n=fun ( s, h );", "printf (\u201cThe\u00a0 %d\u00a0 lowest\u00a0 score\u00a0 :\\n\u201d, n);", "for (i=0;\u00a0 i<n;\u00a0 i++)", "printf (\u201c%s\u00a0 %4d\\n\u201d, h[i]. num, h[i]. s);", "printf (\u201c\\n\u201d);", "out=fopen (\u201cout14.dat\u201d, \u201cw\u201d);", "fprintf (out, \u201c%d\\n\u201d, n);", "for (i=0;\u00a0 i<n;\u00a0 i++)", "fprintf (out, \u201c%4d\\n\u201d, h[i].s);", "fclose (out );", "}", "\u00a0", "34\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u5c06\u957f\u6574\u578b\u6570\u4e2d\u6bcf\u4e00\u4f4d\u4e0a\u4e3a\u5947\u6570\u7684\u6570\u4f9d\u6b21\u53d6\u51fa\uff0c\u6784\u6210\u4e00\u4e2a\u65b0\u6570\u653e\u5728t\u4e2d\u3002\u9ad8\u4f4d\u4ecd\u5728\u9ad8\u4f4d\uff0c\u4f4e\u4f4d\u4ecd\u5728\u4f4e\u4f4d\u3002\u4f8b\u5982\uff0c\u5f53s\u4e2d\u7684\u6570\u4e3a87653142\u65f6\uff0ct\u4e2d\u7684\u6570\u4e3a7531\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <conio.h>", "#include <stdio.h>", "void fun(long s,long *t)", "{", "int\u00a0 d;", "long s1=1;", "/********found********/", "t = 0;", "while ( s>0)", "{", "d = s%10;", "/********found********/", "if(d%2==0)", "{", "*t = d * s1 + *t;", "s1*=10;", "}", "s/=10;", "}", "}", "main()", "{", "long s,\u00a0 t;", "clrscr();", "printf(\u201c\\nPlease enter s: \u201c);", "scanf(\u201c%ld\u201d, &s);", "fun(s, &t);", "printf(\u201cThe result is: %ld\\n\u201d, t);", "}", "\u00a0", "\u00a0", "36\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u6c42\u4e09\u4e2a\u6570\u7684\u6700\u5c0f\u516c\u500d\u6570\u3002\u4f8b\u5982\uff0c\u7ed9\u53d8\u91cfx1\u3001x2\u3001x3\u5206\u522b\u8f93\u516515 11 2\uff0c\u5219\u8f93\u51fa\u7ed3\u679c\u5e94\u5f53\u662f330\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784\u3002", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include\u00a0 <stdio.h>", "int fun(int\u00a0 x,int\u00a0 y,int\u00a0 z)", "{", "int\u00a0 j,t,n,m;", "/********found********/", "j=1;", "t=m=n=1;", "/********found********/", "while(t!=0&&m!=0&&n!=0)", "{", "j = j+1;", "t=j%x;", "m=j%y;", "n=j%z;", "}", "return j;", "}", "main( )", "{", "int\u00a0 x1,x2,x3,j ;", "printf(\u201cInput x1 x2 x3:\u00a0 \u201c);", "scanf(\u201c%d%d%d\u201d,&x1,&x2,&x3);", "printf(\u201cx1=%d, x2=%d, x3=%d \\n\u201d,x1,x2,x3);", "j=fun(x1,x2,x3);", "printf(\u201cThe minimal common multiple is : %d\\n\u201d,j);", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u5341\u4e5d\u5957\uff09"},
{"contents": ["59\uff0e\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u8be5\u51fd\u6570\u7684\u529f\u80fd\u662f\uff1a\u5c06\u653e\u5728\u5b57\u7b26\u4e32\u6570\u7ec4\u4e2d\u7684M\u4e2a\u5b57\u7b26\u4e32\uff08\u6bcf\u4e32\u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7N\uff09\uff0c\u6309\u987a\u5e8f\u5408\u5e76\u7ec4\u6210\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32\u3002", "\u4f8b\u5982\uff0c\u82e5\u5b57\u7b26\u4e32\u6570\u7ec4\u4e2d\u7684M\u4e2a\u5b57\u7b26\u4e32\u4e3a\uff1a", "AAAA", "BBBBBBB", "CC", "\u5219\u5408\u5e76\u540e\u7684\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\u5e94\u662fAAAABBBBBBBCC\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684", "\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "#define\u00a0\u00a0 M\u00a0\u00a0 3", "#define\u00a0\u00a0 N\u00a0\u00a0 20", "\u00a0", "void fun(char a[M][N], char *b)", "{", "\u00a0", "}", "\u00a0", "main()", "{", "char w[M][N]={\u201cAAAA\u201d, \u201cBBBBBBB\u201d,\u201dCC\u201d},i;", "char a [100]={\u201c###############################\u201d};", "printf(\u201cThe string:\\n\u201d);", "for(i=0; i<M; i++)", "puts(w[i]);", "printf(\u201c\\n\u201d);", "fun(w,a);", "printf(\u201cThe A string:\\n\u201d);", "printf(\u201c%s\u201d,a);", "printf(\u201c\\n\\n\u201d);", "}", "\u00a0", "62\uff0e\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u8be5\u51fd\u6570\u7684\u529f\u80fd\u662f\uff1a\u7edf\u8ba1\u4e00\u884c\u5b57\u7b26\u4e32\u4e2d\u5355\u8bcd\u7684\u4e2a\u6570\uff0c\u4f5c\u4e3a\u51fd\u6570\u503c\u8fd4\u56de\u3002\u4e00\u884c\u5b57\u7b26\u4e32\u5728\u4e3b\u51fd\u6570\u4e2d\u8f93\u5165\uff0c\u89c4\u5b9a\u6240\u6709\u5355\u8bcd\u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\uff0c\u5355\u8bcd\u4e4b\u95f4\u7531\u82e5\u5e72\u4e2a\u7a7a\u683c\u9694\u5f00\uff0c\u4e00\u884c\u7684\u5f00\u59cb\u6ca1\u6709\u7a7a\u683c\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "int fun(int n)", "{", "}", "main()", "{", "int\u00a0 n,sum;", "printf(\u201cInput n:\u00a0 \u201c);", "scanf(\u201c%d\u201d,&n);", "sum=fun(n);", "printf(\u201csum=%d\\n\u201d,sum);", "}", "\u00a0", "28\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u5728\u5b57\u7b26\u4e32\u7684\u6700\u524d\u7aef\u52a0\u5165n\u4e2a*\u53f7\uff0c\u5f62\u6210\u65b0\u4e32\uff0c\u5e76\u4e14\u8986\u76d6\u539f\u4e32\u3002\u6ce8\u610f\uff1a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u6700\u957f\u5141\u8bb8\u4e3a79\u3002", "\u8bf7\u6539\u6b63\u51fd\u6570fun\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <stdio.h>", "#include <string.h>", "#include <conio.h>", "/********found********/", "void fun(char s[], int n)", "{", "char a[80], *p;", "int i ;", "/********found********/", "s=p;", "for(i=0;i<n;i++)", "a[i]=\u2019*';", "do", "{", "a[i]=*p;", "/********found********/", "i++;", "} while(*p);", "/********found********/", "a[i]=0;", "strcpy(s,a);", "}", "main()", "{", "int n;", "char s[80];", "clrscr();", "printf(\u201c\\nEnter a string :\u201d);", "gets(s);", "printf(\u201c\\nThe string \\%s\\n\u201d,s);", "printf(\u201c\\nEnter n(number of *): \u201c);", "scanf(\u201c%d\u201d,&n);", "fun(s,n);", "printf(\u201c\\nThe string after inster: \\%s\\n\u201d,s);", "}", "\u00a0", "\u00a0", "29\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u6c42\u51fa\u4e24\u4e2a\u975e\u96f6\u6b63\u6574\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570\uff0c\u5e76\u4f5c\u4e3a\u51fd\u6570\u503c\u8fd4\u56de\u3002\u4f8b\u5982\uff0c\u82e5\u7ed9num1\u548cnum2\u5206\u522b\u8f93\u516549\u548c21\uff0c\u5219\u8f93\u51fa\u7684\u6700\u5927\u516c\u7ea6\u6570\u4e3a7\uff1b\u82e5\u7ed9num1\u548cnum2\u5206\u522b\u8f93\u516527\u548c81\uff0c\u5219\u8f93\u51fa\u7684\u6700\u5927\u516c\u7ea6\u6570\u4e3a27\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784\u3002", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <stdio.h>", "int fun(int a,int b)", "{", "int r,t;", "/********found********/", "if(a<b)", "{", "t=a;", "b=a;", "b=t;", "}", "r=a%b;", "while(r!=0)", "{", "a=b;", "b=r;", "r=a%b;", "}", "/********found********/", "return(a);", "}", "main()", "{", "int num1,num2,a;", "printf(\u201cInput num1 num2 : \u201c);", "scanf(\u201c%d%d\u201d,&num1,&num2);", "printf(\u201cnum1=%d num2=%d\\n\\n\u201d,num1,num2);", "a=fun(num1,num2);", "printf(\u201cThe maximun common divisor is %d\\n\\n\u201d,a);", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u5341\u516b\u5957\uff09"},
{"contents": ["55\uff0e\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u8be5\u51fd\u6570\u7684\u529f\u80fd\u662f\uff1a\u5c06M\u884cN\u5217\u7684\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u7684\u6570\u636e\uff0c\u6309\u884c\u7684\u987a\u5e8f\u4f9d", "\u6b21\u653e\u5230\u4e00\u7ef4\u6570\u7ec4\u4e2d\uff0c\u4e00\u7ef4\u6570\u7ec4\u4e2d\u6570\u636e\u7684\u4e2a\u6570\u5b58\u653e\u5728\u5f62\u53c2n\u6240\u6307\u7684\u5b58\u50a8\u5355\u5143\u4e2d\u3002", "\u4f8b\u5982\uff0c\u82e5\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u7684\u6570\u636e\u4e3a\uff1a\uff0c", "\u5219\u4e00\u7ef4\u6570\u7ec4\u4e2d\u7684\u5185\u5bb9\u5e94\u662f\uff1a33 33 33 33 44 44 44 44 55 55 55 55\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <stdio.h>", "void fun(int\u00a0 (*s)[10], int *b, int *n, int mm, int nn)", "{", "}", "\u00a0", "main()", "{", "int w[10][10] = {{33,33,33,33},{44,44,44,44},{55,55,55,55}}, i, j ;", "int a[100] = {0}, n = 0 ;", "printf(\u201cThe matrix:\\n\u201d) ;", "for(i = 0 ; i < 3 ; i++)", "{", "for(j = 0 ; j < 4 ; j++)", "printf(\u201c%3d\u201d,w[i][j]) ;", "printf(\u201c\\n\u201d) ;", "}", "fun(w, a, &n, 3, 4) ;", "printf(\u201cThe A array:\\n\u201d) ;", "for(i = 0 ; i < n ; i++)", "printf(\u201c%3d\u201d,a[i]);", "printf(\u201c\\n\\n\u201d) ;", "}", "\u00a0", "58\uff0e\u7f16\u5199\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\uff1a\u6c42n\u4ee5\u5185\uff08\u4e0d\u5305\u62ecn\uff09\u540c\u65f6\u80fd\u88ab3\u4e0e7\u6574\u9664\u7684\u6240\u6709\u81ea\u7136\u6570\u4e4b\u548c\u7684\u5e73\u65b9\u6839s\uff0c\u5e76\u4f5c\u4e3a\u51fd\u6570\u503c\u8fd4\u56de\u3002", "\u4f8b\u5982\uff0c\u82e5n\u4e3a1000\u65f6\uff0c\u51fd\u6570\u503c\u5e94\u4e3as=153.909064\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <conio.h>", "#include <math.h>", "#include <stdio.h>", "double\u00a0 fun( int\u00a0 n)", "{", "}", "main()", "{", "clrscr();", "printf(\u201cs=%f\\n\u201d, fun ( 1000) );", "}", "\u00a0", "19\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u4ece\u4f4e\u4f4d\u5f00\u59cb\u53d6\u51fa\u957f\u6574\u578b\u53d8\u91cfs\u4e2d\u5076\u6570\u4f4d\u4e0a\u7684\u6570\uff0c\u4f9d\u6b21\u6784\u6210\u4e00\u4e2a\u65b0\u6570\u653e\u5728t\u4e2d\u3002\u4f8b\u5982\uff0c\u5f53s\u4e2d\u7684\u6570\u4e3a7654321\u65f6\uff0ct\u4e2d\u7684\u6570\u4e3a642\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <conio.h>", "#include <stdio.h>", "/********found********/", "void fun(long s,long t)", "{", "long s1=10;", "s/=10;", "*t=s%10;", "/********found********/", "while(s<0)", "{", "s=s/100;", "*t=s%10*s1+*t;", "s1=s1*10;", "}", "}", "\u00a0", "main()", "{", "long s,t;", "clrscr();", "printf(\u201c\\nPlease enter s:\u201d);", "scanf(\u201c%ld\u201d,&s);", "fun(s,&t);", "printf(\u201cThe result is:%ld\\n\u201d,t);", "}", "\u00a0", "\u00a0", "27\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u6839\u636e\u4ee5\u4e0b\u516c\u5f0f\u6c42\u03c0\u503c\uff0c\u5e76\u4f5c\u4e3a\u51fd\u6570\u503c\u8fd4\u56de\u3002", "\u4f8b\u5982\uff0c\u7ed9\u6307\u5b9a\u7cbe\u5ea6\u7684\u53d8\u91cfeps\u8f93\u51650.0005\u65f6\uff0c\u5e94\u5f53\u8f93\u51faPi=3.140578\u3002", "\u03c0\u00a0 \u00a0\u00a0\u00a0\u00a01\u00a0 \u00a0\u00a01\u00a0 2\u00a0 \u00a0\u00a01 \u00a02 \u00a03\u00a0\u00a0\u00a0 1 \u00a02 \u00a03 \u00a04", "\uff0d= 1+ \uff0d + \uff0dx\uff0d + \uff0dx\uff0dx\uff0d\u00a0 +\uff0dx\uff0dx\uff0dx\uff0d\u00a0 + \u2026", "2\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a03\u00a0 \u00a0\u00a03\u00a0 5\u00a0\u00a0\u00a0 3\u00a0 5\u00a0 7\u00a0\u00a0\u00a0 3 \u00a05\u00a0 7\u00a0 9", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784\u3002", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <conio.h>", "#include <math.h>", "#include <stdio.h>", "double fun(double eps)", "{", "double s,t;", "int n=1;", "s=0.0;", "/********found********/", "t=0;", "/********found********/", "while(t>eps)", "{", "s+=t;", "t=(t*n)/(2*n+1);", "n++;", "}", "return(s*2);", "}", "main()", "{", "double x;", "printf(\u201c\\nPlease enter a precision: \u201c);", "scanf(\u201c%lf\u201d,&x);", "printf(\u201c\\neps=%lf, Pi=%lf\\n\\n\u201d,x,fun(x));", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u5341\u4e03\u5957\uff09"},
{"contents": ["121.\u4e00\u4e2aHD\u8f6f\u76d8\u662f\u4e2d\u4e00\u4e2a\u6247\u533a\u6709_[3]512____\u4e2a\u5b57\u8282\u3002", "\n122.\u6587\u4ef6\u64cd\u4f5c\u524d\u5fc5\u987b\u4f7f\u7528_[5]fopen____\u6253\u5f00\u6587\u4ef6\uff0c\u64cd\u4f5c\u5b8c\u540e\u5fc5\u987b\u4f7f\u7528_[6]fclose____\u5173\u95ed\u6587\u4ef6\u3002", "\n123.\u63a7\u5236\u603b\u7ebf\u7684\u4efb\u52a1\u662f\u4f20\u8f93__\u63a7\u5236\u4fe1\u53f7___\u3002", "\n124.\u5728c\u8bed\u8a00\u4e2d\uff0c\u7ed3\u6784\u4f53\u7c7b\u578b\u6240\u5360\u5b57\u8282\u6570\u662f__[8]\u7ed3\u6784\u4f53\u4e2d\u5404\u4e2a\u6210\u5458\u6240\u5360\u5b57\u8282\u7684\u603b\u548c___\u3002", "\n125.\u8fde\u63a5\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u51fd\u6570\u662f_[12]strcat____\u3002", "\n126.\u5728\u8ba1\u7b97\u673a\u4e2d\uff0c1MB\u7b49\u4e8e_1024KB____\u3002", "\n127.internet\u7f51\u662f\u5c5e\u4e8e_ADSL____\u3002", "\n128.\u76f4\u63a5\u548cCPU\u4ea4\u6362\u6570\u636e\u7684\u662f_\u5185\u5b58____\u3002", "\n129.\u5341\u8fdb\u5236\u657010\u8f6c\u6362\u6210\u516b\u8fdb\u5236\u6570\u4e3a_8____\u3002", "\n130.\u5728DOS\u4e2d\u547d\u4ee4\u4e2d\uff0cCON\u4ee3\u8868\u7684\u662f_\u952e\u76d8____\u3002", "\n131.\u5728c\u8bed\u8a00\u4e2d\uff0c\u903b\u8f91\u503c\u201c\u503c\u201c\u7528__\u975e0\u7684\u6570___\u6765\u8868\u793a\u3002"], "title": "C\u8bed\u8a00\u9762\u8bd5\u5927\u5168\u7cfb\u5217\u5e26\u9762\u8bd5\u9898\u7b54\u6848(25)"},
{"contents": ["81.\u82e5\u6709\u4e0b\u5217\u5b9a\u4e49\uff08\u8bbeINT\u7c7b\u578b\u53d8\u91cf\u5360\u4e24\u4e2a\u5b57\u8282\uff09\uff1a", "\n\u00a0 int\u00a0 i=8,j =9;float x=123.456;", "\n\u5219\u4e0b\u5217\u8bed\u53e5\u7684\u8f93\u51fa\u7ed3\u679c\u662f I=______,j=_______\u3002", "\nPrintf\uff08\u201cI=%%dj=%%d/n\u201d\uff0cI,j\uff09;", "\n85.E-mail\u5730\u5740\u7531\u7528\u6237\u540d\u548c\u57df\u540d\u4e24\u90e8\u5206\u7ec4\u6210\uff0c\u8fd9\u4e24\u90e8\u5206\u7684\u5206\u9694\u9694\u4e3a\u00a0\u00a0 \u3002", "\n86.\u8ba1\u7b97\u673a\u7f51\u7edc\u5206\u4e3a\u5e7f\u57df\u7f51\u548c\u5c40\u57df\u7f51\uff0c\u56e0\u7279\u7f51\u5c5e\u4e8e______\u3002", "\n87.\u4eceWindows\u73af\u5883\u8fdb\u5165MS\u2014DOS\u65b9\u5f0f\u540e\uff0c\u8fd4\u56deWindows\u73af\u5883\u7684DOS\u547d\u4ee4\u4e3a_________\u3002", "\n88.\u5728Windows\u73af\u5883\u4e0b\uff0c\u53ea\u8981\u5728\u201c\u5f00\u59cb\u201d\u83dc\u5355\u4e2d\u5355\u51fb_________\u9009\u9879\uff0c\u5c31\u53ef\u4ee5\u67e5\u9605\u6700\u8fd1\u6253\u5f00\u8fc7\u7684\u6587\u6863\u6e05\u5355\u3002", "\n89.\u8ba1\u7b97\u673a\u7684\u8fd0\u7b97\u901f\u5ea6\u53ef\u4ee5\u7528MIPS\u6765\u63cf\u8ff0\uff0cIMIIPS\u662f\u6bcf\u79d2\u6267\u884c______\u6761\u6307\u4ee4\u3002", "\n90.\u5df2\u77e5\u5b57\u7b26A\u7684ASCII\u7801\u503c\u4e3a65\uff0c\u4ee5\u4e0b\u8bed\u53e5\u7684\u8f93\u51fa\u7ed3\u679c\u662f________ \u3002", "\n\u00a0 char ch =\u2018B\u2019\uff1b", "\n\u00a0 printf\uff08\u201c%c%d\\n\u201d,ch,ch\uff09;", "\n91.\u6709\u4ee5\u4e0b\u8bed\u53e5\u6bb5", "\n\u00a0 int n1=10,n2=20;", "\n\u00a0 printf(\u201c_______\u201d,n1,n2);", "\n\u00a0 \u8981\u6c42\u6309\u4ee5\u4e0b\u683c\u5f0f\u8f93\u51fan1\u548cn2\u7684\u503c\uff0c\u6bcf\u4e2a\u8f93\u51fa\u884c\u4ece\u7b2c\u4e00\u5217\u5f00\u59cb\uff0c\u8bf7\u586b\u7a7a\u3002", "\n\u00a0 N1=10", "\n\u00a0 N2=20", "\n92.\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "\n\u00a0main()", "\n\u00a0{ int t=i,i=5;", "\n\u00a0\u00a0 for(;i>=0;i\u2014\u2014) t*=i;", "\n\u00a0 printf(\u201c%d\\n\u201d,t);", "\n}", "\n\u6267\u884c\u540e\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "\n93.\u6d6e\u70b9\u5355\u7cbe\u5ea6\u53d8\u91cfx\uff0c\u6267\u884c\u8868\u8fbe\u8bed\u5f0f\u8bed\u53e5x=8.7-\u2018a\u2019/7\uff1b x\u7684\u503c\u662f__-4.3_____\u3002", "\n94.\u5728DOS\u73af\u5883\u4e0b\uff0c\u5904\u7406\u6587\u4ef6\u7684\u6269\u5c55\u540d\u4e3a___bat______\u3002", "\n95\uff0e\u5728windows\u73af\u5883\u4e0b\uff0c\u53ef\u4ee5\u5229\u7528\u5355\u51fb\u3001\u53cc\u51fb\u3001\u62d6\u52a8\u8fd9\u4e09\u79cd\u9f20\u6807\u64cd\u4f5c\u4e4b\u4e00__\u53cc\u51fb_\u6807\u9898\u680f\u53ef\u4ee5\u653e\u5927\u7f29\u5c0f\u7a97\u53e3\u3002", "\n96\uff0e\u603b\u7ebf\u6309\u529f\u80fd\u53ef\u5206\u4e3a\u5730\u5740\u603b\u7ebf\u3001\u6570\u636e\u603b\u7ebf\u3001__\u63a7\u5236\u603b\u7ebf___\u3002", "\n97\uff0e\u4e3a\u4e86\u5c06\u5f53\u524d\u76ee\u5f55\u4e2d\u7684\u6240\u6709\u6587\u672c\u6587\u4ef6\uff08\u6269\u5c55\u540d\u4e3a\u3002TXT\uff09\u7684\u5185\u5bb9\u6253\u5370\u8f93\u51fa\uff0c\u6b63\u786e\u7684\u5355\u6761DOS\u547d\u4ee4\u4e3a__COPY*.TXT PRN \u6216xcopy*.txt\u00a0 prn_____\u3002", "\n98\uff0e\u8bbe\u5f53\u524d\u76d8\u4e3ac\u76d8\uff0c\u4e3a\u4e86\u5728A\u76d8\u7684\u5f53\u524d\u76ee\u5f55\\USER\u4e0b\u5efa\u7acb\u4e00\u4e2a\u65b0\u7684\u5b50\u76ee\u5f55X\uff0c\u6b63\u786e\u7684DOS\u547d\u4ee4\u4e3a _MD A\uff1a\\USER\\X \u6216MDA: X______\u3002", "\n99\uff0e\u5728XCOPY\uff0cCOPY\uff0cTIME\u4e09\u4e2aDOS\u547d\u4ee4\u4e2d\uff0c\u5c5e\u4e8e\u5916\u90e8\u547d\u4ee4\u7684\u662f__XCOPY___\u3002", "\n100\uff0e\u5728\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e2d\uff0c\u6267\u884c\u7a0b\u5e8f\u662f__\u673a\u5668\u8bed\u8a00\u4ee3\u7801_____\u3002"], "title": "C\u8bed\u8a00\u9762\u8bd5\u5927\u5168\u7cfb\u5217\u5e26\u9762\u8bd5\u9898\u7b54\u6848(23)"},
{"contents": ["101\uff0e\u8ba1\u7b97\u673a\u7f51\u7edc\u5206\u4e3a\u5c40\u57df\u7f51\u548c\u5e7f\u57df\u7f51\uff0c\u56e0\u7279\u7f51\u5c5e\u4e8e___\u5e7f\u57df\u7f51___\u3002", "102\uff0e\u8bed\u53e5\uff1ax++\uff1b++x\uff1bx=x+1\uff1bx=1+x\uff1b\uff0c\u6267\u884c\u540e\u90fd\u4f7f\u53d8\u91cfX\u4e2d\u7684\u503c\u589e1\uff0c\u8bf7\u5199\u51fa\u4e00\u6761\u540c\u4e00\u529f\u80fd\u7684\u8d4b\u503c\u8bed\u53e5\uff08\u4e0d\u5f97\u4e0e\u5217\u4e3e\u7684\u76f8\u540c\uff09__[6]x+=1____\u3002", "103\uff0e\u4e00\u53f0\u8ba1\u7b97\u673a\u8981\u8fde\u5165internet\uff0c\u5fc5\u987b\u5b89\u88c5\u7684\u662f_\u8c03\u5236\u89e3\u8c03\u5668\u6216\u7f51\u5361___\u3002", "104\uff0e\u7528\u4ee5\u4e0b\u8bed\u53e5\u8c03\u7528\u5e93\u51fd\u6570malloc,\u4f7f\u5b57\u7b26\u6307\u9488st\u6307\u5411\u5177\u670911\u4e2a\u5b57\u8282\u7684\u52a8\u6001\u50a8\u5b58\u7a7a\u95f4\uff0cst=\uff08char*\uff09__[8]malloc\uff0811\uff09\u6216malloc\uff08sizeof\uff08char\uff09*11\uff09____\u3002", "\n105.\u8bbe\u5907\u8bbf\u95ee\u901f\u5ea6\u6bd4\u786c\u76d8\u5feb\u7684\u662f__\u5185\u5b58____\u3002", "106.\u5fae\u578b\u8ba1\u7b97\u673a\u4e2d\u5b58\u50a8\u6570\u636e\u6700\u5c0f\u5355\u4f4d\u662f__\u5b57\u8282____\u3002", "107.\u6570\u5b57\u5b57\u7b26\u201c1\u201d\u7684ASCII\u7801\u4e3a\u5341\u8fdb\u5236\u768449\uff0c\u6570\u5b57\u201c3\u201c\u7684ASCII\u7801\u4e3a_51_____\u3002", "108.\u82e5\u53d8\u91cfb\u5df2\u8bf4\u660e\u4e3afloat\u7c7b\u578b\uff0c\u5219\u80fd\u5b9e\u73b0\u5c06b\u4e2d\u7684\u6570\u503c\u4fdd\u7559\u5c0f\u6570\u70b9\u540e\u4e00\u4f4d\uff0c\u7b2c\u4e8c\u4f4d\u8fdb\u884c\u56db\u820d\u4e94\u5165\u8fd0\u7b97\u7684\u8868\u8fbe\u5f0f\u662f_b=\uff08int\uff09\uff08b*10+0.5\uff09/10.0_____\u3002", "109.\u5728c\u8bed\u8a00\u4e2d\uff0cswitch\u8bed\u53e5\u7ed3\u6784\u5c5e\u4e8e_\u5206\u652f\u7ed3\u6784_____\u3002", "110.\u8ba1\u7b97\u673a\u4e2d\u63a7\u5236\u5668\u7684\u4f5c\u7528\u662f_\u534f\u8c03\u548c\u6307\u6325\u6574\u4e2a\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u64cd\u4f5c_____\u3002", "111.\u6587\u672c\u6587\u4ef6\u7684\u6269\u5c55\u540d\u662f_TXT____\u3002", "112.\u82e5A\uff0cB\u4e3aint\u7c7b\u578b\uff0c\u5176\u503c\u5206\u522b\u4e3a5\u548c2\uff0c\u5219\u6267\u884c\u8868\u8fbe\u5f0fA/B\u540e\uff0c\u8868\u8fbe\u5f0f\u7684\u7c7b\u578b\u662f_int____\u3002", "113.\u5728c\u8bed\u8a00\u4e2d\uff0c\u5408\u6cd5\u7684\u957f\u6574\u578b\u5e38\u6570\u662f__0L___\u3002", "114.\u5728c\u8bed\u8a00\u4e2d\uff0c\u5b58\u50a8\u7c7b\u578b\u4e3a_register\u548cauto____\u7684\u53d8\u91cf\u53ea\u5728\u4f7f\u7528\u5b83\u4eec\u65f6\u624d\u5360\u7528\u5b58\u50a8\u7a7a\u95f4\u3002", "115.c\u8bed\u8a00\u4e2d\u7684\u6784\u9020\u7c7b\u578b\u6570\u636e\u5305\u62ec\u662f_\u6570\u7ec4\u7c7b\u578b\u3001\u7ed3\u6784\u4f53\u7c7b\u578b\u548c\u5171\u7528\u4f53\u7c7b\u578b____\u3002", "116.\u82e5a=1\uff0cb=2\u5219a\u2016b\u7684\u503c\u662f__3___\u3002", "117.\u5728\u51fd\u6570\u8c03\u7528\u8bed\u53e5fun1\uff08fun2\uff08x\uff0cy\uff09\uff0c\uff08x\uff0cy\uff09\uff0cz=z+y\uff09\u4e2d\uff0cfun1\u7684\u5b9e\u5728\u53c2\u6570\u7684\u4e2a\u6570\u662f_3__\u3002", "118.\u4f4d\u8fd0\u7b97\u7b26&&\u3001||\u3001!\u6309\u4f18\u5148\u7ea7\u4ece\u9ad8\u5230\u4f4e\u6392\u5217\u7684\u987a\u5e8f\u662f_\uff01\u3001&&\u3001||____\u3002", "119.\u51fd\u6570\u8c03\u7528\uff1astrcpy\uff08str1\uff0cstr2\uff09\u7684\u529f\u80fd\u7684_\u5c06\u4e32str2\u590d\u5236\u5230\u4e32str1____\u3002", "120.\u8ba1\u7b97\u673a\u7cfb\u7edf\u662f\u7531_\u786c\u4ef6\u7cfb\u7edf____\u548c_\u8f6f\u4ef6\u7cfb\u7edf_____\u7ec4\u6210\u3002"], "title": "C\u8bed\u8a00\u9762\u8bd5\u5927\u5168\u7cfb\u5217\u5e26\u9762\u8bd5\u9898\u7b54\u6848(24)"},
{"contents": ["61\uff0e\u7ed3\u6784\u4f53\u53d8\u91cf__\u53ef\u4ee5___\uff08\u586b\u201c\u53ef\u4ee5\u201d\u6216\u201c\u4e0d\u53ef\u4ee5\u201d\uff09\u76f4\u63a5\u505a\u51fd\u6570\u7684\u53c2\u6570\uff0c\u5171\u7528\u4f53\u53d8\u91cf_\u4e0d\u53ef\u4ee5____\uff08\u586b\u201c\u53ef\u4ee5\u201d\u6216\u201c\u4e0d\u53ef\u4ee5\u201c\uff09\u76f4\u63a5\u505a\u51fd\u6570\u7684\u53c2\u6570\u3002", "\n62\uff0e\u82e5x=2\uff0cy=3\u5219x&y\u7684\u7ed3\u679c\u662f_____2____\u3002", "\n63\uff0e\u8868\u8fbe\u5f0fa=9\uff0ca&11111111\u7684\u503c\u662f____9_______\u3002", "\n64\uff0e\u51fd\u6570fopen\uff08\u201cfile\u201c\uff0c1\uff09\uff1b\u52191\u7684\u8868\u793a___\u6587\u4ef6\u53ea\u80fd\u5199_______\u3002", "\n65\uff0eC\u8bed\u8a00\u4e2d\u7cfb\u7edf\u7684\u6807\u51c6\u8f93\u5165\u6587\u4ef6\u662f\u6307___\u952e\u76d8_______\u3002", "\n66\uff0eC\u8bed\u8a00fread\uff08\uff09\u51fd\u6570\u7684\u529f\u80fd\u662f_\u4ece\u6587\u4ef6fp\u4e2d\u8bfb\u53d6n\u4e2a\u5b57\u7b26\u5b58\u5165\u6307\u5b9a\u7684\u5185\u5b58_\u3002", "\n67\uff0e\u5728c\u8bed\u8a00\u7684\u6587\u4ef6\u5b58\u53d6\u65b9\u5f0f\u4e2d\uff0c\u6587\u4ef6__\u53ef__\u4ee5\u662f\u987a\u5e8f\u5b58\u53d6\uff0c\u53ef\u4ee5\u662f\u968f\u673a\u5b58\u53d6____\u3002", "\n68\uff0e\u4e00\u822c\u6765\u8bf4\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5bf9\u5916\u90e8\u5b58\u50a8\u4ecb\u8d28\u7684\u7ba1\u7406\u7684\u4ee5__\u6587\u4ef6_\u4e3a\u5355\u4f4d\u7684\u3002\u5c06\u6240\u6709\u7684\u4e0e\u4e3b\u673a\u76f8\u8fde\u7684\u8f93\u5165\u8f93\u51fa\u8bbe\u5907\u90fd\u770b\u4f5c___\u6587\u4ef6__\u3002", "\n69\uff0e\u5728\u8bfb\u5199\u6587\u4ef6\u4ee5\u524d\uff0c\u5e94\u5148___\u6253\u5f00____\u6587\u4ef6\uff0c\u800c\u4f7f\u7528\u7ed3\u675f\u540e\u8981___\u5173\u95ed____\u6587\u4ef6\u3002", "\n70\uff0eC\u8bed\u8a00\u5c06\u6587\u4ef6\u770b\u4f5c\u4e00\u4e2a___\u5b57\u7b26____\u6216_\u5b57\u8282______\u5e8f\u5217\uff0c\u6839\u636e\u6570\u636e\u7684\u7ec4\u7ec7\u5f62\u5f0f\uff0c\u5206\u522b\u4e3aASCII\u6587\u4ef6\u548c___\u4e8c\u8fdb\u5236______\u6587\u4ef6\uff0c\u5176\u4e2d\uff0cASCII\u6587\u4ef6\u53c8\u79f0\u4e3a__\u6587\u672c_____\u6587\u4ef6\u3002", "\n71\uff0e\u51fd\u6570feof\uff08fp\uff09\u7684\u53c2\u6570fp\u662f___\u6587\u4ef6\u7684\u6307\u9488______\uff0c\u6b64\u51fd\u6570\u82e5\u8fd4\u56de1\u5219\u8868\u793a_\u6587\u4ef6\u5df2\u7ecf\u7ed3\u675f______\u3002", "\n72\uff0e\u5f00\u59cb\u8fd0\u884c\u7684\u65f6\u5019\uff0c\u7cfb\u7edf\u5c06\u81ea\u52a8\u6253\u5f00\u4e09\u4e2a\u6807\u51c6\u6587\u4ef6\uff0c\u5206\u522b\u662f_\u6807\u51c6\u8f93\u5165__\u3001_\u6807\u51c6\u8f93\u51fa____\u3001__\u6807\u51c6\u51fa\u9519\u8f93\u51fa_____\u3002", "\n73\uff0e\u8ba1\u7b97\u673a\u4e2d\u6807\u51c6\u8f93\u5165\u8bbe\u5907\u4e3a___\u952e\u76d8____", "\n74.\u8bbe\u5f53\u524d\u76d8\u4e3aA\u76d8\uff0c\u5f53\u524d\u7cfb\u7edf\u63d0\u793a\u7b26\u4e3a\u201c>\u201d\uff0c\u5728\u4e0d\u6539\u53d8\u5f53\u524d\u76d8\u7684\u60c5\u51b5\u4e0b\uff0c\u663e\u793aC\u76d8\u7684\u5f53\u524d\u76ee\u5f55\u8def\u5f84\uff0c\u5e94\u4f7f\u7528\u547d\u4ee4 ___________ \u3002", "\n75.\u5728DOS\u7cfb\u7edf\u4e2d\uff0c\u8def\u5f84\u540d\u5206\u4e3a\u7edd\u5bf9\u8def\u5f84\u548c\u76f8\u5bf9\u8def\u5f84\u4e24\u79cd\uff0c\u4ee5\u5b57\u7b26_______ \u5f00\u59cb\u7684\u8def\u5f84\u662f\u7edd\u5bf9\u8def\u5f84\u540d\u3002", "\n76.\u9996\u5148\u63d0\u51fa\u5728\u7535\u5b50\u8ba1\u7b97\u673a\u4e2d\u5b58\u50a8\u7a0b\u5e8f\u6982\u5ff5\u7684\u79d1\u5b66\u5bb6\u662f_________\u3002", "\n77.\u4e0e\u5341\u8fdb\u5236\u657045\u7b49\u503c\u7684\u4e8c\u8fdb\u5236\u6570\u662f __________ \u3002", "\n78.\u952e\u76d8\u4e0a\u80fd\u7528\u4e8e\u5207\u6362\u201c\u63d2\u5165\u201d\u4e0e\u201c\u8986\u76d6\uff08\u6539\u5199\uff09\u201d\u4e24\u79cd\u72b6\u6001\u7684\u53cc\u6001\u952e\u662f ________ \u3002", "\n79.\u7cfb\u7edf\u8f6f\u4ef6\u4e2d\u6700\u57fa\u7840\u6700\u91cd\u8981\u7684\u662f__________\u3002", "\n80.\u5728\u56fd\u9645GB2312\u201480\u4fe1\u606f\u4ea4\u6362\u7528\u6c49\u5b57\u7f16\u7801\u5b57\u7b26\u96c6\uff08\u57fa\u672c\u96c6\uff09\u4e2d\uff0c\u4f7f\u7528\u9891\u5ea6\u5e38\u7528\u6c49\u5b57\u4e3a\u4e00\u7ea7\u6c49\u5b57\uff0c\u662f\u6309__________\u987a\u5e8f\u6392\u5217\u7684\u3002"], "title": "C\u8bed\u8a00\u9762\u8bd5\u5927\u5168\u7cfb\u5217\u5e26\u9762\u8bd5\u9898\u7b54\u6848(22)"},
{"contents": ["41\uff0e\u4e0b\u9762\u8bed\u53e5\u7684\u8f93\u51fa\u7ed3\u679c\u662f_______.", "\nChar *alp[]={\u201cABC\u201d,\u201cDEF\u201d,\u201cGHI\u201d};", "\nInt i;", "\nfor(i=0;i<3;i++)puts(alp[i]);", "\n42\uff0e\u4ee5\u4e0b\u8bed\u53e5\u7684\u8f93\u51fa\u7ed3\u679c\u662f_______.", "\nchar s[ 80],*sp=\u201cHELLO\uff01\u201d\uff1b", "\nsp=strpy(s,sp);s[0]=\u2019h\u2019;puts(s);", "\n43.\u4ee5\u4e0b\u8bed\u53e5\u7684\u8f93\u51fa\u7ed3\u679c\u662f_______.", "\nPrintf(\u201c%d\\n\u201d,strlen(\u201c\\t\\\u201d\\085\\xff\\n\u201d));", "\n44.\u4ee5\u4e0b\u8bed\u53e5\u7684\u8f93\u51fa\u7ed3\u679c\u662f_______.", "\nChar s[20]=\u201dabcd\u201d,*sp=s;", "\nSp++;puts(strcat(sp,\u201cABCD\u201d));", "\n45.\u4ee5\u4e0b\u8bed\u53e5\u7684\u8f93\u51fa\u7ed3\u679c\u662f_______.\uff08\u53ea\u9700\u56de\u7b54\u662f\u5927\u4e8e\u96f6\uff0c\u5c0f\u4e8e\u96f6\uff0c\u7b49\u4e8e\u96f6\uff09", "\nChar *s1=\u201cAbCdEf\u201d,*s2=\u201daB\u201d;", "\nS1++;printf(\u201c%d\\n\u201d,strcmp(s1,s2));", "\n46.\u4ee5\u4e0b\u8bed\u53e5\u7684\u8f93\u51fa\u7ed3\u679c\u662f_______.", "\nPrintf(\u201c%S\u201d,\u201dA:\\\\PAS\\\\EX01.C\u201d);", "\n47\uff0e\u70ed\u542f\u52a8\u65f6\u5e94\u540c\u65f6\u6309\u4e0b\u7684\u7ec4\u5408\u952e\u662f__________.", "\n48\uff0e\u5728\u5fae\u673a\u4e2d\uff0c\u5b57\u7b26\u7684\u6bd4\u8f83\u5c31\u662f\u5bf9\u5b83\u7684_________ \u7801\u6bd4\u8f83_________\u3002", "\n49\uff0e\u663e\u793a\u4e3b\u6587\u4ef6\u540d\u4e0d\u8d85\u8fc7\u4e94\u4e2a\u5b57\u7b26\u7684\u6240\u6709\u6587\u4ef6\u540d\uff0c\u5e94\u952e\u5165\u7684\u547d\u4ee4\u662f__________ \u3002", "\n50\uff0eDOS\u64cd\u4f5c\u7cfb\u7edf\u57fa\u672c\u6a21\u5757\u4e2d\u7684COMMAND.COM\u6a21\u5757\u662f_________\u3002", "\n51\uff0eDOS\u7cfb\u7edf\u63d0\u4f9b\u4e86\u4e24\u4e2a\u7528\u4e8e\u663e\u793a\u78c1\u76d8\u76ee\u5f55\u4fe1\u606f\u7684\u547d\u4ee4\uff0c\u4e00\u4e2a\u662f\u53ef\u7528\u6765\u663e\u793a\u78c1\u76d8\u67d0\u4e2a\u76ee\u5f55\u5185\u7684\u6587\u4ef6\u540d\u548c\u5b50\u76ee\u5f55\u540d\u7684\u547d\u4ee4DIR\uff0c\u53e6\u4e00\u4e2a\u662f\u7528\u6765\u663e\u793a\u6574\u4e2a\u78c1\u76d8\u6216\u67d0\u4e2a\u76ee\u5f55\u5185\u5bb9\u7684\u76ee\u5f55\u7ed3\u6784\u7684\u547d\u4ee4__________\u3002", "\n52\uff0e\u5728printf\u683c\u5f0f\u5b57\u7b26\u4e2d\uff0c\u4ee5\u5e26\u7b26\u53f7\u7684\u5341\u8fdb\u5236\u884c\u5f0f\u8f93\u51fa\u6574\u6570\u7684\u683c\u5f0f\u5b57\u7b26\u662f _________ \uff1b\u4ee5\u516b\u8fdb\u5236\u65e0\u7b26\u53f7\u884c\u5f0f\u8f93\u51fa\u6574\u578b\u7684\u683c\u5f0f\u5b57\u7b26\u662f_________ \uff1b\u4ee5\u5341\u516d\u8fdb\u5236\u65e0\u7b26\u53f7\u884c\u5f0f\u8f93\u51fa\u6574\u6570\u7684\u683c\u5f0f\u5b57\u7b26\u662f_________ \uff1b\u4ee5\u5341\u8fdb\u5236\u65e0\u7b26\u53f7\u884c\u5f0f\u8f93\u51fa\u6574\u578b\u7684\u683c\u5f0f\u5b57\u7b26\u662f___________\u00a0 \uff1b", "\n53.\u4e0e\u5341\u8fdb\u5236\u6570101\u7b49\u503c\u7684\u4e8c\u8fdb\u5236\u6570\u4e3a \u3002", "\n54\uff0eDOS\u7684\u6587\u4ef6\u540d\u7531\u4e3b\u6587\u4ef6\u540d\u548c\u6269\u5c55\u540d\u7ec4\u6210\uff0c\u5176\u4e3b\u6587\u4ef6\u540d\u7531\u00a0 \u4e2a\u5b57\u7b26\u7ec4\u6210\u3002", "\n55.\u6574\u6570\u53d8\u91cfa\uff0cb\uff0cc\u5b83\u4eec\u7684\u521d\u503c\u90fd\u662f0\uff0c\u8fd0\u884c\u8868\u8fbe\u5f0f\uff1a++&&b++&&++c\u540e\uff0ca\uff0cb\uff0cc\u7684\u503c\u5206\u522b\u4e3a\uff1a___(1)________\uff0c_____(2)______\uff0c_______(3)____\u82e5\u5728\u540c\u6837\u7684\u521d\u503c\u6761\u4ef6\u4e0b\uff0c\u8fd0\u884c\u8868\u8fbe\u5f0f++a\u2016b++\u2016++c\u540e\uff0ca\uff0cb\uff0cc\u7684\u503c\u5206\u522b\u662f___(4)________\uff0c_____(5)______\uff0c____(6)______\u3002", "\n\u00a0\u00a0 (1) 1\u00a0\u00a0 (2) 1\u00a0 (3) 0\u00a0\u00a0 (4) 1\u00a0\u00a0 (5) 0\u00a0 (6)0\u00a0\u00a0", "\n56\uff0e\u6b32\u5c06\u4e00\u4e2a16\u8fdb\u5236\u7684\u6574\u578b\u53d8\u91cf\u7684\u9ad88\u4f4d\u6e05\u96f6\uff0c\u800c\u53ea\u4fdd\u7559\u4f4e8\u4f4d\uff0c\u53ef\u7528\u7684\u65b9\u6cd5\u662f___x&255______\u3002", "\n57.\u4f4d\u8fd0\u7b97 ___\u4e0d\u80fd________ \uff08\u586b\u201c\u80fd\u201d\u6216\u201c\u4e0d\u80fd\u201d\uff09\u7528\u4e8e\u70b9\u6570\u3002", "\n58\uff0e\u5c06\u4e0b\u5217\u6570\u5b66\u8868\u8fbe\u5f0f\u6539\u5199\u6210c\u8bed\u8a00\u7684\u8868\u8fbe\u5f0f\u3002", "\n\uff081\uff09\u00a0ax3+bx2+cx+d_a*x*x*x+b*x*x+c*x+d____", "\n\uff082\uff09\u00a0(ab+cD)/(ac+bD)__(a*b+c*D)/(a*c+b*D)____", "\n59.\u5982\u4e0b\u8bed\u53e5\u5728\u7f16\u8bd1\u65f6____\u4e0d\u4f1a_______\uff08\u586b\u201c\u4f1a\u201d\u6216\u201c\u4e0d\u4f1a\u201d\uff09\u62a5\u9519\u3002", "\nIf\uff08a=b\uff09", "\na++;", "\n60.\u8fd0\u884c\u7a0b\u5e8f\u6bb5\uff0c\u5219\u6b64\u7a0b\u5e8f\u6bb5\u7684\u8f93\u51fa\u7ed3\u679c\u7684_1\uff0c3\uff0c5\uff0c7\uff0c9__________\u3002", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 For\uff08int I=0\uff1bI\u300a=8\uff0cI++\u300b", "\nPrintf\uff08\u201c%d\uff0c\u201d\uff0c++i\uff09\uff1b"], "title": "C\u8bed\u8a00\u9762\u8bd5\u5927\u5168\u7cfb\u5217\u5e26\u9762\u8bd5\u9898\u7b54\u6848(21)"},
{"contents": ["31.\u82e5\u6709\u5b9a\u4e49:int x=3,y=2;float a=2.5,b=3.5; \u5219\u4e0b\u9762\u8868\u8fbe\u5f0f\u7684\u503c\u4e3a_____________\u3002", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 (x+y)%2+(int)a/(int)b", "\n32.\u82e5x\u548cn\u5747\u662fint\u578b\u53d8\u91cf\uff0c\u4e14x\u7684\u521d\u503c\u4e3a12\uff0cn\u7684\u521d\u503c\u4e3a5\uff0c\u5219\u6267\u884c\u4e0b\u9762\u8868\u8fbe\u5f0f\u540e\uff0cx\u7684\u503c\u4e3a_____________\u3002", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 x%=(n%=2)", "\n33.\u5047\u8bbe\u6240\u6709\u53d8\u91cf\u5747\u4e3a\u6574\u578b\uff0c\u5219\u8868\u8fbe\u5f0f\uff08a=2\uff0cb=5\uff0ca++\uff0cb++\uff0ca+b\uff09\u7684\u503c\u4e3a_______\u3002", "\n34\uff0eC\u8bed\u8a00\u4e2d\u7684\u6807\u8bc6\u7b26\u53ea\u80fd\u7531\u4e09\u79cd\u5b57\u7b26\u7ec4\u6210\uff0c\u5b83\u4eec\u662f_______\u3001_______\u548c________\u3002", "\n35\uff0e\u5df2\u77e5\u5b57\u6bcda\u7684ASCII\u7801\u4e3a\u5341\u8fdb\u5236\u657097\uff0c\u4e14\u8bbech\u4e3a\u5b57\u7b26\u578b\u53d8\u91cf\uff0c\u5219\u8868\u8fbe\u5f0fch=\u2018a\u2019+", "\n\u20188\u2019-\u20183\u2019\u7684\u503c\u4e3a________\u3002", "\n36\uff0e\u4e0b\u5217\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "\nMain()", "\n{\u00a0\u00a0 int\u00a0\u00a0 i;", "\nfor\u00a0\u00a0 (i=1;i<5;i++)", "\nswitch(i)", "\n{", "\nCase 1:", "\nCase 2: printf(\u201c%d\\n\u201d,i);", "\nCase 3: printf(\u201c%d\\n\u201d,i);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 Break;", "\nDefault printf(\u201cOK!\\n\u201d );", "\n}", "\n}", "\n37\uff0eChar\u578b\u5e38\u91cf\u5728\u5185\u5b58\u653e\u7684\u662f________\u7801\u503c\u3002", "\n38\uff0e\u2018\\72\u2019\u5728\u5185\u5b58\u4e2d\u5360_________\u4e2a\u5b57\u8282\uff0c\u201c\\72\u201d\u5728\u5185\u5b58\u4e2d\u5360_________\u4e2a\u5b57\u8282\u3002", "\n39\uff0e\u5047\u8bbe\u6240\u6709\u7684\u53d8\u91cf\u5747\u4e3a\u6574\u578b\uff0c\u5219\u4ee5\u4e0b\u4e24\u7ec4\u8bed\u53e5\u7684\u8f93\u51fa\u7ed3\u679c\u5206\u522b\u662f_________\u3001__________\u3002", "\n\uff081\uff09a=3+5\uff0c2*4\uff1bprintf\uff08\u201c%d\u3001\u201d\uff09;", "\n\uff082\uff09x=11/3;printf(\u201c%%d\\n\u201d,x);", "\n40\uff0e\u4e0b\u5217\u8bed\u53e5\u7684\u8f93\u51fa\u7ed3\u679c\u662f_________\u3002", "\nChar a=31;printf(\u201c%d,%o,%x,%u\\n\u201d,a,a,a,a);"], "title": "C\u8bed\u8a00\u9762\u8bd5\u5927\u5168\u7cfb\u5217\u5e26\u9762\u8bd5\u9898\u7b54\u6848(20)"},
{"contents": ["21\uff0e\u82e5s\u662fint\u578b\u53d8\u91cf\uff0c\u4e14s=6\uff0c\u5219\u4e0b\u9762\u8868\u8fbe\u5f0f\u7684\u503c\u4e3a_____________\u3002", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 s%2+(s+1)%2", "\n22.\u82e5a \u662fint\u578b\u53d8\u91cf\uff0c\u5219\u4e0b\u9762\u8868\u8fbe\u5f0f\u7684\u503c\u4e3a_____________\u3002", "\n(a=4*5,a*2),a+6", "\n23.\u82e5x\u548ca\u5747\u662fint\u578b\u53d8\u91cf\uff0c\u5219\u6267\u884c\u8868\u8fbe\u5f0f\uff081\uff09\u540e\u7684x\u503c\u4e3a_______\uff0c\u6267\u884c\u8868\u8fbe\u5f0f\uff082\uff09\u540e\u7684x\u503c\u4e3a_____________\u3002", "\n\uff081\uff09\u00a0x=(a=4,6*2)", "\n\uff082\uff09\u00a0x=a=4,6*2", "\n24.\u82e5\u6709\u4ee5\u4e0b\u5b9a\u4e49\uff0c\u5219\u6267\u884c\u8868\u8fbe\u5f0fy+=y-=m*=y\u540e,y\u7684\u503c\u4e3a_____________", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int m=5,y=2;", "\n25.\u8bbeC\u8bed\u8a00\u4e2d\uff0c\u4e00\u4e2aint\u578b\u6570\u636e\u5728\u5185\u5b58\u4e2d\u5360\u4e24\u4e2a\u5b57\u8282\uff0c\u5219int\u578b\u6570\u636e\u7684\u53d6\u503c\u8303\u56f4\u4e3a", "\n___________", "\n26\uff0e\u5728C\u8bed\u8a00\u4e2d\u7684\u5b9e\u578b\u53d8\u91cf\u5206\u4e3a\u4e24\u79cd\u7c7b\u578b\uff0c\u5b83\u4eec\u662f\uff08\u00a0\u00a0\u00a0 1\u00a0\u00a0\u00a0 \uff09\u548c\uff08\u00a0\u00a0 2\u00a0\u00a0\u00a0 \uff09\u3002", "\n27\uff0eC\u8bed\u8a00\u6240\u63d0\u4f9b\u7684\u57fa\u672c\u6570\u636e\u7c7b\u578b\u5305\u62ec\uff1a\u5355\u7cbe\u5ea6\u578b\u3001\u53cc\u7cbe\u5ea6\u578b\u3001\uff08\u00a0\u00a0 1\u00a0\u00a0 \uff09\u3001\uff08\u00a0\u00a0 2\u00a0\u00a0 \uff09\u548c\uff08\u00a0\u00a0 3\u00a0\u00a0 \uff09\u3002", "\n28\uff0e\u4e0b\u5217\u51fd\u6570\u5c06\u957f\u6574\u6570a\u8f6c\u6362\u6210\u5e26\u7b26\u53f7\u7684\u5b57\u7b26\u4e32s\u3002\u82e5a\u4e3an\u4f4d\u6570\uff0c\u5219\u5176\u76f8\u5e94\u7684\u5b57\u7b26\u4e32\u5982\u4e0b\u5b58\u653e\uff1as[0]\u4e2d\u5b58\u653e\u7b26\u53f7\uff1bs[1],s[2],\u2026\u2026,s[n]\u4f9d\u6b21\u5b58\u653e\u4ece\u9ad8\u4f4d\u5230\u4f4e\u4f4d\u7684\u5404\u4f4d\u6570\u5b57\uff1bs[n+1]\u5b58\u653e\u7ed3\u675f\u7b26\u201c\\0\u201d\u3002", "\nVoid atos(a,s)", "\nLong a;", "\nChar s[];", "\n{ int n=1;", "\n\u00a0 long a1;", "\n\u00a0 s[0]=____(1)_________;", "\n\u00a0 ______(2)______>=0?a:-a;", "\n\u00a0 while(\u00ac\u00ac\u00ac\u00ac\u00ac\u00ac\u00ac\u00ac\u00ac____(3)______) n++;", "\n\u00a0 s[n+1]=\u2019\\0\u2019;", "\n\u00a0 while(n)", "\n\u00a0 {s[n--]=___(4)________;", "\n\u00a0\u00a0\u00a0 a=a/10;", "\n\u00a0 }", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n29.\u82e5\u6709\u5b9a\u4e49\uff1aint a=2,b=3;float x=3.5,y=2.5;,\u5219\u4e0b\u9762\u8868\u8fbe\u5f0f\u7684\u503c\u4e3a_____________\u3002", "\n(float) (a+b)/2+(int)x%(int)y", "\n30.\u82e5\u6709\u5b9a\u4e49:char c=\u2019\\010\u2019;\u5219\u53d8\u91cfc\u4e2d\u5305\u542b\u7684\u5b57\u7b26\u4e2a\u6570\u4e3a_____________\u3002"], "title": "C\u8bed\u8a00\u9762\u8bd5\u5927\u5168\u7cfb\u5217\u5e26\u9762\u8bd5\u9898\u7b54\u6848(19)"},
{"contents": ["7\uff0e\u5fae\u578b\u8ba1\u7b97\u673a\u7684\u5185\u5b58\u662f\u7531______\u7ec4\u6210\u7684\u3002", "8\uff0e\u4e00\u4e2aC\u6e90\u7a0b\u5e8f\u4e2d\u81f3\u5c11\u5e94\u5305\u62ec\u4e00\u4e2a______\u3002", "9\uff0e\u5728\u4e00\u4e2aC\u6e90\u7a0b\u5e8f\u4e2d\uff0c\u6ce8\u91ca\u90e8\u5206\u4e24\u4fa7\u7684\u5206\u754c\u7b26\u5206\u522b\u4e3a_____\u548c_____\u3002", "10\uff0e\u5728C\u8bed\u8a00\u4e2d\uff0c\u8f93\u5165\u64cd\u4f5c\u662f\u7531\u5e93\u51fd\u6570______\u5b8c\u6210\u7684\uff0c\u8f93\u51fa\u64cd\u4f5c\u662f\u7531\u5e93\u51fd\u6570______\u5b8c\u6210\u7684\u3002", "11\uff0e\u7ecf\u8fc7\u4e0b\u8ff0\u8d4b\u690d\u540e\uff0c\u53d8\u91cfX\u7684\u6570\u636e\u7c7b\u578b\u662f_______\u3002", "Int\u00a0 x=2;", "Double y;", "Y =(int)(float)x;", "12\uff0eC\u8bed\u8a00\u7684\u57fa\u672c\u6570\u636e\u7c7b\u578b\u5206\u522b\u4e3a______\u578b\u3001______\u578b\u3001______\u578b\u3002", "13\uff0e\u82e5a\u3001b\u548cc\u5747\u662fint\u7c7b\u578b\u53d8\u91cf\uff0c\u5219\u6267\u884c\u4e0b\u9762\u8868\u8fbe\u5f0f\u540e\uff0ca\u503c\u4e3a________\uff0cb\u503c\u4e3a_______\uff0cc\u503c\u4e3a_______\u3002", "a=(b=4)+(c=2)", "14\uff0e\u82e5a\u662fint\u578b\u53d8\u91cf\uff0c\u5219\u6267\u884c\u4e0b\u9762\u8868\u8fbe\u5f0f\u540e\uff0ca\u7684\u503c\u4e3a______\u3002", "a=25/3%3", "15\uff0e\u82e5x\u548cn\u5747\u662fint\u578b\u53d8\u91cf\uff0c\u4e14x\u548cn\u7684\u521d\u503c\u5747\u4e3a5\uff0c\u5219\u6267\u884c\u4e0b\u9762\u8868\u8fbe\u5f0f\u540e\uff0cx\u7684\u503c\u4e3a\u00ad\u00ad\u00ad_____\uff0cn\u7684\u503c\u4e3a_______\u3002\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0", "x+=n++", "16\uff0e\u82e5\u6709\u5b9a\u4e49\uff1aint b=7\uff1bfloat a=2.5\uff0cc=4.7\uff1b\u5219\u6267\u884c\u4e0b\u9762\u8868\u8fbe\u5f0f\u7684\u503c\u4e3a______\u3002", "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 a+\uff08int\uff09\uff08b/3*\uff08int\uff09\uff08a+c\uff09/2\uff09%4", "17\uff0e\u82e5x\u548cy\u90fd\u662fdouble\u578b\u53d8\u91cf\uff0c\u4e14x\u7684\u521d\u503c\u4e3a3.0\uff0cy\u7684\u521d\u503c\u4e3a2.0\uff0c\u5219\u8868\u8fbe\u5f0fpow(y,fabs(x))\u7684\u503c\u4e3a_________\u3002", "18\uff0e\u82e5\u6709\u5b9a\u4e49\uff1aint e=1,f =4,g=2;float m=10.5,n=4.0,k;\u5219\u6267\u884c\u8d4b\u503c\u8868\u8fbe\u5f0fk=(e+f)/g+sqrt((double)n)*1.2/g+m\u540e\uff0ck\u7684\u503c\u4e3a______________\u3002", "19\uff0e\u8868\u8fbe\u5f0f8/4*\uff08int\uff092.5/(int)(1.25*(3.7+2.3))\u503c\u7684\u6570\u636e\u7c7b\u578b\u4e3a_______________\u3002", "20\uff0e\u8868\u8fbe\u5f0fpow(2.8,sqrt(double(x)))\u503c\u7684\u6570\u636e\u7c7b\u578b\u4e3a_______________\u3002"], "title": "C\u8bed\u8a00\u9762\u8bd5\u5927\u5168\u7cfb\u5217\u5e26\u9762\u8bd5\u9898\u7b54\u6848(18)"},
{"contents": ["4.\u672c\u7a0b\u5e8f\u7528\u9009\u62e9\u6392\u5e8f\u6cd5\u5bf9\u6570\u7ec4a\u7684\u5143\u7d20\u7531\u5c0f\u5230\u5927\u6392\u5e8f\u3002", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 void func(int a[],int n)", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {\u00a0 int max=___(1)________;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for(i=0;i<n-1;i++)", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(a[j]>a[max])", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 max=__(2)_____;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(j!=max)", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 { int t=a[max];", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 a[max]=a[_(3)_________]\u00a0", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 a[____(4)____]=t;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n}", "\n(1) 0\u00a0 (2) j\u00a0 (3) n-1-i\u00a0\u00a0 (4) n-1-i", "\n5. \u4e0b\u8ff0\u51fd\u6570\u7684\u529f\u80fd\u662f_______________________ .", "\nvoid func(int a[],int n)", "\n{ int i,j;", "\n\u00a0for(i=1;i<n;i++)", "\n\u00a0{ for(j=i;j>0 && a[j] <a[j-1];j\u2013)", "\n\u00a0\u00a0\u00a0 { int t=a[j];", "\n\u00a0\u00a0\u00a0\u00a0 a[j]=a[j-1];", "\n\u00a0\u00a0\u00a0\u00a0 a[j-1]=t;", "\n\u00a0\u00a0\u00a0 }", "\n\u00a0 }", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n(1)\u00a0\u5c06\u6570\u7ec4a\u7684\u5143\u7d20\u7531\u5c0f\u5230\u5927\u6392\u5e8f", "\n6\uff0e\u4e0b\u8ff0\u51fd\u6570\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u6574\u6570\u3002\u5b57\u7b26\u4e32\u4e2d\u5141\u8bb8\u51fa\u73b0\u524d\u5bfc\u7a7a\u683c\u7b26\u3001\u6362\u884c\u7b26\u548c\u5236\u8868\u7b26\uff0c\u9664\u6b64\u4e4b\u5916\u7684\u5176\u4ed6\u975e\u6570\u5b57\u5b57\u7b26\u5f00\u5934\u4f5c0\u5904\u7406\u3002\u6b64\u5916\uff0c\u82e5\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\u975e\u6570\u5b57\u5b57\u7b26\uff0c\u5219\u7ec8\u6b62\u5b57\u7b26\u4e32\u7684\u8f6c\u6362\u3002", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 void stoa (char * s,long * a)", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 { int i=0,sign=______(1)______;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 while(s[i]= =\u2019\u2019 \u2016s[i]= =\u2019\\t\u2019)", "\ni++;", "\nif(s[i]= =\u2019+\u2019\u2016s[i]= =\u2019\u2014\u2019)", "\n{ sing=s[i]= =\u2019+\u2019? 1: \u2014 1\uff1b", "\n____(2)__;", "\n}", "\nfor (*a=0;___(3)__;I++)", "\n*a=___(4)__;", "\n*a*=sign;", "\n}"], "title": "C\u8bed\u8a00\u9762\u8bd5\u5927\u5168\u7cfb\u5217\u5e26\u9762\u8bd5\u9898\u7b54\u6848(17)"},
{"contents": ["171\u3001\u4ee5\u4e0b\u53d9\u8ff0\u4e2d\u4e0d\u6b63\u786e\u7684\u662f\uff08B\u3000\uff09", "\nA)\u00a0\u5728C\u7a0b\u5e8f\u4e2d\uff0c\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u53ea\u80fd\u628a\u5b9e\u53c2\u7684\u503c\u4f20\u9001\u7ed9\u5f62\u53c2\uff0c\u5f62\u53c2\u7684\u503c\u4e0d\u80fd\u4f20\u9001\u7ed9\u5b9e\u53c2", "\nB)\u00a0\u5728C\u7a0b\u5e8f\u7684\u51fd\u6570\u4e2d\uff0c\u6700\u597d\u4f7f\u7528\u5168\u5c40\u53d8\u91cf", "\nC)\u00a0\u5728C\u7a0b\u5e8f\u4e2d\uff0c\u5f62\u53c2\u53ea\u662f\u5c40\u9650\u4e8e\u6240\u5728\u51fd\u6570", "\nD)\u00a0\u5728C\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570\u540d\u7684\u5b58\u50a8\u7c7b\u522b\u4e3a\u5916\u90e8", "\n172\u3001char(*A)[5],\u5219\u8868\u793a\u7b26\u7684\u610f\u4e49\u662f\uff08C \uff09", "\nB)\u00a0A\u662f\u4e00\u4e2a\u6307\u5411\u67095\u4e2a\u5b57\u7b26\u578b\u5143\u7d20\u7684\u6307\u9488\u53d8\u91cf\u3002", "\nC)\u00a0A\u662f\u4e00\u4e2a\u67095\u4e2a\u5143\u7d20\u7684\u4e00\u7ef4\u6570\u7ec4\uff0c\u6bcf\u4e2a\u5143\u7d20\u662f\u6307\u5411\u5b57\u7b26\u578b\u7684\u6307\u9488\u53d8\u91cf\u3002", "\nD)\u00a0A\u662f\u4e00\u4e2a\u6307\u5411\u5b57\u7b26\u578b\u7684\u51fd\u6570\u7684\u6307\u9488\u53d8\u91cf\u3002", "\nE)\u00a0A\u662f\u4e00\u4e2a\u67095\u4e2a\u5143\u7d20\u7684\u4e00\u7ef4\u6570\u7ec4\uff0c\u6bcf\u4e2a\u5143\u7d20\u6307\u5411\u6574\u578b\u53d8\u91cf\u7684\u6307\u9488\u53d8\u91cf\u3002", "\n174\u3001C\u8bed\u8a00\u4e2d\u7684\u6784\u9020\u7c7b\u578b\u6570\u636e\u5305\u62ec\uff08E \uff09", "\nE)\u00a0\u6570\u7ec4\u7c7b\u578b\u3001\u6784\u9020\u4f53\u7c7b\u578b\u548c\u5171\u7528\u4f53\u7c7b\u578b", "\nF)\u00a0\u6570\u7ec4\u7c7b\u578b\u3001\u7ed3\u6784\u4f53\u7c7b\u578b\u548c\u6307\u9488\u7c7b\u578b", "\nG)\u00a0\u6570\u7ec4\u7c7b\u578b\u3001\u7ed3\u6784\u4f53\u7c7b\u578b\u548c\u679a\u4e3e\u7c7b\u578b", "\nH)\u00a0\u6570\u7ec4\u7c7b\u578b\u3001\u7ed3\u6784\u4f53\u7c7b\u578b\u548c\u7a7a\u7c7b\u578b", "\n175\u3001\u82e5\u6709\u5b9a\u4e49\uff1aint A[3][4];\u80fd\u8868\u73b0\u6570\u7ec4\u5143\u7d20A[1][1]\u7684\u662f\uff08B \uff09", "\nA)(A[1]+1)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)*(&A[1][1])\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)(*(A+1)[1])\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)*(A+5)"], "title": "C\u8bed\u8a00\u9762\u8bd5\u5927\u5168\u7cfb\u5217\u5e26\u9762\u8bd5\u9898\u7b54\u6848(15)"},
{"contents": ["161\u3001\u4e0b\u8ff0\u8868\u8fbe\u5f0f\u4e2d\uff0c\uff08\u3000D\uff09\u53ef\u4ee5\u6b63\u786e\u8868\u793ax<=0\u6216x>=1\u7684\u5173\u7cfb\u3002", "\nA)(x>=1)\u2016(x<=0)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B) x>1\u2016x<=0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C) x>=1.OR.x<=0", "\nD)x>=1\u2016x<=0", "\n162\u3001\u82e5\u5df2\u5b9a\u4e49a\u4e3a\u6574\u578b\u6570\u636e\u53d8\u91cf\uff0c\u5219\u8bed\u53e5", "\na=-2L;", "\nprintf(\u201c%d\\n\u201d, a);B", "\nA)\u8d4b\u503c\u4e0d\u5408\u6cd5\u3000\u3000\u3000\u3000B)\u8f93\u51fa\u503c\u4e3a-\uff12\u3000\u3000\u3000\u3000C)\u8f93\u51fa\u4e3a\u4e0d\u786e\u5b9a\u503c", "\nE)\u00a0\u8f93\u51fa\u503c\u4e3a\uff12", "\n163\u3001\u73b0\u5df2\u5b9a\u4e49\u6574\u578b\u53d8\u91cfint i=1;\u6267\u884c\u5faa\u73af\u8bed\u53e5while(i++<5);\u540eI\u7684\u503c\u4e3a\uff08C\u3000\uff09", "\nA)1\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)5\u00a0\u00a0\u00a0\u00a0\u00a0 C)6\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)\u4ee5\u4e0a\u4e09\u4e2a\u7b54\u6848\u5747\u4e0d\u6b63\u786e", "\n164\u3001\uff08\u3000D\uff09\u662f\u4e0d\u6b63\u786e\u7684C\u8bed\u8a00\u8d4b\u503c\u8bed\u53e5\u3002", "\nA)x=1, y=2;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)x++;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)x=y=5;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)y=int(x);", "\n165\u3001C\u8bed\u8a00\u53ef\u6267\u884c\u7a0b\u5e8f\u7684\u5f00\u59cb\u6267\u884c\u70b9\u662f\uff08C\u3000\uff09", "\nA)\u7a0b\u5e8f\u4e2d\u7b2c\u4e00\u6761\u53ef\u6267\u884c\u8bed\u53e5\u3000\u3000\u3000\u3000\u3000\u3000B)\u7a0b\u5e8f\u4e2d\u7b2c\u4e00\u4e2a\u51fd\u6570", "\nC)\u7a0b\u5e8f\u4e2d\u7684main\u51fd\u6570\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000D)\u5305\u542b\u6587\u4ef6\u4e2d\u7684\u7b2c\u4e00\u4e2a\u51fd\u6570", "\n166\u3001\u6709\u5173\u4e0b\u8ff0\u8bed\u53e5\u8f93\u51fa\u7684\u5224\u65ad\u4e2d\uff0c\u6b63\u786e\u7684\u662f\uff08B\u3000\uff09", "\nchar x=\u2019\\xe0-1\u2019;\u00a0\u00a0\u00a0\u00a0\u00a0", "\nprintf(\u201c%d\u201d, x);", "\nA)\u8d4b\u503c\u975e\u6cd5\u3000\u3000\u3000\u3000B)\u8f93\u51fa\u503c\u4e0d\u6b63\u786e\u3000\u3000\u3000\u3000C)\u8f93\u51fa\u503c\u4e3a49", "\nE)\u00a0\u8f93\u51fa\u503c\u4e3a224", "\n167\u3001\u4e0b\u8ff0for\u8bed\u53e5", "\nint I,x;", "\nfor(i=0,x=1,i<=9&&x!=876;i++)", "\n\u00a0 scanf(\u201c%d\u201d, &x);A", "\nA)\u6700\u591a\u5faa\u73af10\u6b21\u00a0\u00a0\u00a0\u00a0\u00a0 B)\u6700\u591a\u5faa\u73af\uff19\u6b21\u3000\u3000\u3000\u3000C)\u65e0\u9650\u5faa\u73af\u3000\u3000", "\nA)\u00a0\u4e00\u6b21\u4e5f\u4e0d\u5faa\u73af", "\n168\u3001\u4e0b\u5217\u5173\u4e8eswitch\u8bed\u53e5\u548cbreak\u8bed\u53e5\u7684\u7ed3\u8bba\u4e2d\uff0c\u53ea\u6709\uff08B\u3000\uff09\u662f\u6b63\u786e\u7684\u3002", "\nA)\u00a0break\u8bed\u53e5\u662fswitch\u8bed\u53e5\u4e2d\u7684\u4e00\u90e8\u5206", "\nB)\u00a0\u5728switch\u8bed\u53e5\u4e2d\u53ef\u4ee5\u6839\u636e\u9700\u8981\u4f7f\u7528\u6216\u4e0d\u4f7f\u7528break\u8bed\u53e5", "\nC)\u00a0\u5728switch\u8bed\u53e5\u4e2d\u5fc5\u987b\u4f7f\u7528break\u8bed\u53e5", "\nD)\u00a0\u4ee5\u4e0a\u4e09\u4e2a\u7ed3\u8bba\u4e2d\u6709\u4e24\u4e2a\u662f\u6b63\u786e\u7684\u3000", "\n169\u3001\u8bbe\u5df2\u5b9a\u4e49i\u548ck\u4e3aint\u7c7b\u578b\u53d8\u91cf\uff0c\u5219\u4ee5\u4e0bfor\u5faa\u73af\u8bed\u53e5", "\nfor(I=0;k= -1,k=1; i++,k++)", "\n\u00a0 printf(\u201c****\\n\u201d);B", "\nA)\u5224\u65ad\u5faa\u73af\u7ed3\u675f\u7684\u6761\u4ef6\u4e0d\u5408\u6cd5\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)\u662f\u65e0\u9650\u5faa\u73af", "\nC)\u5faa\u73af\u4f9d\u6b21\u4e5f\u4e0d\u6267\u884c\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)\u5faa\u73af\u53ea\u6267\u884c\u4e00\u6b21", "\n170\u3001\u5b57\u7b26\u4e32\u201d\\\\\\\u201dABC\u201d\\\\\u201d\u7684\u957f\u5ea6\u662f\uff08B \uff09", "\nA)11\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)5\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)3"], "title": "C\u8bed\u8a00\u9762\u8bd5\u5927\u5168\u7cfb\u5217\u5e26\u9762\u8bd5\u9898\u7b54\u6848(14)"},
{"contents": ["\u4e8c\u3001\u00a0\u586b\u7a7a\u3002", "\n1\uff0e\u00a0\u4e0b\u8ff0\u51fd\u6570\u5728\u4e00\u7ef4\u6570\u7ec4v\u4e0a\u5c06x\u63d2\u5165\u5230\u4e0b\u6807\u4e3ai\u7684\u5143\u7d20\u524d, i\u22650.\u5982\u679ci\u2265\u5143\u7d20\u7684\u4e2a\u6570\uff0c\u5219x\u63d2\u5230\u672b\u5c3e\u3002\u539f\u6709\u7684\u5143\u7d20\u4e2a\u6570\u5b58\u653e\u5728\u6307\u9488n\u6240\u6307\u5411\u7684\u53d8\u91cf\u4e2d\uff0c\u63d2\u5165\u540e\u5143\u7d20\u4e2a\u6570\u589e\u52a0\u3002", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 void insline(double v[],int *n,double x,int i)", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {\u00a0 int j;", "\nif(__(1)______ )", "\nfor(j=*n-1;___(2)____;j\u2013)", "\n_____(3)______=v[j];", "\nelse", "\n\u00a0 i=*n;", "\nv[i]=___(4)_____;", "\n(*n++);", "\n(1)\u00a0 i<*n\u00a0 (2)\u00a0 j>=i\u00a0 (3)\u00a0 v[j+1]\u00a0 (4)\u00a0 x", "\n2. \u4e0b\u8ff0\u51fd\u6570\u7528\u4e8c\u5206\u6cd5\u67e5\u627ekey\u503c\u3002\u6570\u7ec4\u4e2d\u5143\u7d20\u503c\u5df2\u6309\u9012\u589e\u6b21\u5e8f\u6392\u5217\uff0c\u82e5\u627e\u5230key\u503c\u5219\u8fd4\u56de\u5bf9\u5e94\u7684\u4e0b\u6807\uff0c\u5426\u5219\u8fd4\u56de-1\u3002", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int binary(double a[],int n,double key)", "\n{int low,high,mid;", "\n\u00a0low=0;", "\n\u00a0high=n-1;", "\n\u00a0while(__(1)______)", "\n{mid=(low+high)/2;", "\n\u00a0if(key<a[mid])", "\n____(2)______;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 else", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(key>a[mid])", "\n___(3)_________;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 else", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 _____(4)__________;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return \u20131;", "\n}", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 (1)low<=high\u00a0 (2)high=mid-1\u00a0 (3)low=mid+1\u00a0 (4)return mid", "\n3.\u672c\u7a0b\u5e8f\u7528\u6539\u8fdb\u7684\u6c14\u6ce1\u6392\u5e8f\u6cd5\u5bf9\u6570\u7ec4a\u7684\u5143\u7d20\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002", "\nvoid bubble(int a[],int n)", "\n{ int j,k,jmax,temp;", "\n\u00a0 jmax=____(1)______;", "\n\u00a0 do", "\n\u00a0{\u00a0 k=__(2)________;", "\n\u00a0\u00a0\u00a0 for(j=0;j<jmax;j++)", "\n\u00a0\u00a0\u00a0 if(a[j]>a[j+1])", "\n\u00a0\u00a0 {\u00a0 temp=a[j];", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 a[j]=a[j+1];", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 a[j+1]=temp;", "\n\u00a0\u00a0\u00a0 k=__(3)_____________;", "\n\u00a0 }", "\n\u00a0 jmax=__(4)________;", "\n}while(jmax>0);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n(1)n-1\u00a0 (2)0\u00a0 (3)j\u00a0\u00a0 (4)k"], "title": "C\u8bed\u8a00\u9762\u8bd5\u5927\u5168\u7cfb\u5217\u5e26\u9762\u8bd5\u9898\u7b54\u6848(16)"},
{"contents": ["151\u3001\uff08A \uff09\u662f\u6784\u6210C\u8bed\u8a00\u7a0b\u5e8f\u7684\u57fa\u672c\u5355\u4f4d\u3002", "\nA)\u51fd\u6570\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)\u8fc7\u7a0b\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)1", "\n152\u3001\u82e5x\u4e3aint\u578b\u53d8\u91cf\uff0c\u5219\u6267\u884c\u4ee5\u4e0b\u8bed\u53e5\u540e\uff0cx\u7684\u503c\u4e3a\uff08 B\uff09", "\nx=6;", "\nx+=x-=x*x;", "\nA)36\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)-60\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)60\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)-24", "\n153\u3001\u80fd\u5c06\u9ad8\u7ea7\u8bed\u8a00\u7a0b\u5e8f\u8f6c\u6362\u6210\u76ee\u6807\u7a0b\u5e8f\u7684\u662f\uff08 C\uff09", "\nA)\u8c03\u8bd5\u7a0b\u5e8f\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)\u89e3\u91ca\u7a0b\u5e8f\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)\u7f16\u8bd1\u7a0b\u5e8f\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)\u7f16\u8f91\u7a0b\u5e8f", "\n154\u3001\u4ee5\u4e0b\u8fd0\u7b97\u7b26\u4e2d\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u8fd0\u7b97\u7b26\u4e3a\uff08D \uff09", "\nA)&&\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)&\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)\u2016\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)!=", "\n155\u3001C\u8bed\u8a00\u7684\u7a0b\u5e8f\u4e00\u884c\u5199\u4e0d\u4e0b\u65f6\uff0c\uff08C\u3000\uff09", "\nA)\u7528\u9017\u53f7\u6362\u884c\u3000\u00a0\u00a0\u00a0\u00a0\u00a0 B)\u7528\u5206\u53f7\u6362\u884c\u3000\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)\u5728\u4efb\u610f\u4e00\u7a7a\u683c\u5904\u6362\u884c", "\nE)\u00a0\u7528\u56de\u8f66\u7b26\u6362\u884c", "\n156\u3001\u4e0b\u8ff0\u6807\u8bc6\u7b26\u4e2d\uff0c\uff08\u3000A\uff09\u662f\u5408\u6cd5\u7684\u7528\u6237\u6807\u8bc6\u7b26\u3002", "\nA)Long\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)-2Test\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)3Dmax\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)A.dat", "\n157\u3001\u51fd\u6570double sqrt(x)\u7684\u529f\u80fd\u662f\uff08B\u3000\uff09", "\nA)\u6c42x\u7684\u5e73\u65b9\u3000\u3000\u3000B)\u6c42x\u7684\u5e73\u65b9\u6839\u3000\u3000\u3000C)\u6c42x\u7684\u5bf9\u6570\u3000\u3000D)\u6c42x\u7684\u7edd\u5bf9\u503c", "\n158\u3001\uff08B\u3000\uff09\u662f\u975e\u6cd5\u7684C\u8bed\u8a00\u8f6c\u4e49\u5b57\u7b26\u3002", "\nA)\u2019\\b\u2019\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)\u2019\\0xf\u2019\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)\u2019\\037\u2019\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)\u2019\\\u2019\u2019", "\n159\u3001\u8bed\u53e5char s=\u2019\\092\u2019\uff1b\u7684\u4f5c\u7528\u662f(\u00a0B )", "\nA)\u4f7fs\u5305\u542b\u4e00\u4e2a\u5b57\u7b26\u3000\u3000\u3000\u3000\u3000\u3000\u3000B)\u8bf4\u660e\u4e0d\u5408\u6cd5\uff0cs\u7684\u503c\u4e0d\u5b9a\u3000\u3000", "\nC)\u4f7fs\u5305\u542b\u56db\u4e2a\u5b57\u7b26\u3000\u3000\u3000\u3000\u3000\u3000\u3000D)\u4f7fs\u5305\u542b\u4e09\u4e2a\u5b57\u7b26", "\n160\u3001\u5728C\u8bed\u8a00\u4e2d\uff0cint \u3001char\u548c short\u4e09\u4e2d\u7c7b\u578b\u6570\u636e\u6240\u5360\u7528\u7684\u5185\u5b58\uff08C\u3000\uff09", "\nA)\u5747\u4e3a\uff12\u4e2a\u5b57\u8282\u3000\u3000\u3000\u3000\u3000\u3000\u3000B)\u7531\u7528\u6237\u81ea\u5df1\u5b9a\u4e49\u3000\u3000\u3000\u3000", "\nC)\u7531\u6240\u6709\u673a\u5668\u7684\u673a\u5668\u5b57\u957f\u51b3\u5b9a\u3000\u3000\u3000\u3000\u3000\u3000D)\u662f\u4efb\u610f\u7684"], "title": "C\u8bed\u8a00\u9762\u8bd5\u5927\u5168\u7cfb\u5217\u5e26\u9762\u8bd5\u9898\u7b54\u6848(13)"},
{"contents": ["141\u3001\u5bf9\u4e8e\u4e24\u4e2a\u57fa\u7c7b\u578b\u76f8\u540c\u7684\u6307\u9488\u53d8\u91cf\uff0c\u4e0d\u80fd\u8fdb\u884c\uff08 D\uff09\u8fd0\u7b97\u3002", "\nA)+\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)=\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)= =", "\n142\u3001\u82e5\u6709\u4ee5\u4e0b\u8bf4\u660e\uff0c\u5e76\u4e140\u2264i<10,\u5219\uff08C \uff09\u662f\u5bf9\u6570\u7ec4\u5143\u7d20\u7684\u9519\u8bef\u5f15\u7528\u3002", "\nint a[]={1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, *p=a, I;", "\nA)*(a+i)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)a[p-a+i]\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 c)p+i\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)*(&a[i])", "\n143\u3001\u82e5\u5b9a\u4e49int a[4][10];\u5219\u4ee5\u4e0b\u9009\u9879\u4e2d\u5bf9\u6570\u7ec4\u5143\u7d20a[i][j]\u7684\u9519\u8bef\u7684\u5e94\u7528\u662f\uff08 B\uff09", "\n\uff08\u5176\u4e2d0 <=i<4,0<=j<10\uff09\u3002", "\n\u00a0A)*(&a[0][0]+10*i+j)", "\n\u00a0B)(a+i)[j]", "\n\u00a0c)*(a+i)[j]", "\n\u00a0D)*(a+i+j)", "\n144\u3001\u4e0b\u5217\u5404\u7ec4\u5b9a\u4e49\u7a0b\u5e8f\u6bb5\uff0c\u6b63\u786e\u7684\u662f\uff08C \uff09", "\nA)\u00a0int n=10;", "\nint a[n];", "\nB)\u00a0main()", "\n{char str[10]=\u201da man\u201d;}", "\nC)\u00a0static int[][3]={{0, 1, 2},{80, 89, 2}}", "\nD)\u00a0static char[5]=\u201di am a student.\u201d;", "\n145\u3001\u4e0e\u5341\u516d\u8fdb\u5236\u6570BB\u7b49\u503c\u7684\u5341\u8fdb\u5236\u6570\u662f\uff08A \uff09", "\nA)187\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)188\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)185\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)186", "\n146\u3001\u5728C\u8bed\u8a00\u4e2d\uff0c\u5b57\u7b26\u578b\u6570\u636e\u6742\u5185\u5b58\u4e2d\u4ee5\uff08 D\uff09\u5f62\u5f0f\u5b58\u653e\u3002", "\nA)\u539f\u7801\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)BCD\u7801\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)\u53cd\u7801\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)ASCII\u7801", "\n147\u3001\u4e0b\u5217\u8fd0\u7b97\u7b26\u4e2d\uff0c\u4e0d\u5c5e\u4e8e\u5173\u7cfb\u8fd0\u7b97\u7b26\u7684\u662f\uff08 C\uff09", "\nA)>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)>=\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 c)=\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)1", "\n148\u3001byte\u7684\u610f\u601d\u662f\uff08C \uff09", "\nA)\u5b57\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)\u5b57\u957f\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C\uff09\u5b57\u8282\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D\uff09\u4e8c\u8fdb\u5236\u503c", "\n149\u3001\u53ef\u4ee5\u5728C\u8bed\u8a00\u7a0b\u5e8f\u4e2d\u7528\u505a\u7528\u6237\u6807\u8bc6\u7b26\u7684\u4e00\u7ec4\u6807\u8bc6\u7b26\u662f\uff08B \uff09", "\nA)void\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)as_b3\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)for\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)2c", "\n\u00a0 define\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 _123\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 -abc\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Do", "\n\u00a0 WORD\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 If\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 cas\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 SIC", "\n150\u3001\u8868\u8fbe\u5f0f10\uff01=9\u7684\u503c\u662f\uff08D \uff09", "\nA)ture\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)\u975e\u96f6\u503c\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)1"], "title": "C\u8bed\u8a00\u9762\u8bd5\u5927\u5168\u7cfb\u5217\u5e26\u9762\u8bd5\u9898\u7b54\u6848(12)"},
{"contents": ["131\u3001C\u8bed\u8a00\u4e2d\u7684\u6784\u9020\u7c7b\u578b\u6570\u636e\u5305\u62ec\uff08 A\uff09", "\nA)\u00a0\u6570\u7ec4\u7c7b\u578b\u3001\u6784\u9020\u4f53\u7c7b\u578b\u548c\u5171\u7528\u4f53\u7c7b\u578b", "\nB)\u00a0\u6570\u7ec4\u7c7b\u578b\u3001\u7ed3\u6784\u4f53\u7c7b\u578b\u548c\u6307\u9488\u7c7b\u578b", "\nC)\u00a0\u6570\u7ec4\u7c7b\u578b\u3001\u7ed3\u6784\u4f53\u7c7b\u578b\u548c\u679a\u4e3e\u7c7b\u578b", "\nD)\u00a0\u6570\u7ec4\u7c7b\u578b\u3001\u7ed3\u6784\u4f53\u7c7b\u578b\u548c\u7a7a\u7c7b\u578b", "\n130\u3001\u82e5\u6709\u5b9a\u4e49\uff1aint A[3][4];\u80fd\u8868\u73b0\u6570\u7ec4\u5143\u7d20A[1][1]\u7684\u662f\uff08 B\uff09", "\nA)(A[1]+1)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)*(&A[1][1])\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)(*(A+1)[1])\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)*(A+5)", "\n131\u3001\u4ee5\u4e0b\u7a0b\u5e8f\u6bb5\u53d9\u8ff0\u6b63\u786e\u7684\u662f\uff08A \uff09", "\nchar A[]=\u201dChinese\u201d;", "\nchar *p;", "\np=A;", "\nA)*p\u548cA[0]\u76f8\u7b49\u3002\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)A\u548cp\u5b8c\u5168\u76f8\u7b49\u3002\u00a0\u00a0\u00a0 C)A\u548cp\u4e2d\u7684\u5185\u5bb9\u76f8\u7b49\u3002", "\nD)A\u6570\u7ec4\u7684\u957f\u5ea6\u548cp\u6240\u6307\u5411\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\u76f8\u7b49\u3002", "\n132\u3001\u6709\u4e0b\u5217\u8bed\u53e5\u548c\u8d4b\u503c\u8bed\u53e5\uff1a", "\n\uff081\uff09\u00a0char str[]=\u201di am aboy.\u201d", "\n\uff082\uff09\u00a0charstr[12]=\u201di am a boy.\u201d", "\n\uff083\uff09\u00a0char *p=\u201di am aboy.\u201d", "\n\uff084\uff09\u00a0char *p;\u00a0 p=\u201di am a boy.\u201d", "\n\u4e0b\u5217\u8bf4\u6cd5\u6b63\u786e\u7684\u662f\uff08 B\uff09", "\n\u00a0A)\u53ea\u6709\uff081\uff09\u3001\uff082\uff09\u6b63\u786e\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B) \u53ea\u6709\uff083\uff09\u3001\uff084\uff09\u6b63\u786e\u00a0\u00a0\u00a0\u00a0", "\nC) \u53ea\u6709\uff081\uff09\u3001\uff083\uff09\u3001\uff084\uff09\u6b63\u786e\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D) \u53ea\u6709\uff083\uff09\u6b63\u786e", "\n133\u3001\u6709\u4e0b\u5217\u57fa\u672c\u7c7b\u578b\u76f8\u540c\u7684\u6307\u9488p1,p2\uff0c\u5219\u4e0b\u5217\u8fd0\u7b97\u4e0d\u5408\u7406\u7684\u662f\uff08 A\uff09", "\nA)0000000000p1/=5\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)p1-p2\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)p1=p2\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)p1= =p2", "\n134\u3001\u5728\u8bf4\u660e\u8bed\u53e5float f[3][4], *p1,*p2[3],k\u4e2d\uff0c\u82e5k>=0\u4e14k>3\uff0c\u5219\u4e0b\u5217\u8d4b\u503c\u8bed\u53e5\u4e2d\u9519\u8bef\u7684\u662f\uff08 A\uff09", "\nA)p2=f\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)p1=f[k]\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)p2[k]=f[k]\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)p1=&[0][0]", "\n135\u3001\u5982\u4e0b\u5b9a\u4e49\u8bed\u53e5\uff0c\u5219\u4e0b\u5217\u7b26\u53f7\u4e2d\u5747\u6b63\u786e\u5730\u4ee3\u8868x\u7684\u5730\u5740\u7684\u9009\u9879\u662f\uff08D \uff09", "\nint x, *p;", "\np=&x;", "\nA)&x, p, &*x\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)*&x, p\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)*p, &p, x\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)&x, &*p, p", "\n136\u3001\u5bf9\u4e8e\u5b9a\u4e49float *p[4]\uff1b\u5219\u4e0b\u9762\u7684\u53d9\u8ff0\u4e2d\u6b63\u786e\u7684\u662f\uff08D \uff09", "\nA)\u00a0\u6b64\u5b9a\u4e49\u4e0d\u6b63\u786e\uff0c\u8981\u6539\u4e3achar *p[4]\uff1b\u5b9a\u4e49\u624d\u662f\u6b63\u786e\u7684\u3002", "\nB)\u00a0\u6b64\u5b9a\u4e49\u4e0d\u6b63\u786e\uff0cp\u662f\u6307\u5411\u4e00\u7ef4\u5b9e\u578b\u6570\u7ec4\u7684\u6307\u9488\u53d8\u91cf\uff0c\u800c\u4e0d\u662f\u6307\u5411\u5355\u4e2a\u5b9e\u578b\u53d8\u91cf\u7684\u6307\u9488\u53d8\u91cf\u3002", "\nC)\u00a0\u6b64\u5b9a\u4e49\u4e0d\u6b63\u786e\uff0cC\u8bed\u8a00\u4e2d\u4e0d\u5141\u8bb8\u7c7b\u4f3c\u7684\u5b9a\u4e49\u3002", "\nD)\u00a0\u6b64\u5b9a\u4e49\u4e0d\u6b63\u786e\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6307\u9488\u6570\u7ec4\u3002", "\n137\u3001\u4e0b\u9762\u7a0b\u5e8f\u6bb5\u7684\u8f93\u51fa\u662f\uff08 C\uff09", "\nstatic char A[]={\u201cAbcdef\u201d};", "\nchar *p;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 p=A;", "\n(p+2)+=3;printf(\u201c%c, %c\\n\u201d,p,*(p+2));", "\nA)d, f\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)c, e\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)A,f\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)f, e", "\n138\u3001\u5982\u4e0b\u7a0b\u5e8f\u6bb5\uff1a", "\nstatic int m[3][4]={1, 2, 3, 4, 5, 6, 7, 8};", "\nint *p=&m[0][0];", "\nprintf(\u201c%d\u201d,*(p+1)[1]);", "\n\u5219\u4e0b\u5217\u8bf4\u6cd5\u6b63\u786e\u7684\u662f\uff08A \uff09", "\nA)\u00a0\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a0", "\nB)\u00a0\u8f93\u51fa\u7ed3\u679c\u4e3a:6", "\nC)\u00a0\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a0\uff0c6", "\nD)\u00a0\u5c06\u8f93\u51fa\u6570\u636e\u5143\u7d20\u7684\u5730\u5740\u800c\u4e0d\u662f\u6570\u636e\u5143\u7d20\u503c\u3002", "\n139\u3001\u6267\u884c\u4e0b\u9762\u7a0b\u5e8f\u6bb5\uff0c\u8f93\u51fa\u7ed3\u679c\u662f\uff08 D\uff09", "\nchar *p=\u201dstudent\u201d;", "\np++;", "\nprintf(\u201c%d\u201d, p);", "\nA)s\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)student\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)t\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)p\u7684\u5730\u5740", "\n140\u3001\u6709\u5b9a\u4e49\uff1afloat x=3.14, *p;", "\n\u4e0b\u5217\u9519\u8bef\u7684\u8bed\u53e5\u662f\uff08 B\uff09", "\nA)p=&x\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)p=x\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)*p=3\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)*p=x"], "title": "C\u8bed\u8a00\u9762\u8bd5\u5927\u5168\u7cfb\u5217\u5e26\u9762\u8bd5\u9898\u7b54\u6848(11)"},
{"contents": ["121\u3001\u4e3a\u4e86\u907f\u514d\u5d4c\u5957\u7684\u6761\u4ef6\u8bed\u53e5if-else\u7684\u4e8c\u4e49\u6027\uff0cC\u8bed\u8a00\u89c4\u5b9a\uff1aelse\u4e0e\uff08B\u3000\uff09\u5339\u914d\u3002", "\n\u3000\u3000A)\u7f29\u6392\u4f4d\u7f6e\u76f8\u540c\u7684if\u00a0\u00a0\u00a0\u00a0 B )\u5176\u4e4b\u524d\u6700\u8fd1\u7684if\u3000\u3000\u3000C)\u5176\u4e4b\u540eif\u3000\u3000\u3000D)\u540c\u4e00\u884c\u4e0a\u7684if", "\n122\u3001\u8bbei\u548cx\u90fd\u662fint\u7c7b\u578b\uff0c\u5219\u5bf9\u4e8efor\u5faa\u73af\u8bed\u53e5for(i=0,x=0;i<9;i++),\u4e0b\u5217\u54ea\u53e5\u8bed\u6b63\u786e\uff08B\u3000\uff09", "\n\u3000\u3000A)\u6267\u884c\uff18\u6b21\u3000\u3000\u3000\u3000B)\u6267\u884c\uff19\u6b21\u3000\u3000\u3000\u3000C)\u662f\u65e0\u9650\u5faa\u73af\u3000\u3000\u3000D)\u5faa\u73af\u4f53\u4e00\u6b21\u4e5f\u4e0d\u6267\u884c", "\n123\u3001\u4e0b\u9762\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f\uff08C\u3000\uff09", "\n\u3000\u3000main()", "\n\u00a0\u00a0\u00a0 { int s1=2, c2=0;", "\n\u00a0\u00a0\u00a0 while(!c2\u2013)", "\n\u00a0\u00a0\u00a0 printf(%d,\u00a0 %d,\u00a0 c1\u2013,\u00a0 c2);", "\n\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0\u00a0 A)\u9677\u5165\u6b7b\u5faa\u73af\u3000\u3000\u3000B)\u4e0d\u8f93\u51fa\u4efb\u4f55\u5185\u5bb9\u3000\u3000\u3000\u3000C)\u8f93\u51fa\uff12, -1\u00a0\u00a0\u00a0\u00a0 D)\u8f93\u51fa\uff12\uff0c\uff10", "\n124\u3001\u5728\u4e0b\u8ff0\u7a0b\u5e8f\u4e2d\uff0c\u5224\u65adi>j\u5171\u6267\u884c\u4e86\uff08A\u3000\uff09\u6b21\u3002", "\n\u3000\u3000#include<stdio.h>", "\n\u00a0\u00a0\u00a0 void main()", "\n\u00a0\u00a0\u00a0 { int i=0, j=10, k=2, s=0;", "\nfor(;\u00a0 ;)", "\n{\u00a0 i+=k;", "\nif(i>j)", "\n{ printf(\u201c%d\u201d, s);", "\nbreak;}", "\ns+=i", "\n}", "\n}", "\nA)4\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)5\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)6", "\n125\u3001\u5047\u8bbeint\u00a0 a, b, c, w;\u4e14a, b\u5747\u5df2\u7ecf\u88ab\u8d4b\u503c\uff0c\u540c\u65f6\u6ee1\u8db3\u6761\u4ef6a<>b,\u6267\u884c\u4ee5\u4e0b\u7a0b\u5e8f\u540e\u8981\u628ac\u7684\u503c\u8d4b\u503c\u7ed9w\uff0c\u4ece\u952e\u76d8\u4e0a\u8f93\u5165c\u7684\u503c\u4e0d\u5e94\u53d6\u7684\u8303\u56f4\u662f\uff08B \uff09", "\n\u00a0\u00a0\u00a0 scanf(\u201c%d\u201d, &c);", "\nw=b;", "\nif(w<=c)", "\nprintf(\u201c%d\u201d, w);", "\nelse", "\nw=c;", "\nA)b>c\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)b<=c\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)c>a&&c<b\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)c<a\u2016c<b", "\n126\u3001\u6267\u884c\u4e0b\u9762\u7684\u7a0b\u5e8f\u540e\u7684\u6570\u5b66\u6237\u7ed3\u679c\u4e3a\uff08 \uff09", "\nint x, y, z", "\nx=20, y=40, z=15;", "\nwhile(x>y)", "\nx+=4, y-=4;", "\nz/=2;", "\nprintf(\u201c%d, %d, %d\u201d, x, y, z);", "\nA)40, 36, 30\u00a0\u00a0\u00a0\u00a0\u00a0 B)32, 8, 7\u00a0\u00a0\u00a0\u00a0\u00a0 C)32, 28, 7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)32, 28,7.5", "\n127\u3001\u5bf9\u4e8e\u5faa\u73af\u8bed\u53e5while\uff081\uff09\uff1b\u4e0b\u9762\uff08 \uff09\u662f\u6b63\u786e\u7684\u3002", "\nA)\u6b7b\u5faa\u73af\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)\u5faa\u73af\u4e00\u6b21\u00a0\u00a0\u00a0\u00a0\u00a0 C)\u4e0d\u8fdb\u5982\u5faa\u73af\u4f53\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)\u7f16\u8bd1\u6709\u9519", "\n128\u3001\u4e0b\u8ff0\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff08 \uff09", "\n#include<stdio.h>", "\nmain()", "\n{ int Y=100;", "\nwhile(Y\u2013);", "\nprintf(\u201cy=%d\u201d,Y);", "\n}", "\nA)Y=0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)Y=1\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)Y=\u968f\u673a\u503c\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)Y=-1", "\n129\u3001C\u8bed\u8a00\u4e2d\uff0c\u4e0b\u5217\u8bf4\u6cd5\u6b63\u786e\u7684\u662f\uff08 \uff09", "\nA)\u00a0\u4e0d\u80fd\u4f7f\u7528do\u2026while\u8bed\u53e5\u6784\u6210\u5faa\u73af\u3002\u00a0", "\nB)\u00a0do\u2026while\u8bed\u53e5\u6784\u6210\u7684\u5faa\u73af\u5fc5\u987b\u7528break\u8bed\u53e5\u624d\u80fd\u9000\u51fa\u3002", "\nC)\u00a0do\u2026while\u8bed\u53e5\u6784\u6210\u7684\u5faa\u73af\uff0c\u5f53while\u8bed\u53e5\u4e2d\u7684\u8868\u8fbe\u5f0f\u503c\u4e3a\u975e0\u7ed3\u675f\u5faa\u73af\u3002", "\nD)\u00a0do\u2026while\u8bed\u53e5\u6784\u6210\u7684\u5faa\u73af\uff0c\u5f53while\u8bed\u53e5\u4e2d\u7684\u8868\u8fbe\u5f0f\u503c\u4e3a0\u7ed3\u675f\u5faa\u73af\u3002", "\n130\u3001\u4ee5\u4e0bfor\u5faa\u73af\u8bed\u53e5\uff08 \uff09", "\nfor(;\u00a0 ;)", "\nprintf(\u201c*\u201d);", "\nA)\u5224\u65ad\u5faa\u73af\u7ed3\u675f\u7684\u6761\u4ef6\u4e0d\u5408\u6cd5\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)\u662f\u65e0\u9650\u5faa\u73af", "\nC)\u5faa\u73af\u4e00\u6b21\u4e5f\u4e0d\u6267\u884c\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)\u5faa\u73af\u53ea\u6267\u884c\u4e00\u6b21"], "title": "C\u8bed\u8a00\u9762\u8bd5\u5927\u5168\u7cfb\u5217\u5e26\u9762\u8bd5\u9898\u7b54\u6848(10)"},
{"contents": ["111\u3001\uff08D \uff09\u662f\u4e0d\u6b63\u786e\u7684C\u8bed\u8a00\u8d4b\u503c\u8bed\u53e5\u3002", "\n\u00a0\u00a0 A)a=a+1;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)i++;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)a*=1, b=8;\u00a0\u00a0\u00a0\u00a0\u00a0 D)a=3", "\n112\u3001C\u8bed\u8a00\u7a0b\u5e8f\u7684\u4e09\u79cd\u57fa\u672c\u7ed3\u6784\u662f\uff08A \uff09", "\n\u00a0\u00a0 A)\u987a\u5e8f\u7ed3\u6784\uff0c\u9009\u62e9\u7ed3\u6784\uff0c\u5faa\u73af\u7ed3\u6784\u00a0\u00a0\u00a0 B)\u9012\u5f52\u7ed3\u6784\uff0c\u5faa\u73af\u7ed3\u6784\uff0c\u8f6c\u79fb\u7ed3\u6784", "\nC)\u5d4c\u5957\u7ed3\u6784\uff0c\u9012\u5f52\u7ed3\u6784\uff0c\u987a\u5e8f\u7ed3\u6784\u00a0\u00a0\u00a0 D)\u5faa\u73af\u7ed3\u6784\uff0c\u8f6c\u79fb\u7ed3\u6784\uff0c\u987a\u5e8f\u7ed3\u6784", "\n113\u3001\u6709\u5173\u4e0b\u8ff0\u8bed\u53e5\u8f93\u51fa\u7684\u5224\u65ad\u4e2d\uff0c\u6b63\u786e\u7684\u662f\uff08\u00a0 D\uff09", "\n\u00a0\u00a0 char x=\u2019A\u2019;", "\n\u00a0\u00a0 printf(\u201c%d\u201d, x);", "\n\u00a0\u00a0 A)\u8d4b\u503c\u975e\u6cd5\u00a0\u00a0\u00a0\u00a0 B)\u8f93\u51fa\u503c\u4e0d\u786e\u5b9a\u00a0\u00a0\u00a0 C)\u8f93\u51fa\u503c\u4e3a-32\u00a0\u00a0\u00a0 D)\u8f93\u51fa\u503c\u4e3a65", "\n114\u3001\u6267\u884c\u4e0b\u9762\u7a0b\u5e8f\u4e2d\u7684\u8f93\u51fa\u8bed\u53e5\u540e\uff0ca\u7684\u503c\u662f\uff08C \uff09", "\n\u00a0\u00a0 main()", "\n\u00a0\u00a0 {int a;", "\n\u00a0\u00a0 printf(%d\\n\u201d, (a=65, 20, 15))", "\n\u00a0\u00a0 }", "\n\u00a0\u00a0 A)65\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)20\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)15\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)10", "\n115\u3001\u6267\u884c\u5148\u9762\u8bed\u53e5\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u4e3a\uff08D \uff09", "\n\u00a0\u00a0 int i=-1", "\n\u00a0\u00a0 if(I<=0)", "\n\u00a0\u00a0 printf( \u201c****\\n\u201d);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 i=2;", "\n\u00a0\u00a0 else", "\nprintf(\u201c%%%%\\n\u201d);", "\n\u00a0\u00a0 A)****\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)%%\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)%%%%\u00a0\u00a0\u00a0\u00a0\u00a0 D)\u6709\u8bed\u6cd5\u9519\u8bef\uff0c\u4e0d\u80fd\u6b63\u786e\u6267\u884c\u3002", "\n116\u3001\u82e5\u6267\u884c\u4e0b\u9762\u7684\u7a0b\u5e8f\u65f6\uff0c\u4ece\u952e\u76d8\u4e0a\u8f93\u51655\u548c2\uff0c\u5219\u8f93\u51fa\u7ed3\u679c\u662f\uff08 D\uff09", "\n\u00a0\u00a0 main()", "\n\u00a0\u00a0 {int a, b, s;", "\n\u00a0\u00a0 scanf(\u201c%d%d\u201d, &a, &b);", "\n\u00a0\u00a0 s=a;", "\n\u00a0\u00a0 if(a<B)", "\n\u00a0\u00a0 s=b;", "\ns=s*s;", "\nprintf(\u201c%d\\n\u201d, s);", "\n}", "\nA) 4\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)10\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)20\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)25", "\n117\u3001\u4e0b\u8ff0\u8bed\u53e5\u4e2d\uff0c\uff08C \uff09\u4e2d\u7684if\u8bed\u6cd5\u7684\u9519\u8bef\u7684\u3002", "\nA)\u00a0if(x,y)", "\nB)\u00a0if(x= =y)", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 x+y;", "\nC)\u00a0if(x!=y)", "\nscanf( \u201c%d\u201d,\u00a0 x)", "\nelse", "\nscanf(\u201c%d\u201d,\u00a0 y);", "\nD)\u00a0if(x\u00a0 y)]", "\n{ x++;y++; }", "\n118\u3001\u4ee5\u4e0b\u7a0b\u5e8f\u6bb5\uff08 C\uff09", "\nint x=1,y=4;", "\nprintf(x\u00a0 y?\u00a0 \u201dx=%d\u201d,\u00a0 x,\u00a0 y);", "\nA)\u8f93\u51fa\u63a7\u5236\u683c\u5f0f\u9519\u8bef\u00a0\u00a0\u00a0 B)\u8f93\u51fa:x=1\u00a0\u00a0\u00a0\u00a0 C)\u8f93\u51fa:y=1\u00a0\u00a0\u00a0\u00a0\u00a0 D)\u8f93\u51fa:y=4", "\n119\u3001\u82e5\u8981\u6c42\u5728if\u540e\u4e00\u5bf9\u62ec\u53f7\u4e2d\u8868\u793aa\u4e0d\u7b49\u4e8e0\u65f6\uff0c\u6761\u4ef6\u6210\u7acb\uff0c\u5219\u80fd\u6b63\u786e\u8868\u793a\u8fd9\u4e00\u5173\u7cfb\u7684\u8868\u8fbe\u5f0f\u4e3a\uff08 \uff09", "\n\u00a0\u00a0\u00a0 A)a! =0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)!a\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)a=0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)a", "\n120\u3001\u4e0b\u9762\u7684\u6210\u7c97\u8fd0\u884c\u7ed3\u679c\u4e3a\uff08\u3000C\uff09", "\n\u3000\u3000main()", "\n\u00a0\u00a0\u00a0 {int x=3, y=0, z=0;", "\n\u00a0\u00a0\u00a0 if(x=y+z)", "\n\u00a0\u00a0\u00a0 printf(\u201c****\u201d);", "\n\u00a0\u00a0\u00a0 else", "\n\u00a0\u00a0\u00a0 printf(\u201c####\u201d);", "\n\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0\u00a0 A)\u8bed\u6cd5\u6709\u9519\u8bef\uff0c\u4e0d\u80fd\u7f16\u8bd1\u3000\u3000\u3000B)****\u3000\u3000\u3000\u3000C)####\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)\u80fd\u7f16\u8bd1\uff0c\u4e0d\u80fd\u8fde\u63a5"], "title": "C\u8bed\u8a00\u9762\u8bd5\u5927\u5168\u7cfb\u5217\u5e26\u9762\u8bd5\u9898\u7b54\u6848(9)"},
{"contents": ["101\u3001\u4e0b\u5217\u8bed\u53e5\u4e2d\u9519\u8bef\u7684\u662f\uff08B \uff09", "\u00a0\u00a0\u00a0 A)x=sizeof(int);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)x=sizeof(3.14);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)printf(\u201c%d\u201d,a=a+1,b\u2013,c+1);", "\u00a0\u00a0\u00a0 D)printf(\u201c%d\u201d,++x,x++);", "102\u3001\u4e0b\u9762\u8bed\u53e5\u4e2d\uff0c\u7b26\u5408C\u8bed\u8a00\u8bed\u6cd5\u7684\u8d4b\u503c\u8bed\u53e5\u662f\uff08 D\uff09", "\u00a0\u00a0\u00a0 A)a=7+b+c=5a+7;\u00a0\u00a0\u00a0\u00a0\u00a0 B)a=7+b++=a+7;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)a=7+b=b++,a+7;", "\u00a0\u00a0\u00a0 D)a=7+b;c=a+7;", "103\u3001\u4e0b\u8ff0\u8bed\u53e5\u7684\u8f93\u51fa\u4e3a\uff08D \uff09", "\u00a0\u00a0\u00a0 int x=-1;", "\u00a0\u00a0\u00a0 printf(\u201c%d, %u, %o\u201d,x, x, x);", "\u00a0\u00a0\u00a0 A)-1, -1, -1\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)-1, 32767,\u00a0 -177777\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)-1, 32767,\u00a0 177777", "\u00a0\u00a0 \u00a0D)-1, 65535,\u00a0 177777", "104\u3001\u5728C\u8bed\u8a00\u4e2d\uff0c\u4e0b\u5217\u5c5e\u4e8e\u975e\u6cd5\u7684\u957f\u6574\u578b\u5e38\u91cf\u662f\uff08C \uff09", "\u00a0\u00a0\u00a0 A)5876273\u00a0\u00a0\u00a0\u00a0\u00a0 B)0L\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)2E10 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)(long)573", "105\u3001\u82e5a\u4e3a\u6574\u578b\u53d8\u91cf\uff0c\u5219\u4ee5\u4e0b\u8bed\u53e5\uff08 B\uff09", "\u00a0\u00a0\u00a0 a=-2L;", "\u00a0\u00a0\u00a0 printf(\u201c%d\\n\u201d,a);", "\u00a0\u00a0\u00a0 A)\u8d4b\u503c\u4e0d\u5408\u6cd5\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)\u8f93\u51fa\u503c\u4e3a-2 \u00a0\u00a0\u00a0\u00a0\u00a0C)\u8f93\u51fa\u4e3a\u4e0d\u786e\u5b9a\u503c\u00a0\u00a0\u00a0\u00a0\u00a0 D)\u8f93\u51fa\u503c\u4e3a2", "106\u3001C\u8bed\u8a00\u4e2d\uff0c\u903b\u8f91\u201c\u771f\u201d\u7b49\u4ef7\u4e8e\uff08 C\uff09", "\u00a0\u00a0\u00a0 A)\u5927\u4e8e\u96f6\u7684\u6570\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)\u5927\u4e8e\u96f6\u7684\u6574\u6570\u00a0\u00a0\u00a0 C)\u975e\u96f6\u7684\u6570 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0D)\u975e\u96f6\u7684\u6574\u6570", "107\u3001\u82e5\u4f7f\u7528\u4e0b\u8ff0\u7a0b\u5e8f\u6bb5\u5c06\u6574\u657012\u548c\u6d6e\u70b913\u30026\u5206\u522b\u8d4b\u7ed9\u53d8\u91cfa\u548cb\uff0c\u90a3\u4e48\u8f93\u5165\u5e94\u8be5\u662f\uff08 B\uff09", "\u00a0\u00a0\u00a0 int a;", "\u00a0\u00a0\u00a0 float b;", "\u00a0\u00a0\u00a0 scanf(\u201ca=%d, b=%f\u201d, &a, &b);", "\u00a0\u00a0\u00a0 A)12\u00a0 13.6\u00a0\u00a0\u00a0\u00a0\u00a0 B)a=12, b=13.6\u00a0\u00a0\u00a0\u00a0\u00a0 C)12,\u00a0 13.6\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)a=12\u00a0\u00a0 b=13.6", "108\u3001\u82e5x\u4e3afloat\u578b\u53d8\u91cf\uff0c\u5219\u4ee5\u5217\u7a0b\u5e8f\u6bb5\u7ed3\u679c\u662f\uff08 B\uff09", "\u00a0\u00a0\u00a0 x=1234.6789;", "\u00a0\u00a0 printf(\u201c%-2.1f\u201d, x);", "\u00a0\u00a0 A)\u8f93\u51fa\u683c\u5f0f\u63cf\u8ff0\u7b26\u7684\u5bbd\u5ea6\u4e0d\u591f\uff0c\u4e0d\u80fd\u8f93\u51fa\u00a0\u00a0\u00a0\u00a0\u00a0 B)\u8f93\u51fa\u4e3a1234.7 \u00a0\u00a0", "C)\u8f93\u51fa\u4e3a1234.6\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)\u8f93\u51fa\u4e3a-1234.6", "109\u3001\u4e0b\u5217\u7a0b\u5e8f\u7684\u8f93\u51fa\u662f\uff08 C\uff09", "\u00a0\u00a0 main()", "\u00a0\u00a0 {", "\u00a0\u00a0 int x=10,y=3;", "\u00a0\u00a0 printf(\u201c%d\\n\u201d,y=x/y);", "\u00a0\u00a0 }", "\u00a0\u00a0 A)0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)1\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)3\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)\u4e0d\u786e\u5b9a\u7684\u503c", "110\u3001\u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u662f\uff08B \uff09", "\u00a0\u00a0 main()", "\u00a0\u00a0 {", "\u00a0\u00a0 int x=10, y=3;", "\u00a0\u00a0 printf(\u201c%d\\n\u201d, y=x%y);", "\u00a0\u00a0 }", "\u00a0\u00a0 A)0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)1\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)3\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)\u4e0d\u786e\u5b9a\u7684\u503c"], "title": "C\u8bed\u8a00\u9762\u8bd5\u5927\u5168\u7cfb\u5217\u5e26\u9762\u8bd5\u9898\u7b54\u6848(8)"},
{"contents": ["91\u3001\u5df2\u77e5\u5b57\u6bcdb\u7684ASCII\u7801\u7684\u5341\u8fdb\u5236\u4ee3\u7801\u4e3a98\uff0c\u5219\u6267\u884c\u4e0b\u5217\u8bed\u53e5\u8f93\u51fa\u4e3a\uff08\u3000C\uff09", "ch=\u2019b\u2019;", "ch\u2013;", "printf(%d,%c\\n\u201d,ch,ch);", "A)a,b\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)\u8fd0\u7b97\u4e0d\u5408\u6cd5\uff0c\u6545\u6709\u8bed\u6cd5\u9519\u3000\u3000\u3000\u3000C\uff0997,a \u3000", "D)\u683c\u5f0f\u63cf\u8ff0\u548c\u8f93\u51fa\u9879\u4e0d\u5339\u914d\uff0c\u8f93\u51fa\u65e0\u503c", "92\u3001\u82e5\u53d8\u91cfa\u5df2\u8bf4\u660e\u4e3afloat\u7c7b\u578b\uff0c\u5219\u80fd\u5b9e\u73b0\u5c06a\u4e2d\u7684\u6570\u503c\u4fdd\u7559\u5c0f\u6570\u70b9\u540e\u4e24\u4f4d\uff0c\u7b2c\u4e09\u4f4d\u8fdb\u884c\u56db\u820d\u4e94\u5165\u8fd0\u7b97\u7684\u8868\u8fbe\u5f0f\u662f\uff08 C\uff09", "\u00a0\u00a0\u00a0 A)a=(a*100+0.5)/100.0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)a=(a*100+0.5)/100\u00a0\u00a0\u00a0\u00a0 C)a=(int)(a*100+0.5)/100", "\u00a0\u00a0\u00a0 D)a=(a/100+0.5)*100.0", "93\u3001\u4e0b\u5217\u7a0b\u5e8f\u6bb5\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff08B \uff09", "\u00a0\u00a0\u00a0 int a=5,b=7;", "\u00a0\u00a0\u00a0 printf(\u201c%d,%d\u201d,a++,++b);", "\u00a0\u00a0\u00a0 A)5, 7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)5, 8\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)6, 7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)6, 8", "94\u3001\u4e0b\u5217\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff08D \uff09", "\u00a0\u00a0\u00a0 main()", "\u00a0\u00a0\u00a0 { int a=4;", "\u00a0\u00a0\u00a0 a*=a+=6;", "\u00a0\u00a0\u00a0 printf(\u201c%d\\n\u201d,a);", "\u00a0\u00a0\u00a0 }", "\u00a0\u00a0\u00a0 A)40\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)60\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)80\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0D)100", "95\u3001\u4e0b\u5217\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff08 C\uff09", "\u00a0\u00a0\u00a0 main()", "\u00a0\u00a0\u00a0 {int a=8;", "\u00a0\u00a0\u00a0 printf(\u201c%a\u201d,(a=a*5,a+6));", "\u00a0\u00a0\u00a0 }", "\u00a0\u00a0\u00a0 A)14\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)40\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)46\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)50", "96\u3001\u5b9a\u4e49a\u4e3a\u6574\u578b\uff0c\u4e0b\u5217\u8868\u8fbe\u5f0fa=3>6\u7684\u8fd0\u884c\u540e\uff0ca\u7684\u503c\u4e3a\uff08A \uff09", "\u00a0\u00a0\u00a0 A)0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)1\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)3\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)\u8868\u8fbe\u5f0f\u9519\u8bef", "97\u3001\u3001\u5982\u679ca=1,b=2,c=3,d=4,\u5219\u6761\u4ef6\u8868\u8fbe\u5f0fa>b?a:\u00a0 c>d?c:\u00a0 d\u7684\u503c\u4e3a\uff08 D\uff09", "\u00a0\u00a0\u00a0 A)1\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)2\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)3\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)4", "98\u3001\u3001\u4e0b\u8ff0\u7a0b\u5e8f\u6bb5\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff08 A\uff09", "\u00a0\u00a0\u00a0 {int\u00a0 a=5;", "\u00a0\u00a0\u00a0 a%=7;", "\u00a0\u00a0\u00a0 printf(\u201c%d,\u00a0 \u201d,a);", "\u00a0\u00a0\u00a0 a+=a*=a-=a*=2;", "\u00a0\u00a0\u00a0 printf(\u201c%d\u201d,a);", "\u00a0\u00a0\u00a0 }", "\u00a0\u00a0\u00a0 A)5, 0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)0, 0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)5, 12\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)0, 12", "99\u3001\u3001\u4e0b\u5217\u53d8\u91cf\u540d\u4e2d\u5408\u6cd5\u7684\u662f\uff08A \uff09", "\u00a0\u00a0\u00a0 A)Tom \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0B)3a6b\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)6a7b\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)5ABC", "100\u3001\u5bf9\u4e8e\u6761\u4ef6\u8868\u8fbe\u5f0f(M)?(a++): (a\u2013),\u5176\u4e2d\u7684\u8868\u8fbe\u5f0fM\u7b49\u4ef7\u4e8e\uff08C \uff09", "\u00a0\u00a0\u00a0 A)M= =0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)M= =1\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)M!=0\u00a0\u00a0\u00a0\u00a0\u00a0 D)m!=1"], "title": "C\u8bed\u8a00\u9762\u8bd5\u5927\u5168\u7cfb\u5217\u5e26\u9762\u8bd5\u9898\u7b54\u6848(7)"},
{"contents": ["81\u3001\u8bbe\u6709\u6574\u578b\u53d8\u91cfx\uff0c\u5355\u7cbe\u5ea6\u53d8\u91cfy\uff1d\uff15.\uff15\uff0c\u8868\u8fbe\u5f0fx\uff1dfloat(y*3+((int)y%4))\u6267\u884c\u540e\uff0cx\u7684\u503c\u4e3a\uff08A\u3000\uff09", "\nA)17\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)17.500000\u00a0\u00a0\u00a0\u00a0 C)17.5\u00a0\u00a0\u00a0\u00a0\u00a0 D)1.5", "\n82\u3001\u6574\u578b\u53d8\u91cfx=1,y=3\u7ecf\u4e0b\u5217\u8fd0\u7b97\u540e\uff0cx\u7684\u503c\u4e0d\u7b49\u4e8e\uff16\u7684\u662f\uff08C\u3000\uff09", "\nA)x=(x=1+2,x*2 )\u00a0\u00a0\u00a0\u00a0 B)x=y>2?6:5\u00a0\u00a0\u00a0 C)x=9-(\u2013y)-(\u2013y)\u00a0\u00a0\u00a0 D)x=y*4.8/2", "\n83\u3001\u4e0b\u5217\u6d6e\u70b9\u6570\u7684\u8868\u8fbe\u4e2d\u4e0d\u6b63\u786e\u7684\u662f\uff08\u3000D\uff09", "\nA)223\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)719E22\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)2e3\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)12e2.0", "\n84\u3001\u4e0b\u5217\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff08D\u3000\uff09", "\nmain()", "\n{int\u00a0 b=4;", "\nb*=b+=b+b;", "\nprintf(\u201c%d\\n\u201d,a);", "\n}", "\nA)16\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)32\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)96\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)144", "\n85\u3001\u5df2\u77e5\u5b57\u6bcd\u2018A\u2019\u7684ASCII\u7801\u503c\u662f65\uff0c\u4ee5\u4e0b\u7a0b\u5e8f\u8f93\u51fa\u7684\u7ed3\u679c\u662f\uff08D\u3000\uff09", "\n#include<stdio.h>", "\nvoid main()", "\n{char w=\u2019A\u2019;", "\nint x=10;", "\nw=x+w;", "\nprintf(\u201c%d\u201d,w);}", "\nA)\u8868\u8fbe\u5f0f\u975e\u6cd5\u3000\u3000\u3000B)\uff10\u3000\u3000\u3000\u3000C)\u4e0d\u786e\u5b9a\u503c\u3000\u3000\u3000D)75", "\n86\u3001\u4e0b\u5217\u7a0b\u5e8f\u6bb5\u6b63\u786e\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff08\u3000C\uff09", "\nfloat a=1111111.111;", "\nfloat b=7777777.777;", "\nfloat c;", "\nc=a+b;", "\nprintf(\u201cc=%f\u201d,c);", "\nA)c=8888888.888\u00a0\u00a0\u00a0\u00a0 B)8888888.888\u00a0\u00a0\u00a0\u00a0\u00a0 C)c=88888888.236\u00a0\u00a0\u00a0 D)88888888.236", "\n87\u3001\u4e0b\u5217\u7a0b\u5e8f\u7684\u8f93\u51fa\u4e3a\uff08B\u3000\uff09", "\n\u3000\u3000#include<stdio.h>", "\nmain()", "\n{ int m=13;", "\n\u00a0float a=12.6, x;", "\n\u00a0x=m/2+a/2;", "\n\u00a0printf(\u201c%f\\n\u201d, x);", "\n}", "\nA)12.000000\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)12.300000\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)12.800000\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)12.3", "\n88\u3001\u5728C\u8bed\u8a00\u4e2d\uff0c\u8d1f\u6574\u6570\u5728\u5185\u5b58\u4e2d\u4ee5\uff08\u3000A\uff09\u5f62\u5f0f\u5b58\u6548\u3002", "\nA)\u8865\u7801\u3000\u3000\u3000\u3000\u3000\u3000\u3000B)BCD\u7801\u3000\u3000\u3000\u3000\u3000C)\u53cd\u7801\u3000\u3000\u3000\u3000\u3000\u3000D)\u5341\u8fdb\u5236\u6570", "\n89\u3001\u5728C\u8bed\u8a00\u4e2d\uff0c\u8981\u6c42\u53c2\u52a0\u8fd0\u7b97\u7684\u6570\u5fc5\u987b\u662f\u6574\u6570\u7684\u8fd0\u7b97\u7b26\u662f\uff08C\u3000\uff09", "\nA)/\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B) !\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)%\u00a0\u00a0\u00a0\u00a0\u00a0 D)= =", "\n90\u3001\uff08B\u3000\uff09\u662fC\u8bed\u8a00\u4e2d\u975e\u6cd5\u7684\u6570\u636e\u7c7b\u578b\u5173\u952e\u5b57\u3002", "\nA)float\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)singed\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)integer\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)Char"], "title": "C\u8bed\u8a00\u9762\u8bd5\u5927\u5168\u7cfb\u5217\u5e26\u9762\u8bd5\u9898(6)"},
{"contents": ["71\u3001\u8bbe\u5b9a\u4e49\u6574\u5f62\u53d8\u91cfk, g\uff0c\u5219\u4e0b\u9762\u7684\u7a0b\u5e8f\u7684\u8f93\u51fa\u4e3a(\u00a0\u00a0 ).", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 k=017; g=1111;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c%d\\n\u201d, ++k);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c%x\\n\u201d, g++);", "\n\u00a0\u00a0\u00a0\u00a0 A)15\u00a0\u00a0 6f\u00a0\u00a0\u00a0\u00a0\u00a0 B)16\u00a0\u00a0 7\u00a0\u00a0\u00a0\u00a0\u00a0 C)15\u00a0\u00a0 71\u00a0\u00a0\u00a0\u00a0\u00a0 D)16\u00a0\u00a0 6f", "\n72\u3001\u5df2\u77e57/2\u7ea7\u7ed3\u679c\u4e3a\uff08\u00a0\u00a0 \uff09\u6027\u3002", "\n\u00a0\u00a0\u00a0 A)double\u00a0\u00a0\u00a0\u00a0\u00a0 B)int\u00a0\u00a0\u00a0\u00a0\u00a0 C)float\u00a0\u00a0\u00a0\u00a0\u00a0 D)char", "\n73\u3001\u4e0b\u5217\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff08\u00a0\u00a0 \uff09\u3002", "\n\u00a0\u00a0\u00a0\u00a0 #include<stdio.h>", "\n\u00a0\u00a0\u00a0\u00a0 void main()", "\n\u00a0\u00a0\u00a0\u00a0 {", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 int a=1234;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 float b=123.456;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 double c=12345.54321;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c\\n%2d, %2.1f\u201d, a, b, c);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 A)\u8f93\u51fa\u683c\u5f0f\u7684\u4f4d\u6570\u4e0d\u591f\uff0c\u65e0\u8f93\u51fa\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B\uff09\u8f93\u51fa\u7684\u7ed3\u679c\u4e3a12\uff0c12.4\uff0c12.5", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 C\uff09\u8f93\u51fa\u7684\u7ed3\u679c\u4e3a1234\uff0c123.5\uff0c1234.5\u00a0\u00a0\u00a0\u00a0\u00a0 D\uff09\u8f93\u51fa\u7684\u7ed3\u679c\u4e3a1234\uff0c123.4\uff0c1234.5", "\n74\u3001\u5bf9\u4e0b\u8ff0\u7a0b\u5e8f\uff0c\uff08\u00a0\u00a0 \uff09\u662f\u6b63\u786e\u7684\u5224\u65ad\u3002", "\n\u00a0\u00a0\u00a0 #include<stdio.h>", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 main()", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int x, y;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 scanf(\u201c%d, %d\u201d, &x, &y);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(x>y)", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 x=y;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 y=x;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 else", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 x++;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 y++;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c%d, %d\u201d,x,y);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0\u00a0 A)\u6709\u8bed\u6cd5\u9519\u8bef \uff0c\u4e0d\u80fd\u901a\u8fc7\u7f16\u8bd1\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B\uff09\u82e5\u8f93\u5165\u6570\u636e7\u548c9\uff0c\u5219\u8f93\u51fa8\u548c9", "\n\u00a0\u00a0\u00a0 C\uff09\u82e5\u8f93\u5165\u6570\u636e9\u548c7\uff0c\u5219\u8f93\u51fa7\u548c9\u00a0\u00a0\u00a0\u00a0 D\uff09\u5982\u8f93\u5165\u6570\u636e9\u548c7\uff0c\u5219\u8f93\u51fa9\u548c9", "\n75\u3001\u5bf9\u4e0b\u8ff0\u7a0b\u5e8f\uff0c\uff08\u00a0\u00a0 \uff09\u662f\u6b63\u786e\u7684\u5224\u65ad\u3002", "\n\u00a0\u00a0\u00a0 #include<stdio.h>", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 main()", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {int x, y;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 scanf(\u201c%d, %d\u201d,x, y);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(x y)", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {x=y;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 y=x; }", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 else", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 x++;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 y++;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c%d, %d\u201d, x, y);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n76\u3001\u00a0C\u8bed\u8a00\u4e2d\uff0c\u5408\u6cd5\u7684\u957f\u6574\u578b\u5e38\u6570\u662f\uff08 B\uff09", "\nA)3452\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)0L\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)3553%\u00a0\u00a0\u00a0 D) \u20133452", "\n77\u3001\u4e0b\u5217\u4e0d\u5408\u6cd5\u7684\u5b9e\u6570\u662f\uff08 C\uff09", "\nA)34.65\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)6.3E2\u00a0\u00a0\u00a0\u00a0 C)e3\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)54.3", "\n78\u3001\u4e0b\u5217\u5408\u6cd5\u7684\u5b57\u7b26\u5e38\u91cf\u662f\uff08\u3000D\uff09", "\nA)\u201df\u201d\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)x\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)65\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)\u2019\\Xab\u2019", "\n79\u3001\u5728C\u8bed\u8a00\u4e2d\uff0c\u4e0d\u6b63\u786e\u7684int\u7c7b\u578b\u5e38\u91cf\u662f\uff08C\u3000\uff09", "\nA)0453\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B) 0Xbd\u00a0\u00a0\u00a0\u00a0 C)32768\u00a0\u00a0\u00a0 D) \u201332768", "\n80\u3001\u6267\u884c\u4e0b\u5217\u8bed\u53e5\u540e\uff0c\u7b2c\u4e00\u4e2a\u8f93\u51fa\u7684\u503c\u4e3a\uff08B\u3000\uff09", "\n#include <stdio.h>", "\n#define M\u00a0 3", "\n#define N\u00a0 M+1", "\nmain()", "\n{", "\nprintf(\u201c%d\\n\u201d,N);}", "\nA) 3\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)4\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C) 6\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)8"], "title": "C\u8bed\u8a00\u9762\u8bd5\u5927\u5168\u7cfb\u5217\u5e26\u9762\u8bd5\u9898(5)"},
{"contents": ["51\u3001\u5728C\u8bed\u8a00\u4e2d\uff0c\u5408\u6cd5\u7684\u957f\u6574\u5f62\u5e38\u6570\u662f\uff08\u00a0\u00a0 \uff09\u3002", "\n\u00a0\u00a0\u00a0 A)3452\u00a0\u00a0\u00a0\u00a0\u00a0 B)0L\u00a0\u00a0\u00a0\u00a0\u00a0 C)3553%\u00a0\u00a0\u00a0\u00a0\u00a0 D)-3452", "\n52\u3001\u5728C\u8bed\u8a00\u4e2d\uff0c\u4e0d\u6b63\u786e\u7684int\u7c7b\u578b\u5e38\u91cf\u662f\uff08\u00a0\u00a0 \uff09\u3002", "\n\u00a0\u00a0 A)0453\u00a0\u00a0\u00a0\u00a0\u00a0 B)0Xbd\u00a0\u00a0\u00a0\u00a0\u00a0 C)32768\u00a0\u00a0\u00a0\u00a0\u00a0 D)-32768", "\n53\u3001\u8bbe\u6709\u6574\u5f62\u53d8\u91cfx\uff0c\u5355\u7cbe\u5ea6\u53d8\u91cfy=5.5\uff0c\u8868\u8fbe\u5f0fx=fioat(y*3+((int)y%4))\u6267\u884c\u540e\uff0cx\u7684\u503c\u4e3a\uff08\u00a0\u00a0 \uff09\u3002", "\n\u00a0\u00a0\u00a0 A)17\u00a0\u00a0\u00a0\u00a0\u00a0 B)17.500000\u00a0\u00a0\u00a0\u00a0\u00a0 C)17.5\u00a0\u00a0\u00a0\u00a0\u00a0 D1.5", "\n54\u3001\u5df2\u77e5\u5b57\u6bcdb\u7684ASC||\u7801\u7684\u5341\u8fdb\u5236\u4ee3\u7801\u4e3a98\uff0c\u5219\u6267\u884c\u4e0b\u5217\u8bed\u53e5\u8f93\u51fa\u4e3a\uff08\u00a0\u00a0 \uff09\u3002", "\n\u00a0\u00a0\u00a0 ch=\u2019b\u2019;", "\n\u00a0\u00a0\u00a0 ch\u2013;", "\n\u00a0\u00a0\u00a0 printf(\u201c%d,%c\\n\u201d,ch, ch);", "\n\u00a0\u00a0\u00a0 A)a,b\u00a0\u00a0\u00a0\u00a0\u00a0 B)\u8fd0\u7b97\u4e0d\u5408\u6cd5\uff0c\u6545\u6709\u8bed\u6cd5\u9519\u00a0\u00a0\u00a0\u00a0\u00a0 C\uff0997\uff0ca\u00a0\u00a0\u00a0\u00a0 D\uff09\u683c\u5f0f\u63cf\u8ff0\u548c\u8f93\u51fa\u9879\u4e0d\u5339\u914d\uff0c\u8f93\u51fa\u65e0\u503c\u00a0", "\n55\u3001\u4e0b\u5217\u7a0b\u5e8f\u7684\u8f93\u51fa\u662f\uff08\u00a0\u00a0 \uff09\u3002", "\n\u00a0\u00a0\u00a0 main()", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {int a=2, b=13;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c%d\\n\u201d,b=b/a);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0\u00a0 A)6.5\u00a0\u00a0\u00a0\u00a0\u00a0 B)6.50\u00a0\u00a0\u00a0\u00a0\u00a0 C)6\u00a0\u00a0\u00a0\u00a0\u00a0 D)6.500000", "\n56\u3001\u8bbe\u5df2\u5b9a\u4e49k\u4e3aint\u7c7b\u578b\u53d8\u91cf", "\n\u00a0\u00a0\u00a0 k=-8567;", "\n\u00a0\u00a0\u00a0 printf(\u201c|%6d|\\n\u201d,k);", "\n\u00a0\u00a0\u00a0 \u5219\u4ee5\u4e0a\u8bed\u53e5\uff08\u00a0\u00a0 \uff09\u3002", "\n\u00a0\u00a0\u00a0 A)\u8f93\u51fa\u4e3a|%6d|\u00a0\u00a0\u00a0\u00a0\u00a0 B)\u8f93\u51fa\u4e3a|-8567|\u00a0\u00a0\u00a0\u00a0\u00a0 C\uff09\u683c\u5f0f\u63cf\u8ff0\u7b26\u4e0d\u5408\u6cd5\uff0c\u8f93\u51fa\u65e0\u5b9a\u503c\u00a0\u00a0\u00a0\u00a0\u00a0 D\uff09\u8f93\u51fa\u4e3a|-8567|", "\n57\u3001\u82e5a\u4e3a\u6574\u5f62\u53d8\u91cf\uff0c\u5219\u4ee5\u4e0b\u8bed\u53e5\uff08\u00a0\u00a0 \uff09\u3002", "\n\u00a0\u00a0 a=-2L;", "\n\u00a0\u00a0 printf(\u201c%d\\n\u201d,a);", "\n\u00a0\u00a0 A)\u8d4b\u503c\u4e0d\u5408\u6cd5\u00a0\u00a0\u00a0\u00a0\u00a0 B\uff09\u8f93\u51fa\u503c\u4e3a-2\u00a0\u00a0\u00a0\u00a0\u00a0 C\uff09\u8f93\u51fa\u4e3a\u4e0d\u786e\u5b9a\u503c\u00a0\u00a0\u00a0\u00a0\u00a0 D\uff09\u8f93\u51fa\u503c\u4e3a2", "\n58\u3001\u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u662f\uff08\u00a0\u00a0 \uff09\u3002", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 main()", "\n{", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int x=10,y=3;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c%d\\n\u201d,y=x/y);", "\n}", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 A)0\u00a0\u00a0\u00a0\u00a0\u00a0 B)1\u00a0\u00a0\u00a0\u00a0\u00a0 C)3\u00a0\u00a0\u00a0\u00a0\u00a0 D)\u4e0d\u786e\u5b9a\u7684\u503c", "\n59\u3001\u4e0b\u9762\u7684\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u679c\u4e3a\uff08\u00a0\u00a0 \uff09\u3002", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 #include<stdio.h>", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 main()", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 char c1, c2;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 c1=\u2019a\u2019;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 c2=\u2019\\n\u2019;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c%c%c\u201d, c1,c2);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0\u00a0 A)aa\u00a0\u00a0\u00a0\u00a0\u00a0 B)a\u00a0\u00a0\u00a0\u00a0\u00a0 C)a\\n\u00a0\u00a0\u00a0\u00a0\u00a0 D)\\n\\n", "\n60\u3001\u6709\u5173\u4e0b\u8ff0\u8bed\u53e5\u8f93\u51fa\u7684\u5224\u65ad\u4e2d\uff0c\u6b63\u786e\u7684\u662f\uff08\u00a0\u00a0 \uff09\u3002", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 char x=\u2019A\u2019;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c%d\u201d, x);", "\n\u00a0\u00a0\u00a0 A\uff09\u8d4b\u503c\u975e\u6cd5\u00a0\u00a0\u00a0\u00a0\u00a0 B\uff09\u8f93\u51fa\u503c\u4e0d\u786e\u5b9a\u00a0\u00a0\u00a0\u00a0\u00a0 C\uff09\u8f93\u51fa\u503c\u4e3a-32\u00a0\u00a0\u00a0\u00a0\u00a0 D\uff09\u8f93\u51fa\u503c\u4e3a65", "\n61\u3001\u6267\u884c\u4e0b\u9762\u7a0b\u5e8f\u4e2d\u7684\u8f93\u51fa\u8bed\u53e5\u540e\uff0ca\u7684\u503c\u662f\uff08\u00a0\u00a0 \uff09\u3002", "\n\u00a0\u00a0\u00a0\u00a0 main()", "\n\u00a0\u00a0\u00a0\u00a0 {int a;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c%d\\n\u201d,(a=65,20,15));", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0\u00a0 A)65\u00a0\u00a0\u00a0\u00a0\u00a0 B)20\u00a0\u00a0\u00a0\u00a0\u00a0 C)15\u00a0\u00a0\u00a0\u00a0\u00a0 D)10", "\n\u00a062\u3001\u82e5\u53d8\u91cf\u90fd\u5df2\u6b63\u786e\u8bf4\u660e\uff0c\u5219\u4ee5\u4e0b\u7a0b\u5e8f\u6bb5\u8f93\u51fa\u4e3a\uff08\u00a0\u00a0 \uff09\u3002", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 a=6;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 b=3;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(a>b?\u201d%d\u201d,a:\u201d%d\u201d,b);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 A)%3\u00a0\u00a0\u00a0\u00a0\u00a0 B)6\u00a0\u00a0\u00a0\u00a0\u00a0 C)%6\u00a0\u00a0\u00a0\u00a0\u00a0 D)3", "\n\u00a063\u3001\u82e5\u6709\u6570\u5b66\u516c\u5f0f\uff0c\u5176\u6b63\u786e\u7684\u8868\u8fbe\u5f0f\u662f\uff08\u00a0\u00a0 \uff09\u3002", "\n\u00a0\u00a0\u00a0\u00a0 A)sqrt(abs(x*x/180))\u00a0\u00a0\u00a0\u00a0\u00a0 B)sqrt(abs(sinx*3.14/180)))\u00a0\u00a0\u00a0\u00a0\u00a0", "\nC)sqrt(sinx)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)sqrt(fabs(sin(x*3.14/180)))", "\n64\u3001\u5728C\u8bed\u8a00\u4e2d\uff0c\u903b\u8f91\u503c\u201c\u771f\u201d\u7528\uff08\u00a0\u00a0 \uff09\u6765\u8868\u793a\u3002", "\n\u00a0\u00a0\u00a0 A\uff09true\u00a0\u00a0\u00a0\u00a0\u00a0 B)\u5927\u4e8e0\u7684\u6570\u00a0\u00a0\u00a0\u00a0\u00a0 C\uff09\u975e0\u7684\u6570\u00a0\u00a0\u00a0\u00a0\u00a0 D\uff09\u975e0\u6574\u6570", "\n65\u3001\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff08\u00a0\u00a0 \uff09\u3002", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 #include<stdio.h>", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 void main()", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 { int x=1, y= 0, a=0, b=0;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 switch(x)", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 { case\u00a0 1:", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 switch(y)", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {case\u00a0 0: a++; break;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 case\u00a0 1: b++; break;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 case\u00a0 2:", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 a++; b++;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 case 3:", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 a++; b++;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201ca=%d, b=%d\u201d, a, b) ;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0\u00a0\u00a0 A)a=3, b=2\u00a0\u00a0\u00a0\u00a0\u00a0 B)a=2, b=3\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)a=3, b=3\u00a0\u00a0\u00a0\u00a0\u00a0 D)a=2, b=2", "\n66\u3001\u82e5\u8981\u6c42\u5728if\u540e\u4e00\u5bf9\u62ec\u53f7\u4e2d\u8868\u793aa\u4e0d\u7b49\u4e8e0\u65f6\uff0c\u6761\u4ef6\u6210\u7acb\uff0c\u5219\u80fd\u6b63\u786e\u8868\u793a\u8fd9\u4e00\u5173\u7cfb\u7684\u8868\u8fbe\u5f0f\u4e3a\uff08\u00a0\u00a0 \uff09\u3002", "\n\u00a0\u00a0\u00a0 A)a!=0\u00a0\u00a0\u00a0\u00a0\u00a0 B)!a\u00a0\u00a0\u00a0\u00a0\u00a0 C)a=0\u00a0\u00a0\u00a0\u00a0\u00a0 D)a", "\n67\u3001\u82e5\u6267\u884c\u4e0b\u9762\u7684\u7a0b\u5e8f\u65f6\u4ece\u952e\u76d8\u4e0a\u8f93\u51655\uff0c\u5219\u8f93\u51fa\u662f\uff08\u00a0\u00a0 \uff09\u3002", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 main()", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {int x;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 scanf(\u201c%d0\u201d, x);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(++x>5)", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c%d\u201d, x);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 else", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c%d\u201d, x\u2013);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0\u00a0\u00a0 A)7\u00a0\u00a0\u00a0\u00a0\u00a0 B)6\u00a0\u00a0\u00a0\u00a0\u00a0 C)5\u00a0\u00a0\u00a0\u00a0\u00a0 D)4", "\n68\u3001\u8bbea,b,c\u90fd\u662fint\u578b\u53d8\u91cf\uff0c\u4e14a=3\uff0cb=4,c=5,\u5219\u4e0b\u9762\u7684\u8868\u8fbe\u5f0f\u4e2d\uff0c\u8868\u8fbe\u5f0f\u7684\u503c\u4e3a0\u7684\u662f\uff08\u00a0\u00a0 \uff09\u3002", "\n\u00a0\u00a0\u00a0 A)a&&b\u00a0\u00a0\u00a0\u00a0\u00a0 B)a<=b\u00a0\u00a0\u00a0\u00a0\u00a0 C)a||b+c&&b-c\u00a0\u00a0\u00a0\u00a0\u00a0 D)!((a<B)&&c||1)", "\n69\u3001\u4e0b\u9762\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u662f\uff08\u00a0\u00a0 \uff09\u3002", "\n\u00a0\u00a0\u00a0 main()", "\n\u00a0\u00a0\u00a0 { int c1=2, c2=0;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 while(!c2\u2013)", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c%d,%d\u201d, c1\u2013, c2);", "\n\u00a0\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0\u00a0\u00a0 A)\u9677\u5165\u6b7b\u5faa\u73af\u00a0\u00a0\u00a0\u00a0\u00a0 B\uff09\u4e0d\u8f93\u51fa\u4efb\u4f55\u5185\u5bb9\u00a0\u00a0\u00a0\u00a0\u00a0 C\uff09\u8f93\u51fa2\uff0c -1\u00a0\u00a0\u00a0\u00a0\u00a0 D\uff09\u8f93\u51fa2\uff0c 0", "\n70\u3001\u5df2\u77e5\u6709\u4ee5\u4e0b\u5b9a\u4e49", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 char a;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int b;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 float c;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 double d;", "\n\u00a0\u00a0\u00a0 \u5219\u8868\u8fbe\u5f0fa*b+c-d\u7684\u7ed3\u679c\u4e3a\uff08\u00a0\u00a0 \uff09\u578b\u3002", "\n\u00a0\u00a0\u00a0 A)double\u00a0\u00a0\u00a0\u00a0\u00a0 B)int\u00a0\u00a0\u00a0\u00a0\u00a0 C)float\u00a0\u00a0\u00a0\u00a0\u00a0 D)char"], "title": "C\u8bed\u8a00\u9762\u8bd5\u5927\u5168\u7cfb\u5217\u6682\u65e0\u7b54\u6848(4)"},
{"contents": ["41\u3001\u4e0b\u8ff0\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u4e3a\uff08\u00a0\u00a0A \uff09\u3002", "\n#include<stdio.h>", "\nvoid abc(char*str)", "\n{int a, b;", "\nfor(a=b=0;str{a}!=\u2019\\0\u2019;a++)", "\n\u00a0\u00a0\u00a0\u00a0 if(str[a]!=\u2019c\u2019)", "\n\u00a0\u00a0\u00a0\u00a0 tr[b++]=str[a];", "\nstr[b]=\u2019\\0\u2019;", "\n}", "\nvoid main ()", "\n{", "\n\u00a0\u00a0 char str []=\u201dabcdef\u201d;", "\n\u00a0\u00a0 abc(str);", "\n\u00a0\u00a0 printf(\u201cstr[]=\u201d%s\u201d,str);", "\n}", "\nA)STR[]=abdef\u00a0\u00a0\u00a0\u00a0\u00a0 B)STR[]=abcdef\u00a0\u00a0\u00a0\u00a0\u00a0 C)STR[]=a\u00a0\u00a0\u00a0\u00a0\u00a0 D)STR[]=ab", "\n\u00a042\u3001\u4e0b\u5217\u5404\u6570\u7ec4\u5b9a\u4e49\u7a0b\u5e8f\u6bb5\uff0c\u6b63\u786e\u7684\u662f\uff08C\u00a0\u00a0 \uff09\u3002", "\nA)\u00a0int n=10;", "\nint a[n];", "\nB)\u00a0main()", "\n{char str[10]=\u201da man\u201d}", "\nC)\u00a0static int[][3]={{0,1,2},{80,89,2}};", "\nD)\u00a0static char[5]=\u201ci am a student.\u201d;", "\n\u00a043\u3001\u4ee5\u4e0bmain\u51fd\u6570\u8c03\u7528invert\u51fd\u6570\u5c06\u4e32s\u7684\u5143\u7d20\u6309\u9006\u5e8f\u91cd\u65b0\u5b58\u653e\uff0c\uff08B\u00a0\u00a0 \uff09\u662f\u4e0d\u80fd\u6b63\u786e\u5b9e\u73b0\u6b64\u529f\u80fd\u7684\u7a0b\u5e8f\u3002", "\nvoid main()", "\n{", "\nchar srt[]=\u201cString\u201d;", "\ninvert(s);", "\n\u2022\u2022\u2022", "\n}", "\nA)\u00a0void invert(char s[])", "\n{", "\nint t,I,j;", "\nfor(i=0,j=strlen(s)-1;i<j;i++,\u2013j)", "\n\u00a0 {", "\n\u00a0 t=*(s+i);", "\n\u00a0 *(s+i)=*(s+j);", "\n\u00a0 *(s+j)=t;", "\n\u00a0\u00a0 }", "\n\u00a0}", "\nB)\u00a0void invert(char *s)", "\n{", "\nint t,i,j;", "\nfor(i=0,j=strlen(s);i<j;i++,\u2013j)", "\n{", "\nt=s[i];", "\ns[j]=s[i];", "\ns[i]=t;", "\n}", "\n}", "\nC)\u00a0void invert(char *s)", "\n{", "\nint t,*h,*p;", "\nh=s;", "\np=s+strlen(s)-1;", "\nwhile(h<p)", "\nt=*h,h=*p,*p=t,p\u2013,h++;", "\n}", "\nD)\u00a0void invert(char *s)", "\n{", "\nint t, *p;", "\np=s+stlen(s)-1;", "\nwhile(s<p)", "\n{", "\nt=*s;", "\n*s++=*p;", "\n*p\u2013=t;", "\n}", "\n\u00a0 }", "\n\u00a0 44\u3001\u4e0b\u5217\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff08\u00a0C\u00a0 \uff09\u3002", "\n#include<stdio.h>", "\nvoid fun();", "\nvoid main()", "\n{", "\nint x=1;", "\nif(x= =1)", "\n{", "\n\u00a0 int x=2;", "\n\u00a0printf(\u201c%d\u201d,++x);", "\n}", "\n\u00a0 void fun()", "\n{", "\n\u00a0 printf(\u201c%d\u201d,x++);", "\n}", "\nA)2,1,1\u00a0\u00a0\u00a0\u00a0\u00a0 B)1,2,1\u00a0\u00a0\u00a0\u00a0\u00a0 C)2,2,2\u00a0\u00a0\u00a0\u00a0\u00a0 D)2,2,1", "\n\u00a0 45\u3001\u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u662f\uff08\u00a0A\u00a0 \uff09\u3002", "\n#include<stdio.h>", "\n\u00a0#include<string.h>", "\n\u00a0\u00a0 main()", "\n\u00a0\u00a0 {", "\n\u00a0\u00a0\u00a0\u00a0 char *p1=\u201care\u201d,*p2=\u201cARE\u201d,a[50]=\u201cxyz\u201d;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 strcpy(a+2,strcat(p1,p2));", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c%s\\n\u201d,A);", "\n\u00a0\u00a0\u00a0 }", "\nA)xyareARE\u00a0\u00a0\u00a0\u00a0\u00a0 B)yzareARE\u00a0\u00a0\u00a0\u00a0\u00a0 C)zareARE\u00a0\u00a0\u00a0\u00a0\u00a0 D)xyzareARE", "\n\u00a0 46\u3001\u8bf7\u9009\u51fa\u4ee5\u4e0b\u7a0b\u5e8f\u6bb5\u7684\u8f93\u51fa\u7ed3\u679c\uff08\u00a0A\u00a0 \uff09\u3002", "\n\u00a0 #include<stdio.h>", "\nmain()", "\n\u00a0\u00a0 {", "\n\u00a0\u00a0\u00a0\u00a0 char a1[10],a2[10],a3[10],a4[10];", "\n\u00a0\u00a0\u00a0\u00a0 scanf(\u201c%s%s\u201d,a1,a2);gets(a3);gets(a4);", "\n\u00a0\u00a0\u00a0\u00a0 puts(a1);puts(a2);puts(a3);puts(a4);", "\n\u00a0\u00a0 }", "\n\u00a0 \u8f93\u5165\u6570\u636e\u5982\u4e0b\uff1a\uff08\u6b64\u5904<CR>\u4ee3\u8868\u56de\u8f66\u7b26\uff09", "\n\u00a0 mmmm nnnn<CR>", "\n\u00a0 xxxx yyy<CR>", "\nA)\u00a0mmm", "\nnnnn", "\nxxxx xxx", "\nB)\u00a0mmmm", "\nnnnn", "\n\u00a0\u00a0 xxxx", "\n\u00a0\u00a0 yyy", "\nC)\u00a0xxxx", "\nnnnn", "\n\u00a0\u00a0 xxy yyy", "\n\u00a0\u00a0 zzzz", "\nD)\u00a0xxxxy yyy", "\nxxxx", "\nxxxx", "\nyyy", "\n\u00a0 47\u3001\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\uff08\u00a0B\u00a0 \uff09\u3002", "\n#include<stdio.h>", "\n#include<string.h>", "\n\u00a0 main()", "\n\u00a0 {", "\n\u00a0 char a[100]={\u2018a\u2019,\u2019b\u2019,\u2019c\u2019,\u2019d\u2019,\u2019e\u2019,\u2019f\u2019,\u2019h\u2019,\u2019i\u2019,\u2019j\u2019};", "\n\u00a0 printf(\u201c%d\\n\u201d,strlen(str));", "\n\u00a0 }", "\nA)6\u00a0\u00a0\u00a0\u00a0\u00a0 B)9\u00a0\u00a0\u00a0\u00a0\u00a0 C)11\u00a0\u00a0\u00a0\u00a0\u00a0 D)\u4e0d\u80fd\u6b63\u5e38\u8f93\u51fa", "\n\u00a0\u00a0 48\u3001\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff08\u00a0\u00a0C \uff09\u3002", "\nmain()", "\n{", "\n\u00a0 char *a[][5]={\u201chow\u201d,\u201ddo\u201d,\u201dyou\u201d,\u201ddo\u201d,\u201d!\u201d};", "\n\u00a0 char **p;", "\n\u00a0 int i;", "\n\u00a0 p=a;", "\n\u00a0 for(i=0;i<4;i++)", "\n\u00a0 printf(\u201c%s\u201d,p[i]);", "\n}", "\nA)howdoyoudo!\u00a0\u00a0\u00a0\u00a0\u00a0 B)how\u00a0\u00a0\u00a0\u00a0\u00a0 C)howdoyoudo\u00a0\u00a0\u00a0\u00a0\u00a0 D)hdyd", "\n\u00a0\u00a0 49\u3001\u4e0b\u5217\u7a0b\u5e8f\u6bb5\u6b63\u786e\u7684\u662f\uff08\u00a0\u00a0 D\uff09\u3002", "\nA)#include<stdio.h>", "\n\u00a0\u00a0 main()", "\n\u00a0\u00a0\u00a0\u00a0 {", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 int i,j;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 int(i)=j;", "\n\u00a0\u00a0\u00a0\u00a0 }", "\n\u00a0B)#include<stdio.h>;", "\n\u00a0\u00a0\u00a0 mnain()", "\n\u00a0\u00a0\u00a0 {", "\n\u00a0\u00a0\u00a0\u00a0 int i,j;", "\n\u00a0\u00a0\u00a0\u00a0 (int)i=j;", "\n\u00a0\u00a0\u00a0\u00a0 }", "\n\u00a0 C)include<stdio.h>", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 main()", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int i,j;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 (int)i=j;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0 D)#include<stdio.h>", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 main()", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int i,j;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 (int)i=j;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n50\u3001\u4e0b\u8ff0\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u4e3a\uff08\u00a0D\u00a0 \uff09\u3002", "\n\u00a0\u00a0\u00a0 #include<stdio.h>", "\n\u00a0\u00a0\u00a0 void main()", "\n\u00a0\u00a0\u00a0\u00a0 {", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int a[5]={2,4,6,8,10};", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int *p=a,**q=&p;", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201cd%,\u201d,*(p++));", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c%d\u201d,**q);", "\n\u00a0\u00a0\u00a0\u00a0\u00a0 }", "\n\u00a0\u00a0\u00a0 A)4,4\u00a0\u00a0\u00a0\u00a0\u00a0 B\uff092\uff0c2\u00a0\u00a0\u00a0\u00a0\u00a0 C\uff094\uff0c5\u00a0\u00a0\u00a0\u00a0\u00a0 D\uff092\uff0c4"], "title": "C\u8bed\u8a00\u9762\u8bd5\u5927\u5168\u7cfb\u5217\u5e26\u7b54\u6848(3)"},
{"contents": ["21\u3001\u4e0b\u9762\u51fd\u6570\u7684\u529f\u80fd\u662f\uff08\u00a0A\u00a0 \uff09\u3002", "\nInt funl(char*x)", "\n{", "\nchar*y=x;", "\nwhile(*y++);", "\nreturn(y-x-1);", "\n}", "\nA)\u6c42\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u00a0\u00a0\u00a0\u00a0\u00a0 B\uff09\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u5927\u5c0f\u00a0\u00a0\u00a0\u00a0\u00a0 C\uff09\u5c06\u5b57\u7b26\u4e32x\u590d\u5236\u5230\u5b57\u7b26\u4e32y", "\nD\uff09\u5c06\u5b57\u7b26\u4e32x\u8fde\u63a5\u5230\u5b57\u7b26\u4e32y\u540e\u9762", "\n22\u3001\u6307\u9488\u53d8\u91cfa\u6240\u6307\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\u4e3a\uff08\u00a0\u00a0 D\uff09\u3002", "\nChar*a=\u201d\\n\\\u201dMy Name is \\\u201dZhang Li\\\u201d\\n\u201d;", "\nA)26\u00a0\u00a0\u00a0\u00a0\u00a0 B)27\u00a0\u00a0\u00a0\u00a0\u00a0 C)28\u00a0\u00a0\u00a0\u00a0\u00a0 D)23", "\n23\u3001\u82e5\u6709\u4ee5\u4e0b\u8bf4\u660e\u548c\u8bed\u53e5\uff0c\u5219\u8f93\u51fa\u7ed3\u679c\u662f\uff08\u00a0B\u00a0 \uff09\u3002", "\nChar*sp=\u201d\\\\\\\u201d\\n\u201d;", "\nPrintf(\u201c%d\u201d,strlen(sp));", "\nA)6\u00a0\u00a0\u00a0\u00a0\u00a0 B)3\u00a0\u00a0\u00a0\u00a0\u00a0 C) 5\u00a0\u00a0\u00a0\u00a0\u00a0 D)\u5b57\u7b26\u4e32\u4e2d\u6709\u975e\u6cd5\u81ea\u8d1f\uff0c\u8f93\u51fa\u503c\u4e0d\u5b9a", "\n24\u3001\u82e5\u6709\u4ee5\u4e0b\u7684\u8bf4\u660e\u8bed\u53e5\uff0c\u5219\u5bf9\u5b57\u7b26\u4e32\u4e2d\u5b57\u7b26\u7684\u4e0d\u6b63\u786e\u5f15\u7528\u662f\uff08\u5176\u4e2d0<=i<6\uff09(\u00a0\u00a0 D).", "\nChar*strp=\u201cstring\u201d;", "\nA)*strp\u00a0\u00a0\u00a0\u00a0\u00a0 B)*(strp+i)\u00a0\u00a0\u00a0\u00a0\u00a0 C)strp[i]\u00a0\u00a0\u00a0\u00a0\u00a0 D)strp", "\n25\u3001\u51fd\u6570\u8c03\u7528\uff1astrcat(strcpy(str1,str2),str3)\u7684\u529f\u80fd\u662f\uff08C\u00a0\u00a0 \uff09\u3002", "\nA\uff09\u00a0\u5c06\u4e32str1\u590d\u5236\u5230\u4e32str2\u4e2d\u540e\u518d\u8fde\u63a5\u5230\u4e32str3\u4e4b\u540e", "\nB\uff09\u00a0\u5c06\u4e32str1\u8fde\u63a5\u5230\u4e32str2\u4e4b\u540e\u518d\u590d\u5236\u5230\u4e32str3\u4e4b\u540e", "\nC\uff09\u00a0\u5c06\u4e32str2\u590d\u5236\u5230\u4e32str1\u4e2d\u540e\u518d\u5c06\u4e32str3\u8fde\u63a5\u5230\u4e32str1\u4e4b\u540e", "\nD\uff09\u00a0\u5c06\u4e32str2\u8fde\u63a5\u5230\u4e32str1\u4e4b\u540e\u518d\u5c06\u4e32str1\u590d\u5236\u5230\u4e32str3\u4e4b\u540e", "\n26\u3001\u82e5\u4f7f\u7528\u4e0b\u8ff0\u7a0b\u5e8f\u6bb5\u5c06\u6574\u657012\u548c\u6d6e\u70b9\u657013.6\u5206\u522b\u8d4b\u7ed9\u53d8\u91cfa\u548cb\uff0c\u90a3\u4e48\u8f93\u5165\u5e94\u8be5\u5f0f\uff08\u00a0\u00a0A \uff09\u3002", "\nint a;", "\nfloat b;", "\nscanf(\u201ca=%d,b=%f\u201d,&a,&b);", "\nA)12\u00a0 13.6\u00a0\u00a0\u00a0\u00a0\u00a0 B)a=12,\u00a0 b=13.6\u00a0\u00a0\u00a0\u00a0\u00a0 C)12,\u00a0 13.6\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)a=12\u00a0\u00a0 b=13.6", "\n27\u3001\u5bf9\u4e0b\u9762\u7684\u7a0b\u5e8f\u8bf4\u6cd5\u6b63\u786e\u7684\u662f\uff08\u00a0C\u00a0 \uff09\u3002", "\nmain()", "\n\u00a0 {int x+3,y=0,z=0;", "\n\u00a0 if(x=y+z)", "\n\u00a0 printf(\u201c****\u201d);", "\n\u00a0 else", "\n\u00a0 printf(\u201c####\u201d);", "\n\u00a0 }", "\nA)\u6709\u8bed\u6cd5\u9519\u8bef\uff0c\u4e0d\u80fd\u901a\u8fc7\u7f16\u8bd1\u00a0\u00a0\u00a0\u00a0 B\uff09\u8f93\u51fa\u4e3a****\u00a0\u00a0\u00a0 C\uff09\u8f93\u51fa\u4e3a# # # #\u00a0\u00a0\u00a0 D\uff09\u901a\u8fc7\u7f16\u8bd1\uff0c\u4f46\u662f\u4e0d\u80fd\u8fd0\u884c", "\n28\u3001\u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\u662f\uff08B\u00a0\u00a0 \uff09\u3002", "\nmain()", "\n\u00a0 {", "\n\u00a0\u00a0\u00a0 int x=10,y=3;", "\n\u00a0\u00a0\u00a0 printf(\u201c%d\\n\u201d,y=x%y);", "\n\u00a0\u00a0 }", "\nA\uff090\u00a0\u00a0\u00a0\u00a0\u00a0 B)1\u00a0\u00a0\u00a0\u00a0\u00a0 C)3\u00a0\u00a0\u00a0\u00a0\u00a0 D)\u4e0d\u786e\u5b9a\u7684\u503c", "\n29\u3001\uff08\u00a0\u00a0 D\uff09\u662f\u4e0d\u6b63\u786e\u7684C\u8bed\u8a00\u8d4b\u503c\u8bed\u53e5\u3002", "\nA\uff09a=a+1;\u00a0\u00a0\u00a0\u00a0\u00a0 B)i++;\u00a0\u00a0\u00a0\u00a0\u00a0 C)a*=1,b=8;\u00a0\u00a0\u00a0\u00a0\u00a0 D)a=3", "\n30\u3001C\u8bed\u8a00\u7a0b\u5e8f\u7684\u4e09\u79cd\u57fa\u672c\u7a0b\u5e8f\u662f\uff08\u00a0\u00a0A \uff09\u3002", "\nA\uff09\u987a\u5e8f\u7ed3\u6784\uff0c\u9009\u62e9\u7ed3\u6784\uff0c\u5faa\u73af\u7ed3\u6784\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B\uff09\u9012\u5f52\u7ed3\u6784\uff0c\u5faa\u73af\u7ed3\u6784\uff0c\u8f6c\u79fb\u7ed3\u6784", "\nC\uff09\u5d4c\u5957\u7ed3\u6784\uff0c\u9012\u5f52\u7ed3\u6784\uff0c\u987a\u5e8f\u7ed3\u6784\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D\uff09\u5faa\u73af\u7ed3\u6784\uff0c\u8f6c\u79fb\u7ed3\u6784\uff0c\u987a\u5e8f\u7ed3\u6784", "\n31\u3001\u6267\u884c\u4e0b\u9762\u8bed\u53e5\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u4e3a\uff08\u00a0D\u00a0 \uff09\u3002", "\nint i=-1;", "\n\u00a0\u00a0\u00a0 if (i<=0)", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c****\\n\u201d);", "\n\u00a0\u00a0\u00a0\u00a0 i=2;", "\n\u00a0\u00a0\u00a0 else", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf(\u201c%%%%\\n\u201d);", "\nA)****\u00a0\u00a0\u00a0\u00a0\u00a0 B)%%\u00a0\u00a0\u00a0\u00a0\u00a0 C)%%%%c\u00a0\u00a0\u00a0\u00a0\u00a0 D)\u6709\u8bed\u6cd5\u9519\u8bef\u3002\u4e0d\u80fd\u6b63\u786e\u6267\u884c", "\n32\u3001\u4e0b\u8ff0\u8bed\u53e5\u4e2d\uff0c\uff08\u00a0C\u00a0 \uff09\u4e2d\u7684if \u8bed\u6cd5\u6709\u9519\u8bef\u3002", "\nA)\u00a0if(x y);\u00a0\u00a0\u00a0\u00a0\u00a0", "\nB)\u00a0if(x= =y)", "\nx+y;", "\nC)\u00a0if(x!=y)", "\nscanf(\u201c%d\u201d,x)", "\n\u00a0 else", "\nscanf(\u201c%d\u201d,y);", "\nD)\u00a0if(x y)", "\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {x++;y++;}", "\n33\u3001\u4ee5\u4e0b\u7a0b\u5e8f\u6bb5\uff08\u00a0C\u00a0 \uff09\u3002", "\nint x=1,y=4;", "\n\u00a0 printf(x<y?\u201dx=%d\u201d:\u201dy=%d\u201d,x,y);", "\nA)\u8f93\u51fa\u63a7\u5236\u683c\u5f0f\u9519\u8bef\u00a0\u00a0\u00a0\u00a0\u00a0 B\uff09\u8f93\u51fa\uff1ax=1\u00a0\u00a0\u00a0\u00a0\u00a0 C\uff09\u8f93\u51fa\uff1ay=1\u00a0\u00a0\u00a0\u00a0\u00a0 D\uff09\u8f93\u51fa\uff1ay=4", "\n34\u3001\u4e3a\u4e86\u907f\u514d\u5d4c\u5957\u7684\u6761\u4ef6\u8bed\u53e5if-else\u7684\u4e8c\u4e49\u6027\uff0cC\u8bed\u8a00\u89c4\u5b9a\uff1aelse\u4e0e\uff08\u00a0B\u00a0 \uff09\u662f\u6b63\u786e\u7684\u3002", "\nA\uff09\u7f29\u6392\u4f4d\u7f6e\u76f8\u540c\u7684if\u00a0\u00a0\u00a0\u00a0\u00a0 B)\u5176\u4e4b\u524d\u6700\u8fd1\u7684if\u00a0\u00a0\u00a0\u00a0\u00a0 C\uff09\u5176\u4e4b\u540eif\u00a0\u00a0\u00a0\u00a0\u00a0 D\uff09\u540c\u4e00\u884c\u4e0a\u7684if", "\n35\u3001\u4e0b\u5217\u5173\u4e8eswitch\u8bed\u53e5\u548cbreak\u8bed\u53e5\u7684\u7ed3\u8bba\u4e2d\uff0c\u53ea\u6709\uff08\u00a0B\u00a0 \uff09\u662f\u6b63\u786e\u7684\u3002", "\nA)\u00a0break\u8bed\u53e5\u662fswitch\u8bed\u53e5\u7684\u4e00\u90e8\u5206", "\nB)\u00a0\u5728switch\u8bed\u53e5\u4e2d\u53ef\u4ee5\u6839\u636e\u9700\u8981\u4f7f\u7528\u6216\u4e0d\u4f7f\u7528break\u8bed\u53e5", "\nC)\u00a0\u5728switch\u8bed\u53e5\u4e2d\u5fc5\u987b\u4f7f\u7528break\u8bed\u53e5", "\nD)\u00a0\u4ee5\u4e0a\u4e09\u4e2a\u7ed3\u8bba\u6709\u4e24\u4e2a\u662f\u6b63\u786e\u7684", "\n36\u3001\u8bbeI\u548cx\u90fd\u662fint\u7c7b\u578b\uff0c\u5219\u5bf9\u4e8efor\u5faa\u73af\u8bed\u53e5for(i=0,x=0;i<9;i++),\u4e0b\u5217\u54ea\u53e5\u8bdd\u6b63\u786e(\u00a0\u00a0B )\u3002", "\nA)\u6267\u884c8\u6b21\u00a0\u00a0\u00a0\u00a0\u00a0 B\uff09\u6267\u884c9\u6b21\u00a0\u00a0\u00a0\u00a0\u00a0 C\uff09\u662f\u65e0\u9650\u5faa\u73af\u00a0\u00a0\u00a0\u00a0 D\uff09\u5faa\u73af\u4f53\u4e00\u6b21\u4e5f\u4e0d\u6267\u884c", "\n37\u3001\u4e0b\u8ff0\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff08D\u00a0\u00a0 \uff09\u3002", "\n#include<stdio.h>", "\nmain()", "\n{ int Y=100;", "\nwhile(Y\u2013);", "\nprintf(\u201cy=%d\u201d,Y);", "\n}", "\nA)Y=0\u00a0\u00a0\u00a0\u00a0\u00a0 B)Y=1\u00a0\u00a0\u00a0\u00a0\u00a0 C)Y=\u968f\u673a\u503c\u00a0\u00a0\u00a0\u00a0\u00a0 D\uff09Y=-1", "\n38\u3001\u4ee5\u4e0bfor\u5faa\u73af\u8bed\u53e5\uff08\u00a0\u00a0B \uff09\u3002", "\n\u00a0\u00a0 for(;\u00a0\u00a0 ;)", "\n\u00a0\u00a0 printf(\u201c*\u201d);", "\n\u00a0\u00a0 A\uff09\u5224\u65ad\u5faa\u73af\u7ed3\u675f\u7684\u6761\u4ef6\u4e0d\u5408\u6cd5\u00a0\u00a0\u00a0\u00a0\u00a0 B\uff09\u662f\u65e0\u9650\u5faa\u73af\u00a0\u00a0\u00a0\u00a0\u00a0 C\uff09\u5faa\u73af\u4e00\u6b21\u4e5f\u4e0d\u6267\u884c\u00a0\u00a0\u00a0\u00a0\u00a0 D\uff09\u5faa\u73af\u53ea\u6267\u884c\u4e00\u6b21", "\n39\u3001\u4ee5\u4e0b\u7a0b\u5e8f\u6bb5\u6267\u884c\u540e\u8f93\u51fa\u7ed3\u679c\uff08\u00a0D\u00a0 \uff09\u3002", "\nint i;", "\nfor(i=1; ; i++)", "\nprintf(\u201c%d\u201d,i++);", "\nA)1\u00a0\u00a0 B)2\u00a0\u00a0\u00a0 C)3\u00a0\u00a0\u00a0 D\u6b7b\u5faa\u73af", "\n40\u3001char(*A)[5],\u5219\u6807\u8bc6\u7b26A\u7684\u610f\u4e49\u65f6\uff08\u00a0B\u00a0 \uff09\u3002", "\nA\uff09\u00a0A\u662f\u4e00\u4e2a\u6307\u5411\u67095\u4e2a\u5b57\u7b26\u578b\u5143\u7d20\u7684\u6307\u9488\u53d8\u91cf", "\nB\uff09\u00a0A\u662f\u4e00\u4e2a\u67095\u4e2a\u5143\u7d20\u7684\u4e00\u7ef4\u6570\u7ec4\uff0c\u6bcf\u4e2a\u5143\u7d20\u6307\u5411\u5b57\u7b26\u578b\u7684\u6307\u9488\u53d8\u91cf", "\nC\uff09\u00a0A\u662f\u4e00\u4e2a\u6307\u5411\u5b57\u7b26\u578b\u7684\u51fd\u6570\u7684\u6307\u9488\u53d8\u91cf", "\nD\uff09\u00a0A\u662f\u4e00\u4e2a\u67095\u4e2a\u5143\u7d20\u7684\u4e00\u7ef4\u6570\u7ec4\uff0c\u6bcf\u4e2a\u5143\u7d20\u6307\u5411\u6574\u578b\u53d8\u91cf\u7684\u6307\u9488\u53d8\u91cf"], "title": "C\u8bed\u8a00\u9762\u8bd5\u5927\u5168\u7cfb\u5217\u5e26\u7b54\u6848(2)"},
{"contents": ["\u4e0b\u5217\u5404\u9898ABCD\u56db\u4e2a\u9009\u9879\u4e2d\uff0c\u53ea\u6709\u4e00\u4e2a\u9009\u9879\u662f\u6b63\u786e\u7684\uff0c\u8bf7\u5c06\u6b63\u786e\u9009\u9879\u6d82\u5728\u7b54\u9898\u5361\u7684\u76f8\u5e94\u4f4d\u7f6e\u4e0a\uff0c\u7b54\u5728\u8bd5\u5377\u4e0a\u4e0d\u5f97\u5206\u3002", "1\u3001\u4e0d\u5408\u6cd5\u7684\u6574\u6570\u662f\uff08\u00a0\u00a0 B\uff09\u3002", "\u00a0\u00a0 A)0\u00d735\u00a0\u00a0\u00a0\u00a0 B)43.6 \u00a0\u00a0\u00a0\u00a0\u00a0C)0532\u00a0\u00a0\u00a0\u00a0\u00a0 D)-346", "2\u3001\u4e0b\u5217\u5408\u6cd5\u7684\u5b57\u7b26\u5e38\u91cf\u662f\uff08\u00a0D\u00a0 \uff09\u3002", "\u00a0\u00a0 A)\u201cf\u201d\u00a0\u00a0\u00a0 B)x\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)65\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)\u2018\\Xab\u2019", "3\u3001\u8bbe\u6709\u6574\u578b\u53d8\u91cfx,\u5355\u7cbe\u5ea6\u53d8\u91cfy=5.5\uff0c\u8868\u8fbe\u5f0fx=float(y*3+((int)y%4))\u6267\u884c\u540e\uff0cx\u7684\u503c\u4e3a\uff08\u00a0A\u00a0 \uff09\u3002", "\u00a0 \u00a0A)17\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)17.500000\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C)17.5\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)1.5", "4\u3001\u5728C\u8bed\u8a00\u4e2d\uff0c\u8d1f\u6574\u6570\u5728\u5185\u5b58\u4e2d\u4ee5\uff08\u00a0\u00a0A \uff09\u5f62\u5f0f\u91ca\u653e\u3002", "\u00a0 \u00a0A\uff09\u8865\u7801 \u00a0\u00a0\u00a0B\uff09BCD\u7801\u00a0\u00a0\u00a0\u00a0 C\uff09\u53cd\u7801\u00a0\u00a0\u00a0\u00a0\u00a0 D\uff09\u5341\u8fdb\u5236\u6570", "5\u3001\u5728C\u8bed\u8a00\u4e2d\uff0c\u8981\u6c42\u53c2\u52a0\u8fd0\u7b97\u7684\u6570\u5fc5\u987b\u662f\u6574\u6570\u7684\u8fd0\u7b97\u7b26\u662f\uff08\u00a0C\u00a0 \uff09\u3002", "\u00a0\u00a0 A\uff09/\u00a0\u00a0\u00a0\u00a0\u00a0 B\uff09\uff01\u00a0\u00a0\u00a0\u00a0 C\uff09%\u00a0\u00a0\u00a0\u00a0\u00a0 D\uff09= =", "6\u3001\uff08D\u00a0\u00a0 \uff09\u662fC\u8bed\u8a00\u4e2d\u975e\u6cd5\u7684\u6570\u636e\u7c7b\u578b\u5173\u952e\u5b57\u3002", "\u00a0\u00a0 A\uff09float\u00a0\u00a0\u00a0\u00a0\u00a0 B)singed\u00a0\u00a0\u00a0\u00a0\u00a0 C)integer\u00a0\u00a0\u00a0\u00a0\u00a0 D)Char", "7\u3001\u73b0\u5df2\u5b9a\u4e49\u6574\u5f62\u53d8\u91cfint i=1;\u6267\u884c\u5faa\u73af\u8bed\u53e5while(i++<5);\u540ei\u7684\u503c\u4e3a\uff08\u00a0\u00a0C \uff09\u3002", "\u00a0\u00a0 A\uff091\u00a0\u00a0\u00a0\u00a0\u00a0 B\uff095\u00a0\u00a0\u00a0\u00a0\u00a0 C\uff096 \u00a0\u00a0\u00a0\u00a0\u00a0D)\u4ee5\u4e0a\u4e09\u4e2a\u7b54\u6848\u90fd\u4e0d\u6b63\u786e", "8\u3001\u4e0b\u5217\u8bed\u53e5\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff08\u00a0D\u00a0 \uff09\u3002", "\u00a0\u00a0 printf(\u201c%f\\n\u201d,(float)(2+4)/2)\uff1b", "\u00a0\u00a0 A)\u6709\u8bed\u6cd5\u9519\u8bef\u4e0d\u80fd\u901a\u8fc7\u7f16\u8bd1\u00a0\u00a0\u00a0\u00a0\u00a0 B\uff093\u00a0\u00a0\u00a0\u00a0\u00a0 C\uff093.0\u00a0\u00a0\u00a0\u00a0\u00a0 D\uff093.000000", "9\u3001C\u8bed\u8a00\u4e2d\uff0c\u6574\u6570-8\u5728\u5185\u5b58\u4e2d\u7684\u5b58\u50a8\u5f62\u5f0f\u662f\uff08\u00a0A\u00a0 \uff09\u3002", "\u00a0\u00a0 A\uff091111\uff0c1111\uff0c1111\uff0c1000\u00a0\u00a0\u00a0\u00a0\u00a0 B\uff091000\uff0c0000\uff0c0000\uff0c1000", "C\uff090000\uff0c0000\uff0c0000\uff0c1000\u00a0\u00a0\u00a0\u00a0 D\uff091111\uff0c1111\uff0c1111\uff0c0111", "10\u3001\u8bbeC\u8bed\u8a00\u4e2d\uff0cint\u7c7b\u578b\u6570\u636e\u53602\u4e2a\u5b57\u8282\uff0c\u5219long\u7c7b\u578b\u6570\u636e\u5360\uff08\u00a0D\u00a0 \uff09\u4e2a\u5b57\u8282\u3002", "\u00a0\u00a0 A\uff091\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B\uff092\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C\uff098\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D\uff094", "11\u3001\u82e5\u53d8\u91cfa\u5df2\u8bf4\u660e\u4e3afloat\u7c7b\u578b\uff0c\u5219\u80fd\u5b9e\u73b0\u5c06a\u4e2d\u7684\u6570\u503c\u4fdd\u7559\u5c0f\u6570\u70b9\u540e\u4e24\u4f4d\uff0c\u7b2c\u4e09\u4f4d\u8fdb\u884c\u56db\u820d\u4e94\u5165\u8fd0\u7b97\u7684\u8868\u8fbe\u5f0f\u662f\uff08\u00a0C\u00a0 \uff09\u3002", "\u00a0\u00a0 A\uff09a=(a*100+0.5)/100.0\u00a0\u00a0\u00a0\u00a0\u00a0 B)a=(a*100+0.5)/100\u00a0\u00a0\u00a0\u00a0\u00a0", "C)a=(int)(a*100+0.5)/100.0\u00a0\u00a0\u00a0\u00a0\u00a0 D)a=(a/100+0.5)*100.0", "12\u3001\u5b9a\u4e49a\u4e3a\u6574\u578b\uff0c\u4e0b\u5217\u8868\u8fbe\u5f0fa=3>6\u7684\u8fd0\u884c\u540e\uff0ca\u7684\u503c\u4e3a\uff08\u00a0\u00a0A \uff09\u3002", "\u00a0 \u00a0A)0 \u00a0\u00a0\u00a0\u00a0\u00a0B)1\u00a0\u00a0\u00a0\u00a0\u00a0 C)3\u00a0\u00a0\u00a0\u00a0\u00a0 D)\u8868\u8fbe\u5f0f\u9519\u8bef", "13\u3001\u5982\u679ca=1,b=2,c=3,d=4,\u5219\u6761\u4ef6\u8868\u8fbe\u5f0fa>b?a:c>d?c:d\u7684\u503c\u4e3a\uff08\u00a0\u00a0D \uff09\u3002", "\u00a0\u00a0 A)1\u00a0\u00a0\u00a0\u00a0\u00a0 B)2\u00a0\u00a0\u00a0\u00a0\u00a0 C)3\u00a0\u00a0\u00a0\u00a0\u00a0 D)4", "14\u3001\u5bf9\u4e8e\u6761\u4ef6\u8868\u8fbe\u5f0f\uff08M\uff09?(a++):(a\u2013),\u5176\u4e2d\u7684\u8868\u8fbe\u5f0fM\u7b49\u4ef7\u4e8e\uff08\u00a0\u00a0C \uff09\u3002", "\u00a0\u00a0 A\uff09M= =0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)M= =1\u00a0\u00a0\u00a0\u00a0\u00a0 C)M!=0 \u00a0\u00a0\u00a0\u00a0\u00a0D)M!=1", "15\u3001\u5728x\u503c\u5904\u4e8e-2\u52302\uff0c4\u52308\u65f6\u503c\u4e3a\u201c\u771f\u201d\uff0c\u5426\u5219\u4e3a\u201c\u5047\u201d\u7684\u8868\u8fbe\u5f0f\u662f\uff08D\u00a0\u00a0 \uff09\u3002", "\u00a0\u00a0 A)(2>x>-2)||(4>x>8)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B)((x<=-2)||(x>=2)||((x>4)||(x>=8))", "C)(x<2)&&(x>=-2)&&(x>4)&&(x<8)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D)(x>-2)&&(x>4)||(x<8)&&(x<2)", "16\u3001\u5df2\u77e5\u5b57\u6bcda\u7684ASC||\u7684\u5341\u8fdb\u5236\u4ee3\u7801\u4e3a97\uff0c\u5219\u6267\u884c\u4e0b\u5217\u8bed\u53e5\u540e\u8f93\u51fa\u4e3a\uff08\u00a0C\u00a0 \uff09\u3002", "\u00a0\u00a0 Char a=\u2018a\u2019;", "\u00a0\u00a0 a\u2013;", "\u00a0\u00a0 printf(\u201c%d,%c\\n\u201d,a+\u20182\u2019-\u20180\u2019,a+\u20183\u2019-\u20180\u2019);", "\u00a0\u00a0 A)a,c\u00a0\u00a0\u00a0\u00a0 B)a\u2014\u8fd0\u7b97\u4e0d\u5408\u6cd5\uff0c\u6545\u6709\u8bed\u6cd5\u9519\u8bef\u00a0\u00a0\u00a0\u00a0 C\uff0998\uff0cc\u00a0\u00a0\u00a0 D\uff09\u683c\u5f0f\u63cf\u8ff0\u548c\u8f93\u51fa\u9879\u4e0d\u5339\u914d\uff0c\u8f93\u51fa\u65e0\u5b9a\u503c", "17\u3001\u4e0b\u5217\u8bed\u53e5\u4e2d\u9519\u8bef\u7684\u662f\uff08\u00a0\u00a0B \uff09\u3002", "\u00a0\u00a0 A)x=sizeof(int);\u00a0\u00a0\u00a0\u00a0 \u00a0B)x=sizeof(3.14);\u00a0\u00a0\u00a0\u00a0\u00a0 C)printf(\u201c%d\u201d,a=a+1,b\u2013,c+1);\u00a0\u00a0\u00a0\u00a0\u00a0 D)printf(\u201c%d\u201d,++x,x++);", "18\u3001C\u8bed\u8a00\u4e2d\uff0c\u903b\u8f91\u201c\u771f\u201d\u7b49\u4ef7\u4e8e\uff08\u00a0C\u00a0 \uff09\u3002", "\u00a0\u00a0 A\uff09\u5927\u4e8e\u96f6\u7684\u6570\u00a0\u00a0\u00a0\u00a0\u00a0 B\uff09\u5927\u4e8e\u96f6\u7684\u6574\u6570\u00a0\u00a0\u00a0\u00a0\u00a0 C\uff09\u975e\u96f6\u7684\u6570 \u00a0\u00a0\u00a0\u00a0\u00a0D\uff09\u975e\u96f6\u7684\u6574\u6570", "19\u3001\u4e0b\u5217\u8bed\u53e5\u4e2d\uff0c\u7b26\u5408\u8bed\u6cd5\u7684\u8bed\u53e5\u5f0f\uff08\u00a0\u00a0D \uff09\u3002", "\u00a0 A)a+b=3\u00a0\u00a0\u00a0\u00a0\u00a0 B)a=7\u00a0\u00a0\u00a0\u00a0\u00a0 C)a=c+b+3=6;\u00a0\u00a0\u00a0\u00a0 \u00a0D)a=8,b=a+7;", "20\u3001\u82e5x\u4e3afloat\u578b\u53d8\u91cf\uff0c\u5219\u4ee5\u5217\u7a0b\u5e8f\u6bb5\u7ed3\u679c\u662f\uff08B\u00a0\u00a0 \uff09\u3002", "x=1234.6789;", "printf(\u201c%-2.1f\u201d,x);", "A)\u8f93\u51fa\u683c\u5f0f\u63cf\u8ff0\u7b26\u7684\u57df\u5bbd\u5ea6\u4e0d\u591f\uff0c\u4e0d\u80fd\u8f93\u51fa\u00a0\u00a0\u00a0\u00a0\u00a0 B\uff09\u8f93\u51fa\u4e3a1234.7", "C\uff09\u8f93\u51fa\u4e3a1234.6\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D\uff09\u8f93\u51fa\u4e3a-1234.6"], "title": "C\u8bed\u8a00\u9762\u8bd5\u5927\u5168\u7cfb\u5217\u5e26\u7b54\u6848(1)"},
{"contents": ["1\u3001\u4ee5\u4e0b\u53d9\u8ff0\u4e2d\u6b63\u786e\u7684\u662f", "\n\uff08A\uff09\u00a0\u7528C\u7a0b\u5e8f\u5b9e\u73b0\u7684\u7b97\u6cd5\u5fc5\u987b\u8981\u6709\u8f93\u5165\u548c\u8f93\u51fa\u64cd\u4f5c", "\n\uff08B\uff09\u00a0\u7528C\u7a0b\u5e8f\u5b9e\u73b0\u7684\u7b97\u6cd5\u53ef\u4ee5\u6ca1\u6709\u8f93\u51fa\u4f46\u5fc5\u987b\u8981\u6709\u8f93\u5165", "\n\uff08C\uff09\u00a0\u7528C\u7a0b\u5e8f\u5b9e\u73b0\u7684\u7b97\u6cd5\u53ef\u4ee5\u6ca1\u6709\u8f93\u5165\u4f46\u5fc5\u987b\u8981\u6709\u8f93\u51fa", "\n\uff08D\uff09\u00a0\u7528C\u7a0b\u5e8f\u5b9e\u73b0\u7684\u7b97\u6cd5\u53ef\u4ee5\u65e2\u6ca1\u6709\u8f93\u5165\u4e5f\u6ca1\u6709\u8f93\u51fa", "2\u3001\u4ee5\u4e0b\u4e0d\u80fd\u5b9a\u4e49\u4e3a\u7528\u6237\u6807\u8bc6\u7b26\u7684\u662f", "\n\uff08A\uff09\u00a0Main", "\n\uff08B\uff09\u00a0_0", "\n\uff08C\uff09\u00a0_int", "\n\uff08D\uff09\u00a0sizeof", "3\u3001\u4ee5\u4e0b\u9009\u9879\u4e2d\uff0c\u4e0d\u80fd\u4f5c\u4e3a\u5408\u6cd5\u5e38\u91cf\u7684\u662f", "\n\uff08A\uff091\uff0e234e04", "\n\uff08B\uff091\uff0e234e0.4", "\n\uff08C\uff091.234e+4", "\n\uff08D\uff091.234e0", "4\u3001\u6570\u5b57\u5b57\u7b260\u7684ASCII\u503c\u4e3a48\uff0c\u82e5\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "\nmain()", "\n{\u00a0\u00a0 char\u00a0 a=\u20191\u2019,b=\u20192\u2019;", "\n\u00a0\u00a0\u00a0 printf (\u201c%c,\u201d,b++);", "\n\u00a0\u00a0\u00a0 printf (\u201c%d\\n\u201d,b-a);", "\n}", "\n\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f", "\n\uff08A\uff093\uff0c2", "\n\uff08B\uff0950\uff0c2", "\n\uff08C\uff092\uff0c2", "\n\uff08D\uff092\uff0c50", "5\u3001\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "\nmain()", "\n{\u00a0\u00a0 int m=12, n=34", "\n\u00a0\u00a0\u00a0 printf(\u201c%d%d\u201d,m++,++n);", "\n\u00a0\u00a0\u00a0 printf(\u201c%d%d\\n\u201d,n++,++m);", "\n}", "\n\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f", "\n\uff08A\uff09\u00a012353514", "\n\uff08B\uff09\u00a012353513", "\n\uff08C\uff09\u00a012343514", "\n\uff08D\uff09\u00a012343513", "6\u3001\u6709\u5b9a\u4e49\u8bed\u53e5\uff1aint\u00a0 b;char\u00a0 c[10]; ,\u5219\u6b63\u786e\u7684\u8f93\u5165\u8bed\u53e5\u662f", "\n\uff08A\uff09\u00a0scanf(\u201c%d%s\u201d,&b,&c);", "\n\uff08B\uff09\u00a0scanf(\u201c%d%s\u201d,&b,c);", "\n\uff08C\uff09\u00a0scanf(\u201c%d%s\u201d,b,c);", "\n\uff08D\uff09\u00a0scanf(\u201c%d%s\u201d,b,&c);", "7\u3001\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "\nmain()", "\n{", "\n\u00a0\u00a0 int\u00a0 a,b,d=25;", "\n\u00a0\u00a0 a=d/10%9;", "\n\u00a0\u00a0 b=a&&(-1);", "\n\u00a0\u00a0 printf(\u201c%d,%d\\n\u201d,a,b);", "\n}", "\n\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f", "\n\uff08A\uff096\uff0c1", "\n\uff08B\uff092\uff0c1", "\n\uff08C\uff096\uff0c0", "\n\uff08D\uff092\uff0c0", "8\u3001\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "\nmain()", "\n{", "\n\u00a0\u00a0 int p[8]={11,12,13,14,15,16,17,18}, i =0,j=0;", "\n\u00a0\u00a0 while(I++<7)\u00a0 if(p[i]%2)\u00a0 j+=p[i];", "\n\u00a0\u00a0 printf(\u201c%d\\n\u201d,j);", "\n}", "\n\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f", "\n\uff08A\uff09\u00a042", "\n\uff08B\uff09\u00a045", "\n\uff08C\uff09\u00a056", "\n\uff08D\uff09\u00a060", "9\u3001\u4ee5\u4e0b\u80fd\u6b63\u786e\u5b9a\u4e49\u4e00\u7ef4\u6570\u7ec4\u7684\u9009\u9879\u662f", "\n\uff08A\uff09\u00a0int\u00a0 a[5]={0,1,2,3,4,5};", "\n\uff08B\uff09\u00a0char\u00a0 a[]={0,1,2,3,4,5};", "\n\uff08C\uff09\u00a0char\u00a0 a={\u2018A\u2019,\u2019B\u2019,\u2019C\u2019};", "\n\uff08D\uff09\u00a0int\u00a0 a[5]=\u201d0123\u201d;", "\n10\u3001\u5df2\u6709\u5b9a\u4e49\uff1achar a[]=\u201dxyz\u201d,b[]={\u2018x\u2019,\u2019y\u2019,\u2019z\u2019};,\u4ee5\u4e0b\u53d9\u8ff0\u4e2d\u6b63\u786e\u7684\u662f", "\n\uff08A\uff09\u00a0\u6570\u7ec4a\u548cb\u7684\u957f\u5ea6\u76f8\u540c", "\n\uff08B\uff09\u00a0a\u6570\u7ec4\u957f\u5ea6\u5c0f\u4e8eb\u6570\u7ec4\u957f\u5ea6", "\n\uff08C\uff09\u00a0a\u6570\u7ec4\u957f\u5ea6\u5927\u4e8eb\u6570\u7ec4\u957f\u5ea6", "\n\uff08D\uff09\u00a0\u4e0a\u8ff0\u8bf4\u6cd5\u90fd\u4e0d\u5bf9", "11\u3001\u4ee5\u4e0b\u53d9\u8ff0\u4e2d\u9519\u8bef\u7684\u662f", "\n\uff08A\uff09\u00a0\u5bf9\u4e8edouble\u7c7b\u578b\u6570\u7ec4\uff0c\u4e0d\u53ef\u4ee5\u76f4\u63a5\u7528\u6570\u7ec4\u540d\u5bf9\u5bf9\u6570\u7ec4\u8fdb\u884c\u6574\u4f53\u8f93\u5165\u6216\u8f93\u51fa", "\n\uff08B\uff09\u00a0\u6570\u7ec4\u540d\u4ee3\u8868\u7684\u662f\u6570\u7ec4\u6240\u5360\u5b58\u50a8\u533a\u7684\u9996\u5730\u5740\uff0c\u5176\u503c\u4e0d\u53ef\u6539\u53d8", "\n\uff08C\uff09\u00a0\u5f53\u7a0b\u5e8f\u6267\u884c\u4e2d\uff0c\u6570\u7ec4\u5143\u7d20\u7684\u4e0b\u6807\u8d85\u51fa\u6240\u5b9a\u4e49\u7684\u4e0b\u6807\u8303\u56f4\u65f6\uff0c\u7cfb\u7edf\u5c06\u7ed9\u51fa\u201c\u4e0b\u6807\u8d8a\u754c\u201d\u7684\u51fa\u9519\u4fe1\u606f", "\n\uff08D\uff09\u00a0\u53ef\u4ee5\u901a\u8fc7\u8d4b\u521d\u503c\u7684\u65b9\u5f0f\u786e\u5b9a\u6570\u7ec4\u5143\u7d20\u7684\u4e2a\u6570", "12\u3001\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "\n#define\u00a0 P\u00a0 3", "\n#define\u00a0 F(int\u00a0 x)\u00a0 {\u00a0 return\u00a0 (P*x*x);}", "\nmain()", "\n{", "\n\u00a0\u00a0 printf(\u201c%d\\n\u201d,F(3+5));", "\n}", "\n\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f", "\n\uff08A\uff09\u00a0192", "\n\uff08B\uff09\u00a029", "\n\uff08C\uff09\u00a025", "\n\uff08D\uff09\u00a0\u7f16\u8bd1\u51fa\u9519", "13\u3001\u6709\u4ee5\u4e0b\u7a0b\u5e8f", "\nmain()", "\n{", "\n\u00a0\u00a0 int\u00a0 c=35;\u00a0 printf(\u201c%d\\n\u201d,c&c", "\n}", "\n\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f", "\n\uff08A\uff09\u00a00", "\n\uff08B\uff09\u00a070", "\n\uff08C\uff09\u00a035", "\n\uff08D\uff09\u00a01", "14\u3001\u4ee5\u4e0b\u53d9\u8ff0\u4e2d\u6b63\u786e\u7684\u662f", "\n\uff08A\uff09\u00a0\u9884\u5904\u7406\u547d\u4ee4\u884c\u5fc5\u987b\u4f4d\u4e8e\u6e90\u6587\u4ef6\u7684\u5f00\u5934", "\n\uff08B\uff09\u00a0\u5728\u6e90\u6587\u4ef6\u7684\u4e00\u884c\u4e0a\u53ef\u4ee5\u6709\u591a\u6761\u9884\u5904\u7406\u547d\u4ee4", "\n\uff08C\uff09\u00a0\u5b8f\u540d\u5fc5\u987b\u7528\u5927\u5199\u5b57\u6bcd\u8868\u793a", "\n\uff08D\uff09\u00a0\u5b8f\u66ff\u6362\u4e0d\u5360\u7528\u7a0b\u5e8f\u7684\u8fd0\u884c\u65f6\u95f4", "\n15\u3001\u82e5\u6709\u4ee5\u4e0b\u8bf4\u660e\u548c\u5b9a\u4e49", "\nunion\u00a0 dt", "\n{", "\n\u00a0\u00a0\u00a0 int\u00a0 a;\u00a0 char\u00a0 b;\u00a0 double\u00a0 c;", "\n}data", "\n\u4ee5\u4e0b\u53d9\u8ff0\u4e2d\u9519\u8bef\u7684\u662f", "\n\uff08A\uff09\u00a0data\u7684\u6bcf\u4e2a\u6210\u5458\u8d77\u59cb\u5730\u5740\u90fd\u76f8\u540c", "\n\uff08B\uff09\u00a0\u53d8\u91cfdata\u6240\u5360\u6bcf\u5b58\u5b57\u8282\u6811\u4e0e\u6210\u5458c\u6240\u5360\u5b57\u8282\u6570\u76f8\u7b49", "\n\uff08C\uff09\u00a0\u7a0b\u5e8f\u6bb5\uff1adata.a=5;printf(\u201c%f\\n\u201d,data.c);\u8f93\u51fa\u7ed3\u679c\u4e3a5.000000", "\n\uff08D\uff09\u00a0data\u53ef\u4ee5\u4f5c\u4e3a\u51fd\u6570\u7684\u5b9e\u53c2", "16\u3001\u4ee5\u4e0b\u8bed\u53e5\u6216\u8bed\u53e5\u7ec4\u4e2d\uff0c\u80fd\u6b63\u786e\u8fdb\u884c\u5b57\u7b26\u4e32\u8d4b\u503c\u7684\u662f", "\n\uff08A\uff09\u00a0char\u00a0 *sp;\u00a0 *sp=\u201dright!\u201d;", "\n\uff08B\uff09\u00a0char\u00a0 s[10];\u00a0 s=\u201dright!\u201d;", "\n\uff08C\uff09\u00a0char\u00a0 s[10];\u00a0 *s=\u201dright!\u201d;", "\n\uff08D\uff09\u00a0char\u00a0 *sp=\u201dright!\u201d;", "17\u3001\u8bbe\u6709\u5982\u4e0b\u8bf4\u660e", "\ntypedef\u00a0 struct\u00a0 ST", "\n{", "\n\u00a0\u00a0 long a;", "\n\u00a0\u00a0 int\u00a0 b;", "\n\u00a0\u00a0 char\u00a0 c[2];", "\n}NEW;", "\n\u5219\u4e0b\u9762\u53d9\u8ff0\u4e2d\u6b63\u786e\u7684\u662f", "\n\uff08A\uff09\u00a0\u4ee5\u4e0a\u7684\u8bf4\u660e\u5f62\u5f0f\u975e\u6cd5", "\n\uff08B\uff09\u00a0ST\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\u7c7b\u578b", "\n\uff08C\uff09\u00a0NEW\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\u7c7b\u578b", "\n\uff08D\uff09\u00a0NEW\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\u53d8\u91cf", "18\u3001\u6709\u4ee5\u4e0b\u51fd\u6570", "\nfun(char\u00a0 *a,char\u00a0 *b)", "\n{", "\n\u00a0\u00a0 while((*a!=\u2019\\0\u2019)&&(*b!=\u2019\\0\u2019)&&(*a==*b))", "\n\u00a0\u00a0 {\u00a0\u00a0 a++;\u00a0 b++;}", "\n\u00a0\u00a0 return\u00a0 (*a-*b);", "\n}", "\n\u8be5\u51fd\u6570\u7684\u529f\u80fd\u662f", "\n\uff08A\uff09\u00a0\u8ba1\u7b97a\u548cb\u6240\u6307\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e4b\u5dee", "\n\uff08B\uff09\u00a0\u5c06b\u6240\u6307\u5b57\u7b26\u4e32\u590d\u5236\u5230a\u6240\u6307\u5b57\u7b26\u4e32\u4e2d", "\n\uff08C\uff09\u00a0\u5c06b\u6240\u6307\u5b57\u7b26\u4e32\u8fde\u63a5\u5230a\u6240\u6307\u5b57\u7b26\u4e32\u540e\u9762", "\n\uff08D\uff09\u00a0\u6bd4\u8f83a\u548cb\u6240\u6307\u5b57\u7b26\u4e32\u7684\u5927\u5c0f"], "title": "\u4e00\u5957C\u8bed\u8a00\u9762\u8bd5\u9898 \u9009\u62e9\u9898\u578b"},
{"contents": ["\u4e60\u9898\u63cf\u8ff0", "\n\u672c\u7a0b\u5e8f\u7684\u529f\u80fd\u662f\u5bf9\u4e2d\u56fd\u5bfc\u822a\u7684\u6570\u636e\u4e2d\u7684\u90e8\u5206\u9053\u8def\u60c5\u51b5\u6570\u636e\u8fdb\u884c\u6574\u7406\uff0c\u5206\u6790\uff0c\u67e5\u8be2\uff0c\u6392\u5e8f\u3002", "\n\u539f\u59cb\u6570\u636e\u5b58\u50a8\u5728\u4e00\u4e2aGTBL.dat\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\uff0c\u5177\u4f53\u7684\u6587\u4ef6\u683c\u5f0f\u8bf7\u53c2\u7167ReveseTableFormat.xls \u4e2d\u7684\u201c\u9006\u5f15\u8868\u683c\u5f0f\u201dsheet.", "\n\u00a0\u5728Kiwi\u683c\u5f0f\u4e2d\uff0c\u6bcf\u4e2a\u9053\u8def\u90fd\u662f\u88ab\u8d4b\u4e88\u4e86\u72ec\u4e00\u65e0\u4e8c\u7684\u7f16\u53f7\uff0c\u8fd9\u4e2a\u7f16\u53f7\u53eb\u505aLinkID,", "\n\u5728GTBL.dat\u8fd9\u4e2a\u6587\u4ef6\u4e2d\u5b58\u50a8\u7740\u90e8\u5206\u9053\u8def\u60c5\u51b5\u7684\u6570\u636e\uff0c\u4ed6\u4eec\u662f\u65e0\u5e8f\u5b58\u50a8\u7684(\u9488\u5bf9LinkID\u6765\u8bf4\u662f\u65e0\u5e8f\u7684)\u3002", "\u63d0\u4f9b\u7684\u529f\u80fd\uff1a", "\n1)\u00a0\u8bfb\u53d6GTBL.dat, \u6839\u636eLinkID\u91cd\u65b0\u6392\u5e8f\u8f93\u51fa\u5230\u65b0\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u683c\u5f0f\u540c \u201d\u9006\u5f15\u8868\u683c\u5f0f\u201d\u3002", "\n2)\u00a0\u68c0\u7d22\uff1a", "\na.\u00a0\u6839\u636eLinkID\u67e5\u627e\u6307\u5b9a\u7684Link\u7684\u76f8\u5173\u60c5\u62a5\u5e76\u8f93\u51fa\u5230\u63a7\u5236\u53f0\u6216\u8005\u6587\u4ef6\uff08\u6587\u672c\u683c\u5f0f\uff09\u3002", "\nb.\u00a0\u67e5\u627e\u6307\u5b9a \u4ea4\u53c9Link\u5217\u8868\u793aClass\u756a\u53f7 \u7684\u6240\u6709Link\u7684\u96c6\u5408\u3002", "\nc.\u00a0\u67e5\u627e\u5c94\u8def\u6570> n \u7684\u6240\u6709Link\u7684\u96c6\u5408, n\u7531\u7528\u6237\u8f93\u5165\u3002", "\nd.\u00a0\u6307\u5b9a\u9053\u8def\u540d\u79f0\u68c0\u7d22\u3002", "\u8f93\u51fa\u683c\u5f0f\uff1a", "\n#linked=1234;roadnameflag=1;brunch=2;dispclass=3; roadname=\u9752\u5e74\u5927\u8857#", "\n(\u5982\u679c\u6ca1\u6709\u540d\u79f0\uff08roadnameflag == 0 \uff09, \u5219\u4e0d\u8f93\u51faroadname=\u9752\u5e74\u5927\u8857\u8fd9\u4e2a\u6761\u76ee)", "\n\u5982\u679c\u67e5\u5230\u7684\u7eaa\u5f55\u7684\u4e2a\u6570>5\u4e2a\uff0c\u5219\u8f93\u51fa\u5230\u6307\u5b9a\u6587\u4ef6\u4e2d(\u6587\u4ef6\u653e\u5728\u5f53\u524d\u76ee\u5f55\u4e2d\uff0c\u8bf7\u7528 searchresultxxx.txt \u547d\u540d\uff0c xxx\u662f\u68c0\u7d22\u6b21\u6570\u7684\u8bb0\u5f55\uff0c\u6bd4\u5982\u7b2c\u4e00\u6b21\u68c0\u7d22\uff0c\u5219xxx\u662f 001\uff0c \u4ee5\u6b64\u7c7b\u63a8\u3002)", "3)\u00a0\u4eceLink\u60c5\u62a5\u8f93\u5165\u6587\u4ef6\u4e2d\u8bfb\u53d6\u6307\u5b9a\u7684Link\u60c5\u62a5\uff0c\u63d2\u5165\u5230GTBL.dat\u4e2d\u5e76\u4fdd\u5b58\uff0c\u5982\u679c\u5bf9\u5e94\u7684LinkID\u5df2\u7ecf\u5b58\u5728\uff0c\u5219\u66ff\u6362\uff0c\u5426\u5219\u63d2\u5165\u3002(\u6587\u4ef6\u7684\u683c\u5f0f\u53c2\u7167ReveseTableFormat.xls \u4e2d\u7684\u201cLink\u60c5\u62a5\u8f93\u5165\u6587\u4ef6\u683c\u5f0f\u201dsheet, sourcelink.txt \u662f\u4e00\u4e2a\u4f8b\u5b50\u6587\u4ef6\uff0c\u5927\u5bb6\u53ef\u4ee5\u81ea\u5df1\u7f16\u5199\u8fd9\u4e2a\u6587\u4ef6)\u3002 \u5177\u4f53\u7684\u64cd\u4f5c\u662f\u6bcf\u6309\u4e00\u6b21\u56de\u8f66\uff0c\u5c31\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u4e0b\u4e00\u4e2aLink\u7684\u60c5\u62a5\uff0c\u8f93\u51fa\u5230\u754c\u9762\uff0c\u5e76\u4e14\u6267\u884c\u63d2\u5165\u6216\u8005\u66ff\u6362\u64cd\u4f5c\u3002", "\n\u8fd9\u4e9b\u63d2\u5165\u7684\u8bb0\u5f55\u9700\u8981\u4fdd\u5b58\u5230GTBL.dat\u548c\u6392\u5e8f\u540e\u7684\u6587\u4ef6\u4e2d\u3002", "\n1.\u00a0\u5177\u4f53\u8981\u6c42", "\n1). \u9700\u8981\u5212\u5206\u51fa\u81f3\u5c11 3\u4e2a\u6216\u8005\u4ee5\u4e0a\u7684\u6a21\u5757\u3002", "\n2). \u5177\u6709\u8f83\u9ad8\u7684\u5904\u7406\u901f\u5ea6", "\n3). \u8f83\u5c11\u7684\u5185\u5b58\u6d88\u8017\uff0c\u6bd4\u5982\u5bf9\u4e8e\u9053\u8def\u540d\u79f0\uff0c\u6709\u7684link\u6ca1\u6709\uff0c\u5219\u4e0d\u5206\u914d\u7a7a\u95f4\u3002", "\n4). \u5177\u6709\u8f83\u597d\u7684\u7ef4\u62a4\u6027\u548c\u6613\u8bfb\u6027.", "\n5). \u8f83\u597d\u7684\u5065\u58ee\u6027\uff08\u9519\u8bef\u7684\u7528\u6237\u8f93\u5165\u5904\u7406\u7b49\uff09", "\n2.\u00a0\u8003\u5bdf\u70b9", "\n1)\u00a0\u8bbe\u8ba1\u6982\u5ff5", "\n2)\u00a0\u6587\u4ef6\u64cd\u4f5c", "\n3)\u00a0\u5185\u5b58\u3001\u6307\u9488\u3001\u5b57\u7b26\u4e32\u64cd\u4f5c", "\n4)\u00a0\u94fe\u8868\u6570\u636e\u7ed3\u6784\u7684\u4f7f\u7528\u3002", "\n5)\u00a0\u6392\u5e8f\u7b97\u6cd5", "\n6)\u00a0\u4f4d\u8fd0\u7b97", "\n4\uff0e \u5176\u4ed6\uff1a", "\n\u00a0\u4f7f\u7528\u63a7\u5236\u53f0\u7684\u7a0b\u5e8f\u5fc5\u987b\u6709\u4e24\u4e2a\u5c42\u6b21\u7684\u9009\u62e9\u83dc\u5355", "\n1)\u00a0\u6392\u5e8f\u8f93\u51fa", "\n2)\u00a0\u68c0\u7d22", "\na.\u00a0\u6307\u5b9alinkID\u68c0\u7d22", "\nb.\u00a0\u6307\u5b9a\u4ea4\u53c9Link\u5217\u8868\u793aClass\u756a\u53f7 \u68c0\u7d22", "\nc.\u00a0\u6307\u5b9a\u67e5\u627e\u5c94\u8def\u6570 \u68c0\u7d22", "\nd.\u00a0\u6307\u5b9a\u9053\u8def\u540d\u79f0 \u68c0\u7d22", "\n3)\u00a0\u66f4\u65b0", "\u4f7f\u7528Windows\u7f16\u7a0b\u7684\uff0c\u5219\u5f62\u5f0f\u53ef\u4ee5\u7075\u6d3b\u9009\u62e9\u3002", "\u6ce8\uff1a\u5b66\u4f1a\u7528top-down", "\n\u00a0\u00a0\u00a0\u00a0 \u6ce8\u610f\u7528assert"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7ec3\u4e60"},
{"contents": ["\u5728C \u8bed\u8a00\u4e2d\u5bf9\u6570\u7ec4\u548c\u6307\u9488\u7684\u56f0\u60d1\u591a\u6570\u90fd\u6765\u81ea\u8fd9\u53e5\u8bdd\u3002\u8bf4\u6570\u7ec4\u548c\u6307\u9488\u201c\u7b49\u4ef7\u201d\u4e0d\u8868\u793a\u5b83\u4eec\u76f8\u540c, \u751a\u81f3\u4e5f\u4e0d\u80fd\u4e92\u6362\u3002\u5b83\u7684\u610f\u601d\u662f\u8bf4\u6570\u7ec4\u548c\u6307\u9488\u7684\u7b97\u6cd5\u5b9a\u4e49\u53ef\u4ee5\u7528\u6307\u9488\u65b9\u4fbf\u7684\u8bbf\u95ee\u6570\u7ec4\u6216\u8005\u6a21\u62df\u6570\u7ec4\u3002", "\n\u7279\u522b\u5730, \u7b49\u4ef7\u7684\u57fa\u7840\u6765\u81ea\u8fd9\u4e2a\u5173\u952e\u5b9a\u4e49:", "\n\u4e00\u4e2aT \u7684\u6570\u7ec4\u7c7b\u578b\u7684\u5de6\u503c\u5982\u679c\u51fa\u73b0\u5728\u8868\u8fbe\u5f0f\u4e2d\u4f1a\u8715\u53d8\u4e3a\u4e00\u4e2a\u6307\u5411\u6570", "\n\u7ec4\u7b2c\u4e00\u4e2a\u6210\u5458\u7684\u6307\u9488(\u9664\u4e86\u4e09\u79cd\u4f8b\u5916\u60c5\u51b5); \u7ed3\u679c\u6307\u9488\u7684\u7c7b\u578b\u662fT \u7684", "\n\u6307\u9488\u3002", "\n\u8fd9\u5c31\u662f\u8bf4, \u4e00\u65e6\u6570\u7ec4\u51fa\u73b0\u5728\u8868\u8fbe\u5f0f\u4e2d, \u7f16\u8bd1\u5668\u4f1a\u9690\u5f0f\u5730\u751f\u6210\u4e00\u4e2a\u6307\u5411\u6570\u7ec4\u7b2c\u4e00\u4e2a\u6210\u5458\u5730\u6307\u9488, \u5c31\u50cf\u7a0b\u5e8f\u5458\u5199\u51fa\u4e86&a[0] \u4e00\u6837\u3002\u4f8b\u5916\u7684\u60c5\u51b5\u662f, \u6570\u7ec4\u4e3asizeof \u6216&\u64cd\u4f5c\u7b26\u7684\u64cd\u4f5c\u6570, \u6216\u8005\u4e3a\u5b57\u7b26\u6570\u7ec4\u7684\u5b57\u7b26\u4e32\u521d\u59cb\u503c\u3002", "\n\u4f5c\u4e3a\u8fd9\u4e2a\u8fd9\u4e2a\u5b9a\u4e49\u7684\u540e\u679c, \u7f16\u8bd1\u5668\u5e76\u90a3\u4e48\u4e0d\u4e25\u683c\u533a\u5206\u6570\u7ec4\u4e0b\u6807\u64cd\u4f5c\u7b26\u548c\u6307\u9488\u3002\u5728\u5f62\u5982a[i] \u7684\u8868\u8fbe\u5f0f\u4e2d, \u6839\u636e\u4e0a\u8fb9\u7684\u89c4\u5219, \u6570\u7ec4\u8715\u5316\u4e3a\u6307\u9488\u7136\u540e\u6309\u7167\u6307\u9488\u53d8\u91cf\u7684\u65b9\u5f0f\u5982p[i] \u90a3\u6837\u5bfb\u5740, \u5982\u95ee\u98986.2 \u6240\u8ff0, \u5c3d\u7ba1\u6700\u7ec8\u7684\u5185\u5b58\u8bbf\u95ee\u5e76\u4e0d\u4e00\u6837\u3002\u5982\u679c\u4f60\u628a\u6570\u7ec4\u5730\u5740\u8d4b\u7ed9\u6307\u9488:", "\np = a;", "\n\u90a3\u4e48p[3] \u548ca[3] \u5c06\u4f1a\u8bbf\u95ee\u540c\u6837\u7684\u6210\u5458\u3002"], "title": "\u5728C \u8bed\u8a00\u4e2d\u201c\u6307\u9488\u548c\u6570\u7ec4\u7b49\u4ef7\u201d \u5230\u5e95\u662f\u4ec0\u4e48\u610f\u601d\uff1f"},
{"contents": ["\u771f\u7684\u6ca1\u6709\u3002", "\n\u4e25\u683c\u5730\u8bb2, C \u603b\u662f\u6309\u503c\u4f20\u9012\u3002\u4f60\u53ef\u4ee5\u81ea\u5df1\u6a21\u62df\u6309\u5f15\u7528\u4f20\u9012, \u5b9a\u4e49\u63a5\u53d7\u6307\u9488\u7684\u51fd\u6570, \u7136\u540e\u5728\u8c03\u7528\u65f6\u4f7f\u7528& \u64cd\u4f5c\u7b26\u3002\u4e8b\u5b9e\u4e0a, \u5f53\u4f60\u5411\u51fd\u6570\u4f20\u5165\u6570\u7ec4(\u4f20\u5165\u6307\u9488\u7684\u60c5\u51b5\u53c2\u89c1\u95ee\u98986.4 \u53ca\u5176\u5b83) \u65f6, \u7f16\u8bd1\u5668\u672c\u8d28\u4e0a\u5c31\u662f\u5728\u6a21\u62df\u6309\u5f15\u7528\u4f20\u9012\u3002\u4f46\u662fC \u6ca1\u6709\u4efb\u4f55\u771f\u6b63\u7b49\u540c\u4e8e\u6b63\u5f0f\u7684\u6309\u5f15\u7528\u4f20\u9012\u6216C++ \u7684\u5f15\u7528\u53c2\u6570\u7684\u4e1c\u897f\u3002\u53e6\u4e00\u65b9\u9762, \u7c7b\u4f3c\u51fd\u6570\u7684\u9884\u5904\u7406\u5b8f\u53ef\u4ee5\u63d0\u4f9b\u4e00\u79cd\u201c\u6309\u540d\u79f0\u4f20\u9012\u201d\u7684\u5f62\u5f0f\u3002"], "title": "C \u6709\u201c\u6309\u5f15\u7528\u4f20\u9012\u201d \u5417\uff1f"},
{"contents": ["\u628a\u51fd\u6570\u6307\u9488\u76f4\u63a5\u52a0\u5165\u5230\u7ed3\u6784\u4e2d\u5c31\u53ef\u4ee5\u5b9e\u73b0\u7b80\u5355\u7684\u201c\u65b9\u6cd5\u201d\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u5404\u79cd\u4e0d\u96c5\u800c\u66b4\u529b\u7684\u65b9\u6cd5\u6765\u5b9e\u73b0\u7ee7\u627f, \u4f8b\u5982\u901a\u8fc7\u9884\u5904\u7406\u5668\u6216\u542b\u6709\u201c\u57fa\u7c7b\u201d \u7684\u7ed3\u6784\u4f5c\u4e3a\u5f00\u59cb\u7684\u5b50\u96c6, \u4f46\u8fd9\u4e9b\u65b9\u6cd5\u90fd\u4e0d\u5b8c\u7f8e\u3002\u5f88\u660e\u663e, \u4e5f\u6ca1\u6709\u8fd0\u7b97\u7b26\u7684\u91cd\u8f7d\u548c\u8986\u76d6(\u4f8b\u5982, \u201c\u5bfc\u51fa\u7c7b\u201d\u4e2d\u7684\u201c\u65b9\u6cd5\u201d), \u90a3\u4e9b\u5fc5\u987b\u4eba\u5de5\u53bb\u505a\u3002\u663e\u7136\u7684, \u5982\u679c\u4f60\u9700\u8981\u201c\u771f\u201d \u7684\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1, \u4f60\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u652f\u6301\u8fd9\u4e9b\u7279\u6027\u7684\u8bed\u8a00, \u4f8b\u5982C++\u3002"], "title": "\u5728C \u4e2d\u662f\u5426\u6709\u6a21\u62df\u7ee7\u627f\u7b49\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u7279\u6027\u7684\u597d\u65b9\u6cd5\uff1f"},
{"contents": ["2\uff0e\u8bf7\u7f16\u5199\u51fd\u6570fun\uff0c\u5b83\u7684\u529f\u80fd\u662f\uff1a\u6c42\u51fa1\u52301000\u4e4b\u5185\u80fd\u88ab7\u621611\u6574\u9664\u3001\u4f46\u4e0d\u80fd\u540c\u65f6\u88ab7\u548c11\u6574\u9664\u7684\u6240\u6709\u6574\u6570\u5e76\u5c06\u5b83\u4eec\u653e\u5728a\u6240\u6307\u7684\u6570\u7ec4\u4e2d\uff0c\u901a\u8fc7n\u8fd4\u56de\u8fd9\u4e9b\u6570\u7684\u4e2a\u6570\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <conio.h>", "#include <stdio.h>", "void fun(int *a,int *n)", "{", "}", "main()", "{", "int aa[1000],n,k;", "clrscr();", "fun(aa,&n);", "for(k=0;k<n;k++)", "if((k+1)%10==0)", "printf(\u201c\\n\u201d);", "else printf(\u201c%5d,\u201d,aa[k]);", "}", "\u00a0", "3\uff0e\u8bf7\u7f16\u5199\u51fd\u6570void\u00a0 fun(int x\uff0cint pp[]\uff0cint *n)\uff0c\u5b83\u7684\u529f\u80fd\u662f\uff1a\u6c42\u51fa\u80fd\u6574\u9664x\u4e14\u4e0d\u662f\u5076\u6570\u7684\u5404\u6574\u6570\uff0c\u5e76\u6309\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u653e\u5728pp\u6240\u6307\u7684\u6570\u7ec4\u4e2d\uff0c\u8fd9\u4e9b\u9664\u6570\u7684\u4e2a\u6570\u901a\u8fc7\u5f62\u53c2n\u8fd4\u56de\u3002", "\u4f8b\u5982\uff0c\u82e5x\u4e2d\u7684\u503c\u4e3a30\uff0c\u5219\u67094\u4e2a\u6570\u7b26\u5408\u8981\u6c42\uff0c\u5b83\u4eec\u662f1\uff0c3\uff0c5\uff0c15\u3002", "\u6ce8\u610f\uff1a\u90e8\u5206\u6e90\u7a0b\u5e8f\u7ed9\u51fa\u5982\u4e0b\u3002", "\u8bf7\u52ff\u6539\u52a8\u4e3b\u51fd\u6570main\u548c\u5176\u4ed6\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u4ec5\u5728\u51fd\u6570fun\u7684\u82b1\u62ec\u53f7\u4e2d\u586b\u5165\u6240\u7f16\u5199\u7684\u82e5\u5e72\u8bed\u53e5\u3002", "#include <conio.h>", "#include <stdio.h>", "void fun(int x, int pp[], int *n)", "{", "}", "main()", "{", "int x, aa[1000], n, i;", "clrscr();", "printf(\u201c\\nPlease enter an integer number:\\n\u201d);", "scanf(\u201c%d\u201d,&x);", "fun(x,aa,&n);", "for(i=0;i<n;i++)", "printf(\u201c%d \u201c, aa[i]);", "printf(\u201c\\n\u201d);", "}", "\u00a0", "59\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u7edf\u8ba1\u5b57\u7b26\u4e32\u4e2d\u5404\u5143\u97f3\u5b57\u6bcd(\u5373\uff1aA\u3001E\u3001I\u3001O\u3001U)\u7684\u4e2a\u6570\u3002\u6ce8\u610f\uff1a\u5b57\u6bcd\u4e0d\u5206\u5927\u3001\u5c0f\u5199\u3002\u4f8b\u5982\uff1a\u82e5\u8f93\u5165THIs is a boot\uff0c\u5219\u8f93\u51fa\u5e94\u8be5\u662f1\u30010\u30012\u30012\u30010\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <conio.h>", "#include <stdio.h>", "/********found********/", "fun ( char\u00a0 *s,\u00a0 int\u00a0 num[5] )", "{", "int k, i=5;", "/********found********/", "for ( k = 0; k<i; k++ )", "num[i]=0;", "for (; *s; s++)", "{", "i=-1;", "/********found********/", "switch ( s )", "{", "case \u2018a\u2019:", "case \u2018A\u2019:", "{", "i=0;", "break;", "}", "case \u2018e\u2019:", "case \u2018E\u2019:", "{", "i=1;", "break;", "}", "case \u2018i\u2019:", "case \u2018I\u2019:", "{", "i=2;", "break;", "}", "case \u2018o\u2019:", "case \u2018O\u2019:", "{", "i=3;", "break;", "}", "case \u2018u\u2019:", "case \u2018U\u2019:", "{", "i=4;", "break;", "}", "}", "if (i >=0)", "num[i]++;", "}", "}", "\u00a0", "main( )", "{", "char\u00a0 s1[81];", "int num1[5], i;", "clrscr();", "printf(\u201c\\nPlease enter a string: \u201d );", "gets( s1 );", "fun ( s1,num1 );", "for ( i=0; i < 5; i++ )", "printf (\u201c%d\u201d,num1[i]);", "printf(\u201c\\n\u201d);", "}", "\u00a0", "60\uff0e\u4e0b\u5217\u7ed9\u5b9a\u7a0b\u5e8f\u4e2d\uff0c\u51fd\u6570fun\u7684\u529f\u80fd\u662f\uff1a\u627e\u51fa\u4e00\u4e2a\u5927\u4e8e\u7ed9\u5b9a\u6574\u6570m\u4e14\u7d27\u968fm\u7684\u7d20\u6570\uff0c\u5e76\u4f5c\u4e3a\u51fd\u6570\u503c\u8fd4\u56de\u3002", "\u8bf7\u6539\u6b63\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u4f7f\u5b83\u80fd\u5f97\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002", "\u6ce8\u610f\uff1a\u4e0d\u8981\u6539\u52a8main\u51fd\u6570\uff0c\u4e0d\u5f97\u589e\u884c\u6216\u5220\u884c\uff0c\u4e5f\u4e0d\u5f97\u66f4\u6539\u7a0b\u5e8f\u7684\u7ed3\u6784!", "\u8bd5\u9898\u7a0b\u5e8f\uff1a", "#include <conio.h>", "#include <stdio.h>", "int fun(int m)", "{", "int i,k;", "for ( i = m + 1 ; ; i++)", "{", "for (k = 2 ; k < i ; k++)", "/********found********/", "if (i % k !=0)", "break ;", "/********found********/", "if (k < i)", "return(i);", "}", "}", "\u00a0", "main( )", "{", "int\u00a0 n ;", "clrscr() ;", "printf(\u201c\\nplease enter n: \u201d ) ;", "scanf(\u201c%d\u201d, &n ) ;", "printf(\u201c%d\\n\u201d, fun(n)) ;", "}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u7b14\u8bd5\u9898\uff08\u7b2c\u4e8c\u5341\u516d\u5957\uff09"},
{"contents": ["\u8ba9\u5ba2\u6237\u4f7f\u7528\u6307\u5411\u6ca1\u6709\u516c\u5f00\u5b9a\u4e49(\u4e5f\u8bb8\u8fd8\u9690\u85cf\u5728\u7c7b\u578b\u5b9a\u4e49\u540e\u8fb9) \u7684\u7ed3\u6784\u7c7b\u578b\u7684\u6307\u9488\u662f\u4e00\u4e2a\u597d\u529e\u6cd5\u3002\u53ea\u8981\u4e0d\u8bbf\u95ee\u7ed3\u6784\u6210\u5458, \u58f0\u660e\u548c\u4f7f\u7528\u201c\u533f\u540d\u201d \u7ed3\u6784\u6307\u9488(\u4e0d\u5b8c\u5168\u7ed3\u6784\u7c7b\u578b\u6307\u9488)\u662f\u5408\u6cd5\u7684\u3002\u8fd9\u4e5f\u662f\u4f7f\u7528\u62bd\u8c61\u6570\u636e\u7c7b\u578b\u7684\u539f\u56e0\u3002"], "title": "\u5728C \u8bed\u8a00\u4e2d\u5b9e\u73b0\u62bd\u8c61\u6570\u636e\u7c7b\u578b\u4ec0\u4e48\u65b9\u6cd5\u6700\u597d?"},
{"contents": ["\u6211\u4f3c\u4e4e\u4e0d\u80fd\u6210\u529f\u5b9a\u4e49\u4e00\u4e2a\u94fe\u8868\u3002\u6211\u8bd5\u8fc7typedef struct { char*item; NODEPTR next; } *NODEPTR; \u4f46\u662f\u7f16\u8bd1\u5668\u62a5\u4e86\u9519\u8bef", "\n\u4fe1\u606f\u3002\u96be\u9053\u5728C\u8bed\u8a00\u4e2d\u4e00\u4e2a\u7ed3\u6784\u4e0d\u80fd\u5305\u542b\u6307\u5411\u81ea\u5df1\u7684\u6307\u9488\u5417\uff1f", "\nC \u8bed\u8a00\u4e2d\u7684\u7ed3\u6784\u5f53\u7136\u53ef\u4ee5\u5305\u542b\u6307\u5411\u81ea\u5df1\u7684\u6307\u9488; [K&R2, \u7b2c6.5 \u8282] \u7684\u8ba8\u8bba\u548c\u4f8b\u5b50\u8868\u660e\u4e86\u8fd9\u70b9\u3002NODEPTR \u4f8b\u5b50\u7684\u95ee\u9898\u662f\u5728\u58f0\u660enext \u57df\u7684\u65f6\u5019typedef \u8fd8\u6ca1\u6709\u5b9a\u4e49\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898, \u9996\u5148\u8d4b\u4e88\u8fd9\u4e2a\u7ed3\u6784\u4e00\u4e2a\u6807\u7b7e(\u201cstruct node\u201d)\u3002\u7136\u540e,\u58f0\u660e\u201cnext\u201d \u57df\u4e3a\u201cstruct node *\u201d, \u6216\u8005\u5206\u5f00typedef \u5b9a\u4e49\u548c\u7ed3\u6784\u5b9a\u4e49, \u6216\u8005\u4e24\u8005\u90fd\u91c7\u7eb3\u3002\u4ee5\u4e0b\u662f\u4e00\u4e2a\u4fee\u6539\u540e\u7684\u7248\u672c:", "\nstruct node {", "\nchar *item;", "\nstruct node *next;", "\n};", "\ntypedef struct node *NODEPTR;", "\n\u81f3\u5c11\u8fd8\u6709\u4e09\u79cd\u540c\u6837\u6b63\u786e\u7684\u65b9\u6cd5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u5728\u7528typedef \u5b9a\u4e49\u4e92\u76f8\u5f15\u7528\u7684\u4e24\u4e2a\u7ed3\u6784\u65f6\u4e5f\u4f1a\u4ea7\u751f\u7c7b\u4f3c\u7684\u95ee\u9898, \u53ef\u4ee5\u7528\u540c\u6837\u7684", "\n\u65b9\u6cd5\u89e3\u51b3\u3002"], "title": "C\u8bed\u8a00\u4e2d\u4e00\u4e2a\u7ed3\u6784\u4e0d\u80fd\u5305\u542b\u6307\u5411\u81ea\u5df1\u7684\u6307\u9488\u5417\uff1f"},
{"contents": ["\u9996\u5148, \u5c3d\u7ba1\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u6216\u51fd\u6570\u53ef\u4ee5(\u5728\u591a\u4e2a\u7f16\u8bd1\u5355\u5143\u4e2d) \u6709\u591a\u5904\u201c\u58f0\u660e\u201d, \u4f46\u662f\u201c\u5b9a\u4e49\u201d \u5374\u53ea\u80fd\u5141\u8bb8\u51fa\u73b0\u4e00\u6b21\u3002\u5b9a\u4e49\u662f\u5206\u914d\u7a7a\u95f4\u5e76\u8d4b\u521d\u503c(\u5982\u679c\u6709) \u7684\u58f0\u660e\u3002\u6700\u597d\u7684\u5b89\u6392\u662f\u5728\u67d0\u4e2a\u76f8\u5173\u7684.c \u6587\u4ef6\u4e2d\u5b9a\u4e49, \u7136\u540e\u5728\u5934\u6587\u4ef6(.h) \u4e2d\u8fdb\u884c\u5916\u90e8\u58f0\u660e, \u5728\u9700\u8981\u4f7f\u7528\u7684\u65f6\u5019, \u53ea\u8981\u5305\u542b\u5bf9\u5e94\u7684\u5934\u6587\u4ef6\u5373\u53ef\u3002\u5b9a\u4e49\u53d8\u91cf\u7684.c \u6587\u4ef6\u4e5f\u5e94\u8be5\u5305\u542b\u8be5\u5934\u6587\u4ef6, \u4ee5\u4fbf\u7f16\u8bd1\u5668\u68c0\u67e5\u5b9a\u4e49\u548c\u58f0\u660e\u7684\u4e00\u81f4\u6027\u3002\u8fd9\u6761\u89c4\u5219\u63d0\u4f9b\u4e86\u9ad8\u5ea6\u7684\u53ef\u79fb\u690d\u6027: \u5b83\u548cANSI C \u6807\u51c6\u4e00\u81f4, \u540c\u65f6\u4e5f\u517c\u5bb9\u5927\u591a\u6570ANSI \u524d\u7684\u7f16\u8bd1\u5668\u548c\u8fde\u63a5\u5668\u3002Unix \u7f16\u8bd1\u5668\u548c\u8fde\u63a5\u5668\u901a\u5e38\u4f7f\u7528\u201c\u901a\u7528\u6a21\u5f0f\u201d \u5141\u8bb8\u591a\u91cd\u5b9a\u4e49, \u53ea\u8981\u4fdd\u8bc1\u6700\u591a\u5bf9\u4e00\u5904\u8fdb\u884c\u521d\u59cb\u5316\u5c31\u53ef\u4ee5\u4e86; ANSI C \u6807\u51c6\u79f0\u8fd9\u79cd\u884c\u4e3a\u4e3a\u201c\u516c\u5171\u6269\u5c55\u201d, \u6ca1\u6709\u8bed\u5e26\u53cc\u5173\u7684\u610f\u601d\u3002", "\n\u53ef\u4ee5\u4f7f\u7528\u9884\u5904\u7406\u6280\u5de7\u6765\u4f7f\u7c7b\u4f3cDEFINE(int, i);\u7684\u8bed\u53e5\u5728\u4e00\u4e2a\u5934\u6587\u4ef6\u4e2d\u53ea\u51fa\u73b0\u4e00\u6b21, \u7136\u540e\u6839\u636e\u67d0\u4e2a\u5b8f\u7684\u8bbe\u5b9a\u5728\u9700\u8981\u7684\u65f6\u5019\u8f6c\u5316\u6210\u5b9a\u4e49\u6216\u58f0\u660e\u3002\u4f46\u4e0d\u6e05\u695a\u8fd9\u6837\u7684\u9ebb\u70e6\u662f\u5426\u503c\u5f97\u3002\u5982\u679c\u5e0c\u671b\u8ba9\u7f16\u8bd1\u5668\u68c0\u67e5\u58f0\u660e\u7684\u4e00\u81f4\u6027, \u4e00\u5b9a\u8981\u628a\u5168\u5c40\u58f0\u660e\u653e\u5230\u5934\u6587\u4ef6\u4e2d\u3002\u7279\u522b\u662f, \u6c38\u8fdc\u4e0d\u8981\u628a\u5916\u90e8\u51fd\u6570\u7684\u539f\u578b\u653e\u5230.c \u6587\u4ef6\u4e2d: \u901a\u5e38\u5b83\u4e0e\u5b9a\u4e49\u7684\u4e00\u81f4\u6027\u4e0d\u80fd\u5f97\u5230\u68c0\u67e5, \u800c\u77db\u76fe\u7684\u539f\u578b\u6bd4\u4e0d\u7528\u8fd8\u7cdf\u7cd5\u3002"], "title": "C\u8bed\u8a00\u600e\u6837\u5b9a\u4e49\u548c\u58f0\u660e\u5168\u5c40\u53d8\u91cf\u548c\u51fd\u6570\u6700\u597d\uff1f"},
{"contents": ["break \u5173\u952e\u5b57\u5f88\u91cd\u8981\uff0c\u8868\u793a\u7ec8\u6b62\u672c\u5c42\u5faa\u73af\u3002\u73b0\u5728\u8fd9\u4e2a\u4f8b\u5b50\u53ea\u6709\u4e00\u5c42\u5faa\u73af\uff0c\u5f53\u4ee3\u7801\u6267\u884c\u5230", "\nbreak \u65f6\uff0c\u5faa\u73af\u4fbf\u7ec8\u6b62\u3002", "\n\u5982\u679c\u628abreak \u6362\u6210continue \u4f1a\u662f\u4ec0\u4e48\u6837\u5b50\u5462\uff1fcontinue \u8868\u793a\u7ec8\u6b62\u672c\u6b21\uff08\u672c\u8f6e\uff09\u5faa\u73af\u3002\u5f53", "\n\u4ee3\u7801\u6267\u884c\u5230continue \u65f6\uff0c\u672c\u8f6e\u5faa\u73af\u7ec8\u6b62\uff0c\u8fdb\u5165\u4e0b\u4e00\u8f6e\u5faa\u73af\u3002", "\nwhile\uff081\uff09\u4e5f\u6709\u5199\u6210while(true) \u6216\u8005while(1==1) \u6216\u8005while((bool) 1)\u7b49\u5f62\u5f0f\u7684\uff0c\u6548\u679c\u4e00", "\n\u6837\u3002", "\ndo-while \u5faa\u73af\uff1a\u5148\u6267\u884cdo \u540e\u9762\u7684\u4ee3\u7801\uff0c\u7136\u540e\u518d\u5224\u65adwhile \u540e\u9762\u62ec\u53f7\u91cc\u7684\u503c\uff0c\u5982\u679c\u4e3a\u771f\uff0c", "\n\u5faa\u73af\u5f00\u59cb\uff1b\u5426\u5219\uff0c\u5faa\u73af\u4e0d\u5f00\u59cb\u3002\u5176\u7528\u6cd5\u4e0ewhile \u5faa\u73af\u6ca1\u6709\u533a\u522b\uff0c\u4f46\u76f8\u5bf9\u8f83\u5c11\u7528\u3002", "\nfor \u5faa\u73af\uff1afor \u5faa\u73af\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u63a7\u5236\u5faa\u73af\u6b21\u6570\uff0c\u591a\u7528\u4e8e\u4e8b\u5148\u77e5\u9053\u5faa\u73af\u6b21\u6570\u7684\u60c5\u51b5\u4e0b\u3002"], "title": "C\u8bed\u8a00\u4e2dbreak \u4e0econtinue \u7684\u533a\u522b"},
{"contents": ["\u4e00\u822c\u89c4\u5219\uff1a", "\n\u3010\u89c4\u52191-1\u3011\u547d\u540d\u5e94\u5f53\u76f4\u89c2\u4e14\u53ef\u4ee5\u62fc\u8bfb\uff0c\u53ef\u671b\u6587\u77e5\u610f\uff0c\u4fbf\u4e8e\u8bb0\u5fc6\u548c\u9605\u8bfb\u3002", "\n\u6807\u8bc6\u7b26\u6700\u597d\u91c7\u7528\u82f1\u6587\u5355\u8bcd\u6216\u5176\u7ec4\u5408\uff0c\u4e0d\u5141\u8bb8\u4f7f\u7528\u62fc\u97f3\u3002\u7a0b\u5e8f\u4e2d\u7684\u82f1\u6587\u5355\u8bcd\u4e00\u822c\u4e0d\u8981\u592a\u590d", "\n\u6742\uff0c\u7528\u8bcd\u5e94\u5f53\u51c6\u786e\u3002", "\n\u3010\u89c4\u52191-2\u3011\u547d\u540d\u7684\u957f\u5ea6\u5e94\u5f53\u7b26\u5408\u201cmin-length && max-information\u201d\u539f\u5219\u3002", "\nC \u662f\u4e00\u79cd\u7b80\u6d01\u7684\u8bed\u8a00, \u547d\u540d\u4e5f\u5e94\u8be5\u662f\u7b80\u6d01\u7684\u3002\u4f8b\u5982\u53d8\u91cf\u540dMaxVal \u5c31\u6bd4", "\nMaxValueUntilOverflow \u597d\u7528\u3002\u6807\u8bc6\u7b26\u7684\u957f\u5ea6\u4e00\u822c\u4e0d\u8981\u8fc7\u957f\uff0c\u8f83\u957f\u7684\u5355\u8bcd\u53ef\u901a\u8fc7\u53bb\u6389\u201c\u5143\u97f3\u201d", "\n\u5f62\u6210\u7f29\u5199\u3002", "\n\u53e6\u5916\uff0c\u82f1\u6587\u8bcd\u5c3d\u91cf\u4e0d\u7f29\u5199\uff0c\u7279\u522b\u662f\u975e\u5e38\u7528\u4e13\u4e1a\u540d\u8bcd\uff0c\u5982\u679c\u6709\u7f29\u5199\uff0c\u5728\u540c\u4e00\u7cfb\u7edf\u4e2d\u5bf9\u540c\u4e00", "\n\u5355\u8bcd\u5fc5\u987b\u4f7f\u7528\u76f8\u540c\u7684\u8868\u793a\u6cd5\uff0c\u5e76\u4e14\u6ce8\u660e\u5176\u610f\u601d\u3002", "\n\u3010\u89c4\u52191-3\u3011\u5f53\u6807\u8bc6\u7b26\u7531\u591a\u4e2a\u8bcd\u7ec4\u6210\u65f6\uff0c\u6bcf\u4e2a\u8bcd\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u5927\u5199\uff0c\u5176\u4f59\u5168\u90e8\u5c0f\u5199\u3002\u6bd4\u5982\uff1a", "\nint CurrentVal\uff1b", "\n\u8fd9\u6837\u7684\u540d\u5b57\u770b\u8d77\u6765\u6bd4\u8f83\u6e05\u6670\uff0c\u8fdc\u6bd4\u4e00\u957f\u4e32\u5b57\u7b26\u597d\u5f97\u591a\u3002", "\n\u3010\u89c4\u52191-4\u3011\u5c3d\u91cf\u907f\u514d\u540d\u5b57\u4e2d\u51fa\u73b0\u6570\u5b57\u7f16\u53f7\uff0c\u5982Value1,Value2 \u7b49\uff0c\u9664\u975e\u903b\u8f91\u4e0a\u7684\u786e\u9700\u8981\u7f16", "\n\u53f7\u3002\u6bd4\u5982\u9a71\u52a8\u5f00\u53d1\u65f6\u4e3a\u7ba1\u811a\u547d\u540d\uff0c\u975e\u7f16\u53f7\u540d\u5b57\u53cd\u800c\u4e0d\u597d\u3002", "\n\u521d\u5b66\u8005\u603b\u662f\u559c\u6b22\u7528\u5e26\u7f16\u53f7\u7684\u53d8\u91cf\u540d\u6216\u51fd\u6570\u540d\uff0c\u8fd9\u6837\u5b50\u770b\u4e0a\u53bb\u5f88\u7b80\u5355\u65b9\u4fbf\uff0c\u4f46\u5176\u5b9e\u662f\u4e00\u9897", "\n\u9897\u5b9a\u65f6\u70b8\u5f39\u3002\u8fd9\u4e2a\u4e60\u60ef\u521d\u5b66\u8005\u4e00\u5b9a\u8981\u6539\u8fc7\u6765\u3002", "\n\u3010\u89c4\u52191-5\u3011\u5bf9\u5728\u591a\u4e2a\u6587\u4ef6\u4e4b\u95f4\u5171\u540c\u4f7f\u7528\u7684\u5168\u5c40\u53d8\u91cf\u6216\u51fd\u6570\u8981\u52a0\u8303\u56f4\u9650\u5b9a\u7b26(\u5efa\u8bae\u4f7f\u7528\u6a21\u5757\u540d", "\n(\u7f29\u5199)\u4f5c\u4e3a\u8303\u56f4\u9650\u5b9a\u7b26)\u3002(GUI_ \uff0cetc)", "\n\u6807\u8bc6\u7b26\u7684\u547d\u540d\u89c4\u5219\uff1a", "\n\u3010\u89c4\u52191-6\u3011\u6807\u8bc6\u7b26\u540d\u5206\u4e3a\u4e24\u90e8\u5206\uff1a\u89c4\u8303\u6807\u8bc6\u7b26\u524d\u7f00(\u540e\u7f00) + \u542b\u4e49\u6807\u8bc6\u3002\u975e\u5168\u5c40\u53d8\u91cf\u53ef\u4ee5", "\n\u4e0d\u7528\u4f7f\u7528\u8303\u56f4\u9650\u5b9a\u7b26\u524d\u7f00\u3002"], "title": "C\u8bed\u8a00\u53d8\u91cf\u7684\u547d\u540d\u89c4\u5219\u90fd\u6709\u54ea\u4e9b\uff1f"},
{"contents": ["\u5982\u679c\u9700\u8981\u5927\u6570\u503c(\u5927\u4e8e32, 767 \u6216\u5c0f\u4e8e\u00a132, 767), \u4f7f\u7528long \u578b\u3002\u5426\u5219, \u5982\u679c\u7a7a\u95f4\u5f88\u91cd\u8981(\u5982\u6709\u5927\u6570\u7ec4\u6216\u5f88\u591a\u7ed3\u6784), \u4f7f\u7528short \u578b\u3002\u9664\u6b64\u4e4b\u5916, \u5c31\u4f7f\u7528int \u578b\u3002\u5982\u679c\u4e25\u683c\u5b9a\u4e49\u7684\u6ea2\u51fa\u7279\u5f81\u5f88\u91cd\u8981\u800c\u8d1f\u503c\u65e0\u5173\u7d27\u8981, \u6216\u8005\u4f60\u5e0c\u671b\u5728\u64cd\u4f5c\u4e8c\u8fdb\u5236\u4f4d\u548c\u5b57\u8282\u65f6\u907f\u514d\u7b26\u53f7\u6269\u5c55\u7684\u95ee\u9898, \u8bf7\u4f7f\u7528\u5bf9\u5e94\u7684\u65e0\u7b26\u53f7\u7c7b\u578b\u3002\u4f46\u662f, \u8981\u6ce8\u610f\u5728\u8868\u8fbe\u5f0f\u4e2d\u6df7\u7528\u6709\u7b26\u53f7\u548c\u65e0\u7b26\u53f7\u503c\u7684\u60c5\u51b5\u3002", "\n\u5c3d\u7ba1\u5b57\u7b26\u7c7b\u578b(\u5c24\u5176\u662f\u65e0\u7b26\u53f7\u5b57\u7b26\u578b) \u53ef\u4ee5\u5f53\u6210\u201c\u5c0f\u201d \u6574\u578b\u4f7f\u7528, \u4f46\u7531\u4e8e\u4e0d\u53ef\u9884\u77e5\u7684\u7b26\u53f7\u6269\u5c55\u548c\u4ee3\u7801\u589e\u5927\u6709\u65f6\u8fd9\u6837\u505a\u53ef\u80fd\u5f97\u4e0d\u507f\u5931\u3002\u4f7f\u7528\u65e0\u7b26\u53f7\u5b57\u7b26\u578b\u6709\u6240\u5e2e\u52a9;", "\n\u5728\u9009\u62e9\u6d6e\u70b9\u578b\u548c\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u578b\u65f6\u4e5f\u6709\u7c7b\u4f3c\u7684\u6743\u8861\u3002\u4f46\u5982\u679c\u4e00\u4e2a\u53d8\u91cf\u7684\u6307\u9488\u5fc5\u987b\u4e3a\u7279\u5b9a\u7684\u7c7b\u578b\u65f6, \u4ee5\u4e0a\u89c4\u5219\u4e0d\u518d\u9002\u7528\u3002", "\n\u5982\u679c\u56e0\u4e3a\u67d0\u79cd\u539f\u56e0\u4f60\u9700\u8981\u58f0\u660e\u4e00\u4e2a\u6709\u4e25\u683c\u5927\u5c0f\u7684\u53d8\u91cf, \u786e\u4fdd\u8c61C99 \u7684"], "title": "C\u8bed\u8a00\u5982\u4f55\u51b3\u5b9a\u4f7f\u7528\u90a3\u79cd\u6574\u6570\u7c7b\u578b\uff1f"},
{"contents": ["int search(char *cpSource, int n, char ch)", "\n{", "\nint i;", "\nfor(i=0; i<n && *(cpSource+i) != ch; ++i);", "\nreturn i;", "\n}", "\n\u4e00\u4e2a\u5355\u5411\u94fe\u8868\uff0c\u4e0d\u77e5\u9053\u5934\u8282\u70b9,\u4e00\u4e2a\u6307\u9488\u6307\u5411\u5176\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\uff0c\u95ee\u5982\u4f55\u5220\u9664\u8fd9\u4e2a\u6307\u9488\u6307\u5411\u7684\u8282\u70b9\uff1f", "\n\u5c06\u8fd9\u4e2a\u6307\u9488\u6307\u5411\u7684next\u8282\u70b9\u503ccopy\u5230\u672c\u8282\u70b9\uff0c\u5c06next\u6307\u5411next->next,\u5e76\u968f\u540e\u5220\u9664\u539fnext\u6307\u5411\u7684\u8282\u70b9\u3002", "#include <stdio.h>", "\nvoid foo(int m, int n)", "\n{", "\nprintf(\u201cm=%d, n=%d\\n\u201d, m, n);", "\n}", "\nint main()", "\n{", "\nint b = 3;", "\nfoo(b+=3, ++b);", "\nprintf(\u201cb=%d\\n\u201d, b);", "\nreturn 0;", "\n}", "\n\u8f93\u51fa\uff1am=7,n=4,b=7(VC6.0)", "\n\u8fd9\u79cd\u65b9\u5f0f\u548c\u7f16\u8bd1\u5668\u4e2d\u5f97\u51fd\u6570\u8c03\u7528\u5173\u7cfb\u76f8\u5173\u5373\u5148\u540e\u5165\u6808\u987a\u5e8f\u3002\u4e0d\u8fc7\u4e0d\u540c", "\n\u7f16\u8bd1\u5668\u5f97\u5904\u7406\u4e0d\u540c\u3002\u4e5f\u662f\u56e0\u4e3aC\u6807\u51c6\u4e2d\u5bf9\u8fd9\u79cd\u65b9\u5f0f\u8bf4\u660e\u4e3a\u672a\u5b9a\u4e49\uff0c\u6240\u4ee5", "\n\u5404\u4e2a\u7f16\u8bd1\u5668\u5382\u5546\u90fd\u6709\u81ea\u5df1\u5f97\u7406\u89e3\uff0c\u6240\u4ee5\u6700\u540e\u4ea7\u751f\u5f97\u7ed3\u679c\u5b8c\u5168\u4e0d\u540c\u3002", "\n\u56e0\u4e3a\u8fd9\u6837\uff0c\u6240\u4ee5\u9047\u89c1\u8fd9\u79cd\u51fd\u6570\uff0c\u6211\u4eec\u9996\u5148\u8981\u8003\u8651\u6211\u4eec\u5f97\u7f16\u8bd1\u5668\u4f1a\u5982\u4f55\u5904\u7406", "\n\u8fd9\u6837\u5f97\u51fd\u6570\uff0c\u5176\u6b21\u770b\u51fd\u6570\u5f97\u8c03\u7528\u65b9\u5f0f\uff0c\u4e0d\u540c\u5f97\u8c03\u7528\u65b9\u5f0f\uff0c\u53ef\u80fd\u4ea7\u751f\u4e0d\u540c\u5f97", "\n\u7ed3\u679c\u3002\u6700\u540e\u662f\u770b\u7f16\u8bd1\u5668\u4f18\u5316\u3002"], "title": "\u8bf7\u7f16\u5199\u4e00\u4e2a C \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5728\u7ed9\u5b9a\u7684\u5185\u5b58\u533a\u57df\u641c\u7d22\u7ed9\u5b9a\u7684\u5b57\u7b26\uff0c\u5e76\u8fd4\u56de\u8be5\u5b57\u7b26\u6240\u5728\u4f4d\u7f6e\u7d22\u5f15\u503c\u3002"},
{"contents": ["int checkCPU()", "\n{", "\n\u3000{", "\n\u3000\u3000union w", "\n\u3000\u3000{", "\n\u3000\u3000\u3000int a;", "\n\u3000\u3000\u3000char b;", "\n\u3000\u3000} c;", "\n\u3000\u3000c.a = 1;", "\n\u3000\u3000return (c.b == 1);", "\n\u3000}", "\n}", "\n\u3000\u3000\u5256\u6790\uff1a", "\u3000\u3000\u5d4c\u5165\u5f0f\u7cfb\u7edf\u5f00\u53d1\u8005\u5e94\u8be5\u5bf9Little-endian\u548cBig-endian\u6a21\u5f0f\u975e\u5e38\u4e86\u89e3\u3002\u91c7\u7528Little-endian\u6a21\u5f0f\u7684CPU\u5bf9\u64cd\u4f5c\u6570\u7684\u5b58\u653e\u65b9\u5f0f\u662f\u4ece\u4f4e\u5b57\u8282\u5230\u9ad8\u5b57\u8282\uff0c\u800cBig-endian\u6a21\u5f0f\u5bf9\u64cd\u4f5c\u6570\u7684\u5b58\u653e\u65b9\u5f0f\u662f\u4ece\u9ad8\u5b57\u8282\u5230\u4f4e\u5b57\u8282\u3002\u4f8b\u5982\uff0c16bit\u5bbd\u7684\u65700\u00d71234\u5728Little-endian\u6a21\u5f0fCPU\u5185\u5b58\u4e2d\u7684\u5b58\u653e\u65b9\u5f0f\uff08\u5047\u8bbe\u4ece\u5730\u57400\u00d74000\u5f00\u59cb\u5b58\u653e\uff09\u4e3a\uff1a", "\n\u5185\u5b58\u5730\u5740\u00a0\u5b58\u653e\u5185\u5bb9", "\n0\u00d74000\u00a00\u00d734", "\n0\u00d74001\u00a00\u00d712", "\n\u3000\u3000\u800c\u5728Big-endian\u6a21\u5f0fCPU\u5185\u5b58\u4e2d\u7684\u5b58\u653e\u65b9\u5f0f\u5219\u4e3a\uff1a", "\n\u5185\u5b58\u5730\u5740\u00a0\u5b58\u653e\u5185\u5bb9", "\n0\u00d74000\u00a00\u00d712", "\n0\u00d74001\u00a00\u00d734", "\n\u3000\u300032bit\u5bbd\u7684\u65700\u00d712345678\u5728Little-endian\u6a21\u5f0fCPU\u5185\u5b58\u4e2d\u7684\u5b58\u653e\u65b9\u5f0f\uff08\u5047\u8bbe\u4ece\u5730\u57400\u00d74000\u5f00\u59cb\u5b58\u653e\uff09\u4e3a\uff1a", "\n\u5185\u5b58\u5730\u5740\u00a0\u5b58\u653e\u5185\u5bb9", "\n0\u00d74000\u00a00\u00d778", "\n0\u00d74001\u00a00\u00d756", "\n0\u00d74002\u00a00\u00d734", "\n0\u00d74003\u00a00\u00d712", "\n\u3000\u3000\u800c\u5728Big-endian\u6a21\u5f0fCPU\u5185\u5b58\u4e2d\u7684\u5b58\u653e\u65b9\u5f0f\u5219\u4e3a\uff1a", "\n\u5185\u5b58\u5730\u5740\u00a0\u5b58\u653e\u5185\u5bb9", "\n0\u00d74000\u00a00\u00d712", "\n0\u00d74001\u00a00\u00d734", "\n0\u00d74002\u00a00\u00d756", "\n0\u00d74003\u00a00\u00d778", "\n\u3000\u3000\u8054\u5408\u4f53union\u7684\u5b58\u653e\u987a\u5e8f\u662f\u6240\u6709\u6210\u5458\u90fd\u4ece\u4f4e\u5730\u5740\u5f00\u59cb\u5b58\u653e\uff0c\u9762\u8bd5\u8005\u7684\u89e3\u7b54\u5229\u7528\u8be5\u7279\u6027\uff0c\u8f7b\u677e\u5730\u83b7\u5f97\u4e86CPU\u5bf9\u5185\u5b58\u91c7\u7528Little-endian\u8fd8\u662fBig-endian\u6a21\u5f0f\u8bfb\u5199\u3002\u5982\u679c\u8c01\u80fd\u5f53\u573a\u7ed9\u51fa\u8fd9\u4e2a\u89e3\u7b54\uff0c\u90a3\u7b80\u76f4\u5c31\u662f\u4e00\u4e2a\u5929\u624d\u7684\u7a0b\u5e8f\u5458\u3002"], "title": "\u8bf7\u5199\u4e00\u4e2aC\u51fd\u6570\uff0c\u82e5\u5904\u7406\u5668\u662fBig_endian\u7684\uff0c\u5219\u8fd4\u56de0\uff1b\u82e5\u662fLittle_endian\u7684\uff0c\u5219\u8fd4\u56de1"},
{"contents": ["7\u3001\u8bf7\u627e\u51fa\u4e0b\u9762\u4ee3\u7801\u4e2d\u7684\u6240\u4ee5\u9519\u8bef", "\n\u8bf4\u660e\uff1a\u4ee5\u4e0b\u4ee3\u7801\u662f\u628a\u4e00\u4e2a\u5b57\u7b26\u4e32\u5012\u5e8f\uff0c\u5982\u201cabcd\u201d\u5012\u5e8f\u540e\u53d8\u4e3a\u201cdcba\u201d", "1\u3001\uff03i nclude\u201dstring.h\u201d", "\n2\u3001main()", "\n3\u3001{", "\n4\u3001 char*src=\u201dhello,world\u201d;", "\n5\u3001 char* dest=NULL;", "\n6\u3001 int len=strlen(src);", "\n7\u3001 dest=(char*)malloc(len);", "\n8\u3001 char* d=dest;", "\n9\u3001 char* s=src[len];", "\n10\u3001 while(len\u2013!=0)", "\n11\u3001 d =s\u2013;", "\n12\u3001 printf(\u201c%s\u201d,dest);", "\n13\u3001 return 0;", "\n14\u3001}", "\n\u7b54\uff1a", "\n\u65b9\u6cd51\uff1a", "\nint main(){", "\nchar* src = \u201chello,world\u201d;", "\nint len = strlen(src);", "\nchar* dest = (char*)malloc(len 1);//\u8981\u4e3a\\0\u5206\u914d\u4e00\u4e2a\u7a7a\u95f4", "\nchar* d = dest;", "\nchar* s = &src[len-1];//\u6307\u5411\u6700\u540e\u4e00\u4e2a\u5b57\u7b26", "\nwhile( len\u2013 != 0 )", "\n*d =*s\u2013;", "\n*d = 0;//\u5c3e\u90e8\u8981\u52a0\\0", "\nprintf(\u201c%s\\n\u201d,dest);", "\nfree(dest);// \u4f7f\u7528\u5b8c\uff0c\u5e94\u5f53\u91ca\u653e\u7a7a\u95f4\uff0c\u4ee5\u514d\u9020\u6210\u5185\u5b58\u6c47\u6cc4\u9732", "\nreturn 0;", "\n}", "\n\u65b9\u6cd52\uff1a", "\n\uff03i nclude <stdio.h>", "\n\uff03i nclude <string.h>", "\nmain()", "\n{", "\nchar str[]=\u201dhello,world\u201d;", "\nint len=strlen(str);", "\nchar t;", "\nfor(int i=0; i<len/2; i )", "\n{", "\nt=str[i];", "\nstr[i]=str[len-i-1]; str[len-i-1]=t;", "\n}", "\nprintf(\u201c%s\u201d,str);", "\nreturn 0;", "\n}", "1.-1,2,7,28,,126\u8bf7\u95ee28\u548c126\u4e2d\u95f4\u90a3\u4e2a\u6570\u662f\u4ec0\u4e48\uff1f\u4e3a\u4ec0\u4e48\uff1f", "\n\u7b2c\u4e00\u9898\u7684\u7b54\u6848\u5e94\u8be5\u662f4^3-1=63", "\n\u89c4\u5f8b\u662fn^3-1(\u5f53n\u4e3a\u5076\u65700\uff0c2\uff0c4)", "\nn^3 1(\u5f53n\u4e3a\u5947\u65701\uff0c3\uff0c5)", "\n\u7b54\u6848\uff1a63", "2.\u7528\u4e24\u4e2a\u6808\u5b9e\u73b0\u4e00\u4e2a\u961f\u5217\u7684\u529f\u80fd\uff1f\u8981\u6c42\u7ed9\u51fa\u7b97\u6cd5\u548c\u601d\u8def\uff01", "\n\u8bbe2\u4e2a\u6808\u4e3aA,B, \u4e00\u5f00\u59cb\u5747\u4e3a\u7a7a.", "\u5165\u961f:", "\n\u5c06\u65b0\u5143\u7d20push\u5165\u6808A;", "\u51fa\u961f:", "\n(1)\u5224\u65ad\u6808B\u662f\u5426\u4e3a\u7a7a\uff1b", "\n(2)\u5982\u679c\u4e0d\u4e3a\u7a7a\uff0c\u5219\u5c06\u6808A\u4e2d\u6240\u6709\u5143\u7d20\u4f9d\u6b21pop\u51fa\u5e76push\u5230\u6808B\uff1b", "\n(3)\u5c06\u6808B\u7684\u6808\u9876\u5143\u7d20pop\u51fa\uff1b\u8fd9\u6837\u5b9e\u73b0\u7684\u961f\u5217\u5165\u961f\u548c\u51fa\u961f\u7684\u5e73\u644a\u590d\u6742\u5ea6\u90fd\u8fd8\u662fO(1), \u6bd4\u4e0a\u9762\u7684\u51e0\u79cd\u65b9\u6cd5\u8981\u597d\u3002", "3.\u5728c\u8bed\u8a00\u5e93\u51fd\u6570\u4e2d\u5c06\u4e00\u4e2a\u5b57\u7b26\u8f6c\u6362\u6210\u6574\u578b\u7684\u51fd\u6570\u662fatool()\u5417\uff0c\u8fd9\u4e2a\u51fd\u6570\u7684\u539f\u578b\u662f\u4ec0\u4e48\uff1f", "\n\u51fd\u6570\u540d: atol", "\n\u529f \u80fd: \u628a\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u957f\u6574\u578b\u6570", "\n\u7528 \u6cd5: long atol(const char *nptr);", "\n\u7a0b\u5e8f\u4f8b:", "\n\uff03i nclude <stdlib.h>", "\n\uff03i nclude <stdio.h>", "\nint main(void)", "\n{", "\nlong l;", "\nchar *str = \u201c98765432\u2033;", "l = atol(lstr);", "\nprintf(\u201cstring = %s integer = %ld\\n\u201d, str, l);", "\nreturn(0);", "\n}", "2.\u5bf9\u4e8e\u4e00\u4e2a\u9891\u7e41\u4f7f\u7528\u7684\u77ed\u5c0f\u51fd\u6570,\u5728C\u8bed\u8a00\u4e2d\u5e94\u7528\u4ec0\u4e48\u5b9e\u73b0,\u5728C \u4e2d\u5e94\u7528\u4ec0\u4e48\u5b9e\u73b0?", "\nc\u7528\u5b8f\u5b9a\u4e49\uff0cc \u7528inline", "3.\u76f4\u63a5\u94fe\u63a5\u4e24\u4e2a\u4fe1\u4ee4\u70b9\u7684\u4e00\u7ec4\u94fe\u8def\u79f0\u4f5c\u4ec0\u4e48?", "\nPPP\u70b9\u5230\u70b9\u8fde\u63a5", "4.\u63a5\u5165\u7f51\u7528\u7684\u662f\u4ec0\u4e48\u63a5\u53e3?", "\n5.voip\u90fd\u7528\u4e86\u90a3\u4e9b\u534f\u8bae?", "\n6.\u8f6f\u4ef6\u6d4b\u8bd5\u90fd\u6709\u90a3\u4e9b\u79cd\u7c7b?", "\n\u9ed1\u76d2\uff1a\u9488\u5bf9\u7cfb\u7edf\u529f\u80fd\u7684\u6d4b\u8bd5 \u767d\u5408\uff1a\u6d4b\u8bd5\u51fd\u6570\u529f\u80fd\uff0c\u5404\u51fd\u6570\u63a5\u53e3", "\n7.\u786e\u5b9a\u6a21\u5757\u7684\u529f\u80fd\u548c\u6a21\u5757\u7684\u63a5\u53e3\u662f\u5728\u8f6f\u4ef6\u8bbe\u8ba1\u7684\u90a3\u4e2a\u961f\u6bb5\u5b8c\u6210\u7684?", "\n\u6982\u8981\u8bbe\u8ba1\u9636\u6bb5", "\n8.enum string", "\n{", "\nx1,", "\nx2,", "\nx3=10,", "\nx4,", "\nx5,", "\n}x;", "\n\u95eex= 0\u00d7801005\uff0c0x8010f4 ;", "\n9.unsigned char *p1;", "\nunsigned long *p2;", "\np1=(unsigned char *)0\u00d7801000;", "\np2=(unsigned long *)0\u00d7810000;", "\u8bf7\u95eep1 5= ;", "\np2 5= ;"], "title": "\u534e\u4e3a\u9762\u8bd5\u9898 C \u9762\u8bd5\u9898"},
{"contents": ["\u7b2c\u4e00\u9898:\u5b8c\u6210\u4e0b\u9762\u7684\u5206\u6bb5\u51fd\u6570\u7684\u8ba1\u7b97,\u7a0b\u5e8f\u8fd0\u884c\u65f6\u7528\u6237\u4ece\u952e\u76d8\u8f93\u5165\u4e00\u4e2a\u6570\u503cX,\u5728\u5c4f\u5e55\u4e0a\u8f93\u51faY\u503c.", "\nY= (\u8fd9\u91cc\u6709\u4e2a\u5927\u62ec\u53f7) X\u76842\u6b21\u65b9 X>0", "\n0 X=0", "\n-X\u76842\u6b21\u65b9 X<0", "\n2.\u901a\u8fc7\u952e\u76d8\u8f93\u5165\u4e00\u4e32\u5b57\u7b26,\u7edf\u8ba1\u5e76\u8f93\u51fa\u5176\u4e2d\u82f1\u6587\u5b57\u6bcd\u7684\u4e2a\u6570.", "\n3.\u5df2\u6709\u6309\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u6392\u5217\u768410\u4e2a\u6570,\u73b0\u8f93\u5165\u4e00\u4e2a\u6570,\u8981\u6c42\u63d2\u5165\u5230\u6570\u5217\u4e2d.\u63d2\u5165\u540e\u6570\u5217\u4ecd\u7136\u6309\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u6392\u5217.", "\n\u7b2c\u4e00\u9898", "\nmain( ){", "\nint x,y;", "\nscanf(\u201c%d\u201d,&x);", "\nif(x>0)", "\ny=x*x;", "\nelse if(x==O)", "\ny=0;", "\nelse y=(-x)*(-x);", "\nprintf(\u201c%d\u201d,y);} \u7b2c\u4e8c\u9898", "\n#include \u201cstring.h\u201d", "\nmain( )", "\n{char str[30];", "\nint i,k=0;", "\nscanf(\u201c%s\u201d,str);", "\nfor(i=0; str[i]!=\u2019\\0\u2032;i++)", "\nif(str[i]>=a&&str[i]<=z||str[i]>=A&&str[i]<=Z)", "\nk++;", "\nprinf(\u201c%d\u201d,k);}", "\n\u7b2c\u4e09\u9898\uff1a", "\n#include<stdio.h>", "\nmain()", "\n{ int a[11]={1\uff0c4\uff0c6\uff0c9\uff0c13\uff0c16\uff0c19\uff0c28\uff0c40\uff0c100}\uff1b", "\nint temp1,temp2,number,end,i,j;", "\nprintf(\u201c\u539f\u6570\u5b57\u4e32\u4e3a\uff1a\\n\u201d);", "\nfor(i=0;i<10;i++)", "\nprintf(\u201c%5d\u201d,a[i]);", "\nprintf(\u201c\\n\u201d);", "\nprintf(\u201cinsert data:\u201d);", "\nscanf(\u201c%d\u201d,&number);", "\nend=a[9];", "\nif(number>end)", "\na[10]=number;", "\nelse", "\n{ for(i=o;i<10;i++)", "\n{ if(a[i]>number)", "\n{temp1=a[i]; a[i]=number;", "\nfor(j=i+1;j<11;j++)", "\n{ temp2=a[j];", "\na[j]=temp;", "\ntemp1=temp2; }", "\nbreak; }}}", "\nprintf(\u201c\u63d2\u5165\u540e\u7684\u6570\u5b57\u4e32\u4e3a\uff1a\\n\u201d);", "\nfor(i=0;i<11;i++)", "\nprintf(\u201c%6d\u201d,a[i]); }", "\n\u7b2c\u4e09\u9898", "\nmain()", "\n{int h,i,j,k,l,m,a[11];", "\nclrscr();", "\nprintf(\u201cintput 10 number with the regular(min\u2026.max):\\n\u201d);", "\nfor(h=0;h<=9;h++)", "\n{ scanf(\u201c%d\u201d,&a[h]);}", "\nprintf(\u201cplease input one number:\\n\u201d);", "\nscanf(\u201c%d\u201d,&k);", "\nfor(i=0;i<=9;i++) {", "\nif(k<a[i])", "\n{for(j=i;j<=9;j++)", "\n{a[10-j+i]=a[9-j+i]; }", "\na[i]=k; break; }", "\nelse", "\na[10]=k; }", "\nfor(m=0;m<=10;m++)", "\nprintf(\u201c%5d\u201d,a[m]);", "\ngetch();}", "\n1\u3001C\u8bed\u8a00\u7a0b\u5e8f\u7684\u57fa\u672c\u5355\u4f4d\u662f____ A) \u7a0b\u5e8f\u884c B) \u8bed\u53e5 C) \u51fd\u6570 D) \u5b57\u7b26\u3001C\u30011", "\n2\u3001C\u8bed\u8a00\u7a0b\u5e8f\u7684\u4e09\u79cd\u57fa\u672c\u7ed3\u6784\u662f____ A\u3001\u987a\u5e8f\u7ed3\u6784\uff0c\u9009\u62e9\u7ed3\u6784\uff0c\u5faa\u73af\u7ed3\u6784 B\u3001\u9012\u5f52\u7ed3\u6784\uff0c\u5faa\u73af\u7ed3\u6784\uff0c\u8f6c\u79fb\u7ed3\u6784 C\u3001\u5d4c\u5957\u7ed3\u6784\uff0c\u9012\u5f52\u7ed3\u6784\uff0c\u987a\u5e8f\u7ed3\u6784 D\u3001\u5faa\u73af\u7ed3\u6784\uff0c\u8f6c\u79fb\u7ed3\u6784\uff0c\u987a\u5e8f\u7ed3\u6784\u3001A\u30011", "\n3\u3001C\u8bed\u8a00\u89c4\u5b9a\uff0c\u7a0b\u5e8f\u4e2d\u5404\u51fd\u6570\u4e4b\u95f4 A) \u65e2\u5141\u8bb8\u76f4\u63a5\u9012\u5f52\u8c03\u7528\u4e5f\u5141\u8bb8\u95f4\u63a5\u9012\u5f52\u8c03\u7528 B) \u4e0d\u5141\u8bb8\u76f4\u63a5\u9012\u5f52\u8c03\u7528\u4e5f\u4e0d\u5141\u8bb8\u95f4\u63a5\u9012\u5f52\u8c03\u7528 C) \u5141\u8bb8\u76f4\u63a5\u9012\u5f52\u8c03\u7528\u4e0d\u5141\u8bb8\u95f4\u63a5\u9012\u5f52\u8c03\u7528 D) \u4e0d\u5141\u8bb8\u76f4\u63a5\u9012\u5f52\u8c03\u7528\u5141\u8bb8\u95f4\u63a5\u9012\u5f52\u8c03\u7528\u3001A\u30011", "\n4\u3001C\u8bed\u8a00\u4e2d\u53ef\u5904\u7406\u7684\u6587\u4ef6\u7c7b\u578b\u662f\uff08 \uff09 A) \u6587\u672c\u6587\u4ef6\u548c\u6570\u636e\u6587\u4ef6 B)\u6587\u672c\u6587\u4ef6\u548c\u4e8c\u8fdb\u5236\u6587\u4ef6 C) \u6570\u636e\u6587\u4ef6\u548c\u4e8c\u8fdb\u5236\u6587\u4ef6 D)\u6570\u636e\u4ee3\u7801\u6587\u4ef6\u3001B\u30011", "\n5\u3001C\u8bed\u8a00\u53ef\u6267\u884c\u7a0b\u5e8f\u7684\u5f00\u59cb\u6267\u884c\u70b9\u662f\uff08 \uff09 A) \u7a0b\u5e8f\u4e2d\u7b2c\u4e00\u6761\u53ef\u6267\u884c\u8bed\u53e5 B) \u7a0b\u5e8f\u4e2d\u7b2c\u4e00\u4e2a\u51fd\u6570 C) \u7a0b\u5e8f\u4e2d\u7684main\u51fd\u6570 D) \u5305\u542b\u6587\u4ef6\u4e2d\u7684\u7b2c\u4e00\u4e2a\u51fd\u6570\u3001C\u30011", "\n6\u3001C\u8bed\u8a00\u63d0\u4f9b\u7684\u5408\u6cd5\u7684\u6570\u636e\u7c7b\u578b\u5173\u952e\u5b57\u662f A)double B) short C) integer D) char\u3001B\u30011", "\n7\u3001C\u8bed\u8a00\u4e2d,\u8fd0\u7b97\u5bf9\u8c61\u5fc5\u987b\u662f\u6574\u578b\u6570\u7684\u8fd0\u7b97\u7b26\u662f A) % B) \\ C) %\u548c\\ D) * *\u3001A\u30011", "\n8\u3001C\u8bed\u8a00\u4e2d\u51fd\u6570\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u662f\u7531\uff08 \uff09\u51b3\u5b9a\u3002 A) return\u8bed\u53e5\u4e2d\u7684\u8868\u8fbe\u5f0f\u7c7b\u578b B) \u8c03\u7528\u51fd\u6570\u7684\u4e3b\u8c03\u51fd\u6570\u7c7b\u578b C) \u8c03\u7528\u51fd\u6570\u65f6\u4e34\u65f6 D) \u5b9a\u4e49\u51fd\u6570\u65f6\u6240\u6307\u5b9a\u7684\u51fd\u6570\u7c7b\u578b\u3001D\u30011", "\n9\u3001C\u8bed\u8a00\u4e2d\u6570\u7ec4\u540d\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u51fd\u6570\uff0c\u4f5c\u4e3a\u5b9e\u5728\u53c2\u6570\u7684\u6570\u7ec4\u540d\u88ab\u5904\u7406\u4e3a_____\u3002 A\u3001 \u8be5\u6570\u7ec4\u7684\u957f\u5ea6\u3002 B\u3001 \u8be5\u6570\u7ec4\u7684\u5143\u7d20\u4e2a\u6570\u3002 C\u3001 \u8be5\u6570\u7ec4\u4e2d\u5404\u5143\u7d20\u7684\u503c\u3002 D\u3001 \u8be5\u6570\u7ec4\u7684\u9996\u5730\u5740\u3002\u3001D\u30011", "\n10\u3001C\u8bed\u8a00\u4e2d\u6570\u7ec4\u4e0b\u6807\u7684\u4e0b\u9650\u662f________\u3002 A\u30011 B\u30010 C\u3001\u89c6\u5177\u4f53\u60c5\u51b5 D\u3001\u65e0\u56fa\u5b9a\u4e0b\u9650\u3001B\u30011", "\n11\u3001C\u8bed\u8a00\u4e2d\u63d0\u4f9b\u7684\u5408\u6cd5\u5173\u952e\u5b57\u662f____ A\u3001swith B\u3001cher C\u3001case D\u3001default\u3001D\u30011", "\n12\u3001C\u8bed\u8a00\u4e2d\u6587\u4ef6\u7684\u5b58\u53d6\u65b9\u5f0f\u662f________\u3002 A\u3001\u987a\u5e8f\u5b58\u53d6 B\u3001\u968f\u673a\u5b58\u53d6 C\u3001\u987a\u5e8f\u5b58\u53d6\u3001\u968f\u673a\u5b58\u53d6\u5747\u53ef D\u3001\u987a\u5e8f\u5b58\u53d6\u3001\u968f\u673a\u5b58\u53d6\u5747\u4e0d\u53ef\u3001C\u30011", "\n13\u3001C\u8bed\u8a00\u4e2d\u6700\u7b80\u5355\u7684\u6570\u636e\u7c7b\u578b\u5305\u62ec A) \u6574\u578b\u3001\u5b9e\u578b\u3001\u903b\u8f91\u578b B) \u6574\u578b\u3001\u5b9e\u578b\u3001\u5b57\u7b26\u578b C) \u6574\u578b\u3001\u5b57\u7b26\u578b\u3001\u903b\u8f91\u578b D) \u6574\u578b\u3001\u5b9e\u578b\u3001\u903b\u8f91\u578b\u3001\u5b57\u7b26\u578b\u3001B\u30011", "\n14\u3001sizeof(float)\u662f\uff08 \uff09 A) \u4e00\u79cd\u51fd\u6570\u8c03\u7528 B) \u4e00\u4e2a\u4e0d\u5408\u6cd5\u7684\u8868\u793a\u5f62\u5f0f C) \u4e00\u4e2a\u6574\u578b\u8868\u8fbe\u5f0f D) \u4e00\u4e2a\u6d6e\u70b9\u8868\u8fbe\u5f0f\u3001C\u30011", "\n15\u3001x\u3001y\u3001z\u88ab\u5b9a\u4e49\u4e3aint\u578b\u53d8\u91cf\uff0c\u82e5\u4ece\u952e\u76d8\u7ed9x\u3001y\u3001z\u8f93\u5165\u6570\u636e\uff0c\u6b63\u786e\u7684\u8f93\u5165\u8bed\u53e5\u662f A) input x,y,z; B) scanf(\u201c%d%d%d\u201d,&x,&y,&z); C) scanf(\u201c%d%d%d\u201d,x,y,z); D) read(\u201c%d%d%d\u201d,&x,&y,&z);\u3001B\u30011", "\n16\u3001\u8868\u8fbe\u5f0f:10!=9\u7684\u503c\u662f A) true B) \u975e\u96f6\u503c C) 0 D) 1\u3001D\u30011", "\n17\u3001\u8868\u793a\u5173\u7cfbx<=y<=z\u7684c\u8bed\u8a00\u8868\u8fbe\u5f0f\u4e3a A) (X<=Y)&&(Y<=Z) B) (X<=Y)AND(Y<=Z) C) (X<=Y<=Z) D) (X<=Y)&(Y<=Z)\u3001A\u30011", "\n18\u3001\u7a0b\u5e8f\u7247\u6bb5\uff1a\u5728TC20\u4e2d, int i=65536; printf(\u201c%d\u201d,i);\u7684\u8f93\u51fa\u7ed3\u679c\u662f____ A) 65536 B) 0 C) \u6709\u8bed\u6cd5\u9519\u8bef\uff0c\u65e0\u8f93\u51fa\u7ed3\u679c D) -1\u3001B\u30011", "\n19\u3001\u5f53\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u5b9e\u53c2\u662f\u4e00\u4e2a\u6570\u7ec4\u540d\uff0c\u5219\u5411\u51fd\u6570\u4f20\u9001\u7684\u662f____ A) \u6570\u7ec4\u7684\u957f\u5ea6 B) \u6570\u7ec4\u7684\u9996\u5730\u5740 C) \u6570\u7ec4\u6bcf\u4e00\u4e2a\u5143\u7d20\u7684\u5730\u5740 D) \u6570\u7ec4\u6bcf\u4e2a\u5143\u7d20\u4e2d\u7684\u503c\u3001B\u30011", "\n20\u3001\u5bf9\u5d4c\u5957\u5b50\u7a0b\u5e8f\u8c03\u7528\u8bf4\u6cd5\u6b63\u786e\u7684\u662f____\u3002 A\u3001 \u5916\u5c42\u5b50\u7a0b\u5e8f\u53ef\u4ee5\u8c03\u7528\u6240\u6709\u7684\u5185\u5c42\u5b50\u7a0b\u5e8f B\u3001 \u5185\u5c42\u4e86\u7a0b\u5e8f\u53ea\u53ef\u4ee5\u8c03\u7528\u5305\u542b\u672c\u8eab\u7684\u5916\u5c42\u5b50\u7a0b\u5e8f\uff0c\u4e0d\u53ef\u4ee5\u9694\u5c42\u8c03\u7528 C\u3001 \u5916\u5206\u7a0b\u5e8f\u5fc5\u987b\u80fd\u5b8c\u5168\u5957\u4f4f\u5185\u5206\u7a0b\u5e8f D\u3001 \u4ee5\u4e0a\u8bf4\u6cd5\u5747\u4e0d\u6b63\u786e\u3001C\u30011", "\n21\u3001\u5bf9\u4e8e\u57fa\u7c7b\u578b\u76f8\u540c\u7684\u4e24\u4e2a\u6307\u9488\u53d8\u91cf\u4e4b\u95f4\uff0c\u4e0d\u80fd\u8fdb\u884c\u7684\u8fd0\u7b97\u662f A) < B) = C) + D) -\u3001C\u30011", "\n22\u3001\u5408\u6cd5\u7684C\u8bed\u8a00\u4e2d\uff0c\u5408\u6cd5\u7684\u957f\u6574\u578b\u5e38\u6570\u662f A) \u2018\\t\u2019 B) \u201cA\u201d C) 65 D) A\u3001A\u30011", "\n23\u3001\u5047\u5b9aint\u7c7b\u578b\u53d8\u91cf\u5360\u7528\u4e24\u4e2a\u5b57\u8282\uff0c\u5176\u6709\u5b9a\u4e49\uff1aint x[10]={0,2,4};\uff0c\u5219\u6570\u7ec4x\u5728\u5185\u5b58\u4e2d\u6240\u5360\u5b57\u8282\u6570\u662f A) 3 B) 6 C) 10 D) 20\u3001D\u30011", "\n24\u3001\u5047\u5b9a\u6709\u4ee5\u4e0b\u53d8\u91cf\u5b9a\u4e49: int k=7 ,x=12; \u5219\u80fd\u4f7f\u503c\u4e3a3\u7684\u8868\u8fbe\u5f0f\u662f A x%=(k%=5) B x%=(k-k%5) C x%=k-k%5 D (x%=k)-(k%=5)\u3001D\u30011", "\n25\u3001\u8bf7\u8bfb\u7a0b\u5e8f\u7247\u6bb5(\u5b57\u7b26\u4e32\u5185\u6ca1\u6709\u7a7a\u683c): printf(\u201c%d\u201d,strlen(\u201cATS012\\1\\\\\u201d));\u7684\u8f93\u51fa\u7ed3\u679c\u662f A) 11 B) 10 C) 9 D) 8 \u3001C\u30011", "\n26\u3001\u8bf7\u9009\u51fa\u5408\u6cd5\u7684C\u8bed\u8a00\u8d4b\u503c\u8bed\u53e5 A) a=b=58 B) i++; C) a=58,b=58 D) k=int(a+b);\u3001B\u30011", "\n27\u3001\u82e5a\u4e3aint\u7c7b\u578b\uff0c\u4e14\u5176\u503c\u4e3a3\uff0c\u5219\u6267\u884c\u5b8c\u8868\u8fbe\u5f0fa+=a-=a*a\u540e\uff0ca\u7684\u503c\u662f A) -3 B) 9 C) -12 D) 6\u3001C\u30011", "\n28\u3001\u82e5int\u7c7b\u578b\u5360\u4e24\u4e2a\u5b57\u8282\uff0c\u5219\u4ee5\u4e0b\u8bed\u53e5\u8f93\u51fa\u4e3a________\u3002 int k=-1; printf(\u201c%d,u%\u201d,k,k); A\u3001-1,-1 B\u3001-1,65536 C\u3001-1,32768 D\u3001-1,65535\u3001D\u30011", "\n29\u3001\u82e5\u53d8\u91cfa\u662fint\u7c7b\u578b\uff0c\u5e76\u6267\u884c\u4e86\u8bed\u53e5\uff1aa=\u2018A\u2019+1\u30016\uff1b\uff0c\u5219\u6b63\u786e\u7684\u53d9\u8ff0\u662f A) a\u7684\u503c\u662f\u5b57\u7b26C B) a\u7684\u503c\u662f\u6d6e\u70b9\u578b C) \u4e0d\u5141\u8bb8\u5b57\u7b26\u578b\u548c\u6d6e\u70b9\u578b\u76f8\u52a0 D) a\u7684\u503c\u662f\u5b57\u7b26\u2018A\u2019\u7684ASCII\u503c\u52a0\u4e0a1\u3002\u3001D\u30011", "\n30\u3001\u82e5\u53d8\u91cf\u5df2\u6b63\u786e\u8bf4\u660e\u4e3afloat\u7c7b\u578b\uff0c\u8981\u901a\u8fc7\u8bed\u53e5scanf(\u201c%f %f %f \u201c,&a,&b,&c);\u7ed9a\u8d4b\u4e8e10\u30010\uff0cb\u8d4b\u4e8822\u30010\uff0cc\u8d4b\u4e8833\u30010\uff0c\u4e0d\u6b63\u786e\u7684\u8f93\u5165\u5f62\u5f0f\u662f\uff1a A) 10 B) 10\u30010,22\u30010,33\u30010 22 33 C) 10\u30010 D) 10 22 22\u30010 33\u30010 33\u3001B\u30011", "\n31\u3001\u82e5\u8981\u6c42\u5728if\u540e\u4e00\u5bf9\u5706\u62ec\u53f7\u4e2d\u8868\u793aa\u4e0d\u7b49\u4e8e0\u7684\u5173\u7cfb,\u5219\u80fd\u6b63\u786e\u8868\u793a\u8fd9\u4e00\u5173\u7cfb\u7684\u8868\u8fbe\u5f0f\u4e3a A) a<>0 B) !a C) a=0 D) a\u3001B\u30011", "\n32\u3001\u82e5\u5df2\u5b9a\u4e49x\u548cy\u4e3adouble\u7c7b\u578b\uff0c\u5219\u8868\u8fbe\u5f0f:x=1\uff0cy=x+3/2\u7684\u503c\u662f A)1 B)2 C)2\u30010 D)2\u30015\u3001C\u30011", "\n33\u3001\u82e5\u6709\u5b9a\u4e49\uff1aint a=8\uff0cb=5\uff0cc\uff1b\uff0c\u6267\u884c\u8bed\u53e5c=a/b+0\u30014;\u540e\uff0cc\u7684\u503c\u4e3a A) 1\u30014 B) 1 C) 2\u30010 D) 2\u3001B\u30011", "\n34\u3001\u82e5\u6709\u5b9a\u4e49:int x,y;char a,b,c;\u5e76\u6709\u4ee5\u4e0b\u8f93\u5165\u6570\u636e(\u6b64\u5904< CR> \u4ee3\u8868\u6362\u884c\u7b26\uff0c/u\u4ee3\u8868\u7a7a\u683c): 1u2 AuBuC \u5219\u80fd\u7ed9x\u8d4b\u6574\u65701\uff0c\u7ed9y\u8d4b\u6574\u65702\uff0c\u7ed9a\u8d4b\u5b57\u7b26A\uff0c\u7ed9b\u8d4b\u5b57\u7b26B\uff0c\u7ed9c\u8d4b\u5b57\u7b26C \u7684\u6b63\u786e\u7a0b\u5e8f\u6bb5\u662f A) scanf(\u201cx=%d y+%d\u201d,&x,&y);a=getchar();b=getchar();c=getchar(); B) scanf(\u201c%d %d\u201d,&x,&y);a=getchar();b=getchar();c=getchar(); C) scanf(\u201c%d%d%c%c%c,&x,&y,&a,&b,&c); D) scanf(\u201c%d%d%c%c%c%c%c%c:&x,&y,&a,&a,&b,&b,&c,&c);\u3001D\u30011", "\n35\u3001\u82e5\u6709\u5b9a\u4e49\u548c\u8bed\u53e5: char s[10]:s=\u201dabcd\u201d;printf(\u201c%s\u201d,s); \u5219\u7ed3\u679c\u662f(\u4ee5\u4e0bu\u4ee3\u8868\u7a7a\u683c) A) \u8f93\u51faabcd B) \u8f93\u51faa C) \u8f93\u51faabcduuuuu D) \u7f16\u8bd1\u4e0d\u901a\u8fc7\u3001D\u30011", "\n36\u3001\u82e5\u6709\u4ee5\u4e0b\u7a0b\u5e8f\u6bb5\uff0c int c1=1,c2=2,c3; c3=1\u30010/c2*c1; \u5219\u6267\u884c\u540e\uff0cc3\u4e2d\u7684\u503c\u662f A) 0 B) 0\u30015 C) 1 D) 2\u3001A\u30011", "\n37\u3001\u82e5\u6709\u4ee5\u4e0b\u5b9a\u4e49: char a; int b; float c; double d; \u5219\u8868\u8fbe\u5f0fa*b+d-c\u503c\u7684\u7c7b\u578b\u4e3a A) float B) int C) char D) double\u3001D\u30011", "\n38\u3001\u82e5\u6709\u4ee5\u4e0b\u5b9a\u4e49\u548c\u8bed\u53e5 char c1=\u2019b',c2=\u2019e'; printf(\u201c%d,%c\u201d,c2-c1,c2-\u2019a'+\u201dA\u201d); \u5219\u8f93\u51fa\u7ed3\u679c\u662f: A)2,M B)3,E C)2,E D)\u8f93\u51fa\u9879\u4e0e\u5bf9\u5e94\u7684\u683c\u5f0f\u63a7\u5236\u4e0d\u4e00\u81f4\uff0c\u8f93\u51fa\u7ed3\u679c\u4e0d\u786e\u5b9a\u3001B\u30011", "\n39\u3001\u82e5\u6709\u4ee5\u4e0b\u51fd\u6570\u8c03\u7528\u8bed\u53e5\uff1a fun(a+b,(x,y),fun(n+k,d,(a,b)));\u5728\u6b64\u51fd\u6570\u8c03\u7528\u8bed\u53e5\u4e2d\u5b9e\u53c2\u7684\u4e2a\u6570\u662f A\uff093 B\uff094 C\uff095 D\uff096\u3001A\u30011", "\n40\u3001\u82e5\u6267\u884c\u4e0b\u9762\u7684\u7a0b\u5e8f\u65f6\u4ece\u952e\u76d8\u4e0a\u8f93\u51653\u548c4\uff0c\u5219\u8f93\u51fa\u662f____ A) 14 B) 16 C) 18 D) 20 main( ) { int a,b,s; scanf(\u201c%d %d\u201d,&a,&b); s=a; if(a\u3001B\u30011", "\n41\u3001\u82e5\u6267\u884c\u4e0b\u9762\u7684\u7a0b\u5e8f\u65f6\u4ece\u952e\u76d8\u4e0a\u8f93\u51655\uff0c\u5219\u8f93\u51fa\u662f A) 7 B) 6 C) 5 D) 4 main() { int x; scanf(\u201c%d\u201d,&x); if(x++>5) printf(\u201c%d\u201d,x); else printf(\u201c%d\u201d,x\u2013);}\u3001B\u30011", "\n42\u3001\u82e5\u6267\u884c\u4ee5\u4e0b\u7a0b\u5e8f\u65f6\u4ece\u952e\u76d8\u4e0a\u8f93\u51659\uff0c\u5219\u8f93\u51fa\u7ed3\u679c\u662f A) 11 B) 10 C) 9 D) 8 main( ) { int n; scanf(\u201c%d\u201d,&n); if(n++\u3001B\u30011", "\n43\u3001\u8bbe a\u3001b\u3001c\u3001d\u3001m\u3001n\u5747\u4e3a int\u578b\u53d8\u91cf\uff0c\u4e14 a=5\u3001b=6\u3001c=7\u3001d=8\u3001m=2\u3001n=2\uff0c\u5219\u903b\u8f91\u8868\u8fbe\u5f0f (m=a>b)&&(n=c>d)\u8fd0\u7b97\u540e\uff0cn\u7684\u503c\u4e3a____ A) 0 B) 1 C) 2 D) 3\u3001C\u30011", "\n44\u3001\u8bbe int a=12\uff0c\u5219\u6267\u884c\u5b8c\u8bed\u53e5 a+=a-=a*a\u540e\uff0ca\u7684\u503c\u662f A) 552 B) 264 C) 144 D) -264\u3001D\u30011", "\n45\u3001\u8bbe int b=2;\u8868\u8fbe\u5f0f(b>>2)/(b>>1)\u7684\u503c\u662f A) 0 B) 2 C) 4 D) 8\u3001A\u30011", "\n46\u3001\u8bbea,b\u548cc\u90fd\u662fint\u578b\u53d8\u91cf\uff0c\u4e14a=3,b=4,c=5,\u5219\u4e0b\u5217\u8868\u8fbe\u5f0f\u4e2d\uff0c\u503c\u4e3a0\u7684\u8868\u8fbe\u5f0f\u662f________ A)\u2019a'&&\u2019b\u2019 B)a<=b C)a||b+c&&b-c D)!((a<b)&&!c||1)\u3001D\u30011", "\n47\u3001\u8bbex\u3001y\u3001z\u548ck\u90fd\u662fint\u578b\u53d8\u91cf,\u5219\u6267\u884c\u8868\u8fbe\u5f0f:x=(y=4,z=16,k=32)\u540e,x\u7684\u503c\u4e3a A 4 B 16 C 32 D 52\u3001C\u30011", "\n48\u3001\u8bbex=3,y=-4,z=6\uff0c\u5199\u51fa\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u3002 !(x>y)+(y!=z)||(x+y)&&(y-z) A\u30010 B\u30011 C\u3001-1 D\u30016\u3001B\u30011", "\n49\u3001\u8bbex\u548cy\u5747\u4e3aint \u578b\u53d8\u91cf,\u5219\u4ee5\u4e0b\u8bed\u53e5:x+=y;y=x-y;y=x-y;x-=y;\u7684\u529f\u80fd\u662f A\u3001\u628ax \u548cy\u6309\u4ece\u5927\u5230\u5c0f\u6392\u5217 B\u3001\u628ax\u548cy\u6309\u4ece\u5c0f\u5230\u5927\u6392\u5217 C\u3001\u65e0\u786e\u5b9a\u7ed3\u679c D\u3001\u4ea4\u6362x\u548cy\u4e2d\u7684\u503c\u3001D\u30011", "\n50\u3001\u8bbe\u6709 int x=11; \u5219\u8868\u8fbe\u5f0f (x++ * 1/3) \u7684\u503c\u662f A) 3 B) 4 C) 11 D) 12\u3001A\u30011"], "title": "C\u8bed\u8a0050\u9053\u95ee\u9898"},
{"contents": ["1\uff0e\u00a0\u00a0\u00a0 \u627e\u9519", "\nvoid test1()", "\n{", "\nchar string[10]; //string\u7684\u957f\u5ea6\u5e94\u8be5\u8bbe\u4e3a11\uff0c\u8981\u7ed9\u201d\u7559\u51fa\u4f4d\u7f6e", "\nchar* str1=\u201d0123456789\u2033;", "\nstrcpy( string, str1);", "\n}", "void test1()", "\n{", "\nchar string[10], str1[10];", "\nfor(I=0; I<10\uff1b I++ ) //\u53d8\u91cfI\u6ca1\u5b9a\u4e49,\u589e\u52a0int I;", "\n//I\u4e0d\u80fd\u53d6\u52309\uff0c\u540c\u4e0a\u4e00\u9898\u4e00\u6837\u8981\u7ed9\u201d\u7559\u51fa\u4f4d\u7f6e", "\n//\u5e94\u8be5\u6539\u6210for(I=0; I<9; I++)", "\n{", "\nstr1[i] = \u2018a\u2019; //\u53d8\u91cfi\u6ca1\u5b9a\u4e49\uff0c\u6539\u4e3astr1[I] = \u2018a\u2019;", "\n}", "\n//\u6b64\u5904\u8981\u52a0\u4e0a\u7ed3\u5c3e\u6807\u8bc6 str1[i]=\u201d;", "\nstrcpy(string, str1);", "\n}", "void test3(char* str1)", "\n{", "\nchar string[10];", "\nif( strlen(str1) <= 10 ) //\u540c\u6837\u7684\u95ee\u9898\uff0cstr1\u7684\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc79\uff1b\u6539\u4e3a", "\n// if( strlen(str1) < 10 )", "\n{", "\nstrcpy(string, str1);", "\n}", "\n}", "2\u3002", "\n#define MAX_SRM 256", "DSN get_SRM_no()", "\n{", "\nstatic int SRM_no; //\u9759\u6001\u53d8\u91cf\u6ca1\u6709\u521d\u59cb\u5316", "\nint I;", "for(I=0; I { //\u6b64\u5904\u4e0d\u77e5\u6240\u4e91", "\nSRM_no %= MAX_SRM;", "\nif( MY_SRM.state == IDLE ) //MY_SRM IDLE\u672a\u5b9a\u4e49", "\n{", "\nbreak;", "\n}", "\n}", "\nif( I>=MAX_SRM)", "\nreturn NULL_SRM; //NULL_SRM\u672a\u5b9a\u4e49", "\nelse", "\nreturn SRM_no;", "\n}", "3\u3002", "\n8,10,12,14,16", "4.", "\n\u9898\u76ee\u6709\u9519\u5427? \u662f\u4e0d\u662f\u5e94\u8be5\u6539\u6210\u8fd9\u6837:", "\nint func( int a )", "\n{", "\nint b;", "\nswitch( a )", "\n{", "\ncase 1: b=30;", "\ncase 2: b=20;", "\ncase 3: b=16;", "\ndefault: b=0;", "\n}", "\nreturn b;", "\n}", "\u5982\u679c\u662f\u8fd9\u6837func(1) = 0;", "5.", "\n2", "6.", "\nsizeof(int) *12 = 4*12 = 64 (byte)", "4. static\u6709\u4ec0\u4e48\u7528\u9014\uff1f\uff08\u8bf7\u81f3\u5c11\u8bf4\u660e\u4e24\u79cd\uff09", "\n1.\u9650\u5236\u53d8\u91cf\u7684\u4f5c\u7528\u57df", "\n2.\u8bbe\u7f6e\u53d8\u91cf\u7684\u5b58\u50a8\u57df", "\n7. \u5f15\u7528\u4e0e\u6307\u9488\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n1) \u5f15\u7528\u5fc5\u987b\u88ab\u521d\u59cb\u5316\uff0c\u6307\u9488\u4e0d\u5fc5\u3002", "\n2) \u5f15\u7528\u521d\u59cb\u5316\u4ee5\u540e\u4e0d\u80fd\u88ab\u6539\u53d8\uff0c\u6307\u9488\u53ef\u4ee5\u6539\u53d8\u6240\u6307\u7684\u5bf9\u8c61\u3002", "\n2) \u4e0d\u5b58\u5728\u6307\u5411\u7a7a\u503c\u7684\u5f15\u7528\uff0c\u4f46\u662f\u5b58\u5728\u6307\u5411\u7a7a\u503c\u7684\u6307\u9488\u3002", "8. \u63cf\u8ff0\u5b9e\u65f6\u7cfb\u7edf\u7684\u57fa\u672c\u7279\u6027", "\n\u5728\u7279\u5b9a\u65f6\u95f4\u5185\u5b8c\u6210\u7279\u5b9a\u7684\u4efb\u52a1\uff0c\u5b9e\u65f6\u6027\u4e0e\u53ef\u9760\u6027", "\n9. \u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u5728\u5185\u5b58\u4e2d\u662f\u5426\u6709\u533a\u522b\uff1f\u5982\u679c\u6709\uff0c\u662f\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u5168\u5c40\u53d8\u91cf\u50a8\u5b58\u5728\u9759\u6001\u6570\u636e\u5e93\uff0c\u5c40\u90e8\u53d8\u91cf\u5728\u5806\u6808", "\n10. \u4ec0\u4e48\u662f\u5e73\u8861\u4e8c\u53c9\u6811\uff1f", "\n\u5de6\u53f3\u5b50\u6811\u90fd\u662f\u5e73\u8861\u4e8c\u53c9\u6811 \u4e14\u5de6\u53f3\u5b50\u6811\u7684\u6df1\u5ea6\u5dee\u503c\u7684\u7edd\u5bf9\u503c\u4e0d\u5927\u4e8e1", "\n11. \u5806\u6808\u6ea2\u51fa\u4e00\u822c\u662f\u7531\u4ec0\u4e48\u539f\u56e0\u5bfc\u81f4\u7684\uff1f", "\n\u6ca1\u6709\u56de\u6536\u5783\u573e\u8d44\u6e90", "\n12. \u4ec0\u4e48\u51fd\u6570\u4e0d\u80fd\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff1f", "\nconstructor", "\n13. \u5192\u6ce1\u6392\u5e8f\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u4ec0\u4e48\uff1f", "\nO(n^2)", "\n14. \u5199\u51fafloat x \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684if\u8bed\u53e5\u3002", "\nif(x>0.000001&&x<-0.000001)", "\n16. Internet\u91c7\u7528\u54ea\u79cd\u7f51\u7edc\u534f\u8bae\uff1f\u8be5\u534f\u8bae\u7684\u4e3b\u8981\u5c42\u6b21\u7ed3\u6784\uff1f", "\ntcp/ip \u5e94\u7528\u5c42/\u4f20\u8f93\u5c42/\u7f51\u7edc\u5c42/\u6570\u636e\u94fe\u8def\u5c42/\u7269\u7406\u5c42", "\n17. Internet\u7269\u7406\u5730\u5740\u548cIP\u5730\u5740\u8f6c\u6362\u91c7\u7528\u4ec0\u4e48\u534f\u8bae\uff1f", "\nARP (Address Resolution Protocol)\uff08\u5730\u5740\u89e3\u6790\u5354\u8b70\uff09", "\n18.IP\u5730\u5740\u7684\u7f16\u7801\u5206\u4e3a\u54ea\u4fe9\u90e8\u5206\uff1f", "\nIP\u5730\u5740\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff0c\u7f51\u7edc\u53f7\u548c\u4e3b\u673a\u53f7\u3002\u4e0d\u8fc7\u662f\u8981\u548c\u201c\u5b50\u7f51\u63a9\u7801\u201d\u6309\u4f4d\u4e0e\u4e0a\u4e4b\u540e\u624d\u80fd\u533a\u5206\u54ea\u4e9b\u662f\u7f51\u7edc\u4f4d\u54ea\u4e9b\u662f\u4e3b\u673a\u4f4d\u3002", "2.\u7528\u6237\u8f93\u5165M,N\u503c\uff0c\u4ece1\u81f3N\u5f00\u59cb\u987a\u5e8f\u5faa\u73af\u6570\u6570\uff0c\u6bcf\u6570\u5230M\u8f93\u51fa\u8be5\u6570\u503c\uff0c\u76f4\u81f3\u5168\u90e8\u8f93\u51fa\u3002\u5199\u51faC\u7a0b\u5e8f\u3002", "\n\u5faa\u73af\u94fe\u8868\uff0c\u7528\u53d6\u4f59\u64cd\u4f5c\u505a", "\n3.\u4e0d\u80fd\u505aswitch()\u7684\u53c2\u6570\u7c7b\u578b\u662f\uff1a", "\nswitch\u7684\u53c2\u6570\u4e0d\u80fd\u4e3a\u5b9e\u578b\u3002", "\u83ef\u70ba", "\n1\u3001\u5c40\u90e8\u53d8\u91cf\u80fd\u5426\u548c\u5168\u5c40\u53d8\u91cf\u91cd\u540d\uff1f", "\n\u7b54\uff1a\u80fd\uff0c\u5c40\u90e8\u4f1a\u5c4f\u853d\u5168\u5c40\u3002\u8981\u7528\u5168\u5c40\u53d8\u91cf\uff0c\u9700\u8981\u4f7f\u7528\u201d::\u201d", "\n\u5c40\u90e8\u53d8\u91cf\u53ef\u4ee5\u4e0e\u5168\u5c40\u53d8\u91cf\u540c\u540d\uff0c\u5728\u51fd\u6570\u5185\u5f15\u7528\u8fd9\u4e2a\u53d8\u91cf\u65f6\uff0c\u4f1a\u7528\u5230\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u800c\u4e0d\u4f1a\u7528\u5230\u5168\u5c40\u53d8\u91cf\u3002\u5bf9\u4e8e\u6709\u4e9b\u7f16\u8bd1\u5668\u800c\u8a00\uff0c\u5728\u540c\u4e00\u4e2a\u51fd\u6570\u5185\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u6bd4\u5982\u5728\u4e24\u4e2a\u5faa\u73af\u4f53\u5185\u90fd\u5b9a\u4e49\u4e00\u4e2a\u540c\u540d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u800c\u90a3\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u5c31\u5728\u90a3\u4e2a\u5faa\u73af\u4f53\u5185", "\n2\u3001\u5982\u4f55\u5f15\u7528\u4e00\u4e2a\u5df2\u7ecf\u5b9a\u4e49\u8fc7\u7684\u5168\u5c40\u53d8\u91cf\uff1f", "\n\u7b54\uff1aextern", "\n\u53ef\u4ee5\u7528\u5f15\u7528\u5934\u6587\u4ef6\u7684\u65b9\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u7528extern\u5173\u952e\u5b57\uff0c\u5982\u679c\u7528\u5f15\u7528\u5934\u6587\u4ef6\u65b9\u5f0f\u6765\u5f15\u7528\u67d0\u4e2a\u5728\u5934\u6587\u4ef6\u4e2d\u58f0\u660e\u7684\u5168\u5c40\u53d8\u7406\uff0c\u5047\u5b9a\u4f60\u5c06\u90a3\u4e2a\u53d8\u5199\u9519\u4e86\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4\u4f1a\u62a5\u9519\uff0c\u5982\u679c\u4f60\u7528extern\u65b9\u5f0f\u5f15\u7528\u65f6\uff0c\u5047\u5b9a\u4f60\u72af\u4e86\u540c\u6837\u7684\u9519\u8bef\uff0c\u90a3\u4e48\u5728\u7f16\u8bd1\u671f\u95f4\u4e0d\u4f1a\u62a5\u9519\uff0c\u800c\u5728\u8fde\u63a5\u671f\u95f4\u62a5\u9519", "\n3\u3001\u5168\u5c40\u53d8\u91cf\u53ef\u4e0d\u53ef\u4ee5\u5b9a\u4e49\u5728\u53ef\u88ab\u591a\u4e2a.C\u6587\u4ef6\u5305\u542b\u7684\u5934\u6587\u4ef6\u4e2d\uff1f\u4e3a\u4ec0\u4e48\uff1f", "\n\u7b54\uff1a\u53ef\u4ee5\uff0c\u5728\u4e0d\u540c\u7684C\u6587\u4ef6\u4e2d\u4ee5static\u5f62\u5f0f\u6765\u58f0\u660e\u540c\u540d\u5168\u5c40\u53d8\u91cf\u3002", "\n\u53ef\u4ee5\u5728\u4e0d\u540c\u7684C\u6587\u4ef6\u4e2d\u58f0\u660e\u540c\u540d\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u524d\u63d0\u662f\u5176\u4e2d\u53ea\u80fd\u6709\u4e00\u4e2aC\u6587\u4ef6\u4e2d\u5bf9\u6b64\u53d8\u91cf\u8d4b\u521d\u503c\uff0c\u6b64\u65f6\u8fde\u63a5\u4e0d\u4f1a\u51fa\u9519", "\n4\u3001\u8bed\u53e5for( \uff1b1 \uff1b)\u6709\u4ec0\u4e48\u95ee\u9898\uff1f\u5b83\u662f\u4ec0\u4e48\u610f\u601d\uff1f", "\n\u7b54\uff1a\u548cwhile(1)\u76f8\u540c\u3002", "\n5\u3001do\u2026\u2026while\u548cwhile\u2026\u2026do\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u7b54\uff1a\u524d\u4e00\u4e2a\u5faa\u73af\u4e00\u904d\u518d\u5224\u65ad\uff0c\u540e\u4e00\u4e2a\u5224\u65ad\u4ee5\u540e\u518d\u5faa\u73af", "\n6\u3001\u8bf7\u5199\u51fa\u4e0b\u5217\u4ee3\u7801\u7684\u8f93\u51fa\u5185\u5bb9", "\n#include<stdio.h>", "\nmain()", "\n{", "\nint a,b,c,d;", "\na=10;", "\nb=a++;", "\nc=++a;", "\nd=10*a++;", "\nprintf(\u201cb\uff0cc\uff0cd\uff1a%d\uff0c%d\uff0c%d\u201d\uff0cb\uff0cc\uff0cd\uff09;", "\nreturn 0;", "\n}", "\n\u7b54\uff1a10\uff0c12\uff0c120", "1\u3001static\u5168\u5c40\u53d8\u91cf\u4e0e\u666e\u901a\u7684\u5168\u5c40\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1fstatic\u5c40\u90e8\u53d8\u91cf\u548c\u666e\u901a\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1fstatic\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u5168\u5c40\u53d8\u91cf(\u5916\u90e8\u53d8\u91cf)\u7684\u8bf4\u660e\u4e4b\u524d\u518d\u51a0\u4ee5static \u5c31\u6784\u6210\u4e86\u9759\u6001\u7684\u5168\u5c40\u53d8\u91cf\u3002\u5168\u5c40\u53d8\u91cf\u672c\u8eab\u5c31\u662f\u9759\u6001\u5b58\u50a8\u65b9\u5f0f\uff0c", "\n\u9759\u6001\u5168\u5c40\u53d8\u91cf\u5f53\u7136\u4e5f\u662f\u9759\u6001\u5b58\u50a8\u65b9\u5f0f\u3002\u8fd9\u4e24\u8005\u5728\u5b58\u50a8\u65b9\u5f0f\u4e0a\u5e76\u65e0\u4e0d\u540c\u3002\u8fd9\u4e24\u8005\u7684\u533a\u522b\u867d\u5728\u4e8e\u975e\u9759\u6001\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u662f\u6574\u4e2a\u6e90\u7a0b\u5e8f\uff0c\u5f53\u4e00\u4e2a\u6e90\u7a0b\u5e8f\u7531\u591a\u4e2a\u6e90\u6587\u4ef6\u7ec4\u6210\u65f6\uff0c\u975e\u9759\u6001\u7684\u5168\u5c40\u53d8\u91cf\u5728\u5404\u4e2a\u6e90\u6587\u4ef6\u4e2d\u90fd\u662f\u6709\u6548\u7684\u3002", "\n\u800c\u9759\u6001\u5168\u5c40\u53d8\u91cf\u5219\u9650\u5236\u4e86\u5176\u4f5c\u7528\u57df\uff0c", "\n\u5373\u53ea\u5728\u5b9a\u4e49\u8be5\u53d8\u91cf\u7684\u6e90\u6587\u4ef6\u5185\u6709\u6548\uff0c\u5728\u540c\u4e00\u6e90\u7a0b\u5e8f\u7684\u5176\u5b83\u6e90\u6587\u4ef6\u4e2d\u4e0d\u80fd\u4f7f\u7528\u5b83\u3002\u7531\u4e8e\u9759\u6001\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u5c40\u9650\u4e8e\u4e00\u4e2a\u6e90\u6587\u4ef6\u5185\uff0c\u53ea\u80fd\u4e3a\u8be5\u6e90\u6587\u4ef6\u5185\u7684\u51fd\u6570\u516c\u7528\uff0c\u56e0\u6b64\u53ef\u4ee5\u907f\u514d\u5728\u5176\u5b83\u6e90\u6587\u4ef6\u4e2d\u5f15\u8d77\u9519\u8bef\u3002", "\n\u4ece\u4ee5\u4e0a\u5206\u6790\u53ef\u4ee5\u770b\u51fa\uff0c \u628a\u5c40\u90e8\u53d8\u91cf\u6539\u53d8\u4e3a\u9759\u6001\u53d8\u91cf\u540e\u662f\u6539\u53d8\u4e86\u5b83\u7684\u5b58\u50a8\u65b9\u5f0f\u5373\u6539\u53d8\u4e86\u5b83\u7684\u751f\u5b58\u671f\u3002\u628a\u5168\u5c40\u53d8\u91cf\u6539\u53d8\u4e3a\u9759\u6001\u53d8\u91cf\u540e\u662f\u6539\u53d8\u4e86\u5b83\u7684\u4f5c\u7528\u57df\uff0c \u9650\u5236\u4e86\u5b83\u7684\u4f7f\u7528\u8303\u56f4\u3002", "\nstatic\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u4f5c\u7528\u57df\u4e0d\u540c\u3002\u4ec5\u5728\u672c\u6587\u4ef6\u3002\u53ea\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4e2d\u4f7f\u7528\u7684\u51fd\u6570\u5e94\u8be5\u8bf4\u660e\u4e3a\u5185\u90e8\u51fd\u6570(static)\uff0c\u5185\u90e8\u51fd\u6570\u5e94\u8be5\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4e2d\u8bf4\u660e\u548c\u5b9a\u4e49\u3002\u5bf9\u4e8e\u53ef\u5728\u5f53\u524d\u6e90\u6587\u4ef6\u4ee5\u5916\u4f7f\u7528\u7684\u51fd\u6570\uff0c\u5e94\u8be5\u5728\u4e00\u4e2a\u5934\u6587\u4ef6\u4e2d\u8bf4\u660e\uff0c\u8981\u4f7f\u7528\u8fd9\u4e9b\u51fd\u6570\u7684\u6e90\u6587\u4ef6\u8981\u5305\u542b\u8fd9\u4e2a\u5934\u6587\u4ef6", "static\u5168\u5c40\u53d8\u91cf\u4e0e\u666e\u901a\u7684\u5168\u5c40\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u5168\u5c40\u53d8\u91cf\u53ea\u521d\u4f7f\u5316\u4e00\u6b21\uff0c\u9632\u6b62\u5728\u5176\u4ed6\u6587\u4ef6\u5355\u5143\u4e2d\u88ab\u5f15\u7528;", "\nstatic\u5c40\u90e8\u53d8\u91cf\u548c\u666e\u901a\u5c40\u90e8\u53d8\u91cf\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u5c40\u90e8\u53d8\u91cf\u53ea\u88ab\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u4e0b\u4e00\u6b21\u4f9d\u636e\u4e0a\u4e00\u6b21\u7ed3\u679c\u503c\uff1b", "\nstatic\u51fd\u6570\u4e0e\u666e\u901a\u51fd\u6570\u6709\u4ec0\u4e48\u533a\u522b\uff1astatic\u51fd\u6570\u5728\u5185\u5b58\u4e2d\u53ea\u6709\u4e00\u4efd\uff0c\u666e\u901a\u51fd\u6570\u5728\u6bcf\u4e2a\u88ab\u8c03\u7528\u4e2d\u7ef4\u6301\u4e00\u4efd\u62f7\u8d1d", "\n2\u3001\u7a0b\u5e8f\u7684\u5c40\u90e8\u53d8\u91cf\u5b58\u5728\u4e8e\uff08\u5806\u6808\uff09\u4e2d\uff0c\u5168\u5c40\u53d8\u91cf\u5b58\u5728\u4e8e\uff08\u9759\u6001\u533a \uff09\u4e2d\uff0c\u52a8\u6001\u7533\u8bf7\u6570\u636e\u5b58\u5728\u4e8e\uff08 \u5806\uff09\u4e2d\u3002", "\n3\u3001\u8bbe\u6709\u4ee5\u4e0b\u8bf4\u660e\u548c\u5b9a\u4e49\uff1a", "\ntypedef union {long i; int k[5]; char c;} DATE;", "\nstruct data { int cat; DATE cow; double dog;} too;", "\nDATE max;", "\n\u5219\u8bed\u53e5 printf(\u201c%d\u201d,sizeof(struct date)+sizeof(max));\u7684\u6267\u884c\u7ed3\u679c\u662f\uff1a___52____", "\n\u7b54\uff1aDATE\u662f\u4e00\u4e2aunion, \u53d8\u91cf\u516c\u7528\u7a7a\u95f4. \u91cc\u9762\u6700\u5927\u7684\u53d8\u91cf\u7c7b\u578b\u662fint[5], \u5360\u752820\u4e2a\u5b57\u8282. \u6240\u4ee5\u5b83\u7684\u5927\u5c0f\u662f20", "\ndata\u662f\u4e00\u4e2astruct, \u6bcf\u4e2a\u53d8\u91cf\u5206\u5f00\u5360\u7528\u7a7a\u95f4. \u4f9d\u6b21\u4e3aint4 + DATE20 + double8 = 32.", "\n\u6240\u4ee5\u7ed3\u679c\u662f 20 + 32 = 52.", "\n\u5f53\u7136\u2026\u5728\u67d0\u4e9b16\u4f4d\u7f16\u8f91\u5668\u4e0b, int\u53ef\u80fd\u662f2\u5b57\u8282,\u90a3\u4e48\u7ed3\u679c\u662f int2 + DATE10 + double8 = 20", "\n4\u3001\u961f\u5217\u548c\u6808\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n\u961f\u5217\u5148\u8fdb\u5148\u51fa\uff0c\u6808\u540e\u8fdb\u5148\u51fa", "\n5\u3001\u5199\u51fa\u4e0b\u5217\u4ee3\u7801\u7684\u8f93\u51fa\u5185\u5bb9", "\n#include<stdio.h>", "\nint inc(int a)", "\n{", "\nreturn(++a);", "\n}", "\nint multi(int*a,int*b,int*c)", "\n{", "\nreturn(*c=*a**b);", "\n}", "\ntypedef int(FUNC1)(int in);", "\ntypedef int(FUNC2) (int*,int*,int*);", "void show(FUNC2 fun,int arg1, int*arg2)", "\n{", "\nINCp=&inc;", "\nint temp =p(arg1);", "\nfun(&temp,&arg1, arg2);", "\nprintf(\u201c%d\\n\u201d,*arg2);", "\n}", "main()", "\n{", "\nint a;", "\nshow(multi,10,&a);", "\nreturn 0;", "\n}", "\n\u7b54\uff1a110", "\n7\u3001\u8bf7\u627e\u51fa\u4e0b\u9762\u4ee3\u7801\u4e2d\u7684\u6240\u4ee5\u9519\u8bef", "\n\u8bf4\u660e\uff1a\u4ee5\u4e0b\u4ee3\u7801\u662f\u628a\u4e00\u4e2a\u5b57\u7b26\u4e32\u5012\u5e8f\uff0c\u5982\u201cabcd\u201d\u5012\u5e8f\u540e\u53d8\u4e3a\u201cdcba\u201d", "1\u3001#include\u201dstring.h\u201d", "\n2\u3001main()", "\n3\u3001{", "\n4\u3001 char*src=\u201dhello,world\u201d;", "\n5\u3001 char* dest=NULL;", "\n6\u3001 int len=strlen(src);", "\n7\u3001 dest=(char*)malloc(len);", "\n8\u3001 char* d=dest;", "\n9\u3001 char* s=src[len];", "\n10\u3001 while(len\u2013!=0)", "\n11\u3001 d++=s\u2013;", "\n12\u3001 printf(\u201c%s\u201d,dest);", "\n13\u3001 return 0;", "\n14\u3001}", "\n\u7b54\uff1a", "\n\u65b9\u6cd51\uff1a", "\nint main(){", "\nchar* src = \u201chello,world\u201d;", "\nint len = strlen(src);", "\nchar* dest = (char*)malloc(len+1);//\u8981\u4e3a\\0\u5206\u914d\u4e00\u4e2a\u7a7a\u95f4", "\nchar* d = dest;", "\nchar* s = &src[len-1];//\u6307\u5411\u6700\u540e\u4e00\u4e2a\u5b57\u7b26", "\nwhile( len\u2013 != 0 )", "\n*d++=*s\u2013;", "\n*d = 0;//\u5c3e\u90e8\u8981\u52a0\\0", "\nprintf(\u201c%s\\n\u201d,dest);", "\nfree(dest);// \u4f7f\u7528\u5b8c\uff0c\u5e94\u5f53\u91ca\u653e\u7a7a\u95f4\uff0c\u4ee5\u514d\u9020\u6210\u5185\u5b58\u6c47\u6cc4\u9732", "\nreturn 0;", "\n}", "\n\u65b9\u6cd52\uff1a", "\n#include <stdio.h>", "\n#include <string.h>", "\nmain()", "\n{", "\nchar str[]=\u201dhello,world\u201d;", "\nint len=strlen(str);", "\nchar t;", "\nfor(int i=0; i<len/2; i++)", "\n{", "\nt=str[i];", "\nstr[i]=str[len-i-1]; str[len-i-1]=t;", "\n}", "\nprintf(\u201c%s\u201d,str);", "\nreturn 0;", "\n}", "\n1.-1,2,7,28,,126\u8bf7\u95ee28\u548c126\u4e2d\u95f4\u90a3\u4e2a\u6570\u662f\u4ec0\u4e48\uff1f\u4e3a\u4ec0\u4e48\uff1f", "\n\u7b2c\u4e00\u9898\u7684\u7b54\u6848\u5e94\u8be5\u662f4^3-1=63", "\n\u89c4\u5f8b\u662fn^3-1(\u5f53n\u4e3a\u5076\u65700\uff0c2\uff0c4)", "\nn^3+1(\u5f53n\u4e3a\u5947\u65701\uff0c3\uff0c5)", "\n\u7b54\u6848\uff1a63", "\n2.\u7528\u4e24\u4e2a\u6808\u5b9e\u73b0\u4e00\u4e2a\u961f\u5217\u7684\u529f\u80fd\uff1f\u8981\u6c42\u7ed9\u51fa\u7b97\u6cd5\u548c\u601d\u8def\uff01", "\n\u8bbe2\u4e2a\u6808\u4e3aA,B, \u4e00\u5f00\u59cb\u5747\u4e3a\u7a7a.", "\u5165\u961f:", "\n\u5c06\u65b0\u5143\u7d20push\u5165\u6808A;", "\u51fa\u961f:", "\n(1)\u5224\u65ad\u6808B\u662f\u5426\u4e3a\u7a7a\uff1b", "\n(2)\u5982\u679c\u4e0d\u4e3a\u7a7a\uff0c\u5219\u5c06\u6808A\u4e2d\u6240\u6709\u5143\u7d20\u4f9d\u6b21pop\u51fa\u5e76push\u5230\u6808B\uff1b", "\n(3)\u5c06\u6808B\u7684\u6808\u9876\u5143\u7d20pop\u51fa\uff1b", "\u8fd9\u6837\u5b9e\u73b0\u7684\u961f\u5217\u5165\u961f\u548c\u51fa\u961f\u7684\u5e73\u644a\u590d\u6742\u5ea6\u90fd\u8fd8\u662fO(1),", "\n\u6bd4\u4e0a\u9762\u7684\u51e0\u79cd\u65b9\u6cd5\u8981\u597d\u30023.\u5728c\u8bed\u8a00\u5e93\u51fd\u6570\u4e2d\u5c06\u4e00\u4e2a\u5b57\u7b26\u8f6c\u6362\u6210\u6574\u578b\u7684\u51fd\u6570\u662fatool()\u5417\uff0c\u8fd9\u4e2a\u51fd\u6570\u7684\u539f\u578b\u662f\u4ec0\u4e48\uff1f", "\n\u51fd\u6570\u540d: atol", "\n\u529f \u80fd: \u628a\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u957f\u6574\u578b\u6570", "\n\u7528 \u6cd5: long atol(const char *nptr);", "\n\u7a0b\u5e8f\u4f8b:", "\n#include <stdlib.h>", "\n#include <stdio.h>", "\nint main(void)", "\n{", "\nlong l;", "\nchar *str = \u201c98765432\u2033;", "l = atol(lstr);", "\nprintf(\u201cstring = %s integer = %ld\\n\u201d, str, l);", "\nreturn(0);", "\n}", "\n2.\u5bf9\u4e8e\u4e00\u4e2a\u9891\u7e41\u4f7f\u7528\u7684\u77ed\u5c0f\u51fd\u6570,\u5728C\u8bed\u8a00\u4e2d\u5e94\u7528\u4ec0\u4e48\u5b9e\u73b0,\u5728C++\u4e2d\u5e94\u7528\u4ec0\u4e48\u5b9e\u73b0?", "\nc\u7528\u5b8f\u5b9a\u4e49\uff0cc++\u7528inline", "\n3.\u76f4\u63a5\u94fe\u63a5\u4e24\u4e2a\u4fe1\u4ee4\u70b9\u7684\u4e00\u7ec4\u94fe\u8def\u79f0\u4f5c\u4ec0\u4e48?", "\nPPP\u70b9\u5230\u70b9\u8fde\u63a5", "\n4.\u63a5\u5165\u7f51\u7528\u7684\u662f\u4ec0\u4e48\u63a5\u53e3?", "\n5.voip\u90fd\u7528\u4e86\u90a3\u4e9b\u534f\u8bae?", "\n6.\u8f6f\u4ef6\u6d4b\u8bd5\u90fd\u6709\u90a3\u4e9b\u79cd\u7c7b?", "\n\u9ed1\u76d2\uff1a\u9488\u5bf9\u7cfb\u7edf\u529f\u80fd\u7684\u6d4b\u8bd5 \u767d\u5408\uff1a\u6d4b\u8bd5\u51fd\u6570\u529f\u80fd\uff0c\u5404\u51fd\u6570\u63a5\u53e3", "\n7.\u786e\u5b9a\u6a21\u5757\u7684\u529f\u80fd\u548c\u6a21\u5757\u7684\u63a5\u53e3\u662f\u5728\u8f6f\u4ef6\u8bbe\u8ba1\u7684\u90a3\u4e2a\u961f\u6bb5\u5b8c\u6210\u7684?", "\n\u6982\u8981\u8bbe\u8ba1\u9636\u6bb5", "\n8.enum string", "\n{", "\nx1,", "\nx2,", "\nx3=10,", "\nx4,", "\nx5,", "\n}x;", "\n\u95eex= 0\u00d7801005\uff0c0x8010f4 ;", "\n9.unsigned char *p1;", "\nunsigned long *p2;", "\np1=(unsigned char *)0\u00d7801000;", "\np2=(unsigned long *)0\u00d7810000;", "\n\u8bf7\u95eep1+5= ;", "\np2+5= ;", "\n\u4e09.\u9009\u62e9\u9898:", "\n1.Ethternet\u94fe\u63a5\u5230Internet\u7528\u5230\u4ee5\u4e0b\u90a3\u4e2a\u534f\u8bae?", "\nA.HDLC;B.ARP;C.UDP;D.TCP;E.ID", "\n2.\u5c5e\u4e8e\u7f51\u7edc\u5c42\u534f\u8bae\u7684\u662f:", "\nA.TCP;B.IP;C.ICMP;D.X.25", "\n3.Windows\u6d88\u606f\u8c03\u5ea6\u673a\u5236\u662f:", "\nA.\u6307\u4ee4\u961f\u5217;B.\u6307\u4ee4\u5806\u6808;C.\u6d88\u606f\u961f\u5217;D.\u6d88\u606f\u5806\u6808;", "\n4.unsigned short hash(unsigned short key)", "\n{", "\nreturn (key>>)%256", "\n}", "\n\u8bf7\u95eehash(16),hash(256)\u7684\u503c\u5206\u522b\u662f:", "\nA.1.16;B.8.32;C.4.16;D.1.32", "\n\u56db.\u627e\u9519\u9898:", "\n1.\u8bf7\u95ee\u4e0b\u9762\u7a0b\u5e8f\u6709\u4ec0\u4e48\u9519\u8bef?", "\nint a[60][250][1000],i,j,k;", "\nfor(k=0;k<=1000;k++)", "\nfor(j=0;j<250;j++)", "\nfor(i=0;i<60;i++)", "\na[i][j][k]=0;", "\n\u628a\u5faa\u73af\u8bed\u53e5\u5185\u5916\u6362\u4e00\u4e0b", "\n2.#define Max_CB 500", "\nvoid LmiQueryCSmd(Struct MSgCB * pmsg)", "\n{", "\nunsigned char ucCmdNum;", "\n\u2026\u2026", "for(ucCmdNum=0;ucCmdNum<Max_CB;ucCmdNum++)", "\n{", "\n\u2026\u2026;", "\n}", "\n\u6b7b\u5faa\u73af", "\n3.\u4ee5\u4e0b\u662f\u6c42\u4e00\u4e2a\u6570\u7684\u5e73\u65b9\u7684\u7a0b\u5e8f,\u8bf7\u627e\u51fa\u9519\u8bef:", "\n#define SQUARE(a)((a)*(a))", "\nint a=5;", "\nint b;", "\nb=SQUARE(a++);", "\n4.typedef unsigned char BYTE", "\nint examply_fun(BYTE gt_len; BYTE *gt_code)", "\n{", "\nBYTE *gt_buf;", "\ngt_buf=(BYTE *)MALLOC(Max_GT_Length);", "\n\u2026\u2026", "\nif(gt_len>Max_GT_Length)", "\n{", "\nreturn GT_Length_ERROR;", "\n}", "\n\u2026\u2026.", "\n}", "\n\u4e94.\u95ee\u7b54\u9898:", "\n1.IP Phone\u7684\u539f\u7406\u662f\u4ec0\u4e48?", "\nIPV6", "\n2.TCP/IP\u901a\u4fe1\u5efa\u7acb\u7684\u8fc7\u7a0b\u600e\u6837\uff0c\u7aef\u53e3\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f", "\n\u4e09\u6b21\u63e1\u624b\uff0c\u786e\u5b9a\u662f\u54ea\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u8be5\u534f\u8bae", "\n3.1\u53f7\u4fe1\u4ee4\u548c7\u53f7\u4fe1\u4ee4\u6709\u4ec0\u4e48\u533a\u522b\uff0c\u6211\u56fd\u67d0\u524d\u5e7f\u6cdb\u4f7f\u7528\u7684\u662f\u90a3\u4e00\u79cd\uff1f", "\n4.\u5217\u4e3e5\u79cd\u4ee5\u4e0a\u7684\u7535\u8bdd\u65b0\u4e1a\u52a1\uff1f", "\u5fae\u8f6f\u4e9a\u6d32\u6280\u672f\u4e2d\u5fc3\u7684\u9762\u8bd5\u9898\uff01\uff01\uff01", "\n1\uff0e\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7684\u5dee\u522b\u3002", "\n\u7ebf\u7a0b\u662f\u6307\u8fdb\u7a0b\u5185\u7684\u4e00\u4e2a\u6267\u884c\u5355\u5143,\u4e5f\u662f\u8fdb\u7a0b\u5185\u7684\u53ef\u8c03\u5ea6\u5b9e\u4f53.", "\n\u4e0e\u8fdb\u7a0b\u7684\u533a\u522b:", "\n(1)\u8c03\u5ea6\uff1a\u7ebf\u7a0b\u4f5c\u4e3a\u8c03\u5ea6\u548c\u5206\u914d\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u8fdb\u7a0b\u4f5c\u4e3a\u62e5\u6709\u8d44\u6e90\u7684\u57fa\u672c\u5355\u4f4d", "\n(2)\u5e76\u53d1\u6027\uff1a\u4e0d\u4ec5\u8fdb\u7a0b\u4e4b\u95f4\u53ef\u4ee5\u5e76\u53d1\u6267\u884c\uff0c\u540c\u4e00\u4e2a\u8fdb\u7a0b\u7684\u591a\u4e2a\u7ebf\u7a0b\u4e4b\u95f4\u4e5f\u53ef\u5e76\u53d1\u6267\u884c", "\n(3)\u62e5\u6709\u8d44\u6e90\uff1a\u8fdb\u7a0b\u662f\u62e5\u6709\u8d44\u6e90\u7684\u4e00\u4e2a\u72ec\u7acb\u5355\u4f4d\uff0c\u7ebf\u7a0b\u4e0d\u62e5\u6709\u7cfb\u7edf\u8d44\u6e90\uff0c\u4f46\u53ef\u4ee5\u8bbf\u95ee\u96b6\u5c5e\u4e8e\u8fdb\u7a0b\u7684\u8d44\u6e90.", "\n(4)\u7cfb\u7edf\u5f00\u9500\uff1a\u5728\u521b\u5efa\u6216\u64a4\u6d88\u8fdb\u7a0b\u65f6\uff0c\u7531\u4e8e\u7cfb\u7edf\u90fd\u8981\u4e3a\u4e4b\u5206\u914d\u548c\u56de\u6536\u8d44\u6e90\uff0c\u5bfc\u81f4\u7cfb\u7edf\u7684\u5f00\u9500\u660e\u663e\u5927\u4e8e\u521b\u5efa\u6216\u64a4\u6d88\u7ebf\u7a0b\u65f6\u7684\u5f00\u9500\u3002", "\n2.\u6d4b\u8bd5\u65b9\u6cd5", "\n\u4eba\u5de5\u6d4b\u8bd5\uff1a\u4e2a\u4eba\u590d\u67e5\u3001\u62bd\u67e5\u548c\u4f1a\u5ba1", "\n\u673a\u5668\u6d4b\u8bd5\uff1a\u9ed1\u76d2\u6d4b\u8bd5\u548c\u767d\u76d2\u6d4b\u8bd5", "2\uff0eHeap\u4e0estack\u7684\u5dee\u522b\u3002", "\nHeap\u662f\u5806\uff0cstack\u662f\u6808\u3002", "\nStack\u7684\u7a7a\u95f4\u7531\u64cd\u4f5c\u7cfb\u7edf\u81ea\u52a8\u5206\u914d/\u91ca\u653e\uff0cHeap\u4e0a\u7684\u7a7a\u95f4\u624b\u52a8\u5206\u914d/\u91ca\u653e\u3002", "\nStack\u7a7a\u95f4\u6709\u9650\uff0cHeap\u662f\u5f88\u5927\u7684\u81ea\u7531\u5b58\u50a8\u533a", "\nC\u4e2d\u7684malloc\u51fd\u6570\u5206\u914d\u7684\u5185\u5b58\u7a7a\u95f4\u5373\u5728\u5806\u4e0a,C++\u4e2d\u5bf9\u5e94\u7684\u662fnew\u64cd\u4f5c\u7b26\u3002", "\n\u7a0b\u5e8f\u5728\u7f16\u8bd1\u671f\u5bf9\u53d8\u91cf\u548c\u51fd\u6570\u5206\u914d\u5185\u5b58\u90fd\u5728\u6808\u4e0a\u8fdb\u884c,\u4e14\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u51fd\u6570\u8c03\u7528\u65f6\u53c2\u6570\u7684\u4f20\u9012\u4e5f\u5728\u6808\u4e0a\u8fdb\u884c", "\n3\uff0eWindows\u4e0b\u7684\u5185\u5b58\u662f\u5982\u4f55\u7ba1\u7406\u7684\uff1f", "\n4\uff0e\u4ecb\u7ecd.Net\u548c.Net\u7684\u5b89\u5168\u6027\u3002", "\n5\uff0e\u5ba2\u6237\u7aef\u5982\u4f55\u8bbf\u95ee.Net\u7ec4\u4ef6\u5b9e\u73b0Web Service\uff1f", "\n6\uff0eC/C++\u7f16\u8bd1\u5668\u4e2d\u865a\u8868\u662f\u5982\u4f55\u5b8c\u6210\u7684\uff1f", "\n7\uff0e\u8c08\u8c08COM\u7684\u7ebf\u7a0b\u6a21\u578b\u3002\u7136\u540e\u8ba8\u8bba\u8fdb\u7a0b\u5185/\u5916\u7ec4\u4ef6\u7684\u5dee\u522b\u3002", "\n8\uff0e\u8c08\u8c08IA32\u4e0b\u7684\u5206\u9875\u673a\u5236", "\n\u5c0f\u9875(4K)\u4e24\u7ea7\u5206\u9875\u6a21\u5f0f\uff0c\u5927\u9875(4M)\u4e00\u7ea7", "\n9\uff0e\u7ed9\u4e24\u4e2a\u53d8\u91cf\uff0c\u5982\u4f55\u627e\u51fa\u4e00\u4e2a\u5e26\u73af\u5355\u94fe\u8868\u4e2d\u662f\u4ec0\u4e48\u5730\u65b9\u51fa\u73b0\u73af\u7684\uff1f", "\n\u4e00\u4e2a\u9012\u589e\u4e00\uff0c\u4e00\u4e2a\u9012\u589e\u4e8c\uff0c\u4ed6\u4eec\u6307\u5411\u540c\u4e00\u4e2a\u63a5\u70b9\u65f6\u5c31\u662f\u73af\u51fa\u73b0\u7684\u5730\u65b9", "\n10\uff0e\u5728IA32\u4e2d\u4e00\u5171\u6709\u591a\u5c11\u79cd\u529e\u6cd5\u4ece\u7528\u6237\u6001\u8df3\u5230\u5185\u6838\u6001\uff1f", "\n\u901a\u8fc7\u8c03\u7528\u95e8\uff0c\u4ecering3\u5230ring0\uff0c\u4e2d\u65ad\u4ecering3\u5230ring0\uff0c\u8fdb\u5165vm86\u7b49\u7b49", "\n11\uff0e\u5982\u679c\u53ea\u60f3\u8ba9\u7a0b\u5e8f\u6709\u4e00\u4e2a\u5b9e\u4f8b\u8fd0\u884c\uff0c\u4e0d\u80fd\u8fd0\u884c\u4e24\u4e2a\u3002\u50cfwinamp\u4e00\u6837\uff0c\u53ea\u80fd\u5f00\u4e00\u4e2a\u7a97\u53e3\uff0c\u600e\u6837\u5b9e\u73b0\uff1f", "\n\u7528\u5185\u5b58\u6620\u5c04\u6216\u5168\u5c40\u539f\u5b50\uff08\u4e92\u65a5\u53d8\u91cf\uff09\u3001\u67e5\u627e\u7a97\u53e3\u53e5\u67c4..", "\nFindWindow\uff0c\u4e92\u65a5\uff0c\u5199\u6807\u5fd7\u5230\u6587\u4ef6\u6216\u6ce8\u518c\u8868,\u5171\u4eab\u5185\u5b58\u3002.", "\n12\uff0e\u5982\u4f55\u622a\u53d6\u952e\u76d8\u7684\u54cd\u5e94\uff0c\u8ba9\u6240\u6709\u7684\u2018a\u2019\u53d8\u6210\u2018b\u2019\uff1f", "\n\u952e\u76d8\u94a9\u5b50SetWindowsHookEx", "\n13\uff0eApartment\u5728COM\u4e2d\u6709\u4ec0\u4e48\u7528\uff1f\u4e3a\u4ec0\u4e48\u8981\u5f15\u5165\uff1f", "\n14\uff0e\u5b58\u50a8\u8fc7\u7a0b\u662f\u4ec0\u4e48\uff1f\u6709\u4ec0\u4e48\u7528\uff1f\u6709\u4ec0\u4e48\u4f18\u70b9\uff1f", "\n\u6211\u7684\u7406\u89e3\u5c31\u662f\u4e00\u5806sql\u7684\u96c6\u5408\uff0c\u53ef\u4ee5\u5efa\u7acb\u975e\u5e38\u590d\u6742\u7684\u67e5\u8be2\uff0c\u7f16\u8bd1\u8fd0\u884c\uff0c\u6240\u4ee5\u8fd0\u884c\u4e00\u6b21\u540e\uff0c\u4ee5\u540e\u518d\u8fd0\u884c\u901f\u5ea6\u6bd4\u5355\u72ec\u6267\u884cSQL\u5feb\u5f88\u591a", "\n15\uff0eTemplate\u6709\u4ec0\u4e48\u7279\u70b9\uff1f\u4ec0\u4e48\u65f6\u5019\u7528\uff1f", "\n16\uff0e\u8c08\u8c08Windows DNA\u7ed3\u6784\u7684\u7279\u70b9\u548c\u4f18\u70b9\u3002", "\u7f51\u7edc\u7f16\u7a0b\u4e2d\u8bbe\u8ba1\u5e76\u53d1\u670d\u52a1\u5668\uff0c\u4f7f\u7528\u591a\u8fdb\u7a0b \u4e0e \u591a\u7ebf\u7a0b \uff0c\u8bf7\u95ee\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\n1\uff0c\u8fdb\u7a0b\uff1a\u5b50\u8fdb\u7a0b\u662f\u7236\u8fdb\u7a0b\u7684\u590d\u5236\u54c1\u3002\u5b50\u8fdb\u7a0b\u83b7\u5f97\u7236\u8fdb\u7a0b\u6570\u636e\u7a7a\u95f4\u3001\u5806\u548c\u6808\u7684\u590d\u5236\u54c1\u3002", "\n2\uff0c\u7ebf\u7a0b\uff1a\u76f8\u5bf9\u4e0e\u8fdb\u7a0b\u800c\u8a00\uff0c\u7ebf\u7a0b\u662f\u4e00\u4e2a\u66f4\u52a0\u63a5\u8fd1\u4e0e\u6267\u884c\u4f53\u7684\u6982\u5ff5\uff0c\u5b83\u53ef\u4ee5\u4e0e\u540c\u8fdb\u7a0b\u7684\u5176\u4ed6\u7ebf\u7a0b\u5171\u4eab\u6570\u636e\uff0c\u4f46\u62e5\u6709\u81ea\u5df1\u7684\u6808\u7a7a\u95f4\uff0c\u62e5\u6709\u72ec\u7acb\u7684\u6267\u884c\u5e8f\u5217\u3002", "\n\u4e24\u8005\u90fd\u53ef\u4ee5\u63d0\u9ad8\u7a0b\u5e8f\u7684\u5e76\u53d1\u5ea6\uff0c\u63d0\u9ad8\u7a0b\u5e8f\u8fd0\u884c\u6548\u7387\u548c\u54cd\u5e94\u65f6\u95f4\u3002", "\n\u7ebf\u7a0b\u548c\u8fdb\u7a0b\u5728\u4f7f\u7528\u4e0a\u5404\u6709\u4f18\u7f3a\u70b9\uff1a\u7ebf\u7a0b\u6267\u884c\u5f00\u9500\u5c0f\uff0c\u4f46\u4e0d\u5229\u4e8e\u8d44\u6e90\u7ba1\u7406\u548c\u4fdd\u62a4\uff1b\u800c\u8fdb\u7a0b\u6b63\u76f8\u53cd\u3002\u540c\u65f6\uff0c\u7ebf\u7a0b\u9002\u5408\u4e8e\u5728SMP\u673a\u5668\u4e0a\u8fd0\u884c\uff0c\u800c\u8fdb\u7a0b\u5219\u53ef\u4ee5\u8de8\u673a\u5668\u8fc1\u79fb\u3002", "\u601d\u79d1", "\n1. \u7528\u5b8f\u5b9a\u4e49\u5199\u51faswap\uff08x\uff0cy\uff09", "\n#define swap(x, y)\\", "\nx = x + y;\\", "\ny = x \u2013 y;\\", "\nx = x \u2013 y;", "\n2.\u6570\u7ec4a[N]\uff0c\u5b58\u653e\u4e861\u81f3N-1\u4e2a\u6570\uff0c\u5176\u4e2d\u67d0\u4e2a\u6570\u91cd\u590d\u4e00\u6b21\u3002\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u627e\u51fa\u88ab\u91cd\u590d\u7684\u6570\u5b57.\u65f6\u95f4\u590d\u6742\u5ea6\u5fc5\u987b\u4e3ao\uff08N\uff09\u51fd\u6570\u539f\u578b\uff1a", "\nint do_dup(int a[],int N)", "\n3 \u4e00\u8bed\u53e5\u5b9e\u73b0x\u662f\u5426\u4e3a2\u7684\u82e5\u5e72\u6b21\u5e42\u7684\u5224\u65ad", "\nint i = 512;", "\ncout << boolalpha << ((i & (i \u2013 1)) ? false : true) << endl;", "\n4.unsigned int intvert(unsigned int x,int p,int", "\nn)\u5b9e\u73b0\u5bf9x\u7684\u8fdb\u884c\u8f6c\u6362,p\u4e3a\u8d77\u59cb\u8f6c\u5316\u4f4d,n\u4e3a\u9700\u8981\u8f6c\u6362\u7684\u957f\u5ea6,\u5047\u8bbe\u8d77\u59cb\u70b9\u5728\u53f3\u8fb9.\u5982x=0b0001 0001,p=4,n=3\u8f6c\u6362\u540ex=0b0110 0001", "\nunsigned int intvert(unsigned int x,int p,int n){", "\nunsigned int _t = 0;", "\nunsigned int _a = 1;", "\nfor(int i = 0; i < n; ++i){", "\n_t |= _a;", "\n_a = _a << 1;", "\n}", "\n_t = _t << p;", "\nx ^= _t;", "\nreturn x;", "\n}", "\u6167\u901a\uff1a", "\n\u4ec0\u4e48\u662f\u9884\u7f16\u8bd1", "\n\u4f55\u65f6\u9700\u8981\u9884\u7f16\u8bd1\uff1a", "\n\uff11\u3001\u603b\u662f\u4f7f\u7528\u4e0d\u7ecf\u5e38\u6539\u52a8\u7684\u5927\u578b\u4ee3\u7801\u4f53\u3002", "\n\uff12\u3001\u7a0b\u5e8f\u7531\u591a\u4e2a\u6a21\u5757\u7ec4\u6210\uff0c\u6240\u6709\u6a21\u5757\u90fd\u4f7f\u7528\u4e00\u7ec4\u6807\u51c6\u7684\u5305\u542b\u6587\u4ef6\u548c\u76f8\u540c\u7684\u7f16\u8bd1\u9009\u9879\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u5c06\u6240\u6709\u5305\u542b\u6587\u4ef6\u9884\u7f16\u8bd1\u4e3a\u4e00\u4e2a\u9884\u7f16\u8bd1\u5934\u3002", "\nchar * const p;", "\nchar const * p", "\nconst char *p", "\u4e0a\u8ff0\u4e09\u4e2a\u6709\u4ec0\u4e48\u533a\u522b\uff1f", "\nchar * const p; //\u5e38\u91cf\u6307\u9488\uff0cp\u7684\u503c\u4e0d\u53ef\u4ee5\u4fee\u6539", "\nchar const * p\uff1b//\u6307\u5411\u5e38\u91cf\u7684\u6307\u9488\uff0c\u6307\u5411\u7684\u5e38\u91cf\u503c\u4e0d\u53ef\u4ee5\u6539", "\nconst char *p\uff1b //\u548cchar const *p", "char str1[] = \u201cabc\u201d;", "\nchar str2[] = \u201cabc\u201d;", "const char str3[] = \u201cabc\u201d;", "\nconst char str4[] = \u201cabc\u201d;", "const char *str5 = \u201cabc\u201d;", "\nconst char *str6 = \u201cabc\u201d;", "char *str7 = \u201cabc\u201d;", "\nchar *str8 = \u201cabc\u201d;", "cout << ( str1 == str2 ) << endl;", "\ncout << ( str3 == str4 ) << endl;", "\ncout << ( str5 == str6 ) << endl;", "\ncout << ( str7 == str8 ) << endl;", "\u7ed3\u679c\u662f\uff1a0 0 1 1", "\n\u89e3\u7b54\uff1astr1,str2,str3,str4\u662f\u6570\u7ec4\u53d8\u91cf\uff0c\u5b83\u4eec\u6709\u5404\u81ea\u7684\u5185\u5b58\u7a7a\u95f4\uff1b", "\n\u800cstr5,str6,str7,str8\u662f\u6307\u9488\uff0c\u5b83\u4eec\u6307\u5411\u76f8\u540c\u7684\u5e38\u91cf\u533a\u57df\u3002", "12. \u4ee5\u4e0b\u4ee3\u7801\u4e2d\u7684\u4e24\u4e2asizeof\u7528\u6cd5\u6709\u95ee\u9898\u5417\uff1f[C\u6613]", "\nvoid UpperCase( char str[] ) // \u5c06 str \u4e2d\u7684\u5c0f\u5199\u5b57\u6bcd\u8f6c\u6362\u6210\u5927\u5199\u5b57\u6bcd", "\n{", "\nfor( size_t i=0; i<sizeof(str)/sizeof(str[0]); ++i )", "\nif( \u2018a\u2019<=str[i] && str[i]<=\u2019z\u2019 )", "\nstr[i] -= (\u2018a\u2019-'A\u2019 );", "\n}", "\nchar str[] = \u201caBcDe\u201d;", "\ncout << \u201cstr\u5b57\u7b26\u957f\u5ea6\u4e3a: \u201d << sizeof(str)/sizeof(str[0]) << endl;", "\nUpperCase( str );", "\ncout << str << endl;", "\u7b54\uff1a\u51fd\u6570\u5185\u7684sizeof\u6709\u95ee\u9898\u3002\u6839\u636e\u8bed\u6cd5\uff0csizeof\u5982\u7528\u4e8e\u6570\u7ec4\uff0c\u53ea\u80fd\u6d4b\u51fa\u9759\u6001\u6570\u7ec4\u7684\u5927\u5c0f\uff0c\u65e0\u6cd5\u68c0\u6d4b\u52a8\u6001\u5206\u914d\u7684\u6216\u5916\u90e8\u6570\u7ec4\u5927\u5c0f\u3002\u51fd\u6570\u5916\u7684str\u662f\u4e00\u4e2a\u9759\u6001\u5b9a\u4e49\u7684\u6570\u7ec4\uff0c\u56e0\u6b64\u5176\u5927\u5c0f\u4e3a6\uff0c\u51fd\u6570\u5185\u7684str\u5b9e\u9645\u53ea\u662f\u4e00\u4e2a\u6307\u5411\u5b57\u7b26\u4e32\u7684\u6307\u9488\uff0c\u6ca1\u6709\u4efb\u4f55\u989d\u5916\u7684\u4e0e\u6570\u7ec4\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u56e0\u6b64sizeof\u4f5c\u7528\u4e8e\u4e0a\u53ea\u5c06\u5176\u5f53\u6307\u9488\u770b\uff0c\u4e00\u4e2a\u6307\u9488\u4e3a4\u4e2a\u5b57\u8282\uff0c\u56e0\u6b64\u8fd4\u56de4\u3002", "\u4e00\u4e2a32\u4f4d\u7684\u673a\u5668,\u8be5\u673a\u5668\u7684\u6307\u9488\u662f\u591a\u5c11\u4f4d", "\n\u6307\u9488\u662f\u591a\u5c11\u4f4d\u53ea\u8981\u770b\u5730\u5740\u603b\u7ebf\u7684\u4f4d\u6570\u5c31\u884c\u4e86\u300280386\u4ee5\u540e\u7684\u673a\u5b50\u90fd\u662f32\u7684\u6570\u636e\u603b\u7ebf\u3002\u6240\u4ee5\u6307\u9488\u7684\u4f4d\u6570\u5c31\u662f4\u4e2a\u5b57\u8282\u4e86\u3002", "main()", "\n{", "\nint a[5]={1,2,3,4,5};", "\nint *ptr=(int *)(&a+1);", "printf(\u201c%d,%d\u201d,*(a+1),*(ptr-1));", "\n}", "\n\u8f93\u51fa\uff1a2,5", "\n*(a+1\uff09\u5c31\u662fa[1]\uff0c*(ptr-1)\u5c31\u662fa[4],\u6267\u884c\u7ed3\u679c\u662f2\uff0c5", "\n&a+1\u4e0d\u662f\u9996\u5730\u5740+1\uff0c\u7cfb\u7edf\u4f1a\u8ba4\u4e3a\u52a0\u4e00\u4e2aa\u6570\u7ec4\u7684\u504f\u79fb\uff0c\u662f\u504f\u79fb\u4e86\u4e00\u4e2a\u6570\u7ec4\u7684\u5927\u5c0f\uff08\u672c\u4f8b\u662f5\u4e2aint\uff09", "\nint *ptr=(int *)(&a+1);", "\n\u5219ptr\u5b9e\u9645\u662f&(a[5]),\u4e5f\u5c31\u662fa+5", "\n\u539f\u56e0\u5982\u4e0b\uff1a", "\n&a\u662f\u6570\u7ec4\u6307\u9488\uff0c\u5176\u7c7b\u578b\u4e3a int (*)[5];", "\n\u800c\u6307\u9488\u52a01\u8981\u6839\u636e\u6307\u9488\u7c7b\u578b\u52a0\u4e0a\u4e00\u5b9a\u7684\u503c\uff0c", "\n\u4e0d\u540c\u7c7b\u578b\u7684\u6307\u9488+1\u4e4b\u540e\u589e\u52a0\u7684\u5927\u5c0f\u4e0d\u540c", "\na\u662f\u957f\u5ea6\u4e3a5\u7684int\u6570\u7ec4\u6307\u9488\uff0c\u6240\u4ee5\u8981\u52a0 5*sizeof(int)", "\n\u6240\u4ee5ptr\u5b9e\u9645\u662fa[5]", "\n\u4f46\u662fprt\u4e0e(&a+1)\u7c7b\u578b\u662f\u4e0d\u4e00\u6837\u7684(\u8fd9\u70b9\u5f88\u91cd\u8981)", "\n\u6240\u4ee5prt-1\u53ea\u4f1a\u51cf\u53bbsizeof(int*)", "\na,&a\u7684\u5730\u5740\u662f\u4e00\u6837\u7684\uff0c\u4f46\u610f\u601d\u4e0d\u4e00\u6837\uff0ca\u662f\u6570\u7ec4\u9996\u5730\u5740\uff0c\u4e5f\u5c31\u662fa[0]\u7684\u5730\u5740\uff0c&a\u662f\u5bf9\u8c61\uff08\u6570\u7ec4\uff09\u9996\u5730\u5740\uff0ca+1\u662f\u6570\u7ec4\u4e0b\u4e00\u5143\u7d20\u7684\u5730\u5740\uff0c\u5373a[1],&a+1\u662f\u4e0b\u4e00\u4e2a\u5bf9\u8c61\u7684\u5730\u5740\uff0c\u5373a[5].", "1.\u8bf7\u95ee\u4ee5\u4e0b\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\uff1a", "\nint main()", "\n{", "\nchar a;", "\nchar *str=&a;", "\nstrcpy(str,\u201dhello\u201d);", "\nprintf(str);", "\nreturn 0;", "\n}", "\n\u6ca1\u6709\u4e3astr\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff0c\u5c06\u4f1a\u53d1\u751f\u5f02\u5e38", "\n\u95ee\u9898\u51fa\u5728\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u590d\u5236\u8fdb\u4e00\u4e2a\u5b57\u7b26\u53d8\u91cf\u6307\u9488\u6240\u6307\u5730\u5740\u3002\u867d\u7136\u53ef\u4ee5\u6b63\u786e\u8f93\u51fa\u7ed3\u679c\uff0c\u4f46\u56e0\u4e3a\u8d8a\u754c\u8fdb\u884c\u5185\u5728\u8bfb\u5199\u800c\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\u3002", "char* s=\u201dAAA\u201d;", "\nprintf(\u201c%s\u201d,s);", "\ns[0]=\u2019B';", "\nprintf(\u201c%s\u201d,s);", "\n\u6709\u4ec0\u4e48\u9519\uff1f", "\n\u201cAAA\u201d\u662f\u5b57\u7b26\u4e32\u5e38\u91cf\u3002s\u662f\u6307\u9488\uff0c\u6307\u5411\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5e38\u91cf\uff0c\u6240\u4ee5\u58f0\u660es\u7684\u65f6\u5019\u5c31\u6709\u95ee\u9898\u3002", "\ncosnt char* s=\u201dAAA\u201d;", "\n\u7136\u540e\u53c8\u56e0\u4e3a\u662f\u5e38\u91cf\uff0c\u6240\u4ee5\u5bf9\u662fs[0]\u7684\u8d4b\u503c\u64cd\u4f5c\u662f\u4e0d\u5408\u6cd5\u7684\u3002", "\n1\u3001\u5199\u4e00\u4e2a\u201c\u6807\u51c6\u201d\u5b8f\uff0c\u8fd9\u4e2a\u5b8f\u8f93\u5165\u4e24\u4e2a\u53c2\u6570\u5e76\u8fd4\u56de\u8f83\u5c0f\u7684\u4e00\u4e2a\u3002", "\n.#define Min(X, Y) ((X)>(Y)?(Y):(X))//\u7ed3\u5c3e\u6ca1\u6709;", "\n2\u3001\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\u7ecf\u5e38\u8981\u7528\u5230\u65e0\u9650\u5faa\u73af\uff0c\u4f60\u600e\u4e48\u7528C\u7f16\u5199\u6b7b\u5faa\u73af\u3002", "\nwhile(1){}\u6216\u8005for(;;)", "\n3\u3001\u5173\u952e\u5b57static\u7684\u4f5c\u7528\u662f\u4ec0\u4e48\uff1f", "\n\u5b9a\u4e49\u9759\u6001\u53d8\u91cf", "\n4\u3001\u5173\u952e\u5b57const\u6709\u4ec0\u4e48\u542b\u610f\uff1f", "\n\u8868\u793a\u5e38\u91cf\u4e0d\u53ef\u4ee5\u4fee\u6539\u7684\u53d8\u91cf\u3002", "\n5\u3001\u5173\u952e\u5b57volatile\u6709\u4ec0\u4e48\u542b\u610f\uff1f\u5e76\u4e3e\u51fa\u4e09\u4e2a\u4e0d\u540c\u7684\u4f8b\u5b50\uff1f", "\n\u63d0\u793a\u7f16\u8bd1\u5668\u5bf9\u8c61\u7684\u503c\u53ef\u80fd\u5728\u7f16\u8bd1\u5668\u672a\u76d1\u6d4b\u5230\u7684\u60c5\u51b5\u4e0b\u6539\u53d8\u3002", "int (*s[10])(int) \u8868\u793a\u7684\u662f\u4ec0\u4e48\u554a", "\nint (*s[10])(int) \u51fd\u6570\u6307\u9488\u6570\u7ec4\uff0c\u6bcf\u4e2a\u6307\u9488\u6307\u5411\u4e00\u4e2aint func(int param)\u7684\u51fd\u6570\u3002", "1.\u6709\u4ee5\u4e0b\u8868\u8fbe\u5f0f\uff1a", "\nint a=248; b=4;int const c=21;const int *d=&a;", "\nint *const e=&b;int const *f const =&a;", "\n\u8bf7\u95ee\u4e0b\u5217\u8868\u8fbe\u5f0f\u54ea\u4e9b\u4f1a\u88ab\u7f16\u8bd1\u5668\u7981\u6b62\uff1f\u4e3a\u4ec0\u4e48\uff1f", "\n*c=32;d=&b;*d=43;e=34;e=&a;f=0x321f;", "\n*c \u8fd9\u662f\u4e2a\u4ec0\u4e48\u4e1c\u4e1c\uff0c\u7981\u6b62", "\n*d \u8bf4\u4e86\u662fconst\uff0c \u7981\u6b62", "\ne = &a \u8bf4\u4e86\u662fconst \u7981\u6b62", "\nconst *f const =&a; \u7981\u6b62", "\n2.\u4ea4\u6362\u4e24\u4e2a\u53d8\u91cf\u7684\u503c\uff0c\u4e0d\u4f7f\u7528\u7b2c\u4e09\u4e2a\u53d8\u91cf\u3002\u5373a=3,b=5,\u4ea4\u6362\u4e4b\u540ea=5,b=3;", "\n\u6709\u4e24\u79cd\u89e3\u6cd5, \u4e00\u79cd\u7528\u7b97\u672f\u7b97\u6cd5, \u4e00\u79cd\u7528^(\u5f02\u6216)", "\na = a + b;", "\nb = a \u2013 b;", "\na = a \u2013 b;", "\nor", "\na = a^b;// \u53ea\u80fd\u5bf9int,char..", "\nb = a^b;", "\na = a^b;", "\nor", "\na ^= b ^= a;", "\n3.c\u548cc++\u4e2d\u7684struct\u6709\u4ec0\u4e48\u4e0d\u540c\uff1f", "\nc\u548cc++\u4e2dstruct\u7684\u4e3b\u8981\u533a\u522b\u662fc\u4e2d\u7684struct\u4e0d\u53ef\u4ee5\u542b\u6709\u6210\u5458\u51fd\u6570\uff0c\u800cc++\u4e2d\u7684struct\u53ef\u4ee5\u3002c++\u4e2dstruct\u548cclass\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u9ed8\u8ba4\u7684\u5b58\u53d6\u6743\u9650\u4e0d\u540c\uff0cstruct\u9ed8\u8ba4\u4e3apublic\uff0c\u800cclass\u9ed8\u8ba4\u4e3aprivate", "\n4.#include <stdio.h>", "\n#include <stdlib.h>", "\nvoid getmemory(char *p)", "\n{", "\np=(char *) malloc(100);", "\nstrcpy(p,\u201dhello world\u201d);", "\n}", "\nint main( )", "\n{", "\nchar *str=NULL;", "\ngetmemory(str);", "\nprintf(\u201c%s/n\u201d,str);", "\nfree(str);", "\nreturn 0;", "\n}", "\n\u7a0b\u5e8f\u5d29\u6e83\uff0cgetmemory\u4e2d\u7684malloc \u4e0d\u80fd\u8fd4\u56de\u52a8\u6001\u5185\u5b58\uff0c free\uff08\uff09\u5bf9str\u64cd\u4f5c\u5f88\u5371\u9669", "\n5.char szstr[10];", "\nstrcpy(szstr,\u201d0123456789\u2033);", "\n\u4ea7\u751f\u4ec0\u4e48\u7ed3\u679c\uff1f\u4e3a\u4ec0\u4e48\uff1f", "\n\u957f\u5ea6\u4e0d\u4e00\u6837\uff0c\u4f1a\u9020\u6210\u975e\u6cd5\u7684OS", "\n6.\u5217\u4e3e\u51e0\u79cd\u8fdb\u7a0b\u7684\u540c\u6b65\u673a\u5236\uff0c\u5e76\u6bd4\u8f83\u5176\u4f18\u7f3a\u70b9\u3002", "\n\u539f\u5b50\u64cd\u4f5c", "\n\u4fe1\u53f7\u91cf\u673a\u5236", "\n\u81ea\u65cb\u9501", "\n\u7ba1\u7a0b\uff0c\u4f1a\u5408\uff0c\u5206\u5e03\u5f0f\u7cfb\u7edf", "7.\u8fdb\u7a0b\u4e4b\u95f4\u901a\u4fe1\u7684\u9014\u5f84", "\n\u5171\u4eab\u5b58\u50a8\u7cfb\u7edf", "\n\u6d88\u606f\u4f20\u9012\u7cfb\u7edf", "\n\u7ba1\u9053\uff1a\u4ee5\u6587\u4ef6\u7cfb\u7edf\u4e3a\u57fa\u7840", "\n11.\u8fdb\u7a0b\u6b7b\u9501\u7684\u539f\u56e0", "\n\u8d44\u6e90\u7ade\u4e89\u53ca\u8fdb\u7a0b\u63a8\u8fdb\u987a\u5e8f\u975e\u6cd5", "\n12.\u6b7b\u9501\u76844\u4e2a\u5fc5\u8981\u6761\u4ef6", "\n\u4e92\u65a5\u3001\u8bf7\u6c42\u4fdd\u6301\u3001\u4e0d\u53ef\u5265\u593a\u3001\u73af\u8def", "\n13.\u6b7b\u9501\u7684\u5904\u7406", "\n\u9e35\u9e1f\u7b56\u7565\u3001\u9884\u9632\u7b56\u7565\u3001\u907f\u514d\u7b56\u7565\u3001\u68c0\u6d4b\u4e0e\u89e3\u9664\u6b7b\u9501", "\n15. \u64cd\u4f5c\u7cfb\u7edf\u4e2d\u8fdb\u7a0b\u8c03\u5ea6\u7b56\u7565\u6709\u54ea\u51e0\u79cd\uff1f", "\nFCFS(\u5148\u6765\u5148\u670d\u52a1)\uff0c\u4f18\u5148\u7ea7\uff0c\u65f6\u95f4\u7247\u8f6e\u8f6c\uff0c\u591a\u7ea7\u53cd\u9988", "\n8.\u7c7b\u7684\u9759\u6001\u6210\u5458\u548c\u975e\u9759\u6001\u6210\u5458\u6709\u4f55\u533a\u522b\uff1f", "\n\u7c7b\u7684\u9759\u6001\u6210\u5458\u6bcf\u4e2a\u7c7b\u53ea\u6709\u4e00\u4e2a\uff0c\u975e\u9759\u6001\u6210\u5458\u6bcf\u4e2a\u5bf9\u8c61\u4e00\u4e2a", "\n9.\u7eaf\u865a\u51fd\u6570\u5982\u4f55\u5b9a\u4e49\uff1f\u4f7f\u7528\u65f6\u5e94\u6ce8\u610f\u4ec0\u4e48\uff1f", "\nvirtual void f()=0;", "\n\u662f\u63a5\u53e3\uff0c\u5b50\u7c7b\u5fc5\u987b\u8981\u5b9e\u73b0", "\n10.\u6570\u7ec4\u548c\u94fe\u8868\u7684\u533a\u522b", "\n\u6570\u7ec4\uff1a\u6570\u636e\u987a\u5e8f\u5b58\u50a8\uff0c\u56fa\u5b9a\u5927\u5c0f", "\n\u8fde\u8868\uff1a\u6570\u636e\u53ef\u4ee5\u968f\u673a\u5b58\u50a8\uff0c\u5927\u5c0f\u53ef\u52a8\u6001\u6539\u53d8", "12.ISO\u7684\u4e03\u5c42\u6a21\u578b\u662f\u4ec0\u4e48\uff1ftcp/udp\u662f\u5c5e\u4e8e\u54ea\u4e00\u5c42\uff1ftcp/udp\u6709\u4f55\u4f18\u7f3a\u70b9\uff1f", "\n\u5e94\u7528\u5c42", "\n\u8868\u793a\u5c42", "\n\u4f1a\u8bdd\u5c42", "\n\u8fd0\u8f93\u5c42", "\n\u7f51\u7edc\u5c42", "\n\u7269\u7406\u94fe\u8def\u5c42", "\n\u7269\u7406\u5c42", "\ntcp /udp\u5c5e\u4e8e\u8fd0\u8f93\u5c42", "\nTCP \u670d\u52a1\u63d0\u4f9b\u4e86\u6570\u636e\u6d41\u4f20\u8f93\u3001\u53ef\u9760\u6027\u3001\u6709\u6548\u6d41\u63a7\u5236\u3001\u5168\u53cc\u5de5\u64cd\u4f5c\u548c\u591a\u8def\u590d\u7528\u6280\u672f\u7b49\u3002", "\n\u4e0e TCP \u4e0d\u540c\uff0c UDP \u5e76\u4e0d\u63d0\u4f9b\u5bf9 IP \u534f\u8bae\u7684\u53ef\u9760\u673a\u5236\u3001\u6d41\u63a7\u5236\u4ee5\u53ca\u9519\u8bef\u6062\u590d\u529f\u80fd\u7b49\u3002\u7531\u4e8e UDP \u6bd4\u8f83\u7b80\u5355\uff0c UDP \u5934\u5305\u542b\u5f88\u5c11\u7684\u5b57\u8282\uff0c\u6bd4 TCP", "\n\u8d1f\u8f7d\u6d88\u8017\u5c11\u3002", "\ntcp: \u63d0\u4f9b\u7a33\u5b9a\u7684\u4f20\u8f93\u670d\u52a1\uff0c\u6709\u6d41\u91cf\u63a7\u5236\uff0c\u7f3a\u70b9\u662f\u5305\u5934\u5927\uff0c\u5197\u4f59\u6027\u4e0d\u597d", "\nudp: \u4e0d\u63d0\u4f9b\u7a33\u5b9a\u7684\u670d\u52a1\uff0c\u5305\u5934\u5c0f\uff0c\u5f00\u9500\u5c0f", "1\uff1a(void *)ptr \u548c (*(void**))ptr\u7684\u7ed3\u679c\u662f\u5426\u76f8\u540c\uff1f\u5176\u4e2dptr\u4e3a\u540c\u4e00\u4e2a\u6307\u9488", "\n.(void *)ptr \u548c (*(void**))ptr\u503c\u662f\u76f8\u540c\u7684", "\n2\uff1aint main()", "\n{", "\nint x=3;", "\nprintf(\u201c%d\u201d,x);", "\nreturn 1;", "}", "\n\u95ee\u51fd\u6570\u65e2\u7136\u4e0d\u4f1a\u88ab\u5176\u5b83\u51fd\u6570\u8c03\u7528\uff0c\u4e3a\u4ec0\u4e48\u8981\u8fd4\u56de1\uff1f", "\nmian\u4e2d\uff0cc\u6807\u51c6\u8ba4\u4e3a0\u8868\u793a\u6210\u529f\uff0c\u975e0\u8868\u793a\u9519\u8bef\u3002\u5177\u4f53\u7684\u503c\u662f\u67d0\u4e2d\u5177\u4f53\u51fa\u9519\u4fe1\u606f", "1\uff0c\u8981\u5bf9\u7edd\u5bf9\u5730\u57400\u00d7100000\u8d4b\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u7528", "\n(unsigned int*)0\u00d7100000 = 1234;", "\n\u90a3\u4e48\u8981\u662f\u60f3\u8ba9\u7a0b\u5e8f\u8df3\u8f6c\u5230\u7edd\u5bf9\u5730\u5740\u662f0\u00d7100000\u53bb\u6267\u884c\uff0c\u5e94\u8be5\u600e\u4e48\u505a\uff1f", "\n*((void (*)( ))0\u00d7100000 ) ( );", "\n\u9996\u5148\u8981\u5c060\u00d7100000\u5f3a\u5236\u8f6c\u6362\u6210\u51fd\u6570\u6307\u9488,\u5373:", "\n(void (*)())0\u00d7100000", "\n\u7136\u540e\u518d\u8c03\u7528\u5b83:", "\n*((void (*)())0\u00d7100000)();", "\n\u7528typedef\u53ef\u4ee5\u770b\u5f97\u66f4\u76f4\u89c2\u4e9b:", "\ntypedef void(*)() voidFuncPtr;", "\n*((voidFuncPtr)0\u00d7100000)();", "\n2\uff0c\u5df2\u77e5\u4e00\u4e2a\u6570\u7ec4table\uff0c\u7528\u4e00\u4e2a\u5b8f\u5b9a\u4e49\uff0c\u6c42\u51fa\u6570\u636e\u7684\u5143\u7d20\u4e2a\u6570", "\n#define NTBL", "\n#define NTBL (sizeof(table)/sizeof(table[0]))", "\u9762\u8bd5\u9898: \u7ebf\u7a0b\u4e0e\u8fdb\u7a0b\u7684\u533a\u522b\u548c\u8054\u7cfb? \u7ebf\u7a0b\u662f\u5426\u5177\u6709\u76f8\u540c\u7684\u5806\u6808? dll\u662f\u5426\u6709\u72ec\u7acb\u7684\u5806\u6808?", "\n\u8fdb\u7a0b\u662f\u6b7b\u7684\uff0c\u53ea\u662f\u4e00\u4e9b\u8d44\u6e90\u7684\u96c6\u5408\uff0c\u771f\u6b63\u7684\u7a0b\u5e8f\u6267\u884c\u90fd\u662f\u7ebf\u7a0b\u6765\u5b8c\u6210\u7684\uff0c\u7a0b\u5e8f\u542f\u52a8\u7684\u65f6\u5019\u64cd\u4f5c\u7cfb\u7edf\u5c31\u5e2e\u4f60\u521b\u5efa\u4e86\u4e00\u4e2a\u4e3b\u7ebf\u7a0b\u3002", "\u6bcf\u4e2a\u7ebf\u7a0b\u6709\u81ea\u5df1\u7684\u5806\u6808\u3002", "\nDLL \u4e2d\u6709\u6ca1\u6709\u72ec\u7acb\u7684\u5806\u6808\uff0c\u8fd9\u4e2a\u95ee\u9898\u4e0d\u597d\u56de\u7b54\uff0c\u6216\u8005\u8bf4\u8fd9\u4e2a\u95ee\u9898\u672c\u8eab\u662f\u5426\u6709\u95ee\u9898\u3002\u56e0\u4e3aDLL\u4e2d\u7684\u4ee3\u7801\u662f\u88ab\u67d0\u4e9b\u7ebf\u7a0b\u6240\u6267\u884c\uff0c\u53ea\u6709\u7ebf\u7a0b\u62e5\u6709\u5806\u6808\uff0c\u5982\u679cDLL\u4e2d\u7684\u4ee3\u7801\u662f", "\nEXE\u4e2d\u7684\u7ebf\u7a0b\u6240\u8c03\u7528\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u662f\u4e0d\u662f\u8bf4\u8fd9\u4e2aDLL\u6ca1\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u5806\u6808\uff1f\u5982\u679cDLL\u4e2d\u7684\u4ee3\u7801\u662f\u7531DLL\u81ea\u5df1\u521b\u5efa\u7684\u7ebf\u7a0b\u6240\u6267\u884c\uff0c\u90a3\u4e48\u662f\u4e0d\u662f\u8bf4DLL\u6709\u72ec\u7acb\u7684\u5806\u6808\uff1f", "\u4ee5\u4e0a\u8bb2\u7684\u662f\u5806\u6808\uff0c\u5982\u679c\u5bf9\u4e8e\u5806\u6765\u8bf4\uff0c\u6bcf\u4e2aDLL\u6709\u81ea\u5df1\u7684\u5806\uff0c\u6240\u4ee5\u5982\u679c\u662f\u4eceDLL\u4e2d\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\uff0c\u6700\u597d\u662f\u4eceDLL\u4e2d\u5220\u9664\uff0c\u5982\u679c\u4f60\u4eceDLL\u4e2d\u5206\u914d\u5185\u5b58\uff0c\u7136\u540e\u5728EXE\u4e2d\uff0c\u6216\u8005\u53e6\u5916\u4e00\u4e2aDLL\u4e2d\u5220\u9664\uff0c\u5f88\u6709\u53ef\u80fd\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83", "unsigned short A = 10;", "\nprintf(\u201c~A = %u\\n\u201d, ~A);", "char c=128;", "\nprintf(\u201cc=%d\\n\u201d,c);", "\u8f93\u51fa\u591a\u5c11\uff1f\u5e76\u5206\u6790\u8fc7\u7a0b", "\n\u7b2c\u4e00\u9898\uff0c\uff5eA \uff1d0xfffffff5,int\u503c \u4e3a\uff0d11\uff0c\u4f46\u8f93\u51fa\u7684\u662fuint\u3002\u6240\u4ee5\u8f93\u51fa4294967285", "\n\u7b2c\u4e8c\u9898\uff0cc\uff1d0\u00d710,\u8f93\u51fa\u7684\u662fint\uff0c\u6700\u9ad8\u4f4d\u4e3a1\uff0c\u662f\u8d1f\u6570\uff0c\u6240\u4ee5\u5b83\u7684\u503c\u5c31\u662f0\u00d700\u7684\u8865\u7801\u5c31\u662f128\uff0c\u6240\u4ee5\u8f93\u51fa\uff0d128\u3002", "\n\u8fd9\u4e24\u9053\u9898\u90fd\u662f\u5728\u8003\u5bdf\u4e8c\u8fdb\u5236\u5411int\u6216uint\u8f6c\u6362\u65f6\u7684\u6700\u9ad8\u4f4d\u5904\u7406\u3002", "\u5206\u6790\u4e0b\u9762\u7684\u7a0b\u5e8f\uff1a", "\nvoid GetMemory(char **p,int num)", "\n{", "\n*p=(char *)malloc(num);", "}", "\nint main()", "\n{", "\nchar *str=NULL;", "GetMemory(&str,100);", "strcpy(str,\u201dhello\u201d);", "free(str);", "if(str!=NULL)", "\n{", "\nstrcpy(str,\u201dworld\u201d);", "\n}", "printf(\u201c\\n str is %s\u201d,str);", "\ngetchar();", "\n}", "\n\u95ee\u8f93\u51fa\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f\u5e0c\u671b\u5927\u5bb6\u80fd\u8bf4\u8bf4\u539f\u56e0\uff0c\u5148\u8c22\u8c22\u4e86", "\n\u8f93\u51fastr is world\u3002", "\nfree \u53ea\u662f\u91ca\u653e\u7684str\u6307\u5411\u7684\u5185\u5b58\u7a7a\u95f4,\u5b83\u672c\u8eab\u7684\u503c\u8fd8\u662f\u5b58\u5728\u7684.", "\n\u6240\u4ee5free\u4e4b\u540e\uff0c\u6709\u4e00\u4e2a\u597d\u7684\u4e60\u60ef\u5c31\u662f\u5c06str=NULL.", "\n\u6b64\u65f6str\u6307\u5411\u7a7a\u95f4\u7684\u5185\u5b58\u5df2\u88ab\u56de\u6536,\u5982\u679c\u8f93\u51fa\u8bed\u53e5\u4e4b\u524d\u8fd8\u5b58\u5728\u5206\u914d\u7a7a\u95f4\u7684\u64cd\u4f5c\u7684\u8bdd,\u8fd9\u6bb5\u5b58\u50a8\u7a7a\u95f4\u662f\u53ef\u80fd\u88ab\u91cd\u65b0\u5206\u914d\u7ed9\u5176\u4ed6\u53d8\u91cf\u7684,", "\n\u5c3d\u7ba1\u8fd9\u6bb5\u7a0b\u5e8f\u786e\u5b9e\u662f\u5b58\u5728\u5927\u5927\u7684\u95ee\u9898\uff08\u4e0a\u9762\u5404\u4f4d\u5df2\u7ecf\u8bf4\u5f97\u5f88\u6e05\u695a\u4e86\uff09\uff0c\u4f46\u662f\u901a\u5e38\u4f1a\u6253\u5370\u51faworld\u6765\u3002", "\n\u8fd9\u662f\u56e0\u4e3a\uff0c\u8fdb\u7a0b\u4e2d\u7684\u5185\u5b58\u7ba1\u7406\u4e00\u822c\u4e0d\u662f\u7531\u64cd\u4f5c\u7cfb\u7edf\u5b8c\u6210\u7684\uff0c\u800c\u662f\u7531\u5e93\u51fd\u6570\u81ea\u5df1\u5b8c\u6210\u7684\u3002", "\n\u5f53\u4f60malloc\u4e00\u5757\u5185\u5b58\u7684\u65f6\u5019\uff0c\u7ba1\u7406\u5e93\u5411\u64cd\u4f5c\u7cfb\u7edf\u7533\u8bf7\u4e00\u5757\u7a7a\u95f4\uff08\u53ef\u80fd\u4f1a\u6bd4\u4f60\u7533\u8bf7\u7684\u5927\u4e00\u4e9b\uff09\uff0c\u7136\u540e\u5728\u8fd9\u5757\u7a7a\u95f4\u4e2d\u8bb0\u5f55\u4e00\u4e9b\u7ba1\u7406\u4fe1\u606f\uff08\u4e00\u822c\u662f\u5728\u4f60\u7533\u8bf7\u7684\u5185\u5b58\u524d\u9762\u4e00\u70b9\uff09\uff0c\u5e76\u5c06\u53ef\u7528\u5185\u5b58\u7684\u5730\u5740\u8fd4\u56de\u3002\u4f46\u662f\u91ca\u653e\u5185\u5b58\u7684\u65f6\u5019\uff0c\u7ba1\u7406\u5e93\u901a\u5e38\u90fd\u4e0d\u4f1a\u5c06\u5185\u5b58\u8fd8\u7ed9\u64cd\u4f5c\u7cfb\u7edf\uff0c\u56e0\u6b64\u4f60\u662f\u53ef\u4ee5\u7ee7\u7eed\u8bbf\u95ee\u8fd9\u5757\u5730\u5740\u7684\uff0c\u53ea\u4e0d\u8fc7\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u697c\u4e0a\u90fd\u8bf4\u8fc7\u4e86\uff0c\u6700\u597d\u522b\u8fd9\u4e48\u5e72\u3002", "char a[10],strlen(a)\u4e3a\u4ec0\u4e48\u7b49\u4e8e15\uff1f\u8fd0\u884c\u7684\u7ed3\u679c", "#include \u201cstdio.h\u201d", "\n#include \u201cstring.h\u201d", "void main()", "\n{", "char aa[10];", "\nprintf(\u201c%d\u201d,strlen(aa));", "\n}", "sizeof()\u548c\u521d\u4e0d\u521d\u59cb\u5316\uff0c\u6ca1\u6709\u5173\u7cfb\uff1b", "\nstrlen()\u548c\u521d\u59cb\u5316\u6709\u5173\u3002", "char (*str)[20];/*str\u662f\u4e00\u4e2a\u6570\u7ec4\u6307\u9488\uff0c\u5373\u6307\u5411\u6570\u7ec4\u7684\u6307\u9488\uff0e*/", "\nchar *str[20];/*str\u662f\u4e00\u4e2a\u6307\u9488\u6570\u7ec4\uff0c\u5176\u5143\u7d20\u4e3a\u6307\u9488\u578b\u6570\u636e\uff0e*/", "long a=0\u00d7801010;", "\na+5=?", "\n0\u00d7801010\u7528\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a\uff1a\u201c1000 0000 0001 0000 0001 0000\u201d\uff0c\u5341\u8fdb\u5236\u7684\u503c\u4e3a8392720\uff0c\u518d\u52a0\u4e0a5\u5c31\u662f8392725\u7f57", "\n1)\u7ed9\u5b9a\u7ed3\u6784struct A", "\n{", "\nchar t:4;", "\nchar k:4;", "\nunsigned short i:8;", "\nunsigned long m;", "\n};\u95eesizeof(A) = ?", "\n\u7ed9\u5b9a\u7ed3\u6784struct A", "\n{", "\nchar t:4; 4\u4f4d", "\nchar k:4; 4\u4f4d", "\nunsigned short i:8; 8\u4f4d", "\nunsigned long m; // \u504f\u79fb2\u5b57\u8282\u4fdd\u8bc14\u5b57\u8282\u5bf9\u9f50", "\n}; // \u51718\u5b57\u8282", "\n2)\u4e0b\u9762\u7684\u51fd\u6570\u5b9e\u73b0\u5728\u4e00\u4e2a\u6570\u4e0a\u52a0\u4e00\u4e2a\u6570\uff0c\u6709\u4ec0\u4e48\u9519\u8bef\uff1f\u8bf7\u6539\u6b63\u3002", "\nint add_n ( int n )", "\n{", "\nstatic int i = 100;", "\ni += n;", "\nreturn i;", "\n}", "\n\u5f53\u4f60\u7b2c\u4e8c\u6b21\u8c03\u7528\u65f6\u5f97\u4e0d\u5230\u6b63\u786e\u7684\u7ed3\u679c\uff0c\u96be\u9053\u4f60\u5199\u4e2a\u51fd\u6570\u5c31\u662f\u4e3a\u4e86\u8c03\u7528\u4e00\u6b21\uff1f\u95ee\u9898\u5c31\u51fa\u5728 static\u4e0a\uff1f", "// \u5e2e\u5fd9\u5206\u6790\u4e00\u4e0b", "\n#include<iostream.h>", "\n#include <string.h>", "\n#include <malloc.h>", "\n#include <stdio.h>", "\n#include <stdlib.h>", "\n#include <memory.h>", "\ntypedef struct AA", "\n{", "\nint b1:5;", "\nint b2:2;", "\n}AA;", "\nvoid main()", "\n{", "\nAA aa;", "\nchar cc[100];", "\nstrcpy(cc,\u201d0123456789abcdefghijklmnopqrstuvwxyz\u201d);", "\nmemcpy(&aa,cc,sizeof(AA));", "\ncout << aa.b1 <<endl;", "\ncout << aa.b2 <<endl;", "\n}", "\n\u7b54\u6848\u662f -16\u548c\uff11", "\n\u9996\u5148sizeof(AA)\u7684\u5927\u5c0f\u4e3a4,b1\u548cb2\u5206\u522b\u53605bit\u548c2bit.", "\n\u7ecf\u8fc7strcpy\u548cmemcpy\u540e,aa\u76844\u4e2a\u5b57\u8282\u6240\u5b58\u653e\u7684\u503c\u662f:", "\n0,1,2,3\u7684ASC\u7801\uff0c\u537300110000,00110001,00110010,00110011", "\n\u6240\u4ee5\uff0c\u6700\u540e\u4e00\u6b65\uff1a\u663e\u793a\u7684\u662f\u8fd9\uff14\u4e2a\u5b57\u8282\u7684\u524d\uff15\u4f4d\uff0c\u548c\u4e4b\u540e\u7684\uff12\u4f4d", "\n\u5206\u522b\u4e3a\uff1a10000,\u548c01", "\n\u56e0\u4e3aint\u662f\u6709\u6b63\u8d1f\u4e4b\u5206\u3000\u3000\u6240\u4ee5\uff1a\u7b54\u6848\u662f-16\u548c\uff11", "\u6c42\u51fd\u6570\u8fd4\u56de\u503c\uff0c\u8f93\u5165x=9999;", "\nint func \uff08 x \uff09", "\n{", "\nint countx = 0;", "\nwhile ( x )", "\n{", "\ncountx ++;", "\nx = x&(x-1);", "\n}", "\nreturn countx;", "\n}", "\n\u7ed3\u679c\u5462\uff1f", "\n\u77e5\u9053\u4e86\u8fd9\u662f\u7edf\u8ba19999\u7684\u4e8c\u8fdb\u5236\u6570\u503c\u4e2d\u6709\u591a\u5c11\u4e2a1\u7684\u51fd\u6570\uff0c\u4e14\u6709", "\n9999\uff1d9\u00d71024\uff0b512\uff0b256\uff0b15", "9\u00d71024\u4e2d\u542b\u67091\u7684\u4e2a\u6570\u4e3a2\uff1b", "\n512\u4e2d\u542b\u67091\u7684\u4e2a\u6570\u4e3a1\uff1b", "\n256\u4e2d\u542b\u67091\u7684\u4e2a\u6570\u4e3a1\uff1b", "\n15\u4e2d\u542b\u67091\u7684\u4e2a\u6570\u4e3a4\uff1b", "\n\u6545\u5171\u67091\u7684\u4e2a\u6570\u4e3a8\uff0c\u7ed3\u679c\u4e3a8\u3002", "\n1000 \u2013 1 = 0111\uff0c\u6b63\u597d\u662f\u539f\u6570\u53d6\u53cd\u3002\u8fd9\u5c31\u662f\u539f\u7406\u3002", "\n\u7528\u8fd9\u79cd\u65b9\u6cd5\u6765\u6c421\u7684\u4e2a\u6570\u662f\u5f88\u6548\u7387\u5f88\u9ad8\u7684\u3002", "\n\u4e0d\u5fc5\u53bb\u4e00\u4e2a\u4e00\u4e2a\u5730\u79fb\u4f4d\u3002\u5faa\u73af\u6b21\u6570\u6700\u5c11\u3002", "int a,b,c \u8bf7\u5199\u51fd\u6570\u5b9e\u73b0C=a+b ,\u4e0d\u53ef\u4ee5\u6539\u53d8\u6570\u636e\u7c7b\u578b,\u5982\u5c06c\u6539\u4e3along int,\u5173\u952e\u662f\u5982\u4f55\u5904\u7406\u6ea2\u51fa\u95ee\u9898", "\nbool add (int a, int b,int *c)", "\n{", "\n*c=a+b;", "\nreturn (a>0 && b>0 &&(*c<a || *c<b) || (a<0 && b<0 &&(*c>a || *c>b)));", "\n}", "\u5206\u6790\uff1a", "\nstruct bit", "\n{ int a:3;", "\nint b:2;", "\nint c:3;", "\n};", "\nint main()", "\n{", "\nbit s;", "\nchar *c=(char*)&s;", "\ncout<<sizeof(bit)<<endl;", "\n*c=0\u00d799;", "\ncout << s.a <<endl <<s.b<<endl<<s.c<<endl;", "\nint a=-1;", "\nprintf(\u201c%x\u201d,a);", "\nreturn 0;", "\n}", "\n\u8f93\u51fa\u4e3a\u4ec0\u4e48\u662f", "\n4", "\n1", "\n-1", "\n-4", "\nffffffff", "\n\u56e0\u4e3a0\u00d799\u5728\u5185\u5b58\u4e2d\u8868\u793a\u4e3a 100 11 001 , a = 001, b = 11, c = 100", "\n\u5f53c\u4e3a\u6709\u7b26\u5408\u6570\u65f6, c = 100, \u6700\u9ad81\u4e3a\u8868\u793ac\u4e3a\u8d1f\u6570\uff0c\u8d1f\u6570\u5728\u8ba1\u7b97\u673a\u7528\u8865\u7801\u8868\u793a\uff0c\u6240\u4ee5c = -4;\u540c\u7406", "\nb = -1;", "\n\u5f53c\u4e3a\u6709\u7b26\u5408\u6570\u65f6, c = 100,\u5373 c = 4,\u540c\u7406 b = 3", "\u4f4d\u57df \uff1a", "\n\u6709\u4e9b\u4fe1\u606f\u5728\u5b58\u50a8\u65f6\uff0c\u5e76\u4e0d\u9700\u8981\u5360\u7528\u4e00\u4e2a\u5b8c\u6574\u7684\u5b57\u8282\uff0c \u800c\u53ea\u9700\u5360\u51e0\u4e2a\u6216\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u3002\u4f8b\u5982\u5728\u5b58\u653e\u4e00\u4e2a\u5f00\u5173\u91cf\u65f6\uff0c\u53ea\u67090\u548c1", "\n\u4e24\u79cd\u72b6\u6001\uff0c\u7528\u4e00\u4f4d\u4e8c\u8fdb\u4f4d\u5373\u53ef\u3002\u4e3a\u4e86\u8282\u7701\u5b58\u50a8\u7a7a\u95f4\uff0c\u5e76\u4f7f\u5904\u7406\u7b80\u4fbf\uff0c\uff23\u8bed\u8a00\u53c8\u63d0\u4f9b\u4e86\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u79f0\u4e3a\u201c\u4f4d\u57df\u201d\u6216\u201c\u4f4d\u6bb5\u201d\u3002\u6240\u8c13\u201c\u4f4d\u57df\u201d\u662f\u628a\u4e00\u4e2a\u5b57\u8282\u4e2d\u7684\u4e8c\u8fdb\u4f4d\u5212\u5206\u4e3a\u51e0\u4e2a\u4e0d\u540c\u7684\u533a\u57df\uff0c", "\n\u5e76\u8bf4\u660e\u6bcf\u4e2a\u533a\u57df\u7684\u4f4d\u6570\u3002\u6bcf\u4e2a\u57df\u6709\u4e00\u4e2a\u57df\u540d\uff0c\u5141\u8bb8\u5728\u7a0b\u5e8f\u4e2d\u6309\u57df\u540d\u8fdb\u884c\u64cd\u4f5c\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u628a\u51e0\u4e2a\u4e0d\u540c\u7684\u5bf9\u8c61\u7528\u4e00\u4e2a\u5b57\u8282\u7684\u4e8c\u8fdb\u5236\u4f4d\u57df\u6765\u8868\u793a\u3002\u4e00\u3001\u4f4d\u57df\u7684\u5b9a\u4e49\u548c\u4f4d\u57df\u53d8\u91cf\u7684\u8bf4\u660e\u4f4d\u57df\u5b9a\u4e49\u4e0e\u7ed3\u6784\u5b9a\u4e49\u76f8\u4eff\uff0c\u5176\u5f62\u5f0f\u4e3a\uff1a", "struct \u4f4d\u57df\u7ed3\u6784\u540d", "\n{ \u4f4d\u57df\u5217\u8868 };", "\n\u5176\u4e2d\u4f4d\u57df\u5217\u8868\u7684\u5f62\u5f0f\u4e3a\uff1a \u7c7b\u578b\u8bf4\u660e\u7b26 \u4f4d\u57df\u540d\uff1a\u4f4d\u57df\u957f\u5ea6", "\n\u4f8b\u5982\uff1a", "\nstruct bs", "\n{", "\nint a:8;", "\nint b:2;", "\nint c:6;", "\n};", "\n\u4f4d\u57df\u53d8\u91cf\u7684\u8bf4\u660e\u4e0e\u7ed3\u6784\u53d8\u91cf\u8bf4\u660e\u7684\u65b9\u5f0f\u76f8\u540c\u3002 \u53ef\u91c7\u7528\u5148\u5b9a\u4e49\u540e\u8bf4\u660e\uff0c\u540c\u65f6\u5b9a\u4e49\u8bf4\u660e\u6216\u8005\u76f4\u63a5\u8bf4\u660e\u8fd9\u4e09\u79cd\u65b9\u5f0f\u3002\u4f8b\u5982\uff1a", "\nstruct bs", "\n{", "\nint a:8;", "\nint b:2;", "\nint c:6;", "\n}data;", "\n\u8bf4\u660edata\u4e3abs\u53d8\u91cf\uff0c\u5171\u5360\u4e24\u4e2a\u5b57\u8282\u3002\u5176\u4e2d\u4f4d\u57dfa\u53608\u4f4d\uff0c\u4f4d\u57dfb\u53602\u4f4d\uff0c\u4f4d\u57dfc\u53606\u4f4d\u3002\u5bf9\u4e8e\u4f4d\u57df\u7684\u5b9a\u4e49\u5c1a\u6709\u4ee5\u4e0b\u51e0\u70b9\u8bf4\u660e\uff1a", "1. \u4e00\u4e2a\u4f4d\u57df\u5fc5\u987b\u5b58\u50a8\u5728\u540c\u4e00\u4e2a\u5b57\u8282\u4e2d\uff0c\u4e0d\u80fd\u8de8\u4e24\u4e2a\u5b57\u8282\u3002\u5982\u4e00\u4e2a\u5b57\u8282\u6240\u5269\u7a7a\u95f4\u4e0d\u591f\u5b58\u653e\u53e6\u4e00\u4f4d\u57df\u65f6\uff0c\u5e94\u4ece\u4e0b\u4e00\u5355\u5143\u8d77\u5b58\u653e\u8be5\u4f4d\u57df\u3002\u4e5f\u53ef\u4ee5\u6709\u610f\u4f7f\u67d0\u4f4d\u57df\u4ece\u4e0b\u4e00\u5355\u5143\u5f00\u59cb\u3002\u4f8b\u5982\uff1a", "\nstruct bs", "\n{", "\nunsigned a:4", "\nunsigned :0 /*\u7a7a\u57df*/", "\nunsigned b:4 /*\u4ece\u4e0b\u4e00\u5355\u5143\u5f00\u59cb\u5b58\u653e*/", "\nunsigned c:4", "\n}", "\n\u5728\u8fd9\u4e2a\u4f4d\u57df\u5b9a\u4e49\u4e2d\uff0ca\u5360\u7b2c\u4e00\u5b57\u8282\u76844\u4f4d\uff0c\u540e4\u4f4d\u586b0\u8868\u793a\u4e0d\u4f7f\u7528\uff0cb\u4ece\u7b2c\u4e8c\u5b57\u8282\u5f00\u59cb\uff0c\u5360\u75284\u4f4d\uff0cc\u5360\u75284\u4f4d\u3002", "2. \u7531\u4e8e\u4f4d\u57df\u4e0d\u5141\u8bb8\u8de8\u4e24\u4e2a\u5b57\u8282\uff0c\u56e0\u6b64\u4f4d\u57df\u7684\u957f\u5ea6\u4e0d\u80fd\u5927\u4e8e\u4e00\u4e2a\u5b57\u8282\u7684\u957f\u5ea6\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e0d\u80fd\u8d85\u8fc78\u4f4d\u4e8c\u8fdb\u4f4d\u3002", "3. \u4f4d\u57df\u53ef\u4ee5\u65e0\u4f4d\u57df\u540d\uff0c\u8fd9\u65f6\u5b83\u53ea\u7528\u6765\u4f5c\u586b\u5145\u6216\u8c03\u6574\u4f4d\u7f6e\u3002\u65e0\u540d\u7684\u4f4d\u57df\u662f\u4e0d\u80fd\u4f7f\u7528\u7684\u3002\u4f8b\u5982\uff1a", "\nstruct k", "\n{", "\nint a:1", "\nint :2 /*\u8be52\u4f4d\u4e0d\u80fd\u4f7f\u7528*/", "\nint b:3", "\nint c:2", "\n};", "\n\u4ece\u4ee5\u4e0a\u5206\u6790\u53ef\u4ee5\u770b\u51fa\uff0c\u4f4d\u57df\u5728\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u79cd\u7ed3\u6784\u7c7b\u578b\uff0c \u4e0d\u8fc7\u5176\u6210\u5458\u662f\u6309\u4e8c\u8fdb\u4f4d\u5206\u914d\u7684\u3002"], "title": "\u4e00\u7bc7C\u8bed\u8a00\u9762\u8bd5\u9898\u7684\u6c47\u603b"},
{"contents": ["C/VC++\u5de5\u7a0b\u5e08\u7b14\u8bd5\u8bd5\u9898", "\n\u59d3\u540d\uff1a\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u7533\u8bf7\u804c\u4f4d\uff1a\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u65e5\u671f\uff1a", "\n1.\u7528\u4f60\u719f\u6089\u7684\u8bed\u8a00\u63cf\u8ff0\u5e76\u6784\u9020\u4e00\u4e2a\u57fa\u4e8e\u5b57\u7b26\u4e32\u8282\u70b9\u7684\u4e8c\u53c9\u6811\uff0c\u5e76\u8bf4\u660e\u5982\u4f55\u5b9e\u73b0\u901a\u8fc7\u5173\u952e\u8bcd\u5bf9\u8282\u70b9\u8fdb\u884c\u6a21\u7cca\u67e5\u8be2\u3002", "2.\u5728\u5206\u6790\u67d0\u4e2aC++\u6e90\u6587\u4ef6\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6709\u8fd9\u6837\u4e00\u884c\u53d8\u91cf\u5b9a\u4e49\u5f0f\uff1a", "\nint t_from=20,t_to=12,t_length=120,i_count,t_usetime;", "\n\u73b0\u5728\u4f60\u5e76\u4e0d\u77e5\u9053\u8fd9\u884c\u4e00\u5171\u5b9a\u4e49\u4e86\u591a\u5c11\u4e2a\u53d8\u91cf\uff0c\u4ee5\u53ca\u54ea\u4e9b\u53d8\u91cf\u8fdb\u884c\u4e86\u521d\u59cb\u503c\u8bbe\u5b9a\uff0c\u8981\u6c42\u4ece\u8be5\u8bed\u53e5\u4e2d\u89e3\u6790\u51fa\u6240\u6709\u4ee5\u201ct_\u201d\u5f00\u5934\u7684\u53d8\u91cf\u540d\uff0c\u5e76\u4e14\u5982\u679c\u8be5\u53d8\u91cf\u8d4b\u4e88\u4e86\u521d\u59cb\u503c\u7684\u8bdd\u4e5f\u9700\u8981\u63d0\u53d6\u51fa\u6765\uff0c\u8bf7\u6784\u9020\u4e00\u4e2a\u65b9\u6cd5\u6765\u5b9e\u73b0\u8be5\u8981\u6c42\u3002", "3.\u5982\u679c\u73b0\u5728\u4ea4\u7ed9\u4f60\u4e00\u4e2a\u6807\u51c6\u7684Windows\u52a8\u6001\u5e93mylib.dll\uff0c\u5df2\u77e5\u5b83\u91c7\u7528C++\u8bed\u8a00\u7f16\u7a0b\u5b9e\u73b0\uff0c\u63d0\u4f9b\u4e86\u82e5\u5e72\u4e2a\u529f\u80fd\u63a5\u53e3\uff0c\u6309\u7167\u4f60\u7684\u7ecf\u9a8c\u548c\u5224\u65ad\uff0c\u4f60\u8ba4\u4e3a\u662f\u5426\u6709\u65b9\u6cd5\u901a\u8fc7\u5de5\u5177\u6216\u8005\u7f16\u7a0b\u7684\u65b9\u5f0f\u83b7\u5f97\u8fd9\u4e9b\u529f\u80fd\u63a5\u53e3\u53ca\u5176\u53c2\u6570\u4fe1\u606f\uff0c\u5982\u679c\u6709\uff0c\u8bf7\u5bf9\u8be5\u65b9\u6cd5\u8fdb\u884c\u63cf\u8ff0\u3002", "4.\u5728\u4e00\u4e2aVC\u7f16\u5199\u7684\u5bf9\u8bdd\u6846\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u5bf9\u8bdd\u6846\u7684OnInitDialog\u4e8b\u4ef6\u51fd\u6570\u91cc\u9762\u6700\u540e\u6709\u8fd9\u4e48\u4e00\u6bb5\u7a0b\u5e8f\uff1a", "\nint scx = ::GetSystemMetrics(SM_CXSCREEN);", "\nint scy = ::GetSystemMetrics(SM_CYSCREEN);", "\nCRect myrect;", "\nGetWindowRect(&myrect);", "\nint fromx = (scx \u2013 myrect.Width())/2;", "\nint fromy = (scy \u2013 myrect.Height())/2;", "\nSetWindowPos(NULL,fromx,fromy,myrect.Width(),myrect.Height(),SWP_NOZORDER);", "\n\u8bf7\u63cf\u8ff0\u5176\u4f5c\u7528\uff0c\u4f60\u89c9\u5f97\u8fd9\u6bb5\u7a0b\u5e8f\u5728\u65b9\u5f0f\u3001\u6548\u7387\u4e0a\u662f\u5426\u80fd\u8fdb\u884c\u63d0\u9ad8\uff0c\u5982\u679c\u80fd\uff0c\u8bf7\u8bf4\u660e\u65b9\u6cd5\u3002", "5.\u5c31\u4f60\u6240\u719f\u6089\u7684\u65b9\u6cd5\u63cf\u8ff0Windows\u5e73\u53f0\u4e0b\u7684\u97f3\u9891\u6570\u636e\u91c7\u96c6\u8fc7\u7a0b\uff0c\u5982\u679c\u53ef\u4ee5\uff0c\u8bf7\u5217\u51fa\u5173\u952e\u4ee3\u7801\u3002"], "title": "\u534e\u7f8e\u535a\u5f08C/VC\u5de5\u7a0b\u5e08\u7b14\u8bd5\u8bd5\u9898"},
{"contents": ["1.\u5728X86\u7cfb\u7edf\u4e2d\uff0c\u5982\u4e0b\u53d8\u91cf\u5728\u5185\u5b58\u4e2d\u7684\u5b57\u8282\u5b58\u653e\u987a\u5e8f\u3002", "\nDWORD Value1=0x8010011c", "\nUINT\u00a0 Value2=12801", "\n2.ASCII\u548cUnicode\u6709\u4ec0\u4e48\u533a\u522b\uff1f\u6c49\u5b57\u662f\u5982\u4f55\u663e\u793a\u7684\uff1f", "\n3.\u8bf4\u51fa\u4f60\u6700\u719f\u6089\u7684\u4e09\u79cd\u6392\u5e8f\u65b9\u6cd5\uff0c\u7528\u4f60\u6700\u719f\u6089\u7684\u8bed\u8a00\u5199\u51fa\u5176\u4e2d\u4e00\u79cd\u3002", "\n4.Bool flag", "\nFloot x\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u4e0e\u201c\u96f6\u503c\u201d\u6bd4\u8f83", "\nChar *p", "\n5.\u662f\u5426\u4e86\u89e3MVC\u6a21\u5f0f,\u5176\u4e2dM\u3001V\u3001C\u5404\u8868\u793a\u4ec0\u4e48\uff1f", "\n6.\u5217\u4e3e\u51fa\u4f60\u66fe\u7ecf\u7528\u8fc7\u6216\u8005\u4e86\u89e3\u7684\u51e0\u79cd\u8bbe\u8ba1\u6a21\u5f0f\uff1f", "\n7.int iVal1 = 0, iVal2 = 0;", "\nint * ipVal;", "\nipVal = &iVal1;\u00a0\u00a0\u00a0\u00a0\u00a0 What is the Value of\u00a0 ipVal\u00a0 = *ipVal\u00a0 =", "\nipVal = (int*)iVal1; What is the Value of\u00a0 ipVal\u00a0 =\u00a0\u00a0 *ipVal\u00a0 =", "\niVal2 = (int)&iVal1; What is the Value of\u00a0 ipVal\u00a0 =\u00a0\u00a0 *ipVal\u00a0 =", "\n8.void SwapAB(int A, int B)", "\n{", "\nA=B;", "\nB=A;", "\n}", "int main()", "\n{", "\nint A,B;", "\nA=1;", "\nB=2;", "\nSwapAB(A,B);", "\nreturn 0;\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 // A= ?, B= ?", "\n}", "\nWhat is the value of A and B ?", "\nWhat is the difference between STRUCTURE and OBJECT ORIENTED PROGRAMMING ?", "\nWhat is the difference between C and C++ ?", "\nWhat is an interpreter ?"], "title": "C\u8bed\u8a00\u9762\u8bd5\u9898"},
{"contents": ["1\uff09\u8bfb\u6587\u4ef6file1.txt\u7684\u5185\u5bb9\uff08\u4f8b\u5982\uff09\uff1a", "\n12", "\n34", "\n56", "\n\u8f93\u51fa\u5230file2.txt\uff1a", "\n56", "\n34", "\n12", "\n\uff08\u9006\u5e8f\uff09", "\u7b2c\u4e00\u9898,\u6ce8\u610f\u53ef\u589e\u957f\u6570\u7ec4\u7684\u5e94\u7528.", "\n#include <stdio.h>", "\n#include <stdlib.h>", "\nint main(void)", "\n{", "\nint MAX = 10;", "\nint *a = (int *)malloc(MAX * sizeof(int));", "\nint *b;", "FILE *fp1;", "\nFILE *fp2;", "\nfp1 = fopen(\u201ca.txt\u201d,\u201dr\u201d);", "\nif(fp1 == NULL)", "\n{printf(\u201cerror1\u2033);", "\nexit(-1);", "\n}", "\nfp2 = fopen(\u201cb.txt\u201d,\u201dw\u201d);", "\nif(fp2 == NULL)", "\n{printf(\u201cerror2\u2033);", "\nexit(-1);", "\n}", "\nint i = 0;", "\nint j = 0;", "\nwhile(fscanf(fp1,\u201d%d\u201d,&a[i]) != EOF)", "\n{", "\ni++;", "\nj++;", "\nif(i >= MAX)", "\n{", "\nMAX = 2 * MAX;", "\nb = (int*)realloc(a,MAX * sizeof(int));", "\nif(b == NULL)", "\n{", "\nprintf(\u201cerror3\u2033);", "\nexit(-1);", "\n}", "\na = b;", "\n}", "\n}", "\nfor(;\u2013j >= 0;)", "\nfprintf(fp2,\u201d%d\\n\u201d,a[j]);", "\nfclose(fp1);", "\nfclose(fp2);", "\nreturn 0;", "}", "\n\u53ef\u8c13\u662f\u53cd\u5e8f\u7684\u7ecf\u5178\u4f8b\u7a0b.", "\nvoid inverse(char *p)", "\n{", "\nif( *p = = \u2018\\0\u2032 )", "\nreturn;", "\ninverse( p+1 );", "\nprintf( \u201c%c\u201d, *p );", "\n}", "\nint main(int argc, char *argv[])", "\n{", "\ninverse(\u201cabc\\0\u2033);", "\nreturn 0;", "\n}", "\n\u501f\u7b7e\u4e86\u697c\u4e0a\u7684\u201c\u9012\u89c4\u53cd\u5411\u8f93\u51fa\u201d", "\n#include <stdio.h>", "\nvoid test(FILE *fread, FILE *fwrite)", "\n{", "\nchar buf[1024] = {0};", "\nif (!fgets(buf, sizeof(buf), fread))", "\nreturn;", "\ntest( fread, fwrite );", "\nfputs(buf, fwrite);", "\n}", "\nint main(int argc, char *argv[])", "\n{", "\nFILE *fr = NULL;", "\nFILE *fw = NULL;", "\nfr = fopen(\u201cdata\u201d, \u201crb\u201d);", "\nfw = fopen(\u201cdataout\u201d, \u201cwb\u201d);", "\ntest(fr, fw);", "\nfclose(fr);", "\nfclose(fw);", "\nreturn 0;", "\n}", "\n\u5728\u5bf9\u9f50\u4e3a4\u7684\u60c5\u51b5\u4e0b", "\nstruct BBB", "\n{", "\nlong num\uff1b", "\nchar *name;", "\nshort int data;", "\nchar ha;", "\nshort ba[5];", "\n}*p;", "\np=0\u00d71000000;", "\np+0\u00d7200=____;", "\n(Ulong)p+0\u00d7200=____;", "\n(char*)p+0\u00d7200=____;", "\n\u5e0c\u671b\u5404\u4f4d\u8fbe\u4eba\u7ed9\u51fa\u7b54\u6848\u548c\u539f\u56e0\uff0c\u8c22\u8c22\u62c9", "\n\u89e3\u7b54\uff1a\u5047\u8bbe\u572832\u4f4dCPU\u4e0a\uff0c", "\nsizeof(long) = 4 bytes", "\nsizeof(char *) = 4 bytes", "\nsizeof(short int) = sizeof(short) = 2 bytes", "\nsizeof(char) = 1 bytes", "\n\u7531\u4e8e\u662f4\u5b57\u8282\u5bf9\u9f50\uff0c", "\nsizeof(struct BBB) = sizeof(*p)", "\n= 4 + 4 + 2 + 1 + 1/*\u8865\u9f50*/ + 2*5 + 2/*\u8865\u9f50*/ = 24 bytes\u00a0 (\u7ecfDev-C++\u9a8c\u8bc1)", "\np=0\u00d71000000;", "\np+0\u00d7200=____;", "\n= 0\u00d71000000 + 0\u00d7200*24", "\n(Ulong)p+0\u00d7200=____;", "\n= 0\u00d71000000 + 0\u00d7200", "\n(char*)p+0\u00d7200=____;", "\n= 0\u00d71000000 + 0\u00d7200*4", "\n\u4f60\u53ef\u4ee5\u53c2\u8003\u4e00\u4e0b\u6307\u9488\u8fd0\u7b97\u7684\u7ec6\u8282", "2\u3001\u8fd0\u7528\u56db\u8272\u5b9a\u7406\uff0c\u4e3aN\u4e2a\u5c40\u57df\u4e3e\u884c\u914d\u8272\uff0c\u989c\u8272\u4e3a1\u30012\u30013\u30014\u56db\u79cd\uff0c\u53e6\u6709\u6570\u7ec4adj[][N]\uff0c\u5982adj[i][j]=1\u5219\u8868\u793ai\u533a\u57df\u4e0ej\u533a\u57df\u76f8\u90bb\uff0c\u6570\u7ec4color[N]\uff0c\u5982color[i]=1,\u8868\u793ai\u533a\u57df\u7684\u989c\u8272\u4e3a1\u53f7\u989c\u8272\u3002", "\n\u56db\u8272\u586b\u5145", "\n3\u3001\u7528\u9012\u5f52\u7b97\u6cd5\u5224\u65ad\u6570\u7ec4a[N]\u662f\u5426\u4e3a\u4e00\u4e2a\u9012\u589e\u6570\u7ec4\u3002", "\n\u9012\u5f52\u7684\u65b9\u6cd5\uff0c\u8bb0\u5f55\u5f53\u524d\u6700\u5927\u7684\uff0c\u5e76\u4e14\u5224\u65ad\u5f53\u524d\u7684\u662f\u5426\u6bd4\u8fd9\u4e2a\u8fd8\u5927\uff0c\u5927\u5219\u7ee7\u7eed\uff0c\u5426\u5219\u8fd4\u56defalse\u7ed3\u675f\uff1a", "\nbool fun( int a[], int n )", "\n{", "\nif( n= =1 )", "\nreturn true;", "\nif( n= =2 )", "\nreturn a[n-1] >= a[n-2];", "\nreturn fun( a,n-1) && ( a[n-1] >= a[n-2] );", "\n}", "\n4\u3001\u7f16\u5199\u7b97\u6cd5\uff0c\u4ece10\u4ebf\u4e2a\u6d6e\u70b9\u6570\u5f53\u4e2d\uff0c\u9009\u51fa\u5176\u4e2d\u6700\u5927\u768410000\u4e2a\u3002", "\n\u7528\u5916\u90e8\u6392\u5e8f\uff0c\u5728\u300a\u6570\u636e\u7ed3\u6784\u300b\u4e66\u4e0a\u6709", "\n\u300a\u8ba1\u7b97\u65b9\u6cd5\u5bfc\u8bba\u300b\u5728\u627e\u5230\u7b2cn\u5927\u7684\u6570\u7684\u7b97\u6cd5\u4e0a\u52a0\u5de5", "\n5\u3001\u7f16\u5199\u4e00unix\u7a0b\u5e8f\uff0c\u9632\u6b62\u50f5\u5c38\u8fdb\u7a0b\u7684\u51fa\u73b0.", "\n3.\u53ef\u6015\u7684\u9898\u76ee\u7ec8\u4e8e\u6765\u4e86", "\n\u8c61\u641c\u7d22\u7684\u8f93\u5165\u4fe1\u606f\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u7edf\u8ba1300\u4e07\u8f93\u5165\u4fe1\u606f\u4e2d\u7684\u6700\u70ed\u95e8\u7684\u524d\u5341\u6761\uff0c\u6211\u4eec\u6bcf\u6b21\u8f93\u5165\u7684\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e3a\u4e0d\u8d85\u8fc7255byte,\u5185\u5b58\u4f7f\u7528\u53ea\u67091G,", "\n\u8bf7\u63cf\u8ff0\u601d\u60f3\uff0c\u5199\u51fa\u7b97\u53d1\uff08c\u8bed\u8a00\uff09\uff0c\u7a7a\u95f4\u548c\u65f6\u95f4\u590d\u6742\u5ea6\uff0c", "\n4.\u56fd\u5185\u7684\u4e00\u4e9b\u5e16\u5427\uff0c\u5982baidu,\u6709\u51e0\u5341\u4e07\u4e2a\u4e3b\u9898\uff0c\u5047\u8bbe\u6bcf\u4e00\u4e2a\u4e3b\u9898\u90fd\u6709\u4e0a\u4ebf\u7684\u8ddf\u5e16\u5b50\uff0c\u600e\u4e48\u6837\u8bbe\u8ba1\u8fd9\u4e2a\u7cfb\u7edf\u901f\u5ea6\u6700\u597d\uff0c\u8bf7\u63cf\u8ff0\u601d\u60f3\uff0c\u5199\u51fa\u7b97\u53d1\uff08c\u8bed\u8a00\uff09\uff0c\u7a7a\u95f4\u548c\u65f6\u95f4\u590d\u6742\u5ea6\uff0c", "\n1.\u00a0\u00a0\u00a0 \u7b80\u8ff0\u4e00\u4e2aLinux\u9a71\u52a8\u7a0b\u5e8f\u7684\u4e3b\u8981\u6d41\u7a0b\u4e0e\u529f\u80fd\u3002", "\n2.\u00a0\u00a0\u00a0 \u8bf7\u5217\u4e3e\u4e00\u4e2a\u8f6f\u4ef6\u4e2d\u65f6\u95f4\u6362\u7a7a\u95f4\u6216\u8005\u7a7a\u95f4\u6362\u65f6\u95f4\u7684\u4f8b\u5b50\u3002", "\nvoid swap(int a,int b)", "\n{", "\nint c; c=a;a=b;b=a;", "\n}", "\n\u2014>\u7a7a\u4f18", "\nvoid swap(int a,int b)", "\n{", "\na=a+b;b=a-b;a=a-b;", "\n}", "\n6.\u00a0\u00a0\u00a0 \u8bf7\u95ee\u4e00\u4e0b\u7a0b\u5e8f\u5c06\u8f93\u51fa\u4ec0\u4e48\u7ed3\u679c\uff1f", "\nchar *RetMenory(void)", "\n{", "\nchar p[] = \u201chellow world\u201d;", "\nreturn p;", "\n}", "\nvoid Test(void)", "\n{", "\nchar *str = NULL;", "\nstr = RetMemory();", "\nprintf(str);", "\n}", "\nRetMenory\u6267\u884c\u5b8c\u6bd5\uff0cp\u8d44\u6e90\u88ab\u56de\u6536\uff0c\u6307\u5411\u672a\u77e5\u5730\u5740\u3002\u8fd4\u56de\u5730\u5740\uff0cstr\u7684\u5185\u5bb9\u5e94\u662f\u4e0d\u53ef\u9884\u6d4b\u7684, \u6253\u5370\u7684\u5e94\u8be5\u662fstr\u7684\u5730\u5740", "\u5199\u4e00\u4e2a\u51fd\u6570,\u5b83\u7684\u539f\u5f62\u662fint continumax(char *outputstr,char *intputstr)", "\n\u529f\u80fd\uff1a", "\n\u5728\u5b57\u7b26\u4e32\u4e2d\u627e\u51fa\u8fde\u7eed\u6700\u957f\u7684\u6570\u5b57\u4e32\uff0c\u5e76\u628a\u8fd9\u4e2a\u4e32\u7684\u957f\u5ea6\u8fd4\u56de\uff0c\u5e76\u628a\u8fd9\u4e2a\u6700\u957f\u6570\u5b57\u4e32\u4ed8\u7ed9\u5176\u4e2d\u4e00\u4e2a\u51fd\u6570\u53c2\u6570outputstr\u6240\u6307\u5185\u5b58\u3002\u4f8b\u5982\uff1a\u201dabcd12345ed125ss123456789\u2033\u7684\u9996\u5730\u5740\u4f20\u7ed9intputstr\u540e\uff0c\u51fd\u6570\u5c06\u8fd4\u56de", "\n9\uff0coutputstr\u6240\u6307\u7684\u503c\u4e3a123456789", "\nint continumax(char *outputstr, char *inputstr)", "\n{", "\nchar *in = inputstr, *out = outputstr, *temp, *final;", "\nint count = 0, maxlen = 0;", "\nwhile( *in != \u2018\\0\u2032 )", "\n{", "\nif( *in > 47 && *in < 58 )", "\n{", "\nfor(temp = in; *in > 47 && *in < 58 ; in++ )", "\ncount++;", "\n}", "\nelse", "\nin++;", "\nif( maxlen < count )", "\n{", "\nmaxlen = count;", "\ncount = 0;", "\nfinal = temp;", "\n}", "\n}", "\nfor(int i = 0; i < maxlen; i++)", "\n{", "\n*out = *final;", "\nout++;", "\nfinal++;", "\n}", "\n*out = \u2018\\0\u2032;", "\nreturn maxlen;", "\n}", "\n\u4e0d\u7528\u5e93\u51fd\u6570,\u7528C\u8bed\u8a00\u5b9e\u73b0\u5c06\u4e00\u6574\u578b\u6570\u5b57\u8f6c\u5316\u4e3a\u5b57\u7b26\u4e32", "\n\u65b9\u6cd51\uff1a", "\nint getlen(char *s){", "\nint n;", "\nfor(n = 0; *s != \u2018\\0\u2032; s++)", "\nn++;", "\nreturn n;", "\n}", "\nvoid reverse(char s[])", "\n{", "\nint c,i,j;", "\nfor(i = 0,j = getlen(s) \u2013 1; i < j; i++,j\u2013){", "\nc = s[i];", "\ns[i] = s[j];", "\ns[j] = c;", "\n}", "\n}", "\nvoid itoa(int n,char s[])", "\n{", "\nint i,sign;", "\nif((sign = n) < 0)", "\nn = -n;", "\ni = 0;", "\ndo{/*\u4ee5\u53cd\u5e8f\u751f\u6210\u6570\u5b57*/", "\ns[i++] = n%10 + \u20190\u2032;/*get next number*/", "\n}while((n /= 10) > 0);/*delete the number*/", "\nif(sign < 0)", "\ns[i++] = \u2018-\u2019;", "\ns[i] = \u2018\\0\u2032;", "\nreverse(s);", "\n}", "\n\u65b9\u6cd52:", "\n#include <iostream>", "\nusing namespace std;", "\nvoid itochar(int num);", "\nvoid itochar(int num)", "\n{", "\nint i = 0;", "\nint j ;", "\nchar stra[10];", "\nchar strb[10];", "\nwhile ( num )", "\n{", "\nstra[i++]=num%10+48;", "\nnum=num/10;", "\n}", "\nstra[i] = \u2018\\0\u2032;", "\nfor( j=0; j < i; j++)", "\n{", "\nstrb[j] = stra[i-j-1];", "\n}", "\nstrb[j] = \u2018\\0\u2032;", "\ncout<<strb<<endl;", "\n}", "\nint main()", "\n{", "\nint num;", "\ncin>>num;", "\nitochar(num);", "\nreturn 0;", "\n}"], "title": "C\u8bed\u8a00\u7f16\u7a0b\u9898"}]